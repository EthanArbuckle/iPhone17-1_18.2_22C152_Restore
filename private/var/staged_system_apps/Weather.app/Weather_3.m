uint64_t sub_1001E5FC0(int64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, unint64_t, uint64_t);
  uint64_t v16;
  void (**v17)(char *, uint64_t);
  uint64_t v18;
  int64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v23;
  int64_t v24;
  unint64_t v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v29;
  uint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  void (*v35)(char *, unint64_t, uint64_t);
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v3 = type metadata accessor for Location.Identifier();
  v4 = *(void *)(v3 - 8);
  result = __chkstk_darwin(v3);
  v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v1;
  v9 = *v1 + 56;
  v10 = -1 << *(unsigned char *)(*v1 + 32);
  v11 = (a1 + 1) & ~v10;
  if (((1 << v11) & *(void *)(v9 + 8 * (v11 >> 6))) != 0)
  {
    v34 = v1;
    v12 = ~v10;
    swift_retain();
    v13 = _HashTable.previousHole(before:)();
    if ((*(void *)(v9 + 8 * (v11 >> 6)) & (1 << v11)) != 0)
    {
      v36 = (v13 + 1) & v12;
      v15 = *(void (**)(char *, unint64_t, uint64_t))(v4 + 16);
      v14 = v4 + 16;
      v35 = v15;
      v16 = *(void *)(v14 + 56);
      v37 = v14;
      v38 = v16;
      v17 = (void (**)(char *, uint64_t))(v14 - 8);
      do
      {
        v18 = v9;
        v19 = v38 * v11;
        v35(v7, *(void *)(v8 + 48) + v38 * v11, v3);
        sub_100128EB4(&qword_100E63A28, (void (*)(uint64_t))&type metadata accessor for Location.Identifier);
        v20 = dispatch thunk of Hashable._rawHashValue(seed:)();
        (*v17)(v7, v3);
        v21 = v20 & v12;
        if (a1 >= (uint64_t)v36)
        {
          if (v21 < v36 || a1 < (uint64_t)v21)
          {
LABEL_20:
            v9 = v18;
            goto LABEL_24;
          }
        }
        else if (v21 < v36 && a1 < (uint64_t)v21)
        {
          goto LABEL_20;
        }
        v23 = *(void *)(v8 + 48);
        v24 = v38 * a1;
        v25 = v23 + v38 * a1;
        v26 = v23 + v19 + v38;
        v27 = v38 * a1 < v19 || v25 >= v26;
        v9 = v18;
        if (v27)
        {
          swift_arrayInitWithTakeFrontToBack();
LABEL_23:
          a1 = v11;
          goto LABEL_24;
        }
        a1 = v11;
        if (v24 != v19)
        {
          swift_arrayInitWithTakeBackToFront();
          goto LABEL_23;
        }
LABEL_24:
        v11 = (v11 + 1) & v12;
      }
      while (((*(void *)(v9 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
    }
    *(void *)(v9 + (((unint64_t)a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
    result = swift_release();
    v1 = v34;
  }
  else
  {
    *(void *)(v9 + (((unint64_t)a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
  }
  v29 = *v1;
  v30 = *(void *)(*v1 + 16);
  v31 = __OFSUB__(v30, 1);
  v32 = v30 - 1;
  if (v31)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v29 + 16) = v32;
    ++*(_DWORD *)(v29 + 36);
  }
  return result;
}

_OWORD *sub_1001E62B0(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_100156908((uint64_t)a1, (void (*)(void))type metadata accessor for LocationWeatherDataState);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      *a1 = *a2;
      v8 = (int *)type metadata accessor for WeatherData(0);
      uint64_t v9 = v8[5];
      v10 = (char *)a1 + v9;
      v11 = (char *)a2 + v9;
      uint64_t v12 = type metadata accessor for Locale();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v11, 1, v12))
      {
        uint64_t v13 = sub_10017DF08(&qword_100E63730);
        memcpy(v10, v11, *(void *)(*(void *)(v13 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v10, v11, v12);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v10, 0, 1, v12);
      }
      uint64_t v15 = v8[6];
      v16 = (char *)a1 + v15;
      v17 = (char *)a2 + v15;
      uint64_t v18 = type metadata accessor for WeatherDataModel();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
      uint64_t v19 = v8[7];
      v20 = (char *)a1 + v19;
      v21 = (char *)a2 + v19;
      uint64_t v22 = sub_10017DF08(&qword_100E63738);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v21, 1, v22))
      {
        uint64_t v23 = type metadata accessor for WeatherData.CachingState(0);
        memcpy(v20, v21, *(void *)(*(void *)(v23 - 8) + 64));
      }
      else
      {
        uint64_t v24 = type metadata accessor for Date();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 32))(v20, v21, v24);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v20, 0, 1, v22);
      }
      uint64_t v25 = v8[8];
      v26 = (char *)a1 + v25;
      v27 = (char *)a2 + v25;
      uint64_t v28 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v29 = type metadata accessor for WeatherStatisticsModel();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 32))(v26, v27, v29);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v26, v27, *(void *)(*(void *)(v28 - 8) + 64));
      }
      uint64_t v30 = v8[9];
      v31 = (char *)a1 + v30;
      v32 = (char *)a2 + v30;
      uint64_t v33 = type metadata accessor for WeatherDataOverrides();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v32, 1, v33))
      {
        uint64_t v34 = sub_10017DF08(&qword_100E63740);
        memcpy(v31, v32, *(void *)(*(void *)(v34 - 8) + 64));
      }
      else
      {
        uint64_t v35 = type metadata accessor for Date();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v32, 1, v35))
        {
          uint64_t v36 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
          memcpy(v31, v32, *(void *)(*(void *)(v36 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 32))(v31, v32, v35);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v31, 0, 1, v35);
        }
        uint64_t v37 = *(int *)(v33 + 20);
        v38 = &v31[v37];
        v39 = &v32[v37];
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v39, 1, v35))
        {
          uint64_t v40 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
          memcpy(v38, v39, *(void *)(*(void *)(v40 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 32))(v38, v39, v35);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v38, 0, 1, v35);
        }
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v31, 0, 1, v33);
      }
      uint64_t v121 = sub_10017DF08(&qword_100E63748);
      uint64_t v41 = *(int *)(v121 + 48);
      v42 = (char *)a1 + v41;
      v43 = (char *)a2 + v41;
      uint64_t v44 = type metadata accessor for UUID();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v44 - 8) + 32))(v42, v43, v44);
      uint64_t v45 = type metadata accessor for PreprocessedWeatherData();
      *(void *)&v42[*(int *)(v45 + 20)] = *(void *)&v43[*(int *)(v45 + 20)];
      v123 = (int *)v45;
      uint64_t v46 = *(int *)(v45 + 24);
      v47 = &v42[v46];
      v48 = &v43[v46];
      long long v49 = *(_OWORD *)&v43[v46 + 16];
      *(_OWORD *)v47 = *(_OWORD *)&v43[v46];
      *((_OWORD *)v47 + 1) = v49;
      *((_OWORD *)v47 + 2) = *(_OWORD *)&v43[v46 + 32];
      uint64_t v50 = type metadata accessor for FeelsLikeComponentPreprocessedDataModel();
      uint64_t v51 = *(int *)(v50 + 28);
      v52 = &v47[v51];
      v53 = &v48[v51];
      uint64_t v54 = type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference(0);
      v122 = v42;
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v53, 1, v54))
      {
        uint64_t v55 = sub_10017DF08(&qword_100E63750);
        memcpy(v52, v53, *(void *)(*(void *)(v55 - 8) + 64));
      }
      else
      {
        *(_OWORD *)v52 = *(_OWORD *)v53;
        uint64_t v56 = *(int *)(v54 + 20);
        v57 = &v52[v56];
        v58 = &v53[v56];
        uint64_t v59 = type metadata accessor for TemperatureScaleConfiguration();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v59 - 8) + 32))(v57, v58, v59);
        v60 = (int *)type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
        *(void *)&v57[v60[5]] = *(void *)&v58[v60[5]];
        *(void *)&v57[v60[6]] = *(void *)&v58[v60[6]];
        *(void *)&v57[v60[7]] = *(void *)&v58[v60[7]];
        *(_OWORD *)&v57[v60[8]] = *(_OWORD *)&v58[v60[8]];
        v57[v60[9]] = v58[v60[9]];
        v42 = v122;
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v52, 0, 1, v54);
      }
      *(_OWORD *)&v47[*(int *)(v50 + 32)] = *(_OWORD *)&v48[*(int *)(v50 + 32)];
      uint64_t v61 = v123[7];
      v62 = &v42[v61];
      v63 = &v43[v61];
      *(void *)&v42[v61] = *(void *)&v43[v61];
      uint64_t v64 = *(int *)(type metadata accessor for HourlyForecastComponentPreprocessedDataModel() + 20);
      v65 = &v62[v64];
      v66 = &v63[v64];
      uint64_t v67 = type metadata accessor for WeatherDescription();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v66, 1, v67))
      {
        uint64_t v68 = sub_10017DF08(&qword_100E63758);
        memcpy(v65, v66, *(void *)(*(void *)(v68 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v67 - 8) + 32))(v65, v66, v67);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v65, 0, 1, v67);
      }
      uint64_t v69 = v123[8];
      v70 = &v42[v69];
      v71 = &v43[v69];
      long long v72 = *(_OWORD *)&v43[v69 + 16];
      *(_OWORD *)v70 = *(_OWORD *)&v43[v69];
      *((_OWORD *)v70 + 1) = v72;
      long long v73 = *(_OWORD *)&v43[v69 + 48];
      *((_OWORD *)v70 + 2) = *(_OWORD *)&v43[v69 + 32];
      *((_OWORD *)v70 + 3) = v73;
      uint64_t v74 = *(int *)(type metadata accessor for ListPreprocessedDataModel() + 32);
      v75 = &v70[v74];
      v76 = &v71[v74];
      uint64_t v77 = type metadata accessor for Date();
      v119 = *(void (**)(char *, char *))(*(void *)(v77 - 8) + 32);
      uint64_t v120 = v77;
      v119(v75, v76);
      uint64_t v78 = type metadata accessor for WeatherConditionBackgroundTimeData();
      uint64_t v79 = *(int *)(v78 + 20);
      v80 = &v75[v79];
      v81 = &v76[v79];
      uint64_t v82 = type metadata accessor for Elevation();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v81, 1, v82))
      {
        uint64_t v83 = sub_10017DF08(&qword_100E63760);
        memcpy(v80, v81, *(void *)(*(void *)(v83 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v82 - 8) + 32))(v80, v81, v82);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v80, 0, 1, v82);
      }
      uint64_t v84 = *(int *)(v78 + 24);
      v85 = &v75[v84];
      v86 = &v76[v84];
      uint64_t v87 = type metadata accessor for BackgroundMoonData();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v86, 1, v87))
      {
        uint64_t v88 = sub_10017DF08(&qword_100E63768);
        memcpy(v85, v86, *(void *)(*(void *)(v88 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v87 - 8) + 32))(v85, v86, v87);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v85, 0, 1, v87);
      }
      memcpy(&v122[v123[9]], &v43[v123[9]], 0x70uLL);
      uint64_t v89 = v123[10];
      v90 = &v122[v89];
      v91 = &v43[v89];
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v67 - 8) + 32))(&v122[v89], &v43[v89], v67);
      uint64_t v92 = type metadata accessor for UVIndexComponentPreprocessedDataModel();
      *(_OWORD *)&v90[*(int *)(v92 + 20)] = *(_OWORD *)&v91[*(int *)(v92 + 20)];
      uint64_t v93 = v123[11];
      v94 = &v122[v93];
      v95 = &v43[v93];
      long long v96 = *((_OWORD *)v95 + 1);
      *(_OWORD *)v94 = *(_OWORD *)v95;
      *((_OWORD *)v94 + 1) = v96;
      *((_OWORD *)v94 + 2) = *((_OWORD *)v95 + 2);
      uint64_t v97 = v123[12];
      v98 = &v122[v97];
      v99 = &v43[v97];
      uint64_t v100 = type metadata accessor for PressureTrend();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v100 - 8) + 32))(v98, v99, v100);
      v101 = (int *)type metadata accessor for PressureComponentPreprocessedDataModel();
      *(_OWORD *)&v98[v101[5]] = *(_OWORD *)&v99[v101[5]];
      *(_OWORD *)&v98[v101[6]] = *(_OWORD *)&v99[v101[6]];
      *(_OWORD *)&v98[v101[7]] = *(_OWORD *)&v99[v101[7]];
      *(void *)&v98[v101[8]] = *(void *)&v99[v101[8]];
      *(_OWORD *)&v98[v101[9]] = *(_OWORD *)&v99[v101[9]];
      memcpy(&v122[v123[13]], &v43[v123[13]], 0xE8uLL);
      uint64_t v102 = v123[14];
      v103 = &v122[v102];
      v104 = &v43[v102];
      ((void (*)(char *, char *, uint64_t))v119)(&v122[v102], &v43[v102], v120);
      uint64_t v105 = *(int *)(v78 + 20);
      v106 = &v103[v105];
      v107 = &v104[v105];
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v104[v105], 1, v82))
      {
        uint64_t v108 = sub_10017DF08(&qword_100E63760);
        memcpy(v106, v107, *(void *)(*(void *)(v108 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v82 - 8) + 32))(v106, v107, v82);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v106, 0, 1, v82);
      }
      uint64_t v109 = *(int *)(v78 + 24);
      v110 = &v103[v109];
      v111 = &v104[v109];
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v111, 1, v87))
      {
        uint64_t v112 = sub_10017DF08(&qword_100E63768);
        memcpy(v110, v111, *(void *)(*(void *)(v112 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v87 - 8) + 32))(v110, v111, v87);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v110, 0, 1, v87);
      }
      memcpy(&v122[v123[15]], &v43[v123[15]], 0x70uLL);
      uint64_t v113 = *(int *)(v121 + 64);
      v114 = (char *)a1 + v113;
      v115 = (char *)a2 + v113;
      uint64_t v116 = type metadata accessor for NewsDataModel();
      if (swift_getEnumCaseMultiPayload())
      {
        memcpy(v114, v115, *(void *)(*(void *)(v116 - 8) + 64));
      }
      else
      {
        uint64_t v117 = type metadata accessor for News();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v117 - 8) + 32))(v114, v115, v117);
        swift_storeEnumTagMultiPayload();
      }
      goto LABEL_47;
    }
    if (!EnumCaseMultiPayload)
    {
      uint64_t v7 = type metadata accessor for NewsDataModel();
      if (swift_getEnumCaseMultiPayload())
      {
        memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
      }
      else
      {
        uint64_t v14 = type metadata accessor for News();
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v14 - 8) + 32))(a1, a2, v14);
        swift_storeEnumTagMultiPayload();
      }
LABEL_47:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

void *sub_1001E6F7C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, const void *a6@<X5>, uint64_t a7@<X6>, _OWORD *a8@<X7>, uint64_t a9@<X8>, uint64_t a10, const void *a11, uint64_t a12, const void *a13)
{
  type metadata accessor for UUID();
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v22 + 32))(a9, a1);
  uint64_t v23 = (int *)type metadata accessor for PreprocessedWeatherData();
  *(void *)(a9 + v23[5]) = a2;
  sub_1001E71E8(a3, a9 + v23[6], (void (*)(void))type metadata accessor for FeelsLikeComponentPreprocessedDataModel);
  sub_1001E71E8(a4, a9 + v23[7], (void (*)(void))type metadata accessor for HourlyForecastComponentPreprocessedDataModel);
  sub_1001E71E8(a5, a9 + v23[8], (void (*)(void))type metadata accessor for ListPreprocessedDataModel);
  memcpy((void *)(a9 + v23[9]), a6, 0x70uLL);
  sub_1001E71E8(a7, a9 + v23[10], (void (*)(void))type metadata accessor for UVIndexComponentPreprocessedDataModel);
  uint64_t v24 = (_OWORD *)(a9 + v23[11]);
  long long v25 = a8[1];
  *uint64_t v24 = *a8;
  v24[1] = v25;
  v24[2] = a8[2];
  sub_1001E71E8(a10, a9 + v23[12], (void (*)(void))type metadata accessor for PressureComponentPreprocessedDataModel);
  memcpy((void *)(a9 + v23[13]), a11, 0xE8uLL);
  sub_1001E71E8(a12, a9 + v23[14], (void (*)(void))type metadata accessor for WeatherConditionBackgroundPreprocessedDataModel);
  v26 = (void *)(a9 + v23[15]);

  return memcpy(v26, a13, 0x70uLL);
}

uint64_t sub_1001E7180(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1001E71E8(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(a2, a1);
  return a2;
}

uint64_t sub_1001E7248(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for PerformLocationComponentHeaderInputModelAction();
  __chkstk_darwin(v2 - 8);
  sub_1001F3C94(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1001E738C();
  EnvironmentValues.subscript.setter();
  return sub_1001E72E8(a1);
}

uint64_t sub_1001E72E8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for PerformLocationComponentHeaderInputModelAction();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1001E7344()
{
  sub_1001E738C();

  return EnvironmentValues.subscript.getter();
}

unint64_t sub_1001E738C()
{
  unint64_t result = qword_100E9E718;
  if (!qword_100E9E718)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9E718);
  }
  return result;
}

uint64_t sub_1001E73D8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for LocationComponentHeaderMetrics(0);
  __chkstk_darwin(v2 - 8);
  sub_1001626E0();
  sub_1001F0424(a1, v4 - v3, (void (*)(void))type metadata accessor for LocationComponentHeaderMetrics);
  sub_1001AECE0();
  EnvironmentValues.subscript.setter();
  return sub_1001F4EE0(a1, (void (*)(void))type metadata accessor for LocationComponentHeaderMetrics);
}

uint64_t sub_1001E7498(uint64_t a1)
{
  return sub_100199EE0(a1, (void (*)(void))sub_1001CF884);
}

uint64_t sub_1001E74B8()
{
  return sub_10018C9CC((void (*)(void))sub_1001CF884);
}

uint64_t sub_1001E74D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10017DF08(&qword_100EABE80);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001E7540(uint64_t a1)
{
  uint64_t v2 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1001E75A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001E7608@<X0>(void (**a1)(void, void, void)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v186 = (void (**)(void, void, void))a2;
  v190 = (void (**)(uint64_t, uint64_t))a3;
  uint64_t v197 = type metadata accessor for NewsArticle();
  sub_100162E4C();
  __chkstk_darwin(v5);
  sub_100109314();
  v200 = (void (**)(void, void, void))v6;
  uint64_t v199 = type metadata accessor for Article();
  sub_100179C0C();
  uint64_t v185 = v7;
  __chkstk_darwin(v8);
  sub_100109314();
  uint64_t v198 = v9;
  uint64_t v10 = sub_10017DF08(&qword_100E855B8);
  __chkstk_darwin(v10 - 8);
  sub_100162EF8();
  uint64_t v181 = v11;
  sub_1001626D4();
  __chkstk_darwin(v12);
  uint64_t v184 = (uint64_t)v170 - v13;
  uint64_t v201 = type metadata accessor for ArticleModel();
  sub_100179C0C();
  uint64_t v194 = v14;
  __chkstk_darwin(v15);
  sub_100162EF8();
  uint64_t v188 = v16;
  sub_1001626D4();
  __chkstk_darwin(v17);
  sub_100109770();
  uint64_t v189 = v18;
  sub_1001626D4();
  __chkstk_darwin(v19);
  sub_100109770();
  v195 = (void *)v20;
  sub_1001626D4();
  __chkstk_darwin(v21);
  sub_100109770();
  uint64_t v191 = v22;
  sub_1001626D4();
  __chkstk_darwin(v23);
  sub_100109770();
  uint64_t v196 = v24;
  sub_1001626D4();
  __chkstk_darwin(v25);
  sub_100109770();
  v192 = v26;
  sub_1001626D4();
  __chkstk_darwin(v27);
  sub_100109770();
  v193 = v28;
  sub_1001626D4();
  __chkstk_darwin(v29);
  sub_100109770();
  uint64_t v180 = v30;
  sub_1001626D4();
  __chkstk_darwin(v31);
  uint64_t v33 = (char *)v170 - v32;
  __chkstk_darwin(v34);
  uint64_t v36 = (char *)v170 - v35;
  __chkstk_darwin(v37);
  uint64_t v182 = (uint64_t)v170 - v38;
  uint64_t v39 = sub_10017DF08(&qword_100E855C0);
  __chkstk_darwin(v39 - 8);
  sub_1001626E0();
  uint64_t v42 = v41 - v40;
  uint64_t v43 = type metadata accessor for NewsComponentPosition();
  sub_100162E4C();
  __chkstk_darwin(v44);
  sub_1001626E0();
  uint64_t v47 = v46 - v45;
  uint64_t v48 = type metadata accessor for NewsConfiguration();
  sub_100179C0C();
  uint64_t v50 = v49;
  __chkstk_darwin(v51);
  sub_1001626E0();
  uint64_t v54 = v53 - v52;
  uint64_t v187 = v3;
  sub_10000CC10();
  char v55 = NewsConfiguration.enabled.getter();
  (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v54, v48);
  if (v55)
  {
    uint64_t v183 = v43;
    if (v186[2])
    {
      sub_1006295D8((uint64_t)a1, (uint64_t)v186, v42);
      uint64_t v56 = v183;
      if (_s7Weather24LocationCompositionStateOwet_0(v42, 1, v183) != 1)
      {
        sub_10062B380(v42, v47, (void (*)(void))type metadata accessor for NewsComponentPosition);
        uint64_t v85 = (uint64_t)v190;
        sub_10062B380(v47, (uint64_t)v190, (void (*)(void))type metadata accessor for NewsComponentPosition);
        uint64_t v82 = v85;
        uint64_t v83 = 0;
        uint64_t v84 = v56;
        return _s7Weather24LocationCompositionStateOwst_0(v82, v83, 1, v84);
      }
      sub_1001781AC(v42, &qword_100E855C0);
    }
    uint64_t v57 = sub_10017DF08(&qword_100E855C8);
    uint64_t v58 = type metadata accessor for ArticlePlacementLocation();
    sub_100179C0C();
    uint64_t v60 = v59;
    uint64_t v62 = *(void *)(v61 + 72);
    uint64_t v63 = *(unsigned __int8 *)(v59 + 80);
    uint64_t v64 = (v63 + 32) & ~v63;
    uint64_t v172 = v62;
    uint64_t v65 = v64 + v62;
    uint64_t v177 = v57;
    uint64_t v174 = v63 | 7;
    uint64_t v66 = swift_allocObject();
    long long v173 = xmmword_100C251B0;
    *(_OWORD *)(v66 + 16) = xmmword_100C251B0;
    uint64_t v176 = v64;
    uint64_t v67 = *(void (**)(void))(v60 + 104);
    unsigned int v171 = enum case for ArticlePlacementLocation.severe(_:);
    uint64_t v179 = v58;
    uint64_t v178 = v60 + 104;
    v175 = (void (*)(uint64_t, void, uint64_t))v67;
    v67(v66 + v64);
    v186 = a1;
    uint64_t v68 = (uint64_t)sub_1001E870C((void *)v66);
    uint64_t v69 = v68;
    uint64_t v70 = *(void *)(v68 + 16);
    if (!v70)
    {
      uint64_t v80 = 1;
      uint64_t v81 = v184;
      goto LABEL_17;
    }
    v170[2] = v66;
    v170[3] = v65;
    sub_10017E6E0();
    v170[1] = v69;
    uint64_t v72 = v69 + v71;
    long long v73 = (void (**)(uint64_t, char *, uint64_t))(v185 + 32);
    uint64_t v75 = *(void *)(v74 + 72);
    while (1)
    {
      sub_10062B320(v72, (uint64_t)v36, (void (*)(void))type metadata accessor for ArticleModel);
      sub_10062B320((uint64_t)v36, (uint64_t)v33, (void (*)(void))type metadata accessor for ArticleModel);
      if (swift_getEnumCaseMultiPayload() != 1) {
        break;
      }
      a1 = v200;
      sub_10062B380((uint64_t)v33, (uint64_t)v200, (void (*)(void))type metadata accessor for NewsArticle);
      sub_10019FE38();
      sub_10062D02C((uint64_t)a1, (void (*)(void))type metadata accessor for NewsArticle);
      uint64_t v76 = *(void *)(v64 + 16);
      swift_bridgeObjectRelease();
      if (!v76) {
        goto LABEL_16;
      }
LABEL_11:
      uint64_t v68 = sub_10062D02C((uint64_t)v36, (void (*)(void))type metadata accessor for ArticleModel);
      v72 += v75;
      if (!--v70)
      {
        uint64_t v80 = 1;
        uint64_t v81 = v184;
        goto LABEL_17;
      }
    }
    uint64_t v77 = v198;
    a1 = (void (**)(void, void, void))v199;
    (*v73)(v198, v33, v199);
    Article.phenomena.getter();
    uint64_t v78 = sub_1001A0B18();
    v79(v78);
    uint64_t v64 = *(void *)(v77 + 16);
    swift_bridgeObjectRelease();
    if (v64) {
      goto LABEL_11;
    }
LABEL_16:
    uint64_t v81 = v184;
    uint64_t v68 = sub_10062B380((uint64_t)v36, v184, (void (*)(void))type metadata accessor for ArticleModel);
    uint64_t v80 = 0;
LABEL_17:
    sub_1001D1B30(v68, v80);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    int v86 = _s7Weather24LocationCompositionStateOwet_0(v81, 1, (uint64_t)a1);
    uint64_t v88 = v190;
    uint64_t v87 = v191;
    if (v86 == 1)
    {
      sub_1001781AC(v81, &qword_100E855B8);
      uint64_t v89 = swift_allocObject();
      *(_OWORD *)(v89 + 16) = v173;
      uint64_t v90 = enum case for ArticlePlacementLocation.trend(_:);
      v175(v89 + v176, enum case for ArticlePlacementLocation.trend(_:), v179);
      uint64_t v91 = (uint64_t)sub_1001E870C((void *)v89);
      uint64_t v92 = v91;
      uint64_t v93 = *(void *)(v91 + 16);
      if (!v93)
      {
        uint64_t v107 = 1;
        uint64_t v108 = v181;
        goto LABEL_30;
      }
      LODWORD(v184) = v90;
      a1 = v193;
      sub_10017E6E0();
      uint64_t v95 = v92 + v94;
      long long v96 = (void (**)(uint64_t, uint64_t, uint64_t))(v185 + 32);
      uint64_t v98 = *(void *)(v97 + 72);
      while (2)
      {
        sub_10062B320(v95, (uint64_t)a1, (void (*)(void))type metadata accessor for ArticleModel);
        uint64_t v99 = (uint64_t)a1;
        uint64_t v100 = (uint64_t)v192;
        sub_10062B320(v99, (uint64_t)v192, (void (*)(void))type metadata accessor for ArticleModel);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          uint64_t v101 = v100;
          a1 = v200;
          sub_10062B380(v101, (uint64_t)v200, (void (*)(void))type metadata accessor for NewsArticle);
          sub_10019FE38();
          sub_10062D02C((uint64_t)a1, (void (*)(void))type metadata accessor for NewsArticle);
          uint64_t v102 = *(void *)(v64 + 16);
          swift_bridgeObjectRelease();
          if (!v102) {
            break;
          }
          goto LABEL_24;
        }
        uint64_t v103 = v198;
        uint64_t v104 = v100;
        a1 = (void (**)(void, void, void))v199;
        (*v96)(v198, v104, v199);
        Article.phenomena.getter();
        uint64_t v105 = sub_1001A0B18();
        v106(v105);
        uint64_t v64 = *(void *)(v103 + 16);
        swift_bridgeObjectRelease();
        if (v64)
        {
LABEL_24:
          a1 = v193;
          uint64_t v91 = sub_10062D02C((uint64_t)v193, (void (*)(void))type metadata accessor for ArticleModel);
          v95 += v98;
          if (!--v93)
          {
            uint64_t v107 = 1;
            uint64_t v88 = v190;
            uint64_t v87 = v191;
            uint64_t v108 = v181;
            goto LABEL_29;
          }
          continue;
        }
        break;
      }
      uint64_t v108 = v181;
      uint64_t v91 = sub_10062B380((uint64_t)v193, v181, (void (*)(void))type metadata accessor for ArticleModel);
      uint64_t v107 = 0;
      uint64_t v88 = v190;
      uint64_t v87 = v191;
LABEL_29:
      uint64_t v90 = v184;
LABEL_30:
      sub_1001D1B30(v91, v107);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      int v110 = _s7Weather24LocationCompositionStateOwet_0(v108, 1, (uint64_t)a1);
      unint64_t v111 = v183;
      if (v110 == 1)
      {
        sub_1001781AC(v108, &qword_100E855B8);
        uint64_t v112 = v172;
        uint64_t v113 = v176;
        uint64_t v114 = swift_allocObject();
        *(_OWORD *)(v114 + 16) = xmmword_100C25ED0;
        uint64_t v115 = v114 + v113;
        uint64_t v116 = v90;
        uint64_t v117 = v179;
        v118 = v175;
        v175(v115, v116, v179);
        v118(v115 + v112, v171, v117);
        v119 = sub_1001E870C((void *)v114);
        swift_setDeallocating();
        sub_100215044();
        uint64_t v120 = (void (**)(uint64_t, uint64_t, uint64_t))_swiftEmptyArrayStorage;
        v203 = _swiftEmptyArrayStorage;
        uint64_t v121 = v119[2];
        if (v121)
        {
          unint64_t v111 = 0;
          v193 = (void (**)(uint64_t, uint64_t, uint64_t))(v185 + 32);
          uint64_t v88 = (void (**)(uint64_t, uint64_t))(v185 + 8);
          while (1)
          {
            if (v111 >= v119[2])
            {
              __break(1u);
              goto LABEL_71;
            }
            unint64_t v122 = (*(unsigned __int8 *)(v194 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v194 + 80);
            uint64_t v123 = *(void *)(v194 + 72);
            uint64_t v124 = v196;
            sub_10062B320((uint64_t)v119 + v122 + v123 * v111, v196, (void (*)(void))type metadata accessor for ArticleModel);
            sub_10062B320(v124, v87, (void (*)(void))type metadata accessor for ArticleModel);
            if (swift_getEnumCaseMultiPayload() == 1)
            {
              uint64_t v125 = (uint64_t)v200;
              sub_10062B380(v87, (uint64_t)v200, (void (*)(void))type metadata accessor for NewsArticle);
              uint64_t v126 = *(void *)(v125 + *(int *)(v197 + 44));
              swift_bridgeObjectRetain();
              sub_10062D02C(v125, (void (*)(void))type metadata accessor for NewsArticle);
              uint64_t v127 = *(void *)(v126 + 16);
              swift_bridgeObjectRelease();
              if (v127) {
                goto LABEL_36;
              }
            }
            else
            {
              uint64_t v130 = v198;
              uint64_t v131 = v199;
              (*v193)(v198, v87, v199);
              uint64_t v132 = Article.phenomena.getter();
              (*v88)(v130, v131);
              uint64_t v133 = *(void *)(v132 + 16);
              swift_bridgeObjectRelease();
              if (v133)
              {
LABEL_36:
                sub_10062B380(v196, (uint64_t)v195, (void (*)(void))type metadata accessor for ArticleModel);
                v128 = v203;
                if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                {
                  sub_1007F3214();
                  v128 = v203;
                }
                unint64_t v129 = v128[2];
                if (v129 >= v128[3] >> 1)
                {
                  sub_1007F3214();
                  v128 = v203;
                }
                v128[2] = v129 + 1;
                sub_10062B380((uint64_t)v195, (uint64_t)v128 + v122 + v129 * v123, (void (*)(void))type metadata accessor for ArticleModel);
                uint64_t v87 = v191;
                goto LABEL_43;
              }
            }
            sub_10062D02C(v196, (void (*)(void))type metadata accessor for ArticleModel);
LABEL_43:
            if (v121 == ++v111)
            {
              uint64_t v120 = (void (**)(uint64_t, uint64_t, uint64_t))v203;
              uint64_t v88 = v190;
              unint64_t v111 = v183;
              break;
            }
          }
        }
        swift_bridgeObjectRelease();
        if (v120[2])
        {
          if (qword_100E62868 != -1) {
            swift_once();
          }
          uint64_t v135 = type metadata accessor for Logger();
          sub_1002102B0(v135, (uint64_t)qword_100F52040);
          swift_retain();
          v136 = Logger.logObject.getter();
          int v137 = static os_log_type_t.default.getter();
          BOOL v138 = os_log_type_enabled(v136, (os_log_type_t)v137);
          uint64_t v139 = v188;
          if (v138)
          {
            LODWORD(v196) = v137;
            v140 = (_DWORD *)swift_slowAlloc();
            v195 = (void *)swift_slowAlloc();
            v203 = v195;
            uint64_t v197 = (uint64_t)v140;
            _DWORD *v140 = 136315138;
            uint64_t v141 = (uint64_t)v120[2];
            if (v141)
            {
              v192 = v136;
              v202 = _swiftEmptyArrayStorage;
              sub_1001EA6A0(0, v141, 0);
              sub_10017E6E0();
              v193 = v120;
              uint64_t v143 = (uint64_t)v120 + v142;
              uint64_t v145 = *(void *)(v144 + 72);
              v146 = (void (**)(uint64_t, uint64_t, uint64_t))(v185 + 32);
              v147 = (void (**)(uint64_t, uint64_t))(v185 + 8);
              do
              {
                uint64_t v148 = v189;
                sub_10062B320(v143, v189, (void (*)(void))type metadata accessor for ArticleModel);
                sub_10062B320(v148, v139, (void (*)(void))type metadata accessor for ArticleModel);
                if (swift_getEnumCaseMultiPayload() == 1)
                {
                  uint64_t v149 = v139;
                  v150 = (uint64_t *)v200;
                  sub_10062B380(v149, (uint64_t)v200, (void (*)(void))type metadata accessor for NewsArticle);
                  uint64_t v152 = *v150;
                  uint64_t v151 = v150[1];
                  swift_bridgeObjectRetain();
                  sub_10062D02C((uint64_t)v150, (void (*)(void))type metadata accessor for NewsArticle);
                }
                else
                {
                  uint64_t v153 = v198;
                  uint64_t v154 = v139;
                  uint64_t v155 = v199;
                  (*v146)(v198, v154, v199);
                  uint64_t v152 = Article.id.getter();
                  uint64_t v151 = v156;
                  (*v147)(v153, v155);
                }
                sub_10062D02C(v189, (void (*)(void))type metadata accessor for ArticleModel);
                v157 = v202;
                if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                {
                  sub_1001EA6A0(0, v157[2] + 1, 1);
                  v157 = v202;
                }
                unint64_t v159 = v157[2];
                unint64_t v158 = v157[3];
                if (v159 >= v158 >> 1)
                {
                  sub_1001EA6A0(v158 > 1, v159 + 1, 1);
                  v157 = v202;
                }
                v157[2] = v159 + 1;
                v160 = &v157[2 * v159];
                v160[4] = v152;
                v160[5] = v151;
                v143 += v145;
                --v141;
                uint64_t v139 = v188;
              }
              while (v141);
              uint64_t v88 = v190;
              unint64_t v111 = v183;
              v136 = v192;
            }
            v161 = (uint8_t *)v197;
            uint64_t v162 = Array.description.getter();
            unint64_t v164 = v163;
            swift_bridgeObjectRelease();
            v202 = (void *)sub_10016414C(v162, v164, (uint64_t *)&v203);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_release_n();
            swift_bridgeObjectRelease();
            _os_log_impl((void *)&_mh_execute_header, v136, (os_log_type_t)v196, "NewsArticleComponentFactory - Articles with phenomena but no matching alert are hidden. articles=%s", v161, 0xCu);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();
          }
          else
          {

            swift_release_n();
          }
        }
        else
        {
          swift_release();
        }
        if (qword_100E62868 != -1) {
LABEL_71:
        }
          swift_once();
        uint64_t v165 = type metadata accessor for Logger();
        sub_1002102B0(v165, (uint64_t)qword_100F52040);
        v166 = Logger.logObject.getter();
        os_log_type_t v167 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v166, v167))
        {
          v168 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v168 = 0;
          _os_log_impl((void *)&_mh_execute_header, v166, v167, "NewsArticleComponentFactory - No eligible articles found", v168, 2u);
          swift_slowDealloc();
        }

        uint64_t v82 = (uint64_t)v88;
        uint64_t v83 = 1;
      }
      else
      {
        uint64_t v134 = v180;
        sub_10062B380(v108, v180, (void (*)(void))type metadata accessor for ArticleModel);
        sub_10062AE2C(v134, (uint64_t)v88);
        sub_10062D02C(v134, (void (*)(void))type metadata accessor for ArticleModel);
        uint64_t v82 = (uint64_t)v88;
        uint64_t v83 = 0;
      }
      uint64_t v84 = v111;
    }
    else
    {
      uint64_t v109 = v182;
      sub_10062B380(v81, v182, (void (*)(void))type metadata accessor for ArticleModel);
      sub_10062A994(v109, (uint64_t)v88);
      sub_10062D02C(v109, (void (*)(void))type metadata accessor for ArticleModel);
      uint64_t v82 = (uint64_t)v88;
      uint64_t v83 = 0;
      uint64_t v84 = v183;
    }
  }
  else
  {
    uint64_t v82 = (uint64_t)v190;
    uint64_t v83 = 1;
    uint64_t v84 = v43;
  }
  return _s7Weather24LocationCompositionStateOwst_0(v82, v83, 1, v84);
}

void *sub_1001E870C(void *a1)
{
  uint64_t v120 = a1;
  uint64_t v2 = type metadata accessor for NewsArticle();
  uint64_t v3 = sub_100164920(v2);
  uint64_t v117 = v4;
  __chkstk_darwin(v3);
  sub_1001626E0();
  uint64_t v7 = v6 - v5;
  uint64_t v8 = type metadata accessor for NewsArticlePlacement();
  uint64_t v9 = sub_100164920(v8);
  uint64_t v115 = v10;
  __chkstk_darwin(v9);
  sub_100109314();
  uint64_t v118 = v11;
  uint64_t v122 = type metadata accessor for Article();
  sub_100179C0C();
  uint64_t v109 = v12;
  __chkstk_darwin(v13);
  sub_1001626E0();
  uint64_t v16 = v15 - v14;
  type metadata accessor for ArticleModel();
  sub_100179C0C();
  uint64_t v123 = v18;
  uint64_t v124 = v17;
  __chkstk_darwin(v17);
  sub_10016278C();
  uint64_t v21 = v19 - v20;
  __chkstk_darwin(v22);
  uint64_t v24 = (char *)v105 - v23;
  uint64_t v25 = type metadata accessor for ArticlePlacement();
  sub_100179C0C();
  uint64_t v116 = v26;
  __chkstk_darwin(v27);
  sub_100109314();
  uint64_t v119 = v28;
  uint64_t v29 = type metadata accessor for News();
  sub_100179C0C();
  uint64_t v31 = v30;
  __chkstk_darwin(v32);
  sub_10017FDD0();
  type metadata accessor for NewsDataModel();
  sub_100162E4C();
  __chkstk_darwin(v33);
  sub_1001626E0();
  uint64_t v36 = (uint64_t *)(v35 - v34);
  sub_1001E936C(v121, v35 - v34, (void (*)(void))type metadata accessor for NewsDataModel);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v37 = *v36;
    uint64_t v38 = v120;
    swift_bridgeObjectRetain();
    uint64_t v122 = *(void *)(sub_1001E900C(v37, (uint64_t)v38) + 16);
    if (!v122)
    {
      swift_bridgeObjectRelease();
      return _swiftEmptyArrayStorage;
    }
    uint64_t v39 = 0;
    sub_10017E6E0();
    uint64_t v116 = v40;
    uint64_t v121 = v40 + v41;
    uint64_t v119 = *(void *)(v42 + 72);
    uint64_t v120 = _swiftEmptyArrayStorage;
    uint64_t v43 = v118;
    while (1)
    {
      sub_1001E936C(v121 + v119 * v39, v43, (void (*)(void))type metadata accessor for NewsArticlePlacement);
      uint64_t v44 = *(void *)v43;
      uint64_t v45 = *(void *)(*(void *)v43 + 16);
      if (v45)
      {
        uint64_t v125 = _swiftEmptyArrayStorage;
        swift_bridgeObjectRetain();
        sub_1007F3214();
        sub_10017E6E0();
        uint64_t v47 = v44 + v46;
        uint64_t v49 = *(void *)(v48 + 72);
        do
        {
          sub_1001E936C(v47, v7, (void (*)(void))type metadata accessor for NewsArticle);
          sub_1001E936C(v7, v21, (void (*)(void))type metadata accessor for NewsArticle);
          swift_storeEnumTagMultiPayload();
          sub_100BBFD04(v7, (void (*)(void))type metadata accessor for NewsArticle);
          uint64_t v50 = v125;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1001A1B70();
            uint64_t v50 = v125;
          }
          unint64_t v51 = v50[2];
          if (v51 >= v50[3] >> 1)
          {
            sub_1001A4AD0();
            uint64_t v50 = v125;
          }
          sub_100181CC8();
          sub_100BBFDF0(v21, v52 + v53 * v51, (void (*)(void))type metadata accessor for ArticleModel);
          v47 += v49;
          --v45;
        }
        while (v45);
        swift_bridgeObjectRelease();
        uint64_t v43 = v118;
      }
      else
      {
        uint64_t v50 = _swiftEmptyArrayStorage;
      }
      sub_100BBFD04(v43, (void (*)(void))type metadata accessor for NewsArticlePlacement);
      uint64_t v54 = v50[2];
      uint64_t v55 = v120[2];
      uint64_t v56 = v55 + v54;
      if (__OFADD__(v55, v54)) {
        break;
      }
      uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v58 = v120;
      if (!isUniquelyReferenced_nonNull_native || v56 > v120[3] >> 1)
      {
        if (v55 <= v56) {
          uint64_t v59 = v55 + v54;
        }
        else {
          uint64_t v59 = v55;
        }
        uint64_t v58 = (void *)sub_1007E95F8(isUniquelyReferenced_nonNull_native, v59, 1, (uint64_t)v120);
      }
      uint64_t v60 = v50[2];
      uint64_t v120 = v58;
      if (v60)
      {
        uint64_t v61 = v58[2];
        if ((v58[3] >> 1) - v61 < v54) {
          goto LABEL_72;
        }
        unint64_t v62 = sub_1001A2A60((uint64_t)v58, v61);
        if (v63 < v62 + v64 * v54 && v62 < v63 + v64 * v54) {
          goto LABEL_76;
        }
        swift_arrayInitWithCopy();
        if (v54)
        {
          uint64_t v66 = v120[2];
          BOOL v67 = __OFADD__(v66, v54);
          uint64_t v68 = v66 + v54;
          if (v67) {
            goto LABEL_74;
          }
          v120[2] = v68;
        }
      }
      else if (v54)
      {
        goto LABEL_70;
      }
      ++v39;
      swift_bridgeObjectRelease();
      if (v39 == v122)
      {
        swift_bridgeObjectRelease();
        return v120;
      }
    }
    __break(1u);
    goto LABEL_69;
  }
  uint64_t v69 = v36;
  uint64_t v70 = v29;
  (*(void (**)(uint64_t, uint64_t *, uint64_t))(v31 + 32))(v1, v69, v29);
  uint64_t v71 = News.placements.getter();
  uint64_t v72 = v120;
  swift_bridgeObjectRetain();
  uint64_t v73 = sub_100BBEB10(v71, (uint64_t)v72);
  uint64_t v115 = *(void *)(v73 + 16);
  if (v115)
  {
    uint64_t v106 = v1;
    uint64_t v107 = v70;
    uint64_t v74 = *(void (**)(uint64_t, unint64_t, uint64_t))(v116 + 16);
    unint64_t v113 = v73 + ((*(unsigned __int8 *)(v116 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v116 + 80));
    uint64_t v114 = v74;
    uint64_t v121 = v109 + 16;
    v116 += 16;
    uint64_t v111 = *(void *)(v116 + 56);
    uint64_t v112 = v116 - 8;
    v105[1] = v73;
    swift_bridgeObjectRetain();
    uint64_t v75 = 0;
    uint64_t v120 = _swiftEmptyArrayStorage;
    uint64_t v108 = v25;
    uint64_t v110 = v31;
    while (1)
    {
      uint64_t v118 = v75;
      v114(v119, v113 + v111 * v75, v25);
      uint64_t v76 = ArticlePlacement.articles.getter();
      uint64_t v77 = *(void *)(v76 + 16);
      if (v77)
      {
        uint64_t v125 = _swiftEmptyArrayStorage;
        sub_1007F3214();
        sub_10017E6E0();
        uint64_t v117 = v76;
        uint64_t v79 = v76 + v78;
        uint64_t v81 = *(void *)(v80 + 72);
        uint64_t v82 = *(void (**)(uint64_t, uint64_t, uint64_t))(v80 + 16);
        do
        {
          uint64_t v83 = v122;
          v82(v16, v79, v122);
          v82((uint64_t)v24, v16, v83);
          swift_storeEnumTagMultiPayload();
          sub_100163348();
          v84();
          uint64_t v85 = v125;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1001A1B70();
            uint64_t v85 = v125;
          }
          unint64_t v86 = v85[2];
          if (v86 >= v85[3] >> 1)
          {
            sub_1001A4AD0();
            uint64_t v85 = v125;
          }
          sub_100181CC8();
          sub_100BBFDF0((uint64_t)v24, v87 + v88 * v86, (void (*)(void))type metadata accessor for ArticleModel);
          v79 += v81;
          --v77;
        }
        while (v77);
        swift_bridgeObjectRelease();
        uint64_t v25 = v108;
      }
      else
      {
        swift_bridgeObjectRelease();
        uint64_t v85 = _swiftEmptyArrayStorage;
      }
      sub_100162F0C();
      v89();
      uint64_t v90 = v85[2];
      uint64_t v91 = v120[2];
      uint64_t v92 = v91 + v90;
      if (__OFADD__(v91, v90)) {
        break;
      }
      uint64_t v93 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v94 = v120;
      if (!v93 || v92 > v120[3] >> 1)
      {
        if (v91 <= v92) {
          uint64_t v95 = v91 + v90;
        }
        else {
          uint64_t v95 = v91;
        }
        uint64_t v94 = (void *)sub_1007E95F8(v93, v95, 1, (uint64_t)v120);
      }
      uint64_t v31 = v110;
      uint64_t v96 = v85[2];
      uint64_t v120 = v94;
      if (v96)
      {
        uint64_t v97 = v94[2];
        if ((v94[3] >> 1) - v97 < v90) {
          goto LABEL_73;
        }
        unint64_t v98 = sub_1001A2A60((uint64_t)v94, v97);
        if (v99 < v98 + v100 * v90 && v98 < v99 + v100 * v90) {
          goto LABEL_76;
        }
        swift_arrayInitWithCopy();
        if (v90)
        {
          uint64_t v102 = v120[2];
          BOOL v67 = __OFADD__(v102, v90);
          uint64_t v103 = v102 + v90;
          if (v67) {
            goto LABEL_75;
          }
          v120[2] = v103;
        }
      }
      else if (v90)
      {
        goto LABEL_71;
      }
      uint64_t v75 = v118 + 1;
      swift_bridgeObjectRelease();
      if (v75 == v115)
      {
        swift_bridgeObjectRelease_n();
        uint64_t v1 = v106;
        uint64_t v70 = v107;
        goto LABEL_66;
      }
    }
LABEL_69:
    __break(1u);
LABEL_70:
    __break(1u);
LABEL_71:
    __break(1u);
LABEL_72:
    __break(1u);
LABEL_73:
    __break(1u);
LABEL_74:
    __break(1u);
LABEL_75:
    __break(1u);
LABEL_76:
    unint64_t result = (void *)_fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
    return result;
  }
  swift_bridgeObjectRelease();
  uint64_t v120 = _swiftEmptyArrayStorage;
LABEL_66:
  (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v1, v70);
  return v120;
}

uint64_t type metadata accessor for NewsArticlePlacement()
{
  uint64_t result = qword_100EA7670;
  if (!qword_100EA7670) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1001E900C(uint64_t a1, uint64_t a2)
{
  uint64_t v25 = type metadata accessor for NewsArticlePlacement();
  uint64_t v30 = *(void *)(v25 - 8);
  uint64_t v5 = __chkstk_darwin(v25);
  uint64_t v26 = (uint64_t)v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = __chkstk_darwin(v5);
  uint64_t v9 = (char *)v22 - v8;
  uint64_t v10 = _swiftEmptyArrayStorage;
  uint64_t v31 = _swiftEmptyArrayStorage;
  uint64_t v29 = *(void *)(a1 + 16);
  if (v29)
  {
    v22[1] = v2;
    uint64_t v23 = (char *)v22 - v8;
    unint64_t v11 = 0;
    uint64_t v24 = a1;
    while (v11 < *(void *)(a1 + 16))
    {
      unint64_t v12 = (*(unsigned __int8 *)(v30 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80);
      uint64_t v13 = *(void *)(v30 + 72);
      sub_1001E936C(a1 + v12 + v13 * v11, (uint64_t)v9, (void (*)(void))type metadata accessor for NewsArticlePlacement);
      uint64_t v14 = *(void *)(a2 + 16);
      if (v14)
      {
        uint64_t v27 = v13;
        unint64_t v28 = v12;
        uint64_t v15 = *(void *)(type metadata accessor for ArticlePlacementLocation() - 8);
        uint64_t v16 = a2 + ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80));
        uint64_t v17 = a2;
        uint64_t v18 = *(void *)(v15 + 72);
        sub_100BBFF30(&qword_100EB6E78, (void (*)(uint64_t))&type metadata accessor for ArticlePlacementLocation);
        swift_bridgeObjectRetain();
        while ((dispatch thunk of static Equatable.== infix(_:_:)() & 1) == 0)
        {
          v16 += v18;
          if (!--v14)
          {
            a2 = v17;
            swift_bridgeObjectRelease();
            uint64_t v9 = v23;
            a1 = v24;
            goto LABEL_9;
          }
        }
        a2 = v17;
        swift_bridgeObjectRelease();
        uint64_t v9 = v23;
        sub_100BBFDF0((uint64_t)v23, v26, (void (*)(void))type metadata accessor for NewsArticlePlacement);
        uint64_t v19 = v31;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1007F314C();
          uint64_t v19 = v31;
        }
        uint64_t v20 = v27;
        unint64_t v21 = v19[2];
        if (v21 >= v19[3] >> 1)
        {
          sub_1007F314C();
          uint64_t v19 = v31;
        }
        v19[2] = v21 + 1;
        uint64_t result = sub_100BBFDF0(v26, (uint64_t)v19 + v28 + v21 * v20, (void (*)(void))type metadata accessor for NewsArticlePlacement);
        a1 = v24;
      }
      else
      {
LABEL_9:
        uint64_t result = sub_100BBFD04((uint64_t)v9, (void (*)(void))type metadata accessor for NewsArticlePlacement);
      }
      if (++v11 == v29)
      {
        uint64_t v10 = v31;
        goto LABEL_17;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_17:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
  return result;
}

uint64_t sub_1001E936C(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(a2, a1);
  return a2;
}

uint64_t type metadata accessor for ArticleModel()
{
  uint64_t result = qword_100E89998;
  if (!qword_100E89998) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata accessor for NewsArticle()
{
  uint64_t result = qword_100EAC870;
  if (!qword_100EAC870) {
    return swift_getSingletonMetadata();
  }
  return result;
}

{
  return type metadata accessor for NewsArticle();
}

uint64_t sub_1001E945C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v10 = v9;
  swift_defaultActor_initialize();
  *(unsigned char *)(v10 + 208) = 0;
  *(void *)(v10 + 112) = a1;
  *(void *)(v10 + 120) = a2;
  sub_1001E9994(a3, v10 + 128);
  sub_1001E9994(a4, v10 + 168);
  *(void *)(v10 + 216) = a5;
  sub_1001E9994((uint64_t)a6, v10 + 224);
  sub_1001E9994(a7, v10 + 264);
  sub_1001E9994(a8, v10 + 304);
  sub_1001E9994(a9, v10 + 344);
  sub_1001B1E64(a6, a6[3]);
  sub_10023102C(&qword_100E8AA30, v19, (void (*)(uint64_t))type metadata accessor for LocationsOfInterestUpdater);
  swift_retain();
  swift_retain();
  swift_retain();
  dispatch thunk of SavedLocationsManagerType.addObserver(_:)();
  swift_release();
  swift_release();
  swift_release();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a9);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a8);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a7);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a4);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a3);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)a6);
  return v10;
}

void sub_1001E95EC()
{
  sub_100162EA0();
  uint64_t v34 = v1;
  uint64_t v2 = sub_10017DF08(&qword_100E8E188);
  uint64_t v33 = v2;
  sub_100162880();
  __chkstk_darwin(v3);
  sub_10016278C();
  uint64_t v6 = v4 - v5;
  __chkstk_darwin(v7);
  uint64_t v32 = (uint64_t)&v31 - v8;
  *(void *)uint64_t v6 = swift_getKeyPath();
  *(unsigned char *)(v6 + 8) = 0;
  uint64_t v9 = v6 + *(int *)(v2 + 36);
  uint64_t v31 = v0 + 2;
  sub_1001E9994((uint64_t)(v0 + 2), (uint64_t)v37);
  uint64_t v10 = v0[1];
  uint64_t v12 = v0[7];
  uint64_t v11 = v0[8];
  uint64_t v13 = v0[9];
  sub_1001E9994((uint64_t)(v0 + 10), (uint64_t)v36);
  uint64_t v14 = v0[20];
  sub_1001E9994((uint64_t)(v0 + 15), (uint64_t)v35);
  swift_retain();
  swift_retain();
  swift_unknownObjectRetain();
  swift_retain();
  sub_1001E9BF0((uint64_t)v37, v12, v10, v11, v13, (uint64_t)v36, v14, v9, (uint64_t)v35);
  uint64_t v15 = v9 + *(int *)(sub_10017DF08(&qword_100E8E190) + 36);
  *(void *)uint64_t v15 = swift_getKeyPath();
  *(unsigned char *)(v15 + 8) = 0;
  uint64_t v16 = type metadata accessor for PageControlDisplayStateModifier(0);
  uint64_t v17 = (uint64_t *)(v15 + *(int *)(v16 + 20));
  uint64_t *v17 = swift_getKeyPath();
  sub_10017DF08((uint64_t *)&unk_100EAA560);
  sub_100183804();
  uint64_t v18 = (uint64_t **)(v15 + *(int *)(v16 + 24));
  type metadata accessor for PageControlDisplayState(0);
  swift_allocObject();
  v36[0] = sub_1001EA0CC();
  State.init(wrappedValue:)();
  uint64_t v19 = (uint64_t *)v37[1];
  *uint64_t v18 = (uint64_t *)v37[0];
  v18[1] = v19;
  uint64_t v20 = v9 + *(int *)(sub_10017DF08(&qword_100E8E198) + 36);
  *(void *)uint64_t v20 = swift_getKeyPath();
  uint64_t v21 = type metadata accessor for DetermineWhetherLocationContentWantsGridViewModifier(0);
  *(_OWORD *)(v20 + 8) = 0u;
  *(_OWORD *)(v20 + 24) = 0u;
  *(_OWORD *)(v20 + 40) = 0u;
  *(_OWORD *)(v20 + 56) = 0u;
  *(unsigned char *)(v20 + 72) = 0;
  uint64_t v22 = (uint64_t *)(v20 + *(int *)(v21 + 20));
  *uint64_t v22 = swift_getKeyPath();
  sub_10017DF08(&qword_100E63BC8);
  swift_storeEnumTagMultiPayload();
  sub_10024D364(v6, v32, &qword_100E8E188);
  sub_1001E9994((uint64_t)v31, (uint64_t)v37);
  sub_1000DF0C4((uint64_t)v37, v37[3]);
  sub_10017C83C();
  __chkstk_darwin(v23);
  uint64_t v25 = sub_10019B5D4(v24, (uint64_t)v31);
  v26(v25);
  uint64_t v27 = *v18;
  uint64_t v28 = swift_retain();
  sub_1001E99F4(v28, v27);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v37);
  type metadata accessor for LocationViewerBindingWrapper(0);
  sub_10024D5E4((uint64_t)&unk_100E8E1A0);
  sub_10015180C((uint64_t)&unk_100E8E1A8);
  View.environment<A>(_:)();
  swift_release();
  uint64_t v29 = sub_100127C2C();
  sub_10017DF4C(v29, v30);
  sub_100162694();
}

uint64_t sub_1001E9994(uint64_t a1, uint64_t a2)
{
  *(void *)(a2 + 24) = *(void *)(a1 + 24);
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  sub_100162880();
  (*v3)(a2);
  return a2;
}

uint64_t sub_1001E99F4(uint64_t a1, uint64_t *a2)
{
  uint64_t v12 = *a2;
  uint64_t v13 = &off_100E23B00;
  v11[0] = a2;
  type metadata accessor for LocationViewerBindingWrapper(0);
  uint64_t v3 = swift_allocObject();
  uint64_t v4 = sub_1000DF0C4((uint64_t)v11, v12);
  __chkstk_darwin(v4);
  uint64_t v6 = (void *)((char *)&v11[-1] - v5);
  (*(void (**)(char *))(v7 + 16))((char *)&v11[-1] - v5);
  uint64_t v8 = sub_1001E9B24(a1, *v6, v3);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v11);
  return v8;
}

uint64_t sub_1001E9B24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v8 = type metadata accessor for LocationViewerInteractor();
  uint64_t v9 = &off_100E23B00;
  *(void *)&long long v7 = a2;
  sub_1001ABC4C(0, (unint64_t *)&qword_100E62D68);
  *(void *)(a3 + 64) = OS_os_log.init(subsystem:category:)();
  ObservationRegistrar.init()();
  *(void *)(a3 + 16) = a1;
  sub_1001262E4(&v7, a3 + 24);
  return a3;
}

uint64_t sub_1001E9BF0@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, uint64_t a8@<X8>, uint64_t a9)
{
  *(void *)a8 = 0;
  type metadata accessor for LocationViewerBindingWrapper(0);
  sub_10015180C((uint64_t)&unk_100E8E1A8);
  *(void *)(a8 + 8) = Environment.init<A>(_:)();
  *(unsigned char *)(a8 + 16) = v14 & 1;
  uint64_t v15 = (int *)type metadata accessor for MeasuredLocationViewerView(0);
  uint64_t v16 = (uint64_t *)(a8 + v15[6]);
  uint64_t *v16 = swift_getKeyPath();
  sub_10017DF08(&qword_100E63BD0);
  sub_100183804();
  uint64_t v17 = a8 + v15[7];
  *(void *)uint64_t v17 = swift_getKeyPath();
  *(_WORD *)(v17 + 8) = 0;
  uint64_t v18 = (uint64_t *)(a8 + v15[8]);
  *uint64_t v18 = swift_getKeyPath();
  sub_10017DF08(&qword_100E63BC8);
  sub_100183804();
  uint64_t v19 = (uint64_t *)(a8 + v15[9]);
  *uint64_t v19 = swift_getKeyPath();
  sub_10017DF08((uint64_t *)&unk_100EAA560);
  sub_100183804();
  uint64_t KeyPath = swift_getKeyPath();
  sub_1001A389C(KeyPath);
  uint64_t v21 = swift_getKeyPath();
  sub_1001A389C(v21);
  uint64_t v22 = swift_getKeyPath();
  sub_1001A389C(v22);
  uint64_t v23 = a8 + v15[13];
  *(void *)uint64_t v23 = swift_getKeyPath();
  *(void *)(v23 + 8) = 0;
  *(void *)(v23 + 16) = 0;
  *(void *)(v23 + 24) = 0;
  *(unsigned char *)(v23 + 32) = 0;
  uint64_t v24 = swift_getKeyPath();
  sub_1001A389C(v24);
  Text.Measurements.init()();
  uint64_t v25 = a8 + v15[23];
  type metadata accessor for PageControlDisplayState(0);
  sub_10015180C((uint64_t)&unk_100E8E1B0);
  *(void *)uint64_t v25 = Environment.init<A>(_:)();
  *(unsigned char *)(v25 + 8) = v26 & 1;
  uint64_t v27 = a8 + v15[24];
  *(void *)uint64_t v27 = swift_getKeyPath();
  *(_OWORD *)(v27 + 8) = 0u;
  *(_OWORD *)(v27 + 24) = 0u;
  *(_OWORD *)(v27 + 33) = 0u;
  uint64_t v28 = a8 + v15[25];
  State.init(wrappedValue:)();
  *(unsigned char *)uint64_t v28 = v41;
  *(void *)(v28 + 8) = v42;
  uint64_t v29 = a8 + v15[26];
  *(void *)uint64_t v29 = sub_100213F1C;
  *(void *)(v29 + 8) = 0;
  *(unsigned char *)(v29 + 16) = 0;
  uint64_t v30 = v15[27];
  sub_1001ABC4C(0, (unint64_t *)&qword_100E62D68);
  *(void *)(a8 + v30) = OS_os_log.init(subsystem:category:)();
  uint64_t v31 = (uint64_t *)(a8 + v15[15]);
  swift_retain();
  sub_10017DF08(&qword_100E64AB8);
  sub_10024D5E4((uint64_t)&unk_100E64AC0);
  uint64_t *v31 = ObservedObject.init(wrappedValue:)();
  v31[1] = v32;
  sub_1001E9994(a1, a8 + v15[17]);
  *(void *)(a8 + v15[18]) = a2;
  *(void *)(a8 + v15[16]) = a3;
  uint64_t v33 = (void *)(a8 + v15[19]);
  *uint64_t v33 = a4;
  v33[1] = a5;
  sub_1001E9994(a6, a8 + v15[20]);
  *(void *)(a8 + v15[28]) = a7;
  sub_1001E9994(a9, a8 + v15[21]);
  sub_1001ABC4C(0, &qword_100E8E1B8);
  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  swift_retain();
  swift_unknownObjectRetain();
  swift_retain();
  id v35 = [ObjCClassFromMetadata appearance];
  id v36 = [self whiteColor];
  [v35 setTintColor:v36];
  swift_release();
  swift_release();
  swift_unknownObjectRelease();
  swift_release();

  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a9);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a6);
  return _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1);
}

uint64_t type metadata accessor for LocationViewerInteractor()
{
  return self;
}

uint64_t sub_1001EA0CC()
{
  *(_WORD *)(v0 + 16) = 0;
  *(void *)(v0 + 24) = 0;
  ObservationRegistrar.init()();
  return v0;
}

uint64_t sub_1001EA0FC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v45 = type metadata accessor for LocationViewComponent();
  sub_100179C0C();
  uint64_t v39 = v4;
  uint64_t v6 = __chkstk_darwin(v5);
  uint64_t v8 = (char *)v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)v37 - v9;
  sub_10017DF08(&qword_100E635E0);
  uint64_t inited = swift_initStackObject();
  uint64_t v12 = inited;
  *(_OWORD *)(inited + 16) = xmmword_100C251B0;
  *(void *)(inited + 32) = 1937207154;
  *(void *)(inited + 40) = 0xE400000000000000;
  uint64_t v13 = *(void *)(a1 + 16);
  char v14 = _swiftEmptyArrayStorage;
  if (v13)
  {
    v37[0] = inited;
    uint64_t v38 = a2;
    uint64_t v50 = _swiftEmptyArrayStorage;
    swift_bridgeObjectRetain();
    sub_1001EA6A0(0, v13, 0);
    uint64_t v15 = 0;
    v37[1] = a1;
    uint64_t v40 = a1 + 32;
    uint64_t v41 = v13;
    do
    {
      uint64_t v43 = v15;
      uint64_t v16 = *(void *)(v40 + 8 * v15);
      uint64_t v17 = *(void *)(v16 + 16);
      if (v17)
      {
        uint64_t v49 = _swiftEmptyArrayStorage;
        swift_bridgeObjectRetain();
        sub_1001EA6A0(0, v17, 0);
        uint64_t v18 = *(unsigned __int8 *)(v39 + 80);
        uint64_t v42 = v16;
        uint64_t v19 = v16 + ((v18 + 32) & ~v18);
        uint64_t v20 = *(void *)(v39 + 72);
        uint64_t v44 = v20;
        do
        {
          sub_1001DBA6C(v19, (uint64_t)v10);
          uint64_t v47 = 0;
          unint64_t v48 = 0xE000000000000000;
          sub_1001DBA6C((uint64_t)v10, (uint64_t)v8);
          int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          char v22 = 10;
          switch(EnumCaseMultiPayload)
          {
            case 1:
              sub_1001DAD64((uint64_t)v8);
              char v22 = 1;
              break;
            case 2:
              sub_1001DAD64((uint64_t)v8);
              char v22 = 2;
              break;
            case 3:
              sub_1001DAD64((uint64_t)v8);
              char v22 = 3;
              break;
            case 4:
              sub_1001DAD64((uint64_t)v8);
              char v22 = 4;
              break;
            case 5:
              sub_1001DAD64((uint64_t)v8);
              char v22 = 5;
              break;
            case 6:
              sub_1001DAD64((uint64_t)v8);
              char v22 = 6;
              break;
            case 7:
              sub_1001DAD64((uint64_t)v8);
              char v22 = 7;
              break;
            case 8:
              sub_1001DAD64((uint64_t)v8);
              char v22 = 8;
              break;
            case 9:
              sub_1001DAD64((uint64_t)v8);
              char v22 = 9;
              break;
            case 10:
              sub_1001DAD64((uint64_t)v8);
              char v22 = 11;
              break;
            case 11:
              sub_1001DAD64((uint64_t)v8);
              char v22 = 12;
              break;
            case 12:
              char v22 = 13;
              break;
            case 13:
              sub_1001DAD64((uint64_t)v8);
              char v22 = 14;
              break;
            case 14:
              sub_1001DAD64((uint64_t)v8);
              char v22 = 15;
              break;
            case 15:
              sub_1001DAD64((uint64_t)v8);
              char v22 = 16;
              break;
            case 16:
              sub_1001DAD64((uint64_t)v8);
              char v22 = 17;
              break;
            case 17:
              sub_1001DAD64((uint64_t)v8);
              char v22 = 18;
              break;
            case 18:
              sub_1001DAD64((uint64_t)v8);
              char v22 = 19;
              break;
            case 19:
              break;
            default:
              sub_1001DAD64((uint64_t)v8);
              char v22 = 0;
              break;
          }
          char v46 = v22;
          _print_unlocked<A, B>(_:_:)();
          uint64_t v24 = v47;
          unint64_t v23 = v48;
          sub_1001DAD64((uint64_t)v10);
          char v14 = v49;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1001EA6A0(0, v14[2] + 1, 1);
            uint64_t v20 = v44;
            char v14 = v49;
          }
          unint64_t v26 = v14[2];
          unint64_t v25 = v14[3];
          if (v26 >= v25 >> 1)
          {
            sub_1001EA6A0(v25 > 1, v26 + 1, 1);
            uint64_t v20 = v44;
            char v14 = v49;
          }
          v14[2] = v26 + 1;
          uint64_t v27 = &v14[2 * v26];
          v27[4] = v24;
          v27[5] = v23;
          v19 += v20;
          --v17;
        }
        while (v17);
      }
      else
      {
        swift_bridgeObjectRetain();
      }
      uint64_t v47 = v14;
      sub_10017DF08(&qword_100E91BC0);
      sub_1001246C8((unint64_t *)&qword_100E73CB0, &qword_100E91BC0);
      uint64_t v28 = BidirectionalCollection<>.joined(separator:)();
      uint64_t v30 = v29;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v31 = v50;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1001EA6A0(0, v31[2] + 1, 1);
        uint64_t v31 = v50;
      }
      uint64_t v32 = v43;
      unint64_t v34 = v31[2];
      unint64_t v33 = v31[3];
      if (v34 >= v33 >> 1)
      {
        sub_1001EA6A0(v33 > 1, v34 + 1, 1);
        uint64_t v32 = v43;
        uint64_t v31 = v50;
      }
      uint64_t v15 = v32 + 1;
      v31[2] = v34 + 1;
      id v35 = &v31[2 * v34];
      v35[4] = v28;
      v35[5] = v30;
      char v14 = _swiftEmptyArrayStorage;
    }
    while (v15 != v41);
    swift_bridgeObjectRelease();
    a2 = v38;
    uint64_t v12 = v37[0];
  }
  else
  {
    uint64_t v31 = _swiftEmptyArrayStorage;
  }
  *(void *)(v12 + 72) = sub_10017DF08(&qword_100E91BC0);
  *(void *)(v12 + 48) = v31;
  Dictionary.init(dictionaryLiteral:)();
  a2[3] = sub_10017DF08(&qword_100EB6790);
  a2[4] = sub_1001246C8(&qword_100EB6798, &qword_100EB6790);
  sub_100170694(a2);
  return ShortDescription.init(name:_:)();
}

void sub_1001EA6A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1001EA6F0(a1, a2, a3, *v3, (uint64_t)&qword_100E66F98, (void (*)(uint64_t))sub_10012B80C, (void (*)(uint64_t))sub_1001EA7B4);
  *uint64_t v3 = v4;
}

void sub_1001EA6F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(uint64_t), void (*a7)(uint64_t))
{
  sub_10018B130();
  if (v12)
  {
    sub_10017E9A4();
    if (v13 != v14)
    {
      sub_100183F88();
      if (v13)
      {
        __break(1u);
        return;
      }
      sub_1001A24A0();
    }
  }
  sub_100185C7C();
  if (v9)
  {
    sub_10017DF08(v15);
    uint64_t v16 = (const void *)sub_1001D0EEC();
    size_t v17 = j__malloc_size(v16);
    sub_10012B654(v17 - 32);
  }
  uint64_t v18 = sub_100176DD8();
  if (v8)
  {
    a6(v18);
    *(void *)(v7 + 16) = 0;
  }
  else
  {
    a7(v18);
  }
  swift_release();
}

uint64_t sub_1001EA7B4()
{
  sub_1001EA87C();
  if (v3 < 0)
  {
    sub_100187288();
    sub_1001D1DF8();
LABEL_11:
    uint64_t result = sub_100163950();
    __break(1u);
    return result;
  }
  if (v2 + 16 * v1 > v0 && v0 + 16 * v1 > v2)
  {
    sub_100187288();
    sub_100181768();
    goto LABEL_11;
  }

  return swift_arrayInitWithCopy();
}

void sub_1001EA860(uint64_t a1@<X8>)
{
  *(void *)(v1 - 104) = a1;
}

uint64_t sub_1001EA888()
{
  return String.write(to:)();
}

uint64_t sub_1001EA8B0()
{
  return 0;
}

uint64_t sub_1001EA8C4()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1001EA904()
{
  return swift_getEnumCaseMultiPayload();
}

unint64_t sub_1001EA91C()
{
  *(void *)(v3 - 160) = v2;
  *(void *)(v3 - 152) = v0;
  *(void *)(v3 - 104) = v1;
  *(unsigned char *)(v3 - 81) = 0;
  return sub_1002E8390();
}

uint64_t sub_1001EA940(__n128 *a1, __n128 a2, __n128 a3)
{
  a1[1] = a2;
  a1[2] = a3;
  return v3;
}

uint64_t sub_1001EA958()
{
  return KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
}

uint64_t sub_1001EA978()
{
  return swift_arrayDestroy();
}

uint64_t sub_1001EA994()
{
  return v0;
}

uint64_t sub_1001EA9B0()
{
  return static String.read(from:)();
}

uint64_t sub_1001EA9C8@<X0>(uint64_t a1@<X0>, void (*a2)(void)@<X2>, uint64_t a3@<X8>)
{
  uint64_t v4 = *(void *)(a3 - 256);
  return sub_100948F70(a1, v4, a2);
}

uint64_t sub_1001EA9E0()
{
  return v0;
}

unint64_t sub_1001EA9EC()
{
  return 0xD000000000000013;
}

void *sub_1001EAA04(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char __src)
{
  return memcpy(a1, &__src, 0x70uLL);
}

uint64_t sub_1001EAA1C(unint64_t a1, uint64_t a2, unint64_t a3)
{
  if (a2 < 0 || (a3 + 16 * a2 > a1 ? (BOOL v3 = a1 + 16 * a2 > a3) : (BOOL v3 = 0), v3))
  {
    uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    return swift_arrayInitWithCopy();
  }
  return result;
}

uint64_t sub_1001EAAFC(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = sub_10017DF08(&qword_100E63A10);
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  uint64_t v77 = (char *)&v69 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v78 = (uint64_t)&v69 - v12;
  __chkstk_darwin(v11);
  char v14 = (char *)&v69 - v13;
  uint64_t v15 = type metadata accessor for CurrentWeather();
  uint64_t v75 = *(void *)(v15 - 8);
  uint64_t v76 = v15;
  __chkstk_darwin(v15);
  size_t v17 = (char *)&v69 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_10017DF08(&qword_100E63770);
  __chkstk_darwin(v18 - 8);
  uint64_t v20 = (char *)&v69 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_10017DF08(&qword_100E63850);
  __chkstk_darwin(v21 - 8);
  unint64_t v23 = (char *)&v69 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  __chkstk_darwin(v24 - 8);
  uint64_t v26 = (char *)&v69 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (static Location.currentLocationID.getter() == a1 && v27 == a2)
  {
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  uint64_t v74 = a1;
  char v29 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  if (v29)
  {
LABEL_12:
    sub_100A06F68(a3);
    goto LABEL_13;
  }
  uint64_t v30 = type metadata accessor for BannerStateComputer();
  if (*(unsigned char *)(v4 + *(int *)(v30 + 28)) == 1)
  {
    if (qword_100E62878 != -1) {
      swift_once();
    }
    uint64_t v31 = type metadata accessor for Logger();
    sub_1002102B0(v31, (uint64_t)qword_100F52070);
    swift_bridgeObjectRetain_n();
    uint64_t v32 = Logger.logObject.getter();
    os_log_type_t v33 = static os_log_type_t.info.getter();
    int v34 = v33;
    BOOL v35 = os_log_type_enabled(v32, v33);
    uint64_t v73 = v30;
    if (v35)
    {
      uint64_t v36 = swift_slowAlloc();
      uint64_t v72 = v32;
      uint64_t v37 = v36;
      uint64_t v71 = swift_slowAlloc();
      v80[0] = v71;
      *(_DWORD *)uint64_t v37 = 141558275;
      uint64_t v79 = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v37 + 12) = 2081;
      uint64_t v69 = v37 + 14;
      swift_bridgeObjectRetain();
      int v70 = v34;
      uint64_t v38 = v74;
      uint64_t v79 = sub_10016414C(v74, a2, v80);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v72, (os_log_type_t)v70, "Showing no connection banner (loaded from cache). ID=%{private,mask.hash}s", (uint8_t *)v37, 0x16u);
      swift_arrayDestroy();
      uint64_t v30 = v73;
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
      uint64_t v38 = v74;
    }
    uint64_t v57 = *(int *)(v30 + 20);
    uint64_t v58 = *(void *)(*(void *)(v4 + v57) + OBJC_IVAR____TtCV7Weather9MainState8_Storage_weatherData + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1001BBE9C(v38, a2, v58);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v59 = type metadata accessor for LocationWeatherDataState(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v20, 1, v59) == 1)
    {
      uint64_t v60 = &qword_100E63770;
      uint64_t v61 = (uint64_t)v20;
    }
    else
    {
      sub_1001177B0((uint64_t)v23);
      sub_100173018((uint64_t)v20, (void (*)(void))type metadata accessor for LocationWeatherDataState);
      uint64_t v63 = type metadata accessor for WeatherData(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v23, 1, v63) != 1)
      {
        WeatherDataModel.currentWeather.getter();
        sub_100173018((uint64_t)v23, (void (*)(void))type metadata accessor for WeatherData);
        CurrentWeather.date.getter();
        (*(void (**)(char *, uint64_t))(v75 + 8))(v17, v76);
        uint64_t v64 = 0;
        goto LABEL_36;
      }
      uint64_t v60 = &qword_100E63850;
      uint64_t v61 = (uint64_t)v23;
    }
    sub_1001781AC(v61, v60);
    uint64_t v64 = 1;
LABEL_36:
    uint64_t v65 = type metadata accessor for Date();
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v26, v64, 1, v65);
    uint64_t v66 = *(void *)(v4 + v57) + OBJC_IVAR____TtCV7Weather9MainState8_Storage_environment;
    swift_beginAccess();
    if (*(unsigned char *)(v66 + *(int *)(type metadata accessor for EnvironmentState() + 64))) {
      char v67 = 2;
    }
    else {
      char v67 = 1;
    }
    uint64_t v68 = type metadata accessor for ContentStatusBanner();
    sub_10006DF38((uint64_t)v26, (uint64_t)&v14[*(int *)(v68 + 24)], (uint64_t *)&unk_100E73CA0);
    *char v14 = v67;
    *((void *)v14 + 1) = v38;
    *((void *)v14 + 2) = a2;
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v14, 0, 1, v68);
    swift_bridgeObjectRetain_n();
    sub_1001EB4CC();
    sub_1001781AC((uint64_t)v26, (uint64_t *)&unk_100E73CA0);
    goto LABEL_13;
  }
  uint64_t v52 = v74;
  if (qword_100E62878 != -1) {
    swift_once();
  }
  uint64_t v53 = type metadata accessor for Logger();
  sub_1002102B0(v53, (uint64_t)qword_100F52070);
  swift_bridgeObjectRetain_n();
  uint64_t v54 = Logger.logObject.getter();
  os_log_type_t v55 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v54, v55))
  {
    uint64_t v56 = swift_slowAlloc();
    v80[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v56 = 141558275;
    uint64_t v79 = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v56 + 12) = 2081;
    swift_bridgeObjectRetain();
    uint64_t v79 = sub_10016414C(v52, a2, v80);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v54, v55, "Removing banner (successfully loaded new data). ID=%{private,mask.hash}s", (uint8_t *)v56, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v62 = type metadata accessor for ContentStatusBanner();
  _s7Weather24LocationCompositionStateOwst_0(v78, 1, 1, v62);
  swift_bridgeObjectRetain();
  sub_1001EB4CC();
LABEL_13:
  uint64_t v39 = type metadata accessor for BannerStateComputer();
  if (*(unsigned char *)(v4 + *(int *)(v39 + 28)) == 1)
  {
    uint64_t v40 = *(void *)(v4 + *(int *)(v39 + 20));
    uint64_t v41 = OBJC_IVAR____TtCV7Weather9MainState8_Storage_view;
    uint64_t result = type metadata accessor for ViewState(0);
    if (*(void *)(v40 + v41 + *(int *)(result + 36) + 8) != 1) {
      return result;
    }
    uint64_t v43 = v40 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_environment;
    swift_beginAccess();
    if (*(unsigned char *)(v43 + *(int *)(type metadata accessor for EnvironmentState() + 64))) {
      char v44 = 2;
    }
    else {
      char v44 = 1;
    }
    uint64_t v45 = swift_bridgeObjectRetain();
    char v46 = sub_100A04F34(v45);
    swift_bridgeObjectRelease();
    uint64_t v47 = sub_100A054EC((uint64_t)v46);
    swift_bridgeObjectRelease();
    uint64_t v48 = type metadata accessor for ContentStatusBanner();
    uint64_t v49 = (uint64_t)v77;
    sub_100A07FF0((uint64_t)v47, (uint64_t)&v77[*(int *)(v48 + 24)]);
    swift_bridgeObjectRelease();
    *(unsigned char *)uint64_t v49 = v44;
    *(void *)(v49 + 8) = 0;
    *(void *)(v49 + 16) = 0;
    _s7Weather24LocationCompositionStateOwst_0(v49, 0, 1, v48);
  }
  else
  {
    uint64_t result = sub_10007DC94();
    if (result) {
      return result;
    }
    uint64_t v50 = type metadata accessor for ContentStatusBanner();
    uint64_t v51 = v78;
    _s7Weather24LocationCompositionStateOwst_0(v78, 1, 1, v50);
    sub_1001EB4CC();
    _s7Weather24LocationCompositionStateOwst_0(v51, 1, 1, v50);
  }
  return sub_1001EB4CC();
}

uint64_t sub_1001EB4CC()
{
  sub_1001858C8();
  uint64_t v3 = sub_10017DF08(&qword_100E63A10);
  uint64_t v4 = sub_100109308(v3);
  __chkstk_darwin(v4);
  sub_10017C704();
  type metadata accessor for ContentStatusBanner();
  sub_100162E4C();
  __chkstk_darwin(v5);
  uint64_t v6 = sub_100187074();
  sub_10012B520(v6, v7, v8);
  if (v9)
  {
    sub_100164EA0();
    sub_1001EB600(v1, v0, v10, v11, v12, v13, v14, v15, v17, v18);
    sub_1001EB5EC(v1, v0);
    return sub_100181DE8();
  }
  else
  {
    sub_100176C84();
    sub_10024812C(v2, v1, v0);
    return sub_1001EB5EC(v1, v0);
  }
}

uint64_t sub_1001EB5D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100816BB0);
}

uint64_t sub_1001EB5EC(uint64_t a1, unint64_t a2)
{
  if (a2 >= 2) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1001EB600(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  sub_100188D00();
  uint64_t v11 = v10;
  uint64_t v13 = v12;
  swift_bridgeObjectRetain();
  unint64_t v14 = sub_1001EB73C(v13, v11);
  LOBYTE(v11) = v15;
  swift_bridgeObjectRelease();
  if (v11)
  {
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_1001D14EC();
    Swift::Int v18 = *(void *)(v17 + 24);
    sub_10017DF08(&qword_100E63A00);
    _NativeDictionary.ensureUnique(isUnique:capacity:)(isUniquelyReferenced_nonNull_native, v18);
    sub_1001EB5EC(*(void *)(*(void *)(a10 + 48) + 16 * v14), *(void *)(*(void *)(a10 + 48) + 16 * v14 + 8));
    type metadata accessor for ContentStatusBanner();
    sub_100162E4C();
    sub_100176C84();
    sub_100249728();
    _NativeDictionary._delete(at:)();
    sub_10012B538();
    sub_10019ADB0();
  }
  else
  {
    type metadata accessor for ContentStatusBanner();
    sub_100162E38();
  }
  sub_10018A2CC();
  return _s7Weather24LocationCompositionStateOwst_0(v19, v20, v21, v22);
}

unint64_t sub_1001EB73C(uint64_t a1, uint64_t a2)
{
  sub_10019D12C();
  if (!a2)
  {
    Swift::UInt v3 = 0;
    goto LABEL_5;
  }
  if (a2 == 1)
  {
    Swift::UInt v3 = 2;
LABEL_5:
    Hasher._combine(_:)(v3);
    goto LABEL_7;
  }
  Hasher._combine(_:)(1uLL);
  sub_100188670();
LABEL_7:
  Hasher._finalize()();
  uint64_t v4 = sub_10017B204();

  return sub_1001EB7C8(v4, v5, v6);
}

unint64_t sub_1001EB7C8(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v9 = ~v5;
    uint64_t v10 = *(void *)(v3 + 48);
    do
    {
      uint64_t v11 = (void *)(v10 + 16 * v6);
      uint64_t v12 = v11[1];
      if (v12)
      {
        if (v12 == 1)
        {
          if (a2 == 1) {
            return v6;
          }
        }
        else if (a2 >= 2)
        {
          BOOL v13 = *v11 == a1 && v12 == a2;
          if (v13 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
            return v6;
          }
        }
      }
      else if (!a2)
      {
        return v6;
      }
      unint64_t v6 = (v6 + 1) & v9;
    }
    while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
  }
  return v6;
}

void *sub_1001EB8AC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for WeatherMapOverlayKind();
  sub_100179C0C();
  uint64_t v4 = v3;
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)v54 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for MapComponentViewModel();
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)v54 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for LocationComponentViewModel();
  sub_100162E4C();
  __chkstk_darwin(v11);
  sub_100162EF8();
  uint64_t v68 = v12;
  __chkstk_darwin(v13);
  char v15 = (char *)v54 - v14;
  uint64_t v69 = type metadata accessor for LocationComponentContainerViewModel();
  sub_100179C0C();
  uint64_t v55 = v16;
  __chkstk_darwin(v17);
  sub_100109314();
  uint64_t v71 = v18;
  char v19 = sub_10005C588();
  if (v19 != 6)
  {
    char v52 = v19;
    swift_bridgeObjectRelease();
    sub_10017DF08(&qword_100E972C8);
    uint64_t v21 = (void *)swift_allocObject();
    *((_OWORD *)v21 + 1) = xmmword_100C251B0;
    *((unsigned char *)v21 + 32) = v52;
    return v21;
  }
  uint64_t v57 = *(void *)(a1 + 16);
  if (!v57)
  {
    swift_bridgeObjectRelease();
    return _swiftEmptyArrayStorage;
  }
  uint64_t v56 = a1 + 32;
  uint64_t v64 = v4 + 88;
  uint64_t v65 = (void (**)(char *, char *, uint64_t))(v4 + 16);
  int v63 = enum case for WeatherMapOverlayKind.wind(_:);
  uint64_t v60 = v4 + 8;
  v54[1] = a1;
  swift_bridgeObjectRetain();
  uint64_t v20 = 0;
  uint64_t v21 = _swiftEmptyArrayStorage;
  uint64_t v22 = v68;
  char v67 = v15;
  while (1)
  {
    uint64_t v61 = v20;
    uint64_t v62 = v21;
    uint64_t v23 = (void *)(v56 + 24 * v20);
    uint64_t v24 = *(void *)(*v23 + 16);
    if (v24)
    {
      uint64_t v25 = v23[2];
      uint64_t v26 = v55;
      uint64_t v27 = *v23 + ((*(unsigned __int8 *)(v55 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v55 + 80));
      uint64_t v59 = *v23;
      swift_bridgeObjectRetain_n();
      uint64_t v58 = v25;
      swift_bridgeObjectRetain();
      uint64_t v70 = *(void *)(v26 + 72);
      uint64_t v28 = _swiftEmptyArrayStorage;
      while (1)
      {
        uint64_t v29 = v71;
        sub_1001EC10C(v27, v71, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
        sub_1001EC10C(v29 + *(int *)(v69 + 20), (uint64_t)v15, (void (*)(void))type metadata accessor for LocationComponentViewModel);
        sub_1001EC10C((uint64_t)v15, v22, (void (*)(void))type metadata accessor for LocationComponentViewModel);
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (!EnumCaseMultiPayload)
        {
          sub_1001EC5EC((uint64_t)v15, (void (*)(void))type metadata accessor for LocationComponentViewModel);
          uint64_t v66 = *(void *)(v22 + 72);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          char v31 = 1;
          goto LABEL_23;
        }
        if (EnumCaseMultiPayload == 18) {
          break;
        }
        switch(EnumCaseMultiPayload)
        {
          case 5:
            sub_10021EDDC(v22, (uint64_t)v10, (void (*)(void))type metadata accessor for MapComponentViewModel);
            (*v65)(v7, v10, v2);
            uint64_t v32 = sub_100181B24();
            int v34 = v33(v32);
            if (v34 == v63)
            {
              if (qword_100E623C0 != -1) {
                swift_once();
              }
              uint64_t v35 = sub_10017DF08(&qword_100E63520);
              sub_1002102B0(v35, (uint64_t)qword_100F515D8);
              swift_beginAccess();
              Tips.Parameter.wrappedValue.getter();
              int v36 = v72;
              swift_endAccess();
              sub_1001EC5EC((uint64_t)v15, (void (*)(void))type metadata accessor for LocationComponentViewModel);
              sub_1001EC5EC((uint64_t)v10, (void (*)(void))type metadata accessor for MapComponentViewModel);
              if (v36) {
                char v31 = 2;
              }
              else {
                char v31 = 3;
              }
            }
            else
            {
              sub_1001EC5EC((uint64_t)v15, (void (*)(void))type metadata accessor for LocationComponentViewModel);
              sub_1001EC5EC((uint64_t)v10, (void (*)(void))type metadata accessor for MapComponentViewModel);
              uint64_t v37 = sub_100181B24();
              v38(v37);
              char v31 = 2;
            }
            goto LABEL_23;
          case 16:
            sub_1001EC5EC((uint64_t)v15, (void (*)(void))type metadata accessor for LocationComponentViewModel);
            sub_1001A2950();
            char v31 = 4;
            goto LABEL_23;
          case 1:
            sub_1001EC5EC((uint64_t)v15, (void (*)(void))type metadata accessor for LocationComponentViewModel);
            sub_1001A2950();
            char v31 = 0;
LABEL_23:
            sub_1001EC5EC(v71, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              sub_1001F3AC4();
              uint64_t v28 = v41;
            }
            unint64_t v40 = v28[2];
            unint64_t v39 = v28[3];
            if (v40 >= v39 >> 1)
            {
              sub_10016534C(v39);
              sub_1001F3AC4();
              uint64_t v28 = v42;
            }
            v28[2] = v40 + 1;
            *((unsigned char *)v28 + v40 + 32) = v31;
            char v15 = v67;
            uint64_t v22 = v68;
            goto LABEL_28;
        }
        sub_1001EC5EC((uint64_t)v15, (void (*)(void))type metadata accessor for LocationComponentViewModel);
        sub_1001A2950();
        sub_1001EC5EC(v71, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
LABEL_28:
        v27 += v70;
        if (!--v24)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
          goto LABEL_31;
        }
      }
      sub_1001EC5EC((uint64_t)v15, (void (*)(void))type metadata accessor for LocationComponentViewModel);
      sub_1001A2950();
      char v31 = 5;
      goto LABEL_23;
    }
    uint64_t v28 = _swiftEmptyArrayStorage;
LABEL_31:
    int64_t v43 = v28[2];
    uint64_t v21 = v62;
    uint64_t v44 = v62[2];
    if (__OFADD__(v44, v43)) {
      break;
    }
    if (!swift_isUniquelyReferenced_nonNull_native() || v44 + v43 > v21[3] >> 1)
    {
      sub_1001F3AC4();
      uint64_t v21 = v45;
    }
    uint64_t v22 = v68;
    if (v28[2])
    {
      uint64_t v46 = v21[2];
      if ((v21[3] >> 1) - v46 < v43) {
        goto LABEL_53;
      }
      uint64_t v47 = (char *)v21 + v46 + 32;
      if (v28 + 4 < (void *)&v47[v43] && v47 < (char *)v28 + v43 + 32) {
        goto LABEL_55;
      }
      memcpy(v47, v28 + 4, v43);
      if (v43)
      {
        uint64_t v49 = v21[2];
        BOOL v50 = __OFADD__(v49, v43);
        uint64_t v51 = v49 + v43;
        if (v50) {
          goto LABEL_54;
        }
        v21[2] = v51;
      }
    }
    else if (v43)
    {
      goto LABEL_52;
    }
    uint64_t v20 = v61 + 1;
    swift_bridgeObjectRelease();
    if (v20 == v57)
    {
      swift_bridgeObjectRelease_n();
      return v21;
    }
  }
  __break(1u);
LABEL_52:
  __break(1u);
LABEL_53:
  __break(1u);
LABEL_54:
  __break(1u);
LABEL_55:
  uint64_t result = (void *)_fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1001EC074()
{
  uint64_t v1 = sub_100189008();
  v2(v1);
  sub_100162E4C();
  uint64_t v3 = sub_10011BFA4();
  v4(v3);
  return v0;
}

uint64_t sub_1001EC0BC()
{
  uint64_t v1 = sub_100162814();
  v2(v1);
  sub_100162E4C();
  sub_100119108();
  v3();
  return v0;
}

uint64_t sub_1001EC10C(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(a2, a1);
  return a2;
}

uint64_t type metadata accessor for RowModifier(uint64_t a1)
{
  return sub_10018678C(a1, qword_100E82F10);
}

void sub_1001EC18C()
{
  sub_100127598();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  sub_10017DF08(&qword_100E829F0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    type metadata accessor for LocationComponentHeaderViewModel(0);
    switch(sub_1005EFE04())
    {
      case 1u:
        sub_10019D1A8();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1005EFE3C();
        break;
      case 2u:
        sub_100182460();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_100119454();
        break;
      case 3u:
        type metadata accessor for WeatherDescription();
        sub_100162E4C();
        sub_10008B8B4();
        v4();
        uint64_t v5 = type metadata accessor for LocationComponentHeaderViewModel.Description(0);
        sub_1001723A0(v5);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1005EFE2C();
        break;
      case 4u:
        sub_1001A2CDC();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1005EFE4C();
        break;
      case 5u:
        sub_10019B508();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1005EFE1C();
        break;
      default:
        sub_1001A2CDC();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_100214E90();
        break;
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v6 = (int *)type metadata accessor for LocationComponentHeaderMetrics(0);
    sub_10017F440(v6);
  }
  else
  {
    *uint64_t v3 = *v1;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  sub_100166A98();
}

uint64_t type metadata accessor for LocationComponentContainerView(uint64_t a1)
{
  return sub_10018678C(a1, qword_100E82888);
}

uint64_t sub_1001EC3A8@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X4>, uint64_t a4@<X8>)
{
  uint64_t v6 = *(void *)(v4 - 1200);
  return sub_1002A5408(a1, a2, v6, a3, a4);
}

uint64_t sub_1001EC3D8()
{
  return v0;
}

uint64_t sub_1001EC3E8()
{
  return v0;
}

uint64_t sub_1001EC3FC(uint64_t a1)
{
  *(void *)(v1 - 96) = a1;
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t sub_1001EC424()
{
  return sub_100147E60(v1, v2, v3, v0);
}

uint64_t sub_1001EC460()
{
  return v0;
}

uint64_t sub_1001EC474()
{
  return v0 - 88;
}

uint64_t sub_1001EC480()
{
  return *(void *)(v0 + 16);
}

uint64_t sub_1001EC4B0()
{
  return v0;
}

uint64_t sub_1001EC4DC(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_1001EC534(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_1001EC58C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1001EC5EC(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_1001EC644(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_45;
    case 1:
      swift_bridgeObjectRelease();
      uint64_t v3 = (int *)type metadata accessor for DailyForecastComponentViewModel(0);
      uint64_t v4 = a1 + v3[5];
      uint64_t v5 = sub_10017DF08(&qword_100E65250);
      uint64_t v6 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
      v6(v4, v5);
      v6(a1 + v3[6], v5);
      v6(a1 + v3[7], v5);
      goto LABEL_26;
    case 2:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v7 = a1 + *(int *)(type metadata accessor for FeelsLikeComponentViewModel(0) + 24);
      uint64_t v8 = type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference(0);
      if (!_s7Weather24LocationCompositionStateOwet_0(v7, 1, v8))
      {
        swift_bridgeObjectRelease();
        uint64_t v9 = v7 + *(int *)(v8 + 20);
        uint64_t v10 = type metadata accessor for TemperatureScaleConfiguration();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
        type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
        swift_bridgeObjectRelease();
      }
      goto LABEL_45;
    case 3:
    case 4:
      goto LABEL_45;
    case 5:
      uint64_t v11 = type metadata accessor for WeatherMapOverlayKind();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(a1, v11);
      uint64_t v12 = type metadata accessor for MapComponentViewModel();
      uint64_t v13 = a1 + *(int *)(v12 + 20);
      uint64_t v14 = type metadata accessor for Location();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
      uint64_t v15 = a1 + *(int *)(v12 + 24);
      uint64_t v16 = (int *)type metadata accessor for WeatherData(0);
      if (!_s7Weather24LocationCompositionStateOwet_0(v15, 1, (uint64_t)v16))
      {
        swift_bridgeObjectRelease();
        uint64_t v17 = v15 + v16[5];
        uint64_t v18 = type metadata accessor for Locale();
        if (!_s7Weather24LocationCompositionStateOwet_0(v17, 1, v18)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(v17, v18);
        }
        uint64_t v19 = v15 + v16[6];
        uint64_t v20 = type metadata accessor for WeatherDataModel();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v20 - 8) + 8))(v19, v20);
        uint64_t v21 = v15 + v16[7];
        uint64_t v22 = sub_10017DF08(&qword_100E63738);
        if (!_s7Weather24LocationCompositionStateOwet_0(v21, 1, v22))
        {
          uint64_t v23 = type metadata accessor for Date();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v23 - 8) + 8))(v21, v23);
        }
        uint64_t v24 = v15 + v16[8];
        type metadata accessor for WeatherData.WeatherStatisticsState(0);
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload == 1)
        {
          uint64_t v40 = type metadata accessor for WeatherStatisticsModel();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v40 - 8) + 8))(v24, v40);
        }
        else if (!EnumCaseMultiPayload)
        {
          swift_bridgeObjectRelease();
        }
        uint64_t v41 = v15 + v16[9];
        uint64_t v42 = type metadata accessor for WeatherDataOverrides();
        if (!_s7Weather24LocationCompositionStateOwet_0(v41, 1, v42))
        {
          uint64_t v43 = type metadata accessor for Date();
          if (!_s7Weather24LocationCompositionStateOwet_0(v41, 1, v43)) {
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v43 - 8) + 8))(v41, v43);
          }
          uint64_t v44 = v41 + *(int *)(v42 + 20);
          if (!_s7Weather24LocationCompositionStateOwet_0(v44, 1, v43)) {
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v43 - 8) + 8))(v44, v43);
          }
        }
      }
      goto LABEL_45;
    case 6:
      swift_bridgeObjectRelease();
      int v26 = *(unsigned __int8 *)(a1 + 32);
      if (v26 != 255) {
        sub_1001F3C7C(*(void *)(a1 + 16), *(void *)(a1 + 24), v26);
      }
      swift_bridgeObjectRelease();
      a1 += *(int *)(type metadata accessor for MoonComponentViewModel() + 28);
      uint64_t HourPrecipitationChartViewModel = type metadata accessor for Date();
      goto LABEL_29;
    case 7:
      type metadata accessor for NewsArticleComponentViewModel(0);
      uint64_t result = swift_getEnumCaseMultiPayload();
      if (result != 1) {
        return result;
      }
      swift_bridgeObjectRelease();
      uint64_t v28 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
      uint64_t v29 = a1 + v28[5];
      uint64_t v30 = type metadata accessor for URL();
      if (!_s7Weather24LocationCompositionStateOwet_0(v29, 1, v30)) {
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v30 - 8) + 8))(v29, v30);
      }
      swift_bridgeObjectRelease();
      uint64_t v45 = *(void (**)(uint64_t, uint64_t))(*(void *)(v30 - 8) + 8);
      v45(a1 + v28[7], v30);
      uint64_t v31 = a1 + v28[8];
      uint64_t result = _s7Weather24LocationCompositionStateOwet_0(v31, 1, v30);
      if (result) {
        return result;
      }
      uint64_t v35 = v31;
      uint64_t v34 = v30;
      os_log_type_t v33 = (uint64_t (*)(uint64_t, uint64_t))v45;
      goto LABEL_30;
    case 8:
      swift_bridgeObjectRelease();
      a1 += *(int *)(type metadata accessor for NextHourPrecipitationComponentViewModel() + 20);
      uint64_t HourPrecipitationChartViewModel = type metadata accessor for NextHourPrecipitationChartViewModel();
      goto LABEL_29;
    case 9:
      uint64_t HourPrecipitationChartViewModel = type metadata accessor for Location();
      goto LABEL_29;
    case 10:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_45;
    case 11:
      uint64_t v32 = type metadata accessor for PressureTrend();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v32 - 8) + 8))(a1, v32);
      type metadata accessor for PressureComponentViewModel();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_26:
      swift_bridgeObjectRelease();
      goto LABEL_45;
    case 13:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      a1 += *(int *)(type metadata accessor for SevereAlertComponentViewModel() + 36);
      uint64_t HourPrecipitationChartViewModel = type metadata accessor for WeatherAlert.Prominence();
      goto LABEL_29;
    case 14:
      uint64_t HourPrecipitationChartViewModel = type metadata accessor for SunriseSunsetViewModel();
LABEL_29:
      os_log_type_t v33 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(HourPrecipitationChartViewModel - 8) + 8);
      uint64_t v34 = HourPrecipitationChartViewModel;
      uint64_t v35 = a1;
LABEL_30:
      return v33(v35, v34);
    case 15:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_45;
    case 16:
      swift_bridgeObjectRelease();
      uint64_t v36 = a1 + *(int *)(type metadata accessor for UVIndexComponentViewModel() + 28);
      uint64_t v37 = type metadata accessor for WeatherDescription();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v37 - 8) + 8))(v36, v37);
      goto LABEL_45;
    case 17:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_45;
    case 18:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v38 = a1 + *(int *)(type metadata accessor for WindComponentViewModel() + 68);
      uint64_t v39 = type metadata accessor for WindComponentCompassViewModel();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v39 - 8) + 8))(v38, v39);
LABEL_45:
      uint64_t result = swift_bridgeObjectRelease();
      break;
    default:
      return result;
  }
  return result;
}

void *sub_1001ECF7C(void *a1, void *a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      *a1 = *a2;
      *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 1);
      *(_OWORD *)(a1 + 3) = *(_OWORD *)(a2 + 3);
      uint64_t v6 = a2[6];
      a1[5] = a2[5];
      a1[6] = v6;
      uint64_t v7 = a2[8];
      a1[7] = a2[7];
      a1[8] = v7;
      uint64_t v8 = a2[10];
      a1[9] = a2[9];
      a1[10] = v8;
      a1[11] = a2[11];
      *((_WORD *)a1 + 48) = *((_WORD *)a2 + 48);
      a1[13] = a2[13];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_60;
    case 1u:
      *a1 = *a2;
      uint64_t v9 = (int *)type metadata accessor for DailyForecastComponentViewModel(0);
      uint64_t v10 = v9[5];
      uint64_t v11 = (char *)a1 + v10;
      uint64_t v12 = (char *)a2 + v10;
      swift_bridgeObjectRetain();
      uint64_t v13 = sub_10017DF08(&qword_100E65250);
      uint64_t v14 = *(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16);
      v14(v11, v12, v13);
      v14((char *)a1 + v9[6], (char *)a2 + v9[6], v13);
      v14((char *)a1 + v9[7], (char *)a2 + v9[7], v13);
      uint64_t v15 = v9[8];
      uint64_t v16 = (void *)((char *)a1 + v15);
      uint64_t v17 = (void *)((char *)a2 + v15);
      uint64_t v18 = v17[1];
      void *v16 = *v17;
      v16[1] = v18;
      uint64_t v19 = v9[9];
      uint64_t v20 = (void *)((char *)a1 + v19);
      uint64_t v21 = (void *)((char *)a2 + v19);
      uint64_t v22 = v21[1];
      void *v20 = *v21;
      v20[1] = v22;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_60;
    case 2u:
      uint64_t v23 = a2[1];
      *a1 = *a2;
      a1[1] = v23;
      uint64_t v24 = a2[3];
      a1[2] = a2[2];
      a1[3] = v24;
      uint64_t v25 = type metadata accessor for FeelsLikeComponentViewModel(0);
      uint64_t v26 = *(int *)(v25 + 24);
      uint64_t v27 = (void *)((char *)a1 + v26);
      uint64_t v28 = (void *)((char *)a2 + v26);
      uint64_t v29 = type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference(0);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v28, 1, v29))
      {
        uint64_t v30 = sub_10017DF08(&qword_100E63750);
        memcpy(v27, v28, *(void *)(*(void *)(v30 - 8) + 64));
      }
      else
      {
        uint64_t v134 = v28[1];
        void *v27 = *v28;
        v27[1] = v134;
        uint64_t v135 = *(int *)(v29 + 20);
        v136 = (char *)v27 + v135;
        int v137 = (char *)v28 + v135;
        uint64_t v138 = type metadata accessor for TemperatureScaleConfiguration();
        v213 = *(void (**)(char *, char *, uint64_t))(*(void *)(v138 - 8) + 16);
        swift_bridgeObjectRetain();
        v213(v136, v137, v138);
        uint64_t v139 = (int *)type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
        *(void *)&v136[v139[5]] = *(void *)&v137[v139[5]];
        *(void *)&v136[v139[6]] = *(void *)&v137[v139[6]];
        *(void *)&v136[v139[7]] = *(void *)&v137[v139[7]];
        uint64_t v140 = v139[8];
        uint64_t v141 = &v136[v140];
        uint64_t v142 = &v137[v140];
        uint64_t v144 = *(void *)v142;
        uint64_t v143 = *((void *)v142 + 1);
        *(void *)uint64_t v141 = v144;
        *((void *)v141 + 1) = v143;
        v136[v139[9]] = v137[v139[9]];
        swift_bridgeObjectRetain();
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v27, 0, 1, v29);
      }
      uint64_t v145 = *(int *)(v25 + 28);
      v146 = (void *)((char *)a1 + v145);
      v147 = (void *)((char *)a2 + v145);
      uint64_t v148 = v147[1];
      void *v146 = *v147;
      v146[1] = v148;
      swift_bridgeObjectRetain();
      goto LABEL_60;
    case 3u:
      *a1 = *a2;
      swift_bridgeObjectRetain();
      goto LABEL_60;
    case 4u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      a1[2] = a2[2];
      swift_bridgeObjectRetain();
      goto LABEL_60;
    case 5u:
      uint64_t v31 = type metadata accessor for WeatherMapOverlayKind();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v31 - 8) + 16))(a1, a2, v31);
      uint64_t v32 = (int *)type metadata accessor for MapComponentViewModel();
      uint64_t v33 = v32[5];
      uint64_t v34 = (char *)a1 + v33;
      uint64_t v35 = (char *)a2 + v33;
      uint64_t v36 = type metadata accessor for Location();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 16))(v34, v35, v36);
      uint64_t v37 = v32[6];
      uint64_t v38 = (void *)((char *)a1 + v37);
      uint64_t v39 = (void *)((char *)a2 + v37);
      uint64_t v40 = (int *)type metadata accessor for WeatherData(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v39, 1, (uint64_t)v40))
      {
        uint64_t v41 = sub_10017DF08(&qword_100E63850);
        memcpy(v38, v39, *(void *)(*(void *)(v41 - 8) + 64));
        goto LABEL_59;
      }
      uint64_t v149 = v39[1];
      void *v38 = *v39;
      v38[1] = v149;
      uint64_t v150 = v40[5];
      uint64_t v151 = (char *)v38 + v150;
      uint64_t v152 = (char *)v39 + v150;
      uint64_t v153 = type metadata accessor for Locale();
      swift_bridgeObjectRetain();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v152, 1, v153))
      {
        uint64_t v154 = sub_10017DF08(&qword_100E63730);
        memcpy(v151, v152, *(void *)(*(void *)(v154 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v153 - 8) + 16))(v151, v152, v153);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v151, 0, 1, v153);
      }
      uint64_t v173 = v40[6];
      uint64_t v174 = (char *)v38 + v173;
      v175 = (char *)v39 + v173;
      uint64_t v176 = type metadata accessor for WeatherDataModel();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v176 - 8) + 16))(v174, v175, v176);
      uint64_t v177 = v40[7];
      uint64_t v178 = (char *)v38 + v177;
      uint64_t v179 = (char *)v39 + v177;
      uint64_t v180 = sub_10017DF08(&qword_100E63738);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v179, 1, v180))
      {
        uint64_t v181 = type metadata accessor for WeatherData.CachingState(0);
        memcpy(v178, v179, *(void *)(*(void *)(v181 - 8) + 64));
      }
      else
      {
        uint64_t v182 = type metadata accessor for Date();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v182 - 8) + 16))(v178, v179, v182);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v178, 0, 1, v180);
      }
      uint64_t v183 = v40[8];
      uint64_t v184 = (void *)((char *)v38 + v183);
      uint64_t v185 = (void *)((char *)v39 + v183);
      uint64_t v186 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 1)
      {
        uint64_t v189 = type metadata accessor for WeatherStatisticsModel();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v189 - 8) + 16))(v184, v185, v189);
        goto LABEL_47;
      }
      if (!EnumCaseMultiPayload)
      {
        uint64_t v188 = v185[1];
        *uint64_t v184 = *v185;
        v184[1] = v188;
        swift_bridgeObjectRetain();
LABEL_47:
        swift_storeEnumTagMultiPayload();
        goto LABEL_49;
      }
      memcpy(v184, v185, *(void *)(*(void *)(v186 - 8) + 64));
LABEL_49:
      uint64_t v190 = v40[9];
      uint64_t v191 = (char *)v38 + v190;
      v192 = (char *)v39 + v190;
      uint64_t v193 = type metadata accessor for WeatherDataOverrides();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v192, 1, v193))
      {
        uint64_t v194 = sub_10017DF08(&qword_100E63740);
        memcpy(v191, v192, *(void *)(*(void *)(v194 - 8) + 64));
      }
      else
      {
        uint64_t v195 = type metadata accessor for Date();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v192, 1, v195))
        {
          uint64_t v196 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
          memcpy(v191, v192, *(void *)(*(void *)(v196 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v195 - 8) + 16))(v191, v192, v195);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v191, 0, 1, v195);
        }
        uint64_t v197 = *(int *)(v193 + 20);
        uint64_t v198 = &v191[v197];
        uint64_t v199 = &v192[v197];
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v199, 1, v195))
        {
          uint64_t v200 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
          memcpy(v198, v199, *(void *)(*(void *)(v200 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v195 - 8) + 16))(v198, v199, v195);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v198, 0, 1, v195);
        }
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v191, 0, 1, v193);
      }
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v38, 0, 1, (uint64_t)v40);
LABEL_59:
      uint64_t v201 = v32[7];
      v202 = (void *)((char *)a1 + v201);
      v203 = (void *)((char *)a2 + v201);
      uint64_t v204 = v203[1];
      void *v202 = *v203;
      v202[1] = v204;
      swift_bridgeObjectRetain();
LABEL_60:
      swift_storeEnumTagMultiPayload();
      return a1;
    case 6u:
      uint64_t v42 = a2[1];
      *a1 = *a2;
      a1[1] = v42;
      int v43 = *((unsigned __int8 *)a2 + 32);
      swift_bridgeObjectRetain();
      if (v43 == 255)
      {
        *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
        *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
      }
      else
      {
        uint64_t v44 = a2[2];
        uint64_t v45 = a2[3];
        sub_1001F3C64(v44, v45, v43);
        a1[2] = v44;
        a1[3] = v45;
        *((unsigned char *)a1 + 32) = v43;
      }
      a1[5] = a2[5];
      uint64_t v155 = (int *)type metadata accessor for MoonComponentViewModel();
      uint64_t v156 = v155[7];
      v157 = (char *)a1 + v156;
      unint64_t v158 = (char *)a2 + v156;
      uint64_t v159 = type metadata accessor for Date();
      v160 = *(void (**)(char *, char *, uint64_t))(*(void *)(v159 - 8) + 16);
      swift_bridgeObjectRetain();
      v160(v157, v158, v159);
      *((unsigned char *)a1 + v155[8]) = *((unsigned char *)a2 + v155[8]);
      *(void *)((char *)a1 + v155[9]) = *(void *)((char *)a2 + v155[9]);
      goto LABEL_60;
    case 7u:
      uint64_t v46 = type metadata accessor for NewsArticleComponentViewModel(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v47 = a2[1];
        *a1 = *a2;
        a1[1] = v47;
        uint64_t v48 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
        uint64_t v49 = v48[5];
        BOOL v50 = (char *)a1 + v49;
        uint64_t v51 = (char *)a2 + v49;
        uint64_t v52 = type metadata accessor for URL();
        swift_bridgeObjectRetain();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v51, 1, v52))
        {
          uint64_t v53 = sub_10017DF08(&qword_100E749B0);
          memcpy(v50, v51, *(void *)(*(void *)(v53 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v52 - 8) + 16))(v50, v51, v52);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v50, 0, 1, v52);
        }
        uint64_t v161 = v48[6];
        uint64_t v162 = (void *)((char *)a1 + v161);
        unint64_t v163 = (void *)((char *)a2 + v161);
        uint64_t v164 = v163[1];
        *uint64_t v162 = *v163;
        v162[1] = v164;
        uint64_t v165 = v48[7];
        v166 = (char *)a1 + v165;
        os_log_type_t v167 = (char *)a2 + v165;
        v168 = *(void (**)(char *, char *, uint64_t))(*(void *)(v52 - 8) + 16);
        swift_bridgeObjectRetain();
        v168(v166, v167, v52);
        uint64_t v169 = v48[8];
        v170 = (char *)a1 + v169;
        unsigned int v171 = (char *)a2 + v169;
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2 + v169, 1, v52))
        {
          uint64_t v172 = sub_10017DF08(&qword_100E749B0);
          memcpy(v170, v171, *(void *)(*(void *)(v172 - 8) + 64));
        }
        else
        {
          v168(v170, v171, v52);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v170, 0, 1, v52);
        }
        *((unsigned char *)a1 + v48[9]) = *((unsigned char *)a2 + v48[9]);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(a1, a2, *(void *)(*(void *)(v46 - 8) + 64));
      }
      goto LABEL_60;
    case 8u:
      uint64_t v54 = a2[1];
      *a1 = *a2;
      a1[1] = v54;
      uint64_t v55 = *(int *)(type metadata accessor for NextHourPrecipitationComponentViewModel() + 20);
      uint64_t v56 = (char *)a1 + v55;
      uint64_t v57 = (char *)a2 + v55;
      uint64_t HourPrecipitationChartViewModel = type metadata accessor for NextHourPrecipitationChartViewModel();
      uint64_t v59 = *(void (**)(char *, char *, uint64_t))(*(void *)(HourPrecipitationChartViewModel - 8) + 16);
      swift_bridgeObjectRetain();
      v59(v56, v57, HourPrecipitationChartViewModel);
      goto LABEL_60;
    case 9u:
      uint64_t v60 = type metadata accessor for Location();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v60 - 8) + 16))(a1, a2, v60);
      uint64_t v61 = type metadata accessor for NotificationsOptInComponentViewModel();
      *((unsigned char *)a1 + *(int *)(v61 + 20)) = *((unsigned char *)a2 + *(int *)(v61 + 20));
      goto LABEL_60;
    case 0xAu:
      uint64_t v62 = a2[1];
      *a1 = *a2;
      a1[1] = v62;
      uint64_t v63 = a2[3];
      a1[2] = a2[2];
      a1[3] = v63;
      uint64_t v64 = a2[5];
      a1[4] = a2[4];
      a1[5] = v64;
      uint64_t v65 = a2[7];
      a1[6] = a2[6];
      a1[7] = v65;
      uint64_t v66 = a2[9];
      a1[8] = a2[8];
      a1[9] = v66;
      uint64_t v67 = a2[10];
      uint64_t v68 = a2[11];
      a1[10] = v67;
      a1[11] = v68;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_60;
    case 0xBu:
      uint64_t v69 = type metadata accessor for PressureTrend();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v69 - 8) + 16))(a1, a2, v69);
      uint64_t v70 = (int *)type metadata accessor for PressureComponentViewModel();
      uint64_t v71 = v70[5];
      unsigned __int8 v72 = (void *)((char *)a1 + v71);
      uint64_t v73 = (void *)((char *)a2 + v71);
      uint64_t v75 = *v73;
      uint64_t v74 = v73[1];
      *unsigned __int8 v72 = v75;
      v72[1] = v74;
      uint64_t v76 = v70[6];
      uint64_t v77 = (void *)((char *)a1 + v76);
      uint64_t v78 = (void *)((char *)a2 + v76);
      uint64_t v79 = v78[1];
      *uint64_t v77 = *v78;
      v77[1] = v79;
      uint64_t v80 = v70[7];
      uint64_t v81 = (void *)((char *)a1 + v80);
      uint64_t v82 = (void *)((char *)a2 + v80);
      uint64_t v83 = v82[1];
      void *v81 = *v82;
      v81[1] = v83;
      *(void *)((char *)a1 + v70[8]) = *(void *)((char *)a2 + v70[8]);
      uint64_t v84 = v70[9];
      uint64_t v85 = (void *)((char *)a1 + v84);
      unint64_t v86 = (void *)((char *)a2 + v84);
      uint64_t v87 = v86[1];
      void *v85 = *v86;
      v85[1] = v87;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_60;
    case 0xDu:
      uint64_t v88 = a2[1];
      *a1 = *a2;
      a1[1] = v88;
      uint64_t v89 = a2[3];
      a1[2] = a2[2];
      a1[3] = v89;
      uint64_t v90 = a2[5];
      a1[4] = a2[4];
      a1[5] = v90;
      uint64_t v91 = a2[7];
      a1[6] = a2[6];
      a1[7] = v91;
      a1[8] = a2[8];
      uint64_t v92 = type metadata accessor for SevereAlertComponentViewModel();
      uint64_t v93 = *(int *)(v92 + 36);
      v210 = (char *)a2 + v93;
      v211 = (char *)a1 + v93;
      uint64_t v94 = type metadata accessor for WeatherAlert.Prominence();
      v209 = *(void (**)(char *, char *, uint64_t))(*(void *)(v94 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v209(v211, v210, v94);
      *(void *)((char *)a1 + *(int *)(v92 + 40)) = *(void *)((char *)a2 + *(int *)(v92 + 40));
      goto LABEL_60;
    case 0xEu:
      uint64_t v95 = type metadata accessor for SunriseSunsetViewModel();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v95 - 8) + 16))(a1, a2, v95);
      goto LABEL_60;
    case 0xFu:
      uint64_t v96 = a2[1];
      *a1 = *a2;
      a1[1] = v96;
      uint64_t v97 = a2[3];
      a1[2] = a2[2];
      a1[3] = v97;
      uint64_t v98 = a2[5];
      a1[4] = a2[4];
      a1[5] = v98;
      uint64_t v99 = a2[7];
      a1[6] = a2[6];
      a1[7] = v99;
      uint64_t v100 = a2[9];
      a1[8] = a2[8];
      a1[9] = v100;
      uint64_t v101 = a2[11];
      a1[10] = a2[10];
      a1[11] = v101;
      uint64_t v102 = a2[13];
      a1[12] = a2[12];
      a1[13] = v102;
      uint64_t v103 = a2[15];
      a1[14] = a2[14];
      a1[15] = v103;
      uint64_t v104 = a2[17];
      a1[16] = a2[16];
      a1[17] = v104;
      uint64_t v105 = a2[19];
      a1[18] = a2[18];
      a1[19] = v105;
      uint64_t v106 = a2[21];
      a1[20] = a2[20];
      a1[21] = v106;
      uint64_t v107 = a2[23];
      a1[22] = a2[22];
      a1[23] = v107;
      uint64_t v108 = a2[24];
      uint64_t v109 = a2[25];
      a1[24] = v108;
      a1[25] = v109;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_60;
    case 0x10u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      uint64_t v110 = a2[3];
      a1[2] = a2[2];
      a1[3] = v110;
      uint64_t v111 = type metadata accessor for UVIndexComponentViewModel();
      uint64_t v112 = *(int *)(v111 + 28);
      unint64_t v113 = (char *)a1 + v112;
      uint64_t v114 = (char *)a2 + v112;
      uint64_t v115 = type metadata accessor for WeatherDescription();
      uint64_t v116 = *(void (**)(char *, char *, uint64_t))(*(void *)(v115 - 8) + 16);
      swift_bridgeObjectRetain();
      v116(v113, v114, v115);
      *(void *)((char *)a1 + *(int *)(v111 + 32)) = *(void *)((char *)a2 + *(int *)(v111 + 32));
      swift_bridgeObjectRetain();
      goto LABEL_60;
    case 0x11u:
      uint64_t v117 = a2[1];
      *a1 = *a2;
      a1[1] = v117;
      uint64_t v118 = a2[3];
      a1[2] = a2[2];
      a1[3] = v118;
      uint64_t v119 = a2[4];
      uint64_t v120 = a2[5];
      a1[4] = v119;
      a1[5] = v120;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_60;
    case 0x12u:
      uint64_t v121 = a2[1];
      *a1 = *a2;
      a1[1] = v121;
      uint64_t v122 = a2[3];
      a1[2] = a2[2];
      a1[3] = v122;
      uint64_t v123 = a2[5];
      a1[4] = a2[4];
      a1[5] = v123;
      uint64_t v124 = a2[7];
      a1[6] = a2[6];
      a1[7] = v124;
      uint64_t v125 = a2[9];
      a1[8] = a2[8];
      a1[9] = v125;
      uint64_t v126 = a2[11];
      a1[10] = a2[10];
      a1[11] = v126;
      uint64_t v127 = a2[13];
      a1[12] = a2[12];
      a1[13] = v127;
      uint64_t v128 = a2[15];
      a1[14] = a2[14];
      a1[15] = v128;
      uint64_t v129 = a2[17];
      a1[16] = a2[16];
      a1[17] = v129;
      uint64_t v130 = a2[19];
      a1[18] = a2[18];
      a1[19] = v130;
      uint64_t v131 = a2[21];
      a1[20] = a2[20];
      a1[21] = v131;
      *((_OWORD *)a1 + 11) = *((_OWORD *)a2 + 11);
      a1[24] = a2[24];
      uint64_t v212 = type metadata accessor for WindComponentViewModel();
      uint64_t v132 = *(int *)(v212 + 68);
      v207 = (char *)a2 + v132;
      v208 = (char *)a1 + v132;
      uint64_t v133 = type metadata accessor for WindComponentCompassViewModel();
      v206 = *(void (**)(char *, char *, uint64_t))(*(void *)(v133 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v206(v208, v207, v133);
      *(void *)((char *)a1 + *(int *)(v212 + 72)) = *(void *)((char *)a2 + *(int *)(v212 + 72));
      swift_bridgeObjectRetain();
      goto LABEL_60;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      return a1;
  }
}

uint64_t sub_1001EE1B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_10017DF08(&qword_100E829F0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    type metadata accessor for LocationComponentHeaderViewModel(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v9 = *(void *)(a2 + 8);
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = v9;
        uint64_t v10 = *(void *)(a2 + 24);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        *(void *)(a1 + 24) = v10;
        uint64_t v11 = *(void *)(a2 + 40);
        *(void *)(a1 + 32) = *(void *)(a2 + 32);
        *(void *)(a1 + 40) = v11;
        uint64_t v12 = *(void *)(a2 + 56);
        *(void *)(a1 + 48) = *(void *)(a2 + 48);
        *(void *)(a1 + 56) = v12;
        *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
        uint64_t v13 = *(void *)(a2 + 80);
        *(void *)(a1 + 72) = *(void *)(a2 + 72);
        *(void *)(a1 + 80) = v13;
        *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        break;
      case 2u:
        uint64_t v14 = *(void *)(a2 + 8);
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = v14;
        uint64_t v15 = *(void *)(a2 + 24);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        *(void *)(a1 + 24) = v15;
        uint64_t v16 = *(void *)(a2 + 40);
        *(void *)(a1 + 32) = *(void *)(a2 + 32);
        *(void *)(a1 + 40) = v16;
        uint64_t v17 = *(void *)(a2 + 56);
        *(void *)(a1 + 48) = *(void *)(a2 + 48);
        *(void *)(a1 + 56) = v17;
        uint64_t v18 = *(void *)(a2 + 72);
        *(void *)(a1 + 64) = *(void *)(a2 + 64);
        *(void *)(a1 + 72) = v18;
        uint64_t v19 = *(void *)(a2 + 88);
        *(void *)(a1 + 80) = *(void *)(a2 + 80);
        *(void *)(a1 + 88) = v19;
        *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
        uint64_t v20 = *(void *)(a2 + 112);
        *(void *)(a1 + 104) = *(void *)(a2 + 104);
        *(void *)(a1 + 112) = v20;
        *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        break;
      case 3u:
        uint64_t v21 = type metadata accessor for WeatherDescription();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 16))(a1, a2, v21);
        uint64_t v22 = type metadata accessor for LocationComponentHeaderViewModel.Description(0);
        uint64_t v23 = *(int *)(v22 + 20);
        uint64_t v24 = a1 + v23;
        uint64_t v25 = a2 + v23;
        uint64_t v27 = *(void *)(a2 + v23);
        uint64_t v26 = *(void *)(a2 + v23 + 8);
        *(void *)uint64_t v24 = v27;
        *(void *)(v24 + 8) = v26;
        uint64_t v28 = *(void *)(v25 + 24);
        *(void *)(v24 + 16) = *(void *)(v25 + 16);
        *(void *)(v24 + 24) = v28;
        *(unsigned char *)(v24 + 32) = *(unsigned char *)(v25 + 32);
        uint64_t v29 = *(void *)(v25 + 48);
        *(void *)(v24 + 40) = *(void *)(v25 + 40);
        *(void *)(v24 + 48) = v29;
        *(unsigned char *)(a1 + *(int *)(v22 + 24)) = *(unsigned char *)(a2 + *(int *)(v22 + 24));
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        break;
      case 5u:
        uint64_t v30 = *(void *)(a2 + 8);
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = v30;
        uint64_t v31 = *(void *)(a2 + 24);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        *(void *)(a1 + 24) = v31;
        *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
        uint64_t v32 = *(void *)(a2 + 56);
        *(void *)(a1 + 48) = *(void *)(a2 + 48);
        *(void *)(a1 + 56) = v32;
        uint64_t v33 = *(void *)(a2 + 72);
        *(void *)(a1 + 64) = *(void *)(a2 + 64);
        *(void *)(a1 + 72) = v33;
        uint64_t v34 = *(void *)(a2 + 88);
        *(void *)(a1 + 80) = *(void *)(a2 + 80);
        *(void *)(a1 + 88) = v34;
        *(void *)(a1 + 96) = *(void *)(a2 + 96);
        *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
        uint64_t v35 = *(void *)(a2 + 120);
        *(void *)(a1 + 112) = *(void *)(a2 + 112);
        *(void *)(a1 + 120) = v35;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        break;
      default:
        uint64_t v6 = *(void *)(a2 + 8);
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = v6;
        uint64_t v7 = *(void *)(a2 + 24);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        *(void *)(a1 + 24) = v7;
        *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
        uint64_t v8 = *(void *)(a2 + 48);
        *(void *)(a1 + 40) = *(void *)(a2 + 40);
        *(void *)(a1 + 48) = v8;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        break;
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v36 = (int *)type metadata accessor for LocationComponentHeaderMetrics(0);
    *(void *)(a1 + v36[5]) = *(void *)(a2 + v36[5]);
    *(void *)(a1 + v36[6]) = *(void *)(a2 + v36[6]);
    uint64_t v37 = v36[7];
    uint64_t v38 = a1 + v37;
    uint64_t v39 = a2 + v37;
    *(void *)uint64_t v38 = *(void *)v39;
    *(unsigned char *)(v38 + 8) = *(unsigned char *)(v39 + 8);
    *(unsigned char *)(a1 + v36[8]) = *(unsigned char *)(a2 + v36[8]);
  }
  else
  {
    *(void *)a1 = *(void *)a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v40 = *(int *)(a3 + 20);
  uint64_t v41 = a1 + v40;
  uint64_t v42 = a2 + v40;
  uint64_t v43 = *(void *)v42;
  char v44 = *(unsigned char *)(v42 + 8);
  sub_100195B7C(*(void *)v42, v44);
  *(void *)uint64_t v41 = v43;
  *(unsigned char *)(v41 + 8) = v44;
  uint64_t v45 = *(int *)(a3 + 24);
  uint64_t v46 = a1 + v45;
  uint64_t v47 = a2 + v45;
  *(_OWORD *)uint64_t v46 = *(_OWORD *)v47;
  *(_OWORD *)(v46 + 9) = *(_OWORD *)(v47 + 9);
  *(void *)(v46 + 32) = *(void *)(v47 + 32);
  swift_retain();
  return a1;
}

uint64_t sub_1001EE5EC(uint64_t a1, uint64_t a2, int *a3)
{
  type metadata accessor for LocationComponentHeaderViewModel(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v9 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v9;
      uint64_t v10 = *(void *)(a2 + 24);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = v10;
      uint64_t v11 = *(void *)(a2 + 40);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(void *)(a1 + 40) = v11;
      uint64_t v12 = *(void *)(a2 + 56);
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(void *)(a1 + 56) = v12;
      *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
      uint64_t v13 = *(void *)(a2 + 80);
      *(void *)(a1 + 72) = *(void *)(a2 + 72);
      *(void *)(a1 + 80) = v13;
      *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      break;
    case 2u:
      uint64_t v14 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v14;
      uint64_t v15 = *(void *)(a2 + 24);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = v15;
      uint64_t v16 = *(void *)(a2 + 40);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(void *)(a1 + 40) = v16;
      uint64_t v17 = *(void *)(a2 + 56);
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(void *)(a1 + 56) = v17;
      uint64_t v18 = *(void *)(a2 + 72);
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      *(void *)(a1 + 72) = v18;
      uint64_t v19 = *(void *)(a2 + 88);
      *(void *)(a1 + 80) = *(void *)(a2 + 80);
      *(void *)(a1 + 88) = v19;
      *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
      uint64_t v20 = a3;
      uint64_t v21 = *(void *)(a2 + 112);
      *(void *)(a1 + 104) = *(void *)(a2 + 104);
      *(void *)(a1 + 112) = v21;
      *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      a3 = v20;
      swift_bridgeObjectRetain();
      break;
    case 3u:
      uint64_t v22 = type metadata accessor for WeatherDescription();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16))(a1, a2, v22);
      uint64_t v23 = type metadata accessor for LocationComponentHeaderViewModel.Description(0);
      uint64_t v24 = *(int *)(v23 + 20);
      uint64_t v25 = a1 + v24;
      uint64_t v26 = a2 + v24;
      uint64_t v28 = *(void *)(a2 + v24);
      uint64_t v27 = *(void *)(a2 + v24 + 8);
      *(void *)uint64_t v25 = v28;
      *(void *)(v25 + 8) = v27;
      uint64_t v29 = *(void *)(v26 + 24);
      *(void *)(v25 + 16) = *(void *)(v26 + 16);
      *(void *)(v25 + 24) = v29;
      *(unsigned char *)(v25 + 32) = *(unsigned char *)(v26 + 32);
      uint64_t v30 = *(void *)(v26 + 48);
      *(void *)(v25 + 40) = *(void *)(v26 + 40);
      *(void *)(v25 + 48) = v30;
      *(unsigned char *)(a1 + *(int *)(v23 + 24)) = *(unsigned char *)(a2 + *(int *)(v23 + 24));
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      break;
    case 5u:
      uint64_t v31 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v31;
      uint64_t v32 = *(void *)(a2 + 24);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = v32;
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
      uint64_t v33 = *(void *)(a2 + 56);
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(void *)(a1 + 56) = v33;
      uint64_t v34 = *(void *)(a2 + 72);
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      *(void *)(a1 + 72) = v34;
      uint64_t v35 = *(void *)(a2 + 88);
      *(void *)(a1 + 80) = *(void *)(a2 + 80);
      *(void *)(a1 + 88) = v35;
      *(void *)(a1 + 96) = *(void *)(a2 + 96);
      *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
      uint64_t v36 = *(void *)(a2 + 120);
      *(void *)(a1 + 112) = *(void *)(a2 + 112);
      *(void *)(a1 + 120) = v36;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      break;
    default:
      uint64_t v6 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v6;
      uint64_t v7 = *(void *)(a2 + 24);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = v7;
      *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
      uint64_t v8 = *(void *)(a2 + 48);
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      *(void *)(a1 + 48) = v8;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      break;
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v37 = a3[5];
  uint64_t v38 = (void *)(a1 + v37);
  uint64_t v39 = (void *)(a2 + v37);
  uint64_t v40 = type metadata accessor for LocationComponentViewModel();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      void *v38 = *v39;
      *(_OWORD *)(v38 + 1) = *(_OWORD *)(v39 + 1);
      *(_OWORD *)(v38 + 3) = *(_OWORD *)(v39 + 3);
      uint64_t v41 = v39[6];
      v38[5] = v39[5];
      v38[6] = v41;
      uint64_t v42 = v39[8];
      v38[7] = v39[7];
      v38[8] = v42;
      uint64_t v43 = v39[10];
      v38[9] = v39[9];
      v38[10] = v43;
      v38[11] = v39[11];
      *((_WORD *)v38 + 48) = *((_WORD *)v39 + 48);
      v38[13] = v39[13];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_65;
    case 1u:
      void *v38 = *v39;
      char v44 = (int *)type metadata accessor for DailyForecastComponentViewModel(0);
      uint64_t v45 = v44[5];
      uint64_t v46 = (char *)v38 + v45;
      uint64_t v47 = (char *)v39 + v45;
      swift_bridgeObjectRetain();
      uint64_t v48 = sub_10017DF08(&qword_100E65250);
      uint64_t v49 = *(void (**)(char *, char *, uint64_t))(*(void *)(v48 - 8) + 16);
      v49(v46, v47, v48);
      v49((char *)v38 + v44[6], (char *)v39 + v44[6], v48);
      v49((char *)v38 + v44[7], (char *)v39 + v44[7], v48);
      uint64_t v50 = v44[8];
      uint64_t v51 = (void *)((char *)v38 + v50);
      uint64_t v52 = (void *)((char *)v39 + v50);
      uint64_t v53 = v52[1];
      *uint64_t v51 = *v52;
      v51[1] = v53;
      uint64_t v54 = v44[9];
      uint64_t v55 = (void *)((char *)v38 + v54);
      uint64_t v56 = (void *)((char *)v39 + v54);
      uint64_t v57 = v56[1];
      *uint64_t v55 = *v56;
      v55[1] = v57;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_65;
    case 2u:
      v274 = a3;
      uint64_t v58 = v39[1];
      void *v38 = *v39;
      v38[1] = v58;
      uint64_t v59 = v39[3];
      v38[2] = v39[2];
      v38[3] = v59;
      uint64_t v60 = type metadata accessor for FeelsLikeComponentViewModel(0);
      uint64_t v61 = *(int *)(v60 + 24);
      uint64_t v62 = (void *)((char *)v38 + v61);
      uint64_t v63 = (void *)((char *)v39 + v61);
      uint64_t v64 = type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference(0);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v63, 1, v64))
      {
        uint64_t v65 = sub_10017DF08(&qword_100E63750);
        memcpy(v62, v63, *(void *)(*(void *)(v65 - 8) + 64));
      }
      else
      {
        uint64_t v165 = v63[1];
        void *v62 = *v63;
        v62[1] = v165;
        uint64_t v166 = *(int *)(v64 + 20);
        os_log_type_t v167 = (char *)v62 + v166;
        v168 = (char *)v63 + v166;
        uint64_t v265 = (uint64_t)v62;
        uint64_t v169 = type metadata accessor for TemperatureScaleConfiguration();
        v261 = *(void (**)(char *, char *, uint64_t))(*(void *)(v169 - 8) + 16);
        swift_bridgeObjectRetain();
        v261(v167, v168, v169);
        v170 = (int *)type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
        *(void *)&v167[v170[5]] = *(void *)&v168[v170[5]];
        *(void *)&v167[v170[6]] = *(void *)&v168[v170[6]];
        *(void *)&v167[v170[7]] = *(void *)&v168[v170[7]];
        uint64_t v171 = v170[8];
        uint64_t v172 = &v167[v171];
        uint64_t v173 = &v168[v171];
        uint64_t v175 = *(void *)v173;
        uint64_t v174 = *((void *)v173 + 1);
        *(void *)uint64_t v172 = v175;
        *((void *)v172 + 1) = v174;
        v167[v170[9]] = v168[v170[9]];
        swift_bridgeObjectRetain();
        _s7Weather24LocationCompositionStateOwst_0(v265, 0, 1, v64);
      }
      a3 = v274;
      uint64_t v176 = *(int *)(v60 + 28);
      uint64_t v177 = (void *)((char *)v38 + v176);
      uint64_t v178 = (void *)((char *)v39 + v176);
      uint64_t v179 = v178[1];
      *uint64_t v177 = *v178;
      v177[1] = v179;
      swift_bridgeObjectRetain();
      goto LABEL_65;
    case 3u:
      void *v38 = *v39;
      swift_bridgeObjectRetain();
      goto LABEL_65;
    case 4u:
      *(_OWORD *)uint64_t v38 = *(_OWORD *)v39;
      v38[2] = v39[2];
      swift_bridgeObjectRetain();
      goto LABEL_65;
    case 5u:
      v275 = a3;
      uint64_t v66 = type metadata accessor for WeatherMapOverlayKind();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v66 - 8) + 16))(v38, v39, v66);
      uint64_t v67 = (int *)type metadata accessor for MapComponentViewModel();
      uint64_t v68 = v67[5];
      uint64_t v69 = (char *)v38 + v68;
      uint64_t v70 = (char *)v39 + v68;
      uint64_t v71 = type metadata accessor for Location();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v71 - 8) + 16))(v69, v70, v71);
      uint64_t v72 = v67[6];
      uint64_t v73 = (char *)v38 + v72;
      uint64_t v74 = (void *)((char *)v39 + v72);
      uint64_t v75 = type metadata accessor for WeatherData(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v74, 1, v75))
      {
        uint64_t v76 = sub_10017DF08(&qword_100E63850);
        memcpy(v73, v74, *(void *)(*(void *)(v76 - 8) + 64));
        a3 = v275;
        goto LABEL_64;
      }
      v262 = (int *)v75;
      v266 = v67;
      uint64_t v180 = v73;
      uint64_t v181 = v74[1];
      *uint64_t v180 = *v74;
      v180[1] = v181;
      uint64_t v182 = *(int *)(v75 + 20);
      uint64_t v183 = v180;
      uint64_t v184 = (char *)v180 + v182;
      uint64_t v185 = (char *)v74 + v182;
      uint64_t v186 = type metadata accessor for Locale();
      swift_bridgeObjectRetain();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v185, 1, v186))
      {
        uint64_t v187 = sub_10017DF08(&qword_100E63730);
        memcpy(v184, v185, *(void *)(*(void *)(v187 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v186 - 8) + 16))(v184, v185, v186);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v184, 0, 1, v186);
      }
      uint64_t v205 = v262[6];
      v206 = (char *)v183 + v205;
      v207 = (char *)v74 + v205;
      uint64_t v208 = type metadata accessor for WeatherDataModel();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v208 - 8) + 16))(v206, v207, v208);
      uint64_t v209 = v262[7];
      v210 = (char *)v183 + v209;
      v211 = (char *)v74 + v209;
      uint64_t v212 = sub_10017DF08(&qword_100E63738);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v211, 1, v212))
      {
        uint64_t v213 = type metadata accessor for WeatherData.CachingState(0);
        memcpy(v210, v211, *(void *)(*(void *)(v213 - 8) + 64));
      }
      else
      {
        uint64_t v214 = type metadata accessor for Date();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v214 - 8) + 16))(v210, v211, v214);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v210, 0, 1, v212);
      }
      uint64_t v215 = v262[8];
      v216 = (void *)((char *)v183 + v215);
      v217 = (void *)((char *)v74 + v215);
      uint64_t v218 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      uint64_t v273 = (uint64_t)v183;
      if (EnumCaseMultiPayload == 1)
      {
        uint64_t v221 = type metadata accessor for WeatherStatisticsModel();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v221 - 8) + 16))(v216, v217, v221);
        goto LABEL_52;
      }
      if (!EnumCaseMultiPayload)
      {
        uint64_t v220 = v217[1];
        void *v216 = *v217;
        v216[1] = v220;
        swift_bridgeObjectRetain();
LABEL_52:
        swift_storeEnumTagMultiPayload();
        goto LABEL_54;
      }
      memcpy(v216, v217, *(void *)(*(void *)(v218 - 8) + 64));
LABEL_54:
      uint64_t v67 = v266;
      uint64_t v222 = v262[9];
      v223 = (char *)v183 + v222;
      v224 = (char *)v74 + v222;
      uint64_t v225 = type metadata accessor for WeatherDataOverrides();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v224, 1, v225))
      {
        uint64_t v226 = sub_10017DF08(&qword_100E63740);
        memcpy(v223, v224, *(void *)(*(void *)(v226 - 8) + 64));
        a3 = v275;
        uint64_t v227 = (uint64_t)v262;
        uint64_t v228 = v273;
      }
      else
      {
        uint64_t v259 = v225;
        uint64_t v229 = type metadata accessor for Date();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v224, 1, v229))
        {
          uint64_t v230 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
          memcpy(v223, v224, *(void *)(*(void *)(v230 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v229 - 8) + 16))(v223, v224, v229);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v223, 0, 1, v229);
        }
        uint64_t v227 = (uint64_t)v262;
        uint64_t v231 = *(int *)(v259 + 20);
        uint64_t v257 = (uint64_t)v223;
        v232 = &v223[v231];
        v233 = &v224[v231];
        uint64_t v228 = v273;
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v233, 1, v229))
        {
          uint64_t v234 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
          memcpy(v232, v233, *(void *)(*(void *)(v234 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v229 - 8) + 16))(v232, v233, v229);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v232, 0, 1, v229);
        }
        a3 = v275;
        _s7Weather24LocationCompositionStateOwst_0(v257, 0, 1, v259);
        uint64_t v67 = v266;
      }
      _s7Weather24LocationCompositionStateOwst_0(v228, 0, 1, v227);
LABEL_64:
      uint64_t v235 = v67[7];
      v236 = (void *)((char *)v38 + v235);
      v237 = (void *)((char *)v39 + v235);
      uint64_t v238 = v237[1];
      void *v236 = *v237;
      v236[1] = v238;
      swift_bridgeObjectRetain();
LABEL_65:
      swift_storeEnumTagMultiPayload();
LABEL_66:
      uint64_t v239 = a3[7];
      *(_WORD *)(a1 + a3[6]) = *(_WORD *)(a2 + a3[6]);
      v240 = (unsigned char *)(a1 + v239);
      v241 = (unsigned char *)(a2 + v239);
      uint64_t v242 = type metadata accessor for LocationComponentAction(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v241, 1, v242))
      {
        uint64_t v243 = sub_10017DF08(&qword_100E7AF78);
        memcpy(v240, v241, *(void *)(*(void *)(v243 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            uint64_t v244 = type metadata accessor for URL();
            (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v244 - 8) + 16))(v240, v241, v244);
            uint64_t v245 = sub_10017DF08(&qword_100E66478);
            v240[*(int *)(v245 + 48)] = v241[*(int *)(v245 + 48)];
            goto LABEL_74;
          case 1u:
            uint64_t v246 = type metadata accessor for WeatherMapOverlayKind();
            (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v246 - 8) + 16))(v240, v241, v246);
            goto LABEL_74;
          case 2u:
            uint64_t v247 = type metadata accessor for DetailCondition();
            (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v247 - 8) + 16))(v240, v241, v247);
            uint64_t v248 = sub_10017DF08(&qword_100E66488);
            v240[*(int *)(v248 + 48)] = v241[*(int *)(v248 + 48)];
            goto LABEL_74;
          case 4u:
            unsigned char *v240 = *v241;
            uint64_t v249 = *(int *)(sub_10017DF08(&qword_100E66480) + 48);
            v250 = &v240[v249];
            v251 = &v241[v249];
            uint64_t v252 = type metadata accessor for Location();
            (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v252 - 8) + 16))(v250, v251, v252);
LABEL_74:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v240, v241, *(void *)(*(void *)(v242 - 8) + 64));
            break;
        }
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v240, 0, 1, v242);
      }
      return a1;
    case 6u:
      uint64_t v77 = v39[1];
      void *v38 = *v39;
      v38[1] = v77;
      int v78 = *((unsigned __int8 *)v39 + 32);
      swift_bridgeObjectRetain();
      v276 = a3;
      if (v78 == 255)
      {
        *((_OWORD *)v38 + 1) = *((_OWORD *)v39 + 1);
        *((unsigned char *)v38 + 32) = *((unsigned char *)v39 + 32);
      }
      else
      {
        uint64_t v79 = v39[2];
        uint64_t v80 = v39[3];
        sub_1001F3C64(v79, v80, v78);
        v38[2] = v79;
        v38[3] = v80;
        *((unsigned char *)v38 + 32) = v78;
      }
      v38[5] = v39[5];
      uint64_t v188 = (int *)type metadata accessor for MoonComponentViewModel();
      uint64_t v189 = v188[7];
      v272 = (char *)v38 + v189;
      uint64_t v190 = (char *)v39 + v189;
      uint64_t v191 = type metadata accessor for Date();
      v192 = *(void (**)(char *, char *, uint64_t))(*(void *)(v191 - 8) + 16);
      swift_bridgeObjectRetain();
      v192(v272, v190, v191);
      *((unsigned char *)v38 + v188[8]) = *((unsigned char *)v39 + v188[8]);
      *(void *)((char *)v38 + v188[9]) = *(void *)((char *)v39 + v188[9]);
      swift_storeEnumTagMultiPayload();
      a3 = v276;
      goto LABEL_66;
    case 7u:
      uint64_t v81 = type metadata accessor for NewsArticleComponentViewModel(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v277 = a3;
        uint64_t v82 = v39[1];
        void *v38 = *v39;
        v38[1] = v82;
        v267 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
        uint64_t v83 = v267[5];
        uint64_t v84 = (char *)v38 + v83;
        uint64_t v85 = (char *)v39 + v83;
        uint64_t v86 = type metadata accessor for URL();
        swift_bridgeObjectRetain();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v85, 1, v86))
        {
          uint64_t v87 = sub_10017DF08(&qword_100E749B0);
          memcpy(v84, v85, *(void *)(*(void *)(v87 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v86 - 8) + 16))(v84, v85, v86);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v84, 0, 1, v86);
        }
        uint64_t v193 = v267[6];
        uint64_t v194 = (void *)((char *)v38 + v193);
        uint64_t v195 = (void *)((char *)v39 + v193);
        uint64_t v196 = v195[1];
        *uint64_t v194 = *v195;
        v194[1] = v196;
        uint64_t v197 = v267[7];
        uint64_t v198 = (char *)v38 + v197;
        uint64_t v199 = (char *)v39 + v197;
        uint64_t v200 = *(void (**)(char *, char *, uint64_t))(*(void *)(v86 - 8) + 16);
        swift_bridgeObjectRetain();
        v200(v198, v199, v86);
        uint64_t v201 = v267[8];
        v202 = (char *)v38 + v201;
        v203 = (char *)v39 + v201;
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v39 + v201, 1, v86))
        {
          uint64_t v204 = sub_10017DF08(&qword_100E749B0);
          memcpy(v202, v203, *(void *)(*(void *)(v204 - 8) + 64));
        }
        else
        {
          v200(v202, v203, v86);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v202, 0, 1, v86);
        }
        a3 = v277;
        *((unsigned char *)v38 + v267[9]) = *((unsigned char *)v39 + v267[9]);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v38, v39, *(void *)(*(void *)(v81 - 8) + 64));
      }
      goto LABEL_65;
    case 8u:
      uint64_t v88 = v39[1];
      void *v38 = *v39;
      v38[1] = v88;
      uint64_t v89 = *(int *)(type metadata accessor for NextHourPrecipitationComponentViewModel() + 20);
      uint64_t v90 = (char *)v38 + v89;
      v268 = (char *)v39 + v89;
      uint64_t HourPrecipitationChartViewModel = type metadata accessor for NextHourPrecipitationChartViewModel();
      uint64_t v92 = *(void (**)(char *, char *, uint64_t))(*(void *)(HourPrecipitationChartViewModel - 8) + 16);
      swift_bridgeObjectRetain();
      v92(v90, v268, HourPrecipitationChartViewModel);
      goto LABEL_65;
    case 9u:
      uint64_t v93 = type metadata accessor for Location();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v93 - 8) + 16))(v38, v39, v93);
      uint64_t v94 = type metadata accessor for NotificationsOptInComponentViewModel();
      *((unsigned char *)v38 + *(int *)(v94 + 20)) = *((unsigned char *)v39 + *(int *)(v94 + 20));
      goto LABEL_65;
    case 0xAu:
      uint64_t v95 = v39[1];
      void *v38 = *v39;
      v38[1] = v95;
      uint64_t v96 = v39[3];
      v38[2] = v39[2];
      v38[3] = v96;
      uint64_t v97 = v39[5];
      v38[4] = v39[4];
      v38[5] = v97;
      uint64_t v98 = v39[7];
      v38[6] = v39[6];
      v38[7] = v98;
      uint64_t v99 = v39[9];
      v38[8] = v39[8];
      v38[9] = v99;
      uint64_t v100 = v39[10];
      uint64_t v101 = v39[11];
      v38[10] = v100;
      v38[11] = v101;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_65;
    case 0xBu:
      uint64_t v102 = type metadata accessor for PressureTrend();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v102 - 8) + 16))(v38, v39, v102);
      uint64_t v103 = (int *)type metadata accessor for PressureComponentViewModel();
      uint64_t v104 = v103[5];
      uint64_t v105 = (void *)((char *)v38 + v104);
      uint64_t v106 = (void *)((char *)v39 + v104);
      uint64_t v108 = *v106;
      uint64_t v107 = v106[1];
      *uint64_t v105 = v108;
      v105[1] = v107;
      uint64_t v109 = v103[6];
      uint64_t v110 = (void *)((char *)v38 + v109);
      uint64_t v111 = (void *)((char *)v39 + v109);
      uint64_t v112 = v111[1];
      void *v110 = *v111;
      v110[1] = v112;
      uint64_t v113 = v103[7];
      uint64_t v114 = (void *)((char *)v38 + v113);
      uint64_t v115 = (void *)((char *)v39 + v113);
      uint64_t v116 = v115[1];
      void *v114 = *v115;
      v114[1] = v116;
      *(void *)((char *)v38 + v103[8]) = *(void *)((char *)v39 + v103[8]);
      uint64_t v117 = v103[9];
      uint64_t v118 = (void *)((char *)v38 + v117);
      uint64_t v119 = (void *)((char *)v39 + v117);
      uint64_t v120 = v119[1];
      *uint64_t v118 = *v119;
      v118[1] = v120;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_65;
    case 0xDu:
      uint64_t v121 = v39[1];
      void *v38 = *v39;
      v38[1] = v121;
      uint64_t v122 = v39[3];
      v38[2] = v39[2];
      v38[3] = v122;
      uint64_t v123 = v39[5];
      v38[4] = v39[4];
      v38[5] = v123;
      uint64_t v124 = v39[7];
      v38[6] = v39[6];
      v38[7] = v124;
      v38[8] = v39[8];
      uint64_t v125 = type metadata accessor for SevereAlertComponentViewModel();
      uint64_t v126 = *(int *)(v125 + 36);
      v263 = (char *)v38 + v126;
      uint64_t v269 = v125;
      v260 = (char *)v39 + v126;
      uint64_t v127 = type metadata accessor for WeatherAlert.Prominence();
      v258 = *(void (**)(char *, char *, uint64_t))(*(void *)(v127 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v258(v263, v260, v127);
      *(void *)((char *)v38 + *(int *)(v269 + 40)) = *(void *)((char *)v39 + *(int *)(v269 + 40));
      goto LABEL_65;
    case 0xEu:
      uint64_t v128 = type metadata accessor for SunriseSunsetViewModel();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v128 - 8) + 16))(v38, v39, v128);
      goto LABEL_65;
    case 0xFu:
      uint64_t v129 = v39[1];
      void *v38 = *v39;
      v38[1] = v129;
      uint64_t v130 = v39[3];
      v38[2] = v39[2];
      v38[3] = v130;
      uint64_t v131 = v39[5];
      v38[4] = v39[4];
      v38[5] = v131;
      uint64_t v132 = v39[7];
      v38[6] = v39[6];
      v38[7] = v132;
      uint64_t v133 = v39[9];
      v38[8] = v39[8];
      v38[9] = v133;
      uint64_t v134 = v39[11];
      v38[10] = v39[10];
      v38[11] = v134;
      v278 = a3;
      uint64_t v135 = v39[13];
      v38[12] = v39[12];
      v38[13] = v135;
      uint64_t v136 = v39[15];
      v38[14] = v39[14];
      v38[15] = v136;
      uint64_t v137 = v39[17];
      v38[16] = v39[16];
      v38[17] = v137;
      uint64_t v138 = v39[19];
      v38[18] = v39[18];
      v38[19] = v138;
      uint64_t v139 = v39[21];
      v38[20] = v39[20];
      v38[21] = v139;
      uint64_t v140 = v39[23];
      v38[22] = v39[22];
      v38[23] = v140;
      uint64_t v141 = v39[24];
      uint64_t v142 = v39[25];
      v38[24] = v141;
      v38[25] = v142;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      a3 = v278;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_65;
    case 0x10u:
      *(_OWORD *)uint64_t v38 = *(_OWORD *)v39;
      uint64_t v143 = v39[3];
      v38[2] = v39[2];
      v38[3] = v143;
      uint64_t v144 = type metadata accessor for UVIndexComponentViewModel();
      uint64_t v145 = *(int *)(v144 + 28);
      v264 = (char *)v39 + v145;
      v270 = (char *)v38 + v145;
      uint64_t v146 = type metadata accessor for WeatherDescription();
      v147 = a3;
      uint64_t v148 = *(void (**)(char *, char *, uint64_t))(*(void *)(v146 - 8) + 16);
      swift_bridgeObjectRetain();
      v148(v270, v264, v146);
      a3 = v147;
      *(void *)((char *)v38 + *(int *)(v144 + 32)) = *(void *)((char *)v39 + *(int *)(v144 + 32));
      swift_bridgeObjectRetain();
      goto LABEL_65;
    case 0x11u:
      uint64_t v149 = v39[1];
      void *v38 = *v39;
      v38[1] = v149;
      uint64_t v150 = v39[3];
      v38[2] = v39[2];
      v38[3] = v150;
      uint64_t v151 = v39[5];
      v38[4] = v39[4];
      v38[5] = v151;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_65;
    case 0x12u:
      uint64_t v152 = v39[1];
      void *v38 = *v39;
      v38[1] = v152;
      uint64_t v153 = v39[3];
      v38[2] = v39[2];
      v38[3] = v153;
      v279 = a3;
      uint64_t v154 = v39[5];
      v38[4] = v39[4];
      v38[5] = v154;
      uint64_t v155 = v39[7];
      v38[6] = v39[6];
      v38[7] = v155;
      uint64_t v156 = v39[9];
      v38[8] = v39[8];
      v38[9] = v156;
      uint64_t v157 = v39[11];
      v38[10] = v39[10];
      v38[11] = v157;
      uint64_t v158 = v39[13];
      v38[12] = v39[12];
      v38[13] = v158;
      uint64_t v159 = v39[15];
      v38[14] = v39[14];
      v38[15] = v159;
      uint64_t v160 = v39[17];
      v38[16] = v39[16];
      v38[17] = v160;
      uint64_t v161 = v39[19];
      v38[18] = v39[18];
      v38[19] = v161;
      uint64_t v162 = v39[21];
      v38[20] = v39[20];
      v38[21] = v162;
      *((_OWORD *)v38 + 11) = *((_OWORD *)v39 + 11);
      v38[24] = v39[24];
      uint64_t v271 = type metadata accessor for WindComponentViewModel();
      uint64_t v163 = *(int *)(v271 + 68);
      v255 = (char *)v39 + v163;
      v256 = (char *)v38 + v163;
      uint64_t v164 = type metadata accessor for WindComponentCompassViewModel();
      v254 = *(void (**)(char *, char *, uint64_t))(*(void *)(v164 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      a3 = v279;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v254(v256, v255, v164);
      *(void *)((char *)v38 + *(int *)(v271 + 72)) = *(void *)((char *)v39 + *(int *)(v271 + 72));
      swift_bridgeObjectRetain();
      goto LABEL_65;
    default:
      memcpy(v38, v39, *(void *)(*(void *)(v40 - 8) + 64));
      goto LABEL_66;
  }
}

uint64_t sub_1001EFE78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v6 = *(void *)(a2 + 16);
  char v7 = *(unsigned char *)(a2 + 24);
  sub_100195B7C(v6, v7);
  *(void *)(a1 + 16) = v6;
  *(unsigned char *)(a1 + 24) = v7;
  uint64_t v8 = *(int *)(a3 + 28);
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (void *)(a2 + v8);
  sub_10017DF08(&qword_100E82BD8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *uint64_t v9 = *v10;
    uint64_t v11 = *(int *)(type metadata accessor for LocationComponentCornerRadiusConfiguration(0) + 20);
    uint64_t v12 = (char *)v9 + v11;
    uint64_t v13 = (char *)v10 + v11;
    uint64_t v14 = type metadata accessor for RoundedCornerStyle();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  }
  else
  {
    *uint64_t v9 = *v10;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v15 = *(int *)(a3 + 32);
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  long long v18 = *(_OWORD *)(v17 + 16);
  *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
  *(_OWORD *)(v16 + 16) = v18;
  *(_OWORD *)(v16 + 32) = *(_OWORD *)(v17 + 32);
  *(unsigned char *)(v16 + 48) = *(unsigned char *)(v17 + 48);
  *(void *)(v16 + 56) = *(void *)(v17 + 56);
  swift_retain();
  return a1;
}

void sub_1001EFFBC()
{
}

uint64_t sub_1001EFFFC(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  uint64_t v4 = sub_10016518C();
  v5(v4);
  return a2;
}

uint64_t type metadata accessor for LocationComponentHeaderMetrics(uint64_t a1)
{
  return sub_10018678C(a1, qword_100E7AF30);
}

uint64_t type metadata accessor for LocationComponentCornerRadiusConfiguration(uint64_t a1)
{
  return sub_10018678C(a1, qword_100E82D18);
}

uint64_t sub_1001F0094(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)a2;
  char v7 = *(unsigned char *)(a2 + 8);
  sub_100195B7C(*(void *)a2, v7);
  *(void *)a1 = v6;
  *(unsigned char *)(a1 + 8) = v7;
  uint64_t v8 = a3[5];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  sub_10017DF08(&qword_100E829F0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    type metadata accessor for LocationComponentHeaderViewModel(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v14 = *(void *)(v10 + 8);
        *(void *)uint64_t v9 = *(void *)v10;
        *(void *)(v9 + 8) = v14;
        uint64_t v15 = *(void *)(v10 + 24);
        *(void *)(v9 + 16) = *(void *)(v10 + 16);
        *(void *)(v9 + 24) = v15;
        uint64_t v16 = *(void *)(v10 + 40);
        *(void *)(v9 + 32) = *(void *)(v10 + 32);
        *(void *)(v9 + 40) = v16;
        uint64_t v17 = *(void *)(v10 + 56);
        *(void *)(v9 + 48) = *(void *)(v10 + 48);
        *(void *)(v9 + 56) = v17;
        *(unsigned char *)(v9 + 64) = *(unsigned char *)(v10 + 64);
        uint64_t v18 = *(void *)(v10 + 80);
        *(void *)(v9 + 72) = *(void *)(v10 + 72);
        *(void *)(v9 + 80) = v18;
        *(unsigned char *)(v9 + 88) = *(unsigned char *)(v10 + 88);
        goto LABEL_9;
      case 2u:
        uint64_t v19 = *(void *)(v10 + 8);
        *(void *)uint64_t v9 = *(void *)v10;
        *(void *)(v9 + 8) = v19;
        uint64_t v20 = *(void *)(v10 + 24);
        *(void *)(v9 + 16) = *(void *)(v10 + 16);
        *(void *)(v9 + 24) = v20;
        uint64_t v21 = *(void *)(v10 + 40);
        *(void *)(v9 + 32) = *(void *)(v10 + 32);
        *(void *)(v9 + 40) = v21;
        uint64_t v22 = *(void *)(v10 + 56);
        *(void *)(v9 + 48) = *(void *)(v10 + 48);
        *(void *)(v9 + 56) = v22;
        uint64_t v23 = *(void *)(v10 + 72);
        *(void *)(v9 + 64) = *(void *)(v10 + 64);
        *(void *)(v9 + 72) = v23;
        uint64_t v24 = *(void *)(v10 + 88);
        *(void *)(v9 + 80) = *(void *)(v10 + 80);
        *(void *)(v9 + 88) = v24;
        *(unsigned char *)(v9 + 96) = *(unsigned char *)(v10 + 96);
        uint64_t v25 = *(void *)(v10 + 112);
        *(void *)(v9 + 104) = *(void *)(v10 + 104);
        *(void *)(v9 + 112) = v25;
        *(unsigned char *)(v9 + 120) = *(unsigned char *)(v10 + 120);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_10;
      case 3u:
        uint64_t v26 = type metadata accessor for WeatherDescription();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 16))(v9, v10, v26);
        uint64_t v27 = type metadata accessor for LocationComponentHeaderViewModel.Description(0);
        uint64_t v28 = *(int *)(v27 + 20);
        uint64_t v29 = v9 + v28;
        uint64_t v30 = v10 + v28;
        uint64_t v31 = *(void *)(v30 + 8);
        *(void *)uint64_t v29 = *(void *)v30;
        *(void *)(v29 + 8) = v31;
        uint64_t v32 = *(void *)(v30 + 24);
        *(void *)(v29 + 16) = *(void *)(v30 + 16);
        *(void *)(v29 + 24) = v32;
        *(unsigned char *)(v29 + 32) = *(unsigned char *)(v30 + 32);
        uint64_t v33 = *(void *)(v30 + 48);
        *(void *)(v29 + 40) = *(void *)(v30 + 40);
        *(void *)(v29 + 48) = v33;
        *(unsigned char *)(v9 + *(int *)(v27 + 24)) = *(unsigned char *)(v10 + *(int *)(v27 + 24));
        break;
      case 5u:
        uint64_t v34 = *(void *)(v10 + 8);
        *(void *)uint64_t v9 = *(void *)v10;
        *(void *)(v9 + 8) = v34;
        uint64_t v35 = *(void *)(v10 + 24);
        *(void *)(v9 + 16) = *(void *)(v10 + 16);
        *(void *)(v9 + 24) = v35;
        *(_OWORD *)(v9 + 32) = *(_OWORD *)(v10 + 32);
        uint64_t v36 = *(void *)(v10 + 56);
        *(void *)(v9 + 48) = *(void *)(v10 + 48);
        *(void *)(v9 + 56) = v36;
        uint64_t v37 = *(void *)(v10 + 72);
        uint64_t v38 = *(void *)(v10 + 80);
        *(void *)(v9 + 64) = *(void *)(v10 + 64);
        *(void *)(v9 + 72) = v37;
        uint64_t v39 = *(void *)(v10 + 88);
        uint64_t v40 = *(void *)(v10 + 96);
        *(void *)(v9 + 80) = v38;
        *(void *)(v9 + 88) = v39;
        *(void *)(v9 + 96) = v40;
        *(unsigned char *)(v9 + 104) = *(unsigned char *)(v10 + 104);
        uint64_t v41 = *(void *)(v10 + 120);
        *(void *)(v9 + 112) = *(void *)(v10 + 112);
        *(void *)(v9 + 120) = v41;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
LABEL_9:
        swift_bridgeObjectRetain();
LABEL_10:
        swift_bridgeObjectRetain();
        break;
      default:
        uint64_t v11 = *(void *)(v10 + 8);
        *(void *)uint64_t v9 = *(void *)v10;
        *(void *)(v9 + 8) = v11;
        uint64_t v12 = *(void *)(v10 + 24);
        *(void *)(v9 + 16) = *(void *)(v10 + 16);
        *(void *)(v9 + 24) = v12;
        *(unsigned char *)(v9 + 32) = *(unsigned char *)(v10 + 32);
        uint64_t v13 = *(void *)(v10 + 48);
        *(void *)(v9 + 40) = *(void *)(v10 + 40);
        *(void *)(v9 + 48) = v13;
        break;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
    uint64_t v42 = (int *)type metadata accessor for LocationComponentHeaderMetrics(0);
    *(void *)(v9 + v42[5]) = *(void *)(v10 + v42[5]);
    *(void *)(v9 + v42[6]) = *(void *)(v10 + v42[6]);
    uint64_t v43 = v42[7];
    uint64_t v44 = v9 + v43;
    uint64_t v45 = v10 + v43;
    *(void *)uint64_t v44 = *(void *)v45;
    *(unsigned char *)(v44 + 8) = *(unsigned char *)(v45 + 8);
    *(unsigned char *)(v9 + v42[8]) = *(unsigned char *)(v10 + v42[8]);
  }
  else
  {
    *(void *)uint64_t v9 = *(void *)v10;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v46 = a3[6];
  uint64_t v47 = a1 + v46;
  uint64_t v48 = a2 + v46;
  uint64_t v49 = *(void *)v48;
  char v50 = *(unsigned char *)(v48 + 8);
  sub_100195B7C(*(void *)v48, v50);
  *(void *)uint64_t v47 = v49;
  *(unsigned char *)(v47 + 8) = v50;
  uint64_t v51 = a3[7];
  uint64_t v52 = a1 + v51;
  uint64_t v53 = a2 + v51;
  *(_OWORD *)uint64_t v52 = *(_OWORD *)v53;
  *(unsigned char *)(v52 + 16) = *(unsigned char *)(v53 + 16);
  *(void *)(v52 + 24) = *(void *)(v53 + 24);
  swift_retain();
  return a1;
}

uint64_t sub_1001F0424(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(a2, a1);
  return a2;
}

uint64_t sub_1001F0484(uint64_t a1, uint64_t a2, int *a3)
{
  type metadata accessor for LocationComponentHeaderViewModel(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v9 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v9;
      uint64_t v10 = *(void *)(a2 + 24);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = v10;
      uint64_t v11 = *(void *)(a2 + 40);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(void *)(a1 + 40) = v11;
      uint64_t v12 = *(void *)(a2 + 56);
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(void *)(a1 + 56) = v12;
      *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
      uint64_t v13 = *(void *)(a2 + 80);
      *(void *)(a1 + 72) = *(void *)(a2 + 72);
      *(void *)(a1 + 80) = v13;
      *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      break;
    case 2u:
      uint64_t v14 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v14;
      uint64_t v15 = *(void *)(a2 + 24);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = v15;
      uint64_t v16 = *(void *)(a2 + 40);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(void *)(a1 + 40) = v16;
      uint64_t v17 = *(void *)(a2 + 56);
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(void *)(a1 + 56) = v17;
      uint64_t v18 = *(void *)(a2 + 72);
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      *(void *)(a1 + 72) = v18;
      uint64_t v19 = *(void *)(a2 + 88);
      *(void *)(a1 + 80) = *(void *)(a2 + 80);
      *(void *)(a1 + 88) = v19;
      *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
      uint64_t v20 = *(void *)(a2 + 112);
      *(void *)(a1 + 104) = *(void *)(a2 + 104);
      *(void *)(a1 + 112) = v20;
      *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      break;
    case 3u:
      uint64_t v21 = type metadata accessor for WeatherDescription();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 16))(a1, a2, v21);
      uint64_t v22 = type metadata accessor for LocationComponentHeaderViewModel.Description(0);
      uint64_t v23 = *(int *)(v22 + 20);
      uint64_t v24 = a1 + v23;
      uint64_t v25 = a2 + v23;
      uint64_t v27 = *(void *)(a2 + v23);
      uint64_t v26 = *(void *)(a2 + v23 + 8);
      *(void *)uint64_t v24 = v27;
      *(void *)(v24 + 8) = v26;
      uint64_t v28 = *(void *)(v25 + 24);
      *(void *)(v24 + 16) = *(void *)(v25 + 16);
      *(void *)(v24 + 24) = v28;
      *(unsigned char *)(v24 + 32) = *(unsigned char *)(v25 + 32);
      uint64_t v29 = *(void *)(v25 + 48);
      *(void *)(v24 + 40) = *(void *)(v25 + 40);
      *(void *)(v24 + 48) = v29;
      *(unsigned char *)(a1 + *(int *)(v22 + 24)) = *(unsigned char *)(a2 + *(int *)(v22 + 24));
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      break;
    case 5u:
      uint64_t v30 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v30;
      uint64_t v31 = *(void *)(a2 + 24);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = v31;
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
      uint64_t v32 = *(void *)(a2 + 56);
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(void *)(a1 + 56) = v32;
      uint64_t v33 = *(void *)(a2 + 72);
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      *(void *)(a1 + 72) = v33;
      uint64_t v34 = *(void *)(a2 + 88);
      *(void *)(a1 + 80) = *(void *)(a2 + 80);
      *(void *)(a1 + 88) = v34;
      *(void *)(a1 + 96) = *(void *)(a2 + 96);
      *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
      uint64_t v35 = *(void *)(a2 + 120);
      *(void *)(a1 + 112) = *(void *)(a2 + 112);
      *(void *)(a1 + 120) = v35;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      break;
    default:
      uint64_t v6 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v6;
      uint64_t v7 = *(void *)(a2 + 24);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = v7;
      *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
      uint64_t v8 = *(void *)(a2 + 48);
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      *(void *)(a1 + 48) = v8;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      break;
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v36 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  *(void *)(a1 + v36) = *(void *)(a2 + v36);
  uint64_t v37 = a3[7];
  uint64_t v38 = a3[8];
  uint64_t v39 = a1 + v37;
  uint64_t v40 = a2 + v37;
  *(void *)uint64_t v39 = *(void *)v40;
  *(unsigned char *)(v39 + 8) = *(unsigned char *)(v40 + 8);
  *(unsigned char *)(a1 + v38) = *(unsigned char *)(a2 + v38);
  return a1;
}

uint64_t sub_1001F0808(uint64_t a1, uint64_t a2)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v8 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v8;
      uint64_t v9 = *(void *)(a2 + 24);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = v9;
      uint64_t v10 = *(void *)(a2 + 40);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(void *)(a1 + 40) = v10;
      uint64_t v11 = *(void *)(a2 + 56);
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(void *)(a1 + 56) = v11;
      *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
      uint64_t v12 = *(void *)(a2 + 80);
      *(void *)(a1 + 72) = *(void *)(a2 + 72);
      *(void *)(a1 + 80) = v12;
      *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      break;
    case 2u:
      uint64_t v13 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v13;
      uint64_t v14 = *(void *)(a2 + 24);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = v14;
      uint64_t v15 = *(void *)(a2 + 40);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(void *)(a1 + 40) = v15;
      uint64_t v16 = *(void *)(a2 + 56);
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(void *)(a1 + 56) = v16;
      uint64_t v17 = *(void *)(a2 + 72);
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      *(void *)(a1 + 72) = v17;
      uint64_t v18 = *(void *)(a2 + 88);
      *(void *)(a1 + 80) = *(void *)(a2 + 80);
      *(void *)(a1 + 88) = v18;
      *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
      uint64_t v19 = *(void *)(a2 + 112);
      *(void *)(a1 + 104) = *(void *)(a2 + 104);
      *(void *)(a1 + 112) = v19;
      *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      break;
    case 3u:
      uint64_t v20 = type metadata accessor for WeatherDescription();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 16))(a1, a2, v20);
      uint64_t v21 = type metadata accessor for LocationComponentHeaderViewModel.Description(0);
      uint64_t v22 = *(int *)(v21 + 20);
      uint64_t v23 = a1 + v22;
      uint64_t v24 = a2 + v22;
      uint64_t v26 = *(void *)(a2 + v22);
      uint64_t v25 = *(void *)(a2 + v22 + 8);
      *(void *)uint64_t v23 = v26;
      *(void *)(v23 + 8) = v25;
      uint64_t v27 = *(void *)(v24 + 24);
      *(void *)(v23 + 16) = *(void *)(v24 + 16);
      *(void *)(v23 + 24) = v27;
      *(unsigned char *)(v23 + 32) = *(unsigned char *)(v24 + 32);
      uint64_t v28 = *(void *)(v24 + 48);
      *(void *)(v23 + 40) = *(void *)(v24 + 40);
      *(void *)(v23 + 48) = v28;
      *(unsigned char *)(a1 + *(int *)(v21 + 24)) = *(unsigned char *)(a2 + *(int *)(v21 + 24));
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      break;
    case 5u:
      uint64_t v29 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v29;
      uint64_t v30 = *(void *)(a2 + 24);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = v30;
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
      uint64_t v31 = *(void *)(a2 + 56);
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(void *)(a1 + 56) = v31;
      uint64_t v32 = *(void *)(a2 + 72);
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      *(void *)(a1 + 72) = v32;
      uint64_t v33 = *(void *)(a2 + 88);
      *(void *)(a1 + 80) = *(void *)(a2 + 80);
      *(void *)(a1 + 88) = v33;
      *(void *)(a1 + 96) = *(void *)(a2 + 96);
      *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
      uint64_t v34 = *(void *)(a2 + 112);
      uint64_t v35 = *(void *)(a2 + 120);
      *(void *)(a1 + 112) = v34;
      *(void *)(a1 + 120) = v35;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      break;
    default:
      uint64_t v4 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v4;
      uint64_t v5 = *(void *)(a2 + 24);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = v5;
      *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
      uint64_t v6 = *(void *)(a2 + 40);
      uint64_t v7 = *(void *)(a2 + 48);
      *(void *)(a1 + 40) = v6;
      *(void *)(a1 + 48) = v7;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      break;
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t type metadata accessor for MapComponentViewModel()
{
  uint64_t result = qword_100E75228;
  if (!qword_100E75228) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata accessor for FeelsLikeComponentViewModel(uint64_t a1)
{
  return sub_10018678C(a1, (uint64_t *)&unk_100E760C8);
}

uint64_t type metadata accessor for PressureComponentViewModel()
{
  uint64_t result = qword_100EAC378;
  if (!qword_100EAC378) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata accessor for UVIndexComponentViewModel()
{
  uint64_t result = qword_100EB3658;
  if (!qword_100EB3658) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata accessor for WindComponentViewModel()
{
  uint64_t result = qword_100E80EA0;
  if (!qword_100E80EA0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata accessor for MoonComponentViewModel()
{
  uint64_t result = qword_100E73D58;
  if (!qword_100E73D58) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1001F0CC4(uint64_t a1, uint64_t a2, int *a3)
{
  sub_10017DF08(&qword_100E63BD0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
    *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
    *(unsigned char *)(a1 + 18) = *(unsigned char *)(a2 + 18);
    uint64_t v6 = *(int *)(type metadata accessor for DisplayMetrics() + 36);
    uint64_t v7 = a1 + v6;
    uint64_t v8 = a2 + v6;
    uint64_t v9 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
  }
  else
  {
    *(void *)a1 = *(void *)a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v10 = a3[5];
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  uint64_t v13 = *(void *)v12;
  char v14 = *(unsigned char *)(v12 + 8);
  sub_100195B7C(*(void *)v12, v14);
  *(void *)uint64_t v11 = v13;
  *(unsigned char *)(v11 + 8) = v14;
  uint64_t v15 = a3[6];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = *(void *)v17;
  char v19 = *(unsigned char *)(v17 + 8);
  sub_100195B7C(*(void *)v17, v19);
  *(void *)uint64_t v16 = v18;
  *(unsigned char *)(v16 + 8) = v19;
  uint64_t v20 = a3[7];
  uint64_t v21 = (void *)(a1 + v20);
  uint64_t v22 = (void *)(a2 + v20);
  sub_10017DF08(&qword_100E82BD8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    void *v21 = *v22;
    uint64_t v23 = *(int *)(type metadata accessor for LocationComponentCornerRadiusConfiguration(0) + 20);
    uint64_t v24 = (char *)v21 + v23;
    uint64_t v25 = (char *)v22 + v23;
    uint64_t v26 = type metadata accessor for RoundedCornerStyle();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 16))(v24, v25, v26);
  }
  else
  {
    void *v21 = *v22;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v27 = a3[8];
  uint64_t v28 = (void *)(a1 + v27);
  uint64_t v29 = (void *)(a2 + v27);
  uint64_t v30 = type metadata accessor for LocationComponentViewModel();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      *uint64_t v28 = *v29;
      *(_OWORD *)(v28 + 1) = *(_OWORD *)(v29 + 1);
      *(_OWORD *)(v28 + 3) = *(_OWORD *)(v29 + 3);
      uint64_t v31 = v29[6];
      v28[5] = v29[5];
      v28[6] = v31;
      uint64_t v32 = v29[8];
      v28[7] = v29[7];
      v28[8] = v32;
      uint64_t v33 = v29[10];
      v28[9] = v29[9];
      v28[10] = v33;
      v28[11] = v29[11];
      *((_WORD *)v28 + 48) = *((_WORD *)v29 + 48);
      v28[13] = v29[13];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_66;
    case 1u:
      *uint64_t v28 = *v29;
      uint64_t v34 = (int *)type metadata accessor for DailyForecastComponentViewModel(0);
      uint64_t v35 = v34[5];
      v290 = (char *)v28 + v35;
      uint64_t v36 = (char *)v29 + v35;
      swift_bridgeObjectRetain();
      uint64_t v37 = sub_10017DF08(&qword_100E65250);
      uint64_t v38 = *(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 16);
      v38(v290, v36, v37);
      v38((char *)v28 + v34[6], (char *)v29 + v34[6], v37);
      v38((char *)v28 + v34[7], (char *)v29 + v34[7], v37);
      uint64_t v39 = v34[8];
      uint64_t v40 = (void *)((char *)v28 + v39);
      uint64_t v41 = (void *)((char *)v29 + v39);
      uint64_t v42 = v41[1];
      *uint64_t v40 = *v41;
      v40[1] = v42;
      uint64_t v43 = v34[9];
      uint64_t v44 = (void *)((char *)v28 + v43);
      uint64_t v45 = (void *)((char *)v29 + v43);
      uint64_t v46 = v45[1];
      *uint64_t v44 = *v45;
      v44[1] = v46;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_66;
    case 2u:
      uint64_t v47 = v29[1];
      *uint64_t v28 = *v29;
      v28[1] = v47;
      uint64_t v48 = v29[3];
      v28[2] = v29[2];
      v28[3] = v48;
      uint64_t v291 = type metadata accessor for FeelsLikeComponentViewModel(0);
      uint64_t v49 = *(int *)(v291 + 24);
      char v50 = (void *)((char *)v28 + v49);
      uint64_t v51 = (void *)((char *)v29 + v49);
      uint64_t v52 = type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference(0);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v51, 1, v52))
      {
        uint64_t v53 = sub_10017DF08(&qword_100E63750);
        memcpy(v50, v51, *(void *)(*(void *)(v53 - 8) + 64));
      }
      else
      {
        uint64_t v152 = v51[1];
        *char v50 = *v51;
        v50[1] = v152;
        uint64_t v287 = v52;
        uint64_t v153 = *(int *)(v52 + 20);
        uint64_t v154 = (char *)v50 + v153;
        uint64_t v155 = (char *)v51 + v153;
        uint64_t v156 = type metadata accessor for TemperatureScaleConfiguration();
        v280 = *(void (**)(char *, char *, uint64_t))(*(void *)(v156 - 8) + 16);
        swift_bridgeObjectRetain();
        v280(v154, v155, v156);
        uint64_t v157 = (int *)type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
        *(void *)&v154[v157[5]] = *(void *)&v155[v157[5]];
        *(void *)&v154[v157[6]] = *(void *)&v155[v157[6]];
        *(void *)&v154[v157[7]] = *(void *)&v155[v157[7]];
        uint64_t v158 = v157[8];
        uint64_t v159 = &v154[v158];
        uint64_t v160 = &v155[v158];
        uint64_t v162 = *(void *)v160;
        uint64_t v161 = *((void *)v160 + 1);
        *(void *)uint64_t v159 = v162;
        *((void *)v159 + 1) = v161;
        v154[v157[9]] = v155[v157[9]];
        swift_bridgeObjectRetain();
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v50, 0, 1, v287);
      }
      uint64_t v163 = *(int *)(v291 + 28);
      uint64_t v164 = (void *)((char *)v28 + v163);
      uint64_t v165 = (void *)((char *)v29 + v163);
      uint64_t v166 = v165[1];
      *uint64_t v164 = *v165;
      v164[1] = v166;
      swift_bridgeObjectRetain();
      goto LABEL_66;
    case 3u:
      *uint64_t v28 = *v29;
      swift_bridgeObjectRetain();
      goto LABEL_66;
    case 4u:
      *(_OWORD *)uint64_t v28 = *(_OWORD *)v29;
      v28[2] = v29[2];
      swift_bridgeObjectRetain();
      goto LABEL_66;
    case 5u:
      uint64_t v54 = type metadata accessor for WeatherMapOverlayKind();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v54 - 8) + 16))(v28, v29, v54);
      uint64_t v55 = (int *)type metadata accessor for MapComponentViewModel();
      uint64_t v56 = v55[5];
      uint64_t v57 = (char *)v28 + v56;
      uint64_t v58 = (char *)v29 + v56;
      uint64_t v59 = type metadata accessor for Location();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v59 - 8) + 16))(v57, v58, v59);
      uint64_t v60 = v55[6];
      uint64_t v61 = (void *)((char *)v28 + v60);
      uint64_t v62 = (void *)((char *)v29 + v60);
      uint64_t v63 = type metadata accessor for WeatherData(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v62, 1, v63))
      {
        uint64_t v64 = sub_10017DF08(&qword_100E63850);
        memcpy(v61, v62, *(void *)(*(void *)(v64 - 8) + 64));
        goto LABEL_65;
      }
      v283 = v55;
      v288 = v61;
      os_log_type_t v167 = (int *)v63;
      uint64_t v168 = v62[1];
      *uint64_t v61 = *v62;
      v61[1] = v168;
      v297 = v167;
      uint64_t v169 = v167[5];
      v170 = (char *)v61 + v169;
      uint64_t v171 = (char *)v62 + v169;
      uint64_t v172 = type metadata accessor for Locale();
      swift_bridgeObjectRetain();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v171, 1, v172))
      {
        uint64_t v173 = sub_10017DF08(&qword_100E63730);
        memcpy(v170, v171, *(void *)(*(void *)(v173 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v172 - 8) + 16))(v170, v171, v172);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v170, 0, 1, v172);
      }
      uint64_t v189 = v297[6];
      uint64_t v190 = (char *)v288 + v189;
      uint64_t v191 = (char *)v62 + v189;
      uint64_t v192 = type metadata accessor for WeatherDataModel();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v192 - 8) + 16))(v190, v191, v192);
      uint64_t v193 = v297[7];
      uint64_t v194 = (char *)v288 + v193;
      uint64_t v195 = (char *)v62 + v193;
      uint64_t v196 = sub_10017DF08(&qword_100E63738);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v195, 1, v196))
      {
        uint64_t v197 = type metadata accessor for WeatherData.CachingState(0);
        memcpy(v194, v195, *(void *)(*(void *)(v197 - 8) + 64));
      }
      else
      {
        uint64_t v198 = type metadata accessor for Date();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v198 - 8) + 16))(v194, v195, v198);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v194, 0, 1, v196);
      }
      uint64_t v199 = v297[8];
      uint64_t v200 = (void *)((char *)v288 + v199);
      uint64_t v201 = (void *)((char *)v62 + v199);
      uint64_t v202 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 1)
      {
        uint64_t v205 = type metadata accessor for WeatherStatisticsModel();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v205 - 8) + 16))(v200, v201, v205);
        goto LABEL_53;
      }
      if (!EnumCaseMultiPayload)
      {
        uint64_t v204 = v201[1];
        *uint64_t v200 = *v201;
        v200[1] = v204;
        swift_bridgeObjectRetain();
LABEL_53:
        swift_storeEnumTagMultiPayload();
        goto LABEL_55;
      }
      memcpy(v200, v201, *(void *)(*(void *)(v202 - 8) + 64));
LABEL_55:
      uint64_t v55 = v283;
      uint64_t v206 = (uint64_t)v288;
      uint64_t v207 = v297[9];
      uint64_t v208 = (char *)v288 + v207;
      uint64_t v209 = (char *)v62 + v207;
      uint64_t v210 = type metadata accessor for WeatherDataOverrides();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v209, 1, v210))
      {
        uint64_t v211 = sub_10017DF08(&qword_100E63740);
        memcpy(v208, v209, *(void *)(*(void *)(v211 - 8) + 64));
      }
      else
      {
        uint64_t v212 = type metadata accessor for Date();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v209, 1, v212))
        {
          uint64_t v213 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
          memcpy(v208, v209, *(void *)(*(void *)(v213 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v212 - 8) + 16))(v208, v209, v212);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v208, 0, 1, v212);
        }
        uint64_t v281 = v210;
        uint64_t v285 = (uint64_t)v208;
        uint64_t v214 = *(int *)(v210 + 20);
        uint64_t v215 = &v208[v214];
        v216 = &v209[v214];
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v209[v214], 1, v212))
        {
          uint64_t v217 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
          memcpy(v215, v216, *(void *)(*(void *)(v217 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v212 - 8) + 16))(v215, v216, v212);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v215, 0, 1, v212);
        }
        _s7Weather24LocationCompositionStateOwst_0(v285, 0, 1, v281);
        uint64_t v206 = (uint64_t)v288;
      }
      _s7Weather24LocationCompositionStateOwst_0(v206, 0, 1, (uint64_t)v297);
LABEL_65:
      uint64_t v218 = v55[7];
      v219 = (void *)((char *)v28 + v218);
      uint64_t v220 = (void *)((char *)v29 + v218);
      uint64_t v221 = v220[1];
      void *v219 = *v220;
      v219[1] = v221;
      swift_bridgeObjectRetain();
LABEL_66:
      swift_storeEnumTagMultiPayload();
LABEL_67:
      uint64_t v222 = a3[9];
      uint64_t v223 = a1 + v222;
      uint64_t v224 = a2 + v222;
      uint64_t v225 = *(void *)v224;
      char v226 = *(unsigned char *)(v224 + 8);
      sub_100195B7C(*(void *)v224, v226);
      *(void *)uint64_t v223 = v225;
      *(unsigned char *)(v223 + 8) = v226;
      uint64_t v227 = a3[10];
      uint64_t v228 = a1 + v227;
      uint64_t v229 = a2 + v227;
      sub_10017DF08(&qword_100E829F0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        type metadata accessor for LocationComponentHeaderViewModel(0);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            uint64_t v233 = *(void *)(v229 + 8);
            *(void *)uint64_t v228 = *(void *)v229;
            *(void *)(v228 + 8) = v233;
            uint64_t v234 = *(void *)(v229 + 24);
            *(void *)(v228 + 16) = *(void *)(v229 + 16);
            *(void *)(v228 + 24) = v234;
            uint64_t v235 = *(void *)(v229 + 40);
            *(void *)(v228 + 32) = *(void *)(v229 + 32);
            *(void *)(v228 + 40) = v235;
            uint64_t v236 = *(void *)(v229 + 56);
            *(void *)(v228 + 48) = *(void *)(v229 + 48);
            *(void *)(v228 + 56) = v236;
            *(unsigned char *)(v228 + 64) = *(unsigned char *)(v229 + 64);
            uint64_t v237 = *(void *)(v229 + 80);
            *(void *)(v228 + 72) = *(void *)(v229 + 72);
            *(void *)(v228 + 80) = v237;
            *(unsigned char *)(v228 + 88) = *(unsigned char *)(v229 + 88);
            goto LABEL_75;
          case 2u:
            uint64_t v238 = *(void *)(v229 + 8);
            *(void *)uint64_t v228 = *(void *)v229;
            *(void *)(v228 + 8) = v238;
            uint64_t v239 = *(void *)(v229 + 24);
            *(void *)(v228 + 16) = *(void *)(v229 + 16);
            *(void *)(v228 + 24) = v239;
            uint64_t v240 = *(void *)(v229 + 40);
            *(void *)(v228 + 32) = *(void *)(v229 + 32);
            *(void *)(v228 + 40) = v240;
            uint64_t v241 = *(void *)(v229 + 56);
            *(void *)(v228 + 48) = *(void *)(v229 + 48);
            *(void *)(v228 + 56) = v241;
            uint64_t v242 = *(void *)(v229 + 72);
            *(void *)(v228 + 64) = *(void *)(v229 + 64);
            *(void *)(v228 + 72) = v242;
            uint64_t v243 = *(void *)(v229 + 88);
            *(void *)(v228 + 80) = *(void *)(v229 + 80);
            *(void *)(v228 + 88) = v243;
            *(unsigned char *)(v228 + 96) = *(unsigned char *)(v229 + 96);
            uint64_t v244 = *(void *)(v229 + 112);
            *(void *)(v228 + 104) = *(void *)(v229 + 104);
            *(void *)(v228 + 112) = v244;
            *(unsigned char *)(v228 + 120) = *(unsigned char *)(v229 + 120);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            goto LABEL_76;
          case 3u:
            uint64_t v245 = type metadata accessor for WeatherDescription();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v245 - 8) + 16))(v228, v229, v245);
            uint64_t v246 = type metadata accessor for LocationComponentHeaderViewModel.Description(0);
            uint64_t v247 = *(int *)(v246 + 20);
            uint64_t v248 = v228 + v247;
            uint64_t v249 = v229 + v247;
            uint64_t v250 = *(void *)(v249 + 8);
            *(void *)uint64_t v248 = *(void *)v249;
            *(void *)(v248 + 8) = v250;
            uint64_t v251 = *(void *)(v249 + 24);
            *(void *)(v248 + 16) = *(void *)(v249 + 16);
            *(void *)(v248 + 24) = v251;
            *(unsigned char *)(v248 + 32) = *(unsigned char *)(v249 + 32);
            uint64_t v252 = *(void *)(v249 + 48);
            *(void *)(v248 + 40) = *(void *)(v249 + 40);
            *(void *)(v248 + 48) = v252;
            *(unsigned char *)(v228 + *(int *)(v246 + 24)) = *(unsigned char *)(v229 + *(int *)(v246 + 24));
            break;
          case 5u:
            uint64_t v253 = *(void *)(v229 + 8);
            *(void *)uint64_t v228 = *(void *)v229;
            *(void *)(v228 + 8) = v253;
            uint64_t v254 = *(void *)(v229 + 24);
            *(void *)(v228 + 16) = *(void *)(v229 + 16);
            *(void *)(v228 + 24) = v254;
            *(_OWORD *)(v228 + 32) = *(_OWORD *)(v229 + 32);
            uint64_t v255 = *(void *)(v229 + 56);
            *(void *)(v228 + 48) = *(void *)(v229 + 48);
            *(void *)(v228 + 56) = v255;
            uint64_t v256 = *(void *)(v229 + 72);
            uint64_t v257 = *(void *)(v229 + 80);
            *(void *)(v228 + 64) = *(void *)(v229 + 64);
            *(void *)(v228 + 72) = v256;
            uint64_t v258 = *(void *)(v229 + 88);
            uint64_t v259 = *(void *)(v229 + 96);
            *(void *)(v228 + 80) = v257;
            *(void *)(v228 + 88) = v258;
            *(void *)(v228 + 96) = v259;
            *(unsigned char *)(v228 + 104) = *(unsigned char *)(v229 + 104);
            uint64_t v260 = *(void *)(v229 + 120);
            *(void *)(v228 + 112) = *(void *)(v229 + 112);
            *(void *)(v228 + 120) = v260;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
LABEL_75:
            swift_bridgeObjectRetain();
LABEL_76:
            swift_bridgeObjectRetain();
            break;
          default:
            uint64_t v230 = *(void *)(v229 + 8);
            *(void *)uint64_t v228 = *(void *)v229;
            *(void *)(v228 + 8) = v230;
            uint64_t v231 = *(void *)(v229 + 24);
            *(void *)(v228 + 16) = *(void *)(v229 + 16);
            *(void *)(v228 + 24) = v231;
            *(unsigned char *)(v228 + 32) = *(unsigned char *)(v229 + 32);
            uint64_t v232 = *(void *)(v229 + 48);
            *(void *)(v228 + 40) = *(void *)(v229 + 40);
            *(void *)(v228 + 48) = v232;
            break;
        }
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        v261 = (int *)type metadata accessor for LocationComponentHeaderMetrics(0);
        *(void *)(v228 + v261[5]) = *(void *)(v229 + v261[5]);
        *(void *)(v228 + v261[6]) = *(void *)(v229 + v261[6]);
        uint64_t v262 = v261[7];
        uint64_t v263 = v228 + v262;
        uint64_t v264 = v229 + v262;
        *(void *)uint64_t v263 = *(void *)v264;
        *(unsigned char *)(v263 + 8) = *(unsigned char *)(v264 + 8);
        *(unsigned char *)(v228 + v261[8]) = *(unsigned char *)(v229 + v261[8]);
      }
      else
      {
        *(void *)uint64_t v228 = *(void *)v229;
        swift_retain();
      }
      swift_storeEnumTagMultiPayload();
      uint64_t v265 = a3[12];
      *(unsigned char *)(a1 + a3[11]) = *(unsigned char *)(a2 + a3[11]);
      uint64_t v266 = a1 + v265;
      uint64_t v267 = a2 + v265;
      uint64_t v268 = type metadata accessor for Location.Identifier();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v268 - 8) + 16))(v266, v267, v268);
      uint64_t v269 = a3[14];
      *(void *)(a1 + a3[13]) = *(void *)(a2 + a3[13]);
      *(void *)(a1 + v269) = *(void *)(a2 + v269);
      uint64_t v270 = a3[15];
      uint64_t v271 = a1 + v270;
      uint64_t v272 = a2 + v270;
      long long v273 = *(_OWORD *)(v272 + 16);
      *(_OWORD *)uint64_t v271 = *(_OWORD *)v272;
      *(_OWORD *)(v271 + 16) = v273;
      *(unsigned char *)(v271 + 32) = *(unsigned char *)(v272 + 32);
      swift_retain();
      return a1;
    case 6u:
      uint64_t v65 = v29[1];
      *uint64_t v28 = *v29;
      v28[1] = v65;
      int v66 = *((unsigned __int8 *)v29 + 32);
      swift_bridgeObjectRetain();
      if (v66 == 255)
      {
        *((_OWORD *)v28 + 1) = *((_OWORD *)v29 + 1);
        *((unsigned char *)v28 + 32) = *((unsigned char *)v29 + 32);
      }
      else
      {
        uint64_t v67 = v29[2];
        uint64_t v68 = v29[3];
        sub_1001F3C64(v67, v68, v66);
        v28[2] = v67;
        v28[3] = v68;
        *((unsigned char *)v28 + 32) = v66;
      }
      v28[5] = v29[5];
      uint64_t v174 = (int *)type metadata accessor for MoonComponentViewModel();
      uint64_t v175 = v174[7];
      v289 = (char *)v29 + v175;
      v298 = (char *)v28 + v175;
      uint64_t v176 = type metadata accessor for Date();
      uint64_t v177 = *(void (**)(char *, char *, uint64_t))(*(void *)(v176 - 8) + 16);
      swift_bridgeObjectRetain();
      v177(v298, v289, v176);
      *((unsigned char *)v28 + v174[8]) = *((unsigned char *)v29 + v174[8]);
      *(void *)((char *)v28 + v174[9]) = *(void *)((char *)v29 + v174[9]);
      goto LABEL_66;
    case 7u:
      uint64_t v69 = type metadata accessor for NewsArticleComponentViewModel(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v70 = v29[1];
        *uint64_t v28 = *v29;
        v28[1] = v70;
        v292 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
        uint64_t v71 = v292[5];
        uint64_t v72 = (char *)v28 + v71;
        uint64_t v73 = (char *)v29 + v71;
        uint64_t v74 = type metadata accessor for URL();
        swift_bridgeObjectRetain();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v73, 1, v74))
        {
          uint64_t v75 = sub_10017DF08(&qword_100E749B0);
          memcpy(v72, v73, *(void *)(*(void *)(v75 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v74 - 8) + 16))(v72, v73, v74);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v72, 0, 1, v74);
        }
        uint64_t v178 = v292[6];
        uint64_t v179 = (void *)((char *)v28 + v178);
        uint64_t v180 = (void *)((char *)v29 + v178);
        uint64_t v181 = v180[1];
        *uint64_t v179 = *v180;
        v179[1] = v181;
        uint64_t v182 = v292[7];
        v284 = (char *)v28 + v182;
        uint64_t v183 = (char *)v29 + v182;
        uint64_t v184 = *(void (**)(char *, char *, uint64_t))(*(void *)(v74 - 8) + 16);
        swift_bridgeObjectRetain();
        v184(v284, v183, v74);
        uint64_t v185 = v292[8];
        uint64_t v186 = (char *)v28 + v185;
        uint64_t v187 = (char *)v29 + v185;
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v29 + v185, 1, v74))
        {
          uint64_t v188 = sub_10017DF08(&qword_100E749B0);
          memcpy(v186, v187, *(void *)(*(void *)(v188 - 8) + 64));
        }
        else
        {
          v184(v186, v187, v74);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v186, 0, 1, v74);
        }
        *((unsigned char *)v28 + v292[9]) = *((unsigned char *)v29 + v292[9]);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v28, v29, *(void *)(*(void *)(v69 - 8) + 64));
      }
      goto LABEL_66;
    case 8u:
      uint64_t v76 = v29[1];
      *uint64_t v28 = *v29;
      v28[1] = v76;
      uint64_t v77 = *(int *)(type metadata accessor for NextHourPrecipitationComponentViewModel() + 20);
      int v78 = (char *)v28 + v77;
      v293 = (char *)v29 + v77;
      uint64_t HourPrecipitationChartViewModel = type metadata accessor for NextHourPrecipitationChartViewModel();
      uint64_t v80 = *(void (**)(char *, char *, uint64_t))(*(void *)(HourPrecipitationChartViewModel - 8) + 16);
      swift_bridgeObjectRetain();
      v80(v78, v293, HourPrecipitationChartViewModel);
      goto LABEL_66;
    case 9u:
      uint64_t v81 = type metadata accessor for Location();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v81 - 8) + 16))(v28, v29, v81);
      uint64_t v82 = type metadata accessor for NotificationsOptInComponentViewModel();
      *((unsigned char *)v28 + *(int *)(v82 + 20)) = *((unsigned char *)v29 + *(int *)(v82 + 20));
      goto LABEL_66;
    case 0xAu:
      uint64_t v83 = v29[1];
      *uint64_t v28 = *v29;
      v28[1] = v83;
      uint64_t v84 = v29[3];
      v28[2] = v29[2];
      v28[3] = v84;
      uint64_t v85 = v29[5];
      v28[4] = v29[4];
      v28[5] = v85;
      uint64_t v86 = v29[7];
      v28[6] = v29[6];
      v28[7] = v86;
      uint64_t v87 = v29[9];
      v28[8] = v29[8];
      v28[9] = v87;
      uint64_t v88 = v29[10];
      uint64_t v89 = v29[11];
      v28[10] = v88;
      v28[11] = v89;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_66;
    case 0xBu:
      uint64_t v90 = type metadata accessor for PressureTrend();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v90 - 8) + 16))(v28, v29, v90);
      uint64_t v91 = (int *)type metadata accessor for PressureComponentViewModel();
      uint64_t v92 = v91[5];
      uint64_t v93 = (void *)((char *)v28 + v92);
      uint64_t v94 = (void *)((char *)v29 + v92);
      uint64_t v96 = *v94;
      uint64_t v95 = v94[1];
      *uint64_t v93 = v96;
      v93[1] = v95;
      uint64_t v97 = v91[6];
      uint64_t v98 = (void *)((char *)v28 + v97);
      uint64_t v99 = (void *)((char *)v29 + v97);
      uint64_t v100 = v99[1];
      void *v98 = *v99;
      v98[1] = v100;
      uint64_t v101 = v91[7];
      uint64_t v102 = (void *)((char *)v28 + v101);
      uint64_t v103 = (void *)((char *)v29 + v101);
      uint64_t v104 = v103[1];
      *uint64_t v102 = *v103;
      v102[1] = v104;
      *(void *)((char *)v28 + v91[8]) = *(void *)((char *)v29 + v91[8]);
      uint64_t v105 = v91[9];
      uint64_t v106 = (void *)((char *)v28 + v105);
      uint64_t v107 = (void *)((char *)v29 + v105);
      uint64_t v108 = v107[1];
      void *v106 = *v107;
      v106[1] = v108;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_66;
    case 0xDu:
      uint64_t v109 = v29[1];
      *uint64_t v28 = *v29;
      v28[1] = v109;
      uint64_t v110 = v29[3];
      v28[2] = v29[2];
      v28[3] = v110;
      uint64_t v111 = v29[5];
      v28[4] = v29[4];
      v28[5] = v111;
      uint64_t v112 = v29[7];
      v28[6] = v29[6];
      v28[7] = v112;
      v28[8] = v29[8];
      uint64_t v294 = type metadata accessor for SevereAlertComponentViewModel();
      uint64_t v113 = *(int *)(v294 + 36);
      v279 = (char *)v29 + v113;
      v282 = (char *)v28 + v113;
      uint64_t v114 = type metadata accessor for WeatherAlert.Prominence();
      v278 = *(void (**)(char *, char *, uint64_t))(*(void *)(v114 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v278(v282, v279, v114);
      *(void *)((char *)v28 + *(int *)(v294 + 40)) = *(void *)((char *)v29 + *(int *)(v294 + 40));
      goto LABEL_66;
    case 0xEu:
      uint64_t v115 = type metadata accessor for SunriseSunsetViewModel();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v115 - 8) + 16))(v28, v29, v115);
      goto LABEL_66;
    case 0xFu:
      uint64_t v116 = v29[1];
      *uint64_t v28 = *v29;
      v28[1] = v116;
      uint64_t v117 = v29[3];
      v28[2] = v29[2];
      v28[3] = v117;
      uint64_t v118 = v29[5];
      v28[4] = v29[4];
      v28[5] = v118;
      uint64_t v119 = v29[7];
      v28[6] = v29[6];
      v28[7] = v119;
      uint64_t v120 = v29[9];
      v28[8] = v29[8];
      v28[9] = v120;
      uint64_t v121 = v29[11];
      v28[10] = v29[10];
      v28[11] = v121;
      uint64_t v122 = v29[13];
      v28[12] = v29[12];
      v28[13] = v122;
      uint64_t v123 = v29[15];
      v28[14] = v29[14];
      v28[15] = v123;
      uint64_t v124 = v29[17];
      v28[16] = v29[16];
      v28[17] = v124;
      uint64_t v125 = v29[19];
      v28[18] = v29[18];
      v28[19] = v125;
      uint64_t v126 = v29[21];
      v28[20] = v29[20];
      v28[21] = v126;
      uint64_t v127 = v29[23];
      v28[22] = v29[22];
      v28[23] = v127;
      uint64_t v128 = v29[24];
      uint64_t v129 = v29[25];
      v28[24] = v128;
      v28[25] = v129;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_66;
    case 0x10u:
      *(_OWORD *)uint64_t v28 = *(_OWORD *)v29;
      uint64_t v130 = v29[3];
      v28[2] = v29[2];
      v28[3] = v130;
      uint64_t v131 = type metadata accessor for UVIndexComponentViewModel();
      uint64_t v132 = *(int *)(v131 + 28);
      v286 = (char *)v29 + v132;
      v295 = (char *)v28 + v132;
      uint64_t v133 = type metadata accessor for WeatherDescription();
      uint64_t v134 = *(void (**)(char *, char *, uint64_t))(*(void *)(v133 - 8) + 16);
      swift_bridgeObjectRetain();
      v134(v295, v286, v133);
      *(void *)((char *)v28 + *(int *)(v131 + 32)) = *(void *)((char *)v29 + *(int *)(v131 + 32));
      swift_bridgeObjectRetain();
      goto LABEL_66;
    case 0x11u:
      uint64_t v135 = v29[1];
      *uint64_t v28 = *v29;
      v28[1] = v135;
      uint64_t v136 = v29[3];
      v28[2] = v29[2];
      v28[3] = v136;
      uint64_t v137 = v29[4];
      uint64_t v138 = v29[5];
      v28[4] = v137;
      v28[5] = v138;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_66;
    case 0x12u:
      uint64_t v139 = v29[1];
      *uint64_t v28 = *v29;
      v28[1] = v139;
      uint64_t v140 = v29[3];
      v28[2] = v29[2];
      v28[3] = v140;
      uint64_t v141 = v29[5];
      v28[4] = v29[4];
      v28[5] = v141;
      uint64_t v142 = v29[7];
      v28[6] = v29[6];
      v28[7] = v142;
      uint64_t v143 = v29[9];
      v28[8] = v29[8];
      v28[9] = v143;
      uint64_t v144 = v29[11];
      v28[10] = v29[10];
      v28[11] = v144;
      uint64_t v145 = v29[13];
      v28[12] = v29[12];
      v28[13] = v145;
      uint64_t v146 = v29[15];
      v28[14] = v29[14];
      v28[15] = v146;
      uint64_t v147 = v29[17];
      v28[16] = v29[16];
      v28[17] = v147;
      uint64_t v148 = v29[19];
      v28[18] = v29[18];
      v28[19] = v148;
      uint64_t v149 = v29[21];
      v28[20] = v29[20];
      v28[21] = v149;
      *((_OWORD *)v28 + 11) = *((_OWORD *)v29 + 11);
      v28[24] = v29[24];
      uint64_t v296 = type metadata accessor for WindComponentViewModel();
      uint64_t v150 = *(int *)(v296 + 68);
      v276 = (char *)v29 + v150;
      v277 = (char *)v28 + v150;
      uint64_t v151 = type metadata accessor for WindComponentCompassViewModel();
      v275 = *(void (**)(char *, char *, uint64_t))(*(void *)(v151 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v275(v277, v276, v151);
      *(void *)((char *)v28 + *(int *)(v296 + 72)) = *(void *)((char *)v29 + *(int *)(v296 + 72));
      swift_bridgeObjectRetain();
      goto LABEL_66;
    default:
      memcpy(v28, v29, *(void *)(*(void *)(v30 - 8) + 64));
      goto LABEL_67;
  }
}

uint64_t sub_1001F24CC(uint64_t a1)
{
  uint64_t v19 = type metadata accessor for LocationComponentContainerViewModel();
  uint64_t v2 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  uint64_t v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v6 = _swiftEmptyArrayStorage;
  if (v5)
  {
    uint64_t v20 = _swiftEmptyArrayStorage;
    sub_1001EA6A0(0, v5, 0);
    uint64_t v7 = *(unsigned __int8 *)(v2 + 80);
    uint64_t v18 = a1;
    uint64_t v8 = a1 + ((v7 + 32) & ~v7);
    uint64_t v9 = *(void *)(v2 + 72);
    uint64_t v6 = v20;
    do
    {
      sub_1001F3734(v8, (uint64_t)v4);
      uint64_t v10 = sub_1001F26C0();
      uint64_t v12 = v11;
      sub_1001F2B74((uint64_t)v4);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1001EA6A0(0, v6[2] + 1, 1);
        uint64_t v6 = v20;
      }
      unint64_t v14 = v6[2];
      unint64_t v13 = v6[3];
      if (v14 >= v13 >> 1)
      {
        sub_1001EA6A0(v13 > 1, v14 + 1, 1);
        uint64_t v6 = v20;
      }
      v6[2] = v14 + 1;
      uint64_t v15 = &v6[2 * v14];
      v15[4] = v10;
      v15[5] = v12;
      v8 += v9;
      --v5;
    }
    while (v5);
    a1 = v18;
  }
  uint64_t v20 = v6;
  sub_10017DF08(&qword_100E91BC0);
  sub_10012BB8C();
  BidirectionalCollection<>.joined(separator:)();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1001F26C0()
{
  type metadata accessor for LocationComponentViewModel();
  sub_100162E4C();
  __chkstk_darwin(v1);
  sub_1001626E0();
  uint64_t v4 = v3 - v2;
  sub_1001F3A64(v0, v3 - v2, (void (*)(void))type metadata accessor for LocationComponentViewModel);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t result = 0xD00000000000001BLL;
  switch(EnumCaseMultiPayload)
  {
    case 1:
      sub_1001EC534(v4, (void (*)(void))type metadata accessor for LocationComponentViewModel);
      uint64_t result = 0x726F46796C696164;
      break;
    case 2:
      sub_1001EC534(v4, (void (*)(void))type metadata accessor for LocationComponentViewModel);
      uint64_t result = 0x6B694C736C656566;
      break;
    case 3:
      sub_1001EC534(v4, (void (*)(void))type metadata accessor for LocationComponentViewModel);
      uint64_t result = 0x6F46796C72756F68;
      break;
    case 4:
      sub_1001EC534(v4, (void (*)(void))type metadata accessor for LocationComponentViewModel);
      uint64_t result = 0x79746964696D7568;
      break;
    case 5:
      sub_1001EC534(v4, (void (*)(void))type metadata accessor for LocationComponentViewModel);
      uint64_t result = 7364973;
      break;
    case 6:
      sub_1001EC534(v4, (void (*)(void))type metadata accessor for LocationComponentViewModel);
      uint64_t result = 1852796781;
      break;
    case 7:
      sub_1001EC534(v4, (void (*)(void))type metadata accessor for LocationComponentViewModel);
      uint64_t result = 0x697472417377656ELL;
      break;
    case 8:
      sub_1001EC534(v4, (void (*)(void))type metadata accessor for LocationComponentViewModel);
      uint64_t result = 0xD000000000000015;
      break;
    case 9:
    case 10:
      sub_1001EC534(v4, (void (*)(void))type metadata accessor for LocationComponentViewModel);
      uint64_t result = 0xD000000000000012;
      break;
    case 11:
      sub_1001EC534(v4, (void (*)(void))type metadata accessor for LocationComponentViewModel);
      uint64_t result = 0x6572757373657270;
      break;
    case 12:
      uint64_t result = 0x655774726F706572;
      break;
    case 13:
      sub_1001EC534(v4, (void (*)(void))type metadata accessor for LocationComponentViewModel);
      uint64_t result = 0x6C41657265766573;
      break;
    case 14:
      sub_1001EC534(v4, (void (*)(void))type metadata accessor for LocationComponentViewModel);
      uint64_t result = 0x53657369726E7573;
      break;
    case 15:
      sub_1001EC534(v4, (void (*)(void))type metadata accessor for LocationComponentViewModel);
      uint64_t result = 0x7365676172657661;
      break;
    case 16:
      sub_1001EC534(v4, (void (*)(void))type metadata accessor for LocationComponentViewModel);
      uint64_t result = 0x7865646E497675;
      break;
    case 17:
      sub_1001EC534(v4, (void (*)(void))type metadata accessor for LocationComponentViewModel);
      uint64_t v7 = 0x696269736976;
      goto LABEL_19;
    case 18:
      sub_1001EC534(v4, (void (*)(void))type metadata accessor for LocationComponentViewModel);
      uint64_t result = 1684957559;
      break;
    case 19:
      return result;
    default:
      sub_1001EC534(v4, (void (*)(void))type metadata accessor for LocationComponentViewModel);
      uint64_t v7 = 0x617551726961;
LABEL_19:
      uint64_t result = v7 & 0xFFFFFFFFFFFFLL | 0x696C000000000000;
      break;
  }
  return result;
}

uint64_t sub_1001F2B74(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for LocationComponentContainerViewModel();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1001F2BD0(uint64_t a1, uint64_t a2)
{
  type metadata accessor for LocationComponentHeaderViewModel(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 4u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_7;
    case 1u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_7;
    case 2u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_7;
    case 3u:
      uint64_t v4 = type metadata accessor for WeatherDescription();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
      type metadata accessor for LocationComponentHeaderViewModel.Description(0);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_7;
    case 5u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_7:
      swift_bridgeObjectRelease();
      break;
    default:
      break;
  }
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  type metadata accessor for LocationComponentViewModel();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_48;
    case 1u:
      swift_bridgeObjectRelease();
      uint64_t v6 = (int *)type metadata accessor for DailyForecastComponentViewModel(0);
      uint64_t v7 = v5 + v6[5];
      uint64_t v8 = sub_10017DF08(&qword_100E65250);
      uint64_t v9 = *(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);
      v9(v7, v8);
      v9(v5 + v6[6], v8);
      v9(v5 + v6[7], v8);
      goto LABEL_33;
    case 2u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v10 = v5 + *(int *)(type metadata accessor for FeelsLikeComponentViewModel(0) + 24);
      uint64_t v11 = type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference(0);
      if (!_s7Weather24LocationCompositionStateOwet_0(v10, 1, v11))
      {
        swift_bridgeObjectRelease();
        uint64_t v12 = v10 + *(int *)(v11 + 20);
        uint64_t v13 = type metadata accessor for TemperatureScaleConfiguration();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
        type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
        swift_bridgeObjectRelease();
      }
      goto LABEL_48;
    case 3u:
    case 4u:
      goto LABEL_48;
    case 5u:
      uint64_t v14 = type metadata accessor for WeatherMapOverlayKind();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v5, v14);
      uint64_t v15 = type metadata accessor for MapComponentViewModel();
      uint64_t v16 = v5 + *(int *)(v15 + 20);
      uint64_t v17 = type metadata accessor for Location();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v17 - 8) + 8))(v16, v17);
      uint64_t v18 = v5 + *(int *)(v15 + 24);
      uint64_t v19 = (int *)type metadata accessor for WeatherData(0);
      if (!_s7Weather24LocationCompositionStateOwet_0(v18, 1, (uint64_t)v19))
      {
        swift_bridgeObjectRelease();
        uint64_t v20 = v18 + v19[5];
        uint64_t v21 = type metadata accessor for Locale();
        if (!_s7Weather24LocationCompositionStateOwet_0(v20, 1, v21)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v21 - 8) + 8))(v20, v21);
        }
        uint64_t v22 = v18 + v19[6];
        uint64_t v23 = type metadata accessor for WeatherDataModel();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v23 - 8) + 8))(v22, v23);
        uint64_t v24 = v18 + v19[7];
        uint64_t v25 = sub_10017DF08(&qword_100E63738);
        if (!_s7Weather24LocationCompositionStateOwet_0(v24, 1, v25))
        {
          uint64_t v26 = type metadata accessor for Date();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v26 - 8) + 8))(v24, v26);
        }
        uint64_t v27 = v18 + v19[8];
        type metadata accessor for WeatherData.WeatherStatisticsState(0);
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload == 1)
        {
          uint64_t v41 = type metadata accessor for WeatherStatisticsModel();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v41 - 8) + 8))(v27, v41);
        }
        else if (!EnumCaseMultiPayload)
        {
          swift_bridgeObjectRelease();
        }
        uint64_t v42 = v18 + v19[9];
        uint64_t v43 = type metadata accessor for WeatherDataOverrides();
        if (!_s7Weather24LocationCompositionStateOwet_0(v42, 1, v43))
        {
          uint64_t v44 = type metadata accessor for Date();
          if (!_s7Weather24LocationCompositionStateOwet_0(v42, 1, v44)) {
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v44 - 8) + 8))(v42, v44);
          }
          uint64_t v45 = v42 + *(int *)(v43 + 20);
          if (!_s7Weather24LocationCompositionStateOwet_0(v45, 1, v44)) {
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v44 - 8) + 8))(v45, v44);
          }
        }
      }
      goto LABEL_48;
    case 6u:
      swift_bridgeObjectRelease();
      int v29 = *(unsigned __int8 *)(v5 + 32);
      if (v29 != 255) {
        sub_1001F3C7C(*(void *)(v5 + 16), *(void *)(v5 + 24), v29);
      }
      swift_bridgeObjectRelease();
      v5 += *(int *)(type metadata accessor for MoonComponentViewModel() + 28);
      uint64_t HourPrecipitationChartViewModel = type metadata accessor for Date();
      goto LABEL_36;
    case 7u:
      type metadata accessor for NewsArticleComponentViewModel(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        swift_bridgeObjectRelease();
        uint64_t v31 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
        uint64_t v32 = v5 + v31[5];
        uint64_t v33 = type metadata accessor for URL();
        if (!_s7Weather24LocationCompositionStateOwet_0(v32, 1, v33)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v33 - 8) + 8))(v32, v33);
        }
        swift_bridgeObjectRelease();
        uint64_t v34 = *(void (**)(uint64_t, uint64_t))(*(void *)(v33 - 8) + 8);
        v34(v5 + v31[7], v33);
        uint64_t v35 = v5 + v31[8];
        if (!_s7Weather24LocationCompositionStateOwet_0(v35, 1, v33)) {
          v34(v35, v33);
        }
      }
      break;
    case 8u:
      swift_bridgeObjectRelease();
      v5 += *(int *)(type metadata accessor for NextHourPrecipitationComponentViewModel() + 20);
      uint64_t HourPrecipitationChartViewModel = type metadata accessor for NextHourPrecipitationChartViewModel();
      goto LABEL_36;
    case 9u:
      uint64_t HourPrecipitationChartViewModel = type metadata accessor for Location();
      goto LABEL_36;
    case 0xAu:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_48;
    case 0xBu:
      uint64_t v36 = type metadata accessor for PressureTrend();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v36 - 8) + 8))(v5, v36);
      type metadata accessor for PressureComponentViewModel();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_33:
      swift_bridgeObjectRelease();
      goto LABEL_48;
    case 0xDu:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v5 += *(int *)(type metadata accessor for SevereAlertComponentViewModel() + 36);
      uint64_t HourPrecipitationChartViewModel = type metadata accessor for WeatherAlert.Prominence();
      goto LABEL_36;
    case 0xEu:
      uint64_t HourPrecipitationChartViewModel = type metadata accessor for SunriseSunsetViewModel();
LABEL_36:
      (*(void (**)(uint64_t, uint64_t))(*(void *)(HourPrecipitationChartViewModel - 8) + 8))(v5, HourPrecipitationChartViewModel);
      break;
    case 0xFu:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_48;
    case 0x10u:
      swift_bridgeObjectRelease();
      uint64_t v37 = v5 + *(int *)(type metadata accessor for UVIndexComponentViewModel() + 28);
      uint64_t v38 = type metadata accessor for WeatherDescription();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v38 - 8) + 8))(v37, v38);
      goto LABEL_48;
    case 0x11u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_48;
    case 0x12u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v39 = v5 + *(int *)(type metadata accessor for WindComponentViewModel() + 68);
      uint64_t v40 = type metadata accessor for WindComponentCompassViewModel();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v40 - 8) + 8))(v39, v40);
LABEL_48:
      swift_bridgeObjectRelease();
      break;
    default:
      break;
  }
  uint64_t v46 = a1 + *(int *)(a2 + 28);
  uint64_t v47 = type metadata accessor for LocationComponentAction(0);
  uint64_t result = _s7Weather24LocationCompositionStateOwet_0(v46, 1, v47);
  if (!result)
  {
    uint64_t result = swift_getEnumCaseMultiPayload();
    switch((int)result)
    {
      case 0:
        uint64_t v49 = type metadata accessor for URL();
        goto LABEL_55;
      case 1:
        uint64_t v49 = type metadata accessor for WeatherMapOverlayKind();
        goto LABEL_55;
      case 2:
        uint64_t v49 = type metadata accessor for DetailCondition();
        goto LABEL_55;
      case 4:
        v46 += *(int *)(sub_10017DF08(&qword_100E66480) + 48);
        uint64_t v49 = type metadata accessor for Location();
LABEL_55:
        char v50 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v49 - 8) + 8);
        uint64_t result = v50(v46, v49);
        break;
      default:
        return result;
    }
  }
  return result;
}

uint64_t sub_1001F3734(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for LocationComponentContainerViewModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001F3798(char a1, uint64_t a2, char a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = type metadata accessor for DisplayMetrics();
  uint64_t v9 = sub_100109308(v8);
  __chkstk_darwin(v9);
  sub_1001626E0();
  uint64_t v12 = v11 - v10;
  type metadata accessor for LocationComponentViewModel();
  sub_100162E4C();
  uint64_t v14 = __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v23 - v17;
  sub_1001F3A64(v4, (uint64_t)&v23 - v17, (void (*)(void))type metadata accessor for LocationComponentViewModel);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  sub_1001EC534((uint64_t)v18, (void (*)(void))type metadata accessor for LocationComponentViewModel);
  if (EnumCaseMultiPayload != 5 || (a3 & 1) == 0)
  {
    sub_1001F3A64(a2, v12, (void (*)(void))type metadata accessor for DisplayMetrics);
    if (a1 == 3)
    {
      sub_1001EC534(v12, (void (*)(void))type metadata accessor for DisplayMetrics);
    }
    else
    {
      uint64_t v21 = *(void *)(v12 + 8);
      sub_1001EC534(v12, (void (*)(void))type metadata accessor for DisplayMetrics);
      if (v21 != 1 && sub_10058BCBC())
      {
        sub_1001F3A64(v4, (uint64_t)v16, (void (*)(void))type metadata accessor for LocationComponentViewModel);
        BOOL v20 = swift_getEnumCaseMultiPayload() != 5;
        sub_1001EC534((uint64_t)v16, (void (*)(void))type metadata accessor for LocationComponentViewModel);
        return v20;
      }
    }
    return 1;
  }
  return 0;
}

uint64_t sub_1001F39BC(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  uint64_t v4 = sub_10011BFA4();
  v5(v4);
  return a2;
}

uint64_t sub_1001F3A10(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  uint64_t v4 = sub_10011BFA4();
  v5(v4);
  return a2;
}

uint64_t sub_1001F3A64(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(a2, a1);
  return a2;
}

void sub_1001F3AC4()
{
  sub_10018C55C();
  if (v3)
  {
    sub_10017E9A4();
    if (v4 != v5)
    {
      sub_100183F88();
      if (v4)
      {
        __break(1u);
        return;
      }
      sub_1001A24A0();
    }
  }
  sub_1001A2E3C();
  if (v2)
  {
    sub_10017DF08(&qword_100E972C8);
    uint64_t v6 = (void *)swift_allocObject();
    size_t v7 = j__malloc_size(v6);
    v6[2] = v1;
    v6[3] = 2 * v7 - 64;
  }
  if (v0)
  {
    uint64_t v8 = (char *)sub_10018A3F8();
    sub_1007EB24C(v8, v9, v10);
    sub_1001855E0();
  }
  else
  {
    uint64_t v11 = sub_10019DF5C();
    sub_1001F3B74(v11, v12, v13, v14);
  }
}

char *sub_1001F3B74(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  size_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    char v5 = (char *)(a4 + a1 + 32);
    uint64_t v6 = &__dst[v4];
    if (v5 >= &__dst[v4] || &v5[v4] <= __dst)
    {
      memcpy(__dst, v5, v4);
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = (char *)_fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1001F3C64(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 2u) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1001F3C7C(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 2u) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1001F3C94(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PerformLocationComponentHeaderInputModelAction();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void *sub_1001F3CF8(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(a3 + 20);
  uint64_t v6 = (char *)a1 + v5;
  size_t v7 = (char *)a2 + v5;
  uint64_t v8 = type metadata accessor for UUID();
  size_t v9 = *(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16);
  swift_retain();
  v9(v6, v7, v8);
  return a1;
}

uint64_t type metadata accessor for PerformLocationComponentHeaderInputModelAction()
{
  uint64_t result = qword_100E9E6E0;
  if (!qword_100E9E6E0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1001F3DD8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v54 = a1;
  uint64_t v3 = type metadata accessor for RowModifier(0);
  __chkstk_darwin(v3);
  uint64_t v53 = sub_10017DF08(&qword_100E83180);
  uint64_t v52 = *(void *)(v53 - 8);
  __chkstk_darwin(v53);
  uint64_t v5 = (char *)&v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = sub_10017DF08(&qword_100E83188);
  __chkstk_darwin(v49);
  char v50 = (char *)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = sub_10017DF08(&qword_100E83190);
  __chkstk_darwin(v51);
  uint64_t v55 = (uint64_t)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = v1 + *(int *)(v3 + 20);
  uint64_t v9 = *(void *)v8;
  char v10 = *(unsigned char *)(v8 + 8);
  sub_100195B7C(*(void *)v8, v10);
  sub_100201DE4();
  double v12 = v11;
  sub_10018F6D8(v9, v10);
  double v13 = 0.0;
  double v14 = 0.0;
  if (!sub_1001F4578()) {
    double v14 = sub_10020B9F4();
  }
  if (!sub_1001F4578()) {
    double v13 = -250.0;
  }
  uint64_t v15 = v2 + *(int *)(v3 + 24);
  double v16 = *(double *)(v15 + 16);
  char v17 = *(unsigned char *)(v15 + 24);
  uint64_t v18 = *(void *)(v15 + 32);
  long long v63 = *(_OWORD *)v15;
  double v64 = v16;
  LOBYTE(v65) = v17;
  *(void *)&long long v66 = v18;
  uint64_t v48 = sub_10017DF08(&qword_100E83198);
  State.wrappedValue.getter();
  long long v63 = v56;
  double v64 = v57;
  LOBYTE(v65) = v58;
  sub_10017DF08(&qword_100E831A0);
  sub_10024D5E4((uint64_t)&unk_100E831A8);
  sub_10020BC08();
  View.onChange<A>(of:initial:_:)();
  sub_1001EC0BC();
  uint64_t v19 = v5;
  uint64_t v20 = swift_allocObject();
  *(double *)(v20 + 16) = v12;
  *(double *)(v20 + 24) = v14;
  *(double *)(v20 + 32) = v13;
  *(double *)(v20 + 40) = v12 + -15.0;
  *(double *)(v20 + 48) = v12 + -15.0 + 10.0;
  sub_1005D8BD8();
  sub_1001EC0BC();
  uint64_t v21 = swift_allocObject();
  sub_1005D8BD8();
  uint64_t v22 = v52;
  uint64_t v23 = (uint64_t)v50;
  uint64_t v24 = v53;
  (*(void (**)(char *, char *, uint64_t))(v52 + 16))(v50, v19, v53);
  uint64_t v25 = (double (**)())(v23 + *(int *)(v49 + 36));
  *uint64_t v25 = sub_10003D0B0;
  v25[1] = (double (*)())v20;
  v25[2] = (double (*)())sub_1005E728C;
  v25[3] = (double (*)())v21;
  (*(void (**)(char *, uint64_t))(v22 + 8))(v19, v24);
  double v26 = *(double *)(v15 + 16);
  char v27 = *(unsigned char *)(v15 + 24);
  uint64_t v28 = *(void *)(v15 + 32);
  long long v63 = *(_OWORD *)v15;
  double v64 = v26;
  LOBYTE(v65) = v27;
  *(void *)&long long v66 = v28;
  State.wrappedValue.getter();
  uint64_t v29 = v56;
  uint64_t v30 = v55;
  sub_1005EFB58(v23, v55, &qword_100E83188);
  uint64_t v31 = v30 + *(int *)(v51 + 36);
  *(double *)uint64_t v31 = v13;
  *(void *)(v31 + 8) = 0;
  *(void *)(v31 + 16) = v29;
  *(_WORD *)(v31 + 24) = 256;
  sub_10017DF4C(v23, &qword_100E83188);
  uint64_t v53 = static Alignment.center.getter();
  uint64_t v52 = v32;
  if (sub_1001F4578())
  {
    uint64_t v33 = static HorizontalAlignment.center.getter();
    sub_1005CEF60(v2, (uint64_t)&v63);
    long long v56 = (unint64_t)v33;
    double v57 = 0.0;
    *(void *)&long long v58 = v63;
    *((void *)&v58 + 1) = BYTE8(v63);
    *(double *)&long long v59 = v64;
    *((void *)&v59 + 1) = v65;
    long long v60 = v66;
    uint64_t v61 = v67;
    char v62 = 0;
  }
  else
  {
    long long v56 = *(unint64_t *)&v13;
    double v57 = -v13;
    long long v58 = 0u;
    long long v59 = 0u;
    long long v60 = 0u;
    uint64_t v61 = 0;
    char v62 = 1;
  }
  sub_10017DF08(&qword_100E831B8);
  sub_10017DF08(&qword_100E831C0);
  sub_10024D5E4((uint64_t)&unk_100E831C8);
  sub_10024D5E4((uint64_t)&unk_100E831D0);
  _ConditionalContent<>.init(storage:)();
  char v50 = (char *)*((void *)&v63 + 1);
  uint64_t v51 = v63;
  uint64_t v49 = *(void *)&v64;
  uint64_t v34 = v66;
  uint64_t v48 = v65;
  uint64_t v35 = *((void *)&v66 + 1);
  uint64_t v36 = v67;
  uint64_t v37 = v68;
  uint64_t v38 = v69;
  uint64_t v39 = v70;
  char v40 = v71;
  uint64_t v41 = v55;
  uint64_t v42 = v54;
  sub_1005EFB58(v55, v54, &qword_100E83190);
  uint64_t v43 = v42 + *(int *)(sub_10017DF08(&qword_100E831D8) + 36);
  uint64_t v44 = v52;
  *(void *)uint64_t v43 = v53;
  *(void *)(v43 + 8) = v44;
  uint64_t v45 = v50;
  *(void *)(v43 + 16) = v51;
  *(void *)(v43 + 24) = v45;
  uint64_t v46 = v48;
  *(void *)(v43 + 32) = v49;
  *(void *)(v43 + 40) = v46;
  *(void *)(v43 + 48) = v34;
  *(void *)(v43 + 56) = v35;
  *(void *)(v43 + 64) = v36;
  *(void *)(v43 + 72) = v37;
  *(void *)(v43 + 80) = v38;
  *(void *)(v43 + 88) = v39;
  *(unsigned char *)(v43 + 96) = v40;
  return sub_10017DF4C(v41, &qword_100E83190);
}

BOOL sub_1001F4578()
{
  uint64_t v0 = type metadata accessor for LocationComponentHeaderViewModel(0);
  __chkstk_darwin(v0);
  uint64_t v1 = type metadata accessor for LocationComponentHeaderMetrics(0);
  __chkstk_darwin(v1 - 8);
  sub_1005D284C();
  sub_1001EC0BC();
  BOOL v2 = swift_getEnumCaseMultiPayload() == 4;
  sub_1001F75CC();
  sub_1001F75CC();
  return v2;
}

uint64_t sub_1001F46D0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v80 = a1;
  uint64_t v3 = type metadata accessor for Text.Measurements();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = &v65[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = (int *)type metadata accessor for LocationComponentHeaderMetricsComputer(0);
  __chkstk_darwin(v7);
  uint64_t v9 = &v65[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = type metadata accessor for LocationComponentHeaderViewModel(0);
  uint64_t v11 = __chkstk_darwin(v10 - 8);
  int v78 = &v65[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v15 = &v65[-v14];
  __chkstk_darwin(v13);
  uint64_t v17 = (uint64_t)&v65[-v16];
  uint64_t v18 = (int *)type metadata accessor for ComputeAppropriateLocationComponentHeaderViewModelModifier(0);
  memcpy(__dst, (const void *)(v1 + v18[8]), 0x49uLL);
  sub_1001F4DEC((uint64_t)__dst, (void (*)(void, void, void, void, void, void, void, void, void, char))sub_1001910C8);
  sub_1001BEAF4();
  sub_1001F4DEC((uint64_t)__dst, (void (*)(void, void, void, void, void, void, void, void, void, char))sub_10018CCC4);
  sub_1001F9ED8(v86, v17);
  uint64_t v79 = v17;
  uint64_t v74 = v15;
  sub_1001F0424(v17, (uint64_t)v15, (void (*)(void))type metadata accessor for LocationComponentHeaderViewModel);
  uint64_t v19 = v1 + v18[5];
  uint64_t v76 = v4;
  uint64_t v20 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v4 + 16);
  uint64_t v75 = v6;
  uint64_t v77 = v3;
  v20(v6, v19, v3);
  uint64_t v21 = v1 + v18[11];
  uint64_t v22 = *(void *)v21;
  char v23 = *(unsigned char *)(v21 + 8);
  sub_100195B7C(*(void *)v21, v23);
  sub_100149AE8();
  LOBYTE(v17) = v24;
  sub_10018F6D8(v22, v23);
  if (v17)
  {
    if (qword_100E62240 != -1) {
      swift_once();
    }
    uint64_t v25 = &qword_100F51340;
  }
  else
  {
    if (qword_100E62248 != -1) {
      swift_once();
    }
    uint64_t v25 = &qword_100F51348;
  }
  uint64_t v26 = *v25;
  sub_1001F4DEC((uint64_t)__dst, (void (*)(void, void, void, void, void, void, void, void, void, char))sub_1001910C8);
  sub_1001BEAF4();
  sub_1001F4DEC((uint64_t)__dst, (void (*)(void, void, void, void, void, void, void, void, void, char))sub_10018CCC4);
  uint64_t v27 = v81;
  long long v73 = v82;
  uint64_t v72 = v83;
  int v71 = v84;
  uint64_t v28 = v85;
  int v70 = v86;
  uint64_t v29 = v87;
  uint64_t v30 = v88;
  sub_1001FF23C();
  sub_10014E6E8();
  uint64_t v31 = v1 + v18[7];
  uint64_t v32 = *(void *)v31;
  char v33 = *(unsigned char *)(v31 + 8);
  sub_100195B7C(*(void *)v31, v33);
  sub_100149AE8();
  char v35 = v34;
  int v69 = v34 & 1;
  sub_10018F6D8(v32, v33);
  uint64_t v36 = v2 + v18[10];
  uint64_t v37 = *(void *)v36;
  char v38 = *(unsigned char *)(v36 + 8);
  sub_100195B7C(*(void *)v36, v38);
  sub_100149AE8();
  int v68 = v39;
  sub_10018F6D8(v37, v38);
  uint64_t v40 = v2 + v18[9];
  uint64_t v41 = *(void *)v40;
  uint64_t v42 = *(unsigned __int8 *)(v40 + 8);
  LOBYTE(v37) = *(unsigned char *)(v40 + 9);
  sub_100193DD4(*(void *)v40, v42, v37);
  sub_10020CEA4();
  uint64_t v67 = v43;
  int v66 = v44;
  sub_10014D82C(v41, v42, v37);
  sub_100195B7C(v22, v23);
  sub_100149AE8();
  LOBYTE(v41) = v45;
  sub_10018F6D8(v22, v23);
  uint64_t v46 = v2 + v18[13];
  uint64_t v47 = *(void *)v46;
  uint64_t v48 = *(unsigned __int8 *)(v46 + 8);
  char v49 = *(unsigned char *)(v46 + 9);
  sub_100193DD4(*(void *)v46, v48, v49);
  sub_1001F8BA0();
  uint64_t v51 = v50;
  LOBYTE(v42) = v52;
  sub_10014D82C(v47, v48, v49);
  sub_1001F50EC((uint64_t)v74, (uint64_t)v9);
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v76 + 32))(&v9[v7[5]], v75, v77);
  *(void *)&v9[v7[6]] = v26;
  uint64_t v53 = &v9[v7[7]];
  *(void *)uint64_t v53 = v27;
  *(_OWORD *)(v53 + 8) = v73;
  *((void *)v53 + 3) = v72;
  v53[32] = v71;
  *((void *)v53 + 5) = v28;
  *((_WORD *)v53 + 24) = v70;
  *((void *)v53 + 7) = v29;
  *((void *)v53 + 8) = v30;
  v9[v7[10]] = v69;
  v9[v7[11]] = v68 & 1;
  uint64_t v54 = &v9[v7[12]];
  *(void *)uint64_t v54 = v67;
  v54[8] = v66 & 1;
  v9[v7[13]] = v41 & 1;
  uint64_t v55 = &v9[v7[14]];
  *(void *)uint64_t v55 = v51;
  v55[8] = v42 & 1;
  long long v56 = v78;
  sub_1001F0424((uint64_t)v9, (uint64_t)v78, (void (*)(void))type metadata accessor for LocationComponentHeaderViewModel);
  double v57 = sub_1001F8F8C();
  double v58 = sub_1001F8E24();
  double v59 = 0.0;
  if (v35) {
    double v59 = sub_1001F9960();
  }
  char v60 = sub_1001F885C();
  uint64_t v61 = v80;
  sub_1001F50EC((uint64_t)v56, v80);
  char v62 = (int *)type metadata accessor for LocationComponentHeaderMetrics(0);
  *(double *)(v61 + v62[5]) = v57;
  *(double *)(v61 + v62[6]) = v58;
  uint64_t v63 = v61 + v62[7];
  *(double *)uint64_t v63 = v59;
  *(unsigned char *)(v63 + 8) = (v35 & 1) == 0;
  *(unsigned char *)(v61 + v62[8]) = v60 & 1;
  sub_1001F4EE0((uint64_t)v9, (void (*)(void))type metadata accessor for LocationComponentHeaderMetricsComputer);
  return sub_1001F4EE0(v79, (void (*)(void))type metadata accessor for LocationComponentHeaderViewModel);
}

uint64_t sub_1001F4DEC(uint64_t a1, void (*a2)(void, void, void, void, void, void, void, void, void, char))
{
  char v4 = *(unsigned char *)(a1 + 72);
  a2(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), v4);
  return a1;
}

uint64_t sub_1001F4E44(uint64_t a1)
{
  uint64_t v2 = sub_10017DFE0(a1);
  char v5 = *(unsigned char *)(v1 + 72);
  v3(v2, *(void *)(v1 + 8), *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56), *(void *)(v1 + 64), v5);
  return v1;
}

uint64_t sub_1001F4E98(uint64_t a1)
{
  uint64_t v2 = sub_10019B15C(a1);
  v3(v2);
  return v1;
}

uint64_t sub_1001F4EE0(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

void sub_1001F4F38()
{
  sub_100162EA0();
  uint64_t v1 = v0;
  unint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  type metadata accessor for EnvironmentValues();
  sub_100179C0C();
  __chkstk_darwin(v10);
  sub_10016279C();
  if ((v7 & 0x100) == 0)
  {
    uint64_t v17 = v5;
    swift_retain();
    os_log_type_t v11 = static os_log_type_t.fault.getter();
    uint64_t v12 = static Log.runtimeIssuesLog.getter();
    if (os_log_type_enabled(v12, v11))
    {
      unint64_t v16 = v3;
      uint64_t v13 = (uint8_t *)sub_10017E670();
      uint64_t v18 = sub_10016EEA8();
      *(_DWORD *)uint64_t v13 = 136315138;
      uint64_t v14 = sub_10016414C(v17, v16, &v18);
      sub_10012BF78(v14);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v12, v11, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v13, 0xCu);
      swift_arrayDestroy();
      sub_100162EE0();
      sub_100162EE0();
    }

    EnvironmentValues.init()();
    swift_getAtKeyPath();
    v1(v9, v7, 0);
    sub_100127C2C();
    sub_100164938();
    v15();
  }
  sub_100162694();
}

uint64_t sub_1001F50EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for LocationComponentHeaderViewModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001F5150(uint64_t a1, uint64_t a2, int *a3)
{
  if (a1 != a2)
  {
    sub_1001F75CC();
    type metadata accessor for LocationComponentHeaderViewModel(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        *(void *)(a1 + 24) = *(void *)(a2 + 24);
        *(void *)(a1 + 32) = *(void *)(a2 + 32);
        *(void *)(a1 + 40) = *(void *)(a2 + 40);
        *(void *)(a1 + 48) = *(void *)(a2 + 48);
        *(void *)(a1 + 56) = *(void *)(a2 + 56);
        *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
        *(void *)(a1 + 72) = *(void *)(a2 + 72);
        *(void *)(a1 + 80) = *(void *)(a2 + 80);
        *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        break;
      case 2u:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        *(void *)(a1 + 24) = *(void *)(a2 + 24);
        *(void *)(a1 + 32) = *(void *)(a2 + 32);
        *(void *)(a1 + 40) = *(void *)(a2 + 40);
        *(void *)(a1 + 48) = *(void *)(a2 + 48);
        *(void *)(a1 + 56) = *(void *)(a2 + 56);
        *(void *)(a1 + 64) = *(void *)(a2 + 64);
        *(void *)(a1 + 72) = *(void *)(a2 + 72);
        *(void *)(a1 + 80) = *(void *)(a2 + 80);
        *(void *)(a1 + 88) = *(void *)(a2 + 88);
        *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
        *(void *)(a1 + 104) = *(void *)(a2 + 104);
        *(void *)(a1 + 112) = *(void *)(a2 + 112);
        *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        break;
      case 3u:
        uint64_t v6 = type metadata accessor for WeatherDescription();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
        uint64_t v7 = type metadata accessor for LocationComponentHeaderViewModel.Description(0);
        uint64_t v8 = *(int *)(v7 + 20);
        uint64_t v9 = a1 + v8;
        *(void *)uint64_t v9 = *(void *)(a2 + v8);
        *(void *)(v9 + 8) = *(void *)(a2 + v8 + 8);
        *(void *)(v9 + 16) = *(void *)(a2 + v8 + 16);
        *(void *)(v9 + 24) = *(void *)(a2 + v8 + 24);
        *(unsigned char *)(v9 + 32) = *(unsigned char *)(a2 + v8 + 32);
        *(void *)(v9 + 40) = *(void *)(a2 + v8 + 40);
        *(void *)(v9 + 48) = *(void *)(a2 + v8 + 48);
        *(unsigned char *)(a1 + *(int *)(v7 + 24)) = *(unsigned char *)(a2 + *(int *)(v7 + 24));
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        break;
      case 5u:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        *(void *)(a1 + 24) = *(void *)(a2 + 24);
        *(void *)(a1 + 32) = *(void *)(a2 + 32);
        *(void *)(a1 + 40) = *(void *)(a2 + 40);
        *(void *)(a1 + 48) = *(void *)(a2 + 48);
        *(void *)(a1 + 56) = *(void *)(a2 + 56);
        *(void *)(a1 + 64) = *(void *)(a2 + 64);
        *(void *)(a1 + 72) = *(void *)(a2 + 72);
        *(void *)(a1 + 80) = *(void *)(a2 + 80);
        *(void *)(a1 + 88) = *(void *)(a2 + 88);
        *(void *)(a1 + 96) = *(void *)(a2 + 96);
        *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
        *(void *)(a1 + 112) = *(void *)(a2 + 112);
        *(void *)(a1 + 120) = *(void *)(a2 + 120);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        break;
      default:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        *(void *)(a1 + 24) = *(void *)(a2 + 24);
        *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
        *(void *)(a1 + 40) = *(void *)(a2 + 40);
        *(void *)(a1 + 48) = *(void *)(a2 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v10 = type metadata accessor for LocationComponentContainerViewModel();
  uint64_t v11 = v10;
  if (a1 != a2)
  {
    uint64_t v12 = *(int *)(v10 + 20);
    uint64_t v13 = (void *)(a1 + v12);
    uint64_t v14 = (void *)(a2 + v12);
    sub_1001F75CC();
    uint64_t v15 = type metadata accessor for LocationComponentViewModel();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        *uint64_t v13 = *v14;
        *(_OWORD *)(v13 + 1) = *(_OWORD *)(v14 + 1);
        v13[3] = v14[3];
        v13[4] = v14[4];
        v13[5] = v14[5];
        v13[6] = v14[6];
        v13[7] = v14[7];
        v13[8] = v14[8];
        v13[9] = v14[9];
        v13[10] = v14[10];
        v13[11] = v14[11];
        *((unsigned char *)v13 + 96) = *((unsigned char *)v14 + 96);
        *((unsigned char *)v13 + 97) = *((unsigned char *)v14 + 97);
        v13[13] = v14[13];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_68;
      case 1u:
        *uint64_t v13 = *v14;
        unint64_t v16 = (int *)type metadata accessor for DailyForecastComponentViewModel(0);
        uint64_t v17 = v16[5];
        v305 = (char *)v13 + v17;
        v298 = (char *)v14 + v17;
        swift_bridgeObjectRetain();
        uint64_t v18 = sub_10017DF08(&qword_100E65250);
        uint64_t v19 = *(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16);
        v19(v305, v298, v18);
        v19((char *)v13 + v16[6], (char *)v14 + v16[6], v18);
        v19((char *)v13 + v16[7], (char *)v14 + v16[7], v18);
        uint64_t v20 = v16[8];
        uint64_t v21 = (void *)((char *)v13 + v20);
        uint64_t v22 = (void *)((char *)v14 + v20);
        void *v21 = *v22;
        v21[1] = v22[1];
        uint64_t v23 = v16[9];
        char v24 = (void *)((char *)v13 + v23);
        uint64_t v25 = (void *)((char *)v14 + v23);
        *char v24 = *v25;
        v24[1] = v25[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_68;
      case 2u:
        *uint64_t v13 = *v14;
        v13[1] = v14[1];
        v13[2] = v14[2];
        v13[3] = v14[3];
        uint64_t v292 = type metadata accessor for FeelsLikeComponentViewModel(0);
        uint64_t v26 = *(int *)(v292 + 24);
        v306 = (void *)((char *)v13 + v26);
        v299 = (void *)((char *)v14 + v26);
        uint64_t v27 = type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference(0);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v299, 1, v27))
        {
          uint64_t v28 = sub_10017DF08(&qword_100E63750);
          memcpy(v306, v299, *(void *)(*(void *)(v28 - 8) + 64));
        }
        else
        {
          void *v306 = *v299;
          v306[1] = v299[1];
          __dstd = (void *)v27;
          uint64_t v78 = *(int *)(v27 + 20);
          uint64_t v79 = (char *)v306 + v78;
          uint64_t v80 = (char *)v299 + v78;
          uint64_t v81 = type metadata accessor for TemperatureScaleConfiguration();
          v302 = *(void (**)(char *, char *, uint64_t))(*(void *)(v81 - 8) + 16);
          swift_bridgeObjectRetain();
          v302(v79, v80, v81);
          long long v82 = (int *)type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
          *(void *)&v79[v82[5]] = *(void *)&v80[v82[5]];
          *(void *)&v79[v82[6]] = *(void *)&v80[v82[6]];
          *(void *)&v79[v82[7]] = *(void *)&v80[v82[7]];
          uint64_t v83 = v82[8];
          unsigned __int8 v84 = &v79[v83];
          uint64_t v85 = &v80[v83];
          *(void *)unsigned __int8 v84 = *(void *)v85;
          *((void *)v84 + 1) = *((void *)v85 + 1);
          v79[v82[9]] = v80[v82[9]];
          swift_bridgeObjectRetain();
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v306, 0, 1, (uint64_t)__dstd);
        }
        uint64_t v86 = *(int *)(v292 + 28);
        uint64_t v87 = (void *)((char *)v13 + v86);
        uint64_t v88 = (void *)((char *)v14 + v86);
        *uint64_t v87 = *v88;
        v87[1] = v88[1];
        swift_bridgeObjectRetain();
        goto LABEL_68;
      case 3u:
        *uint64_t v13 = *v14;
        swift_bridgeObjectRetain();
        goto LABEL_68;
      case 4u:
        *uint64_t v13 = *v14;
        v13[1] = v14[1];
        v13[2] = v14[2];
        swift_bridgeObjectRetain();
        goto LABEL_68;
      case 5u:
        uint64_t v29 = type metadata accessor for WeatherMapOverlayKind();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v29 - 8) + 16))(v13, v14, v29);
        uint64_t v30 = type metadata accessor for MapComponentViewModel();
        uint64_t v31 = *(int *)(v30 + 20);
        uint64_t v32 = (char *)v13 + v31;
        char v33 = (char *)v14 + v31;
        uint64_t v34 = type metadata accessor for Location();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 16))(v32, v33, v34);
        uint64_t v307 = v30;
        uint64_t v35 = *(int *)(v30 + 24);
        uint64_t v36 = (void *)((char *)v13 + v35);
        uint64_t v37 = (void *)((char *)v14 + v35);
        uint64_t v38 = type metadata accessor for WeatherData(0);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v37, 1, v38))
        {
          uint64_t v39 = sub_10017DF08(&qword_100E63850);
          memcpy(v36, v37, *(void *)(*(void *)(v39 - 8) + 64));
          uint64_t v40 = v307;
          goto LABEL_67;
        }
        *uint64_t v36 = *v37;
        v36[1] = v37[1];
        uint64_t v294 = v36;
        v303 = (int *)v38;
        uint64_t v89 = *(int *)(v38 + 20);
        __dst = (char *)v36 + v89;
        uint64_t v90 = (char *)v37 + v89;
        uint64_t v91 = type metadata accessor for Locale();
        swift_bridgeObjectRetain();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v90, 1, v91))
        {
          uint64_t v92 = sub_10017DF08(&qword_100E63730);
          memcpy(__dst, v90, *(void *)(*(void *)(v92 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v91 - 8) + 16))(__dst, v90, v91);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dst, 0, 1, v91);
        }
        uint64_t v109 = v303[6];
        uint64_t v110 = (char *)v36 + v109;
        __dstf = (char *)v37 + v109;
        uint64_t v111 = type metadata accessor for WeatherDataModel();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v111 - 8) + 16))(v110, __dstf, v111);
        uint64_t v112 = v303[7];
        uint64_t v113 = (char *)v294 + v112;
        __dsta = (char *)v37;
        uint64_t v114 = (char *)v37 + v112;
        uint64_t v115 = sub_10017DF08(&qword_100E63738);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v114, 1, v115))
        {
          uint64_t v116 = type metadata accessor for WeatherData.CachingState(0);
          memcpy(v113, v114, *(void *)(*(void *)(v116 - 8) + 64));
        }
        else
        {
          uint64_t v117 = type metadata accessor for Date();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v117 - 8) + 16))(v113, v114, v117);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v113, 0, 1, v115);
        }
        uint64_t v118 = v303[8];
        uint64_t v119 = (void *)((char *)v294 + v118);
        uint64_t v120 = &__dsta[v118];
        uint64_t v121 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload == 1)
        {
          uint64_t v123 = type metadata accessor for WeatherStatisticsModel();
          (*(void (**)(void *, char *, uint64_t))(*(void *)(v123 - 8) + 16))(v119, v120, v123);
          goto LABEL_55;
        }
        if (!EnumCaseMultiPayload)
        {
          void *v119 = *(void *)v120;
          v119[1] = *((void *)v120 + 1);
          swift_bridgeObjectRetain();
LABEL_55:
          swift_storeEnumTagMultiPayload();
          goto LABEL_57;
        }
        memcpy(v119, v120, *(void *)(*(void *)(v121 - 8) + 64));
LABEL_57:
        uint64_t v124 = v303[9];
        uint64_t v125 = (char *)v294 + v124;
        uint64_t v126 = &__dsta[v124];
        uint64_t v127 = type metadata accessor for WeatherDataOverrides();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v126, 1, v127))
        {
          uint64_t v128 = sub_10017DF08(&qword_100E63740);
          memcpy(v125, v126, *(void *)(*(void *)(v128 - 8) + 64));
          uint64_t v130 = (uint64_t)v294;
          uint64_t v129 = (uint64_t)v303;
          uint64_t v40 = v307;
        }
        else
        {
          __dstb = (int *)v127;
          uint64_t v131 = type metadata accessor for Date();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v126, 1, v131))
          {
            uint64_t v132 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
            memcpy(v125, v126, *(void *)(*(void *)(v132 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v131 - 8) + 16))(v125, v126, v131);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v125, 0, 1, v131);
          }
          uint64_t v133 = v131;
          uint64_t v130 = (uint64_t)v294;
          uint64_t v134 = __dstb[5];
          v282 = &v125[v134];
          uint64_t v284 = (uint64_t)v125;
          uint64_t v135 = &v126[v134];
          uint64_t v136 = v133;
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v135, 1, v133))
          {
            uint64_t v137 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
            memcpy(v282, v135, *(void *)(*(void *)(v137 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *))(*(void *)(v136 - 8) + 16))(v282, v135);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v282, 0, 1, v136);
          }
          _s7Weather24LocationCompositionStateOwst_0(v284, 0, 1, (uint64_t)__dstb);
          uint64_t v40 = v307;
          uint64_t v129 = (uint64_t)v303;
        }
        _s7Weather24LocationCompositionStateOwst_0(v130, 0, 1, v129);
LABEL_67:
        uint64_t v138 = *(int *)(v40 + 28);
        uint64_t v139 = (void *)((char *)v13 + v138);
        uint64_t v140 = (void *)((char *)v14 + v138);
        *uint64_t v139 = *v140;
        v139[1] = v140[1];
        swift_bridgeObjectRetain();
LABEL_68:
        swift_storeEnumTagMultiPayload();
        break;
      case 6u:
        *uint64_t v13 = *v14;
        v13[1] = v14[1];
        int v41 = *((unsigned __int8 *)v14 + 32);
        swift_bridgeObjectRetain();
        if (v41 == 255)
        {
          long long v93 = *((_OWORD *)v14 + 1);
          *((unsigned char *)v13 + 32) = *((unsigned char *)v14 + 32);
          *((_OWORD *)v13 + 1) = v93;
        }
        else
        {
          uint64_t v42 = v14[2];
          uint64_t v43 = v14[3];
          sub_1001F3C64(v42, v43, v41);
          v13[2] = v42;
          v13[3] = v43;
          *((unsigned char *)v13 + 32) = v41;
        }
        v13[5] = v14[5];
        uint64_t v94 = (int *)type metadata accessor for MoonComponentViewModel();
        uint64_t v95 = v94[7];
        v312 = (char *)v13 + v95;
        v304 = (char *)v14 + v95;
        uint64_t v96 = type metadata accessor for Date();
        v295 = *(void (**)(char *, char *, uint64_t))(*(void *)(v96 - 8) + 16);
        swift_bridgeObjectRetain();
        v295(v312, v304, v96);
        *((unsigned char *)v13 + v94[8]) = *((unsigned char *)v14 + v94[8]);
        *(void *)((char *)v13 + v94[9]) = *(void *)((char *)v14 + v94[9]);
        goto LABEL_68;
      case 7u:
        uint64_t v44 = type metadata accessor for NewsArticleComponentViewModel(0);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          *uint64_t v13 = *v14;
          v13[1] = v14[1];
          v308 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
          uint64_t v45 = v308[5];
          uint64_t v46 = (char *)v13 + v45;
          uint64_t v47 = (char *)v14 + v45;
          uint64_t v48 = type metadata accessor for URL();
          swift_bridgeObjectRetain();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v47, 1, v48))
          {
            uint64_t v49 = sub_10017DF08(&qword_100E749B0);
            memcpy(v46, v47, *(void *)(*(void *)(v49 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v48 - 8) + 16))(v46, v47, v48);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v46, 0, 1, v48);
          }
          uint64_t v97 = v308[6];
          uint64_t v98 = (void *)((char *)v13 + v97);
          uint64_t v99 = (void *)((char *)v14 + v97);
          void *v98 = *v99;
          v98[1] = v99[1];
          uint64_t v100 = v308[7];
          __dste = (char *)v14 + v100;
          uint64_t v296 = (char *)v13 + v100;
          uint64_t v101 = v48;
          uint64_t v102 = *(void (**)(char *, char *, uint64_t))(*(void *)(v48 - 8) + 16);
          swift_bridgeObjectRetain();
          uint64_t v103 = v296;
          v297 = v102;
          v102(v103, __dste, v101);
          uint64_t v104 = v101;
          uint64_t v105 = v308[8];
          uint64_t v106 = (char *)v13 + v105;
          uint64_t v107 = (char *)v14 + v105;
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v14 + v105, 1, v104))
          {
            uint64_t v108 = sub_10017DF08(&qword_100E749B0);
            memcpy(v106, v107, *(void *)(*(void *)(v108 - 8) + 64));
          }
          else
          {
            v297(v106, v107, v104);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v106, 0, 1, v104);
          }
          *((unsigned char *)v13 + v308[9]) = *((unsigned char *)v14 + v308[9]);
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(v13, v14, *(void *)(*(void *)(v44 - 8) + 64));
        }
        goto LABEL_68;
      case 8u:
        *uint64_t v13 = *v14;
        v13[1] = v14[1];
        uint64_t v50 = *(int *)(type metadata accessor for NextHourPrecipitationComponentViewModel() + 20);
        v309 = (char *)v13 + v50;
        v300 = (char *)v14 + v50;
        uint64_t HourPrecipitationChartViewModel = type metadata accessor for NextHourPrecipitationChartViewModel();
        char v52 = *(void (**)(char *, char *, uint64_t))(*(void *)(HourPrecipitationChartViewModel - 8) + 16);
        swift_bridgeObjectRetain();
        v52(v309, v300, HourPrecipitationChartViewModel);
        goto LABEL_68;
      case 9u:
        uint64_t v53 = type metadata accessor for Location();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v53 - 8) + 16))(v13, v14, v53);
        uint64_t v54 = type metadata accessor for NotificationsOptInComponentViewModel();
        *((unsigned char *)v13 + *(int *)(v54 + 20)) = *((unsigned char *)v14 + *(int *)(v54 + 20));
        goto LABEL_68;
      case 0xAu:
        *uint64_t v13 = *v14;
        v13[1] = v14[1];
        v13[2] = v14[2];
        v13[3] = v14[3];
        v13[4] = v14[4];
        v13[5] = v14[5];
        v13[6] = v14[6];
        v13[7] = v14[7];
        v13[8] = v14[8];
        v13[9] = v14[9];
        v13[10] = v14[10];
        v13[11] = v14[11];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_68;
      case 0xBu:
        uint64_t v55 = type metadata accessor for PressureTrend();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v55 - 8) + 16))(v13, v14, v55);
        long long v56 = (int *)type metadata accessor for PressureComponentViewModel();
        uint64_t v57 = v56[5];
        double v58 = (void *)((char *)v13 + v57);
        double v59 = (void *)((char *)v14 + v57);
        void *v58 = *v59;
        v58[1] = v59[1];
        uint64_t v60 = v56[6];
        uint64_t v61 = (void *)((char *)v13 + v60);
        char v62 = (void *)((char *)v14 + v60);
        *uint64_t v61 = *v62;
        v61[1] = v62[1];
        uint64_t v63 = v56[7];
        double v64 = (void *)((char *)v13 + v63);
        uint64_t v65 = (void *)((char *)v14 + v63);
        *double v64 = *v65;
        v64[1] = v65[1];
        *(void *)((char *)v13 + v56[8]) = *(void *)((char *)v14 + v56[8]);
        uint64_t v66 = v56[9];
        uint64_t v67 = (void *)((char *)v13 + v66);
        int v68 = (void *)((char *)v14 + v66);
        *uint64_t v67 = *v68;
        v67[1] = v68[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_68;
      case 0xDu:
        *uint64_t v13 = *v14;
        v13[1] = v14[1];
        v13[2] = v14[2];
        v13[3] = v14[3];
        v13[4] = v14[4];
        v13[5] = v14[5];
        v13[6] = v14[6];
        v13[7] = v14[7];
        v13[8] = v14[8];
        uint64_t v310 = type metadata accessor for SevereAlertComponentViewModel();
        uint64_t v69 = *(int *)(v310 + 36);
        v283 = (char *)v14 + v69;
        __dstc = (char *)v13 + v69;
        uint64_t v70 = type metadata accessor for WeatherAlert.Prominence();
        uint64_t v281 = *(void (**)(char *, char *, uint64_t))(*(void *)(v70 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v281(__dstc, v283, v70);
        *(void *)((char *)v13 + *(int *)(v310 + 40)) = *(void *)((char *)v14 + *(int *)(v310 + 40));
        goto LABEL_68;
      case 0xEu:
        uint64_t v71 = type metadata accessor for SunriseSunsetViewModel();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v71 - 8) + 16))(v13, v14, v71);
        goto LABEL_68;
      case 0xFu:
        *uint64_t v13 = *v14;
        v13[1] = v14[1];
        v13[2] = v14[2];
        v13[3] = v14[3];
        v13[4] = v14[4];
        v13[5] = v14[5];
        v13[6] = v14[6];
        v13[7] = v14[7];
        v13[8] = v14[8];
        v13[9] = v14[9];
        v13[10] = v14[10];
        v13[11] = v14[11];
        v13[12] = v14[12];
        v13[13] = v14[13];
        v13[14] = v14[14];
        v13[15] = v14[15];
        v13[16] = v14[16];
        v13[17] = v14[17];
        v13[18] = v14[18];
        v13[19] = v14[19];
        v13[20] = v14[20];
        v13[21] = v14[21];
        v13[22] = v14[22];
        v13[23] = v14[23];
        v13[24] = v14[24];
        v13[25] = v14[25];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_68;
      case 0x10u:
        *uint64_t v13 = *v14;
        v13[1] = v14[1];
        v13[2] = v14[2];
        v13[3] = v14[3];
        uint64_t v72 = type metadata accessor for UVIndexComponentViewModel();
        uint64_t v73 = *(int *)(v72 + 28);
        v311 = (char *)v13 + v73;
        v301 = (char *)v14 + v73;
        uint64_t v74 = type metadata accessor for WeatherDescription();
        v293 = *(void (**)(char *, char *, uint64_t))(*(void *)(v74 - 8) + 16);
        swift_bridgeObjectRetain();
        v293(v311, v301, v74);
        *(void *)((char *)v13 + *(int *)(v72 + 32)) = *(void *)((char *)v14 + *(int *)(v72 + 32));
        swift_bridgeObjectRetain();
        goto LABEL_68;
      case 0x11u:
        *uint64_t v13 = *v14;
        v13[1] = v14[1];
        v13[2] = v14[2];
        v13[3] = v14[3];
        v13[4] = v14[4];
        v13[5] = v14[5];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_68;
      case 0x12u:
        *uint64_t v13 = *v14;
        v13[1] = v14[1];
        v13[2] = v14[2];
        v13[3] = v14[3];
        v13[4] = v14[4];
        v13[5] = v14[5];
        v13[6] = v14[6];
        v13[7] = v14[7];
        v13[8] = v14[8];
        v13[9] = v14[9];
        v13[10] = v14[10];
        v13[11] = v14[11];
        v13[12] = v14[12];
        v13[13] = v14[13];
        v13[14] = v14[14];
        v13[15] = v14[15];
        v13[16] = v14[16];
        v13[17] = v14[17];
        v13[18] = v14[18];
        v13[19] = v14[19];
        v13[20] = v14[20];
        v13[21] = v14[21];
        v13[22] = v14[22];
        v13[23] = v14[23];
        v13[24] = v14[24];
        uint64_t v75 = type metadata accessor for WindComponentViewModel();
        uint64_t v76 = *(int *)(v75 + 68);
        v279 = (char *)v13 + v76;
        uint64_t v280 = v75;
        v278 = (char *)v14 + v76;
        uint64_t v77 = type metadata accessor for WindComponentCompassViewModel();
        v277 = *(void (**)(char *, char *, uint64_t))(*(void *)(v77 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v277(v279, v278, v77);
        *(void *)((char *)v13 + *(int *)(v280 + 72)) = *(void *)((char *)v14 + *(int *)(v280 + 72));
        swift_bridgeObjectRetain();
        goto LABEL_68;
      default:
        memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64));
        break;
    }
  }
  *(_WORD *)(a1 + *(int *)(v11 + 24)) = *(_WORD *)(a2 + *(int *)(v11 + 24));
  uint64_t v141 = *(int *)(v11 + 28);
  uint64_t v142 = (unsigned char *)(a1 + v141);
  uint64_t v143 = (unsigned char *)(a2 + v141);
  uint64_t v144 = type metadata accessor for LocationComponentAction(0);
  int v145 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v142, 1, v144);
  int v146 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v143, 1, v144);
  if (v145)
  {
    if (!v146)
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          uint64_t v147 = type metadata accessor for URL();
          (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v147 - 8) + 16))(v142, v143, v147);
          uint64_t v148 = sub_10017DF08(&qword_100E66478);
          v142[*(int *)(v148 + 48)] = v143[*(int *)(v148 + 48)];
          goto LABEL_84;
        case 1u:
          uint64_t v152 = type metadata accessor for WeatherMapOverlayKind();
          (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v152 - 8) + 16))(v142, v143, v152);
          goto LABEL_84;
        case 2u:
          uint64_t v153 = type metadata accessor for DetailCondition();
          (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v153 - 8) + 16))(v142, v143, v153);
          uint64_t v154 = sub_10017DF08(&qword_100E66488);
          v142[*(int *)(v154 + 48)] = v143[*(int *)(v154 + 48)];
          goto LABEL_84;
        case 4u:
          *uint64_t v142 = *v143;
          uint64_t v155 = *(int *)(sub_10017DF08(&qword_100E66480) + 48);
          uint64_t v156 = &v142[v155];
          uint64_t v157 = &v143[v155];
          uint64_t v158 = type metadata accessor for Location();
          (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v158 - 8) + 16))(v156, v157, v158);
LABEL_84:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v142, v143, *(void *)(*(void *)(v144 - 8) + 64));
          break;
      }
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v142, 0, 1, v144);
      goto LABEL_91;
    }
    goto LABEL_75;
  }
  if (v146)
  {
    sub_1001F75CC();
LABEL_75:
    size_t v149 = *(void *)(*(void *)(sub_10017DF08(&qword_100E7AF78) - 8) + 64);
LABEL_76:
    memcpy(v142, v143, v149);
    goto LABEL_91;
  }
  if (a1 != a2)
  {
    sub_1001F75CC();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v150 = type metadata accessor for URL();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v150 - 8) + 16))(v142, v143, v150);
        uint64_t v151 = sub_10017DF08(&qword_100E66478);
        v142[*(int *)(v151 + 48)] = v143[*(int *)(v151 + 48)];
        break;
      case 1u:
        uint64_t v159 = type metadata accessor for WeatherMapOverlayKind();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v159 - 8) + 16))(v142, v143, v159);
        break;
      case 2u:
        uint64_t v160 = type metadata accessor for DetailCondition();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v160 - 8) + 16))(v142, v143, v160);
        uint64_t v161 = sub_10017DF08(&qword_100E66488);
        v142[*(int *)(v161 + 48)] = v143[*(int *)(v161 + 48)];
        break;
      case 4u:
        *uint64_t v142 = *v143;
        uint64_t v162 = *(int *)(sub_10017DF08(&qword_100E66480) + 48);
        uint64_t v163 = &v142[v162];
        uint64_t v164 = &v143[v162];
        uint64_t v165 = type metadata accessor for Location();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v165 - 8) + 16))(v163, v164, v165);
        break;
      default:
        size_t v149 = *(void *)(*(void *)(v144 - 8) + 64);
        goto LABEL_76;
    }
    swift_storeEnumTagMultiPayload();
  }
LABEL_91:
  uint64_t v166 = a3[5];
  os_log_type_t v167 = (void *)(a1 + v166);
  uint64_t v168 = (void *)(a2 + v166);
  uint64_t v169 = v168[1];
  *os_log_type_t v167 = *v168;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  v167[1] = v169;
  sub_1000C1E18((uint64_t *)(a1 + a3[6]), (uint64_t *)(a2 + a3[6]));
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  uint64_t v170 = a3[8];
  uint64_t v171 = a1 + v170;
  uint64_t v172 = a2 + v170;
  uint64_t v173 = type metadata accessor for Location.Identifier();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v173 - 8) + 24))(v171, v172, v173);
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  swift_retain();
  swift_release();
  *(void *)(a1 + a3[10]) = *(void *)(a2 + a3[10]);
  *(unsigned char *)(a1 + a3[11]) = *(unsigned char *)(a2 + a3[11]);
  uint64_t v174 = a3[12];
  uint64_t v175 = (void *)(a1 + v174);
  uint64_t v176 = (void *)(a2 + v174);
  void *v175 = *v176;
  v175[1] = v176[1];
  uint64_t v177 = a3[13];
  uint64_t v178 = a1 + v177;
  uint64_t v179 = (long long *)(a2 + v177);
  long long v180 = *v179;
  *(unsigned char *)(v178 + 16) = *((unsigned char *)v179 + 16);
  *(_OWORD *)uint64_t v178 = v180;
  *(void *)(v178 + 24) = *((void *)v179 + 3);
  swift_retain();
  swift_release();
  uint64_t v181 = a3[14];
  uint64_t v182 = a1 + v181;
  uint64_t v183 = (uint64_t *)(a2 + v181);
  uint64_t v184 = *v183;
  uint64_t v185 = v183[1];
  LOBYTE(v169) = *((unsigned char *)v183 + 16);
  sub_100195B88();
  *(void *)uint64_t v182 = v184;
  *(void *)(v182 + 8) = v185;
  *(unsigned char *)(v182 + 16) = v169;
  sub_10018F6E4();
  uint64_t v186 = a3[15];
  uint64_t v187 = a1 + v186;
  uint64_t v188 = (uint64_t *)(a2 + v186);
  uint64_t v189 = *v188;
  uint64_t v190 = v188[1];
  LOBYTE(v169) = *((unsigned char *)v188 + 16);
  sub_100195B88();
  *(void *)uint64_t v187 = v189;
  *(void *)(v187 + 8) = v190;
  *(unsigned char *)(v187 + 16) = v169;
  sub_10018F6E4();
  uint64_t v191 = a3[16];
  uint64_t v192 = a1 + v191;
  uint64_t v193 = (uint64_t *)(a2 + v191);
  uint64_t v194 = *v193;
  uint64_t v195 = v193[1];
  LOBYTE(v169) = *((unsigned char *)v193 + 16);
  sub_100195B88();
  *(void *)uint64_t v192 = v194;
  *(void *)(v192 + 8) = v195;
  *(unsigned char *)(v192 + 16) = v169;
  sub_10018F6E4();
  uint64_t v196 = a3[17];
  uint64_t v197 = a1 + v196;
  uint64_t v198 = a2 + v196;
  *(unsigned char *)uint64_t v197 = *(unsigned char *)v198;
  *(void *)(v197 + 8) = *(void *)(v198 + 8);
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    uint64_t v199 = a3[18];
    uint64_t v200 = (void *)(a1 + v199);
    uint64_t v201 = (void *)(a2 + v199);
    sub_10017DF4C(a1 + v199, &qword_100E62CB8);
    sub_10017DF08(&qword_100E62CB8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v202 = type metadata accessor for LayoutDirection();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v202 - 8) + 16))(v200, v201, v202);
    }
    else
    {
      *uint64_t v200 = *v201;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v203 = a3[19];
  uint64_t v204 = a1 + v203;
  uint64_t v205 = a2 + v203;
  uint64_t v206 = *(void *)v205;
  char v207 = *(unsigned char *)(v205 + 8);
  sub_100195B7C(*(void *)v205, v207);
  uint64_t v208 = *(void *)v204;
  char v209 = *(unsigned char *)(v204 + 8);
  *(void *)uint64_t v204 = v206;
  *(unsigned char *)(v204 + 8) = v207;
  sub_10018F6D8(v208, v209);
  uint64_t v210 = a3[20];
  uint64_t v211 = a1 + v210;
  uint64_t v212 = a2 + v210;
  uint64_t v213 = *(void *)v212;
  char v214 = *(unsigned char *)(v212 + 8);
  sub_100195B7C(*(void *)v212, v214);
  uint64_t v215 = *(void *)v211;
  char v216 = *(unsigned char *)(v211 + 8);
  *(void *)uint64_t v211 = v213;
  *(unsigned char *)(v211 + 8) = v214;
  sub_10018F6D8(v215, v216);
  if (a1 != a2)
  {
    uint64_t v217 = a3[21];
    uint64_t v218 = (void *)(a1 + v217);
    v219 = (void *)(a2 + v217);
    sub_10017DF4C(a1 + v217, &qword_100E63BC8);
    sub_10017DF08(&qword_100E63BC8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v220 = type metadata accessor for ContentSizeCategory();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v220 - 8) + 16))(v218, v219, v220);
    }
    else
    {
      *uint64_t v218 = *v219;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v221 = a3[22];
  uint64_t v222 = a1 + v221;
  uint64_t v223 = a2 + v221;
  uint64_t v224 = *(void *)v223;
  char v225 = *(unsigned char *)(v223 + 8);
  sub_100195B7C(*(void *)v223, v225);
  uint64_t v226 = *(void *)v222;
  char v227 = *(unsigned char *)(v222 + 8);
  *(void *)uint64_t v222 = v224;
  *(unsigned char *)(v222 + 8) = v225;
  sub_10018F6D8(v226, v227);
  uint64_t v228 = a3[23];
  uint64_t v229 = a1 + v228;
  uint64_t v230 = a2 + v228;
  uint64_t v231 = *(void *)v230;
  char v232 = *(unsigned char *)(v230 + 8);
  sub_100195B7C(*(void *)v230, v232);
  uint64_t v233 = *(void *)v229;
  char v234 = *(unsigned char *)(v229 + 8);
  *(void *)uint64_t v229 = v231;
  *(unsigned char *)(v229 + 8) = v232;
  sub_10018F6D8(v233, v234);
  uint64_t v235 = a3[24];
  uint64_t v236 = a1 + v235;
  uint64_t v237 = a2 + v235;
  uint64_t v238 = *(void *)v237;
  char v239 = *(unsigned char *)(v237 + 8);
  sub_100195B7C(*(void *)v237, v239);
  uint64_t v240 = *(void *)v236;
  char v241 = *(unsigned char *)(v236 + 8);
  *(void *)uint64_t v236 = v238;
  *(unsigned char *)(v236 + 8) = v239;
  sub_10018F6D8(v240, v241);
  uint64_t v242 = a3[25];
  uint64_t v243 = a1 + v242;
  uint64_t v244 = a2 + v242;
  uint64_t v245 = *(void *)v244;
  char v246 = *(unsigned char *)(v244 + 8);
  sub_100195B7C(*(void *)v244, v246);
  uint64_t v247 = *(void *)v243;
  char v248 = *(unsigned char *)(v243 + 8);
  *(void *)uint64_t v243 = v245;
  *(unsigned char *)(v243 + 8) = v246;
  sub_10018F6D8(v247, v248);
  uint64_t v249 = a3[26];
  uint64_t v250 = a1 + v249;
  uint64_t v251 = a2 + v249;
  uint64_t v252 = *(void *)v251;
  char v253 = *(unsigned char *)(v251 + 8);
  sub_100195B7C(*(void *)v251, v253);
  uint64_t v254 = *(void *)v250;
  char v255 = *(unsigned char *)(v250 + 8);
  *(void *)uint64_t v250 = v252;
  *(unsigned char *)(v250 + 8) = v253;
  sub_10018F6D8(v254, v255);
  uint64_t v256 = a3[27];
  uint64_t v257 = a1 + v256;
  uint64_t v258 = a2 + v256;
  uint64_t v259 = *(void *)v258;
  char v260 = *(unsigned char *)(v258 + 8);
  sub_100195B7C(*(void *)v258, v260);
  uint64_t v261 = *(void *)v257;
  char v262 = *(unsigned char *)(v257 + 8);
  *(void *)uint64_t v257 = v259;
  *(unsigned char *)(v257 + 8) = v260;
  sub_10018F6D8(v261, v262);
  if (a1 != a2)
  {
    uint64_t v263 = a3[28];
    uint64_t v264 = a1 + v263;
    uint64_t v265 = a2 + v263;
    sub_10017DF4C(a1 + v263, &qword_100E63BD0);
    sub_10017DF08(&qword_100E63BD0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(void *)uint64_t v264 = *(void *)v265;
      *(void *)(v264 + 8) = *(void *)(v265 + 8);
      *(unsigned char *)(v264 + 16) = *(unsigned char *)(v265 + 16);
      *(unsigned char *)(v264 + 17) = *(unsigned char *)(v265 + 17);
      *(unsigned char *)(v264 + 18) = *(unsigned char *)(v265 + 18);
      uint64_t v266 = *(int *)(type metadata accessor for DisplayMetrics() + 36);
      uint64_t v267 = v264 + v266;
      uint64_t v268 = v265 + v266;
      uint64_t v269 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v269 - 8) + 16))(v267, v268, v269);
    }
    else
    {
      *(void *)uint64_t v264 = *(void *)v265;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v270 = a3[29];
  uint64_t v271 = a1 + v270;
  uint64_t v272 = a2 + v270;
  *(void *)(a1 + v270) = *(void *)(a2 + v270);
  swift_retain();
  swift_release();
  *(void *)(v271 + 8) = *(void *)(v272 + 8);
  uint64_t v273 = a3[30];
  uint64_t v274 = a1 + v273;
  uint64_t v275 = a2 + v273;
  *(void *)(a1 + v273) = *(void *)(a2 + v273);
  swift_retain();
  swift_release();
  *(void *)(v274 + 8) = *(void *)(v275 + 8);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_1001F7574(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_1001F75CC()
{
  uint64_t v1 = sub_100127C8C();
  v2(v1);
  sub_100179DC0();
  sub_100162F0C();
  v3();
  return v0;
}

uint64_t type metadata accessor for LocationComponentContainerContentView(uint64_t a1)
{
  return sub_10018678C(a1, qword_100E82FA8);
}

uint64_t sub_1001F7638(uint64_t a1)
{
  type metadata accessor for LocationComponentHeaderViewModel(0);
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
    case 4:
      goto LABEL_5;
    case 1:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_7;
    case 2:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_7;
    case 3:
      uint64_t v3 = type metadata accessor for WeatherDescription();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
      type metadata accessor for LocationComponentHeaderViewModel.Description(0);
LABEL_5:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_7;
    case 5:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_7:
      uint64_t result = swift_bridgeObjectRelease();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1001F77B4(uint64_t a1, uint64_t a2)
{
  sub_10017DF08(&qword_100E829F0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    type metadata accessor for LocationComponentHeaderViewModel(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 4u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_9;
      case 1u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_9;
      case 2u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_9;
      case 3u:
        uint64_t v4 = type metadata accessor for WeatherDescription();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
        type metadata accessor for LocationComponentHeaderViewModel.Description(0);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_9;
      case 5u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_9:
        swift_bridgeObjectRelease();
        break;
      default:
        break;
    }
  }
  else
  {
    swift_release();
  }
  sub_10018F6D8(*(void *)(a1 + *(int *)(a2 + 20)), *(unsigned char *)(a1 + *(int *)(a2 + 20) + 8));

  return swift_release();
}

uint64_t sub_1001F7994(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
    case 4:
      goto LABEL_5;
    case 1:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_7;
    case 2:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_7;
    case 3:
      uint64_t v3 = type metadata accessor for WeatherDescription();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
      type metadata accessor for LocationComponentHeaderViewModel.Description(0);
LABEL_5:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_7;
    case 5:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_7:
      uint64_t result = swift_bridgeObjectRelease();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1001F7B00(uint64_t a1, uint64_t a2)
{
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = type metadata accessor for UUID();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

uint64_t sub_1001F7B78(uint64_t a1, int *a2)
{
  sub_10017DF08(&qword_100E63BD0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = a1 + *(int *)(type metadata accessor for DisplayMetrics() + 36);
    uint64_t v5 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  sub_10018F6D8(*(void *)(a1 + a2[5]), *(unsigned char *)(a1 + a2[5] + 8));
  sub_10018F6D8(*(void *)(a1 + a2[6]), *(unsigned char *)(a1 + a2[6] + 8));
  uint64_t v6 = a1 + a2[7];
  sub_10017DF08(&qword_100E82BD8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = v6 + *(int *)(type metadata accessor for LocationComponentCornerRadiusConfiguration(0) + 20);
    uint64_t v8 = type metadata accessor for RoundedCornerStyle();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  }
  else
  {
    swift_release();
  }
  uint64_t v9 = a1 + a2[8];
  type metadata accessor for LocationComponentViewModel();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_47;
    case 1u:
      swift_bridgeObjectRelease();
      uint64_t v10 = (int *)type metadata accessor for DailyForecastComponentViewModel(0);
      uint64_t v11 = v9 + v10[5];
      uint64_t v12 = sub_10017DF08(&qword_100E65250);
      uint64_t v13 = *(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8);
      v13(v11, v12);
      v13(v9 + v10[6], v12);
      v13(v9 + v10[7], v12);
      goto LABEL_32;
    case 2u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v14 = v9 + *(int *)(type metadata accessor for FeelsLikeComponentViewModel(0) + 24);
      uint64_t v15 = type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference(0);
      if (!_s7Weather24LocationCompositionStateOwet_0(v14, 1, v15))
      {
        swift_bridgeObjectRelease();
        uint64_t v16 = v14 + *(int *)(v15 + 20);
        uint64_t v17 = type metadata accessor for TemperatureScaleConfiguration();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v17 - 8) + 8))(v16, v17);
        type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
        swift_bridgeObjectRelease();
      }
      goto LABEL_47;
    case 3u:
    case 4u:
      goto LABEL_47;
    case 5u:
      uint64_t v18 = type metadata accessor for WeatherMapOverlayKind();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(v9, v18);
      uint64_t v19 = type metadata accessor for MapComponentViewModel();
      uint64_t v20 = v9 + *(int *)(v19 + 20);
      uint64_t v21 = type metadata accessor for Location();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v21 - 8) + 8))(v20, v21);
      uint64_t v22 = v9 + *(int *)(v19 + 24);
      uint64_t v23 = (int *)type metadata accessor for WeatherData(0);
      if (!_s7Weather24LocationCompositionStateOwet_0(v22, 1, (uint64_t)v23))
      {
        swift_bridgeObjectRelease();
        uint64_t v24 = v22 + v23[5];
        uint64_t v25 = type metadata accessor for Locale();
        if (!_s7Weather24LocationCompositionStateOwet_0(v24, 1, v25)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v25 - 8) + 8))(v24, v25);
        }
        uint64_t v26 = v22 + v23[6];
        uint64_t v27 = type metadata accessor for WeatherDataModel();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v27 - 8) + 8))(v26, v27);
        uint64_t v28 = v22 + v23[7];
        uint64_t v29 = sub_10017DF08(&qword_100E63738);
        if (!_s7Weather24LocationCompositionStateOwet_0(v28, 1, v29))
        {
          uint64_t v30 = type metadata accessor for Date();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v30 - 8) + 8))(v28, v30);
        }
        uint64_t v31 = v22 + v23[8];
        type metadata accessor for WeatherData.WeatherStatisticsState(0);
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload == 1)
        {
          uint64_t v45 = type metadata accessor for WeatherStatisticsModel();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v45 - 8) + 8))(v31, v45);
        }
        else if (!EnumCaseMultiPayload)
        {
          swift_bridgeObjectRelease();
        }
        uint64_t v46 = v22 + v23[9];
        uint64_t v47 = type metadata accessor for WeatherDataOverrides();
        if (!_s7Weather24LocationCompositionStateOwet_0(v46, 1, v47))
        {
          uint64_t v48 = type metadata accessor for Date();
          if (!_s7Weather24LocationCompositionStateOwet_0(v46, 1, v48)) {
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v48 - 8) + 8))(v46, v48);
          }
          uint64_t v49 = v46 + *(int *)(v47 + 20);
          if (!_s7Weather24LocationCompositionStateOwet_0(v49, 1, v48)) {
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v48 - 8) + 8))(v49, v48);
          }
        }
      }
      goto LABEL_47;
    case 6u:
      swift_bridgeObjectRelease();
      int v33 = *(unsigned __int8 *)(v9 + 32);
      if (v33 != 255) {
        sub_1001F3C7C(*(void *)(v9 + 16), *(void *)(v9 + 24), v33);
      }
      swift_bridgeObjectRelease();
      v9 += *(int *)(type metadata accessor for MoonComponentViewModel() + 28);
      uint64_t HourPrecipitationChartViewModel = type metadata accessor for Date();
      goto LABEL_35;
    case 7u:
      type metadata accessor for NewsArticleComponentViewModel(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        swift_bridgeObjectRelease();
        uint64_t v35 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
        uint64_t v36 = v9 + v35[5];
        uint64_t v37 = type metadata accessor for URL();
        if (!_s7Weather24LocationCompositionStateOwet_0(v36, 1, v37)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v37 - 8) + 8))(v36, v37);
        }
        swift_bridgeObjectRelease();
        uint64_t v38 = *(void (**)(uint64_t, uint64_t))(*(void *)(v37 - 8) + 8);
        v38(v9 + v35[7], v37);
        uint64_t v39 = v9 + v35[8];
        if (!_s7Weather24LocationCompositionStateOwet_0(v39, 1, v37)) {
          v38(v39, v37);
        }
      }
      break;
    case 8u:
      swift_bridgeObjectRelease();
      v9 += *(int *)(type metadata accessor for NextHourPrecipitationComponentViewModel() + 20);
      uint64_t HourPrecipitationChartViewModel = type metadata accessor for NextHourPrecipitationChartViewModel();
      goto LABEL_35;
    case 9u:
      uint64_t HourPrecipitationChartViewModel = type metadata accessor for Location();
      goto LABEL_35;
    case 0xAu:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_47;
    case 0xBu:
      uint64_t v40 = type metadata accessor for PressureTrend();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v40 - 8) + 8))(v9, v40);
      type metadata accessor for PressureComponentViewModel();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_32:
      swift_bridgeObjectRelease();
      goto LABEL_47;
    case 0xDu:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v9 += *(int *)(type metadata accessor for SevereAlertComponentViewModel() + 36);
      uint64_t HourPrecipitationChartViewModel = type metadata accessor for WeatherAlert.Prominence();
      goto LABEL_35;
    case 0xEu:
      uint64_t HourPrecipitationChartViewModel = type metadata accessor for SunriseSunsetViewModel();
LABEL_35:
      (*(void (**)(uint64_t, uint64_t))(*(void *)(HourPrecipitationChartViewModel - 8) + 8))(v9, HourPrecipitationChartViewModel);
      break;
    case 0xFu:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_47;
    case 0x10u:
      swift_bridgeObjectRelease();
      uint64_t v41 = v9 + *(int *)(type metadata accessor for UVIndexComponentViewModel() + 28);
      uint64_t v42 = type metadata accessor for WeatherDescription();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v42 - 8) + 8))(v41, v42);
      goto LABEL_47;
    case 0x11u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_47;
    case 0x12u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v43 = v9 + *(int *)(type metadata accessor for WindComponentViewModel() + 68);
      uint64_t v44 = type metadata accessor for WindComponentCompassViewModel();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v44 - 8) + 8))(v43, v44);
LABEL_47:
      swift_bridgeObjectRelease();
      break;
    default:
      break;
  }
  sub_10018F6D8(*(void *)(a1 + a2[9]), *(unsigned char *)(a1 + a2[9] + 8));
  uint64_t v50 = a1 + a2[10];
  sub_10017DF08(&qword_100E829F0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    type metadata accessor for LocationComponentHeaderViewModel(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 4u:
        goto LABEL_54;
      case 1u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_56;
      case 2u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_56;
      case 3u:
        uint64_t v51 = type metadata accessor for WeatherDescription();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v51 - 8) + 8))(v50, v51);
        type metadata accessor for LocationComponentHeaderViewModel.Description(0);
LABEL_54:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_56;
      case 5u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_56:
        swift_bridgeObjectRelease();
        break;
      default:
        break;
    }
  }
  else
  {
    swift_release();
  }
  uint64_t v52 = a1 + a2[12];
  uint64_t v53 = type metadata accessor for Location.Identifier();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v53 - 8) + 8))(v52, v53);

  return swift_release();
}

uint64_t sub_1001F8784(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      uint64_t v3 = type metadata accessor for URL();
      goto LABEL_6;
    case 1:
      uint64_t v3 = type metadata accessor for WeatherMapOverlayKind();
      goto LABEL_6;
    case 2:
      uint64_t v3 = type metadata accessor for DetailCondition();
      goto LABEL_6;
    case 4:
      a1 += *(int *)(sub_10017DF08(&qword_100E66480) + 48);
      uint64_t v3 = type metadata accessor for Location();
LABEL_6:
      uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
      uint64_t result = v4(a1, v3);
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1001F885C()
{
  uint64_t v1 = type metadata accessor for LocationComponentHeaderMetricsComputer(0);
  __chkstk_darwin(v1);
  uint64_t v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v4 = [self currentDevice];
  id v5 = [v4 userInterfaceIdiom];

  if (v5 == (id)1)
  {
    char v6 = sub_100365860();
    sub_1001F0424(v0, (uint64_t)v3, (void (*)(void))type metadata accessor for LocationComponentHeaderMetricsComputer);
    if (v6)
    {
      sub_1005BF53C();
      char v8 = v7;
    }
    else
    {
      char v8 = 0;
    }
    sub_1001F4EE0((uint64_t)v3, (void (*)(void))type metadata accessor for LocationComponentHeaderMetricsComputer);
  }
  else
  {
    char v8 = 0;
  }
  return v8 & 1;
}

uint64_t type metadata accessor for LocationComponentHeaderMetricsComputer(uint64_t a1)
{
  return sub_10018678C(a1, qword_100E7B0B0);
}

uint64_t sub_1001F89A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  unsigned int v12 = (a5 >> 8) & 1;
  uint64_t KeyPath = swift_getKeyPath();
  sub_100193DD4(a4, a5, v12);
  sub_1001F4F38();
  double v15 = v14;
  char v17 = v16;
  sub_10014D82C(a4, a5, v12);
  if ((v17 & 1) == 0)
  {
    double v18 = v15;
    char v19 = a3 & 1;
    sub_100195B7C(a2, v19);
    sub_100149AE8();
    char v21 = v20;
    sub_10018F6D8(a2, v19);
    if (v21)
    {
      if (qword_100E62240 != -1) {
        swift_once();
      }
      uint64_t v22 = &qword_100F51340;
    }
    else
    {
      if (qword_100E62248 != -1) {
        swift_once();
      }
      uint64_t v22 = &qword_100F51348;
    }
    double v15 = v18 - (*(double *)v22 + *(double *)v22);
  }
  uint64_t v23 = sub_10017DF08(&qword_100E83C58);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 16))(a6, a1, v23);
  uint64_t result = sub_10017DF08(&qword_100E83C60);
  uint64_t v25 = a6 + *(int *)(result + 36);
  *(void *)uint64_t v25 = KeyPath;
  *(double *)(v25 + 8) = v15;
  *(unsigned char *)(v25 + 16) = v17 & 1;
  return result;
}

void sub_1001F8BA0()
{
}

uint64_t sub_1001F8BD0(uint64_t a1, int *a2)
{
  type metadata accessor for LocationComponentHeaderViewModel(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 4u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_7;
    case 1u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_7;
    case 2u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_7;
    case 3u:
      uint64_t v4 = type metadata accessor for WeatherDescription();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
      type metadata accessor for LocationComponentHeaderViewModel.Description(0);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_7;
    case 5u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_7:
      swift_bridgeObjectRelease();
      break;
    default:
      break;
  }
  uint64_t v5 = a1 + a2[5];
  uint64_t v6 = type metadata accessor for Text.Measurements();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + a2[8];
  uint64_t v8 = type metadata accessor for LayoutDirection();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = a1 + a2[9];
  uint64_t v10 = type metadata accessor for ContentSizeCategory();
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8);

  return v11(v9, v10);
}

double sub_1001F8E24()
{
  uint64_t v1 = type metadata accessor for LocationComponentHeaderViewModel(0);
  __chkstk_darwin(v1);
  uint64_t v3 = &__dst[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_100E62230 != -1) {
    swift_once();
  }
  double v4 = *(double *)&qword_100F51330;
  sub_1001F0424(v0, (uint64_t)v3, (void (*)(void))type metadata accessor for LocationComponentHeaderViewModel);
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    memcpy(__dst, v3, 0x79uLL);
    sub_100366BB0((uint64_t)__dst);
    if (qword_100E62250 != -1) {
      swift_once();
    }
    return v4 - *(double *)&qword_100F51350;
  }
  else
  {
    sub_1001F4EE0((uint64_t)v3, (void (*)(void))type metadata accessor for LocationComponentHeaderViewModel);
  }
  return v4;
}

double sub_1001F8F8C()
{
  uint64_t v1 = type metadata accessor for LocationComponentHeaderViewModel(0);
  __chkstk_darwin(v1);
  uint64_t v3 = &__dst[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (sub_1001F885C())
  {
    if (qword_100E62230 != -1) {
      swift_once();
    }
    return *(double *)&qword_100F51330;
  }
  else
  {
    sub_1001F0424(v0, (uint64_t)v3, (void (*)(void))type metadata accessor for LocationComponentHeaderViewModel);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_8;
      case 2u:
        memcpy(__dst, v3, 0x79uLL);
        sub_1004B3700();
        double v4 = v5;
        sub_100366BB0((uint64_t)__dst);
        return v4;
      case 3u:
        sub_1001F4EE0((uint64_t)v3, (void (*)(void))type metadata accessor for LocationComponentHeaderViewModel);
        goto LABEL_11;
      case 5u:
        memcpy(__dst, v3, sizeof(__dst));
        double v4 = sub_1004B3A70();
        sub_100366ABC((uint64_t)__dst);
        return v4;
      default:
        swift_bridgeObjectRelease();
LABEL_8:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_11:
        double v4 = sub_1001F9174();
        break;
    }
  }
  return v4;
}

double sub_1001F9174()
{
  uint64_t v1 = sub_10017DF08(&qword_100E63DB8);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001F9410(v0);
  double v4 = (int *)type metadata accessor for LocationComponentHeaderMetricsComputer(0);
  double v5 = sub_1001FCDFC(v0, *(unsigned char *)(v0 + v4[13]), v0 + v4[8], *(unsigned char *)(v0 + v4[11]));
  uint64_t v7 = v6;
  char v9 = v8 & 1;
  uint64_t v10 = type metadata accessor for Text.WritingMode();
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v3, 1, 1, v10);
  Text.Measurements.size(of:in:writingMode:)();
  double v12 = v11;
  sub_100191924((uint64_t)v5, v7, v9);
  swift_bridgeObjectRelease();
  sub_1001781AC((uint64_t)v3, &qword_100E63DB8);
  if (qword_100E62230 != -1) {
    swift_once();
  }
  double v13 = v12 + *(double *)&qword_100F51330;
  double v14 = v13 + sub_1001F930C();
  return v14 + sub_1001F9D50();
}

double sub_1001F930C()
{
  uint64_t v1 = type metadata accessor for LocationComponentHeaderViewModel(0);
  __chkstk_darwin(v1);
  uint64_t v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001F0424(v0, (uint64_t)v3, (void (*)(void))type metadata accessor for LocationComponentHeaderViewModel);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  sub_1001F4EE0((uint64_t)v3, (void (*)(void))type metadata accessor for LocationComponentHeaderViewModel);
  double result = 0.0;
  if (EnumCaseMultiPayload != 1)
  {
    if (qword_100E62238 != -1) {
      swift_once();
    }
    return *(double *)&qword_100F51338;
  }
  return result;
}

uint64_t sub_1001F9410(uint64_t a1)
{
  uint64_t result = type metadata accessor for LocationComponentHeaderMetricsComputer(0);
  uint64_t v3 = a1 + *(int *)(result + 48);
  if (((*(unsigned char *)(v3 + 8) & 1) != 0 || *(void *)v3 != 1) && (*(unsigned char *)(a1 + *(int *)(result + 56) + 8) & 1) == 0) {
    return sub_1001F949C();
  }
  return result;
}

uint64_t sub_1001F949C()
{
  uint64_t v0 = sub_10017DF08(&qword_100E63DB8);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = &v11[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t result = sub_1001F96B4();
  if (v6)
  {
    uint64_t v7 = result;
    uint64_t v8 = v4;
    char v9 = v5 & 1;
    type metadata accessor for LocationComponentHeaderMetricsComputer(0);
    uint64_t v10 = type metadata accessor for Text.WritingMode();
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v2, 1, 1, v10);
    v11[8] = v9;
    Text.Measurements.size(of:in:writingMode:)();
    sub_1001781AC((uint64_t)v2, &qword_100E63DB8);
    sub_1001F95E0();
    sub_100191924(v7, v8, v9);
    return swift_bridgeObjectRelease();
  }
  return result;
}

double sub_1001F95E0()
{
  uint64_t v1 = type metadata accessor for LocationComponentHeaderViewModel(0);
  __chkstk_darwin(v1);
  uint64_t v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001F0424(v0, (uint64_t)v3, (void (*)(void))type metadata accessor for LocationComponentHeaderViewModel);
  double v4 = dbl_100C3EC48[(int)swift_getEnumCaseMultiPayload()];
  sub_1001F4EE0((uint64_t)v3, (void (*)(void))type metadata accessor for LocationComponentHeaderViewModel);
  return v4;
}

uint64_t sub_1001F96B4()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Font.Leading();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  char v5 = &v16[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = type metadata accessor for LocationComponentHeaderViewModel(0);
  __chkstk_darwin(v6);
  uint64_t v8 = &v16[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1001F0424(v1, (uint64_t)v8, (void (*)(void))type metadata accessor for LocationComponentHeaderViewModel);
  if (swift_getEnumCaseMultiPayload())
  {
    sub_1001F4EE0((uint64_t)v8, (void (*)(void))type metadata accessor for LocationComponentHeaderViewModel);
    return 0;
  }
  else
  {
    if (*(unsigned char *)(v1 + *(int *)(type metadata accessor for LocationComponentHeaderMetricsComputer(0) + 52)) == 1) {
      static Font.caption.getter();
    }
    else {
      static Font.footnote.getter();
    }
    (*(void (**)(unsigned char *, void, uint64_t))(v3 + 104))(v5, enum case for Font.Leading.tight(_:), v2);
    Font.leading(_:)();
    swift_release();
    (*(void (**)(unsigned char *, uint64_t))(v3 + 8))(v5, v2);
    swift_bridgeObjectRetain();
    Image.init(systemName:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v10 = Text.init(_:)();
    uint64_t v12 = v11;
    char v14 = v13 & 1;
    swift_retain();
    uint64_t v9 = Text.font(_:)();
    swift_release();
    sub_100191924(v10, v12, v14);
    swift_release();
    swift_bridgeObjectRelease();
  }
  return v9;
}

double sub_1001F9960()
{
  uint64_t v1 = type metadata accessor for LocationComponentHeaderViewModel(0);
  __chkstk_darwin(v1);
  uint64_t v3 = __dst - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0) + 6;
  uint64_t v4 = sub_10017DF08(&qword_100E63DB8);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = __dst - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0) + 6;
  if (qword_100E62230 != -1) {
    swift_once();
  }
  double v7 = *(double *)&qword_100F51330;
  if (qword_100E62238 != -1) {
    swift_once();
  }
  double v8 = *(double *)&qword_100F51338;
  uint64_t v9 = sub_1001F9C10();
  if (v12)
  {
    uint64_t v13 = (uint64_t)v9;
    uint64_t v14 = v10;
    char v15 = v11 & 1;
    uint64_t v16 = type metadata accessor for LocationComponentHeaderMetricsComputer(0);
    memcpy(__dst, (const void *)(v0 + *(int *)(v16 + 28)), sizeof(__dst));
    sub_1000E0B50();
    uint64_t v17 = type metadata accessor for Text.WritingMode();
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v6, 1, 1, v17);
    char v24 = v15;
    Text.Measurements.size(of:in:writingMode:)();
    double v19 = v18;
    sub_1001781AC((uint64_t)v6, &qword_100E63DB8);
    double v20 = v19 + *(double *)&qword_100F51330;
    double v21 = *(double *)&qword_100F51338;
    sub_100191924(v13, v14, v15);
    swift_bridgeObjectRelease();
    return v20 + v21;
  }
  else
  {
    sub_1001F0424(v0, (uint64_t)v3, (void (*)(void))type metadata accessor for LocationComponentHeaderViewModel);
    if (swift_getEnumCaseMultiPayload())
    {
      double v22 = v7 + v8;
      sub_1001F4EE0((uint64_t)v3, (void (*)(void))type metadata accessor for LocationComponentHeaderViewModel);
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return sub_1001F9174();
    }
  }
  return v22;
}

uint64_t *sub_1001F9C10()
{
  uint64_t v1 = type metadata accessor for LocationComponentHeaderViewModel(0);
  __chkstk_darwin(v1);
  uint64_t v3 = &v8[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1001FCB84();
  sub_1001FA228((uint64_t)v8, (uint64_t)v9);
  if (!*((void *)&v9[0] + 1)) {
    return 0;
  }
  long long v4 = v9[1];
  *(_OWORD *)uint64_t v3 = v9[0];
  *((_OWORD *)v3 + 1) = v4;
  *((_OWORD *)v3 + 2) = v9[2];
  *((void *)v3 + 6) = v10;
  swift_storeEnumTagMultiPayload();
  uint64_t v5 = (int *)type metadata accessor for LocationComponentHeaderMetricsComputer(0);
  uint64_t v6 = sub_1001FCDFC((uint64_t)v3, *(unsigned char *)(v0 + v5[13]), v0 + v5[8], *(unsigned char *)(v0 + v5[11]));
  sub_1001F4EE0((uint64_t)v3, (void (*)(void))type metadata accessor for LocationComponentHeaderViewModel);
  return v6;
}

double sub_1001F9D50()
{
  uint64_t v1 = type metadata accessor for LocationComponentHeaderViewModel(0);
  __chkstk_darwin(v1);
  uint64_t v3 = &__dst[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1001F0424(v0, (uint64_t)v3, (void (*)(void))type metadata accessor for LocationComponentHeaderViewModel);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return 8.0;
    case 2u:
      memcpy(__dst, v3, 0x79uLL);
      sub_100366BB0((uint64_t)__dst);
      return 0.0;
    case 3u:
      sub_1001F4EE0((uint64_t)v3, (void (*)(void))type metadata accessor for LocationComponentHeaderViewModel);
      return 15.0;
    case 5u:
      memcpy(__dst, v3, sizeof(__dst));
      sub_100366ABC((uint64_t)__dst);
      return 0.0;
    default:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return 0.0;
  }
}

void sub_1001F9ED8(unsigned __int8 a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  int v5 = a1;
  type metadata accessor for LocationComponentHeaderViewModel(0);
  sub_100162E4C();
  __chkstk_darwin(v6);
  sub_1001626E0();
  uint64_t v9 = (const void *)(v8 - v7);
  uint64_t v10 = type metadata accessor for LocationComponentContainerViewModel();
  sub_100162E4C();
  __chkstk_darwin(v11);
  sub_1001626E0();
  uint64_t v14 = v13 - v12;
  type metadata accessor for LocationComponentViewModel();
  sub_100162E4C();
  __chkstk_darwin(v15);
  sub_1001626E0();
  uint64_t v18 = v17 - v16;
  if (v5) {
    goto LABEL_11;
  }
  sub_1001FFBB0(v2 + *(int *)(v10 + 20), v18, (void (*)(void))type metadata accessor for LocationComponentViewModel);
  if (swift_getEnumCaseMultiPayload())
  {
    sub_1002004A4(v18, (void (*)(void))type metadata accessor for LocationComponentViewModel);
    sub_1001FFBB0(v2, (uint64_t)v9, (void (*)(void))type metadata accessor for LocationComponentHeaderViewModel);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      memcpy(__dst, v9, 0x79uLL);
      uint64_t v20 = __dst[2];
      uint64_t v19 = __dst[3];
      uint64_t v22 = __dst[6];
      uint64_t v21 = __dst[7];
      uint64_t v24 = __dst[8];
      uint64_t v23 = __dst[9];
      uint64_t v25 = __dst[11];
      uint64_t v33 = __dst[10];
      char v32 = __dst[12];
      uint64_t v26 = __dst[14];
      uint64_t v31 = __dst[13];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_100366BB0((uint64_t)__dst);
      *(void *)a2 = v20;
      *(void *)(a2 + 8) = v19;
      *(void *)(a2 + 16) = v22;
      *(void *)(a2 + 24) = v21;
      *(void *)(a2 + 32) = v24;
      *(void *)(a2 + 40) = v23;
      *(void *)(a2 + 48) = v33;
      *(void *)(a2 + 56) = v25;
      *(unsigned char *)(a2 + 64) = v32;
      *(void *)(a2 + 72) = v31;
      *(void *)(a2 + 80) = v26;
      *(unsigned char *)(a2 + 88) = 0;
      swift_storeEnumTagMultiPayload();
      return;
    }
    uint64_t v29 = (void (*)(void))type metadata accessor for LocationComponentHeaderViewModel;
    uint64_t v30 = (uint64_t)v9;
    goto LABEL_10;
  }
  int v27 = *(unsigned __int8 *)(v18 + 97);
  sub_1001FFBB0(v3, v14, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
  if (v27 != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v29 = (void (*)(void))type metadata accessor for LocationComponentContainerViewModel;
    uint64_t v30 = v14;
LABEL_10:
    sub_1002004A4(v30, v29);
    goto LABEL_11;
  }
  char v28 = sub_100365860();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1002004A4(v14, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
  if (v28)
  {
    sub_100365A38();
    return;
  }
LABEL_11:
  sub_1001FFBB0(v3, a2, (void (*)(void))type metadata accessor for LocationComponentHeaderViewModel);
}

uint64_t sub_1001FA228(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10017DF08(&qword_100E7B050);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001FA290()
{
  sub_100127598();
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v7 = sub_10017DF08(&qword_100E63BF8);
  uint64_t v8 = sub_100109308(v7);
  __chkstk_darwin(v8);
  sub_10011BFD8();
  uint64_t v9 = type metadata accessor for Location.Identifier();
  sub_100179C0C();
  uint64_t v11 = v10;
  __chkstk_darwin(v12);
  sub_10016279C();
  uint64_t v13 = type metadata accessor for LocationComponentViewModel();
  uint64_t v14 = sub_100109308(v13);
  __chkstk_darwin(v14);
  sub_10011C760();
  type metadata accessor for LocationComponentContainerViewModel();
  sub_1001EC0BC();
  uint64_t v15 = (int *)type metadata accessor for LocationComponentContainerView(0);
  char v16 = *(unsigned char *)(v0 + v15[7]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v2, v0 + v15[8], v9);
  uint64_t v17 = *(void *)(v0 + v15[9]);
  double v18 = *(double *)(v0 + v15[10]);
  *uint64_t v1 = swift_getKeyPath();
  sub_10017DF08(&qword_100E63BD0);
  swift_storeEnumTagMultiPayload();
  sub_1001FA43C((uint64_t)v1, v16, v2, v17, v4, v6, v18);
  return swift_retain();
}

uint64_t sub_1001FA43C@<X0>(uint64_t a1@<X0>, char a2@<W2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X8>, double a7@<D0>)
{
  sub_10024D364(a1, a6, &qword_100E63BF8);
  uint64_t v13 = (int *)type metadata accessor for LocationComponentContainerBackgroundView(0);
  uint64_t v14 = a6 + v13[5];
  *(void *)uint64_t v14 = swift_getKeyPath();
  *(unsigned char *)(v14 + 8) = 0;
  uint64_t v15 = a6 + v13[6];
  *(void *)uint64_t v15 = swift_getKeyPath();
  *(unsigned char *)(v15 + 8) = 0;
  char v16 = (uint64_t *)(a6 + v13[7]);
  uint64_t *v16 = swift_getKeyPath();
  sub_10017DF08(&qword_100E82BD8);
  swift_storeEnumTagMultiPayload();
  sub_1005D8BD8();
  uint64_t v17 = a6 + v13[9];
  *(void *)uint64_t v17 = swift_getKeyPath();
  *(unsigned char *)(v17 + 8) = 0;
  double v18 = (uint64_t *)(a6 + v13[10]);
  *double v18 = swift_getKeyPath();
  sub_10017DF08(&qword_100E829F0);
  swift_storeEnumTagMultiPayload();
  *(unsigned char *)(a6 + v13[11]) = a2;
  uint64_t v19 = a6 + v13[12];
  uint64_t v20 = type metadata accessor for Location.Identifier();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 32))(v19, a3, v20);
  *(void *)(a6 + v13[13]) = a4;
  *(double *)(a6 + v13[14]) = a7;
  return sub_10024D364(a5, a6 + v13[15], &qword_100E82BC8);
}

uint64_t sub_1001FA604@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_10017DF08(&qword_100E83C90);
  uint64_t v4 = v3 - 8;
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10017DF08(&qword_100E83C98);
  uint64_t v8 = v7 - 8;
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v6 = static HorizontalAlignment.center.getter();
  *((void *)v6 + 1) = 0;
  v6[16] = 0;
  uint64_t v11 = sub_10017DF08(&qword_100E83CA0);
  sub_1001FB510(v1, (uint64_t)&v6[*(int *)(v11 + 44)]);
  uint64_t v12 = static Alignment.center.getter();
  uint64_t v14 = v13;
  uint64_t v15 = (uint64_t)&v6[*(int *)(v4 + 44)];
  sub_1001FAF68(v1, v15);
  char v16 = (uint64_t *)(v15 + *(int *)(sub_10017DF08(&qword_100E83CA8) + 36));
  uint64_t *v16 = v12;
  v16[1] = v14;
  sub_1005EFB58((uint64_t)v6, (uint64_t)v10, &qword_100E83C90);
  v10[*(int *)(v8 + 44)] = 1;
  sub_10017DF4C((uint64_t)v6, &qword_100E83C90);
  sub_1001FA78C(v1, (uint64_t)v10, a1);
  return sub_10017DF4C((uint64_t)v10, &qword_100E83C98);
}

uint64_t sub_1001FA78C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v76 = a2;
  uint64_t v78 = a3;
  uint64_t v70 = type metadata accessor for RoundedRectangle();
  __chkstk_darwin(v70);
  uint64_t v5 = (uint64_t *)((char *)&v69 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = type metadata accessor for LocationComponentCornerRadiusConfiguration(0);
  __chkstk_darwin(v6);
  uint64_t v8 = (uint64_t *)((char *)&v69 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = sub_10017DF08(&qword_100E83CB0);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v69 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v77 = sub_10017DF08(&qword_100E83CB8);
  uint64_t v12 = __chkstk_darwin(v77);
  uint64_t v71 = (char *)&v69 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v72 = (uint64_t)&v69 - v14;
  uint64_t v73 = sub_10017DF08(&qword_100E83CC0);
  __chkstk_darwin(v73);
  uint64_t v75 = (uint64_t)&v69 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v74 = sub_10017DF08(&qword_100E83CC8);
  __chkstk_darwin(v74);
  uint64_t v17 = (char *)&v69 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for LocationComponentHeaderMetrics(0);
  uint64_t v19 = v18 - 8;
  __chkstk_darwin(v18);
  uint64_t v21 = (char *)&v69 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = type metadata accessor for LocationComponentContainerBackgroundView(0);
  sub_1005D284C();
  uint64_t v23 = &v21[*(int *)(v19 + 36)];
  uint64_t v24 = *(void *)v23;
  char v25 = v23[8];
  sub_1001F75CC();
  if ((v25 & 1) != 0
    || (uint64_t v26 = a1 + *(int *)(v22 + 36),
        uint64_t v27 = *(void *)v26,
        char v28 = *(unsigned char *)(v26 + 8),
        sub_100195B7C(*(void *)v26, v28),
        sub_100149AE8(),
        char v30 = v29,
        sub_10018F6D8(v27, v28),
        (v30 & 1) == 0))
  {
    sub_1005D284C();
    uint64_t v46 = *v8;
    uint64_t v47 = (char *)v8 + *(int *)(v6 + 20);
    uint64_t v48 = (char *)v5 + *(int *)(v70 + 20);
    uint64_t v49 = type metadata accessor for RoundedCornerStyle();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v49 - 8) + 16))(v48, v47, v49);
    *uint64_t v5 = v46;
    v5[1] = v46;
    sub_1001F75CC();
    static Color.white.getter();
    uint64_t v50 = Color.opacity(_:)();
    swift_release();
    uint64_t v51 = a1 + *(int *)(v22 + 20);
    uint64_t v52 = *(void *)v51;
    char v53 = *(unsigned char *)(v51 + 8);
    sub_100195B7C(*(void *)v51, v53);
    sub_100201DE4();
    sub_10018F6D8(v52, v53);
    StrokeStyle.init(lineWidth:lineCap:lineJoin:miterLimit:dash:dashPhase:)();
    sub_1001EC0BC();
    uint64_t v54 = &v11[*(int *)(sub_10017DF08(&qword_100E7D380) + 36)];
    long long v55 = v84;
    *(_OWORD *)uint64_t v54 = v83;
    *((_OWORD *)v54 + 1) = v55;
    *((void *)v54 + 4) = v85;
    uint64_t v56 = sub_10017DF08(&qword_100E7D388);
    *(void *)&v11[*(int *)(v56 + 52)] = v50;
    *(_WORD *)&v11[*(int *)(v56 + 56)] = 256;
    uint64_t v57 = static Alignment.center.getter();
    uint64_t v59 = v58;
    uint64_t v60 = (uint64_t *)&v11[*(int *)(sub_10017DF08(&qword_100E7D390) + 36)];
    uint64_t *v60 = v57;
    v60[1] = v59;
    sub_1001F75CC();
    uint64_t v61 = static Alignment.center.getter();
    uint64_t v63 = v62;
    uint64_t v64 = (uint64_t)v71;
    uint64_t v65 = (uint64_t)&v71[*(int *)(v77 + 36)];
    sub_1005EFB58((uint64_t)v11, v65, &qword_100E83CB0);
    uint64_t v66 = (uint64_t *)(v65 + *(int *)(sub_10017DF08(&qword_100E83CD0) + 36));
    uint64_t *v66 = v61;
    v66[1] = v63;
    sub_1005EFB58(v76, v64, &qword_100E83C98);
    sub_10017DF4C((uint64_t)v11, &qword_100E83CB0);
    uint64_t v44 = &qword_100E83CB8;
    uint64_t v67 = v72;
    sub_10024D364(v64, v72, &qword_100E83CB8);
    sub_1005EFB58(v67, v75, &qword_100E83CB8);
    swift_storeEnumTagMultiPayload();
    sub_10020C890();
    sub_10020C93C();
    _ConditionalContent<>.init(storage:)();
    uint64_t v45 = v67;
  }
  else
  {
    uint64_t v31 = a1 + *(int *)(v22 + 20);
    uint64_t v32 = *(void *)v31;
    char v33 = *(unsigned char *)(v31 + 8);
    sub_100195B7C(*(void *)v31, v33);
    sub_100201DE4();
    uint64_t v35 = v34;
    sub_10018F6D8(v32, v33);
    uint64_t v36 = &v17[*(int *)(v74 + 36)];
    *((void *)v36 + 2) = swift_getKeyPath();
    v36[24] = 0;
    uint64_t v37 = type metadata accessor for BackgroundModifier(0);
    uint64_t v38 = (uint64_t *)&v36[*(int *)(v37 + 28)];
    uint64_t *v38 = swift_getKeyPath();
    sub_10017DF08(&qword_100E82BD8);
    swift_storeEnumTagMultiPayload();
    uint64_t v39 = &v36[*(int *)(v37 + 32)];
    long long v79 = 0u;
    long long v80 = 0u;
    long long v81 = xmmword_100C470D0;
    char v82 = 0;
    State.init(wrappedValue:)();
    char v40 = v86;
    uint64_t v41 = v87;
    long long v42 = v84;
    long long v43 = v85;
    *(_OWORD *)uint64_t v39 = v83;
    *((_OWORD *)v39 + 1) = v42;
    *((_OWORD *)v39 + 2) = v43;
    v39[48] = v40;
    *((void *)v39 + 7) = v41;
    *(void *)uint64_t v36 = v35;
    *((void *)v36 + 1) = v24;
    sub_1005EFB58(v76, (uint64_t)v17, &qword_100E83C98);
    uint64_t v44 = &qword_100E83CC8;
    sub_1005EFB58((uint64_t)v17, v75, &qword_100E83CC8);
    swift_storeEnumTagMultiPayload();
    sub_10020C890();
    sub_10020C93C();
    _ConditionalContent<>.init(storage:)();
    uint64_t v45 = (uint64_t)v17;
  }
  return sub_10017DF4C(v45, v44);
}

uint64_t type metadata accessor for LocationComponentContainerBackgroundView(uint64_t a1)
{
  return sub_10018678C(a1, (uint64_t *)&unk_100E82E50);
}

uint64_t sub_1001FAF68@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v32 = a2;
  uint64_t v3 = type metadata accessor for LocationComponentBackground(0);
  uint64_t v4 = (int *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = (int *)type metadata accessor for LocationComponentContainerBackgroundView(0);
  uint64_t v8 = a1 + v7[12];
  uint64_t v9 = type metadata accessor for Location.Identifier();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16))(v6, v8, v9);
  uint64_t v31 = a1;
  uint64_t v10 = a1 + v7[15];
  long long v30 = *(_OWORD *)v10;
  uint64_t v11 = *(void *)(v10 + 16);
  uint64_t v12 = *(void *)(v10 + 24);
  char v13 = *(unsigned char *)(v10 + 32);
  LOBYTE(a1) = *(unsigned char *)(a1 + v7[11]);
  uint64_t v14 = (uint64_t *)&v6[v4[7]];
  swift_retain();
  sub_10017DF08((uint64_t *)&unk_100EAAA90);
  sub_10024D5E4((uint64_t)&qword_100E64A08);
  *uint64_t v14 = ObservedObject.init(wrappedValue:)();
  v14[1] = v15;
  v6[v4[8]] = 0;
  uint64_t v16 = &v6[v4[9]];
  *(_OWORD *)uint64_t v16 = v30;
  *((void *)v16 + 2) = v11;
  *((void *)v16 + 3) = v12;
  v16[32] = v13;
  v6[v4[10]] = a1;
  uint64_t v17 = &v6[v4[11]];
  *(void *)uint64_t v17 = swift_getKeyPath();
  v17[8] = 0;
  uint64_t v18 = &v6[v4[12]];
  *(void *)uint64_t v18 = swift_getKeyPath();
  v18[8] = 0;
  uint64_t v19 = (uint64_t *)&v6[v4[13]];
  type metadata accessor for WeatherVFXConditionBackground();
  sub_10013509C((uint64_t)&qword_100E70F28);
  *uint64_t v19 = EnvironmentObject.init()();
  v19[1] = v20;
  uint64_t v21 = (uint64_t *)&v6[v4[14]];
  uint64_t *v21 = swift_getKeyPath();
  sub_10017DF08(&qword_100E78CE0);
  swift_storeEnumTagMultiPayload();
  uint64_t v22 = (uint64_t *)&v6[v4[15]];
  *uint64_t v22 = swift_getKeyPath();
  sub_10017DF08(&qword_100E82BD8);
  swift_storeEnumTagMultiPayload();
  uint64_t v23 = static Alignment.center.getter();
  uint64_t v25 = v24;
  uint64_t v26 = sub_10017DF08(&qword_100E83D20);
  uint64_t v27 = v32 + *(int *)(v26 + 36);
  sub_1001FB258(v31, v27);
  char v28 = (uint64_t *)(v27 + *(int *)(sub_10017DF08(&qword_100E83D28) + 36));
  *char v28 = v23;
  v28[1] = v25;
  return sub_1005D8BD8();
}

uint64_t sub_1001FB258@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for RoundedRectangle();
  uint64_t v5 = v4 - 8;
  __chkstk_darwin(v4);
  uint64_t v7 = (uint64_t *)((char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = type metadata accessor for LocationComponentCornerRadiusConfiguration(0);
  uint64_t v9 = v8 - 8;
  __chkstk_darwin(v8);
  uint64_t v11 = (uint64_t *)((char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = sub_10017DF08(&qword_100E802C8);
  uint64_t v13 = v12 - 8;
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for LocationComponentContainerBackgroundView(0);
  sub_1005D284C();
  uint64_t v17 = *v11;
  uint64_t v18 = (char *)v11 + *(int *)(v9 + 28);
  uint64_t v19 = (char *)v7 + *(int *)(v5 + 28);
  uint64_t v20 = type metadata accessor for RoundedCornerStyle();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16))(v19, v18, v20);
  *uint64_t v7 = v17;
  v7[1] = v17;
  sub_1001F75CC();
  static Color.black.getter();
  uint64_t v21 = a1 + *(int *)(v16 + 24);
  uint64_t v22 = *(void *)v21;
  LOBYTE(a1) = *(unsigned char *)(v21 + 8);
  sub_100195B7C(*(void *)v21, a1);
  sub_100149AE8();
  sub_10018F6D8(v22, a1);
  uint64_t v23 = Color.opacity(_:)();
  swift_release();
  sub_1001EC0BC();
  *(void *)&v15[*(int *)(v13 + 60)] = v23;
  *(_WORD *)&v15[*(int *)(v13 + 64)] = 256;
  sub_1001F75CC();
  return sub_10024D364((uint64_t)v15, a2, &qword_100E802C8);
}

uint64_t sub_1001FB510@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v33 = a2;
  uint64_t v32 = type metadata accessor for LocationComponentHeaderMetrics(0) - 8;
  __chkstk_darwin(v32);
  v31[1] = (char *)v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for LocationComponentContainerBackgroundPaddingModifier(0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (void *)((char *)v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = sub_10017DF08(&qword_100E83D30);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (void *)((char *)v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = sub_10017DF08(&qword_100E83D38);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_10017DF08(&qword_100E83D40);
  uint64_t v14 = v13 - 8;
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_10017DF08(&qword_100E83D48);
  uint64_t v18 = v17 - 8;
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v21 = (char *)v31 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v23 = (char *)v31 - v22;
  *uint64_t v9 = static Alignment.top.getter();
  v9[1] = v24;
  uint64_t v25 = sub_10017DF08(&qword_100E83D50);
  sub_1001FB938(a1, (uint64_t)v9 + *(int *)(v25 + 44));
  *uint64_t v6 = swift_getKeyPath();
  sub_10017DF08(&qword_100E829F0);
  swift_storeEnumTagMultiPayload();
  sub_1005D8BD8();
  sub_10024D364((uint64_t)v9, (uint64_t)v12, &qword_100E83D30);
  type metadata accessor for LocationComponentContainerBackgroundView(0);
  sub_1005D284C();
  sub_1001F75CC();
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  sub_1005EFB58((uint64_t)v12, (uint64_t)v16, &qword_100E83D38);
  uint64_t v26 = &v16[*(int *)(v14 + 44)];
  long long v27 = v35;
  *(_OWORD *)uint64_t v26 = v34;
  *((_OWORD *)v26 + 1) = v27;
  *((_OWORD *)v26 + 2) = v36;
  sub_10017DF4C((uint64_t)v12, &qword_100E83D38);
  sub_1005EFB58((uint64_t)v16, (uint64_t)v21, &qword_100E83D40);
  v21[*(int *)(v18 + 44)] = 1;
  sub_10017DF4C((uint64_t)v16, &qword_100E83D40);
  sub_10024D364((uint64_t)v21, (uint64_t)v23, &qword_100E83D48);
  sub_1005EFB58((uint64_t)v23, (uint64_t)v21, &qword_100E83D48);
  uint64_t v28 = v33;
  sub_1005EFB58((uint64_t)v21, v33, &qword_100E83D48);
  uint64_t v29 = v28 + *(int *)(sub_10017DF08(&qword_100E83D58) + 48);
  *(void *)uint64_t v29 = 0;
  *(unsigned char *)(v29 + 8) = 1;
  sub_10017DF4C((uint64_t)v23, &qword_100E83D48);
  return sub_10017DF4C((uint64_t)v21, &qword_100E83D48);
}

uint64_t sub_1001FB938@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v139 = a2;
  uint64_t v3 = sub_10017DF08(&qword_100E83D60);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  uint64_t v138 = (uint64_t)&v111 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v137 = (char *)&v111 - v6;
  uint64_t v136 = sub_10017DF08(&qword_100E83D68);
  uint64_t v7 = __chkstk_darwin(v136);
  uint64_t v122 = (uint64_t)&v111 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v124 = (uint64_t)&v111 - v9;
  uint64_t v134 = sub_10017DF08(&qword_100E83D70);
  __chkstk_darwin(v134);
  uint64_t v135 = (uint64_t)&v111 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for LocationComponentCornerRadiusConfiguration(0);
  __chkstk_darwin(v11 - 8);
  uint64_t v123 = (char *)&v111 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t KeyPath = type metadata accessor for LocationComponentViewModel();
  uint64_t v13 = __chkstk_darwin(KeyPath);
  uint64_t v114 = (char *)&v111 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v113 = (char *)&v111 - v15;
  uint64_t v112 = type metadata accessor for LocationComponentHeaderViewModel(0);
  uint64_t v16 = __chkstk_darwin(v112);
  uint64_t v111 = (long long *)((char *)&v111 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v111 - v19;
  __chkstk_darwin(v18);
  uint64_t v22 = (char *)&v111 - v21;
  uint64_t v23 = type metadata accessor for LocationComponentHeaderMetrics(0);
  uint64_t v24 = __chkstk_darwin(v23);
  uint64_t v131 = (char *)&v111 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = __chkstk_darwin(v24);
  uint64_t v28 = (char *)&v111 - v27;
  uint64_t v29 = __chkstk_darwin(v26);
  unint64_t v117 = (unint64_t)&v111 - v30;
  __chkstk_darwin(v29);
  uint64_t v32 = (char *)&v111 - v31;
  uint64_t v33 = type metadata accessor for LocationComponentHeaderView(0);
  uint64_t v34 = __chkstk_darwin(v33 - 8);
  uint64_t v127 = (uint64_t)&v111 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v34);
  uint64_t v126 = (uint64_t)&v111 - v36;
  uint64_t v129 = sub_10017DF08(&qword_100E83D78);
  uint64_t v37 = __chkstk_darwin(v129);
  uint64_t v116 = (char *)&v111 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v37);
  uint64_t v120 = (uint64_t)&v111 - v39;
  uint64_t v115 = sub_10017DF08(&qword_100E83D80);
  __chkstk_darwin(v115);
  uint64_t v119 = (char *)&v111 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v130 = sub_10017DF08(&qword_100E83D88);
  uint64_t v41 = __chkstk_darwin(v130);
  uint64_t v118 = (uint64_t)&v111 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v41);
  uint64_t v121 = (uint64_t)&v111 - v43;
  uint64_t v44 = sub_10017DF08(&qword_100E83D90);
  uint64_t v45 = __chkstk_darwin(v44 - 8);
  uint64_t v133 = (uint64_t)&v111 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v45);
  uint64_t v132 = (char *)&v111 - v47;
  uint64_t v48 = type metadata accessor for LocationComponentContainerBackgroundView(0);
  uint64_t v49 = a1 + *(int *)(v48 + 36);
  uint64_t v50 = *(void *)v49;
  uint64_t v125 = v49;
  char v51 = *(unsigned char *)(v49 + 8);
  sub_100195B7C(v50, v51);
  sub_100149AE8();
  char v53 = v52;
  sub_10018F6D8(v50, v51);
  uint64_t v140 = v48;
  uint64_t v141 = a1;
  if (v53)
  {
    sub_1005D284C();
    if (v32[*(int *)(v23 + 32)] == 1) {
      sub_100365A38();
    }
    else {
      sub_1001EC0BC();
    }
    sub_1001F75CC();
    sub_1001FD9D0((uint64_t)v22, v126);
    sub_1001EC0BC();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    sub_1001F75CC();
    if (EnumCaseMultiPayload == 7)
    {
      uint64_t KeyPath = swift_getKeyPath();
      sub_1005D284C();
      sub_1001F75CC();
      static Alignment.center.getter();
      _FrameLayout.init(width:height:alignment:)();
      uint64_t v127 = v142;
      uint64_t v124 = v143;
      uint64_t v122 = v144;
      unint64_t v117 = v145;
      long long v55 = v146;
      uint64_t v56 = v147;
      uint64_t v57 = (uint64_t *)v123;
      sub_1005D284C();
      uint64_t v58 = *v57;
      sub_1001F75CC();
      uint64_t v59 = 0;
      __int16 v60 = 256;
      uint64_t v61 = 3;
    }
    else
    {
      uint64_t KeyPath = 0;
      uint64_t v127 = 0;
      uint64_t v124 = 0;
      uint64_t v122 = 0;
      unint64_t v117 = 0;
      long long v55 = 0;
      uint64_t v56 = 0;
      uint64_t v58 = 0;
      uint64_t v61 = 0;
      __int16 v60 = 0;
      uint64_t v59 = 255;
    }
    uint64_t v70 = static Alignment.center.getter();
    uint64_t v72 = v71;
    uint64_t v73 = v120;
    sub_1001EC0BC();
    uint64_t v74 = v73 + *(int *)(v129 + 36);
    *(void *)uint64_t v74 = KeyPath;
    *(void *)(v74 + 8) = v59;
    uint64_t v75 = v124;
    *(void *)(v74 + 16) = v127;
    *(void *)(v74 + 24) = v75;
    uint64_t v76 = (char *)v117;
    *(void *)(v74 + 32) = v122;
    *(void *)(v74 + 40) = v76;
    *(void *)(v74 + 48) = v55;
    *(void *)(v74 + 56) = v56;
    *(void *)(v74 + 64) = v58;
    *(void *)(v74 + 72) = v61;
    *(_WORD *)(v74 + 80) = v60;
    *(void *)(v74 + 88) = v70;
    *(void *)(v74 + 96) = v72;
    sub_1001F75CC();
    uint64_t v77 = (uint64_t)v119;
    uint64_t v78 = (uint64_t *)&v119[*(int *)(v115 + 36)];
    *uint64_t v78 = swift_getKeyPath();
    sub_10017DF08(&qword_100E829F0);
    swift_storeEnumTagMultiPayload();
    uint64_t v79 = type metadata accessor for HeaderModifier(0);
    long long v80 = (char *)v78 + *(int *)(v79 + 20);
    *(void *)long long v80 = swift_getKeyPath();
    v80[8] = 0;
    long long v81 = (char *)v78 + *(int *)(v79 + 24);
    long long v149 = xmmword_100C33200;
    LOBYTE(v150) = 0;
    State.init(wrappedValue:)();
    char v82 = v154;
    uint64_t v83 = *((void *)&v154 + 1);
    *(_OWORD *)long long v81 = v153;
    v81[16] = v82;
    *((void *)v81 + 3) = v83;
    sub_10024D364(v73, v77, &qword_100E83D78);
    uint64_t v84 = v118;
    sub_1005EFB58(v77, v118, &qword_100E83D80);
    *(void *)(v84 + *(int *)(v130 + 36)) = 0x3FF0000000000000;
    sub_10017DF4C(v77, &qword_100E83D80);
    uint64_t v85 = v121;
    sub_10024D364(v84, v121, &qword_100E83D88);
    sub_1005EFB58(v85, v135, &qword_100E83D88);
    swift_storeEnumTagMultiPayload();
    sub_10020CB94();
    sub_10020CCB0();
    uint64_t v62 = (uint64_t)v132;
    _ConditionalContent<>.init(storage:)();
    sub_10017DF4C(v85, &qword_100E83D88);
  }
  else
  {
    sub_1005D284C();
    if (v28[*(int *)(v23 + 32)] == 1) {
      sub_100365A38();
    }
    else {
      sub_1001EC0BC();
    }
    uint64_t v62 = (uint64_t)v132;
    sub_1001F75CC();
    sub_1001FD9D0((uint64_t)v20, v127);
    sub_1001EC0BC();
    int v63 = swift_getEnumCaseMultiPayload();
    sub_1001F75CC();
    if (v63 == 7)
    {
      uint64_t v132 = (char *)swift_getKeyPath();
      sub_1005D284C();
      sub_1001F75CC();
      static Alignment.center.getter();
      _FrameLayout.init(width:height:alignment:)();
      uint64_t KeyPath = v142;
      uint64_t v126 = v143;
      uint64_t v121 = v144;
      uint64_t v120 = v145;
      uint64_t v119 = v146;
      uint64_t v64 = v147;
      uint64_t v65 = (uint64_t *)v123;
      sub_1005D284C();
      uint64_t v66 = *v65;
      sub_1001F75CC();
      uint64_t v67 = 0;
      __int16 v68 = 256;
      uint64_t v69 = 3;
    }
    else
    {
      uint64_t v132 = 0;
      uint64_t KeyPath = 0;
      uint64_t v126 = 0;
      uint64_t v121 = 0;
      uint64_t v120 = 0;
      uint64_t v119 = 0;
      uint64_t v64 = 0;
      uint64_t v66 = 0;
      uint64_t v69 = 0;
      __int16 v68 = 0;
      uint64_t v67 = 255;
    }
    uint64_t v86 = static Alignment.center.getter();
    uint64_t v88 = v87;
    uint64_t v89 = (uint64_t)v116;
    sub_1001EC0BC();
    uint64_t v90 = v89 + *(int *)(v129 + 36);
    *(void *)uint64_t v90 = v132;
    *(void *)(v90 + 8) = v67;
    uint64_t v91 = v126;
    *(void *)(v90 + 16) = KeyPath;
    *(void *)(v90 + 24) = v91;
    uint64_t v92 = v120;
    *(void *)(v90 + 32) = v121;
    *(void *)(v90 + 40) = v92;
    *(void *)(v90 + 48) = v119;
    *(void *)(v90 + 56) = v64;
    *(void *)(v90 + 64) = v66;
    *(void *)(v90 + 72) = v69;
    *(_WORD *)(v90 + 80) = v68;
    *(void *)(v90 + 88) = v86;
    *(void *)(v90 + 96) = v88;
    sub_1001F75CC();
    uint64_t v93 = v122;
    sub_1005EFB58(v89, v122, &qword_100E83D78);
    *(void *)(v93 + *(int *)(v136 + 36)) = 0x3FF0000000000000;
    sub_10017DF4C(v89, &qword_100E83D78);
    uint64_t v94 = v124;
    sub_10024D364(v93, v124, &qword_100E83D68);
    sub_1005EFB58(v94, v135, &qword_100E83D68);
    swift_storeEnumTagMultiPayload();
    sub_10020CB94();
    sub_10020CCB0();
    _ConditionalContent<>.init(storage:)();
    sub_10017DF4C(v94, &qword_100E83D68);
  }
  sub_1005D284C();
  sub_1001FCB84();
  sub_1001F75CC();
  sub_10024D364((uint64_t)&v148, (uint64_t)&v149, &qword_100E7B050);
  uint64_t v95 = (uint64_t)v137;
  if (!*((void *)&v149 + 1)) {
    goto LABEL_20;
  }
  long long v153 = v149;
  long long v154 = v150;
  long long v155 = v151;
  uint64_t v156 = v152;
  uint64_t v96 = *(void *)v125;
  char v97 = *(unsigned char *)(v125 + 8);
  sub_100195B7C(*(void *)v125, v97);
  sub_100149AE8();
  char v99 = v98;
  sub_10018F6D8(v96, v97);
  if ((v99 & 1) == 0)
  {
    sub_1005EAC58(&v148);
LABEL_20:
    uint64_t v105 = sub_10017DF08(&qword_100E83DD8);
    uint64_t v103 = v95;
    uint64_t v104 = 1;
    goto LABEL_21;
  }
  long long v100 = v154;
  uint64_t v101 = (uint64_t)v111;
  long long *v111 = v153;
  *(_OWORD *)(v101 + 16) = v100;
  *(_OWORD *)(v101 + 32) = v155;
  *(void *)(v101 + 48) = v156;
  swift_storeEnumTagMultiPayload();
  sub_1001FD9D0(v101, v95);
  uint64_t v102 = sub_10017DF08(&qword_100E83DD8);
  sub_10001EEB8(v95 + *(int *)(v102 + 36));
  uint64_t v103 = v95;
  uint64_t v104 = 0;
  uint64_t v105 = v102;
LABEL_21:
  _s7Weather24LocationCompositionStateOwst_0(v103, v104, 1, v105);
  uint64_t v106 = v133;
  sub_1005EFB58(v62, v133, &qword_100E83D90);
  uint64_t v107 = v138;
  sub_1005EFB58(v95, v138, &qword_100E83D60);
  uint64_t v108 = v139;
  sub_1005EFB58(v106, v139, &qword_100E83D90);
  uint64_t v109 = sub_10017DF08(&qword_100E83DE0);
  sub_1005EFB58(v107, v108 + *(int *)(v109 + 48), &qword_100E83D60);
  sub_10017DF4C(v95, &qword_100E83D60);
  sub_10017DF4C(v62, &qword_100E83D90);
  sub_10017DF4C(v107, &qword_100E83D60);
  return sub_10017DF4C(v106, &qword_100E83D90);
}

__n128 initializeWithTake for ExternalSearchQuery(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t type metadata accessor for HeaderModifier(uint64_t a1)
{
  return sub_10018678C(a1, qword_100E841F0);
}

void sub_1001FCB84()
{
  sub_100162EA0();
  uint64_t v2 = v0;
  uint64_t v4 = v3;
  uint64_t v5 = type metadata accessor for LocationComponentHeaderViewModel.Description(0);
  sub_100162E4C();
  __chkstk_darwin(v6);
  sub_1001626E0();
  uint64_t v9 = v8 - v7;
  type metadata accessor for LocationComponentHeaderViewModel(0);
  sub_100162E4C();
  __chkstk_darwin(v10);
  sub_10012B938();
  sub_1001FD718(v2, (uint64_t)v1);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v11 = v1[4];
      uint64_t v12 = v1[5];
      uint64_t v13 = v1[6];
      uint64_t v14 = v1[7];
      unsigned int v15 = *((unsigned __int8 *)v1 + 64);
      uint64_t v16 = v1[9];
      uint64_t v17 = v1[10];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      break;
    case 2u:
      memcpy(v19, v1, 0x79uLL);
      uint64_t v11 = v19[8];
      uint64_t v12 = v19[9];
      uint64_t v13 = v19[10];
      uint64_t v14 = v19[11];
      unsigned int v15 = LOBYTE(v19[12]);
      uint64_t v16 = v19[13];
      uint64_t v17 = v19[14];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_100366BB0((uint64_t)v19);
      break;
    case 3u:
      sub_1001FD77C((uint64_t)v1, v9);
      uint64_t v18 = v9 + *(int *)(v5 + 20);
      uint64_t v11 = *(void *)v18;
      uint64_t v12 = *(void *)(v18 + 8);
      uint64_t v13 = *(void *)(v18 + 16);
      uint64_t v14 = *(void *)(v18 + 24);
      unsigned int v15 = *(unsigned __int8 *)(v18 + 32);
      uint64_t v16 = *(void *)(v18 + 40);
      uint64_t v17 = *(void *)(v18 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_10020044C(v9, (void (*)(void))type metadata accessor for LocationComponentHeaderViewModel.Description);
      break;
    case 4u:
      uint64_t v11 = *v1;
      uint64_t v12 = v1[1];
      uint64_t v13 = v1[2];
      uint64_t v14 = v1[3];
      unsigned int v15 = *((unsigned __int8 *)v1 + 32);
      uint64_t v16 = v1[5];
      uint64_t v17 = v1[6];
      break;
    case 5u:
      memcpy(v19, v1, sizeof(v19));
      uint64_t v11 = v19[9];
      uint64_t v12 = v19[10];
      uint64_t v13 = v19[11];
      uint64_t v14 = v19[12];
      unsigned int v15 = LOBYTE(v19[13]);
      uint64_t v16 = v19[14];
      uint64_t v17 = v19[15];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_100366ABC((uint64_t)v19);
      break;
    default:
      sub_10020044C((uint64_t)v1, (void (*)(void))type metadata accessor for LocationComponentHeaderViewModel);
      uint64_t v11 = 0;
      uint64_t v12 = 0;
      uint64_t v13 = 0;
      uint64_t v14 = 0;
      unsigned int v15 = 0;
      uint64_t v16 = 0;
      uint64_t v17 = 0;
      break;
  }
  *uint64_t v4 = v11;
  v4[1] = v12;
  v4[2] = v13;
  v4[3] = v14;
  v4[4] = v15;
  v4[5] = v16;
  v4[6] = v17;
  sub_100162694();
}

uint64_t *sub_1001FCDFC(uint64_t a1, char a2, uint64_t a3, char a4)
{
  uint64_t v7 = type metadata accessor for LocationComponentHeaderViewModel.Description(0);
  uint64_t v8 = sub_100109308(v7);
  __chkstk_darwin(v8);
  sub_1001626E0();
  uint64_t v11 = v10 - v9;
  type metadata accessor for Font.Leading();
  sub_100179C0C();
  __chkstk_darwin(v12);
  sub_100109314();
  uint64_t v13 = type metadata accessor for LocalizedStringKey.StringInterpolation();
  uint64_t v14 = sub_100109308(v13);
  __chkstk_darwin(v14);
  sub_100109314();
  uint64_t v72 = v15;
  uint64_t v16 = type metadata accessor for LayoutDirection();
  sub_100179C0C();
  uint64_t v71 = v17;
  __chkstk_darwin(v18);
  sub_1001626E0();
  uint64_t v21 = v20 - v19;
  uint64_t v22 = type metadata accessor for Font.TextStyle();
  sub_100179C0C();
  uint64_t v75 = v23;
  __chkstk_darwin(v24);
  sub_1001626E0();
  uint64_t v27 = v26 - v25;
  uint64_t v28 = type metadata accessor for TypesettingLanguageAwareLineHeightRatio();
  sub_100179C0C();
  uint64_t v74 = v29;
  __chkstk_darwin(v30);
  uint64_t v31 = sub_100152344();
  uint64_t v32 = type metadata accessor for LocationComponentHeaderViewModel(v31);
  __chkstk_darwin(v32);
  sub_100162EB8();
  sub_1001FD718(a1, (uint64_t)v4);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v39 = *v4;
      uint64_t v38 = (void *)v4[1];
      uint64_t v40 = v4[3];
      if ((a2 & 1) == 0)
      {
        sub_1001649D0();
        v58();
        static Font.Weight.bold.getter();
        static Font.system(_:weight:)();
        (*(void (**)(uint64_t, uint64_t))(v75 + 8))(v27, v22);
        if (v40) {
          goto LABEL_6;
        }
LABEL_16:
        __dst[0] = v39;
        __dst[1] = v38;
        sub_10014A85C();
        swift_bridgeObjectRetain();
        uint64_t v59 = Text.init<A>(_:)();
        uint64_t v61 = v60;
        uint64_t v4 = v62;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_retain();
        Text.font(_:)();
        sub_1001D2368();
        sub_100191924(v59, v61, v4 & 1);
        swift_release();
        goto LABEL_19;
      }
      static Font.headline.getter();
      if (!v40) {
        goto LABEL_16;
      }
LABEL_6:
      sub_1001649D0();
      v41();
      swift_bridgeObjectRetain();
      char v42 = static LayoutDirection.== infix(_:_:)();
      (*(void (**)(uint64_t, uint64_t))(v71 + 8))(v21, v16);
      uint64_t v4 = v72;
      LocalizedStringKey.StringInterpolation.init(literalCapacity:interpolationCount:)();
      sub_10019DD00();
      if (v42)
      {
        v43._countAndFlagsBits = v39;
        v43._object = v38;
        LocalizedStringKey.StringInterpolation.appendInterpolation(_:)(v43);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v44._countAndFlagsBits = 41154;
        v44._object = (void *)0xA200000000000000;
        LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v44);
        Image.init(systemName:)();
        LocalizedStringKey.StringInterpolation.appendInterpolation(_:)();
        swift_release();
      }
      else
      {
        Image.init(systemName:)();
        LocalizedStringKey.StringInterpolation.appendInterpolation(_:)();
        swift_release();
        v63._countAndFlagsBits = 41154;
        v63._object = (void *)0xA200000000000000;
        LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v63);
        v64._countAndFlagsBits = v39;
        v64._object = v38;
        LocalizedStringKey.StringInterpolation.appendInterpolation(_:)(v64);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      sub_10019DD00();
      LocalizedStringKey.init(stringInterpolation:)();
      uint64_t v65 = sub_10017DCAC();
      uint64_t v67 = v66;
      char v69 = v68 & 1;
      swift_retain();
      Text.font(_:)();
      sub_1001D2368();
      sub_100191924(v65, v67, v69);
      swift_release();
LABEL_19:
      swift_bridgeObjectRelease();
      return v4;
    case 2u:
      memcpy(__dst, v4, 0x79uLL);
      sub_10014A85C();
      swift_bridgeObjectRetain();
      Text.init<A>(_:)();
      uint64_t v45 = sub_100184314();
      sub_100366BB0(v45);
      sub_1001649D0();
      v46();
      static Font.Weight.bold.getter();
      uint64_t v4 = (uint64_t *)static Font.system(_:weight:)();
      (*(void (**)(uint64_t, uint64_t))(v75 + 8))(v27, v22);
      sub_10017B144();
      uint64_t v48 = *(void *)(v47 - 256);
      sub_1001649D0();
      v49();
      Font.leading(_:)();
      swift_release();
      (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v16, v48);
      goto LABEL_12;
    case 3u:
      sub_1001FD77C((uint64_t)v4, v11);
      sub_1001FD7E0(v11, a2 & 1, a4 & 1);
      sub_1001A0350();
      sub_1001FD8EC(v11);
      return v4;
    case 4u:
      uint64_t v4 = (uint64_t *)v4[6];
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      LocalizedStringKey.init(stringLiteral:)();
      sub_10017DCAC();
      sub_1001A0350();
      return v4;
    case 5u:
      memcpy(__dst, v4, sizeof(__dst));
      sub_10014A85C();
      swift_bridgeObjectRetain();
      Text.init<A>(_:)();
      uint64_t v50 = sub_100184314();
      sub_100366ABC(v50);
      static Font.title3.getter();
      static Font.Weight.bold.getter();
      Font.weight(_:)();
      swift_release();
      sub_10017B144();
      uint64_t v4 = *(uint64_t **)(v51 - 256);
      sub_1001649D0();
      v52();
      Font.leading(_:)();
      swift_release();
      (*(void (**)(uint64_t, uint64_t *))(v27 + 8))(v16, v4);
LABEL_12:
      Text.font(_:)();
      sub_100181CB0();
      swift_release();
      sub_100191924(v5, v28, v21);
      goto LABEL_19;
    default:
      uint64_t v33 = v4[1];
      __dst[0] = *v4;
      __dst[1] = v33;
      sub_10014A85C();
      swift_bridgeObjectRetain();
      uint64_t v4 = (uint64_t *)Text.init<A>(_:)();
      uint64_t v35 = v34;
      char v37 = v36;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (a2) {
        static Font.caption.getter();
      }
      else {
        static Font.footnote.getter();
      }
      static Font.Weight.medium.getter();
      Font.weight(_:)();
      swift_release();
      Text.font(_:)();
      uint64_t v54 = v53;
      char v56 = v55;
      swift_release();
      sub_100191924((uint64_t)v4, v35, v37 & 1);
      swift_bridgeObjectRelease();
      static TypesettingLanguageAwareLineHeightRatio.disable.getter();
      Text.typesettingLanguageAwareLineHeightRatio(_:isEnabled:)();
      uint64_t v57 = sub_100181CB0();
      sub_100191924(v57, v54, v56 & 1);
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v74 + 8))(v5, v28);
      return v4;
  }
}

uint64_t sub_1001FD718(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for LocationComponentHeaderViewModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001FD77C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for LocationComponentHeaderViewModel.Description(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001FD7E0(uint64_t a1, char a2, char a3)
{
  uint64_t v5 = type metadata accessor for AttributedString();
  uint64_t v6 = sub_100109308(v5);
  __chkstk_darwin(v6);
  sub_100162E88();
  if (a2) {
    static Font.footnote.getter();
  }
  else {
    static Font.subheadline.getter();
  }
  uint64_t v7 = self;
  uint64_t v8 = &selRef_whiteColor;
  if ((a3 & 1) == 0) {
    uint64_t v8 = &selRef_labelColor;
  }
  id v9 = [v7 *v8];
  WeatherDescription.formatted(font:color:)();

  uint64_t v10 = Text.init(_:)();
  swift_release();

  return v10;
}

uint64_t sub_1001FD8EC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for LocationComponentHeaderViewModel.Description(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1001FD948(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for WeatherDescription();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1001FD9D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = type metadata accessor for Font.TextStyle();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v5 = (int *)type metadata accessor for LocationComponentHeaderView(0);
  uint64_t KeyPath = swift_getKeyPath();
  sub_100186030(KeyPath);
  uint64_t v7 = (uint64_t *)(a2 + v5[6]);
  *uint64_t v7 = swift_getKeyPath();
  sub_10017DF08(&qword_100E62CB8);
  sub_100189764();
  uint64_t v8 = (uint64_t *)(a2 + v5[7]);
  uint64_t *v8 = swift_getKeyPath();
  sub_10017DF08(&qword_100E63BC8);
  sub_100189764();
  uint64_t v9 = swift_getKeyPath();
  sub_100186030(v9);
  uint64_t v10 = swift_getKeyPath();
  sub_100186030(v10);
  uint64_t v11 = swift_getKeyPath();
  sub_100186030(v11);
  uint64_t v12 = (uint64_t *)(a2 + v5[11]);
  *uint64_t v12 = swift_getKeyPath();
  sub_10017DF08(&qword_100E66E50);
  sub_100189764();
  uint64_t v13 = a2 + v5[12];
  *(void *)uint64_t v13 = swift_getKeyPath();
  *(_WORD *)(v13 + 8) = 0;
  uint64_t v14 = *(void (**)(uint64_t))(v4 + 104);
  uint64_t v15 = sub_1001A301C();
  v14(v15);
  sub_100146A70();
  ScaledMetric.init(wrappedValue:relativeTo:)();
  uint64_t v16 = sub_1001A301C();
  v14(v16);
  ScaledMetric.init(wrappedValue:relativeTo:)();
  return sub_1001FDC9C(a1, a2, (void (*)(void))type metadata accessor for LocationComponentHeaderViewModel);
}

uint64_t sub_1001FDC3C(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(a2, a1);
  return a2;
}

uint64_t sub_1001FDC9C(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  uint64_t v4 = sub_100126010();
  v5(v4);
  return a2;
}

uint64_t sub_1001FDCF0@<X0>(uint64_t a1@<X8>)
{
  *(void *)a1 = static VerticalAlignment.center.getter();
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 1;
  uint64_t v3 = sub_10017DF08(&qword_100EB8110);
  return sub_1001FDD3C(v1, a1 + *(int *)(v3 + 44));
}

uint64_t sub_1001FDD3C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v128 = a2;
  uint64_t v115 = sub_10017DF08(&qword_100EB8118);
  __chkstk_darwin(v115);
  uint64_t v104 = (uint64_t *)((char *)&v94 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v112 = sub_10017DF08(&qword_100EB8120);
  __chkstk_darwin(v112);
  uint64_t v113 = (uint64_t *)((char *)&v94 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v127 = sub_10017DF08(&qword_100EB8128);
  __chkstk_darwin(v127);
  uint64_t v118 = (char *)&v94 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10017DF08(&qword_100EB8130);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v101 = (uint64_t)&v94 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  long long v100 = (uint64_t *)((char *)&v94 - v9);
  uint64_t v116 = sub_10017DF08(&qword_100EB8138);
  __chkstk_darwin(v116);
  uint64_t v103 = (uint64_t)&v94 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v111 = sub_10017DF08(&qword_100EB8140);
  __chkstk_darwin(v111);
  uint64_t v114 = (uint64_t)&v94 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v123 = sub_10017DF08(&qword_100EB8148);
  __chkstk_darwin(v123);
  unint64_t v117 = (char *)&v94 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_10017DF08(&qword_100EB8150);
  uint64_t v14 = __chkstk_darwin(v13 - 8);
  uint64_t v98 = (uint64_t)&v94 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  char v97 = (uint64_t *)((char *)&v94 - v16);
  uint64_t v110 = sub_10017DF08(&qword_100EB8158);
  __chkstk_darwin(v110);
  uint64_t v102 = (uint64_t)&v94 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_10017DF08(&qword_100EB8160);
  uint64_t v19 = __chkstk_darwin(v18 - 8);
  uint64_t v96 = (uint64_t)&v94 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v95 = (uint64_t *)((char *)&v94 - v21);
  uint64_t v109 = sub_10017DF08(&qword_100EB8168);
  __chkstk_darwin(v109);
  uint64_t v99 = (uint64_t)&v94 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v124 = sub_10017DF08(&qword_100EB8170);
  __chkstk_darwin(v124);
  uint64_t v126 = (uint64_t)&v94 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v119 = sub_10017DF08(&qword_100EB8178);
  __chkstk_darwin(v119);
  uint64_t v121 = (uint64_t)&v94 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v106 = sub_10017DF08(&qword_100EB8180);
  __chkstk_darwin(v106);
  uint64_t v107 = (uint64_t)&v94 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v120 = sub_10017DF08(&qword_100EB8188);
  __chkstk_darwin(v120);
  uint64_t v108 = (char *)&v94 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v125 = sub_10017DF08(&qword_100EB8190);
  __chkstk_darwin(v125);
  uint64_t v122 = (char *)&v94 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v105 = sub_10017DF08(&qword_100EB8198);
  __chkstk_darwin(v105);
  uint64_t v94 = (uint64_t)&v94 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = type metadata accessor for LocationComponentHeaderViewModel(0);
  __chkstk_darwin(v29);
  uint64_t v31 = (_OWORD *)((char *)&v94 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v32 = type metadata accessor for LayoutDirection();
  uint64_t v33 = *(void *)(v32 - 8);
  __chkstk_darwin(v32);
  uint64_t v35 = (char *)&v94 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = type metadata accessor for LocationComponentHeaderView(0);
  uint64_t v37 = a1 + *(int *)(v36 + 20);
  uint64_t v38 = *(void *)v37;
  char v39 = *(unsigned char *)(v37 + 8);
  sub_100195B7C(*(void *)v37, v39);
  sub_100149AE8();
  char v41 = v40;
  sub_10018F6D8(v38, v39);
  sub_1001FF23C();
  uint64_t v42 = a1 + *(int *)(v36 + 40);
  uint64_t v43 = *(void *)v42;
  char v44 = *(unsigned char *)(v42 + 8);
  sub_100195B7C(*(void *)v42, v44);
  sub_100149AE8();
  LOBYTE(v36) = v45;
  sub_10018F6D8(v43, v44);
  uint64_t v46 = sub_1001FCDFC(a1, v41 & 1, (uint64_t)v35, v36 & 1);
  uint64_t v48 = v47;
  char v50 = v49;
  uint64_t v52 = v51;
  (*(void (**)(char *, uint64_t))(v33 + 8))(v35, v32);
  sub_1001FFC10(a1, (uint64_t)v31, (void (*)(void))type metadata accessor for LocationComponentHeaderViewModel);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      memcpy(__dst, v31, 0x59uLL);
      uint64_t v60 = static HorizontalAlignment.center.getter();
      uint64_t v61 = (uint64_t)v95;
      uint64_t *v95 = v60;
      *(void *)(v61 + 8) = 0;
      *(unsigned char *)(v61 + 16) = 1;
      uint64_t v62 = sub_10017DF08(&qword_100EB8210);
      char v63 = v50 & 1;
      sub_100BE5654((uint64_t)__dst, (uint64_t)v46, v48, v63, v52, a1, v61 + *(int *)(v62 + 44));
      uint64_t v64 = v96;
      sub_10006DF38(v61, v96, &qword_100EB8160);
      uint64_t v65 = v99;
      sub_10006DF38(v64, v99, &qword_100EB8160);
      uint64_t v66 = v65 + *(int *)(sub_10017DF08(&qword_100EB8218) + 48);
      *(void *)uint64_t v66 = 0;
      *(unsigned char *)(v66 + 8) = 0;
      sub_10017DF4C(v61, &qword_100EB8160);
      sub_10017DF4C(v64, &qword_100EB8160);
      sub_100366C3C((uint64_t)__dst);
      sub_10006DF38(v65, v107, &qword_100EB8168);
      swift_storeEnumTagMultiPayload();
      sub_10024D5E4((uint64_t)&unk_100EB81C0);
      sub_10024D5E4((uint64_t)&unk_100EB81C8);
      uint64_t v67 = (uint64_t)v108;
      _ConditionalContent<>.init(storage:)();
      sub_10006DF38(v67, v121, &qword_100EB8188);
      swift_storeEnumTagMultiPayload();
      sub_10020C660();
      sub_10020C5A0();
      uint64_t v68 = (uint64_t)v122;
      _ConditionalContent<>.init(storage:)();
      sub_10017DF4C(v67, &qword_100EB8188);
      sub_10006DF38(v68, v126, &qword_100EB8190);
      swift_storeEnumTagMultiPayload();
      sub_10020C524();
      sub_100BEBA90();
      _ConditionalContent<>.init(storage:)();
      sub_100191924((uint64_t)v46, v48, v63);
      swift_bridgeObjectRelease();
      sub_10017DF4C(v68, &qword_100EB8190);
      uint64_t v59 = v65;
      char v69 = &qword_100EB8168;
      return sub_10017DF4C(v59, v69);
    case 2u:
      memcpy(__dst, v31, 0x79uLL);
      uint64_t v70 = static HorizontalAlignment.leading.getter();
      uint64_t v71 = (uint64_t)v97;
      *char v97 = v70;
      *(void *)(v71 + 8) = 0;
      *(unsigned char *)(v71 + 16) = 0;
      uint64_t v72 = v71 + *(int *)(sub_10017DF08(&qword_100EB8200) + 44);
      LODWORD(v118) = v50 & 1;
      sub_100BE5F3C((uint64_t)v46, v48, v50 & 1, v52, a1, v72);
      uint64_t v73 = v98;
      sub_10006DF38(v71, v98, &qword_100EB8150);
      uint64_t v74 = v102;
      sub_10006DF38(v73, v102, &qword_100EB8150);
      uint64_t v75 = v74 + *(int *)(sub_10017DF08(&qword_100EB8208) + 48);
      *(void *)uint64_t v75 = 0;
      *(unsigned char *)(v75 + 8) = 0;
      sub_10017DF4C(v71, &qword_100EB8150);
      sub_10017DF4C(v73, &qword_100EB8150);
      sub_100366BB0((uint64_t)__dst);
      char v56 = &qword_100EB8158;
      sub_10006DF38(v74, v114, &qword_100EB8158);
      swift_storeEnumTagMultiPayload();
      sub_10024D5E4((uint64_t)&unk_100EB81D8);
      sub_10024D5E4((uint64_t)&unk_100EB81E0);
      uint64_t v76 = (uint64_t)v117;
      _ConditionalContent<>.init(storage:)();
      sub_10006DF38(v76, v121, &qword_100EB8148);
      swift_storeEnumTagMultiPayload();
      sub_10020C660();
      sub_10020C5A0();
      uint64_t v77 = (uint64_t)v122;
      _ConditionalContent<>.init(storage:)();
      sub_10017DF4C(v76, &qword_100EB8148);
      sub_10006DF38(v77, v126, &qword_100EB8190);
      swift_storeEnumTagMultiPayload();
      sub_10020C524();
      sub_100BEBA90();
      _ConditionalContent<>.init(storage:)();
      sub_100191924((uint64_t)v46, v48, (char)v118);
      swift_bridgeObjectRelease();
      sub_10017DF4C(v77, &qword_100EB8190);
      uint64_t v59 = v74;
      goto LABEL_8;
    case 3u:
      uint64_t v78 = static HorizontalAlignment.leading.getter();
      uint64_t v79 = (uint64_t)v100;
      *long long v100 = v78;
      *(void *)(v79 + 8) = 0;
      *(unsigned char *)(v79 + 16) = 0;
      uint64_t v80 = v79 + *(int *)(sub_10017DF08(&qword_100EB81F0) + 44);
      LODWORD(v118) = v50 & 1;
      sub_100064E38((uint64_t)v46, v48, (int)v118, v52, a1, v80);
      uint64_t v81 = v101;
      sub_10006DF38(v79, v101, &qword_100EB8130);
      uint64_t v82 = v103;
      sub_10006DF38(v81, v103, &qword_100EB8130);
      uint64_t v83 = v82 + *(int *)(sub_10017DF08(&qword_100EB81F8) + 48);
      *(void *)uint64_t v83 = 0;
      *(unsigned char *)(v83 + 8) = 0;
      sub_10017DF4C(v79, &qword_100EB8130);
      sub_10017DF4C(v81, &qword_100EB8130);
      sub_10006DF38(v82, v114, &qword_100EB8138);
      swift_storeEnumTagMultiPayload();
      sub_10024D5E4((uint64_t)&unk_100EB81D8);
      sub_10024D5E4((uint64_t)&unk_100EB81E0);
      uint64_t v84 = (uint64_t)v117;
      _ConditionalContent<>.init(storage:)();
      sub_10006DF38(v84, v121, &qword_100EB8148);
      swift_storeEnumTagMultiPayload();
      sub_10020C660();
      sub_10020C5A0();
      uint64_t v85 = (uint64_t)v122;
      _ConditionalContent<>.init(storage:)();
      sub_10017DF4C(v84, &qword_100EB8148);
      sub_10006DF38(v85, v126, &qword_100EB8190);
      swift_storeEnumTagMultiPayload();
      sub_10020C524();
      sub_100BEBA90();
      _ConditionalContent<>.init(storage:)();
      sub_100191924((uint64_t)v46, v48, (char)v118);
      swift_bridgeObjectRelease();
      sub_10017DF4C(v85, &qword_100EB8190);
      sub_10017DF4C(v82, &qword_100EB8138);
      return sub_1002004FC((uint64_t)v31, (void (*)(void))type metadata accessor for LocationComponentHeaderViewModel);
    case 4u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v87 = v113;
      *uint64_t v113 = 0;
      *((unsigned char *)v87 + 8) = 1;
      swift_storeEnumTagMultiPayload();
      sub_10024D5E4((uint64_t)&unk_100EB81A8);
      uint64_t v88 = (uint64_t)v118;
      _ConditionalContent<>.init(storage:)();
      sub_10006DF38(v88, v126, &qword_100EB8128);
      swift_storeEnumTagMultiPayload();
      sub_10020C524();
      sub_100BEBA90();
      _ConditionalContent<>.init(storage:)();
      sub_100191924((uint64_t)v46, v48, v50 & 1);
      swift_bridgeObjectRelease();
      uint64_t v59 = v88;
      char v69 = &qword_100EB8128;
      return sub_10017DF4C(v59, v69);
    case 5u:
      memcpy(__dst, v31, sizeof(__dst));
      uint64_t v89 = static VerticalAlignment.center.getter();
      uint64_t v90 = (uint64_t)v104;
      uint64_t *v104 = v89;
      *(void *)(v90 + 8) = 0;
      *(unsigned char *)(v90 + 16) = 0;
      uint64_t v91 = sub_10017DF08(&qword_100EB81A0);
      char v92 = v50 & 1;
      sub_100BE6B78(__dst, (uint64_t)v46, v48, v50 & 1, v52, a1, v90 + *(int *)(v91 + 44));
      sub_100BEBECC();
      char v56 = &qword_100EB8118;
      sub_10006DF38(v90, (uint64_t)v113, &qword_100EB8118);
      swift_storeEnumTagMultiPayload();
      sub_10024D5E4((uint64_t)&unk_100EB81A8);
      uint64_t v93 = (uint64_t)v118;
      _ConditionalContent<>.init(storage:)();
      sub_10006DF38(v93, v126, &qword_100EB8128);
      swift_storeEnumTagMultiPayload();
      sub_10020C524();
      sub_100BEBA90();
      _ConditionalContent<>.init(storage:)();
      sub_100191924((uint64_t)v46, v48, v92);
      swift_bridgeObjectRelease();
      sub_10017DF4C(v93, &qword_100EB8128);
      uint64_t v59 = v90;
      goto LABEL_8;
    default:
      long long v53 = v31[1];
      __dst[0] = *v31;
      __dst[1] = v53;
      __dst[2] = v31[2];
      *(void *)&__dst[3] = *((void *)v31 + 6);
      LODWORD(v118) = v50 & 1;
      uint64_t v54 = v52;
      uint64_t v55 = v94;
      sub_1001FF2C8((uint64_t)v46, v48, (int)v118, v54, (uint64_t)__dst, v94);
      sub_1001FF27C((uint64_t)__dst);
      char v56 = &qword_100EB8198;
      sub_10006DF38(v55, v107, &qword_100EB8198);
      swift_storeEnumTagMultiPayload();
      sub_10024D5E4((uint64_t)&unk_100EB81C0);
      sub_10024D5E4((uint64_t)&unk_100EB81C8);
      uint64_t v57 = (uint64_t)v108;
      _ConditionalContent<>.init(storage:)();
      sub_10006DF38(v57, v121, &qword_100EB8188);
      swift_storeEnumTagMultiPayload();
      sub_10020C660();
      sub_10020C5A0();
      uint64_t v58 = (uint64_t)v122;
      _ConditionalContent<>.init(storage:)();
      sub_10017DF4C(v57, &qword_100EB8188);
      sub_10006DF38(v58, v126, &qword_100EB8190);
      swift_storeEnumTagMultiPayload();
      sub_10020C524();
      sub_100BEBA90();
      _ConditionalContent<>.init(storage:)();
      sub_100191924((uint64_t)v46, v48, (char)v118);
      swift_bridgeObjectRelease();
      sub_10017DF4C(v58, &qword_100EB8190);
      uint64_t v59 = v55;
LABEL_8:
      char v69 = v56;
      return sub_10017DF4C(v59, v69);
  }
}

void sub_1001FF23C()
{
}

uint64_t sub_1001FF27C(uint64_t a1)
{
  return a1;
}

uint64_t sub_1001FF2C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v79 = a5;
  uint64_t v80 = a2;
  int v77 = a3;
  uint64_t v78 = a1;
  uint64_t v95 = a6;
  uint64_t v8 = type metadata accessor for BlendMode();
  uint64_t v92 = *(void *)(v8 - 8);
  uint64_t v93 = v8;
  __chkstk_darwin(v8);
  uint64_t v91 = (char *)&v76 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v96 = (int *)type metadata accessor for LocationComponentHeaderView(0);
  uint64_t v10 = __chkstk_darwin(v96);
  uint64_t v94 = (uint64_t)&v76 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v76 = (char *)&v76 - v12;
  uint64_t v83 = type metadata accessor for ColorSchemeContrast();
  uint64_t v13 = *(void *)(v83 - 8);
  uint64_t v14 = __chkstk_darwin(v83);
  uint64_t v82 = (char *)&v76 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v81 = (char *)&v76 - v16;
  uint64_t v17 = sub_10017DF08(&qword_100E65370);
  uint64_t v18 = v17 - 8;
  __chkstk_darwin(v17);
  uint64_t v20 = (uint64_t *)((char *)&v76 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v21 = sub_10017DF08(&qword_100E65378);
  __chkstk_darwin(v21 - 8);
  uint64_t v23 = (char *)&v76 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_10017DF08(&qword_100EB8220);
  uint64_t v25 = v24 - 8;
  __chkstk_darwin(v24);
  uint64_t v27 = (char *)&v76 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v84 = sub_10017DF08(&qword_100EB8228);
  __chkstk_darwin(v84);
  uint64_t v85 = (uint64_t)&v76 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v89 = sub_10017DF08(&qword_100EB8230);
  __chkstk_darwin(v89);
  uint64_t v87 = (char *)&v76 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_10017DF08(&qword_100EB8238);
  uint64_t v31 = __chkstk_darwin(v30 - 8);
  uint64_t v90 = (uint64_t)&v76 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = __chkstk_darwin(v31);
  uint64_t v86 = (char *)&v76 - v34;
  __chkstk_darwin(v33);
  uint64_t v88 = (uint64_t)&v76 - v35;
  uint64_t v36 = static VerticalAlignment.center.getter();
  sub_10020054C(v6, v78, v80, v77 & 1, a4, (uint64_t)v97);
  v98[216] = 0;
  memcpy(&v98[7], v97, 0xD1uLL);
  v99[0] = v36;
  v99[1] = 0;
  LOBYTE(v99[2]) = 0;
  memcpy((char *)&v99[2] + 1, v98, 0xD8uLL);
  uint64_t v37 = enum case for Text.Case.uppercase(_:);
  uint64_t v38 = type metadata accessor for Text.Case();
  uint64_t v39 = v37;
  uint64_t v40 = (uint64_t)v76;
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v38 - 8) + 104))(v23, v39, v38);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v23, 0, 1, v38);
  uint64_t KeyPath = swift_getKeyPath();
  sub_10006DF38((uint64_t)v23, (uint64_t)v20 + *(int *)(v18 + 36), &qword_100E65378);
  uint64_t *v20 = KeyPath;
  uint64_t v42 = *(int *)(v25 + 44);
  uint64_t v43 = v6;
  sub_10006DF38((uint64_t)v20, (uint64_t)&v27[v42], &qword_100E65370);
  memcpy(v27, v99, 0xE9uLL);
  sub_10020C000((uint64_t)v99);
  sub_10017DF4C((uint64_t)v20, &qword_100E65370);
  sub_10017DF4C((uint64_t)v23, &qword_100E65378);
  sub_10020BF68((uint64_t)v97);
  char v44 = v81;
  sub_10014BB38();
  uint64_t v46 = v82;
  uint64_t v45 = v83;
  (*(void (**)(char *, void, uint64_t))(v13 + 104))(v82, enum case for ColorSchemeContrast.increased(_:), v83);
  char v47 = static ColorSchemeContrast.== infix(_:_:)();
  uint64_t v48 = *(void (**)(char *, uint64_t))(v13 + 8);
  v48(v46, v45);
  v48(v44, v45);
  sub_1001FFC10(v43, v40, (void (*)(void))type metadata accessor for LocationComponentHeaderView);
  if (v47)
  {
    sub_1002004FC(v40, (void (*)(void))type metadata accessor for LocationComponentHeaderView);
LABEL_4:
    int v54 = static HierarchicalShapeStyle.primary.getter();
    goto LABEL_6;
  }
  uint64_t v49 = v40 + v96[10];
  uint64_t v50 = *(void *)v49;
  char v51 = *(unsigned char *)(v49 + 8);
  sub_100195B7C(*(void *)v49, v51);
  sub_100149AE8();
  char v53 = v52;
  sub_10018F6D8(v50, v51);
  sub_1002004FC(v40, (void (*)(void))type metadata accessor for LocationComponentHeaderView);
  if (v53) {
    goto LABEL_4;
  }
  int v54 = static HierarchicalShapeStyle.tertiary.getter();
LABEL_6:
  int v55 = v54;
  uint64_t v56 = v89;
  uint64_t v57 = (uint64_t)v87;
  uint64_t v58 = v85;
  sub_10006DF38((uint64_t)v27, v85, &qword_100EB8220);
  *(_DWORD *)(v58 + *(int *)(v84 + 36)) = v55;
  sub_10017DF4C((uint64_t)v27, &qword_100EB8220);
  uint64_t v60 = v91;
  uint64_t v59 = v92;
  uint64_t v61 = v93;
  (*(void (**)(char *, void, uint64_t))(v92 + 104))(v91, enum case for BlendMode.plusLighter(_:), v93);
  (*(void (**)(uint64_t, char *, uint64_t))(v59 + 16))(v57 + *(int *)(v56 + 36), v60, v61);
  sub_10006DF38(v58, v57, &qword_100EB8228);
  (*(void (**)(char *, uint64_t))(v59 + 8))(v60, v61);
  sub_10017DF4C(v58, &qword_100EB8228);
  uint64_t v62 = v43 + v96[8];
  uint64_t v63 = *(void *)v62;
  LOBYTE(v61) = *(unsigned char *)(v62 + 8);
  sub_100195B7C(*(void *)v62, v61);
  sub_100149AE8();
  LOBYTE(v59) = v64;
  sub_10018F6D8(v63, v61);
  uint64_t v65 = v43;
  uint64_t v66 = v94;
  sub_1001FFC10(v65, v94, (void (*)(void))type metadata accessor for LocationComponentHeaderView);
  if ((v59 & 1) == 0)
  {
    uint64_t v67 = v66 + v96[9];
    uint64_t v68 = *(void *)v67;
    char v69 = *(unsigned char *)(v67 + 8);
    sub_100195B7C(*(void *)v67, v69);
    sub_100149AE8();
    sub_10018F6D8(v68, v69);
  }
  sub_1002004FC(v66, (void (*)(void))type metadata accessor for LocationComponentHeaderView);
  sub_10020CA7C((uint64_t)&unk_100EB8240);
  uint64_t v70 = (uint64_t)v86;
  View.accessibilityHidden(_:)();
  sub_10017DF4C(v57, &qword_100EB8230);
  uint64_t v71 = v88;
  sub_10024D364(v70, v88, &qword_100EB8238);
  uint64_t v72 = v90;
  sub_10006DF38(v71, v90, &qword_100EB8238);
  uint64_t v73 = v95;
  sub_10006DF38(v72, v95, &qword_100EB8238);
  uint64_t v74 = v73 + *(int *)(sub_10017DF08(&qword_100EB8268) + 48);
  *(void *)uint64_t v74 = 0;
  *(unsigned char *)(v74 + 8) = 0;
  sub_10017DF4C(v71, &qword_100EB8238);
  return sub_10017DF4C(v72, &qword_100EB8238);
}

uint64_t sub_1001FFBB0(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(a2, a1);
  return a2;
}

uint64_t sub_1001FFC10(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  uint64_t v4 = sub_10011BFA4();
  v5(v4);
  return a2;
}

uint64_t type metadata accessor for LocationComponentHeaderView(uint64_t a1)
{
  return sub_10018678C(a1, qword_100EB80B0);
}

uint64_t sub_1001FFC84(uint64_t a1, uint64_t a2, int *a3)
{
  if (a1 != a2)
  {
    sub_1002004FC(a1, (void (*)(void))type metadata accessor for LocationComponentHeaderViewModel);
    type metadata accessor for LocationComponentHeaderViewModel(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        *(void *)(a1 + 24) = *(void *)(a2 + 24);
        *(void *)(a1 + 32) = *(void *)(a2 + 32);
        *(void *)(a1 + 40) = *(void *)(a2 + 40);
        *(void *)(a1 + 48) = *(void *)(a2 + 48);
        *(void *)(a1 + 56) = *(void *)(a2 + 56);
        *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
        *(void *)(a1 + 72) = *(void *)(a2 + 72);
        *(void *)(a1 + 80) = *(void *)(a2 + 80);
        *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        break;
      case 2u:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        *(void *)(a1 + 24) = *(void *)(a2 + 24);
        *(void *)(a1 + 32) = *(void *)(a2 + 32);
        *(void *)(a1 + 40) = *(void *)(a2 + 40);
        *(void *)(a1 + 48) = *(void *)(a2 + 48);
        *(void *)(a1 + 56) = *(void *)(a2 + 56);
        *(void *)(a1 + 64) = *(void *)(a2 + 64);
        *(void *)(a1 + 72) = *(void *)(a2 + 72);
        *(void *)(a1 + 80) = *(void *)(a2 + 80);
        *(void *)(a1 + 88) = *(void *)(a2 + 88);
        *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
        *(void *)(a1 + 104) = *(void *)(a2 + 104);
        *(void *)(a1 + 112) = *(void *)(a2 + 112);
        *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        break;
      case 3u:
        uint64_t v6 = type metadata accessor for WeatherDescription();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
        uint64_t v7 = type metadata accessor for LocationComponentHeaderViewModel.Description(0);
        uint64_t v8 = *(int *)(v7 + 20);
        uint64_t v9 = a1 + v8;
        *(void *)uint64_t v9 = *(void *)(a2 + v8);
        *(void *)(v9 + 8) = *(void *)(a2 + v8 + 8);
        *(void *)(v9 + 16) = *(void *)(a2 + v8 + 16);
        *(void *)(v9 + 24) = *(void *)(a2 + v8 + 24);
        *(unsigned char *)(v9 + 32) = *(unsigned char *)(a2 + v8 + 32);
        *(void *)(v9 + 40) = *(void *)(a2 + v8 + 40);
        *(void *)(v9 + 48) = *(void *)(a2 + v8 + 48);
        *(unsigned char *)(a1 + *(int *)(v7 + 24)) = *(unsigned char *)(a2 + *(int *)(v7 + 24));
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        break;
      case 5u:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        *(void *)(a1 + 24) = *(void *)(a2 + 24);
        *(void *)(a1 + 32) = *(void *)(a2 + 32);
        *(void *)(a1 + 40) = *(void *)(a2 + 40);
        *(void *)(a1 + 48) = *(void *)(a2 + 48);
        *(void *)(a1 + 56) = *(void *)(a2 + 56);
        *(void *)(a1 + 64) = *(void *)(a2 + 64);
        *(void *)(a1 + 72) = *(void *)(a2 + 72);
        *(void *)(a1 + 80) = *(void *)(a2 + 80);
        *(void *)(a1 + 88) = *(void *)(a2 + 88);
        *(void *)(a1 + 96) = *(void *)(a2 + 96);
        *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
        *(void *)(a1 + 112) = *(void *)(a2 + 112);
        *(void *)(a1 + 120) = *(void *)(a2 + 120);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        break;
      default:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        *(void *)(a1 + 24) = *(void *)(a2 + 24);
        *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
        *(void *)(a1 + 40) = *(void *)(a2 + 40);
        *(void *)(a1 + 48) = *(void *)(a2 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v10 = a3[5];
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  uint64_t v13 = *(void *)v12;
  char v14 = *(unsigned char *)(v12 + 8);
  sub_100195B7C(*(void *)v12, v14);
  uint64_t v15 = *(void *)v11;
  char v16 = *(unsigned char *)(v11 + 8);
  *(void *)uint64_t v11 = v13;
  *(unsigned char *)(v11 + 8) = v14;
  sub_10018F6D8(v15, v16);
  if (a1 != a2)
  {
    uint64_t v17 = a3[6];
    uint64_t v18 = (void *)(a1 + v17);
    uint64_t v19 = (void *)(a2 + v17);
    sub_10017DF4C(a1 + v17, &qword_100E62CB8);
    sub_10017DF08(&qword_100E62CB8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v20 = type metadata accessor for LayoutDirection();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
    }
    else
    {
      *uint64_t v18 = *v19;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v21 = a3[7];
    uint64_t v22 = (void *)(a1 + v21);
    uint64_t v23 = (void *)(a2 + v21);
    sub_10017DF4C(a1 + v21, &qword_100E63BC8);
    sub_10017DF08(&qword_100E63BC8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v24 = type metadata accessor for ContentSizeCategory();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v24 - 8) + 16))(v22, v23, v24);
    }
    else
    {
      *uint64_t v22 = *v23;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v25 = a3[8];
  uint64_t v26 = a1 + v25;
  uint64_t v27 = a2 + v25;
  uint64_t v28 = *(void *)v27;
  char v29 = *(unsigned char *)(v27 + 8);
  sub_100195B7C(*(void *)v27, v29);
  uint64_t v30 = *(void *)v26;
  char v31 = *(unsigned char *)(v26 + 8);
  *(void *)uint64_t v26 = v28;
  *(unsigned char *)(v26 + 8) = v29;
  sub_10018F6D8(v30, v31);
  uint64_t v32 = a3[9];
  uint64_t v33 = a1 + v32;
  uint64_t v34 = a2 + v32;
  uint64_t v35 = *(void *)v34;
  char v36 = *(unsigned char *)(v34 + 8);
  sub_100195B7C(*(void *)v34, v36);
  uint64_t v37 = *(void *)v33;
  char v38 = *(unsigned char *)(v33 + 8);
  *(void *)uint64_t v33 = v35;
  *(unsigned char *)(v33 + 8) = v36;
  sub_10018F6D8(v37, v38);
  uint64_t v39 = a3[10];
  uint64_t v40 = a1 + v39;
  uint64_t v41 = a2 + v39;
  uint64_t v42 = *(void *)v41;
  char v43 = *(unsigned char *)(v41 + 8);
  sub_100195B7C(*(void *)v41, v43);
  uint64_t v44 = *(void *)v40;
  char v45 = *(unsigned char *)(v40 + 8);
  *(void *)uint64_t v40 = v42;
  *(unsigned char *)(v40 + 8) = v43;
  sub_10018F6D8(v44, v45);
  if (a1 != a2)
  {
    uint64_t v46 = a3[11];
    char v47 = (void *)(a1 + v46);
    uint64_t v48 = (void *)(a2 + v46);
    sub_10017DF4C(a1 + v46, &qword_100E66E50);
    sub_10017DF08(&qword_100E66E50);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v49 = type metadata accessor for ColorSchemeContrast();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v49 - 8) + 16))(v47, v48, v49);
    }
    else
    {
      void *v47 = *v48;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v50 = a3[12];
  uint64_t v51 = a1 + v50;
  uint64_t v52 = a2 + v50;
  uint64_t v53 = *(void *)v52;
  char v54 = *(unsigned char *)(v52 + 9);
  unsigned __int8 v55 = *(unsigned char *)(v52 + 8);
  sub_100193DD4(*(void *)v52, v55, v54);
  uint64_t v56 = *(void *)v51;
  char v57 = *(unsigned char *)(v51 + 9);
  *(void *)uint64_t v51 = v53;
  uint64_t v58 = *(unsigned __int8 *)(v51 + 8);
  *(unsigned char *)(v51 + 8) = v55;
  *(unsigned char *)(v51 + 9) = v54;
  sub_10014D838(v56, v58, v57);
  uint64_t v59 = a3[13];
  uint64_t v60 = a1 + v59;
  uint64_t v61 = a2 + v59;
  uint64_t v62 = sub_10017DF08(&qword_100E63BE8);
  uint64_t v63 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v62 - 8) + 24);
  v63(v60, v61, v62);
  v63(a1 + a3[14], a2 + a3[14], v62);
  return a1;
}

uint64_t sub_10020044C(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_1002004A4(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_1002004FC(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100179DC0();
  sub_100162F0C();
  v3();
  return a1;
}

uint64_t sub_10020054C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, char a4@<W4>, uint64_t a5@<X5>, uint64_t a6@<X8>)
{
  swift_bridgeObjectRetain();
  uint64_t v36 = Image.init(_internalSystemName:)();
  uint64_t v9 = a1 + *(int *)(type metadata accessor for LocationComponentHeaderView(0) + 20);
  uint64_t v10 = *(void *)v9;
  char v11 = *(unsigned char *)(v9 + 8);
  sub_100195B7C(*(void *)v9, v11);
  sub_100149AE8();
  char v13 = v12;
  sub_10018F6D8(v10, v11);
  if (v13) {
    static Font.caption.getter();
  }
  else {
    static Font.footnote.getter();
  }
  static Font.Weight.medium.getter();
  uint64_t v35 = Font.weight(_:)();
  swift_release();
  uint64_t KeyPath = swift_getKeyPath();
  sub_100195B7C(v10, v11);
  sub_100149AE8();
  sub_10018F6D8(v10, v11);
  sub_10017DF08(&qword_100E63BE8);
  ScaledMetric.wrappedValue.getter();
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  char v33 = static Edge.Set.leading.getter();
  sub_100195B7C(v10, v11);
  sub_100149AE8();
  char v15 = v14;
  sub_10018F6D8(v10, v11);
  if ((v15 & 1) == 0)
  {
    if (qword_100E62248 == -1) {
      goto LABEL_8;
    }
    goto LABEL_16;
  }
  if (qword_100E62240 != -1) {
LABEL_16:
  }
    swift_once();
LABEL_8:
  EdgeInsets.init(_all:)();
  uint64_t v17 = v16;
  uint64_t v19 = v18;
  uint64_t v21 = v20;
  uint64_t v23 = v22;
  uint64_t v24 = swift_getKeyPath();
  uint64_t v25 = swift_getKeyPath();
  uint64_t v26 = *(void *)v9;
  char v27 = *(unsigned char *)(v9 + 8);
  sub_100190CC4(a2, a3, a4 & 1);
  swift_bridgeObjectRetain();
  sub_100195B7C(v26, v27);
  sub_100149AE8();
  char v29 = v28;
  sub_10018F6D8(v26, v27);
  if (v29)
  {
    if (qword_100E62240 != -1) {
      swift_once();
    }
    uint64_t v30 = &qword_100F51340;
  }
  else
  {
    if (qword_100E62248 != -1) {
      swift_once();
    }
    uint64_t v30 = &qword_100F51348;
  }
  uint64_t v31 = *v30;
  *(void *)a6 = v36;
  *(void *)(a6 + 8) = KeyPath;
  *(void *)(a6 + 16) = v35;
  *(void *)(a6 + 24) = v40;
  *(unsigned char *)(a6 + 32) = v41;
  *(void *)(a6 + 40) = v42;
  *(unsigned char *)(a6 + 48) = v43;
  *(void *)(a6 + 56) = v44;
  *(void *)(a6 + 64) = v45;
  *(unsigned char *)(a6 + 72) = v33;
  *(void *)(a6 + 80) = v17;
  *(void *)(a6 + 88) = v19;
  *(void *)(a6 + 96) = v21;
  *(void *)(a6 + 104) = v23;
  *(unsigned char *)(a6 + 112) = 0;
  *(void *)(a6 + 120) = a2;
  *(void *)(a6 + 128) = a3;
  *(unsigned char *)(a6 + 136) = a4 & 1;
  *(void *)(a6 + 144) = a5;
  *(void *)(a6 + 152) = v24;
  *(void *)(a6 + 160) = 1;
  *(unsigned char *)(a6 + 168) = 0;
  *(void *)(a6 + 176) = v25;
  *(void *)(a6 + 184) = 0x3FE0000000000000;
  *(_WORD *)(a6 + 192) = 256;
  *(void *)(a6 + 200) = v31;
  *(unsigned char *)(a6 + 208) = 0;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_100190CC4(a2, a3, a4 & 1);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  sub_100191924(a2, a3, a4 & 1);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1002009C4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v256 = a1;
  uint64_t v255 = type metadata accessor for OpacityTransition();
  sub_100179C0C();
  uint64_t v254 = v2;
  __chkstk_darwin(v3);
  sub_100162EF8();
  uint64_t v252 = v4;
  __chkstk_darwin(v5);
  uint64_t v7 = sub_100109328((uint64_t)&v213 - v6);
  uint64_t v250 = type metadata accessor for AutomationInfo(v7);
  sub_100162E4C();
  __chkstk_darwin(v8);
  sub_100109314();
  uint64_t v10 = sub_100109328(v9);
  uint64_t v242 = type metadata accessor for TranslationModifier(v10);
  sub_100162E4C();
  __chkstk_darwin(v11);
  sub_100109314();
  sub_100109328(v12);
  uint64_t v233 = type metadata accessor for AccessibilityChildBehavior();
  sub_100179C0C();
  uint64_t v232 = v13;
  __chkstk_darwin(v14);
  sub_100109314();
  sub_100109338(v15);
  uint64_t v16 = sub_10017DF08(&qword_100E63D08);
  uint64_t v17 = sub_100109308(v16);
  __chkstk_darwin(v17);
  sub_100109314();
  sub_100109338(v18);
  uint64_t v229 = sub_10017DF08(&qword_100E63D10);
  sub_100162E4C();
  __chkstk_darwin(v19);
  sub_100109314();
  sub_100109338(v20);
  uint64_t v231 = sub_10017DF08(&qword_100E63D18);
  sub_100179C0C();
  uint64_t v230 = v21;
  __chkstk_darwin(v22);
  sub_100109314();
  sub_100109338(v23);
  uint64_t v234 = sub_10017DF08(&qword_100E63D20);
  sub_100162E4C();
  __chkstk_darwin(v24);
  sub_100162EF8();
  uint64_t v261 = v25;
  __chkstk_darwin(v26);
  sub_100109338((uint64_t)&v213 - v27);
  uint64_t v235 = sub_10017DF08(&qword_100E63D28);
  sub_100162E4C();
  __chkstk_darwin(v28);
  sub_100109314();
  sub_100109338(v29);
  uint64_t v237 = sub_10017DF08(&qword_100E63D30);
  sub_100162E4C();
  __chkstk_darwin(v30);
  sub_100109314();
  sub_100109338(v31);
  uint64_t v238 = sub_10017DF08(&qword_100E63D38);
  sub_100162E4C();
  __chkstk_darwin(v32);
  sub_100109314();
  sub_100109338(v33);
  uint64_t v34 = sub_10017DF08(&qword_100E63D40);
  uint64_t v35 = sub_100109308(v34);
  __chkstk_darwin(v35);
  sub_100109314();
  sub_100109338(v36);
  uint64_t v239 = sub_10017DF08(&qword_100E63D48);
  sub_100162E4C();
  __chkstk_darwin(v37);
  sub_100109314();
  sub_100109338(v38);
  uint64_t v244 = sub_10017DF08(&qword_100E63D50);
  sub_100162E4C();
  __chkstk_darwin(v39);
  sub_100109314();
  sub_100109338(v40);
  uint64_t v243 = sub_10017DF08(&qword_100E63D58);
  sub_100162E4C();
  __chkstk_darwin(v41);
  sub_100109314();
  sub_100109338(v42);
  uint64_t v247 = sub_10017DF08(&qword_100E63D60);
  sub_100162E4C();
  __chkstk_darwin(v43);
  sub_100109314();
  sub_100109328(v44);
  uint64_t v259 = type metadata accessor for Text.Measurements();
  sub_100179C0C();
  uint64_t v227 = v45;
  __chkstk_darwin(v46);
  sub_100109314();
  sub_100109328(v47);
  uint64_t v48 = type metadata accessor for DisplayMetrics();
  uint64_t v49 = sub_100109308(v48);
  __chkstk_darwin(v49);
  sub_100109314();
  uint64_t v51 = sub_100109328(v50);
  uint64_t v52 = type metadata accessor for LocationHeaderViewMeasurements(v51);
  uint64_t v53 = sub_100109308(v52);
  __chkstk_darwin(v53);
  sub_100109314();
  uint64_t v55 = sub_100109328(v54);
  uint64_t v56 = (int *)type metadata accessor for LocationHeaderView(v55);
  char v57 = (void *)(v1 + v56[16]);
  uint64_t v58 = v57[10];
  *(void *)&long long v277 = v57[9];
  *((void *)&v277 + 1) = v58;
  unint64_t v59 = sub_10014A85C();
  swift_bridgeObjectRetain();
  uint64_t v60 = Text.init<A>(_:)();
  uint64_t v62 = v61;
  char v64 = v63 & 1;
  sub_1002077A4((void (*)(void))&static Font.Weight.thin.getter);
  uint64_t v271 = Text.font(_:)();
  uint64_t v270 = v65;
  int v260 = v66;
  uint64_t v272 = v67;
  swift_release();
  sub_100191924(v60, v62, v64);
  swift_bridgeObjectRelease();
  uint64_t v69 = v57[7];
  uint64_t v68 = v57[8];
  uint64_t v263 = v57;
  *(void *)&long long v277 = v69;
  *((void *)&v277 + 1) = v68;
  swift_bridgeObjectRetain();
  unint64_t v224 = v59;
  uint64_t v70 = Text.init<A>(_:)();
  uint64_t v72 = v71;
  char v74 = v73 & 1;
  sub_100207A5C();
  uint64_t v268 = Text.font(_:)();
  uint64_t v267 = v75;
  int v77 = v76;
  uint64_t v269 = v78;
  swift_release();
  sub_100191924(v70, v72, v74);
  swift_bridgeObjectRelease();
  uint64_t v265 = sub_100201F30();
  uint64_t v264 = v79;
  int v81 = v80;
  uint64_t v266 = v82;
  sub_1001EFFBC();
  (*(void (**)(void, uint64_t, uint64_t))(v227 + 16))(v258, v1 + v56[21], v259);
  uint64_t v83 = *(void *)(v1 + v56[18]);
  static Font.largeTitle.getter();
  uint64_t v219 = Text.font(_:)();
  uint64_t v222 = v84;
  HIDWORD(v220) = v85;
  uint64_t v221 = v86;
  swift_release();
  uint64_t v259 = (uint64_t)v56;
  uint64_t v87 = (uint64_t *)(v1 + v56[19]);
  uint64_t v88 = *v87;
  uint64_t v89 = v87[1];
  uint64_t v90 = v87[2];
  uint64_t v91 = v87[3];
  uint64_t v223 = v1;
  if (v91)
  {
    uint64_t v83 = sub_10020632C();
    LOBYTE(v277) = v90 & 1;
    uint64_t v218 = Text.font(_:)();
    uint64_t v217 = v92;
    char v94 = v93;
    uint64_t v216 = v95;
    swift_release();
    uint64_t v215 = v94 & 1;
  }
  else
  {
    uint64_t v216 = 0;
    uint64_t v218 = v88;
    uint64_t v217 = v89;
    uint64_t v215 = v90;
  }
  swift_bridgeObjectRetain();
  uint64_t v96 = v269;
  swift_bridgeObjectRetain();
  uint64_t v97 = v266;
  swift_bridgeObjectRetain();
  unsigned __int8 v98 = v260 & 1;
  uint64_t v99 = v270;
  LODWORD(v214) = v260 & 1;
  sub_100190CC4(v271, v270, v260 & 1);
  LODWORD(v227) = v77;
  unsigned __int8 v100 = v77 & 1;
  uint64_t v101 = v268;
  sub_1001848EC();
  HIDWORD(v214) = v77 & 1;
  sub_100190CC4(v102, v103, v77 & 1);
  int v225 = v81;
  char v104 = v81 & 1;
  uint64_t v105 = v265;
  uint64_t v106 = v264;
  sub_100190CC4(v265, v264, v104);
  unsigned __int8 v211 = v100;
  uint64_t v107 = v83;
  unsigned __int8 v210 = v98;
  uint64_t v108 = v271;
  sub_100202370(v257, v258, v219, v222, BYTE4(v220) & 1, v221, v218, v217, v262, v215, v216, v271, v99, v210, v272, v101, v83, v211, v96,
    v105,
    v106,
    v104,
    v97);
  uint64_t v109 = static VerticalAlignment.center.getter();
  uint64_t v110 = (uint64_t)v226;
  *uint64_t v226 = v109;
  *(void *)(v110 + 8) = 0;
  *(unsigned char *)(v110 + 16) = 1;
  uint64_t v111 = sub_10017DF08(&qword_100E63D68);
  uint64_t v212 = v106;
  uint64_t v112 = v223;
  sub_100202814(v223, v108, v99, v214, v272, v101, v107, SHIDWORD(v214), v110 + *(int *)(v111 + 44), v96, v105, v212, v104, v97);
  LOBYTE(v108) = sub_10014CAF4();
  type metadata accessor for LocationHeaderViewFrameCoordinator(0);
  *(void *)&long long v258 = sub_1000E7420((uint64_t)&unk_100E63D70);
  uint64_t v113 = Environment.init<A>(_:)();
  char v115 = v114;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v117 = v228;
  sub_10006DF38(v110, v228, &qword_100E63D08);
  uint64_t v118 = v229;
  uint64_t v119 = v117 + *(int *)(v229 + 36);
  *(unsigned char *)uint64_t v119 = v108 & 1;
  *(void *)(v119 + 8) = v113;
  *(unsigned char *)(v119 + 16) = v115 & 1;
  *(void *)(v119 + 24) = KeyPath;
  *(void *)(v119 + 32) = 0;
  *(void *)(v119 + 40) = 0;
  *(void *)(v119 + 48) = 0;
  *(unsigned char *)(v119 + 56) = 0;
  sub_100178110(v110, &qword_100E63D08);
  static AccessibilityChildBehavior.combine.getter();
  unint64_t v120 = sub_10024BC28();
  View.accessibilityElement(children:)();
  sub_100162F0C();
  v121();
  sub_100178110(v117, &qword_100E63D10);
  sub_100189CC8();
  uint64_t v123 = v112 + v122;
  uint64_t v124 = *(void *)v123;
  char v125 = *(unsigned char *)(v123 + 8);
  sub_100195B7C(*(void *)v123, v125);
  sub_100149AE8();
  sub_10018F6D8(v124, v125);
  *(void *)&long long v277 = v118;
  *((void *)&v277 + 1) = v120;
  swift_getOpaqueTypeConformance2();
  View.accessibilityRespondsToUserInteraction(_:)();
  sub_100162F0C();
  v126();
  sub_10017DF08(&qword_100E63D90);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100C25ED0;
  uint64_t v128 = v263;
  uint64_t v130 = *v263;
  uint64_t v129 = v263[1];
  *(void *)(inited + 32) = *v263;
  *(void *)(inited + 40) = v129;
  int v131 = *((unsigned __int8 *)v128 + 48);
  uint64_t v132 = v112;
  if (v131)
  {
    uint64_t v133 = 0;
    uint64_t v134 = 0;
    if (v131 != 1) {
      goto LABEL_9;
    }
    uint64_t v135 = v263 + 5;
    uint64_t v136 = v263 + 4;
  }
  else
  {
    uint64_t v136 = v263 + 2;
    uint64_t v135 = v263 + 3;
  }
  uint64_t v134 = *v135;
  uint64_t v133 = *v136;
  swift_bridgeObjectRetain();
LABEL_9:
  *(void *)(inited + 48) = v133;
  *(void *)(inited + 56) = v134;
  swift_bridgeObjectRetain_n();
  sub_10012B78C();
  uint64_t v138 = v137;
  unint64_t v139 = *(void *)(v137 + 16);
  unint64_t v140 = v139 + 1;
  if (v139 >= *(void *)(v137 + 24) >> 1)
  {
    sub_10012B78C();
    uint64_t v138 = v208;
  }
  *(void *)(v138 + 16) = v140;
  uint64_t v141 = v138 + 16 * v139;
  *(void *)(v141 + 32) = v130;
  *(void *)(v141 + 40) = v129;
  if (v134)
  {
    unint64_t v142 = *(void *)(v138 + 24);
    swift_bridgeObjectRetain();
    if (v140 >= v142 >> 1)
    {
      sub_10012B78C();
      uint64_t v138 = v209;
    }
    *(void *)(v138 + 16) = v139 + 2;
    uint64_t v143 = v138 + 16 * v140;
    *(void *)(v143 + 32) = v133;
    *(void *)(v143 + 40) = v134;
  }
  swift_release();
  uint64_t v144 = v236;
  uint64_t v145 = v261;
  ModifiedContent<>.accessibilityInputLabels<A>(_:)();
  swift_bridgeObjectRelease();
  sub_100178110(v145, &qword_100E63D20);
  char v146 = sub_10014CAF4();
  uint64_t v147 = v132 + *(int *)(v259 + 52);
  uint64_t v148 = *(void *)v147;
  char v149 = *(unsigned char *)(v147 + 8);
  sub_100195B7C(*(void *)v147, v149);
  sub_100201DE4();
  uint64_t v151 = v150;
  sub_10018F6D8(v148, v149);
  uint64_t v152 = Environment.init<A>(_:)();
  uint64_t v153 = (uint64_t)v245;
  *uint64_t v245 = v152;
  *(unsigned char *)(v153 + 8) = v154 & 1;
  long long v155 = (int *)v242;
  uint64_t v156 = (uint64_t *)(v153 + *(int *)(v242 + 20));
  *uint64_t v156 = swift_getKeyPath();
  sub_10017DF08(&qword_100E63D98);
  sub_100183804();
  *(unsigned char *)(v153 + v155[6]) = v146 & 1;
  *(void *)(v153 + v155[7]) = v151;
  uint64_t v157 = (void *)(v153 + v155[8]);
  uint64_t v274 = 0;
  State.init(wrappedValue:)();
  uint64_t v158 = *((void *)&v277 + 1);
  void *v157 = v277;
  v157[1] = v158;
  sub_1001848EC();
  sub_10006DF38(v159, v160, &qword_100E63D20);
  sub_100189CC8();
  sub_10014DEEC(v153, (uint64_t)v157 + v161, (void (*)(void))type metadata accessor for TranslationModifier);
  sub_100178110(v144, &qword_100E63D20);
  uint64_t v162 = sub_10020514C();
  char v164 = v163;
  LODWORD(v261) = v225 & 1;
  uint64_t v165 = v260 & 1;
  LODWORD(v259) = v260 & 1;
  int v260 = v227 & 1;
  uint64_t v166 = v271;
  sub_100208894(v271, v270, v165, v272, v268, v267, v227 & 1, v269, v265, v264, v225 & 1, v266);
  uint64_t v168 = v167;
  uint64_t v169 = *(void *)v147;
  LOBYTE(v147) = *(unsigned char *)(v147 + 8);
  sub_100195B7C(v169, v147);
  sub_100201DE4();
  uint64_t v171 = v170;
  sub_10018F6D8(v169, v147);
  uint64_t v275 = 0;
  uint64_t v274 = 0;
  uint64_t v276 = 0;
  State.init(wrappedValue:)();
  long long v258 = v277;
  long long v172 = v278;
  uint64_t v173 = v240;
  sub_10006DF38((uint64_t)v157, v240, &qword_100E63D28);
  uint64_t v174 = v173 + *(int *)(v237 + 36);
  *(void *)uint64_t v174 = v162;
  *(unsigned char *)(v174 + 8) = v164 & 1;
  *(void *)(v174 + 16) = v168;
  *(void *)(v174 + 24) = v171;
  *(_OWORD *)(v174 + 32) = v258;
  *(_OWORD *)(v174 + 48) = v172;
  sub_100178110((uint64_t)v157, &qword_100E63D28);
  sub_1000FDAD8();
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  sub_1001848EC();
  sub_10006DF38(v175, v176, &qword_100E63D30);
  sub_100189CC8();
  uint64_t v178 = (_OWORD *)((char *)v157 + v177);
  long long v179 = v278;
  *uint64_t v178 = v277;
  v178[1] = v179;
  v178[2] = v279;
  sub_100178110(v173, &qword_100E63D30);
  uint64_t v180 = (uint64_t)v251;
  void *v251 = 0;
  *(void *)(v180 + 8) = 0;
  *(unsigned char *)(v180 + 16) = 2;
  swift_storeEnumTagMultiPayload();
  uint64_t v181 = v241;
  sub_10048D034(v180, v182, v183, v184, v185, v186, v187, v188, v213, v214, v215, v216, v217, v218, v219, v220, v221, v222, v223,
    v224);
  sub_10014CC74(v180, (void (*)(void))type metadata accessor for AutomationInfo);
  sub_100178110((uint64_t)v157, &qword_100E63D38);
  LOBYTE(v180) = *((unsigned char *)v263 + 137);
  uint64_t v189 = v246;
  sub_10006DF38(v181, v246, &qword_100E63D40);
  *(unsigned char *)(v189 + *(int *)(v239 + 52)) = v180;
  sub_100178110(v181, &qword_100E63D40);
  uint64_t v190 = v253;
  OpacityTransition.init()();
  uint64_t v191 = v254;
  uint64_t v192 = v255;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v254 + 16))(v252, v190, v255);
  sub_1000E7420((uint64_t)&unk_100E63DA0);
  uint64_t v193 = AnyTransition.init<A>(_:)();
  sub_1001848EC();
  sub_10006DF38(v194, v195, &qword_100E63D48);
  sub_100189CC8();
  *(void *)((char *)v157 + v196) = v193;
  (*(void (**)(uint64_t, uint64_t))(v191 + 8))(v190, v192);
  sub_100178110(v189, &qword_100E63D48);
  uint64_t v197 = swift_getKeyPath();
  sub_100189CC8();
  uint64_t v198 = v249;
  uint64_t v200 = (uint64_t *)(v249 + v199);
  uint64_t v201 = sub_10017DF08(&qword_100E63DA8);
  uint64_t v202 = v262;
  sub_10014D0EC(v262, (uint64_t)v200 + *(int *)(v201 + 28), (void (*)(void))type metadata accessor for LocationHeaderViewMeasurements);
  *uint64_t v200 = v197;
  sub_10024D364((uint64_t)v157, v198, &qword_100E63D50);
  swift_allocObject();
  uint64_t v273 = sub_100202344();
  State.init(wrappedValue:)();
  sub_100191924(v166, v270, v259);
  swift_bridgeObjectRelease();
  sub_100191924(v268, v267, v260);
  swift_bridgeObjectRelease();
  sub_100191924(v265, v264, v261);
  swift_bridgeObjectRelease();
  uint64_t v203 = v274;
  uint64_t v204 = v275;
  uint64_t v205 = v248;
  sub_10006DF38(v198, v248, &qword_100E63D58);
  uint64_t v206 = (void *)(v205 + *(int *)(v247 + 36));
  void *v206 = v203;
  v206[1] = v204;
  sub_100178110(v198, &qword_100E63D58);
  sub_10014CC74(v202, (void (*)(void))type metadata accessor for LocationHeaderViewMeasurements);
  return sub_10024D364(v205, v256, &qword_100E63D60);
}

void sub_100201DE4()
{
  sub_100162EA0();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  type metadata accessor for EnvironmentValues();
  sub_100179C0C();
  __chkstk_darwin(v4);
  sub_10011BFD8();
  if ((v1 & 1) == 0)
  {
    swift_retain();
    static os_log_type_t.fault.getter();
    uint64_t v5 = static Log.runtimeIssuesLog.getter();
    if (sub_1001260AC(v5))
    {
      sub_10017E670();
      uint64_t v6 = sub_100184468();
      sub_1005EFDB8(v6);
      sub_1001D404C(4.8149e-34);
      uint64_t v8 = sub_10016414C(0x74616F6C464743, 0xE700000000000000, v7);
      sub_1001853DC(v8);
      sub_10019DEAC((void *)&_mh_execute_header, v9, v10, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.");
      sub_1001EA978();
      sub_100162EE0();
      sub_100162EE0();
    }

    EnvironmentValues.init()();
    swift_getAtKeyPath();
    sub_10018F6D8(v3, 0);
    sub_100164FC8();
    v11();
  }
  sub_100162694();
}

uint64_t sub_100201F30()
{
  uint64_t v1 = v0 + *(int *)(type metadata accessor for LocationHeaderView(0) + 64);
  if (*(unsigned char *)(v1 + 136) == 1)
  {
    sub_10014A85C();
    uint64_t v2 = Text.init<A>(_:)();
    uint64_t v4 = v3;
    char v6 = v5 & 1;
    sub_10024A278();
    uint64_t v7 = Text.font(_:)();
    swift_release();
    uint64_t v8 = v2;
    uint64_t v9 = v4;
    char v10 = v6;
  }
  else
  {
    id v11 = [self mainBundle];
    v30._countAndFlagsBits = 0xD00000000000003CLL;
    v30._object = (void *)0x8000000100C96C40;
    v12._object = (void *)0x8000000100C96C10;
    v12._countAndFlagsBits = 0xD000000000000024;
    v13._countAndFlagsBits = 0x3A4C202040253A48;
    v13._object = (void *)0xEA00000000004025;
    NSLocalizedString(_:tableName:bundle:value:comment:)(v12, (Swift::String_optional)0, (NSBundle)v11, v13, v30);

    sub_10017DF08(&qword_100E64020);
    uint64_t v14 = swift_allocObject();
    *(_OWORD *)(v14 + 16) = xmmword_100C25ED0;
    uint64_t v16 = *(void *)(v1 + 104);
    uint64_t v15 = *(void *)(v1 + 112);
    *(void *)(v14 + 56) = &type metadata for String;
    unint64_t v17 = sub_10012B7C0();
    *(void *)(v14 + 32) = v16;
    *(void *)(v14 + 40) = v15;
    uint64_t v18 = *(void *)(v1 + 120);
    uint64_t v19 = *(void *)(v1 + 128);
    *(void *)(v14 + 96) = &type metadata for String;
    *(void *)(v14 + 104) = v17;
    *(void *)(v14 + 64) = v17;
    *(void *)(v14 + 72) = v18;
    *(void *)(v14 + 80) = v19;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    static String.localizedStringWithFormat(_:_:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_10014A85C();
    uint64_t v20 = Text.init<A>(_:)();
    uint64_t v22 = v21;
    LOBYTE(v19) = v23 & 1;
    sub_1002073A8();
    uint64_t v24 = Text.font(_:)();
    uint64_t v26 = v25;
    char v28 = v27;
    swift_release();
    sub_100191924(v20, v22, v19);
    swift_bridgeObjectRelease();
    static Color.black.getter();
    Color.opacity(_:)();
    swift_release();
    uint64_t v7 = Text.shadow(color:radius:x:y:)();
    swift_release();
    uint64_t v8 = v24;
    uint64_t v9 = v26;
    char v10 = v28 & 1;
  }
  sub_100191924(v8, v9, v10);
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_100202224()
{
  return swift_release();
}

uint64_t type metadata accessor for LocationHeaderViewFrameCoordinator(uint64_t a1)
{
  return sub_10018678C(a1, qword_100E63B30);
}

uint64_t sub_100202344()
{
  *(void *)(v0 + 16) = 0;
  *(void *)(v0 + 24) = 0;
  ObservationRegistrar.init()();
  return v0;
}

uint64_t sub_100202370@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, int a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, unsigned __int8 a14, uint64_t a15, uint64_t a16, uint64_t a17, unsigned __int8 a18, uint64_t a19, uint64_t a20,uint64_t a21,unsigned __int8 a22,uint64_t a23)
{
  uint64_t v83 = a8;
  LODWORD(v81) = a5;
  uint64_t v78 = a23;
  int v73 = a22;
  uint64_t v75 = a21;
  uint64_t v74 = a20;
  uint64_t v87 = a19;
  int v71 = a18;
  uint64_t v77 = a17;
  uint64_t v76 = a16;
  uint64_t v88 = a15;
  int v70 = a14;
  uint64_t v85 = a12;
  uint64_t v86 = a13;
  uint64_t v84 = a10;
  uint64_t v30 = sub_10017DF08(&qword_100E63DB8);
  __chkstk_darwin(v30 - 8);
  uint64_t v32 = (char *)&v67 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = a9;
  uint64_t v34 = a9 + *(int *)(type metadata accessor for LocationHeaderViewMeasurements(0) + 32);
  uint64_t v82 = a1;
  sub_10014D0EC(a1, v34, (void (*)(void))type metadata accessor for DisplayMetrics);
  uint64_t v35 = type metadata accessor for Text.WritingMode();
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v32, 1, 1, v35);
  uint64_t v79 = a3;
  uint64_t v80 = a4;
  int v72 = v81 & 1;
  uint64_t v81 = a6;
  Text.Measurements.size(of:in:writingMode:)();
  double v37 = v36;
  double v39 = v38;
  sub_100178110((uint64_t)v32, &qword_100E63DB8);
  uint64_t v69 = a11;
  uint64_t v68 = a7;
  if (a11)
  {
    char v40 = v84 & 1;
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v32, 1, 1, v35);
    uint64_t v41 = v83;
    sub_100190CC4(a7, v83, v40);
    swift_bridgeObjectRetain();
    char v89 = v40;
    Text.Measurements.size(of:in:writingMode:)();
    double v43 = v42;
    double v45 = v44;
    sub_100191924(a7, v41, v40);
    swift_bridgeObjectRelease();
    sub_100178110((uint64_t)v32, &qword_100E63DB8);
    if (v37 <= v43) {
      double v37 = v43;
    }
    double v39 = v39 + v45;
  }
  uint64_t v46 = v33;
  *(double *)uint64_t v33 = v37;
  *(double *)(v33 + 8) = v39;
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v32, 1, 1, v35);
  v70 &= 1u;
  Text.Measurements.size(of:in:writingMode:)();
  uint64_t v48 = v47;
  uint64_t v50 = v49;
  sub_100178110((uint64_t)v32, &qword_100E63DB8);
  *(void *)(v33 + 16) = v48;
  *(void *)(v33 + 24) = v50;
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v32, 1, 1, v35);
  char v51 = v71 & 1;
  uint64_t v52 = v76;
  uint64_t v53 = v77;
  Text.Measurements.size(of:in:writingMode:)();
  uint64_t v55 = v54;
  uint64_t v57 = v56;
  sub_100178110((uint64_t)v32, &qword_100E63DB8);
  *(void *)(v33 + 32) = v55;
  *(void *)(v33 + 40) = v57;
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v32, 1, 1, v35);
  char v58 = v73 & 1;
  uint64_t v59 = v74;
  uint64_t v60 = v75;
  Text.Measurements.size(of:in:writingMode:)();
  uint64_t v62 = v61;
  uint64_t v64 = v63;
  sub_100191924(v59, v60, v58);
  swift_bridgeObjectRelease();
  sub_100191924(v52, v53, v51);
  swift_bridgeObjectRelease();
  sub_100191924(v85, v86, v70);
  swift_bridgeObjectRelease();
  sub_100147E60(v68, v83, v84, v69);
  sub_100191924(v79, v80, v72);
  swift_bridgeObjectRelease();
  uint64_t v65 = type metadata accessor for Text.Measurements();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v65 - 8) + 8))(a2, v65);
  sub_10014CC74(v82, (void (*)(void))type metadata accessor for DisplayMetrics);
  uint64_t result = sub_100178110((uint64_t)v32, &qword_100E63DB8);
  *(void *)(v46 + 48) = v62;
  *(void *)(v46 + 56) = v64;
  return result;
}

uint64_t sub_100202814@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, int a8@<W7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, unsigned __int8 a13, uint64_t a14)
{
  int v56 = a4;
  int v57 = a8;
  uint64_t v61 = a5;
  uint64_t v62 = a6;
  uint64_t v59 = a2;
  uint64_t v60 = a3;
  int v51 = a13;
  uint64_t v54 = a12;
  uint64_t v55 = a14;
  uint64_t v52 = a10;
  uint64_t v53 = a11;
  uint64_t v17 = type metadata accessor for ContentSizeCategory();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v21 = (char *)&v50 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  char v23 = (char *)&v50 - v22;
  uint64_t v24 = sub_10017DF08(&qword_100E63DD0);
  uint64_t v25 = __chkstk_darwin(v24 - 8);
  char v27 = (char *)&v50 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = __chkstk_darwin(v25);
  uint64_t v30 = (char *)&v50 - v29;
  __chkstk_darwin(v28);
  uint64_t v32 = (char *)&v50 - v31;
  type metadata accessor for LocationHeaderView(0);
  uint64_t v58 = a1;
  sub_10014E6E8();
  (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v21, v23, v17);
  int v33 = (*(uint64_t (**)(char *, uint64_t))(v18 + 88))(v21, v17);
  if (v33 == enum case for ContentSizeCategory.extraSmall(_:)
    || v33 == enum case for ContentSizeCategory.small(_:)
    || v33 == enum case for ContentSizeCategory.medium(_:)
    || v33 == enum case for ContentSizeCategory.large(_:)
    || v33 == enum case for ContentSizeCategory.extraLarge(_:)
    || v33 == enum case for ContentSizeCategory.extraExtraLarge(_:)
    || v33 == enum case for ContentSizeCategory.extraExtraExtraLarge(_:))
  {
    (*(void (**)(char *, uint64_t))(v18 + 8))(v23, v17);
LABEL_37:
    uint64_t v45 = static HorizontalAlignment.center.getter();
    goto LABEL_38;
  }
  char v40 = *(void (**)(char *, uint64_t))(v18 + 8);
  if (v33 != enum case for ContentSizeCategory.accessibilityMedium(_:)
    && v33 != enum case for ContentSizeCategory.accessibilityLarge(_:)
    && v33 != enum case for ContentSizeCategory.accessibilityExtraLarge(_:)
    && v33 != enum case for ContentSizeCategory.accessibilityExtraExtraLarge(_:)
    && v33 != enum case for ContentSizeCategory.accessibilityExtraExtraExtraLarge(_:))
  {
    uint64_t v50 = a7;
    v40(v21, v17);
    a7 = v50;
    v40(v23, v17);
    goto LABEL_37;
  }
  v40(v23, v17);
  uint64_t v45 = static HorizontalAlignment.leading.getter();
LABEL_38:
  *(void *)uint64_t v30 = v45;
  *((void *)v30 + 1) = 0;
  v30[16] = 0;
  uint64_t v46 = sub_10017DF08(&qword_100E63DD8);
  sub_100202C28(v58, v59, v60, v56 & 1, v61, v62, a7, v57 & 1, &v30[*(int *)(v46 + 44)], v52, v53, v54, v51 & 1, v55);
  sub_10024D364((uint64_t)v30, (uint64_t)v32, &qword_100E63DD0);
  sub_10006DF38((uint64_t)v32, (uint64_t)v27, &qword_100E63DD0);
  *(void *)a9 = 0;
  *(unsigned char *)(a9 + 8) = 1;
  uint64_t v47 = sub_10017DF08(&qword_100E63DE0);
  sub_10006DF38((uint64_t)v27, a9 + *(int *)(v47 + 48), &qword_100E63DD0);
  uint64_t v48 = a9 + *(int *)(v47 + 64);
  *(void *)uint64_t v48 = 0;
  *(unsigned char *)(v48 + 8) = 1;
  sub_100178110((uint64_t)v32, &qword_100E63DD0);
  return sub_100178110((uint64_t)v27, &qword_100E63DD0);
}

uint64_t sub_100202C28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, int a8@<W7>, void *a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, unsigned __int8 a13, uint64_t a14)
{
  int v148 = a8;
  uint64_t v157 = a7;
  uint64_t v156 = a6;
  uint64_t v154 = a5;
  int v147 = a4;
  uint64_t v151 = a3;
  uint64_t v150 = a2;
  char v163 = a9;
  uint64_t v15 = type metadata accessor for DisplayMetrics();
  __chkstk_darwin(v15 - 8);
  uint64_t v119 = (uint64_t *)((char *)&v118 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v158 = type metadata accessor for AccessibilityChildBehavior();
  uint64_t v155 = *(void *)(v158 - 8);
  __chkstk_darwin(v158);
  char v149 = (char *)&v118 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v153 = sub_10017DF08(&qword_100E63DE8);
  __chkstk_darwin(v153);
  uint64_t v145 = (uint64_t *)((char *)&v118 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v160 = sub_10017DF08(&qword_100E63DF0);
  uint64_t v159 = *(void *)(v160 - 8);
  __chkstk_darwin(v160);
  uint64_t v152 = (char *)&v118 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_10017DF08(&qword_100E63DF8);
  uint64_t v21 = __chkstk_darwin(v20 - 8);
  uint64_t v162 = (uint64_t)&v118 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = __chkstk_darwin(v21);
  char v146 = (char *)&v118 - v24;
  __chkstk_darwin(v23);
  uint64_t v166 = (uint64_t)&v118 - v25;
  uint64_t v26 = type metadata accessor for ContentSizeCategory();
  uint64_t v167 = *(void *)(v26 - 8);
  uint64_t v27 = __chkstk_darwin(v26);
  uint64_t v137 = (char *)&v118 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = __chkstk_darwin(v27);
  uint64_t v138 = (char *)&v118 - v30;
  uint64_t v31 = __chkstk_darwin(v29);
  int v33 = (char *)&v118 - v32;
  __chkstk_darwin(v31);
  uint64_t v35 = (char *)&v118 - v34;
  uint64_t v36 = sub_10017DF08(&qword_100E63E00);
  __chkstk_darwin(v36 - 8);
  double v38 = (char *)&v118 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = sub_10017DF08(&qword_100E63E08);
  uint64_t v40 = v39 - 8;
  __chkstk_darwin(v39);
  double v42 = (char *)&v118 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = sub_10017DF08(&qword_100E63E10);
  __chkstk_darwin(v43 - 8);
  uint64_t v135 = (char *)&v118 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v134 = sub_10017DF08(&qword_100E63E18);
  uint64_t v45 = __chkstk_darwin(v134);
  uint64_t v161 = (uint64_t)&v118 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = __chkstk_darwin(v45);
  uint64_t v49 = (char *)&v118 - v48;
  __chkstk_darwin(v47);
  uint64_t v164 = (uint64_t)&v118 - v50;
  sub_100208BCC();
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v144 = v170;
  int v143 = v171;
  uint64_t v142 = v172;
  int v141 = v173;
  uint64_t v140 = v174;
  uint64_t v139 = v175;
  sub_100203D58((uint64_t)v38);
  sub_1002060B8();
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  sub_10006DF38((uint64_t)v38, (uint64_t)v42, &qword_100E63E00);
  int v51 = &v42[*(int *)(v40 + 44)];
  long long v52 = v177;
  *(_OWORD *)int v51 = v176;
  *((_OWORD *)v51 + 1) = v52;
  *((_OWORD *)v51 + 2) = v178;
  sub_100178110((uint64_t)v38, &qword_100E63E00);
  uint64_t v136 = type metadata accessor for LocationHeaderView(0);
  uint64_t v53 = *(int *)(v136 + 28);
  uint64_t v165 = a1;
  uint64_t v133 = a1 + v53;
  sub_10014E6E8();
  uint64_t v54 = v167;
  uint64_t v132 = *(void (**)(char *, char *, uint64_t))(v167 + 16);
  v132(v33, v35, v26);
  int v131 = *(uint64_t (**)(char *, uint64_t))(v54 + 88);
  int v55 = v131(v33, v26);
  int v56 = 0;
  int v57 = enum case for ContentSizeCategory.extraExtraExtraLarge(_:);
  int v130 = enum case for ContentSizeCategory.extraSmall(_:);
  int v129 = enum case for ContentSizeCategory.small(_:);
  BOOL v58 = v55 == enum case for ContentSizeCategory.extraSmall(_:) || v55 == enum case for ContentSizeCategory.small(_:);
  int v128 = enum case for ContentSizeCategory.medium(_:);
  BOOL v59 = v58 || v55 == enum case for ContentSizeCategory.medium(_:);
  int v127 = enum case for ContentSizeCategory.large(_:);
  BOOL v60 = v59 || v55 == enum case for ContentSizeCategory.large(_:);
  int v126 = enum case for ContentSizeCategory.extraLarge(_:);
  BOOL v61 = v60 || v55 == enum case for ContentSizeCategory.extraLarge(_:);
  int v125 = enum case for ContentSizeCategory.extraExtraLarge(_:);
  if (!v61
    && v55 != enum case for ContentSizeCategory.extraExtraLarge(_:)
    && v55 != enum case for ContentSizeCategory.extraExtraExtraLarge(_:))
  {
    if (v55 == enum case for ContentSizeCategory.accessibilityMedium(_:)
      || v55 == enum case for ContentSizeCategory.accessibilityLarge(_:)
      || v55 == enum case for ContentSizeCategory.accessibilityExtraLarge(_:)
      || v55 == enum case for ContentSizeCategory.accessibilityExtraExtraLarge(_:)
      || v55 == enum case for ContentSizeCategory.accessibilityExtraExtraExtraLarge(_:))
    {
      int v56 = 1;
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v54 + 8))(v33, v26);
      int v56 = 0;
    }
  }
  uint64_t v68 = *(void (**)(char *, uint64_t))(v54 + 8);
  v68(v35, v26);
  uint64_t v167 = v54 + 8;
  if (v56) {
    static Alignment.leading.getter();
  }
  else {
    static Alignment.center.getter();
  }
  uint64_t v124 = a14;
  int v120 = a13;
  uint64_t v123 = a12;
  uint64_t v122 = a11;
  uint64_t v121 = a10;
  uint64_t v69 = (uint64_t)v135;
  sub_100BD7C40();
  sub_100178110((uint64_t)v42, &qword_100E63E08);
  char v70 = sub_10014CAF4();
  double v71 = sub_1000FA3CC();
  uint64_t v168 = 0;
  State.init(wrappedValue:)();
  uint64_t v72 = v179;
  uint64_t v73 = v180;
  sub_10006DF38(v69, (uint64_t)v49, &qword_100E63E10);
  uint64_t v74 = &v49[*(int *)(v134 + 36)];
  *uint64_t v74 = v70 & 1;
  *((double *)v74 + 1) = v71;
  *((void *)v74 + 2) = v72;
  *((void *)v74 + 3) = v73;
  sub_100178110(v69, &qword_100E63E10);
  sub_10024D364((uint64_t)v49, v164, &qword_100E63E18);
  uint64_t v75 = v138;
  sub_10014E6E8();
  uint64_t v76 = v137;
  v132(v137, v75, v26);
  int v77 = v131(v76, v26);
  if (v77 != v130 && v77 != v129 && v77 != v128 && v77 != v127 && v77 != v126 && v77 != v125 && v77 != v57)
  {
    if (v77 == enum case for ContentSizeCategory.accessibilityMedium(_:)
      || v77 == enum case for ContentSizeCategory.accessibilityLarge(_:)
      || v77 == enum case for ContentSizeCategory.accessibilityExtraLarge(_:)
      || v77 == enum case for ContentSizeCategory.accessibilityExtraExtraLarge(_:)
      || v77 == enum case for ContentSizeCategory.accessibilityExtraExtraExtraLarge(_:))
    {
      v68(v75, v26);
      uint64_t v88 = static Alignment.topLeading.getter();
      goto LABEL_73;
    }
    v68(v76, v26);
  }
  v68(v75, v26);
  uint64_t v88 = static Alignment.top.getter();
LABEL_73:
  uint64_t v90 = (uint64_t)v145;
  *uint64_t v145 = v88;
  *(void *)(v90 + 8) = v89;
  uint64_t v91 = sub_10017DF08(&qword_100E63E20);
  uint64_t v92 = v165;
  sub_100204600(v165, v150, v151, v147 & 1, v154, v156, v157, v148 & 1, v90 + *(int *)(v91 + 44), v121, v122, v123, v120 & 1, v124);
  char v93 = v149;
  static AccessibilityChildBehavior.ignore.getter();
  unint64_t v94 = sub_10024D5E4((uint64_t)&unk_100E63E28);
  uint64_t v95 = v152;
  uint64_t v96 = v153;
  View.accessibilityElement(children:)();
  (*(void (**)(char *, uint64_t))(v155 + 8))(v93, v158);
  sub_100178110(v90, &qword_100E63DE8);
  uint64_t v97 = v136;
  uint64_t v98 = v92 + *(int *)(v136 + 64);
  uint64_t v100 = *(void *)(v98 + 144);
  uint64_t v99 = *(void *)(v98 + 152);
  uint64_t v179 = v100;
  uint64_t v180 = v99;
  uint64_t v168 = v96;
  unint64_t v169 = v94;
  swift_getOpaqueTypeConformance2();
  sub_10014A85C();
  uint64_t v101 = (uint64_t)v146;
  uint64_t v102 = v160;
  View.accessibilityLabel<A>(_:)();
  (*(void (**)(char *, uint64_t))(v159 + 8))(v95, v102);
  sub_10024D364(v101, v166, &qword_100E63DF8);
  LODWORD(v167) = sub_100203B40();
  if (v167)
  {
    uint64_t v165 = 0;
    uint64_t v160 = 0;
    uint64_t v159 = 0;
    uint64_t v158 = 0;
    uint64_t v157 = 0;
    uint64_t v103 = 0;
    uint64_t v104 = 0;
  }
  else
  {
    uint64_t v105 = v119;
    sub_1001EFFBC();
    sub_100203C48(v105, *(void *)(v92 + *(int *)(v97 + 76) + 24) != 0);
    sub_10014CC74((uint64_t)v105, (void (*)(void))type metadata accessor for DisplayMetrics);
    static Alignment.center.getter();
    uint64_t v165 = 1;
    _FrameLayout.init(width:height:alignment:)();
    uint64_t v160 = v179;
    uint64_t v159 = v180;
    uint64_t v158 = v181;
    uint64_t v157 = v182;
    uint64_t v103 = v183;
    uint64_t v104 = v184;
  }
  uint64_t v106 = v164;
  uint64_t v107 = v161;
  sub_10006DF38(v164, v161, &qword_100E63E18);
  uint64_t v108 = v166;
  uint64_t v109 = v162;
  sub_10006DF38(v166, v162, &qword_100E63DF8);
  uint64_t v110 = v163;
  *char v163 = 0;
  *((unsigned char *)v110 + 8) = 1;
  v110[2] = v144;
  *((unsigned char *)v110 + 24) = v143;
  v110[4] = v142;
  *((unsigned char *)v110 + 40) = v141;
  uint64_t v111 = v139;
  v110[6] = v140;
  v110[7] = v111;
  uint64_t v112 = (int *)sub_10017DF08(&qword_100E63E30);
  sub_10006DF38(v107, (uint64_t)v110 + v112[12], &qword_100E63E18);
  sub_10006DF38(v109, (uint64_t)v110 + v112[16], &qword_100E63DF8);
  uint64_t v113 = (char *)v110 + v112[20];
  uint64_t v114 = v165;
  *(void *)uint64_t v113 = 0;
  *((void *)v113 + 1) = v114;
  uint64_t v115 = v159;
  *((void *)v113 + 2) = v160;
  *((void *)v113 + 3) = v115;
  uint64_t v116 = v157;
  *((void *)v113 + 4) = v158;
  *((void *)v113 + 5) = v116;
  *((void *)v113 + 6) = v103;
  *((void *)v113 + 7) = v104;
  v113[64] = v167 & 1;
  sub_100178110(v108, &qword_100E63DF8);
  sub_100178110(v106, &qword_100E63E18);
  sub_100178110(v109, &qword_100E63DF8);
  return sub_100178110(v107, &qword_100E63E18);
}

uint64_t sub_100203B40()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for LocationHeaderView(0);
  uint64_t v3 = __chkstk_darwin(v2);
  char v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v6 = *(unsigned char *)(v1 + *(int *)(v3 + 64) + 138);
  sub_10014D0EC(v1, (uint64_t)v5, (void (*)(void))type metadata accessor for LocationHeaderView);
  if (v6)
  {
    char v7 = 0;
  }
  else
  {
    uint64_t v8 = &v5[*(int *)(v2 + 44)];
    uint64_t v9 = *(void *)v8;
    char v10 = v8[8];
    sub_100195B7C(*(void *)v8, v10);
    sub_100149AE8();
    char v7 = v11;
    sub_10018F6D8(v9, v10);
  }
  sub_10014CC74((uint64_t)v5, (void (*)(void))type metadata accessor for LocationHeaderView);
  return v7 & 1;
}

uint64_t sub_100203C48(uint64_t *a1, char a2)
{
  id v4 = [self currentDevice];
  id v5 = [v4 userInterfaceIdiom];

  if (v5 == (id)5)
  {
    if (a2) {
      *(double *)&uint64_t result = 22.0;
    }
    else {
      *(double *)&uint64_t result = 40.0;
    }
  }
  else if (v5 == (id)1)
  {
    if (sub_1005A73C4(*a1))
    {
      double v6 = 94.0;
      if (a2) {
        double v6 = 80.0;
      }
      unint64_t v7 = a1[1];
      double v8 = 0.0;
      if (v7 <= 2) {
        double v8 = dbl_100C46860[v7];
      }
      *(double *)&uint64_t result = v6 + v8;
    }
    else if (a1[1] == 1)
    {
      *(double *)&uint64_t result = 20.0;
    }
    else
    {
      *(double *)&uint64_t result = 64.0;
    }
  }
  else
  {
    *(double *)&uint64_t result = 0.0;
  }
  return result;
}

uint64_t sub_100203D58@<X0>(uint64_t a1@<X8>)
{
  uint64_t v64 = a1;
  uint64_t v63 = type metadata accessor for ContentSizeCategory();
  uint64_t v57 = *(void *)(v63 - 8);
  uint64_t v2 = __chkstk_darwin(v63);
  BOOL v61 = (char *)&v57 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v62 = (char *)&v57 - v4;
  uint64_t v5 = sub_10017DF08(&qword_100E63FA0);
  __chkstk_darwin(v5 - 8);
  unint64_t v7 = (char *)&v57 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10017DF08(&qword_100E63FA8);
  uint64_t v9 = v8 - 8;
  __chkstk_darwin(v8);
  char v11 = (char *)&v57 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10017DF08(&qword_100E63FB0);
  uint64_t v13 = v12 - 8;
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v57 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_10017DF08(&qword_100E63FB8);
  uint64_t v17 = v16 - 8;
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v57 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = sub_10017DF08(&qword_100E63FC0);
  __chkstk_darwin(v58);
  uint64_t v21 = (char *)&v57 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = sub_10017DF08(&qword_100E63E00);
  __chkstk_darwin(v60);
  uint64_t v59 = (uint64_t)&v57 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)unint64_t v7 = static HorizontalAlignment.center.getter();
  *((void *)v7 + 1) = 0;
  v7[16] = 0;
  sub_10017DF08(&qword_100E63FC8);
  sub_100204384(v1);
  double v23 = sub_100206824();
  sub_10006DF38((uint64_t)v7, (uint64_t)v11, &qword_100E63FA0);
  uint64_t v24 = (double *)&v11[*(int *)(v9 + 44)];
  *uint64_t v24 = 0.0;
  v24[1] = v23;
  sub_100178110((uint64_t)v7, &qword_100E63FA0);
  uint64_t KeyPath = swift_getKeyPath();
  sub_10006DF38((uint64_t)v11, (uint64_t)v15, &qword_100E63FA8);
  uint64_t v26 = (uint64_t *)&v15[*(int *)(v13 + 44)];
  uint64_t *v26 = KeyPath;
  v26[1] = 0x3FE0000000000000;
  sub_100178110((uint64_t)v11, &qword_100E63FA8);
  uint64_t v27 = swift_getKeyPath();
  sub_10006DF38((uint64_t)v15, (uint64_t)v19, &qword_100E63FB0);
  uint64_t v28 = &v19[*(int *)(v17 + 44)];
  *(void *)uint64_t v28 = v27;
  *((void *)v28 + 1) = 1;
  v28[16] = 0;
  sub_100178110((uint64_t)v15, &qword_100E63FB0);
  LOBYTE(KeyPath) = static Edge.Set.leading.getter();
  unsigned __int8 v29 = static Edge.Set.trailing.getter();
  char v30 = Edge.Set.init(rawValue:)();
  Edge.Set.init(rawValue:)();
  if (Edge.Set.init(rawValue:)() != KeyPath) {
    char v30 = Edge.Set.init(rawValue:)();
  }
  Edge.Set.init(rawValue:)();
  if (Edge.Set.init(rawValue:)() != v29) {
    char v30 = Edge.Set.init(rawValue:)();
  }
  uint64_t v31 = v61;
  uint64_t v32 = v57;
  type metadata accessor for LocationHeaderView(0);
  int v33 = v62;
  sub_10014E6E8();
  uint64_t v34 = v63;
  (*(void (**)(char *, char *, uint64_t))(v32 + 16))(v31, v33, v63);
  int v35 = (*(uint64_t (**)(char *, uint64_t))(v32 + 88))(v31, v34);
  if (v35 != enum case for ContentSizeCategory.extraSmall(_:)
    && v35 != enum case for ContentSizeCategory.small(_:)
    && v35 != enum case for ContentSizeCategory.medium(_:)
    && v35 != enum case for ContentSizeCategory.large(_:)
    && v35 != enum case for ContentSizeCategory.extraLarge(_:)
    && v35 != enum case for ContentSizeCategory.extraExtraLarge(_:)
    && v35 != enum case for ContentSizeCategory.extraExtraExtraLarge(_:)
    && v35 != enum case for ContentSizeCategory.accessibilityMedium(_:)
    && v35 != enum case for ContentSizeCategory.accessibilityLarge(_:)
    && v35 != enum case for ContentSizeCategory.accessibilityExtraLarge(_:)
    && v35 != enum case for ContentSizeCategory.accessibilityExtraExtraLarge(_:)
    && v35 != enum case for ContentSizeCategory.accessibilityExtraExtraExtraLarge(_:))
  {
    (*(void (**)(char *, uint64_t))(v32 + 8))(v31, v34);
  }
  (*(void (**)(char *, uint64_t))(v32 + 8))(v33, v34);
  EdgeInsets.init(_all:)();
  uint64_t v47 = v46;
  uint64_t v49 = v48;
  uint64_t v51 = v50;
  uint64_t v53 = v52;
  sub_10006DF38((uint64_t)v19, (uint64_t)v21, &qword_100E63FB8);
  uint64_t v54 = &v21[*(int *)(v58 + 36)];
  *uint64_t v54 = v30;
  *((void *)v54 + 1) = v47;
  *((void *)v54 + 2) = v49;
  *((void *)v54 + 3) = v51;
  *((void *)v54 + 4) = v53;
  v54[40] = 0;
  sub_100178110((uint64_t)v19, &qword_100E63FB8);
  uint64_t v55 = v59;
  sub_10006DF38((uint64_t)v21, v59, &qword_100E63FC0);
  *(void *)(v55 + *(int *)(v60 + 36)) = 0x3FF0000000000000;
  sub_100178110((uint64_t)v21, &qword_100E63FC0);
  return sub_10024D364(v55, v64, &qword_100E63E00);
}

uint64_t sub_100204384(uint64_t a1)
{
  uint64_t v2 = sub_10017DF08(&qword_100E63FD0);
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10017DF08(&qword_100E63FD8);
  __chkstk_darwin(v5);
  unint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10017DF08(&qword_100E63FE0);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(unsigned char *)(a1 + *(int *)(type metadata accessor for LocationHeaderView(0) + 64) + 161))
  {
    sub_10005B868((uint64_t)v4);
    char v11 = &qword_100E63FD0;
    sub_10006DF38((uint64_t)v4, (uint64_t)v7, &qword_100E63FD0);
    swift_storeEnumTagMultiPayload();
    sub_10024D5E4((uint64_t)&unk_100E63FE8);
    sub_10024D5E4((uint64_t)&unk_100E63FF0);
    _ConditionalContent<>.init(storage:)();
    uint64_t v12 = (uint64_t)v4;
  }
  else
  {
    sub_10005BAF0((uint64_t)v10);
    char v11 = &qword_100E63FE0;
    sub_10006DF38((uint64_t)v10, (uint64_t)v7, &qword_100E63FE0);
    swift_storeEnumTagMultiPayload();
    sub_10024D5E4((uint64_t)&unk_100E63FE8);
    sub_10024D5E4((uint64_t)&unk_100E63FF0);
    _ConditionalContent<>.init(storage:)();
    uint64_t v12 = (uint64_t)v10;
  }
  return sub_100178110(v12, v11);
}

uint64_t sub_100204600@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, int a8@<W7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, unsigned __int8 a13, uint64_t a14)
{
  int v105 = a8;
  uint64_t v110 = a7;
  uint64_t v109 = a6;
  uint64_t v108 = a5;
  int v104 = a4;
  uint64_t v107 = a3;
  uint64_t v106 = a2;
  uint64_t v114 = sub_10017DF08(&qword_100E63E38);
  __chkstk_darwin(v114);
  uint64_t v17 = (char *)v94 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v100 = type metadata accessor for ConditionSummaryModifier(0);
  __chkstk_darwin(v100);
  uint64_t v101 = (uint64_t *)((char *)v94 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v113 = sub_10017DF08(&qword_100E63E40);
  __chkstk_darwin(v113);
  uint64_t v111 = (uint64_t)v94 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v112 = sub_10017DF08(&qword_100E63E48);
  uint64_t v20 = __chkstk_darwin(v112);
  uint64_t v99 = (uint64_t)v94 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  uint64_t v102 = (uint64_t)v94 - v22;
  uint64_t v123 = sub_10017DF08(&qword_100E63E50);
  __chkstk_darwin(v123);
  int v120 = (char *)v94 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v116 = type metadata accessor for LocationHeaderView(0);
  uint64_t v24 = __chkstk_darwin(v116);
  uint64_t v117 = (uint64_t)v94 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  uint64_t v118 = (uint64_t)v94 - v26;
  uint64_t v27 = sub_10017DF08(&qword_100E63E58);
  uint64_t v28 = __chkstk_darwin(v27 - 8);
  uint64_t v122 = (uint64_t)v94 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28);
  uint64_t v31 = (char *)v94 - v30;
  uint64_t v32 = sub_10017DF08(&qword_100E63E60);
  __chkstk_darwin(v32 - 8);
  uint64_t v34 = (char *)v94 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = sub_10017DF08(&qword_100E63E68);
  __chkstk_darwin(v35);
  uint64_t v37 = (char *)v94 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = sub_10017DF08(&qword_100E63E70);
  __chkstk_darwin(v38 - 8);
  uint64_t v40 = (char *)v94 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v115 = sub_10017DF08(&qword_100E63E78);
  uint64_t v41 = __chkstk_darwin(v115);
  uint64_t v43 = (char *)v94 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v41);
  uint64_t v103 = (uint64_t)v94 - v44;
  uint64_t v45 = sub_10017DF08(&qword_100E63E80);
  uint64_t v46 = __chkstk_darwin(v45 - 8);
  uint64_t v119 = (uint64_t)v94 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v46);
  uint64_t v49 = (char *)v94 - v48;
  char v50 = sub_100203B40();
  uint64_t v121 = v31;
  if (v50)
  {
    uint64_t v51 = 1;
    uint64_t v52 = v115;
    uint64_t v53 = v116;
  }
  else
  {
    uint64_t v98 = a14;
    v94[1] = a13;
    uint64_t v97 = a12;
    uint64_t v96 = a11;
    uint64_t v95 = a10;
    sub_100208604(a1);
    double v54 = sub_1002067A0();
    sub_10006DF38((uint64_t)v34, (uint64_t)v37, &qword_100E63E60);
    uint64_t v55 = (double *)&v37[*(int *)(v35 + 36)];
    *uint64_t v55 = 0.0;
    v55[1] = v54;
    sub_100178110((uint64_t)v34, &qword_100E63E60);
    double v56 = sub_1000FA3CC();
    *(void *)uint64_t v40 = static HorizontalAlignment.center.getter();
    *((void *)v40 + 1) = 0;
    v40[16] = 0;
    uint64_t v57 = sub_10017DF08(&qword_100E63E88);
    sub_10020519C(a1, v106, v107, v104 & 1, v108, (uint64_t)v37, v109, v110, (uint64_t)&v40[*(int *)(v57 + 44)], v56, v105 & 1, v95);
    sub_100178110((uint64_t)v37, &qword_100E63E68);
    uint64_t v58 = v116;
    if (*(void *)(a1 + *(int *)(v116 + 76) + 24)) {
      double v59 = -14.0;
    }
    else {
      double v59 = -12.0;
    }
    sub_10006DF38((uint64_t)v40, (uint64_t)v43, &qword_100E63E70);
    uint64_t v60 = v115;
    BOOL v61 = &v43[*(int *)(v115 + 36)];
    *(void *)BOOL v61 = 0;
    *((double *)v61 + 1) = v59;
    sub_100178110((uint64_t)v40, &qword_100E63E70);
    uint64_t v62 = (uint64_t)v43;
    uint64_t v63 = v103;
    sub_10024D364(v62, v103, &qword_100E63E78);
    sub_10024D364(v63, (uint64_t)v49, &qword_100E63E78);
    uint64_t v51 = 0;
    uint64_t v53 = v58;
    uint64_t v52 = v60;
  }
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v49, v51, 1, v52);
  char v64 = sub_10014DFC0();
  uint64_t v65 = v118;
  sub_10014D0EC(a1, v118, (void (*)(void))type metadata accessor for LocationHeaderView);
  uint64_t v66 = (uint64_t)v120;
  uint64_t v67 = v117;
  if ((v64 & 1) == 0)
  {
    char v68 = *(unsigned char *)(v65 + *(int *)(v53 + 64) + 138);
    sub_10014D0EC(v65, v117, (void (*)(void))type metadata accessor for LocationHeaderView);
    if (v68)
    {
      sub_10014CC74(v67, (void (*)(void))type metadata accessor for LocationHeaderView);
      sub_10014CC74(v65, (void (*)(void))type metadata accessor for LocationHeaderView);
    }
    else
    {
      uint64_t v69 = v67 + *(int *)(v53 + 44);
      uint64_t v70 = *(void *)v69;
      char v71 = *(unsigned char *)(v69 + 8);
      sub_100195B7C(*(void *)v69, v71);
      sub_100149AE8();
      char v73 = v72;
      sub_10018F6D8(v70, v71);
      sub_10014CC74(v67, (void (*)(void))type metadata accessor for LocationHeaderView);
      sub_10014CC74(v65, (void (*)(void))type metadata accessor for LocationHeaderView);
      if (v73) {
        goto LABEL_12;
      }
    }
    uint64_t v88 = 1;
    uint64_t v89 = (uint64_t)v121;
    goto LABEL_17;
  }
  sub_10014CC74(v65, (void (*)(void))type metadata accessor for LocationHeaderView);
LABEL_12:
  char v74 = sub_10014CAF4();
  uint64_t v75 = v111;
  sub_100207564(v111);
  if (v74)
  {
    char v76 = sub_10014CAF4();
    double v77 = sub_1000FA3CC();
    double v78 = v77 + sub_1002060B8() + 0.0;
    type metadata accessor for LocationHeaderViewFrameCoordinator(0);
    sub_1000E7420((uint64_t)&unk_100E63D70);
    uint64_t v79 = Environment.init<A>(_:)();
    uint64_t v80 = (uint64_t)v101;
    uint64_t *v101 = v79;
    *(unsigned char *)(v80 + 8) = v81 & 1;
    uint64_t v82 = (int *)v100;
    uint64_t v83 = (uint64_t *)(v80 + *(int *)(v100 + 20));
    *uint64_t v83 = swift_getKeyPath();
    sub_10017DF08(&qword_100E63D98);
    swift_storeEnumTagMultiPayload();
    *(unsigned char *)(v80 + v82[6]) = v76 & 1;
    *(double *)(v80 + v82[7]) = v78;
    *(void *)(v80 + v82[8]) = 0x3FE999999999999ALL;
    *(void *)(v80 + v82[9]) = 0x3FF0000000000000;
    uint64_t v84 = (void *)(v80 + v82[10]);
    uint64_t v124 = 0;
    State.init(wrappedValue:)();
    uint64_t v85 = v126;
    *uint64_t v84 = v125;
    v84[1] = v85;
    uint64_t v86 = v99;
    sub_10006DF38(v75, v99, &qword_100E63E40);
    sub_10014DEEC(v80, v86 + *(int *)(v112 + 36), (void (*)(void))type metadata accessor for ConditionSummaryModifier);
    sub_100178110(v75, &qword_100E63E40);
    uint64_t v87 = &qword_100E63E48;
    uint64_t v75 = v102;
    sub_10024D364(v86, v102, &qword_100E63E48);
    sub_10006DF38(v75, (uint64_t)v17, &qword_100E63E48);
  }
  else
  {
    uint64_t v87 = &qword_100E63E40;
    sub_10006DF38(v75, (uint64_t)v17, &qword_100E63E40);
  }
  swift_storeEnumTagMultiPayload();
  sub_10020CAE8();
  sub_10020CC34();
  _ConditionalContent<>.init(storage:)();
  sub_100178110(v75, v87);
  uint64_t v89 = (uint64_t)v121;
  sub_10024D364(v66, (uint64_t)v121, &qword_100E63E50);
  uint64_t v88 = 0;
LABEL_17:
  _s7Weather24LocationCompositionStateOwst_0(v89, v88, 1, v123);
  uint64_t v90 = v119;
  sub_10006DF38((uint64_t)v49, v119, &qword_100E63E80);
  uint64_t v91 = v122;
  sub_10006DF38(v89, v122, &qword_100E63E58);
  sub_10006DF38(v90, a9, &qword_100E63E80);
  uint64_t v92 = sub_10017DF08(&qword_100E63E90);
  sub_10006DF38(v91, a9 + *(int *)(v92 + 48), &qword_100E63E58);
  sub_100178110(v89, &qword_100E63E58);
  sub_100178110((uint64_t)v49, &qword_100E63E80);
  sub_100178110(v91, &qword_100E63E58);
  return sub_100178110(v90, &qword_100E63E80);
}

uint64_t sub_10020514C()
{
  char v0 = sub_10014DFC0();
  int v1 = sub_100203B40();
  if (v0) {
    return ~v1 & 1;
  }
  if (v1) {
    return 0;
  }
  return sub_10024A160();
}

uint64_t sub_10020519C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, double a10@<D0>, unsigned __int8 a11, uint64_t a12)
{
  uint64_t v137 = a8;
  uint64_t v151 = a7;
  uint64_t v135 = a6;
  uint64_t v125 = a5;
  uint64_t v124 = a3;
  uint64_t v123 = a2;
  uint64_t v129 = a1;
  uint64_t v150 = a9;
  uint64_t v136 = a12;
  int v130 = a11;
  uint64_t v149 = sub_10017DF08(&qword_100E63EF8);
  __chkstk_darwin(v149);
  uint64_t v120 = (uint64_t)&v119 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v146 = sub_10017DF08(&qword_100E63F00);
  __chkstk_darwin(v146);
  uint64_t v148 = (uint64_t)&v119 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v147 = sub_10017DF08(&qword_100E63F08);
  __chkstk_darwin(v147);
  uint64_t v119 = (uint64_t)&v119 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v131 = type metadata accessor for ConditionModifier(0);
  __chkstk_darwin(v131);
  uint64_t v134 = (uint64_t *)((char *)&v119 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v21 = sub_10017DF08(&qword_100E63F10);
  __chkstk_darwin(v21 - 8);
  uint64_t v133 = (uint64_t)&v119 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v132 = sub_10017DF08(&qword_100E63F18);
  uint64_t v23 = __chkstk_darwin(v132);
  uint64_t v139 = (uint64_t)&v119 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  uint64_t v144 = (uint64_t)&v119 - v25;
  uint64_t v26 = sub_10017DF08(&qword_100E63F20);
  uint64_t v27 = __chkstk_darwin(v26 - 8);
  uint64_t v138 = (uint64_t)&v119 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27);
  uint64_t v142 = (uint64_t)&v119 - v29;
  uint64_t v30 = sub_10017DF08(&qword_100E63F28);
  uint64_t v31 = __chkstk_darwin(v30 - 8);
  uint64_t v145 = (uint64_t)&v119 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v31);
  int v143 = (char *)&v119 - v33;
  uint64_t v34 = sub_10017DF08(&qword_100E63DB8);
  __chkstk_darwin(v34 - 8);
  uint64_t v152 = (uint64_t)&v119 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = type metadata accessor for TemperatureModifier(0);
  uint64_t v37 = (int *)(v36 - 8);
  __chkstk_darwin(v36);
  uint64_t v39 = (char *)&v119 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = sub_10017DF08(&qword_100E63F30);
  __chkstk_darwin(v40 - 8);
  uint64_t v42 = (char *)&v119 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = sub_10017DF08(&qword_100E63F38);
  uint64_t v44 = v43 - 8;
  uint64_t v45 = __chkstk_darwin(v43);
  uint64_t v141 = (uint64_t)&v119 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = __chkstk_darwin(v45);
  uint64_t v49 = (char *)&v119 - v48;
  __chkstk_darwin(v47);
  uint64_t v51 = (char *)&v119 - v50;
  int v122 = a4 & 1;
  uint64_t v52 = v129;
  sub_100207CEC(a2, a3, v122, a5, (uint64_t)v42);
  char v53 = sub_10014CAF4();
  uint64_t v54 = v52;
  double v55 = sub_1002060B8();
  uint64_t v56 = type metadata accessor for LocationHeaderView(0);
  uint64_t v121 = v52 + *(int *)(v56 + 76);
  if (*(void *)(v121 + 24)) {
    double v57 = -14.0;
  }
  else {
    double v57 = -12.0;
  }
  double v58 = v55 + a10 + v57;
  uint64_t v59 = type metadata accessor for LocationHeaderViewFrameCoordinator(0);
  unint64_t v60 = sub_1000E7420((uint64_t)&unk_100E63D70);
  uint64_t v127 = v59;
  unint64_t v126 = v60;
  *(void *)uint64_t v39 = Environment.init<A>(_:)();
  v39[8] = v61 & 1;
  uint64_t v62 = (uint64_t *)&v39[v37[7]];
  uint64_t *v62 = swift_getKeyPath();
  uint64_t v128 = sub_10017DF08(&qword_100E63D98);
  swift_storeEnumTagMultiPayload();
  v39[v37[8]] = v53 & 1;
  *(double *)&v39[v37[9]] = v58;
  *(void *)&v39[v37[10]] = 0x3FE3333333333333;
  *(void *)&v39[v37[11]] = 0x3FE999999999999ALL;
  uint64_t v63 = &v39[v37[12]];
  uint64_t v153 = 0;
  State.init(wrappedValue:)();
  uint64_t v64 = v155;
  *(void *)uint64_t v63 = v154;
  *((void *)v63 + 1) = v64;
  sub_10006DF38((uint64_t)v42, (uint64_t)v49, &qword_100E63F30);
  sub_10014DEEC((uint64_t)v39, (uint64_t)&v49[*(int *)(v44 + 44)], (void (*)(void))type metadata accessor for TemperatureModifier);
  sub_100178110((uint64_t)v42, &qword_100E63F30);
  uint64_t v140 = v51;
  sub_10024D364((uint64_t)v49, (uint64_t)v51, &qword_100E63F38);
  double v65 = sub_1002060B8() + a10;
  if (*(void *)(v121 + 24)) {
    double v66 = -14.0;
  }
  else {
    double v66 = -12.0;
  }
  double v67 = v65 + v66;
  uint64_t v68 = type metadata accessor for Text.WritingMode();
  uint64_t v69 = v152;
  _s7Weather24LocationCompositionStateOwst_0(v152, 1, 1, v68);
  Text.Measurements.size(of:in:writingMode:)();
  double v71 = v70;
  sub_100178110(v69, &qword_100E63DB8);
  double v72 = v67 + v71;
  if (*(unsigned char *)(v54 + *(int *)(v56 + 64) + 136) == 1)
  {
    uint64_t v73 = v142;
    sub_1001E1420(v135, 1, v142, v72);
    uint64_t v74 = v152;
    _s7Weather24LocationCompositionStateOwst_0(v152, 1, 1, v68);
    Text.Measurements.size(of:in:writingMode:)();
    double v76 = v75;
    sub_100178110(v74, &qword_100E63DB8);
    uint64_t v77 = v133;
    sub_100206440(v133);
    char v78 = sub_10014CAF4();
    uint64_t v79 = Environment.init<A>(_:)();
    uint64_t v80 = (uint64_t)v134;
    *uint64_t v134 = v79;
    *(unsigned char *)(v80 + 8) = v81 & 1;
    uint64_t v82 = (int *)v131;
    uint64_t v83 = (uint64_t *)(v80 + *(int *)(v131 + 20));
    *uint64_t v83 = swift_getKeyPath();
    swift_storeEnumTagMultiPayload();
    *(unsigned char *)(v80 + v82[6]) = v78 & 1;
    *(double *)(v80 + v82[7]) = v72 + v76;
    *(void *)(v80 + v82[8]) = 0x3FC999999999999ALL;
    *(void *)(v80 + v82[9]) = 0x3FD999999999999ALL;
    uint64_t v84 = (void *)(v80 + v82[10]);
    uint64_t v153 = 0;
    State.init(wrappedValue:)();
    uint64_t v85 = v155;
    *uint64_t v84 = v154;
    v84[1] = v85;
    uint64_t v86 = v139;
    sub_10006DF38(v77, v139, &qword_100E63F10);
    sub_10014DEEC(v80, v86 + *(int *)(v132 + 36), (void (*)(void))type metadata accessor for ConditionModifier);
    sub_100178110(v77, &qword_100E63F10);
    uint64_t v87 = v144;
    sub_10024D364(v86, v144, &qword_100E63F18);
    uint64_t v88 = v138;
    sub_10006DF38(v73, v138, &qword_100E63F20);
    sub_10006DF38(v87, v86, &qword_100E63F18);
    uint64_t v89 = v119;
    sub_10006DF38(v88, v119, &qword_100E63F20);
    uint64_t v90 = sub_10017DF08(&qword_100E63F60);
    uint64_t v91 = v89 + *(int *)(v90 + 48);
    *(void *)uint64_t v91 = 0x4024000000000000;
    *(unsigned char *)(v91 + 8) = 0;
    sub_10006DF38(v86, v89 + *(int *)(v90 + 64), &qword_100E63F18);
    sub_100178110(v86, &qword_100E63F18);
    sub_100178110(v88, &qword_100E63F20);
    sub_10006DF38(v89, v148, &qword_100E63F08);
    swift_storeEnumTagMultiPayload();
    sub_10024D5E4((uint64_t)&unk_100E63F48);
    sub_10024D5E4((uint64_t)&unk_100E63F50);
    uint64_t v92 = (uint64_t)v143;
    _ConditionalContent<>.init(storage:)();
    sub_100178110(v89, &qword_100E63F08);
    sub_100178110(v87, &qword_100E63F18);
    uint64_t v93 = v73;
    unint64_t v94 = &qword_100E63F20;
  }
  else
  {
    v130 &= 1u;
    uint64_t v95 = v133;
    sub_100206440(v133);
    char v96 = sub_10014CAF4();
    uint64_t v97 = Environment.init<A>(_:)();
    uint64_t v98 = (uint64_t)v134;
    *uint64_t v134 = v97;
    *(unsigned char *)(v98 + 8) = v99 & 1;
    uint64_t v100 = (int *)v131;
    uint64_t v101 = (uint64_t *)(v98 + *(int *)(v131 + 20));
    uint64_t *v101 = swift_getKeyPath();
    swift_storeEnumTagMultiPayload();
    *(unsigned char *)(v98 + v100[6]) = v96 & 1;
    *(double *)(v98 + v100[7]) = v72;
    *(void *)(v98 + v100[8]) = 0x3FD999999999999ALL;
    *(void *)(v98 + v100[9]) = 0x3FE3333333333333;
    uint64_t v102 = (void *)(v98 + v100[10]);
    uint64_t v153 = 0;
    State.init(wrappedValue:)();
    uint64_t v103 = v155;
    *uint64_t v102 = v154;
    v102[1] = v103;
    uint64_t v104 = v139;
    sub_10006DF38(v95, v139, &qword_100E63F10);
    sub_10014DEEC(v98, v104 + *(int *)(v132 + 36), (void (*)(void))type metadata accessor for ConditionModifier);
    sub_100178110(v95, &qword_100E63F10);
    uint64_t v105 = v144;
    sub_10024D364(v104, v144, &qword_100E63F18);
    uint64_t v106 = v152;
    _s7Weather24LocationCompositionStateOwst_0(v152, 1, 1, v68);
    Text.Measurements.size(of:in:writingMode:)();
    double v108 = v107;
    sub_100178110(v106, &qword_100E63DB8);
    uint64_t v109 = v142;
    sub_1001E1420(v135, 0, v142, v72 + v108);
    sub_10006DF38(v105, v104, &qword_100E63F18);
    uint64_t v110 = v138;
    sub_10006DF38(v109, v138, &qword_100E63F20);
    uint64_t v111 = v120;
    sub_10006DF38(v104, v120, &qword_100E63F18);
    uint64_t v112 = sub_10017DF08(&qword_100E63F40);
    sub_10006DF38(v110, v111 + *(int *)(v112 + 48), &qword_100E63F20);
    sub_100178110(v110, &qword_100E63F20);
    sub_100178110(v104, &qword_100E63F18);
    sub_10006DF38(v111, v148, &qword_100E63EF8);
    swift_storeEnumTagMultiPayload();
    sub_10024D5E4((uint64_t)&unk_100E63F48);
    sub_10024D5E4((uint64_t)&unk_100E63F50);
    uint64_t v92 = (uint64_t)v143;
    _ConditionalContent<>.init(storage:)();
    sub_100178110(v111, &qword_100E63EF8);
    sub_100178110(v109, &qword_100E63F20);
    uint64_t v93 = v105;
    unint64_t v94 = &qword_100E63F18;
  }
  sub_100178110(v93, v94);
  uint64_t v113 = (uint64_t)v140;
  uint64_t v114 = v141;
  sub_10006DF38((uint64_t)v140, v141, &qword_100E63F38);
  uint64_t v115 = v145;
  sub_10006DF38(v92, v145, &qword_100E63F28);
  uint64_t v116 = v150;
  sub_10006DF38(v114, v150, &qword_100E63F38);
  uint64_t v117 = sub_10017DF08(&qword_100E63F58);
  sub_10006DF38(v115, v116 + *(int *)(v117 + 48), &qword_100E63F28);
  sub_100178110(v92, &qword_100E63F28);
  sub_100178110(v113, &qword_100E63F38);
  sub_100178110(v115, &qword_100E63F28);
  return sub_100178110(v114, &qword_100E63F38);
}

double sub_1002060B8()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10017DF08(&qword_100E63DB8);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for LocationHeaderView(0);
  uint64_t v6 = v0 + *(int *)(v5 + 84);
  static Font.largeTitle.getter();
  uint64_t v7 = Text.font(_:)();
  uint64_t v9 = v8;
  char v11 = v10;
  swift_release();
  uint64_t v12 = type metadata accessor for Text.WritingMode();
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v4, 1, 1, v12);
  Text.Measurements.size(of:in:writingMode:)();
  double v14 = v13;
  sub_100191924(v7, v9, v11 & 1);
  swift_bridgeObjectRelease();
  sub_100178110((uint64_t)v4, &qword_100E63DB8);
  uint64_t v15 = v1 + *(int *)(v5 + 76);
  if (*(void *)(v15 + 24))
  {
    uint64_t v16 = *(void *)v15;
    char v17 = *(_DWORD *)(v15 + 16) & 1;
    uint64_t v18 = *(void *)v15;
    uint64_t v28 = *(void *)(v15 + 8);
    sub_100190CC4(v18, v28, v17);
    swift_bridgeObjectRetain();
    sub_10020632C();
    char v29 = v17;
    uint64_t v19 = Text.font(_:)();
    uint64_t v21 = v20;
    uint64_t v27 = v6;
    char v23 = v22;
    swift_release();
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v4, 1, 1, v12);
    Text.Measurements.size(of:in:writingMode:)();
    double v25 = v24;
    sub_100191924(v19, v21, v23 & 1);
    swift_bridgeObjectRelease();
    sub_100191924(v16, v28, v17);
    swift_bridgeObjectRelease();
    sub_100178110((uint64_t)v4, &qword_100E63DB8);
  }
  else
  {
    double v25 = 0.0;
  }
  return v14 + v25;
}

uint64_t sub_10020632C()
{
  uint64_t v1 = type metadata accessor for Font.TextStyle();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v5 = *(unsigned char *)(v0 + *(int *)(type metadata accessor for LocationHeaderView(0) + 64) + 161);
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, enum case for Font.TextStyle.footnote(_:), v1);
  if (v5) {
    static Font.Weight.semibold.getter();
  }
  else {
    static Font.Weight.bold.getter();
  }
  uint64_t v6 = static Font.system(_:weight:)();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return v6;
}

uint64_t sub_100206440@<X0>(uint64_t a1@<X8>)
{
  uint64_t v36 = a1;
  uint64_t v1 = type metadata accessor for _BlendModeEffect();
  __chkstk_darwin(v1 - 8);
  uint64_t v35 = (char *)&v32 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for BlendMode();
  uint64_t v33 = *(void *)(v3 - 8);
  uint64_t v34 = v3;
  __chkstk_darwin(v3);
  uint64_t v32 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10017DF08(&qword_100E63F78);
  uint64_t v6 = v5 - 8;
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Color.black.getter();
  Color.opacity(_:)();
  swift_release();
  uint64_t v9 = Text.shadow(color:radius:x:y:)();
  uint64_t v11 = v10;
  char v13 = v12;
  swift_release();
  char v14 = v13 & 1;
  int v37 = static HierarchicalShapeStyle.secondary.getter();
  uint64_t v15 = Text.foregroundStyle<A>(_:)();
  uint64_t v17 = v16;
  uint64_t v19 = v18;
  char v21 = v20 & 1;
  sub_100191924(v9, v11, v14);
  swift_bridgeObjectRelease();
  char v23 = v32;
  uint64_t v22 = v33;
  uint64_t v24 = v34;
  (*(void (**)(char *, void, uint64_t))(v33 + 104))(v32, enum case for BlendMode.plusLighter(_:), v34);
  uint64_t v25 = v22;
  uint64_t v26 = *(void (**)(char *, char *, uint64_t))(v22 + 16);
  uint64_t v27 = (uint64_t)v35;
  v26(v35, v23, v24);
  sub_10014D0EC(v27, (uint64_t)&v8[*(int *)(v6 + 44)], (void (*)(void))&type metadata accessor for _BlendModeEffect);
  *(void *)uint64_t v8 = v15;
  *((void *)v8 + 1) = v17;
  v8[16] = v21;
  *((void *)v8 + 3) = v19;
  sub_100190CC4(v15, v17, v21);
  swift_bridgeObjectRetain();
  sub_10014CC74(v27, (void (*)(void))&type metadata accessor for _BlendModeEffect);
  (*(void (**)(char *, uint64_t))(v25 + 8))(v23, v24);
  sub_100191924(v15, v17, v21);
  swift_bridgeObjectRelease();
  double v28 = sub_1002079D8();
  uint64_t v29 = v36;
  sub_10006DF38((uint64_t)v8, v36, &qword_100E63F78);
  uint64_t v30 = (double *)(v29 + *(int *)(sub_10017DF08(&qword_100E63F10) + 36));
  *uint64_t v30 = 0.0;
  v30[1] = v28;
  return sub_100178110((uint64_t)v8, &qword_100E63F78);
}

double sub_1002067A0()
{
  uint64_t v1 = type metadata accessor for LocationHeaderView(0);
  double result = -10.0;
  if (*(unsigned char *)(v0 + *(int *)(v1 + 64) + 136) == 1)
  {
    id v3 = [self currentDevice];
    id v4 = [v3 userInterfaceIdiom];

    double result = -23.0;
    if (v4 == (id)1) {
      return -20.0;
    }
  }
  return result;
}

double sub_100206824()
{
  uint64_t v1 = type metadata accessor for Locale.Language();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  id v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for Locale();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for LocationHeaderView(0);
  uint64_t v10 = *(void *)(v0 + *(int *)(v9 + 76) + 24);
  if (*(unsigned char *)(v0 + *(int *)(v9 + 64) + 161))
  {
    double result = 0.0;
    if (!v10) {
      return -5.0;
    }
  }
  else if (v10)
  {
    static Locale.current.getter();
    Locale.language.getter();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    char v12 = Locale.Language.isCJK.getter();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    double result = -5.0;
    if (v12) {
      return -3.0;
    }
  }
  else
  {
    return -5.0;
  }
  return result;
}

uint64_t sub_1002069F0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v105 = a2;
  uint64_t v3 = type metadata accessor for LocalizedStringKey.StringInterpolation();
  __chkstk_darwin(v3 - 8);
  uint64_t v100 = type metadata accessor for Font.Context();
  uint64_t v99 = *(void *)(v100 - 8);
  __chkstk_darwin(v100);
  uint64_t v97 = (char *)&v91 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v95 = type metadata accessor for RoundedRectangle();
  __chkstk_darwin(v95);
  uint64_t v6 = (_OWORD *)((char *)&v91 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v98 = sub_10017DF08(&qword_100E63EE8);
  uint64_t v7 = __chkstk_darwin(v98);
  uint64_t v108 = (uint64_t)&v91 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v107 = (uint64_t)&v91 - v9;
  uint64_t v10 = type metadata accessor for Text.Scale();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v91 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for LocationHeaderView(0);
  uint64_t v15 = a1 + *(int *)(v14 + 64);
  uint64_t v16 = *(void *)(v15 + 96);
  uint64_t v96 = v15;
  uint64_t v91 = v14;
  if (v16)
  {
    uint64_t v17 = *(void *)(v15 + 88);
    uint64_t v18 = (uint64_t *)(a1 + *(int *)(v14 + 68));
    uint64_t v103 = *v18;
    uint64_t v102 = v18[1];
    LODWORD(v101) = *((unsigned __int8 *)v18 + 16);
    uint64_t v94 = v18[3];
    *(void *)&long long v111 = v17;
    *((void *)&v111 + 1) = v16;
    sub_10014A85C();
    uint64_t v93 = v10;
    swift_bridgeObjectRetain();
    uint64_t v19 = Text.init<A>(_:)();
    uint64_t v21 = v20;
    uint64_t v106 = a1;
    char v23 = v22 & 1;
    static Text.Scale.secondary.getter();
    uint64_t v24 = Text.textScale(_:isEnabled:)();
    uint64_t v26 = v25;
    uint64_t v92 = v27;
    uint64_t v104 = v6;
    char v29 = v28 & 1;
    sub_100191924(v19, v21, v23);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v93);
    uint64_t v30 = static Text.+ infix(_:_:)();
    uint64_t v32 = v31;
    uint64_t v34 = v33;
    int v36 = v35 & 1;
    char v37 = v29;
    uint64_t v6 = v104;
    sub_100191924(v24, v26, v37);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v38 = a1 + *(int *)(v14 + 68);
    uint64_t v30 = *(void *)v38;
    uint64_t v32 = *(void *)(v38 + 8);
    uint64_t v34 = *(void *)(v38 + 24);
    int v36 = *(unsigned __int8 *)(v38 + 16);
    sub_100190CC4(*(void *)v38, v32, *(unsigned char *)(v38 + 16));
    swift_bridgeObjectRetain();
  }
  uint64_t v101 = v32;
  uint64_t v102 = v30;
  uint64_t v103 = v34;
  sub_1002073A8();
  LODWORD(v104) = v36;
  uint64_t v39 = Text.font(_:)();
  uint64_t v41 = v40;
  char v43 = v42;
  swift_release();
  char v44 = v43 & 1;
  static Color.black.getter();
  Color.opacity(_:)();
  swift_release();
  uint64_t v93 = Text.shadow(color:radius:x:y:)();
  uint64_t v92 = v45;
  char v47 = v46;
  uint64_t v94 = v48;
  swift_release();
  LODWORD(v106) = v47 & 1;
  sub_100191924(v39, v41, v44);
  swift_bridgeObjectRelease();
  uint64_t v49 = (char *)v6 + *(int *)(v95 + 20);
  uint64_t v50 = enum case for RoundedCornerStyle.continuous(_:);
  uint64_t v51 = type metadata accessor for RoundedCornerStyle();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v51 - 8) + 104))(v49, v50, v51);
  __asm { FMOV            V0.2D, #1.0 }
  *uint64_t v6 = _Q0;
  sub_1002073A8();
  double v57 = v97;
  sub_10020CEDC();
  Font.capHeight(in:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v99 + 8))(v57, v100);
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v58 = v108;
  sub_10014D0EC((uint64_t)v6, v108, (void (*)(void))&type metadata accessor for RoundedRectangle);
  uint64_t v59 = (_OWORD *)(v58 + *(int *)(v98 + 36));
  long long v60 = v112;
  *uint64_t v59 = v111;
  v59[1] = v60;
  v59[2] = v113;
  sub_10014CC74((uint64_t)v6, (void (*)(void))&type metadata accessor for RoundedRectangle);
  uint64_t v61 = v107;
  sub_10024D364(v58, v107, &qword_100E63EE8);
  LocalizedStringKey.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v62._countAndFlagsBits = 0;
  v62._object = (void *)0xE000000000000000;
  LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v62);
  LocalizedStringKey.StringInterpolation.appendInterpolation(_:)(*(Swift::String *)(v96 + 56));
  v63._countAndFlagsBits = 0;
  v63._object = (void *)0xE000000000000000;
  LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v63);
  LocalizedStringKey.init(stringInterpolation:)();
  uint64_t v64 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v66 = v65;
  char v68 = v67 & 1;
  sub_1002073A8();
  uint64_t v69 = Text.font(_:)();
  uint64_t v71 = v70;
  char v73 = v72;
  swift_release();
  sub_100191924(v64, v66, v68);
  swift_bridgeObjectRelease();
  static Color.black.getter();
  Color.opacity(_:)();
  swift_release();
  uint64_t v99 = Text.shadow(color:radius:x:y:)();
  uint64_t v98 = v74;
  char v76 = v75;
  uint64_t v100 = v77;
  swift_release();
  char v78 = v76 & 1;
  sub_100191924(v69, v71, v73 & 1);
  swift_bridgeObjectRelease();
  LOBYTE(v69) = v106;
  char v110 = v106;
  uint64_t v79 = v61;
  uint64_t v80 = v108;
  sub_10006DF38(v79, v108, &qword_100E63EE8);
  char v109 = v76 & 1;
  char v81 = v105;
  uint64_t v82 = v93;
  uint64_t v83 = v92;
  *uint64_t v105 = v93;
  v81[1] = v83;
  *((unsigned char *)v81 + 16) = v69;
  v81[3] = v94;
  uint64_t v84 = sub_10017DF08(&qword_100E63EF0);
  sub_10006DF38(v80, (uint64_t)v81 + *(int *)(v84 + 48), &qword_100E63EE8);
  uint64_t v85 = (char *)v81 + *(int *)(v84 + 64);
  uint64_t v86 = v99;
  uint64_t v87 = v98;
  *(void *)uint64_t v85 = v99;
  *((void *)v85 + 1) = v87;
  v85[16] = v78;
  *((void *)v85 + 3) = v100;
  uint64_t v88 = v82;
  uint64_t v89 = v82;
  LOBYTE(v82) = v106;
  sub_100190CC4(v89, v83, v106);
  swift_bridgeObjectRetain();
  sub_100190CC4(v86, v87, v78);
  swift_bridgeObjectRetain();
  sub_100190CC4(v88, v83, v82);
  swift_bridgeObjectRetain();
  sub_100190CC4(v86, v87, v78);
  swift_bridgeObjectRetain();
  sub_100191924(v102, v101, (char)v104);
  swift_bridgeObjectRelease();
  sub_100191924(v86, v87, v78);
  swift_bridgeObjectRelease();
  sub_100178110(v107, &qword_100E63EE8);
  sub_100191924(v88, v83, v82);
  swift_bridgeObjectRelease();
  sub_100191924(v86, v87, v109);
  swift_bridgeObjectRelease();
  sub_100178110(v108, &qword_100E63EE8);
  sub_100191924(v88, v83, v110);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1002073A8()
{
  uint64_t v1 = type metadata accessor for Font.Leading();
  sub_100179C0C();
  uint64_t v3 = v2;
  __chkstk_darwin(v4);
  sub_1001626E0();
  uint64_t v7 = v6 - v5;
  uint64_t v8 = type metadata accessor for Font.TextStyle();
  sub_100179C0C();
  uint64_t v10 = v9;
  __chkstk_darwin(v11);
  sub_1001626E0();
  uint64_t v14 = v13 - v12;
  uint64_t v15 = *(void *)v0;
  char v16 = *(unsigned char *)(v0 + 8);
  sub_100195B7C(v15, v16);
  sub_100149AE8();
  char v18 = v17;
  sub_10018F6D8(v15, v16);
  uint64_t v19 = (unsigned int *)&enum case for Font.TextStyle.body(_:);
  if ((v18 & 1) == 0) {
    uint64_t v19 = (unsigned int *)&enum case for Font.TextStyle.title3(_:);
  }
  (*(void (**)(uint64_t, void, uint64_t))(v10 + 104))(v14, *v19, v8);
  static Font.Weight.medium.getter();
  static Font.system(_:weight:)();
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v14, v8);
  (*(void (**)(uint64_t, void, uint64_t))(v3 + 104))(v7, enum case for Font.Leading.tight(_:), v1);
  uint64_t v20 = Font.leading(_:)();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v7, v1);
  return v20;
}

uint64_t sub_100207564@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for BlendMode();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10017DF08(&qword_100E63EC0);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10017DF08(&qword_100E63EB0);
  uint64_t v12 = v11 - 8;
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v10 = static VerticalAlignment.center.getter();
  *((void *)v10 + 1) = 0x4024000000000000;
  v10[16] = 0;
  uint64_t v15 = sub_10017DF08(&qword_100E63EE0);
  sub_1002069F0(v2, (uint64_t *)&v10[*(int *)(v15 + 44)]);
  LODWORD(v2) = static HierarchicalShapeStyle.secondary.getter();
  sub_10006DF38((uint64_t)v10, (uint64_t)v14, &qword_100E63EC0);
  *(_DWORD *)&v14[*(int *)(v12 + 44)] = v2;
  sub_100178110((uint64_t)v10, &qword_100E63EC0);
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, enum case for BlendMode.plusLighter(_:), v4);
  uint64_t v16 = sub_10017DF08(&qword_100E63E40);
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 16))(a1 + *(int *)(v16 + 36), v7, v4);
  sub_10006DF38((uint64_t)v14, a1, &qword_100E63EB0);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return sub_100178110((uint64_t)v14, &qword_100E63EB0);
}

uint64_t sub_1002077A4(void (*a1)(void))
{
  uint64_t v3 = type metadata accessor for Font.Leading();
  sub_100179C0C();
  uint64_t v5 = v4;
  __chkstk_darwin(v6);
  sub_1001626E0();
  uint64_t v9 = v8 - v7;
  uint64_t v10 = sub_10017DF08(&qword_100E63F80);
  uint64_t v11 = sub_100109308(v10);
  __chkstk_darwin(v11);
  sub_1001626E0();
  uint64_t v14 = v13 - v12;
  id v15 = [self currentDevice];
  id v16 = [v15 userInterfaceIdiom];

  if (v16 == (id)5)
  {
    a1();
    uint64_t v17 = type metadata accessor for Font.Design();
    sub_100164EB8(v17);
    uint64_t v18 = static Font.system(size:weight:design:)();
    sub_100178110(v14, &qword_100E63F80);
  }
  else
  {
    uint64_t v19 = *(void *)v1;
    char v20 = *(unsigned char *)(v1 + 8);
    sub_100195B7C(v19, v20);
    sub_100149AE8();
    uint64_t v21 = sub_10018F6D8(v19, v20);
    ((void (*)(uint64_t))a1)(v21);
    uint64_t v22 = type metadata accessor for Font.Design();
    sub_100164EB8(v22);
    static Font.system(size:weight:design:)();
    sub_100178110(v14, &qword_100E63F80);
    (*(void (**)(uint64_t, void, uint64_t))(v5 + 104))(v9, enum case for Font.Leading.tight(_:), v3);
    uint64_t v18 = Font.leading(_:)();
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v9, v3);
  }
  return v18;
}

double sub_1002079D8()
{
  uint64_t v1 = type metadata accessor for LocationHeaderView(0);
  double result = -10.0;
  if (*(unsigned char *)(v0 + *(int *)(v1 + 64) + 136) == 1)
  {
    id v3 = [self currentDevice];
    id v4 = [v3 userInterfaceIdiom];

    double result = -24.0;
    if (v4 == (id)1) {
      return -12.0;
    }
  }
  return result;
}

uint64_t sub_100207A5C()
{
  uint64_t v1 = type metadata accessor for Font.Leading();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  id v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for Font.TextStyle();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(unsigned char *)(v0 + *(int *)(type metadata accessor for LocationHeaderView(0) + 64) + 136) == 1)
  {
    (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, enum case for Font.TextStyle.title3(_:), v5);
    static Font.Weight.semibold.getter();
    uint64_t v9 = static Font.system(_:weight:)();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  else
  {
    uint64_t v10 = *(void *)v0;
    char v11 = *(unsigned char *)(v0 + 8);
    sub_100195B7C(v10, v11);
    sub_100149AE8();
    char v13 = v12;
    sub_10018F6D8(v10, v11);
    if (v13) {
      uint64_t v14 = (unsigned int *)&enum case for Font.TextStyle.body(_:);
    }
    else {
      uint64_t v14 = (unsigned int *)&enum case for Font.TextStyle.title3(_:);
    }
    (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, *v14, v5);
    static Font.Weight.medium.getter();
    static Font.system(_:weight:)();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, enum case for Font.Leading.tight(_:), v1);
    uint64_t v9 = Font.leading(_:)();
    swift_release();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  return v9;
}

uint64_t sub_100207CEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v35 = a4;
  uint64_t v10 = type metadata accessor for AutomationInfoViewModifier();
  __chkstk_darwin(v10 - 8);
  char v12 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for AutomationInfo(0);
  uint64_t v14 = __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __chkstk_darwin(v14);
  uint64_t v19 = (char *)&v34 - v18;
  __chkstk_darwin(v17);
  uint64_t v21 = (uint64_t *)((char *)&v34 - v20);
  sub_10020814C(v5, a1, a2, a3 & 1, v35, (uint64_t)v36);
  uint64_t v22 = v36[2];
  uint64_t v34 = v36[1];
  uint64_t v35 = v36[0];
  uint64_t v23 = v36[3];
  char v24 = v37;
  double v25 = sub_100207FD8();
  uint64_t v26 = v5 + *(int *)(type metadata accessor for LocationHeaderView(0) + 64);
  uint64_t v27 = *(void *)(v26 + 80);
  void *v21 = *(void *)(v26 + 72);
  v21[1] = v27;
  type metadata accessor for AutomationCellInfo(0);
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  sub_10014D0EC((uint64_t)v21, (uint64_t)v19, (void (*)(void))type metadata accessor for AutomationInfo);
  sub_10014D0EC((uint64_t)v19, (uint64_t)v16, (void (*)(void))type metadata accessor for AutomationInfo);
  swift_bridgeObjectRetain();
  sub_10014CC74((uint64_t)v19, (void (*)(void))type metadata accessor for AutomationInfo);
  *(void *)char v12 = 0;
  *((void *)v12 + 1) = 0xE000000000000000;
  *((void *)v12 + 2) = swift_getKeyPath();
  v12[24] = 0;
  uint64_t v28 = type metadata accessor for AutomationInfoProperty();
  sub_10014DEEC((uint64_t)v16, (uint64_t)&v12[*(int *)(v28 + 24)], (void (*)(void))type metadata accessor for AutomationInfo);
  uint64_t v29 = sub_10017DF08(&qword_100E63F30);
  sub_10014D0EC((uint64_t)v12, a5 + *(int *)(v29 + 36), (void (*)(void))type metadata accessor for AutomationInfoViewModifier);
  uint64_t v31 = v34;
  uint64_t v30 = v35;
  *(void *)a5 = v35;
  *(void *)(a5 + 8) = v31;
  *(void *)(a5 + 16) = v22;
  *(void *)(a5 + 24) = v23;
  *(unsigned char *)(a5 + 32) = v24;
  *(double *)(a5 + 40) = v25;
  *(void *)(a5 + 48) = 0;
  uint64_t v32 = v30;
  sub_10020C79C(v30, v31, v22);
  sub_10014CC74((uint64_t)v12, (void (*)(void))type metadata accessor for AutomationInfoViewModifier);
  sub_10014CC74((uint64_t)v21, (void (*)(void))type metadata accessor for AutomationInfo);
  return sub_10020C7D8(v32, v31, v22);
}

double sub_100207FD8()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for LayoutDirection();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = (char *)v0 + *(int *)(type metadata accessor for LocationHeaderView(0) + 64);
  double v7 = 0.0;
  BOOL v8 = *((void *)v6 + 9) == 11565 && *((void *)v6 + 10) == 0xE200000000000000;
  if (!v8 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
  {
    sub_1001FF23C();
    LayoutDirection.temperatureOffsetDirection.getter();
    double v10 = v9;
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    uint64_t v11 = *v0;
    char v12 = *((unsigned char *)v1 + 8);
    sub_100195B7C(v11, v12);
    sub_100149AE8();
    char v14 = v13;
    sub_10018F6D8(v11, v12);
    double v15 = 12.0;
    if (v14) {
      double v15 = 6.0;
    }
    return v10 * v15;
  }
  return v7;
}

double sub_10020814C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v12 = type metadata accessor for Font.Context();
  uint64_t v71 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  char v14 = (char *)&v60 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = a1 + *(int *)(type metadata accessor for LocationHeaderView(0) + 64);
  uint64_t v16 = *(void *)(v15 + 96);
  if (v16)
  {
    *(void *)&long long v77 = *(void *)(v15 + 88);
    *((void *)&v77 + 1) = v16;
    sub_10014A85C();
    uint64_t v65 = v12;
    swift_bridgeObjectRetain();
    uint64_t v17 = Text.init<A>(_:)();
    int v67 = a4;
    uint64_t v18 = v17;
    uint64_t v69 = a5;
    uint64_t v20 = v19;
    uint64_t v68 = a3;
    uint64_t v66 = a2;
    char v22 = v21 & 1;
    sub_1002077A4((void (*)(void))&static Font.Weight.light.getter);
    uint64_t v63 = Text.font(_:)();
    uint64_t v62 = v23;
    uint64_t v70 = a6;
    char v25 = v24;
    uint64_t v64 = v26;
    swift_release();
    int v61 = v25 & 1;
    sub_100191924(v18, v20, v22);
    swift_bridgeObjectRelease();
    sub_1002077A4((void (*)(void))&static Font.Weight.thin.getter);
    sub_10020CEDC();
    Font.capHeight(in:)();
    swift_release();
    uint64_t v27 = *(void (**)(char *, uint64_t))(v71 + 8);
    uint64_t v28 = v65;
    v27(v14, v65);
    sub_1002077A4((void (*)(void))&static Font.Weight.light.getter);
    sub_10020CEDC();
    Font.capHeight(in:)();
    swift_release();
    v27(v14, v28);
    uint64_t v29 = v63;
    uint64_t v30 = v62;
    char v31 = v61;
    uint64_t v32 = Text.baselineOffset(_:)();
    uint64_t v34 = v33;
    char v36 = v35 & 1;
    sub_100191924(v29, v30, v31);
    swift_bridgeObjectRelease();
    static Color.black.getter();
    Color.opacity(_:)();
    swift_release();
    uint64_t v37 = Text.shadow(color:radius:x:y:)();
    uint64_t v39 = v38;
    char v41 = v40;
    swift_release();
    sub_100191924(v32, v34, v36);
    swift_bridgeObjectRelease();
    uint64_t v42 = static Text.+ infix(_:_:)();
    uint64_t v44 = v43;
    uint64_t v46 = v45;
    uint64_t v48 = v47 & 1;
    uint64_t v49 = v39;
    a6 = v70;
    sub_100191924(v37, v49, v41 & 1);
    swift_bridgeObjectRelease();
    uint64_t v72 = v42;
    uint64_t v73 = v44;
    uint64_t v74 = v48;
    uint64_t v75 = v46;
    char v76 = 0;
  }
  else
  {
    static Color.black.getter();
    Color.opacity(_:)();
    swift_release();
    uint64_t v50 = Text.shadow(color:radius:x:y:)();
    uint64_t v52 = v51;
    char v54 = v53;
    uint64_t v56 = v55;
    swift_release();
    uint64_t v72 = v50;
    uint64_t v73 = v52;
    uint64_t v74 = v54 & 1;
    uint64_t v75 = v56;
    char v76 = 1;
  }
  _ConditionalContent<>.init(storage:)();
  double result = *(double *)&v77;
  long long v58 = v78;
  char v59 = v79;
  *(_OWORD *)a6 = v77;
  *(_OWORD *)(a6 + 16) = v58;
  *(unsigned char *)(a6 + 32) = v59;
  return result;
}

uint64_t sub_100208604(uint64_t a1)
{
  uint64_t v2 = sub_10017DF08(&qword_100E63F88);
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for TemperatureHighLowTextVertical();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  BOOL v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(unsigned char *)(a1 + *(int *)(type metadata accessor for LocationHeaderView(0) + 64) + 136) == 1)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    TemperatureHighLowTextVertical.init(highTemperature:lowTemperature:showNumericOnlyHighLow:scaleFactor:additionalSpacing:)();
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v4, v8, v5);
    swift_storeEnumTagMultiPayload();
    sub_1000E7420((uint64_t)&unk_100E63F90);
    _ConditionalContent<>.init(storage:)();
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  else
  {
    *(void *)uint64_t v4 = sub_100201F30();
    *((void *)v4 + 1) = v10;
    v4[16] = v11 & 1;
    *((void *)v4 + 3) = v12;
    swift_storeEnumTagMultiPayload();
    sub_1000E7420((uint64_t)&unk_100E63F90);
    return _ConditionalContent<>.init(storage:)();
  }
}

void sub_100208894(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, unsigned __int8 a11, uint64_t a12)
{
  uint64_t v31 = a5;
  uint64_t v32 = a6;
  uint64_t v14 = type metadata accessor for DisplayMetrics();
  __chkstk_darwin(v14 - 8);
  uint64_t v16 = (uint64_t *)((char *)&v25 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v17 = sub_10017DF08(&qword_100E63DB8);
  __chkstk_darwin(v17 - 8);
  uint64_t v19 = (char *)&v25 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000FDAD8();
  if (v20)
  {
    uint64_t v30 = a8;
    char v21 = sub_100203B40();
    sub_1002060B8();
    if (v21)
    {
      type metadata accessor for LocationHeaderView(0);
      uint64_t v22 = type metadata accessor for Text.WritingMode();
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v19, 1, 1, v22);
      Text.Measurements.size(of:in:writingMode:)();
      sub_100178110((uint64_t)v19, &qword_100E63DB8);
      sub_1000CF9D0();
    }
    else
    {
      uint64_t v29 = a12;
      int v26 = a11;
      uint64_t v27 = a10;
      uint64_t v25 = a9;
      uint64_t v28 = type metadata accessor for LocationHeaderView(0);
      uint64_t v23 = type metadata accessor for Text.WritingMode();
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v19, 1, 1, v23);
      Text.Measurements.size(of:in:writingMode:)();
      sub_100178110((uint64_t)v19, &qword_100E63DB8);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v19, 1, 1, v23);
      Text.Measurements.size(of:in:writingMode:)();
      sub_100178110((uint64_t)v19, &qword_100E63DB8);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v19, 1, 1, v23);
      Text.Measurements.size(of:in:writingMode:)();
      sub_100178110((uint64_t)v19, &qword_100E63DB8);
      uint64_t v24 = v28;
      sub_1001EFFBC();
      sub_100203C48(v16, *(void *)(v12 + *(int *)(v24 + 76) + 24) != 0);
      sub_10014CC74((uint64_t)v16, (void (*)(void))type metadata accessor for DisplayMetrics);
    }
  }
}

uint64_t sub_100208BCC()
{
  uint64_t v1 = type metadata accessor for DisplayMetrics();
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (uint64_t *)((char *)&v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v4 = type metadata accessor for LocationHeaderView(0);
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v8 = *(unsigned __int8 *)(v0 + *(int *)(v5 + 64) + 138);
  sub_10014D0EC(v0, (uint64_t)v7, (void (*)(void))type metadata accessor for LocationHeaderView);
  if (v8 == 1)
  {
    sub_10014CC74((uint64_t)v7, (void (*)(void))type metadata accessor for LocationHeaderView);
LABEL_5:
    sub_1001EFFBC();
    uint64_t v14 = sub_1000E71D0(v3);
    sub_10014CC74((uint64_t)v3, (void (*)(void))type metadata accessor for DisplayMetrics);
    return v14;
  }
  double v9 = &v7[*(int *)(v4 + 44)];
  uint64_t v10 = *(void *)v9;
  char v11 = v9[8];
  sub_100195B7C(*(void *)v9, v11);
  sub_100149AE8();
  char v13 = v12;
  sub_10018F6D8(v10, v11);
  sub_10014CC74((uint64_t)v7, (void (*)(void))type metadata accessor for LocationHeaderView);
  if ((v13 & 1) == 0) {
    goto LABEL_5;
  }
  return 0;
}

uint64_t sub_100208D90@<X0>(uint64_t (*a1)(uint64_t a1)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v66 = a1;
  uint64_t v74 = a2;
  uint64_t v3 = type metadata accessor for BackgroundModifier(0);
  uint64_t v4 = v3 - 8;
  uint64_t v73 = *(void *)(v3 - 8);
  uint64_t v72 = *(void *)(v73 + 64);
  __chkstk_darwin(v3);
  uint64_t v71 = (char *)&v61 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v79 = type metadata accessor for RoundedCornerStyle();
  *(void *)&long long v80 = *(void *)(v79 - 8);
  __chkstk_darwin(v79);
  long long v77 = (char *)&v61 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v78 = type metadata accessor for LocationComponentCornerRadiusConfiguration(0) - 8;
  uint64_t v7 = __chkstk_darwin(v78);
  char v76 = (char *)&v61 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v75 = (char *)&v61 - v9;
  uint64_t v10 = sub_10017DF08(&qword_100E84318);
  uint64_t v11 = v10 - 8;
  __chkstk_darwin(v10);
  char v13 = (char *)&v61 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_10017DF08(&qword_100E84320);
  uint64_t v15 = v14 - 8;
  __chkstk_darwin(v14);
  uint64_t v64 = (uint64_t)&v61 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = sub_10017DF08(&qword_100E84328) - 8;
  __chkstk_darwin(v67);
  uint64_t v65 = (uint64_t)&v61 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v70 = sub_10017DF08(&qword_100E84330) - 8;
  __chkstk_darwin(v70);
  uint64_t v69 = (uint64_t)&v61 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = (long long *)(v2 + *(int *)(v4 + 40));
  uint64_t v68 = v2;
  uint64_t v21 = *((void *)v19 + 1);
  uint64_t v22 = *((void *)v19 + 2);
  uint64_t v23 = *((void *)v19 + 3);
  uint64_t v24 = *((void *)v19 + 4);
  uint64_t v25 = *((void *)v19 + 5);
  char v26 = *((unsigned char *)v19 + 48);
  uint64_t v27 = *((void *)v19 + 7);
  *(void *)&long long v81 = *(void *)v19;
  uint64_t v20 = v81;
  *((void *)&v81 + 1) = v21;
  *(void *)&long long v82 = v22;
  *((void *)&v82 + 1) = v23;
  *(void *)&long long v83 = v24;
  *((void *)&v83 + 1) = v25;
  char v84 = v26;
  uint64_t v85 = v27;
  uint64_t v28 = sub_10017DF08(&qword_100E84338);
  State.wrappedValue.getter();
  uint64_t v29 = v89;
  uint64_t v30 = sub_10017DF08(&qword_100E84340);
  (*(void (**)(char *, uint64_t (*)(uint64_t), uint64_t))(*(void *)(v30 - 8) + 16))(v13, v66, v30);
  *(void *)&v13[*(int *)(v11 + 44)] = v29;
  *(void *)&long long v81 = v20;
  *((void *)&v81 + 1) = v21;
  *(void *)&long long v82 = v22;
  *((void *)&v82 + 1) = v23;
  *(void *)&long long v83 = v24;
  *((void *)&v83 + 1) = v25;
  char v84 = v26;
  uint64_t v85 = v27;
  uint64_t v63 = v28;
  State.wrappedValue.getter();
  uint64_t v31 = v90;
  uint64_t v32 = v64;
  sub_1005EFB58((uint64_t)v13, v64, &qword_100E84318);
  uint64_t v33 = (void *)(v32 + *(int *)(v15 + 44));
  uint64_t v34 = v32;
  *uint64_t v33 = 0;
  v33[1] = v31;
  sub_10017DF4C((uint64_t)v13, &qword_100E84318);
  *(void *)&long long v81 = v20;
  *((void *)&v81 + 1) = v21;
  *(void *)&long long v82 = v22;
  *((void *)&v82 + 1) = v23;
  *(void *)&long long v83 = v24;
  *((void *)&v83 + 1) = v25;
  char v84 = v26;
  uint64_t v85 = v27;
  State.wrappedValue.getter();
  sub_1005D284C();
  uint64_t v66 = type metadata accessor for LocationComponentCornerRadiusConfiguration;
  sub_1001F75CC();
  char v35 = v76;
  sub_1005D284C();
  char v36 = &v35[*(int *)(v78 + 28)];
  uint64_t v37 = *(void (**)(char *, char *, uint64_t))(v80 + 32);
  *(void *)&long long v80 = v80 + 32;
  uint64_t v62 = v37;
  v37(v77, v36, v79);
  Path.init(roundedRect:cornerRadius:style:)();
  long long v61 = v91;
  uint64_t v38 = v92;
  uint64_t v39 = v93;
  LOBYTE(v28) = v94;
  uint64_t v40 = v34;
  uint64_t v41 = v34;
  uint64_t v42 = v65;
  sub_1005EFB58(v41, v65, &qword_100E84320);
  uint64_t v43 = v42 + *(int *)(v67 + 44);
  *(_OWORD *)uint64_t v43 = v61;
  *(void *)(v43 + 16) = v38;
  *(void *)(v43 + 24) = v39;
  *(unsigned char *)(v43 + 32) = v28;
  *(_WORD *)(v43 + 33) = 256;
  sub_10017DF4C(v40, &qword_100E84320);
  char v44 = *((unsigned char *)v19 + 48);
  uint64_t v45 = *((void *)v19 + 7);
  long long v46 = v19[1];
  long long v81 = *v19;
  long long v82 = v46;
  long long v83 = v19[2];
  char v84 = v44;
  uint64_t v85 = v45;
  State.wrappedValue.getter();
  sub_1005D284C();
  sub_1001F75CC();
  char v47 = v76;
  sub_1005D284C();
  v62(v77, &v47[*(int *)(v78 + 28)], v79);
  Path.init(roundedRect:cornerRadius:style:)();
  StrokeStyle.init(lineWidth:lineCap:lineJoin:miterLimit:dash:dashPhase:)();
  Path.strokedPath(_:)();
  long long v80 = v86;
  uint64_t v48 = v87;
  uint64_t v49 = v88;
  LOBYTE(v13) = v89;
  sub_10020CE78((uint64_t)&v81);
  sub_10020C4D4((uint64_t)v95);
  static Color.white.getter();
  uint64_t v50 = Color.opacity(_:)();
  swift_release();
  uint64_t v51 = static Alignment.center.getter();
  uint64_t v53 = v52;
  uint64_t v54 = v69;
  sub_1005EFB58(v42, v69, &qword_100E84328);
  uint64_t v55 = v54 + *(int *)(v70 + 44);
  *(_OWORD *)uint64_t v55 = v80;
  *(void *)(v55 + 16) = v48;
  *(void *)(v55 + 24) = v49;
  *(unsigned char *)(v55 + 32) = (_BYTE)v13;
  *(void *)(v55 + 40) = v50;
  *(_WORD *)(v55 + 48) = 256;
  *(void *)(v55 + 56) = v51;
  *(void *)(v55 + 64) = v53;
  sub_10017DF4C(v42, &qword_100E84328);
  sub_1001EC0BC();
  uint64_t v56 = swift_allocObject();
  sub_1005D8BD8();
  sub_1001EC0BC();
  uint64_t v57 = swift_allocObject();
  sub_1005D8BD8();
  uint64_t v58 = v74;
  sub_1005EFB58(v54, v74, &qword_100E84330);
  char v59 = (double (**)())(v58 + *(int *)(sub_10017DF08(&qword_100E84348) + 36));
  *char v59 = sub_10003D010;
  v59[1] = (double (*)())v56;
  v59[2] = (double (*)())sub_1005EEC70;
  v59[3] = (double (*)())v57;
  return sub_10017DF4C(v54, &qword_100E84330);
}

__n128 initializeWithTake for ConfiguredUnitsState(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t type metadata accessor for LocationComponentContainerAccessibilityModifier(uint64_t a1)
{
  return sub_10018678C(a1, (uint64_t *)&unk_100E82DB0);
}

uint64_t type metadata accessor for PinningHeaderModifier(uint64_t a1)
{
  return sub_10018678C(a1, qword_100E84158);
}

uint64_t type metadata accessor for BackgroundModifier(uint64_t a1)
{
  return sub_10018678C(a1, qword_100E83F78);
}

uint64_t type metadata accessor for LocationComponentContainerBackgroundPaddingModifier(uint64_t a1)
{
  return sub_10018678C(a1, qword_100E840C8);
}

uint64_t type metadata accessor for LocationComponentBackground(uint64_t a1)
{
  return sub_10018678C(a1, qword_100E84018);
}

uint64_t type metadata accessor for ComputeAppropriateLocationComponentHeaderViewModelModifier(uint64_t a1)
{
  return sub_10018678C(a1, qword_100E7AFD8);
}

void sub_10020987C()
{
  sub_100162EA0();
  uint64_t v35 = v2;
  uint64_t v3 = type metadata accessor for LocationComponentContainerViewModel();
  uint64_t v4 = sub_100109308(v3);
  __chkstk_darwin(v4);
  sub_100109314();
  uint64_t v34 = v5;
  uint64_t v6 = type metadata accessor for ComputeAppropriateLocationComponentHeaderViewModelModifier(0);
  uint64_t v7 = (int *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for LocationComponentContainerView(0);
  uint64_t v11 = sub_100164920(v10);
  __chkstk_darwin(v11);
  uint64_t v12 = type metadata accessor for PerformLocationComponentHeaderInputModelAction();
  __chkstk_darwin(v12);
  sub_100162F18();
  uint64_t v13 = sub_10017DF08(&qword_100E82B38);
  uint64_t v14 = sub_100109308(v13);
  __chkstk_darwin(v14);
  sub_10012B938();
  uint64_t v15 = sub_10017DF08(&qword_100E82B40);
  uint64_t v16 = v15 - 8;
  __chkstk_darwin(v15);
  sub_100109314();
  uint64_t v32 = v17;
  sub_100209D20(v0);
  uint64_t KeyPath = swift_getKeyPath();
  sub_1001EC0BC();
  uint64_t v18 = swift_allocObject();
  sub_1005D8BD8();
  UUID.init()();
  *uint64_t v1 = sub_1005D8CA0;
  v1[1] = (uint64_t (*)())v18;
  uint64_t v19 = v32;
  uint64_t v20 = (uint64_t *)(v32 + *(int *)(v16 + 44));
  sub_10017DF08(&qword_100E82B48);
  sub_1001EC0BC();
  uint64_t *v20 = KeyPath;
  sub_1005EFB58(v0, v19, &qword_100E82B38);
  sub_1001F75CC();
  uint64_t v21 = sub_10012B5E8();
  sub_10017DF4C(v21, v22);
  sub_1001EC0BC();
  uint64_t v23 = swift_getKeyPath();
  sub_1005D8BD8();
  Text.Measurements.init()();
  uint64_t v24 = (uint64_t *)&v9[v7[8]];
  *uint64_t v24 = swift_getKeyPath();
  sub_10017DF08(&qword_100E63BC8);
  swift_storeEnumTagMultiPayload();
  uint64_t v25 = &v9[v7[9]];
  *(void *)uint64_t v25 = swift_getKeyPath();
  v25[8] = 0;
  char v26 = &v9[v7[10]];
  *(void *)char v26 = swift_getKeyPath();
  *(_OWORD *)(v26 + 8) = 0u;
  *(_OWORD *)(v26 + 24) = 0u;
  *(_OWORD *)(v26 + 40) = 0u;
  *(_OWORD *)(v26 + 56) = 0u;
  v26[72] = 0;
  uint64_t v27 = &v9[v7[11]];
  *(void *)uint64_t v27 = v23;
  *((_WORD *)v27 + 4) = 0;
  uint64_t v28 = &v9[v7[12]];
  *(void *)uint64_t v28 = swift_getKeyPath();
  v28[8] = 0;
  uint64_t v29 = &v9[v7[13]];
  *(void *)uint64_t v29 = swift_getKeyPath();
  v29[8] = 0;
  uint64_t v30 = (uint64_t *)&v9[v7[14]];
  *uint64_t v30 = swift_getKeyPath();
  sub_10017DF08(&qword_100E62CB8);
  swift_storeEnumTagMultiPayload();
  uint64_t v31 = &v9[v7[15]];
  *(void *)uint64_t v31 = swift_getKeyPath();
  *((_WORD *)v31 + 4) = 0;
  sub_1005EFB58(v19, v35, &qword_100E82B40);
  sub_10017DF08(&qword_100E82B50);
  sub_1005D8BD8();
  sub_10017DF4C(v19, &qword_100E82B40);
  sub_100162694();
}

uint64_t sub_100209D20@<X0>(uint64_t a1@<X8>)
{
  v28[1] = a1;
  uint64_t v29 = sub_10017DF08(&qword_100E82B58);
  __chkstk_darwin(v29);
  uint64_t v2 = (char *)v28 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_10017DF08(&qword_100E82B60);
  __chkstk_darwin(v30);
  uint64_t v4 = (char *)v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10017DF08(&qword_100E82B68);
  uint64_t v6 = __chkstk_darwin(v5);
  uint64_t v8 = (char *)v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)v28 - v9;
  uint64_t v11 = type metadata accessor for LocationComponentContainerView(0);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for LocationComponentViewModel();
  __chkstk_darwin(v14);
  type metadata accessor for LocationComponentContainerViewModel();
  sub_1001EC0BC();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  sub_1001F75CC();
  sub_1001EC0BC();
  if (EnumCaseMultiPayload != 5)
  {
    sub_1001F75CC();
    goto LABEL_8;
  }
  uint64_t v16 = &v13[*(int *)(v11 + 108)];
  uint64_t v17 = *(void *)v16;
  char v18 = v16[8];
  sub_100195B7C(*(void *)v16, v18);
  sub_100147CF4();
  char v20 = v19;
  sub_10018F6D8(v17, v18);
  sub_1001F75CC();
  if (v20)
  {
LABEL_8:
    sub_10020A160((uint64_t)v4);
    uint64_t v25 = &qword_100E82B60;
    sub_1005EFB58((uint64_t)v4, (uint64_t)v2, &qword_100E82B60);
    swift_storeEnumTagMultiPayload();
    sub_10020CD50();
    sub_10020C720();
    _ConditionalContent<>.init(storage:)();
    uint64_t v26 = (uint64_t)v4;
    return sub_10017DF4C(v26, v25);
  }
  id v21 = [self currentDevice];
  id v22 = [v21 userInterfaceIdiom];

  sub_10020A160((uint64_t)v4);
  if (v22 == (id)1) {
    uint64_t v23 = 0x4000000000000000;
  }
  else {
    uint64_t v23 = 0x3FF0000000000000;
  }
  sub_1005EFB58((uint64_t)v4, (uint64_t)v8, &qword_100E82B60);
  uint64_t v24 = &v8[*(int *)(v5 + 36)];
  *(void *)uint64_t v24 = v23;
  *((_WORD *)v24 + 4) = 0;
  sub_10017DF4C((uint64_t)v4, &qword_100E82B60);
  uint64_t v25 = &qword_100E82B68;
  sub_10024D364((uint64_t)v8, (uint64_t)v10, &qword_100E82B68);
  sub_1005EFB58((uint64_t)v10, (uint64_t)v2, &qword_100E82B68);
  swift_storeEnumTagMultiPayload();
  sub_10020CD50();
  sub_10020C720();
  _ConditionalContent<>.init(storage:)();
  uint64_t v26 = (uint64_t)v10;
  return sub_10017DF4C(v26, v25);
}

uint64_t sub_10020A160@<X0>(uint64_t a1@<X8>)
{
  uint64_t v91 = a1;
  uint64_t v89 = type metadata accessor for AutomationInfo(0);
  __chkstk_darwin(v89);
  uint64_t v75 = (uint64_t *)((char *)&v66 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v77 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  uint64_t v3 = __chkstk_darwin(v77);
  uint64_t v74 = (uint64_t)&v66 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v66 - v5;
  uint64_t v78 = type metadata accessor for LocationComponentContainerView(0);
  uint64_t v72 = *(void *)(v78 - 8);
  uint64_t v7 = *(void *)(v72 + 64);
  __chkstk_darwin(v78);
  uint64_t v90 = (char *)&v66 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (int *)sub_10017DF08(&qword_100E82B80);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v66 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v76 = sub_10017DF08(&qword_100E79B08);
  __chkstk_darwin(v76);
  uint64_t v80 = (uint64_t)&v66 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10017DF08(&qword_100E79B10);
  __chkstk_darwin(v12 - 8);
  long long v81 = (char *)&v66 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v79 = sub_10017DF08(&qword_100E7EB18);
  __chkstk_darwin(v79);
  uint64_t v83 = (uint64_t)&v66 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v82 = sub_10017DF08(&qword_100E7EB08);
  __chkstk_darwin(v82);
  uint64_t v87 = (uint64_t)&v66 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_10017DF08(&qword_100E7EAF8);
  __chkstk_darwin(v16 - 8);
  uint64_t v88 = (uint64_t)&v66 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v85 = sub_10017DF08(&qword_100E7EAC8);
  __chkstk_darwin(v85);
  uint64_t v86 = (uint64_t)&v66 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_10017DF08(&qword_100E82B60);
  __chkstk_darwin(v19 - 8);
  char v84 = (char *)&v66 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = type metadata accessor for LocationComponentViewModel();
  uint64_t v22 = __chkstk_darwin(v21);
  uint64_t v23 = __chkstk_darwin(v22);
  uint64_t v25 = (char *)&v66 - v24;
  __chkstk_darwin(v23);
  type metadata accessor for LocationComponentContainerViewModel();
  sub_1001EC0BC();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    HIDWORD(v73) = 6;
  }
  else
  {
    sub_1001EC0BC();
    HIDWORD(v73) = sub_1000273A4((uint64_t)v25);
  }
  sub_1001F75CC();
  sub_1001EC0BC();
  HIDWORD(v67) = ((swift_getEnumCaseMultiPayload() - 1) & 0xFFFFFFF7) == 0;
  sub_1001F75CC();
  uint64_t v71 = type metadata accessor for LocationComponentContainerView;
  uint64_t v26 = v1;
  sub_1001EC0BC();
  uint64_t v27 = *(unsigned __int8 *)(v72 + 80);
  uint64_t v70 = ((v27 + 16) & ~v27) + v7;
  uint64_t v72 = (v27 + 16) & ~v27;
  uint64_t v69 = v27 | 7;
  uint64_t v28 = swift_allocObject();
  uint64_t v68 = type metadata accessor for LocationComponentContainerView;
  sub_1005D8BD8();
  *(void *)uint64_t v10 = swift_getKeyPath();
  v10[8] = 0;
  uint64_t v29 = &v10[v8[13]];
  LOBYTE(v92) = 0;
  State.init(wrappedValue:)();
  uint64_t v30 = v94;
  *uint64_t v29 = v93;
  *((void *)v29 + 1) = v30;
  uint64_t v31 = type metadata accessor for Date();
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v6, 1, 1, v31);
  sub_1005EFB58((uint64_t)v6, v74, (uint64_t *)&unk_100E73CA0);
  State.init(wrappedValue:)();
  sub_10017DF4C((uint64_t)v6, (uint64_t *)&unk_100E73CA0);
  sub_10020AB78(v26, (uint64_t)&v10[v8[10]]);
  uint64_t v32 = (uint64_t (**)(char))&v10[v8[11]];
  char *v32 = sub_1005D9848;
  v32[1] = (uint64_t (*)(char))v28;
  v10[9] = BYTE4(v67);
  uint64_t v33 = &v10[v8[12]];
  *(_OWORD *)uint64_t v33 = xmmword_100C470C0;
  v33[16] = 0;
  *((void *)v33 + 3) = _swiftEmptyArrayStorage;
  uint64_t v34 = (uint64_t *)(v26 + *(int *)(v78 + 120));
  uint64_t v66 = v26;
  uint64_t v36 = *v34;
  uint64_t v35 = v34[1];
  uint64_t v93 = v36;
  uint64_t v94 = v35;
  sub_10017DF08(&qword_100E82B88);
  State.wrappedValue.getter();
  uint64_t v37 = *(void *)(v92 + 16);
  swift_retain();
  swift_release();
  uint64_t v38 = v80;
  sub_1005EFB58((uint64_t)v10, v80, &qword_100E82B80);
  *(void *)(v38 + *(int *)(v76 + 36)) = v37;
  sub_10017DF4C((uint64_t)v10, &qword_100E82B80);
  uint64_t v39 = sub_1001F26C0();
  uint64_t v40 = v75;
  uint64_t *v75 = v39;
  v40[1] = v41;
  *((unsigned char *)v40 + 16) = 0;
  swift_storeEnumTagMultiPayload();
  uint64_t v42 = (uint64_t)v81;
  sub_10020C098((uint64_t)v40, v43, v44, v45, v46, v47, v48, v49, v66, v67, (uint64_t)v68, v69, v70, (uint64_t)v71, v72, v73, v74, (uint64_t)v75, v76,
    v77);
  sub_1001F75CC();
  sub_10017DF4C(v38, &qword_100E79B08);
  uint64_t v50 = sub_1001F26C0();
  uint64_t v52 = v51;
  uint64_t v53 = v83;
  sub_1005EFB58(v42, v83, &qword_100E79B10);
  uint64_t v54 = (uint64_t *)(v53 + *(int *)(v79 + 52));
  *uint64_t v54 = v50;
  v54[1] = v52;
  sub_10017DF4C(v42, &qword_100E79B10);
  sub_1001EC0BC();
  uint64_t v55 = swift_allocObject();
  sub_1005D8BD8();
  uint64_t v56 = v87;
  sub_1005EFB58(v53, v87, &qword_100E7EB18);
  uint64_t v57 = (uint64_t (**)())(v56 + *(int *)(v82 + 36));
  char *v57 = sub_1005D98A4;
  v57[1] = (uint64_t (*)())v55;
  sub_10017DF4C(v53, &qword_100E7EB18);
  sub_1001EC0BC();
  uint64_t v58 = swift_allocObject();
  sub_1005D8BD8();
  uint64_t v59 = v88;
  sub_10020C0C0((uint64_t)sub_1005D98EC, v58, v88, 0.5, 1.0);
  swift_release();
  sub_10017DF4C(v56, &qword_100E7EB08);
  uint64_t v61 = qword_100E82698;
  uint64_t v60 = off_100E826A0;
  uint64_t v62 = v86;
  sub_1005EFB58(v59, v86, &qword_100E7EAF8);
  uint64_t v63 = (uint64_t *)(v62 + *(int *)(v85 + 36));
  uint64_t *v63 = v61;
  v63[1] = (uint64_t)v60;
  swift_bridgeObjectRetain();
  sub_10017DF4C(v59, &qword_100E7EAF8);
  uint64_t v64 = (uint64_t)v84;
  sub_10020C2B0(BYTE4(v73));
  sub_10017DF4C(v62, &qword_100E7EAC8);
  return sub_10024D364(v64, v91, &qword_100E82B60);
}

uint64_t sub_10020AB78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for LocationComponentContainerAccessibilityModifier(0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (uint64_t *)((char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = type metadata accessor for LocationComponentContainerView(0);
  __chkstk_darwin(v7 - 8);
  uint64_t v8 = sub_10017DF08(&qword_100E82BA8);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10017DF08(&qword_100E82BB0);
  uint64_t v12 = v11 - 8;
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v10 = static HorizontalAlignment.leading.getter();
  *((void *)v10 + 1) = 0;
  v10[16] = 0;
  uint64_t v15 = sub_10017DF08(&qword_100E82BB8);
  sub_10020AE60(a1, (uint64_t)&v10[*(int *)(v15 + 44)]);
  sub_1001EC0BC();
  uint64_t v16 = swift_allocObject();
  sub_1005D8BD8();
  uint64_t v17 = static Alignment.center.getter();
  uint64_t v19 = v18;
  sub_1005EFB58((uint64_t)v10, (uint64_t)v14, &qword_100E82BA8);
  uint64_t v20 = (uint64_t (**)())&v14[*(int *)(v12 + 44)];
  uint64_t *v20 = sub_10003D060;
  v20[1] = (uint64_t (*)())v16;
  v20[2] = (uint64_t (*)())v17;
  v20[3] = v19;
  sub_10017DF4C((uint64_t)v10, &qword_100E82BA8);
  *uint64_t v6 = swift_getKeyPath();
  sub_10017DF08(&qword_100E829F0);
  swift_storeEnumTagMultiPayload();
  sub_10017DF08(&qword_100E82BC0);
  sub_1005D8BD8();
  return sub_10024D364((uint64_t)v14, a2, &qword_100E82BB0);
}

uint64_t sub_10020AE60@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v27 = a1;
  uint64_t v30 = a2;
  uint64_t v28 = sub_10017DF08(&qword_100E82BE8);
  __chkstk_darwin(v28);
  uint64_t v3 = (char *)&v27 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = sub_10017DF08(&qword_100E82BF0);
  __chkstk_darwin(v29);
  uint64_t v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10017DF08(&qword_100E82BF8);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v27 - v10;
  uint64_t v12 = type metadata accessor for ComponentHeaderHeightModifier(0);
  uint64_t v13 = __chkstk_darwin(v12 - 8);
  uint64_t v15 = (uint64_t *)((char *)&v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v13);
  uint64_t v16 = sub_10017DF08(&qword_100E82C00);
  uint64_t v17 = __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v27 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v21 = (char *)&v27 - v20;
  *uint64_t v15 = swift_getKeyPath();
  sub_10017DF08(&qword_100E829F0);
  swift_storeEnumTagMultiPayload();
  sub_1005D8BD8();
  sub_1001EC0BC();
  *(void *)uint64_t v19 = 0;
  v19[8] = 1;
  sub_1001F75CC();
  sub_10024D364((uint64_t)v19, (uint64_t)v21, &qword_100E82C00);
  sub_10020B29C((uint64_t)v5);
  sub_1005EFB58((uint64_t)v5, (uint64_t)v3, &qword_100E82BF0);
  swift_storeEnumTagMultiPayload();
  sub_10017DF08(&qword_100E82C08);
  uint64_t v22 = sub_10018C6DC(&qword_100E82C10);
  unint64_t v23 = sub_10020C814();
  uint64_t v31 = v22;
  uint64_t v32 = &type metadata for Bool;
  unint64_t v33 = v23;
  uint64_t v34 = &protocol witness table for Bool;
  swift_getOpaqueTypeConformance2();
  sub_10020CDCC();
  _ConditionalContent<>.init(storage:)();
  sub_10017DF4C((uint64_t)v5, &qword_100E82BF0);
  sub_1005EFB58((uint64_t)v21, (uint64_t)v19, &qword_100E82C00);
  sub_1005EFB58((uint64_t)v11, (uint64_t)v9, &qword_100E82BF8);
  uint64_t v24 = v30;
  sub_1005EFB58((uint64_t)v19, v30, &qword_100E82C00);
  uint64_t v25 = sub_10017DF08(&qword_100E82C70);
  sub_1005EFB58((uint64_t)v9, v24 + *(int *)(v25 + 48), &qword_100E82BF8);
  sub_10017DF4C((uint64_t)v11, &qword_100E82BF8);
  sub_10017DF4C((uint64_t)v21, &qword_100E82C00);
  sub_10017DF4C((uint64_t)v9, &qword_100E82BF8);
  return sub_10017DF4C((uint64_t)v19, &qword_100E82C00);
}

uint64_t type metadata accessor for ComponentHeaderHeightModifier(uint64_t a1)
{
  return sub_10018678C(a1, qword_100E83050);
}

uint64_t sub_10020B29C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v27 = a1;
  uint64_t v2 = type metadata accessor for LocationComponentContainerView(0);
  uint64_t v3 = v2 - 8;
  __chkstk_darwin(v2);
  uint64_t v4 = type metadata accessor for LocationComponentContainerViewModel();
  __chkstk_darwin(v4 - 8);
  uint64_t v5 = type metadata accessor for LocationComponentContainerContentView(0);
  uint64_t v6 = (int *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001EC0BC();
  long long v28 = *(_OWORD *)(v1 + *(int *)(v3 + 28));
  sub_1001EC0BC();
  uint64_t v26 = swift_allocObject();
  sub_1005D8BD8();
  type metadata accessor for PagingContentOffsetsStorage();
  sub_10013509C((uint64_t)&unk_100E82C78);
  swift_unknownObjectRetain();
  StateObject.wrappedValue.getter();
  uint64_t v9 = (long long *)(v1 + *(int *)(v3 + 60));
  char v10 = *((unsigned char *)v9 + 16);
  uint64_t v11 = *((void *)v9 + 3);
  long long v29 = *v9;
  char v30 = v10;
  uint64_t v31 = v11;
  sub_10017DF08(&qword_100E82C80);
  State.projectedValue.getter();
  long long v25 = v32;
  uint64_t v12 = v33;
  uint64_t v13 = v34;
  char v14 = v35;
  *(void *)uint64_t v8 = swift_getKeyPath();
  v8[8] = 0;
  *((void *)v8 + 2) = swift_getKeyPath();
  v8[24] = 0;
  sub_1005D8BD8();
  *(_OWORD *)&v8[v6[9]] = v28;
  uint64_t v15 = (void (**)(char, uint64_t))&v8[v6[10]];
  uint64_t v16 = v26;
  *uint64_t v15 = sub_1005DA8B8;
  v15[1] = (void (*)(char, uint64_t))v16;
  uint64_t v17 = (uint64_t *)&v8[v6[11]];
  uint64_t *v17 = ObservedObject.init(wrappedValue:)();
  v17[1] = v18;
  uint64_t v19 = &v8[v6[12]];
  *(_OWORD *)uint64_t v19 = v25;
  *((void *)v19 + 2) = v12;
  *((void *)v19 + 3) = v13;
  v19[32] = v14;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v21 = swift_getKeyPath();
  uint64_t v22 = v27;
  sub_1001EC0BC();
  uint64_t v23 = v22 + *(int *)(sub_10017DF08(&qword_100E82BF0) + 36);
  *(void *)uint64_t v23 = KeyPath;
  *(unsigned char *)(v23 + 8) = 0;
  *(void *)(v23 + 16) = v21;
  *(_WORD *)(v23 + 24) = 0;
  return sub_1001F75CC();
}

uint64_t type metadata accessor for PagingContentOffsetsStorage()
{
  uint64_t result = qword_100E6BA40;
  if (!qword_100E6BA40) {
    return swift_getSingletonMetadata();
  }
  return result;
}

double sub_10020B6B0@<D0>(uint64_t a1@<X8>, double a2@<D0>, double a3@<D1>, double a4@<D2>, double a5@<D3>, double a6@<D4>)
{
  double v47 = a6;
  double v46 = a5;
  double v45 = a4;
  double v44 = a3;
  double v43 = a2;
  uint64_t v7 = type metadata accessor for CoordinateSpace();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  char v10 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for NamedCoordinateSpace();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  char v14 = (char *)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  static CoordinateSpaceProtocol<>.scrollView.getter();
  GeometryProxy.bounds(of:)();
  double v15 = *(double *)v52;
  double v16 = *(double *)&v52[1];
  double v17 = *(double *)&v52[2];
  double v18 = *(double *)&v52[3];
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  sub_10024D364((uint64_t)v52, (uint64_t)v53, &qword_100E64498);
  if (v54) {
    double v19 = 0.0;
  }
  else {
    double v19 = v17;
  }
  if (v54) {
    double v20 = 0.0;
  }
  else {
    double v20 = v18;
  }
  if (v54) {
    double v21 = 0.0;
  }
  else {
    double v21 = v15;
  }
  if (v54) {
    double v22 = 0.0;
  }
  else {
    double v22 = v16;
  }
  GeometryProxy.size.getter();
  CGFloat v42 = v23;
  CGFloat v41 = v24;
  CGFloat v25 = -v22;
  double v26 = v43;
  double v45 = -fmin(-v22 - v43 - v44 + v45, 0.0);
  v55.origin.x = v21;
  v55.origin.y = v22;
  v55.size.width = v19;
  v55.size.height = v20;
  CGRectGetMinY(v55);
  double v27 = v46;
  double v28 = v47;
  CGFloat.clamp(min:max:)();
  double v30 = (v29 - v27) / (v28 - v27);
  v56.origin.x = -v21;
  v56.origin.y = v25;
  v56.size.width = v42;
  v56.size.height = v41;
  double v31 = v26 - CGRectGetMinY(v56);
  if (v31 < 0.0) {
    double v32 = 0.0;
  }
  else {
    double v32 = v31;
  }
  double v33 = sub_10020B9F4() + v32;
  (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, enum case for CoordinateSpace.global(_:), v7);
  GeometryProxy.frameClippedToScrollViews(in:)();
  CGFloat v34 = v48;
  CGFloat v35 = v49;
  CGFloat v36 = v50;
  CGFloat v37 = v51;
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  v57.origin.x = v34;
  v57.origin.y = v35;
  v57.size.width = v36;
  v57.size.height = v37;
  BOOL v38 = CGRectGetHeight(v57) == 0.0;
  double result = v45;
  *(double *)a1 = v45;
  *(double *)(a1 + 8) = v33;
  *(double *)(a1 + 16) = v30;
  *(unsigned char *)(a1 + 24) = v38;
  return result;
}

double sub_10020B9F4()
{
  uint64_t v0 = type metadata accessor for RowModifier(0);
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = type metadata accessor for LocationComponentHeaderMetrics(0);
  uint64_t v2 = __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v11 - v5;
  sub_1005D284C();
  uint64_t v7 = &v6[*(int *)(v1 + 28)];
  double v8 = *(double *)v7;
  char v9 = v7[8];
  sub_1001F75CC();
  sub_1001EC0BC();
  if (v9)
  {
    sub_1005D284C();
    sub_1001F75CC();
    double v8 = *(double *)&v4[*(int *)(v1 + 20)];
  }
  sub_1001F75CC();
  return v8;
}

unint64_t sub_10020BC08()
{
  unint64_t result = qword_100E831B0;
  if (!qword_100E831B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E831B0);
  }
  return result;
}

uint64_t sub_10020BC54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v35 = a1;
  uint64_t v36 = a2;
  uint64_t v4 = sub_10017DF08(&qword_100E644B8);
  uint64_t v5 = v4 - 8;
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = static Alignment.top.getter();
  uint64_t v33 = v8;
  uint64_t KeyPath = swift_getKeyPath();
  long long v9 = v2[3];
  long long v45 = v2[2];
  long long v46 = v9;
  long long v10 = v2[3];
  long long v41 = v2[2];
  long long v42 = v10;
  sub_10017DF08(&qword_100E644C0);
  State.wrappedValue.getter();
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v11 = v41;
  char v12 = BYTE8(v41);
  uint64_t v13 = v42;
  char v14 = BYTE8(v42);
  uint64_t v15 = v43;
  uint64_t v31 = v44;
  long long v37 = v45;
  long long v38 = v46;
  State.wrappedValue.getter();
  uint64_t v16 = v39;
  long long v37 = v45;
  long long v38 = v46;
  State.wrappedValue.getter();
  uint64_t v17 = v40;
  uint64_t v18 = sub_10017DF08(&qword_100E644C8);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v7, v35, v18);
  double v19 = &v7[*(int *)(v5 + 44)];
  *(void *)double v19 = KeyPath;
  v19[8] = 0;
  *((void *)v19 + 2) = v11;
  v19[24] = v12;
  *((void *)v19 + 4) = v13;
  v19[40] = v14;
  uint64_t v20 = v31;
  *((void *)v19 + 6) = v15;
  *((void *)v19 + 7) = v20;
  *((void *)v19 + 8) = 0;
  *((void *)v19 + 9) = v16;
  *((void *)v19 + 10) = v17;
  uint64_t v21 = v33;
  *((void *)v19 + 11) = v34;
  *((void *)v19 + 12) = v21;
  double v22 = (_OWORD *)swift_allocObject();
  long long v23 = v2[1];
  v22[1] = *v2;
  void v22[2] = v23;
  long long v24 = v2[3];
  v22[3] = v2[2];
  v22[4] = v24;
  CGFloat v25 = (_OWORD *)swift_allocObject();
  long long v26 = v3[1];
  v25[1] = *v3;
  v25[2] = v26;
  long long v27 = v3[3];
  v25[3] = v3[2];
  v25[4] = v27;
  uint64_t v28 = v36;
  sub_10006DF38((uint64_t)v7, v36, &qword_100E644B8);
  double v29 = (void *)(v28 + *(int *)(sub_10017DF08(&qword_100E644D0) + 36));
  *double v29 = sub_100213878;
  v29[1] = v22;
  v29[2] = sub_100214B60;
  v29[3] = v25;
  sub_10020BF3C((uint64_t)v3);
  sub_10020BF3C((uint64_t)v3);
  return sub_100178110((uint64_t)v7, &qword_100E644B8);
}

__n128 initializeBufferWithCopyOfBuffer for LocationHeaderViewGradientBackgroundViewModifier.LocationHeaderViewGradientBackgroundGeometry(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t sub_10020BF3C(uint64_t a1)
{
  return a1;
}

uint64_t sub_10020BF68(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 120);
  uint64_t v3 = *(void *)(a1 + 128);
  char v4 = *(unsigned char *)(a1 + 136);
  swift_release();
  swift_release();
  swift_release();
  sub_100191924(v2, v3, v4);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_10020C000(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 144);
  uint64_t v3 = *(void *)(a1 + 152);
  char v4 = *(unsigned char *)(a1 + 160);
  swift_retain();
  swift_retain();
  swift_retain();
  sub_100190CC4(v2, v3, v4);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  return a1;
}

void sub_10020C098(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_10048D1D0(a1, (uint64_t)&unk_100E79B08, (uint64_t)sub_10006DF38, (uint64_t)&unk_100E79B10, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
    a20);
}

uint64_t sub_10020C0C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>, double a5@<D1>)
{
  uint64_t v11 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  uint64_t v12 = __chkstk_darwin(v11);
  char v14 = &v25[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v12);
  uint64_t v16 = &v25[-v15];
  uint64_t v17 = type metadata accessor for TrackExposureModifier();
  uint64_t v18 = v17 - 8;
  __chkstk_darwin(v17);
  uint64_t v20 = (double *)&v25[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  double *v20 = a4;
  v20[1] = a5;
  *((void *)v20 + 2) = a1;
  *((void *)v20 + 3) = a2;
  uint64_t v21 = type metadata accessor for Date();
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v16, 1, 1, v21);
  sub_1005EFB58((uint64_t)v16, (uint64_t)v14, (uint64_t *)&unk_100E73CA0);
  swift_retain();
  State.init(wrappedValue:)();
  sub_10017DF4C((uint64_t)v16, (uint64_t *)&unk_100E73CA0);
  double v22 = (char *)v20 + *(int *)(v18 + 40);
  v25[15] = 0;
  State.init(wrappedValue:)();
  uint64_t v23 = v26;
  *double v22 = v25[16];
  *((void *)v22 + 1) = v23;
  sub_1005EFB58(v5, a3, &qword_100E7EB08);
  sub_10017DF08(&qword_100E7EAF8);
  return sub_1005D8BD8();
}

uint64_t sub_10020C2B0(unsigned __int8 a1)
{
  int v3 = a1;
  sub_10017DF08(&qword_100E7EAC8);
  sub_100162E4C();
  __chkstk_darwin(v4);
  sub_1001626E0();
  uint64_t v7 = v6 - v5;
  sub_10017DF08(&qword_100E7EAD0);
  sub_100162E4C();
  __chkstk_darwin(v8);
  sub_1001626E0();
  uint64_t v11 = v10 - v9;
  uint64_t v12 = sub_10017DF08(&qword_100E7EAD8);
  sub_100162E4C();
  __chkstk_darwin(v13);
  sub_100162F18();
  if (v3 == 6)
  {
    sub_10006DF38(v1, v7, &qword_100E7EAC8);
    sub_10006DF38(v7, v11, &qword_100E7EAC8);
    swift_storeEnumTagMultiPayload();
    sub_100146368((unint64_t *)&qword_100E7EAE0, &qword_100E7EAD8, (void (*)(void))sub_10020C9DC);
    sub_10020C9DC();
    sub_1001A20CC();
    uint64_t v14 = v7;
    uint64_t v15 = &qword_100E7EAC8;
  }
  else
  {
    sub_1001D5750();
    sub_10006DF38(v1, v2, &qword_100E7EAC8);
    memcpy((void *)(v2 + *(int *)(v12 + 36)), __src, 0x62uLL);
    sub_10006DF38(v2, v11, &qword_100E7EAD8);
    swift_storeEnumTagMultiPayload();
    sub_100146368((unint64_t *)&qword_100E7EAE0, &qword_100E7EAD8, (void (*)(void))sub_10020C9DC);
    sub_10020C9DC();
    sub_1001A20CC();
    uint64_t v14 = v2;
    uint64_t v15 = &qword_100E7EAD8;
  }
  return sub_100178110(v14, v15);
}

uint64_t sub_10020C4D4(uint64_t a1)
{
  return a1;
}

uint64_t sub_10020C50C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5)
{
  if (a5 - 2 <= 3) {
    return swift_release();
  }
  return result;
}

unint64_t sub_10020C524()
{
  unint64_t result = qword_100EB81B0;
  if (!qword_100EB81B0)
  {
    sub_10018C6DC(&qword_100EB8190);
    sub_10020C660();
    sub_10020C5A0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB81B0);
  }
  return result;
}

unint64_t sub_10020C5A0()
{
  unint64_t result = qword_100EB81D0;
  if (!qword_100EB81D0)
  {
    sub_10018C6DC(&qword_100EB8148);
    sub_10024D5E4((uint64_t)&unk_100EB81D8);
    sub_10024D5E4((uint64_t)&unk_100EB81E0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB81D0);
  }
  return result;
}

unint64_t sub_10020C660()
{
  unint64_t result = qword_100EB81B8;
  if (!qword_100EB81B8)
  {
    sub_10018C6DC(&qword_100EB8188);
    sub_10024D5E4((uint64_t)&unk_100EB81C0);
    sub_10024D5E4((uint64_t)&unk_100EB81C8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB81B8);
  }
  return result;
}

unint64_t sub_10020C720()
{
  unint64_t result = qword_100E82B78;
  if (!qword_100E82B78)
  {
    sub_10018C6DC(&qword_100E82B60);
    sub_100229868();
    sub_10020C9DC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E82B78);
  }
  return result;
}

uint64_t sub_10020C79C(uint64_t a1, uint64_t a2, char a3)
{
  sub_100190CC4(a1, a2, a3 & 1);

  return swift_bridgeObjectRetain();
}

uint64_t sub_10020C7D8(uint64_t a1, uint64_t a2, char a3)
{
  sub_100191924(a1, a2, a3 & 1);

  return swift_bridgeObjectRelease();
}

unint64_t sub_10020C814()
{
  unint64_t result = qword_100E82C18;
  if (!qword_100E82C18)
  {
    sub_10018C6DC(&qword_100E82C10);
    sub_10022A8F8();
    sub_100227600();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E82C18);
  }
  return result;
}

unint64_t sub_10020C890()
{
  unint64_t result = qword_100E83CD8;
  if (!qword_100E83CD8)
  {
    sub_10018C6DC(&qword_100E83CC8);
    sub_10022AAE0();
    sub_10013509C((uint64_t)&unk_100E83D08);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E83CD8);
  }
  return result;
}

unint64_t sub_10020C93C()
{
  unint64_t result = qword_100E83D10;
  if (!qword_100E83D10)
  {
    sub_10018C6DC(&qword_100E83CB8);
    sub_10022AAE0();
    sub_10024D5E4((uint64_t)&unk_100E83D18);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E83D10);
  }
  return result;
}

unint64_t sub_10020C9DC()
{
  unint64_t result = qword_100E7EAE8;
  if (!qword_100E7EAE8)
  {
    sub_10018C6DC(&qword_100E7EAC8);
    sub_10022AB5C();
    sub_1001246C8(&qword_100E7EA48, &qword_100E7EA50);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E7EAE8);
  }
  return result;
}

unint64_t sub_10020CA7C(uint64_t a1)
{
  unint64_t result = sub_10017DFE0(a1);
  if (!result)
  {
    sub_100172370(0, v4);
    v2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, v1);
  }
  return result;
}

unint64_t sub_10020CAE8()
{
  unint64_t result = qword_100E63E98;
  if (!qword_100E63E98)
  {
    sub_10018C6DC(&qword_100E63E48);
    sub_10020CC34();
    sub_1000E7420((uint64_t)&unk_100E63ED8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E63E98);
  }
  return result;
}

unint64_t sub_10020CB94()
{
  unint64_t result = qword_100E83D98;
  if (!qword_100E83D98)
  {
    sub_10018C6DC(&qword_100E83D88);
    sub_10022C89C();
    sub_10024D5E4((uint64_t)&unk_100E64690);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E83D98);
  }
  return result;
}

unint64_t sub_10020CC34()
{
  unint64_t result = qword_100E63EA0;
  if (!qword_100E63EA0)
  {
    sub_10018C6DC(&qword_100E63E40);
    sub_100007164();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E63EA0);
  }
  return result;
}

unint64_t sub_10020CCB0()
{
  unint64_t result = qword_100E83DD0;
  if (!qword_100E83DD0)
  {
    sub_10018C6DC(&qword_100E83D68);
    sub_100230370();
    sub_10024D5E4((uint64_t)&unk_100E64690);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E83DD0);
  }
  return result;
}

unint64_t sub_10020CD50()
{
  unint64_t result = qword_100E82B70;
  if (!qword_100E82B70)
  {
    sub_10018C6DC(&qword_100E82B68);
    sub_10020C720();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E82B70);
  }
  return result;
}

unint64_t sub_10020CDCC()
{
  unint64_t result = qword_100E82C40;
  if (!qword_100E82C40)
  {
    sub_10018C6DC(&qword_100E82BF0);
    sub_10013509C((uint64_t)&unk_100E82C48);
    sub_100217AD4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E82C40);
  }
  return result;
}

uint64_t sub_10020CE78(uint64_t a1)
{
  return a1;
}

void sub_10020CEA4()
{
}

void sub_10020CEDC()
{
}

uint64_t sub_10020CF10@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  v22[1] = a1;
  uint64_t v24 = a2;
  uint64_t v4 = type metadata accessor for TrackExposureModifier();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  uint64_t v7 = __chkstk_darwin(v4 - 8);
  uint64_t v8 = (char *)v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)v22 - v9;
  uint64_t v23 = sub_10017DF08(&qword_100E9A6E0);
  uint64_t v11 = *(void *)(v23 - 8);
  __chkstk_darwin(v23);
  uint64_t v13 = (char *)v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10020D1F8(v2, (uint64_t)v10);
  unint64_t v14 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v15 = swift_allocObject();
  sub_10020D39C((uint64_t)v10, v15 + v14);
  sub_10017DF08(&qword_100E9A6E8);
  sub_1002275AC();
  View.onScrollVisibilityChange(threshold:_:)();
  swift_release();
  sub_10020D1F8(v2, (uint64_t)v10);
  uint64_t v16 = swift_allocObject();
  sub_10020D39C((uint64_t)v10, v16 + v14);
  sub_10020D1F8(v3, (uint64_t)v8);
  uint64_t v17 = swift_allocObject();
  sub_10020D39C((uint64_t)v8, v17 + v14);
  uint64_t v19 = v23;
  uint64_t v18 = v24;
  (*(void (**)(uint64_t, char *, uint64_t))(v11 + 16))(v24, v13, v23);
  uint64_t v20 = v18 + *(int *)(sub_10017DF08(&qword_100E9A6F8) + 36);
  *(void *)uint64_t v20 = sub_10082DB54;
  *(void *)(v20 + 8) = v16;
  *(void *)(v20 + 16) = sub_10082DB98;
  *(void *)(v20 + 24) = v17;
  *(void *)(v20 + 32) = sub_10021D90C;
  *(void *)(v20 + 40) = 0;
  *(unsigned char *)(v20 + 48) = 0;
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v19);
}

uint64_t sub_10020D1F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TrackExposureModifier();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10020D25C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v6;
  uint64_t v7 = *(int *)(a3 + 28);
  uint64_t v8 = (char *)(a1 + v7);
  uint64_t v9 = (char *)(a2 + v7);
  uint64_t v10 = type metadata accessor for Date();
  swift_retain();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v10))
  {
    uint64_t v11 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v8, 0, 1, v10);
  }
  uint64_t v12 = sub_10017DF08(&qword_100E7DDF8);
  *(void *)&v8[*(int *)(v12 + 28)] = *(void *)&v9[*(int *)(v12 + 28)];
  uint64_t v13 = *(int *)(a3 + 32);
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  *(unsigned char *)uint64_t v14 = *(unsigned char *)v15;
  *(void *)(v14 + 8) = *(void *)(v15 + 8);
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_10020D39C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TrackExposureModifier();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for TrackExposureModifier()
{
  uint64_t result = qword_100E9A698;
  if (!qword_100E9A698) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10020D448()
{
  long long v38 = v0 + 7;
  uint64_t v2 = v0[24];
  uint64_t v1 = v0[25];
  uint64_t v4 = v0[22];
  uint64_t v3 = v0[23];
  uint64_t v5 = v0[15];
  uint64_t v6 = v0[13];
  *(id *)(v0[12] + OBJC_IVAR____TtC7Weather39WeatherConditionBackgroundStoreObserver_logger);
  OSSignpostID.init(log:)();
  static os_signpost_type_t.begin.getter();
  os_signpost(_:dso:log:name:signpostID:)();
  uint64_t v7 = *(void *)(v6 + 64);
  sub_1001665C0(v7 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_time, v4, (void (*)(void))type metadata accessor for TimeState);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32))(v1, v4, v3);
  uint64_t v8 = *(void *)(v7 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_locations + *(int *)(v5 + 20));
  uint64_t v9 = *(void *)(v8 + 16);
  if (v9)
  {
    uint64_t v37 = v6;
    uint64_t v10 = v0[12];
    uint64_t v11 = *(void *)(type metadata accessor for SavedLocation() - 8);
    uint64_t v12 = v8 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
    uint64_t v40 = v10
        + OBJC_IVAR____TtC7Weather39WeatherConditionBackgroundStoreObserver_weatherConditionBackgroundTimeDataFactory;
    uint64_t v39 = *(void *)(v11 + 72);
    swift_bridgeObjectRetain();
    do
    {
      uint64_t v13 = (void (*)(void))v0[25];
      uint64_t v14 = v0[20];
      uint64_t v15 = v0[18];
      uint64_t v16 = v0[14];
      sub_10020D948(v40, (uint64_t)(v0 + 2));
      sub_1001B1E64(v0 + 2, v0[5]);
      SavedLocation.location.getter();
      uint64_t v17 = type metadata accessor for WeatherData(0);
      _s7Weather24LocationCompositionStateOwst_0(v16, 1, 1, v17);
      sub_10020D9C0(v15, v16, v13, v14);
      sub_100178254(v16, &qword_100E63850);
      sub_100178254(v15, &qword_100E639E8);
      sub_100158D70(v14, (void (*)(void))type metadata accessor for WeatherConditionBackgroundTimeData);
      _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)(v0 + 2));
      v12 += v39;
      --v9;
    }
    while (v9);
    swift_bridgeObjectRelease();
    uint64_t v6 = v37;
  }
  uint64_t v18 = v0[16];
  uint64_t v19 = v0[17];
  sub_10020D948(v0[12] + OBJC_IVAR____TtC7Weather39WeatherConditionBackgroundStoreObserver_weatherConditionBackgroundTimeDataFactory, (uint64_t)v38);
  sub_1001B1E64(v38, v0[10]);
  sub_1001665C0(*(void *)(v6 + 64) + OBJC_IVAR____TtCV7Weather9MainState8_Storage_locations, v18, (void (*)(void))type metadata accessor for LocationsState);
  sub_1001E4B50(v18, v19, (uint64_t *)&unk_100EADD50);
  sub_100158D70(v18, (void (*)(void))type metadata accessor for LocationsState);
  uint64_t v20 = type metadata accessor for CurrentLocation();
  int v21 = _s7Weather24LocationCompositionStateOwet_0(v19, 1, v20);
  uint64_t v22 = v0[19];
  uint64_t v23 = v0[17];
  if (v21 == 1)
  {
    sub_100178254(v0[17], (uint64_t *)&unk_100EADD50);
    uint64_t v24 = type metadata accessor for Location();
    _s7Weather24LocationCompositionStateOwst_0(v22, 1, 1, v24);
  }
  else
  {
    CurrentLocation.location.getter();
    sub_100158D70(v23, (void (*)(void))&type metadata accessor for CurrentLocation);
  }
  uint64_t v26 = v0[27];
  uint64_t v25 = v0[28];
  uint64_t v28 = (void (*)(void))v0[25];
  uint64_t v27 = v0[26];
  uint64_t v29 = v0[24];
  uint64_t v30 = v0[21];
  uint64_t v36 = v0[23];
  uint64_t v31 = v0[19];
  uint64_t v32 = v0[14];
  uint64_t v33 = type metadata accessor for WeatherData(0);
  _s7Weather24LocationCompositionStateOwst_0(v32, 1, 1, v33);
  sub_10020D9C0(v31, v32, v28, v30);
  sub_100178254(v32, &qword_100E63850);
  sub_100178254(v31, &qword_100E639E8);
  sub_100158D70(v30, (void (*)(void))type metadata accessor for WeatherConditionBackgroundTimeData);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v38);
  static os_signpost_type_t.end.getter();
  os_signpost(_:dso:log:name:signpostID:)();
  (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v25, v27);
  (*(void (**)(void (*)(void), uint64_t))(v29 + 8))(v28, v36);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v34 = (uint64_t (*)(void))v0[1];
  return v34();
}

uint64_t sub_10020D948(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_10020D9AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100A20158);
}

uint64_t sub_10020D9C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void (*a3)(void)@<X2>, uint64_t a4@<X8>)
{
  uint64_t v152 = a3;
  uint64_t v142 = a4;
  uint64_t v143 = a1;
  type metadata accessor for TimeZone();
  sub_100179C0C();
  uint64_t v134 = v6;
  uint64_t v135 = v5;
  __chkstk_darwin(v5);
  sub_100109314();
  uint64_t v133 = v7;
  uint64_t v8 = sub_10017DF08(&qword_100E63768);
  uint64_t v9 = sub_100109308(v8);
  __chkstk_darwin(v9);
  sub_100109314();
  uint64_t v136 = v10;
  v121[4] = type metadata accessor for CurrentWeather();
  sub_100179C0C();
  v121[3] = v11;
  __chkstk_darwin(v12);
  sub_100109314();
  v121[2] = v13;
  uint64_t v150 = type metadata accessor for Elevation();
  sub_100179C0C();
  uint64_t v132 = v14;
  __chkstk_darwin(v15);
  sub_100109314();
  uint64_t v149 = v16;
  uint64_t v17 = sub_10017DF08(&qword_100E639E8);
  uint64_t v18 = sub_100109308(v17);
  __chkstk_darwin(v18);
  sub_100109314();
  uint64_t v146 = v19;
  uint64_t v151 = type metadata accessor for Location();
  sub_100179C0C();
  uint64_t v148 = v20;
  __chkstk_darwin(v21);
  sub_100109314();
  uint64_t v147 = v22;
  uint64_t v23 = sub_10017DF08(&qword_100E63740);
  uint64_t v24 = sub_100109308(v23);
  __chkstk_darwin(v24);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v25);
  int v130 = (char *)v121 - v26;
  uint64_t v27 = sub_10017DF08(&qword_100E63850);
  uint64_t v28 = sub_100109308(v27);
  __chkstk_darwin(v28);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v29);
  sub_100109770();
  uint64_t v144 = v30;
  sub_1001626D4();
  __chkstk_darwin(v31);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v32);
  sub_100109770();
  uint64_t v145 = v33;
  sub_1001626D4();
  uint64_t v35 = __chkstk_darwin(v34);
  uint64_t v37 = (char *)v121 - v36;
  __chkstk_darwin(v35);
  uint64_t v39 = (char *)v121 - v38;
  uint64_t v40 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  uint64_t v41 = sub_100109308(v40);
  __chkstk_darwin(v41);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v42);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v43);
  sub_100109770();
  uint64_t v140 = v44;
  sub_1001626D4();
  uint64_t v46 = __chkstk_darwin(v45);
  double v48 = (char *)v121 - v47;
  __chkstk_darwin(v46);
  double v50 = (char *)v121 - v49;
  uint64_t v51 = type metadata accessor for Date();
  sub_100179C0C();
  uint64_t v53 = v52;
  __chkstk_darwin(v54);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v55);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v56);
  sub_100109770();
  uint64_t v141 = v57;
  sub_1001626D4();
  __chkstk_darwin(v58);
  sub_100109770();
  uint64_t v137 = v59;
  sub_1001626D4();
  uint64_t v61 = __chkstk_darwin(v60);
  uint64_t v62 = __chkstk_darwin(v61);
  __chkstk_darwin(v62);
  uint64_t v64 = (char *)v121 - v63;
  static Settings.VFX.overrideConditionBackgroundDate.getter();
  uint64_t v131 = a2;
  sub_1001B7204(a2, (uint64_t)v39, &qword_100E63850);
  uint64_t v65 = *(void *)(v53 + 16);
  uint64_t v138 = v53 + 16;
  uint64_t v139 = v65;
  sub_10008B8B4();
  v66();
  sub_1001630A0((uint64_t)v50);
  uint64_t v153 = v53;
  if (!v67)
  {
    sub_10017A414();
    v72();
    sub_100178110((uint64_t)v39, &qword_100E63850);
    uint64_t v73 = *(void (**)(void))(v53 + 32);
    ((void (*)(char *, char *, uint64_t))v73)(v64, v50, v51);
    uint64_t v74 = v151;
    uint64_t v75 = (uint64_t)v64;
    uint64_t v76 = v144;
    uint64_t v77 = v145;
    uint64_t v78 = v143;
    goto LABEL_13;
  }
  v121[0] = (uint64_t)v48;
  uint64_t v68 = (uint64_t)v130;
  sub_10020E72C((uint64_t)v39, (uint64_t)v37, &qword_100E63850);
  uint64_t v69 = type metadata accessor for WeatherData(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v37, 1, v69) == 1)
  {
    uint64_t v70 = &qword_100E63850;
    uint64_t v71 = (uint64_t)v37;
LABEL_8:
    sub_100178110(v71, v70);
    uint64_t v74 = v151;
    uint64_t v81 = v153;
    uint64_t v80 = v121[0];
    sub_1001A4630();
    goto LABEL_9;
  }
  sub_1001B7204((uint64_t)&v37[*(int *)(v69 + 36)], v68, &qword_100E63740);
  sub_100523E1C((uint64_t)v37, (void (*)(void))type metadata accessor for WeatherData);
  uint64_t v79 = type metadata accessor for WeatherDataOverrides();
  sub_10017A364(v68);
  if (v67)
  {
    uint64_t v70 = &qword_100E63740;
    uint64_t v71 = v68;
    goto LABEL_8;
  }
  uint64_t v80 = v121[0];
  sub_1001B7204(v68 + *(int *)(v79 + 20), v121[0], (uint64_t *)&unk_100E73CA0);
  sub_100523E1C(v68, (void (*)(void))type metadata accessor for WeatherDataOverrides);
  uint64_t v74 = v151;
  uint64_t v81 = v153;
LABEL_9:
  uint64_t v73 = *(void (**)(void))(v81 + 32);
  sub_100183BB8();
  v73();
  sub_1001630A0(v80);
  if (v67)
  {
    uint64_t v75 = (uint64_t)v64;
    sub_100183BB8();
    v73();
    sub_100178110(v80, (uint64_t *)&unk_100E73CA0);
  }
  else
  {
    sub_10017A414();
    v82();
    uint64_t v75 = (uint64_t)v64;
    ((void (*)(char *, uint64_t, uint64_t))v73)(v64, v80, v51);
  }
  uint64_t v76 = v144;
  uint64_t v77 = v145;
  uint64_t v78 = v143;
  sub_100178110((uint64_t)v50, (uint64_t *)&unk_100E73CA0);
LABEL_13:
  uint64_t v83 = v146;
  sub_1001B7204(v78, (uint64_t)v146, &qword_100E639E8);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v83, 1, v74) == 1)
  {
    sub_100178110((uint64_t)v83, &qword_100E639E8);
    uint64_t v84 = type metadata accessor for WeatherConditionBackgroundTimeData();
    uint64_t v85 = v142;
    _s7Weather24LocationCompositionStateOwst_0(v142 + *(int *)(v84 + 20), 1, 1, v150);
    uint64_t v86 = v85 + *(int *)(v84 + 24);
    uint64_t v87 = type metadata accessor for BackgroundMoonData();
    _s7Weather24LocationCompositionStateOwst_0(v86, 1, 1, v87);
    return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v73)(v85, v75, v51);
  }
  uint64_t v146 = v73;
  (*(void (**)(uint64_t, void (*)(void), uint64_t))(v148 + 32))(v147, v83, v74);
  static GeoHandler.getElevation(for:on:)();
  uint64_t v89 = v140;
  static Settings.VFX.overrideConditionBackgroundDate.getter();
  sub_1001B7204(v131, v77, &qword_100E63850);
  uint64_t v90 = v141;
  sub_10008B8B4();
  v91();
  sub_1001630A0(v89);
  v121[1] = v75;
  if (v67)
  {
    uint64_t v92 = v126;
    sub_1001B7204(v77, v126, &qword_100E63850);
    uint64_t v93 = type metadata accessor for WeatherData(0);
    sub_10017A364(v92);
    if (v67)
    {
      sub_100178110(v92, &qword_100E63850);
      uint64_t v94 = v127;
    }
    else
    {
      uint64_t v98 = v122;
      sub_1001B7204(v92 + *(int *)(v93 + 36), v122, &qword_100E63740);
      sub_100523E1C(v92, (void (*)(void))type metadata accessor for WeatherData);
      uint64_t v99 = type metadata accessor for WeatherDataOverrides();
      int v100 = _s7Weather24LocationCompositionStateOwet_0(v98, 1, v99);
      uint64_t v94 = v127;
      if (v100 != 1)
      {
        sub_1001B7204(v98, v127, (uint64_t *)&unk_100E73CA0);
        sub_100523E1C(v98, (void (*)(void))type metadata accessor for WeatherDataOverrides);
        goto LABEL_24;
      }
      sub_100178110(v98, &qword_100E63740);
    }
    sub_1001A4630();
LABEL_24:
    sub_1001B7204(v77, v76, &qword_100E63850);
    uint64_t v101 = v128;
    uint64_t v102 = v141;
    sub_10008B8B4();
    v103();
    sub_1001630A0(v94);
    if (v67)
    {
      uint64_t v104 = v124;
      sub_1001B7204(v76, v124, &qword_100E63850);
      sub_10017A364(v104);
      uint64_t v105 = v125;
      if (v67)
      {
        sub_100178110(v76, &qword_100E63850);
        uint64_t v106 = *(void (**)(void))(v153 + 8);
        sub_10017A414();
        v106();
        sub_100178110(v77, &qword_100E63850);
        uint64_t v111 = 1;
        uint64_t v77 = v104;
        uint64_t v108 = v106;
      }
      else
      {
        WeatherDataModel.currentWeather.getter();
        sub_100523E1C(v104, (void (*)(void))type metadata accessor for WeatherData);
        CurrentWeather.date.getter();
        sub_100162F0C();
        v110();
        sub_100178110(v76, &qword_100E63850);
        uint64_t v108 = *(void (**)(void))(v153 + 8);
        sub_10017A414();
        v108();
        uint64_t v111 = 0;
      }
      uint64_t v97 = v129;
      sub_100178110(v77, &qword_100E63850);
      _s7Weather24LocationCompositionStateOwst_0(v105, v111, 1, v51);
      long long v112 = v146;
      ((void (*)(uint64_t, uint64_t, uint64_t))v146)(v123, v128, v51);
      sub_1001630A0(v105);
      uint64_t v96 = v142;
      if (v67)
      {
        sub_100183BB8();
        v112();
        sub_100178110(v105, (uint64_t *)&unk_100E73CA0);
      }
      else
      {
        sub_10017A414();
        v108();
        ((void (*)(uint64_t, uint64_t, uint64_t))v112)(v137, v105, v51);
      }
      sub_100178110(v127, (uint64_t *)&unk_100E73CA0);
    }
    else
    {
      uint64_t v107 = *(void (**)(void))(v153 + 8);
      ((void (*)(uint64_t, uint64_t))v107)(v101, v51);
      sub_100178110(v76, &qword_100E63850);
      uint64_t v108 = v107;
      ((void (*)(uint64_t, uint64_t))v107)(v102, v51);
      sub_100178110(v77, &qword_100E63850);
      sub_100181378();
      v109();
      uint64_t v96 = v142;
      uint64_t v97 = v129;
    }
    uint64_t v152 = v108;
    sub_100178110(v140, (uint64_t *)&unk_100E73CA0);
    goto LABEL_34;
  }
  uint64_t v152 = *(void (**)(void))(v153 + 8);
  ((void (*)(uint64_t, uint64_t))v152)(v90, v51);
  sub_100178110(v77, &qword_100E63850);
  sub_100181378();
  v95();
  uint64_t v96 = v142;
  uint64_t v97 = v129;
LABEL_34:
  sub_1001B1E64((void *)(v97 + 16), *(void *)(v97 + 40));
  Location.timeZone.getter();
  Location.coordinate.getter();
  uint64_t v113 = v136;
  dispatch thunk of MoonDataProviderType.weatherBackgroundMoonData(for:timeZone:coordinate:)();
  sub_100162F0C();
  v114();
  sub_10017A414();
  v115();
  sub_100162F0C();
  v116();
  uint64_t v117 = type metadata accessor for WeatherConditionBackgroundTimeData();
  uint64_t v118 = v96 + *(int *)(v117 + 20);
  uint64_t v119 = v150;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v132 + 32))(v118, v149, v150);
  _s7Weather24LocationCompositionStateOwst_0(v118, 0, 1, v119);
  sub_100181378();
  v120();
  return sub_10020E72C(v113, v96 + *(int *)(v117 + 24), &qword_100E63768);
}

uint64_t sub_10020E72C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  sub_10017DF08(a3);
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(a2, a1);
  return a2;
}

void sub_10020E788()
{
  sub_100162EA0();
  uint64_t v2 = v1;
  int v68 = v3;
  LODWORD(v75) = v4;
  uint64_t v61 = v5;
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  uint64_t v11 = v10;
  uint64_t v73 = v12;
  sub_100127C8C();
  uint64_t v13 = type metadata accessor for TimeState();
  uint64_t v14 = sub_100164920(v13);
  uint64_t v60 = v15;
  __chkstk_darwin(v14);
  uint64_t v59 = v16;
  sub_10018B1EC();
  uint64_t v72 = v17;
  uint64_t v71 = type metadata accessor for Location();
  sub_100179C0C();
  uint64_t v63 = v18;
  uint64_t v20 = *(void *)(v19 + 64);
  __chkstk_darwin(v21);
  uint64_t v70 = (char *)v49 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v74 = type metadata accessor for AppConfiguration();
  sub_100179C0C();
  uint64_t v64 = v22;
  __chkstk_darwin(v23);
  sub_1001811B8();
  uint64_t v69 = v24;
  uint64_t v58 = v25;
  __chkstk_darwin(v26);
  uint64_t v28 = (char *)v49 - v27;
  sub_1001B1E64((void *)(v2 + 120), *(void *)(v2 + 144));
  uint64_t v62 = v28;
  dispatch thunk of AppConfigurationManagerType.appConfiguration.getter();
  uint64_t v29 = *(void *)(v0 + 16);
  if (v29)
  {
    int v57 = v68 & 1;
    uint64_t v56 = *(void (**)(void))(v63 + 16);
    uint64_t v30 = *(unsigned __int8 *)(v63 + 80);
    uint64_t v31 = v0 + ((v30 + 32) & ~v30);
    uint64_t v54 = *(void *)(v63 + 72);
    uint64_t v53 = v64 + 16;
    uint64_t v55 = v30;
    uint64_t v52 = (v30 + 24) & ~v30;
    unint64_t v51 = (v20 + v52 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v50 = v51 + 32;
    v63 += 16;
    v49[4] = v63 + 16;
    v49[3] = v64 + 32;
    int v68 = v75 & 1;
    v49[1] = v0;
    swift_bridgeObjectRetain();
    v49[2] = (char *)&type metadata for () + 8;
    do
    {
      uint64_t v75 = v31;
      uint64_t v67 = v29;
      uint64_t v32 = (uint64_t)v70;
      uint64_t v33 = v56;
      sub_100A5B744();
      v33();
      type metadata accessor for WeatherDataUpdateRequestLog(0);
      swift_allocObject();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v65 = sub_10020FD50(0, v32, v68);
      __chkstk_darwin(v65);
      uint64_t v34 = v75;
      v49[-2] = v2;
      v49[-1] = v34;
      sub_10017DF08(&qword_100E65F18);
      uint64_t v66 = firstly<A>(closure:)();
      sub_100A5B744();
      v33();
      sub_1001B9A30(v61, v72, (void (*)(void))type metadata accessor for TimeState);
      uint64_t v35 = v64;
      sub_10008B8B4();
      v36();
      unint64_t v37 = (v50 + *(unsigned __int8 *)(v60 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v60 + 80);
      uint64_t v38 = ((v59 + *(unsigned __int8 *)(v35 + 80) + v37) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80)) + v58;
      uint64_t v39 = swift_allocObject();
      *(void *)(v39 + 16) = v2;
      sub_1001190D4();
      v40();
      uint64_t v41 = (void *)(v39 + v51);
      uint64_t v42 = v72;
      *uint64_t v41 = v73;
      v41[1] = v11;
      v41[2] = v9;
      v41[3] = v7;
      sub_1001B9AF4(v42, v39 + v37, (void (*)(void))type metadata accessor for TimeState);
      uint64_t v43 = v75;
      sub_1001190D4();
      v44();
      uint64_t v45 = (unsigned char *)(v39 + v38);
      *uint64_t v45 = v68;
      v45[1] = v57;
      *(void *)(v39 + ((v38 + 9) & 0xFFFFFFFFFFFFFFF8)) = v65;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
      uint64_t v46 = (void *)zalgo.getter();
      Promise.then<A>(on:closure:)();
      uint64_t v47 = v67;
      swift_release();
      swift_release();
      swift_release();

      swift_release();
      uint64_t v31 = v43 + v54;
      uint64_t v29 = v47 - 1;
    }
    while (v29);
    swift_bridgeObjectRelease();
  }
  sub_100162F0C();
  v48();
  sub_100162694();
}

uint64_t sub_10020ECDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, void (*a8)(void))
{
  uint64_t v138 = a8;
  LODWORD(v131) = a7;
  uint64_t v128 = a6;
  uint64_t v141 = a2;
  uint64_t v142 = a5;
  uint64_t v125 = *v8;
  uint64_t v133 = type metadata accessor for AppConfiguration();
  sub_100179C0C();
  uint64_t v135 = v12;
  __chkstk_darwin(v13);
  uint64_t v127 = v14;
  sub_10018B1EC();
  uint64_t v134 = v15;
  uint64_t updated = type metadata accessor for WeatherDataUpdateRequestLog.Event(0);
  sub_100162E4C();
  __chkstk_darwin(v16);
  sub_100109314();
  sub_100109328(v17);
  uint64_t v121 = type metadata accessor for DispatchWorkItemFlags();
  sub_100179C0C();
  uint64_t v120 = v18;
  __chkstk_darwin(v19);
  sub_100109314();
  uint64_t v118 = v20;
  uint64_t v119 = type metadata accessor for DispatchQoS();
  sub_100179C0C();
  uint64_t v117 = v21;
  __chkstk_darwin(v22);
  sub_100109314();
  sub_100109328(v23);
  uint64_t v136 = type metadata accessor for OSSignpostID();
  sub_100179C0C();
  uint64_t v129 = v24;
  __chkstk_darwin(v25);
  sub_1001811B8();
  uint64_t v126 = v26;
  uint64_t v116 = v27;
  __chkstk_darwin(v28);
  uint64_t v132 = (char *)&v101 - v29;
  uint64_t v140 = type metadata accessor for Location();
  uint64_t v30 = *(void *)(v140 - 8);
  uint64_t v31 = *(void *)(v30 + 64);
  uint64_t v32 = __chkstk_darwin(v140);
  uint64_t v33 = (char *)&v101 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v32);
  uint64_t v35 = (char *)&v101 - v34;
  uint64_t v143 = v30;
  unint64_t v37 = *(void (**)(void))(v30 + 16);
  uint64_t v36 = v30 + 16;
  ((void (*)(char *, uint64_t))v37)((char *)&v101 - v34, a1);
  type metadata accessor for WeatherDataUpdateRequestLog(0);
  swift_allocObject();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v124 = a3;
  uint64_t v130 = a4;
  uint64_t v139 = sub_10020FD50(1, (uint64_t)v35, 0);
  Location.coordinate.getter();
  uint64_t v38 = v37;
  uint64_t v39 = v140;
  double v41 = v40;
  ((void (*)(char *, uint64_t, uint64_t))v37)(v33, a1, v140);
  if (v41 == 0.0)
  {
    sub_100162F0C();
    v42();
  }
  else
  {
    char v43 = v131;
    uint64_t v114 = v31;
    uint64_t v115 = v38;
    uint64_t v45 = v136;
    uint64_t v44 = v137;
    Location.coordinate.getter();
    double v47 = v46;
    (*(void (**)(char *, uint64_t))(v143 + 8))(v33, v39);
    if (v47 != 0.0)
    {
      LODWORD(v138) = v43 & 1;
      id v49 = *(id *)(v44 + 448);
      OSSignpostID.init(log:)();
      uint64_t v50 = v39;
      id v102 = sub_10020F9AC(v43 & 1);
      uint64_t v101 = swift_allocObject();
      swift_weakInit();
      uint64_t v51 = v129;
      uint64_t v52 = *(void *)(v129 + 16);
      uint64_t v104 = v129 + 16;
      uint64_t v105 = v52;
      uint64_t v53 = v126;
      uint64_t v54 = v45;
      sub_10008B8B4();
      v55();
      uint64_t v113 = v35;
      uint64_t v110 = a1;
      uint64_t v111 = v36;
      ((void (*)(char *, uint64_t, uint64_t))v115)(v35, a1, v50);
      uint64_t v56 = *(unsigned __int8 *)(v51 + 80);
      uint64_t v57 = v51;
      uint64_t v58 = (v56 + 32) & ~v56;
      uint64_t v103 = v56;
      uint64_t v131 = *(unsigned __int8 *)(v143 + 80);
      uint64_t v59 = v143;
      uint64_t v106 = &v116[v131];
      uint64_t v60 = (unint64_t)&v116[v131 + v58] & ~v131;
      uint64_t v112 = v131 | 7;
      uint64_t v107 = v131 | 7 | v56;
      uint64_t v61 = swift_allocObject();
      uint64_t v62 = v139;
      *(void *)(v61 + 16) = v101;
      *(void *)(v61 + 24) = v62;
      uint64_t v63 = *(void (**)(void, void, void))(v57 + 32);
      uint64_t v108 = v57 + 32;
      char v109 = v63;
      v63(v61 + v58, v53, v54);
      uint64_t v64 = *(char **)(v59 + 32);
      uint64_t v143 = v59 + 32;
      uint64_t v116 = v64;
      ((void (*)(uint64_t, char *, uint64_t))v64)(v61 + v60, v113, v50);
      aBlock[4] = sub_10010A714;
      aBlock[5] = v61;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_10010A4D4;
      aBlock[3] = &unk_100E35600;
      uint64_t v65 = _Block_copy(aBlock);
      swift_retain();
      swift_retain();
      static DispatchQoS.unspecified.getter();
      uint64_t v144 = &_swiftEmptyArrayStorage;
      sub_100128EB4((unint64_t *)&qword_100EA0200, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
      sub_10017DF08(&qword_100E75530);
      sub_1001246C8((unint64_t *)&qword_100EA0210, &qword_100E75530);
      sub_10016EF14();
      uint64_t v66 = v102;
      OS_dispatch_queue.async(group:qos:flags:execute:)();
      _Block_release(v65);

      sub_100162F0C();
      v67();
      sub_100162F0C();
      v68();
      swift_release();
      swift_release();
      uint64_t v69 = v123;
      swift_storeEnumTagMultiPayload();
      sub_10015B128(v69);
      sub_1001BC5DC();
      id v70 = sub_10020F9AC((char)v138);
      uint64_t v71 = v115;
      sub_100A5B744();
      v71();
      swift_allocObject();
      sub_10018224C();
      v72();
      sub_10017DF08(&qword_100EABDF8);
      uint64_t v125 = firstly<A, B>(on:disposeOn:closure:)();

      swift_release();
      sub_10008B8B4();
      v73();
      sub_100A5B744();
      v71();
      uint64_t v74 = v135;
      uint64_t v75 = *(void *)(v135 + 16);
      uint64_t updated = v135 + 16;
      uint64_t v123 = v75;
      sub_10008B8B4();
      v76();
      uint64_t v121 = v114 + 7;
      unint64_t v77 = (v114 + 7 + ((unint64_t)&v106[(v103 + 24) & ~v103] & ~v131)) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v78 = (v77 + 15) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v119 = *(unsigned __int8 *)(v74 + 80);
      uint64_t v120 = v119 + 32;
      uint64_t v79 = (v119 + 32 + v78) & ~v119;
      uint64_t v118 = v79 + v127;
      uint64_t v80 = swift_allocObject();
      *(void *)(v80 + 16) = v137;
      sub_1001190D4();
      v81();
      sub_10018224C();
      v82();
      uint64_t v83 = v139;
      *(void *)(v80 + v77) = v139;
      uint64_t v84 = (void *)(v80 + v78);
      uint64_t v85 = v142;
      uint64_t v86 = v124;
      *uint64_t v84 = v141;
      v84[1] = v86;
      v84[2] = v130;
      v84[3] = v85;
      uint64_t v87 = *(void (**)(void, void, void))(v74 + 32);
      uint64_t v135 = v74 + 32;
      uint64_t v126 = v87;
      v87(v80 + v79, v134, v133);
      *(unsigned char *)(v80 + v118) = (_BYTE)v138;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      uint64_t v88 = v137;
      swift_retain();
      uint64_t v89 = (void *)zalgo.getter();
      uint64_t v118 = Promise.then<A>(on:closure:)();
      swift_release();
      swift_release();

      sub_100162808();
      v90();
      sub_10008B8B4();
      v91();
      unint64_t v92 = (v121 + ((v131 + 32) & ~v131)) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v93 = ((v120 + v92) & ~v119) + v127;
      uint64_t v94 = swift_allocObject();
      *(void *)(v94 + 16) = v83;
      *(void *)(v94 + 24) = v88;
      sub_10018224C();
      v95();
      uint64_t v96 = (void *)(v94 + v92);
      uint64_t v97 = v142;
      *uint64_t v96 = v141;
      v96[1] = v86;
      v96[2] = v130;
      v96[3] = v97;
      sub_1001190D4();
      v98();
      *(unsigned char *)(v94 + v93) = (_BYTE)v138;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
      uint64_t v99 = (void *)zalgo.getter();
      Promise.error(on:closure:)();
      swift_release();
      swift_release();
      swift_release();
      swift_release();

      sub_100162F0C();
      return v100();
    }
  }
  sub_1006A7CD8(0xD000000000000038, 0x8000000100CBB2B0);
  if (v138) {
    v138();
  }
  return swift_release();
}

id sub_10020F9AC(char a1)
{
  uint64_t v2 = 488;
  if ((a1 & 1) == 0) {
    uint64_t v2 = 480;
  }
  return *(id *)(v1 + v2);
}

uint64_t sub_10020FA00()
{
  return v0;
}

uint64_t type metadata accessor for WeatherDataUpdateRequestLog(uint64_t a1)
{
  return sub_10018678C(a1, qword_100E8AB58);
}

void sub_10020FA74(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t), uint64_t a5, uint64_t a6, unint64_t a7, uint64_t a8, unint64_t a9)
{
  sub_100126024();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v16 = Strong;
    swift_beginAccess();
    uint64_t v17 = *(void *)(v16 + 16);
    if (*(void *)(v17 + 16) && (unint64_t v18 = sub_1002109DC(a2), (v19 & 1) != 0))
    {
      uint64_t v20 = *(void *)(*(void *)(v17 + 56) + 8 * v18);
      swift_endAccess();
      if (v20 == a3)
      {
LABEL_5:
        sub_100182350();
        sub_100210878();
        uint64_t v21 = swift_endAccess();
        a4(v21);
LABEL_12:
        swift_release();
        return;
      }
    }
    else
    {
      swift_endAccess();
      if (!a3) {
        goto LABEL_5;
      }
    }
    if (qword_100E62828 != -1) {
      swift_once();
    }
    uint64_t v22 = type metadata accessor for Logger();
    sub_1002102B0(v22, (uint64_t)qword_100F51F80);
    uint64_t v23 = Logger.logObject.getter();
    os_log_type_t v24 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v23, v24))
    {
      uint64_t v25 = swift_slowAlloc();
      v29[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v25 = 136315906;
      uint64_t v26 = sub_10018A2E0();
      sub_10016414C(v26, v27, v28);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v25 + 12) = 2080;
      sub_10016414C(a6, a7, v29);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v25 + 22) = 2080;
      sub_10016414C(a8, a9, v29);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v25 + 32) = 2048;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v23, v24, "Debounced state update; another update came through afterwards. Selector=<%s, %s, %s>, Count=%ld",
        (uint8_t *)v25,
        0x2Au);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
      swift_release();

      return;
    }

    goto LABEL_12;
  }
}

uint64_t sub_10020FD50(int a1, uint64_t a2, int a3)
{
  uint64_t v4 = v3;
  int v60 = a1;
  int v61 = a3;
  type metadata accessor for Location.Identifier();
  sub_100179C0C();
  uint64_t v57 = v7;
  uint64_t v58 = v6;
  __chkstk_darwin(v6);
  sub_100109314();
  uint64_t v56 = v8;
  uint64_t v9 = type metadata accessor for Location();
  sub_100179C0C();
  uint64_t v11 = v10;
  __chkstk_darwin(v12);
  sub_100109314();
  uint64_t v59 = v13;
  uint64_t v14 = type metadata accessor for UUID();
  sub_100179C0C();
  uint64_t v16 = v15;
  __chkstk_darwin(v17);
  char v19 = (char *)&v51 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  UUID.init()();
  uint64_t v20 = UUID.uuidString.getter();
  uint64_t v22 = v21;
  (*(void (**)(char *, uint64_t))(v16 + 8))(v19, v14);
  *(void *)(v4 + 16) = v20;
  *(void *)(v4 + 24) = v22;
  uint64_t v23 = v4 + OBJC_IVAR____TtC7Weather27WeatherDataUpdateRequestLog_logger;
  if (qword_100E62818 != -1) {
    swift_once();
  }
  uint64_t v24 = type metadata accessor for Logger();
  uint64_t v25 = sub_1002102B0(v24, (uint64_t)qword_100F51F50);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 16))(v23, v25, v24);
  uint64_t v26 = OBJC_IVAR____TtC7Weather27WeatherDataUpdateRequestLog__finished;
  LOBYTE(v63) = 0;
  sub_10017DF08(&qword_100E8AC38);
  swift_allocObject();
  *(void *)(v4 + v26) = Atomic.init(wrappedValue:)();
  unsigned __int8 v27 = v60;
  *(unsigned char *)(v4 + OBJC_IVAR____TtC7Weather27WeatherDataUpdateRequestLog_kind) = v60;
  uint64_t v28 = *(void (**)(void))(v11 + 16);
  sub_1001D0EA8();
  v28();
  *(unsigned char *)(v4 + OBJC_IVAR____TtC7Weather27WeatherDataUpdateRequestLog_forced) = v61 & 1;
  uint64_t v29 = v59;
  sub_1001D0EA8();
  v28();
  swift_retain_n();
  uint64_t v30 = Logger.logObject.getter();
  int v31 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v30, (os_log_type_t)v31))
  {
    int v52 = v31;
    uint64_t v32 = swift_slowAlloc();
    uint64_t v51 = swift_slowAlloc();
    uint64_t v63 = v51;
    *(_DWORD *)uint64_t v32 = 136447235;
    uint64_t v54 = v9;
    uint64_t v55 = a2;
    os_log_t v53 = v30;
    if (v27)
    {
      uint64_t v33 = sub_10018317C(v27);
      if (v36) {
        unint64_t v37 = v34;
      }
      else {
        unint64_t v37 = v35;
      }
    }
    else
    {
      unint64_t v37 = 0xE700000000000000;
      uint64_t v33 = 0x72656874616577;
    }
    uint64_t v62 = sub_10016414C(v33, v37, &v63);
    sub_10021034C();
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v32 + 12) = 2160;
    uint64_t v62 = 1752392040;
    sub_10021034C();
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v32 + 22) = 2081;
    Location.identifier.getter();
    sub_100210468();
    uint64_t v39 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v40 = v29;
    unint64_t v42 = v41;
    sub_100162F0C();
    v44(v43);
    uint64_t v62 = sub_10016414C(v39, v42, &v63);
    sub_10021034C();
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    uint64_t v45 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
    uint64_t v46 = v54;
    v45(v40, v54);
    *(_WORD *)(v32 + 32) = 1026;
    LODWORD(v62) = v61 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v32 + 38) = 2082;
    uint64_t v47 = *(void *)(v4 + 16);
    unint64_t v48 = *(void *)(v4 + 24);
    swift_bridgeObjectRetain();
    uint64_t v62 = sub_10016414C(v47, v48, &v63);
    sub_10021034C();
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    sub_100182050();
    swift_bridgeObjectRelease();
    os_log_t v49 = v53;
    _os_log_impl((void *)&_mh_execute_header, v53, (os_log_type_t)v52, "New WeatherData Update Request. kind=%{public}s, location=%{private,mask.hash}s, forced=%{BOOL,public}d, uuid=%{public}s", (uint8_t *)v32, 0x30u);
    swift_arrayDestroy();
    sub_100162EE0();
    sub_100162EE0();

    v45(v55, v46);
  }
  else
  {
    uint64_t v38 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
    v38(v29, v9);

    sub_100182050();
    v38(a2, v9);
  }
  return v4;
}

uint64_t sub_1002102B0(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(*(void *)(a1 - 8) + 82) & 2) != 0) {
    return *(void *)a2;
  }
  return a2;
}

uint64_t sub_1002102E8()
{
  return v0;
}

__n128 sub_1002102FC()
{
  return v0[6];
}

uint64_t sub_100210314()
{
  return dispatch thunk of Encoder.container<A>(keyedBy:)();
}

uint64_t sub_100210334()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_10021034C()
{
  return v0 - 96;
}

uint64_t sub_100210358()
{
  return v0;
}

uint64_t sub_10021036C()
{
  return swift_arrayInitWithCopy();
}

uint64_t sub_10021038C()
{
  return swift_release();
}

uint64_t sub_1002103AC()
{
  return *(void *)(v0 - 168);
}

uint64_t sub_1002103C4()
{
  return 0x696C617551726961;
}

uint64_t sub_1002103D8(uint64_t a1)
{
  return *(void *)a1;
}

uint64_t sub_1002103EC()
{
  return os_signpost(_:dso:log:name:signpostID:)();
}

uint64_t sub_100210410()
{
  return WeatherMetadata.init(date:expirationDate:attribution:)();
}

void sub_10021042C(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(a1 - 256);
  sub_1000277CC(v2);
}

unint64_t sub_100210468()
{
  unint64_t result = qword_100E63880;
  if (!qword_100E63880)
  {
    type metadata accessor for Location.Identifier();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E63880);
  }
  return result;
}

void sub_1002104B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = UnsafeMutableRawPointer.hashValue.getter();
  swift_beginAccess();
  uint64_t v7 = *(void *)(v3 + 16);
  if (*(void *)(v7 + 16) && (unint64_t v8 = sub_1002109DC(v6), (v9 & 1) != 0)) {
    uint64_t v10 = *(void *)(*(void *)(v7 + 56) + 8 * v8);
  }
  else {
    uint64_t v10 = 0;
  }
  swift_endAccess();
  uint64_t v11 = v10 + 1;
  if (__OFADD__(v10, 1))
  {
    __break(1u);
  }
  else
  {
    swift_beginAccess();
    sub_100210878();
    swift_endAccess();
    if (qword_100E62828 == -1) {
      goto LABEL_7;
    }
  }
  swift_once();
LABEL_7:
  uint64_t v12 = type metadata accessor for Logger();
  sub_1002102B0(v12, (uint64_t)qword_100F51F80);
  uint64_t v13 = Logger.logObject.getter();
  os_log_type_t v14 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = swift_slowAlloc();
    aBlock[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v15 = 136315906;
    sub_10016414C(0x746174536E69614DLL, 0xE900000000000065, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v15 + 12) = 2080;
    sub_10016414C(0xD000000000000013, 0x8000000100C97020, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v15 + 22) = 2080;
    sub_10016414C(0xD000000000000013, 0x8000000100C97040, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v15 + 32) = 2048;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "Processing state update. Selector=<%s, %s, %s>, Count=%ld", (uint8_t *)v15, 0x2Au);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  id v16 = [self sharedApplication];
  uint64_t v17 = swift_allocObject();
  swift_weakInit();
  uint64_t v18 = (void *)swift_allocObject();
  v18[2] = v17;
  v18[3] = v6;
  v18[4] = v11;
  v18[5] = a2;
  v18[6] = a3;
  aBlock[4] = (uint64_t)sub_10010B054;
  aBlock[5] = (uint64_t)v18;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_10010A4D4;
  aBlock[3] = (uint64_t)&unk_100E0B040;
  char v19 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  [v16 installCACommitCompletionBlock:v19];
  _Block_release(v19);
}

uint64_t sub_100210878()
{
  swift_isUniquelyReferenced_nonNull_native();
  uint64_t v0 = sub_100182E74();
  unint64_t v3 = sub_1002108D4(v0, v1, v2);
  sub_10018A81C(v3, v4, v5, v6, v7, v8, v9, v10, v12, v13);

  return swift_bridgeObjectRelease();
}

unint64_t sub_1002108D4(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v8 = (void *)*v3;
  unint64_t v9 = sub_1002109DC(a2);
  uint64_t v11 = v8[2];
  BOOL v12 = (v10 & 1) == 0;
  Swift::Int v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_11;
  }
  unint64_t v14 = v9;
  char v15 = v10;
  sub_10017DF08(&qword_100E63970);
  unint64_t result = _NativeDictionary.ensureUnique(isUnique:capacity:)(a3 & 1, v13);
  if ((result & 1) == 0) {
    goto LABEL_5;
  }
  unint64_t result = sub_1002109DC(a2);
  if ((v15 & 1) != (v17 & 1))
  {
LABEL_11:
    unint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return result;
  }
  unint64_t v14 = result;
LABEL_5:
  uint64_t v18 = *v4;
  if (v15)
  {
    *(void *)(v18[7] + 8 * v14) = a1;
  }
  else
  {
    return sub_100210AB4(v14, a2, a1, v18);
  }
  return result;
}

unint64_t sub_1002109DC(uint64_t a1)
{
  uint64_t v2 = static Hasher._hash(seed:_:)();
  return sub_100210A18(a1, v2);
}

unint64_t sub_100210A18(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v5;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = *(void *)(v2 + 48);
    if (*(void *)(v7 + 8 * result) != a1)
    {
      uint64_t v8 = ~v5;
      for (unint64_t result = (result + 1) & v8;
            ((*(void *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v8)
      {
        if (*(void *)(v7 + 8 * result) == a1) {
          break;
        }
      }
    }
  }
  return result;
}

unint64_t sub_100210AB4(unint64_t result, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(result >> 6) + 8] |= 1 << result;
  *(void *)(a4[6] + 8 * result) = a2;
  *(void *)(a4[7] + 8 * result) = a3;
  uint64_t v4 = a4[2];
  BOOL v5 = __OFADD__(v4, 1);
  uint64_t v6 = v4 + 1;
  if (v5) {
    __break(1u);
  }
  else {
    a4[2] = v6;
  }
  return result;
}

uint64_t sub_100210AF8(uint64_t (*a1)(void, void, void *, void, void, void))
{
  return a1(v1[2], v1[3], v1 + 4, v1[13], v1[14], v1[15]);
}

uint64_t sub_100210B14()
{
  return sub_100210AF8((uint64_t (*)(void, void, void *, void, void, void))sub_100138204);
}

void *initializeWithTake for ReportWeatherTipViewViewModel(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x48uLL);
}

uint64_t type metadata accessor for WireframeContent()
{
  return sub_100109098();
}

uint64_t type metadata accessor for LocationComponentContainerContentAccessibilityModifier(uint64_t a1)
{
  return sub_10018678C(a1, qword_100E83EE8);
}

ValueMetadata *type metadata accessor for GutterWidthSpacer()
{
  return &type metadata for GutterWidthSpacer;
}

uint64_t sub_100210B80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100484EC0);
}

uint64_t sub_100210B94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10041422C);
}

uint64_t sub_100210BA8(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xFF && *(unsigned char *)(a1 + 72))
    {
      int v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      unsigned int v3 = *(unsigned __int8 *)(a1 + 32);
      if (v3 <= 1) {
        int v2 = -1;
      }
      else {
        int v2 = v3 ^ 0xFF;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t type metadata accessor for ModuleView()
{
  return sub_100109098();
}

uint64_t type metadata accessor for Store()
{
  return sub_100109098();
}

uint64_t sub_100210C18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10070B2C8);
}

uint64_t sub_100210C2C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100210C3C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100210C4C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100210C5C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100210C6C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100210C7C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100210C8C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100210C9C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100210CAC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100210CBC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100210CCC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100210CDC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100210CEC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100210CFC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100210D0C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100210D1C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100210D2C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100210D3C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100210D4C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100210D5C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100210D6C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100210D7C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100210D8C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100210D9C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100210DAC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100210DBC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100210DCC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100210DDC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100210DEC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100210DFC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100210E0C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100210E1C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100210E2C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100210E3C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100210E4C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100210E5C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100210E6C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100210E7C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100210E8C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100210E9C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100210EAC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100210EBC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100210ECC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100210EDC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100210EEC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100210EFC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100210F0C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100210F1C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100210F2C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100210F3C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100210F4C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100210F5C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100210F6C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100210F7C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100210F8C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100210F9C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100210FAC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100210FBC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100210FCC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100210FDC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100210FEC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100211000()
{
  return swift_release();
}

uint64_t sub_100211008()
{
  return swift_release();
}

uint64_t sub_100211010()
{
  return swift_release();
}

uint64_t sub_100211018()
{
  return swift_release();
}

uint64_t sub_100211020()
{
  return swift_release();
}

uint64_t sub_100211028()
{
  return swift_release();
}

uint64_t sub_100211030()
{
  return swift_release();
}

uint64_t sub_100211038()
{
  return swift_release();
}

uint64_t sub_100211040()
{
  return swift_release();
}

uint64_t sub_100211048()
{
  return swift_release();
}

uint64_t sub_100211050()
{
  return swift_release();
}

uint64_t sub_100211058()
{
  return swift_release();
}

uint64_t sub_100211060()
{
  return swift_release();
}

uint64_t sub_100211068()
{
  return swift_release();
}

uint64_t sub_100211070()
{
  return swift_release();
}

uint64_t sub_100211078()
{
  return swift_release();
}

uint64_t sub_100211080()
{
  return swift_release();
}

uint64_t sub_100211088()
{
  return swift_release();
}

uint64_t sub_100211090()
{
  return swift_release();
}

uint64_t sub_100211098()
{
  return swift_release();
}

uint64_t sub_1002110A0()
{
  return swift_release();
}

uint64_t sub_1002110A8()
{
  return swift_release();
}

uint64_t sub_1002110B0()
{
  return swift_release();
}

uint64_t sub_1002110B8()
{
  return swift_release();
}

uint64_t sub_1002110C0()
{
  return swift_release();
}

uint64_t sub_1002110C8()
{
  return swift_release();
}

uint64_t sub_1002110D0()
{
  return swift_release();
}

uint64_t sub_1002110D8()
{
  return swift_release();
}

uint64_t sub_1002110E0()
{
  return swift_release();
}

uint64_t sub_1002110E8()
{
  return swift_release();
}

uint64_t sub_1002110F0()
{
  return swift_release();
}

uint64_t sub_1002110F8()
{
  return swift_release();
}

uint64_t sub_100211100()
{
  return swift_release();
}

uint64_t sub_100211108()
{
  return swift_release();
}

uint64_t sub_100211110()
{
  return swift_release();
}

uint64_t sub_100211118()
{
  return swift_release();
}

uint64_t sub_100211120()
{
  return swift_release();
}

uint64_t sub_100211128()
{
  return swift_release();
}

uint64_t sub_100211130()
{
  return swift_release();
}

uint64_t sub_100211138()
{
  return swift_release();
}

uint64_t sub_100211140()
{
  return swift_release();
}

uint64_t sub_100211148()
{
  return swift_release();
}

uint64_t sub_100211150()
{
  return swift_release();
}

uint64_t sub_100211158()
{
  return swift_release();
}

uint64_t sub_100211160()
{
  return swift_release();
}

uint64_t sub_100211168()
{
  return swift_release();
}

uint64_t sub_100211170()
{
  return swift_release();
}

uint64_t sub_100211178()
{
  return swift_release();
}

uint64_t sub_100211180()
{
  return swift_release();
}

uint64_t sub_100211188()
{
  return swift_release();
}

uint64_t sub_100211190()
{
  return swift_release();
}

uint64_t sub_100211198()
{
  return swift_release();
}

uint64_t sub_1002111A0()
{
  return swift_release();
}

uint64_t sub_1002111A8()
{
  return swift_release();
}

uint64_t sub_1002111B0()
{
  return swift_release();
}

uint64_t sub_1002111B8()
{
  return swift_release();
}

uint64_t sub_1002111C0()
{
  return swift_release();
}

uint64_t sub_1002111C8()
{
  return swift_release();
}

uint64_t sub_1002111D0()
{
  return swift_release();
}

uint64_t sub_1002111D8()
{
  return swift_release();
}

uint64_t sub_1002111E0()
{
  return swift_release();
}

uint64_t sub_1002111E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10024CE30);
}

uint64_t initializeBufferWithCopyOfBuffer for LocationHeaderViewGradientBackgroundViewModifier.ScrollAdjustments(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(unsigned char *)(result + 8) = *((unsigned char *)a2 + 8);
  *(void *)unint64_t result = v2;
  return result;
}

_DWORD *initializeBufferWithCopyOfBuffer for PerformanceTestFeatures(_DWORD *result, _DWORD *a2)
{
  *unint64_t result = *a2;
  return result;
}

ValueMetadata *type metadata accessor for GridGeometryLocationViewContentWidthModifier()
{
  return &type metadata for GridGeometryLocationViewContentWidthModifier;
}

uint64_t type metadata accessor for LocationViewGridLayoutContainer()
{
  return sub_100109098();
}

ValueMetadata *type metadata accessor for LocationComponentWidthKey()
{
  return &type metadata for LocationComponentWidthKey;
}

uint64_t type metadata accessor for LocationGridView()
{
  uint64_t result = qword_100E9B2B8;
  if (!qword_100E9B2B8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

__n128 sub_1002112A0@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_1002112D4();
  char v3 = v2[32];
  __n128 result = *(__n128 *)v2;
  long long v5 = *((_OWORD *)v2 + 1);
  *(_OWORD *)a1 = *(_OWORD *)v2;
  *(_OWORD *)(a1 + 16) = v5;
  *(unsigned char *)(a1 + 32) = v3;
  return result;
}

void *sub_1002112D4()
{
  return &unk_100E82670;
}

uint64_t sub_1002112E8(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(void *)__n128 result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 72) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 72) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 32) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_10021133C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10059F2AC);
}

uint64_t sub_100211350(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100688E64);
}

void type metadata accessor for MainState()
{
}

uint64_t getEnumTagSinglePayload for LocationHeaderViewGradientBackground(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xFF && *(unsigned char *)(a1 + 9))
    {
      int v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
      if (v3 <= 1) {
        int v2 = -1;
      }
      else {
        int v2 = v3 ^ 0xFF;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1002113B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10024C1F0);
}

ValueMetadata *type metadata accessor for ApplyLocationComponentContentWidthModifier()
{
  return &type metadata for ApplyLocationComponentContentWidthModifier;
}

uint64_t storeEnumTagSinglePayload for NextHourPrecipitationLeadingValueRule(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t sub_10021141C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 24) - 8) + 16))(a2, v2 + *(int *)(a1 + 52));
}

uint64_t sub_100211454(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return static EnvironmentKey<>._valuesEqual(_:_:)(a1, a2, a3, a4, &protocol witness table for Bool);
}

void sub_100211460(unsigned char *a1@<X8>)
{
  *a1 = 0;
}

uint64_t storeEnumTagSinglePayload for HostsLocationHeaderFrameCoordinatorViewModifier(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void *sub_1002114A4(void *result, int a2)
{
  if (a2 < 0)
  {
    uint64_t v2 = a2 ^ 0x80000000;
    result[1] = 0;
  }
  else
  {
    if (!a2) {
      return result;
    }
    uint64_t v2 = (a2 - 1);
  }
  *__n128 result = v2;
  return result;
}

uint64_t sub_1002114C4(uint64_t *a1)
{
  uint64_t v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

uint64_t sub_1002114DC()
{
  return sub_100117910((void (*)(void))sub_100118360);
}

uint64_t getEnumTagSinglePayload for SceneMetrics(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 48)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_100211514(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1005EDEAC);
}

ValueMetadata *type metadata accessor for WidthFillingLocationComponentContainerModifier()
{
  return &type metadata for WidthFillingLocationComponentContainerModifier;
}

uint64_t getEnumTagSinglePayload for NextHourPrecipitationLeadingValueRule(uint64_t *a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *((unsigned char *)a1 + 32))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      uint64_t v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

ValueMetadata *type metadata accessor for GutterWidthPaddingModifier()
{
  return &type metadata for GutterWidthPaddingModifier;
}

uint64_t type metadata accessor for ConditionPickerMenuView()
{
  uint64_t result = qword_100E75090;
  if (!qword_100E75090) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1002115D0(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    unsigned int v5 = -1;
    return v5 + 1;
  }
  if (a2 >= 0x7E)
  {
    if (a2 + 130 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 130) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    unsigned int v5 = (*a1 | (v4 << 8)) - 131;
    return v5 + 1;
  }
LABEL_17:
  unsigned int v5 = ((*a1 >> 6) & 0xFFFFFF83 | (4 * ((*a1 >> 1) & 0x1F))) ^ 0x7F;
  if (v5 >= 0x7D) {
    unsigned int v5 = -1;
  }
  return v5 + 1;
}

uint64_t sub_100211668(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1004AC778);
}

uint64_t type metadata accessor for HorizontalComponentStack()
{
  return sub_100109098();
}

ValueMetadata *type metadata accessor for LocationViewRowViewModel()
{
  return &type metadata for LocationViewRowViewModel;
}

ValueMetadata *type metadata accessor for HalfWidthFillingLocationComponentContainerModifier()
{
  return &type metadata for HalfWidthFillingLocationComponentContainerModifier;
}

ValueMetadata *type metadata accessor for BottomBarButtonStyle()
{
  return &type metadata for BottomBarButtonStyle;
}

uint64_t type metadata accessor for Selector()
{
  return swift_getGenericMetadata();
}

uint64_t getEnumTagSinglePayload for SunriseSunsetDetailViewAction(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFF)
  {
    if (a2 + 1 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 1) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 2;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v5 = v6 - 2;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

ValueMetadata *type metadata accessor for GridGeometryMinimumHostViewWidthModifier()
{
  return &type metadata for GridGeometryMinimumHostViewWidthModifier;
}

uint64_t sub_100211774(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10043376C);
}

uint64_t getEnumTagSinglePayload for HostsLocationHeaderFrameCoordinatorViewModifier(uint64_t *a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *((unsigned char *)a1 + 16))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      uint64_t v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t type metadata accessor for LazyVStackIfPossible()
{
  return sub_100109098();
}

ValueMetadata *type metadata accessor for HairlineView()
{
  return &type metadata for HairlineView;
}

ValueMetadata *type metadata accessor for GridGeometryContentWidthIDModifier()
{
  return &type metadata for GridGeometryContentWidthIDModifier;
}

ValueMetadata *type metadata accessor for MapPresentationStyleIDModifier()
{
  return &type metadata for MapPresentationStyleIDModifier;
}

ValueMetadata *type metadata accessor for AppStateTransitionModifier()
{
  return &type metadata for AppStateTransitionModifier;
}

ValueMetadata *type metadata accessor for CollisionModifier()
{
  return &type metadata for CollisionModifier;
}

uint64_t sub_100211834(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v8 = sub_100211898();

  return static EnvironmentKey<>._valuesEqual(_:_:)(a1, a2, a3, a4, v8);
}

unint64_t sub_100211898()
{
  unint64_t result = qword_100E65FE8;
  if (!qword_100E65FE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E65FE8);
  }
  return result;
}

uint64_t destroy for Scroll()
{
  return swift_release();
}

ValueMetadata *type metadata accessor for CalculateLocationComponentContainerBackgroundPinningOffsetViewModifier()
{
  return &type metadata for CalculateLocationComponentContainerBackgroundPinningOffsetViewModifier;
}

ValueMetadata *type metadata accessor for ScrollViewBottomPadding()
{
  return &type metadata for ScrollViewBottomPadding;
}

ValueMetadata *type metadata accessor for LocationViewerViewWeatherConditionBackground()
{
  return &type metadata for LocationViewerViewWeatherConditionBackground;
}

uint64_t type metadata accessor for LocationPreviewView()
{
  uint64_t result = qword_100E70C60;
  if (!qword_100E70C60) {
    return swift_getSingletonMetadata();
  }
  return result;
}

ValueMetadata *type metadata accessor for NewsHeaderGradient()
{
  return &type metadata for NewsHeaderGradient;
}

ValueMetadata *type metadata accessor for RoundedRectangle()
{
  return &type metadata for RoundedRectangle;
}

uint64_t initializeBufferWithCopyOfBuffer for LocationViewerViewVFXEnvironment(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  return sub_1000981EC(a1, a2, a3, (void (*)(void, uint64_t, uint64_t))sub_100195B88);
}

void type metadata accessor for GridGeometry()
{
}

ValueMetadata *type metadata accessor for ExplicitComponentWidthModifier()
{
  return &type metadata for ExplicitComponentWidthModifier;
}

uint64_t getEnumTagSinglePayload for PerformanceTestFeatures(unsigned __int8 *a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xFF && a1[4])
    {
      int v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      unsigned int v3 = *a1;
      BOOL v4 = v3 >= 2;
      int v2 = (v3 + 2147483646) & 0x7FFFFFFF;
      if (!v4) {
        int v2 = -1;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t sub_100211A0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return Configurable.setting<A>(_:defaultValue:)(a1, a2, *v6, a6);
}

uint64_t sub_100211A3C(unsigned __int8 *a1)
{
  return *a1;
}

uint64_t getEnumTagSinglePayload for LocationHeaderViewGradientBackgroundViewModifier.ScrollAdjustments(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

ValueMetadata *type metadata accessor for LocationComponentForegroundEffectViewMaskPreferenceKey()
{
  return &type metadata for LocationComponentForegroundEffectViewMaskPreferenceKey;
}

uint64_t sub_100211A74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10024C23C);
}

ValueMetadata *type metadata accessor for ManagedWireframeModifier()
{
  return &type metadata for ManagedWireframeModifier;
}

uint64_t sub_100211A98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1006F55A8);
}

uint64_t storeEnumTagSinglePayload for SceneMetrics(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 48) = v3;
  return result;
}

unsigned char *storeEnumTagSinglePayload for SizingBehavior(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        break;
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LocationComponentContainerViewFramePreferenceKey()
{
  return &type metadata for LocationComponentContainerViewFramePreferenceKey;
}

ValueMetadata *type metadata accessor for NotificationsResubscriptionComponentView()
{
  return &type metadata for NotificationsResubscriptionComponentView;
}

uint64_t type metadata accessor for NotificationsOptInComponentView()
{
  uint64_t result = qword_100E8B540;
  if (!qword_100E8B540) {
    return swift_getSingletonMetadata();
  }
  return result;
}

ValueMetadata *type metadata accessor for LocationTipOverlayModifier()
{
  return &type metadata for LocationTipOverlayModifier;
}

ValueMetadata *type metadata accessor for ReportWeatherComponentView()
{
  return &type metadata for ReportWeatherComponentView;
}

uint64_t storeEnumTagSinglePayload for LocationHeaderViewGradientBackgroundViewModifier.LocationHeaderViewGradientBackgroundGeometry(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)uint64_t result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 24) = v3;
  return result;
}

uint64_t type metadata accessor for NextHourPrecipitationComponentView()
{
  uint64_t result = qword_100E73AE0;
  if (!qword_100E73AE0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata accessor for PrecipitationTotalComponentView()
{
  uint64_t result = qword_100E9DCC0;
  if (!qword_100E9DCC0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100211D04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1004AC814);
}

uint64_t type metadata accessor for AirQualityTopPaddingModifier(uint64_t a1)
{
  return sub_10018678C(a1, qword_100E83E50);
}

uint64_t type metadata accessor for SunriseSunsetComponentView()
{
  uint64_t result = qword_100EA0610;
  if (!qword_100EA0610) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata accessor for SevereAlertComponentView(uint64_t a1)
{
  return sub_10018678C(a1, qword_100E76DA8);
}

uint64_t type metadata accessor for NewsArticleComponentView()
{
  uint64_t result = qword_100E96A58;
  if (!qword_100E96A58) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata accessor for AirQualityComponentView()
{
  uint64_t result = qword_100EB89D0;
  if (!qword_100EB89D0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata accessor for FeelsLikeComponentView()
{
  uint64_t result = qword_100E6D238;
  if (!qword_100E6D238) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata accessor for PressureComponentView(uint64_t a1)
{
  return sub_10018678C(a1, qword_100E9A158);
}

ValueMetadata *type metadata accessor for HumidityComponentView()
{
  return &type metadata for HumidityComponentView;
}

uint64_t type metadata accessor for MoonComponentView(uint64_t a1)
{
  return sub_10018678C(a1, (uint64_t *)&unk_100E78D48);
}

uint64_t type metadata accessor for MapComponentView(uint64_t a1)
{
  return sub_10018678C(a1, qword_100EB1590);
}

ValueMetadata *type metadata accessor for AccessibilityImageDescriptionDisabledModifier()
{
  return &type metadata for AccessibilityImageDescriptionDisabledModifier;
}

void sub_100211F00(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
}

unsigned char *sub_100211F08(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 130 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 130) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0x7E) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0x7D)
  {
    unsigned int v6 = ((a2 - 126) >> 8) + 1;
    *uint64_t result = a2 - 126;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        break;
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = 2 * (((-a2 >> 2) & 0x1F) - 32 * a2);
        break;
    }
  }
  return result;
}

uint64_t sub_100211FE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v8 = sub_100212044();

  return static EnvironmentKey<>._valuesEqual(_:_:)(a1, a2, a3, a4, v8);
}

unint64_t sub_100212044()
{
  unint64_t result = qword_100E65F30;
  if (!qword_100E65F30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E65F30);
  }
  return result;
}

uint64_t sub_100212090(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return static DynamicProperty._makeProperty<A>(in:container:fieldOffset:inputs:)(a1, a2, a3, a4, a6, a5);
}

uint64_t getEnumTagSinglePayload for LocationHeaderViewGradientBackgroundViewModifier.LocationHeaderViewGradientBackgroundGeometry(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 24)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_1002120C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1005DBA80);
}

uint64_t sub_1002120D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10040131C);
}

ValueMetadata *type metadata accessor for ContentStatusBannerPresentationMetricsPreferenceKey()
{
  return &type metadata for ContentStatusBannerPresentationMetricsPreferenceKey;
}

uint64_t sub_1002120FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_allocateGenericValueMetadata(a1, a2, a3, 32);
}

uint64_t sub_100212104(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_allocateGenericValueMetadata(a1, a2, a3, 48);
}

ValueMetadata *type metadata accessor for VisibilityComponentView()
{
  return &type metadata for VisibilityComponentView;
}

uint64_t type metadata accessor for AveragesComponentView()
{
  uint64_t result = qword_100E862B8;
  if (!qword_100E862B8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata accessor for UVIndexComponentView()
{
  uint64_t result = qword_100E8AFC8;
  if (!qword_100E8AFC8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

ValueMetadata *type metadata accessor for LocationNameModifier()
{
  return &type metadata for LocationNameModifier;
}

uint64_t type metadata accessor for WindComponentView(uint64_t a1)
{
  return sub_10018678C(a1, qword_100EB2630);
}

uint64_t sub_1002121E0@<X0>(uint64_t a1@<X8>)
{
  return sub_100120EA8(v1[6], v1[7], v1[2], v1[3], v1[4], v1[5], a1);
}

ValueMetadata *type metadata accessor for NamespaceWrapper()
{
  return &type metadata for NamespaceWrapper;
}

void type metadata accessor for WeatherMapPresentationStyle()
{
}

uint64_t sub_10021220C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1007E17F8);
}

uint64_t sub_100212220(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1009B28B0);
}

uint64_t sub_100212234(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10052FBB4);
}

uint64_t getEnumTagSinglePayload for ConditionsChartID(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 16))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

ValueMetadata *type metadata accessor for MainViewModelEnvironmentModifier()
{
  return &type metadata for MainViewModelEnvironmentModifier;
}

uint64_t type metadata accessor for ActivityModifier()
{
  uint64_t result = qword_100EB7228;
  if (!qword_100EB7228) {
    return swift_getSingletonMetadata();
  }
  return result;
}

ValueMetadata *type metadata accessor for ListMenuView()
{
  return &type metadata for ListMenuView;
}

uint64_t sub_1002122FC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_100212308(*a1, *a2);
}

uint64_t sub_100212308(unsigned __int8 a1, unsigned __int8 a2)
{
  if (a1 >> 6)
  {
    if (a1 >> 6 == 1)
    {
      if ((a2 & 0xC0) != 0x40) {
        return variable initialization expression of SessionEventsAndDataCoordinator.loadedViaReferral();
      }
      return sub_10018E038();
    }
    if (a2 == 128) {
      return 1;
    }
  }
  else if (a2 < 0x40u)
  {
    return sub_10018E038();
  }
  return variable initialization expression of SessionEventsAndDataCoordinator.loadedViaReferral();
}

uint64_t sub_100212370(char *a1)
{
  return sub_10009122C(a1, *(uint64_t (**)(uint64_t, char *))(v1 + 16));
}

uint64_t sub_100212378@<X0>(unsigned char *a1@<X8>)
{
  return sub_1000A2428(*(uint64_t (**)(unsigned char *))(v1 + 16), a1);
}

ValueMetadata *type metadata accessor for ListView()
{
  return &type metadata for ListView;
}

uint64_t sub_100212390()
{
  return sub_10008DF3C();
}

uint64_t sub_1002123A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v8 = sub_100212408();

  return static EnvironmentKey<>._valuesEqual(_:_:)(a1, a2, a3, a4, v8);
}

unint64_t sub_100212408()
{
  unint64_t result = qword_100E65F08;
  if (!qword_100E65F08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E65F08);
  }
  return result;
}

ValueMetadata *type metadata accessor for SizingBehavior()
{
  return &type metadata for SizingBehavior;
}

uint64_t sub_100212468(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1006F55F8);
}

uint64_t storeEnumTagSinglePayload for PerformanceTestFeatures(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_DWORD *)unint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 4) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 4) = 0;
    }
    if (a2) {
      *(unsigned char *)unint64_t result = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MainViewFullscreenMapOverlayModifier()
{
  return &type metadata for MainViewFullscreenMapOverlayModifier;
}

uint64_t sub_1002124D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100100EE8(a1, v2[4], v2[2], v2[3], a2);
}

void *sub_1002124DC()
{
  return &protocol witness table for ObservableObjectPublisher;
}

ValueMetadata *type metadata accessor for PerformanceTestFeatures()
{
  return &type metadata for PerformanceTestFeatures;
}

ValueMetadata *type metadata accessor for RegularContent()
{
  return &type metadata for RegularContent;
}

ValueMetadata *type metadata accessor for CompactContent()
{
  return &type metadata for CompactContent;
}

uint64_t sub_100212520(double *a1, double *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1]) {
    return static EdgeInsets.== infix(_:_:)();
  }
  else {
    return 0;
  }
}

uint64_t sub_10021255C(uint64_t *a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *((unsigned char *)a1 + 97))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      uint64_t v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1002125A0()
{
  return sub_1001BFFF0((uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001BF3AC);
}

void type metadata accessor for WindTip()
{
}

void type metadata accessor for MapTip()
{
}

ValueMetadata *type metadata accessor for NextHourPrecipitationDetailView()
{
  return &type metadata for NextHourPrecipitationDetailView;
}

ValueMetadata *type metadata accessor for LazyUntilDismissedViewModifier()
{
  return &type metadata for LazyUntilDismissedViewModifier;
}

uint64_t type metadata accessor for UpArrowPopoverBackgroundView()
{
  return sub_100109098();
}

uint64_t type metadata accessor for LocationViewerTransitionView()
{
  return sub_100109098();
}

uint64_t getEnumTagSinglePayload for ContentStatusBannerViewStyle(uint64_t *a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *((unsigned char *)a1 + 33))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      uint64_t v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

ValueMetadata *type metadata accessor for HomeAndWorkRefinementView()
{
  return &type metadata for HomeAndWorkRefinementView;
}

ValueMetadata *type metadata accessor for TipOverlayWidthModifier()
{
  return &type metadata for TipOverlayWidthModifier;
}

uint64_t type metadata accessor for SunriseSunsetDetailView(uint64_t a1)
{
  return sub_10018678C(a1, (uint64_t *)&unk_100EA3C18);
}

ValueMetadata *type metadata accessor for AirQualityDetailView()
{
  return &type metadata for AirQualityDetailView;
}

ValueMetadata *type metadata accessor for ConditionDetailView()
{
  return &type metadata for ConditionDetailView;
}

ValueMetadata *type metadata accessor for LocationViewerView()
{
  return &type metadata for LocationViewerView;
}

ValueMetadata *type metadata accessor for AveragesDetailView()
{
  return &type metadata for AveragesDetailView;
}

uint64_t sub_1002126E0(uint64_t (*a1)(void, void, void, void, void))
{
  return a1(v1[6], v1[2], v1[3], v1[4], v1[5]);
}

uint64_t storeEnumTagSinglePayload for NamespaceWrapper(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)unint64_t result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 9) = v3;
  return result;
}

void type metadata accessor for DailyForecastTip()
{
}

ValueMetadata *type metadata accessor for MoonDetailView()
{
  return &type metadata for MoonDetailView;
}

void type metadata accessor for AirQualityTip()
{
}

void type metadata accessor for WindMapTip()
{
}

void type metadata accessor for UVIndexTip()
{
}

unsigned char *sub_100212764(unsigned char *result)
{
  *result &= ~*(unsigned char *)(v1 + 16) & 1;
  return result;
}

unsigned char *sub_10021277C(unsigned char *a1)
{
  return sub_100212784(a1, *(unsigned char *)(v1 + 16));
}

unsigned char *sub_100212784(unsigned char *result, char a2)
{
  *result &= a2 ^ 1;
  return result;
}

void sub_100212798(double *a1@<X8>)
{
  *a1 = sub_1002127C0();
}

double sub_1002127C0()
{
  return 0.0;
}

unsigned char *sub_1002127C8@<X0>(unsigned char *a1@<X8>)
{
  unint64_t result = sub_1002127F4();
  *a1 = *result;
  return result;
}

void *sub_1002127F4()
{
  return &unk_100E73438;
}

void type metadata accessor for CGSize(uint64_t a1)
{
}

ValueMetadata *type metadata accessor for RecordLocationHeaderFrameViewModifier()
{
  return &type metadata for RecordLocationHeaderFrameViewModifier;
}

uint64_t sub_100212824()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t type metadata accessor for LocationViewerLayoutContainer()
{
  return swift_getGenericMetadata();
}

ValueMetadata *type metadata accessor for LocationViewCollisionOptions.PublishedValue()
{
  return &type metadata for LocationViewCollisionOptions.PublishedValue;
}

ValueMetadata *type metadata accessor for NotificationSettingsView()
{
  return &type metadata for NotificationSettingsView;
}

ValueMetadata *type metadata accessor for NotificationsOptInView()
{
  return &type metadata for NotificationsOptInView;
}

void sub_100212884(Swift::OpaquePointer_optional a1)
{
  a1.is_nil = *v1;
  ApplicationStateMonitor.applicationDidFinishLaunching(withOptions:)(a1);
}

uint64_t sub_1002128B0@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(result + 32);
  return result;
}

uint64_t type metadata accessor for PinnedMapView(uint64_t a1)
{
  return sub_10018678C(a1, qword_100E8E898);
}

ValueMetadata *type metadata accessor for SceneMetrics()
{
  return &type metadata for SceneMetrics;
}

ValueMetadata *type metadata accessor for CircleMask()
{
  return &type metadata for CircleMask;
}

uint64_t type metadata accessor for ReportWeatherView()
{
  uint64_t result = qword_100E66A08;
  if (!qword_100E66A08) {
    return swift_getSingletonMetadata();
  }
  return result;
}

__n128 initializeWithCopy for PagingContentOffsets(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t sub_100212958(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1005DBACC);
}

uint64_t sub_10021296C()
{
  return sub_1001BFFF0((uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001BECD0);
}

uint64_t sub_100212984(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1009B2960);
}

uint64_t sub_100212998(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10052FC94);
}

uint64_t storeEnumTagSinglePayload for ComparisonBarView(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 16) = v3;
  return result;
}

ValueMetadata *type metadata accessor for MainViewFullscreenMapZoomTransitionModifier()
{
  return &type metadata for MainViewFullscreenMapZoomTransitionModifier;
}

uint64_t type metadata accessor for DailyComponentForecastRowViewLargeText()
{
  uint64_t result = qword_100E84928;
  if (!qword_100E84928) {
    return swift_getSingletonMetadata();
  }
  return result;
}

ValueMetadata *type metadata accessor for L2sOnLocationViewerSheetViewModifier()
{
  return &type metadata for L2sOnLocationViewerSheetViewModifier;
}

ValueMetadata *type metadata accessor for ContentStatusHeaderBackground()
{
  return &type metadata for ContentStatusHeaderBackground;
}

uint64_t sub_100212A5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1006F2EF8);
}

uint64_t type metadata accessor for MainStateProcessingContext()
{
  uint64_t result = qword_100E8CDB0;
  if (!qword_100E8CDB0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

ValueMetadata *type metadata accessor for UnitsConfigurationSheet()
{
  return &type metadata for UnitsConfigurationSheet;
}

uint64_t sub_100212ACC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10024B984);
}

ValueMetadata *type metadata accessor for LocationHeaderViewGradientBackgroundViewModifier()
{
  return &type metadata for LocationHeaderViewGradientBackgroundViewModifier;
}

unsigned char *sub_100212AF0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_100212B1C();
  *a1 = *result;
  return result;
}

void *sub_100212B1C()
{
  return &unk_100EA12E9;
}

unsigned char *sub_100212B28@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_100212B54();
  *a1 = *result;
  return result;
}

void *sub_100212B54()
{
  return &unk_100EA12E8;
}

ValueMetadata *type metadata accessor for MainViewDestinationLocationViewer()
{
  return &type metadata for MainViewDestinationLocationViewer;
}

uint64_t sub_100212B74@<X0>(uint64_t a1@<X8>)
{
  return sub_100068FD8(*(void *)(v1 + 16), a1);
}

uint64_t sub_100212B84()
{
  return sub_10009731C();
}

uint64_t sub_100212B90(uint64_t a1, uint64_t a2)
{
  return static NamespaceWrapper.== infix(_:_:)(*(void *)a1, *(unsigned __int8 *)(a1 + 8), *(void *)a2, *(unsigned __int8 *)(a2 + 8));
}

uint64_t static NamespaceWrapper.== infix(_:_:)(uint64_t a1, int a2, uint64_t a3, int a4)
{
  if ((a2 | a4)) {
    return a2 & a4 & 1;
  }
  else {
    return static Namespace.ID.== infix(_:_:)();
  }
}

ValueMetadata *type metadata accessor for ModuleContext()
{
  return &type metadata for ModuleContext;
}

uint64_t type metadata accessor for VFXTestView()
{
  uint64_t result = qword_100E6D050;
  if (!qword_100E6D050) {
    return swift_getSingletonMetadata();
  }
  return result;
}

ValueMetadata *type metadata accessor for RowModifier.RowGeometry()
{
  return &type metadata for RowModifier.RowGeometry;
}

uint64_t sub_100212C30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_allocateGenericValueMetadata(a1, a2, a3, 24);
}

uint64_t sub_100212C40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100405460);
}

uint64_t sub_100212C54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1005E17F8);
}

uint64_t sub_100212C68(uint64_t result, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(unsigned int *)(v5 + 84);
  uint64_t v7 = *(unsigned __int8 *)(v5 + 80);
  if (v6 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v5 + 84);
  }
  if (!a2) {
    return 0;
  }
  if (v8 >= a2)
  {
LABEL_26:
    if ((v6 & 0x80000000) != 0)
    {
      return _s7Weather24LocationCompositionStateOwet_0(((result & 0xFFFFFFFFFFFFFFF8) + v7 + 32) & ~v7, v6, v4);
    }
    else
    {
      unint64_t v17 = *(void *)(result + 8);
      if (v17 >= 0xFFFFFFFF) {
        LODWORD(v17) = -1;
      }
      return (v17 + 1);
    }
  }
  else
  {
    unint64_t v9 = ((*(void *)(*(void *)(v4 - 8) + 64) + ((v7 + 32) & ~v7) + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
    unsigned int v10 = a2 - v8;
    uint64_t v11 = v9 & 0xFFFFFFF8;
    if ((v9 & 0xFFFFFFF8) != 0) {
      unsigned int v12 = 2;
    }
    else {
      unsigned int v12 = v10 + 1;
    }
    if (v12 >= 0x10000) {
      unsigned int v13 = 4;
    }
    else {
      unsigned int v13 = 2;
    }
    if (v12 < 0x100) {
      unsigned int v13 = 1;
    }
    if (v12 >= 2) {
      uint64_t v14 = v13;
    }
    else {
      uint64_t v14 = 0;
    }
    switch(v14)
    {
      case 1:
        int v15 = *(unsigned __int8 *)(result + v9);
        if (!v15) {
          goto LABEL_26;
        }
        goto LABEL_22;
      case 2:
        int v15 = *(unsigned __int16 *)(result + v9);
        if (!v15) {
          goto LABEL_26;
        }
        goto LABEL_22;
      case 3:
        __break(1u);
        return result;
      case 4:
        int v15 = *(_DWORD *)(result + v9);
        if (!v15) {
          goto LABEL_26;
        }
LABEL_22:
        int v16 = v15 - 1;
        if (v11)
        {
          int v16 = 0;
          LODWORD(v11) = *(_DWORD *)result;
        }
        uint64_t result = v8 + (v11 | v16) + 1;
        break;
      default:
        goto LABEL_26;
    }
  }
  return result;
}

void *initializeWithTake for ComparisonStackView(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x49uLL);
}

__n128 initializeWithTake for LocationsOfInterestState(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

void type metadata accessor for CGRect(uint64_t a1)
{
}

ValueMetadata *type metadata accessor for DetermineLocationComponentHeaderLineLimitModifier()
{
  return &type metadata for DetermineLocationComponentHeaderLineLimitModifier;
}

ValueMetadata *type metadata accessor for InvertedColorSchemeStatusBarCorrectionModifier()
{
  return &type metadata for InvertedColorSchemeStatusBarCorrectionModifier;
}

uint64_t sub_100212E10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100405464);
}

ValueMetadata *type metadata accessor for FullscreenMapPresentationPreferenceKey()
{
  return &type metadata for FullscreenMapPresentationPreferenceKey;
}

uint64_t sub_100212E34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return sub_100212EA4(a1, a2, a3, a4, a5, a6, a7, a8, a9, (uint64_t (*)(uint64_t))&Layout.explicitAlignment(of:in:proposal:subviews:cache:));
}

uint64_t sub_100212E6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return sub_100212EA4(a1, a2, a3, a4, a5, a6, a7, a8, a9, (uint64_t (*)(uint64_t))&Layout.explicitAlignment(of:in:proposal:subviews:cache:));
}

uint64_t sub_100212EA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t (*a10)(uint64_t))
{
  return a10(a1);
}

uint64_t destroy for HumidityComponentViewModel()
{
  return swift_bridgeObjectRelease();
}

uint64_t storeEnumTagSinglePayload for ContentStatusBannerViewStyle(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 33) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DefaultButtonStyleModifier()
{
  return &type metadata for DefaultButtonStyleModifier;
}

ValueMetadata *type metadata accessor for TrackVisibilityModifier()
{
  return &type metadata for TrackVisibilityModifier;
}

void sub_100212F54(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
}

uint64_t type metadata accessor for FullscreenMapView(uint64_t a1)
{
  return sub_10018678C(a1, qword_100E74380);
}

uint64_t sub_100212F88()
{
  return sub_1002126E0((uint64_t (*)(void, void, void, void, void))sub_10011FED4);
}

ValueMetadata *type metadata accessor for LocationView()
{
  return &type metadata for LocationView;
}

ValueMetadata *type metadata accessor for WeatherComponentButtonAccessibilityLabelModifier()
{
  return &type metadata for WeatherComponentButtonAccessibilityLabelModifier;
}

BOOL sub_100212FCC(double *a1, double *a2)
{
  return sub_100212FE0(*a1, a1[1], a1[2], *a2, a2[1], a2[2]);
}

BOOL sub_100212FE0(double a1, double a2, double a3, double a4, double a5, double a6)
{
  BOOL v6 = a1 == a4;
  if (a2 != a5) {
    BOOL v6 = 0;
  }
  return a3 == a6 && v6;
}

void *initializeWithTake for DetermineCompactGridLayoutModifier(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x59uLL);
}

ValueMetadata *type metadata accessor for DetermineWhetherViewsShouldConsiderMapPinnedToTopModifier()
{
  return &type metadata for DetermineWhetherViewsShouldConsiderMapPinnedToTopModifier;
}

ValueMetadata *type metadata accessor for NeedsVisibilityDetectionComputationPreferenceKey()
{
  return &type metadata for NeedsVisibilityDetectionComputationPreferenceKey;
}

uint64_t sub_10021304C@<X0>(uint64_t a1@<X8>)
{
  return sub_10008C200(*v1, v1[1], a1);
}

uint64_t sub_100213054@<X0>(uint64_t a1@<X8>)
{
  return sub_10005742C(a1);
}

void sub_10021305C(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

ValueMetadata *type metadata accessor for LocationViewerViewCollisionEnvironment()
{
  return &type metadata for LocationViewerViewCollisionEnvironment;
}

ValueMetadata *type metadata accessor for LocationPreviewOnMapSheetViewModifier()
{
  return &type metadata for LocationPreviewOnMapSheetViewModifier;
}

uint64_t sub_100213088(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4)
{
  return sub_1000EDB78(a1, a2, a3, a4);
}

ValueMetadata *type metadata accessor for DetermineCompactGridLayoutModifier()
{
  return &type metadata for DetermineCompactGridLayoutModifier;
}

ValueMetadata *type metadata accessor for ComputedGridGeometryPreferenceKey()
{
  return &type metadata for ComputedGridGeometryPreferenceKey;
}

uint64_t *assignWithCopy for LocationViewerViewVFXEnvironment(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  return sub_10005C42C(a1, a2, a3, (void (*)(void, uint64_t, uint64_t))sub_100195B88, (void (*)(uint64_t, uint64_t, uint64_t))sub_10018F6E4);
}

ValueMetadata *type metadata accessor for LocationViewerViewVFXEnvironment()
{
  return &type metadata for LocationViewerViewVFXEnvironment;
}

ValueMetadata *type metadata accessor for LocationComponentInputHeaderView()
{
  return &type metadata for LocationComponentInputHeaderView;
}

uint64_t sub_10021310C(uint64_t a1, uint64_t a2)
{
  return sub_100213120(*(void *)(a1 + 8), *(void *)(a2 + 8), *(float *)a1, *(float *)a2);
}

uint64_t sub_100213120(uint64_t a1, uint64_t a2, float a3, float a4)
{
  if (a3 == a4) {
    return sub_1000C96D4(a1, a2);
  }
  else {
    return 0;
  }
}

uint64_t sub_100213138(uint64_t a1)
{
  return sub_10008C6D0(a1, (void (*)(void))type metadata accessor for ConditionSummaryModifier, (uint64_t (*)(uint64_t))sub_100070720);
}

uint64_t sub_100213164(uint64_t a1)
{
  return sub_10008C6D0(a1, (void (*)(void))type metadata accessor for TemperatureModifier, (uint64_t (*)(uint64_t))sub_1000797D4);
}

ValueMetadata *type metadata accessor for VisibilityModifier()
{
  return &type metadata for VisibilityModifier;
}

uint64_t sub_1002131A0(uint64_t a1)
{
  return sub_10008C6D0(a1, (void (*)(void))type metadata accessor for ConditionModifier, (uint64_t (*)(uint64_t))sub_100070860);
}

uint64_t sub_1002131CC@<X0>(BOOL *a1@<X8>)
{
  return sub_10008DE24(a1);
}

ValueMetadata *type metadata accessor for WeatherComponentButtonAccessibilityLabelPreferenceKey()
{
  return &type metadata for WeatherComponentButtonAccessibilityLabelPreferenceKey;
}

unsigned char *sub_1002131EC(unsigned char *result, unsigned int a2, unsigned int a3)
{
  unsigned int v3 = a3 + 5;
  if (a3 + 5 >= 0xFFFF00) {
    int v4 = 4;
  }
  else {
    int v4 = 2;
  }
  if (v3 >> 8 < 0xFF) {
    int v4 = 1;
  }
  if (v3 >= 0x100) {
    unsigned int v5 = v4;
  }
  else {
    unsigned int v5 = 0;
  }
  if (a3 >= 0xFB) {
    uint64_t v6 = v5;
  }
  else {
    uint64_t v6 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v7 = ((a2 - 251) >> 8) + 1;
    *__n128 result = a2 + 5;
    switch(v6)
    {
      case 1:
        result[1] = v7;
        break;
      case 2:
        *(_WORD *)(result + 1) = v7;
        break;
      case 3:
LABEL_25:
        __break(1u);
        break;
      case 4:
        *(_DWORD *)(result + 1) = v7;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v6)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_19;
      case 3:
        goto LABEL_25;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      default:
LABEL_19:
        if (a2) {
LABEL_20:
        }
          *__n128 result = a2 + 5;
        break;
    }
  }
  return result;
}

unsigned __int8 *sub_1002132C0(unsigned __int8 *result, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFB)
  {
LABEL_18:
    unsigned int v6 = *result;
    if (v6 >= 4) {
      unsigned int v7 = v6 - 3;
    }
    else {
      unsigned int v7 = 0;
    }
    if (v7 >= 3) {
      return (unsigned __int8 *)(v7 - 2);
    }
    else {
      return 0;
    }
  }
  else
  {
    unsigned int v2 = a2 + 5;
    if (a2 + 5 >= 0xFFFF00) {
      unsigned int v3 = 4;
    }
    else {
      unsigned int v3 = 2;
    }
    if (v2 >> 8 < 0xFF) {
      unsigned int v3 = 1;
    }
    if (v2 >= 0x100) {
      uint64_t v4 = v3;
    }
    else {
      uint64_t v4 = 0;
    }
    switch(v4)
    {
      case 1:
        int v5 = result[1];
        if (!result[1]) {
          goto LABEL_18;
        }
        goto LABEL_16;
      case 2:
        int v5 = *(unsigned __int16 *)(result + 1);
        if (!*(_WORD *)(result + 1)) {
          goto LABEL_18;
        }
        goto LABEL_16;
      case 3:
        __break(1u);
        return result;
      case 4:
        int v5 = *(_DWORD *)(result + 1);
        if (!v5) {
          goto LABEL_18;
        }
LABEL_16:
        __n128 result = (unsigned __int8 *)((*result | (v5 << 8)) - 5);
        break;
      default:
        goto LABEL_18;
    }
  }
  return result;
}

void type metadata accessor for WeatherMapPresentationIntent()
{
}

ValueMetadata *type metadata accessor for LocationHeaderViewGradientBackgroundViewModifier.LocationHeaderViewGradientBackgroundGeometry()
{
  return &type metadata for LocationHeaderViewGradientBackgroundViewModifier.LocationHeaderViewGradientBackgroundGeometry;
}

uint64_t sub_10021338C()
{
  return sub_1001BFFF0((uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1000917D4);
}

void *initializeWithTake for DetermineWhetherViewsShouldConsiderMapPinnedToTopModifier(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x51uLL);
}

_WORD *initializeBufferWithCopyOfBuffer for NotificationSettingsViewState(_WORD *result, _WORD *a2)
{
  *__n128 result = *a2;
  return result;
}

void type metadata accessor for CGPoint(uint64_t a1)
{
}

uint64_t type metadata accessor for Resolved()
{
  return sub_100109098();
}

ValueMetadata *type metadata accessor for HostsLocationHeaderFrameCoordinatorViewModifier()
{
  return &type metadata for HostsLocationHeaderFrameCoordinatorViewModifier;
}

ValueMetadata *type metadata accessor for FullscreenMapPresentationSourceViewModifier()
{
  return &type metadata for FullscreenMapPresentationSourceViewModifier;
}

ValueMetadata *type metadata accessor for InteractiveMapColorSchemePreferenceKey()
{
  return &type metadata for InteractiveMapColorSchemePreferenceKey;
}

uint64_t sub_100213430@<X0>(uint64_t a1@<X8>)
{
  unsigned int v2 = sub_100213474();
  char v3 = *v2;
  uint64_t v5 = *((void *)v2 + 1);
  uint64_t v4 = *((void *)v2 + 2);
  *(unsigned char *)a1 = v3;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v4;

  return swift_bridgeObjectRetain();
}

char *sub_100213474()
{
  return &byte_100E741E8;
}

double sub_100213480@<D0>(double *a1@<X8>)
{
  return sub_1000F8CC8(v1 + 16, a1);
}

ValueMetadata *type metadata accessor for LocationHeaderViewGradientBackground()
{
  return &type metadata for LocationHeaderViewGradientBackground;
}

ValueMetadata *type metadata accessor for LocationHeaderViewBackgroundLayout()
{
  return &type metadata for LocationHeaderViewBackgroundLayout;
}

uint64_t storeEnumTagSinglePayload for HumidityComponentViewModel(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t getEnumTagSinglePayload for HumidityComponentViewModel(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 24))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 16);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_100213528(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100401320);
}

uint64_t destroy for ExplicitComponentWidthModifier(uint64_t a1)
{
  return sub_10014D82C(*(void *)a1, *(unsigned __int8 *)(a1 + 8), *(unsigned char *)(a1 + 9));
}

unsigned char *storeEnumTagSinglePayload for LocationViewPresentationKind(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        break;
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

void sub_100213620(_DWORD *a1@<X8>)
{
  *a1 = 16843009;
}

uint64_t sub_100213630(uint64_t a1)
{
  return sub_100068F58(a1, (uint64_t)type metadata accessor for MeasuredLocationViewerView, (uint64_t (*)(uint64_t))sub_1000E1F2C);
}

double sub_10021365C@<D0>(__n128 *a1@<X8>)
{
  *(void *)&double result = sub_1000A0A24((void (*)(unint64_t *__return_ptr))sub_1000A0A98, a1).n128_u64[0];
  return result;
}

double sub_100213674@<D0>(__n128 *a1@<X8>)
{
  *(void *)&double result = sub_1000A0A24((void (*)(unint64_t *__return_ptr))sub_1000A0BB0, a1).n128_u64[0];
  return result;
}

ValueMetadata *type metadata accessor for LocationContentOfflineView()
{
  return &type metadata for LocationContentOfflineView;
}

ValueMetadata *type metadata accessor for FullscreenMapPresentation()
{
  return &type metadata for FullscreenMapPresentation;
}

ValueMetadata *type metadata accessor for ForegroundEffectViewMask()
{
  return &type metadata for ForegroundEffectViewMask;
}

void sub_1002136C8(unsigned char *a1@<X8>)
{
  *a1 = 0x80;
}

uint64_t type metadata accessor for LearnMoreAttributorView()
{
  uint64_t result = qword_100EA9268;
  if (!qword_100EA9268) {
    return swift_getSingletonMetadata();
  }
  return result;
}

ValueMetadata *type metadata accessor for WireframeInterestLevel()
{
  return &type metadata for WireframeInterestLevel;
}

ValueMetadata *type metadata accessor for PinningHeaderModifier.PinningHeaderGeometry()
{
  return &type metadata for PinningHeaderModifier.PinningHeaderGeometry;
}

void type metadata accessor for ListLocationViewModel.ID()
{
}

ValueMetadata *type metadata accessor for PagingContentOffsets()
{
  return &type metadata for PagingContentOffsets;
}

void sub_100213758(double *a1@<X8>)
{
  sub_100054DE8(*(unsigned char *)(v1 + 16), a1, *(double *)(v1 + 24));
}

uint64_t sub_100213768(uint64_t a1)
{
  return sub_10008C6D0(a1, (void (*)(void))type metadata accessor for TranslationModifier, (uint64_t (*)(uint64_t))sub_10006B5FC);
}

uint64_t sub_1002137A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1000AA34C(a1, *v2, v2[1], v2[2], v2[3], a2);
}

unsigned char *sub_1002137AC@<X0>(unsigned char *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_10003F4BC(a1, v2[2], v2[3], v2[4], v2[5], a2);
}

ValueMetadata *type metadata accessor for BackgroundModifier.BackgroundGeometry()
{
  return &type metadata for BackgroundModifier.BackgroundGeometry;
}

ValueMetadata *type metadata accessor for TabViewTransition()
{
  return &type metadata for TabViewTransition;
}

uint64_t sub_1002137DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10024CE34);
}

uint64_t type metadata accessor for StateProcessor()
{
  return swift_getGenericMetadata();
}

uint64_t sub_100213808(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100630E54);
}

ValueMetadata *type metadata accessor for HeaderModifier.HeaderGeometry()
{
  return &type metadata for HeaderModifier.HeaderGeometry;
}

uint64_t type metadata accessor for ReferenceBox()
{
  return sub_100109098();
}

ValueMetadata *type metadata accessor for WeatherConditionBackgroundBindingModifierWithVFXBackground()
{
  return &type metadata for WeatherConditionBackgroundBindingModifierWithVFXBackground;
}

ValueMetadata *type metadata accessor for WeatherTip()
{
  return &type metadata for WeatherTip;
}

uint64_t sub_100213870(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_allocateGenericValueMetadata(a1, a2, a3, 40);
}

void sub_100213878(uint64_t a1@<X0>, void *a2@<X8>)
{
  sub_10005EA74(a1, v2 + 16, a2);
}

uint64_t sub_100213880(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10019CE9C(a1, a2, a3, a4, (uint64_t (*)(void))type metadata accessor for DisplayMetrics, (uint64_t)type metadata accessor for DisplayMetrics, (uint64_t (*)(char *))sub_1001CB24C);
}

void *initializeWithTake for SearchViewModel(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x61uLL);
}

uint64_t storeEnumTagSinglePayload for ResizeMacWindow(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)uint64_t result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 32) = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for ComparisonBarView(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t type metadata accessor for Debounced()
{
  return sub_100109098();
}

uint64_t sub_100213938(uint64_t a1)
{
  return sub_10005DCF0(*(double *)(v1 + 8), a1, *(unsigned char *)v1, *(void *)(v1 + 16), *(unsigned char *)(v1 + 24));
}

uint64_t sub_100213950(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(*(void *)(*(void *)(a2 + 16) - 8) + 8))();
}

uint64_t sub_10021397C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1;
}

uint64_t sub_1002139E0()
{
  return sub_100202224();
}

uint64_t sub_1002139E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100073F4C(a1, *(unsigned char *)v2, *(void *)(v2 + 8), a2);
}

void sub_1002139F4(uint64_t a1@<X8>)
{
  char v1 = byte_100E65EA8;
  *(void *)a1 = qword_100E65EA0;
  *(unsigned char *)(a1 + 8) = v1;
}

uint64_t sub_100213A10@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10007602C(a1, (uint64_t *)(v2 + 16), a2);
}

uint64_t sub_100213A1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10003E20C(a1, *(void *)v2, *(void *)(v2 + 8), *(void *)(v2 + 16), *(unsigned char *)(v2 + 24), a2);
}

uint64_t sub_100213A30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1001F89A4(a1, *(void *)v2, *(unsigned char *)(v2 + 8), *(void *)(v2 + 16), *(unsigned __int8 *)(v2 + 24) | (*(unsigned __int8 *)(v2 + 25) << 8), a2);
}

uint64_t sub_100213A5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1005E1914);
}

ValueMetadata *type metadata accessor for DailyComponentForecastRowBackgroundView()
{
  return &type metadata for DailyComponentForecastRowBackgroundView;
}

uint64_t sub_100213A84@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100045064(a1, a2);
}

uint64_t sub_100213A9C@<X0>(char *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100007E50(a1, v2 + 16, a2);
}

uint64_t sub_100213AA8()
{
  return sub_10004D508();
}

double sub_100213AB4()
{
  double result = *(double *)(v0 + 24);
  *(double *)(*(void *)(v0 + 16) + 16) = result;
  return result;
}

double sub_100213AC4()
{
  double result = *(double *)(v0 + 24);
  *(double *)(*(void *)(v0 + 16) + 24) = result;
  return result;
}

double sub_100213AE0(uint64_t a1, char a2)
{
  return sub_100213B00(a1, a2 & 1);
}

double sub_100213B00(uint64_t a1, char a2)
{
  double result = *(double *)&a1;
  if (a2) {
    double result = 10.0;
  }
  if (result > 256.0) {
    return 256.0;
  }
  return result;
}

uint64_t sub_100213B50@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10004C7B8(a1, a2);
}

void sub_100213B60()
{
}

uint64_t sub_100213B94(uint64_t a1, uint64_t a2)
{
  return sub_100069148(a1, a2, (void *)(v2 + 16), *(void *)(v2 + 56));
}

uint64_t sub_100213BB8(uint64_t a1)
{
  return sub_1000802E8(a1);
}

uint64_t sub_100213BC8@<X0>(uint64_t *a1@<X8>)
{
  return NotificationAuthorizationState.shortDescription.getter(a1);
}

uint64_t sub_100213BD4()
{
  return sub_10008DFB0(*(unsigned char *)(v0 + 16));
}

uint64_t type metadata accessor for LocationGridDeterminationView()
{
  return sub_100109098();
}

uint64_t sub_100213BF8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for GCDSerialDispatchQueueFactory();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for GCDSerialDispatchQueueFactory()
{
  uint64_t result = qword_100E9DC30;
  if (!qword_100E9DC30) {
    return swift_getSingletonMetadata();
  }
  return result;
}

ValueMetadata *type metadata accessor for ContentStatusBannerViewStyle()
{
  return &type metadata for ContentStatusBannerViewStyle;
}

ValueMetadata *type metadata accessor for ContentStatusBannerViewModel()
{
  return &type metadata for ContentStatusBannerViewModel;
}

void sub_100213CD4(unint64_t a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(a4 + 16);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned int *)(v7 + 84);
  if (v8 <= 0x7FFFFFFF) {
    unsigned int v9 = 0x7FFFFFFF;
  }
  else {
    unsigned int v9 = *(_DWORD *)(v7 + 84);
  }
  uint64_t v10 = *(unsigned __int8 *)(v7 + 80);
  size_t v11 = ((*(void *)(*(void *)(v6 - 8) + 64) + ((v10 + 32) & ~v10) + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v9 >= a3)
  {
    int v15 = 0;
  }
  else
  {
    unsigned int v12 = a3 - v9;
    if (((*(_DWORD *)(*(void *)(v6 - 8) + 64) + ((v10 + 32) & ~v10) + 7) & 0xFFFFFFF8) == 0xFFFFFFF0) {
      unsigned int v13 = v12 + 1;
    }
    else {
      unsigned int v13 = 2;
    }
    if (v13 >= 0x10000) {
      int v14 = 4;
    }
    else {
      int v14 = 2;
    }
    if (v13 < 0x100) {
      int v14 = 1;
    }
    if (v13 >= 2) {
      int v15 = v14;
    }
    else {
      int v15 = 0;
    }
  }
  if (a2 <= v9)
  {
    switch(v15)
    {
      case 1:
        *(unsigned char *)(a1 + v11) = 0;
        if (a2) {
          goto LABEL_32;
        }
        break;
      case 2:
        *(_WORD *)(a1 + v11) = 0;
        if (a2) {
          goto LABEL_32;
        }
        break;
      case 3:
LABEL_42:
        __break(1u);
        break;
      case 4:
        *(_DWORD *)(a1 + v11) = 0;
        goto LABEL_31;
      default:
LABEL_31:
        if (a2)
        {
LABEL_32:
          if ((v8 & 0x80000000) != 0)
          {
            unint64_t v18 = ((a1 & 0xFFFFFFFFFFFFFFF8) + v10 + 32) & ~v10;
            _s7Weather24LocationCompositionStateOwst_0(v18, a2, v8, v6);
          }
          else if ((a2 & 0x80000000) != 0)
          {
            *(void *)a1 = a2 ^ 0x80000000;
            *(void *)(a1 + 8) = 0;
          }
          else
          {
            *(void *)(a1 + 8) = (a2 - 1);
          }
        }
        break;
    }
  }
  else
  {
    if (((*(_DWORD *)(*(void *)(v6 - 8) + 64) + ((v10 + 32) & ~v10) + 7) & 0xFFFFFFF8) == 0xFFFFFFF0) {
      int v16 = a2 - v9;
    }
    else {
      int v16 = 1;
    }
    if (((*(_DWORD *)(*(void *)(v6 - 8) + 64) + ((v10 + 32) & ~v10) + 7) & 0xFFFFFFF8) != 0xFFFFFFF0)
    {
      int v17 = ~v9 + a2;
      bzero((void *)a1, v11);
      *(_DWORD *)a1 = v17;
    }
    switch(v15)
    {
      case 1:
        *(unsigned char *)(a1 + v11) = v16;
        break;
      case 2:
        *(_WORD *)(a1 + v11) = v16;
        break;
      case 3:
        goto LABEL_42;
      case 4:
        *(_DWORD *)(a1 + v11) = v16;
        break;
      default:
        return;
    }
  }
}

uint64_t sub_100213EBC(uint64_t a1)
{
  return sub_100068F58(a1, (uint64_t)type metadata accessor for LocationViewBannerContainer, (uint64_t (*)(uint64_t))sub_10006D850);
}

uint64_t sub_100213EE8@<X0>(void *a1@<X8>)
{
  return sub_1000898B8(*(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(unsigned __int8 *)(v1 + 40), a1);
}

uint64_t sub_100213F04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1006F2FE8);
}

uint64_t sub_100213F1C()
{
  return sub_10003E0C8((uint64_t)type metadata accessor for LocationViewCollisionOptions, sub_10003E10C);
}

uint64_t type metadata accessor for LocationFooterViewRowStyle()
{
  uint64_t result = qword_100EA4FC0;
  if (!qword_100EA4FC0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100213F90@<X0>(uint64_t *a1@<X8>)
{
  return LocationAuthorizationState.shortDescription.getter(a1);
}

uint64_t sub_100213F9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10006ED40(a1, *v2, a2);
}

uint64_t sub_100213FA4(uint64_t result, char a2)
{
  *(unsigned char *)(result + 24) = a2 & 1;
  return result;
}

uint64_t sub_100213FB0(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 24);
}

uint64_t sub_100213FBC@<X0>(uint64_t a1@<X8>)
{
  return sub_1000653F0(*v1, a1);
}

uint64_t type metadata accessor for HomeAndWorkRefinementRow(uint64_t a1)
{
  return sub_10018678C(a1, qword_100E76530);
}

uint64_t sub_100213FEC(uint64_t a1)
{
  return sub_100079930(a1, (void (*)(void))type metadata accessor for ConditionSummaryModifier, type metadata accessor for ConditionSummaryModifier);
}

uint64_t sub_100214018()
{
  return sub_10007BF28(v0 + 16);
}

ValueMetadata *type metadata accessor for LocationHeaderViewModel()
{
  return &type metadata for LocationHeaderViewModel;
}

uint64_t sub_100214034(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(void *)uint64_t result = a2 - 2;
    *(void *)(result + 8) = 0;
    LOBYTE(a2) = 2;
  }
  *(unsigned char *)(result + 16) = a2;
  return result;
}

uint64_t sub_10021404C(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 1u) {
    return *(unsigned __int8 *)(a1 + 16);
  }
  else {
    return (*(_DWORD *)a1 + 2);
  }
}

ValueMetadata *type metadata accessor for WireframedContentStyle()
{
  return &type metadata for WireframedContentStyle;
}

ValueMetadata *type metadata accessor for LocationViewComponent.ComponentType()
{
  return &type metadata for LocationViewComponent.ComponentType;
}

void sub_100214084()
{
}

uint64_t type metadata accessor for StatePersistenceData()
{
  return swift_getGenericMetadata();
}

uint64_t sub_1002140C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1009BA824);
}

uint64_t sub_1002140DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1009BA7A4);
}

uint64_t sub_1002140F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100064B70(a1, *(unsigned char *)v2, *(void *)(v2 + 24), a2, *(double *)(v2 + 8), *(double *)(v2 + 16));
}

uint64_t sub_100214100()
{
  return sub_100022FF0();
}

uint64_t sub_100214118(uint64_t a1)
{
  return sub_100079930(a1, (void (*)(void))type metadata accessor for TemperatureModifier, type metadata accessor for TemperatureModifier);
}

uint64_t type metadata accessor for StateProcessorGroup()
{
  return sub_100109098();
}

uint64_t sub_10021416C@<X0>(uint64_t a1@<X8>)
{
  return sub_10009F1B0(*(uint64_t (**)(void))(v1 + 16), a1);
}

uint64_t sub_100214174(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_allocateGenericValueMetadata(a1, a2, a3, 56);
}

ValueMetadata *type metadata accessor for ContentStatusBanner.Placement()
{
  return &type metadata for ContentStatusBanner.Placement;
}

ValueMetadata *type metadata accessor for CollisionVFXOptions()
{
  return &type metadata for CollisionVFXOptions;
}

uint64_t sub_10021419C()
{
  return sub_1000A9ED4(v0[2], v0[3], v0[4]);
}

uint64_t sub_1002141B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10090FA38);
}

uint64_t sub_1002141D4(uint64_t a1)
{
  return sub_100079930(a1, (void (*)(void))type metadata accessor for ConditionModifier, type metadata accessor for ConditionModifier);
}

void sub_100214200(double *a1@<X8>)
{
  sub_100047B80(a1, *(double *)(v1 + 16));
}

uint64_t sub_100214208@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if (*(unsigned char *)(v2 + 9)) {
    int v3 = 256;
  }
  else {
    int v3 = 0;
  }
  return sub_1000C973C(*(void *)v2, v3 | *(unsigned __int8 *)(v2 + 8), *(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(a1 + 16), *(void *)(a1 + 24), a2);
}

uint64_t sub_10021423C@<X0>(uint64_t a1@<X8>)
{
  if (*(unsigned char *)(v1 + 41)) {
    __int16 v2 = 256;
  }
  else {
    __int16 v2 = 0;
  }
  return sub_1000C9DE8(*(void *)(v1 + 32), v2 | *(unsigned __int8 *)(v1 + 40), *(void (**)(uint64_t))(v1 + 48), *(void *)(v1 + 56), *(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

uint64_t sub_10021426C@<X0>(uint64_t a1@<X8>)
{
  return sub_1000C9B90(*(void *)(v1 + 24), a1);
}

uint64_t type metadata accessor for StatePersistence()
{
  return swift_getGenericMetadata();
}

void sub_1002142B4()
{
  sub_100214410(319, (unint64_t *)&qword_100E6EE60, (uint64_t (*)(uint64_t))&type metadata accessor for Location, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
  if (v0 <= 0x3F)
  {
    sub_100214410(319, (unint64_t *)&qword_100E638F0, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_100214410(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_100214478@<X0>(uint64_t *a1@<X8>)
{
  return sub_100083764((uint64_t (*)(void))type metadata accessor for NotificationsResubscriptionComponentViewModelFactory, (uint64_t)&off_100E13450, a1);
}

uint64_t sub_100214498@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1000DAFE0(a1, (uint64_t (*)(void))type metadata accessor for PrecipitationTotalComponentViewModelFactory, (uint64_t)&off_100E2A0C0, a2);
}

uint64_t sub_1002144B8@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1000DAFE0(a1, (uint64_t (*)(void))type metadata accessor for HourlyForecastComponentViewModelFactory, (uint64_t)&off_100E1CB90, a2);
}

uint64_t sub_1002144D8@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1000DAFE0(a1, (uint64_t (*)(void))type metadata accessor for DailyForecastComponentViewModelFactory, (uint64_t)&off_100E16D38, a2);
}

uint64_t sub_1002144F8@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1000DAFE0(a1, (uint64_t (*)(void))type metadata accessor for VisibilityComponentViewModelFactory, (uint64_t)&off_100E2BAA8, a2);
}

uint64_t sub_100214518@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1000DAFE0(a1, (uint64_t (*)(void))type metadata accessor for AirQualityComponentViewModelFactory, (uint64_t)&off_100E38DC8, a2);
}

uint64_t sub_100214538@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1000DAFE0(a1, (uint64_t (*)(void))type metadata accessor for FeelsLikeComponentViewModelFactory, (uint64_t)&off_100E35D58, a2);
}

uint64_t sub_100214558@<X0>(uint64_t *a1@<X8>)
{
  return sub_100083764((uint64_t (*)(void))type metadata accessor for PressureComponentViewModelFactory, (uint64_t)&off_100E39AB0, a1);
}

uint64_t sub_100214578@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1000DAFE0(a1, (uint64_t (*)(void))type metadata accessor for AveragesComponentViewModelFactory, (uint64_t)&off_100E19EE8, a2);
}

uint64_t sub_100214598@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1000DAFE0(a1, (uint64_t (*)(void))type metadata accessor for UVIndexComponentViewModelFactory, (uint64_t)&off_100E2E048, a2);
}

uint64_t sub_1002145B8(void *a1)
{
  return sub_1000DB0AC(a1, &qword_100E8DE18, (void (*)(uint64_t))type metadata accessor for VisibilityComponentViewModelFactory);
}

uint64_t sub_1002145D8@<X0>(uint64_t *a1@<X8>)
{
  return sub_100083764((uint64_t (*)(void))type metadata accessor for WindComponentViewModelFactory, (uint64_t)&off_100E27900, a1);
}

uint64_t sub_1002145F8@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1000DAFE0(a1, (uint64_t (*)(void))type metadata accessor for MoonComponentViewModelFactory, (uint64_t)&off_100E2C3B8, a2);
}

uint64_t sub_100214618(void *a1)
{
  return sub_1000DB0AC(a1, &qword_100E8DE20, (void (*)(uint64_t))type metadata accessor for UVIndexComponentViewModelFactory);
}

uint64_t sub_100214638@<X0>(uint64_t *a1@<X8>)
{
  return sub_100083764((uint64_t (*)(void))type metadata accessor for MapComponentViewModelFactory, (uint64_t)&off_100E1EF58, a1);
}

void sub_100214658(uint64_t a1@<X8>)
{
  *(void *)(a1 + 24) = &type metadata for AveragesStringBuilder;
  *(void *)(a1 + 32) = &off_100E1A978;
}

uint64_t sub_100214670@<X0>(uint64_t *a1@<X8>)
{
  return sub_100083764((uint64_t (*)(void))type metadata accessor for ReportWeatherComponentViewModelFactory, (uint64_t)&off_100E2C2D8, a1);
}

uint64_t sub_100214690(uint64_t a1)
{
  return sub_10000E758(a1, (void (*)(void))&type metadata accessor for NextHourPrecipitationStringBuilder, (uint64_t (*)(void))&NextHourPrecipitationStringBuilder.init());
}

uint64_t sub_1002146BC@<X0>(uint64_t *a1@<X8>)
{
  return sub_100083764((uint64_t (*)(void))type metadata accessor for LocationViewDescriptor, (uint64_t)&off_100E37020, a1);
}

void sub_1002146E0()
{
  *(unsigned char *)(*(void *)(v0 + 16) + 33) = *(unsigned char *)(v0 + 24);
}

uint64_t type metadata accessor for PresetAppState()
{
  uint64_t result = qword_100E859B8;
  if (!qword_100E859B8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata accessor for StoreObserver()
{
  return sub_100109098();
}

uint64_t sub_100214750(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_allocateGenericValueMetadata(a1, a2, a3, 64);
}

void sub_100214758()
{
  sub_100214904(319, (unint64_t *)&unk_100E97DD0, (void (*)(uint64_t))type metadata accessor for ListLocationViewModel);
  if (v0 <= 0x3F)
  {
    type metadata accessor for LearnMoreAttributorViewModel();
    if (v1 <= 0x3F)
    {
      sub_100214904(319, (unint64_t *)&qword_100E64EF8, (void (*)(uint64_t))type metadata accessor for ContentStatusBanner);
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

void sub_100214904(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = type metadata accessor for Optional();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_100214958(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_allocateGenericValueMetadata(a1, a2, a3, 16);
}

uint64_t type metadata accessor for AnyMiddleware()
{
  return sub_100109098();
}

void sub_100214978(uint64_t a1@<X8>)
{
  *(void *)(a1 + 24) = &type metadata for AutomationInfoSetting;
  *(void *)(a1 + 32) = &off_100E2C0F8;
  *(unsigned char *)a1 = 0;
}

uint64_t sub_100214994@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_10003A2C8(a1, &qword_100E71B60, (uint64_t (*)(void))&type metadata accessor for LocationAccessDataProvider, (uint64_t (*)(char *))&LocationAccessDataProvider.init(locationManager:), (uint64_t)&protocol witness table for LocationAccessDataProvider, a2);
}

uint64_t sub_1002149D0@<X0>(uint64_t *a1@<X8>)
{
  return sub_100008610((uint64_t (*)(void))&type metadata accessor for LocationMatchHelper, (uint64_t (*)(void))&LocationMatchHelper.init(), (uint64_t)&protocol witness table for LocationMatchHelper, a1);
}

unsigned char *sub_100214A08(unsigned char *result, int a2)
{
  if (a2) {
    *uint64_t result = a2 + 2;
  }
  return result;
}

uint64_t sub_100214A18(unsigned __int8 *a1)
{
  unsigned int v1 = *a1;
  if (v1 >= 3) {
    return v1 - 2;
  }
  else {
    return 0;
  }
}

void type metadata accessor for GridGeometry.ColumnCount()
{
}

uint64_t sub_100214A38@<X0>(uint64_t *a1@<X8>)
{
  return sub_1000479A8(a1);
}

ValueMetadata *type metadata accessor for AnyEquatable()
{
  return &type metadata for AnyEquatable;
}

uint64_t type metadata accessor for StateChange()
{
  return sub_100109098();
}

uint64_t sub_100214A6C(uint64_t a1)
{
  return sub_1000158B4(a1, *(void *)(v1 + 16));
}

uint64_t type metadata accessor for AnyReducer()
{
  return sub_100109098();
}

uint64_t type metadata accessor for WeatherMicaConditionBackground()
{
  uint64_t result = qword_100E766C0;
  if (!qword_100E766C0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unsigned char *sub_100214ADC(unsigned char *result)
{
  *result &= 0x3Fu;
  return result;
}

unsigned char *sub_100214AEC(unsigned char *result, unsigned int a2)
{
  if (a2 < 2) {
    char v2 = *result & 1 | ((_BYTE)a2 << 6);
  }
  else {
    char v2 = a2 & 1 | 0x80;
  }
  *uint64_t result = v2;
  return result;
}

uint64_t sub_100214B14(unsigned char *a1)
{
  int v1 = (char)*a1;
  if (v1 >= 0) {
    return *a1 >> 6;
  }
  else {
    return v1 & 1 | 2u;
  }
}

uint64_t sub_100214B34@<X0>(uint64_t a1@<X8>)
{
  return sub_10004CFDC(*(void *)(v1 + 32), *(void *)(v1 + 16), a1);
}

const char *sub_100214B40()
{
  return "Weather";
}

uint64_t sub_100214B54@<X0>(void *a1@<X8>)
{
  return sub_100061924(*(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

uint64_t sub_100214B60()
{
  return sub_10002C7DC();
}

uint64_t sub_100214B68(uint64_t result, int a2)
{
  if (a2)
  {
    *(void *)uint64_t result = (a2 - 1);
    char v2 = 1;
  }
  else
  {
    char v2 = 0;
  }
  *(unsigned char *)(result + 8) = v2;
  return result;
}

uint64_t sub_100214B88(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 8)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

ValueMetadata *type metadata accessor for LocationHeaderViewGradientBackgroundViewModifier.ScrollAdjustments()
{
  return &type metadata for LocationHeaderViewGradientBackgroundViewModifier.ScrollAdjustments;
}

unint64_t sub_100214BC8()
{
  if (*(unsigned char *)(v0 + 16)) {
    return 0xD000000000000010;
  }
  else {
    return 0xD00000000000001ALL;
  }
}

uint64_t sub_100214C0C@<X0>(void *a1@<X8>)
{
  return sub_1000D6F4C(*(void (**)(void *__return_ptr))(v1 + 16), *(void *)(v1 + 32), *(void *)(v1 + 40), a1);
}

uint64_t sub_100214C18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1001D3EF8(a1, a2, a3, a4, type metadata accessor for LocationComponentHeaderMetrics, (uint64_t)type metadata accessor for LocationComponentHeaderMetrics, (uint64_t (*)(char *))sub_1001E73D8);
}

int main(int argc, const char **argv, const char **envp)
{
  return 0;
}

const char *sub_100214CC4()
{
  return "weather_vfx_animatedBackgrounds_enabled";
}

const char *sub_100214CD0()
{
  return "frame";
}

uint64_t sub_100214D10()
{
  return _s7Weather24LocationCompositionStateOwst_0(v1, 0, 1, v0);
}

void sub_100214D30()
{
  sub_1002DB368();
}

uint64_t sub_100214D8C()
{
  return type metadata accessor for EnvironmentValues();
}

uint64_t sub_100214DA8(uint64_t result, uint64_t a2)
{
  v2[19] = result;
  v2[20] = a2;
  v2[17] = 44;
  v2[18] = 0xE100000000000000;
  return result;
}

uint64_t sub_100214DC4()
{
  return 0x70616373646E616CLL;
}

uint64_t sub_100214DD8()
{
  return static String.read(from:)();
}

uint64_t sub_100214DF0()
{
  return firstly<A, B>(on:disposeOn:closure:)();
}

void sub_100214E0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int v8 = *(_DWORD *)(v6 - 240);
  sub_100B639C4(a1, a2, a3, a4, a5, a6, v8);
}

uint64_t sub_100214E34()
{
  return v0;
}

uint64_t sub_100214E40()
{
  return v0;
}

uint64_t sub_100214E4C()
{
  return Optional<A>.write(to:)();
}

uint64_t sub_100214E70()
{
  return KeyedDecodingContainer.decode<A>(_:forKey:)();
}

uint64_t sub_100214E90()
{
  return v0;
}

uint64_t sub_100214EA0()
{
  return v0;
}

void sub_100214EAC()
{
  sub_1002CA41C();
}

uint64_t sub_100214EC4()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_100214EDC()
{
  return Optional<A>.write(to:)();
}

void sub_100214F3C(float a1)
{
  *uint64_t v1 = a1;
}

uint64_t sub_100214F50@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 312) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
  return 0;
}

uint64_t sub_100214F94()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_100214FB4(uint64_t a1, uint64_t a2)
{
  return sub_100135918(a1, a2, (void (*)(void))&type metadata accessor for TargetWindowSizeClass, &qword_100E9D038, (void (*)(uint64_t))&type metadata accessor for TargetWindowSizeClass);
}

uint64_t sub_100214FFC(uint64_t a1, uint64_t a2)
{
  return sub_100135918(a1, a2, (void (*)(void))&type metadata accessor for WeatherAvailability.AvailabilityKind, &qword_100E9D020, (void (*)(uint64_t))&type metadata accessor for WeatherAvailability.AvailabilityKind);
}

uint64_t sub_100215044()
{
  return sub_1001A6D7C((void (*)(void))&type metadata accessor for ArticlePlacementLocation);
}

void sub_100215060()
{
  uint64_t v0 = sub_10017FA34();
  sub_100215070(v0, v1, v2, v3);
}

void sub_100215070(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

void sub_1002150A4(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

void sub_1002150BC(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_10018231C(a1, a2, a3, a4);
  v7(0);
  sub_100162E4C();
  sub_1001190D4();
  v8();
  *(void *)(*(void *)(a4 + 56) + 8 * a1) = a3;
  sub_100172298();
  if (v10) {
    __break(1u);
  }
  else {
    *(void *)(a4 + 16) = v9;
  }
}

uint64_t sub_100215150@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v2 = -1;
  uint64_t v3 = -1 << *(unsigned char *)(a1 + 32);
  *a2 = a1;
  uint64_t v6 = *(void *)(a1 + 64);
  uint64_t result = a1 + 64;
  uint64_t v5 = v6;
  if (-v3 < 64) {
    uint64_t v2 = ~(-1 << -(char)v3);
  }
  a2[1] = result;
  a2[2] = ~v3;
  a2[3] = 0;
  a2[4] = v2 & v5;
  return result;
}

void sub_10021518C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1001EA6F0(a1, a2, a3, *v3, (uint64_t)&unk_100E972B0, (void (*)(uint64_t))sub_10012B80C, (void (*)(uint64_t))sub_1002158D8);
  *uint64_t v3 = v4;
}

char *sub_1002151DC(char *a1, int64_t a2, char a3)
{
  uint64_t result = sub_10001DD9C(a1, a2, a3, *v3);
  *uint64_t v3 = (uint64_t)result;
  return result;
}

void sub_1002151FC()
{
  sub_100150CD0();
  void *v0 = v1;
}

void sub_10021522C()
{
}

void sub_10021526C()
{
}

uint64_t sub_100215278(uint64_t a1)
{
  uint64_t v2 = sub_10017DF08(&qword_100E73F80);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1002152D8(uint64_t *a1)
{
  Swift::Int v3 = a1[1];
  uint64_t result = _minimumMergeRunLength(_:)(v3);
  if (result >= v3)
  {
    if ((v3 & 0x8000000000000000) == 0)
    {
      if (v3) {
        return sub_1002166F8(0, v3, 1, a1);
      }
      return result;
    }
    goto LABEL_124;
  }
  uint64_t v5 = result;
  uint64_t result = (uint64_t)sub_100AD553C(v3 / 2);
  uint64_t v87 = a1;
  uint64_t v88 = result;
  unint64_t v92 = v6;
  uint64_t v90 = v3;
  if (v3 <= 0)
  {
    uint64_t v9 = (char *)_swiftEmptyArrayStorage;
    unint64_t v30 = _swiftEmptyArrayStorage[2];
LABEL_90:
    if (v30 < 2)
    {
LABEL_101:
      uint64_t result = swift_bridgeObjectRelease();
      if (v90 >= -1)
      {
        *(void *)(v88 + 16) = 0;
        return swift_bridgeObjectRelease();
      }
      goto LABEL_129;
    }
    uint64_t v79 = *v87;
    while (1)
    {
      unint64_t v80 = v30 - 2;
      if (v30 < 2) {
        break;
      }
      if (!v79) {
        goto LABEL_133;
      }
      uint64_t v81 = *(void *)&v9[16 * v80 + 32];
      uint64_t v82 = *(void *)&v9[16 * v30 + 24];
      uint64_t result = sub_10070B4F8((char *)(v79 + 16 * v81), (char *)(v79 + 16 * *(void *)&v9[16 * v30 + 16]), v79 + 16 * v82, v92);
      if (v1) {
        goto LABEL_86;
      }
      if (v82 < v81) {
        goto LABEL_119;
      }
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)sub_10031515C();
        uint64_t v9 = (char *)result;
      }
      if (v80 >= *((void *)v9 + 2)) {
        goto LABEL_120;
      }
      uint64_t v83 = &v9[16 * v80 + 32];
      *(void *)uint64_t v83 = v81;
      *((void *)v83 + 1) = v82;
      unint64_t v84 = *((void *)v9 + 2);
      if (v30 > v84) {
        goto LABEL_121;
      }
      uint64_t result = (uint64_t)memmove(&v9[16 * v30 + 16], &v9[16 * v30 + 32], 16 * (v84 - v30));
      *((void *)v9 + 2) = v84 - 1;
      unint64_t v30 = v84 - 1;
      if (v84 <= 2) {
        goto LABEL_101;
      }
    }
LABEL_118:
    __break(1u);
LABEL_119:
    __break(1u);
LABEL_120:
    __break(1u);
LABEL_121:
    __break(1u);
LABEL_122:
    __break(1u);
LABEL_123:
    __break(1u);
LABEL_124:
    __break(1u);
LABEL_125:
    __break(1u);
LABEL_126:
    __break(1u);
LABEL_127:
    __break(1u);
LABEL_128:
    __break(1u);
LABEL_129:
    __break(1u);
LABEL_130:
    __break(1u);
LABEL_131:
    __break(1u);
LABEL_132:
    __break(1u);
LABEL_133:
    __break(1u);
    return result;
  }
  Swift::Int v7 = 0;
  uint64_t v8 = *a1;
  uint64_t v85 = *a1 - 16;
  uint64_t v86 = *a1 + 32;
  uint64_t v9 = (char *)_swiftEmptyArrayStorage;
  uint64_t v89 = v5;
  uint64_t v91 = *a1;
  while (1)
  {
    Swift::Int v10 = v7++;
    if (v7 < v3)
    {
      uint64_t v11 = *(void *)(v8 + 16 * v7);
      uint64_t v12 = *(void *)(v8 + 16 * v10);
      Swift::Int v7 = v10 + 2;
      if (v10 + 2 < v3)
      {
        unsigned int v13 = (uint64_t *)(v86 + 16 * v10);
        uint64_t v14 = v11;
        while (1)
        {
          uint64_t v16 = *v13;
          v13 += 2;
          uint64_t v15 = v16;
          if (v11 < v12 == v16 >= v14) {
            break;
          }
          ++v7;
          uint64_t v14 = v15;
          if (v7 >= v3)
          {
            Swift::Int v7 = v3;
            break;
          }
        }
      }
      if (v11 < v12)
      {
        if (v7 < v10) {
          goto LABEL_126;
        }
        if (v10 < v7)
        {
          int v17 = (long long *)(v85 + 16 * v7);
          Swift::Int v18 = v7;
          Swift::Int v19 = v10;
          uint64_t v20 = (long long *)(v8 + 16 * v10);
          do
          {
            if (v19 != --v18)
            {
              if (!v8) {
                goto LABEL_132;
              }
              long long v21 = *v20;
              long long *v20 = *v17;
              long long *v17 = v21;
            }
            ++v19;
            --v17;
            ++v20;
          }
          while (v19 < v18);
        }
      }
    }
    if (v7 < v3)
    {
      if (__OFSUB__(v7, v10)) {
        goto LABEL_123;
      }
      if (v7 - v10 < v5)
      {
        Swift::Int v22 = v10 + v5;
        if (__OFADD__(v10, v5)) {
          goto LABEL_127;
        }
        if (v22 >= v3) {
          Swift::Int v22 = v3;
        }
        if (v22 < v10) {
          goto LABEL_128;
        }
        if (v7 != v22)
        {
          uint64_t v23 = v85 + 16 * v7;
          do
          {
            uint64_t v24 = *(void *)(v8 + 16 * v7);
            Swift::Int v25 = v10;
            uint64_t v26 = v23;
            do
            {
              if (v24 >= *(void *)v26) {
                break;
              }
              if (!v8) {
                goto LABEL_130;
              }
              uint64_t v27 = *(void *)(v26 + 24);
              *(_OWORD *)(v26 + 16) = *(_OWORD *)v26;
              *(void *)uint64_t v26 = v24;
              *(void *)(v26 + 8) = v27;
              v26 -= 16;
              ++v25;
            }
            while (v7 != v25);
            ++v7;
            v23 += 16;
          }
          while (v7 != v22);
          Swift::Int v7 = v22;
        }
      }
    }
    if (v7 < v10) {
      goto LABEL_122;
    }
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_1001AA1B0(0, *((void *)v9 + 2) + 1, 1, v9);
      uint64_t v9 = (char *)result;
    }
    unint64_t v29 = *((void *)v9 + 2);
    unint64_t v28 = *((void *)v9 + 3);
    unint64_t v30 = v29 + 1;
    uint64_t v8 = v91;
    if (v29 >= v28 >> 1)
    {
      uint64_t result = (uint64_t)sub_1001AA1B0((char *)(v28 > 1), v29 + 1, 1, v9);
      uint64_t v8 = v91;
      uint64_t v9 = (char *)result;
    }
    *((void *)v9 + 2) = v30;
    int v31 = v9 + 32;
    uint64_t v32 = &v9[16 * v29 + 32];
    *(void *)uint64_t v32 = v10;
    *((void *)v32 + 1) = v7;
    if (v29) {
      break;
    }
    unint64_t v30 = 1;
LABEL_81:
    uint64_t v5 = v89;
    Swift::Int v3 = v90;
    if (v7 >= v90) {
      goto LABEL_90;
    }
  }
  while (1)
  {
    unint64_t v33 = v30 - 1;
    if (v30 >= 4)
    {
      uint64_t v38 = &v31[2 * v30];
      uint64_t v39 = *(v38 - 8);
      uint64_t v40 = *(v38 - 7);
      BOOL v44 = __OFSUB__(v40, v39);
      uint64_t v41 = v40 - v39;
      if (v44) {
        goto LABEL_107;
      }
      uint64_t v43 = *(v38 - 6);
      uint64_t v42 = *(v38 - 5);
      BOOL v44 = __OFSUB__(v42, v43);
      uint64_t v36 = v42 - v43;
      char v37 = v44;
      if (v44) {
        goto LABEL_108;
      }
      unint64_t v45 = v30 - 2;
      uint64_t v46 = &v31[2 * v30 - 4];
      uint64_t v48 = *v46;
      uint64_t v47 = v46[1];
      BOOL v44 = __OFSUB__(v47, v48);
      uint64_t v49 = v47 - v48;
      if (v44) {
        goto LABEL_109;
      }
      BOOL v44 = __OFADD__(v36, v49);
      uint64_t v50 = v36 + v49;
      if (v44) {
        goto LABEL_111;
      }
      if (v50 >= v41)
      {
        int v68 = &v31[2 * v33];
        uint64_t v70 = *v68;
        uint64_t v69 = v68[1];
        BOOL v44 = __OFSUB__(v69, v70);
        uint64_t v71 = v69 - v70;
        if (v44) {
          goto LABEL_117;
        }
        BOOL v61 = v36 < v71;
        goto LABEL_70;
      }
    }
    else
    {
      if (v30 != 3)
      {
        uint64_t v62 = *((void *)v9 + 4);
        uint64_t v63 = *((void *)v9 + 5);
        BOOL v44 = __OFSUB__(v63, v62);
        uint64_t v55 = v63 - v62;
        char v56 = v44;
        goto LABEL_64;
      }
      uint64_t v35 = *((void *)v9 + 4);
      uint64_t v34 = *((void *)v9 + 5);
      BOOL v44 = __OFSUB__(v34, v35);
      uint64_t v36 = v34 - v35;
      char v37 = v44;
    }
    if (v37) {
      goto LABEL_110;
    }
    unint64_t v45 = v30 - 2;
    uint64_t v51 = &v31[2 * v30 - 4];
    uint64_t v53 = *v51;
    uint64_t v52 = v51[1];
    BOOL v54 = __OFSUB__(v52, v53);
    uint64_t v55 = v52 - v53;
    char v56 = v54;
    if (v54) {
      goto LABEL_112;
    }
    uint64_t v57 = &v31[2 * v33];
    uint64_t v59 = *v57;
    uint64_t v58 = v57[1];
    BOOL v44 = __OFSUB__(v58, v59);
    uint64_t v60 = v58 - v59;
    if (v44) {
      goto LABEL_114;
    }
    if (__OFADD__(v55, v60)) {
      goto LABEL_116;
    }
    if (v55 + v60 >= v36)
    {
      BOOL v61 = v36 < v60;
LABEL_70:
      if (v61) {
        unint64_t v33 = v45;
      }
      goto LABEL_72;
    }
LABEL_64:
    if (v56) {
      goto LABEL_113;
    }
    uint64_t v64 = &v31[2 * v33];
    uint64_t v66 = *v64;
    uint64_t v65 = v64[1];
    BOOL v44 = __OFSUB__(v65, v66);
    uint64_t v67 = v65 - v66;
    if (v44) {
      goto LABEL_115;
    }
    if (v67 < v55) {
      goto LABEL_81;
    }
LABEL_72:
    uint64_t v72 = v9;
    unint64_t v73 = v33 - 1;
    if (v33 - 1 >= v30)
    {
      __break(1u);
LABEL_104:
      __break(1u);
LABEL_105:
      __break(1u);
LABEL_106:
      __break(1u);
LABEL_107:
      __break(1u);
LABEL_108:
      __break(1u);
LABEL_109:
      __break(1u);
LABEL_110:
      __break(1u);
LABEL_111:
      __break(1u);
LABEL_112:
      __break(1u);
LABEL_113:
      __break(1u);
LABEL_114:
      __break(1u);
LABEL_115:
      __break(1u);
LABEL_116:
      __break(1u);
LABEL_117:
      __break(1u);
      goto LABEL_118;
    }
    if (!v8) {
      goto LABEL_131;
    }
    uint64_t v74 = &v31[2 * v73];
    uint64_t v75 = *v74;
    uint64_t v76 = &v31[2 * v33];
    uint64_t v77 = v76[1];
    uint64_t result = sub_10070B4F8((char *)(v8 + 16 * *v74), (char *)(v8 + 16 * *v76), v8 + 16 * v77, v92);
    if (v1) {
      break;
    }
    if (v77 < v75) {
      goto LABEL_104;
    }
    if (v33 > *((void *)v72 + 2)) {
      goto LABEL_105;
    }
    *uint64_t v74 = v75;
    v31[2 * v73 + 1] = v77;
    unint64_t v78 = *((void *)v72 + 2);
    if (v33 >= v78) {
      goto LABEL_106;
    }
    uint64_t v9 = v72;
    unint64_t v30 = v78 - 1;
    uint64_t result = (uint64_t)memmove(&v31[2 * v33], v76 + 2, 16 * (v78 - 1 - v33));
    *((void *)v72 + 2) = v78 - 1;
    uint64_t v8 = v91;
    if (v78 <= 2) {
      goto LABEL_81;
    }
  }
LABEL_86:
  uint64_t result = swift_bridgeObjectRelease();
  if (v90 < -1) {
    goto LABEL_125;
  }
  *(void *)(v88 + 16) = 0;
  return swift_bridgeObjectRelease();
}

void *sub_1002158D8(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0 || (&__dst[16 * a2] > __src ? (BOOL v3 = &__src[16 * a2] > __dst) : (BOOL v3 = 0), v3))
  {
    uint64_t result = (void *)_fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    return memcpy(__dst, __src, 16 * a2);
  }
  return result;
}

void *sub_1002159B4(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    sub_100187288();
    sub_1001D1DF8();
LABEL_11:
    uint64_t result = (void *)sub_100163950();
    __break(1u);
    return result;
  }
  if (&__dst[16 * a2] > __src && &__src[16 * a2] > __dst)
  {
    sub_100187288();
    sub_100181768();
    goto LABEL_11;
  }

  return memcpy(__dst, __src, 16 * a2);
}

void *sub_100215A60(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0 || (&__dst[4 * a2] > __src ? (BOOL v3 = &__src[4 * a2] > __dst) : (BOOL v3 = 0), v3))
  {
    uint64_t result = (void *)_fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    return memcpy(__dst, __src, 4 * a2);
  }
  return result;
}

uint64_t sub_100215B3C()
{
  sub_1001EA87C();
  if (v3 < 0)
  {
    sub_100187288();
    sub_1001D1DF8();
LABEL_11:
    uint64_t result = sub_100163950();
    __break(1u);
    return result;
  }
  if (v2 + 24 * v1 > v0 && v0 + 24 * v1 > v2)
  {
    sub_100187288();
    sub_100181768();
    goto LABEL_11;
  }

  return swift_arrayInitWithCopy();
}

uint64_t sub_100215BEC(uint64_t a1, uint64_t a2)
{
  return sub_100150DEC(a1, a2);
}

unint64_t sub_100215BF8()
{
  unint64_t result = qword_100E63460;
  if (!qword_100E63460)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100E63460);
  }
  return result;
}

void type metadata accessor for UIUserInterfaceSizeClass(uint64_t a1)
{
}

void type metadata accessor for UIInterfaceOrientation(uint64_t a1)
{
}

void type metadata accessor for State(uint64_t a1)
{
}

uint64_t getEnumTagSinglePayload for ResizeMacWindow(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_100215C98(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100215CE0()
{
  unint64_t result = qword_100E62D18;
  if (!qword_100E62D18)
  {
    type metadata accessor for OS_dispatch_queue.Attributes();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E62D18);
  }
  return result;
}

void type metadata accessor for os_unfair_lock_s(uint64_t a1)
{
}

unint64_t sub_100215D44()
{
  unint64_t result = qword_100E74C38;
  if (!qword_100E74C38)
  {
    sub_1001ABC4C(255, (unint64_t *)&qword_100E74C30);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E74C38);
  }
  return result;
}

unint64_t sub_100215DA4()
{
  unint64_t result = qword_100E74C30;
  if (!qword_100E74C30)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100E74C30);
  }
  return result;
}

unint64_t sub_100215DE4()
{
  unint64_t result = qword_100E8F950;
  if (!qword_100E8F950)
  {
    sub_10018C6DC(&qword_100E7FD68);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8F950);
  }
  return result;
}

uint64_t sub_100215E38(uint64_t a1, uint64_t a2)
{
  return sub_1001A6E70(a1, a2, (uint64_t (*)(void, uint64_t, void, uint64_t))sub_1001A6F7C, type metadata accessor for DailyForecastComponentViewModel.DayForecastViewModel);
}

void sub_100215E64()
{
}

uint64_t sub_100215E78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10013C920(a1, (uint64_t (*)(void))&type metadata accessor for NWInterface, a2);
}

uint64_t sub_100215E90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10013C920(a1, (uint64_t (*)(void))&type metadata accessor for URL, a2);
}

uint64_t sub_100215EA8(void (*a1)(uint64_t, uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  if (v4)
  {
    Swift::Int v7 = (char *)sub_10019B7A0();
    sub_1002151DC(v7, v8, v9);
    for (uint64_t i = a3 + 32; ; i += 16)
    {
      sub_10017AADC();
      a1(v11, v12);
      if (v3) {
        break;
      }
      unint64_t v14 = _swiftEmptyArrayStorage[2];
      unint64_t v13 = _swiftEmptyArrayStorage[3];
      if (v14 >= v13 >> 1) {
        sub_1002151DC((char *)(v13 > 1), v14 + 1, 1);
      }
      _swiftEmptyArrayStorage[2] = v14 + 1;
      *((_DWORD *)&_swiftEmptyArrayStorage[4] + v14) = v16;
      if (!--v4) {
        return sub_10019B298();
      }
    }
    swift_release();
  }
  return sub_10019B298();
}

void sub_100215FB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a3 + 16))
  {
    Hasher.init(_seed:)();
    String.hash(into:)();
    Swift::Int v6 = Hasher._finalize()();
    uint64_t v7 = -1 << *(unsigned char *)(a3 + 32);
    Swift::Int v8 = v6 & ~v7;
    sub_1001830F8();
    if (v9)
    {
      uint64_t v10 = *(void *)(a3 + 48);
      uint64_t v11 = (void *)(v10 + 16 * v8);
      if ((*v11 != a1 || v11[1] != a2) && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
      {
        uint64_t v13 = ~v7;
        uint64_t v14 = (v8 + 1) & v13;
        sub_1001830F8();
        if (v15)
        {
          do
          {
            int v16 = (void *)(v10 + 16 * v14);
            if (*v16 == a1 && v16[1] == a2) {
              break;
            }
            if (_stringCompareWithSmolCheck(_:_:expecting:)()) {
              break;
            }
            uint64_t v14 = (v14 + 1) & v13;
            sub_1001830F8();
          }
          while ((v18 & 1) != 0);
        }
      }
    }
  }
}

unint64_t sub_1002160C8()
{
  unint64_t result = qword_100E62D28;
  if (!qword_100E62D28)
  {
    sub_10018C6DC(&qword_100E62D20);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E62D28);
  }
  return result;
}

uint64_t sub_10021611C()
{
  return sub_1001364F4(&qword_100E8F940, &qword_100E8F948, (void (*)(void))sub_100215DE4);
}

unint64_t sub_100216158()
{
  unint64_t result = qword_100E85F78;
  if (!qword_100E85F78)
  {
    sub_10018C6DC(&qword_100E85F70);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E85F78);
  }
  return result;
}

unint64_t sub_1002161AC()
{
  unint64_t result = qword_100E62CB0;
  if (!qword_100E62CB0)
  {
    sub_10018C6DC(&qword_100E62CA8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E62CB0);
  }
  return result;
}

unint64_t sub_100216200()
{
  unint64_t result = qword_100E71B98;
  if (!qword_100E71B98)
  {
    sub_10018C6DC(&qword_100E71B90);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E71B98);
  }
  return result;
}

void sub_100216254()
{
}

uint64_t sub_10021629C(uint64_t a1)
{
  return sub_100129E30(a1, (uint64_t (*)(BOOL))sub_10021526C);
}

uint64_t sub_1002162B4()
{
  return sub_100129E78((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_10021526C);
}

uint64_t sub_1002162CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = &qword_100E63A10;
  uint64_t v5 = sub_10017DF08(&qword_100E63A10);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (unsigned __int8 *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = sub_100215188(a1, &v46);
  uint64_t v10 = v46;
  uint64_t v9 = v47;
  unint64_t v11 = v50;
  int64_t v43 = (unint64_t)(v48 + 64) >> 6;
  int64_t v44 = v49;
  uint64_t v41 = _swiftEmptyArrayStorage;
  uint64_t v42 = v47;
  while (1)
  {
    if (v11)
    {
      uint64_t v45 = (v11 - 1) & v11;
      unint64_t v12 = __clz(__rbit64(v11)) | (v44 << 6);
      goto LABEL_20;
    }
    int64_t v13 = v44 + 1;
    if (__OFADD__(v44, 1)) {
      break;
    }
    if (v13 >= v43) {
      goto LABEL_35;
    }
    unint64_t v14 = *(void *)(v9 + 8 * v13);
    int64_t v15 = v44 + 1;
    if (!v14)
    {
      int64_t v15 = v44 + 2;
      if (v44 + 2 >= v43) {
        goto LABEL_35;
      }
      unint64_t v14 = *(void *)(v9 + 8 * v15);
      if (!v14)
      {
        int64_t v15 = v44 + 3;
        if (v44 + 3 >= v43) {
          goto LABEL_35;
        }
        unint64_t v14 = *(void *)(v9 + 8 * v15);
        if (!v14)
        {
          int64_t v15 = v44 + 4;
          if (v44 + 4 >= v43) {
            goto LABEL_35;
          }
          unint64_t v14 = *(void *)(v9 + 8 * v15);
          if (!v14)
          {
            int64_t v15 = v44 + 5;
            if (v44 + 5 >= v43) {
              goto LABEL_35;
            }
            unint64_t v14 = *(void *)(v9 + 8 * v15);
            if (!v14)
            {
              int64_t v16 = v44 + 6;
              while (v16 < v43)
              {
                unint64_t v14 = *(void *)(v9 + 8 * v16++);
                if (v14)
                {
                  int64_t v15 = v16 - 1;
                  goto LABEL_19;
                }
              }
LABEL_35:
              swift_release();
              return (uint64_t)v41;
            }
          }
        }
      }
    }
LABEL_19:
    int64_t v44 = v15;
    uint64_t v45 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v15 << 6);
LABEL_20:
    int v17 = (uint64_t *)(*(void *)(v10 + 48) + 16 * v12);
    uint64_t v19 = *v17;
    unint64_t v18 = v17[1];
    uint64_t v20 = *(void *)(a2 + *(int *)(type metadata accessor for BannerStateComputer() + 24));
    if (*(void *)(v20 + 16))
    {
      sub_1000D54E0(v19, v18);
      sub_1000D54E0(v19, v18);
      unint64_t v21 = sub_1001EB73C(v19, v18);
      if (v22)
      {
        unint64_t v23 = v21;
        uint64_t v24 = v7;
        uint64_t v25 = v10;
        uint64_t v26 = v4;
        uint64_t v27 = a2;
        uint64_t v28 = *(void *)(v20 + 56);
        uint64_t v29 = type metadata accessor for ContentStatusBanner();
        uint64_t v30 = v28 + *(void *)(*(void *)(v29 - 8) + 72) * v23;
        a2 = v27;
        uint64_t v4 = v26;
        uint64_t v10 = v25;
        uint64_t v7 = v24;
        uint64_t v9 = v42;
        sub_100166838(v30, (uint64_t)v7, (void (*)(void))type metadata accessor for ContentStatusBanner);
        uint64_t v31 = (uint64_t)v7;
        uint64_t v32 = 0;
      }
      else
      {
        uint64_t v29 = type metadata accessor for ContentStatusBanner();
        uint64_t v31 = (uint64_t)v7;
        uint64_t v32 = 1;
      }
      _s7Weather24LocationCompositionStateOwst_0(v31, v32, 1, v29);
      sub_1001EB5EC(v19, v18);
    }
    else
    {
      uint64_t v29 = type metadata accessor for ContentStatusBanner();
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v7, 1, 1, v29);
      sub_1000D54E0(v19, v18);
    }
    type metadata accessor for ContentStatusBanner();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v7, 1, v29))
    {
      sub_1001781AC((uint64_t)v7, v4);
      goto LABEL_29;
    }
    int v33 = *v7;
    sub_1001781AC((uint64_t)v7, v4);
    if (v33 == 1)
    {
      uint64_t v34 = v41;
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v35 = v34;
      uint64_t v51 = v34;
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)sub_1007F39D4(0, v34[2] + 1, 1);
        uint64_t v35 = v51;
      }
      unint64_t v37 = v35[2];
      unint64_t v36 = v35[3];
      uint64_t v38 = (void *)(v37 + 1);
      if (v37 >= v36 >> 1)
      {
        uint64_t v41 = (void *)(v37 + 1);
        uint64_t result = (uint64_t)sub_1007F39D4((char *)(v36 > 1), v37 + 1, 1);
        uint64_t v38 = v41;
        uint64_t v35 = v51;
      }
      v35[2] = v38;
      uint64_t v41 = v35;
      uint64_t v39 = &v35[2 * v37];
      v39[4] = v19;
      v39[5] = v18;
      unint64_t v11 = v45;
    }
    else
    {
LABEL_29:
      uint64_t result = sub_1001EB5EC(v19, v18);
      unint64_t v11 = v45;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_10021668C(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_100215060();
    uint64_t v2 = v3;
  }
  uint64_t v4 = *(void *)(v2 + 16);
  v6[0] = v2 + 32;
  v6[1] = v4;
  uint64_t result = sub_1002152D8(v6);
  *a1 = v2;
  return result;
}

uint64_t sub_1002166F8(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a3 != a2)
  {
    uint64_t v4 = *a4;
    uint64_t v5 = *a4 + 16 * a3 - 16;
    while (2)
    {
      uint64_t v6 = *(void *)(v4 + 16 * a3);
      uint64_t v7 = result;
      uint64_t v8 = v5;
      do
      {
        if (v6 >= *(void *)v8) {
          break;
        }
        if (!v4)
        {
          __break(1u);
          return result;
        }
        uint64_t v9 = *(void *)(v8 + 24);
        *(_OWORD *)(v8 + 16) = *(_OWORD *)v8;
        *(void *)uint64_t v8 = v6;
        *(void *)(v8 + 8) = v9;
        v8 -= 16;
        ++v7;
      }
      while (a3 != v7);
      ++a3;
      v5 += 16;
      if (a3 != a2) {
        continue;
      }
      break;
    }
  }
  return result;
}

uint64_t sub_100216764(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16) && (sub_1002109DC(a1), (v2 & 1) != 0)) {
    return swift_bridgeObjectRetain();
  }
  else {
    return 0;
  }
}

void sub_1002167A8()
{
  if (!qword_100E7DE78)
  {
    sub_100146A70();
    unint64_t v0 = type metadata accessor for ScaledValue();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100E7DE78);
    }
  }
}

uint64_t sub_100216804@<X0>(uint64_t a1@<X8>)
{
  return sub_100027F28(*(void (**)(void))(v1 + 16), a1);
}

uint64_t sub_10021680C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10017DF08(&qword_100E64A60);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_100216874()
{
  unint64_t result = qword_100EA0200;
  if (!qword_100EA0200)
  {
    type metadata accessor for DispatchWorkItemFlags();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA0200);
  }
  return result;
}

void type metadata accessor for ViewState.PreferredView()
{
}

void type metadata accessor for ViewState.PrimaryViewState()
{
}

uint64_t sub_1002168DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TimeState();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_100216940()
{
  unint64_t result = qword_100EB1B08;
  if (!qword_100EB1B08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB1B08);
  }
  return result;
}

uint64_t sub_100216990(void *a1)
{
  return sub_100137F24(a1, *(uint64_t (**)(void))(v1 + 16));
}

uint64_t sub_10021699C()
{
  uint64_t result = type metadata accessor for ActualListInput(319);
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for ListInput(uint64_t a1)
{
  return sub_10018678C(a1, (uint64_t *)&unk_100E7EED8);
}

uint64_t sub_100216A34()
{
  return sub_100210AF8((uint64_t (*)(void, void, void *, void, void, void))sub_100052F30);
}

uint64_t sub_100216A4C()
{
  return sub_100210AF8((uint64_t (*)(void, void, void *, void, void, void))sub_10008704C);
}

uint64_t sub_100216A64()
{
  return sub_100210AF8((uint64_t (*)(void, void, void *, void, void, void))sub_100082E00);
}

uint64_t sub_100216A7C()
{
  return sub_100210AF8((uint64_t (*)(void, void, void *, void, void, void))sub_100078300);
}

uint64_t sub_100216A94(void (*a1)(void *__return_ptr, uint64_t *), uint64_t a2, void (*a3)(uint64_t *__return_ptr), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8)
{
  a3(&v18);
  a1(v17, &v18);
  swift_release();
  uint64_t result = v17[0];
  if (!v17[0])
  {
    v17[0] = 0;
    v17[1] = 0xE000000000000000;
    _StringGuts.grow(_:)(82);
    v12._object = (void *)0x8000000100C96D70;
    v12._countAndFlagsBits = 0xD00000000000004BLL;
    String.append(_:)(v12);
    v13._countAndFlagsBits = sub_10018A2E0();
    String.append(_:)(v13);
    v14._countAndFlagsBits = 8236;
    v14._object = (void *)0xE200000000000000;
    String.append(_:)(v14);
    v15._countAndFlagsBits = a7;
    v15._object = a8;
    String.append(_:)(v15);
    v16._countAndFlagsBits = 46;
    v16._object = (void *)0xE100000000000000;
    String.append(_:)(v16);
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  return result;
}

uint64_t sub_100216BC4@<X0>(uint64_t *a1@<X8>)
{
  return sub_100216BD0(*(void (**)(void *__return_ptr, uint64_t *))(v1 + 16), *(void *)(v1 + 24), v1 + 32, a1);
}

uint64_t sub_100216BD0@<X0>(void (*a1)(void *__return_ptr, uint64_t *)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t result = sub_100216A94(a1, a2, *(void (**)(uint64_t *__return_ptr))a3, *(void *)(a3 + 8), *(void *)(a3 + 16), *(void *)(a3 + 24), 0x776569566E69614DLL, (void *)0xED00006C65646F4DLL);
  *a4 = result;
  return result;
}

uint64_t sub_100216C24()
{
  return sub_100216C30(*(void (**)(void *))(v0 + 16), *(void *)(v0 + 24), (void (**)(void *__return_ptr, uint64_t))(v0 + 32));
}

uint64_t sub_100216C30(void (*a1)(void *), uint64_t a2, void (**a3)(void *__return_ptr, uint64_t))
{
  return sub_10002B7C0(a1, a2, *a3);
}

uint64_t sub_100216C40()
{
  return sub_100216C4C(*(void (**)(void *))(v0 + 16), *(void *)(v0 + 24), (void (**)(void *__return_ptr, __n128))(v0 + 32));
}

uint64_t sub_100216C4C(void (*a1)(void *), uint64_t a2, void (**a3)(void *__return_ptr, __n128))
{
  return sub_10000967C(a1, a2, *a3);
}

uint64_t sub_100216C5C@<X0>(uint64_t a1@<X8>)
{
  return sub_100216C68(*(void (**)(void *))(v1 + 16), (void (**)(void *__return_ptr, uint64_t))(v1 + 32), a1);
}

uint64_t sub_100216C68@<X0>(void (*a1)(void *)@<X0>, void (**a2)(void *__return_ptr, uint64_t)@<X2>, uint64_t a3@<X8>)
{
  return sub_100016C68(a1, *a2, a3);
}

uint64_t sub_100216C78(uint64_t a1, void (*a2)(uint64_t *, __n128))
{
  uint64_t v4 = sub_10017DF08(&qword_100E64B48);
  __n128 v5 = __chkstk_darwin(v4 - 8);
  uint64_t v7 = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = a1;
  a2(&v16, v5);
  uint64_t v8 = type metadata accessor for MainViewModel(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v7, 1, v8) != 1) {
    return sub_1001522B4();
  }
  sub_1001781AC((uint64_t)v7, &qword_100E64B48);
  v15[1] = 0;
  v15[2] = 0xE000000000000000;
  _StringGuts.grow(_:)(87);
  v10._object = (void *)0x8000000100C96D10;
  v10._countAndFlagsBits = 0xD000000000000050;
  String.append(_:)(v10);
  v11._countAndFlagsBits = 0x746174536E69614DLL;
  v11._object = (void *)0xE900000000000065;
  String.append(_:)(v11);
  v12._countAndFlagsBits = 8236;
  v12._object = (void *)0xE200000000000000;
  String.append(_:)(v12);
  v13._countAndFlagsBits = 0x776569566E69614DLL;
  v13._object = (void *)0xED00006C65646F4DLL;
  String.append(_:)(v13);
  v14._countAndFlagsBits = 46;
  v14._object = (void *)0xE100000000000000;
  String.append(_:)(v14);
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100216E38(uint64_t *a1)
{
  return sub_100216E40(a1, *(void (**)(uint64_t *, __n128))(v1 + 16));
}

uint64_t sub_100216E40(uint64_t *a1, void (*a2)(uint64_t *, __n128))
{
  return sub_100216C78(*a1, a2);
}

uint64_t sub_100216E48(uint64_t a1)
{
  return sub_100216E50(a1, *(void (**)(uint64_t))(v1 + 16));
}

uint64_t sub_100216E50(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v4 = sub_10017DF08(&qword_100E64AA0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  a2(a1);
  uint64_t v7 = type metadata accessor for LocationViewerViewModel();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v6, 1, v7) != 1) {
    return sub_1001522B4();
  }
  sub_1001781AC((uint64_t)v6, &qword_100E64AA0);
  v14[0] = 0;
  v14[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(87);
  v9._countAndFlagsBits = 0xD000000000000050;
  v9._object = (void *)0x8000000100C96D10;
  String.append(_:)(v9);
  v10._object = (void *)0x8000000100C970D0;
  v10._countAndFlagsBits = 0xD000000000000013;
  String.append(_:)(v10);
  v11._countAndFlagsBits = 8236;
  v11._object = (void *)0xE200000000000000;
  String.append(_:)(v11);
  v12._countAndFlagsBits = 0xD000000000000017;
  v12._object = (void *)0x8000000100C970F0;
  String.append(_:)(v12);
  v13._countAndFlagsBits = 46;
  v13._object = (void *)0xE100000000000000;
  String.append(_:)(v13);
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100217004(uint64_t a1)
{
  return sub_10001973C(a1, *(void (**)(uint64_t, __n128))(v1 + 16));
}

uint64_t sub_10021700C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100217014(a1, *(void (**)(uint64_t))(v2 + 16), a2);
}

uint64_t sub_100217014@<X0>(uint64_t a1@<X0>, void (*a2)(uint64_t)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_10017DF08(&qword_100E64A60);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  a2(a1);
  uint64_t v9 = type metadata accessor for WeatherConditionBackgroundModel();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v9) != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(void *)(v9 - 8) + 32))(a3, v8, v9);
  }
  sub_1001781AC((uint64_t)v8, &qword_100E64A60);
  v16[0] = 0;
  v16[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(87);
  v11._countAndFlagsBits = 0xD000000000000050;
  v11._object = (void *)0x8000000100C96D10;
  String.append(_:)(v11);
  v12._countAndFlagsBits = 0xD00000000000002BLL;
  v12._object = (void *)0x8000000100C97080;
  String.append(_:)(v12);
  v13._countAndFlagsBits = 8236;
  v13._object = (void *)0xE200000000000000;
  String.append(_:)(v13);
  v14._object = (void *)0x8000000100C970B0;
  v14._countAndFlagsBits = 0xD00000000000001FLL;
  String.append(_:)(v14);
  v15._countAndFlagsBits = 46;
  v15._object = (void *)0xE100000000000000;
  String.append(_:)(v15);
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1002171E0(uint64_t a1)
{
  return a1;
}

uint64_t sub_10021720C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100217228()
{
  return type metadata accessor for MainView(0);
}

unint64_t sub_100217230()
{
  unint64_t result = qword_100E7ECA8;
  if (!qword_100E7ECA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E7ECA8);
  }
  return result;
}

unint64_t sub_100217280()
{
  unint64_t result = qword_100EA1668;
  if (!qword_100EA1668)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA1668);
  }
  return result;
}

uint64_t sub_1002172CC()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_1002172E8()
{
  unint64_t result = qword_100E7EC90;
  if (!qword_100E7EC90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E7EC90);
  }
  return result;
}

uint64_t type metadata accessor for Event()
{
  return sub_100109098();
}

uint64_t sub_100217350()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t type metadata accessor for FeatureFlagSensitiveNextHourPrecipitationLeadingValueRule()
{
  return sub_100109098();
}

unint64_t sub_100217384()
{
  unint64_t result = qword_100EA1538;
  if (!qword_100EA1538)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA1538);
  }
  return result;
}

uint64_t sub_1002173D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  memcpy(__dst, v2, sizeof(__dst));
  return sub_100021E38(a1, a2);
}

uint64_t sub_100217424()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100217440()
{
  return sub_100008700();
}

uint64_t sub_100217458()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_100217474()
{
  sub_10002FCFC(319, (unint64_t *)&qword_100E63C78, (void (*)(uint64_t))&type metadata accessor for ContentSizeCategory);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_100217528()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100217548()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_100217564()
{
  unint64_t result = qword_100EA18B0;
  if (!qword_100EA18B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA18B0);
  }
  return result;
}

uint64_t sub_1002175B0(uint64_t a1, uint64_t a2)
{
  return *(void *)(a2 + 40);
}

unint64_t sub_1002175B8()
{
  unint64_t result = qword_100EA1518;
  if (!qword_100EA1518)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA1518);
  }
  return result;
}

uint64_t sub_100217604@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  memcpy(v6, v2, sizeof(v6));
  return sub_10002D0CC(a1, a2);
}

uint64_t sub_100217658()
{
  return swift_getOpaqueTypeConformance2();
}

double sub_100217674()
{
  double result = 0.0;
  xmmword_100E82650 = 0u;
  unk_100E82660 = 0u;
  return result;
}

uint64_t sub_10021768C()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_1002176A8()
{
  unint64_t result = qword_100E64450;
  if (!qword_100E64450)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E64450);
  }
  return result;
}

uint64_t sub_1002176F4()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_100217710()
{
  unint64_t result = qword_100EA1880;
  if (!qword_100EA1880)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA1880);
  }
  return result;
}

uint64_t sub_10021775C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100217778()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_100217794()
{
  unint64_t result = qword_100EA6038;
  if (!qword_100EA6038)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA6038);
  }
  return result;
}

uint64_t sub_1002177E0()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_1002177FC()
{
  sub_10000E79C();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t type metadata accessor for DebugNotificationSubscriptionsViewController()
{
  return self;
}

uint64_t sub_1002178BC(uint64_t a1, uint64_t a2)
{
  return a2;
}

unint64_t sub_1002178F4()
{
  unint64_t result = qword_100E7CFA8;
  if (!qword_100E7CFA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E7CFA8);
  }
  return result;
}

uint64_t sub_100217944()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_100217960()
{
  sub_1002309AC();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_100217A34()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_100217A50()
{
  unint64_t result = qword_100E8EFD0;
  if (!qword_100E8EFD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8EFD0);
  }
  return result;
}

uint64_t sub_100217A9C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100217AB8()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_100217AD4()
{
  unint64_t result = qword_100E82C50;
  if (!qword_100E82C50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E82C50);
  }
  return result;
}

uint64_t sub_100217B20()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_100217B3C()
{
  unint64_t result = qword_100EB35F8;
  if (!qword_100EB35F8)
  {
    type metadata accessor for StandardLocationViewConfigurationFactory();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB35F8);
  }
  return result;
}

uint64_t type metadata accessor for NextHourPrecipitationComponentParameters()
{
  uint64_t result = qword_100EAC5C8;
  if (!qword_100EAC5C8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100217BD0()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_100217BEC()
{
  unint64_t result = qword_100EA1760;
  if (!qword_100EA1760)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA1760);
  }
  return result;
}

double sub_100217C38@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  memcpy(v6, v2, sizeof(v6));
  return sub_10002BC28(a1, (void (*)(uint64_t))sub_1000C4DE8, &qword_100EA1DD8, &qword_100EA1DE0, a2);
}

uint64_t sub_100217CB0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100217CCC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for FeelsLikeComponentPreprocessedDataModel();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_100217D28()
{
  sub_10021B24C();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_100217DCC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100217DE8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for PressureComponentPreprocessedDataModel();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100217E44(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PressureComponentPreprocessedDataModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_100217EA8()
{
  unint64_t result = qword_100E8E210;
  if (!qword_100E8E210)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8E210);
  }
  return result;
}

uint64_t sub_100217EF4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100217F10()
{
  uint64_t v0 = sub_10017DF08((uint64_t *)&unk_100EAA640);
  sub_100097814(v0, qword_100F52380);
  uint64_t v1 = sub_1002102B0(v0, (uint64_t)qword_100F52380);
  uint64_t v2 = type metadata accessor for ColorScheme();

  return _s7Weather24LocationCompositionStateOwst_0(v1, 1, 1, v2);
}

void sub_100217F88()
{
  type metadata accessor for DailyForecastComponentViewModel.DayForecastViewModel(319);
  if (v0 <= 0x3F)
  {
    sub_10000F5F8();
    if (v1 <= 0x3F)
    {
      sub_100227054();
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

void sub_1002180C8()
{
  sub_10002FD50(319, (unint64_t *)&qword_100E64EF8, (uint64_t (*)(uint64_t))type metadata accessor for ContentStatusBanner, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_100218190(uint64_t a1)
{
  return sub_1000976BC(a1, qword_100E8DEB0);
}

void sub_10021819C()
{
  sub_100230B48();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t sub_100218244@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for AnimatedBackgroundsUserDefaultsMonitor(0);
  uint64_t result = ObservableObject<>.objectWillChange.getter();
  *a1 = result;
  return result;
}

uint64_t sub_100218284(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for WeatherDescription();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);

  return swift_bridgeObjectRelease();
}

uint64_t sub_1002182FC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for UVIndexComponentPreprocessedDataModel();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100218358(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UVIndexComponentPreprocessedDataModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_1002183BC()
{
  unint64_t result = qword_100E63D88;
  if (!qword_100E63D88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E63D88);
  }
  return result;
}

uint64_t sub_100218408()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100218424@<X0>(void *a1@<X8>)
{
  uint64_t result = GeometryProxy.size.getter();
  *a1 = v3;
  return result;
}

ValueMetadata *type metadata accessor for NextHourPrecipitationLeadingValueRule()
{
  return &type metadata for NextHourPrecipitationLeadingValueRule;
}

unint64_t sub_100218460()
{
  unint64_t result = qword_100E74630;
  if (!qword_100E74630)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E74630);
  }
  return result;
}

uint64_t sub_1002184AC()
{
  uint64_t result = type metadata accessor for LocationComponentContainerViewModel();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_100218568()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100218584()
{
  return sub_100007DB0();
}

uint64_t sub_1002185B0@<X0>(uint64_t a1@<X8>)
{
  return sub_10002C834(*(void *)(v1 + 16), a1);
}

uint64_t type metadata accessor for NewsArticleComponentContentViewModel(uint64_t a1)
{
  return sub_10018678C(a1, qword_100E6EF28);
}

uint64_t assignWithCopy for MainViewFullscreenMapOverlayModifier(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  return a1;
}

unint64_t sub_100218614()
{
  unint64_t result = qword_100EAA720;
  if (!qword_100EAA720)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAA720);
  }
  return result;
}

uint64_t sub_100218660()
{
  return swift_getOpaqueTypeConformance2();
}

double sub_10021867C@<D0>(uint64_t a1@<X8>)
{
  return sub_100019F88(*(void *)v1, *(unsigned char *)(v1 + 8), a1);
}

uint64_t sub_100218688()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_1002186A4()
{
  unint64_t result = qword_100E7CFC8;
  if (!qword_100E7CFC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E7CFC8);
  }
  return result;
}

uint64_t sub_1002186F0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10021870C()
{
  return sub_100218718();
}

uint64_t sub_100218718()
{
  return State.wrappedValue.setter();
}

uint64_t sub_100218768()
{
  return sub_1000495A8();
}

void sub_100218780()
{
  type metadata accessor for LocationComponentHeaderViewModel(319);
  if (v0 <= 0x3F)
  {
    type metadata accessor for LocationComponentViewModel();
    if (v1 <= 0x3F)
    {
      sub_10021DE18();
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

void sub_10021888C()
{
  type metadata accessor for NextHourPrecipitationComponentViewModel();
  if (v0 <= 0x3F)
  {
    sub_10023074C();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

unint64_t sub_100218960()
{
  unint64_t result = qword_100E646A8;
  if (!qword_100E646A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E646A8);
  }
  return result;
}

uint64_t sub_1002189B0()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_1002189CC()
{
  unint64_t result = qword_100EA1700;
  if (!qword_100EA1700)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA1700);
  }
  return result;
}

unint64_t sub_100218A18()
{
  unint64_t result = qword_100EA1528;
  if (!qword_100EA1528)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA1528);
  }
  return result;
}

uint64_t sub_100218A64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  memcpy(v6, v2, sizeof(v6));
  return sub_10002C934(a1, a2);
}

uint64_t sub_100218AB8()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_100218AD4()
{
  sub_10000E5E4();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_100218B74()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100218B90()
{
  return _TFCompletedStartup(14);
}

uint64_t sub_100218B98(uint64_t (*a1)(uint64_t))
{
  uint64_t v2 = *(void *)(type metadata accessor for MonitorAppLaunchStateViewModifier(0) - 8);
  uint64_t v3 = v1 + ((*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));

  return a1(v3);
}

uint64_t sub_100218C0C()
{
  return sub_100218B98(sub_10003EAB8);
}

unint64_t sub_100218C24()
{
  unint64_t result = qword_100EAAA88;
  if (!qword_100EAAA88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAAA88);
  }
  return result;
}

uint64_t sub_100218C70()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t type metadata accessor for InteractiveMapNetworkActivityFlow()
{
  uint64_t result = qword_100EAD3D8;
  if (!qword_100EAD3D8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100218CD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10052D7A0);
}

uint64_t sub_100218CE8(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  uint64_t v4 = sub_100126010();
  v5(v4);
  return a2;
}

uint64_t sub_100218D3C()
{
  uint64_t result = type metadata accessor for LocationViewModel();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_100218DD0()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_100218DEC()
{
  static CompressedLocationHeaderHeightKey.defaultValue = 0;
}

uint64_t sub_100218DF8()
{
  sub_1000A9DE8();
  sub_100119470();
  uint64_t v1 = *v0;
  sub_100179D88();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  sub_1001627B4();
  return v3();
}

unint64_t sub_100218EB8()
{
  unint64_t result = qword_100E99ED0;
  if (!qword_100E99ED0)
  {
    type metadata accessor for NotificationAuthorizationMonitor();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E99ED0);
  }
  return result;
}

uint64_t sub_100218F04()
{
  sub_10017D5A4();
  uint64_t v1 = sub_100188130();
  return v0(v1);
}

uint64_t sub_100218F40()
{
  return sub_10001CA18(*(void *)(v0 + 16), *(void *)(v0 + 24), *(unsigned char *)(v0 + 32));
}

uint64_t sub_100218F4C()
{
  return sub_100218F04();
}

uint64_t sub_100218F78(uint64_t a1, uint64_t a2, long long *a3)
{
  *(unsigned char *)(v3 + 72) = 4;
  *(void *)(v3 + 16) = a1;
  *(void *)(v3 + 24) = a2;
  sub_1001262E4(a3, v3 + 32);
  return v3;
}

uint64_t sub_100218FA8(uint64_t a1, uint64_t a2, char a3)
{
  return sub_10000BE1C(a1, a2, a3 & 1);
}

unint64_t sub_100218FB0()
{
  unint64_t result = qword_100EAA728;
  if (!qword_100EAA728)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAA728);
  }
  return result;
}

uint64_t sub_100218FFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1000892C4(a1, *v2, v2[1], a2);
}

uint64_t sub_100219004()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_100219020()
{
  unint64_t result = qword_100E8E220;
  if (!qword_100E8E220)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8E220);
  }
  return result;
}

uint64_t sub_10021906C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100219088()
{
  return sub_10003E0C8((uint64_t)&type metadata accessor for WeatherVFXConditionBackground, (uint64_t (*)(void))&WeatherVFXConditionBackground.init());
}

uint64_t type metadata accessor for LocationViewConfigurationBuilder()
{
  return self;
}

BOOL sub_1002190D8()
{
  swift_beginAccess();
  return *(void *)(*(void *)(v0 + 16) + 16) == 0;
}

void sub_100219118()
{
  sub_10002FCFC(319, (unint64_t *)&qword_100E63C78, (void (*)(uint64_t))&type metadata accessor for ContentSizeCategory);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_1002191D4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1002191F0()
{
  uint64_t result = type metadata accessor for LocationComponentHeaderViewModel.Description(319);
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

void type metadata accessor for LocationComponentHeaderViewModel.Regular()
{
}

ValueMetadata *type metadata accessor for HourlyForecastComponentViewModel()
{
  return &type metadata for HourlyForecastComponentViewModel;
}

void sub_1002192C0()
{
  sub_1002309AC();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t type metadata accessor for WireframeContentInterestManager()
{
  return self;
}

uint64_t sub_1002193A4(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = type metadata accessor for WireframeInterestManager();
  uint64_t v7 = &off_100E37DF0;
  *(void *)&long long v5 = a1;
  swift_allocObject();
  *(void *)(a2 + 56) = sub_10000AFB0(0x746E65746E6F43, 0xE700000000000000);
  sub_1001262E4(&v5, a2 + 16);
  return a2;
}

void sub_100219424()
{
  sub_100230954();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_1002194C8()
{
  sub_1002308A0();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_100219568()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100219584()
{
  uint64_t v0 = type metadata accessor for PageControlDisplayStateModifier(0);
  sub_1001627C0(v0);
  uint64_t v1 = sub_100179C64();

  return sub_10000DCA4(v1, v2);
}

uint64_t sub_1002195E0()
{
  return sub_100025868(v0);
}

void *sub_1002195E8(uint64_t a1, long long *a2, long long *a3)
{
  uint64_t v16 = type metadata accessor for LocationViewDescriptor();
  int v17 = &off_100E37020;
  v15[0] = a1;
  type metadata accessor for NotificationsOptInStoreObserver();
  uint64_t v6 = (void *)swift_allocObject();
  uint64_t v7 = sub_1000DF0C4((uint64_t)v15, v16);
  __n128 v8 = __chkstk_darwin(v7);
  Swift::String v10 = (void *)((char *)&v15[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, __n128))(v11 + 16))(v10, v8);
  Swift::String v12 = sub_10002DEBC(*v10, a2, a3, v6);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v15);
  return v12;
}

uint64_t sub_100219714()
{
  return sub_100039C08(&qword_100E6BBA0);
}

uint64_t sub_100219748()
{
  uint64_t result = type metadata accessor for NotificationsOptInComponentViewModel();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void sub_1002197DC()
{
  sub_1000163D4(v0, "Self deallocated in NotificationSubscriptionMonitor.applicationWillEnterForeground");
}

uint64_t sub_100219804()
{
  return sub_10007C3FC(*(unsigned char *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(unsigned __int8 *)(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64), *(void *)(v0 + 72));
}

void sub_100219840()
{
  if (!qword_100E6F978)
  {
    type metadata accessor for DetailHeroChartLollipopPosition(255);
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100E6F978);
    }
  }
}

uint64_t type metadata accessor for DetailHeroChartLollipopPosition(uint64_t a1)
{
  return sub_10018678C(a1, qword_100E7F7B0);
}

void sub_1002198B8()
{
  sub_100227054();
  if (v0 <= 0x3F)
  {
    type metadata accessor for DailyForecastComponentViewModel.DayForecastViewModel(319);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_10021998C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1002199A8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DailyForecastComponentViewModel(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100219A04(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DailyForecastComponentViewModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_100219A68()
{
  sub_1000052CC(319, (unint64_t *)&qword_100E7DE68, (uint64_t (*)(uint64_t))sub_1001433AC, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Measurement);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

unint64_t sub_100219B44()
{
  unint64_t result = qword_100EB2920;
  if (!qword_100EB2920)
  {
    type metadata accessor for CountryCodeConfigurationMonitor();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB2920);
  }
  return result;
}

uint64_t sub_100219B90()
{
  sub_1001B1E64((void *)(v0 + 32), *(void *)(v0 + 56));
  sub_100219B44();
  return dispatch thunk of LocationMetadataManagerType.addObserver(_:)();
}

uint64_t type metadata accessor for AppIntentsDependencyStartupTask()
{
  uint64_t result = qword_100E73EB8;
  if (!qword_100E73EB8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t sub_100219C30()
{
  unint64_t result = qword_100EAF5E0;
  if (!qword_100EAF5E0)
  {
    type metadata accessor for AppIntentsDependencyStartupTask();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAF5E0);
  }
  return result;
}

uint64_t sub_100219C80()
{
  return sub_100029E20();
}

uint64_t type metadata accessor for StateProcessingContextProvider()
{
  return sub_100109098();
}

ValueMetadata *type metadata accessor for NotificationAuthorizationState()
{
  return &type metadata for NotificationAuthorizationState;
}

unint64_t sub_100219CD0()
{
  unint64_t result = qword_100EA1718;
  if (!qword_100EA1718)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA1718);
  }
  return result;
}

void sub_100219D1C()
{
  sub_10021DCF0();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t type metadata accessor for LocationViewerViewModelFactory()
{
  uint64_t result = qword_100E927A0;
  if (!qword_100E927A0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t sub_100219E08()
{
  unint64_t result = qword_100E92858;
  if (!qword_100E92858)
  {
    type metadata accessor for LocationViewerViewModelFactory();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E92858);
  }
  return result;
}

uint64_t sub_100219E58(long long *a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC7Weather30LocationViewerViewModelFactory_lastViewModel;
  uint64_t v4 = type metadata accessor for LocationViewerViewModel();
  _s7Weather24LocationCompositionStateOwst_0(v3, 1, 1, v4);
  *(unsigned char *)(v1
           + OBJC_IVAR____TtC7Weather30LocationViewerViewModelFactory____lazy_storage___conditionBackgroundOverridden) = 2;
  sub_1001262E4(a1, v1 + OBJC_IVAR____TtC7Weather30LocationViewerViewModelFactory_appConfigurationManager);
  return v1;
}

uint64_t sub_100219ED0()
{
  uint64_t result = type metadata accessor for DisplayMetrics();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_100219F6C()
{
  uint64_t result = type metadata accessor for LocationComponentHeaderViewModel(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_10021A01C()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_10021A038()
{
  qword_100F51338 = 0x4026000000000000;
}

void sub_10021A048()
{
  qword_100F51330 = 0x4026000000000000;
}

void sub_10021A058()
{
  qword_100F51348 = 0x4030000000000000;
}

unint64_t sub_10021A068()
{
  unint64_t result = qword_100EAA9B0;
  if (!qword_100EAA9B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAA9B0);
  }
  return result;
}

uint64_t sub_10021A0B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100042C94(a1, a2);
}

uint64_t sub_10021A0F0()
{
  return swift_getOpaqueTypeConformance2();
}

double sub_10021A10C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100022C64(a1, *(void *)v2, *(unsigned __int8 *)(v2 + 8) | (*(unsigned __int8 *)(v2 + 9) << 8), a2);
}

uint64_t sub_10021A128()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10021A144(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

void *sub_10021A188()
{
  type metadata accessor for WireframeLevelInterestManager();
  uint64_t v0 = swift_allocObject();
  uint64_t result = sub_100015CF8();
  qword_100F521F8 = v0;
  return result;
}

uint64_t sub_10021A1C4()
{
  uint64_t result = type metadata accessor for NewsArticleComponentContentViewModel(319);
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

void sub_10021A258()
{
  sub_1002234DC();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_10021A304()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t type metadata accessor for LocationPreviewModalViewState(uint64_t a1)
{
  return sub_10018678C(a1, qword_100E7C178);
}

uint64_t sub_10021A340()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_10021A384()
{
  unint64_t result = qword_100E951E0;
  if (!qword_100E951E0)
  {
    sub_10018C6DC(&qword_100E951D8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E951E0);
  }
  return result;
}

uint64_t sub_10021A3D8()
{
  return sub_10002AEFC();
}

uint64_t *sub_10021A3F0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (char *)a1 + v6;
    __n128 v8 = (char *)a2 + v6;
    uint64_t v9 = type metadata accessor for DispatchQoS();
    Swift::String v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    v10(v7, v8, v9);
  }
  return v3;
}

uint64_t sub_10021A4D8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10021A4F8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10021A514()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10021A530(uint64_t a1)
{
  return sub_100097720(a1, &qword_100E65ED8, static WindowHorizontalSizeClassKey.defaultValue, (uint64_t (*)(void))&type metadata accessor for UserInterfaceSizeClass);
}

void type metadata accessor for TemperatureGradientColorStop()
{
}

uint64_t sub_10021A564@<X0>(uint64_t *a1@<X8>)
{
  return sub_1000107D4((uint64_t (*)(void))type metadata accessor for NotificationSettingsViewStateReducer, (uint64_t)&off_100E1B040, a1);
}

uint64_t sub_10021A584@<X0>(uint64_t *a1@<X8>)
{
  return sub_1000107D4((uint64_t (*)(void))type metadata accessor for NotificationSettingsViewModelFactory, (uint64_t)&off_100E3AD68, a1);
}

uint64_t sub_10021A5A4()
{
  return sub_100052714();
}

uint64_t sub_10021A5BC()
{
  return sub_100019A84();
}

uint64_t sub_10021A5E0(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_10021A628()
{
  sub_100230B94();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t sub_10021A6B8()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_10021A6D4()
{
  unint64_t result = qword_100EB6098;
  if (!qword_100EB6098)
  {
    type metadata accessor for LocationAuthorizationMonitor();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB6098);
  }
  return result;
}

uint64_t sub_10021A728(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1007D53C8);
}

void sub_10021A73C()
{
  sub_10000AFF4();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_10021A7F4()
{
  return swift_getOpaqueTypeConformance2();
}

double sub_10021A810()
{
  type metadata accessor for GridGeometryValidator();
  uint64_t v0 = swift_allocObject();
  double result = 0.0;
  *(_OWORD *)(v0 + 16) = 0u;
  *(_OWORD *)(v0 + 32) = 0u;
  *(void *)(v0 + 48) = 255;
  *(_OWORD *)(v0 + 56) = 0u;
  *(_OWORD *)(v0 + 72) = 0u;
  return result;
}

void sub_10021A850()
{
  sub_10000CDCC();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_10021A8F4()
{
  return swift_getOpaqueTypeConformance2();
}

ValueMetadata *type metadata accessor for DefaultBackgroundButtonStyle()
{
  return &type metadata for DefaultBackgroundButtonStyle;
}

uint64_t sub_10021A920()
{
  return swift_getOpaqueTypeConformance2();
}

ValueMetadata *type metadata accessor for DailyForecastValidationError()
{
  return &type metadata for DailyForecastValidationError;
}

void sub_10021A94C()
{
  sub_100011F84();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_10021A9F0()
{
  sub_100011F84();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_10021AA88()
{
  sub_100046CB8(319, (unint64_t *)&unk_100E82DC0, (void (*)(uint64_t))type metadata accessor for LocationComponentHeaderMetrics);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

Swift::Void __swiftcall AccessibilitySettingsMonitor.applicationWillEnterForeground()()
{
  sub_10000FEAC();
  sub_1000113B0();
  sub_100012218();

  sub_100027FDC();
}

uint64_t sub_10021AB78@<X0>(uint64_t (*a1)(void)@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t v5 = a1(0);
  uint64_t result = swift_allocObject();
  a3[3] = v5;
  a3[4] = a2;
  *a3 = result;
  return result;
}

uint64_t sub_10021ABC8@<X0>(uint64_t *a1@<X8>)
{
  return sub_10021AB78((uint64_t (*)(void))type metadata accessor for SunriseSunsetDetailViewStateReducer, (uint64_t)&off_100E2BA68, a1);
}

uint64_t sub_10021ABE8()
{
  return sub_100052930();
}

void sub_10021AC00()
{
  sub_100230BE0();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_10021AC90()
{
  sub_10000F990();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t sub_10021AD30()
{
  return sub_1001110D8(&qword_100EA3590, (void (*)(uint64_t))type metadata accessor for LocationViewerStoreObserver);
}

uint64_t sub_10021AD78()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10021AD94()
{
  uint64_t v0 = type metadata accessor for LocationViewBannerContainer(0);
  sub_1001627C0(v0);
  uint64_t v1 = sub_100179C64();

  return sub_10021ADF0(v1, v2);
}

uint64_t sub_10021ADF0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_10017DF08(&qword_100E63A10);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for ContentStatusBanner();
  uint64_t v7 = __chkstk_darwin(v6);
  __chkstk_darwin(v7);
  sub_10006DF38(a2, (uint64_t)v5, &qword_100E63A10);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v5, 1, v6) == 1) {
    return sub_10017DF4C((uint64_t)v5, &qword_100E63A10);
  }
  sub_1001516CC();
  type metadata accessor for LocationViewBannerContainer(0);
  sub_10015176C();
  sub_10017DF08(&qword_100E8EAB0);
  State.wrappedValue.setter();
  return sub_100151660();
}

uint64_t sub_10021AFA8@<X0>(uint64_t *a1@<X8>)
{
  return sub_10002ADF0(v1[2], v1[3], v1[4], v1[5], a1);
}

void sub_10021AFB4()
{
  sub_100230848();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_10021B054()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10021B070()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10021B08C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for HourlyForecastComponentView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_10021B0F0()
{
  qword_100EA5E90 = 0x403C000000000000;
}

uint64_t sub_10021B100@<X0>(uint64_t a1@<X8>)
{
  return sub_10003BDDC(*(void *)(v1 + 16), a1);
}

uint64_t sub_10021B108()
{
  return sub_10002200C();
}

uint64_t sub_10021B130()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_10021B14C()
{
  sub_10021B24C();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_10021B1EC(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(a2, a1);
  return a2;
}

void sub_10021B24C()
{
  if (!qword_100E760D8)
  {
    type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference(255);
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100E760D8);
    }
  }
}

uint64_t sub_10021B2A4()
{
  uint64_t result = type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_10021B33C()
{
  unint64_t result = qword_100E6F420;
  if (!qword_100E6F420)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6F420);
  }
  return result;
}

void sub_10021B388(uint64_t a1@<X8>)
{
  *(void *)(a1 + 24) = &type metadata for ContentStatusBannerViewFactory;
  *(void *)(a1 + 32) = &off_100E38A68;
}

uint64_t sub_10021B3A4()
{
  sub_1000095BC();

  return swift_deallocClassInstance();
}

uint64_t sub_10021B3D8@<X0>(uint64_t (*a1)(void)@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t v5 = a1(0);
  uint64_t result = swift_allocObject();
  a3[3] = v5;
  a3[4] = a2;
  *a3 = result;
  return result;
}

uint64_t sub_10021B428@<X0>(uint64_t *a1@<X8>)
{
  return sub_10021B3D8((uint64_t (*)(void))type metadata accessor for UnitsConfigurationViewStateReducer, (uint64_t)&off_100E36530, a1);
}

uint64_t sub_10021B448()
{
  return sub_100049258();
}

double sub_10021B460()
{
  if (qword_100E622C0 != -1) {
    swift_once();
  }
  xmmword_100E738A8 = xmmword_100F51400;
  unk_100E738B8 = xmmword_100F51410;
  double result = *(double *)&xmmword_100F51420;
  xmmword_100E738C8 = xmmword_100F51420;
  return result;
}

uint64_t sub_10021B4C4(uint64_t result, uint64_t a2)
{
  switch((char)result)
  {
    case 1:
      double result = sub_10003B1D8(a2);
      break;
    case 2:
      sub_1006BCD54();
      double result = sub_1006BCDB0();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_10021B534@<X0>(uint64_t (*a1)(void)@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t v5 = a1(0);
  uint64_t result = swift_allocObject();
  a3[3] = v5;
  a3[4] = a2;
  *a3 = result;
  return result;
}

uint64_t sub_10021B584@<X0>(uint64_t *a1@<X8>)
{
  return sub_10021B534((uint64_t (*)(void))type metadata accessor for NotificationsOptInViewStateReducer, (uint64_t)&off_100E0D3B8, a1);
}

uint64_t sub_10021B5A4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for NotificationsOptInViewModelFactory();
  uint64_t result = swift_allocObject();
  *(unsigned char *)(result + 16) = 6;
  a1[3] = v2;
  a1[4] = (uint64_t)&off_100E2BA78;
  *a1 = result;
  return result;
}

uint64_t sub_10021B5F4()
{
  return sub_1000677FC();
}

uint64_t sub_10021B610()
{
  uint64_t v1 = *(void *)(type metadata accessor for NWPath() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void *)(v0 + ((*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8));

  return sub_100049A1C(v0 + v2, v3);
}

uint64_t sub_10021B69C(uint64_t a1)
{
  return sub_10001BFB0(a1, v1);
}

void sub_10021B6A4()
{
}

uint64_t sub_10021B6B0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10021B6CC()
{
  sub_1000A9DE8();
  sub_100119470();
  uint64_t v2 = *v1;
  sub_100179D88();
  *uint64_t v3 = v2;
  *(void *)(v4 + 40) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return _swift_task_switch(sub_1006A3D3C, 0, 0);
  }
  else
  {
    sub_1001627B4();
    return v5();
  }
}

uint64_t sub_10021B7CC()
{
  sub_100109790();
  sub_100183DB4();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_100162FCC(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_100214FB0;
  sub_10019EF84();
  return sub_10021B85C();
}

uint64_t sub_10021B85C()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 32) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_10021B6CC;
  return sub_1000323FC();
}

uint64_t sub_10021B8EC()
{
  sub_100179DB4();
  uint64_t v1 = *(void *)(v0 + 248);
  uint64_t v2 = *(void *)(v0 + 240);
  uint64_t v3 = *(void *)(v0 + 112);
  unsigned __int8 v4 = *(unsigned char *)(v0 + 264);
  swift_release();
  sub_10001DEC8(v3, v2, v1, v4);
  sub_10015303C(v2, v1, v4);
  return _swift_task_switch(sub_100025DB0, v3, 0);
}

uint64_t sub_10021B990()
{
  sub_100179DB4();
  uint64_t v1 = v0[14];
  if (*(unsigned char *)(v1 + 208))
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v2 = (uint64_t (*)(void))v0[1];
    return v2();
  }
  else
  {
    *(unsigned char *)(v1 + 208) = 1;
    uint64_t v4 = *(void *)(v1 + 368);
    uint64_t v5 = *(void *)(v1 + 376);
    sub_1001B1E64((void *)(v1 + 344), v4);
    uint64_t v6 = (void *)swift_task_alloc();
    v0[27] = v6;
    *uint64_t v6 = v0;
    v6[1] = sub_10021BAD0;
    return dispatch thunk of LocationsOfInterestDataSourceType.locationsOfInterest()(v4, v5);
  }
}

uint64_t sub_10021BAD0()
{
  sub_100109790();
  uint64_t v2 = *v1;
  uint64_t v3 = *v1;
  *(void *)(v3 + 224) = v4;
  *(void *)(v3 + 232) = v0;
  swift_task_dealloc();
  uint64_t v5 = *(void *)(v2 + 112);
  if (v0) {
    uint64_t v6 = sub_1006A3F50;
  }
  else {
    uint64_t v6 = sub_100077748;
  }
  return _swift_task_switch(v6, v5, 0);
}

uint64_t sub_10021BC00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (*(void *)(a1 + 16))
  {
    sub_1002E6D60();
    if ((v6 & 1) == 0)
    {
      if (qword_100E627A8 != -1) {
        swift_once();
      }
      uint64_t v14 = type metadata accessor for Logger();
      sub_1002102B0(v14, (uint64_t)qword_100F51E10);
      Swift::String v15 = Logger.logObject.getter();
      os_log_type_t v16 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v15, v16))
      {
        int v17 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)int v17 = 0;
        _os_log_impl((void *)&_mh_execute_header, v15, v16, "Locations of interest updated", v17, 2u);
        swift_slowDealloc();
      }

      swift_bridgeObjectRetain();
      a3 = a4;
      goto LABEL_19;
    }
    if (qword_100E627A8 != -1) {
      swift_once();
    }
    uint64_t v7 = type metadata accessor for Logger();
    sub_1002102B0(v7, (uint64_t)qword_100F51E10);
    uint64_t v8 = Logger.logObject.getter();
    os_log_type_t v9 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v8, v9))
    {
      Swift::String v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)Swift::String v10 = 0;
      _os_log_impl((void *)&_mh_execute_header, v8, v9, "Locations of interest are same as before", v10, 2u);
      swift_slowDealloc();
    }
  }
  else
  {
    if (!*(void *)(a2 + 16)) {
      return 0;
    }
    if (qword_100E627A8 != -1) {
      swift_once();
    }
    uint64_t v11 = type metadata accessor for Logger();
    sub_1002102B0(v11, (uint64_t)qword_100F51E10);
    uint64_t v8 = Logger.logObject.getter();
    os_log_type_t v12 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v8, v12))
    {
      Swift::String v13 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)Swift::String v13 = 0;
      _os_log_impl((void *)&_mh_execute_header, v8, v12, "Locations of interest newly added", v13, 2u);
      swift_slowDealloc();
    }
  }

LABEL_19:
  swift_bridgeObjectRetain();
  return a3;
}

unint64_t sub_10021BEB8()
{
  unint64_t result = qword_100E7E980;
  if (!qword_100E7E980)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E7E980);
  }
  return result;
}

uint64_t sub_10021BF04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  memcpy(__dst, v2, sizeof(__dst));
  return sub_1000436C4(a1, a2);
}

uint64_t sub_10021BF58()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_10021BF74()
{
  sub_10000F5F8();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

unint64_t sub_10021C00C()
{
  unint64_t result = qword_100EA1550;
  if (!qword_100EA1550)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA1550);
  }
  return result;
}

ValueMetadata *type metadata accessor for LocationAuthorizationState()
{
  return &type metadata for LocationAuthorizationState;
}

void sub_10021C06C()
{
  sub_10002B3E8(319, (unint64_t *)&qword_100E638F0, (void (*)(uint64_t))&type metadata accessor for Date);
  if (v0 <= 0x3F) {
    swift_initEnumMetadataMultiPayload();
  }
}

uint64_t type metadata accessor for ListLocationRowPrimaryText(uint64_t a1)
{
  return sub_10018678C(a1, qword_100EB4390);
}

void sub_10021C13C()
{
  sub_10000F990();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t type metadata accessor for InteractionDonationManager()
{
  uint64_t result = qword_100E895B8;
  if (!qword_100E895B8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_10021C22C()
{
  uint64_t v1 = *(void *)(type metadata accessor for Location.Identifier() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = v0 + v2;
  uint64_t v4 = (uint64_t *)(v0 + ((*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];

  sub_100020194(v3, v5, v6);
}

unint64_t sub_10021C2BC()
{
  unint64_t result = qword_100EA1888;
  if (!qword_100EA1888)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA1888);
  }
  return result;
}

uint64_t sub_10021C308()
{
  return swift_getOpaqueTypeConformance2();
}

ValueMetadata *type metadata accessor for FixedBackgroundButtonStyle()
{
  return &type metadata for FixedBackgroundButtonStyle;
}

uint64_t sub_10021C334(uint64_t a1)
{
  uint64_t v1 = a1 + *(int *)(type metadata accessor for DisplayMetrics() + 36);
  uint64_t v2 = type metadata accessor for DynamicTypeSize();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(v1, v2);
}

uint64_t sub_10021C3A8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  *(unsigned char *)(a1 + 18) = *(unsigned char *)(a2 + 18);
  uint64_t v4 = *(int *)(type metadata accessor for DisplayMetrics() + 36);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = type metadata accessor for DynamicTypeSize();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t sub_10021C448(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  *(unsigned char *)(a1 + 18) = *(unsigned char *)(a2 + 18);
  uint64_t v4 = *(int *)(type metadata accessor for DisplayMetrics() + 36);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = type metadata accessor for DynamicTypeSize();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(v5, v6, v7);
  return a1;
}

uint64_t sub_10021C4E8(uint64_t a1)
{
  uint64_t result = type metadata accessor for DisplayMetrics();
  if (v3 <= 0x3F)
  {
    uint64_t v4 = *(void *)(result - 8);
    swift_initEnumMetadataSingleCase();
    uint64_t result = 0;
    *(_DWORD *)(*(void *)(a1 - 8) + 84) = *(_DWORD *)(v4 + 84);
  }
  return result;
}

uint64_t sub_10021C58C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t type metadata accessor for DebugOfflineViewController()
{
  return self;
}

uint64_t sub_10021C5CC()
{
  uint64_t result = type metadata accessor for AutomationInfoProperty();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_10021C658()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_10021C674()
{
  unint64_t result = qword_100E8E3E8;
  if (!qword_100E8E3E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8E3E8);
  }
  return result;
}

uint64_t sub_10021C6C0()
{
  sub_100119470();
  uint64_t v1 = *v0;
  sub_100179D88();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  sub_100127A5C();
  return _swift_task_switch();
}

uint64_t sub_10021C78C()
{
  sub_100119470();
  uint64_t v1 = *v0;
  sub_100179D88();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  unint64_t v3 = *(uint64_t (**)(void))(v1 + 8);
  return v3();
}

ValueMetadata *type metadata accessor for WindComponentRowViewModel()
{
  return &type metadata for WindComponentRowViewModel;
}

uint64_t sub_10021C864(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10021C8AC()
{
  return sub_100020DC0(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

void *sub_10021C8B8(uint64_t a1, uint64_t a2, long long *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  sub_1001ABC4C(0, (unint64_t *)&qword_100E62D68);
  v7[13] = OS_os_log.init(subsystem:category:)();
  v7[2] = a1;
  v7[3] = a2;
  sub_1001262E4(a3, (uint64_t)(v7 + 4));
  v7[9] = a4;
  v7[10] = a5;
  v7[11] = a6;
  v7[12] = a7;
  return v7;
}

void *sub_10021C98C()
{
  return &protocol witness table for String;
}

void sub_10021C998()
{
  sub_10000ADB8();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_10021CA34(uint64_t a1)
{
  return sub_10006B13C(a1, *(void *)(v1 + 16));
}

void sub_10021CA50()
{
  sub_100227118();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_10021CAF4(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for LocationViewerPageControl(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10021CB38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10021CAF4(&qword_100E8D980);

  return static UIViewRepresentable._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_10021CBB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10021CAF4(&qword_100E8D980);

  return static UIViewRepresentable._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_10021CC3C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_100018CD4();
  *a1 = result;
  return result;
}

uint64_t sub_10021CC68()
{
  return sub_10021CAF4(&qword_100E8D970);
}

void sub_10021CC9C()
{
  sub_100227118();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t type metadata accessor for LocationViewerPageControl.Coordinator(uint64_t a1)
{
  return sub_10018678C(a1, (uint64_t *)&unk_100E8D838);
}

ValueMetadata *type metadata accessor for LocationViewConfiguration()
{
  return &type metadata for LocationViewConfiguration;
}

unint64_t sub_10021CD68()
{
  unint64_t result = qword_100EB6788;
  if (!qword_100EB6788)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB6788);
  }
  return result;
}

unint64_t sub_10021CDB4()
{
  unint64_t result = qword_100EA9500;
  if (!qword_100EA9500)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA9500);
  }
  return result;
}

ValueMetadata *type metadata accessor for LocationViewConfiguration.Row()
{
  return &type metadata for LocationViewConfiguration.Row;
}

uint64_t sub_10021CE10@<X0>(uint64_t *a1@<X8>)
{
  return sub_1001EA0FC(*v1, a1);
}

uint64_t type metadata accessor for LocationPreviewViewAction()
{
  uint64_t result = qword_100EAAF70;
  if (!qword_100EAAF70) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10021CE64()
{
  return sub_100020A6C();
}

uint64_t sub_10021CE8C()
{
  uint64_t result = type metadata accessor for WeatherConditionBackgroundTimeData();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_10021CF30()
{
  unint64_t result = qword_100E7B168;
  if (!qword_100E7B168)
  {
    type metadata accessor for SidebarVisibilityMonitor();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E7B168);
  }
  return result;
}

uint64_t sub_10021CF7C()
{
  return sub_10001A3AC(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
}

uint64_t sub_10021CF8C()
{
  uint64_t result = type metadata accessor for SevereAlertComponentViewModel();
  if (v1 <= 0x3F)
  {
    sub_1001627C0(result);
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_10021CFFC()
{
  return sub_10021CF8C();
}

uint64_t sub_10021D008(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for NotificationsOptInAction();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10021D04C()
{
  return sub_10021D008(&qword_100EAA2F0);
}

void sub_10021D080()
{
  sub_100230954();
  if (v0 <= 0x3F)
  {
    type metadata accessor for NewsArticleComponentViewModel(319);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_10021D15C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10021D178(uint64_t a1, uint64_t a2, long long *a3, long long *a4, long long *a5, long long *a6, long long *a7, char a8)
{
  uint64_t v26 = type metadata accessor for DemoPresetProvider();
  uint64_t v27 = &off_100E363F0;
  v25[0] = a2;
  type metadata accessor for MainInitialStateProvider();
  uint64_t v16 = swift_allocObject();
  uint64_t v17 = sub_1000DF0C4((uint64_t)v25, v26);
  __n128 v18 = __chkstk_darwin(v17);
  uint64_t v20 = (void *)((char *)&v25[-1] - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, __n128))(v21 + 16))(v20, v18);
  uint64_t v22 = sub_1000236AC(a1, *v20, a3, a4, a5, a6, a7, a8, v16);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v25);
  return v22;
}

uint64_t sub_10021D2E0(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 2)
  {
    uint64_t v3 = type metadata accessor for Location.Identifier();
  }
  else if (result == 1)
  {
    uint64_t v3 = type metadata accessor for WeatherMapOverlayKind();
  }
  else
  {
    if (result) {
      return result;
    }
    uint64_t v3 = type metadata accessor for LocationModel();
  }
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);

  return v4(a1, v3);
}

uint64_t sub_10021D380(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(a2, a1);
  return a2;
}

BOOL sub_10021D3E0(uint64_t a1)
{
  uint64_t v2 = sub_10017DF08(&qword_100E63770);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v11 - v6;
  sub_10006DF38(a1, (uint64_t)&v11 - v6, &qword_100E63770);
  uint64_t v8 = type metadata accessor for LocationWeatherDataState(0);
  BOOL v9 = 1;
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v7, 1, v8) != 1)
  {
    sub_10006DF38((uint64_t)v7, (uint64_t)v5, &qword_100E63770);
    BOOL v9 = swift_getEnumCaseMultiPayload() != 2;
    sub_1001569A8((uint64_t)v5, (void (*)(void))type metadata accessor for LocationWeatherDataState);
  }
  sub_100178110((uint64_t)v7, &qword_100E63770);
  return v9;
}

uint64_t sub_10021D508()
{
  uint64_t result = type metadata accessor for PreviewLocation();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for LocationPreviewModalViewState(319);
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

void sub_10021D5D0()
{
  sub_10000F5F8();
  if (v0 <= 0x3F)
  {
    type metadata accessor for HomeAndWorkRefinementRowViewModel();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t type metadata accessor for ExtendedAppLaunchManager()
{
  return self;
}

uint64_t sub_10021D6D0(uint64_t a1, uint64_t a2)
{
  return sub_10021D718(a1, a2);
}

uint64_t sub_10021D6F4()
{
  return sub_10005FC50();
}

uint64_t sub_10021D718(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(v2 + 16);
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  sub_1001361AC(v3);

  return swift_retain();
}

uint64_t sub_10021D75C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10021D778()
{
  uint64_t result = type metadata accessor for DetailHeroChartLollipopPosition(319);
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_10021D80C()
{
  return sub_10004932C();
}

void sub_10021D824()
{
  swift_getObjectType();

  ApplicationStateMonitor.applicationWillEnterForeground()();
}

unint64_t sub_10021D860()
{
  unint64_t result = qword_100E926C8;
  if (!qword_100E926C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E926C8);
  }
  return result;
}

uint64_t sub_10021D8AC@<X0>(void (*a1)(char *, char *, uint64_t)@<X0>, uint64_t a2@<X8>)
{
  return sub_100072690(a1, a2);
}

uint64_t sub_10021D8F0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10021D90C()
{
  type metadata accessor for VisibilityStateHolder();
  uint64_t result = swift_allocObject();
  *(unsigned char *)(result + 16) = 0;
  return result;
}

void sub_10021D938()
{
  sub_100227228(319, (unint64_t *)&unk_100EA3C28, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for State);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t type metadata accessor for StateRestorationManager()
{
  return swift_getGenericMetadata();
}

uint64_t type metadata accessor for StatePersistenceManager()
{
  return swift_getGenericMetadata();
}

uint64_t type metadata accessor for SelectorCommitDebouncer()
{
  return self;
}

uint64_t sub_10021DA68()
{
  type metadata accessor for SelectorCommitDebouncer();
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = &_swiftEmptyDictionarySingleton;
  qword_100EB5180 = result;
  return result;
}

double sub_10021DAA4@<D0>(uint64_t a1@<X8>)
{
  memcpy(v4, v1, sizeof(v4));
  return sub_100019CE8(a1);
}

uint64_t sub_10021DAE8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10021DB04()
{
  return sub_1000453FC();
}

uint64_t sub_10021DB1C()
{
  return sub_100019A84();
}

uint64_t sub_10021DB34()
{
  if (*(unsigned char *)(v0 + 17) == 1) {
    return sub_1006EED3C();
  }
  return result;
}

uint64_t sub_10021DB48()
{
  uint64_t result = type metadata accessor for ViewState(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for NotificationsOptInInput()
{
  uint64_t result = qword_100E90590;
  if (!qword_100E90590) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10021DC40()
{
  uint64_t result = type metadata accessor for LocationViewerActiveLocationState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

void sub_10021DCF0()
{
  if (!qword_100E927B0)
  {
    type metadata accessor for LocationViewerViewModel();
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100E927B0);
    }
  }
}

uint64_t sub_10021DD48()
{
  return sub_100052C00();
}

uint64_t sub_10021DD60(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  uint64_t v4 = sub_100126010();
  v5(v4);
  return a2;
}

uint64_t sub_10021DDB4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for LocationFooterViewModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_10021DE18()
{
  if (!qword_100EB3890)
  {
    type metadata accessor for LocationComponentAction(255);
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100EB3890);
    }
  }
}

uint64_t sub_10021DE70()
{
  uint64_t result = type metadata accessor for LearnMoreAttributorViewModel();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void sub_10021DF10()
{
  sub_1002308A0();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_10021DFB0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10021DFCC(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(type metadata accessor for ContentStatusBannerView() - 8);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return sub_10002197C(a1, a2, v6);
}

void sub_10021E04C()
{
  type metadata accessor for ConditionPickerMenuViewModel(319);
  if (v0 <= 0x3F)
  {
    sub_100227170();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_10021E114@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for ConditionDetailViewStateReducer();
  uint64_t result = swift_allocObject();
  a1[3] = v2;
  a1[4] = (uint64_t)&off_100E383E8;
  *a1 = result;
  return result;
}

uint64_t sub_10021E15C()
{
  return sub_100059054();
}

void type metadata accessor for AutomationComponentInfo()
{
}

unint64_t sub_10021E180()
{
  unint64_t result = qword_100E92E70;
  if (!qword_100E92E70)
  {
    type metadata accessor for AppConfigurationMonitor();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E92E70);
  }
  return result;
}

uint64_t sub_10021E1CC(uint64_t (*a1)(void *, unint64_t, uint64_t, uint64_t))
{
  uint64_t v3 = v1[7];
  uint64_t v4 = v1[8];
  sub_1001B1E64(v1 + 4, v3);
  unint64_t v5 = sub_10021E180();
  return a1(v1, v5, v3, v4);
}

uint64_t sub_10021E230()
{
  return sub_10021E1CC((uint64_t (*)(void *, unint64_t, uint64_t, uint64_t))&dispatch thunk of AppConfigurationManagerType.addObserver(_:));
}

void sub_10021E25C()
{
  sub_100230954();
  if (v0 <= 0x3F)
  {
    sub_1002167A8();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t type metadata accessor for StubListViewTipManager()
{
  return self;
}

uint64_t type metadata accessor for PerformanceTestManager()
{
  return self;
}

uint64_t sub_10021E384()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

unint64_t sub_10021E3AC()
{
  unint64_t result = qword_100EA7DF8;
  if (!qword_100EA7DF8)
  {
    type metadata accessor for NetworkActivityManager();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA7DF8);
  }
  return result;
}

void sub_10021E3FC()
{
  if (*(void *)(v0 + 16)) {
    sub_100049750();
  }
}

uint64_t type metadata accessor for MoonDetailSelectedDate()
{
  uint64_t result = qword_100E9B988;
  if (!qword_100E9B988) {
    return swift_getSingletonMetadata();
  }
  return result;
}

ValueMetadata *type metadata accessor for MoonComponentViewModel.Row()
{
  return &type metadata for MoonComponentViewModel.Row;
}

uint64_t sub_10021E47C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1000BFD04(a1, (void *)(v2 + 16), a2);
}

uint64_t sub_10021E484@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for LocationViewerInputFactory();
  uint64_t result = swift_allocObject();
  a1[3] = v2;
  a1[4] = (uint64_t)&off_100E09530;
  *a1 = result;
  return result;
}

uint64_t sub_10021E4CC@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_10007B11C(a1, (uint64_t)&off_100E357F0, a2);
}

uint64_t sub_10021E4D8@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_10007B11C(a1, (uint64_t)&off_100E357E0, a2);
}

uint64_t sub_10021E4E4()
{
  return sub_100052E20();
}

unint64_t sub_10021E4FC()
{
  unint64_t result = qword_100EAF718;
  if (!qword_100EAF718)
  {
    type metadata accessor for LocationViewDescriptor();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAF718);
  }
  return result;
}

uint64_t sub_10021E548(uint64_t a1)
{
  return sub_100027E44(a1, &qword_100E62A20);
}

uint64_t sub_10021E574(uint64_t a1)
{
  return sub_100027E44(a1, &qword_100E62A28);
}

uint64_t sub_10021E5A0()
{
  return sub_100072430();
}

void sub_10021E5B8()
{
  type metadata accessor for FeelsLikeComponentViewModel(319);
  if (v0 <= 0x3F)
  {
    sub_100230954();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_10021E68C()
{
  *(unsigned char *)(*(void *)(v0 + 16) + 16) = *(unsigned char *)(v0 + 24);
}

uint64_t sub_10021E69C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for CurrentWeather();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);

  return swift_bridgeObjectRelease();
}

unint64_t sub_10021E710()
{
  unint64_t result = qword_100E9EAD0[0];
  if (!qword_100E9EAD0[0])
  {
    type metadata accessor for CurrentLocationMonitor();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_100E9EAD0);
  }
  return result;
}

uint64_t sub_10021E75C()
{
  sub_1000298EC();
  sub_1001B1E64((void *)(v0 + 32), *(void *)(v0 + 56));
  sub_10021E710();
  sub_10019F3A0();
  return dispatch thunk of LocationManagerType.addObserver(_:)();
}

uint64_t sub_10021E7A8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for AveragesDetailViewStateReducer();
  uint64_t result = swift_allocObject();
  a1[3] = v2;
  a1[4] = (uint64_t)&off_100E31A58;
  *a1 = result;
  return result;
}

uint64_t sub_10021E7F0()
{
  return sub_100049400();
}

uint64_t sub_10021E808()
{
  uint64_t result = type metadata accessor for AutomationInfo(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_10021E8A8@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for VisibilityStateHolder();
  uint64_t result = ObservableObject<>.objectWillChange.getter();
  *a1 = result;
  return result;
}

void sub_10021E8E8()
{
  sub_10022728C();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_10021E9A0()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_10021E9BC()
{
  unint64_t result = qword_100E6E090;
  if (!qword_100E6E090)
  {
    type metadata accessor for SavedLocationsMonitor();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6E090);
  }
  return result;
}

uint64_t sub_10021EA0C()
{
  return sub_1000291EC(v0[2], v0[3], v0[4]);
}

void sub_10021EA18()
{
  type metadata accessor for PressureComponentViewModel();
  if (v0 <= 0x3F)
  {
    sub_100230954();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_10021EAE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1005EDF28);
}

void sub_10021EAF4()
{
  sub_100046CB8(319, (unint64_t *)&unk_100E82DC0, (void (*)(uint64_t))type metadata accessor for LocationComponentHeaderMetrics);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_10021EBB8()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_10021EBD4()
{
  uint64_t v0 = sub_10018C470();
  uint64_t v1 = type metadata accessor for PinningHeaderModifier(v0);
  sub_100164920(v1);
  sub_1005EFF40();
  sub_10020FA00();

  sub_1000189EC(v2, v3, v4, v5);
}

uint64_t sub_10021EC48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1005CEDE4(a1, a2, a3, a4, (uint64_t (*)(void, void, double, double, double, double))sub_1005EFC18);
}

uint64_t sub_10021EC60()
{
  uint64_t result = type metadata accessor for NewsArticleComponent();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for NewsComponentPosition()
{
  uint64_t result = qword_100E85658;
  if (!qword_100E85658) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void *sub_10021ED38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  a5[5] = type metadata accessor for LocationPreviewViewStateReducer();
  a5[6] = &off_100E32708;
  a5[2] = a1;
  a5[10] = type metadata accessor for NotificationSettingsViewStateReducer();
  a5[11] = &off_100E1B040;
  a5[7] = a2;
  a5[15] = type metadata accessor for NotificationsOptInViewStateReducer();
  a5[16] = &off_100E0D3B8;
  a5[12] = a3;
  a5[20] = type metadata accessor for ReportWeatherViewStateReducer();
  a5[21] = &off_100E2EF50;
  a5[17] = a4;
  return a5;
}

uint64_t sub_10021EDDC(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(a2, a1);
  return a2;
}

uint64_t sub_10021EE3C(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  uint64_t v4 = sub_100126010();
  v5(v4);
  return a2;
}

unint64_t sub_10021EE94()
{
  unint64_t result = qword_100E94558;
  if (!qword_100E94558)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E94558);
  }
  return result;
}

uint64_t type metadata accessor for ListLocationViewModel(uint64_t a1)
{
  return sub_10018678C(a1, (uint64_t *)&unk_100EB4420);
}

unint64_t sub_10021EF04()
{
  unint64_t result = qword_100EB0C38;
  if (!qword_100EB0C38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB0C38);
  }
  return result;
}

uint64_t sub_10021EF50@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for GridGeometryValidator();
  uint64_t result = ObservableObject<>.objectWillChange.getter();
  *a1 = result;
  return result;
}

void sub_10021EF8C()
{
  sub_100222EC8();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t type metadata accessor for DisplayMetricsMonitor()
{
  uint64_t result = qword_100E7FA90;
  if (!qword_100E7FA90) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_10021F084(void *a1)
{
  swift_unknownObjectWeakAssign();
  sub_10002E898();
}

uint64_t sub_10021F0D0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10021F0EC(long long *a1, uint64_t *a2)
{
  uint64_t v13 = *a2;
  uint64_t v14 = &off_100E11D78;
  v12[0] = a2;
  type metadata accessor for AppStoreReviewManager();
  uint64_t v3 = swift_allocObject();
  uint64_t v4 = sub_1000DF0C4((uint64_t)v12, v13);
  __n128 v5 = __chkstk_darwin(v4);
  uint64_t v7 = (void *)((char *)&v12[-1] - v6);
  (*(void (**)(char *, __n128))(v8 + 16))((char *)&v12[-1] - v6, v5);
  uint64_t v9 = sub_10002E028(a1, *v7, v3);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v12);
  return v9;
}

void sub_10021F220()
{
  sub_1002213A4();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t type metadata accessor for AppContinuationBridge()
{
  uint64_t result = qword_100E70618;
  if (!qword_100E70618) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10021F308(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AppConfigurationState();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void type metadata accessor for WindowHeightCategory()
{
}

void sub_10021F378()
{
  type metadata accessor for UVIndexComponentViewModel();
  if (v0 <= 0x3F)
  {
    sub_100230954();
    if (v1 <= 0x3F)
    {
      sub_1002167A8();
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

uint64_t sub_10021F488()
{
  return sub_10000B644();
}

uint64_t sub_10021F4A0()
{
  uint64_t result = type metadata accessor for ArticleModel();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_10021F534()
{
  return sub_10002A0F4();
}

uint64_t sub_10021F54C()
{
  return sub_1000270D8();
}

uint64_t sub_10021F564()
{
  return sub_1000251E0();
}

uint64_t type metadata accessor for LocationViewerModule()
{
  return self;
}

uint64_t sub_10021F5A8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10021F5C4()
{
  return sub_100026CC8();
}

uint64_t sub_10021F5E8()
{
  return sub_100008978();
}

uint64_t type metadata accessor for ListViewModelFactory()
{
  uint64_t result = qword_100E85E40;
  if (!qword_100E85E40) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10021F654(long long *a1, uint64_t a2, long long *a3, long long *a4, long long *a5, long long *a6, char a7, long long *a8)
{
  uint64_t v26 = type metadata accessor for WeatherConditionBackgroundTimeDataFactory();
  uint64_t v27 = &off_100E19AF8;
  v25[0] = a2;
  type metadata accessor for ListViewModelFactory();
  uint64_t v16 = swift_allocObject();
  uint64_t v17 = sub_1000DF0C4((uint64_t)v25, v26);
  __n128 v18 = __chkstk_darwin(v17);
  uint64_t v20 = (void *)((char *)&v25[-1] - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, __n128))(v21 + 16))(v20, v18);
  uint64_t v22 = sub_100051294(a1, *v20, a3, a4, a5, a6, a7, a8, v16);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v25);
  return v22;
}

uint64_t sub_10021F7BC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10021F800()
{
  return sub_10003AF48();
}

uint64_t type metadata accessor for DetailChartSelection()
{
  uint64_t result = qword_100E94420;
  if (!qword_100E94420) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata accessor for DemoPresetMiddleware()
{
  return self;
}

ValueMetadata *type metadata accessor for ConfiguredUnitsState()
{
  return &type metadata for ConfiguredUnitsState;
}

uint64_t sub_10021F894()
{
  return swift_getOpaqueTypeConformance2();
}

void type metadata accessor for AutomationSearchInfo()
{
}

void type metadata accessor for WindowWidthCategory()
{
}

void sub_10021F8C8()
{
  sub_100046C10(319, (unint64_t *)&unk_100E64138, (void (*)(uint64_t))type metadata accessor for LocationHeaderViewMeasurements);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_10021F99C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10021F9B8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10021F9D4(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_10021FA10()
{
  return swift_initClassMetadata2();
}

void sub_10021FA58()
{
  sub_100004B44(319, qword_100E6D470, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_10021FB20()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10021FB3C()
{
  return sub_10002E1DC(&qword_100E74B38);
}

uint64_t sub_10021FB70(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for NotificationsAction();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10021FBB4()
{
  return sub_10021FB70(&qword_100E869A0);
}

uint64_t type metadata accessor for LoggerStoreObserver()
{
  return swift_getGenericMetadata();
}

double sub_10021FC00()
{
  if ((v0[8] & 1) == 0) {
    return *(double *)v0;
  }
  *(void *)unint64_t v0 = 0x3FD3333333333333;
  v0[8] = 0;
  return 0.3;
}

double sub_10021FC2C()
{
  if ((*(unsigned char *)(v0 + 24) & 1) == 0) {
    return *(double *)(v0 + 16);
  }
  *(void *)(v0 + 16) = 0x4014000000000000;
  *(unsigned char *)(v0 + 24) = 0;
  return 5.0;
}

double sub_10021FC50()
{
  if ((*(unsigned char *)(v0 + 56) & 1) == 0) {
    return *(double *)(v0 + 48);
  }
  *(void *)(v0 + 48) = 0x4000000000000000;
  *(unsigned char *)(v0 + 56) = 0;
  return 2.0;
}

double sub_10021FC74()
{
  if ((*(unsigned char *)(v0 + 40) & 1) == 0) {
    return *(double *)(v0 + 32);
  }
  *(void *)(v0 + 32) = 0;
  *(unsigned char *)(v0 + 40) = 0;
  return 0.0;
}

uint64_t sub_10021FC94()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10021FCB0()
{
  uint64_t v1 = type metadata accessor for LocationContentView(0);
  sub_1001627C0(v1);
  char v3 = *(unsigned char *)(v0 + 16);
  uint64_t v4 = (void *)(v0 + ((*(unsigned __int8 *)(v2 + 80) + 17) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80)));

  return sub_10021FCF4(v3, v4);
}

uint64_t sub_10021FCF4(char a1, void *a2)
{
  uint64_t v4 = type metadata accessor for Location.Identifier();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v15[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for LocationViewModel();
  uint64_t result = __chkstk_darwin(v8 - 8);
  uint64_t v11 = (char *)&v15[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    uint64_t v12 = a2[15];
    uint64_t v13 = a2[16];
    sub_1001B1E64(a2 + 12, v12);
    (*(void (**)(uint64_t, uint64_t))(v13 + 16))(v12, v13);
    sub_1001E9994((uint64_t)(a2 + 7), (uint64_t)v15);
    sub_1001B1E64(v15, v15[3]);
    swift_retain();
    sub_100133E68();
    swift_release();
    (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v7, v11, v4);
    sub_1001338DC((uint64_t)v11, (void (*)(void))type metadata accessor for LocationViewModel);
    Location.Identifier.id.getter();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    sub_100089C4C();
    swift_bridgeObjectRelease();
    return _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v15);
  }
  return result;
}

uint64_t sub_10021FEE4()
{
  uint64_t v0 = type metadata accessor for LocationContentView(0);
  sub_1001627C0(v0);
  uint64_t v1 = sub_10018521C();

  return sub_10002ABF8(v1, v2, v3);
}

uint64_t sub_10021FF34(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v3 = type metadata accessor for LocationContentView(0);
  sub_1001627C0(v3);
  uint64_t v4 = sub_10018521C();

  return a3(v4);
}

void *sub_10021FF98()
{
  return sub_100056C40();
}

uint64_t sub_10021FFD0(uint64_t a1, uint64_t a2)
{
  return sub_10021FF34(a1, a2, (uint64_t (*)(uint64_t))sub_100019EB4);
}

uint64_t sub_10021FFE8(uint64_t a1)
{
  return sub_100097720(a1, &qword_100E65FA8, qword_100E65EC0, (uint64_t (*)(void))&type metadata accessor for ForegroundEffect);
}

uint64_t sub_100220010()
{
  return sub_100052D10();
}

ValueMetadata *type metadata accessor for DailyForecastFilter.DailyForecastFilterConfiguration()
{
  return &type metadata for DailyForecastFilter.DailyForecastFilterConfiguration;
}

void sub_100220038()
{
  sub_1000159D8();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_1002200D8()
{
  uint64_t result = type metadata accessor for MainAction();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for AirplaneModeMonitor()
{
  return self;
}

uint64_t sub_1002201AC()
{
  return sub_100011350(*(void *)(v0 + 16), *(const __SCPreferences **)(v0 + 24));
}

void sub_1002201BC()
{
  sub_1000297E0(319, (unint64_t *)&qword_100E6EAC8, (void (*)(uint64_t))&type metadata accessor for Location.Identifier);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_10022026C()
{
  sub_1000297E0(319, (unint64_t *)&unk_100E6EB60, (void (*)(uint64_t))type metadata accessor for LocationViewerActiveLocationState);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t type metadata accessor for WindowFocusManager()
{
  return self;
}

void sub_100220350()
{
}

Swift::Void __swiftcall WindowFocusManager.didBecomeFocused()()
{
  sub_100086C50(v0);
}

unint64_t sub_10022037C()
{
  unint64_t result = qword_100E90B88;
  if (!qword_100E90B88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E90B88);
  }
  return result;
}

uint64_t sub_1002203C8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1002203E4@<X0>(uint64_t (*a1)(void)@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t v5 = a1(0);
  uint64_t result = swift_allocObject();
  a3[3] = v5;
  a3[4] = a2;
  *a3 = result;
  return result;
}

uint64_t sub_100220434@<X0>(uint64_t *a1@<X8>)
{
  return sub_1002203E4((uint64_t (*)(void))type metadata accessor for MoonDetailViewStateReducer, (uint64_t)&off_100E2B630, a1);
}

uint64_t sub_100220454()
{
  return sub_100052824();
}

uint64_t sub_10022046C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t type metadata accessor for LocationInteractor()
{
  return self;
}

uint64_t sub_1002204AC()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_1002204C8()
{
  sub_10000F5F8();
  if (v0 <= 0x3F)
  {
    type metadata accessor for LocationFooterViewModel();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_1002205A4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1002205C0()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  unint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_1002206B4()
{
  uint64_t result = type metadata accessor for FeelsLikeComponentPreprocessedDataModel();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void *sub_100220740(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  a5[5] = type metadata accessor for LocationAuthorizationReducer();
  a5[6] = &off_100E166B8;
  a5[2] = a1;
  a5[10] = type metadata accessor for NetworkReducer();
  a5[11] = &off_100E302A0;
  a5[7] = a2;
  a5[15] = type metadata accessor for ActivityActionReducer();
  a5[16] = &off_100E2BA88;
  a5[12] = a3;
  a5[20] = type metadata accessor for LinkReducer();
  a5[21] = &off_100E116E0;
  a5[17] = a4;
  return a5;
}

uint64_t sub_1002207E8()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_100220804()
{
  sub_100046CB8(319, (unint64_t *)&unk_100E82E60, (void (*)(uint64_t))type metadata accessor for LocationComponentCornerRadiusConfiguration);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_1002208D0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1002208EC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for AutomationReducer();
  uint64_t result = swift_allocObject();
  a1[3] = v2;
  a1[4] = (uint64_t)&off_100E28520;
  *a1 = result;
  return result;
}

uint64_t sub_100220934()
{
  return sub_100054648();
}

ValueMetadata *type metadata accessor for AppStateTransition()
{
  return &type metadata for AppStateTransition;
}

uint64_t sub_10022095C()
{
  uint64_t result = type metadata accessor for WindComponentViewModel();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

double sub_1002209F4()
{
  if (qword_100E62748 != -1) {
    swift_once();
  }
  double result = *(double *)&xmmword_100F51D48;
  static SafeAreaInsetsKey.defaultValue = xmmword_100F51D48;
  *(_OWORD *)&qword_100F50BE0 = *(_OWORD *)&qword_100F51D58;
  return result;
}

uint64_t sub_100220A50(unsigned __int8 *a1, char *a2)
{
  return sub_1000C823C(*a1, *a2);
}

ValueMetadata *type metadata accessor for LocationViewModel.ContentStatus()
{
  return &type metadata for LocationViewModel.ContentStatus;
}

uint64_t sub_100220A6C()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_100220AB0()
{
  sub_10002FCFC(319, (unint64_t *)&qword_100E63C80, (void (*)(uint64_t))type metadata accessor for DisplayMetrics);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_100220B88(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for CurrentWeather();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(a1, v2);
}

void sub_100220BEC()
{
  type metadata accessor for DisplayMetrics();
  if (v0 <= 0x3F)
  {
    sub_1002308A0();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_100220CD0(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_100220D28(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_100220D80(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for EnvironmentAction();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100220DC4()
{
  return sub_100220D80(&qword_100E89B20);
}

void sub_100220DF8()
{
  uint64_t v0 = type metadata accessor for DisplayMetrics();
  sub_100097814(v0, qword_100F50B68);
  uint64_t v1 = sub_1002102B0(v0, (uint64_t)qword_100F50B68);
  sub_1000EAD40(v1);
}

uint64_t type metadata accessor for DiagnosticManager()
{
  return self;
}

uint64_t sub_100220E68()
{
  return sub_10002B60C();
}

uint64_t sub_100220E80()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100220E9C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100220EB8()
{
  return sub_100220EC0();
}

uint64_t sub_100220EC0()
{
  return State.wrappedValue.setter();
}

uint64_t sub_100220F10(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for HistoricalComparisons();
  uint64_t result = _s7Weather24LocationCompositionStateOwet_0(a1, 1, v2);
  if (!result)
  {
    uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
    return v4(a1, v2);
  }
  return result;
}

void sub_100220F98()
{
  sub_100016BEC();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_100221024()
{
  return sub_100008700();
}

uint64_t sub_10022103C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_allocateGenericValueMetadata(a1, a2, a3, 88);
}

uint64_t sub_100221044(uint64_t a1, void *a2)
{
  sub_1001B1E64(a2, a2[3]);
  type metadata accessor for SessionEventsAndDataCoordinator();
  dispatch thunk of ResolverType.resolve<A>(_:)();

  return swift_release();
}

uint64_t sub_1002210A4@<X0>(uint64_t *a1@<X8>)
{
  a1[3] = type metadata accessor for GCDSerialDispatchQueueFactory();
  a1[4] = (uint64_t)&off_100E2C068;
  uint64_t v2 = sub_100170694(a1);
  uint64_t result = static DispatchQoS.utility.getter();
  *uint64_t v2 = 0xD000000000000011;
  v2[1] = 0x8000000100C967B0;
  return result;
}

uint64_t sub_100221110(uint64_t a1)
{
  return sub_10009FB00(a1);
}

void *sub_100221128(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  a5[5] = type metadata accessor for ListViewStateReducer();
  a5[6] = &off_100E36700;
  a5[2] = a1;
  a5[10] = type metadata accessor for LocationViewerViewStateReducer();
  a5[11] = &off_100E26248;
  a5[7] = a2;
  a5[15] = type metadata accessor for VFXTestViewStateReducer();
  a5[16] = &off_100E178C0;
  a5[12] = a3;
  a5[20] = type metadata accessor for SearchViewStateReducer();
  a5[21] = &off_100E2E1E8;
  a5[17] = a4;
  return a5;
}

ValueMetadata *type metadata accessor for TipPriorityQueue()
{
  return &type metadata for TipPriorityQueue;
}

void sub_1002211E0()
{
  sub_10000AFF4();
  if (v0 <= 0x3F) {
    swift_initClassMetadata2();
  }
}

uint64_t sub_1002212B4()
{
  return sub_100045774();
}

unint64_t sub_1002212D8()
{
  unint64_t result = qword_100EA62E0;
  if (!qword_100EA62E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA62E0);
  }
  return result;
}

unint64_t sub_100221324()
{
  unint64_t result = qword_100EA62D8;
  if (!qword_100EA62D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA62D8);
  }
  return result;
}

uint64_t sub_100221378()
{
  return sub_10000C850();
}

uint64_t sub_100221390(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100AB50F4);
}

void sub_1002213A4()
{
  if (!qword_100E70628)
  {
    type metadata accessor for OpenL2Descriptor(255);
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100E70628);
    }
  }
}

unint64_t sub_1002213FC()
{
  unint64_t result = qword_100E73198;
  if (!qword_100E73198)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E73198);
  }
  return result;
}

uint64_t sub_100221448@<X0>(uint64_t *a1@<X8>)
{
  return sub_10001667C(a1);
}

void type metadata accessor for MultitaskingMode()
{
}

uint64_t sub_100221460(void *a1)
{
  return sub_100059E54(a1, &qword_100E8DE50, (void (*)(void))type metadata accessor for CountryCodeConfigurationMonitor, (void (*)(unsigned char *, uint64_t))sub_1001262E4);
}

uint64_t sub_100221494(void *a1)
{
  return sub_10003AB9C(a1, &qword_100EA7DD0, (void (*)(void))type metadata accessor for LocationOfInterestMonitor);
}

uint64_t sub_1002214B4(void *a1)
{
  return sub_10003AB9C(a1, &qword_100E647D8, (void (*)(void))type metadata accessor for SidebarVisibilityMonitor);
}

uint64_t sub_1002214D4(void *a1)
{
  return sub_100059E54(a1, &qword_100E6FC60, (void (*)(void))type metadata accessor for AppConfigurationMonitor, (void (*)(unsigned char *, uint64_t))sub_1001262E4);
}

uint64_t sub_100221508(void *a1)
{
  return sub_100059E54(a1, &qword_100EB3AD0, (void (*)(void))type metadata accessor for AppLaunchCountMonitor, (void (*)(unsigned char *, uint64_t))sub_1001262E4);
}

uint64_t sub_10022153C@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for StubTimeMonitor();
  uint64_t v2 = swift_allocObject();
  uint64_t result = sub_1000A23E0(&qword_100EB3AB8, (void (*)(uint64_t))type metadata accessor for StubTimeMonitor);
  *a1 = v2;
  a1[1] = result;
  return result;
}

uint64_t sub_1002215AC(void *a1)
{
  return sub_10003AAF0(a1, (void (*)(void))type metadata accessor for SettingsMonitor, (uint64_t (*)())sub_10004C05C);
}

uint64_t sub_1002215D8(void *a1)
{
  return sub_10003AB9C(a1, &qword_100E647D8, (void (*)(void))type metadata accessor for AppStateMonitor);
}

uint64_t sub_1002215F8(void *a1)
{
  return sub_10003AAF0(a1, (void (*)(void))type metadata accessor for LocaleMonitor, (uint64_t (*)())sub_10002DAC8);
}

uint64_t sub_100221624()
{
  type metadata accessor for ReportWeatherMonitor();

  return swift_allocObject();
}

uint64_t sub_100221658(void *a1)
{
  return sub_10003AAF0(a1, (void (*)(void))type metadata accessor for DisplayMetricsMonitor, (uint64_t (*)())sub_10003F1F8);
}

uint64_t sub_100221684()
{
  return sub_1000464FC();
}

uint64_t storeEnumTagSinglePayload for ConditionsChartID(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void sub_1002216D8()
{
  type metadata accessor for MapComponentViewModel();
  if (v0 <= 0x3F)
  {
    sub_1002308A0();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_1002217D4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1002217F0()
{
  uint64_t result = type metadata accessor for LocationViewModel();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for DisplayMetrics();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_100221908()
{
  type metadata accessor for PressureComponentViewModelFactory();

  return swift_allocObject();
}

uint64_t sub_10022193C()
{
  type metadata accessor for WindComponentViewModelFactory();

  return swift_allocObject();
}

uint64_t sub_100221970@<X0>(uint64_t *a1@<X8>)
{
  return sub_100083764((uint64_t (*)(void))type metadata accessor for LocationInputFactory, (uint64_t)&off_100E31808, a1);
}

uint64_t sub_100221990@<X0>(uint64_t *a1@<X8>)
{
  return sub_100083764((uint64_t (*)(void))type metadata accessor for ActiveLocationModelFactory, (uint64_t)&off_100E120B8, a1);
}

uint64_t sub_1002219B0@<X0>(uint64_t *a1@<X8>)
{
  return sub_100083764((uint64_t (*)(void))type metadata accessor for ActiveLocationInputFactory, (uint64_t)&off_100E120C8, a1);
}

uint64_t sub_1002219D0@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1000DAFE0(a1, (uint64_t (*)(void))type metadata accessor for PrecipitationTotalComponentViewModelFactory, (uint64_t)&off_100E2A0B0, a2);
}

uint64_t sub_1002219F0@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1000DAFE0(a1, (uint64_t (*)(void))type metadata accessor for HourlyForecastComponentViewModelFactory, (uint64_t)&off_100E1CB80, a2);
}

uint64_t sub_100221A10@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1000DAFE0(a1, (uint64_t (*)(void))type metadata accessor for DailyForecastComponentViewModelFactory, (uint64_t)&off_100E16D28, a2);
}

uint64_t sub_100221A30@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1000DAFE0(a1, (uint64_t (*)(void))type metadata accessor for VisibilityComponentViewModelFactory, (uint64_t)&off_100E2BA98, a2);
}

uint64_t sub_100221A50@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1000DAFE0(a1, (uint64_t (*)(void))type metadata accessor for FeelsLikeComponentViewModelFactory, (uint64_t)&off_100E35D48, a2);
}

uint64_t sub_100221A70@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1000DAFE0(a1, (uint64_t (*)(void))type metadata accessor for PressureComponentViewModelFactory, (uint64_t)&off_100E39AA0, a2);
}

uint64_t sub_100221A90@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1000DAFE0(a1, (uint64_t (*)(void))type metadata accessor for UVIndexComponentViewModelFactory, (uint64_t)&off_100E2E038, a2);
}

uint64_t sub_100221AB0@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1000DAFE0(a1, (uint64_t (*)(void))type metadata accessor for WindComponentViewModelFactory, (uint64_t)&off_100E278F0, a2);
}

uint64_t sub_100221AD0(uint64_t a1)
{
  return sub_10000E758(a1, (void (*)(void))type metadata accessor for TipCoordinator, sub_1002226FC);
}

uint64_t sub_100221AFC@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1000DAFE0(a1, (uint64_t (*)(void))type metadata accessor for LocationViewModelFactory, (uint64_t)&off_100E32808, a2);
}

uint64_t sub_100221B1C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1000DAFE0(a1, (uint64_t (*)(void))type metadata accessor for LocationViewModelFactory, (uint64_t)&off_100E32818, a2);
}

uint64_t sub_100221B3C()
{
  return sub_1000A8AB0();
}

uint64_t sub_100221B54()
{
  return sub_10002A900();
}

uint64_t sub_100221B6C()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_100221BB0()
{
  unint64_t result = qword_100E7EC80;
  if (!qword_100E7EC80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E7EC80);
  }
  return result;
}

uint64_t type metadata accessor for CompositeReducer()
{
  return sub_100109098();
}

uint64_t sub_100221C18(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ActivityModifier();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100221C7C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ActivityModifier();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100221CE0()
{
  uint64_t result = type metadata accessor for WeatherActivity();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_100221D70()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_100221D8C()
{
  type metadata accessor for ActivityModifier();

  sub_100221DEC();
}

void sub_100221DEC()
{
  id v0 = sub_1000983C8();
  [v0 becomeCurrent];
}

uint64_t sub_100221E3C@<X0>(uint64_t (*a1)(void)@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t v5 = a1(0);
  uint64_t result = swift_allocObject();
  a3[3] = v5;
  a3[4] = a2;
  *a3 = result;
  return result;
}

uint64_t sub_100221E8C@<X0>(uint64_t *a1@<X8>)
{
  return sub_100221E3C((uint64_t (*)(void))type metadata accessor for VFXTestViewStateReducer, (uint64_t)&off_100E178C0, a1);
}

uint64_t sub_100221EAC()
{
  return sub_1000494D4();
}

uint64_t sub_100221EC4()
{
  return sub_100046064();
}

uint64_t sub_100221EDC()
{
  uint64_t result = static Alignment.bottomLeading.getter();
  *(void *)&static TipAlignmentKey.defaultValue = result;
  *((void *)&static TipAlignmentKey.defaultValue + 1) = v1;
  return result;
}

uint64_t sub_100221F00(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100221F48(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_100221F00(&qword_100E73428, a2, (void (*)(uint64_t))type metadata accessor for StubTimeMonitor);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_100221FA4()
{
  return sub_100031DE8();
}

uint64_t type metadata accessor for SettingsMonitor()
{
  uint64_t result = qword_100EA2350;
  if (!qword_100EA2350) {
    return swift_getSingletonMetadata();
  }
  return result;
}

Swift::Void __swiftcall SettingsMonitor.applicationWillEnterForeground()()
{
  sub_1000A6C68();

  sub_1000456BC();
}

void sub_100222030()
{
  if (!qword_100EA47B0)
  {
    type metadata accessor for SearchViewState(255);
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100EA47B0);
    }
  }
}

void sub_100222088()
{
  type metadata accessor for SearchViewState.ViewState(319);
  if (v0 <= 0x3F)
  {
    sub_100011588();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_100222164(char a1, char a2)
{
  if (a1 == 2)
  {
    if (a2 != 2) {
      goto LABEL_8;
    }
  }
  else
  {
    if (a1 != 3)
    {
      if ((a2 & 0xFE) != 2)
      {
        char v2 = ((a1 & 1) == 0) ^ a2;
        return v2 & 1;
      }
      goto LABEL_8;
    }
    if (a2 != 3)
    {
LABEL_8:
      char v2 = 0;
      return v2 & 1;
    }
  }
  char v2 = 1;
  return v2 & 1;
}

uint64_t sub_1002221C0()
{
  uint64_t result = type metadata accessor for LocationPreviewViewAction();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_100222268()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for MiddlewareChain()
{
  return sub_100109098();
}

uint64_t sub_1002222D4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_10003520C(a1, &qword_100E71B40, (uint64_t (*)(void))&type metadata accessor for PrivacySaltProvider, (uint64_t (*)(char *))&PrivacySaltProvider.init(identityService:), (uint64_t)&protocol witness table for PrivacySaltProvider, a2);
}

uint64_t sub_100222310@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_10003520C(a1, &qword_100EA7DE0, (uint64_t (*)(void))&type metadata accessor for PrivacySampler, (uint64_t (*)(char *))&PrivacySampler.init(saltProvider:), (uint64_t)&protocol witness table for PrivacySampler, a2);
}

uint64_t sub_10022234C@<X0>(void *a1@<X8>)
{
  return sub_1002223B8(v1, (uint64_t)&off_100E175B0, a1);
}

uint64_t sub_100222370@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for NewsDataManager();
  uint64_t result = swift_allocObject();
  a1[3] = v2;
  a1[4] = (uint64_t)&off_100E37880;
  *a1 = result;
  return result;
}

uint64_t sub_1002223B8@<X0>(void *a1@<X1>, uint64_t a2@<X2>, void *a3@<X8>)
{
  a3[3] = *a1;
  a3[4] = a2;
  *a3 = a1;
  return swift_retain();
}

uint64_t sub_1002223EC@<X0>(void *a1@<X8>)
{
  return sub_1002223B8(v1, (uint64_t)&off_100E175C0, a1);
}

uint64_t sub_100222410@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for WindowFocusManager();
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = _swiftEmptyArrayStorage;
  a1[3] = v2;
  a1[4] = (uint64_t)&protocol witness table for WindowFocusManager;
  *a1 = result;
  return result;
}

uint64_t sub_100222464@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for StubListViewTipManager();
  uint64_t result = swift_allocObject();
  a1[3] = v2;
  a1[4] = (uint64_t)&off_100E093F0;
  *a1 = result;
  return result;
}

uint64_t sub_1002224AC@<X0>(void *a1@<X8>)
{
  return sub_1002224B4(v1, a1);
}

uint64_t sub_1002224B4@<X0>(void *a1@<X1>, void *a2@<X8>)
{
  a2[3] = *a1;
  a2[4] = sub_10021E3AC();
  *a2 = a1;

  return swift_retain();
}

uint64_t sub_100222520(uint64_t a1)
{
  return sub_1000AB3B0(a1);
}

uint64_t sub_100222538(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for LocationsAction();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1002225A0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1002225BC(uint64_t a1)
{
  return sub_100079930(a1, (void (*)(void))type metadata accessor for HighLowModifier, type metadata accessor for HighLowModifier);
}

uint64_t sub_1002225E8(uint64_t a1)
{
  return sub_10008C6D0(a1, (void (*)(void))type metadata accessor for HighLowModifier, (uint64_t (*)(uint64_t))sub_10000B4F4);
}

uint64_t sub_100222614()
{
  return sub_10008A1DC();
}

double sub_10022262C()
{
  if (qword_100E629A8 != -1) {
    swift_once();
  }
  double result = *(double *)&qword_100F52238;
  qword_100F50B80 = 0;
  *(void *)algn_100F50B88 = 0x4062000000000000;
  qword_100F50B90 = 0;
  qword_100F50B98 = 0;
  byte_100F50BA0 = 0;
  qword_100F50BA8 = 0x4030000000000000;
  word_100F50BB0 = 768;
  qword_100F50BB8 = 0x4034000000000000;
  qword_100F50BC0 = qword_100F52238;
  return result;
}

void type metadata accessor for ComponentOrigin()
{
}

Swift::Void __swiftcall AppStateMonitor.applicationWillEnterForeground()()
{
}

uint64_t sub_1002226C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100540664);
}

uint64_t type metadata accessor for ActualListInput(uint64_t a1)
{
  return sub_10018678C(a1, (uint64_t *)&unk_100E7EF40);
}

uint64_t sub_1002226FC()
{
  *(void *)(v0 + 48) = 0;
  *(void *)(v0 + 24) = 0;
  *(void *)(v0 + 32) = 0;
  *(void *)(v0 + 16) = 0;
  *(_WORD *)(v0 + 40) = 0;
  ObservationRegistrar.init()();
  return v0;
}

uint64_t sub_100222734(uint64_t a1)
{
  *(void *)(v1 + 48) = a1;
  swift_bridgeObjectRelease();
  return sub_1002227B4();
}

uint64_t sub_10022275C()
{
  return sub_100222778(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_100222778(uint64_t a1, uint64_t a2)
{
  return sub_100222734(a2);
}

uint64_t sub_1002227B4()
{
  uint64_t result = sub_10003CF6C();
  if (result)
  {
    uint64_t v1 = *(void *)(result + 16);
    uint64_t result = swift_bridgeObjectRelease();
    if (v1)
    {
      uint64_t result = sub_1001357F8();
      if (result)
      {
        return sub_10088E184();
      }
    }
  }
  return result;
}

uint64_t sub_100222808()
{
  return ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
}

void sub_1002228C4()
{
  sub_100011588();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t type metadata accessor for SearchLocation()
{
  uint64_t result = qword_100EA41A0;
  if (!qword_100EA41A0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1002229B8@<X0>(uint64_t (*a1)(void)@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t v5 = a1(0);
  uint64_t result = swift_allocObject();
  a3[3] = v5;
  a3[4] = a2;
  *a3 = result;
  return result;
}

uint64_t sub_100222A08@<X0>(uint64_t *a1@<X8>)
{
  return sub_1002229B8((uint64_t (*)(void))type metadata accessor for SearchViewStateReducer, (uint64_t)&off_100E2E1E8, a1);
}

uint64_t sub_100222A28()
{
  return sub_10004967C();
}

uint64_t sub_100222A40()
{
  uint64_t result = type metadata accessor for LocationsState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void sub_100222AE4()
{
  if (!qword_100EA25F8)
  {
    type metadata accessor for ModalViewState.MapViewModal(255);
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100EA25F8);
    }
  }
}

uint64_t sub_100222B3C(uint64_t a1)
{
  uint64_t result = type metadata accessor for LocationPreviewViewState(319);
  if (v3 <= 0x3F)
  {
    uint64_t v4 = *(void *)(result - 8);
    swift_initEnumMetadataSingleCase();
    uint64_t result = 0;
    *(_DWORD *)(*(void *)(a1 - 8) + 84) = *(_DWORD *)(v4 + 84);
  }
  return result;
}

void sub_100222BE0()
{
  sub_10000DA88();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void *sub_100222C90(unsigned char *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, long long *a12)
{
  uint64_t v26 = a7;
  uint64_t v27 = a8;
  uint64_t v24 = a5;
  uint64_t v25 = a6;
  uint64_t v29 = type metadata accessor for NetworkActivityManager();
  uint64_t v30 = &off_100E175C0;
  v28[0] = a11;
  type metadata accessor for LocationModule();
  uint64_t v16 = (void *)swift_allocObject();
  uint64_t v17 = sub_1000DF0C4((uint64_t)v28, v29);
  __chkstk_darwin(v17);
  uint64_t v19 = (uint64_t *)((char *)&v23 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v20 + 16))(v19);
  uint64_t v21 = sub_10005F578(a1, a2, a3, a4, v24, v25, v26, v27, a9, a10, *v19, a12, v16);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v28);
  return v21;
}

void sub_100222E00()
{
}

uint64_t sub_100222E0C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100222E28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1005CEDE4(a1, a2, a3, a4, (uint64_t (*)(void, void, double, double, double, double))sub_100222E40);
}

uint64_t sub_100222E40(int a1, int a2, double a3, double a4, double a5, double a6)
{
  BOOL v6 = a3 == a5;
  if (a4 != a6) {
    BOOL v6 = 0;
  }
  return v6 & (a1 ^ a2 ^ 1u);
}

uint64_t sub_100222E60(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10017DF08(&qword_100E66400);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void sub_100222EC8()
{
  if (!qword_100E7FAA0)
  {
    type metadata accessor for DisplayMetrics();
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100E7FAA0);
    }
  }
}

uint64_t type metadata accessor for DebugPresenter()
{
  return self;
}

uint64_t sub_100222F48()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100222F64()
{
  return sub_1000419E4(*(void *)(v0 + 16));
}

uint64_t sub_100222F6C()
{
  return sub_10003578C();
}

uint64_t type metadata accessor for AnyStateReader()
{
  return sub_100109098();
}

uint64_t sub_100222F9C()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for SceneDelegate()
{
  return self;
}

uint64_t sub_100223044(uint64_t a1, void (*a2)(uint64_t, uint64_t))
{
  sub_10003D10C(&OBJC_IVAR____TtC7Weather13SceneDelegate____lazy_storage___stateManager, &qword_100E74C00, (uint64_t (*)(unsigned char *, uint64_t))sub_1001262E4, (uint64_t *)&unk_100E74C08, (uint64_t)v6);
  uint64_t v3 = v7;
  uint64_t v4 = v8;
  sub_1001B1E64(v6, v7);
  a2(v3, v4);
  return _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v6);
}

uint64_t sub_1002230D4()
{
  return sub_100008700();
}

uint64_t sub_1002230EC()
{
  uint64_t v0 = type metadata accessor for NewsDataModel();
  sub_100097814(v0, qword_100F52468);
  *(void *)sub_1002102B0(v0, (uint64_t)qword_100F52468) = _swiftEmptyArrayStorage;

  return swift_storeEnumTagMultiPayload();
}

ValueMetadata *type metadata accessor for NetworkAction()
{
  return &type metadata for NetworkAction;
}

unint64_t sub_100223164()
{
  unint64_t result = qword_100E76050;
  if (!qword_100E76050)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E76050);
  }
  return result;
}

uint64_t sub_1002231B0@<X0>(uint64_t *a1@<X8>)
{
  return sub_100022DA4(*v1 | (unsigned __int16)(v1[1] << 8), a1);
}

uint64_t sub_1002231CC(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  sub_100162F0C();
  v3();
  return a1;
}

uint64_t sub_100223220(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MoonComponent();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100223284()
{
  uint64_t result = type metadata accessor for WeatherData(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_100223310()
{
  sub_10018C470();
  uint64_t v1 = type metadata accessor for LocationModel();
  sub_100164920(v1);

  return sub_100008678(v0);
}

uint64_t sub_100223394(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100A1A8D4);
}

void sub_1002233A8()
{
  sub_1002234DC();
  if (v0 <= 0x3F)
  {
    type metadata accessor for WeatherMapPresentationState(319);
    if (v1 <= 0x3F)
    {
      type metadata accessor for DisplayMetrics();
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

void sub_1002234DC()
{
  if (!qword_100EA9B80)
  {
    type metadata accessor for MainViewModel.ModalModule(255);
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100EA9B80);
    }
  }
}

uint64_t sub_100223534()
{
  uint64_t result = type metadata accessor for MainViewModel.ModalModule.LocationDetailModule(319);
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for LocaleMonitor()
{
  uint64_t result = qword_100E80D18;
  if (!qword_100E80D18) {
    return swift_getSingletonMetadata();
  }
  return result;
}

Swift::Void __swiftcall LocaleMonitor.applicationWillEnterForeground()()
{
  sub_1000F2230();

  sub_10001DAD8();
}

uint64_t sub_100223640()
{
  sub_100008810();

  return swift_deallocClassInstance();
}

uint64_t sub_100223674(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1007F9FC4);
}

uint64_t type metadata accessor for ListViewModel()
{
  uint64_t result = qword_100E97DC0;
  if (!qword_100E97DC0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1002236D0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  sub_10020D948(a1, (uint64_t)v6);
  uint64_t v3 = type metadata accessor for DebugPresenter();
  uint64_t v4 = swift_allocObject();
  uint64_t result = sub_1001262E4(v6, v4 + 16);
  a2[3] = v3;
  a2[4] = (uint64_t)&off_100E1FB20;
  *a2 = v4;
  return result;
}

uint64_t sub_100223740()
{
  return sub_100077F94();
}

uint64_t type metadata accessor for AnyDispatcher()
{
  return sub_100109098();
}

unint64_t sub_10022377C()
{
  unint64_t result = qword_100E7EC88;
  if (!qword_100E7EC88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E7EC88);
  }
  return result;
}

double sub_1002237CC()
{
  if (qword_100E62748 != -1) {
    swift_once();
  }
  xmmword_100F51400 = 0uLL;
  double result = *(double *)&xmmword_100F51D48;
  xmmword_100F51410 = xmmword_100F51D48;
  xmmword_100F51420 = *(_OWORD *)&qword_100F51D58;
  return result;
}

ValueMetadata *type metadata accessor for NetworkState()
{
  return &type metadata for NetworkState;
}

unint64_t sub_10022383C()
{
  unint64_t result = qword_100E95368;
  if (!qword_100E95368)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E95368);
  }
  return result;
}

uint64_t sub_100223888@<X0>(uint64_t *a1@<X8>)
{
  return sub_1000221DC(*v1, a1);
}

ValueMetadata *type metadata accessor for Neighborhood()
{
  return &type metadata for Neighborhood;
}

uint64_t sub_1002238A4(uint64_t a1)
{
  return sub_1000B1604(a1, v1);
}

void sub_1002238AC(void *a1@<X8>)
{
  *a1 = sub_1007FCE94;
  a1[1] = 0;
}

uint64_t sub_1002238C4@<X0>(uint64_t *a1@<X8>)
{
  return sub_1000486D8((uint64_t (*)(void))type metadata accessor for ActiveLocationModelFactory, (uint64_t)&off_100E120B8, a1);
}

uint64_t sub_1002238E4@<X0>(uint64_t *a1@<X8>)
{
  return sub_1000486D8((uint64_t (*)(void))type metadata accessor for ActiveLocationInputFactory, (uint64_t)&off_100E120C8, a1);
}

uint64_t sub_100223904@<X0>(uint64_t *a1@<X8>)
{
  return sub_1000486D8((uint64_t (*)(void))type metadata accessor for NotificationsOptInReducer, (uint64_t)&off_100E17628, a1);
}

uint64_t sub_100223924(void *a1)
{
  return sub_10003D484(a1, &qword_100E7CD20, (void (*)(void))type metadata accessor for LocationAuthorizationReducer, (void (*)(unsigned char *, uint64_t))sub_1001262E4);
}

uint64_t sub_100223958@<X0>(uint64_t *a1@<X8>)
{
  return sub_1000486D8((uint64_t (*)(void))type metadata accessor for AppConfigurationReducer, (uint64_t)&off_100E29EC0, a1);
}

uint64_t sub_100223978@<X0>(uint64_t *a1@<X8>)
{
  return sub_1000486D8((uint64_t (*)(void))type metadata accessor for ActivityActionReducer, (uint64_t)&off_100E2BA88, a1);
}

uint64_t sub_100223998@<X0>(uint64_t *a1@<X8>)
{
  return sub_1000486D8((uint64_t (*)(void))type metadata accessor for NotificationsReducer, (uint64_t)&off_100E13B40, a1);
}

uint64_t sub_1002239B8@<X0>(uint64_t *a1@<X8>)
{
  return sub_1000486D8((uint64_t (*)(void))type metadata accessor for AppLifecycleReducer, (uint64_t)&off_100E35A60, a1);
}

uint64_t sub_1002239D8(void *a1)
{
  return sub_10000F374(a1, (void (*)(void))type metadata accessor for ShortcutItemUpdater, (void (*)(uint64_t))type metadata accessor for ShortcutItemMiddleware);
}

uint64_t sub_100223A04()
{
  type metadata accessor for UnitManagerMiddleware();

  return swift_allocObject();
}

void sub_100223A38(void *a1@<X8>)
{
  *a1 = 7200;
}

uint64_t sub_100223A44@<X0>(uint64_t *a1@<X8>)
{
  return sub_1000486D8((uint64_t (*)(void))type metadata accessor for NetworkReducer, (uint64_t)&off_100E302A0, a1);
}

uint64_t sub_100223A64@<X0>(uint64_t *a1@<X8>)
{
  return sub_1000486D8((uint64_t (*)(void))type metadata accessor for DebugReducer, (uint64_t)&off_100E13358, a1);
}

uint64_t sub_100223A84@<X0>(uint64_t *a1@<X8>)
{
  return sub_1000486D8((uint64_t (*)(void))type metadata accessor for TimeReducer, (uint64_t)&off_100E27EC0, a1);
}

uint64_t sub_100223AA4@<X0>(uint64_t *a1@<X8>)
{
  return sub_1000486D8((uint64_t (*)(void))type metadata accessor for LinkReducer, (uint64_t)&off_100E116E0, a1);
}

uint64_t sub_100223AC4@<X0>(uint64_t *a1@<X8>)
{
  return sub_1000486D8((uint64_t (*)(void))type metadata accessor for MainViewModelFactory, (uint64_t)&off_100E27740, a1);
}

uint64_t sub_100223AE4(void *a1)
{
  return sub_10003D484(a1, &qword_100E98108, (void (*)(void))type metadata accessor for WeatherMapOverlayDataStoreObserver, (void (*)(unsigned char *, uint64_t))sub_1001262E4);
}

uint64_t sub_100223B18@<X0>(uint64_t *a1@<X8>)
{
  return sub_1000486D8((uint64_t (*)(void))type metadata accessor for WeatherDataReducer, (uint64_t)&off_100E35EB0, a1);
}

uint64_t sub_100223B38@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_10003A2C8(a1, &qword_100E98140, (uint64_t (*)(void))&type metadata accessor for WDSAuthenticatorFactory, (uint64_t (*)(char *))&WDSAuthenticatorFactory.init(clientConfigurationProvider:), (uint64_t)&protocol witness table for WDSAuthenticatorFactory, a2);
}

uint64_t sub_100223B78@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1001B1E64(a1, a1[3]);
  type metadata accessor for WeatherDataUpdater();
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (result)
  {
    a2[3] = (uint64_t)&type metadata for LoadStatisticsOnDemandStoreObserver;
    a2[4] = (uint64_t)&off_100E15388;
    *a2 = result;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100223BE8()
{
  if (qword_100E62980 != -1) {
    swift_once();
  }

  return swift_retain();
}

uint64_t sub_100223C44@<X0>(uint64_t *a1@<X8>)
{
  return sub_1000486D8((uint64_t (*)(void))type metadata accessor for EmptySidebarWidthStorage, (uint64_t)&off_100E39B40, a1);
}

uint64_t sub_100223C64()
{
  return sub_100025288(0, 0, 0, 0);
}

uint64_t sub_100223CB0@<X0>(void *a1@<X0>, uint64_t (**a2)(uint64_t a1)@<X8>)
{
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E97FE8);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (result)
  {
    *a2 = sub_1001AC6A8;
    a2[1] = (uint64_t (*)(uint64_t))result;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100223D20@<X0>(uint64_t *a1@<X8>)
{
  return sub_100008610((uint64_t (*)(void))&type metadata accessor for ProductRequirementsFactory, (uint64_t (*)(void))&ProductRequirementsFactory.init(), (uint64_t)&protocol witness table for ProductRequirementsFactory, a1);
}

uint64_t sub_100223D54()
{
  return sub_1000B5BC0();
}

uint64_t sub_100223D78()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100223D94()
{
  return sub_100078DD8();
}

uint64_t sub_100223D9C@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  sub_1001B1E64(a1, a1[3]);
  uint64_t v5 = type metadata accessor for ListViewModelFactory();
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (result)
  {
    a3[3] = v5;
    a3[4] = a2;
    *a3 = result;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100223E0C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_100223D9C(a1, (uint64_t)&off_100E1D548, a2);
}

uint64_t sub_100223E18()
{
  return sub_100064788();
}

uint64_t sub_100223E30@<X0>(uint64_t a1@<X8>)
{
  return sub_100027180(*(void *)v1, *(unsigned char *)(v1 + 8), a1);
}

uint64_t sub_100223E3C()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_100223E58()
{
  qword_100F52238 = 0x4069000000000000;
}

void type metadata accessor for GridGeometry.SizingBehavior()
{
}

void type metadata accessor for GridGeometry.SizingBehavior.Breakpoints()
{
}

void type metadata accessor for GridGeometry.MapPlacement()
{
}

uint64_t sub_100223E90@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for DemoPresetProvider();
  uint64_t result = swift_allocObject();
  a1[3] = v2;
  a1[4] = (uint64_t)&off_100E363F0;
  *a1 = result;
  return result;
}

uint64_t sub_100223ED8()
{
  return sub_100059A58();
}

uint64_t type metadata accessor for CrashTracker()
{
  return self;
}

uint64_t sub_100223F14()
{
  type metadata accessor for CrashTracker();
  uint64_t result = swift_allocObject();
  *(unsigned char *)(result + 16) = 0;
  qword_100F51388 = result;
  return result;
}

ValueMetadata *type metadata accessor for AveragesKind()
{
  return &type metadata for AveragesKind;
}

uint64_t sub_100223F54()
{
  sub_100127C8C();
  uint64_t v0 = type metadata accessor for LocationModel();
  sub_1001627C0(v0);
  uint64_t v1 = sub_10017238C();

  return sub_10000AAFC(v1);
}

uint64_t type metadata accessor for TimeManager()
{
  return self;
}

void sub_100223FB8()
{
}

uint64_t sub_100223FC4()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_100223FE0()
{
  sub_10002FD50(319, (unint64_t *)&qword_100E8D848, (uint64_t (*)(uint64_t))&type metadata accessor for Location.Identifier, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Binding);
  if (v0 <= 0x3F)
  {
    sub_1002308A0();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_1002240EC()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_100224108()
{
  sub_10000AFF4();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t type metadata accessor for NewsChannel()
{
  uint64_t result = qword_100E962D8;
  if (!qword_100E962D8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

{
  return type metadata accessor for NewsChannel();
}

void *sub_1002241E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *a20)
{
  a20[5] = type metadata accessor for AutomationReducer();
  a20[6] = &off_100E28520;
  a20[2] = a1;
  a20[10] = type metadata accessor for AppLifecycleReducer();
  a20[11] = &off_100E35A60;
  a20[7] = a2;
  a20[15] = type metadata accessor for AppConfigurationReducer();
  a20[16] = &off_100E29EC0;
  a20[12] = a3;
  a20[20] = type metadata accessor for EnvironmentReducer();
  a20[21] = &off_100E2BEC0;
  a20[17] = a4;
  a20[25] = type metadata accessor for LocationsReducer();
  a20[26] = &off_100E28918;
  a20[22] = a5;
  a20[30] = type metadata accessor for PerformanceTestReducer();
  a20[31] = &off_100E2BC10;
  a20[27] = a11;
  a20[60] = type metadata accessor for DebugReducer();
  a20[61] = &off_100E13358;
  a20[57] = a12;
  a20[65] = type metadata accessor for NotificationsReducer();
  a20[66] = &off_100E13B40;
  a20[62] = a13;
  a20[70] = type metadata accessor for NotificationsOptInReducer();
  a20[71] = &off_100E17628;
  a20[67] = a14;
  a20[75] = type metadata accessor for ConditionDetailViewStateReducer();
  a20[76] = &off_100E383E8;
  a20[72] = a15;
  a20[80] = type metadata accessor for SunriseSunsetDetailViewStateReducer();
  a20[81] = &off_100E2BA68;
  a20[77] = a16;
  a20[85] = type metadata accessor for MoonDetailViewStateReducer();
  a20[86] = &off_100E2B630;
  a20[82] = a17;
  a20[90] = type metadata accessor for AveragesDetailViewStateReducer();
  a20[91] = &off_100E31A58;
  a20[87] = a18;
  a20[95] = type metadata accessor for UnitsConfigurationViewStateReducer();
  a20[96] = &off_100E36530;
  a20[92] = a19;
  a20[35] = type metadata accessor for TimeReducer();
  a20[36] = &off_100E27EC0;
  a20[32] = a6;
  a20[40] = type metadata accessor for ViewStateReducer();
  a20[41] = &off_100E1D070;
  a20[37] = a7;
  a20[45] = type metadata accessor for ModalViewStateReducer();
  a20[46] = &off_100E35ED8;
  a20[42] = a8;
  a20[50] = type metadata accessor for LocationViewStateReducer();
  a20[51] = &off_100E0D278;
  a20[47] = a9;
  a20[55] = type metadata accessor for WeatherDataReducer();
  a20[56] = &off_100E35EB0;
  a20[52] = a10;
  return a20;
}

double sub_1002244C0()
{
  qword_100F513B8 = 0;
  double result = 0.0;
  xmmword_100F51398 = 0u;
  unk_100F513A8 = 0u;
  return result;
}

uint64_t sub_10022458C()
{
  sub_1000A02F4(&OBJC_IVAR____TtC7Weather11AppDelegate____lazy_storage___debugPresenter, &qword_100E6F448, (uint64_t (*)(unsigned char *, uint64_t))sub_1001262E4, (uint64_t *)&unk_100E6F450, (uint64_t)v1);
  sub_1001B1E64(v1, v1[3]);
  sub_10004A6E4();
  return _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v1);
}

uint64_t sub_100224648()
{
  sub_1000A02F4(&OBJC_IVAR____TtC7Weather11AppDelegate____lazy_storage___windowFocusManager, &qword_100E6F438, (uint64_t (*)(unsigned char *, uint64_t))sub_1001262E4, &qword_100E6F440, (uint64_t)v3);
  sub_1001B1E64(v3, v3[3]);
  uint64_t v0 = sub_10017FB00();
  v1(v0);
  return _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v3);
}

uint64_t sub_100224704(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t ObjectType = swift_getObjectType();

  return Configurable.setting<A>(_:defaultValue:)(a1, a2, ObjectType, a6);
}

unint64_t sub_10022476C()
{
  unint64_t result = qword_100E7EC98;
  if (!qword_100E7EC98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E7EC98);
  }
  return result;
}

uint64_t sub_1002247BC()
{
  uint64_t result = type metadata accessor for ListViewAction();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for LocationViewerViewAction();
    if (v2 <= 0x3F)
    {
      uint64_t result = type metadata accessor for SearchViewAction();
      if (v3 <= 0x3F)
      {
        uint64_t result = type metadata accessor for InteractiveMapViewAction();
        if (v4 <= 0x3F)
        {
          uint64_t result = type metadata accessor for DisplayMetrics();
          if (v5 <= 0x3F)
          {
            swift_initEnumMetadataMultiPayload();
            return 0;
          }
        }
      }
    }
  }
  return result;
}

unint64_t sub_100224944()
{
  unint64_t result = qword_100E7ECA0;
  if (!qword_100E7ECA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E7ECA0);
  }
  return result;
}

unint64_t sub_100224994()
{
  unint64_t result = qword_100E961D8;
  if (!qword_100E961D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E961D8);
  }
  return result;
}

const char *sub_1002249E0()
{
  return "uip_fluid_transitions";
}

const char *sub_1002249F4()
{
  return "UIKit";
}

uint64_t sub_100224A10()
{
  return sub_10003643C(&qword_100E9C3C0);
}

uint64_t sub_100224A1C()
{
  return sub_10003643C(&qword_100E9C340);
}

uint64_t sub_100224A28()
{
  return sub_10003643C(&qword_100E9C3A8);
}

uint64_t sub_100224A34()
{
  return sub_10010B610(&qword_100E7F4F0);
}

uint64_t sub_100224A68()
{
  return sub_1007A3720((void (*)(void))sub_100017E84);
}

uint64_t _s5DemosO8Fall2024CMa(uint64_t a1)
{
  return sub_10018678C(a1, (uint64_t *)&unk_100E94838);
}

uint64_t sub_100224AA0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for WeatherActivity();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

id WeatherIntent.init()()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for WeatherIntent();
  return [super init];
}

unint64_t sub_100224B5C()
{
  unint64_t result = qword_100E8F008;
  if (!qword_100E8F008)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8F008);
  }
  return result;
}

uint64_t sub_100224BA8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100224BC4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for WeatherData(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_100224C28()
{
  if (!qword_100E75238)
  {
    type metadata accessor for WeatherData(255);
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100E75238);
    }
  }
}

uint64_t sub_100224C80@<X0>(uint64_t *a1@<X8>)
{
  objc_super v2 = (uint64_t *)sub_100224CC8();
  uint64_t v4 = *v2;
  uint64_t v3 = v2[1];
  uint64_t v5 = v2[2];
  uint64_t v6 = v2[3];
  *a1 = *v2;
  a1[1] = v3;
  a1[2] = v5;
  a1[3] = v6;

  return sub_100147E1C(v4, v3, v5, v6);
}

void *sub_100224CC8()
{
  return &unk_100EB1B18;
}

uint64_t sub_100224CD4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  memcpy(__dst, v2, sizeof(__dst));
  return sub_100042A50(a1, a2);
}

uint64_t sub_100224D28()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100224D44()
{
  uint64_t result = type metadata accessor for WeatherConditionBackgroundTimeData();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void sub_100224DD0()
{
  sub_100227458();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_100224E64(uint64_t a1@<X8>)
{
  type metadata accessor for AppDelegate();
  UIApplicationDelegateAdaptor.init(_:)();
  objc_super v2 = (void *)(a1 + *(int *)(type metadata accessor for WeatherApp() + 20));
  *objc_super v2 = 0xD000000000000018;
  v2[1] = 0x8000000100CB4750;

  sub_1000687FC();
}

uint64_t sub_100224ED4(void *a1)
{
  sub_1001B1E64(a1, a1[3]);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:name:)();
  if (v4 == 2)
  {
    __break(1u);
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  if (v4) {
    return result;
  }
  sub_1001B1E64(a1, a1[3]);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:name:)();
  if (v3 == 2) {
    goto LABEL_8;
  }
  sub_1001B1E64(a1, a1[3]);
  type metadata accessor for TipCoordinator();
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!result)
  {
LABEL_9:
    __break(1u);
    return result;
  }
  sub_10088CF98(v3 & 1);
  return swift_release();
}

uint64_t sub_100225010()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10022502C()
{
  unint64_t v1 = *(void **)(v0 + 24);
  swift_release();
  sub_100224ED4(v1);
  objc_super v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_100225098()
{
  uint64_t v2 = *(void *)(type metadata accessor for WeatherApp() - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = v0 + v3;
  uint64_t v5 = v0 + ((*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v6;
  *uint64_t v6 = v1;
  v6[1] = sub_1002205C0;
  return sub_1000106F4(v4, v5);
}

unint64_t sub_100225194()
{
  unint64_t result = qword_100EAC0B8[0];
  if (!qword_100EAC0B8[0])
  {
    type metadata accessor for WeatherConditionBackgroundModelInputFactory();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_100EAC0B8);
  }
  return result;
}

uint64_t type metadata accessor for WeatherDataVisibleLocationLoadingTelemetry()
{
  uint64_t result = qword_100EB9350;
  if (!qword_100EB9350) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_10022522C(char a1, uint64_t a2, char *a3)
{
  uint64_t v7 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    if (a1 == 1)
    {
      uint64_t v10 = type metadata accessor for Date();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v9, a3, v10);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v9, 0, 1, v10);
      uint64_t v11 = v3 + OBJC_IVAR____TtC7Weather42WeatherDataVisibleLocationLoadingTelemetry_startLoadTime;
      swift_beginAccess();
      sub_1001E75A0((uint64_t)v9, v11);
      swift_endAccess();
    }
    else
    {
      sub_100C09BD8(a2, a3, v3, 0xD000000000000012, 0x8000000100CC1A70);
    }
  }
}

void sub_100225378()
{
  sub_100013E14();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t type metadata accessor for WeatherConditionBackgroundStoreObserver()
{
  uint64_t result = qword_100E85848;
  if (!qword_100E85848) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100225480(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_10004A90C;
  return sub_1000473D8(a1, v4, v5, v6, (uint64_t)(v1 + 5));
}

void *sub_100225544(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v26 = a6;
  uint64_t v27 = a9;
  sub_100170694(v25);
  sub_100162880();
  (*(void (**)(void))(v15 + 32))();
  uint64_t v16 = (void *)swift_allocObject();
  sub_1000DF0C4((uint64_t)v25, v26);
  sub_10017C83C();
  __n128 v18 = __chkstk_darwin(v17);
  uint64_t v20 = (uint64_t *)((char *)&v25[-1] - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, __n128))(v21 + 16))(v20, v18);
  uint64_t v22 = sub_10002326C(a1, a2, *v20, v16, a5, a7, a8, a10);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v25);
  return v22;
}

void sub_1002256A0()
{
  sub_1002271CC();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_10022572C()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_100225748()
{
  unint64_t result = qword_100E85A50;
  if (!qword_100E85A50)
  {
    type metadata accessor for WeatherConditionBackgroundModifier(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E85A50);
  }
  return result;
}

uint64_t sub_100225798()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_1002257B4()
{
  off_100EB45A0 = &_swiftEmptySetSingleton;
}

uint64_t sub_1002257C8()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for WeatherConditionBackgroundModifier(0);
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100E62BB0 != -1) {
    swift_once();
  }
  int v5 = byte_100EB45A8;
  sub_1001C9BA4(v1, (uint64_t)v4, (void (*)(void))type metadata accessor for WeatherConditionBackgroundModifier);
  if (v5 == 1)
  {
    uint64_t v6 = &v4[*(int *)(v2 + 36)];
    uint64_t v7 = *(void *)v6;
    char v8 = v6[8];
    sub_100195B7C(*(void *)v6, v8);
    sub_100149AE8();
    char v10 = v9;
    sub_10018F6D8(v7, v8);
  }
  else
  {
    char v10 = 0;
  }
  sub_1000FFDCC((uint64_t)v4, (void (*)(void))type metadata accessor for WeatherConditionBackgroundModifier);
  return v10 & 1;
}

uint64_t sub_100225900()
{
  return sub_10001638C((void (*)(void))type metadata accessor for AnimatedBackgroundsUserDefaultsMonitor, sub_100040744);
}

uint64_t sub_10022592C()
{
  uint64_t v1 = type metadata accessor for WeatherConditionBackgroundModifier(0);
  sub_100164920(v1);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v5 = *(void *)(v4 + 64);
  uint64_t v6 = type metadata accessor for WeatherConditionBackgroundModel();
  sub_1001627C0(v6);
  uint64_t v8 = v0 + ((v3 + v5 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));

  return sub_10003C5D0(v0 + v3, v8);
}

uint64_t sub_1002259B4(uint64_t (*a1)(uint64_t))
{
  uint64_t v2 = type metadata accessor for WeatherConditionBackgroundModifier(0);
  sub_1001627C0(v2);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return a1(v4);
}

uint64_t sub_100225A08()
{
  return sub_1002259B4(sub_10007342C);
}

uint64_t sub_100225A20()
{
  uint64_t v1 = type metadata accessor for WeatherConditionBackgroundModifier(0);
  sub_100164920(v1);
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  unint64_t v6 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v7 = (*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v8 = v0 + v6;
  double v9 = *(double *)(v0 + v7);
  uint64_t v10 = v0 + ((v7 + 15) & 0xFFFFFFFFFFFFFFF8);
  float v11 = *(float *)v10;
  uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 8);

  return sub_10004FD8C(v8, v12, v9, v11);
}

void sub_100225A9C(uint64_t a1, int *a2)
{
  uint64_t v5 = type metadata accessor for WeatherConditionBackgroundModifier(0);
  sub_1001627C0(v5);
  uint64_t v7 = v2 + ((*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));

  sub_10005AD88(a1, a2, v7);
}

uint64_t sub_100225AFC(uint64_t a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v2 = type metadata accessor for WeatherConditionBackgroundModifier(0);
  sub_1001627C0(v2);
  uint64_t v3 = sub_10017238C();

  return a2(v3);
}

uint64_t sub_100225B54(uint64_t a1)
{
  return sub_100225AFC(a1, (uint64_t (*)(uint64_t))sub_10000D870);
}

uint64_t sub_100225B6C()
{
  uint64_t v0 = type metadata accessor for WeatherConditionBackgroundModifier(0);
  sub_1001627C0(v0);
  uint64_t v1 = sub_100183368();

  return v2(v1);
}

uint64_t sub_100225BCC()
{
  return sub_100225B6C();
}

uint64_t sub_100225BE4()
{
  return sub_10001638C((void (*)(void))type metadata accessor for WeatherMicaConditionBackground, sub_10004DFC4);
}

uint64_t sub_100225C10@<X0>(uint64_t *a1@<X8>)
{
  return sub_10001FF70((uint64_t (*)(void))&type metadata accessor for VFXSceneTemplateManager, (uint64_t (*)(void))&VFXSceneTemplateManager.init(), (uint64_t)&protocol witness table for VFXSceneTemplateManager, a1);
}

uint64_t sub_100225C44@<X0>(uint64_t *a1@<X8>)
{
  return sub_10001FF70((uint64_t (*)(void))&type metadata accessor for MicaLoader, (uint64_t (*)(void))&MicaLoader.init(), (uint64_t)&protocol witness table for MicaLoader, a1);
}

uint64_t sub_100225C78@<X0>(uint64_t *a1@<X8>)
{
  return sub_10001FF70((uint64_t (*)(void))&type metadata accessor for WeatherConditionConfigurationManager, (uint64_t (*)(void))&WeatherConditionConfigurationManager.init(), (uint64_t)&protocol witness table for WeatherConditionConfigurationManager, a1);
}

uint64_t sub_100225CAC@<X0>(uint64_t *a1@<X8>)
{
  return sub_10001FF70((uint64_t (*)(void))&type metadata accessor for WeatherConditionGradientManager, (uint64_t (*)(void))&WeatherConditionGradientManager.init(), (uint64_t)&protocol witness table for WeatherConditionGradientManager, a1);
}

uint64_t sub_100225CE0(uint64_t a1)
{
  return sub_10008FFD0(a1);
}

uint64_t sub_100225CF8(uint64_t a1)
{
  return sub_100097720(a1, &qword_100EAA930, qword_100F50B50, (uint64_t (*)(void))&type metadata accessor for TargetWindowSizeClass);
}

void sub_100225D20()
{
  sub_10000BFD0();
  if (v0 <= 0x3F)
  {
    sub_100230B48();
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

uint64_t type metadata accessor for WeatherDataDebounceMiddleware()
{
  uint64_t result = qword_100E80BA8;
  if (!qword_100E80BA8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100225E4C(uint64_t *a1)
{
  return sub_10003F69C(a1);
}

uint64_t sub_100225E54(uint64_t a1)
{
  return sub_100097898(a1, v1, 1);
}

void type metadata accessor for WeatherMapPresentationIntent.FullscreenPresentationSource()
{
}

void type metadata accessor for WeatherMapPresentationStyle.FullscreenTransitionStyle()
{
}

uint64_t sub_100225E8C(unsigned __int8 a1, uint64_t a2)
{
  int v2 = a1;
  if (a1 >= 0xFEu) {
    return *(unsigned __int8 *)(a2 + *(int *)(type metadata accessor for WeatherMapPresentationState(0) + 36));
  }
  int v4 = *(unsigned __int8 *)(a2 + 1);
  char IsSlow = DeviceIsSlow();
  if ((v2 & 0xFFFFFFC1) == 0x40) {
    return 0;
  }
  if (IsSlow) {
    return 0;
  }
  return (v4 & 0xFFFFFFC1) != 64;
}

uint64_t sub_100225EFC(uint64_t a1, uint64_t a2, long long *a3)
{
  uint64_t v16 = type metadata accessor for NetworkActivityManager();
  uint64_t v17 = &off_100E175C0;
  v15[0] = a2;
  type metadata accessor for WeatherDataStoreObserver();
  uint64_t v6 = swift_allocObject();
  uint64_t v7 = sub_1000DF0C4((uint64_t)v15, v16);
  __n128 v8 = __chkstk_darwin(v7);
  uint64_t v10 = (void *)((char *)&v15[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, __n128))(v11 + 16))(v10, v8);
  uint64_t v12 = sub_10001760C(a1, *v10, a3, v6);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v15);
  return v12;
}

uint64_t sub_100226028()
{
  uint64_t v0 = type metadata accessor for TimeState();
  sub_100164920(v0);

  return sub_10004E358();
}

uint64_t sub_10022609C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1003CD404);
}

uint64_t sub_1002260B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1003CD3B8);
}

void *sub_1002260C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  a14[7] = type metadata accessor for DailyForecastComponentViewModelFactory();
  a14[8] = &off_100E16D28;
  a14[4] = a3;
  a14[12] = type metadata accessor for FeelsLikeComponentViewModelFactory();
  a14[13] = &off_100E35D48;
  a14[9] = a4;
  a14[17] = type metadata accessor for HourlyForecastComponentViewModelFactory();
  a14[18] = &off_100E1CB80;
  a14[14] = a5;
  a14[22] = type metadata accessor for ListViewModelFactory();
  a14[23] = &off_100E1D548;
  a14[19] = a6;
  a14[27] = type metadata accessor for PrecipitationTotalComponentViewModelFactory();
  a14[28] = &off_100E2A0B0;
  a14[24] = a7;
  a14[32] = type metadata accessor for UVIndexComponentViewModelFactory();
  a14[33] = &off_100E2E038;
  a14[29] = a8;
  a14[37] = type metadata accessor for VisibilityComponentViewModelFactory();
  a14[38] = &off_100E2BA98;
  a14[34] = a9;
  a14[42] = type metadata accessor for PressureComponentViewModelFactory();
  a14[43] = &off_100E39AA0;
  a14[39] = a10;
  a14[47] = type metadata accessor for WindComponentViewModelFactory();
  a14[48] = &off_100E278F0;
  a14[44] = a11;
  a14[52] = type metadata accessor for WeatherConditionBackgroundModelInputFactory();
  a14[53] = &off_100E357E0;
  a14[49] = a12;
  a14[57] = type metadata accessor for LocationViewModelFactory();
  a14[58] = &off_100E32808;
  a14[54] = a13;
  a14[2] = a1;
  a14[3] = a2;
  return a14;
}

uint64_t sub_100226260()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_1002262A4()
{
  sub_1000159D8();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_100226338()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10022637C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 24);
  uint64_t v5 = type metadata accessor for WeatherWindowGroup();
  sub_1001627C0(v5);
  uint64_t v7 = v1 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));

  return sub_100054F20(v7, v3, v4, a1);
}

uint64_t sub_1002263E8()
{
  uint64_t v1 = type metadata accessor for Location();
  sub_100164920(v1);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v5 = *(void *)(v4 + 64);
  uint64_t v6 = type metadata accessor for NewsDataModel();
  sub_1001627C0(v6);
  uint64_t v8 = *(void *)(v0 + 16);
  uint64_t v9 = v0 + ((v3 + v5 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));

  return sub_10005D4D8(v8, v0 + v3, v9);
}

uint64_t sub_100226474()
{
  return sub_100038D50(v0[2], v0[3], v0[4], v0[5]);
}

ValueMetadata *type metadata accessor for WeatherURLContext()
{
  return &type metadata for WeatherURLContext;
}

void sub_100226490()
{
  if (!qword_100E637E0)
  {
    type metadata accessor for LocationWeatherDataState(255);
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100E637E0);
    }
  }
}

uint64_t sub_1002264E8@<X0>(uint64_t *a1@<X8>)
{
  return sub_10000AD14((uint64_t (*)(void))type metadata accessor for ReportWeatherViewStateReducer, (uint64_t)&off_100E2EF50, a1);
}

uint64_t sub_100226508@<X0>(uint64_t *a1@<X8>)
{
  return sub_10000AD14((uint64_t (*)(void))type metadata accessor for ReportWeatherViewModelFactory, (uint64_t)&off_100E2BC00, a1);
}

uint64_t sub_100226528()
{
  return sub_100053EF4();
}

uint64_t sub_100226544()
{
  return sub_1000325A4(&qword_100E91CB0);
}

void sub_100226578()
{
  sub_1002307EC();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void type metadata accessor for PinnedWeatherMapPlacement()
{
}

uint64_t sub_100226630()
{
  return ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
}

uint64_t sub_1002266EC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100226708(uint64_t (*a1)(uint64_t))
{
  sub_10018807C();
  uint64_t v3 = v1 + ((*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));

  return a1(v3);
}

uint64_t sub_100226754()
{
  return sub_100226708(sub_10002BD5C);
}

void sub_10022676C(void *a1@<X0>, float *a2@<X8>)
{
  sub_100024F70(a1, *(const void **)(v2 + 16), a2);
}

uint64_t sub_10022678C()
{
  return static ViewModifier._viewListCount(inputs:body:)();
}

uint64_t sub_1002267A8()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_1002267C4()
{
  sub_100020914(319, (unint64_t *)&qword_100E6DC90, (void (*)(uint64_t))&type metadata accessor for ScenePhase);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_100226878()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100226894(uint64_t a1, uint64_t a2)
{
  return sub_1000237FC(a1, a2, type metadata accessor for MainViewScenePhaseObservationViewModifier, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1000625BC);
}

uint64_t sub_1002268C0()
{
  uint64_t result = type metadata accessor for LocationViewModel();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_100226954()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100226970@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for LocationViewObserverViewState();
  uint64_t result = ObservableObject<>.objectWillChange.getter();
  *a1 = result;
  return result;
}

void sub_1002269B0()
{
  sub_1002308FC();
  if (v0 <= 0x3F)
  {
    type metadata accessor for LocationViewModel();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_100226A98()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100226AB4()
{
  type metadata accessor for LocationViewObserverViewState();
  uint64_t result = swift_allocObject();
  *(unsigned char *)(result + 16) = 0;
  return result;
}

uint64_t sub_100226AE0(uint64_t (*a1)(uint64_t))
{
  uint64_t v2 = type metadata accessor for LocationViewObserverView();
  sub_1001627C0(v2);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return a1(v4);
}

uint64_t sub_100226B34()
{
  return sub_100226AE0(sub_100050B68);
}

unint64_t sub_100226B4C()
{
  unint64_t result = qword_100E8E2F0;
  if (!qword_100E8E2F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8E2F0);
  }
  return result;
}

uint64_t sub_100226B98()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t type metadata accessor for VisibleLocationWeatherLoadState()
{
  uint64_t result = qword_100E81238;
  if (!qword_100E81238) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata accessor for VisibleLocationWeatherLoadStoreObserver()
{
  return self;
}

uint64_t type metadata accessor for VisibleLocationWeatherLoadStatusLog()
{
  uint64_t result = qword_100EA8E30;
  if (!qword_100EA8E30) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100226C68()
{
  uint64_t result = type metadata accessor for VisibleLocationWeatherLoadState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for VisibleLocationWeatherLoadMonitor()
{
  uint64_t result = qword_100EA0910;
  if (!qword_100EA0910) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t sub_100226D4C()
{
  unint64_t result = qword_100E9B658;
  if (!qword_100E9B658)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9B658);
  }
  return result;
}

void sub_100226D98()
{
  sub_1002308A0();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_100226E48()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100226E64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100AAFF88);
}

unint64_t sub_100226E78()
{
  unint64_t result = qword_100EA1FF8;
  if (!qword_100EA1FF8)
  {
    sub_10018C6DC(&qword_100EA1ED8);
    sub_10024D5E4((uint64_t)&unk_100EA2000);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA1FF8);
  }
  return result;
}

unint64_t sub_100226F10()
{
  unint64_t result = qword_100E8F040;
  if (!qword_100E8F040)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8F040);
  }
  return result;
}

uint64_t sub_100226F5C()
{
  uint64_t result = static Animation.interpolatingSpring(mass:stiffness:damping:initialVelocity:)();
  qword_100F514E0 = result;
  return result;
}

uint64_t sub_100226F94()
{
  uint64_t v0 = type metadata accessor for Material();
  sub_100097814(v0, qword_100F51B10);
  sub_1002102B0(v0, (uint64_t)qword_100F51B10);
  return sub_100048FA4();
}

unint64_t sub_100226FE0()
{
  unint64_t result = qword_100EA5F80;
  if (!qword_100EA5F80)
  {
    sub_10018C6DC(&qword_100EA5F78);
    sub_10022BBB4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA5F80);
  }
  return result;
}

void sub_100227054()
{
  if (!qword_100E6B940)
  {
    sub_10018C6DC(&qword_100E6B8D0);
    unint64_t v0 = type metadata accessor for Binding();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100E6B940);
    }
  }
}

uint64_t sub_1002270B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10017DF08(&qword_100E8D8D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_100227118()
{
  if (!qword_100E8D848)
  {
    type metadata accessor for Location.Identifier();
    unint64_t v0 = type metadata accessor for Binding();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100E8D848);
    }
  }
}

void sub_100227170()
{
  if (!qword_100E750A0)
  {
    sub_10018C6DC(&qword_100E63A50);
    unint64_t v0 = type metadata accessor for Binding();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100E750A0);
    }
  }
}

void sub_1002271CC()
{
  if (!qword_100E793E0)
  {
    sub_10018C6DC((uint64_t *)&unk_100EAA640);
    unint64_t v0 = type metadata accessor for State();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100E793E0);
    }
  }
}

void sub_100227228(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v6 = sub_10018C6DC(&qword_100E6B640);
    unint64_t v7 = a3(a1, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

void sub_10022728C()
{
  if (!qword_100E7DE80)
  {
    sub_10018C6DC((uint64_t *)&unk_100E73CA0);
    unint64_t v0 = type metadata accessor for State();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100E7DE80);
    }
  }
}

uint64_t sub_1002272EC()
{
  return sub_100227320();
}

uint64_t sub_100227304()
{
  return sub_100315604(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_100227320()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_100227350()
{
  return sub_1003155D4(*(uint64_t (**)(void))(v0 + 16));
}

unint64_t sub_10022736C()
{
  unint64_t result = qword_100E66BF0;
  if (!qword_100E66BF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E66BF0);
  }
  return result;
}

unint64_t sub_1002273B8()
{
  unint64_t result = qword_100E6B988;
  if (!qword_100E6B988)
  {
    type metadata accessor for PrimitiveButtonStyleConfiguration.Label();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6B988);
  }
  return result;
}

unint64_t sub_100227408()
{
  unint64_t result = qword_100EAACA0;
  if (!qword_100EAACA0)
  {
    type metadata accessor for AccessibilityAttachmentModifier();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAACA0);
  }
  return result;
}

void sub_100227458()
{
  if (!qword_100E9C2B8)
  {
    type metadata accessor for AppDelegate();
    unint64_t v0 = type metadata accessor for UIApplicationDelegateAdaptor();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100E9C2B8);
    }
  }
}

unint64_t sub_1002274B0()
{
  unint64_t result = qword_100E85A48;
  if (!qword_100E85A48)
  {
    sub_10018C6DC(&qword_100E85A38);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E85A48);
  }
  return result;
}

unint64_t sub_100227504()
{
  unint64_t result = qword_100EB7278;
  if (!qword_100EB7278)
  {
    sub_10018C6DC(&qword_100EB7260);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB7278);
  }
  return result;
}

unint64_t sub_100227558()
{
  unint64_t result = qword_100E817D8;
  if (!qword_100E817D8)
  {
    sub_10018C6DC(&qword_100E817D0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E817D8);
  }
  return result;
}

unint64_t sub_1002275AC()
{
  unint64_t result = qword_100E9A6F0;
  if (!qword_100E9A6F0)
  {
    sub_10018C6DC(&qword_100E9A6E8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9A6F0);
  }
  return result;
}

unint64_t sub_100227600()
{
  unint64_t result = qword_100E82C68;
  if (!qword_100E82C68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E82C68);
  }
  return result;
}

unint64_t sub_10022764C()
{
  unint64_t result = qword_100E8ED88;
  if (!qword_100E8ED88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8ED88);
  }
  return result;
}

unint64_t sub_100227698()
{
  unint64_t result = qword_100EAA960;
  if (!qword_100EAA960)
  {
    sub_10018C6DC(&qword_100EAA968);
    sub_10022A094();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAA960);
  }
  return result;
}

unint64_t sub_100227714()
{
  unint64_t result = qword_100EAA958;
  if (!qword_100EAA958)
  {
    sub_10018C6DC(&qword_100EAA950);
    sub_100227698();
    sub_1001246C8(&qword_100EAA9C8, &qword_100EAA9D0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAA958);
  }
  return result;
}

unint64_t sub_1002277B4()
{
  unint64_t result = qword_100EAAB18;
  if (!qword_100EAAB18)
  {
    sub_10018C6DC((uint64_t *)&unk_100EAAB20);
    sub_100227714();
    sub_100227F64();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAAB18);
  }
  return result;
}

unint64_t sub_100227830()
{
  unint64_t result = qword_100E84288;
  if (!qword_100E84288)
  {
    sub_10018C6DC(&qword_100E84290);
    sub_1000BF670();
    sub_1000BF860();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E84288);
  }
  return result;
}

unint64_t sub_1002278AC()
{
  unint64_t result = qword_100EAD840;
  if (!qword_100EAD840)
  {
    sub_10018C6DC(&qword_100EAD848);
    sub_1002279C8();
    sub_10024D5E4((uint64_t)&unk_100EAD9A0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAD840);
  }
  return result;
}

unint64_t sub_10022794C()
{
  unint64_t result = qword_100EAD700;
  if (!qword_100EAD700)
  {
    sub_10018C6DC(&qword_100EAD708);
    sub_100227A44();
    sub_100227C58();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAD700);
  }
  return result;
}

unint64_t sub_1002279C8()
{
  unint64_t result = qword_100EAD850;
  if (!qword_100EAD850)
  {
    sub_10018C6DC(&qword_100EAD858);
    sub_100227CD4();
    sub_100227D50();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAD850);
  }
  return result;
}

unint64_t sub_100227A44()
{
  unint64_t result = qword_100EAD710;
  if (!qword_100EAD710)
  {
    sub_10018C6DC(&qword_100EAD718);
    sub_100026188((uint64_t)&unk_100EAD720);
    sub_100227E6C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAD710);
  }
  return result;
}

unint64_t sub_100227AE4()
{
  unint64_t result = qword_100E84568;
  if (!qword_100E84568)
  {
    sub_10018C6DC(&qword_100E84570);
    sub_1000955D0();
    sub_100095490();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E84568);
  }
  return result;
}

unint64_t sub_100227B60()
{
  unint64_t result = qword_100E83840;
  if (!qword_100E83840)
  {
    sub_10018C6DC(&qword_100E832E8);
    sub_10001E214();
    sub_10001E948();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E83840);
  }
  return result;
}

unint64_t sub_100227BDC()
{
  unint64_t result = qword_100E839B8;
  if (!qword_100E839B8)
  {
    sub_10018C6DC(&qword_100E83280);
    sub_1000191CC();
    sub_100228128();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E839B8);
  }
  return result;
}

unint64_t sub_100227C58()
{
  unint64_t result = qword_100EAD7C0;
  if (!qword_100EAD7C0)
  {
    sub_10018C6DC(&qword_100EAD7C8);
    sub_100228410();
    sub_1002278AC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAD7C0);
  }
  return result;
}

unint64_t sub_100227CD4()
{
  unint64_t result = qword_100EAD860;
  if (!qword_100EAD860)
  {
    sub_10018C6DC(&qword_100EAD868);
    sub_10022848C();
    sub_100228394();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAD860);
  }
  return result;
}

unint64_t sub_100227D50()
{
  unint64_t result = qword_100EAD910;
  if (!qword_100EAD910)
  {
    sub_10018C6DC(&qword_100EAD918);
    sub_100228508();
    sub_100026188((uint64_t)&unk_100EAD970);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAD910);
  }
  return result;
}

unint64_t sub_100227DF0()
{
  unint64_t result = qword_100E7EB38;
  if (!qword_100E7EB38)
  {
    sub_10018C6DC(qword_100E7EB40);
    sub_1000A6B1C();
    sub_1000A6BBC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E7EB38);
  }
  return result;
}

unint64_t sub_100227E6C()
{
  unint64_t result = qword_100EAD780;
  if (!qword_100EAD780)
  {
    sub_10018C6DC(&qword_100EAD788);
    sub_100229464();
    sub_10022CB68();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAD780);
  }
  return result;
}

unint64_t sub_100227EE8()
{
  unint64_t result = qword_100EAD730;
  if (!qword_100EAD730)
  {
    sub_10018C6DC(&qword_100EAD738);
    sub_100229464();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAD730);
  }
  return result;
}

unint64_t sub_100227F64()
{
  unint64_t result = qword_100EAA9D8;
  if (!qword_100EAA9D8)
  {
    sub_10018C6DC(&qword_100EAA940);
    sub_100229504();
    sub_1001246C8(&qword_100EAA9C8, &qword_100EAA9D0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAA9D8);
  }
  return result;
}

unint64_t sub_100228004()
{
  unint64_t result = qword_100EA1FF0;
  if (!qword_100EA1FF0)
  {
    sub_10018C6DC(&qword_100EA1E98);
    sub_1000CE7D0((uint64_t)&unk_100EA1EA0);
    sub_1000CFD98();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA1FF0);
  }
  return result;
}

unint64_t sub_1002280AC()
{
  unint64_t result = qword_100E842F8;
  if (!qword_100E842F8)
  {
    sub_10018C6DC(&qword_100E84300);
    sub_10020C890();
    sub_10020C93C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E842F8);
  }
  return result;
}

unint64_t sub_100228128()
{
  unint64_t result = qword_100E83A78;
  if (!qword_100E83A78)
  {
    sub_10018C6DC(&qword_100E83248);
    sub_10022B394();
    sub_10022B2F4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E83A78);
  }
  return result;
}

unint64_t sub_1002281A4()
{
  unint64_t result = qword_100E83530;
  if (!qword_100E83530)
  {
    sub_10018C6DC(&qword_100E831F8);
    sub_10022B434();
    sub_10022B7F4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E83530);
  }
  return result;
}

unint64_t sub_100228220()
{
  unint64_t result = qword_100E836C8;
  if (!qword_100E836C8)
  {
    sub_10018C6DC(&qword_100E83338);
    sub_10022B614();
    sub_10022B934();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E836C8);
  }
  return result;
}

unint64_t sub_10022829C()
{
  unint64_t result = qword_100E83478;
  if (!qword_100E83478)
  {
    sub_10018C6DC(&qword_100E83220);
    sub_10022B6B4();
    sub_10022B754();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E83478);
  }
  return result;
}

unint64_t sub_100228318()
{
  unint64_t result = qword_100E83780;
  if (!qword_100E83780)
  {
    sub_10018C6DC(&qword_100E83310);
    sub_10022B894();
    sub_10022B074();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E83780);
  }
  return result;
}

unint64_t sub_100228394()
{
  unint64_t result = qword_100EAD8C0;
  if (!qword_100EAD8C0)
  {
    sub_10018C6DC(&qword_100EAD8C8);
    sub_10022CA70();
    sub_10022CBE4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAD8C0);
  }
  return result;
}

unint64_t sub_100228410()
{
  unint64_t result = qword_100EAD7D0;
  if (!qword_100EAD7D0)
  {
    sub_10018C6DC(&qword_100EAD7D8);
    sub_10022CC60();
    sub_10022C9F4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAD7D0);
  }
  return result;
}

unint64_t sub_10022848C()
{
  unint64_t result = qword_100EAD870;
  if (!qword_100EAD870)
  {
    sub_10018C6DC(&qword_100EAD878);
    sub_10022CD58();
    sub_10022CCDC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAD870);
  }
  return result;
}

unint64_t sub_100228508()
{
  unint64_t result = qword_100EAD920;
  if (!qword_100EAD920)
  {
    sub_10018C6DC(&qword_100EAD928);
    sub_10022CE50();
    sub_10022CDD4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAD920);
  }
  return result;
}

unint64_t sub_100228584()
{
  unint64_t result = qword_100E830C0;
  if (!qword_100E830C0)
  {
    sub_10018C6DC(&qword_100E830C8);
    sub_10020CD50();
    sub_10020C720();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E830C0);
  }
  return result;
}

unint64_t sub_100228600()
{
  unint64_t result = qword_100EA16E8;
  if (!qword_100EA16E8)
  {
    sub_10018C6DC(&qword_100EA1698);
    sub_10022D03C();
    sub_10022CF9C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA16E8);
  }
  return result;
}

unint64_t sub_10022867C()
{
  unint64_t result = qword_100E83A48;
  if (!qword_100E83A48)
  {
    sub_10018C6DC(&qword_100E83A50);
    sub_10022D0DC();
    sub_10024D5E4((uint64_t)&unk_100E83A68);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E83A48);
  }
  return result;
}

unint64_t sub_10022871C()
{
  unint64_t result = qword_100E83930;
  if (!qword_100E83930)
  {
    sub_10018C6DC(&qword_100E83938);
    sub_10022D1AC();
    sub_10024D5E4((uint64_t)&unk_100E83950);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E83930);
  }
  return result;
}

unint64_t sub_1002287BC()
{
  unint64_t result = qword_100E838D0;
  if (!qword_100E838D0)
  {
    sub_10018C6DC(&qword_100E838D8);
    sub_10022D27C();
    sub_10024D5E4((uint64_t)&unk_100E838F0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E838D0);
  }
  return result;
}

unint64_t sub_10022885C()
{
  unint64_t result = qword_100E83690;
  if (!qword_100E83690)
  {
    sub_10018C6DC(&qword_100E83698);
    sub_10022D34C();
    sub_10024D5E4((uint64_t)&unk_100E836B0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E83690);
  }
  return result;
}

unint64_t sub_1002288FC()
{
  unint64_t result = qword_100E83808;
  if (!qword_100E83808)
  {
    sub_10018C6DC(&qword_100E83810);
    sub_10022D41C();
    sub_10024D5E4((uint64_t)&unk_100E83828);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E83808);
  }
  return result;
}

unint64_t sub_10022899C()
{
  unint64_t result = qword_100E835D8;
  if (!qword_100E835D8)
  {
    sub_10018C6DC(&qword_100E835E0);
    sub_10022D4EC();
    sub_10024D5E4((uint64_t)&unk_100E835F8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E835D8);
  }
  return result;
}

unint64_t sub_100228A3C()
{
  unint64_t result = qword_100E83878;
  if (!qword_100E83878)
  {
    sub_10018C6DC(&qword_100E83880);
    sub_10022D5BC();
    sub_10024D5E4((uint64_t)&unk_100E83898);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E83878);
  }
  return result;
}

unint64_t sub_100228ADC()
{
  unint64_t result = qword_100E839F0;
  if (!qword_100E839F0)
  {
    sub_10018C6DC(&qword_100E839F8);
    sub_10022D68C();
    sub_10024D5E4((uint64_t)&unk_100E83A10);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E839F0);
  }
  return result;
}

unint64_t sub_100228B7C()
{
  unint64_t result = qword_100E83B00;
  if (!qword_100E83B00)
  {
    sub_10018C6DC(&qword_100E83B08);
    sub_10022D75C();
    sub_10024D5E4((uint64_t)&unk_100E83B20);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E83B00);
  }
  return result;
}

unint64_t sub_100228C1C()
{
  unint64_t result = qword_100E83AA8;
  if (!qword_100E83AA8)
  {
    sub_10018C6DC(&qword_100E83AB0);
    sub_10022D82C();
    sub_10024D5E4((uint64_t)&unk_100E83AC8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E83AA8);
  }
  return result;
}

unint64_t sub_100228CBC()
{
  unint64_t result = qword_100E833F0;
  if (!qword_100E833F0)
  {
    sub_10018C6DC(&qword_100E833F8);
    sub_10022D8FC();
    sub_10024D5E4((uint64_t)&unk_100E83410);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E833F0);
  }
  return result;
}

unint64_t sub_100228D5C()
{
  unint64_t result = qword_100E83638;
  if (!qword_100E83638)
  {
    sub_10018C6DC(&qword_100E83640);
    sub_10022D9CC();
    sub_10024D5E4((uint64_t)&unk_100E83658);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E83638);
  }
  return result;
}

unint64_t sub_100228DFC()
{
  unint64_t result = qword_100E83988;
  if (!qword_100E83988)
  {
    sub_10018C6DC(&qword_100E83990);
    sub_10022DA9C();
    sub_10024D5E4((uint64_t)&unk_100E839A8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E83988);
  }
  return result;
}

unint64_t sub_100228E9C()
{
  unint64_t result = qword_100E836F8;
  if (!qword_100E836F8)
  {
    sub_10018C6DC(&qword_100E83700);
    sub_10022DB6C();
    sub_10024D5E4((uint64_t)&unk_100E83718);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E836F8);
  }
  return result;
}

unint64_t sub_100228F3C()
{
  unint64_t result = qword_100E834A8;
  if (!qword_100E834A8)
  {
    sub_10018C6DC(&qword_100E834B0);
    sub_10022DC3C();
    sub_10024D5E4((uint64_t)&unk_100E834C8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E834A8);
  }
  return result;
}

unint64_t sub_100228FDC()
{
  unint64_t result = qword_100E83500;
  if (!qword_100E83500)
  {
    sub_10018C6DC(&qword_100E83508);
    sub_10022DD0C();
    sub_10024D5E4((uint64_t)&unk_100E83520);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E83500);
  }
  return result;
}

unint64_t sub_10022907C()
{
  unint64_t result = qword_100E83448;
  if (!qword_100E83448)
  {
    sub_10018C6DC(&qword_100E83450);
    sub_10022DDDC();
    sub_10024D5E4((uint64_t)&unk_100E83468);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E83448);
  }
  return result;
}

unint64_t sub_10022911C()
{
  unint64_t result = qword_100E837B0;
  if (!qword_100E837B0)
  {
    sub_10018C6DC(&qword_100E837B8);
    sub_10022DEAC();
    sub_10024D5E4((uint64_t)&unk_100E837D0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E837B0);
  }
  return result;
}

unint64_t sub_1002291BC()
{
  unint64_t result = qword_100E83750;
  if (!qword_100E83750)
  {
    sub_10018C6DC(&qword_100E83758);
    sub_10022DF7C();
    sub_10024D5E4((uint64_t)&unk_100E83770);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E83750);
  }
  return result;
}

unint64_t sub_10022925C()
{
  unint64_t result = qword_100E83580;
  if (!qword_100E83580)
  {
    sub_10018C6DC(&qword_100E83588);
    sub_10022E04C();
    sub_10024D5E4((uint64_t)&unk_100E835A0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E83580);
  }
  return result;
}

unint64_t sub_1002292FC()
{
  unint64_t result = qword_100EADAC0;
  if (!qword_100EADAC0)
  {
    sub_10018C6DC(&qword_100EADAC8);
    sub_1000AB214((uint64_t)&unk_100EADAB0);
    sub_10024D5E4((uint64_t)&unk_100EADAB8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EADAC0);
  }
  return result;
}

unint64_t sub_1002293C4()
{
  unint64_t result = qword_100E83088;
  if (!qword_100E83088)
  {
    sub_10018C6DC(&qword_100E83090);
    sub_100006CCC();
    sub_10024D5E4((uint64_t)&unk_100E82968);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E83088);
  }
  return result;
}

unint64_t sub_100229464()
{
  unint64_t result = qword_100EAD740;
  if (!qword_100EAD740)
  {
    sub_10018C6DC(&qword_100EAD748);
    sub_1000069BC();
    sub_10024D5E4((uint64_t)&unk_100EAD770);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAD740);
  }
  return result;
}

unint64_t sub_100229504()
{
  unint64_t result = qword_100EAA9E0;
  if (!qword_100EAA9E0)
  {
    sub_10018C6DC(&qword_100EAA9E8);
    sub_1001246C8((unint64_t *)&unk_100EAA9F0, &qword_100E7CF80);
    sub_10022F604();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAA9E0);
  }
  return result;
}

uint64_t sub_1002295A4(uint64_t a1)
{
  return sub_1000976BC(a1, qword_100E8DE98);
}

unint64_t sub_1002295B0()
{
  unint64_t result = qword_100EAA888;
  if (!qword_100EAA888)
  {
    sub_10018C6DC(&qword_100EAA6B0);
    sub_100229990();
    sub_1000F6744(&qword_100EAA8C8, (void (*)(uint64_t))type metadata accessor for MonitorAppLaunchStateViewModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAA888);
  }
  return result;
}

unint64_t sub_10022965C()
{
  unint64_t result = qword_100E8E428;
  if (!qword_100E8E428)
  {
    sub_10018C6DC(&qword_100E8E370);
    sub_1001C1C7C((uint64_t)&unk_100E8E430);
    sub_10024D5E4((uint64_t)&unk_100E8E450);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8E428);
  }
  return result;
}

unint64_t sub_100229728()
{
  unint64_t result = qword_100E95320;
  if (!qword_100E95320)
  {
    sub_10018C6DC(&qword_100E95318);
    sub_100229A30();
    sub_1001246C8(&qword_100E95358, &qword_100E95360);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E95320);
  }
  return result;
}

unint64_t sub_1002297C8()
{
  unint64_t result = qword_100E844B8;
  if (!qword_100E844B8)
  {
    sub_10018C6DC(&qword_100E84348);
    sub_100229B9C();
    sub_10024D5E4((uint64_t)&unk_100E84508);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E844B8);
  }
  return result;
}

unint64_t sub_100229868()
{
  unint64_t result = qword_100E7EAE0;
  if (!qword_100E7EAE0)
  {
    sub_10018C6DC(&qword_100E7EAD8);
    sub_10020C9DC();
    sub_10021BEB8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E7EAE0);
  }
  return result;
}

unint64_t sub_1002298E4()
{
  unint64_t result = qword_100EA1858;
  if (!qword_100EA1858)
  {
    sub_10018C6DC(&qword_100EA1840);
    sub_100229D84();
    sub_100135128((uint64_t)&unk_100EA1890);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA1858);
  }
  return result;
}

unint64_t sub_100229990()
{
  unint64_t result = qword_100EAA890;
  if (!qword_100EAA890)
  {
    sub_10018C6DC(&qword_100EAA6A8);
    sub_100229EA0();
    sub_1001246C8(&qword_100EAA8C0, &qword_100EAA7A8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAA890);
  }
  return result;
}

unint64_t sub_100229A30()
{
  unint64_t result = qword_100E95328;
  if (!qword_100E95328)
  {
    sub_10018C6DC(&qword_100E95300);
    sub_10022A3EC();
    sub_1001246C8(&qword_100E70D10, &qword_100EAAE30);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E95328);
  }
  return result;
}

unint64_t sub_100229AD0()
{
  unint64_t result = qword_100EB1C98;
  if (!qword_100EB1C98)
  {
    sub_10018C6DC(&qword_100EB1C58);
    sub_10001AA18(&qword_100EB1CA0, &qword_100EB1C50, (void (*)(void))sub_10022C2A0);
    sub_1001246C8(&qword_100E80348, &qword_100E80350);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB1C98);
  }
  return result;
}

unint64_t sub_100229B9C()
{
  unint64_t result = qword_100E844C0;
  if (!qword_100E844C0)
  {
    sub_10018C6DC(&qword_100E84330);
    sub_10022A7AC();
    sub_10024D5E4((uint64_t)&unk_100E844F8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E844C0);
  }
  return result;
}

unint64_t sub_100229C3C()
{
  unint64_t result = qword_100E8EE18;
  if (!qword_100E8EE18)
  {
    sub_10018C6DC(&qword_100E8EDE0);
    sub_1001C1C7C((uint64_t)&unk_100E8EE20);
    sub_10024D5E4((uint64_t)&unk_100E8EE38);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8EE18);
  }
  return result;
}

unint64_t sub_100229D08()
{
  unint64_t result = qword_100EAA6E8;
  if (!qword_100EAA6E8)
  {
    sub_10018C6DC(&qword_100EAA6F0);
    sub_10022AA64();
    sub_100218FB0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAA6E8);
  }
  return result;
}

unint64_t sub_100229D84()
{
  unint64_t result = qword_100EA1860;
  if (!qword_100EA1860)
  {
    sub_10018C6DC(&qword_100EA1838);
    sub_10022AC08();
    sub_10021C2BC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA1860);
  }
  return result;
}

unint64_t sub_100229E00()
{
  unint64_t result = qword_100E84240;
  if (!qword_100E84240)
  {
    sub_10018C6DC(&qword_100E831D8);
    sub_10022BA74();
    sub_10024D5E4((uint64_t)&unk_100E84278);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E84240);
  }
  return result;
}

unint64_t sub_100229EA0()
{
  unint64_t result = qword_100EAA898;
  if (!qword_100EAA898)
  {
    sub_10018C6DC(&qword_100EAA6A0);
    sub_10022BB14();
    sub_1000F6744(&qword_100E74628, (void (*)(uint64_t))type metadata accessor for WeatherMapStatusBarColorSceneModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAA898);
  }
  return result;
}

unint64_t sub_100229F4C()
{
  unint64_t result = qword_100EAA750;
  if (!qword_100EAA750)
  {
    sub_10018C6DC(&qword_100EAA670);
    sub_10022BE14();
    sub_10022736C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAA750);
  }
  return result;
}

unint64_t sub_100229FC8()
{
  unint64_t result = qword_100E8E438;
  if (!qword_100E8E438)
  {
    sub_10018C6DC(&qword_100E8E360);
    sub_1001C1C7C((uint64_t)&unk_100E8E440);
    sub_10024D5E4((uint64_t)&unk_100E6F778);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8E438);
  }
  return result;
}

unint64_t sub_10022A094()
{
  unint64_t result = qword_100EAA970;
  if (!qword_100EAA970)
  {
    sub_10018C6DC(&qword_100EAA978);
    sub_10022BEB4();
    sub_1001246C8(&qword_100EAA9B8, &qword_100EAA9C0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAA970);
  }
  return result;
}

unint64_t sub_10022A134()
{
  unint64_t result = qword_100E8F110;
  if (!qword_100E8F110)
  {
    sub_10018C6DC(&qword_100E8F0A8);
    sub_1001C1C7C((uint64_t)&unk_100E8F0C0);
    sub_10015180C((uint64_t)&qword_100EAACA0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8F110);
  }
  return result;
}

unint64_t sub_10022A20C()
{
  unint64_t result = qword_100E64610;
  if (!qword_100E64610)
  {
    sub_10018C6DC(&qword_100E64500);
    sub_10022BFD0();
    sub_10024D5E4((uint64_t)&unk_100E645B0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E64610);
  }
  return result;
}

unint64_t sub_10022A2AC()
{
  unint64_t result = qword_100E64630;
  if (!qword_100E64630)
  {
    sub_10018C6DC(&qword_100E64520);
    sub_10022C06C();
    sub_10024D5E4((uint64_t)&unk_100E645B0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E64630);
  }
  return result;
}

unint64_t sub_10022A34C()
{
  unint64_t result = qword_100E84518;
  if (!qword_100E84518)
  {
    sub_10018C6DC(&qword_100E84370);
    sub_10022C108();
    sub_10024D5E4((uint64_t)&unk_100E84538);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E84518);
  }
  return result;
}

unint64_t sub_10022A3EC()
{
  unint64_t result = qword_100E95330;
  if (!qword_100E95330)
  {
    sub_10018C6DC(&qword_100E952F8);
    sub_10022C184();
    sub_1001246C8(&qword_100E70D10, &qword_100EAAE30);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E95330);
  }
  return result;
}

unint64_t sub_10022A48C()
{
  unint64_t result = qword_100E64590;
  if (!qword_100E64590)
  {
    sub_10018C6DC(&qword_100E64480);
    sub_10022C37C();
    sub_10024D5E4((uint64_t)&unk_100E645B0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E64590);
  }
  return result;
}

unint64_t sub_10022A52C()
{
  unint64_t result = qword_100E84590;
  if (!qword_100E84590)
  {
    sub_10018C6DC(&qword_100E844B0);
    sub_10022C4B8();
    sub_10024D5E4((uint64_t)&unk_100E845B0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E84590);
  }
  return result;
}

unint64_t sub_10022A5CC()
{
  unint64_t result = qword_100E64670;
  if (!qword_100E64670)
  {
    sub_10018C6DC(&qword_100E64560);
    sub_10022C534();
    sub_10024D5E4((uint64_t)&unk_100E64690);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E64670);
  }
  return result;
}

unint64_t sub_10022A66C()
{
  unint64_t result = qword_100E64650;
  if (!qword_100E64650)
  {
    sub_10018C6DC(&qword_100E64540);
    sub_10022C6B4();
    sub_10024D5E4((uint64_t)&unk_100E645B0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E64650);
  }
  return result;
}

unint64_t sub_10022A70C()
{
  unint64_t result = qword_100E7C728;
  if (!qword_100E7C728)
  {
    sub_10018C6DC(&qword_100E7C720);
    sub_10022C750();
    sub_1001246C8(&qword_100E7C758, &qword_100E7C760);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E7C728);
  }
  return result;
}

unint64_t sub_10022A7AC()
{
  unint64_t result = qword_100E844C8;
  if (!qword_100E844C8)
  {
    sub_10018C6DC(&qword_100E84328);
    sub_10022C7F0();
    sub_10024D5E4((uint64_t)&unk_100E844E8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E844C8);
  }
  return result;
}

unint64_t sub_10022A84C()
{
  return sub_1000CE7D0((uint64_t)&unk_100EA1EA8);
}

unint64_t sub_10022A87C()
{
  unint64_t result = qword_100E74600;
  if (!qword_100E74600)
  {
    sub_10018C6DC(&qword_100E745F8);
    sub_10022C948();
    sub_100218460();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E74600);
  }
  return result;
}

unint64_t sub_10022A8F8()
{
  unint64_t result = qword_100E82C20;
  if (!qword_100E82C20)
  {
    sub_10018C6DC(&qword_100E82C28);
    sub_10022CEFC();
    sub_10024D5E4((uint64_t)&unk_100E82C58);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E82C20);
  }
  return result;
}

unint64_t sub_10022A998()
{
  unint64_t result = qword_100E8F020;
  if (!qword_100E8F020)
  {
    sub_10018C6DC(&qword_100E8F028);
    sub_1001C1C7C((uint64_t)&unk_100E8F030);
    sub_10024D5E4((uint64_t)&qword_100E64F80);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8F020);
  }
  return result;
}

unint64_t sub_10022AA64()
{
  unint64_t result = qword_100EAA6F8;
  if (!qword_100EAA6F8)
  {
    sub_10018C6DC(&qword_100EAA6D8);
    sub_100005DC4();
    sub_100218614();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAA6F8);
  }
  return result;
}

unint64_t sub_10022AAE0()
{
  unint64_t result = qword_100E83CE0;
  if (!qword_100E83CE0)
  {
    sub_10018C6DC(&qword_100E83C98);
    sub_1000070A0();
    sub_10022736C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E83CE0);
  }
  return result;
}

unint64_t sub_10022AB5C()
{
  unint64_t result = qword_100E7EAF0;
  if (!qword_100E7EAF0)
  {
    sub_10018C6DC(&qword_100E7EAF8);
    sub_1000056E0();
    sub_100145810(&qword_100E7EB30, (void (*)(uint64_t))type metadata accessor for TrackExposureModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E7EAF0);
  }
  return result;
}

unint64_t sub_10022AC08()
{
  unint64_t result = qword_100EA1868;
  if (!qword_100EA1868)
  {
    sub_10018C6DC(&qword_100EA1830);
    sub_10022E2D0();
    sub_10024D5E4((uint64_t)&qword_100E70D10);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA1868);
  }
  return result;
}

unint64_t sub_10022ACA8()
{
  unint64_t result = qword_100EB8248;
  if (!qword_100EB8248)
  {
    sub_10018C6DC(&qword_100EB8228);
    sub_1000068F8();
    sub_10024D5E4((uint64_t)&unk_100E63EC8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB8248);
  }
  return result;
}

unint64_t sub_10022AD48()
{
  unint64_t result = qword_100E830A8;
  if (!qword_100E830A8)
  {
    sub_10018C6DC(&qword_100E82B50);
    sub_10022E370();
    sub_10013509C((uint64_t)&unk_100E830D8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E830A8);
  }
  return result;
}

unint64_t sub_10022ADF4()
{
  unint64_t result = qword_100E83A20;
  if (!qword_100E83A20)
  {
    sub_10018C6DC(&qword_100E83258);
    sub_10022E448();
    sub_10024D5E4((uint64_t)&unk_100E64690);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E83A20);
  }
  return result;
}

unint64_t sub_10022AE94()
{
  unint64_t result = qword_100E83908;
  if (!qword_100E83908)
  {
    sub_10018C6DC(&qword_100E832A8);
    sub_10022E4FC();
    sub_10024D5E4((uint64_t)&unk_100E64690);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E83908);
  }
  return result;
}

unint64_t sub_10022AF34()
{
  unint64_t result = qword_100E838A8;
  if (!qword_100E838A8)
  {
    sub_10018C6DC(&qword_100E832B8);
    sub_10022E5B0();
    sub_10024D5E4((uint64_t)&unk_100E64690);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E838A8);
  }
  return result;
}

unint64_t sub_10022AFD4()
{
  unint64_t result = qword_100E83668;
  if (!qword_100E83668)
  {
    sub_10018C6DC(&qword_100E83350);
    sub_10022E664();
    sub_10024D5E4((uint64_t)&unk_100E64690);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E83668);
  }
  return result;
}

unint64_t sub_10022B074()
{
  unint64_t result = qword_100E837E0;
  if (!qword_100E837E0)
  {
    sub_10018C6DC(&qword_100E83300);
    sub_10022E718();
    sub_10024D5E4((uint64_t)&unk_100E64690);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E837E0);
  }
  return result;
}

unint64_t sub_10022B114()
{
  unint64_t result = qword_100E835B0;
  if (!qword_100E835B0)
  {
    sub_10018C6DC(&qword_100E83370);
    sub_10022E7CC();
    sub_10024D5E4((uint64_t)&unk_100E64690);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E835B0);
  }
  return result;
}

unint64_t sub_10022B1B4()
{
  unint64_t result = qword_100E83850;
  if (!qword_100E83850)
  {
    sub_10018C6DC(&qword_100E832F8);
    sub_10022E880();
    sub_10024D5E4((uint64_t)&unk_100E64690);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E83850);
  }
  return result;
}

unint64_t sub_10022B254()
{
  unint64_t result = qword_100E839C8;
  if (!qword_100E839C8)
  {
    sub_10018C6DC(&qword_100E83288);
    sub_10022E934();
    sub_10024D5E4((uint64_t)&unk_100E64690);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E839C8);
  }
  return result;
}

unint64_t sub_10022B2F4()
{
  unint64_t result = qword_100E83AD8;
  if (!qword_100E83AD8)
  {
    sub_10018C6DC(&qword_100E83238);
    sub_10022E9E8();
    sub_10024D5E4((uint64_t)&unk_100E64690);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E83AD8);
  }
  return result;
}

unint64_t sub_10022B394()
{
  unint64_t result = qword_100E83A80;
  if (!qword_100E83A80)
  {
    sub_10018C6DC(&qword_100E83250);
    sub_10022EA9C();
    sub_10024D5E4((uint64_t)&unk_100E64690);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E83A80);
  }
  return result;
}

unint64_t sub_10022B434()
{
  unint64_t result = qword_100E833C8;
  if (!qword_100E833C8)
  {
    sub_10018C6DC(&qword_100E83200);
    sub_10022EB50();
    sub_10024D5E4((uint64_t)&unk_100E64690);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E833C8);
  }
  return result;
}

unint64_t sub_10022B4D4()
{
  unint64_t result = qword_100E83610;
  if (!qword_100E83610)
  {
    sub_10018C6DC(&qword_100E83368);
    sub_10022EC04();
    sub_10024D5E4((uint64_t)&unk_100E64690);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E83610);
  }
  return result;
}

unint64_t sub_10022B574()
{
  unint64_t result = qword_100E83960;
  if (!qword_100E83960)
  {
    sub_10018C6DC(&qword_100E83290);
    sub_10022ECB8();
    sub_10024D5E4((uint64_t)&unk_100E64690);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E83960);
  }
  return result;
}

unint64_t sub_10022B614()
{
  unint64_t result = qword_100E836D0;
  if (!qword_100E836D0)
  {
    sub_10018C6DC(&qword_100E83348);
    sub_10022ED6C();
    sub_10024D5E4((uint64_t)&unk_100E64690);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E836D0);
  }
  return result;
}

unint64_t sub_10022B6B4()
{
  unint64_t result = qword_100E83480;
  if (!qword_100E83480)
  {
    sub_10018C6DC(&qword_100E83230);
    sub_10022EE20();
    sub_10024D5E4((uint64_t)&unk_100E64690);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E83480);
  }
  return result;
}

unint64_t sub_10022B754()
{
  unint64_t result = qword_100E834D8;
  if (!qword_100E834D8)
  {
    sub_10018C6DC(&qword_100E83208);
    sub_10022EED4();
    sub_10024D5E4((uint64_t)&unk_100E64690);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E834D8);
  }
  return result;
}

unint64_t sub_10022B7F4()
{
  unint64_t result = qword_100E83420;
  if (!qword_100E83420)
  {
    sub_10018C6DC(&qword_100E831E8);
    sub_10022EF88();
    sub_10024D5E4((uint64_t)&unk_100E64690);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E83420);
  }
  return result;
}

unint64_t sub_10022B894()
{
  unint64_t result = qword_100E83788;
  if (!qword_100E83788)
  {
    sub_10018C6DC(&qword_100E83318);
    sub_10022F03C();
    sub_10024D5E4((uint64_t)&unk_100E64690);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E83788);
  }
  return result;
}

unint64_t sub_10022B934()
{
  unint64_t result = qword_100E83728;
  if (!qword_100E83728)
  {
    sub_10018C6DC(&qword_100E83320);
    sub_10022F0F0();
    sub_10024D5E4((uint64_t)&unk_100E64690);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E83728);
  }
  return result;
}

unint64_t sub_10022B9D4()
{
  unint64_t result = qword_100E83558;
  if (!qword_100E83558)
  {
    sub_10018C6DC(&qword_100E833C0);
    sub_10022F1A4();
    sub_10024D5E4((uint64_t)&unk_100E64690);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E83558);
  }
  return result;
}

unint64_t sub_10022BA74()
{
  unint64_t result = qword_100E84248;
  if (!qword_100E84248)
  {
    sub_10018C6DC(&qword_100E83190);
    sub_10002679C();
    sub_10024D5E4((uint64_t)&unk_100E84268);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E84248);
  }
  return result;
}

unint64_t sub_10022BB14()
{
  unint64_t result = qword_100EAA8A0;
  if (!qword_100EAA8A0)
  {
    sub_10018C6DC(&qword_100EAA698);
    sub_100032120();
    sub_1001246C8((unint64_t *)&unk_100EAA8B0, &qword_100EAA7A0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAA8A0);
  }
  return result;
}

unint64_t sub_10022BBB4()
{
  unint64_t result = qword_100EA5F88;
  if (!qword_100EA5F88)
  {
    sub_10018C6DC(&qword_100E7A0E8);
    sub_10001AB70();
    sub_1000116FC((unint64_t *)&qword_100E66BF8, (void (*)(uint64_t))type metadata accessor for AutomationInfoViewModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA5F88);
  }
  return result;
}

unint64_t sub_10022BC60()
{
  unint64_t result = qword_100EA15C8;
  if (!qword_100EA15C8)
  {
    sub_10018C6DC(&qword_100EA15D0);
    sub_10001C918();
    sub_10024D5E4((uint64_t)&unk_100E94FD0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA15C8);
  }
  return result;
}

unint64_t sub_10022BD00()
{
  unint64_t result = qword_100E8F050;
  if (!qword_100E8F050)
  {
    sub_10018C6DC(&qword_100E8F058);
    sub_10022BD74();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8F050);
  }
  return result;
}

unint64_t sub_10022BD74()
{
  unint64_t result = qword_100E8F060;
  if (!qword_100E8F060)
  {
    sub_10018C6DC(&qword_100E8ED50);
    sub_100019668();
    sub_10024D5E4((uint64_t)&qword_100E80348);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8F060);
  }
  return result;
}

unint64_t sub_10022BE14()
{
  unint64_t result = qword_100EAA758;
  if (!qword_100EAA758)
  {
    sub_10018C6DC(&qword_100EAA668);
    sub_10002004C();
    sub_1001246C8((unint64_t *)&qword_100E64F80, (uint64_t *)&unk_100EAA770);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAA758);
  }
  return result;
}

unint64_t sub_10022BEB4()
{
  unint64_t result = qword_100EAA980;
  if (!qword_100EAA980)
  {
    sub_10018C6DC(&qword_100EAA988);
    sub_10022F564();
    sub_10021A068();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAA980);
  }
  return result;
}

unint64_t sub_10022BF30()
{
  unint64_t result = qword_100EB1C68;
  if (!qword_100EB1C68)
  {
    sub_10018C6DC(&qword_100EB1C10);
    sub_10022F744();
    sub_1001246C8(&qword_100EB1C78, &qword_100EB1C80);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB1C68);
  }
  return result;
}

unint64_t sub_10022BFD0()
{
  unint64_t result = qword_100E64618;
  if (!qword_100E64618)
  {
    sub_10018C6DC(&qword_100E644F8);
    sub_10005C814((uint64_t)&unk_100E64620);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E64618);
  }
  return result;
}

unint64_t sub_10022C06C()
{
  unint64_t result = qword_100E64638;
  if (!qword_100E64638)
  {
    sub_10018C6DC(&qword_100E64518);
    sub_10005C814((uint64_t)&unk_100E64640);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E64638);
  }
  return result;
}

unint64_t sub_10022C108()
{
  unint64_t result = qword_100E84520;
  if (!qword_100E84520)
  {
    sub_10018C6DC(&qword_100E84358);
    sub_10022F9AC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E84520);
  }
  return result;
}

unint64_t sub_10022C184()
{
  unint64_t result = qword_100E95338;
  if (!qword_100E95338)
  {
    sub_10018C6DC(&qword_100E952F0);
    sub_100005B78();
    sub_1001246C8(&qword_100E70D18, &qword_100E70D20);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E95338);
  }
  return result;
}

unint64_t sub_10022C224()
{
  unint64_t result = qword_100E84578;
  if (!qword_100E84578)
  {
    sub_10018C6DC(&qword_100E84480);
    sub_10022FAEC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E84578);
  }
  return result;
}

uint64_t sub_10022C2A0()
{
  return sub_10001AA18(&qword_100EB1CA8, &qword_100EB1C48, (void (*)(void))sub_100005868);
}

unint64_t sub_10022C2D0()
{
  unint64_t result = qword_100EADA70;
  if (!qword_100EADA70)
  {
    sub_10018C6DC(&qword_100EAD6D8);
    sub_100006FDC();
    sub_10013516C((uint64_t)&unk_100E66B20);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EADA70);
  }
  return result;
}

unint64_t sub_10022C37C()
{
  unint64_t result = qword_100E64598;
  if (!qword_100E64598)
  {
    sub_10018C6DC(&qword_100E64478);
    sub_10005C814((uint64_t)&unk_100E645A0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E64598);
  }
  return result;
}

unint64_t sub_10022C418()
{
  unint64_t result = qword_100E645C0;
  if (!qword_100E645C0)
  {
    sub_10018C6DC(&qword_100E644D0);
    sub_1000073B0();
    sub_10024D5E4((uint64_t)&unk_100E645E8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E645C0);
  }
  return result;
}

unint64_t sub_10022C4B8()
{
  unint64_t result = qword_100E84598;
  if (!qword_100E84598)
  {
    sub_10018C6DC(&qword_100E84498);
    sub_10022FFC8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E84598);
  }
  return result;
}

unint64_t sub_10022C534()
{
  unint64_t result = qword_100E64678;
  if (!qword_100E64678)
  {
    sub_10018C6DC(&qword_100E64558);
    sub_10005C814((uint64_t)&unk_100E64680);
    sub_10024D5E4((uint64_t)&unk_100E645B0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E64678);
  }
  return result;
}

unint64_t sub_10022C5F4()
{
  unint64_t result = qword_100E645F8;
  if (!qword_100E645F8)
  {
    sub_10018C6DC(&qword_100E644E0);
    sub_10005C814((uint64_t)&unk_100E64600);
    sub_10024D5E4((uint64_t)&unk_100E645B0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E645F8);
  }
  return result;
}

unint64_t sub_10022C6B4()
{
  unint64_t result = qword_100E64658;
  if (!qword_100E64658)
  {
    sub_10018C6DC(&qword_100E64538);
    sub_10005C814((uint64_t)&unk_100E64660);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E64658);
  }
  return result;
}

unint64_t sub_10022C750()
{
  unint64_t result = qword_100E7C730;
  if (!qword_100E7C730)
  {
    sub_10018C6DC(&qword_100E7C708);
    sub_100230068();
    sub_1001246C8(&qword_100E7C748, &qword_100E7C750);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E7C730);
  }
  return result;
}

unint64_t sub_10022C7F0()
{
  unint64_t result = qword_100E844D0;
  if (!qword_100E844D0)
  {
    sub_10018C6DC(&qword_100E84320);
    sub_100230108();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E844D0);
  }
  return result;
}

unint64_t sub_10022C86C()
{
  return sub_1000CE7D0((uint64_t)&unk_100EA1EB0);
}

unint64_t sub_10022C89C()
{
  unint64_t result = qword_100E83DA0;
  if (!qword_100E83DA0)
  {
    sub_10018C6DC(&qword_100E83D80);
    sub_100230370();
    sub_10013509C((uint64_t)&unk_100E83DC8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E83DA0);
  }
  return result;
}

unint64_t sub_10022C948()
{
  unint64_t result = qword_100E74608;
  if (!qword_100E74608)
  {
    sub_10018C6DC(&qword_100E74610);
    sub_1002304EC();
    sub_100076280((uint64_t)&unk_100E74628);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E74608);
  }
  return result;
}

unint64_t sub_10022C9F4()
{
  unint64_t result = qword_100EAD810;
  if (!qword_100EAD810)
  {
    sub_10018C6DC(&qword_100EAD818);
    sub_100007228();
    sub_10022736C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAD810);
  }
  return result;
}

unint64_t sub_10022CA70()
{
  unint64_t result = qword_100EAD8D0;
  if (!qword_100EAD8D0)
  {
    sub_10018C6DC(&qword_100EAD8D8);
    sub_10000639C();
    sub_10022736C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAD8D0);
  }
  return result;
}

unint64_t sub_10022CAEC()
{
  unint64_t result = qword_100EAD980;
  if (!qword_100EAD980)
  {
    sub_10018C6DC(&qword_100EAD988);
    sub_100006D90();
    sub_10022736C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAD980);
  }
  return result;
}

unint64_t sub_10022CB68()
{
  unint64_t result = qword_100EAD790;
  if (!qword_100EAD790)
  {
    sub_10018C6DC(&qword_100EAD798);
    sub_1000065E8();
    sub_10022736C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAD790);
  }
  return result;
}

unint64_t sub_10022CBE4()
{
  unint64_t result = qword_100EAD8F0;
  if (!qword_100EAD8F0)
  {
    sub_10018C6DC(&qword_100EAD8F8);
    sub_1000079D0();
    sub_10022736C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAD8F0);
  }
  return result;
}

unint64_t sub_10022CC60()
{
  unint64_t result = qword_100EAD7E0;
  if (!qword_100EAD7E0)
  {
    sub_10018C6DC(&qword_100EAD7E8);
    sub_100005FC8();
    sub_10022736C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAD7E0);
  }
  return result;
}

unint64_t sub_10022CCDC()
{
  unint64_t result = qword_100EAD8A0;
  if (!qword_100EAD8A0)
  {
    sub_10018C6DC(&qword_100EAD8A8);
    sub_100006460();
    sub_10022736C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAD8A0);
  }
  return result;
}

unint64_t sub_10022CD58()
{
  unint64_t result = qword_100EAD880;
  if (!qword_100EAD880)
  {
    sub_10018C6DC(&qword_100EAD888);
    sub_1000076C0();
    sub_10022736C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAD880);
  }
  return result;
}

unint64_t sub_10022CDD4()
{
  unint64_t result = qword_100EAD950;
  if (!qword_100EAD950)
  {
    sub_10018C6DC(&qword_100EAD958);
    sub_10000608C();
    sub_10022736C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAD950);
  }
  return result;
}

unint64_t sub_10022CE50()
{
  unint64_t result = qword_100EAD930;
  if (!qword_100EAD930)
  {
    sub_10018C6DC(&qword_100EAD938);
    sub_100006524();
    sub_10022736C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAD930);
  }
  return result;
}

unint64_t sub_10022CECC()
{
  return sub_1001C1C7C((uint64_t)&unk_100E8EE28);
}

unint64_t sub_10022CEFC()
{
  unint64_t result = qword_100E82C30;
  if (!qword_100E82C30)
  {
    sub_10018C6DC(&qword_100E82C38);
    sub_10020CDCC();
    sub_10024D5E4((uint64_t)&unk_100E82C58);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E82C30);
  }
  return result;
}

unint64_t sub_10022CF9C()
{
  unint64_t result = qword_100EA1708;
  if (!qword_100EA1708)
  {
    sub_10018C6DC(&qword_100EA1710);
    sub_10024D5E4((uint64_t)&unk_100EA16F8);
    sub_100219CD0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA1708);
  }
  return result;
}

unint64_t sub_10022D03C()
{
  unint64_t result = qword_100EA16F0;
  if (!qword_100EA16F0)
  {
    sub_10018C6DC(&qword_100EA16A8);
    sub_10024D5E4((uint64_t)&unk_100EA16F8);
    sub_1002189CC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA16F0);
  }
  return result;
}

unint64_t sub_10022D0DC()
{
  unint64_t result = qword_100E83A58;
  if (!qword_100E83A58)
  {
    sub_10018C6DC(&qword_100E83A60);
    sub_10024D5E4((uint64_t)&unk_100E83A68);
    sub_10013509C((uint64_t)&qword_100E829E8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E83A58);
  }
  return result;
}

unint64_t sub_10022D1AC()
{
  unint64_t result = qword_100E83940;
  if (!qword_100E83940)
  {
    sub_10018C6DC(&qword_100E83948);
    sub_10024D5E4((uint64_t)&unk_100E83950);
    sub_10013509C((uint64_t)&qword_100E829E8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E83940);
  }
  return result;
}

unint64_t sub_10022D27C()
{
  unint64_t result = qword_100E838E0;
  if (!qword_100E838E0)
  {
    sub_10018C6DC(&qword_100E838E8);
    sub_10024D5E4((uint64_t)&unk_100E838F0);
    sub_10013509C((uint64_t)&qword_100E829E8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E838E0);
  }
  return result;
}

unint64_t sub_10022D34C()
{
  unint64_t result = qword_100E836A0;
  if (!qword_100E836A0)
  {
    sub_10018C6DC(&qword_100E836A8);
    sub_10024D5E4((uint64_t)&unk_100E836B0);
    sub_10013509C((uint64_t)&qword_100E829E8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E836A0);
  }
  return result;
}

unint64_t sub_10022D41C()
{
  unint64_t result = qword_100E83818;
  if (!qword_100E83818)
  {
    sub_10018C6DC(&qword_100E83820);
    sub_10024D5E4((uint64_t)&unk_100E83828);
    sub_10013509C((uint64_t)&qword_100E829E8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E83818);
  }
  return result;
}

unint64_t sub_10022D4EC()
{
  unint64_t result = qword_100E835E8;
  if (!qword_100E835E8)
  {
    sub_10018C6DC(&qword_100E835F0);
    sub_10024D5E4((uint64_t)&unk_100E835F8);
    sub_10013509C((uint64_t)&qword_100E829E8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E835E8);
  }
  return result;
}

unint64_t sub_10022D5BC()
{
  unint64_t result = qword_100E83888;
  if (!qword_100E83888)
  {
    sub_10018C6DC(&qword_100E83890);
    sub_10024D5E4((uint64_t)&unk_100E83898);
    sub_10013509C((uint64_t)&qword_100E829E8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E83888);
  }
  return result;
}

unint64_t sub_10022D68C()
{
  unint64_t result = qword_100E83A00;
  if (!qword_100E83A00)
  {
    sub_10018C6DC(&qword_100E83A08);
    sub_10024D5E4((uint64_t)&unk_100E83A10);
    sub_10013509C((uint64_t)&qword_100E829E8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E83A00);
  }
  return result;
}

unint64_t sub_10022D75C()
{
  unint64_t result = qword_100E83B10;
  if (!qword_100E83B10)
  {
    sub_10018C6DC(&qword_100E83B18);
    sub_10024D5E4((uint64_t)&unk_100E83B20);
    sub_10013509C((uint64_t)&qword_100E829E8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E83B10);
  }
  return result;
}

unint64_t sub_10022D82C()
{
  unint64_t result = qword_100E83AB8;
  if (!qword_100E83AB8)
  {
    sub_10018C6DC(&qword_100E83AC0);
    sub_10024D5E4((uint64_t)&unk_100E83AC8);
    sub_10013509C((uint64_t)&qword_100E829E8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E83AB8);
  }
  return result;
}

unint64_t sub_10022D8FC()
{
  unint64_t result = qword_100E83400;
  if (!qword_100E83400)
  {
    sub_10018C6DC(&qword_100E83408);
    sub_10024D5E4((uint64_t)&unk_100E83410);
    sub_10013509C((uint64_t)&qword_100E829E8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E83400);
  }
  return result;
}

unint64_t sub_10022D9CC()
{
  unint64_t result = qword_100E83648;
  if (!qword_100E83648)
  {
    sub_10018C6DC(&qword_100E83650);
    sub_10024D5E4((uint64_t)&unk_100E83658);
    sub_10013509C((uint64_t)&qword_100E829E8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E83648);
  }
  return result;
}

unint64_t sub_10022DA9C()
{
  unint64_t result = qword_100E83998;
  if (!qword_100E83998)
  {
    sub_10018C6DC(&qword_100E839A0);
    sub_10024D5E4((uint64_t)&unk_100E839A8);
    sub_10013509C((uint64_t)&qword_100E829E8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E83998);
  }
  return result;
}

unint64_t sub_10022DB6C()
{
  unint64_t result = qword_100E83708;
  if (!qword_100E83708)
  {
    sub_10018C6DC(&qword_100E83710);
    sub_10024D5E4((uint64_t)&unk_100E83718);
    sub_10013509C((uint64_t)&qword_100E829E8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E83708);
  }
  return result;
}

unint64_t sub_10022DC3C()
{
  unint64_t result = qword_100E834B8;
  if (!qword_100E834B8)
  {
    sub_10018C6DC(&qword_100E834C0);
    sub_10024D5E4((uint64_t)&unk_100E834C8);
    sub_10013509C((uint64_t)&qword_100E829E8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E834B8);
  }
  return result;
}

unint64_t sub_10022DD0C()
{
  unint64_t result = qword_100E83510;
  if (!qword_100E83510)
  {
    sub_10018C6DC(&qword_100E83518);
    sub_10024D5E4((uint64_t)&unk_100E83520);
    sub_10013509C((uint64_t)&qword_100E829E8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E83510);
  }
  return result;
}

unint64_t sub_10022DDDC()
{
  unint64_t result = qword_100E83458;
  if (!qword_100E83458)
  {
    sub_10018C6DC(&qword_100E83460);
    sub_10024D5E4((uint64_t)&unk_100E83468);
    sub_10013509C((uint64_t)&qword_100E829E8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E83458);
  }
  return result;
}

unint64_t sub_10022DEAC()
{
  unint64_t result = qword_100E837C0;
  if (!qword_100E837C0)
  {
    sub_10018C6DC(&qword_100E837C8);
    sub_10024D5E4((uint64_t)&unk_100E837D0);
    sub_10013509C((uint64_t)&qword_100E829E8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E837C0);
  }
  return result;
}

unint64_t sub_10022DF7C()
{
  unint64_t result = qword_100E83760;
  if (!qword_100E83760)
  {
    sub_10018C6DC(&qword_100E83768);
    sub_10024D5E4((uint64_t)&unk_100E83770);
    sub_10013509C((uint64_t)&qword_100E829E8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E83760);
  }
  return result;
}

unint64_t sub_10022E04C()
{
  unint64_t result = qword_100E83590;
  if (!qword_100E83590)
  {
    sub_10018C6DC(&qword_100E83598);
    sub_10024D5E4((uint64_t)&unk_100E835A0);
    sub_10013509C((uint64_t)&qword_100E829E8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E83590);
  }
  return result;
}

unint64_t sub_10022E11C()
{
  unint64_t result = qword_100E6B9D0;
  if (!qword_100E6B9D0)
  {
    sub_10018C6DC(&qword_100E6B9C8);
    sub_1001246C8(&qword_100E6B9D8, &qword_100E6B9B8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6B9D0);
  }
  return result;
}

unint64_t sub_10022E1BC()
{
  unint64_t result = qword_100E8ED78;
  if (!qword_100E8ED78)
  {
    sub_10018C6DC(&qword_100E8ED60);
    sub_10024D5E4((uint64_t)&unk_100E8ED80);
    sub_10022764C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8ED78);
  }
  return result;
}

unint64_t sub_10022E25C()
{
  unint64_t result = qword_100E77388;
  if (!qword_100E77388)
  {
    sub_10018C6DC(&qword_100E77370);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E77388);
  }
  return result;
}

unint64_t sub_10022E2D0()
{
  unint64_t result = qword_100EA1870;
  if (!qword_100EA1870)
  {
    sub_10018C6DC(&qword_100EA1828);
    sub_10024D5E4((uint64_t)&unk_100EA1878);
    sub_100217710();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA1870);
  }
  return result;
}

unint64_t sub_10022E370()
{
  unint64_t result = qword_100E830B0;
  if (!qword_100E830B0)
  {
    sub_10018C6DC(&qword_100E82B40);
    sub_10008AD4C((uint64_t)&unk_100E830B8);
    sub_10024D5E4((uint64_t)&unk_100E830D0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E830B0);
  }
  return result;
}

unint64_t sub_10022E448()
{
  unint64_t result = qword_100E83A28;
  if (!qword_100E83A28)
  {
    sub_10018C6DC(&qword_100E83A30);
    sub_10008AD4C((uint64_t)&unk_100E83A38);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E83A28);
  }
  return result;
}

unint64_t sub_10022E4FC()
{
  unint64_t result = qword_100E83910;
  if (!qword_100E83910)
  {
    sub_10018C6DC(&qword_100E83918);
    sub_10008AD4C((uint64_t)&unk_100E83920);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E83910);
  }
  return result;
}

unint64_t sub_10022E5B0()
{
  unint64_t result = qword_100E838B0;
  if (!qword_100E838B0)
  {
    sub_10018C6DC(&qword_100E838B8);
    sub_10008AD4C((uint64_t)&unk_100E838C0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E838B0);
  }
  return result;
}

unint64_t sub_10022E664()
{
  unint64_t result = qword_100E83670;
  if (!qword_100E83670)
  {
    sub_10018C6DC(&qword_100E83678);
    sub_10008AD4C((uint64_t)&unk_100E83680);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E83670);
  }
  return result;
}

unint64_t sub_10022E718()
{
  unint64_t result = qword_100E837E8;
  if (!qword_100E837E8)
  {
    sub_10018C6DC(&qword_100E837F0);
    sub_10008AD4C((uint64_t)&unk_100E837F8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E837E8);
  }
  return result;
}

unint64_t sub_10022E7CC()
{
  unint64_t result = qword_100E835B8;
  if (!qword_100E835B8)
  {
    sub_10018C6DC(&qword_100E835C0);
    sub_10008AD4C((uint64_t)&unk_100E835C8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E835B8);
  }
  return result;
}

unint64_t sub_10022E880()
{
  unint64_t result = qword_100E83858;
  if (!qword_100E83858)
  {
    sub_10018C6DC(&qword_100E83860);
    sub_10008AD4C((uint64_t)&unk_100E83868);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E83858);
  }
  return result;
}

unint64_t sub_10022E934()
{
  unint64_t result = qword_100E839D0;
  if (!qword_100E839D0)
  {
    sub_10018C6DC(&qword_100E839D8);
    sub_10008AD4C((uint64_t)&unk_100E839E0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E839D0);
  }
  return result;
}

unint64_t sub_10022E9E8()
{
  unint64_t result = qword_100E83AE0;
  if (!qword_100E83AE0)
  {
    sub_10018C6DC(&qword_100E83AE8);
    sub_10008AD4C((uint64_t)&unk_100E83AF0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E83AE0);
  }
  return result;
}

unint64_t sub_10022EA9C()
{
  unint64_t result = qword_100E83A88;
  if (!qword_100E83A88)
  {
    sub_10018C6DC(&qword_100E83A90);
    sub_10008AD4C((uint64_t)&unk_100E83A98);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E83A88);
  }
  return result;
}

unint64_t sub_10022EB50()
{
  unint64_t result = qword_100E833D0;
  if (!qword_100E833D0)
  {
    sub_10018C6DC(&qword_100E833D8);
    sub_10008AD4C((uint64_t)&unk_100E833E0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E833D0);
  }
  return result;
}

unint64_t sub_10022EC04()
{
  unint64_t result = qword_100E83618;
  if (!qword_100E83618)
  {
    sub_10018C6DC(&qword_100E83620);
    sub_10008AD4C((uint64_t)&unk_100E83628);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E83618);
  }
  return result;
}

unint64_t sub_10022ECB8()
{
  unint64_t result = qword_100E83968;
  if (!qword_100E83968)
  {
    sub_10018C6DC(&qword_100E83970);
    sub_10008AD4C((uint64_t)&unk_100E83978);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E83968);
  }
  return result;
}

unint64_t sub_10022ED6C()
{
  unint64_t result = qword_100E836D8;
  if (!qword_100E836D8)
  {
    sub_10018C6DC(&qword_100E836E0);
    sub_10008AD4C((uint64_t)&unk_100E836E8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E836D8);
  }
  return result;
}

unint64_t sub_10022EE20()
{
  unint64_t result = qword_100E83488;
  if (!qword_100E83488)
  {
    sub_10018C6DC(&qword_100E83490);
    sub_10008AD4C((uint64_t)&unk_100E83498);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E83488);
  }
  return result;
}

unint64_t sub_10022EED4()
{
  unint64_t result = qword_100E834E0;
  if (!qword_100E834E0)
  {
    sub_10018C6DC(&qword_100E834E8);
    sub_10008AD4C((uint64_t)&unk_100E834F0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E834E0);
  }
  return result;
}

unint64_t sub_10022EF88()
{
  unint64_t result = qword_100E83428;
  if (!qword_100E83428)
  {
    sub_10018C6DC(&qword_100E83430);
    sub_10008AD4C((uint64_t)&unk_100E83438);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E83428);
  }
  return result;
}

unint64_t sub_10022F03C()
{
  unint64_t result = qword_100E83790;
  if (!qword_100E83790)
  {
    sub_10018C6DC(&qword_100E83798);
    sub_10008AD4C((uint64_t)&unk_100E837A0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E83790);
  }
  return result;
}

unint64_t sub_10022F0F0()
{
  unint64_t result = qword_100E83730;
  if (!qword_100E83730)
  {
    sub_10018C6DC(&qword_100E83738);
    sub_10008AD4C((uint64_t)&unk_100E83740);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E83730);
  }
  return result;
}

unint64_t sub_10022F1A4()
{
  unint64_t result = qword_100E83560;
  if (!qword_100E83560)
  {
    sub_10018C6DC(&qword_100E83568);
    sub_10008AD4C((uint64_t)&unk_100E83570);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E83560);
  }
  return result;
}

unint64_t sub_10022F258()
{
  unint64_t result = qword_100E65970;
  if (!qword_100E65970)
  {
    sub_10018C6DC(&qword_100E65968);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E65970);
  }
  return result;
}

unint64_t sub_10022F2CC()
{
  unint64_t result = qword_100E6DE20;
  if (!qword_100E6DE20)
  {
    sub_10018C6DC(&qword_100E6DE28);
    sub_1001246C8(&qword_100E6DE30, &qword_100E6DE38);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6DE20);
  }
  return result;
}

unint64_t sub_10022F36C()
{
  unint64_t result = qword_100E6B980;
  if (!qword_100E6B980)
  {
    sub_10018C6DC(&qword_100E6B978);
    sub_1002273B8();
    sub_1001246C8(&qword_100E6B990, &qword_100E6B998);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6B980);
  }
  return result;
}

unint64_t sub_10022F40C()
{
  unint64_t result = qword_100E8EBE8;
  if (!qword_100E8EBE8)
  {
    sub_10018C6DC(&qword_100E8EBF0);
    sub_10015180C((uint64_t)&qword_100E6B988);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8EBE8);
  }
  return result;
}

unint64_t sub_10022F4B8()
{
  unint64_t result = qword_100EB1C88;
  if (!qword_100EB1C88)
  {
    sub_10018C6DC(&qword_100EB1C30);
    sub_1000E8A44(&qword_100E80328, (void (*)(uint64_t))&type metadata accessor for ButtonStyleConfiguration.Label);
    sub_1000E7DD8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB1C88);
  }
  return result;
}

unint64_t sub_10022F564()
{
  unint64_t result = qword_100EAA990;
  if (!qword_100EAA990)
  {
    sub_10018C6DC(&qword_100EAA998);
    sub_1001246C8(&qword_100EAA9A0, &qword_100EAA9A8);
    sub_10022736C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAA990);
  }
  return result;
}

unint64_t sub_10022F604()
{
  unint64_t result = qword_100EAAA00;
  if (!qword_100EAAA00)
  {
    sub_10018C6DC(&qword_100EAAA08);
    sub_1001246C8(&qword_100EAAA10, &qword_100EAAA18);
    sub_10022736C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAAA00);
  }
  return result;
}

unint64_t sub_10022F6A4()
{
  unint64_t result = qword_100EA5F58;
  if (!qword_100EA5F58)
  {
    sub_10018C6DC(&qword_100EA5F50);
    sub_1001246C8(&qword_100EA5F60, &qword_100EA5F68);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA5F58);
  }
  return result;
}

unint64_t sub_10022F744()
{
  unint64_t result = qword_100EB1C70;
  if (!qword_100EB1C70)
  {
    sub_10018C6DC(&qword_100EB1C08);
    sub_1001246C8(&qword_100EB1C28, &qword_100EB1C20);
    sub_1000E8A44((unint64_t *)&qword_100EAACA0, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB1C70);
  }
  return result;
}

unint64_t sub_10022F814()
{
  unint64_t result = qword_100E85A40;
  if (!qword_100E85A40)
  {
    sub_10018C6DC(&qword_100E85A30);
    sub_1002274B0();
    sub_100225748();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E85A40);
  }
  return result;
}

unint64_t sub_10022F890()
{
  unint64_t result = qword_100EA1F80;
  if (!qword_100EA1F80)
  {
    sub_10018C6DC(&qword_100EA1F88);
    sub_10024D5E4((uint64_t)&unk_100EA1F90);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA1F80);
  }
  return result;
}

unint64_t sub_10022F930()
{
  unint64_t result = qword_100EB7270;
  if (!qword_100EB7270)
  {
    sub_10018C6DC(&qword_100EB7268);
    sub_100227504();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB7270);
  }
  return result;
}

unint64_t sub_10022F9AC()
{
  unint64_t result = qword_100E84528;
  if (!qword_100E84528)
  {
    sub_10018C6DC(&qword_100E84350);
    sub_10024D5E4((uint64_t)&unk_100E84530);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E84528);
  }
  return result;
}

unint64_t sub_10022FA4C()
{
  unint64_t result = qword_100E8EFC0;
  if (!qword_100E8EFC0)
  {
    sub_10018C6DC(&qword_100E8EB90);
    sub_10024D5E4((uint64_t)&unk_100E8EFC8);
    sub_100217A50();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8EFC0);
  }
  return result;
}

unint64_t sub_10022FAEC()
{
  unint64_t result = qword_100E84580;
  if (!qword_100E84580)
  {
    sub_10018C6DC(&qword_100E84478);
    sub_10024D5E4((uint64_t)&unk_100E84588);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E84580);
  }
  return result;
}

unint64_t sub_10022FB8C()
{
  unint64_t result = qword_100EA1F50;
  if (!qword_100EA1F50)
  {
    sub_10018C6DC(&qword_100EA1DE0);
    sub_10024D5E4((uint64_t)&unk_100EA1F58);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA1F50);
  }
  return result;
}

unint64_t sub_10022FC2C()
{
  unint64_t result = qword_100E842D8;
  if (!qword_100E842D8)
  {
    sub_10018C6DC(&qword_100E83C88);
    sub_10024D5E4((uint64_t)&unk_100E842E0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E842D8);
  }
  return result;
}

unint64_t sub_10022FCCC()
{
  unint64_t result = qword_100E84308;
  if (!qword_100E84308)
  {
    sub_10018C6DC(&qword_100E83DF0);
    sub_10024D5E4((uint64_t)&unk_100E84310);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E84308);
  }
  return result;
}

unint64_t sub_10022FD6C()
{
  unint64_t result = qword_100E65978;
  if (!qword_100E65978)
  {
    sub_10018C6DC(&qword_100E65958);
    sub_1001246C8(&qword_100E65980, &qword_100E65988);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E65978);
  }
  return result;
}

unint64_t sub_10022FE0C()
{
  unint64_t result = qword_100EA1F70;
  if (!qword_100EA1F70)
  {
    sub_10018C6DC(&qword_100EA1DF8);
    sub_10024D5E4((uint64_t)&unk_100EA1F78);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA1F70);
  }
  return result;
}

unint64_t sub_10022FEAC()
{
  unint64_t result = qword_100E8EFF8;
  if (!qword_100E8EFF8)
  {
    sub_10018C6DC(&qword_100E8EBB8);
    sub_10024D5E4((uint64_t)&unk_100E8F000);
    sub_100224B5C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8EFF8);
  }
  return result;
}

unint64_t sub_10022FF4C()
{
  unint64_t result = qword_100E817E0;
  if (!qword_100E817E0)
  {
    sub_10018C6DC(&qword_100E817E8);
    sub_100227558();
    sub_100227408();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E817E0);
  }
  return result;
}

unint64_t sub_10022FFC8()
{
  unint64_t result = qword_100E845A0;
  if (!qword_100E845A0)
  {
    sub_10018C6DC(&qword_100E84490);
    sub_10024D5E4((uint64_t)&unk_100E845A8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E845A0);
  }
  return result;
}

unint64_t sub_100230068()
{
  unint64_t result = qword_100E7C738;
  if (!qword_100E7C738)
  {
    sub_10018C6DC(&qword_100E7C700);
    sub_1001246C8(&qword_100E7C740, &qword_100E7C710);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E7C738);
  }
  return result;
}

unint64_t sub_100230108()
{
  unint64_t result = qword_100E844D8;
  if (!qword_100E844D8)
  {
    sub_10018C6DC(&qword_100E84318);
    sub_10024D5E4((uint64_t)&unk_100E844E0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E844D8);
  }
  return result;
}

unint64_t sub_1002301A8()
{
  unint64_t result = qword_100EAD6F8;
  if (!qword_100EAD6F8)
  {
    sub_10018C6DC(&qword_100EAD6F0);
    sub_10022794C();
    sub_10024D5E4((uint64_t)&unk_100E70EF0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAD6F8);
  }
  return result;
}

unint64_t sub_100230248()
{
  unint64_t result = qword_100E7CFB8;
  if (!qword_100E7CFB8)
  {
    sub_10018C6DC(&qword_100E7CF70);
    sub_10001E3CC();
    sub_1002186A4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E7CFB8);
  }
  return result;
}

unint64_t sub_1002302C4()
{
  unint64_t result = qword_100EA1EB8;
  if (!qword_100EA1EB8)
  {
    sub_10018C6DC(&qword_100EA1E78);
    sub_100135128((uint64_t)&unk_100EA1EC0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA1EB8);
  }
  return result;
}

unint64_t sub_100230370()
{
  unint64_t result = qword_100E83DA8;
  if (!qword_100E83DA8)
  {
    sub_10018C6DC(&qword_100E83D78);
    sub_10013509C((uint64_t)&unk_100E83DB0);
    sub_10024D5E4((uint64_t)&unk_100E83DB8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E83DA8);
  }
  return result;
}

unint64_t sub_100230440()
{
  unint64_t result = qword_100E8F048;
  if (!qword_100E8F048)
  {
    sub_10018C6DC(&qword_100E8ED38);
    sub_10015180C((uint64_t)&qword_100E8D970);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8F048);
  }
  return result;
}

unint64_t sub_1002304EC()
{
  unint64_t result = qword_100E74618;
  if (!qword_100E74618)
  {
    sub_10018C6DC(&qword_100E74620);
    sub_100076280((uint64_t)&unk_100E74308);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E74618);
  }
  return result;
}

unint64_t sub_100230598()
{
  unint64_t result = qword_100E8EE30;
  if (!qword_100E8EE30)
  {
    sub_10018C6DC(&qword_100E8EDC8);
    sub_10015180C((uint64_t)&qword_100E64F78);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8EE30);
  }
  return result;
}

unint64_t sub_100230644()
{
  unint64_t result = qword_100EA1548;
  if (!qword_100EA1548)
  {
    sub_10018C6DC(&qword_100EA14E0);
    sub_10021C00C();
    sub_100135128((uint64_t)&qword_100E66BF8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA1548);
  }
  return result;
}

void sub_1002306F0()
{
  if (!qword_100E63C90)
  {
    sub_100146A70();
    unint64_t v0 = type metadata accessor for ScaledMetric();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100E63C90);
    }
  }
}

void sub_10023074C()
{
  if (!qword_100E73AF0)
  {
    sub_10014F1B0();
    unint64_t v0 = type metadata accessor for ScaledMetric();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100E73AF0);
    }
  }
}

uint64_t sub_1002307A8()
{
  return WindowGroup.init(id:title:lazyContent:)();
}

void sub_1002307EC()
{
  if (!qword_100E66A18)
  {
    sub_10018C6DC(&qword_100E669A0);
    unint64_t v0 = type metadata accessor for Environment.Content();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100E66A18);
    }
  }
}

void sub_100230848()
{
  if (!qword_100E63C88)
  {
    type metadata accessor for Font.Context();
    unint64_t v0 = type metadata accessor for Environment.Content();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100E63C88);
    }
  }
}

void sub_1002308A0()
{
  if (!qword_100E66100)
  {
    sub_10018C6DC(&qword_100E65ED8);
    unint64_t v0 = type metadata accessor for Environment.Content();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100E66100);
    }
  }
}

void sub_1002308FC()
{
  if (!qword_100E6DC90)
  {
    type metadata accessor for ScenePhase();
    unint64_t v0 = type metadata accessor for Environment.Content();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100E6DC90);
    }
  }
}

void sub_100230954()
{
  if (!qword_100E63C78)
  {
    type metadata accessor for ContentSizeCategory();
    unint64_t v0 = type metadata accessor for Environment.Content();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100E63C78);
    }
  }
}

void sub_1002309AC()
{
  if (!qword_100E63C80)
  {
    type metadata accessor for DisplayMetrics();
    unint64_t v0 = type metadata accessor for Environment.Content();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100E63C80);
    }
  }
}

void sub_100230A04()
{
  if (!qword_100E78D58)
  {
    sub_10018C6DC(&qword_100E65FA8);
    unint64_t v0 = type metadata accessor for Environment.Content();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100E78D58);
    }
  }
}

void sub_100230A60()
{
}

unint64_t sub_100230A78()
{
  unint64_t result = qword_100EB4FF0;
  if (!qword_100EB4FF0)
  {
    sub_10018C6DC(&qword_100EB4FE8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB4FF0);
  }
  return result;
}

double sub_100230ACC()
{
  double result = 0.0;
  xmmword_100F51D48 = 0u;
  *(_OWORD *)&qword_100F51D58 = 0u;
  return result;
}

uint64_t sub_100230AE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10017DF08(&qword_100E6CCE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_100230B48()
{
  if (!qword_100E766D8)
  {
    unint64_t v0 = type metadata accessor for Published();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100E766D8);
    }
  }
}

void sub_100230B94()
{
  if (!qword_100EABB48)
  {
    unint64_t v0 = type metadata accessor for Published();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100EABB48);
    }
  }
}

void sub_100230BE0()
{
  if (!qword_100E6BA50)
  {
    unint64_t v0 = type metadata accessor for Published();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100E6BA50);
    }
  }
}

uint64_t sub_100230C2C(uint64_t a1)
{
  return sub_10017AB60(a1, qword_100F520B8);
}

uint64_t sub_100230C4C(uint64_t a1)
{
  return sub_1001A2688(a1, qword_100F51DF8);
}

uint64_t sub_100230C68(uint64_t a1)
{
  return sub_1001A2688(a1, qword_100F51D98);
}

uint64_t sub_100230C84(uint64_t a1)
{
  return sub_10017D7F8(a1, qword_100F520D0);
}

uint64_t sub_100230C98(uint64_t a1)
{
  return sub_10017D7F8(a1, qword_100F52040);
}

uint64_t sub_100230CAC(uint64_t a1)
{
  return sub_10017D7F8(a1, qword_100F51E28);
}

uint64_t sub_100230CC0(uint64_t a1)
{
  return sub_10017D7F8(a1, qword_100F51DB0);
}

uint64_t sub_100230CD4(uint64_t a1)
{
  return sub_1001A1004(a1, qword_100F51E88);
}

uint64_t sub_100230CE8(uint64_t a1)
{
  return sub_1001882AC(a1, qword_100F520A0);
}

uint64_t sub_100230D08(uint64_t a1)
{
  return sub_1001882AC(a1, qword_100F52070);
}

uint64_t sub_100230D28(uint64_t a1)
{
  return sub_1001882AC(a1, qword_100F51E10);
}

uint64_t sub_100230D48(uint64_t a1)
{
  return sub_1001882AC(a1, qword_100F51F98);
}

uint64_t sub_100230D68(uint64_t a1)
{
  return sub_10009779C(a1, qword_100F51F08);
}

uint64_t sub_100230D94(uint64_t a1)
{
  return sub_100181938(a1, qword_100F51F80);
}

uint64_t sub_100230DBC(uint64_t a1)
{
  return sub_100181938(a1, qword_100F51DE0);
}

uint64_t sub_100230DE4(uint64_t a1)
{
  return sub_100180708(a1, qword_100F51F68);
}

uint64_t sub_100230E08(uint64_t a1)
{
  return sub_100180708(a1, qword_100F51DC8);
}

uint64_t sub_100230E2C(uint64_t a1)
{
  return sub_1001882AC(a1, qword_100F51F50);
}

uint64_t sub_100230E4C(uint64_t a1)
{
  return sub_10019F4B4(a1, qword_100F51E40);
}

uint64_t sub_100230E70(uint64_t a1)
{
  return sub_1001882AC(a1, qword_100F52088);
}

uint64_t sub_100230E90(uint64_t a1, char a2)
{
  if (a2) {
    return swift_errorRetain();
  }
  return result;
}

uint64_t sub_100230E9C(uint64_t a1, char a2)
{
  if (a2) {
    return swift_errorRelease();
  }
  return result;
}

unint64_t sub_100230EA8()
{
  unint64_t result = qword_100E96678;
  if (!qword_100E96678)
  {
    sub_10018C6DC(&qword_100E85F80);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E96678);
  }
  return result;
}

unint64_t sub_100230F14()
{
  unint64_t result = qword_100E76060;
  if (!qword_100E76060)
  {
    sub_10018C6DC(&qword_100E76058);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E76060);
  }
  return result;
}

unint64_t sub_100230F68()
{
  unint64_t result = qword_100E731D0;
  if (!qword_100E731D0)
  {
    sub_10018C6DC(&qword_100E731C8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E731D0);
  }
  return result;
}

uint64_t sub_100230FBC()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_100230FE4(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10023102C(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100231074(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1002310BC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100231104(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10023114C(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for Location.Identifier();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100231190(uint64_t a1)
{
  unint64_t result = sub_10017DFE0(a1);
  if (!result)
  {
    v3(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, v1);
  }
  return result;
}

void sub_1002311D4()
{
  if (!qword_100E7C518)
  {
    type metadata accessor for LocationOfInterest();
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100E7C518);
    }
  }
}

uint64_t sub_10023122C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100231274(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10017DF08(&qword_100E6F620);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_1002312DC(uint64_t result)
{
  if (result != 1) {
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1002312EC(uint64_t a1)
{
  return sub_10017D4C4(a1, &enum case for FeatureState.enabled(_:), 43, 0x8000000100CB32E0, &qword_100F51C50);
}

uint64_t sub_100231314(uint64_t a1)
{
  return sub_10017D4C4(a1, &enum case for FeatureState.enabled(_:), 29, 0x8000000100CB3310, &qword_100F51C40);
}

uint64_t sub_10023133C()
{
  uint64_t result = sub_10001D220();
  byte_100F51C30 = result & 1;
  return result;
}

uint64_t sub_100231360(uint64_t a1)
{
  return sub_10017DA90(a1, (unsigned int *)&enum case for Access.protected(_:), 24, 0x8000000100CBB8A0, &qword_100F52310);
}

uint64_t sub_100231388(uint64_t a1)
{
  return sub_10017DA90(a1, (unsigned int *)&enum case for Access.protected(_:), 24, 0x8000000100CBB8F0, &qword_100F52308);
}

uint64_t sub_1002313B0(uint64_t a1)
{
  return sub_10017DA90(a1, (unsigned int *)&enum case for Access.protected(_:), 51, 0x8000000100CBBAD0, &qword_100F52320);
}

uint64_t sub_1002313D8(uint64_t a1)
{
  return sub_10017DA90(a1, (unsigned int *)&enum case for Access.protected(_:), 47, 0x8000000100CBBB10, &qword_100F52318);
}

uint64_t sub_100231400()
{
  type metadata accessor for Access();
  sub_100179C0C();
  __chkstk_darwin(v1);
  sub_10017F948();
  _s7ModulesV8LocationV17NotableConditionsCMa();
  uint64_t v2 = sub_10017EA10();
  v3(v2);
  uint64_t result = sub_100015A30(0, 0, 0, v0);
  qword_100F52360 = result;
  return result;
}

uint64_t sub_1002314A4(uint64_t a1)
{
  return sub_10017DA90(a1, (unsigned int *)&enum case for Access.protected(_:), 41, 0x8000000100CBB910, &qword_100F522D8);
}

uint64_t sub_1002314CC()
{
  return swift_initClassMetadata2();
}

uint64_t _s7ModulesV8LocationV17NotableConditionsCMa()
{
  uint64_t result = qword_100EAC930;
  if (!qword_100EAC930) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100231554(uint64_t a1)
{
  return sub_10017DA90(a1, (unsigned int *)&enum case for Access.protected(_:), 32, 0x8000000100CBBA30, &qword_100F522E8);
}

uint64_t sub_10023157C(uint64_t a1)
{
  return sub_10017DA90(a1, (unsigned int *)&enum case for Access.protected(_:), 32, 0x8000000100CBB8C0, &qword_100F522F8);
}

uint64_t sub_1002315A4(uint64_t a1)
{
  return sub_10017DA90(a1, (unsigned int *)&enum case for Access.protected(_:), 31, 0x8000000100CBBA10, &qword_100F522F0);
}

uint64_t sub_1002315CC(uint64_t a1)
{
  return sub_10017DA90(a1, (unsigned int *)&enum case for Access.protected(_:), 55, 0x8000000100CBBA90, &qword_100F52338);
}

uint64_t sub_1002315F4(uint64_t a1)
{
  return sub_10017DA90(a1, (unsigned int *)&enum case for Access.public(_:), 27, 0x8000000100CBBCC0, &qword_100F522B8);
}

uint64_t sub_10023161C()
{
  type metadata accessor for Access();
  sub_100179C0C();
  __chkstk_darwin(v1);
  sub_100162EB8();
  _s4NewsV18PlaceholderContentCMa();
  uint64_t v2 = sub_10017EA10();
  v3(v2);
  uint64_t result = sub_10000E63C(0, 0, 0, v0);
  qword_100F51D18 = result;
  return result;
}

uint64_t sub_1002316C4()
{
  return swift_initClassMetadata2();
}

uint64_t _s4NewsV18PlaceholderContentCMa()
{
  uint64_t result = qword_100E9CB78;
  if (!qword_100E9CB78) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10023174C(uint64_t a1)
{
  return sub_1001880EC(a1, 64, 0x8000000100CB2610, &qword_100F51BB0);
}

uint64_t sub_10023176C(uint64_t a1)
{
  return sub_1001880EC(a1, 61, 0x8000000100CB2660, &qword_100F51BA8);
}

uint64_t sub_10023178C(uint64_t a1)
{
  return sub_1001880EC(a1, 58, 0x8000000100CB2590, &qword_100F51BC0);
}

uint64_t sub_1002317AC(uint64_t a1)
{
  return sub_1001880EC(a1, 58, 0x8000000100CB2550, &qword_100F51BC8);
}

uint64_t sub_1002317CC(uint64_t a1)
{
  return sub_1001880EC(a1, 55, 0x8000000100CB2510, &qword_100F51BD0);
}

uint64_t sub_1002317EC(uint64_t a1)
{
  return sub_1001880EC(a1, 54, 0x8000000100CB25D0, &qword_100F51BB8);
}

uint64_t sub_10023180C(uint64_t a1)
{
  return sub_10017D2C8(a1, (unsigned int *)&enum case for FeatureState.default(_:), 40, 0x8000000100CADFC0, &qword_100F51A60);
}

uint64_t sub_100231834(uint64_t a1)
{
  return sub_10017D2C8(a1, (unsigned int *)&enum case for FeatureState.default(_:), 37, 0x8000000100CADFF0, &qword_100F51A58);
}

uint64_t sub_10023185C(uint64_t a1)
{
  return sub_10017D2C8(a1, (unsigned int *)&enum case for FeatureState.default(_:), 44, 0x8000000100CAE020, &qword_100F51A48);
}

uint64_t sub_100231884(uint64_t a1)
{
  return sub_10017D2C8(a1, (unsigned int *)&enum case for FeatureState.default(_:), 44, 0x8000000100CAE0C0, &qword_100F51A50);
}

uint64_t sub_1002318AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10017DF08(&qword_100E6B8B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100231914(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10017DF08(&qword_100E63730);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

unint64_t sub_10023197C()
{
  unint64_t result = qword_100E6D3E8[0];
  if (!qword_100E6D3E8[0])
  {
    type metadata accessor for URL();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_100E6D3E8);
  }
  return result;
}

uint64_t sub_100231A98(int a1)
{
  return a1 | 0x1D0000u;
}

void *variable initialization expression of WindowFocusManager.monitors()
{
  return &_swiftEmptyArrayStorage;
}

void *variable initialization expression of Debounced.cancellables()
{
  return &_swiftEmptySetSingleton;
}

uint64_t variable initialization expression of LocationSearchEntity._name()
{
  return sub_100231CAC(&qword_100E62C80, 1701667150, 0xE400000000000000, (uint64_t (*)(char *))&EntityProperty<>.init(title:));
}

uint64_t variable initialization expression of LocationSearchEntity._placemark()
{
  return sub_100231CAC(&qword_100E62C88, 0x72616D6563616C50, 0xE90000000000006BLL, (uint64_t (*)(char *))&EntityProperty<>.init(title:));
}

uint64_t sub_100231CAC(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(char *))
{
  uint64_t v6 = type metadata accessor for LocalizedStringResource();
  uint64_t v7 = sub_100109308(v6);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10017DF08(a1);
  LocalizedStringResource.init(stringLiteral:)();
  return a4(v9);
}

uint64_t variable initialization expression of WeatherAsyncImage.url()
{
  sub_10008B8A8();
  type metadata accessor for URL();
  uint64_t v0 = sub_100162E38();

  return _s7Weather24LocationCompositionStateOwst_0(v0, v1, v2, v3);
}

uint64_t variable initialization expression of OpenNotificationsConfigurationIntent._weatherIntentHandler()
{
  return sub_100232A18(&qword_100E62C90);
}

uint64_t variable initialization expression of SessionEventsAndDataCoordinator.lock()
{
  uint64_t v0 = type metadata accessor for UnfairLock.Options();
  __chkstk_darwin(v0);
  sub_100162E88();
  sub_10017DF08(&qword_100E62C98);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_100C251B0;
  static UnfairLock.Options.dataSynchronization.getter();
  sub_100232AC8((unint64_t *)&qword_100E62CA0, (void (*)(uint64_t))&type metadata accessor for UnfairLock.Options);
  sub_10017DF08(&qword_100E62CA8);
  sub_1001246C8((unint64_t *)&qword_100E62CB0, &qword_100E62CA8);
  sub_1001626AC();
  type metadata accessor for UnfairLock();
  swift_allocObject();
  return UnfairLock.init(options:)();
}

uint64_t variable initialization expression of SessionEventsAndDataCoordinator.startMethod@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = enum case for StartMethod.unknown(_:);
  type metadata accessor for StartMethod();
  sub_100162E4C();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 104);

  return v5(a1, v2, v3);
}

uint64_t sub_100231F98()
{
  return EnvironmentValues.dynamicTypeSize.getter();
}

uint64_t sub_100231FBC(uint64_t a1)
{
  type metadata accessor for DynamicTypeSize();
  sub_100179C0C();
  __n128 v3 = __chkstk_darwin(v2);
  (*(void (**)(char *, uint64_t, __n128))(v5 + 16))((char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v3);
  return EnvironmentValues.dynamicTypeSize.setter();
}

uint64_t variable initialization expression of TipView._layoutDirection@<X0>(uint64_t *a1@<X8>)
{
  return sub_100233320(&qword_100E62CB8, a1);
}

void variable initialization expression of OpenWeatherAirQualityIntent._location()
{
  sub_100162EA0();
  type metadata accessor for InputConnectionBehavior();
  sub_100179C0C();
  __chkstk_darwin(v0);
  sub_1001648EC(v1, v31);
  uint64_t v2 = sub_10017DF08(&qword_100E62CC0);
  uint64_t v3 = sub_100109308(v2);
  __chkstk_darwin(v3);
  sub_1001837B0(v4, v32);
  __chkstk_darwin(v5);
  sub_100184898(v6, v7, v8, v9, v10, v11, v12, v13, v33);
  uint64_t v14 = sub_10017DF08(&qword_100E62CC8);
  uint64_t v15 = sub_100109308(v14);
  __chkstk_darwin(v15);
  sub_1001A0380();
  sub_100179C0C();
  uint64_t v17 = v16;
  __chkstk_darwin(v18);
  uint64_t v19 = sub_1001A1464();
  uint64_t v20 = sub_100109308(v19);
  __chkstk_darwin(v20);
  uint64_t v21 = sub_1001A1BD8();
  uint64_t v22 = sub_100109308(v21);
  __chkstk_darwin(v22);
  sub_1001A44B8();
  sub_100162E4C();
  __chkstk_darwin(v23);
  sub_100125FF8();
  uint64_t v24 = sub_10017DF08(&qword_100E62CD0);
  sub_100162E5C(v24);
  static Locale.current.getter();
  uint64_t v25 = *(void (**)(uint64_t))(v17 + 104);
  uint64_t v26 = sub_10017DF98();
  v25(v26);
  sub_1001D16D0();
  sub_100184350();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v27 = sub_10017DF98();
  v25(v27);
  sub_10019FA40();
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  uint64_t v28 = sub_100185884();
  sub_10017C698(v28);
  uint64_t v29 = sub_100188EE0();
  v30(v29);
  sub_10017DF08(&qword_100E62CD8);
  sub_1001246C8(&qword_100E62CE0, &qword_100E62CD8);
  sub_100232310();
  sub_100166A88();
  sub_10017DFB0();
  sub_100162694();
}

unint64_t sub_100232310()
{
  unint64_t result = qword_100E62CE8;
  if (!qword_100E62CE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E62CE8);
  }
  return result;
}

void variable initialization expression of OpenWeatherAirQualityIntent._position()
{
  sub_100162EA0();
  type metadata accessor for InputConnectionBehavior();
  sub_100179C0C();
  uint64_t v27 = v2;
  uint64_t v28 = v1;
  __chkstk_darwin(v1);
  sub_10017EF38(v3, v24[0]);
  uint64_t v4 = sub_10017DF08(&qword_100E62CC0);
  uint64_t v5 = sub_100109308(v4);
  __chkstk_darwin(v5);
  uint64_t v26 = (uint64_t)v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v25 = (uint64_t)v24 - v8;
  uint64_t v9 = sub_10017DF08(&qword_100E62CC8);
  uint64_t v10 = sub_100109308(v9);
  __chkstk_darwin(v10);
  sub_1001A0380();
  sub_100179C0C();
  uint64_t v12 = v11;
  __chkstk_darwin(v13);
  uint64_t v14 = sub_100181D9C();
  uint64_t v15 = sub_100109308(v14);
  __chkstk_darwin(v15);
  uint64_t v16 = sub_1001A1BD8();
  uint64_t v17 = sub_100109308(v16);
  __chkstk_darwin(v17);
  uint64_t v18 = type metadata accessor for LocalizedStringResource();
  sub_100162E4C();
  __chkstk_darwin(v19);
  v24[1] = sub_10017DF08(&qword_100E62CF0);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v20 = *(void (**)(void))(v12 + 104);
  sub_1001D0DA8();
  v20();
  sub_10018C354();
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  sub_1001D0DA8();
  v20();
  sub_10018C354();
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  _s7Weather24LocationCompositionStateOwst_0(v0, 0, 1, v18);
  char v29 = 0;
  uint64_t v21 = type metadata accessor for IntentDialog();
  _s7Weather24LocationCompositionStateOwst_0(v25, 1, 1, v21);
  _s7Weather24LocationCompositionStateOwst_0(v26, 1, 1, v21);
  uint64_t v22 = sub_10019B324();
  v23(v22);
  sub_1002326AC();
  IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:supportedValues:)();
  sub_100162694();
}

unint64_t sub_1002326AC()
{
  unint64_t result = qword_100E62CF8;
  if (!qword_100E62CF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E62CF8);
  }
  return result;
}

void variable initialization expression of OpenSunriseSunsetIntent._location()
{
  sub_100162EA0();
  type metadata accessor for InputConnectionBehavior();
  sub_100179C0C();
  __chkstk_darwin(v0);
  sub_1001648EC(v1, v31);
  uint64_t v2 = sub_10017DF08(&qword_100E62CC0);
  uint64_t v3 = sub_100109308(v2);
  __chkstk_darwin(v3);
  sub_1001837B0(v4, v32);
  __chkstk_darwin(v5);
  sub_100184898(v6, v7, v8, v9, v10, v11, v12, v13, v33);
  uint64_t v14 = sub_10017DF08(&qword_100E62CC8);
  uint64_t v15 = sub_100109308(v14);
  __chkstk_darwin(v15);
  sub_1001A0380();
  sub_100179C0C();
  uint64_t v17 = v16;
  __chkstk_darwin(v18);
  uint64_t v19 = sub_1001A1464();
  uint64_t v20 = sub_100109308(v19);
  __chkstk_darwin(v20);
  uint64_t v21 = sub_1001A1BD8();
  uint64_t v22 = sub_100109308(v21);
  __chkstk_darwin(v22);
  sub_1001A44B8();
  sub_100162E4C();
  __chkstk_darwin(v23);
  sub_100125FF8();
  uint64_t v24 = sub_10017DF08(&qword_100E62CD0);
  sub_100162E5C(v24);
  static Locale.current.getter();
  uint64_t v25 = *(void (**)(uint64_t))(v17 + 104);
  uint64_t v26 = sub_10017DF98();
  v25(v26);
  sub_1001D16D0();
  sub_100184350();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v27 = sub_10017DF98();
  v25(v27);
  sub_10019FA40();
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  uint64_t v28 = sub_100185884();
  sub_10017C698(v28);
  uint64_t v29 = sub_100188EE0();
  v30(v29);
  sub_10017DF08(&qword_100E62CD8);
  sub_1001246C8(&qword_100E62CE0, &qword_100E62CD8);
  sub_100232310();
  sub_100166A88();
  sub_10017DFB0();
  sub_100162694();
}

uint64_t variable initialization expression of LocaleMonitor.lastLocale()
{
  sub_10008B8A8();
  type metadata accessor for Locale();
  uint64_t v0 = sub_100162E38();

  return _s7Weather24LocationCompositionStateOwst_0(v0, v1, v2, v3);
}

uint64_t variable initialization expression of LocaleMonitor.lastTemperatureUnit()
{
  sub_10008B8A8();
  type metadata accessor for UnitConfiguration.Temperature();
  uint64_t v0 = sub_100162E38();

  return _s7Weather24LocationCompositionStateOwst_0(v0, v1, v2, v3);
}

uint64_t variable initialization expression of LocationSearchEntityQuery._locationEntityManager()
{
  return sub_100232A18(&qword_100E62D00);
}

uint64_t variable initialization expression of LocationSearchEntityQuery._localSearchManager()
{
  return sub_100232A18(&qword_100E62D08);
}

uint64_t sub_100232A18(uint64_t *a1)
{
  return AppDependency.__allocating_init(key:manager:)();
}

uint64_t variable initialization expression of LocationSearchEntityQuery.locationSearcher()
{
  type metadata accessor for LocationSearcher();
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = 0;
  return result;
}

void variable initialization expression of NotificationSubscriptionMonitor.operationQueue()
{
}

uint64_t sub_100232AC8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t variable initialization expression of LocalSearchRequestManager.geocodeRequestDeduper()
{
  type metadata accessor for PromiseDeduperFlags();
  sub_100162E4C();
  __chkstk_darwin(v0);
  sub_100162E88();
  sub_100232AC8(&qword_100E62D30, (void (*)(uint64_t))&type metadata accessor for PromiseDeduperFlags);
  sub_10017DF08(&qword_100E62D38);
  sub_1001246C8(&qword_100E62D40, &qword_100E62D38);
  sub_1001626AC();
  sub_10017DF08(&qword_100E62D48);
  swift_allocObject();
  return PromiseDeduper.init(options:)();
}

double variable initialization expression of LocalSearchRequestManager.$__lazy_storage_$_store@<D0>(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  *(void *)&double result = 1;
  *(_OWORD *)(a1 + 24) = xmmword_100C251C0;
  return result;
}

uint64_t variable initialization expression of SettingsMonitor.lastDistanceConfiguration()
{
  sub_10008B8A8();
  type metadata accessor for UnitConfiguration.Distance();
  uint64_t v0 = sub_100162E38();

  return _s7Weather24LocationCompositionStateOwst_0(v0, v1, v2, v3);
}

uint64_t variable initialization expression of SettingsMonitor.lastWindSpeedConfiguration()
{
  sub_10008B8A8();
  type metadata accessor for UnitConfiguration.WindSpeed();
  uint64_t v0 = sub_100162E38();

  return _s7Weather24LocationCompositionStateOwst_0(v0, v1, v2, v3);
}

uint64_t variable initialization expression of SettingsMonitor.lastPressureConfiguration()
{
  sub_10008B8A8();
  type metadata accessor for UnitConfiguration.Pressure();
  uint64_t v0 = sub_100162E38();

  return _s7Weather24LocationCompositionStateOwst_0(v0, v1, v2, v3);
}

uint64_t variable initialization expression of SettingsMonitor.lastPrecipitationConfiguration()
{
  sub_10008B8A8();
  type metadata accessor for UnitConfiguration.Precipitation();
  uint64_t v0 = sub_100162E38();

  return _s7Weather24LocationCompositionStateOwst_0(v0, v1, v2, v3);
}

void variable initialization expression of OpenMoonIntent._location()
{
  sub_100162EA0();
  type metadata accessor for InputConnectionBehavior();
  sub_100179C0C();
  __chkstk_darwin(v0);
  sub_1001648EC(v1, v31);
  uint64_t v2 = sub_10017DF08(&qword_100E62CC0);
  uint64_t v3 = sub_100109308(v2);
  __chkstk_darwin(v3);
  sub_1001837B0(v4, v32);
  __chkstk_darwin(v5);
  sub_100184898(v6, v7, v8, v9, v10, v11, v12, v13, v33);
  uint64_t v14 = sub_10017DF08(&qword_100E62CC8);
  uint64_t v15 = sub_100109308(v14);
  __chkstk_darwin(v15);
  sub_1001A0380();
  sub_100179C0C();
  uint64_t v17 = v16;
  __chkstk_darwin(v18);
  uint64_t v19 = sub_1001A1464();
  uint64_t v20 = sub_100109308(v19);
  __chkstk_darwin(v20);
  uint64_t v21 = sub_1001A1BD8();
  uint64_t v22 = sub_100109308(v21);
  __chkstk_darwin(v22);
  sub_1001A44B8();
  sub_100162E4C();
  __chkstk_darwin(v23);
  sub_100125FF8();
  uint64_t v24 = sub_10017DF08(&qword_100E62CD0);
  sub_100162E5C(v24);
  static Locale.current.getter();
  uint64_t v25 = *(void (**)(uint64_t))(v17 + 104);
  uint64_t v26 = sub_10017DF98();
  v25(v26);
  sub_1001D16D0();
  sub_100184350();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v27 = sub_10017DF98();
  v25(v27);
  sub_10019FA40();
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  uint64_t v28 = sub_100185884();
  sub_10017C698(v28);
  uint64_t v29 = sub_100188EE0();
  v30(v29);
  sub_10017DF08(&qword_100E62CD8);
  sub_1001246C8(&qword_100E62CE0, &qword_100E62CD8);
  sub_100232310();
  sub_100166A88();
  sub_10017DFB0();
  sub_100162694();
}

void variable initialization expression of OpenMoonIntent._date()
{
  sub_100162EA0();
  type metadata accessor for InputConnectionBehavior();
  sub_100179C0C();
  __chkstk_darwin(v1);
  sub_10017EF38(v2, v24);
  sub_10017DF08(&qword_100E62D50);
  sub_100179C0C();
  uint64_t v27 = v4;
  uint64_t v28 = v3;
  __chkstk_darwin(v3);
  sub_100109314();
  uint64_t v26 = v5;
  uint64_t v6 = sub_10017DF08(&qword_100E62CC0);
  uint64_t v7 = sub_100109308(v6);
  __chkstk_darwin(v7);
  sub_100109314();
  uint64_t v25 = v8;
  uint64_t v9 = sub_10017DF08(&qword_100E62CC8);
  uint64_t v10 = sub_100109308(v9);
  __chkstk_darwin(v10);
  sub_10011BA28();
  type metadata accessor for LocalizedStringResource.BundleDescription();
  sub_100179C0C();
  uint64_t v12 = v11;
  __chkstk_darwin(v13);
  uint64_t v14 = sub_100181D9C();
  uint64_t v15 = sub_100109308(v14);
  __chkstk_darwin(v15);
  sub_100162E88();
  uint64_t v16 = type metadata accessor for String.LocalizationValue();
  uint64_t v17 = sub_100109308(v16);
  __chkstk_darwin(v17);
  uint64_t v18 = type metadata accessor for LocalizedStringResource();
  sub_100162E4C();
  __chkstk_darwin(v19);
  sub_10017DF08(&qword_100E62D58);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v20 = *(void (**)(void))(v12 + 104);
  sub_1001D0DA8();
  v20();
  sub_100182304();
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  sub_1001D0DA8();
  v20();
  sub_100182304();
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  _s7Weather24LocationCompositionStateOwst_0(v0, 0, 1, v18);
  uint64_t v21 = type metadata accessor for IntentDialog();
  _s7Weather24LocationCompositionStateOwst_0(v25, 1, 1, v21);
  (*(void (**)(uint64_t, void, uint64_t))(v27 + 104))(v26, enum case for IntentParameter.DateKind.dateTime<A>(_:), v28);
  uint64_t v22 = sub_10019B324();
  v23(v22);
  IntentParameter<>.init(title:description:kind:requestValueDialog:inputConnectionBehavior:)();
  sub_100162694();
}

uint64_t variable initialization expression of WindCategoryTableView._dynamicTypeSize@<X0>(uint64_t *a1@<X8>)
{
  return sub_100233320(&qword_100E62D60, a1);
}

uint64_t sub_100233320@<X0>(uint64_t *a1@<X1>, uint64_t *a2@<X8>)
{
  *a2 = swift_getKeyPath();
  sub_10017DF08(a1);

  return swift_storeEnumTagMultiPayload();
}

uint64_t variable initialization expression of NotificationsOptInMonitor.logger()
{
  return OS_os_log.init(subsystem:category:)();
}

void variable initialization expression of NetworkConnectivityMonitor.setupMonitorQueue()
{
}

void sub_100233410()
{
  sub_100162EA0();
  uint64_t v1 = v0;
  type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  sub_100179C0C();
  __chkstk_darwin(v2);
  type metadata accessor for OS_dispatch_queue.Attributes();
  sub_100162E4C();
  __chkstk_darwin(v3);
  sub_10011BA28();
  uint64_t v4 = type metadata accessor for DispatchQoS();
  uint64_t v5 = sub_100109308(v4);
  __chkstk_darwin(v5);
  sub_1001ABC4C(0, (unint64_t *)&qword_100E62D10);
  v1();
  sub_100232AC8((unint64_t *)&qword_100E62D18, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_10017DF08(&qword_100E62D20);
  sub_1001246C8((unint64_t *)&qword_100E62D28, &qword_100E62D20);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  sub_1001D0DA8();
  v6();
  OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  sub_100162694();
}

void type metadata accessor for SCPreferences(uint64_t a1)
{
}

uint64_t initializeBufferWithCopyOfBuffer for ConfiguredUnitsState(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

void type metadata accessor for MKCoordinateRegion(uint64_t a1)
{
}

void type metadata accessor for CLLocationCoordinate2D(uint64_t a1)
{
}

void sub_100233678()
{
  sub_1001A3030();
  LocationSearchEntityFromStringResolver.init()();
  void *v0 = v1;
}

uint64_t sub_1002336A0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = _s7Weather31SessionEventsAndDataCoordinatorC25lastPushedTemperatureUnit33_8ECD549B82C3B8992579EA0CB842041CLLSo06NSUnitI0CSgvpfi_0();
  *a1 = result;
  return result;
}

uint64_t sub_1002336C8@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_100234880(*a1, *v2);
  *a2 = result;
  return result;
}

uint64_t sub_1002336F8@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1001A1BD0(*a1, *v2);
  *a2 = result;
  return result;
}

uint64_t sub_100233728@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_100234380(*a1, *v2);
  *a2 = result;
  return result;
}

BOOL sub_100233758(void *a1, uint64_t *a2)
{
  return sub_1005D2DA8(a1, *a2);
}

uint64_t sub_100233760@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_100234888(*a1);
  *(void *)a2 = result;
  *(unsigned char *)(a2 + 8) = v4 & 1;
  return result;
}

uint64_t sub_100233794@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_1002348DC(*a1);
  *(void *)a2 = result;
  *(unsigned char *)(a2 + 8) = v4 & 1;
  return result;
}

uint64_t sub_1002337C8(uint64_t *a1)
{
  return sub_1002340E0(*a1);
}

uint64_t sub_1002337D0(uint64_t *a1)
{
  return sub_1002340B8(*a1);
}

uint64_t sub_1002337D8(uint64_t *a1)
{
  return sub_100234370(*a1);
}

uint64_t sub_1002337E0@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_100234918(*a1, *v2);
  *a2 = result;
  return result;
}

BOOL sub_100233810(uint64_t *a1)
{
  return sub_1002340C8(*a1, *v1);
}

uint64_t sub_10023381C()
{
  return sub_100234920();
}

BOOL sub_100233828(uint64_t *a1)
{
  return sub_1002340D4(*a1, *v1);
}

uint64_t sub_100233834()
{
  return UIRectCorner.isEmpty.getter();
}

uint64_t sub_10023383C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return SetAlgebra.init<A>(_:)(a1, a4, a2, a5, a3);
}

uint64_t sub_100233854(uint64_t *a1)
{
  return sub_100234388(*a1);
}

BOOL sub_10023385C(uint64_t *a1, uint64_t *a2)
{
  return sub_1002340AC(*a1, *a2);
}

uint64_t sub_100233868(uint64_t a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v4 = a2(v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_1002338A8()
{
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  sub_100187050();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_1002338E8()
{
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  Hasher.init(_seed:)();
  String.hash(into:)();
  Swift::Int v0 = Hasher._finalize()();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_10023395C(uint64_t a1, id *a2)
{
  return sub_1002343D8(a1, a2);
}

uint64_t sub_100233974(uint64_t a1, id *a2)
{
  return sub_1002342F0(a1, a2) & 1;
}

uint64_t sub_100233990()
{
  return sub_100234398(*v0, (uint64_t (*)(uint64_t))&String._bridgeToObjectiveC());
}

NSString sub_1002339C0@<X0>(void *a1@<X8>)
{
  NSString result = sub_100234714();
  *a1 = result;
  return result;
}

uint64_t sub_1002339E8()
{
  return sub_100234398(*v0, (uint64_t (*)(uint64_t))&String.hashValue.getter);
}

uint64_t sub_100233A18()
{
  return sub_1002338A8();
}

Swift::Int sub_100233A34()
{
  return sub_1002338E8();
}

uint64_t sub_100233A3C()
{
  return sub_100233868(*v0, (uint64_t (*)(uint64_t))&String._bridgeToObjectiveC());
}

uint64_t sub_100233A6C()
{
  return sub_100233868(*v0, (uint64_t (*)(uint64_t))&String.hashValue.getter);
}

Swift::Int sub_100233A9C()
{
  return sub_1002338E8();
}

BOOL sub_100233AB8(int *a1, int *a2)
{
  return sub_100889748(*a1, *a2);
}

uint64_t sub_100233AC4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_100234928(a1);
  *a2 = result;
  return result;
}

void *sub_100233AEC@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t sub_100233AF8(void *a1, void *a2)
{
  return sub_10088943C(*a1, *a2);
}

uint64_t sub_100233B04()
{
  return sub_100234024() & 1;
}

void sub_100233B28(uint64_t a1@<X8>)
{
  sub_100233B5C();
  *(void *)a1 = v2;
  *(unsigned char *)(a1 + 8) = v3 & 1;
}

uint64_t sub_100233B64@<X0>(unsigned int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_100233B98(*a1);
  *(_DWORD *)a2 = result;
  *(unsigned char *)(a2 + 4) = BYTE4(result) & 1;
  return result;
}

uint64_t sub_100233B98(uint64_t result)
{
  return result;
}

void sub_100233BB4(_DWORD *a1@<X8>)
{
  LocationSearchEntityFromStringResolver.init()();
  *a1 = v2;
}

void *sub_100233BE0@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = *result;
  *(unsigned char *)(a2 + 8) = 0;
  return result;
}

void sub_100233BF0(void *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t sub_100233C00(uint64_t a1)
{
  uint64_t v2 = sub_100232AC8((unint64_t *)&unk_100E6F490, type metadata accessor for LaunchOptionsKey);
  uint64_t v3 = sub_100232AC8(&qword_100E62F90, type metadata accessor for LaunchOptionsKey);

  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_100233CBC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = j___sSS10FoundationE36_unconditionallyBridgeFromObjectiveCySSSo8NSStringCSgFZ(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_100233CEC(uint64_t a1)
{
  uint64_t v2 = sub_100232AC8(&qword_100E63070, type metadata accessor for Key);
  uint64_t v3 = sub_100232AC8(&qword_100E63078, type metadata accessor for Key);

  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_100233DA8(uint64_t a1)
{
  uint64_t v2 = sub_100232AC8((unint64_t *)&qword_100E62F98, type metadata accessor for OpenExternalURLOptionsKey);
  uint64_t v3 = sub_100232AC8(&qword_100E62FA0, type metadata accessor for OpenExternalURLOptionsKey);

  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_100233E64(uint64_t a1)
{
  uint64_t v2 = sub_100232AC8(&qword_100E63090, type metadata accessor for AttributeName);
  uint64_t v3 = sub_100232AC8(&qword_100E63098, type metadata accessor for AttributeName);

  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_100233F20@<X0>(void *a1@<X8>)
{
  NSString v2 = String._bridgeToObjectiveC()();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_100233F68(uint64_t a1)
{
  uint64_t v2 = sub_100232AC8(&qword_100E63080, type metadata accessor for TraitKey);
  uint64_t v3 = sub_100232AC8(&qword_100E63088, type metadata accessor for TraitKey);

  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_100234024()
{
  uint64_t v0 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v2 = v1;
  if (v0 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v2 == v3) {
    char v5 = 1;
  }
  else {
    char v5 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

BOOL sub_1002340AC(uint64_t a1, uint64_t a2)
{
  return a1 == a2;
}

uint64_t sub_1002340B8(uint64_t result)
{
  *v1 &= result;
  return result;
}

BOOL sub_1002340C8(uint64_t a1, uint64_t a2)
{
  return (a2 & ~a1) == 0;
}

BOOL sub_1002340D4(uint64_t a1, uint64_t a2)
{
  return (a1 & ~a2) == 0;
}

uint64_t sub_1002340E0(uint64_t result)
{
  *v1 |= result;
  return result;
}

void type metadata accessor for LaunchOptionsKey(uint64_t a1)
{
}

void type metadata accessor for CLAuthorizationStatus(uint64_t a1)
{
}

void type metadata accessor for OpenExternalURLOptionsKey(uint64_t a1)
{
}

void type metadata accessor for MKCoordinateSpan(uint64_t a1)
{
}

uint64_t sub_100234140()
{
  return sub_100232AC8(&qword_100E62EF8, type metadata accessor for OpenExternalURLOptionsKey);
}

uint64_t sub_100234188()
{
  return sub_100232AC8(&qword_100E62F00, type metadata accessor for OpenExternalURLOptionsKey);
}

uint64_t sub_1002341D0()
{
  return sub_100232AC8(&qword_100E62F08, type metadata accessor for LaunchOptionsKey);
}

uint64_t sub_100234218()
{
  return sub_100232AC8(&qword_100E62F10, type metadata accessor for LaunchOptionsKey);
}

uint64_t sub_100234260()
{
  return sub_100232AC8(&qword_100E62F18, type metadata accessor for LaunchOptionsKey);
}

uint64_t sub_1002342A8()
{
  return sub_100232AC8(&qword_100E62F20, type metadata accessor for OpenExternalURLOptionsKey);
}

uint64_t sub_1002342F0(uint64_t a1, id *a2)
{
  char v3 = static String._conditionallyBridgeFromObjectiveC(_:result:)();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_100234370(uint64_t result)
{
  *v1 ^= result;
  return result;
}

uint64_t sub_100234380(uint64_t a1, uint64_t a2)
{
  return a2 ^ a1;
}

uint64_t sub_100234388(uint64_t result)
{
  *v1 &= ~result;
  return result;
}

uint64_t sub_100234398(uint64_t a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v4 = a2(v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_1002343D8(uint64_t a1, id *a2)
{
  uint64_t result = static String._forceBridgeFromObjectiveC(_:result:)();
  *a2 = 0;
  return result;
}

void type metadata accessor for Key(uint64_t a1)
{
}

void type metadata accessor for TraitKey(uint64_t a1)
{
}

void type metadata accessor for AttributeName(uint64_t a1)
{
}

uint64_t sub_10023448C()
{
  return sub_100232AC8(&qword_100E62FC8, type metadata accessor for AttributeName);
}

uint64_t sub_1002344D4()
{
  return sub_100232AC8(&qword_100E62FD0, type metadata accessor for AttributeName);
}

uint64_t sub_10023451C()
{
  return sub_100232AC8(&qword_100E62FD8, type metadata accessor for TraitKey);
}

uint64_t sub_100234564()
{
  return sub_100232AC8(&qword_100E62FE0, type metadata accessor for TraitKey);
}

uint64_t sub_1002345AC()
{
  return sub_100232AC8(&qword_100E62FE8, type metadata accessor for Key);
}

uint64_t sub_1002345F4()
{
  return sub_100232AC8(&qword_100E62FF0, type metadata accessor for Key);
}

uint64_t sub_10023463C()
{
  return sub_100232AC8(&qword_100E62FF8, type metadata accessor for Key);
}

uint64_t sub_100234684()
{
  return sub_100232AC8(&qword_100E63000, type metadata accessor for AttributeName);
}

uint64_t sub_1002346CC()
{
  return sub_100232AC8(&qword_100E63008, type metadata accessor for TraitKey);
}

NSString sub_100234714()
{
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v0 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  return v0;
}

void type metadata accessor for UIRectCorner(uint64_t a1)
{
}

uint64_t sub_100234760()
{
  return sub_100232AC8(&qword_100E630A8, type metadata accessor for UIRectCorner);
}

uint64_t sub_1002347A8()
{
  return sub_100232AC8(&qword_100E630B0, type metadata accessor for UIRectCorner);
}

uint64_t sub_1002347F0()
{
  return sub_100232AC8(&qword_100E630B8, type metadata accessor for UIRectCorner);
}

uint64_t sub_100234838()
{
  return sub_100232AC8((unint64_t *)&unk_100E630C0, type metadata accessor for UIRectCorner);
}

uint64_t sub_100234880(uint64_t a1, uint64_t a2)
{
  return a2 | a1;
}

uint64_t sub_100234888(uint64_t a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = *v1 & a1;
  if (UIRectCorner.isEmpty.getter()) {
    return 0;
  }
  *uint64_t v1 = v3 & ~a1;
  return v4;
}

uint64_t sub_1002348DC(uint64_t a1)
{
  uint64_t v2 = *v1 & a1;
  *v1 |= a1;
  if (UIRectCorner.isEmpty.getter()) {
    return 0;
  }
  else {
    return v2;
  }
}

uint64_t sub_100234918(uint64_t a1, uint64_t a2)
{
  return a2 & ~a1;
}

uint64_t sub_100234920()
{
  return UIRectCorner.isEmpty.getter();
}

uint64_t sub_100234928(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    uint64_t v2 = 0;
    uint64_t v3 = (uint64_t *)(a1 + 32);
    do
    {
      uint64_t v5 = *v3++;
      uint64_t v4 = v5;
      if ((v5 & ~v2) == 0) {
        uint64_t v4 = 0;
      }
      v2 |= v4;
      --v1;
    }
    while (v1);
  }
  else
  {
    uint64_t v2 = 0;
  }
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_1002349B0()
{
  char ParameterKey = type metadata accessor for WeatherQueryParameterKey();
  sub_100179C0C();
  __chkstk_darwin(v1);
  sub_100162EB8();
  uint64_t v2 = sub_100179C28();
  v3(v2);
  WeatherQueryParameterKey.rawValue.getter();
  uint64_t v4 = sub_10019E598();
  v5(v4);
  uint64_t v6 = URLHandlerMatch.Values.subscript.getter();
  unint64_t v8 = v7;
  swift_bridgeObjectRelease();
  if (v8) {
    uint64_t result = v6;
  }
  else {
    uint64_t result = 48;
  }
  if (v8) {
    unint64_t v10 = v8;
  }
  else {
    unint64_t v10 = 0xE100000000000000;
  }
  uint64_t v11 = HIBYTE(v10) & 0xF;
  uint64_t v12 = result & 0xFFFFFFFFFFFFLL;
  if ((v10 & 0x2000000000000000) != 0) {
    uint64_t v13 = HIBYTE(v10) & 0xF;
  }
  else {
    uint64_t v13 = result & 0xFFFFFFFFFFFFLL;
  }
  if (!v13)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  if ((v10 & 0x1000000000000000) != 0)
  {
    uint64_t v15 = (uint64_t)sub_1002352EC(result, v10, 10);
    char ParameterKey = v35;
    goto LABEL_52;
  }
  if ((v10 & 0x2000000000000000) == 0)
  {
    if ((result & 0x1000000000000000) != 0) {
      uint64_t v14 = (unsigned __int8 *)((v10 & 0xFFFFFFFFFFFFFFFLL) + 32);
    }
    else {
      uint64_t v14 = (unsigned __int8 *)_StringObject.sharedUTF8.getter();
    }
    uint64_t v15 = (uint64_t)sub_1002353D4(v14, v12, 10);
    char ParameterKey = v16 & 1;
    goto LABEL_52;
  }
  if (result == 43)
  {
    if (!v11)
    {
LABEL_69:
      __break(1u);
      return result;
    }
    if (v11 == 1) {
      goto LABEL_38;
    }
    sub_10017C6F4();
    if (!v21 & v20) {
      goto LABEL_38;
    }
    uint64_t v15 = v23;
    if (v22 != 2)
    {
      sub_10017C6F4();
      if (!v21 & v20) {
        goto LABEL_38;
      }
      uint64_t v15 = 10 * v15 + v25;
      if (v24 != 3)
      {
        while (1)
        {
          sub_1001A1C00();
          if (!v21 & v20) {
            goto LABEL_38;
          }
          sub_10017F790();
          if (!v21) {
            goto LABEL_38;
          }
          uint64_t v15 = v27 + v26;
          if (__OFADD__(v27, v26)) {
            goto LABEL_38;
          }
          sub_100180F24();
          if (v21) {
            goto LABEL_52;
          }
        }
      }
    }
LABEL_51:
    char ParameterKey = 0;
    goto LABEL_52;
  }
  if (result != 45)
  {
    if (!v11 || (result - 48) > 9u) {
      goto LABEL_38;
    }
    uint64_t v15 = (result - 48);
    if (v11 != 1)
    {
      sub_10017C6F4();
      if (!v21 & v20) {
        goto LABEL_38;
      }
      uint64_t v15 = 10 * v15 + v29;
      if (v28 != 2)
      {
        while (1)
        {
          sub_1001A1C00();
          if (!v21 & v20) {
            goto LABEL_38;
          }
          sub_10017F790();
          if (!v21) {
            goto LABEL_38;
          }
          uint64_t v15 = v31 + v30;
          if (__OFADD__(v31, v30)) {
            goto LABEL_38;
          }
          sub_100180F24();
          if (v21) {
            goto LABEL_52;
          }
        }
      }
    }
    goto LABEL_51;
  }
  if (!v11)
  {
    __break(1u);
    goto LABEL_69;
  }
  if (v11 == 1) {
    goto LABEL_38;
  }
  sub_10017C6F4();
  if (!v21 & v20) {
    goto LABEL_38;
  }
  if (v18 != 2)
  {
    if ((v17 - 48) <= 9u)
    {
      uint64_t v15 = -10 * v19 - (v17 - 48);
      if (v18 == 3) {
        goto LABEL_51;
      }
      while (1)
      {
        sub_1001A1C00();
        if (!v21 & v20) {
          break;
        }
        sub_10017F790();
        if (!v21) {
          break;
        }
        uint64_t v15 = v34 - v33;
        if (__OFSUB__(v34, v33)) {
          break;
        }
        sub_100180F24();
        if (v21) {
          goto LABEL_52;
        }
      }
    }
LABEL_38:
    uint64_t v15 = 0;
    char ParameterKey = 1;
    goto LABEL_52;
  }
  char ParameterKey = 0;
  uint64_t v15 = -(uint64_t)v19;
LABEL_52:
  swift_bridgeObjectRelease();
  return (ParameterKey & 1) == 0 && v15 > 0;
}

uint64_t sub_100234CA8()
{
  uint64_t v1 = v0;
  type metadata accessor for URLHandlerMatch.Values();
  sub_100179C0C();
  uint64_t v32 = v3;
  uint64_t v33 = v2;
  __chkstk_darwin(v2);
  uint64_t v31 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for WeatherQueryParameterKey();
  sub_100179C0C();
  uint64_t v6 = v5;
  __chkstk_darwin(v7);
  unsigned __int8 v30 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  __chkstk_darwin(v10);
  uint64_t v11 = *(void (**)(void))(v6 + 104);
  sub_100162ED0();
  v11();
  WeatherQueryParameterKey.rawValue.getter();
  uint64_t v12 = *(void (**)(void))(v6 + 8);
  sub_1001D1700();
  v12();
  uint64_t v13 = URLHandlerMatch.Values.subscript.getter();
  uint64_t v15 = v14;
  swift_bridgeObjectRelease();
  if (!v15) {
    return 0;
  }
  uint64_t v16 = sub_100234F68(v13, v15);
  if (v17) {
    return 0;
  }
  uint64_t v29 = v16;
  sub_100162ED0();
  v11();
  WeatherQueryParameterKey.rawValue.getter();
  sub_1001D1700();
  v12();
  uint64_t v18 = URLHandlerMatch.Values.subscript.getter();
  uint64_t v20 = v19;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t, uint64_t))(v32 + 16))(v31, v1, v33);
  if (v20)
  {
    uint64_t v21 = sub_1001A03A8();
    v22(v21);
  }
  else
  {
    sub_100162ED0();
    v11();
    WeatherQueryParameterKey.rawValue.getter();
    sub_1001D1700();
    v12();
    uint64_t v18 = URLHandlerMatch.Values.subscript.getter();
    uint64_t v20 = v23;
    swift_bridgeObjectRelease();
    uint64_t v24 = sub_1001A03A8();
    v25(v24);
    if (!v20) {
      return 0;
    }
  }
  sub_100234F68(v18, v20);
  if ((v26 & 1) == 0) {
    return v29;
  }
  return 0;
}

uint64_t sub_100234F68(uint64_t a1, uint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0 || !(a2 & 0x2000000000000000 | a1 & 0x1000000000000000))
  {
    _StringGuts._slowWithCString<A>(_:)();
    swift_bridgeObjectRelease();
    char v6 = v9;
  }
  else
  {
    __chkstk_darwin(a1);
    if ((a2 & 0x2000000000000000) != 0)
    {
      char v6 = (v3 > 0x20u || ((0x100003E01uLL >> v3) & 1) == 0)
        && (uint64_t v7 = (unsigned char *)_swift_stdlib_strtod_clocale()) != 0
        && *v7 == 0;
      swift_bridgeObjectRelease();
    }
    else
    {
      if ((v3 & 0x1000000000000000) != 0)
      {
        uint64_t v4 = (a2 & 0xFFFFFFFFFFFFFFFLL) + 32;
        uint64_t v5 = v3 & 0xFFFFFFFFFFFFLL;
      }
      else
      {
        uint64_t v4 = _StringObject.sharedUTF8.getter();
      }
      char v6 = sub_100235BB8(v4, v5, (void (*)(uint64_t *__return_ptr))sub_100235C34);
      swift_bridgeObjectRelease();
    }
  }
  if (v6) {
    return 0;
  }
  else {
    return 0;
  }
}

uint64_t sub_1002350F8()
{
  type metadata accessor for WeatherQueryParameterKey();
  sub_100179C0C();
  __chkstk_darwin(v0);
  sub_100162EB8();
  uint64_t v1 = sub_100179C28();
  v2(v1);
  WeatherQueryParameterKey.rawValue.getter();
  uint64_t v3 = sub_10019E598();
  v4(v3);
  uint64_t v5 = URLHandlerMatch.Values.subscript.getter();
  unint64_t v7 = v6;
  swift_bridgeObjectRelease();
  if (v7)
  {
    uint64_t v8 = HIBYTE(v7) & 0xF;
    if ((v7 & 0x2000000000000000) == 0) {
      uint64_t v8 = v5 & 0xFFFFFFFFFFFFLL;
    }
    if (!v8)
    {
      swift_bridgeObjectRelease();
      if (qword_100E62840 != -1) {
        swift_once();
      }
      uint64_t v9 = type metadata accessor for Logger();
      sub_1002102B0(v9, (uint64_t)qword_100F51FC8);
      uint64_t v10 = Logger.logObject.getter();
      os_log_type_t v11 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v10, v11))
      {
        uint64_t v12 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v12 = 0;
        swift_slowDealloc();
      }

      return 0;
    }
  }
  return v5;
}

uint64_t sub_100235290(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    uint64_t v6 = String.UTF16View.index(_:offsetBy:)();
    sub_1001837D0(v6);
    return v7 | 4;
  }
  else
  {
    uint64_t v3 = String.UTF8View._foreignIndex(_:offsetBy:)();
    sub_1001837D0(v3);
    return v4 | 8;
  }
}

unsigned __int8 *sub_1002352EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v13 = a1;
  uint64_t v14 = a2;
  swift_bridgeObjectRetain();
  uint64_t v5 = String.init<A>(_:)();
  unint64_t v6 = v4;
  if ((v4 & 0x1000000000000000) == 0)
  {
    if ((v4 & 0x2000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v8 = HIBYTE(v6) & 0xF;
    uint64_t v13 = v5;
    uint64_t v14 = v6 & 0xFFFFFFFFFFFFFFLL;
    uint64_t v7 = (unsigned __int8 *)&v13;
    goto LABEL_7;
  }
  uint64_t v5 = sub_100235650();
  unint64_t v10 = v9;
  swift_bridgeObjectRelease();
  unint64_t v6 = v10;
  if ((v10 & 0x2000000000000000) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v5 & 0x1000000000000000) != 0)
  {
    uint64_t v7 = (unsigned __int8 *)((v6 & 0xFFFFFFFFFFFFFFFLL) + 32);
    uint64_t v8 = v5 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    uint64_t v7 = (unsigned __int8 *)_StringObject.sharedUTF8.getter();
  }
LABEL_7:
  os_log_type_t v11 = sub_1002353D4(v7, v8, a3);
  swift_bridgeObjectRelease();
  return v11;
}

unsigned __int8 *sub_1002353D4(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a2;
  int v4 = *result;
  if (v4 == 43)
  {
    if (a2 >= 1)
    {
      uint64_t v15 = a2 - 1;
      if (a2 != 1)
      {
        unsigned __int8 v16 = a3 + 48;
        unsigned __int8 v17 = a3 + 55;
        unsigned __int8 v18 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v16 = 58;
        }
        else
        {
          unsigned __int8 v18 = 97;
          unsigned __int8 v17 = 65;
        }
        if (result)
        {
          uint64_t v9 = 0;
          uint64_t v19 = result + 1;
          do
          {
            unsigned int v20 = *v19;
            if (v20 < 0x30 || v20 >= v16)
            {
              if (v20 < 0x41 || v20 >= v17)
              {
                uint64_t v13 = 0;
                if (v20 < 0x61 || v20 >= v18) {
                  return (unsigned __int8 *)v13;
                }
                char v21 = -87;
              }
              else
              {
                char v21 = -55;
              }
            }
            else
            {
              char v21 = -48;
            }
            uint64_t v22 = v9 * a3;
            if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63) {
              return 0;
            }
            uint64_t v9 = v22 + (v20 + v21);
            if (__OFADD__(v22, (v20 + v21))) {
              return 0;
            }
            ++v19;
            --v15;
          }
          while (v15);
          return (unsigned __int8 *)v9;
        }
        return 0;
      }
      return 0;
    }
  }
  else
  {
    if (v4 != 45)
    {
      if (a2)
      {
        unsigned __int8 v23 = a3 + 48;
        unsigned __int8 v24 = a3 + 55;
        unsigned __int8 v25 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v23 = 58;
        }
        else
        {
          unsigned __int8 v25 = 97;
          unsigned __int8 v24 = 65;
        }
        if (result)
        {
          uint64_t v26 = 0;
          do
          {
            unsigned int v27 = *result;
            if (v27 < 0x30 || v27 >= v23)
            {
              if (v27 < 0x41 || v27 >= v24)
              {
                uint64_t v13 = 0;
                if (v27 < 0x61 || v27 >= v25) {
                  return (unsigned __int8 *)v13;
                }
                char v28 = -87;
              }
              else
              {
                char v28 = -55;
              }
            }
            else
            {
              char v28 = -48;
            }
            uint64_t v29 = v26 * a3;
            if ((unsigned __int128)(v26 * (__int128)a3) >> 64 != (v26 * a3) >> 63) {
              return 0;
            }
            uint64_t v26 = v29 + (v27 + v28);
            if (__OFADD__(v29, (v27 + v28))) {
              return 0;
            }
            ++result;
            --v3;
          }
          while (v3);
          return (unsigned __int8 *)(v29 + (v27 + v28));
        }
        return 0;
      }
      return 0;
    }
    if (a2 >= 1)
    {
      uint64_t v5 = a2 - 1;
      if (a2 != 1)
      {
        unsigned __int8 v6 = a3 + 48;
        unsigned __int8 v7 = a3 + 55;
        unsigned __int8 v8 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v6 = 58;
        }
        else
        {
          unsigned __int8 v8 = 97;
          unsigned __int8 v7 = 65;
        }
        if (result)
        {
          uint64_t v9 = 0;
          for (uint64_t i = result + 1; ; ++i)
          {
            unsigned int v11 = *i;
            if (v11 < 0x30 || v11 >= v6)
            {
              if (v11 < 0x41 || v11 >= v7)
              {
                uint64_t v13 = 0;
                if (v11 < 0x61 || v11 >= v8) {
                  return (unsigned __int8 *)v13;
                }
                char v12 = -87;
              }
              else
              {
                char v12 = -55;
              }
            }
            else
            {
              char v12 = -48;
            }
            uint64_t v14 = v9 * a3;
            if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63) {
              return 0;
            }
            uint64_t v9 = v14 - (v11 + v12);
            if (__OFSUB__(v14, (v11 + v12))) {
              return 0;
            }
            if (!--v5) {
              return (unsigned __int8 *)v9;
            }
          }
        }
        return 0;
      }
      return 0;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_100235650()
{
  unint64_t v0 = sub_1002356BC();
  uint64_t v4 = sub_1002356F0(v0, v1, v2, v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_1002356BC()
{
  return String.subscript.getter();
}

uint64_t sub_1002356F0(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  if ((a4 & 0x1000000000000000) != 0)
  {
    uint64_t v9 = sub_100235848(a1, a2, a3, a4);
    if (!v9
      || (uint64_t v10 = v9,
          unsigned int v11 = sub_10016F468(v9, 0),
          unint64_t v12 = sub_100235948((unint64_t)v14, (uint64_t)(v11 + 4), v10, a1, a2, a3, a4),
          swift_bridgeObjectRetain(),
          swift_bridgeObjectRelease(),
          v12 == v10))
    {
      uint64_t v13 = static String._uncheckedFromUTF8(_:)();
      swift_release();
      return v13;
    }
    __break(1u);
  }
  else
  {
    if ((a4 & 0x2000000000000000) != 0)
    {
      v14[0] = a3;
      v14[1] = a4 & 0xFFFFFFFFFFFFFFLL;
      return static String._uncheckedFromUTF8(_:)();
    }
    if ((a3 & 0x1000000000000000) != 0) {
      goto LABEL_4;
    }
  }
  _StringObject.sharedUTF8.getter();
LABEL_4:

  return static String._uncheckedFromUTF8(_:)();
}

uint64_t sub_100235848(uint64_t a1, unint64_t a2, unint64_t a3, uint64_t a4)
{
  unint64_t v4 = a4;
  uint64_t v5 = a3;
  unint64_t v6 = a2;
  unint64_t v7 = a1;
  uint64_t v8 = (a3 >> 59) & 1;
  if ((a4 & 0x1000000000000000) == 0) {
    LOBYTE(v8) = 1;
  }
  uint64_t v9 = 4 << v8;
  if ((a1 & 0xC) == 4 << v8)
  {
    a1 = sub_100235290(a1, a3, a4);
    unint64_t v7 = a1;
  }
  if ((v6 & 0xC) == v9)
  {
    a1 = sub_100235290(v6, v5, v4);
    unint64_t v6 = a1;
    if ((v4 & 0x1000000000000000) == 0) {
      return (v6 >> 16) - (v7 >> 16);
    }
  }
  else if ((v4 & 0x1000000000000000) == 0)
  {
    return (v6 >> 16) - (v7 >> 16);
  }
  unint64_t v11 = HIBYTE(v4) & 0xF;
  if ((v4 & 0x2000000000000000) == 0) {
    unint64_t v11 = v5 & 0xFFFFFFFFFFFFLL;
  }
  if (v11 < v7 >> 16)
  {
    __break(1u);
  }
  else if (v11 >= v6 >> 16)
  {
    a1 = v7;
    a2 = v6;
    a3 = v5;
    a4 = v4;
    return String.UTF8View._foreignDistance(from:to:)(a1, a2, a3, a4);
  }
  __break(1u);
  return String.UTF8View._foreignDistance(from:to:)(a1, a2, a3, a4);
}

unint64_t sub_100235948(unint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, unint64_t a7)
{
  uint64_t v9 = (void *)result;
  if (!a2) {
    goto LABEL_5;
  }
  if (!a3)
  {
    unint64_t v12 = a4;
    uint64_t v11 = 0;
    goto LABEL_35;
  }
  if (a3 < 0) {
    goto LABEL_38;
  }
  unint64_t v10 = a5 >> 14;
  unint64_t v27 = a4 >> 14;
  if (a4 >> 14 == a5 >> 14)
  {
LABEL_5:
    uint64_t v11 = 0;
    unint64_t v12 = a4;
LABEL_35:
    *uint64_t v9 = a4;
    v9[1] = a5;
    v9[2] = a6;
    _OWORD v9[3] = a7;
    v9[4] = v12;
    return v11;
  }
  uint64_t v11 = 0;
  uint64_t v14 = (a6 >> 59) & 1;
  if ((a7 & 0x1000000000000000) == 0) {
    LOBYTE(v14) = 1;
  }
  uint64_t v15 = 4 << v14;
  uint64_t v21 = (a7 & 0xFFFFFFFFFFFFFFFLL) + 32;
  uint64_t v22 = a7 & 0xFFFFFFFFFFFFFFLL;
  uint64_t v16 = HIBYTE(a7) & 0xF;
  if ((a7 & 0x2000000000000000) == 0) {
    uint64_t v16 = a6 & 0xFFFFFFFFFFFFLL;
  }
  unint64_t v23 = v16;
  uint64_t v26 = a3 - 1;
  unint64_t v12 = a4;
  while (1)
  {
    uint64_t result = v12;
    if ((v12 & 0xC) == v15) {
      uint64_t result = sub_100235290(v12, a6, a7);
    }
    if (result >> 14 < v27 || result >> 14 >= v10) {
      break;
    }
    if ((a7 & 0x1000000000000000) != 0)
    {
      uint64_t result = String.UTF8View._foreignSubscript(position:)();
      char v19 = result;
    }
    else
    {
      unint64_t v18 = result >> 16;
      if ((a7 & 0x2000000000000000) != 0)
      {
        v28[0] = a6;
        v28[1] = v22;
        char v19 = *((unsigned char *)v28 + v18);
      }
      else
      {
        uint64_t result = v21;
        if ((a6 & 0x1000000000000000) == 0) {
          uint64_t result = _StringObject.sharedUTF8.getter();
        }
        char v19 = *(unsigned char *)(result + v18);
      }
    }
    if ((v12 & 0xC) == v15)
    {
      uint64_t result = sub_100235290(v12, a6, a7);
      unint64_t v12 = result;
      if ((a7 & 0x1000000000000000) == 0)
      {
LABEL_27:
        unint64_t v12 = (v12 & 0xFFFFFFFFFFFF0000) + 65540;
        goto LABEL_31;
      }
    }
    else if ((a7 & 0x1000000000000000) == 0)
    {
      goto LABEL_27;
    }
    if (v23 <= v12 >> 16) {
      goto LABEL_37;
    }
    unint64_t v12 = String.UTF8View._foreignIndex(after:)();
LABEL_31:
    *(unsigned char *)(a2 + v11) = v19;
    if (v26 == v11)
    {
      uint64_t v11 = a3;
      goto LABEL_35;
    }
    ++v11;
    if (v10 == v12 >> 14) {
      goto LABEL_35;
    }
  }
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
  return result;
}

unsigned char *sub_100235B4C@<X0>(unsigned char *result@<X0>, BOOL *a2@<X8>)
{
  unsigned int v3 = *result;
  BOOL v4 = v3 > 0x20;
  uint64_t v5 = (1 << v3) & 0x100003E01;
  BOOL v6 = v4 || v5 == 0;
  BOOL v7 = v6 && (result = (unsigned char *)_swift_stdlib_strtod_clocale()) != 0 && *result == 0;
  *a2 = v7;
  return result;
}

uint64_t sub_100235BB8(uint64_t a1, uint64_t a2, void (*a3)(uint64_t *__return_ptr))
{
  if (a1)
  {
    a3(&var2);
    if (!v3) {
      char v4 = var2;
    }
  }
  else
  {
    ((void (*)(uint64_t *__return_ptr, void, void))a3)((uint64_t *)((char *)&var2 + 1), 0, 0);
    if (!v3) {
      char v4 = BYTE1(var2);
    }
  }
  return v4 & 1;
}

unsigned char *sub_100235C18@<X0>(unsigned char *a1@<X0>, BOOL *a2@<X8>)
{
  return sub_100235B4C(a1, a2);
}

void *sub_100235C34@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = (*(void *(**)(uint64_t *__return_ptr))(v1 + 16))(&v5);
  if (!v2) {
    *a1 = v5;
  }
  return result;
}

uint64_t sub_100235C78(void *a1, void *a2)
{
  BOOL v2 = *a1 == *a2 && a1[1] == a2[1];
  if (!v2 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
    return 0;
  }
  type metadata accessor for ListViewTipManager.LocationNameAndLocationOfInterestType(0);

  return static LocationOfInterestType.== infix(_:_:)();
}

uint64_t sub_100235CF4()
{
  return dispatch thunk of Hashable.hash(into:)();
}

Swift::Int sub_100235DA0()
{
  return Hasher._finalize()();
}

Swift::Int sub_100235E70()
{
  return Hasher._finalize()();
}

unint64_t sub_100235F2C(Swift::String string)
{
  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_100E05FC0, v2);
  swift_bridgeObjectRelease();
  if (v3 >= 7) {
    return 7;
  }
  else {
    return v3;
  }
}

uint64_t sub_100235F78(char a1)
{
  uint64_t result = 0xD000000000000013;
  switch(a1)
  {
    case 1:
    case 6:
      uint64_t result = 0xD000000000000015;
      break;
    case 2:
      unsigned int v3 = 1701670760;
      goto LABEL_4;
    case 3:
      unsigned int v3 = 1802661751;
LABEL_4:
      uint64_t result = v3 | 0x6164705500000000;
      break;
    case 4:
      uint64_t result = 0xD000000000000019;
      break;
    case 5:
      uint64_t result = 0xD000000000000022;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_100236058(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_10088A820(*a1, *a2);
}

Swift::Int sub_100236064()
{
  return sub_1006524EC(*v0);
}

uint64_t sub_10023606C(uint64_t a1)
{
  return sub_1002C2818(a1, *v1);
}

Swift::Int sub_100236074(uint64_t a1)
{
  return sub_1002C46B4(a1, *v1);
}

unint64_t sub_10023607C@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_100235F2C(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_1002360AC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_100235F78(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

void sub_1002360D8()
{
  sub_100162EA0();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v29 = v2;
  uint64_t v30 = v4;
  uint64_t v31 = v5;
  uint64_t v6 = v4;
  uint64_t v8 = v7;
  uint64_t v28 = v9;
  uint64_t v10 = sub_10017DF08(&qword_100E63440);
  uint64_t v11 = sub_100109308(v10);
  __chkstk_darwin(v11);
  sub_1001626E0();
  uint64_t v14 = v13 - v12;
  sub_10017DF08(&qword_100E63448);
  sub_100179C0C();
  __chkstk_darwin(v15);
  sub_100162F18();
  type metadata accessor for WeatherMenuTipMutableAttributes();
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = 0;
  *(void *)(v0 + 16) = v16;
  *(unsigned char *)(v0 + 24) = 1;
  sub_10017DF08(&qword_100E63450);
  swift_allocObject();
  *(void *)(v0 + 32) = PassthroughSubject.init()();
  static NSRunLoop.SchedulerTimeType.Stride.seconds(_:)();
  uint64_t v17 = OBJC_IVAR____TtC7Weather18ListViewTipManager_tipStatus;
  type metadata accessor for Tips.Status();
  sub_10023A808();
  *(void *)(v0 + v17) = Dictionary.init(dictionaryLiteral:)();
  *(void *)(v0 + OBJC_IVAR____TtC7Weather18ListViewTipManager_cancellables) = 0;
  uint64_t v18 = v0 + OBJC_IVAR____TtC7Weather18ListViewTipManager_cachedLocationOfInterestState;
  *(void *)uint64_t v18 = 0;
  *(void *)(v18 + 8) = 0;
  *(unsigned char *)(v18 + 16) = -1;
  sub_10020D948(v6, v0 + OBJC_IVAR____TtC7Weather18ListViewTipManager_notificationsOptInStatusFactory);
  sub_10020D948(v3, v0 + OBJC_IVAR____TtC7Weather18ListViewTipManager_weatherLocationCoalescenceManager);
  char v19 = (void *)(v0 + OBJC_IVAR____TtC7Weather18ListViewTipManager_dispatcher);
  *char v19 = v28;
  v19[1] = v8;
  *(void *)&v32[0] = *(void *)(v0 + 32);
  unsigned int v20 = self;
  swift_retain();
  swift_retain();
  id v33 = [v20 mainRunLoop];
  uint64_t v21 = type metadata accessor for NSRunLoop.SchedulerOptions();
  sub_100179C70(v14, v22, v23, v21);
  sub_100215BF8();
  sub_1001246C8(&qword_100E63468, &qword_100E63450);
  sub_10023A960((unint64_t *)&qword_100E63470, (void (*)(uint64_t))sub_100215BF8);
  Publisher.debounce<A>(for:scheduler:options:)();
  sub_100178110(v14, &qword_100E63440);

  swift_release();
  swift_allocObject();
  swift_weakInit();
  sub_1001246C8(&qword_100E63478, &qword_100E63448);
  uint64_t v24 = Publisher<>.sink(receiveValue:)();
  swift_release();
  sub_100162F0C();
  v25();
  *(void *)(v1 + OBJC_IVAR____TtC7Weather18ListViewTipManager_cancellables) = v24;
  swift_release();
  sub_100238A4C(0, 0, 0);
  sub_10018AF78(1);
  sub_10018AF78(2);
  sub_10018AF78(3);
  sub_10018AF78(4);
  uint64_t v26 = swift_allocObject();
  *(void *)(v26 + 16) = v28;
  *(void *)(v26 + 24) = v8;
  swift_retain();
  sub_100238A4C(6, (uint64_t)sub_10023A8CC, v26);
  swift_release();
  sub_10020D948(v31, (uint64_t)v32);
  uint64_t v27 = swift_allocObject();
  sub_1001262E4(v32, v27 + 16);
  sub_100238A4C(5, (uint64_t)sub_10023A90C, v27);
  swift_release();
  swift_release();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v29);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v31);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v30);
  sub_100162694();
}

uint64_t sub_10023655C()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1002367A8();
    return swift_release();
  }
  return result;
}

uint64_t sub_1002365BC(uint64_t (*a1)(uint64_t))
{
  sub_10017DF08(&qword_100E63480);
  type metadata accessor for MainAction();
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_100C251B0;
  type metadata accessor for ListViewAction();
  swift_storeEnumTagMultiPayload();
  type metadata accessor for ViewAction();
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  uint64_t v8 = 0;
  memset(v7, 0, sizeof(v7));
  sub_1001B7204((uint64_t)v7, (uint64_t)v4, (uint64_t *)&unk_100EA01F0);
  uint64_t v5 = v2;
  char v6 = 0;
  swift_bridgeObjectRetain();
  sub_1001AB2DC((uint64_t)v4, a1);
  sub_100178110((uint64_t)v4, &qword_100E63488);
  swift_bridgeObjectRelease();
  return sub_100178110((uint64_t)v7, (uint64_t *)&unk_100EA01F0);
}

uint64_t sub_100236730(void *a1)
{
  return dispatch thunk of NotificationsOptInManagerType.didDismissResubscriptionTip()();
}

uint64_t sub_100236770()
{
  return PassthroughSubject.send(_:)();
}

uint64_t sub_100236794(char a1)
{
  *(unsigned char *)(v1 + 24) = a1;
  return sub_100238A4C(4, 0, 0);
}

void sub_1002367A8()
{
  sub_100162EA0();
  uint64_t v2 = v0;
  sub_100162708();
  uint64_t v3 = type metadata accessor for LocationOfInterestType();
  sub_100179C0C();
  uint64_t v5 = v4;
  __chkstk_darwin(v6);
  uint64_t v188 = (char *)v173 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001626D4();
  __chkstk_darwin(v8);
  sub_100128F8C();
  uint64_t v192 = v9;
  uint64_t v10 = sub_10017DF08(&qword_100E63508);
  uint64_t v11 = sub_100109308(v10);
  __chkstk_darwin(v11);
  sub_10017225C(v12, v173[0]);
  uint64_t v196 = type metadata accessor for LocationOfInterest();
  sub_100179C0C();
  uint64_t v190 = v13;
  __chkstk_darwin(v14);
  sub_100162EF8();
  uint64_t v195 = v15;
  sub_1001626D4();
  __chkstk_darwin(v16);
  sub_100128F8C();
  uint64_t v189 = v17;
  uint64_t v194 = type metadata accessor for LocationModel();
  sub_100179C0C();
  uint64_t v181 = v18;
  __chkstk_darwin(v19);
  uint64_t v193 = (char *)v173 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = type metadata accessor for LocationsState();
  sub_100162E4C();
  __chkstk_darwin(v22);
  sub_100162EF8();
  uint64_t v178 = v23;
  sub_1001626D4();
  __chkstk_darwin(v24);
  uint64_t v26 = (char *)v173 - v25;
  uint64_t v27 = type metadata accessor for Tips.InvalidationReason();
  sub_100179C0C();
  uint64_t v29 = v28;
  __chkstk_darwin(v30);
  sub_100125FF8();
  uint64_t v31 = *(void *)(v0 + 64);
  sub_10023A054();
  uint64_t v186 = v31;
  if (v32)
  {
    LOBYTE(v198) = *(unsigned char *)(v2 + 24);
    (*(void (**)(uint64_t, void, uint64_t))(v29 + 104))(v1, enum case for Tips.InvalidationReason.actionPerformed(_:), v27);
    sub_10023A914();
    Tip.invalidate(reason:)();
    (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v1, v27);
    if (qword_100E62898 != -1) {
      swift_once();
    }
    uint64_t v33 = type metadata accessor for Logger();
    sub_1002102B0(v33, (uint64_t)qword_100F520D0);
    uint64_t v34 = Logger.logObject.getter();
    os_log_type_t v35 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v34, v35))
    {
      unint64_t v36 = (uint8_t *)sub_100163DC4();
      *(_WORD *)unint64_t v36 = 0;
      _os_log_impl((void *)&_mh_execute_header, v34, v35, "Invalidate notification tip due to invalidation before TipKit migration or resubscription tip shown", v36, 2u);
      sub_100162EE0();
    }
  }
  else
  {
    sub_100239A18();
    char v38 = v37;
    if (qword_100E621A0 != -1) {
      swift_once();
    }
    uint64_t v39 = sub_10017DF08(&qword_100E63520);
    sub_1002102B0(v39, (uint64_t)qword_100F50B00);
    sub_1001A44E0(v38 & 1);
    Tips.Parameter.wrappedValue.setter();
    swift_endAccess();
  }
  uint64_t v40 = v186;
  uint64_t v177 = v5;
  char v41 = sub_100239E08(v186);
  if (qword_100E622B8 != -1) {
    swift_once();
  }
  uint64_t v42 = sub_10017DF08(&qword_100E63520);
  sub_1002102B0(v42, (uint64_t)qword_100F513E8);
  sub_1001A44E0(v41 & 1);
  uint64_t v179 = v42;
  Tips.Parameter.wrappedValue.setter();
  swift_endAccess();
  uint64_t v43 = v40 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_locations;
  sub_100113680(v40 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_locations, (uint64_t)v26);
  uint64_t v180 = v21;
  uint64_t v44 = v43 + *(int *)(v21 + 48);
  uint64_t v46 = *(void *)v44;
  uint64_t v45 = *(void *)(v44 + 8);
  unsigned int v47 = *(unsigned __int8 *)(v44 + 16);
  uint64_t v48 = (uint64_t *)(v2 + OBJC_IVAR____TtC7Weather18ListViewTipManager_cachedLocationOfInterestState);
  int v49 = *(unsigned __int8 *)(v2 + OBJC_IVAR____TtC7Weather18ListViewTipManager_cachedLocationOfInterestState + 16);
  uint64_t v184 = v2 + OBJC_IVAR____TtC7Weather18ListViewTipManager_cachedLocationOfInterestState;
  uint64_t v185 = v2;
  if (v49 == 255)
  {
    sub_100189C90();
  }
  else
  {
    uint64_t v50 = v46;
    uint64_t v52 = *v48;
    uint64_t v51 = v48[1];
    sub_10015458C(v50, v45, v47);
    sub_10015458C(v50, v45, v47);
    sub_10023B964(v52, v51, v49);
    sub_1001290FC(v52, v51, v49, v50, v45, v47);
    char v54 = v53;
    sub_10015303C(v50, v45, v47);
    uint64_t v55 = v52;
    uint64_t v46 = v50;
    sub_10023B904(v55, v51, v49);
    if (v54)
    {
      sub_10013EEB8((uint64_t)v26, (void (*)(void))type metadata accessor for LocationsState);
      uint64_t v56 = v50;
      uint64_t v57 = v45;
LABEL_63:
      sub_10015303C(v56, v57, v47);
      goto LABEL_76;
    }
  }
  if (qword_100E62898 != -1) {
    swift_once();
  }
  uint64_t v58 = type metadata accessor for Logger();
  uint64_t v59 = sub_1002102B0(v58, (uint64_t)qword_100F520D0);
  sub_100189C90();
  swift_retain();
  sub_100189C90();
  swift_retain();
  uint64_t v183 = v59;
  uint64_t v60 = Logger.logObject.getter();
  os_log_type_t v61 = static os_log_type_t.default.getter();
  int v62 = v61;
  BOOL v63 = os_log_type_enabled(v60, v61);
  uint64_t v187 = v45;
  unsigned __int8 v182 = v26;
  if (v63)
  {
    uint64_t v64 = swift_slowAlloc();
    uint64_t v65 = swift_slowAlloc();
    uint64_t v176 = v65;
    *(_DWORD *)uint64_t v64 = 141558787;
    uint64_t v197 = v65;
    uint64_t v198 = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v64 + 12) = 2081;
    uint64_t v198 = v46;
    uint64_t v199 = v187;
    char v200 = v47;
    sub_10023B918();
    int v175 = v62;
    os_log_t v174 = v60;
    uint64_t v66 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v67 = v3;
    uint64_t v68 = v46;
    uint64_t v198 = sub_10016414C(v66, v69, &v197);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_10015303C(v46, v187, v47);
    sub_10015303C(v46, v187, v47);
    *(_WORD *)(v64 + 22) = 2160;
    uint64_t v198 = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v64 + 32) = 2081;
    v173[1] = v64 + 34;
    unsigned int v70 = v47;
    uint64_t v71 = *(void *)v184;
    uint64_t v72 = *(void *)(v184 + 8);
    char v73 = *(unsigned char *)(v184 + 16);
    sub_10023B964(*(void *)v184, v72, v73);
    uint64_t v74 = sub_1006330B8(v71, v72, v73);
    unint64_t v76 = v75;
    uint64_t v77 = v71;
    uint64_t v46 = v68;
    uint64_t v3 = v67;
    uint64_t v26 = v182;
    uint64_t v78 = v72;
    unsigned int v47 = v70;
    sub_10023B904(v77, v78, v73);
    uint64_t v198 = sub_10016414C(v74, v76, &v197);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_release_n();
    os_log_t v79 = v174;
    _os_log_impl((void *)&_mh_execute_header, v174, (os_log_type_t)v175, "ListViewTipManager detected location of interest state change new=%{private,mask.hash}s, old=%{private,mask.hash}s", (uint8_t *)v64, 0x2Au);
    swift_arrayDestroy();
    sub_100162EE0();
    sub_100162EE0();
  }
  else
  {
    sub_10015303C(v46, v45, v47);
    sub_10015303C(v46, v45, v47);
    swift_release_n();
  }
  uint64_t v80 = v191;
  if (v47 < 2)
  {
    uint64_t v81 = Logger.logObject.getter();
    os_log_type_t v82 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v81, v82))
    {
      uint64_t v83 = (uint8_t *)sub_100163DC4();
      *(_WORD *)uint64_t v83 = 0;
      _os_log_impl((void *)&_mh_execute_header, v81, v82, "ListViewTipManager location of interest state is new or saved", v83, 2u);
      sub_100162EE0();
    }

    uint64_t v84 = *(void *)(*(void *)&v26[*(int *)(v180 + 24)] + 16);
    if (v84)
    {
      uint64_t v185 = v46;
      LODWORD(v186) = v47;
      uint64_t v86 = (char *)v181 + 16;
      uint64_t v85 = (char *)*((void *)v181 + 2);
      sub_100129058();
      uint64_t v89 = (uint64_t)v87 + v88;
      uint64_t v192 = (char *)*((void *)v86 + 7);
      uint64_t v90 = (void (**)(char *, uint64_t))(v86 - 8);
      uint64_t v91 = (void (**)(uint64_t, uint64_t, uint64_t))(v190 + 32);
      uint64_t v181 = v87;
      swift_bridgeObjectRetain();
      unint64_t v92 = _swiftEmptyArrayStorage;
      uint64_t v188 = v85;
      do
      {
        uint64_t v93 = v193;
        uint64_t v94 = v194;
        ((void (*)(char *, uint64_t, uint64_t))v85)(v193, v89, v194);
        LocationModel.locationOfInterest.getter();
        (*v90)(v93, v94);
        uint64_t v95 = v196;
        sub_10012B520(v80, 1, v196);
        if (v96)
        {
          sub_100178110(v80, &qword_100E63508);
        }
        else
        {
          uint64_t v97 = v86;
          uint64_t v98 = *v91;
          uint64_t v99 = v189;
          (*v91)(v189, v80, v95);
          v98((uint64_t)v195, v99, v95);
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
            unint64_t v92 = (void *)sub_1007E95B0(0, v92[2] + 1, 1, (uint64_t)v92);
          }
          unint64_t v102 = v92[2];
          unint64_t v101 = v92[3];
          if (v102 >= v101 >> 1) {
            unint64_t v92 = (void *)sub_1007E95B0(v101 > 1, v102 + 1, 1, (uint64_t)v92);
          }
          v92[2] = v102 + 1;
          sub_100129058();
          v98((uint64_t)v92 + v103 + *(void *)(v104 + 72) * v102, (uint64_t)v195, v196);
          uint64_t v80 = v191;
          uint64_t v86 = v97;
          uint64_t v85 = v188;
        }
        v89 += (uint64_t)v192;
        --v84;
      }
      while (v84);
      swift_bridgeObjectRelease();
      uint64_t v26 = v182;
      LOBYTE(v47) = v186;
      uint64_t v46 = v185;
    }
    else
    {
      unint64_t v92 = _swiftEmptyArrayStorage;
    }
    uint64_t v146 = v92[2];
    swift_bridgeObjectRelease();
    if (!v146)
    {
      sub_10013EEB8((uint64_t)v26, (void (*)(void))type metadata accessor for LocationsState);
      uint64_t v56 = v46;
      uint64_t v57 = v187;
      goto LABEL_63;
    }
    uint64_t v147 = (void *)Logger.logObject.getter();
    os_log_type_t v148 = static os_log_type_t.default.getter();
    if (sub_10017F230(v148))
    {
      uint64_t v149 = (_WORD *)sub_100163DC4();
      sub_1001858BC(v149);
      sub_100179C44((void *)&_mh_execute_header, v150, v151, "ListViewTipManager set HomeAndWorkAddedTip.displayTip = true");
      sub_100162EE0();
    }

    if (qword_100E628A0 != -1) {
      swift_once();
    }
    uint64_t v138 = qword_100F520E8;
    goto LABEL_61;
  }
  if (v47 != 2)
  {
    uint64_t v139 = (void *)Logger.logObject.getter();
    os_log_type_t v140 = static os_log_type_t.default.getter();
    if (!sub_10017F230(v140)) {
      goto LABEL_73;
    }
    uint64_t v142 = (_WORD *)sub_100163DC4();
    sub_1001858BC(v142);
    uint64_t v145 = "ListViewTipManager location of interest state is none";
    goto LABEL_72;
  }
  uint64_t v105 = v178;
  sub_100113680(v186 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_locations, v178);
  sub_100237930();
  uint64_t v107 = v106;
  sub_10013EEB8(v105, (void (*)(void))type metadata accessor for LocationsState);
  if (*(void *)(v107 + 16))
  {
    uint64_t v185 = v46;
    LODWORD(v186) = 2;
    sub_10017DF08(&qword_100E63528);
    uint64_t v108 = v177;
    uint64_t v109 = *(void *)(v177 + 72);
    unint64_t v110 = (*(unsigned __int8 *)(v177 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v177 + 80);
    uint64_t v111 = swift_allocObject();
    *(_OWORD *)(v111 + 16) = xmmword_100C25ED0;
    uint64_t v190 = v111;
    uint64_t v112 = v111 + v110;
    uint64_t v113 = *(void (**)(uint64_t))(v108 + 104);
    LODWORD(v180) = enum case for LocationOfInterestType.home(_:);
    v113(v112);
    LODWORD(v176) = enum case for LocationOfInterestType.work(_:);
    uint64_t v189 = v108 + 104;
    uint64_t v181 = v113;
    v113(v112 + v109);
    uint64_t v116 = *(void (**)(char *, uint64_t, uint64_t))(v108 + 16);
    uint64_t v115 = v108 + 16;
    uint64_t v114 = v116;
    uint64_t v196 = v107 + 56;
    uint64_t v117 = (void (**)(char *, uint64_t))(v115 - 8);
    swift_bridgeObjectRetain();
    int v118 = 0;
    uint64_t v119 = 0;
    uint64_t v120 = v192;
    uint64_t v178 = v112;
    uint64_t v195 = (void (*)(char *, unint64_t, uint64_t))v116;
    while (1)
    {
      LODWORD(v191) = v118;
      v114(v120, v112 + v119 * v109, v3);
      uint64_t v121 = *(void *)(v107 + 16);
      uint64_t v193 = (char *)((unint64_t)v117 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000);
      if (!v121) {
        break;
      }
      sub_10023A960(&qword_100E63510, (void (*)(uint64_t))&type metadata accessor for LocationOfInterestType);
      uint64_t v122 = dispatch thunk of Hashable._rawHashValue(seed:)();
      uint64_t v123 = -1 << *(unsigned char *)(v107 + 32);
      unint64_t v124 = v122 & ~v123;
      if (((*(void *)(v196 + ((v124 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v124) & 1) == 0) {
        break;
      }
      uint64_t v194 = ~v123;
      while (1)
      {
        uint64_t v125 = v107;
        uint64_t v126 = v109;
        unint64_t v127 = *(void *)(v107 + 48) + v124 * v109;
        uint64_t v128 = v188;
        uint64_t v129 = v115;
        v195(v188, v127, v3);
        sub_10023A960(&qword_100E63530, (void (*)(uint64_t))&type metadata accessor for LocationOfInterestType);
        char v130 = dispatch thunk of static Equatable.== infix(_:_:)();
        uint64_t v131 = *v117;
        (*v117)(v128, v3);
        if (v130) {
          break;
        }
        unint64_t v124 = (v124 + 1) & v194;
        uint64_t v115 = v129;
        uint64_t v107 = v125;
        uint64_t v109 = v126;
        if (((*(void *)(v196 + ((v124 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v124) & 1) == 0)
        {
          uint64_t v46 = v185;
          v131(v192, v3);
          goto LABEL_64;
        }
      }
      uint64_t v120 = v192;
      v131(v192, v3);
      int v118 = 1;
      uint64_t v119 = 1;
      uint64_t v115 = v129;
      uint64_t v107 = v125;
      uint64_t v109 = v126;
      uint64_t v112 = v178;
      uint64_t v114 = (void (*)(char *, uint64_t, uint64_t))v195;
      if (v191)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        uint64_t v132 = (void *)Logger.logObject.getter();
        os_log_type_t v133 = static os_log_type_t.default.getter();
        BOOL v134 = sub_10017F230(v133);
        uint64_t v26 = v182;
        if (v134)
        {
          uint64_t v135 = (_WORD *)sub_100163DC4();
          sub_1001858BC(v135);
          sub_100179C44((void *)&_mh_execute_header, v136, v137, "ListViewTipManager set HomeAndWorkUpdatedTip.displayTip = true");
          sub_100162EE0();
        }

        LOBYTE(v47) = v186;
        uint64_t v46 = v185;
        if (qword_100E62578 != -1) {
          swift_once();
        }
        uint64_t v138 = qword_100F51AD8;
        goto LABEL_61;
      }
    }
    uint64_t v131 = *v117;
    uint64_t v46 = v185;
    (*v117)(v120, v3);
LABEL_64:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v152 = (uint64_t)v188;
    uint64_t v153 = (void (*)(uint64_t, void, uint64_t))v181;
    ((void (*)(char *, void, uint64_t))v181)(v188, v180, v3);
    char v154 = sub_10062D7B4(v152, v107);
    v131((char *)v152, v3);
    uint64_t v26 = v182;
    if (v154)
    {
      swift_bridgeObjectRelease();
      uint64_t v155 = (void *)Logger.logObject.getter();
      os_log_type_t v156 = static os_log_type_t.default.getter();
      if (sub_10017F230(v156))
      {
        uint64_t v157 = (_WORD *)sub_100163DC4();
        sub_1001858BC(v157);
        sub_100179C44((void *)&_mh_execute_header, v158, v159, "ListViewTipManager set HomeUpdatedTip.displayTip = true");
        sub_100162EE0();
      }

      LOBYTE(v47) = v186;
      if (qword_100E62568 != -1) {
        swift_once();
      }
      uint64_t v138 = qword_100F51AB8;
    }
    else
    {
      v153(v152, v176, v3);
      char v167 = sub_10062D7B4(v152, v107);
      swift_bridgeObjectRelease();
      v131((char *)v152, v3);
      LOBYTE(v47) = v186;
      uint64_t v162 = v187;
      if ((v167 & 1) == 0) {
        goto LABEL_75;
      }
      uint64_t v168 = (void *)Logger.logObject.getter();
      os_log_type_t v169 = static os_log_type_t.default.getter();
      if (sub_10017F230(v169))
      {
        uint64_t v170 = (_WORD *)sub_100163DC4();
        sub_1001858BC(v170);
        sub_100179C44((void *)&_mh_execute_header, v171, v172, "ListViewTipManager set WorkUpdatedTip.displayTip = true");
        sub_100162EE0();
      }

      if (qword_100E62560 != -1) {
        swift_once();
      }
      uint64_t v138 = qword_100F51AA0;
    }
LABEL_61:
    sub_1002102B0(v179, (uint64_t)v138);
    sub_1001A44E0(1);
    Tips.Parameter.wrappedValue.setter();
    swift_endAccess();
    goto LABEL_74;
  }
  swift_bridgeObjectRelease();
  uint64_t v139 = (void *)Logger.logObject.getter();
  os_log_type_t v160 = static os_log_type_t.default.getter();
  if (sub_10017F230(v160))
  {
    uint64_t v161 = (_WORD *)sub_100163DC4();
    sub_1001858BC(v161);
    uint64_t v145 = "ListViewTipManager changes is empty";
LABEL_72:
    sub_100179C44((void *)&_mh_execute_header, v143, v144, v145);
    sub_100162EE0();
  }
LABEL_73:

LABEL_74:
  uint64_t v162 = v187;
LABEL_75:
  sub_10013EEB8((uint64_t)v26, (void (*)(void))type metadata accessor for LocationsState);
  uint64_t v163 = v184;
  uint64_t v164 = *(void *)v184;
  uint64_t v165 = *(void *)(v184 + 8);
  *(void *)uint64_t v184 = v46;
  *(void *)(v163 + 8) = v162;
  unsigned __int8 v166 = *(unsigned char *)(v163 + 16);
  *(unsigned char *)(v163 + 16) = v47;
  sub_10023B904(v164, v165, v166);
LABEL_76:
  sub_100162694();
}

void sub_100237930()
{
  sub_100162EA0();
  uint64_t v185 = v2;
  uint64_t v181 = v3;
  uint64_t v176 = v4;
  uint64_t v194 = type metadata accessor for LocationOfInterestType();
  sub_100179C0C();
  uint64_t v186 = v5;
  __chkstk_darwin(v6);
  sub_100162EF8();
  uint64_t v188 = v7;
  sub_1001626D4();
  __chkstk_darwin(v8);
  sub_100128F8C();
  uint64_t v190 = v9;
  type metadata accessor for ListViewTipManager.LocationNameAndLocationOfInterestType(0);
  sub_100179C0C();
  uint64_t v192 = v11;
  uint64_t v193 = v10;
  __chkstk_darwin(v10);
  sub_100162EF8();
  uint64_t v175 = v12;
  sub_1001626D4();
  __chkstk_darwin(v13);
  sub_100109770();
  uint64_t v174 = v14;
  sub_1001626D4();
  __chkstk_darwin(v15);
  sub_100109770();
  uint64_t v189 = v16;
  sub_1001626D4();
  __chkstk_darwin(v17);
  sub_100128F8C();
  uint64_t v191 = v18;
  uint64_t v19 = sub_10017DF08(&qword_100E63508);
  uint64_t v20 = sub_100109308(v19);
  __chkstk_darwin(v20);
  uint64_t v180 = (char *)&v168 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001626D4();
  __chkstk_darwin(v22);
  sub_100109770();
  uint64_t v179 = v23;
  sub_1001626D4();
  __chkstk_darwin(v24);
  sub_100109770();
  uint64_t v184 = v25;
  sub_1001626D4();
  __chkstk_darwin(v26);
  sub_10019B340(v27, v28, v29, v30, v31, v32, v33, v34, v168);
  uint64_t v35 = type metadata accessor for LocationModel();
  sub_100179C0C();
  uint64_t v187 = v36;
  __chkstk_darwin(v37);
  sub_100162EF8();
  uint64_t v173 = v38;
  sub_1001626D4();
  __chkstk_darwin(v39);
  sub_100109770();
  uint64_t v177 = v40;
  sub_1001626D4();
  __chkstk_darwin(v41);
  sub_100109770();
  uint64_t v178 = v42;
  sub_1001626D4();
  __chkstk_darwin(v43);
  sub_100109770();
  uint64_t v169 = v44;
  sub_1001626D4();
  __chkstk_darwin(v45);
  sub_100109770();
  unsigned __int8 v182 = v46;
  sub_1001626D4();
  __chkstk_darwin(v47);
  int v49 = (char *)&v168 - v48;
  uint64_t v50 = sub_10017DF08((uint64_t *)&unk_100EADD50);
  uint64_t v51 = sub_100109308(v50);
  __chkstk_darwin(v51);
  sub_1001626E0();
  uint64_t v54 = v53 - v52;
  uint64_t v55 = type metadata accessor for WeatherCoalescedLocationResult();
  uint64_t v170 = v55;
  uint64_t v56 = *(void *)(v55 - 8);
  __chkstk_darwin(v55);
  sub_100162F18();
  uint64_t v57 = (void *)(v0 + OBJC_IVAR____TtC7Weather18ListViewTipManager_weatherLocationCoalescenceManager);
  sub_1001B1E64((void *)(v0 + OBJC_IVAR____TtC7Weather18ListViewTipManager_weatherLocationCoalescenceManager), *(void *)(v0 + OBJC_IVAR____TtC7Weather18ListViewTipManager_weatherLocationCoalescenceManager + 24));
  sub_100162708();
  uint64_t v172 = (void *)type metadata accessor for CurrentLocation();
  sub_100179C70(v54, v58, v59, (uint64_t)v172);
  uint64_t v60 = type metadata accessor for LocationsState();
  uint64_t v171 = *(char **)&v176[*(int *)(v60 + 20)];
  uint64_t v176 = *(char **)&v176[*(int *)(v60 + 52)];
  dispatch thunk of WeatherLocationCoalescenceManagerType.coalesceLocations(currentLocation:locationList:locationsOfInterest:displayContextByLocation:)();
  sub_100178110(v54, (uint64_t *)&unk_100EADD50);
  uint64_t v61 = WeatherCoalescedLocationResult.coalescedLocations.getter();
  int v62 = (void *)(v56 + 8);
  BOOL v63 = *(void (**)(uint64_t, uint64_t))(v56 + 8);
  uint64_t v181 = v62;
  v63(v1, v55);
  sub_1001B1E64(v57, v57[3]);
  _s7Weather24LocationCompositionStateOwst_0(v54, 1, 1, (uint64_t)v172);
  dispatch thunk of WeatherLocationCoalescenceManagerType.coalesceLocations(currentLocation:locationList:locationsOfInterest:displayContextByLocation:)();
  sub_100178110(v54, (uint64_t *)&unk_100EADD50);
  uint64_t v185 = WeatherCoalescedLocationResult.coalescedLocations.getter();
  v63(v1, v170);
  v196[0] = (uint64_t)_swiftEmptyArrayStorage;
  uint64_t v181 = *(void **)(v61 + 16);
  if (v181)
  {
    unint64_t v64 = 0;
    uint64_t v176 = v187 + 16;
    uint64_t v65 = (void (**)(void))(v187 + 32);
    uint64_t v171 = v187 + 8;
    uint64_t v172 = (void *)v61;
    while (v64 < *(void *)(v61 + 16))
    {
      sub_10008B8B4();
      v66();
      uint64_t v67 = (uint64_t)v183;
      uint64_t v68 = (uint64_t)v49;
      LocationModel.locationOfInterest.getter();
      uint64_t v69 = type metadata accessor for LocationOfInterest();
      int v70 = _s7Weather24LocationCompositionStateOwet_0(v67, 1, v69);
      sub_100178110(v67, &qword_100E63508);
      if (v70 == 1)
      {
        sub_100162F0C();
        v71();
      }
      else
      {
        uint64_t v72 = *v65;
        sub_100188EFC();
        v72();
        if ((sub_100188658() & 1) == 0)
        {
          sub_10017EF54();
          uint64_t v68 = v196[0];
        }
        unint64_t v73 = *(void *)(v68 + 16);
        if (v73 >= *(void *)(v68 + 24) >> 1)
        {
          sub_1001848AC();
          uint64_t v68 = v196[0];
        }
        *(void *)(v68 + 16) = v73 + 1;
        sub_100188EFC();
        v72();
        v196[0] = v68;
        uint64_t v61 = (uint64_t)v172;
      }
      if (v181 == (void *)++v64)
      {
        uint64_t v74 = (void *)v196[0];
        goto LABEL_14;
      }
    }
    __break(1u);
    goto LABEL_64;
  }
  uint64_t v74 = _swiftEmptyArrayStorage;
LABEL_14:
  swift_bridgeObjectRelease();
  uint64_t v75 = v74[2];
  unint64_t v76 = v187;
  if (v75)
  {
    sub_1001A2AA0();
    uint64_t v78 = (char *)*((void *)v76 + 2);
    uint64_t v77 = v76 + 16;
    unsigned __int8 v182 = v78;
    sub_100129058();
    uint64_t v172 = v74;
    uint64_t v80 = (char *)v74 + v79;
    uint64_t v181 = (void *)*((void *)v77 + 7);
    uint64_t v176 = (char *)(v186 + 32);
    uint64_t v183 = v77;
    uint64_t v81 = v77 - 8;
    uint64_t v82 = v169;
    uint64_t v83 = v190;
    while (1)
    {
      ((void (*)(uint64_t, char *, uint64_t))v182)(v82, v80, v35);
      uint64_t v84 = LocationModel.name.getter();
      uint64_t v86 = v85;
      uint64_t v87 = v184;
      LocationModel.locationOfInterest.getter();
      uint64_t v88 = (uint64_t)v87;
      uint64_t v89 = type metadata accessor for LocationOfInterest();
      sub_10012B520(v88, 1, v89);
      if (v90) {
        break;
      }
      LocationOfInterest.type.getter();
      sub_100162F0C();
      v91();
      unint64_t v92 = v191;
      *uint64_t v191 = v84;
      v92[1] = v86;
      (*(void (**)(char *, uint64_t, uint64_t))v176)((char *)v92 + *(int *)(v193 + 20), v83, v194);
      (*(void (**)(uint64_t, uint64_t))v81)(v82, v35);
      if ((sub_100188658() & 1) == 0)
      {
        sub_10018C36C();
        sub_1007F3084();
        uint64_t v88 = v196[0];
      }
      unint64_t v93 = *(void *)(v88 + 16);
      if (v93 >= *(void *)(v88 + 24) >> 1)
      {
        sub_100164E7C();
        uint64_t v88 = v196[0];
      }
      *(void *)(v88 + 16) = v93 + 1;
      sub_1001626F0();
      sub_10023B7B4(v96, v94 + v95 * v93);
      uint64_t v80 = (char *)v181 + (void)v80;
      if (!--v75)
      {
        uint64_t v184 = (void *)v88;
        swift_release();
        unint64_t v76 = v187;
        goto LABEL_24;
      }
    }
    __break(1u);
    goto LABEL_70;
  }
  swift_release();
  uint64_t v184 = _swiftEmptyArrayStorage;
LABEL_24:
  v196[0] = (uint64_t)_swiftEmptyArrayStorage;
  uint64_t v97 = v185;
  uint64_t v98 = *(void *)(v185 + 16);
  if (v98)
  {
    unint64_t v99 = 0;
    uint64_t v191 = (uint64_t *)(v76 + 16);
    int v100 = (void (**)(void))(v76 + 32);
    uint64_t v183 = v76 + 8;
    while (v99 < *(void *)(v97 + 16))
    {
      uint64_t v101 = v178;
      sub_10008B8B4();
      v102();
      uint64_t v103 = v179;
      LocationModel.locationOfInterest.getter();
      uint64_t v104 = type metadata accessor for LocationOfInterest();
      int v105 = _s7Weather24LocationCompositionStateOwet_0(v103, 1, v104);
      sub_100178110(v103, &qword_100E63508);
      if (v105 == 1)
      {
        sub_100162F0C();
        v106();
      }
      else
      {
        uint64_t v107 = *v100;
        sub_100188EFC();
        v107();
        if ((sub_100188658() & 1) == 0)
        {
          sub_10017EF54();
          uint64_t v101 = v196[0];
        }
        unint64_t v108 = *(void *)(v101 + 16);
        if (v108 >= *(void *)(v101 + 24) >> 1)
        {
          sub_1001848AC();
          uint64_t v101 = v196[0];
        }
        *(void *)(v101 + 16) = v108 + 1;
        sub_100188EFC();
        v107();
        v196[0] = v101;
        unint64_t v76 = v187;
      }
      ++v99;
      uint64_t v97 = v185;
      if (v98 == v99)
      {
        uint64_t v109 = (void *)v196[0];
        goto LABEL_37;
      }
    }
LABEL_64:
    __break(1u);
    goto LABEL_65;
  }
  uint64_t v109 = _swiftEmptyArrayStorage;
LABEL_37:
  swift_bridgeObjectRelease();
  unint64_t v110 = (uint64_t *)v109[2];
  if (v110)
  {
    sub_1001A2AA0();
    uint64_t v112 = (char *)*((void *)v76 + 2);
    uint64_t v111 = v76 + 16;
    uint64_t v187 = v112;
    sub_100129058();
    uint64_t v114 = (char *)v109 + v113;
    uint64_t v185 = *((void *)v111 + 7);
    uint64_t v183 = (char *)(v186 + 32);
    uint64_t v181 = v109;
    unsigned __int8 v182 = v111 - 8;
    uint64_t v115 = v173;
    while (1)
    {
      uint64_t v191 = v110;
      uint64_t v116 = v111;
      ((void (*)(uint64_t, char *, uint64_t))v187)(v115, v114, v35);
      uint64_t v117 = LocationModel.name.getter();
      uint64_t v119 = v118;
      uint64_t v120 = v35;
      uint64_t v121 = (uint64_t)v180;
      LocationModel.locationOfInterest.getter();
      uint64_t v122 = type metadata accessor for LocationOfInterest();
      sub_10012B520(v121, 1, v122);
      if (v90) {
        break;
      }
      uint64_t v123 = v190;
      LocationOfInterest.type.getter();
      sub_100162F0C();
      v124();
      uint64_t v125 = v189;
      *uint64_t v189 = v117;
      v125[1] = v119;
      (*(void (**)(char *, uint64_t, uint64_t))v183)((char *)v125 + *(int *)(v193 + 20), v123, v194);
      sub_100162F0C();
      v126();
      uint64_t v127 = v196[0];
      uint64_t v35 = v120;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1007F3084();
        uint64_t v115 = v173;
        uint64_t v127 = v196[0];
      }
      uint64_t v111 = v116;
      unint64_t v128 = *(void *)(v127 + 16);
      uint64_t v129 = v191;
      if (v128 >= *(void *)(v127 + 24) >> 1)
      {
        sub_100164E7C();
        uint64_t v115 = v173;
        uint64_t v127 = v196[0];
      }
      *(void *)(v127 + 16) = v128 + 1;
      sub_100129058();
      sub_10023B7B4((uint64_t)v189, v127 + v130 + *(void *)(v131 + 72) * v128);
      v114 += v185;
      unint64_t v110 = (uint64_t *)((char *)v129 - 1);
      if (!v110) {
        goto LABEL_45;
      }
    }
LABEL_70:
    __break(1u);
    return;
  }
LABEL_45:
  swift_release();
  swift_bridgeObjectRetain();
  sub_1007E6184();
  uint64_t v133 = v132;
  swift_bridgeObjectRetain();
  sub_1007E6184();
  v196[0] = v133;
  sub_10023ACB8(v134);
  uint64_t v135 = v196[0];
  uint64_t v136 = *(void *)(v196[0] + 16);
  if (!v136)
  {
    swift_bridgeObjectRelease();
LABEL_58:
    sub_1007E65B4();
    if (qword_100E62898 == -1) {
      goto LABEL_59;
    }
    goto LABEL_68;
  }
  v196[0] = (uint64_t)_swiftEmptyArrayStorage;
  sub_1007F3020();
  int64_t v137 = sub_100442638(v135);
  int v139 = v138;
  char v141 = v140 & 1;
  uint64_t v142 = (void (**)(uint64_t, uint64_t, uint64_t))(v186 + 16);
  uint64_t v190 = v186 + 32;
  uint64_t v191 = (uint64_t *)(v135 + 56);
  while ((v137 & 0x8000000000000000) == 0 && v137 < 1 << *(unsigned char *)(v135 + 32))
  {
    if (((*(unint64_t *)((char *)v191 + (((unint64_t)v137 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v137) & 1) == 0) {
      goto LABEL_66;
    }
    if (*(_DWORD *)(v135 + 36) != v139) {
      goto LABEL_67;
    }
    uint64_t v143 = v174;
    sub_100113680(*(void *)(v135 + 48) + *(void *)(v192 + 72) * v137, v174);
    uint64_t v144 = v143;
    uint64_t v145 = v175;
    sub_10023B7B4(v144, v175);
    (*v142)(v188, v145 + *(int *)(v193 + 20), v194);
    sub_10013EEB8(v145, (void (*)(void))type metadata accessor for ListViewTipManager.LocationNameAndLocationOfInterestType);
    if ((sub_100188658() & 1) == 0)
    {
      sub_10018C36C();
      sub_1007F3020();
      uint64_t v145 = v196[0];
    }
    unint64_t v146 = *(void *)(v145 + 16);
    if (v146 >= *(void *)(v145 + 24) >> 1)
    {
      sub_1007F3020();
      uint64_t v145 = v196[0];
    }
    *(void *)(v145 + 16) = v146 + 1;
    sub_1001626F0();
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v149 + 32))(v147 + v148 * v146, v188, v194);
    v196[0] = v145;
    int64_t v150 = sub_10023B818(v137, v139, v141 & 1, v135);
    int64_t v137 = v150;
    int v139 = v151;
    char v141 = v152 & 1;
    if (!--v136)
    {
      sub_1000F0460(v150, v151, v152 & 1);
      swift_bridgeObjectRelease();
      goto LABEL_58;
    }
  }
LABEL_65:
  __break(1u);
LABEL_66:
  __break(1u);
LABEL_67:
  __break(1u);
LABEL_68:
  swift_once();
LABEL_59:
  uint64_t v153 = type metadata accessor for Logger();
  sub_1002102B0(v153, (uint64_t)qword_100F520D0);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char v154 = Logger.logObject.getter();
  os_log_type_t v155 = static os_log_type_t.default.getter();
  int v156 = v155;
  if (os_log_type_enabled(v154, v155))
  {
    uint64_t v157 = swift_slowAlloc();
    LODWORD(v191) = v156;
    uint64_t v158 = v157;
    uint64_t v192 = swift_slowAlloc();
    v196[0] = v192;
    *(_DWORD *)uint64_t v158 = 136316163;
    sub_10023A960(&qword_100E63510, (void (*)(uint64_t))&type metadata accessor for LocationOfInterestType);
    swift_bridgeObjectRetain();
    uint64_t v159 = Set.description.getter();
    unint64_t v161 = v160;
    swift_bridgeObjectRelease();
    uint64_t v195 = sub_10016414C(v159, v161, v196);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v158 + 12) = 2160;
    sub_100182E50();
    *(_WORD *)(v158 + 22) = 2081;
    swift_bridgeObjectRetain();
    uint64_t v162 = Array.description.getter();
    unint64_t v164 = v163;
    swift_bridgeObjectRelease();
    uint64_t v195 = sub_10016414C(v162, v164, v196);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v158 + 32) = 2160;
    sub_100182E50();
    *(_WORD *)(v158 + 42) = 2081;
    swift_bridgeObjectRetain();
    uint64_t v165 = Array.description.getter();
    unint64_t v167 = v166;
    swift_bridgeObjectRelease();
    uint64_t v195 = sub_10016414C(v165, v167, v196);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v154, (os_log_type_t)v191, "Location of interest changes = %s, with oldSavedLocationsWithLocationOfInterest %{private,mask.hash}s, with newSavedLocationsWithLocationOfInterest %{private,mask.hash}s", (uint8_t *)v158, 0x34u);
    swift_arrayDestroy();
    sub_100162EE0();
    sub_100162EE0();
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }

  sub_100162694();
}

unint64_t sub_10023892C@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  switch(a1)
  {
    case 1:
      *(void *)(a2 + 24) = &type metadata for HomeAndWorkUpdatedTip;
      unint64_t result = sub_10023AC00();
      goto LABEL_8;
    case 2:
      *(void *)(a2 + 24) = &type metadata for HomeUpdatedTip;
      unint64_t result = sub_10023AB68();
      goto LABEL_8;
    case 3:
      *(void *)(a2 + 24) = &type metadata for WorkUpdatedTip;
      unint64_t result = sub_10023AB1C();
      goto LABEL_8;
    case 4:
      char v5 = *(unsigned char *)(v2 + 24);
      *(void *)(a2 + 24) = &type metadata for NotificationsOptInListTip;
      unint64_t result = sub_10023A914();
      *(void *)(a2 + 32) = result;
      *(unsigned char *)a2 = v5;
      return result;
    case 5:
      *(void *)(a2 + 24) = &type metadata for NotificationsResubscriptionListTip;
      unint64_t result = sub_10023ABB4();
      goto LABEL_8;
    case 6:
      uint64_t v6 = *(void *)(v2 + 16);
      *(void *)(a2 + 24) = &type metadata for AddWeatherMenuListTip;
      *(void *)(a2 + 32) = sub_10023AAD0();
      *(void *)a2 = v6;
      return swift_retain();
    default:
      *(void *)(a2 + 24) = &type metadata for HomeAndWorkAddedTip;
      unint64_t result = sub_10023AC4C();
LABEL_8:
      *(void *)(a2 + 32) = result;
      return result;
  }
}

uint64_t sub_100238A4C(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = v3;
  uint64_t v9 = sub_10017DF08(&qword_100E634B0);
  uint64_t v10 = sub_100109308(v9);
  __chkstk_darwin(v10);
  sub_100125FF8();
  uint64_t v11 = type metadata accessor for TaskPriority();
  sub_100179C70(v4, v12, v13, v11);
  type metadata accessor for MainActor();
  swift_retain();
  uint64_t v14 = sub_100179C64();
  sub_10005BEBC(v14);
  uint64_t v15 = static MainActor.shared.getter();
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = v15;
  *(void *)(v16 + 24) = &protocol witness table for MainActor;
  *(void *)(v16 + 32) = v5;
  *(unsigned char *)(v16 + 40) = a1;
  *(void *)(v16 + 48) = a2;
  *(void *)(v16 + 56) = a3;
  sub_1001BCCF0(v4, (uint64_t)&unk_100E634C0, v16);
  return swift_release();
}

uint64_t sub_100238B44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7)
{
  *(void *)(v7 + 64) = a6;
  *(void *)(v7 + 72) = a7;
  *(unsigned char *)(v7 + 208) = a5;
  *(void *)(v7 + 56) = a4;
  uint64_t v8 = type metadata accessor for Tips.Status();
  *(void *)(v7 + 80) = v8;
  *(void *)(v7 + 88) = *(void *)(v8 - 8);
  *(void *)(v7 + 96) = swift_task_alloc();
  sub_10017DF08(&qword_100E634A0);
  *(void *)(v7 + 104) = swift_task_alloc();
  uint64_t v9 = sub_10017DF08(&qword_100E634C8);
  *(void *)(v7 + 112) = v9;
  *(void *)(v7 + 120) = *(void *)(v9 - 8);
  *(void *)(v7 + 128) = swift_task_alloc();
  uint64_t v10 = sub_10017DF08(&qword_100E634D0);
  *(void *)(v7 + 136) = v10;
  *(void *)(v7 + 144) = *(void *)(v10 - 8);
  *(void *)(v7 + 152) = swift_task_alloc();
  *(void *)(v7 + 160) = type metadata accessor for MainActor();
  *(void *)(v7 + 168) = static MainActor.shared.getter();
  uint64_t v12 = dispatch thunk of Actor.unownedExecutor.getter();
  *(void *)(v7 + 176) = v12;
  *(void *)(v7 + 184) = v11;
  return _swift_task_switch(sub_100238D34, v12, v11);
}

uint64_t sub_100238D34()
{
  uint64_t v2 = *(void *)(v0 + 120);
  uint64_t v1 = *(void *)(v0 + 128);
  uint64_t v3 = *(void *)(v0 + 112);
  sub_10023892C(*(unsigned char *)(v0 + 208), v0 + 16);
  sub_1001B1E64((void *)(v0 + 16), *(void *)(v0 + 40));
  Tip.statusUpdates.getter();
  AsyncStream.makeAsyncIterator()();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 16);
  uint64_t v4 = static MainActor.shared.getter();
  *(void *)(v0 + 192) = v4;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 200) = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_100238E80;
  uint64_t v6 = *(void *)(v0 + 136);
  uint64_t v7 = *(void *)(v0 + 104);
  return AsyncStream.Iterator.next(isolation:)(v7, v4, &protocol witness table for MainActor, v6);
}

uint64_t sub_100238E80()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  uint64_t v2 = *(void *)(v1 + 184);
  uint64_t v3 = *(void *)(v1 + 176);
  return _swift_task_switch(sub_100238FC4, v3, v2);
}

uint64_t sub_100238FC4()
{
  uint64_t v1 = v0[13];
  uint64_t v2 = v0[10];
  sub_10012B520(v1, 1, v2);
  if (v3)
  {
    (*(void (**)(void, void))(v0[18] + 8))(v0[19], v0[17]);
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v4 = (uint64_t (*)(void))v0[1];
    return v4();
  }
  else
  {
    (*(void (**)(void, uint64_t, uint64_t))(v0[11] + 32))(v0[12], v1, v2);
    sub_100239194();
    uint64_t v6 = sub_100179C64();
    v7(v6);
    uint64_t v8 = static MainActor.shared.getter();
    v0[24] = v8;
    uint64_t v9 = (void *)swift_task_alloc();
    v0[25] = v9;
    *uint64_t v9 = v0;
    v9[1] = sub_100238E80;
    uint64_t v10 = v0[17];
    uint64_t v11 = v0[13];
    return AsyncStream.Iterator.next(isolation:)(v11, v8, &protocol witness table for MainActor, v10);
  }
}

void sub_100239194()
{
  sub_100162EA0();
  uint64_t v82 = v0;
  uint64_t v85 = v1;
  int v3 = v2;
  uint64_t v95 = v4;
  type metadata accessor for Tips.InvalidationReason();
  sub_100179C0C();
  uint64_t v87 = v6;
  uint64_t v88 = v5;
  __chkstk_darwin(v5);
  uint64_t v86 = (char *)&v80 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001626D4();
  __chkstk_darwin(v8);
  sub_10019B340(v9, v10, v11, v12, v13, v14, v15, v16, v80);
  uint64_t v17 = type metadata accessor for Tips.Status();
  sub_100179C0C();
  uint64_t v19 = v18;
  __chkstk_darwin(v20);
  sub_100162EF8();
  uint64_t v91 = v21;
  sub_1001626D4();
  __chkstk_darwin(v22);
  sub_100128F8C();
  uint64_t v83 = v23;
  uint64_t v24 = sub_10017DF08(&qword_100E63498);
  uint64_t v25 = v24 - 8;
  __chkstk_darwin(v24);
  sub_10017225C(v26, v80);
  uint64_t v27 = sub_10017DF08(&qword_100E634A0);
  uint64_t v28 = sub_100109308(v27);
  __chkstk_darwin(v28);
  uint64_t v90 = (uint64_t)&v80 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001626D4();
  __chkstk_darwin(v30);
  uint64_t v32 = (char *)&v80 - v31;
  __chkstk_darwin(v33);
  uint64_t v35 = (char *)&v80 - v34;
  __chkstk_darwin(v36);
  uint64_t v38 = (char *)&v80 - v37;
  sub_10018A800();
  swift_bridgeObjectRetain();
  sub_100A036A4();
  swift_bridgeObjectRelease();
  uint64_t v92 = v19;
  uint64_t v39 = *(void (**)(void))(v19 + 16);
  sub_10019D3BC();
  v39();
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v35, 0, 1, v17);
  swift_beginAccess();
  int v40 = v3;
  uint64_t v41 = v93;
  int v84 = v40;
  sub_100244F50();
  swift_endAccess();
  sub_10019D3BC();
  v39();
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v32, 0, 1, v17);
  uint64_t v42 = v41 + *(int *)(v25 + 56);
  uint64_t v94 = v38;
  sub_1001B7204((uint64_t)v38, v41, &qword_100E634A0);
  sub_1001B7204((uint64_t)v32, v42, &qword_100E634A0);
  sub_10012B520(v41, 1, v17);
  if (!v45)
  {
    uint64_t v44 = v90;
    sub_1001B7204(v41, v90, &qword_100E634A0);
    sub_10012B520(v42, 1, v17);
    if (!v45)
    {
      uint64_t v43 = v92;
      uint64_t v72 = v83;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v92 + 32))(v83, v42, v17);
      sub_10023A960(&qword_100E634A8, (void (*)(uint64_t))&type metadata accessor for Tips.Status);
      int v81 = dispatch thunk of static Equatable.== infix(_:_:)();
      uint64_t v73 = v44;
      uint64_t v74 = *(void (**)(uint64_t, uint64_t))(v43 + 8);
      v74(v72, v17);
      sub_100178110((uint64_t)v32, &qword_100E634A0);
      v74(v73, v17);
      sub_100178110(v41, &qword_100E634A0);
      if (v81) {
        goto LABEL_33;
      }
LABEL_10:
      uint64_t v46 = v91;
      sub_10019D3BC();
      v39();
      int v47 = (*(uint64_t (**)(uint64_t, uint64_t))(v43 + 88))(v46, v17);
      if (v47 == enum case for Tips.Status.invalidated(_:))
      {
        (*(void (**)(uint64_t, uint64_t))(v43 + 96))(v46, v17);
        uint64_t v49 = v87;
        uint64_t v48 = v88;
        uint64_t v50 = v89;
        (*(void (**)(char *, uint64_t, uint64_t))(v87 + 32))(v89, v46, v88);
        if (qword_100E62898 != -1) {
          swift_once();
        }
        uint64_t v51 = type metadata accessor for Logger();
        sub_1002102B0(v51, (uint64_t)qword_100F520D0);
        uint64_t v52 = (void *)Logger.logObject.getter();
        os_log_type_t v53 = static os_log_type_t.default.getter();
        if (sub_100188884(v53))
        {
          sub_100182880();
          v97[0] = sub_100184360();
          sub_1001D1710(4.8149e-34);
          uint64_t v54 = String.init<A>(describing:)();
          uint64_t v96 = sub_10016414C(v54, v55, v97);
          uint64_t v50 = v89;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          sub_100172278((void *)&_mh_execute_header, v56, v57, "Update %s status to invalidated");
          swift_arrayDestroy();
          sub_100162EE0();
          sub_100162EE0();
        }

        uint64_t v59 = v85;
        uint64_t v58 = v86;
        (*(void (**)(char *, void, uint64_t))(v49 + 104))(v86, enum case for Tips.InvalidationReason.tipClosed(_:), v48);
        char v60 = static Tips.InvalidationReason.== infix(_:_:)();
        uint64_t v61 = *(void (**)(char *, uint64_t))(v49 + 8);
        v61(v58, v48);
        if ((v60 & 1) != 0 && v59)
        {
          uint64_t v62 = swift_retain();
          v59(v62);
          sub_1001361AC((uint64_t)v59);
        }
        v61(v50, v48);
        goto LABEL_33;
      }
      if (v47 == enum case for Tips.Status.pending(_:))
      {
        if (qword_100E62898 != -1) {
          swift_once();
        }
        uint64_t v63 = type metadata accessor for Logger();
        sub_1002102B0(v63, (uint64_t)qword_100F520D0);
        unint64_t v64 = (void *)Logger.logObject.getter();
        os_log_type_t v65 = static os_log_type_t.default.getter();
        if (!sub_100188884(v65)) {
          goto LABEL_32;
        }
        sub_100182880();
        v97[0] = sub_100184360();
        sub_1001D1710(4.8149e-34);
        uint64_t v66 = String.init<A>(describing:)();
        uint64_t v68 = sub_10016414C(v66, v67, v97);
        sub_100181DC4(v68);
        swift_bridgeObjectRelease();
        uint64_t v71 = "Update %s status to pending";
      }
      else
      {
        if (v47 != enum case for Tips.Status.available(_:))
        {
          sub_100178110((uint64_t)v94, &qword_100E634A0);
          (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v46, v17);
          goto LABEL_34;
        }
        if (qword_100E62898 != -1) {
          swift_once();
        }
        uint64_t v75 = type metadata accessor for Logger();
        sub_1002102B0(v75, (uint64_t)qword_100F520D0);
        unint64_t v64 = (void *)Logger.logObject.getter();
        os_log_type_t v76 = static os_log_type_t.default.getter();
        if (!sub_100188884(v76)) {
          goto LABEL_32;
        }
        sub_100182880();
        v97[0] = sub_100184360();
        sub_1001D1710(4.8149e-34);
        uint64_t v77 = String.init<A>(describing:)();
        uint64_t v79 = sub_10016414C(v77, v78, v97);
        sub_100181DC4(v79);
        swift_bridgeObjectRelease();
        uint64_t v71 = "Update %s status to available";
      }
      sub_100172278((void *)&_mh_execute_header, v69, v70, v71);
      swift_arrayDestroy();
      sub_100162EE0();
      sub_100162EE0();
LABEL_32:

      goto LABEL_33;
    }
    sub_100178110((uint64_t)v32, &qword_100E634A0);
    uint64_t v43 = v92;
    (*(void (**)(uint64_t, uint64_t))(v92 + 8))(v44, v17);
LABEL_9:
    sub_100178110(v41, &qword_100E63498);
    goto LABEL_10;
  }
  sub_100178110((uint64_t)v32, &qword_100E634A0);
  sub_10012B520(v42, 1, v17);
  uint64_t v43 = v92;
  if (!v45) {
    goto LABEL_9;
  }
  sub_100178110(v41, &qword_100E634A0);
LABEL_33:
  sub_100178110((uint64_t)v94, &qword_100E634A0);
LABEL_34:
  sub_100162694();
}

void sub_100239A18()
{
  sub_100162EA0();
  uint64_t v2 = v1;
  uint64_t v3 = type metadata accessor for Date();
  sub_100179C0C();
  uint64_t v5 = v4;
  __chkstk_darwin(v6);
  sub_1001626E0();
  uint64_t v9 = v8 - v7;
  uint64_t v10 = sub_10017DF08((uint64_t *)&unk_100EADD50);
  uint64_t v11 = sub_100109308(v10);
  __chkstk_darwin(v11);
  int v40 = &v35[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1001626D4();
  __chkstk_darwin(v13);
  uint64_t v15 = &v35[-v14];
  __chkstk_darwin(v16);
  uint64_t v18 = &v35[-v17];
  sub_1001B7204(v2 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_locations, (uint64_t)&v35[-v17], (uint64_t *)&unk_100EADD50);
  uint64_t v49 = *(void *)(v2 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_weatherData);
  sub_10020D948(v0 + OBJC_IVAR____TtC7Weather18ListViewTipManager_notificationsOptInStatusFactory, (uint64_t)v50);
  uint64_t v43 = v52;
  uint64_t v44 = v51;
  char v45 = sub_1001B1E64(v50, v51);
  uint64_t v19 = v2 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_notificationsOptIn;
  unsigned int v20 = *(unsigned __int8 *)(v2 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_notificationsOptIn);
  unsigned int v41 = *(unsigned __int8 *)(v2 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_notificationsOptIn + 17);
  unsigned int v42 = v20;
  uint64_t v37 = type metadata accessor for NotificationsOptInState();
  uint64_t v21 = *(int *)(v37 + 40);
  uint64_t v39 = v19;
  uint64_t v46 = v9;
  uint64_t v47 = v5;
  uint64_t v22 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
  uint64_t v48 = v3;
  v22(v9, v19 + v21, v3);
  uint64_t v23 = v2 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_environment;
  sub_10018A800();
  unsigned int v38 = *(unsigned __int8 *)(v23 + 1);
  unsigned int v36 = *(unsigned __int8 *)(v2 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_notifications);
  sub_1001B7204((uint64_t)v18, (uint64_t)v15, (uint64_t *)&unk_100EADD50);
  uint64_t v24 = type metadata accessor for CurrentLocation();
  LODWORD(v5) = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v15, 1, v24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v5 == 1)
  {
    sub_100178110((uint64_t)v15, (uint64_t *)&unk_100EADD50);
  }
  else
  {
    CurrentLocation.id.getter();
    sub_10013EEB8((uint64_t)v15, (void (*)(void))&type metadata accessor for CurrentLocation);
  }
  sub_1001867E0();
  sub_10013F4E8();
  char v26 = v25;
  swift_bridgeObjectRelease();
  uint64_t v27 = v40;
  sub_1001B7204((uint64_t)v18, (uint64_t)v40, (uint64_t *)&unk_100EADD50);
  sub_10012B520((uint64_t)v27, 1, v24);
  if (v28)
  {
    sub_100178110((uint64_t)v27, (uint64_t *)&unk_100EADD50);
  }
  else
  {
    CurrentLocation.id.getter();
    sub_10013EEB8((uint64_t)v27, (void (*)(void))&type metadata accessor for CurrentLocation);
  }
  sub_1001867E0();
  sub_10013F4D0();
  char v30 = v29;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v31 = *(unsigned __int8 *)(v39 + *(int *)(v37 + 44));
  uint64_t v32 = swift_retain();
  char v34 = sub_10069837C(v32);
  (*(void (**)(void, void, uint64_t, void, void, void, void, uint64_t, char, uint64_t, uint64_t))(v43 + 8))(v42, v41, v46, v38, v36, v26 & 1, v30 & 1, v31, v34, v44, v43);
  sub_100162F0C();
  v33();
  sub_100178110((uint64_t)v18, (uint64_t *)&unk_100EADD50);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v50);
  sub_100162694();
}

uint64_t sub_100239E08(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ViewState(0);
  uint64_t v3 = v2 - 8;
  __chkstk_darwin(v2);
  sub_1001626E0();
  uint64_t v6 = v5 - v4;
  sub_100113680(a1 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_view, v5 - v4);
  uint64_t v7 = *(void *)(v6 + *(int *)(v3 + 44) + 8);
  sub_10013EEB8(v6, (void (*)(void))type metadata accessor for ViewState);
  if (v7 != 2)
  {
LABEL_11:
    char v11 = 0;
    return v11 & 1;
  }
  uint64_t v8 = a1 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_environment;
  sub_10018A800();
  if (LocationAuthorizationState.rawValue.getter(*(unsigned char *)(v8 + 1)) == 0xD000000000000010
    && v9 == 0x8000000100C95500)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v10 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    char v11 = 0;
    if ((v10 & 1) == 0) {
      return v11 & 1;
    }
  }
  switch(*(unsigned char *)(a1 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_notifications))
  {
    case 1:
      swift_bridgeObjectRelease();
      goto LABEL_9;
    default:
      char v12 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      char v11 = 0;
      if ((v12 & 1) == 0) {
        return v11 & 1;
      }
LABEL_9:
      if (*(unsigned char *)(a1 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_notificationsOptIn + 18) != 1) {
        goto LABEL_11;
      }
      char v11 = *(unsigned char *)(a1 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_notificationsOptIn + 19) ^ 1;
      break;
  }
  return v11 & 1;
}

void sub_10023A054()
{
  sub_100162EA0();
  sub_100162708();
  type metadata accessor for Tips.Status();
  sub_100179C0C();
  __chkstk_darwin(v1);
  __chkstk_darwin(v2);
  if ((*(unsigned char *)(v0 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_notificationsOptIn + 18) & 1) == 0)
  {
    uint64_t v3 = swift_retain();
    char v4 = sub_10069837C(v3);
    if ((v4 & 0xFE) == 2)
    {
      LOBYTE(v17) = v4;
      sub_10023A914();
      Tip.status.getter();
      uint64_t v5 = sub_100179C64();
      int v7 = v6(v5);
      if (v7 == enum case for Tips.Status.invalidated(_:))
      {
LABEL_14:
        uint64_t v15 = sub_100179C64();
        v16(v15);
        goto LABEL_15;
      }
      if (v7 != enum case for Tips.Status.pending(_:) && v7 != enum case for Tips.Status.available(_:))
      {
        if (qword_100E627A8 != -1) {
          swift_once();
        }
        uint64_t v9 = type metadata accessor for Logger();
        sub_1002102B0(v9, (uint64_t)qword_100F51E10);
        char v10 = Logger.logObject.getter();
        os_log_type_t v11 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v10, v11))
        {
          char v12 = (uint8_t *)swift_slowAlloc();
          uint64_t v17 = swift_slowAlloc();
          *(_DWORD *)char v12 = 136315138;
          Tip.status.getter();
          uint64_t v13 = String.init<A>(describing:)();
          sub_10016414C(v13, v14, &v17);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v10, v11, "Unhandled notificationTip.status =%s", v12, 0xCu);
          swift_arrayDestroy();
          sub_100162EE0();
          sub_100162EE0();
        }

        goto LABEL_14;
      }
    }
  }
LABEL_15:
  sub_100162694();
}

uint64_t sub_10023A31C()
{
  swift_release();
  swift_release();
  type metadata accessor for NSRunLoop.SchedulerTimeType.Stride();
  sub_100162E4C();
  sub_100162F0C();
  v1();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + OBJC_IVAR____TtC7Weather18ListViewTipManager_notificationsOptInStatusFactory);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + OBJC_IVAR____TtC7Weather18ListViewTipManager_weatherLocationCoalescenceManager);
  swift_bridgeObjectRelease();
  swift_release();
  sub_10023B904(*(void *)(v0 + OBJC_IVAR____TtC7Weather18ListViewTipManager_cachedLocationOfInterestState), *(void *)(v0 + OBJC_IVAR____TtC7Weather18ListViewTipManager_cachedLocationOfInterestState + 8), *(unsigned char *)(v0 + OBJC_IVAR____TtC7Weather18ListViewTipManager_cachedLocationOfInterestState + 16));
  swift_release();
  return v0;
}

uint64_t sub_10023A3F0()
{
  sub_10023A31C();

  return swift_deallocClassInstance();
}

uint64_t sub_10023A448()
{
  return type metadata accessor for ListViewTipManager(0);
}

uint64_t type metadata accessor for ListViewTipManager(uint64_t a1)
{
  return sub_10018678C(a1, qword_100E63190);
}

uint64_t sub_10023A470()
{
  uint64_t result = type metadata accessor for NSRunLoop.SchedulerTimeType.Stride();
  if (v1 <= 0x3F) {
    return swift_updateClassMetadata2();
  }
  return result;
}

uint64_t sub_10023A568()
{
  return sub_100236770();
}

uint64_t sub_10023A58C()
{
  return *(unsigned __int8 *)(*(void *)v0 + 24);
}

uint64_t sub_10023A598()
{
  return swift_retain();
}

uint64_t sub_10023A5A4(char a1)
{
  return sub_100236794(a1);
}

uint64_t sub_10023A5C8()
{
  return 2;
}

uint64_t sub_10023A5D0()
{
  type metadata accessor for WeatherMenuTipMutableAttributes();
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = 0;
  return result;
}

uint64_t ReportWeatherMonitor.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t getEnumTagSinglePayload for ListViewTipManager.ListViewTip(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFA)
  {
    if (a2 + 6 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 6) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 7;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 7;
  int v5 = v6 - 7;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for ListViewTipManager.ListViewTip(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *uint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10023A760);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

unsigned char *sub_10023A788(unsigned char *result, char a2)
{
  *uint64_t result = a2;
  return result;
}

ValueMetadata *type metadata accessor for ListViewTipManager.ListViewTip()
{
  return &type metadata for ListViewTipManager.ListViewTip;
}

unint64_t sub_10023A7A4()
{
  unint64_t result = qword_100E63438;
  if (!qword_100E63438)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E63438);
  }
  return result;
}

uint64_t sub_10023A7F0()
{
  return sub_10023A5D0();
}

unint64_t sub_10023A808()
{
  unint64_t result = qword_100E63458;
  if (!qword_100E63458)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E63458);
  }
  return result;
}

uint64_t sub_10023A854()
{
  swift_weakDestroy();

  return swift_deallocObject();
}

uint64_t sub_10023A88C()
{
  return sub_10023655C();
}

uint64_t sub_10023A894()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10023A8CC()
{
  return sub_1002365BC(*(uint64_t (**)(uint64_t))(v0 + 16));
}

uint64_t sub_10023A8D4()
{
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 16);

  return swift_deallocObject();
}

uint64_t sub_10023A90C()
{
  return sub_100236730((void *)(v0 + 16));
}

unint64_t sub_10023A914()
{
  unint64_t result = qword_100E63490;
  if (!qword_100E63490)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E63490);
  }
  return result;
}

uint64_t sub_10023A960(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10023A9A8()
{
  swift_unknownObjectRelease();
  swift_release();
  if (*(void *)(v0 + 48)) {
    swift_release();
  }

  return swift_deallocObject();
}

uint64_t sub_10023A9F8(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = *(void *)(v1 + 32);
  uint64_t v7 = *(void *)(v1 + 48);
  uint64_t v8 = *(void *)(v1 + 56);
  char v9 = *(unsigned char *)(v1 + 40);
  char v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  void *v10 = v2;
  v10[1] = sub_1002205C0;
  return sub_100238B44(a1, v4, v5, v6, v9, v7, v8);
}

unint64_t sub_10023AAD0()
{
  unint64_t result = qword_100E634D8;
  if (!qword_100E634D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E634D8);
  }
  return result;
}

unint64_t sub_10023AB1C()
{
  unint64_t result = qword_100E634E0;
  if (!qword_100E634E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E634E0);
  }
  return result;
}

unint64_t sub_10023AB68()
{
  unint64_t result = qword_100E634E8;
  if (!qword_100E634E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E634E8);
  }
  return result;
}

unint64_t sub_10023ABB4()
{
  unint64_t result = qword_100E634F0;
  if (!qword_100E634F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E634F0);
  }
  return result;
}

unint64_t sub_10023AC00()
{
  unint64_t result = qword_100E634F8;
  if (!qword_100E634F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E634F8);
  }
  return result;
}

unint64_t sub_10023AC4C()
{
  unint64_t result = qword_100E63500;
  if (!qword_100E63500)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E63500);
  }
  return result;
}

uint64_t type metadata accessor for ListViewTipManager.LocationNameAndLocationOfInterestType(uint64_t a1)
{
  return sub_10018678C(a1, qword_100E63598);
}

uint64_t sub_10023ACB8(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_10017DF08(&qword_100E63518);
  __chkstk_darwin(v4 - 8);
  uint64_t v72 = (uint64_t)&v70 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v84 = type metadata accessor for ListViewTipManager.LocationNameAndLocationOfInterestType(0);
  uint64_t v76 = *(void *)(v84 - 8);
  __chkstk_darwin(v84);
  uint64_t v7 = (uint64_t *)((char *)&v70 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v8);
  char v10 = (uint64_t *)((char *)&v70 - v9);
  __chkstk_darwin(v11);
  uint64_t v83 = (uint64_t *)((char *)&v70 - v12);
  __chkstk_darwin(v13);
  uint64_t v71 = (char *)&v70 - v14;
  __chkstk_darwin(v15);
  uint64_t v17 = (uint64_t *)((char *)&v70 - v16);
  __chkstk_darwin(v18);
  unsigned int v20 = (uint64_t *)((char *)&v70 - v19);
  __chkstk_darwin(v21);
  uint64_t v75 = (uint64_t)&v70 - v22;
  uint64_t v77 = a1;
  int64_t v78 = 0;
  uint64_t v23 = *(void *)(a1 + 56);
  uint64_t v73 = a1 + 56;
  uint64_t v24 = -1 << *(unsigned char *)(a1 + 32);
  if (-v24 < 64) {
    uint64_t v25 = ~(-1 << -(char)v24);
  }
  else {
    uint64_t v25 = -1;
  }
  unint64_t v26 = v25 & v23;
  uint64_t v70 = v24;
  int64_t v74 = (unint64_t)(63 - v24) >> 6;
  uint64_t v82 = v1;
  if ((v25 & v23) == 0) {
    goto LABEL_6;
  }
LABEL_5:
  uint64_t v79 = (v26 - 1) & v26;
  for (unint64_t i = __clz(__rbit64(v26)) | (v78 << 6); ; unint64_t i = __clz(__rbit64(v29)) + (v30 << 6))
  {
    uint64_t v32 = *(void *)(v76 + 72);
    uint64_t v33 = v75;
    sub_100113680(*(void *)(v77 + 48) + v32 * i, v75);
    sub_10023B7B4(v33, (uint64_t)v20);
    uint64_t v34 = *v2;
    if (*(void *)(*v2 + 16))
    {
      Hasher.init(_seed:)();
      swift_bridgeObjectRetain();
      String.hash(into:)();
      swift_bridgeObjectRelease();
      uint64_t v35 = type metadata accessor for LocationOfInterestType();
      uint64_t v80 = sub_10023A960(&qword_100E63510, (void (*)(uint64_t))&type metadata accessor for LocationOfInterestType);
      uint64_t v81 = v35;
      dispatch thunk of Hashable.hash(into:)();
      Swift::Int v36 = Hasher._finalize()();
      uint64_t v37 = -1 << *(unsigned char *)(v34 + 32);
      unint64_t v38 = v36 & ~v37;
      if ((*(void *)(v34 + 56 + ((v38 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v38))
      {
        uint64_t v39 = ~v37;
        while (1)
        {
          sub_100113680(*(void *)(v34 + 48) + v38 * v32, (uint64_t)v17);
          BOOL v40 = *v17 == *v20 && v17[1] == v20[1];
          if (v40 || (_stringCompareWithSmolCheck(_:_:expecting:)())
            && (static LocationOfInterestType.== infix(_:_:)() & 1) != 0)
          {
            break;
          }
          sub_10013EEB8((uint64_t)v17, (void (*)(void))type metadata accessor for ListViewTipManager.LocationNameAndLocationOfInterestType);
          unint64_t v38 = (v38 + 1) & v39;
          if (((*(void *)(v34 + 56 + ((v38 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v38) & 1) == 0) {
            goto LABEL_30;
          }
        }
        sub_10013EEB8((uint64_t)v17, (void (*)(void))type metadata accessor for ListViewTipManager.LocationNameAndLocationOfInterestType);
        uint64_t v51 = *v82;
        Hasher.init(_seed:)();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        String.hash(into:)();
        swift_bridgeObjectRelease();
        dispatch thunk of Hashable.hash(into:)();
        Swift::Int v52 = Hasher._finalize()();
        uint64_t v53 = -1 << *(unsigned char *)(v51 + 32);
        unint64_t v54 = v52 & ~v53;
        uint64_t v81 = v51;
        unint64_t v55 = v71;
        if ((*(void *)(v51 + 56 + ((v54 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v54))
        {
          uint64_t v80 = ~v53;
          while (1)
          {
            sub_100113680(*(void *)(v81 + 48) + v54 * v32, (uint64_t)v55);
            BOOL v56 = *v55 == *v20 && v55[1] == v20[1];
            if (v56 || (_stringCompareWithSmolCheck(_:_:expecting:)())
              && (static LocationOfInterestType.== infix(_:_:)() & 1) != 0)
            {
              break;
            }
            sub_10013EEB8((uint64_t)v55, (void (*)(void))type metadata accessor for ListViewTipManager.LocationNameAndLocationOfInterestType);
            unint64_t v54 = (v54 + 1) & v80;
            if (((*(void *)(v51 + 56 + ((v54 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v54) & 1) == 0) {
              goto LABEL_54;
            }
          }
          sub_10013EEB8((uint64_t)v55, (void (*)(void))type metadata accessor for ListViewTipManager.LocationNameAndLocationOfInterestType);
          swift_bridgeObjectRelease();
          uint64_t v2 = v82;
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v68 = *v2;
          uint64_t v86 = *v2;
          *uint64_t v2 = 0x8000000000000000;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            sub_1007F0B50();
            uint64_t v68 = v86;
          }
          uint64_t v57 = v72;
          sub_10023B7B4(*(void *)(v68 + 48) + v54 * v32, v72);
          sub_100A51F60();
          *uint64_t v2 = v86;
          swift_bridgeObjectRelease();
          _s7Weather24LocationCompositionStateOwst_0(v57, 0, 1, v84);
        }
        else
        {
LABEL_54:
          swift_bridgeObjectRelease();
          uint64_t v57 = v72;
          _s7Weather24LocationCompositionStateOwst_0(v72, 1, 1, v84);
          uint64_t v2 = v82;
        }
        sub_100178110(v57, &qword_100E63518);
        goto LABEL_71;
      }
    }
LABEL_30:
    uint64_t v41 = *v82;
    Hasher.init(_seed:)();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    String.hash(into:)();
    swift_bridgeObjectRelease();
    uint64_t v42 = type metadata accessor for LocationOfInterestType();
    uint64_t v80 = sub_10023A960(&qword_100E63510, (void (*)(uint64_t))&type metadata accessor for LocationOfInterestType);
    uint64_t v81 = v42;
    dispatch thunk of Hashable.hash(into:)();
    Swift::Int v43 = Hasher._finalize()();
    uint64_t v44 = -1 << *(unsigned char *)(v41 + 32);
    unint64_t v45 = v43 & ~v44;
    if ((*(void *)(v41 + 56 + ((v45 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v45))
    {
      uint64_t v46 = ~v44;
      while (1)
      {
        sub_100113680(*(void *)(v41 + 48) + v45 * v32, (uint64_t)v7);
        BOOL v47 = *v7 == *v20 && v7[1] == v20[1];
        if (v47 || (_stringCompareWithSmolCheck(_:_:expecting:)())
          && (static LocationOfInterestType.== infix(_:_:)() & 1) != 0)
        {
          break;
        }
        sub_10013EEB8((uint64_t)v7, (void (*)(void))type metadata accessor for ListViewTipManager.LocationNameAndLocationOfInterestType);
        unint64_t v45 = (v45 + 1) & v46;
        if (((*(void *)(v41 + 56 + ((v45 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v45) & 1) == 0) {
          goto LABEL_39;
        }
      }
      sub_10013EEB8((uint64_t)v7, (void (*)(void))type metadata accessor for ListViewTipManager.LocationNameAndLocationOfInterestType);
      swift_bridgeObjectRelease();
      uint64_t v2 = v82;
      goto LABEL_71;
    }
LABEL_39:
    swift_bridgeObjectRelease();
    uint64_t v48 = v82;
    int v49 = swift_isUniquelyReferenced_nonNull_native();
    sub_100113680((uint64_t)v20, (uint64_t)v83);
    uint64_t v85 = *v48;
    uint64_t v50 = v85;
    uint64_t *v48 = 0x8000000000000000;
    if (*(void *)(v50 + 24) <= *(void *)(v50 + 16)) {
      break;
    }
    if ((v49 & 1) == 0) {
      sub_1007F0B50();
    }
LABEL_65:
    uint64_t v63 = v85;
    *(void *)(v85 + ((v45 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) |= 1 << v45;
    sub_10023B7B4((uint64_t)v83, *(void *)(v63 + 48) + v45 * v32);
    uint64_t v64 = *(void *)(v63 + 16);
    BOOL v65 = __OFADD__(v64, 1);
    uint64_t v66 = v64 + 1;
    if (v65)
    {
      __break(1u);
LABEL_75:
      __break(1u);
LABEL_76:
      __break(1u);
      goto LABEL_77;
    }
    *(void *)(v63 + 16) = v66;
    uint64_t v2 = v82;
    *uint64_t v82 = v63;
    swift_bridgeObjectRelease();
LABEL_71:
    unint64_t v26 = v79;
    sub_10013EEB8((uint64_t)v20, (void (*)(void))type metadata accessor for ListViewTipManager.LocationNameAndLocationOfInterestType);
    if (v26) {
      goto LABEL_5;
    }
LABEL_6:
    int64_t v28 = v78 + 1;
    if (__OFADD__(v78, 1)) {
      goto LABEL_75;
    }
    if (v28 >= v74) {
      return sub_10023B8FC();
    }
    unint64_t v29 = *(void *)(v73 + 8 * v28);
    int64_t v30 = v78 + 1;
    if (!v29)
    {
      int64_t v30 = v78 + 2;
      if (v78 + 2 >= v74) {
        return sub_10023B8FC();
      }
      unint64_t v29 = *(void *)(v73 + 8 * v30);
      if (!v29)
      {
        int64_t v30 = v78 + 3;
        if (v78 + 3 >= v74) {
          return sub_10023B8FC();
        }
        unint64_t v29 = *(void *)(v73 + 8 * v30);
        if (!v29)
        {
          int64_t v31 = v78 + 4;
          if (v78 + 4 >= v74) {
            return sub_10023B8FC();
          }
          unint64_t v29 = *(void *)(v73 + 8 * v31);
          if (!v29)
          {
            while (1)
            {
              int64_t v30 = v31 + 1;
              if (__OFADD__(v31, 1)) {
                goto LABEL_76;
              }
              if (v30 >= v74) {
                return sub_10023B8FC();
              }
              unint64_t v29 = *(void *)(v73 + 8 * v30);
              ++v31;
              if (v29) {
                goto LABEL_19;
              }
            }
          }
          int64_t v30 = v78 + 4;
        }
      }
    }
LABEL_19:
    int64_t v78 = v30;
    uint64_t v79 = (v29 - 1) & v29;
  }
  if (v49) {
    sub_1007ED7F0();
  }
  else {
    sub_1007F1634();
  }
  uint64_t v58 = v85;
  Hasher.init(_seed:)();
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  dispatch thunk of Hashable.hash(into:)();
  Swift::Int v59 = Hasher._finalize()();
  uint64_t v60 = -1 << *(unsigned char *)(v58 + 32);
  unint64_t v45 = v59 & ~v60;
  if (((*(void *)(v58 + 56 + ((v45 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v45) & 1) == 0) {
    goto LABEL_65;
  }
  uint64_t v61 = ~v60;
  while (1)
  {
    sub_100113680(*(void *)(v58 + 48) + v45 * v32, (uint64_t)v10);
    BOOL v62 = *v10 == *v83 && v10[1] == v83[1];
    if (v62 || (_stringCompareWithSmolCheck(_:_:expecting:)())
      && (static LocationOfInterestType.== infix(_:_:)() & 1) != 0)
    {
      break;
    }
    sub_10013EEB8((uint64_t)v10, (void (*)(void))type metadata accessor for ListViewTipManager.LocationNameAndLocationOfInterestType);
    unint64_t v45 = (v45 + 1) & v61;
    if (((*(void *)(v58 + 56 + ((v45 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v45) & 1) == 0) {
      goto LABEL_65;
    }
  }
LABEL_77:
  sub_10013EEB8((uint64_t)v10, (void (*)(void))type metadata accessor for ListViewTipManager.LocationNameAndLocationOfInterestType);
  uint64_t result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

uint64_t sub_10023B7B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ListViewTipManager.LocationNameAndLocationOfInterestType(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

int64_t sub_10023B818(int64_t result, int a2, char a3, uint64_t a4)
{
  if (a3) {
    goto LABEL_20;
  }
  unint64_t v4 = result;
  if (result < 0 || (uint64_t result = 1 << *(unsigned char *)(a4 + 32), result <= (uint64_t)v4))
  {
    __break(1u);
    goto LABEL_18;
  }
  unint64_t v5 = v4 >> 6;
  uint64_t v6 = a4 + 56;
  unint64_t v7 = *(void *)(a4 + 56 + 8 * (v4 >> 6));
  if (((v7 >> v4) & 1) == 0)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (*(_DWORD *)(a4 + 36) != a2)
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    return result;
  }
  unint64_t v8 = v7 & (-2 << (v4 & 0x3F));
  if (v8) {
    return __clz(__rbit64(v8)) | v4 & 0xFFFFFFFFFFFFFFC0;
  }
  unint64_t v9 = v5 + 1;
  if (v5 + 1 < (unint64_t)(result + 63) >> 6)
  {
    unint64_t v10 = *(void *)(v6 + 8 * v9);
    if (v10) {
      return __clz(__rbit64(v10)) + (v9 << 6);
    }
    unint64_t v11 = (unint64_t)(result + 63) >> 6;
    unint64_t v9 = v5 + 2;
    if (v5 + 2 < v11)
    {
      unint64_t v10 = *(void *)(v6 + 8 * v9);
      if (v10) {
        return __clz(__rbit64(v10)) + (v9 << 6);
      }
      while (v5 + 3 < v11)
      {
        unint64_t v10 = *(void *)(a4 + 80 + 8 * v5++);
        if (v10)
        {
          unint64_t v9 = v5 + 2;
          return __clz(__rbit64(v10)) + (v9 << 6);
        }
      }
    }
  }
  return result;
}

uint64_t sub_10023B8FC()
{
  return swift_release();
}

uint64_t sub_10023B904(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 != 0xFF) {
    return sub_10015303C(a1, a2, a3);
  }
  return a1;
}

unint64_t sub_10023B918()
{
  unint64_t result = qword_100E63538;
  if (!qword_100E63538)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E63538);
  }
  return result;
}

uint64_t sub_10023B964(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 != 0xFF) {
    return sub_10015458C(a1, a2, a3);
  }
  return a1;
}

uint64_t *sub_10023B978(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *int v3 = *a2;
    int v3 = (uint64_t *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    uint64_t v6 = *(int *)(a3 + 20);
    unint64_t v7 = (char *)a1 + v6;
    unint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = type metadata accessor for LocationOfInterestType();
    unint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    v10(v7, v8, v9);
  }
  return v3;
}

uint64_t sub_10023BA60(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = type metadata accessor for LocationOfInterestType();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

void *sub_10023BAD8(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(a3 + 20);
  uint64_t v6 = (char *)a1 + v5;
  unint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = type metadata accessor for LocationOfInterestType();
  uint64_t v9 = *(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  v9(v6, v7, v8);
  return a1;
}

void *sub_10023BB70(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  unint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for LocationOfInterestType();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

_OWORD *sub_10023BC0C(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = type metadata accessor for LocationOfInterestType();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

void *sub_10023BC88(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for LocationOfInterestType();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t sub_10023BD14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10023BD28);
}

uint64_t sub_10023BD28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for LocationOfInterestType();
    uint64_t v9 = a1 + *(int *)(a3 + 20);
    return _s7Weather24LocationCompositionStateOwet_0(v9, a2, v8);
  }
}

uint64_t sub_10023BDB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10023BDC4);
}

uint64_t sub_10023BDC4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for LocationOfInterestType();
    uint64_t v8 = v5 + *(int *)(a4 + 20);
    return _s7Weather24LocationCompositionStateOwst_0(v8, a2, a2, v7);
  }
  return result;
}

uint64_t sub_10023BE44()
{
  uint64_t result = type metadata accessor for LocationOfInterestType();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_10023BEDC()
{
  return sub_10023A960(&qword_100E635D0, (void (*)(uint64_t))type metadata accessor for ListViewTipManager.LocationNameAndLocationOfInterestType);
}

uint64_t sub_10023BF24(void *a1, void *a2)
{
  BOOL v4 = *a1 == *a2 && a1[1] == a2[1];
  if (!v4 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
    return 0;
  }
  uint64_t v5 = type metadata accessor for LollipopViewModel();
  if ((static DetailChartDataPoint.== infix(_:_:)() & 1) == 0
    || *(double *)((char *)a1 + *(int *)(v5 + 24)) != *(double *)((char *)a2 + *(int *)(v5 + 24)))
  {
    return 0;
  }
  uint64_t v6 = *(int *)(v5 + 28);

  return sub_1004CA7DC((uint64_t)a1 + v6, (uint64_t)a2 + v6);
}

uint64_t sub_10023BFDC@<X0>(uint64_t *a1@<X8>)
{
  sub_10017DF08(&qword_100E635E0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100C25ED0;
  *(void *)(inited + 32) = 0xD000000000000014;
  *(void *)(inited + 40) = 0x8000000100C96970;
  uint64_t v4 = type metadata accessor for LollipopViewModel();
  uint64_t v5 = v1 + *(int *)(v4 + 20);
  uint64_t v6 = type metadata accessor for DetailChartDataPoint();
  *(void *)(inited + 72) = v6;
  uint64_t v7 = sub_10023C310((uint64_t *)(inited + 48));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(v7, v5, v6);
  *(void *)(inited + 80) = 0x69566C6961746564;
  *(void *)(inited + 88) = 0xEF6C65646F4D7765;
  uint64_t v8 = v1 + *(int *)(v4 + 28);
  *(void *)(inited + 120) = type metadata accessor for LollipopDetailViewModel(0);
  uint64_t v9 = sub_10023C310((uint64_t *)(inited + 96));
  sub_10023C258(v8, (uint64_t)v9);
  Dictionary.init(dictionaryLiteral:)();
  a1[3] = sub_10017DF08(&qword_100E635E8);
  a1[4] = sub_10023C2BC();
  sub_10023C310(a1);
  return ShortDescription.init(name:_:)();
}

uint64_t sub_10023C184()
{
  sub_10023C350(&qword_100E635F8);

  return ShortDescribable.description.getter();
}

uint64_t sub_10023C1DC()
{
  return sub_10023C350(&qword_100E635D8);
}

uint64_t type metadata accessor for LollipopViewModel()
{
  uint64_t result = qword_100E63658;
  if (!qword_100E63658) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10023C258(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for LollipopDetailViewModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_10023C2BC()
{
  unint64_t result = qword_100E635F0;
  if (!qword_100E635F0)
  {
    sub_10018C6DC(&qword_100E635E8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E635F0);
  }
  return result;
}

uint64_t *sub_10023C310(uint64_t *a1)
{
  sub_100162F30();
  if ((*(unsigned char *)(v2 + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v3;
  }
  return a1;
}

uint64_t sub_10023C350(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for LollipopViewModel();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t *sub_10023C394(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v21 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v21 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for DetailChartDataPoint();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    uint64_t v13 = a3[7];
    *(uint64_t *)((char *)v4 + a3[6]) = *(uint64_t *)((char *)a2 + a3[6]);
    uint64_t v14 = (char *)v4 + v13;
    uint64_t v15 = (char *)a2 + v13;
    type metadata accessor for LollipopDetailViewModel(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v22 = *((void *)v15 + 1);
      *(void *)uint64_t v14 = *(void *)v15;
      *((void *)v14 + 1) = v22;
      uint64_t v23 = (int *)type metadata accessor for TitleAndDetailLollipopDetailViewModel(0);
      uint64_t v24 = v23[5];
      uint64_t v25 = &v14[v24];
      unint64_t v26 = &v15[v24];
      uint64_t v27 = type metadata accessor for AttributedString();
      int64_t v28 = *(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16);
      swift_bridgeObjectRetain();
      v28(v25, v26, v27);
      uint64_t v29 = v23[6];
      int64_t v30 = &v14[v29];
      int64_t v31 = &v15[v29];
      uint64_t v32 = *((void *)v31 + 1);
      *(void *)int64_t v30 = *(void *)v31;
      *((void *)v30 + 1) = v32;
      uint64_t v33 = v23[7];
      uint64_t v34 = &v14[v33];
      uint64_t v35 = &v15[v33];
      uint64_t v36 = *((void *)v35 + 1);
      *(void *)uint64_t v34 = *(void *)v35;
      *((void *)v34 + 1) = v36;
      uint64_t v37 = v23[8];
      unint64_t v38 = &v14[v37];
      uint64_t v39 = &v15[v37];
      uint64_t v40 = *((void *)v39 + 1);
      *(void *)unint64_t v38 = *(void *)v39;
      *((void *)v38 + 1) = v40;
      uint64_t v41 = v23[9];
      uint64_t v42 = &v14[v41];
      Swift::Int v43 = &v15[v41];
      uint64_t v44 = *((void *)v43 + 1);
      *(void *)uint64_t v42 = *(void *)v43;
      *((void *)v42 + 1) = v44;
      uint64_t v45 = v23[10];
      uint64_t v46 = &v14[v45];
      BOOL v47 = &v15[v45];
      uint64_t v48 = *((void *)v47 + 1);
      *(void *)uint64_t v46 = *(void *)v47;
      *((void *)v46 + 1) = v48;
      v14[v23[11]] = v15[v23[11]];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      if (EnumCaseMultiPayload == 1)
      {
        uint64_t v17 = *((void *)v15 + 1);
        *(void *)uint64_t v14 = *(void *)v15;
        *((void *)v14 + 1) = v17;
        uint64_t v18 = *((void *)v15 + 3);
        *((void *)v14 + 2) = *((void *)v15 + 2);
        *((void *)v14 + 3) = v18;
        uint64_t v19 = *((void *)v15 + 5);
        *((void *)v14 + 4) = *((void *)v15 + 4);
        *((void *)v14 + 5) = v19;
        uint64_t v20 = *((void *)v15 + 7);
        *((void *)v14 + 6) = *((void *)v15 + 6);
        *((void *)v14 + 7) = v20;
        v14[64] = v15[64];
        v14[65] = v15[65];
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v49 = *((void *)v15 + 1);
        *(void *)uint64_t v14 = *(void *)v15;
        *((void *)v14 + 1) = v49;
        uint64_t v50 = *((void *)v15 + 3);
        *((void *)v14 + 2) = *((void *)v15 + 2);
        *((void *)v14 + 3) = v50;
        uint64_t v51 = *((void *)v15 + 4);
        uint64_t v52 = *((void *)v15 + 5);
        *((void *)v14 + 4) = v51;
        *((void *)v14 + 5) = v52;
      }
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return v4;
}

uint64_t sub_10023C678(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = type metadata accessor for DetailChartDataPoint();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = a1 + *(int *)(a2 + 28);
  type metadata accessor for LollipopDetailViewModel(0);
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 2)
  {
    swift_bridgeObjectRelease();
    uint64_t v8 = v6 + *(int *)(type metadata accessor for TitleAndDetailLollipopDetailViewModel(0) + 20);
    uint64_t v9 = type metadata accessor for AttributedString();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else if (result == 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    if (result) {
      return result;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  return swift_bridgeObjectRelease();
}

void *sub_10023C818(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for DetailChartDataPoint();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  uint64_t v12 = a3[7];
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  type metadata accessor for LollipopDetailViewModel(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v20 = *((void *)v14 + 1);
    *(void *)uint64_t v13 = *(void *)v14;
    *((void *)v13 + 1) = v20;
    uint64_t v21 = (int *)type metadata accessor for TitleAndDetailLollipopDetailViewModel(0);
    uint64_t v22 = v21[5];
    uint64_t v49 = &v14[v22];
    uint64_t v50 = &v13[v22];
    uint64_t v23 = type metadata accessor for AttributedString();
    uint64_t v24 = *(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16);
    swift_bridgeObjectRetain();
    v24(v50, v49, v23);
    uint64_t v25 = v21[6];
    unint64_t v26 = &v13[v25];
    uint64_t v27 = &v14[v25];
    uint64_t v28 = *((void *)v27 + 1);
    *(void *)unint64_t v26 = *(void *)v27;
    *((void *)v26 + 1) = v28;
    uint64_t v29 = v21[7];
    int64_t v30 = &v13[v29];
    int64_t v31 = &v14[v29];
    uint64_t v32 = *((void *)v31 + 1);
    *(void *)int64_t v30 = *(void *)v31;
    *((void *)v30 + 1) = v32;
    uint64_t v33 = v21[8];
    uint64_t v34 = &v13[v33];
    uint64_t v35 = &v14[v33];
    uint64_t v36 = *((void *)v35 + 1);
    *(void *)uint64_t v34 = *(void *)v35;
    *((void *)v34 + 1) = v36;
    uint64_t v37 = v21[9];
    unint64_t v38 = &v13[v37];
    uint64_t v39 = &v14[v37];
    uint64_t v40 = *((void *)v39 + 1);
    *(void *)unint64_t v38 = *(void *)v39;
    *((void *)v38 + 1) = v40;
    uint64_t v41 = v21[10];
    uint64_t v42 = &v13[v41];
    Swift::Int v43 = &v14[v41];
    uint64_t v44 = *((void *)v43 + 1);
    *(void *)uint64_t v42 = *(void *)v43;
    *((void *)v42 + 1) = v44;
    v13[v21[11]] = v14[v21[11]];
    swift_bridgeObjectRetain();
  }
  else
  {
    if (EnumCaseMultiPayload != 1)
    {
      uint64_t v45 = *((void *)v14 + 1);
      *(void *)uint64_t v13 = *(void *)v14;
      *((void *)v13 + 1) = v45;
      uint64_t v46 = *((void *)v14 + 3);
      *((void *)v13 + 2) = *((void *)v14 + 2);
      *((void *)v13 + 3) = v46;
      uint64_t v47 = *((void *)v14 + 5);
      *((void *)v13 + 4) = *((void *)v14 + 4);
      *((void *)v13 + 5) = v47;
      goto LABEL_7;
    }
    uint64_t v16 = *((void *)v14 + 1);
    *(void *)uint64_t v13 = *(void *)v14;
    *((void *)v13 + 1) = v16;
    uint64_t v17 = *((void *)v14 + 3);
    *((void *)v13 + 2) = *((void *)v14 + 2);
    *((void *)v13 + 3) = v17;
    uint64_t v18 = *((void *)v14 + 5);
    *((void *)v13 + 4) = *((void *)v14 + 4);
    *((void *)v13 + 5) = v18;
    uint64_t v19 = *((void *)v14 + 7);
    *((void *)v13 + 6) = *((void *)v14 + 6);
    *((void *)v13 + 7) = v19;
    v13[64] = v14[64];
    v13[65] = v14[65];
  }
  swift_bridgeObjectRetain();
LABEL_7:
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *sub_10023CA6C(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for DetailChartDataPoint();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  if (a1 != a2)
  {
    uint64_t v10 = a3[7];
    uint64_t v11 = (char *)a1 + v10;
    uint64_t v12 = (char *)a2 + v10;
    sub_10023CD48((uint64_t)a1 + v10);
    type metadata accessor for LollipopDetailViewModel(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      *(void *)uint64_t v11 = *(void *)v12;
      *((void *)v11 + 1) = *((void *)v12 + 1);
      uint64_t v14 = (int *)type metadata accessor for TitleAndDetailLollipopDetailViewModel(0);
      uint64_t v15 = v14[5];
      uint64_t v34 = &v12[v15];
      uint64_t v35 = &v11[v15];
      uint64_t v16 = type metadata accessor for AttributedString();
      uint64_t v17 = *(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16);
      swift_bridgeObjectRetain();
      v17(v35, v34, v16);
      uint64_t v18 = v14[6];
      uint64_t v19 = &v11[v18];
      uint64_t v20 = &v12[v18];
      *(void *)uint64_t v19 = *(void *)v20;
      *((void *)v19 + 1) = *((void *)v20 + 1);
      uint64_t v21 = v14[7];
      uint64_t v22 = &v11[v21];
      uint64_t v23 = &v12[v21];
      *(void *)uint64_t v22 = *(void *)v23;
      *((void *)v22 + 1) = *((void *)v23 + 1);
      uint64_t v24 = v14[8];
      uint64_t v25 = &v11[v24];
      unint64_t v26 = &v12[v24];
      *(void *)uint64_t v25 = *(void *)v26;
      *((void *)v25 + 1) = *((void *)v26 + 1);
      uint64_t v27 = v14[9];
      uint64_t v28 = &v11[v27];
      uint64_t v29 = &v12[v27];
      *(void *)uint64_t v28 = *(void *)v29;
      *((void *)v28 + 1) = *((void *)v29 + 1);
      uint64_t v30 = v14[10];
      int64_t v31 = &v11[v30];
      uint64_t v32 = &v12[v30];
      *(void *)int64_t v31 = *(void *)v32;
      *((void *)v31 + 1) = *((void *)v32 + 1);
      v11[v14[11]] = v12[v14[11]];
      swift_bridgeObjectRetain();
    }
    else
    {
      if (EnumCaseMultiPayload != 1)
      {
        *(void *)uint64_t v11 = *(void *)v12;
        *((void *)v11 + 1) = *((void *)v12 + 1);
        *((void *)v11 + 2) = *((void *)v12 + 2);
        *((void *)v11 + 3) = *((void *)v12 + 3);
        *((void *)v11 + 4) = *((void *)v12 + 4);
        *((void *)v11 + 5) = *((void *)v12 + 5);
        goto LABEL_8;
      }
      *(void *)uint64_t v11 = *(void *)v12;
      *((void *)v11 + 1) = *((void *)v12 + 1);
      *((void *)v11 + 2) = *((void *)v12 + 2);
      *((void *)v11 + 3) = *((void *)v12 + 3);
      *((void *)v11 + 4) = *((void *)v12 + 4);
      *((void *)v11 + 5) = *((void *)v12 + 5);
      *((void *)v11 + 6) = *((void *)v12 + 6);
      *((void *)v11 + 7) = *((void *)v12 + 7);
      v11[64] = v12[64];
      v11[65] = v12[65];
    }
    swift_bridgeObjectRetain();
LABEL_8:
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_10023CD48(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for LollipopDetailViewModel(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

_OWORD *sub_10023CDA4(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for DetailChartDataPoint();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[7];
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  uint64_t v11 = (_OWORD *)((char *)a1 + v10);
  uint64_t v12 = (_OWORD *)((char *)a2 + v10);
  uint64_t v13 = type metadata accessor for LollipopDetailViewModel(0);
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    _OWORD *v11 = *v12;
    uint64_t v14 = (int *)type metadata accessor for TitleAndDetailLollipopDetailViewModel(0);
    uint64_t v15 = v14[5];
    uint64_t v16 = (char *)v11 + v15;
    uint64_t v17 = (char *)v12 + v15;
    uint64_t v18 = type metadata accessor for AttributedString();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
    *(_OWORD *)((char *)v11 + v14[6]) = *(_OWORD *)((char *)v12 + v14[6]);
    *(_OWORD *)((char *)v11 + v14[7]) = *(_OWORD *)((char *)v12 + v14[7]);
    *(_OWORD *)((char *)v11 + v14[8]) = *(_OWORD *)((char *)v12 + v14[8]);
    *(_OWORD *)((char *)v11 + v14[9]) = *(_OWORD *)((char *)v12 + v14[9]);
    *(_OWORD *)((char *)v11 + v14[10]) = *(_OWORD *)((char *)v12 + v14[10]);
    *((unsigned char *)v11 + v14[11]) = *((unsigned char *)v12 + v14[11]);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v11, v12, *(void *)(*(void *)(v13 - 8) + 64));
  }
  return a1;
}

void *sub_10023CF44(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for DetailChartDataPoint();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  if (a1 != a2)
  {
    uint64_t v11 = a3[7];
    uint64_t v12 = (_OWORD *)((char *)a1 + v11);
    uint64_t v13 = (_OWORD *)((char *)a2 + v11);
    sub_10023CD48((uint64_t)a1 + v11);
    uint64_t v14 = type metadata accessor for LollipopDetailViewModel(0);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      *uint64_t v12 = *v13;
      uint64_t v15 = (int *)type metadata accessor for TitleAndDetailLollipopDetailViewModel(0);
      uint64_t v16 = v15[5];
      uint64_t v17 = (char *)v12 + v16;
      uint64_t v18 = (char *)v13 + v16;
      uint64_t v19 = type metadata accessor for AttributedString();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 32))(v17, v18, v19);
      *(_OWORD *)((char *)v12 + v15[6]) = *(_OWORD *)((char *)v13 + v15[6]);
      *(_OWORD *)((char *)v12 + v15[7]) = *(_OWORD *)((char *)v13 + v15[7]);
      *(_OWORD *)((char *)v12 + v15[8]) = *(_OWORD *)((char *)v13 + v15[8]);
      *(_OWORD *)((char *)v12 + v15[9]) = *(_OWORD *)((char *)v13 + v15[9]);
      *(_OWORD *)((char *)v12 + v15[10]) = *(_OWORD *)((char *)v13 + v15[10]);
      *((unsigned char *)v12 + v15[11]) = *((unsigned char *)v13 + v15[11]);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v12, v13, *(void *)(*(void *)(v14 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_10023D100(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10023D114);
}

uint64_t sub_10023D114(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    type metadata accessor for DetailChartDataPoint();
    sub_100162F30();
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = *(int *)(a3 + 20);
    }
    else
    {
      uint64_t v10 = type metadata accessor for LollipopDetailViewModel(0);
      uint64_t v11 = *(int *)(a3 + 28);
    }
    return _s7Weather24LocationCompositionStateOwet_0(a1 + v11, a2, v10);
  }
}

uint64_t sub_10023D1C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10023D1D4);
}

uint64_t sub_10023D1D4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    type metadata accessor for DetailChartDataPoint();
    sub_100162F30();
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = *(int *)(a4 + 20);
    }
    else
    {
      uint64_t v10 = type metadata accessor for LollipopDetailViewModel(0);
      uint64_t v11 = *(int *)(a4 + 28);
    }
    return _s7Weather24LocationCompositionStateOwst_0(v5 + v11, a2, a2, v10);
  }
  return result;
}

uint64_t sub_10023D27C()
{
  uint64_t result = type metadata accessor for DetailChartDataPoint();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for LollipopDetailViewModel(319);
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_10023D360(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) == 0)
  {
    uint64_t v7 = type metadata accessor for Location.Identifier();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v7))
    {
      uint64_t active = type metadata accessor for LocationViewerActiveLocationState();
      memcpy(a1, a2, *(void *)(*(void *)(active - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v7);
    }
    uint64_t v11 = a3[5];
    uint64_t v12 = (char *)a1 + v11;
    uint64_t v13 = (char *)a2 + v11;
    uint64_t v14 = type metadata accessor for LocationModel();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
    uint64_t v15 = a3[7];
    *((unsigned char *)a1 + a3[6]) = *((unsigned char *)a2 + a3[6]);
    uint64_t v16 = (char *)a1 + v15;
    uint64_t v17 = (char *)a2 + v15;
    uint64_t v18 = type metadata accessor for CurrentLocation();
    uint64_t v248 = a1;
    uint64_t v245 = a3;
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v17, 1, v18))
    {
      uint64_t v19 = sub_10017DF08((uint64_t *)&unk_100EADD50);
      memcpy(v16, v17, *(void *)(*(void *)(v19 - 8) + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload() > 2)
      {
        memcpy(v16, v17, *(void *)(*(void *)(v18 - 8) + 64));
      }
      else
      {
        uint64_t v20 = type metadata accessor for Location();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16))(v16, v17, v20);
        swift_storeEnumTagMultiPayload();
      }
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v16, 0, 1, v18);
    }
    uint64_t v21 = (int *)type metadata accessor for LocationsState();
    *(void *)&v16[v21[5]] = *(void *)&v17[v21[5]];
    *(void *)&v16[v21[6]] = *(void *)&v17[v21[6]];
    *(void *)&v16[v21[7]] = *(void *)&v17[v21[7]];
    *(void *)&v16[v21[8]] = *(void *)&v17[v21[8]];
    *(void *)&v16[v21[9]] = *(void *)&v17[v21[9]];
    *(void *)&v16[v21[10]] = *(void *)&v17[v21[10]];
    *(void *)&v16[v21[11]] = *(void *)&v17[v21[11]];
    uint64_t v22 = v21[12];
    uint64_t v23 = &v16[v22];
    uint64_t v24 = &v17[v22];
    uint64_t v243 = v16;
    uint64_t v25 = *(void *)v24;
    uint64_t v242 = *((void *)v24 + 1);
    unsigned __int8 v240 = v24[16];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_10015458C(v25, v242, v240);
    *(void *)uint64_t v23 = v25;
    *((void *)v23 + 1) = v242;
    v23[16] = v240;
    *(void *)&v243[v21[13]] = *(void *)&v17[v21[13]];
    uint64_t v26 = v245[9];
    uint64_t v10 = a1;
    *((unsigned char *)a1 + v245[8]) = *((unsigned char *)a2 + v245[8]);
    *((unsigned char *)a1 + v26) = *((unsigned char *)a2 + v26);
    uint64_t v27 = v245[10];
    uint64_t v28 = v245[11];
    uint64_t v29 = (char *)a1 + v27;
    uint64_t v30 = (char *)a2 + v27;
    *uint64_t v29 = *v30;
    *((void *)v29 + 1) = *((void *)v30 + 1);
    int64_t v31 = (char *)a1 + v28;
    uint64_t v32 = (char *)a2 + v28;
    uint64_t v33 = type metadata accessor for Date();
    uint64_t v34 = *(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v34(v31, v32, v33);
    uint64_t v35 = v245[13];
    *((unsigned char *)a1 + v245[12]) = *((unsigned char *)a2 + v245[12]);
    *(uint64_t *)((char *)a1 + v35) = *(uint64_t *)((char *)a2 + v35);
    uint64_t v36 = v245[15];
    *((unsigned char *)a1 + v245[14]) = *((unsigned char *)a2 + v245[14]);
    *((unsigned char *)a1 + v36) = *((unsigned char *)a2 + v36);
    uint64_t v37 = v245[17];
    *(uint64_t *)((char *)a1 + v245[16]) = *(uint64_t *)((char *)a2 + v245[16]);
    *((unsigned char *)a1 + v37) = *((unsigned char *)a2 + v37);
    uint64_t v38 = v245[18];
    uint64_t v39 = (uint64_t *)((char *)a1 + v38);
    uint64_t v40 = (uint64_t *)((char *)a2 + v38);
    uint64_t v41 = type metadata accessor for LocationWeatherDataState(0);
    swift_bridgeObjectRetain();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v40, 1, v41))
    {
      uint64_t v42 = sub_10017DF08(&qword_100E63770);
      memcpy(v39, v40, *(void *)(*(void *)(v42 - 8) + 64));
      return v10;
    }
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v44 = v40[1];
      void *v39 = *v40;
      v39[1] = v44;
      uint64_t v45 = v40 + 2;
      unint64_t v46 = v40[3];
      swift_bridgeObjectRetain();
      if (v46 >= 0xE)
      {
        v39[2] = *v45;
        v39[3] = v46;
        swift_bridgeObjectRetain();
      }
      else
      {
        *((_OWORD *)v39 + 1) = *(_OWORD *)v45;
      }
      goto LABEL_68;
    }
    if (EnumCaseMultiPayload != 1)
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(v39, v40, *(void *)(*(void *)(v41 - 8) + 64));
LABEL_69:
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v39, 0, 1, v41);
        return v10;
      }
      type metadata accessor for NewsDataModel();
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        void *v39 = *v40;
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v54 = type metadata accessor for News();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v54 - 8) + 16))(v39, v40, v54);
      }
      swift_storeEnumTagMultiPayload();
LABEL_68:
      swift_storeEnumTagMultiPayload();
      goto LABEL_69;
    }
    uint64_t v47 = v40[1];
    void *v39 = *v40;
    v39[1] = v47;
    uint64_t v48 = (int *)type metadata accessor for WeatherData(0);
    uint64_t v49 = v48[5];
    uint64_t v50 = (char *)v39 + v49;
    uint64_t v51 = (char *)v40 + v49;
    uint64_t v52 = type metadata accessor for Locale();
    swift_bridgeObjectRetain();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v51, 1, v52))
    {
      uint64_t v53 = sub_10017DF08(&qword_100E63730);
      memcpy(v50, v51, *(void *)(*(void *)(v53 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v52 - 8) + 16))(v50, v51, v52);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v50, 0, 1, v52);
    }
    uint64_t v55 = v48[6];
    BOOL v56 = (char *)v39 + v55;
    uint64_t v57 = (char *)v40 + v55;
    uint64_t v58 = type metadata accessor for WeatherDataModel();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v58 - 8) + 16))(v56, v57, v58);
    uint64_t v59 = v48[7];
    uint64_t v60 = (char *)v39 + v59;
    uint64_t v61 = (char *)v40 + v59;
    uint64_t v62 = sub_10017DF08(&qword_100E63738);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v61, 1, v62))
    {
      uint64_t v63 = type metadata accessor for WeatherData.CachingState(0);
      memcpy(v60, v61, *(void *)(*(void *)(v63 - 8) + 64));
    }
    else
    {
      v34(v60, v61, v33);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v60, 0, 1, v62);
    }
    uint64_t v64 = v48[8];
    BOOL v65 = (void *)((char *)v39 + v64);
    uint64_t v66 = (void *)((char *)v40 + v64);
    uint64_t v67 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
    int v68 = swift_getEnumCaseMultiPayload();
    uint64_t v241 = v34;
    uint64_t v237 = v41;
    if (v68 == 1)
    {
      uint64_t v70 = type metadata accessor for WeatherStatisticsModel();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v70 - 8) + 16))(v65, v66, v70);
    }
    else
    {
      if (v68)
      {
        memcpy(v65, v66, *(void *)(*(void *)(v67 - 8) + 64));
        goto LABEL_37;
      }
      uint64_t v69 = v66[1];
      void *v65 = *v66;
      v65[1] = v69;
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
LABEL_37:
    uint64_t v71 = v48[9];
    uint64_t v72 = (char *)v39 + v71;
    uint64_t v73 = (char *)v40 + v71;
    uint64_t v74 = type metadata accessor for WeatherDataOverrides();
    uint64_t v238 = v33;
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v73, 1, v74))
    {
      uint64_t v75 = sub_10017DF08(&qword_100E63740);
      memcpy(v72, v73, *(void *)(*(void *)(v75 - 8) + 64));
    }
    else
    {
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v73, 1, v33))
      {
        uint64_t v76 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
        memcpy(v72, v73, *(void *)(*(void *)(v76 - 8) + 64));
      }
      else
      {
        v241(v72, v73, v33);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v72, 0, 1, v33);
      }
      uint64_t v77 = *(int *)(v74 + 20);
      int64_t v78 = &v72[v77];
      uint64_t v79 = &v73[v77];
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v73[v77], 1, v33))
      {
        uint64_t v80 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
        memcpy(v78, v79, *(void *)(*(void *)(v80 - 8) + 64));
      }
      else
      {
        v241(v78, v79, v33);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v78, 0, 1, v33);
      }
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v72, 0, 1, v74);
    }
    uint64_t v236 = sub_10017DF08(&qword_100E63748);
    uint64_t v81 = *(int *)(v236 + 48);
    uint64_t v239 = v39;
    uint64_t v82 = (char *)v39 + v81;
    uint64_t v83 = (char *)v40 + v81;
    uint64_t v84 = type metadata accessor for UUID();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v84 - 8) + 16))(v82, v83, v84);
    uint64_t v85 = type metadata accessor for PreprocessedWeatherData();
    *(void *)&v82[*(int *)(v85 + 20)] = *(void *)&v83[*(int *)(v85 + 20)];
    uint64_t v244 = (int *)v85;
    uint64_t v246 = v83;
    uint64_t v86 = *(int *)(v85 + 24);
    uint64_t v247 = v82;
    uint64_t v87 = &v82[v86];
    uint64_t v88 = &v83[v86];
    uint64_t v89 = *(void *)&v83[v86];
    uint64_t v90 = *((void *)v88 + 1);
    *(void *)uint64_t v87 = v89;
    *((void *)v87 + 1) = v90;
    uint64_t v91 = *((void *)v88 + 3);
    *((void *)v87 + 2) = *((void *)v88 + 2);
    *((void *)v87 + 3) = v91;
    uint64_t v92 = *((void *)v88 + 5);
    *((void *)v87 + 4) = *((void *)v88 + 4);
    *((void *)v87 + 5) = v92;
    uint64_t v234 = type metadata accessor for FeelsLikeComponentPreprocessedDataModel();
    uint64_t v93 = *(int *)(v234 + 28);
    uint64_t v94 = &v87[v93];
    uint64_t v95 = &v88[v93];
    uint64_t v96 = type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference(0);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v95, 1, v96))
    {
      uint64_t v97 = sub_10017DF08(&qword_100E63750);
      memcpy(v94, v95, *(void *)(*(void *)(v97 - 8) + 64));
    }
    else
    {
      uint64_t v98 = *((void *)v95 + 1);
      *(void *)uint64_t v94 = *(void *)v95;
      *((void *)v94 + 1) = v98;
      uint64_t v99 = *(int *)(v96 + 20);
      int v100 = &v94[v99];
      uint64_t v101 = &v95[v99];
      uint64_t v102 = type metadata accessor for TemperatureScaleConfiguration();
      uint64_t v232 = *(void (**)(char *, char *, uint64_t))(*(void *)(v102 - 8) + 16);
      swift_bridgeObjectRetain();
      v232(v100, v101, v102);
      uint64_t v103 = (int *)type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
      *(void *)&v100[v103[5]] = *(void *)&v101[v103[5]];
      *(void *)&v100[v103[6]] = *(void *)&v101[v103[6]];
      *(void *)&v100[v103[7]] = *(void *)&v101[v103[7]];
      uint64_t v104 = v103[8];
      int v105 = &v100[v104];
      uint64_t v106 = &v101[v104];
      uint64_t v108 = *(void *)v106;
      uint64_t v107 = *((void *)v106 + 1);
      *(void *)int v105 = v108;
      *((void *)v105 + 1) = v107;
      v100[v103[9]] = v101[v103[9]];
      swift_bridgeObjectRetain();
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v94, 0, 1, v96);
    }
    uint64_t v109 = *(int *)(v234 + 32);
    unint64_t v110 = &v87[v109];
    uint64_t v111 = &v88[v109];
    uint64_t v112 = *((void *)v111 + 1);
    *(void *)unint64_t v110 = *(void *)v111;
    *((void *)v110 + 1) = v112;
    uint64_t v113 = v244[7];
    uint64_t v114 = &v247[v113];
    uint64_t v115 = &v246[v113];
    *(void *)&v247[v113] = *(void *)&v246[v113];
    uint64_t v116 = *(int *)(type metadata accessor for HourlyForecastComponentPreprocessedDataModel() + 20);
    uint64_t v117 = &v114[v116];
    uint64_t v118 = &v115[v116];
    uint64_t v119 = type metadata accessor for WeatherDescription();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v230 = v119;
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v118, 1, v119))
    {
      uint64_t v120 = sub_10017DF08(&qword_100E63758);
      memcpy(v117, v118, *(void *)(*(void *)(v120 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v119 - 8) + 16))(v117, v118, v119);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v117, 0, 1, v119);
    }
    uint64_t v121 = v244[8];
    uint64_t v122 = &v247[v121];
    uint64_t v123 = &v246[v121];
    uint64_t v124 = *(void *)&v246[v121 + 8];
    *(void *)uint64_t v122 = *(void *)&v246[v121];
    *((void *)v122 + 1) = v124;
    uint64_t v125 = *(void *)&v246[v121 + 24];
    *((void *)v122 + 2) = *(void *)&v246[v121 + 16];
    *((void *)v122 + 3) = v125;
    uint64_t v126 = *(void *)&v246[v121 + 40];
    *((void *)v122 + 4) = *(void *)&v246[v121 + 32];
    *((void *)v122 + 5) = v126;
    uint64_t v127 = *(void *)&v246[v121 + 56];
    *((void *)v122 + 6) = *(void *)&v246[v121 + 48];
    *((void *)v122 + 7) = v127;
    uint64_t v128 = *(int *)(type metadata accessor for ListPreprocessedDataModel() + 32);
    uint64_t v129 = &v122[v128];
    uint64_t v130 = &v123[v128];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v241(v129, v130, v238);
    uint64_t v131 = type metadata accessor for WeatherConditionBackgroundTimeData();
    uint64_t v132 = *(int *)(v131 + 20);
    uint64_t v133 = &v129[v132];
    uint64_t v134 = &v130[v132];
    uint64_t v135 = type metadata accessor for Elevation();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v134, 1, v135))
    {
      uint64_t v136 = sub_10017DF08(&qword_100E63760);
      memcpy(v133, v134, *(void *)(*(void *)(v136 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v135 - 8) + 16))(v133, v134, v135);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v133, 0, 1, v135);
    }
    uint64_t v137 = *(int *)(v131 + 24);
    int v138 = &v129[v137];
    int v139 = &v130[v137];
    uint64_t v140 = type metadata accessor for BackgroundMoonData();
    uint64_t v233 = v135;
    uint64_t v235 = v131;
    uint64_t v226 = v140;
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v139, 1, v140))
    {
      uint64_t v141 = sub_10017DF08(&qword_100E63768);
      memcpy(v138, v139, *(void *)(*(void *)(v141 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v140 - 8) + 16))(v138, v139, v140);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v138, 0, 1, v140);
    }
    uint64_t v142 = v244[9];
    uint64_t v143 = &v247[v142];
    uint64_t v144 = &v246[v142];
    uint64_t v145 = *((void *)v144 + 1);
    *(void *)uint64_t v143 = *(void *)v144;
    *((void *)v143 + 1) = v145;
    uint64_t v146 = *((void *)v144 + 3);
    *((void *)v143 + 2) = *((void *)v144 + 2);
    *((void *)v143 + 3) = v146;
    uint64_t v147 = *((void *)v144 + 5);
    *((void *)v143 + 4) = *((void *)v144 + 4);
    *((void *)v143 + 5) = v147;
    uint64_t v148 = *((void *)v144 + 7);
    *((void *)v143 + 6) = *((void *)v144 + 6);
    *((void *)v143 + 7) = v148;
    uint64_t v149 = *((void *)v144 + 9);
    *((void *)v143 + 8) = *((void *)v144 + 8);
    *((void *)v143 + 9) = v149;
    uint64_t v150 = *((void *)v144 + 11);
    *((void *)v143 + 10) = *((void *)v144 + 10);
    *((void *)v143 + 11) = v150;
    uint64_t v151 = *((void *)v144 + 13);
    *((void *)v143 + 12) = *((void *)v144 + 12);
    *((void *)v143 + 13) = v151;
    uint64_t v152 = v244[10];
    uint64_t v153 = &v247[v152];
    char v154 = &v246[v152];
    uint64_t v228 = *(void (**)(char *, char *, uint64_t))(*(void *)(v230 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v228(v153, v154, v230);
    uint64_t v155 = *(int *)(type metadata accessor for UVIndexComponentPreprocessedDataModel() + 20);
    int v156 = &v153[v155];
    uint64_t v157 = &v154[v155];
    uint64_t v158 = *((void *)v157 + 1);
    *(void *)int v156 = *(void *)v157;
    *((void *)v156 + 1) = v158;
    uint64_t v159 = v244[11];
    unint64_t v160 = &v247[v159];
    unint64_t v161 = &v246[v159];
    uint64_t v162 = *((void *)v161 + 1);
    *(void *)unint64_t v160 = *(void *)v161;
    *((void *)v160 + 1) = v162;
    uint64_t v163 = *((void *)v161 + 3);
    *((void *)v160 + 2) = *((void *)v161 + 2);
    *((void *)v160 + 3) = v163;
    uint64_t v164 = *((void *)v161 + 5);
    *((void *)v160 + 4) = *((void *)v161 + 4);
    *((void *)v160 + 5) = v164;
    uint64_t v165 = v244[12];
    unint64_t v166 = &v247[v165];
    unint64_t v167 = &v246[v165];
    uint64_t v168 = type metadata accessor for PressureTrend();
    uint64_t v169 = *(void (**)(char *, char *, uint64_t))(*(void *)(v168 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v169(v166, v167, v168);
    uint64_t v170 = (int *)type metadata accessor for PressureComponentPreprocessedDataModel();
    uint64_t v171 = v170[5];
    uint64_t v172 = &v166[v171];
    uint64_t v173 = &v167[v171];
    uint64_t v174 = *((void *)v173 + 1);
    *(void *)uint64_t v172 = *(void *)v173;
    *((void *)v172 + 1) = v174;
    uint64_t v175 = v170[6];
    uint64_t v176 = &v166[v175];
    uint64_t v177 = &v167[v175];
    uint64_t v231 = *((void *)v177 + 1);
    *(void *)uint64_t v176 = *(void *)v177;
    *((void *)v176 + 1) = v231;
    uint64_t v178 = v170[7];
    uint64_t v179 = &v166[v178];
    uint64_t v180 = &v167[v178];
    uint64_t v229 = *((void *)v180 + 1);
    *(void *)uint64_t v179 = *(void *)v180;
    *((void *)v179 + 1) = v229;
    *(void *)&v166[v170[8]] = *(void *)&v167[v170[8]];
    uint64_t v181 = v170[9];
    unsigned __int8 v182 = &v166[v181];
    uint64_t v183 = &v167[v181];
    uint64_t v227 = *((void *)v183 + 1);
    *(void *)unsigned __int8 v182 = *(void *)v183;
    *((void *)v182 + 1) = v227;
    uint64_t v184 = v244[13];
    uint64_t v185 = &v247[v184];
    uint64_t v186 = &v246[v184];
    uint64_t v187 = *((void *)v186 + 1);
    *(void *)uint64_t v185 = *(void *)v186;
    *((void *)v185 + 1) = v187;
    uint64_t v188 = *((void *)v186 + 3);
    *((void *)v185 + 2) = *((void *)v186 + 2);
    *((void *)v185 + 3) = v188;
    uint64_t v189 = *((void *)v186 + 5);
    *((void *)v185 + 4) = *((void *)v186 + 4);
    *((void *)v185 + 5) = v189;
    uint64_t v190 = *((void *)v186 + 7);
    *((void *)v185 + 6) = *((void *)v186 + 6);
    *((void *)v185 + 7) = v190;
    uint64_t v191 = *((void *)v186 + 9);
    *((void *)v185 + 8) = *((void *)v186 + 8);
    *((void *)v185 + 9) = v191;
    uint64_t v192 = *((void *)v186 + 11);
    *((void *)v185 + 10) = *((void *)v186 + 10);
    *((void *)v185 + 11) = v192;
    uint64_t v193 = *((void *)v186 + 13);
    *((void *)v185 + 12) = *((void *)v186 + 12);
    *((void *)v185 + 13) = v193;
    uint64_t v194 = *((void *)v186 + 15);
    *((void *)v185 + 14) = *((void *)v186 + 14);
    *((void *)v185 + 15) = v194;
    uint64_t v195 = *((void *)v186 + 17);
    *((void *)v185 + 16) = *((void *)v186 + 16);
    *((void *)v185 + 17) = v195;
    uint64_t v196 = *((void *)v186 + 19);
    *((void *)v185 + 18) = *((void *)v186 + 18);
    *((void *)v185 + 19) = v196;
    uint64_t v197 = *((void *)v186 + 21);
    *((void *)v185 + 20) = *((void *)v186 + 20);
    *((void *)v185 + 21) = v197;
    uint64_t v198 = *((void *)v186 + 23);
    *((void *)v185 + 22) = *((void *)v186 + 22);
    *((void *)v185 + 23) = v198;
    uint64_t v199 = *((void *)v186 + 25);
    *((void *)v185 + 24) = *((void *)v186 + 24);
    *((void *)v185 + 25) = v199;
    *((_OWORD *)v185 + 13) = *((_OWORD *)v186 + 13);
    *((void *)v185 + 28) = *((void *)v186 + 28);
    uint64_t v200 = v244[14];
    uint64_t v201 = &v247[v200];
    uint64_t v202 = &v246[v200];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v241(v201, v202, v238);
    uint64_t v203 = *(int *)(v235 + 20);
    uint64_t v204 = &v201[v203];
    uint64_t v205 = &v202[v203];
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v202[v203], 1, v233))
    {
      uint64_t v206 = sub_10017DF08(&qword_100E63760);
      memcpy(v204, v205, *(void *)(*(void *)(v206 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v233 - 8) + 16))(v204, v205, v233);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v204, 0, 1, v233);
    }
    uint64_t v207 = *(int *)(v235 + 24);
    uint64_t v208 = &v201[v207];
    uint64_t v209 = &v202[v207];
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v202[v207], 1, v226))
    {
      uint64_t v210 = sub_10017DF08(&qword_100E63768);
      memcpy(v208, v209, *(void *)(*(void *)(v210 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v226 - 8) + 16))(v208, v209, v226);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v208, 0, 1, v226);
    }
    uint64_t v211 = v244[15];
    uint64_t v212 = &v247[v211];
    uint64_t v213 = &v246[v211];
    uint64_t v214 = *((void *)v213 + 1);
    *(void *)uint64_t v212 = *(void *)v213;
    *((void *)v212 + 1) = v214;
    uint64_t v215 = *((void *)v213 + 3);
    *((void *)v212 + 2) = *((void *)v213 + 2);
    *((void *)v212 + 3) = v215;
    uint64_t v216 = *((void *)v213 + 5);
    *((void *)v212 + 4) = *((void *)v213 + 4);
    *((void *)v212 + 5) = v216;
    uint64_t v217 = *((void *)v213 + 7);
    *((void *)v212 + 6) = *((void *)v213 + 6);
    *((void *)v212 + 7) = v217;
    uint64_t v218 = *((void *)v213 + 9);
    *((void *)v212 + 8) = *((void *)v213 + 8);
    *((void *)v212 + 9) = v218;
    uint64_t v219 = *((void *)v213 + 11);
    *((void *)v212 + 10) = *((void *)v213 + 10);
    *((void *)v212 + 11) = v219;
    uint64_t v220 = *((void *)v213 + 13);
    *((void *)v212 + 12) = *((void *)v213 + 12);
    *((void *)v212 + 13) = v220;
    uint64_t v221 = *(int *)(v236 + 64);
    uint64_t v222 = (void *)((char *)v239 + v221);
    uint64_t v223 = (void *)((char *)v40 + v221);
    type metadata accessor for NewsDataModel();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *uint64_t v222 = *v223;
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v224 = type metadata accessor for News();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v224 - 8) + 16))(v222, v223, v224);
    }
    uint64_t v10 = v248;
    uint64_t v41 = v237;
    swift_storeEnumTagMultiPayload();
    uint64_t v39 = v239;
    goto LABEL_68;
  }
  uint64_t v9 = *a2;
  *a1 = *a2;
  uint64_t v10 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
  swift_retain();
  return v10;
}

char *sub_10023E83C(char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Location.Identifier();
  int v7 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a1, 1, v6);
  int v8 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v9 = *(void *)(v6 - 8);
  if (v8)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(a1, v6);
LABEL_6:
    uint64_t active = type metadata accessor for LocationViewerActiveLocationState();
    memcpy(a1, a2, *(void *)(*(void *)(active - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v9 + 24))(a1, a2, v6);
LABEL_7:
  uint64_t v11 = a3[5];
  uint64_t v12 = &a1[v11];
  uint64_t v13 = &a2[v11];
  uint64_t v14 = type metadata accessor for LocationModel();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  a1[a3[6]] = a2[a3[6]];
  uint64_t v15 = a3[7];
  uint64_t v16 = &a1[v15];
  uint64_t v17 = &a2[v15];
  uint64_t v18 = type metadata accessor for CurrentLocation();
  int v19 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v16, 1, v18);
  int v20 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v17, 1, v18);
  if (!v19)
  {
    if (!v20)
    {
      if (a1 == a2) {
        goto LABEL_21;
      }
      sub_1001D1194((uint64_t)v16, (void (*)(void))&type metadata accessor for CurrentLocation);
      if (swift_getEnumCaseMultiPayload() <= 2)
      {
        uint64_t v23 = type metadata accessor for Location();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v16, v17, v23);
        swift_storeEnumTagMultiPayload();
        goto LABEL_21;
      }
      size_t v21 = *(void *)(*(void *)(v18 - 8) + 64);
LABEL_14:
      memcpy(v16, v17, v21);
      goto LABEL_21;
    }
    sub_1001D1194((uint64_t)v16, (void (*)(void))&type metadata accessor for CurrentLocation);
LABEL_13:
    size_t v21 = *(void *)(*(void *)(sub_10017DF08((uint64_t *)&unk_100EADD50) - 8) + 64);
    goto LABEL_14;
  }
  if (v20) {
    goto LABEL_13;
  }
  if (swift_getEnumCaseMultiPayload() > 2)
  {
    memcpy(v16, v17, *(void *)(*(void *)(v18 - 8) + 64));
  }
  else
  {
    uint64_t v22 = type metadata accessor for Location();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16))(v16, v17, v22);
    swift_storeEnumTagMultiPayload();
  }
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v16, 0, 1, v18);
LABEL_21:
  uint64_t v24 = (int *)type metadata accessor for LocationsState();
  *(void *)&v16[v24[5]] = *(void *)&v17[v24[5]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&v16[v24[6]] = *(void *)&v17[v24[6]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&v16[v24[7]] = *(void *)&v17[v24[7]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&v16[v24[8]] = *(void *)&v17[v24[8]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&v16[v24[9]] = *(void *)&v17[v24[9]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&v16[v24[10]] = *(void *)&v17[v24[10]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&v16[v24[11]] = *(void *)&v17[v24[11]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v25 = v24[12];
  uint64_t v26 = &v16[v25];
  uint64_t v27 = &v17[v25];
  uint64_t v28 = *(void *)v27;
  uint64_t v29 = *((void *)v27 + 1);
  unsigned __int8 v30 = v27[16];
  sub_10015458C(*(void *)v27, v29, v30);
  uint64_t v31 = *(void *)v26;
  uint64_t v32 = *((void *)v26 + 1);
  *(void *)uint64_t v26 = v28;
  *((void *)v26 + 1) = v29;
  unsigned __int8 v33 = v26[16];
  v26[16] = v30;
  sub_10015303C(v31, v32, v33);
  *(void *)&v16[v24[13]] = *(void *)&v17[v24[13]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[a3[8]] = a2[a3[8]];
  a1[a3[9]] = a2[a3[9]];
  uint64_t v34 = a3[10];
  uint64_t v35 = &a1[v34];
  uint64_t v36 = &a2[v34];
  *uint64_t v35 = *v36;
  *((void *)v35 + 1) = *((void *)v36 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v37 = a3[11];
  uint64_t v38 = &a1[v37];
  uint64_t v39 = &a2[v37];
  uint64_t v40 = type metadata accessor for Date();
  uint64_t v41 = *(void *)(v40 - 8);
  (*(void (**)(char *, char *, uint64_t))(v41 + 24))(v38, v39, v40);
  a1[a3[12]] = a2[a3[12]];
  *(void *)&a1[a3[13]] = *(void *)&a2[a3[13]];
  a1[a3[14]] = a2[a3[14]];
  a1[a3[15]] = a2[a3[15]];
  *(void *)&a1[a3[16]] = *(void *)&a2[a3[16]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[a3[17]] = a2[a3[17]];
  uint64_t v42 = a3[18];
  Swift::Int v43 = &a1[v42];
  uint64_t v44 = &a2[v42];
  uint64_t v45 = type metadata accessor for LocationWeatherDataState(0);
  int v46 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v43, 1, v45);
  int v47 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v44, 1, v45);
  if (v46)
  {
    if (!v47)
    {
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        *(void *)Swift::Int v43 = *(void *)v44;
        *((void *)v43 + 1) = *((void *)v44 + 1);
        unint64_t v51 = *((void *)v44 + 3);
        swift_bridgeObjectRetain();
        if (v51 >= 0xE)
        {
          *((void *)v43 + 2) = *((void *)v44 + 2);
          *((void *)v43 + 3) = *((void *)v44 + 3);
          swift_bridgeObjectRetain();
        }
        else
        {
          *((_OWORD *)v43 + 1) = *((_OWORD *)v44 + 1);
        }
        goto LABEL_102;
      }
      if (EnumCaseMultiPayload != 1)
      {
        if (EnumCaseMultiPayload)
        {
          memcpy(v43, v44, *(void *)(*(void *)(v45 - 8) + 64));
LABEL_103:
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v43, 0, 1, v45);
          return a1;
        }
        type metadata accessor for NewsDataModel();
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          *(void *)Swift::Int v43 = *(void *)v44;
          swift_bridgeObjectRetain();
        }
        else
        {
          uint64_t v58 = type metadata accessor for News();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v58 - 8) + 16))(v43, v44, v58);
        }
        swift_storeEnumTagMultiPayload();
LABEL_102:
        swift_storeEnumTagMultiPayload();
        goto LABEL_103;
      }
      uint64_t v339 = v41;
      *(void *)Swift::Int v43 = *(void *)v44;
      *((void *)v43 + 1) = *((void *)v44 + 1);
      uint64_t v52 = (int *)type metadata accessor for WeatherData(0);
      uint64_t v53 = v52[5];
      uint64_t v54 = &v43[v53];
      uint64_t v55 = &v44[v53];
      uint64_t v56 = type metadata accessor for Locale();
      swift_bridgeObjectRetain();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v55, 1, v56))
      {
        uint64_t v57 = sub_10017DF08(&qword_100E63730);
        memcpy(v54, v55, *(void *)(*(void *)(v57 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v56 - 8) + 16))(v54, v55, v56);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v54, 0, 1, v56);
      }
      uint64_t v66 = v52[6];
      uint64_t v67 = &v43[v66];
      int v68 = &v44[v66];
      uint64_t v69 = type metadata accessor for WeatherDataModel();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v69 - 8) + 16))(v67, v68, v69);
      uint64_t v70 = v52[7];
      uint64_t v71 = &v43[v70];
      uint64_t v72 = &v44[v70];
      uint64_t v73 = sub_10017DF08(&qword_100E63738);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v72, 1, v73))
      {
        uint64_t v74 = type metadata accessor for WeatherData.CachingState(0);
        memcpy(v71, v72, *(void *)(*(void *)(v74 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v41 + 16))(v71, v72, v40);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v71, 0, 1, v73);
      }
      uint64_t v75 = v52[8];
      uint64_t v76 = &v43[v75];
      uint64_t v77 = &v44[v75];
      uint64_t v78 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
      int v79 = swift_getEnumCaseMultiPayload();
      uint64_t v332 = v45;
      uint64_t v337 = v40;
      if (v79 == 1)
      {
        uint64_t v80 = type metadata accessor for WeatherStatisticsModel();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v80 - 8) + 16))(v76, v77, v80);
      }
      else
      {
        if (v79)
        {
          memcpy(v76, v77, *(void *)(*(void *)(v78 - 8) + 64));
          goto LABEL_62;
        }
        *(void *)uint64_t v76 = *(void *)v77;
        *((void *)v76 + 1) = *((void *)v77 + 1);
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
LABEL_62:
      uint64_t v81 = v52[9];
      uint64_t v82 = &v43[v81];
      uint64_t v83 = &v44[v81];
      uint64_t v84 = type metadata accessor for WeatherDataOverrides();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v83, 1, v84))
      {
        uint64_t v85 = sub_10017DF08(&qword_100E63740);
        memcpy(v82, v83, *(void *)(*(void *)(v85 - 8) + 64));
      }
      else
      {
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v83, 1, v337))
        {
          uint64_t v86 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
          memcpy(v82, v83, *(void *)(*(void *)(v86 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v41 + 16))(v82, v83, v337);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v82, 0, 1, v337);
        }
        uint64_t v97 = *(int *)(v84 + 20);
        uint64_t v98 = &v82[v97];
        uint64_t v99 = &v83[v97];
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v83[v97], 1, v337))
        {
          uint64_t v100 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
          memcpy(v98, v99, *(void *)(*(void *)(v100 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v41 + 16))(v98, v99, v337);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v98, 0, 1, v337);
        }
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v82, 0, 1, v84);
      }
      uint64_t v318 = sub_10017DF08(&qword_100E63748);
      uint64_t v106 = *(int *)(v318 + 48);
      v333 = v44;
      v335 = v43;
      uint64_t v107 = &v43[v106];
      uint64_t v108 = &v44[v106];
      uint64_t v109 = type metadata accessor for UUID();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v109 - 8) + 16))(v107, v108, v109);
      uint64_t v110 = type metadata accessor for PreprocessedWeatherData();
      *(void *)&v107[*(int *)(v110 + 20)] = *(void *)&v108[*(int *)(v110 + 20)];
      v341 = (int *)v110;
      v343 = v108;
      uint64_t v111 = *(int *)(v110 + 24);
      v345 = v107;
      uint64_t v112 = &v107[v111];
      uint64_t v113 = &v108[v111];
      *(void *)uint64_t v112 = *(void *)&v108[v111];
      *((void *)v112 + 1) = *(void *)&v108[v111 + 8];
      *((void *)v112 + 2) = *(void *)&v108[v111 + 16];
      *((void *)v112 + 3) = *(void *)&v108[v111 + 24];
      *((void *)v112 + 4) = *(void *)&v108[v111 + 32];
      *((void *)v112 + 5) = *(void *)&v108[v111 + 40];
      uint64_t v330 = type metadata accessor for FeelsLikeComponentPreprocessedDataModel();
      uint64_t v114 = *(int *)(v330 + 28);
      uint64_t v115 = &v112[v114];
      uint64_t v116 = &v113[v114];
      uint64_t v117 = type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference(0);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v116, 1, v117))
      {
        uint64_t v118 = sub_10017DF08(&qword_100E63750);
        memcpy(v115, v116, *(void *)(*(void *)(v118 - 8) + 64));
      }
      else
      {
        *(void *)uint64_t v115 = *(void *)v116;
        *((void *)v115 + 1) = *((void *)v116 + 1);
        uint64_t v119 = *(int *)(v117 + 20);
        uint64_t v120 = &v115[v119];
        uint64_t v121 = &v116[v119];
        uint64_t v122 = type metadata accessor for TemperatureScaleConfiguration();
        v328 = *(void (**)(char *, char *, uint64_t))(*(void *)(v122 - 8) + 16);
        swift_bridgeObjectRetain();
        v328(v120, v121, v122);
        uint64_t v123 = (int *)type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
        *(void *)&v120[v123[5]] = *(void *)&v121[v123[5]];
        *(void *)&v120[v123[6]] = *(void *)&v121[v123[6]];
        *(void *)&v120[v123[7]] = *(void *)&v121[v123[7]];
        uint64_t v124 = v123[8];
        uint64_t v125 = &v120[v124];
        uint64_t v126 = &v121[v124];
        *(void *)uint64_t v125 = *(void *)v126;
        *((void *)v125 + 1) = *((void *)v126 + 1);
        v120[v123[9]] = v121[v123[9]];
        swift_bridgeObjectRetain();
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v115, 0, 1, v117);
      }
      uint64_t v127 = *(int *)(v330 + 32);
      uint64_t v128 = &v112[v127];
      uint64_t v129 = &v113[v127];
      *(void *)uint64_t v128 = *(void *)v129;
      *((void *)v128 + 1) = *((void *)v129 + 1);
      uint64_t v130 = v341[7];
      uint64_t v131 = &v345[v130];
      uint64_t v132 = &v343[v130];
      *(void *)&v345[v130] = *(void *)&v343[v130];
      uint64_t v133 = *(int *)(type metadata accessor for HourlyForecastComponentPreprocessedDataModel() + 20);
      uint64_t v134 = &v131[v133];
      uint64_t v135 = &v132[v133];
      uint64_t v136 = type metadata accessor for WeatherDescription();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v323 = v136;
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v135, 1, v136))
      {
        uint64_t v137 = sub_10017DF08(&qword_100E63758);
        memcpy(v134, v135, *(void *)(*(void *)(v137 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v136 - 8) + 16))(v134, v135, v136);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v134, 0, 1, v136);
      }
      uint64_t v138 = v341[8];
      int v139 = &v345[v138];
      uint64_t v140 = &v343[v138];
      *(void *)int v139 = *(void *)&v343[v138];
      *((void *)v139 + 1) = *(void *)&v343[v138 + 8];
      *((void *)v139 + 2) = *(void *)&v343[v138 + 16];
      *((void *)v139 + 3) = *(void *)&v343[v138 + 24];
      *((void *)v139 + 4) = *(void *)&v343[v138 + 32];
      *((void *)v139 + 5) = *(void *)&v343[v138 + 40];
      *((void *)v139 + 6) = *(void *)&v343[v138 + 48];
      *((void *)v139 + 7) = *(void *)&v343[v138 + 56];
      uint64_t v141 = *(int *)(type metadata accessor for ListPreprocessedDataModel() + 32);
      uint64_t v142 = &v139[v141];
      uint64_t v143 = &v140[v141];
      uint64_t v144 = *(void (**)(char *, char *, uint64_t))(v339 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v144(v142, v143, v337);
      uint64_t v145 = type metadata accessor for WeatherConditionBackgroundTimeData();
      uint64_t v146 = *(int *)(v145 + 20);
      uint64_t v147 = &v142[v146];
      uint64_t v148 = &v143[v146];
      uint64_t v149 = type metadata accessor for Elevation();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v148, 1, v149))
      {
        uint64_t v150 = sub_10017DF08(&qword_100E63760);
        memcpy(v147, v148, *(void *)(*(void *)(v150 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v149 - 8) + 16))(v147, v148, v149);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v147, 0, 1, v149);
      }
      uint64_t v151 = *(int *)(v145 + 24);
      uint64_t v152 = &v142[v151];
      uint64_t v153 = &v143[v151];
      uint64_t v154 = type metadata accessor for BackgroundMoonData();
      uint64_t v325 = v149;
      uint64_t v316 = v154;
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v153, 1, v154))
      {
        uint64_t v155 = sub_10017DF08(&qword_100E63768);
        memcpy(v152, v153, *(void *)(*(void *)(v155 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v154 - 8) + 16))(v152, v153, v154);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v152, 0, 1, v154);
      }
      uint64_t v156 = v341[9];
      uint64_t v157 = &v345[v156];
      uint64_t v158 = &v343[v156];
      *(void *)uint64_t v157 = *(void *)v158;
      *((void *)v157 + 1) = *((void *)v158 + 1);
      *((void *)v157 + 2) = *((void *)v158 + 2);
      *((void *)v157 + 3) = *((void *)v158 + 3);
      *((void *)v157 + 4) = *((void *)v158 + 4);
      *((void *)v157 + 5) = *((void *)v158 + 5);
      *((void *)v157 + 6) = *((void *)v158 + 6);
      *((void *)v157 + 7) = *((void *)v158 + 7);
      *((void *)v157 + 8) = *((void *)v158 + 8);
      *((void *)v157 + 9) = *((void *)v158 + 9);
      *((void *)v157 + 10) = *((void *)v158 + 10);
      *((void *)v157 + 11) = *((void *)v158 + 11);
      *((void *)v157 + 12) = *((void *)v158 + 12);
      *((void *)v157 + 13) = *((void *)v158 + 13);
      uint64_t v159 = v341[10];
      unint64_t v160 = &v345[v159];
      unint64_t v161 = &v343[v159];
      v322 = *(void (**)(char *, char *, uint64_t))(*(void *)(v323 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v322(v160, v161, v323);
      uint64_t v162 = *(int *)(type metadata accessor for UVIndexComponentPreprocessedDataModel() + 20);
      uint64_t v163 = &v160[v162];
      uint64_t v164 = &v161[v162];
      *(void *)uint64_t v163 = *(void *)v164;
      *((void *)v163 + 1) = *((void *)v164 + 1);
      uint64_t v165 = v341[11];
      unint64_t v166 = &v345[v165];
      unint64_t v167 = &v343[v165];
      *(void *)unint64_t v166 = *(void *)v167;
      *((void *)v166 + 1) = *((void *)v167 + 1);
      *((void *)v166 + 2) = *((void *)v167 + 2);
      *((void *)v166 + 3) = *((void *)v167 + 3);
      *((void *)v166 + 4) = *((void *)v167 + 4);
      *((void *)v166 + 5) = *((void *)v167 + 5);
      uint64_t v168 = v341[12];
      uint64_t v169 = &v345[v168];
      uint64_t v170 = &v343[v168];
      uint64_t v171 = type metadata accessor for PressureTrend();
      uint64_t v172 = *(void (**)(char *, char *, uint64_t))(*(void *)(v171 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v172(v169, v170, v171);
      uint64_t v173 = (int *)type metadata accessor for PressureComponentPreprocessedDataModel();
      uint64_t v174 = v173[5];
      uint64_t v175 = &v169[v174];
      uint64_t v176 = &v170[v174];
      *(void *)uint64_t v175 = *(void *)v176;
      *((void *)v175 + 1) = *((void *)v176 + 1);
      uint64_t v177 = v173[6];
      uint64_t v178 = &v169[v177];
      uint64_t v179 = &v170[v177];
      *(void *)uint64_t v178 = *(void *)v179;
      *((void *)v178 + 1) = *((void *)v179 + 1);
      uint64_t v180 = v173[7];
      uint64_t v181 = &v169[v180];
      unsigned __int8 v182 = &v170[v180];
      *(void *)uint64_t v181 = *(void *)v182;
      *((void *)v181 + 1) = *((void *)v182 + 1);
      *(void *)&v169[v173[8]] = *(void *)&v170[v173[8]];
      uint64_t v183 = v173[9];
      uint64_t v184 = &v169[v183];
      uint64_t v185 = &v170[v183];
      *(void *)uint64_t v184 = *(void *)v185;
      *((void *)v184 + 1) = *((void *)v185 + 1);
      uint64_t v186 = v341[13];
      uint64_t v187 = &v345[v186];
      uint64_t v188 = &v343[v186];
      *(void *)uint64_t v187 = *(void *)v188;
      *((void *)v187 + 1) = *((void *)v188 + 1);
      *((void *)v187 + 2) = *((void *)v188 + 2);
      *((void *)v187 + 3) = *((void *)v188 + 3);
      *((void *)v187 + 4) = *((void *)v188 + 4);
      *((void *)v187 + 5) = *((void *)v188 + 5);
      *((void *)v187 + 6) = *((void *)v188 + 6);
      *((void *)v187 + 7) = *((void *)v188 + 7);
      *((void *)v187 + 8) = *((void *)v188 + 8);
      *((void *)v187 + 9) = *((void *)v188 + 9);
      *((void *)v187 + 10) = *((void *)v188 + 10);
      *((void *)v187 + 11) = *((void *)v188 + 11);
      *((void *)v187 + 12) = *((void *)v188 + 12);
      *((void *)v187 + 13) = *((void *)v188 + 13);
      *((void *)v187 + 14) = *((void *)v188 + 14);
      *((void *)v187 + 15) = *((void *)v188 + 15);
      *((void *)v187 + 16) = *((void *)v188 + 16);
      *((void *)v187 + 17) = *((void *)v188 + 17);
      *((void *)v187 + 18) = *((void *)v188 + 18);
      *((void *)v187 + 19) = *((void *)v188 + 19);
      *((void *)v187 + 20) = *((void *)v188 + 20);
      *((void *)v187 + 21) = *((void *)v188 + 21);
      *((void *)v187 + 22) = *((void *)v188 + 22);
      *((void *)v187 + 23) = *((void *)v188 + 23);
      *((void *)v187 + 24) = *((void *)v188 + 24);
      *((void *)v187 + 25) = *((void *)v188 + 25);
      *((void *)v187 + 26) = *((void *)v188 + 26);
      *((void *)v187 + 27) = *((void *)v188 + 27);
      *((void *)v187 + 28) = *((void *)v188 + 28);
      uint64_t v189 = v341[14];
      v319 = &v345[v189];
      uint64_t v190 = &v343[v189];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v144(v319, v190, v337);
      uint64_t v191 = *(int *)(v145 + 20);
      uint64_t v192 = &v319[v191];
      uint64_t v193 = &v190[v191];
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v190[v191], 1, v325))
      {
        uint64_t v194 = sub_10017DF08(&qword_100E63760);
        memcpy(v192, v193, *(void *)(*(void *)(v194 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v325 - 8) + 16))(v192, v193, v325);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v192, 0, 1, v325);
      }
      uint64_t v195 = *(int *)(v145 + 24);
      uint64_t v196 = &v319[v195];
      uint64_t v197 = &v190[v195];
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v190[v195], 1, v316))
      {
        uint64_t v198 = sub_10017DF08(&qword_100E63768);
        memcpy(v196, v197, *(void *)(*(void *)(v198 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v316 - 8) + 16))(v196, v197, v316);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v196, 0, 1, v316);
      }
      uint64_t v199 = v341[15];
      uint64_t v200 = &v345[v199];
      uint64_t v201 = &v343[v199];
      *(void *)uint64_t v200 = *(void *)v201;
      *((void *)v200 + 1) = *((void *)v201 + 1);
      *((void *)v200 + 2) = *((void *)v201 + 2);
      *((void *)v200 + 3) = *((void *)v201 + 3);
      *((void *)v200 + 4) = *((void *)v201 + 4);
      *((void *)v200 + 5) = *((void *)v201 + 5);
      *((void *)v200 + 6) = *((void *)v201 + 6);
      *((void *)v200 + 7) = *((void *)v201 + 7);
      *((void *)v200 + 8) = *((void *)v201 + 8);
      *((void *)v200 + 9) = *((void *)v201 + 9);
      *((void *)v200 + 10) = *((void *)v201 + 10);
      *((void *)v200 + 11) = *((void *)v201 + 11);
      *((void *)v200 + 12) = *((void *)v201 + 12);
      *((void *)v200 + 13) = *((void *)v201 + 13);
      uint64_t v202 = *(int *)(v318 + 64);
      v346 = &v335[v202];
      uint64_t v203 = (void *)((char *)v333 + v202);
      type metadata accessor for NewsDataModel();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        *(void *)v346 = *v203;
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v204 = type metadata accessor for News();
        (*(void (**)(char *, void *, uint64_t))(*(void *)(v204 - 8) + 16))(v346, v203, v204);
      }
      Swift::Int v43 = v335;
      uint64_t v45 = v332;
      swift_storeEnumTagMultiPayload();
      goto LABEL_102;
    }
    goto LABEL_30;
  }
  if (!v47)
  {
    if (a1 == a2) {
      return a1;
    }
    sub_1001D1194((uint64_t)v43, (void (*)(void))type metadata accessor for LocationWeatherDataState);
    int v50 = swift_getEnumCaseMultiPayload();
    if (v50 == 2)
    {
      *(void *)Swift::Int v43 = *(void *)v44;
      *((void *)v43 + 1) = *((void *)v44 + 1);
      unint64_t v59 = *((void *)v44 + 3);
      swift_bridgeObjectRetain();
      if (v59 >= 0xE)
      {
        *((void *)v43 + 2) = *((void *)v44 + 2);
        *((void *)v43 + 3) = *((void *)v44 + 3);
        swift_bridgeObjectRetain();
      }
      else
      {
        *((_OWORD *)v43 + 1) = *((_OWORD *)v44 + 1);
      }
      goto LABEL_138;
    }
    if (v50 != 1)
    {
      if (v50)
      {
        size_t v49 = *(void *)(*(void *)(v45 - 8) + 64);
        goto LABEL_31;
      }
      type metadata accessor for NewsDataModel();
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        *(void *)Swift::Int v43 = *(void *)v44;
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v87 = type metadata accessor for News();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v87 - 8) + 16))(v43, v44, v87);
      }
      goto LABEL_137;
    }
    uint64_t v340 = v41;
    *(void *)Swift::Int v43 = *(void *)v44;
    *((void *)v43 + 1) = *((void *)v44 + 1);
    uint64_t v60 = (int *)type metadata accessor for WeatherData(0);
    uint64_t v61 = v60[5];
    uint64_t v62 = &v43[v61];
    uint64_t v63 = &v44[v61];
    uint64_t v64 = type metadata accessor for Locale();
    swift_bridgeObjectRetain();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v63, 1, v64))
    {
      uint64_t v65 = sub_10017DF08(&qword_100E63730);
      memcpy(v62, v63, *(void *)(*(void *)(v65 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v64 - 8) + 16))(v62, v63, v64);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v62, 0, 1, v64);
    }
    uint64_t v88 = v60[6];
    uint64_t v89 = &v43[v88];
    uint64_t v90 = &v44[v88];
    uint64_t v91 = type metadata accessor for WeatherDataModel();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v91 - 8) + 16))(v89, v90, v91);
    uint64_t v92 = v60[7];
    uint64_t v93 = &v43[v92];
    uint64_t v94 = &v44[v92];
    uint64_t v95 = sub_10017DF08(&qword_100E63738);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v94, 1, v95))
    {
      uint64_t v96 = type metadata accessor for WeatherData.CachingState(0);
      memcpy(v93, v94, *(void *)(*(void *)(v96 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v41 + 16))(v93, v94, v40);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v93, 0, 1, v95);
    }
    uint64_t v101 = v60[8];
    uint64_t v102 = &v43[v101];
    uint64_t v103 = &v44[v101];
    uint64_t v104 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
    int v105 = swift_getEnumCaseMultiPayload();
    uint64_t v338 = v40;
    if (v105 == 1)
    {
      uint64_t v205 = type metadata accessor for WeatherStatisticsModel();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v205 - 8) + 16))(v102, v103, v205);
    }
    else
    {
      if (v105)
      {
        memcpy(v102, v103, *(void *)(*(void *)(v104 - 8) + 64));
        goto LABEL_107;
      }
      *(void *)uint64_t v102 = *(void *)v103;
      *((void *)v102 + 1) = *((void *)v103 + 1);
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
LABEL_107:
    uint64_t v206 = v60[9];
    uint64_t v207 = &v43[v206];
    uint64_t v208 = &v44[v206];
    uint64_t v209 = type metadata accessor for WeatherDataOverrides();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v208, 1, v209))
    {
      uint64_t v210 = sub_10017DF08(&qword_100E63740);
      memcpy(v207, v208, *(void *)(*(void *)(v210 - 8) + 64));
    }
    else
    {
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v208, 1, v338))
      {
        uint64_t v211 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
        memcpy(v207, v208, *(void *)(*(void *)(v211 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v41 + 16))(v207, v208, v338);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v207, 0, 1, v338);
      }
      uint64_t v212 = *(int *)(v209 + 20);
      uint64_t v213 = &v207[v212];
      uint64_t v214 = &v208[v212];
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v208[v212], 1, v338))
      {
        uint64_t v215 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
        memcpy(v213, v214, *(void *)(*(void *)(v215 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v41 + 16))(v213, v214, v338);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v213, 0, 1, v338);
      }
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v207, 0, 1, v209);
    }
    uint64_t v331 = sub_10017DF08(&qword_100E63748);
    uint64_t v216 = *(int *)(v331 + 48);
    v334 = v44;
    v336 = v43;
    uint64_t v217 = &v43[v216];
    uint64_t v218 = &v44[v216];
    uint64_t v219 = type metadata accessor for UUID();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v219 - 8) + 16))(v217, v218, v219);
    uint64_t v220 = type metadata accessor for PreprocessedWeatherData();
    *(void *)&v217[*(int *)(v220 + 20)] = *(void *)&v218[*(int *)(v220 + 20)];
    v342 = (int *)v220;
    v344 = v218;
    uint64_t v221 = *(int *)(v220 + 24);
    v347 = v217;
    uint64_t v222 = &v217[v221];
    uint64_t v223 = &v218[v221];
    *(void *)uint64_t v222 = *(void *)&v218[v221];
    *((void *)v222 + 1) = *(void *)&v218[v221 + 8];
    *((void *)v222 + 2) = *(void *)&v218[v221 + 16];
    *((void *)v222 + 3) = *(void *)&v218[v221 + 24];
    *((void *)v222 + 4) = *(void *)&v218[v221 + 32];
    *((void *)v222 + 5) = *(void *)&v218[v221 + 40];
    uint64_t v329 = type metadata accessor for FeelsLikeComponentPreprocessedDataModel();
    uint64_t v224 = *(int *)(v329 + 28);
    int v225 = &v222[v224];
    uint64_t v226 = &v223[v224];
    uint64_t v227 = type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference(0);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v226, 1, v227))
    {
      uint64_t v228 = sub_10017DF08(&qword_100E63750);
      memcpy(v225, v226, *(void *)(*(void *)(v228 - 8) + 64));
    }
    else
    {
      *(void *)int v225 = *(void *)v226;
      *((void *)v225 + 1) = *((void *)v226 + 1);
      uint64_t v229 = *(int *)(v227 + 20);
      uint64_t v230 = &v225[v229];
      uint64_t v231 = &v226[v229];
      uint64_t v232 = type metadata accessor for TemperatureScaleConfiguration();
      v326 = *(void (**)(char *, char *, uint64_t))(*(void *)(v232 - 8) + 16);
      swift_bridgeObjectRetain();
      v326(v230, v231, v232);
      uint64_t v233 = (int *)type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
      *(void *)&v230[v233[5]] = *(void *)&v231[v233[5]];
      *(void *)&v230[v233[6]] = *(void *)&v231[v233[6]];
      *(void *)&v230[v233[7]] = *(void *)&v231[v233[7]];
      uint64_t v234 = v233[8];
      uint64_t v235 = &v230[v234];
      uint64_t v236 = &v231[v234];
      *(void *)uint64_t v235 = *(void *)v236;
      *((void *)v235 + 1) = *((void *)v236 + 1);
      v230[v233[9]] = v231[v233[9]];
      swift_bridgeObjectRetain();
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v225, 0, 1, v227);
    }
    uint64_t v237 = *(int *)(v329 + 32);
    uint64_t v238 = &v222[v237];
    uint64_t v239 = &v223[v237];
    *(void *)uint64_t v238 = *(void *)v239;
    *((void *)v238 + 1) = *((void *)v239 + 1);
    uint64_t v240 = v342[7];
    uint64_t v241 = &v347[v240];
    uint64_t v242 = &v344[v240];
    *(void *)&v347[v240] = *(void *)&v344[v240];
    uint64_t v243 = *(int *)(type metadata accessor for HourlyForecastComponentPreprocessedDataModel() + 20);
    uint64_t v244 = &v241[v243];
    uint64_t v245 = &v242[v243];
    uint64_t v246 = type metadata accessor for WeatherDescription();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v321 = v246;
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v245, 1, v246))
    {
      uint64_t v247 = sub_10017DF08(&qword_100E63758);
      memcpy(v244, v245, *(void *)(*(void *)(v247 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v246 - 8) + 16))(v244, v245, v246);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v244, 0, 1, v246);
    }
    uint64_t v248 = v342[8];
    uint64_t v249 = &v347[v248];
    uint64_t v250 = &v344[v248];
    *(void *)uint64_t v249 = *(void *)&v344[v248];
    *((void *)v249 + 1) = *(void *)&v344[v248 + 8];
    *((void *)v249 + 2) = *(void *)&v344[v248 + 16];
    *((void *)v249 + 3) = *(void *)&v344[v248 + 24];
    *((void *)v249 + 4) = *(void *)&v344[v248 + 32];
    *((void *)v249 + 5) = *(void *)&v344[v248 + 40];
    *((void *)v249 + 6) = *(void *)&v344[v248 + 48];
    *((void *)v249 + 7) = *(void *)&v344[v248 + 56];
    uint64_t v251 = *(int *)(type metadata accessor for ListPreprocessedDataModel() + 32);
    uint64_t v252 = &v249[v251];
    uint64_t v253 = &v250[v251];
    uint64_t v254 = *(void (**)(char *, char *, uint64_t))(v340 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v327 = v254;
    v254(v252, v253, v338);
    uint64_t v255 = type metadata accessor for WeatherConditionBackgroundTimeData();
    uint64_t v256 = *(int *)(v255 + 20);
    uint64_t v257 = &v252[v256];
    long long v258 = &v253[v256];
    uint64_t v259 = type metadata accessor for Elevation();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v258, 1, v259))
    {
      uint64_t v260 = sub_10017DF08(&qword_100E63760);
      memcpy(v257, v258, *(void *)(*(void *)(v260 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v259 - 8) + 16))(v257, v258, v259);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v257, 0, 1, v259);
    }
    uint64_t v261 = *(int *)(v255 + 24);
    uint64_t v262 = &v252[v261];
    uint64_t v263 = &v253[v261];
    uint64_t v264 = type metadata accessor for BackgroundMoonData();
    uint64_t v324 = v259;
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v263, 1, v264))
    {
      uint64_t v265 = sub_10017DF08(&qword_100E63768);
      memcpy(v262, v263, *(void *)(*(void *)(v265 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v264 - 8) + 16))(v262, v263, v264);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v262, 0, 1, v264);
    }
    uint64_t v266 = v342[9];
    uint64_t v267 = &v347[v266];
    uint64_t v268 = &v344[v266];
    *(void *)uint64_t v267 = *(void *)v268;
    *((void *)v267 + 1) = *((void *)v268 + 1);
    *((void *)v267 + 2) = *((void *)v268 + 2);
    *((void *)v267 + 3) = *((void *)v268 + 3);
    *((void *)v267 + 4) = *((void *)v268 + 4);
    *((void *)v267 + 5) = *((void *)v268 + 5);
    *((void *)v267 + 6) = *((void *)v268 + 6);
    *((void *)v267 + 7) = *((void *)v268 + 7);
    *((void *)v267 + 8) = *((void *)v268 + 8);
    *((void *)v267 + 9) = *((void *)v268 + 9);
    *((void *)v267 + 10) = *((void *)v268 + 10);
    *((void *)v267 + 11) = *((void *)v268 + 11);
    *((void *)v267 + 12) = *((void *)v268 + 12);
    *((void *)v267 + 13) = *((void *)v268 + 13);
    uint64_t v269 = v342[10];
    uint64_t v270 = &v347[v269];
    uint64_t v271 = &v344[v269];
    v320 = *(void (**)(char *, char *, uint64_t))(*(void *)(v321 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v320(v270, v271, v321);
    uint64_t v272 = *(int *)(type metadata accessor for UVIndexComponentPreprocessedDataModel() + 20);
    uint64_t v273 = &v270[v272];
    uint64_t v274 = &v271[v272];
    *(void *)uint64_t v273 = *(void *)v274;
    *((void *)v273 + 1) = *((void *)v274 + 1);
    uint64_t v275 = v342[11];
    uint64_t v276 = &v347[v275];
    long long v277 = &v344[v275];
    *(void *)uint64_t v276 = *(void *)v277;
    *((void *)v276 + 1) = *((void *)v277 + 1);
    *((void *)v276 + 2) = *((void *)v277 + 2);
    *((void *)v276 + 3) = *((void *)v277 + 3);
    *((void *)v276 + 4) = *((void *)v277 + 4);
    *((void *)v276 + 5) = *((void *)v277 + 5);
    uint64_t v278 = v342[12];
    long long v279 = &v347[v278];
    uint64_t v280 = &v344[v278];
    uint64_t v281 = type metadata accessor for PressureTrend();
    v282 = *(void (**)(char *, char *, uint64_t))(*(void *)(v281 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v282(v279, v280, v281);
    v283 = (int *)type metadata accessor for PressureComponentPreprocessedDataModel();
    uint64_t v284 = v283[5];
    uint64_t v285 = &v279[v284];
    v286 = &v280[v284];
    *(void *)uint64_t v285 = *(void *)v286;
    *((void *)v285 + 1) = *((void *)v286 + 1);
    uint64_t v287 = v283[6];
    v288 = &v279[v287];
    v289 = &v280[v287];
    *(void *)v288 = *(void *)v289;
    *((void *)v288 + 1) = *((void *)v289 + 1);
    uint64_t v290 = v283[7];
    uint64_t v291 = &v279[v290];
    uint64_t v292 = &v280[v290];
    *(void *)uint64_t v291 = *(void *)v292;
    *((void *)v291 + 1) = *((void *)v292 + 1);
    *(void *)&v279[v283[8]] = *(void *)&v280[v283[8]];
    uint64_t v293 = v283[9];
    uint64_t v294 = &v279[v293];
    v295 = &v280[v293];
    *(void *)uint64_t v294 = *(void *)v295;
    *((void *)v294 + 1) = *((void *)v295 + 1);
    uint64_t v296 = v342[13];
    v297 = &v347[v296];
    v298 = &v344[v296];
    *(void *)v297 = *(void *)v298;
    *((void *)v297 + 1) = *((void *)v298 + 1);
    *((void *)v297 + 2) = *((void *)v298 + 2);
    *((void *)v297 + 3) = *((void *)v298 + 3);
    *((void *)v297 + 4) = *((void *)v298 + 4);
    *((void *)v297 + 5) = *((void *)v298 + 5);
    *((void *)v297 + 6) = *((void *)v298 + 6);
    *((void *)v297 + 7) = *((void *)v298 + 7);
    *((void *)v297 + 8) = *((void *)v298 + 8);
    *((void *)v297 + 9) = *((void *)v298 + 9);
    *((void *)v297 + 10) = *((void *)v298 + 10);
    *((void *)v297 + 11) = *((void *)v298 + 11);
    *((void *)v297 + 12) = *((void *)v298 + 12);
    *((void *)v297 + 13) = *((void *)v298 + 13);
    *((void *)v297 + 14) = *((void *)v298 + 14);
    *((void *)v297 + 15) = *((void *)v298 + 15);
    *((void *)v297 + 16) = *((void *)v298 + 16);
    *((void *)v297 + 17) = *((void *)v298 + 17);
    *((void *)v297 + 18) = *((void *)v298 + 18);
    *((void *)v297 + 19) = *((void *)v298 + 19);
    *((void *)v297 + 20) = *((void *)v298 + 20);
    *((void *)v297 + 21) = *((void *)v298 + 21);
    *((void *)v297 + 22) = *((void *)v298 + 22);
    *((void *)v297 + 23) = *((void *)v298 + 23);
    *((void *)v297 + 24) = *((void *)v298 + 24);
    *((void *)v297 + 25) = *((void *)v298 + 25);
    *((void *)v297 + 26) = *((void *)v298 + 26);
    *((void *)v297 + 27) = *((void *)v298 + 27);
    *((void *)v297 + 28) = *((void *)v298 + 28);
    uint64_t v299 = v342[14];
    v317 = &v347[v299];
    v300 = &v344[v299];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v327(v317, v300, v338);
    uint64_t v301 = *(int *)(v255 + 20);
    v302 = &v317[v301];
    v303 = &v300[v301];
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v300[v301], 1, v324))
    {
      uint64_t v304 = sub_10017DF08(&qword_100E63760);
      memcpy(v302, v303, *(void *)(*(void *)(v304 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v324 - 8) + 16))(v302, v303, v324);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v302, 0, 1, v324);
    }
    uint64_t v305 = *(int *)(v255 + 24);
    v306 = &v317[v305];
    uint64_t v307 = &v300[v305];
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v300[v305], 1, v264))
    {
      uint64_t v308 = sub_10017DF08(&qword_100E63768);
      memcpy(v306, v307, *(void *)(*(void *)(v308 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v264 - 8) + 16))(v306, v307, v264);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v306, 0, 1, v264);
    }
    uint64_t v309 = v342[15];
    uint64_t v310 = &v347[v309];
    v311 = &v344[v309];
    *(void *)uint64_t v310 = *(void *)v311;
    *((void *)v310 + 1) = *((void *)v311 + 1);
    *((void *)v310 + 2) = *((void *)v311 + 2);
    *((void *)v310 + 3) = *((void *)v311 + 3);
    *((void *)v310 + 4) = *((void *)v311 + 4);
    *((void *)v310 + 5) = *((void *)v311 + 5);
    *((void *)v310 + 6) = *((void *)v311 + 6);
    *((void *)v310 + 7) = *((void *)v311 + 7);
    *((void *)v310 + 8) = *((void *)v311 + 8);
    *((void *)v310 + 9) = *((void *)v311 + 9);
    *((void *)v310 + 10) = *((void *)v311 + 10);
    *((void *)v310 + 11) = *((void *)v311 + 11);
    *((void *)v310 + 12) = *((void *)v311 + 12);
    *((void *)v310 + 13) = *((void *)v311 + 13);
    uint64_t v312 = *(int *)(v331 + 64);
    v348 = (void *)((char *)v336 + v312);
    v313 = (void *)((char *)v334 + v312);
    type metadata accessor for NewsDataModel();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      void *v348 = *v313;
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v314 = type metadata accessor for News();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v314 - 8) + 16))(v348, v313, v314);
    }
LABEL_137:
    swift_storeEnumTagMultiPayload();
LABEL_138:
    swift_storeEnumTagMultiPayload();
    return a1;
  }
  sub_1001D1194((uint64_t)v43, (void (*)(void))type metadata accessor for LocationWeatherDataState);
LABEL_30:
  size_t v49 = *(void *)(*(void *)(sub_10017DF08(&qword_100E63770) - 8) + 64);
LABEL_31:
  memcpy(v43, v44, v49);
  return a1;
}

char *sub_100241268(char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Location.Identifier();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v6))
  {
    uint64_t active = type metadata accessor for LocationViewerActiveLocationState();
    memcpy(a1, a2, *(void *)(*(void *)(active - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v6);
  }
  uint64_t v8 = a3[5];
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = type metadata accessor for LocationModel();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
  uint64_t v12 = a3[7];
  a1[a3[6]] = a2[a3[6]];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  uint64_t v15 = type metadata accessor for CurrentLocation();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v14, 1, v15))
  {
    uint64_t v16 = sub_10017DF08((uint64_t *)&unk_100EADD50);
    memcpy(v13, v14, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() > 2)
    {
      memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      uint64_t v17 = type metadata accessor for Location();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32))(v13, v14, v17);
      swift_storeEnumTagMultiPayload();
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v13, 0, 1, v15);
  }
  uint64_t v18 = (int *)type metadata accessor for LocationsState();
  *(void *)&v13[v18[5]] = *(void *)&v14[v18[5]];
  *(void *)&v13[v18[6]] = *(void *)&v14[v18[6]];
  *(void *)&v13[v18[7]] = *(void *)&v14[v18[7]];
  *(void *)&v13[v18[8]] = *(void *)&v14[v18[8]];
  *(void *)&v13[v18[9]] = *(void *)&v14[v18[9]];
  *(void *)&v13[v18[10]] = *(void *)&v14[v18[10]];
  *(void *)&v13[v18[11]] = *(void *)&v14[v18[11]];
  uint64_t v19 = v18[12];
  int v20 = &v13[v19];
  size_t v21 = &v14[v19];
  *(_OWORD *)int v20 = *(_OWORD *)v21;
  v20[16] = v21[16];
  *(void *)&v13[v18[13]] = *(void *)&v14[v18[13]];
  uint64_t v22 = a3[9];
  a1[a3[8]] = a2[a3[8]];
  a1[v22] = a2[v22];
  uint64_t v23 = a3[11];
  *(_OWORD *)&a1[a3[10]] = *(_OWORD *)&a2[a3[10]];
  uint64_t v24 = &a1[v23];
  uint64_t v25 = &a2[v23];
  uint64_t v26 = type metadata accessor for Date();
  uint64_t v27 = *(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 32);
  v27(v24, v25, v26);
  uint64_t v28 = a3[13];
  a1[a3[12]] = a2[a3[12]];
  *(void *)&a1[v28] = *(void *)&a2[v28];
  uint64_t v29 = a3[15];
  a1[a3[14]] = a2[a3[14]];
  a1[v29] = a2[v29];
  uint64_t v30 = a3[17];
  *(void *)&a1[a3[16]] = *(void *)&a2[a3[16]];
  a1[v30] = a2[v30];
  uint64_t v31 = a3[18];
  uint64_t v32 = &a1[v31];
  unsigned __int8 v33 = &a2[v31];
  uint64_t v34 = type metadata accessor for LocationWeatherDataState(0);
  if (!_s7Weather24LocationCompositionStateOwet_0((uint64_t)v33, 1, v34))
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v152 = v27;
      *(_OWORD *)uint64_t v32 = *(_OWORD *)v33;
      uint64_t v38 = (int *)type metadata accessor for WeatherData(0);
      uint64_t v39 = v38[5];
      uint64_t v40 = &v32[v39];
      uint64_t v41 = &v33[v39];
      uint64_t v42 = type metadata accessor for Locale();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v41, 1, v42))
      {
        uint64_t v43 = sub_10017DF08(&qword_100E63730);
        memcpy(v40, v41, *(void *)(*(void *)(v43 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v42 - 8) + 32))(v40, v41, v42);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v40, 0, 1, v42);
      }
      uint64_t v45 = v38[6];
      int v46 = &v32[v45];
      int v47 = &v33[v45];
      uint64_t v48 = type metadata accessor for WeatherDataModel();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v48 - 8) + 32))(v46, v47, v48);
      uint64_t v49 = v38[7];
      int v50 = &v32[v49];
      unint64_t v51 = &v33[v49];
      uint64_t v52 = sub_10017DF08(&qword_100E63738);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v51, 1, v52))
      {
        uint64_t v53 = type metadata accessor for WeatherData.CachingState(0);
        memcpy(v50, v51, *(void *)(*(void *)(v53 - 8) + 64));
      }
      else
      {
        v152(v50, v51, v26);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v50, 0, 1, v52);
      }
      uint64_t v54 = v38[8];
      uint64_t v55 = &v32[v54];
      uint64_t v56 = &v33[v54];
      uint64_t v57 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v58 = type metadata accessor for WeatherStatisticsModel();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v58 - 8) + 32))(v55, v56, v58);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v55, v56, *(void *)(*(void *)(v57 - 8) + 64));
      }
      uint64_t v59 = v38[9];
      uint64_t v60 = &v32[v59];
      uint64_t v61 = &v33[v59];
      uint64_t v62 = type metadata accessor for WeatherDataOverrides();
      uint64_t v148 = v34;
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v61, 1, v62))
      {
        uint64_t v63 = sub_10017DF08(&qword_100E63740);
        memcpy(v60, v61, *(void *)(*(void *)(v63 - 8) + 64));
      }
      else
      {
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v61, 1, v26))
        {
          uint64_t v64 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
          memcpy(v60, v61, *(void *)(*(void *)(v64 - 8) + 64));
        }
        else
        {
          v152(v60, v61, v26);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v60, 0, 1, v26);
        }
        uint64_t v65 = *(int *)(v62 + 20);
        uint64_t v66 = &v60[v65];
        uint64_t v67 = &v61[v65];
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v67, 1, v26))
        {
          uint64_t v68 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
          memcpy(v66, v67, *(void *)(*(void *)(v68 - 8) + 64));
        }
        else
        {
          v152(v66, v67, v26);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v66, 0, 1, v26);
        }
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v60, 0, 1, v62);
      }
      uint64_t v147 = sub_10017DF08(&qword_100E63748);
      uint64_t v69 = *(int *)(v147 + 48);
      uint64_t v149 = v32;
      uint64_t v70 = &v32[v69];
      uint64_t v71 = &v33[v69];
      uint64_t v72 = type metadata accessor for UUID();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v72 - 8) + 32))(v70, v71, v72);
      uint64_t v73 = (int *)type metadata accessor for PreprocessedWeatherData();
      *(void *)&v70[v73[5]] = *(void *)&v71[v73[5]];
      uint64_t v74 = v73[6];
      uint64_t v154 = v71;
      uint64_t v155 = v70;
      uint64_t v75 = &v70[v74];
      uint64_t v76 = &v71[v74];
      long long v77 = *(_OWORD *)&v71[v74 + 16];
      *(_OWORD *)uint64_t v75 = *(_OWORD *)&v71[v74];
      *((_OWORD *)v75 + 1) = v77;
      *((_OWORD *)v75 + 2) = *(_OWORD *)&v71[v74 + 32];
      uint64_t v78 = type metadata accessor for FeelsLikeComponentPreprocessedDataModel();
      uint64_t v79 = *(int *)(v78 + 28);
      uint64_t v80 = &v75[v79];
      uint64_t v81 = &v76[v79];
      uint64_t v82 = type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference(0);
      uint64_t v151 = v73;
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v81, 1, v82))
      {
        uint64_t v83 = sub_10017DF08(&qword_100E63750);
        memcpy(v80, v81, *(void *)(*(void *)(v83 - 8) + 64));
      }
      else
      {
        *(_OWORD *)uint64_t v80 = *(_OWORD *)v81;
        uint64_t v84 = *(int *)(v82 + 20);
        uint64_t v85 = &v80[v84];
        uint64_t v86 = &v81[v84];
        uint64_t v87 = type metadata accessor for TemperatureScaleConfiguration();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v87 - 8) + 32))(v85, v86, v87);
        uint64_t v88 = (int *)type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
        *(void *)&v85[v88[5]] = *(void *)&v86[v88[5]];
        *(void *)&v85[v88[6]] = *(void *)&v86[v88[6]];
        *(void *)&v85[v88[7]] = *(void *)&v86[v88[7]];
        *(_OWORD *)&v85[v88[8]] = *(_OWORD *)&v86[v88[8]];
        v85[v88[9]] = v86[v88[9]];
        uint64_t v73 = v151;
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v80, 0, 1, v82);
      }
      *(_OWORD *)&v75[*(int *)(v78 + 32)] = *(_OWORD *)&v76[*(int *)(v78 + 32)];
      uint64_t v89 = v73[7];
      uint64_t v90 = &v155[v89];
      uint64_t v91 = &v154[v89];
      *(void *)&v155[v89] = *(void *)&v154[v89];
      uint64_t v92 = *(int *)(type metadata accessor for HourlyForecastComponentPreprocessedDataModel() + 20);
      uint64_t v93 = &v90[v92];
      uint64_t v94 = &v91[v92];
      uint64_t v95 = type metadata accessor for WeatherDescription();
      uint64_t v145 = v95;
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v94, 1, v95))
      {
        uint64_t v96 = sub_10017DF08(&qword_100E63758);
        memcpy(v93, v94, *(void *)(*(void *)(v96 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v95 - 8) + 32))(v93, v94, v95);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v93, 0, 1, v95);
      }
      uint64_t v97 = v73[8];
      uint64_t v98 = &v155[v97];
      uint64_t v99 = &v154[v97];
      long long v100 = *(_OWORD *)&v154[v97 + 16];
      *(_OWORD *)uint64_t v98 = *(_OWORD *)&v154[v97];
      *((_OWORD *)v98 + 1) = v100;
      long long v101 = *(_OWORD *)&v154[v97 + 48];
      *((_OWORD *)v98 + 2) = *(_OWORD *)&v154[v97 + 32];
      *((_OWORD *)v98 + 3) = v101;
      uint64_t v102 = *(int *)(type metadata accessor for ListPreprocessedDataModel() + 32);
      uint64_t v103 = &v98[v102];
      uint64_t v104 = &v99[v102];
      v152(&v98[v102], &v99[v102], v26);
      uint64_t v153 = type metadata accessor for WeatherConditionBackgroundTimeData();
      uint64_t v105 = *(int *)(v153 + 20);
      uint64_t v106 = &v103[v105];
      uint64_t v107 = &v104[v105];
      uint64_t v108 = type metadata accessor for Elevation();
      uint64_t v146 = v108;
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v107, 1, v108))
      {
        uint64_t v109 = sub_10017DF08(&qword_100E63760);
        memcpy(v106, v107, *(void *)(*(void *)(v109 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v108 - 8) + 32))(v106, v107, v108);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v106, 0, 1, v108);
      }
      uint64_t v34 = v148;
      uint64_t v32 = v149;
      uint64_t v110 = *(int *)(v153 + 24);
      uint64_t v111 = &v103[v110];
      uint64_t v112 = &v104[v110];
      uint64_t v113 = type metadata accessor for BackgroundMoonData();
      uint64_t v150 = v113;
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v112, 1, v113))
      {
        uint64_t v114 = sub_10017DF08(&qword_100E63768);
        memcpy(v111, v112, *(void *)(*(void *)(v114 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v113 - 8) + 32))(v111, v112, v113);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v111, 0, 1, v113);
      }
      memcpy(&v155[v73[9]], &v154[v73[9]], 0x70uLL);
      uint64_t v115 = v73[10];
      uint64_t v116 = &v155[v115];
      uint64_t v117 = &v154[v115];
      (*(void (**)(char *, char *))(*(void *)(v145 - 8) + 32))(&v155[v115], &v154[v115]);
      uint64_t v118 = type metadata accessor for UVIndexComponentPreprocessedDataModel();
      *(_OWORD *)&v116[*(int *)(v118 + 20)] = *(_OWORD *)&v117[*(int *)(v118 + 20)];
      uint64_t v119 = v73[11];
      uint64_t v120 = &v155[v119];
      uint64_t v121 = &v154[v119];
      long long v122 = *((_OWORD *)v121 + 1);
      *(_OWORD *)uint64_t v120 = *(_OWORD *)v121;
      *((_OWORD *)v120 + 1) = v122;
      *((_OWORD *)v120 + 2) = *((_OWORD *)v121 + 2);
      uint64_t v123 = v73[12];
      uint64_t v124 = &v155[v123];
      uint64_t v125 = &v154[v123];
      uint64_t v126 = type metadata accessor for PressureTrend();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v126 - 8) + 32))(v124, v125, v126);
      uint64_t v127 = (int *)type metadata accessor for PressureComponentPreprocessedDataModel();
      *(_OWORD *)&v124[v127[5]] = *(_OWORD *)&v125[v127[5]];
      *(_OWORD *)&v124[v127[6]] = *(_OWORD *)&v125[v127[6]];
      *(_OWORD *)&v124[v127[7]] = *(_OWORD *)&v125[v127[7]];
      *(void *)&v124[v127[8]] = *(void *)&v125[v127[8]];
      *(_OWORD *)&v124[v127[9]] = *(_OWORD *)&v125[v127[9]];
      memcpy(&v155[v73[13]], &v154[v73[13]], 0xE8uLL);
      uint64_t v128 = v73[14];
      uint64_t v129 = &v155[v128];
      uint64_t v130 = &v154[v128];
      v152(&v155[v128], &v154[v128], v26);
      uint64_t v131 = *(int *)(v153 + 20);
      uint64_t v132 = &v129[v131];
      uint64_t v133 = &v130[v131];
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v130[v131], 1, v146))
      {
        uint64_t v134 = sub_10017DF08(&qword_100E63760);
        memcpy(v132, v133, *(void *)(*(void *)(v134 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v146 - 8) + 32))(v132, v133, v146);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v132, 0, 1, v146);
      }
      uint64_t v135 = *(int *)(v153 + 24);
      uint64_t v136 = &v129[v135];
      uint64_t v137 = &v130[v135];
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v137, 1, v150))
      {
        uint64_t v138 = sub_10017DF08(&qword_100E63768);
        memcpy(v136, v137, *(void *)(*(void *)(v138 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v150 - 8) + 32))(v136, v137, v150);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v136, 0, 1, v150);
      }
      memcpy(&v155[v151[15]], &v154[v151[15]], 0x70uLL);
      uint64_t v139 = *(int *)(v147 + 64);
      uint64_t v140 = &v32[v139];
      uint64_t v141 = &v33[v139];
      uint64_t v142 = type metadata accessor for NewsDataModel();
      if (swift_getEnumCaseMultiPayload())
      {
        memcpy(v140, v141, *(void *)(*(void *)(v142 - 8) + 64));
      }
      else
      {
        uint64_t v143 = type metadata accessor for News();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v143 - 8) + 32))(v140, v141, v143);
        swift_storeEnumTagMultiPayload();
      }
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(v32, v33, *(void *)(*(void *)(v34 - 8) + 64));
LABEL_58:
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v32, 0, 1, v34);
        return a1;
      }
      uint64_t v37 = type metadata accessor for NewsDataModel();
      if (swift_getEnumCaseMultiPayload())
      {
        memcpy(v32, v33, *(void *)(*(void *)(v37 - 8) + 64));
      }
      else
      {
        uint64_t v44 = type metadata accessor for News();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v44 - 8) + 32))(v32, v33, v44);
        swift_storeEnumTagMultiPayload();
      }
    }
    swift_storeEnumTagMultiPayload();
    goto LABEL_58;
  }
  uint64_t v35 = sub_10017DF08(&qword_100E63770);
  memcpy(v32, v33, *(void *)(*(void *)(v35 - 8) + 64));
  return a1;
}

char *sub_1002422E8(char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Location.Identifier();
  int v7 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a1, 1, v6);
  int v8 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v9 = *(void *)(v6 - 8);
  if (v8)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(a1, v6);
LABEL_6:
    uint64_t active = type metadata accessor for LocationViewerActiveLocationState();
    memcpy(a1, a2, *(void *)(*(void *)(active - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v9 + 40))(a1, a2, v6);
LABEL_7:
  uint64_t v11 = a3[5];
  uint64_t v12 = &a1[v11];
  uint64_t v13 = &a2[v11];
  uint64_t v14 = type metadata accessor for LocationModel();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v15 = a3[7];
  a1[a3[6]] = a2[a3[6]];
  uint64_t v16 = &a1[v15];
  uint64_t v17 = &a2[v15];
  uint64_t v18 = type metadata accessor for CurrentLocation();
  int v19 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v16, 1, v18);
  int v20 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v17, 1, v18);
  if (!v19)
  {
    if (!v20)
    {
      if (a1 == a2) {
        goto LABEL_21;
      }
      sub_1001D1194((uint64_t)v16, (void (*)(void))&type metadata accessor for CurrentLocation);
      if (swift_getEnumCaseMultiPayload() <= 2)
      {
        uint64_t v23 = type metadata accessor for Location();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 32))(v16, v17, v23);
        swift_storeEnumTagMultiPayload();
        goto LABEL_21;
      }
      size_t v21 = *(void *)(*(void *)(v18 - 8) + 64);
LABEL_14:
      memcpy(v16, v17, v21);
      goto LABEL_21;
    }
    sub_1001D1194((uint64_t)v16, (void (*)(void))&type metadata accessor for CurrentLocation);
LABEL_13:
    size_t v21 = *(void *)(*(void *)(sub_10017DF08((uint64_t *)&unk_100EADD50) - 8) + 64);
    goto LABEL_14;
  }
  if (v20) {
    goto LABEL_13;
  }
  if (swift_getEnumCaseMultiPayload() > 2)
  {
    memcpy(v16, v17, *(void *)(*(void *)(v18 - 8) + 64));
  }
  else
  {
    uint64_t v22 = type metadata accessor for Location();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 32))(v16, v17, v22);
    swift_storeEnumTagMultiPayload();
  }
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v16, 0, 1, v18);
LABEL_21:
  uint64_t v24 = (int *)type metadata accessor for LocationsState();
  *(void *)&v16[v24[5]] = *(void *)&v17[v24[5]];
  swift_bridgeObjectRelease();
  *(void *)&v16[v24[6]] = *(void *)&v17[v24[6]];
  swift_bridgeObjectRelease();
  *(void *)&v16[v24[7]] = *(void *)&v17[v24[7]];
  swift_bridgeObjectRelease();
  *(void *)&v16[v24[8]] = *(void *)&v17[v24[8]];
  swift_bridgeObjectRelease();
  *(void *)&v16[v24[9]] = *(void *)&v17[v24[9]];
  swift_bridgeObjectRelease();
  *(void *)&v16[v24[10]] = *(void *)&v17[v24[10]];
  swift_bridgeObjectRelease();
  *(void *)&v16[v24[11]] = *(void *)&v17[v24[11]];
  swift_bridgeObjectRelease();
  uint64_t v25 = v24[12];
  uint64_t v26 = &v16[v25];
  uint64_t v27 = &v17[v25];
  char v28 = v27[16];
  uint64_t v29 = *(void *)v26;
  uint64_t v30 = *((void *)v26 + 1);
  *(_OWORD *)uint64_t v26 = *(_OWORD *)v27;
  unsigned __int8 v31 = v26[16];
  v26[16] = v28;
  sub_10015303C(v29, v30, v31);
  *(void *)&v16[v24[13]] = *(void *)&v17[v24[13]];
  swift_bridgeObjectRelease();
  uint64_t v32 = a3[9];
  a1[a3[8]] = a2[a3[8]];
  a1[v32] = a2[v32];
  uint64_t v33 = a3[10];
  uint64_t v34 = &a1[v33];
  uint64_t v35 = &a2[v33];
  *uint64_t v34 = *v35;
  *((void *)v34 + 1) = *((void *)v35 + 1);
  swift_bridgeObjectRelease();
  uint64_t v36 = a3[11];
  uint64_t v37 = &a1[v36];
  uint64_t v38 = &a2[v36];
  uint64_t v39 = type metadata accessor for Date();
  uint64_t v40 = *(void *)(v39 - 8);
  (*(void (**)(char *, char *, uint64_t))(v40 + 40))(v37, v38, v39);
  uint64_t v41 = a3[13];
  a1[a3[12]] = a2[a3[12]];
  *(void *)&a1[v41] = *(void *)&a2[v41];
  uint64_t v42 = a3[15];
  a1[a3[14]] = a2[a3[14]];
  a1[v42] = a2[v42];
  *(void *)&a1[a3[16]] = *(void *)&a2[a3[16]];
  swift_bridgeObjectRelease();
  uint64_t v43 = a3[18];
  a1[a3[17]] = a2[a3[17]];
  uint64_t v44 = &a1[v43];
  uint64_t v45 = &a2[v43];
  uint64_t v46 = type metadata accessor for LocationWeatherDataState(0);
  int v47 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v44, 1, v46);
  int v48 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v45, 1, v46);
  if (v47)
  {
    if (!v48)
    {
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 1)
      {
        *(_OWORD *)uint64_t v44 = *(_OWORD *)v45;
        uint64_t v54 = (int *)type metadata accessor for WeatherData(0);
        uint64_t v55 = v54[5];
        uint64_t v56 = &v44[v55];
        uint64_t v57 = &v45[v55];
        uint64_t v58 = type metadata accessor for Locale();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v57, 1, v58))
        {
          uint64_t v59 = sub_10017DF08(&qword_100E63730);
          memcpy(v56, v57, *(void *)(*(void *)(v59 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v58 - 8) + 32))(v56, v57, v58);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v56, 0, 1, v58);
        }
        uint64_t v67 = v54[6];
        uint64_t v68 = &v44[v67];
        uint64_t v69 = &v45[v67];
        uint64_t v70 = type metadata accessor for WeatherDataModel();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v70 - 8) + 32))(v68, v69, v70);
        uint64_t v71 = v54[7];
        uint64_t v72 = &v44[v71];
        uint64_t v73 = &v45[v71];
        uint64_t v74 = sub_10017DF08(&qword_100E63738);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v73, 1, v74))
        {
          uint64_t v75 = type metadata accessor for WeatherData.CachingState(0);
          memcpy(v72, v73, *(void *)(*(void *)(v75 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v40 + 32))(v72, v73, v39);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v72, 0, 1, v74);
        }
        uint64_t v76 = v54[8];
        long long v77 = &v44[v76];
        uint64_t v78 = &v45[v76];
        uint64_t v79 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          uint64_t v80 = type metadata accessor for WeatherStatisticsModel();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v80 - 8) + 32))(v77, v78, v80);
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(v77, v78, *(void *)(*(void *)(v79 - 8) + 64));
        }
        uint64_t v81 = v54[9];
        uint64_t v82 = &v44[v81];
        uint64_t v83 = &v45[v81];
        uint64_t v84 = type metadata accessor for WeatherDataOverrides();
        uint64_t v278 = v46;
        uint64_t v281 = v39;
        uint64_t v287 = v40;
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v83, 1, v84))
        {
          uint64_t v85 = sub_10017DF08(&qword_100E63740);
          memcpy(v82, v83, *(void *)(*(void *)(v85 - 8) + 64));
        }
        else
        {
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v83, 1, v39))
          {
            uint64_t v86 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
            memcpy(v82, v83, *(void *)(*(void *)(v86 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v40 + 32))(v82, v83, v39);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v82, 0, 1, v39);
          }
          uint64_t v97 = *(int *)(v84 + 20);
          uint64_t v98 = &v82[v97];
          uint64_t v99 = &v83[v97];
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v99, 1, v39))
          {
            uint64_t v100 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
            memcpy(v98, v99, *(void *)(*(void *)(v100 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v40 + 32))(v98, v99, v39);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v98, 0, 1, v39);
          }
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v82, 0, 1, v84);
        }
        uint64_t v269 = sub_10017DF08(&qword_100E63748);
        uint64_t v111 = *(int *)(v269 + 48);
        uint64_t v112 = &v44[v111];
        uint64_t v113 = &v45[v111];
        uint64_t v114 = type metadata accessor for UUID();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v114 - 8) + 32))(v112, v113, v114);
        uint64_t v115 = type metadata accessor for PreprocessedWeatherData();
        *(void *)&v112[*(int *)(v115 + 20)] = *(void *)&v113[*(int *)(v115 + 20)];
        v283 = (int *)v115;
        uint64_t v285 = v113;
        uint64_t v116 = *(int *)(v115 + 24);
        uint64_t v117 = &v112[v116];
        uint64_t v118 = &v113[v116];
        long long v119 = *((_OWORD *)v118 + 1);
        *(_OWORD *)uint64_t v117 = *(_OWORD *)v118;
        *((_OWORD *)v117 + 1) = v119;
        *((_OWORD *)v117 + 2) = *((_OWORD *)v118 + 2);
        uint64_t v120 = type metadata accessor for FeelsLikeComponentPreprocessedDataModel();
        uint64_t v121 = *(int *)(v120 + 28);
        long long v122 = &v117[v121];
        uint64_t v123 = &v118[v121];
        uint64_t v124 = type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference(0);
        long long v279 = v112;
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v123, 1, v124))
        {
          uint64_t v125 = sub_10017DF08(&qword_100E63750);
          memcpy(v122, v123, *(void *)(*(void *)(v125 - 8) + 64));
        }
        else
        {
          *(_OWORD *)long long v122 = *(_OWORD *)v123;
          uint64_t v126 = *(int *)(v124 + 20);
          uint64_t v127 = &v122[v126];
          uint64_t v128 = &v123[v126];
          uint64_t v129 = type metadata accessor for TemperatureScaleConfiguration();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v129 - 8) + 32))(v127, v128, v129);
          uint64_t v130 = (int *)type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
          *(void *)&v127[v130[5]] = *(void *)&v128[v130[5]];
          *(void *)&v127[v130[6]] = *(void *)&v128[v130[6]];
          *(void *)&v127[v130[7]] = *(void *)&v128[v130[7]];
          *(_OWORD *)&v127[v130[8]] = *(_OWORD *)&v128[v130[8]];
          v127[v130[9]] = v128[v130[9]];
          uint64_t v112 = v279;
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v122, 0, 1, v124);
        }
        *(_OWORD *)&v117[*(int *)(v120 + 32)] = *(_OWORD *)&v118[*(int *)(v120 + 32)];
        uint64_t v131 = v283[7];
        uint64_t v132 = &v112[v131];
        uint64_t v133 = &v285[v131];
        *(void *)&v112[v131] = *(void *)&v285[v131];
        uint64_t v134 = *(int *)(type metadata accessor for HourlyForecastComponentPreprocessedDataModel() + 20);
        uint64_t v135 = &v132[v134];
        uint64_t v136 = &v133[v134];
        uint64_t v137 = type metadata accessor for WeatherDescription();
        uint64_t v271 = v137;
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v136, 1, v137))
        {
          uint64_t v138 = sub_10017DF08(&qword_100E63758);
          memcpy(v135, v136, *(void *)(*(void *)(v138 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v137 - 8) + 32))(v135, v136, v137);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v135, 0, 1, v137);
        }
        uint64_t v139 = v283[8];
        uint64_t v140 = &v112[v139];
        uint64_t v141 = &v285[v139];
        long long v142 = *(_OWORD *)&v285[v139 + 16];
        *(_OWORD *)uint64_t v140 = *(_OWORD *)&v285[v139];
        *((_OWORD *)v140 + 1) = v142;
        long long v143 = *(_OWORD *)&v285[v139 + 48];
        *((_OWORD *)v140 + 2) = *(_OWORD *)&v285[v139 + 32];
        *((_OWORD *)v140 + 3) = v143;
        uint64_t v144 = *(int *)(type metadata accessor for ListPreprocessedDataModel() + 32);
        uint64_t v145 = &v140[v144];
        uint64_t v146 = &v141[v144];
        uint64_t v147 = *(void (**)(char *, char *, uint64_t))(v287 + 32);
        v147(&v140[v144], v146, v281);
        uint64_t v148 = type metadata accessor for WeatherConditionBackgroundTimeData();
        uint64_t v149 = *(int *)(v148 + 20);
        uint64_t v150 = &v145[v149];
        uint64_t v151 = &v146[v149];
        uint64_t v152 = type metadata accessor for Elevation();
        uint64_t v276 = v152;
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v151, 1, v152))
        {
          uint64_t v153 = sub_10017DF08(&qword_100E63760);
          memcpy(v150, v151, *(void *)(*(void *)(v153 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v152 - 8) + 32))(v150, v151, v152);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v150, 0, 1, v152);
        }
        uint64_t v46 = v278;
        uint64_t v154 = *(int *)(v148 + 24);
        uint64_t v155 = &v145[v154];
        uint64_t v156 = &v146[v154];
        uint64_t v157 = type metadata accessor for BackgroundMoonData();
        uint64_t v274 = v157;
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v156, 1, v157))
        {
          uint64_t v158 = sub_10017DF08(&qword_100E63768);
          memcpy(v155, v156, *(void *)(*(void *)(v158 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v157 - 8) + 32))(v155, v156, v157);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v155, 0, 1, v157);
        }
        memcpy(&v279[v283[9]], &v285[v283[9]], 0x70uLL);
        uint64_t v159 = v283[10];
        unint64_t v160 = &v279[v159];
        unint64_t v161 = &v285[v159];
        (*(void (**)(char *, char *))(*(void *)(v271 - 8) + 32))(&v279[v159], &v285[v159]);
        uint64_t v162 = type metadata accessor for UVIndexComponentPreprocessedDataModel();
        *(_OWORD *)&v160[*(int *)(v162 + 20)] = *(_OWORD *)&v161[*(int *)(v162 + 20)];
        uint64_t v163 = v283[11];
        uint64_t v164 = &v279[v163];
        uint64_t v165 = &v285[v163];
        long long v166 = *((_OWORD *)v165 + 1);
        *(_OWORD *)uint64_t v164 = *(_OWORD *)v165;
        *((_OWORD *)v164 + 1) = v166;
        *((_OWORD *)v164 + 2) = *((_OWORD *)v165 + 2);
        uint64_t v167 = v283[12];
        uint64_t v168 = &v279[v167];
        uint64_t v169 = &v285[v167];
        uint64_t v170 = type metadata accessor for PressureTrend();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v170 - 8) + 32))(v168, v169, v170);
        uint64_t v171 = (int *)type metadata accessor for PressureComponentPreprocessedDataModel();
        *(_OWORD *)&v168[v171[5]] = *(_OWORD *)&v169[v171[5]];
        *(_OWORD *)&v168[v171[6]] = *(_OWORD *)&v169[v171[6]];
        *(_OWORD *)&v168[v171[7]] = *(_OWORD *)&v169[v171[7]];
        *(void *)&v168[v171[8]] = *(void *)&v169[v171[8]];
        *(_OWORD *)&v168[v171[9]] = *(_OWORD *)&v169[v171[9]];
        memcpy(&v279[v283[13]], &v285[v283[13]], 0xE8uLL);
        uint64_t v172 = v283[14];
        uint64_t v173 = &v279[v172];
        uint64_t v174 = &v285[v172];
        v147(&v279[v172], &v285[v172], v281);
        uint64_t v175 = *(int *)(v148 + 20);
        uint64_t v176 = &v173[v175];
        uint64_t v177 = &v174[v175];
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v174[v175], 1, v276))
        {
          uint64_t v178 = sub_10017DF08(&qword_100E63760);
          memcpy(v176, v177, *(void *)(*(void *)(v178 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v276 - 8) + 32))(v176, v177, v276);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v176, 0, 1, v276);
        }
        uint64_t v179 = *(int *)(v148 + 24);
        uint64_t v180 = &v173[v179];
        uint64_t v181 = &v174[v179];
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v181, 1, v274))
        {
          uint64_t v182 = sub_10017DF08(&qword_100E63768);
          memcpy(v180, v181, *(void *)(*(void *)(v182 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v274 - 8) + 32))(v180, v181, v274);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v180, 0, 1, v274);
        }
        memcpy(&v279[v283[15]], &v285[v283[15]], 0x70uLL);
        uint64_t v183 = *(int *)(v269 + 64);
        uint64_t v184 = &v44[v183];
        uint64_t v185 = &v45[v183];
        uint64_t v186 = type metadata accessor for NewsDataModel();
        if (swift_getEnumCaseMultiPayload())
        {
          memcpy(v184, v185, *(void *)(*(void *)(v186 - 8) + 64));
        }
        else
        {
          uint64_t v187 = type metadata accessor for News();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v187 - 8) + 32))(v184, v185, v187);
          swift_storeEnumTagMultiPayload();
        }
      }
      else
      {
        if (EnumCaseMultiPayload)
        {
          memcpy(v44, v45, *(void *)(*(void *)(v46 - 8) + 64));
LABEL_92:
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v44, 0, 1, v46);
          return a1;
        }
        uint64_t v50 = type metadata accessor for NewsDataModel();
        if (swift_getEnumCaseMultiPayload())
        {
          memcpy(v44, v45, *(void *)(*(void *)(v50 - 8) + 64));
        }
        else
        {
          uint64_t v60 = type metadata accessor for News();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v60 - 8) + 32))(v44, v45, v60);
          swift_storeEnumTagMultiPayload();
        }
      }
      swift_storeEnumTagMultiPayload();
      goto LABEL_92;
    }
  }
  else
  {
    if (!v48)
    {
      if (a1 == a2) {
        return a1;
      }
      sub_1001D1194((uint64_t)v44, (void (*)(void))type metadata accessor for LocationWeatherDataState);
      int v52 = swift_getEnumCaseMultiPayload();
      if (v52 == 1)
      {
        *(_OWORD *)uint64_t v44 = *(_OWORD *)v45;
        uint64_t v61 = (int *)type metadata accessor for WeatherData(0);
        uint64_t v62 = v61[5];
        uint64_t v63 = &v44[v62];
        uint64_t v64 = &v45[v62];
        uint64_t v65 = type metadata accessor for Locale();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v64, 1, v65))
        {
          uint64_t v66 = sub_10017DF08(&qword_100E63730);
          memcpy(v63, v64, *(void *)(*(void *)(v66 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v65 - 8) + 32))(v63, v64, v65);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v63, 0, 1, v65);
        }
        uint64_t v88 = v61[6];
        uint64_t v89 = &v44[v88];
        uint64_t v90 = &v45[v88];
        uint64_t v91 = type metadata accessor for WeatherDataModel();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v91 - 8) + 32))(v89, v90, v91);
        uint64_t v92 = v61[7];
        uint64_t v93 = &v44[v92];
        uint64_t v94 = &v45[v92];
        uint64_t v95 = sub_10017DF08(&qword_100E63738);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v94, 1, v95))
        {
          uint64_t v96 = type metadata accessor for WeatherData.CachingState(0);
          memcpy(v93, v94, *(void *)(*(void *)(v96 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v40 + 32))(v93, v94, v39);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v93, 0, 1, v95);
        }
        uint64_t v101 = v61[8];
        uint64_t v102 = &v44[v101];
        uint64_t v103 = &v45[v101];
        uint64_t v104 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          uint64_t v105 = type metadata accessor for WeatherStatisticsModel();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v105 - 8) + 32))(v102, v103, v105);
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(v102, v103, *(void *)(*(void *)(v104 - 8) + 64));
        }
        uint64_t v106 = v61[9];
        uint64_t v107 = &v44[v106];
        uint64_t v108 = &v45[v106];
        uint64_t v109 = type metadata accessor for WeatherDataOverrides();
        uint64_t v288 = v40;
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v108, 1, v109))
        {
          uint64_t v110 = sub_10017DF08(&qword_100E63740);
          memcpy(v107, v108, *(void *)(*(void *)(v110 - 8) + 64));
        }
        else
        {
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v108, 1, v39))
          {
            uint64_t v189 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
            memcpy(v107, v108, *(void *)(*(void *)(v189 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v40 + 32))(v107, v108, v39);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v107, 0, 1, v39);
          }
          uint64_t v190 = *(int *)(v109 + 20);
          uint64_t v191 = &v107[v190];
          uint64_t v192 = &v108[v190];
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v192, 1, v39))
          {
            uint64_t v193 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
            memcpy(v191, v192, *(void *)(*(void *)(v193 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v40 + 32))(v191, v192, v39);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v191, 0, 1, v39);
          }
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v107, 0, 1, v109);
        }
        uint64_t v277 = sub_10017DF08(&qword_100E63748);
        uint64_t v194 = *(int *)(v277 + 48);
        uint64_t v195 = &v44[v194];
        uint64_t v196 = &v45[v194];
        uint64_t v197 = type metadata accessor for UUID();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v197 - 8) + 32))(v195, v196, v197);
        uint64_t v198 = type metadata accessor for PreprocessedWeatherData();
        *(void *)&v195[*(int *)(v198 + 20)] = *(void *)&v196[*(int *)(v198 + 20)];
        uint64_t v284 = (int *)v198;
        v286 = v196;
        uint64_t v199 = *(int *)(v198 + 24);
        uint64_t v200 = &v195[v199];
        uint64_t v201 = &v196[v199];
        long long v202 = *((_OWORD *)v201 + 1);
        *(_OWORD *)uint64_t v200 = *(_OWORD *)v201;
        *((_OWORD *)v200 + 1) = v202;
        *((_OWORD *)v200 + 2) = *((_OWORD *)v201 + 2);
        uint64_t v275 = type metadata accessor for FeelsLikeComponentPreprocessedDataModel();
        uint64_t v203 = *(int *)(v275 + 28);
        uint64_t v204 = &v200[v203];
        uint64_t v205 = &v201[v203];
        uint64_t v206 = type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference(0);
        uint64_t v280 = v195;
        uint64_t v282 = v39;
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v205, 1, v206))
        {
          uint64_t v207 = sub_10017DF08(&qword_100E63750);
          memcpy(v204, v205, *(void *)(*(void *)(v207 - 8) + 64));
        }
        else
        {
          *(_OWORD *)uint64_t v204 = *(_OWORD *)v205;
          uint64_t v208 = *(int *)(v206 + 20);
          uint64_t v209 = &v204[v208];
          uint64_t v210 = &v205[v208];
          uint64_t v211 = type metadata accessor for TemperatureScaleConfiguration();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v211 - 8) + 32))(v209, v210, v211);
          uint64_t v212 = (int *)type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
          *(void *)&v209[v212[5]] = *(void *)&v210[v212[5]];
          *(void *)&v209[v212[6]] = *(void *)&v210[v212[6]];
          *(void *)&v209[v212[7]] = *(void *)&v210[v212[7]];
          *(_OWORD *)&v209[v212[8]] = *(_OWORD *)&v210[v212[8]];
          v209[v212[9]] = v210[v212[9]];
          uint64_t v195 = v280;
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v204, 0, 1, v206);
        }
        *(_OWORD *)&v200[*(int *)(v275 + 32)] = *(_OWORD *)&v201[*(int *)(v275 + 32)];
        uint64_t v213 = v284[7];
        uint64_t v214 = &v195[v213];
        uint64_t v215 = &v286[v213];
        *(void *)&v195[v213] = *(void *)&v286[v213];
        uint64_t v216 = *(int *)(type metadata accessor for HourlyForecastComponentPreprocessedDataModel() + 20);
        uint64_t v217 = &v214[v216];
        uint64_t v218 = &v215[v216];
        uint64_t v219 = type metadata accessor for WeatherDescription();
        uint64_t v270 = v219;
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v218, 1, v219))
        {
          uint64_t v220 = sub_10017DF08(&qword_100E63758);
          memcpy(v217, v218, *(void *)(*(void *)(v220 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v219 - 8) + 32))(v217, v218, v219);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v217, 0, 1, v219);
        }
        uint64_t v221 = v284[8];
        uint64_t v222 = &v195[v221];
        uint64_t v223 = &v286[v221];
        long long v224 = *(_OWORD *)&v286[v221 + 16];
        *(_OWORD *)uint64_t v222 = *(_OWORD *)&v286[v221];
        *((_OWORD *)v222 + 1) = v224;
        long long v225 = *(_OWORD *)&v286[v221 + 48];
        *((_OWORD *)v222 + 2) = *(_OWORD *)&v286[v221 + 32];
        *((_OWORD *)v222 + 3) = v225;
        uint64_t v226 = *(int *)(type metadata accessor for ListPreprocessedDataModel() + 32);
        uint64_t v227 = &v222[v226];
        uint64_t v228 = &v223[v226];
        uint64_t v272 = *(void (**)(char *, char *, uint64_t))(v288 + 32);
        v272(&v222[v226], &v223[v226], v282);
        uint64_t v229 = type metadata accessor for WeatherConditionBackgroundTimeData();
        uint64_t v230 = *(int *)(v229 + 20);
        uint64_t v231 = &v227[v230];
        uint64_t v232 = &v228[v230];
        uint64_t v233 = type metadata accessor for Elevation();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v232, 1, v233))
        {
          uint64_t v234 = sub_10017DF08(&qword_100E63760);
          memcpy(v231, v232, *(void *)(*(void *)(v234 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v233 - 8) + 32))(v231, v232, v233);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v231, 0, 1, v233);
        }
        uint64_t v235 = *(int *)(v229 + 24);
        uint64_t v236 = &v227[v235];
        uint64_t v237 = &v228[v235];
        uint64_t v238 = type metadata accessor for BackgroundMoonData();
        uint64_t v273 = v238;
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v237, 1, v238))
        {
          uint64_t v239 = sub_10017DF08(&qword_100E63768);
          memcpy(v236, v237, *(void *)(*(void *)(v239 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v238 - 8) + 32))(v236, v237, v238);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v236, 0, 1, v238);
        }
        memcpy(&v280[v284[9]], &v286[v284[9]], 0x70uLL);
        uint64_t v240 = v284[10];
        uint64_t v241 = &v280[v240];
        uint64_t v242 = &v286[v240];
        (*(void (**)(char *, char *))(*(void *)(v270 - 8) + 32))(&v280[v240], &v286[v240]);
        uint64_t v243 = type metadata accessor for UVIndexComponentPreprocessedDataModel();
        *(_OWORD *)&v241[*(int *)(v243 + 20)] = *(_OWORD *)&v242[*(int *)(v243 + 20)];
        uint64_t v244 = v284[11];
        uint64_t v245 = &v280[v244];
        uint64_t v246 = &v286[v244];
        long long v247 = *((_OWORD *)v246 + 1);
        *(_OWORD *)uint64_t v245 = *(_OWORD *)v246;
        *((_OWORD *)v245 + 1) = v247;
        *((_OWORD *)v245 + 2) = *((_OWORD *)v246 + 2);
        uint64_t v248 = v284[12];
        uint64_t v249 = &v280[v248];
        uint64_t v250 = &v286[v248];
        uint64_t v251 = type metadata accessor for PressureTrend();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v251 - 8) + 32))(v249, v250, v251);
        uint64_t v252 = (int *)type metadata accessor for PressureComponentPreprocessedDataModel();
        *(_OWORD *)&v249[v252[5]] = *(_OWORD *)&v250[v252[5]];
        *(_OWORD *)&v249[v252[6]] = *(_OWORD *)&v250[v252[6]];
        *(_OWORD *)&v249[v252[7]] = *(_OWORD *)&v250[v252[7]];
        *(void *)&v249[v252[8]] = *(void *)&v250[v252[8]];
        *(_OWORD *)&v249[v252[9]] = *(_OWORD *)&v250[v252[9]];
        memcpy(&v280[v284[13]], &v286[v284[13]], 0xE8uLL);
        uint64_t v253 = v284[14];
        uint64_t v254 = &v280[v253];
        uint64_t v255 = &v286[v253];
        v272(&v280[v253], &v286[v253], v282);
        uint64_t v256 = *(int *)(v229 + 20);
        uint64_t v257 = &v254[v256];
        long long v258 = &v255[v256];
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v255[v256], 1, v233))
        {
          uint64_t v259 = sub_10017DF08(&qword_100E63760);
          memcpy(v257, v258, *(void *)(*(void *)(v259 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v233 - 8) + 32))(v257, v258, v233);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v257, 0, 1, v233);
        }
        uint64_t v260 = *(int *)(v229 + 24);
        uint64_t v261 = &v254[v260];
        uint64_t v262 = &v255[v260];
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v262, 1, v273))
        {
          uint64_t v263 = sub_10017DF08(&qword_100E63768);
          memcpy(v261, v262, *(void *)(*(void *)(v263 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v273 - 8) + 32))(v261, v262, v273);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v261, 0, 1, v273);
        }
        memcpy(&v280[v284[15]], &v286[v284[15]], 0x70uLL);
        uint64_t v264 = *(int *)(v277 + 64);
        uint64_t v265 = &v44[v264];
        uint64_t v266 = &v45[v264];
        uint64_t v267 = type metadata accessor for NewsDataModel();
        if (swift_getEnumCaseMultiPayload())
        {
          memcpy(v265, v266, *(void *)(*(void *)(v267 - 8) + 64));
        }
        else
        {
          uint64_t v268 = type metadata accessor for News();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v268 - 8) + 32))(v265, v266, v268);
          swift_storeEnumTagMultiPayload();
        }
      }
      else
      {
        if (v52)
        {
          size_t v51 = *(void *)(*(void *)(v46 - 8) + 64);
          goto LABEL_30;
        }
        uint64_t v53 = type metadata accessor for NewsDataModel();
        if (swift_getEnumCaseMultiPayload())
        {
          memcpy(v44, v45, *(void *)(*(void *)(v53 - 8) + 64));
        }
        else
        {
          uint64_t v87 = type metadata accessor for News();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v87 - 8) + 32))(v44, v45, v87);
          swift_storeEnumTagMultiPayload();
        }
      }
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    sub_1001D1194((uint64_t)v44, (void (*)(void))type metadata accessor for LocationWeatherDataState);
  }
  size_t v51 = *(void *)(*(void *)(sub_10017DF08(&qword_100E63770) - 8) + 64);
LABEL_30:
  memcpy(v44, v45, v51);
  return a1;
}

uint64_t sub_100244244(uint64_t a1, uint64_t a2, int *a3)
{
  type metadata accessor for LocationViewerActiveLocationState();
  sub_100162F30();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1;
LABEL_15:
    return _s7Weather24LocationCompositionStateOwet_0(v9, a2, v8);
  }
  type metadata accessor for LocationModel();
  sub_100162F30();
  if (*(_DWORD *)(v11 + 84) == a2)
  {
    uint64_t v8 = v10;
    uint64_t v12 = a3[5];
LABEL_14:
    uint64_t v9 = a1 + v12;
    goto LABEL_15;
  }
  type metadata accessor for LocationsState();
  sub_100162F30();
  if (*(_DWORD *)(v14 + 84) == a2)
  {
    uint64_t v8 = v13;
    uint64_t v12 = a3[7];
    goto LABEL_14;
  }
  if (a2 != 0x7FFFFFFF)
  {
    type metadata accessor for Date();
    sub_100162F30();
    if (*(_DWORD *)(v18 + 84) == a2)
    {
      uint64_t v8 = v17;
      uint64_t v12 = a3[11];
    }
    else
    {
      uint64_t v8 = sub_10017DF08(&qword_100E63770);
      uint64_t v12 = a3[18];
    }
    goto LABEL_14;
  }
  unint64_t v15 = *(void *)(a1 + a3[10] + 8);
  if (v15 >= 0xFFFFFFFF) {
    LODWORD(v15) = -1;
  }
  return (v15 + 1);
}

void sub_100244368(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  type metadata accessor for LocationViewerActiveLocationState();
  sub_100162F30();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = a1;
  }
  else
  {
    type metadata accessor for LocationModel();
    sub_100162F30();
    if (*(_DWORD *)(v13 + 84) == a3)
    {
      uint64_t v10 = v12;
      uint64_t v14 = a4[5];
    }
    else
    {
      type metadata accessor for LocationsState();
      sub_100162F30();
      if (*(_DWORD *)(v16 + 84) == a3)
      {
        uint64_t v10 = v15;
        uint64_t v14 = a4[7];
      }
      else
      {
        if (a3 == 0x7FFFFFFF)
        {
          *(void *)(a1 + a4[10] + 8) = (a2 - 1);
          return;
        }
        type metadata accessor for Date();
        sub_100162F30();
        if (*(_DWORD *)(v18 + 84) == a3)
        {
          uint64_t v10 = v17;
          uint64_t v14 = a4[11];
        }
        else
        {
          uint64_t v10 = sub_10017DF08(&qword_100E63770);
          uint64_t v14 = a4[18];
        }
      }
    }
    uint64_t v11 = a1 + v14;
  }

  _s7Weather24LocationCompositionStateOwst_0(v11, a2, a2, v10);
}

uint64_t sub_100244488(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ContentStatusBanner();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void *sub_1002444EC(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = (void *)a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (void *)(v14 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v5;
    uint64_t v6 = a2[3];
    *(void *)(a1 + 16) = a2[2];
    *(void *)(a1 + 24) = v6;
    uint64_t v7 = a2[5];
    *(void *)(a1 + 32) = a2[4];
    *(void *)(a1 + 40) = v7;
    uint64_t v8 = a2[7];
    *(void *)(a1 + 48) = a2[6];
    *(void *)(a1 + 56) = v8;
    *(void *)(a1 + 64) = a2[8];
    uint64_t v9 = *(int *)(a3 + 40);
    uint64_t v10 = (char *)a2 + v9;
    uint64_t v11 = (void *)(a1 + v9);
    *(unsigned char *)(a1 + 72) = *((unsigned char *)a2 + 72);
    uint64_t v12 = type metadata accessor for Date();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v10, 1, v12))
    {
      uint64_t v13 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
      memcpy(v11, v10, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v11, v10, v12);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v11, 0, 1, v12);
    }
  }
  return v3;
}

uint64_t sub_10024467C(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 40);
  uint64_t v5 = type metadata accessor for Date();
  uint64_t result = _s7Weather24LocationCompositionStateOwet_0(v4, 1, v5);
  if (!result)
  {
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
    return v7(v4, v5);
  }
  return result;
}

uint64_t sub_100244738(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  uint64_t v7 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v7;
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  uint64_t v8 = *(int *)(a3 + 40);
  uint64_t v9 = (const void *)(a2 + v8);
  uint64_t v10 = (void *)(a1 + v8);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  uint64_t v11 = type metadata accessor for Date();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v11))
  {
    uint64_t v12 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    memcpy(v10, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v11 - 8) + 16))(v10, v9, v11);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v10, 0, 1, v11);
  }
  return a1;
}

uint64_t sub_100244878(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  uint64_t v6 = *(int *)(a3 + 40);
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (const void *)(a2 + v6);
  uint64_t v9 = type metadata accessor for Date();
  int v10 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v7, 1, v9);
  int v11 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v9);
  if (!v10)
  {
    uint64_t v12 = *(void *)(v9 - 8);
    if (!v11)
    {
      (*(void (**)(void *, const void *, uint64_t))(v12 + 24))(v7, v8, v9);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v12 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    uint64_t v13 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    memcpy(v7, v8, *(void *)(*(void *)(v13 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v7, 0, 1, v9);
  return a1;
}

uint64_t sub_100244A78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  long long v5 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v5;
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  uint64_t v6 = *(int *)(a3 + 40);
  uint64_t v7 = (const void *)(a2 + v6);
  uint64_t v8 = (void *)(a1 + v6);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  uint64_t v9 = type metadata accessor for Date();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v7, 1, v9))
  {
    uint64_t v10 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    memcpy(v8, v7, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v9 - 8) + 32))(v8, v7, v9);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v8, 0, 1, v9);
  }
  return a1;
}

uint64_t sub_100244B68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v9;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  uint64_t v10 = *(int *)(a3 + 40);
  int v11 = (void *)(a1 + v10);
  uint64_t v12 = (const void *)(a2 + v10);
  uint64_t v13 = type metadata accessor for Date();
  int v14 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v11, 1, v13);
  int v15 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v12, 1, v13);
  if (!v14)
  {
    uint64_t v16 = *(void *)(v13 - 8);
    if (!v15)
    {
      (*(void (**)(void *, const void *, uint64_t))(v16 + 40))(v11, v12, v13);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v16 + 8))(v11, v13);
    goto LABEL_6;
  }
  if (v15)
  {
LABEL_6:
    uint64_t v17 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    memcpy(v11, v12, *(void *)(*(void *)(v17 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v11, 0, 1, v13);
  return a1;
}

uint64_t sub_100244D20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100244D34);
}

uint64_t sub_100244D34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    uint64_t v9 = a1 + *(int *)(a3 + 40);
    return _s7Weather24LocationCompositionStateOwet_0(v9, a2, v8);
  }
}

uint64_t sub_100244DC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100244DD4);
}

uint64_t sub_100244DD4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    uint64_t v8 = v5 + *(int *)(a4 + 40);
    return _s7Weather24LocationCompositionStateOwst_0(v8, a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for SevereNotificationContent()
{
  uint64_t result = qword_100E638E0;
  if (!qword_100E638E0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100244EA0()
{
  sub_1000159D8();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_100244F50()
{
  sub_10010977C();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v6 = sub_10017DF08(&qword_100E634A0);
  uint64_t v7 = sub_100109308(v6);
  __chkstk_darwin(v7);
  sub_100152344();
  uint64_t v8 = type metadata accessor for Tips.Status();
  sub_100179C0C();
  uint64_t v10 = v9;
  __chkstk_darwin(v11);
  sub_100125FF8();
  sub_10012B520(v5, 1, v8);
  if (v12)
  {
    sub_10019B078();
    sub_100247520(v3, v0);
    sub_1001D1344();
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 32))(v1, v5, v8);
    sub_100247ECC(v1, v3);
  }
  sub_100162714();
}

uint64_t sub_100245054(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a1 + 24))
  {
    sub_100098DB4((_OWORD *)a1, v6);
    sub_100247F4C(v6, a2, a3);
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_100178160(a1, &qword_100EAC3D0);
    sub_1002476A8(v6);
    swift_bridgeObjectRelease();
    return sub_100178160((uint64_t)v6, &qword_100EAC3D0);
  }
}

void sub_1002450E8()
{
  sub_10010977C();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v6 = sub_10017DF08(&qword_100E63760);
  uint64_t v7 = sub_100109308(v6);
  __chkstk_darwin(v7);
  sub_100179CB8();
  uint64_t v8 = type metadata accessor for Elevation();
  sub_100179C0C();
  uint64_t v10 = v9;
  __chkstk_darwin(v11);
  uint64_t v12 = sub_100187074();
  sub_10012B520(v12, v13, v8);
  if (v14)
  {
    sub_1001D1344();
    sub_1002477E0(v0);
    type metadata accessor for Date();
    sub_100162E4C();
    uint64_t v15 = sub_100162728();
    v16(v15);
    sub_10019B078();
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 32))(v1, v5, v8);
    sub_100248094(v1, v3);
    type metadata accessor for Date();
    sub_100162E4C();
    (*(void (**)(uint64_t))(v17 + 8))(v3);
  }
  sub_100162714();
}

void sub_10024523C()
{
  sub_10010977C();
  sub_1001858C8();
  uint64_t v0 = sub_10017DF08(&qword_100E63A50);
  uint64_t v1 = sub_100109308(v0);
  __chkstk_darwin(v1);
  sub_10017C704();
  type metadata accessor for WeatherCondition();
  sub_100179C0C();
  __chkstk_darwin(v2);
  sub_1001A148C();
  if (v3)
  {
    sub_100164EA0();
    sub_100166AB4();
    swift_bridgeObjectRelease();
    sub_100181DE8();
  }
  else
  {
    uint64_t v4 = sub_1001A1C10();
    v5(v4);
    sub_1001888A0();
    swift_bridgeObjectRelease();
  }
  sub_100162714();
}

uint64_t sub_100245378()
{
  sub_10018AF90();
  uint64_t v1 = sub_10017DF08(&qword_100E639D8);
  uint64_t v2 = sub_100109308(v1);
  __chkstk_darwin(v2);
  uint64_t v3 = sub_100152344();
  type metadata accessor for ListLocationViewModel.CacheEntry(v3);
  sub_100162E4C();
  __chkstk_darwin(v4);
  sub_10012B520(v0, 1, v5);
  if (v6)
  {
    sub_100181DE8();
    sub_10017B210();
    swift_bridgeObjectRelease();
    return sub_100164EA0();
  }
  else
  {
    uint64_t v7 = sub_100176C84();
    sub_10019B358(v7, v8, v9, (uint64_t)&unk_100E639E0, (uint64_t)type metadata accessor for ListLocationViewModel.CacheEntry, v10, (uint64_t)type metadata accessor for ListLocationViewModel.CacheEntry, v11, v13, v14);
    return swift_bridgeObjectRelease();
  }
}

void sub_1002454E0()
{
  sub_10010977C();
  sub_1001858C8();
  uint64_t v0 = sub_10017DF08(&qword_100E63A18);
  uint64_t v1 = sub_100109308(v0);
  __chkstk_darwin(v1);
  sub_10017C704();
  type metadata accessor for LocationDisplayContext();
  sub_100179C0C();
  __chkstk_darwin(v2);
  sub_1001A148C();
  if (v3)
  {
    sub_100164EA0();
    sub_100166AB4();
    swift_bridgeObjectRelease();
    sub_100181DE8();
  }
  else
  {
    uint64_t v4 = sub_1001A1C10();
    v5(v4);
    sub_1001888A0();
    swift_bridgeObjectRelease();
  }
  sub_100162714();
}

uint64_t sub_10024561C()
{
  sub_10018AF90();
  uint64_t v1 = sub_10017DF08(&qword_100E63A40);
  uint64_t v2 = sub_100109308(v1);
  __chkstk_darwin(v2);
  uint64_t v3 = sub_100152344();
  type metadata accessor for LocationAvailableDataSetState(v3);
  sub_100162E4C();
  __chkstk_darwin(v4);
  sub_10012B520(v0, 1, v5);
  if (v6)
  {
    sub_100181DE8();
    sub_10017B210();
    swift_bridgeObjectRelease();
    return sub_100164EA0();
  }
  else
  {
    uint64_t v7 = sub_100176C84();
    sub_10019B358(v7, v8, v9, (uint64_t)&unk_100E63A48, (uint64_t)type metadata accessor for LocationAvailableDataSetState, v10, (uint64_t)type metadata accessor for LocationAvailableDataSetState, v11, v13, v14);
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_100245784(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10017DF08(&qword_100E63AB8);
  uint64_t v5 = sub_100109308(v4);
  __chkstk_darwin(v5);
  uint64_t v6 = sub_100179CB8();
  type metadata accessor for SunriseSunsetDaylightCalculator.SunActivity(v6);
  sub_100162E4C();
  __chkstk_darwin(v7);
  sub_10012B520(a1, 1, v8);
  if (v9)
  {
    sub_1001D1344();
    sub_100247D54(a2, &unk_100E63AC0, type metadata accessor for SunriseSunsetDaylightCalculator.SunActivity, type metadata accessor for SunriseSunsetDaylightCalculator.SunActivity);
    type metadata accessor for Date();
    sub_100162E4C();
    uint64_t v10 = sub_100162728();
    v11(v10);
    return sub_10019B078();
  }
  else
  {
    sub_100176C84();
    sub_100248200();
    type metadata accessor for Date();
    sub_100162E4C();
    return (*(uint64_t (**)(uint64_t))(v12 + 8))(a2);
  }
}

uint64_t sub_100245938(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10017DF08(&qword_100E63AC8);
  uint64_t v5 = sub_100109308(v4);
  __chkstk_darwin(v5);
  uint64_t v6 = sub_100179CB8();
  type metadata accessor for MonthSunAverage(v6);
  sub_100162E4C();
  __chkstk_darwin(v7);
  sub_10012B520(a1, 1, v8);
  if (v9)
  {
    sub_1001D1344();
    sub_100247D54(a2, &unk_100E63AD0, type metadata accessor for MonthSunAverage, type metadata accessor for MonthSunAverage);
    type metadata accessor for Date();
    sub_100162E4C();
    uint64_t v10 = sub_100162728();
    v11(v10);
    return sub_10019B078();
  }
  else
  {
    sub_100176C84();
    sub_100248200();
    type metadata accessor for Date();
    sub_100162E4C();
    return (*(uint64_t (**)(uint64_t))(v12 + 8))(a2);
  }
}

uint64_t sub_100245AEC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v22 = a2;
  uint64_t v5 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  uint64_t v6 = sub_100109308(v5);
  __chkstk_darwin(v6);
  sub_100125FF8();
  sub_10017DF08(&qword_100E63938);
  sub_100179C0C();
  __chkstk_darwin(v7);
  sub_100162F18();
  uint64_t v23 = type metadata accessor for SevereNotificationContent();
  sub_100162E4C();
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = a1[3];
  uint64_t v24 = a1;
  sub_1001B1E64(a1, v11);
  sub_1002469C0();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2) {
    return _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v24);
  }
  uint64_t v21 = v3;
  char v30 = 0;
  *(void *)uint64_t v10 = sub_10018C384();
  *((void *)v10 + 1) = v12;
  char v29 = 1;
  *((void *)v10 + 2) = sub_10018C384();
  *((void *)v10 + 3) = v13;
  char v28 = 2;
  *((void *)v10 + 4) = sub_10018C384();
  *((void *)v10 + 5) = v14;
  char v27 = 3;
  *((void *)v10 + 6) = sub_10018C384();
  *((void *)v10 + 7) = v15;
  char v26 = 4;
  v10[72] = KeyedDecodingContainer.decode(_:forKey:)() & 1;
  type metadata accessor for Date();
  char v25 = 7;
  sub_1001CF050(&qword_100E63948, (void (*)(uint64_t))&type metadata accessor for Date);
  uint64_t v16 = v21;
  KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
  sub_100246A0C(v16, (uint64_t)&v10[*(int *)(v23 + 40)]);
  uint64_t v17 = sub_100245EB0();
  uint64_t v18 = sub_100179CA0();
  v19(v18);
  *((void *)v10 + 8) = v17;
  sub_100246A74((uint64_t)v10, v22);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v24);
  return sub_100246AD8((uint64_t)v10);
}

uint64_t sub_100245EB0()
{
  uint64_t v8 = Dictionary.init(dictionaryLiteral:)();
  sub_10017DF08(&qword_100E63938);
  uint64_t v1 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  if (v0) {
    return swift_bridgeObjectRelease();
  }
  if (v2)
  {
    *((void *)&v7 + 1) = &type metadata for String;
    *(void *)&long long v6 = v1;
    *((void *)&v6 + 1) = v2;
  }
  else
  {
    long long v6 = 0u;
    long long v7 = 0u;
  }
  sub_100245054((uint64_t)&v6, 0x6E6F697461636F4CLL, 0xE800000000000000);
  uint64_t v3 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  if (v4)
  {
    *((void *)&v7 + 1) = &type metadata for String;
    *(void *)&long long v6 = v3;
    *((void *)&v6 + 1) = v4;
  }
  else
  {
    long long v6 = 0u;
    long long v7 = 0u;
  }
  sub_100245054((uint64_t)&v6, 0x55736C6961746544, 0xEA00000000004C52);
  return v8;
}

uint64_t sub_100246008(void *a1)
{
  uint64_t v3 = v1;
  sub_10017DF08(&qword_100E63958);
  sub_100179C0C();
  __chkstk_darwin(v5);
  sub_1001B1E64(a1, a1[3]);
  sub_1002469C0();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  LOBYTE(v13[0]) = 0;
  sub_1001A4500();
  if (v2) {
    goto LABEL_12;
  }
  sub_1001A4500();
  sub_1001A4500();
  sub_1001A4500();
  KeyedEncodingContainer.encode(_:forKey:)();
  type metadata accessor for SevereNotificationContent();
  LOBYTE(v13[0]) = 7;
  sub_10017DF08((uint64_t *)&unk_100E73CA0);
  sub_1002492C8();
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  if (!*(void *)(v3 + 64))
  {
LABEL_12:
    uint64_t v6 = sub_1002102E8();
    return v7(v6);
  }
  sub_100A03740();
  if (v12)
  {
    sub_100098DB4(&v11, v13);
    sub_1001643C8((uint64_t)v13, (uint64_t)&v11);
    if (swift_dynamicCast())
    {
      LOBYTE(v11) = 5;
      KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
      _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v13);
      swift_bridgeObjectRelease();
    }
    else
    {
      _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v13);
    }
  }
  else
  {
    sub_100178160((uint64_t)&v11, &qword_100EAC3D0);
  }
  sub_100A03740();
  if (v12)
  {
    sub_100098DB4(&v11, v13);
    sub_1001643C8((uint64_t)v13, (uint64_t)&v11);
    if (swift_dynamicCast())
    {
      LOBYTE(v11) = 6;
      KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
      swift_bridgeObjectRelease();
    }
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v13);
    goto LABEL_12;
  }
  uint64_t v9 = sub_1002102E8();
  v10(v9);
  return sub_100178160((uint64_t)&v11, &qword_100EAC3D0);
}

BOOL static LocationSessionTrigger.__derived_enum_equals(_:_:)(char a1, char a2)
{
  return a1 == a2;
}

void _s7Weather22LocationSessionTriggerO4hash4intoys6HasherVz_tF_0(uint64_t a1, unsigned __int8 a2)
{
}

uint64_t sub_10024638C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x656C746974 && a2 == 0xE500000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x656C746974627573 && a2 == 0xE800000000000000;
    if (v6 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 2036625250 && a2 == 0xE400000000000000;
      if (v7 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 0xD000000000000010 && a2 == 0x8000000100C969C0 {
             || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      }
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else
      {
        BOOL v8 = a1 == 0x6C61636974697263 && a2 == 0xE800000000000000;
        if (v8 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 4;
        }
        else
        {
          BOOL v9 = a1 == 0x6E6F697461636F6CLL && a2 == 0xE800000000000000;
          if (v9 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 5;
          }
          else
          {
            BOOL v10 = a1 == 0x55736C6961746564 && a2 == 0xEA00000000004C52;
            if (v10 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 6;
            }
            else if (a1 == 0x6974617269707865 && a2 == 0xEE00656D69546E6FLL)
            {
              swift_bridgeObjectRelease();
              return 7;
            }
            else
            {
              char v12 = _stringCompareWithSmolCheck(_:_:expecting:)();
              swift_bridgeObjectRelease();
              if (v12) {
                return 7;
              }
              else {
                return 8;
              }
            }
          }
        }
      }
    }
  }
}

uint64_t sub_1002466D8()
{
  return 8;
}

Swift::Int _s7Weather22LocationSessionTriggerO9hashValueSivg_0(unsigned __int8 a1)
{
  return Hasher._finalize()();
}

uint64_t static HeaderLineLimitKey.defaultValue.getter()
{
  return 0;
}

unint64_t sub_100246734(char a1)
{
  unint64_t result = 0x656C746974;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x656C746974627573;
      break;
    case 2:
      unint64_t result = 2036625250;
      break;
    case 3:
      unint64_t result = 0xD000000000000010;
      break;
    case 4:
      unint64_t result = 0x6C61636974697263;
      break;
    case 5:
      unint64_t result = 0x6E6F697461636F6CLL;
      break;
    case 6:
      unint64_t result = 0x55736C6961746564;
      break;
    case 7:
      unint64_t result = 0x6974617269707865;
      break;
    default:
      return result;
  }
  return result;
}

BOOL sub_100246840(char *a1, char *a2)
{
  return static LocationSessionTrigger.__derived_enum_equals(_:_:)(*a1, *a2);
}

Swift::Int sub_10024684C()
{
  return _s7Weather22LocationSessionTriggerO9hashValueSivg_0(*v0);
}

void sub_100246854(uint64_t a1)
{
  _s7Weather22LocationSessionTriggerO4hash4intoys6HasherVz_tF_0(a1, *v1);
}

Swift::Int sub_10024685C()
{
  Swift::UInt v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

unint64_t sub_1002468A0()
{
  return sub_100246734(*v0);
}

uint64_t sub_1002468A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_10024638C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1002468D0()
{
  return static HeaderLineLimitKey.defaultValue.getter();
}

uint64_t sub_1002468F0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1002466D8();
  *a1 = result;
  return result;
}

uint64_t sub_100246918(uint64_t a1)
{
  unint64_t v2 = sub_1002469C0();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100246954(uint64_t a1)
{
  unint64_t v2 = sub_1002469C0();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100246990@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100245AEC(a1, a2);
}

uint64_t sub_1002469A8(void *a1)
{
  return sub_100246008(a1);
}

unint64_t sub_1002469C0()
{
  unint64_t result = qword_100E63940;
  if (!qword_100E63940)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E63940);
  }
  return result;
}

uint64_t sub_100246A0C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100246A74(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SevereNotificationContent();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100246AD8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SevereNotificationContent();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_100246B34()
{
  sub_100162F48();
  type metadata accessor for Date();
  sub_1001CF050((unint64_t *)&qword_100E63978, (void (*)(uint64_t))&type metadata accessor for Date);
  uint64_t v0 = sub_100189CAC();
  return sub_1001848D0(v0, v0, (uint64_t (*)(void))&type metadata accessor for Date, (unint64_t *)&qword_100E63980, v1, (uint64_t)&protocol conformance descriptor for Date);
}

unint64_t sub_100246BE4(double a1)
{
  uint64_t v2 = sub_100249774();

  return sub_100246F5C(v2, a1);
}

unint64_t sub_100246C20(Swift::UInt a1, uint64_t a2, uint64_t a3)
{
  sub_10019D12C();
  Hasher._combine(_:)(a1);
  swift_bridgeObjectRetain();
  sub_100188670();
  swift_bridgeObjectRelease();
  Swift::Int v6 = Hasher._finalize()();

  return sub_100246FF4(a1, a2, a3, v6);
}

uint64_t sub_100246CB0(uint64_t a1)
{
  return sub_100246D08(a1, (void (*)(uint64_t))sub_100235F78, (uint64_t (*)(uint64_t, Swift::Int))sub_1002470C8);
}

uint64_t sub_100246CDC(uint64_t a1)
{
  return sub_100246D08(a1, (void (*)(uint64_t))&UVIndex.ExposureCategory.rawValue.getter, (uint64_t (*)(uint64_t, Swift::Int))sub_10024737C);
}

uint64_t sub_100246D08(uint64_t a1, void (*a2)(uint64_t), uint64_t (*a3)(uint64_t, Swift::Int))
{
  sub_10019D12C();
  a2(a1);
  String.hash(into:)();
  swift_bridgeObjectRelease();
  Swift::Int v5 = Hasher._finalize()();

  return a3(a1, v5);
}

uint64_t sub_100246D9C()
{
  sub_10019D12C();
  String.hash(into:)();
  Swift::Int v0 = Hasher._finalize()();

  return sub_1002474F4(v0);
}

unint64_t sub_100246DFC()
{
  sub_100162F48();
  type metadata accessor for LocationOfInterestType();
  sub_1001CF050(&qword_100E63510, (void (*)(uint64_t))&type metadata accessor for LocationOfInterestType);
  uint64_t v0 = sub_100189CAC();
  return sub_1001848D0(v0, v0, (uint64_t (*)(void))&type metadata accessor for LocationOfInterestType, &qword_100E63530, v1, (uint64_t)&protocol conformance descriptor for LocationOfInterestType);
}

unint64_t sub_100246EAC()
{
  sub_100162F48();
  type metadata accessor for DetailChartCondition();
  sub_1001CF050(&qword_100E63988, (void (*)(uint64_t))&type metadata accessor for DetailChartCondition);
  uint64_t v0 = sub_100189CAC();
  return sub_1001848D0(v0, v0, (uint64_t (*)(void))&type metadata accessor for DetailChartCondition, (unint64_t *)&qword_100E63990, v1, (uint64_t)&protocol conformance descriptor for DetailChartCondition);
}

unint64_t sub_100246F5C(uint64_t a1, double a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a1 & ~v4;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v6 = *(void *)(v2 + 48);
    if (*(double *)(v6 + 8 * result) != a2)
    {
      uint64_t v7 = ~v4;
      for (unint64_t result = (result + 1) & v7;
            ((*(void *)(v3 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v7)
      {
        if (*(double *)(v6 + 8 * result) == a2) {
          break;
        }
      }
    }
  }
  return result;
}

unint64_t sub_100246FF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4 + 64;
  uint64_t v6 = -1 << *(unsigned char *)(v4 + 32);
  unint64_t v7 = a4 & ~v6;
  if ((*(void *)(v4 + 64 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7))
  {
    uint64_t v11 = ~v6;
    uint64_t v12 = *(void *)(v4 + 48);
    do
    {
      uint64_t v13 = (void *)(v12 + 24 * v7);
      if (*v13 == a1)
      {
        BOOL v14 = v13[1] == a2 && v13[2] == a3;
        if (v14 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
          break;
        }
      }
      unint64_t v7 = (v7 + 1) & v11;
    }
    while (((*(void *)(v5 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) != 0);
  }
  return v7;
}

unint64_t sub_1002470C8(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v5 = ~v3;
    uint64_t v6 = a1;
    while (1)
    {
      unint64_t v7 = 0x8000000100C94F50;
      uint64_t v8 = 0xD000000000000013;
      switch(*(unsigned char *)(*(void *)(v2 + 48) + v4))
      {
        case 1:
          BOOL v9 = "homeAndWorkAddedTip";
          goto LABEL_12;
        case 2:
          unsigned int v10 = 1701670760;
          goto LABEL_7;
        case 3:
          unsigned int v10 = 1802661751;
LABEL_7:
          uint64_t v8 = v10 | 0x6164705500000000;
          unint64_t v7 = 0xEE00706954646574;
          break;
        case 4:
          uint64_t v8 = 0xD000000000000019;
          uint64_t v11 = "dTip";
          goto LABEL_10;
        case 5:
          uint64_t v8 = 0xD000000000000022;
          uint64_t v11 = "notificationsOptInListTip";
LABEL_10:
          unint64_t v7 = (unint64_t)v11 | 0x8000000000000000;
          break;
        case 6:
          BOOL v9 = "ubscriptionListTip";
LABEL_12:
          unint64_t v7 = (unint64_t)v9 | 0x8000000000000000;
          uint64_t v8 = 0xD000000000000015;
          break;
        default:
          break;
      }
      unint64_t v12 = 0x8000000100C94F50;
      uint64_t v13 = 0xD000000000000013;
      switch(v6)
      {
        case 1:
          BOOL v14 = "homeAndWorkAddedTip";
          goto LABEL_22;
        case 2:
          unsigned int v15 = 1701670760;
          goto LABEL_17;
        case 3:
          unsigned int v15 = 1802661751;
LABEL_17:
          uint64_t v13 = v15 | 0x6164705500000000;
          unint64_t v12 = 0xEE00706954646574;
          break;
        case 4:
          uint64_t v13 = 0xD000000000000019;
          uint64_t v16 = "dTip";
          goto LABEL_20;
        case 5:
          uint64_t v13 = 0xD000000000000022;
          uint64_t v16 = "notificationsOptInListTip";
LABEL_20:
          unint64_t v12 = (unint64_t)v16 | 0x8000000000000000;
          break;
        case 6:
          BOOL v14 = "ubscriptionListTip";
LABEL_22:
          unint64_t v12 = (unint64_t)v14 | 0x8000000000000000;
          uint64_t v13 = 0xD000000000000015;
          break;
        default:
          break;
      }
      if (v8 == v13 && v7 == v12) {
        break;
      }
      char v18 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v18 & 1) == 0)
      {
        unint64_t v4 = (v4 + 1) & v5;
        if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4)) {
          continue;
        }
      }
      return v4;
    }
    swift_bridgeObjectRelease_n();
  }
  return v4;
}

unint64_t sub_10024737C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v5 = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
  {
    uint64_t v6 = UVIndex.ExposureCategory.rawValue.getter();
    uint64_t v8 = v7;
    if (v6 == UVIndex.ExposureCategory.rawValue.getter() && v8 == v9)
    {
LABEL_16:
      swift_bridgeObjectRelease_n();
      return v5;
    }
    char v11 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
    {
      uint64_t v12 = ~v4;
      unint64_t v5 = (v5 + 1) & v12;
      if ((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
      {
        while (1)
        {
          uint64_t v13 = UVIndex.ExposureCategory.rawValue.getter();
          uint64_t v15 = v14;
          if (v13 == UVIndex.ExposureCategory.rawValue.getter() && v15 == v16) {
            break;
          }
          char v18 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v18 & 1) == 0)
          {
            unint64_t v5 = (v5 + 1) & v12;
            if ((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5)) {
              continue;
            }
          }
          return v5;
        }
        goto LABEL_16;
      }
    }
  }
  return v5;
}

uint64_t sub_1002474F4(uint64_t a1)
{
  return a1 & ~(-1 << *(unsigned char *)(v1 + 32));
}

uint64_t sub_100247520@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  swift_bridgeObjectRetain();
  uint64_t v6 = sub_100246D08(a1, (void (*)(uint64_t))sub_100235F78, (uint64_t (*)(uint64_t, Swift::Int))sub_1002470C8);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if (a1)
  {
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v17 = *v3;
    uint64_t v9 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    Swift::Int v10 = *(void *)(v9 + 24);
    sub_10017DF08(&qword_100E63A68);
    _NativeDictionary.ensureUnique(isUnique:capacity:)(isUniquelyReferenced_nonNull_native, v10);
    uint64_t v11 = *(void *)(v17 + 56);
    uint64_t v12 = type metadata accessor for Tips.Status();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 32))(a2, v11 + *(void *)(*(void *)(v12 - 8) + 72) * v6, v12);
    sub_10023A808();
    _NativeDictionary._delete(at:)();
    *uint64_t v3 = v17;
    swift_bridgeObjectRelease();
    uint64_t v13 = a2;
    uint64_t v14 = 0;
    uint64_t v15 = v12;
  }
  else
  {
    uint64_t v15 = type metadata accessor for Tips.Status();
    uint64_t v13 = a2;
    uint64_t v14 = 1;
  }

  return _s7Weather24LocationCompositionStateOwst_0(v13, v14, 1, v15);
}

double sub_1002476A8@<D0>(_OWORD *a1@<X8>)
{
  uint64_t v2 = v1;
  swift_bridgeObjectRetain();
  unint64_t v4 = sub_1001D23B8();
  char v6 = v5;
  swift_bridgeObjectRelease();
  if (v6)
  {
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v11 = *v2;
    uint64_t v8 = *v2;
    *uint64_t v2 = 0x8000000000000000;
    Swift::Int v9 = *(void *)(v8 + 24);
    sub_10017DF08(&qword_100E63950);
    _NativeDictionary.ensureUnique(isUnique:capacity:)(isUniquelyReferenced_nonNull_native, v9);
    swift_bridgeObjectRelease();
    sub_100098DB4((_OWORD *)(*(void *)(v11 + 56) + 32 * v4), a1);
    _NativeDictionary._delete(at:)();
    *uint64_t v2 = v11;
    swift_bridgeObjectRelease();
  }
  else
  {
    double result = 0.0;
    *a1 = 0u;
    a1[1] = 0u;
  }
  return result;
}

uint64_t sub_1002477E0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  swift_bridgeObjectRetain();
  unint64_t v4 = sub_100246B34();
  char v6 = v5;
  swift_bridgeObjectRelease();
  if (v6)
  {
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v18 = *v2;
    uint64_t v8 = *v2;
    *uint64_t v2 = 0x8000000000000000;
    Swift::Int v9 = *(void *)(v8 + 24);
    sub_10017DF08(&qword_100E63AB0);
    _NativeDictionary.ensureUnique(isUnique:capacity:)(isUniquelyReferenced_nonNull_native, v9);
    uint64_t v10 = *(void *)(v18 + 48);
    uint64_t v11 = type metadata accessor for Date();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10 + *(void *)(*(void *)(v11 - 8) + 72) * v4, v11);
    uint64_t v12 = *(void *)(v18 + 56);
    uint64_t v13 = type metadata accessor for Elevation();
    (*(void (**)(uint64_t, unint64_t, uint64_t))(*(void *)(v13 - 8) + 32))(a1, v12 + *(void *)(*(void *)(v13 - 8) + 72) * v4, v13);
    sub_1001CF050((unint64_t *)&qword_100E63978, (void (*)(uint64_t))&type metadata accessor for Date);
    _NativeDictionary._delete(at:)();
    *uint64_t v2 = v18;
    swift_bridgeObjectRelease();
    uint64_t v14 = a1;
    uint64_t v15 = 0;
    uint64_t v16 = v13;
  }
  else
  {
    uint64_t v16 = type metadata accessor for Elevation();
    uint64_t v14 = a1;
    uint64_t v15 = 1;
  }

  return _s7Weather24LocationCompositionStateOwst_0(v14, v15, 1, v16);
}

double sub_1002479B8@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_100098FD0(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if (a1)
  {
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v12 = *v3;
    uint64_t v9 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    Swift::Int v10 = *(void *)(v9 + 24);
    sub_10017DF08(&qword_100E63A88);
    _NativeDictionary.ensureUnique(isUnique:capacity:)(isUniquelyReferenced_nonNull_native, v10);
    sub_100098DC4(*(void *)(v12 + 48) + 40 * v6);
    sub_100098DB4((_OWORD *)(*(void *)(v12 + 56) + 32 * v6), a2);
    _NativeDictionary._delete(at:)();
    *uint64_t v3 = v12;
    swift_bridgeObjectRelease();
  }
  else
  {
    double result = 0.0;
    *a2 = 0u;
    a2[1] = 0u;
  }
  return result;
}

#error "100247B58: call analysis failed (funcsize=71)"

uint64_t sub_100247C04()
{
  sub_10019DDD4();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  swift_bridgeObjectRetain();
  sub_1001D23B8();
  char v5 = v4;
  swift_bridgeObjectRelease();
  if (v5)
  {
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_1001D14EC();
    Swift::Int v8 = *(void *)(v7 + 24);
    sub_10017DF08(v3);
    _NativeDictionary.ensureUnique(isUnique:capacity:)(isUniquelyReferenced_nonNull_native, v8);
    swift_bridgeObjectRelease();
    v1(0);
    sub_100162E4C();
    sub_1001190D4();
    v9();
    _NativeDictionary._delete(at:)();
    sub_10012B538();
  }
  else
  {
    v1(0);
    sub_100162E38();
  }
  sub_1001910D8();
  return _s7Weather24LocationCompositionStateOwst_0(v10, v11, v12, v13);
}

#error "100247DBC: call analysis failed (funcsize=93)"

uint64_t sub_100247ECC(uint64_t a1, uint64_t a2)
{
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v7 = *v2;
  *uint64_t v2 = 0x8000000000000000;
  sub_10024829C(a1, a2, isUniquelyReferenced_nonNull_native);
  *uint64_t v2 = v7;

  return swift_bridgeObjectRelease();
}

uint64_t sub_100247F4C(_OWORD *a1, uint64_t a2, uint64_t a3)
{
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v9 = *v3;
  *uint64_t v3 = 0x8000000000000000;
  sub_100248440(a1, a2, a3, isUniquelyReferenced_nonNull_native);
  *uint64_t v3 = v9;

  return swift_bridgeObjectRelease();
}

#error "100248000: call analysis failed (funcsize=19)"

uint64_t sub_100248028(double a1)
{
  swift_isUniquelyReferenced_nonNull_native();
  uint64_t v2 = sub_100182E74();
  unint64_t v5 = sub_100248884(v2, v3, v4, a1);
  sub_10018A81C(v5, v6, v7, v8, v9, v10, v11, v12, v14, v15);

  return swift_bridgeObjectRelease();
}

uint64_t sub_100248094(uint64_t a1, uint64_t a2)
{
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v7 = *v2;
  *uint64_t v2 = 0x8000000000000000;
  sub_1002489A8(a1, a2, isUniquelyReferenced_nonNull_native);
  *uint64_t v2 = v7;

  return swift_bridgeObjectRelease();
}

uint64_t sub_100248114(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  return sub_1001BA348(a1, a2, a3, (uint64_t)sub_100248B98, a5, a6, a7, a8, a9, a10);
}

#error "100248150: call analysis failed (funcsize=19)"

#error "1002481D8: call analysis failed (funcsize=34)"

uint64_t sub_100248200()
{
  sub_10019DDD4();
  uint64_t v2 = v1;
  char v4 = v3;
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v12 = *v0;
  uint64_t *v0 = 0x8000000000000000;
  sub_100249034(v8, v6, isUniquelyReferenced_nonNull_native, v4, v2);
  uint64_t *v0 = v12;
  sub_1001910D8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_10024829C(uint64_t a1, uint64_t a2, char a3)
{
  char v4 = (void **)v3;
  uint64_t v8 = (void *)*v3;
  uint64_t v9 = sub_100246D08(a2, (void (*)(uint64_t))sub_100235F78, (uint64_t (*)(uint64_t, Swift::Int))sub_1002470C8);
  uint64_t v11 = v8[2];
  BOOL v12 = (v10 & 1) == 0;
  Swift::Int v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_13;
  }
  unint64_t v14 = v9;
  char v15 = v10;
  sub_10017DF08(&qword_100E63A68);
  if (!_NativeDictionary.ensureUnique(isUnique:capacity:)(a3 & 1, v13)) {
    goto LABEL_5;
  }
  uint64_t v16 = sub_100246D08(a2, (void (*)(uint64_t))sub_100235F78, (uint64_t (*)(uint64_t, Swift::Int))sub_1002470C8);
  if ((v15 & 1) != (v17 & 1))
  {
LABEL_13:
    uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return result;
  }
  unint64_t v14 = v16;
LABEL_5:
  uint64_t v18 = *v4;
  if (v15)
  {
    uint64_t v19 = v18[7];
    uint64_t v20 = type metadata accessor for Tips.Status();
    uint64_t v21 = *(void *)(v20 - 8);
    uint64_t v22 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v21 + 40);
    uint64_t v23 = v20;
    uint64_t v24 = v19 + *(void *)(v21 + 72) * v14;
    return v22(v24, a1, v23);
  }
  else
  {
    return sub_1002491B0(v14, a2, a1, v18);
  }
}

_OWORD *sub_100248440(_OWORD *a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = (void **)v4;
  char v10 = (void *)*v4;
  unint64_t v11 = sub_1001D23B8();
  uint64_t v13 = v10[2];
  BOOL v14 = (v12 & 1) == 0;
  Swift::Int v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_13;
  }
  unint64_t v16 = v11;
  char v17 = v12;
  sub_10017DF08(&qword_100E63950);
  if (!_NativeDictionary.ensureUnique(isUnique:capacity:)(a4 & 1, v15)) {
    goto LABEL_5;
  }
  unint64_t v18 = sub_1001D23B8();
  if ((v17 & 1) != (v19 & 1))
  {
LABEL_13:
    uint64_t result = (_OWORD *)KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return result;
  }
  unint64_t v16 = v18;
LABEL_5:
  uint64_t v20 = *v5;
  if (v17)
  {
    uint64_t v21 = (_OWORD *)(v20[7] + 32 * v16);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v21);
    return sub_100098DB4(a1, v21);
  }
  else
  {
    sub_10024925C(v16, a2, a3, a1, v20);
    return (_OWORD *)swift_bridgeObjectRetain();
  }
}

void sub_100248580(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v5 = v3;
  uint64_t v9 = type metadata accessor for Date();
  sub_100179C0C();
  uint64_t v11 = v10;
  __chkstk_darwin(v12);
  sub_100125FF8();
  Swift::Int v13 = *v3;
  sub_100246B34();
  sub_1001A03C0();
  if (v16)
  {
    __break(1u);
    goto LABEL_9;
  }
  unint64_t v17 = v14;
  char v18 = v15;
  sub_10017DF08(&qword_100E63AD8);
  if (!_NativeDictionary.ensureUnique(isUnique:capacity:)(a3 & 1, v13)) {
    goto LABEL_5;
  }
  unint64_t v19 = sub_100246B34();
  if ((v18 & 1) != (v20 & 1))
  {
LABEL_9:
    KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return;
  }
  unint64_t v17 = v19;
LABEL_5:
  uint64_t v21 = *v5;
  if (v18)
  {
    uint64_t v22 = *(void *)(v21 + 56);
    swift_bridgeObjectRelease();
    *(void *)(v22 + 8 * v17) = a1;
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v4, a2, v9);
    sub_1002150BC(v17, v4, a1, v21);
  }
}

uint64_t sub_1002486E0(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = (void **)v4;
  uint64_t v28 = a2;
  uint64_t v9 = type metadata accessor for Date();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  Swift::Int v13 = (void *)*v4;
  unint64_t v14 = sub_100246B34();
  uint64_t v16 = v13[2];
  BOOL v17 = (v15 & 1) == 0;
  Swift::Int v18 = v16 + v17;
  if (__OFADD__(v16, v17))
  {
    __break(1u);
    goto LABEL_10;
  }
  unint64_t v19 = v14;
  char v20 = v15;
  sub_10017DF08(&qword_100E63AA0);
  if (!_NativeDictionary.ensureUnique(isUnique:capacity:)(a4 & 1, v18)) {
    goto LABEL_5;
  }
  unint64_t v21 = sub_100246B34();
  if ((v20 & 1) != (v22 & 1))
  {
LABEL_10:
    uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return result;
  }
  unint64_t v19 = v21;
LABEL_5:
  uint64_t v23 = *v5;
  if (v20)
  {
    uint64_t v24 = (uint64_t *)(v23[7] + 16 * v19);
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v26 = v28;
    *uint64_t v24 = a1;
    v24[1] = v26;
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a3, v9);
    return sub_10024936C(v19, (uint64_t)v12, a1, v28, v23);
  }
  return result;
}

unint64_t sub_100248884(uint64_t a1, uint64_t a2, char a3, double a4)
{
  uint64_t v5 = (void **)v4;
  uint64_t v10 = (void *)*v4;
  unint64_t v11 = sub_100246BE4(a4);
  uint64_t v13 = v10[2];
  BOOL v14 = (v12 & 1) == 0;
  Swift::Int v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_11;
  }
  unint64_t v16 = v11;
  char v17 = v12;
  sub_10017DF08(&qword_100E63AA8);
  if (!_NativeDictionary.ensureUnique(isUnique:capacity:)(a3 & 1, v15)) {
    goto LABEL_5;
  }
  unint64_t v18 = sub_100246BE4(a4);
  if ((v17 & 1) != (v19 & 1))
  {
LABEL_11:
    unint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return result;
  }
  unint64_t v16 = v18;
LABEL_5:
  char v20 = *v5;
  if (v17)
  {
    unint64_t v21 = (uint64_t *)(v20[7] + 16 * v16);
    unint64_t result = swift_bridgeObjectRelease();
    uint64_t *v21 = a1;
    v21[1] = a2;
  }
  else
  {
    return sub_10024942C(v16, a1, a2, v20, a4);
  }
  return result;
}

uint64_t sub_1002489A8(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v8 = type metadata accessor for Date();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  unint64_t v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v12 = (void *)*v3;
  unint64_t v13 = sub_100246B34();
  uint64_t v15 = v12[2];
  BOOL v16 = (v14 & 1) == 0;
  Swift::Int v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_11;
  }
  unint64_t v18 = v13;
  char v19 = v14;
  sub_10017DF08(&qword_100E63AB0);
  if (!_NativeDictionary.ensureUnique(isUnique:capacity:)(a3 & 1, v17)) {
    goto LABEL_5;
  }
  unint64_t v20 = sub_100246B34();
  if ((v19 & 1) != (v21 & 1))
  {
LABEL_11:
    uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return result;
  }
  unint64_t v18 = v20;
LABEL_5:
  char v22 = *v4;
  if (v19)
  {
    uint64_t v23 = v22[7];
    uint64_t v24 = type metadata accessor for Elevation();
    uint64_t v25 = *(void *)(v24 - 8);
    uint64_t v26 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v25 + 40);
    uint64_t v27 = v24;
    uint64_t v28 = v23 + *(void *)(v25 + 72) * v18;
    return v26(v28, a1, v27);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
    return sub_100249474(v18, (uint64_t)v11, a1, v22);
  }
}

uint64_t sub_100248B98(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = (void **)v4;
  uint64_t v10 = (void *)*v4;
  unint64_t v11 = sub_1001D23B8();
  uint64_t v13 = v10[2];
  BOOL v14 = (v12 & 1) == 0;
  Swift::Int v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_11;
  }
  unint64_t v16 = v11;
  char v17 = v12;
  sub_10017DF08(&qword_100E63A60);
  uint64_t result = _NativeDictionary.ensureUnique(isUnique:capacity:)(a4 & 1, v15);
  if ((result & 1) == 0) {
    goto LABEL_5;
  }
  uint64_t result = sub_1001D23B8();
  if ((v17 & 1) != (v19 & 1))
  {
LABEL_11:
    uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return result;
  }
  unint64_t v16 = result;
LABEL_5:
  unint64_t v20 = *v5;
  if (v17)
  {
    *(void *)(v20[7] + 8 * v16) = a1;
  }
  else
  {
    sub_1001BA4EC(v16, a2, a3, a1, v20);
    return swift_bridgeObjectRetain();
  }
  return result;
}

void sub_100248CB8()
{
  sub_10010977C();
  uint64_t v1 = v0;
  char v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  Swift::Int v8 = *v0;
  sub_100246D9C();
  sub_1001A03C0();
  if (v11)
  {
    __break(1u);
    goto LABEL_11;
  }
  uint64_t v12 = v9;
  char v13 = v10;
  sub_10017DF08(&qword_100E63998);
  if (!_NativeDictionary.ensureUnique(isUnique:capacity:)(v3 & 1, v8)) {
    goto LABEL_5;
  }
  uint64_t v14 = sub_100246D9C();
  if ((v13 & 1) != (v15 & 1))
  {
LABEL_11:
    KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return;
  }
  uint64_t v12 = v14;
LABEL_5:
  if (v13)
  {
    unint64_t v16 = (void *)(*(void *)(*v1 + 56) + 16 * v12);
    swift_bridgeObjectRelease();
    void *v16 = v7;
    v16[1] = v5;
    sub_100162714();
  }
  else
  {
    sub_100162714();
    sub_100249568(v17, v18, v19, v20);
  }
}

void sub_100248DAC()
{
  sub_10010977C();
  char v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v9 = sub_100178F74(v8, v6);
  sub_1001EB73C(v9, v10);
  sub_1001A03C0();
  if (v13)
  {
    __break(1u);
    goto LABEL_11;
  }
  unint64_t v14 = v11;
  char v15 = v12;
  sub_10017DF08(&qword_100E63A00);
  if (!_NativeDictionary.ensureUnique(isUnique:capacity:)(v3 & 1, (Swift::Int)v1)) {
    goto LABEL_5;
  }
  uint64_t v16 = sub_10017B204();
  unint64_t v18 = sub_1001EB73C(v16, v17);
  if ((v15 & 1) != (v19 & 1))
  {
LABEL_11:
    KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return;
  }
  unint64_t v14 = v18;
LABEL_5:
  if (v15)
  {
    uint64_t v20 = type metadata accessor for ContentStatusBanner();
    sub_100109308(v20);
    sub_1001DFA9C();
    sub_100162714();
  }
  else
  {
    sub_1002495A8(v14, v7, v5, v0, *v1);
    sub_10017B204();
    sub_100162714();
    sub_1000D54E0(v21, v22);
  }
}

uint64_t sub_100248ED8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  uint64_t v8 = (void **)v7;
  char v15 = (void *)*v7;
  unint64_t v16 = sub_1001D23B8();
  uint64_t v18 = v15[2];
  BOOL v19 = (v17 & 1) == 0;
  Swift::Int v20 = v18 + v19;
  if (__OFADD__(v18, v19))
  {
    __break(1u);
    goto LABEL_11;
  }
  unint64_t v21 = v16;
  char v22 = v17;
  sub_10017DF08(&qword_100E639D0);
  uint64_t result = _NativeDictionary.ensureUnique(isUnique:capacity:)(a7 & 1, v20);
  if ((result & 1) == 0) {
    goto LABEL_5;
  }
  uint64_t result = sub_1001D23B8();
  if ((v22 & 1) != (v24 & 1))
  {
LABEL_11:
    uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return result;
  }
  unint64_t v21 = result;
LABEL_5:
  uint64_t v25 = *v8;
  if (v22)
  {
    uint64_t v26 = (uint64_t *)(v25[7] + 32 * v21);
    uint64_t *v26 = a1;
    v26[1] = a2;
    v26[2] = a3;
    v26[3] = a4;
  }
  else
  {
    sub_100249614(v21, a5, a6, a1, a2, a3, a4, v25);
    return swift_bridgeObjectRetain();
  }
  return result;
}

void sub_100249034(uint64_t a1, uint64_t a2, char a3, uint64_t *a4, void (*a5)(void))
{
  uint64_t v10 = type metadata accessor for Date();
  sub_100179C0C();
  uint64_t v12 = v11;
  __chkstk_darwin(v13);
  sub_100162F18();
  Swift::Int v14 = *v5;
  sub_100246B34();
  sub_1001A03C0();
  if (v16)
  {
    __break(1u);
LABEL_8:
    KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return;
  }
  char v17 = v15;
  sub_10017DF08(a4);
  if (_NativeDictionary.ensureUnique(isUnique:capacity:)(a3 & 1, v14))
  {
    sub_100246B34();
    if ((v17 & 1) != (v18 & 1)) {
      goto LABEL_8;
    }
  }
  if (v17)
  {
    a5(0);
    sub_1001DFA9C();
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v6, a2, v10);
    sub_100249664();
  }
}

uint64_t sub_1002491B0(unint64_t a1, char a2, uint64_t a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(unsigned char *)(a4[6] + a1) = a2;
  uint64_t v7 = a4[7];
  uint64_t v8 = type metadata accessor for Tips.Status();
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(v7 + *(void *)(*(void *)(v8 - 8) + 72) * a1, a3, v8);
  uint64_t v10 = a4[2];
  BOOL v11 = __OFADD__(v10, 1);
  uint64_t v12 = v10 + 1;
  if (v11) {
    __break(1u);
  }
  else {
    a4[2] = v12;
  }
  return result;
}

_OWORD *sub_10024925C(unint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4, void *a5)
{
  a5[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v6 = (void *)(a5[6] + 16 * a1);
  *uint64_t v6 = a2;
  v6[1] = a3;
  uint64_t result = sub_100098DB4(a4, (_OWORD *)(a5[7] + 32 * a1));
  uint64_t v8 = a5[2];
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a5[2] = v10;
  }
  return result;
}

unint64_t sub_1002492C8()
{
  unint64_t result = qword_100E63960;
  if (!qword_100E63960)
  {
    sub_10018C6DC((uint64_t *)&unk_100E73CA0);
    sub_1001CF050(&qword_100E63968, (void (*)(uint64_t))&type metadata accessor for Date);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E63960);
  }
  return result;
}

uint64_t sub_10024936C(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  a5[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v10 = a5[6];
  uint64_t v11 = type metadata accessor for Date();
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32))(v10 + *(void *)(*(void *)(v11 - 8) + 72) * a1, a2, v11);
  uint64_t v13 = (void *)(a5[7] + 16 * a1);
  *uint64_t v13 = a3;
  v13[1] = a4;
  uint64_t v14 = a5[2];
  BOOL v15 = __OFADD__(v14, 1);
  uint64_t v16 = v14 + 1;
  if (v15) {
    __break(1u);
  }
  else {
    a5[2] = v16;
  }
  return result;
}

unint64_t sub_10024942C(unint64_t result, uint64_t a2, uint64_t a3, void *a4, double a5)
{
  a4[(result >> 6) + 8] |= 1 << result;
  *(double *)(a4[6] + 8 * result) = a5;
  uint64_t v5 = (void *)(a4[7] + 16 * result);
  *uint64_t v5 = a2;
  v5[1] = a3;
  uint64_t v6 = a4[2];
  BOOL v7 = __OFADD__(v6, 1);
  uint64_t v8 = v6 + 1;
  if (v7) {
    __break(1u);
  }
  else {
    a4[2] = v8;
  }
  return result;
}

uint64_t sub_100249474(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v8 = a4[6];
  uint64_t v9 = type metadata accessor for Date();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v8 + *(void *)(*(void *)(v9 - 8) + 72) * a1, a2, v9);
  uint64_t v10 = a4[7];
  uint64_t v11 = type metadata accessor for Elevation();
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32))(v10 + *(void *)(*(void *)(v11 - 8) + 72) * a1, a3, v11);
  uint64_t v13 = a4[2];
  BOOL v14 = __OFADD__(v13, 1);
  uint64_t v15 = v13 + 1;
  if (v14) {
    __break(1u);
  }
  else {
    a4[2] = v15;
  }
  return result;
}

unint64_t sub_100249568(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(a4 + 8 * (result >> 6) + 64) |= 1 << result;
  uint64_t v4 = (void *)(*(void *)(a4 + 56) + 16 * result);
  *uint64_t v4 = a2;
  v4[1] = a3;
  uint64_t v5 = *(void *)(a4 + 16);
  BOOL v6 = __OFADD__(v5, 1);
  uint64_t v7 = v5 + 1;
  if (v6) {
    __break(1u);
  }
  else {
    *(void *)(a4 + 16) = v7;
  }
  return result;
}

void sub_1002495A8(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_100180F44(a1, a2, a3, a4, a5);
  uint64_t v6 = type metadata accessor for ContentStatusBanner();
  sub_100109308(v6);
  sub_100176C84();
  sub_100172298();
  if (v8) {
    __break(1u);
  }
  else {
    *(void *)(v5 + 16) = v7;
  }
}

unint64_t sub_100249614(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8)
{
  a8[(result >> 6) + 8] |= 1 << result;
  char v8 = (void *)(a8[6] + 16 * result);
  void *v8 = a2;
  v8[1] = a3;
  uint64_t v9 = (void *)(a8[7] + 32 * result);
  *uint64_t v9 = a4;
  v9[1] = a5;
  v9[2] = a6;
  _OWORD v9[3] = a7;
  uint64_t v10 = a8[2];
  BOOL v11 = __OFADD__(v10, 1);
  uint64_t v12 = v10 + 1;
  if (v11) {
    __break(1u);
  }
  else {
    a8[2] = v12;
  }
  return result;
}

void sub_100249664()
{
  sub_10010977C();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  sub_10018231C(v4, v5, v6, v2);
  type metadata accessor for Date();
  sub_100162E4C();
  sub_1001190D4();
  v7();
  v1(0);
  sub_100176C84();
  sub_100172298();
  if (v9)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v3 + 16) = v8;
    sub_100162714();
  }
}

unint64_t sub_100249728()
{
  unint64_t result = qword_100E63A08;
  if (!qword_100E63A08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E63A08);
  }
  return result;
}

uint64_t sub_100249774()
{
  return static Hasher._hash(seed:_:)();
}

uint64_t getEnumTagSinglePayload for SevereNotificationContent.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xF9)
  {
    if (a2 + 7 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 7) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 8;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 8;
  int v5 = v6 - 8;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for SevereNotificationContent.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *unint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1002498D8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SevereNotificationContent.CodingKeys()
{
  return &type metadata for SevereNotificationContent.CodingKeys;
}

unint64_t sub_100249914()
{
  unint64_t result = qword_100E63A70;
  if (!qword_100E63A70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E63A70);
  }
  return result;
}

unint64_t sub_100249964()
{
  unint64_t result = qword_100E63A78;
  if (!qword_100E63A78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E63A78);
  }
  return result;
}

unint64_t sub_1002499B4()
{
  unint64_t result = qword_100E63A80;
  if (!qword_100E63A80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E63A80);
  }
  return result;
}

uint64_t sub_100249A00(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_100249A5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  sub_10017DF08(&qword_100E635E0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100C251B0;
  *(void *)(inited + 32) = 0x6E6F69746361;
  *(void *)(inited + 40) = 0xE600000000000000;
  *(void *)(inited + 72) = &type metadata for WeatherDataLoadMonitoringAction;
  *(void *)(inited + 48) = a1;
  *(void *)(inited + 56) = a2;
  swift_bridgeObjectRetain();
  Dictionary.init(dictionaryLiteral:)();
  a3[3] = sub_10017DF08(&qword_100E63AE8);
  a3[4] = sub_100249BF0();
  sub_100170694(a3);
  return ShortDescription.init(name:_:)();
}

uint64_t sub_100249B5C@<X0>(uint64_t *a1@<X8>)
{
  return sub_100249A5C(*v1, v1[1], a1);
}

uint64_t sub_100249B64()
{
  sub_100249C44();

  return ShortDescribable.description.getter();
}

unint64_t sub_100249BA4()
{
  unint64_t result = qword_100E63AE0;
  if (!qword_100E63AE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E63AE0);
  }
  return result;
}

unint64_t sub_100249BF0()
{
  unint64_t result = qword_100E63AF0;
  if (!qword_100E63AF0)
  {
    sub_10018C6DC(&qword_100E63AE8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E63AF0);
  }
  return result;
}

unint64_t sub_100249C44()
{
  unint64_t result = qword_100E63AF8;
  if (!qword_100E63AF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E63AF8);
  }
  return result;
}

void *assignWithTake for ExternalSearchQuery(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for MonitoringAction()
{
  return &type metadata for MonitoringAction;
}

void sub_100249CD4(uint64_t a1@<X8>)
{
  int v2 = self;
  id v3 = [v2 mainBundle];
  sub_10017C720();
  v4._object = (void *)0x8000000100C96A00;
  v4._countAndFlagsBits = 0xD00000000000001ALL;
  v5._countAndFlagsBits = 0x612074726F706552;
  v5._object = (void *)0xEF6575737349206ELL;
  Swift::String v6 = NSLocalizedString(_:tableName:bundle:value:comment:)(v4, (Swift::String_optional)0, (NSBundle)v3, v5, *(Swift::String *)(&v15 - 1));

  id v7 = [v2 mainBundle];
  sub_10017C720();
  v8._object = (void *)0x8000000100C96A60;
  v9._countAndFlagsBits = 0;
  v9._object = (void *)0xE000000000000000;
  Swift::String v10 = NSLocalizedString(_:tableName:bundle:value:comment:)(v8, (Swift::String_optional)0, (NSBundle)v7, v9, v16);

  id v11 = [v2 mainBundle];
  sub_10017C720();
  v12._countAndFlagsBits = 0x65726F4D20656553;
  v12._object = (void *)0xE800000000000000;
  v13._countAndFlagsBits = 0;
  v13._object = (void *)0xE000000000000000;
  Swift::String v14 = NSLocalizedString(_:tableName:bundle:value:comment:)(v12, (Swift::String_optional)0, (NSBundle)v11, v13, v17);

  *(void *)a1 = 0xD00000000000001BLL;
  *(void *)(a1 + 8) = 0x8000000100C969E0;
  *(unsigned char *)(a1 + 16) = 0;
  *(Swift::String *)(a1 + 24) = v6;
  *(Swift::String *)(a1 + 40) = v10;
  *(Swift::String *)(a1 + 56) = v14;
}

uint64_t sub_100249E9C()
{
  return swift_bridgeObjectRetain();
}

uint64_t destroy for ReportWeatherTipViewViewModel()
{
  sub_100249EF8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_100249EF8()
{
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ReportWeatherTipViewViewModel(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  uint64_t v5 = a2[1];
  char v6 = *((unsigned char *)a2 + 16);
  sub_100249E9C();
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(unsigned char *)(a1 + 16) = v6;
  uint64_t v7 = a2[4];
  *(void *)(a1 + 24) = a2[3];
  *(void *)(a1 + 32) = v7;
  uint64_t v8 = a2[6];
  *(void *)(a1 + 40) = a2[5];
  *(void *)(a1 + 48) = v8;
  uint64_t v9 = a2[7];
  uint64_t v10 = a2[8];
  *(void *)(a1 + 56) = v9;
  *(void *)(a1 + 64) = v10;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ReportWeatherTipViewViewModel(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  uint64_t v5 = a2[1];
  char v6 = *((unsigned char *)a2 + 16);
  sub_100249E9C();
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(unsigned char *)(a1 + 16) = v6;
  sub_100249EF8();
  *(void *)(a1 + 24) = a2[3];
  *(void *)(a1 + 32) = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = a2[5];
  *(void *)(a1 + 48) = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = a2[7];
  *(void *)(a1 + 64) = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for ReportWeatherTipViewViewModel(uint64_t a1, uint64_t a2)
{
  char v4 = *(unsigned char *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = v4;
  sub_100249EF8();
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v7;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ReportWeatherTipViewViewModel(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 72))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 32);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ReportWeatherTipViewViewModel(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 72) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 32) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 72) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ReportWeatherTipViewViewModel()
{
  return &type metadata for ReportWeatherTipViewViewModel;
}

uint64_t sub_10024A160()
{
  uint64_t v0 = type metadata accessor for DisplayMetrics();
  __chkstk_darwin(v0 - 8);
  unint64_t v2 = (char *)&v8 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for LocationHeaderView(0);
  sub_1001EFFBC();
  id v3 = [self currentDevice];
  id v4 = [v3 userInterfaceIdiom];

  unint64_t v5 = *((void *)v2 + 1);
  if (v4)
  {
    if (v5 == 2) {
      uint64_t v6 = 0x4034000000000000;
    }
    else {
      uint64_t v6 = 0x402C000000000000;
    }
  }
  else if (v5 >= 3)
  {
    uint64_t v6 = 0;
  }
  else
  {
    uint64_t v6 = qword_100C271B0[v5];
  }
  sub_10014CC74((uint64_t)v2, (void (*)(void))type metadata accessor for DisplayMetrics);
  return v6;
}

uint64_t sub_10024A278()
{
  uint64_t v0 = type metadata accessor for Font.Leading();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  id v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10017DF08(&qword_100E63F80);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for LocationHeaderView(0);
  sub_10017DF08(&qword_100E63BE8);
  ScaledMetric.wrappedValue.getter();
  static Font.Weight.light.getter();
  uint64_t v7 = type metadata accessor for Font.Design();
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v6, 1, 1, v7);
  static Font.system(size:weight:design:)();
  sub_100178110((uint64_t)v6, &qword_100E63F80);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for Font.Leading.tight(_:), v0);
  uint64_t v8 = Font.leading(_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v8;
}

double sub_10024A444()
{
  uint64_t v1 = type metadata accessor for LocationHeaderView(0);
  double result = -2.0;
  if (*(unsigned char *)(v0 + *(int *)(v1 + 64) + 161)) {
    double result = 0.0;
  }
  if (!*(void *)(v0 + *(int *)(v1 + 76) + 24)) {
    return 4.0;
  }
  return result;
}

uint64_t sub_10024A494()
{
  return static View._viewListCount(inputs:)();
}

void (*sub_10024A4B8(void *a1))(void *a1)
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = Animatable<>.animatableData.modify();
  return sub_10024A528;
}

void sub_10024A528(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void))(*a1 + 32))(*a1);

  free(v1);
}

uint64_t sub_10024A570(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v8 = sub_1000E7420((uint64_t)&unk_100E64468);

  return static EnvironmentKey<>._valuesEqual(_:_:)(a1, a2, a3, a4, v8);
}

uint64_t sub_10024A604()
{
  uint64_t v1 = v0
     + OBJC_IVAR____TtC7WeatherP33_0D7875416F0B8E2934ED75461799471034LocationHeaderViewFrameCoordinator___observationRegistrar;
  uint64_t v2 = type metadata accessor for ObservationRegistrar();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_10024A6A4()
{
  return type metadata accessor for LocationHeaderViewFrameCoordinator(0);
}

unint64_t sub_10024A6FC(unint64_t a1, uint64_t a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    unint64_t v16 = v15 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v7 = *(void *)a2;
    char v8 = *(unsigned char *)(a2 + 8);
    sub_100195B7C(*(void *)a2, v8);
    *(void *)a1 = v7;
    *(unsigned char *)(a1 + 8) = v8;
    uint64_t v9 = *(void *)(a2 + 16);
    char v10 = *(unsigned char *)(a2 + 24);
    sub_100195B7C(v9, v10);
    *(void *)(a1 + 16) = v9;
    *(unsigned char *)(a1 + 24) = v10;
    uint64_t v11 = a3[6];
    Swift::String v12 = (void *)(a1 + v11);
    Swift::String v13 = (void *)(a2 + v11);
    sub_10017DF08(&qword_100E62CB8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v14 = type metadata accessor for LayoutDirection();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
    }
    else
    {
      *Swift::String v12 = *v13;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v17 = a3[7];
    char v18 = (void *)(a1 + v17);
    BOOL v19 = (void *)(a2 + v17);
    sub_10017DF08(&qword_100E63BC8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v20 = type metadata accessor for ContentSizeCategory();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
    }
    else
    {
      *char v18 = *v19;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v21 = a3[8];
    uint64_t v22 = a1 + v21;
    uint64_t v23 = a2 + v21;
    uint64_t v24 = *(void *)v23;
    char v25 = *(unsigned char *)(v23 + 8);
    sub_100195B7C(*(void *)v23, v25);
    *(void *)uint64_t v22 = v24;
    *(unsigned char *)(v22 + 8) = v25;
    uint64_t v26 = a3[9];
    uint64_t v27 = a1 + v26;
    uint64_t v28 = a2 + v26;
    uint64_t v29 = *(void *)v28;
    char v30 = *(unsigned char *)(v28 + 8);
    sub_100195B7C(*(void *)v28, v30);
    *(void *)uint64_t v27 = v29;
    *(unsigned char *)(v27 + 8) = v30;
    uint64_t v31 = a3[10];
    uint64_t v32 = a1 + v31;
    uint64_t v33 = a2 + v31;
    sub_10017DF08(&qword_100E63BD0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(_OWORD *)uint64_t v32 = *(_OWORD *)v33;
      *(unsigned char *)(v32 + 16) = *(unsigned char *)(v33 + 16);
      *(unsigned char *)(v32 + 17) = *(unsigned char *)(v33 + 17);
      *(unsigned char *)(v32 + 18) = *(unsigned char *)(v33 + 18);
      uint64_t v34 = *(int *)(type metadata accessor for DisplayMetrics() + 36);
      uint64_t v35 = v32 + v34;
      uint64_t v36 = v33 + v34;
      uint64_t v37 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 16))(v35, v36, v37);
    }
    else
    {
      *(void *)uint64_t v32 = *(void *)v33;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v38 = a3[11];
    uint64_t v39 = a1 + v38;
    uint64_t v40 = a2 + v38;
    uint64_t v41 = *(void *)v40;
    char v42 = *(unsigned char *)(v40 + 8);
    sub_100195B7C(*(void *)v40, v42);
    *(void *)uint64_t v39 = v41;
    *(unsigned char *)(v39 + 8) = v42;
    uint64_t v43 = a3[12];
    uint64_t v44 = (void *)(a1 + v43);
    uint64_t v45 = (void *)(a2 + v43);
    sub_10017DF08(&qword_100E63BD8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v46 = type metadata accessor for Font.Context();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v46 - 8) + 16))(v44, v45, v46);
    }
    else
    {
      *uint64_t v44 = *v45;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v47 = a3[13];
    uint64_t v48 = a1 + v47;
    uint64_t v49 = a2 + v47;
    uint64_t v50 = *(void *)v49;
    char v51 = *(unsigned char *)(v49 + 8);
    sub_100195B7C(*(void *)v49, v51);
    *(void *)uint64_t v48 = v50;
    *(unsigned char *)(v48 + 8) = v51;
    uint64_t v52 = a3[14];
    uint64_t v53 = a1 + v52;
    uint64_t v54 = a2 + v52;
    uint64_t v55 = *(void *)v54;
    uint64_t v56 = *(void *)(v54 + 8);
    uint64_t v57 = *(void *)(v54 + 16);
    uint64_t v58 = *(void *)(v54 + 24);
    unint64_t v113 = a1;
    char v59 = *(unsigned char *)(v54 + 32);
    sub_100190CD4(*(void *)v54, v56, v57, v58, v59);
    *(void *)uint64_t v53 = v55;
    *(void *)(v53 + 8) = v56;
    *(void *)(v53 + 16) = v57;
    *(void *)(v53 + 24) = v58;
    *(unsigned char *)(v53 + 32) = v59;
    uint64_t v60 = a3[15];
    uint64_t v61 = a1 + v60;
    uint64_t v62 = a2 + v60;
    uint64_t v63 = *(void *)v62;
    uint64_t v64 = *(void *)(v62 + 8);
    uint64_t v65 = *(void *)(v62 + 16);
    uint64_t v66 = *(void *)(v62 + 24);
    uint64_t v111 = a3;
    uint64_t v67 = *(void *)(v62 + 32);
    uint64_t v68 = *(void *)(v62 + 40);
    char v69 = *(unsigned char *)(v62 + 48);
    sub_100193D54(*(void *)v62, v64, v65, v66, v67, v68, v69);
    *(void *)uint64_t v61 = v63;
    *(void *)(v61 + 8) = v64;
    *(void *)(v61 + 16) = v65;
    *(void *)(v61 + 24) = v66;
    *(void *)(v61 + 32) = v67;
    *(void *)(v61 + 40) = v68;
    *(unsigned char *)(v61 + 48) = v69;
    uint64_t v70 = v111[16];
    uint64_t v71 = a1 + v70;
    uint64_t v72 = a2 + v70;
    uint64_t v73 = *(void *)(a2 + v70 + 8);
    *(void *)uint64_t v71 = *(void *)(a2 + v70);
    *(void *)(v71 + 8) = v73;
    uint64_t v74 = *(void *)(a2 + v70 + 16);
    uint64_t v75 = *(void *)(a2 + v70 + 24);
    uint64_t v76 = *(void *)(a2 + v70 + 32);
    uint64_t v77 = *(void *)(a2 + v70 + 40);
    LOBYTE(v67) = *(unsigned char *)(a2 + v70 + 48);
    swift_bridgeObjectRetain();
    sub_100193004(v74, v75, v76, v77, v67);
    *(void *)(v71 + 16) = v74;
    *(void *)(v71 + 24) = v75;
    *(void *)(v71 + 32) = v76;
    *(void *)(v71 + 40) = v77;
    *(unsigned char *)(v71 + 48) = v67;
    uint64_t v78 = *(void *)(v72 + 64);
    *(void *)(v71 + 56) = *(void *)(v72 + 56);
    *(void *)(v71 + 64) = v78;
    uint64_t v79 = *(void *)(v72 + 80);
    *(void *)(v71 + 72) = *(void *)(v72 + 72);
    *(void *)(v71 + 80) = v79;
    uint64_t v80 = *(void *)(v72 + 96);
    *(void *)(v71 + 88) = *(void *)(v72 + 88);
    *(void *)(v71 + 96) = v80;
    uint64_t v81 = *(void *)(v72 + 112);
    *(void *)(v71 + 104) = *(void *)(v72 + 104);
    *(void *)(v71 + 112) = v81;
    uint64_t v82 = *(void *)(v72 + 128);
    *(void *)(v71 + 120) = *(void *)(v72 + 120);
    *(void *)(v71 + 128) = v82;
    *(unsigned char *)(v71 + 136) = *(unsigned char *)(v72 + 136);
    *(_WORD *)(v71 + 137) = *(_WORD *)(v72 + 137);
    uint64_t v83 = *(void *)(v72 + 152);
    *(void *)(v71 + 144) = *(void *)(v72 + 144);
    *(void *)(v71 + 152) = v83;
    *(unsigned char *)(v71 + 160) = *(unsigned char *)(v72 + 160);
    *(unsigned char *)(v71 + 161) = *(unsigned char *)(v72 + 161);
    uint64_t v84 = v111[17];
    uint64_t v112 = a2;
    uint64_t v85 = a1 + v84;
    uint64_t v86 = v112 + v84;
    uint64_t v87 = *(void *)(v112 + v84);
    uint64_t v88 = *(void *)(v112 + v84 + 8);
    LOBYTE(v71) = *(unsigned char *)(v112 + v84 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v16 = v113;
    swift_bridgeObjectRetain();
    sub_100190CC4(v87, v88, v71);
    *(void *)uint64_t v85 = v87;
    *(void *)(v85 + 8) = v88;
    *(unsigned char *)(v85 + 16) = v71;
    *(void *)(v85 + 24) = *(void *)(v86 + 24);
    uint64_t v89 = v111[18];
    uint64_t v90 = v113 + v89;
    uint64_t v91 = v112 + v89;
    uint64_t v92 = *(void *)(v112 + v89);
    uint64_t v93 = *(void *)(v112 + v89 + 8);
    LOBYTE(v80) = *(unsigned char *)(v112 + v89 + 16);
    swift_bridgeObjectRetain();
    sub_100190CC4(v92, v93, v80);
    *(void *)uint64_t v90 = v92;
    *(void *)(v90 + 8) = v93;
    *(unsigned char *)(v90 + 16) = v80;
    *(void *)(v90 + 24) = *(void *)(v91 + 24);
    uint64_t v94 = v111[19];
    uint64_t v95 = v113 + v94;
    uint64_t v96 = v112 + v94;
    uint64_t v97 = *(void *)(v112 + v94 + 24);
    swift_bridgeObjectRetain();
    if (v97)
    {
      uint64_t v98 = *(void *)v96;
      uint64_t v99 = *(void *)(v96 + 8);
      char v100 = *(unsigned char *)(v96 + 16);
      sub_100190CC4(*(void *)v96, v99, v100);
      *(void *)uint64_t v95 = v98;
      *(void *)(v95 + 8) = v99;
      *(unsigned char *)(v95 + 16) = v100;
      *(void *)(v95 + 24) = *(void *)(v96 + 24);
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v101 = *(_OWORD *)(v96 + 16);
      *(_OWORD *)uint64_t v95 = *(_OWORD *)v96;
      *(_OWORD *)(v95 + 16) = v101;
    }
    uint64_t v102 = v111[21];
    *(void *)(v113 + v111[20]) = *(void *)(v112 + v111[20]);
    uint64_t v103 = v113 + v102;
    uint64_t v104 = v112 + v102;
    uint64_t v105 = type metadata accessor for Text.Measurements();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v105 - 8) + 16))(v103, v104, v105);
    uint64_t v106 = v111[23];
    *(void *)(v113 + v111[22]) = *(void *)(v112 + v111[22]);
    uint64_t v107 = v113 + v106;
    uint64_t v108 = v112 + v106;
    uint64_t v109 = sub_10017DF08(&qword_100E63BE8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v109 - 8) + 16))(v107, v108, v109);
  }
  return v16;
}

uint64_t sub_10024ADC8(uint64_t a1)
{
  return a1;
}

uint64_t sub_10024AE1C(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v6 = a3[6];
  uint64_t v7 = (void *)(a1 + v6);
  char v8 = (const void *)(a2 + v6);
  uint64_t v9 = sub_10017DF08(&qword_100E62CB8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = type metadata accessor for LayoutDirection();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 32))(v7, v8, v10);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
  }
  uint64_t v11 = a3[7];
  Swift::String v12 = (void *)(a1 + v11);
  Swift::String v13 = (const void *)(a2 + v11);
  uint64_t v14 = sub_10017DF08(&qword_100E63BC8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v15 = type metadata accessor for ContentSizeCategory();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v15 - 8) + 32))(v12, v13, v15);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v12, v13, *(void *)(*(void *)(v14 - 8) + 64));
  }
  uint64_t v16 = a3[8];
  uint64_t v17 = a3[9];
  uint64_t v18 = a1 + v16;
  uint64_t v19 = a2 + v16;
  *(void *)uint64_t v18 = *(void *)v19;
  *(unsigned char *)(v18 + 8) = *(unsigned char *)(v19 + 8);
  uint64_t v20 = a1 + v17;
  uint64_t v21 = a2 + v17;
  *(void *)uint64_t v20 = *(void *)v21;
  *(unsigned char *)(v20 + 8) = *(unsigned char *)(v21 + 8);
  uint64_t v22 = a3[10];
  uint64_t v23 = (char *)(a1 + v22);
  uint64_t v24 = (char *)(a2 + v22);
  uint64_t v25 = sub_10017DF08(&qword_100E63BD0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *(_OWORD *)uint64_t v23 = *(_OWORD *)v24;
    v23[16] = v24[16];
    v23[17] = v24[17];
    v23[18] = v24[18];
    uint64_t v26 = *(int *)(type metadata accessor for DisplayMetrics() + 36);
    uint64_t v27 = &v23[v26];
    uint64_t v28 = &v24[v26];
    uint64_t v29 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 32))(v27, v28, v29);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v23, v24, *(void *)(*(void *)(v25 - 8) + 64));
  }
  uint64_t v30 = a3[11];
  uint64_t v31 = a3[12];
  uint64_t v32 = a1 + v30;
  uint64_t v33 = a2 + v30;
  *(void *)uint64_t v32 = *(void *)v33;
  *(unsigned char *)(v32 + 8) = *(unsigned char *)(v33 + 8);
  uint64_t v34 = (void *)(a1 + v31);
  uint64_t v35 = (const void *)(a2 + v31);
  uint64_t v36 = sub_10017DF08(&qword_100E63BD8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v37 = type metadata accessor for Font.Context();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v37 - 8) + 32))(v34, v35, v37);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v34, v35, *(void *)(*(void *)(v36 - 8) + 64));
  }
  uint64_t v38 = a3[13];
  uint64_t v39 = a3[14];
  uint64_t v40 = a1 + v38;
  uint64_t v41 = a2 + v38;
  *(void *)uint64_t v40 = *(void *)v41;
  *(unsigned char *)(v40 + 8) = *(unsigned char *)(v41 + 8);
  uint64_t v42 = a1 + v39;
  uint64_t v43 = a2 + v39;
  long long v44 = *(_OWORD *)(v43 + 16);
  *(_OWORD *)uint64_t v42 = *(_OWORD *)v43;
  *(_OWORD *)(v42 + 16) = v44;
  *(unsigned char *)(v42 + 32) = *(unsigned char *)(v43 + 32);
  uint64_t v45 = a3[15];
  uint64_t v46 = a3[16];
  uint64_t v47 = a1 + v45;
  uint64_t v48 = a2 + v45;
  long long v49 = *(_OWORD *)(v48 + 16);
  *(_OWORD *)uint64_t v47 = *(_OWORD *)v48;
  *(_OWORD *)(v47 + 16) = v49;
  long long v50 = *(_OWORD *)(v48 + 32);
  *(unsigned char *)(v47 + 48) = *(unsigned char *)(v48 + 48);
  *(_OWORD *)(v47 + 32) = v50;
  memcpy((void *)(a1 + v46), (const void *)(a2 + v46), 0xA2uLL);
  uint64_t v51 = a3[17];
  uint64_t v52 = a3[18];
  uint64_t v53 = (_OWORD *)(a1 + v51);
  uint64_t v54 = (_OWORD *)(a2 + v51);
  long long v55 = v54[1];
  _OWORD *v53 = *v54;
  v53[1] = v55;
  uint64_t v56 = (_OWORD *)(a1 + v52);
  uint64_t v57 = (_OWORD *)(a2 + v52);
  long long v58 = v57[1];
  *uint64_t v56 = *v57;
  v56[1] = v58;
  uint64_t v59 = a3[19];
  uint64_t v60 = a3[20];
  uint64_t v61 = (_OWORD *)(a1 + v59);
  uint64_t v62 = (long long *)(a2 + v59);
  long long v63 = *v62;
  long long v64 = v62[1];
  uint64_t v65 = *(void *)(a2 + v60);
  *uint64_t v61 = v63;
  v61[1] = v64;
  *(void *)(a1 + v60) = v65;
  uint64_t v66 = a3[21];
  uint64_t v67 = a1 + v66;
  uint64_t v68 = a2 + v66;
  uint64_t v69 = type metadata accessor for Text.Measurements();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v69 - 8) + 32))(v67, v68, v69);
  uint64_t v70 = a3[23];
  *(void *)(a1 + a3[22]) = *(void *)(a2 + a3[22]);
  uint64_t v71 = a1 + v70;
  uint64_t v72 = a2 + v70;
  uint64_t v73 = sub_10017DF08(&qword_100E63BE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v73 - 8) + 32))(v71, v72, v73);
  return a1;
}

uint64_t sub_10024B2C4(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v6 = *a2;
  char v7 = *((unsigned char *)a2 + 8);
  uint64_t v8 = *(void *)a1;
  char v9 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v6;
  *(unsigned char *)(a1 + 8) = v7;
  sub_10018F6D8(v8, v9);
  char v10 = *((unsigned char *)a2 + 24);
  uint64_t v11 = *(void *)(a1 + 16);
  char v12 = *(unsigned char *)(a1 + 24);
  *(void *)(a1 + 16) = a2[2];
  *(unsigned char *)(a1 + 24) = v10;
  sub_10018F6D8(v11, v12);
  if ((uint64_t *)a1 != a2)
  {
    uint64_t v13 = a3[6];
    uint64_t v14 = (void *)(a1 + v13);
    uint64_t v15 = (char *)a2 + v13;
    sub_100178110(a1 + v13, &qword_100E62CB8);
    uint64_t v16 = sub_10017DF08(&qword_100E62CB8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v17 = type metadata accessor for LayoutDirection();
      (*(void (**)(void *, char *, uint64_t))(*(void *)(v17 - 8) + 32))(v14, v15, v17);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
    }
    uint64_t v18 = a3[7];
    uint64_t v19 = (void *)(a1 + v18);
    uint64_t v20 = (char *)a2 + v18;
    sub_100178110(a1 + v18, &qword_100E63BC8);
    uint64_t v21 = sub_10017DF08(&qword_100E63BC8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v22 = type metadata accessor for ContentSizeCategory();
      (*(void (**)(void *, char *, uint64_t))(*(void *)(v22 - 8) + 32))(v19, v20, v22);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v19, v20, *(void *)(*(void *)(v21 - 8) + 64));
    }
  }
  uint64_t v23 = a3[8];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = (uint64_t *)((char *)a2 + v23);
  uint64_t v26 = *v25;
  LOBYTE(v25) = *((unsigned char *)v25 + 8);
  uint64_t v27 = *(void *)v24;
  char v28 = *(unsigned char *)(v24 + 8);
  *(void *)uint64_t v24 = v26;
  *(unsigned char *)(v24 + 8) = (_BYTE)v25;
  sub_10018F6D8(v27, v28);
  uint64_t v29 = a3[9];
  uint64_t v30 = a1 + v29;
  uint64_t v31 = (uint64_t *)((char *)a2 + v29);
  uint64_t v32 = *v31;
  LOBYTE(v31) = *((unsigned char *)v31 + 8);
  uint64_t v33 = *(void *)v30;
  char v34 = *(unsigned char *)(v30 + 8);
  *(void *)uint64_t v30 = v32;
  *(unsigned char *)(v30 + 8) = (_BYTE)v31;
  sub_10018F6D8(v33, v34);
  if ((uint64_t *)a1 != a2)
  {
    uint64_t v35 = a3[10];
    uint64_t v36 = (char *)(a1 + v35);
    uint64_t v37 = (char *)a2 + v35;
    sub_100178110(a1 + v35, &qword_100E63BD0);
    uint64_t v38 = sub_10017DF08(&qword_100E63BD0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(_OWORD *)uint64_t v36 = *(_OWORD *)v37;
      v36[16] = v37[16];
      v36[17] = v37[17];
      v36[18] = v37[18];
      uint64_t v39 = *(int *)(type metadata accessor for DisplayMetrics() + 36);
      uint64_t v40 = &v36[v39];
      uint64_t v41 = &v37[v39];
      uint64_t v42 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v42 - 8) + 32))(v40, v41, v42);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v36, v37, *(void *)(*(void *)(v38 - 8) + 64));
    }
  }
  uint64_t v43 = a3[11];
  uint64_t v44 = a1 + v43;
  uint64_t v45 = (uint64_t *)((char *)a2 + v43);
  uint64_t v46 = *v45;
  LOBYTE(v45) = *((unsigned char *)v45 + 8);
  uint64_t v47 = *(void *)v44;
  char v48 = *(unsigned char *)(v44 + 8);
  *(void *)uint64_t v44 = v46;
  *(unsigned char *)(v44 + 8) = (_BYTE)v45;
  sub_10018F6D8(v47, v48);
  if ((uint64_t *)a1 != a2)
  {
    uint64_t v49 = a3[12];
    long long v50 = (void *)(a1 + v49);
    uint64_t v51 = (char *)a2 + v49;
    sub_100178110(a1 + v49, &qword_100E63BD8);
    uint64_t v52 = sub_10017DF08(&qword_100E63BD8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v53 = type metadata accessor for Font.Context();
      (*(void (**)(void *, char *, uint64_t))(*(void *)(v53 - 8) + 32))(v50, v51, v53);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v50, v51, *(void *)(*(void *)(v52 - 8) + 64));
    }
  }
  uint64_t v54 = a3[13];
  uint64_t v55 = a1 + v54;
  uint64_t v56 = (uint64_t *)((char *)a2 + v54);
  uint64_t v57 = *v56;
  LOBYTE(v56) = *((unsigned char *)v56 + 8);
  uint64_t v58 = *(void *)v55;
  char v59 = *(unsigned char *)(v55 + 8);
  *(void *)uint64_t v55 = v57;
  *(unsigned char *)(v55 + 8) = (_BYTE)v56;
  sub_10018F6D8(v58, v59);
  uint64_t v60 = a3[14];
  uint64_t v61 = a1 + v60;
  uint64_t v62 = (uint64_t)a2 + v60;
  char v63 = *(unsigned char *)(v62 + 32);
  uint64_t v64 = *(void *)v61;
  uint64_t v65 = *(void *)(v61 + 8);
  uint64_t v66 = *(void *)(v61 + 16);
  uint64_t v67 = *(void *)(v61 + 24);
  char v68 = *(unsigned char *)(v61 + 32);
  long long v69 = *(_OWORD *)(v62 + 16);
  *(_OWORD *)uint64_t v61 = *(_OWORD *)v62;
  *(_OWORD *)(v61 + 16) = v69;
  *(unsigned char *)(v61 + 32) = v63;
  sub_100191934(v64, v65, v66, v67, v68);
  uint64_t v70 = a3[15];
  uint64_t v71 = a1 + v70;
  uint64_t v72 = (uint64_t)a2 + v70;
  char v73 = *(unsigned char *)(v72 + 48);
  uint64_t v74 = *(void *)v71;
  uint64_t v75 = *(void *)(v71 + 8);
  uint64_t v76 = *(void *)(v71 + 16);
  uint64_t v77 = *(void *)(v71 + 24);
  uint64_t v78 = *(void *)(v71 + 32);
  uint64_t v79 = *(void *)(v71 + 40);
  char v80 = *(unsigned char *)(v71 + 48);
  long long v81 = *(_OWORD *)(v72 + 16);
  *(_OWORD *)uint64_t v71 = *(_OWORD *)v72;
  *(_OWORD *)(v71 + 16) = v81;
  *(_OWORD *)(v71 + 32) = *(_OWORD *)(v72 + 32);
  *(unsigned char *)(v71 + 48) = v73;
  sub_10014DC00(v74, v75, v76, v77, v78, v79, v80);
  uint64_t v82 = a3[16];
  uint64_t v83 = a1 + v82;
  uint64_t v84 = (uint64_t)a2 + v82;
  uint64_t v85 = *(uint64_t *)((char *)a2 + v82 + 8);
  *(void *)uint64_t v83 = *(uint64_t *)((char *)a2 + v82);
  *(void *)(v83 + 8) = v85;
  swift_bridgeObjectRelease();
  char v86 = *(unsigned char *)(v84 + 48);
  uint64_t v87 = *(void *)(v83 + 16);
  uint64_t v88 = *(void *)(v83 + 24);
  uint64_t v89 = *(void *)(v83 + 32);
  uint64_t v90 = *(void *)(v83 + 40);
  long long v91 = *(_OWORD *)(v84 + 32);
  *(_OWORD *)(v83 + 16) = *(_OWORD *)(v84 + 16);
  *(_OWORD *)(v83 + 32) = v91;
  char v92 = *(unsigned char *)(v83 + 48);
  *(unsigned char *)(v83 + 48) = v86;
  sub_100191D78(v87, v88, v89, v90, v92);
  uint64_t v93 = *(void *)(v84 + 64);
  *(void *)(v83 + 56) = *(void *)(v84 + 56);
  *(void *)(v83 + 64) = v93;
  swift_bridgeObjectRelease();
  uint64_t v94 = *(void *)(v84 + 80);
  *(void *)(v83 + 72) = *(void *)(v84 + 72);
  *(void *)(v83 + 80) = v94;
  swift_bridgeObjectRelease();
  uint64_t v95 = *(void *)(v84 + 96);
  *(void *)(v83 + 88) = *(void *)(v84 + 88);
  *(void *)(v83 + 96) = v95;
  swift_bridgeObjectRelease();
  uint64_t v96 = *(void *)(v84 + 112);
  *(void *)(v83 + 104) = *(void *)(v84 + 104);
  *(void *)(v83 + 112) = v96;
  swift_bridgeObjectRelease();
  uint64_t v97 = *(void *)(v84 + 128);
  *(void *)(v83 + 120) = *(void *)(v84 + 120);
  *(void *)(v83 + 128) = v97;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v83 + 136) = *(unsigned char *)(v84 + 136);
  *(unsigned char *)(v83 + 137) = *(unsigned char *)(v84 + 137);
  *(unsigned char *)(v83 + 138) = *(unsigned char *)(v84 + 138);
  uint64_t v98 = *(void *)(v84 + 152);
  *(void *)(v83 + 144) = *(void *)(v84 + 144);
  *(void *)(v83 + 152) = v98;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v83 + 160) = *(unsigned char *)(v84 + 160);
  *(unsigned char *)(v83 + 161) = *(unsigned char *)(v84 + 161);
  uint64_t v99 = a3[17];
  uint64_t v100 = a1 + v99;
  uint64_t v101 = (uint64_t)a2 + v99;
  LOBYTE(v99) = *((unsigned char *)a2 + v99 + 16);
  uint64_t v102 = *(void *)v100;
  uint64_t v103 = *(void *)(v100 + 8);
  char v104 = *(unsigned char *)(v100 + 16);
  *(_OWORD *)uint64_t v100 = *(_OWORD *)v101;
  *(unsigned char *)(v100 + 16) = v99;
  sub_100191924(v102, v103, v104);
  *(void *)(v100 + 24) = *(void *)(v101 + 24);
  swift_bridgeObjectRelease();
  uint64_t v105 = a3[18];
  uint64_t v106 = a1 + v105;
  uint64_t v107 = (uint64_t)a2 + v105;
  LOBYTE(v105) = *((unsigned char *)a2 + v105 + 16);
  uint64_t v108 = *(void *)v106;
  uint64_t v109 = *(void *)(v106 + 8);
  char v110 = *(unsigned char *)(v106 + 16);
  *(_OWORD *)uint64_t v106 = *(_OWORD *)v107;
  *(unsigned char *)(v106 + 16) = v105;
  sub_100191924(v108, v109, v110);
  *(void *)(v106 + 24) = *(void *)(v107 + 24);
  swift_bridgeObjectRelease();
  uint64_t v111 = a3[19];
  uint64_t v112 = a1 + v111;
  uint64_t v113 = (uint64_t)a2 + v111;
  if (!*(void *)(a1 + v111 + 24)) {
    goto LABEL_20;
  }
  if (!*(void *)(v113 + 24))
  {
    sub_10024ADC8(v112);
LABEL_20:
    long long v118 = *(_OWORD *)(v113 + 16);
    *(_OWORD *)uint64_t v112 = *(_OWORD *)v113;
    *(_OWORD *)(v112 + 16) = v118;
    goto LABEL_21;
  }
  char v114 = *(unsigned char *)(v113 + 16);
  uint64_t v115 = *(void *)v112;
  uint64_t v116 = *(void *)(v112 + 8);
  char v117 = *(unsigned char *)(v112 + 16);
  *(_OWORD *)uint64_t v112 = *(_OWORD *)v113;
  *(unsigned char *)(v112 + 16) = v114;
  sub_100191924(v115, v116, v117);
  *(void *)(v112 + 24) = *(void *)(v113 + 24);
  swift_bridgeObjectRelease();
LABEL_21:
  uint64_t v119 = a3[21];
  *(void *)(a1 + a3[20]) = *(uint64_t *)((char *)a2 + a3[20]);
  uint64_t v120 = a1 + v119;
  uint64_t v121 = (uint64_t)a2 + v119;
  uint64_t v122 = type metadata accessor for Text.Measurements();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v122 - 8) + 40))(v120, v121, v122);
  uint64_t v123 = a3[23];
  *(void *)(a1 + a3[22]) = *(uint64_t *)((char *)a2 + a3[22]);
  uint64_t v124 = a1 + v123;
  uint64_t v125 = (uint64_t)a2 + v123;
  uint64_t v126 = sub_10017DF08(&qword_100E63BE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v126 - 8) + 40))(v124, v125, v126);
  return a1;
}

uint64_t sub_10024B984()
{
  sub_100185118();
  sub_10017DF08(&qword_100E63BF0);
  sub_100162F30();
  if (*(_DWORD *)(v4 + 84) == v0)
  {
    uint64_t v5 = v3;
    uint64_t v6 = v2[6];
    goto LABEL_16;
  }
  sub_10017DF08((uint64_t *)&unk_100EAA530);
  sub_100162F30();
  if (*(_DWORD *)(v8 + 84) == v0)
  {
    uint64_t v5 = v7;
    uint64_t v6 = v2[7];
    goto LABEL_16;
  }
  sub_10017DF08(&qword_100E63BF8);
  sub_100162F30();
  if (*(_DWORD *)(v10 + 84) == v0)
  {
    uint64_t v5 = v9;
    uint64_t v6 = v2[10];
    goto LABEL_16;
  }
  sub_10017DF08(&qword_100E63C00);
  sub_100162F30();
  if (*(_DWORD *)(v12 + 84) == v0)
  {
    uint64_t v5 = v11;
    uint64_t v6 = v2[12];
    goto LABEL_16;
  }
  if (v0 != 0x7FFFFFFF)
  {
    type metadata accessor for Text.Measurements();
    sub_100162F30();
    if (*(_DWORD *)(v16 + 84) == v0)
    {
      uint64_t v5 = v15;
      uint64_t v6 = v2[21];
    }
    else
    {
      uint64_t v5 = sub_10017DF08(&qword_100E63BE8);
      uint64_t v6 = v2[23];
    }
LABEL_16:
    return _s7Weather24LocationCompositionStateOwet_0(v1 + v6, v0, v5);
  }
  unint64_t v13 = *(void *)(v1 + v2[16] + 8);
  if (v13 >= 0xFFFFFFFF) {
    LODWORD(v13) = -1;
  }
  return (v13 + 1);
}

void sub_10024BAD4(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  sub_10017DF08(&qword_100E63BF0);
  sub_100162F30();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = a4[6];
  }
  else
  {
    sub_10017DF08((uint64_t *)&unk_100EAA530);
    sub_100162F30();
    if (*(_DWORD *)(v13 + 84) == a3)
    {
      uint64_t v10 = v12;
      uint64_t v11 = a4[7];
    }
    else
    {
      sub_10017DF08(&qword_100E63BF8);
      sub_100162F30();
      if (*(_DWORD *)(v15 + 84) == a3)
      {
        uint64_t v10 = v14;
        uint64_t v11 = a4[10];
      }
      else
      {
        sub_10017DF08(&qword_100E63C00);
        sub_100162F30();
        if (*(_DWORD *)(v17 + 84) == a3)
        {
          uint64_t v10 = v16;
          uint64_t v11 = a4[12];
        }
        else
        {
          if (a3 == 0x7FFFFFFF)
          {
            *(void *)(a1 + a4[16] + 8) = (a2 - 1);
            return;
          }
          type metadata accessor for Text.Measurements();
          sub_100162F30();
          if (*(_DWORD *)(v19 + 84) == a3)
          {
            uint64_t v10 = v18;
            uint64_t v11 = a4[21];
          }
          else
          {
            uint64_t v10 = sub_10017DF08(&qword_100E63BE8);
            uint64_t v11 = a4[23];
          }
        }
      }
    }
  }

  _s7Weather24LocationCompositionStateOwst_0(a1 + v11, a2, a2, v10);
}

unint64_t sub_10024BC28()
{
  unint64_t result = qword_100E63D78;
  if (!qword_100E63D78)
  {
    sub_10018C6DC(&qword_100E63D10);
    sub_10024D5E4((uint64_t)&unk_100E63D80);
    sub_1002183BC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E63D78);
  }
  return result;
}

uint64_t sub_10024BCC8()
{
  return sub_10019A614();
}

ValueMetadata *_s44LocationHeaderViewMeasurementsEnvironmentKeyVMa()
{
  return &_s44LocationHeaderViewMeasurementsEnvironmentKeyVN;
}

_OWORD *assignWithTake for HostsLocationHeaderFrameCoordinatorViewModifier(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

void *sub_10024BD58(_OWORD *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (void *)(v14 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    long long v5 = *((_OWORD *)a2 + 1);
    *a1 = *(_OWORD *)a2;
    a1[1] = v5;
    long long v6 = *((_OWORD *)a2 + 3);
    a1[2] = *((_OWORD *)a2 + 2);
    a1[3] = v6;
    uint64_t v7 = *(int *)(a3 + 32);
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (uint64_t)a2 + v7;
    *(_OWORD *)uint64_t v8 = *(_OWORD *)((char *)a2 + v7);
    v8[16] = *((unsigned char *)a2 + v7 + 16);
    v8[17] = *((unsigned char *)a2 + v7 + 17);
    v8[18] = *((unsigned char *)a2 + v7 + 18);
    uint64_t v10 = *(int *)(type metadata accessor for DisplayMetrics() + 36);
    uint64_t v11 = &v8[v10];
    uint64_t v12 = v9 + v10;
    uint64_t v13 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
  }
  return v3;
}

uint64_t sub_10024BE60(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 32);
  uint64_t v3 = v2 + *(int *)(type metadata accessor for DisplayMetrics() + 36);
  uint64_t v4 = type metadata accessor for DynamicTypeSize();
  long long v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);

  return v5(v3, v4);
}

_OWORD *sub_10024BED8(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  long long v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  uint64_t v6 = *(int *)(a3 + 32);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  *(_OWORD *)uint64_t v7 = *(_OWORD *)((char *)a2 + v6);
  v7[16] = *((unsigned char *)a2 + v6 + 16);
  v7[17] = *((unsigned char *)a2 + v6 + 17);
  v7[18] = *((unsigned char *)a2 + v6 + 18);
  uint64_t v9 = *(int *)(type metadata accessor for DisplayMetrics() + 36);
  uint64_t v10 = &v7[v9];
  uint64_t v11 = &v8[v9];
  uint64_t v12 = type metadata accessor for DynamicTypeSize();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
  return a1;
}

void *sub_10024BF90(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  a1[5] = a2[5];
  a1[6] = a2[6];
  a1[7] = a2[7];
  uint64_t v4 = *(int *)(a3 + 32);
  long long v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  *(void *)long long v5 = *(void *)((char *)a2 + v4);
  *((void *)v5 + 1) = *(void *)((char *)a2 + v4 + 8);
  v5[16] = *((unsigned char *)a2 + v4 + 16);
  v5[17] = *((unsigned char *)a2 + v4 + 17);
  v5[18] = *((unsigned char *)a2 + v4 + 18);
  uint64_t v7 = *(int *)(type metadata accessor for DisplayMetrics() + 36);
  uint64_t v8 = &v5[v7];
  uint64_t v9 = &v6[v7];
  uint64_t v10 = type metadata accessor for DynamicTypeSize();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

_OWORD *sub_10024C080(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  long long v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  uint64_t v6 = *(int *)(a3 + 32);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  *(_OWORD *)uint64_t v7 = *(_OWORD *)((char *)a2 + v6);
  v7[16] = *((unsigned char *)a2 + v6 + 16);
  v7[17] = *((unsigned char *)a2 + v6 + 17);
  v7[18] = *((unsigned char *)a2 + v6 + 18);
  uint64_t v9 = *(int *)(type metadata accessor for DisplayMetrics() + 36);
  uint64_t v10 = &v7[v9];
  uint64_t v11 = &v8[v9];
  uint64_t v12 = type metadata accessor for DynamicTypeSize();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v10, v11, v12);
  return a1;
}

_OWORD *sub_10024C138(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  long long v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  uint64_t v6 = *(int *)(a3 + 32);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  *(_OWORD *)uint64_t v7 = *(_OWORD *)((char *)a2 + v6);
  v7[16] = *((unsigned char *)a2 + v6 + 16);
  v7[17] = *((unsigned char *)a2 + v6 + 17);
  v7[18] = *((unsigned char *)a2 + v6 + 18);
  uint64_t v9 = *(int *)(type metadata accessor for DisplayMetrics() + 36);
  uint64_t v10 = &v7[v9];
  uint64_t v11 = &v8[v9];
  uint64_t v12 = type metadata accessor for DynamicTypeSize();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 40))(v10, v11, v12);
  return a1;
}

uint64_t sub_10024C1F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a1 + *(int *)(a3 + 32);
  uint64_t v5 = type metadata accessor for DisplayMetrics();

  return _s7Weather24LocationCompositionStateOwet_0(v4, a2, v5);
}

uint64_t sub_10024C23C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = a1 + *(int *)(a4 + 32);
  uint64_t v6 = type metadata accessor for DisplayMetrics();

  return _s7Weather24LocationCompositionStateOwst_0(v5, a2, a2, v6);
}

__n128 initializeWithTake for LocationHeaderViewGradientBackgroundViewModifier(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for LocationHeaderViewGradientBackgroundViewModifier(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  long long v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for LocationHeaderViewGradientBackgroundViewModifier(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 64))
    {
      int v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      unint64_t v3 = *(void *)(a1 + 56);
      if (v3 >= 0xFFFFFFFF) {
        LODWORD(v3) = -1;
      }
      int v2 = v3 - 1;
      if (v2 < 0) {
        int v2 = -1;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for LocationHeaderViewGradientBackgroundViewModifier(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 64) = 0;
    }
    if (a2) {
      *(void *)(result + 56) = a2;
    }
  }
  return result;
}

void *sub_10024C3AC(uint64_t a1, uint64_t *a2, int *a3)
{
  long long v4 = (void *)a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v20 = *a2;
    *long long v4 = *a2;
    long long v4 = (void *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    char v7 = *((unsigned char *)a2 + 8);
    *(void *)a1 = *a2;
    *(unsigned char *)(a1 + 8) = v7;
    uint64_t v8 = a3[5];
    uint64_t v9 = (_OWORD *)(a1 + v8);
    uint64_t v10 = (_OWORD *)((char *)a2 + v8);
    swift_retain();
    sub_10017DF08(&qword_100E63D98);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      long long v11 = v10[1];
      *uint64_t v9 = *v10;
      v9[1] = v11;
      long long v12 = v10[3];
      v9[2] = v10[2];
      _OWORD v9[3] = v12;
      uint64_t v13 = *(int *)(type metadata accessor for LocationHeaderViewMeasurements(0) + 32);
      uint64_t v14 = (char *)v9 + v13;
      uint64_t v15 = (char *)v10 + v13;
      *(_OWORD *)uint64_t v14 = *(_OWORD *)((char *)v10 + v13);
      v14[16] = *((unsigned char *)v10 + v13 + 16);
      v14[17] = *((unsigned char *)v10 + v13 + 17);
      v14[18] = *((unsigned char *)v10 + v13 + 18);
      uint64_t v16 = *(int *)(type metadata accessor for DisplayMetrics() + 36);
      uint64_t v17 = &v14[v16];
      uint64_t v18 = &v15[v16];
      uint64_t v19 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
    }
    else
    {
      *(void *)uint64_t v9 = *(void *)v10;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v21 = a3[7];
    *((unsigned char *)v4 + a3[6]) = *((unsigned char *)a2 + a3[6]);
    *(void *)((char *)v4 + v21) = *(uint64_t *)((char *)a2 + v21);
    uint64_t v22 = a3[8];
    uint64_t v23 = (void *)((char *)v4 + v22);
    uint64_t v24 = (uint64_t *)((char *)a2 + v22);
    uint64_t v25 = v24[1];
    *uint64_t v23 = *v24;
    v23[1] = v25;
  }
  swift_retain();
  return v4;
}

uint64_t sub_10024C564(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v6 = a3[5];
  char v7 = (_OWORD *)(a1 + v6);
  uint64_t v8 = (_OWORD *)(a2 + v6);
  uint64_t v9 = sub_10017DF08(&qword_100E63D98);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    long long v10 = v8[1];
    *char v7 = *v8;
    v7[1] = v10;
    long long v11 = v8[3];
    _OWORD v7[2] = v8[2];
    v7[3] = v11;
    uint64_t v12 = *(int *)(type metadata accessor for LocationHeaderViewMeasurements(0) + 32);
    uint64_t v13 = (char *)v7 + v12;
    uint64_t v14 = (char *)v8 + v12;
    *(_OWORD *)uint64_t v13 = *(_OWORD *)((char *)v8 + v12);
    v13[16] = *((unsigned char *)v8 + v12 + 16);
    v13[17] = *((unsigned char *)v8 + v12 + 17);
    v13[18] = *((unsigned char *)v8 + v12 + 18);
    uint64_t v15 = *(int *)(type metadata accessor for DisplayMetrics() + 36);
    uint64_t v16 = &v13[v15];
    uint64_t v17 = &v14[v15];
    uint64_t v18 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
  }
  uint64_t v19 = a3[7];
  *(unsigned char *)(a1 + a3[6]) = *(unsigned char *)(a2 + a3[6]);
  *(void *)(a1 + v19) = *(void *)(a2 + v19);
  *(_OWORD *)(a1 + a3[8]) = *(_OWORD *)(a2 + a3[8]);
  return a1;
}

uint64_t sub_10024C6D0(uint64_t a1, uint64_t a2, int *a3)
{
  char v6 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v6;
  swift_release();
  if (a1 != a2)
  {
    uint64_t v7 = a3[5];
    uint64_t v8 = (_OWORD *)(a1 + v7);
    uint64_t v9 = (_OWORD *)(a2 + v7);
    sub_100178110(a1 + v7, &qword_100E63D98);
    uint64_t v10 = sub_10017DF08(&qword_100E63D98);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      long long v11 = v9[1];
      _OWORD *v8 = *v9;
      v8[1] = v11;
      long long v12 = v9[3];
      v8[2] = v9[2];
      v8[3] = v12;
      uint64_t v13 = *(int *)(type metadata accessor for LocationHeaderViewMeasurements(0) + 32);
      uint64_t v14 = (char *)v8 + v13;
      uint64_t v15 = (char *)v9 + v13;
      *(_OWORD *)uint64_t v14 = *(_OWORD *)((char *)v9 + v13);
      v14[16] = *((unsigned char *)v9 + v13 + 16);
      v14[17] = *((unsigned char *)v9 + v13 + 17);
      v14[18] = *((unsigned char *)v9 + v13 + 18);
      uint64_t v16 = *(int *)(type metadata accessor for DisplayMetrics() + 36);
      uint64_t v17 = &v14[v16];
      uint64_t v18 = &v15[v16];
      uint64_t v19 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 32))(v17, v18, v19);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
    }
  }
  uint64_t v20 = a3[7];
  *(unsigned char *)(a1 + a3[6]) = *(unsigned char *)(a2 + a3[6]);
  *(void *)(a1 + v20) = *(void *)(a2 + v20);
  uint64_t v21 = a3[8];
  uint64_t v22 = (void *)(a1 + v21);
  uint64_t v23 = (void *)(a2 + v21);
  *uint64_t v22 = *v23;
  v22[1] = v23[1];
  swift_release();
  return a1;
}

uint64_t sub_10024C874(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10024C888);
}

uint64_t sub_10024C888()
{
  sub_100185118();
  sub_10017DF08(&qword_100E640C8);
  sub_100162F30();
  if (*(_DWORD *)(v2 + 84) != v0) {
    return sub_10019FA5C(*(int *)(v1 + 32));
  }
  uint64_t v3 = sub_10019B378();

  return _s7Weather24LocationCompositionStateOwet_0(v3, v4, v5);
}

uint64_t sub_10024C8F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10024C90C);
}

void sub_10024C90C()
{
  sub_1001888BC();
  sub_10017DF08(&qword_100E640C8);
  sub_100162F30();
  if (*(_DWORD *)(v4 + 84) == v3)
  {
    uint64_t v5 = sub_1001A303C();
    _s7Weather24LocationCompositionStateOwst_0(v5, v6, v7, v8);
  }
  else
  {
    *(void *)(v2 + *(int *)(v1 + 32) + 8) = v0;
  }
}

__n128 initializeWithTake for RecordLocationHeaderFrameViewModifier(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for RecordLocationHeaderFrameViewModifier(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  char v4 = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = v4;
  swift_release();
  char v5 = *(unsigned char *)(a2 + 56);
  uint64_t v6 = *(void *)(a1 + 24);
  uint64_t v7 = *(void *)(a1 + 32);
  uint64_t v8 = *(void *)(a1 + 40);
  uint64_t v9 = *(void *)(a1 + 48);
  char v10 = *(unsigned char *)(a1 + 56);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(unsigned char *)(a1 + 56) = v5;
  sub_100191934(v6, v7, v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for RecordLocationHeaderFrameViewModifier(unsigned __int8 *a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xFF && a1[57])
    {
      int v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      unsigned int v3 = *a1;
      BOOL v4 = v3 >= 2;
      int v2 = (v3 + 2147483646) & 0x7FFFFFFF;
      if (!v4) {
        int v2 = -1;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for RecordLocationHeaderFrameViewModifier(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 56) = 0;
    *(void *)__n128 result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 57) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 57) = 0;
    }
    if (a2) {
      *(unsigned char *)__n128 result = a2 + 1;
    }
  }
  return result;
}

uint64_t sub_10024CABC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10024CAD0);
}

uint64_t sub_10024CAD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10024CAE8);
}

void sub_10024CAEC()
{
  sub_10010977C();
  uint64_t v3 = v2;
  if ((*(_DWORD *)(*(void *)(v4 - 8) + 80) & 0x20000) != 0)
  {
    *uint64_t v1 = *(void *)v2;
  }
  else
  {
    sub_10018233C(*(void *)v2, *(unsigned char *)(v2 + 8));
    uint64_t v6 = (void *)(v3 + v5);
    swift_retain();
    sub_10017DF08(&qword_100E63D98);
    if (sub_100162F5C() == 1)
    {
      sub_10019E5B8();
      sub_1001A1C2C();
      sub_100162E4C();
      uint64_t v7 = sub_1001A4520();
      v8(v7);
    }
    else
    {
      void *v0 = *v6;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    sub_1001A03D4();
  }
  swift_retain();
  sub_100162714();
}

void sub_10024CBF4()
{
  sub_10010977C();
  sub_10017F278();
  *(void *)uint64_t v4 = v5;
  *(unsigned char *)(v4 + 8) = *(unsigned char *)(v6 + 8);
  uint64_t v8 = *(int *)(v7 + 20);
  uint64_t v9 = (void *)(v4 + v8);
  char v10 = (const void *)(v6 + v8);
  sub_10017DF08(&qword_100E63D98);
  if (sub_100162F5C() == 1)
  {
    sub_10019E5B8();
    sub_1001A1C2C();
    sub_100162E4C();
    uint64_t v11 = sub_10017EF78();
    v12(v11);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v9, v10, *(void *)(*(void *)(v3 - 8) + 64));
  }
  uint64_t v13 = v2[7];
  *(unsigned char *)(v0 + v2[6]) = *(unsigned char *)(v1 + v2[6]);
  *(void *)(v0 + v13) = *(void *)(v1 + v13);
  uint64_t v14 = v2[9];
  *(void *)(v0 + v2[8]) = *(void *)(v1 + v2[8]);
  *(void *)(v0 + v14) = *(void *)(v1 + v14);
  *(_OWORD *)(v0 + v2[10]) = *(_OWORD *)(v1 + v2[10]);
  sub_100162714();
}

void sub_10024CCE8()
{
  sub_10010977C();
  sub_10017F278();
  char v4 = *(unsigned char *)(v3 + 8);
  *(void *)uint64_t v0 = v5;
  *(unsigned char *)(v0 + 8) = v4;
  swift_release();
  if (v0 != v1)
  {
    uint64_t v6 = v2[5];
    uint64_t v7 = (void *)(v0 + v6);
    uint64_t v8 = (const void *)(v1 + v6);
    sub_100178110(v0 + v6, &qword_100E63D98);
    sub_10017DF08(&qword_100E63D98);
    if (sub_100162F5C() == 1)
    {
      sub_10019E5B8();
      sub_1001A1C2C();
      sub_100162E4C();
      uint64_t v9 = sub_10017EF78();
      v10(v9);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v7, v8, *(void *)(qword_100E63D90 + 64));
    }
  }
  uint64_t v11 = v2[7];
  *(unsigned char *)(v0 + v2[6]) = *(unsigned char *)(v1 + v2[6]);
  *(void *)(v0 + v11) = *(void *)(v1 + v11);
  sub_1001D0DD4(v2[8]);
  *(void *)(v0 + v12) = *(void *)(v1 + v12);
  sub_1001A14B0();
  *(void *)(v14 + 8) = *(void *)(v13 + 8);
  swift_release();
  sub_100162714();
}

uint64_t sub_10024CE00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10024CE14);
}

uint64_t sub_10024CE18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10024CE2C);
}

uint64_t sub_10024CE38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10024CE4C);
}

uint64_t sub_10024CE50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10024CE64);
}

uint64_t assignWithTake for LocationNameModifier(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for LocationNameModifier(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 32))
    {
      int v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      unint64_t v3 = *(void *)(a1 + 24);
      if (v3 >= 0xFFFFFFFF) {
        LODWORD(v3) = -1;
      }
      int v2 = v3 - 1;
      if (v2 < 0) {
        int v2 = -1;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for LocationNameModifier(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 32) = 0;
    }
    if (a2) {
      *(void *)(result + 24) = a2;
    }
  }
  return result;
}

unint64_t sub_10024CF58()
{
  unint64_t result = qword_100E64418;
  if (!qword_100E64418)
  {
    sub_10018C6DC(&qword_100E63D60);
    sub_10024CFD4();
    sub_1002176A8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E64418);
  }
  return result;
}

unint64_t sub_10024CFD4()
{
  unint64_t result = qword_100E64420;
  if (!qword_100E64420)
  {
    sub_10018C6DC(&qword_100E63D58);
    sub_10024D074();
    sub_10024D5E4((uint64_t)&unk_100E64448);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E64420);
  }
  return result;
}

unint64_t sub_10024D074()
{
  unint64_t result = qword_100E64428;
  if (!qword_100E64428)
  {
    sub_10018C6DC(&qword_100E63D50);
    sub_10024D5E4((uint64_t)&unk_100E64430);
    sub_10024D5E4((uint64_t)&qword_100E64438);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E64428);
  }
  return result;
}

void sub_10024D144(double *a1@<X8>)
{
  *a1 = sub_1000E7380();
}

uint64_t sub_10024D170()
{
  return sub_10007A818();
}

void sub_10024D1B4(double *a1@<X8>)
{
  *a1 = sub_1000E72E0();
}

uint64_t sub_10024D1E0()
{
  return sub_10007A818();
}

uint64_t sub_10024D224()
{
  return sub_1000CC228();
}

uint64_t sub_10024D23C()
{
  return sub_1000CC228();
}

uint64_t sub_10024D25C()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10024D29C()
{
  return sub_1000CC228();
}

uint64_t sub_10024D2B4()
{
  return sub_1000CC228();
}

uint64_t sub_10024D2CC()
{
  return sub_1000CC228();
}

uint64_t sub_10024D2E4()
{
  return sub_1000CC228();
}

uint64_t sub_10024D2FC()
{
  return sub_1000CC228();
}

uint64_t sub_10024D314()
{
  return sub_1000CC228();
}

uint64_t sub_10024D32C()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10024D364(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  sub_10017DF08(a3);
  sub_100162E4C();
  uint64_t v4 = sub_100126010();
  v5(v4);
  return a2;
}

uint64_t assignWithTake for LocationHeaderViewGradientBackground(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  char v4 = *((unsigned char *)a2 + 8);
  uint64_t v5 = *(void *)a1;
  char v6 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  sub_10018F6D8(v5, v6);
  return a1;
}

uint64_t storeEnumTagSinglePayload for LocationHeaderViewGradientBackground(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)unint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = -(char)a2;
    }
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for LocationHeaderViewGradientBackgroundViewModifier.ScrollAdjustments(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)unint64_t result = 0;
    *(unsigned char *)(result + 8) = 0;
    *(_DWORD *)unint64_t result = a2 - 1;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 9) = v3;
  return result;
}

uint64_t sub_10024D470()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_10024D55C()
{
  unint64_t result = qword_100E646A0;
  if (!qword_100E646A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E646A0);
  }
  return result;
}

unint64_t sub_10024D5A8()
{
  return sub_10024D5E4((uint64_t)&unk_100E646C0);
}

unint64_t sub_10024D5E4(uint64_t a1)
{
  unint64_t result = sub_10017DFE0(a1);
  if (!result)
  {
    sub_10018C6DC(v3);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, v1);
  }
  return result;
}

uint64_t sub_10024D630@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E64780);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v21)
  {
    sub_1001B1E64(a1, a1[3]);
    sub_10017DF08(&qword_100E64790);
    uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
    if (result)
    {
      uint64_t v5 = result;
      uint64_t v6 = sub_1000DF0C4((uint64_t)v20, v21);
      __chkstk_darwin(v6);
      uint64_t v8 = (void *)((char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *))(v9 + 16))(v8);
      uint64_t v10 = *v8;
      uint64_t v11 = type metadata accessor for AirQualityDetailInteractor();
      v19[3] = v11;
      v19[4] = &off_100E18D90;
      v19[0] = v10;
      uint64_t v12 = type metadata accessor for AirQualityDetailModule();
      uint64_t v13 = (void *)swift_allocObject();
      uint64_t v14 = sub_1000DF0C4((uint64_t)v19, v11);
      __chkstk_darwin(v14);
      uint64_t v16 = (void *)((char *)v19 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *))(v17 + 16))(v16);
      uint64_t v18 = *v16;
      v13[5] = v11;
      v13[6] = &off_100E18D90;
      _OWORD v13[2] = v18;
      v13[7] = v5;
      _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v19);
      uint64_t result = _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v20);
      a2[3] = v12;
      a2[4] = &off_100E238B0;
      *a2 = v13;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_10024D89C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for AirQualityDetailViewStateReducer();
  uint64_t result = swift_allocObject();
  a1[3] = v2;
  a1[4] = (uint64_t)&off_100E18728;
  *a1 = result;
  return result;
}

uint64_t sub_10024D8E4()
{
  sub_10017DF08(&qword_100E64778);
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  sub_10017DF08(&qword_100E64780);
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  sub_10017DF08(&qword_100E64788);
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  sub_10017DF08(&qword_100E64790);
  RegistrationContainer.register<A>(_:name:factory:)();

  return swift_release();
}

uint64_t sub_10024D9F0@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1001B1E64(a1, a1[3]);
  type metadata accessor for Tracker();
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:name:)();
  if (result)
  {
    uint64_t v5 = Tracker.chain(name:identifier:)();
    swift_release();
    sub_1001B1E64(a1, a1[3]);
    sub_10017DF08(&qword_100E647E0);
    uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
    if (v8)
    {
      a2[3] = (uint64_t)&type metadata for AirQualityDetailTracker;
      a2[4] = (uint64_t)&off_100E17590;
      uint64_t v6 = swift_allocObject();
      *a2 = v6;
      *(void *)(v6 + 16) = v5;
      return sub_1001262E4(&v7, v6 + 24);
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_10024DB2C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E647D8);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  uint64_t v5 = v25;
  if (v25)
  {
    uint64_t v21 = v26;
    sub_1001B1E64(a1, a1[3]);
    sub_10017DF08(&qword_100E64778);
    uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
    if (v24)
    {
      uint64_t v6 = sub_1000DF0C4((uint64_t)v23, v24);
      __chkstk_darwin(v6);
      uint64_t v8 = (_OWORD *)((char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(_OWORD *))(v9 + 16))(v8);
      v22[3] = &type metadata for AirQualityDetailTracker;
      v22[4] = &off_100E17590;
      uint64_t v10 = (_OWORD *)swift_allocObject();
      v22[0] = v10;
      long long v11 = v8[1];
      v10[1] = *v8;
      v10[2] = v11;
      v10[3] = v8[2];
      uint64_t v12 = type metadata accessor for AirQualityDetailInteractor();
      uint64_t v13 = (void *)swift_allocObject();
      uint64_t v14 = sub_1000DF0C4((uint64_t)v22, (uint64_t)&type metadata for AirQualityDetailTracker);
      __chkstk_darwin(v14);
      uint64_t v16 = (_OWORD *)((char *)&v20 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(_OWORD *))(v17 + 16))(v16);
      v13[7] = &type metadata for AirQualityDetailTracker;
      v13[8] = &off_100E17590;
      uint64_t v18 = (_OWORD *)swift_allocObject();
      long long v19 = v16[1];
      v18[1] = *v16;
      v18[2] = v19;
      v18[3] = v16[2];
      _OWORD v13[2] = v5;
      v13[3] = v21;
      v13[4] = v18;
      _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v22);
      uint64_t result = _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v23);
      a2[3] = v12;
      a2[4] = &off_100E18D90;
      *a2 = v13;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_10024DDE0@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E647C8);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v23)
  {
    sub_1001B1E64(a1, a1[3]);
    sub_10017DF08(&qword_100E647D0);
    uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
    if (v21)
    {
      uint64_t v5 = sub_1000DF0C4((uint64_t)v20, v21);
      __chkstk_darwin(v5);
      uint64_t v7 = (void *)((char *)&v19[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *))(v8 + 16))(v7);
      uint64_t v9 = *v7;
      uint64_t v10 = type metadata accessor for NewsArticleComponentViewModelFactory();
      v19[3] = v10;
      v19[4] = &off_100E23878;
      v19[0] = v9;
      uint64_t v11 = type metadata accessor for AirQualityDetailViewModelFactory();
      uint64_t v12 = (void *)swift_allocObject();
      uint64_t v13 = sub_1000DF0C4((uint64_t)v19, v10);
      __chkstk_darwin(v13);
      uint64_t v15 = (void *)((char *)&v19[-1] - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *))(v16 + 16))(v15);
      uint64_t v17 = *v15;
      v12[5] = v10;
      v12[6] = &off_100E23878;
      v12[2] = v17;
      sub_1001262E4(&v22, (uint64_t)(v12 + 7));
      _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v19);
      uint64_t result = _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v20);
      a2[3] = v11;
      a2[4] = &off_100E2BFC8;
      *a2 = v12;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_10024E04C(void *a1)
{
  void (*v5)(void *__return_ptr, void *, uint64_t (*)(uint64_t), void *);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  long long v10[2];
  void v11[5];
  void v12[3];
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(void *__return_ptr, void *, uint64_t (*)(uint64_t), void *);
  uint64_t v17;

  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E64798);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  uint64_t v3 = v14;
  if (v14)
  {
    uint64_t v5 = v16;
    uint64_t v4 = v17;
    uint64_t v6 = v15;
    sub_1001B1E64(a1, a1[3]);
    sub_10017DF08(&qword_100E64788);
    uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
    if (v13)
    {
      uint64_t v7 = *sub_1001B1E64(v12, v13);
      void v11[3] = type metadata accessor for AirQualityDetailViewModelFactory();
      v11[4] = &off_100E2BFC8;
      v11[0] = v7;
      sub_10020D948((uint64_t)v11, (uint64_t)v10);
      uint64_t v8 = swift_allocObject();
      sub_1001262E4(v10, v8 + 16);
      swift_retain();
      _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v11);
      _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v12);
      uint64_t v9 = swift_allocObject();
      *(void *)(v9 + 16) = sub_10024E2AC;
      *(void *)(v9 + 24) = v8;
      sub_10017DF08(&qword_100E64790);
      swift_allocObject();
      return sub_1002596A0(v3, v6, v5, v4, (uint64_t)sub_1001A2AC4, 0, (uint64_t)sub_1002749F4, 0, (uint64_t)sub_100137F50, v9);
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_10024E228@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1008D0B5C(a1, a3);
}

uint64_t sub_10024E274()
{
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 16);

  return swift_deallocObject();
}

uint64_t sub_10024E2AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10024E228(a1, (void *)(v2 + 16), a2);
}

uint64_t sub_10024E2B4@<X0>(void (**a1)(uint64_t *__return_ptr, uint64_t)@<X8>)
{
  void (*v2)(uint64_t *__return_ptr, uint64_t);
  uint64_t v3;
  void (*v5)(uint64_t *__return_ptr, uint64_t);
  void (*v6)(uint64_t *__return_ptr, uint64_t);
  void (*v7)(void);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  void (*v17)(uint64_t *__return_ptr, uint64_t);
  uint64_t v18;
  uint64_t v20;
  long long v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __n128 v42;
  long long v43;
  uint64_t v44;

  uint64_t v3 = v1;
  swift_beginAccess();
  uint64_t v6 = *(void (**)(uint64_t *__return_ptr, uint64_t))(v1 + 16);
  uint64_t v5 = *(void (**)(uint64_t *__return_ptr, uint64_t))(v1 + 24);
  uint64_t v7 = *(void (**)(void))(v1 + 32);
  if (*(unsigned char *)(v1 + 120))
  {
    sub_1001EA8F0();
    if (v16 == 1)
    {
      uint64_t v17 = *(void (**)(uint64_t *__return_ptr, uint64_t))(v1 + 112);
      sub_1001C8654(v8, v9, v10, v11, v12, v13, v14, v15);
      a1[10] = v2;
      a1[11] = v17;
      swift_retain();
      uint64_t v18 = sub_10012603C();
      sub_100274EDC(v18);
      return swift_release();
    }
    else
    {
      *a1 = v6;
      a1[1] = v5;
      sub_10019B090(v8, v9, v10, v11, v12, v13, v14, v15);
      return sub_100274EDC((uint64_t)v6);
    }
  }
  else
  {
    swift_retain();
    uint64_t v20 = swift_retain();
    v6(&v44, v20);
    sub_100214D04();
    v7();
    swift_release();
    swift_release();
    sub_10012B550();
    uint64_t v42 = sub_1002102FC();
    uint64_t v43 = v21;
    long long v22 = *(void *)(v1 + 112);
    uint64_t v23 = *(unsigned char *)(v1 + 120);
    uint64_t v33 = sub_100178F88(v24, v25, v26, v27, v28, v29, v30, v31, v32);
    *(unsigned char *)(v3 + 120) = 1;
    sub_100274EDC(v33);
    sub_10019ADC4();
    return sub_100274CF4(v34, v35, v36, v37, v38, v39, v40, v41, v43, *((uint64_t *)&v43 + 1), v42.n128_i64[0], v42.n128_i64[1], v22, v23);
  }
}

void sub_10024E440()
{
}

void sub_10024E468()
{
}

void sub_10024E490()
{
  sub_100162EA0();
  uint64_t v2 = sub_10008B8A8();
  uint64_t v3 = type metadata accessor for ListInput(v2);
  uint64_t v4 = sub_100109308(v3);
  __chkstk_darwin(v4);
  sub_100125FF8();
  sub_10017DF08(&qword_100E64AC8);
  sub_100162E4C();
  __chkstk_darwin(v5);
  sub_100162758();
  __chkstk_darwin(v6);
  sub_10019FA84();
  sub_10019D3EC();
  sub_1001848F8();
  int v7 = sub_10019D144();
  if (v7)
  {
    if (v7 == 1)
    {
      uint64_t v8 = sub_10017DF08(&qword_100E64AE8);
      sub_10018868C(v8);
      sub_1001522B4();
      sub_1001524C8(v0, (void (*)(void))type metadata accessor for ListInput);
    }
    else
    {
      sub_1001910F0();
    }
  }
  else
  {
    sub_100183820();
    v9();
    uint64_t v10 = sub_1001A3054();
    v1(v10);
    swift_release();
    swift_release();
    sub_10017DF08(&qword_100E64AE8);
    sub_10019DDEC();
    sub_10017B23C();
    sub_100163DDC();
    sub_100189CD4();
    uint64_t v11 = sub_1001858D8();
    sub_100164908(v11, v12, &qword_100E64AC8);
    swift_endAccess();
  }
  sub_100162694();
}

void sub_10024E64C()
{
  sub_100162EA0();
  sub_10008B8A8();
  uint64_t v2 = type metadata accessor for HomeAndWorkRefinementInput();
  uint64_t v3 = sub_100109308(v2);
  __chkstk_darwin(v3);
  sub_100125FF8();
  sub_10017DF08(&qword_100E64C50);
  sub_100162E4C();
  __chkstk_darwin(v4);
  sub_100162758();
  __chkstk_darwin(v5);
  sub_10019FA84();
  sub_10019D3EC();
  sub_1001848F8();
  int v6 = sub_10019D144();
  if (v6)
  {
    if (v6 == 1)
    {
      uint64_t v7 = sub_10017DF08(&qword_100E64C70);
      sub_10018868C(v7);
      sub_1001522B4();
      sub_1001524C8(v0, (void (*)(void))type metadata accessor for HomeAndWorkRefinementInput);
    }
    else
    {
      sub_1001910F0();
    }
  }
  else
  {
    sub_100183820();
    v8();
    uint64_t v9 = sub_1001A3054();
    v1(v9);
    swift_release();
    swift_release();
    sub_10017DF08(&qword_100E64C70);
    sub_10019DDEC();
    sub_10017B23C();
    sub_100163DDC();
    sub_100189CD4();
    uint64_t v10 = sub_1001858D8();
    sub_100164908(v10, v11, &qword_100E64C50);
    swift_endAccess();
  }
  sub_100162694();
}

void sub_10024E808()
{
  sub_100162EA0();
  uint64_t v2 = sub_10008B8A8();
  uint64_t v3 = type metadata accessor for MoonDetailInput(v2);
  uint64_t v4 = sub_100109308(v3);
  __chkstk_darwin(v4);
  sub_100125FF8();
  sub_10017DF08(&qword_100E647E8);
  sub_100162E4C();
  __chkstk_darwin(v5);
  sub_100162758();
  __chkstk_darwin(v6);
  sub_10019FA84();
  sub_10019D3EC();
  sub_1001848F8();
  int v7 = sub_10019D144();
  if (v7)
  {
    if (v7 == 1)
    {
      uint64_t v8 = sub_10017DF08(&qword_100E64808);
      sub_10018868C(v8);
      sub_1001522B4();
      sub_1001524C8(v0, (void (*)(void))type metadata accessor for MoonDetailInput);
    }
    else
    {
      sub_1001910F0();
    }
  }
  else
  {
    sub_100183820();
    v9();
    uint64_t v10 = sub_1001A3054();
    v1(v10);
    swift_release();
    swift_release();
    sub_10017DF08(&qword_100E64808);
    sub_10019DDEC();
    sub_10017B23C();
    sub_100163DDC();
    sub_100189CD4();
    uint64_t v11 = sub_1001858D8();
    sub_100164908(v11, v12, &qword_100E647E8);
    swift_endAccess();
  }
  sub_100162694();
}

id sub_10024E9C4()
{
  void (*v3)(void *__return_ptr, void *);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  char v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  id v18;
  void v20[2];
  unsigned __int8 v21;
  void v22[2];
  char v23;

  uint64_t v1 = v0;
  swift_beginAccess();
  uint64_t v2 = *(void **)(v0 + 16);
  uint64_t v3 = *(void (**)(void *__return_ptr, void *))(v0 + 32);
  if (*(unsigned char *)(v0 + 57))
  {
    if (*(unsigned char *)(v0 + 57) == 1) {
      return *(id *)(v0 + 40);
    }
    else {
      return v2;
    }
  }
  else
  {
    swift_retain();
    uint64_t v5 = swift_retain();
    ((void (*)(void *__return_ptr, uint64_t))v2)(v20, v5);
    v3(v22, v20);
    swift_release();
    swift_release();
    uint64_t v6 = v20[1];
    int v7 = v21;
    uint64_t v8 = (void *)v22[0];
    uint64_t v9 = v22[1];
    uint64_t v10 = v23;
    uint64_t v11 = *(void **)(v1 + 16);
    uint64_t v12 = *(void *)(v1 + 24);
    uint64_t v13 = *(void *)(v1 + 32);
    uint64_t v14 = *(void **)(v1 + 40);
    uint64_t v15 = *(void *)(v1 + 48);
    *(void *)(v1 + 16) = v20[0];
    *(void *)(v1 + 24) = v6;
    *(void *)(v1 + 32) = v7;
    *(void *)(v1 + 40) = v8;
    *(void *)(v1 + 48) = v9;
    uint64_t v16 = *(unsigned __int8 *)(v1 + 56);
    *(unsigned char *)(v1 + 56) = v10;
    uint64_t v17 = *(unsigned char *)(v1 + 57);
    *(unsigned char *)(v1 + 57) = 1;
    uint64_t v18 = v8;
    sub_100276224(v11, v12, v13, v14, v15, v16, v17);
  }
  return v18;
}

void sub_10024EB10()
{
  sub_100162EA0();
  uint64_t v2 = sub_10008B8A8();
  uint64_t v3 = type metadata accessor for LocationPreviewInput(v2);
  uint64_t v4 = sub_100109308(v3);
  __chkstk_darwin(v4);
  sub_100125FF8();
  sub_10017DF08(&qword_100E64938);
  sub_100162E4C();
  __chkstk_darwin(v5);
  sub_100162758();
  __chkstk_darwin(v6);
  sub_10019FA84();
  sub_10019D3EC();
  sub_1001848F8();
  int v7 = sub_10019D144();
  if (v7)
  {
    if (v7 == 1)
    {
      uint64_t v8 = sub_10017DF08(&qword_100E64958);
      sub_10018868C(v8);
      sub_1001522B4();
      sub_1001524C8(v0, (void (*)(void))type metadata accessor for LocationPreviewInput);
    }
    else
    {
      sub_1001910F0();
    }
  }
  else
  {
    sub_100183820();
    v9();
    uint64_t v10 = sub_1001A3054();
    v1(v10);
    swift_release();
    swift_release();
    sub_10017DF08(&qword_100E64958);
    sub_10019DDEC();
    sub_10017B23C();
    sub_100163DDC();
    sub_100189CD4();
    uint64_t v11 = sub_1001858D8();
    sub_100164908(v11, v12, &qword_100E64938);
    swift_endAccess();
  }
  sub_100162694();
}

void sub_10024ECCC()
{
  sub_100162EA0();
  uint64_t v2 = sub_10008B8A8();
  uint64_t v3 = type metadata accessor for ConditionDetailInput(v2);
  uint64_t v4 = sub_100109308(v3);
  __chkstk_darwin(v4);
  sub_100125FF8();
  sub_10017DF08(&qword_100E64840);
  sub_100162E4C();
  __chkstk_darwin(v5);
  sub_100162758();
  __chkstk_darwin(v6);
  sub_10019FA84();
  sub_10019D3EC();
  sub_1001848F8();
  int v7 = sub_10019D144();
  if (v7)
  {
    if (v7 == 1)
    {
      uint64_t v8 = sub_10017DF08(&qword_100E64860);
      sub_10018868C(v8);
      sub_1001522B4();
      sub_1001524C8(v0, (void (*)(void))type metadata accessor for ConditionDetailInput);
    }
    else
    {
      sub_1001910F0();
    }
  }
  else
  {
    sub_100183820();
    v9();
    uint64_t v10 = sub_1001A3054();
    v1(v10);
    swift_release();
    swift_release();
    sub_10017DF08(&qword_100E64860);
    sub_10019DDEC();
    sub_10017B23C();
    sub_100163DDC();
    sub_100189CD4();
    uint64_t v11 = sub_1001858D8();
    sub_100164908(v11, v12, &qword_100E64840);
    swift_endAccess();
  }
  sub_100162694();
}

uint64_t sub_10024EE88()
{
  sub_10017DF08(&qword_100E64878);
  sub_100162E4C();
  __chkstk_darwin(v2);
  sub_100162758();
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)v25 - v4 + 16;
  sub_1001D0DE0();
  uint64_t v7 = v0 + *(void *)(v6 + 120);
  sub_100126024();
  sub_10006DF38(v7, (uint64_t)v5, &qword_100E64878);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      sub_10017DF08(&qword_100E64888);
      sub_1001522B4();
      uint64_t v9 = (void *)*((void *)v5 + 1);
      uint64_t v10 = (void *)*((void *)v5 + 2);
      uint64_t v11 = (void *)*((void *)v5 + 3);
      uint64_t v12 = (void *)*((void *)v5 + 4);
      uint64_t v13 = (void *)*((void *)v5 + 5);
      uint64_t v14 = *((void *)v5 + 6);
      char v15 = v5[56];

      return sub_1002752B0(v14, v15);
    }
    else
    {
      return sub_1001522B4();
    }
  }
  else
  {
    uint64_t v17 = (void (*)(void))*((void *)v5 + 2);
    (*(void (**)(_OWORD *__return_ptr))v5)(v25);
    sub_100214D04();
    v17();
    swift_release();
    swift_release();
    sub_10017DF08(&qword_100E64888);
    uint64_t v18 = v26;
    char v19 = v27;
    char v20 = v28;
    long long v21 = v25[1];
    *(_OWORD *)uint64_t v1 = v25[0];
    *(_OWORD *)(v1 + 16) = v21;
    *(_OWORD *)(v1 + 32) = v25[2];
    *(void *)(v1 + 48) = v18;
    *(unsigned char *)(v1 + 56) = v19;
    *(unsigned char *)(v1 + 57) = v20;
    sub_100136460();
    sub_100189CD4();
    uint64_t v22 = sub_100182350();
    sub_100164908(v22, v23, &qword_100E64878);
    return swift_endAccess();
  }
}

void sub_10024F0AC()
{
  sub_100162EA0();
  sub_10008B8A8();
  uint64_t v2 = type metadata accessor for DayPickerInput();
  uint64_t v3 = sub_100109308(v2);
  __chkstk_darwin(v3);
  sub_100125FF8();
  sub_10017DF08(&qword_100E648A0);
  sub_100162E4C();
  __chkstk_darwin(v4);
  sub_100162758();
  __chkstk_darwin(v5);
  sub_10019FA84();
  sub_10019D3EC();
  sub_1001848F8();
  int v6 = sub_10019D144();
  if (v6)
  {
    if (v6 == 1)
    {
      uint64_t v7 = sub_10017DF08(&qword_100E648C0);
      sub_10018868C(v7);
      sub_1001522B4();
      sub_1001524C8(v0, (void (*)(void))type metadata accessor for DayPickerInput);
    }
    else
    {
      sub_1001910F0();
    }
  }
  else
  {
    sub_100183820();
    v8();
    uint64_t v9 = sub_1001A3054();
    v1(v9);
    swift_release();
    swift_release();
    sub_10017DF08(&qword_100E648C0);
    sub_10019DDEC();
    sub_10017B23C();
    sub_100163DDC();
    sub_100189CD4();
    uint64_t v10 = sub_1001858D8();
    sub_100164908(v10, v11, &qword_100E648A0);
    swift_endAccess();
  }
  sub_100162694();
}

uint64_t sub_10024F268()
{
  uint64_t v1 = type metadata accessor for NotificationsOptInInput();
  uint64_t v2 = sub_100109308(v1);
  __chkstk_darwin(v2);
  sub_10017DF08(&qword_100E64B10);
  sub_100162E4C();
  __chkstk_darwin(v3);
  sub_10016278C();
  uint64_t v6 = v4 - v5;
  __chkstk_darwin(v7);
  uint64_t v9 = (unsigned __int8 *)&v22 - v8;
  sub_1001D0DE0();
  uint64_t v11 = v0 + *(void *)(v10 + 120);
  sub_100126024();
  sub_10006DF38(v11, (uint64_t)v9, &qword_100E64B10);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v13 = &v9[*(int *)(sub_10017DF08(&qword_100E64B28) + 48)];
      unsigned int v14 = *v13;
      int v15 = v13[1];
      int v16 = v13[2];
      int v17 = v13[3];
      sub_1001524C8((uint64_t)v9, (void (*)(void))type metadata accessor for NotificationsOptInInput);
    }
    else
    {
      unsigned int v14 = *v9;
      int v15 = v9[1];
      int v16 = v9[2];
      int v17 = v9[3];
    }
  }
  else
  {
    uint64_t v18 = (void (*)(void))*((void *)v9 + 2);
    (*(void (**)(void))v9)();
    sub_100214D04();
    v18();
    swift_release();
    swift_release();
    char v19 = (unsigned __int8 *)(v6 + *(int *)(sub_10017DF08(&qword_100E64B28) + 48));
    sub_1001522B4();
    unsigned int v14 = v23;
    int v15 = v24;
    int v16 = v25;
    int v17 = v26;
    *char v19 = v23;
    v19[1] = v15;
    v19[2] = v16;
    v19[3] = v17;
    swift_storeEnumTagMultiPayload();
    sub_100182350();
    sub_1001DF004(v6, v11, &qword_100E64B10);
    swift_endAccess();
  }
  if (v16) {
    int v20 = 0x10000;
  }
  else {
    int v20 = 0;
  }
  return v20 | (v17 << 24) | (v15 << 8) | v14;
}

uint64_t sub_10024F4C4()
{
  uint64_t v1 = type metadata accessor for WeatherMenuInput();
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = &v14[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v4 = sub_10017DF08(&qword_100E648F0);
  __chkstk_darwin(v4);
  uint64_t v6 = &v14[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7);
  uint64_t v9 = &v14[-v8];
  uint64_t v10 = v0 + *(void *)(*(void *)v0 + 120);
  swift_beginAccess();
  sub_10006DF38(v10, (uint64_t)v9, &qword_100E648F0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      sub_10017DF08(&qword_100E64910);
      sub_1001522B4();
      return sub_1001524C8((uint64_t)v9, (void (*)(void))type metadata accessor for WeatherMenuInput);
    }
    else
    {
      return sub_1001522B4();
    }
  }
  else
  {
    uint64_t v13 = (void (*)(unsigned char *))*((void *)v9 + 2);
    (*(void (**)(void))v9)();
    v13(v3);
    swift_release();
    swift_release();
    sub_10017DF08(&qword_100E64910);
    sub_1001522B4();
    sub_100136460();
    swift_storeEnumTagMultiPayload();
    swift_beginAccess();
    sub_1001DF004((uint64_t)v6, v10, &qword_100E648F0);
    return swift_endAccess();
  }
}

uint64_t sub_10024F75C()
{
  void (*v5)(uint64_t *__return_ptr, uint64_t);
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v15;

  uint64_t v1 = v0;
  uint64_t v2 = (unsigned char *)(v0 + 16);
  swift_beginAccess();
  uint64_t v3 = *(unsigned __int8 *)(v1 + 16);
  if (*(unsigned char *)(v1 + 48))
  {
    if (*(unsigned char *)(v1 + 48) == 1) {
      return v3 & 1;
    }
    else {
      return *v2 & 1;
    }
  }
  else
  {
    uint64_t v5 = *(void (**)(uint64_t *__return_ptr, uint64_t))(v1 + 32);
    uint64_t v6 = (uint64_t (*)(uint64_t))(((unint64_t)*(unsigned int *)(v1 + 17) << 8) | ((unint64_t)(*(unsigned __int16 *)(v1 + 21) | (*(unsigned __int8 *)(v1 + 23) << 16)) << 40) | v3);
    swift_retain();
    uint64_t v7 = swift_retain();
    uint64_t v8 = v6(v7);
    v5(&v15, v8);
    swift_release();
    swift_release();
    uint64_t v4 = v15;
    uint64_t v9 = *(void *)(v1 + 16);
    uint64_t v10 = *(void *)(v1 + 24);
    uint64_t v11 = *(void *)(v1 + 32);
    uint64_t v12 = *(void *)(v1 + 40);
    *(void *)(v1 + 16) = v15;
    *(void *)(v1 + 24) = 0;
    *(void *)(v1 + 32) = 0;
    *(void *)(v1 + 40) = 0;
    uint64_t v13 = *(unsigned char *)(v1 + 48);
    *(unsigned char *)(v1 + 48) = 1;
    sub_100275674(v9, v10, v11, v12, v13);
  }
  return v4;
}

uint64_t sub_10024F864@<X0>(uint64_t a1@<X8>)
{
  void (*v29)(uint64_t *__return_ptr, uint64_t);
  uint64_t v30;
  long long v31;
  uint64_t v32;
  __int16 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  __n128 v73;
  uint64_t v74;
  uint64_t v75[3];
  uint64_t v76;
  uint64_t v77;

  uint64_t v5 = v1;
  swift_beginAccess();
  uint64_t v7 = *(void *)(v1 + 24);
  uint64_t v9 = *(void (**)(void))(v1 + 32);
  uint64_t v8 = *(void *)(v1 + 40);
  if (*(unsigned char *)(v1 + 121))
  {
    sub_1001EA8F0();
    uint64_t v18 = *(void *)(v1 + 112);
    if (v19 == 1)
    {
      char v20 = *(unsigned char *)(v1 + 120);
      sub_1001C8654(v10, v11, v12, v13, v14, v15, v16, v17);
      *(void *)(a1 + 80) = v4;
      *(void *)(a1 + 88) = v18;
      *(unsigned char *)(a1 + 96) = v20;
      uint64_t v76 = v21;
      uint64_t v74 = v22;
      uint64_t v71 = v23;
      uint64_t v72 = v24;
      swift_retain();
      uint64_t v25 = sub_10012603C();
      sub_100275D44(v25, v26, v27, v71, v72, v74, v76, v1, v69, v70, v4, v18, v20);
      return swift_release();
    }
    else
    {
      *(void *)a1 = v10;
      *(void *)(a1 + 8) = v7;
      sub_10019B090(v10, v11, v12, v13, v14, v15, v16, v17);
      *(unsigned char *)(a1 + 96) = v18;
      return sub_100275D44(v64, v7, (uint64_t)v9, v8, v65, v66, v67, v68, v1, v2, v3, v4, v18);
    }
  }
  else
  {
    uint64_t v29 = *(void (**)(uint64_t *__return_ptr, uint64_t))(v1 + 16);
    swift_retain();
    uint64_t v30 = swift_retain();
    v29(&v77, v30);
    sub_100214D04();
    v9();
    swift_release();
    swift_release();
    sub_10012B550();
    char v73 = sub_1002102FC();
    *(_OWORD *)uint64_t v75 = v31;
    uint64_t v32 = *(void *)(v1 + 112);
    uint64_t v33 = *(_WORD *)(v1 + 120);
    uint64_t v43 = sub_100178F88(v34, v35, v36, v37, v38, v39, v40, v41, v42);
    *(unsigned char *)(v5 + 120) = v44;
    *(unsigned char *)(v5 + 121) = 1;
    sub_100275D44(v43, v45, v46, v47, v48, v49, v50, v51, v52, v53, v54, v55, v44);
    sub_10019ADC4();
    return sub_100275AC0(v56, v57, v58, v59, v60, v61, v62, v63, v75[0], v75[1], v73.n128_i64[0], v73.n128_i64[1], v32, v33, SHIBYTE(v33));
  }
}

void sub_10024FA08()
{
  sub_100162EA0();
  sub_10008B8A8();
  uint64_t v2 = type metadata accessor for InteractiveMapInput();
  uint64_t v3 = sub_100109308(v2);
  __chkstk_darwin(v3);
  sub_100125FF8();
  sub_10017DF08(&qword_100E64970);
  sub_100162E4C();
  __chkstk_darwin(v4);
  sub_100162758();
  __chkstk_darwin(v5);
  sub_10019FA84();
  sub_10019D3EC();
  sub_1001848F8();
  int v6 = sub_10019D144();
  if (v6)
  {
    if (v6 == 1)
    {
      uint64_t v7 = sub_10017DF08(&qword_100E64990);
      sub_10018868C(v7);
      sub_1001522B4();
      sub_1001524C8(v0, (void (*)(void))type metadata accessor for InteractiveMapInput);
    }
    else
    {
      sub_1001910F0();
    }
  }
  else
  {
    sub_100183820();
    v8();
    uint64_t v9 = sub_1001A3054();
    v1(v9);
    swift_release();
    swift_release();
    sub_10017DF08(&qword_100E64990);
    sub_10019DDEC();
    sub_10017B23C();
    sub_100163DDC();
    sub_100189CD4();
    uint64_t v10 = sub_1001858D8();
    sub_100164908(v10, v11, &qword_100E64970);
    swift_endAccess();
  }
  sub_100162694();
}

void sub_10024FBC4()
{
  sub_100162EA0();
  uint64_t v2 = sub_10008B8A8();
  uint64_t HourPrecipitationDetailInput = type metadata accessor for NextHourPrecipitationDetailInput(v2);
  uint64_t v4 = sub_100109308(HourPrecipitationDetailInput);
  __chkstk_darwin(v4);
  sub_100125FF8();
  sub_10017DF08(&qword_100E649A8);
  sub_100162E4C();
  __chkstk_darwin(v5);
  sub_100162758();
  __chkstk_darwin(v6);
  sub_10019FA84();
  sub_10019D3EC();
  sub_1001848F8();
  int v7 = sub_10019D144();
  if (v7)
  {
    if (v7 == 1)
    {
      uint64_t v8 = sub_10017DF08(&qword_100E649C8);
      sub_10018868C(v8);
      sub_1001522B4();
      sub_1001524C8(v0, (void (*)(void))type metadata accessor for NextHourPrecipitationDetailInput);
    }
    else
    {
      sub_1001910F0();
    }
  }
  else
  {
    sub_100183820();
    v9();
    uint64_t v10 = sub_1001A3054();
    v1(v10);
    swift_release();
    swift_release();
    sub_10017DF08(&qword_100E649C8);
    sub_10019DDEC();
    sub_10017B23C();
    sub_100163DDC();
    sub_100189CD4();
    uint64_t v11 = sub_1001858D8();
    sub_100164908(v11, v12, &qword_100E649A8);
    swift_endAccess();
  }
  sub_100162694();
}

void sub_10024FD80()
{
  sub_100162EA0();
  uint64_t v2 = sub_10008B8A8();
  uint64_t v3 = type metadata accessor for AveragesDetailInput(v2);
  uint64_t v4 = sub_100109308(v3);
  __chkstk_darwin(v4);
  sub_100125FF8();
  sub_10017DF08(&qword_100E64B60);
  sub_100162E4C();
  __chkstk_darwin(v5);
  sub_100162758();
  __chkstk_darwin(v6);
  sub_10019FA84();
  sub_10019D3EC();
  sub_1001848F8();
  int v7 = sub_10019D144();
  if (v7)
  {
    if (v7 == 1)
    {
      uint64_t v8 = sub_10017DF08(&qword_100E64B80);
      sub_10018868C(v8);
      sub_1001522B4();
      sub_1001524C8(v0, (void (*)(void))type metadata accessor for AveragesDetailInput);
    }
    else
    {
      sub_1001910F0();
    }
  }
  else
  {
    sub_100183820();
    v9();
    uint64_t v10 = sub_1001A3054();
    v1(v10);
    swift_release();
    swift_release();
    sub_10017DF08(&qword_100E64B80);
    sub_10019DDEC();
    sub_10017B23C();
    sub_100163DDC();
    sub_100189CD4();
    uint64_t v11 = sub_1001858D8();
    sub_100164908(v11, v12, &qword_100E64B60);
    swift_endAccess();
  }
  sub_100162694();
}

void sub_10024FF3C()
{
  sub_100162EA0();
  sub_10008B8A8();
  uint64_t v2 = type metadata accessor for MoonScrubberInput();
  uint64_t v3 = sub_100109308(v2);
  __chkstk_darwin(v3);
  sub_100125FF8();
  sub_10017DF08(&qword_100E64B98);
  sub_100162E4C();
  __chkstk_darwin(v4);
  sub_100162758();
  __chkstk_darwin(v5);
  sub_10019FA84();
  sub_10019D3EC();
  sub_1001848F8();
  int v6 = sub_10019D144();
  if (v6)
  {
    if (v6 == 1)
    {
      uint64_t v7 = sub_10017DF08(&qword_100E64BB8);
      sub_10018868C(v7);
      sub_1001522B4();
      sub_1001524C8(v0, (void (*)(void))type metadata accessor for MoonScrubberInput);
    }
    else
    {
      sub_1001910F0();
    }
  }
  else
  {
    sub_100183820();
    v8();
    uint64_t v9 = sub_1001A3054();
    v1(v9);
    swift_release();
    swift_release();
    sub_10017DF08(&qword_100E64BB8);
    sub_10019DDEC();
    sub_10017B23C();
    sub_100163DDC();
    sub_100189CD4();
    uint64_t v10 = sub_1001858D8();
    sub_100164908(v10, v11, &qword_100E64B98);
    swift_endAccess();
  }
  sub_100162694();
}

void sub_1002500F8()
{
  sub_100162EA0();
  sub_10008B8A8();
  uint64_t v5 = type metadata accessor for NotificationSettingsInput();
  uint64_t v6 = sub_100109308(v5);
  __chkstk_darwin(v6);
  sub_100125FF8();
  sub_10017DF08(&qword_100E64C88);
  sub_100162E4C();
  __chkstk_darwin(v7);
  sub_100162758();
  __chkstk_darwin(v8);
  sub_10019FA84();
  uint64_t v10 = v1 + *(void *)(v9 + 120);
  sub_100126024();
  sub_10006DF38(v10, v3, &qword_100E64C88);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v12 = v3 + *(int *)(sub_10017DF08(&qword_100E64CA0) + 48);
      char v13 = *(unsigned char *)(v12 + 96);
      long long v14 = *(_OWORD *)(v12 + 16);
      *(_OWORD *)uint64_t v0 = *(_OWORD *)v12;
      *(_OWORD *)(v0 + 16) = v14;
      long long v15 = *(_OWORD *)(v12 + 48);
      *(_OWORD *)(v0 + 32) = *(_OWORD *)(v12 + 32);
      *(_OWORD *)(v0 + 48) = v15;
      long long v16 = *(_OWORD *)(v12 + 80);
      *(_OWORD *)(v0 + 64) = *(_OWORD *)(v12 + 64);
      *(_OWORD *)(v0 + 80) = v16;
      *(unsigned char *)(v0 + 96) = v13;
      sub_1001524C8(v3, (void (*)(void))type metadata accessor for NotificationSettingsInput);
    }
    else
    {
      char v25 = *(unsigned char *)(v3 + 96);
      long long v26 = *(_OWORD *)(v3 + 16);
      *(_OWORD *)uint64_t v0 = *(_OWORD *)v3;
      *(_OWORD *)(v0 + 16) = v26;
      long long v27 = *(_OWORD *)(v3 + 48);
      *(_OWORD *)(v0 + 32) = *(_OWORD *)(v3 + 32);
      *(_OWORD *)(v0 + 48) = v27;
      long long v28 = *(_OWORD *)(v3 + 80);
      *(_OWORD *)(v0 + 64) = *(_OWORD *)(v3 + 64);
      *(_OWORD *)(v0 + 80) = v28;
      *(unsigned char *)(v0 + 96) = v25;
    }
  }
  else
  {
    sub_100183820();
    v17();
    uint64_t v18 = sub_1001A3054();
    v4(v18);
    swift_release();
    swift_release();
    sub_10017DF08(&qword_100E64CA0);
    sub_10019DDEC();
    sub_10017B23C();
    uint64_t v34 = *(void *)(v0 + 8);
    uint64_t v35 = *(void *)v0;
    uint64_t v32 = *(void *)(v0 + 24);
    uint64_t v33 = *(void *)(v0 + 16);
    uint64_t v19 = *(void *)(v0 + 40);
    uint64_t v30 = *(void *)(v0 + 48);
    uint64_t v31 = *(void *)(v0 + 32);
    uint64_t v29 = *(void *)(v0 + 56);
    uint64_t v20 = *(void *)(v0 + 64);
    uint64_t v21 = *(void *)(v0 + 72);
    uint64_t v22 = *(void *)(v0 + 80);
    uint64_t v23 = *(void *)(v0 + 88);
    char v24 = *(unsigned char *)(v0 + 96);
    *(void *)uint64_t v1 = v35;
    *(void *)(v1 + 8) = v34;
    *(void *)(v1 + 16) = v33;
    *(void *)(v1 + 24) = v32;
    *(void *)(v1 + 32) = v31;
    *(void *)(v1 + 40) = v19;
    *(void *)(v1 + 48) = v30;
    *(void *)(v1 + 56) = v29;
    *(void *)(v1 + 64) = v20;
    *(void *)(v1 + 72) = v21;
    *(void *)(v1 + 80) = v22;
    *(void *)(v1 + 88) = v23;
    *(unsigned char *)(v1 + 96) = v24;
    swift_storeEnumTagMultiPayload();
    sub_100182350();
    sub_10027667C(v35, v34, v33, v32, v31, v19, v30, v29, v20, v21, v22, v23, v24);
    sub_1001DF004(v2, v10, &qword_100E64C88);
    swift_endAccess();
  }
  sub_100162694();
}

void sub_10025035C()
{
  sub_100162EA0();
  uint64_t v2 = sub_10008B8A8();
  uint64_t v3 = type metadata accessor for SunriseSunsetDetailInput(v2);
  uint64_t v4 = sub_100109308(v3);
  __chkstk_darwin(v4);
  sub_100125FF8();
  sub_10017DF08(&qword_100E64BD0);
  sub_100162E4C();
  __chkstk_darwin(v5);
  sub_100162758();
  __chkstk_darwin(v6);
  sub_10019FA84();
  sub_10019D3EC();
  sub_1001848F8();
  int v7 = sub_10019D144();
  if (v7)
  {
    if (v7 == 1)
    {
      uint64_t v8 = sub_10017DF08(&qword_100E64BF0);
      sub_10018868C(v8);
      sub_1001522B4();
      sub_1001524C8(v0, (void (*)(void))type metadata accessor for SunriseSunsetDetailInput);
    }
    else
    {
      sub_1001910F0();
    }
  }
  else
  {
    sub_100183820();
    v9();
    uint64_t v10 = sub_1001A3054();
    v1(v10);
    swift_release();
    swift_release();
    sub_10017DF08(&qword_100E64BF0);
    sub_10019DDEC();
    sub_10017B23C();
    sub_100163DDC();
    sub_100189CD4();
    uint64_t v11 = sub_1001858D8();
    sub_100164908(v11, v12, &qword_100E64BD0);
    swift_endAccess();
  }
  sub_100162694();
}

void sub_100250518()
{
  sub_100162EA0();
  sub_10008B8A8();
  uint64_t v2 = type metadata accessor for MoonCalendarInput();
  uint64_t v3 = sub_100109308(v2);
  __chkstk_darwin(v3);
  sub_100125FF8();
  sub_10017DF08(&qword_100E64C18);
  sub_100162E4C();
  __chkstk_darwin(v4);
  sub_100162758();
  __chkstk_darwin(v5);
  sub_10019FA84();
  sub_10019D3EC();
  sub_1001848F8();
  int v6 = sub_10019D144();
  if (v6)
  {
    if (v6 == 1)
    {
      uint64_t v7 = sub_10017DF08(&qword_100E64C38);
      sub_10018868C(v7);
      sub_1001522B4();
      sub_1001524C8(v0, (void (*)(void))type metadata accessor for MoonCalendarInput);
    }
    else
    {
      sub_1001910F0();
    }
  }
  else
  {
    sub_100183820();
    v8();
    uint64_t v9 = sub_1001A3054();
    v1(v9);
    swift_release();
    swift_release();
    sub_10017DF08(&qword_100E64C38);
    sub_10019DDEC();
    sub_10017B23C();
    sub_100163DDC();
    sub_100189CD4();
    uint64_t v10 = sub_1001858D8();
    sub_100164908(v10, v11, &qword_100E64C18);
    swift_endAccess();
  }
  sub_100162694();
}

void sub_1002506D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = UnsafeMutableRawPointer.hashValue.getter();
  swift_beginAccess();
  uint64_t v7 = *(void *)(v3 + 16);
  if (*(void *)(v7 + 16) && (unint64_t v8 = sub_1002109DC(v6), (v9 & 1) != 0)) {
    uint64_t v10 = *(void *)(*(void *)(v7 + 56) + 8 * v8);
  }
  else {
    uint64_t v10 = 0;
  }
  swift_endAccess();
  uint64_t v11 = v10 + 1;
  if (__OFADD__(v10, 1))
  {
    __break(1u);
  }
  else
  {
    swift_beginAccess();
    sub_100210878();
    swift_endAccess();
    if (qword_100E62828 == -1) {
      goto LABEL_7;
    }
  }
  swift_once();
LABEL_7:
  uint64_t v12 = type metadata accessor for Logger();
  sub_1002102B0(v12, (uint64_t)qword_100F51F80);
  char v13 = Logger.logObject.getter();
  os_log_type_t v14 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = swift_slowAlloc();
    aBlock[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v15 = 136315906;
    sub_10016414C(0x746174536E69614DLL, 0xE900000000000065, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v15 + 12) = 2080;
    sub_10016414C(0x746174536E69614DLL, 0xE900000000000065, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v15 + 22) = 2080;
    sub_10016414C(0xD000000000000019, 0x8000000100C96CD0, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v15 + 32) = 2048;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "Processing state update. Selector=<%s, %s, %s>, Count=%ld", (uint8_t *)v15, 0x2Au);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  id v16 = [self sharedApplication];
  uint64_t v17 = swift_allocObject();
  swift_weakInit();
  uint64_t v18 = (void *)swift_allocObject();
  v18[2] = v17;
  v18[3] = v6;
  v18[4] = v11;
  v18[5] = a2;
  v18[6] = a3;
  aBlock[4] = (uint64_t)sub_100274AD0;
  aBlock[5] = (uint64_t)v18;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_10010A4D4;
  aBlock[3] = (uint64_t)&unk_100E09F38;
  uint64_t v19 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  [v16 installCACommitCompletionBlock:v19];
  _Block_release(v19);
}

void sub_100250A94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = UnsafeMutableRawPointer.hashValue.getter();
  swift_beginAccess();
  uint64_t v7 = *(void *)(v3 + 16);
  if (*(void *)(v7 + 16) && (unint64_t v8 = sub_1002109DC(v6), (v9 & 1) != 0)) {
    uint64_t v10 = *(void *)(*(void *)(v7 + 56) + 8 * v8);
  }
  else {
    uint64_t v10 = 0;
  }
  swift_endAccess();
  uint64_t v11 = v10 + 1;
  if (__OFADD__(v10, 1))
  {
    __break(1u);
  }
  else
  {
    swift_beginAccess();
    sub_100210878();
    swift_endAccess();
    if (qword_100E62828 == -1) {
      goto LABEL_7;
    }
  }
  swift_once();
LABEL_7:
  uint64_t v12 = type metadata accessor for Logger();
  sub_1002102B0(v12, (uint64_t)qword_100F51F80);
  char v13 = Logger.logObject.getter();
  os_log_type_t v14 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = swift_slowAlloc();
    aBlock[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v15 = 136315906;
    sub_10016414C(0x746174536E69614DLL, 0xE900000000000065, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v15 + 12) = 2080;
    sub_10016414C(0x617465446E6F6F4DLL, 0xEF7475706E496C69, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v15 + 22) = 2080;
    sub_10016414C(0xD000000000000013, 0x8000000100C96DC0, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v15 + 32) = 2048;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "Processing state update. Selector=<%s, %s, %s>, Count=%ld", (uint8_t *)v15, 0x2Au);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  id v16 = [self sharedApplication];
  uint64_t v17 = swift_allocObject();
  swift_weakInit();
  uint64_t v18 = (void *)swift_allocObject();
  v18[2] = v17;
  v18[3] = v6;
  v18[4] = v11;
  v18[5] = a2;
  v18[6] = a3;
  aBlock[4] = (uint64_t)sub_100274BB4;
  aBlock[5] = (uint64_t)v18;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_10010A4D4;
  aBlock[3] = (uint64_t)&unk_100E0A0C8;
  uint64_t v19 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  [v16 installCACommitCompletionBlock:v19];
  _Block_release(v19);
}

void sub_100250E5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = UnsafeMutableRawPointer.hashValue.getter();
  swift_beginAccess();
  uint64_t v7 = *(void *)(v3 + 16);
  if (*(void *)(v7 + 16) && (unint64_t v8 = sub_1002109DC(v6), (v9 & 1) != 0)) {
    uint64_t v10 = *(void *)(*(void *)(v7 + 56) + 8 * v8);
  }
  else {
    uint64_t v10 = 0;
  }
  swift_endAccess();
  uint64_t v11 = v10 + 1;
  if (__OFADD__(v10, 1))
  {
    __break(1u);
  }
  else
  {
    swift_beginAccess();
    sub_100210878();
    swift_endAccess();
    if (qword_100E62828 == -1) {
      goto LABEL_7;
    }
  }
  swift_once();
LABEL_7:
  uint64_t v12 = type metadata accessor for Logger();
  sub_1002102B0(v12, (uint64_t)qword_100F51F80);
  char v13 = Logger.logObject.getter();
  os_log_type_t v14 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = swift_slowAlloc();
    aBlock[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v15 = 136315906;
    sub_10016414C(0x746174536E69614DLL, 0xE900000000000065, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v15 + 12) = 2080;
    sub_10016414C(0x746174536E69614DLL, 0xE900000000000065, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v15 + 22) = 2080;
    sub_10016414C(0xD000000000000016, 0x8000000100C96DE0, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v15 + 32) = 2048;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "Processing state update. Selector=<%s, %s, %s>, Count=%ld", (uint8_t *)v15, 0x2Au);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  id v16 = [self sharedApplication];
  uint64_t v17 = swift_allocObject();
  swift_weakInit();
  uint64_t v18 = (void *)swift_allocObject();
  v18[2] = v17;
  v18[3] = v6;
  v18[4] = v11;
  v18[5] = a2;
  v18[6] = a3;
  aBlock[4] = (uint64_t)sub_100274CB4;
  aBlock[5] = (uint64_t)v18;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_10010A4D4;
  aBlock[3] = (uint64_t)&unk_100E0A230;
  uint64_t v19 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  [v16 installCACommitCompletionBlock:v19];
  _Block_release(v19);
}

void sub_10025121C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = UnsafeMutableRawPointer.hashValue.getter();
  swift_beginAccess();
  uint64_t v7 = *(void *)(v3 + 16);
  if (*(void *)(v7 + 16) && (unint64_t v8 = sub_1002109DC(v6), (v9 & 1) != 0)) {
    uint64_t v10 = *(void *)(*(void *)(v7 + 56) + 8 * v8);
  }
  else {
    uint64_t v10 = 0;
  }
  swift_endAccess();
  uint64_t v11 = v10 + 1;
  if (__OFADD__(v10, 1))
  {
    __break(1u);
  }
  else
  {
    swift_beginAccess();
    sub_100210878();
    swift_endAccess();
    if (qword_100E62828 == -1) {
      goto LABEL_7;
    }
  }
  swift_once();
LABEL_7:
  uint64_t v12 = type metadata accessor for Logger();
  sub_1002102B0(v12, (uint64_t)qword_100F51F80);
  char v13 = Logger.logObject.getter();
  os_log_type_t v14 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = swift_slowAlloc();
    aBlock[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v15 = 136315906;
    sub_10016414C(0x746174536E69614DLL, 0xE900000000000065, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v15 + 12) = 2080;
    sub_10016414C(0xD000000000000014, 0x8000000100C96E00, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v15 + 22) = 2080;
    sub_10016414C(0xD000000000000018, 0x8000000100C96E20, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v15 + 32) = 2048;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "Processing state update. Selector=<%s, %s, %s>, Count=%ld", (uint8_t *)v15, 0x2Au);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  id v16 = [self sharedApplication];
  uint64_t v17 = swift_allocObject();
  swift_weakInit();
  uint64_t v18 = (void *)swift_allocObject();
  v18[2] = v17;
  v18[3] = v6;
  v18[4] = v11;
  v18[5] = a2;
  v18[6] = a3;
  aBlock[4] = (uint64_t)sub_100275054;
  aBlock[5] = (uint64_t)v18;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_10010A4D4;
  aBlock[3] = (uint64_t)&unk_100E0A398;
  uint64_t v19 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  [v16 installCACommitCompletionBlock:v19];
  _Block_release(v19);
}

void sub_1002515E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = UnsafeMutableRawPointer.hashValue.getter();
  swift_beginAccess();
  uint64_t v7 = *(void *)(v3 + 16);
  if (*(void *)(v7 + 16) && (unint64_t v8 = sub_1002109DC(v6), (v9 & 1) != 0)) {
    uint64_t v10 = *(void *)(*(void *)(v7 + 56) + 8 * v8);
  }
  else {
    uint64_t v10 = 0;
  }
  swift_endAccess();
  uint64_t v11 = v10 + 1;
  if (__OFADD__(v10, 1))
  {
    __break(1u);
  }
  else
  {
    swift_beginAccess();
    sub_100210878();
    swift_endAccess();
    if (qword_100E62828 == -1) {
      goto LABEL_7;
    }
  }
  swift_once();
LABEL_7:
  uint64_t v12 = type metadata accessor for Logger();
  sub_1002102B0(v12, (uint64_t)qword_100F51F80);
  char v13 = Logger.logObject.getter();
  os_log_type_t v14 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = swift_slowAlloc();
    aBlock[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v15 = 136315906;
    sub_10016414C(0x746174536E69614DLL, 0xE900000000000065, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v15 + 12) = 2080;
    sub_10016414C(0xD000000000000017, 0x8000000100C96E40, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v15 + 22) = 2080;
    sub_10016414C(0xD00000000000001BLL, 0x8000000100C96E60, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v15 + 32) = 2048;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "Processing state update. Selector=<%s, %s, %s>, Count=%ld", (uint8_t *)v15, 0x2Au);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  id v16 = [self sharedApplication];
  uint64_t v17 = swift_allocObject();
  swift_weakInit();
  uint64_t v18 = (void *)swift_allocObject();
  v18[2] = v17;
  v18[3] = v6;
  v18[4] = v11;
  v18[5] = a2;
  v18[6] = a3;
  aBlock[4] = (uint64_t)sub_100275138;
  aBlock[5] = (uint64_t)v18;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_10010A4D4;
  aBlock[3] = (uint64_t)&unk_100E0A500;
  uint64_t v19 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  [v16 installCACommitCompletionBlock:v19];
  _Block_release(v19);
}

void sub_1002519A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = UnsafeMutableRawPointer.hashValue.getter();
  swift_beginAccess();
  uint64_t v7 = *(void *)(v3 + 16);
  if (*(void *)(v7 + 16) && (unint64_t v8 = sub_1002109DC(v6), (v9 & 1) != 0)) {
    uint64_t v10 = *(void *)(*(void *)(v7 + 56) + 8 * v8);
  }
  else {
    uint64_t v10 = 0;
  }
  swift_endAccess();
  uint64_t v11 = v10 + 1;
  if (__OFADD__(v10, 1))
  {
    __break(1u);
  }
  else
  {
    swift_beginAccess();
    sub_100210878();
    swift_endAccess();
    if (qword_100E62828 == -1) {
      goto LABEL_7;
    }
  }
  swift_once();
LABEL_7:
  uint64_t v12 = type metadata accessor for Logger();
  sub_1002102B0(v12, (uint64_t)qword_100F51F80);
  char v13 = Logger.logObject.getter();
  os_log_type_t v14 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = swift_slowAlloc();
    aBlock[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v15 = 136315906;
    sub_10016414C(0x746174536E69614DLL, 0xE900000000000065, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v15 + 12) = 2080;
    sub_10016414C(0x656B636950796144, 0xEE007475706E4972, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v15 + 22) = 2080;
    sub_10016414C(0xD000000000000012, 0x8000000100C96E80, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v15 + 32) = 2048;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "Processing state update. Selector=<%s, %s, %s>, Count=%ld", (uint8_t *)v15, 0x2Au);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  id v16 = [self sharedApplication];
  uint64_t v17 = swift_allocObject();
  swift_weakInit();
  uint64_t v18 = (void *)swift_allocObject();
  v18[2] = v17;
  v18[3] = v6;
  v18[4] = v11;
  v18[5] = a2;
  v18[6] = a3;
  aBlock[4] = (uint64_t)sub_1002753B4;
  aBlock[5] = (uint64_t)v18;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_10010A4D4;
  aBlock[3] = (uint64_t)&unk_100E0A668;
  uint64_t v19 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  [v16 installCACommitCompletionBlock:v19];
  _Block_release(v19);
}

void sub_100251D6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = UnsafeMutableRawPointer.hashValue.getter();
  swift_beginAccess();
  uint64_t v7 = *(void *)(v3 + 16);
  if (*(void *)(v7 + 16) && (unint64_t v8 = sub_1002109DC(v6), (v9 & 1) != 0)) {
    uint64_t v10 = *(void *)(*(void *)(v7 + 56) + 8 * v8);
  }
  else {
    uint64_t v10 = 0;
  }
  swift_endAccess();
  uint64_t v11 = v10 + 1;
  if (__OFADD__(v10, 1))
  {
    __break(1u);
  }
  else
  {
    swift_beginAccess();
    sub_100210878();
    swift_endAccess();
    if (qword_100E62828 == -1) {
      goto LABEL_7;
    }
  }
  swift_once();
LABEL_7:
  uint64_t v12 = type metadata accessor for Logger();
  sub_1002102B0(v12, (uint64_t)qword_100F51F80);
  char v13 = Logger.logObject.getter();
  os_log_type_t v14 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = swift_slowAlloc();
    aBlock[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v15 = 136315906;
    sub_10016414C(0x746174536E69614DLL, 0xE900000000000065, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v15 + 12) = 2080;
    sub_10016414C(0x746174536E69614DLL, 0xE900000000000065, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v15 + 22) = 2080;
    sub_10016414C(0xD000000000000010, 0x8000000100C96EA0, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v15 + 32) = 2048;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "Processing state update. Selector=<%s, %s, %s>, Count=%ld", (uint8_t *)v15, 0x2Au);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  id v16 = [self sharedApplication];
  uint64_t v17 = swift_allocObject();
  swift_weakInit();
  uint64_t v18 = (void *)swift_allocObject();
  v18[2] = v17;
  v18[3] = v6;
  v18[4] = v11;
  v18[5] = a2;
  v18[6] = a3;
  aBlock[4] = (uint64_t)sub_1002754B4;
  aBlock[5] = (uint64_t)v18;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_10010A4D4;
  aBlock[3] = (uint64_t)&unk_100E0A7D0;
  uint64_t v19 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  [v16 installCACommitCompletionBlock:v19];
  _Block_release(v19);
}

void sub_10025212C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = UnsafeMutableRawPointer.hashValue.getter();
  swift_beginAccess();
  uint64_t v7 = *(void *)(v3 + 16);
  if (*(void *)(v7 + 16) && (unint64_t v8 = sub_1002109DC(v6), (v9 & 1) != 0)) {
    uint64_t v10 = *(void *)(*(void *)(v7 + 56) + 8 * v8);
  }
  else {
    uint64_t v10 = 0;
  }
  swift_endAccess();
  uint64_t v11 = v10 + 1;
  if (__OFADD__(v10, 1))
  {
    __break(1u);
  }
  else
  {
    swift_beginAccess();
    sub_100210878();
    swift_endAccess();
    if (qword_100E62828 == -1) {
      goto LABEL_7;
    }
  }
  swift_once();
LABEL_7:
  uint64_t v12 = type metadata accessor for Logger();
  sub_1002102B0(v12, (uint64_t)qword_100F51F80);
  char v13 = Logger.logObject.getter();
  os_log_type_t v14 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = swift_slowAlloc();
    aBlock[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v15 = 136315906;
    sub_10016414C(0x746174536E69614DLL, 0xE900000000000065, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v15 + 12) = 2080;
    sub_10016414C(0xD000000000000010, 0x8000000100C96EC0, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v15 + 22) = 2080;
    sub_10016414C(0xD000000000000014, 0x8000000100C96EE0, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v15 + 32) = 2048;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "Processing state update. Selector=<%s, %s, %s>, Count=%ld", (uint8_t *)v15, 0x2Au);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  id v16 = [self sharedApplication];
  uint64_t v17 = swift_allocObject();
  swift_weakInit();
  uint64_t v18 = (void *)swift_allocObject();
  v18[2] = v17;
  v18[3] = v6;
  v18[4] = v11;
  v18[5] = a2;
  v18[6] = a3;
  aBlock[4] = (uint64_t)sub_100275558;
  aBlock[5] = (uint64_t)v18;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_10010A4D4;
  aBlock[3] = (uint64_t)&unk_100E0A938;
  uint64_t v19 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  [v16 installCACommitCompletionBlock:v19];
  _Block_release(v19);
}

void sub_1002524F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = UnsafeMutableRawPointer.hashValue.getter();
  swift_beginAccess();
  uint64_t v7 = *(void *)(v3 + 16);
  if (*(void *)(v7 + 16) && (unint64_t v8 = sub_1002109DC(v6), (v9 & 1) != 0)) {
    uint64_t v10 = *(void *)(*(void *)(v7 + 56) + 8 * v8);
  }
  else {
    uint64_t v10 = 0;
  }
  swift_endAccess();
  uint64_t v11 = v10 + 1;
  if (__OFADD__(v10, 1))
  {
    __break(1u);
  }
  else
  {
    swift_beginAccess();
    sub_100210878();
    swift_endAccess();
    if (qword_100E62828 == -1) {
      goto LABEL_7;
    }
  }
  swift_once();
LABEL_7:
  uint64_t v12 = type metadata accessor for Logger();
  sub_1002102B0(v12, (uint64_t)qword_100F51F80);
  char v13 = Logger.logObject.getter();
  os_log_type_t v14 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = swift_slowAlloc();
    aBlock[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v15 = 136315906;
    sub_10016414C(0x746174536E69614DLL, 0xE900000000000065, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v15 + 12) = 2080;
    sub_10016414C(0xD000000000000019, 0x8000000100C96F00, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v15 + 22) = 2080;
    sub_10016414C(0xD00000000000001DLL, 0x8000000100C96F20, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v15 + 32) = 2048;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "Processing state update. Selector=<%s, %s, %s>, Count=%ld", (uint8_t *)v15, 0x2Au);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  id v16 = [self sharedApplication];
  uint64_t v17 = swift_allocObject();
  swift_weakInit();
  uint64_t v18 = (void *)swift_allocObject();
  v18[2] = v17;
  v18[3] = v6;
  v18[4] = v11;
  v18[5] = a2;
  v18[6] = a3;
  aBlock[4] = (uint64_t)sub_100275630;
  aBlock[5] = (uint64_t)v18;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_10010A4D4;
  aBlock[3] = (uint64_t)&unk_100E0AAA0;
  uint64_t v19 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  [v16 installCACommitCompletionBlock:v19];
  _Block_release(v19);
}

void sub_1002528B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = UnsafeMutableRawPointer.hashValue.getter();
  swift_beginAccess();
  uint64_t v7 = *(void *)(v3 + 16);
  if (*(void *)(v7 + 16) && (unint64_t v8 = sub_1002109DC(v6), (v9 & 1) != 0)) {
    uint64_t v10 = *(void *)(*(void *)(v7 + 56) + 8 * v8);
  }
  else {
    uint64_t v10 = 0;
  }
  swift_endAccess();
  uint64_t v11 = v10 + 1;
  if (__OFADD__(v10, 1))
  {
    __break(1u);
  }
  else
  {
    swift_beginAccess();
    sub_100210878();
    swift_endAccess();
    if (qword_100E62828 == -1) {
      goto LABEL_7;
    }
  }
  swift_once();
LABEL_7:
  uint64_t v12 = type metadata accessor for Logger();
  sub_1002102B0(v12, (uint64_t)qword_100F51F80);
  char v13 = Logger.logObject.getter();
  os_log_type_t v14 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = swift_slowAlloc();
    aBlock[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v15 = 136315906;
    sub_10016414C(0x746174536E69614DLL, 0xE900000000000065, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v15 + 12) = 2080;
    sub_10016414C(0xD000000000000014, 0x8000000100C96F40, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v15 + 22) = 2080;
    sub_10016414C(0xD000000000000018, 0x8000000100C96F60, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v15 + 32) = 2048;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "Processing state update. Selector=<%s, %s, %s>, Count=%ld", (uint8_t *)v15, 0x2Au);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  id v16 = [self sharedApplication];
  uint64_t v17 = swift_allocObject();
  swift_weakInit();
  uint64_t v18 = (void *)swift_allocObject();
  v18[2] = v17;
  v18[3] = v6;
  v18[4] = v11;
  v18[5] = a2;
  v18[6] = a3;
  aBlock[4] = (uint64_t)sub_100275720;
  aBlock[5] = (uint64_t)v18;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_10010A4D4;
  aBlock[3] = (uint64_t)&unk_100E0AC08;
  uint64_t v19 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  [v16 installCACommitCompletionBlock:v19];
  _Block_release(v19);
}

void sub_100252C78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = UnsafeMutableRawPointer.hashValue.getter();
  swift_beginAccess();
  uint64_t v7 = *(void *)(v3 + 16);
  if (*(void *)(v7 + 16) && (unint64_t v8 = sub_1002109DC(v6), (v9 & 1) != 0)) {
    uint64_t v10 = *(void *)(*(void *)(v7 + 56) + 8 * v8);
  }
  else {
    uint64_t v10 = 0;
  }
  swift_endAccess();
  uint64_t v11 = v10 + 1;
  if (__OFADD__(v10, 1))
  {
    __break(1u);
  }
  else
  {
    swift_beginAccess();
    sub_100210878();
    swift_endAccess();
    if (qword_100E62828 == -1) {
      goto LABEL_7;
    }
  }
  swift_once();
LABEL_7:
  uint64_t v12 = type metadata accessor for Logger();
  sub_1002102B0(v12, (uint64_t)qword_100F51F80);
  char v13 = Logger.logObject.getter();
  os_log_type_t v14 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = swift_slowAlloc();
    aBlock[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v15 = 136315906;
    sub_10016414C(0x746174536E69614DLL, 0xE900000000000065, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v15 + 12) = 2080;
    sub_10016414C(0xD000000000000013, 0x8000000100C96F80, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v15 + 22) = 2080;
    sub_10016414C(0xD000000000000017, 0x8000000100C96FA0, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v15 + 32) = 2048;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "Processing state update. Selector=<%s, %s, %s>, Count=%ld", (uint8_t *)v15, 0x2Au);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  id v16 = [self sharedApplication];
  uint64_t v17 = swift_allocObject();
  swift_weakInit();
  uint64_t v18 = (void *)swift_allocObject();
  v18[2] = v17;
  v18[3] = v6;
  v18[4] = v11;
  v18[5] = a2;
  v18[6] = a3;
  aBlock[4] = (uint64_t)sub_1002757C8;
  aBlock[5] = (uint64_t)v18;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_10010A4D4;
  aBlock[3] = (uint64_t)&unk_100E0AD70;
  uint64_t v19 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  [v16 installCACommitCompletionBlock:v19];
  _Block_release(v19);
}

void sub_10025303C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = UnsafeMutableRawPointer.hashValue.getter();
  swift_beginAccess();
  uint64_t v7 = *(void *)(v3 + 16);
  if (*(void *)(v7 + 16) && (unint64_t v8 = sub_1002109DC(v6), (v9 & 1) != 0)) {
    uint64_t v10 = *(void *)(*(void *)(v7 + 56) + 8 * v8);
  }
  else {
    uint64_t v10 = 0;
  }
  swift_endAccess();
  uint64_t v11 = v10 + 1;
  if (__OFADD__(v10, 1))
  {
    __break(1u);
  }
  else
  {
    swift_beginAccess();
    sub_100210878();
    swift_endAccess();
    if (qword_100E62828 == -1) {
      goto LABEL_7;
    }
  }
  swift_once();
LABEL_7:
  uint64_t v12 = type metadata accessor for Logger();
  sub_1002102B0(v12, (uint64_t)qword_100F51F80);
  char v13 = Logger.logObject.getter();
  os_log_type_t v14 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = swift_slowAlloc();
    aBlock[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v15 = 136315906;
    sub_10016414C(0x746174536E69614DLL, 0xE900000000000065, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v15 + 12) = 2080;
    sub_10016414C(0xD000000000000020, 0x8000000100C96FC0, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v15 + 22) = 2080;
    sub_10016414C(0xD000000000000024, 0x8000000100C96FF0, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v15 + 32) = 2048;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "Processing state update. Selector=<%s, %s, %s>, Count=%ld", (uint8_t *)v15, 0x2Au);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  id v16 = [self sharedApplication];
  uint64_t v17 = swift_allocObject();
  swift_weakInit();
  uint64_t v18 = (void *)swift_allocObject();
  v18[2] = v17;
  v18[3] = v6;
  v18[4] = v11;
  v18[5] = a2;
  v18[6] = a3;
  aBlock[4] = (uint64_t)sub_100275870;
  aBlock[5] = (uint64_t)v18;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_10010A4D4;
  aBlock[3] = (uint64_t)&unk_100E0AED8;
  uint64_t v19 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  [v16 installCACommitCompletionBlock:v19];
  _Block_release(v19);
}

void sub_100253400(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = UnsafeMutableRawPointer.hashValue.getter();
  swift_beginAccess();
  uint64_t v7 = *(void *)(v3 + 16);
  if (*(void *)(v7 + 16) && (unint64_t v8 = sub_1002109DC(v6), (v9 & 1) != 0)) {
    uint64_t v10 = *(void *)(*(void *)(v7 + 56) + 8 * v8);
  }
  else {
    uint64_t v10 = 0;
  }
  swift_endAccess();
  uint64_t v11 = v10 + 1;
  if (__OFADD__(v10, 1))
  {
    __break(1u);
  }
  else
  {
    swift_beginAccess();
    sub_100210878();
    swift_endAccess();
    if (qword_100E62828 == -1) {
      goto LABEL_7;
    }
  }
  swift_once();
LABEL_7:
  uint64_t v12 = type metadata accessor for Logger();
  sub_1002102B0(v12, (uint64_t)qword_100F51F80);
  char v13 = Logger.logObject.getter();
  os_log_type_t v14 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = swift_slowAlloc();
    aBlock[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v15 = 136315906;
    sub_10016414C(0x746174536E69614DLL, 0xE900000000000065, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v15 + 12) = 2080;
    sub_10016414C(0x75706E497473694CLL, 0xE900000000000074, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v15 + 22) = 2080;
    sub_10016414C(0x776569567473694CLL, 0xED00006C65646F4DLL, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v15 + 32) = 2048;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "Processing state update. Selector=<%s, %s, %s>, Count=%ld", (uint8_t *)v15, 0x2Au);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  id v16 = [self sharedApplication];
  uint64_t v17 = swift_allocObject();
  swift_weakInit();
  uint64_t v18 = (void *)swift_allocObject();
  v18[2] = v17;
  v18[3] = v6;
  v18[4] = v11;
  v18[5] = a2;
  v18[6] = a3;
  aBlock[4] = (uint64_t)sub_100275960;
  aBlock[5] = (uint64_t)v18;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_10010A4D4;
  aBlock[3] = (uint64_t)&unk_100E0B5E0;
  uint64_t v19 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  [v16 installCACommitCompletionBlock:v19];
  _Block_release(v19);
}

void sub_1002537CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = UnsafeMutableRawPointer.hashValue.getter();
  swift_beginAccess();
  uint64_t v7 = *(void *)(v3 + 16);
  if (*(void *)(v7 + 16) && (unint64_t v8 = sub_1002109DC(v6), (v9 & 1) != 0)) {
    uint64_t v10 = *(void *)(*(void *)(v7 + 56) + 8 * v8);
  }
  else {
    uint64_t v10 = 0;
  }
  swift_endAccess();
  uint64_t v11 = v10 + 1;
  if (__OFADD__(v10, 1))
  {
    __break(1u);
  }
  else
  {
    swift_beginAccess();
    sub_100210878();
    swift_endAccess();
    if (qword_100E62828 == -1) {
      goto LABEL_7;
    }
  }
  swift_once();
LABEL_7:
  uint64_t v12 = type metadata accessor for Logger();
  sub_1002102B0(v12, (uint64_t)qword_100F51F80);
  char v13 = Logger.logObject.getter();
  os_log_type_t v14 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = swift_slowAlloc();
    aBlock[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v15 = 136315906;
    sub_10016414C(0x746174536E69614DLL, 0xE900000000000065, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v15 + 12) = 2080;
    sub_10016414C(0x746174536E69614DLL, 0xE900000000000065, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v15 + 22) = 2080;
    sub_10016414C(0x6956686372616553, 0xEF6C65646F4D7765, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v15 + 32) = 2048;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "Processing state update. Selector=<%s, %s, %s>, Count=%ld", (uint8_t *)v15, 0x2Au);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  id v16 = [self sharedApplication];
  uint64_t v17 = swift_allocObject();
  swift_weakInit();
  uint64_t v18 = (void *)swift_allocObject();
  v18[2] = v17;
  v18[3] = v6;
  v18[4] = v11;
  v18[5] = a2;
  v18[6] = a3;
  aBlock[4] = (uint64_t)sub_100275A78;
  aBlock[5] = (uint64_t)v18;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_10010A4D4;
  aBlock[3] = (uint64_t)&unk_100E0B748;
  uint64_t v19 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  [v16 installCACommitCompletionBlock:v19];
  _Block_release(v19);
}

void sub_100253B94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = UnsafeMutableRawPointer.hashValue.getter();
  swift_beginAccess();
  uint64_t v7 = *(void *)(v3 + 16);
  if (*(void *)(v7 + 16) && (unint64_t v8 = sub_1002109DC(v6), (v9 & 1) != 0)) {
    uint64_t v10 = *(void *)(*(void *)(v7 + 56) + 8 * v8);
  }
  else {
    uint64_t v10 = 0;
  }
  swift_endAccess();
  uint64_t v11 = v10 + 1;
  if (__OFADD__(v10, 1))
  {
    __break(1u);
  }
  else
  {
    swift_beginAccess();
    sub_100210878();
    swift_endAccess();
    if (qword_100E62828 == -1) {
      goto LABEL_7;
    }
  }
  swift_once();
LABEL_7:
  uint64_t v12 = type metadata accessor for Logger();
  sub_1002102B0(v12, (uint64_t)qword_100F51F80);
  char v13 = Logger.logObject.getter();
  os_log_type_t v14 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = swift_slowAlloc();
    aBlock[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v15 = 136315906;
    sub_10016414C(0x746174536E69614DLL, 0xE900000000000065, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v15 + 12) = 2080;
    sub_10016414C(0xD000000000000017, 0x8000000100C97110, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v15 + 22) = 2080;
    sub_10016414C(0xD00000000000001BLL, 0x8000000100C97130, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v15 + 32) = 2048;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "Processing state update. Selector=<%s, %s, %s>, Count=%ld", (uint8_t *)v15, 0x2Au);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  id v16 = [self sharedApplication];
  uint64_t v17 = swift_allocObject();
  swift_weakInit();
  uint64_t v18 = (void *)swift_allocObject();
  v18[2] = v17;
  v18[3] = v6;
  v18[4] = v11;
  v18[5] = a2;
  v18[6] = a3;
  aBlock[4] = (uint64_t)sub_100275EBC;
  aBlock[5] = (uint64_t)v18;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_10010A4D4;
  aBlock[3] = (uint64_t)&unk_100E0B8B0;
  uint64_t v19 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  [v16 installCACommitCompletionBlock:v19];
  _Block_release(v19);
}

void sub_100253F58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = UnsafeMutableRawPointer.hashValue.getter();
  swift_beginAccess();
  uint64_t v7 = *(void *)(v3 + 16);
  if (*(void *)(v7 + 16) && (unint64_t v8 = sub_1002109DC(v6), (v9 & 1) != 0)) {
    uint64_t v10 = *(void *)(*(void *)(v7 + 56) + 8 * v8);
  }
  else {
    uint64_t v10 = 0;
  }
  swift_endAccess();
  uint64_t v11 = v10 + 1;
  if (__OFADD__(v10, 1))
  {
    __break(1u);
  }
  else
  {
    swift_beginAccess();
    sub_100210878();
    swift_endAccess();
    if (qword_100E62828 == -1) {
      goto LABEL_7;
    }
  }
  swift_once();
LABEL_7:
  uint64_t v12 = type metadata accessor for Logger();
  sub_1002102B0(v12, (uint64_t)qword_100F51F80);
  char v13 = Logger.logObject.getter();
  os_log_type_t v14 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = swift_slowAlloc();
    aBlock[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v15 = 136315906;
    sub_10016414C(0x746174536E69614DLL, 0xE900000000000065, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v15 + 12) = 2080;
    sub_10016414C(0xD000000000000013, 0x8000000100C97150, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v15 + 22) = 2080;
    sub_10016414C(0xD000000000000017, 0x8000000100C97170, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v15 + 32) = 2048;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "Processing state update. Selector=<%s, %s, %s>, Count=%ld", (uint8_t *)v15, 0x2Au);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  id v16 = [self sharedApplication];
  uint64_t v17 = swift_allocObject();
  swift_weakInit();
  uint64_t v18 = (void *)swift_allocObject();
  v18[2] = v17;
  v18[3] = v6;
  v18[4] = v11;
  v18[5] = a2;
  v18[6] = a3;
  aBlock[4] = (uint64_t)sub_100275F74;
  aBlock[5] = (uint64_t)v18;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_10010A4D4;
  aBlock[3] = (uint64_t)&unk_100E0BB80;
  uint64_t v19 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  [v16 installCACommitCompletionBlock:v19];
  _Block_release(v19);
}

void sub_10025431C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = UnsafeMutableRawPointer.hashValue.getter();
  swift_beginAccess();
  uint64_t v7 = *(void *)(v3 + 16);
  if (*(void *)(v7 + 16) && (unint64_t v8 = sub_1002109DC(v6), (v9 & 1) != 0)) {
    uint64_t v10 = *(void *)(*(void *)(v7 + 56) + 8 * v8);
  }
  else {
    uint64_t v10 = 0;
  }
  swift_endAccess();
  uint64_t v11 = v10 + 1;
  if (__OFADD__(v10, 1))
  {
    __break(1u);
  }
  else
  {
    swift_beginAccess();
    sub_100210878();
    swift_endAccess();
    if (qword_100E62828 == -1) {
      goto LABEL_7;
    }
  }
  swift_once();
LABEL_7:
  uint64_t v12 = type metadata accessor for Logger();
  sub_1002102B0(v12, (uint64_t)qword_100F51F80);
  char v13 = Logger.logObject.getter();
  os_log_type_t v14 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = swift_slowAlloc();
    aBlock[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v15 = 136315906;
    sub_10016414C(0x746174536E69614DLL, 0xE900000000000065, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v15 + 12) = 2080;
    sub_10016414C(0xD000000000000011, 0x8000000100C97190, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v15 + 22) = 2080;
    sub_10016414C(0xD000000000000015, 0x8000000100C971B0, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v15 + 32) = 2048;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "Processing state update. Selector=<%s, %s, %s>, Count=%ld", (uint8_t *)v15, 0x2Au);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  id v16 = [self sharedApplication];
  uint64_t v17 = swift_allocObject();
  swift_weakInit();
  uint64_t v18 = (void *)swift_allocObject();
  v18[2] = v17;
  v18[3] = v6;
  v18[4] = v11;
  v18[5] = a2;
  v18[6] = a3;
  aBlock[4] = (uint64_t)sub_10027601C;
  aBlock[5] = (uint64_t)v18;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_10010A4D4;
  aBlock[3] = (uint64_t)&unk_100E0BCE8;
  uint64_t v19 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  [v16 installCACommitCompletionBlock:v19];
  _Block_release(v19);
}

void sub_1002546E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = UnsafeMutableRawPointer.hashValue.getter();
  swift_beginAccess();
  uint64_t v7 = *(void *)(v3 + 16);
  if (*(void *)(v7 + 16) && (unint64_t v8 = sub_1002109DC(v6), (v9 & 1) != 0)) {
    uint64_t v10 = *(void *)(*(void *)(v7 + 56) + 8 * v8);
  }
  else {
    uint64_t v10 = 0;
  }
  swift_endAccess();
  uint64_t v11 = v10 + 1;
  if (__OFADD__(v10, 1))
  {
    __break(1u);
  }
  else
  {
    swift_beginAccess();
    sub_100210878();
    swift_endAccess();
    if (qword_100E62828 == -1) {
      goto LABEL_7;
    }
  }
  swift_once();
LABEL_7:
  uint64_t v12 = type metadata accessor for Logger();
  sub_1002102B0(v12, (uint64_t)qword_100F51F80);
  char v13 = Logger.logObject.getter();
  os_log_type_t v14 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = swift_slowAlloc();
    aBlock[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v15 = 136315906;
    sub_10016414C(0x746174536E69614DLL, 0xE900000000000065, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v15 + 12) = 2080;
    sub_10016414C(0xD000000000000018, 0x8000000100C971D0, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v15 + 22) = 2080;
    sub_10016414C(0xD00000000000001CLL, 0x8000000100C971F0, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v15 + 32) = 2048;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "Processing state update. Selector=<%s, %s, %s>, Count=%ld", (uint8_t *)v15, 0x2Au);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  id v16 = [self sharedApplication];
  uint64_t v17 = swift_allocObject();
  swift_weakInit();
  uint64_t v18 = (void *)swift_allocObject();
  v18[2] = v17;
  v18[3] = v6;
  v18[4] = v11;
  v18[5] = a2;
  v18[6] = a3;
  aBlock[4] = (uint64_t)sub_1002760C4;
  aBlock[5] = (uint64_t)v18;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_10010A4D4;
  aBlock[3] = (uint64_t)&unk_100E0BE50;
  uint64_t v19 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  [v16 installCACommitCompletionBlock:v19];
  _Block_release(v19);
}

void sub_100254AA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = UnsafeMutableRawPointer.hashValue.getter();
  swift_beginAccess();
  uint64_t v7 = *(void *)(v3 + 16);
  if (*(void *)(v7 + 16) && (unint64_t v8 = sub_1002109DC(v6), (v9 & 1) != 0)) {
    uint64_t v10 = *(void *)(*(void *)(v7 + 56) + 8 * v8);
  }
  else {
    uint64_t v10 = 0;
  }
  swift_endAccess();
  uint64_t v11 = v10 + 1;
  if (__OFADD__(v10, 1))
  {
    __break(1u);
  }
  else
  {
    swift_beginAccess();
    sub_100210878();
    swift_endAccess();
    if (qword_100E62828 == -1) {
      goto LABEL_7;
    }
  }
  swift_once();
LABEL_7:
  uint64_t v12 = type metadata accessor for Logger();
  sub_1002102B0(v12, (uint64_t)qword_100F51F80);
  char v13 = Logger.logObject.getter();
  os_log_type_t v14 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = swift_slowAlloc();
    aBlock[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v15 = 136315906;
    sub_10016414C(0x746174536E69614DLL, 0xE900000000000065, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v15 + 12) = 2080;
    sub_10016414C(0x756E654D7473694CLL, 0xED00007475706E49, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v15 + 22) = 2080;
    sub_10016414C(0xD000000000000011, 0x8000000100C97210, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v15 + 32) = 2048;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "Processing state update. Selector=<%s, %s, %s>, Count=%ld", (uint8_t *)v15, 0x2Au);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  id v16 = [self sharedApplication];
  uint64_t v17 = swift_allocObject();
  swift_weakInit();
  uint64_t v18 = (void *)swift_allocObject();
  v18[2] = v17;
  v18[3] = v6;
  v18[4] = v11;
  v18[5] = a2;
  v18[6] = a3;
  aBlock[4] = (uint64_t)sub_1002761E4;
  aBlock[5] = (uint64_t)v18;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_10010A4D4;
  aBlock[3] = (uint64_t)&unk_100E0BFB8;
  uint64_t v19 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  [v16 installCACommitCompletionBlock:v19];
  _Block_release(v19);
}

void sub_100254E6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = UnsafeMutableRawPointer.hashValue.getter();
  swift_beginAccess();
  uint64_t v7 = *(void *)(v3 + 16);
  if (*(void *)(v7 + 16) && (unint64_t v8 = sub_1002109DC(v6), (v9 & 1) != 0)) {
    uint64_t v10 = *(void *)(*(void *)(v7 + 56) + 8 * v8);
  }
  else {
    uint64_t v10 = 0;
  }
  swift_endAccess();
  uint64_t v11 = v10 + 1;
  if (__OFADD__(v10, 1))
  {
    __break(1u);
  }
  else
  {
    swift_beginAccess();
    sub_100210878();
    swift_endAccess();
    if (qword_100E62828 == -1) {
      goto LABEL_7;
    }
  }
  swift_once();
LABEL_7:
  uint64_t v12 = type metadata accessor for Logger();
  sub_1002102B0(v12, (uint64_t)qword_100F51F80);
  char v13 = Logger.logObject.getter();
  os_log_type_t v14 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = swift_slowAlloc();
    aBlock[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v15 = 136315906;
    sub_10016414C(0x746174536E69614DLL, 0xE900000000000065, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v15 + 12) = 2080;
    sub_10016414C(0xD000000000000011, 0x8000000100C97230, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v15 + 22) = 2080;
    sub_10016414C(0xD000000000000015, 0x8000000100C97250, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v15 + 32) = 2048;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "Processing state update. Selector=<%s, %s, %s>, Count=%ld", (uint8_t *)v15, 0x2Au);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  id v16 = [self sharedApplication];
  uint64_t v17 = swift_allocObject();
  swift_weakInit();
  uint64_t v18 = (void *)swift_allocObject();
  v18[2] = v17;
  v18[3] = v6;
  v18[4] = v11;
  v18[5] = a2;
  v18[6] = a3;
  aBlock[4] = (uint64_t)sub_100276310;
  aBlock[5] = (uint64_t)v18;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_10010A4D4;
  aBlock[3] = (uint64_t)&unk_100E0C120;
  uint64_t v19 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  [v16 installCACommitCompletionBlock:v19];
  _Block_release(v19);
}

void sub_100255230(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = UnsafeMutableRawPointer.hashValue.getter();
  swift_beginAccess();
  uint64_t v7 = *(void *)(v3 + 16);
  if (*(void *)(v7 + 16) && (unint64_t v8 = sub_1002109DC(v6), (v9 & 1) != 0)) {
    uint64_t v10 = *(void *)(*(void *)(v7 + 56) + 8 * v8);
  }
  else {
    uint64_t v10 = 0;
  }
  swift_endAccess();
  uint64_t v11 = v10 + 1;
  if (__OFADD__(v10, 1))
  {
    __break(1u);
  }
  else
  {
    swift_beginAccess();
    sub_100210878();
    swift_endAccess();
    if (qword_100E62828 == -1) {
      goto LABEL_7;
    }
  }
  swift_once();
LABEL_7:
  uint64_t v12 = type metadata accessor for Logger();
  sub_1002102B0(v12, (uint64_t)qword_100F51F80);
  char v13 = Logger.logObject.getter();
  os_log_type_t v14 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = swift_slowAlloc();
    aBlock[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v15 = 136315906;
    sub_10016414C(0x746174536E69614DLL, 0xE900000000000065, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v15 + 12) = 2080;
    sub_10016414C(0xD00000000000001ALL, 0x8000000100C97270, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v15 + 22) = 2080;
    sub_10016414C(0xD00000000000001ELL, 0x8000000100C97290, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v15 + 32) = 2048;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "Processing state update. Selector=<%s, %s, %s>, Count=%ld", (uint8_t *)v15, 0x2Au);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  id v16 = [self sharedApplication];
  uint64_t v17 = swift_allocObject();
  swift_weakInit();
  uint64_t v18 = (void *)swift_allocObject();
  v18[2] = v17;
  v18[3] = v6;
  v18[4] = v11;
  v18[5] = a2;
  v18[6] = a3;
  aBlock[4] = (uint64_t)sub_1002763B8;
  aBlock[5] = (uint64_t)v18;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_10010A4D4;
  aBlock[3] = (uint64_t)&unk_100E0C288;
  uint64_t v19 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  [v16 installCACommitCompletionBlock:v19];
  _Block_release(v19);
}

void sub_1002555F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = UnsafeMutableRawPointer.hashValue.getter();
  swift_beginAccess();
  uint64_t v7 = *(void *)(v3 + 16);
  if (*(void *)(v7 + 16) && (unint64_t v8 = sub_1002109DC(v6), (v9 & 1) != 0)) {
    uint64_t v10 = *(void *)(*(void *)(v7 + 56) + 8 * v8);
  }
  else {
    uint64_t v10 = 0;
  }
  swift_endAccess();
  uint64_t v11 = v10 + 1;
  if (__OFADD__(v10, 1))
  {
    __break(1u);
  }
  else
  {
    swift_beginAccess();
    sub_100210878();
    swift_endAccess();
    if (qword_100E62828 == -1) {
      goto LABEL_7;
    }
  }
  swift_once();
LABEL_7:
  uint64_t v12 = type metadata accessor for Logger();
  sub_1002102B0(v12, (uint64_t)qword_100F51F80);
  char v13 = Logger.logObject.getter();
  os_log_type_t v14 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = swift_slowAlloc();
    aBlock[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v15 = 136315906;
    sub_10016414C(0x746174536E69614DLL, 0xE900000000000065, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v15 + 12) = 2080;
    sub_10016414C(0xD000000000000019, 0x8000000100C972B0, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v15 + 22) = 2080;
    sub_10016414C(0xD00000000000001DLL, 0x8000000100C972D0, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v15 + 32) = 2048;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "Processing state update. Selector=<%s, %s, %s>, Count=%ld", (uint8_t *)v15, 0x2Au);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  id v16 = [self sharedApplication];
  uint64_t v17 = swift_allocObject();
  swift_weakInit();
  uint64_t v18 = (void *)swift_allocObject();
  v18[2] = v17;
  v18[3] = v6;
  v18[4] = v11;
  v18[5] = a2;
  v18[6] = a3;
  aBlock[4] = (uint64_t)sub_1002764B8;
  aBlock[5] = (uint64_t)v18;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_10010A4D4;
  aBlock[3] = (uint64_t)&unk_100E0C3F0;
  uint64_t v19 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  [v16 installCACommitCompletionBlock:v19];
  _Block_release(v19);
}

void (*sub_1002559B8())(void *__return_ptr)
{
  void (*v11)(void *__return_ptr);
  void (*v12)(void);
  uint64_t v14;
  void (*v15)(void *__return_ptr);

  uint64_t v1 = type metadata accessor for AirQualityDetailViewModel(0);
  __chkstk_darwin(v1 - 8);
  uint64_t v2 = sub_10017DF08(&qword_100E647A0);
  uint64_t v3 = __chkstk_darwin(v2);
  uint64_t v5 = (uint64_t *)((char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v3);
  uint64_t v7 = (uint64_t *)((char *)&v14 - v6);
  uint64_t v8 = v0 + *(void *)(*(void *)v0 + 120);
  swift_beginAccess();
  sub_10006DF38(v8, (uint64_t)v7, &qword_100E647A0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v10 = sub_10017DF08(&qword_100E647B8);
      uint64_t v11 = (void (*)(void *__return_ptr))*v7;
      sub_1001524C8((uint64_t)v7 + *(int *)(v10 + 48), (void (*)(void))type metadata accessor for AirQualityDetailViewModel);
    }
    else
    {
      sub_1001781AC((uint64_t)v7, &qword_100E647A0);
      return 0;
    }
  }
  else
  {
    uint64_t v12 = (void (*)(void))v7[2];
    ((void (*)(void *__return_ptr))*v7)(&v15);
    v12(&v15);
    swift_release();
    swift_release();
    sub_10017DF08(&qword_100E647B8);
    uint64_t v11 = v15;
    *uint64_t v5 = v15;
    sub_1001522B4();
    swift_storeEnumTagMultiPayload();
    swift_beginAccess();
    swift_retain();
    sub_1001DF004((uint64_t)v5, v8, &qword_100E647A0);
    swift_endAccess();
  }
  return v11;
}

uint64_t sub_100255C0C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for MoonDetailViewModel(0);
  __chkstk_darwin(v3 - 8);
  uint64_t v4 = type metadata accessor for MoonDetailInput(0);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10017DF08(&qword_100E647E8);
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v12 = (void (**)(void))((char *)&v20 - v11);
  uint64_t v13 = v1 + *(void *)(*(void *)v1 + 120);
  swift_beginAccess();
  sub_10006DF38(v13, (uint64_t)v12, &qword_100E647E8);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v15 = (uint64_t)v12 + *(int *)(sub_10017DF08(&qword_100E64808) + 48);
      sub_1001522B4();
      _s7Weather24LocationCompositionStateOwst_0(a1, 0, 1, v4);
      return sub_1001524C8(v15, (void (*)(void))type metadata accessor for MoonDetailViewModel);
    }
    else
    {
      _s7Weather24LocationCompositionStateOwst_0(a1, 1, 1, v4);
      return sub_1001781AC((uint64_t)v12, &qword_100E647E8);
    }
  }
  else
  {
    uint64_t v17 = *v12;
    uint64_t v21 = a1;
    uint64_t v18 = v12[2];
    v17();
    ((void (*)(char *))v18)(v6);
    swift_release();
    swift_release();
    sub_10017DF08(&qword_100E64808);
    sub_100136460();
    sub_1001522B4();
    swift_storeEnumTagMultiPayload();
    swift_beginAccess();
    sub_1001DF004((uint64_t)v10, v13, &qword_100E647E8);
    swift_endAccess();
    uint64_t v19 = v21;
    sub_1001522B4();
    return _s7Weather24LocationCompositionStateOwst_0(v19, 0, 1, v4);
  }
}

void (*sub_100255F3C())(uint64_t *__return_ptr, uint64_t)
{
  void (*v3)(uint64_t *__return_ptr, uint64_t);
  void (*v4)(_OWORD *__return_ptr, uint64_t *);
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  long long v14;
  long long v15;
  long long v16;
  uint64_t v17;
  char v18;
  long long v20;
  long long v21;
  uint64_t v22;
  uint64_t v23;
  _OWORD v24[6];
  uint64_t v25;

  uint64_t v1 = v0;
  swift_beginAccess();
  uint64_t v3 = *(void (**)(uint64_t *__return_ptr, uint64_t))(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 24);
  uint64_t v4 = *(void (**)(_OWORD *__return_ptr, uint64_t *))(v0 + 32);
  uint64_t v5 = *(unsigned __int8 *)(v0 + 120);
  if (*(unsigned char *)(v0 + 120))
  {
    uint64_t v6 = 0;
    if (v5 == 1)
    {
      swift_retain();
      sub_100274EDC(v2);
      sub_100274E38(v2);
      return v3;
    }
  }
  else
  {
    swift_retain();
    uint64_t v7 = swift_retain();
    v3(&v25, v7);
    v4(v24, &v25);
    swift_release();
    swift_release();
    uint64_t v8 = *(void *)(v0 + 32);
    uint64_t v22 = *(void *)(v0 + 24);
    uint64_t v23 = *(void *)(v0 + 16);
    uint64_t v9 = *(void *)(v0 + 40);
    uint64_t v10 = *(void *)(v0 + 48);
    uint64_t v11 = *(void *)(v0 + 56);
    uint64_t v12 = *(void *)(v0 + 64);
    uint64_t v13 = *(void *)(v0 + 72);
    uint64_t v20 = *(_OWORD *)(v0 + 96);
    uint64_t v21 = *(_OWORD *)(v0 + 80);
    os_log_type_t v14 = v24[1];
    *(_OWORD *)(v0 + 24) = v24[0];
    *(_OWORD *)(v0 + 40) = v14;
    uint64_t v15 = v24[3];
    *(_OWORD *)(v0 + 56) = v24[2];
    *(_OWORD *)(v0 + 72) = v15;
    id v16 = v24[5];
    *(_OWORD *)(v0 + 88) = v24[4];
    uint64_t v6 = v25;
    uint64_t v17 = *(void *)(v1 + 112);
    uint64_t v18 = *(unsigned char *)(v1 + 120);
    *(void *)(v1 + 16) = v25;
    *(_OWORD *)(v1 + 104) = v16;
    *(unsigned char *)(v1 + 120) = 1;
    swift_retain();
    sub_100274CF4(v23, v22, v8, v9, v10, v11, v12, v13, v21, *((uint64_t *)&v21 + 1), v20, *((uint64_t *)&v20 + 1), v17, v18);
  }
  return (void (*)(uint64_t *__return_ptr, uint64_t))v6;
}

uint64_t sub_100256138@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for ConditionDetailViewModel(0);
  __chkstk_darwin(v3 - 8);
  uint64_t v4 = type metadata accessor for ConditionDetailInput(0);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10017DF08(&qword_100E64840);
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v12 = (void (**)(void))((char *)&v20 - v11);
  uint64_t v13 = v1 + *(void *)(*(void *)v1 + 120);
  swift_beginAccess();
  sub_10006DF38(v13, (uint64_t)v12, &qword_100E64840);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v15 = (uint64_t)v12 + *(int *)(sub_10017DF08(&qword_100E64860) + 48);
      sub_1001522B4();
      _s7Weather24LocationCompositionStateOwst_0(a1, 0, 1, v4);
      return sub_1001524C8(v15, (void (*)(void))type metadata accessor for ConditionDetailViewModel);
    }
    else
    {
      _s7Weather24LocationCompositionStateOwst_0(a1, 1, 1, v4);
      return sub_1001781AC((uint64_t)v12, &qword_100E64840);
    }
  }
  else
  {
    uint64_t v17 = *v12;
    uint64_t v21 = a1;
    uint64_t v18 = v12[2];
    v17();
    ((void (*)(char *))v18)(v6);
    swift_release();
    swift_release();
    sub_10017DF08(&qword_100E64860);
    sub_100136460();
    sub_1001522B4();
    swift_storeEnumTagMultiPayload();
    swift_beginAccess();
    sub_1001DF004((uint64_t)v10, v13, &qword_100E64840);
    swift_endAccess();
    uint64_t v19 = v21;
    sub_1001522B4();
    return _s7Weather24LocationCompositionStateOwst_0(v19, 0, 1, v4);
  }
}

uint64_t sub_100256468@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for UnitsConfigurationViewModel(0);
  __chkstk_darwin(v3 - 8);
  uint64_t v4 = sub_10017DF08(&qword_100E64878);
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v40 - v8;
  uint64_t v10 = v1 + *(void *)(*(void *)v1 + 120);
  swift_beginAccess();
  sub_10006DF38(v10, (uint64_t)v9, &qword_100E64878);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v12 = (uint64_t)&v9[*(int *)(sub_10017DF08(&qword_100E64888) + 48)];
      uint64_t v13 = *((void *)v9 + 6);
      __int16 v14 = v9[56];
      if (v9[57]) {
        __int16 v15 = 256;
      }
      else {
        __int16 v15 = 0;
      }
      long long v16 = *((_OWORD *)v9 + 1);
      *(_OWORD *)a1 = *(_OWORD *)v9;
      *(_OWORD *)(a1 + 16) = v16;
      *(_OWORD *)(a1 + 32) = *((_OWORD *)v9 + 2);
      *(void *)(a1 + 48) = v13;
      *(_WORD *)(a1 + 56) = v15 | v14;
      return sub_1001524C8(v12, (void (*)(void))type metadata accessor for UnitsConfigurationViewModel);
    }
    else
    {
      *(void *)a1 = 1;
      *(_OWORD *)(a1 + 8) = 0u;
      *(_OWORD *)(a1 + 24) = 0u;
      *(_OWORD *)(a1 + 40) = 0u;
      *(_WORD *)(a1 + 56) = 0;
      return sub_1001781AC((uint64_t)v9, &qword_100E64878);
    }
  }
  else
  {
    uint64_t v18 = (void (*)(void *))*((void *)v9 + 2);
    (*(void (**)(void *__return_ptr))v9)(v45);
    v18(v45);
    swift_release();
    swift_release();
    sub_10017DF08(&qword_100E64888);
    uint64_t v19 = (void *)v45[0];
    uint64_t v20 = (void *)v45[1];
    uint64_t v21 = (void *)v45[2];
    uint64_t v22 = v46;
    uint64_t v23 = v47;
    char v24 = v48;
    id v42 = v46;
    id v43 = v47;
    uint64_t v25 = v49;
    __int16 v26 = v50;
    char v27 = v51;
    int v44 = v51;
    *(void *)uint64_t v7 = v45[0];
    *((void *)v7 + 1) = v20;
    *((void *)v7 + 2) = v21;
    *((void *)v7 + 3) = v22;
    *((void *)v7 + 4) = v23;
    *((void *)v7 + 5) = v24;
    long long v28 = v24;
    id v40 = v21;
    uint64_t v41 = v24;
    *((void *)v7 + 6) = v25;
    v7[56] = v26;
    v7[57] = v27;
    sub_1001522B4();
    swift_storeEnumTagMultiPayload();
    swift_beginAccess();
    id v29 = v28;
    id v30 = v19;
    id v31 = v20;
    id v32 = v40;
    id v33 = v40;
    id v34 = v42;
    id v35 = v42;
    id v36 = v43;
    id v37 = v43;
    sub_10027517C(v25, v26);
    sub_1001DF004((uint64_t)v7, v10, &qword_100E64878);
    uint64_t result = swift_endAccess();
    if (v44) {
      __int16 v38 = 256;
    }
    else {
      __int16 v38 = 0;
    }
    *(void *)a1 = v19;
    *(void *)(a1 + 8) = v20;
    *(void *)(a1 + 16) = v32;
    *(void *)(a1 + 24) = v34;
    uint64_t v39 = v41;
    *(void *)(a1 + 32) = v36;
    *(void *)(a1 + 40) = v39;
    *(void *)(a1 + 48) = v25;
    *(_WORD *)(a1 + 56) = v38 | v26;
  }
  return result;
}

uint64_t sub_100256798@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for DayPickerViewModel(0);
  __chkstk_darwin(v3 - 8);
  uint64_t v4 = type metadata accessor for DayPickerInput();
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10017DF08(&qword_100E648A0);
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v12 = (void (**)(void))((char *)&v20 - v11);
  uint64_t v13 = v1 + *(void *)(*(void *)v1 + 120);
  swift_beginAccess();
  sub_10006DF38(v13, (uint64_t)v12, &qword_100E648A0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v15 = (uint64_t)v12 + *(int *)(sub_10017DF08(&qword_100E648C0) + 48);
      sub_1001522B4();
      _s7Weather24LocationCompositionStateOwst_0(a1, 0, 1, v4);
      return sub_1001524C8(v15, (void (*)(void))type metadata accessor for DayPickerViewModel);
    }
    else
    {
      _s7Weather24LocationCompositionStateOwst_0(a1, 1, 1, v4);
      return sub_1001781AC((uint64_t)v12, &qword_100E648A0);
    }
  }
  else
  {
    uint64_t v17 = *v12;
    uint64_t v21 = a1;
    uint64_t v18 = v12[2];
    v17();
    ((void (*)(char *))v18)(v6);
    swift_release();
    swift_release();
    sub_10017DF08(&qword_100E648C0);
    sub_100136460();
    sub_1001522B4();
    swift_storeEnumTagMultiPayload();
    swift_beginAccess();
    sub_1001DF004((uint64_t)v10, v13, &qword_100E648A0);
    swift_endAccess();
    uint64_t v19 = v21;
    sub_1001522B4();
    return _s7Weather24LocationCompositionStateOwst_0(v19, 0, 1, v4);
  }
}

void (*sub_100256AC8())(void *__return_ptr)
{
  void (*v11)(void *__return_ptr);
  void (*v12)(void);
  uint64_t v14;
  void (*v15)(void *__return_ptr);

  uint64_t v1 = type metadata accessor for VFXTestViewModel();
  __chkstk_darwin(v1 - 8);
  uint64_t v2 = sub_10017DF08(&qword_100E64820);
  __chkstk_darwin(v2);
  uint64_t v4 = (uint64_t *)((char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v5);
  uint64_t v7 = (uint64_t *)((char *)&v14 - v6);
  uint64_t v8 = v0 + *(void *)(*(void *)v0 + 120);
  swift_beginAccess();
  sub_10006DF38(v8, (uint64_t)v7, &qword_100E64820);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v10 = sub_10017DF08(&qword_100E64828);
      uint64_t v11 = (void (*)(void *__return_ptr))*v7;
      sub_1001524C8((uint64_t)v7 + *(int *)(v10 + 48), (void (*)(void))type metadata accessor for VFXTestViewModel);
    }
    else
    {
      sub_1001781AC((uint64_t)v7, &qword_100E64820);
      return 0;
    }
  }
  else
  {
    uint64_t v12 = (void (*)(void))v7[2];
    ((void (*)(void *__return_ptr))*v7)(&v15);
    v12(&v15);
    swift_release();
    swift_release();
    sub_10017DF08(&qword_100E64828);
    uint64_t v11 = v15;
    *uint64_t v4 = v15;
    sub_1001522B4();
    swift_storeEnumTagMultiPayload();
    swift_beginAccess();
    swift_retain();
    sub_1001DF004((uint64_t)v4, v8, &qword_100E64820);
    swift_endAccess();
  }
  return v11;
}

uint64_t sub_100256D1C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for WeatherMenuViewModel();
  __chkstk_darwin(v3 - 8);
  uint64_t v4 = type metadata accessor for WeatherMenuInput();
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10017DF08(&qword_100E648F0);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v12 = (void (**)(void))((char *)&v20 - v11);
  uint64_t v13 = v1 + *(void *)(*(void *)v1 + 120);
  swift_beginAccess();
  sub_10006DF38(v13, (uint64_t)v12, &qword_100E648F0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v15 = (uint64_t)v12 + *(int *)(sub_10017DF08(&qword_100E64910) + 48);
      sub_1001522B4();
      _s7Weather24LocationCompositionStateOwst_0(a1, 0, 1, v4);
      return sub_1001524C8(v15, (void (*)(void))type metadata accessor for WeatherMenuViewModel);
    }
    else
    {
      _s7Weather24LocationCompositionStateOwst_0(a1, 1, 1, v4);
      return sub_1001781AC((uint64_t)v12, &qword_100E648F0);
    }
  }
  else
  {
    uint64_t v17 = *v12;
    uint64_t v21 = a1;
    uint64_t v18 = v12[2];
    v17();
    ((void (*)(char *))v18)(v6);
    swift_release();
    swift_release();
    sub_10017DF08(&qword_100E64910);
    sub_100136460();
    sub_1001522B4();
    swift_storeEnumTagMultiPayload();
    swift_beginAccess();
    sub_1001DF004((uint64_t)v9, v13, &qword_100E648F0);
    swift_endAccess();
    uint64_t v19 = v21;
    sub_1001522B4();
    return _s7Weather24LocationCompositionStateOwst_0(v19, 0, 1, v4);
  }
}

BOOL sub_10025704C()
{
  void (*v2)(uint64_t *__return_ptr, uint64_t);
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;

  swift_beginAccess();
  if (*(unsigned char *)(v0 + 48)) {
    return *(unsigned char *)(v0 + 48) != 1;
  }
  uint64_t v2 = *(void (**)(uint64_t *__return_ptr, uint64_t))(v0 + 32);
  uint64_t v3 = *(uint64_t (**)(uint64_t))(v0 + 16);
  swift_retain();
  uint64_t v4 = swift_retain();
  uint64_t v5 = v3(v4);
  v2(&v11, v5);
  swift_release();
  swift_release();
  uint64_t v6 = *(void *)(v0 + 16);
  uint64_t v7 = *(void *)(v0 + 24);
  uint64_t v8 = *(void *)(v0 + 32);
  uint64_t v9 = *(void *)(v0 + 40);
  *(void *)(v0 + 16) = v11;
  *(void *)(v0 + 24) = 0;
  *(void *)(v0 + 32) = 0;
  *(void *)(v0 + 40) = 0;
  uint64_t v10 = *(unsigned char *)(v0 + 48);
  *(unsigned char *)(v0 + 48) = 1;
  sub_100275674(v6, v7, v8, v9, v10);
  return 0;
}

uint64_t sub_100257124@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for LocationPreviewViewModel(0);
  __chkstk_darwin(v3 - 8);
  uint64_t v4 = type metadata accessor for LocationPreviewInput(0);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10017DF08(&qword_100E64938);
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v12 = (void (**)(void))((char *)&v20 - v11);
  uint64_t v13 = v1 + *(void *)(*(void *)v1 + 120);
  swift_beginAccess();
  sub_10006DF38(v13, (uint64_t)v12, &qword_100E64938);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v15 = (uint64_t)v12 + *(int *)(sub_10017DF08(&qword_100E64958) + 48);
      sub_1001522B4();
      _s7Weather24LocationCompositionStateOwst_0(a1, 0, 1, v4);
      return sub_1001524C8(v15, (void (*)(void))type metadata accessor for LocationPreviewViewModel);
    }
    else
    {
      _s7Weather24LocationCompositionStateOwst_0(a1, 1, 1, v4);
      return sub_1001781AC((uint64_t)v12, &qword_100E64938);
    }
  }
  else
  {
    uint64_t v17 = *v12;
    uint64_t v21 = a1;
    uint64_t v18 = v12[2];
    v17();
    ((void (*)(char *))v18)(v6);
    swift_release();
    swift_release();
    sub_10017DF08(&qword_100E64958);
    sub_100136460();
    sub_1001522B4();
    swift_storeEnumTagMultiPayload();
    swift_beginAccess();
    sub_1001DF004((uint64_t)v10, v13, &qword_100E64938);
    swift_endAccess();
    uint64_t v19 = v21;
    sub_1001522B4();
    return _s7Weather24LocationCompositionStateOwst_0(v19, 0, 1, v4);
  }
}

uint64_t sub_100257454@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for InteractiveMapViewModel();
  __chkstk_darwin(v3 - 8);
  uint64_t v4 = type metadata accessor for InteractiveMapInput();
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10017DF08(&qword_100E64970);
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v12 = (void (**)(void))((char *)&v20 - v11);
  uint64_t v13 = v1 + *(void *)(*(void *)v1 + 120);
  swift_beginAccess();
  sub_10006DF38(v13, (uint64_t)v12, &qword_100E64970);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v15 = (uint64_t)v12 + *(int *)(sub_10017DF08(&qword_100E64990) + 48);
      sub_1001522B4();
      _s7Weather24LocationCompositionStateOwst_0(a1, 0, 1, v4);
      return sub_1001524C8(v15, (void (*)(void))type metadata accessor for InteractiveMapViewModel);
    }
    else
    {
      _s7Weather24LocationCompositionStateOwst_0(a1, 1, 1, v4);
      return sub_1001781AC((uint64_t)v12, &qword_100E64970);
    }
  }
  else
  {
    uint64_t v17 = *v12;
    uint64_t v21 = a1;
    uint64_t v18 = v12[2];
    v17();
    ((void (*)(char *))v18)(v6);
    swift_release();
    swift_release();
    sub_10017DF08(&qword_100E64990);
    sub_100136460();
    sub_1001522B4();
    swift_storeEnumTagMultiPayload();
    swift_beginAccess();
    sub_1001DF004((uint64_t)v10, v13, &qword_100E64970);
    swift_endAccess();
    uint64_t v19 = v21;
    sub_1001522B4();
    return _s7Weather24LocationCompositionStateOwst_0(v19, 0, 1, v4);
  }
}

uint64_t sub_100257784@<X0>(uint64_t a1@<X8>)
{
  uint64_t HourPrecipitationDetailViewModel = type metadata accessor for NextHourPrecipitationDetailViewModel(0);
  __chkstk_darwin(HourPrecipitationDetailViewModel - 8);
  uint64_t HourPrecipitationDetailInput = type metadata accessor for NextHourPrecipitationDetailInput(0);
  __chkstk_darwin(HourPrecipitationDetailInput);
  uint64_t v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10017DF08(&qword_100E649A8);
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v12 = (void (**)(void))((char *)&v20 - v11);
  uint64_t v13 = v1 + *(void *)(*(void *)v1 + 120);
  swift_beginAccess();
  sub_10006DF38(v13, (uint64_t)v12, &qword_100E649A8);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v15 = (uint64_t)v12 + *(int *)(sub_10017DF08(&qword_100E649C8) + 48);
      sub_1001522B4();
      _s7Weather24LocationCompositionStateOwst_0(a1, 0, 1, HourPrecipitationDetailInput);
      return sub_1001524C8(v15, (void (*)(void))type metadata accessor for NextHourPrecipitationDetailViewModel);
    }
    else
    {
      _s7Weather24LocationCompositionStateOwst_0(a1, 1, 1, HourPrecipitationDetailInput);
      return sub_1001781AC((uint64_t)v12, &qword_100E649A8);
    }
  }
  else
  {
    uint64_t v17 = *v12;
    uint64_t v21 = a1;
    uint64_t v18 = v12[2];
    v17();
    ((void (*)(char *))v18)(v6);
    swift_release();
    swift_release();
    sub_10017DF08(&qword_100E649C8);
    sub_100136460();
    sub_1001522B4();
    swift_storeEnumTagMultiPayload();
    swift_beginAccess();
    sub_1001DF004((uint64_t)v10, v13, &qword_100E649A8);
    swift_endAccess();
    uint64_t v19 = v21;
    sub_1001522B4();
    return _s7Weather24LocationCompositionStateOwst_0(v19, 0, 1, HourPrecipitationDetailInput);
  }
}

uint64_t sub_100257AB4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for ListViewModel();
  __chkstk_darwin(v3 - 8);
  uint64_t v4 = type metadata accessor for ListInput(0);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10017DF08(&qword_100E64AC8);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v12 = (void (**)(void))((char *)&v20 - v11);
  uint64_t v13 = v1 + *(void *)(*(void *)v1 + 120);
  swift_beginAccess();
  sub_10006DF38(v13, (uint64_t)v12, &qword_100E64AC8);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v15 = (uint64_t)v12 + *(int *)(sub_10017DF08(&qword_100E64AE8) + 48);
      sub_1001522B4();
      _s7Weather24LocationCompositionStateOwst_0(a1, 0, 1, v4);
      return sub_1001524C8(v15, (void (*)(void))type metadata accessor for ListViewModel);
    }
    else
    {
      _s7Weather24LocationCompositionStateOwst_0(a1, 1, 1, v4);
      return sub_1001781AC((uint64_t)v12, &qword_100E64AC8);
    }
  }
  else
  {
    uint64_t v17 = *v12;
    uint64_t v21 = a1;
    uint64_t v18 = v12[2];
    v17();
    ((void (*)(char *))v18)(v6);
    swift_release();
    swift_release();
    sub_10017DF08(&qword_100E64AE8);
    sub_100136460();
    sub_1001522B4();
    swift_storeEnumTagMultiPayload();
    swift_beginAccess();
    sub_1001DF004((uint64_t)v9, v13, &qword_100E64AC8);
    swift_endAccess();
    uint64_t v19 = v21;
    sub_1001522B4();
    return _s7Weather24LocationCompositionStateOwst_0(v19, 0, 1, v4);
  }
}

void (*sub_100257DE4())(void *__return_ptr, void)
{
  void (*v3)(void *__return_ptr, void);
  uint64_t v4;
  void (*v5)(_OWORD *__return_ptr, uint64_t *);
  int v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  long long v21;
  long long v22;
  long long v23;
  char v24;
  uint64_t v25;
  __int16 v26;
  uint64_t v28;
  uint64_t v29;
  long long v30;
  uint64_t v31;
  long long v32;
  void (*v33)(void *__return_ptr, void);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _OWORD v37[6];
  char v38;
  uint64_t v39;

  uint64_t v1 = v0;
  swift_beginAccess();
  uint64_t v3 = *(void (**)(void *__return_ptr, void))(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 24);
  uint64_t v5 = *(void (**)(_OWORD *__return_ptr, uint64_t *))(v0 + 32);
  uint64_t v4 = *(void *)(v0 + 40);
  uint64_t v6 = *(unsigned __int8 *)(v0 + 121);
  if (*(unsigned char *)(v0 + 121))
  {
    uint64_t v7 = 0;
    if (v6 == 1)
    {
      id v33 = v3;
      uint64_t v8 = *(unsigned char *)(v1 + 120);
      uint64_t v9 = *(void *)(v1 + 104);
      uint64_t v10 = *(void *)(v1 + 112);
      uint64_t v11 = *(void *)(v1 + 88);
      id v29 = *(void *)(v1 + 96);
      id v31 = *(void *)(v1 + 80);
      uint64_t v12 = *(void *)(v1 + 64);
      id v35 = *(void *)(v1 + 72);
      uint64_t v13 = *(void *)(v1 + 56);
      long long v28 = *(void *)(v1 + 48);
      swift_retain();
      sub_100275D44(v2, (uint64_t)v5, v4, v28, v13, v12, v35, v31, v11, v29, v9, v10, v8);
      sub_100275C08(v2, (uint64_t)v5, v4, v28, v13, v12, v35, v31, v11, v29, v9, v10, v8);
      return v33;
    }
  }
  else
  {
    swift_retain();
    __int16 v14 = swift_retain();
    v3(&v39, v14);
    v5(v37, &v39);
    swift_release();
    swift_release();
    uint64_t v15 = *(void *)(v0 + 32);
    id v34 = *(void *)(v0 + 24);
    id v36 = *(void *)(v0 + 16);
    long long v16 = *(void *)(v0 + 40);
    uint64_t v17 = *(void *)(v0 + 48);
    uint64_t v18 = *(void *)(v0 + 56);
    uint64_t v19 = *(void *)(v0 + 64);
    uint64_t v20 = *(void *)(v0 + 72);
    id v30 = *(_OWORD *)(v0 + 96);
    id v32 = *(_OWORD *)(v0 + 80);
    uint64_t v21 = v37[1];
    *(_OWORD *)(v0 + 24) = v37[0];
    *(_OWORD *)(v0 + 40) = v21;
    uint64_t v22 = v37[3];
    *(_OWORD *)(v0 + 56) = v37[2];
    *(_OWORD *)(v0 + 72) = v22;
    uint64_t v23 = v37[5];
    *(_OWORD *)(v0 + 88) = v37[4];
    uint64_t v7 = v39;
    char v24 = v38;
    uint64_t v25 = *(void *)(v1 + 112);
    __int16 v26 = *(_WORD *)(v1 + 120);
    *(void *)(v1 + 16) = v39;
    *(_OWORD *)(v1 + 104) = v23;
    *(unsigned char *)(v1 + 120) = v24;
    *(unsigned char *)(v1 + 121) = 1;
    swift_retain();
    sub_100275AC0(v36, v34, v15, v16, v17, v18, v19, v20, v32, *((uint64_t *)&v32 + 1), v30, *((uint64_t *)&v30 + 1), v25, v26, SHIBYTE(v26));
  }
  return (void (*)(void *__return_ptr, void))v7;
}

uint64_t sub_100257FF0@<X0>(uint64_t a1@<X8>)
{
  void (*v14)(uint64_t *__return_ptr, char *);
  char *v15;
  char v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;

  uint64_t v3 = type metadata accessor for NotificationsOptInInput();
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10017DF08(&qword_100E64B10);
  uint64_t v7 = __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v21 - v10;
  uint64_t v12 = v1 + *(void *)(*(void *)v1 + 120);
  swift_beginAccess();
  sub_10006DF38(v12, (uint64_t)v11, &qword_100E64B10);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload != 1)
    {
      uint64_t v18 = a1;
      uint64_t v19 = 1;
      return _s7Weather24LocationCompositionStateOwst_0(v18, v19, 1, v3);
    }
  }
  else
  {
    __int16 v14 = (void (*)(uint64_t *__return_ptr, char *))*((void *)v11 + 2);
    (*(void (**)(void))v11)();
    v14(&v22, v5);
    swift_release();
    swift_release();
    uint64_t v15 = &v9[*(int *)(sub_10017DF08(&qword_100E64B28) + 48)];
    sub_100136460();
    long long v16 = BYTE2(v22);
    uint64_t v17 = BYTE3(v22);
    *(_WORD *)uint64_t v15 = v22;
    v15[2] = v16;
    void v15[3] = v17;
    swift_storeEnumTagMultiPayload();
    swift_beginAccess();
    sub_1001DF004((uint64_t)v9, v12, &qword_100E64B10);
    swift_endAccess();
  }
  sub_1001522B4();
  uint64_t v18 = a1;
  uint64_t v19 = 0;
  return _s7Weather24LocationCompositionStateOwst_0(v18, v19, 1, v3);
}

uint64_t sub_100258268@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for AveragesDetailViewModel();
  __chkstk_darwin(v3 - 8);
  uint64_t v4 = type metadata accessor for AveragesDetailInput(0);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10017DF08(&qword_100E64B60);
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v12 = (void (**)(void))((char *)&v20 - v11);
  uint64_t v13 = v1 + *(void *)(*(void *)v1 + 120);
  swift_beginAccess();
  sub_10006DF38(v13, (uint64_t)v12, &qword_100E64B60);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v15 = (uint64_t)v12 + *(int *)(sub_10017DF08(&qword_100E64B80) + 48);
      sub_1001522B4();
      _s7Weather24LocationCompositionStateOwst_0(a1, 0, 1, v4);
      return sub_1001524C8(v15, (void (*)(void))type metadata accessor for AveragesDetailViewModel);
    }
    else
    {
      _s7Weather24LocationCompositionStateOwst_0(a1, 1, 1, v4);
      return sub_1001781AC((uint64_t)v12, &qword_100E64B60);
    }
  }
  else
  {
    uint64_t v17 = *v12;
    uint64_t v21 = a1;
    uint64_t v18 = v12[2];
    v17();
    ((void (*)(char *))v18)(v6);
    swift_release();
    swift_release();
    sub_10017DF08(&qword_100E64B80);
    sub_100136460();
    sub_1001522B4();
    swift_storeEnumTagMultiPayload();
    swift_beginAccess();
    sub_1001DF004((uint64_t)v10, v13, &qword_100E64B60);
    swift_endAccess();
    uint64_t v19 = v21;
    sub_1001522B4();
    return _s7Weather24LocationCompositionStateOwst_0(v19, 0, 1, v4);
  }
}

uint64_t sub_100258598@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for MoonScrubberViewModel();
  __chkstk_darwin(v3 - 8);
  uint64_t v4 = type metadata accessor for MoonScrubberInput();
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10017DF08(&qword_100E64B98);
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v12 = (void (**)(void))((char *)&v20 - v11);
  uint64_t v13 = v1 + *(void *)(*(void *)v1 + 120);
  swift_beginAccess();
  sub_10006DF38(v13, (uint64_t)v12, &qword_100E64B98);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v15 = (uint64_t)v12 + *(int *)(sub_10017DF08(&qword_100E64BB8) + 48);
      sub_1001522B4();
      _s7Weather24LocationCompositionStateOwst_0(a1, 0, 1, v4);
      return sub_1001524C8(v15, (void (*)(void))type metadata accessor for MoonScrubberViewModel);
    }
    else
    {
      _s7Weather24LocationCompositionStateOwst_0(a1, 1, 1, v4);
      return sub_1001781AC((uint64_t)v12, &qword_100E64B98);
    }
  }
  else
  {
    uint64_t v17 = *v12;
    uint64_t v21 = a1;
    uint64_t v18 = v12[2];
    v17();
    ((void (*)(char *))v18)(v6);
    swift_release();
    swift_release();
    sub_10017DF08(&qword_100E64BB8);
    sub_100136460();
    sub_1001522B4();
    swift_storeEnumTagMultiPayload();
    swift_beginAccess();
    sub_1001DF004((uint64_t)v10, v13, &qword_100E64B98);
    swift_endAccess();
    uint64_t v19 = v21;
    sub_1001522B4();
    return _s7Weather24LocationCompositionStateOwst_0(v19, 0, 1, v4);
  }
}

uint64_t sub_1002588C8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for SunriseSunsetDetailViewModel();
  __chkstk_darwin(v3 - 8);
  uint64_t v4 = type metadata accessor for SunriseSunsetDetailInput(0);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10017DF08(&qword_100E64BD0);
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v12 = (void (**)(void))((char *)&v20 - v11);
  uint64_t v13 = v1 + *(void *)(*(void *)v1 + 120);
  swift_beginAccess();
  sub_10006DF38(v13, (uint64_t)v12, &qword_100E64BD0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v15 = (uint64_t)v12 + *(int *)(sub_10017DF08(&qword_100E64BF0) + 48);
      sub_1001522B4();
      _s7Weather24LocationCompositionStateOwst_0(a1, 0, 1, v4);
      return sub_1001524C8(v15, (void (*)(void))type metadata accessor for SunriseSunsetDetailViewModel);
    }
    else
    {
      _s7Weather24LocationCompositionStateOwst_0(a1, 1, 1, v4);
      return sub_1001781AC((uint64_t)v12, &qword_100E64BD0);
    }
  }
  else
  {
    uint64_t v17 = *v12;
    uint64_t v21 = a1;
    uint64_t v18 = v12[2];
    v17();
    ((void (*)(char *))v18)(v6);
    swift_release();
    swift_release();
    sub_10017DF08(&qword_100E64BF0);
    sub_100136460();
    sub_1001522B4();
    swift_storeEnumTagMultiPayload();
    swift_beginAccess();
    sub_1001DF004((uint64_t)v10, v13, &qword_100E64BD0);
    swift_endAccess();
    uint64_t v19 = v21;
    sub_1001522B4();
    return _s7Weather24LocationCompositionStateOwst_0(v19, 0, 1, v4);
  }
}

void *sub_100258BF8()
{
  void (*v4)(void *__return_ptr, void *);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  id v17;
  void *v19;
  void v20[2];
  char v21;
  void v22[2];
  unsigned __int8 v23;

  uint64_t v1 = v0;
  swift_beginAccess();
  uint64_t v2 = *(void **)(v0 + 16);
  if (*(unsigned char *)(v0 + 57))
  {
    if (*(unsigned char *)(v0 + 57) == 1) {
      id v3 = v2;
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v4 = *(void (**)(void *__return_ptr, void *))(v0 + 32);
    swift_retain();
    uint64_t v5 = swift_retain();
    ((void (*)(void *__return_ptr, uint64_t))v2)(v22, v5);
    v4(v20, v22);
    swift_release();
    swift_release();
    uint64_t v2 = (void *)v22[0];
    uint64_t v6 = v22[1];
    uint64_t v7 = v23;
    uint64_t v8 = v20[0];
    uint64_t v9 = v20[1];
    uint64_t v10 = v21;
    uint64_t v11 = *(void *)(v1 + 24);
    uint64_t v19 = *(void **)(v1 + 16);
    uint64_t v12 = *(void *)(v1 + 32);
    uint64_t v13 = *(void **)(v1 + 40);
    __int16 v14 = *(void *)(v1 + 48);
    *(void *)(v1 + 16) = v22[0];
    *(void *)(v1 + 24) = v6;
    *(void *)(v1 + 32) = v7;
    *(void *)(v1 + 40) = v8;
    *(void *)(v1 + 48) = v9;
    uint64_t v15 = *(unsigned __int8 *)(v1 + 56);
    *(unsigned char *)(v1 + 56) = v10;
    long long v16 = *(unsigned char *)(v1 + 57);
    *(unsigned char *)(v1 + 57) = 1;
    uint64_t v17 = v2;
    sub_100276224(v19, v11, v12, v13, v14, v15, v16);
  }
  return v2;
}

uint64_t sub_100258D40@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for MoonCalendarViewModel();
  __chkstk_darwin(v3 - 8);
  uint64_t v4 = type metadata accessor for MoonCalendarInput();
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10017DF08(&qword_100E64C18);
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v12 = (void (**)(void))((char *)&v20 - v11);
  uint64_t v13 = v1 + *(void *)(*(void *)v1 + 120);
  swift_beginAccess();
  sub_10006DF38(v13, (uint64_t)v12, &qword_100E64C18);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v15 = (uint64_t)v12 + *(int *)(sub_10017DF08(&qword_100E64C38) + 48);
      sub_1001522B4();
      _s7Weather24LocationCompositionStateOwst_0(a1, 0, 1, v4);
      return sub_1001524C8(v15, (void (*)(void))type metadata accessor for MoonCalendarViewModel);
    }
    else
    {
      _s7Weather24LocationCompositionStateOwst_0(a1, 1, 1, v4);
      return sub_1001781AC((uint64_t)v12, &qword_100E64C18);
    }
  }
  else
  {
    uint64_t v17 = *v12;
    uint64_t v21 = a1;
    uint64_t v18 = v12[2];
    v17();
    ((void (*)(char *))v18)(v6);
    swift_release();
    swift_release();
    sub_10017DF08(&qword_100E64C38);
    sub_100136460();
    sub_1001522B4();
    swift_storeEnumTagMultiPayload();
    swift_beginAccess();
    sub_1001DF004((uint64_t)v10, v13, &qword_100E64C18);
    swift_endAccess();
    uint64_t v19 = v21;
    sub_1001522B4();
    return _s7Weather24LocationCompositionStateOwst_0(v19, 0, 1, v4);
  }
}

uint64_t sub_100259070@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for HomeAndWorkRefinementViewModel(0);
  __chkstk_darwin(v3 - 8);
  uint64_t v4 = type metadata accessor for HomeAndWorkRefinementInput();
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10017DF08(&qword_100E64C50);
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v12 = (void (**)(void))((char *)&v20 - v11);
  uint64_t v13 = v1 + *(void *)(*(void *)v1 + 120);
  swift_beginAccess();
  sub_10006DF38(v13, (uint64_t)v12, &qword_100E64C50);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v15 = (uint64_t)v12 + *(int *)(sub_10017DF08(&qword_100E64C70) + 48);
      sub_1001522B4();
      _s7Weather24LocationCompositionStateOwst_0(a1, 0, 1, v4);
      return sub_1001524C8(v15, (void (*)(void))type metadata accessor for HomeAndWorkRefinementViewModel);
    }
    else
    {
      _s7Weather24LocationCompositionStateOwst_0(a1, 1, 1, v4);
      return sub_1001781AC((uint64_t)v12, &qword_100E64C50);
    }
  }
  else
  {
    uint64_t v17 = *v12;
    uint64_t v21 = a1;
    uint64_t v18 = v12[2];
    v17();
    ((void (*)(char *))v18)(v6);
    swift_release();
    swift_release();
    sub_10017DF08(&qword_100E64C70);
    sub_100136460();
    sub_1001522B4();
    swift_storeEnumTagMultiPayload();
    swift_beginAccess();
    sub_1001DF004((uint64_t)v10, v13, &qword_100E64C50);
    swift_endAccess();
    uint64_t v19 = v21;
    sub_1001522B4();
    return _s7Weather24LocationCompositionStateOwst_0(v19, 0, 1, v4);
  }
}

uint64_t sub_1002593A0@<X0>(uint64_t a1@<X8>)
{
  void (*v16)(_OWORD *__return_ptr, char *);
  char *v17;
  char v18;
  long long v19;
  long long v20;
  long long v21;
  _OWORD v23[6];
  char v24;

  uint64_t v3 = type metadata accessor for NotificationSettingsInput();
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0) + 16;
  uint64_t v6 = sub_10017DF08(&qword_100E64C88);
  uint64_t v7 = __chkstk_darwin(v6);
  uint64_t v9 = (char *)v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0) + 16;
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)v23 - v10 + 16;
  uint64_t v12 = v1 + *(void *)(*(void *)v1 + 120);
  swift_beginAccess();
  sub_10006DF38(v12, (uint64_t)v11, &qword_100E64C88);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      __int16 v14 = &v11[*(int *)(sub_10017DF08(&qword_100E64CA0) + 48)];
      sub_1001522B4();
      _s7Weather24LocationCompositionStateOwst_0(a1, 0, 1, v3);
      return sub_1002765BC(*(void *)v14, *((void *)v14 + 1), *((void *)v14 + 2), *((void *)v14 + 3), *((void *)v14 + 4), *((void *)v14 + 5), *((void *)v14 + 6), *((void *)v14 + 7), *((void *)v14 + 8), *((void *)v14 + 9), *((void *)v14 + 10), *((void *)v14 + 11), v14[96]);
    }
    else
    {
      _s7Weather24LocationCompositionStateOwst_0(a1, 1, 1, v3);
      return sub_1001781AC((uint64_t)v11, &qword_100E64C88);
    }
  }
  else
  {
    long long v16 = (void (*)(_OWORD *__return_ptr, char *))*((void *)v11 + 2);
    (*(void (**)(void))v11)();
    v16(v23, v5);
    swift_release();
    swift_release();
    uint64_t v17 = &v9[*(int *)(sub_10017DF08(&qword_100E64CA0) + 48)];
    sub_100136460();
    uint64_t v18 = v24;
    uint64_t v19 = v23[1];
    *(_OWORD *)uint64_t v17 = v23[0];
    *((_OWORD *)v17 + 1) = v19;
    uint64_t v20 = v23[3];
    *((_OWORD *)v17 + 2) = v23[2];
    *((_OWORD *)v17 + 3) = v20;
    uint64_t v21 = v23[5];
    *((_OWORD *)v17 + 4) = v23[4];
    *((_OWORD *)v17 + 5) = v21;
    v17[96] = v18;
    swift_storeEnumTagMultiPayload();
    swift_beginAccess();
    sub_1001DF004((uint64_t)v9, v12, &qword_100E64C88);
    swift_endAccess();
    sub_1001522B4();
    return _s7Weather24LocationCompositionStateOwst_0(a1, 0, 1, v3);
  }
}

uint64_t sub_1002596A0(uint64_t a1, uint64_t a2, void (*a3)(void *__return_ptr, void *, uint64_t (*)(uint64_t a1), void *), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v11 = v10;
  uint64_t v18 = (uint64_t (*)@<X0>(uint64_t *@<X8>))swift_allocObject();
  *((void *)v18 + 2) = a7;
  *((void *)v18 + 3) = a8;
  *((void *)v18 + 4) = a1;
  *((void *)v18 + 5) = a2;
  *((void *)v18 + 6) = a3;
  *((void *)v18 + 7) = a4;
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = a9;
  *(void *)(v19 + 24) = a10;
  uint64_t v20 = (uint64_t (**)@<X0>(uint64_t *@<X8>))(v11 + *(void *)(*(void *)v11 + 120));
  void *v20 = sub_100274A70;
  v20[1] = v18;
  v20[2] = (uint64_t (*)@<X0>(uint64_t *@<X8>))sub_100274A84;
  v20[3] = (uint64_t (*)@<X0>(uint64_t *@<X8>))v19;
  sub_10017DF08(&qword_100E647A0);
  swift_storeEnumTagMultiPayload();
  sub_1001AB3E0();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v21 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v22 = swift_allocObject();
  swift_weakInit();
  uint64_t v23 = (void *)swift_allocObject();
  v23[2] = v22;
  v23[3] = a5;
  v23[4] = a6;
  v23[5] = a7;
  v23[6] = a8;
  v23[7] = a9;
  v23[8] = a10;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  a3(v29, v21, sub_100274A90, v23);

  swift_release();
  swift_release();
  sub_1001B1E64(v29, v29[3]);
  swift_retain();
  dispatch thunk of Disposable.dispose(on:)();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v29);
  return v11;
}

#error "100259A08: call analysis failed (funcsize=93)"

#error "100259BB4: call analysis failed (funcsize=100)"

#error "100259D48: call analysis failed (funcsize=93)"

#error "100259EDC: call analysis failed (funcsize=93)"

#error "10025A070: call analysis failed (funcsize=93)"

#error "10025A204: call analysis failed (funcsize=93)"

#error "10025A398: call analysis failed (funcsize=93)"

#error "10025A538: call analysis failed (funcsize=97)"

#error "10025A6CC: call analysis failed (funcsize=93)"

#error "10025A860: call analysis failed (funcsize=93)"

#error "10025A9F4: call analysis failed (funcsize=93)"

#error "10025AB88: call analysis failed (funcsize=93)"

#error "10025AD34: call analysis failed (funcsize=100)"

#error "10025AEC8: call analysis failed (funcsize=93)"

#error "10025B05C: call analysis failed (funcsize=93)"

#error "10025B1F0: call analysis failed (funcsize=93)"

#error "10025B384: call analysis failed (funcsize=93)"

#error "10025B528: call analysis failed (funcsize=98)"

#error "10025B6BC: call analysis failed (funcsize=93)"

#error "10025B850: call analysis failed (funcsize=93)"

#error "10025B9E4: call analysis failed (funcsize=93)"

uint64_t sub_10025BA9C(void (*a1)(void *), uint64_t a2, void (*a3)(void *__return_ptr, uint64_t))
{
  uint64_t v5 = sub_10017DF08(&qword_100E64800);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  a3(v16, v6);
  a1(v16);
  swift_release();
  uint64_t v9 = type metadata accessor for MoonDetailInput(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v9) != 1) {
    return sub_1001522B4();
  }
  sub_1001781AC((uint64_t)v8, &qword_100E64800);
  v16[0] = 0;
  v16[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(82);
  v11._countAndFlagsBits = 0xD00000000000004BLL;
  v11._object = (void *)0x8000000100C96D70;
  String.append(_:)(v11);
  v12._countAndFlagsBits = 0x617465446E6F6F4DLL;
  v12._object = (void *)0xEF7475706E496C69;
  String.append(_:)(v12);
  v13._countAndFlagsBits = 8236;
  v13._object = (void *)0xE200000000000000;
  String.append(_:)(v13);
  v14._object = (void *)0x8000000100C96DC0;
  v14._countAndFlagsBits = 0xD000000000000013;
  String.append(_:)(v14);
  v15._countAndFlagsBits = 46;
  v15._object = (void *)0xE100000000000000;
  String.append(_:)(v15);
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10025BC80(void (*a1)(void *), uint64_t a2, void (*a3)(void *__return_ptr, uint64_t))
{
  uint64_t v5 = sub_10017DF08(&qword_100E64858);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  a3(v16, v6);
  a1(v16);
  swift_release();
  uint64_t v9 = type metadata accessor for ConditionDetailInput(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v9) != 1) {
    return sub_1001522B4();
  }
  sub_1001781AC((uint64_t)v8, &qword_100E64858);
  v16[0] = 0;
  v16[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(82);
  v11._countAndFlagsBits = 0xD00000000000004BLL;
  v11._object = (void *)0x8000000100C96D70;
  String.append(_:)(v11);
  v12._object = (void *)0x8000000100C96E00;
  v12._countAndFlagsBits = 0xD000000000000014;
  String.append(_:)(v12);
  v13._countAndFlagsBits = 8236;
  v13._object = (void *)0xE200000000000000;
  String.append(_:)(v13);
  v14._countAndFlagsBits = 0xD000000000000018;
  v14._object = (void *)0x8000000100C96E20;
  String.append(_:)(v14);
  v15._countAndFlagsBits = 46;
  v15._object = (void *)0xE100000000000000;
  String.append(_:)(v15);
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10025BE58@<X0>(void (*a1)(uint64_t *__return_ptr, uint64_t *)@<X0>, void (*a2)(uint64_t *__return_ptr)@<X2>, uint64_t a3@<X8>)
{
  a2(&v12);
  a1(&v13, &v12);
  uint64_t result = swift_release();
  if (v13 == 1)
  {
    uint64_t v13 = 0;
    *(void *)&long long v14 = 0xE000000000000000;
    _StringGuts.grow(_:)(82);
    v7._countAndFlagsBits = 0xD00000000000004BLL;
    v7._object = (void *)0x8000000100C96D70;
    String.append(_:)(v7);
    v8._object = (void *)0x8000000100C96E40;
    v8._countAndFlagsBits = 0xD000000000000017;
    String.append(_:)(v8);
    v9._countAndFlagsBits = 8236;
    v9._object = (void *)0xE200000000000000;
    String.append(_:)(v9);
    v10._countAndFlagsBits = 0xD00000000000001BLL;
    v10._object = (void *)0x8000000100C96E60;
    String.append(_:)(v10);
    v11._countAndFlagsBits = 46;
    v11._object = (void *)0xE100000000000000;
    String.append(_:)(v11);
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    __int16 v6 = v17;
    *(void *)a3 = v13;
    *(_OWORD *)(a3 + 8) = v14;
    *(_OWORD *)(a3 + 24) = v15;
    *(_OWORD *)(a3 + 40) = v16;
    *(unsigned char *)(a3 + 56) = v6;
    *(unsigned char *)(a3 + 57) = HIBYTE(v6) & 1;
  }
  return result;
}

uint64_t sub_10025BFD8(void (*a1)(void *), uint64_t a2, void (*a3)(void *__return_ptr, uint64_t))
{
  uint64_t v5 = sub_10017DF08(&qword_100E648B8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  Swift::String v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  a3(v16, v6);
  a1(v16);
  swift_release();
  uint64_t v9 = type metadata accessor for DayPickerInput();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v9) != 1) {
    return sub_1001522B4();
  }
  sub_1001781AC((uint64_t)v8, &qword_100E648B8);
  v16[0] = 0;
  v16[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(82);
  v11._countAndFlagsBits = 0xD00000000000004BLL;
  v11._object = (void *)0x8000000100C96D70;
  String.append(_:)(v11);
  v12._countAndFlagsBits = 0x656B636950796144;
  v12._object = (void *)0xEE007475706E4972;
  String.append(_:)(v12);
  v13._countAndFlagsBits = 8236;
  v13._object = (void *)0xE200000000000000;
  String.append(_:)(v13);
  v14._object = (void *)0x8000000100C96E80;
  v14._countAndFlagsBits = 0xD000000000000012;
  String.append(_:)(v14);
  v15._countAndFlagsBits = 46;
  v15._object = (void *)0xE100000000000000;
  String.append(_:)(v15);
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10025C1BC(void (*a1)(void *), uint64_t a2, void (*a3)(void *__return_ptr, __n128))
{
  uint64_t v5 = sub_10017DF08(&qword_100E64908);
  __n128 v6 = __chkstk_darwin(v5 - 8);
  Swift::String v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  a3(v16, v6);
  a1(v16);
  swift_release();
  uint64_t v9 = type metadata accessor for WeatherMenuInput();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v9) != 1) {
    return sub_1001522B4();
  }
  sub_1001781AC((uint64_t)v8, &qword_100E64908);
  v16[0] = 0;
  v16[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(82);
  v11._countAndFlagsBits = 0xD00000000000004BLL;
  v11._object = (void *)0x8000000100C96D70;
  String.append(_:)(v11);
  v12._object = (void *)0x8000000100C96EC0;
  v12._countAndFlagsBits = 0xD000000000000010;
  String.append(_:)(v12);
  v13._countAndFlagsBits = 8236;
  v13._object = (void *)0xE200000000000000;
  String.append(_:)(v13);
  v14._countAndFlagsBits = 0xD000000000000014;
  v14._object = (void *)0x8000000100C96EE0;
  String.append(_:)(v14);
  v15._countAndFlagsBits = 46;
  v15._object = (void *)0xE100000000000000;
  String.append(_:)(v15);
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10025C394(void (*a1)(uint64_t *__return_ptr, void *), uint64_t a2, void (*a3)(void *__return_ptr))
{
  a3(v10);
  a1(&v11, v10);
  uint64_t result = swift_release();
  if (v11)
  {
    v10[0] = 0;
    v10[1] = 0xE000000000000000;
    _StringGuts.grow(_:)(82);
    v5._countAndFlagsBits = 0xD00000000000004BLL;
    v5._object = (void *)0x8000000100C96D70;
    String.append(_:)(v5);
    v6._object = (void *)0x8000000100C96F00;
    v6._countAndFlagsBits = 0xD000000000000019;
    String.append(_:)(v6);
    v7._countAndFlagsBits = 8236;
    v7._object = (void *)0xE200000000000000;
    String.append(_:)(v7);
    v8._countAndFlagsBits = 0xD00000000000001DLL;
    v8._object = (void *)0x8000000100C96F20;
    String.append(_:)(v8);
    v9._countAndFlagsBits = 46;
    v9._object = (void *)0xE100000000000000;
    String.append(_:)(v9);
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  return result;
}

uint64_t sub_10025C4D8(void (*a1)(void *), uint64_t a2, void (*a3)(void *__return_ptr, uint64_t))
{
  uint64_t v5 = sub_10017DF08(&qword_100E64950);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  Swift::String v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  a3(v16, v6);
  a1(v16);
  swift_release();
  uint64_t v9 = type metadata accessor for LocationPreviewInput(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v9) != 1) {
    return sub_1001522B4();
  }
  sub_1001781AC((uint64_t)v8, &qword_100E64950);
  v16[0] = 0;
  v16[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(82);
  v11._countAndFlagsBits = 0xD00000000000004BLL;
  v11._object = (void *)0x8000000100C96D70;
  String.append(_:)(v11);
  v12._object = (void *)0x8000000100C96F40;
  v12._countAndFlagsBits = 0xD000000000000014;
  String.append(_:)(v12);
  v13._countAndFlagsBits = 8236;
  v13._object = (void *)0xE200000000000000;
  String.append(_:)(v13);
  v14._countAndFlagsBits = 0xD000000000000018;
  v14._object = (void *)0x8000000100C96F60;
  String.append(_:)(v14);
  v15._countAndFlagsBits = 46;
  v15._object = (void *)0xE100000000000000;
  String.append(_:)(v15);
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10025C6B0(void (*a1)(void *), uint64_t a2, void (*a3)(void *__return_ptr, uint64_t))
{
  uint64_t v5 = sub_10017DF08(&qword_100E64988);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  Swift::String v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  a3(v16, v6);
  a1(v16);
  swift_release();
  uint64_t v9 = type metadata accessor for InteractiveMapInput();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v9) != 1) {
    return sub_1001522B4();
  }
  sub_1001781AC((uint64_t)v8, &qword_100E64988);
  v16[0] = 0;
  v16[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(82);
  v11._countAndFlagsBits = 0xD00000000000004BLL;
  v11._object = (void *)0x8000000100C96D70;
  String.append(_:)(v11);
  v12._object = (void *)0x8000000100C96F80;
  v12._countAndFlagsBits = 0xD000000000000013;
  String.append(_:)(v12);
  v13._countAndFlagsBits = 8236;
  v13._object = (void *)0xE200000000000000;
  String.append(_:)(v13);
  v14._countAndFlagsBits = 0xD000000000000017;
  v14._object = (void *)0x8000000100C96FA0;
  String.append(_:)(v14);
  v15._countAndFlagsBits = 46;
  v15._object = (void *)0xE100000000000000;
  String.append(_:)(v15);
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10025C888(void (*a1)(void *), uint64_t a2, void (*a3)(void *__return_ptr, uint64_t))
{
  uint64_t v5 = sub_10017DF08(&qword_100E649C0);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  Swift::String v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  a3(v16, v6);
  a1(v16);
  swift_release();
  uint64_t HourPrecipitationDetailInput = type metadata accessor for NextHourPrecipitationDetailInput(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, HourPrecipitationDetailInput) != 1) {
    return sub_1001522B4();
  }
  sub_1001781AC((uint64_t)v8, &qword_100E649C0);
  v16[0] = 0;
  v16[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(82);
  v11._countAndFlagsBits = 0xD00000000000004BLL;
  v11._object = (void *)0x8000000100C96D70;
  String.append(_:)(v11);
  v12._object = (void *)0x8000000100C96FC0;
  v12._countAndFlagsBits = 0xD000000000000020;
  String.append(_:)(v12);
  v13._countAndFlagsBits = 8236;
  v13._object = (void *)0xE200000000000000;
  String.append(_:)(v13);
  v14._countAndFlagsBits = 0xD000000000000024;
  v14._object = (void *)0x8000000100C96FF0;
  String.append(_:)(v14);
  v15._countAndFlagsBits = 46;
  v15._object = (void *)0xE100000000000000;
  String.append(_:)(v15);
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10025CA60(void (*a1)(void *), uint64_t a2, void (*a3)(void *__return_ptr, __n128))
{
  uint64_t v5 = sub_10017DF08(&qword_100E64AE0);
  __n128 v6 = __chkstk_darwin(v5 - 8);
  Swift::String v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  a3(v16, v6);
  a1(v16);
  swift_release();
  uint64_t v9 = type metadata accessor for ListInput(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v9) != 1) {
    return sub_1001522B4();
  }
  sub_1001781AC((uint64_t)v8, &qword_100E64AE0);
  v16[0] = 0;
  v16[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(82);
  v11._object = (void *)0x8000000100C96D70;
  v11._countAndFlagsBits = 0xD00000000000004BLL;
  String.append(_:)(v11);
  v12._countAndFlagsBits = 0x75706E497473694CLL;
  v12._object = (void *)0xE900000000000074;
  String.append(_:)(v12);
  v13._countAndFlagsBits = 8236;
  v13._object = (void *)0xE200000000000000;
  String.append(_:)(v13);
  v14._countAndFlagsBits = 0x776569567473694CLL;
  v14._object = (void *)0xED00006C65646F4DLL;
  String.append(_:)(v14);
  v15._countAndFlagsBits = 46;
  v15._object = (void *)0xE100000000000000;
  String.append(_:)(v15);
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10025CC40(void (*a1)(void *), uint64_t a2, void (*a3)(void *__return_ptr, uint64_t))
{
  uint64_t v5 = sub_10017DF08(&qword_100E64B20);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  Swift::String v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  a3(v16, v6);
  a1(v16);
  swift_release();
  uint64_t v9 = type metadata accessor for NotificationsOptInInput();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v9) != 1) {
    return sub_1001522B4();
  }
  sub_1001781AC((uint64_t)v8, &qword_100E64B20);
  v16[0] = 0;
  v16[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(82);
  v11._countAndFlagsBits = 0xD00000000000004BLL;
  v11._object = (void *)0x8000000100C96D70;
  String.append(_:)(v11);
  v12._object = (void *)0x8000000100C97110;
  v12._countAndFlagsBits = 0xD000000000000017;
  String.append(_:)(v12);
  v13._countAndFlagsBits = 8236;
  v13._object = (void *)0xE200000000000000;
  String.append(_:)(v13);
  v14._countAndFlagsBits = 0xD00000000000001BLL;
  v14._object = (void *)0x8000000100C97130;
  String.append(_:)(v14);
  v15._countAndFlagsBits = 46;
  v15._object = (void *)0xE100000000000000;
  String.append(_:)(v15);
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10025CE18(void (*a1)(void *), uint64_t a2, void (*a3)(void *__return_ptr, uint64_t))
{
  uint64_t v5 = sub_10017DF08(&qword_100E64B78);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  Swift::String v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  a3(v16, v6);
  a1(v16);
  swift_release();
  uint64_t v9 = type metadata accessor for AveragesDetailInput(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v9) != 1) {
    return sub_1001522B4();
  }
  sub_1001781AC((uint64_t)v8, &qword_100E64B78);
  v16[0] = 0;
  v16[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(82);
  v11._countAndFlagsBits = 0xD00000000000004BLL;
  v11._object = (void *)0x8000000100C96D70;
  String.append(_:)(v11);
  v12._object = (void *)0x8000000100C97150;
  v12._countAndFlagsBits = 0xD000000000000013;
  String.append(_:)(v12);
  v13._countAndFlagsBits = 8236;
  v13._object = (void *)0xE200000000000000;
  String.append(_:)(v13);
  v14._countAndFlagsBits = 0xD000000000000017;
  v14._object = (void *)0x8000000100C97170;
  String.append(_:)(v14);
  v15._countAndFlagsBits = 46;
  v15._object = (void *)0xE100000000000000;
  String.append(_:)(v15);
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10025CFF0(void (*a1)(void *), uint64_t a2, void (*a3)(void *__return_ptr, uint64_t))
{
  uint64_t v5 = sub_10017DF08(&qword_100E64BB0);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  Swift::String v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  a3(v16, v6);
  a1(v16);
  swift_release();
  uint64_t v9 = type metadata accessor for MoonScrubberInput();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v9) != 1) {
    return sub_1001522B4();
  }
  sub_1001781AC((uint64_t)v8, &qword_100E64BB0);
  v16[0] = 0;
  v16[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(82);
  v11._countAndFlagsBits = 0xD00000000000004BLL;
  v11._object = (void *)0x8000000100C96D70;
  String.append(_:)(v11);
  v12._object = (void *)0x8000000100C97190;
  v12._countAndFlagsBits = 0xD000000000000011;
  String.append(_:)(v12);
  v13._countAndFlagsBits = 8236;
  v13._object = (void *)0xE200000000000000;
  String.append(_:)(v13);
  v14._countAndFlagsBits = 0xD000000000000015;
  v14._object = (void *)0x8000000100C971B0;
  String.append(_:)(v14);
  v15._countAndFlagsBits = 46;
  v15._object = (void *)0xE100000000000000;
  String.append(_:)(v15);
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10025D1C8(void (*a1)(void *), uint64_t a2, void (*a3)(void *__return_ptr, uint64_t))
{
  uint64_t v5 = sub_10017DF08(&qword_100E64BE8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  Swift::String v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  a3(v16, v6);
  a1(v16);
  swift_release();
  uint64_t v9 = type metadata accessor for SunriseSunsetDetailInput(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v9) != 1) {
    return sub_1001522B4();
  }
  sub_1001781AC((uint64_t)v8, &qword_100E64BE8);
  v16[0] = 0;
  v16[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(82);
  v11._countAndFlagsBits = 0xD00000000000004BLL;
  v11._object = (void *)0x8000000100C96D70;
  String.append(_:)(v11);
  v12._object = (void *)0x8000000100C971D0;
  v12._countAndFlagsBits = 0xD000000000000018;
  String.append(_:)(v12);
  v13._countAndFlagsBits = 8236;
  v13._object = (void *)0xE200000000000000;
  String.append(_:)(v13);
  v14._countAndFlagsBits = 0xD00000000000001CLL;
  v14._object = (void *)0x8000000100C971F0;
  String.append(_:)(v14);
  v15._countAndFlagsBits = 46;
  v15._object = (void *)0xE100000000000000;
  String.append(_:)(v15);
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10025D3A0(void (*a1)(void *__return_ptr, uint64_t *), uint64_t a2, void (*a3)(uint64_t *__return_ptr))
{
  a3(&v10);
  a1(v11, &v10);
  swift_release();
  uint64_t result = v11[0];
  if (!v11[0])
  {
    v11[0] = 0;
    v11[1] = 0xE000000000000000;
    _StringGuts.grow(_:)(82);
    v5._countAndFlagsBits = 0xD00000000000004BLL;
    v5._object = (void *)0x8000000100C96D70;
    String.append(_:)(v5);
    v6._countAndFlagsBits = 0x756E654D7473694CLL;
    v6._object = (void *)0xED00007475706E49;
    String.append(_:)(v6);
    v7._countAndFlagsBits = 8236;
    v7._object = (void *)0xE200000000000000;
    String.append(_:)(v7);
    v8._object = (void *)0x8000000100C97210;
    v8._countAndFlagsBits = 0xD000000000000011;
    String.append(_:)(v8);
    v9._countAndFlagsBits = 46;
    v9._object = (void *)0xE100000000000000;
    String.append(_:)(v9);
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  return result;
}

uint64_t sub_10025D4FC(void (*a1)(void *), uint64_t a2, void (*a3)(void *__return_ptr, uint64_t))
{
  uint64_t v5 = sub_10017DF08(&qword_100E64C30);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  Swift::String v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  a3(v16, v6);
  a1(v16);
  swift_release();
  uint64_t v9 = type metadata accessor for MoonCalendarInput();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v9) != 1) {
    return sub_1001522B4();
  }
  sub_1001781AC((uint64_t)v8, &qword_100E64C30);
  v16[0] = 0;
  v16[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(82);
  v11._countAndFlagsBits = 0xD00000000000004BLL;
  v11._object = (void *)0x8000000100C96D70;
  String.append(_:)(v11);
  v12._object = (void *)0x8000000100C97230;
  v12._countAndFlagsBits = 0xD000000000000011;
  String.append(_:)(v12);
  v13._countAndFlagsBits = 8236;
  v13._object = (void *)0xE200000000000000;
  String.append(_:)(v13);
  v14._countAndFlagsBits = 0xD000000000000015;
  v14._object = (void *)0x8000000100C97250;
  String.append(_:)(v14);
  v15._countAndFlagsBits = 46;
  v15._object = (void *)0xE100000000000000;
  String.append(_:)(v15);
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10025D6D4(void (*a1)(void *), uint64_t a2, void (*a3)(void *__return_ptr, uint64_t))
{
  uint64_t v5 = sub_10017DF08(&qword_100E64C68);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  Swift::String v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  a3(v16, v6);
  a1(v16);
  swift_release();
  uint64_t v9 = type metadata accessor for HomeAndWorkRefinementInput();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v9) != 1) {
    return sub_1001522B4();
  }
  sub_1001781AC((uint64_t)v8, &qword_100E64C68);
  v16[0] = 0;
  v16[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(82);
  v11._countAndFlagsBits = 0xD00000000000004BLL;
  v11._object = (void *)0x8000000100C96D70;
  String.append(_:)(v11);
  v12._object = (void *)0x8000000100C97270;
  v12._countAndFlagsBits = 0xD00000000000001ALL;
  String.append(_:)(v12);
  v13._countAndFlagsBits = 8236;
  v13._object = (void *)0xE200000000000000;
  String.append(_:)(v13);
  v14._countAndFlagsBits = 0xD00000000000001ELL;
  v14._object = (void *)0x8000000100C97290;
  String.append(_:)(v14);
  v15._countAndFlagsBits = 46;
  v15._object = (void *)0xE100000000000000;
  String.append(_:)(v15);
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10025D8AC(void (*a1)(void *), uint64_t a2, void (*a3)(void *__return_ptr, uint64_t))
{
  uint64_t v5 = sub_10017DF08(&qword_100E64C98);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  Swift::String v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  a3(v16, v6);
  a1(v16);
  swift_release();
  uint64_t v9 = type metadata accessor for NotificationSettingsInput();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v9) != 1) {
    return sub_1001522B4();
  }
  sub_1001781AC((uint64_t)v8, &qword_100E64C98);
  v16[0] = 0;
  v16[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(82);
  v11._countAndFlagsBits = 0xD00000000000004BLL;
  v11._object = (void *)0x8000000100C96D70;
  String.append(_:)(v11);
  v12._object = (void *)0x8000000100C972B0;
  v12._countAndFlagsBits = 0xD000000000000019;
  String.append(_:)(v12);
  v13._countAndFlagsBits = 8236;
  v13._object = (void *)0xE200000000000000;
  String.append(_:)(v13);
  v14._countAndFlagsBits = 0xD00000000000001DLL;
  v14._object = (void *)0x8000000100C972D0;
  String.append(_:)(v14);
  v15._countAndFlagsBits = 46;
  v15._object = (void *)0xE100000000000000;
  String.append(_:)(v15);
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10025DA84(uint64_t a1, void (*a2)(uint64_t *))
{
  uint64_t v4 = sub_10017DF08(&qword_100E647B0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = a1;
  a2(&v15);
  uint64_t v7 = type metadata accessor for AirQualityDetailViewModel(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v6, 1, v7) != 1) {
    return sub_1001522B4();
  }
  sub_1001781AC((uint64_t)v6, &qword_100E647B0);
  v14[1] = 0;
  void v14[2] = 0xE000000000000000;
  _StringGuts.grow(_:)(87);
  v9._countAndFlagsBits = 0xD000000000000050;
  v9._object = (void *)0x8000000100C96D10;
  String.append(_:)(v9);
  v10._countAndFlagsBits = 0x746174536E69614DLL;
  v10._object = (void *)0xE900000000000065;
  String.append(_:)(v10);
  v11._countAndFlagsBits = 8236;
  v11._object = (void *)0xE200000000000000;
  String.append(_:)(v11);
  v12._object = (void *)0x8000000100C96CD0;
  v12._countAndFlagsBits = 0xD000000000000019;
  String.append(_:)(v12);
  v13._countAndFlagsBits = 46;
  v13._object = (void *)0xE100000000000000;
  String.append(_:)(v13);
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10025DC40(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v4 = sub_10017DF08(&qword_100E647F0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  a2(a1);
  uint64_t v7 = type metadata accessor for MoonDetailViewModel(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v6, 1, v7) != 1) {
    return sub_1001522B4();
  }
  sub_1001781AC((uint64_t)v6, &qword_100E647F0);
  v14[0] = 0;
  v14[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(87);
  v9._countAndFlagsBits = 0xD000000000000050;
  v9._object = (void *)0x8000000100C96D10;
  String.append(_:)(v9);
  v10._countAndFlagsBits = 0x617465446E6F6F4DLL;
  v10._object = (void *)0xEF7475706E496C69;
  String.append(_:)(v10);
  v11._countAndFlagsBits = 8236;
  v11._object = (void *)0xE200000000000000;
  String.append(_:)(v11);
  v12._object = (void *)0x8000000100C96DC0;
  v12._countAndFlagsBits = 0xD000000000000013;
  String.append(_:)(v12);
  v13._countAndFlagsBits = 46;
  v13._object = (void *)0xE100000000000000;
  String.append(_:)(v13);
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

void *sub_10025DE00@<X0>(uint64_t a1@<X0>, void *(*a2)(uint64_t *__return_ptr, uint64_t *)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v18 = a1;
  uint64_t result = a2(&v11, &v18);
  if ((~v11 & 0xF000000000000006) != 0)
  {
    uint64_t v5 = v17;
    *(void *)a3 = v11;
    *(_OWORD *)(a3 + 8) = v12;
    *(_OWORD *)(a3 + 24) = v13;
    *(_OWORD *)(a3 + 40) = v14;
    *(_OWORD *)(a3 + 56) = v15;
    *(_OWORD *)(a3 + 72) = v16;
    *(void *)(a3 + 88) = v5;
  }
  else
  {
    uint64_t v11 = 0;
    *(void *)&long long v12 = 0xE000000000000000;
    _StringGuts.grow(_:)(87);
    v6._countAndFlagsBits = 0xD000000000000050;
    v6._object = (void *)0x8000000100C96D10;
    String.append(_:)(v6);
    v7._countAndFlagsBits = 0x746174536E69614DLL;
    v7._object = (void *)0xE900000000000065;
    String.append(_:)(v7);
    v8._countAndFlagsBits = 8236;
    v8._object = (void *)0xE200000000000000;
    String.append(_:)(v8);
    v9._object = (void *)0x8000000100C96DE0;
    v9._countAndFlagsBits = 0xD000000000000016;
    String.append(_:)(v9);
    v10._countAndFlagsBits = 46;
    v10._object = (void *)0xE100000000000000;
    String.append(_:)(v10);
    uint64_t result = (void *)_assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  return result;
}

uint64_t sub_10025DF60(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v4 = sub_10017DF08(&qword_100E64848);
  __chkstk_darwin(v4 - 8);
  Swift::String v6 = (char *)v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  a2(a1);
  uint64_t v7 = type metadata accessor for ConditionDetailViewModel(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v6, 1, v7) != 1) {
    return sub_1001522B4();
  }
  sub_1001781AC((uint64_t)v6, &qword_100E64848);
  v14[0] = 0;
  v14[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(87);
  v9._countAndFlagsBits = 0xD000000000000050;
  v9._object = (void *)0x8000000100C96D10;
  String.append(_:)(v9);
  v10._object = (void *)0x8000000100C96E00;
  v10._countAndFlagsBits = 0xD000000000000014;
  String.append(_:)(v10);
  v11._countAndFlagsBits = 8236;
  v11._object = (void *)0xE200000000000000;
  String.append(_:)(v11);
  v12._countAndFlagsBits = 0xD000000000000018;
  v12._object = (void *)0x8000000100C96E20;
  String.append(_:)(v12);
  v13._countAndFlagsBits = 46;
  v13._object = (void *)0xE100000000000000;
  String.append(_:)(v13);
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10025E114(_OWORD *a1, void (*a2)(_OWORD *))
{
  uint64_t v4 = sub_10017DF08(&qword_100E64880);
  __chkstk_darwin(v4 - 8);
  Swift::String v6 = (char *)v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v7 = a1[1];
  v16[0] = *a1;
  v16[1] = v7;
  v17[0] = a1[2];
  *(_OWORD *)((char *)v17 + 10) = *(_OWORD *)((char *)a1 + 42);
  a2(v16);
  uint64_t v8 = type metadata accessor for UnitsConfigurationViewModel(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v6, 1, v8) != 1) {
    return sub_1001522B4();
  }
  sub_1001781AC((uint64_t)v6, &qword_100E64880);
  v15[0] = 0;
  v15[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(87);
  v10._countAndFlagsBits = 0xD000000000000050;
  v10._object = (void *)0x8000000100C96D10;
  String.append(_:)(v10);
  v11._object = (void *)0x8000000100C96E40;
  v11._countAndFlagsBits = 0xD000000000000017;
  String.append(_:)(v11);
  v12._countAndFlagsBits = 8236;
  v12._object = (void *)0xE200000000000000;
  String.append(_:)(v12);
  v13._countAndFlagsBits = 0xD00000000000001BLL;
  v13._object = (void *)0x8000000100C96E60;
  String.append(_:)(v13);
  v14._countAndFlagsBits = 46;
  v14._object = (void *)0xE100000000000000;
  String.append(_:)(v14);
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10025E2E0(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v4 = sub_10017DF08(&qword_100E648A8);
  __chkstk_darwin(v4 - 8);
  Swift::String v6 = (char *)v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  a2(a1);
  uint64_t v7 = type metadata accessor for DayPickerViewModel(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v6, 1, v7) != 1) {
    return sub_1001522B4();
  }
  sub_1001781AC((uint64_t)v6, &qword_100E648A8);
  v14[0] = 0;
  v14[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(87);
  v9._countAndFlagsBits = 0xD000000000000050;
  v9._object = (void *)0x8000000100C96D10;
  String.append(_:)(v9);
  v10._countAndFlagsBits = 0x656B636950796144;
  v10._object = (void *)0xEE007475706E4972;
  String.append(_:)(v10);
  v11._countAndFlagsBits = 8236;
  v11._object = (void *)0xE200000000000000;
  String.append(_:)(v11);
  v12._object = (void *)0x8000000100C96E80;
  v12._countAndFlagsBits = 0xD000000000000012;
  String.append(_:)(v12);
  v13._countAndFlagsBits = 46;
  v13._object = (void *)0xE100000000000000;
  String.append(_:)(v13);
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10025E4A0(uint64_t a1, void (*a2)(uint64_t *, __n128))
{
  uint64_t v4 = sub_10017DF08(&qword_100E648D8);
  __n128 v5 = __chkstk_darwin(v4 - 8);
  uint64_t v7 = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = a1;
  a2(&v16, v5);
  uint64_t v8 = type metadata accessor for VFXTestViewModel();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v7, 1, v8) != 1) {
    return sub_1001522B4();
  }
  sub_1001781AC((uint64_t)v7, &qword_100E648D8);
  v15[1] = 0;
  void v15[2] = 0xE000000000000000;
  _StringGuts.grow(_:)(87);
  v10._countAndFlagsBits = 0xD000000000000050;
  v10._object = (void *)0x8000000100C96D10;
  String.append(_:)(v10);
  v11._countAndFlagsBits = 0x746174536E69614DLL;
  v11._object = (void *)0xE900000000000065;
  String.append(_:)(v11);
  v12._countAndFlagsBits = 8236;
  v12._object = (void *)0xE200000000000000;
  String.append(_:)(v12);
  v13._object = (void *)0x8000000100C96EA0;
  v13._countAndFlagsBits = 0xD000000000000010;
  String.append(_:)(v13);
  v14._countAndFlagsBits = 46;
  v14._object = (void *)0xE100000000000000;
  String.append(_:)(v14);
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10025E65C(uint64_t a1, void (*a2)(uint64_t, __n128))
{
  uint64_t v4 = sub_10017DF08(&qword_100E648F8);
  __n128 v5 = __chkstk_darwin(v4 - 8);
  uint64_t v7 = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  a2(a1, v5);
  uint64_t v8 = type metadata accessor for WeatherMenuViewModel();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v7, 1, v8) != 1) {
    return sub_1001522B4();
  }
  sub_1001781AC((uint64_t)v7, &qword_100E648F8);
  v15[0] = 0;
  v15[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(87);
  v10._countAndFlagsBits = 0xD000000000000050;
  v10._object = (void *)0x8000000100C96D10;
  String.append(_:)(v10);
  v11._object = (void *)0x8000000100C96EC0;
  v11._countAndFlagsBits = 0xD000000000000010;
  String.append(_:)(v11);
  v12._countAndFlagsBits = 8236;
  v12._object = (void *)0xE200000000000000;
  String.append(_:)(v12);
  v13._countAndFlagsBits = 0xD000000000000014;
  v13._object = (void *)0x8000000100C96EE0;
  String.append(_:)(v13);
  v14._countAndFlagsBits = 46;
  v14._object = (void *)0xE100000000000000;
  String.append(_:)(v14);
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10025E810(void (*a1)(void *__return_ptr))
{
  a1(v7);
  if (LOBYTE(v7[0]) != 2) {
    return v7[0] & 1;
  }
  v7[0] = 0;
  v7[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(87);
  v2._countAndFlagsBits = 0xD000000000000050;
  v2._object = (void *)0x8000000100C96D10;
  String.append(_:)(v2);
  v3._object = (void *)0x8000000100C96F00;
  v3._countAndFlagsBits = 0xD000000000000019;
  String.append(_:)(v3);
  v4._countAndFlagsBits = 8236;
  v4._object = (void *)0xE200000000000000;
  String.append(_:)(v4);
  v5._countAndFlagsBits = 0xD00000000000001DLL;
  v5._object = (void *)0x8000000100C96F20;
  String.append(_:)(v5);
  v6._countAndFlagsBits = 46;
  v6._object = (void *)0xE100000000000000;
  String.append(_:)(v6);
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10025E928(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v4 = sub_10017DF08(&qword_100E64940);
  __chkstk_darwin(v4 - 8);
  Swift::String v6 = (char *)v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  a2(a1);
  uint64_t v7 = type metadata accessor for LocationPreviewViewModel(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v6, 1, v7) != 1) {
    return sub_1001522B4();
  }
  sub_1001781AC((uint64_t)v6, &qword_100E64940);
  v14[0] = 0;
  v14[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(87);
  v9._countAndFlagsBits = 0xD000000000000050;
  v9._object = (void *)0x8000000100C96D10;
  String.append(_:)(v9);
  v10._object = (void *)0x8000000100C96F40;
  v10._countAndFlagsBits = 0xD000000000000014;
  String.append(_:)(v10);
  v11._countAndFlagsBits = 8236;
  v11._object = (void *)0xE200000000000000;
  String.append(_:)(v11);
  v12._countAndFlagsBits = 0xD000000000000018;
  v12._object = (void *)0x8000000100C96F60;
  String.append(_:)(v12);
  v13._countAndFlagsBits = 46;
  v13._object = (void *)0xE100000000000000;
  String.append(_:)(v13);
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10025EADC(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v4 = sub_10017DF08(&qword_100E64978);
  __chkstk_darwin(v4 - 8);
  Swift::String v6 = (char *)v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  a2(a1);
  uint64_t v7 = type metadata accessor for InteractiveMapViewModel();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v6, 1, v7) != 1) {
    return sub_1001522B4();
  }
  sub_1001781AC((uint64_t)v6, &qword_100E64978);
  v14[0] = 0;
  v14[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(87);
  v9._countAndFlagsBits = 0xD000000000000050;
  v9._object = (void *)0x8000000100C96D10;
  String.append(_:)(v9);
  v10._object = (void *)0x8000000100C96F80;
  v10._countAndFlagsBits = 0xD000000000000013;
  String.append(_:)(v10);
  v11._countAndFlagsBits = 8236;
  v11._object = (void *)0xE200000000000000;
  String.append(_:)(v11);
  v12._countAndFlagsBits = 0xD000000000000017;
  v12._object = (void *)0x8000000100C96FA0;
  String.append(_:)(v12);
  v13._countAndFlagsBits = 46;
  v13._object = (void *)0xE100000000000000;
  String.append(_:)(v13);
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10025EC90(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v4 = sub_10017DF08(&qword_100E649B0);
  __chkstk_darwin(v4 - 8);
  Swift::String v6 = (char *)v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  a2(a1);
  uint64_t HourPrecipitationDetailViewModel = type metadata accessor for NextHourPrecipitationDetailViewModel(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v6, 1, HourPrecipitationDetailViewModel) != 1) {
    return sub_1001522B4();
  }
  sub_1001781AC((uint64_t)v6, &qword_100E649B0);
  v14[0] = 0;
  v14[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(87);
  v9._countAndFlagsBits = 0xD000000000000050;
  v9._object = (void *)0x8000000100C96D10;
  String.append(_:)(v9);
  v10._object = (void *)0x8000000100C96FC0;
  v10._countAndFlagsBits = 0xD000000000000020;
  String.append(_:)(v10);
  v11._countAndFlagsBits = 8236;
  v11._object = (void *)0xE200000000000000;
  String.append(_:)(v11);
  v12._countAndFlagsBits = 0xD000000000000024;
  v12._object = (void *)0x8000000100C96FF0;
  String.append(_:)(v12);
  v13._countAndFlagsBits = 46;
  v13._object = (void *)0xE100000000000000;
  String.append(_:)(v13);
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10025EE44(uint64_t a1, void (*a2)(uint64_t, __n128))
{
  uint64_t v4 = sub_10017DF08(&qword_100E64AD0);
  __n128 v5 = __chkstk_darwin(v4 - 8);
  uint64_t v7 = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  a2(a1, v5);
  uint64_t v8 = type metadata accessor for ListViewModel();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v7, 1, v8) != 1) {
    return sub_1001522B4();
  }
  sub_1001781AC((uint64_t)v7, &qword_100E64AD0);
  v15[0] = 0;
  v15[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(87);
  v10._object = (void *)0x8000000100C96D10;
  v10._countAndFlagsBits = 0xD000000000000050;
  String.append(_:)(v10);
  v11._countAndFlagsBits = 0x75706E497473694CLL;
  v11._object = (void *)0xE900000000000074;
  String.append(_:)(v11);
  v12._countAndFlagsBits = 8236;
  v12._object = (void *)0xE200000000000000;
  String.append(_:)(v12);
  v13._countAndFlagsBits = 0x776569567473694CLL;
  v13._object = (void *)0xED00006C65646F4DLL;
  String.append(_:)(v13);
  v14._countAndFlagsBits = 46;
  v14._object = (void *)0xE100000000000000;
  String.append(_:)(v14);
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

void *sub_10025F000@<X0>(uint64_t a1@<X0>, void *(*a2)(_OWORD *__return_ptr, uint64_t *)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v16 = a1;
  uint64_t result = a2(v14, &v16);
  unsigned __int8 v5 = v15;
  if (v15 == 255)
  {
    *(void *)&v14[0] = 0;
    *((void *)&v14[0] + 1) = 0xE000000000000000;
    _StringGuts.grow(_:)(87);
    v9._object = (void *)0x8000000100C96D10;
    v9._countAndFlagsBits = 0xD000000000000050;
    String.append(_:)(v9);
    v10._countAndFlagsBits = 0x746174536E69614DLL;
    v10._object = (void *)0xE900000000000065;
    String.append(_:)(v10);
    v11._countAndFlagsBits = 8236;
    v11._object = (void *)0xE200000000000000;
    String.append(_:)(v11);
    v12._countAndFlagsBits = 0x6956686372616553;
    v12._object = (void *)0xEF6C65646F4D7765;
    String.append(_:)(v12);
    v13._countAndFlagsBits = 46;
    v13._object = (void *)0xE100000000000000;
    String.append(_:)(v13);
    uint64_t result = (void *)_assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    long long v6 = v14[1];
    *(_OWORD *)a3 = v14[0];
    *(_OWORD *)(a3 + 16) = v6;
    long long v7 = v14[3];
    *(_OWORD *)(a3 + 32) = v14[2];
    *(_OWORD *)(a3 + 48) = v7;
    long long v8 = v14[5];
    *(_OWORD *)(a3 + 64) = v14[4];
    *(_OWORD *)(a3 + 80) = v8;
    *(unsigned char *)(a3 + 96) = v5;
  }
  return result;
}

uint64_t sub_10025F144(uint64_t a1, void (*a2)(void *__return_ptr))
{
  a2(v8);
  if ((v8[0] & 0xFF0000) != 0x20000) {
    return v8[0] & 0xFF01FFFF;
  }
  v8[0] = 0;
  v8[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(87);
  v3._countAndFlagsBits = 0xD000000000000050;
  v3._object = (void *)0x8000000100C96D10;
  String.append(_:)(v3);
  v4._object = (void *)0x8000000100C97110;
  v4._countAndFlagsBits = 0xD000000000000017;
  String.append(_:)(v4);
  v5._countAndFlagsBits = 8236;
  v5._object = (void *)0xE200000000000000;
  String.append(_:)(v5);
  v6._countAndFlagsBits = 0xD00000000000001BLL;
  v6._object = (void *)0x8000000100C97130;
  String.append(_:)(v6);
  v7._countAndFlagsBits = 46;
  v7._object = (void *)0xE100000000000000;
  String.append(_:)(v7);
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10025F260(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v4 = sub_10017DF08(&qword_100E64B68);
  __chkstk_darwin(v4 - 8);
  Swift::String v6 = (char *)v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  a2(a1);
  uint64_t v7 = type metadata accessor for AveragesDetailViewModel();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v6, 1, v7) != 1) {
    return sub_1001522B4();
  }
  sub_1001781AC((uint64_t)v6, &qword_100E64B68);
  v14[0] = 0;
  v14[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(87);
  v9._countAndFlagsBits = 0xD000000000000050;
  v9._object = (void *)0x8000000100C96D10;
  String.append(_:)(v9);
  v10._object = (void *)0x8000000100C97150;
  v10._countAndFlagsBits = 0xD000000000000013;
  String.append(_:)(v10);
  v11._countAndFlagsBits = 8236;
  v11._object = (void *)0xE200000000000000;
  String.append(_:)(v11);
  v12._countAndFlagsBits = 0xD000000000000017;
  v12._object = (void *)0x8000000100C97170;
  String.append(_:)(v12);
  v13._countAndFlagsBits = 46;
  v13._object = (void *)0xE100000000000000;
  String.append(_:)(v13);
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10025F414(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v4 = sub_10017DF08(&qword_100E64BA0);
  __chkstk_darwin(v4 - 8);
  Swift::String v6 = (char *)v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  a2(a1);
  uint64_t v7 = type metadata accessor for MoonScrubberViewModel();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v6, 1, v7) != 1) {
    return sub_1001522B4();
  }
  sub_1001781AC((uint64_t)v6, &qword_100E64BA0);
  v14[0] = 0;
  v14[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(87);
  v9._countAndFlagsBits = 0xD000000000000050;
  v9._object = (void *)0x8000000100C96D10;
  String.append(_:)(v9);
  v10._object = (void *)0x8000000100C97190;
  v10._countAndFlagsBits = 0xD000000000000011;
  String.append(_:)(v10);
  v11._countAndFlagsBits = 8236;
  v11._object = (void *)0xE200000000000000;
  String.append(_:)(v11);
  v12._countAndFlagsBits = 0xD000000000000015;
  v12._object = (void *)0x8000000100C971B0;
  String.append(_:)(v12);
  v13._countAndFlagsBits = 46;
  v13._object = (void *)0xE100000000000000;
  String.append(_:)(v13);
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10025F5C8(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v4 = sub_10017DF08(&qword_100E64BD8);
  __chkstk_darwin(v4 - 8);
  Swift::String v6 = (char *)v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  a2(a1);
  uint64_t v7 = type metadata accessor for SunriseSunsetDetailViewModel();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v6, 1, v7) != 1) {
    return sub_1001522B4();
  }
  sub_1001781AC((uint64_t)v6, &qword_100E64BD8);
  v14[0] = 0;
  v14[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(87);
  v9._countAndFlagsBits = 0xD000000000000050;
  v9._object = (void *)0x8000000100C96D10;
  String.append(_:)(v9);
  v10._object = (void *)0x8000000100C971D0;
  v10._countAndFlagsBits = 0xD000000000000018;
  String.append(_:)(v10);
  v11._countAndFlagsBits = 8236;
  v11._object = (void *)0xE200000000000000;
  String.append(_:)(v11);
  v12._countAndFlagsBits = 0xD00000000000001CLL;
  v12._object = (void *)0x8000000100C971F0;
  String.append(_:)(v12);
  v13._countAndFlagsBits = 46;
  v13._object = (void *)0xE100000000000000;
  String.append(_:)(v13);
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10025F77C(uint64_t a1, uint64_t a2, char a3, void (*a4)(void *__return_ptr, void *))
{
  v11[0] = a1;
  v11[1] = a2;
  char v12 = a3 & 1;
  a4(v10, v11);
  uint64_t result = v10[0];
  if (!v10[0])
  {
    v10[0] = 0;
    v10[1] = 0xE000000000000000;
    _StringGuts.grow(_:)(87);
    v5._countAndFlagsBits = 0xD000000000000050;
    v5._object = (void *)0x8000000100C96D10;
    String.append(_:)(v5);
    v6._countAndFlagsBits = 0x756E654D7473694CLL;
    v6._object = (void *)0xED00007475706E49;
    String.append(_:)(v6);
    v7._countAndFlagsBits = 8236;
    v7._object = (void *)0xE200000000000000;
    String.append(_:)(v7);
    v8._object = (void *)0x8000000100C97210;
    v8._countAndFlagsBits = 0xD000000000000011;
    String.append(_:)(v8);
    v9._countAndFlagsBits = 46;
    v9._object = (void *)0xE100000000000000;
    String.append(_:)(v9);
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  return result;
}

uint64_t sub_10025F8B4(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v4 = sub_10017DF08(&qword_100E64C20);
  __chkstk_darwin(v4 - 8);
  Swift::String v6 = (char *)v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  a2(a1);
  uint64_t v7 = type metadata accessor for MoonCalendarViewModel();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v6, 1, v7) != 1) {
    return sub_1001522B4();
  }
  sub_1001781AC((uint64_t)v6, &qword_100E64C20);
  v14[0] = 0;
  v14[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(87);
  v9._countAndFlagsBits = 0xD000000000000050;
  v9._object = (void *)0x8000000100C96D10;
  String.append(_:)(v9);
  v10._object = (void *)0x8000000100C97230;
  v10._countAndFlagsBits = 0xD000000000000011;
  String.append(_:)(v10);
  v11._countAndFlagsBits = 8236;
  v11._object = (void *)0xE200000000000000;
  String.append(_:)(v11);
  v12._countAndFlagsBits = 0xD000000000000015;
  v12._object = (void *)0x8000000100C97250;
  String.append(_:)(v12);
  v13._countAndFlagsBits = 46;
  v13._object = (void *)0xE100000000000000;
  String.append(_:)(v13);
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10025FA68(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v4 = sub_10017DF08(&qword_100E64C58);
  __chkstk_darwin(v4 - 8);
  Swift::String v6 = (char *)v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  a2(a1);
  uint64_t v7 = type metadata accessor for HomeAndWorkRefinementViewModel(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v6, 1, v7) != 1) {
    return sub_1001522B4();
  }
  sub_1001781AC((uint64_t)v6, &qword_100E64C58);
  v14[0] = 0;
  v14[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(87);
  v9._countAndFlagsBits = 0xD000000000000050;
  v9._object = (void *)0x8000000100C96D10;
  String.append(_:)(v9);
  v10._object = (void *)0x8000000100C97270;
  v10._countAndFlagsBits = 0xD00000000000001ALL;
  String.append(_:)(v10);
  v11._countAndFlagsBits = 8236;
  v11._object = (void *)0xE200000000000000;
  String.append(_:)(v11);
  v12._countAndFlagsBits = 0xD00000000000001ELL;
  v12._object = (void *)0x8000000100C97290;
  String.append(_:)(v12);
  v13._countAndFlagsBits = 46;
  v13._object = (void *)0xE100000000000000;
  String.append(_:)(v13);
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

void *sub_10025FC1C@<X0>(void *(*a1)(_OWORD *__return_ptr)@<X1>, uint64_t a2@<X8>)
{
  uint64_t result = a1(v13);
  unsigned __int8 v4 = v14;
  if (v14 > 0xFDu)
  {
    *(void *)&v13[0] = 0;
    *((void *)&v13[0] + 1) = 0xE000000000000000;
    _StringGuts.grow(_:)(87);
    v8._countAndFlagsBits = 0xD000000000000050;
    v8._object = (void *)0x8000000100C96D10;
    String.append(_:)(v8);
    v9._object = (void *)0x8000000100C972B0;
    v9._countAndFlagsBits = 0xD000000000000019;
    String.append(_:)(v9);
    v10._countAndFlagsBits = 8236;
    v10._object = (void *)0xE200000000000000;
    String.append(_:)(v10);
    v11._countAndFlagsBits = 0xD00000000000001DLL;
    v11._object = (void *)0x8000000100C972D0;
    String.append(_:)(v11);
    v12._countAndFlagsBits = 46;
    v12._object = (void *)0xE100000000000000;
    String.append(_:)(v12);
    uint64_t result = (void *)_assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    long long v5 = v13[1];
    *(_OWORD *)a2 = v13[0];
    *(_OWORD *)(a2 + 16) = v5;
    long long v6 = v13[3];
    *(_OWORD *)(a2 + 32) = v13[2];
    *(_OWORD *)(a2 + 48) = v6;
    long long v7 = v13[5];
    *(_OWORD *)(a2 + 64) = v13[4];
    *(_OWORD *)(a2 + 80) = v7;
    *(unsigned char *)(a2 + 96) = v4;
  }
  return result;
}

uint64_t sub_10025FD50(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4, void *(*a5)(uint64_t *__return_ptr, uint64_t), uint64_t a6, void (*a7)(uint64_t *), uint64_t a8)
{
  uint64_t v14 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v43 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v41 = (char *)v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = type metadata accessor for DispatchQoS();
  uint64_t v40 = *(void *)(v42 - 8);
  __chkstk_darwin(v42);
  uint64_t v39 = (char *)v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = type metadata accessor for DispatchTime();
  uint64_t v38 = *(void *)(v45 - 8);
  uint64_t v17 = __chkstk_darwin(v45);
  uint64_t v19 = (char *)v36 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  int v44 = (char *)v36 - v20;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v22 = result;
    uint64_t v37 = v14;
    double v23 = COERCE_DOUBLE(a3(a1));
    char v25 = v24;
    uint64_t v46 = a8;
    sub_10006DF38(a1, (uint64_t)__src, &qword_100E647A8);
    uint64_t v26 = v46;
    sub_10006DF38((uint64_t)__src, (uint64_t)v48, &qword_100E647A8);
    char v27 = (void *)swift_allocObject();
    v27[2] = a5;
    v27[3] = a6;
    memcpy(v27 + 4, __src, 0x48uLL);
    v27[13] = v22;
    v27[14] = a7;
    v27[15] = v26;
    if (v25)
    {
      if (v23 == 0.0)
      {
        swift_retain_n();
        swift_retain();
        swift_retain();
        goto LABEL_12;
      }
      uint64_t v28 = qword_100E62BC0;
      swift_retain_n();
      swift_retain_n();
      swift_retain();
      if (v28 != -1) {
        swift_once();
      }
      sub_1002506D4(v22, (uint64_t)sub_100274AAC, (uint64_t)v27);
    }
    else
    {
      if (v23 != 0.0)
      {
        sub_1001AB3E0();
        swift_retain_n();
        v36[1] = a6;
        swift_retain_n();
        swift_retain_n();
        v36[0] = static OS_dispatch_queue.main.getter();
        static DispatchTime.now()();
        + infix(_:_:)();
        uint64_t v38 = *(void *)(v38 + 8);
        ((void (*)(char *, uint64_t))v38)(v19, v45);
        uint64_t v29 = swift_allocObject();
        *(void *)(v29 + 16) = sub_100274AAC;
        *(void *)(v29 + 24) = v27;
        aBlock[4] = sub_100274AC4;
        aBlock[5] = v29;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = sub_10010A4D4;
        aBlock[3] = &unk_100E09EC0;
        id v30 = _Block_copy(aBlock);
        swift_retain();
        swift_release();
        id v31 = v39;
        static DispatchQoS.unspecified.getter();
        aBlock[0] = _swiftEmptyArrayStorage;
        sub_100128B0C((unint64_t *)&qword_100EA0200, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
        sub_10017DF08(&qword_100E75530);
        sub_1001246C8((unint64_t *)&qword_100EA0210, &qword_100E75530);
        id v32 = v41;
        uint64_t v33 = v37;
        dispatch thunk of SetAlgebra.init<A>(_:)();
        id v34 = v44;
        id v35 = (void *)v36[0];
        OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
        _Block_release(v30);

        (*(void (**)(char *, uint64_t))(v43 + 8))(v32, v33);
        (*(void (**)(char *, uint64_t))(v40 + 8))(v31, v42);
        ((void (*)(char *, uint64_t))v38)(v34, v45);
        swift_release();
        swift_release();
        goto LABEL_12;
      }
      swift_retain_n();
      swift_retain_n();
      swift_retain();
      sub_100269120(a5, a6, (uint64_t)v48, v22, a7);
    }
    swift_release();
LABEL_12:
    swift_release();
    sub_1001781AC((uint64_t)v48, &qword_100E647A8);
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_100260408(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4, void (*a5)(uint64_t), uint64_t a6, void (*a7)(uint64_t), uint64_t a8)
{
  uint64_t v14 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v43 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v41 = (char *)v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = type metadata accessor for DispatchQoS();
  uint64_t v40 = *(void *)(v42 - 8);
  __chkstk_darwin(v42);
  uint64_t v39 = (char *)v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = type metadata accessor for DispatchTime();
  uint64_t v38 = *(void *)(v45 - 8);
  uint64_t v17 = __chkstk_darwin(v45);
  uint64_t v19 = (char *)v36 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  int v44 = (char *)v36 - v20;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v22 = result;
    uint64_t v37 = v14;
    double v23 = COERCE_DOUBLE(a3(a1));
    char v25 = v24;
    uint64_t v46 = a8;
    sub_10006DF38(a1, (uint64_t)__src, &qword_100E647A8);
    uint64_t v26 = v46;
    sub_10006DF38((uint64_t)__src, (uint64_t)v48, &qword_100E647A8);
    char v27 = (void *)swift_allocObject();
    v27[2] = a5;
    v27[3] = a6;
    memcpy(v27 + 4, __src, 0x48uLL);
    v27[13] = v22;
    v27[14] = a7;
    v27[15] = v26;
    if (v25)
    {
      if (v23 == 0.0)
      {
        swift_retain_n();
        swift_retain();
        swift_retain();
        goto LABEL_12;
      }
      uint64_t v28 = qword_100E62BC0;
      swift_retain_n();
      swift_retain_n();
      swift_retain();
      if (v28 != -1) {
        swift_once();
      }
      sub_100250A94(v22, (uint64_t)sub_100274B98, (uint64_t)v27);
    }
    else
    {
      if (v23 != 0.0)
      {
        sub_1001AB3E0();
        swift_retain_n();
        v36[1] = a6;
        swift_retain_n();
        swift_retain_n();
        v36[0] = static OS_dispatch_queue.main.getter();
        static DispatchTime.now()();
        + infix(_:_:)();
        uint64_t v38 = *(void *)(v38 + 8);
        ((void (*)(char *, uint64_t))v38)(v19, v45);
        uint64_t v29 = swift_allocObject();
        *(void *)(v29 + 16) = sub_100274B98;
        *(void *)(v29 + 24) = v27;
        aBlock[4] = sub_100276768;
        aBlock[5] = v29;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = sub_10010A4D4;
        aBlock[3] = &unk_100E0A078;
        id v30 = _Block_copy(aBlock);
        swift_retain();
        swift_release();
        id v31 = v39;
        static DispatchQoS.unspecified.getter();
        aBlock[0] = _swiftEmptyArrayStorage;
        sub_100128B0C((unint64_t *)&qword_100EA0200, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
        sub_10017DF08(&qword_100E75530);
        sub_1001246C8((unint64_t *)&qword_100EA0210, &qword_100E75530);
        id v32 = v41;
        uint64_t v33 = v37;
        dispatch thunk of SetAlgebra.init<A>(_:)();
        id v34 = v44;
        id v35 = (void *)v36[0];
        OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
        _Block_release(v30);

        (*(void (**)(char *, uint64_t))(v43 + 8))(v32, v33);
        (*(void (**)(char *, uint64_t))(v40 + 8))(v31, v42);
        ((void (*)(char *, uint64_t))v38)(v34, v45);
        swift_release();
        swift_release();
        goto LABEL_12;
      }
      swift_retain_n();
      swift_retain_n();
      swift_retain();
      sub_100269784(a5, a6, (uint64_t)v48, v22, a7, v26);
    }
    swift_release();
LABEL_12:
    swift_release();
    sub_1001781AC((uint64_t)v48, &qword_100E647A8);
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_100260AC0(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4, void *(*a5)(long long *__return_ptr, uint64_t), uint64_t a6, void (*a7)(long long *__return_ptr, uint64_t *), uint64_t a8)
{
  uint64_t v14 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v43 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v41 = (char *)v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = type metadata accessor for DispatchQoS();
  uint64_t v40 = *(void *)(v42 - 8);
  __chkstk_darwin(v42);
  uint64_t v39 = (char *)v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = type metadata accessor for DispatchTime();
  uint64_t v38 = *(void *)(v45 - 8);
  __chkstk_darwin(v45);
  uint64_t v18 = (char *)v36 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  int v44 = (char *)v36 - v20;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v22 = result;
    uint64_t v37 = v14;
    double v23 = COERCE_DOUBLE(a3(a1));
    char v25 = v24;
    uint64_t v46 = a8;
    sub_10006DF38(a1, (uint64_t)__src, &qword_100E647A8);
    uint64_t v26 = v46;
    sub_10006DF38((uint64_t)__src, (uint64_t)v48, &qword_100E647A8);
    char v27 = (void *)swift_allocObject();
    v27[2] = a5;
    v27[3] = a6;
    memcpy(v27 + 4, __src, 0x48uLL);
    v27[13] = v22;
    v27[14] = a7;
    v27[15] = v26;
    if (v25)
    {
      if (v23 == 0.0)
      {
        swift_retain_n();
        swift_retain();
        swift_retain();
        goto LABEL_12;
      }
      uint64_t v28 = qword_100E62BC0;
      swift_retain_n();
      swift_retain_n();
      swift_retain();
      if (v28 != -1) {
        swift_once();
      }
      sub_100250E5C(v22, (uint64_t)sub_100274C98, (uint64_t)v27);
    }
    else
    {
      if (v23 != 0.0)
      {
        sub_1001AB3E0();
        swift_retain_n();
        v36[1] = a6;
        swift_retain_n();
        swift_retain_n();
        v36[0] = static OS_dispatch_queue.main.getter();
        static DispatchTime.now()();
        + infix(_:_:)();
        uint64_t v38 = *(void *)(v38 + 8);
        ((void (*)(char *, uint64_t))v38)(v18, v45);
        uint64_t v29 = swift_allocObject();
        *(void *)(v29 + 16) = sub_100274C98;
        *(void *)(v29 + 24) = v27;
        aBlock[4] = sub_100276768;
        aBlock[5] = v29;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = sub_10010A4D4;
        aBlock[3] = &unk_100E0A1E0;
        id v30 = _Block_copy(aBlock);
        swift_retain();
        swift_release();
        id v31 = v39;
        static DispatchQoS.unspecified.getter();
        aBlock[0] = _swiftEmptyArrayStorage;
        sub_100128B0C((unint64_t *)&qword_100EA0200, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
        sub_10017DF08(&qword_100E75530);
        sub_1001246C8((unint64_t *)&qword_100EA0210, &qword_100E75530);
        id v32 = v41;
        uint64_t v33 = v37;
        dispatch thunk of SetAlgebra.init<A>(_:)();
        id v34 = v44;
        id v35 = (void *)v36[0];
        OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
        _Block_release(v30);

        (*(void (**)(char *, uint64_t))(v43 + 8))(v32, v33);
        (*(void (**)(char *, uint64_t))(v40 + 8))(v31, v42);
        ((void (*)(char *, uint64_t))v38)(v34, v45);
        swift_release();
        swift_release();
        goto LABEL_12;
      }
      swift_retain_n();
      swift_retain_n();
      swift_retain();
      sub_10026A0D4(a5, a6, (uint64_t)v48, v22, a7);
    }
    swift_release();
LABEL_12:
    swift_release();
    sub_1001781AC((uint64_t)v48, &qword_100E647A8);
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_100261178(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4, void (*a5)(uint64_t), uint64_t a6, void (*a7)(uint64_t), uint64_t a8)
{
  uint64_t v14 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v43 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v41 = (char *)v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = type metadata accessor for DispatchQoS();
  uint64_t v40 = *(void *)(v42 - 8);
  __chkstk_darwin(v42);
  uint64_t v39 = (char *)v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = type metadata accessor for DispatchTime();
  uint64_t v38 = *(void *)(v45 - 8);
  uint64_t v17 = __chkstk_darwin(v45);
  uint64_t v19 = (char *)v36 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  int v44 = (char *)v36 - v20;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v22 = result;
    uint64_t v37 = v14;
    double v23 = COERCE_DOUBLE(a3(a1));
    char v25 = v24;
    uint64_t v46 = a8;
    sub_10006DF38(a1, (uint64_t)__src, &qword_100E647A8);
    uint64_t v26 = v46;
    sub_10006DF38((uint64_t)__src, (uint64_t)v48, &qword_100E647A8);
    char v27 = (void *)swift_allocObject();
    v27[2] = a5;
    v27[3] = a6;
    memcpy(v27 + 4, __src, 0x48uLL);
    v27[13] = v22;
    v27[14] = a7;
    v27[15] = v26;
    if (v25)
    {
      if (v23 == 0.0)
      {
        swift_retain_n();
        swift_retain();
        swift_retain();
        goto LABEL_12;
      }
      uint64_t v28 = qword_100E62BC0;
      swift_retain_n();
      swift_retain_n();
      swift_retain();
      if (v28 != -1) {
        swift_once();
      }
      sub_10025121C(v22, (uint64_t)sub_100275000, (uint64_t)v27);
    }
    else
    {
      if (v23 != 0.0)
      {
        sub_1001AB3E0();
        swift_retain_n();
        v36[1] = a6;
        swift_retain_n();
        swift_retain_n();
        v36[0] = static OS_dispatch_queue.main.getter();
        static DispatchTime.now()();
        + infix(_:_:)();
        uint64_t v38 = *(void *)(v38 + 8);
        ((void (*)(char *, uint64_t))v38)(v19, v45);
        uint64_t v29 = swift_allocObject();
        *(void *)(v29 + 16) = sub_100275000;
        *(void *)(v29 + 24) = v27;
        aBlock[4] = sub_100276768;
        aBlock[5] = v29;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = sub_10010A4D4;
        aBlock[3] = &unk_100E0A348;
        id v30 = _Block_copy(aBlock);
        swift_retain();
        swift_release();
        id v31 = v39;
        static DispatchQoS.unspecified.getter();
        aBlock[0] = _swiftEmptyArrayStorage;
        sub_100128B0C((unint64_t *)&qword_100EA0200, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
        sub_10017DF08(&qword_100E75530);
        sub_1001246C8((unint64_t *)&qword_100EA0210, &qword_100E75530);
        id v32 = v41;
        uint64_t v33 = v37;
        dispatch thunk of SetAlgebra.init<A>(_:)();
        id v34 = v44;
        id v35 = (void *)v36[0];
        OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
        _Block_release(v30);

        (*(void (**)(char *, uint64_t))(v43 + 8))(v32, v33);
        (*(void (**)(char *, uint64_t))(v40 + 8))(v31, v42);
        ((void (*)(char *, uint64_t))v38)(v34, v45);
        swift_release();
        swift_release();
        goto LABEL_12;
      }
      swift_retain_n();
      swift_retain_n();
      swift_retain();
      sub_10026AA0C(a5, a6, (uint64_t)v48, v22, a7, v26);
    }
    swift_release();
LABEL_12:
    swift_release();
    sub_1001781AC((uint64_t)v48, &qword_100E647A8);
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_100261830(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4, void *(*a5)(long long *__return_ptr, uint64_t), uint64_t a6, void (*a7)(long long *), void *a8)
{
  uint64_t v14 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v43 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v41 = (char *)v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = type metadata accessor for DispatchQoS();
  uint64_t v40 = *(void *)(v42 - 8);
  __chkstk_darwin(v42);
  uint64_t v39 = (char *)v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = type metadata accessor for DispatchTime();
  uint64_t v38 = *(void *)(v45 - 8);
  uint64_t v17 = __chkstk_darwin(v45);
  uint64_t v19 = (char *)v36 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  int v44 = (char *)v36 - v20;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v22 = result;
    uint64_t v37 = v14;
    double v23 = COERCE_DOUBLE(a3(a1));
    char v25 = v24;
    uint64_t v46 = a8;
    sub_10006DF38(a1, (uint64_t)__src, &qword_100E647A8);
    uint64_t v26 = v46;
    sub_10006DF38((uint64_t)__src, (uint64_t)v48, &qword_100E647A8);
    char v27 = (void *)swift_allocObject();
    v27[2] = a5;
    v27[3] = a6;
    memcpy(v27 + 4, __src, 0x48uLL);
    v27[13] = v22;
    v27[14] = a7;
    v27[15] = v26;
    if (v25)
    {
      if (v23 == 0.0)
      {
        swift_retain_n();
        swift_retain();
        swift_retain();
        goto LABEL_12;
      }
      uint64_t v28 = qword_100E62BC0;
      swift_retain_n();
      swift_retain_n();
      swift_retain();
      if (v28 != -1) {
        swift_once();
      }
      sub_1002515E0(v22, (uint64_t)sub_10027511C, (uint64_t)v27);
    }
    else
    {
      if (v23 != 0.0)
      {
        sub_1001AB3E0();
        swift_retain_n();
        v36[1] = a6;
        swift_retain_n();
        swift_retain_n();
        v36[0] = static OS_dispatch_queue.main.getter();
        static DispatchTime.now()();
        + infix(_:_:)();
        uint64_t v38 = *(void *)(v38 + 8);
        ((void (*)(char *, uint64_t))v38)(v19, v45);
        uint64_t v29 = swift_allocObject();
        *(void *)(v29 + 16) = sub_10027511C;
        *(void *)(v29 + 24) = v27;
        aBlock[4] = sub_100276768;
        aBlock[5] = v29;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = sub_10010A4D4;
        aBlock[3] = &unk_100E0A4B0;
        id v30 = _Block_copy(aBlock);
        swift_retain();
        swift_release();
        id v31 = v39;
        static DispatchQoS.unspecified.getter();
        aBlock[0] = _swiftEmptyArrayStorage;
        sub_100128B0C((unint64_t *)&qword_100EA0200, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
        sub_10017DF08(&qword_100E75530);
        sub_1001246C8((unint64_t *)&qword_100EA0210, &qword_100E75530);
        id v32 = v41;
        uint64_t v33 = v37;
        dispatch thunk of SetAlgebra.init<A>(_:)();
        id v34 = v44;
        id v35 = (void *)v36[0];
        OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
        _Block_release(v30);

        (*(void (**)(char *, uint64_t))(v43 + 8))(v32, v33);
        (*(void (**)(char *, uint64_t))(v40 + 8))(v31, v42);
        ((void (*)(char *, uint64_t))v38)(v34, v45);
        swift_release();
        swift_release();
        goto LABEL_12;
      }
      swift_retain_n();
      swift_retain_n();
      swift_retain();
      sub_10026B360(a5, a6, (uint64_t)v48, v22, a7, v26);
    }
    swift_release();
LABEL_12:
    swift_release();
    sub_1001781AC((uint64_t)v48, &qword_100E647A8);
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_100261EE8(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4, void (*a5)(uint64_t), uint64_t a6, void (*a7)(char *), uint64_t a8)
{
  uint64_t v14 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v43 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v41 = (char *)v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = type metadata accessor for DispatchQoS();
  uint64_t v40 = *(void *)(v42 - 8);
  __chkstk_darwin(v42);
  uint64_t v39 = (char *)v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = type metadata accessor for DispatchTime();
  uint64_t v38 = *(void *)(v45 - 8);
  uint64_t v17 = __chkstk_darwin(v45);
  uint64_t v19 = (char *)v36 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  int v44 = (char *)v36 - v20;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v22 = result;
    uint64_t v37 = v14;
    double v23 = COERCE_DOUBLE(a3(a1));
    char v25 = v24;
    uint64_t v46 = a8;
    sub_10006DF38(a1, (uint64_t)__src, &qword_100E647A8);
    uint64_t v26 = v46;
    sub_10006DF38((uint64_t)__src, (uint64_t)v48, &qword_100E647A8);
    char v27 = (void *)swift_allocObject();
    v27[2] = a5;
    v27[3] = a6;
    memcpy(v27 + 4, __src, 0x48uLL);
    v27[13] = v22;
    v27[14] = a7;
    v27[15] = v26;
    if (v25)
    {
      if (v23 == 0.0)
      {
        swift_retain_n();
        swift_retain();
        swift_retain();
        goto LABEL_12;
      }
      uint64_t v28 = qword_100E62BC0;
      swift_retain_n();
      swift_retain_n();
      swift_retain();
      if (v28 != -1) {
        swift_once();
      }
      sub_1002519A4(v22, (uint64_t)sub_100275398, (uint64_t)v27);
    }
    else
    {
      if (v23 != 0.0)
      {
        sub_1001AB3E0();
        swift_retain_n();
        v36[1] = a6;
        swift_retain_n();
        swift_retain_n();
        v36[0] = static OS_dispatch_queue.main.getter();
        static DispatchTime.now()();
        + infix(_:_:)();
        uint64_t v38 = *(void *)(v38 + 8);
        ((void (*)(char *, uint64_t))v38)(v19, v45);
        uint64_t v29 = swift_allocObject();
        *(void *)(v29 + 16) = sub_100275398;
        *(void *)(v29 + 24) = v27;
        aBlock[4] = sub_100276768;
        aBlock[5] = v29;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = sub_10010A4D4;
        aBlock[3] = &unk_100E0A618;
        id v30 = _Block_copy(aBlock);
        swift_retain();
        swift_release();
        id v31 = v39;
        static DispatchQoS.unspecified.getter();
        aBlock[0] = _swiftEmptyArrayStorage;
        sub_100128B0C((unint64_t *)&qword_100EA0200, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
        sub_10017DF08(&qword_100E75530);
        sub_1001246C8((unint64_t *)&qword_100EA0210, &qword_100E75530);
        id v32 = v41;
        uint64_t v33 = v37;
        dispatch thunk of SetAlgebra.init<A>(_:)();
        id v34 = v44;
        id v35 = (void *)v36[0];
        OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
        _Block_release(v30);

        (*(void (**)(char *, uint64_t))(v43 + 8))(v32, v33);
        (*(void (**)(char *, uint64_t))(v40 + 8))(v31, v42);
        ((void (*)(char *, uint64_t))v38)(v34, v45);
        swift_release();
        swift_release();
        goto LABEL_12;
      }
      swift_retain_n();
      swift_retain_n();
      swift_retain();
      sub_10026BD04(a5, a6, (uint64_t)v48, v22, a7, v26);
    }
    swift_release();
LABEL_12:
    swift_release();
    sub_1001781AC((uint64_t)v48, &qword_100E647A8);
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1002625A0(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4, void *(*a5)(uint64_t *__return_ptr, uint64_t, __n128), uint64_t a6, void (*a7)(uint64_t *), uint64_t a8)
{
  uint64_t v14 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v43 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v41 = (char *)v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = type metadata accessor for DispatchQoS();
  uint64_t v40 = *(void *)(v42 - 8);
  __chkstk_darwin(v42);
  uint64_t v39 = (char *)v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = type metadata accessor for DispatchTime();
  uint64_t v38 = *(void *)(v45 - 8);
  __chkstk_darwin(v45);
  uint64_t v18 = (char *)v36 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  int v44 = (char *)v36 - v20;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v22 = result;
    uint64_t v37 = v14;
    double v23 = COERCE_DOUBLE(a3(a1));
    char v25 = v24;
    uint64_t v46 = a8;
    sub_10006DF38(a1, (uint64_t)__src, &qword_100E647A8);
    uint64_t v26 = v46;
    sub_10006DF38((uint64_t)__src, (uint64_t)v48, &qword_100E647A8);
    char v27 = (void *)swift_allocObject();
    v27[2] = a5;
    v27[3] = a6;
    memcpy(v27 + 4, __src, 0x48uLL);
    v27[13] = v22;
    v27[14] = a7;
    v27[15] = v26;
    if (v25)
    {
      if (v23 == 0.0)
      {
        swift_retain_n();
        swift_retain();
        swift_retain();
        goto LABEL_12;
      }
      uint64_t v28 = qword_100E62BC0;
      swift_retain_n();
      swift_retain_n();
      swift_retain();
      if (v28 != -1) {
        swift_once();
      }
      sub_100251D6C(v22, (uint64_t)sub_100275498, (uint64_t)v27);
    }
    else
    {
      if (v23 != 0.0)
      {
        sub_1001AB3E0();
        swift_retain_n();
        v36[1] = a6;
        swift_retain_n();
        swift_retain_n();
        v36[0] = static OS_dispatch_queue.main.getter();
        static DispatchTime.now()();
        + infix(_:_:)();
        uint64_t v38 = *(void *)(v38 + 8);
        ((void (*)(char *, uint64_t))v38)(v18, v45);
        uint64_t v29 = swift_allocObject();
        *(void *)(v29 + 16) = sub_100275498;
        *(void *)(v29 + 24) = v27;
        aBlock[4] = sub_100276768;
        aBlock[5] = v29;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = sub_10010A4D4;
        aBlock[3] = &unk_100E0A780;
        id v30 = _Block_copy(aBlock);
        swift_retain();
        swift_release();
        id v31 = v39;
        static DispatchQoS.unspecified.getter();
        aBlock[0] = _swiftEmptyArrayStorage;
        sub_100128B0C((unint64_t *)&qword_100EA0200, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
        sub_10017DF08(&qword_100E75530);
        sub_1001246C8((unint64_t *)&qword_100EA0210, &qword_100E75530);
        id v32 = v41;
        uint64_t v33 = v37;
        dispatch thunk of SetAlgebra.init<A>(_:)();
        id v34 = v44;
        id v35 = (void *)v36[0];
        OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
        _Block_release(v30);

        (*(void (**)(char *, uint64_t))(v43 + 8))(v32, v33);
        (*(void (**)(char *, uint64_t))(v40 + 8))(v31, v42);
        ((void (*)(char *, uint64_t))v38)(v34, v45);
        swift_release();
        swift_release();
        goto LABEL_12;
      }
      swift_retain_n();
      swift_retain_n();
      swift_retain();
      sub_10026C700(a5, a6, (uint64_t)v48, v22, a7);
    }
    swift_release();
LABEL_12:
    swift_release();
    sub_1001781AC((uint64_t)v48, &qword_100E647A8);
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_100262C58(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4, void (*a5)(uint64_t, __n128), uint64_t a6, void (*a7)(uint64_t), uint64_t a8)
{
  uint64_t v14 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v43 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v41 = (char *)v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = type metadata accessor for DispatchQoS();
  uint64_t v40 = *(void *)(v42 - 8);
  __chkstk_darwin(v42);
  uint64_t v39 = (char *)v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = type metadata accessor for DispatchTime();
  uint64_t v38 = *(void *)(v45 - 8);
  __chkstk_darwin(v45);
  uint64_t v18 = (char *)v36 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  int v44 = (char *)v36 - v20;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v22 = result;
    uint64_t v37 = v14;
    double v23 = COERCE_DOUBLE(a3(a1));
    char v25 = v24;
    uint64_t v46 = a8;
    sub_10006DF38(a1, (uint64_t)__src, &qword_100E647A8);
    uint64_t v26 = v46;
    sub_10006DF38((uint64_t)__src, (uint64_t)v48, &qword_100E647A8);
    char v27 = (void *)swift_allocObject();
    v27[2] = a5;
    v27[3] = a6;
    memcpy(v27 + 4, __src, 0x48uLL);
    v27[13] = v22;
    v27[14] = a7;
    v27[15] = v26;
    if (v25)
    {
      if (v23 == 0.0)
      {
        swift_retain_n();
        swift_retain();
        swift_retain();
        goto LABEL_12;
      }
      uint64_t v28 = qword_100E62BC0;
      swift_retain_n();
      swift_retain_n();
      swift_retain();
      if (v28 != -1) {
        swift_once();
      }
      sub_10025212C(v22, (uint64_t)sub_10027553C, (uint64_t)v27);
    }
    else
    {
      if (v23 != 0.0)
      {
        sub_1001AB3E0();
        swift_retain_n();
        v36[1] = a6;
        swift_retain_n();
        swift_retain_n();
        v36[0] = static OS_dispatch_queue.main.getter();
        static DispatchTime.now()();
        + infix(_:_:)();
        uint64_t v38 = *(void *)(v38 + 8);
        ((void (*)(char *, uint64_t))v38)(v18, v45);
        uint64_t v29 = swift_allocObject();
        *(void *)(v29 + 16) = sub_10027553C;
        *(void *)(v29 + 24) = v27;
        aBlock[4] = sub_100276768;
        aBlock[5] = v29;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = sub_10010A4D4;
        aBlock[3] = &unk_100E0A8E8;
        id v30 = _Block_copy(aBlock);
        swift_retain();
        swift_release();
        id v31 = v39;
        static DispatchQoS.unspecified.getter();
        aBlock[0] = _swiftEmptyArrayStorage;
        sub_100128B0C((unint64_t *)&qword_100EA0200, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
        sub_10017DF08(&qword_100E75530);
        sub_1001246C8((unint64_t *)&qword_100EA0210, &qword_100E75530);
        id v32 = v41;
        uint64_t v33 = v37;
        dispatch thunk of SetAlgebra.init<A>(_:)();
        id v34 = v44;
        id v35 = (void *)v36[0];
        OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
        _Block_release(v30);

        (*(void (**)(char *, uint64_t))(v43 + 8))(v32, v33);
        (*(void (**)(char *, uint64_t))(v40 + 8))(v31, v42);
        ((void (*)(char *, uint64_t))v38)(v34, v45);
        swift_release();
        swift_release();
        goto LABEL_12;
      }
      swift_retain_n();
      swift_retain_n();
      swift_retain();
      sub_10026CD64(a5, a6, (uint64_t)v48, v22, a7, v26);
    }
    swift_release();
LABEL_12:
    swift_release();
    sub_1001781AC((uint64_t)v48, &qword_100E647A8);
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_100263310(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4, void *(*a5)(uint64_t *__return_ptr, uint64_t), uint64_t a6, void (*a7)(uint64_t *__return_ptr), uint64_t a8)
{
  uint64_t v14 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v43 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v41 = (char *)v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = type metadata accessor for DispatchQoS();
  uint64_t v40 = *(void *)(v42 - 8);
  __chkstk_darwin(v42);
  uint64_t v39 = (char *)v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = type metadata accessor for DispatchTime();
  uint64_t v38 = *(void *)(v45 - 8);
  __chkstk_darwin(v45);
  uint64_t v18 = (char *)v36 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  int v44 = (char *)v36 - v20;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v22 = result;
    uint64_t v37 = v14;
    double v23 = COERCE_DOUBLE(a3(a1));
    char v25 = v24;
    uint64_t v46 = a8;
    sub_10006DF38(a1, (uint64_t)__src, &qword_100E647A8);
    uint64_t v26 = v46;
    sub_10006DF38((uint64_t)__src, (uint64_t)v48, &qword_100E647A8);
    char v27 = (void *)swift_allocObject();
    v27[2] = a5;
    v27[3] = a6;
    memcpy(v27 + 4, __src, 0x48uLL);
    v27[13] = v22;
    v27[14] = a7;
    v27[15] = v26;
    if (v25)
    {
      if (v23 == 0.0)
      {
        swift_retain_n();
        swift_retain();
        swift_retain();
        goto LABEL_12;
      }
      uint64_t v28 = qword_100E62BC0;
      swift_retain_n();
      swift_retain_n();
      swift_retain();
      if (v28 != -1) {
        swift_once();
      }
      sub_1002524F0(v22, (uint64_t)sub_100275614, (uint64_t)v27);
    }
    else
    {
      if (v23 != 0.0)
      {
        sub_1001AB3E0();
        swift_retain_n();
        v36[1] = a6;
        swift_retain_n();
        swift_retain_n();
        v36[0] = static OS_dispatch_queue.main.getter();
        static DispatchTime.now()();
        + infix(_:_:)();
        uint64_t v38 = *(void *)(v38 + 8);
        ((void (*)(char *, uint64_t))v38)(v18, v45);
        uint64_t v29 = swift_allocObject();
        *(void *)(v29 + 16) = sub_100275614;
        *(void *)(v29 + 24) = v27;
        aBlock[4] = sub_100276768;
        aBlock[5] = v29;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = sub_10010A4D4;
        aBlock[3] = &unk_100E0AA50;
        id v30 = _Block_copy(aBlock);
        swift_retain();
        swift_release();
        id v31 = v39;
        static DispatchQoS.unspecified.getter();
        aBlock[0] = _swiftEmptyArrayStorage;
        sub_100128B0C((unint64_t *)&qword_100EA0200, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
        sub_10017DF08(&qword_100E75530);
        sub_1001246C8((unint64_t *)&qword_100EA0210, &qword_100E75530);
        id v32 = v41;
        uint64_t v33 = v37;
        dispatch thunk of SetAlgebra.init<A>(_:)();
        id v34 = v44;
        id v35 = (void *)v36[0];
        OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
        _Block_release(v30);

        (*(void (**)(char *, uint64_t))(v43 + 8))(v32, v33);
        (*(void (**)(char *, uint64_t))(v40 + 8))(v31, v42);
        ((void (*)(char *, uint64_t))v38)(v34, v45);
        swift_release();
        swift_release();
        goto LABEL_12;
      }
      swift_retain_n();
      swift_retain_n();
      swift_retain();
      sub_10026D6B8(a5, a6, (uint64_t)v48, v22, a7);
    }
    swift_release();
LABEL_12:
    swift_release();
    sub_1001781AC((uint64_t)v48, &qword_100E647A8);
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1002639C8(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4, void (*a5)(uint64_t), uint64_t a6, void (*a7)(uint64_t), uint64_t a8)
{
  uint64_t v14 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v43 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v41 = (char *)v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = type metadata accessor for DispatchQoS();
  uint64_t v40 = *(void *)(v42 - 8);
  __chkstk_darwin(v42);
  uint64_t v39 = (char *)v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = type metadata accessor for DispatchTime();
  uint64_t v38 = *(void *)(v45 - 8);
  uint64_t v17 = __chkstk_darwin(v45);
  uint64_t v19 = (char *)v36 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  int v44 = (char *)v36 - v20;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v22 = result;
    uint64_t v37 = v14;
    double v23 = COERCE_DOUBLE(a3(a1));
    char v25 = v24;
    uint64_t v46 = a8;
    sub_10006DF38(a1, (uint64_t)__src, &qword_100E647A8);
    uint64_t v26 = v46;
    sub_10006DF38((uint64_t)__src, (uint64_t)v48, &qword_100E647A8);
    char v27 = (void *)swift_allocObject();
    v27[2] = a5;
    v27[3] = a6;
    memcpy(v27 + 4, __src, 0x48uLL);
    v27[13] = v22;
    v27[14] = a7;
    v27[15] = v26;
    if (v25)
    {
      if (v23 == 0.0)
      {
        swift_retain_n();
        swift_retain();
        swift_retain();
        goto LABEL_12;
      }
      uint64_t v28 = qword_100E62BC0;
      swift_retain_n();
      swift_retain_n();
      swift_retain();
      if (v28 != -1) {
        swift_once();
      }
      sub_1002528B4(v22, (uint64_t)sub_100275704, (uint64_t)v27);
    }
    else
    {
      if (v23 != 0.0)
      {
        sub_1001AB3E0();
        swift_retain_n();
        v36[1] = a6;
        swift_retain_n();
        swift_retain_n();
        v36[0] = static OS_dispatch_queue.main.getter();
        static DispatchTime.now()();
        + infix(_:_:)();
        uint64_t v38 = *(void *)(v38 + 8);
        ((void (*)(char *, uint64_t))v38)(v19, v45);
        uint64_t v29 = swift_allocObject();
        *(void *)(v29 + 16) = sub_100275704;
        *(void *)(v29 + 24) = v27;
        aBlock[4] = sub_100276768;
        aBlock[5] = v29;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = sub_10010A4D4;
        aBlock[3] = &unk_100E0ABB8;
        id v30 = _Block_copy(aBlock);
        swift_retain();
        swift_release();
        id v31 = v39;
        static DispatchQoS.unspecified.getter();
        aBlock[0] = _swiftEmptyArrayStorage;
        sub_100128B0C((unint64_t *)&qword_100EA0200, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
        sub_10017DF08(&qword_100E75530);
        sub_1001246C8((unint64_t *)&qword_100EA0210, &qword_100E75530);
        id v32 = v41;
        uint64_t v33 = v37;
        dispatch thunk of SetAlgebra.init<A>(_:)();
        id v34 = v44;
        id v35 = (void *)v36[0];
        OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
        _Block_release(v30);

        (*(void (**)(char *, uint64_t))(v43 + 8))(v32, v33);
        (*(void (**)(char *, uint64_t))(v40 + 8))(v31, v42);
        ((void (*)(char *, uint64_t))v38)(v34, v45);
        swift_release();
        swift_release();
        goto LABEL_12;
      }
      swift_retain_n();
      swift_retain_n();
      swift_retain();
      sub_10026D9C0(a5, a6, (uint64_t)v48, v22, a7, v26);
    }
    swift_release();
LABEL_12:
    swift_release();
    sub_1001781AC((uint64_t)v48, &qword_100E647A8);
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_100264080(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4, void (*a5)(uint64_t), uint64_t a6, void (*a7)(uint64_t), uint64_t a8)
{
  uint64_t v14 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v43 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v41 = (char *)v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = type metadata accessor for DispatchQoS();
  uint64_t v40 = *(void *)(v42 - 8);
  __chkstk_darwin(v42);
  uint64_t v39 = (char *)v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = type metadata accessor for DispatchTime();
  uint64_t v38 = *(void *)(v45 - 8);
  uint64_t v17 = __chkstk_darwin(v45);
  uint64_t v19 = (char *)v36 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  int v44 = (char *)v36 - v20;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v22 = result;
    uint64_t v37 = v14;
    double v23 = COERCE_DOUBLE(a3(a1));
    char v25 = v24;
    uint64_t v46 = a8;
    sub_10006DF38(a1, (uint64_t)__src, &qword_100E647A8);
    uint64_t v26 = v46;
    sub_10006DF38((uint64_t)__src, (uint64_t)v48, &qword_100E647A8);
    char v27 = (void *)swift_allocObject();
    v27[2] = a5;
    v27[3] = a6;
    memcpy(v27 + 4, __src, 0x48uLL);
    v27[13] = v22;
    v27[14] = a7;
    v27[15] = v26;
    if (v25)
    {
      if (v23 == 0.0)
      {
        swift_retain_n();
        swift_retain();
        swift_retain();
        goto LABEL_12;
      }
      uint64_t v28 = qword_100E62BC0;
      swift_retain_n();
      swift_retain_n();
      swift_retain();
      if (v28 != -1) {
        swift_once();
      }
      sub_100252C78(v22, (uint64_t)sub_1002757AC, (uint64_t)v27);
    }
    else
    {
      if (v23 != 0.0)
      {
        sub_1001AB3E0();
        swift_retain_n();
        v36[1] = a6;
        swift_retain_n();
        swift_retain_n();
        v36[0] = static OS_dispatch_queue.main.getter();
        static DispatchTime.now()();
        + infix(_:_:)();
        uint64_t v38 = *(void *)(v38 + 8);
        ((void (*)(char *, uint64_t))v38)(v19, v45);
        uint64_t v29 = swift_allocObject();
        *(void *)(v29 + 16) = sub_1002757AC;
        *(void *)(v29 + 24) = v27;
        aBlock[4] = sub_100276768;
        aBlock[5] = v29;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = sub_10010A4D4;
        aBlock[3] = &unk_100E0AD20;
        id v30 = _Block_copy(aBlock);
        swift_retain();
        swift_release();
        id v31 = v39;
        static DispatchQoS.unspecified.getter();
        aBlock[0] = _swiftEmptyArrayStorage;
        sub_100128B0C((unint64_t *)&qword_100EA0200, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
        sub_10017DF08(&qword_100E75530);
        sub_1001246C8((unint64_t *)&qword_100EA0210, &qword_100E75530);
        id v32 = v41;
        uint64_t v33 = v37;
        dispatch thunk of SetAlgebra.init<A>(_:)();
        id v34 = v44;
        id v35 = (void *)v36[0];
        OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
        _Block_release(v30);

        (*(void (**)(char *, uint64_t))(v43 + 8))(v32, v33);
        (*(void (**)(char *, uint64_t))(v40 + 8))(v31, v42);
        ((void (*)(char *, uint64_t))v38)(v34, v45);
        swift_release();
        swift_release();
        goto LABEL_12;
      }
      swift_retain_n();
      swift_retain_n();
      swift_retain();
      sub_10026E314(a5, a6, (uint64_t)v48, v22, a7, v26);
    }
    swift_release();
LABEL_12:
    swift_release();
    sub_1001781AC((uint64_t)v48, &qword_100E647A8);
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_100264738(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4, void (*a5)(uint64_t), uint64_t a6, void (*a7)(uint64_t), uint64_t a8)
{
  uint64_t v14 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v43 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v41 = (char *)v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = type metadata accessor for DispatchQoS();
  uint64_t v40 = *(void *)(v42 - 8);
  __chkstk_darwin(v42);
  uint64_t v39 = (char *)v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = type metadata accessor for DispatchTime();
  uint64_t v38 = *(void *)(v45 - 8);
  uint64_t v17 = __chkstk_darwin(v45);
  uint64_t v19 = (char *)v36 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  int v44 = (char *)v36 - v20;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v22 = result;
    uint64_t v37 = v14;
    double v23 = COERCE_DOUBLE(a3(a1));
    char v25 = v24;
    uint64_t v46 = a8;
    sub_10006DF38(a1, (uint64_t)__src, &qword_100E647A8);
    uint64_t v26 = v46;
    sub_10006DF38((uint64_t)__src, (uint64_t)v48, &qword_100E647A8);
    char v27 = (void *)swift_allocObject();
    v27[2] = a5;
    v27[3] = a6;
    memcpy(v27 + 4, __src, 0x48uLL);
    v27[13] = v22;
    v27[14] = a7;
    v27[15] = v26;
    if (v25)
    {
      if (v23 == 0.0)
      {
        swift_retain_n();
        swift_retain();
        swift_retain();
        goto LABEL_12;
      }
      uint64_t v28 = qword_100E62BC0;
      swift_retain_n();
      swift_retain_n();
      swift_retain();
      if (v28 != -1) {
        swift_once();
      }
      sub_10025303C(v22, (uint64_t)sub_100275854, (uint64_t)v27);
    }
    else
    {
      if (v23 != 0.0)
      {
        sub_1001AB3E0();
        swift_retain_n();
        v36[1] = a6;
        swift_retain_n();
        swift_retain_n();
        v36[0] = static OS_dispatch_queue.main.getter();
        static DispatchTime.now()();
        + infix(_:_:)();
        uint64_t v38 = *(void *)(v38 + 8);
        ((void (*)(char *, uint64_t))v38)(v19, v45);
        uint64_t v29 = swift_allocObject();
        *(void *)(v29 + 16) = sub_100275854;
        *(void *)(v29 + 24) = v27;
        aBlock[4] = sub_100276768;
        aBlock[5] = v29;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = sub_10010A4D4;
        aBlock[3] = &unk_100E0AE88;
        id v30 = _Block_copy(aBlock);
        swift_retain();
        swift_release();
        id v31 = v39;
        static DispatchQoS.unspecified.getter();
        aBlock[0] = _swiftEmptyArrayStorage;
        sub_100128B0C((unint64_t *)&qword_100EA0200, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
        sub_10017DF08(&qword_100E75530);
        sub_1001246C8((unint64_t *)&qword_100EA0210, &qword_100E75530);
        id v32 = v41;
        uint64_t v33 = v37;
        dispatch thunk of SetAlgebra.init<A>(_:)();
        id v34 = v44;
        id v35 = (void *)v36[0];
        OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
        _Block_release(v30);

        (*(void (**)(char *, uint64_t))(v43 + 8))(v32, v33);
        (*(void (**)(char *, uint64_t))(v40 + 8))(v31, v42);
        ((void (*)(char *, uint64_t))v38)(v34, v45);
        swift_release();
        swift_release();
        goto LABEL_12;
      }
      swift_retain_n();
      swift_retain_n();
      swift_retain();
      sub_10026EC68(a5, a6, (uint64_t)v48, v22, a7, v26);
    }
    swift_release();
LABEL_12:
    swift_release();
    sub_1001781AC((uint64_t)v48, &qword_100E647A8);
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_100264DF0(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4, void (*a5)(uint64_t, __n128), uint64_t a6, void (*a7)(uint64_t), uint64_t a8)
{
  uint64_t v14 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v43 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v41 = (char *)v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = type metadata accessor for DispatchQoS();
  uint64_t v40 = *(void *)(v42 - 8);
  __chkstk_darwin(v42);
  uint64_t v39 = (char *)v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = type metadata accessor for DispatchTime();
  uint64_t v38 = *(void *)(v45 - 8);
  __chkstk_darwin(v45);
  uint64_t v18 = (char *)v36 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  int v44 = (char *)v36 - v20;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v22 = result;
    uint64_t v37 = v14;
    double v23 = COERCE_DOUBLE(a3(a1));
    char v25 = v24;
    uint64_t v46 = a8;
    sub_10006DF38(a1, (uint64_t)__src, &qword_100E647A8);
    uint64_t v26 = v46;
    sub_10006DF38((uint64_t)__src, (uint64_t)v48, &qword_100E647A8);
    char v27 = (void *)swift_allocObject();
    v27[2] = a5;
    v27[3] = a6;
    memcpy(v27 + 4, __src, 0x48uLL);
    v27[13] = v22;
    v27[14] = a7;
    v27[15] = v26;
    if (v25)
    {
      if (v23 == 0.0)
      {
        swift_retain_n();
        swift_retain();
        swift_retain();
        goto LABEL_12;
      }
      uint64_t v28 = qword_100E62BC0;
      swift_retain_n();
      swift_retain_n();
      swift_retain();
      if (v28 != -1) {
        swift_once();
      }
      sub_100253400(v22, (uint64_t)sub_100275944, (uint64_t)v27);
    }
    else
    {
      if (v23 != 0.0)
      {
        sub_1001AB3E0();
        swift_retain_n();
        v36[1] = a6;
        swift_retain_n();
        swift_retain_n();
        v36[0] = static OS_dispatch_queue.main.getter();
        static DispatchTime.now()();
        + infix(_:_:)();
        uint64_t v38 = *(void *)(v38 + 8);
        ((void (*)(char *, uint64_t))v38)(v18, v45);
        uint64_t v29 = swift_allocObject();
        *(void *)(v29 + 16) = sub_100275944;
        *(void *)(v29 + 24) = v27;
        aBlock[4] = sub_100276768;
        aBlock[5] = v29;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = sub_10010A4D4;
        aBlock[3] = &unk_100E0B590;
        id v30 = _Block_copy(aBlock);
        swift_retain();
        swift_release();
        id v31 = v39;
        static DispatchQoS.unspecified.getter();
        aBlock[0] = _swiftEmptyArrayStorage;
        sub_100128B0C((unint64_t *)&qword_100EA0200, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
        sub_10017DF08(&qword_100E75530);
        sub_1001246C8((unint64_t *)&qword_100EA0210, &qword_100E75530);
        id v32 = v41;
        uint64_t v33 = v37;
        dispatch thunk of SetAlgebra.init<A>(_:)();
        id v34 = v44;
        id v35 = (void *)v36[0];
        OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
        _Block_release(v30);

        (*(void (**)(char *, uint64_t))(v43 + 8))(v32, v33);
        (*(void (**)(char *, uint64_t))(v40 + 8))(v31, v42);
        ((void (*)(char *, uint64_t))v38)(v34, v45);
        swift_release();
        swift_release();
        goto LABEL_12;
      }
      swift_retain_n();
      swift_retain_n();
      swift_retain();
      sub_10026F5BC(a5, a6, (uint64_t)v48, v22, a7, v26);
    }
    swift_release();
LABEL_12:
    swift_release();
    sub_1001781AC((uint64_t)v48, &qword_100E647A8);
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1002654A8(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4, void *(*a5)(long long *__return_ptr, uint64_t), uint64_t a6, void (*a7)(long long *__return_ptr, uint64_t *), uint64_t a8)
{
  uint64_t v14 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v43 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v41 = (char *)v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = type metadata accessor for DispatchQoS();
  uint64_t v40 = *(void *)(v42 - 8);
  __chkstk_darwin(v42);
  uint64_t v39 = (char *)v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = type metadata accessor for DispatchTime();
  uint64_t v38 = *(void *)(v45 - 8);
  __chkstk_darwin(v45);
  uint64_t v18 = (char *)v36 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  int v44 = (char *)v36 - v20;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v22 = result;
    uint64_t v37 = v14;
    double v23 = COERCE_DOUBLE(a3(a1));
    char v25 = v24;
    uint64_t v46 = a8;
    sub_10006DF38(a1, (uint64_t)__src, &qword_100E647A8);
    uint64_t v26 = v46;
    sub_10006DF38((uint64_t)__src, (uint64_t)v48, &qword_100E647A8);
    char v27 = (void *)swift_allocObject();
    v27[2] = a5;
    v27[3] = a6;
    memcpy(v27 + 4, __src, 0x48uLL);
    v27[13] = v22;
    v27[14] = a7;
    v27[15] = v26;
    if (v25)
    {
      if (v23 == 0.0)
      {
        swift_retain_n();
        swift_retain();
        swift_retain();
        goto LABEL_12;
      }
      uint64_t v28 = qword_100E62BC0;
      swift_retain_n();
      swift_retain_n();
      swift_retain();
      if (v28 != -1) {
        swift_once();
      }
      sub_1002537CC(v22, (uint64_t)sub_100275A5C, (uint64_t)v27);
    }
    else
    {
      if (v23 != 0.0)
      {
        sub_1001AB3E0();
        swift_retain_n();
        v36[1] = a6;
        swift_retain_n();
        swift_retain_n();
        v36[0] = static OS_dispatch_queue.main.getter();
        static DispatchTime.now()();
        + infix(_:_:)();
        uint64_t v38 = *(void *)(v38 + 8);
        ((void (*)(char *, uint64_t))v38)(v18, v45);
        uint64_t v29 = swift_allocObject();
        *(void *)(v29 + 16) = sub_100275A5C;
        *(void *)(v29 + 24) = v27;
        aBlock[4] = sub_100276768;
        aBlock[5] = v29;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = sub_10010A4D4;
        aBlock[3] = &unk_100E0B6F8;
        id v30 = _Block_copy(aBlock);
        swift_retain();
        swift_release();
        id v31 = v39;
        static DispatchQoS.unspecified.getter();
        aBlock[0] = _swiftEmptyArrayStorage;
        sub_100128B0C((unint64_t *)&qword_100EA0200, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
        sub_10017DF08(&qword_100E75530);
        sub_1001246C8((unint64_t *)&qword_100EA0210, &qword_100E75530);
        id v32 = v41;
        uint64_t v33 = v37;
        dispatch thunk of SetAlgebra.init<A>(_:)();
        id v34 = v44;
        id v35 = (void *)v36[0];
        OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
        _Block_release(v30);

        (*(void (**)(char *, uint64_t))(v43 + 8))(v32, v33);
        (*(void (**)(char *, uint64_t))(v40 + 8))(v31, v42);
        ((void (*)(char *, uint64_t))v38)(v34, v45);
        swift_release();
        swift_release();
        goto LABEL_12;
      }
      swift_retain_n();
      swift_retain_n();
      swift_retain();
      sub_10026FF0C(a5, a6, (uint64_t)v48, v22, a7);
    }
    swift_release();
LABEL_12:
    swift_release();
    sub_1001781AC((uint64_t)v48, &qword_100E647A8);
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_100265B60(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4, void (*a5)(uint64_t), uint64_t a6, void (*a7)(uint64_t *__return_ptr, char *), uint64_t a8)
{
  uint64_t v14 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v43 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v41 = (char *)v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = type metadata accessor for DispatchQoS();
  uint64_t v40 = *(void *)(v42 - 8);
  __chkstk_darwin(v42);
  uint64_t v39 = (char *)v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = type metadata accessor for DispatchTime();
  uint64_t v38 = *(void *)(v45 - 8);
  uint64_t v17 = __chkstk_darwin(v45);
  uint64_t v19 = (char *)v36 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  int v44 = (char *)v36 - v20;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v22 = result;
    uint64_t v37 = v14;
    double v23 = COERCE_DOUBLE(a3(a1));
    char v25 = v24;
    uint64_t v46 = a8;
    sub_10006DF38(a1, (uint64_t)__src, &qword_100E647A8);
    uint64_t v26 = v46;
    sub_10006DF38((uint64_t)__src, (uint64_t)v48, &qword_100E647A8);
    char v27 = (void *)swift_allocObject();
    v27[2] = a5;
    v27[3] = a6;
    memcpy(v27 + 4, __src, 0x48uLL);
    v27[13] = v22;
    v27[14] = a7;
    v27[15] = v26;
    if (v25)
    {
      if (v23 == 0.0)
      {
        swift_retain_n();
        swift_retain();
        swift_retain();
        goto LABEL_12;
      }
      uint64_t v28 = qword_100E62BC0;
      swift_retain_n();
      swift_retain_n();
      swift_retain();
      if (v28 != -1) {
        swift_once();
      }
      sub_100253B94(v22, (uint64_t)sub_100275EA0, (uint64_t)v27);
    }
    else
    {
      if (v23 != 0.0)
      {
        sub_1001AB3E0();
        swift_retain_n();
        v36[1] = a6;
        swift_retain_n();
        swift_retain_n();
        v36[0] = static OS_dispatch_queue.main.getter();
        static DispatchTime.now()();
        + infix(_:_:)();
        uint64_t v38 = *(void *)(v38 + 8);
        ((void (*)(char *, uint64_t))v38)(v19, v45);
        uint64_t v29 = swift_allocObject();
        *(void *)(v29 + 16) = sub_100275EA0;
        *(void *)(v29 + 24) = v27;
        aBlock[4] = sub_100276768;
        aBlock[5] = v29;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = sub_10010A4D4;
        aBlock[3] = &unk_100E0B860;
        id v30 = _Block_copy(aBlock);
        swift_retain();
        swift_release();
        id v31 = v39;
        static DispatchQoS.unspecified.getter();
        aBlock[0] = _swiftEmptyArrayStorage;
        sub_100128B0C((unint64_t *)&qword_100EA0200, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
        sub_10017DF08(&qword_100E75530);
        sub_1001246C8((unint64_t *)&qword_100EA0210, &qword_100E75530);
        id v32 = v41;
        uint64_t v33 = v37;
        dispatch thunk of SetAlgebra.init<A>(_:)();
        id v34 = v44;
        id v35 = (void *)v36[0];
        OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
        _Block_release(v30);

        (*(void (**)(char *, uint64_t))(v43 + 8))(v32, v33);
        (*(void (**)(char *, uint64_t))(v40 + 8))(v31, v42);
        ((void (*)(char *, uint64_t))v38)(v34, v45);
        swift_release();
        swift_release();
        goto LABEL_12;
      }
      swift_retain_n();
      swift_retain_n();
      swift_retain();
      sub_1002704FC(a5, a6, (uint64_t)v48, v22, a7, v26);
    }
    swift_release();
LABEL_12:
    swift_release();
    sub_1001781AC((uint64_t)v48, &qword_100E647A8);
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_100266218(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4, void (*a5)(uint64_t), uint64_t a6, void (*a7)(char *), uint64_t a8)
{
  uint64_t v14 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v43 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v41 = (char *)v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = type metadata accessor for DispatchQoS();
  uint64_t v40 = *(void *)(v42 - 8);
  __chkstk_darwin(v42);
  uint64_t v39 = (char *)v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = type metadata accessor for DispatchTime();
  uint64_t v38 = *(void *)(v45 - 8);
  uint64_t v17 = __chkstk_darwin(v45);
  uint64_t v19 = (char *)v36 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  int v44 = (char *)v36 - v20;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v22 = result;
    uint64_t v37 = v14;
    double v23 = COERCE_DOUBLE(a3(a1));
    char v25 = v24;
    uint64_t v46 = a8;
    sub_10006DF38(a1, (uint64_t)__src, &qword_100E647A8);
    uint64_t v26 = v46;
    sub_10006DF38((uint64_t)__src, (uint64_t)v48, &qword_100E647A8);
    char v27 = (void *)swift_allocObject();
    v27[2] = a5;
    v27[3] = a6;
    memcpy(v27 + 4, __src, 0x48uLL);
    v27[13] = v22;
    v27[14] = a7;
    v27[15] = v26;
    if (v25)
    {
      if (v23 == 0.0)
      {
        swift_retain_n();
        swift_retain();
        swift_retain();
        goto LABEL_12;
      }
      uint64_t v28 = qword_100E62BC0;
      swift_retain_n();
      swift_retain_n();
      swift_retain();
      if (v28 != -1) {
        swift_once();
      }
      sub_100253F58(v22, (uint64_t)sub_100275F58, (uint64_t)v27);
    }
    else
    {
      if (v23 != 0.0)
      {
        sub_1001AB3E0();
        swift_retain_n();
        v36[1] = a6;
        swift_retain_n();
        swift_retain_n();
        v36[0] = static OS_dispatch_queue.main.getter();
        static DispatchTime.now()();
        + infix(_:_:)();
        uint64_t v38 = *(void *)(v38 + 8);
        ((void (*)(char *, uint64_t))v38)(v19, v45);
        uint64_t v29 = swift_allocObject();
        *(void *)(v29 + 16) = sub_100275F58;
        *(void *)(v29 + 24) = v27;
        aBlock[4] = sub_100276768;
        aBlock[5] = v29;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = sub_10010A4D4;
        aBlock[3] = &unk_100E0BB30;
        id v30 = _Block_copy(aBlock);
        swift_retain();
        swift_release();
        id v31 = v39;
        static DispatchQoS.unspecified.getter();
        aBlock[0] = _swiftEmptyArrayStorage;
        sub_100128B0C((unint64_t *)&qword_100EA0200, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
        sub_10017DF08(&qword_100E75530);
        sub_1001246C8((unint64_t *)&qword_100EA0210, &qword_100E75530);
        id v32 = v41;
        uint64_t v33 = v37;
        dispatch thunk of SetAlgebra.init<A>(_:)();
        id v34 = v44;
        id v35 = (void *)v36[0];
        OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
        _Block_release(v30);

        (*(void (**)(char *, uint64_t))(v43 + 8))(v32, v33);
        (*(void (**)(char *, uint64_t))(v40 + 8))(v31, v42);
        ((void (*)(char *, uint64_t))v38)(v34, v45);
        swift_release();
        swift_release();
        goto LABEL_12;
      }
      swift_retain_n();
      swift_retain_n();
      swift_retain();
      sub_100270D08(a5, a6, (uint64_t)v48, v22, a7, v26);
    }
    swift_release();
LABEL_12:
    swift_release();
    sub_1001781AC((uint64_t)v48, &qword_100E647A8);
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1002668D0(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4, void (*a5)(uint64_t), uint64_t a6, void (*a7)(uint64_t), uint64_t a8)
{
  uint64_t v14 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v43 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v41 = (char *)v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = type metadata accessor for DispatchQoS();
  uint64_t v40 = *(void *)(v42 - 8);
  __chkstk_darwin(v42);
  uint64_t v39 = (char *)v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = type metadata accessor for DispatchTime();
  uint64_t v38 = *(void *)(v45 - 8);
  uint64_t v17 = __chkstk_darwin(v45);
  uint64_t v19 = (char *)v36 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  int v44 = (char *)v36 - v20;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v22 = result;
    uint64_t v37 = v14;
    double v23 = COERCE_DOUBLE(a3(a1));
    char v25 = v24;
    uint64_t v46 = a8;
    sub_10006DF38(a1, (uint64_t)__src, &qword_100E647A8);
    uint64_t v26 = v46;
    sub_10006DF38((uint64_t)__src, (uint64_t)v48, &qword_100E647A8);
    char v27 = (void *)swift_allocObject();
    v27[2] = a5;
    v27[3] = a6;
    memcpy(v27 + 4, __src, 0x48uLL);
    v27[13] = v22;
    v27[14] = a7;
    v27[15] = v26;
    if (v25)
    {
      if (v23 == 0.0)
      {
        swift_retain_n();
        swift_retain();
        swift_retain();
        goto LABEL_12;
      }
      uint64_t v28 = qword_100E62BC0;
      swift_retain_n();
      swift_retain_n();
      swift_retain();
      if (v28 != -1) {
        swift_once();
      }
      sub_10025431C(v22, (uint64_t)sub_100276000, (uint64_t)v27);
    }
    else
    {
      if (v23 != 0.0)
      {
        sub_1001AB3E0();
        swift_retain_n();
        v36[1] = a6;
        swift_retain_n();
        swift_retain_n();
        v36[0] = static OS_dispatch_queue.main.getter();
        static DispatchTime.now()();
        + infix(_:_:)();
        uint64_t v38 = *(void *)(v38 + 8);
        ((void (*)(char *, uint64_t))v38)(v19, v45);
        uint64_t v29 = swift_allocObject();
        *(void *)(v29 + 16) = sub_100276000;
        *(void *)(v29 + 24) = v27;
        aBlock[4] = sub_100276768;
        aBlock[5] = v29;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = sub_10010A4D4;
        aBlock[3] = &unk_100E0BC98;
        id v30 = _Block_copy(aBlock);
        swift_retain();
        swift_release();
        id v31 = v39;
        static DispatchQoS.unspecified.getter();
        aBlock[0] = _swiftEmptyArrayStorage;
        sub_100128B0C((unint64_t *)&qword_100EA0200, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
        sub_10017DF08(&qword_100E75530);
        sub_1001246C8((unint64_t *)&qword_100EA0210, &qword_100E75530);
        id v32 = v41;
        uint64_t v33 = v37;
        dispatch thunk of SetAlgebra.init<A>(_:)();
        id v34 = v44;
        id v35 = (void *)v36[0];
        OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
        _Block_release(v30);

        (*(void (**)(char *, uint64_t))(v43 + 8))(v32, v33);
        (*(void (**)(char *, uint64_t))(v40 + 8))(v31, v42);
        ((void (*)(char *, uint64_t))v38)(v34, v45);
        swift_release();
        swift_release();
        goto LABEL_12;
      }
      swift_retain_n();
      swift_retain_n();
      swift_retain();
      sub_1002716CC(a5, a6, (uint64_t)v48, v22, a7, v26);
    }
    swift_release();
LABEL_12:
    swift_release();
    sub_1001781AC((uint64_t)v48, &qword_100E647A8);
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_100266F88(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4, void (*a5)(uint64_t), uint64_t a6, void (*a7)(uint64_t), uint64_t a8)
{
  uint64_t v14 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v43 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v41 = (char *)v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = type metadata accessor for DispatchQoS();
  uint64_t v40 = *(void *)(v42 - 8);
  __chkstk_darwin(v42);
  uint64_t v39 = (char *)v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = type metadata accessor for DispatchTime();
  uint64_t v38 = *(void *)(v45 - 8);
  uint64_t v17 = __chkstk_darwin(v45);
  uint64_t v19 = (char *)v36 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  int v44 = (char *)v36 - v20;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v22 = result;
    uint64_t v37 = v14;
    double v23 = COERCE_DOUBLE(a3(a1));
    char v25 = v24;
    uint64_t v46 = a8;
    sub_10006DF38(a1, (uint64_t)__src, &qword_100E647A8);
    uint64_t v26 = v46;
    sub_10006DF38((uint64_t)__src, (uint64_t)v48, &qword_100E647A8);
    char v27 = (void *)swift_allocObject();
    v27[2] = a5;
    v27[3] = a6;
    memcpy(v27 + 4, __src, 0x48uLL);
    v27[13] = v22;
    v27[14] = a7;
    v27[15] = v26;
    if (v25)
    {
      if (v23 == 0.0)
      {
        swift_retain_n();
        swift_retain();
        swift_retain();
        goto LABEL_12;
      }
      uint64_t v28 = qword_100E62BC0;
      swift_retain_n();
      swift_retain_n();
      swift_retain();
      if (v28 != -1) {
        swift_once();
      }
      sub_1002546E0(v22, (uint64_t)sub_1002760A8, (uint64_t)v27);
    }
    else
    {
      if (v23 != 0.0)
      {
        sub_1001AB3E0();
        swift_retain_n();
        v36[1] = a6;
        swift_retain_n();
        swift_retain_n();
        v36[0] = static OS_dispatch_queue.main.getter();
        static DispatchTime.now()();
        + infix(_:_:)();
        uint64_t v38 = *(void *)(v38 + 8);
        ((void (*)(char *, uint64_t))v38)(v19, v45);
        uint64_t v29 = swift_allocObject();
        *(void *)(v29 + 16) = sub_1002760A8;
        *(void *)(v29 + 24) = v27;
        aBlock[4] = sub_100276768;
        aBlock[5] = v29;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = sub_10010A4D4;
        aBlock[3] = &unk_100E0BE00;
        id v30 = _Block_copy(aBlock);
        swift_retain();
        swift_release();
        id v31 = v39;
        static DispatchQoS.unspecified.getter();
        aBlock[0] = _swiftEmptyArrayStorage;
        sub_100128B0C((unint64_t *)&qword_100EA0200, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
        sub_10017DF08(&qword_100E75530);
        sub_1001246C8((unint64_t *)&qword_100EA0210, &qword_100E75530);
        id v32 = v41;
        uint64_t v33 = v37;
        dispatch thunk of SetAlgebra.init<A>(_:)();
        id v34 = v44;
        id v35 = (void *)v36[0];
        OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
        _Block_release(v30);

        (*(void (**)(char *, uint64_t))(v43 + 8))(v32, v33);
        (*(void (**)(char *, uint64_t))(v40 + 8))(v31, v42);
        ((void (*)(char *, uint64_t))v38)(v34, v45);
        swift_release();
        swift_release();
        goto LABEL_12;
      }
      swift_retain_n();
      swift_retain_n();
      swift_retain();
      sub_100272020(a5, a6, (uint64_t)v48, v22, a7, v26);
    }
    swift_release();
LABEL_12:
    swift_release();
    sub_1001781AC((uint64_t)v48, &qword_100E647A8);
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_100267640(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4, void (*a5)(id *__return_ptr, uint64_t), uint64_t a6, void (*a7)(id *__return_ptr, id *), uint64_t a8)
{
  uint64_t v14 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v43 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v41 = (char *)v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = type metadata accessor for DispatchQoS();
  uint64_t v40 = *(void *)(v42 - 8);
  __chkstk_darwin(v42);
  uint64_t v39 = (char *)v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = type metadata accessor for DispatchTime();
  uint64_t v38 = *(void *)(v45 - 8);
  __chkstk_darwin(v45);
  uint64_t v18 = (char *)v36 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  int v44 = (char *)v36 - v20;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v22 = result;
    uint64_t v37 = v14;
    double v23 = COERCE_DOUBLE(a3(a1));
    char v25 = v24;
    uint64_t v46 = a8;
    sub_10006DF38(a1, (uint64_t)__src, &qword_100E647A8);
    uint64_t v26 = v46;
    sub_10006DF38((uint64_t)__src, (uint64_t)v48, &qword_100E647A8);
    char v27 = (void *)swift_allocObject();
    v27[2] = a5;
    v27[3] = a6;
    memcpy(v27 + 4, __src, 0x48uLL);
    v27[13] = v22;
    v27[14] = a7;
    v27[15] = v26;
    if (v25)
    {
      if (v23 == 0.0)
      {
        swift_retain_n();
        swift_retain();
        swift_retain();
        goto LABEL_12;
      }
      uint64_t v28 = qword_100E62BC0;
      swift_retain_n();
      swift_retain_n();
      swift_retain();
      if (v28 != -1) {
        swift_once();
      }
      sub_100254AA4(v22, (uint64_t)sub_1002761C8, (uint64_t)v27);
    }
    else
    {
      if (v23 != 0.0)
      {
        sub_1001AB3E0();
        swift_retain_n();
        v36[1] = a6;
        swift_retain_n();
        swift_retain_n();
        v36[0] = static OS_dispatch_queue.main.getter();
        static DispatchTime.now()();
        + infix(_:_:)();
        uint64_t v38 = *(void *)(v38 + 8);
        ((void (*)(char *, uint64_t))v38)(v18, v45);
        uint64_t v29 = swift_allocObject();
        *(void *)(v29 + 16) = sub_1002761C8;
        *(void *)(v29 + 24) = v27;
        aBlock[4] = sub_100276768;
        aBlock[5] = v29;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = sub_10010A4D4;
        aBlock[3] = &unk_100E0BF68;
        id v30 = _Block_copy(aBlock);
        swift_retain();
        swift_release();
        id v31 = v39;
        static DispatchQoS.unspecified.getter();
        aBlock[0] = _swiftEmptyArrayStorage;
        sub_100128B0C((unint64_t *)&qword_100EA0200, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
        sub_10017DF08(&qword_100E75530);
        sub_1001246C8((unint64_t *)&qword_100EA0210, &qword_100E75530);
        id v32 = v41;
        uint64_t v33 = v37;
        dispatch thunk of SetAlgebra.init<A>(_:)();
        id v34 = v44;
        id v35 = (void *)v36[0];
        OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
        _Block_release(v30);

        (*(void (**)(char *, uint64_t))(v43 + 8))(v32, v33);
        (*(void (**)(char *, uint64_t))(v40 + 8))(v31, v42);
        ((void (*)(char *, uint64_t))v38)(v34, v45);
        swift_release();
        swift_release();
        goto LABEL_12;
      }
      swift_retain_n();
      swift_retain_n();
      swift_retain();
      sub_100272974(a5, a6, (uint64_t)v48, v22, a7);
    }
    swift_release();
LABEL_12:
    swift_release();
    sub_1001781AC((uint64_t)v48, &qword_100E647A8);
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_100267CF8(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4, void (*a5)(uint64_t), uint64_t a6, void (*a7)(char *), uint64_t a8)
{
  uint64_t v14 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v43 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v41 = (char *)v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = type metadata accessor for DispatchQoS();
  uint64_t v40 = *(void *)(v42 - 8);
  __chkstk_darwin(v42);
  uint64_t v39 = (char *)v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = type metadata accessor for DispatchTime();
  uint64_t v38 = *(void *)(v45 - 8);
  uint64_t v17 = __chkstk_darwin(v45);
  uint64_t v19 = (char *)v36 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  int v44 = (char *)v36 - v20;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v22 = result;
    uint64_t v37 = v14;
    double v23 = COERCE_DOUBLE(a3(a1));
    char v25 = v24;
    uint64_t v46 = a8;
    sub_10006DF38(a1, (uint64_t)__src, &qword_100E647A8);
    uint64_t v26 = v46;
    sub_10006DF38((uint64_t)__src, (uint64_t)v48, &qword_100E647A8);
    char v27 = (void *)swift_allocObject();
    v27[2] = a5;
    v27[3] = a6;
    memcpy(v27 + 4, __src, 0x48uLL);
    v27[13] = v22;
    v27[14] = a7;
    v27[15] = v26;
    if (v25)
    {
      if (v23 == 0.0)
      {
        swift_retain_n();
        swift_retain();
        swift_retain();
        goto LABEL_12;
      }
      uint64_t v28 = qword_100E62BC0;
      swift_retain_n();
      swift_retain_n();
      swift_retain();
      if (v28 != -1) {
        swift_once();
      }
      sub_100254E6C(v22, (uint64_t)sub_1002762F4, (uint64_t)v27);
    }
    else
    {
      if (v23 != 0.0)
      {
        sub_1001AB3E0();
        swift_retain_n();
        v36[1] = a6;
        swift_retain_n();
        swift_retain_n();
        v36[0] = static OS_dispatch_queue.main.getter();
        static DispatchTime.now()();
        + infix(_:_:)();
        uint64_t v38 = *(void *)(v38 + 8);
        ((void (*)(char *, uint64_t))v38)(v19, v45);
        uint64_t v29 = swift_allocObject();
        *(void *)(v29 + 16) = sub_1002762F4;
        *(void *)(v29 + 24) = v27;
        aBlock[4] = sub_100276768;
        aBlock[5] = v29;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = sub_10010A4D4;
        aBlock[3] = &unk_100E0C0D0;
        id v30 = _Block_copy(aBlock);
        swift_retain();
        swift_release();
        id v31 = v39;
        static DispatchQoS.unspecified.getter();
        aBlock[0] = _swiftEmptyArrayStorage;
        sub_100128B0C((unint64_t *)&qword_100EA0200, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
        sub_10017DF08(&qword_100E75530);
        sub_1001246C8((unint64_t *)&qword_100EA0210, &qword_100E75530);
        id v32 = v41;
        uint64_t v33 = v37;
        dispatch thunk of SetAlgebra.init<A>(_:)();
        id v34 = v44;
        id v35 = (void *)v36[0];
        OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
        _Block_release(v30);

        (*(void (**)(char *, uint64_t))(v43 + 8))(v32, v33);
        (*(void (**)(char *, uint64_t))(v40 + 8))(v31, v42);
        ((void (*)(char *, uint64_t))v38)(v34, v45);
        swift_release();
        swift_release();
        goto LABEL_12;
      }
      swift_retain_n();
      swift_retain_n();
      swift_retain();
      sub_100272DDC(a5, a6, (uint64_t)v48, v22, a7, v26);
    }
    swift_release();
LABEL_12:
    swift_release();
    sub_1001781AC((uint64_t)v48, &qword_100E647A8);
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1002683B0(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4, void (*a5)(uint64_t), uint64_t a6, void (*a7)(uint64_t), uint64_t a8)
{
  uint64_t v14 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v43 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v41 = (char *)v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = type metadata accessor for DispatchQoS();
  uint64_t v40 = *(void *)(v42 - 8);
  __chkstk_darwin(v42);
  uint64_t v39 = (char *)v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = type metadata accessor for DispatchTime();
  uint64_t v38 = *(void *)(v45 - 8);
  uint64_t v17 = __chkstk_darwin(v45);
  uint64_t v19 = (char *)v36 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  int v44 = (char *)v36 - v20;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v22 = result;
    uint64_t v37 = v14;
    double v23 = COERCE_DOUBLE(a3(a1));
    char v25 = v24;
    uint64_t v46 = a8;
    sub_10006DF38(a1, (uint64_t)__src, &qword_100E647A8);
    uint64_t v26 = v46;
    sub_10006DF38((uint64_t)__src, (uint64_t)v48, &qword_100E647A8);
    char v27 = (void *)swift_allocObject();
    v27[2] = a5;
    v27[3] = a6;
    memcpy(v27 + 4, __src, 0x48uLL);
    v27[13] = v22;
    v27[14] = a7;
    v27[15] = v26;
    if (v25)
    {
      if (v23 == 0.0)
      {
        swift_retain_n();
        swift_retain();
        swift_retain();
        goto LABEL_12;
      }
      uint64_t v28 = qword_100E62BC0;
      swift_retain_n();
      swift_retain_n();
      swift_retain();
      if (v28 != -1) {
        swift_once();
      }
      sub_100255230(v22, (uint64_t)sub_10027639C, (uint64_t)v27);
    }
    else
    {
      if (v23 != 0.0)
      {
        sub_1001AB3E0();
        swift_retain_n();
        v36[1] = a6;
        swift_retain_n();
        swift_retain_n();
        v36[0] = static OS_dispatch_queue.main.getter();
        static DispatchTime.now()();
        + infix(_:_:)();
        uint64_t v38 = *(void *)(v38 + 8);
        ((void (*)(char *, uint64_t))v38)(v19, v45);
        uint64_t v29 = swift_allocObject();
        *(void *)(v29 + 16) = sub_10027639C;
        *(void *)(v29 + 24) = v27;
        aBlock[4] = sub_100276768;
        aBlock[5] = v29;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = sub_10010A4D4;
        aBlock[3] = &unk_100E0C238;
        id v30 = _Block_copy(aBlock);
        swift_retain();
        swift_release();
        id v31 = v39;
        static DispatchQoS.unspecified.getter();
        aBlock[0] = _swiftEmptyArrayStorage;
        sub_100128B0C((unint64_t *)&qword_100EA0200, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
        sub_10017DF08(&qword_100E75530);
        sub_1001246C8((unint64_t *)&qword_100EA0210, &qword_100E75530);
        id v32 = v41;
        uint64_t v33 = v37;
        dispatch thunk of SetAlgebra.init<A>(_:)();
        id v34 = v44;
        id v35 = (void *)v36[0];
        OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
        _Block_release(v30);

        (*(void (**)(char *, uint64_t))(v43 + 8))(v32, v33);
        (*(void (**)(char *, uint64_t))(v40 + 8))(v31, v42);
        ((void (*)(char *, uint64_t))v38)(v34, v45);
        swift_release();
        swift_release();
        goto LABEL_12;
      }
      swift_retain_n();
      swift_retain_n();
      swift_retain();
      sub_100273740(a5, a6, (uint64_t)v48, v22, a7, v26);
    }
    swift_release();
LABEL_12:
    swift_release();
    sub_1001781AC((uint64_t)v48, &qword_100E647A8);
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_100268A68(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4, void (*a5)(uint64_t), uint64_t a6, void (*a7)(uint64_t *__return_ptr, void (*)(uint64_t)), uint64_t a8)
{
  uint64_t v14 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v43 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v41 = (char *)v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = type metadata accessor for DispatchQoS();
  uint64_t v40 = *(void *)(v42 - 8);
  __chkstk_darwin(v42);
  uint64_t v39 = (char *)v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = type metadata accessor for DispatchTime();
  uint64_t v38 = *(void *)(v45 - 8);
  uint64_t v17 = __chkstk_darwin(v45);
  uint64_t v19 = (char *)v36 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  int v44 = (char *)v36 - v20;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v22 = result;
    uint64_t v37 = v14;
    double v23 = COERCE_DOUBLE(a3(a1));
    char v25 = v24;
    uint64_t v46 = a8;
    sub_10006DF38(a1, (uint64_t)__src, &qword_100E647A8);
    uint64_t v26 = v46;
    sub_10006DF38((uint64_t)__src, (uint64_t)v48, &qword_100E647A8);
    char v27 = (void *)swift_allocObject();
    v27[2] = a5;
    v27[3] = a6;
    memcpy(v27 + 4, __src, 0x48uLL);
    v27[13] = v22;
    v27[14] = a7;
    v27[15] = v26;
    if (v25)
    {
      if (v23 == 0.0)
      {
        swift_retain_n();
        swift_retain();
        swift_retain();
        goto LABEL_12;
      }
      uint64_t v28 = qword_100E62BC0;
      swift_retain_n();
      swift_retain_n();
      swift_retain();
      if (v28 != -1) {
        swift_once();
      }
      sub_1002555F4(v22, (uint64_t)sub_10027649C, (uint64_t)v27);
    }
    else
    {
      if (v23 != 0.0)
      {
        sub_1001AB3E0();
        swift_retain_n();
        v36[1] = a6;
        swift_retain_n();
        swift_retain_n();
        v36[0] = static OS_dispatch_queue.main.getter();
        static DispatchTime.now()();
        + infix(_:_:)();
        uint64_t v38 = *(void *)(v38 + 8);
        ((void (*)(char *, uint64_t))v38)(v19, v45);
        uint64_t v29 = swift_allocObject();
        *(void *)(v29 + 16) = sub_10027649C;
        *(void *)(v29 + 24) = v27;
        aBlock[4] = sub_100276768;
        aBlock[5] = v29;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = sub_10010A4D4;
        aBlock[3] = &unk_100E0C3A0;
        id v30 = _Block_copy(aBlock);
        swift_retain();
        swift_release();
        id v31 = v39;
        static DispatchQoS.unspecified.getter();
        aBlock[0] = _swiftEmptyArrayStorage;
        sub_100128B0C((unint64_t *)&qword_100EA0200, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
        sub_10017DF08(&qword_100E75530);
        sub_1001246C8((unint64_t *)&qword_100EA0210, &qword_100E75530);
        id v32 = v41;
        uint64_t v33 = v37;
        dispatch thunk of SetAlgebra.init<A>(_:)();
        id v34 = v44;
        id v35 = (void *)v36[0];
        OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
        _Block_release(v30);

        (*(void (**)(char *, uint64_t))(v43 + 8))(v32, v33);
        (*(void (**)(char *, uint64_t))(v40 + 8))(v31, v42);
        ((void (*)(char *, uint64_t))v38)(v34, v45);
        swift_release();
        swift_release();
        goto LABEL_12;
      }
      swift_retain_n();
      swift_retain_n();
      swift_retain();
      sub_100274094(a5, a6, (uint64_t)v48, v22, a7, v26);
    }
    swift_release();
LABEL_12:
    swift_release();
    sub_1001781AC((uint64_t)v48, &qword_100E647A8);
    swift_release();
    return swift_release();
  }
  return result;
}

void *sub_100269120(void *(*a1)(uint64_t *__return_ptr, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t *))
{
  void (*v22)(void *__return_ptr);
  char v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  void (*v37)(uint64_t *);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40[3];
  uint64_t v41;
  uint64_t vars8;

  uint64_t v37 = a5;
  uint64_t v38 = sub_10017DF08(&qword_100E647A0);
  __chkstk_darwin(v38);
  Swift::String v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10017DF08(&qword_100E647B0);
  __chkstk_darwin(v10 - 8);
  Swift::String v12 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for AirQualityDetailViewModel(0);
  uint64_t v14 = __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v36 - v17;
  uint64_t result = a1(v40, a3 + 64);
  uint64_t v20 = v40[0];
  if (!v40[0]) {
    return result;
  }
  id v36 = (uint64_t *)v9;
  uint64_t v41 = v40[0];
  swift_retain();
  uint64_t v21 = a4;
  uint64_t v22 = sub_1002559B8();
  if (v22)
  {
    if ((void (*)(void *__return_ptr))v20 == v22) {
      return (void *)swift_release_n();
    }
    type metadata accessor for MainState._Storage(0);
    swift_retain_n();
    sub_10011796C();
    char v24 = v23;
    swift_release_n();
    swift_release();
    if (v24)
    {
      return (void *)swift_release();
    }
  }
  else
  {
    swift_release();
  }
  v37(&v41);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v12, 1, v13) == 1)
  {
    sub_1001781AC((uint64_t)v12, &qword_100E647B0);
    char v25 = a4;
LABEL_13:
    uint64_t v28 = v36;
    sub_10017DF08(&qword_100E647B8);
    *uint64_t v28 = v41;
    swift_retain();
    sub_1001BFD60();
    swift_release();
    swift_storeEnumTagMultiPayload();
    uint64_t v29 = v25 + *(void *)(*(void *)v25 + 120);
    swift_beginAccess();
    sub_1001DF004((uint64_t)v28, v29, &qword_100E647A0);
    return (void *)swift_endAccess();
  }
  uint64_t v26 = (uint64_t)v18;
  sub_1001522B4();
  char v25 = v21;
  sub_1001BFD60();
  char v27 = sub_10075CC08((uint64_t)v18, (uint64_t)v16);
  sub_1001524C8((uint64_t)v16, (void (*)(void))type metadata accessor for AirQualityDetailViewModel);
  if (v27)
  {
    sub_1001524C8((uint64_t)v18, (void (*)(void))type metadata accessor for AirQualityDetailViewModel);
    goto LABEL_13;
  }
  id v30 = v36;
  if (qword_100E62828 != -1) {
    swift_once();
  }
  id v31 = type metadata accessor for Logger();
  sub_1002102B0(v31, (uint64_t)qword_100F51F80);
  id v32 = Logger.logObject.getter();
  uint64_t v33 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v32, v33))
  {
    id v34 = swift_slowAlloc();
    v40[0] = swift_slowAlloc();
    *(_DWORD *)id v34 = 136446466;
    uint64_t v39 = sub_10016414C(0x746174536E69614DLL, 0xE900000000000065, v40);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v34 + 12) = 2082;
    uint64_t v39 = sub_10016414C(0xD000000000000019, 0x8000000100C96CD0, v40);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v32, v33, "Selector observed model difference for %{public}s, %{public}s; views will update",
      (uint8_t *)v34,
      0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  sub_10017DF08(&qword_100E647B8);
  *id v30 = v41;
  sub_100136460();
  swift_storeEnumTagMultiPayload();
  id v35 = v25 + *(void *)(*(void *)v25 + 120);
  swift_beginAccess();
  swift_retain();
  sub_1001DF004((uint64_t)v30, v35, &qword_100E647A0);
  swift_endAccess();
  sub_10017DF08(&qword_100E64790);
  sub_1001246C8((unint64_t *)&qword_100E647C0, &qword_100E64790);
  ObservableObject<>.objectWillChange.getter();
  ObservableObjectPublisher.send()();
  swift_release();
  sub_1001524C8(v26, (void (*)(void))type metadata accessor for AirQualityDetailViewModel);
  return (void *)swift_release();
}

uint64_t sub_100269784(void (*a1)(uint64_t), uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t), uint64_t a6)
{
  uint64_t v56 = a6;
  uint64_t v57 = a5;
  uint64_t v60 = a4;
  uint64_t v61 = a2;
  uint64_t v62 = a1;
  uint64_t v58 = sub_10017DF08(&qword_100E647E8);
  __chkstk_darwin(v58);
  char v59 = (char *)&v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10017DF08(&qword_100E647F0);
  __chkstk_darwin(v8 - 8);
  uint64_t v55 = (char *)&v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = type metadata accessor for MoonDetailViewModel(0);
  uint64_t v10 = __chkstk_darwin(v54);
  uint64_t v52 = (char *)&v51 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v53 = (char *)&v51 - v12;
  uint64_t v13 = sub_10017DF08(&qword_100E647F8);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v51 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_10017DF08(&qword_100E64800);
  uint64_t v17 = __chkstk_darwin(v16 - 8);
  uint64_t v19 = (char *)&v51 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __chkstk_darwin(v17);
  uint64_t v22 = (char *)&v51 - v21;
  uint64_t v23 = __chkstk_darwin(v20);
  char v25 = (char *)&v51 - v24;
  __chkstk_darwin(v23);
  char v27 = (char *)&v51 - v26;
  uint64_t v28 = type metadata accessor for MoonDetailInput(0);
  uint64_t v29 = __chkstk_darwin(v28);
  id v31 = (char *)&v51 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v29);
  uint64_t v33 = (void (*)(uint64_t))((char *)&v51 - v32);
  v62(a3 + 64);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v27, 1, v28) == 1) {
    return sub_1001781AC((uint64_t)v27, &qword_100E64800);
  }
  sub_1001522B4();
  uint64_t v62 = v33;
  sub_100136460();
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v25, 0, 1, v28);
  uint64_t v35 = v60;
  sub_100255C0C((uint64_t)v22);
  uint64_t v36 = (uint64_t)&v15[*(int *)(v13 + 48)];
  sub_10006DF38((uint64_t)v25, (uint64_t)v15, &qword_100E64800);
  sub_10006DF38((uint64_t)v22, v36, &qword_100E64800);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v15, 1, v28) != 1)
  {
    sub_10006DF38((uint64_t)v15, (uint64_t)v19, &qword_100E64800);
    if (_s7Weather24LocationCompositionStateOwet_0(v36, 1, v28) != 1)
    {
      sub_1001522B4();
      BOOL v44 = sub_1002BB8E4((uint64_t)v19, (uint64_t)v31);
      sub_1001524C8((uint64_t)v31, (void (*)(void))type metadata accessor for MoonDetailInput);
      sub_1001781AC((uint64_t)v22, &qword_100E64800);
      sub_1001781AC((uint64_t)v25, &qword_100E64800);
      sub_1001524C8((uint64_t)v19, (void (*)(void))type metadata accessor for MoonDetailInput);
      sub_1001781AC((uint64_t)v15, &qword_100E64800);
      uint64_t v37 = (uint64_t)v62;
      if (v44) {
        return sub_1001524C8(v37, (void (*)(void))type metadata accessor for MoonDetailInput);
      }
LABEL_9:
      uint64_t v38 = (uint64_t)v55;
      v57(v37);
      if (_s7Weather24LocationCompositionStateOwet_0(v38, 1, v54) == 1)
      {
        sub_1001781AC(v38, &qword_100E647F0);
      }
      else
      {
        uint64_t v39 = (uint64_t)v53;
        sub_1001522B4();
        uint64_t v40 = (uint64_t)v52;
        sub_10024E808();
        char v41 = sub_100619F44(v39, v40);
        sub_1001524C8(v40, (void (*)(void))type metadata accessor for MoonDetailViewModel);
        if ((v41 & 1) == 0)
        {
          if (qword_100E62828 != -1) {
            swift_once();
          }
          uint64_t v45 = type metadata accessor for Logger();
          sub_1002102B0(v45, (uint64_t)qword_100F51F80);
          uint64_t v46 = Logger.logObject.getter();
          os_log_type_t v47 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v46, v47))
          {
            uint64_t v48 = swift_slowAlloc();
            v64[0] = swift_slowAlloc();
            *(_DWORD *)uint64_t v48 = 136446466;
            uint64_t v63 = sub_10016414C(0x617465446E6F6F4DLL, 0xEF7475706E496C69, v64);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            *(_WORD *)(v48 + 12) = 2082;
            uint64_t v63 = sub_10016414C(0xD000000000000013, 0x8000000100C96DC0, v64);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            _os_log_impl((void *)&_mh_execute_header, v46, v47, "Selector observed model difference for %{public}s, %{public}s; views will update",
              (uint8_t *)v48,
              0x16u);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();
          }

          sub_10017DF08(&qword_100E64808);
          uint64_t v49 = (uint64_t)v59;
          sub_100136460();
          sub_100136460();
          swift_storeEnumTagMultiPayload();
          uint64_t v50 = v35 + *(void *)(*(void *)v35 + 120);
          swift_beginAccess();
          sub_1001DF004(v49, v50, &qword_100E647E8);
          swift_endAccess();
          sub_10017DF08(&qword_100E64810);
          sub_1001246C8((unint64_t *)&qword_100E64818, &qword_100E64810);
          ObservableObject<>.objectWillChange.getter();
          ObservableObjectPublisher.send()();
          swift_release();
          sub_1001524C8(v39, (void (*)(void))type metadata accessor for MoonDetailViewModel);
          return sub_1001524C8(v37, (void (*)(void))type metadata accessor for MoonDetailInput);
        }
        sub_1001524C8(v39, (void (*)(void))type metadata accessor for MoonDetailViewModel);
      }
      sub_10017DF08(&qword_100E64808);
      uint64_t v42 = (uint64_t)v59;
      sub_100136460();
      sub_10024E808();
      sub_1001524C8(v37, (void (*)(void))type metadata accessor for MoonDetailInput);
      swift_storeEnumTagMultiPayload();
      uint64_t v43 = v35 + *(void *)(*(void *)v35 + 120);
      swift_beginAccess();
      sub_1001DF004(v42, v43, &qword_100E647E8);
      return swift_endAccess();
    }
    sub_1001781AC((uint64_t)v22, &qword_100E64800);
    sub_1001781AC((uint64_t)v25, &qword_100E64800);
    sub_1001524C8((uint64_t)v19, (void (*)(void))type metadata accessor for MoonDetailInput);
LABEL_8:
    sub_1001781AC((uint64_t)v15, &qword_100E647F8);
    uint64_t v37 = (uint64_t)v62;
    goto LABEL_9;
  }
  sub_1001781AC((uint64_t)v22, &qword_100E64800);
  sub_1001781AC((uint64_t)v25, &qword_100E64800);
  if (_s7Weather24LocationCompositionStateOwet_0(v36, 1, v28) != 1) {
    goto LABEL_8;
  }
  sub_1001781AC((uint64_t)v15, &qword_100E64800);
  uint64_t v37 = (uint64_t)v62;
  return sub_1001524C8(v37, (void (*)(void))type metadata accessor for MoonDetailInput);
}

void *sub_10026A0D4(void *(*a1)(long long *__return_ptr, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(long long *__return_ptr, uint64_t *))
{
  void (*v8)(uint64_t *__return_ptr, uint64_t);
  void (*v9)(uint64_t *__return_ptr, uint64_t);
  char v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  long long v21;
  long long v22;
  uint64_t v23;
  char v24;
  long long v25;
  long long v26;
  long long v27;
  uint64_t v28;
  long long v29;
  uint64_t v30;
  long long v31;
  long long v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  BOOL v37;
  BOOL v38;
  BOOL v39;
  char v40;
  uint64_t v42;
  char v43;
  uint64_t v44;
  NSObject *v45;
  os_log_type_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  char v51;
  uint64_t v52;
  long long v53;
  long long v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  long long v78;
  long long v79;
  long long v80;
  long long v81;
  long long v82;
  long long v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t vars8;

  uint64_t result = a1(&v78, a3 + 64);
  uint64_t v8 = (void (*)(uint64_t *__return_ptr, uint64_t))v78;
  if (!(void)v78) {
    return result;
  }
  uint64_t v85 = v78;
  swift_retain();
  uint64_t v9 = sub_100255F3C();
  if (v9)
  {
    if (v8 == v9) {
      return (void *)swift_release_n();
    }
    type metadata accessor for MainState._Storage(0);
    swift_retain_n();
    sub_10011796C();
    uint64_t v11 = v10;
    swift_release_n();
    swift_release();
    if (v11)
    {
      return (void *)swift_release();
    }
  }
  else
  {
    swift_release();
  }
  a5(&v78, &v85);
  uint64_t v77 = v78;
  if ((~(void)v78 & 0xF000000000000006) == 0)
  {
LABEL_10:
    *(void *)&uint64_t v78 = v8;
    swift_retain();
    sub_10024E2B4((void (**)(uint64_t *__return_ptr, uint64_t))&v78 + 1);
    swift_release();
    swift_beginAccess();
    uint64_t v12 = v84;
    uint64_t v13 = *(void *)(a4 + 16);
    uint64_t v14 = *(void *)(a4 + 24);
    uint64_t v15 = *(void *)(a4 + 32);
    uint64_t v16 = *(void *)(a4 + 40);
    uint64_t v17 = *(void *)(a4 + 48);
    uint64_t v18 = *(void *)(a4 + 56);
    uint64_t v19 = *(void *)(a4 + 64);
    uint64_t v20 = *(void *)(a4 + 72);
    uint64_t v21 = *(_OWORD *)(a4 + 80);
    uint64_t v22 = *(_OWORD *)(a4 + 96);
    uint64_t v23 = *(void *)(a4 + 112);
    uint64_t v24 = *(unsigned char *)(a4 + 120);
    char v25 = v79;
    *(_OWORD *)(a4 + 16) = v78;
    *(_OWORD *)(a4 + 32) = v25;
    uint64_t v26 = v81;
    *(_OWORD *)(a4 + 48) = v80;
    *(_OWORD *)(a4 + 64) = v26;
    char v27 = v83;
    *(_OWORD *)(a4 + 80) = v82;
    *(_OWORD *)(a4 + 96) = v27;
    *(void *)(a4 + 112) = v12;
    *(unsigned char *)(a4 + 120) = 1;
    return (void *)sub_100274CF4(v13, v14, v15, v16, v17, v18, v19, v20, v21, *((uint64_t *)&v21 + 1), v22, *((uint64_t *)&v22 + 1), v23, v24);
  }
  uint64_t v75 = v79;
  uint64_t v76 = *((void *)&v78 + 1);
  uint64_t v70 = *((void *)&v80 + 1);
  uint64_t v71 = v80;
  char v73 = v81;
  uint64_t v74 = *((void *)&v79 + 1);
  uint64_t v72 = *((void *)&v81 + 1);
  uint64_t v28 = *((void *)&v82 + 1);
  long long v69 = v82;
  uint64_t v29 = v83;
  sub_10024E2B4((void (**)(uint64_t *__return_ptr, uint64_t))&v78);
  uint64_t v30 = v78;
  id v31 = v80;
  uint64_t v32 = v81;
  uint64_t v33 = *((void *)&v82 + 1);
  uint64_t v66 = v28;
  if ((v77 & 0x8000000000000000) == 0)
  {
    if ((v78 & 0x8000000000000000) == 0)
    {
      id v34 = v78;
      type metadata accessor for ReportWeatherContentViewModel._Storage(0);
      sub_100274EB4(v77);
      sub_100274EDC(v34);
      sub_1002DEE14();
      uint64_t v51 = v35;
      sub_100274E38(v34);
      sub_100274F58(v77);
      sub_100274E38(v34);
      if (v51) {
        goto LABEL_14;
      }
      goto LABEL_44;
    }
LABEL_43:
    sub_100274E38(v30);
    goto LABEL_44;
  }
  if ((v78 & 0x8000000000000000) == 0) {
    goto LABEL_43;
  }
  uint64_t v55 = *((void *)&v83 + 1);
  uint64_t v57 = v83;
  char v59 = v82;
  uint64_t v61 = *((void *)&v79 + 1);
  uint64_t v36 = *((void *)&v78 + 1);
  uint64_t v63 = v79;
  uint64_t v52 = v78;
  if ((sub_10088A548(v77 & 1, v78 & 1) & 1) == 0
    || (v76 == v36 ? (uint64_t v37 = v75 == v63) : (uint64_t v37 = 0),
        !v37 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0
     || (v74 == v61 ? (uint64_t v38 = v71 == (void)v31) : (uint64_t v38 = 0),
         !v38 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0
      || (v70 == *((void *)&v31 + 1) ? (uint64_t v39 = v73 == (void)v32) : (uint64_t v39 = 0),
          !v39 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0))))
  {
    uint64_t v30 = v52;
    goto LABEL_43;
  }
  uint64_t v30 = v52;
  if (v28)
  {
    if (!v33) {
      goto LABEL_43;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v40 = sub_100701574(v72, v69, v28, SBYTE8(v32), v59, v33);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v30 = v52;
    if ((v40 & 1) == 0) {
      goto LABEL_43;
    }
  }
  else if (v33)
  {
    goto LABEL_43;
  }
  if ((void)v29 == v57 && *((void *)&v29 + 1) == v55)
  {
    sub_100274E38(v30);
    goto LABEL_14;
  }
  uint64_t v42 = v30;
  uint64_t v43 = _stringCompareWithSmolCheck(_:_:expecting:)();
  sub_100274E38(v42);
  if (v43)
  {
LABEL_14:
    sub_100274F58(v77);
    goto LABEL_10;
  }
LABEL_44:
  if (qword_100E62828 != -1) {
    swift_once();
  }
  BOOL v44 = type metadata accessor for Logger();
  sub_1002102B0(v44, (uint64_t)qword_100F51F80);
  uint64_t v45 = Logger.logObject.getter();
  uint64_t v46 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v45, v46))
  {
    os_log_type_t v47 = swift_slowAlloc();
    *(void *)&uint64_t v78 = swift_slowAlloc();
    *(_DWORD *)os_log_type_t v47 = 136446466;
    sub_10016414C(0x746174536E69614DLL, 0xE900000000000065, (uint64_t *)&v78);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v47 + 12) = 2082;
    sub_10016414C(0xD000000000000016, 0x8000000100C96DE0, (uint64_t *)&v78);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v45, v46, "Selector observed model difference for %{public}s, %{public}s; views will update",
      (uint8_t *)v47,
      0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  uint64_t v48 = v85;
  swift_beginAccess();
  uint64_t v67 = *(void *)(a4 + 24);
  char v68 = *(void *)(a4 + 16);
  uint64_t v64 = *(void *)(a4 + 40);
  uint64_t v65 = *(void *)(a4 + 32);
  uint64_t v60 = *(void *)(a4 + 56);
  uint64_t v62 = *(void *)(a4 + 48);
  uint64_t v56 = *(void *)(a4 + 72);
  uint64_t v58 = *(void *)(a4 + 64);
  uint64_t v53 = *(_OWORD *)(a4 + 96);
  uint64_t v54 = *(_OWORD *)(a4 + 80);
  uint64_t v49 = *(void *)(a4 + 112);
  uint64_t v50 = *(unsigned char *)(a4 + 120);
  *(void *)(a4 + 16) = v48;
  *(void *)(a4 + 24) = v77;
  *(void *)(a4 + 32) = v76;
  *(void *)(a4 + 40) = v75;
  *(void *)(a4 + 48) = v74;
  *(void *)(a4 + 56) = v71;
  *(void *)(a4 + 64) = v70;
  *(void *)(a4 + 72) = v73;
  *(void *)(a4 + 80) = v72;
  *(void *)(a4 + 88) = v69;
  *(void *)(a4 + 96) = v66;
  *(_OWORD *)(a4 + 104) = v29;
  *(unsigned char *)(a4 + 120) = 1;
  sub_100274EB4(v77);
  swift_retain();
  sub_100274CF4(v68, v67, v65, v64, v62, v60, v58, v56, v54, *((uint64_t *)&v54 + 1), v53, *((uint64_t *)&v53 + 1), v49, v50);
  sub_10017DF08(&qword_100E64830);
  sub_1001246C8(&qword_100E64838, &qword_100E64830);
  ObservableObject<>.objectWillChange.getter();
  ObservableObjectPublisher.send()();
  swift_release();
  sub_100274F58(v77);
  return (void *)swift_release();
}

uint64_t sub_10026AA0C(void (*a1)(uint64_t), uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t), uint64_t a6)
{
  uint64_t v57 = a6;
  uint64_t v58 = a5;
  uint64_t v61 = a4;
  uint64_t v62 = a2;
  uint64_t v63 = a1;
  uint64_t v59 = sub_10017DF08(&qword_100E64840);
  __chkstk_darwin(v59);
  uint64_t v60 = (char *)&v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10017DF08(&qword_100E64848);
  __chkstk_darwin(v8 - 8);
  uint64_t v56 = (char *)&v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = type metadata accessor for ConditionDetailViewModel(0);
  uint64_t v10 = __chkstk_darwin(v55);
  uint64_t v53 = (char *)&v52 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v54 = (char *)&v52 - v12;
  uint64_t v13 = sub_10017DF08(&qword_100E64850);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v52 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_10017DF08(&qword_100E64858);
  uint64_t v17 = __chkstk_darwin(v16 - 8);
  uint64_t v19 = (char *)&v52 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __chkstk_darwin(v17);
  uint64_t v22 = (char *)&v52 - v21;
  uint64_t v23 = __chkstk_darwin(v20);
  char v25 = (char *)&v52 - v24;
  __chkstk_darwin(v23);
  char v27 = (char *)&v52 - v26;
  uint64_t v28 = type metadata accessor for ConditionDetailInput(0);
  uint64_t v29 = __chkstk_darwin(v28);
  id v31 = (char *)&v52 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v29);
  uint64_t v33 = (void (*)(uint64_t))((char *)&v52 - v32);
  v63(a3 + 64);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v27, 1, v28) == 1) {
    return sub_1001781AC((uint64_t)v27, &qword_100E64858);
  }
  sub_1001522B4();
  uint64_t v63 = v33;
  sub_100136460();
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v25, 0, 1, v28);
  uint64_t v35 = v61;
  sub_100256138((uint64_t)v22);
  uint64_t v36 = (uint64_t)&v15[*(int *)(v13 + 48)];
  sub_10006DF38((uint64_t)v25, (uint64_t)v15, &qword_100E64858);
  sub_10006DF38((uint64_t)v22, v36, &qword_100E64858);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v15, 1, v28) != 1)
  {
    sub_10006DF38((uint64_t)v15, (uint64_t)v19, &qword_100E64858);
    if (_s7Weather24LocationCompositionStateOwet_0(v36, 1, v28) != 1)
    {
      sub_1001522B4();
      char v45 = sub_10039D488();
      sub_1001524C8((uint64_t)v31, (void (*)(void))type metadata accessor for ConditionDetailInput);
      sub_1001781AC((uint64_t)v22, &qword_100E64858);
      sub_1001781AC((uint64_t)v25, &qword_100E64858);
      sub_1001524C8((uint64_t)v19, (void (*)(void))type metadata accessor for ConditionDetailInput);
      sub_1001781AC((uint64_t)v15, &qword_100E64858);
      uint64_t v38 = (uint64_t)v63;
      if (v45) {
        return sub_1001524C8(v38, (void (*)(void))type metadata accessor for ConditionDetailInput);
      }
LABEL_9:
      uint64_t v39 = (uint64_t)v56;
      v58(v38);
      if (_s7Weather24LocationCompositionStateOwet_0(v39, 1, v55) == 1)
      {
        sub_1001781AC(v39, &qword_100E64848);
      }
      else
      {
        uint64_t v40 = (uint64_t)v54;
        sub_1001522B4();
        uint64_t v41 = (uint64_t)v53;
        sub_10024ECCC();
        char v42 = sub_100ABADE0(v40, v41);
        sub_1001524C8(v41, (void (*)(void))type metadata accessor for ConditionDetailViewModel);
        if ((v42 & 1) == 0)
        {
          if (qword_100E62828 != -1) {
            swift_once();
          }
          uint64_t v46 = type metadata accessor for Logger();
          sub_1002102B0(v46, (uint64_t)qword_100F51F80);
          os_log_type_t v47 = Logger.logObject.getter();
          os_log_type_t v48 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v47, v48))
          {
            uint64_t v49 = swift_slowAlloc();
            v65[0] = swift_slowAlloc();
            *(_DWORD *)uint64_t v49 = 136446466;
            uint64_t v64 = sub_10016414C(0xD000000000000014, 0x8000000100C96E00, v65);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            *(_WORD *)(v49 + 12) = 2082;
            uint64_t v64 = sub_10016414C(0xD000000000000018, 0x8000000100C96E20, v65);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            _os_log_impl((void *)&_mh_execute_header, v47, v48, "Selector observed model difference for %{public}s, %{public}s; views will update",
              (uint8_t *)v49,
              0x16u);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();
          }

          sub_10017DF08(&qword_100E64860);
          uint64_t v50 = (uint64_t)v60;
          sub_100136460();
          sub_100136460();
          swift_storeEnumTagMultiPayload();
          uint64_t v51 = v35 + *(void *)(*(void *)v35 + 120);
          swift_beginAccess();
          sub_1001DF004(v50, v51, &qword_100E64840);
          swift_endAccess();
          sub_10017DF08(&qword_100E64868);
          sub_1001246C8((unint64_t *)&qword_100E64870, &qword_100E64868);
          ObservableObject<>.objectWillChange.getter();
          ObservableObjectPublisher.send()();
          swift_release();
          sub_1001524C8(v40, (void (*)(void))type metadata accessor for ConditionDetailViewModel);
          return sub_1001524C8(v38, (void (*)(void))type metadata accessor for ConditionDetailInput);
        }
        sub_1001524C8(v40, (void (*)(void))type metadata accessor for ConditionDetailViewModel);
      }
      sub_10017DF08(&qword_100E64860);
      uint64_t v43 = (uint64_t)v60;
      sub_100136460();
      sub_10024ECCC();
      sub_1001524C8(v38, (void (*)(void))type metadata accessor for ConditionDetailInput);
      swift_storeEnumTagMultiPayload();
      uint64_t v44 = v35 + *(void *)(*(void *)v35 + 120);
      swift_beginAccess();
      sub_1001DF004(v43, v44, &qword_100E64840);
      return swift_endAccess();
    }
    sub_1001781AC((uint64_t)v22, &qword_100E64858);
    sub_1001781AC((uint64_t)v25, &qword_100E64858);
    sub_1001524C8((uint64_t)v19, (void (*)(void))type metadata accessor for ConditionDetailInput);
    uint64_t v38 = (uint64_t)v63;
LABEL_8:
    sub_1001781AC((uint64_t)v15, &qword_100E64850);
    goto LABEL_9;
  }
  sub_1001781AC((uint64_t)v22, &qword_100E64858);
  sub_1001781AC((uint64_t)v25, &qword_100E64858);
  int v37 = _s7Weather24LocationCompositionStateOwet_0(v36, 1, v28);
  uint64_t v38 = (uint64_t)v63;
  if (v37 != 1) {
    goto LABEL_8;
  }
  sub_1001781AC((uint64_t)v15, &qword_100E64858);
  return sub_1001524C8(v38, (void (*)(void))type metadata accessor for ConditionDetailInput);
}

void *sub_10026B360(void *(*a1)(long long *__return_ptr, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(long long *), void *a6)
{
  id v115 = a6;
  uint64_t v10 = sub_10017DF08(&qword_100E64878);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v88 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_10017DF08(&qword_100E64880);
  __chkstk_darwin(v13 - 8);
  char v114 = (char *)&v88 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v113 = (id)type metadata accessor for UnitsConfigurationViewModel(0);
  uint64_t v15 = __chkstk_darwin(v113);
  uint64_t v107 = (char *)&v88 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v88 - v17;
  uint64_t result = a1(&v117, a3 + 64);
  uint64_t v20 = (void *)v117;
  if ((void)v117 == 1) {
    return result;
  }
  uint64_t v101 = a5;
  uint64_t v102 = v18;
  uint64_t v103 = v10;
  char v104 = v12;
  uint64_t v21 = (void *)*((void *)&v117 + 1);
  long long v23 = v118;
  uint64_t v22 = v119;
  uint64_t v24 = v121;
  int v25 = v122;
  v138[0] = v117;
  v138[1] = v118;
  *(void *)uint64_t v139 = v119;
  *(void *)&v139[8] = v120;
  *(void *)&v139[16] = v121;
  *(_WORD *)&v139[24] = v122 & 0x1FF;
  long long v135 = v117;
  long long v136 = v118;
  *(_OWORD *)uint64_t v137 = *(_OWORD *)v139;
  *(_OWORD *)&v137[10] = *(_OWORD *)&v139[10];
  uint64_t v111 = v120;
  id v98 = v120;
  id v100 = v20;
  uint64_t v108 = v21;
  id v99 = v21;
  *(void *)&long long v109 = v23;
  id v97 = (id)v23;
  *((void *)&v109 + 1) = *((void *)&v23 + 1);
  id v96 = *((id *)&v23 + 1);
  char v110 = v22;
  id v95 = v22;
  uint64_t v112 = v24;
  sub_10027517C(v24, v25);
  uint64_t v106 = a4;
  sub_100256468((uint64_t)&v129);
  uint64_t v26 = (void *)v129;
  char v27 = v134;
  if ((void)v129 == 1)
  {
    *(void *)&long long v117 = v20;
    *((void *)&v117 + 1) = v108;
    long long v118 = v109;
    uint64_t v119 = v110;
    id v120 = v111;
    uint64_t v121 = v112;
    unsigned __int16 v122 = v25;
    unsigned long long v123 = __PAIR128__(*((unint64_t *)&v129 + 1), 1);
    long long v124 = v130;
    uint64_t v125 = v131;
    uint64_t v126 = v132;
    uint64_t v127 = v133;
    __int16 v128 = v134;
    sub_100275190((uint64_t)&v117);
  }
  else
  {
    long long v117 = v129;
    long long v118 = v130;
    uint64_t v119 = v131;
    id v120 = v132;
    uint64_t v121 = v133;
    unsigned __int16 v122 = v134 & 0x1FF;
    char v92 = (void *)v130;
    uint64_t v93 = (void *)*((void *)&v129 + 1);
    uint64_t v29 = v108;
    uint64_t v28 = (void *)v109;
    uint64_t v90 = v131;
    long long v91 = (void *)*((void *)&v130 + 1);
    id v31 = (void *)*((void *)&v109 + 1);
    uint64_t v30 = v110;
    uint64_t v88 = v133;
    uint64_t v89 = v132;
    uint64_t v32 = v112;
    int v105 = v25;
    uint64_t v33 = v111;
    sub_1002752C4((uint64_t)v20, v108, (void *)v109, *((void **)&v109 + 1), v110, v111, v112, v105);
    sub_1002752C4((uint64_t)v20, v29, v28, v31, v30, v33, v32, v105);
    uint64_t v35 = v92;
    id v34 = v93;
    uint64_t v36 = v90;
    int v37 = v91;
    uint64_t v38 = v88;
    uint64_t v39 = v89;
    sub_1002752C4((uint64_t)v26, v93, v92, v91, v90, v89, v88, v27);
    int v94 = sub_10094FFF4((uint64_t)v138, (uint64_t)&v117);
    sub_100275224(v26, v34, v35, v37, v36, v39, v38, v27);
    sub_100275224(v26, v34, v35, v37, v36, v39, v38, v27);
    uint64_t v40 = v108;
    long long v42 = v109;
    uint64_t v41 = v110;
    uint64_t v44 = v111;
    uint64_t v43 = v112;
    char v45 = v105;
    sub_100275224(v20, v108, (void *)v109, *((void **)&v109 + 1), v110, v111, v112, v105);
    sub_100275224(v20, v40, (void *)v42, *((void **)&v42 + 1), v41, v44, v43, v45);

    sub_1002752B0(v43, v45);
    if (v94)
    {
      uint64_t v46 = v108;
      long long v48 = v109;
      os_log_type_t v47 = v110;
      uint64_t v49 = v111;
      uint64_t v50 = v112;
      return sub_100275224(v20, v46, (void *)v48, *((void **)&v48 + 1), v47, v49, v50, v45);
    }
  }
  uint64_t v51 = (uint64_t)v114;
  v101(&v135);
  if (_s7Weather24LocationCompositionStateOwet_0(v51, 1, (uint64_t)v113) == 1)
  {
    sub_1001781AC(v51, &qword_100E64880);
    uint64_t v52 = (uint64_t)v104;
LABEL_12:
    sub_10017DF08(&qword_100E64888);
    long long v57 = v135;
    uint64_t v58 = v52;
    long long v59 = v136;
    uint64_t v61 = *(void **)v137;
    uint64_t v60 = *(void **)&v137[8];
    uint64_t v62 = *(void *)&v137[16];
    char v63 = v137[25];
    *(_OWORD *)uint64_t v52 = v135;
    *(_OWORD *)(v52 + 16) = v59;
    *(void *)(v52 + 32) = v61;
    *(void *)(v52 + 40) = v60;
    *(void *)(v52 + 48) = v62;
    char v64 = v137[24];
    *(unsigned char *)(v52 + 56) = v137[24];
    *(unsigned char *)(v52 + 57) = v63;
    id v115 = v60;
    id v65 = (id)v57;
    id v66 = *((id *)&v57 + 1);
    id v67 = (id)v59;
    id v68 = *((id *)&v59 + 1);
    id v69 = v61;
    sub_10027517C(v62, v64);
    uint64_t v70 = v106;
    sub_10024EE88();

    sub_1002752B0(v62, v64);
    swift_storeEnumTagMultiPayload();
    uint64_t v71 = v70 + *(void *)(*(void *)v70 + 120);
    swift_beginAccess();
    sub_1001DF004(v58, v71, &qword_100E64878);
    return (void *)swift_endAccess();
  }
  uint64_t v53 = (uint64_t)v102;
  sub_1001522B4();
  uint64_t v54 = (uint64_t)v107;
  sub_10024EE88();
  sub_10084ACF0();
  char v56 = v55;
  sub_1001524C8(v54, (void (*)(void))type metadata accessor for UnitsConfigurationViewModel);
  uint64_t v52 = (uint64_t)v104;
  if (v56)
  {
    sub_1001524C8(v53, (void (*)(void))type metadata accessor for UnitsConfigurationViewModel);
    goto LABEL_12;
  }
  if (qword_100E62828 != -1) {
    swift_once();
  }
  uint64_t v72 = type metadata accessor for Logger();
  sub_1002102B0(v72, (uint64_t)qword_100F51F80);
  char v73 = Logger.logObject.getter();
  os_log_type_t v74 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v73, v74))
  {
    uint64_t v75 = swift_slowAlloc();
    *(void *)&long long v129 = swift_slowAlloc();
    *(_DWORD *)uint64_t v75 = 136446466;
    uint64_t v116 = sub_10016414C(0xD000000000000017, 0x8000000100C96E40, (uint64_t *)&v129);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v75 + 12) = 2082;
    uint64_t v116 = sub_10016414C(0xD00000000000001BLL, 0x8000000100C96E60, (uint64_t *)&v129);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v73, v74, "Selector observed model difference for %{public}s, %{public}s; views will update",
      (uint8_t *)v75,
      0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  sub_10017DF08(&qword_100E64888);
  long long v76 = v135;
  uint64_t v77 = v52;
  long long v78 = v136;
  uint64_t v79 = *(void **)v137;
  char v80 = *(void **)&v137[8];
  uint64_t v81 = *(void *)&v137[16];
  uint64_t v112 = *(void *)&v137[16];
  char v82 = v137[25];
  *(_OWORD *)uint64_t v52 = v135;
  *(_OWORD *)(v52 + 16) = v78;
  *(void *)(v52 + 32) = v79;
  *(void *)(v52 + 40) = v80;
  *(void *)(v52 + 48) = v81;
  LODWORD(v111) = v137[24];
  *(unsigned char *)(v52 + 56) = v137[24];
  *(unsigned char *)(v52 + 57) = v82;
  sub_100136460();
  swift_storeEnumTagMultiPayload();
  uint64_t v83 = v106 + *(void *)(*(void *)v106 + 120);
  swift_beginAccess();
  id v113 = v80;
  id v115 = (id)v76;
  char v114 = (char *)*((id *)&v76 + 1);
  id v84 = (id)v78;
  id v85 = *((id *)&v78 + 1);
  id v86 = v79;
  uint64_t v87 = v112;
  LOBYTE(v80) = (_BYTE)v111;
  sub_10027517C(v112, (char)v111);
  sub_1001DF004(v77, v83, &qword_100E64878);
  swift_endAccess();
  sub_10017DF08(&qword_100E64890);
  sub_1001246C8((unint64_t *)&qword_100E64898, &qword_100E64890);
  ObservableObject<>.objectWillChange.getter();
  ObservableObjectPublisher.send()();
  swift_release();
  sub_1001524C8((uint64_t)v102, (void (*)(void))type metadata accessor for UnitsConfigurationViewModel);

  return (void *)sub_1002752B0(v87, (char)v80);
}

uint64_t sub_10026BD04(void (*a1)(uint64_t), uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(char *), uint64_t a6)
{
  uint64_t v69 = a6;
  uint64_t v70 = a5;
  uint64_t v72 = a4;
  uint64_t v73 = a2;
  os_log_type_t v74 = a1;
  uint64_t v66 = sub_10017DF08(&qword_100E648A0);
  __chkstk_darwin(v66);
  id v67 = (char *)&v63 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10017DF08(&qword_100E648A8);
  __chkstk_darwin(v8 - 8);
  id v68 = (char *)&v63 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v71 = type metadata accessor for DayPickerViewModel(0);
  uint64_t v10 = __chkstk_darwin(v71);
  char v64 = (char *)&v63 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  id v65 = (char *)&v63 - v12;
  uint64_t v13 = sub_10017DF08(&qword_100E648B0);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v63 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_10017DF08(&qword_100E648B8);
  uint64_t v17 = __chkstk_darwin(v16 - 8);
  uint64_t v19 = (char *)&v63 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __chkstk_darwin(v17);
  uint64_t v22 = (char *)&v63 - v21;
  uint64_t v23 = __chkstk_darwin(v20);
  int v25 = (char *)&v63 - v24;
  __chkstk_darwin(v23);
  char v27 = (char *)&v63 - v26;
  uint64_t v28 = type metadata accessor for DayPickerInput();
  uint64_t v29 = __chkstk_darwin(v28);
  id v31 = (char *)&v63 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v29);
  uint64_t v33 = (void (*)(uint64_t))((char *)&v63 - v32);
  v74(a3 + 64);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v27, 1, v28) == 1) {
    return sub_1001781AC((uint64_t)v27, &qword_100E648B8);
  }
  sub_1001522B4();
  sub_100136460();
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v25, 0, 1, v28);
  sub_100256798((uint64_t)v22);
  uint64_t v35 = (uint64_t)&v15[*(int *)(v13 + 48)];
  sub_10006DF38((uint64_t)v25, (uint64_t)v15, &qword_100E648B8);
  sub_10006DF38((uint64_t)v22, v35, &qword_100E648B8);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v15, 1, v28) != 1)
  {
    sub_10006DF38((uint64_t)v15, (uint64_t)v19, &qword_100E648B8);
    if (_s7Weather24LocationCompositionStateOwet_0(v35, 1, v28) != 1)
    {
      sub_1001522B4();
      char v36 = sub_1005A1F98((uint64_t)v19, (uint64_t)v31);
      sub_1001524C8((uint64_t)v31, (void (*)(void))type metadata accessor for DayPickerInput);
      sub_1001781AC((uint64_t)v22, &qword_100E648B8);
      sub_1001781AC((uint64_t)v25, &qword_100E648B8);
      sub_1001524C8((uint64_t)v19, (void (*)(void))type metadata accessor for DayPickerInput);
      sub_1001781AC((uint64_t)v15, &qword_100E648B8);
      if (v36) {
        goto LABEL_10;
      }
LABEL_11:
      uint64_t v38 = (uint64_t)v68;
      os_log_type_t v74 = v33;
      v70((char *)v33);
      uint64_t v39 = v71;
      if (_s7Weather24LocationCompositionStateOwet_0(v38, 1, v71) == 1)
      {
        sub_1001781AC(v38, &qword_100E648A8);
        uint64_t v40 = (uint64_t)v67;
        uint64_t v41 = v72;
      }
      else
      {
        uint64_t v44 = (uint64_t)v65;
        sub_1001522B4();
        uint64_t v45 = (uint64_t)v64;
        uint64_t v41 = v72;
        sub_10024F0AC();
        sub_100BDD44C();
        uint64_t v40 = (uint64_t)v67;
        if ((v46 & 1) == 0 || (static Date.== infix(_:_:)() & 1) == 0) {
          goto LABEL_28;
        }
        uint64_t v47 = *(int *)(v39 + 24);
        uint64_t v48 = *(void *)(v44 + v47);
        uint64_t v49 = *(void *)(v44 + v47 + 8);
        uint64_t v50 = (void *)(v45 + v47);
        BOOL v51 = v48 == *v50 && v49 == v50[1];
        if (!v51 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0
          || ((uint64_t v52 = *(int *)(v39 + 28),
               uint64_t v53 = *(void *)(v44 + v52),
               uint64_t v54 = *(void *)(v44 + v52 + 8),
               char v55 = (void *)(v45 + v52),
               v53 == *v55)
            ? (BOOL v56 = v54 == v55[1])
            : (BOOL v56 = 0),
              !v56 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0
           || (static TimeZone.== infix(_:_:)() & 1) == 0))
        {
LABEL_28:
          sub_1001524C8(v45, (void (*)(void))type metadata accessor for DayPickerViewModel);
          if (qword_100E62828 != -1) {
            swift_once();
          }
          uint64_t v57 = type metadata accessor for Logger();
          sub_1002102B0(v57, (uint64_t)qword_100F51F80);
          uint64_t v58 = Logger.logObject.getter();
          os_log_type_t v59 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v58, v59))
          {
            uint64_t v60 = swift_slowAlloc();
            v76[0] = swift_slowAlloc();
            *(_DWORD *)uint64_t v60 = 136446466;
            uint64_t v75 = sub_10016414C(0x656B636950796144, 0xEE007475706E4972, v76);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            *(_WORD *)(v60 + 12) = 2082;
            uint64_t v75 = sub_10016414C(0xD000000000000012, 0x8000000100C96E80, v76);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            _os_log_impl((void *)&_mh_execute_header, v58, v59, "Selector observed model difference for %{public}s, %{public}s; views will update",
              (uint8_t *)v60,
              0x16u);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();
          }

          sub_10017DF08(&qword_100E648C0);
          uint64_t v61 = v74;
          sub_100136460();
          sub_100136460();
          swift_storeEnumTagMultiPayload();
          uint64_t v62 = v41 + *(void *)(*(void *)v41 + 120);
          swift_beginAccess();
          sub_1001DF004(v40, v62, &qword_100E648A0);
          swift_endAccess();
          sub_10017DF08(&qword_100E648C8);
          sub_1001246C8((unint64_t *)&qword_100E648D0, &qword_100E648C8);
          ObservableObject<>.objectWillChange.getter();
          ObservableObjectPublisher.send()();
          swift_release();
          sub_1001524C8(v44, (void (*)(void))type metadata accessor for DayPickerViewModel);
          uint64_t v37 = (uint64_t)v61;
          return sub_1001524C8(v37, (void (*)(void))type metadata accessor for DayPickerInput);
        }
        sub_1001524C8(v45, (void (*)(void))type metadata accessor for DayPickerViewModel);
        sub_1001524C8(v44, (void (*)(void))type metadata accessor for DayPickerViewModel);
      }
      sub_10017DF08(&qword_100E648C0);
      uint64_t v42 = (uint64_t)v74;
      sub_100136460();
      sub_10024F0AC();
      sub_1001524C8(v42, (void (*)(void))type metadata accessor for DayPickerInput);
      swift_storeEnumTagMultiPayload();
      uint64_t v43 = v41 + *(void *)(*(void *)v41 + 120);
      swift_beginAccess();
      sub_1001DF004(v40, v43, &qword_100E648A0);
      return swift_endAccess();
    }
    sub_1001781AC((uint64_t)v22, &qword_100E648B8);
    sub_1001781AC((uint64_t)v25, &qword_100E648B8);
    sub_1001524C8((uint64_t)v19, (void (*)(void))type metadata accessor for DayPickerInput);
LABEL_8:
    sub_1001781AC((uint64_t)v15, &qword_100E648B0);
    goto LABEL_11;
  }
  sub_1001781AC((uint64_t)v22, &qword_100E648B8);
  sub_1001781AC((uint64_t)v25, &qword_100E648B8);
  if (_s7Weather24LocationCompositionStateOwet_0(v35, 1, v28) != 1) {
    goto LABEL_8;
  }
  sub_1001781AC((uint64_t)v15, &qword_100E648B8);
LABEL_10:
  uint64_t v37 = (uint64_t)v33;
  return sub_1001524C8(v37, (void (*)(void))type metadata accessor for DayPickerInput);
}

void *sub_10026C700(void *(*a1)(uint64_t *__return_ptr, uint64_t, __n128), uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t *))
{
  void (*v23)(void *__return_ptr);
  char v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  void (*v38)(uint64_t *);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41[3];
  uint64_t v42;
  uint64_t vars8;

  uint64_t v38 = a5;
  uint64_t v39 = sub_10017DF08(&qword_100E64820);
  __chkstk_darwin(v39);
  uint64_t v9 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10017DF08(&qword_100E648D8);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for VFXTestViewModel();
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v17 = __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v37 - v18;
  uint64_t result = a1(v41, a3 + 64, v17);
  uint64_t v21 = v41[0];
  if (!v41[0]) {
    return result;
  }
  uint64_t v37 = (uint64_t *)v9;
  uint64_t v42 = v41[0];
  swift_retain();
  uint64_t v22 = a4;
  uint64_t v23 = sub_100256AC8();
  if (v23)
  {
    if ((void (*)(void *__return_ptr))v21 == v23) {
      return (void *)swift_release_n();
    }
    type metadata accessor for MainState._Storage(0);
    swift_retain_n();
    sub_10011796C();
    int v25 = v24;
    swift_release_n();
    swift_release();
    if (v25)
    {
      return (void *)swift_release();
    }
  }
  else
  {
    swift_release();
  }
  v38(&v42);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v12, 1, v13) == 1)
  {
    sub_1001781AC((uint64_t)v12, &qword_100E648D8);
    uint64_t v26 = a4;
LABEL_13:
    uint64_t v29 = v37;
    sub_10017DF08(&qword_100E64828);
    *uint64_t v29 = v42;
    swift_retain();
    sub_1001BFD60();
    swift_release();
    swift_storeEnumTagMultiPayload();
    uint64_t v30 = v26 + *(void *)(*(void *)v26 + 120);
    swift_beginAccess();
    sub_1001DF004((uint64_t)v29, v30, &qword_100E64820);
    return (void *)swift_endAccess();
  }
  char v27 = (uint64_t)v19;
  sub_1001522B4();
  uint64_t v26 = v22;
  sub_1001BFD60();
  uint64_t v28 = sub_10088B240((uint64_t)v19, (uint64_t)v15);
  sub_1001524C8((uint64_t)v15, (void (*)(void))type metadata accessor for VFXTestViewModel);
  if (v28)
  {
    sub_1001524C8((uint64_t)v19, (void (*)(void))type metadata accessor for VFXTestViewModel);
    goto LABEL_13;
  }
  id v31 = v37;
  if (qword_100E62828 != -1) {
    swift_once();
  }
  uint64_t v32 = type metadata accessor for Logger();
  sub_1002102B0(v32, (uint64_t)qword_100F51F80);
  uint64_t v33 = Logger.logObject.getter();
  id v34 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v33, v34))
  {
    uint64_t v35 = swift_slowAlloc();
    v41[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v35 = 136446466;
    uint64_t v40 = sub_10016414C(0x746174536E69614DLL, 0xE900000000000065, v41);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v35 + 12) = 2082;
    uint64_t v40 = sub_10016414C(0xD000000000000010, 0x8000000100C96EA0, v41);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v33, v34, "Selector observed model difference for %{public}s, %{public}s; views will update",
      (uint8_t *)v35,
      0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  sub_10017DF08(&qword_100E64828);
  char *v31 = v42;
  sub_100136460();
  swift_storeEnumTagMultiPayload();
  char v36 = v26 + *(void *)(*(void *)v26 + 120);
  swift_beginAccess();
  swift_retain();
  sub_1001DF004((uint64_t)v31, v36, &qword_100E64820);
  swift_endAccess();
  sub_10017DF08(&qword_100E648E0);
  sub_1001246C8(&qword_100E648E8, &qword_100E648E0);
  ObservableObject<>.objectWillChange.getter();
  ObservableObjectPublisher.send()();
  swift_release();
  sub_1001524C8(v27, (void (*)(void))type metadata accessor for VFXTestViewModel);
  return (void *)swift_release();
}

uint64_t sub_10026CD64(void (*a1)(uint64_t, __n128), uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t), uint64_t a6)
{
  uint64_t v58 = a6;
  os_log_type_t v59 = a5;
  uint64_t v62 = a4;
  uint64_t v63 = a2;
  char v64 = a1;
  uint64_t v60 = sub_10017DF08(&qword_100E648F0);
  __chkstk_darwin(v60);
  uint64_t v61 = (char *)&v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10017DF08(&qword_100E648F8);
  __chkstk_darwin(v8 - 8);
  uint64_t v57 = (char *)&v53 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = type metadata accessor for WeatherMenuViewModel();
  __chkstk_darwin(v56);
  uint64_t v54 = (char *)&v53 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  char v55 = (char *)&v53 - v12;
  uint64_t v13 = sub_10017DF08(&qword_100E64900);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v53 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_10017DF08(&qword_100E64908);
  __chkstk_darwin(v16 - 8);
  uint64_t v18 = (char *)&v53 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v21 = (char *)&v53 - v20;
  __chkstk_darwin(v22);
  uint64_t v24 = (char *)&v53 - v23;
  __chkstk_darwin(v25);
  char v27 = (char *)&v53 - v26;
  uint64_t v28 = type metadata accessor for WeatherMenuInput();
  __chkstk_darwin(v28);
  uint64_t v30 = (char *)&v53 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v32 = __chkstk_darwin(v31);
  id v34 = (void (*)(uint64_t, __n128))((char *)&v53 - v33);
  v64(a3 + 64, v32);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v27, 1, v28) == 1) {
    return sub_1001781AC((uint64_t)v27, &qword_100E64908);
  }
  sub_1001522B4();
  char v64 = v34;
  sub_100136460();
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v24, 0, 1, v28);
  uint64_t v36 = v62;
  sub_100256D1C((uint64_t)v21);
  uint64_t v37 = (uint64_t)&v15[*(int *)(v13 + 48)];
  sub_10006DF38((uint64_t)v24, (uint64_t)v15, &qword_100E64908);
  sub_10006DF38((uint64_t)v21, v37, &qword_100E64908);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v15, 1, v28) != 1)
  {
    sub_10006DF38((uint64_t)v15, (uint64_t)v18, &qword_100E64908);
    if (_s7Weather24LocationCompositionStateOwet_0(v37, 1, v28) != 1)
    {
      sub_1001522B4();
      char v46 = sub_1006C9048((uint64_t)v18, (uint64_t)v30);
      sub_1001524C8((uint64_t)v30, (void (*)(void))type metadata accessor for WeatherMenuInput);
      sub_1001781AC((uint64_t)v21, &qword_100E64908);
      sub_1001781AC((uint64_t)v24, &qword_100E64908);
      sub_1001524C8((uint64_t)v18, (void (*)(void))type metadata accessor for WeatherMenuInput);
      sub_1001781AC((uint64_t)v15, &qword_100E64908);
      uint64_t v39 = (uint64_t)v64;
      if (v46) {
        return sub_1001524C8(v39, (void (*)(void))type metadata accessor for WeatherMenuInput);
      }
LABEL_9:
      uint64_t v40 = (uint64_t)v57;
      v59(v39);
      if (_s7Weather24LocationCompositionStateOwet_0(v40, 1, v56) == 1)
      {
        sub_1001781AC(v40, &qword_100E648F8);
      }
      else
      {
        uint64_t v41 = (uint64_t)v55;
        sub_1001522B4();
        uint64_t v42 = (uint64_t)v54;
        sub_10024F4C4();
        char v43 = sub_1004CD5E0(v41, v42);
        sub_1001524C8(v42, (void (*)(void))type metadata accessor for WeatherMenuViewModel);
        if ((v43 & 1) == 0)
        {
          if (qword_100E62828 != -1) {
            swift_once();
          }
          uint64_t v47 = type metadata accessor for Logger();
          sub_1002102B0(v47, (uint64_t)qword_100F51F80);
          uint64_t v48 = Logger.logObject.getter();
          os_log_type_t v49 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v48, v49))
          {
            uint64_t v50 = swift_slowAlloc();
            v66[0] = swift_slowAlloc();
            *(_DWORD *)uint64_t v50 = 136446466;
            uint64_t v65 = sub_10016414C(0xD000000000000010, 0x8000000100C96EC0, v66);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            *(_WORD *)(v50 + 12) = 2082;
            uint64_t v65 = sub_10016414C(0xD000000000000014, 0x8000000100C96EE0, v66);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            _os_log_impl((void *)&_mh_execute_header, v48, v49, "Selector observed model difference for %{public}s, %{public}s; views will update",
              (uint8_t *)v50,
              0x16u);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();
          }

          sub_10017DF08(&qword_100E64910);
          uint64_t v51 = (uint64_t)v61;
          sub_100136460();
          sub_100136460();
          swift_storeEnumTagMultiPayload();
          uint64_t v52 = v36 + *(void *)(*(void *)v36 + 120);
          swift_beginAccess();
          sub_1001DF004(v51, v52, &qword_100E648F0);
          swift_endAccess();
          sub_10017DF08(&qword_100E64918);
          sub_1001246C8(&qword_100E64920, &qword_100E64918);
          ObservableObject<>.objectWillChange.getter();
          ObservableObjectPublisher.send()();
          swift_release();
          sub_1001524C8(v41, (void (*)(void))type metadata accessor for WeatherMenuViewModel);
          return sub_1001524C8(v39, (void (*)(void))type metadata accessor for WeatherMenuInput);
        }
        sub_1001524C8(v41, (void (*)(void))type metadata accessor for WeatherMenuViewModel);
      }
      sub_10017DF08(&qword_100E64910);
      uint64_t v44 = (uint64_t)v61;
      sub_100136460();
      sub_10024F4C4();
      sub_1001524C8(v39, (void (*)(void))type metadata accessor for WeatherMenuInput);
      swift_storeEnumTagMultiPayload();
      uint64_t v45 = v36 + *(void *)(*(void *)v36 + 120);
      swift_beginAccess();
      sub_1001DF004(v44, v45, &qword_100E648F0);
      return swift_endAccess();
    }
    sub_1001781AC((uint64_t)v21, &qword_100E64908);
    sub_1001781AC((uint64_t)v24, &qword_100E64908);
    sub_1001524C8((uint64_t)v18, (void (*)(void))type metadata accessor for WeatherMenuInput);
    uint64_t v39 = (uint64_t)v64;
LABEL_8:
    sub_1001781AC((uint64_t)v15, &qword_100E64900);
    goto LABEL_9;
  }
  sub_1001781AC((uint64_t)v21, &qword_100E64908);
  sub_1001781AC((uint64_t)v24, &qword_100E64908);
  int v38 = _s7Weather24LocationCompositionStateOwet_0(v37, 1, v28);
  uint64_t v39 = (uint64_t)v64;
  if (v38 != 1) {
    goto LABEL_8;
  }
  sub_1001781AC((uint64_t)v15, &qword_100E64908);
  return sub_1001524C8(v39, (void (*)(void))type metadata accessor for WeatherMenuInput);
}

uint64_t sub_10026D6B8(void *(*a1)(uint64_t *__return_ptr, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t *__return_ptr))
{
  uint64_t result = (uint64_t)a1(v25, a3 + 64);
  if ((v25[0] & 1) == 0)
  {
    uint64_t result = sub_10025704C();
    if (result)
    {
      a5(v25);
      char v8 = v25[0];
      if (LOBYTE(v25[0]) == 2 || (uint64_t v9 = v25[0] & 1, ((((v8 & 1) != 0) ^ sub_10024F75C()) & 1) == 0))
      {
        uint64_t v19 = sub_10024F75C() & 1;
        swift_beginAccess();
        uint64_t v20 = *(void *)(a4 + 16);
        uint64_t v21 = *(void *)(a4 + 24);
        uint64_t v22 = *(void *)(a4 + 32);
        uint64_t v23 = *(void *)(a4 + 40);
        *(void *)(a4 + 16) = v19;
        *(void *)(a4 + 24) = 0;
        *(void *)(a4 + 32) = 0;
        *(void *)(a4 + 40) = 0;
        char v24 = *(unsigned char *)(a4 + 48);
        *(unsigned char *)(a4 + 48) = 1;
        return sub_100275674(v20, v21, v22, v23, v24);
      }
      else
      {
        if (qword_100E62828 != -1) {
          swift_once();
        }
        uint64_t v10 = type metadata accessor for Logger();
        sub_1002102B0(v10, (uint64_t)qword_100F51F80);
        uint64_t v11 = Logger.logObject.getter();
        os_log_type_t v12 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v11, v12))
        {
          uint64_t v13 = swift_slowAlloc();
          v25[0] = swift_slowAlloc();
          *(_DWORD *)uint64_t v13 = 136446466;
          sub_10016414C(0xD000000000000019, 0x8000000100C96F00, v25);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *(_WORD *)(v13 + 12) = 2082;
          sub_10016414C(0xD00000000000001DLL, 0x8000000100C96F20, v25);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          _os_log_impl((void *)&_mh_execute_header, v11, v12, "Selector observed model difference for %{public}s, %{public}s; views will update",
            (uint8_t *)v13,
            0x16u);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }

        swift_beginAccess();
        uint64_t v14 = *(void *)(a4 + 16);
        uint64_t v15 = *(void *)(a4 + 24);
        uint64_t v16 = *(void *)(a4 + 32);
        uint64_t v17 = *(void *)(a4 + 40);
        *(void *)(a4 + 16) = v9;
        *(void *)(a4 + 24) = 0;
        *(void *)(a4 + 32) = 0;
        *(void *)(a4 + 40) = 0;
        char v18 = *(unsigned char *)(a4 + 48);
        *(unsigned char *)(a4 + 48) = 1;
        sub_100275674(v14, v15, v16, v17, v18);
        sub_10017DF08(&qword_100E64928);
        sub_1001246C8(&qword_100E64930, &qword_100E64928);
        ObservableObject<>.objectWillChange.getter();
        ObservableObjectPublisher.send()();
        return swift_release();
      }
    }
  }
  return result;
}

uint64_t sub_10026D9C0(void (*a1)(uint64_t), uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t), uint64_t a6)
{
  uint64_t v57 = a6;
  uint64_t v58 = a5;
  uint64_t v61 = a4;
  uint64_t v62 = a2;
  uint64_t v63 = a1;
  uint64_t v59 = sub_10017DF08(&qword_100E64938);
  __chkstk_darwin(v59);
  uint64_t v60 = (char *)&v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10017DF08(&qword_100E64940);
  __chkstk_darwin(v8 - 8);
  uint64_t v56 = (char *)&v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = type metadata accessor for LocationPreviewViewModel(0);
  uint64_t v10 = __chkstk_darwin(v55);
  uint64_t v53 = (char *)&v52 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v54 = (char *)&v52 - v12;
  uint64_t v13 = sub_10017DF08(&qword_100E64948);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v52 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_10017DF08(&qword_100E64950);
  uint64_t v17 = __chkstk_darwin(v16 - 8);
  uint64_t v19 = (char *)&v52 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __chkstk_darwin(v17);
  uint64_t v22 = (char *)&v52 - v21;
  uint64_t v23 = __chkstk_darwin(v20);
  uint64_t v25 = (char *)&v52 - v24;
  __chkstk_darwin(v23);
  char v27 = (char *)&v52 - v26;
  uint64_t v28 = type metadata accessor for LocationPreviewInput(0);
  uint64_t v29 = __chkstk_darwin(v28);
  uint64_t v31 = (char *)&v52 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v29);
  uint64_t v33 = (void (*)(uint64_t))((char *)&v52 - v32);
  v63(a3 + 64);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v27, 1, v28) == 1) {
    return sub_1001781AC((uint64_t)v27, &qword_100E64950);
  }
  sub_1001522B4();
  uint64_t v63 = v33;
  sub_100136460();
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v25, 0, 1, v28);
  uint64_t v35 = v61;
  sub_100257124((uint64_t)v22);
  uint64_t v36 = (uint64_t)&v15[*(int *)(v13 + 48)];
  sub_10006DF38((uint64_t)v25, (uint64_t)v15, &qword_100E64950);
  sub_10006DF38((uint64_t)v22, v36, &qword_100E64950);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v15, 1, v28) != 1)
  {
    sub_10006DF38((uint64_t)v15, (uint64_t)v19, &qword_100E64950);
    if (_s7Weather24LocationCompositionStateOwet_0(v36, 1, v28) != 1)
    {
      sub_1001522B4();
      char v45 = sub_100419BAC((uint64_t)v19, (uint64_t)v31);
      sub_1001524C8((uint64_t)v31, (void (*)(void))type metadata accessor for LocationPreviewInput);
      sub_1001781AC((uint64_t)v22, &qword_100E64950);
      sub_1001781AC((uint64_t)v25, &qword_100E64950);
      sub_1001524C8((uint64_t)v19, (void (*)(void))type metadata accessor for LocationPreviewInput);
      sub_1001781AC((uint64_t)v15, &qword_100E64950);
      uint64_t v38 = (uint64_t)v63;
      if (v45) {
        return sub_1001524C8(v38, (void (*)(void))type metadata accessor for LocationPreviewInput);
      }
LABEL_9:
      uint64_t v39 = (uint64_t)v56;
      v58(v38);
      if (_s7Weather24LocationCompositionStateOwet_0(v39, 1, v55) == 1)
      {
        sub_1001781AC(v39, &qword_100E64940);
      }
      else
      {
        uint64_t v40 = (uint64_t)v54;
        sub_1001522B4();
        uint64_t v41 = (uint64_t)v53;
        sub_10024EB10();
        char v42 = sub_1006C7C48(v40, v41);
        sub_1001524C8(v41, (void (*)(void))type metadata accessor for LocationPreviewViewModel);
        if ((v42 & 1) == 0)
        {
          if (qword_100E62828 != -1) {
            swift_once();
          }
          uint64_t v46 = type metadata accessor for Logger();
          sub_1002102B0(v46, (uint64_t)qword_100F51F80);
          uint64_t v47 = Logger.logObject.getter();
          os_log_type_t v48 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v47, v48))
          {
            uint64_t v49 = swift_slowAlloc();
            v65[0] = swift_slowAlloc();
            *(_DWORD *)uint64_t v49 = 136446466;
            uint64_t v64 = sub_10016414C(0xD000000000000014, 0x8000000100C96F40, v65);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            *(_WORD *)(v49 + 12) = 2082;
            uint64_t v64 = sub_10016414C(0xD000000000000018, 0x8000000100C96F60, v65);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            _os_log_impl((void *)&_mh_execute_header, v47, v48, "Selector observed model difference for %{public}s, %{public}s; views will update",
              (uint8_t *)v49,
              0x16u);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();
          }

          sub_10017DF08(&qword_100E64958);
          uint64_t v50 = (uint64_t)v60;
          sub_100136460();
          sub_100136460();
          swift_storeEnumTagMultiPayload();
          uint64_t v51 = v35 + *(void *)(*(void *)v35 + 120);
          swift_beginAccess();
          sub_1001DF004(v50, v51, &qword_100E64938);
          swift_endAccess();
          sub_10017DF08(&qword_100E64960);
          sub_1001246C8(&qword_100E64968, &qword_100E64960);
          ObservableObject<>.objectWillChange.getter();
          ObservableObjectPublisher.send()();
          swift_release();
          sub_1001524C8(v40, (void (*)(void))type metadata accessor for LocationPreviewViewModel);
          return sub_1001524C8(v38, (void (*)(void))type metadata accessor for LocationPreviewInput);
        }
        sub_1001524C8(v40, (void (*)(void))type metadata accessor for LocationPreviewViewModel);
      }
      sub_10017DF08(&qword_100E64958);
      uint64_t v43 = (uint64_t)v60;
      sub_100136460();
      sub_10024EB10();
      sub_1001524C8(v38, (void (*)(void))type metadata accessor for LocationPreviewInput);
      swift_storeEnumTagMultiPayload();
      uint64_t v44 = v35 + *(void *)(*(void *)v35 + 120);
      swift_beginAccess();
      sub_1001DF004(v43, v44, &qword_100E64938);
      return swift_endAccess();
    }
    sub_1001781AC((uint64_t)v22, &qword_100E64950);
    sub_1001781AC((uint64_t)v25, &qword_100E64950);
    sub_1001524C8((uint64_t)v19, (void (*)(void))type metadata accessor for LocationPreviewInput);
    uint64_t v38 = (uint64_t)v63;
LABEL_8:
    sub_1001781AC((uint64_t)v15, &qword_100E64948);
    goto LABEL_9;
  }
  sub_1001781AC((uint64_t)v22, &qword_100E64950);
  sub_1001781AC((uint64_t)v25, &qword_100E64950);
  int v37 = _s7Weather24LocationCompositionStateOwet_0(v36, 1, v28);
  uint64_t v38 = (uint64_t)v63;
  if (v37 != 1) {
    goto LABEL_8;
  }
  sub_1001781AC((uint64_t)v15, &qword_100E64950);
  return sub_1001524C8(v38, (void (*)(void))type metadata accessor for LocationPreviewInput);
}

uint64_t sub_10026E314(void (*a1)(uint64_t), uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t), uint64_t a6)
{
  uint64_t v57 = a6;
  uint64_t v58 = a5;
  uint64_t v61 = a4;
  uint64_t v62 = a2;
  uint64_t v63 = a1;
  uint64_t v59 = sub_10017DF08(&qword_100E64970);
  __chkstk_darwin(v59);
  uint64_t v60 = (char *)&v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10017DF08(&qword_100E64978);
  __chkstk_darwin(v8 - 8);
  uint64_t v56 = (char *)&v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = type metadata accessor for InteractiveMapViewModel();
  uint64_t v10 = __chkstk_darwin(v55);
  uint64_t v53 = (char *)&v52 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v54 = (char *)&v52 - v12;
  uint64_t v13 = sub_10017DF08(&qword_100E64980);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v52 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_10017DF08(&qword_100E64988);
  uint64_t v17 = __chkstk_darwin(v16 - 8);
  uint64_t v19 = (char *)&v52 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __chkstk_darwin(v17);
  uint64_t v22 = (char *)&v52 - v21;
  uint64_t v23 = __chkstk_darwin(v20);
  uint64_t v25 = (char *)&v52 - v24;
  __chkstk_darwin(v23);
  char v27 = (char *)&v52 - v26;
  uint64_t v28 = type metadata accessor for InteractiveMapInput();
  uint64_t v29 = __chkstk_darwin(v28);
  uint64_t v31 = (char *)&v52 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v29);
  uint64_t v33 = (void (*)(uint64_t))((char *)&v52 - v32);
  v63(a3 + 64);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v27, 1, v28) == 1) {
    return sub_1001781AC((uint64_t)v27, &qword_100E64988);
  }
  sub_1001522B4();
  uint64_t v63 = v33;
  sub_100136460();
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v25, 0, 1, v28);
  uint64_t v35 = v61;
  sub_100257454((uint64_t)v22);
  uint64_t v36 = (uint64_t)&v15[*(int *)(v13 + 48)];
  sub_10006DF38((uint64_t)v25, (uint64_t)v15, &qword_100E64988);
  sub_10006DF38((uint64_t)v22, v36, &qword_100E64988);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v15, 1, v28) != 1)
  {
    sub_10006DF38((uint64_t)v15, (uint64_t)v19, &qword_100E64988);
    if (_s7Weather24LocationCompositionStateOwet_0(v36, 1, v28) != 1)
    {
      sub_1001522B4();
      BOOL v45 = sub_1003AE19C((uint64_t)v19, (uint64_t)v31);
      sub_1001524C8((uint64_t)v31, (void (*)(void))type metadata accessor for InteractiveMapInput);
      sub_1001781AC((uint64_t)v22, &qword_100E64988);
      sub_1001781AC((uint64_t)v25, &qword_100E64988);
      sub_1001524C8((uint64_t)v19, (void (*)(void))type metadata accessor for InteractiveMapInput);
      sub_1001781AC((uint64_t)v15, &qword_100E64988);
      uint64_t v38 = (uint64_t)v63;
      if (v45) {
        return sub_1001524C8(v38, (void (*)(void))type metadata accessor for InteractiveMapInput);
      }
LABEL_9:
      uint64_t v39 = (uint64_t)v56;
      v58(v38);
      if (_s7Weather24LocationCompositionStateOwet_0(v39, 1, v55) == 1)
      {
        sub_1001781AC(v39, &qword_100E64978);
      }
      else
      {
        uint64_t v40 = (uint64_t)v54;
        sub_1001522B4();
        uint64_t v41 = (uint64_t)v53;
        sub_10024FA08();
        BOOL v42 = sub_1004F5864(v40, v41);
        sub_1001524C8(v41, (void (*)(void))type metadata accessor for InteractiveMapViewModel);
        if (!v42)
        {
          if (qword_100E62828 != -1) {
            swift_once();
          }
          uint64_t v46 = type metadata accessor for Logger();
          sub_1002102B0(v46, (uint64_t)qword_100F51F80);
          uint64_t v47 = Logger.logObject.getter();
          os_log_type_t v48 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v47, v48))
          {
            uint64_t v49 = swift_slowAlloc();
            v65[0] = swift_slowAlloc();
            *(_DWORD *)uint64_t v49 = 136446466;
            uint64_t v64 = sub_10016414C(0xD000000000000013, 0x8000000100C96F80, v65);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            *(_WORD *)(v49 + 12) = 2082;
            uint64_t v64 = sub_10016414C(0xD000000000000017, 0x8000000100C96FA0, v65);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            _os_log_impl((void *)&_mh_execute_header, v47, v48, "Selector observed model difference for %{public}s, %{public}s; views will update",
              (uint8_t *)v49,
              0x16u);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();
          }

          sub_10017DF08(&qword_100E64990);
          uint64_t v50 = (uint64_t)v60;
          sub_100136460();
          sub_100136460();
          swift_storeEnumTagMultiPayload();
          uint64_t v51 = v35 + *(void *)(*(void *)v35 + 120);
          swift_beginAccess();
          sub_1001DF004(v50, v51, &qword_100E64970);
          swift_endAccess();
          sub_10017DF08(&qword_100E64998);
          sub_1001246C8(&qword_100E649A0, &qword_100E64998);
          ObservableObject<>.objectWillChange.getter();
          ObservableObjectPublisher.send()();
          swift_release();
          sub_1001524C8(v40, (void (*)(void))type metadata accessor for InteractiveMapViewModel);
          return sub_1001524C8(v38, (void (*)(void))type metadata accessor for InteractiveMapInput);
        }
        sub_1001524C8(v40, (void (*)(void))type metadata accessor for InteractiveMapViewModel);
      }
      sub_10017DF08(&qword_100E64990);
      uint64_t v43 = (uint64_t)v60;
      sub_100136460();
      sub_10024FA08();
      sub_1001524C8(v38, (void (*)(void))type metadata accessor for InteractiveMapInput);
      swift_storeEnumTagMultiPayload();
      uint64_t v44 = v35 + *(void *)(*(void *)v35 + 120);
      swift_beginAccess();
      sub_1001DF004(v43, v44, &qword_100E64970);
      return swift_endAccess();
    }
    sub_1001781AC((uint64_t)v22, &qword_100E64988);
    sub_1001781AC((uint64_t)v25, &qword_100E64988);
    sub_1001524C8((uint64_t)v19, (void (*)(void))type metadata accessor for InteractiveMapInput);
    uint64_t v38 = (uint64_t)v63;
LABEL_8:
    sub_1001781AC((uint64_t)v15, &qword_100E64980);
    goto LABEL_9;
  }
  sub_1001781AC((uint64_t)v22, &qword_100E64988);
  sub_1001781AC((uint64_t)v25, &qword_100E64988);
  int v37 = _s7Weather24LocationCompositionStateOwet_0(v36, 1, v28);
  uint64_t v38 = (uint64_t)v63;
  if (v37 != 1) {
    goto LABEL_8;
  }
  sub_1001781AC((uint64_t)v15, &qword_100E64988);
  return sub_1001524C8(v38, (void (*)(void))type metadata accessor for InteractiveMapInput);
}

uint64_t sub_10026EC68(void (*a1)(uint64_t), uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t), uint64_t a6)
{
  uint64_t v58 = a6;
  uint64_t v59 = a5;
  uint64_t v62 = a4;
  uint64_t v63 = a2;
  uint64_t v64 = a1;
  uint64_t v60 = sub_10017DF08(&qword_100E649A8);
  __chkstk_darwin(v60);
  uint64_t v61 = (char *)&v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10017DF08(&qword_100E649B0);
  __chkstk_darwin(v8 - 8);
  uint64_t v57 = (char *)&v53 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t HourPrecipitationDetailViewModel = type metadata accessor for NextHourPrecipitationDetailViewModel(0);
  uint64_t v10 = __chkstk_darwin(HourPrecipitationDetailViewModel);
  uint64_t v54 = (char *)&v53 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v55 = (char *)&v53 - v12;
  uint64_t v13 = sub_10017DF08(&qword_100E649B8);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v53 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_10017DF08(&qword_100E649C0);
  uint64_t v17 = __chkstk_darwin(v16 - 8);
  uint64_t v19 = (char *)&v53 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __chkstk_darwin(v17);
  uint64_t v22 = (char *)&v53 - v21;
  uint64_t v23 = __chkstk_darwin(v20);
  uint64_t v25 = (char *)&v53 - v24;
  __chkstk_darwin(v23);
  char v27 = (char *)&v53 - v26;
  uint64_t HourPrecipitationDetailInput = type metadata accessor for NextHourPrecipitationDetailInput(0);
  uint64_t v29 = __chkstk_darwin(HourPrecipitationDetailInput);
  uint64_t v31 = (char *)&v53 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v29);
  uint64_t v33 = (void (*)(uint64_t))((char *)&v53 - v32);
  v64(a3 + 64);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v27, 1, HourPrecipitationDetailInput) == 1) {
    return sub_1001781AC((uint64_t)v27, &qword_100E649C0);
  }
  sub_1001522B4();
  uint64_t v64 = v33;
  sub_100136460();
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v25, 0, 1, HourPrecipitationDetailInput);
  uint64_t v35 = v62;
  sub_100257784((uint64_t)v22);
  uint64_t v36 = (uint64_t)&v15[*(int *)(v13 + 48)];
  sub_10006DF38((uint64_t)v25, (uint64_t)v15, &qword_100E649C0);
  sub_10006DF38((uint64_t)v22, v36, &qword_100E649C0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v15, 1, HourPrecipitationDetailInput) != 1)
  {
    sub_10006DF38((uint64_t)v15, (uint64_t)v19, &qword_100E649C0);
    if (_s7Weather24LocationCompositionStateOwet_0(v36, 1, HourPrecipitationDetailInput) != 1)
    {
      sub_1001522B4();
      sub_1003BE92C((uint64_t)v19, (uint64_t)v31);
      char v46 = v45;
      sub_1001524C8((uint64_t)v31, (void (*)(void))type metadata accessor for NextHourPrecipitationDetailInput);
      sub_1001781AC((uint64_t)v22, &qword_100E649C0);
      sub_1001781AC((uint64_t)v25, &qword_100E649C0);
      sub_1001524C8((uint64_t)v19, (void (*)(void))type metadata accessor for NextHourPrecipitationDetailInput);
      sub_1001781AC((uint64_t)v15, &qword_100E649C0);
      uint64_t v38 = (uint64_t)v64;
      if (v46) {
        return sub_1001524C8(v38, (void (*)(void))type metadata accessor for NextHourPrecipitationDetailInput);
      }
LABEL_9:
      uint64_t v39 = (uint64_t)v57;
      v59(v38);
      if (_s7Weather24LocationCompositionStateOwet_0(v39, 1, HourPrecipitationDetailViewModel) == 1)
      {
        sub_1001781AC(v39, &qword_100E649B0);
      }
      else
      {
        uint64_t v40 = (uint64_t)v55;
        sub_1001522B4();
        uint64_t v41 = (uint64_t)v54;
        sub_10024FBC4();
        BOOL v42 = sub_1003E7768(v40, v41);
        sub_1001524C8(v41, (void (*)(void))type metadata accessor for NextHourPrecipitationDetailViewModel);
        if (!v42)
        {
          if (qword_100E62828 != -1) {
            swift_once();
          }
          uint64_t v47 = type metadata accessor for Logger();
          sub_1002102B0(v47, (uint64_t)qword_100F51F80);
          os_log_type_t v48 = Logger.logObject.getter();
          os_log_type_t v49 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v48, v49))
          {
            uint64_t v50 = swift_slowAlloc();
            v66[0] = swift_slowAlloc();
            *(_DWORD *)uint64_t v50 = 136446466;
            uint64_t v65 = sub_10016414C(0xD000000000000020, 0x8000000100C96FC0, v66);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            *(_WORD *)(v50 + 12) = 2082;
            uint64_t v65 = sub_10016414C(0xD000000000000024, 0x8000000100C96FF0, v66);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            _os_log_impl((void *)&_mh_execute_header, v48, v49, "Selector observed model difference for %{public}s, %{public}s; views will update",
              (uint8_t *)v50,
              0x16u);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();
          }

          sub_10017DF08(&qword_100E649C8);
          uint64_t v51 = (uint64_t)v61;
          sub_100136460();
          sub_100136460();
          swift_storeEnumTagMultiPayload();
          uint64_t v52 = v35 + *(void *)(*(void *)v35 + 120);
          swift_beginAccess();
          sub_1001DF004(v51, v52, &qword_100E649A8);
          swift_endAccess();
          sub_10017DF08(&qword_100E649D0);
          sub_1001246C8((unint64_t *)&qword_100E649D8, &qword_100E649D0);
          ObservableObject<>.objectWillChange.getter();
          ObservableObjectPublisher.send()();
          swift_release();
          sub_1001524C8(v40, (void (*)(void))type metadata accessor for NextHourPrecipitationDetailViewModel);
          return sub_1001524C8(v38, (void (*)(void))type metadata accessor for NextHourPrecipitationDetailInput);
        }
        sub_1001524C8(v40, (void (*)(void))type metadata accessor for NextHourPrecipitationDetailViewModel);
      }
      sub_10017DF08(&qword_100E649C8);
      uint64_t v43 = (uint64_t)v61;
      sub_100136460();
      sub_10024FBC4();
      sub_1001524C8(v38, (void (*)(void))type metadata accessor for NextHourPrecipitationDetailInput);
      swift_storeEnumTagMultiPayload();
      uint64_t v44 = v35 + *(void *)(*(void *)v35 + 120);
      swift_beginAccess();
      sub_1001DF004(v43, v44, &qword_100E649A8);
      return swift_endAccess();
    }
    sub_1001781AC((uint64_t)v22, &qword_100E649C0);
    sub_1001781AC((uint64_t)v25, &qword_100E649C0);
    sub_1001524C8((uint64_t)v19, (void (*)(void))type metadata accessor for NextHourPrecipitationDetailInput);
    uint64_t v38 = (uint64_t)v64;
LABEL_8:
    sub_1001781AC((uint64_t)v15, &qword_100E649B8);
    goto LABEL_9;
  }
  sub_1001781AC((uint64_t)v22, &qword_100E649C0);
  sub_1001781AC((uint64_t)v25, &qword_100E649C0);
  int v37 = _s7Weather24LocationCompositionStateOwet_0(v36, 1, HourPrecipitationDetailInput);
  uint64_t v38 = (uint64_t)v64;
  if (v37 != 1) {
    goto LABEL_8;
  }
  sub_1001781AC((uint64_t)v15, &qword_100E649C0);
  return sub_1001524C8(v38, (void (*)(void))type metadata accessor for NextHourPrecipitationDetailInput);
}

uint64_t sub_10026F5BC(void (*a1)(uint64_t, __n128), uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t), uint64_t a6)
{
  uint64_t v57 = a6;
  uint64_t v58 = a5;
  uint64_t v61 = a4;
  uint64_t v62 = a2;
  uint64_t v63 = a1;
  uint64_t v59 = sub_10017DF08(&qword_100E64AC8);
  __chkstk_darwin(v59);
  uint64_t v60 = (char *)&v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10017DF08(&qword_100E64AD0);
  __chkstk_darwin(v8 - 8);
  uint64_t v56 = (char *)&v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = type metadata accessor for ListViewModel();
  __chkstk_darwin(v55);
  uint64_t v53 = (char *)&v52 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v54 = (char *)&v52 - v12;
  uint64_t v13 = sub_10017DF08(&qword_100E64AD8);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v52 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_10017DF08(&qword_100E64AE0);
  __chkstk_darwin(v16 - 8);
  uint64_t v18 = (char *)&v52 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v21 = (char *)&v52 - v20;
  __chkstk_darwin(v22);
  uint64_t v24 = (char *)&v52 - v23;
  __chkstk_darwin(v25);
  char v27 = (char *)&v52 - v26;
  uint64_t v28 = type metadata accessor for ListInput(0);
  __chkstk_darwin(v28);
  uint64_t v30 = (char *)&v52 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v32 = __chkstk_darwin(v31);
  id v34 = (void (*)(uint64_t, __n128))((char *)&v52 - v33);
  v63(a3 + 64, v32);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v27, 1, v28) == 1) {
    return sub_1001781AC((uint64_t)v27, &qword_100E64AE0);
  }
  sub_1001522B4();
  uint64_t v63 = v34;
  sub_100136460();
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v24, 0, 1, v28);
  uint64_t v36 = v61;
  sub_100257AB4((uint64_t)v21);
  uint64_t v37 = (uint64_t)&v15[*(int *)(v13 + 48)];
  sub_10006DF38((uint64_t)v24, (uint64_t)v15, &qword_100E64AE0);
  sub_10006DF38((uint64_t)v21, v37, &qword_100E64AE0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v15, 1, v28) != 1)
  {
    sub_10006DF38((uint64_t)v15, (uint64_t)v18, &qword_100E64AE0);
    if (_s7Weather24LocationCompositionStateOwet_0(v37, 1, v28) != 1)
    {
      sub_1001522B4();
      char v45 = sub_100537B5C((uint64_t)v18, (uint64_t)v30);
      sub_1001524C8((uint64_t)v30, (void (*)(void))type metadata accessor for ListInput);
      sub_1001781AC((uint64_t)v21, &qword_100E64AE0);
      sub_1001781AC((uint64_t)v24, &qword_100E64AE0);
      sub_1001524C8((uint64_t)v18, (void (*)(void))type metadata accessor for ListInput);
      sub_1001781AC((uint64_t)v15, &qword_100E64AE0);
      uint64_t v38 = (uint64_t)v63;
      if (v45) {
        return sub_1001524C8(v38, (void (*)(void))type metadata accessor for ListInput);
      }
LABEL_9:
      uint64_t v39 = (uint64_t)v56;
      v58(v38);
      if (_s7Weather24LocationCompositionStateOwet_0(v39, 1, v55) == 1)
      {
        sub_1001781AC(v39, &qword_100E64AD0);
      }
      else
      {
        uint64_t v40 = (uint64_t)v54;
        sub_1001522B4();
        uint64_t v41 = (uint64_t)v53;
        sub_10024E490();
        BOOL v42 = sub_1007FA254(v40, v41);
        sub_1001524C8(v41, (void (*)(void))type metadata accessor for ListViewModel);
        if (!v42)
        {
          if (qword_100E62828 != -1) {
            swift_once();
          }
          uint64_t v46 = type metadata accessor for Logger();
          sub_1002102B0(v46, (uint64_t)qword_100F51F80);
          uint64_t v47 = Logger.logObject.getter();
          os_log_type_t v48 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v47, v48))
          {
            uint64_t v49 = swift_slowAlloc();
            v65[0] = swift_slowAlloc();
            *(_DWORD *)uint64_t v49 = 136446466;
            uint64_t v64 = sub_10016414C(0x75706E497473694CLL, 0xE900000000000074, v65);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            *(_WORD *)(v49 + 12) = 2082;
            uint64_t v64 = sub_10016414C(0x776569567473694CLL, 0xED00006C65646F4DLL, v65);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            _os_log_impl((void *)&_mh_execute_header, v47, v48, "Selector observed model difference for %{public}s, %{public}s; views will update",
              (uint8_t *)v49,
              0x16u);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();
          }

          sub_10017DF08(&qword_100E64AE8);
          uint64_t v50 = (uint64_t)v60;
          sub_100136460();
          sub_100136460();
          swift_storeEnumTagMultiPayload();
          uint64_t v51 = v36 + *(void *)(*(void *)v36 + 120);
          swift_beginAccess();
          sub_1001DF004(v50, v51, &qword_100E64AC8);
          swift_endAccess();
          sub_10017DF08(&qword_100E64AF0);
          sub_1001246C8(&qword_100E64AF8, &qword_100E64AF0);
          ObservableObject<>.objectWillChange.getter();
          ObservableObjectPublisher.send()();
          swift_release();
          sub_1001524C8(v40, (void (*)(void))type metadata accessor for ListViewModel);
          return sub_1001524C8(v38, (void (*)(void))type metadata accessor for ListInput);
        }
        sub_1001524C8(v40, (void (*)(void))type metadata accessor for ListViewModel);
      }
      sub_10017DF08(&qword_100E64AE8);
      uint64_t v43 = (uint64_t)v60;
      sub_100136460();
      sub_10024E490();
      sub_1001524C8(v38, (void (*)(void))type metadata accessor for ListInput);
      swift_storeEnumTagMultiPayload();
      uint64_t v44 = v36 + *(void *)(*(void *)v36 + 120);
      swift_beginAccess();
      sub_1001DF004(v43, v44, &qword_100E64AC8);
      return swift_endAccess();
    }
    sub_1001781AC((uint64_t)v21, &qword_100E64AE0);
    sub_1001781AC((uint64_t)v24, &qword_100E64AE0);
    sub_1001524C8((uint64_t)v18, (void (*)(void))type metadata accessor for ListInput);
LABEL_8:
    sub_1001781AC((uint64_t)v15, &qword_100E64AD8);
    uint64_t v38 = (uint64_t)v63;
    goto LABEL_9;
  }
  sub_1001781AC((uint64_t)v21, &qword_100E64AE0);
  sub_1001781AC((uint64_t)v24, &qword_100E64AE0);
  if (_s7Weather24LocationCompositionStateOwet_0(v37, 1, v28) != 1) {
    goto LABEL_8;
  }
  sub_1001781AC((uint64_t)v15, &qword_100E64AE0);
  uint64_t v38 = (uint64_t)v63;
  return sub_1001524C8(v38, (void (*)(void))type metadata accessor for ListInput);
}

void *sub_10026FF0C(void *(*a1)(long long *__return_ptr, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(long long *__return_ptr, uint64_t *))
{
  void (*v8)(void *__return_ptr, void);
  void (*v9)(void *__return_ptr, void);
  char v10;
  char v11;
  unsigned __int8 v12;
  long long v13;
  long long v14;
  long long v15;
  char v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  long long v27;
  long long v28;
  uint64_t v29;
  __int16 v30;
  long long v31;
  long long v32;
  long long v33;
  uint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  uint64_t v37;
  uint64_t v38;
  __int16 v39;
  uint64_t v40;
  long long v41;
  long long v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unsigned __int8 v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  long long v58;
  long long v59;
  long long v60;
  long long v61;
  long long v62;
  long long v63;
  uint64_t v64;
  char v65;
  uint64_t v66;
  _OWORD v67[6];
  char v68;
  unsigned char v69[112];
  uint64_t vars8;

  uint64_t result = a1(&v58, a3 + 64);
  uint64_t v8 = (void (*)(void *__return_ptr, void))v58;
  if (!(void)v58) {
    return result;
  }
  uint64_t v66 = v58;
  swift_retain();
  uint64_t v9 = sub_100257DE4();
  if (v9)
  {
    if (v8 == v9) {
      return (void *)swift_release_n();
    }
    type metadata accessor for MainState._Storage(0);
    swift_retain_n();
    sub_10011796C();
    uint64_t v11 = v10;
    swift_release_n();
    swift_release();
    if (v11)
    {
      return (void *)swift_release();
    }
  }
  else
  {
    swift_release();
  }
  a5(&v58, &v66);
  uint64_t v12 = v64;
  if (v64 == 255)
  {
LABEL_12:
    *(void *)&uint64_t v58 = v8;
    swift_retain();
    sub_10024F864((uint64_t)&v58 + 8);
    swift_release();
    swift_beginAccess();
    uint64_t v17 = v64;
    uint64_t v18 = v65;
    uint64_t v19 = *(void *)(a4 + 16);
    uint64_t v20 = *(void *)(a4 + 24);
    uint64_t v21 = *(void *)(a4 + 32);
    uint64_t v22 = *(void *)(a4 + 40);
    uint64_t v23 = *(void *)(a4 + 48);
    uint64_t v24 = *(void *)(a4 + 56);
    uint64_t v25 = *(void *)(a4 + 64);
    uint64_t v26 = *(void *)(a4 + 72);
    char v27 = *(_OWORD *)(a4 + 80);
    uint64_t v28 = *(_OWORD *)(a4 + 96);
    uint64_t v29 = *(void *)(a4 + 112);
    uint64_t v30 = *(_WORD *)(a4 + 120);
    uint64_t v31 = v59;
    *(_OWORD *)(a4 + 16) = v58;
    *(_OWORD *)(a4 + 32) = v31;
    __n128 v32 = v61;
    *(_OWORD *)(a4 + 48) = v60;
    *(_OWORD *)(a4 + 64) = v32;
    uint64_t v33 = v63;
    *(_OWORD *)(a4 + 80) = v62;
    *(_OWORD *)(a4 + 96) = v33;
    *(void *)(a4 + 112) = v17;
    *(unsigned char *)(a4 + 120) = v18;
    *(unsigned char *)(a4 + 121) = 1;
    return (void *)sub_100275AC0(v19, v20, v21, v22, v23, v24, v25, v26, v27, *((uint64_t *)&v27 + 1), v28, *((uint64_t *)&v28 + 1), v29, v30, SHIBYTE(v30));
  }
  uint64_t v13 = v58;
  uint64_t v14 = v62;
  uint64_t v15 = v63;
  v67[0] = v58;
  uint64_t v54 = *((void *)&v59 + 1);
  uint64_t v55 = v59;
  v67[1] = v59;
  uint64_t v52 = v60;
  v67[2] = v60;
  uint64_t v56 = *((void *)&v61 + 1);
  uint64_t v57 = *((void *)&v60 + 1);
  uint64_t v53 = v61;
  v67[3] = v61;
  v67[4] = v62;
  v67[5] = v63;
  id v68 = v64;
  sub_10024F864((uint64_t)&v58);
  sub_100275CC0((uint64_t)&v58, (uint64_t)v69);
  uint64_t v16 = sub_1008FFE04((uint64_t)v67, (uint64_t)v69);
  sub_100276558((uint64_t)v69, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, char))sub_100275C08);
  if (v16)
  {
    sub_100275DF0(v13, *((uint64_t *)&v13 + 1), v55, v54, v52, v57, v53, v56, v14, *((uint64_t *)&v14 + 1), v15, *((uint64_t *)&v15 + 1), v12);
    goto LABEL_12;
  }
  uint64_t v51 = v12;
  if (qword_100E62828 != -1) {
    swift_once();
  }
  id v34 = type metadata accessor for Logger();
  sub_1002102B0(v34, (uint64_t)qword_100F51F80);
  uint64_t v35 = Logger.logObject.getter();
  uint64_t v36 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v35, v36))
  {
    uint64_t v37 = swift_slowAlloc();
    *(void *)&uint64_t v58 = swift_slowAlloc();
    *(_DWORD *)uint64_t v37 = 136446466;
    sub_10016414C(0x746174536E69614DLL, 0xE900000000000065, (uint64_t *)&v58);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v37 + 12) = 2082;
    sub_10016414C(0x6956686372616553, 0xEF6C65646F4D7765, (uint64_t *)&v58);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v35, v36, "Selector observed model difference for %{public}s, %{public}s; views will update",
      (uint8_t *)v37,
      0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  uint64_t v38 = v66;
  swift_beginAccess();
  uint64_t v49 = *(void *)(a4 + 24);
  uint64_t v50 = *(void *)(a4 + 16);
  uint64_t v47 = *(void *)(a4 + 40);
  os_log_type_t v48 = *(void *)(a4 + 32);
  char v45 = *(void *)(a4 + 56);
  uint64_t v46 = *(void *)(a4 + 48);
  uint64_t v43 = *(void *)(a4 + 72);
  uint64_t v44 = *(void *)(a4 + 64);
  uint64_t v41 = *(_OWORD *)(a4 + 96);
  BOOL v42 = *(_OWORD *)(a4 + 80);
  uint64_t v40 = *(void *)(a4 + 112);
  uint64_t v39 = *(_WORD *)(a4 + 120);
  *(void *)(a4 + 16) = v38;
  *(_OWORD *)(a4 + 24) = v13;
  *(void *)(a4 + 40) = v55;
  *(void *)(a4 + 48) = v54;
  *(void *)(a4 + 56) = v52;
  *(void *)(a4 + 64) = v57;
  *(void *)(a4 + 72) = v53;
  *(void *)(a4 + 80) = v56;
  *(_OWORD *)(a4 + 88) = v14;
  *(_OWORD *)(a4 + 104) = v15;
  *(unsigned char *)(a4 + 120) = v51;
  *(unsigned char *)(a4 + 121) = 1;
  swift_retain();
  sub_100275D1C(v13, *((uint64_t *)&v13 + 1), v55, v54, v52, v57, v53, v56, v14, *((uint64_t *)&v14 + 1), v15, *((uint64_t *)&v15 + 1), v51);
  sub_100275AC0(v50, v49, v48, v47, v46, v45, v44, v43, v42, *((uint64_t *)&v42 + 1), v41, *((uint64_t *)&v41 + 1), v40, v39, SHIBYTE(v39));
  sub_10017DF08(&qword_100E64B00);
  sub_1001246C8(&qword_100E64B08, &qword_100E64B00);
  ObservableObject<>.objectWillChange.getter();
  ObservableObjectPublisher.send()();
  swift_release();
  sub_100275DF0(v13, *((uint64_t *)&v13 + 1), v55, v54, v52, v57, v53, v56, v14, *((uint64_t *)&v14 + 1), v15, *((uint64_t *)&v15 + 1), v51);
  return (void *)swift_release();
}

uint64_t sub_1002704FC(void (*a1)(uint64_t), uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t *__return_ptr, char *), uint64_t a6)
{
  void (*v52)(uint64_t *__return_ptr, char *);
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58[3];

  uint64_t v51 = a6;
  uint64_t v52 = a5;
  uint64_t v55 = a4;
  uint64_t v56 = a2;
  uint64_t v53 = sub_10017DF08(&qword_100E64B10);
  __chkstk_darwin(v53);
  uint64_t v54 = (char *)&v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10017DF08(&qword_100E64B18);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10017DF08(&qword_100E64B20);
  uint64_t v13 = __chkstk_darwin(v12 - 8);
  uint64_t v50 = (uint64_t)&v49 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v49 - v16;
  uint64_t v18 = __chkstk_darwin(v15);
  uint64_t v20 = (char *)&v49 - v19;
  __chkstk_darwin(v18);
  uint64_t v22 = (char *)&v49 - v21;
  uint64_t v23 = type metadata accessor for NotificationsOptInInput();
  uint64_t v24 = __chkstk_darwin(v23);
  uint64_t v26 = (char *)&v49 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  uint64_t v28 = (char *)&v49 - v27;
  a1(a3 + 64);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v22, 1, v23) == 1) {
    return sub_1001781AC((uint64_t)v22, &qword_100E64B20);
  }
  sub_1001522B4();
  sub_100136460();
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v20, 0, 1, v23);
  uint64_t v30 = v55;
  sub_100257FF0((uint64_t)v17);
  uint64_t v31 = (uint64_t)&v11[*(int *)(v9 + 48)];
  sub_10006DF38((uint64_t)v20, (uint64_t)v11, &qword_100E64B20);
  sub_10006DF38((uint64_t)v17, v31, &qword_100E64B20);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v11, 1, v23) == 1)
  {
    sub_1001781AC((uint64_t)v17, &qword_100E64B20);
    sub_1001781AC((uint64_t)v20, &qword_100E64B20);
    if (_s7Weather24LocationCompositionStateOwet_0(v31, 1, v23) == 1)
    {
      sub_1001781AC((uint64_t)v11, &qword_100E64B20);
      return sub_1001524C8((uint64_t)v28, (void (*)(void))type metadata accessor for NotificationsOptInInput);
    }
  }
  else
  {
    uint64_t v32 = v50;
    sub_10006DF38((uint64_t)v11, v50, &qword_100E64B20);
    if (_s7Weather24LocationCompositionStateOwet_0(v31, 1, v23) != 1)
    {
      sub_1001522B4();
      char v40 = sub_10070E154(v32, (uint64_t)v26);
      sub_1001524C8((uint64_t)v26, (void (*)(void))type metadata accessor for NotificationsOptInInput);
      sub_1001781AC((uint64_t)v17, &qword_100E64B20);
      sub_1001781AC((uint64_t)v20, &qword_100E64B20);
      sub_1001524C8(v32, (void (*)(void))type metadata accessor for NotificationsOptInInput);
      sub_1001781AC((uint64_t)v11, &qword_100E64B20);
      if (v40) {
        return sub_1001524C8((uint64_t)v28, (void (*)(void))type metadata accessor for NotificationsOptInInput);
      }
      goto LABEL_9;
    }
    sub_1001781AC((uint64_t)v17, &qword_100E64B20);
    sub_1001781AC((uint64_t)v20, &qword_100E64B20);
    sub_1001524C8(v32, (void (*)(void))type metadata accessor for NotificationsOptInInput);
  }
  sub_1001781AC((uint64_t)v11, &qword_100E64B18);
LABEL_9:
  v52(v58, v28);
  int v33 = v58[0];
  if ((v58[0] & 0xFF0000) == 0x20000
    || (int v34 = sub_10024F268(), (sub_10065D154(v33 & 0xFF01FFFF, v34 & 0xFF01FFFF) & 1) != 0))
  {
    uint64_t v35 = sub_10017DF08(&qword_100E64B28);
    uint64_t v36 = (uint64_t)v54;
    uint64_t v37 = &v54[*(int *)(v35 + 48)];
    sub_100136460();
    int v38 = sub_10024F268();
    *(_WORD *)uint64_t v37 = v38;
    void v37[2] = BYTE2(v38) & 1;
    v37[3] = HIBYTE(v38);
    sub_1001524C8((uint64_t)v28, (void (*)(void))type metadata accessor for NotificationsOptInInput);
    swift_storeEnumTagMultiPayload();
    uint64_t v39 = v30 + *(void *)(*(void *)v30 + 120);
    swift_beginAccess();
    sub_1001DF004(v36, v39, &qword_100E64B10);
    return swift_endAccess();
  }
  if (qword_100E62828 != -1) {
    swift_once();
  }
  uint64_t v41 = type metadata accessor for Logger();
  sub_1002102B0(v41, (uint64_t)qword_100F51F80);
  BOOL v42 = Logger.logObject.getter();
  os_log_type_t v43 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v42, v43))
  {
    uint64_t v44 = swift_slowAlloc();
    v58[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v44 = 136446466;
    uint64_t v57 = sub_10016414C(0xD000000000000017, 0x8000000100C97110, v58);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v44 + 12) = 2082;
    uint64_t v57 = sub_10016414C(0xD00000000000001BLL, 0x8000000100C97130, v58);
    uint64_t v30 = v55;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v42, v43, "Selector observed model difference for %{public}s, %{public}s; views will update",
      (uint8_t *)v44,
      0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  uint64_t v45 = sub_10017DF08(&qword_100E64B28);
  uint64_t v46 = (uint64_t)v54;
  uint64_t v47 = &v54[*(int *)(v45 + 48)];
  sub_100136460();
  *(_WORD *)uint64_t v47 = v33;
  v47[2] = BYTE2(v33) & 1;
  v47[3] = HIBYTE(v33);
  swift_storeEnumTagMultiPayload();
  uint64_t v48 = v30 + *(void *)(*(void *)v30 + 120);
  swift_beginAccess();
  sub_1001DF004(v46, v48, &qword_100E64B10);
  swift_endAccess();
  sub_10017DF08(&qword_100E64B30);
  sub_1001246C8(&qword_100E64B38, &qword_100E64B30);
  ObservableObject<>.objectWillChange.getter();
  ObservableObjectPublisher.send()();
  swift_release();
  return sub_1001524C8((uint64_t)v28, (void (*)(void))type metadata accessor for NotificationsOptInInput);
}

uint64_t sub_100270D08(void (*a1)(uint64_t), uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(char *), uint64_t a6)
{
  uint64_t v60 = a6;
  uint64_t v61 = a5;
  uint64_t v64 = a4;
  uint64_t v65 = a2;
  uint64_t v62 = sub_10017DF08(&qword_100E64B60);
  __chkstk_darwin(v62);
  uint64_t v63 = (char *)&v54 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10017DF08(&qword_100E64B68);
  __chkstk_darwin(v9 - 8);
  uint64_t v59 = (char *)&v54 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = type metadata accessor for AveragesDetailViewModel();
  uint64_t v11 = __chkstk_darwin(v58);
  uint64_t v55 = (char *)&v54 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v56 = (char *)&v54 - v13;
  uint64_t v14 = sub_10017DF08(&qword_100E64B70);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v54 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_10017DF08(&qword_100E64B78);
  uint64_t v18 = __chkstk_darwin(v17 - 8);
  uint64_t v57 = (uint64_t)&v54 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v22 = (char *)&v54 - v21;
  uint64_t v23 = __chkstk_darwin(v20);
  uint64_t v25 = (char *)&v54 - v24;
  __chkstk_darwin(v23);
  uint64_t v27 = (char *)&v54 - v26;
  uint64_t v28 = type metadata accessor for AveragesDetailInput(0);
  uint64_t v29 = __chkstk_darwin(v28);
  uint64_t v31 = (char *)&v54 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v29);
  int v33 = (char *)&v54 - v32;
  a1(a3 + 64);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v27, 1, v28) == 1) {
    return sub_1001781AC((uint64_t)v27, &qword_100E64B78);
  }
  sub_1001522B4();
  sub_100136460();
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v25, 0, 1, v28);
  uint64_t v35 = v64;
  sub_100258268((uint64_t)v22);
  uint64_t v36 = (uint64_t)&v16[*(int *)(v14 + 48)];
  sub_10006DF38((uint64_t)v25, (uint64_t)v16, &qword_100E64B78);
  sub_10006DF38((uint64_t)v22, v36, &qword_100E64B78);
  uint64_t v37 = v35;
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v16, 1, v28) != 1)
  {
    uint64_t v39 = v57;
    sub_10006DF38((uint64_t)v16, v57, &qword_100E64B78);
    if (_s7Weather24LocationCompositionStateOwet_0(v36, 1, v28) == 1)
    {
      char v40 = &qword_100E64B70;
    }
    else
    {
      sub_1001522B4();
      if ((sub_100501E30(v39, (uint64_t)v31) & 1) != 0
        && *(unsigned __int8 *)(v39 + *(int *)(v28 + 20)) == v31[*(int *)(v28 + 20)])
      {
        char v53 = static Location.== infix(_:_:)();
        sub_1001524C8((uint64_t)v31, (void (*)(void))type metadata accessor for AveragesDetailInput);
        sub_1001781AC((uint64_t)v22, &qword_100E64B78);
        sub_1001781AC((uint64_t)v25, &qword_100E64B78);
        sub_1001524C8(v39, (void (*)(void))type metadata accessor for AveragesDetailInput);
        sub_1001781AC((uint64_t)v16, &qword_100E64B78);
        if (v53) {
          return sub_1001524C8((uint64_t)v33, (void (*)(void))type metadata accessor for AveragesDetailInput);
        }
LABEL_14:
        uint64_t v41 = (uint64_t)v59;
        v61(v33);
        if (_s7Weather24LocationCompositionStateOwet_0(v41, 1, v58) == 1)
        {
          sub_1001781AC(v41, &qword_100E64B68);
        }
        else
        {
          uint64_t v42 = (uint64_t)v56;
          sub_1001522B4();
          uint64_t v43 = (uint64_t)v55;
          sub_10024FD80();
          char v44 = sub_1006287B8(v42, v43);
          sub_1001524C8(v43, (void (*)(void))type metadata accessor for AveragesDetailViewModel);
          if ((v44 & 1) == 0)
          {
            if (qword_100E62828 != -1) {
              swift_once();
            }
            uint64_t v47 = type metadata accessor for Logger();
            sub_1002102B0(v47, (uint64_t)qword_100F51F80);
            uint64_t v48 = Logger.logObject.getter();
            os_log_type_t v49 = static os_log_type_t.default.getter();
            if (os_log_type_enabled(v48, v49))
            {
              uint64_t v50 = swift_slowAlloc();
              v67[0] = swift_slowAlloc();
              *(_DWORD *)uint64_t v50 = 136446466;
              uint64_t v66 = sub_10016414C(0xD000000000000013, 0x8000000100C97150, v67);
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              *(_WORD *)(v50 + 12) = 2082;
              uint64_t v66 = sub_10016414C(0xD000000000000017, 0x8000000100C97170, v67);
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              _os_log_impl((void *)&_mh_execute_header, v48, v49, "Selector observed model difference for %{public}s, %{public}s; views will update",
                (uint8_t *)v50,
                0x16u);
              swift_arrayDestroy();
              swift_slowDealloc();
              swift_slowDealloc();
            }

            sub_10017DF08(&qword_100E64B80);
            uint64_t v51 = (uint64_t)v63;
            sub_100136460();
            sub_100136460();
            swift_storeEnumTagMultiPayload();
            uint64_t v52 = v37 + *(void *)(*(void *)v37 + 120);
            swift_beginAccess();
            sub_1001DF004(v51, v52, &qword_100E64B60);
            swift_endAccess();
            sub_10017DF08(&qword_100E64B88);
            sub_1001246C8((unint64_t *)&qword_100E64B90, &qword_100E64B88);
            ObservableObject<>.objectWillChange.getter();
            ObservableObjectPublisher.send()();
            swift_release();
            sub_1001524C8(v42, (void (*)(void))type metadata accessor for AveragesDetailViewModel);
            return sub_1001524C8((uint64_t)v33, (void (*)(void))type metadata accessor for AveragesDetailInput);
          }
          sub_1001524C8(v42, (void (*)(void))type metadata accessor for AveragesDetailViewModel);
        }
        sub_10017DF08(&qword_100E64B80);
        uint64_t v45 = (uint64_t)v63;
        sub_100136460();
        sub_10024FD80();
        sub_1001524C8((uint64_t)v33, (void (*)(void))type metadata accessor for AveragesDetailInput);
        swift_storeEnumTagMultiPayload();
        uint64_t v46 = v37 + *(void *)(*(void *)v37 + 120);
        swift_beginAccess();
        sub_1001DF004(v45, v46, &qword_100E64B60);
        return swift_endAccess();
      }
      sub_1001524C8((uint64_t)v31, (void (*)(void))type metadata accessor for AveragesDetailInput);
      char v40 = &qword_100E64B78;
    }
    sub_1001781AC((uint64_t)v22, &qword_100E64B78);
    sub_1001781AC((uint64_t)v25, &qword_100E64B78);
    sub_1001524C8(v39, (void (*)(void))type metadata accessor for AveragesDetailInput);
LABEL_13:
    sub_1001781AC((uint64_t)v16, v40);
    goto LABEL_14;
  }
  uint64_t v38 = v35;
  sub_1001781AC((uint64_t)v22, &qword_100E64B78);
  sub_1001781AC((uint64_t)v25, &qword_100E64B78);
  if (_s7Weather24LocationCompositionStateOwet_0(v36, 1, v28) != 1)
  {
    char v40 = &qword_100E64B70;
    uint64_t v37 = v38;
    goto LABEL_13;
  }
  sub_1001781AC((uint64_t)v16, &qword_100E64B78);
  return sub_1001524C8((uint64_t)v33, (void (*)(void))type metadata accessor for AveragesDetailInput);
}

uint64_t sub_1002716CC(void (*a1)(uint64_t), uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t), uint64_t a6)
{
  uint64_t v57 = a6;
  uint64_t v58 = a5;
  uint64_t v61 = a4;
  uint64_t v62 = a2;
  uint64_t v63 = a1;
  uint64_t v59 = sub_10017DF08(&qword_100E64B98);
  __chkstk_darwin(v59);
  uint64_t v60 = (char *)&v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10017DF08(&qword_100E64BA0);
  __chkstk_darwin(v8 - 8);
  uint64_t v56 = (char *)&v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = type metadata accessor for MoonScrubberViewModel();
  uint64_t v10 = __chkstk_darwin(v55);
  char v53 = (char *)&v52 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v54 = (char *)&v52 - v12;
  uint64_t v13 = sub_10017DF08(&qword_100E64BA8);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v52 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_10017DF08(&qword_100E64BB0);
  uint64_t v17 = __chkstk_darwin(v16 - 8);
  uint64_t v19 = (char *)&v52 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __chkstk_darwin(v17);
  uint64_t v22 = (char *)&v52 - v21;
  uint64_t v23 = __chkstk_darwin(v20);
  uint64_t v25 = (char *)&v52 - v24;
  __chkstk_darwin(v23);
  uint64_t v27 = (char *)&v52 - v26;
  uint64_t v28 = type metadata accessor for MoonScrubberInput();
  uint64_t v29 = __chkstk_darwin(v28);
  uint64_t v31 = (char *)&v52 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v29);
  int v33 = (void (*)(uint64_t))((char *)&v52 - v32);
  v63(a3 + 64);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v27, 1, v28) == 1) {
    return sub_1001781AC((uint64_t)v27, &qword_100E64BB0);
  }
  sub_1001522B4();
  uint64_t v63 = v33;
  sub_100136460();
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v25, 0, 1, v28);
  uint64_t v35 = v61;
  sub_100258598((uint64_t)v22);
  uint64_t v36 = (uint64_t)&v15[*(int *)(v13 + 48)];
  sub_10006DF38((uint64_t)v25, (uint64_t)v15, &qword_100E64BB0);
  sub_10006DF38((uint64_t)v22, v36, &qword_100E64BB0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v15, 1, v28) != 1)
  {
    sub_10006DF38((uint64_t)v15, (uint64_t)v19, &qword_100E64BB0);
    if (_s7Weather24LocationCompositionStateOwet_0(v36, 1, v28) != 1)
    {
      sub_1001522B4();
      char v45 = sub_1004A9C44((uint64_t)v19, (uint64_t)v31);
      sub_1001524C8((uint64_t)v31, (void (*)(void))type metadata accessor for MoonScrubberInput);
      sub_1001781AC((uint64_t)v22, &qword_100E64BB0);
      sub_1001781AC((uint64_t)v25, &qword_100E64BB0);
      sub_1001524C8((uint64_t)v19, (void (*)(void))type metadata accessor for MoonScrubberInput);
      sub_1001781AC((uint64_t)v15, &qword_100E64BB0);
      uint64_t v38 = (uint64_t)v63;
      if (v45) {
        return sub_1001524C8(v38, (void (*)(void))type metadata accessor for MoonScrubberInput);
      }
LABEL_9:
      uint64_t v39 = (uint64_t)v56;
      v58(v38);
      if (_s7Weather24LocationCompositionStateOwet_0(v39, 1, v55) == 1)
      {
        sub_1001781AC(v39, &qword_100E64BA0);
      }
      else
      {
        uint64_t v40 = (uint64_t)v54;
        sub_1001522B4();
        uint64_t v41 = (uint64_t)v53;
        sub_10024FF3C();
        char v42 = sub_1002AF75C(v40, v41);
        sub_1001524C8(v41, (void (*)(void))type metadata accessor for MoonScrubberViewModel);
        if ((v42 & 1) == 0)
        {
          if (qword_100E62828 != -1) {
            swift_once();
          }
          uint64_t v46 = type metadata accessor for Logger();
          sub_1002102B0(v46, (uint64_t)qword_100F51F80);
          uint64_t v47 = Logger.logObject.getter();
          os_log_type_t v48 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v47, v48))
          {
            uint64_t v49 = swift_slowAlloc();
            v65[0] = swift_slowAlloc();
            *(_DWORD *)uint64_t v49 = 136446466;
            uint64_t v64 = sub_10016414C(0xD000000000000011, 0x8000000100C97190, v65);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            *(_WORD *)(v49 + 12) = 2082;
            uint64_t v64 = sub_10016414C(0xD000000000000015, 0x8000000100C971B0, v65);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            _os_log_impl((void *)&_mh_execute_header, v47, v48, "Selector observed model difference for %{public}s, %{public}s; views will update",
              (uint8_t *)v49,
              0x16u);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();
          }

          sub_10017DF08(&qword_100E64BB8);
          uint64_t v50 = (uint64_t)v60;
          sub_100136460();
          sub_100136460();
          swift_storeEnumTagMultiPayload();
          uint64_t v51 = v35 + *(void *)(*(void *)v35 + 120);
          swift_beginAccess();
          sub_1001DF004(v50, v51, &qword_100E64B98);
          swift_endAccess();
          sub_10017DF08(&qword_100E64BC0);
          sub_1001246C8(&qword_100E64BC8, &qword_100E64BC0);
          ObservableObject<>.objectWillChange.getter();
          ObservableObjectPublisher.send()();
          swift_release();
          sub_1001524C8(v40, (void (*)(void))type metadata accessor for MoonScrubberViewModel);
          return sub_1001524C8(v38, (void (*)(void))type metadata accessor for MoonScrubberInput);
        }
        sub_1001524C8(v40, (void (*)(void))type metadata accessor for MoonScrubberViewModel);
      }
      sub_10017DF08(&qword_100E64BB8);
      uint64_t v43 = (uint64_t)v60;
      sub_100136460();
      sub_10024FF3C();
      sub_1001524C8(v38, (void (*)(void))type metadata accessor for MoonScrubberInput);
      swift_storeEnumTagMultiPayload();
      uint64_t v44 = v35 + *(void *)(*(void *)v35 + 120);
      swift_beginAccess();
      sub_1001DF004(v43, v44, &qword_100E64B98);
      return swift_endAccess();
    }
    sub_1001781AC((uint64_t)v22, &qword_100E64BB0);
    sub_1001781AC((uint64_t)v25, &qword_100E64BB0);
    sub_1001524C8((uint64_t)v19, (void (*)(void))type metadata accessor for MoonScrubberInput);
    uint64_t v38 = (uint64_t)v63;
LABEL_8:
    sub_1001781AC((uint64_t)v15, &qword_100E64BA8);
    goto LABEL_9;
  }
  sub_1001781AC((uint64_t)v22, &qword_100E64BB0);
  sub_1001781AC((uint64_t)v25, &qword_100E64BB0);
  int v37 = _s7Weather24LocationCompositionStateOwet_0(v36, 1, v28);
  uint64_t v38 = (uint64_t)v63;
  if (v37 != 1) {
    goto LABEL_8;
  }
  sub_1001781AC((uint64_t)v15, &qword_100E64BB0);
  return sub_1001524C8(v38, (void (*)(void))type metadata accessor for MoonScrubberInput);
}

uint64_t sub_100272020(void (*a1)(uint64_t), uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t), uint64_t a6)
{
  uint64_t v57 = a6;
  uint64_t v58 = a5;
  uint64_t v61 = a4;
  uint64_t v62 = a2;
  uint64_t v63 = a1;
  uint64_t v59 = sub_10017DF08(&qword_100E64BD0);
  __chkstk_darwin(v59);
  uint64_t v60 = (char *)&v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10017DF08(&qword_100E64BD8);
  __chkstk_darwin(v8 - 8);
  uint64_t v56 = (char *)&v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = type metadata accessor for SunriseSunsetDetailViewModel();
  uint64_t v10 = __chkstk_darwin(v55);
  char v53 = (char *)&v52 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v54 = (char *)&v52 - v12;
  uint64_t v13 = sub_10017DF08(&qword_100E64BE0);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v52 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_10017DF08(&qword_100E64BE8);
  uint64_t v17 = __chkstk_darwin(v16 - 8);
  uint64_t v19 = (char *)&v52 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __chkstk_darwin(v17);
  uint64_t v22 = (char *)&v52 - v21;
  uint64_t v23 = __chkstk_darwin(v20);
  uint64_t v25 = (char *)&v52 - v24;
  __chkstk_darwin(v23);
  uint64_t v27 = (char *)&v52 - v26;
  uint64_t v28 = type metadata accessor for SunriseSunsetDetailInput(0);
  uint64_t v29 = __chkstk_darwin(v28);
  uint64_t v31 = (char *)&v52 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v29);
  int v33 = (void (*)(uint64_t))((char *)&v52 - v32);
  v63(a3 + 64);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v27, 1, v28) == 1) {
    return sub_1001781AC((uint64_t)v27, &qword_100E64BE8);
  }
  sub_1001522B4();
  uint64_t v63 = v33;
  sub_100136460();
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v25, 0, 1, v28);
  uint64_t v35 = v61;
  sub_1002588C8((uint64_t)v22);
  uint64_t v36 = (uint64_t)&v15[*(int *)(v13 + 48)];
  sub_10006DF38((uint64_t)v25, (uint64_t)v15, &qword_100E64BE8);
  sub_10006DF38((uint64_t)v22, v36, &qword_100E64BE8);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v15, 1, v28) != 1)
  {
    sub_10006DF38((uint64_t)v15, (uint64_t)v19, &qword_100E64BE8);
    if (_s7Weather24LocationCompositionStateOwet_0(v36, 1, v28) != 1)
    {
      sub_1001522B4();
      char v45 = sub_100549D7C((uint64_t)v19, (uint64_t)v31);
      sub_1001524C8((uint64_t)v31, (void (*)(void))type metadata accessor for SunriseSunsetDetailInput);
      sub_1001781AC((uint64_t)v22, &qword_100E64BE8);
      sub_1001781AC((uint64_t)v25, &qword_100E64BE8);
      sub_1001524C8((uint64_t)v19, (void (*)(void))type metadata accessor for SunriseSunsetDetailInput);
      sub_1001781AC((uint64_t)v15, &qword_100E64BE8);
      uint64_t v38 = (uint64_t)v63;
      if (v45) {
        return sub_1001524C8(v38, (void (*)(void))type metadata accessor for SunriseSunsetDetailInput);
      }
LABEL_9:
      uint64_t v39 = (uint64_t)v56;
      v58(v38);
      if (_s7Weather24LocationCompositionStateOwet_0(v39, 1, v55) == 1)
      {
        sub_1001781AC(v39, &qword_100E64BD8);
      }
      else
      {
        uint64_t v40 = (uint64_t)v54;
        sub_1001522B4();
        uint64_t v41 = (uint64_t)v53;
        sub_10025035C();
        char v42 = sub_10074AFF0(v40, v41);
        sub_1001524C8(v41, (void (*)(void))type metadata accessor for SunriseSunsetDetailViewModel);
        if ((v42 & 1) == 0)
        {
          if (qword_100E62828 != -1) {
            swift_once();
          }
          uint64_t v46 = type metadata accessor for Logger();
          sub_1002102B0(v46, (uint64_t)qword_100F51F80);
          uint64_t v47 = Logger.logObject.getter();
          os_log_type_t v48 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v47, v48))
          {
            uint64_t v49 = swift_slowAlloc();
            v65[0] = swift_slowAlloc();
            *(_DWORD *)uint64_t v49 = 136446466;
            uint64_t v64 = sub_10016414C(0xD000000000000018, 0x8000000100C971D0, v65);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            *(_WORD *)(v49 + 12) = 2082;
            uint64_t v64 = sub_10016414C(0xD00000000000001CLL, 0x8000000100C971F0, v65);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            _os_log_impl((void *)&_mh_execute_header, v47, v48, "Selector observed model difference for %{public}s, %{public}s; views will update",
              (uint8_t *)v49,
              0x16u);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();
          }

          sub_10017DF08(&qword_100E64BF0);
          uint64_t v50 = (uint64_t)v60;
          sub_100136460();
          sub_100136460();
          swift_storeEnumTagMultiPayload();
          uint64_t v51 = v35 + *(void *)(*(void *)v35 + 120);
          swift_beginAccess();
          sub_1001DF004(v50, v51, &qword_100E64BD0);
          swift_endAccess();
          sub_10017DF08(&qword_100E64BF8);
          sub_1001246C8((unint64_t *)&qword_100E64C00, &qword_100E64BF8);
          ObservableObject<>.objectWillChange.getter();
          ObservableObjectPublisher.send()();
          swift_release();
          sub_1001524C8(v40, (void (*)(void))type metadata accessor for SunriseSunsetDetailViewModel);
          return sub_1001524C8(v38, (void (*)(void))type metadata accessor for SunriseSunsetDetailInput);
        }
        sub_1001524C8(v40, (void (*)(void))type metadata accessor for SunriseSunsetDetailViewModel);
      }
      sub_10017DF08(&qword_100E64BF0);
      uint64_t v43 = (uint64_t)v60;
      sub_100136460();
      sub_10025035C();
      sub_1001524C8(v38, (void (*)(void))type metadata accessor for SunriseSunsetDetailInput);
      swift_storeEnumTagMultiPayload();
      uint64_t v44 = v35 + *(void *)(*(void *)v35 + 120);
      swift_beginAccess();
      sub_1001DF004(v43, v44, &qword_100E64BD0);
      return swift_endAccess();
    }
    sub_1001781AC((uint64_t)v22, &qword_100E64BE8);
    sub_1001781AC((uint64_t)v25, &qword_100E64BE8);
    sub_1001524C8((uint64_t)v19, (void (*)(void))type metadata accessor for SunriseSunsetDetailInput);
    uint64_t v38 = (uint64_t)v63;
LABEL_8:
    sub_1001781AC((uint64_t)v15, &qword_100E64BE0);
    goto LABEL_9;
  }
  sub_1001781AC((uint64_t)v22, &qword_100E64BE8);
  sub_1001781AC((uint64_t)v25, &qword_100E64BE8);
  int v37 = _s7Weather24LocationCompositionStateOwet_0(v36, 1, v28);
  uint64_t v38 = (uint64_t)v63;
  if (v37 != 1) {
    goto LABEL_8;
  }
  sub_1001781AC((uint64_t)v15, &qword_100E64BE8);
  return sub_1001524C8(v38, (void (*)(void))type metadata accessor for SunriseSunsetDetailInput);
}

void sub_100272974(void (*a1)(id *__return_ptr, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(id *__return_ptr, id *))
{
  a1(&v55, a3 + 64);
  id v7 = v55;
  if (!v55) {
    return;
  }
  uint64_t v8 = v56;
  uint64_t v9 = v57 & 1;
  id v58 = v55;
  uint64_t v59 = v56;
  BOOL v60 = v9 != 0;
  id v10 = v55;
  uint64_t v11 = sub_100258BF8();
  if (v11)
  {
    uint64_t v14 = v11;
    uint64_t v15 = v12;
    char v16 = v13 & 1;
    id v53 = v10;
    LOBYTE(v15) = sub_100A84364((uint64_t)v53, v8, v9, (uint64_t)v14, v15, v16);

    if (v15)
    {

      return;
    }
  }
  else
  {
  }
  a5(&v55, &v58);
  id v17 = v55;
  if (!v55)
  {
LABEL_11:
    id v24 = v10;
    id v25 = sub_10024E9C4();
    uint64_t v27 = v26;
    char v29 = v28;

    swift_beginAccess();
    uint64_t v30 = *(void **)(a4 + 16);
    uint64_t v31 = *(void *)(a4 + 24);
    uint64_t v32 = *(void *)(a4 + 32);
    int v33 = *(void **)(a4 + 40);
    uint64_t v34 = *(void *)(a4 + 48);
    *(void *)(a4 + 16) = v7;
    *(void *)(a4 + 24) = v8;
    *(void *)(a4 + 32) = v9;
    *(void *)(a4 + 40) = v25;
    *(void *)(a4 + 48) = v27;
    uint64_t v35 = *(unsigned __int8 *)(a4 + 56);
    *(unsigned char *)(a4 + 56) = v29 & 1;
    char v36 = *(unsigned char *)(a4 + 57);
    *(unsigned char *)(a4 + 57) = 1;
    sub_100276224(v30, v31, v32, v33, v34, v35, v36);
    return;
  }
  uint64_t v18 = v56;
  char v19 = v57 & 1;
  id v20 = sub_10024E9C4();
  char v23 = sub_100292ACC((uint64_t)v17, v18, v19, (uint64_t)v20, v22, v21 & 1);

  if (v23)
  {

    goto LABEL_11;
  }
  if (qword_100E62828 != -1) {
    swift_once();
  }
  uint64_t v37 = type metadata accessor for Logger();
  sub_1002102B0(v37, (uint64_t)qword_100F51F80);
  uint64_t v38 = Logger.logObject.getter();
  os_log_type_t v39 = static os_log_type_t.default.getter();
  id v54 = (id)v18;
  char v52 = v19;
  if (os_log_type_enabled(v38, v39))
  {
    uint64_t v40 = swift_slowAlloc();
    id v55 = (id)swift_slowAlloc();
    *(_DWORD *)uint64_t v40 = 136446466;
    sub_10016414C(0x756E654D7473694CLL, 0xED00007475706E49, (uint64_t *)&v55);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v40 + 12) = 2082;
    sub_10016414C(0xD000000000000011, 0x8000000100C97210, (uint64_t *)&v55);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v38, v39, "Selector observed model difference for %{public}s, %{public}s; views will update",
      (uint8_t *)v40,
      0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  char v42 = v58;
  uint64_t v41 = v59;
  uint64_t v43 = v60;
  swift_beginAccess();
  uint64_t v44 = *(void **)(a4 + 16);
  uint64_t v45 = *(void *)(a4 + 24);
  uint64_t v46 = *(void *)(a4 + 32);
  uint64_t v47 = *(void **)(a4 + 40);
  uint64_t v48 = *(void *)(a4 + 48);
  *(void *)(a4 + 16) = v42;
  *(void *)(a4 + 24) = v41;
  *(void *)(a4 + 32) = v43;
  *(void *)(a4 + 40) = v17;
  *(void *)(a4 + 48) = v54;
  uint64_t v49 = *(unsigned __int8 *)(a4 + 56);
  *(unsigned char *)(a4 + 56) = v52;
  LOBYTE(v43) = *(unsigned char *)(a4 + 57);
  *(unsigned char *)(a4 + 57) = 1;
  id v50 = v42;
  id v51 = v17;
  sub_100276224(v44, v45, v46, v47, v48, v49, v43);
  sub_10017DF08(&qword_100E64C08);
  sub_1001246C8(&qword_100E64C10, &qword_100E64C08);
  ObservableObject<>.objectWillChange.getter();
  ObservableObjectPublisher.send()();

  swift_release();
}

uint64_t sub_100272DDC(void (*a1)(uint64_t), uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(char *), uint64_t a6)
{
  uint64_t v56 = a6;
  char v57 = a5;
  uint64_t v58 = a4;
  uint64_t v59 = a2;
  BOOL v60 = a1;
  uint64_t v52 = sub_10017DF08(&qword_100E64C18);
  __chkstk_darwin(v52);
  id v53 = (char *)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10017DF08(&qword_100E64C20);
  __chkstk_darwin(v8 - 8);
  id v54 = (char *)&v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = type metadata accessor for MoonCalendarViewModel();
  uint64_t v10 = __chkstk_darwin(v55);
  id v50 = (char *)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  id v51 = (char *)&v49 - v12;
  uint64_t v13 = sub_10017DF08(&qword_100E64C28);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v49 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_10017DF08(&qword_100E64C30);
  uint64_t v17 = __chkstk_darwin(v16 - 8);
  char v19 = (char *)&v49 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __chkstk_darwin(v17);
  uint64_t v22 = (char *)&v49 - v21;
  uint64_t v23 = __chkstk_darwin(v20);
  id v25 = (char *)&v49 - v24;
  __chkstk_darwin(v23);
  uint64_t v27 = (char *)&v49 - v26;
  uint64_t v28 = type metadata accessor for MoonCalendarInput();
  uint64_t v29 = __chkstk_darwin(v28);
  uint64_t v31 = (char *)&v49 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v29);
  int v33 = (char *)&v49 - v32;
  v60(a3 + 64);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v27, 1, v28) == 1) {
    return sub_1001781AC((uint64_t)v27, &qword_100E64C30);
  }
  sub_1001522B4();
  sub_100136460();
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v25, 0, 1, v28);
  sub_100258D40((uint64_t)v22);
  uint64_t v35 = (uint64_t)&v15[*(int *)(v13 + 48)];
  sub_10006DF38((uint64_t)v25, (uint64_t)v15, &qword_100E64C30);
  sub_10006DF38((uint64_t)v22, v35, &qword_100E64C30);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v15, 1, v28) != 1)
  {
    sub_10006DF38((uint64_t)v15, (uint64_t)v19, &qword_100E64C30);
    if (_s7Weather24LocationCompositionStateOwet_0(v35, 1, v28) != 1)
    {
      sub_1001522B4();
      BOOL v42 = sub_100725A24((uint64_t)v19, (uint64_t)v31);
      sub_1001524C8((uint64_t)v31, (void (*)(void))type metadata accessor for MoonCalendarInput);
      sub_1001781AC((uint64_t)v22, &qword_100E64C30);
      sub_1001781AC((uint64_t)v25, &qword_100E64C30);
      sub_1001524C8((uint64_t)v19, (void (*)(void))type metadata accessor for MoonCalendarInput);
      sub_1001781AC((uint64_t)v15, &qword_100E64C30);
      if (v42) {
        return sub_1001524C8((uint64_t)v33, (void (*)(void))type metadata accessor for MoonCalendarInput);
      }
LABEL_9:
      uint64_t v36 = (uint64_t)v54;
      v57(v33);
      if (_s7Weather24LocationCompositionStateOwet_0(v36, 1, v55) == 1)
      {
        sub_1001781AC(v36, &qword_100E64C20);
        uint64_t v37 = v58;
      }
      else
      {
        uint64_t v38 = (uint64_t)v51;
        sub_1001522B4();
        uint64_t v39 = (uint64_t)v50;
        uint64_t v37 = v58;
        sub_100250518();
        if ((sub_1002779A0(v38, v39) & 1) == 0 || (static OverviewTableViewModel.== infix(_:_:)() & 1) == 0)
        {
          sub_1001524C8(v39, (void (*)(void))type metadata accessor for MoonCalendarViewModel);
          if (qword_100E62828 != -1) {
            swift_once();
          }
          uint64_t v43 = type metadata accessor for Logger();
          sub_1002102B0(v43, (uint64_t)qword_100F51F80);
          uint64_t v44 = Logger.logObject.getter();
          os_log_type_t v45 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v44, v45))
          {
            uint64_t v46 = swift_slowAlloc();
            v62[0] = swift_slowAlloc();
            *(_DWORD *)uint64_t v46 = 136446466;
            uint64_t v61 = sub_10016414C(0xD000000000000011, 0x8000000100C97230, v62);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            *(_WORD *)(v46 + 12) = 2082;
            uint64_t v61 = sub_10016414C(0xD000000000000015, 0x8000000100C97250, v62);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            _os_log_impl((void *)&_mh_execute_header, v44, v45, "Selector observed model difference for %{public}s, %{public}s; views will update",
              (uint8_t *)v46,
              0x16u);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();
          }

          sub_10017DF08(&qword_100E64C38);
          uint64_t v47 = (uint64_t)v53;
          sub_100136460();
          sub_100136460();
          swift_storeEnumTagMultiPayload();
          uint64_t v48 = v37 + *(void *)(*(void *)v37 + 120);
          swift_beginAccess();
          sub_1001DF004(v47, v48, &qword_100E64C18);
          swift_endAccess();
          sub_10017DF08(&qword_100E64C40);
          sub_1001246C8((unint64_t *)&qword_100E64C48, &qword_100E64C40);
          ObservableObject<>.objectWillChange.getter();
          ObservableObjectPublisher.send()();
          swift_release();
          sub_1001524C8(v38, (void (*)(void))type metadata accessor for MoonCalendarViewModel);
          return sub_1001524C8((uint64_t)v33, (void (*)(void))type metadata accessor for MoonCalendarInput);
        }
        sub_1001524C8(v39, (void (*)(void))type metadata accessor for MoonCalendarViewModel);
        sub_1001524C8(v38, (void (*)(void))type metadata accessor for MoonCalendarViewModel);
      }
      sub_10017DF08(&qword_100E64C38);
      uint64_t v40 = (uint64_t)v53;
      sub_100136460();
      sub_100250518();
      sub_1001524C8((uint64_t)v33, (void (*)(void))type metadata accessor for MoonCalendarInput);
      swift_storeEnumTagMultiPayload();
      uint64_t v41 = v37 + *(void *)(*(void *)v37 + 120);
      swift_beginAccess();
      sub_1001DF004(v40, v41, &qword_100E64C18);
      return swift_endAccess();
    }
    sub_1001781AC((uint64_t)v22, &qword_100E64C30);
    sub_1001781AC((uint64_t)v25, &qword_100E64C30);
    sub_1001524C8((uint64_t)v19, (void (*)(void))type metadata accessor for MoonCalendarInput);
LABEL_8:
    sub_1001781AC((uint64_t)v15, &qword_100E64C28);
    goto LABEL_9;
  }
  sub_1001781AC((uint64_t)v22, &qword_100E64C30);
  sub_1001781AC((uint64_t)v25, &qword_100E64C30);
  if (_s7Weather24LocationCompositionStateOwet_0(v35, 1, v28) != 1) {
    goto LABEL_8;
  }
  sub_1001781AC((uint64_t)v15, &qword_100E64C30);
  return sub_1001524C8((uint64_t)v33, (void (*)(void))type metadata accessor for MoonCalendarInput);
}

uint64_t sub_100273740(void (*a1)(uint64_t), uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t), uint64_t a6)
{
  uint64_t v57 = a6;
  uint64_t v58 = a5;
  uint64_t v61 = a4;
  uint64_t v62 = a2;
  uint64_t v63 = a1;
  uint64_t v59 = sub_10017DF08(&qword_100E64C50);
  __chkstk_darwin(v59);
  BOOL v60 = (char *)&v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10017DF08(&qword_100E64C58);
  __chkstk_darwin(v8 - 8);
  uint64_t v56 = (char *)&v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = type metadata accessor for HomeAndWorkRefinementViewModel(0);
  uint64_t v10 = __chkstk_darwin(v55);
  id v53 = (char *)&v52 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  id v54 = (char *)&v52 - v12;
  uint64_t v13 = sub_10017DF08(&qword_100E64C60);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v52 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_10017DF08(&qword_100E64C68);
  uint64_t v17 = __chkstk_darwin(v16 - 8);
  char v19 = (char *)&v52 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __chkstk_darwin(v17);
  uint64_t v22 = (char *)&v52 - v21;
  uint64_t v23 = __chkstk_darwin(v20);
  id v25 = (char *)&v52 - v24;
  __chkstk_darwin(v23);
  uint64_t v27 = (char *)&v52 - v26;
  uint64_t v28 = type metadata accessor for HomeAndWorkRefinementInput();
  uint64_t v29 = __chkstk_darwin(v28);
  uint64_t v31 = (char *)&v52 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v29);
  int v33 = (void (*)(uint64_t))((char *)&v52 - v32);
  v63(a3 + 64);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v27, 1, v28) == 1) {
    return sub_1001781AC((uint64_t)v27, &qword_100E64C68);
  }
  sub_1001522B4();
  uint64_t v63 = v33;
  sub_100136460();
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v25, 0, 1, v28);
  uint64_t v35 = v61;
  sub_100259070((uint64_t)v22);
  uint64_t v36 = (uint64_t)&v15[*(int *)(v13 + 48)];
  sub_10006DF38((uint64_t)v25, (uint64_t)v15, &qword_100E64C68);
  sub_10006DF38((uint64_t)v22, v36, &qword_100E64C68);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v15, 1, v28) != 1)
  {
    sub_10006DF38((uint64_t)v15, (uint64_t)v19, &qword_100E64C68);
    if (_s7Weather24LocationCompositionStateOwet_0(v36, 1, v28) != 1)
    {
      sub_1001522B4();
      char v45 = sub_100644810((uint64_t)v19, (uint64_t)v31);
      sub_1001524C8((uint64_t)v31, (void (*)(void))type metadata accessor for HomeAndWorkRefinementInput);
      sub_1001781AC((uint64_t)v22, &qword_100E64C68);
      sub_1001781AC((uint64_t)v25, &qword_100E64C68);
      sub_1001524C8((uint64_t)v19, (void (*)(void))type metadata accessor for HomeAndWorkRefinementInput);
      sub_1001781AC((uint64_t)v15, &qword_100E64C68);
      uint64_t v38 = (uint64_t)v63;
      if (v45) {
        return sub_1001524C8(v38, (void (*)(void))type metadata accessor for HomeAndWorkRefinementInput);
      }
LABEL_9:
      uint64_t v39 = (uint64_t)v56;
      v58(v38);
      if (_s7Weather24LocationCompositionStateOwet_0(v39, 1, v55) == 1)
      {
        sub_1001781AC(v39, &qword_100E64C58);
      }
      else
      {
        uint64_t v40 = (uint64_t)v54;
        sub_1001522B4();
        uint64_t v41 = (uint64_t)v53;
        sub_10024E64C();
        char v42 = sub_100BBBA0C(v40, v41);
        sub_1001524C8(v41, (void (*)(void))type metadata accessor for HomeAndWorkRefinementViewModel);
        if ((v42 & 1) == 0)
        {
          if (qword_100E62828 != -1) {
            swift_once();
          }
          uint64_t v46 = type metadata accessor for Logger();
          sub_1002102B0(v46, (uint64_t)qword_100F51F80);
          uint64_t v47 = Logger.logObject.getter();
          os_log_type_t v48 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v47, v48))
          {
            uint64_t v49 = swift_slowAlloc();
            v65[0] = swift_slowAlloc();
            *(_DWORD *)uint64_t v49 = 136446466;
            uint64_t v64 = sub_10016414C(0xD00000000000001ALL, 0x8000000100C97270, v65);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            *(_WORD *)(v49 + 12) = 2082;
            uint64_t v64 = sub_10016414C(0xD00000000000001ELL, 0x8000000100C97290, v65);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            _os_log_impl((void *)&_mh_execute_header, v47, v48, "Selector observed model difference for %{public}s, %{public}s; views will update",
              (uint8_t *)v49,
              0x16u);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();
          }

          sub_10017DF08(&qword_100E64C70);
          uint64_t v50 = (uint64_t)v60;
          sub_100136460();
          sub_100136460();
          swift_storeEnumTagMultiPayload();
          uint64_t v51 = v35 + *(void *)(*(void *)v35 + 120);
          swift_beginAccess();
          sub_1001DF004(v50, v51, &qword_100E64C50);
          swift_endAccess();
          sub_10017DF08(&qword_100E64C78);
          sub_1001246C8((unint64_t *)&qword_100E64C80, &qword_100E64C78);
          ObservableObject<>.objectWillChange.getter();
          ObservableObjectPublisher.send()();
          swift_release();
          sub_1001524C8(v40, (void (*)(void))type metadata accessor for HomeAndWorkRefinementViewModel);
          return sub_1001524C8(v38, (void (*)(void))type metadata accessor for HomeAndWorkRefinementInput);
        }
        sub_1001524C8(v40, (void (*)(void))type metadata accessor for HomeAndWorkRefinementViewModel);
      }
      sub_10017DF08(&qword_100E64C70);
      uint64_t v43 = (uint64_t)v60;
      sub_100136460();
      sub_10024E64C();
      sub_1001524C8(v38, (void (*)(void))type metadata accessor for HomeAndWorkRefinementInput);
      swift_storeEnumTagMultiPayload();
      uint64_t v44 = v35 + *(void *)(*(void *)v35 + 120);
      swift_beginAccess();
      sub_1001DF004(v43, v44, &qword_100E64C50);
      return swift_endAccess();
    }
    sub_1001781AC((uint64_t)v22, &qword_100E64C68);
    sub_1001781AC((uint64_t)v25, &qword_100E64C68);
    sub_1001524C8((uint64_t)v19, (void (*)(void))type metadata accessor for HomeAndWorkRefinementInput);
    uint64_t v38 = (uint64_t)v63;
LABEL_8:
    sub_1001781AC((uint64_t)v15, &qword_100E64C60);
    goto LABEL_9;
  }
  sub_1001781AC((uint64_t)v22, &qword_100E64C68);
  sub_1001781AC((uint64_t)v25, &qword_100E64C68);
  int v37 = _s7Weather24LocationCompositionStateOwet_0(v36, 1, v28);
  uint64_t v38 = (uint64_t)v63;
  if (v37 != 1) {
    goto LABEL_8;
  }
  sub_1001781AC((uint64_t)v15, &qword_100E64C68);
  return sub_1001524C8(v38, (void (*)(void))type metadata accessor for HomeAndWorkRefinementInput);
}

uint64_t sub_100274094(void (*a1)(uint64_t), uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t *__return_ptr, void (*)(uint64_t)), uint64_t a6)
{
  void (*v78)(uint64_t *__return_ptr, void (*)(uint64_t));
  uint64_t v79;
  unsigned char *v80;
  uint64_t v81;
  uint64_t v82;
  void (*v83)(uint64_t);
  uint64_t v84;
  uint64_t v85[13];
  void v86[12];
  unsigned __int8 v87;
  uint64_t v88;
  void (*v89)(uint64_t *__return_ptr, void (*)(uint64_t));
  __int16 *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  unsigned __int8 v100;

  uint64_t v77 = a6;
  long long v78 = (void (*)(uint64_t *__return_ptr, void (*)(uint64_t)))a5;
  uint64_t v81 = a4;
  char v82 = a2;
  uint64_t v83 = a1;
  uint64_t v79 = sub_10017DF08(&qword_100E64C88);
  __chkstk_darwin(v79);
  char v80 = &v68[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = sub_10017DF08(&qword_100E64C90);
  __chkstk_darwin(v8);
  uint64_t v10 = &v68[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = sub_10017DF08(&qword_100E64C98);
  uint64_t v12 = __chkstk_darwin(v11 - 8);
  long long v76 = (__int16 *)&v68[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v16 = &v68[-v15];
  uint64_t v17 = __chkstk_darwin(v14);
  char v19 = &v68[-v18];
  __chkstk_darwin(v17);
  uint64_t v21 = &v68[-v20];
  uint64_t v22 = type metadata accessor for NotificationSettingsInput();
  uint64_t v23 = __chkstk_darwin(v22);
  id v25 = (__int16 *)&v68[-((v24 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v23);
  uint64_t v27 = (void (*)(uint64_t))&v68[-v26];
  v83(a3 + 64);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v21, 1, v22) == 1) {
    return sub_1001781AC((uint64_t)v21, &qword_100E64C98);
  }
  sub_1001522B4();
  sub_100136460();
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v19, 0, 1, v22);
  uint64_t v29 = v81;
  sub_1002593A0((uint64_t)v16);
  uint64_t v30 = (uint64_t)&v10[*(int *)(v8 + 48)];
  sub_10006DF38((uint64_t)v19, (uint64_t)v10, &qword_100E64C98);
  sub_10006DF38((uint64_t)v16, v30, &qword_100E64C98);
  uint64_t v31 = v29;
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v10, 1, v22) != 1)
  {
    uint64_t v32 = v76;
    sub_10006DF38((uint64_t)v10, (uint64_t)v76, &qword_100E64C98);
    if (_s7Weather24LocationCompositionStateOwet_0(v30, 1, v22) != 1)
    {
      sub_1001522B4();
      char v44 = sub_10035E534(v32, v25);
      sub_1001524C8((uint64_t)v25, (void (*)(void))type metadata accessor for NotificationSettingsInput);
      sub_1001781AC((uint64_t)v16, &qword_100E64C98);
      sub_1001781AC((uint64_t)v19, &qword_100E64C98);
      sub_1001524C8((uint64_t)v32, (void (*)(void))type metadata accessor for NotificationSettingsInput);
      sub_1001781AC((uint64_t)v10, &qword_100E64C98);
      if (v44) {
        goto LABEL_14;
      }
LABEL_9:
      v78(&v88, v27);
      int v33 = v100;
      if (v100 <= 0xFDu)
      {
        uint64_t v83 = v27;
        uint64_t v34 = v91;
        uint64_t v35 = v94;
        uint64_t v36 = v96;
        uint64_t v37 = v97;
        uint64_t v38 = v88;
        uint64_t v40 = v98;
        uint64_t v39 = v99;
        v86[0] = v88;
        v86[1] = v89;
        uint64_t v77 = v93;
        long long v78 = (void (*)(uint64_t *__return_ptr, void (*)(uint64_t)))v89;
        uint64_t v75 = v92;
        long long v76 = v90;
        v86[2] = v90;
        v86[3] = v91;
        v86[4] = v92;
        v86[5] = v93;
        v86[6] = v94;
        v86[7] = v95;
        char v82 = v95;
        v86[8] = v96;
        v86[9] = v97;
        v86[10] = v98;
        v86[11] = v99;
        uint64_t v87 = v100;
        sub_1002500F8();
        sub_1002764FC((uint64_t)v85, (uint64_t)&v88);
        BOOL v41 = sub_10082DFBC((uint64_t)v86, (uint64_t)&v88);
        sub_100276558((uint64_t)&v88, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1002765BC);
        if (!v41)
        {
          uint64_t v46 = v75;
          uint64_t v71 = v39;
          uint64_t v72 = v37;
          int v69 = v33;
          uint64_t v73 = v36;
          uint64_t v74 = v38;
          if (qword_100E62828 != -1) {
            swift_once();
          }
          uint64_t v47 = v46;
          uint64_t v70 = v35;
          uint64_t v48 = type metadata accessor for Logger();
          sub_1002102B0(v48, (uint64_t)qword_100F51F80);
          uint64_t v49 = Logger.logObject.getter();
          os_log_type_t v50 = static os_log_type_t.default.getter();
          uint64_t v51 = v40;
          if (os_log_type_enabled(v49, v50))
          {
            uint64_t v52 = swift_slowAlloc();
            v85[0] = swift_slowAlloc();
            *(_DWORD *)uint64_t v52 = 136446466;
            id v84 = sub_10016414C(0xD000000000000019, 0x8000000100C972B0, v85);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            *(_WORD *)(v52 + 12) = 2082;
            id v84 = sub_10016414C(0xD00000000000001DLL, 0x8000000100C972D0, v85);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            _os_log_impl((void *)&_mh_execute_header, v49, v50, "Selector observed model difference for %{public}s, %{public}s; views will update",
              (uint8_t *)v52,
              0x16u);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();
          }

          uint64_t v54 = v72;
          uint64_t v53 = v73;
          uint64_t v55 = sub_10017DF08(&qword_100E64CA0);
          uint64_t v56 = (uint64_t)v80;
          uint64_t v57 = (uint64_t)&v80[*(int *)(v55 + 48)];
          sub_100136460();
          sub_1002764FC((uint64_t)v86, v57);
          swift_storeEnumTagMultiPayload();
          uint64_t v58 = v81 + *(void *)(*(void *)v81 + 120);
          swift_beginAccess();
          unsigned __int8 v59 = v69;
          uint64_t v67 = v51;
          uint64_t v65 = v53;
          uint64_t v66 = v54;
          BOOL v60 = v76;
          uint64_t v61 = v34;
          uint64_t v62 = v34;
          uint64_t v63 = v77;
          uint64_t v79 = v51;
          uint64_t v64 = v70;
          sub_10027667C(v74, (uint64_t)v78, (uint64_t)v76, v62, v47, v77, v70, v82, v65, v66, v67, v71, v69);
          sub_1001DF004(v56, v58, &qword_100E64C88);
          swift_endAccess();
          sub_10017DF08(&qword_100E64CA8);
          sub_1001246C8((unint64_t *)&qword_100E64CB0, &qword_100E64CA8);
          ObservableObject<>.objectWillChange.getter();
          ObservableObjectPublisher.send()();
          swift_release();
          sub_100276740(v74, (uint64_t)v78, (uint64_t)v60, v61, v47, v63, v64, v82, v73, v72, v79, v71, v59);
          uint64_t v45 = (uint64_t)v83;
          return sub_1001524C8(v45, (void (*)(void))type metadata accessor for NotificationSettingsInput);
        }
        sub_100276740(v38, (uint64_t)v78, (uint64_t)v76, v34, v75, v77, v35, v82, v36, v37, v40, v39, v33);
        uint64_t v31 = v81;
        uint64_t v27 = v83;
      }
      sub_10017DF08(&qword_100E64CA0);
      uint64_t v42 = (uint64_t)v80;
      sub_100136460();
      sub_1002500F8();
      sub_1001524C8((uint64_t)v27, (void (*)(void))type metadata accessor for NotificationSettingsInput);
      swift_storeEnumTagMultiPayload();
      uint64_t v43 = v31 + *(void *)(*(void *)v31 + 120);
      swift_beginAccess();
      sub_1001DF004(v42, v43, &qword_100E64C88);
      return swift_endAccess();
    }
    sub_1001781AC((uint64_t)v16, &qword_100E64C98);
    sub_1001781AC((uint64_t)v19, &qword_100E64C98);
    sub_1001524C8((uint64_t)v32, (void (*)(void))type metadata accessor for NotificationSettingsInput);
LABEL_8:
    sub_1001781AC((uint64_t)v10, &qword_100E64C90);
    goto LABEL_9;
  }
  sub_1001781AC((uint64_t)v16, &qword_100E64C98);
  sub_1001781AC((uint64_t)v19, &qword_100E64C98);
  if (_s7Weather24LocationCompositionStateOwet_0(v30, 1, v22) != 1) {
    goto LABEL_8;
  }
  sub_1001781AC((uint64_t)v10, &qword_100E64C98);
LABEL_14:
  uint64_t v45 = (uint64_t)v27;
  return sub_1001524C8(v45, (void (*)(void))type metadata accessor for NotificationSettingsInput);
}

uint64_t sub_1002749F4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = j__swift_retain_0(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_100274A20@<X0>(void (*a1)(void *__return_ptr, uint64_t *)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t result = sub_100216A94(a1, a2, *(void (**)(uint64_t *__return_ptr))a3, *(void *)(a3 + 8), *(void *)(a3 + 16), *(void *)(a3 + 24), 0xD000000000000019, (void *)0x8000000100C96CD0);
  *a4 = result;
  return result;
}

uint64_t sub_100274A70@<X0>(uint64_t *a1@<X8>)
{
  return sub_100274A20(*(void (**)(void *__return_ptr, uint64_t *))(v1 + 16), *(void *)(v1 + 24), v1 + 32, a1);
}

uint64_t sub_100274A7C(uint64_t *a1, void (*a2)(uint64_t *))
{
  return sub_10025DA84(*a1, a2);
}

uint64_t sub_100274A84(uint64_t *a1)
{
  return sub_100274A7C(a1, *(void (**)(uint64_t *))(v1 + 16));
}

uint64_t sub_100274A90(uint64_t a1)
{
  return sub_1001A591C(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void, void))sub_10025FD50);
}

uint64_t sub_100274AAC()
{
  return sub_100210AF8((uint64_t (*)(void, void, void *, void, void, void))sub_100269120);
}

uint64_t sub_100274AC4()
{
  return sub_100BA19A4(*(uint64_t (**)(uint64_t))(v0 + 16));
}

void sub_100274AD0()
{
  sub_10018AFA0();
  sub_1001888D0();
  sub_10020FA74(v0, v1, v2, v3, v4, v5, v6, 0xD000000000000019, v7);
}

uint64_t sub_100274B10()
{
  swift_release();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 24);

  return swift_deallocObject();
}

uint64_t sub_100274B50(void (*a1)(void *), uint64_t a2, void (**a3)(void *__return_ptr, uint64_t))
{
  return sub_10025BA9C(a1, a2, *a3);
}

uint64_t sub_100274B64()
{
  return sub_100274B50(*(void (**)(void *))(v0 + 16), *(void *)(v0 + 24), (void (**)(void *__return_ptr, uint64_t))(v0 + 32));
}

uint64_t sub_100274B70(uint64_t a1)
{
  return sub_10025DC40(a1, *(void (**)(uint64_t))(v1 + 16));
}

uint64_t sub_100274B7C(uint64_t a1)
{
  return sub_1001A591C(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void, void))sub_100260408);
}

uint64_t sub_100274B98()
{
  return sub_100210AF8((uint64_t (*)(void, void, void *, void, void, void))sub_100269784);
}

void sub_100274BB4()
{
  sub_10018AFA0();
  sub_10017C720();
  sub_10020FA74(v0, v1, v2, v3, v4, 0x617465446E6F6F4DLL, 0xEF7475706E496C69, 0xD000000000000013, v5);
}

uint64_t sub_100274C0C@<X0>(void (*a1)(void *__return_ptr, uint64_t *)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t result = sub_100216A94(a1, a2, *(void (**)(uint64_t *__return_ptr))a3, *(void *)(a3 + 8), *(void *)(a3 + 16), *(void *)(a3 + 24), 0xD000000000000016, (void *)0x8000000100C96DE0);
  *a4 = result;
  return result;
}

uint64_t sub_100274C5C@<X0>(uint64_t *a1@<X8>)
{
  return sub_100274C0C(*(void (**)(void *__return_ptr, uint64_t *))(v1 + 16), *(void *)(v1 + 24), v1 + 32, a1);
}

void *sub_100274C68@<X0>(uint64_t *a1@<X0>, void *(*a2)(uint64_t *__return_ptr, uint64_t *)@<X1>, uint64_t a3@<X8>)
{
  return sub_10025DE00(*a1, a2, a3);
}

void *sub_100274C70@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100274C68(a1, *(void *(**)(uint64_t *__return_ptr, uint64_t *))(v2 + 16), a2);
}

uint64_t sub_100274C7C(uint64_t a1)
{
  return sub_1001A591C(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void, void))sub_100260AC0);
}

uint64_t sub_100274C98()
{
  return sub_100210AF8((uint64_t (*)(void, void, void *, void, void, void))sub_10026A0D4);
}

void sub_100274CB4()
{
  sub_10018AFA0();
  sub_1001888D0();
  sub_10020FA74(v0, v1, v2, v3, v4, v5, v6, 0xD000000000000016, v7);
}

uint64_t sub_100274CF4(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, char a14)
{
  if (a14 != 2)
  {
    if (a14 != 1)
    {
      if (!a14)
      {
        swift_release();
        return swift_release();
      }
      return result;
    }
    swift_release();
    uint64_t result = a2;
  }

  return sub_100274E38(result);
}

uint64_t sub_100274E38(uint64_t a1)
{
  if (a1 < 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    return swift_release();
  }
}

uint64_t sub_100274EB4(uint64_t a1)
{
  if ((~a1 & 0xF000000000000006) != 0) {
    return sub_100274EDC(a1);
  }
  return a1;
}

uint64_t sub_100274EDC(uint64_t a1)
{
  if (a1 < 0)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  else
  {
    return swift_retain();
  }
}

uint64_t sub_100274F58(uint64_t a1)
{
  if ((~a1 & 0xF000000000000006) != 0) {
    return sub_100274E38(a1);
  }
  return a1;
}

uint64_t sub_100274F80(void (*a1)(void *), uint64_t a2, void (**a3)(void *__return_ptr, uint64_t))
{
  return sub_10025BC80(a1, a2, *a3);
}

uint64_t sub_100274F94()
{
  return sub_100274F80(*(void (**)(void *))(v0 + 16), *(void *)(v0 + 24), (void (**)(void *__return_ptr, uint64_t))(v0 + 32));
}

uint64_t sub_100274FA0(uint64_t a1)
{
  return sub_10025DF60(a1, *(void (**)(uint64_t))(v1 + 16));
}

uint64_t sub_100274FA8()
{
  swift_weakDestroy();

  return swift_deallocObject();
}

uint64_t sub_100274FE4(uint64_t a1)
{
  return sub_1001A591C(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void, void))sub_100261178);
}

uint64_t sub_100275000()
{
  return sub_100210AF8((uint64_t (*)(void, void, void *, void, void, void))sub_10026AA0C);
}

uint64_t sub_100275018()
{
  swift_release();

  return swift_deallocObject();
}

void sub_100275054()
{
  sub_100176CE8();
  sub_10017C720();
  sub_10012B900(v0, v1, v2, v3, v4, v5, (uint64_t)"ConditionDetailInput", v6);
}

uint64_t sub_100275098@<X0>(void (*a1)(uint64_t *__return_ptr, uint64_t *)@<X0>, void (**a2)(uint64_t *__return_ptr)@<X2>, uint64_t a3@<X8>)
{
  return sub_10025BE58(a1, *a2, a3);
}

uint64_t sub_1002750AC@<X0>(uint64_t a1@<X8>)
{
  return sub_100275098(*(void (**)(uint64_t *__return_ptr, uint64_t *))(v1 + 16), (void (**)(uint64_t *__return_ptr))(v1 + 32), a1);
}

uint64_t sub_1002750B8(_OWORD *a1, void (*a2)(_OWORD *))
{
  long long v2 = a1[1];
  v4[0] = *a1;
  v4[1] = v2;
  v5[0] = a1[2];
  *(_OWORD *)((char *)v5 + 10) = *(_OWORD *)((char *)a1 + 42);
  return sub_10025E114(v4, a2);
}

uint64_t sub_1002750F4(_OWORD *a1)
{
  return sub_1002750B8(a1, *(void (**)(_OWORD *))(v1 + 16));
}

uint64_t sub_100275100(uint64_t a1)
{
  return sub_1001A591C(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void, void))sub_100261830);
}

uint64_t sub_10027511C()
{
  return sub_100210AF8((uint64_t (*)(void, void, void *, void, void, void))sub_10026B360);
}

void sub_100275138()
{
  sub_100176CE8();
  sub_10017C720();
  sub_10019AA18(v0, v1, v2, v3, v4, v5, (uint64_t)"UnitsConfigurationInput", v6);
}

uint64_t sub_10027517C(uint64_t a1, char a2)
{
  if (a2 == 1) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_100275190(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 64);
  Swift::String v3 = *(void **)(a1 + 72);
  uint64_t v4 = *(void **)(a1 + 80);
  uint64_t v5 = *(void **)(a1 + 88);
  unint64_t v6 = *(void **)(a1 + 96);
  unint64_t v7 = *(void **)(a1 + 104);
  uint64_t v8 = *(void *)(a1 + 112);
  __int16 v9 = *(_WORD *)(a1 + 120);
  sub_100275224(*(void **)a1, *(void **)(a1 + 8), *(void **)(a1 + 16), *(void **)(a1 + 24), *(void **)(a1 + 32), *(void **)(a1 + 40), *(void *)(a1 + 48), *(_WORD *)(a1 + 56));
  sub_100275224(v2, v3, v4, v5, v6, v7, v8, v9);
  return a1;
}

void *sub_100275224(void *result, void *a2, void *a3, void *a4, void *a5, void *a6, uint64_t a7, char a8)
{
  if (result != (void *)1)
  {

    return (void *)sub_1002752B0(a7, a8);
  }
  return result;
}

uint64_t sub_1002752B0(uint64_t a1, char a2)
{
  if (a2 == 1) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1002752C4(uint64_t result, void *a2, void *a3, void *a4, void *a5, void *a6, uint64_t a7, char a8)
{
  if (result != 1)
  {
    uint64_t v15 = (void *)result;
    id v16 = a6;
    id v17 = v15;
    id v18 = a2;
    id v19 = a3;
    id v20 = a4;
    id v21 = a5;
    return sub_10027517C(a7, a8);
  }
  return result;
}

uint64_t sub_100275350(void (*a1)(void *), uint64_t a2, void (**a3)(void *__return_ptr, uint64_t))
{
  return sub_10025BFD8(a1, a2, *a3);
}

uint64_t sub_100275364()
{
  return sub_100275350(*(void (**)(void *))(v0 + 16), *(void *)(v0 + 24), (void (**)(void *__return_ptr, uint64_t))(v0 + 32));
}

uint64_t sub_100275370(uint64_t a1)
{
  return sub_10025E2E0(a1, *(void (**)(uint64_t))(v1 + 16));
}

uint64_t sub_10027537C(uint64_t a1)
{
  return sub_1001A591C(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void, void))sub_100261EE8);
}

uint64_t sub_100275398()
{
  return sub_100210AF8((uint64_t (*)(void, void, void *, void, void, void))sub_10026BD04);
}

void sub_1002753B4()
{
  sub_10018AFA0();
  sub_10017C720();
  sub_10020FA74(v0, v1, v2, v3, v4, 0x656B636950796144, 0xEE007475706E4972, 0xD000000000000012, v5);
}

uint64_t sub_10027540C@<X0>(void (*a1)(void *__return_ptr, uint64_t *)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t result = sub_100216A94(a1, a2, *(void (**)(uint64_t *__return_ptr))a3, *(void *)(a3 + 8), *(void *)(a3 + 16), *(void *)(a3 + 24), 0xD000000000000010, (void *)0x8000000100C96EA0);
  *a4 = result;
  return result;
}

uint64_t sub_10027545C@<X0>(uint64_t *a1@<X8>)
{
  return sub_10027540C(*(void (**)(void *__return_ptr, uint64_t *))(v1 + 16), *(void *)(v1 + 24), v1 + 32, a1);
}

uint64_t sub_100275468(uint64_t *a1, void (*a2)(uint64_t *, __n128))
{
  return sub_10025E4A0(*a1, a2);
}

uint64_t sub_100275470(uint64_t *a1)
{
  return sub_100275468(a1, *(void (**)(uint64_t *, __n128))(v1 + 16));
}

uint64_t sub_10027547C(uint64_t a1)
{
  return sub_1001A591C(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void, void))sub_1002625A0);
}

uint64_t sub_100275498()
{
  return sub_100210AF8((uint64_t (*)(void, void, void *, void, void, void))sub_10026C700);
}

void sub_1002754B4()
{
  sub_10018AFA0();
  sub_1001888D0();
  sub_10020FA74(v0, v1, v2, v3, v4, v5, v6, 0xD000000000000010, v7);
}

uint64_t sub_1002754F4(void (*a1)(void *), uint64_t a2, void (**a3)(void *__return_ptr, __n128))
{
  return sub_10025C1BC(a1, a2, *a3);
}

uint64_t sub_100275508()
{
  return sub_1002754F4(*(void (**)(void *))(v0 + 16), *(void *)(v0 + 24), (void (**)(void *__return_ptr, __n128))(v0 + 32));
}

uint64_t sub_100275514(uint64_t a1)
{
  return sub_10025E65C(a1, *(void (**)(uint64_t, __n128))(v1 + 16));
}

uint64_t sub_100275520(uint64_t a1)
{
  return sub_1001A591C(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void, void))sub_100262C58);
}

uint64_t sub_10027553C()
{
  return sub_100210AF8((uint64_t (*)(void, void, void *, void, void, void))sub_10026CD64);
}

void sub_100275558()
{
  sub_10018469C();
  sub_1001870A8();
  sub_10017C720();
  sub_1001D135C();
  sub_10020FA74(v0, v1, v2, v3, v4, 0xD000000000000010, v5, v6, v7);
}

uint64_t sub_1002755A4(void (*a1)(uint64_t *__return_ptr, void *), uint64_t a2, void (**a3)(void *__return_ptr))
{
  return sub_10025C394(a1, a2, *a3);
}

uint64_t sub_1002755B8()
{
  return sub_1002755A4(*(void (**)(uint64_t *__return_ptr, void *))(v0 + 16), *(void *)(v0 + 24), (void (**)(void *__return_ptr))(v0 + 32));
}

uint64_t sub_1002755C4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_10025E810(*(void (**)(void *__return_ptr))(v1 + 16));
  *a1 = result & 1;
  return result;
}

uint64_t sub_1002755F8(uint64_t a1)
{
  return sub_1001A591C(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void, void))sub_100263310);
}

uint64_t sub_100275614()
{
  return sub_100210AF8((uint64_t (*)(void, void, void *, void, void, void))sub_10026D6B8);
}

void sub_100275630()
{
  sub_1001870A8();
  sub_10017C720();
  sub_100109344(v0, v1, v2, v3, v4, v5, (uint64_t)"GeneralConfigurationInput", v6);
}

uint64_t sub_100275674(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if (!a5)
  {
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1002756BC(void (*a1)(void *), uint64_t a2, void (**a3)(void *__return_ptr, uint64_t))
{
  return sub_10025C4D8(a1, a2, *a3);
}

uint64_t sub_1002756D0()
{
  return sub_1002756BC(*(void (**)(void *))(v0 + 16), *(void *)(v0 + 24), (void (**)(void *__return_ptr, uint64_t))(v0 + 32));
}

uint64_t sub_1002756DC(uint64_t a1)
{
  return sub_10025E928(a1, *(void (**)(uint64_t))(v1 + 16));
}

uint64_t sub_1002756E8(uint64_t a1)
{
  return sub_1001A591C(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void, void))sub_1002639C8);
}

uint64_t sub_100275704()
{
  return sub_100210AF8((uint64_t (*)(void, void, void *, void, void, void))sub_10026D9C0);
}

void sub_100275720()
{
  sub_100176CE8();
  sub_10017C720();
  sub_10012B900(v0, v1, v2, v3, v4, v5, (uint64_t)"LocationPreviewInput", v6);
}

uint64_t sub_100275764(void (*a1)(void *), uint64_t a2, void (**a3)(void *__return_ptr, uint64_t))
{
  return sub_10025C6B0(a1, a2, *a3);
}

uint64_t sub_100275778()
{
  return sub_100275764(*(void (**)(void *))(v0 + 16), *(void *)(v0 + 24), (void (**)(void *__return_ptr, uint64_t))(v0 + 32));
}

uint64_t sub_100275784(uint64_t a1)
{
  return sub_10025EADC(a1, *(void (**)(uint64_t))(v1 + 16));
}

uint64_t sub_100275790(uint64_t a1)
{
  return sub_1001A591C(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void, void))sub_100264080);
}

uint64_t sub_1002757AC()
{
  return sub_100210AF8((uint64_t (*)(void, void, void *, void, void, void))sub_10026E314);
}

void sub_1002757C8()
{
  sub_1001870A8();
  sub_10017C720();
  sub_1001CA768(v0, v1, v2, v3, v4, v5, (uint64_t)"InteractiveMapInput", v6);
}

uint64_t sub_10027580C(void (*a1)(void *), uint64_t a2, void (**a3)(void *__return_ptr, uint64_t))
{
  return sub_10025C888(a1, a2, *a3);
}

uint64_t sub_100275820()
{
  return sub_10027580C(*(void (**)(void *))(v0 + 16), *(void *)(v0 + 24), (void (**)(void *__return_ptr, uint64_t))(v0 + 32));
}

uint64_t sub_10027582C(uint64_t a1)
{
  return sub_10025EC90(a1, *(void (**)(uint64_t))(v1 + 16));
}

uint64_t sub_100275838(uint64_t a1)
{
  return sub_1001A591C(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void, void))sub_100264738);
}

uint64_t sub_100275854()
{
  return sub_100210AF8((uint64_t (*)(void, void, void *, void, void, void))sub_10026EC68);
}

void sub_100275870()
{
  sub_10018469C();
  sub_1001870A8();
  sub_10017C720();
  sub_1001D135C();
  sub_10020FA74(v0, v1, v2, v3, v4, 0xD000000000000020, v5, v6, v7);
}

uint64_t sub_1002758FC(void (*a1)(void *), uint64_t a2, void (**a3)(void *__return_ptr, __n128))
{
  return sub_10025CA60(a1, a2, *a3);
}

uint64_t sub_100275910()
{
  return sub_1002758FC(*(void (**)(void *))(v0 + 16), *(void *)(v0 + 24), (void (**)(void *__return_ptr, __n128))(v0 + 32));
}

uint64_t sub_10027591C(uint64_t a1)
{
  return sub_10025EE44(a1, *(void (**)(uint64_t, __n128))(v1 + 16));
}

uint64_t sub_100275928(uint64_t a1)
{
  return sub_1001A591C(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void, void))sub_100264DF0);
}

uint64_t sub_100275944()
{
  return sub_100210AF8((uint64_t (*)(void, void, void *, void, void, void))sub_10026F5BC);
}

void sub_100275960()
{
  sub_10020FA74(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void (**)(uint64_t))(v0 + 40), *(void *)(v0 + 48), 0x75706E497473694CLL, 0xE900000000000074, 0x776569567473694CLL, 0xED00006C65646F4DLL);
}

uint64_t sub_1002759C8@<X0>(void (*a1)(void *__return_ptr, uint64_t *)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t result = sub_100216A94(a1, a2, *(void (**)(uint64_t *__return_ptr))a3, *(void *)(a3 + 8), *(void *)(a3 + 16), *(void *)(a3 + 24), 0x6956686372616553, (void *)0xEF6C65646F4D7765);
  *a4 = result;
  return result;
}

uint64_t sub_100275A20@<X0>(uint64_t *a1@<X8>)
{
  return sub_1002759C8(*(void (**)(void *__return_ptr, uint64_t *))(v1 + 16), *(void *)(v1 + 24), v1 + 32, a1);
}

void *sub_100275A2C@<X0>(uint64_t *a1@<X0>, void *(*a2)(_OWORD *__return_ptr, uint64_t *)@<X1>, uint64_t a3@<X8>)
{
  return sub_10025F000(*a1, a2, a3);
}

void *sub_100275A34@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100275A2C(a1, *(void *(**)(_OWORD *__return_ptr, uint64_t *))(v2 + 16), a2);
}

uint64_t sub_100275A40(uint64_t a1)
{
  return sub_1001A591C(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void, void))sub_1002654A8);
}

uint64_t sub_100275A5C()
{
  return sub_100210AF8((uint64_t (*)(void, void, void *, void, void, void))sub_10026FF0C);
}

void sub_100275A78()
{
  sub_10018AFA0();
  sub_1001888D0();
  sub_10020FA74(v0, v1, v2, v3, v4, v5, v6, 0x6956686372616553, v7);
}

uint64_t sub_100275AC0(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, char a14, char a15)
{
  uint64_t v15 = a6;
  uint64_t v16 = a5;
  uint64_t v17 = a4;
  uint64_t v18 = a3;
  uint64_t v19 = a2;
  uint64_t v20 = a13;
  uint64_t v21 = a11;
  uint64_t v22 = a9;
  if (a15 != 2)
  {
    if (a15 != 1)
    {
      if (!a15)
      {
        swift_release();
        return swift_release();
      }
      return result;
    }
    uint64_t v23 = a7;
    uint64_t v24 = a8;
    swift_release();
    LOBYTE(a13) = a14;
    a11 = a12;
    a12 = v20;
    a9 = a10;
    a10 = v21;
    uint64_t result = v19;
    a2 = v18;
    a3 = v17;
    a4 = v16;
    a5 = v15;
    a6 = v23;
    a7 = v24;
    a8 = v22;
  }

  return sub_100275C08(result, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13);
}

uint64_t sub_100275C08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13)
{
  if (!a13)
  {
LABEL_5:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_6;
  }
  if (a13 != 2)
  {
    if (a13 != 1) {
      return result;
    }
    swift_bridgeObjectRelease();
    goto LABEL_5;
  }
LABEL_6:
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_100275CC0(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_100275D1C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unsigned __int8 a13)
{
  if (a13 != 255) {
    return sub_100275D44(result, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13);
  }
  return result;
}

uint64_t sub_100275D44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13)
{
  if (!a13)
  {
LABEL_5:
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    goto LABEL_6;
  }
  if (a13 != 2)
  {
    if (a13 != 1) {
      return result;
    }
    swift_bridgeObjectRetain();
    goto LABEL_5;
  }
LABEL_6:
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t sub_100275DF0(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unsigned __int8 a13)
{
  if (a13 != 255) {
    return sub_100275C08(result, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13);
  }
  return result;
}

uint64_t sub_100275E18(void (*a1)(void *), uint64_t a2, void (**a3)(void *__return_ptr, uint64_t))
{
  return sub_10025CC40(a1, a2, *a3);
}

uint64_t sub_100275E2C()
{
  return sub_100275E18(*(void (**)(void *))(v0 + 16), *(void *)(v0 + 24), (void (**)(void *__return_ptr, uint64_t))(v0 + 32));
}

uint64_t sub_100275E38@<X0>(uint64_t a1@<X0>, void (*a2)(void *__return_ptr)@<X1>, uint64_t a3@<X8>)
{
  uint64_t result = sub_10025F144(a1, a2);
  *(_WORD *)a3 = result;
  *(unsigned char *)(a3 + 2) = BYTE2(result) & 1;
  *(unsigned char *)(a3 + 3) = BYTE3(result);
  return result;
}

uint64_t sub_100275E78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100275E38(a1, *(void (**)(void *__return_ptr))(v2 + 16), a2);
}

uint64_t sub_100275E84(uint64_t a1)
{
  return sub_1001A591C(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void, void))sub_100265B60);
}

uint64_t sub_100275EA0()
{
  return sub_100210AF8((uint64_t (*)(void, void, void *, void, void, void))sub_1002704FC);
}

void sub_100275EBC()
{
  sub_100176CE8();
  sub_10017C720();
  sub_10019AA18(v0, v1, v2, v3, v4, v5, (uint64_t)"NotificationsOptInInput", v6);
}

uint64_t sub_100275F10(void (*a1)(void *), uint64_t a2, void (**a3)(void *__return_ptr, uint64_t))
{
  return sub_10025CE18(a1, a2, *a3);
}

uint64_t sub_100275F24()
{
  return sub_100275F10(*(void (**)(void *))(v0 + 16), *(void *)(v0 + 24), (void (**)(void *__return_ptr, uint64_t))(v0 + 32));
}

uint64_t sub_100275F30(uint64_t a1)
{
  return sub_10025F260(a1, *(void (**)(uint64_t))(v1 + 16));
}

uint64_t sub_100275F3C(uint64_t a1)
{
  return sub_1001A591C(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void, void))sub_100266218);
}

uint64_t sub_100275F58()
{
  return sub_100210AF8((uint64_t (*)(void, void, void *, void, void, void))sub_100270D08);
}

void sub_100275F74()
{
  sub_1001870A8();
  sub_10017C720();
  sub_1001CA768(v0, v1, v2, v3, v4, v5, (uint64_t)"AveragesDetailInput", v6);
}

uint64_t sub_100275FB8(void (*a1)(void *), uint64_t a2, void (**a3)(void *__return_ptr, uint64_t))
{
  return sub_10025CFF0(a1, a2, *a3);
}

uint64_t sub_100275FCC()
{
  return sub_100275FB8(*(void (**)(void *))(v0 + 16), *(void *)(v0 + 24), (void (**)(void *__return_ptr, uint64_t))(v0 + 32));
}

uint64_t sub_100275FD8(uint64_t a1)
{
  return sub_10025F414(a1, *(void (**)(uint64_t))(v1 + 16));
}

uint64_t sub_100275FE4(uint64_t a1)
{
  return sub_1001A591C(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void, void))sub_1002668D0);
}

uint64_t sub_100276000()
{
  return sub_100210AF8((uint64_t (*)(void, void, void *, void, void, void))sub_1002716CC);
}

void sub_10027601C()
{
  sub_1001870A8();
  sub_10017C720();
  sub_10011BFB8(v0, v1, v2, v3, v4, v5, (uint64_t)"MoonScrubberInput", v6);
}

uint64_t sub_100276060(void (*a1)(void *), uint64_t a2, void (**a3)(void *__return_ptr, uint64_t))
{
  return sub_10025D1C8(a1, a2, *a3);
}

uint64_t sub_100276074()
{
  return sub_100276060(*(void (**)(void *))(v0 + 16), *(void *)(v0 + 24), (void (**)(void *__return_ptr, uint64_t))(v0 + 32));
}

uint64_t sub_100276080(uint64_t a1)
{
  return sub_10025F5C8(a1, *(void (**)(uint64_t))(v1 + 16));
}

uint64_t sub_10027608C(uint64_t a1)
{
  return sub_1001A591C(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void, void))sub_100266F88);
}

uint64_t sub_1002760A8()
{
  return sub_100210AF8((uint64_t (*)(void, void, void *, void, void, void))sub_100272020);
}

void sub_1002760C4()
{
  sub_10018469C();
  sub_1001870A8();
  sub_10017C720();
  sub_1001D135C();
  sub_10020FA74(v0, v1, v2, v3, v4, 0xD000000000000018, v5, v6, v7);
}

uint64_t sub_100276110@<X0>(void (*a1)(void *__return_ptr, uint64_t *)@<X0>, uint64_t a2@<X1>, void (**a3)(uint64_t *__return_ptr)@<X2>, uint64_t a4@<X8>)
{
  uint64_t result = sub_10025D3A0(a1, a2, *a3);
  *(void *)a4 = result;
  *(void *)(a4 + 8) = v6;
  *(unsigned char *)(a4 + 16) = v7 & 1;
  return result;
}

uint64_t sub_100276150@<X0>(uint64_t a1@<X8>)
{
  return sub_100276110(*(void (**)(void *__return_ptr, uint64_t *))(v1 + 16), *(void *)(v1 + 24), (void (**)(uint64_t *__return_ptr))(v1 + 32), a1);
}

uint64_t sub_10027615C@<X0>(uint64_t a1@<X0>, void (*a2)(void *__return_ptr, void *)@<X1>, uint64_t a3@<X8>)
{
  uint64_t result = sub_10025F77C(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16), a2);
  *(void *)a3 = result;
  *(void *)(a3 + 8) = v5;
  *(unsigned char *)(a3 + 16) = v6 & 1;
  return result;
}

uint64_t sub_1002761A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10027615C(a1, *(void (**)(void *__return_ptr, void *))(v2 + 16), a2);
}

uint64_t sub_1002761AC(uint64_t a1)
{
  return sub_1001A591C(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void, void))sub_100267640);
}

uint64_t sub_1002761C8()
{
  return sub_100210AF8((uint64_t (*)(void, void, void *, void, void, void))sub_100272974);
}

void sub_1002761E4()
{
  sub_10018AFA0();
  sub_10017C720();
  sub_1001D1500(v0, v1, v2, v3, v4, 0x756E654D7473694CLL, v5, v6, v7);
}

void sub_100276224(void *a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, char a7)
{
  if (a7 != 2)
  {
    if (a7 != 1)
    {
      if (!a7)
      {
        swift_release();
        swift_release();
      }
      return;
    }

    a1 = a4;
  }
}

uint64_t sub_1002762AC(void (*a1)(void *), uint64_t a2, void (**a3)(void *__return_ptr, uint64_t))
{
  return sub_10025D4FC(a1, a2, *a3);
}

uint64_t sub_1002762C0()
{
  return sub_1002762AC(*(void (**)(void *))(v0 + 16), *(void *)(v0 + 24), (void (**)(void *__return_ptr, uint64_t))(v0 + 32));
}

uint64_t sub_1002762CC(uint64_t a1)
{
  return sub_10025F8B4(a1, *(void (**)(uint64_t))(v1 + 16));
}

uint64_t sub_1002762D8(uint64_t a1)
{
  return sub_1001A591C(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void, void))sub_100267CF8);
}

uint64_t sub_1002762F4()
{
  return sub_100210AF8((uint64_t (*)(void, void, void *, void, void, void))sub_100272DDC);
}

void sub_100276310()
{
  sub_1001870A8();
  sub_10017C720();
  sub_10011BFB8(v0, v1, v2, v3, v4, v5, (uint64_t)"MoonCalendarInput", v6);
}

uint64_t sub_100276354(void (*a1)(void *), uint64_t a2, void (**a3)(void *__return_ptr, uint64_t))
{
  return sub_10025D6D4(a1, a2, *a3);
}

uint64_t sub_100276368()
{
  return sub_100276354(*(void (**)(void *))(v0 + 16), *(void *)(v0 + 24), (void (**)(void *__return_ptr, uint64_t))(v0 + 32));
}

uint64_t sub_100276374(uint64_t a1)
{
  return sub_10025FA68(a1, *(void (**)(uint64_t))(v1 + 16));
}

uint64_t sub_100276380(uint64_t a1)
{
  return sub_1001A591C(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void, void))sub_1002683B0);
}

uint64_t sub_10027639C()
{
  return sub_100210AF8((uint64_t (*)(void, void, void *, void, void, void))sub_100273740);
}

void sub_1002763B8()
{
  sub_10018469C();
  sub_1001870A8();
  sub_10017C720();
  sub_1001D135C();
  sub_10020FA74(v0, v1, v2, v3, v4, 0xD00000000000001ALL, v5, v6, v7);
}

uint64_t sub_100276404(void (*a1)(void *), uint64_t a2, void (**a3)(void *__return_ptr, uint64_t))
{
  return sub_10025D8AC(a1, a2, *a3);
}

uint64_t sub_100276418()
{
  return sub_100276404(*(void (**)(void *))(v0 + 16), *(void *)(v0 + 24), (void (**)(void *__return_ptr, uint64_t))(v0 + 32));
}

void *sub_100276424@<X0>(uint64_t a1@<X8>)
{
  return sub_10025FC1C(*(void *(**)(_OWORD *__return_ptr))(v1 + 16), a1);
}

uint64_t sub_100276430()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100276480(uint64_t a1)
{
  return sub_1001A591C(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void, void))sub_100268A68);
}

uint64_t sub_10027649C()
{
  return sub_100210AF8((uint64_t (*)(void, void, void *, void, void, void))sub_100274094);
}

void sub_1002764B8()
{
  sub_1001870A8();
  sub_10017C720();
  sub_100109344(v0, v1, v2, v3, v4, v5, (uint64_t)"NotificationSettingsInput", v6);
}

uint64_t sub_1002764FC(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_100276558(uint64_t a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, char))
{
  char v4 = *(unsigned char *)(a1 + 96);
  a2(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), v4);
  return a1;
}

uint64_t sub_1002765BC(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13)
{
  if ((a13 & 0xC0) == 0x40) {
    return sub_1002765EC(result, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13 & 1);
  }
  return result;
}

uint64_t sub_1002765EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13)
{
  if (a13) {
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_10027667C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13)
{
  if ((a13 & 0xC0) == 0x40) {
    return sub_1002766AC(result, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13 & 1);
  }
  return result;
}

uint64_t sub_1002766AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13)
{
  if (a13) {
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t sub_100276740(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unsigned __int8 a13)
{
  if (a13 <= 0xFDu) {
    return sub_1002765BC(result, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13);
  }
  return result;
}

char *sub_100276A2C(char *a1, char *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v17 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = (char *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for TimeZone();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    __int16 v9 = &a1[v8];
    uint64_t v10 = &a2[v8];
    uint64_t v11 = type metadata accessor for Date();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    v12(v9, v10, v11);
    v12(&a1[a3[6]], &a2[a3[6]], v11);
    v12(&a1[a3[7]], &a2[a3[7]], v11);
    uint64_t v13 = a3[8];
    uint64_t v14 = &a1[v13];
    uint64_t v15 = &a2[v13];
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&a2[v13], 1, v11))
    {
      uint64_t v16 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
      memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
    }
    else
    {
      v12(v14, v15, v11);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v14, 0, 1, v11);
    }
    uint64_t v18 = a3[10];
    *(void *)&a1[a3[9]] = *(void *)&a2[a3[9]];
    uint64_t v19 = &a1[v18];
    uint64_t v20 = &a2[v18];
    uint64_t v21 = type metadata accessor for MoonPhase.Hemisphere();
    uint64_t v22 = *(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16);
    swift_bridgeObjectRetain();
    v22(v19, v20, v21);
  }
  return a1;
}

uint64_t sub_100276C58(uint64_t a1, int *a2)
{
  uint64_t v4 = type metadata accessor for TimeZone();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + a2[5];
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
  v7(v5, v6);
  v7(a1 + a2[6], v6);
  v7(a1 + a2[7], v6);
  uint64_t v8 = a1 + a2[8];
  if (!_s7Weather24LocationCompositionStateOwet_0(v8, 1, v6)) {
    v7(v8, v6);
  }
  swift_bridgeObjectRelease();
  uint64_t v9 = a1 + a2[10];
  uint64_t v10 = type metadata accessor for MoonPhase.Hemisphere();
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8);

  return v11(v9, v10);
}

uint64_t sub_100276DC0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for TimeZone();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = type metadata accessor for Date();
  uint64_t v11 = *(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 16);
  v11(v8, v9, v10);
  v11((void *)(a1 + a3[6]), (const void *)(a2 + a3[6]), v10);
  v11((void *)(a1 + a3[7]), (const void *)(a2 + a3[7]), v10);
  uint64_t v12 = a3[8];
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (const void *)(a2 + v12);
  if (_s7Weather24LocationCompositionStateOwet_0(a2 + v12, 1, v10))
  {
    uint64_t v15 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    v11(v13, v14, v10);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v13, 0, 1, v10);
  }
  uint64_t v16 = a3[10];
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  uint64_t v19 = type metadata accessor for MoonPhase.Hemisphere();
  uint64_t v20 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 16);
  swift_bridgeObjectRetain();
  v20(v17, v18, v19);
  return a1;
}

uint64_t sub_100276F9C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for TimeZone();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = type metadata accessor for Date();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void (**)(void *, const void *, uint64_t))(v11 + 24);
  v12(v8, v9, v10);
  v12((void *)(a1 + a3[6]), (const void *)(a2 + a3[6]), v10);
  v12((void *)(a1 + a3[7]), (const void *)(a2 + a3[7]), v10);
  uint64_t v13 = a3[8];
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (const void *)(a2 + v13);
  int v16 = _s7Weather24LocationCompositionStateOwet_0(a1 + v13, 1, v10);
  int v17 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v15, 1, v10);
  if (!v16)
  {
    if (!v17)
    {
      v12(v14, v15, v10);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v14, v10);
    goto LABEL_6;
  }
  if (v17)
  {
LABEL_6:
    uint64_t v18 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v14, v15, v10);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v14, 0, 1, v10);
LABEL_7:
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v19 = a3[10];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = type metadata accessor for MoonPhase.Hemisphere();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 24))(v20, v21, v22);
  return a1;
}

uint64_t sub_1002771F4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for TimeZone();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = type metadata accessor for Date();
  uint64_t v11 = *(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 32);
  v11(v8, v9, v10);
  v11((void *)(a1 + a3[6]), (const void *)(a2 + a3[6]), v10);
  v11((void *)(a1 + a3[7]), (const void *)(a2 + a3[7]), v10);
  uint64_t v12 = a3[8];
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (const void *)(a2 + v12);
  if (_s7Weather24LocationCompositionStateOwet_0(a2 + v12, 1, v10))
  {
    uint64_t v15 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    v11(v13, v14, v10);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v13, 0, 1, v10);
  }
  uint64_t v16 = a3[10];
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  uint64_t v19 = type metadata accessor for MoonPhase.Hemisphere();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 32))(v17, v18, v19);
  return a1;
}

uint64_t sub_1002773C4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for TimeZone();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = type metadata accessor for Date();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void (**)(void *, const void *, uint64_t))(v11 + 40);
  v12(v8, v9, v10);
  v12((void *)(a1 + a3[6]), (const void *)(a2 + a3[6]), v10);
  v12((void *)(a1 + a3[7]), (const void *)(a2 + a3[7]), v10);
  uint64_t v13 = a3[8];
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (const void *)(a2 + v13);
  int v16 = _s7Weather24LocationCompositionStateOwet_0(a1 + v13, 1, v10);
  int v17 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v15, 1, v10);
  if (!v16)
  {
    if (!v17)
    {
      v12(v14, v15, v10);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v14, v10);
    goto LABEL_6;
  }
  if (v17)
  {
LABEL_6:
    uint64_t v18 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v14, v15, v10);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v14, 0, 1, v10);
LABEL_7:
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  swift_bridgeObjectRelease();
  uint64_t v19 = a3[10];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = type metadata accessor for MoonPhase.Hemisphere();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 40))(v20, v21, v22);
  return a1;
}

uint64_t sub_100277614(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100277628);
}

uint64_t sub_100277628(uint64_t a1, uint64_t a2, int *a3)
{
  type metadata accessor for TimeZone();
  sub_100162F30();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1;
LABEL_13:
    return _s7Weather24LocationCompositionStateOwet_0(v9, a2, v8);
  }
  type metadata accessor for Date();
  sub_100162F30();
  if (*(_DWORD *)(v11 + 84) == a2)
  {
    uint64_t v8 = v10;
    uint64_t v12 = a3[5];
LABEL_12:
    uint64_t v9 = a1 + v12;
    goto LABEL_13;
  }
  sub_10017DF08((uint64_t *)&unk_100E73CA0);
  sub_100162F30();
  if (*(_DWORD *)(v14 + 84) == a2)
  {
    uint64_t v8 = v13;
    uint64_t v12 = a3[8];
    goto LABEL_12;
  }
  if (a2 != 0x7FFFFFFF)
  {
    uint64_t v8 = type metadata accessor for MoonPhase.Hemisphere();
    uint64_t v12 = a3[10];
    goto LABEL_12;
  }
  unint64_t v15 = *(void *)(a1 + a3[9]);
  if (v15 >= 0xFFFFFFFF) {
    LODWORD(v15) = -1;
  }
  return (v15 + 1);
}

uint64_t sub_100277724(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100277738);
}

void sub_100277738(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  type metadata accessor for TimeZone();
  sub_100162F30();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = a1;
  }
  else
  {
    type metadata accessor for Date();
    sub_100162F30();
    if (*(_DWORD *)(v13 + 84) == a3)
    {
      uint64_t v10 = v12;
      uint64_t v14 = a4[5];
    }
    else
    {
      sub_10017DF08((uint64_t *)&unk_100E73CA0);
      sub_100162F30();
      if (*(_DWORD *)(v16 + 84) == a3)
      {
        uint64_t v10 = v15;
        uint64_t v14 = a4[8];
      }
      else
      {
        if (a3 == 0x7FFFFFFF)
        {
          *(void *)(a1 + a4[9]) = (a2 - 1);
          return;
        }
        uint64_t v10 = type metadata accessor for MoonPhase.Hemisphere();
        uint64_t v14 = a4[10];
      }
    }
    uint64_t v11 = a1 + v14;
  }

  _s7Weather24LocationCompositionStateOwst_0(v11, a2, a2, v10);
}

uint64_t type metadata accessor for CalendarViewModel(uint64_t a1)
{
  return sub_10018678C(a1, qword_100E64D10);
}

void sub_100277850()
{
  type metadata accessor for TimeZone();
  if (v0 <= 0x3F)
  {
    type metadata accessor for Date();
    if (v1 <= 0x3F)
    {
      sub_1000159D8();
      if (v2 <= 0x3F)
      {
        type metadata accessor for MoonPhase.Hemisphere();
        if (v3 <= 0x3F) {
          swift_initStructMetadata();
        }
      }
    }
  }
}

uint64_t sub_1002779A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Date();
  sub_100179C0C();
  uint64_t v6 = v5;
  __chkstk_darwin(v7);
  sub_1001626E0();
  uint64_t v10 = (unsigned char *)(v9 - v8);
  uint64_t v11 = sub_10017DF08(&qword_100E64D60);
  sub_100162E4C();
  __chkstk_darwin(v12);
  sub_1001626E0();
  uint64_t v15 = v14 - v13;
  uint64_t v16 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  uint64_t v17 = __chkstk_darwin(v16 - 8);
  uint64_t v19 = &v33[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v20 = __chkstk_darwin(v17);
  uint64_t v22 = &v33[-v21];
  __chkstk_darwin(v20);
  uint64_t v24 = &v33[-v23];
  if ((static TimeZone.== infix(_:_:)() & 1) == 0) {
    goto LABEL_17;
  }
  uint64_t v35 = v6;
  uint64_t v25 = type metadata accessor for CalendarViewModel(0);
  if ((static Date.== infix(_:_:)() & 1) == 0
    || (static Date.== infix(_:_:)() & 1) == 0
    || (static Date.== infix(_:_:)() & 1) == 0)
  {
    goto LABEL_17;
  }
  sub_1001C7278(a1 + *(int *)(v25 + 32), (uint64_t)v24);
  sub_1001C7278(a2 + *(int *)(v25 + 32), (uint64_t)v22);
  uint64_t v26 = v15 + *(int *)(v11 + 48);
  sub_1001C7278((uint64_t)v24, v15);
  sub_1001C7278((uint64_t)v22, v26);
  sub_100162F8C(v15);
  if (v27)
  {
    sub_1001781AC((uint64_t)v22, (uint64_t *)&unk_100E73CA0);
    sub_1001781AC((uint64_t)v24, (uint64_t *)&unk_100E73CA0);
    sub_100162F8C(v26);
    if (v27)
    {
      sub_1001781AC(v15, (uint64_t *)&unk_100E73CA0);
      goto LABEL_15;
    }
LABEL_13:
    sub_1001781AC(v15, &qword_100E64D60);
LABEL_17:
    char v31 = 0;
    return v31 & 1;
  }
  sub_1001C7278(v15, (uint64_t)v19);
  sub_100162F8C(v26);
  if (v27)
  {
    sub_1001781AC((uint64_t)v22, (uint64_t *)&unk_100E73CA0);
    sub_1001781AC((uint64_t)v24, (uint64_t *)&unk_100E73CA0);
    (*(void (**)(unsigned char *, uint64_t))(v35 + 8))(v19, v4);
    goto LABEL_13;
  }
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v35 + 32))(v10, v26, v4);
  sub_100127CF8((unint64_t *)&qword_100E63980, (void (*)(uint64_t))&type metadata accessor for Date);
  int v34 = dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t v28 = v10;
  uint64_t v29 = *(void (**)(unsigned char *, uint64_t))(v35 + 8);
  v29(v28, v4);
  sub_1001781AC((uint64_t)v22, (uint64_t *)&unk_100E73CA0);
  sub_1001781AC((uint64_t)v24, (uint64_t *)&unk_100E73CA0);
  v29(v19, v4);
  sub_1001781AC(v15, (uint64_t *)&unk_100E73CA0);
  if ((v34 & 1) == 0) {
    goto LABEL_17;
  }
LABEL_15:
  sub_1002E6550();
  if ((v30 & 1) == 0) {
    goto LABEL_17;
  }
  char v31 = static MoonPhase.Hemisphere.== infix(_:_:)();
  return v31 & 1;
}

BOOL sub_100277D54(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Date();
  sub_100179C0C();
  uint64_t v40 = v5;
  __chkstk_darwin(v6);
  sub_1001626E0();
  uint64_t v38 = v8 - v7;
  uint64_t v9 = sub_10017DF08(&qword_100E64D60);
  sub_100162E4C();
  __chkstk_darwin(v10);
  sub_1001626E0();
  uint64_t v13 = v12 - v11;
  uint64_t v14 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  __chkstk_darwin(v14 - 8);
  uint64_t v39 = (uint64_t)&v37 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v37 - v17;
  __chkstk_darwin(v19);
  uint64_t v21 = (char *)&v37 - v20;
  uint64_t v22 = MoonPhase.rawValue.getter();
  uint64_t v24 = v23;
  BOOL v26 = v22 == MoonPhase.rawValue.getter() && v24 == v25;
  if (v26)
  {
    swift_bridgeObjectRelease_n();
LABEL_8:
    uint64_t v29 = type metadata accessor for CalendarMoonPhaseData(0);
    sub_1001C7278(a1 + *(int *)(v29 + 20), (uint64_t)v21);
    sub_1001C7278(a2 + *(int *)(v29 + 20), (uint64_t)v18);
    uint64_t v30 = v13 + *(int *)(v9 + 48);
    sub_1001C7278((uint64_t)v21, v13);
    sub_1001C7278((uint64_t)v18, v30);
    sub_100162F8C(v13);
    if (v26)
    {
      sub_1001781AC((uint64_t)v18, (uint64_t *)&unk_100E73CA0);
      sub_1001781AC((uint64_t)v21, (uint64_t *)&unk_100E73CA0);
      sub_100162F8C(v30);
      if (v26)
      {
        sub_1001781AC(v13, (uint64_t *)&unk_100E73CA0);
        return 1;
      }
    }
    else
    {
      uint64_t v31 = v39;
      sub_1001C7278(v13, v39);
      sub_100162F8C(v30);
      if (!v32)
      {
        uint64_t v33 = v40;
        uint64_t v34 = v38;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v40 + 32))(v38, v30, v4);
        sub_100127CF8((unint64_t *)&qword_100E63980, (void (*)(uint64_t))&type metadata accessor for Date);
        char v35 = dispatch thunk of static Equatable.== infix(_:_:)();
        uint64_t v36 = *(void (**)(uint64_t, uint64_t))(v33 + 8);
        v36(v34, v4);
        sub_1001781AC((uint64_t)v18, (uint64_t *)&unk_100E73CA0);
        sub_1001781AC((uint64_t)v21, (uint64_t *)&unk_100E73CA0);
        v36(v31, v4);
        sub_1001781AC(v13, (uint64_t *)&unk_100E73CA0);
        return (v35 & 1) != 0;
      }
      sub_1001781AC((uint64_t)v18, (uint64_t *)&unk_100E73CA0);
      sub_1001781AC((uint64_t)v21, (uint64_t *)&unk_100E73CA0);
      (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v31, v4);
    }
    sub_1001781AC(v13, &qword_100E64D60);
    return 0;
  }
  char v27 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  BOOL result = 0;
  if (v27) {
    goto LABEL_8;
  }
  return result;
}

void sub_100278108()
{
  uint64_t v1 = type metadata accessor for Date();
  sub_100179C0C();
  uint64_t v3 = v2;
  __chkstk_darwin(v4);
  sub_1001626E0();
  uint64_t v7 = v6 - v5;
  uint64_t v8 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  __chkstk_darwin(v8 - 8);
  sub_1001626E0();
  uint64_t v11 = v10 - v9;
  MoonPhase.rawValue.getter();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  uint64_t v12 = type metadata accessor for CalendarMoonPhaseData(0);
  sub_1001C7278(v0 + *(int *)(v12 + 20), v11);
  if (_s7Weather24LocationCompositionStateOwet_0(v11, 1, v1) == 1)
  {
    Hasher._combine(_:)(0);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v7, v11, v1);
    Hasher._combine(_:)(1u);
    sub_100127CF8((unint64_t *)&qword_100E63978, (void (*)(uint64_t))&type metadata accessor for Date);
    dispatch thunk of Hashable.hash(into:)();
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v7, v1);
  }
}

Swift::Int sub_1002782C0()
{
  return Hasher._finalize()();
}

Swift::Int sub_100278310()
{
  return Hasher._finalize()();
}

uint64_t type metadata accessor for CalendarMoonPhaseData(uint64_t a1)
{
  return sub_10018678C(a1, qword_100E64DC0);
}

uint64_t *sub_10027836C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v10 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    uint64_t v5 = *(int *)(a3 + 20);
    uint64_t v6 = (char *)a1 + v5;
    uint64_t v7 = (char *)a2 + v5;
    uint64_t v8 = type metadata accessor for Date();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v7, 1, v8))
    {
      uint64_t v9 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
      memcpy(v6, v7, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, char *, uint64_t))(*(void *)(v8 - 8) + 16))(v6, v7, v8);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v6, 0, 1, v8);
    }
  }
  return v3;
}

uint64_t sub_100278494(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 20);
  uint64_t v3 = type metadata accessor for Date();
  uint64_t result = _s7Weather24LocationCompositionStateOwet_0(v2, 1, v3);
  if (!result)
  {
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
    return v5(v2, v3);
  }
  return result;
}

unsigned char *sub_100278520(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = &a1[v4];
  uint64_t v6 = &a2[v4];
  uint64_t v7 = type metadata accessor for Date();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v6, 1, v7))
  {
    uint64_t v8 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    memcpy(v5, v6, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v7 - 8) + 16))(v5, v6, v7);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v5, 0, 1, v7);
  }
  return a1;
}

unsigned char *sub_1002785F8(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = &a1[v4];
  uint64_t v6 = &a2[v4];
  uint64_t v7 = type metadata accessor for Date();
  int v8 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v5, 1, v7);
  int v9 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v6, 1, v7);
  if (!v8)
  {
    uint64_t v10 = *(void *)(v7 - 8);
    if (!v9)
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 24))(v5, v6, v7);
      return a1;
    }
    (*(void (**)(unsigned char *, uint64_t))(v10 + 8))(v5, v7);
    goto LABEL_6;
  }
  if (v9)
  {
LABEL_6:
    uint64_t v11 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    memcpy(v5, v6, *(void *)(*(void *)(v11 - 8) + 64));
    return a1;
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v7 - 8) + 16))(v5, v6, v7);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v5, 0, 1, v7);
  return a1;
}

unsigned char *sub_100278758(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = &a1[v4];
  uint64_t v6 = &a2[v4];
  uint64_t v7 = type metadata accessor for Date();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v6, 1, v7))
  {
    uint64_t v8 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    memcpy(v5, v6, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v5, 0, 1, v7);
  }
  return a1;
}

unsigned char *sub_100278830(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = &a1[v4];
  uint64_t v6 = &a2[v4];
  uint64_t v7 = type metadata accessor for Date();
  int v8 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v5, 1, v7);
  int v9 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v6, 1, v7);
  if (!v8)
  {
    uint64_t v10 = *(void *)(v7 - 8);
    if (!v9)
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 40))(v5, v6, v7);
      return a1;
    }
    (*(void (**)(unsigned char *, uint64_t))(v10 + 8))(v5, v7);
    goto LABEL_6;
  }
  if (v9)
  {
LABEL_6:
    uint64_t v11 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    memcpy(v5, v6, *(void *)(*(void *)(v11 - 8) + 64));
    return a1;
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v5, 0, 1, v7);
  return a1;
}

uint64_t sub_100278990(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1002789A4);
}

uint64_t sub_1002789A4(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 248)
  {
    unsigned int v4 = *a1;
    if (v4 >= 8) {
      return v4 - 7;
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v8 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    uint64_t v9 = (uint64_t)&a1[*(int *)(a3 + 20)];
    return _s7Weather24LocationCompositionStateOwet_0(v9, a2, v8);
  }
}

uint64_t sub_100278A28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100278A3C);
}

unsigned char *sub_100278A3C(unsigned char *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 248)
  {
    *uint64_t result = a2 + 7;
  }
  else
  {
    uint64_t v7 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    uint64_t v8 = (uint64_t)&v5[*(int *)(a4 + 20)];
    return (unsigned char *)_s7Weather24LocationCompositionStateOwst_0(v8, a2, a2, v7);
  }
  return result;
}

void sub_100278ABC()
{
  sub_1000159D8();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_100278B54()
{
  return sub_100127CF8(qword_100E64DF8, (void (*)(uint64_t))type metadata accessor for CalendarMoonPhaseData);
}

const char *String.location.unsafeMutableAddressor()
{
  return "Location";
}

const char *String.detailsURL.unsafeMutableAddressor()
{
  return "DetailsURL";
}

uint64_t static String.location.getter()
{
  return 0x6E6F697461636F4CLL;
}

uint64_t static String.detailsURL.getter()
{
  return 0x55736C6961746544;
}

uint64_t sub_100278BE8(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_100278C30(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(unsigned char *)(a1 + 9) = *(unsigned char *)(a2 + 9);
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_100278CA0(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(unsigned char *)(a1 + 9) = *(unsigned char *)(a2 + 9);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_release();
  return a1;
}

uint64_t type metadata accessor for ElevatedAqiSevereContentView()
{
  return sub_100109098();
}

uint64_t sub_100278D10()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100278D54@<X0>(uint64_t a1@<X0>, __int16 a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v57 = a7;
  uint64_t v58 = a6;
  uint64_t v45 = a4;
  uint64_t v52 = a3;
  v70[2] = a5;
  v70[3] = a5;
  int v9 = a2;
  unsigned int v10 = a2 & 0x100;
  v70[4] = a5;
  v70[5] = a5;
  v70[6] = a5;
  v70[7] = a5;
  sub_100179D2C();
  uint64_t v50 = sub_10017F7C0();
  uint64_t v56 = type metadata accessor for Group();
  sub_100179C0C();
  uint64_t v53 = v11;
  __chkstk_darwin(v12);
  sub_100162EF8();
  uint64_t v55 = v13;
  __chkstk_darwin(v14);
  uint64_t v54 = (uint64_t)&v41 - v15;
  v70[0] = a5;
  v70[1] = a5;
  v70[2] = type metadata accessor for Optional();
  v70[3] = a5;
  v70[4] = a5;
  v70[5] = a5;
  v70[6] = a5;
  sub_100179D2C();
  sub_10017F7C0();
  uint64_t v51 = type metadata accessor for Group();
  sub_100179C0C();
  uint64_t v49 = v16;
  __chkstk_darwin(v17);
  sub_100162EF8();
  uint64_t v59 = v18;
  __chkstk_darwin(v19);
  uint64_t v60 = (uint64_t)&v41 - v20;
  if (v9)
  {
    if (v9 == 1)
    {
      if (v10)
      {
        uint64_t v21 = &qword_100E913B8;
        goto LABEL_11;
      }
    }
    else if (v10)
    {
      uint64_t v21 = &qword_100E91788;
      goto LABEL_11;
    }
    uint64_t v21 = &qword_100E915A0;
    goto LABEL_11;
  }
  if (v10) {
    uint64_t v21 = &qword_100E90FE8;
  }
  else {
    uint64_t v21 = &qword_100E911D0;
  }
LABEL_11:
  memcpy(v70, v21, sizeof(v70));
  uint64_t v22 = memcpy(v69, v70, sizeof(v69));
  __chkstk_darwin(v22);
  uint64_t v23 = v58;
  *(&v41 - 8) = a5;
  *(&v41 - 7) = v23;
  *(&v41 - 6) = a1;
  *((unsigned char *)&v41 - 40) = v9;
  uint64_t v44 = a1;
  int v42 = v9;
  unsigned int v43 = v10 >> 8;
  *((unsigned char *)&v41 - 39) = BYTE1(v10);
  uint64_t v24 = v45;
  *(&v41 - 4) = v52;
  *(&v41 - 3) = v24;
  *(&v41 - 2) = (uint64_t)v69;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v26 = v59;
  Group<A>.init(content:)();
  uint64_t v68 = WitnessTable;
  uint64_t v27 = v51;
  uint64_t v46 = swift_getWitnessTable();
  sub_100121584(v26, v27, v60);
  uint64_t v28 = v49;
  uint64_t v47 = *(uint64_t (**)(uint64_t, uint64_t))(v49 + 8);
  uint64_t v48 = v49 + 8;
  uint64_t v29 = v47(v26, v27);
  __chkstk_darwin(v29);
  uint64_t v30 = v58;
  *(&v41 - 8) = a5;
  *(&v41 - 7) = v30;
  *(&v41 - 6) = v44;
  *((unsigned char *)&v41 - 40) = v42;
  *((unsigned char *)&v41 - 39) = v43;
  *(&v41 - 4) = v31;
  *(&v41 - 3) = v24;
  *(&v41 - 2) = (uint64_t)v69;
  uint64_t v32 = swift_getWitnessTable();
  uint64_t v33 = v55;
  Group<A>.init(content:)();
  uint64_t v67 = v32;
  uint64_t v34 = v56;
  uint64_t v58 = swift_getWitnessTable();
  uint64_t v35 = v54;
  sub_100121584(v33, v34, v54);
  uint64_t v36 = v53;
  uint64_t v37 = *(void (**)(void))(v53 + 8);
  sub_10017C768();
  v37();
  uint64_t v38 = v59;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v28 + 16))(v59, v60, v27);
  uint64_t v65 = v38;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v36 + 16))(v33, v35, v34);
  uint64_t v66 = v33;
  uint64_t v63 = v27;
  uint64_t v64 = v34;
  uint64_t v61 = v46;
  uint64_t v62 = v58;
  sub_1006E9080();
  sub_10017C768();
  v37();
  uint64_t v39 = v47;
  v47(v60, v27);
  sub_10017C768();
  v37();
  return v39(v38, v27);
}

uint64_t sub_100279220@<X0>(uint64_t a1@<X0>, void (*a2)(char *, void, void, void, void)@<X2>, void *a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X6>, uint64_t a6@<X8>)
{
  uint64_t v103 = a5;
  char v104 = a2;
  uint64_t v85 = a6;
  uint64_t v9 = sub_10017DF08(&qword_100E64E80);
  __chkstk_darwin(v9 - 8);
  uint64_t v82 = (uint64_t)&v79 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v99 = type metadata accessor for Optional();
  uint64_t v93 = *(void *)(v99 - 8);
  __chkstk_darwin(v99);
  id v98 = (char *)&v79 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  id v97 = (char *)&v79 - v13;
  uint64_t v81 = type metadata accessor for LocationComponentContainerViewModel();
  __chkstk_darwin(v81);
  uint64_t v80 = (uint64_t)&v79 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v79 - v16;
  uint64_t v18 = *(void *)(a4 - 8);
  __chkstk_darwin(v19);
  id v84 = (char *)&v79 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  char v92 = (char *)&v79 - v22;
  __chkstk_darwin(v23);
  long long v91 = (char *)&v79 - v24;
  __chkstk_darwin(v25);
  uint64_t v90 = (char *)&v79 - v26;
  __chkstk_darwin(v27);
  uint64_t v89 = (char *)&v79 - v28;
  __chkstk_darwin(v29);
  uint64_t v88 = (char *)&v79 - v30;
  __chkstk_darwin(v31);
  uint64_t v87 = (char *)&v79 - v32;
  __chkstk_darwin(v33);
  int v94 = (char *)&v79 - v34;
  __chkstk_darwin(v35);
  uint64_t v102 = (char *)&v79 - v36;
  __chkstk_darwin(v37);
  id v95 = (char *)&v79 - v38;
  __chkstk_darwin(v39);
  uint64_t v41 = (char *)&v79 - v40;
  __chkstk_darwin(v42);
  uint64_t v44 = (char *)&v79 - v43;
  sub_1001F3734(a1 + OBJC_IVAR____TtCV7Weather24ElevatedAqiSevereContent8_Storage_severeAlert, (uint64_t)v17);
  v104(v17, a3[41], a3[42], a3[43], a3[44]);
  sub_1001F2B74((uint64_t)v17);
  id v86 = v44;
  sub_100121584((uint64_t)v41, a4, (uint64_t)v44);
  uint64_t v83 = v18;
  uint64_t v45 = *(void (**)(char *, uint64_t))(v18 + 8);
  v45(v41, a4);
  sub_1001F3734(a1 + OBJC_IVAR____TtCV7Weather24ElevatedAqiSevereContent8_Storage_airQuality, (uint64_t)v17);
  v104(v17, *a3, a3[1], a3[2], a3[3]);
  sub_1001F2B74((uint64_t)v17);
  sub_100121584((uint64_t)v41, a4, (uint64_t)v95);
  id v100 = (void (*)(uint64_t, uint64_t))v45;
  uint64_t v101 = v41;
  v45(v41, a4);
  uint64_t v96 = a1;
  uint64_t v46 = a1 + OBJC_IVAR____TtCV7Weather24ElevatedAqiSevereContent8_Storage_map;
  swift_beginAccess();
  uint64_t v47 = v46;
  uint64_t v48 = v82;
  sub_10027A764(v47, v82);
  if (_s7Weather24LocationCompositionStateOwet_0(v48, 1, v81) == 1)
  {
    sub_10027A7CC(v48);
  }
  else
  {
    uint64_t v49 = v80;
    sub_10027A82C(v48, v80);
    sub_10027A890((uint64_t)(a3 + 24), (uint64_t)v127);
    sub_10027A890((uint64_t)v127, (uint64_t)v128);
    if (v129 != 1)
    {
      uint64_t v51 = (uint64_t)v102;
      v104((char *)v49, v128[0], v128[1], v128[2], v128[3]);
      sub_1001F2B74(v49);
      uint64_t v52 = (uint64_t)v101;
      sub_100121584(v51, a4, (uint64_t)v101);
      uint64_t v53 = v100;
      v100(v51, a4);
      uint64_t v50 = (uint64_t)v98;
      sub_100121584(v52, a4, (uint64_t)v98);
      v53(v52, a4);
      _s7Weather24LocationCompositionStateOwst_0(v50, 0, 1, a4);
      goto LABEL_7;
    }
    sub_1001F2B74(v49);
  }
  uint64_t v50 = (uint64_t)v98;
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v98, 1, 1, a4);
LABEL_7:
  sub_1000CA354();
  uint64_t v54 = *(void (**)(uint64_t, uint64_t))(v93 + 8);
  uint64_t v82 = (v93 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v54(v50, v99);
  sub_1001F3734(*(void *)(v96 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_hourlyForecast, (uint64_t)v17);
  uint64_t v55 = (uint64_t)v102;
  uint64_t v56 = v104;
  v104(v17, a3[16], a3[17], a3[18], a3[19]);
  sub_1001F2B74((uint64_t)v17);
  sub_100121584(v55, a4, (uint64_t)v101);
  v100(v55, a4);
  uint64_t v57 = v96;
  sub_1001F3734(*(void *)(v96 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_dailyForecast, (uint64_t)v17);
  uint64_t v58 = (uint64_t)v94;
  v56(v17, a3[8], a3[9], a3[10], a3[11]);
  sub_1001F2B74((uint64_t)v17);
  sub_100121584(v58, a4, v55);
  v100(v58, a4);
  sub_1001F3734(*(void *)(v57 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_uvIndex, (uint64_t)v17);
  uint64_t v59 = (uint64_t)v87;
  uint64_t v60 = v104;
  v104(v17, a3[49], a3[50], a3[51], a3[52]);
  sub_1001F2B74((uint64_t)v17);
  sub_100121584(v59, a4, v58);
  uint64_t v61 = (void (*)(char *, uint64_t))v100;
  v100(v59, a4);
  sub_1001F3734(*(void *)(v96 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_sunriseSunset, (uint64_t)v17);
  uint64_t v62 = (uint64_t)v88;
  v60(v17, a3[45], a3[46], a3[47], a3[48]);
  sub_1001F2B74((uint64_t)v17);
  uint64_t v63 = v103;
  sub_100121584(v62, a4, v59);
  uint64_t v64 = v61;
  v61((char *)v62, a4);
  uint64_t v65 = *(void (**)(uint64_t, char *, uint64_t))(v83 + 16);
  v65(v62, v86, a4);
  uint64_t v120 = v62;
  uint64_t v66 = v89;
  v65((uint64_t)v89, v95, a4);
  uint64_t v121 = v66;
  uint64_t v67 = v93 + 16;
  uint64_t v68 = (uint64_t)v98;
  (*(void (**)(char *, char *, uint64_t))(v93 + 16))(v98, v97, v99);
  uint64_t v122 = v68;
  int v69 = v90;
  v65((uint64_t)v90, v101, a4);
  unsigned long long v123 = v69;
  uint64_t v70 = v63;
  uint64_t v71 = v91;
  v65((uint64_t)v91, v102, a4);
  long long v124 = v71;
  uint64_t v72 = v92;
  v65((uint64_t)v92, v94, a4);
  uint64_t v125 = v72;
  uint64_t v73 = v84;
  uint64_t v74 = v87;
  v65((uint64_t)v84, v87, a4);
  uint64_t v126 = v73;
  uint64_t v75 = v73;
  uint64_t v113 = a4;
  uint64_t v114 = a4;
  uint64_t v76 = v99;
  uint64_t v115 = v99;
  uint64_t v116 = a4;
  uint64_t v117 = a4;
  uint64_t v118 = a4;
  uint64_t v119 = a4;
  uint64_t v106 = v70;
  uint64_t v107 = v70;
  uint64_t v105 = v70;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v109 = v70;
  uint64_t v110 = v70;
  uint64_t v111 = v70;
  uint64_t v112 = v70;
  sub_1006E9080();
  v64(v74, a4);
  v64(v94, a4);
  v64(v102, a4);
  v64(v101, a4);
  uint64_t v77 = *(void (**)(char *, uint64_t))(v67 - 8);
  v77(v97, v76);
  v64(v95, a4);
  v64(v86, a4);
  v64(v75, a4);
  v64(v92, a4);
  v64(v91, a4);
  v64(v90, a4);
  v77(v98, v76);
  v64(v89, a4);
  return ((uint64_t (*)(char *, uint64_t))v64)(v88, a4);
}

uint64_t sub_100279C8C@<X0>(uint64_t a1@<X0>, void (*a2)(char *, void, void, void, void)@<X2>, void *a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X6>, uint64_t a6@<X8>)
{
  uint64_t v102 = a5;
  uint64_t v84 = a6;
  uint64_t v10 = type metadata accessor for LocationComponentContainerViewModel();
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v82 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v82 = *(void *)(a4 - 8);
  uint64_t v13 = v82;
  __chkstk_darwin(v14);
  uint64_t v83 = (char *)&v82 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  id v98 = (char *)&v82 - v17;
  __chkstk_darwin(v18);
  id v97 = (char *)&v82 - v19;
  __chkstk_darwin(v20);
  uint64_t v96 = (char *)&v82 - v21;
  __chkstk_darwin(v22);
  id v95 = (char *)&v82 - v23;
  __chkstk_darwin(v24);
  uint64_t v93 = (char *)&v82 - v25;
  __chkstk_darwin(v26);
  char v92 = (char *)&v82 - v27;
  __chkstk_darwin(v28);
  uint64_t v90 = (char *)&v82 - v29;
  __chkstk_darwin(v30);
  uint64_t v89 = (char *)&v82 - v31;
  __chkstk_darwin(v32);
  uint64_t v101 = (char *)&v82 - v33;
  __chkstk_darwin(v34);
  uint64_t v87 = (char *)&v82 - v35;
  __chkstk_darwin(v36);
  id v86 = (char *)&v82 - v37;
  __chkstk_darwin(v38);
  id v100 = (char *)&v82 - v39;
  __chkstk_darwin(v40);
  uint64_t v42 = (char *)&v82 - v41;
  __chkstk_darwin(v43);
  uint64_t v45 = (char *)&v82 - v44;
  __chkstk_darwin(v46);
  uint64_t v48 = (char *)&v82 - v47;
  int v94 = (char *)&v82 - v47;
  sub_1001F3734(*(void *)(a1 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_wind, (uint64_t)v12);
  uint64_t v49 = a3[57];
  uint64_t v50 = a3[58];
  uint64_t v51 = a3[59];
  uint64_t v52 = a3[60];
  uint64_t v99 = a2;
  a2(v12, v49, v50, v51, v52);
  sub_1001F2B74((uint64_t)v12);
  sub_100121584((uint64_t)v45, a4, (uint64_t)v48);
  uint64_t v53 = *(void (**)(char *, uint64_t))(v13 + 8);
  long long v91 = v45;
  v53(v45, a4);
  sub_1001F3734(*(void *)(a1 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_precipitationTotal, (uint64_t)v12);
  a2(v12, a3[37], a3[38], a3[39], a3[40]);
  sub_1001F2B74((uint64_t)v12);
  sub_100121584((uint64_t)v42, a4, (uint64_t)v45);
  uint64_t v88 = v42;
  v53(v42, a4);
  uint64_t v85 = a1;
  sub_1001F3734(*(void *)(a1 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_feelsLike, (uint64_t)v12);
  uint64_t v54 = (uint64_t)v100;
  v99(v12, a3[12], a3[13], a3[14], a3[15]);
  sub_1001F2B74((uint64_t)v12);
  sub_100121584(v54, a4, (uint64_t)v42);
  uint64_t v55 = v54;
  v53((char *)v54, a4);
  sub_1001F3734(*(void *)(a1 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_humidity, (uint64_t)v12);
  uint64_t v56 = (uint64_t)v86;
  uint64_t v57 = v99;
  v99(v12, a3[20], a3[21], a3[22], a3[23]);
  sub_1001F2B74((uint64_t)v12);
  sub_100121584(v56, a4, v55);
  v53((char *)v56, a4);
  sub_1001F3734(*(void *)(v85 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_visibility, (uint64_t)v12);
  uint64_t v58 = (uint64_t)v87;
  v57(v12, a3[53], a3[54], a3[55], a3[56]);
  sub_1001F2B74((uint64_t)v12);
  uint64_t v59 = v58;
  sub_100121584(v58, a4, v56);
  v53((char *)v58, a4);
  uint64_t v60 = v85;
  sub_1001F3734(*(void *)(v85 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_pressure, (uint64_t)v12);
  uint64_t v61 = (uint64_t)v101;
  uint64_t v62 = v99;
  v99(v12, a3[33], a3[34], a3[35], a3[36]);
  sub_1001F2B74((uint64_t)v12);
  sub_100121584(v61, a4, v59);
  v53((char *)v61, a4);
  sub_1001F3734(*(void *)(v60 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_moon, (uint64_t)v12);
  uint64_t v63 = (uint64_t)v89;
  v62(v12, a3[29], a3[30], a3[31], a3[32]);
  sub_1001F2B74((uint64_t)v12);
  sub_100121584(v63, a4, (uint64_t)v101);
  v53((char *)v63, a4);
  sub_1001F3734(*(void *)(v60 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_averages, (uint64_t)v12);
  uint64_t v64 = a3[4];
  uint64_t v65 = a3[5];
  uint64_t v66 = a3[6];
  uint64_t v67 = a3[7];
  uint64_t v68 = (uint64_t)v90;
  v62(v12, v64, v65, v66, v67);
  sub_1001F2B74((uint64_t)v12);
  sub_100121584(v68, a4, v63);
  v53((char *)v68, a4);
  int v69 = *(void (**)(uint64_t, char *, uint64_t))(v82 + 16);
  v69(v68, v94, a4);
  uint64_t v119 = v68;
  uint64_t v70 = v92;
  v69((uint64_t)v92, v91, a4);
  uint64_t v120 = v70;
  uint64_t v71 = v93;
  v69((uint64_t)v93, v88, a4);
  uint64_t v121 = v71;
  uint64_t v72 = v95;
  v69((uint64_t)v95, v100, a4);
  uint64_t v122 = v72;
  uint64_t v73 = v96;
  uint64_t v74 = v86;
  v69((uint64_t)v96, v86, a4);
  unsigned long long v123 = v73;
  uint64_t v75 = v97;
  uint64_t v76 = v87;
  v69((uint64_t)v97, v87, a4);
  long long v124 = v75;
  uint64_t v77 = v98;
  uint64_t v78 = (uint64_t)v101;
  v69((uint64_t)v98, v101, a4);
  uint64_t v125 = v77;
  uint64_t v79 = v83;
  uint64_t v80 = v89;
  v69((uint64_t)v83, v89, a4);
  uint64_t v126 = v79;
  uint64_t v111 = a4;
  uint64_t v112 = a4;
  uint64_t v113 = a4;
  uint64_t v114 = a4;
  uint64_t v115 = a4;
  uint64_t v116 = a4;
  uint64_t v117 = a4;
  uint64_t v118 = a4;
  uint64_t v103 = v102;
  uint64_t v104 = v102;
  uint64_t v105 = v102;
  uint64_t v106 = v102;
  uint64_t v107 = v102;
  uint64_t v108 = v102;
  uint64_t v109 = v102;
  uint64_t v110 = v102;
  sub_1006E9080();
  v53(v80, a4);
  v53((char *)v78, a4);
  v53(v76, a4);
  v53(v74, a4);
  v53(v100, a4);
  v53(v88, a4);
  v53(v91, a4);
  v53(v94, a4);
  v53(v79, a4);
  v53(v98, a4);
  v53(v97, a4);
  v53(v96, a4);
  v53(v95, a4);
  v53(v93, a4);
  v53(v92, a4);
  return ((uint64_t (*)(char *, uint64_t))v53)(v90, a4);
}

uint64_t sub_10027A6D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if (*(unsigned char *)(v2 + 9)) {
    __int16 v3 = 256;
  }
  else {
    __int16 v3 = 0;
  }
  return sub_100278D54(*(void *)v2, v3 | *(unsigned __int8 *)(v2 + 8), *(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(a1 + 16), *(void *)(a1 + 24), a2);
}

uint64_t sub_10027A700()
{
  return sub_10027A730((uint64_t (*)(void, void, void, void, void, void, void))sub_100279220);
}

uint64_t sub_10027A718()
{
  return sub_10027A730((uint64_t (*)(void, void, void, void, void, void, void))sub_100279C8C);
}

uint64_t sub_10027A730(uint64_t (*a1)(void, void, void, void, void, void, void))
{
  if (*(unsigned char *)(v1 + 41)) {
    int v2 = 256;
  }
  else {
    int v2 = 0;
  }
  return a1(*(void *)(v1 + 32), v2 | *(unsigned __int8 *)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56), *(void *)(v1 + 64), *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_10027A764(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10017DF08(&qword_100E64E80);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10027A7CC(uint64_t a1)
{
  uint64_t v2 = sub_10017DF08(&qword_100E64E80);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10027A82C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for LocationComponentContainerViewModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10027A890(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10017DF08(&qword_100E64E88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10027A8F8()
{
  return swift_getWitnessTable();
}

uint64_t *sub_10027A9C8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for ContentStatusBanner();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v7))
    {
      uint64_t v8 = sub_10017DF08(&qword_100E63A10);
      memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
    }
    else
    {
      *(unsigned char *)a1 = *(unsigned char *)a2;
      uint64_t v10 = a2 + 1;
      unint64_t v11 = a2[2];
      if (v11 >= 2)
      {
        a1[1] = *v10;
        a1[2] = v11;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(a1 + 1) = *(_OWORD *)v10;
      }
      uint64_t v12 = *(int *)(v7 + 24);
      uint64_t v13 = (char *)a1 + v12;
      uint64_t v14 = (char *)a2 + v12;
      uint64_t v15 = type metadata accessor for Date();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v14, 1, v15))
      {
        uint64_t v16 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
        memcpy(v13, v14, *(void *)(*(void *)(v16 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v13, 0, 1, v15);
      }
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v7);
    }
    uint64_t v17 = *(int *)(a3 + 20);
    long long v18 = *(_OWORD *)((char *)a2 + v17 + 24);
    *(_OWORD *)((char *)a1 + v17 + 24) = v18;
    (**(void (***)(void))(v18 - 8))();
    uint64_t v19 = *(int *)(a3 + 24);
    uint64_t v20 = (char *)a1 + v19;
    uint64_t v21 = (char *)a2 + v19;
    sub_10017DF08(&qword_100E63BD0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(_OWORD *)uint64_t v20 = *(_OWORD *)v21;
      v20[16] = v21[16];
      v20[17] = v21[17];
      v20[18] = v21[18];
      uint64_t v22 = *(int *)(type metadata accessor for DisplayMetrics() + 36);
      uint64_t v23 = &v20[v22];
      uint64_t v24 = &v21[v22];
      uint64_t v25 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 16))(v23, v24, v25);
    }
    else
    {
      *(void *)uint64_t v20 = *(void *)v21;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_10027ACA4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ContentStatusBanner();
  if (!_s7Weather24LocationCompositionStateOwet_0(a1, 1, v4))
  {
    if (*(void *)(a1 + 16) >= 2uLL) {
      swift_bridgeObjectRelease();
    }
    uint64_t v5 = a1 + *(int *)(v4 + 24);
    uint64_t v6 = type metadata accessor for Date();
    if (!_s7Weather24LocationCompositionStateOwet_0(v5, 1, v6)) {
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
    }
  }
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1 + *(int *)(a2 + 20));
  uint64_t v7 = a1 + *(int *)(a2 + 24);
  sub_10017DF08(&qword_100E63BD0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = v7 + *(int *)(type metadata accessor for DisplayMetrics() + 36);
    uint64_t v9 = type metadata accessor for DynamicTypeSize();
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8);
    return v10(v8, v9);
  }
  else
  {
    return swift_release();
  }
}

void *sub_10027AE04(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for ContentStatusBanner();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v6))
  {
    uint64_t v7 = sub_10017DF08(&qword_100E63A10);
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    uint64_t v8 = a2 + 1;
    unint64_t v9 = a2[2];
    if (v9 >= 2)
    {
      a1[1] = *v8;
      a1[2] = v9;
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)(a1 + 1) = *(_OWORD *)v8;
    }
    uint64_t v10 = *(int *)(v6 + 24);
    unint64_t v11 = (char *)a1 + v10;
    uint64_t v12 = (char *)a2 + v10;
    uint64_t v13 = type metadata accessor for Date();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v12, 1, v13))
    {
      uint64_t v14 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
      memcpy(v11, v12, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v11, 0, 1, v13);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v6);
  }
  uint64_t v15 = *(int *)(a3 + 20);
  long long v16 = *(_OWORD *)((char *)a2 + v15 + 24);
  *(_OWORD *)((char *)a1 + v15 + 24) = v16;
  (**(void (***)(void))(v16 - 8))();
  uint64_t v17 = *(int *)(a3 + 24);
  long long v18 = (char *)a1 + v17;
  uint64_t v19 = (char *)a2 + v17;
  sub_10017DF08(&qword_100E63BD0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *(_OWORD *)long long v18 = *(_OWORD *)v19;
    v18[16] = v19[16];
    v18[17] = v19[17];
    v18[18] = v19[18];
    uint64_t v20 = *(int *)(type metadata accessor for DisplayMetrics() + 36);
    uint64_t v21 = &v18[v20];
    uint64_t v22 = &v19[v20];
    uint64_t v23 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
  }
  else
  {
    *(void *)long long v18 = *(void *)v19;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_10027B088(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for ContentStatusBanner();
  int v7 = _s7Weather24LocationCompositionStateOwet_0(a1, 1, v6);
  int v8 = _s7Weather24LocationCompositionStateOwet_0(a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      *(unsigned char *)a1 = *(unsigned char *)a2;
      if (*(void *)(a2 + 16) >= 2uLL)
      {
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
      }
      uint64_t v13 = *(int *)(v6 + 24);
      uint64_t v14 = (void *)(a1 + v13);
      uint64_t v15 = (const void *)(a2 + v13);
      uint64_t v16 = type metadata accessor for Date();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v15, 1, v16))
      {
        uint64_t v17 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
        memcpy(v14, v15, *(void *)(*(void *)(v17 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v14, 0, 1, v16);
      }
      uint64_t v18 = a1;
      uint64_t v19 = v6;
      goto LABEL_17;
    }
    goto LABEL_7;
  }
  if (v8)
  {
    sub_10027CAD0(a1, (void (*)(void))type metadata accessor for ContentStatusBanner);
LABEL_7:
    size_t v9 = *(void *)(*(void *)(sub_10017DF08(&qword_100E63A10) - 8) + 64);
    uint64_t v10 = (void *)a1;
    unint64_t v11 = (const void *)a2;
LABEL_8:
    memcpy(v10, v11, v9);
    goto LABEL_18;
  }
  *(unsigned char *)a1 = *(unsigned char *)a2;
  unint64_t v12 = *(void *)(a2 + 16);
  if (*(void *)(a1 + 16) < 2uLL)
  {
    if (v12 >= 2)
    {
      *(void *)(a1 + 8) = *(void *)(a2 + 8);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      swift_bridgeObjectRetain();
      goto LABEL_28;
    }
    goto LABEL_26;
  }
  if (v12 < 2)
  {
    sub_10027B4D4(a1 + 8);
LABEL_26:
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
    goto LABEL_28;
  }
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_28:
  uint64_t v28 = *(int *)(v6 + 24);
  uint64_t v29 = a1 + v28;
  uint64_t v30 = a2 + v28;
  uint64_t v31 = type metadata accessor for Date();
  int v32 = _s7Weather24LocationCompositionStateOwet_0(v29, 1, v31);
  int v33 = _s7Weather24LocationCompositionStateOwet_0(v30, 1, v31);
  if (v32)
  {
    if (!v33)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 16))(v29, v30, v31);
      uint64_t v18 = v29;
      uint64_t v19 = v31;
LABEL_17:
      _s7Weather24LocationCompositionStateOwst_0(v18, 0, 1, v19);
      goto LABEL_18;
    }
    goto LABEL_33;
  }
  uint64_t v34 = *(void *)(v31 - 8);
  if (v33)
  {
    (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v29, v31);
LABEL_33:
    size_t v9 = *(void *)(*(void *)(sub_10017DF08((uint64_t *)&unk_100E73CA0) - 8) + 64);
    uint64_t v10 = (void *)v29;
    unint64_t v11 = (const void *)v30;
    goto LABEL_8;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v34 + 24))(v29, v30, v31);
LABEL_18:
  sub_1000C1E18((uint64_t *)(a1 + *(int *)(a3 + 20)), (uint64_t *)(a2 + *(int *)(a3 + 20)));
  if (a1 != a2)
  {
    uint64_t v20 = *(int *)(a3 + 24);
    uint64_t v21 = a1 + v20;
    uint64_t v22 = a2 + v20;
    sub_1001781AC(a1 + v20, &qword_100E63BD0);
    sub_10017DF08(&qword_100E63BD0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(void *)uint64_t v21 = *(void *)v22;
      *(void *)(v21 + 8) = *(void *)(v22 + 8);
      *(unsigned char *)(v21 + 16) = *(unsigned char *)(v22 + 16);
      *(unsigned char *)(v21 + 17) = *(unsigned char *)(v22 + 17);
      *(unsigned char *)(v21 + 18) = *(unsigned char *)(v22 + 18);
      uint64_t v23 = *(int *)(type metadata accessor for DisplayMetrics() + 36);
      uint64_t v24 = v21 + v23;
      uint64_t v25 = v22 + v23;
      uint64_t v26 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 16))(v24, v25, v26);
    }
    else
    {
      *(void *)uint64_t v21 = *(void *)v22;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_10027B4D4(uint64_t a1)
{
  return a1;
}

unsigned char *sub_10027B528(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for ContentStatusBanner();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v6))
  {
    uint64_t v7 = sub_10017DF08(&qword_100E63A10);
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
  }
  else
  {
    *a1 = *a2;
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
    uint64_t v8 = *(int *)(v6 + 24);
    size_t v9 = &a1[v8];
    uint64_t v10 = &a2[v8];
    uint64_t v11 = type metadata accessor for Date();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v10, 1, v11))
    {
      uint64_t v12 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
      memcpy(v9, v10, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v9, 0, 1, v11);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v6);
  }
  uint64_t v13 = *(int *)(a3 + 20);
  uint64_t v14 = *(int *)(a3 + 24);
  uint64_t v15 = &a1[v13];
  uint64_t v16 = &a2[v13];
  long long v17 = *((_OWORD *)v16 + 1);
  *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
  *((_OWORD *)v15 + 1) = v17;
  *((void *)v15 + 4) = *((void *)v16 + 4);
  uint64_t v18 = &a1[v14];
  uint64_t v19 = &a2[v14];
  uint64_t v20 = sub_10017DF08(&qword_100E63BD0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
    v18[16] = v19[16];
    v18[17] = v19[17];
    v18[18] = v19[18];
    uint64_t v21 = *(int *)(type metadata accessor for DisplayMetrics() + 36);
    uint64_t v22 = &v18[v21];
    uint64_t v23 = &v19[v21];
    uint64_t v24 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 32))(v22, v23, v24);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v18, v19, *(void *)(*(void *)(v20 - 8) + 64));
  }
  return a1;
}

uint64_t sub_10027B770(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for ContentStatusBanner();
  int v7 = _s7Weather24LocationCompositionStateOwet_0(a1, 1, v6);
  int v8 = _s7Weather24LocationCompositionStateOwet_0(a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      *(unsigned char *)a1 = *(unsigned char *)a2;
      *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
      uint64_t v9 = *(int *)(v6 + 24);
      uint64_t v10 = (void *)(a1 + v9);
      uint64_t v11 = (const void *)(a2 + v9);
      uint64_t v12 = type metadata accessor for Date();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v11, 1, v12))
      {
        uint64_t v13 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
        memcpy(v10, v11, *(void *)(*(void *)(v13 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v12 - 8) + 32))(v10, v11, v12);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v10, 0, 1, v12);
      }
      uint64_t v19 = a1;
      uint64_t v20 = v6;
      goto LABEL_15;
    }
    goto LABEL_7;
  }
  if (v8)
  {
    sub_10027CAD0(a1, (void (*)(void))type metadata accessor for ContentStatusBanner);
LABEL_7:
    size_t v14 = *(void *)(*(void *)(sub_10017DF08(&qword_100E63A10) - 8) + 64);
    uint64_t v15 = (void *)a1;
    uint64_t v16 = (const void *)a2;
LABEL_8:
    memcpy(v15, v16, v14);
    goto LABEL_16;
  }
  *(unsigned char *)a1 = *(unsigned char *)a2;
  long long v17 = (_OWORD *)(a2 + 8);
  if (*(void *)(a1 + 16) < 2uLL) {
    goto LABEL_12;
  }
  unint64_t v18 = *(void *)(a2 + 16);
  if (v18 < 2)
  {
    sub_10027B4D4(a1 + 8);
LABEL_12:
    *(_OWORD *)(a1 + 8) = *v17;
    goto LABEL_22;
  }
  *(void *)(a1 + 8) = *(void *)v17;
  *(void *)(a1 + 16) = v18;
  swift_bridgeObjectRelease();
LABEL_22:
  uint64_t v34 = *(int *)(v6 + 24);
  uint64_t v35 = a1 + v34;
  uint64_t v36 = a2 + v34;
  uint64_t v37 = type metadata accessor for Date();
  int v38 = _s7Weather24LocationCompositionStateOwet_0(v35, 1, v37);
  int v39 = _s7Weather24LocationCompositionStateOwet_0(v36, 1, v37);
  if (v38)
  {
    if (!v39)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 32))(v35, v36, v37);
      uint64_t v19 = v35;
      uint64_t v20 = v37;
LABEL_15:
      _s7Weather24LocationCompositionStateOwst_0(v19, 0, 1, v20);
      goto LABEL_16;
    }
    goto LABEL_27;
  }
  uint64_t v40 = *(void *)(v37 - 8);
  if (v39)
  {
    (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v35, v37);
LABEL_27:
    size_t v14 = *(void *)(*(void *)(sub_10017DF08((uint64_t *)&unk_100E73CA0) - 8) + 64);
    uint64_t v15 = (void *)v35;
    uint64_t v16 = (const void *)v36;
    goto LABEL_8;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v40 + 40))(v35, v36, v37);
LABEL_16:
  uint64_t v21 = *(int *)(a3 + 20);
  uint64_t v22 = a1 + v21;
  uint64_t v23 = a2 + v21;
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1 + v21);
  long long v24 = *(_OWORD *)(v23 + 16);
  *(_OWORD *)uint64_t v22 = *(_OWORD *)v23;
  *(_OWORD *)(v22 + 16) = v24;
  *(void *)(v22 + 32) = *(void *)(v23 + 32);
  if (a1 != a2)
  {
    uint64_t v25 = *(int *)(a3 + 24);
    uint64_t v26 = (char *)(a1 + v25);
    uint64_t v27 = (char *)(a2 + v25);
    sub_1001781AC(a1 + v25, &qword_100E63BD0);
    uint64_t v28 = sub_10017DF08(&qword_100E63BD0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(_OWORD *)uint64_t v26 = *(_OWORD *)v27;
      v26[16] = v27[16];
      v26[17] = v27[17];
      v26[18] = v27[18];
      uint64_t v29 = *(int *)(type metadata accessor for DisplayMetrics() + 36);
      uint64_t v30 = &v26[v29];
      uint64_t v31 = &v27[v29];
      uint64_t v32 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 32))(v30, v31, v32);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v26, v27, *(void *)(*(void *)(v28 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_10027BB7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10027BB90);
}

uint64_t sub_10027BB90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_10017DF08(&qword_100E63A10);
  sub_100162F30();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1;
LABEL_8:
    return _s7Weather24LocationCompositionStateOwet_0(v9, a2, v8);
  }
  if (a2 != 0x7FFFFFFF)
  {
    uint64_t v8 = sub_10017DF08(&qword_100E63BF8);
    uint64_t v9 = a1 + *(int *)(a3 + 24);
    goto LABEL_8;
  }
  unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 24);
  if (v10 >= 0xFFFFFFFF) {
    LODWORD(v10) = -1;
  }
  return (v10 + 1);
}

uint64_t sub_10027BC4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10027BC60);
}

void sub_10027BC60(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_10017DF08(&qword_100E63A10);
  sub_100162F30();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = a1;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(void *)(a1 + *(int *)(a4 + 20) + 24) = (a2 - 1);
      return;
    }
    uint64_t v10 = sub_10017DF08(&qword_100E63BF8);
    uint64_t v11 = a1 + *(int *)(a4 + 24);
  }

  _s7Weather24LocationCompositionStateOwst_0(v11, a2, a2, v10);
}

uint64_t type metadata accessor for MapContentStatusBanner()
{
  uint64_t result = qword_100E64EE8;
  if (!qword_100E64EE8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_10027BD60()
{
  sub_10027BE90(319, (unint64_t *)&qword_100E64EF8, (uint64_t (*)(uint64_t))type metadata accessor for ContentStatusBanner, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
  if (v0 <= 0x3F)
  {
    sub_10027BE90(319, (unint64_t *)&qword_100E63C80, (uint64_t (*)(uint64_t))type metadata accessor for DisplayMetrics, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_10027BE90(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_10027BEF4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10027BF10(uint64_t a1, uint64_t a2)
{
  type metadata accessor for ContentStatusBanner();
  sub_100162E4C();
  __chkstk_darwin(v6);
  sub_10011BFD8();
  uint64_t v7 = sub_10017DF08(&qword_100E64F30);
  uint64_t v8 = v7 - 8;
  __chkstk_darwin(v7);
  sub_100162E88();
  uint64_t v9 = sub_10017DF08(&qword_100E63A10);
  uint64_t v10 = sub_100109308(v9);
  __chkstk_darwin(v10);
  uint64_t v12 = (unsigned __int8 *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v25 - v14;
  __chkstk_darwin(v16);
  unint64_t v18 = (char *)&v25 - v17;
  sub_1001262FC(a1, (uint64_t)&v25 - v17, &qword_100E63A10);
  sub_1001262FC(a2, (uint64_t)v15, &qword_100E63A10);
  uint64_t v19 = v2 + *(int *)(v8 + 56);
  sub_1001262FC((uint64_t)v18, v2, &qword_100E63A10);
  sub_1001262FC((uint64_t)v15, v19, &qword_100E63A10);
  sub_100162F8C(v2);
  if (v23)
  {
    sub_1001781AC((uint64_t)v15, &qword_100E63A10);
    sub_1001781AC((uint64_t)v18, &qword_100E63A10);
    sub_100162F8C(v19);
    if (v20) {
      uint64_t v21 = &qword_100E63A10;
    }
    else {
      uint64_t v21 = &qword_100E64F30;
    }
    if (v20) {
      char v22 = -1;
    }
    else {
      char v22 = 0;
    }
  }
  else
  {
    sub_1001262FC(v2, (uint64_t)v12, &qword_100E63A10);
    sub_100162F8C(v19);
    if (v23)
    {
      sub_1001781AC((uint64_t)v15, &qword_100E63A10);
      sub_1001781AC((uint64_t)v18, &qword_100E63A10);
      sub_10027CAD0((uint64_t)v12, (void (*)(void))type metadata accessor for ContentStatusBanner);
      char v22 = 0;
      uint64_t v21 = &qword_100E64F30;
    }
    else
    {
      sub_10027C7C4(v19, (uint64_t)v3);
      char v22 = sub_1001C6EF8(v12, v3);
      sub_10027CAD0((uint64_t)v3, (void (*)(void))type metadata accessor for ContentStatusBanner);
      uint64_t v21 = &qword_100E63A10;
      sub_1001781AC((uint64_t)v15, &qword_100E63A10);
      sub_1001781AC((uint64_t)v18, &qword_100E63A10);
      sub_10027CAD0((uint64_t)v12, (void (*)(void))type metadata accessor for ContentStatusBanner);
    }
  }
  sub_1001781AC(v2, v21);
  return v22 & 1;
}

uint64_t sub_10027C1BC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v4 = v2;
  uint64_t v70 = a1;
  uint64_t v69 = sub_10017DF08(&qword_100E64F38);
  sub_100162E4C();
  __chkstk_darwin(v5);
  sub_10011BFD8();
  uint64_t v6 = type metadata accessor for DisplayMetrics();
  uint64_t v7 = sub_100109308(v6);
  __chkstk_darwin(v7);
  sub_100109314();
  uint64_t v68 = v8;
  uint64_t v9 = type metadata accessor for ContentStatusBannerView();
  uint64_t v10 = sub_100109308(v9);
  __chkstk_darwin(v10);
  sub_1001626E0();
  uint64_t v13 = (_OWORD *)(v12 - v11);
  uint64_t v14 = sub_10017DF08(&qword_100E64F40);
  sub_100162E4C();
  __chkstk_darwin(v15);
  sub_100162E88();
  uint64_t v64 = sub_10017DF08(&qword_100E64F48);
  sub_100162E4C();
  __chkstk_darwin(v16);
  sub_100109314();
  uint64_t v66 = v17;
  uint64_t v18 = sub_10017DF08(&qword_100E64F50);
  sub_100162E4C();
  __chkstk_darwin(v19);
  uint64_t v65 = (uint64_t)&v60 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  uint64_t v67 = (uint64_t)&v60 - v22;
  uint64_t v23 = sub_10017DF08(&qword_100E63A10);
  uint64_t v24 = sub_100109308(v23);
  __chkstk_darwin(v24);
  sub_1001626E0();
  uint64_t v27 = v26 - v25;
  uint64_t v28 = type metadata accessor for ContentStatusBanner();
  sub_100162E4C();
  __chkstk_darwin(v29);
  sub_1001626E0();
  uint64_t v32 = v31 - v30;
  sub_1001262FC(v4, v27, &qword_100E63A10);
  if (_s7Weather24LocationCompositionStateOwet_0(v27, 1, v28) == 1)
  {
    sub_1001781AC(v27, &qword_100E63A10);
    uint64_t v33 = static Color.clear.getter();
    static Alignment.center.getter();
    _FrameLayout.init(width:height:alignment:)();
    uint64_t v34 = v71;
    char v35 = v72;
    uint64_t v36 = v73;
    char v37 = v74;
    *(void *)uint64_t v3 = v33;
    *(void *)(v3 + 8) = v34;
    *(unsigned char *)(v3 + 16) = v35;
    *(void *)(v3 + 24) = v36;
    *(unsigned char *)(v3 + 32) = v37;
    *(_OWORD *)(v3 + 40) = v75;
    swift_storeEnumTagMultiPayload();
    sub_10017DF08(&qword_100E64F58);
    sub_10027C850(&qword_100E64F60, &qword_100E64F50, (void (*)(void))sub_10027C828);
    sub_10027C9F0();
    return _ConditionalContent<>.init(storage:)();
  }
  else
  {
    uint64_t v63 = v18;
    sub_10027C7C4(v27, v32);
    uint64_t v61 = type metadata accessor for MapContentStatusBanner();
    uint64_t v62 = v4;
    sub_1001B1E64((void *)(v4 + *(int *)(v61 + 20)), *(void *)(v4 + *(int *)(v61 + 20) + 24));
    sub_1000D36C4(v32, v13);
    uint64_t v39 = static Color.primary.getter();
    uint64_t KeyPath = swift_getKeyPath();
    sub_10027CA6C((uint64_t)v13, v1);
    uint64_t v41 = (uint64_t *)(v1 + *(int *)(v14 + 36));
    *uint64_t v41 = KeyPath;
    v41[1] = v39;
    sub_10027CAD0((uint64_t)v13, (void (*)(void))type metadata accessor for ContentStatusBannerView);
    LOBYTE(v39) = static Edge.Set.leading.getter();
    unsigned __int8 v42 = static Edge.Set.trailing.getter();
    char v43 = Edge.Set.init(rawValue:)();
    Edge.Set.init(rawValue:)();
    if (Edge.Set.init(rawValue:)() != v39) {
      char v43 = Edge.Set.init(rawValue:)();
    }
    Edge.Set.init(rawValue:)();
    if (Edge.Set.init(rawValue:)() != v42) {
      char v43 = Edge.Set.init(rawValue:)();
    }
    uint64_t v44 = v63;
    uint64_t v45 = v66;
    sub_1001262FC(v1, v66, &qword_100E64F40);
    uint64_t v46 = v45 + *(int *)(v64 + 36);
    *(unsigned char *)uint64_t v46 = v43;
    *(_OWORD *)(v46 + 8) = 0u;
    *(_OWORD *)(v46 + 24) = 0u;
    *(unsigned char *)(v46 + 40) = 1;
    sub_1001781AC(v1, &qword_100E64F40);
    char v47 = static Edge.Set.bottom.getter();
    uint64_t v48 = v68;
    sub_1001EFFBC();
    sub_1000D40E0();
    sub_10027CAD0(v48, (void (*)(void))type metadata accessor for DisplayMetrics);
    EdgeInsets.init(_all:)();
    uint64_t v50 = v49;
    uint64_t v52 = v51;
    uint64_t v54 = v53;
    uint64_t v56 = v55;
    uint64_t v57 = v65;
    sub_1001262FC(v45, v65, &qword_100E64F48);
    uint64_t v58 = v57 + *(int *)(v44 + 36);
    *(unsigned char *)uint64_t v58 = v47;
    *(void *)(v58 + 8) = v50;
    *(void *)(v58 + 16) = v52;
    *(void *)(v58 + 24) = v54;
    *(void *)(v58 + 32) = v56;
    *(unsigned char *)(v58 + 40) = 0;
    sub_1001781AC(v45, &qword_100E64F48);
    uint64_t v59 = v67;
    sub_10027CB28(v57, v67);
    sub_1001262FC(v59, v3, &qword_100E64F50);
    swift_storeEnumTagMultiPayload();
    sub_10017DF08(&qword_100E64F58);
    sub_10027C850(&qword_100E64F60, &qword_100E64F50, (void (*)(void))sub_10027C828);
    sub_10027C9F0();
    _ConditionalContent<>.init(storage:)();
    sub_1001781AC(v59, &qword_100E64F50);
    return sub_10027CAD0(v32, (void (*)(void))type metadata accessor for ContentStatusBanner);
  }
}

uint64_t sub_10027C7C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ContentStatusBanner();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10027C828()
{
  return sub_10027C850(&qword_100E64F68, &qword_100E64F48, (void (*)(void))sub_10027C8D0);
}

uint64_t sub_10027C850(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10018C6DC(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10027C8D0()
{
  unint64_t result = qword_100E64F70;
  if (!qword_100E64F70)
  {
    sub_10018C6DC(&qword_100E64F40);
    sub_10027C94C();
    sub_10027C99C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E64F70);
  }
  return result;
}

unint64_t sub_10027C94C()
{
  unint64_t result = qword_100E64F78;
  if (!qword_100E64F78)
  {
    type metadata accessor for ContentStatusBannerView();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E64F78);
  }
  return result;
}

unint64_t sub_10027C99C()
{
  unint64_t result = qword_100E64F80;
  if (!qword_100E64F80)
  {
    sub_10018C6DC((uint64_t *)&unk_100EAA770);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E64F80);
  }
  return result;
}

unint64_t sub_10027C9F0()
{
  unint64_t result = qword_100E64F88;
  if (!qword_100E64F88)
  {
    sub_10018C6DC(&qword_100E64F58);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E64F88);
  }
  return result;
}

uint64_t sub_10027CA6C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ContentStatusBannerView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10027CAD0(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_10027CB28(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10017DF08(&qword_100E64F50);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_10027CB94()
{
  unint64_t result = qword_100E64F90;
  if (!qword_100E64F90)
  {
    sub_10018C6DC(&qword_100E64F98);
    sub_10027C850(&qword_100E64F60, &qword_100E64F50, (void (*)(void))sub_10027C828);
    sub_10027C9F0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E64F90);
  }
  return result;
}

uint64_t sub_10027CC34(uint64_t a1, uint64_t *a2, int *a3)
{
  int v4 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v4 & 0x20000) == 0)
  {
    uint64_t v5 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v5;
    uint64_t v6 = a2[3];
    *(void *)(a1 + 16) = a2[2];
    *(void *)(a1 + 24) = v6;
    uint64_t v7 = a2[5];
    *(void *)(a1 + 32) = a2[4];
    *(void *)(a1 + 40) = v7;
    uint64_t v8 = a2[7];
    *(void *)(a1 + 48) = a2[6];
    *(void *)(a1 + 56) = v8;
    uint64_t v9 = a2[9];
    *(void *)(a1 + 64) = a2[8];
    *(void *)(a1 + 72) = v9;
    uint64_t v10 = a2[11];
    *(void *)(a1 + 80) = a2[10];
    *(void *)(a1 + 88) = v10;
    *(void *)(a1 + 96) = a2[12];
    *(unsigned char *)(a1 + 104) = *((unsigned char *)a2 + 104);
    uint64_t v11 = (void *)a2[14];
    uint64_t v12 = a3[9];
    uint64_t v145 = a1 + v12;
    uint64_t v144 = (uint64_t)a2 + v12;
    *(void *)(a1 + 112) = v11;
    uint64_t v13 = type metadata accessor for TemperatureScaleConfiguration();
    long long v143 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v14 = v11;
    v143(v145, v144, v13);
    uint64_t v15 = a3[11];
    *(_OWORD *)(a1 + a3[10]) = *(_OWORD *)((char *)a2 + a3[10]);
    *(void *)(a1 + v15) = *(uint64_t *)((char *)a2 + v15);
    uint64_t v16 = a3[12];
    uint64_t v17 = a1 + v16;
    uint64_t v18 = (uint64_t)a2 + v16;
    uint64_t v19 = *(void **)v18;
    uint64_t v20 = *(void **)(v18 + 8);
    uint64_t v21 = *(void *)(v18 + 16);
    LOBYTE(v6) = *(unsigned char *)(v18 + 24);
    swift_bridgeObjectRetain();
    sub_10027D4F8(v19, v20, v21, v6);
    *(void *)uint64_t v17 = v19;
    *(void *)(v17 + 8) = v20;
    *(void *)(v17 + 16) = v21;
    *(unsigned char *)(v17 + 24) = v6;
    uint64_t v22 = a2;
    uint64_t v23 = a3[13];
    uint64_t v24 = (char *)(a1 + v23);
    uint64_t v25 = (char *)a2 + v23;
    uint64_t v26 = type metadata accessor for TemperatureAveragesHeroChartViewModel.PeakMarkModel(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v25, 1, v26))
    {
      uint64_t v27 = sub_10017DF08(&qword_100E64FA0);
      memcpy(v24, v25, *(void *)(*(void *)(v27 - 8) + 64));
    }
    else
    {
      uint64_t v30 = type metadata accessor for Date();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 16))(v24, v25, v30);
      *(void *)&v24[*(int *)(v26 + 20)] = *(void *)&v25[*(int *)(v26 + 20)];
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v24, 0, 1, v26);
    }
    uint64_t v31 = a3[14];
    uint64_t v32 = (char *)(a1 + v31);
    uint64_t v33 = (char *)a2 + v31;
    uint64_t v34 = (int *)type metadata accessor for PeakUpperMarkModel(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v33, 1, (uint64_t)v34))
    {
      uint64_t v35 = sub_10017DF08(&qword_100E64FA8);
      memcpy(v32, v33, *(void *)(*(void *)(v35 - 8) + 64));
    }
    else
    {
      uint64_t v36 = type metadata accessor for Date();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 16))(v32, v33, v36);
      *(void *)&v32[v34[5]] = *(void *)&v33[v34[5]];
      uint64_t v37 = v34[6];
      int v38 = &v32[v37];
      uint64_t v39 = &v33[v37];
      uint64_t v40 = *((void *)v39 + 1);
      *(void *)int v38 = *(void *)v39;
      *((void *)v38 + 1) = v40;
      uint64_t v41 = v34[7];
      unsigned __int8 v42 = &v32[v41];
      char v43 = &v33[v41];
      uint64_t v44 = *((void *)v43 + 1);
      *(void *)unsigned __int8 v42 = *(void *)v43;
      *((void *)v42 + 1) = v44;
      uint64_t v45 = v34[8];
      uint64_t v46 = &v32[v45];
      char v47 = &v33[v45];
      uint64_t v48 = *((void *)v47 + 1);
      *(void *)uint64_t v46 = *(void *)v47;
      *((void *)v46 + 1) = v48;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v32, 0, 1, (uint64_t)v34);
    }
    uint64_t v49 = a3[15];
    uint64_t v50 = a1 + v49;
    uint64_t v51 = (uint64_t)a2 + v49;
    type metadata accessor for DetailHeroChartLollipopModel(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(void *)uint64_t v50 = *(void *)v51;
      uint64_t active = type metadata accessor for DetailHeroChartActiveLollipopModel(0);
      uint64_t v53 = *(int *)(active + 20);
      uint64_t v54 = v50 + v53;
      uint64_t v55 = v51 + v53;
      uint64_t v56 = type metadata accessor for Date();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v56 - 8) + 16))(v54, v55, v56);
      uint64_t v57 = (int *)type metadata accessor for LollipopMarkModel(0);
      *(void *)(v54 + v57[5]) = *(void *)(v55 + v57[5]);
      *(void *)(v54 + v57[6]) = *(void *)(v55 + v57[6]);
      *(void *)(v54 + v57[7]) = *(void *)(v55 + v57[7]);
      uint64_t v58 = *(int *)(active + 24);
      uint64_t v59 = v50 + v58;
      uint64_t v60 = v51 + v58;
      type metadata accessor for LollipopDetailViewModel(0);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        uint64_t v71 = *(void *)(v60 + 8);
        *(void *)uint64_t v59 = *(void *)v60;
        *(void *)(v59 + 8) = v71;
        char v72 = (int *)type metadata accessor for TitleAndDetailLollipopDetailViewModel(0);
        uint64_t v73 = v72[5];
        uint64_t v74 = v59 + v73;
        uint64_t v75 = v60 + v73;
        uint64_t v76 = type metadata accessor for AttributedString();
        uint64_t v77 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v76 - 8) + 16);
        swift_bridgeObjectRetain();
        v77(v74, v75, v76);
        uint64_t v22 = a2;
        uint64_t v78 = v72[6];
        uint64_t v79 = (void *)(v59 + v78);
        uint64_t v80 = (void *)(v60 + v78);
        uint64_t v81 = v80[1];
        *uint64_t v79 = *v80;
        v79[1] = v81;
        uint64_t v82 = v72[7];
        uint64_t v83 = (void *)(v59 + v82);
        uint64_t v84 = (void *)(v60 + v82);
        uint64_t v85 = v84[1];
        *uint64_t v83 = *v84;
        v83[1] = v85;
        uint64_t v86 = v72[8];
        uint64_t v87 = (void *)(v59 + v86);
        uint64_t v88 = (void *)(v60 + v86);
        uint64_t v89 = v88[1];
        *uint64_t v87 = *v88;
        v87[1] = v89;
        uint64_t v90 = v72[9];
        long long v91 = (void *)(v59 + v90);
        char v92 = (void *)(v60 + v90);
        uint64_t v93 = v92[1];
        void *v91 = *v92;
        v91[1] = v93;
        uint64_t v94 = v72[10];
        id v95 = (void *)(v59 + v94);
        uint64_t v96 = (void *)(v60 + v94);
        uint64_t v97 = v96[1];
        void *v95 = *v96;
        v95[1] = v97;
        *(unsigned char *)(v59 + v72[11]) = *(unsigned char *)(v60 + v72[11]);
        swift_bridgeObjectRetain();
      }
      else
      {
        if (EnumCaseMultiPayload != 1)
        {
          uint64_t v98 = *(void *)(v60 + 8);
          *(void *)uint64_t v59 = *(void *)v60;
          *(void *)(v59 + 8) = v98;
          uint64_t v99 = *(void *)(v60 + 24);
          *(void *)(v59 + 16) = *(void *)(v60 + 16);
          *(void *)(v59 + 24) = v99;
          uint64_t v100 = *(void *)(v60 + 40);
          *(void *)(v59 + 32) = *(void *)(v60 + 32);
          *(void *)(v59 + 40) = v100;
LABEL_21:
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_storeEnumTagMultiPayload();
          swift_storeEnumTagMultiPayload();
          uint64_t v131 = a3[16];
          uint64_t v29 = a1;
          uint64_t v132 = a1 + v131;
          uint64_t v133 = (uint64_t)v22 + v131;
          uint64_t v134 = type metadata accessor for Date();
          long long v135 = v22;
          long long v136 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v134 - 8) + 16);
          v136(v132, v133, v134);
          v136(a1 + a3[17], (uint64_t)v135 + a3[17], v134);
          uint64_t v137 = a3[18];
          uint64_t v138 = a1 + v137;
          uint64_t v139 = (uint64_t)v135 + v137;
          uint64_t v140 = type metadata accessor for DetailChartGradientModel();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v140 - 8) + 16))(v138, v139, v140);
          uint64_t v141 = a3[20];
          *(_OWORD *)(a1 + a3[19]) = *(_OWORD *)((char *)v135 + a3[19]);
          *(_OWORD *)(a1 + v141) = *(_OWORD *)((char *)v135 + v141);
          return v29;
        }
        uint64_t v62 = *(void *)(v60 + 8);
        *(void *)uint64_t v59 = *(void *)v60;
        *(void *)(v59 + 8) = v62;
        uint64_t v63 = *(void *)(v60 + 24);
        *(void *)(v59 + 16) = *(void *)(v60 + 16);
        *(void *)(v59 + 24) = v63;
        uint64_t v64 = *(void *)(v60 + 40);
        *(void *)(v59 + 32) = *(void *)(v60 + 32);
        *(void *)(v59 + 40) = v64;
        uint64_t v65 = *(void *)(v60 + 56);
        *(void *)(v59 + 48) = *(void *)(v60 + 48);
        *(void *)(v59 + 56) = v65;
        *(unsigned char *)(v59 + 64) = *(unsigned char *)(v60 + 64);
        *(unsigned char *)(v59 + 65) = *(unsigned char *)(v60 + 65);
      }
    }
    else
    {
      type metadata accessor for LollipopDetailViewModel(0);
      int v66 = swift_getEnumCaseMultiPayload();
      if (v66 == 2)
      {
        uint64_t v101 = *(void *)(v51 + 8);
        *(void *)uint64_t v50 = *(void *)v51;
        *(void *)(v50 + 8) = v101;
        uint64_t v102 = (int *)type metadata accessor for TitleAndDetailLollipopDetailViewModel(0);
        uint64_t v103 = v102[5];
        uint64_t v104 = v50 + v103;
        uint64_t v105 = v51 + v103;
        uint64_t v106 = type metadata accessor for AttributedString();
        uint64_t v107 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v106 - 8) + 16);
        swift_bridgeObjectRetain();
        v107(v104, v105, v106);
        uint64_t v22 = a2;
        uint64_t v108 = v102[6];
        uint64_t v109 = (void *)(v50 + v108);
        uint64_t v110 = (void *)(v51 + v108);
        uint64_t v111 = v110[1];
        *uint64_t v109 = *v110;
        v109[1] = v111;
        uint64_t v112 = v102[7];
        uint64_t v113 = (void *)(v50 + v112);
        uint64_t v114 = (void *)(v51 + v112);
        uint64_t v115 = v114[1];
        *uint64_t v113 = *v114;
        v113[1] = v115;
        uint64_t v116 = v102[8];
        uint64_t v117 = (void *)(v50 + v116);
        uint64_t v118 = (void *)(v51 + v116);
        uint64_t v119 = v118[1];
        *uint64_t v117 = *v118;
        v117[1] = v119;
        uint64_t v120 = v102[9];
        uint64_t v121 = (void *)(v50 + v120);
        uint64_t v122 = (void *)(v51 + v120);
        uint64_t v123 = v122[1];
        *uint64_t v121 = *v122;
        v121[1] = v123;
        uint64_t v124 = v102[10];
        uint64_t v125 = (void *)(v50 + v124);
        uint64_t v126 = (void *)(v51 + v124);
        uint64_t v127 = v126[1];
        *uint64_t v125 = *v126;
        v125[1] = v127;
        *(unsigned char *)(v50 + v102[11]) = *(unsigned char *)(v51 + v102[11]);
        swift_bridgeObjectRetain();
      }
      else
      {
        if (v66 != 1)
        {
          uint64_t v128 = *(void *)(v51 + 8);
          *(void *)uint64_t v50 = *(void *)v51;
          *(void *)(v50 + 8) = v128;
          uint64_t v129 = *(void *)(v51 + 24);
          *(void *)(v50 + 16) = *(void *)(v51 + 16);
          *(void *)(v50 + 24) = v129;
          uint64_t v130 = *(void *)(v51 + 40);
          *(void *)(v50 + 32) = *(void *)(v51 + 32);
          *(void *)(v50 + 40) = v130;
          goto LABEL_21;
        }
        uint64_t v67 = *(void *)(v51 + 8);
        *(void *)uint64_t v50 = *(void *)v51;
        *(void *)(v50 + 8) = v67;
        uint64_t v68 = *(void *)(v51 + 24);
        *(void *)(v50 + 16) = *(void *)(v51 + 16);
        *(void *)(v50 + 24) = v68;
        uint64_t v69 = *(void *)(v51 + 40);
        *(void *)(v50 + 32) = *(void *)(v51 + 32);
        *(void *)(v50 + 40) = v69;
        uint64_t v70 = *(void *)(v51 + 56);
        *(void *)(v50 + 48) = *(void *)(v51 + 48);
        *(void *)(v50 + 56) = v70;
        *(unsigned char *)(v50 + 64) = *(unsigned char *)(v51 + 64);
        *(unsigned char *)(v50 + 65) = *(unsigned char *)(v51 + 65);
      }
    }
    swift_bridgeObjectRetain();
    goto LABEL_21;
  }
  uint64_t v28 = *a2;
  *(void *)a1 = *a2;
  uint64_t v29 = v28 + ((v4 + 16) & ~(unint64_t)v4);
  swift_retain();
  return v29;
}

id sub_10027D4F8(id result, void *a2, uint64_t a3, unsigned __int8 a4)
{
  if (a4 <= 0x3Fu)
  {
    id v6 = result;
    id v5 = a2;
    return v6;
  }
  return result;
}

uint64_t type metadata accessor for TemperatureAveragesHeroChartViewModel.PeakMarkModel(uint64_t a1)
{
  return sub_10018678C(a1, qword_100E650E8);
}

uint64_t sub_10027D560(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  uint64_t v4 = a1 + a2[9];
  uint64_t v5 = type metadata accessor for TemperatureScaleConfiguration();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease();
  sub_10027D954(*(void **)(a1 + a2[12]), *(void **)(a1 + a2[12] + 8), *(void *)(a1 + a2[12] + 16), *(unsigned char *)(a1 + a2[12] + 24));
  uint64_t v6 = a1 + a2[13];
  uint64_t v7 = type metadata accessor for TemperatureAveragesHeroChartViewModel.PeakMarkModel(0);
  if (!_s7Weather24LocationCompositionStateOwet_0(v6, 1, v7))
  {
    uint64_t v8 = type metadata accessor for Date();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v6, v8);
  }
  uint64_t v9 = a1 + a2[14];
  uint64_t v10 = type metadata accessor for PeakUpperMarkModel(0);
  if (!_s7Weather24LocationCompositionStateOwet_0(v9, 1, v10))
  {
    uint64_t v11 = type metadata accessor for Date();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v9, v11);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v12 = a1 + a2[15];
  type metadata accessor for DetailHeroChartLollipopModel(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t active = type metadata accessor for DetailHeroChartActiveLollipopModel(0);
    uint64_t v14 = v12 + *(int *)(active + 20);
    uint64_t v15 = type metadata accessor for Date();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v14, v15);
    v12 += *(int *)(active + 24);
  }
  type metadata accessor for LollipopDetailViewModel(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    swift_bridgeObjectRelease();
    uint64_t v17 = v12 + *(int *)(type metadata accessor for TitleAndDetailLollipopDetailViewModel(0) + 20);
    uint64_t v18 = type metadata accessor for AttributedString();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(v17, v18);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else if (EnumCaseMultiPayload == 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    if (EnumCaseMultiPayload) {
      goto LABEL_14;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
LABEL_14:
  uint64_t v19 = a1 + a2[16];
  uint64_t v20 = type metadata accessor for Date();
  uint64_t v21 = *(void (**)(uint64_t, uint64_t))(*(void *)(v20 - 8) + 8);
  v21(v19, v20);
  v21(a1 + a2[17], v20);
  uint64_t v22 = a1 + a2[18];
  uint64_t v23 = type metadata accessor for DetailChartGradientModel();
  uint64_t v24 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v23 - 8) + 8);

  return v24(v22, v23);
}

void sub_10027D954(void *a1, void *a2, uint64_t a3, unsigned __int8 a4)
{
  if (a4 <= 0x3Fu)
  {
  }
}

uint64_t sub_10027D99C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v5 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v5;
  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v6;
  uint64_t v7 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v7;
  uint64_t v8 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v8;
  uint64_t v9 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v9;
  uint64_t v10 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v10;
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  uint64_t v138 = *(void **)(a2 + 112);
  uint64_t v11 = a3[9];
  uint64_t v142 = a2 + v11;
  uint64_t v144 = a1 + v11;
  *(void *)(a1 + 112) = v138;
  uint64_t v12 = type metadata accessor for TemperatureScaleConfiguration();
  uint64_t v137 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v13 = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v14 = v138;
  v137(v144, v142, v12);
  uint64_t v15 = a3[11];
  *(_OWORD *)(a1 + a3[10]) = *(_OWORD *)(a2 + a3[10]);
  *(void *)(a1 + v15) = *(void *)(a2 + v15);
  uint64_t v16 = a3[12];
  uint64_t v17 = a1 + v16;
  uint64_t v18 = v13 + v16;
  uint64_t v19 = *(void **)v18;
  uint64_t v20 = *(void **)(v18 + 8);
  uint64_t v21 = *(void *)(v18 + 16);
  LOBYTE(v6) = *(unsigned char *)(v18 + 24);
  swift_bridgeObjectRetain();
  sub_10027D4F8(v19, v20, v21, v6);
  *(void *)uint64_t v17 = v19;
  *(void *)(v17 + 8) = v20;
  *(void *)(v17 + 16) = v21;
  *(unsigned char *)(v17 + 24) = v6;
  uint64_t v22 = a1;
  uint64_t v23 = a3[13];
  uint64_t v24 = (char *)(a1 + v23);
  uint64_t v25 = (char *)(v13 + v23);
  uint64_t v26 = type metadata accessor for TemperatureAveragesHeroChartViewModel.PeakMarkModel(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v25, 1, v26))
  {
    uint64_t v27 = sub_10017DF08(&qword_100E64FA0);
    memcpy(v24, v25, *(void *)(*(void *)(v27 - 8) + 64));
  }
  else
  {
    uint64_t v28 = type metadata accessor for Date();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 16))(v24, v25, v28);
    *(void *)&v24[*(int *)(v26 + 20)] = *(void *)&v25[*(int *)(v26 + 20)];
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v24, 0, 1, v26);
  }
  uint64_t v29 = a3[14];
  uint64_t v30 = (char *)(a1 + v29);
  uint64_t v31 = (char *)(v13 + v29);
  uint64_t v32 = (int *)type metadata accessor for PeakUpperMarkModel(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v31, 1, (uint64_t)v32))
  {
    uint64_t v33 = sub_10017DF08(&qword_100E64FA8);
    memcpy(v30, v31, *(void *)(*(void *)(v33 - 8) + 64));
  }
  else
  {
    uint64_t v34 = type metadata accessor for Date();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 16))(v30, v31, v34);
    *(void *)&v30[v32[5]] = *(void *)&v31[v32[5]];
    uint64_t v35 = v32[6];
    uint64_t v36 = &v30[v35];
    uint64_t v37 = &v31[v35];
    uint64_t v38 = *((void *)v37 + 1);
    *(void *)uint64_t v36 = *(void *)v37;
    *((void *)v36 + 1) = v38;
    uint64_t v39 = v32[7];
    uint64_t v40 = &v30[v39];
    uint64_t v41 = &v31[v39];
    uint64_t v42 = *((void *)v41 + 1);
    *(void *)uint64_t v40 = *(void *)v41;
    *((void *)v40 + 1) = v42;
    uint64_t v43 = v32[8];
    uint64_t v44 = &v30[v43];
    uint64_t v45 = &v31[v43];
    uint64_t v46 = *((void *)v45 + 1);
    *(void *)uint64_t v44 = *(void *)v45;
    *((void *)v44 + 1) = v46;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v30, 0, 1, (uint64_t)v32);
  }
  uint64_t v47 = a3[15];
  uint64_t v48 = a1 + v47;
  uint64_t v49 = v13 + v47;
  type metadata accessor for DetailHeroChartLollipopModel(0);
  uint64_t v145 = v13;
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    type metadata accessor for LollipopDetailViewModel(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v97 = *(void *)(v49 + 8);
      *(void *)uint64_t v48 = *(void *)v49;
      *(void *)(v48 + 8) = v97;
      uint64_t v98 = (int *)type metadata accessor for TitleAndDetailLollipopDetailViewModel(0);
      uint64_t v99 = v98[5];
      uint64_t v141 = v49 + v99;
      uint64_t v143 = v48 + v99;
      uint64_t v100 = type metadata accessor for AttributedString();
      uint64_t v101 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v100 - 8) + 16);
      swift_bridgeObjectRetain();
      v101(v143, v141, v100);
      uint64_t v22 = a1;
      uint64_t v102 = v98[6];
      uint64_t v103 = (void *)(v48 + v102);
      uint64_t v104 = (void *)(v49 + v102);
      uint64_t v105 = v104[1];
      void *v103 = *v104;
      v103[1] = v105;
      uint64_t v106 = v98[7];
      uint64_t v107 = (void *)(v48 + v106);
      uint64_t v108 = (void *)(v49 + v106);
      uint64_t v109 = v108[1];
      void *v107 = *v108;
      v107[1] = v109;
      uint64_t v110 = v98[8];
      uint64_t v111 = (void *)(v48 + v110);
      uint64_t v112 = (void *)(v49 + v110);
      uint64_t v113 = v112[1];
      void *v111 = *v112;
      v111[1] = v113;
      uint64_t v114 = v98[9];
      uint64_t v115 = (void *)(v48 + v114);
      uint64_t v116 = (void *)(v49 + v114);
      uint64_t v117 = v116[1];
      void *v115 = *v116;
      v115[1] = v117;
      uint64_t v118 = v98[10];
      uint64_t v119 = (void *)(v48 + v118);
      uint64_t v120 = (void *)(v49 + v118);
      uint64_t v121 = v120[1];
      void *v119 = *v120;
      v119[1] = v121;
      *(unsigned char *)(v48 + v98[11]) = *(unsigned char *)(v49 + v98[11]);
      swift_bridgeObjectRetain();
    }
    else
    {
      if (EnumCaseMultiPayload != 1)
      {
        uint64_t v122 = *(void *)(v49 + 8);
        *(void *)uint64_t v48 = *(void *)v49;
        *(void *)(v48 + 8) = v122;
        uint64_t v123 = *(void *)(v49 + 24);
        *(void *)(v48 + 16) = *(void *)(v49 + 16);
        *(void *)(v48 + 24) = v123;
        uint64_t v124 = *(void *)(v49 + 40);
        *(void *)(v48 + 32) = *(void *)(v49 + 32);
        *(void *)(v48 + 40) = v124;
        goto LABEL_19;
      }
      uint64_t v65 = *(void *)(v49 + 8);
      *(void *)uint64_t v48 = *(void *)v49;
      *(void *)(v48 + 8) = v65;
      uint64_t v66 = *(void *)(v49 + 24);
      *(void *)(v48 + 16) = *(void *)(v49 + 16);
      *(void *)(v48 + 24) = v66;
      uint64_t v67 = *(void *)(v49 + 40);
      *(void *)(v48 + 32) = *(void *)(v49 + 32);
      *(void *)(v48 + 40) = v67;
      uint64_t v68 = *(void *)(v49 + 56);
      *(void *)(v48 + 48) = *(void *)(v49 + 48);
      *(void *)(v48 + 56) = v68;
      *(unsigned char *)(v48 + 64) = *(unsigned char *)(v49 + 64);
      *(unsigned char *)(v48 + 65) = *(unsigned char *)(v49 + 65);
    }
    goto LABEL_17;
  }
  *(void *)uint64_t v48 = *(void *)v49;
  uint64_t active = type metadata accessor for DetailHeroChartActiveLollipopModel(0);
  uint64_t v51 = *(int *)(active + 20);
  uint64_t v52 = v48 + v51;
  uint64_t v53 = v49 + v51;
  uint64_t v54 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v54 - 8) + 16))(v52, v53, v54);
  uint64_t v55 = (int *)type metadata accessor for LollipopMarkModel(0);
  *(void *)(v52 + v55[5]) = *(void *)(v53 + v55[5]);
  *(void *)(v52 + v55[6]) = *(void *)(v53 + v55[6]);
  *(void *)(v52 + v55[7]) = *(void *)(v53 + v55[7]);
  uint64_t v56 = *(int *)(active + 24);
  uint64_t v57 = v48 + v56;
  uint64_t v58 = v49 + v56;
  type metadata accessor for LollipopDetailViewModel(0);
  int v59 = swift_getEnumCaseMultiPayload();
  if (v59 == 2)
  {
    uint64_t v69 = *(void *)(v58 + 8);
    *(void *)uint64_t v57 = *(void *)v58;
    *(void *)(v57 + 8) = v69;
    uint64_t v70 = (int *)type metadata accessor for TitleAndDetailLollipopDetailViewModel(0);
    uint64_t v71 = v70[5];
    uint64_t v139 = v58 + v71;
    uint64_t v140 = v57 + v71;
    uint64_t v72 = type metadata accessor for AttributedString();
    uint64_t v73 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v72 - 8) + 16);
    swift_bridgeObjectRetain();
    v73(v140, v139, v72);
    uint64_t v22 = a1;
    uint64_t v74 = v70[6];
    uint64_t v75 = (void *)(v57 + v74);
    uint64_t v76 = (void *)(v58 + v74);
    uint64_t v77 = v76[1];
    void *v75 = *v76;
    v75[1] = v77;
    uint64_t v78 = v70[7];
    uint64_t v79 = (void *)(v57 + v78);
    uint64_t v80 = (void *)(v58 + v78);
    uint64_t v81 = v80[1];
    *uint64_t v79 = *v80;
    v79[1] = v81;
    uint64_t v82 = v70[8];
    uint64_t v83 = (void *)(v57 + v82);
    uint64_t v84 = (void *)(v58 + v82);
    uint64_t v85 = v84[1];
    *uint64_t v83 = *v84;
    v83[1] = v85;
    uint64_t v86 = v70[9];
    uint64_t v87 = (void *)(v57 + v86);
    uint64_t v88 = (void *)(v58 + v86);
    uint64_t v89 = v88[1];
    *uint64_t v87 = *v88;
    v87[1] = v89;
    uint64_t v90 = v70[10];
    long long v91 = (void *)(v57 + v90);
    char v92 = (void *)(v58 + v90);
    uint64_t v93 = v92[1];
    void *v91 = *v92;
    v91[1] = v93;
    *(unsigned char *)(v57 + v70[11]) = *(unsigned char *)(v58 + v70[11]);
    swift_bridgeObjectRetain();
    goto LABEL_17;
  }
  if (v59 == 1)
  {
    uint64_t v60 = *(void *)(v58 + 8);
    *(void *)uint64_t v57 = *(void *)v58;
    *(void *)(v57 + 8) = v60;
    uint64_t v61 = *(void *)(v58 + 24);
    *(void *)(v57 + 16) = *(void *)(v58 + 16);
    *(void *)(v57 + 24) = v61;
    uint64_t v62 = *(void *)(v58 + 40);
    *(void *)(v57 + 32) = *(void *)(v58 + 32);
    *(void *)(v57 + 40) = v62;
    uint64_t v63 = *(void *)(v58 + 56);
    *(void *)(v57 + 48) = *(void *)(v58 + 48);
    *(void *)(v57 + 56) = v63;
    *(unsigned char *)(v57 + 64) = *(unsigned char *)(v58 + 64);
    *(unsigned char *)(v57 + 65) = *(unsigned char *)(v58 + 65);
LABEL_17:
    swift_bridgeObjectRetain();
    goto LABEL_19;
  }
  uint64_t v94 = *(void *)(v58 + 8);
  *(void *)uint64_t v57 = *(void *)v58;
  *(void *)(v57 + 8) = v94;
  uint64_t v95 = *(void *)(v58 + 24);
  *(void *)(v57 + 16) = *(void *)(v58 + 16);
  *(void *)(v57 + 24) = v95;
  uint64_t v96 = *(void *)(v58 + 40);
  *(void *)(v57 + 32) = *(void *)(v58 + 32);
  *(void *)(v57 + 40) = v96;
LABEL_19:
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  uint64_t v125 = a3[16];
  uint64_t v126 = v22 + v125;
  uint64_t v127 = v145 + v125;
  uint64_t v128 = type metadata accessor for Date();
  uint64_t v129 = v22;
  uint64_t v130 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v128 - 8) + 16);
  v130(v126, v127, v128);
  v130(v129 + a3[17], v145 + a3[17], v128);
  uint64_t v131 = a3[18];
  uint64_t v132 = v129 + v131;
  uint64_t v133 = v145 + v131;
  uint64_t v134 = type metadata accessor for DetailChartGradientModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v134 - 8) + 16))(v132, v133, v134);
  uint64_t v135 = a3[20];
  *(_OWORD *)(v129 + a3[19]) = *(_OWORD *)(v145 + a3[19]);
  *(_OWORD *)(v129 + v135) = *(_OWORD *)(v145 + v135);
  return v129;
}

uint64_t sub_10027E1E8(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  uint64_t v6 = *(void **)(a2 + 112);
  uint64_t v7 = *(void **)(a1 + 112);
  *(void *)(a1 + 112) = v6;
  id v8 = v6;

  uint64_t v9 = a3[9];
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  uint64_t v12 = type metadata accessor for TemperatureScaleConfiguration();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 24))(v10, v11, v12);
  uint64_t v13 = a3[10];
  id v14 = (void *)(a1 + v13);
  uint64_t v15 = (void *)(a2 + v13);
  *id v14 = *v15;
  v14[1] = v15[1];
  *(void *)(a1 + a3[11]) = *(void *)(a2 + a3[11]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v16 = a3[12];
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  id v19 = *(id *)v18;
  uint64_t v20 = *(void **)(v18 + 8);
  uint64_t v21 = *(void *)(v18 + 16);
  unsigned __int8 v22 = *(unsigned char *)(v18 + 24);
  sub_10027D4F8(*(id *)v18, v20, v21, v22);
  uint64_t v23 = *(void **)v17;
  uint64_t v24 = *(void **)(v17 + 8);
  uint64_t v25 = *(void *)(v17 + 16);
  *(void *)uint64_t v17 = v19;
  *(void *)(v17 + 8) = v20;
  *(void *)(v17 + 16) = v21;
  unsigned __int8 v26 = *(unsigned char *)(v17 + 24);
  *(unsigned char *)(v17 + 24) = v22;
  sub_10027D954(v23, v24, v25, v26);
  uint64_t v27 = a3[13];
  uint64_t v28 = (char *)(a1 + v27);
  uint64_t v29 = (char *)(a2 + v27);
  uint64_t v30 = type metadata accessor for TemperatureAveragesHeroChartViewModel.PeakMarkModel(0);
  int v31 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v28, 1, v30);
  int v32 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v29, 1, v30);
  if (v31)
  {
    if (!v32)
    {
      uint64_t v33 = type metadata accessor for Date();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 16))(v28, v29, v33);
      *(void *)&v28[*(int *)(v30 + 20)] = *(void *)&v29[*(int *)(v30 + 20)];
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v28, 0, 1, v30);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v32)
  {
    sub_10027ED60((uint64_t)v28, (void (*)(void))type metadata accessor for TemperatureAveragesHeroChartViewModel.PeakMarkModel);
LABEL_6:
    uint64_t v34 = sub_10017DF08(&qword_100E64FA0);
    memcpy(v28, v29, *(void *)(*(void *)(v34 - 8) + 64));
    goto LABEL_7;
  }
  uint64_t v66 = type metadata accessor for Date();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v66 - 8) + 24))(v28, v29, v66);
  *(void *)&v28[*(int *)(v30 + 20)] = *(void *)&v29[*(int *)(v30 + 20)];
LABEL_7:
  uint64_t v35 = a3[14];
  uint64_t v36 = (char *)(a1 + v35);
  uint64_t v37 = (char *)(a2 + v35);
  uint64_t v38 = (int *)type metadata accessor for PeakUpperMarkModel(0);
  int v39 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v36, 1, (uint64_t)v38);
  int v40 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v37, 1, (uint64_t)v38);
  if (v39)
  {
    if (!v40)
    {
      uint64_t v41 = type metadata accessor for Date();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v41 - 8) + 16))(v36, v37, v41);
      *(void *)&v36[v38[5]] = *(void *)&v37[v38[5]];
      uint64_t v42 = v38[6];
      uint64_t v43 = &v36[v42];
      uint64_t v44 = &v37[v42];
      *(void *)uint64_t v43 = *(void *)v44;
      *((void *)v43 + 1) = *((void *)v44 + 1);
      uint64_t v45 = v38[7];
      uint64_t v46 = &v36[v45];
      uint64_t v47 = &v37[v45];
      *(void *)uint64_t v46 = *(void *)v47;
      *((void *)v46 + 1) = *((void *)v47 + 1);
      uint64_t v48 = v38[8];
      uint64_t v49 = &v36[v48];
      uint64_t v50 = &v37[v48];
      *(void *)uint64_t v49 = *(void *)v50;
      *((void *)v49 + 1) = *((void *)v50 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v36, 0, 1, (uint64_t)v38);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v40)
  {
    sub_10027ED60((uint64_t)v36, (void (*)(void))type metadata accessor for PeakUpperMarkModel);
LABEL_12:
    uint64_t v51 = sub_10017DF08(&qword_100E64FA8);
    memcpy(v36, v37, *(void *)(*(void *)(v51 - 8) + 64));
    goto LABEL_13;
  }
  uint64_t v67 = type metadata accessor for Date();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v67 - 8) + 24))(v36, v37, v67);
  *(void *)&v36[v38[5]] = *(void *)&v37[v38[5]];
  uint64_t v68 = v38[6];
  uint64_t v69 = &v36[v68];
  uint64_t v70 = &v37[v68];
  *(void *)uint64_t v69 = *(void *)v70;
  *((void *)v69 + 1) = *((void *)v70 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v71 = v38[7];
  uint64_t v72 = &v36[v71];
  uint64_t v73 = &v37[v71];
  *(void *)uint64_t v72 = *(void *)v73;
  *((void *)v72 + 1) = *((void *)v73 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v74 = v38[8];
  uint64_t v75 = &v36[v74];
  uint64_t v76 = &v37[v74];
  *(void *)uint64_t v75 = *(void *)v76;
  *((void *)v75 + 1) = *((void *)v76 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_13:
  if (a1 != a2)
  {
    uint64_t v52 = a3[15];
    uint64_t v53 = a1 + v52;
    uint64_t v54 = a2 + v52;
    sub_10027ED60(a1 + v52, (void (*)(void))type metadata accessor for DetailHeroChartLollipopModel);
    type metadata accessor for DetailHeroChartLollipopModel(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(void *)uint64_t v53 = *(void *)v54;
      uint64_t active = type metadata accessor for DetailHeroChartActiveLollipopModel(0);
      uint64_t v56 = *(int *)(active + 20);
      uint64_t v57 = v53 + v56;
      uint64_t v58 = v54 + v56;
      uint64_t v59 = type metadata accessor for Date();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v59 - 8) + 16))(v57, v58, v59);
      uint64_t v60 = (int *)type metadata accessor for LollipopMarkModel(0);
      *(void *)(v57 + v60[5]) = *(void *)(v58 + v60[5]);
      *(void *)(v57 + v60[6]) = *(void *)(v58 + v60[6]);
      *(void *)(v57 + v60[7]) = *(void *)(v58 + v60[7]);
      uint64_t v61 = *(int *)(active + 24);
      uint64_t v62 = v53 + v61;
      uint64_t v63 = v54 + v61;
      type metadata accessor for LollipopDetailViewModel(0);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        *(void *)uint64_t v62 = *(void *)v63;
        *(void *)(v62 + 8) = *(void *)(v63 + 8);
        uint64_t v77 = (int *)type metadata accessor for TitleAndDetailLollipopDetailViewModel(0);
        uint64_t v78 = v77[5];
        uint64_t v130 = v63 + v78;
        uint64_t v132 = v62 + v78;
        uint64_t v79 = type metadata accessor for AttributedString();
        uint64_t v129 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v79 - 8) + 16);
        swift_bridgeObjectRetain();
        v129(v132, v130, v79);
        uint64_t v80 = v77[6];
        uint64_t v81 = (void *)(v62 + v80);
        uint64_t v82 = (void *)(v63 + v80);
        void *v81 = *v82;
        v81[1] = v82[1];
        uint64_t v83 = v77[7];
        uint64_t v84 = (void *)(v62 + v83);
        uint64_t v85 = (void *)(v63 + v83);
        *uint64_t v84 = *v85;
        v84[1] = v85[1];
        uint64_t v86 = v77[8];
        uint64_t v87 = (void *)(v62 + v86);
        uint64_t v88 = (void *)(v63 + v86);
        *uint64_t v87 = *v88;
        v87[1] = v88[1];
        uint64_t v89 = v77[9];
        uint64_t v90 = (void *)(v62 + v89);
        long long v91 = (void *)(v63 + v89);
        void *v90 = *v91;
        v90[1] = v91[1];
        uint64_t v92 = v77[10];
        uint64_t v93 = (void *)(v62 + v92);
        uint64_t v94 = (void *)(v63 + v92);
        *uint64_t v93 = *v94;
        v93[1] = v94[1];
        *(unsigned char *)(v62 + v77[11]) = *(unsigned char *)(v63 + v77[11]);
        swift_bridgeObjectRetain();
      }
      else
      {
        if (EnumCaseMultiPayload != 1)
        {
          *(void *)uint64_t v62 = *(void *)v63;
          *(void *)(v62 + 8) = *(void *)(v63 + 8);
          *(void *)(v62 + 16) = *(void *)(v63 + 16);
          *(void *)(v62 + 24) = *(void *)(v63 + 24);
          *(void *)(v62 + 32) = *(void *)(v63 + 32);
          *(void *)(v62 + 40) = *(void *)(v63 + 40);
LABEL_28:
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_storeEnumTagMultiPayload();
          swift_storeEnumTagMultiPayload();
          goto LABEL_29;
        }
        *(void *)uint64_t v62 = *(void *)v63;
        *(void *)(v62 + 8) = *(void *)(v63 + 8);
        *(void *)(v62 + 16) = *(void *)(v63 + 16);
        *(void *)(v62 + 24) = *(void *)(v63 + 24);
        *(void *)(v62 + 32) = *(void *)(v63 + 32);
        *(void *)(v62 + 40) = *(void *)(v63 + 40);
        *(void *)(v62 + 48) = *(void *)(v63 + 48);
        *(void *)(v62 + 56) = *(void *)(v63 + 56);
        *(unsigned char *)(v62 + 64) = *(unsigned char *)(v63 + 64);
        *(unsigned char *)(v62 + 65) = *(unsigned char *)(v63 + 65);
      }
    }
    else
    {
      type metadata accessor for LollipopDetailViewModel(0);
      int v65 = swift_getEnumCaseMultiPayload();
      if (v65 == 2)
      {
        *(void *)uint64_t v53 = *(void *)v54;
        *(void *)(v53 + 8) = *(void *)(v54 + 8);
        uint64_t v95 = (int *)type metadata accessor for TitleAndDetailLollipopDetailViewModel(0);
        uint64_t v96 = v95[5];
        uint64_t v133 = v54 + v96;
        uint64_t v134 = v53 + v96;
        uint64_t v97 = type metadata accessor for AttributedString();
        uint64_t v131 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v97 - 8) + 16);
        swift_bridgeObjectRetain();
        v131(v134, v133, v97);
        uint64_t v98 = v95[6];
        uint64_t v99 = (void *)(v53 + v98);
        uint64_t v100 = (void *)(v54 + v98);
        void *v99 = *v100;
        v99[1] = v100[1];
        uint64_t v101 = v95[7];
        uint64_t v102 = (void *)(v53 + v101);
        uint64_t v103 = (void *)(v54 + v101);
        *uint64_t v102 = *v103;
        v102[1] = v103[1];
        uint64_t v104 = v95[8];
        uint64_t v105 = (void *)(v53 + v104);
        uint64_t v106 = (void *)(v54 + v104);
        *uint64_t v105 = *v106;
        v105[1] = v106[1];
        uint64_t v107 = v95[9];
        uint64_t v108 = (void *)(v53 + v107);
        uint64_t v109 = (void *)(v54 + v107);
        *uint64_t v108 = *v109;
        v108[1] = v109[1];
        uint64_t v110 = v95[10];
        uint64_t v111 = (void *)(v53 + v110);
        uint64_t v112 = (void *)(v54 + v110);
        void *v111 = *v112;
        v111[1] = v112[1];
        *(unsigned char *)(v53 + v95[11]) = *(unsigned char *)(v54 + v95[11]);
        swift_bridgeObjectRetain();
      }
      else
      {
        if (v65 != 1)
        {
          *(void *)uint64_t v53 = *(void *)v54;
          *(void *)(v53 + 8) = *(void *)(v54 + 8);
          *(void *)(v53 + 16) = *(void *)(v54 + 16);
          *(void *)(v53 + 24) = *(void *)(v54 + 24);
          *(void *)(v53 + 32) = *(void *)(v54 + 32);
          *(void *)(v53 + 40) = *(void *)(v54 + 40);
          goto LABEL_28;
        }
        *(void *)uint64_t v53 = *(void *)v54;
        *(void *)(v53 + 8) = *(void *)(v54 + 8);
        *(void *)(v53 + 16) = *(void *)(v54 + 16);
        *(void *)(v53 + 24) = *(void *)(v54 + 24);
        *(void *)(v53 + 32) = *(void *)(v54 + 32);
        *(void *)(v53 + 40) = *(void *)(v54 + 40);
        *(void *)(v53 + 48) = *(void *)(v54 + 48);
        *(void *)(v53 + 56) = *(void *)(v54 + 56);
        *(unsigned char *)(v53 + 64) = *(unsigned char *)(v54 + 64);
        *(unsigned char *)(v53 + 65) = *(unsigned char *)(v54 + 65);
      }
    }
    swift_bridgeObjectRetain();
    goto LABEL_28;
  }
LABEL_29:
  uint64_t v113 = a3[16];
  uint64_t v114 = a1 + v113;
  uint64_t v115 = a2 + v113;
  uint64_t v116 = type metadata accessor for Date();
  uint64_t v117 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v116 - 8) + 24);
  v117(v114, v115, v116);
  v117(a1 + a3[17], a2 + a3[17], v116);
  uint64_t v118 = a3[18];
  uint64_t v119 = a1 + v118;
  uint64_t v120 = a2 + v118;
  uint64_t v121 = type metadata accessor for DetailChartGradientModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v121 - 8) + 24))(v119, v120, v121);
  uint64_t v122 = a3[19];
  uint64_t v123 = (void *)(a1 + v122);
  uint64_t v124 = (void *)(a2 + v122);
  void *v123 = *v124;
  v123[1] = v124[1];
  uint64_t v125 = a3[20];
  uint64_t v126 = (void *)(a1 + v125);
  uint64_t v127 = (void *)(a2 + v125);
  *uint64_t v126 = *v127;
  v126[1] = v127[1];
  return a1;
}

uint64_t sub_10027ED60(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_10027EDB8(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  long long v7 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v7;
  long long v8 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v8;
  long long v9 = *(_OWORD *)(a2 + 89);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  uint64_t v10 = a3[9];
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  *(_OWORD *)(a1 + 89) = v9;
  uint64_t v13 = type metadata accessor for TemperatureScaleConfiguration();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
  uint64_t v14 = a3[11];
  *(_OWORD *)(a1 + a3[10]) = *(_OWORD *)(a2 + a3[10]);
  *(void *)(a1 + v14) = *(void *)(a2 + v14);
  uint64_t v15 = a3[12];
  uint64_t v16 = a3[13];
  uint64_t v17 = (_OWORD *)(a1 + v15);
  uint64_t v18 = (_OWORD *)(a2 + v15);
  _OWORD *v17 = *v18;
  *(_OWORD *)((char *)v17 + 9) = *(_OWORD *)((char *)v18 + 9);
  id v19 = (char *)(a1 + v16);
  uint64_t v20 = (char *)(a2 + v16);
  uint64_t v21 = type metadata accessor for TemperatureAveragesHeroChartViewModel.PeakMarkModel(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v20, 1, v21))
  {
    uint64_t v22 = sub_10017DF08(&qword_100E64FA0);
    memcpy(v19, v20, *(void *)(*(void *)(v22 - 8) + 64));
  }
  else
  {
    uint64_t v23 = type metadata accessor for Date();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 32))(v19, v20, v23);
    *(void *)&v19[*(int *)(v21 + 20)] = *(void *)&v20[*(int *)(v21 + 20)];
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v19, 0, 1, v21);
  }
  uint64_t v24 = a3[14];
  uint64_t v25 = (char *)(a1 + v24);
  unsigned __int8 v26 = (char *)(a2 + v24);
  uint64_t v27 = (int *)type metadata accessor for PeakUpperMarkModel(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v26, 1, (uint64_t)v27))
  {
    uint64_t v28 = sub_10017DF08(&qword_100E64FA8);
    memcpy(v25, v26, *(void *)(*(void *)(v28 - 8) + 64));
  }
  else
  {
    uint64_t v29 = type metadata accessor for Date();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 32))(v25, v26, v29);
    *(void *)&v25[v27[5]] = *(void *)&v26[v27[5]];
    *(_OWORD *)&v25[v27[6]] = *(_OWORD *)&v26[v27[6]];
    *(_OWORD *)&v25[v27[7]] = *(_OWORD *)&v26[v27[7]];
    *(_OWORD *)&v25[v27[8]] = *(_OWORD *)&v26[v27[8]];
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v25, 0, 1, (uint64_t)v27);
  }
  uint64_t v30 = a3[15];
  int v31 = (void *)(a1 + v30);
  int v32 = (void *)(a2 + v30);
  type metadata accessor for DetailHeroChartLollipopModel(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    void *v31 = *v32;
    uint64_t active = type metadata accessor for DetailHeroChartActiveLollipopModel(0);
    uint64_t v34 = *(int *)(active + 20);
    uint64_t v35 = (char *)v31 + v34;
    uint64_t v36 = (char *)v32 + v34;
    uint64_t v37 = type metadata accessor for Date();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 32))(v35, v36, v37);
    uint64_t v38 = (int *)type metadata accessor for LollipopMarkModel(0);
    *(void *)&v35[v38[5]] = *(void *)&v36[v38[5]];
    *(void *)&v35[v38[6]] = *(void *)&v36[v38[6]];
    *(void *)&v35[v38[7]] = *(void *)&v36[v38[7]];
    uint64_t v39 = *(int *)(active + 24);
    int v40 = (_OWORD *)((char *)v31 + v39);
    uint64_t v41 = (_OWORD *)((char *)v32 + v39);
    uint64_t v42 = type metadata accessor for LollipopDetailViewModel(0);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      *int v40 = *v41;
      uint64_t v43 = (int *)type metadata accessor for TitleAndDetailLollipopDetailViewModel(0);
      uint64_t v44 = v43[5];
      uint64_t v45 = (char *)v40 + v44;
      uint64_t v46 = (char *)v41 + v44;
      uint64_t v47 = type metadata accessor for AttributedString();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v47 - 8) + 32))(v45, v46, v47);
      *(_OWORD *)((char *)v40 + v43[6]) = *(_OWORD *)((char *)v41 + v43[6]);
      *(_OWORD *)((char *)v40 + v43[7]) = *(_OWORD *)((char *)v41 + v43[7]);
      *(_OWORD *)((char *)v40 + v43[8]) = *(_OWORD *)((char *)v41 + v43[8]);
      *(_OWORD *)((char *)v40 + v43[9]) = *(_OWORD *)((char *)v41 + v43[9]);
      *(_OWORD *)((char *)v40 + v43[10]) = *(_OWORD *)((char *)v41 + v43[10]);
      *((unsigned char *)v40 + v43[11]) = *((unsigned char *)v41 + v43[11]);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v40, v41, *(void *)(*(void *)(v42 - 8) + 64));
    }
  }
  else
  {
    uint64_t v48 = type metadata accessor for LollipopDetailViewModel(0);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      *(_OWORD *)int v31 = *(_OWORD *)v32;
      uint64_t v49 = (int *)type metadata accessor for TitleAndDetailLollipopDetailViewModel(0);
      uint64_t v50 = v49[5];
      uint64_t v51 = (char *)v31 + v50;
      uint64_t v52 = (char *)v32 + v50;
      uint64_t v53 = type metadata accessor for AttributedString();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v53 - 8) + 32))(v51, v52, v53);
      *(_OWORD *)((char *)v31 + v49[6]) = *(_OWORD *)((char *)v32 + v49[6]);
      *(_OWORD *)((char *)v31 + v49[7]) = *(_OWORD *)((char *)v32 + v49[7]);
      *(_OWORD *)((char *)v31 + v49[8]) = *(_OWORD *)((char *)v32 + v49[8]);
      *(_OWORD *)((char *)v31 + v49[9]) = *(_OWORD *)((char *)v32 + v49[9]);
      *(_OWORD *)((char *)v31 + v49[10]) = *(_OWORD *)((char *)v32 + v49[10]);
      *((unsigned char *)v31 + v49[11]) = *((unsigned char *)v32 + v49[11]);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v31, v32, *(void *)(*(void *)(v48 - 8) + 64));
    }
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v54 = a3[16];
  uint64_t v55 = a1 + v54;
  uint64_t v56 = a2 + v54;
  uint64_t v57 = type metadata accessor for Date();
  uint64_t v58 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v57 - 8) + 32);
  v58(v55, v56, v57);
  v58(a1 + a3[17], a2 + a3[17], v57);
  uint64_t v59 = a3[18];
  uint64_t v60 = a1 + v59;
  uint64_t v61 = a2 + v59;
  uint64_t v62 = type metadata accessor for DetailChartGradientModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v62 - 8) + 32))(v60, v61, v62);
  uint64_t v63 = a3[20];
  *(_OWORD *)(a1 + a3[19]) = *(_OWORD *)(a2 + a3[19]);
  *(_OWORD *)(a1 + v63) = *(_OWORD *)(a2 + v63);
  return a1;
}

uint64_t sub_10027F3D8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v9;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v10;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  uint64_t v11 = *(void **)(a1 + 112);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);

  uint64_t v12 = a3[9];
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = type metadata accessor for TemperatureScaleConfiguration();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 40))(v13, v14, v15);
  uint64_t v16 = a3[11];
  *(_OWORD *)(a1 + a3[10]) = *(_OWORD *)(a2 + a3[10]);
  *(void *)(a1 + v16) = *(void *)(a2 + v16);
  swift_bridgeObjectRelease();
  uint64_t v17 = a3[12];
  uint64_t v18 = a1 + v17;
  uint64_t v19 = a2 + v17;
  uint64_t v20 = *(void *)(v19 + 16);
  char v21 = *(unsigned char *)(v19 + 24);
  uint64_t v22 = *(void **)v18;
  uint64_t v23 = *(void **)(v18 + 8);
  uint64_t v24 = *(void *)(v18 + 16);
  *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
  *(void *)(v18 + 16) = v20;
  unsigned __int8 v25 = *(unsigned char *)(v18 + 24);
  *(unsigned char *)(v18 + 24) = v21;
  sub_10027D954(v22, v23, v24, v25);
  uint64_t v26 = a3[13];
  uint64_t v27 = (char *)(a1 + v26);
  uint64_t v28 = (char *)(a2 + v26);
  uint64_t v29 = type metadata accessor for TemperatureAveragesHeroChartViewModel.PeakMarkModel(0);
  int v30 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v27, 1, v29);
  int v31 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v28, 1, v29);
  if (v30)
  {
    if (!v31)
    {
      uint64_t v32 = type metadata accessor for Date();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 32))(v27, v28, v32);
      *(void *)&v27[*(int *)(v29 + 20)] = *(void *)&v28[*(int *)(v29 + 20)];
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v27, 0, 1, v29);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v31)
  {
    sub_10027ED60((uint64_t)v27, (void (*)(void))type metadata accessor for TemperatureAveragesHeroChartViewModel.PeakMarkModel);
LABEL_6:
    uint64_t v33 = sub_10017DF08(&qword_100E64FA0);
    memcpy(v27, v28, *(void *)(*(void *)(v33 - 8) + 64));
    goto LABEL_7;
  }
  uint64_t v66 = type metadata accessor for Date();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v66 - 8) + 40))(v27, v28, v66);
  *(void *)&v27[*(int *)(v29 + 20)] = *(void *)&v28[*(int *)(v29 + 20)];
LABEL_7:
  uint64_t v34 = a3[14];
  uint64_t v35 = (char *)(a1 + v34);
  uint64_t v36 = (char *)(a2 + v34);
  uint64_t v37 = (int *)type metadata accessor for PeakUpperMarkModel(0);
  int v38 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v35, 1, (uint64_t)v37);
  int v39 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v36, 1, (uint64_t)v37);
  if (v38)
  {
    if (!v39)
    {
      uint64_t v40 = type metadata accessor for Date();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v40 - 8) + 32))(v35, v36, v40);
      *(void *)&v35[v37[5]] = *(void *)&v36[v37[5]];
      *(_OWORD *)&v35[v37[6]] = *(_OWORD *)&v36[v37[6]];
      *(_OWORD *)&v35[v37[7]] = *(_OWORD *)&v36[v37[7]];
      *(_OWORD *)&v35[v37[8]] = *(_OWORD *)&v36[v37[8]];
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v35, 0, 1, (uint64_t)v37);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v39)
  {
    sub_10027ED60((uint64_t)v35, (void (*)(void))type metadata accessor for PeakUpperMarkModel);
LABEL_12:
    uint64_t v41 = sub_10017DF08(&qword_100E64FA8);
    memcpy(v35, v36, *(void *)(*(void *)(v41 - 8) + 64));
    goto LABEL_13;
  }
  uint64_t v67 = type metadata accessor for Date();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v67 - 8) + 40))(v35, v36, v67);
  *(void *)&v35[v37[5]] = *(void *)&v36[v37[5]];
  uint64_t v68 = v37[6];
  uint64_t v69 = &v35[v68];
  uint64_t v70 = &v36[v68];
  uint64_t v72 = *(void *)v70;
  uint64_t v71 = *((void *)v70 + 1);
  *(void *)uint64_t v69 = v72;
  *((void *)v69 + 1) = v71;
  swift_bridgeObjectRelease();
  uint64_t v73 = v37[7];
  uint64_t v74 = &v35[v73];
  uint64_t v75 = &v36[v73];
  uint64_t v77 = *(void *)v75;
  uint64_t v76 = *((void *)v75 + 1);
  *(void *)uint64_t v74 = v77;
  *((void *)v74 + 1) = v76;
  swift_bridgeObjectRelease();
  uint64_t v78 = v37[8];
  uint64_t v79 = &v35[v78];
  uint64_t v80 = &v36[v78];
  uint64_t v82 = *(void *)v80;
  uint64_t v81 = *((void *)v80 + 1);
  *(void *)uint64_t v79 = v82;
  *((void *)v79 + 1) = v81;
  swift_bridgeObjectRelease();
LABEL_13:
  if (a1 != a2)
  {
    uint64_t v42 = a3[15];
    uint64_t v43 = (void *)(a1 + v42);
    uint64_t v44 = (void *)(a2 + v42);
    sub_10027ED60(a1 + v42, (void (*)(void))type metadata accessor for DetailHeroChartLollipopModel);
    type metadata accessor for DetailHeroChartLollipopModel(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      void *v43 = *v44;
      uint64_t active = type metadata accessor for DetailHeroChartActiveLollipopModel(0);
      uint64_t v46 = *(int *)(active + 20);
      uint64_t v47 = (char *)v43 + v46;
      uint64_t v48 = (char *)v44 + v46;
      uint64_t v49 = type metadata accessor for Date();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v49 - 8) + 32))(v47, v48, v49);
      uint64_t v50 = (int *)type metadata accessor for LollipopMarkModel(0);
      *(void *)&v47[v50[5]] = *(void *)&v48[v50[5]];
      *(void *)&v47[v50[6]] = *(void *)&v48[v50[6]];
      *(void *)&v47[v50[7]] = *(void *)&v48[v50[7]];
      uint64_t v51 = *(int *)(active + 24);
      uint64_t v52 = (_OWORD *)((char *)v43 + v51);
      uint64_t v53 = (_OWORD *)((char *)v44 + v51);
      uint64_t v54 = type metadata accessor for LollipopDetailViewModel(0);
      if (swift_getEnumCaseMultiPayload() == 2)
      {
        _OWORD *v52 = *v53;
        uint64_t v55 = (int *)type metadata accessor for TitleAndDetailLollipopDetailViewModel(0);
        uint64_t v56 = v55[5];
        uint64_t v57 = (char *)v52 + v56;
        uint64_t v58 = (char *)v53 + v56;
        uint64_t v59 = type metadata accessor for AttributedString();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v59 - 8) + 32))(v57, v58, v59);
        *(_OWORD *)((char *)v52 + v55[6]) = *(_OWORD *)((char *)v53 + v55[6]);
        *(_OWORD *)((char *)v52 + v55[7]) = *(_OWORD *)((char *)v53 + v55[7]);
        *(_OWORD *)((char *)v52 + v55[8]) = *(_OWORD *)((char *)v53 + v55[8]);
        *(_OWORD *)((char *)v52 + v55[9]) = *(_OWORD *)((char *)v53 + v55[9]);
        *(_OWORD *)((char *)v52 + v55[10]) = *(_OWORD *)((char *)v53 + v55[10]);
        *((unsigned char *)v52 + v55[11]) = *((unsigned char *)v53 + v55[11]);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v52, v53, *(void *)(*(void *)(v54 - 8) + 64));
      }
    }
    else
    {
      uint64_t v60 = type metadata accessor for LollipopDetailViewModel(0);
      if (swift_getEnumCaseMultiPayload() == 2)
      {
        *(_OWORD *)uint64_t v43 = *(_OWORD *)v44;
        uint64_t v61 = (int *)type metadata accessor for TitleAndDetailLollipopDetailViewModel(0);
        uint64_t v62 = v61[5];
        uint64_t v63 = (char *)v43 + v62;
        uint64_t v64 = (char *)v44 + v62;
        uint64_t v65 = type metadata accessor for AttributedString();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v65 - 8) + 32))(v63, v64, v65);
        *(_OWORD *)((char *)v43 + v61[6]) = *(_OWORD *)((char *)v44 + v61[6]);
        *(_OWORD *)((char *)v43 + v61[7]) = *(_OWORD *)((char *)v44 + v61[7]);
        *(_OWORD *)((char *)v43 + v61[8]) = *(_OWORD *)((char *)v44 + v61[8]);
        *(_OWORD *)((char *)v43 + v61[9]) = *(_OWORD *)((char *)v44 + v61[9]);
        *(_OWORD *)((char *)v43 + v61[10]) = *(_OWORD *)((char *)v44 + v61[10]);
        *((unsigned char *)v43 + v61[11]) = *((unsigned char *)v44 + v61[11]);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v43, v44, *(void *)(*(void *)(v60 - 8) + 64));
      }
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v83 = a3[16];
  uint64_t v84 = a1 + v83;
  uint64_t v85 = a2 + v83;
  uint64_t v86 = type metadata accessor for Date();
  uint64_t v87 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v86 - 8) + 40);
  v87(v84, v85, v86);
  v87(a1 + a3[17], a2 + a3[17], v86);
  uint64_t v88 = a3[18];
  uint64_t v89 = a1 + v88;
  uint64_t v90 = a2 + v88;
  uint64_t v91 = type metadata accessor for DetailChartGradientModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v91 - 8) + 40))(v89, v90, v91);
  uint64_t v92 = a3[20];
  *(_OWORD *)(a1 + a3[19]) = *(_OWORD *)(a2 + a3[19]);
  *(_OWORD *)(a1 + v92) = *(_OWORD *)(a2 + v92);
  return a1;
}

uint64_t sub_10027FC04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10027FC18);
}

uint64_t sub_10027FC18(uint64_t a1, uint64_t a2, int *a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    type metadata accessor for TemperatureScaleConfiguration();
    sub_100162F30();
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a3[9];
    }
    else
    {
      sub_10017DF08(&qword_100E64FA0);
      sub_100162F30();
      if (*(_DWORD *)(v13 + 84) == a2)
      {
        uint64_t v10 = v12;
        uint64_t v11 = a3[13];
      }
      else
      {
        sub_10017DF08(&qword_100E64FA8);
        sub_100162F30();
        if (*(_DWORD *)(v15 + 84) == a2)
        {
          uint64_t v10 = v14;
          uint64_t v11 = a3[14];
        }
        else
        {
          type metadata accessor for DetailHeroChartLollipopModel(0);
          sub_100162F30();
          if (*(_DWORD *)(v17 + 84) == a2)
          {
            uint64_t v10 = v16;
            uint64_t v11 = a3[15];
          }
          else
          {
            type metadata accessor for Date();
            sub_100162F30();
            if (*(_DWORD *)(v19 + 84) == a2)
            {
              uint64_t v10 = v18;
              uint64_t v11 = a3[16];
            }
            else
            {
              uint64_t v10 = type metadata accessor for DetailChartGradientModel();
              uint64_t v11 = a3[18];
            }
          }
        }
      }
    }
    return _s7Weather24LocationCompositionStateOwet_0(a1 + v11, a2, v10);
  }
}

uint64_t sub_10027FD5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10027FD70);
}

uint64_t sub_10027FD70(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    type metadata accessor for TemperatureScaleConfiguration();
    sub_100162F30();
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a4[9];
    }
    else
    {
      sub_10017DF08(&qword_100E64FA0);
      sub_100162F30();
      if (*(_DWORD *)(v13 + 84) == a3)
      {
        uint64_t v10 = v12;
        uint64_t v11 = a4[13];
      }
      else
      {
        sub_10017DF08(&qword_100E64FA8);
        sub_100162F30();
        if (*(_DWORD *)(v15 + 84) == a3)
        {
          uint64_t v10 = v14;
          uint64_t v11 = a4[14];
        }
        else
        {
          type metadata accessor for DetailHeroChartLollipopModel(0);
          sub_100162F30();
          if (*(_DWORD *)(v17 + 84) == a3)
          {
            uint64_t v10 = v16;
            uint64_t v11 = a4[15];
          }
          else
          {
            type metadata accessor for Date();
            sub_100162F30();
            if (*(_DWORD *)(v19 + 84) == a3)
            {
              uint64_t v10 = v18;
              uint64_t v11 = a4[16];
            }
            else
            {
              uint64_t v10 = type metadata accessor for DetailChartGradientModel();
              uint64_t v11 = a4[18];
            }
          }
        }
      }
    }
    return _s7Weather24LocationCompositionStateOwst_0(v5 + v11, a2, a2, v10);
  }
  return result;
}

uint64_t type metadata accessor for TemperatureAveragesHeroChartViewModel(uint64_t a1)
{
  return sub_10018678C(a1, (uint64_t *)&unk_100E65008);
}

void sub_10027FED0()
{
  type metadata accessor for TemperatureScaleConfiguration();
  if (v0 <= 0x3F)
  {
    sub_100280114(319, &qword_100E65018, (void (*)(uint64_t))type metadata accessor for TemperatureAveragesHeroChartViewModel.PeakMarkModel);
    if (v1 <= 0x3F)
    {
      sub_100280114(319, (unint64_t *)&unk_100E65020, (void (*)(uint64_t))type metadata accessor for PeakUpperMarkModel);
      if (v2 <= 0x3F)
      {
        type metadata accessor for DetailHeroChartLollipopModel(319);
        if (v3 <= 0x3F)
        {
          type metadata accessor for Date();
          if (v4 <= 0x3F)
          {
            type metadata accessor for DetailChartGradientModel();
            if (v5 <= 0x3F) {
              swift_initStructMetadata();
            }
          }
        }
      }
    }
  }
}

void sub_100280114(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = type metadata accessor for Optional();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t *sub_100280168(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for Date();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
  }
  return a1;
}

uint64_t sub_100280234(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Date();
  unint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(a1, v2);
}

uint64_t sub_100280298(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_100280314(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_100280390(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_10028040C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_100280488(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10028049C);
}

uint64_t sub_10028049C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Date();

  return _s7Weather24LocationCompositionStateOwet_0(a1, a2, v4);
}

uint64_t sub_1002804E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1002804F8);
}

uint64_t sub_1002804F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Date();

  return _s7Weather24LocationCompositionStateOwst_0(a1, a2, a2, v4);
}

uint64_t sub_100280544()
{
  uint64_t result = type metadata accessor for Date();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1002805DC@<X0>(_OWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char a7@<W6>, uint64_t a8@<X7>, uint64_t a9@<X8>, double a10@<D0>, double a11@<D1>, double a12@<D2>, double a13@<D3>, double a14@<D4>, double a15@<D5>, uint64_t a16, uint64_t a17, long long a18, uint64_t a19, char a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  long long v32 = a1[1];
  *(_OWORD *)a9 = *a1;
  *(_OWORD *)(a9 + 16) = v32;
  long long v33 = a1[3];
  *(_OWORD *)(a9 + 32) = a1[2];
  *(_OWORD *)(a9 + 48) = v33;
  *(void *)(a9 + 64) = a2;
  *(void *)(a9 + 72) = a3;
  *(void *)(a9 + 80) = a4;
  *(void *)(a9 + 88) = a5;
  *(void *)(a9 + 96) = a6;
  *(unsigned char *)(a9 + 104) = a7;
  *(void *)(a9 + 112) = a8;
  uint64_t v34 = (int *)type metadata accessor for TemperatureAveragesHeroChartViewModel(0);
  type metadata accessor for TemperatureScaleConfiguration();
  sub_100162E4C();
  sub_1001190D4();
  v35();
  uint64_t v36 = (double *)(a9 + v34[10]);
  *uint64_t v36 = a10;
  v36[1] = a11;
  *(void *)(a9 + v34[11]) = a17;
  uint64_t v37 = a9 + v34[12];
  *(_OWORD *)uint64_t v37 = a18;
  *(void *)(v37 + 16) = a19;
  *(unsigned char *)(v37 + 24) = a20;
  sub_1001278D0(a21, a9 + v34[13], &qword_100E64FA0);
  sub_1001278D0(a22, a9 + v34[14], &qword_100E64FA8);
  sub_1002810D8(a23, a9 + v34[15], (void (*)(void))type metadata accessor for DetailHeroChartLollipopModel);
  uint64_t v38 = a9 + v34[16];
  uint64_t v39 = type metadata accessor for Date();
  sub_100162E4C();
  uint64_t v41 = *(void (**)(uint64_t, uint64_t, uint64_t))(v40 + 32);
  v41(v38, a24, v39);
  v41(a9 + v34[17], a25, v39);
  type metadata accessor for DetailChartGradientModel();
  sub_100162E4C();
  sub_1001190D4();
  uint64_t result = v42();
  uint64_t v44 = (double *)(a9 + v34[19]);
  *uint64_t v44 = a12;
  v44[1] = a13;
  uint64_t v45 = (double *)(a9 + v34[20]);
  *uint64_t v45 = a14;
  v45[1] = a15;
  return result;
}

uint64_t sub_10028081C(void *a1, void *a2)
{
  uint64_t v101 = type metadata accessor for PeakUpperMarkModel(0);
  sub_100162E4C();
  __chkstk_darwin(v4);
  sub_100109314();
  uint64_t v97 = v5;
  uint64_t v100 = sub_10017DF08(&qword_100E65120);
  sub_100162E4C();
  __chkstk_darwin(v6);
  sub_100109314();
  uint64_t v102 = v7;
  uint64_t v8 = sub_10017DF08(&qword_100E64FA8);
  __chkstk_darwin(v8 - 8);
  sub_100162EF8();
  uint64_t v98 = v9;
  sub_1001626D4();
  __chkstk_darwin(v10);
  uint64_t v104 = (uint64_t)&v96 - v11;
  sub_1001626D4();
  __chkstk_darwin(v12);
  uint64_t v105 = (uint64_t)&v96 - v13;
  uint64_t v109 = type metadata accessor for TemperatureAveragesHeroChartViewModel.PeakMarkModel(0);
  sub_100162E4C();
  __chkstk_darwin(v14);
  sub_100109314();
  uint64_t v99 = v15;
  uint64_t v106 = sub_10017DF08(&qword_100E65128);
  sub_100162E4C();
  __chkstk_darwin(v16);
  sub_100109314();
  uint64_t v110 = v17;
  uint64_t v18 = sub_10017DF08(&qword_100E64FA0);
  __chkstk_darwin(v18 - 8);
  sub_100162EF8();
  uint64_t v103 = v19;
  sub_1001626D4();
  __chkstk_darwin(v20);
  uint64_t v107 = (uint64_t)&v96 - v21;
  sub_1001626D4();
  __chkstk_darwin(v22);
  uint64_t v108 = (uint64_t)&v96 - v23;
  uint64_t v24 = *a1;
  uint64_t v25 = a1[1];
  uint64_t v26 = a1[2];
  uint64_t v27 = a1[3];
  uint64_t v28 = a1[4];
  uint64_t v29 = a1[5];
  uint64_t v30 = a1[6];
  uint64_t v111 = a1;
  uint64_t v112 = a2;
  uint64_t v113 = a1[7];
  uint64_t v114 = v30;
  uint64_t v31 = a2[2];
  uint64_t v32 = a2[3];
  uint64_t v33 = a2[4];
  uint64_t v34 = a2[5];
  BOOL v35 = v24 == *a2 && v25 == a2[1];
  uint64_t v37 = a2[6];
  uint64_t v36 = a2[7];
  if (!v35)
  {
    _stringCompareWithSmolCheck(_:_:expecting:)();
    uint64_t result = sub_1001190E0();
    if ((v39 & 1) == 0) {
      return result;
    }
  }
  if (v26 != v31 || v27 != v32)
  {
    _stringCompareWithSmolCheck(_:_:expecting:)();
    uint64_t result = sub_1001190E0();
    if ((v41 & 1) == 0) {
      return result;
    }
  }
  if (v28 != v33 || v29 != v34)
  {
    _stringCompareWithSmolCheck(_:_:expecting:)();
    uint64_t result = sub_1001190E0();
    if ((v43 & 1) == 0) {
      return result;
    }
  }
  if (v114 != v37 || v113 != v36)
  {
    _stringCompareWithSmolCheck(_:_:expecting:)();
    uint64_t result = sub_1001190E0();
    if ((v45 & 1) == 0) {
      return result;
    }
  }
  uint64_t v46 = v111;
  uint64_t v47 = v112;
  sub_100BD8D14();
  if ((v48 & 1) == 0) {
    return 0;
  }
  sub_100BD8D14();
  if ((v49 & 1) == 0) {
    return 0;
  }
  uint64_t v50 = v46[11];
  uint64_t v51 = v46[12];
  int v52 = *((unsigned __int8 *)v46 + 104);
  uint64_t v53 = v47[11];
  uint64_t v54 = v47[12];
  int v55 = *((unsigned __int8 *)v47 + 104);
  sub_100BD8DC4();
  if ((v56 & 1) == 0) {
    return 0;
  }
  if (v50 == v53 && v51 == v54)
  {
    if (v52 != v55) {
      return 0;
    }
  }
  else
  {
    _stringCompareWithSmolCheck(_:_:expecting:)();
    uint64_t result = sub_1001190E0();
    if (v58 & 1) == 0 || ((v52 ^ v55)) {
      return result;
    }
  }
  sub_1000C83A0();
  uint64_t v60 = v111;
  uint64_t v59 = v112;
  if ((static NSObject.== infix(_:_:)() & 1) == 0) {
    return 0;
  }
  uint64_t v61 = (int *)type metadata accessor for TemperatureAveragesHeroChartViewModel(0);
  if ((static TemperatureScaleConfiguration.== infix(_:_:)() & 1) == 0) {
    return 0;
  }
  uint64_t v62 = v61[10];
  double v63 = *(double *)((char *)v60 + v62);
  double v64 = *(double *)((char *)v60 + v62 + 8);
  uint64_t v65 = (double *)((char *)v59 + v62);
  if (v63 != *v65 || v64 != v65[1]) {
    return 0;
  }
  if ((sub_100BD8D5C(*(void *)((char *)v60 + v61[11]), *(void *)((char *)v59 + v61[11])) & 1) == 0) {
    return 0;
  }
  uint64_t v67 = v61[12];
  if (!sub_1007E0D4C(*(void *)((char *)v60 + v67), *(void *)((char *)v60 + v67 + 8), *(void *)((char *)v60 + v67 + 16), *((unsigned char *)v60 + v67 + 24), *(void *)((char *)v59 + v67), *(void *)((char *)v59 + v67 + 8), *(void *)((char *)v59 + v67 + 16), *((unsigned char *)v59 + v67 + 24)))return 0; {
  uint64_t v68 = v108;
  }
  sub_1001262FC((uint64_t)v60 + v61[13], v108, &qword_100E64FA0);
  uint64_t v69 = v107;
  sub_1001262FC((uint64_t)v59 + v61[13], v107, &qword_100E64FA0);
  uint64_t v70 = v110;
  uint64_t v71 = v110 + *(int *)(v106 + 48);
  sub_1001262FC(v68, v110, &qword_100E64FA0);
  sub_1001262FC(v69, v71, &qword_100E64FA0);
  uint64_t v72 = v109;
  if (_s7Weather24LocationCompositionStateOwet_0(v70, 1, v109) != 1)
  {
    uint64_t v73 = v103;
    sub_1001262FC(v70, v103, &qword_100E64FA0);
    sub_10019E650();
    if (v35)
    {
      sub_1001781AC(v69, &qword_100E64FA0);
      sub_1001781AC(v68, &qword_100E64FA0);
      sub_10027ED60(v73, (void (*)(void))type metadata accessor for TemperatureAveragesHeroChartViewModel.PeakMarkModel);
LABEL_48:
      uint64_t v74 = &qword_100E65128;
      uint64_t v75 = v70;
LABEL_60:
      sub_1001781AC(v75, v74);
      return 0;
    }
    uint64_t v76 = v71;
    uint64_t v77 = v99;
    sub_1002810D8(v76, v99, (void (*)(void))type metadata accessor for TemperatureAveragesHeroChartViewModel.PeakMarkModel);
    char v78 = static Date.== infix(_:_:)();
    if ((v78 & 1) == 0)
    {
      sub_10027ED60(v77, (void (*)(void))type metadata accessor for TemperatureAveragesHeroChartViewModel.PeakMarkModel);
      sub_1001781AC(v69, &qword_100E64FA0);
      sub_1001781AC(v68, &qword_100E64FA0);
      sub_10027ED60(v73, (void (*)(void))type metadata accessor for TemperatureAveragesHeroChartViewModel.PeakMarkModel);
      uint64_t v75 = v70;
      uint64_t v74 = &qword_100E64FA0;
      goto LABEL_60;
    }
    uint64_t v79 = *(int *)(v72 + 20);
    double v80 = *(double *)(v73 + v79);
    double v81 = *(double *)(v77 + v79);
    sub_10027ED60(v77, (void (*)(void))type metadata accessor for TemperatureAveragesHeroChartViewModel.PeakMarkModel);
    sub_1001781AC(v69, &qword_100E64FA0);
    sub_1001781AC(v68, &qword_100E64FA0);
    sub_10027ED60(v73, (void (*)(void))type metadata accessor for TemperatureAveragesHeroChartViewModel.PeakMarkModel);
    sub_1001781AC(v70, &qword_100E64FA0);
    if (v80 == v81) {
      goto LABEL_51;
    }
    return 0;
  }
  sub_1001781AC(v69, &qword_100E64FA0);
  sub_1001781AC(v68, &qword_100E64FA0);
  sub_10019E650();
  if (!v35) {
    goto LABEL_48;
  }
  sub_1001781AC(v70, &qword_100E64FA0);
LABEL_51:
  uint64_t v82 = v105;
  sub_1001262FC((uint64_t)v60 + v61[14], v105, &qword_100E64FA8);
  uint64_t v83 = v104;
  sub_1001262FC((uint64_t)v59 + v61[14], v104, &qword_100E64FA8);
  uint64_t v84 = v102;
  uint64_t v85 = v102 + *(int *)(v100 + 48);
  sub_1001262FC(v82, v102, &qword_100E64FA8);
  sub_1001262FC(v83, v85, &qword_100E64FA8);
  if (_s7Weather24LocationCompositionStateOwet_0(v84, 1, v101) == 1)
  {
    sub_1001781AC(v104, &qword_100E64FA8);
    sub_1001781AC(v105, &qword_100E64FA8);
    sub_10019E650();
    if (!v35) {
      goto LABEL_58;
    }
    sub_1001781AC(v84, &qword_100E64FA8);
  }
  else
  {
    uint64_t v86 = v98;
    sub_1001262FC(v84, v98, &qword_100E64FA8);
    sub_10019E650();
    if (v35)
    {
      sub_1001781AC(v104, &qword_100E64FA8);
      sub_1001781AC(v105, &qword_100E64FA8);
      sub_10027ED60(v86, (void (*)(void))type metadata accessor for PeakUpperMarkModel);
LABEL_58:
      uint64_t v74 = &qword_100E65120;
      uint64_t v75 = v84;
      goto LABEL_60;
    }
    uint64_t v87 = v85;
    uint64_t v88 = v97;
    sub_1002810D8(v87, v97, (void (*)(void))type metadata accessor for PeakUpperMarkModel);
    char v89 = sub_10099C154(v86, v88);
    sub_10027ED60(v88, (void (*)(void))type metadata accessor for PeakUpperMarkModel);
    sub_1001781AC(v104, &qword_100E64FA8);
    sub_1001781AC(v105, &qword_100E64FA8);
    sub_10027ED60(v86, (void (*)(void))type metadata accessor for PeakUpperMarkModel);
    sub_1001781AC(v84, &qword_100E64FA8);
    if ((v89 & 1) == 0) {
      return 0;
    }
  }
  sub_1001D1728(v61[15]);
  if ((sub_100566B7C() & 1) == 0) {
    return 0;
  }
  if ((sub_100162FAC() & 1) == 0) {
    return 0;
  }
  if ((sub_100162FAC() & 1) == 0) {
    return 0;
  }
  sub_1001D1728(v61[18]);
  if ((static DetailChartGradientModel.== infix(_:_:)() & 1) == 0) {
    return 0;
  }
  sub_100179D44(v61[19]);
  if (!v35 || v90 != v91) {
    return 0;
  }
  sub_100179D44(v61[20]);
  unsigned int v95 = v35;
  if (v93 == v94) {
    return v95;
  }
  else {
    return 0;
  }
}

BOOL sub_100281080(uint64_t a1, uint64_t a2)
{
  if ((static Date.== infix(_:_:)() & 1) == 0) {
    return 0;
  }
  uint64_t v4 = type metadata accessor for TemperatureAveragesHeroChartViewModel.PeakMarkModel(0);
  return *(double *)(a1 + *(int *)(v4 + 20)) == *(double *)(a2 + *(int *)(v4 + 20));
}

uint64_t sub_1002810D8(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  sub_1001190D4();
  v4();
  return a2;
}

unint64_t destroy for WeatherFetchErrorKind(uint64_t a1)
{
  unint64_t result = *(void *)(a1 + 8);
  if (result >= 0xFFFFFFFF) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t _s7Weather21WeatherFetchErrorKindOwCP_0(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if (v3 < 0xFFFFFFFF)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v3;
    swift_bridgeObjectRetain();
  }
  return a1;
}

void *assignWithCopy for WeatherFetchErrorKind(void *a1, void *a2)
{
  unint64_t v4 = a2[1];
  if (a1[1] < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for WeatherFetchErrorKind(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 8) < 0xFFFFFFFFuLL) {
    goto LABEL_5;
  }
  unint64_t v4 = *(void *)(a2 + 8);
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1002812A4(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

void *sub_1002812BC(void *result, int a2)
{
  if (a2 < 0)
  {
    *unint64_t result = a2 ^ 0x80000000;
    result[1] = 0;
  }
  else if (a2)
  {
    result[1] = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for LinkAction()
{
  return &type metadata for LinkAction;
}

uint64_t sub_1002812EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  type metadata accessor for Calendar();
  sub_100187B5C();
  uint64_t v7 = v6;
  __chkstk_darwin(v8);
  sub_10019E674();
  static Calendar.currentCalendar(with:)();
  char v9 = Calendar.isDateInToday(_:)();
  uint64_t v10 = *(void (**)(uint64_t))(v7 + 8);
  uint64_t v11 = sub_1001A0414();
  v10(v11);
  if (v9)
  {
    sub_10017F7D8();
    return sub_10028142C(a3, a4, v12);
  }
  else
  {
    static Calendar.currentCalendar(with:)();
    char v14 = Calendar.isDateInYesterday(_:)();
    uint64_t v15 = sub_1001A0414();
    v10(v15);
    uint64_t v16 = sub_10017F7D8();
    if (v14) {
      uint64_t v20 = a5;
    }
    else {
      uint64_t v20 = a4;
    }
    return sub_100281780(v16, v17, v20, v18, v19);
  }
}

uint64_t sub_10028142C@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  unint64_t v4 = v3;
  uint64_t v33 = a2;
  uint64_t v28 = a1;
  uint64_t v32 = type metadata accessor for UVIndex();
  uint64_t v29 = *(void *)(v32 - 8);
  __chkstk_darwin(v32);
  uint64_t v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for WeatherDescription();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v30 = v8;
  uint64_t v31 = v9;
  __chkstk_darwin(v8);
  uint64_t v27 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v11 = [self mainBundle];
  v34._object = (void *)0x8000000100C972F0;
  v12._countAndFlagsBits = 0x4025202C776F4ELL;
  v12._object = (void *)0xE700000000000000;
  v13._countAndFlagsBits = 0;
  v13._object = (void *)0xE000000000000000;
  v34._countAndFlagsBits = 0xD00000000000004ELL;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v12, (Swift::String_optional)0, (NSBundle)v11, v13, v34);

  sub_10017DF08(&qword_100E64020);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_100C251B0;
  uint64_t v15 = Date.formattedTime(timeZone:)();
  uint64_t v17 = v16;
  *(void *)(v14 + 56) = &type metadata for String;
  *(void *)(v14 + 64) = sub_10012B7C0();
  *(void *)(v14 + 32) = v15;
  *(void *)(v14 + 40) = v17;
  uint64_t v18 = static String.localizedStringWithFormat(_:_:)();
  uint64_t v26 = v19;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1001B1E64(v4, v4[3]);
  CurrentWeather.uvIndex.getter();
  uint64_t v20 = v27;
  dispatch thunk of UVISummaryStringBuilderType.makeTodayDescription(from:timeZone:currentUVIndex:hourlyForecast:)();
  (*(void (**)(char *, uint64_t))(v29 + 8))(v7, v32);
  uint64_t v21 = (int *)type metadata accessor for ConditionDetailPlatterViewModel(0);
  uint64_t v22 = v30;
  _s7Weather24LocationCompositionStateOwst_0(a3 + v21[6], 1, 1, v30);
  (*(void (**)(uint64_t, char *, uint64_t))(v31 + 32))(a3 + v21[7], v20, v22);
  uint64_t v23 = type metadata accessor for ConditionDetailPlatterViewModel.Body(0);
  swift_storeEnumTagMultiPayload();
  uint64_t result = _s7Weather24LocationCompositionStateOwst_0(a3 + v21[8], 1, 1, v23);
  *(void *)a3 = 0;
  *(void *)(a3 + 8) = 0;
  *(unsigned char *)(a3 + 16) = 2;
  uint64_t v25 = v26;
  *(void *)(a3 + 24) = v18;
  *(void *)(a3 + 32) = v25;
  *(unsigned char *)(a3 + v21[9]) = 1;
  *(unsigned char *)(a3 + v21[10]) = 1;
  return result;
}

uint64_t sub_100281780@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void (*a4)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t)@<X3>, uint64_t a5@<X8>)
{
  uint64_t v7 = v5;
  uint64_t v12 = Date.formattedMonthDayYear(timeZone:)();
  uint64_t v21 = v13;
  uint64_t v22 = v12;
  uint64_t v14 = v7[3];
  uint64_t v15 = v7[4];
  sub_1001B1E64(v7, v14);
  uint64_t v16 = (int *)type metadata accessor for ConditionDetailPlatterViewModel(0);
  a4(a1, a2, a3, v14, v15);
  uint64_t v17 = a5 + v16[6];
  uint64_t v18 = type metadata accessor for WeatherDescription();
  _s7Weather24LocationCompositionStateOwst_0(v17, 1, 1, v18);
  uint64_t v19 = type metadata accessor for ConditionDetailPlatterViewModel.Body(0);
  swift_storeEnumTagMultiPayload();
  uint64_t result = _s7Weather24LocationCompositionStateOwst_0(a5 + v16[8], 1, 1, v19);
  *(void *)a5 = 0;
  *(void *)(a5 + 8) = 0;
  *(unsigned char *)(a5 + 16) = 2;
  *(void *)(a5 + 24) = v22;
  *(void *)(a5 + 32) = v21;
  *(unsigned char *)(a5 + v16[9]) = 1;
  *(unsigned char *)(a5 + v16[10]) = 1;
  return result;
}

uint64_t sub_1002818B8@<X0>(uint64_t a1@<X8>)
{
  type metadata accessor for Calendar();
  sub_100187B5C();
  uint64_t v3 = v2;
  __chkstk_darwin(v4);
  sub_10019E674();
  static Calendar.currentCalendar(with:)();
  char v5 = Calendar.isDateInToday(_:)();
  uint64_t v6 = *(void (**)(uint64_t))(v3 + 8);
  uint64_t v7 = sub_100179D64();
  v6(v7);
  if (v5)
  {
    sub_10017C778();
    sub_1002819D4(v8);
LABEL_6:
    uint64_t v11 = 0;
    goto LABEL_7;
  }
  static Calendar.currentCalendar(with:)();
  char v9 = Calendar.isDateInYesterday(_:)();
  uint64_t v10 = sub_100179D64();
  v6(v10);
  if ((v9 & 1) == 0)
  {
    sub_10017C778();
    sub_100281BE4(v12);
    goto LABEL_6;
  }
  uint64_t v11 = 1;
LABEL_7:
  uint64_t v13 = type metadata accessor for ConditionDetailPlatterViewModel(0);
  return _s7Weather24LocationCompositionStateOwst_0(a1, v11, 1, v13);
}

uint64_t sub_1002819D4@<X0>(uint64_t a1@<X8>)
{
  id v3 = [self mainBundle];
  v18._object = (void *)0x8000000100C972F0;
  v4._countAndFlagsBits = 0x25202C7961646F54;
  v4._object = (void *)0xE900000000000040;
  v5._countAndFlagsBits = 0;
  v5._object = (void *)0xE000000000000000;
  v18._countAndFlagsBits = 0xD00000000000004ELL;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v4, (Swift::String_optional)0, (NSBundle)v3, v5, v18);

  sub_10017DF08(&qword_100E64020);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_100C251B0;
  uint64_t v7 = Date.formattedTime(timeZone:)();
  uint64_t v9 = v8;
  *(void *)(v6 + 56) = &type metadata for String;
  *(void *)(v6 + 64) = sub_10012B7C0();
  *(void *)(v6 + 32) = v7;
  *(void *)(v6 + 40) = v9;
  uint64_t v10 = static String.localizedStringWithFormat(_:_:)();
  uint64_t v12 = v11;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1001B1E64(v1, v1[3]);
  uint64_t v13 = (int *)type metadata accessor for ConditionDetailPlatterViewModel(0);
  dispatch thunk of UVISummaryStringBuilderType.makeTodayDescription(from:timeZone:currentUVIndex:hourlyForecast:)();
  uint64_t v14 = a1 + v13[6];
  uint64_t v15 = type metadata accessor for WeatherDescription();
  _s7Weather24LocationCompositionStateOwst_0(v14, 1, 1, v15);
  uint64_t v16 = type metadata accessor for ConditionDetailPlatterViewModel.Body(0);
  swift_storeEnumTagMultiPayload();
  uint64_t result = _s7Weather24LocationCompositionStateOwst_0(a1 + v13[8], 1, 1, v16);
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 2;
  *(void *)(a1 + 24) = v10;
  *(void *)(a1 + 32) = v12;
  *(unsigned char *)(a1 + v13[9]) = 1;
  *(unsigned char *)(a1 + v13[10]) = 1;
  return result;
}

uint64_t sub_100281BE4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = Date.formattedMonthDayTime(timeZone:)();
  uint64_t v10 = v4;
  uint64_t v11 = v3;
  sub_1001B1E64(v1, v1[3]);
  Swift::String v5 = (int *)type metadata accessor for ConditionDetailPlatterViewModel(0);
  dispatch thunk of UVISummaryStringBuilderType.makeTodayDescription(from:timeZone:currentUVIndex:hourlyForecast:)();
  uint64_t v6 = a1 + v5[6];
  uint64_t v7 = type metadata accessor for WeatherDescription();
  _s7Weather24LocationCompositionStateOwst_0(v6, 1, 1, v7);
  uint64_t v8 = type metadata accessor for ConditionDetailPlatterViewModel.Body(0);
  swift_storeEnumTagMultiPayload();
  uint64_t result = _s7Weather24LocationCompositionStateOwst_0(a1 + v5[8], 1, 1, v8);
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 2;
  *(void *)(a1 + 24) = v11;
  *(void *)(a1 + 32) = v10;
  *(unsigned char *)(a1 + v5[9]) = 1;
  *(unsigned char *)(a1 + v5[10]) = 1;
  return result;
}

uint64_t initializeWithCopy for UVIDescriptorViewModelFactory(uint64_t a1, uint64_t a2)
{
  long long v3 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v3;
  (**(void (***)(void))(v3 - 8))();
  return a1;
}

uint64_t *assignWithCopy for UVIDescriptorViewModelFactory(uint64_t *a1, uint64_t *a2)
{
  return a1;
}

__n128 initializeWithTake for UVIDescriptorViewModelFactory(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for UVIDescriptorViewModelFactory(uint64_t a1, uint64_t a2)
{
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for UVIDescriptorViewModelFactory(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 40))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 24);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for UVIDescriptorViewModelFactory(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for UVIDescriptorViewModelFactory()
{
  return &type metadata for UVIDescriptorViewModelFactory;
}

uint64_t *sub_100281E84(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  long long v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *long long v3 = *a2;
    long long v3 = (uint64_t *)(v9 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_WORD *)a1 = *(_WORD *)a2;
    uint64_t v5 = *(int *)(a3 + 24);
    uint64_t v6 = (char *)a1 + v5;
    uint64_t v7 = (char *)a2 + v5;
    uint64_t v8 = type metadata accessor for MoonPhase.Hemisphere();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16))(v6, v7, v8);
  }
  return v3;
}

uint64_t sub_100281F50(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 24);
  uint64_t v3 = type metadata accessor for MoonPhase.Hemisphere();
  int v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);

  return v4(v2, v3);
}

_WORD *sub_100281FB8(_WORD *a1, _WORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = type metadata accessor for MoonPhase.Hemisphere();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16))(v5, v6, v7);
  return a1;
}

unsigned char *sub_100282034(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = &a1[v4];
  uint64_t v6 = &a2[v4];
  uint64_t v7 = type metadata accessor for MoonPhase.Hemisphere();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

_WORD *sub_1002820B8(_WORD *a1, _WORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = type metadata accessor for MoonPhase.Hemisphere();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

unsigned char *sub_100282134(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = &a1[v4];
  uint64_t v6 = &a2[v4];
  uint64_t v7 = type metadata accessor for MoonPhase.Hemisphere();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t sub_1002821B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1002821CC);
}

uint64_t sub_1002821CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 254)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 1);
    BOOL v5 = v4 >= 2;
    int v6 = (v4 + 2147483646) & 0x7FFFFFFF;
    if (v5) {
      return (v6 + 1);
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v10 = type metadata accessor for MoonPhase.Hemisphere();
    uint64_t v11 = a1 + *(int *)(a3 + 24);
    return _s7Weather24LocationCompositionStateOwet_0(v11, a2, v10);
  }
}

uint64_t sub_100282254(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100282268);
}

uint64_t sub_100282268(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 254)
  {
    *(unsigned char *)(result + 1) = a2 + 1;
  }
  else
  {
    uint64_t v7 = type metadata accessor for MoonPhase.Hemisphere();
    uint64_t v8 = v5 + *(int *)(a4 + 24);
    return _s7Weather24LocationCompositionStateOwst_0(v8, a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for CalendarDayMoonPhase()
{
  uint64_t result = qword_100E65190;
  if (!qword_100E65190) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10028232C()
{
  uint64_t result = type metadata accessor for MoonPhase.Hemisphere();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1002823CC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1002823E8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_10017DF08(&qword_100E651D0);
  sub_100162E4C();
  __chkstk_darwin(v4);
  sub_1001626E0();
  uint64_t v7 = v6 - v5;
  uint64_t v8 = sub_10017DF08(&qword_100E651D8);
  uint64_t v44 = *(void *)(v8 - 8);
  uint64_t v45 = v8;
  __chkstk_darwin(v8);
  sub_1001626E0();
  uint64_t v11 = v10 - v9;
  uint64_t v42 = sub_10017DF08(&qword_100E651E0);
  sub_100162E4C();
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  char v43 = (char *)&v39 - v16;
  uint64_t v40 = sub_10017DF08(&qword_100E651E8);
  sub_100162E4C();
  __chkstk_darwin(v17);
  sub_1001626E0();
  uint64_t v20 = v19 - v18;
  type metadata accessor for CalendarDayMoonPhase();
  uint64_t v41 = v1;
  MoonPhase.symbolName(for:)();
  uint64_t v21 = Image.init(systemName:)();
  uint64_t v22 = static Font.headline.getter();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v24 = static Color.secondary.getter();
  uint64_t v25 = swift_getKeyPath();
  uint64_t v48 = v21;
  uint64_t v49 = KeyPath;
  unint64_t v50 = v22;
  uint64_t v51 = v25;
  uint64_t v52 = v24;
  uint64_t v26 = enum case for DynamicTypeSize.large(_:);
  uint64_t v27 = type metadata accessor for DynamicTypeSize();
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v28 + 104))(v7, v26, v27);
  sub_100282C04(&qword_100E651F0, (void (*)(uint64_t))&type metadata accessor for DynamicTypeSize);
  uint64_t result = dispatch thunk of static Equatable.== infix(_:_:)();
  if (result)
  {
    uint64_t v30 = sub_10017DF08(&qword_100E651F8);
    unint64_t v31 = sub_100282844();
    uint64_t v32 = sub_1001246C8((unint64_t *)&unk_100EAADB0, &qword_100E651D0);
    uint64_t v39 = a1;
    uint64_t v33 = v32;
    View.dynamicTypeSize<A>(_:)();
    sub_1001781AC(v7, &qword_100E651D0);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    uint64_t v34 = v41;
    uint64_t v46 = MoonPhase.accessibilityDescription.getter();
    uint64_t v47 = v35;
    uint64_t v48 = v30;
    uint64_t v49 = v3;
    unint64_t v50 = v31;
    uint64_t v51 = v33;
    swift_getOpaqueTypeConformance2();
    sub_10014A85C();
    uint64_t v36 = v45;
    View.accessibilityValue<A>(_:)();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v11, v36);
    uint64_t v37 = (uint64_t)v43;
    ModifiedContent<>.accessibilityHidden(_:)();
    sub_1001781AC((uint64_t)v14, &qword_100E651E0);
    if (*(unsigned char *)(v34 + 1)) {
      double v38 = 1.0;
    }
    else {
      double v38 = 0.0;
    }
    sub_100282984(v37, v20);
    *(double *)(v20 + *(int *)(v40 + 36)) = v38;
    sub_1001781AC(v37, &qword_100E651E0);
    return sub_1002829EC(v20, v39);
  }
  else
  {
    __break(1u);
  }
  return result;
}

unint64_t sub_100282844()
{
  unint64_t result = qword_100E65200;
  if (!qword_100E65200)
  {
    sub_10018C6DC(&qword_100E651F8);
    sub_1002828E4();
    sub_1001246C8((unint64_t *)&qword_100E64F80, (uint64_t *)&unk_100EAA770);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E65200);
  }
  return result;
}

unint64_t sub_1002828E4()
{
  unint64_t result = qword_100E65208;
  if (!qword_100E65208)
  {
    sub_10018C6DC(&qword_100E65210);
    sub_1001246C8(&qword_100E65218, &qword_100E65220);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E65208);
  }
  return result;
}

uint64_t sub_100282984(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10017DF08(&qword_100E651E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1002829EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10017DF08(&qword_100E651E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_100282A58()
{
  unint64_t result = qword_100E65228;
  if (!qword_100E65228)
  {
    sub_10018C6DC(&qword_100E651E8);
    sub_100282AD4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E65228);
  }
  return result;
}

unint64_t sub_100282AD4()
{
  unint64_t result = qword_100E65230;
  if (!qword_100E65230)
  {
    sub_10018C6DC(&qword_100E651E0);
    sub_10018C6DC(&qword_100E651F8);
    sub_10018C6DC(&qword_100E651D0);
    sub_100282844();
    sub_1001246C8((unint64_t *)&unk_100EAADB0, &qword_100E651D0);
    swift_getOpaqueTypeConformance2();
    sub_100282C04((unint64_t *)&qword_100EAACA0, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E65230);
  }
  return result;
}

uint64_t sub_100282C04(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100282C4C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v123 = a2;
  uint64_t v3 = type metadata accessor for AttributedString();
  uint64_t v4 = sub_100109308(v3);
  __chkstk_darwin(v4);
  sub_100109314();
  uint64_t v6 = sub_100109328(v5);
  uint64_t v102 = type metadata accessor for ConditionDetailPlatterViewModel.Body(v6);
  sub_100162E4C();
  __chkstk_darwin(v7);
  sub_100109314();
  uint64_t v103 = v8;
  uint64_t v9 = sub_10017DF08(&qword_100E63758);
  uint64_t v10 = sub_100109308(v9);
  __chkstk_darwin(v10);
  sub_100109314();
  sub_100109328(v11);
  uint64_t v101 = type metadata accessor for WeatherDescription();
  sub_100179C0C();
  v100[2] = v12;
  __chkstk_darwin(v13);
  sub_100109314();
  sub_100109328(v14);
  uint64_t v15 = type metadata accessor for TemperatureScaleConfiguration.Gradient();
  uint64_t v16 = sub_100109308(v15);
  __chkstk_darwin(v16);
  sub_100109314();
  uint64_t v105 = v17;
  uint64_t v18 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  uint64_t v19 = sub_100109308(v18);
  __chkstk_darwin(v19);
  sub_100109314();
  sub_100109328(v20);
  uint64_t v124 = type metadata accessor for Date();
  sub_100179C0C();
  uint64_t v116 = v21;
  __chkstk_darwin(v22);
  sub_100162EF8();
  uint64_t v117 = v23;
  __chkstk_darwin(v24);
  uint64_t v122 = (char *)v100 - v25;
  uint64_t v114 = type metadata accessor for DateComponents();
  sub_100179C0C();
  uint64_t v112 = v26;
  __chkstk_darwin(v27);
  sub_100162EF8();
  uint64_t v113 = v28;
  __chkstk_darwin(v29);
  uint64_t v127 = (uint64_t)v100 - v30;
  type metadata accessor for TimeZone();
  sub_100179C0C();
  uint64_t v120 = v32;
  uint64_t v121 = v31;
  __chkstk_darwin(v31);
  uint64_t v34 = (char *)v100 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for Calendar();
  sub_100179C0C();
  __chkstk_darwin(v35);
  uint64_t v125 = (char *)v100 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v118 = v38;
  uint64_t v119 = v37;
  (*(void (**)(char *, void *))(v38 + 16))(v125, a1);
  uint64_t v126 = v34;
  Calendar.timeZone.getter();
  uint64_t v111 = sub_10017DF08(&qword_100E65238);
  type metadata accessor for Calendar.Component();
  sub_100179C0C();
  uint64_t v40 = v39;
  *(void *)&long long v110 = ((*(unsigned __int8 *)(v39 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80))
                   + 2 * *(void *)(v41 + 72);
  uint64_t v42 = swift_allocObject();
  long long v109 = xmmword_100C25ED0;
  *(_OWORD *)(v42 + 16) = xmmword_100C25ED0;
  LODWORD(countAndFlagsBits) = enum case for Calendar.Component.year(_:);
  char v43 = *(void (**)(void))(v40 + 104);
  sub_100179D78();
  v43();
  sub_100179D78();
  v43();
  sub_1000EEDB0(v42);
  uint64_t v104 = type metadata accessor for MonthlyAveragesChartInput();
  object = a1;
  Calendar.dateComponents(_:from:)();
  id v44 = v115;
  swift_bridgeObjectRelease();
  uint64_t v45 = swift_allocObject();
  *(_OWORD *)(v45 + 16) = v109;
  uint64_t v46 = v116;
  sub_100179D78();
  v43();
  uint64_t v47 = v124;
  sub_100179D78();
  v43();
  uint64_t v48 = v112;
  sub_1000EEDB0(v45);
  uint64_t v49 = v117;
  uint64_t v50 = v114;
  Date.startOfDay.getter();
  uint64_t v51 = v113;
  Calendar.dateComponents(_:from:)();
  swift_bridgeObjectRelease();
  uint64_t v52 = (void (*)(void, uint64_t))v46[1];
  v52(v49, v47);
  Calendar.date(from:)();
  uint64_t v53 = *(void (**)(uint64_t, uint64_t))(v48 + 8);
  v53((uint64_t)v51, v50);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v44, 1, v47) == 1)
  {
    v53(v127, v50);
    uint64_t v54 = sub_10019E690();
    v55(v54);
    sub_100162F0C();
    v56();
    sub_100178110((uint64_t)v44, (uint64_t *)&unk_100E73CA0);
LABEL_6:
    uint64_t v93 = type metadata accessor for ConditionDetailPlatterViewModel(0);
    uint64_t v91 = v123;
    uint64_t v92 = 1;
    return _s7Weather24LocationCompositionStateOwst_0(v91, v92, 1, v93);
  }
  uint64_t v113 = v53;
  uint64_t v117 = v52;
  uint64_t v57 = v122;
  ((void (*)(char *, id, uint64_t))v46[4])(v122, v44, v47);
  sub_10017BAF4();
  char v58 = (void *)static NSDateFormatter.shortMonthNameFormatter(with:)();
  uint64_t v59 = (void *)static NSDateFormatter.longMonthNameFormatter(with:)();
  uint64_t v60 = static NSDateFormatter.longMonthNameFormatter(with:)();
  uint64_t v61 = (void *)__chkstk_darwin(v60);
  uint64_t v62 = (uint64_t)object;
  v100[-6] = object;
  v100[-5] = v57;
  uint64_t v116 = v58;
  v100[-4] = v58;
  v100[-3] = v59;
  id v115 = v59;
  double v63 = v61;
  v133._object = v61;
  sub_1008871B0();
  uint64_t v65 = v64;
  uint64_t v66 = v105;
  TemperatureScaleConfiguration.gradient.getter();
  uint64_t v67 = sub_1001B6D94(v66);
  sub_100786C7C(1, v65, (uint64_t)v67, &v128);
  sub_10024D364((uint64_t)&v128, (uint64_t)v129, &qword_100E65248);
  if (!v130)
  {

    uint64_t v94 = sub_10017E01C();
    v95(v94);
    uint64_t v96 = sub_10019E690();
    v97(v96);
    sub_100162F0C();
    v98();
    v117(v122, v47);
    goto LABEL_6;
  }
  uint64_t v111 = v129[0];
  long long v110 = v131;
  uint64_t v112 = v132;
  *(void *)&long long v109 = v130;
  sub_1002840F4(v62, v127, v100[0], (uint64_t)v100[1]);
  id v68 = [self mainBundle];
  v133._uint64_t countAndFlagsBits = 0xD00000000000006ELL;
  v133._object = (void *)0x8000000100C97360;
  v69._object = (void *)0x8000000100C97340;
  v69._uint64_t countAndFlagsBits = 0xD000000000000010;
  v70._uint64_t countAndFlagsBits = 0;
  v70._object = (void *)0xE000000000000000;
  Swift::String v71 = NSLocalizedString(_:tableName:bundle:value:comment:)(v69, (Swift::String_optional)0, (NSBundle)v68, v70, v133);
  uint64_t countAndFlagsBits = v71._countAndFlagsBits;
  object = v71._object;

  _s7Weather24LocationCompositionStateOwst_0(v107, 1, 1, v101);
  static Font.body.getter();
  WeatherDescription.formatted(font:color:)();
  swift_release();
  uint64_t v72 = Text.init(_:)();
  uint64_t v74 = v73;
  char v76 = v75;
  uint64_t v78 = v77;

  sub_100162F0C();
  v79();
  uint64_t v80 = sub_10017E01C();
  v81(v80);
  uint64_t v82 = sub_10019E690();
  v83(v82);
  sub_100162F0C();
  v84();
  uint64_t v85 = (uint64_t)v103;
  uint64_t *v103 = v72;
  *(void *)(v85 + 8) = v74;
  *(void *)(v85 + 16) = v76 & 1;
  *(void *)(v85 + 24) = v78;
  uint64_t v86 = v109;
  *(void *)(v85 + 32) = v111;
  *(void *)(v85 + 40) = v86;
  *(_OWORD *)(v85 + 48) = v110;
  *(void *)(v85 + 72) = 0;
  *(void *)(v85 + 80) = 0;
  *(void *)(v85 + 64) = v112;
  *(_WORD *)(v85 + 88) = 0;
  uint64_t v87 = v102;
  swift_storeEnumTagMultiPayload();
  uint64_t v88 = (int *)type metadata accessor for ConditionDetailPlatterViewModel(0);
  uint64_t v89 = v123;
  _s7Weather24LocationCompositionStateOwst_0(v123 + v88[8], 1, 1, v87);
  *(_OWORD *)uint64_t v89 = xmmword_100C27710;
  *(unsigned char *)(v89 + 16) = 2;
  double v90 = object;
  *(void *)(v89 + 24) = countAndFlagsBits;
  *(void *)(v89 + 32) = v90;
  sub_10024D364(v107, v89 + v88[6], &qword_100E63758);
  sub_10028470C(v85, v89 + v88[7], (void (*)(void))type metadata accessor for ConditionDetailPlatterViewModel.Body);
  *(unsigned char *)(v89 + v88[9]) = 0;
  *(unsigned char *)(v89 + v88[10]) = 0;
  v117(v122, v124);
  uint64_t v91 = v89;
  uint64_t v92 = 0;
  uint64_t v93 = (uint64_t)v88;
  return _s7Weather24LocationCompositionStateOwst_0(v91, v92, 1, v93);
}

uint64_t sub_1002836A4@<X0>(char *a1@<X1>, uint64_t a2@<X2>, void *a3@<X3>, void *a4@<X4>, char *a5@<X5>, uint64_t *a6@<X8>)
{
  uint64_t v99 = a2;
  uint64_t v88 = a5;
  id v82 = a3;
  id v83 = a4;
  uint64_t v103 = a6;
  uint64_t v7 = sub_10017DF08(qword_100E65268);
  __chkstk_darwin(v7 - 8);
  uint64_t v91 = (uint64_t)&v82 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v92 = type metadata accessor for ComparisonCapsuleViewModel.Row.Body(0);
  __chkstk_darwin(v92);
  uint64_t v93 = (uint64_t)&v82 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10017DF08(&qword_100E65250);
  uint64_t v89 = *(void *)(v10 - 8);
  uint64_t v90 = v10;
  uint64_t v11 = __chkstk_darwin(v10);
  uint64_t v87 = (uint64_t)&v82 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v85 = (uint64_t)&v82 - v14;
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v86 = (uint64_t)&v82 - v16;
  __chkstk_darwin(v15);
  uint64_t v84 = (uint64_t)&v82 - v17;
  uint64_t v18 = sub_10017DF08(&qword_100E65258);
  uint64_t v94 = *(void *)(v18 - 8);
  uint64_t v95 = v18;
  __chkstk_darwin(v18);
  uint64_t v20 = (char *)&v82 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_10017DF08(&qword_100E65260);
  __chkstk_darwin(v21 - 8);
  uint64_t v96 = (char *)&v82 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v102 = type metadata accessor for MonthTemperatureStatistics();
  uint64_t v98 = *(void *)(v102 - 8);
  __chkstk_darwin(v102);
  uint64_t v97 = (char *)&v82 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = type metadata accessor for Calendar.Component();
  uint64_t v25 = *(void *)(v24 - 8);
  __chkstk_darwin(v24);
  uint64_t v27 = (char *)&v82 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  __chkstk_darwin(v28 - 8);
  uint64_t v30 = (char *)&v82 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = type metadata accessor for Date();
  uint64_t v101 = *(void *)(v31 - 8);
  __chkstk_darwin(v31);
  uint64_t v33 = (char *)&v82 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t))(v25 + 104))(v27, enum case for Calendar.Component.month(_:), v24);
  Calendar.date(bySetting:value:of:)();
  (*(void (**)(char *, uint64_t))(v25 + 8))(v27, v24);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v30, 1, v31) == 1)
  {
    sub_100178110((uint64_t)v30, (uint64_t *)&unk_100E73CA0);
  }
  else
  {
    uint64_t v34 = v33;
    (*(void (**)(char *, char *, uint64_t))(v101 + 32))(v33, v30, v31);
    uint64_t v35 = type metadata accessor for MonthlyAveragesChartInput();
    uint64_t v37 = v94;
    uint64_t v36 = v95;
    uint64_t v38 = (*(uint64_t (**)(char *, char *, uint64_t))(v94 + 16))(v20, &a1[*(int *)(v35 + 28)], v95);
    __chkstk_darwin(v38);
    *(&v82 - 2) = a1;
    *(&v82 - 1) = v34;
    uint64_t v39 = (uint64_t)v96;
    sub_100354338();
    (*(void (**)(char *, uint64_t))(v37 + 8))(v20, v36);
    if (_s7Weather24LocationCompositionStateOwet_0(v39, 1, v102) != 1)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v98 + 32))(v97, v39, v102);
      uint64_t v47 = v84;
      MonthTemperatureStatistics.averageLowTemperature.getter();
      uint64_t v48 = v86;
      MonthTemperatureStatistics.averageHighTemperature.getter();
      Class isa = Date._bridgeToObjectiveC()().super.isa;
      id v50 = [v82 stringFromDate:isa];
      uint64_t v100 = v31;
      id v51 = v50;

      uint64_t v99 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v96 = v52;

      Class v53 = Date._bridgeToObjectiveC()().super.isa;
      id v54 = [v83 stringFromDate:v53];

      uint64_t v55 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v94 = v56;
      uint64_t v95 = v55;

      Class v57 = Date._bridgeToObjectiveC()().super.isa;
      id v58 = [v88 stringFromDate:v57];

      uint64_t v59 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)();
      id v82 = v60;
      id v83 = v59;

      uint64_t v88 = v34;
      uint64_t v61 = v89;
      uint64_t v62 = *(void (**)(uint64_t, uint64_t, uint64_t))(v89 + 16);
      uint64_t v63 = v85;
      uint64_t v64 = v47;
      uint64_t v65 = v47;
      uint64_t v66 = v90;
      v62(v85, v65, v90);
      uint64_t v67 = v87;
      v62(v87, v48, v66);
      uint64_t v68 = v91;
      _s7Weather24LocationCompositionStateOwst_0(v91, 1, 1, v66);
      uint64_t v69 = v93;
      sub_100786A8C(v63, v67, v68, v70, v71, v72, v73, v74, (uint64_t)v82, (uint64_t)v83, v84, v85, v86, v87, (uint64_t)v88, v89, v90, v91, v92,
        v93);
      char v75 = *(void (**)(uint64_t, uint64_t))(v61 + 8);
      v75(v48, v66);
      v75(v64, v66);
      (*(void (**)(char *, uint64_t))(v98 + 8))(v97, v102);
      swift_storeEnumTagMultiPayload();
      char v76 = v103;
      uint64_t v77 = v96;
      uint64_t *v103 = v99;
      v76[1] = (uint64_t)v77;
      uint64_t v78 = v94;
      v76[2] = v95;
      uint64_t v76[3] = v78;
      uint64_t v79 = (uint64_t)v82;
      v76[4] = (uint64_t)v83;
      v76[5] = v79;
      uint64_t v80 = type metadata accessor for ComparisonCapsuleViewModel.Row(0);
      sub_10028470C(v69, (uint64_t)v76 + *(int *)(v80 + 20), (void (*)(void))type metadata accessor for ComparisonCapsuleViewModel.Row.Body);
      *((unsigned char *)v76 + *(int *)(v80 + 24)) = 1;
      (*(void (**)(char *, uint64_t))(v101 + 8))(v88, v100);
      uint64_t v45 = (uint64_t)v76;
      uint64_t v46 = 0;
      uint64_t v44 = v80;
      return _s7Weather24LocationCompositionStateOwst_0(v45, v46, 1, v44);
    }
    (*(void (**)(char *, uint64_t))(v101 + 8))(v34, v31);
    sub_100178110(v39, &qword_100E65260);
  }
  if (qword_100E62808 != -1) {
    swift_once();
  }
  uint64_t v40 = type metadata accessor for Logger();
  sub_1002102B0(v40, (uint64_t)qword_100F51F20);
  uint64_t v41 = Logger.logObject.getter();
  os_log_type_t v42 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v41, v42))
  {
    char v43 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)char v43 = 0;
    _os_log_impl((void *)&_mh_execute_header, v41, v42, "Failed to find this month's temperature averages for the Averages L2 Chart summary.", v43, 2u);
    swift_slowDealloc();
  }

  uint64_t v44 = type metadata accessor for ComparisonCapsuleViewModel.Row(0);
  uint64_t v45 = (uint64_t)v103;
  uint64_t v46 = 1;
  return _s7Weather24LocationCompositionStateOwst_0(v45, v46, 1, v44);
}

BOOL sub_100283FCC()
{
  uint64_t v0 = type metadata accessor for Calendar.Component();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = MonthTemperatureStatistics.month.getter();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for Calendar.Component.month(_:), v0);
  uint64_t v5 = Calendar.component(_:from:)();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v4 == v5;
}

uint64_t sub_1002840F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v46 = a3;
  uint64_t v53 = a2;
  uint64_t v54 = a4;
  uint64_t v5 = type metadata accessor for Calendar.Identifier();
  uint64_t v51 = *(void *)(v5 - 8);
  uint64_t v52 = v5;
  uint64_t v6 = __chkstk_darwin(v5);
  uint64_t v47 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v45 = (char *)&v43 - v8;
  uint64_t v9 = sub_10017DF08(&qword_100E65250);
  uint64_t v49 = *(void *)(v9 - 8);
  uint64_t v50 = v9;
  uint64_t v10 = __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v14 = (void (*)(unsigned char *, uint64_t))((char *)&v43 - v13);
  uint64_t v15 = sub_10017DF08(&qword_100E65258);
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v43 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_10017DF08(&qword_100E65260);
  __chkstk_darwin(v19 - 8);
  uint64_t v21 = (char *)&v43 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = type metadata accessor for MonthTemperatureStatistics();
  uint64_t v23 = *(void *)(v22 - 8);
  __chkstk_darwin(v22);
  uint64_t v25 = (char *)&v43 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = *(int *)(type metadata accessor for MonthlyAveragesChartInput() + 28);
  uint64_t v48 = a1;
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v18, a1 + v26, v15);
  uint64_t v55 = v53;
  sub_100354338();
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v21, 1, v22) == 1)
  {
    sub_100178110((uint64_t)v21, &qword_100E65260);
    if (qword_100E627E8 != -1) {
      swift_once();
    }
    uint64_t v27 = type metadata accessor for Logger();
    sub_1002102B0(v27, (uint64_t)qword_100F51ED0);
    uint64_t v28 = Logger.logObject.getter();
    os_log_type_t v29 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v28, v29))
    {
      uint64_t v30 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v30 = 0;
      _os_log_impl((void *)&_mh_execute_header, v28, v29, "Failed to find this month's temperature averages for the Averages L2 Chart summary.", v30, 2u);
      swift_slowDealloc();
    }

    return static WeatherDescription.string(_:)();
  }
  else
  {
    uint64_t v32 = *(void (**)(char *, char *, uint64_t))(v23 + 32);
    uint64_t v44 = v22;
    v32(v25, v21, v22);
    sub_1001B1E64(v46, v46[3]);
    MonthTemperatureStatistics.averageLowTemperature.getter();
    uint64_t v33 = (uint64_t)v12;
    MonthTemperatureStatistics.averageHighTemperature.getter();
    uint64_t v53 = MonthTemperatureStatistics.month.getter();
    uint64_t v34 = v45;
    Calendar.identifier.getter();
    uint64_t v35 = v51;
    uint64_t v36 = v52;
    uint64_t v37 = v47;
    (*(void (**)(char *, void, uint64_t))(v51 + 104))(v47, enum case for Calendar.Identifier.gregorian(_:), v52);
    char v38 = static Calendar.Identifier.== infix(_:_:)();
    uint64_t v39 = *(void (**)(char *, uint64_t))(v35 + 8);
    v39(v37, v36);
    v39(v34, v36);
    sub_1005F0CA0(v14, v33, v53, (v38 & 1) == 0, v54);
    uint64_t v40 = *(void (**)(uint64_t, uint64_t))(v49 + 8);
    uint64_t v41 = v33;
    uint64_t v42 = v50;
    v40(v41, v50);
    v40((uint64_t)v14, v42);
    return (*(uint64_t (**)(char *, uint64_t))(v23 + 8))(v25, v44);
  }
}

BOOL sub_100284658()
{
  uint64_t v0 = MonthTemperatureStatistics.month.getter();
  uint64_t v1 = DateComponents.month.getter();
  return (v2 & 1) == 0 && v0 == v1;
}

uint64_t sub_1002846A8@<X0>(uint64_t *a1@<X8>)
{
  return sub_1002836A4(*(char **)(v1 + 16), *(void *)(v1 + 24), *(void **)(v1 + 32), *(void **)(v1 + 40), *(char **)(v1 + 48), a1);
}

BOOL sub_1002846CC()
{
  return sub_100284658();
}

BOOL sub_1002846EC()
{
  return sub_100283FCC();
}

uint64_t sub_10028470C(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  uint64_t v4 = sub_100126010();
  v5(v4);
  return a2;
}

ValueMetadata *type metadata accessor for TemperatureMonthlyAveragesChartViewModelFactory()
{
  return &type metadata for TemperatureMonthlyAveragesChartViewModelFactory;
}

uint64_t type metadata accessor for ElevatedAqiSevereNewsContentView()
{
  return sub_100109098();
}

uint64_t sub_100284788()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1002847CC@<X0>(uint64_t a1@<X0>, __int16 a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v57 = a7;
  uint64_t v58 = a6;
  uint64_t v45 = a4;
  uint64_t v52 = a3;
  v70[3] = a5;
  int v9 = a2;
  unsigned int v10 = a2 & 0x100;
  v70[4] = a5;
  v70[5] = a5;
  v70[6] = a5;
  v70[7] = a5;
  sub_10017C794();
  uint64_t v50 = sub_10017F7C0();
  uint64_t v56 = type metadata accessor for Group();
  sub_100179C0C();
  uint64_t v53 = v11;
  __chkstk_darwin(v12);
  sub_100162EF8();
  uint64_t v55 = v13;
  __chkstk_darwin(v14);
  uint64_t v54 = (uint64_t)&v41 - v15;
  v70[0] = a5;
  v70[1] = a5;
  v70[2] = a5;
  v70[3] = type metadata accessor for Optional();
  v70[4] = a5;
  v70[5] = a5;
  v70[6] = a5;
  v70[7] = a5;
  sub_10017C794();
  sub_10017F7C0();
  uint64_t v51 = type metadata accessor for Group();
  sub_100179C0C();
  uint64_t v49 = v16;
  __chkstk_darwin(v17);
  sub_100162EF8();
  uint64_t v59 = v18;
  __chkstk_darwin(v19);
  uint64_t v60 = (uint64_t)&v41 - v20;
  if (v9)
  {
    if (v9 == 1)
    {
      if (v10)
      {
        uint64_t v21 = &qword_100E8FD78;
        goto LABEL_11;
      }
    }
    else if (v10)
    {
      uint64_t v21 = &qword_100E90188;
      goto LABEL_11;
    }
    uint64_t v21 = &qword_100E8FF80;
    goto LABEL_11;
  }
  if (v10) {
    uint64_t v21 = &qword_100E8F968;
  }
  else {
    uint64_t v21 = &qword_100E8FB70;
  }
LABEL_11:
  memcpy(v70, v21, sizeof(v70));
  uint64_t v22 = memcpy(v69, v70, sizeof(v69));
  __chkstk_darwin(v22);
  uint64_t v23 = v58;
  *(&v41 - 8) = a5;
  *(&v41 - 7) = v23;
  *(&v41 - 6) = a1;
  *((unsigned char *)&v41 - 40) = v9;
  uint64_t v44 = a1;
  int v42 = v9;
  unsigned int v43 = v10 >> 8;
  *((unsigned char *)&v41 - 39) = BYTE1(v10);
  uint64_t v24 = v45;
  *(&v41 - 4) = v52;
  *(&v41 - 3) = v24;
  *(&v41 - 2) = (uint64_t)v69;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v26 = v59;
  Group<A>.init(content:)();
  uint64_t v68 = WitnessTable;
  uint64_t v27 = v51;
  uint64_t v46 = swift_getWitnessTable();
  sub_100121584(v26, v27, v60);
  uint64_t v28 = v49;
  uint64_t v47 = *(uint64_t (**)(uint64_t, uint64_t))(v49 + 8);
  uint64_t v48 = v49 + 8;
  uint64_t v29 = v47(v26, v27);
  __chkstk_darwin(v29);
  uint64_t v30 = v58;
  *(&v41 - 8) = a5;
  *(&v41 - 7) = v30;
  *(&v41 - 6) = v44;
  *((unsigned char *)&v41 - 40) = v42;
  *((unsigned char *)&v41 - 39) = v43;
  *(&v41 - 4) = v31;
  *(&v41 - 3) = v24;
  *(&v41 - 2) = (uint64_t)v69;
  uint64_t v32 = swift_getWitnessTable();
  uint64_t v33 = v55;
  Group<A>.init(content:)();
  uint64_t v67 = v32;
  uint64_t v34 = v56;
  uint64_t v58 = swift_getWitnessTable();
  uint64_t v35 = v54;
  sub_100121584(v33, v34, v54);
  uint64_t v36 = v53;
  uint64_t v37 = *(void (**)(void))(v53 + 8);
  sub_10017C768();
  v37();
  uint64_t v38 = v59;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v28 + 16))(v59, v60, v27);
  uint64_t v65 = v38;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v36 + 16))(v33, v35, v34);
  uint64_t v66 = v33;
  uint64_t v63 = v27;
  uint64_t v64 = v34;
  uint64_t v61 = v46;
  uint64_t v62 = v58;
  sub_1006E9080();
  sub_10017C768();
  v37();
  uint64_t v39 = v47;
  v47(v60, v27);
  sub_10017C768();
  v37();
  return v39(v38, v27);
}

uint64_t sub_100284C8C@<X0>(uint64_t a1@<X0>, void (*a2)(char *, void, void, void, void)@<X2>, void *a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X6>, uint64_t a6@<X8>)
{
  uint64_t v101 = a6;
  uint64_t v102 = a5;
  uint64_t v10 = sub_10017DF08(&qword_100E64E80);
  __chkstk_darwin(v10 - 8);
  uint64_t v99 = (uint64_t)&v94 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v120 = type metadata accessor for Optional();
  uint64_t v112 = *(void *)(v120 - 8);
  __chkstk_darwin(v120);
  uint64_t v119 = (char *)&v94 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v118 = (char *)&v94 - v14;
  uint64_t v98 = type metadata accessor for LocationComponentContainerViewModel();
  __chkstk_darwin(v98);
  uint64_t v95 = (uint64_t)&v94 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v94 - v17;
  uint64_t v105 = *(void *)(a4 - 8);
  __chkstk_darwin(v19);
  uint64_t v100 = (char *)&v94 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  uint64_t v111 = (char *)&v94 - v22;
  __chkstk_darwin(v23);
  long long v110 = (char *)&v94 - v24;
  __chkstk_darwin(v25);
  uint64_t v108 = (char *)&v94 - v26;
  __chkstk_darwin(v27);
  long long v109 = (char *)&v94 - v28;
  __chkstk_darwin(v29);
  uint64_t v106 = (char *)&v94 - v30;
  __chkstk_darwin(v31);
  uint64_t v107 = (char *)&v94 - v32;
  __chkstk_darwin(v33);
  uint64_t v104 = (char *)&v94 - v34;
  __chkstk_darwin(v35);
  uint64_t v114 = (char *)&v94 - v36;
  __chkstk_darwin(v37);
  uint64_t v122 = (char *)&v94 - v38;
  __chkstk_darwin(v39);
  uint64_t v116 = (char *)&v94 - v40;
  __chkstk_darwin(v41);
  id v115 = (char *)&v94 - v42;
  __chkstk_darwin(v43);
  uint64_t v45 = (char *)&v94 - v44;
  __chkstk_darwin(v46);
  uint64_t v48 = (char *)&v94 - v47;
  uint64_t v117 = a1;
  sub_1001F3734(a1 + OBJC_IVAR____TtCV7Weather28ElevatedAqiSevereNewsContent8_Storage_severeAlert, (uint64_t)v18);
  uint64_t v96 = a3;
  uint64_t v49 = a3[45];
  uint64_t v50 = a3[46];
  uint64_t v51 = a3[47];
  uint64_t v52 = a3[48];
  uint64_t v123 = a2;
  a2(v18, v49, v50, v51, v52);
  sub_1001F2B74((uint64_t)v18);
  uint64_t v103 = v48;
  sub_100121584((uint64_t)v45, a4, (uint64_t)v48);
  uint64_t v53 = v105 + 8;
  uint64_t v124 = *(void (**)(char *, uint64_t))(v105 + 8);
  v124(v45, a4);
  sub_1001F3734(a1 + OBJC_IVAR____TtCV7Weather28ElevatedAqiSevereNewsContent8_Storage_airQuality, (uint64_t)v18);
  uint64_t v54 = v96;
  a2(v18, *v96, v96[1], v96[2], v96[3]);
  sub_1001F2B74((uint64_t)v18);
  uint64_t v55 = v54;
  sub_100121584((uint64_t)v45, a4, (uint64_t)v115);
  uint64_t v56 = v124;
  v124(v45, a4);
  uint64_t v57 = v117;
  sub_1001F3734(v117 + OBJC_IVAR____TtCV7Weather28ElevatedAqiSevereNewsContent8_Storage_newsArticle, (uint64_t)v18);
  v123(v18, v55[33], v55[34], v55[35], v55[36]);
  uint64_t v97 = v18;
  sub_1001F2B74((uint64_t)v18);
  sub_100121584((uint64_t)v45, a4, (uint64_t)v116);
  uint64_t v121 = v45;
  uint64_t v113 = v53;
  v56(v45, a4);
  uint64_t v58 = v57 + OBJC_IVAR____TtCV7Weather28ElevatedAqiSevereNewsContent8_Storage_map;
  swift_beginAccess();
  uint64_t v59 = v58;
  uint64_t v60 = v99;
  sub_10027A764(v59, v99);
  if (_s7Weather24LocationCompositionStateOwet_0(v60, 1, v98) == 1)
  {
    sub_10027A7CC(v60);
  }
  else
  {
    uint64_t v61 = v95;
    sub_10027A82C(v60, v95);
    sub_10027A890((uint64_t)(v55 + 24), (uint64_t)v150);
    sub_10027A890((uint64_t)v150, (uint64_t)v151);
    if (v152 != 1)
    {
      uint64_t v65 = (uint64_t)v122;
      v123((char *)v61, v151[0], v151[1], v151[2], v151[3]);
      sub_1001F2B74(v61);
      uint64_t v66 = (uint64_t)v121;
      sub_100121584(v65, a4, (uint64_t)v121);
      uint64_t v67 = (void (*)(uint64_t, uint64_t))v124;
      v124((char *)v65, a4);
      uint64_t v62 = (uint64_t)v119;
      sub_100121584(v66, a4, (uint64_t)v119);
      v67(v66, a4);
      uint64_t v63 = v62;
      uint64_t v64 = 0;
      goto LABEL_7;
    }
    sub_1001F2B74(v61);
  }
  uint64_t v62 = (uint64_t)v119;
  uint64_t v63 = (uint64_t)v119;
  uint64_t v64 = 1;
LABEL_7:
  _s7Weather24LocationCompositionStateOwst_0(v63, v64, 1, a4);
  sub_1000CA354();
  uint64_t v68 = *(void (**)(uint64_t, uint64_t))(v112 + 8);
  uint64_t v99 = (v112 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v68(v62, v120);
  uint64_t v69 = a4;
  uint64_t v70 = v117;
  uint64_t v71 = (uint64_t)v97;
  sub_1001F3734(*(void *)(v117 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_hourlyForecast, (uint64_t)v97);
  uint64_t v72 = (void (*)(uint64_t, void, void, void, void))v123;
  uint64_t v73 = (uint64_t)v122;
  v123((char *)v71, v55[16], v55[17], v55[18], v55[19]);
  sub_1001F2B74(v71);
  sub_100121584(v73, v69, (uint64_t)v121);
  v124((char *)v73, v69);
  sub_1001F3734(*(void *)(v70 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_dailyForecast, v71);
  uint64_t v74 = (uint64_t)v114;
  v72(v71, v55[8], v55[9], v55[10], v55[11]);
  sub_1001F2B74(v71);
  sub_100121584(v74, v69, v73);
  v124((char *)v74, v69);
  sub_1001F3734(*(void *)(v70 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_uvIndex, v71);
  uint64_t v75 = (uint64_t)v104;
  v72(v71, v55[53], v55[54], v55[55], v55[56]);
  sub_1001F2B74(v71);
  uint64_t v76 = v102;
  sub_100121584(v75, v69, v74);
  uint64_t v77 = v124;
  v124((char *)v75, v69);
  sub_1001F3734(*(void *)(v117 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_sunriseSunset, v71);
  uint64_t v78 = (uint64_t)v107;
  v123((char *)v71, v55[49], v55[50], v55[51], v55[52]);
  sub_1001F2B74(v71);
  sub_100121584(v78, v69, v75);
  uint64_t v79 = v77;
  v77((char *)v78, v69);
  uint64_t v80 = *(void (**)(uint64_t, char *, uint64_t))(v105 + 16);
  v80(v78, v103, v69);
  uint64_t v142 = v78;
  double v81 = v106;
  v80((uint64_t)v106, v115, v69);
  uint64_t v143 = v81;
  id v82 = v109;
  v80((uint64_t)v109, v116, v69);
  uint64_t v144 = v82;
  uint64_t v83 = v112 + 16;
  uint64_t v84 = (uint64_t)v119;
  (*(void (**)(char *, char *, uint64_t))(v112 + 16))(v119, v118, v120);
  uint64_t v145 = v84;
  uint64_t v85 = v108;
  v80((uint64_t)v108, v121, v69);
  uint64_t v146 = v85;
  uint64_t v86 = v110;
  v80((uint64_t)v110, v122, v69);
  uint64_t v147 = v86;
  uint64_t v87 = v111;
  v80((uint64_t)v111, v114, v69);
  uint64_t v148 = v87;
  uint64_t v88 = v100;
  uint64_t v89 = v104;
  v80((uint64_t)v100, v104, v69);
  uint64_t v149 = v88;
  uint64_t v90 = v88;
  uint64_t v134 = v69;
  uint64_t v135 = v69;
  uint64_t v91 = v120;
  uint64_t v136 = v69;
  uint64_t v137 = v120;
  uint64_t v138 = v69;
  uint64_t v139 = v69;
  uint64_t v140 = v69;
  uint64_t v141 = v69;
  uint64_t v126 = v76;
  uint64_t v127 = v76;
  uint64_t v128 = v76;
  uint64_t v125 = v76;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v130 = v76;
  uint64_t v131 = v76;
  uint64_t v132 = v76;
  uint64_t v133 = v76;
  sub_1006E9080();
  v79(v89, v69);
  v79(v114, v69);
  v79(v122, v69);
  v79(v121, v69);
  uint64_t v92 = *(void (**)(char *, uint64_t))(v83 - 8);
  v92(v118, v91);
  v79(v116, v69);
  v79(v115, v69);
  v79(v103, v69);
  v79(v90, v69);
  v79(v111, v69);
  v79(v110, v69);
  v79(v108, v69);
  v92(v119, v91);
  v79(v109, v69);
  v79(v106, v69);
  return ((uint64_t (*)(char *, uint64_t))v79)(v107, v69);
}

uint64_t sub_1002857FC@<X0>(uint64_t a1@<X0>, void (*a2)(char *, void, void, void, void)@<X2>, void *a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X6>, uint64_t a6@<X8>)
{
  uint64_t v102 = a5;
  uint64_t v84 = a6;
  uint64_t v10 = type metadata accessor for LocationComponentContainerViewModel();
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v82 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v82 = *(void *)(a4 - 8);
  uint64_t v13 = v82;
  __chkstk_darwin(v14);
  uint64_t v83 = (char *)&v82 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v98 = (char *)&v82 - v17;
  __chkstk_darwin(v18);
  uint64_t v97 = (char *)&v82 - v19;
  __chkstk_darwin(v20);
  uint64_t v96 = (char *)&v82 - v21;
  __chkstk_darwin(v22);
  uint64_t v95 = (char *)&v82 - v23;
  __chkstk_darwin(v24);
  uint64_t v93 = (char *)&v82 - v25;
  __chkstk_darwin(v26);
  uint64_t v92 = (char *)&v82 - v27;
  __chkstk_darwin(v28);
  uint64_t v90 = (char *)&v82 - v29;
  __chkstk_darwin(v30);
  uint64_t v89 = (char *)&v82 - v31;
  __chkstk_darwin(v32);
  uint64_t v101 = (char *)&v82 - v33;
  __chkstk_darwin(v34);
  uint64_t v87 = (char *)&v82 - v35;
  __chkstk_darwin(v36);
  uint64_t v86 = (char *)&v82 - v37;
  __chkstk_darwin(v38);
  uint64_t v100 = (char *)&v82 - v39;
  __chkstk_darwin(v40);
  uint64_t v42 = (char *)&v82 - v41;
  __chkstk_darwin(v43);
  uint64_t v45 = (char *)&v82 - v44;
  __chkstk_darwin(v46);
  uint64_t v48 = (char *)&v82 - v47;
  uint64_t v94 = (char *)&v82 - v47;
  sub_1001F3734(*(void *)(a1 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_wind, (uint64_t)v12);
  uint64_t v49 = a3[61];
  uint64_t v50 = a3[62];
  uint64_t v51 = a3[63];
  uint64_t v52 = a3[64];
  uint64_t v99 = a2;
  a2(v12, v49, v50, v51, v52);
  sub_1001F2B74((uint64_t)v12);
  sub_100121584((uint64_t)v45, a4, (uint64_t)v48);
  uint64_t v53 = *(void (**)(char *, uint64_t))(v13 + 8);
  uint64_t v91 = v45;
  v53(v45, a4);
  sub_1001F3734(*(void *)(a1 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_precipitationTotal, (uint64_t)v12);
  a2(v12, a3[41], a3[42], a3[43], a3[44]);
  sub_1001F2B74((uint64_t)v12);
  sub_100121584((uint64_t)v42, a4, (uint64_t)v45);
  uint64_t v88 = v42;
  v53(v42, a4);
  uint64_t v85 = a1;
  sub_1001F3734(*(void *)(a1 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_feelsLike, (uint64_t)v12);
  uint64_t v54 = (uint64_t)v100;
  v99(v12, a3[12], a3[13], a3[14], a3[15]);
  sub_1001F2B74((uint64_t)v12);
  sub_100121584(v54, a4, (uint64_t)v42);
  uint64_t v55 = v54;
  v53((char *)v54, a4);
  sub_1001F3734(*(void *)(a1 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_humidity, (uint64_t)v12);
  uint64_t v56 = (uint64_t)v86;
  uint64_t v57 = v99;
  v99(v12, a3[20], a3[21], a3[22], a3[23]);
  sub_1001F2B74((uint64_t)v12);
  sub_100121584(v56, a4, v55);
  v53((char *)v56, a4);
  sub_1001F3734(*(void *)(v85 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_visibility, (uint64_t)v12);
  uint64_t v58 = (uint64_t)v87;
  v57(v12, a3[57], a3[58], a3[59], a3[60]);
  sub_1001F2B74((uint64_t)v12);
  uint64_t v59 = v58;
  sub_100121584(v58, a4, v56);
  v53((char *)v58, a4);
  uint64_t v60 = v85;
  sub_1001F3734(*(void *)(v85 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_pressure, (uint64_t)v12);
  uint64_t v61 = (uint64_t)v101;
  uint64_t v62 = v99;
  v99(v12, a3[37], a3[38], a3[39], a3[40]);
  sub_1001F2B74((uint64_t)v12);
  sub_100121584(v61, a4, v59);
  v53((char *)v61, a4);
  sub_1001F3734(*(void *)(v60 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_moon, (uint64_t)v12);
  uint64_t v63 = (uint64_t)v89;
  v62(v12, a3[29], a3[30], a3[31], a3[32]);
  sub_1001F2B74((uint64_t)v12);
  sub_100121584(v63, a4, (uint64_t)v101);
  v53((char *)v63, a4);
  sub_1001F3734(*(void *)(v60 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_averages, (uint64_t)v12);
  uint64_t v64 = a3[4];
  uint64_t v65 = a3[5];
  uint64_t v66 = a3[6];
  uint64_t v67 = a3[7];
  uint64_t v68 = (uint64_t)v90;
  v62(v12, v64, v65, v66, v67);
  sub_1001F2B74((uint64_t)v12);
  sub_100121584(v68, a4, v63);
  v53((char *)v68, a4);
  uint64_t v69 = *(void (**)(uint64_t, char *, uint64_t))(v82 + 16);
  v69(v68, v94, a4);
  uint64_t v119 = v68;
  uint64_t v70 = v92;
  v69((uint64_t)v92, v91, a4);
  uint64_t v120 = v70;
  uint64_t v71 = v93;
  v69((uint64_t)v93, v88, a4);
  uint64_t v121 = v71;
  uint64_t v72 = v95;
  v69((uint64_t)v95, v100, a4);
  uint64_t v122 = v72;
  uint64_t v73 = v96;
  uint64_t v74 = v86;
  v69((uint64_t)v96, v86, a4);
  uint64_t v123 = v73;
  uint64_t v75 = v97;
  uint64_t v76 = v87;
  v69((uint64_t)v97, v87, a4);
  uint64_t v124 = v75;
  uint64_t v77 = v98;
  uint64_t v78 = (uint64_t)v101;
  v69((uint64_t)v98, v101, a4);
  uint64_t v125 = v77;
  uint64_t v79 = v83;
  uint64_t v80 = v89;
  v69((uint64_t)v83, v89, a4);
  uint64_t v126 = v79;
  uint64_t v111 = a4;
  uint64_t v112 = a4;
  uint64_t v113 = a4;
  uint64_t v114 = a4;
  uint64_t v115 = a4;
  uint64_t v116 = a4;
  uint64_t v117 = a4;
  uint64_t v118 = a4;
  uint64_t v103 = v102;
  uint64_t v104 = v102;
  uint64_t v105 = v102;
  uint64_t v106 = v102;
  uint64_t v107 = v102;
  uint64_t v108 = v102;
  uint64_t v109 = v102;
  uint64_t v110 = v102;
  sub_1006E9080();
  v53(v80, a4);
  v53((char *)v78, a4);
  v53(v76, a4);
  v53(v74, a4);
  v53(v100, a4);
  v53(v88, a4);
  v53(v91, a4);
  v53(v94, a4);
  v53(v79, a4);
  v53(v98, a4);
  v53(v97, a4);
  v53(v96, a4);
  v53(v95, a4);
  v53(v93, a4);
  v53(v92, a4);
  return ((uint64_t (*)(char *, uint64_t))v53)(v90, a4);
}

uint64_t sub_100286244@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if (*(unsigned char *)(v2 + 9)) {
    __int16 v3 = 256;
  }
  else {
    __int16 v3 = 0;
  }
  return sub_1002847CC(*(void *)v2, v3 | *(unsigned __int8 *)(v2 + 8), *(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(a1 + 16), *(void *)(a1 + 24), a2);
}

uint64_t sub_100286270()
{
  return sub_1002862A0((uint64_t (*)(void, void, void, void, void, void, void))sub_100284C8C);
}

uint64_t sub_100286288()
{
  return sub_1002862A0((uint64_t (*)(void, void, void, void, void, void, void))sub_1002857FC);
}

uint64_t sub_1002862A0(uint64_t (*a1)(void, void, void, void, void, void, void))
{
  if (*(unsigned char *)(v1 + 41)) {
    int v2 = 256;
  }
  else {
    int v2 = 0;
  }
  return a1(*(void *)(v1 + 32), v2 | *(unsigned __int8 *)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56), *(void *)(v1 + 64), *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1002862D4()
{
  return swift_getWitnessTable();
}

uint64_t destroy for HomeAndWorkRefinementView(uint64_t a1)
{
  swift_release();

  return _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1 + 16);
}

uint64_t initializeWithCopy for HomeAndWorkRefinementView(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = a2 + 16;
  long long v5 = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 40) = v5;
  uint64_t v6 = v5;
  uint64_t v7 = **(void (***)(uint64_t, uint64_t, uint64_t))(v5 - 8);
  swift_retain();
  v7(a1 + 16, v4, v6);
  return a1;
}

void *assignWithCopy for HomeAndWorkRefinementView(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  sub_1000C1E18(a1 + 2, a2 + 2);
  return a1;
}

__n128 initializeWithTake for HomeAndWorkRefinementView(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for HomeAndWorkRefinementView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_release();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1 + 16);
  long long v5 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v5;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  return a1;
}

uint64_t getEnumTagSinglePayload for HomeAndWorkRefinementView(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 56))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for HomeAndWorkRefinementView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 56) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t sub_1002865B0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1002865CC()
{
  sub_10017DF08(&qword_100E652F0);
  sub_100162E4C();
  __chkstk_darwin(v2);
  uint64_t v3 = sub_100152344();
  uint64_t v4 = type metadata accessor for HomeAndWorkRefinementContentViewModel(v3);
  sub_100162E4C();
  __chkstk_darwin(v5);
  sub_10016279C();
  sub_10017DF08(&qword_100E652F8);
  sub_100162E4C();
  __chkstk_darwin(v6);
  sub_1001626E0();
  uint64_t v9 = v8 - v7;
  uint64_t v10 = type metadata accessor for HomeAndWorkRefinementViewModel(0);
  __chkstk_darwin(v10 - 8);
  sub_1001626E0();
  uint64_t v13 = v12 - v11;
  swift_retain();
  sub_10024E64C();
  swift_release();
  if (_s7Weather24LocationCompositionStateOwet_0(v13, 1, v4) == 1)
  {
    swift_storeEnumTagMultiPayload();
    sub_1001246C8(&qword_100E65300, &qword_100E652F0);
    return _ConditionalContent<>.init(storage:)();
  }
  else
  {
    sub_100287C90(v13, (uint64_t)v1);
    sub_100286840(v1, v0);
    sub_10006DF38((uint64_t)v0, v9, &qword_100E652F0);
    swift_storeEnumTagMultiPayload();
    sub_1001246C8(&qword_100E65300, &qword_100E652F0);
    _ConditionalContent<>.init(storage:)();
    sub_1001781AC((uint64_t)v0, &qword_100E652F0);
    return sub_100287FA8((uint64_t)v1, (void (*)(void))type metadata accessor for HomeAndWorkRefinementContentViewModel);
  }
}

uint64_t sub_100286840@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = v2;
  uint64_t v35 = sub_10017DF08(&qword_100E65308);
  uint64_t v8 = *(void *)(v35 - 8);
  __chkstk_darwin(v35);
  sub_1001626E0();
  uint64_t v11 = v10 - v9;
  uint64_t v12 = type metadata accessor for HomeAndWorkRefinementContentViewModel(0);
  uint64_t v13 = v12 - 8;
  __chkstk_darwin(v12);
  sub_100152344();
  uint64_t v14 = type metadata accessor for DetailViewVisibilityTrackerModel();
  uint64_t v15 = v14 - 8;
  __chkstk_darwin(v14);
  sub_10016279C();
  uint64_t v16 = enum case for DetailType.homeAndWorkRefinement(_:);
  type metadata accessor for DetailType();
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v17 + 104))(v4, v16);
  uint64_t v18 = (char *)a1 + *(int *)(v13 + 28);
  uint64_t v19 = v4 + *(int *)(v15 + 28);
  type metadata accessor for Location();
  sub_100162E4C();
  (*(void (**)(uint64_t, char *))(v20 + 16))(v19, v18);
  uint64_t v21 = v4 + *(int *)(v15 + 32);
  uint64_t v22 = enum case for DetailViewOrigin.unknown(_:);
  type metadata accessor for DetailViewOrigin();
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v23 + 104))(v21, v22);
  uint64_t v24 = v5[5];
  uint64_t v25 = v5[6];
  uint64_t v26 = sub_1001B1E64(v5 + 2, v24);
  v37[3] = v24;
  v37[4] = *(void *)(v25 + 8);
  uint64_t v27 = sub_100170694(v37);
  (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v24 - 8) + 16))(v27, v26, v24);
  uint64_t v29 = *a1;
  uint64_t v28 = a1[1];
  sub_100287D30((uint64_t)a1, v3, (void (*)(void))type metadata accessor for HomeAndWorkRefinementContentViewModel);
  sub_100287CF4((uint64_t)v5, (uint64_t)v36);
  *a2 = swift_getKeyPath();
  sub_10017DF08(&qword_100E65310);
  swift_storeEnumTagMultiPayload();
  uint64_t v30 = (int *)sub_10017DF08(&qword_100E652F0);
  sub_100287D30(v4, (uint64_t)a2 + v30[9], (void (*)(void))type metadata accessor for DetailViewVisibilityTrackerModel);
  sub_10020D948((uint64_t)v37, (uint64_t)a2 + v30[10]);
  uint64_t v31 = (uint64_t *)((char *)a2 + v30[11]);
  void *v31 = v29;
  v31[1] = v28;
  uint64_t v32 = (uint64_t *)((char *)a2 + v30[12]);
  void *v32 = 0;
  v32[1] = 0;
  *((unsigned char *)a2 + v30[13]) = 0;
  uint64_t v33 = (uint64_t *)((char *)a2 + v30[14]);
  *uint64_t v33 = 0;
  v33[1] = 0;
  *((unsigned char *)a2 + v30[15]) = 1;
  swift_bridgeObjectRetain();
  sub_10017DF08(&qword_100E65318);
  sub_100287D8C();
  List<>.init(content:)();
  sub_100287FA8(v3, (void (*)(void))type metadata accessor for HomeAndWorkRefinementContentViewModel);
  sub_100287F78((uint64_t)v36);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v37);
  sub_100287FA8(v4, (void (*)(void))type metadata accessor for DetailViewVisibilityTrackerModel);
  return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 32))((char *)a2 + v30[16], v11, v35);
}