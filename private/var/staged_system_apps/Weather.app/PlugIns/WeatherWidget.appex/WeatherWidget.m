WeatherWidget::WidgetDisplaySize_optional __swiftcall WidgetDisplaySize.init(rawValue:)(Swift::Int rawValue)
{
  if ((unint64_t)rawValue >= 4) {
    LOBYTE(rawValue) = 4;
  }
  return (WeatherWidget::WidgetDisplaySize_optional)rawValue;
}

uint64_t WidgetDisplaySize.rawValue.getter(uint64_t result)
{
  return result;
}

BOOL sub_100005044(char *a1, char *a2)
{
  return sub_100017C10(*a1, *a2);
}

uint64_t sub_100005050()
{
  return sub_1000260E4(*v0);
}

void sub_100005058(uint64_t a1)
{
  sub_100019684(a1, *v1);
}

uint64_t sub_100005060(uint64_t a1)
{
  return sub_100026378(a1, *v1);
}

WeatherWidget::WidgetDisplaySize_optional sub_100005068@<W0>(Swift::Int *a1@<X0>, WeatherWidget::WidgetDisplaySize_optional *a2@<X8>)
{
  result.value = WidgetDisplaySize.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

uint64_t sub_100005094@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = WidgetDisplaySize.rawValue.getter(*v1);
  *a1 = result;
  return result;
}

BOOL static WidgetDisplaySize.< infix(_:_:)(unsigned __int8 a1, unsigned __int8 a2)
{
  return a1 < a2;
}

BOOL sub_1000050D0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return static WidgetDisplaySize.< infix(_:_:)(*a1, *a2);
}

BOOL sub_1000050DC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1000050E8(*a1, *a2);
}

BOOL sub_1000050E8(unsigned __int8 a1, unsigned __int8 a2)
{
  return a2 >= a1;
}

BOOL sub_1000050F8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_100005104(*a1, *a2);
}

BOOL sub_100005104(unsigned __int8 a1, unsigned __int8 a2)
{
  return a1 >= a2;
}

BOOL sub_100005114(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_100005120(*a1, *a2);
}

BOOL sub_100005120(unsigned __int8 a1, unsigned __int8 a2)
{
  return a2 < a1;
}

uint64_t sub_100005130()
{
  sub_10012CF20();
  if (v0 == 1210.0) {
    return 2;
  }
  sub_10012CF20();
  if (v2 > 1133.0) {
    return 3;
  }
  sub_10012CF20();
  if (v3 > 667.0) {
    return 2;
  }
  sub_10012CF20();
  return v4 > 320.0;
}

BOOL sub_1000051CC(unsigned __int8 a1)
{
  unsigned int v1 = a1;
  id v2 = [self currentDevice];
  id v3 = [v2 userInterfaceIdiom];

  return v3 == (id)1 && v1 < 3;
}

uint64_t variable initialization expression of AggregateWeatherViewModel.__placeholderSunEvent@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for AggregateWeatherViewModel.SunEvent(0);

  return _s13WeatherWidget20WeatherDataViewModelOwst_0(a1, 1, 1, v2);
}

uint64_t _s13WeatherWidget20WeatherDataViewModelOwst_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(void *)(a4 - 8) + 56))();
}

uint64_t variable initialization expression of LocalSearchRequestManager.geocodeRequestDeduper()
{
  return sub_10012A7C0();
}

unint64_t sub_100005388()
{
  unint64_t result = qword_10016AEF0;
  if (!qword_10016AEF0)
  {
    sub_10012A810();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016AEF0);
  }
  return result;
}

uint64_t sub_1000053D8(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContext2();
    *a1 = result;
  }
  return result;
}

unint64_t sub_10000541C()
{
  unint64_t result = qword_10016AF00;
  if (!qword_10016AF00)
  {
    sub_100005470(&qword_10016AEF8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016AF00);
  }
  return result;
}

uint64_t sub_100005470(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContextInMetadataState2();
    *a1 = result;
  }
  return result;
}

double variable initialization expression of LocalSearchRequestManager.$__lazy_storage_$_store@<D0>(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  *(void *)&double result = 1;
  *(_OWORD *)(a1 + 24) = xmmword_10012F2D0;
  return result;
}

uint64_t variable initialization expression of WeatherIntentResponse.code()
{
  return 0;
}

unint64_t sub_1000054DC()
{
  unint64_t result = qword_10016AF10;
  if (!qword_10016AF10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016AF10);
  }
  return result;
}

unsigned char *initializeBufferWithCopyOfBuffer for WidgetDisplaySize(unsigned char *result, unsigned char *a2)
{
  *unint64_t result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for WidgetDisplaySize(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFD)
  {
    if (a2 + 3 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 3) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 4;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 4;
  int v5 = v6 - 4;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for WidgetDisplaySize(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10000568CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

uint64_t sub_1000056B4(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_1000056C0(unsigned char *result, char a2)
{
  *unint64_t result = a2;
  return result;
}

ValueMetadata *type metadata accessor for WidgetDisplaySize()
{
  return &type metadata for WidgetDisplaySize;
}

__n128 initializeWithTake for DailyForecastWidget(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t sub_1000056E4(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_100005704(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 16) = v3;
  return result;
}

void type metadata accessor for CLLocationCoordinate2D(uint64_t a1)
{
}

uint64_t initializeBufferWithCopyOfBuffer for ErrorViewAttributes(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

__n128 sub_100005774(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t sub_100005780(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_1000057A0(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 32) = v3;
  return result;
}

void type metadata accessor for CGRect(uint64_t a1)
{
}

void type metadata accessor for CGSize(uint64_t a1)
{
}

void type metadata accessor for CGPoint(uint64_t a1)
{
}

void sub_100005808(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4) {
      atomic_store(ForeignTypeMetadata, a2);
    }
  }
}

double sub_100005858()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10012C7F0();
  uint64_t v32 = *(void *)(v2 - 8);
  uint64_t v33 = v2;
  uint64_t v3 = __chkstk_darwin(v2);
  v31 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v30 = (uint64_t)&v30 - v5;
  uint64_t v6 = sub_10012AFD0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v12 = (char *)&v30 - v11;
  uint64_t v13 = type metadata accessor for ModernDailyForecastRowView();
  uint64_t v14 = __chkstk_darwin(v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = v0 + *(int *)(v14 + 20);
  uint64_t v18 = *(void *)v17;
  char v19 = *(unsigned char *)(v17 + 8);
  sub_10000886C(*(void *)v17, v19);
  char v20 = sub_10008F2A4(v18, v19);
  sub_100008BF8(v18, v19);
  sub_10000B0C0(v1, (uint64_t)v16, (void (*)(void))type metadata accessor for ModernDailyForecastRowView);
  if (v20)
  {
    sub_10000B164((uint64_t)v16, (void (*)(void))type metadata accessor for ModernDailyForecastRowView);
    return 1.0;
  }
  else
  {
    sub_10008F524((uint64_t)v12);
    (*(void (**)(char *, void, uint64_t))(v7 + 104))(v10, enum case for ColorSchemeContrast.increased(_:), v6);
    char v22 = sub_10012AFC0();
    v23 = *(void (**)(char *, uint64_t))(v7 + 8);
    v23(v10, v6);
    v23(v12, v6);
    sub_10000B164((uint64_t)v16, (void (*)(void))type metadata accessor for ModernDailyForecastRowView);
    double result = 1.0;
    if ((v22 & 1) == 0)
    {
      uint64_t v24 = v30;
      sub_10008F028(v30);
      v25 = v31;
      sub_10012C7D0();
      char v26 = sub_10012C7B0();
      v27 = *(void (**)(char *, uint64_t))(v32 + 8);
      v28 = v25;
      uint64_t v29 = v33;
      v27(v28, v33);
      v27((char *)v24, v29);
      double result = 0.27;
      if (v26) {
        return 0.7;
      }
    }
  }
  return result;
}

uint64_t sub_100005BB4@<X0>(uint64_t (**a1)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)@<X8>)
{
  uint64_t v3 = type metadata accessor for ModernDailyForecastRowView();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  __chkstk_darwin(v3 - 8);
  sub_10000B0C0(v1, (uint64_t)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), (void (*)(void))type metadata accessor for ModernDailyForecastRowView);
  unint64_t v6 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v7 = swift_allocObject();
  uint64_t result = sub_10000AF24((uint64_t)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v7 + v6);
  *a1 = sub_10000AF88;
  a1[1] = (uint64_t (*)@<X0>(uint64_t@<X0>, uint64_t@<X8>))v7;
  return result;
}

uint64_t sub_100005CBC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v25 = a1;
  uint64_t v29 = a3;
  uint64_t v28 = sub_10012B120();
  uint64_t v4 = *(void *)(v28 - 8);
  __chkstk_darwin(v28);
  unint64_t v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000053D8(&qword_10016B198);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (uint64_t *)((char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = sub_1000053D8(&qword_10016B1A0);
  __chkstk_darwin(v10);
  v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = sub_1000053D8(&qword_10016B1A8);
  uint64_t v13 = *(void *)(v27 - 8);
  __chkstk_darwin(v27);
  uint64_t v15 = (char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_1000053D8(&qword_10016B1B0);
  __chkstk_darwin(v26);
  uint64_t v17 = (char *)&v24 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  *uint64_t v9 = sub_10012B7B0();
  v9[1] = v18;
  uint64_t v19 = sub_1000053D8(&qword_10016B1B8);
  sub_100006074(a2, v25, (uint64_t *)((char *)v9 + *(int *)(v19 + 44)));
  sub_10012B7B0();
  sub_10004C6A4();
  sub_10000B2A8((uint64_t)v9, &qword_10016B198);
  sub_10012B0F0();
  unint64_t v20 = sub_10000B008();
  sub_10012B520();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v28);
  sub_10000B2A8((uint64_t)v12, &qword_10016B1A0);
  type metadata accessor for ModernDailyForecastRowView();
  uint64_t v32 = sub_10012BD20();
  uint64_t v33 = v21;
  uint64_t v30 = v10;
  unint64_t v31 = v20;
  swift_getOpaqueTypeConformance2();
  sub_10000822C();
  uint64_t v22 = v27;
  sub_10012B4E0();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v22);
  sub_10012AC80();
  return sub_10000B2A8((uint64_t)v17, &qword_10016B1B0);
}

uint64_t sub_100006074@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v111 = a2;
  v109 = a3;
  uint64_t v4 = sub_1000053D8(&qword_10016B1D0);
  __chkstk_darwin(v4 - 8);
  v114 = (uint64_t *)((char *)&v104 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v110 = sub_1000053D8(&qword_10016B1D8);
  __chkstk_darwin(v110);
  uint64_t v112 = (uint64_t)&v104 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v106 = sub_1000053D8(&qword_10016B1E0);
  uint64_t v7 = __chkstk_darwin(v106);
  uint64_t v108 = (uint64_t)&v104 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v107 = (uint64_t)&v104 - v9;
  uint64_t v130 = sub_10012BBA0();
  uint64_t v129 = *(void *)(v130 - 8);
  uint64_t v10 = __chkstk_darwin(v130);
  v128 = (char *)&v104 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v124 = (char *)&v104 - v12;
  uint64_t v133 = sub_10012BAB0();
  uint64_t v131 = *(void *)(v133 - 8);
  __chkstk_darwin(v133);
  v126 = (char *)&v104 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v127 = sub_1000053D8(&qword_10016B1E8) - 8;
  __chkstk_darwin(v127);
  v125 = (char *)&v104 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v132 = sub_1000053D8(&qword_10016B1F0) - 8;
  __chkstk_darwin(v132);
  v123 = (char *)&v104 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v113 = sub_1000053D8(&qword_10016B1F8);
  uint64_t v16 = __chkstk_darwin(v113);
  uint64_t v115 = (uint64_t)&v104 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v134 = (uint64_t)&v104 - v18;
  uint64_t v19 = type metadata accessor for ModernDailyForecastRowView();
  uint64_t v20 = *(int *)(v19 + 40);
  uint64_t v21 = v19;
  uint64_t v122 = v19;
  uint64_t v121 = a1 + v20;
  *(void *)v139 = sub_10012BCE0();
  *(void *)&v139[8] = v22;
  sub_10000822C();
  uint64_t v23 = sub_10012B420();
  uint64_t v25 = v24;
  char v27 = v26 & 1;
  sub_10012B5C0();
  uint64_t v28 = sub_10012B3A0();
  uint64_t v118 = v29;
  char v31 = v30;
  uint64_t v116 = v32;
  swift_release();
  char v33 = v31 & 1;
  sub_100008278(v23, v25, v27);
  swift_bridgeObjectRelease();
  uint64_t v34 = *(int *)(v21 + 36);
  uint64_t v35 = a1;
  uint64_t v36 = a1 + v34;
  uint64_t v119 = type metadata accessor for DailyViewAttributes();
  uint64_t v120 = v36;
  sub_10012B210();
  uint64_t v37 = v118;
  uint64_t v38 = sub_10012B3F0();
  uint64_t v40 = v39;
  char v42 = v41;
  uint64_t v117 = v43;
  swift_release();
  sub_100008278(v28, v37, v33);
  swift_bridgeObjectRelease();
  uint64_t v104 = sub_10012B350();
  uint64_t v116 = v44;
  int v105 = v45;
  uint64_t v118 = v46;
  sub_100008278(v38, v40, v42 & 1);
  swift_bridgeObjectRelease();
  v47 = v124;
  sub_10012BDC0();
  sub_10012BB60();
  v48 = *(void (**)(char *, uint64_t))(v129 + 8);
  v49 = v47;
  uint64_t v50 = v130;
  v48(v49, v130);
  v51 = v128;
  sub_10012BDC0();
  sub_10012BB30();
  v48(v51, v50);
  v52 = v126;
  sub_10012BAA0();
  uint64_t v53 = (uint64_t)v123;
  uint64_t v54 = *(void *)(v120 + *(int *)(v119 + 72));
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v56 = v131;
  uint64_t v57 = (uint64_t)v125;
  uint64_t v58 = v133;
  (*(void (**)(char *, char *, uint64_t))(v131 + 16))(v125, v52, v133);
  v59 = (uint64_t *)(v57 + *(int *)(v127 + 44));
  uint64_t *v59 = KeyPath;
  v59[1] = v54;
  v60 = *(void (**)(char *, uint64_t))(v56 + 8);
  swift_retain();
  v60(v52, v58);
  uint64_t v61 = v122;
  sub_10012B7A0();
  sub_10012ABC0();
  sub_10000B114(v57, v53, &qword_10016B1E8);
  v62 = (_OWORD *)(v53 + *(int *)(v132 + 44));
  long long v63 = v137;
  _OWORD *v62 = v136;
  v62[1] = v63;
  v62[2] = v138;
  sub_10000B2A8(v57, &qword_10016B1E8);
  unint64_t v64 = sub_100006C2C(1);
  uint64_t v65 = v35 + *(int *)(v61 + 56);
  *(void *)v139 = *(void *)v65;
  *(_OWORD *)&v139[8] = *(_OWORD *)(v65 + 8);
  sub_1000053D8(&qword_10016B200);
  uint64_t result = sub_10012B6E0();
  if ((v64 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_9;
  }
  uint64_t result = v135;
  if (v64 >= *(void *)(v135 + 16))
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  v67 = (double *)(v135 + 32 * v64);
  CGFloat v68 = v67[4];
  CGFloat v69 = v67[5];
  CGFloat v70 = v67[6];
  CGFloat v71 = v67[7];
  swift_bridgeObjectRelease();
  v141.origin.x = v68;
  v141.origin.y = v69;
  v141.size.width = v70;
  v141.size.height = v71;
  CGFloat MinX = CGRectGetMinX(v141);
  uint64_t v73 = v115;
  sub_10000B114(v53, v115, &qword_10016B1F0);
  v74 = (CGFloat *)(v73 + *(int *)(v113 + 36));
  CGFloat *v74 = MinX;
  v74[1] = 0.0;
  sub_10000B2A8(v53, &qword_10016B1F0);
  uint64_t v75 = v134;
  sub_10000B2F4(v73, v134, &qword_10016B1F8);
  uint64_t v76 = sub_10012AF10();
  uint64_t v77 = (uint64_t)v114;
  uint64_t *v114 = v76;
  *(void *)(v77 + 8) = 0;
  *(unsigned char *)(v77 + 16) = 1;
  uint64_t v78 = sub_1000053D8(&qword_10016B208);
  sub_100006DB0(v35, v77 + *(int *)(v78 + 44));
  unint64_t v79 = sub_100006C2C(2);
  *(void *)v139 = *(void *)v65;
  *(_OWORD *)&v139[8] = *(_OWORD *)(v65 + 8);
  uint64_t result = sub_10012B6E0();
  if ((v79 & 0x8000000000000000) != 0)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  uint64_t result = v135;
  if (v79 >= *(void *)(v135 + 16))
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  v80 = (double *)(v135 + 32 * v79);
  CGFloat v81 = v80[4];
  CGFloat v82 = v80[5];
  CGFloat v83 = v80[6];
  CGFloat v84 = v80[7];
  swift_bridgeObjectRelease();
  v142.origin.x = v81;
  v142.origin.y = v82;
  v142.size.width = v83;
  v142.size.height = v84;
  CGFloat v85 = CGRectGetMinX(v142);
  uint64_t v86 = v112;
  sub_10000B114(v77, v112, &qword_10016B1D0);
  v87 = (CGFloat *)(v86 + *(int *)(v110 + 36));
  CGFloat *v87 = v85;
  v87[1] = 0.0;
  sub_10000B2A8(v77, &qword_10016B1D0);
  sub_10012ABD0();
  unint64_t v88 = sub_100006C2C(2);
  *(void *)v139 = *(void *)v65;
  *(_OWORD *)&v139[8] = *(_OWORD *)(v65 + 8);
  uint64_t result = sub_10012B6E0();
  if ((v88 & 0x8000000000000000) != 0)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  uint64_t result = v135;
  if (v88 < *(void *)(v135 + 16))
  {
    char v89 = v105 & 1;
    v90 = (double *)(v135 + 32 * v88);
    CGFloat v91 = v90[4];
    CGFloat v92 = v90[5];
    CGFloat v93 = v90[6];
    CGFloat v94 = v90[7];
    swift_bridgeObjectRelease();
    v143.origin.x = v91;
    v143.origin.y = v92;
    v143.size.width = v93;
    v143.size.height = v94;
    CGRectGetMinX(v143);
    sub_10012B7A0();
    sub_10012ABC0();
    uint64_t v95 = v108;
    sub_10000B114(v86, v108, &qword_10016B1D8);
    v96 = (_OWORD *)(v95 + *(int *)(v106 + 36));
    long long v97 = *(_OWORD *)&v139[16];
    _OWORD *v96 = *(_OWORD *)v139;
    v96[1] = v97;
    v96[2] = v140;
    sub_10000B2A8(v86, &qword_10016B1D8);
    uint64_t v98 = v107;
    sub_10000B2F4(v95, v107, &qword_10016B1E0);
    LOBYTE(v135) = v89;
    sub_10000B114(v75, v73, &qword_10016B1F8);
    sub_10000B114(v98, v95, &qword_10016B1E0);
    v99 = v109;
    uint64_t v100 = v104;
    uint64_t v101 = v73;
    uint64_t v102 = v116;
    uint64_t *v109 = v104;
    v99[1] = v102;
    *((unsigned char *)v99 + 16) = v89;
    v99[3] = v118;
    *((_WORD *)v99 + 16) = 257;
    uint64_t v103 = sub_1000053D8(&qword_10016B210);
    sub_10000B114(v101, (uint64_t)v99 + *(int *)(v103 + 48), &qword_10016B1F8);
    sub_10000B114(v95, (uint64_t)v99 + *(int *)(v103 + 64), &qword_10016B1E0);
    sub_10000B0B0(v100, v102, v89);
    swift_bridgeObjectRetain();
    sub_10000B0B0(v100, v102, v89);
    swift_bridgeObjectRetain();
    sub_10000B2A8(v98, &qword_10016B1E0);
    sub_10000B2A8(v134, &qword_10016B1F8);
    sub_100008278(v100, v102, v89);
    swift_bridgeObjectRelease();
    sub_10000B2A8(v95, &qword_10016B1E0);
    sub_10000B2A8(v101, &qword_10016B1F8);
    sub_100008278(v100, v102, v135);
    return swift_bridgeObjectRelease();
  }
LABEL_13:
  __break(1u);
  return result;
}

uint64_t sub_100006C2C(uint64_t a1)
{
  uint64_t v3 = sub_10012AC10();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = ((uint64_t (*)(void))__chkstk_darwin)();
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v18 - v8;
  sub_10008EFE8((uint64_t)&v18 - v8);
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v7, enum case for LayoutDirection.rightToLeft(_:), v3);
  char v10 = sub_10012AC00();
  uint64_t v11 = *(void (**)(char *, uint64_t))(v4 + 8);
  v11(v7, v3);
  v11(v9, v3);
  if ((v10 & 1) == 0) {
    return a1;
  }
  uint64_t v12 = v1 + *(int *)(type metadata accessor for ModernDailyForecastRowView() + 36);
  uint64_t result = type metadata accessor for DailyViewAttributes();
  uint64_t v14 = *(void *)(v12 + *(int *)(result + 84));
  BOOL v15 = __OFSUB__(v14, a1);
  uint64_t v16 = v14 - a1;
  if (v15)
  {
    __break(1u);
  }
  else
  {
    BOOL v15 = __OFSUB__(v16, 1);
    uint64_t v17 = v16 - 1;
    if (!v15) {
      return v17 & ~(v17 >> 63);
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_100006DB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v166 = a2;
  uint64_t v3 = sub_10012A510();
  __chkstk_darwin(v3 - 8);
  v147 = (char *)&v128 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10012A530();
  uint64_t v145 = *(void *)(v5 - 8);
  uint64_t v146 = v5;
  __chkstk_darwin(v5);
  v144 = (char *)&v128 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v130 = sub_1000053D8(&qword_10016B060);
  uint64_t v139 = *(void *)(v130 - 8);
  uint64_t v7 = __chkstk_darwin(v130);
  long long v137 = (char *)&v128 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v134 = (char *)&v128 - v9;
  uint64_t v10 = type metadata accessor for ModernDailyForecastRowView();
  uint64_t v11 = __chkstk_darwin(v10);
  uint64_t v133 = (char *)&v128 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v131 = (uint64_t)&v128 - v13;
  uint64_t v14 = sub_1000053D8(&qword_10016B098);
  uint64_t v15 = __chkstk_darwin(v14 - 8);
  uint64_t v132 = (uint64_t)&v128 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v129 = (uint64_t)&v128 - v17;
  uint64_t v18 = sub_10012B920();
  uint64_t v142 = *(void *)(v18 - 8);
  uint64_t v143 = v18;
  __chkstk_darwin(v18);
  long long v140 = (char *)&v128 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v141 = sub_1000053D8(&qword_10016B218);
  __chkstk_darwin(v141);
  long long v138 = (char *)&v128 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v163 = sub_1000053D8(&qword_10016B220);
  uint64_t v21 = __chkstk_darwin(v163);
  long long v136 = (char *)&v128 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  uint64_t v135 = (uint64_t)&v128 - v23;
  uint64_t v24 = sub_1000053D8(&qword_10016B228);
  uint64_t v25 = __chkstk_darwin(v24 - 8);
  uint64_t v165 = (uint64_t)&v128 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  uint64_t v167 = (uint64_t)&v128 - v27;
  uint64_t v28 = sub_10012ACA0();
  __chkstk_darwin(v28 - 8);
  v162 = (char *)&v128 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_10012C7F0();
  uint64_t v156 = *(void *)(v30 - 8);
  uint64_t v157 = v30;
  uint64_t v31 = __chkstk_darwin(v30);
  v151 = (char *)&v128 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v31);
  uint64_t v150 = (uint64_t)&v128 - v33;
  uint64_t v34 = sub_10012B7D0();
  uint64_t v154 = *(void *)(v34 - 8);
  uint64_t v155 = v34;
  __chkstk_darwin(v34);
  v152 = (char *)&v128 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v153 = sub_1000053D8(&qword_10016B230) - 8;
  __chkstk_darwin(v153);
  uint64_t v37 = (char *)&v128 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v160 = sub_1000053D8(&qword_10016B238) - 8;
  __chkstk_darwin(v160);
  uint64_t v158 = (uint64_t)&v128 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v161 = sub_1000053D8(&qword_10016B240) - 8;
  uint64_t v39 = __chkstk_darwin(v161);
  uint64_t v164 = (uint64_t)&v128 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = __chkstk_darwin(v39);
  uint64_t v159 = (uint64_t)&v128 - v42;
  __chkstk_darwin(v41);
  uint64_t v171 = (uint64_t)&v128 - v43;
  uint64_t v44 = *(int *)(v10 + 36);
  uint64_t v168 = a1 + *(int *)(v10 + 40);
  uint64_t v169 = a1;
  uint64_t v170 = a1 + v44;
  uint64_t v45 = sub_100007ED0(v168, a1 + v44, (void (*)(uint64_t))&DailyForecastViewModel.low.getter);
  uint64_t v47 = v46;
  char v49 = v48 & 1;
  sub_10012B5C0();
  uint64_t v148 = sub_10012B3A0();
  uint64_t v149 = v50;
  uint64_t v52 = v51;
  char v54 = v53;
  swift_release();
  char v55 = v54 & 1;
  uint64_t v172 = v10;
  sub_100008278(v45, v47, v49);
  swift_bridgeObjectRelease();
  uint64_t v56 = v150;
  sub_10008F028(v150);
  uint64_t v57 = v151;
  sub_10012C7D0();
  LOBYTE(v45) = sub_10012C7B0();
  uint64_t v58 = *(void (**)(char *, uint64_t))(v156 + 8);
  v59 = v57;
  uint64_t v60 = v157;
  v58(v59, v157);
  v58((char *)v56, v60);
  uint64_t v62 = v154;
  uint64_t v61 = v155;
  long long v63 = (unsigned int *)&enum case for BlendMode.normal(_:);
  if ((v45 & 1) == 0) {
    long long v63 = (unsigned int *)&enum case for BlendMode.plusLighter(_:);
  }
  unint64_t v64 = v152;
  (*(void (**)(char *, void, uint64_t))(v154 + 104))(v152, *v63, v155);
  uint64_t v65 = (uint64_t)v162;
  (*(void (**)(char *, char *, uint64_t))(v62 + 16))(v162, v64, v61);
  sub_10000B0C0(v65, (uint64_t)&v37[*(int *)(v153 + 44)], (void (*)(void))&type metadata accessor for _BlendModeEffect);
  uint64_t v66 = v148;
  uint64_t v67 = v149;
  *(void *)uint64_t v37 = v148;
  *((void *)v37 + 1) = v52;
  v37[16] = v55;
  *((void *)v37 + 3) = v67;
  sub_10000B0B0(v66, v52, v55);
  swift_bridgeObjectRetain();
  sub_10000B164(v65, (void (*)(void))&type metadata accessor for _BlendModeEffect);
  (*(void (**)(char *, uint64_t))(v62 + 8))(v64, v61);
  uint64_t v68 = v52;
  uint64_t v70 = v168;
  uint64_t v69 = v169;
  sub_100008278(v66, v68, v55);
  swift_bridgeObjectRelease();
  double v71 = sub_100005858();
  uint64_t v72 = v158;
  sub_10000B114((uint64_t)v37, v158, &qword_10016B230);
  *(double *)(v72 + *(int *)(v160 + 44)) = v71;
  sub_10000B2A8((uint64_t)v37, &qword_10016B230);
  sub_10012B7C0();
  uint64_t v73 = v170;
  sub_10012ABC0();
  uint64_t v74 = v159;
  sub_10000B114(v72, v159, &qword_10016B238);
  uint64_t v75 = (_OWORD *)(v74 + *(int *)(v161 + 44));
  long long v76 = v174;
  *uint64_t v75 = v173;
  v75[1] = v76;
  v75[2] = v175;
  sub_10000B2A8(v72, &qword_10016B238);
  sub_10000B2F4(v74, v171, &qword_10016B240);
  sub_10012B7A0();
  sub_10012ABC0();
  v162 = v176;
  LODWORD(v161) = v177;
  uint64_t v160 = v178;
  LODWORD(v159) = v179;
  uint64_t v157 = v181;
  uint64_t v158 = v180;
  uint64_t v77 = type metadata accessor for DailyViewAttributes();
  uint64_t v78 = 1;
  if (*(unsigned char *)(v73 + *(int *)(v77 + 40)) == 1)
  {
    uint64_t v79 = v77;
    uint64_t v80 = v129;
    sub_10000B114(v73 + *(int *)(v77 + 88), v129, &qword_10016B098);
    uint64_t v81 = v130;
    int v82 = _s13WeatherWidget20WeatherDataViewModelOwet_0(v80, 1, v130);
    if (v82 == 1)
    {
      sub_10000B2A8(v80, &qword_10016B098);
      uint64_t v83 = v139;
    }
    else
    {
      sub_100129000();
      uint64_t v73 = v170;
      uint64_t v83 = v139;
      (*(void (**)(uint64_t, uint64_t))(v139 + 8))(v80, v81);
    }
    uint64_t v84 = (uint64_t)v133;
    uint64_t v85 = v131;
    sub_10000B0C0(v69, v131, (void (*)(void))type metadata accessor for ModernDailyForecastRowView);
    BOOL v86 = v82 == 1;
    v87 = v134;
    if (v86)
    {
      sub_10012BD90();
      sub_100129000();
      uint64_t v73 = v170;
      (*(void (**)(char *, uint64_t))(v83 + 8))(v87, v81);
    }
    sub_10000B164(v85, (void (*)(void))type metadata accessor for ModernDailyForecastRowView);
    uint64_t v88 = v73 + *(int *)(v79 + 92);
    uint64_t v89 = v132;
    sub_10000B114(v88, v132, &qword_10016B098);
    int v90 = _s13WeatherWidget20WeatherDataViewModelOwet_0(v89, 1, v81);
    if (v90 == 1)
    {
      sub_10000B2A8(v89, &qword_10016B098);
    }
    else
    {
      sub_100129000();
      (*(void (**)(uint64_t, uint64_t))(v83 + 8))(v89, v81);
    }
    sub_10000B0C0(v69, v84, (void (*)(void))type metadata accessor for ModernDailyForecastRowView);
    if (v90 == 1)
    {
      sub_10012BD70();
      sub_100129000();
      (*(void (**)(char *, uint64_t))(v83 + 8))(v87, v81);
    }
    sub_10000B164(v84, (void (*)(void))type metadata accessor for ModernDailyForecastRowView);
    uint64_t v70 = v168;
    sub_10012BD90();
    sub_100129000();
    CGFloat v91 = *(void (**)(char *, uint64_t))(v83 + 8);
    v91(v87, v81);
    CGFloat v92 = v137;
    sub_10012BD70();
    sub_100129000();
    v91(v92, v81);
    CGFloat v93 = v144;
    sub_10012BD10();
    sub_10012A520();
    (*(void (**)(char *, uint64_t))(v145 + 8))(v93, v146);
    sub_10012B750();
    CGFloat v94 = v140;
    sub_10012B910();
    sub_1000053D8(&qword_10016B090);
    sub_10012BA70();
    sub_10012B7A0();
    sub_10012ABC0();
    uint64_t v96 = v142;
    uint64_t v95 = v143;
    uint64_t v97 = (uint64_t)v138;
    (*(void (**)(char *, char *, uint64_t))(v142 + 16))(v138, v94, v143);
    uint64_t v98 = (_OWORD *)(v97 + *(int *)(v141 + 36));
    long long v99 = v183;
    *uint64_t v98 = v182;
    v98[1] = v99;
    v98[2] = v184;
    (*(void (**)(char *, uint64_t))(v96 + 8))(v94, v95);
    sub_10000B1B4();
    uint64_t v100 = v136;
    sub_10012B500();
    sub_10000B2A8(v97, &qword_10016B218);
    uint64_t v101 = (uint64_t)v100;
    uint64_t v102 = v135;
    sub_10000B2F4(v101, v135, &qword_10016B220);
    sub_10000B2F4(v102, v167, &qword_10016B220);
    uint64_t v78 = 0;
    uint64_t v73 = v170;
  }
  uint64_t v103 = v167;
  _s13WeatherWidget20WeatherDataViewModelOwst_0(v167, v78, 1, v163);
  sub_10012B7A0();
  sub_10012ABC0();
  uint64_t v163 = v185;
  LODWORD(v156) = v186;
  uint64_t v155 = v187;
  LODWORD(v154) = v188;
  v152 = v190;
  uint64_t v153 = v189;
  uint64_t v104 = sub_100007ED0(v70, v73, (void (*)(uint64_t))&DailyForecastViewModel.high.getter);
  uint64_t v106 = v105;
  char v108 = v107 & 1;
  sub_10012B5C0();
  uint64_t v168 = sub_10012B3A0();
  v151 = v109;
  char v111 = v110;
  uint64_t v170 = v112;
  swift_release();
  sub_100008278(v104, v106, v108);
  swift_bridgeObjectRelease();
  sub_10012B7C0();
  sub_10012ABC0();
  uint64_t v172 = v191;
  LODWORD(v169) = v192;
  uint64_t v150 = v193;
  LODWORD(v149) = v194;
  v147 = v196;
  uint64_t v148 = v195;
  uint64_t v113 = v171;
  uint64_t v114 = v164;
  sub_10000B114(v171, v164, &qword_10016B240);
  uint64_t v115 = v165;
  sub_10000B114(v103, v165, &qword_10016B228);
  uint64_t v116 = v166;
  sub_10000B114(v114, v166, &qword_10016B240);
  uint64_t v117 = (int *)sub_1000053D8(&qword_10016B248);
  uint64_t v118 = v116 + v117[12];
  *(void *)uint64_t v118 = 0;
  *(unsigned char *)(v118 + 8) = 1;
  *(void *)(v118 + 16) = v162;
  *(unsigned char *)(v118 + 24) = v161;
  *(void *)(v118 + 32) = v160;
  *(unsigned char *)(v118 + 40) = v159;
  uint64_t v119 = v157;
  *(void *)(v118 + 48) = v158;
  *(void *)(v118 + 56) = v119;
  sub_10000B114(v115, v116 + v117[16], &qword_10016B228);
  uint64_t v120 = v116 + v117[20];
  *(void *)uint64_t v120 = 0;
  *(unsigned char *)(v120 + 8) = 1;
  *(void *)(v120 + 16) = v163;
  *(unsigned char *)(v120 + 24) = v156;
  *(void *)(v120 + 32) = v155;
  *(unsigned char *)(v120 + 40) = v154;
  uint64_t v122 = (uint64_t)v151;
  uint64_t v121 = v152;
  *(void *)(v120 + 48) = v153;
  *(void *)(v120 + 56) = v121;
  uint64_t v123 = v116 + v117[24];
  uint64_t v124 = v168;
  *(void *)uint64_t v123 = v168;
  *(void *)(v123 + 8) = v122;
  *(unsigned char *)(v123 + 16) = v111 & 1;
  uint64_t v125 = v172;
  *(void *)(v123 + 24) = v170;
  *(void *)(v123 + 32) = v125;
  *(unsigned char *)(v123 + 40) = v169;
  *(void *)(v123 + 48) = v150;
  *(unsigned char *)(v123 + 56) = v149;
  v126 = v147;
  *(void *)(v123 + 64) = v148;
  *(void *)(v123 + 72) = v126;
  sub_10000B0B0(v124, v122, v111 & 1);
  swift_bridgeObjectRetain();
  sub_10000B2A8(v103, &qword_10016B228);
  sub_10000B2A8(v113, &qword_10016B240);
  sub_100008278(v124, v122, v111 & 1);
  swift_bridgeObjectRelease();
  sub_10000B2A8(v115, &qword_10016B228);
  return sub_10000B2A8(v114, &qword_10016B240);
}

uint64_t sub_100007ED0(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t v37 = a2;
  uint64_t v4 = sub_10012B940();
  sub_10000B40C();
  uint64_t v6 = v5;
  v33[1] = v5;
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10012CDD0();
  sub_10000B40C();
  uint64_t v12 = v11;
  uint64_t v14 = __chkstk_darwin(v13);
  uint64_t v16 = (char *)v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v18 = (char *)v33 - v17;
  sub_1000053D8(&qword_10016B060);
  sub_10000B40C();
  uint64_t v35 = v19;
  uint64_t v36 = v20;
  uint64_t v21 = __chkstk_darwin(v19);
  a3(v21);
  sub_10012B8F0();
  sub_10012CDC0();
  uint64_t v34 = *(void (**)(char *, uint64_t))(v12 + 8);
  v34(v18, v10);
  (*(void (**)(char *, void, uint64_t))(v6 + 104))(v9, enum case for WeatherFormatPlaceholder.none(_:), v4);
  sub_10012A090();
  sub_10012A080();
  sub_10000B260(&qword_10016B068, (void (*)(uint64_t))&type metadata accessor for NSUnitTemperature.BaseWeatherFormatStyle);
  uint64_t v22 = sub_100129020();
  uint64_t v24 = v23;
  swift_release();
  sub_10000B424();
  v25();
  v34(v16, v10);
  sub_10000B424();
  v26();
  uint64_t v38 = v22;
  uint64_t v39 = v24;
  sub_10000822C();
  uint64_t v27 = sub_10012B420();
  uint64_t v29 = v28;
  LOBYTE(v10) = v30 & 1;
  type metadata accessor for DailyViewAttributes();
  sub_10012B2A0();
  sub_10012B2C0();
  sub_10012B210();
  swift_release();
  uint64_t v31 = sub_10012B3F0();
  swift_release();
  sub_100008278(v27, v29, v10);
  swift_bridgeObjectRelease();
  return v31;
}

unint64_t sub_10000822C()
{
  unint64_t result = qword_10016B070;
  if (!qword_10016B070)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016B070);
  }
  return result;
}

uint64_t sub_100008278(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_release();
  }
  else {
    return swift_bridgeObjectRelease();
  }
}

uint64_t *sub_100008288(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1000053D8(&qword_10016B078);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_10012AC10();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v9 = a3[5];
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = *(void *)v11;
    char v13 = v11[8];
    sub_10000886C(*(void *)v11, v13);
    *(void *)uint64_t v10 = v12;
    v10[8] = v13;
    uint64_t v14 = a3[6];
    uint64_t v15 = (uint64_t *)((char *)a1 + v14);
    uint64_t v16 = (uint64_t *)((char *)a2 + v14);
    sub_1000053D8(&qword_10016B080);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v17 = sub_10012AFD0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
    }
    else
    {
      *uint64_t v15 = *v16;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v18 = a3[7];
    uint64_t v19 = (uint64_t *)((char *)a1 + v18);
    uint64_t v20 = (uint64_t *)((char *)a2 + v18);
    sub_1000053D8(&qword_10016B088);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v21 = sub_10012C7F0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v21 - 8) + 16))(v19, v20, v21);
    }
    else
    {
      *uint64_t v19 = *v20;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v22 = a3[8];
    uint64_t v23 = (char *)a1 + v22;
    uint64_t v24 = (char *)a2 + v22;
    uint64_t v25 = sub_1000053D8(&qword_10016B090);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 16))(v23, v24, v25);
    uint64_t v26 = a3[9];
    uint64_t v27 = (char *)a1 + v26;
    uint64_t v28 = (char *)a2 + v26;
    uint64_t v29 = sub_10012C800();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 16))(v27, v28, v29);
    char v30 = (int *)type metadata accessor for DailyViewAttributes();
    *(void *)&v27[v30[5]] = *(void *)&v28[v30[5]];
    *(_WORD *)&v27[v30[6]] = *(_WORD *)&v28[v30[6]];
    *(void *)&v27[v30[7]] = *(void *)&v28[v30[7]];
    v27[v30[8]] = v28[v30[8]];
    v27[v30[9]] = v28[v30[9]];
    v27[v30[10]] = v28[v30[10]];
    *(void *)&v27[v30[11]] = *(void *)&v28[v30[11]];
    v27[v30[12]] = v28[v30[12]];
    v27[v30[13]] = v28[v30[13]];
    v27[v30[14]] = v28[v30[14]];
    v27[v30[15]] = v28[v30[15]];
    *(void *)&v27[v30[16]] = *(void *)&v28[v30[16]];
    *(void *)&v27[v30[17]] = *(void *)&v28[v30[17]];
    *(void *)&v27[v30[18]] = *(void *)&v28[v30[18]];
    *(void *)&v27[v30[19]] = *(void *)&v28[v30[19]];
    *(void *)&v27[v30[20]] = *(void *)&v28[v30[20]];
    *(void *)&v27[v30[21]] = *(void *)&v28[v30[21]];
    uint64_t v31 = v30[22];
    __dst = &v27[v31];
    uint64_t v32 = &v28[v31];
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v33 = sub_1000053D8(&qword_10016B060);
    if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v32, 1, v33))
    {
      uint64_t v34 = sub_1000053D8(&qword_10016B098);
      memcpy(__dst, v32, *(void *)(*(void *)(v34 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 16))(__dst, v32, v33);
      _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)__dst, 0, 1, v33);
    }
    uint64_t v35 = v30[23];
    uint64_t v36 = &v27[v35];
    uint64_t v37 = &v28[v35];
    if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v37, 1, v33))
    {
      uint64_t v38 = sub_1000053D8(&qword_10016B098);
      memcpy(v36, v37, *(void *)(*(void *)(v38 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 16))(v36, v37, v33);
      _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v36, 0, 1, v33);
    }
    uint64_t v39 = a3[10];
    uint64_t v40 = (char *)a1 + v39;
    uint64_t v41 = (char *)a2 + v39;
    uint64_t v42 = sub_10012BDF0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v42 - 8) + 16))(v40, v41, v42);
    uint64_t v43 = a3[12];
    *(uint64_t *)((char *)a1 + a3[11]) = *(uint64_t *)((char *)a2 + a3[11]);
    *(uint64_t *)((char *)a1 + v43) = *(uint64_t *)((char *)a2 + v43);
    uint64_t v44 = a3[14];
    *(uint64_t *)((char *)a1 + a3[13]) = *(uint64_t *)((char *)a2 + a3[13]);
    uint64_t v45 = (uint64_t *)((char *)a1 + v44);
    uint64_t v46 = (uint64_t *)((char *)a2 + v44);
    uint64_t v47 = v46[1];
    *uint64_t v45 = *v46;
    v45[1] = v47;
    v45[2] = v46[2];
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_10000886C(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    return swift_retain();
  }
  return result;
}

uint64_t _s13WeatherWidget20WeatherDataViewModelOwet_0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(void *)(a3 - 8) + 48))();
}

uint64_t sub_1000088A0(uint64_t a1, int *a2)
{
  sub_1000053D8(&qword_10016B078);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_10012AC10();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }
  sub_100008BF8(*(void *)(a1 + a2[5]), *(unsigned char *)(a1 + a2[5] + 8));
  uint64_t v5 = a1 + a2[6];
  sub_1000053D8(&qword_10016B080);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_10012AFD0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  }
  else
  {
    swift_release();
  }
  uint64_t v7 = a1 + a2[7];
  sub_1000053D8(&qword_10016B088);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = sub_10012C7F0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  }
  else
  {
    swift_release();
  }
  uint64_t v9 = a1 + a2[8];
  uint64_t v10 = sub_1000053D8(&qword_10016B090);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  uint64_t v11 = a1 + a2[9];
  uint64_t v12 = sub_10012C800();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  uint64_t v13 = type metadata accessor for DailyViewAttributes();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v14 = v11 + *(int *)(v13 + 88);
  uint64_t v15 = sub_1000053D8(&qword_10016B060);
  if (!_s13WeatherWidget20WeatherDataViewModelOwet_0(v14, 1, v15)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v14, v15);
  }
  uint64_t v16 = v11 + *(int *)(v13 + 92);
  if (!_s13WeatherWidget20WeatherDataViewModelOwet_0(v16, 1, v15)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v16, v15);
  }
  uint64_t v17 = a1 + a2[10];
  uint64_t v18 = sub_10012BDF0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(v17, v18);
  swift_release();
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_100008BF8(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    return swift_release();
  }
  return result;
}

void *sub_100008C04(void *a1, void *a2, int *a3)
{
  sub_1000053D8(&qword_10016B078);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_10012AC10();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = *(void *)v9;
  char v11 = v9[8];
  sub_10000886C(*(void *)v9, v11);
  *(void *)uint64_t v8 = v10;
  v8[8] = v11;
  uint64_t v12 = a3[6];
  uint64_t v13 = (void *)((char *)a1 + v12);
  uint64_t v14 = (void *)((char *)a2 + v12);
  sub_1000053D8(&qword_10016B080);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v15 = sub_10012AFD0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
  }
  else
  {
    *uint64_t v13 = *v14;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v16 = a3[7];
  uint64_t v17 = (void *)((char *)a1 + v16);
  uint64_t v18 = (void *)((char *)a2 + v16);
  sub_1000053D8(&qword_10016B088);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v19 = sub_10012C7F0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
  }
  else
  {
    *uint64_t v17 = *v18;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v20 = a3[8];
  uint64_t v21 = (char *)a1 + v20;
  uint64_t v22 = (char *)a2 + v20;
  uint64_t v23 = sub_1000053D8(&qword_10016B090);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
  char v48 = a3;
  uint64_t v24 = a3[9];
  uint64_t v25 = (char *)a1 + v24;
  uint64_t v26 = (char *)a2 + v24;
  uint64_t v27 = sub_10012C800();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
  uint64_t v28 = (int *)type metadata accessor for DailyViewAttributes();
  *(void *)&v25[v28[5]] = *(void *)&v26[v28[5]];
  *(_WORD *)&v25[v28[6]] = *(_WORD *)&v26[v28[6]];
  *(void *)&v25[v28[7]] = *(void *)&v26[v28[7]];
  v25[v28[8]] = v26[v28[8]];
  v25[v28[9]] = v26[v28[9]];
  v25[v28[10]] = v26[v28[10]];
  *(void *)&v25[v28[11]] = *(void *)&v26[v28[11]];
  v25[v28[12]] = v26[v28[12]];
  v25[v28[13]] = v26[v28[13]];
  v25[v28[14]] = v26[v28[14]];
  v25[v28[15]] = v26[v28[15]];
  *(void *)&v25[v28[16]] = *(void *)&v26[v28[16]];
  *(void *)&v25[v28[17]] = *(void *)&v26[v28[17]];
  *(void *)&v25[v28[18]] = *(void *)&v26[v28[18]];
  *(void *)&v25[v28[19]] = *(void *)&v26[v28[19]];
  *(void *)&v25[v28[20]] = *(void *)&v26[v28[20]];
  *(void *)&v25[v28[21]] = *(void *)&v26[v28[21]];
  uint64_t v29 = v28[22];
  char v30 = &v25[v29];
  uint64_t v31 = &v26[v29];
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v32 = sub_1000053D8(&qword_10016B060);
  if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v31, 1, v32))
  {
    uint64_t v33 = sub_1000053D8(&qword_10016B098);
    memcpy(v30, v31, *(void *)(*(void *)(v33 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 16))(v30, v31, v32);
    _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v30, 0, 1, v32);
  }
  uint64_t v34 = v28[23];
  uint64_t v35 = &v25[v34];
  uint64_t v36 = &v26[v34];
  if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v36, 1, v32))
  {
    uint64_t v37 = sub_1000053D8(&qword_10016B098);
    memcpy(v35, v36, *(void *)(*(void *)(v37 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 16))(v35, v36, v32);
    _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v35, 0, 1, v32);
  }
  uint64_t v38 = v48[10];
  uint64_t v39 = (char *)a1 + v38;
  uint64_t v40 = (char *)a2 + v38;
  uint64_t v41 = sub_10012BDF0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v41 - 8) + 16))(v39, v40, v41);
  uint64_t v42 = v48[12];
  *(void *)((char *)a1 + v48[11]) = *(void *)((char *)a2 + v48[11]);
  *(void *)((char *)a1 + v42) = *(void *)((char *)a2 + v42);
  uint64_t v43 = v48[14];
  *(void *)((char *)a1 + v48[13]) = *(void *)((char *)a2 + v48[13]);
  uint64_t v44 = (void *)((char *)a1 + v43);
  uint64_t v45 = (void *)((char *)a2 + v43);
  uint64_t v46 = v45[1];
  *uint64_t v44 = *v45;
  v44[1] = v46;
  v44[2] = v45[2];
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_100009198(void *a1, void *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_10000B2A8((uint64_t)a1, &qword_10016B078);
    sub_1000053D8(&qword_10016B078);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_10012AC10();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = *(void *)v9;
  char v11 = v9[8];
  sub_10000886C(*(void *)v9, v11);
  uint64_t v12 = *(void *)v8;
  char v13 = v8[8];
  *(void *)uint64_t v8 = v10;
  v8[8] = v11;
  sub_100008BF8(v12, v13);
  if (a1 != a2)
  {
    uint64_t v14 = a3[6];
    uint64_t v15 = (void *)((char *)a1 + v14);
    uint64_t v16 = (void *)((char *)a2 + v14);
    sub_10000B2A8((uint64_t)a1 + v14, &qword_10016B080);
    sub_1000053D8(&qword_10016B080);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v17 = sub_10012AFD0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
    }
    else
    {
      *uint64_t v15 = *v16;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v18 = a3[7];
    uint64_t v19 = (void *)((char *)a1 + v18);
    uint64_t v20 = (void *)((char *)a2 + v18);
    sub_10000B2A8((uint64_t)a1 + v18, &qword_10016B088);
    sub_1000053D8(&qword_10016B088);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v21 = sub_10012C7F0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v21 - 8) + 16))(v19, v20, v21);
    }
    else
    {
      *uint64_t v19 = *v20;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v22 = a3[8];
  uint64_t v23 = (char *)a1 + v22;
  uint64_t v24 = (char *)a2 + v22;
  uint64_t v25 = sub_1000053D8(&qword_10016B090);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 24))(v23, v24, v25);
  uint64_t v26 = a3[9];
  uint64_t v27 = (char *)a1 + v26;
  uint64_t v28 = (char *)a2 + v26;
  uint64_t v29 = sub_10012C800();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 24))(v27, v28, v29);
  char v30 = (int *)type metadata accessor for DailyViewAttributes();
  *(void *)&v27[v30[5]] = *(void *)&v28[v30[5]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v31 = v30[6];
  uint64_t v32 = &v27[v31];
  uint64_t v33 = &v28[v31];
  *uint64_t v32 = *v33;
  v32[1] = v33[1];
  *(void *)&v27[v30[7]] = *(void *)&v28[v30[7]];
  v27[v30[8]] = v28[v30[8]];
  v27[v30[9]] = v28[v30[9]];
  v27[v30[10]] = v28[v30[10]];
  *(void *)&v27[v30[11]] = *(void *)&v28[v30[11]];
  v27[v30[12]] = v28[v30[12]];
  v27[v30[13]] = v28[v30[13]];
  v27[v30[14]] = v28[v30[14]];
  v27[v30[15]] = v28[v30[15]];
  *(void *)&v27[v30[16]] = *(void *)&v28[v30[16]];
  *(void *)&v27[v30[17]] = *(void *)&v28[v30[17]];
  swift_retain();
  swift_release();
  *(void *)&v27[v30[18]] = *(void *)&v28[v30[18]];
  swift_retain();
  swift_release();
  *(void *)&v27[v30[19]] = *(void *)&v28[v30[19]];
  swift_retain();
  swift_release();
  *(void *)&v27[v30[20]] = *(void *)&v28[v30[20]];
  *(void *)&v27[v30[21]] = *(void *)&v28[v30[21]];
  uint64_t v34 = v30[22];
  uint64_t v35 = &v27[v34];
  uint64_t v36 = &v28[v34];
  uint64_t v37 = sub_1000053D8(&qword_10016B060);
  int v38 = _s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v35, 1, v37);
  int v39 = _s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v36, 1, v37);
  if (v38)
  {
    if (!v39)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 16))(v35, v36, v37);
      _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v35, 0, 1, v37);
      goto LABEL_20;
    }
    goto LABEL_19;
  }
  uint64_t v40 = *(void *)(v37 - 8);
  if (v39)
  {
    (*(void (**)(char *, uint64_t))(v40 + 8))(v35, v37);
LABEL_19:
    uint64_t v41 = sub_1000053D8(&qword_10016B098);
    memcpy(v35, v36, *(void *)(*(void *)(v41 - 8) + 64));
    goto LABEL_20;
  }
  (*(void (**)(char *, char *, uint64_t))(v40 + 24))(v35, v36, v37);
LABEL_20:
  uint64_t v42 = v30[23];
  uint64_t v43 = &v27[v42];
  uint64_t v44 = &v28[v42];
  int v45 = _s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v43, 1, v37);
  int v46 = _s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v44, 1, v37);
  if (!v45)
  {
    uint64_t v47 = *(void *)(v37 - 8);
    if (!v46)
    {
      (*(void (**)(char *, char *, uint64_t))(v47 + 24))(v43, v44, v37);
      goto LABEL_26;
    }
    (*(void (**)(char *, uint64_t))(v47 + 8))(v43, v37);
    goto LABEL_25;
  }
  if (v46)
  {
LABEL_25:
    uint64_t v48 = sub_1000053D8(&qword_10016B098);
    memcpy(v43, v44, *(void *)(*(void *)(v48 - 8) + 64));
    goto LABEL_26;
  }
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 16))(v43, v44, v37);
  _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v43, 0, 1, v37);
LABEL_26:
  uint64_t v49 = a3[10];
  uint64_t v50 = (char *)a1 + v49;
  uint64_t v51 = (char *)a2 + v49;
  uint64_t v52 = sub_10012BDF0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v52 - 8) + 24))(v50, v51, v52);
  *(void *)((char *)a1 + a3[11]) = *(void *)((char *)a2 + a3[11]);
  *(void *)((char *)a1 + a3[12]) = *(void *)((char *)a2 + a3[12]);
  *(void *)((char *)a1 + a3[13]) = *(void *)((char *)a2 + a3[13]);
  uint64_t v53 = a3[14];
  char v54 = (char *)a1 + v53;
  char v55 = (char *)a2 + v53;
  *(void *)((char *)a1 + v53) = *(void *)((char *)a2 + v53);
  swift_retain();
  swift_release();
  *((void *)v54 + 1) = *((void *)v55 + 1);
  swift_retain();
  swift_release();
  *((void *)v54 + 2) = *((void *)v55 + 2);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

char *sub_1000098C8(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_1000053D8(&qword_10016B078);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_10012AC10();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v8 = a3[5];
  uint64_t v9 = a3[6];
  uint64_t v10 = &a1[v8];
  char v11 = &a2[v8];
  *(void *)uint64_t v10 = *(void *)v11;
  v10[8] = v11[8];
  uint64_t v12 = &a1[v9];
  char v13 = &a2[v9];
  uint64_t v14 = sub_1000053D8(&qword_10016B080);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v15 = sub_10012AFD0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(v12, v13, v15);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v12, v13, *(void *)(*(void *)(v14 - 8) + 64));
  }
  uint64_t v16 = a3[7];
  uint64_t v17 = &a1[v16];
  uint64_t v18 = &a2[v16];
  uint64_t v19 = sub_1000053D8(&qword_10016B088);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v20 = sub_10012C7F0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 32))(v17, v18, v20);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
  }
  uint64_t v21 = a3[8];
  uint64_t v22 = &a1[v21];
  uint64_t v23 = &a2[v21];
  uint64_t v24 = sub_1000053D8(&qword_10016B090);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 32))(v22, v23, v24);
  uint64_t v25 = a3[9];
  uint64_t v26 = &a1[v25];
  uint64_t v27 = &a2[v25];
  uint64_t v28 = sub_10012C800();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 32))(v26, v27, v28);
  uint64_t v29 = (int *)type metadata accessor for DailyViewAttributes();
  *(void *)&v26[v29[5]] = *(void *)&v27[v29[5]];
  *(_WORD *)&v26[v29[6]] = *(_WORD *)&v27[v29[6]];
  *(void *)&v26[v29[7]] = *(void *)&v27[v29[7]];
  v26[v29[8]] = v27[v29[8]];
  v26[v29[9]] = v27[v29[9]];
  v26[v29[10]] = v27[v29[10]];
  *(void *)&v26[v29[11]] = *(void *)&v27[v29[11]];
  v26[v29[12]] = v27[v29[12]];
  v26[v29[13]] = v27[v29[13]];
  v26[v29[14]] = v27[v29[14]];
  v26[v29[15]] = v27[v29[15]];
  *(void *)&v26[v29[16]] = *(void *)&v27[v29[16]];
  *(void *)&v26[v29[17]] = *(void *)&v27[v29[17]];
  *(void *)&v26[v29[18]] = *(void *)&v27[v29[18]];
  *(void *)&v26[v29[19]] = *(void *)&v27[v29[19]];
  *(void *)&v26[v29[20]] = *(void *)&v27[v29[20]];
  *(void *)&v26[v29[21]] = *(void *)&v27[v29[21]];
  uint64_t v30 = v29[22];
  uint64_t v31 = &v26[v30];
  uint64_t v32 = &v27[v30];
  uint64_t v33 = sub_1000053D8(&qword_10016B060);
  if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v32, 1, v33))
  {
    uint64_t v34 = sub_1000053D8(&qword_10016B098);
    memcpy(v31, v32, *(void *)(*(void *)(v34 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 32))(v31, v32, v33);
    _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v31, 0, 1, v33);
  }
  uint64_t v35 = v29[23];
  uint64_t v36 = &v26[v35];
  uint64_t v37 = &v27[v35];
  if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v37, 1, v33))
  {
    uint64_t v38 = sub_1000053D8(&qword_10016B098);
    memcpy(v36, v37, *(void *)(*(void *)(v38 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 32))(v36, v37, v33);
    _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v36, 0, 1, v33);
  }
  uint64_t v39 = a3[10];
  uint64_t v40 = &a1[v39];
  uint64_t v41 = &a2[v39];
  uint64_t v42 = sub_10012BDF0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v42 - 8) + 32))(v40, v41, v42);
  uint64_t v43 = a3[12];
  *(void *)&a1[a3[11]] = *(void *)&a2[a3[11]];
  *(void *)&a1[v43] = *(void *)&a2[v43];
  uint64_t v44 = a3[14];
  *(void *)&a1[a3[13]] = *(void *)&a2[a3[13]];
  int v45 = &a1[v44];
  int v46 = &a2[v44];
  *(_OWORD *)int v45 = *(_OWORD *)v46;
  *((void *)v45 + 2) = *((void *)v46 + 2);
  return a1;
}

char *sub_100009E2C(char *a1, char *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_10000B2A8((uint64_t)a1, &qword_10016B078);
    uint64_t v6 = sub_1000053D8(&qword_10016B078);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_10012AC10();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
  }
  uint64_t v8 = a3[5];
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = *(void *)v10;
  LOBYTE(v10) = v10[8];
  uint64_t v12 = *(void *)v9;
  char v13 = v9[8];
  *(void *)uint64_t v9 = v11;
  v9[8] = (char)v10;
  sub_100008BF8(v12, v13);
  if (a1 != a2)
  {
    uint64_t v14 = a3[6];
    uint64_t v15 = &a1[v14];
    uint64_t v16 = &a2[v14];
    sub_10000B2A8((uint64_t)&a1[v14], &qword_10016B080);
    uint64_t v17 = sub_1000053D8(&qword_10016B080);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v18 = sub_10012AFD0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v15, v16, v18);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
    }
    uint64_t v19 = a3[7];
    uint64_t v20 = &a1[v19];
    uint64_t v21 = &a2[v19];
    sub_10000B2A8((uint64_t)&a1[v19], &qword_10016B088);
    uint64_t v22 = sub_1000053D8(&qword_10016B088);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v23 = sub_10012C7F0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 32))(v20, v21, v23);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v20, v21, *(void *)(*(void *)(v22 - 8) + 64));
    }
  }
  uint64_t v24 = a3[8];
  uint64_t v25 = &a1[v24];
  uint64_t v26 = &a2[v24];
  uint64_t v27 = sub_1000053D8(&qword_10016B090);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 40))(v25, v26, v27);
  uint64_t v28 = a3[9];
  uint64_t v29 = &a1[v28];
  uint64_t v30 = &a2[v28];
  uint64_t v31 = sub_10012C800();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 40))(v29, v30, v31);
  uint64_t v32 = (int *)type metadata accessor for DailyViewAttributes();
  *(void *)&v29[v32[5]] = *(void *)&v30[v32[5]];
  swift_bridgeObjectRelease();
  *(_WORD *)&v29[v32[6]] = *(_WORD *)&v30[v32[6]];
  *(void *)&v29[v32[7]] = *(void *)&v30[v32[7]];
  v29[v32[8]] = v30[v32[8]];
  v29[v32[9]] = v30[v32[9]];
  v29[v32[10]] = v30[v32[10]];
  *(void *)&v29[v32[11]] = *(void *)&v30[v32[11]];
  v29[v32[12]] = v30[v32[12]];
  v29[v32[13]] = v30[v32[13]];
  v29[v32[14]] = v30[v32[14]];
  v29[v32[15]] = v30[v32[15]];
  *(void *)&v29[v32[16]] = *(void *)&v30[v32[16]];
  *(void *)&v29[v32[17]] = *(void *)&v30[v32[17]];
  swift_release();
  *(void *)&v29[v32[18]] = *(void *)&v30[v32[18]];
  swift_release();
  *(void *)&v29[v32[19]] = *(void *)&v30[v32[19]];
  swift_release();
  *(void *)&v29[v32[20]] = *(void *)&v30[v32[20]];
  *(void *)&v29[v32[21]] = *(void *)&v30[v32[21]];
  uint64_t v33 = v32[22];
  uint64_t v34 = &v29[v33];
  uint64_t v35 = &v30[v33];
  uint64_t v36 = sub_1000053D8(&qword_10016B060);
  int v37 = _s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v34, 1, v36);
  int v38 = _s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v35, 1, v36);
  if (v37)
  {
    if (!v38)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 32))(v34, v35, v36);
      _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v34, 0, 1, v36);
      goto LABEL_18;
    }
    goto LABEL_17;
  }
  uint64_t v39 = *(void *)(v36 - 8);
  if (v38)
  {
    (*(void (**)(char *, uint64_t))(v39 + 8))(v34, v36);
LABEL_17:
    uint64_t v40 = sub_1000053D8(&qword_10016B098);
    memcpy(v34, v35, *(void *)(*(void *)(v40 - 8) + 64));
    goto LABEL_18;
  }
  (*(void (**)(char *, char *, uint64_t))(v39 + 40))(v34, v35, v36);
LABEL_18:
  uint64_t v41 = v32[23];
  uint64_t v42 = &v29[v41];
  uint64_t v43 = &v30[v41];
  int v44 = _s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v42, 1, v36);
  int v45 = _s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v43, 1, v36);
  if (!v44)
  {
    uint64_t v46 = *(void *)(v36 - 8);
    if (!v45)
    {
      (*(void (**)(char *, char *, uint64_t))(v46 + 40))(v42, v43, v36);
      goto LABEL_24;
    }
    (*(void (**)(char *, uint64_t))(v46 + 8))(v42, v36);
    goto LABEL_23;
  }
  if (v45)
  {
LABEL_23:
    uint64_t v47 = sub_1000053D8(&qword_10016B098);
    memcpy(v42, v43, *(void *)(*(void *)(v47 - 8) + 64));
    goto LABEL_24;
  }
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 32))(v42, v43, v36);
  _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v42, 0, 1, v36);
LABEL_24:
  uint64_t v48 = a3[10];
  uint64_t v49 = &a1[v48];
  uint64_t v50 = &a2[v48];
  uint64_t v51 = sub_10012BDF0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v51 - 8) + 40))(v49, v50, v51);
  uint64_t v52 = a3[12];
  *(void *)&a1[a3[11]] = *(void *)&a2[a3[11]];
  *(void *)&a1[v52] = *(void *)&a2[v52];
  uint64_t v53 = a3[14];
  *(void *)&a1[a3[13]] = *(void *)&a2[a3[13]];
  char v54 = &a1[v53];
  char v55 = &a2[v53];
  *(void *)&a1[v53] = *(void *)v55;
  swift_release();
  *((void *)v54 + 1) = *((void *)v55 + 1);
  swift_release();
  *((void *)v54 + 2) = *((void *)v55 + 2);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_10000A520(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10000A534);
}

uint64_t sub_10000A534(uint64_t a1, uint64_t a2, int *a3)
{
  sub_1000053D8(&qword_10016B0A0);
  sub_10000B3D0();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1;
LABEL_14:
    return _s13WeatherWidget20WeatherDataViewModelOwet_0(v9, a2, v8);
  }
  sub_1000053D8(&qword_10016B0A8);
  sub_10000B3D0();
  if (*(_DWORD *)(v11 + 84) == a2)
  {
    uint64_t v8 = v10;
    uint64_t v12 = a3[6];
LABEL_13:
    uint64_t v9 = a1 + v12;
    goto LABEL_14;
  }
  sub_1000053D8(&qword_10016B0B0);
  sub_10000B3D0();
  if (*(_DWORD *)(v14 + 84) == a2)
  {
    uint64_t v8 = v13;
    uint64_t v12 = a3[7];
    goto LABEL_13;
  }
  sub_1000053D8(&qword_10016B090);
  sub_10000B3D0();
  if (*(_DWORD *)(v16 + 84) == a2)
  {
    uint64_t v8 = v15;
    uint64_t v12 = a3[8];
    goto LABEL_13;
  }
  type metadata accessor for DailyViewAttributes();
  sub_10000B3D0();
  if (*(_DWORD *)(v18 + 84) == a2)
  {
    uint64_t v8 = v17;
    uint64_t v12 = a3[9];
    goto LABEL_13;
  }
  sub_10012BDF0();
  sub_10000B3D0();
  if (*(_DWORD *)(v20 + 84) == a2)
  {
    uint64_t v8 = v19;
    uint64_t v12 = a3[10];
    goto LABEL_13;
  }
  unint64_t v22 = *(void *)(a1 + a3[14] + 8);
  if (v22 >= 0xFFFFFFFF) {
    LODWORD(v22) = -1;
  }
  return (v22 + 1);
}

uint64_t sub_10000A68C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10000A6A0);
}

void sub_10000A6A0(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  sub_1000053D8(&qword_10016B0A0);
  sub_10000B3D0();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = a1;
  }
  else
  {
    sub_1000053D8(&qword_10016B0A8);
    sub_10000B3D0();
    if (*(_DWORD *)(v13 + 84) == a3)
    {
      uint64_t v10 = v12;
      uint64_t v14 = a4[6];
    }
    else
    {
      sub_1000053D8(&qword_10016B0B0);
      sub_10000B3D0();
      if (*(_DWORD *)(v16 + 84) == a3)
      {
        uint64_t v10 = v15;
        uint64_t v14 = a4[7];
      }
      else
      {
        sub_1000053D8(&qword_10016B090);
        sub_10000B3D0();
        if (*(_DWORD *)(v18 + 84) == a3)
        {
          uint64_t v10 = v17;
          uint64_t v14 = a4[8];
        }
        else
        {
          type metadata accessor for DailyViewAttributes();
          sub_10000B3D0();
          if (*(_DWORD *)(v20 + 84) == a3)
          {
            uint64_t v10 = v19;
            uint64_t v14 = a4[9];
          }
          else
          {
            sub_10012BDF0();
            sub_10000B3D0();
            if (*(_DWORD *)(v22 + 84) != a3)
            {
              *(void *)(a1 + a4[14] + 8) = (a2 - 1);
              return;
            }
            uint64_t v10 = v21;
            uint64_t v14 = a4[10];
          }
        }
      }
    }
    uint64_t v11 = a1 + v14;
  }

  _s13WeatherWidget20WeatherDataViewModelOwst_0(v11, a2, a2, v10);
}

uint64_t type metadata accessor for ModernDailyForecastRowView()
{
  uint64_t result = qword_10016B110;
  if (!qword_10016B110) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_10000A83C()
{
  sub_10000AA6C(319, &qword_10016B120, (void (*)(uint64_t))&type metadata accessor for LayoutDirection);
  if (v0 <= 0x3F)
  {
    sub_10000AA6C(319, (unint64_t *)&qword_10016B128, (void (*)(uint64_t))&type metadata accessor for ColorSchemeContrast);
    if (v1 <= 0x3F)
    {
      sub_10000AA6C(319, &qword_10016B130, (void (*)(uint64_t))&type metadata accessor for WidgetRenderingMode);
      if (v2 <= 0x3F)
      {
        sub_10000AAC0();
        if (v3 <= 0x3F)
        {
          type metadata accessor for DailyViewAttributes();
          if (v4 <= 0x3F)
          {
            sub_10012BDF0();
            if (v5 <= 0x3F) {
              swift_initStructMetadata();
            }
          }
        }
      }
    }
  }
}

void sub_10000AA6C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_10012AB90();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_10000AAC0()
{
  if (!qword_10016B138)
  {
    sub_10000AB1C();
    unint64_t v0 = sub_10012BA80();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10016B138);
    }
  }
}

unint64_t sub_10000AB1C()
{
  unint64_t result = qword_10016B140;
  if (!qword_10016B140)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016B140);
  }
  return result;
}

uint64_t sub_10000AB68()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10000AB8C()
{
  return sub_10012B4B0();
}

uint64_t sub_10000ABAC()
{
  uint64_t v1 = type metadata accessor for ModernDailyForecastRowView();
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*(void *)(v1 - 8) + 64);
  uint64_t v5 = v0 + v3;
  sub_1000053D8(&qword_10016B078);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_10012AC10();
    sub_10000B3E8();
    sub_10000B424();
    v6();
  }
  else
  {
    swift_release();
  }
  sub_100008BF8(*(void *)(v5 + *(int *)(v1 + 20)), *(unsigned char *)(v5 + *(int *)(v1 + 20) + 8));
  sub_1000053D8(&qword_10016B080);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_10012AFD0();
    sub_10000B3E8();
    sub_10000B424();
    v7();
  }
  else
  {
    swift_release();
  }
  sub_1000053D8(&qword_10016B088);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_10012C7F0();
    sub_10000B3E8();
    sub_10000B424();
    v8();
  }
  else
  {
    swift_release();
  }
  sub_1000053D8(&qword_10016B090);
  sub_10000B3E8();
  sub_10000B424();
  v9();
  uint64_t v10 = v5 + *(int *)(v1 + 36);
  sub_10012C800();
  sub_10000B3E8();
  sub_10000B424();
  v11();
  uint64_t v12 = type metadata accessor for DailyViewAttributes();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v13 = v10 + *(int *)(v12 + 88);
  uint64_t v14 = sub_1000053D8(&qword_10016B060);
  if (!_s13WeatherWidget20WeatherDataViewModelOwet_0(v13, 1, v14)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
  }
  uint64_t v15 = v10 + *(int *)(v12 + 92);
  if (!_s13WeatherWidget20WeatherDataViewModelOwet_0(v15, 1, v14)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v15, v14);
  }
  sub_10012BDF0();
  sub_10000B3E8();
  sub_10000B424();
  v16();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, v3 + v4, v2 | 7);
}

uint64_t sub_10000AF24(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ModernDailyForecastRowView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10000AF88@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for ModernDailyForecastRowView() - 8);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return sub_100005CBC(a1, v6, a2);
}

unint64_t sub_10000B008()
{
  unint64_t result = qword_10016B1C0;
  if (!qword_10016B1C0)
  {
    sub_100005470(&qword_10016B1A0);
    sub_10000B38C(&qword_10016B1C8, &qword_10016B198);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016B1C0);
  }
  return result;
}

uint64_t sub_10000B0B0(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_retain();
  }
  else {
    return swift_bridgeObjectRetain();
  }
}

uint64_t sub_10000B0C0(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_10000B3FC();
  uint64_t v4 = sub_10000B430();
  v5(v4);
  return a2;
}

uint64_t sub_10000B114(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  sub_1000053D8(a3);
  sub_10000B3FC();
  uint64_t v4 = sub_10000B430();
  v5(v4);
  return a2;
}

uint64_t sub_10000B164(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_10000B3E8();
  sub_10000B424();
  v3();
  return a1;
}

unint64_t sub_10000B1B4()
{
  unint64_t result = qword_10016B250;
  if (!qword_10016B250)
  {
    sub_100005470(&qword_10016B218);
    sub_10000B260(&qword_10016B258, (void (*)(uint64_t))&type metadata accessor for WeatherDayVarianceView);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016B250);
  }
  return result;
}

uint64_t sub_10000B260(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10000B2A8(uint64_t a1, uint64_t *a2)
{
  sub_1000053D8(a2);
  sub_10000B3E8();
  sub_10000B424();
  v3();
  return a1;
}

uint64_t sub_10000B2F4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  sub_1000053D8(a3);
  sub_10000B3FC();
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(a2, a1);
  return a2;
}

uint64_t sub_10000B350()
{
  return sub_10000B38C(&qword_10016B260, &qword_10016B268);
}

uint64_t sub_10000B38C(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100005470(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10000B430()
{
  return v0;
}

uint64_t sub_10000B444@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v89 = a1;
  uint64_t v90 = a3;
  sub_100129300();
  sub_10000DB98();
  uint64_t v86 = v10;
  uint64_t v87 = v9;
  __chkstk_darwin(v9);
  sub_10000DBCC();
  uint64_t v85 = v11;
  sub_10000DCA8();
  type metadata accessor for InstantWeatherViewModel();
  sub_10000B3FC();
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v80 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1000053D8(&qword_10016B310);
  uint64_t v16 = sub_10000DC9C(v15);
  __chkstk_darwin(v16);
  sub_10000DC50();
  uint64_t v19 = v18 - v17;
  uint64_t v20 = type metadata accessor for WeatherDataViewModel();
  sub_10000B3FC();
  uint64_t v22 = __chkstk_darwin(v21);
  uint64_t v24 = (char *)&v80 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = __chkstk_darwin(v22);
  sub_10000DCF4(v25, v26, v27, v28, v29, v30, v31, v32, v80);
  uint64_t v33 = sub_1000053D8(&qword_10016B318);
  uint64_t v34 = sub_10000DC9C(v33);
  __chkstk_darwin(v34);
  sub_10000DC78();
  uint64_t v35 = type metadata accessor for ForecastEntry(0);
  sub_10000B3FC();
  __chkstk_darwin(v36);
  sub_10000DBCC();
  switch(a2)
  {
    case 1:
      unint64_t v83 = a4;
      uint64_t v84 = v37;
      if (qword_10016AE20 != -1) {
        swift_once();
      }
      uint64_t v49 = sub_10012AB60();
      uint64_t v82 = sub_10000D7A4(v49, (uint64_t)qword_100181C28);
      uint64_t v50 = sub_10012AB40();
      os_log_type_t v51 = sub_10012CD60();
      if (os_log_type_enabled(v50, v51))
      {
        uint64_t v52 = (uint8_t *)sub_10000DC1C();
        uint64_t v81 = a5;
        *(_WORD *)uint64_t v52 = 0;
        _os_log_impl((void *)&_mh_execute_header, v50, v51, "Location is fresh; evaluating the refresh policy...",
          v52,
          2u);
        a5 = v81;
        sub_10000DBB4();
      }

      sub_10000C260();
      if (_s13WeatherWidget20WeatherDataViewModelOwet_0(v5, 1, v35) == 1)
      {
        sub_10000D930(v5, &qword_10016B318);
        uint64_t v53 = (void *)sub_10012AB40();
        os_log_type_t v54 = sub_10012CD60();
        if (sub_10000DC00(v54))
        {
          char v55 = (_WORD *)sub_10000DC1C();
          sub_10000DC90(v55);
          sub_10000DBE0((void *)&_mh_execute_header, v56, v57, "Timeline missing entries, returning error refresh policy");
          sub_10000DBB4();
        }

        uint64_t v45 = a5;
        uint64_t v46 = v90;
        unint64_t v47 = v83;
        return sub_10000BD04(v46, v47, v45);
      }
      sub_10000D7DC(v5, v84, (void (*)(void))type metadata accessor for ForecastEntry);
      sub_100017B20(v19);
      if (_s13WeatherWidget20WeatherDataViewModelOwet_0(v19, 1, v20) == 1)
      {
        sub_10000D930(v19, &qword_10016B310);
        unint64_t v64 = (void *)sub_10012AB40();
        os_log_type_t v65 = sub_10012CD60();
        if (sub_10000DC00(v65))
        {
          uint64_t v66 = (_WORD *)sub_10000DC1C();
          sub_10000DC90(v66);
          sub_10000DBE0((void *)&_mh_execute_header, v67, v68, "Timeline entry missing its view model, returning error refresh policy");
          sub_10000DBB4();
        }

        sub_10000BD04(v90, v83, a5);
      }
      else
      {
        uint64_t v69 = v19;
        uint64_t v70 = v88;
        sub_10000D7DC(v69, v88, (void (*)(void))type metadata accessor for WeatherDataViewModel);
        sub_10000DAE8(v70, (uint64_t)v24, (void (*)(void))type metadata accessor for WeatherDataViewModel);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          sub_10000D7DC((uint64_t)v24, (uint64_t)v14, (void (*)(void))type metadata accessor for InstantWeatherViewModel);
          double v71 = v85;
          sub_10012C1A0();
          sub_10000C3F8(v71, v90, v83, a5);
          sub_10000B424();
          v72();
          sub_10000D83C((uint64_t)v14, (void (*)(void))type metadata accessor for InstantWeatherViewModel);
        }
        else
        {
          sub_10000D83C((uint64_t)v24, (void (*)(void))type metadata accessor for WeatherDataViewModel);
          uint64_t v73 = v84;
          uint64_t v74 = (unsigned char *)(v84 + *(int *)(v35 + 24));
          if (v74[50] == 1)
          {
            sub_10000CB40(v90, v83, (void (*)(uint64_t))&WidgetRefreshConfiguration.currentLocation.getter, "About to compute refresh policy for current location. Range=%{public}s", (void (*)(uint64_t))&static Date.now.getter, "Failed to compute refresh policy for current location, returning .atEnd", a5);
            sub_10000D83C(v70, (void (*)(void))type metadata accessor for WeatherDataViewModel);
            uint64_t v75 = v73;
            return sub_10000D83C(v75, (void (*)(void))type metadata accessor for ForecastEntry);
          }
          if (v74[49] == 6) {
            char v76 = 6;
          }
          else {
            char v76 = v74[48];
          }
          switch(v76)
          {
            case 2:
              uint64_t v77 = "About to compute refresh policy for severe. Range=%{public}s";
              uint64_t v78 = "Failed to compute refresh policy for severe, returning .atEnd";
              uint64_t v79 = (void (*)(uint64_t))&WidgetRefreshConfiguration.severe.getter;
              break;
            case 3:
            case 4:
            case 5:
              uint64_t v77 = "About to compute refresh policy for CiC. Range=%{public}s";
              uint64_t v78 = "Failed to compute refresh policy for CiC, returning .atEnd";
              uint64_t v79 = (void (*)(uint64_t))&WidgetRefreshConfiguration.changeInConditions.getter;
              break;
            case 6:
              uint64_t v77 = "About to compute refresh policy for NHP. Range=%{public}s";
              uint64_t v78 = "Failed to compute refresh policy for NHP, returning .atEnd";
              uint64_t v79 = (void (*)(uint64_t))&WidgetRefreshConfiguration.nextHourPrecipitation.getter;
              break;
            default:
              uint64_t v77 = "About to compute refresh policy for default. Range=%{public}s";
              uint64_t v78 = "Failed to compute refresh policy for default location, returning .atEnd";
              uint64_t v79 = (void (*)(uint64_t))&WidgetRefreshConfiguration.defaultLocation.getter;
              break;
          }
          sub_10000CB40(v90, v83, v79, v77, (void (*)(uint64_t))&Date.init(), v78, a5);
        }
        sub_10000D83C(v70, (void (*)(void))type metadata accessor for WeatherDataViewModel);
      }
      uint64_t v75 = v84;
      return sub_10000D83C(v75, (void (*)(void))type metadata accessor for ForecastEntry);
    case 4:
      if (qword_10016AE20 != -1) {
        swift_once();
      }
      uint64_t v58 = sub_10012AB60();
      sub_10000D7A4(v58, (uint64_t)qword_100181C28);
      v59 = (void *)sub_10012AB40();
      os_log_type_t v60 = sub_10012CD60();
      if (sub_10000DC00(v60))
      {
        uint64_t v61 = (_WORD *)sub_10000DC1C();
        sub_10000DC90(v61);
        sub_10000DBB4();
      }

      return sub_10012C8C0();
    default:
      unint64_t v38 = a4;
      if (qword_10016AE20 != -1) {
        swift_once();
      }
      uint64_t v39 = sub_10012AB60();
      sub_10000D7A4(v39, (uint64_t)qword_100181C28);
      uint64_t v40 = sub_10012AB40();
      os_log_type_t v41 = sub_10012CD60();
      if (os_log_type_enabled(v40, v41))
      {
        uint64_t v42 = (uint8_t *)swift_slowAlloc();
        uint64_t v92 = sub_10000DCC8();
        *(_DWORD *)uint64_t v42 = 136446210;
        LOBYTE(v91) = a2;
        uint64_t v43 = sub_10012CAA0();
        uint64_t v91 = sub_100123564(v43, v44, &v92);
        sub_10012CF70();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v40, v41, "Location state is not fresh; returning error refresh policy; state=%{public}s",
          v42,
          0xCu);
        swift_arrayDestroy();
        sub_10000DBB4();
        sub_10000DBB4();
      }

      uint64_t v45 = a5;
      uint64_t v46 = v90;
      unint64_t v47 = v38;
      return sub_10000BD04(v46, v47, v45);
  }
}

uint64_t sub_10000BD04@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  unint64_t v58 = a2;
  uint64_t v56 = a1;
  uint64_t v63 = a3;
  uint64_t v61 = sub_100129430();
  sub_10000DB98();
  uint64_t v6 = v5;
  __chkstk_darwin(v7);
  sub_10000DC34();
  uint64_t v60 = sub_100129450();
  sub_10000DB98();
  uint64_t v9 = v8;
  __chkstk_darwin(v10);
  sub_10000DC60();
  uint64_t v11 = sub_1000053D8(&qword_10016C7B0);
  uint64_t v12 = sub_10000DC9C(v11);
  __chkstk_darwin(v12);
  sub_10000DC50();
  uint64_t v15 = v14 - v13;
  uint64_t v64 = sub_100129300();
  sub_10000DB98();
  uint64_t v17 = v16;
  __chkstk_darwin(v18);
  sub_10000DCB4();
  uint64_t v57 = v19;
  uint64_t v21 = __chkstk_darwin(v20);
  uint64_t v23 = (char *)&v55 - v22;
  uint64_t v24 = __chkstk_darwin(v21);
  sub_10000DCF4(v24, v25, v26, v27, v28, v29, v30, v31, v55);
  if (qword_10016AE20 != -1) {
    swift_once();
  }
  uint64_t v32 = sub_10012AB60();
  uint64_t v59 = sub_10000D7A4(v32, (uint64_t)qword_100181C28);
  uint64_t v33 = sub_10012AB40();
  os_log_type_t v34 = sub_10012CD60();
  if (os_log_type_enabled(v33, v34))
  {
    uint64_t v35 = (uint8_t *)sub_10000DC1C();
    *(_WORD *)uint64_t v35 = 0;
    _os_log_impl((void *)&_mh_execute_header, v33, v34, "About to compute error refresh policy. (5 min to next refresh).", v35, 2u);
    sub_10000DBB4();
  }

  sub_100129410();
  uint64_t v36 = v61;
  (*(void (**)(uint64_t, void, uint64_t))(v6 + 104))(v4, enum case for Calendar.Component.minute(_:), v61);
  sub_1001292F0();
  sub_1001293E0();
  uint64_t v37 = *(void (**)(char *, uint64_t))(v17 + 8);
  unint64_t v38 = v23;
  uint64_t v39 = v64;
  v37(v38, v64);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v36);
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v3, v60);
  if (_s13WeatherWidget20WeatherDataViewModelOwet_0(v15, 1, v39) == 1)
  {
    sub_10000D930(v15, &qword_10016C7B0);
    uint64_t v40 = (void *)sub_10012AB40();
    os_log_type_t v41 = sub_10012CD40();
    if (sub_10000DC00(v41))
    {
      uint64_t v42 = (_WORD *)sub_10000DC1C();
      sub_10000DC90(v42);
      sub_10000DBE0((void *)&_mh_execute_header, v43, v44, "Failed to compute error refresh policy, returning .atEnd");
      sub_10000DBB4();
    }

    return sub_10012C8B0();
  }
  else
  {
    uint64_t v46 = v62;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 32))(v62, v15, v39);
    unint64_t v47 = v57;
    (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v57, v46, v39);
    unint64_t v48 = v58;
    swift_bridgeObjectRetain_n();
    uint64_t v49 = sub_10012AB40();
    os_log_type_t v50 = sub_10012CD60();
    if (os_log_type_enabled(v49, v50))
    {
      uint64_t v51 = swift_slowAlloc();
      uint64_t v61 = swift_slowAlloc();
      uint64_t v66 = v61;
      *(_DWORD *)uint64_t v51 = 136446466;
      sub_10000DAA4(&qword_10016B320);
      uint64_t v52 = sub_10012D1D0();
      uint64_t v65 = sub_100123564(v52, v53, &v66);
      sub_10012CF70();
      swift_bridgeObjectRelease();
      v37(v47, v64);
      *(_WORD *)(v51 + 12) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v65 = sub_100123564(v56, v48, &v66);
      sub_10012CF70();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v49, v50, "Reloading .after(%{public}s) 5 minutes from now) for %s", (uint8_t *)v51, 0x16u);
      swift_arrayDestroy();
      uint64_t v39 = v64;
      sub_10000DBB4();
      sub_10000DBB4();
    }
    else
    {
      v37(v47, v39);

      swift_bridgeObjectRelease_n();
    }
    uint64_t v54 = v62;
    sub_10012C8A0();
    return ((uint64_t (*)(uint64_t, uint64_t))v37)(v54, v39);
  }
}

uint64_t sub_10000C260()
{
  uint64_t v3 = sub_10000DCE0();
  uint64_t v4 = type metadata accessor for ForecastEntry(v3);
  uint64_t v5 = v4;
  if (v2)
  {
    sub_10000DAE8(v1+ ((*(unsigned __int8 *)(*(void *)(v4 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v4 - 8) + 80)), v0, (void (*)(void))type metadata accessor for ForecastEntry);
    uint64_t v6 = 0;
  }
  else
  {
    uint64_t v6 = 1;
  }

  return _s13WeatherWidget20WeatherDataViewModelOwst_0(v0, v6, 1, v5);
}

uint64_t sub_10000C310()
{
  return sub_10000C358();
}

uint64_t sub_10000C328()
{
  return sub_10000C358();
}

uint64_t sub_10000C340()
{
  return sub_10000C358();
}

uint64_t sub_10000C358()
{
  uint64_t v3 = sub_10000DCE0();
  uint64_t v5 = v4(v3);
  uint64_t v6 = v5;
  if (v2)
  {
    (*(void (**)(uint64_t, unint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(v0, v1+ ((*(unsigned __int8 *)(*(void *)(v5 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v5 - 8) + 80)), v5);
    uint64_t v7 = 0;
  }
  else
  {
    uint64_t v7 = 1;
  }

  return _s13WeatherWidget20WeatherDataViewModelOwst_0(v0, v7, 1, v6);
}

unint64_t sub_10000C3F8@<X0>(char *a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X8>)
{
  unint64_t v62 = a3;
  uint64_t v53 = a2;
  uint64_t v54 = a4;
  uint64_t v6 = sub_100129300();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v8);
  uint64_t v13 = (char *)v51 - v12;
  uint64_t v14 = __chkstk_darwin(v11);
  uint64_t v16 = (char *)v51 - v15;
  uint64_t v17 = __chkstk_darwin(v14);
  uint64_t v19 = (char *)v51 - v18;
  uint64_t v20 = __chkstk_darwin(v17);
  uint64_t v63 = (char *)v51 - v21;
  __chkstk_darwin(v20);
  uint64_t v23 = (char *)v51 - v22;
  if (qword_10016AE20 != -1) {
    swift_once();
  }
  uint64_t v59 = v10;
  uint64_t v61 = v4;
  uint64_t v24 = sub_10012AB60();
  uint64_t v25 = sub_10000D7A4(v24, (uint64_t)qword_100181C28);
  uint64_t v26 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
  uint64_t v60 = a1;
  uint64_t v57 = v26;
  v26(v23, a1, v6);
  os_log_t v58 = v25;
  uint64_t v27 = sub_10012AB40();
  os_log_type_t v28 = sub_10012CD60();
  BOOL v29 = os_log_type_enabled(v27, v28);
  uint64_t v55 = v16;
  uint64_t v56 = v13;
  if (v29)
  {
    uint64_t v30 = (uint8_t *)swift_slowAlloc();
    uint64_t v52 = swift_slowAlloc();
    uint64_t v65 = v52;
    *(_DWORD *)uint64_t v30 = 136315138;
    v51[1] = v30 + 4;
    sub_10000DAA4(&qword_10016B320);
    uint64_t v31 = sub_10012D1D0();
    uint64_t v64 = sub_100123564(v31, v32, &v65);
    sub_10012CF70();
    swift_bridgeObjectRelease();
    uint64_t v33 = *(void (**)(char *, uint64_t))(v7 + 8);
    v33(v23, v6);
    _os_log_impl((void *)&_mh_execute_header, v27, v28, "About to compute refresh policy for interpolated location. expirationDate=%s", v30, 0xCu);
    swift_arrayDestroy();
    uint64_t v16 = v55;
    swift_slowDealloc();
    uint64_t v13 = v56;
    swift_slowDealloc();
  }
  else
  {
    uint64_t v33 = *(void (**)(char *, uint64_t))(v7 + 8);
    v33(v23, v6);
  }

  unint64_t result = sub_10000D980(0x15uLL);
  uint64_t v35 = v63;
  uint64_t v36 = v60;
  if ((unsigned __int128)((uint64_t)(result - 5) * (__int128)60) >> 64 != (uint64_t)(60 * (result - 5)) >> 63)
  {
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  sub_1001292B0();
  sub_100129280();
  v33(v19, v6);
  sub_10000DAA4((unint64_t *)&qword_10016B328);
  if (sub_10012C9D0())
  {
    uint64_t v37 = v16;
    unint64_t v38 = v35;
  }
  else
  {
    uint64_t v37 = v16;
    unint64_t v38 = v36;
  }
  uint64_t v39 = v57;
  v57(v37, v38, v6);
  sub_100129280();
  sub_1001292B0();
  sub_100129240();
  double v41 = v40;
  v33(v19, v6);
  uint64_t v42 = v59;
  v39(v59, v13, v6);
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v43 = sub_10012AB40();
  LODWORD(v60) = sub_10012CD60();
  if (!os_log_type_enabled(v43, (os_log_type_t)v60))
  {
    v33(v42, v6);

    swift_bridgeObjectRelease_n();
    swift_release_n();
    goto LABEL_16;
  }
  os_log_t v58 = v43;
  uint64_t v44 = swift_slowAlloc();
  uint64_t v65 = swift_slowAlloc();
  *(_DWORD *)uint64_t v44 = 136446722;
  sub_10000DAA4(&qword_10016B320);
  uint64_t v45 = sub_10012D1D0();
  uint64_t v64 = sub_100123564(v45, v46, &v65);
  sub_10012CF70();
  swift_bridgeObjectRelease();
  unint64_t result = ((uint64_t (*)(char *, uint64_t))v33)(v42, v6);
  *(_WORD *)(v44 + 12) = 2080;
  if ((~*(void *)&v41 & 0x7FF0000000000000) == 0) {
    goto LABEL_18;
  }
  if (v41 <= -9.22337204e18)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if (v41 < 9.22337204e18)
  {
    uint64_t v47 = sub_10000D480((uint64_t)v41);
    uint64_t v64 = sub_100123564(v47, v48, &v65);
    sub_10012CF70();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v44 + 22) = 2080;
    unint64_t v49 = v62;
    swift_bridgeObjectRetain();
    uint64_t v64 = sub_100123564(v53, v49, &v65);
    uint64_t v35 = v63;
    sub_10012CF70();
    swift_bridgeObjectRelease_n();
    os_log_t v50 = v58;
    _os_log_impl((void *)&_mh_execute_header, v58, (os_log_type_t)v60, "Reloading .after(%{public}s) (%s from now) for %s", (uint8_t *)v44, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v16 = v55;
    uint64_t v13 = v56;
LABEL_16:
    sub_10012C8A0();
    v33(v13, v6);
    v33(v16, v6);
    return ((uint64_t (*)(char *, uint64_t))v33)(v35, v6);
  }
LABEL_20:
  __break(1u);
  return result;
}

uint64_t sub_10000CB40@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, void (*a3)(uint64_t)@<X2>, const char *a4@<X3>, void (*a5)(uint64_t)@<X4>, const char *a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v85 = a6;
  uint64_t v100 = a5;
  uint64_t v87 = a4;
  v109 = a3;
  unint64_t v89 = a2;
  uint64_t v86 = a1;
  uint64_t v92 = a7;
  sub_100129430();
  sub_10000DB98();
  uint64_t v101 = v12;
  uint64_t v102 = v11;
  __chkstk_darwin(v11);
  sub_10000DBCC();
  uint64_t v98 = v13;
  sub_10000DCA8();
  uint64_t v99 = sub_100129450();
  sub_10000DB98();
  uint64_t v97 = v14;
  __chkstk_darwin(v15);
  sub_10000DBCC();
  uint64_t v94 = v16;
  uint64_t v17 = sub_1000053D8(&qword_10016C7B0);
  uint64_t v18 = sub_10000DC9C(v17);
  __chkstk_darwin(v18);
  sub_10000DBCC();
  uint64_t v96 = v19;
  sub_10000DCA8();
  uint64_t v108 = sub_100129300();
  sub_10000DB98();
  uint64_t v95 = v20;
  __chkstk_darwin(v21);
  sub_10000DCB4();
  uint64_t v90 = v22;
  uint64_t v24 = __chkstk_darwin(v23);
  CGFloat v93 = (uint8_t *)&v85 - v25;
  __chkstk_darwin(v24);
  uint64_t v91 = (char *)&v85 - v26;
  sub_10000DCA8();
  sub_10012A480();
  sub_10000DB98();
  uint64_t v106 = v28;
  uint64_t v107 = v27;
  __chkstk_darwin(v27);
  sub_10000DC34();
  uint64_t v105 = sub_10012A340();
  sub_10000DB98();
  uint64_t v30 = v29;
  __chkstk_darwin(v31);
  sub_10000DC50();
  uint64_t v34 = v33 - v32;
  uint64_t v35 = sub_10012A190();
  sub_10000DB98();
  uint64_t v37 = v36;
  __chkstk_darwin(v38);
  sub_10000DC60();
  sub_10012A300();
  sub_10000DB98();
  uint64_t v103 = v40;
  uint64_t v104 = v39;
  __chkstk_darwin(v39);
  sub_10000DC78();
  uint64_t v41 = *(void *)(v8 + 40);
  uint64_t v88 = v8;
  sub_10000D890((void *)(v8 + 16), v41);
  sub_10012A490();
  sub_10012A180();
  (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v7, v35);
  sub_10012A330();
  uint64_t v43 = *(uint64_t (**)(uint64_t, uint64_t))(v30 + 8);
  uint64_t v42 = v30 + 8;
  uint64_t v44 = v43(v34, v105);
  v109(v44);
  sub_10000B424();
  v45();
  v109 = v9;
  sub_10012A2F0();
  double v47 = v46;
  if ((~*(void *)&v46 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_21;
  }
  if (v46 <= -9.22337204e18)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (v46 >= 9.22337204e18)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  sub_10012A2E0();
  if ((~*(void *)&v48 & 0x7FF0000000000000) == 0)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (v48 <= -9.22337204e18)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  if (v48 >= 9.22337204e18)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  uint64_t v42 = (uint64_t)v47;
  uint64_t v10 = (uint64_t)v48;
  if ((uint64_t)v48 >= (uint64_t)v47)
  {
    if (qword_10016AE20 == -1) {
      goto LABEL_9;
    }
    goto LABEL_27;
  }
LABEL_26:
  __break(1u);
LABEL_27:
  swift_once();
LABEL_9:
  uint64_t v49 = sub_10012AB60();
  uint64_t v107 = sub_10000D7A4(v49, (uint64_t)qword_100181C28);
  os_log_t v50 = sub_10012AB40();
  os_log_type_t v51 = sub_10012CD60();
  if (os_log_type_enabled(v50, v51))
  {
    uint64_t v52 = (uint8_t *)swift_slowAlloc();
    v111[0] = sub_10000DCC8();
    *(_DWORD *)uint64_t v52 = 136446210;
    uint64_t v53 = sub_10000DA0C();
    uint64_t v110 = sub_100123564(v53, v54, v111);
    sub_10012CF70();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v50, v51, v87, v52, 0xCu);
    swift_arrayDestroy();
    sub_10000DBB4();
    sub_10000DBB4();
  }

  uint64_t v55 = v108;
  uint64_t v56 = v90;
  uint64_t v57 = sub_10000D8D4(v42, v10);
  sub_100129410();
  uint64_t v59 = v101;
  uint64_t v58 = v102;
  uint64_t v60 = v98;
  uint64_t v61 = (*(uint64_t (**)(uint64_t, void, uint64_t))(v101 + 104))(v98, enum case for Calendar.Component.second(_:), v102);
  unint64_t v62 = v93;
  v100(v61);
  uint64_t v63 = v96;
  uint64_t v105 = v57;
  sub_1001293E0();
  uint64_t v64 = v95;
  uint64_t v106 = *(void (**)(uint8_t *, uint64_t))(v95 + 8);
  v106(v62, v55);
  (*(void (**)(uint64_t, uint64_t))(v59 + 8))(v60, v58);
  sub_10000B424();
  v65();
  if (_s13WeatherWidget20WeatherDataViewModelOwet_0(v63, 1, v55) == 1)
  {
    sub_10000D930(v63, &qword_10016C7B0);
    os_log_type_t v66 = v107;
    uint64_t v67 = sub_10012AB40();
    os_log_type_t v68 = sub_10012CD40();
    if (sub_10000DC00(v68))
    {
      uint64_t v69 = (_WORD *)sub_10000DC1C();
      sub_10000DC90(v69);
      _os_log_impl((void *)&_mh_execute_header, v67, v66, v85, v62, 2u);
      sub_10000DBB4();
    }

    sub_10012C8B0();
  }
  else
  {
    uint64_t v70 = v91;
    (*(void (**)(char *, uint64_t, uint64_t))(v64 + 32))(v91, v63, v55);
    (*(void (**)(uint8_t *, char *, uint64_t))(v64 + 16))(v56, v70, v55);
    swift_retain_n();
    unint64_t v71 = v89;
    swift_bridgeObjectRetain_n();
    uint64_t v72 = sub_10012AB40();
    os_log_type_t v73 = sub_10012CD60();
    if (os_log_type_enabled(v72, v73))
    {
      uint64_t v74 = sub_10000DCC8();
      uint64_t v107 = swift_slowAlloc();
      v111[0] = v107;
      *(_DWORD *)uint64_t v74 = 136446722;
      sub_10000DAA4(&qword_10016B320);
      uint64_t v75 = sub_10012D1D0();
      uint64_t v110 = sub_100123564(v75, v76, v111);
      sub_10012CF70();
      swift_bridgeObjectRelease();
      uint64_t v77 = v56;
      uint64_t v78 = (void (*)(char *, uint64_t))v106;
      v106(v77, v108);
      *(_WORD *)(v74 + 12) = 2080;
      uint64_t v79 = sub_10000D480(v105);
      uint64_t v110 = sub_100123564(v79, v80, v111);
      sub_10012CF70();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v74 + 22) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v110 = sub_100123564(v86, v71, v111);
      uint64_t v55 = v108;
      sub_10012CF70();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v72, v73, "Reloading .after(%{public}s) (%s from now) for %s", (uint8_t *)v74, 0x20u);
      swift_arrayDestroy();
      sub_10000DBB4();
      sub_10000DBB4();
    }
    else
    {
      uint64_t v81 = v56;
      uint64_t v78 = (void (*)(char *, uint64_t))v106;
      v106(v81, v55);

      swift_bridgeObjectRelease_n();
      swift_release_n();
    }
    uint64_t v82 = v91;
    sub_10012C8A0();
    v78(v82, v55);
  }
  sub_10000B424();
  return v83();
}

uint64_t sub_10000D480(uint64_t a1)
{
  if (a1 >= 60)
  {
    uint64_t v3 = sub_10012D1D0();
    v1._countAndFlagsBits = 0x736574756E696D20;
  }
  else
  {
    uint64_t v3 = sub_10012D1D0();
    v1._countAndFlagsBits = 0x73646E6F63657320;
  }
  v1._object = (void *)0xE800000000000000;
  sub_10012CAF0(v1);
  return v3;
}

uint64_t sub_10000D52C@<X0>(char a1@<W0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X8>)
{
  if (qword_10016AE20 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_10012AB60();
  sub_10000D7A4(v7, (uint64_t)qword_100181C28);
  uint64_t v8 = sub_10012AB40();
  os_log_type_t v9 = sub_10012CD60();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = (uint8_t *)swift_slowAlloc();
    uint64_t v18 = sub_10000DCC8();
    *(_DWORD *)uint64_t v10 = 136446210;
    uint64_t v11 = sub_10012CAA0();
    sub_100123564(v11, v12, &v18);
    sub_10012CF70();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "About to determine refresh policy for error entry: %{public}s", v10, 0xCu);
    swift_arrayDestroy();
    sub_10000DBB4();
    sub_10000DBB4();
  }

  if (a1) {
    return sub_10000BD04(a2, a3, a4);
  }
  uint64_t v14 = sub_10012AB40();
  os_log_type_t v15 = sub_10012CD60();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v16 = (uint8_t *)sub_10000DC1C();
    *(_WORD *)uint64_t v16 = 0;
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "Returning policy: .never for error: .locationPermissionDenied", v16, 2u);
    sub_10000DBB4();
  }

  return sub_10012C8C0();
}

uint64_t LocalSearchRequestService.__deallocating_deinit()
{
  sub_10000DB48(v0 + 16);

  return _swift_deallocClassInstance(v0, 56, 7);
}

uint64_t type metadata accessor for RefreshPolicyProvider()
{
  return self;
}

uint64_t sub_10000D7A4(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(*(void *)(a1 - 8) + 82) & 2) != 0) {
    return *(void *)a2;
  }
  return a2;
}

uint64_t sub_10000D7DC(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_10000B3FC();
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(a2, a1);
  return a2;
}

uint64_t sub_10000D83C(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_10000B3FC();
  sub_10000B424();
  v3();
  return a1;
}

void *sub_10000D890(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

uint64_t sub_10000D8D4(uint64_t a1, uint64_t a2)
{
  if (a2 - a1 != -1) {
    return sub_10000D980(a2 - a1 + 1) + a1;
  }
  swift_stdlib_random();
  return 0;
}

uint64_t sub_10000D930(uint64_t a1, uint64_t *a2)
{
  sub_1000053D8(a2);
  sub_10000B3FC();
  sub_10000B424();
  v3();
  return a1;
}

unint64_t sub_10000D980(unint64_t result)
{
  if (result)
  {
    unint64_t v1 = result;
    swift_stdlib_random();
    unint64_t result = (0 * (unsigned __int128)v1) >> 64;
    if (-(uint64_t)v1 % v1)
    {
      while (1)
        swift_stdlib_random();
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10000DA0C()
{
  sub_10012D030();
  v1._countAndFlagsBits = 3026478;
  v1._object = (void *)0xE300000000000000;
  sub_10012CAF0(v1);
  sub_10012D030();
  return 0;
}

uint64_t sub_10000DAA4(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100129300();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10000DAE8(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_10000B3FC();
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(a2, a1);
  return a2;
}

uint64_t sub_10000DB48(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t sub_10000DBB4()
{
  return swift_slowDealloc();
}

void sub_10000DBE0(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v5, a4, v6, 2u);
}

BOOL sub_10000DC00(os_log_type_t a1)
{
  return os_log_type_enabled(v1, a1);
}

uint64_t sub_10000DC1C()
{
  return swift_slowAlloc();
}

uint64_t sub_10000DC34()
{
  return 0;
}

_WORD *sub_10000DC90(_WORD *result)
{
  *uint64_t result = 0;
  return result;
}

uint64_t sub_10000DC9C(uint64_t a1)
{
  return a1 - 8;
}

uint64_t sub_10000DCA8()
{
  return 0;
}

uint64_t sub_10000DCC8()
{
  return swift_slowAlloc();
}

uint64_t sub_10000DCE0()
{
  return 0;
}

void sub_10000DCF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  *(void *)(v10 - 120) = (char *)&a9 - v9;
}

uint64_t *sub_10000DD08(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v7 = sub_10012BFA0();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
  }
  swift_retain();
  return a1;
}

uint64_t sub_10000DDD4(uint64_t a1)
{
  uint64_t v2 = sub_10012BFA0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);

  return swift_release();
}

uint64_t sub_10000DE48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10012BFA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_retain();
  return a1;
}

uint64_t sub_10000DEC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10012BFA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_10000DF54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10012BFA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_10000DFD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10012BFA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_release();
  return a1;
}

uint64_t sub_10000E054(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10000E068);
}

uint64_t sub_10000E068(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_10012BFA0();
  sub_10000B3D0();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    return _s13WeatherWidget20WeatherDataViewModelOwet_0(a1, a2, v6);
  }
  else
  {
    unint64_t v9 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v9 >= 0xFFFFFFFF) {
      LODWORD(v9) = -1;
    }
    return (v9 + 1);
  }
}

uint64_t sub_10000E0F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10000E108);
}

void sub_10000E108(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_10012BFA0();
  sub_10000B3D0();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    _s13WeatherWidget20WeatherDataViewModelOwst_0(a1, a2, a2, v8);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
}

uint64_t type metadata accessor for EventViewModelFactory()
{
  uint64_t result = qword_10016B388;
  if (!qword_10016B388) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10000E1D8()
{
  uint64_t result = sub_10012BFA0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void *sub_10000E270(uint64_t a1, uint64_t a2, char *a3)
{
  uint64_t v318 = a1;
  v316 = a3;
  uint64_t v319 = a2;
  uint64_t v294 = sub_100129850();
  sub_10000B40C();
  uint64_t v281 = v3;
  __chkstk_darwin(v4);
  sub_10000DBCC();
  sub_100012098(v5);
  sub_1000053D8(&qword_10016B3C0);
  sub_10000B40C();
  uint64_t v309 = v7;
  uint64_t v310 = v6;
  __chkstk_darwin(v6);
  sub_10000DBCC();
  uint64_t v308 = v8;
  uint64_t v9 = sub_1000053D8(&qword_10016B3C8);
  uint64_t v10 = sub_10000DC9C(v9);
  __chkstk_darwin(v10);
  sub_10000DCB4();
  sub_100011EF0();
  __chkstk_darwin(v11);
  sub_100011FAC();
  uint64_t v307 = v12;
  uint64_t v13 = sub_1000053D8(&qword_10016B3D0);
  uint64_t v14 = sub_10000DC9C(v13);
  __chkstk_darwin(v14);
  sub_10000DBCC();
  v298 = (void (*)(uint64_t *, uint64_t))v15;
  sub_10000DCA8();
  uint64_t v300 = sub_100129BB0();
  sub_10000B40C();
  uint64_t v299 = v16;
  __chkstk_darwin(v17);
  sub_10000DBCC();
  sub_100012098(v18);
  uint64_t v19 = sub_1000053D8(&qword_10016B3D8);
  uint64_t v20 = sub_10000DC9C(v19);
  __chkstk_darwin(v20);
  sub_10000DCB4();
  sub_100011EF0();
  __chkstk_darwin(v21);
  sub_100011FAC();
  uint64_t v312 = v22;
  uint64_t v317 = sub_1000053D8(&qword_10016B3E0);
  sub_10000B40C();
  uint64_t v301 = v23;
  __chkstk_darwin(v24);
  sub_10000DBCC();
  uint64_t v311 = v25;
  sub_10000DCA8();
  uint64_t v279 = sub_1001298F0();
  sub_10000B40C();
  uint64_t v278 = v26;
  __chkstk_darwin(v27);
  sub_10000DCB4();
  sub_100011EF0();
  __chkstk_darwin(v28);
  sub_100011FAC();
  uint64_t v277 = v29;
  sub_10000DCA8();
  uint64_t v271 = sub_100129900();
  sub_10000B40C();
  uint64_t v270 = v30;
  __chkstk_darwin(v31);
  sub_10000DBCC();
  uint64_t v269 = v32;
  uint64_t v33 = sub_10000DCA8();
  uint64_t v296 = type metadata accessor for EventViewModel(v33);
  sub_10000B40C();
  uint64_t v297 = v34;
  __chkstk_darwin(v35);
  sub_10000DCB4();
  sub_100011EF0();
  __chkstk_darwin(v36);
  sub_100011F60();
  sub_100011EF0();
  __chkstk_darwin(v37);
  sub_100011F60();
  sub_100011EF0();
  __chkstk_darwin(v38);
  sub_100011F60();
  sub_100011EF0();
  __chkstk_darwin(v39);
  sub_100011F60();
  sub_100011EF0();
  __chkstk_darwin(v40);
  sub_100011FAC();
  sub_100012098(v41);
  uint64_t v42 = sub_1000053D8(&qword_10016B3E8);
  uint64_t v43 = sub_10000DC9C(v42);
  __chkstk_darwin(v43);
  sub_10000DBCC();
  v314 = v44;
  sub_10000DCA8();
  uint64_t v289 = sub_1001297D0();
  sub_10000B40C();
  uint64_t v286 = v45;
  __chkstk_darwin(v46);
  sub_10000DBCC();
  uint64_t v285 = v47;
  sub_10000DCA8();
  uint64_t v284 = sub_1001297A0();
  sub_10000B40C();
  uint64_t v283 = v48;
  __chkstk_darwin(v49);
  sub_10000DBCC();
  sub_100012098(v50);
  uint64_t v51 = sub_1000053D8(&qword_10016B3F0);
  uint64_t v52 = sub_10000DC9C(v51);
  __chkstk_darwin(v52);
  sub_10000DCB4();
  v315 = v53;
  __chkstk_darwin(v54);
  sub_100011F60();
  sub_100011EF0();
  __chkstk_darwin(v55);
  sub_100011F60();
  sub_100011EF0();
  __chkstk_darwin(v56);
  sub_100011F60();
  sub_100011EF0();
  __chkstk_darwin(v57);
  uint64_t v59 = (uint64_t *)((char *)&v263 - v58);
  uint64_t v60 = sub_100129430();
  sub_10000B40C();
  uint64_t v62 = v61;
  __chkstk_darwin(v63);
  sub_10000DC50();
  uint64_t v66 = v65 - v64;
  uint64_t v67 = sub_1000053D8(&qword_10016C7B0);
  uint64_t v68 = sub_10000DC9C(v67);
  __chkstk_darwin(v68);
  sub_10000DCB4();
  sub_100011EF0();
  __chkstk_darwin(v69);
  sub_100011F60();
  sub_100011EF0();
  __chkstk_darwin(v70);
  uint64_t v72 = (char *)&v263 - v71;
  uint64_t v73 = sub_100129300();
  sub_10000B40C();
  uint64_t v75 = v74;
  uint64_t v77 = __chkstk_darwin(v76);
  uint64_t v79 = (char *)&v263 - ((v78 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v77);
  uint64_t v81 = (char *)&v263 - v80;
  sub_100129450();
  sub_10000B40C();
  uint64_t v305 = v83;
  uint64_t v306 = v82;
  __chkstk_darwin(v82);
  sub_10000DC50();
  uint64_t v86 = v85 - v84;
  sub_1001293B0();
  (*(void (**)(uint64_t, void, uint64_t))(v62 + 104))(v66, enum case for Calendar.Component.minute(_:), v60);
  sub_1001292B0();
  uint64_t v304 = v86;
  sub_1001293E0();
  uint64_t v87 = *(void (**)(void, void))(v75 + 8);
  v274 = v79;
  v302 = (void (*)(char *, uint64_t))v87;
  uint64_t v303 = v75 + 8;
  v87(v79, v73);
  (*(void (**)(uint64_t, uint64_t))(v62 + 8))(v66, v60);
  int v88 = _s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v72, 1, v73);
  uint64_t v313 = v73;
  uint64_t v275 = v75;
  if (v88 == 1)
  {
    sub_1001292B0();
    sub_100011E78((uint64_t)v72, &qword_10016C7B0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v75 + 32))(v81, v72, v73);
  }
  uint64_t v89 = *(int *)(type metadata accessor for EventViewModelFactory() + 20);
  sub_100129980();
  v316 = v81;
  sub_10012B9D0();
  swift_bridgeObjectRelease();
  uint64_t v90 = sub_10012B930();
  sub_100011F28((uint64_t)v59);
  if (v91)
  {
    sub_100011E78((uint64_t)v59, &qword_10016B3F0);
    v314 = _swiftEmptyArrayStorage;
    CGFloat v93 = v315;
    uint64_t v92 = v316;
    uint64_t v94 = v317;
    uint64_t v95 = v312;
    goto LABEL_14;
  }
  sub_10000B40C();
  uint64_t v97 = v96;
  uint64_t v98 = sub_100012070();
  int v100 = v99(v98);
  uint64_t v94 = v317;
  uint64_t v95 = v312;
  if (v100 != enum case for WeatherEventDescription.severeWeather(_:))
  {
    (*(void (**)(uint64_t *, uint64_t))(v97 + 8))(v59, v90);
    goto LABEL_13;
  }
  (*(void (**)(uint64_t *, uint64_t))(v97 + 96))(v59, v90);
  uint64_t v101 = *v59;
  uint64_t v102 = v59[1];
  if (!sub_100129980())
  {
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  uint64_t v264 = v101;
  uint64_t v103 = v283;
  uint64_t v104 = v282;
  uint64_t v105 = v284;
  (*(void (**)(uint64_t, void, uint64_t))(v283 + 104))(v282, enum case for WeatherAlert.Prominence.high(_:), v284);
  sub_10012CBE0();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v103 + 8))(v104, v105);
  uint64_t v106 = v314;
  sub_10000C310();
  swift_bridgeObjectRelease();
  if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v106, 1, v289) == 1)
  {
    swift_bridgeObjectRelease();
    sub_100011E78((uint64_t)v106, &qword_10016B3E8);
LABEL_13:
    v314 = _swiftEmptyArrayStorage;
    CGFloat v93 = v315;
    uint64_t v92 = v316;
    goto LABEL_14;
  }
  uint64_t v284 = v89;
  sub_100011F6C();
  v139();
  sub_1000120A4();
  sub_1001297C0();
  LODWORD(v314) = sub_10000F9C4(v95);
  sub_10000B424();
  v140();
  sub_1000120A4();
  sub_1001297B0();
  uint64_t v141 = v276;
  sub_1001298E0();
  uint64_t v142 = *(void (**)(uint64_t, uint64_t))(v278 + 8);
  uint64_t v143 = v95;
  uint64_t v144 = v279;
  v142(v143, v279);
  sub_100012024();
  uint64_t v145 = v313;
  _s13WeatherWidget20WeatherDataViewModelOwst_0(v146, v147, v148, v313);
  _s13WeatherWidget20WeatherDataViewModelOwst_0(v288, 1, 1, v145);
  uint64_t v149 = v102;
  uint64_t v150 = v272;
  sub_1001297B0();
  sub_1001298D0();
  v142(v150, v144);
  v151 = (int *)v296;
  v152 = v287;
  uint64_t v153 = sub_100129C10();
  sub_100012030(v153);
  unsigned char *v152 = 2;
  v152[1] = (_BYTE)v314;
  sub_1000105C0(v141, (uint64_t)&v152[v151[6]]);
  sub_1000105C0(v288, (uint64_t)&v152[v151[7]]);
  sub_100011F6C();
  v154();
  uint64_t v155 = &v152[v151[9]];
  uint64_t v156 = v264;
  *uint64_t v155 = v264;
  v155[1] = v149;
  uint64_t v157 = &v152[v151[10]];
  *uint64_t v157 = v156;
  v157[1] = v149;
  uint64_t v158 = &v152[v151[11]];
  *uint64_t v158 = v156;
  v158[1] = v149;
  *(void *)&v152[v151[12]] = 0;
  uint64_t v159 = v273;
  sub_10000F960((uint64_t)v152, v273);
  swift_bridgeObjectRetain_n();
  uint64_t v160 = (void *)sub_1000457D4(0, 1, 1, (uint64_t)_swiftEmptyArrayStorage);
  unint64_t v162 = v160[2];
  unint64_t v161 = v160[3];
  v314 = v160;
  if (v162 >= v161 >> 1) {
    v314 = (void *)sub_1000457D4(v161 > 1, v162 + 1, 1, (uint64_t)v314);
  }
  CGFloat v93 = v315;
  uint64_t v92 = v316;
  uint64_t v89 = v284;
  uint64_t v95 = v312;
  uint64_t v94 = v317;
  v314[2] = v162 + 1;
  sub_100011F78();
  sub_100010438(v159, v163 + v164 * v162);
  sub_10001049C((uint64_t)v287);
  sub_10000B424();
  v165();
LABEL_14:
  sub_1001299A0();
  if (_s13WeatherWidget20WeatherDataViewModelOwet_0(v95, 1, v94) == 1)
  {
    uint64_t v107 = &qword_10016B3D8;
    uint64_t v108 = v95;
LABEL_18:
    sub_100011E78(v108, v107);
    goto LABEL_36;
  }
  sub_100011F6C();
  v109();
  uint64_t v110 = sub_100129EA0();
  __chkstk_darwin(v110);
  *(&v263 - 2) = (uint64_t)v92;
  uint64_t v320 = sub_10000FD58((uint64_t (*)(char *))sub_1000104F8, (uint64_t)(&v263 - 4), v111);
  swift_bridgeObjectRetain();
  sub_100010518((size_t *)&v320);
  swift_bridgeObjectRelease();
  uint64_t v112 = (uint64_t)v298;
  sub_10000C328();
  swift_release();
  if (_s13WeatherWidget20WeatherDataViewModelOwet_0(v112, 1, v300) == 1)
  {
    uint64_t v113 = sub_100011ED0();
    v114(v113);
    uint64_t v107 = &qword_10016B3D0;
    uint64_t v108 = v112;
    goto LABEL_18;
  }
  sub_100011F6C();
  v115();
  uint64_t v284 = v89;
  uint64_t v116 = v295;
  sub_1001299A0();
  uint64_t v117 = v90;
  uint64_t v118 = v290;
  sub_10012B9E0();
  uint64_t v119 = v116;
  uint64_t v120 = v118;
  uint64_t v90 = v117;
  sub_100011E78(v119, &qword_10016B3D8);
  if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v120, 1, v117) == 1)
  {
    sub_100011F98();
    v121();
    uint64_t v122 = sub_100011ED0();
    v123(v122);
    sub_100011E78((uint64_t)v120, &qword_10016B3F0);
    goto LABEL_36;
  }
  sub_10000B40C();
  uint64_t v125 = v124;
  uint64_t v127 = *(uint64_t (**)(void))(v126 + 88);
  sub_100011FE8();
  int v128 = v127();
  if (v128 != enum case for WeatherEventDescription.nextHourPrecipitation(_:))
  {
    sub_100011F98();
    v166();
    uint64_t v167 = sub_100011ED0();
    v168(v167);
    (*(void (**)(uint64_t *, uint64_t))(v125 + 8))(v120, v117);
    goto LABEL_35;
  }
  int v129 = v128;
  uint64_t v312 = v125;
  v298 = *(void (**)(uint64_t *, uint64_t))(v125 + 96);
  v298(v120, v90);
  uint64_t v130 = v120[1];
  sub_100012084(*v120);
  sub_1000120A4();
  sub_1001299A0();
  uint64_t v131 = v268;
  sub_10012B9F0();
  uint64_t v132 = v125;
  uint64_t v133 = (uint64_t *)v131;
  sub_100011E78(v132, &qword_10016B3D8);
  sub_100011F28(v131);
  if (v91)
  {
    swift_bridgeObjectRelease();
    uint64_t v134 = sub_100011F00();
    v135(v134);
    uint64_t v136 = sub_100011ED0();
    v137(v136);
    uint64_t v138 = v131;
LABEL_25:
    sub_100011E78(v138, &qword_10016B3F0);
LABEL_35:
    CGFloat v93 = v315;
    goto LABEL_36;
  }
  uint64_t v169 = v130;
  sub_100011FE8();
  if (v127() != v129)
  {
    swift_bridgeObjectRelease();
    uint64_t v179 = sub_100011F00();
    v180(v179);
    uint64_t v181 = sub_100011ED0();
    v182(v181);
    (*(void (**)(uint64_t *, uint64_t))(v312 + 8))(v133, v90);
    goto LABEL_35;
  }
  sub_100011FD0();
  v170();
  uint64_t v171 = v133[1];
  sub_100012084(*v133);
  v290 = *(uint64_t **)(v172 + v173);
  sub_1000120A4();
  sub_1001299A0();
  long long v174 = v267;
  sub_10012BA00();
  sub_100011E78((uint64_t)v133, &qword_10016B3D8);
  sub_100011F28((uint64_t)v174);
  if (v91)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v175 = sub_100011F00();
    v176(v175);
    uint64_t v177 = sub_100011ED0();
    v178(v177);
    uint64_t v138 = (uint64_t)v174;
    goto LABEL_25;
  }
  sub_100011FE8();
  if (v127() != v129)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v253 = sub_100011F00();
    v254(v253);
    uint64_t v255 = sub_100011ED0();
    v256(v255);
    (*(void (**)(void *, uint64_t))(v312 + 8))(v174, v90);
    goto LABEL_35;
  }
  sub_100011FD0();
  v219();
  v298 = (void (*)(uint64_t *, uint64_t))*v174;
  uint64_t v295 = v174[1];
  uint64_t v312 = v171;
  uint64_t v220 = v276;
  sub_100129B90();
  sub_100012024();
  uint64_t v221 = v313;
  _s13WeatherWidget20WeatherDataViewModelOwst_0(v222, v223, v224, v313);
  uint64_t v225 = v288;
  sub_1001292F0();
  sub_100012024();
  _s13WeatherWidget20WeatherDataViewModelOwst_0(v226, v227, v228, v221);
  sub_100129E80();
  v229 = v274;
  sub_1001298D0();
  sub_10000B424();
  v230();
  v290 = (uint64_t *)v169;
  v231 = (int *)v296;
  v232 = v266;
  sub_100129BA0();
  sub_100129C10();
  sub_100012024();
  _s13WeatherWidget20WeatherDataViewModelOwst_0(v233, v234, v235, v236);
  *(_WORD *)v232 = 1286;
  sub_1000105C0(v220, (uint64_t)&v232[v231[6]]);
  sub_1000105C0(v225, (uint64_t)&v232[v231[7]]);
  (*(void (**)(char *, char *, uint64_t))(v275 + 32))(&v232[v231[8]], v229, v221);
  v237 = &v232[v231[9]];
  uint64_t v238 = v295;
  *(void *)v237 = v298;
  *((void *)v237 + 1) = v238;
  v239 = &v232[v231[10]];
  uint64_t v240 = v312;
  *(void *)v239 = v287;
  *((void *)v239 + 1) = v240;
  v241 = &v232[v231[11]];
  v242 = v290;
  *(void *)v241 = v289;
  *((void *)v241 + 1) = v242;
  *(void *)&v232[v231[12]] = 0;
  uint64_t v243 = v265;
  sub_10000F960((uint64_t)v232, v265);
  v244 = v314;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  CGFloat v93 = v315;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
    v244 = (void *)sub_1000457D4(0, v244[2] + 1, 1, (uint64_t)v244);
  }
  unint64_t v247 = v244[2];
  unint64_t v246 = v244[3];
  v314 = v244;
  if (v247 >= v246 >> 1)
  {
    char v260 = sub_100012010(v246);
    v314 = (void *)sub_1000457D4(v260, v261, v262, (uint64_t)v314);
  }
  v314[2] = v247 + 1;
  sub_100011F78();
  sub_100010438(v243, v248 + v249 * v247);
  sub_10001049C((uint64_t)v266);
  sub_100011F98();
  v250();
  uint64_t v251 = sub_100011ED0();
  v252(v251);
LABEL_36:
  uint64_t v183 = v307;
  sub_1001299B0();
  sub_100129970();
  sub_10012BA10();
  sub_10000B424();
  v184();
  sub_100011E78(v183, &qword_10016B3C8);
  sub_100011F28((uint64_t)v93);
  if (v91)
  {
    sub_10000B424();
    v185();
    uint64_t v186 = sub_100011FB8();
    v187(v186);
    sub_100011E78((uint64_t)v93, &qword_10016B3F0);
    return v314;
  }
  sub_10000B40C();
  uint64_t v189 = v188;
  uint64_t v190 = sub_100012070();
  if (v191(v190) != enum case for WeatherEventDescription.changeInCondition(_:))
  {
    sub_10000B424();
    v197();
    uint64_t v198 = sub_100011FB8();
    v199(v198);
    (*(void (**)(uint64_t *, uint64_t))(v189 + 8))(v93, v90);
    return v314;
  }
  (*(void (**)(uint64_t *, uint64_t))(v189 + 96))(v93, v90);
  uint64_t v193 = *v93;
  uint64_t v192 = v93[1];
  uint64_t v194 = v293;
  sub_1001299B0();
  uint64_t v195 = v294;
  if (_s13WeatherWidget20WeatherDataViewModelOwet_0(v194, 1, v294) == 1)
  {
    sub_100011E78(v194, &qword_10016B3C8);
    char v196 = 3;
  }
  else
  {
    uint64_t v201 = v281;
    uint64_t v202 = v280;
    sub_100011F6C();
    v203();
    char v204 = sub_10000FFFC();
    (*(void (**)(uint64_t, uint64_t))(v201 + 8))(v202, v195);
    char v196 = v204 + 3;
  }
  v205 = v291;
  uint64_t v206 = v313;
  v200 = v314;
  v207 = (int *)v296;
  sub_100012050(*(int *)(v296 + 24));
  sub_100012050(v207[7]);
  sub_1001292F0();
  uint64_t v208 = sub_100129C10();
  sub_100012030(v208);
  char *v205 = v196;
  v205[1] = 5;
  v209 = &v205[v207[9]];
  *(void *)v209 = v193;
  *((void *)v209 + 1) = v192;
  v210 = &v205[v207[10]];
  *(void *)v210 = v193;
  *((void *)v210 + 1) = v192;
  v211 = &v205[v207[11]];
  *(void *)v211 = v193;
  *((void *)v211 + 1) = v192;
  *(void *)&v205[v207[12]] = 0;
  uint64_t v212 = v292;
  sub_10000F960((uint64_t)v205, v292);
  swift_bridgeObjectRetain_n();
  char v213 = swift_isUniquelyReferenced_nonNull_native();
  v214 = v316;
  if ((v213 & 1) == 0) {
    v200 = (void *)sub_1000457D4(0, v200[2] + 1, 1, (uint64_t)v200);
  }
  unint64_t v216 = v200[2];
  unint64_t v215 = v200[3];
  if (v216 >= v215 >> 1)
  {
    char v257 = sub_100012010(v215);
    v200 = (void *)sub_1000457D4(v257, v258, v259, (uint64_t)v200);
  }
  v200[2] = v216 + 1;
  sub_100010438(v212, (uint64_t)v200+ ((*(unsigned __int8 *)(v297 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v297 + 80))+ *(void *)(v297 + 72) * v216);
  sub_10001049C((uint64_t)v205);
  sub_10000B424();
  v217();
  v302(v214, v206);
  return v200;
}

uint64_t sub_10000F960(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for EventViewModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10000F9C4(uint64_t a1)
{
  uint64_t v2 = sub_100129900();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  int v6 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v5, v2);
  if (v6 == enum case for WeatherSeverity.minor(_:)) {
    return 0;
  }
  if (v6 == enum case for WeatherSeverity.moderate(_:)) {
    return 1;
  }
  if (v6 == enum case for WeatherSeverity.severe(_:)) {
    return 2;
  }
  if (v6 == enum case for WeatherSeverity.extreme(_:)) {
    return 3;
  }
  if (v6 != enum case for WeatherSeverity.unknown(_:)) {
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  return 4;
}

BOOL sub_10000FB44(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_1000053D8(&qword_10016C7B0);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100129300();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v15 - v11;
  sub_100129B80();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v10, a2, v6);
  if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v5, 1, v6) == 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v12, v10, v6);
    sub_100011E78((uint64_t)v5, &qword_10016C7B0);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v12, v5, v6);
  }
  sub_100011E28();
  char v13 = sub_10012C9C0();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
  return (v13 & 1) == 0;
}

uint64_t sub_10000FD58(uint64_t (*a1)(char *), uint64_t a2, uint64_t a3)
{
  uint64_t v28 = sub_100129BB0();
  uint64_t v7 = *(void *)(v28 - 8);
  uint64_t v8 = __chkstk_darwin(v28);
  uint64_t v27 = (char *)v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = __chkstk_darwin(v8);
  uint64_t v12 = (char *)v20 - v11;
  char v13 = &_swiftEmptyArrayStorage;
  uint64_t v29 = &_swiftEmptyArrayStorage;
  uint64_t v26 = *(void *)(a3 + 16);
  if (v26)
  {
    unint64_t v14 = 0;
    uint64_t v21 = a3;
    uint64_t v22 = (void (**)(char *, uint64_t))(v7 + 8);
    uint64_t v24 = (void (**)(char *, char *, uint64_t))(v7 + 32);
    uint64_t v25 = v7 + 16;
    v20[0] = a1;
    v20[1] = a2;
    while (v14 < *(void *)(a3 + 16))
    {
      unint64_t v15 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
      char v13 = *(void **)(v7 + 72);
      (*(void (**)(char *, unint64_t, uint64_t))(v7 + 16))(v12, a3 + v15 + (void)v13 * v14, v28);
      char v16 = a1(v12);
      if (v3)
      {
        (*v22)(v12, v28);
        swift_bridgeObjectRelease();
        swift_release();
        return (uint64_t)v13;
      }
      if (v16)
      {
        uint64_t v23 = *v24;
        v23(v27, v12, v28);
        uint64_t v17 = v29;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1000EAC3C(0, v17[2] + 1, 1);
          uint64_t v17 = v29;
        }
        unint64_t v19 = v17[2];
        unint64_t v18 = v17[3];
        if (v19 >= v18 >> 1)
        {
          sub_1000EAC3C(v18 > 1, v19 + 1, 1);
          uint64_t v17 = v29;
        }
        v17[2] = v19 + 1;
        uint64_t result = ((uint64_t (*)(char *, char *, uint64_t))v23)((char *)v17 + v15 + v19 * (void)v13, v27, v28);
        uint64_t v29 = v17;
        a3 = v21;
        a1 = (uint64_t (*)(char *))v20[0];
      }
      else
      {
        uint64_t result = ((uint64_t (*)(char *, uint64_t))*v22)(v12, v28);
      }
      if (v26 == ++v14)
      {
        char v13 = v29;
        goto LABEL_15;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_15:
    swift_bridgeObjectRelease();
    return (uint64_t)v13;
  }
  return result;
}

uint64_t sub_10000FFFC()
{
  uint64_t v59 = sub_100129300();
  sub_10000B40C();
  uint64_t v56 = v0;
  __chkstk_darwin(v1);
  sub_10000DC50();
  uint64_t v4 = v3 - v2;
  uint64_t v5 = sub_1000053D8(&qword_10016B400);
  uint64_t v6 = sub_10000DC9C(v5);
  __chkstk_darwin(v6);
  sub_10000DC50();
  uint64_t v9 = v8 - v7;
  uint64_t v10 = sub_100129830();
  sub_10000B40C();
  uint64_t v12 = v11;
  uint64_t v14 = __chkstk_darwin(v13);
  char v16 = (char *)&v51 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  sub_100011FAC();
  uint64_t v57 = v17;
  sub_10000DCA8();
  uint64_t v18 = sub_100129450();
  sub_10000B40C();
  uint64_t v20 = v19;
  __chkstk_darwin(v21);
  sub_10000DBCC();
  uint64_t v60 = v22;
  sub_1001293B0();
  uint64_t v23 = sub_100129840();
  uint64_t v24 = *(void *)(v23 + 16);
  if (v24)
  {
    uint64_t v52 = v9;
    uint64_t v53 = v20;
    uint64_t v54 = v18;
    uint64_t v55 = v12;
    uint64_t v26 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
    uint64_t v25 = v12 + 16;
    uint64_t v58 = v26;
    uint64_t v27 = *(unsigned __int8 *)(v25 + 64);
    uint64_t v51 = v23;
    uint64_t v28 = v23 + ((v27 + 32) & ~v27);
    uint64_t v29 = (void (**)(uint64_t, uint64_t))(v56 + 8);
    uint64_t v30 = *(void *)(v25 + 56);
    while (1)
    {
      v58(v16, v28, v10);
      sub_100129810();
      char v31 = sub_1001293D0();
      (*v29)(v4, v59);
      if (v31) {
        break;
      }
      (*(void (**)(char *, uint64_t))(v25 - 8))(v16, v10);
      v28 += v30;
      if (!--v24)
      {
        uint64_t v32 = 1;
        uint64_t v9 = v52;
        goto LABEL_8;
      }
    }
    uint64_t v9 = v52;
    sub_100011F6C();
    v34(v33);
    uint64_t v32 = 0;
  }
  else
  {
    uint64_t v32 = 1;
  }
LABEL_8:
  _s13WeatherWidget20WeatherDataViewModelOwst_0(v9, v32, 1, v10);
  swift_bridgeObjectRelease();
  sub_100011F28(v9);
  if (v35)
  {
    uint64_t v36 = sub_100011F48();
    v37(v36);
    sub_100011E78(v9, &qword_10016B400);
    return 0;
  }
  else
  {
    sub_100011F6C();
    v40(v39);
    if (sub_100129800())
    {
      sub_1001297F0();
      char v42 = sub_100129820();
      uint64_t v43 = sub_100011FF8();
      v44(v43);
      uint64_t v45 = sub_100011F48();
      v46(v45);
      if (v42) {
        return 0;
      }
      else {
        return 2;
      }
    }
    else
    {
      uint64_t v47 = sub_100011FF8();
      v48(v47);
      uint64_t v49 = sub_100011F48();
      v50(v49);
      return 1;
    }
  }
}

uint64_t sub_100010358(uint64_t a1)
{
  if (a1 < 0)
  {
    uint64_t result = sub_10012D060();
    __break(1u);
  }
  else
  {
    if (a1)
    {
      sub_100129BB0();
      uint64_t v2 = (void *)sub_10012CBD0();
      v2[2] = a1;
    }
    else
    {
      uint64_t v2 = &_swiftEmptyArrayStorage;
    }
    sub_100129BB0();
    return (uint64_t)v2;
  }
  return result;
}

uint64_t sub_100010438(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for EventViewModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10001049C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for EventViewModel(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

BOOL sub_1000104F8(uint64_t a1)
{
  return sub_10000FB44(a1, *(void *)(v1 + 16));
}

void sub_100010518(size_t *a1)
{
  uint64_t v2 = *(void *)(sub_100129BB0() - 8);
  size_t v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    size_t v3 = sub_100011E10(v3);
  }
  uint64_t v4 = *(void *)(v3 + 16);
  v5[0] = v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v5[1] = v4;
  sub_100010628((uint64_t)v5);
  *a1 = v3;
}

uint64_t sub_1000105C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000053D8(&qword_10016C7B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_100010628(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v165 = sub_100129300();
  uint64_t v4 = *(void *)(v165 - 8);
  uint64_t v5 = __chkstk_darwin(v165);
  uint64_t v164 = (char *)&v143 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v163 = (char *)&v143 - v7;
  uint64_t v8 = sub_100129BB0();
  uint64_t v154 = *(void **)(v8 - 8);
  uint64_t v9 = __chkstk_darwin(v8);
  v151 = (char *)&v143 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v170 = (char *)&v143 - v12;
  uint64_t v13 = __chkstk_darwin(v11);
  unint64_t v162 = (char *)&v143 - v14;
  __chkstk_darwin(v13);
  uint64_t v166 = (char *)&v143 - v15;
  Swift::Int v16 = *(void *)(a1 + 8);
  Swift::Int v17 = sub_10012D1C0(v16);
  if (v17 >= v16)
  {
    if ((v16 & 0x8000000000000000) == 0)
    {
      if (v16) {
        sub_1000112F0(0, v16, 1, (void *)a1);
      }
      return;
    }
    goto LABEL_145;
  }
  Swift::Int v18 = v17;
  uint64_t v145 = sub_100010358(v16 / 2);
  unint64_t v153 = v19;
  Swift::Int v146 = v16;
  if (v16 <= 0)
  {
LABEL_106:
    uint64_t v21 = (char *)_swiftEmptyArrayStorage;
    unint64_t v86 = _swiftEmptyArrayStorage[2];
LABEL_107:
    if (v86 < 2)
    {
      uint64_t v136 = v146;
LABEL_120:
      swift_bridgeObjectRelease();
      if (v136 >= -1) {
        goto LABEL_121;
      }
      goto LABEL_149;
    }
    uint64_t v137 = *(void *)a1;
    uint64_t v136 = v146;
    while (1)
    {
      unint64_t v138 = v86 - 2;
      if (v86 < 2) {
        break;
      }
      if (!v137) {
        goto LABEL_153;
      }
      uint64_t v139 = v21;
      uint64_t v140 = *(void *)&v21[16 * v138 + 32];
      a1 = *(void *)&v21[16 * v86 + 24];
      sub_1000116BC(v137 + v154[9] * v140, v137 + v154[9] * *(void *)&v21[16 * v86 + 16], v137 + v154[9] * a1, v153);
      if (v2) {
        goto LABEL_104;
      }
      if (a1 < v140) {
        goto LABEL_140;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v139 = sub_100011DFC((uint64_t)v139);
      }
      if (v138 >= *((void *)v139 + 2)) {
        goto LABEL_141;
      }
      uint64_t v141 = &v139[16 * v138 + 32];
      *(void *)uint64_t v141 = v140;
      *((void *)v141 + 1) = a1;
      unint64_t v142 = *((void *)v139 + 2);
      if (v86 > v142) {
        goto LABEL_142;
      }
      memmove(&v139[16 * v86 + 16], &v139[16 * v86 + 32], 16 * (v142 - v86));
      uint64_t v21 = v139;
      *((void *)v139 + 2) = v142 - 1;
      unint64_t v86 = v142 - 1;
      if (v142 <= 2) {
        goto LABEL_120;
      }
    }
LABEL_139:
    __break(1u);
LABEL_140:
    __break(1u);
LABEL_141:
    __break(1u);
LABEL_142:
    __break(1u);
LABEL_143:
    __break(1u);
LABEL_144:
    __break(1u);
LABEL_145:
    __break(1u);
LABEL_146:
    __break(1u);
LABEL_147:
    __break(1u);
LABEL_148:
    __break(1u);
LABEL_149:
    __break(1u);
LABEL_150:
    __break(1u);
LABEL_151:
    __break(1u);
LABEL_152:
    __break(1u);
LABEL_153:
    __break(1u);
    return;
  }
  Swift::Int v147 = v18;
  Swift::Int v20 = 0;
  uint64_t v160 = (void (**)(char *, uint64_t))(v4 + 8);
  unint64_t v161 = v154 + 2;
  uint64_t v159 = (void (**)(char *, uint64_t))(v154 + 1);
  long long v174 = (char **)(v154 + 4);
  uint64_t v21 = (char *)_swiftEmptyArrayStorage;
  uint64_t v167 = (void *)a1;
  uint64_t v169 = v8;
  while (1)
  {
    Swift::Int v22 = v20 + 1;
    uint64_t v150 = v21;
    Swift::Int v152 = v20;
    if (v20 + 1 >= v16)
    {
      uint64_t v46 = (void (*)(void))v20;
      Swift::Int v47 = v147;
    }
    else
    {
      uint64_t v23 = *(void *)a1;
      uint64_t v172 = (void (*)(void))v154[9];
      uint64_t v24 = v172;
      uint64_t v173 = (char *)(v20 + 1);
      uint64_t v25 = (void (*)(void))v154[2];
      v25();
      Swift::Int v171 = v16;
      uint64_t v26 = v162;
      uint64_t v168 = v25;
      ((void (*)(char *, uint64_t, uint64_t))v25)(v162, v23 + (void)v24 * v20, v8);
      uint64_t v27 = v163;
      sub_100129B90();
      uint64_t v28 = v164;
      sub_100129B90();
      LODWORD(v158) = sub_100129270();
      uint64_t v29 = (char *)*v160;
      uint64_t v30 = v165;
      (*v160)(v28, v165);
      uint64_t v157 = (void (*)(char *, uint64_t))v29;
      ((void (*)(char *, uint64_t))v29)(v27, v30);
      char v31 = (void (*)(char *, uint64_t))v154[1];
      uint64_t v32 = v26;
      Swift::Int v16 = v171;
      uint64_t v33 = v169;
      v31(v32, v169);
      uint64_t v156 = (char *)v31;
      v31(v166, v33);
      Swift::Int v22 = v20 + 2;
      uint64_t v148 = v23;
      if (v20 + 2 >= v16)
      {
        a1 = (uint64_t)v167;
      }
      else
      {
        uint64_t v144 = v2;
        uint64_t v155 = (void)v172 * (void)v173;
        uint64_t v34 = v23;
        Swift::Int v149 = (void)v172 * v22;
        while (1)
        {
          Swift::Int v35 = v22;
          uint64_t v36 = v166;
          uint64_t v37 = v168;
          uint64_t v38 = v169;
          ((void (*)(char *, uint64_t, uint64_t))v168)(v166, v34 + v149, v169);
          uint64_t v39 = v162;
          ((void (*)(char *, uint64_t, uint64_t))v37)(v162, v34 + v155, v38);
          uint64_t v40 = v163;
          sub_100129B90();
          uint64_t v41 = v164;
          sub_100129B90();
          LODWORD(v173) = sub_100129270();
          char v42 = v41;
          uint64_t v43 = v165;
          uint64_t v44 = v157;
          v157(v42, v165);
          v44(v40, v43);
          uint64_t v45 = (void (*)(char *, uint64_t))v156;
          ((void (*)(char *, uint64_t))v156)(v39, v38);
          v45(v36, v38);
          if ((v158 ^ v173)) {
            break;
          }
          Swift::Int v22 = v35 + 1;
          Swift::Int v16 = v171;
          v34 += (uint64_t)v172;
          if (v35 + 1 >= v171)
          {
            Swift::Int v22 = v171;
            a1 = (uint64_t)v167;
            uint64_t v2 = v144;
            goto LABEL_13;
          }
        }
        a1 = (uint64_t)v167;
        uint64_t v2 = v144;
        Swift::Int v22 = v35;
        Swift::Int v16 = v171;
      }
LABEL_13:
      uint64_t v48 = v150;
      uint64_t v8 = v169;
      Swift::Int v47 = v147;
      uint64_t v46 = (void (*)(void))v152;
      if (v158)
      {
        if (v22 < v152) {
          goto LABEL_146;
        }
        if (v152 < v22)
        {
          uint64_t v49 = 0;
          uint64_t v50 = v172;
          uint64_t v51 = (void)v172 * (v22 - 1);
          Swift::Int v52 = v22 * (void)v172;
          uint64_t v53 = v152 * (void)v172;
          uint64_t v168 = (void (*)(void))v22;
          do
          {
            if (v46 != (void (*)(void))(v22 + v49 - 1))
            {
              uint64_t v54 = v148;
              if (!v148) {
                goto LABEL_152;
              }
              uint64_t v55 = v2;
              unint64_t v56 = v148 + v53;
              uint64_t v158 = v148 + v51;
              uint64_t v57 = v169;
              uint64_t v173 = *v174;
              ((void (*)(char *, uint64_t, uint64_t, char *))v173)(v151, v148 + v53, v169, v48);
              if (v53 < v51 || v56 >= v54 + v52)
              {
                uint64_t v59 = v158;
                swift_arrayInitWithTakeFrontToBack();
              }
              else
              {
                uint64_t v59 = v158;
                if (v53 != v51) {
                  swift_arrayInitWithTakeBackToFront();
                }
              }
              ((void (*)(uint64_t, char *, uint64_t))v173)(v59, v151, v57);
              uint64_t v48 = v150;
              uint64_t v2 = v55;
              a1 = (uint64_t)v167;
              Swift::Int v22 = (Swift::Int)v168;
              uint64_t v50 = v172;
            }
            uint64_t v46 = (void (*)(void))((char *)v46 + 1);
            --v49;
            v51 -= (uint64_t)v50;
            v52 -= (uint64_t)v50;
            v53 += (uint64_t)v50;
          }
          while ((uint64_t)v46 < v22 + v49);
          uint64_t v8 = v169;
          Swift::Int v47 = v147;
          uint64_t v46 = (void (*)(void))v152;
          Swift::Int v16 = v171;
        }
      }
    }
    if (v22 < v16)
    {
      if (__OFSUB__(v22, v46)) {
        goto LABEL_144;
      }
      if (v22 - (uint64_t)v46 < v47)
      {
        if (__OFADD__(v46, v47)) {
          goto LABEL_147;
        }
        if ((uint64_t)v46 + v47 >= v16) {
          Swift::Int v60 = v16;
        }
        else {
          Swift::Int v60 = (Swift::Int)v46 + v47;
        }
        if (v60 < (uint64_t)v46) {
          goto LABEL_148;
        }
        if (v22 != v60)
        {
          uint64_t v144 = v2;
          uint64_t v61 = (char *)v154[9];
          uint64_t v155 = v154[2];
          uint64_t v156 = v61;
          uint64_t v62 = (void)v61 * (v22 - 1);
          Swift::Int v63 = v22 * (void)v61;
          Swift::Int v149 = v60;
          do
          {
            uint64_t v64 = 0;
            uint64_t v168 = (void (*)(void))v22;
            uint64_t v157 = (void (*)(char *, uint64_t))v63;
            uint64_t v158 = v62;
            while (1)
            {
              uint64_t v65 = *(void *)a1;
              Swift::Int v171 = v63 + v64;
              uint64_t v172 = v46;
              uint64_t v66 = (char *)(v63 + v64 + v65);
              uint64_t v67 = v166;
              uint64_t v68 = (void (*)(char *, uint64_t, uint64_t))v155;
              ((void (*)(char *, char *, uint64_t))v155)(v166, v66, v8);
              uint64_t v69 = v62 + v64 + v65;
              uint64_t v70 = v162;
              v68(v162, v69, v8);
              uint64_t v71 = v163;
              sub_100129B90();
              uint64_t v72 = (uint64_t *)a1;
              uint64_t v73 = v164;
              sub_100129B90();
              LODWORD(v173) = sub_100129270();
              uint64_t v74 = *v160;
              uint64_t v75 = v73;
              uint64_t v76 = v165;
              (*v160)(v75, v165);
              uint64_t v77 = v71;
              uint64_t v8 = v169;
              v74(v77, v76);
              uint64_t v78 = *v159;
              (*v159)(v70, v8);
              v78(v67, v8);
              if ((v173 & 1) == 0) {
                break;
              }
              uint64_t v79 = *v72;
              if (!*v72) {
                goto LABEL_150;
              }
              Swift::Int v63 = (Swift::Int)v157;
              uint64_t v62 = v158;
              uint64_t v80 = (char *)(v79 + v158 + v64);
              uint64_t v81 = *v174;
              ((void (*)(char *, char *, uint64_t))*v174)(v170, (char *)v157 + v79 + v64, v8);
              swift_arrayInitWithTakeFrontToBack();
              ((void (*)(char *, char *, uint64_t))v81)(v80, v170, v8);
              v64 -= (uint64_t)v156;
              uint64_t v46 = (void (*)(void))((char *)v172 + 1);
              a1 = (uint64_t)v167;
              uint64_t v82 = v168;
              if (v168 == (void (*)(void))((char *)v172 + 1)) {
                goto LABEL_46;
              }
            }
            uint64_t v82 = v168;
            a1 = (uint64_t)v72;
            Swift::Int v63 = (Swift::Int)v157;
            uint64_t v62 = v158;
LABEL_46:
            Swift::Int v22 = (Swift::Int)v82 + 1;
            v62 += (uint64_t)v156;
            v63 += (Swift::Int)v156;
            uint64_t v46 = (void (*)(void))v152;
          }
          while (v22 != v149);
          Swift::Int v22 = v149;
          uint64_t v2 = v144;
        }
      }
    }
    if (v22 < (uint64_t)v46) {
      goto LABEL_143;
    }
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v168 = (void (*)(void))v22;
    if (isUniquelyReferenced_nonNull_native) {
      uint64_t v21 = v150;
    }
    else {
      uint64_t v21 = sub_100011D04(0, *((void *)v150 + 2) + 1, 1, v150);
    }
    unint64_t v85 = *((void *)v21 + 2);
    unint64_t v84 = *((void *)v21 + 3);
    unint64_t v86 = v85 + 1;
    if (v85 >= v84 >> 1) {
      uint64_t v21 = sub_100011D04((char *)(v84 > 1), v85 + 1, 1, v21);
    }
    *((void *)v21 + 2) = v86;
    uint64_t v87 = v21 + 32;
    int v88 = &v21[16 * v85 + 32];
    uint64_t v89 = v168;
    *(void *)int v88 = v46;
    *((void *)v88 + 1) = v89;
    if (v85) {
      break;
    }
    unint64_t v86 = 1;
    uint64_t v8 = v169;
LABEL_97:
    Swift::Int v16 = *(void *)(a1 + 8);
    Swift::Int v20 = (Swift::Int)v168;
    if ((uint64_t)v168 >= v16) {
      goto LABEL_107;
    }
  }
  uint64_t v8 = v169;
  while (1)
  {
    unint64_t v90 = v86 - 1;
    if (v86 >= 4)
    {
      uint64_t v95 = &v87[16 * v86];
      uint64_t v96 = *((void *)v95 - 8);
      uint64_t v97 = *((void *)v95 - 7);
      BOOL v101 = __OFSUB__(v97, v96);
      uint64_t v98 = v97 - v96;
      if (v101) {
        goto LABEL_128;
      }
      uint64_t v100 = *((void *)v95 - 6);
      uint64_t v99 = *((void *)v95 - 5);
      BOOL v101 = __OFSUB__(v99, v100);
      uint64_t v93 = v99 - v100;
      char v94 = v101;
      if (v101) {
        goto LABEL_129;
      }
      unint64_t v102 = v86 - 2;
      uint64_t v103 = &v87[16 * v86 - 32];
      uint64_t v105 = *(void *)v103;
      uint64_t v104 = *((void *)v103 + 1);
      BOOL v101 = __OFSUB__(v104, v105);
      uint64_t v106 = v104 - v105;
      if (v101) {
        goto LABEL_130;
      }
      BOOL v101 = __OFADD__(v93, v106);
      uint64_t v107 = v93 + v106;
      if (v101) {
        goto LABEL_132;
      }
      if (v107 >= v98)
      {
        uint64_t v125 = &v87[16 * v90];
        uint64_t v127 = *(void *)v125;
        uint64_t v126 = *((void *)v125 + 1);
        BOOL v101 = __OFSUB__(v126, v127);
        uint64_t v128 = v126 - v127;
        if (v101) {
          goto LABEL_138;
        }
        BOOL v118 = v93 < v128;
        goto LABEL_86;
      }
    }
    else
    {
      if (v86 != 3)
      {
        uint64_t v119 = *((void *)v21 + 4);
        uint64_t v120 = *((void *)v21 + 5);
        BOOL v101 = __OFSUB__(v120, v119);
        uint64_t v112 = v120 - v119;
        char v113 = v101;
        goto LABEL_80;
      }
      uint64_t v92 = *((void *)v21 + 4);
      uint64_t v91 = *((void *)v21 + 5);
      BOOL v101 = __OFSUB__(v91, v92);
      uint64_t v93 = v91 - v92;
      char v94 = v101;
    }
    if (v94) {
      goto LABEL_131;
    }
    unint64_t v102 = v86 - 2;
    uint64_t v108 = &v87[16 * v86 - 32];
    uint64_t v110 = *(void *)v108;
    uint64_t v109 = *((void *)v108 + 1);
    BOOL v111 = __OFSUB__(v109, v110);
    uint64_t v112 = v109 - v110;
    char v113 = v111;
    if (v111) {
      goto LABEL_133;
    }
    uint64_t v114 = &v87[16 * v90];
    uint64_t v116 = *(void *)v114;
    uint64_t v115 = *((void *)v114 + 1);
    BOOL v101 = __OFSUB__(v115, v116);
    uint64_t v117 = v115 - v116;
    if (v101) {
      goto LABEL_135;
    }
    if (__OFADD__(v112, v117)) {
      goto LABEL_137;
    }
    if (v112 + v117 >= v93)
    {
      BOOL v118 = v93 < v117;
LABEL_86:
      if (v118) {
        unint64_t v90 = v102;
      }
      goto LABEL_88;
    }
LABEL_80:
    if (v113) {
      goto LABEL_134;
    }
    uint64_t v121 = &v87[16 * v90];
    uint64_t v123 = *(void *)v121;
    uint64_t v122 = *((void *)v121 + 1);
    BOOL v101 = __OFSUB__(v122, v123);
    uint64_t v124 = v122 - v123;
    if (v101) {
      goto LABEL_136;
    }
    if (v124 < v112) {
      goto LABEL_97;
    }
LABEL_88:
    unint64_t v129 = v90 - 1;
    if (v90 - 1 >= v86)
    {
      __break(1u);
LABEL_125:
      __break(1u);
LABEL_126:
      __break(1u);
LABEL_127:
      __break(1u);
LABEL_128:
      __break(1u);
LABEL_129:
      __break(1u);
LABEL_130:
      __break(1u);
LABEL_131:
      __break(1u);
LABEL_132:
      __break(1u);
LABEL_133:
      __break(1u);
LABEL_134:
      __break(1u);
LABEL_135:
      __break(1u);
LABEL_136:
      __break(1u);
LABEL_137:
      __break(1u);
LABEL_138:
      __break(1u);
      goto LABEL_139;
    }
    uint64_t v130 = *(void *)a1;
    if (!*(void *)a1) {
      goto LABEL_151;
    }
    uint64_t v131 = v21;
    uint64_t v132 = &v87[16 * v129];
    uint64_t v133 = *(void *)v132;
    a1 = (uint64_t)&v87[16 * v90];
    uint64_t v134 = *(void *)(a1 + 8);
    sub_1000116BC(v130 + v154[9] * *(void *)v132, v130 + v154[9] * *(void *)a1, v130 + v154[9] * v134, v153);
    if (v2) {
      break;
    }
    if (v134 < v133) {
      goto LABEL_125;
    }
    if (v90 > *((void *)v131 + 2)) {
      goto LABEL_126;
    }
    *(void *)uint64_t v132 = v133;
    *(void *)&v87[16 * v129 + 8] = v134;
    unint64_t v135 = *((void *)v131 + 2);
    if (v90 >= v135) {
      goto LABEL_127;
    }
    unint64_t v86 = v135 - 1;
    memmove(&v87[16 * v90], (const void *)(a1 + 16), 16 * (v135 - 1 - v90));
    uint64_t v21 = v131;
    *((void *)v131 + 2) = v135 - 1;
    BOOL v118 = v135 > 2;
    a1 = (uint64_t)v167;
    uint64_t v8 = v169;
    if (!v118) {
      goto LABEL_97;
    }
  }
  uint64_t v136 = v146;
LABEL_104:
  swift_bridgeObjectRelease();
  if (v136 < -1)
  {
    __break(1u);
    goto LABEL_106;
  }
LABEL_121:
  *(void *)(v145 + 16) = 0;
  swift_bridgeObjectRelease();
}

uint64_t sub_1000112F0(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v46 = a1;
  uint64_t v56 = sub_100129300();
  uint64_t v7 = *(void *)(v56 - 8);
  uint64_t v8 = __chkstk_darwin(v56);
  uint64_t v55 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v54 = (char *)&v44 - v10;
  uint64_t v11 = sub_100129BB0();
  uint64_t v12 = __chkstk_darwin(v11);
  uint64_t v62 = (char *)&v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v53 = (char *)&v44 - v15;
  uint64_t result = __chkstk_darwin(v14);
  Swift::Int v52 = (char *)&v44 - v18;
  uint64_t v60 = a3;
  uint64_t v45 = a2;
  if (a3 != a2)
  {
    Swift::Int v20 = *(void (**)(char *, uint64_t, uint64_t))(v17 + 16);
    uint64_t v19 = v17 + 16;
    uint64_t v21 = *(void *)(v19 + 56);
    uint64_t v48 = (void (**)(char *, uint64_t))(v7 + 8);
    uint64_t v49 = v20;
    Swift::Int v47 = (void (**)(char *, uint64_t))(v19 - 8);
    uint64_t v50 = v19;
    uint64_t v51 = v11;
    uint64_t v61 = (void (**)(char *, uint64_t, uint64_t))(v19 + 16);
    uint64_t v22 = v21 * (v60 - 1);
    uint64_t v57 = v21;
    uint64_t v23 = v21 * v60;
    while (2)
    {
      uint64_t v24 = 0;
      uint64_t v64 = v46;
      uint64_t v58 = v23;
      uint64_t v59 = v22;
      do
      {
        uint64_t v25 = *a4;
        uint64_t v63 = v23 + v24;
        uint64_t v26 = v23 + v24 + v25;
        uint64_t v27 = v52;
        uint64_t v28 = v49;
        v49(v52, v26, v11);
        uint64_t v29 = v22 + v24 + v25;
        uint64_t v30 = v53;
        v28(v53, v29, v11);
        char v31 = v54;
        sub_100129B90();
        uint64_t v32 = a4;
        uint64_t v33 = v55;
        sub_100129B90();
        int v65 = sub_100129270();
        uint64_t v34 = *v48;
        Swift::Int v35 = v33;
        uint64_t v36 = v56;
        (*v48)(v35, v56);
        uint64_t v37 = v36;
        a4 = v32;
        uint64_t v11 = v51;
        v34(v31, v37);
        uint64_t v38 = *v47;
        uint64_t v39 = v30;
        uint64_t v22 = v59;
        (*v47)(v39, v11);
        uint64_t v40 = v27;
        uint64_t v23 = v58;
        uint64_t result = ((uint64_t (*)(char *, uint64_t))v38)(v40, v11);
        if ((v65 & 1) == 0) {
          break;
        }
        uint64_t v41 = *a4;
        if (!*a4)
        {
          __break(1u);
          return result;
        }
        uint64_t v42 = v41 + v22 + v24;
        uint64_t v43 = *v61;
        (*v61)(v62, v41 + v23 + v24, v11);
        swift_arrayInitWithTakeFrontToBack();
        uint64_t result = ((uint64_t (*)(uint64_t, char *, uint64_t))v43)(v42, v62, v11);
        v24 -= v57;
        ++v64;
      }
      while (v60 != v64);
      v22 += v57;
      v23 += v57;
      if (++v60 != v45) {
        continue;
      }
      break;
    }
  }
  return result;
}

void sub_1000116BC(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v84 = sub_100129300();
  uint64_t v8 = *(void *)(v84 - 8);
  uint64_t v9 = __chkstk_darwin(v84);
  uint64_t v83 = (char *)&v69 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v82 = (char *)&v69 - v11;
  uint64_t v88 = sub_100129BB0();
  uint64_t v12 = *(void *)(v88 - 8);
  uint64_t v13 = __chkstk_darwin(v88);
  uint64_t v81 = (char *)&v69 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v80 = (char *)&v69 - v15;
  uint64_t v17 = *(void *)(v16 + 72);
  if (!v17)
  {
    __break(1u);
LABEL_77:
    __break(1u);
LABEL_78:
    __break(1u);
    goto LABEL_79;
  }
  int64_t v18 = a2 - a1;
  if (a2 - a1 == 0x8000000000000000 && v17 == -1) {
    goto LABEL_77;
  }
  int64_t v20 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v17 == -1) {
    goto LABEL_78;
  }
  unint64_t v87 = a1;
  uint64_t v22 = v18 / v17;
  uint64_t v23 = v20 / v17;
  uint64_t v79 = v17;
  if (v18 / v17 < v20 / v17)
  {
    unint64_t v24 = v87;
    sub_100046480(v87, v18 / v17, a4);
    uint64_t v25 = (char *)(a4 + v22 * v17);
    if (v22 * v17 < 1 || a2 >= a3)
    {
      a2 = v24;
      goto LABEL_71;
    }
    unint64_t v85 = a4 + v22 * v17;
    unint64_t v86 = a3;
    uint64_t v49 = *(char **)(v12 + 16);
    uint64_t v75 = (void (**)(char *, uint64_t))(v8 + 8);
    uint64_t v76 = v49;
    uint64_t v78 = v12 + 16;
    uint64_t v74 = v12 + 8;
    uint64_t v50 = v80;
    uint64_t v51 = v81;
    while (1)
    {
      unint64_t v77 = a2;
      unint64_t v52 = a2;
      uint64_t v53 = v88;
      uint64_t v54 = v76;
      ((void (*)(char *, unint64_t, uint64_t))v76)(v50, v52, v88);
      ((void (*)(char *, unint64_t, uint64_t))v54)(v51, a4, v53);
      uint64_t v55 = v82;
      sub_100129B90();
      uint64_t v56 = v83;
      sub_100129B90();
      char v57 = sub_100129270();
      unint64_t v58 = a4;
      uint64_t v59 = *v75;
      uint64_t v60 = v56;
      uint64_t v61 = v84;
      (*v75)(v60, v84);
      v59(v55, v61);
      uint64_t v62 = *(void (**)(char *, uint64_t))v74;
      (*(void (**)(char *, uint64_t))v74)(v51, v53);
      v62(v50, v53);
      if (v57)
      {
        uint64_t v17 = v79;
        a2 = v77 + v79;
        unint64_t v63 = v87;
        if (v87 < v77 || v87 >= a2) {
          goto LABEL_60;
        }
        if (v87 != v77) {
          goto LABEL_64;
        }
      }
      else
      {
        a2 = v77;
        uint64_t v17 = v79;
        a4 += v79;
        unint64_t v63 = v87;
        if (v87 < v58 || v87 >= a4)
        {
LABEL_60:
          swift_arrayInitWithTakeFrontToBack();
          goto LABEL_65;
        }
        if (v87 != v58) {
LABEL_64:
        }
          swift_arrayInitWithTakeBackToFront();
      }
LABEL_65:
      uint64_t v25 = (char *)v85;
      unint64_t v87 = v63 + v17;
      if (a4 >= v85 || a2 >= v86)
      {
        a2 = v87;
        goto LABEL_71;
      }
    }
  }
  sub_100046480(a2, v20 / v17, a4);
  uint64_t v25 = (char *)(a4 + v23 * v17);
  if (v23 * v17 >= 1 && v87 < a2)
  {
    uint64_t v74 = -v17;
    uint64_t v28 = *(void (**)(char *))(v12 + 16);
    uint64_t v72 = (void (**)(char *, uint64_t))(v8 + 8);
    uint64_t v73 = v28;
    uint64_t v78 = v12 + 16;
    unint64_t v70 = a4;
    uint64_t v71 = (void (**)(char *, uint64_t))(v12 + 8);
    uint64_t v29 = v80;
    uint64_t v30 = v81;
    do
    {
      uint64_t v31 = v74;
      unint64_t v85 = (unint64_t)v25;
      unint64_t v86 = a3 + v74;
      uint64_t v76 = &v25[v74];
      unint64_t v77 = a3;
      uint64_t v32 = v88;
      uint64_t v33 = v73;
      v73(v29);
      uint64_t v75 = (void (**)(char *, uint64_t))(a2 + v31);
      v33(v30);
      unint64_t v34 = a2;
      Swift::Int v35 = v82;
      sub_100129B90();
      uint64_t v36 = v83;
      sub_100129B90();
      char v37 = sub_100129270();
      uint64_t v38 = *v72;
      uint64_t v39 = v36;
      uint64_t v40 = v84;
      (*v72)(v39, v84);
      v38(v35, v40);
      uint64_t v41 = *v71;
      (*v71)(v30, v32);
      v41(v29, v32);
      if (v37)
      {
        uint64_t v42 = (char *)v85;
        a3 = v86;
        if (v77 < v34 || v86 >= v34)
        {
          a2 = (unint64_t)v75;
          swift_arrayInitWithTakeFrontToBack();
          a4 = v70;
          unint64_t v44 = v87;
          uint64_t v17 = v79;
        }
        else
        {
          unint64_t v44 = v87;
          uint64_t v17 = v79;
          a2 = (unint64_t)v75;
          if (v77 != v34) {
            swift_arrayInitWithTakeBackToFront();
          }
          a4 = v70;
        }
        uint64_t v25 = v42;
      }
      else
      {
        a3 = v86;
        BOOL v45 = v77 < v85 || v86 >= v85;
        a2 = v34;
        if (v45)
        {
          uint64_t v46 = v76;
          swift_arrayInitWithTakeFrontToBack();
          uint64_t v25 = v46;
          a4 = v70;
          unint64_t v44 = v87;
          uint64_t v17 = v79;
        }
        else
        {
          uint64_t v17 = v79;
          if (v77 == v85)
          {
            uint64_t v25 = v76;
          }
          else
          {
            Swift::Int v47 = v76;
            swift_arrayInitWithTakeBackToFront();
            uint64_t v25 = v47;
          }
          a4 = v70;
          unint64_t v44 = v87;
        }
      }
    }
    while ((unint64_t)v25 > a4 && a2 > v44);
  }
LABEL_71:
  uint64_t v67 = &v25[-a4];
  if (v17 != -1 || v67 != (char *)0x8000000000000000)
  {
    sub_100046480(a4, (uint64_t)v67 / v17, a2);
    return;
  }
LABEL_79:
  __break(1u);
}

char *sub_100011D04(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1000053D8(&qword_10016B3F8);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 16);
  }
  else
  {
    uint64_t v10 = (char *)&_swiftEmptyArrayStorage;
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || &v13[16 * v8] <= v12) {
      memmove(v12, v13, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v12, v13, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_100011DFC(uint64_t a1)
{
  return sub_100011D04(0, *(void *)(a1 + 16), 0, (char *)a1);
}

size_t sub_100011E10(uint64_t a1)
{
  return sub_1000EAF30(0, *(void *)(a1 + 16), 0, a1);
}

unint64_t sub_100011E28()
{
  unint64_t result = qword_10016B328;
  if (!qword_10016B328)
  {
    sub_100129300();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016B328);
  }
  return result;
}

uint64_t sub_100011E78(uint64_t a1, uint64_t *a2)
{
  sub_1000053D8(a2);
  sub_10000B424();
  v3();
  return a1;
}

uint64_t sub_100011ED0()
{
  return *(void *)(v0 - 184);
}

void sub_100011EF0()
{
  *(void *)(v1 - 256) = v0;
}

uint64_t sub_100011F00()
{
  return *(void *)(v0 - 296);
}

uint64_t sub_100011F28(uint64_t a1)
{
  return _s13WeatherWidget20WeatherDataViewModelOwet_0(a1, 1, v1);
}

uint64_t sub_100011F48()
{
  return *(void *)(v0 - 88);
}

uint64_t sub_100011FB8()
{
  return v0;
}

uint64_t sub_100011FF8()
{
  return v0;
}

BOOL sub_100012010@<W0>(unint64_t a1@<X8>)
{
  return a1 > 1;
}

uint64_t sub_100012030(uint64_t a1)
{
  return _s13WeatherWidget20WeatherDataViewModelOwst_0(v1, 1, 1, a1);
}

uint64_t sub_100012050@<X0>(uint64_t a1@<X8>)
{
  return _s13WeatherWidget20WeatherDataViewModelOwst_0(v1 + a1, 1, 1, v2);
}

uint64_t sub_100012070()
{
  return v0;
}

void sub_100012084(uint64_t a1@<X8>)
{
  *(void *)(v1 - 256) = a1;
}

void sub_100012098(uint64_t a1@<X8>)
{
  *(void *)(v1 - 256) = a1;
}

uint64_t sub_1000120B0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v43 = a1;
  uint64_t v2 = sub_100129ED0();
  __chkstk_darwin(v2 - 8);
  sub_10000DC50();
  uint64_t v42 = v4 - v3;
  uint64_t v5 = sub_1000053D8(&qword_10016B408);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v42 - v9;
  type metadata accessor for AggregateWeatherViewModel(0);
  sub_10000B3FC();
  __chkstk_darwin(v11);
  sub_10000DC50();
  uint64_t v14 = v13 - v12;
  type metadata accessor for WeatherDataViewModel();
  sub_10000B3FC();
  uint64_t v16 = __chkstk_darwin(v15);
  int64_t v18 = (char *)&v42 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  int64_t v20 = (char *)&v42 - v19;
  type metadata accessor for ForecastEntry.Model(0);
  sub_10000B3FC();
  __chkstk_darwin(v21);
  sub_10000DC50();
  unint64_t v24 = (unsigned __int8 *)(v23 - v22);
  uint64_t v25 = type metadata accessor for ForecastEntry(0);
  sub_100012588(v1 + *(int *)(v25 + 28), (uint64_t)v24, (void (*)(void))type metadata accessor for ForecastEntry.Model);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    int v32 = *v24;
    uint64_t v31 = sub_10012BFE0();
    if (!v32)
    {
      uint64_t v33 = v43;
      uint64_t v34 = 2;
      return _s13WeatherWidget20WeatherDataViewModelOwst_0(v33, v34, 2, v31);
    }
    goto LABEL_9;
  }
  sub_1000125E8((uint64_t)v24, (uint64_t)v20, (void (*)(void))type metadata accessor for WeatherDataViewModel);
  sub_100012588((uint64_t)v20, (uint64_t)v18, (void (*)(void))type metadata accessor for WeatherDataViewModel);
  if (swift_getEnumCaseMultiPayload())
  {
    sub_100012710((uint64_t)v18, (void (*)(void))type metadata accessor for WeatherDataViewModel);
    if (qword_10016AE28 != -1) {
      swift_once();
    }
    uint64_t v26 = sub_10012AB60();
    sub_10000D7A4(v26, (uint64_t)qword_100181C40);
    uint64_t v27 = sub_10012AB40();
    os_log_type_t v28 = sub_10012CD40();
    if (os_log_type_enabled(v27, v28))
    {
      *(_WORD *)swift_slowAlloc() = 0;
      sub_100012768((void *)&_mh_execute_header, v29, v30, "Expected aggregate weather but got instant or sunrise/sunset");
      swift_slowDealloc();
    }

    sub_100012710((uint64_t)v20, (void (*)(void))type metadata accessor for WeatherDataViewModel);
    uint64_t v31 = sub_10012BFE0();
LABEL_9:
    uint64_t v33 = v43;
    uint64_t v34 = 1;
    return _s13WeatherWidget20WeatherDataViewModelOwst_0(v33, v34, 2, v31);
  }
  sub_1000125E8((uint64_t)v18, v14, (void (*)(void))type metadata accessor for AggregateWeatherViewModel);
  if (qword_10016AE28 != -1) {
    swift_once();
  }
  uint64_t v35 = sub_10012AB60();
  sub_10000D7A4(v35, (uint64_t)qword_100181C40);
  uint64_t v36 = sub_10012AB40();
  os_log_type_t v37 = sub_10012CD60();
  if (os_log_type_enabled(v36, v37))
  {
    *(_WORD *)swift_slowAlloc() = 0;
    sub_100012768((void *)&_mh_execute_header, v38, v39, "Making Moon complication view model entry from aggregate weather");
    swift_slowDealloc();
  }

  sub_100064138((uint64_t)v10);
  sub_100012648((uint64_t)v10, (uint64_t)v8);
  sub_10012A5F0();
  sub_100129EC0();
  uint64_t v40 = v43;
  sub_10012BFD0();
  sub_1000126B0((uint64_t)v10);
  sub_100012710(v14, (void (*)(void))type metadata accessor for AggregateWeatherViewModel);
  sub_100012710((uint64_t)v20, (void (*)(void))type metadata accessor for WeatherDataViewModel);
  uint64_t v31 = sub_10012BFE0();
  uint64_t v33 = v40;
  uint64_t v34 = 0;
  return _s13WeatherWidget20WeatherDataViewModelOwst_0(v33, v34, 2, v31);
}

uint64_t sub_100012588(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_10000B3FC();
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(a2, a1);
  return a2;
}

uint64_t sub_1000125E8(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_10000B3FC();
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(a2, a1);
  return a2;
}

uint64_t sub_100012648(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000053D8(&qword_10016B408);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000126B0(uint64_t a1)
{
  uint64_t v2 = sub_1000053D8(&qword_10016B408);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100012710(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_10000B3FC();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

void sub_100012768(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v5, v4, a4, v6, 2u);
}

uint64_t *sub_100012788(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    uint64_t v9 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1000053D8(&qword_10016B410);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_10012C800();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v10 = *(int *)(a3 + 20);
    uint64_t v98 = a1;
    uint64_t v11 = (char *)a1 + v10;
    uint64_t v12 = (char *)a2 + v10;
    uint64_t v13 = sub_100129300();
    uint64_t v96 = *(void (**)(void, void))(*(void *)(v13 - 8) + 16);
    uint64_t v97 = v13;
    v96(v11, v12);
    uint64_t v14 = type metadata accessor for ForecastEntry(0);
    uint64_t v15 = *(int *)(v14 + 20);
    uint64_t v16 = &v11[v15];
    uint64_t v17 = &v12[v15];
    uint64_t v18 = sub_10012C920();
    if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v17, 1, v18))
    {
      uint64_t v19 = sub_1000053D8(&qword_10016B418);
      memcpy(v16, v17, *(void *)(*(void *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
      _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v16, 0, 1, v18);
    }
    uint64_t v99 = v14;
    uint64_t v20 = *(int *)(v14 + 24);
    uint64_t v21 = &v11[v20];
    uint64_t v22 = &v12[v20];
    uint64_t v23 = *(void *)&v12[v20 + 8];
    *(void *)uint64_t v21 = *(void *)&v12[v20];
    *((void *)v21 + 1) = v23;
    uint64_t v24 = *(void *)&v12[v20 + 24];
    *((void *)v21 + 2) = *(void *)&v12[v20 + 16];
    *((void *)v21 + 3) = v24;
    uint64_t v25 = *(void *)&v12[v20 + 40];
    *((void *)v21 + 4) = *(void *)&v12[v20 + 32];
    *((void *)v21 + 5) = v25;
    *((_DWORD *)v21 + 12) = *(_DWORD *)&v12[v20 + 48];
    uint64_t v26 = type metadata accessor for WidgetContext();
    uint64_t v27 = *(int *)(v26 + 40);
    os_log_type_t v28 = &v21[v27];
    uint64_t v29 = &v22[v27];
    uint64_t v30 = sub_100129220();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v29, 1, v30))
    {
      uint64_t v31 = sub_1000053D8(&qword_10016B420);
      memcpy(v28, v29, *(void *)(*(void *)(v31 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 16))(v28, v29, v30);
      _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v28, 0, 1, v30);
    }
    uint64_t v32 = *(int *)(v26 + 44);
    uint64_t v33 = &v21[v32];
    uint64_t v34 = &v22[v32];
    *(void *)uint64_t v33 = *(void *)v34;
    v33[8] = v34[8];
    uint64_t v35 = *(int *)(v99 + 28);
    uint64_t v36 = &v11[v35];
    os_log_type_t v37 = &v12[v35];
    uint64_t v38 = type metadata accessor for ForecastEntry.Model(0);
    swift_bridgeObjectRetain();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      type metadata accessor for WeatherDataViewModel();
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        uint64_t v50 = sub_10012BE90();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v50 - 8) + 16))(v36, v37, v50);
      }
      else
      {
        if (EnumCaseMultiPayload != 1)
        {
          uint64_t v95 = v30;
          uint64_t v51 = sub_100129330();
          unint64_t v52 = (void (**)(void *, const void *))(*(void *)(v51 - 8) + 16);
          uint64_t v93 = *v52;
          uint64_t v94 = v51;
          (*v52)(v36, v37);
          uint64_t v53 = (int *)type metadata accessor for AggregateWeatherViewModel(0);
          uint64_t v54 = v53[5];
          uint64_t v55 = &v36[v54];
          uint64_t v56 = &v37[v54];
          uint64_t v57 = sub_10012A6B0();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v57 - 8) + 16))(v55, v56, v57);
          uint64_t v58 = v53[6];
          uint64_t v59 = &v36[v58];
          uint64_t v60 = &v37[v58];
          uint64_t v61 = sub_10012C250();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v61 - 8) + 16))(v59, v60, v61);
          *(void *)&v36[v53[7]] = *(void *)&v37[v53[7]];
          *(void *)&v36[v53[8]] = *(void *)&v37[v53[8]];
          uint64_t v62 = v53[9];
          unint64_t v63 = &v36[v62];
          uint64_t v64 = &v37[v62];
          int v65 = (int *)type metadata accessor for AirQualityViewModel();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v64, 1, (uint64_t)v65))
          {
            uint64_t v66 = sub_1000053D8(&qword_10016B428);
            memcpy(v63, v64, *(void *)(*(void *)(v66 - 8) + 64));
          }
          else
          {
            ((void (*)(char *, char *, uint64_t))v93)(v63, v64, v94);
            ((void (*)(char *, char *, uint64_t))v96)(&v63[v65[5]], &v64[v65[5]], v97);
            *(void *)&v63[v65[6]] = *(void *)&v64[v65[6]];
            uint64_t v67 = v65[7];
            uint64_t v68 = &v63[v67];
            uint64_t v69 = &v64[v67];
            uint64_t v70 = sub_100129B70();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v70 - 8) + 16))(v68, v69, v70);
            uint64_t v71 = v65[8];
            uint64_t v72 = &v63[v71];
            uint64_t v73 = &v64[v71];
            uint64_t v74 = sub_100129C50();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v74 - 8) + 16))(v72, v73, v74);
            _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v63, 0, 1, (uint64_t)v65);
          }
          uint64_t v75 = v53[10];
          uint64_t v76 = &v36[v75];
          unint64_t v77 = &v37[v75];
          uint64_t v78 = sub_10012C6B0();
          if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v77, 1, v78))
          {
            uint64_t v79 = sub_1000053D8(&qword_10016B430);
            memcpy(v76, v77, *(void *)(*(void *)(v79 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v78 - 8) + 16))(v76, v77, v78);
            _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v76, 0, 1, v78);
          }
          *(void *)&v36[v53[11]] = *(void *)&v37[v53[11]];
          uint64_t v80 = v53[12];
          uint64_t v81 = &v36[v80];
          uint64_t v82 = &v37[v80];
          *(void *)uint64_t v81 = *(void *)v82;
          *((_WORD *)v81 + 4) = *((_WORD *)v82 + 4);
          uint64_t v83 = v53[13];
          uint64_t v84 = &v36[v83];
          unint64_t v85 = &v37[v83];
          swift_bridgeObjectRetain();
          if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v85, 1, v95))
          {
            uint64_t v86 = sub_1000053D8(&qword_10016B420);
            memcpy(v84, v85, *(void *)(*(void *)(v86 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v95 - 8) + 16))(v84, v85, v95);
            _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v84, 0, 1, v95);
          }
          uint64_t v87 = v53[14];
          uint64_t v88 = &v36[v87];
          uint64_t v89 = &v37[v87];
          uint64_t v90 = type metadata accessor for AggregateWeatherViewModel.SunEvent(0);
          if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v89, 1, v90))
          {
            uint64_t v91 = sub_1000053D8(&qword_10016B438);
            memcpy(v88, v89, *(void *)(*(void *)(v91 - 8) + 64));
          }
          else
          {
            swift_getEnumCaseMultiPayload();
            ((void (*)(char *, char *, uint64_t))v96)(v88, v89, v97);
            swift_storeEnumTagMultiPayload();
            _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v88, 0, 1, v90);
          }
          uint64_t v9 = v98;
          goto LABEL_32;
        }
        uint64_t v40 = sub_100129330();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v40 - 8) + 16))(v36, v37, v40);
        uint64_t v41 = type metadata accessor for InstantWeatherViewModel();
        uint64_t v42 = *(int *)(v41 + 20);
        uint64_t v43 = &v36[v42];
        unint64_t v44 = &v37[v42];
        uint64_t v45 = sub_10012A6B0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v45 - 8) + 16))(v43, v44, v45);
        uint64_t v46 = *(int *)(v41 + 24);
        Swift::Int v47 = &v36[v46];
        uint64_t v48 = &v37[v46];
        uint64_t v49 = sub_10012C250();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v49 - 8) + 16))(v47, v48, v49);
      }
      uint64_t v9 = v98;
LABEL_32:
      swift_storeEnumTagMultiPayload();
      swift_storeEnumTagMultiPayload();
      return v9;
    }
    memcpy(v36, v37, *(void *)(*(void *)(v38 - 8) + 64));
    return v98;
  }
  return v9;
}

uint64_t sub_100013110(uint64_t a1, uint64_t a2)
{
  sub_1000053D8(&qword_10016B410);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_10012C800();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = sub_100129300();
  uint64_t v43 = *(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
  v43(v5, v6);
  uint64_t v7 = (int *)type metadata accessor for ForecastEntry(0);
  uint64_t v8 = v5 + v7[5];
  uint64_t v9 = sub_10012C920();
  if (!_s13WeatherWidget20WeatherDataViewModelOwet_0(v8, 1, v9)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  }
  uint64_t v10 = v5 + v7[6];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v11 = v10 + *(int *)(type metadata accessor for WidgetContext() + 40);
  uint64_t v12 = sub_100129220();
  if (!_s13WeatherWidget20WeatherDataViewModelOwet_0(v11, 1, v12)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  }
  swift_bridgeObjectRelease();
  uint64_t v13 = v5 + v7[7];
  type metadata accessor for ForecastEntry.Model(0);
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 1)
  {
    type metadata accessor for WeatherDataViewModel();
    uint64_t result = swift_getEnumCaseMultiPayload();
    if (result == 2)
    {
      uint64_t v33 = sub_10012BE90();
      uint64_t v34 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v33 - 8) + 8);
      uint64_t v35 = v33;
      uint64_t v36 = v13;
    }
    else if (result == 1)
    {
      uint64_t v37 = sub_100129330();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v37 - 8) + 8))(v13, v37);
      uint64_t v38 = type metadata accessor for InstantWeatherViewModel();
      uint64_t v39 = v13 + *(int *)(v38 + 20);
      uint64_t v40 = sub_10012A6B0();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v40 - 8) + 8))(v39, v40);
      uint64_t v41 = v13 + *(int *)(v38 + 24);
      uint64_t v42 = sub_10012C250();
      uint64_t v34 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v42 - 8) + 8);
      uint64_t v35 = v42;
      uint64_t v36 = v41;
    }
    else
    {
      if (result) {
        return result;
      }
      uint64_t v15 = sub_100129330();
      uint64_t v16 = *(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8);
      v16(v13, v15);
      uint64_t v17 = (int *)type metadata accessor for AggregateWeatherViewModel(0);
      uint64_t v18 = v13 + v17[5];
      uint64_t v19 = sub_10012A6B0();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v19 - 8) + 8))(v18, v19);
      uint64_t v20 = v13 + v17[6];
      uint64_t v21 = sub_10012C250();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v21 - 8) + 8))(v20, v21);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v22 = v13 + v17[9];
      uint64_t v23 = (int *)type metadata accessor for AirQualityViewModel();
      if (!_s13WeatherWidget20WeatherDataViewModelOwet_0(v22, 1, (uint64_t)v23))
      {
        v16(v22, v15);
        v43(v22 + v23[5], v6);
        uint64_t v24 = v22 + v23[7];
        uint64_t v25 = sub_100129B70();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v25 - 8) + 8))(v24, v25);
        uint64_t v26 = v22 + v23[8];
        uint64_t v27 = sub_100129C50();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v27 - 8) + 8))(v26, v27);
      }
      uint64_t v28 = v13 + v17[10];
      uint64_t v29 = sub_10012C6B0();
      if (!_s13WeatherWidget20WeatherDataViewModelOwet_0(v28, 1, v29)) {
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v29 - 8) + 8))(v28, v29);
      }
      swift_bridgeObjectRelease();
      uint64_t v30 = v13 + v17[13];
      if (!_s13WeatherWidget20WeatherDataViewModelOwet_0(v30, 1, v12)) {
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v30, v12);
      }
      uint64_t v31 = v13 + v17[14];
      uint64_t v32 = type metadata accessor for AggregateWeatherViewModel.SunEvent(0);
      uint64_t result = _s13WeatherWidget20WeatherDataViewModelOwet_0(v31, 1, v32);
      if (result) {
        return result;
      }
      uint64_t v36 = v31;
      uint64_t v35 = v6;
      uint64_t v34 = (uint64_t (*)(uint64_t, uint64_t))v43;
    }
    return v34(v36, v35);
  }
  return result;
}

void *sub_100013704(void *a1, void *a2, uint64_t a3)
{
  sub_1000053D8(&qword_10016B410);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_10012C800();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v97 = a1;
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_100129300();
  uint64_t v95 = *(void (**)(char *, char *))(*(void *)(v10 - 8) + 16);
  uint64_t v96 = v10;
  v95(v8, v9);
  uint64_t v11 = type metadata accessor for ForecastEntry(0);
  uint64_t v12 = *(int *)(v11 + 20);
  uint64_t v13 = &v8[v12];
  uint64_t v14 = &v9[v12];
  uint64_t v15 = sub_10012C920();
  if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v14, 1, v15))
  {
    uint64_t v16 = sub_1000053D8(&qword_10016B418);
    memcpy(v13, v14, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v13, 0, 1, v15);
  }
  uint64_t v98 = v11;
  uint64_t v99 = v9;
  uint64_t v17 = *(int *)(v11 + 24);
  uint64_t v18 = &v8[v17];
  uint64_t v19 = &v9[v17];
  uint64_t v20 = *(void *)&v9[v17 + 8];
  *(void *)uint64_t v18 = *(void *)&v9[v17];
  *((void *)v18 + 1) = v20;
  uint64_t v21 = *(void *)&v9[v17 + 24];
  *((void *)v18 + 2) = *(void *)&v9[v17 + 16];
  *((void *)v18 + 3) = v21;
  uint64_t v22 = *(void *)&v9[v17 + 32];
  uint64_t v23 = *((void *)v19 + 5);
  *((void *)v18 + 4) = v22;
  *((void *)v18 + 5) = v23;
  *((_DWORD *)v18 + 12) = *((_DWORD *)v19 + 12);
  uint64_t v24 = type metadata accessor for WidgetContext();
  uint64_t v25 = *(int *)(v24 + 40);
  uint64_t v26 = &v18[v25];
  uint64_t v27 = &v19[v25];
  uint64_t v28 = sub_100129220();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v27, 1, v28))
  {
    uint64_t v29 = sub_1000053D8(&qword_10016B420);
    memcpy(v26, v27, *(void *)(*(void *)(v29 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 16))(v26, v27, v28);
    _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v26, 0, 1, v28);
  }
  uint64_t v30 = *(int *)(v24 + 44);
  uint64_t v31 = &v18[v30];
  uint64_t v32 = &v19[v30];
  *(void *)uint64_t v31 = *(void *)v32;
  v31[8] = v32[8];
  uint64_t v33 = *(int *)(v98 + 28);
  uint64_t v34 = &v8[v33];
  uint64_t v35 = &v99[v33];
  uint64_t v36 = type metadata accessor for ForecastEntry.Model(0);
  swift_bridgeObjectRetain();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    type metadata accessor for WeatherDataViewModel();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v49 = sub_10012BE90();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v49 - 8) + 16))(v34, v35, v49);
    }
    else
    {
      if (EnumCaseMultiPayload != 1)
      {
        uint64_t v94 = v28;
        uint64_t v50 = sub_100129330();
        uint64_t v51 = (void (**)(void *, const void *))(*(void *)(v50 - 8) + 16);
        uint64_t v92 = *v51;
        uint64_t v93 = v50;
        (*v51)(v34, v35);
        unint64_t v52 = (int *)type metadata accessor for AggregateWeatherViewModel(0);
        uint64_t v53 = v52[5];
        uint64_t v54 = &v34[v53];
        uint64_t v55 = &v35[v53];
        uint64_t v56 = sub_10012A6B0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v56 - 8) + 16))(v54, v55, v56);
        uint64_t v57 = v52[6];
        uint64_t v58 = &v34[v57];
        uint64_t v59 = &v35[v57];
        uint64_t v60 = sub_10012C250();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v60 - 8) + 16))(v58, v59, v60);
        *(void *)&v34[v52[7]] = *(void *)&v35[v52[7]];
        *(void *)&v34[v52[8]] = *(void *)&v35[v52[8]];
        uint64_t v61 = v52[9];
        uint64_t v62 = &v34[v61];
        unint64_t v63 = &v35[v61];
        uint64_t v64 = (int *)type metadata accessor for AirQualityViewModel();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v63, 1, (uint64_t)v64))
        {
          uint64_t v65 = sub_1000053D8(&qword_10016B428);
          memcpy(v62, v63, *(void *)(*(void *)(v65 - 8) + 64));
        }
        else
        {
          ((void (*)(char *, char *, uint64_t))v92)(v62, v63, v93);
          ((void (*)(char *, char *, uint64_t))v95)(&v62[v64[5]], &v63[v64[5]], v96);
          *(void *)&v62[v64[6]] = *(void *)&v63[v64[6]];
          uint64_t v66 = v64[7];
          uint64_t v67 = &v62[v66];
          uint64_t v68 = &v63[v66];
          uint64_t v69 = sub_100129B70();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v69 - 8) + 16))(v67, v68, v69);
          uint64_t v70 = v64[8];
          uint64_t v71 = &v62[v70];
          uint64_t v72 = &v63[v70];
          uint64_t v73 = sub_100129C50();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v73 - 8) + 16))(v71, v72, v73);
          _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v62, 0, 1, (uint64_t)v64);
        }
        uint64_t v74 = v52[10];
        uint64_t v75 = &v34[v74];
        uint64_t v76 = &v35[v74];
        uint64_t v77 = sub_10012C6B0();
        if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v76, 1, v77))
        {
          uint64_t v78 = sub_1000053D8(&qword_10016B430);
          memcpy(v75, v76, *(void *)(*(void *)(v78 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v77 - 8) + 16))(v75, v76, v77);
          _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v75, 0, 1, v77);
        }
        *(void *)&v34[v52[11]] = *(void *)&v35[v52[11]];
        uint64_t v79 = v52[12];
        uint64_t v80 = &v34[v79];
        uint64_t v81 = &v35[v79];
        *(void *)uint64_t v80 = *(void *)v81;
        *((_WORD *)v80 + 4) = *((_WORD *)v81 + 4);
        uint64_t v82 = v52[13];
        uint64_t v83 = &v34[v82];
        uint64_t v84 = &v35[v82];
        swift_bridgeObjectRetain();
        if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v84, 1, v94))
        {
          uint64_t v85 = sub_1000053D8(&qword_10016B420);
          memcpy(v83, v84, *(void *)(*(void *)(v85 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v94 - 8) + 16))(v83, v84, v94);
          _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v83, 0, 1, v94);
        }
        uint64_t v86 = v52[14];
        uint64_t v87 = &v34[v86];
        uint64_t v88 = &v35[v86];
        uint64_t v89 = type metadata accessor for AggregateWeatherViewModel.SunEvent(0);
        if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v88, 1, v89))
        {
          uint64_t v90 = sub_1000053D8(&qword_10016B438);
          memcpy(v87, v88, *(void *)(*(void *)(v90 - 8) + 64));
        }
        else
        {
          swift_getEnumCaseMultiPayload();
          ((void (*)(char *, char *, uint64_t))v95)(v87, v88, v96);
          swift_storeEnumTagMultiPayload();
          _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v87, 0, 1, v89);
        }
        uint64_t v48 = v97;
        goto LABEL_30;
      }
      uint64_t v38 = sub_100129330();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 16))(v34, v35, v38);
      uint64_t v39 = type metadata accessor for InstantWeatherViewModel();
      uint64_t v40 = *(int *)(v39 + 20);
      uint64_t v41 = &v34[v40];
      uint64_t v42 = &v35[v40];
      uint64_t v43 = sub_10012A6B0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 16))(v41, v42, v43);
      uint64_t v44 = *(int *)(v39 + 24);
      uint64_t v45 = &v34[v44];
      uint64_t v46 = &v35[v44];
      uint64_t v47 = sub_10012C250();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v47 - 8) + 16))(v45, v46, v47);
    }
    uint64_t v48 = v97;
LABEL_30:
    swift_storeEnumTagMultiPayload();
    swift_storeEnumTagMultiPayload();
    return v48;
  }
  memcpy(v34, v35, *(void *)(*(void *)(v36 - 8) + 64));
  return v97;
}

void *sub_100014038(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_100016D10((uint64_t)a1, &qword_10016B410);
    sub_1000053D8(&qword_10016B410);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_10012C800();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_100129300();
  uint64_t v97 = *(void *)(v10 - 8);
  uint64_t v98 = v10;
  (*(void (**)(char *, char *))(v97 + 24))(v8, v9);
  uint64_t v11 = type metadata accessor for ForecastEntry(0);
  uint64_t v12 = *(int *)(v11 + 20);
  uint64_t v13 = &v8[v12];
  uint64_t v14 = &v9[v12];
  uint64_t v15 = sub_10012C920();
  int v16 = _s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v13, 1, v15);
  int v17 = _s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v14, 1, v15);
  uint64_t v100 = a1;
  if (v16)
  {
    if (!v17)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
      _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v13, 0, 1, v15);
      goto LABEL_12;
    }
    goto LABEL_11;
  }
  uint64_t v18 = *(void *)(v15 - 8);
  if (v17)
  {
    (*(void (**)(char *, uint64_t))(v18 + 8))(v13, v15);
LABEL_11:
    uint64_t v19 = sub_1000053D8(&qword_10016B418);
    memcpy(v13, v14, *(void *)(*(void *)(v19 - 8) + 64));
    goto LABEL_12;
  }
  (*(void (**)(char *, char *, uint64_t))(v18 + 24))(v13, v14, v15);
LABEL_12:
  uint64_t v99 = v11;
  uint64_t v20 = *(int *)(v11 + 24);
  uint64_t v21 = &v8[v20];
  uint64_t v22 = &v9[v20];
  *(void *)uint64_t v21 = *(void *)&v9[v20];
  *((void *)v21 + 1) = *(void *)&v9[v20 + 8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v21 + 2) = *((void *)v22 + 2);
  *((void *)v21 + 3) = *((void *)v22 + 3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v21 + 4) = *((void *)v22 + 4);
  *((void *)v21 + 5) = *((void *)v22 + 5);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v21[48] = v22[48];
  v21[49] = v22[49];
  v21[50] = v22[50];
  v21[51] = v22[51];
  uint64_t v23 = type metadata accessor for WidgetContext();
  uint64_t v24 = *(int *)(v23 + 40);
  uint64_t v25 = &v21[v24];
  uint64_t v26 = &v22[v24];
  uint64_t v27 = sub_100129220();
  int v28 = _s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v25, 1, v27);
  int v29 = _s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v26, 1, v27);
  if (v28)
  {
    if (!v29)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
      _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v25, 0, 1, v27);
      goto LABEL_18;
    }
    goto LABEL_17;
  }
  uint64_t v30 = *(void *)(v27 - 8);
  if (v29)
  {
    (*(void (**)(char *, uint64_t))(v30 + 8))(v25, v27);
LABEL_17:
    uint64_t v31 = sub_1000053D8(&qword_10016B420);
    memcpy(v25, v26, *(void *)(*(void *)(v31 - 8) + 64));
    goto LABEL_18;
  }
  (*(void (**)(char *, char *, uint64_t))(v30 + 24))(v25, v26, v27);
LABEL_18:
  uint64_t v32 = *(int *)(v23 + 44);
  uint64_t v33 = &v21[v32];
  uint64_t v34 = &v22[v32];
  *(void *)uint64_t v33 = *(void *)v34;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v33[8] = v34[8];
  uint64_t v35 = v100;
  if (v100 != a2)
  {
    uint64_t v36 = *(int *)(v99 + 28);
    uint64_t v37 = &v8[v36];
    uint64_t v38 = &v9[v36];
    sub_100014B0C((uint64_t)&v8[v36]);
    uint64_t v39 = type metadata accessor for ForecastEntry.Model(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      type metadata accessor for WeatherDataViewModel();
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        uint64_t v51 = sub_10012BE90();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v51 - 8) + 16))(v37, v38, v51);
      }
      else if (EnumCaseMultiPayload == 1)
      {
        uint64_t v41 = sub_100129330();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v41 - 8) + 16))(v37, v38, v41);
        uint64_t v42 = type metadata accessor for InstantWeatherViewModel();
        uint64_t v43 = *(int *)(v42 + 20);
        uint64_t v44 = &v37[v43];
        uint64_t v45 = &v38[v43];
        uint64_t v46 = sub_10012A6B0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v46 - 8) + 16))(v44, v45, v46);
        uint64_t v47 = *(int *)(v42 + 24);
        uint64_t v48 = &v37[v47];
        uint64_t v49 = &v38[v47];
        uint64_t v50 = sub_10012C250();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v50 - 8) + 16))(v48, v49, v50);
      }
      else
      {
        uint64_t v52 = sub_100129330();
        uint64_t v95 = *(void (**)(char *, char *))(*(void *)(v52 - 8) + 16);
        uint64_t v96 = v52;
        v95(v37, v38);
        uint64_t v53 = (int *)type metadata accessor for AggregateWeatherViewModel(0);
        uint64_t v54 = v53[5];
        uint64_t v55 = &v37[v54];
        uint64_t v56 = &v38[v54];
        uint64_t v57 = sub_10012A6B0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v57 - 8) + 16))(v55, v56, v57);
        uint64_t v58 = v53[6];
        uint64_t v59 = &v37[v58];
        uint64_t v60 = &v38[v58];
        uint64_t v61 = sub_10012C250();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v61 - 8) + 16))(v59, v60, v61);
        *(void *)&v37[v53[7]] = *(void *)&v38[v53[7]];
        *(void *)&v37[v53[8]] = *(void *)&v38[v53[8]];
        uint64_t v62 = v53[9];
        unint64_t v63 = &v37[v62];
        uint64_t v64 = &v38[v62];
        uint64_t v65 = (int *)type metadata accessor for AirQualityViewModel();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v64, 1, (uint64_t)v65))
        {
          uint64_t v66 = sub_1000053D8(&qword_10016B428);
          memcpy(v63, v64, *(void *)(*(void *)(v66 - 8) + 64));
        }
        else
        {
          uint64_t v67 = (uint64_t)v63;
          ((void (*)(char *, char *, uint64_t))v95)(v63, v64, v96);
          (*(void (**)(char *, char *, uint64_t))(v97 + 16))(&v63[v65[5]], &v64[v65[5]], v98);
          *(void *)&v63[v65[6]] = *(void *)&v64[v65[6]];
          uint64_t v68 = v65[7];
          uint64_t v69 = &v63[v68];
          uint64_t v70 = &v64[v68];
          uint64_t v71 = sub_100129B70();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v71 - 8) + 16))(v69, v70, v71);
          uint64_t v72 = v65[8];
          uint64_t v73 = v67 + v72;
          uint64_t v74 = &v64[v72];
          uint64_t v75 = sub_100129C50();
          (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v75 - 8) + 16))(v73, v74, v75);
          _s13WeatherWidget20WeatherDataViewModelOwst_0(v67, 0, 1, (uint64_t)v65);
        }
        uint64_t v76 = v53[10];
        uint64_t v77 = &v37[v76];
        uint64_t v78 = &v38[v76];
        uint64_t v79 = sub_10012C6B0();
        uint64_t v35 = v100;
        if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v78, 1, v79))
        {
          uint64_t v80 = sub_1000053D8(&qword_10016B430);
          memcpy(v77, v78, *(void *)(*(void *)(v80 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v79 - 8) + 16))(v77, v78, v79);
          _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v77, 0, 1, v79);
        }
        *(void *)&v37[v53[11]] = *(void *)&v38[v53[11]];
        uint64_t v81 = v53[12];
        uint64_t v82 = &v37[v81];
        uint64_t v83 = &v38[v81];
        uint64_t v84 = *(void *)v83;
        *((_WORD *)v82 + 4) = *((_WORD *)v83 + 4);
        *(void *)uint64_t v82 = v84;
        uint64_t v85 = v53[13];
        uint64_t v86 = &v37[v85];
        uint64_t v87 = &v38[v85];
        swift_bridgeObjectRetain();
        if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v87, 1, v27))
        {
          uint64_t v88 = sub_1000053D8(&qword_10016B420);
          memcpy(v86, v87, *(void *)(*(void *)(v88 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16))(v86, v87, v27);
          _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v86, 0, 1, v27);
        }
        uint64_t v89 = v53[14];
        uint64_t v90 = &v37[v89];
        uint64_t v91 = &v38[v89];
        uint64_t v92 = type metadata accessor for AggregateWeatherViewModel.SunEvent(0);
        if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v91, 1, v92))
        {
          uint64_t v93 = sub_1000053D8(&qword_10016B438);
          memcpy(v90, v91, *(void *)(*(void *)(v93 - 8) + 64));
        }
        else
        {
          swift_getEnumCaseMultiPayload();
          (*(void (**)(char *, char *, uint64_t))(v97 + 16))(v90, v91, v98);
          swift_storeEnumTagMultiPayload();
          _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v90, 0, 1, v92);
        }
      }
      swift_storeEnumTagMultiPayload();
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v37, v38, *(void *)(*(void *)(v39 - 8) + 64));
    }
  }
  return v35;
}

uint64_t sub_100014B0C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ForecastEntry.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

char *sub_100014B68(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_1000053D8(&qword_10016B410);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_10012C800();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = sub_100129300();
  uint64_t v89 = *(void (**)(char *, char *))(*(void *)(v11 - 8) + 32);
  uint64_t v90 = v11;
  v89(v9, v10);
  uint64_t v12 = (int *)type metadata accessor for ForecastEntry(0);
  uint64_t v13 = v12[5];
  uint64_t v14 = &v9[v13];
  uint64_t v15 = &v10[v13];
  uint64_t v16 = sub_10012C920();
  if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v15, 1, v16))
  {
    uint64_t v17 = sub_1000053D8(&qword_10016B418);
    memcpy(v14, v15, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v14, v15, v16);
    _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v14, 0, 1, v16);
  }
  uint64_t v18 = v12[6];
  uint64_t v19 = &v9[v18];
  uint64_t v20 = &v10[v18];
  long long v21 = *(_OWORD *)&v10[v18 + 16];
  *(_OWORD *)uint64_t v19 = *(_OWORD *)&v10[v18];
  *((_OWORD *)v19 + 1) = v21;
  *((_OWORD *)v19 + 2) = *(_OWORD *)&v10[v18 + 32];
  *((_DWORD *)v19 + 12) = *(_DWORD *)&v10[v18 + 48];
  uint64_t v22 = type metadata accessor for WidgetContext();
  uint64_t v23 = *(int *)(v22 + 40);
  uint64_t v24 = &v19[v23];
  uint64_t v25 = &v20[v23];
  uint64_t v26 = sub_100129220();
  if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v25, 1, v26))
  {
    uint64_t v27 = sub_1000053D8(&qword_10016B420);
    memcpy(v24, v25, *(void *)(*(void *)(v27 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 32))(v24, v25, v26);
    _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v24, 0, 1, v26);
  }
  uint64_t v28 = *(int *)(v22 + 44);
  int v29 = &v19[v28];
  uint64_t v30 = &v20[v28];
  *(void *)int v29 = *(void *)v30;
  v29[8] = v30[8];
  uint64_t v31 = v12[7];
  uint64_t v32 = &v9[v31];
  uint64_t v33 = &v10[v31];
  uint64_t v34 = type metadata accessor for ForecastEntry.Model(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    type metadata accessor for WeatherDataViewModel();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v46 = sub_10012BE90();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v46 - 8) + 32))(v32, v33, v46);
    }
    else if (EnumCaseMultiPayload == 1)
    {
      uint64_t v36 = sub_100129330();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 32))(v32, v33, v36);
      uint64_t v37 = type metadata accessor for InstantWeatherViewModel();
      uint64_t v38 = *(int *)(v37 + 20);
      uint64_t v39 = &v32[v38];
      uint64_t v40 = &v33[v38];
      uint64_t v41 = sub_10012A6B0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v41 - 8) + 32))(v39, v40, v41);
      uint64_t v42 = *(int *)(v37 + 24);
      uint64_t v43 = &v32[v42];
      uint64_t v44 = &v33[v42];
      uint64_t v45 = sub_10012C250();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v45 - 8) + 32))(v43, v44, v45);
    }
    else
    {
      uint64_t v86 = sub_100129330();
      uint64_t v87 = *(void (**)(char *, char *))(*(void *)(v86 - 8) + 32);
      v87(v32, v33);
      uint64_t v47 = (int *)type metadata accessor for AggregateWeatherViewModel(0);
      uint64_t v48 = v47[5];
      uint64_t v49 = &v32[v48];
      uint64_t v50 = &v33[v48];
      uint64_t v51 = sub_10012A6B0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v51 - 8) + 32))(v49, v50, v51);
      uint64_t v52 = v47[6];
      uint64_t v53 = &v32[v52];
      uint64_t v54 = &v33[v52];
      uint64_t v55 = sub_10012C250();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v55 - 8) + 32))(v53, v54, v55);
      *(void *)&v32[v47[7]] = *(void *)&v33[v47[7]];
      *(void *)&v32[v47[8]] = *(void *)&v33[v47[8]];
      uint64_t v56 = v47[9];
      uint64_t v57 = &v32[v56];
      uint64_t v58 = &v33[v56];
      uint64_t v59 = (int *)type metadata accessor for AirQualityViewModel();
      if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v58, 1, (uint64_t)v59))
      {
        uint64_t v60 = sub_1000053D8(&qword_10016B428);
        memcpy(v57, v58, *(void *)(*(void *)(v60 - 8) + 64));
      }
      else
      {
        ((void (*)(char *, char *, uint64_t))v87)(v57, v58, v86);
        ((void (*)(char *, char *, uint64_t))v89)(&v57[v59[5]], &v58[v59[5]], v90);
        *(void *)&v57[v59[6]] = *(void *)&v58[v59[6]];
        uint64_t v61 = v59[7];
        uint64_t v62 = &v57[v61];
        uint64_t v88 = &v58[v61];
        uint64_t v63 = sub_100129B70();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v63 - 8) + 32))(v62, v88, v63);
        uint64_t v64 = v59[8];
        uint64_t v65 = &v57[v64];
        uint64_t v66 = &v58[v64];
        uint64_t v67 = sub_100129C50();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v67 - 8) + 32))(v65, v66, v67);
        _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v57, 0, 1, (uint64_t)v59);
      }
      uint64_t v68 = v47[10];
      uint64_t v69 = &v32[v68];
      uint64_t v70 = &v33[v68];
      uint64_t v71 = sub_10012C6B0();
      if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v70, 1, v71))
      {
        uint64_t v72 = sub_1000053D8(&qword_10016B430);
        memcpy(v69, v70, *(void *)(*(void *)(v72 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v71 - 8) + 32))(v69, v70, v71);
        _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v69, 0, 1, v71);
      }
      *(void *)&v32[v47[11]] = *(void *)&v33[v47[11]];
      uint64_t v73 = v47[12];
      uint64_t v74 = &v32[v73];
      uint64_t v75 = &v33[v73];
      *(void *)uint64_t v74 = *(void *)v75;
      *((_WORD *)v74 + 4) = *((_WORD *)v75 + 4);
      uint64_t v76 = v47[13];
      uint64_t v77 = &v32[v76];
      uint64_t v78 = &v33[v76];
      if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)&v33[v76], 1, v26))
      {
        uint64_t v79 = sub_1000053D8(&qword_10016B420);
        memcpy(v77, v78, *(void *)(*(void *)(v79 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 32))(v77, v78, v26);
        _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v77, 0, 1, v26);
      }
      uint64_t v80 = v47[14];
      uint64_t v81 = &v32[v80];
      uint64_t v82 = &v33[v80];
      uint64_t v83 = type metadata accessor for AggregateWeatherViewModel.SunEvent(0);
      if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v82, 1, v83))
      {
        uint64_t v84 = sub_1000053D8(&qword_10016B438);
        memcpy(v81, v82, *(void *)(*(void *)(v84 - 8) + 64));
      }
      else
      {
        swift_getEnumCaseMultiPayload();
        ((void (*)(char *, char *, uint64_t))v89)(v81, v82, v90);
        swift_storeEnumTagMultiPayload();
        _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v81, 0, 1, v83);
      }
    }
    swift_storeEnumTagMultiPayload();
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v32, v33, *(void *)(*(void *)(v34 - 8) + 64));
  }
  return a1;
}

char *sub_100015450(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_100016D10((uint64_t)a1, &qword_10016B410);
    uint64_t v6 = sub_1000053D8(&qword_10016B410);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_10012C800();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
  }
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = sub_100129300();
  uint64_t v99 = *(void *)(v11 - 8);
  uint64_t v100 = v11;
  (*(void (**)(char *, char *))(v99 + 40))(v9, v10);
  uint64_t v12 = type metadata accessor for ForecastEntry(0);
  uint64_t v13 = *(int *)(v12 + 20);
  uint64_t v14 = &v9[v13];
  uint64_t v15 = &v10[v13];
  uint64_t v16 = sub_10012C920();
  int v17 = _s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v14, 1, v16);
  int v18 = _s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v15, 1, v16);
  uint64_t v103 = a1;
  if (v17)
  {
    if (!v18)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v14, v15, v16);
      _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v14, 0, 1, v16);
      goto LABEL_11;
    }
    goto LABEL_10;
  }
  uint64_t v19 = *(void *)(v16 - 8);
  if (v18)
  {
    (*(void (**)(char *, uint64_t))(v19 + 8))(v14, v16);
LABEL_10:
    uint64_t v20 = sub_1000053D8(&qword_10016B418);
    memcpy(v14, v15, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_11;
  }
  (*(void (**)(char *, char *, uint64_t))(v19 + 40))(v14, v15, v16);
LABEL_11:
  uint64_t v102 = v12;
  uint64_t v21 = *(int *)(v12 + 24);
  uint64_t v22 = &v9[v21];
  uint64_t v23 = &v10[v21];
  uint64_t v24 = *(void *)&v10[v21 + 8];
  *(void *)uint64_t v22 = *(void *)&v10[v21];
  *((void *)v22 + 1) = v24;
  swift_bridgeObjectRelease();
  uint64_t v25 = *((void *)v23 + 3);
  *((void *)v22 + 2) = *((void *)v23 + 2);
  *((void *)v22 + 3) = v25;
  swift_bridgeObjectRelease();
  uint64_t v26 = *((void *)v23 + 5);
  *((void *)v22 + 4) = *((void *)v23 + 4);
  *((void *)v22 + 5) = v26;
  swift_bridgeObjectRelease();
  *((_WORD *)v22 + 24) = *((_WORD *)v23 + 24);
  v22[50] = v23[50];
  v22[51] = v23[51];
  uint64_t v27 = type metadata accessor for WidgetContext();
  uint64_t v28 = *(int *)(v27 + 40);
  int v29 = &v22[v28];
  uint64_t v30 = &v23[v28];
  uint64_t v31 = sub_100129220();
  int v32 = _s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v29, 1, v31);
  int v33 = _s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v30, 1, v31);
  uint64_t v101 = v31;
  if (v32)
  {
    if (!v33)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 32))(v29, v30, v31);
      _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v29, 0, 1, v31);
      goto LABEL_17;
    }
    goto LABEL_16;
  }
  uint64_t v34 = *(void *)(v31 - 8);
  if (v33)
  {
    (*(void (**)(char *, uint64_t))(v34 + 8))(v29, v31);
LABEL_16:
    uint64_t v35 = sub_1000053D8(&qword_10016B420);
    memcpy(v29, v30, *(void *)(*(void *)(v35 - 8) + 64));
    goto LABEL_17;
  }
  (*(void (**)(char *, char *, uint64_t))(v34 + 40))(v29, v30, v31);
LABEL_17:
  uint64_t v36 = *(int *)(v27 + 44);
  uint64_t v37 = &v22[v36];
  uint64_t v38 = &v23[v36];
  *(void *)uint64_t v37 = *(void *)&v23[v36];
  swift_bridgeObjectRelease();
  v37[8] = v38[8];
  uint64_t v39 = v103;
  if (v103 != a2)
  {
    uint64_t v40 = *(int *)(v102 + 28);
    uint64_t v41 = &v9[v40];
    uint64_t v42 = &v10[v40];
    sub_100014B0C((uint64_t)&v9[v40]);
    uint64_t v43 = type metadata accessor for ForecastEntry.Model(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      type metadata accessor for WeatherDataViewModel();
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        uint64_t v55 = sub_10012BE90();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v55 - 8) + 32))(v41, v42, v55);
      }
      else if (EnumCaseMultiPayload == 1)
      {
        uint64_t v45 = sub_100129330();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v45 - 8) + 32))(v41, v42, v45);
        uint64_t v46 = type metadata accessor for InstantWeatherViewModel();
        uint64_t v47 = *(int *)(v46 + 20);
        uint64_t v48 = &v41[v47];
        uint64_t v49 = &v42[v47];
        uint64_t v50 = sub_10012A6B0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v50 - 8) + 32))(v48, v49, v50);
        uint64_t v51 = *(int *)(v46 + 24);
        uint64_t v52 = &v41[v51];
        uint64_t v53 = &v42[v51];
        uint64_t v54 = sub_10012C250();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v54 - 8) + 32))(v52, v53, v54);
      }
      else
      {
        uint64_t v56 = sub_100129330();
        uint64_t v57 = *(void (**)(char *, char *))(*(void *)(v56 - 8) + 32);
        uint64_t v98 = v56;
        v57(v41, v42);
        uint64_t v58 = (int *)type metadata accessor for AggregateWeatherViewModel(0);
        uint64_t v59 = v58[5];
        uint64_t v60 = &v41[v59];
        uint64_t v61 = &v42[v59];
        uint64_t v62 = sub_10012A6B0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v62 - 8) + 32))(v60, v61, v62);
        uint64_t v63 = v58[6];
        uint64_t v64 = &v41[v63];
        uint64_t v65 = &v42[v63];
        uint64_t v66 = sub_10012C250();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v66 - 8) + 32))(v64, v65, v66);
        *(void *)&v41[v58[7]] = *(void *)&v42[v58[7]];
        *(void *)&v41[v58[8]] = *(void *)&v42[v58[8]];
        uint64_t v67 = v58[9];
        uint64_t v68 = &v41[v67];
        uint64_t v69 = &v42[v67];
        uint64_t v70 = (int *)type metadata accessor for AirQualityViewModel();
        if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v69, 1, (uint64_t)v70))
        {
          uint64_t v71 = sub_1000053D8(&qword_10016B428);
          memcpy(v68, v69, *(void *)(*(void *)(v71 - 8) + 64));
        }
        else
        {
          ((void (*)(char *, char *, uint64_t))v57)(v68, v69, v98);
          (*(void (**)(char *, char *, uint64_t))(v99 + 32))(&v68[v70[5]], &v69[v70[5]], v100);
          *(void *)&v68[v70[6]] = *(void *)&v69[v70[6]];
          uint64_t v72 = v70[7];
          uint64_t v73 = &v68[v72];
          uint64_t v74 = &v69[v72];
          uint64_t v75 = sub_100129B70();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v75 - 8) + 32))(v73, v74, v75);
          uint64_t v76 = v70[8];
          uint64_t v77 = &v68[v76];
          uint64_t v78 = &v69[v76];
          uint64_t v79 = sub_100129C50();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v79 - 8) + 32))(v77, v78, v79);
          _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v68, 0, 1, (uint64_t)v70);
        }
        uint64_t v80 = v58[10];
        uint64_t v81 = &v41[v80];
        uint64_t v82 = &v42[v80];
        uint64_t v83 = sub_10012C6B0();
        uint64_t v39 = v103;
        if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v82, 1, v83))
        {
          uint64_t v84 = sub_1000053D8(&qword_10016B430);
          memcpy(v81, v82, *(void *)(*(void *)(v84 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v83 - 8) + 32))(v81, v82, v83);
          _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v81, 0, 1, v83);
        }
        *(void *)&v41[v58[11]] = *(void *)&v42[v58[11]];
        uint64_t v85 = v58[12];
        uint64_t v86 = &v41[v85];
        uint64_t v87 = &v42[v85];
        *(void *)uint64_t v86 = *(void *)v87;
        *((_WORD *)v86 + 4) = *((_WORD *)v87 + 4);
        uint64_t v88 = v58[13];
        uint64_t v89 = &v41[v88];
        uint64_t v90 = &v42[v88];
        if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)&v42[v88], 1, v101))
        {
          uint64_t v91 = sub_1000053D8(&qword_10016B420);
          memcpy(v89, v90, *(void *)(*(void *)(v91 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v101 - 8) + 32))(v89, v90, v101);
          _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v89, 0, 1, v101);
        }
        uint64_t v92 = v58[14];
        uint64_t v93 = &v41[v92];
        uint64_t v94 = &v42[v92];
        uint64_t v95 = type metadata accessor for AggregateWeatherViewModel.SunEvent(0);
        if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v94, 1, v95))
        {
          uint64_t v96 = sub_1000053D8(&qword_10016B438);
          memcpy(v93, v94, *(void *)(*(void *)(v96 - 8) + 64));
        }
        else
        {
          swift_getEnumCaseMultiPayload();
          (*(void (**)(char *, char *, uint64_t))(v99 + 32))(v93, v94, v100);
          swift_storeEnumTagMultiPayload();
          _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v93, 0, 1, v95);
        }
      }
      swift_storeEnumTagMultiPayload();
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v41, v42, *(void *)(*(void *)(v43 - 8) + 64));
    }
  }
  return v39;
}

uint64_t sub_100015ED8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100015EEC);
}

uint64_t sub_100015EEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1000053D8(&qword_10016B440);
  sub_10000B3D0();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1;
  }
  else
  {
    uint64_t v8 = type metadata accessor for ForecastEntry(0);
    uint64_t v9 = a1 + *(int *)(a3 + 20);
  }

  return _s13WeatherWidget20WeatherDataViewModelOwet_0(v9, a2, v8);
}

uint64_t sub_100015F6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100015F80);
}

uint64_t sub_100015F80(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_1000053D8(&qword_10016B440);
  sub_10000B3D0();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = a1;
  }
  else
  {
    uint64_t v10 = type metadata accessor for ForecastEntry(0);
    uint64_t v11 = a1 + *(int *)(a4 + 20);
  }

  return _s13WeatherWidget20WeatherDataViewModelOwst_0(v11, a2, a2, v10);
}

uint64_t type metadata accessor for UVIndexContentView()
{
  uint64_t result = qword_10016B4A0;
  if (!qword_10016B4A0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100016050()
{
  sub_100016118();
  if (v0 <= 0x3F)
  {
    type metadata accessor for ForecastEntry(319);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_100016118()
{
  if (!qword_10016B4B0)
  {
    sub_10012C800();
    unint64_t v0 = sub_10012AB90();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10016B4B0);
    }
  }
}

uint64_t sub_100016170()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10001618C@<X0>(uint64_t a1@<X8>)
{
  return sub_100016194(v1, a1);
}

uint64_t sub_100016194@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v53 = a2;
  uint64_t v43 = sub_1000053D8(&qword_10016B4E0);
  __chkstk_darwin(v43);
  uint64_t v44 = (char *)&v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = sub_1000053D8(&qword_10016B4E8);
  __chkstk_darwin(v52);
  uint64_t v48 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10012C2D0();
  uint64_t v46 = *(void *)(v5 - 8);
  uint64_t v47 = v5;
  __chkstk_darwin(v5);
  uint64_t v45 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = type metadata accessor for UVIndexContentView();
  uint64_t v7 = __chkstk_darwin(v49);
  uint64_t v40 = (uint64_t)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v38 = (uint64_t)&v37 - v9;
  uint64_t v50 = sub_1000053D8(&qword_10016B4F0);
  __chkstk_darwin(v50);
  uint64_t v11 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = sub_1000053D8(&qword_10016B4F8);
  __chkstk_darwin(v41);
  uint64_t v13 = (char *)&v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = sub_1000053D8(&qword_10016B500);
  __chkstk_darwin(v51);
  uint64_t v15 = (char *)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_10012C670();
  __chkstk_darwin(v16 - 8);
  int v18 = (char *)&v37 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_10012C4C0();
  uint64_t v42 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  uint64_t v21 = (char *)&v37 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_10012C800();
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v37 = (uint64_t)&v37 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  uint64_t v27 = (char *)&v37 - v26;
  sub_10008F554((uint64_t)&v37 - v26);
  uint64_t v39 = v23;
  int v28 = (*(uint64_t (**)(char *, uint64_t))(v23 + 88))(v27, v22);
  if (v28 == enum case for WidgetFamily.accessoryCircular(_:))
  {
    sub_10010BD20((uint64_t)v18);
    sub_10012C4B0();
    uint64_t v29 = v42;
    (*(void (**)(char *, char *, uint64_t))(v42 + 16))(v13, v21, v19);
    swift_storeEnumTagMultiPayload();
    sub_100016BB8(&qword_10016B520, (void (*)(uint64_t))&type metadata accessor for UltravioletCircularContentView);
    sub_10012B0E0();
    sub_100016CAC((uint64_t)v15, (uint64_t)v11, &qword_10016B500);
    swift_storeEnumTagMultiPayload();
    sub_100016B0C();
    sub_100016C00();
    sub_10012B0E0();
    sub_100016D10((uint64_t)v15, &qword_10016B500);
    return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v21, v19);
  }
  if (v28 == enum case for WidgetFamily.accessoryRectangular(_:))
  {
    sub_100016AA8(a1, v38);
    uint64_t v54 = 0;
    unint64_t v55 = 0xE000000000000000;
    sub_10012CFD0(61);
    v56._countAndFlagsBits = 0xD000000000000021;
    v56._object = (void *)0x8000000100138E70;
    sub_10012CAF0(v56);
    uint64_t v35 = v37;
    sub_10008F554(v37);
    sub_100016BB8(&qword_10016B508, (void (*)(uint64_t))&type metadata accessor for WidgetFamily);
    v57._countAndFlagsBits = sub_10012D1D0();
    sub_10012CAF0(v57);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v35, v22);
    v58._object = (void *)0x8000000100138E50;
    v58._countAndFlagsBits = 0xD00000000000001ALL;
    sub_10012CAF0(v58);
LABEL_9:
    uint64_t result = sub_10012D070();
    __break(1u);
    return result;
  }
  if (v28 != enum case for WidgetFamily.accessoryInline(_:))
  {
    sub_100016AA8(a1, v40);
    uint64_t v54 = 0;
    unint64_t v55 = 0xE000000000000000;
    sub_10012CFD0(62);
    v59._countAndFlagsBits = 0xD000000000000022;
    v59._object = (void *)0x8000000100138E20;
    sub_10012CAF0(v59);
    uint64_t v36 = v37;
    sub_10008F554(v37);
    sub_100016BB8(&qword_10016B508, (void (*)(uint64_t))&type metadata accessor for WidgetFamily);
    v60._countAndFlagsBits = sub_10012D1D0();
    sub_10012CAF0(v60);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v36, v22);
    v61._object = (void *)0x8000000100138E50;
    v61._countAndFlagsBits = 0xD00000000000001ALL;
    sub_10012CAF0(v61);
    goto LABEL_9;
  }
  sub_10010BD20((uint64_t)v18);
  uint64_t v31 = v45;
  sub_10012C2C0();
  uint64_t v33 = v46;
  uint64_t v32 = v47;
  (*(void (**)(char *, char *, uint64_t))(v46 + 16))(v44, v31, v47);
  swift_storeEnumTagMultiPayload();
  sub_100016BB8(&qword_10016B510, (void (*)(uint64_t))&type metadata accessor for UltravioletInlineContentView);
  uint64_t v34 = (uint64_t)v48;
  sub_10012B0E0();
  sub_100016CAC(v34, (uint64_t)v11, &qword_10016B4E8);
  swift_storeEnumTagMultiPayload();
  sub_100016B0C();
  sub_100016C00();
  sub_10012B0E0();
  sub_100016D10(v34, &qword_10016B4E8);
  return (*(uint64_t (**)(char *, uint64_t))(v33 + 8))(v31, v32);
}

uint64_t sub_100016AA8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UVIndexContentView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_100016B0C()
{
  unint64_t result = qword_10016B518;
  if (!qword_10016B518)
  {
    sub_100005470(&qword_10016B500);
    sub_100016BB8(&qword_10016B520, (void (*)(uint64_t))&type metadata accessor for UltravioletCircularContentView);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016B518);
  }
  return result;
}

uint64_t sub_100016BB8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100016C00()
{
  unint64_t result = qword_10016B528;
  if (!qword_10016B528)
  {
    sub_100005470(&qword_10016B4E8);
    sub_100016BB8(&qword_10016B510, (void (*)(uint64_t))&type metadata accessor for UltravioletInlineContentView);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016B528);
  }
  return result;
}

uint64_t sub_100016CAC(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_1000053D8(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100016D10(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_1000053D8(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_100016D70()
{
  unint64_t result = qword_10016B530;
  if (!qword_10016B530)
  {
    sub_100005470(&qword_10016B538);
    sub_100016DE4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016B530);
  }
  return result;
}

unint64_t sub_100016DE4()
{
  unint64_t result = qword_10016B540;
  if (!qword_10016B540)
  {
    sub_100005470(&qword_10016B548);
    sub_100016B0C();
    sub_100016C00();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016B540);
  }
  return result;
}

uint64_t sub_100016E60(uint64_t a1, uint64_t a2)
{
  uint64_t v21 = sub_10012B590();
  sub_10000DB98();
  uint64_t v5 = v4;
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v22[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100129080();
  sub_10000DB98();
  uint64_t v11 = v10;
  uint64_t v13 = __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v22[-1] - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v22[-1] - v16;
  v22[0] = a1;
  v22[1] = a2;
  sub_100129060();
  sub_100129070();
  int v18 = *(void (**)(char *, uint64_t))(v11 + 8);
  v18(v17, v9);
  sub_10000822C();
  sub_10012CF90();
  v18(v15, v9);
  swift_bridgeObjectRelease();
  v22[0] = 0;
  sub_100017134();
  swift_bridgeObjectRetain();
  id v19 = sub_100017174();
  [v19 scanHexLongLong:v22];

  sub_10012CAD0();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v8, enum case for Color.RGBColorSpace.sRGB(_:), v21);
  return sub_10012B5F0();
}

unint64_t sub_100017134()
{
  unint64_t result = qword_10016B550;
  if (!qword_10016B550)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_10016B550);
  }
  return result;
}

id sub_100017174()
{
  id v0 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  NSString v1 = sub_10012CA20();
  swift_bridgeObjectRelease();
  id v2 = [v0 initWithString:v1];

  return v2;
}

unint64_t sub_1000171E8(uint64_t a1)
{
  uint64_t v1 = sub_10001729C(a1);
  unsigned int v2 = sub_100017908();
  unsigned __int8 v3 = sub_1000179C4(v1);
  if (*(void *)(v1 + 16) >= 2uLL) {
    unint64_t v4 = (unint64_t)*(unsigned __int8 *)(v1 + 32) << 56;
  }
  else {
    unint64_t v4 = 0;
  }
  sub_100017A9C(v1);
  swift_bridgeObjectRelease();
  return v4 | v2 | ((unint64_t)v3 << 48) | 0x10000000000;
}

uint64_t sub_10001729C(uint64_t a1)
{
  sub_1001295D0();
  sub_10000DB98();
  uint64_t v78 = v3;
  uint64_t v79 = v2;
  __chkstk_darwin(v2);
  sub_10000DC50();
  uint64_t v6 = v5 - v4;
  sub_1000053D8(&qword_10016B060);
  sub_10000DB98();
  uint64_t v81 = v8;
  uint64_t v82 = v7;
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v80 = (char *)&v73 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v77 = (char *)&v73 - v12;
  __chkstk_darwin(v11);
  uint64_t v84 = (char *)&v73 - v13;
  uint64_t v14 = sub_1000053D8(&qword_10016B558);
  __chkstk_darwin(v14 - 8);
  sub_10000DC50();
  uint64_t v17 = v16 - v15;
  sub_100129A20();
  sub_10000DB98();
  uint64_t v74 = v19;
  uint64_t v75 = v18;
  __chkstk_darwin(v18);
  sub_10000DC50();
  uint64_t v73 = v21 - v20;
  uint64_t v22 = sub_100129DC0();
  sub_10000DB98();
  uint64_t v24 = v23;
  __chkstk_darwin(v25);
  sub_10000DC50();
  uint64_t v28 = v27 - v26;
  uint64_t v29 = sub_1000053D8(&qword_10016B3D8);
  __chkstk_darwin(v29 - 8);
  sub_10000DC50();
  uint64_t v32 = v31 - v30;
  uint64_t v33 = sub_1000053D8(&qword_10016B3E0);
  sub_10000DB98();
  uint64_t v35 = v34;
  __chkstk_darwin(v36);
  sub_10000DC50();
  uint64_t v39 = v38 - v37;
  uint64_t v83 = a1;
  sub_1001299A0();
  if (_s13WeatherWidget20WeatherDataViewModelOwet_0(v32, 1, v33) == 1)
  {
    sub_100016D10(v32, &qword_10016B3D8);
LABEL_8:
    uint64_t v43 = _swiftEmptyArrayStorage;
    goto LABEL_9;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v35 + 32))(v39, v32, v33);
  (*(void (**)(uint64_t, void, uint64_t))(v24 + 104))(v28, enum case for PrecipitationRelevancyWindow.default(_:), v22);
  char v40 = sub_100129EB0();
  sub_100017B00();
  v41();
  if ((v40 & 1) == 0)
  {
    uint64_t v48 = sub_100017B0C();
    v49(v48);
    goto LABEL_8;
  }
  sub_10004581C(0, 1, 1, (uint64_t)_swiftEmptyArrayStorage);
  uint64_t v43 = v42;
  unint64_t v45 = v42[2];
  unint64_t v44 = v42[3];
  if (v45 >= v44 >> 1)
  {
    sub_100017ADC(v44);
    uint64_t v43 = v70;
  }
  v43[2] = v45 + 1;
  *((unsigned char *)v43 + v45 + 32) = 0;
  uint64_t v46 = sub_100017B0C();
  v47(v46);
LABEL_9:
  sub_100129960();
  uint64_t v50 = v75;
  int v51 = _s13WeatherWidget20WeatherDataViewModelOwet_0(v17, 1, v75);
  uint64_t v53 = v73;
  uint64_t v52 = v74;
  if (v51 == 1)
  {
    uint64_t v76 = v43;
    sub_100016D10(v17, &qword_10016B558);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v74 + 32))(v73, v17, v50);
    if (sub_1001299D0())
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_10004581C(0, v43[2] + 1, 1, (uint64_t)v43);
        uint64_t v43 = v71;
      }
      unint64_t v55 = v43[2];
      unint64_t v54 = v43[3];
      if (v55 >= v54 >> 1)
      {
        sub_100017ADC(v54);
        uint64_t v43 = v72;
      }
      v43[2] = v55 + 1;
      uint64_t v76 = v43;
      *((unsigned char *)v43 + v55 + 32) = 2;
    }
    else
    {
      uint64_t v76 = v43;
    }
    (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v53, v50);
  }
  sub_100129950();
  sub_100129550();
  uint64_t v56 = v79;
  uint64_t v78 = *(void *)(v78 + 8);
  ((void (*)(uint64_t, uint64_t))v78)(v6, v79);
  Swift::String v57 = self;
  id v58 = [v57 fahrenheit];
  sub_100129050();

  Swift::String v59 = *(void (**)(void))(v81 + 8);
  sub_100017B00();
  v59();
  sub_100129950();
  sub_100129560();
  ((void (*)(uint64_t, uint64_t))v78)(v6, v56);
  id v60 = [v57 fahrenheit];
  sub_100129050();

  sub_100017B00();
  v59();
  sub_100129000();
  double v62 = v61;
  sub_100129000();
  if (vabdd_f64(v62, v63) <= 5.0)
  {
    uint64_t v64 = (uint64_t)v76;
  }
  else
  {
    uint64_t v64 = (uint64_t)v76;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_10004581C(0, *(void *)(v64 + 16) + 1, 1, v64);
      uint64_t v64 = v68;
    }
    unint64_t v66 = *(void *)(v64 + 16);
    unint64_t v65 = *(void *)(v64 + 24);
    if (v66 >= v65 >> 1)
    {
      sub_10004581C(v65 > 1, v66 + 1, 1, v64);
      uint64_t v64 = v69;
    }
    *(void *)(v64 + 16) = v66 + 1;
    *(unsigned char *)(v64 + v66 + 32) = 4;
  }
  sub_100017B00();
  v59();
  sub_100017B00();
  v59();
  return v64;
}

uint64_t sub_100017908()
{
  uint64_t v0 = sub_1000053D8(&qword_10016B558);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)&v6 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100129960();
  uint64_t v3 = sub_100129A20();
  int v4 = _s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v2, 1, v3);
  sub_100016D10((uint64_t)v2, &qword_10016B558);
  if (v4 == 1) {
    return 67305728;
  }
  else {
    return 67240192;
  }
}

uint64_t sub_1000179C4(uint64_t a1)
{
  uint64_t v2 = sub_1000053D8(&qword_10016B558);
  __chkstk_darwin(v2 - 8);
  int v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *(void *)(a1 + 16);
  if (v5)
  {
    uint64_t v6 = (unsigned __int8 *)(a1 + 32);
    while (1)
    {
      unsigned int v8 = *v6++;
      uint64_t result = v8;
      if (v8 > 1) {
        break;
      }
      if (!--v5) {
        goto LABEL_5;
      }
    }
  }
  else
  {
LABEL_5:
    sub_100129960();
    uint64_t v9 = sub_100129A20();
    int v10 = _s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v4, 1, v9);
    sub_100016D10((uint64_t)v4, &qword_10016B558);
    if (v10 == 1) {
      return 3;
    }
    else {
      return 2;
    }
  }
  return result;
}

uint64_t sub_100017A9C(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 16);
  if (v1 >= 2) {
    return *(unsigned __int8 *)(a1 + 33);
  }
  if (!v1) {
    return 1;
  }
  if (*(unsigned __int8 *)(a1 + 32) <= 1u) {
    return 1;
  }
  return *(unsigned __int8 *)(a1 + 32);
}

ValueMetadata *type metadata accessor for DataDenseTableViewModelFactory()
{
  return &type metadata for DataDenseTableViewModelFactory;
}

void sub_100017ADC(unint64_t a1@<X8>)
{
  sub_10004581C(a1 > 1, v1, 1, v2);
}

uint64_t sub_100017B0C()
{
  return v0;
}

uint64_t sub_100017B20@<X0>(uint64_t a1@<X8>)
{
  type metadata accessor for ForecastEntry.Model(0);
  sub_10000B3FC();
  __chkstk_darwin(v3);
  sub_10000DC50();
  uint64_t v6 = v5 - v4;
  uint64_t v7 = type metadata accessor for ForecastEntry(0);
  sub_100020354(v1 + *(int *)(v7 + 28), v6, (void (*)(void))type metadata accessor for ForecastEntry.Model);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1000202F4(v6, a1, (void (*)(void))type metadata accessor for WeatherDataViewModel);
    uint64_t v8 = 0;
  }
  else
  {
    uint64_t v8 = 1;
  }
  uint64_t v9 = type metadata accessor for WeatherDataViewModel();
  return _s13WeatherWidget20WeatherDataViewModelOwst_0(a1, v8, 1, v9);
}

BOOL sub_100017C10(char a1, char a2)
{
  return a1 == a2;
}

uint64_t sub_100017C20(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000018 && a2 == 0x8000000100138ED0 || (sub_10012D1F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v5 = a1 == 0x697461636F4C6F6ELL && a2 == 0xEE00617461446E6FLL;
    if (v5 || (sub_10012D1F0() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x6568746165576F6ELL && a2 == 0xED00006174614472)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      char v7 = sub_10012D1F0();
      swift_bridgeObjectRelease();
      if (v7) {
        return 2;
      }
      else {
        return 3;
      }
    }
  }
}

uint64_t sub_100017DB4()
{
  return 3;
}

uint64_t sub_100017DBC(char a1)
{
  if (!a1) {
    return 0xD000000000000018;
  }
  if (a1 == 1) {
    return 0x697461636F4C6F6ELL;
  }
  return 0x6568746165576F6ELL;
}

uint64_t sub_100017E34()
{
  return sub_100017DBC(*v0);
}

uint64_t sub_100017E3C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100017C20(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100017E64@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_100017DB4();
  *a1 = result;
  return result;
}

uint64_t sub_100017E8C(uint64_t a1)
{
  unint64_t v2 = sub_1000203B4();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100017EC8(uint64_t a1)
{
  unint64_t v2 = sub_1000203B4();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100017F04()
{
  return 1;
}

uint64_t static WeatherLocation.supportsSecureCoding.getter()
{
  return 1;
}

uint64_t sub_100017F2C()
{
  return 0;
}

uint64_t sub_100017F38()
{
  return 0;
}

void sub_100017F44()
{
  sub_100021314();
  char v27 = v2;
  uint64_t v4 = v3;
  sub_1000053D8(&qword_10016B750);
  sub_10000DB98();
  uint64_t v25 = v6;
  uint64_t v26 = v5;
  __chkstk_darwin(v5);
  sub_100021360(v7, v20);
  sub_1000053D8(&qword_10016B758);
  sub_10000DB98();
  uint64_t v22 = v9;
  uint64_t v23 = v8;
  __chkstk_darwin(v8);
  sub_10000DC50();
  uint64_t v12 = v11 - v10;
  uint64_t v13 = sub_1000053D8(&qword_10016B760);
  sub_10000DB98();
  uint64_t v21 = v14;
  __chkstk_darwin(v15);
  sub_1000213D4();
  uint64_t v16 = sub_1000053D8(&qword_10016B768);
  sub_10000DB98();
  uint64_t v18 = v17;
  __chkstk_darwin(v19);
  sub_1000212FC();
  sub_10000D890(v4, v4[3]);
  sub_1000203B4();
  sub_10012D2C0();
  if (v27)
  {
    if (v27 == 1)
    {
      sub_10002044C();
      sub_10002137C();
      (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v12, v23);
    }
    else
    {
      sub_100020400();
      sub_10002137C();
      (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v24, v26);
    }
  }
  else
  {
    sub_100020498();
    sub_10002137C();
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v0, v13);
  }
  (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v1, v16);
  sub_10002132C();
}

void sub_1000181A0()
{
  sub_100021314();
  uint64_t v3 = v2;
  sub_1000053D8(&qword_10016B708);
  sub_10000DB98();
  __chkstk_darwin(v4);
  sub_10000DBCC();
  sub_1000053D8(&qword_10016B710);
  sub_10000DB98();
  __chkstk_darwin(v5);
  sub_1000212E4();
  sub_1000053D8(&qword_10016B718);
  sub_10000DB98();
  __chkstk_darwin(v6);
  sub_1000212FC();
  uint64_t v7 = sub_1000053D8(&qword_10016B720);
  sub_10000DB98();
  uint64_t v26 = v8;
  __chkstk_darwin(v9);
  sub_10000DC78();
  sub_10000D890(v3, v3[3]);
  sub_1000203B4();
  sub_10012D2B0();
  if (v0) {
    goto LABEL_9;
  }
  uint64_t v27 = (uint64_t)v3;
  uint64_t v10 = v1;
  uint64_t v11 = sub_10012D140();
  uint64_t v12 = *(void *)(v11 + 16);
  if (!v12)
  {
LABEL_8:
    sub_10012D010();
    swift_allocError();
    uint64_t v20 = v19;
    sub_1000053D8(&qword_10016B730);
    *uint64_t v20 = &type metadata for ForecastEntry.Error;
    sub_10012D0D0();
    sub_10012D000();
    uint64_t v21 = sub_100021420();
    v22(v21);
    swift_willThrow();
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v10, v7);
    uint64_t v3 = (void *)v27;
LABEL_9:
    sub_10000DB48((uint64_t)v3);
    goto LABEL_10;
  }
  uint64_t v13 = v1;
  int v14 = *(unsigned __int8 *)(v11 + 32);
  sub_1000B0244(1, v12, v11, v11 + 32, 0, (2 * v12) | 1);
  uint64_t v16 = v15;
  unint64_t v18 = v17;
  swift_bridgeObjectRelease();
  if (v16 != v18 >> 1)
  {
    uint64_t v10 = v13;
    goto LABEL_8;
  }
  if (v14)
  {
    sub_10002044C();
    sub_100021404();
    sub_10000B424();
    v23();
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v13, v7);
  }
  else
  {
    sub_100020498();
    sub_100021404();
    sub_10000B424();
    v24();
    swift_unknownObjectRelease();
    sub_10000B424();
    v25();
  }
  sub_10000DB48(v27);
LABEL_10:
  sub_10002132C();
}

uint64_t sub_100018634(uint64_t a1)
{
  unint64_t v2 = sub_100020498();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100018670(uint64_t a1)
{
  unint64_t v2 = sub_100020498();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1000186AC(uint64_t a1)
{
  unint64_t v2 = sub_10002044C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1000186E8(uint64_t a1)
{
  unint64_t v2 = sub_10002044C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100018724@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_100017F04();
  *a1 = result & 1;
  return result;
}

uint64_t sub_100018750()
{
  return sub_100017F2C();
}

uint64_t sub_10001876C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = static WeatherLocation.supportsSecureCoding.getter();
  *a1 = result & 1;
  return result;
}

uint64_t sub_100018798(uint64_t a1)
{
  unint64_t v2 = sub_100020400();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1000187D4(uint64_t a1)
{
  unint64_t v2 = sub_100020400();

  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_100018810(unsigned char *a1@<X8>)
{
  sub_1000181A0();
  if (!v1) {
    *a1 = v3;
  }
}

void sub_10001883C()
{
}

BOOL sub_100018858(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

void sub_100018868(uint64_t a1, char a2)
{
}

uint64_t sub_100018890(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x726F727265 && a2 == 0xE500000000000000;
  if (v2 || (sub_10012D1F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1635017060 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v7 = sub_10012D1F0();
    swift_bridgeObjectRelease();
    if (v7) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_100018968()
{
  return 2;
}

Swift::Int sub_100018970(char a1)
{
  return sub_10012D2A0();
}

uint64_t sub_1000189B8(char a1)
{
  if (a1) {
    return 1635017060;
  }
  else {
    return 0x726F727265;
  }
}

void sub_1000189E4()
{
}

uint64_t sub_100018A0C()
{
  return 12383;
}

uint64_t sub_100018A18(uint64_t a1, uint64_t a2)
{
  if (a1 == 12383 && a2 == 0xE200000000000000)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_10012D1F0();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

Swift::Int sub_100018A88()
{
  return sub_10012D2A0();
}

void sub_100018ACC()
{
  sub_100021314();
  uint64_t v24 = v1;
  char v4 = v3;
  sub_1000053D8(&qword_10016B7B0);
  sub_10000DB98();
  __chkstk_darwin(v5);
  sub_100021344(v6, v20);
  type metadata accessor for WeatherDataViewModel();
  sub_10000B3FC();
  __chkstk_darwin(v7);
  sub_10000DBCC();
  uint64_t v23 = v8;
  sub_1000053D8(&qword_10016B7B8);
  sub_10000DB98();
  uint64_t v21 = v10;
  uint64_t v22 = v9;
  __chkstk_darwin(v9);
  sub_10000DC60();
  type metadata accessor for ForecastEntry.Model(0);
  sub_10000B3FC();
  __chkstk_darwin(v11);
  sub_10000DC50();
  uint64_t v14 = v13 - v12;
  uint64_t v15 = sub_1000053D8(&qword_10016B7C0);
  sub_10000DB98();
  uint64_t v17 = v16;
  __chkstk_darwin(v18);
  sub_10000DC78();
  sub_10000D890(v4, v4[3]);
  sub_1000204E4();
  sub_10012D2C0();
  sub_100020354(v24, v14, (void (*)(void))type metadata accessor for ForecastEntry.Model);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1000202F4(v14, v23, (void (*)(void))type metadata accessor for WeatherDataViewModel);
    sub_100020530();
    sub_10012D150();
    sub_100020190(&qword_10016B7C8, (void (*)(uint64_t))type metadata accessor for WeatherDataViewModel);
    sub_10012D1B0();
    sub_10000B424();
    v19();
    sub_1000201D8(v23, (void (*)(void))type metadata accessor for WeatherDataViewModel);
  }
  else
  {
    sub_10002057C();
    sub_10012D150();
    sub_100020614();
    sub_10012D1B0();
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v0, v22);
  }
  (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v2, v15);
  sub_10002132C();
}

void sub_100018E2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, char a11, char a12)
{
  sub_100021314();
  uint64_t v76 = v12;
  uint64_t v15 = v14;
  uint64_t v68 = v16;
  sub_1000053D8(&qword_10016B770);
  sub_10000DB98();
  uint64_t v71 = v17;
  uint64_t v72 = v18;
  __chkstk_darwin(v17);
  sub_100021344(v19, (uint64_t)v64);
  sub_1000053D8(&qword_10016B778);
  sub_10000DB98();
  uint64_t v69 = v21;
  uint64_t v70 = v20;
  __chkstk_darwin(v20);
  sub_10000DBCC();
  uint64_t v74 = v22;
  uint64_t v75 = sub_1000053D8(&qword_10016B780);
  sub_10000DB98();
  uint64_t v73 = v23;
  __chkstk_darwin(v24);
  sub_1000212FC();
  uint64_t v25 = type metadata accessor for ForecastEntry.Model(0);
  sub_10000B3FC();
  uint64_t v27 = __chkstk_darwin(v26);
  uint64_t v29 = (char *)&v64 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = __chkstk_darwin(v27);
  uint64_t v32 = (char *)&v64 - v31;
  __chkstk_darwin(v30);
  uint64_t v34 = (char *)&v64 - v33;
  sub_10000D890(v15, v15[3]);
  sub_1000204E4();
  uint64_t v35 = v76;
  sub_10012D2B0();
  if (v35) {
    goto LABEL_10;
  }
  uint64_t v64 = v32;
  unint64_t v65 = v34;
  unint64_t v66 = v29;
  uint64_t v67 = v25;
  uint64_t v36 = v75;
  uint64_t v76 = v15;
  uint64_t v37 = sub_10012D140();
  uint64_t v38 = *(void *)(v37 + 16);
  if (!v38)
  {
    uint64_t v46 = v73;
LABEL_8:
    uint64_t v47 = v67;
    sub_10012D010();
    swift_allocError();
    uint64_t v49 = v48;
    sub_1000053D8(&qword_10016B730);
    uint64_t *v49 = v47;
    sub_10012D0D0();
    sub_10012D000();
    uint64_t v50 = sub_100021420();
    v51(v50);
    swift_willThrow();
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v13, v36);
    uint64_t v15 = v76;
LABEL_10:
    uint64_t v52 = (uint64_t)v15;
    goto LABEL_11;
  }
  uint64_t v39 = v36;
  char v40 = *(unsigned char *)(v37 + 32);
  sub_1000B0244(1, v38, v37, v37 + 32, 0, (2 * v38) | 1);
  uint64_t v42 = v41;
  unint64_t v44 = v43;
  swift_bridgeObjectRelease();
  if (v42 != v44 >> 1)
  {
    uint64_t v46 = v73;
    uint64_t v36 = v39;
    goto LABEL_8;
  }
  if (v40)
  {
    sub_100020530();
    sub_100021398();
    type metadata accessor for WeatherDataViewModel();
    sub_100020190(&qword_10016B798, (void (*)(uint64_t))type metadata accessor for WeatherDataViewModel);
    uint64_t v45 = (uint64_t)v66;
    sub_10012D130();
    uint64_t v53 = sub_1000212CC();
    v54(v53);
    swift_unknownObjectRelease();
    uint64_t v55 = sub_1000213EC();
    v56(v55);
    swift_storeEnumTagMultiPayload();
    uint64_t v57 = v45;
  }
  else
  {
    sub_10002057C();
    sub_100021398();
    sub_1000205C8();
    sub_10012D130();
    uint64_t v58 = sub_1000212CC();
    v59(v58);
    swift_unknownObjectRelease();
    uint64_t v60 = sub_1000213EC();
    v61(v60);
    double v62 = v64;
    *uint64_t v64 = a12;
    swift_storeEnumTagMultiPayload();
    uint64_t v57 = (uint64_t)v62;
  }
  uint64_t v63 = (uint64_t)v65;
  sub_1000202F4(v57, (uint64_t)v65, (void (*)(void))type metadata accessor for ForecastEntry.Model);
  sub_1000202F4(v63, v68, (void (*)(void))type metadata accessor for ForecastEntry.Model);
  uint64_t v52 = (uint64_t)v76;
LABEL_11:
  sub_10000DB48(v52);
  sub_10002132C();
}

BOOL sub_100019380(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_100018858(*a1, *a2);
}

Swift::Int sub_10001938C()
{
  return sub_100018970(*v0);
}

void sub_100019394(uint64_t a1)
{
  sub_100018868(a1, *v1);
}

Swift::Int sub_10001939C()
{
  Swift::UInt v1 = *v0;
  sub_10012D280();
  sub_10012D290(v1);
  return sub_10012D2A0();
}

uint64_t sub_1000193E0()
{
  return sub_1000189B8(*v0);
}

uint64_t sub_1000193E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100018890(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100019410()
{
  return sub_100017F2C();
}

uint64_t sub_100019430@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_100018968();
  *a1 = result;
  return result;
}

uint64_t sub_100019458(uint64_t a1)
{
  unint64_t v2 = sub_1000204E4();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100019494(uint64_t a1)
{
  unint64_t v2 = sub_1000204E4();

  return CodingKey.debugDescription.getter(a1, v2);
}

Swift::Int sub_1000194D4()
{
  return sub_100018A88();
}

uint64_t sub_1000194F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100018A18(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_100019524(uint64_t a1)
{
  unint64_t v2 = sub_100020530();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100019560(uint64_t a1)
{
  unint64_t v2 = sub_100020530();

  return CodingKey.debugDescription.getter(a1, v2);
}

Swift::Int sub_10001959C()
{
  return sub_10012D2A0();
}

uint64_t sub_1000195DC(uint64_t a1)
{
  unint64_t v2 = sub_10002057C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100019618(uint64_t a1)
{
  unint64_t v2 = sub_10002057C();

  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_100019654(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_100018E2C(a1, a2, a3, a4, a5, a6, a7, a8, vars0, *(int *)vars8, vars8[4], vars8[5]);
}

void sub_10001966C()
{
}

void sub_100019684(uint64_t a1, unsigned __int8 a2)
{
}

uint64_t sub_1000196AC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1702125924 && a2 == 0xE400000000000000;
  if (v2 || (sub_10012D1F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x636E6176656C6572 && a2 == 0xE900000000000065;
    if (v6 || (sub_10012D1F0() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 0x747865746E6F63 && a2 == 0xE700000000000000;
      if (v7 || (sub_10012D1F0() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 0x6C65646F6DLL && a2 == 0xE500000000000000)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else
      {
        char v9 = sub_10012D1F0();
        swift_bridgeObjectRelease();
        if (v9) {
          return 3;
        }
        else {
          return 4;
        }
      }
    }
  }
}

uint64_t sub_100019850()
{
  return 4;
}

Swift::Int sub_100019858(unsigned __int8 a1)
{
  return sub_10012D2A0();
}

uint64_t sub_1000198A0(char a1)
{
  uint64_t result = 1702125924;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x636E6176656C6572;
      break;
    case 2:
      uint64_t result = 0x747865746E6F63;
      break;
    case 3:
      uint64_t result = 0x6C65646F6DLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_10001992C(void *a1)
{
  uint64_t v4 = sub_1000053D8(&qword_10016B6E0);
  sub_10000DB98();
  uint64_t v6 = v5;
  __chkstk_darwin(v7);
  sub_1000212E4();
  sub_10000D890(a1, a1[3]);
  sub_100020144();
  sub_10012D2C0();
  sub_100129300();
  sub_100020190(&qword_10016B6E8, (void (*)(uint64_t))&type metadata accessor for Date);
  sub_10012D1B0();
  if (!v1)
  {
    type metadata accessor for ForecastEntry(0);
    sub_10012C920();
    sub_100020190(&qword_10016B6F0, (void (*)(uint64_t))&type metadata accessor for TimelineEntryRelevance);
    sub_1000213BC();
    sub_10012D170();
    type metadata accessor for WidgetContext();
    sub_100020190(&qword_10016B6F8, (void (*)(uint64_t))type metadata accessor for WidgetContext);
    sub_1000213BC();
    sub_10012D1B0();
    type metadata accessor for ForecastEntry.Model(0);
    sub_100020190(&qword_10016B700, (void (*)(uint64_t))type metadata accessor for ForecastEntry.Model);
    sub_10012D1B0();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v2, v4);
}

void sub_100019BC8()
{
  sub_100021314();
  uint64_t v4 = v3;
  uint64_t v21 = v5;
  type metadata accessor for ForecastEntry.Model(0);
  sub_10000B3FC();
  __chkstk_darwin(v6);
  sub_10000DBCC();
  uint64_t v22 = v7;
  type metadata accessor for WidgetContext();
  sub_10000B3FC();
  __chkstk_darwin(v8);
  sub_10000DBCC();
  uint64_t v23 = v9;
  uint64_t v10 = sub_1000053D8(&qword_10016B418);
  __chkstk_darwin(v10 - 8);
  sub_1000213D4();
  uint64_t v11 = sub_100129300();
  sub_10000DB98();
  uint64_t v24 = v12;
  __chkstk_darwin(v13);
  sub_100021360(v14, v20);
  sub_1000053D8(&qword_10016B6B0);
  sub_10000DB98();
  __chkstk_darwin(v15);
  sub_1000212E4();
  uint64_t v16 = (int *)type metadata accessor for ForecastEntry(0);
  sub_10000B3FC();
  __chkstk_darwin(v17);
  sub_10000DC60();
  sub_10000D890(v4, v4[3]);
  sub_100020144();
  sub_10012D2B0();
  if (v1)
  {
    sub_10000DB48((uint64_t)v4);
  }
  else
  {
    sub_100020190(&qword_10016B6C0, (void (*)(uint64_t))&type metadata accessor for Date);
    sub_10012D130();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 32))(v0, v25, v11);
    sub_10012C920();
    sub_100020190(&qword_10016B6C8, (void (*)(uint64_t))&type metadata accessor for TimelineEntryRelevance);
    sub_10012D0F0();
    sub_10002028C(v2, v0 + v16[5]);
    sub_100020190(&qword_10016B6D0, (void (*)(uint64_t))type metadata accessor for WidgetContext);
    sub_10012D130();
    sub_1000202F4(v23, v0 + v16[6], (void (*)(void))type metadata accessor for WidgetContext);
    sub_100020190(&qword_10016B6D8, (void (*)(uint64_t))type metadata accessor for ForecastEntry.Model);
    sub_10012D130();
    uint64_t v18 = sub_1000212B8();
    v19(v18);
    sub_1000202F4(v22, v0 + v16[7], (void (*)(void))type metadata accessor for ForecastEntry.Model);
    sub_100020354(v0, v21, (void (*)(void))type metadata accessor for ForecastEntry);
    sub_10000DB48((uint64_t)v4);
    sub_1000201D8(v0, (void (*)(void))type metadata accessor for ForecastEntry);
  }
  sub_10002132C();
}

Swift::Int sub_10001A0CC()
{
  return sub_100019858(*v0);
}

uint64_t sub_10001A0E8()
{
  return sub_1000198A0(*v0);
}

uint64_t sub_10001A0F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1000196AC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_10001A118@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_100019850();
  *a1 = result;
  return result;
}

uint64_t sub_10001A140(uint64_t a1)
{
  unint64_t v2 = sub_100020144();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10001A17C(uint64_t a1)
{
  unint64_t v2 = sub_100020144();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10001A1B8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100129300();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t sub_10001A220@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10001A2A4(v2 + *(int *)(a1 + 20), a2);
}

uint64_t type metadata accessor for ForecastEntry.Model(uint64_t a1)
{
  return sub_10001A270(a1, qword_10016B5D0);
}

uint64_t type metadata accessor for ForecastEntry(uint64_t a1)
{
  return sub_10001A270(a1, (uint64_t *)&unk_10016B660);
}

uint64_t sub_10001A270(uint64_t a1, uint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10001A2A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000053D8(&qword_10016B418);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

ValueMetadata *type metadata accessor for ForecastEntry.Error()
{
  return &type metadata for ForecastEntry.Error;
}

uint64_t *sub_10001A324(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v18 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      type metadata accessor for WeatherDataViewModel();
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        uint64_t v19 = sub_10012BE90();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v19 - 8) + 16))(a1, a2, v19);
      }
      else if (EnumCaseMultiPayload == 1)
      {
        uint64_t v8 = sub_100129330();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
        uint64_t v9 = type metadata accessor for InstantWeatherViewModel();
        uint64_t v10 = *(int *)(v9 + 20);
        uint64_t v11 = (char *)a1 + v10;
        uint64_t v12 = (char *)a2 + v10;
        uint64_t v13 = sub_10012A6B0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
        uint64_t v14 = *(int *)(v9 + 24);
        uint64_t v15 = (char *)a1 + v14;
        uint64_t v16 = (char *)a2 + v14;
        uint64_t v17 = sub_10012C250();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
      }
      else
      {
        uint64_t v20 = sub_100129330();
        uint64_t v67 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v20 - 8) + 16);
        v67(a1, a2, v20);
        uint64_t v21 = (int *)type metadata accessor for AggregateWeatherViewModel(0);
        uint64_t v22 = v21[5];
        uint64_t v23 = (char *)a1 + v22;
        uint64_t v24 = (char *)a2 + v22;
        uint64_t v25 = sub_10012A6B0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 16))(v23, v24, v25);
        uint64_t v26 = v21[6];
        uint64_t v27 = (char *)a1 + v26;
        uint64_t v28 = (char *)a2 + v26;
        uint64_t v29 = sub_10012C250();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 16))(v27, v28, v29);
        *(uint64_t *)((char *)a1 + v21[7]) = *(uint64_t *)((char *)a2 + v21[7]);
        *(uint64_t *)((char *)a1 + v21[8]) = *(uint64_t *)((char *)a2 + v21[8]);
        uint64_t v30 = v21[9];
        uint64_t v31 = (char *)a1 + v30;
        uint64_t v32 = (char *)a2 + v30;
        uint64_t v33 = (int *)type metadata accessor for AirQualityViewModel();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v32, 1, (uint64_t)v33))
        {
          uint64_t v34 = sub_1000053D8(&qword_10016B428);
          memcpy(v31, v32, *(void *)(*(void *)(v34 - 8) + 64));
        }
        else
        {
          v67((uint64_t *)v31, (uint64_t *)v32, v20);
          uint64_t v35 = v33[5];
          uint64_t v36 = &v31[v35];
          uint64_t v37 = &v32[v35];
          uint64_t v38 = sub_100129300();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 16))(v36, v37, v38);
          *(void *)&v31[v33[6]] = *(void *)&v32[v33[6]];
          uint64_t v39 = v33[7];
          char v40 = &v31[v39];
          uint64_t v41 = &v32[v39];
          uint64_t v42 = sub_100129B70();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v42 - 8) + 16))(v40, v41, v42);
          uint64_t v43 = v33[8];
          unint64_t v44 = &v31[v43];
          uint64_t v45 = &v32[v43];
          uint64_t v46 = sub_100129C50();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v46 - 8) + 16))(v44, v45, v46);
          _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v31, 0, 1, (uint64_t)v33);
        }
        uint64_t v47 = v21[10];
        uint64_t v48 = (char *)a1 + v47;
        uint64_t v49 = (char *)a2 + v47;
        uint64_t v50 = sub_10012C6B0();
        if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v49, 1, v50))
        {
          uint64_t v51 = sub_1000053D8(&qword_10016B430);
          memcpy(v48, v49, *(void *)(*(void *)(v51 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v50 - 8) + 16))(v48, v49, v50);
          _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v48, 0, 1, v50);
        }
        *(uint64_t *)((char *)a1 + v21[11]) = *(uint64_t *)((char *)a2 + v21[11]);
        uint64_t v52 = v21[12];
        uint64_t v53 = (char *)a1 + v52;
        unint64_t v54 = (char *)a2 + v52;
        *(void *)uint64_t v53 = *(void *)v54;
        *((_WORD *)v53 + 4) = *((_WORD *)v54 + 4);
        uint64_t v55 = v21[13];
        uint64_t v56 = (char *)a1 + v55;
        uint64_t v57 = (char *)a2 + v55;
        uint64_t v58 = sub_100129220();
        swift_bridgeObjectRetain();
        if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v57, 1, v58))
        {
          uint64_t v59 = sub_1000053D8(&qword_10016B420);
          memcpy(v56, v57, *(void *)(*(void *)(v59 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v58 - 8) + 16))(v56, v57, v58);
          _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v56, 0, 1, v58);
        }
        uint64_t v60 = v21[14];
        double v61 = (char *)a1 + v60;
        double v62 = (char *)a2 + v60;
        uint64_t v63 = type metadata accessor for AggregateWeatherViewModel.SunEvent(0);
        if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v62, 1, v63))
        {
          uint64_t v64 = sub_1000053D8(&qword_10016B438);
          memcpy(v61, v62, *(void *)(*(void *)(v64 - 8) + 64));
        }
        else
        {
          swift_getEnumCaseMultiPayload();
          uint64_t v65 = sub_100129300();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v65 - 8) + 16))(v61, v62, v65);
          swift_storeEnumTagMultiPayload();
          _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v61, 0, 1, v63);
        }
      }
      swift_storeEnumTagMultiPayload();
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
  }
  return a1;
}

uint64_t sub_10001AA38(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result != 1) {
    return result;
  }
  type metadata accessor for WeatherDataViewModel();
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch(result)
  {
    case 2:
      uint64_t v23 = sub_10012BE90();
LABEL_16:
      uint64_t v28 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v23 - 8) + 8);
      return v28(a1, v23);
    case 1:
      uint64_t v24 = sub_100129330();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v24 - 8) + 8))(a1, v24);
      uint64_t v25 = type metadata accessor for InstantWeatherViewModel();
      uint64_t v26 = a1 + *(int *)(v25 + 20);
      uint64_t v27 = sub_10012A6B0();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v27 - 8) + 8))(v26, v27);
      a1 += *(int *)(v25 + 24);
      uint64_t v23 = sub_10012C250();
      goto LABEL_16;
    case 0:
      uint64_t v3 = sub_100129330();
      uint64_t v4 = *(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
      v4(a1, v3);
      int v5 = (int *)type metadata accessor for AggregateWeatherViewModel(0);
      uint64_t v6 = a1 + v5[5];
      uint64_t v7 = sub_10012A6B0();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
      uint64_t v8 = a1 + v5[6];
      uint64_t v9 = sub_10012C250();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v10 = a1 + v5[9];
      uint64_t v11 = (int *)type metadata accessor for AirQualityViewModel();
      if (!_s13WeatherWidget20WeatherDataViewModelOwet_0(v10, 1, (uint64_t)v11))
      {
        v4(v10, v3);
        uint64_t v12 = v10 + v11[5];
        uint64_t v13 = sub_100129300();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
        uint64_t v14 = v10 + v11[7];
        uint64_t v15 = sub_100129B70();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v14, v15);
        uint64_t v16 = v10 + v11[8];
        uint64_t v17 = sub_100129C50();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v17 - 8) + 8))(v16, v17);
      }
      uint64_t v18 = a1 + v5[10];
      uint64_t v19 = sub_10012C6B0();
      if (!_s13WeatherWidget20WeatherDataViewModelOwet_0(v18, 1, v19)) {
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v19 - 8) + 8))(v18, v19);
      }
      swift_bridgeObjectRelease();
      uint64_t v20 = a1 + v5[13];
      uint64_t v21 = sub_100129220();
      if (!_s13WeatherWidget20WeatherDataViewModelOwet_0(v20, 1, v21)) {
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v21 - 8) + 8))(v20, v21);
      }
      a1 += v5[14];
      uint64_t v22 = type metadata accessor for AggregateWeatherViewModel.SunEvent(0);
      uint64_t result = _s13WeatherWidget20WeatherDataViewModelOwet_0(a1, 1, v22);
      if (!result)
      {
        uint64_t v23 = sub_100129300();
        goto LABEL_16;
      }
      break;
  }
  return result;
}

char *sub_10001AE60(char *a1, char *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    type metadata accessor for WeatherDataViewModel();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v17 = sub_10012BE90();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16))(a1, a2, v17);
    }
    else if (EnumCaseMultiPayload == 1)
    {
      uint64_t v7 = sub_100129330();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
      uint64_t v8 = type metadata accessor for InstantWeatherViewModel();
      uint64_t v9 = *(int *)(v8 + 20);
      uint64_t v10 = &a1[v9];
      uint64_t v11 = &a2[v9];
      uint64_t v12 = sub_10012A6B0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
      uint64_t v13 = *(int *)(v8 + 24);
      uint64_t v14 = &a1[v13];
      uint64_t v15 = &a2[v13];
      uint64_t v16 = sub_10012C250();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
    }
    else
    {
      uint64_t v18 = sub_100129330();
      uint64_t v65 = *(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16);
      v65(a1, a2, v18);
      uint64_t v19 = (int *)type metadata accessor for AggregateWeatherViewModel(0);
      uint64_t v20 = v19[5];
      uint64_t v21 = &a1[v20];
      uint64_t v22 = &a2[v20];
      uint64_t v23 = sub_10012A6B0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
      uint64_t v24 = v19[6];
      uint64_t v25 = &a1[v24];
      uint64_t v26 = &a2[v24];
      uint64_t v27 = sub_10012C250();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
      *(void *)&a1[v19[7]] = *(void *)&a2[v19[7]];
      *(void *)&a1[v19[8]] = *(void *)&a2[v19[8]];
      uint64_t v28 = v19[9];
      uint64_t v29 = &a1[v28];
      uint64_t v30 = &a2[v28];
      uint64_t v31 = (int *)type metadata accessor for AirQualityViewModel();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v30, 1, (uint64_t)v31))
      {
        uint64_t v32 = sub_1000053D8(&qword_10016B428);
        memcpy(v29, v30, *(void *)(*(void *)(v32 - 8) + 64));
      }
      else
      {
        v65(v29, v30, v18);
        uint64_t v33 = v31[5];
        uint64_t v34 = &v29[v33];
        uint64_t v35 = &v30[v33];
        uint64_t v36 = sub_100129300();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 16))(v34, v35, v36);
        *(void *)&v29[v31[6]] = *(void *)&v30[v31[6]];
        uint64_t v37 = v31[7];
        uint64_t v38 = &v29[v37];
        uint64_t v39 = &v30[v37];
        uint64_t v40 = sub_100129B70();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v40 - 8) + 16))(v38, v39, v40);
        uint64_t v41 = v31[8];
        uint64_t v42 = &v29[v41];
        uint64_t v43 = &v30[v41];
        uint64_t v44 = sub_100129C50();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v44 - 8) + 16))(v42, v43, v44);
        _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v29, 0, 1, (uint64_t)v31);
      }
      uint64_t v45 = v19[10];
      uint64_t v46 = &a1[v45];
      uint64_t v47 = &a2[v45];
      uint64_t v48 = sub_10012C6B0();
      if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v47, 1, v48))
      {
        uint64_t v49 = sub_1000053D8(&qword_10016B430);
        memcpy(v46, v47, *(void *)(*(void *)(v49 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v48 - 8) + 16))(v46, v47, v48);
        _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v46, 0, 1, v48);
      }
      *(void *)&a1[v19[11]] = *(void *)&a2[v19[11]];
      uint64_t v50 = v19[12];
      uint64_t v51 = &a1[v50];
      uint64_t v52 = &a2[v50];
      *(void *)uint64_t v51 = *(void *)v52;
      *((_WORD *)v51 + 4) = *((_WORD *)v52 + 4);
      uint64_t v53 = v19[13];
      unint64_t v54 = &a1[v53];
      uint64_t v55 = &a2[v53];
      uint64_t v56 = sub_100129220();
      swift_bridgeObjectRetain();
      if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v55, 1, v56))
      {
        uint64_t v57 = sub_1000053D8(&qword_10016B420);
        memcpy(v54, v55, *(void *)(*(void *)(v57 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v56 - 8) + 16))(v54, v55, v56);
        _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v54, 0, 1, v56);
      }
      uint64_t v58 = v19[14];
      uint64_t v59 = &a1[v58];
      uint64_t v60 = &a2[v58];
      uint64_t v61 = type metadata accessor for AggregateWeatherViewModel.SunEvent(0);
      if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v60, 1, v61))
      {
        uint64_t v62 = sub_1000053D8(&qword_10016B438);
        memcpy(v59, v60, *(void *)(*(void *)(v62 - 8) + 64));
      }
      else
      {
        swift_getEnumCaseMultiPayload();
        uint64_t v63 = sub_100129300();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v63 - 8) + 16))(v59, v60, v63);
        swift_storeEnumTagMultiPayload();
        _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v59, 0, 1, v61);
      }
    }
    swift_storeEnumTagMultiPayload();
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

char *sub_10001B530(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1000201D8((uint64_t)a1, (void (*)(void))type metadata accessor for ForecastEntry.Model);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      type metadata accessor for WeatherDataViewModel();
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        uint64_t v17 = sub_10012BE90();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16))(a1, a2, v17);
      }
      else if (EnumCaseMultiPayload == 1)
      {
        uint64_t v7 = sub_100129330();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
        uint64_t v8 = type metadata accessor for InstantWeatherViewModel();
        uint64_t v9 = *(int *)(v8 + 20);
        uint64_t v10 = &a1[v9];
        uint64_t v11 = &a2[v9];
        uint64_t v12 = sub_10012A6B0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
        uint64_t v13 = *(int *)(v8 + 24);
        uint64_t v14 = &a1[v13];
        uint64_t v15 = &a2[v13];
        uint64_t v16 = sub_10012C250();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
      }
      else
      {
        uint64_t v18 = sub_100129330();
        unint64_t v66 = *(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16);
        v66(a1, a2, v18);
        uint64_t v19 = (int *)type metadata accessor for AggregateWeatherViewModel(0);
        uint64_t v20 = v19[5];
        uint64_t v21 = &a1[v20];
        uint64_t v22 = &a2[v20];
        uint64_t v23 = sub_10012A6B0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
        uint64_t v24 = v19[6];
        uint64_t v25 = &a1[v24];
        uint64_t v26 = &a2[v24];
        uint64_t v27 = sub_10012C250();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
        *(void *)&a1[v19[7]] = *(void *)&a2[v19[7]];
        *(void *)&a1[v19[8]] = *(void *)&a2[v19[8]];
        uint64_t v28 = v19[9];
        uint64_t v29 = &a1[v28];
        uint64_t v30 = &a2[v28];
        uint64_t v31 = (int *)type metadata accessor for AirQualityViewModel();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v30, 1, (uint64_t)v31))
        {
          uint64_t v32 = sub_1000053D8(&qword_10016B428);
          memcpy(v29, v30, *(void *)(*(void *)(v32 - 8) + 64));
        }
        else
        {
          v66(v29, v30, v18);
          uint64_t v33 = v31[5];
          uint64_t v34 = &v29[v33];
          uint64_t v35 = &v30[v33];
          uint64_t v36 = sub_100129300();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 16))(v34, v35, v36);
          *(void *)&v29[v31[6]] = *(void *)&v30[v31[6]];
          uint64_t v37 = v31[7];
          uint64_t v38 = &v29[v37];
          uint64_t v39 = &v30[v37];
          uint64_t v40 = sub_100129B70();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v40 - 8) + 16))(v38, v39, v40);
          uint64_t v41 = v31[8];
          uint64_t v42 = &v29[v41];
          uint64_t v43 = &v30[v41];
          uint64_t v44 = sub_100129C50();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v44 - 8) + 16))(v42, v43, v44);
          _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v29, 0, 1, (uint64_t)v31);
        }
        uint64_t v45 = v19[10];
        uint64_t v46 = &a1[v45];
        uint64_t v47 = &a2[v45];
        uint64_t v48 = sub_10012C6B0();
        if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v47, 1, v48))
        {
          uint64_t v49 = sub_1000053D8(&qword_10016B430);
          memcpy(v46, v47, *(void *)(*(void *)(v49 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v48 - 8) + 16))(v46, v47, v48);
          _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v46, 0, 1, v48);
        }
        *(void *)&a1[v19[11]] = *(void *)&a2[v19[11]];
        uint64_t v50 = v19[12];
        uint64_t v51 = &a1[v50];
        uint64_t v52 = &a2[v50];
        uint64_t v53 = *(void *)v52;
        *((_WORD *)v51 + 4) = *((_WORD *)v52 + 4);
        *(void *)uint64_t v51 = v53;
        uint64_t v54 = v19[13];
        uint64_t v55 = &a1[v54];
        uint64_t v56 = &a2[v54];
        uint64_t v57 = sub_100129220();
        swift_bridgeObjectRetain();
        if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v56, 1, v57))
        {
          uint64_t v58 = sub_1000053D8(&qword_10016B420);
          memcpy(v55, v56, *(void *)(*(void *)(v58 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v57 - 8) + 16))(v55, v56, v57);
          _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v55, 0, 1, v57);
        }
        uint64_t v59 = v19[14];
        uint64_t v60 = &a1[v59];
        uint64_t v61 = &a2[v59];
        uint64_t v62 = type metadata accessor for AggregateWeatherViewModel.SunEvent(0);
        if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v61, 1, v62))
        {
          uint64_t v63 = sub_1000053D8(&qword_10016B438);
          memcpy(v60, v61, *(void *)(*(void *)(v63 - 8) + 64));
        }
        else
        {
          swift_getEnumCaseMultiPayload();
          uint64_t v64 = sub_100129300();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v64 - 8) + 16))(v60, v61, v64);
          swift_storeEnumTagMultiPayload();
          _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v60, 0, 1, v62);
        }
      }
      swift_storeEnumTagMultiPayload();
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

char *sub_10001BC24(char *a1, char *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    type metadata accessor for WeatherDataViewModel();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v17 = sub_10012BE90();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32))(a1, a2, v17);
    }
    else if (EnumCaseMultiPayload == 1)
    {
      uint64_t v7 = sub_100129330();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      uint64_t v8 = type metadata accessor for InstantWeatherViewModel();
      uint64_t v9 = *(int *)(v8 + 20);
      uint64_t v10 = &a1[v9];
      uint64_t v11 = &a2[v9];
      uint64_t v12 = sub_10012A6B0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v10, v11, v12);
      uint64_t v13 = *(int *)(v8 + 24);
      uint64_t v14 = &a1[v13];
      uint64_t v15 = &a2[v13];
      uint64_t v16 = sub_10012C250();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v14, v15, v16);
    }
    else
    {
      uint64_t v18 = sub_100129330();
      uint64_t v19 = *(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32);
      v19(a1, a2, v18);
      uint64_t v20 = (int *)type metadata accessor for AggregateWeatherViewModel(0);
      uint64_t v21 = v20[5];
      uint64_t v22 = &a1[v21];
      uint64_t v23 = &a2[v21];
      uint64_t v24 = sub_10012A6B0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 32))(v22, v23, v24);
      uint64_t v25 = v20[6];
      uint64_t v26 = &a1[v25];
      uint64_t v27 = &a2[v25];
      uint64_t v28 = sub_10012C250();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 32))(v26, v27, v28);
      *(void *)&a1[v20[7]] = *(void *)&a2[v20[7]];
      *(void *)&a1[v20[8]] = *(void *)&a2[v20[8]];
      uint64_t v29 = v20[9];
      uint64_t v30 = &a1[v29];
      uint64_t v31 = &a2[v29];
      uint64_t v32 = (int *)type metadata accessor for AirQualityViewModel();
      if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v31, 1, (uint64_t)v32))
      {
        uint64_t v33 = sub_1000053D8(&qword_10016B428);
        memcpy(v30, v31, *(void *)(*(void *)(v33 - 8) + 64));
      }
      else
      {
        v19(v30, v31, v18);
        uint64_t v34 = v32[5];
        uint64_t v35 = &v30[v34];
        uint64_t v36 = &v31[v34];
        uint64_t v37 = sub_100129300();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 32))(v35, v36, v37);
        *(void *)&v30[v32[6]] = *(void *)&v31[v32[6]];
        uint64_t v38 = v32[7];
        uint64_t v39 = &v30[v38];
        uint64_t v40 = &v31[v38];
        uint64_t v41 = sub_100129B70();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v41 - 8) + 32))(v39, v40, v41);
        uint64_t v42 = v32[8];
        uint64_t v43 = &v30[v42];
        uint64_t v44 = &v31[v42];
        uint64_t v45 = sub_100129C50();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v45 - 8) + 32))(v43, v44, v45);
        _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v30, 0, 1, (uint64_t)v32);
      }
      uint64_t v46 = v20[10];
      uint64_t v47 = &a1[v46];
      uint64_t v48 = &a2[v46];
      uint64_t v49 = sub_10012C6B0();
      if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v48, 1, v49))
      {
        uint64_t v50 = sub_1000053D8(&qword_10016B430);
        memcpy(v47, v48, *(void *)(*(void *)(v50 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v49 - 8) + 32))(v47, v48, v49);
        _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v47, 0, 1, v49);
      }
      *(void *)&a1[v20[11]] = *(void *)&a2[v20[11]];
      uint64_t v51 = v20[12];
      uint64_t v52 = &a1[v51];
      uint64_t v53 = &a2[v51];
      *(void *)uint64_t v52 = *(void *)v53;
      *((_WORD *)v52 + 4) = *((_WORD *)v53 + 4);
      uint64_t v54 = v20[13];
      uint64_t v55 = &a1[v54];
      uint64_t v56 = &a2[v54];
      uint64_t v57 = sub_100129220();
      if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v56, 1, v57))
      {
        uint64_t v58 = sub_1000053D8(&qword_10016B420);
        memcpy(v55, v56, *(void *)(*(void *)(v58 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v57 - 8) + 32))(v55, v56, v57);
        _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v55, 0, 1, v57);
      }
      uint64_t v59 = v20[14];
      uint64_t v60 = &a1[v59];
      uint64_t v61 = &a2[v59];
      uint64_t v62 = type metadata accessor for AggregateWeatherViewModel.SunEvent(0);
      if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v61, 1, v62))
      {
        uint64_t v63 = sub_1000053D8(&qword_10016B438);
        memcpy(v60, v61, *(void *)(*(void *)(v63 - 8) + 64));
      }
      else
      {
        swift_getEnumCaseMultiPayload();
        uint64_t v64 = sub_100129300();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v64 - 8) + 32))(v60, v61, v64);
        swift_storeEnumTagMultiPayload();
        _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v60, 0, 1, v62);
      }
    }
    swift_storeEnumTagMultiPayload();
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

char *sub_10001C2D4(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1000201D8((uint64_t)a1, (void (*)(void))type metadata accessor for ForecastEntry.Model);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      type metadata accessor for WeatherDataViewModel();
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        uint64_t v17 = sub_10012BE90();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32))(a1, a2, v17);
      }
      else if (EnumCaseMultiPayload == 1)
      {
        uint64_t v7 = sub_100129330();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
        uint64_t v8 = type metadata accessor for InstantWeatherViewModel();
        uint64_t v9 = *(int *)(v8 + 20);
        uint64_t v10 = &a1[v9];
        uint64_t v11 = &a2[v9];
        uint64_t v12 = sub_10012A6B0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v10, v11, v12);
        uint64_t v13 = *(int *)(v8 + 24);
        uint64_t v14 = &a1[v13];
        uint64_t v15 = &a2[v13];
        uint64_t v16 = sub_10012C250();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v14, v15, v16);
      }
      else
      {
        uint64_t v18 = sub_100129330();
        uint64_t v19 = *(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32);
        v19(a1, a2, v18);
        uint64_t v20 = (int *)type metadata accessor for AggregateWeatherViewModel(0);
        uint64_t v21 = v20[5];
        uint64_t v22 = &a1[v21];
        uint64_t v23 = &a2[v21];
        uint64_t v24 = sub_10012A6B0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 32))(v22, v23, v24);
        uint64_t v25 = v20[6];
        uint64_t v26 = &a1[v25];
        uint64_t v27 = &a2[v25];
        uint64_t v28 = sub_10012C250();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 32))(v26, v27, v28);
        *(void *)&a1[v20[7]] = *(void *)&a2[v20[7]];
        *(void *)&a1[v20[8]] = *(void *)&a2[v20[8]];
        uint64_t v29 = v20[9];
        uint64_t v30 = &a1[v29];
        uint64_t v31 = &a2[v29];
        uint64_t v32 = (int *)type metadata accessor for AirQualityViewModel();
        if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v31, 1, (uint64_t)v32))
        {
          uint64_t v33 = sub_1000053D8(&qword_10016B428);
          memcpy(v30, v31, *(void *)(*(void *)(v33 - 8) + 64));
        }
        else
        {
          v19(v30, v31, v18);
          uint64_t v34 = v32[5];
          uint64_t v35 = &v30[v34];
          uint64_t v36 = &v31[v34];
          uint64_t v37 = sub_100129300();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 32))(v35, v36, v37);
          *(void *)&v30[v32[6]] = *(void *)&v31[v32[6]];
          uint64_t v38 = v32[7];
          uint64_t v39 = &v30[v38];
          uint64_t v40 = &v31[v38];
          uint64_t v41 = sub_100129B70();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v41 - 8) + 32))(v39, v40, v41);
          uint64_t v42 = v32[8];
          uint64_t v43 = &v30[v42];
          uint64_t v44 = &v31[v42];
          uint64_t v45 = sub_100129C50();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v45 - 8) + 32))(v43, v44, v45);
          _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v30, 0, 1, (uint64_t)v32);
        }
        uint64_t v46 = v20[10];
        uint64_t v47 = &a1[v46];
        uint64_t v48 = &a2[v46];
        uint64_t v49 = sub_10012C6B0();
        if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v48, 1, v49))
        {
          uint64_t v50 = sub_1000053D8(&qword_10016B430);
          memcpy(v47, v48, *(void *)(*(void *)(v50 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v49 - 8) + 32))(v47, v48, v49);
          _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v47, 0, 1, v49);
        }
        *(void *)&a1[v20[11]] = *(void *)&a2[v20[11]];
        uint64_t v51 = v20[12];
        uint64_t v52 = &a1[v51];
        uint64_t v53 = &a2[v51];
        *(void *)uint64_t v52 = *(void *)v53;
        *((_WORD *)v52 + 4) = *((_WORD *)v53 + 4);
        uint64_t v54 = v20[13];
        uint64_t v55 = &a1[v54];
        uint64_t v56 = &a2[v54];
        uint64_t v57 = sub_100129220();
        if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v56, 1, v57))
        {
          uint64_t v58 = sub_1000053D8(&qword_10016B420);
          memcpy(v55, v56, *(void *)(*(void *)(v58 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v57 - 8) + 32))(v55, v56, v57);
          _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v55, 0, 1, v57);
        }
        uint64_t v59 = v20[14];
        uint64_t v60 = &a1[v59];
        uint64_t v61 = &a2[v59];
        uint64_t v62 = type metadata accessor for AggregateWeatherViewModel.SunEvent(0);
        if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v61, 1, v62))
        {
          uint64_t v63 = sub_1000053D8(&qword_10016B438);
          memcpy(v60, v61, *(void *)(*(void *)(v63 - 8) + 64));
        }
        else
        {
          swift_getEnumCaseMultiPayload();
          uint64_t v64 = sub_100129300();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v64 - 8) + 32))(v60, v61, v64);
          swift_storeEnumTagMultiPayload();
          _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v60, 0, 1, v62);
        }
      }
      swift_storeEnumTagMultiPayload();
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_10001C9B4()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_10001C9C4()
{
  uint64_t result = type metadata accessor for WeatherDataViewModel();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

void *sub_10001CA58(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *a1 = *a2;
    uint64_t v14 = (void *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_100129300();
    uint64_t v91 = *(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16);
    uint64_t v92 = v7;
    ((void (*)(void *, void *))v91)(a1, a2);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_10012C920();
    if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v10, 1, v11))
    {
      uint64_t v12 = sub_1000053D8(&qword_10016B418);
      memcpy(v9, v10, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
      _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v9, 0, 1, v11);
    }
    uint64_t v15 = a3[6];
    uint64_t v94 = a1;
    uint64_t v16 = (char *)a1 + v15;
    uint64_t v17 = (char *)a2 + v15;
    uint64_t v18 = *(void *)((char *)a2 + v15 + 8);
    *(void *)uint64_t v16 = *(void *)((char *)a2 + v15);
    *((void *)v16 + 1) = v18;
    uint64_t v19 = *(void *)((char *)a2 + v15 + 24);
    *((void *)v16 + 2) = *(void *)((char *)a2 + v15 + 16);
    *((void *)v16 + 3) = v19;
    uint64_t v20 = *(void *)((char *)a2 + v15 + 40);
    *((void *)v16 + 4) = *(void *)((char *)a2 + v15 + 32);
    *((void *)v16 + 5) = v20;
    *((_WORD *)v16 + 24) = *(_WORD *)((char *)a2 + v15 + 48);
    v16[50] = *((unsigned char *)a2 + v15 + 50);
    v16[51] = *((unsigned char *)a2 + v15 + 51);
    uint64_t v21 = type metadata accessor for WidgetContext();
    uint64_t v22 = *(int *)(v21 + 40);
    __dst = &v16[v22];
    uint64_t v23 = &v17[v22];
    uint64_t v24 = sub_100129220();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v23, 1, v24))
    {
      uint64_t v25 = sub_1000053D8(&qword_10016B420);
      memcpy(__dst, v23, *(void *)(*(void *)(v25 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16))(__dst, v23, v24);
      _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)__dst, 0, 1, v24);
    }
    uint64_t v26 = *(int *)(v21 + 44);
    uint64_t v27 = &v16[v26];
    uint64_t v28 = &v17[v26];
    *(void *)uint64_t v27 = *(void *)v28;
    v27[8] = v28[8];
    uint64_t v29 = a3[7];
    uint64_t v14 = v94;
    uint64_t v30 = (char *)v94 + v29;
    uint64_t v31 = (char *)a2 + v29;
    uint64_t v32 = type metadata accessor for ForecastEntry.Model(0);
    swift_bridgeObjectRetain();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      type metadata accessor for WeatherDataViewModel();
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        uint64_t v44 = sub_10012BE90();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v44 - 8) + 16))(v30, v31, v44);
      }
      else if (EnumCaseMultiPayload == 1)
      {
        uint64_t v34 = sub_100129330();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 16))(v30, v31, v34);
        uint64_t v35 = type metadata accessor for InstantWeatherViewModel();
        uint64_t v36 = *(int *)(v35 + 20);
        uint64_t v37 = &v30[v36];
        uint64_t v38 = &v31[v36];
        uint64_t v39 = sub_10012A6B0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 16))(v37, v38, v39);
        uint64_t v40 = *(int *)(v35 + 24);
        uint64_t v41 = &v30[v40];
        uint64_t v42 = &v31[v40];
        uint64_t v43 = sub_10012C250();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 16))(v41, v42, v43);
      }
      else
      {
        uint64_t v90 = v24;
        uint64_t v45 = sub_100129330();
        uint64_t v46 = (void (**)(void *, const void *))(*(void *)(v45 - 8) + 16);
        uint64_t v88 = *v46;
        uint64_t v89 = v45;
        (*v46)(v30, v31);
        uint64_t v47 = (int *)type metadata accessor for AggregateWeatherViewModel(0);
        uint64_t v48 = v47[5];
        uint64_t v49 = &v30[v48];
        uint64_t v50 = &v31[v48];
        uint64_t v51 = sub_10012A6B0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v51 - 8) + 16))(v49, v50, v51);
        uint64_t v52 = v47[6];
        uint64_t v53 = &v30[v52];
        uint64_t v54 = &v31[v52];
        uint64_t v55 = sub_10012C250();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v55 - 8) + 16))(v53, v54, v55);
        *(void *)&v30[v47[7]] = *(void *)&v31[v47[7]];
        *(void *)&v30[v47[8]] = *(void *)&v31[v47[8]];
        uint64_t v56 = v47[9];
        uint64_t v57 = &v30[v56];
        uint64_t v58 = &v31[v56];
        uint64_t v59 = (int *)type metadata accessor for AirQualityViewModel();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v58, 1, (uint64_t)v59))
        {
          uint64_t v60 = sub_1000053D8(&qword_10016B428);
          memcpy(v57, v58, *(void *)(*(void *)(v60 - 8) + 64));
        }
        else
        {
          uint64_t v61 = (uint64_t)v57;
          ((void (*)(char *, char *, uint64_t))v88)(v57, v58, v89);
          v91(&v57[v59[5]], &v58[v59[5]], v92);
          *(void *)&v57[v59[6]] = *(void *)&v58[v59[6]];
          uint64_t v62 = v59[7];
          uint64_t v63 = &v57[v62];
          uint64_t v64 = &v58[v62];
          uint64_t v65 = sub_100129B70();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v65 - 8) + 16))(v63, v64, v65);
          uint64_t v66 = v59[8];
          uint64_t v67 = v61 + v66;
          uint64_t v68 = &v58[v66];
          uint64_t v69 = sub_100129C50();
          (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v69 - 8) + 16))(v67, v68, v69);
          _s13WeatherWidget20WeatherDataViewModelOwst_0(v61, 0, 1, (uint64_t)v59);
        }
        uint64_t v14 = v94;
        uint64_t v70 = v47[10];
        uint64_t v71 = &v30[v70];
        uint64_t v72 = &v31[v70];
        uint64_t v73 = sub_10012C6B0();
        if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v72, 1, v73))
        {
          uint64_t v74 = sub_1000053D8(&qword_10016B430);
          memcpy(v71, v72, *(void *)(*(void *)(v74 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v73 - 8) + 16))(v71, v72, v73);
          _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v71, 0, 1, v73);
        }
        *(void *)&v30[v47[11]] = *(void *)&v31[v47[11]];
        uint64_t v75 = v47[12];
        uint64_t v76 = &v30[v75];
        uint64_t v77 = &v31[v75];
        *(void *)uint64_t v76 = *(void *)v77;
        *((_WORD *)v76 + 4) = *((_WORD *)v77 + 4);
        uint64_t v78 = v47[13];
        uint64_t v79 = &v30[v78];
        uint64_t v80 = &v31[v78];
        swift_bridgeObjectRetain();
        if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v80, 1, v90))
        {
          uint64_t v81 = sub_1000053D8(&qword_10016B420);
          memcpy(v79, v80, *(void *)(*(void *)(v81 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v90 - 8) + 16))(v79, v80, v90);
          _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v79, 0, 1, v90);
        }
        uint64_t v82 = v47[14];
        uint64_t v83 = &v30[v82];
        uint64_t v84 = &v31[v82];
        uint64_t v85 = type metadata accessor for AggregateWeatherViewModel.SunEvent(0);
        if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v84, 1, v85))
        {
          uint64_t v86 = sub_1000053D8(&qword_10016B438);
          memcpy(v83, v84, *(void *)(*(void *)(v86 - 8) + 64));
        }
        else
        {
          swift_getEnumCaseMultiPayload();
          v91(v83, v84, v92);
          swift_storeEnumTagMultiPayload();
          _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v83, 0, 1, v85);
        }
      }
      swift_storeEnumTagMultiPayload();
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v30, v31, *(void *)(*(void *)(v32 - 8) + 64));
    }
  }
  return v14;
}

uint64_t sub_10001D344(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_100129300();
  uint64_t v40 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v40(a1, v4);
  uint64_t v5 = a1 + a2[5];
  uint64_t v6 = sub_10012C920();
  if (!_s13WeatherWidget20WeatherDataViewModelOwet_0(v5, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  }
  uint64_t v7 = a1 + a2[6];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v8 = v7 + *(int *)(type metadata accessor for WidgetContext() + 40);
  uint64_t v9 = sub_100129220();
  if (!_s13WeatherWidget20WeatherDataViewModelOwet_0(v8, 1, v9)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  }
  swift_bridgeObjectRelease();
  uint64_t v10 = a1 + a2[7];
  type metadata accessor for ForecastEntry.Model(0);
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 1)
  {
    type metadata accessor for WeatherDataViewModel();
    uint64_t result = swift_getEnumCaseMultiPayload();
    if (result == 2)
    {
      uint64_t v30 = sub_10012BE90();
      uint64_t v31 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v30 - 8) + 8);
      uint64_t v32 = v30;
      uint64_t v33 = v10;
    }
    else if (result == 1)
    {
      uint64_t v34 = sub_100129330();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v34 - 8) + 8))(v10, v34);
      uint64_t v35 = type metadata accessor for InstantWeatherViewModel();
      uint64_t v36 = v10 + *(int *)(v35 + 20);
      uint64_t v37 = sub_10012A6B0();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v37 - 8) + 8))(v36, v37);
      uint64_t v38 = v10 + *(int *)(v35 + 24);
      uint64_t v39 = sub_10012C250();
      uint64_t v31 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v39 - 8) + 8);
      uint64_t v32 = v39;
      uint64_t v33 = v38;
    }
    else
    {
      if (result) {
        return result;
      }
      uint64_t v12 = sub_100129330();
      uint64_t v13 = *(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8);
      v13(v10, v12);
      uint64_t v14 = (int *)type metadata accessor for AggregateWeatherViewModel(0);
      uint64_t v15 = v10 + v14[5];
      uint64_t v16 = sub_10012A6B0();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
      uint64_t v17 = v10 + v14[6];
      uint64_t v18 = sub_10012C250();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(v17, v18);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v19 = v10 + v14[9];
      uint64_t v20 = (int *)type metadata accessor for AirQualityViewModel();
      if (!_s13WeatherWidget20WeatherDataViewModelOwet_0(v19, 1, (uint64_t)v20))
      {
        v13(v19, v12);
        v40(v19 + v20[5], v4);
        uint64_t v21 = v19 + v20[7];
        uint64_t v22 = sub_100129B70();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v22 - 8) + 8))(v21, v22);
        uint64_t v23 = v19 + v20[8];
        uint64_t v24 = sub_100129C50();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v24 - 8) + 8))(v23, v24);
      }
      uint64_t v25 = v10 + v14[10];
      uint64_t v26 = sub_10012C6B0();
      if (!_s13WeatherWidget20WeatherDataViewModelOwet_0(v25, 1, v26)) {
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v26 - 8) + 8))(v25, v26);
      }
      swift_bridgeObjectRelease();
      uint64_t v27 = v10 + v14[13];
      if (!_s13WeatherWidget20WeatherDataViewModelOwet_0(v27, 1, v9)) {
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v27, v9);
      }
      uint64_t v28 = v10 + v14[14];
      uint64_t v29 = type metadata accessor for AggregateWeatherViewModel.SunEvent(0);
      uint64_t result = _s13WeatherWidget20WeatherDataViewModelOwet_0(v28, 1, v29);
      if (result) {
        return result;
      }
      uint64_t v33 = v28;
      uint64_t v32 = v4;
      uint64_t v31 = (uint64_t (*)(uint64_t, uint64_t))v40;
    }
    return v31(v33, v32);
  }
  return result;
}

uint64_t sub_10001D8C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100129300();
  uint64_t v90 = *(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  uint64_t v91 = v6;
  v90(a1, a2);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = sub_10012C920();
  if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v9, 1, v10))
  {
    uint64_t v11 = sub_1000053D8(&qword_10016B418);
    memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v8, 0, 1, v10);
  }
  uint64_t v92 = a3;
  uint64_t v93 = a1;
  uint64_t v12 = *(int *)(a3 + 24);
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = *(void *)(a2 + v12 + 8);
  *(void *)uint64_t v13 = *(void *)(a2 + v12);
  *(void *)(v13 + 8) = v15;
  uint64_t v16 = *(void *)(a2 + v12 + 24);
  *(void *)(v13 + 16) = *(void *)(a2 + v12 + 16);
  *(void *)(v13 + 24) = v16;
  uint64_t v17 = *(void *)(a2 + v12 + 40);
  *(void *)(v13 + 32) = *(void *)(a2 + v12 + 32);
  *(void *)(v13 + 40) = v17;
  *(_WORD *)(v13 + 48) = *(_WORD *)(a2 + v12 + 48);
  *(unsigned char *)(v13 + 50) = *(unsigned char *)(a2 + v12 + 50);
  *(unsigned char *)(v13 + 51) = *(unsigned char *)(a2 + v12 + 51);
  uint64_t v18 = type metadata accessor for WidgetContext();
  uint64_t v19 = *(int *)(v18 + 40);
  uint64_t v20 = (void *)(v13 + v19);
  uint64_t v21 = (const void *)(v14 + v19);
  uint64_t v22 = sub_100129220();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v21, 1, v22))
  {
    uint64_t v23 = sub_1000053D8(&qword_10016B420);
    memcpy(v20, v21, *(void *)(*(void *)(v23 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
    _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v20, 0, 1, v22);
  }
  uint64_t v24 = *(int *)(v18 + 44);
  uint64_t v25 = v13 + v24;
  uint64_t v26 = v14 + v24;
  *(void *)uint64_t v25 = *(void *)v26;
  *(unsigned char *)(v25 + 8) = *(unsigned char *)(v26 + 8);
  uint64_t v27 = v93;
  uint64_t v28 = *(int *)(v92 + 28);
  uint64_t v29 = (char *)(v93 + v28);
  uint64_t v30 = (char *)(a2 + v28);
  uint64_t v31 = type metadata accessor for ForecastEntry.Model(0);
  swift_bridgeObjectRetain();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    type metadata accessor for WeatherDataViewModel();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v43 = sub_10012BE90();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 16))(v29, v30, v43);
    }
    else if (EnumCaseMultiPayload == 1)
    {
      uint64_t v33 = sub_100129330();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 16))(v29, v30, v33);
      uint64_t v34 = type metadata accessor for InstantWeatherViewModel();
      uint64_t v35 = *(int *)(v34 + 20);
      uint64_t v36 = &v29[v35];
      uint64_t v37 = &v30[v35];
      uint64_t v38 = sub_10012A6B0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 16))(v36, v37, v38);
      uint64_t v39 = *(int *)(v34 + 24);
      uint64_t v40 = &v29[v39];
      uint64_t v41 = &v30[v39];
      uint64_t v42 = sub_10012C250();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v42 - 8) + 16))(v40, v41, v42);
    }
    else
    {
      uint64_t v89 = v22;
      uint64_t v44 = sub_100129330();
      uint64_t v45 = (void (**)(void *, const void *))(*(void *)(v44 - 8) + 16);
      uint64_t v87 = *v45;
      uint64_t v88 = v44;
      (*v45)(v29, v30);
      uint64_t v46 = (int *)type metadata accessor for AggregateWeatherViewModel(0);
      uint64_t v47 = v46[5];
      uint64_t v48 = &v29[v47];
      uint64_t v49 = &v30[v47];
      uint64_t v50 = sub_10012A6B0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v50 - 8) + 16))(v48, v49, v50);
      uint64_t v51 = v46[6];
      uint64_t v52 = &v29[v51];
      uint64_t v53 = &v30[v51];
      uint64_t v54 = sub_10012C250();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v54 - 8) + 16))(v52, v53, v54);
      *(void *)&v29[v46[7]] = *(void *)&v30[v46[7]];
      *(void *)&v29[v46[8]] = *(void *)&v30[v46[8]];
      uint64_t v55 = v46[9];
      uint64_t v56 = &v29[v55];
      uint64_t v57 = &v30[v55];
      uint64_t v58 = (int *)type metadata accessor for AirQualityViewModel();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v57, 1, (uint64_t)v58))
      {
        uint64_t v59 = sub_1000053D8(&qword_10016B428);
        memcpy(v56, v57, *(void *)(*(void *)(v59 - 8) + 64));
      }
      else
      {
        uint64_t v60 = (uint64_t)v56;
        ((void (*)(char *, char *, uint64_t))v87)(v56, v57, v88);
        ((void (*)(char *, char *, uint64_t))v90)(&v56[v58[5]], &v57[v58[5]], v91);
        *(void *)&v56[v58[6]] = *(void *)&v57[v58[6]];
        uint64_t v61 = v58[7];
        uint64_t v62 = &v56[v61];
        uint64_t v63 = &v57[v61];
        uint64_t v64 = sub_100129B70();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v64 - 8) + 16))(v62, v63, v64);
        uint64_t v65 = v58[8];
        uint64_t v66 = v60 + v65;
        uint64_t v67 = &v57[v65];
        uint64_t v68 = sub_100129C50();
        (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v68 - 8) + 16))(v66, v67, v68);
        _s13WeatherWidget20WeatherDataViewModelOwst_0(v60, 0, 1, (uint64_t)v58);
      }
      uint64_t v27 = v93;
      uint64_t v69 = v46[10];
      uint64_t v70 = &v29[v69];
      uint64_t v71 = &v30[v69];
      uint64_t v72 = sub_10012C6B0();
      if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v71, 1, v72))
      {
        uint64_t v73 = sub_1000053D8(&qword_10016B430);
        memcpy(v70, v71, *(void *)(*(void *)(v73 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v72 - 8) + 16))(v70, v71, v72);
        _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v70, 0, 1, v72);
      }
      *(void *)&v29[v46[11]] = *(void *)&v30[v46[11]];
      uint64_t v74 = v46[12];
      uint64_t v75 = &v29[v74];
      uint64_t v76 = &v30[v74];
      *(void *)uint64_t v75 = *(void *)v76;
      *((_WORD *)v75 + 4) = *((_WORD *)v76 + 4);
      uint64_t v77 = v46[13];
      uint64_t v78 = &v29[v77];
      uint64_t v79 = &v30[v77];
      swift_bridgeObjectRetain();
      if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v79, 1, v89))
      {
        uint64_t v80 = sub_1000053D8(&qword_10016B420);
        memcpy(v78, v79, *(void *)(*(void *)(v80 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v89 - 8) + 16))(v78, v79, v89);
        _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v78, 0, 1, v89);
      }
      uint64_t v81 = v46[14];
      uint64_t v82 = &v29[v81];
      uint64_t v83 = &v30[v81];
      uint64_t v84 = type metadata accessor for AggregateWeatherViewModel.SunEvent(0);
      if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v83, 1, v84))
      {
        uint64_t v85 = sub_1000053D8(&qword_10016B438);
        memcpy(v82, v83, *(void *)(*(void *)(v85 - 8) + 64));
      }
      else
      {
        swift_getEnumCaseMultiPayload();
        ((void (*)(char *, char *, uint64_t))v90)(v82, v83, v91);
        swift_storeEnumTagMultiPayload();
        _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v82, 0, 1, v84);
      }
    }
    swift_storeEnumTagMultiPayload();
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v29, v30, *(void *)(*(void *)(v31 - 8) + 64));
  }
  return v27;
}

uint64_t sub_10001E154(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_100129300();
  uint64_t v91 = *(void *)(v6 - 8);
  uint64_t v92 = v6;
  (*(void (**)(uint64_t, uint64_t))(v91 + 24))(a1, a2);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = sub_10012C920();
  int v11 = _s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v8, 1, v10);
  int v12 = _s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v9, 1, v10);
  if (v11)
  {
    if (!v12)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
      _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v13 = *(void *)(v10 - 8);
  if (v12)
  {
    (*(void (**)(void *, uint64_t))(v13 + 8))(v8, v10);
LABEL_6:
    uint64_t v14 = sub_1000053D8(&qword_10016B418);
    memcpy(v8, v9, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(v13 + 24))(v8, v9, v10);
LABEL_7:
  uint64_t v15 = a3[6];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  *(void *)uint64_t v16 = *(void *)(a2 + v15);
  *(void *)(v16 + 8) = *(void *)(a2 + v15 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v16 + 16) = *(void *)(v17 + 16);
  *(void *)(v16 + 24) = *(void *)(v17 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v16 + 32) = *(void *)(v17 + 32);
  *(void *)(v16 + 40) = *(void *)(v17 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v16 + 48) = *(unsigned char *)(v17 + 48);
  *(unsigned char *)(v16 + 49) = *(unsigned char *)(v17 + 49);
  *(unsigned char *)(v16 + 50) = *(unsigned char *)(v17 + 50);
  *(unsigned char *)(v16 + 51) = *(unsigned char *)(v17 + 51);
  uint64_t v18 = type metadata accessor for WidgetContext();
  uint64_t v19 = *(int *)(v18 + 40);
  uint64_t v20 = (void *)(v16 + v19);
  uint64_t v21 = (const void *)(v17 + v19);
  uint64_t v22 = sub_100129220();
  int v23 = _s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v20, 1, v22);
  int v24 = _s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v21, 1, v22);
  if (v23)
  {
    if (!v24)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
      _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v20, 0, 1, v22);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  uint64_t v25 = *(void *)(v22 - 8);
  if (v24)
  {
    (*(void (**)(void *, uint64_t))(v25 + 8))(v20, v22);
LABEL_12:
    uint64_t v26 = sub_1000053D8(&qword_10016B420);
    memcpy(v20, v21, *(void *)(*(void *)(v26 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, const void *, uint64_t))(v25 + 24))(v20, v21, v22);
LABEL_13:
  uint64_t v27 = *(int *)(v18 + 44);
  uint64_t v28 = v16 + v27;
  uint64_t v29 = v17 + v27;
  *(void *)(v16 + v27) = *(void *)v29;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v28 + 8) = *(unsigned char *)(v29 + 8);
  if (a1 != a2)
  {
    uint64_t v30 = a3[7];
    uint64_t v31 = (char *)(a1 + v30);
    uint64_t v32 = (char *)(a2 + v30);
    sub_1000201D8(a1 + v30, (void (*)(void))type metadata accessor for ForecastEntry.Model);
    uint64_t v33 = type metadata accessor for ForecastEntry.Model(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      type metadata accessor for WeatherDataViewModel();
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        uint64_t v45 = sub_10012BE90();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v45 - 8) + 16))(v31, v32, v45);
      }
      else if (EnumCaseMultiPayload == 1)
      {
        uint64_t v35 = sub_100129330();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 16))(v31, v32, v35);
        uint64_t v36 = type metadata accessor for InstantWeatherViewModel();
        uint64_t v37 = *(int *)(v36 + 20);
        uint64_t v38 = &v31[v37];
        uint64_t v39 = &v32[v37];
        uint64_t v40 = sub_10012A6B0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v40 - 8) + 16))(v38, v39, v40);
        uint64_t v41 = *(int *)(v36 + 24);
        uint64_t v42 = &v31[v41];
        uint64_t v43 = &v32[v41];
        uint64_t v44 = sub_10012C250();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v44 - 8) + 16))(v42, v43, v44);
      }
      else
      {
        uint64_t v46 = sub_100129330();
        uint64_t v88 = *(void (**)(char *, char *))(*(void *)(v46 - 8) + 16);
        uint64_t v89 = v46;
        v88(v31, v32);
        uint64_t v47 = (int *)type metadata accessor for AggregateWeatherViewModel(0);
        uint64_t v48 = v47[5];
        uint64_t v49 = &v31[v48];
        uint64_t v50 = &v32[v48];
        uint64_t v51 = sub_10012A6B0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v51 - 8) + 16))(v49, v50, v51);
        uint64_t v52 = v47[6];
        uint64_t v53 = &v31[v52];
        uint64_t v54 = &v32[v52];
        uint64_t v55 = sub_10012C250();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v55 - 8) + 16))(v53, v54, v55);
        *(void *)&v31[v47[7]] = *(void *)&v32[v47[7]];
        *(void *)&v31[v47[8]] = *(void *)&v32[v47[8]];
        uint64_t v90 = v47;
        uint64_t v56 = v47[9];
        uint64_t v57 = &v31[v56];
        uint64_t v58 = &v32[v56];
        uint64_t v59 = (int *)type metadata accessor for AirQualityViewModel();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v58, 1, (uint64_t)v59))
        {
          uint64_t v60 = sub_1000053D8(&qword_10016B428);
          memcpy(v57, v58, *(void *)(*(void *)(v60 - 8) + 64));
        }
        else
        {
          ((void (*)(char *, char *, uint64_t))v88)(v57, v58, v89);
          (*(void (**)(char *, char *, uint64_t))(v91 + 16))(&v57[v59[5]], &v58[v59[5]], v92);
          *(void *)&v57[v59[6]] = *(void *)&v58[v59[6]];
          uint64_t v61 = v59[7];
          uint64_t v62 = &v57[v61];
          uint64_t v63 = &v58[v61];
          uint64_t v64 = sub_100129B70();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v64 - 8) + 16))(v62, v63, v64);
          uint64_t v65 = v59[8];
          uint64_t v66 = &v57[v65];
          uint64_t v67 = &v58[v65];
          uint64_t v68 = sub_100129C50();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v68 - 8) + 16))(v66, v67, v68);
          _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v57, 0, 1, (uint64_t)v59);
        }
        uint64_t v69 = v90[10];
        uint64_t v70 = &v31[v69];
        uint64_t v71 = &v32[v69];
        uint64_t v72 = sub_10012C6B0();
        if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v71, 1, v72))
        {
          uint64_t v73 = sub_1000053D8(&qword_10016B430);
          memcpy(v70, v71, *(void *)(*(void *)(v73 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v72 - 8) + 16))(v70, v71, v72);
          _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v70, 0, 1, v72);
        }
        *(void *)&v31[v90[11]] = *(void *)&v32[v90[11]];
        uint64_t v74 = v90[12];
        uint64_t v75 = &v31[v74];
        uint64_t v76 = &v32[v74];
        uint64_t v77 = *(void *)v76;
        *((_WORD *)v75 + 4) = *((_WORD *)v76 + 4);
        *(void *)uint64_t v75 = v77;
        uint64_t v78 = v90[13];
        uint64_t v79 = &v31[v78];
        uint64_t v80 = &v32[v78];
        swift_bridgeObjectRetain();
        if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v80, 1, v22))
        {
          uint64_t v81 = sub_1000053D8(&qword_10016B420);
          memcpy(v79, v80, *(void *)(*(void *)(v81 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16))(v79, v80, v22);
          _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v79, 0, 1, v22);
        }
        uint64_t v82 = v90[14];
        uint64_t v83 = &v31[v82];
        uint64_t v84 = &v32[v82];
        uint64_t v85 = type metadata accessor for AggregateWeatherViewModel.SunEvent(0);
        if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v84, 1, v85))
        {
          uint64_t v86 = sub_1000053D8(&qword_10016B438);
          memcpy(v83, v84, *(void *)(*(void *)(v86 - 8) + 64));
        }
        else
        {
          swift_getEnumCaseMultiPayload();
          (*(void (**)(char *, char *, uint64_t))(v91 + 16))(v83, v84, v92);
          swift_storeEnumTagMultiPayload();
          _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v83, 0, 1, v85);
        }
      }
      swift_storeEnumTagMultiPayload();
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v31, v32, *(void *)(*(void *)(v33 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_10001EB70(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_100129300();
  uint64_t v84 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  v84(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = sub_10012C920();
  if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v9, 1, v10))
  {
    uint64_t v11 = sub_1000053D8(&qword_10016B418);
    memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
    _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v8, 0, 1, v10);
  }
  uint64_t v12 = a3[6];
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  long long v15 = *(_OWORD *)(a2 + v12 + 16);
  *(_OWORD *)uint64_t v13 = *(_OWORD *)(a2 + v12);
  *(_OWORD *)(v13 + 16) = v15;
  *(_OWORD *)(v13 + 32) = *(_OWORD *)(a2 + v12 + 32);
  *(_DWORD *)(v13 + 48) = *(_DWORD *)(a2 + v12 + 48);
  uint64_t v16 = type metadata accessor for WidgetContext();
  uint64_t v17 = *(int *)(v16 + 40);
  uint64_t v18 = (void *)(v13 + v17);
  uint64_t v19 = (const void *)(v14 + v17);
  uint64_t v20 = sub_100129220();
  if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v19, 1, v20))
  {
    uint64_t v21 = sub_1000053D8(&qword_10016B420);
    memcpy(v18, v19, *(void *)(*(void *)(v21 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v20 - 8) + 32))(v18, v19, v20);
    _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v18, 0, 1, v20);
  }
  uint64_t v22 = *(int *)(v16 + 44);
  uint64_t v23 = v13 + v22;
  uint64_t v24 = v14 + v22;
  *(void *)uint64_t v23 = *(void *)v24;
  *(unsigned char *)(v23 + 8) = *(unsigned char *)(v24 + 8);
  uint64_t v25 = a3[7];
  uint64_t v26 = (char *)(a1 + v25);
  uint64_t v27 = (char *)(a2 + v25);
  uint64_t v28 = type metadata accessor for ForecastEntry.Model(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    type metadata accessor for WeatherDataViewModel();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v40 = sub_10012BE90();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v40 - 8) + 32))(v26, v27, v40);
    }
    else if (EnumCaseMultiPayload == 1)
    {
      uint64_t v30 = sub_100129330();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 32))(v26, v27, v30);
      uint64_t v31 = type metadata accessor for InstantWeatherViewModel();
      uint64_t v32 = *(int *)(v31 + 20);
      uint64_t v33 = &v26[v32];
      uint64_t v34 = &v27[v32];
      uint64_t v35 = sub_10012A6B0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 32))(v33, v34, v35);
      uint64_t v36 = *(int *)(v31 + 24);
      uint64_t v37 = &v26[v36];
      uint64_t v38 = &v27[v36];
      uint64_t v39 = sub_10012C250();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 32))(v37, v38, v39);
    }
    else
    {
      uint64_t v41 = sub_100129330();
      uint64_t v79 = *(void (**)(char *, char *))(*(void *)(v41 - 8) + 32);
      uint64_t v81 = v41;
      v79(v26, v27);
      uint64_t v42 = (int *)type metadata accessor for AggregateWeatherViewModel(0);
      uint64_t v43 = v42[5];
      uint64_t v44 = &v26[v43];
      uint64_t v45 = &v27[v43];
      uint64_t v46 = sub_10012A6B0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v46 - 8) + 32))(v44, v45, v46);
      uint64_t v47 = v42[6];
      uint64_t v48 = &v26[v47];
      uint64_t v49 = &v27[v47];
      uint64_t v50 = sub_10012C250();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v50 - 8) + 32))(v48, v49, v50);
      *(void *)&v26[v42[7]] = *(void *)&v27[v42[7]];
      *(void *)&v26[v42[8]] = *(void *)&v27[v42[8]];
      uint64_t v51 = v42[9];
      uint64_t v52 = &v26[v51];
      uint64_t v53 = &v27[v51];
      uint64_t v54 = (int *)type metadata accessor for AirQualityViewModel();
      if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v53, 1, (uint64_t)v54))
      {
        uint64_t v55 = sub_1000053D8(&qword_10016B428);
        memcpy(v52, v53, *(void *)(*(void *)(v55 - 8) + 64));
      }
      else
      {
        ((void (*)(char *, char *, uint64_t))v79)(v52, v53, v81);
        v84((uint64_t)&v52[v54[5]], (uint64_t)&v53[v54[5]], v6);
        *(void *)&v52[v54[6]] = *(void *)&v53[v54[6]];
        uint64_t v56 = v54[7];
        uint64_t v80 = &v53[v56];
        uint64_t v82 = &v52[v56];
        uint64_t v57 = sub_100129B70();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v57 - 8) + 32))(v82, v80, v57);
        uint64_t v58 = v54[8];
        uint64_t v83 = &v52[v58];
        uint64_t v59 = &v53[v58];
        uint64_t v60 = sub_100129C50();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v60 - 8) + 32))(v83, v59, v60);
        _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v52, 0, 1, (uint64_t)v54);
      }
      uint64_t v61 = v42[10];
      uint64_t v62 = &v26[v61];
      uint64_t v63 = &v27[v61];
      uint64_t v64 = sub_10012C6B0();
      if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v63, 1, v64))
      {
        uint64_t v65 = sub_1000053D8(&qword_10016B430);
        memcpy(v62, v63, *(void *)(*(void *)(v65 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v64 - 8) + 32))(v62, v63, v64);
        _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v62, 0, 1, v64);
      }
      *(void *)&v26[v42[11]] = *(void *)&v27[v42[11]];
      uint64_t v66 = v42[12];
      uint64_t v67 = &v26[v66];
      uint64_t v68 = &v27[v66];
      *(void *)uint64_t v67 = *(void *)v68;
      *((_WORD *)v67 + 4) = *((_WORD *)v68 + 4);
      uint64_t v69 = v42[13];
      uint64_t v70 = &v26[v69];
      uint64_t v71 = &v27[v69];
      if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)&v27[v69], 1, v20))
      {
        uint64_t v72 = sub_1000053D8(&qword_10016B420);
        memcpy(v70, v71, *(void *)(*(void *)(v72 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 32))(v70, v71, v20);
        _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v70, 0, 1, v20);
      }
      uint64_t v73 = v42[14];
      uint64_t v74 = &v26[v73];
      uint64_t v75 = &v27[v73];
      uint64_t v76 = type metadata accessor for AggregateWeatherViewModel.SunEvent(0);
      if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v75, 1, v76))
      {
        uint64_t v77 = sub_1000053D8(&qword_10016B438);
        memcpy(v74, v75, *(void *)(*(void *)(v77 - 8) + 64));
      }
      else
      {
        swift_getEnumCaseMultiPayload();
        v84((uint64_t)v74, (uint64_t)v75, v6);
        swift_storeEnumTagMultiPayload();
        _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v74, 0, 1, v76);
      }
    }
    swift_storeEnumTagMultiPayload();
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v26, v27, *(void *)(*(void *)(v28 - 8) + 64));
  }
  return a1;
}

uint64_t sub_10001F3B0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_100129300();
  uint64_t v93 = *(void *)(v6 - 8);
  uint64_t v94 = v6;
  (*(void (**)(uint64_t, uint64_t))(v93 + 40))(a1, a2);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = sub_10012C920();
  int v11 = _s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v8, 1, v10);
  int v12 = _s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v9, 1, v10);
  if (v11)
  {
    if (!v12)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
      _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v13 = *(void *)(v10 - 8);
  if (v12)
  {
    (*(void (**)(void *, uint64_t))(v13 + 8))(v8, v10);
LABEL_6:
    uint64_t v14 = sub_1000053D8(&qword_10016B418);
    memcpy(v8, v9, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(v13 + 40))(v8, v9, v10);
LABEL_7:
  uint64_t v15 = a3[6];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = *(void *)(a2 + v15 + 8);
  *(void *)uint64_t v16 = *(void *)(a2 + v15);
  *(void *)(v16 + 8) = v18;
  swift_bridgeObjectRelease();
  uint64_t v19 = *(void *)(v17 + 24);
  *(void *)(v16 + 16) = *(void *)(v17 + 16);
  *(void *)(v16 + 24) = v19;
  swift_bridgeObjectRelease();
  uint64_t v20 = *(void *)(v17 + 40);
  *(void *)(v16 + 32) = *(void *)(v17 + 32);
  *(void *)(v16 + 40) = v20;
  swift_bridgeObjectRelease();
  *(_WORD *)(v16 + 48) = *(_WORD *)(v17 + 48);
  *(unsigned char *)(v16 + 50) = *(unsigned char *)(v17 + 50);
  *(unsigned char *)(v16 + 51) = *(unsigned char *)(v17 + 51);
  uint64_t v21 = type metadata accessor for WidgetContext();
  uint64_t v22 = *(int *)(v21 + 40);
  uint64_t v23 = (void *)(v16 + v22);
  uint64_t v24 = (const void *)(v17 + v22);
  uint64_t v25 = sub_100129220();
  int v26 = _s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v23, 1, v25);
  int v27 = _s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v24, 1, v25);
  if (v26)
  {
    if (!v27)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v25 - 8) + 32))(v23, v24, v25);
      _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v23, 0, 1, v25);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  uint64_t v28 = *(void *)(v25 - 8);
  if (v27)
  {
    (*(void (**)(void *, uint64_t))(v28 + 8))(v23, v25);
LABEL_12:
    uint64_t v29 = sub_1000053D8(&qword_10016B420);
    memcpy(v23, v24, *(void *)(*(void *)(v29 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, const void *, uint64_t))(v28 + 40))(v23, v24, v25);
LABEL_13:
  uint64_t v30 = *(int *)(v21 + 44);
  uint64_t v31 = v16 + v30;
  uint64_t v32 = v17 + v30;
  *(void *)(v16 + v30) = *(void *)v32;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v31 + 8) = *(unsigned char *)(v32 + 8);
  if (a1 != a2)
  {
    uint64_t v33 = a3[7];
    uint64_t v34 = (char *)(a1 + v33);
    uint64_t v35 = (char *)(a2 + v33);
    sub_1000201D8(a1 + v33, (void (*)(void))type metadata accessor for ForecastEntry.Model);
    uint64_t v36 = type metadata accessor for ForecastEntry.Model(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      type metadata accessor for WeatherDataViewModel();
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        uint64_t v48 = sub_10012BE90();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v48 - 8) + 32))(v34, v35, v48);
      }
      else if (EnumCaseMultiPayload == 1)
      {
        uint64_t v38 = sub_100129330();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 32))(v34, v35, v38);
        uint64_t v39 = type metadata accessor for InstantWeatherViewModel();
        uint64_t v40 = *(int *)(v39 + 20);
        uint64_t v41 = &v34[v40];
        uint64_t v42 = &v35[v40];
        uint64_t v43 = sub_10012A6B0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 32))(v41, v42, v43);
        uint64_t v44 = *(int *)(v39 + 24);
        uint64_t v45 = &v34[v44];
        uint64_t v46 = &v35[v44];
        uint64_t v47 = sub_10012C250();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v47 - 8) + 32))(v45, v46, v47);
      }
      else
      {
        uint64_t v49 = sub_100129330();
        uint64_t v50 = (void (**)(void *, const void *))(*(void *)(v49 - 8) + 32);
        uint64_t v90 = *v50;
        uint64_t v91 = v49;
        (*v50)(v34, v35);
        uint64_t v51 = (int *)type metadata accessor for AggregateWeatherViewModel(0);
        uint64_t v52 = v51[5];
        uint64_t v53 = &v34[v52];
        uint64_t v54 = &v35[v52];
        uint64_t v55 = sub_10012A6B0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v55 - 8) + 32))(v53, v54, v55);
        uint64_t v56 = v51[6];
        uint64_t v57 = &v34[v56];
        uint64_t v58 = &v35[v56];
        uint64_t v59 = sub_10012C250();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v59 - 8) + 32))(v57, v58, v59);
        *(void *)&v34[v51[7]] = *(void *)&v35[v51[7]];
        *(void *)&v34[v51[8]] = *(void *)&v35[v51[8]];
        uint64_t v60 = v51[9];
        uint64_t v61 = &v34[v60];
        uint64_t v62 = &v35[v60];
        uint64_t v63 = (int *)type metadata accessor for AirQualityViewModel();
        if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v62, 1, (uint64_t)v63))
        {
          uint64_t v64 = sub_1000053D8(&qword_10016B428);
          memcpy(v61, v62, *(void *)(*(void *)(v64 - 8) + 64));
        }
        else
        {
          ((void (*)(char *, char *, uint64_t))v90)(v61, v62, v91);
          (*(void (**)(char *, char *, uint64_t))(v93 + 32))(&v61[v63[5]], &v62[v63[5]], v94);
          *(void *)&v61[v63[6]] = *(void *)&v62[v63[6]];
          uint64_t v65 = v63[7];
          uint64_t v66 = &v61[v65];
          uint64_t v92 = &v62[v65];
          uint64_t v67 = sub_100129B70();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v67 - 8) + 32))(v66, v92, v67);
          uint64_t v68 = v63[8];
          uint64_t v69 = &v61[v68];
          uint64_t v70 = &v62[v68];
          uint64_t v71 = sub_100129C50();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v71 - 8) + 32))(v69, v70, v71);
          _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v61, 0, 1, (uint64_t)v63);
        }
        uint64_t v72 = v51[10];
        uint64_t v73 = &v34[v72];
        uint64_t v74 = &v35[v72];
        uint64_t v75 = sub_10012C6B0();
        if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v74, 1, v75))
        {
          uint64_t v76 = sub_1000053D8(&qword_10016B430);
          memcpy(v73, v74, *(void *)(*(void *)(v76 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v75 - 8) + 32))(v73, v74, v75);
          _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v73, 0, 1, v75);
        }
        *(void *)&v34[v51[11]] = *(void *)&v35[v51[11]];
        uint64_t v77 = v51[12];
        uint64_t v78 = &v34[v77];
        uint64_t v79 = &v35[v77];
        *(void *)uint64_t v78 = *(void *)v79;
        *((_WORD *)v78 + 4) = *((_WORD *)v79 + 4);
        uint64_t v80 = v51[13];
        uint64_t v81 = &v34[v80];
        uint64_t v82 = &v35[v80];
        if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)&v35[v80], 1, v25))
        {
          uint64_t v83 = sub_1000053D8(&qword_10016B420);
          memcpy(v81, v82, *(void *)(*(void *)(v83 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 32))(v81, v82, v25);
          _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v81, 0, 1, v25);
        }
        uint64_t v84 = v51[14];
        uint64_t v85 = &v34[v84];
        uint64_t v86 = &v35[v84];
        uint64_t v87 = type metadata accessor for AggregateWeatherViewModel.SunEvent(0);
        if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v86, 1, v87))
        {
          uint64_t v88 = sub_1000053D8(&qword_10016B438);
          memcpy(v85, v86, *(void *)(*(void *)(v88 - 8) + 64));
        }
        else
        {
          swift_getEnumCaseMultiPayload();
          (*(void (**)(char *, char *, uint64_t))(v93 + 32))(v85, v86, v94);
          swift_storeEnumTagMultiPayload();
          _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v85, 0, 1, v87);
        }
      }
      swift_storeEnumTagMultiPayload();
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v34, v35, *(void *)(*(void *)(v36 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_10001FD6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10001FD80);
}

uint64_t sub_10001FD80(uint64_t a1, uint64_t a2, int *a3)
{
  sub_100129300();
  sub_10000B3D0();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1;
  }
  else
  {
    sub_1000053D8(&qword_10016B418);
    sub_10000B3D0();
    if (*(_DWORD *)(v11 + 84) == a2)
    {
      uint64_t v8 = v10;
      uint64_t v12 = a3[5];
    }
    else
    {
      type metadata accessor for WidgetContext();
      sub_10000B3D0();
      if (*(_DWORD *)(v14 + 84) == a2)
      {
        uint64_t v8 = v13;
        uint64_t v12 = a3[6];
      }
      else
      {
        uint64_t v8 = type metadata accessor for ForecastEntry.Model(0);
        uint64_t v12 = a3[7];
      }
    }
    uint64_t v9 = a1 + v12;
  }

  return _s13WeatherWidget20WeatherDataViewModelOwet_0(v9, a2, v8);
}

uint64_t sub_10001FE48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10001FE5C);
}

uint64_t sub_10001FE5C(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  sub_100129300();
  sub_10000B3D0();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = a1;
  }
  else
  {
    sub_1000053D8(&qword_10016B418);
    sub_10000B3D0();
    if (*(_DWORD *)(v13 + 84) == a3)
    {
      uint64_t v10 = v12;
      uint64_t v14 = a4[5];
    }
    else
    {
      type metadata accessor for WidgetContext();
      sub_10000B3D0();
      if (*(_DWORD *)(v16 + 84) == a3)
      {
        uint64_t v10 = v15;
        uint64_t v14 = a4[6];
      }
      else
      {
        uint64_t v10 = type metadata accessor for ForecastEntry.Model(0);
        uint64_t v14 = a4[7];
      }
    }
    uint64_t v11 = a1 + v14;
  }

  return _s13WeatherWidget20WeatherDataViewModelOwst_0(v11, a2, a2, v10);
}

void sub_10001FF2C()
{
  sub_100129300();
  if (v0 <= 0x3F)
  {
    sub_10002006C();
    if (v1 <= 0x3F)
    {
      type metadata accessor for WidgetContext();
      if (v2 <= 0x3F)
      {
        type metadata accessor for ForecastEntry.Model(319);
        if (v3 <= 0x3F) {
          swift_initStructMetadata();
        }
      }
    }
  }
}

void sub_10002006C()
{
  if (!qword_10016B670)
  {
    sub_10012C920();
    unint64_t v0 = sub_10012CF40();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10016B670);
    }
  }
}

unint64_t sub_1000200C8()
{
  unint64_t result = qword_10016B6A8;
  if (!qword_10016B6A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016B6A8);
  }
  return result;
}

void sub_100020114()
{
}

uint64_t sub_10002012C(void *a1)
{
  return sub_10001992C(a1);
}

unint64_t sub_100020144()
{
  unint64_t result = qword_10016B6B8;
  if (!qword_10016B6B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016B6B8);
  }
  return result;
}

uint64_t sub_100020190(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000201D8(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_10000B3FC();
  sub_10000B424();
  v3();
  return a1;
}

uint64_t sub_10002022C(uint64_t a1)
{
  uint64_t v2 = sub_1000053D8(&qword_10016B418);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10002028C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000053D8(&qword_10016B418);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000202F4(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_10000B3FC();
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(a2, a1);
  return a2;
}

uint64_t sub_100020354(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_10000B3FC();
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(a2, a1);
  return a2;
}

unint64_t sub_1000203B4()
{
  unint64_t result = qword_10016B728;
  if (!qword_10016B728)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016B728);
  }
  return result;
}

unint64_t sub_100020400()
{
  unint64_t result = qword_10016B738;
  if (!qword_10016B738)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016B738);
  }
  return result;
}

unint64_t sub_10002044C()
{
  unint64_t result = qword_10016B740;
  if (!qword_10016B740)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016B740);
  }
  return result;
}

unint64_t sub_100020498()
{
  unint64_t result = qword_10016B748;
  if (!qword_10016B748)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016B748);
  }
  return result;
}

unint64_t sub_1000204E4()
{
  unint64_t result = qword_10016B788;
  if (!qword_10016B788)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016B788);
  }
  return result;
}

unint64_t sub_100020530()
{
  unint64_t result = qword_10016B790;
  if (!qword_10016B790)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016B790);
  }
  return result;
}

unint64_t sub_10002057C()
{
  unint64_t result = qword_10016B7A0;
  if (!qword_10016B7A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016B7A0);
  }
  return result;
}

unint64_t sub_1000205C8()
{
  unint64_t result = qword_10016B7A8;
  if (!qword_10016B7A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016B7A8);
  }
  return result;
}

unint64_t sub_100020614()
{
  unint64_t result = qword_10016B7D0;
  if (!qword_10016B7D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016B7D0);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for ForecastEntry.Model.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFF)
  {
    if (a2 + 1 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 1) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 2;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v5 = v6 - 2;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for ForecastEntry.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000207B4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

unsigned char *sub_1000207DC(unsigned char *result, char a2)
{
  *unint64_t result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for ForecastEntry.Model.CodingKeys()
{
  return &type metadata for ForecastEntry.Model.CodingKeys;
}

uint64_t sub_100020804()
{
  return 0;
}

ValueMetadata *type metadata accessor for ForecastEntry.Model.ErrorCodingKeys()
{
  return &type metadata for ForecastEntry.Model.ErrorCodingKeys;
}

uint64_t _s10CodingKeysOwet_0(unsigned int *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if ((a2 + 1) >= 0x10000) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) < 0x100) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4) {
    return *a1;
  }
  if (v3 == 2) {
    return *(unsigned __int16 *)a1;
  }
  return *(unsigned __int8 *)a1;
}

unsigned char *_s13WeatherWidget13ForecastEntryV5ModelO15ErrorCodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x100020908);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for ForecastEntry.Model.DataCodingKeys()
{
  return &type metadata for ForecastEntry.Model.DataCodingKeys;
}

uint64_t getEnumTagSinglePayload for RainInlineContentViewModelFactory.ContentLength(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFE)
  {
    if (a2 + 2 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 2) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 3;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v5 = v6 - 3;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *_s13WeatherWidget13ForecastEntryV5ErrorOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100020A94);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ForecastEntry.Error.CodingKeys()
{
  return &type metadata for ForecastEntry.Error.CodingKeys;
}

ValueMetadata *type metadata accessor for ForecastEntry.Error.LocationPermissionDeniedCodingKeys()
{
  return &type metadata for ForecastEntry.Error.LocationPermissionDeniedCodingKeys;
}

ValueMetadata *type metadata accessor for ForecastEntry.Error.NoLocationDataCodingKeys()
{
  return &type metadata for ForecastEntry.Error.NoLocationDataCodingKeys;
}

ValueMetadata *type metadata accessor for ForecastEntry.Error.NoWeatherDataCodingKeys()
{
  return &type metadata for ForecastEntry.Error.NoWeatherDataCodingKeys;
}

unsigned char *storeEnumTagSinglePayload for ForecastEntry.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100020BC8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ForecastEntry.CodingKeys()
{
  return &type metadata for ForecastEntry.CodingKeys;
}

unint64_t sub_100020C04()
{
  unint64_t result = qword_10016B7D8;
  if (!qword_10016B7D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016B7D8);
  }
  return result;
}

unint64_t sub_100020C54()
{
  unint64_t result = qword_10016B7E0;
  if (!qword_10016B7E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016B7E0);
  }
  return result;
}

unint64_t sub_100020CA4()
{
  unint64_t result = qword_10016B7E8;
  if (!qword_10016B7E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016B7E8);
  }
  return result;
}

unint64_t sub_100020CF4()
{
  unint64_t result = qword_10016B7F0;
  if (!qword_10016B7F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016B7F0);
  }
  return result;
}

unint64_t sub_100020D44()
{
  unint64_t result = qword_10016B7F8;
  if (!qword_10016B7F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016B7F8);
  }
  return result;
}

unint64_t sub_100020D94()
{
  unint64_t result = qword_10016B800;
  if (!qword_10016B800)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016B800);
  }
  return result;
}

unint64_t sub_100020DE4()
{
  unint64_t result = qword_10016B808;
  if (!qword_10016B808)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016B808);
  }
  return result;
}

unint64_t sub_100020E34()
{
  unint64_t result = qword_10016B810;
  if (!qword_10016B810)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016B810);
  }
  return result;
}

unint64_t sub_100020E84()
{
  unint64_t result = qword_10016B818;
  if (!qword_10016B818)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016B818);
  }
  return result;
}

unint64_t sub_100020ED4()
{
  unint64_t result = qword_10016B820;
  if (!qword_10016B820)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016B820);
  }
  return result;
}

unint64_t sub_100020F24()
{
  unint64_t result = qword_10016B828;
  if (!qword_10016B828)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016B828);
  }
  return result;
}

unint64_t sub_100020F74()
{
  unint64_t result = qword_10016B830;
  if (!qword_10016B830)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016B830);
  }
  return result;
}

unint64_t sub_100020FC4()
{
  unint64_t result = qword_10016B838;
  if (!qword_10016B838)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016B838);
  }
  return result;
}

unint64_t sub_100021014()
{
  unint64_t result = qword_10016B840;
  if (!qword_10016B840)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016B840);
  }
  return result;
}

unint64_t sub_100021064()
{
  unint64_t result = qword_10016B848;
  if (!qword_10016B848)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016B848);
  }
  return result;
}

unint64_t sub_1000210B4()
{
  unint64_t result = qword_10016B850;
  if (!qword_10016B850)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016B850);
  }
  return result;
}

unint64_t sub_100021104()
{
  unint64_t result = qword_10016B858;
  if (!qword_10016B858)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016B858);
  }
  return result;
}

unint64_t sub_100021154()
{
  unint64_t result = qword_10016B860;
  if (!qword_10016B860)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016B860);
  }
  return result;
}

unint64_t sub_1000211A4()
{
  unint64_t result = qword_10016B868;
  if (!qword_10016B868)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016B868);
  }
  return result;
}

unint64_t sub_1000211F4()
{
  unint64_t result = qword_10016B870;
  if (!qword_10016B870)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016B870);
  }
  return result;
}

unint64_t sub_100021244()
{
  unint64_t result = qword_10016B878;
  if (!qword_10016B878)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016B878);
  }
  return result;
}

uint64_t sub_1000212B8()
{
  return *(void *)(v0 - 104);
}

uint64_t sub_1000212CC()
{
  return v0;
}

void sub_100021344(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 120) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

void sub_100021360(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 112) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t sub_10002137C()
{
  return sub_10012D150();
}

uint64_t sub_100021398()
{
  return sub_10012D0C0();
}

uint64_t sub_1000213BC()
{
  return v0;
}

uint64_t sub_1000213EC()
{
  return v0;
}

uint64_t sub_100021404()
{
  return sub_10012D0C0();
}

uint64_t sub_100021420()
{
  return v0;
}

void *sub_100021434(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1000235F8((uint64_t)a1, &qword_10016B410);
    sub_1000053D8(&qword_10016B410);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_10012C800();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_100129300();
  uint64_t v97 = *(void *)(v10 - 8);
  uint64_t v98 = v10;
  (*(void (**)(char *, char *))(v97 + 24))(v8, v9);
  uint64_t v11 = type metadata accessor for ForecastEntry(0);
  uint64_t v12 = *(int *)(v11 + 20);
  uint64_t v13 = &v8[v12];
  uint64_t v14 = &v9[v12];
  uint64_t v15 = sub_10012C920();
  int v16 = _s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v13, 1, v15);
  int v17 = _s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v14, 1, v15);
  uint64_t v100 = a1;
  if (v16)
  {
    if (!v17)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
      _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v13, 0, 1, v15);
      goto LABEL_12;
    }
    goto LABEL_11;
  }
  uint64_t v18 = *(void *)(v15 - 8);
  if (v17)
  {
    (*(void (**)(char *, uint64_t))(v18 + 8))(v13, v15);
LABEL_11:
    uint64_t v19 = sub_1000053D8(&qword_10016B418);
    memcpy(v13, v14, *(void *)(*(void *)(v19 - 8) + 64));
    goto LABEL_12;
  }
  (*(void (**)(char *, char *, uint64_t))(v18 + 24))(v13, v14, v15);
LABEL_12:
  uint64_t v99 = v11;
  uint64_t v20 = *(int *)(v11 + 24);
  uint64_t v21 = &v8[v20];
  uint64_t v22 = &v9[v20];
  *(void *)uint64_t v21 = *(void *)&v9[v20];
  *((void *)v21 + 1) = *(void *)&v9[v20 + 8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v21 + 2) = *((void *)v22 + 2);
  *((void *)v21 + 3) = *((void *)v22 + 3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v21 + 4) = *((void *)v22 + 4);
  *((void *)v21 + 5) = *((void *)v22 + 5);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v21[48] = v22[48];
  v21[49] = v22[49];
  v21[50] = v22[50];
  v21[51] = v22[51];
  uint64_t v23 = type metadata accessor for WidgetContext();
  uint64_t v24 = *(int *)(v23 + 40);
  uint64_t v25 = &v21[v24];
  int v26 = &v22[v24];
  uint64_t v27 = sub_100129220();
  int v28 = _s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v25, 1, v27);
  int v29 = _s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v26, 1, v27);
  if (v28)
  {
    if (!v29)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
      _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v25, 0, 1, v27);
      goto LABEL_18;
    }
    goto LABEL_17;
  }
  uint64_t v30 = *(void *)(v27 - 8);
  if (v29)
  {
    (*(void (**)(char *, uint64_t))(v30 + 8))(v25, v27);
LABEL_17:
    uint64_t v31 = sub_1000053D8(&qword_10016B420);
    memcpy(v25, v26, *(void *)(*(void *)(v31 - 8) + 64));
    goto LABEL_18;
  }
  (*(void (**)(char *, char *, uint64_t))(v30 + 24))(v25, v26, v27);
LABEL_18:
  uint64_t v32 = *(int *)(v23 + 44);
  uint64_t v33 = &v21[v32];
  uint64_t v34 = &v22[v32];
  *(void *)uint64_t v33 = *(void *)v34;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v33[8] = v34[8];
  uint64_t v35 = v100;
  if (v100 != a2)
  {
    uint64_t v36 = *(int *)(v99 + 28);
    uint64_t v37 = &v8[v36];
    uint64_t v38 = &v9[v36];
    sub_10002364C((uint64_t)&v8[v36], (void (*)(void))type metadata accessor for ForecastEntry.Model);
    uint64_t v39 = type metadata accessor for ForecastEntry.Model(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      type metadata accessor for WeatherDataViewModel();
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        uint64_t v51 = sub_10012BE90();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v51 - 8) + 16))(v37, v38, v51);
      }
      else if (EnumCaseMultiPayload == 1)
      {
        uint64_t v41 = sub_100129330();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v41 - 8) + 16))(v37, v38, v41);
        uint64_t v42 = type metadata accessor for InstantWeatherViewModel();
        uint64_t v43 = *(int *)(v42 + 20);
        uint64_t v44 = &v37[v43];
        uint64_t v45 = &v38[v43];
        uint64_t v46 = sub_10012A6B0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v46 - 8) + 16))(v44, v45, v46);
        uint64_t v47 = *(int *)(v42 + 24);
        uint64_t v48 = &v37[v47];
        uint64_t v49 = &v38[v47];
        uint64_t v50 = sub_10012C250();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v50 - 8) + 16))(v48, v49, v50);
      }
      else
      {
        uint64_t v52 = sub_100129330();
        uint64_t v95 = *(void (**)(char *, char *))(*(void *)(v52 - 8) + 16);
        uint64_t v96 = v52;
        v95(v37, v38);
        uint64_t v53 = (int *)type metadata accessor for AggregateWeatherViewModel(0);
        uint64_t v54 = v53[5];
        uint64_t v55 = &v37[v54];
        uint64_t v56 = &v38[v54];
        uint64_t v57 = sub_10012A6B0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v57 - 8) + 16))(v55, v56, v57);
        uint64_t v58 = v53[6];
        uint64_t v59 = &v37[v58];
        uint64_t v60 = &v38[v58];
        uint64_t v61 = sub_10012C250();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v61 - 8) + 16))(v59, v60, v61);
        *(void *)&v37[v53[7]] = *(void *)&v38[v53[7]];
        *(void *)&v37[v53[8]] = *(void *)&v38[v53[8]];
        uint64_t v62 = v53[9];
        uint64_t v63 = &v37[v62];
        uint64_t v64 = &v38[v62];
        uint64_t v65 = (int *)type metadata accessor for AirQualityViewModel();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v64, 1, (uint64_t)v65))
        {
          uint64_t v66 = sub_1000053D8(&qword_10016B428);
          memcpy(v63, v64, *(void *)(*(void *)(v66 - 8) + 64));
        }
        else
        {
          uint64_t v67 = (uint64_t)v63;
          ((void (*)(char *, char *, uint64_t))v95)(v63, v64, v96);
          (*(void (**)(char *, char *, uint64_t))(v97 + 16))(&v63[v65[5]], &v64[v65[5]], v98);
          *(void *)&v63[v65[6]] = *(void *)&v64[v65[6]];
          uint64_t v68 = v65[7];
          uint64_t v69 = &v63[v68];
          uint64_t v70 = &v64[v68];
          uint64_t v71 = sub_100129B70();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v71 - 8) + 16))(v69, v70, v71);
          uint64_t v72 = v65[8];
          uint64_t v73 = v67 + v72;
          uint64_t v74 = &v64[v72];
          uint64_t v75 = sub_100129C50();
          (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v75 - 8) + 16))(v73, v74, v75);
          _s13WeatherWidget20WeatherDataViewModelOwst_0(v67, 0, 1, (uint64_t)v65);
        }
        uint64_t v76 = v53[10];
        uint64_t v77 = &v37[v76];
        uint64_t v78 = &v38[v76];
        uint64_t v79 = sub_10012C6B0();
        uint64_t v35 = v100;
        if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v78, 1, v79))
        {
          uint64_t v80 = sub_1000053D8(&qword_10016B430);
          memcpy(v77, v78, *(void *)(*(void *)(v80 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v79 - 8) + 16))(v77, v78, v79);
          _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v77, 0, 1, v79);
        }
        *(void *)&v37[v53[11]] = *(void *)&v38[v53[11]];
        uint64_t v81 = v53[12];
        uint64_t v82 = &v37[v81];
        uint64_t v83 = &v38[v81];
        uint64_t v84 = *(void *)v83;
        *((_WORD *)v82 + 4) = *((_WORD *)v83 + 4);
        *(void *)uint64_t v82 = v84;
        uint64_t v85 = v53[13];
        uint64_t v86 = &v37[v85];
        uint64_t v87 = &v38[v85];
        swift_bridgeObjectRetain();
        if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v87, 1, v27))
        {
          uint64_t v88 = sub_1000053D8(&qword_10016B420);
          memcpy(v86, v87, *(void *)(*(void *)(v88 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16))(v86, v87, v27);
          _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v86, 0, 1, v27);
        }
        uint64_t v89 = v53[14];
        uint64_t v90 = &v37[v89];
        uint64_t v91 = &v38[v89];
        uint64_t v92 = type metadata accessor for AggregateWeatherViewModel.SunEvent(0);
        if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v91, 1, v92))
        {
          uint64_t v93 = sub_1000053D8(&qword_10016B438);
          memcpy(v90, v91, *(void *)(*(void *)(v93 - 8) + 64));
        }
        else
        {
          swift_getEnumCaseMultiPayload();
          (*(void (**)(char *, char *, uint64_t))(v97 + 16))(v90, v91, v98);
          swift_storeEnumTagMultiPayload();
          _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v90, 0, 1, v92);
        }
      }
      swift_storeEnumTagMultiPayload();
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v37, v38, *(void *)(*(void *)(v39 - 8) + 64));
    }
  }
  return v35;
}

char *sub_100021F1C(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1000235F8((uint64_t)a1, &qword_10016B410);
    uint64_t v6 = sub_1000053D8(&qword_10016B410);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_10012C800();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
  }
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = sub_100129300();
  uint64_t v99 = *(void *)(v11 - 8);
  uint64_t v100 = v11;
  (*(void (**)(char *, char *))(v99 + 40))(v9, v10);
  uint64_t v12 = type metadata accessor for ForecastEntry(0);
  uint64_t v13 = *(int *)(v12 + 20);
  uint64_t v14 = &v9[v13];
  uint64_t v15 = &v10[v13];
  uint64_t v16 = sub_10012C920();
  int v17 = _s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v14, 1, v16);
  int v18 = _s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v15, 1, v16);
  uint64_t v103 = a1;
  if (v17)
  {
    if (!v18)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v14, v15, v16);
      _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v14, 0, 1, v16);
      goto LABEL_11;
    }
    goto LABEL_10;
  }
  uint64_t v19 = *(void *)(v16 - 8);
  if (v18)
  {
    (*(void (**)(char *, uint64_t))(v19 + 8))(v14, v16);
LABEL_10:
    uint64_t v20 = sub_1000053D8(&qword_10016B418);
    memcpy(v14, v15, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_11;
  }
  (*(void (**)(char *, char *, uint64_t))(v19 + 40))(v14, v15, v16);
LABEL_11:
  uint64_t v102 = v12;
  uint64_t v21 = *(int *)(v12 + 24);
  uint64_t v22 = &v9[v21];
  uint64_t v23 = &v10[v21];
  uint64_t v24 = *(void *)&v10[v21 + 8];
  *(void *)uint64_t v22 = *(void *)&v10[v21];
  *((void *)v22 + 1) = v24;
  swift_bridgeObjectRelease();
  uint64_t v25 = *((void *)v23 + 3);
  *((void *)v22 + 2) = *((void *)v23 + 2);
  *((void *)v22 + 3) = v25;
  swift_bridgeObjectRelease();
  uint64_t v26 = *((void *)v23 + 5);
  *((void *)v22 + 4) = *((void *)v23 + 4);
  *((void *)v22 + 5) = v26;
  swift_bridgeObjectRelease();
  *((_WORD *)v22 + 24) = *((_WORD *)v23 + 24);
  v22[50] = v23[50];
  v22[51] = v23[51];
  uint64_t v27 = type metadata accessor for WidgetContext();
  uint64_t v28 = *(int *)(v27 + 40);
  int v29 = &v22[v28];
  uint64_t v30 = &v23[v28];
  uint64_t v31 = sub_100129220();
  int v32 = _s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v29, 1, v31);
  int v33 = _s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v30, 1, v31);
  uint64_t v101 = v31;
  if (v32)
  {
    if (!v33)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 32))(v29, v30, v31);
      _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v29, 0, 1, v31);
      goto LABEL_17;
    }
    goto LABEL_16;
  }
  uint64_t v34 = *(void *)(v31 - 8);
  if (v33)
  {
    (*(void (**)(char *, uint64_t))(v34 + 8))(v29, v31);
LABEL_16:
    uint64_t v35 = sub_1000053D8(&qword_10016B420);
    memcpy(v29, v30, *(void *)(*(void *)(v35 - 8) + 64));
    goto LABEL_17;
  }
  (*(void (**)(char *, char *, uint64_t))(v34 + 40))(v29, v30, v31);
LABEL_17:
  uint64_t v36 = *(int *)(v27 + 44);
  uint64_t v37 = &v22[v36];
  uint64_t v38 = &v23[v36];
  *(void *)uint64_t v37 = *(void *)&v23[v36];
  swift_bridgeObjectRelease();
  v37[8] = v38[8];
  uint64_t v39 = v103;
  if (v103 != a2)
  {
    uint64_t v40 = *(int *)(v102 + 28);
    uint64_t v41 = &v9[v40];
    uint64_t v42 = &v10[v40];
    sub_10002364C((uint64_t)&v9[v40], (void (*)(void))type metadata accessor for ForecastEntry.Model);
    uint64_t v43 = type metadata accessor for ForecastEntry.Model(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      type metadata accessor for WeatherDataViewModel();
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        uint64_t v55 = sub_10012BE90();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v55 - 8) + 32))(v41, v42, v55);
      }
      else if (EnumCaseMultiPayload == 1)
      {
        uint64_t v45 = sub_100129330();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v45 - 8) + 32))(v41, v42, v45);
        uint64_t v46 = type metadata accessor for InstantWeatherViewModel();
        uint64_t v47 = *(int *)(v46 + 20);
        uint64_t v48 = &v41[v47];
        uint64_t v49 = &v42[v47];
        uint64_t v50 = sub_10012A6B0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v50 - 8) + 32))(v48, v49, v50);
        uint64_t v51 = *(int *)(v46 + 24);
        uint64_t v52 = &v41[v51];
        uint64_t v53 = &v42[v51];
        uint64_t v54 = sub_10012C250();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v54 - 8) + 32))(v52, v53, v54);
      }
      else
      {
        uint64_t v56 = sub_100129330();
        uint64_t v57 = *(void (**)(char *, char *))(*(void *)(v56 - 8) + 32);
        uint64_t v98 = v56;
        v57(v41, v42);
        uint64_t v58 = (int *)type metadata accessor for AggregateWeatherViewModel(0);
        uint64_t v59 = v58[5];
        uint64_t v60 = &v41[v59];
        uint64_t v61 = &v42[v59];
        uint64_t v62 = sub_10012A6B0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v62 - 8) + 32))(v60, v61, v62);
        uint64_t v63 = v58[6];
        uint64_t v64 = &v41[v63];
        uint64_t v65 = &v42[v63];
        uint64_t v66 = sub_10012C250();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v66 - 8) + 32))(v64, v65, v66);
        *(void *)&v41[v58[7]] = *(void *)&v42[v58[7]];
        *(void *)&v41[v58[8]] = *(void *)&v42[v58[8]];
        uint64_t v67 = v58[9];
        uint64_t v68 = &v41[v67];
        uint64_t v69 = &v42[v67];
        uint64_t v70 = (int *)type metadata accessor for AirQualityViewModel();
        if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v69, 1, (uint64_t)v70))
        {
          uint64_t v71 = sub_1000053D8(&qword_10016B428);
          memcpy(v68, v69, *(void *)(*(void *)(v71 - 8) + 64));
        }
        else
        {
          ((void (*)(char *, char *, uint64_t))v57)(v68, v69, v98);
          (*(void (**)(char *, char *, uint64_t))(v99 + 32))(&v68[v70[5]], &v69[v70[5]], v100);
          *(void *)&v68[v70[6]] = *(void *)&v69[v70[6]];
          uint64_t v72 = v70[7];
          uint64_t v73 = &v68[v72];
          uint64_t v74 = &v69[v72];
          uint64_t v75 = sub_100129B70();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v75 - 8) + 32))(v73, v74, v75);
          uint64_t v76 = v70[8];
          uint64_t v77 = &v68[v76];
          uint64_t v78 = &v69[v76];
          uint64_t v79 = sub_100129C50();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v79 - 8) + 32))(v77, v78, v79);
          _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v68, 0, 1, (uint64_t)v70);
        }
        uint64_t v80 = v58[10];
        uint64_t v81 = &v41[v80];
        uint64_t v82 = &v42[v80];
        uint64_t v83 = sub_10012C6B0();
        uint64_t v39 = v103;
        if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v82, 1, v83))
        {
          uint64_t v84 = sub_1000053D8(&qword_10016B430);
          memcpy(v81, v82, *(void *)(*(void *)(v84 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v83 - 8) + 32))(v81, v82, v83);
          _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v81, 0, 1, v83);
        }
        *(void *)&v41[v58[11]] = *(void *)&v42[v58[11]];
        uint64_t v85 = v58[12];
        uint64_t v86 = &v41[v85];
        uint64_t v87 = &v42[v85];
        *(void *)uint64_t v86 = *(void *)v87;
        *((_WORD *)v86 + 4) = *((_WORD *)v87 + 4);
        uint64_t v88 = v58[13];
        uint64_t v89 = &v41[v88];
        uint64_t v90 = &v42[v88];
        if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)&v42[v88], 1, v101))
        {
          uint64_t v91 = sub_1000053D8(&qword_10016B420);
          memcpy(v89, v90, *(void *)(*(void *)(v91 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v101 - 8) + 32))(v89, v90, v101);
          _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v89, 0, 1, v101);
        }
        uint64_t v92 = v58[14];
        uint64_t v93 = &v41[v92];
        uint64_t v94 = &v42[v92];
        uint64_t v95 = type metadata accessor for AggregateWeatherViewModel.SunEvent(0);
        if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v94, 1, v95))
        {
          uint64_t v96 = sub_1000053D8(&qword_10016B438);
          memcpy(v93, v94, *(void *)(*(void *)(v96 - 8) + 64));
        }
        else
        {
          swift_getEnumCaseMultiPayload();
          (*(void (**)(char *, char *, uint64_t))(v99 + 32))(v93, v94, v100);
          swift_storeEnumTagMultiPayload();
          _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v93, 0, 1, v95);
        }
      }
      swift_storeEnumTagMultiPayload();
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v41, v42, *(void *)(*(void *)(v43 - 8) + 64));
    }
  }
  return v39;
}

uint64_t sub_1000229B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000229CC);
}

uint64_t sub_1000229CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1000053D8(&qword_10016B440);
  sub_10000B3D0();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1;
  }
  else
  {
    uint64_t v8 = type metadata accessor for ForecastEntry(0);
    uint64_t v9 = a1 + *(int *)(a3 + 20);
  }

  return _s13WeatherWidget20WeatherDataViewModelOwet_0(v9, a2, v8);
}

uint64_t sub_100022A4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100022A60);
}

uint64_t sub_100022A60(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_1000053D8(&qword_10016B440);
  sub_10000B3D0();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = a1;
  }
  else
  {
    uint64_t v10 = type metadata accessor for ForecastEntry(0);
    uint64_t v11 = a1 + *(int *)(a4 + 20);
  }

  return _s13WeatherWidget20WeatherDataViewModelOwst_0(v11, a2, a2, v10);
}

uint64_t type metadata accessor for AdaptiveConditionsContentView()
{
  uint64_t result = qword_10016B8D8;
  if (!qword_10016B8D8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100022B30()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100022B4C@<X0>(uint64_t a1@<X8>)
{
  return sub_100022B54(v1, a1);
}

uint64_t sub_100022B54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v50 = a2;
  uint64_t v42 = sub_1000053D8(&qword_10016B910);
  __chkstk_darwin(v42);
  uint64_t v43 = (uint64_t)&v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = sub_1000053D8(&qword_10016B918);
  __chkstk_darwin(v49);
  uint64_t v45 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = type metadata accessor for AdaptiveConditionsInlineContentView();
  __chkstk_darwin(v41);
  uint64_t v44 = (uint64_t)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = sub_1000053D8(&qword_10016B920);
  __chkstk_darwin(v48);
  uint64_t v46 = (uint64_t)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = sub_1000053D8(&qword_10016B928);
  __chkstk_darwin(v40);
  uint64_t v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = sub_1000053D8(&qword_10016B930);
  __chkstk_darwin(v47);
  uint64_t v10 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for AdaptiveConditionsRectangularContentView();
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for AdaptiveConditionsContentView();
  uint64_t v15 = __chkstk_darwin(v14);
  uint64_t v37 = (uint64_t)&v37 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  int v18 = (char *)&v37 - v17;
  uint64_t v19 = sub_10012C800();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v38 = (uint64_t)&v37 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  uint64_t v24 = (char *)&v37 - v23;
  sub_10008F554((uint64_t)&v37 - v23);
  uint64_t v39 = v20;
  uint64_t v25 = v24;
  uint64_t v26 = v19;
  int v27 = (*(uint64_t (**)(char *, uint64_t))(v20 + 88))(v25, v19);
  if (v27 == enum case for WidgetFamily.accessoryCircular(_:))
  {
    sub_1000235A4(a1, (uint64_t)v18, (void (*)(void))type metadata accessor for AdaptiveConditionsContentView);
    uint64_t v51 = 0;
    unint64_t v52 = 0xE000000000000000;
    sub_10012CFD0(63);
    v53._countAndFlagsBits = 0xD000000000000021;
    v53._object = (void *)0x8000000100138E70;
    sub_10012CAF0(v53);
    uint64_t v35 = v38;
    sub_10008F554(v38);
    sub_1000234B0(&qword_10016B508, (void (*)(uint64_t))&type metadata accessor for WidgetFamily);
    v54._countAndFlagsBits = sub_10012D1D0();
    sub_10012CAF0(v54);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v35, v26);
    v55._object = (void *)0x8000000100138F30;
    v55._countAndFlagsBits = 0xD00000000000001CLL;
    sub_10012CAF0(v55);
  }
  else
  {
    if (v27 == enum case for WidgetFamily.accessoryRectangular(_:))
    {
      sub_1000C870C((uint64_t)v13);
      uint64_t v28 = *(int *)(v11 + 20);
      type metadata accessor for ConditionsEvaluationManager();
      *(void *)&v13[v28] = swift_allocObject();
      sub_1000235A4((uint64_t)v13, (uint64_t)v8, (void (*)(void))type metadata accessor for AdaptiveConditionsRectangularContentView);
      swift_storeEnumTagMultiPayload();
      sub_1000234B0(&qword_10016B948, (void (*)(uint64_t))type metadata accessor for AdaptiveConditionsRectangularContentView);
      sub_10012B0E0();
      sub_10000B114((uint64_t)v10, v46, &qword_10016B930);
      swift_storeEnumTagMultiPayload();
      sub_100023404();
      sub_1000234F8();
      sub_10012B0E0();
      sub_1000235F8((uint64_t)v10, &qword_10016B930);
      int v29 = type metadata accessor for AdaptiveConditionsRectangularContentView;
      uint64_t v30 = (uint64_t)v13;
      return sub_10002364C(v30, (void (*)(void))v29);
    }
    if (v27 == enum case for WidgetFamily.accessoryInline(_:))
    {
      uint64_t v31 = v44;
      sub_1000C870C(v44);
      uint64_t v32 = *(int *)(v41 + 20);
      type metadata accessor for ConditionsEvaluationManager();
      *(void *)(v31 + v32) = swift_allocObject();
      sub_1000235A4(v31, v43, (void (*)(void))type metadata accessor for AdaptiveConditionsInlineContentView);
      swift_storeEnumTagMultiPayload();
      sub_1000234B0(&qword_10016B938, (void (*)(uint64_t))type metadata accessor for AdaptiveConditionsInlineContentView);
      uint64_t v33 = (uint64_t)v45;
      sub_10012B0E0();
      sub_10000B114(v33, v46, &qword_10016B918);
      swift_storeEnumTagMultiPayload();
      sub_100023404();
      sub_1000234F8();
      sub_10012B0E0();
      sub_1000235F8(v33, &qword_10016B918);
      int v29 = type metadata accessor for AdaptiveConditionsInlineContentView;
      uint64_t v30 = v31;
      return sub_10002364C(v30, (void (*)(void))v29);
    }
    sub_1000235A4(a1, v37, (void (*)(void))type metadata accessor for AdaptiveConditionsContentView);
    uint64_t v51 = 0;
    unint64_t v52 = 0xE000000000000000;
    sub_10012CFD0(64);
    v56._countAndFlagsBits = 0xD000000000000022;
    v56._object = (void *)0x8000000100138E20;
    sub_10012CAF0(v56);
    uint64_t v36 = v38;
    sub_10008F554(v38);
    sub_1000234B0(&qword_10016B508, (void (*)(uint64_t))&type metadata accessor for WidgetFamily);
    v57._countAndFlagsBits = sub_10012D1D0();
    sub_10012CAF0(v57);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v36, v19);
    v58._object = (void *)0x8000000100138F30;
    v58._countAndFlagsBits = 0xD00000000000001CLL;
    sub_10012CAF0(v58);
  }
  uint64_t result = sub_10012D070();
  __break(1u);
  return result;
}

unint64_t sub_100023404()
{
  unint64_t result = qword_10016B940;
  if (!qword_10016B940)
  {
    sub_100005470(&qword_10016B930);
    sub_1000234B0(&qword_10016B948, (void (*)(uint64_t))type metadata accessor for AdaptiveConditionsRectangularContentView);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016B940);
  }
  return result;
}

uint64_t sub_1000234B0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1000234F8()
{
  unint64_t result = qword_10016B950;
  if (!qword_10016B950)
  {
    sub_100005470(&qword_10016B918);
    sub_1000234B0(&qword_10016B938, (void (*)(uint64_t))type metadata accessor for AdaptiveConditionsInlineContentView);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016B950);
  }
  return result;
}

uint64_t sub_1000235A4(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_10000B3FC();
  uint64_t v4 = sub_10000B430();
  v5(v4);
  return a2;
}

uint64_t sub_1000235F8(uint64_t a1, uint64_t *a2)
{
  sub_1000053D8(a2);
  sub_10000B3FC();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_10002364C(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_10000B3FC();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

unint64_t sub_1000236A8()
{
  unint64_t result = qword_10016B958;
  if (!qword_10016B958)
  {
    sub_100005470(&qword_10016B960);
    sub_10002371C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016B958);
  }
  return result;
}

unint64_t sub_10002371C()
{
  unint64_t result = qword_10016B968;
  if (!qword_10016B968)
  {
    sub_100005470(&qword_10016B970);
    sub_100023404();
    sub_1000234F8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016B968);
  }
  return result;
}

uint64_t sub_100023798(uint64_t a1, uint64_t a2)
{
  sub_1000053D8(&qword_10016B978);
  sub_10000DB98();
  __chkstk_darwin(v4);
  sub_1000053D8(&qword_10016B980);
  sub_10000DB98();
  __chkstk_darwin(v5);
  sub_10000DBCC();
  sub_1000053D8(&qword_10016B988);
  sub_10000DB98();
  __chkstk_darwin(v6);
  sub_10000DBCC();
  sub_1000053D8(&qword_10016B990);
  sub_10000DB98();
  __chkstk_darwin(v7);
  sub_10000DBCC();
  type metadata accessor for WeatherTimelineProvider();
  swift_allocObject();
  swift_bridgeObjectRetain();
  sub_100118DBC(65, a1, a2);
  type metadata accessor for WeatherIntent();
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1000053D8(&qword_10016B998);
  type metadata accessor for DailyForecastContentView();
  sub_100005470(&qword_10016B9A0);
  sub_1000245C4(&qword_10016B9A8, (void (*)(uint64_t))type metadata accessor for DailyForecastContentView);
  sub_10000B38C(&qword_10016B9B0, &qword_10016B9A0);
  sub_1000247F0();
  sub_1000245C4(&qword_10016B9B8, (void (*)(uint64_t))type metadata accessor for WeatherTimelineProvider);
  sub_10012C880();
  sub_10012AF80();
  uint64_t v8 = sub_10012B400();
  uint64_t v10 = v9;
  char v12 = v11 & 1;
  sub_10000B38C(&qword_10016B9C0, &qword_10016B978);
  sub_10012B0B0();
  sub_100008278(v8, v10, v12);
  swift_bridgeObjectRelease();
  sub_10000B424();
  v13();
  sub_1000053D8(&qword_10016B9C8);
  uint64_t v14 = sub_10012C800();
  sub_10000DB98();
  uint64_t v16 = v15;
  unint64_t v17 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  uint64_t v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_100130010;
  (*(void (**)(unint64_t, void, uint64_t))(v16 + 104))(v18 + v17, enum case for WidgetFamily.systemSmall(_:), v14);
  sub_1000247F0();
  sub_10012B090();
  swift_bridgeObjectRelease();
  sub_10000B424();
  v19();
  sub_10012AF80();
  uint64_t v20 = sub_10012B400();
  uint64_t v22 = v21;
  char v24 = v23 & 1;
  sub_1000247F0();
  sub_10012B070();
  sub_100008278(v20, v22, v24);
  swift_bridgeObjectRelease();
  sub_10000B424();
  v25();
  sub_1000247F0();
  sub_10012B0D0();
  swift_release();
  sub_10000B424();
  return v26();
}

uint64_t sub_100023D9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v29 = a2;
  uint64_t v28 = sub_1000053D8(&qword_10016B9A0);
  __chkstk_darwin(v28);
  uint64_t v4 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000053D8(&qword_10016B9D0);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (uint64_t *)((char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = sub_1000053D8(&qword_10016B440);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (uint64_t *)((char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = type metadata accessor for ForecastEntry(0);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = (int *)type metadata accessor for DailyForecastContentView();
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100024484(a1, (uint64_t)v13);
  uint64_t *v10 = swift_getKeyPath();
  sub_1000053D8(&qword_10016B410);
  swift_storeEnumTagMultiPayload();
  *uint64_t v7 = swift_getKeyPath();
  sub_1000053D8(&qword_10016B9D8);
  swift_storeEnumTagMultiPayload();
  uint64_t KeyPath = swift_getKeyPath();
  *(void *)&v16[v14[7]] = swift_getKeyPath();
  sub_1000053D8(&qword_10016B9E0);
  swift_storeEnumTagMultiPayload();
  sub_1000244FC((uint64_t)v10, (uint64_t)v16, &qword_10016B440);
  sub_1000244FC((uint64_t)v7, (uint64_t)&v16[v14[5]], &qword_10016B9D0);
  uint64_t v18 = &v16[v14[6]];
  *(void *)uint64_t v18 = KeyPath;
  v18[8] = 0;
  sub_100024560((uint64_t)v13, (uint64_t)&v16[v14[8]]);
  uint64_t v19 = &v16[v14[9]];
  type metadata accessor for CGRect(0);
  uint64_t v20 = sub_10012CBD0();
  *(void *)(v20 + 16) = 12;
  bzero((void *)(v20 + 32), 0x180uLL);
  uint64_t v30 = v20;
  sub_1000053D8(&qword_10016B9E8);
  sub_10012B680();
  uint64_t v21 = v32;
  *(void *)uint64_t v19 = v31;
  *((void *)v19 + 1) = v21;
  uint64_t v22 = v14[10];
  id v23 = [self mainScreen];
  [v23 bounds];

  v16[v22] = sub_100005130();
  uint64_t v24 = enum case for DynamicTypeSize.xxLarge(_:);
  uint64_t v25 = sub_10012ABF0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v25 - 8) + 104))(v4, v24, v25);
  sub_1000245C4(&qword_10016B9F0, (void (*)(uint64_t))&type metadata accessor for DynamicTypeSize);
  uint64_t result = sub_10012C9E0();
  if (result)
  {
    sub_1000245C4(&qword_10016B9A8, (void (*)(uint64_t))type metadata accessor for DailyForecastContentView);
    sub_10000B38C(&qword_10016B9B0, &qword_10016B9A0);
    sub_10012B4C0();
    sub_10002460C((uint64_t)v4);
    return sub_10002466C((uint64_t)v16);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100024228()
{
  uint64_t v0 = sub_10012A0B0();
  sub_10000DB98();
  uint64_t v2 = v1;
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v5, enum case for WidgetNames.DailyForecast(_:), v0);
  uint64_t v6 = sub_10012A0A0();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v0);
  return v6;
}

void *initializeBufferWithCopyOfBuffer for DailyForecastWidget(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for DailyForecastWidget()
{
  return swift_bridgeObjectRelease();
}

void *assignWithCopy for DailyForecastWidget(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for DailyForecastWidget(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for DailyForecastWidget(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 16))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DailyForecastWidget(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DailyForecastWidget()
{
  return &type metadata for DailyForecastWidget;
}

uint64_t sub_100024438()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100024454@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_100024228();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_10002447C()
{
  return sub_100023798(*v0, v0[1]);
}

uint64_t sub_100024484(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ForecastEntry(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000244FC(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_1000053D8(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_100024560(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ForecastEntry(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000245C4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10002460C(uint64_t a1)
{
  uint64_t v2 = sub_1000053D8(&qword_10016B9A0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10002466C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DailyForecastContentView();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1000246C8()
{
  return sub_1000247D8();
}

uint64_t sub_1000247D8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1000247F0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t getEnumTagSinglePayload for EventType(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFA)
  {
    if (a2 + 6 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 6) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 7;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 7;
  int v5 = v6 - 7;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for EventType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *uint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10002495CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EventType()
{
  return &type metadata for EventType;
}

char *sub_100024994(char *a1, char *a2, int *a3)
{
  unsigned int v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *(void *)a2;
    *(void *)unsigned int v4 = *(void *)a2;
    unsigned int v4 = (char *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_WORD *)a1 = *(_WORD *)a2;
    uint64_t v7 = a3[6];
    uint64_t v8 = &a1[v7];
    uint64_t v9 = &a2[v7];
    uint64_t v10 = sub_100129300();
    if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v9, 1, v10))
    {
      uint64_t v11 = sub_1000053D8(&qword_10016C7B0);
      memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
      _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v8, 0, 1, v10);
    }
    uint64_t v13 = a3[7];
    uint64_t v14 = &v4[v13];
    uint64_t v15 = &a2[v13];
    if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)&a2[v13], 1, v10))
    {
      uint64_t v16 = sub_1000053D8(&qword_10016C7B0);
      memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
      uint64_t v17 = *(void *)(v10 - 8);
    }
    else
    {
      uint64_t v17 = *(void *)(v10 - 8);
      (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v14, v15, v10);
      _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v14, 0, 1, v10);
    }
    (*(void (**)(char *, char *, uint64_t))(v17 + 16))(&v4[a3[8]], &a2[a3[8]], v10);
    uint64_t v18 = a3[9];
    uint64_t v19 = a3[10];
    uint64_t v20 = &v4[v18];
    uint64_t v21 = &a2[v18];
    uint64_t v22 = *((void *)v21 + 1);
    *(void *)uint64_t v20 = *(void *)v21;
    *((void *)v20 + 1) = v22;
    id v23 = &v4[v19];
    uint64_t v24 = &a2[v19];
    uint64_t v25 = *((void *)v24 + 1);
    *(void *)id v23 = *(void *)v24;
    *((void *)v23 + 1) = v25;
    uint64_t v26 = a3[11];
    uint64_t v27 = a3[12];
    uint64_t v28 = &v4[v26];
    uint64_t v29 = &a2[v26];
    uint64_t v30 = *((void *)v29 + 1);
    uint64_t v31 = *(void *)&a2[v27];
    *(void *)uint64_t v28 = *(void *)v29;
    *((void *)v28 + 1) = v30;
    *(void *)&v4[v27] = v31;
    uint64_t v32 = a3[13];
    uint64_t v33 = &v4[v32];
    uint64_t v34 = &a2[v32];
    uint64_t v35 = sub_100129C10();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v34, 1, v35))
    {
      uint64_t v36 = sub_1000053D8(&qword_10016B9F8);
      memcpy(v33, v34, *(void *)(*(void *)(v36 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 16))(v33, v34, v35);
      _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v33, 0, 1, v35);
    }
  }
  return v4;
}

uint64_t sub_100024CB0(uint64_t a1, int *a2)
{
  uint64_t v4 = a1 + a2[6];
  uint64_t v5 = sub_100129300();
  if (!_s13WeatherWidget20WeatherDataViewModelOwet_0(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  uint64_t v6 = a1 + a2[7];
  int v7 = _s13WeatherWidget20WeatherDataViewModelOwet_0(v6, 1, v5);
  uint64_t v8 = *(void *)(v5 - 8);
  if (!v7) {
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v5);
  }
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(a1 + a2[8], v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v9 = a1 + a2[13];
  uint64_t v10 = sub_100129C10();
  uint64_t result = _s13WeatherWidget20WeatherDataViewModelOwet_0(v9, 1, v10);
  if (!result)
  {
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8);
    return v12(v9, v10);
  }
  return result;
}

char *sub_100024E70(char *a1, char *a2, int *a3)
{
  *(_WORD *)a1 = *(_WORD *)a2;
  uint64_t v6 = a3[6];
  int v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_100129300();
  if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v8, 1, v9))
  {
    uint64_t v10 = sub_1000053D8(&qword_10016C7B0);
    memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
    _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v7, 0, 1, v9);
  }
  uint64_t v11 = a3[7];
  uint64_t v12 = &a1[v11];
  uint64_t v13 = &a2[v11];
  if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)&a2[v11], 1, v9))
  {
    uint64_t v14 = sub_1000053D8(&qword_10016C7B0);
    memcpy(v12, v13, *(void *)(*(void *)(v14 - 8) + 64));
    uint64_t v15 = *(void *)(v9 - 8);
  }
  else
  {
    uint64_t v15 = *(void *)(v9 - 8);
    (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v12, v13, v9);
    _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v12, 0, 1, v9);
  }
  (*(void (**)(char *, char *, uint64_t))(v15 + 16))(&a1[a3[8]], &a2[a3[8]], v9);
  uint64_t v16 = a3[9];
  uint64_t v17 = a3[10];
  uint64_t v18 = &a1[v16];
  uint64_t v19 = &a2[v16];
  uint64_t v20 = *((void *)v19 + 1);
  *(void *)uint64_t v18 = *(void *)v19;
  *((void *)v18 + 1) = v20;
  uint64_t v21 = &a1[v17];
  uint64_t v22 = &a2[v17];
  uint64_t v23 = *((void *)v22 + 1);
  *(void *)uint64_t v21 = *(void *)v22;
  *((void *)v21 + 1) = v23;
  uint64_t v24 = a3[11];
  uint64_t v25 = a3[12];
  uint64_t v26 = &a1[v24];
  uint64_t v27 = &a2[v24];
  uint64_t v28 = *((void *)v27 + 1);
  uint64_t v29 = *(void *)&a2[v25];
  *(void *)uint64_t v26 = *(void *)v27;
  *((void *)v26 + 1) = v28;
  *(void *)&a1[v25] = v29;
  uint64_t v30 = a3[13];
  uint64_t v31 = &a1[v30];
  uint64_t v32 = &a2[v30];
  uint64_t v33 = sub_100129C10();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v32, 1, v33))
  {
    uint64_t v34 = sub_1000053D8(&qword_10016B9F8);
    memcpy(v31, v32, *(void *)(*(void *)(v34 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 16))(v31, v32, v33);
    _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v31, 0, 1, v33);
  }
  return a1;
}

unsigned char *sub_10002513C(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  uint64_t v6 = a3[6];
  int v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_100129300();
  int v10 = _s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v7, 1, v9);
  int v11 = _s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v8, 1, v9);
  if (v10)
  {
    if (!v11)
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
      _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v12 = *(void *)(v9 - 8);
  if (v11)
  {
    (*(void (**)(unsigned char *, uint64_t))(v12 + 8))(v7, v9);
LABEL_6:
    uint64_t v13 = sub_1000053D8(&qword_10016C7B0);
    memcpy(v7, v8, *(void *)(*(void *)(v13 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v12 + 24))(v7, v8, v9);
LABEL_7:
  uint64_t v14 = a3[7];
  uint64_t v15 = &a1[v14];
  uint64_t v16 = &a2[v14];
  int v17 = _s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)&a1[v14], 1, v9);
  int v18 = _s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v16, 1, v9);
  if (v17)
  {
    if (v18)
    {
      uint64_t v19 = sub_1000053D8(&qword_10016C7B0);
      memcpy(v15, v16, *(void *)(*(void *)(v19 - 8) + 64));
      uint64_t v20 = *(void *)(v9 - 8);
    }
    else
    {
      uint64_t v20 = *(void *)(v9 - 8);
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v20 + 16))(v15, v16, v9);
      _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v15, 0, 1, v9);
    }
  }
  else
  {
    uint64_t v20 = *(void *)(v9 - 8);
    if (v18)
    {
      (*(void (**)(unsigned char *, uint64_t))(v20 + 8))(v15, v9);
      uint64_t v21 = sub_1000053D8(&qword_10016C7B0);
      memcpy(v15, v16, *(void *)(*(void *)(v21 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v20 + 24))(v15, v16, v9);
    }
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v20 + 24))(&a1[a3[8]], &a2[a3[8]], v9);
  uint64_t v22 = a3[9];
  uint64_t v23 = &a1[v22];
  uint64_t v24 = &a2[v22];
  *uint64_t v23 = *v24;
  v23[1] = v24[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v25 = a3[10];
  uint64_t v26 = &a1[v25];
  uint64_t v27 = &a2[v25];
  *uint64_t v26 = *v27;
  v26[1] = v27[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v28 = a3[11];
  uint64_t v29 = &a1[v28];
  uint64_t v30 = &a2[v28];
  *uint64_t v29 = *v30;
  v29[1] = v30[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&a1[a3[12]] = *(void *)&a2[a3[12]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v31 = a3[13];
  uint64_t v32 = &a1[v31];
  uint64_t v33 = &a2[v31];
  uint64_t v34 = sub_100129C10();
  int v35 = _s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v32, 1, v34);
  int v36 = _s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v33, 1, v34);
  if (!v35)
  {
    uint64_t v37 = *(void *)(v34 - 8);
    if (!v36)
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v37 + 24))(v32, v33, v34);
      return a1;
    }
    (*(void (**)(unsigned char *, uint64_t))(v37 + 8))(v32, v34);
    goto LABEL_20;
  }
  if (v36)
  {
LABEL_20:
    uint64_t v38 = sub_1000053D8(&qword_10016B9F8);
    memcpy(v32, v33, *(void *)(*(void *)(v38 - 8) + 64));
    return a1;
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v34 - 8) + 16))(v32, v33, v34);
  _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v32, 0, 1, v34);
  return a1;
}

char *sub_100025608(char *a1, char *a2, int *a3)
{
  *(_WORD *)a1 = *(_WORD *)a2;
  uint64_t v6 = a3[6];
  int v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_100129300();
  if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v8, 1, v9))
  {
    uint64_t v10 = sub_1000053D8(&qword_10016C7B0);
    memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
    _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v7, 0, 1, v9);
  }
  uint64_t v11 = a3[7];
  uint64_t v12 = &a1[v11];
  uint64_t v13 = &a2[v11];
  if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)&a2[v11], 1, v9))
  {
    uint64_t v14 = sub_1000053D8(&qword_10016C7B0);
    memcpy(v12, v13, *(void *)(*(void *)(v14 - 8) + 64));
    uint64_t v15 = *(void *)(v9 - 8);
  }
  else
  {
    uint64_t v15 = *(void *)(v9 - 8);
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v12, v13, v9);
    _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v12, 0, 1, v9);
  }
  (*(void (**)(char *, char *, uint64_t))(v15 + 32))(&a1[a3[8]], &a2[a3[8]], v9);
  uint64_t v16 = a3[10];
  *(_OWORD *)&a1[a3[9]] = *(_OWORD *)&a2[a3[9]];
  *(_OWORD *)&a1[v16] = *(_OWORD *)&a2[v16];
  uint64_t v17 = a3[12];
  *(_OWORD *)&a1[a3[11]] = *(_OWORD *)&a2[a3[11]];
  *(void *)&a1[v17] = *(void *)&a2[v17];
  uint64_t v18 = a3[13];
  uint64_t v19 = &a1[v18];
  uint64_t v20 = &a2[v18];
  uint64_t v21 = sub_100129C10();
  if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v20, 1, v21))
  {
    uint64_t v22 = sub_1000053D8(&qword_10016B9F8);
    memcpy(v19, v20, *(void *)(*(void *)(v22 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 32))(v19, v20, v21);
    _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v19, 0, 1, v21);
  }
  return a1;
}

char *sub_10002589C(char *a1, char *a2, int *a3)
{
  *(_WORD *)a1 = *(_WORD *)a2;
  uint64_t v6 = a3[6];
  int v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_100129300();
  int v10 = _s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v7, 1, v9);
  int v11 = _s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v8, 1, v9);
  if (v10)
  {
    if (!v11)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
      _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v12 = *(void *)(v9 - 8);
  if (v11)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v7, v9);
LABEL_6:
    uint64_t v13 = sub_1000053D8(&qword_10016C7B0);
    memcpy(v7, v8, *(void *)(*(void *)(v13 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 40))(v7, v8, v9);
LABEL_7:
  uint64_t v14 = a3[7];
  uint64_t v15 = &a1[v14];
  uint64_t v16 = &a2[v14];
  int v17 = _s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)&a1[v14], 1, v9);
  int v18 = _s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v16, 1, v9);
  if (v17)
  {
    if (v18)
    {
      uint64_t v19 = sub_1000053D8(&qword_10016C7B0);
      memcpy(v15, v16, *(void *)(*(void *)(v19 - 8) + 64));
      uint64_t v20 = *(void *)(v9 - 8);
    }
    else
    {
      uint64_t v20 = *(void *)(v9 - 8);
      (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v15, v16, v9);
      _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v15, 0, 1, v9);
    }
  }
  else
  {
    uint64_t v20 = *(void *)(v9 - 8);
    if (v18)
    {
      (*(void (**)(char *, uint64_t))(v20 + 8))(v15, v9);
      uint64_t v21 = sub_1000053D8(&qword_10016C7B0);
      memcpy(v15, v16, *(void *)(*(void *)(v21 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v20 + 40))(v15, v16, v9);
    }
  }
  (*(void (**)(char *, char *, uint64_t))(v20 + 40))(&a1[a3[8]], &a2[a3[8]], v9);
  uint64_t v22 = a3[9];
  uint64_t v23 = &a1[v22];
  uint64_t v24 = &a2[v22];
  uint64_t v26 = *(void *)v24;
  uint64_t v25 = *((void *)v24 + 1);
  *(void *)uint64_t v23 = v26;
  *((void *)v23 + 1) = v25;
  swift_bridgeObjectRelease();
  uint64_t v27 = a3[10];
  uint64_t v28 = &a1[v27];
  uint64_t v29 = &a2[v27];
  uint64_t v31 = *(void *)v29;
  uint64_t v30 = *((void *)v29 + 1);
  *(void *)uint64_t v28 = v31;
  *((void *)v28 + 1) = v30;
  swift_bridgeObjectRelease();
  uint64_t v32 = a3[11];
  uint64_t v33 = &a1[v32];
  uint64_t v34 = &a2[v32];
  uint64_t v36 = *(void *)v34;
  uint64_t v35 = *((void *)v34 + 1);
  *(void *)uint64_t v33 = v36;
  *((void *)v33 + 1) = v35;
  swift_bridgeObjectRelease();
  *(void *)&a1[a3[12]] = *(void *)&a2[a3[12]];
  swift_bridgeObjectRelease();
  uint64_t v37 = a3[13];
  uint64_t v38 = &a1[v37];
  uint64_t v39 = &a2[v37];
  uint64_t v40 = sub_100129C10();
  int v41 = _s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v38, 1, v40);
  int v42 = _s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v39, 1, v40);
  if (!v41)
  {
    uint64_t v43 = *(void *)(v40 - 8);
    if (!v42)
    {
      (*(void (**)(char *, char *, uint64_t))(v43 + 40))(v38, v39, v40);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v43 + 8))(v38, v40);
    goto LABEL_20;
  }
  if (v42)
  {
LABEL_20:
    uint64_t v44 = sub_1000053D8(&qword_10016B9F8);
    memcpy(v38, v39, *(void *)(*(void *)(v44 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v40 - 8) + 32))(v38, v39, v40);
  _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v38, 0, 1, v40);
  return a1;
}

uint64_t sub_100025D28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100025D3C);
}

uint64_t sub_100025D3C(uint64_t a1, uint64_t a2, int *a3)
{
  sub_1000053D8(&qword_10016C7B0);
  sub_10000B3D0();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a3[6];
  }
  else
  {
    sub_100129300();
    sub_10000B3D0();
    if (*(_DWORD *)(v11 + 84) == a2)
    {
      uint64_t v8 = v10;
      uint64_t v9 = a3[8];
    }
    else
    {
      if (a2 == 0x7FFFFFFF) {
        return sub_10002A65C(*(void *)(a1 + a3[9] + 8));
      }
      uint64_t v8 = sub_1000053D8(&qword_10016B9F8);
      uint64_t v9 = a3[13];
    }
  }

  return _s13WeatherWidget20WeatherDataViewModelOwet_0(a1 + v9, a2, v8);
}

uint64_t sub_100025E10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100025E24);
}

void sub_100025E24(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  sub_1000053D8(&qword_10016C7B0);
  sub_10000B3D0();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = a4[6];
  }
  else
  {
    sub_100129300();
    sub_10000B3D0();
    if (*(_DWORD *)(v13 + 84) == a3)
    {
      uint64_t v10 = v12;
      uint64_t v11 = a4[8];
    }
    else
    {
      if (a3 == 0x7FFFFFFF)
      {
        *(void *)(a1 + a4[9] + 8) = (a2 - 1);
        return;
      }
      uint64_t v10 = sub_1000053D8(&qword_10016B9F8);
      uint64_t v11 = a4[13];
    }
  }

  _s13WeatherWidget20WeatherDataViewModelOwst_0(a1 + v11, a2, a2, v10);
}

uint64_t type metadata accessor for EventViewModel(uint64_t a1)
{
  return sub_10001A270(a1, (uint64_t *)&unk_10016BA58);
}

void sub_100025F20()
{
  sub_100026090(319, &qword_10016BA68, (void (*)(uint64_t))&type metadata accessor for Date);
  if (v0 <= 0x3F)
  {
    sub_100129300();
    if (v1 <= 0x3F)
    {
      sub_100026090(319, (unint64_t *)&unk_10016BA70, (void (*)(uint64_t))&type metadata accessor for PrecipitationShift);
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

void sub_100026090(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_10012CF40();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

Swift::Int sub_1000260E8(unsigned __int8 a1)
{
  return sub_10012D2A0();
}

Swift::Int sub_100026128()
{
  return sub_100026164();
}

Swift::Int sub_10002613C()
{
  return sub_1000264BC();
}

Swift::Int sub_100026148(char a1)
{
  return sub_10002637C(0, a1);
}

Swift::Int sub_100026154()
{
  return sub_100026164();
}

Swift::Int sub_100026164()
{
  return sub_10012D2A0();
}

Swift::Int sub_1000261AC(Swift::UInt a1)
{
  return sub_10012D2A0();
}

uint64_t sub_1000261EC()
{
  sub_10012CAC0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_100026250()
{
  return sub_10012CAC0();
}

uint64_t sub_100026264(uint64_t a1, char a2)
{
  if (!a2) {
    sub_10002A5C8();
  }
  sub_10012CAC0();

  return swift_bridgeObjectRelease();
}

void sub_1000262EC(uint64_t a1, Swift::UInt a2)
{
}

uint64_t sub_100026314()
{
  return sub_10012CAC0();
}

Swift::Int sub_100026324()
{
  return sub_100026470();
}

Swift::Int sub_100026334(uint64_t a1, Swift::UInt a2)
{
  return sub_10012D2A0();
}

Swift::Int sub_10002637C(uint64_t a1, char a2)
{
  if (!a2) {
    sub_10002A5C8();
  }
  sub_10012CAC0();
  swift_bridgeObjectRelease();
  return sub_10012D2A0();
}

Swift::Int sub_100026418(uint64_t a1, unsigned __int8 a2)
{
  return sub_10012D2A0();
}

Swift::Int sub_10002645C()
{
  return sub_100026470();
}

Swift::Int sub_100026470()
{
  return sub_10012D2A0();
}

Swift::Int sub_1000264BC()
{
  return sub_10012D2A0();
}

unint64_t sub_100026534(unint64_t result)
{
  if (result >= 5) {
    return 5;
  }
  return result;
}

Swift::Int sub_100026544()
{
  return sub_1000260E8(*v0);
}

Swift::Int sub_100026560(uint64_t a1)
{
  return sub_100026418(a1, *v1);
}

unint64_t sub_10002657C@<X0>(unint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_100026534(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_1000265A8()
{
  return sub_10012CB80();
}

uint64_t sub_100026608()
{
  return sub_10012CB70();
}

unint64_t sub_100026658(unint64_t result)
{
  if (result >= 7) {
    return 7;
  }
  return result;
}

uint64_t sub_100026668(unsigned __int8 *a1, unsigned __int8 *a2)
{
  uint64_t v5 = sub_100129C10();
  sub_10000DB98();
  uint64_t v121 = v6;
  __chkstk_darwin(v7);
  sub_10002A5AC(v8, v111);
  uint64_t v123 = sub_1000053D8(&qword_10016BB40);
  sub_10000B3FC();
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v111 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1000053D8(&qword_10016B9F8);
  uint64_t v13 = sub_10000DC9C(v12);
  __chkstk_darwin(v13);
  sub_10000DCB4();
  uint64_t v122 = v14;
  uint64_t v16 = __chkstk_darwin(v15);
  uint64_t v124 = (char *)&v111 - v17;
  __chkstk_darwin(v16);
  uint64_t v125 = (char *)&v111 - v18;
  uint64_t v19 = sub_100129300();
  sub_10000DB98();
  uint64_t v128 = v20;
  __chkstk_darwin(v21);
  sub_10000DBCC();
  uint64_t v126 = v22;
  uint64_t v23 = sub_1000053D8(&qword_10016BB48);
  sub_10000B3FC();
  __chkstk_darwin(v24);
  sub_10000DCB4();
  uint64_t v127 = v25;
  __chkstk_darwin(v26);
  uint64_t v28 = (char *)&v111 - v27;
  uint64_t v29 = sub_1000053D8(&qword_10016C7B0);
  uint64_t v30 = sub_10000DC9C(v29);
  __chkstk_darwin(v30);
  sub_10002A5E0();
  __chkstk_darwin(v31);
  sub_10002A648();
  uint64_t v33 = __chkstk_darwin(v32);
  uint64_t v34 = __chkstk_darwin(v33);
  uint64_t v36 = (char *)&v111 - v35;
  uint64_t v37 = __chkstk_darwin(v34);
  uint64_t v39 = (char *)&v111 - v38;
  __chkstk_darwin(v37);
  int v42 = a2;
  uint64_t v44 = (char *)&v111 - v43;
  if (*a1 != *v42) {
    return 0;
  }
  int v45 = a1[1];
  int v46 = v42[1];
  if (v45 == 5)
  {
    if (v46 != 5) {
      return 0;
    }
  }
  else
  {
    BOOL v47 = v46 != 5 && v45 == v46;
    if (!v47) {
      return 0;
    }
  }
  uint64_t v117 = v41;
  uint64_t v114 = v11;
  uint64_t v115 = v40;
  uint64_t v113 = v5;
  uint64_t v48 = v42;
  uint64_t v49 = a1;
  uint64_t v50 = type metadata accessor for EventViewModel(0);
  uint64_t v51 = *(int *)(v50 + 24);
  uint64_t v119 = v49;
  sub_10000B114((uint64_t)&v49[v51], (uint64_t)v44, &qword_10016C7B0);
  uint64_t v116 = (int *)v50;
  uint64_t v52 = *(int *)(v50 + 24);
  BOOL v118 = v48;
  sub_10000B114((uint64_t)&v48[v52], (uint64_t)v39, &qword_10016C7B0);
  uint64_t v53 = (uint64_t)&v28[*(int *)(v23 + 48)];
  sub_10000B114((uint64_t)v44, (uint64_t)v28, &qword_10016C7B0);
  sub_10000B114((uint64_t)v39, v53, &qword_10016C7B0);
  sub_10002A504((uint64_t)v28);
  if (v47)
  {
    sub_1000235F8((uint64_t)v39, &qword_10016C7B0);
    sub_1000235F8((uint64_t)v44, &qword_10016C7B0);
    sub_10002A504(v53);
    if (v47)
    {
      sub_1000235F8((uint64_t)v28, &qword_10016C7B0);
      goto LABEL_20;
    }
LABEL_18:
    Swift::String v55 = &qword_10016BB48;
    uint64_t v56 = (uint64_t)v28;
    goto LABEL_29;
  }
  sub_10000B114((uint64_t)v28, (uint64_t)v36, &qword_10016C7B0);
  sub_10002A504(v53);
  if (v54)
  {
    sub_1000235F8((uint64_t)v39, &qword_10016C7B0);
    sub_1000235F8((uint64_t)v44, &qword_10016C7B0);
    (*(void (**)(char *, uint64_t))(v128 + 8))(v36, v19);
    goto LABEL_18;
  }
  uint64_t v57 = v128;
  uint64_t v58 = v126;
  sub_100011F6C();
  v59();
  sub_10002900C(&qword_10016BB58, (void (*)(uint64_t))&type metadata accessor for Date);
  int v112 = sub_10012C9E0();
  uint64_t v60 = *(void (**)(uint64_t, uint64_t))(v57 + 8);
  v60(v58, v19);
  sub_1000235F8((uint64_t)v39, &qword_10016C7B0);
  sub_1000235F8((uint64_t)v44, &qword_10016C7B0);
  v60((uint64_t)v36, v19);
  sub_1000235F8((uint64_t)v28, &qword_10016C7B0);
  if ((v112 & 1) == 0) {
    return 0;
  }
LABEL_20:
  uint64_t v62 = v116;
  uint64_t v61 = v117;
  sub_10000B114((uint64_t)&v119[v116[7]], v117, &qword_10016C7B0);
  sub_10000B114((uint64_t)&v118[v62[7]], v2, &qword_10016C7B0);
  uint64_t v63 = v127;
  uint64_t v64 = v127 + *(int *)(v23 + 48);
  sub_10000B114(v61, v127, &qword_10016C7B0);
  sub_10000B114(v2, v64, &qword_10016C7B0);
  sub_10002A504(v63);
  if (v47)
  {
    sub_1000235F8(v2, &qword_10016C7B0);
    sub_1000235F8(v61, &qword_10016C7B0);
    sub_10002A504(v64);
    if (v47)
    {
      sub_1000235F8(v63, &qword_10016C7B0);
      goto LABEL_33;
    }
LABEL_28:
    Swift::String v55 = &qword_10016BB48;
    uint64_t v56 = v63;
    goto LABEL_29;
  }
  uint64_t v65 = v115;
  sub_10000B114(v63, v115, &qword_10016C7B0);
  sub_10002A504(v64);
  if (v66)
  {
    sub_1000235F8(v2, &qword_10016C7B0);
    sub_1000235F8(v117, &qword_10016C7B0);
    (*(void (**)(uint64_t, uint64_t))(v128 + 8))(v65, v19);
    goto LABEL_28;
  }
  uint64_t v68 = v128;
  uint64_t v69 = v126;
  sub_100011F6C();
  v70();
  sub_10002900C(&qword_10016BB58, (void (*)(uint64_t))&type metadata accessor for Date);
  char v71 = sub_10012C9E0();
  uint64_t v72 = *(void (**)(uint64_t, uint64_t))(v68 + 8);
  v72(v69, v19);
  sub_1000235F8(v2, &qword_10016C7B0);
  sub_1000235F8(v117, &qword_10016C7B0);
  v72(v65, v19);
  sub_1000235F8(v63, &qword_10016C7B0);
  if ((v71 & 1) == 0) {
    return 0;
  }
LABEL_33:
  uint64_t v73 = v118;
  uint64_t v74 = v119;
  if ((sub_1001292A0() & 1) == 0) {
    return 0;
  }
  uint64_t v75 = v62[9];
  uint64_t v76 = *(void *)&v74[v75];
  uint64_t v77 = *(void *)&v74[v75 + 8];
  uint64_t v78 = &v73[v75];
  BOOL v79 = v76 == *(void *)v78 && v77 == *((void *)v78 + 1);
  uint64_t v80 = (uint64_t)v114;
  uint64_t v82 = (uint64_t)v124;
  uint64_t v81 = (uint64_t)v125;
  uint64_t v83 = v73;
  uint64_t v84 = v74;
  if (v79 || (sub_10012D1F0(), uint64_t result = sub_10002A608(), (v85 & 1) != 0))
  {
    uint64_t v86 = v62[10];
    uint64_t v87 = *(void *)&v84[v86];
    uint64_t v88 = *(void *)&v84[v86 + 8];
    uint64_t v89 = &v83[v86];
    BOOL v90 = v87 == *(void *)v89 && v88 == *((void *)v89 + 1);
    if (v90 || (sub_10012D1F0(), uint64_t result = sub_10002A608(), (v91 & 1) != 0))
    {
      uint64_t v92 = v62[11];
      uint64_t v93 = &v84[v92];
      uint64_t v94 = *(void *)&v84[v92 + 8];
      uint64_t v95 = &v83[v92];
      uint64_t v96 = *((void *)v95 + 1);
      if (!v94)
      {
        if (v96) {
          return 0;
        }
LABEL_53:
        uint64_t v99 = v62[12];
        uint64_t v100 = *(void *)&v83[v99];
        if (*(void *)&v84[v99])
        {
          if (!v100) {
            return 0;
          }
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_100066B84();
          char v102 = v101;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v84 = v119;
          if ((v102 & 1) == 0) {
            return 0;
          }
        }
        else if (v100)
        {
          return 0;
        }
        sub_10000B114((uint64_t)&v84[v62[13]], v81, &qword_10016B9F8);
        sub_10000B114((uint64_t)&v118[v62[13]], v82, &qword_10016B9F8);
        uint64_t v103 = v80 + *(int *)(v123 + 48);
        sub_10000B114(v81, v80, &qword_10016B9F8);
        sub_10000B114(v82, v103, &qword_10016B9F8);
        uint64_t v104 = v113;
        if (_s13WeatherWidget20WeatherDataViewModelOwet_0(v80, 1, v113) == 1)
        {
          sub_1000235F8(v82, &qword_10016B9F8);
          sub_1000235F8(v81, &qword_10016B9F8);
          if (_s13WeatherWidget20WeatherDataViewModelOwet_0(v103, 1, v104) == 1)
          {
            sub_1000235F8(v80, &qword_10016B9F8);
            return 1;
          }
        }
        else
        {
          uint64_t v105 = v122;
          sub_10000B114(v80, v122, &qword_10016B9F8);
          if (_s13WeatherWidget20WeatherDataViewModelOwet_0(v103, 1, v104) != 1)
          {
            uint64_t v107 = v120;
            uint64_t v106 = v121;
            sub_100011F6C();
            v108();
            sub_10002900C(&qword_10016BB50, (void (*)(uint64_t))&type metadata accessor for PrecipitationShift);
            char v109 = sub_10012C9E0();
            uint64_t v110 = *(void (**)(uint64_t, uint64_t))(v106 + 8);
            v110(v107, v104);
            sub_1000235F8(v82, &qword_10016B9F8);
            sub_1000235F8(v81, &qword_10016B9F8);
            v110(v105, v104);
            sub_1000235F8(v80, &qword_10016B9F8);
            return (v109 & 1) != 0;
          }
          sub_1000235F8(v82, &qword_10016B9F8);
          sub_1000235F8(v81, &qword_10016B9F8);
          (*(void (**)(uint64_t, uint64_t))(v121 + 8))(v105, v104);
        }
        Swift::String v55 = &qword_10016BB40;
        uint64_t v56 = v80;
LABEL_29:
        sub_1000235F8(v56, v55);
        return 0;
      }
      if (!v96) {
        return 0;
      }
      if (*(void *)v93 == *(void *)v95 && v94 == v96) {
        goto LABEL_53;
      }
      sub_10012D1F0();
      uint64_t result = sub_10002A608();
      if (v98) {
        goto LABEL_53;
      }
    }
  }
  return result;
}

uint64_t sub_1000270A0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701869940 && a2 == 0xE400000000000000;
  if (v2 || (sub_10012D1F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x7665537472656C61 && a2 == 0xED00007974697265;
    if (v6 || (sub_10012D1F0() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 0x7461447472617473 && a2 == 0xE900000000000065;
      if (v7 || (sub_10012D1F0() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        BOOL v8 = a1 == 0x65746144646E65 && a2 == 0xE700000000000000;
        if (v8 || (sub_10012D1F0() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else
        {
          BOOL v9 = a1 == 0x6974617269707865 && a2 == 0xEE00657461446E6FLL;
          if (v9 || (sub_10012D1F0() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 4;
          }
          else
          {
            BOOL v10 = a1 == 0x656C746974 && a2 == 0xE500000000000000;
            if (v10 || (sub_10012D1F0() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 5;
            }
            else
            {
              BOOL v11 = a1 == 0x7470697263736564 && a2 == 0xEB000000006E6F69;
              if (v11 || (sub_10012D1F0() & 1) != 0)
              {
                swift_bridgeObjectRelease();
                return 6;
              }
              else
              {
                BOOL v12 = a1 == 0x63736544676E6F6CLL && a2 == 0xEF6E6F6974706972;
                if (v12 || (sub_10012D1F0() & 1) != 0)
                {
                  swift_bridgeObjectRelease();
                  return 7;
                }
                else if (a1 == 0xD000000000000014 && a2 == 0x8000000100139070 || (sub_10012D1F0() & 1) != 0)
                {
                  swift_bridgeObjectRelease();
                  return 8;
                }
                else if (a1 == 0xD000000000000012 && a2 == 0x8000000100139090)
                {
                  swift_bridgeObjectRelease();
                  return 9;
                }
                else
                {
                  char v13 = sub_10012D1F0();
                  swift_bridgeObjectRelease();
                  if (v13) {
                    return 9;
                  }
                  else {
                    return 10;
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

uint64_t sub_100027508()
{
  return 10;
}

unint64_t sub_100027510(char a1)
{
  unint64_t result = 1701869940;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x7665537472656C61;
      break;
    case 2:
      unint64_t result = 0x7461447472617473;
      break;
    case 3:
      unint64_t result = 0x65746144646E65;
      break;
    case 4:
      unint64_t result = 0x6974617269707865;
      break;
    case 5:
      unint64_t result = 0x656C746974;
      break;
    case 6:
      unint64_t result = 0x7470697263736564;
      break;
    case 7:
      unint64_t result = 0x63736544676E6F6CLL;
      break;
    case 8:
      unint64_t result = 0xD000000000000014;
      break;
    case 9:
      unint64_t result = 0xD000000000000012;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_10002767C(void *a1)
{
  int v3 = v1;
  uint64_t v5 = sub_1000053D8(&qword_10016BAC8);
  sub_10000DB98();
  uint64_t v7 = v6;
  __chkstk_darwin(v8);
  BOOL v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000D890(a1, a1[3]);
  sub_100028F28();
  sub_10002A628();
  LOBYTE(v14) = *v3;
  char v15 = 0;
  sub_100028F74();
  sub_10012D1B0();
  if (!v2)
  {
    LOBYTE(v14) = v3[1];
    char v15 = 1;
    sub_100028FC0();
    sub_10002A594();
    uint64_t v11 = type metadata accessor for EventViewModel(0);
    LOBYTE(v14) = 2;
    sub_100129300();
    sub_10002900C(&qword_10016B6E8, (void (*)(uint64_t))&type metadata accessor for Date);
    sub_10002A594();
    LOBYTE(v14) = 3;
    sub_10002A594();
    LOBYTE(v14) = 4;
    sub_10012D1B0();
    LOBYTE(v14) = 5;
    sub_10002A578();
    LOBYTE(v14) = 6;
    sub_10002A578();
    LOBYTE(v14) = 7;
    sub_10012D160();
    uint64_t v14 = *(void *)&v3[*(int *)(v11 + 48)];
    char v15 = 8;
    sub_1000053D8(&qword_10016BAE8);
    sub_10002910C(&qword_10016BAF0, &qword_10016BAF8);
    sub_10002A594();
    LOBYTE(v14) = 9;
    sub_100129C10();
    sub_10002900C(&qword_10016BB00, (void (*)(uint64_t))&type metadata accessor for PrecipitationShift);
    sub_10002A594();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v5);
}

uint64_t sub_100027A1C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v39 = a2;
  uint64_t v5 = sub_1000053D8(&qword_10016B9F8);
  uint64_t v6 = sub_10000DC9C(v5);
  __chkstk_darwin(v6);
  sub_10002A5AC(v7, v38[0]);
  sub_100129300();
  sub_10000DB98();
  uint64_t v43 = v9;
  uint64_t v44 = v8;
  __chkstk_darwin(v8);
  sub_10002A5F0();
  uint64_t v10 = sub_1000053D8(&qword_10016C7B0);
  uint64_t v11 = sub_10000DC9C(v10);
  __chkstk_darwin(v11);
  sub_10002A5E0();
  uint64_t v14 = v12 - v13;
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)v38 - v16;
  uint64_t v42 = sub_1000053D8(&qword_10016BB08);
  sub_10000DB98();
  __chkstk_darwin(v18);
  sub_10002A53C();
  BOOL v47 = (int *)type metadata accessor for EventViewModel(0);
  sub_10000B3FC();
  __chkstk_darwin(v19);
  sub_10000DBCC();
  int v45 = a1;
  int v46 = v20;
  sub_10000D890(a1, a1[3]);
  sub_100028F28();
  uint64_t v41 = v3;
  sub_10012D2B0();
  if (v2) {
    return sub_10000DB48((uint64_t)v45);
  }
  uint64_t v21 = (uint64_t)v17;
  char v49 = 0;
  sub_100029074();
  sub_10012D130();
  uint64_t v22 = v46;
  *int v46 = v48;
  char v49 = 1;
  sub_1000290C0();
  sub_10012D0F0();
  v22[1] = v48;
  LOBYTE(v48) = 2;
  v38[1] = sub_10002900C(&qword_10016B6C0, (void (*)(uint64_t))&type metadata accessor for Date);
  sub_10012D0F0();
  sub_10000B2F4(v21, (uint64_t)&v22[v47[6]], &qword_10016C7B0);
  LOBYTE(v48) = 3;
  sub_10012D0F0();
  uint64_t v23 = v47;
  sub_10000B2F4(v14, (uint64_t)&v22[v47[7]], &qword_10016C7B0);
  LOBYTE(v48) = 4;
  sub_10012D130();
  uint64_t v24 = v46;
  sub_100011F6C();
  v25();
  uint64_t v26 = sub_10002A688(5);
  uint64_t v27 = (uint64_t *)&v24[v23[9]];
  *uint64_t v27 = v26;
  v27[1] = v28;
  uint64_t v29 = sub_10002A688(6);
  uint64_t v30 = (uint64_t *)&v24[v23[10]];
  *uint64_t v30 = v29;
  v30[1] = v31;
  LOBYTE(v48) = 7;
  uint64_t v32 = sub_10012D0E0();
  uint64_t v33 = (uint64_t *)&v24[v23[11]];
  *uint64_t v33 = v32;
  v33[1] = v34;
  sub_1000053D8(&qword_10016BAE8);
  char v49 = 8;
  sub_10002910C(&qword_10016BB20, &qword_10016BB28);
  sub_10012D0F0();
  *(void *)&v24[v23[12]] = v48;
  sub_100129C10();
  LOBYTE(v48) = 9;
  sub_10002900C(&qword_10016BB30, (void (*)(uint64_t))&type metadata accessor for PrecipitationShift);
  sub_10012D0F0();
  sub_10002A56C();
  v35();
  uint64_t v36 = (uint64_t)v46;
  sub_10000B2F4(v40, (uint64_t)&v46[v47[13]], &qword_10016B9F8);
  sub_10002A240(v36, v39, (void (*)(void))type metadata accessor for EventViewModel);
  sub_10000DB48((uint64_t)v45);
  return sub_10002A294(v36, (void (*)(void))type metadata accessor for EventViewModel);
}

uint64_t sub_100028154(void *a1, void *a2)
{
  uint64_t v6 = sub_100129300();
  sub_10000DB98();
  uint64_t v8 = v7;
  __chkstk_darwin(v9);
  sub_10002A53C();
  uint64_t v10 = sub_1000053D8(&qword_10016BB48);
  sub_10000B3FC();
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1000053D8(&qword_10016C7B0);
  uint64_t v15 = sub_10000DC9C(v14);
  __chkstk_darwin(v15);
  sub_10002A5E0();
  uint64_t v18 = v16 - v17;
  __chkstk_darwin(v19);
  sub_10002A648();
  __chkstk_darwin(v20);
  uint64_t v22 = (char *)v38 - v21;
  BOOL v23 = *a1 == *a2 && a1[1] == a2[1];
  if (v23 || (sub_10012D1F0(), uint64_t result = sub_10002A608(), (v25 & 1) != 0))
  {
    BOOL v26 = a1[2] == a2[2] && a1[3] == a2[3];
    if (v26 || (sub_10012D1F0(), uint64_t result = sub_10002A608(), (v27 & 1) != 0))
    {
      v38[1] = v3;
      uint64_t v39 = v8;
      uint64_t v40 = v6;
      uint64_t v28 = a2[4];
      if (a1[4])
      {
        if (!v28) {
          return 0;
        }
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_10006C830();
        char v30 = v29;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v30 & 1) == 0) {
          return 0;
        }
      }
      else if (v28)
      {
        return 0;
      }
      uint64_t v31 = type metadata accessor for TemplateDescriptions(0);
      sub_10000B114((uint64_t)a1 + *(int *)(v31 + 28), (uint64_t)v22, &qword_10016C7B0);
      sub_10000B114((uint64_t)a2 + *(int *)(v31 + 28), v2, &qword_10016C7B0);
      uint64_t v32 = (uint64_t)&v13[*(int *)(v10 + 48)];
      sub_10000B114((uint64_t)v22, (uint64_t)v13, &qword_10016C7B0);
      sub_10000B114(v2, v32, &qword_10016C7B0);
      uint64_t v33 = v40;
      if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v13, 1, v40) == 1)
      {
        sub_1000235F8(v2, &qword_10016C7B0);
        sub_1000235F8((uint64_t)v22, &qword_10016C7B0);
        if (_s13WeatherWidget20WeatherDataViewModelOwet_0(v32, 1, v33) == 1)
        {
          sub_1000235F8((uint64_t)v13, &qword_10016C7B0);
          return 1;
        }
        goto LABEL_21;
      }
      sub_10000B114((uint64_t)v13, v18, &qword_10016C7B0);
      if (_s13WeatherWidget20WeatherDataViewModelOwet_0(v32, 1, v33) == 1)
      {
        sub_1000235F8(v2, &qword_10016C7B0);
        sub_1000235F8((uint64_t)v22, &qword_10016C7B0);
        (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v18, v33);
LABEL_21:
        sub_1000235F8((uint64_t)v13, &qword_10016BB48);
        return 0;
      }
      uint64_t v34 = v39;
      sub_100011F6C();
      v35();
      sub_10002900C(&qword_10016BB58, (void (*)(uint64_t))&type metadata accessor for Date);
      char v36 = sub_10012C9E0();
      uint64_t v37 = *(void (**)(void))(v34 + 8);
      sub_10002A56C();
      v37();
      sub_1000235F8(v2, &qword_10016C7B0);
      sub_1000235F8((uint64_t)v22, &qword_10016C7B0);
      sub_10002A56C();
      v37();
      sub_1000235F8((uint64_t)v13, &qword_10016C7B0);
      return (v36 & 1) != 0;
    }
  }
  return result;
}

uint64_t sub_100028548(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6D655474726F6873 && a2 == 0xED00006574616C70;
  if (v2 || (sub_10012D1F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x706D6554676E6F6CLL && a2 == 0xEC0000006574616CLL;
    if (v6 || (sub_10012D1F0() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 0x6574656D61726170 && a2 == 0xEA00000000007372;
      if (v7 || (sub_10012D1F0() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 0x746E5564696C6176 && a2 == 0xEA00000000006C69)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else
      {
        char v9 = sub_10012D1F0();
        swift_bridgeObjectRelease();
        if (v9) {
          return 3;
        }
        else {
          return 4;
        }
      }
    }
  }
}

uint64_t sub_100028744(char a1)
{
  uint64_t result = 0x6D655474726F6873;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x706D6554676E6F6CLL;
      break;
    case 2:
      uint64_t result = 0x6574656D61726170;
      break;
    case 3:
      uint64_t result = 0x746E5564696C6176;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1000287F8(void *a1)
{
  sub_1000053D8(&qword_10016BC20);
  sub_10000DB98();
  __chkstk_darwin(v3);
  sub_10000D890(a1, a1[3]);
  sub_10002A09C();
  sub_10002A628();
  sub_10002A578();
  if (!v1)
  {
    sub_10002A578();
    sub_1000053D8(&qword_10016BC30);
    sub_10002A0E8();
    sub_10002A594();
    type metadata accessor for TemplateDescriptions(0);
    sub_100129300();
    sub_10002900C(&qword_10016B6E8, (void (*)(uint64_t))&type metadata accessor for Date);
    sub_10002A594();
  }
  sub_10002A56C();
  return v4();
}

uint64_t sub_1000289C0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v20 = a2;
  uint64_t v5 = sub_1000053D8(&qword_10016C7B0);
  uint64_t v6 = sub_10000DC9C(v5);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000053D8(&qword_10016BC40);
  sub_10000DB98();
  uint64_t v21 = v10;
  uint64_t v22 = v9;
  __chkstk_darwin(v9);
  sub_10002A5F0();
  uint64_t v11 = type metadata accessor for TemplateDescriptions(0);
  sub_10000B3FC();
  __chkstk_darwin(v12);
  sub_10002A53C();
  sub_10000D890(a1, a1[3]);
  sub_10002A09C();
  sub_10012D2B0();
  if (v2) {
    return sub_10000DB48((uint64_t)a1);
  }
  uint64_t v19 = v11;
  char v27 = 0;
  *uint64_t v3 = sub_10012D100();
  v3[1] = v13;
  char v26 = 1;
  v3[2] = sub_10012D100();
  v3[3] = v14;
  sub_1000053D8(&qword_10016BC30);
  char v25 = 2;
  sub_10002A194();
  sub_10002A614();
  sub_10012D0F0();
  uint64_t v18 = 0;
  v3[4] = v23;
  sub_100129300();
  char v24 = 3;
  sub_10002900C(&qword_10016B6C0, (void (*)(uint64_t))&type metadata accessor for Date);
  sub_10002A614();
  sub_10012D0F0();
  uint64_t v15 = sub_10002A4EC();
  v16(v15);
  sub_10000B2F4((uint64_t)v8, *(int *)(v19 + 28), &qword_10016C7B0);
  sub_10002A240(0, v20, (void (*)(void))type metadata accessor for TemplateDescriptions);
  sub_10000DB48((uint64_t)a1);
  return sub_10002A294(0, (void (*)(void))type metadata accessor for TemplateDescriptions);
}

unint64_t sub_100028CF8@<X0>(unint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_100026658(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_100028D24()
{
  return sub_10012CB80();
}

uint64_t sub_100028D84()
{
  return sub_10012CB70();
}

unint64_t sub_100028DD4()
{
  return sub_100027510(*v0);
}

uint64_t sub_100028DDC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1000270A0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100028E04@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_100027508();
  *a1 = result;
  return result;
}

uint64_t sub_100028E2C(uint64_t a1)
{
  unint64_t v2 = sub_100028F28();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100028E68(uint64_t a1)
{
  unint64_t v2 = sub_100028F28();

  return CodingKey.debugDescription.getter(a1, v2);
}

unint64_t sub_100028EAC()
{
  unint64_t result = qword_10016BAC0;
  if (!qword_10016BAC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016BAC0);
  }
  return result;
}

uint64_t sub_100028EF8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100027A1C(a1, a2);
}

uint64_t sub_100028F10(void *a1)
{
  return sub_10002767C(a1);
}

unint64_t sub_100028F28()
{
  unint64_t result = qword_10016BAD0;
  if (!qword_10016BAD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016BAD0);
  }
  return result;
}

unint64_t sub_100028F74()
{
  unint64_t result = qword_10016BAD8;
  if (!qword_10016BAD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016BAD8);
  }
  return result;
}

unint64_t sub_100028FC0()
{
  unint64_t result = qword_10016BAE0;
  if (!qword_10016BAE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016BAE0);
  }
  return result;
}

uint64_t sub_10002900C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for TemplateDescriptions(uint64_t a1)
{
  return sub_10001A270(a1, qword_10016BBB8);
}

unint64_t sub_100029074()
{
  unint64_t result = qword_10016BB10;
  if (!qword_10016BB10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016BB10);
  }
  return result;
}

unint64_t sub_1000290C0()
{
  unint64_t result = qword_10016BB18;
  if (!qword_10016BB18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016BB18);
  }
  return result;
}

uint64_t sub_10002910C(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100005470(&qword_10016BAE8);
    sub_10002900C(a2, (void (*)(uint64_t))type metadata accessor for TemplateDescriptions);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1000291A0()
{
  unint64_t result = qword_10016BB38;
  if (!qword_10016BB38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016BB38);
  }
  return result;
}

uint64_t sub_1000291EC()
{
  return sub_100028744(*v0);
}

uint64_t sub_1000291F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100028548(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_10002921C(uint64_t a1)
{
  unint64_t v2 = sub_10002A09C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100029258(uint64_t a1)
{
  unint64_t v2 = sub_10002A09C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100029298@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1000289C0(a1, a2);
}

uint64_t sub_1000292B0(void *a1)
{
  return sub_1000287F8(a1);
}

uint64_t getEnumTagSinglePayload for EventViewModel.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xF7)
  {
    if (a2 + 9 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 9) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 10;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xA;
  int v5 = v6 - 10;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for EventViewModel.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 9 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 9) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF7) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF6)
  {
    unsigned int v6 = ((a2 - 247) >> 8) + 1;
    *uint64_t result = a2 + 9;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10002941CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 9;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EventViewModel.CodingKeys()
{
  return &type metadata for EventViewModel.CodingKeys;
}

uint64_t *sub_100029454(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *int v3 = *a2;
    int v3 = (uint64_t *)(v12 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    uint64_t v6 = a2[3];
    a1[2] = a2[2];
    a1[3] = v6;
    uint64_t v7 = *(int *)(a3 + 28);
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    a1[4] = a2[4];
    uint64_t v10 = sub_100129300();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v9, 1, v10))
    {
      uint64_t v11 = sub_1000053D8(&qword_10016C7B0);
      memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
      _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v8, 0, 1, v10);
    }
  }
  return v3;
}

uint64_t sub_1000295B4(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 28);
  uint64_t v5 = sub_100129300();
  uint64_t result = _s13WeatherWidget20WeatherDataViewModelOwet_0(v4, 1, v5);
  if (!result)
  {
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
    return v7(v4, v5);
  }
  return result;
}

void *sub_100029660(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  a1[4] = a2[4];
  uint64_t v6 = *(int *)(a3 + 28);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_100129300();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v8, 1, v9))
  {
    uint64_t v10 = sub_1000053D8(&qword_10016C7B0);
    memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
    _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v7, 0, 1, v9);
  }
  return a1;
}

void *sub_100029770(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 28);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_100129300();
  int v10 = _s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v7, 1, v9);
  int v11 = _s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v8, 1, v9);
  if (!v10)
  {
    uint64_t v12 = *(void *)(v9 - 8);
    if (!v11)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 24))(v7, v8, v9);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    uint64_t v13 = sub_1000053D8(&qword_10016C7B0);
    memcpy(v7, v8, *(void *)(*(void *)(v13 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
  _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v7, 0, 1, v9);
  return a1;
}

uint64_t sub_100029928(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v5 = *(int *)(a3 + 28);
  uint64_t v6 = (void *)(a1 + v5);
  uint64_t v7 = (const void *)(a2 + v5);
  uint64_t v8 = sub_100129300();
  if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v7, 1, v8))
  {
    uint64_t v9 = sub_1000053D8(&qword_10016C7B0);
    memcpy(v6, v7, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v8 - 8) + 32))(v6, v7, v8);
    _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v6, 0, 1, v8);
  }
  return a1;
}

void *sub_100029A08(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRelease();
  uint64_t v8 = *(int *)(a3 + 28);
  uint64_t v9 = (char *)a1 + v8;
  int v10 = (char *)a2 + v8;
  uint64_t v11 = sub_100129300();
  int v12 = _s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v9, 1, v11);
  int v13 = _s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v10, 1, v11);
  if (!v12)
  {
    uint64_t v14 = *(void *)(v11 - 8);
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 40))(v9, v10, v11);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v14 + 8))(v9, v11);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    uint64_t v15 = sub_1000053D8(&qword_10016C7B0);
    memcpy(v9, v10, *(void *)(*(void *)(v15 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
  _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v9, 0, 1, v11);
  return a1;
}

uint64_t sub_100029B98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100029BAC);
}

uint64_t sub_100029BAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF) {
    return sub_10002A65C(*(void *)(a1 + 8));
  }
  uint64_t v7 = sub_1000053D8(&qword_10016C7B0);
  uint64_t v8 = a1 + *(int *)(a3 + 28);

  return _s13WeatherWidget20WeatherDataViewModelOwet_0(v8, a2, v7);
}

uint64_t sub_100029C2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100029C40);
}

uint64_t sub_100029C40(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_1000053D8(&qword_10016C7B0);
    uint64_t v8 = v5 + *(int *)(a4 + 28);
    return _s13WeatherWidget20WeatherDataViewModelOwst_0(v8, a2, a2, v7);
  }
  return result;
}

void sub_100029CC4()
{
  sub_100026090(319, &qword_10016BA68, (void (*)(uint64_t))&type metadata accessor for Date);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t getEnumTagSinglePayload for AlertSeverity(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFC)
  {
    if (a2 + 4 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 4) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 5;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 5;
  int v5 = v6 - 5;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for AlertSeverity(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100029ED8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AlertSeverity()
{
  return &type metadata for AlertSeverity;
}

unint64_t sub_100029F14()
{
  unint64_t result = qword_10016BBF8;
  if (!qword_10016BBF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016BBF8);
  }
  return result;
}

unint64_t sub_100029F64()
{
  unint64_t result = qword_10016BC00;
  if (!qword_10016BC00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016BC00);
  }
  return result;
}

unint64_t sub_100029FB4()
{
  unint64_t result = qword_10016BC08;
  if (!qword_10016BC08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016BC08);
  }
  return result;
}

unint64_t sub_10002A004()
{
  unint64_t result = qword_10016BC10;
  if (!qword_10016BC10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016BC10);
  }
  return result;
}

unint64_t sub_10002A050()
{
  unint64_t result = qword_10016BC18;
  if (!qword_10016BC18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016BC18);
  }
  return result;
}

unint64_t sub_10002A09C()
{
  unint64_t result = qword_10016BC28;
  if (!qword_10016BC28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016BC28);
  }
  return result;
}

unint64_t sub_10002A0E8()
{
  unint64_t result = qword_10016BC38;
  if (!qword_10016BC38)
  {
    sub_100005470(&qword_10016BC30);
    sub_10002900C(&qword_10016B6E8, (void (*)(uint64_t))&type metadata accessor for Date);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016BC38);
  }
  return result;
}

unint64_t sub_10002A194()
{
  unint64_t result = qword_10016BC48;
  if (!qword_10016BC48)
  {
    sub_100005470(&qword_10016BC30);
    sub_10002900C(&qword_10016B6C0, (void (*)(uint64_t))&type metadata accessor for Date);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016BC48);
  }
  return result;
}

uint64_t sub_10002A240(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_10000B3FC();
  uint64_t v4 = sub_10000B430();
  v5(v4);
  return a2;
}

uint64_t sub_10002A294(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_10000B3FC();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

unsigned char *storeEnumTagSinglePayload for TemplateDescriptions.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10002A3B8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TemplateDescriptions.CodingKeys()
{
  return &type metadata for TemplateDescriptions.CodingKeys;
}

unint64_t sub_10002A3F4()
{
  unint64_t result = qword_10016BC50;
  if (!qword_10016BC50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016BC50);
  }
  return result;
}

unint64_t sub_10002A444()
{
  unint64_t result = qword_10016BC58;
  if (!qword_10016BC58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016BC58);
  }
  return result;
}

unint64_t sub_10002A494()
{
  unint64_t result = qword_10016BC60;
  if (!qword_10016BC60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016BC60);
  }
  return result;
}

uint64_t sub_10002A4EC()
{
  return v0;
}

uint64_t sub_10002A504(uint64_t a1)
{
  return _s13WeatherWidget20WeatherDataViewModelOwet_0(a1, 1, v1);
}

uint64_t sub_10002A524()
{
  return v0;
}

uint64_t sub_10002A554()
{
  return v0;
}

uint64_t sub_10002A578()
{
  return sub_10012D180();
}

uint64_t sub_10002A594()
{
  return sub_10012D170();
}

void sub_10002A5AC(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 152) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t sub_10002A608()
{
  return 0;
}

uint64_t sub_10002A614()
{
  return v0;
}

uint64_t sub_10002A628()
{
  return sub_10012D2C0();
}

uint64_t sub_10002A65C@<X0>(unint64_t a1@<X8>)
{
  if (a1 >= 0xFFFFFFFF) {
    LODWORD(a1) = -1;
  }
  return (a1 + 1);
}

uint64_t sub_10002A670()
{
  return sub_10012D280();
}

uint64_t sub_10002A688@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v1 - 88) = a1;
  return sub_10012D100();
}

unint64_t sub_10002A6A8(unint64_t a1, uint64_t a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = v14 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v7 = *(void *)a2;
    uint64_t v8 = *(void *)(a2 + 8);
    char v9 = *(unsigned char *)(a2 + 16);
    sub_10000B0B0(*(void *)a2, v8, v9);
    *(void *)a1 = v7;
    *(void *)(a1 + 8) = v8;
    *(unsigned char *)(a1 + 16) = v9;
    *(void *)(a1 + 24) = *(void *)(a2 + 24);
    uint64_t v10 = *(void *)(a2 + 56);
    swift_bridgeObjectRetain();
    if (v10)
    {
      uint64_t v11 = *(void *)(a2 + 32);
      uint64_t v12 = *(void *)(a2 + 40);
      char v13 = *(unsigned char *)(a2 + 48);
      sub_10000B0B0(v11, v12, v13);
      *(void *)(a1 + 32) = v11;
      *(void *)(a1 + 40) = v12;
      *(unsigned char *)(a1 + 48) = v13;
      *(void *)(a1 + 56) = v10;
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v15 = *(_OWORD *)(a2 + 48);
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
      *(_OWORD *)(a1 + 48) = v15;
    }
    uint64_t v16 = *(void *)(a2 + 72);
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    *(void *)(a1 + 72) = v16;
    uint64_t v17 = *(int *)(a3 + 20);
    uint64_t v18 = (void *)(a1 + v17);
    uint64_t v19 = (void *)(a2 + v17);
    swift_retain();
    sub_1000053D8(&qword_10016B080);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v20 = sub_10012AFD0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
    }
    else
    {
      *uint64_t v18 = *v19;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_10002A854(uint64_t a1, uint64_t a2)
{
  sub_100008278(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 56))
  {
    sub_100008278(*(void *)(a1 + 32), *(void *)(a1 + 40), *(unsigned char *)(a1 + 48));
    swift_bridgeObjectRelease();
  }
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  sub_1000053D8(&qword_10016B080);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = sub_10012AFD0();
    unsigned int v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
    return v6(v4, v5);
  }
  else
  {
    return swift_release();
  }
}

uint64_t sub_10002A94C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)a2;
  uint64_t v7 = *(void *)(a2 + 8);
  char v8 = *(unsigned char *)(a2 + 16);
  sub_10000B0B0(*(void *)a2, v7, v8);
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v7;
  *(unsigned char *)(a1 + 16) = v8;
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  uint64_t v9 = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  if (v9)
  {
    uint64_t v10 = *(void *)(a2 + 32);
    uint64_t v11 = *(void *)(a2 + 40);
    char v12 = *(unsigned char *)(a2 + 48);
    sub_10000B0B0(v10, v11, v12);
    *(void *)(a1 + 32) = v10;
    *(void *)(a1 + 40) = v11;
    *(unsigned char *)(a1 + 48) = v12;
    *(void *)(a1 + 56) = v9;
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v13 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v13;
  }
  uint64_t v14 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v14;
  uint64_t v15 = *(int *)(a3 + 20);
  uint64_t v16 = (void *)(a1 + v15);
  uint64_t v17 = (void *)(a2 + v15);
  swift_retain();
  sub_1000053D8(&qword_10016B080);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v18 = sub_10012AFD0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  }
  else
  {
    void *v16 = *v17;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_10002AAA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)a2;
  uint64_t v7 = *(void *)(a2 + 8);
  char v8 = *(unsigned char *)(a2 + 16);
  sub_10000B0B0(*(void *)a2, v7, v8);
  uint64_t v9 = *(void *)a1;
  uint64_t v10 = *(void *)(a1 + 8);
  char v11 = *(unsigned char *)(a1 + 16);
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v7;
  *(unsigned char *)(a1 + 16) = v8;
  sub_100008278(v9, v10, v11);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  char v12 = (_OWORD *)(a1 + 32);
  long long v13 = (_OWORD *)(a2 + 32);
  uint64_t v14 = *(void *)(a2 + 56);
  if (*(void *)(a1 + 56))
  {
    if (v14)
    {
      uint64_t v15 = *(void *)(a2 + 32);
      uint64_t v16 = *(void *)(a2 + 40);
      char v17 = *(unsigned char *)(a2 + 48);
      sub_10000B0B0(v15, v16, v17);
      uint64_t v18 = *(void *)(a1 + 32);
      uint64_t v19 = *(void *)(a1 + 40);
      char v20 = *(unsigned char *)(a1 + 48);
      *(void *)(a1 + 32) = v15;
      *(void *)(a1 + 40) = v16;
      *(unsigned char *)(a1 + 48) = v17;
      sub_100008278(v18, v19, v20);
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_10002AC98(a1 + 32);
      long long v24 = *(_OWORD *)(a2 + 48);
      _OWORD *v12 = *v13;
      *(_OWORD *)(a1 + 48) = v24;
    }
  }
  else if (v14)
  {
    uint64_t v21 = *(void *)(a2 + 32);
    uint64_t v22 = *(void *)(a2 + 40);
    char v23 = *(unsigned char *)(a2 + 48);
    sub_10000B0B0(v21, v22, v23);
    *(void *)(a1 + 32) = v21;
    *(void *)(a1 + 40) = v22;
    *(unsigned char *)(a1 + 48) = v23;
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v25 = *(_OWORD *)(a2 + 48);
    _OWORD *v12 = *v13;
    *(_OWORD *)(a1 + 48) = v25;
  }
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_retain();
  swift_release();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  if (a1 != a2)
  {
    uint64_t v26 = *(int *)(a3 + 20);
    char v27 = (void *)(a1 + v26);
    uint64_t v28 = (void *)(a2 + v26);
    sub_1000235F8(a1 + v26, &qword_10016B080);
    sub_1000053D8(&qword_10016B080);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v29 = sub_10012AFD0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v29 - 8) + 16))(v27, v28, v29);
    }
    else
    {
      *char v27 = *v28;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_10002AC98(uint64_t a1)
{
  return a1;
}

char *sub_10002ACEC(char *a1, char *a2, uint64_t a3)
{
  memcpy(a1, a2, 0x50uLL);
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = &a1[v6];
  char v8 = &a2[v6];
  uint64_t v9 = sub_1000053D8(&qword_10016B080);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = sub_10012AFD0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v7, v8, v10);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
  }
  return a1;
}

uint64_t sub_10002ADC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v6 = *(unsigned char *)(a2 + 16);
  uint64_t v7 = *(void *)a1;
  uint64_t v8 = *(void *)(a1 + 8);
  char v9 = *(unsigned char *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = v6;
  sub_100008278(v7, v8, v9);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 56))
  {
    uint64_t v10 = *(void *)(a2 + 56);
    if (v10)
    {
      char v11 = *(unsigned char *)(a2 + 48);
      uint64_t v12 = *(void *)(a1 + 32);
      uint64_t v13 = *(void *)(a1 + 40);
      char v14 = *(unsigned char *)(a1 + 48);
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
      *(unsigned char *)(a1 + 48) = v11;
      sub_100008278(v12, v13, v14);
      *(void *)(a1 + 56) = v10;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_10002AC98(a1 + 32);
  }
  long long v15 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v15;
LABEL_6:
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_release();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  if (a1 != a2)
  {
    uint64_t v16 = *(int *)(a3 + 20);
    char v17 = (void *)(a1 + v16);
    uint64_t v18 = (const void *)(a2 + v16);
    sub_1000235F8(a1 + v16, &qword_10016B080);
    uint64_t v19 = sub_1000053D8(&qword_10016B080);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v20 = sub_10012AFD0();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v20 - 8) + 32))(v17, v18, v20);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_10002AF58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10002AF6C);
}

uint64_t sub_10002AF6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1000053D8(&qword_10016B0A8);
    uint64_t v9 = a1 + *(int *)(a3 + 20);
    return _s13WeatherWidget20WeatherDataViewModelOwet_0(v9, a2, v8);
  }
}

uint64_t sub_10002AFF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10002B00C);
}

uint64_t sub_10002B00C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 24) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_1000053D8(&qword_10016B0A8);
    uint64_t v8 = v5 + *(int *)(a4 + 20);
    return _s13WeatherWidget20WeatherDataViewModelOwst_0(v8, a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for ErrorView()
{
  uint64_t result = qword_10016BCC0;
  if (!qword_10016BCC0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_10002B0D8()
{
  sub_10002B170();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_10002B170()
{
  if (!qword_10016B128)
  {
    sub_10012AFD0();
    unint64_t v0 = sub_10012AB90();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10016B128);
    }
  }
}

uint64_t sub_10002B1C8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10002B1E4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v73 = a1;
  uint64_t v72 = sub_10012AFD0();
  sub_10000DB98();
  uint64_t v69 = v2;
  uint64_t v4 = __chkstk_darwin(v3);
  uint64_t v67 = (char *)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  sub_100012098((uint64_t)&v45 - v6);
  uint64_t v59 = sub_1000053D8(&qword_10016BCF8);
  sub_10000DB98();
  uint64_t v58 = v7;
  __chkstk_darwin(v8);
  sub_10000DBCC();
  sub_100012098(v9);
  uint64_t v57 = sub_1000053D8(&qword_10016BD00) - 8;
  __chkstk_darwin(v57);
  sub_10000DBCC();
  sub_100012098(v10);
  uint64_t v64 = sub_1000053D8(&qword_10016BD08) - 8;
  __chkstk_darwin(v64);
  sub_10000DBCC();
  sub_100012098(v11);
  uint64_t v63 = sub_1000053D8(&qword_10016BD10) - 8;
  __chkstk_darwin(v63);
  sub_10000DBCC();
  sub_100012098(v12);
  uint64_t v71 = sub_1000053D8(&qword_10016BD18);
  sub_10000B3FC();
  __chkstk_darwin(v13);
  sub_10000DBCC();
  sub_100012098(v14);
  uint64_t v70 = sub_1000053D8(&qword_10016BD20);
  sub_10000DB98();
  uint64_t v68 = v15;
  __chkstk_darwin(v16);
  sub_10000DBCC();
  sub_100012098(v17);
  int v47 = sub_10012B190();
  uint64_t v55 = v1;
  sub_10002B85C(v1, (uint64_t)&v74);
  uint64_t v18 = v74;
  uint64_t v19 = v75;
  uint64_t v49 = v74;
  uint64_t v48 = v75;
  int v46 = v76;
  uint64_t v20 = v77;
  uint64_t v21 = v78;
  uint64_t v50 = v77;
  uint64_t v53 = v78;
  uint64_t v22 = v79;
  uint64_t v23 = v80;
  uint64_t v51 = v79;
  uint64_t v52 = v80;
  uint64_t v25 = v81;
  uint64_t v24 = v82;
  uint64_t v26 = v83;
  uint64_t v27 = *(void *)(v1 + 64);
  uint64_t KeyPath = swift_getKeyPath();
  LOBYTE(v74) = v47;
  uint64_t v75 = v18;
  uint64_t v76 = v19;
  LOBYTE(v19) = v46;
  LOBYTE(v77) = v46;
  uint64_t v78 = v20;
  uint64_t v79 = v21;
  uint64_t v80 = v22;
  uint64_t v81 = v23;
  uint64_t v82 = v25;
  uint64_t v83 = v24;
  uint64_t v84 = v26;
  uint64_t v85 = KeyPath;
  uint64_t v86 = v27;
  swift_retain();
  sub_10012B2A0();
  sub_1000053D8(&qword_10016BD28);
  sub_10002B9B8();
  uint64_t v29 = v54;
  sub_10012B480();
  sub_100008278(v49, v48, v19);
  swift_bridgeObjectRelease();
  sub_10002BA7C(v53, v51, v52, v25);
  swift_release();
  swift_release();
  uint64_t v30 = sub_10012B5C0();
  uint64_t v31 = swift_getKeyPath();
  uint64_t v32 = v56;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v58 + 16))(v56, v29, v59);
  uint64_t v33 = (uint64_t *)(v32 + *(int *)(v57 + 44));
  *uint64_t v33 = v31;
  v33[1] = v30;
  sub_10002BF18();
  v34();
  type metadata accessor for ErrorView();
  sub_10008F524(v66);
  uint64_t v35 = v69;
  (*(void (**)(char *, void, uint64_t))(v69 + 104))(v67, enum case for ColorSchemeContrast.increased(_:), v72);
  LOBYTE(v30) = sub_10012AFC0();
  char v36 = *(void (**)(void))(v35 + 8);
  sub_10002BF18();
  v36();
  sub_10002BF18();
  v36();
  if (v30) {
    double v37 = 1.0;
  }
  else {
    double v37 = 0.6;
  }
  uint64_t v38 = v60;
  sub_10002BADC(v32, v60, &qword_10016BD00);
  *(double *)(v38 + *(int *)(v64 + 44)) = v37;
  sub_1000235F8(v32, &qword_10016BD00);
  uint64_t v39 = swift_getKeyPath();
  uint64_t v40 = v61;
  sub_10002BADC(v38, v61, &qword_10016BD08);
  uint64_t v41 = v40 + *(int *)(v63 + 44);
  *(void *)uint64_t v41 = v39;
  *(unsigned char *)(v41 + 8) = 1;
  sub_1000235F8(v38, &qword_10016BD08);
  sub_10012B7A0();
  uint64_t v42 = v62;
  sub_10004C6DC();
  sub_1000235F8(v40, &qword_10016BD10);
  sub_10002BC04(&qword_10016BD58, &qword_10016BD18, (void (*)(void))sub_10002BB38);
  uint64_t v43 = v65;
  sub_10012B440();
  sub_1000235F8(v42, &qword_10016BD18);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v68 + 32))(v73, v43, v70);
}

uint64_t sub_10002B85C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void *)a1;
  uint64_t v4 = *(void *)(a1 + 8);
  char v5 = *(unsigned char *)(a1 + 16);
  uint64_t v6 = *(void *)(a1 + 24);
  uint64_t v7 = *(void *)(a1 + 32);
  uint64_t v9 = *(void *)(a1 + 40);
  uint64_t v8 = *(void *)(a1 + 48);
  uint64_t v10 = *(void *)(a1 + 56);
  uint64_t v16 = v7;
  char v17 = v8;
  uint64_t v15 = v9;
  if (v10)
  {
    uint64_t v11 = v8 & 1;
    uint64_t v12 = *(void *)(a1 + 72);
    uint64_t KeyPath = swift_getKeyPath();
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v9 = 0;
    uint64_t v11 = 0;
    uint64_t KeyPath = 0;
    uint64_t v12 = 0;
  }
  *(void *)a2 = v3;
  *(void *)(a2 + 8) = v4;
  *(unsigned char *)(a2 + 16) = v5;
  *(void *)(a2 + 24) = v6;
  *(void *)(a2 + 32) = v7;
  *(void *)(a2 + 40) = v9;
  *(void *)(a2 + 48) = v11;
  *(void *)(a2 + 56) = v10;
  *(void *)(a2 + 64) = KeyPath;
  *(void *)(a2 + 72) = v12;
  sub_10000B0B0(v3, v4, v5);
  swift_bridgeObjectRetain();
  sub_10002BD54(v7, v9, v11, v10);
  swift_bridgeObjectRetain();
  sub_10000B0B0(v3, v4, v5);
  sub_10002BDA4(v16, v15, v17, v10);
  sub_10002BA7C(v7, v9, v11, v10);
  sub_100008278(v3, v4, v5);

  return swift_bridgeObjectRelease();
}

unint64_t sub_10002B9B8()
{
  unint64_t result = qword_10016BD30;
  if (!qword_10016BD30)
  {
    sub_100005470(&qword_10016BD28);
    sub_10000B38C(&qword_10016BD38, &qword_10016BD40);
    sub_10000B38C(&qword_10016BD48, &qword_10016BD50);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016BD30);
  }
  return result;
}

uint64_t sub_10002BA7C(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    sub_100008278(result, a2, a3 & 1);
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_10002BADC(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  sub_1000053D8(a3);
  sub_10000B3FC();
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(a2, a1);
  return a2;
}

unint64_t sub_10002BB38()
{
  unint64_t result = qword_10016BD60;
  if (!qword_10016BD60)
  {
    sub_100005470(&qword_10016BD10);
    sub_10002BC04(&qword_10016BD68, &qword_10016BD08, (void (*)(void))sub_10002BC80);
    sub_10000B38C(&qword_10016BD88, &qword_10016BD90);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016BD60);
  }
  return result;
}

uint64_t sub_10002BC04(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100005470(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10002BC80()
{
  unint64_t result = qword_10016BD70;
  if (!qword_10016BD70)
  {
    sub_100005470(&qword_10016BD00);
    sub_100005470(&qword_10016BD28);
    sub_10002B9B8();
    swift_getOpaqueTypeConformance2();
    sub_10000B38C(&qword_10016BD78, &qword_10016BD80);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016BD70);
  }
  return result;
}

uint64_t sub_10002BD54(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    sub_10000B0B0(result, a2, a3 & 1);
    swift_bridgeObjectRetain();
    return swift_retain();
  }
  return result;
}

uint64_t sub_10002BDA4(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    sub_10000B0B0(result, a2, a3 & 1);
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_10002BDE8@<X0>(void *a1@<X8>)
{
  uint64_t result = sub_10012AD90();
  *a1 = v3;
  return result;
}

uint64_t sub_10002BE14@<X0>(void *a1@<X8>)
{
  uint64_t result = sub_10012AD90();
  *a1 = v3;
  return result;
}

uint64_t sub_10002BE40()
{
  return sub_10012ADA0();
}

uint64_t sub_10002BE68()
{
  return sub_10012ADA0();
}

uint64_t sub_10002BE90()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t destroy for LargePrecipitationViewAttributes()
{
  swift_bridgeObjectRelease();

  return swift_release();
}

uint64_t initializeWithCopy for LargePrecipitationViewAttributes(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for LargePrecipitationViewAttributes(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  return a1;
}

__n128 initializeWithTake for LargePrecipitationViewAttributes(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for LargePrecipitationViewAttributes(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for LargePrecipitationViewAttributes(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 25))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for LargePrecipitationViewAttributes(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 25) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LargePrecipitationViewAttributes()
{
  return &type metadata for LargePrecipitationViewAttributes;
}

uint64_t sub_10002C114@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_10012BE90();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for WeatherDataViewModel();
  sub_10000B3FC();
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v28 - v11;
  type metadata accessor for ForecastEntry.Model(0);
  sub_10000B3FC();
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for ForecastEntry(0);
  sub_100012588(v1 + *(int *)(v16 + 28), (uint64_t)v15, (void (*)(void))type metadata accessor for ForecastEntry.Model);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_10002C4DC((uint64_t)v15, (uint64_t)v12);
    sub_100012588((uint64_t)v12, (uint64_t)v10, (void (*)(void))type metadata accessor for WeatherDataViewModel);
    if (swift_getEnumCaseMultiPayload() >= 2)
    {
      uint64_t v22 = *(void (**)(char *, char *, uint64_t))(v4 + 32);
      v22(v6, v10, v3);
      if (qword_10016AE28 != -1) {
        swift_once();
      }
      uint64_t v23 = sub_10012AB60();
      sub_10000D7A4(v23, (uint64_t)qword_100181C40);
      uint64_t v24 = sub_10012AB40();
      os_log_type_t v25 = sub_10012CD60();
      if (os_log_type_enabled(v24, v25))
      {
        uint64_t v26 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v26 = 0;
        _os_log_impl((void *)&_mh_execute_header, v24, v25, "Making Sunrise/Sunset widget view model entry from aggregate weather", v26, 2u);
        swift_slowDealloc();
      }

      sub_10002C540((uint64_t)v12);
      v22((char *)a1, v6, v3);
      uint64_t v21 = 0;
    }
    else
    {
      sub_10002C540((uint64_t)v10);
      if (qword_10016AE28 != -1) {
        swift_once();
      }
      uint64_t v17 = sub_10012AB60();
      sub_10000D7A4(v17, (uint64_t)qword_100181C40);
      uint64_t v18 = sub_10012AB40();
      os_log_type_t v19 = sub_10012CD40();
      if (os_log_type_enabled(v18, v19))
      {
        uint64_t v20 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v20 = 0;
        _os_log_impl((void *)&_mh_execute_header, v18, v19, "Expected sunriseSunset but got aggregate or instant", v20, 2u);
        swift_slowDealloc();
      }

      sub_10002C540((uint64_t)v12);
      uint64_t v21 = 1;
    }
  }
  else if (*v15)
  {
    uint64_t v21 = 1;
  }
  else
  {
    uint64_t v21 = 2;
  }
  return _s13WeatherWidget20WeatherDataViewModelOwst_0(a1, v21, 2, v3);
}

uint64_t sub_10002C4DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for WeatherDataViewModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10002C540(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for WeatherDataViewModel();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10002C59C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000053D8(&qword_10016BD98);
  sub_10000DB98();
  uint64_t v6 = v5;
  __chkstk_darwin(v7);
  sub_10000DC50();
  uint64_t v10 = v9 - v8;
  sub_1000053D8(&qword_10016BDA0);
  sub_10000DB98();
  uint64_t v40 = v11;
  uint64_t v41 = v12;
  __chkstk_darwin(v11);
  sub_10000DC50();
  uint64_t v15 = v14 - v13;
  sub_1000053D8(&qword_10016BDA8);
  sub_10000DB98();
  uint64_t v42 = v16;
  uint64_t v43 = v17;
  __chkstk_darwin(v16);
  sub_10000DC50();
  uint64_t v39 = v19 - v18;
  type metadata accessor for WeatherTimelineProvider();
  swift_allocObject();
  swift_bridgeObjectRetain_n();
  sub_100118DBC(64, a1, a2);
  type metadata accessor for RainContentView();
  sub_10002CC68(&qword_10016BDB0, (void (*)(uint64_t))type metadata accessor for RainContentView);
  sub_10002CC68(&qword_10016BDB8, (void (*)(uint64_t))type metadata accessor for WeatherTimelineProvider);
  sub_10012C890();
  sub_10012AF80();
  uint64_t v20 = sub_10012B400();
  uint64_t v22 = v21;
  char v24 = v23 & 1;
  sub_10002CCB0();
  sub_10012B0B0();
  sub_100008278(v20, v22, v24);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v10, v4);
  sub_10012AF80();
  uint64_t v25 = sub_10012B400();
  uint64_t v27 = v26;
  LOBYTE(v22) = v28 & 1;
  swift_getOpaqueTypeConformance2();
  sub_10012B070();
  sub_100008278(v25, v27, v22);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v15, v40);
  sub_1000053D8(&qword_10016B9C8);
  uint64_t v29 = sub_10012C800();
  sub_10000DB98();
  uint64_t v31 = v30;
  uint64_t v33 = *(void *)(v32 + 72);
  unint64_t v34 = (*(unsigned __int8 *)(v30 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80);
  uint64_t v35 = swift_allocObject();
  *(_OWORD *)(v35 + 16) = xmmword_100130850;
  unint64_t v36 = v35 + v34;
  double v37 = *(void (**)(unint64_t, void, uint64_t))(v31 + 104);
  v37(v36, enum case for WidgetFamily.accessoryCircular(_:), v29);
  v37(v36 + v33, enum case for WidgetFamily.accessoryInline(_:), v29);
  swift_getOpaqueTypeConformance2();
  sub_10012B090();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v43 + 8))(v39, v42);
}

uint64_t sub_10002CA7C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = type metadata accessor for ForecastEntry(0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100024484(a1, (uint64_t)v6);
  *a2 = swift_getKeyPath();
  sub_1000053D8(&qword_10016B410);
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = type metadata accessor for RainContentView();
  return sub_100024560((uint64_t)v6, (uint64_t)a2 + *(int *)(v7 + 20));
}

uint64_t sub_10002CB40()
{
  uint64_t v0 = sub_10012A0B0();
  sub_10000DB98();
  uint64_t v2 = v1;
  __chkstk_darwin(v3);
  sub_10000DC50();
  uint64_t v6 = v5 - v4;
  (*(void (**)(uint64_t, void, uint64_t))(v2 + 104))(v5 - v4, enum case for WidgetNames.RainComplication(_:), v0);
  uint64_t v7 = sub_10012A0A0();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v6, v0);
  return v7;
}

ValueMetadata *type metadata accessor for RainComplicationWidget()
{
  return &type metadata for RainComplicationWidget;
}

uint64_t sub_10002CC1C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10002CC38@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_10002CB40();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_10002CC60()
{
  return sub_10002C59C(*v0, v0[1]);
}

uint64_t sub_10002CC68(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10002CCB0()
{
  unint64_t result = qword_10016BDC0;
  if (!qword_10016BDC0)
  {
    sub_100005470(&qword_10016BD98);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016BDC0);
  }
  return result;
}

uint64_t sub_10002CD08()
{
  return swift_getOpaqueTypeConformance2();
}

void *sub_10002CDD4(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1000235F8((uint64_t)a1, &qword_10016B410);
    sub_1000053D8(&qword_10016B410);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_10012C800();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_100129300();
  uint64_t v97 = *(void *)(v10 - 8);
  uint64_t v98 = v10;
  (*(void (**)(char *, char *))(v97 + 24))(v8, v9);
  uint64_t v11 = type metadata accessor for ForecastEntry(0);
  uint64_t v12 = *(int *)(v11 + 20);
  uint64_t v13 = &v8[v12];
  uint64_t v14 = &v9[v12];
  uint64_t v15 = sub_10012C920();
  int v16 = _s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v13, 1, v15);
  int v17 = _s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v14, 1, v15);
  uint64_t v100 = a1;
  if (v16)
  {
    if (!v17)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
      _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v13, 0, 1, v15);
      goto LABEL_12;
    }
    goto LABEL_11;
  }
  uint64_t v18 = *(void *)(v15 - 8);
  if (v17)
  {
    (*(void (**)(char *, uint64_t))(v18 + 8))(v13, v15);
LABEL_11:
    uint64_t v19 = sub_1000053D8(&qword_10016B418);
    memcpy(v13, v14, *(void *)(*(void *)(v19 - 8) + 64));
    goto LABEL_12;
  }
  (*(void (**)(char *, char *, uint64_t))(v18 + 24))(v13, v14, v15);
LABEL_12:
  uint64_t v99 = v11;
  uint64_t v20 = *(int *)(v11 + 24);
  uint64_t v21 = &v8[v20];
  uint64_t v22 = &v9[v20];
  *(void *)uint64_t v21 = *(void *)&v9[v20];
  *((void *)v21 + 1) = *(void *)&v9[v20 + 8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v21 + 2) = *((void *)v22 + 2);
  *((void *)v21 + 3) = *((void *)v22 + 3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v21 + 4) = *((void *)v22 + 4);
  *((void *)v21 + 5) = *((void *)v22 + 5);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v21[48] = v22[48];
  v21[49] = v22[49];
  v21[50] = v22[50];
  v21[51] = v22[51];
  uint64_t v23 = type metadata accessor for WidgetContext();
  uint64_t v24 = *(int *)(v23 + 40);
  uint64_t v25 = &v21[v24];
  uint64_t v26 = &v22[v24];
  uint64_t v27 = sub_100129220();
  int v28 = _s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v25, 1, v27);
  int v29 = _s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v26, 1, v27);
  if (v28)
  {
    if (!v29)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
      _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v25, 0, 1, v27);
      goto LABEL_18;
    }
    goto LABEL_17;
  }
  uint64_t v30 = *(void *)(v27 - 8);
  if (v29)
  {
    (*(void (**)(char *, uint64_t))(v30 + 8))(v25, v27);
LABEL_17:
    uint64_t v31 = sub_1000053D8(&qword_10016B420);
    memcpy(v25, v26, *(void *)(*(void *)(v31 - 8) + 64));
    goto LABEL_18;
  }
  (*(void (**)(char *, char *, uint64_t))(v30 + 24))(v25, v26, v27);
LABEL_18:
  uint64_t v32 = *(int *)(v23 + 44);
  uint64_t v33 = &v21[v32];
  unint64_t v34 = &v22[v32];
  *(void *)uint64_t v33 = *(void *)v34;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v33[8] = v34[8];
  uint64_t v35 = v100;
  if (v100 != a2)
  {
    uint64_t v36 = *(int *)(v99 + 28);
    double v37 = &v8[v36];
    uint64_t v38 = &v9[v36];
    sub_10002FA80((uint64_t)&v8[v36], (void (*)(void))type metadata accessor for ForecastEntry.Model);
    uint64_t v39 = type metadata accessor for ForecastEntry.Model(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      type metadata accessor for WeatherDataViewModel();
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        uint64_t v51 = sub_10012BE90();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v51 - 8) + 16))(v37, v38, v51);
      }
      else if (EnumCaseMultiPayload == 1)
      {
        uint64_t v41 = sub_100129330();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v41 - 8) + 16))(v37, v38, v41);
        uint64_t v42 = type metadata accessor for InstantWeatherViewModel();
        uint64_t v43 = *(int *)(v42 + 20);
        uint64_t v44 = &v37[v43];
        uint64_t v45 = &v38[v43];
        uint64_t v46 = sub_10012A6B0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v46 - 8) + 16))(v44, v45, v46);
        uint64_t v47 = *(int *)(v42 + 24);
        uint64_t v48 = &v37[v47];
        uint64_t v49 = &v38[v47];
        uint64_t v50 = sub_10012C250();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v50 - 8) + 16))(v48, v49, v50);
      }
      else
      {
        uint64_t v52 = sub_100129330();
        uint64_t v95 = *(void (**)(char *, char *))(*(void *)(v52 - 8) + 16);
        uint64_t v96 = v52;
        v95(v37, v38);
        uint64_t v53 = (int *)type metadata accessor for AggregateWeatherViewModel(0);
        uint64_t v54 = v53[5];
        uint64_t v55 = &v37[v54];
        uint64_t v56 = &v38[v54];
        uint64_t v57 = sub_10012A6B0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v57 - 8) + 16))(v55, v56, v57);
        uint64_t v58 = v53[6];
        uint64_t v59 = &v37[v58];
        uint64_t v60 = &v38[v58];
        uint64_t v61 = sub_10012C250();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v61 - 8) + 16))(v59, v60, v61);
        *(void *)&v37[v53[7]] = *(void *)&v38[v53[7]];
        *(void *)&v37[v53[8]] = *(void *)&v38[v53[8]];
        uint64_t v62 = v53[9];
        uint64_t v63 = &v37[v62];
        uint64_t v64 = &v38[v62];
        uint64_t v65 = (int *)type metadata accessor for AirQualityViewModel();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v64, 1, (uint64_t)v65))
        {
          uint64_t v66 = sub_1000053D8(&qword_10016B428);
          memcpy(v63, v64, *(void *)(*(void *)(v66 - 8) + 64));
        }
        else
        {
          uint64_t v67 = (uint64_t)v63;
          ((void (*)(char *, char *, uint64_t))v95)(v63, v64, v96);
          (*(void (**)(char *, char *, uint64_t))(v97 + 16))(&v63[v65[5]], &v64[v65[5]], v98);
          *(void *)&v63[v65[6]] = *(void *)&v64[v65[6]];
          uint64_t v68 = v65[7];
          uint64_t v69 = &v63[v68];
          uint64_t v70 = &v64[v68];
          uint64_t v71 = sub_100129B70();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v71 - 8) + 16))(v69, v70, v71);
          uint64_t v72 = v65[8];
          uint64_t v73 = v67 + v72;
          uint64_t v74 = &v64[v72];
          uint64_t v75 = sub_100129C50();
          (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v75 - 8) + 16))(v73, v74, v75);
          _s13WeatherWidget20WeatherDataViewModelOwst_0(v67, 0, 1, (uint64_t)v65);
        }
        uint64_t v76 = v53[10];
        uint64_t v77 = &v37[v76];
        uint64_t v78 = &v38[v76];
        uint64_t v79 = sub_10012C6B0();
        uint64_t v35 = v100;
        if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v78, 1, v79))
        {
          uint64_t v80 = sub_1000053D8(&qword_10016B430);
          memcpy(v77, v78, *(void *)(*(void *)(v80 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v79 - 8) + 16))(v77, v78, v79);
          _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v77, 0, 1, v79);
        }
        *(void *)&v37[v53[11]] = *(void *)&v38[v53[11]];
        uint64_t v81 = v53[12];
        uint64_t v82 = &v37[v81];
        uint64_t v83 = &v38[v81];
        uint64_t v84 = *(void *)v83;
        *((_WORD *)v82 + 4) = *((_WORD *)v83 + 4);
        *(void *)uint64_t v82 = v84;
        uint64_t v85 = v53[13];
        uint64_t v86 = &v37[v85];
        uint64_t v87 = &v38[v85];
        swift_bridgeObjectRetain();
        if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v87, 1, v27))
        {
          uint64_t v88 = sub_1000053D8(&qword_10016B420);
          memcpy(v86, v87, *(void *)(*(void *)(v88 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16))(v86, v87, v27);
          _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v86, 0, 1, v27);
        }
        uint64_t v89 = v53[14];
        BOOL v90 = &v37[v89];
        char v91 = &v38[v89];
        uint64_t v92 = type metadata accessor for AggregateWeatherViewModel.SunEvent(0);
        if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v91, 1, v92))
        {
          uint64_t v93 = sub_1000053D8(&qword_10016B438);
          memcpy(v90, v91, *(void *)(*(void *)(v93 - 8) + 64));
        }
        else
        {
          swift_getEnumCaseMultiPayload();
          (*(void (**)(char *, char *, uint64_t))(v97 + 16))(v90, v91, v98);
          swift_storeEnumTagMultiPayload();
          _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v90, 0, 1, v92);
        }
      }
      swift_storeEnumTagMultiPayload();
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v37, v38, *(void *)(*(void *)(v39 - 8) + 64));
    }
  }
  return v35;
}

char *sub_10002D8BC(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1000235F8((uint64_t)a1, &qword_10016B410);
    uint64_t v6 = sub_1000053D8(&qword_10016B410);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_10012C800();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
  }
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = sub_100129300();
  uint64_t v99 = *(void *)(v11 - 8);
  uint64_t v100 = v11;
  (*(void (**)(char *, char *))(v99 + 40))(v9, v10);
  uint64_t v12 = type metadata accessor for ForecastEntry(0);
  uint64_t v13 = *(int *)(v12 + 20);
  uint64_t v14 = &v9[v13];
  uint64_t v15 = &v10[v13];
  uint64_t v16 = sub_10012C920();
  int v17 = _s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v14, 1, v16);
  int v18 = _s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v15, 1, v16);
  uint64_t v103 = a1;
  if (v17)
  {
    if (!v18)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v14, v15, v16);
      _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v14, 0, 1, v16);
      goto LABEL_11;
    }
    goto LABEL_10;
  }
  uint64_t v19 = *(void *)(v16 - 8);
  if (v18)
  {
    (*(void (**)(char *, uint64_t))(v19 + 8))(v14, v16);
LABEL_10:
    uint64_t v20 = sub_1000053D8(&qword_10016B418);
    memcpy(v14, v15, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_11;
  }
  (*(void (**)(char *, char *, uint64_t))(v19 + 40))(v14, v15, v16);
LABEL_11:
  uint64_t v102 = v12;
  uint64_t v21 = *(int *)(v12 + 24);
  uint64_t v22 = &v9[v21];
  uint64_t v23 = &v10[v21];
  uint64_t v24 = *(void *)&v10[v21 + 8];
  *(void *)uint64_t v22 = *(void *)&v10[v21];
  *((void *)v22 + 1) = v24;
  swift_bridgeObjectRelease();
  uint64_t v25 = *((void *)v23 + 3);
  *((void *)v22 + 2) = *((void *)v23 + 2);
  *((void *)v22 + 3) = v25;
  swift_bridgeObjectRelease();
  uint64_t v26 = *((void *)v23 + 5);
  *((void *)v22 + 4) = *((void *)v23 + 4);
  *((void *)v22 + 5) = v26;
  swift_bridgeObjectRelease();
  *((_WORD *)v22 + 24) = *((_WORD *)v23 + 24);
  v22[50] = v23[50];
  v22[51] = v23[51];
  uint64_t v27 = type metadata accessor for WidgetContext();
  uint64_t v28 = *(int *)(v27 + 40);
  int v29 = &v22[v28];
  uint64_t v30 = &v23[v28];
  uint64_t v31 = sub_100129220();
  int v32 = _s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v29, 1, v31);
  int v33 = _s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v30, 1, v31);
  uint64_t v101 = v31;
  if (v32)
  {
    if (!v33)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 32))(v29, v30, v31);
      _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v29, 0, 1, v31);
      goto LABEL_17;
    }
    goto LABEL_16;
  }
  uint64_t v34 = *(void *)(v31 - 8);
  if (v33)
  {
    (*(void (**)(char *, uint64_t))(v34 + 8))(v29, v31);
LABEL_16:
    uint64_t v35 = sub_1000053D8(&qword_10016B420);
    memcpy(v29, v30, *(void *)(*(void *)(v35 - 8) + 64));
    goto LABEL_17;
  }
  (*(void (**)(char *, char *, uint64_t))(v34 + 40))(v29, v30, v31);
LABEL_17:
  uint64_t v36 = *(int *)(v27 + 44);
  double v37 = &v22[v36];
  uint64_t v38 = &v23[v36];
  *(void *)double v37 = *(void *)&v23[v36];
  swift_bridgeObjectRelease();
  v37[8] = v38[8];
  uint64_t v39 = v103;
  if (v103 != a2)
  {
    uint64_t v40 = *(int *)(v102 + 28);
    uint64_t v41 = &v9[v40];
    uint64_t v42 = &v10[v40];
    sub_10002FA80((uint64_t)&v9[v40], (void (*)(void))type metadata accessor for ForecastEntry.Model);
    uint64_t v43 = type metadata accessor for ForecastEntry.Model(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      type metadata accessor for WeatherDataViewModel();
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        uint64_t v55 = sub_10012BE90();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v55 - 8) + 32))(v41, v42, v55);
      }
      else if (EnumCaseMultiPayload == 1)
      {
        uint64_t v45 = sub_100129330();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v45 - 8) + 32))(v41, v42, v45);
        uint64_t v46 = type metadata accessor for InstantWeatherViewModel();
        uint64_t v47 = *(int *)(v46 + 20);
        uint64_t v48 = &v41[v47];
        uint64_t v49 = &v42[v47];
        uint64_t v50 = sub_10012A6B0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v50 - 8) + 32))(v48, v49, v50);
        uint64_t v51 = *(int *)(v46 + 24);
        uint64_t v52 = &v41[v51];
        uint64_t v53 = &v42[v51];
        uint64_t v54 = sub_10012C250();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v54 - 8) + 32))(v52, v53, v54);
      }
      else
      {
        uint64_t v56 = sub_100129330();
        uint64_t v57 = *(void (**)(char *, char *))(*(void *)(v56 - 8) + 32);
        uint64_t v98 = v56;
        v57(v41, v42);
        uint64_t v58 = (int *)type metadata accessor for AggregateWeatherViewModel(0);
        uint64_t v59 = v58[5];
        uint64_t v60 = &v41[v59];
        uint64_t v61 = &v42[v59];
        uint64_t v62 = sub_10012A6B0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v62 - 8) + 32))(v60, v61, v62);
        uint64_t v63 = v58[6];
        uint64_t v64 = &v41[v63];
        uint64_t v65 = &v42[v63];
        uint64_t v66 = sub_10012C250();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v66 - 8) + 32))(v64, v65, v66);
        *(void *)&v41[v58[7]] = *(void *)&v42[v58[7]];
        *(void *)&v41[v58[8]] = *(void *)&v42[v58[8]];
        uint64_t v67 = v58[9];
        uint64_t v68 = &v41[v67];
        uint64_t v69 = &v42[v67];
        uint64_t v70 = (int *)type metadata accessor for AirQualityViewModel();
        if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v69, 1, (uint64_t)v70))
        {
          uint64_t v71 = sub_1000053D8(&qword_10016B428);
          memcpy(v68, v69, *(void *)(*(void *)(v71 - 8) + 64));
        }
        else
        {
          ((void (*)(char *, char *, uint64_t))v57)(v68, v69, v98);
          (*(void (**)(char *, char *, uint64_t))(v99 + 32))(&v68[v70[5]], &v69[v70[5]], v100);
          *(void *)&v68[v70[6]] = *(void *)&v69[v70[6]];
          uint64_t v72 = v70[7];
          uint64_t v73 = &v68[v72];
          uint64_t v74 = &v69[v72];
          uint64_t v75 = sub_100129B70();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v75 - 8) + 32))(v73, v74, v75);
          uint64_t v76 = v70[8];
          uint64_t v77 = &v68[v76];
          uint64_t v78 = &v69[v76];
          uint64_t v79 = sub_100129C50();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v79 - 8) + 32))(v77, v78, v79);
          _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v68, 0, 1, (uint64_t)v70);
        }
        uint64_t v80 = v58[10];
        uint64_t v81 = &v41[v80];
        uint64_t v82 = &v42[v80];
        uint64_t v83 = sub_10012C6B0();
        uint64_t v39 = v103;
        if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v82, 1, v83))
        {
          uint64_t v84 = sub_1000053D8(&qword_10016B430);
          memcpy(v81, v82, *(void *)(*(void *)(v84 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v83 - 8) + 32))(v81, v82, v83);
          _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v81, 0, 1, v83);
        }
        *(void *)&v41[v58[11]] = *(void *)&v42[v58[11]];
        uint64_t v85 = v58[12];
        uint64_t v86 = &v41[v85];
        uint64_t v87 = &v42[v85];
        *(void *)uint64_t v86 = *(void *)v87;
        *((_WORD *)v86 + 4) = *((_WORD *)v87 + 4);
        uint64_t v88 = v58[13];
        uint64_t v89 = &v41[v88];
        BOOL v90 = &v42[v88];
        if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)&v42[v88], 1, v101))
        {
          uint64_t v91 = sub_1000053D8(&qword_10016B420);
          memcpy(v89, v90, *(void *)(*(void *)(v91 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v101 - 8) + 32))(v89, v90, v101);
          _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v89, 0, 1, v101);
        }
        uint64_t v92 = v58[14];
        uint64_t v93 = &v41[v92];
        uint64_t v94 = &v42[v92];
        uint64_t v95 = type metadata accessor for AggregateWeatherViewModel.SunEvent(0);
        if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v94, 1, v95))
        {
          uint64_t v96 = sub_1000053D8(&qword_10016B438);
          memcpy(v93, v94, *(void *)(*(void *)(v96 - 8) + 64));
        }
        else
        {
          swift_getEnumCaseMultiPayload();
          (*(void (**)(char *, char *, uint64_t))(v99 + 32))(v93, v94, v100);
          swift_storeEnumTagMultiPayload();
          _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v93, 0, 1, v95);
        }
      }
      swift_storeEnumTagMultiPayload();
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v41, v42, *(void *)(*(void *)(v43 - 8) + 64));
    }
  }
  return v39;
}

uint64_t sub_10002E358(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10002E36C);
}

uint64_t sub_10002E36C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1000053D8(&qword_10016B440);
  sub_10000B3D0();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1;
  }
  else
  {
    uint64_t v8 = type metadata accessor for ForecastEntry(0);
    uint64_t v9 = a1 + *(int *)(a3 + 20);
  }

  return _s13WeatherWidget20WeatherDataViewModelOwet_0(v9, a2, v8);
}

uint64_t sub_10002E3EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10002E400);
}

uint64_t sub_10002E400(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_1000053D8(&qword_10016B440);
  sub_10000B3D0();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = a1;
  }
  else
  {
    uint64_t v10 = type metadata accessor for ForecastEntry(0);
    uint64_t v11 = a1 + *(int *)(a4 + 20);
  }

  return _s13WeatherWidget20WeatherDataViewModelOwst_0(v11, a2, a2, v10);
}

uint64_t type metadata accessor for RainContentView()
{
  uint64_t result = qword_10016BE20;
  if (!qword_10016BE20) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10002E4D0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10002E4EC@<X0>(uint64_t a1@<X8>)
{
  return sub_10002E4F4(v1, a1);
}

uint64_t sub_10002E4F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v82 = a2;
  uint64_t v75 = sub_1000053D8(&qword_10016BE58);
  __chkstk_darwin(v75);
  uint64_t v76 = (uint64_t)&v52 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v81 = sub_1000053D8(&qword_10016BE60);
  __chkstk_darwin(v81);
  uint64_t v77 = (char *)&v52 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v73 = type metadata accessor for RainInlineContentView();
  __chkstk_darwin(v73);
  uint64_t v58 = (char *)&v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = sub_1000053D8(&qword_10016BE68);
  __chkstk_darwin(v68);
  uint64_t v71 = (uint64_t)&v52 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v70 = sub_1000053D8(&qword_10016BE70);
  __chkstk_darwin(v70);
  uint64_t v57 = (char *)&v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v72 = sub_1000053D8(&qword_10016BE78);
  __chkstk_darwin(v72);
  uint64_t v74 = (char *)&v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for RainContentView();
  uint64_t v10 = __chkstk_darwin(v9 - 8);
  uint64_t v55 = (uint64_t)&v52 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v54 = (uint64_t)&v52 - v12;
  uint64_t v78 = sub_1000053D8(&qword_10016BE80);
  __chkstk_darwin(v78);
  uint64_t v80 = (uint64_t)&v52 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = sub_1000053D8(&qword_10016BE88);
  __chkstk_darwin(v66);
  uint64_t v67 = (uint64_t)&v52 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v79 = sub_1000053D8(&qword_10016BE90);
  __chkstk_darwin(v79);
  uint64_t v69 = (char *)&v52 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = type metadata accessor for RainCircularContentView();
  __chkstk_darwin(v64);
  uint64_t v56 = (char *)&v52 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = sub_1000053D8(&qword_10016BE98);
  __chkstk_darwin(v60);
  uint64_t v59 = (uint64_t)&v52 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = sub_1000053D8(&qword_10016BEA0);
  __chkstk_darwin(v62);
  uint64_t v19 = (char *)&v52 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_1000053D8(&qword_10016BEA8);
  uint64_t v21 = __chkstk_darwin(v20 - 8);
  uint64_t v23 = (char *)&v52 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  uint64_t v25 = (char *)&v52 - v24;
  uint64_t v26 = sub_10012C0E0();
  uint64_t v65 = *(void *)(v26 - 8);
  uint64_t v27 = __chkstk_darwin(v26);
  int v29 = (char *)&v52 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27);
  uint64_t v31 = (char *)&v52 - v30;
  uint64_t v61 = sub_1000053D8(&qword_10016BEB0);
  __chkstk_darwin(v61);
  uint64_t v63 = (char *)&v52 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = sub_10012C800();
  uint64_t v34 = *(void *)(v33 - 8);
  uint64_t v35 = __chkstk_darwin(v33);
  uint64_t v52 = (uint64_t)&v52 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v35);
  uint64_t v38 = (char *)&v52 - v37;
  sub_10008F554((uint64_t)&v52 - v37);
  uint64_t v53 = v34;
  int v39 = (*(uint64_t (**)(char *, uint64_t))(v34 + 88))(v38, v33);
  if (v39 == enum case for WidgetFamily.accessoryCircular(_:))
  {
    sub_10002F440(2, (uint64_t)v25);
    if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v25, 1, v26) == 1)
    {
      sub_1000235F8((uint64_t)v25, &qword_10016BEA8);
      sub_10006EF2C();
      sub_10000B114((uint64_t)v19, v59, &qword_10016BEA0);
      swift_storeEnumTagMultiPayload();
      sub_10002F7CC(&qword_10016BEE8, (void (*)(uint64_t))type metadata accessor for RainCircularContentView);
      sub_10002F814();
      uint64_t v40 = (uint64_t)v63;
      sub_10012B0E0();
      sub_1000235F8((uint64_t)v19, &qword_10016BEA0);
    }
    else
    {
      uint64_t v42 = v65;
      (*(void (**)(char *, char *, uint64_t))(v65 + 32))(v31, v25, v26);
      uint64_t v43 = (uint64_t)v56;
      (*(void (**)(char *, char *, uint64_t))(v42 + 16))(v56, v31, v26);
      sub_10002F9C8(v43, v59, (void (*)(void))type metadata accessor for RainCircularContentView);
      swift_storeEnumTagMultiPayload();
      sub_10002F7CC(&qword_10016BEE8, (void (*)(uint64_t))type metadata accessor for RainCircularContentView);
      sub_10002F814();
      uint64_t v40 = (uint64_t)v63;
      sub_10012B0E0();
      sub_10002FA80(v43, (void (*)(void))type metadata accessor for RainCircularContentView);
      (*(void (**)(char *, uint64_t))(v42 + 8))(v31, v26);
    }
    uint64_t v44 = &qword_10016BEB0;
    sub_10000B114(v40, v67, &qword_10016BEB0);
    swift_storeEnumTagMultiPayload();
    sub_10002F720();
    uint64_t v45 = (uint64_t)v69;
    sub_10012B0E0();
    uint64_t v46 = &qword_10016BE90;
    sub_10000B114(v45, v80, &qword_10016BE90);
    swift_storeEnumTagMultiPayload();
    sub_10002F948(&qword_10016BED8, &qword_10016BE90, (void (*)(void))sub_10002F720);
LABEL_12:
    sub_10002F948(&qword_10016BF08, &qword_10016BE60, (void (*)(void))sub_10002F674);
    sub_10012B0E0();
    sub_1000235F8(v45, v46);
    return sub_1000235F8(v40, v44);
  }
  if (v39 == enum case for WidgetFamily.accessoryRectangular(_:))
  {
    sub_10002F9C8(a1, v54, (void (*)(void))type metadata accessor for RainContentView);
    uint64_t v83 = 0;
    unint64_t v84 = 0xE000000000000000;
    sub_10012CFD0(57);
    v85._countAndFlagsBits = 0xD000000000000021;
    v85._object = (void *)0x8000000100138E70;
    sub_10012CAF0(v85);
    uint64_t v50 = v52;
    sub_10008F554(v52);
    sub_10002F7CC(&qword_10016B508, (void (*)(uint64_t))&type metadata accessor for WidgetFamily);
    v86._countAndFlagsBits = sub_10012D1D0();
    sub_10012CAF0(v86);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v50, v33);
    v87._object = (void *)0x80000001001391E0;
    v87._countAndFlagsBits = 0xD000000000000016;
    sub_10012CAF0(v87);
  }
  else
  {
    if (v39 == enum case for WidgetFamily.accessoryInline(_:))
    {
      sub_10002F440(0, (uint64_t)v23);
      if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v23, 1, v26) == 1)
      {
        sub_1000235F8((uint64_t)v23, &qword_10016BEA8);
        uint64_t v41 = (uint64_t)v57;
        sub_1000D7610();
        sub_10000B114(v41, v71, &qword_10016BE70);
        swift_storeEnumTagMultiPayload();
        sub_10002F7CC(&qword_10016BEB8, (void (*)(uint64_t))type metadata accessor for RainInlineContentView);
        sub_10002F598();
        uint64_t v40 = (uint64_t)v74;
        sub_10012B0E0();
        sub_1000235F8(v41, &qword_10016BE70);
      }
      else
      {
        uint64_t v47 = v65;
        (*(void (**)(char *, char *, uint64_t))(v65 + 32))(v29, v23, v26);
        uint64_t v48 = (uint64_t)v58;
        (*(void (**)(char *, char *, uint64_t))(v47 + 16))(v58, v29, v26);
        sub_10002F9C8(v48, v71, (void (*)(void))type metadata accessor for RainInlineContentView);
        swift_storeEnumTagMultiPayload();
        sub_10002F7CC(&qword_10016BEB8, (void (*)(uint64_t))type metadata accessor for RainInlineContentView);
        sub_10002F598();
        uint64_t v40 = (uint64_t)v74;
        sub_10012B0E0();
        sub_10002FA80(v48, (void (*)(void))type metadata accessor for RainInlineContentView);
        (*(void (**)(char *, uint64_t))(v47 + 8))(v29, v26);
      }
      uint64_t v44 = &qword_10016BE78;
      sub_10000B114(v40, v76, &qword_10016BE78);
      swift_storeEnumTagMultiPayload();
      sub_10002F674();
      uint64_t v45 = (uint64_t)v77;
      sub_10012B0E0();
      uint64_t v46 = &qword_10016BE60;
      sub_10000B114(v45, v80, &qword_10016BE60);
      swift_storeEnumTagMultiPayload();
      sub_10002F948(&qword_10016BED8, &qword_10016BE90, (void (*)(void))sub_10002F720);
      goto LABEL_12;
    }
    sub_10002F9C8(a1, v55, (void (*)(void))type metadata accessor for RainContentView);
    uint64_t v83 = 0;
    unint64_t v84 = 0xE000000000000000;
    sub_10012CFD0(58);
    v88._countAndFlagsBits = 0xD000000000000022;
    v88._object = (void *)0x8000000100138E20;
    sub_10012CAF0(v88);
    uint64_t v51 = v52;
    sub_10008F554(v52);
    sub_10002F7CC(&qword_10016B508, (void (*)(uint64_t))&type metadata accessor for WidgetFamily);
    v89._countAndFlagsBits = sub_10012D1D0();
    sub_10012CAF0(v89);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v51, v33);
    v90._object = (void *)0x80000001001391E0;
    v90._countAndFlagsBits = 0xD000000000000016;
    sub_10012CAF0(v90);
  }
  uint64_t result = sub_10012D070();
  __break(1u);
  return result;
}

uint64_t sub_10002F440@<X0>(int a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for AggregateWeatherViewModel(0);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for RainComplicationDataStatus();
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for RainContentView();
  sub_10005CFA4((uint64_t)v9);
  if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v9, 2, v4))
  {
    uint64_t v10 = 1;
  }
  else
  {
    sub_10002FA1C((uint64_t)v9, (uint64_t)v6);
    sub_1000A69AC((uint64_t)v6, a1, a2);
    sub_10002FA80((uint64_t)v6, (void (*)(void))type metadata accessor for AggregateWeatherViewModel);
    uint64_t v10 = 0;
  }
  uint64_t v11 = sub_10012C0E0();
  return _s13WeatherWidget20WeatherDataViewModelOwst_0(a2, v10, 1, v11);
}

unint64_t sub_10002F598()
{
  unint64_t result = qword_10016BEC0;
  if (!qword_10016BEC0)
  {
    sub_100005470(&qword_10016BE70);
    swift_getOpaqueTypeConformance2();
    sub_10002F7CC((unint64_t *)&qword_10016BEC8, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016BEC0);
  }
  return result;
}

unint64_t sub_10002F674()
{
  unint64_t result = qword_10016BED0;
  if (!qword_10016BED0)
  {
    sub_100005470(&qword_10016BE78);
    sub_10002F7CC(&qword_10016BEB8, (void (*)(uint64_t))type metadata accessor for RainInlineContentView);
    sub_10002F598();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016BED0);
  }
  return result;
}

unint64_t sub_10002F720()
{
  unint64_t result = qword_10016BEE0;
  if (!qword_10016BEE0)
  {
    sub_100005470(&qword_10016BEB0);
    sub_10002F7CC(&qword_10016BEE8, (void (*)(uint64_t))type metadata accessor for RainCircularContentView);
    sub_10002F814();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016BEE0);
  }
  return result;
}

uint64_t sub_10002F7CC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10002F814()
{
  unint64_t result = qword_10016BEF0;
  if (!qword_10016BEF0)
  {
    sub_100005470(&qword_10016BEA0);
    sub_100005470(&qword_10016BEF8);
    sub_10002F8F4();
    swift_getOpaqueTypeConformance2();
    sub_10002F7CC((unint64_t *)&qword_10016BEC8, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016BEF0);
  }
  return result;
}

unint64_t sub_10002F8F4()
{
  unint64_t result = qword_10016BF00;
  if (!qword_10016BF00)
  {
    sub_100005470(&qword_10016BEF8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016BF00);
  }
  return result;
}

uint64_t sub_10002F948(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100005470(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10002F9C8(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_10000B3FC();
  uint64_t v4 = sub_10000B430();
  v5(v4);
  return a2;
}

uint64_t sub_10002FA1C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AggregateWeatherViewModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10002FA80(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_10000B3FC();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

unint64_t sub_10002FADC()
{
  unint64_t result = qword_10016BF10;
  if (!qword_10016BF10)
  {
    sub_100005470(&qword_10016BF18);
    sub_10002FB50();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016BF10);
  }
  return result;
}

unint64_t sub_10002FB50()
{
  unint64_t result = qword_10016BF20;
  if (!qword_10016BF20)
  {
    sub_100005470(&qword_10016BF28);
    sub_10002F948(&qword_10016BED8, &qword_10016BE90, (void (*)(void))sub_10002F720);
    sub_10002F948(&qword_10016BF08, &qword_10016BE60, (void (*)(void))sub_10002F674);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016BF20);
  }
  return result;
}

char *sub_10002FC14(char *a1, char *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v21 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = (char *)(v21 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_10012C610();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = type metadata accessor for DataDenseViewAttributes();
    uint64_t v9 = *(int *)(v8 + 20);
    uint64_t v10 = &a1[v9];
    uint64_t v11 = &a2[v9];
    *(void *)uint64_t v10 = *(void *)v11;
    *((_WORD *)v10 + 4) = *((_WORD *)v11 + 4);
    uint64_t v12 = *(int *)(v8 + 24);
    uint64_t v13 = &a1[v12];
    uint64_t v14 = &a2[v12];
    uint64_t v15 = sub_10012C0E0();
    uint64_t v16 = *(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16);
    v16(v13, v14, v15);
    v16(&a1[*(int *)(a3 + 20)], &a2[*(int *)(a3 + 20)], v15);
    uint64_t v17 = *(int *)(a3 + 24);
    uint64_t v18 = &a1[v17];
    uint64_t v19 = &a2[v17];
    sub_1000053D8(&qword_10016B080);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v20 = sub_10012AFD0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
    }
    else
    {
      *(void *)uint64_t v18 = *(void *)v19;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_10002FE08(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10012C610();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(type metadata accessor for DataDenseViewAttributes() + 24);
  uint64_t v6 = sub_10012C0E0();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
  v7(v5, v6);
  v7(a1 + *(int *)(a2 + 20), v6);
  uint64_t v8 = a1 + *(int *)(a2 + 24);
  sub_1000053D8(&qword_10016B080);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v9 = sub_10012AFD0();
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8);
    return v10(v8, v9);
  }
  else
  {
    return swift_release();
  }
}

uint64_t sub_10002FF6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10012C610();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = type metadata accessor for DataDenseViewAttributes();
  uint64_t v8 = *(int *)(v7 + 20);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  *(void *)uint64_t v9 = *(void *)v10;
  *(_WORD *)(v9 + 8) = *(_WORD *)(v10 + 8);
  uint64_t v11 = *(int *)(v7 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_10012C0E0();
  uint64_t v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16);
  v15(v12, v13, v14);
  v15(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v14);
  uint64_t v16 = *(int *)(a3 + 24);
  uint64_t v17 = (void *)(a1 + v16);
  uint64_t v18 = (void *)(a2 + v16);
  sub_1000053D8(&qword_10016B080);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v19 = sub_10012AFD0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
  }
  else
  {
    *uint64_t v17 = *v18;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_100030108(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10012C610();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = type metadata accessor for DataDenseViewAttributes();
  uint64_t v8 = *(int *)(v7 + 20);
  uint64_t v9 = (unsigned char *)(a1 + v8);
  uint64_t v10 = (unsigned char *)(a2 + v8);
  *uint64_t v9 = *v10;
  v9[1] = v10[1];
  v9[2] = v10[2];
  v9[3] = v10[3];
  v9[4] = v10[4];
  v9[5] = v10[5];
  v9[6] = v10[6];
  v9[7] = v10[7];
  v9[8] = v10[8];
  v9[9] = v10[9];
  uint64_t v11 = *(int *)(v7 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_10012C0E0();
  uint64_t v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24);
  v15(v12, v13, v14);
  v15(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v14);
  if (a1 != a2)
  {
    uint64_t v16 = *(int *)(a3 + 24);
    uint64_t v17 = (void *)(a1 + v16);
    uint64_t v18 = (void *)(a2 + v16);
    sub_1000235F8(a1 + v16, &qword_10016B080);
    sub_1000053D8(&qword_10016B080);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v19 = sub_10012AFD0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
    }
    else
    {
      *uint64_t v17 = *v18;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1000302FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10012C610();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = type metadata accessor for DataDenseViewAttributes();
  uint64_t v8 = *(int *)(v7 + 20);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  *(void *)uint64_t v9 = *(void *)v10;
  *(_WORD *)(v9 + 8) = *(_WORD *)(v10 + 8);
  uint64_t v11 = *(int *)(v7 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_10012C0E0();
  uint64_t v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32);
  v15(v12, v13, v14);
  v15(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v14);
  uint64_t v16 = *(int *)(a3 + 24);
  uint64_t v17 = (void *)(a1 + v16);
  uint64_t v18 = (const void *)(a2 + v16);
  uint64_t v19 = sub_1000053D8(&qword_10016B080);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v20 = sub_10012AFD0();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v20 - 8) + 32))(v17, v18, v20);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
  }
  return a1;
}

uint64_t sub_1000304A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10012C610();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = type metadata accessor for DataDenseViewAttributes();
  uint64_t v8 = *(int *)(v7 + 20);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  *(void *)uint64_t v9 = *(void *)v10;
  *(_WORD *)(v9 + 8) = *(_WORD *)(v10 + 8);
  uint64_t v11 = *(int *)(v7 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_10012C0E0();
  uint64_t v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40);
  v15(v12, v13, v14);
  v15(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v14);
  if (a1 != a2)
  {
    uint64_t v16 = *(int *)(a3 + 24);
    uint64_t v17 = (void *)(a1 + v16);
    uint64_t v18 = (const void *)(a2 + v16);
    sub_1000235F8(a1 + v16, &qword_10016B080);
    uint64_t v19 = sub_1000053D8(&qword_10016B080);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v20 = sub_10012AFD0();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v20 - 8) + 32))(v17, v18, v20);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_10003066C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100030680);
}

uint64_t sub_100030680(uint64_t a1, uint64_t a2, uint64_t a3)
{
  type metadata accessor for DataDenseViewAttributes();
  sub_10000B3D0();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1;
  }
  else
  {
    sub_10012C0E0();
    sub_10000B3D0();
    if (*(_DWORD *)(v11 + 84) == a2)
    {
      uint64_t v8 = v10;
      uint64_t v12 = *(int *)(a3 + 20);
    }
    else
    {
      uint64_t v8 = sub_1000053D8(&qword_10016B0A8);
      uint64_t v12 = *(int *)(a3 + 24);
    }
    uint64_t v9 = a1 + v12;
  }

  return _s13WeatherWidget20WeatherDataViewModelOwet_0(v9, a2, v8);
}

uint64_t sub_100030724(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100030738);
}

uint64_t sub_100030738(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  type metadata accessor for DataDenseViewAttributes();
  sub_10000B3D0();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = a1;
  }
  else
  {
    sub_10012C0E0();
    sub_10000B3D0();
    if (*(_DWORD *)(v13 + 84) == a3)
    {
      uint64_t v10 = v12;
      uint64_t v14 = *(int *)(a4 + 20);
    }
    else
    {
      uint64_t v10 = sub_1000053D8(&qword_10016B0A8);
      uint64_t v14 = *(int *)(a4 + 24);
    }
    uint64_t v11 = a1 + v14;
  }

  return _s13WeatherWidget20WeatherDataViewModelOwst_0(v11, a2, a2, v10);
}

uint64_t type metadata accessor for DataDenseTableView(uint64_t a1)
{
  return sub_10001A270(a1, qword_10016BF88);
}

void sub_100030804()
{
  type metadata accessor for DataDenseViewAttributes();
  if (v0 <= 0x3F)
  {
    sub_10012C0E0();
    if (v1 <= 0x3F)
    {
      sub_100039DDC(319, (unint64_t *)&qword_10016B128, (void (*)(uint64_t))&type metadata accessor for ColorSchemeContrast);
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

uint64_t sub_100030924()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100030940@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1000053D8(&qword_10016BFC8);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  uint64_t v6 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v33 = (char *)&v32 - v7;
  uint64_t v8 = sub_10012AFD0();
  uint64_t v37 = *(void *)(v8 - 8);
  uint64_t v9 = __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v32 - v12;
  uint64_t v14 = sub_1000053D8(&qword_10016BFD0);
  __chkstk_darwin(v14 - 8);
  uint64_t v16 = (char *)&v32 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10012B170();
  char v17 = sub_10012B190();
  char v18 = sub_10012B180();
  sub_10012B180();
  sub_10012B180();
  sub_10003C1B0();
  if (!v19) {
    char v18 = sub_10012B180();
  }
  sub_10012B180();
  char v20 = sub_10012B180();
  uint64_t v36 = a1;
  uint64_t v34 = v6;
  if (v20 != v17) {
    char v18 = sub_10012B180();
  }
  type metadata accessor for DataDenseTableView(0);
  uint64_t v35 = v1;
  sub_10008F524((uint64_t)v13);
  uint64_t v21 = *(uint64_t (**)(char *, uint64_t))(v37 + 88);
  int v22 = v21(v13, v8);
  int v23 = enum case for ColorSchemeContrast.standard(_:);
  if (v22 != enum case for ColorSchemeContrast.standard(_:))
  {
    if (v22 == enum case for ColorSchemeContrast.increased(_:))
    {
      sub_10012B190();
      char v18 = sub_10012B180();
      sub_10012B180();
      sub_10012B180();
      sub_10003C1B0();
      if (!v19) {
        char v18 = sub_10012B180();
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v37 + 8))(v13, v8);
    }
  }
  unsigned char *v16 = v18;
  sub_10012B170();
  unsigned __int8 v24 = sub_10012B190();
  int v25 = sub_10012B180();
  sub_10012B180();
  sub_10012B180();
  sub_10003C1B0();
  if (!v19) {
    int v25 = sub_10012B180();
  }
  sub_10012B180();
  if (sub_10012B180() != v24) {
    int v25 = sub_10012B180();
  }
  sub_10008F524((uint64_t)v11);
  int v26 = v21(v11, v8);
  if (v26 == v23) {
    goto LABEL_19;
  }
  if (v26 != enum case for ColorSchemeContrast.increased(_:))
  {
    (*(void (**)(char *, uint64_t))(v37 + 8))(v11, v8);
LABEL_19:
    uint64_t v27 = v36;
    uint64_t v29 = (uint64_t)v33;
    uint64_t v28 = (uint64_t)v34;
    goto LABEL_20;
  }
  sub_10012B190();
  int v25 = sub_10012B180();
  sub_10012B180();
  sub_10012B180();
  sub_10003C1B0();
  uint64_t v27 = v36;
  uint64_t v29 = (uint64_t)v33;
  uint64_t v28 = (uint64_t)v34;
  if (!v19) {
    int v25 = sub_10012B180();
  }
LABEL_20:
  uint64_t v30 = (uint64_t)&v16[*(int *)(sub_1000053D8(&qword_10016BFD8) + 44)];
  sub_100030D54(v25, v28);
  sub_10003BFD4(v28, v29, &qword_10016BFC8);
  sub_10003BFD4(v29, v30, &qword_10016BFC8);
  return sub_10003BFD4((uint64_t)v16, v27, &qword_10016BFD0);
}

uint64_t sub_100030D54@<X0>(int a1@<W0>, uint64_t a2@<X8>)
{
  int v46 = a1;
  uint64_t v51 = a2;
  uint64_t v52 = sub_1000053D8(&qword_10016BFE0);
  __chkstk_darwin(v52);
  uint64_t v45 = (uint64_t)&v45 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = sub_1000053D8(&qword_10016BFE8);
  __chkstk_darwin(v48);
  uint64_t v50 = (uint64_t)&v45 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = sub_1000053D8(&qword_10016BFF0);
  __chkstk_darwin(v49);
  uint64_t v5 = (char *)&v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000053D8(&qword_10016BFF8);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v9 = (char *)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v45 - v10;
  uint64_t v12 = sub_1000053D8(&qword_10016C000);
  uint64_t v13 = __chkstk_darwin(v12 - 8);
  uint64_t v15 = (char *)&v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  char v17 = (char *)&v45 - v16;
  uint64_t v18 = sub_1000053D8(&qword_10016C008);
  uint64_t v19 = __chkstk_darwin(v18 - 8);
  uint64_t v21 = (char *)&v45 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  int v23 = (char *)&v45 - v22;
  uint64_t v24 = sub_1000053D8(&qword_10016C010);
  uint64_t v25 = __chkstk_darwin(v24 - 8);
  uint64_t v27 = (char *)&v45 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  uint64_t v29 = (char *)&v45 - v28;
  unsigned __int8 v30 = sub_10012B170();
  sub_10012B180();
  if (sub_10012B180() == v30)
  {
    *(void *)uint64_t v29 = sub_10012AFF0();
    *((void *)v29 + 1) = 0;
    v29[16] = 0;
    uint64_t v31 = sub_1000053D8(&qword_10016C040);
    uint64_t v32 = v47;
    sub_1000335DC(v47, (__n128 *)&v29[*(int *)(v31 + 44)]);
    *(void *)int v23 = sub_10012AFF0();
    *((void *)v23 + 1) = 0;
    v23[16] = 0;
    uint64_t v33 = sub_1000053D8(&qword_10016C048);
    sub_100034284(v32, (__n128 *)&v23[*(int *)(v33 + 44)]);
    *(void *)char v17 = sub_10012B000();
    *((void *)v17 + 1) = 0;
    v17[16] = 0;
    uint64_t v34 = sub_1000053D8(&qword_10016C018);
    sub_100034C7C(v32, &v17[*(int *)(v34 + 44)]);
    *(void *)uint64_t v11 = sub_10012B000();
    *((void *)v11 + 1) = 0;
    v11[16] = 0;
    uint64_t v35 = sub_1000053D8(&qword_10016C020);
    sub_1000351C4(v32, &v11[*(int *)(v35 + 44)]);
    sub_10000B114((uint64_t)v29, (uint64_t)v27, &qword_10016C010);
    sub_10000B114((uint64_t)v23, (uint64_t)v21, &qword_10016C008);
    sub_10000B114((uint64_t)v17, (uint64_t)v15, &qword_10016C000);
    sub_10000B114((uint64_t)v11, (uint64_t)v9, &qword_10016BFF8);
    sub_10000B114((uint64_t)v27, (uint64_t)v5, &qword_10016C010);
    uint64_t v36 = (int *)sub_1000053D8(&qword_10016C050);
    sub_10000B114((uint64_t)v21, (uint64_t)&v5[v36[12]], &qword_10016C008);
    sub_10000B114((uint64_t)v15, (uint64_t)&v5[v36[16]], &qword_10016C000);
    sub_10000B114((uint64_t)v9, (uint64_t)&v5[v36[20]], &qword_10016BFF8);
    sub_1000235F8((uint64_t)v9, &qword_10016BFF8);
    sub_1000235F8((uint64_t)v15, &qword_10016C000);
    sub_1000235F8((uint64_t)v21, &qword_10016C008);
    sub_1000235F8((uint64_t)v27, &qword_10016C010);
    sub_10000B114((uint64_t)v5, v50, &qword_10016BFF0);
    swift_storeEnumTagMultiPayload();
    sub_10000B38C(&qword_10016C030, &qword_10016BFF0);
    sub_10000B38C(&qword_10016C038, &qword_10016BFE0);
    sub_10012B0E0();
    sub_1000235F8((uint64_t)v5, &qword_10016BFF0);
    sub_1000235F8((uint64_t)v11, &qword_10016BFF8);
    sub_1000235F8((uint64_t)v17, &qword_10016C000);
    sub_1000235F8((uint64_t)v23, &qword_10016C008);
    uint64_t v37 = (uint64_t)v29;
    uint64_t v38 = &qword_10016C010;
  }
  else
  {
    *(void *)char v17 = sub_10012B000();
    *((void *)v17 + 1) = 0;
    v17[16] = 0;
    uint64_t v39 = sub_1000053D8(&qword_10016C018);
    uint64_t v40 = v47;
    sub_100034C7C(v47, &v17[*(int *)(v39 + 44)]);
    *(void *)uint64_t v11 = sub_10012B000();
    *((void *)v11 + 1) = 0;
    v11[16] = 0;
    uint64_t v41 = sub_1000053D8(&qword_10016C020);
    sub_1000351C4(v40, &v11[*(int *)(v41 + 44)]);
    sub_10000B114((uint64_t)v17, (uint64_t)v15, &qword_10016C000);
    sub_10000B114((uint64_t)v11, (uint64_t)v9, &qword_10016BFF8);
    uint64_t v42 = v45;
    sub_10000B114((uint64_t)v15, v45, &qword_10016C000);
    uint64_t v43 = sub_1000053D8(&qword_10016C028);
    sub_10000B114((uint64_t)v9, v42 + *(int *)(v43 + 48), &qword_10016BFF8);
    sub_1000235F8((uint64_t)v9, &qword_10016BFF8);
    sub_1000235F8((uint64_t)v15, &qword_10016C000);
    sub_10000B114(v42, v50, &qword_10016BFE0);
    swift_storeEnumTagMultiPayload();
    sub_10000B38C(&qword_10016C030, &qword_10016BFF0);
    sub_10000B38C(&qword_10016C038, &qword_10016BFE0);
    sub_10012B0E0();
    sub_1000235F8(v42, &qword_10016BFE0);
    sub_1000235F8((uint64_t)v11, &qword_10016BFF8);
    uint64_t v37 = (uint64_t)v17;
    uint64_t v38 = &qword_10016C000;
  }
  return sub_1000235F8(v37, v38);
}

uint64_t sub_100031454()
{
  uint64_t v0 = sub_10012B940();
  uint64_t v37 = *(void *)(v0 - 8);
  uint64_t v38 = v0;
  __chkstk_darwin(v0);
  uint64_t v35 = (char *)&v29 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_1000053D8(&qword_10016C058);
  __chkstk_darwin(v2 - 8);
  uint64_t v31 = (uint64_t)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_10012CD30();
  uint64_t v4 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v6 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = sub_10012CD20();
  uint64_t v36 = *(void *)(v33 - 8);
  __chkstk_darwin(v33);
  uint64_t v29 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = sub_1000053D8(&qword_10016C060);
  uint64_t v34 = *(void *)(v32 - 8);
  __chkstk_darwin(v32);
  uint64_t v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100129E20();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_10012C250();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  char v17 = (char *)&v29 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10012C530();
  sub_10012C200();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  sub_100129E00();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  uint64_t v18 = v30;
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, enum case for NSUnitSpeed.WeatherFormatUsage.windSpeed(_:), v30);
  uint64_t v19 = sub_1001293A0();
  uint64_t v20 = v31;
  _s13WeatherWidget20WeatherDataViewModelOwst_0(v31, 1, 1, v19);
  sub_10012CC80();
  uint64_t v21 = v29;
  sub_10012B8E0();
  swift_bridgeObjectRelease();
  sub_1000235F8(v20, &qword_10016C058);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v18);
  uint64_t v23 = v37;
  uint64_t v22 = v38;
  uint64_t v24 = v35;
  (*(void (**)(char *, void, uint64_t))(v37 + 104))(v35, enum case for WeatherFormatPlaceholder.none(_:), v38);
  sub_10012A090();
  sub_10012A080();
  sub_10003856C(&qword_10016C068, (void (*)(uint64_t))&type metadata accessor for NSUnitSpeed.BaseWeatherFormatStyle);
  uint64_t v26 = v32;
  uint64_t v25 = v33;
  uint64_t v27 = sub_100129020();
  swift_release();
  (*(void (**)(char *, uint64_t))(v23 + 8))(v24, v22);
  (*(void (**)(char *, uint64_t))(v36 + 8))(v21, v25);
  (*(void (**)(char *, uint64_t))(v34 + 8))(v9, v26);
  return v27;
}

uint64_t sub_1000319B8()
{
  uint64_t v0 = sub_10012B940();
  uint64_t v45 = *(void *)(v0 - 8);
  uint64_t v46 = v0;
  __chkstk_darwin(v0);
  uint64_t v44 = (char *)&v36 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_1000053D8(&qword_10016C058);
  __chkstk_darwin(v2 - 8);
  uint64_t v40 = (char **)((char *)&v36 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v4 = sub_10012CD30();
  uint64_t v37 = *(void *)(v4 - 8);
  uint64_t v38 = v4;
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = sub_10012CD20();
  uint64_t v47 = *(void *)(v41 - 8);
  uint64_t v7 = __chkstk_darwin(v41);
  uint64_t v39 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v36 - v9;
  uint64_t v11 = sub_1000053D8(&qword_10016C060);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v42 = v11;
  uint64_t v43 = v12;
  __chkstk_darwin(v11);
  uint64_t v36 = (char *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_100129E20();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  char v17 = (char *)&v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_10012C250();
  uint64_t v19 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v21 = (char *)&v36 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10012C530();
  sub_10012C200();
  (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
  sub_100129E00();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  uint64_t v23 = v37;
  uint64_t v22 = v38;
  (*(void (**)(char *, void, uint64_t))(v37 + 104))(v6, enum case for NSUnitSpeed.WeatherFormatUsage.windSpeed(_:), v38);
  uint64_t v24 = sub_1001293A0();
  uint64_t v25 = (void (*)(void, void))v40;
  _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v40, 1, 1, v24);
  sub_10012CC80();
  sub_10012B8E0();
  swift_bridgeObjectRelease();
  sub_1000235F8((uint64_t)v25, &qword_10016C058);
  (*(void (**)(char *, uint64_t))(v23 + 8))(v6, v22);
  uint64_t v26 = v39;
  sub_10012CD10();
  uint64_t v27 = *(char ***)(v47 + 8);
  v47 += 8;
  uint64_t v40 = v27;
  uint64_t v28 = v41;
  ((void (*)(char *, uint64_t))v27)(v10, v41);
  uint64_t v29 = v44;
  uint64_t v30 = v45;
  uint64_t v31 = v46;
  (*(void (**)(char *, void, uint64_t))(v45 + 104))(v44, enum case for WeatherFormatPlaceholder.none(_:), v46);
  sub_10012A090();
  sub_10012A080();
  sub_10003856C(&qword_10016C068, (void (*)(uint64_t))&type metadata accessor for NSUnitSpeed.BaseWeatherFormatStyle);
  uint64_t v32 = v42;
  uint64_t v33 = v36;
  uint64_t v34 = sub_100129020();
  swift_release();
  (*(void (**)(char *, uint64_t))(v30 + 8))(v29, v31);
  ((void (*)(char *, uint64_t))v40)(v26, v28);
  (*(void (**)(char *, uint64_t))(v43 + 8))(v33, v32);
  return v34;
}

uint64_t sub_100031F70()
{
  uint64_t v0 = sub_10012B940();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v18 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_10012CDD0();
  uint64_t v21 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  uint64_t v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000053D8(&qword_10016B060);
  uint64_t v20 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10012C250();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10012C530();
  sub_10012C1D0();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  sub_10012B8F0();
  uint64_t v13 = v0;
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for WeatherFormatPlaceholder.none(_:), v0);
  sub_10012A090();
  sub_10012A080();
  sub_10003856C(&qword_10016B068, (void (*)(uint64_t))&type metadata accessor for NSUnitTemperature.BaseWeatherFormatStyle);
  uint64_t v14 = v6;
  uint64_t v15 = v19;
  uint64_t v16 = sub_100129020();
  swift_release();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v13);
  (*(void (**)(char *, uint64_t))(v21 + 8))(v5, v15);
  (*(void (**)(char *, uint64_t))(v20 + 8))(v8, v14);
  return v16;
}

uint64_t sub_1000322D8(char a1, char a2)
{
  uint64_t v4 = sub_1000053D8(&qword_10016C070);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10012C250();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10012C160();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  switch(a1)
  {
    case 1:
      if (qword_10016AEE8 != -1) {
        swift_once();
      }
      uint64_t v15 = (objc_class *)(id)qword_100181E30;
      v25._countAndFlagsBits = 0x8000000100139440;
      v16._countAndFlagsBits = 1684957527;
      v16._object = (void *)0xE400000000000000;
      v17.value._countAndFlagsBits = 0;
      v17.value._object = 0;
      v18.super.isa = v15;
      v19._countAndFlagsBits = 0;
      v19._object = (void *)0xE000000000000000;
      goto LABEL_23;
    case 2:
      sub_10012C530();
      sub_10012C170();
      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
      if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v6, 1, v11) == 1)
      {
        sub_1000235F8((uint64_t)v6, &qword_10016C070);
        if (qword_10016AEE8 != -1) {
          swift_once();
        }
        uint64_t v20 = (objc_class *)(id)qword_100181E30;
        v25._countAndFlagsBits = 0x8000000100139400;
        v27._countAndFlagsBits = 0x79746964696D7548;
        v27._object = (void *)0xE800000000000000;
        v28.value._countAndFlagsBits = 0;
        v28.value._object = 0;
        v21.super.isa = v20;
        v29._countAndFlagsBits = 0;
        v29._object = (void *)0xE000000000000000;
        uint64_t v22 = sub_100129180(v27, v28, v21, v29, v25);
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v14, v6, v11);
        uint64_t v22 = sub_10012C150();
        (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
      }
      return v22;
    case 3:
      if (qword_10016AEE8 != -1) {
        swift_once();
      }
      uint64_t v15 = (objc_class *)(id)qword_100181E30;
      v25._countAndFlagsBits = 0x80000001001393B0;
      v16._countAndFlagsBits = 4806229;
      v16._object = (void *)0xE300000000000000;
      goto LABEL_22;
    case 4:
      if (qword_10016AEE8 != -1) {
        swift_once();
      }
      uint64_t v15 = (objc_class *)(id)qword_100181E30;
      v25._countAndFlagsBits = 0x8000000100139360;
      v16._countAndFlagsBits = 0x694C20736C656546;
      v16._object = (void *)0xEA0000000000656BLL;
      goto LABEL_22;
    default:
      if (a2)
      {
        if (qword_10016AEE8 != -1) {
          swift_once();
        }
        uint64_t v15 = (objc_class *)(id)qword_100181E30;
        v25._countAndFlagsBits = 0x80000001001394F0;
        v16._countAndFlagsBits = 0x706963657250;
        v16._object = (void *)0xE600000000000000;
      }
      else
      {
        if (qword_10016AEE8 != -1) {
          swift_once();
        }
        uint64_t v15 = (objc_class *)(id)qword_100181E30;
        v25._countAndFlagsBits = 0x8000000100139480;
        v16._countAndFlagsBits = 0x7469706963657250;
        v16._object = (void *)0xED00006E6F697461;
      }
LABEL_22:
      v17.value._countAndFlagsBits = 0;
      v17.value._object = 0;
      v18.super.isa = v15;
      v19._countAndFlagsBits = 0;
      v19._object = (void *)0xE000000000000000;
LABEL_23:
      uint64_t v23 = sub_100129180(v16, v17, v18, v19, v25);

      return v23;
  }
}

uint64_t sub_100032858(char a1)
{
  uint64_t v2 = sub_1000053D8(&qword_10016C070);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10012C250();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10012C160();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  switch(a1)
  {
    case 1:
      if (qword_10016AEE8 != -1) {
        swift_once();
      }
      uint64_t v13 = (objc_class *)(id)qword_100181E30;
      v23._countAndFlagsBits = 0x80000001001392E0;
      v14._countAndFlagsBits = 1684957527;
      v14._object = (void *)0xE400000000000000;
      v15.value._countAndFlagsBits = 0;
      v15.value._object = 0;
      v16.super.isa = v13;
      v17._countAndFlagsBits = 0;
      v17._object = (void *)0xE000000000000000;
      goto LABEL_19;
    case 2:
      sub_10012C530();
      sub_10012C170();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v4, 1, v9) == 1)
      {
        sub_1000235F8((uint64_t)v4, &qword_10016C070);
        if (qword_10016AEE8 != -1) {
          swift_once();
        }
        NSBundle v18 = (objc_class *)(id)qword_100181E30;
        v23._countAndFlagsBits = 0x80000001001392A0;
        v25._countAndFlagsBits = 0x79746964696D7548;
        v25._object = (void *)0xE800000000000000;
        v26.value._countAndFlagsBits = 0;
        v26.value._object = 0;
        v19.super.isa = v18;
        v27._countAndFlagsBits = 0;
        v27._object = (void *)0xE000000000000000;
        uint64_t v20 = sub_100129180(v25, v26, v19, v27, v23);
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v4, v9);
        uint64_t v20 = sub_10012C150();
        (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
      }
      return v20;
    case 3:
      if (qword_10016AEE8 != -1) {
        swift_once();
      }
      uint64_t v13 = (objc_class *)(id)qword_100181E30;
      v23._countAndFlagsBits = 0x8000000100139250;
      v14._countAndFlagsBits = 0x7865646E49205655;
      v14._object = (void *)0xE800000000000000;
      goto LABEL_18;
    case 4:
      if (qword_10016AEE8 != -1) {
        swift_once();
      }
      uint64_t v13 = (objc_class *)(id)qword_100181E30;
      v23._countAndFlagsBits = 0x8000000100139200;
      v14._countAndFlagsBits = 0x694C20736C656546;
      v14._object = (void *)0xEA0000000000656BLL;
      goto LABEL_18;
    default:
      if (qword_10016AEE8 != -1) {
        swift_once();
      }
      uint64_t v13 = (objc_class *)(id)qword_100181E30;
      v23._countAndFlagsBits = 0x8000000100139320;
      v14._countAndFlagsBits = 0x7469706963657250;
      v14._object = (void *)0xED00006E6F697461;
LABEL_18:
      v15.value._countAndFlagsBits = 0;
      v15.value._object = 0;
      v16.super.isa = v13;
      v17._countAndFlagsBits = 0;
      v17._object = (void *)0xE000000000000000;
LABEL_19:
      uint64_t v21 = sub_100129180(v14, v15, v16, v17, v23);

      return v21;
  }
}

uint64_t sub_100032D7C(char a1)
{
  uint64_t v2 = sub_100129E70();
  uint64_t v39 = *(void *)(v2 - 8);
  uint64_t v40 = v2;
  __chkstk_darwin(v2);
  uint64_t v38 = (char *)&v36 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1000053D8(&qword_10016C070);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10012C250();
  uint64_t v42 = *(void *)(v7 - 8);
  uint64_t v43 = v7;
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v41 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v36 - v10;
  uint64_t v12 = sub_10012C160();
  uint64_t v37 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  Swift::String v14 = (char *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_100129110();
  __chkstk_darwin(v15);
  uint64_t v16 = sub_100129160();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  NSBundle v19 = (char *)&v36 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  switch(a1)
  {
    case 1:
      return sub_100031454();
    case 2:
      sub_10012C530();
      sub_10012C170();
      uint64_t v21 = v43;
      uint64_t v22 = *(void (**)(char *, uint64_t))(v42 + 8);
      v22(v11, v43);
      if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v6, 1, v12) == 1)
      {
        sub_1000235F8((uint64_t)v6, &qword_10016C070);
        Swift::String v23 = v41;
        sub_10012C530();
        sub_10012C220();
        v22(v23, v21);
        return sub_10012CC40(1);
      }
      else
      {
        uint64_t v34 = v37;
        (*(void (**)(char *, char *, uint64_t))(v37 + 32))(v14, v6, v12);
        uint64_t v24 = sub_100033360();
        (*(void (**)(char *, uint64_t))(v34 + 8))(v14, v12);
      }
      return v24;
    case 3:
      uint64_t v45 = 0;
      unint64_t v46 = 0xE000000000000000;
      Swift::String v25 = v41;
      sub_10012C530();
      Swift::String_optional v26 = v38;
      sub_10012C210();
      uint64_t v27 = v43;
      uint64_t v42 = *(void *)(v42 + 8);
      ((void (*)(char *, uint64_t))v42)(v25, v43);
      uint64_t v28 = sub_100129E50();
      uint64_t v29 = v40;
      uint64_t v30 = *(void (**)(char *, uint64_t))(v39 + 8);
      v30(v26, v40);
      uint64_t v44 = v28;
      sub_100038520();
      uint64_t v31 = sub_10012CFB0();
      unint64_t v33 = v32;
      swift_bridgeObjectRelease();
      uint64_t v45 = v31;
      unint64_t v46 = v33;
      v47._countAndFlagsBits = 32;
      v47._object = (void *)0xE100000000000000;
      sub_10012CAF0(v47);
      sub_10012C530();
      sub_10012C210();
      ((void (*)(char *, uint64_t))v42)(v25, v27);
      sub_100129E60();
      v30(v26, v29);
      v48._countAndFlagsBits = sub_100129E30();
      sub_10012CAF0(v48);
      swift_bridgeObjectRelease();
      return v45;
    case 4:
      return sub_100031F70();
    default:
      type metadata accessor for DataDenseTableView(0);
      sub_10012C080();
      sub_100129100();
      (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
      sub_10003856C(&qword_10016C080, (void (*)(uint64_t))&type metadata accessor for AttributedString.CharacterView);
      return sub_10012CB10();
  }
}

uint64_t sub_100033360()
{
  uint64_t v0 = sub_10012C120();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10012C130();
  int v4 = (*(uint64_t (**)(char *, uint64_t))(v1 + 88))(v3, v0);
  if (v4 == enum case for CurrentObservationViewModel.AirQuality.Value.number(_:))
  {
    (*(void (**)(char *, uint64_t))(v1 + 96))(v3, v0);
    v6[1] = *(void *)v3;
    sub_100038520();
    return sub_10012CFB0();
  }
  else if (v4 == enum case for CurrentObservationViewModel.AirQuality.Value.category(_:))
  {
    (*(void (**)(char *, uint64_t))(v1 + 96))(v3, v0);
    return *(void *)v3;
  }
  else
  {
    uint64_t result = sub_10012D1E0();
    __break(1u);
  }
  return result;
}

uint64_t sub_1000334B8(unsigned __int8 a1)
{
  if (a1 - 2 >= 3)
  {
    if (a1)
    {
      return sub_1000319B8();
    }
    else
    {
      type metadata accessor for DataDenseTableView(0);
      sub_10012C0C0();
      return sub_10012CB20();
    }
  }
  else
  {
    return sub_100032D7C(a1);
  }
}

void sub_100033568()
{
  id v0 = [self mainScreen];
  [v0 bounds];
}

uint64_t sub_1000335DC@<X0>(uint64_t a1@<X0>, __n128 *a2@<X8>)
{
  Swift::Int v147 = a2;
  uint64_t v3 = sub_10012C610();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v127 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v158 = type metadata accessor for RowView(0);
  uint64_t v7 = __chkstk_darwin(v158);
  Swift::Int v146 = (__n128 *)((char *)&v127 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v145 = (__n128 *)((char *)&v127 - v10);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v144 = (__n128 *)((char *)&v127 - v12);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v143 = (__n128 *)((char *)&v127 - v14);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v141 = (uint64_t *)((char *)&v127 - v16);
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v142 = (uint64_t)&v127 - v18;
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v21 = (uint64_t *)((char *)&v127 - v20);
  uint64_t v22 = __chkstk_darwin(v19);
  uint64_t v151 = (uint64_t)&v127 - v23;
  uint64_t v24 = __chkstk_darwin(v22);
  Swift::String_optional v26 = (uint64_t *)((char *)&v127 - v25);
  uint64_t v27 = __chkstk_darwin(v24);
  uint64_t v150 = (uint64_t)&v127 - v28;
  uint64_t v29 = __chkstk_darwin(v27);
  uint64_t v31 = (uint64_t *)((char *)&v127 - v30);
  __chkstk_darwin(v29);
  uint64_t v148 = (uint64_t)&v127 - v32;
  sub_100033568();
  sub_10012B7A0();
  sub_10012ABC0();
  uint64_t v140 = v174[8];
  int v139 = v175;
  uint64_t v138 = v176;
  int v137 = v177;
  uint64_t v136 = v178;
  uint64_t v135 = v179;
  uint64_t v154 = (char *)(a1 + *(int *)(type metadata accessor for DataDenseViewAttributes() + 20));
  int v33 = *v154;
  uint64_t v149 = sub_1000322D8(*v154, 1);
  uint64_t v134 = v34;
  uint64_t v133 = sub_100032858(v33);
  uint64_t v132 = v35;
  uint64_t v36 = 0;
  uint64_t v37 = 0;
  uint64_t v157 = 0;
  Swift::Int v152 = 0;
  if (!v33)
  {
    type metadata accessor for DataDenseTableView(0);
    uint64_t v157 = sub_10012C0A0();
    Swift::Int v152 = v38;
    uint64_t v36 = sub_10012C0D0();
  }
  uint64_t v130 = v37;
  uint64_t v131 = v36;
  uint64_t v129 = sub_100032D7C(v33);
  uint64_t v128 = v39;
  uint64_t v40 = sub_1000334B8(v33);
  uint64_t v42 = v41;
  uint64_t v43 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
  uint64_t v156 = v4 + 16;
  uint64_t v155 = v43;
  v43((uint64_t)v6, a1, v3);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v45 = v158;
  uint64_t v46 = *(int *)(v158 + 44);
  uint64_t v159 = v3;
  *(uint64_t *)((char *)v31 + v46) = KeyPath;
  uint64_t v153 = sub_1000053D8(&qword_10016B9E0);
  swift_storeEnumTagMultiPayload();
  uint64_t v47 = v134;
  uint64_t *v31 = v149;
  v31[1] = v47;
  uint64_t v48 = v132;
  v31[2] = v133;
  v31[3] = v48;
  uint64_t v49 = v152;
  v31[4] = v157;
  v31[5] = (uint64_t)v49;
  uint64_t v50 = v130;
  v31[6] = v131;
  v31[7] = v50;
  uint64_t v51 = v128;
  v31[8] = v129;
  v31[9] = v51;
  v31[10] = v40;
  v31[11] = v42;
  uint64_t v52 = (char *)v31 + *(int *)(v45 + 40);
  uint64_t v53 = *(void (**)(void, void, void))(v4 + 32);
  uint64_t v149 = (uint64_t)v6;
  uint64_t v157 = v4 + 32;
  Swift::Int v152 = v53;
  v53(v52, v6, v159);
  sub_1000385D8((uint64_t)v31, v148, (void (*)(void))type metadata accessor for RowView);
  int v54 = v154[1];
  uint64_t v132 = sub_1000322D8(v154[1], 1);
  uint64_t v131 = v55;
  uint64_t v134 = sub_100032858(v54);
  uint64_t v133 = v56;
  if (v54)
  {
    uint64_t v128 = 0;
    uint64_t v127 = 0;
    uint64_t v130 = 0;
    uint64_t v129 = 0;
  }
  else
  {
    type metadata accessor for DataDenseTableView(0);
    uint64_t v130 = sub_10012C0A0();
    uint64_t v129 = v57;
    uint64_t v128 = sub_10012C0D0();
    uint64_t v127 = v58;
  }
  uint64_t v59 = sub_100032D7C(v54);
  uint64_t v61 = v60;
  uint64_t v62 = sub_1000334B8(v54);
  uint64_t v64 = v63;
  uint64_t v65 = v149;
  uint64_t v66 = v159;
  v155(v149, a1, v159);
  uint64_t v67 = swift_getKeyPath();
  uint64_t v68 = v158;
  *(uint64_t *)((char *)v26 + *(int *)(v158 + 44)) = v67;
  swift_storeEnumTagMultiPayload();
  uint64_t v69 = v131;
  *Swift::String_optional v26 = v132;
  v26[1] = v69;
  uint64_t v70 = v129;
  v26[4] = v130;
  v26[5] = v70;
  uint64_t v71 = v127;
  v26[6] = v128;
  v26[7] = v71;
  v26[8] = v59;
  v26[9] = v61;
  v26[10] = v62;
  v26[11] = v64;
  uint64_t v72 = (char *)v26 + *(int *)(v68 + 40);
  uint64_t v73 = v133;
  v26[2] = v134;
  v26[3] = v73;
  v152(v72, v65, v66);
  sub_1000385D8((uint64_t)v26, v150, (void (*)(void))type metadata accessor for RowView);
  int v74 = v154[2];
  uint64_t v132 = sub_1000322D8(v154[2], 1);
  uint64_t v131 = v75;
  uint64_t v134 = sub_100032858(v74);
  uint64_t v133 = v76;
  if (v74)
  {
    uint64_t v128 = 0;
    uint64_t v77 = 0;
    uint64_t v130 = 0;
    uint64_t v129 = 0;
  }
  else
  {
    type metadata accessor for DataDenseTableView(0);
    uint64_t v130 = sub_10012C0A0();
    uint64_t v129 = v78;
    uint64_t v128 = sub_10012C0D0();
    uint64_t v77 = v79;
  }
  uint64_t v80 = sub_100032D7C(v74);
  uint64_t v82 = v81;
  uint64_t v83 = sub_1000334B8(v74);
  uint64_t v85 = v84;
  uint64_t v86 = v65;
  uint64_t v87 = v65;
  uint64_t v88 = v159;
  v155(v86, a1, v159);
  uint64_t v89 = swift_getKeyPath();
  uint64_t v90 = v158;
  *(uint64_t *)((char *)v21 + *(int *)(v158 + 44)) = v89;
  swift_storeEnumTagMultiPayload();
  uint64_t v91 = v131;
  *uint64_t v21 = v132;
  v21[1] = v91;
  uint64_t v92 = v129;
  v21[4] = v130;
  v21[5] = v92;
  v21[6] = v128;
  v21[7] = v77;
  v21[8] = v80;
  v21[9] = v82;
  v21[10] = v83;
  v21[11] = v85;
  uint64_t v93 = (char *)v21 + *(int *)(v90 + 40);
  uint64_t v94 = v133;
  v21[2] = v134;
  v21[3] = v94;
  v152(v93, v87, v88);
  sub_1000385D8((uint64_t)v21, v151, (void (*)(void))type metadata accessor for RowView);
  int v95 = v154[3];
  uint64_t v133 = sub_1000322D8(v154[3], 1);
  uint64_t v132 = v96;
  uint64_t v154 = (char *)sub_100032858(v95);
  uint64_t v134 = v97;
  if (v95)
  {
    uint64_t v98 = 0;
    uint64_t v99 = 0;
    uint64_t v131 = 0;
    uint64_t v130 = 0;
  }
  else
  {
    type metadata accessor for DataDenseTableView(0);
    uint64_t v131 = sub_10012C0A0();
    uint64_t v130 = v100;
    uint64_t v98 = sub_10012C0D0();
    uint64_t v99 = v101;
  }
  uint64_t v102 = sub_100032D7C(v95);
  uint64_t v104 = v103;
  uint64_t v105 = sub_1000334B8(v95);
  uint64_t v107 = v106;
  uint64_t v108 = v149;
  uint64_t v109 = a1;
  uint64_t v110 = v159;
  v155(v149, v109, v159);
  uint64_t v111 = swift_getKeyPath();
  uint64_t v112 = v158;
  uint64_t v113 = v141;
  *(uint64_t *)((char *)v141 + *(int *)(v158 + 44)) = v111;
  swift_storeEnumTagMultiPayload();
  uint64_t v114 = v132;
  *uint64_t v113 = v133;
  v113[1] = v114;
  uint64_t v115 = v130;
  v113[4] = v131;
  v113[5] = v115;
  v113[6] = v98;
  v113[7] = v99;
  v113[8] = v102;
  v113[9] = v104;
  v113[10] = v105;
  v113[11] = v107;
  uint64_t v116 = (char *)v113 + *(int *)(v112 + 40);
  uint64_t v117 = v134;
  v113[2] = (uint64_t)v154;
  v113[3] = v117;
  v152(v116, v108, v110);
  uint64_t v118 = v142;
  sub_1000385D8((uint64_t)v113, v142, (void (*)(void))type metadata accessor for RowView);
  uint64_t v166 = 0;
  char v167 = 1;
  uint64_t v168 = v140;
  char v169 = v139;
  uint64_t v170 = v138;
  char v171 = v137;
  uint64_t v172 = v136;
  uint64_t v173 = v135;
  v174[0] = (__n128 *)&v166;
  uint64_t v119 = v148;
  uint64_t v120 = v143;
  sub_10003862C(v148, (uint64_t)v143, (void (*)(void))type metadata accessor for RowView);
  uint64_t v164 = 0;
  char v165 = 0;
  v174[1] = v120;
  v174[2] = (__n128 *)&v164;
  uint64_t v121 = v150;
  uint64_t v122 = v144;
  sub_10003862C(v150, (uint64_t)v144, (void (*)(void))type metadata accessor for RowView);
  uint64_t v162 = 0;
  char v163 = 0;
  v174[3] = v122;
  v174[4] = (__n128 *)&v162;
  uint64_t v123 = v151;
  uint64_t v124 = v145;
  sub_10003862C(v151, (uint64_t)v145, (void (*)(void))type metadata accessor for RowView);
  uint64_t v160 = 0;
  char v161 = 0;
  v174[5] = v124;
  v174[6] = (__n128 *)&v160;
  uint64_t v125 = v146;
  sub_10003862C(v118, (uint64_t)v146, (void (*)(void))type metadata accessor for RowView);
  v174[7] = v125;
  sub_10004C180(v174, v147);
  sub_100038680(v118, (void (*)(void))type metadata accessor for RowView);
  sub_100038680(v123, (void (*)(void))type metadata accessor for RowView);
  sub_100038680(v121, (void (*)(void))type metadata accessor for RowView);
  sub_100038680(v119, (void (*)(void))type metadata accessor for RowView);
  sub_100038680((uint64_t)v125, (void (*)(void))type metadata accessor for RowView);
  sub_100038680((uint64_t)v124, (void (*)(void))type metadata accessor for RowView);
  sub_100038680((uint64_t)v122, (void (*)(void))type metadata accessor for RowView);
  return sub_100038680((uint64_t)v120, (void (*)(void))type metadata accessor for RowView);
}

uint64_t sub_100034284@<X0>(uint64_t a1@<X0>, __n128 *a2@<X8>)
{
  uint64_t v112 = a2;
  uint64_t v3 = sub_10012C610();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v94 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v122 = type metadata accessor for RowView(0);
  uint64_t v7 = __chkstk_darwin(v122);
  uint64_t v111 = (__n128 *)((char *)&v94 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v110 = (__n128 *)((char *)&v94 - v10);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v109 = (__n128 *)((char *)&v94 - v12);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v15 = (uint64_t *)((char *)&v94 - v14);
  uint64_t v16 = __chkstk_darwin(v13);
  uint64_t v108 = (uint64_t)&v94 - v17;
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v20 = (uint64_t *)((char *)&v94 - v19);
  uint64_t v21 = __chkstk_darwin(v18);
  uint64_t v119 = (uint64_t)&v94 - v22;
  uint64_t v23 = __chkstk_darwin(v21);
  uint64_t v25 = (void (**)(char *, char *, uint64_t))((char *)&v94 - v24);
  __chkstk_darwin(v23);
  uint64_t v118 = (uint64_t)&v94 - v26;
  sub_100033568();
  sub_10012B7A0();
  sub_10012ABC0();
  uint64_t v107 = v135[6];
  int v106 = v136;
  uint64_t v105 = v137;
  int v104 = v138;
  uint64_t v103 = v139;
  uint64_t v102 = v140;
  uint64_t v115 = (char *)(a1 + *(int *)(type metadata accessor for DataDenseViewAttributes() + 20));
  int v27 = v115[4];
  uint64_t v113 = (void (*)(char *, char *, uint64_t))sub_1000322D8(v115[4], 1);
  uint64_t v101 = v28;
  uint64_t v100 = sub_100032858(v27);
  uint64_t v99 = v29;
  uint64_t v30 = 0;
  uint64_t v31 = 0;
  uint64_t v121 = 0;
  uint64_t v120 = 0;
  if (!v27)
  {
    type metadata accessor for DataDenseTableView(0);
    uint64_t v121 = sub_10012C0A0();
    uint64_t v120 = v32;
    uint64_t v30 = sub_10012C0D0();
  }
  uint64_t v97 = v31;
  uint64_t v98 = v30;
  uint64_t v96 = sub_100032D7C(v27);
  uint64_t v95 = v33;
  uint64_t v94 = sub_1000334B8(v27);
  uint64_t v35 = v34;
  uint64_t v36 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  uint64_t v117 = v4 + 16;
  uint64_t v116 = v36;
  v36(v6, a1, v3);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v38 = v122;
  *(void (**)(char *, char *, uint64_t))((char *)v25 + *(int *)(v122 + 44)) = (void (*)(char *, char *, uint64_t))KeyPath;
  uint64_t v114 = sub_1000053D8(&qword_10016B9E0);
  swift_storeEnumTagMultiPayload();
  uint64_t v39 = v101;
  char *v25 = v113;
  v25[1] = (void (*)(char *, char *, uint64_t))v39;
  uint64_t v40 = v99;
  v25[2] = (void (*)(char *, char *, uint64_t))v100;
  v25[3] = (void (*)(char *, char *, uint64_t))v40;
  uint64_t v41 = v120;
  v25[4] = (void (*)(char *, char *, uint64_t))v121;
  v25[5] = v41;
  uint64_t v42 = v97;
  v25[6] = (void (*)(char *, char *, uint64_t))v98;
  v25[7] = (void (*)(char *, char *, uint64_t))v42;
  uint64_t v43 = v95;
  v25[8] = (void (*)(char *, char *, uint64_t))v96;
  v25[9] = (void (*)(char *, char *, uint64_t))v43;
  v25[10] = (void (*)(char *, char *, uint64_t))v94;
  v25[11] = v35;
  uint64_t v44 = (char *)v25 + *(int *)(v38 + 40);
  uint64_t v45 = *(void (**)(char *, char *, uint64_t))(v4 + 32);
  uint64_t v120 = (void (*)(char *, char *, uint64_t))(v4 + 32);
  uint64_t v113 = v45;
  v45(v44, v6, v3);
  sub_1000385D8((uint64_t)v25, v118, (void (*)(void))type metadata accessor for RowView);
  int v46 = v115[5];
  uint64_t v99 = sub_1000322D8(v115[5], 1);
  uint64_t v98 = v47;
  uint64_t v101 = sub_100032858(v46);
  uint64_t v100 = v48;
  uint64_t v121 = v3;
  if (v46)
  {
    uint64_t v95 = 0;
    uint64_t v94 = 0;
    uint64_t v97 = 0;
    uint64_t v96 = 0;
  }
  else
  {
    type metadata accessor for DataDenseTableView(0);
    uint64_t v97 = sub_10012C0A0();
    uint64_t v96 = v49;
    uint64_t v95 = sub_10012C0D0();
    uint64_t v94 = v50;
  }
  uint64_t v51 = sub_100032D7C(v46);
  uint64_t v53 = v52;
  uint64_t v54 = sub_1000334B8(v46);
  uint64_t v56 = v55;
  uint64_t v57 = v121;
  v116(v6, a1, v121);
  uint64_t v58 = swift_getKeyPath();
  uint64_t v59 = v122;
  *(uint64_t *)((char *)v20 + *(int *)(v122 + 44)) = v58;
  swift_storeEnumTagMultiPayload();
  uint64_t v60 = v98;
  *uint64_t v20 = v99;
  v20[1] = v60;
  uint64_t v61 = v96;
  v20[4] = v97;
  v20[5] = v61;
  uint64_t v62 = v94;
  v20[6] = v95;
  v20[7] = v62;
  v20[8] = v51;
  v20[9] = v53;
  v20[10] = v54;
  v20[11] = v56;
  uint64_t v63 = (char *)v20 + *(int *)(v59 + 40);
  uint64_t v64 = v100;
  void v20[2] = v101;
  v20[3] = v64;
  uint64_t v65 = v6;
  v113(v63, v6, v57);
  sub_1000385D8((uint64_t)v20, v119, (void (*)(void))type metadata accessor for RowView);
  int v66 = v115[6];
  uint64_t v100 = sub_1000322D8(v115[6], 1);
  uint64_t v99 = v67;
  uint64_t v115 = (char *)sub_100032858(v66);
  uint64_t v101 = v68;
  if (v66)
  {
    uint64_t v69 = 0;
    uint64_t v70 = 0;
    uint64_t v98 = 0;
    uint64_t v97 = 0;
  }
  else
  {
    type metadata accessor for DataDenseTableView(0);
    uint64_t v98 = sub_10012C0A0();
    uint64_t v97 = v71;
    uint64_t v69 = sub_10012C0D0();
    uint64_t v70 = v72;
  }
  uint64_t v73 = sub_100032D7C(v66);
  uint64_t v75 = v74;
  uint64_t v76 = sub_1000334B8(v66);
  uint64_t v78 = v77;
  uint64_t v79 = a1;
  uint64_t v80 = v121;
  v116(v65, v79, v121);
  uint64_t v81 = swift_getKeyPath();
  uint64_t v82 = v122;
  *(uint64_t *)((char *)v15 + *(int *)(v122 + 44)) = v81;
  swift_storeEnumTagMultiPayload();
  uint64_t v83 = v99;
  *uint64_t v15 = v100;
  v15[1] = v83;
  uint64_t v84 = v97;
  v15[4] = v98;
  v15[5] = v84;
  v15[6] = v69;
  v15[7] = v70;
  v15[8] = v73;
  v15[9] = v75;
  v15[10] = v76;
  v15[11] = v78;
  uint64_t v85 = (char *)v15 + *(int *)(v82 + 40);
  uint64_t v86 = v101;
  v15[2] = (uint64_t)v115;
  v15[3] = v86;
  v113(v85, v65, v80);
  uint64_t v87 = v108;
  sub_1000385D8((uint64_t)v15, v108, (void (*)(void))type metadata accessor for RowView);
  uint64_t v127 = 0;
  char v128 = 1;
  uint64_t v129 = v107;
  char v130 = v106;
  uint64_t v131 = v105;
  char v132 = v104;
  uint64_t v133 = v103;
  uint64_t v134 = v102;
  v135[0] = (__n128 *)&v127;
  uint64_t v88 = v118;
  uint64_t v89 = v109;
  sub_10003862C(v118, (uint64_t)v109, (void (*)(void))type metadata accessor for RowView);
  uint64_t v125 = 0;
  char v126 = 0;
  v135[1] = v89;
  v135[2] = (__n128 *)&v125;
  uint64_t v90 = v119;
  uint64_t v91 = v110;
  sub_10003862C(v119, (uint64_t)v110, (void (*)(void))type metadata accessor for RowView);
  uint64_t v123 = 0;
  char v124 = 0;
  v135[3] = v91;
  v135[4] = (__n128 *)&v123;
  uint64_t v92 = v111;
  sub_10003862C(v87, (uint64_t)v111, (void (*)(void))type metadata accessor for RowView);
  v135[5] = v92;
  sub_10004C208(v135, v112);
  sub_100038680(v87, (void (*)(void))type metadata accessor for RowView);
  sub_100038680(v90, (void (*)(void))type metadata accessor for RowView);
  sub_100038680(v88, (void (*)(void))type metadata accessor for RowView);
  sub_100038680((uint64_t)v92, (void (*)(void))type metadata accessor for RowView);
  sub_100038680((uint64_t)v91, (void (*)(void))type metadata accessor for RowView);
  return sub_100038680((uint64_t)v89, (void (*)(void))type metadata accessor for RowView);
}

uint64_t sub_100034C7C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v79 = a2;
  uint64_t v3 = sub_10012C610();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v65 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for ColumnView(0);
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v78 = (uint64_t)&v65 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v77 = (uint64_t)&v65 - v11;
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v14 = (uint64_t *)((char *)&v65 - v13);
  uint64_t v15 = __chkstk_darwin(v12);
  uint64_t v76 = (uint64_t)&v65 - v16;
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v19 = (uint64_t *)((char *)&v65 - v18);
  __chkstk_darwin(v17);
  uint64_t v82 = (uint64_t)&v65 - v20;
  uint64_t v74 = a1 + *(int *)(type metadata accessor for DataDenseViewAttributes() + 20);
  int v21 = *(unsigned __int8 *)(v74 + 7);
  uint64_t v75 = sub_1000322D8(*(unsigned char *)(v74 + 7), 0);
  uint64_t v71 = v22;
  uint64_t v23 = 0;
  uint64_t v24 = 0;
  uint64_t v80 = 0;
  uint64_t v81 = 0;
  if (!v21)
  {
    type metadata accessor for DataDenseTableView(0);
    uint64_t v25 = sub_10012C0A0();
    uint64_t v80 = v26;
    uint64_t v81 = v25;
    uint64_t v23 = sub_10012C0D0();
  }
  uint64_t v69 = v24;
  uint64_t v70 = v23;
  uint64_t v27 = sub_100032D7C(v21);
  uint64_t v67 = v28;
  uint64_t v68 = v27;
  uint64_t v66 = sub_1000334B8(v21);
  uint64_t v30 = v29;
  uint64_t v73 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  v73(v6, a1, v3);
  uint64_t v31 = v3;
  *(uint64_t *)((char *)v19 + *(int *)(v7 + 40)) = swift_getKeyPath();
  uint64_t v72 = sub_1000053D8(&qword_10016B080);
  swift_storeEnumTagMultiPayload();
  uint64_t v32 = v71;
  *uint64_t v19 = v75;
  v19[1] = (uint64_t)v32;
  uint64_t v33 = v80;
  v19[2] = v81;
  v19[3] = v33;
  uint64_t v34 = v69;
  v19[4] = v70;
  v19[5] = v34;
  uint64_t v35 = v67;
  v19[6] = v68;
  v19[7] = v35;
  v19[8] = v66;
  v19[9] = v30;
  uint64_t v75 = v7;
  uint64_t v36 = (char *)v19 + *(int *)(v7 + 36);
  uint64_t v37 = *(void (**)(void, void, void))(v4 + 32);
  uint64_t v38 = v6;
  uint64_t v80 = v4 + 32;
  uint64_t v81 = v31;
  uint64_t v71 = v37;
  v37(v36, v6, v31);
  sub_1000385D8((uint64_t)v19, v82, (void (*)(void))type metadata accessor for ColumnView);
  int v39 = *(unsigned __int8 *)(v74 + 8);
  uint64_t v74 = sub_1000322D8(*(unsigned char *)(v74 + 8), 0);
  uint64_t v70 = v40;
  if (v39)
  {
    uint64_t v41 = 0;
    uint64_t v42 = 0;
    uint64_t v68 = 0;
    uint64_t v69 = 0;
  }
  else
  {
    type metadata accessor for DataDenseTableView(0);
    uint64_t v43 = sub_10012C0A0();
    uint64_t v68 = v44;
    uint64_t v69 = v43;
    uint64_t v41 = sub_10012C0D0();
    uint64_t v42 = v45;
  }
  uint64_t v46 = sub_100032D7C(v39);
  uint64_t v48 = v47;
  uint64_t v49 = sub_1000334B8(v39);
  uint64_t v51 = v50;
  uint64_t v52 = a1;
  uint64_t v53 = v81;
  v73(v38, v52, v81);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v55 = v75;
  *(uint64_t *)((char *)v14 + *(int *)(v75 + 40)) = KeyPath;
  swift_storeEnumTagMultiPayload();
  uint64_t v56 = v70;
  *uint64_t v14 = v74;
  v14[1] = v56;
  uint64_t v57 = v68;
  v14[2] = v69;
  v14[3] = v57;
  v14[4] = v41;
  v14[5] = v42;
  v14[6] = v46;
  v14[7] = v48;
  v14[8] = v49;
  v14[9] = v51;
  v71((char *)v14 + *(int *)(v55 + 36), v38, v53);
  uint64_t v58 = v76;
  sub_1000385D8((uint64_t)v14, v76, (void (*)(void))type metadata accessor for ColumnView);
  uint64_t v59 = v82;
  uint64_t v60 = v77;
  sub_10003862C(v82, v77, (void (*)(void))type metadata accessor for ColumnView);
  uint64_t v61 = v78;
  sub_10003862C(v58, v78, (void (*)(void))type metadata accessor for ColumnView);
  uint64_t v62 = v79;
  *uint64_t v79 = 0x4000000000000000;
  *((unsigned char *)v62 + 8) = 0;
  uint64_t v63 = sub_1000053D8(&qword_10016C090);
  sub_10003862C(v60, (uint64_t)v62 + *(int *)(v63 + 48), (void (*)(void))type metadata accessor for ColumnView);
  sub_10003862C(v61, (uint64_t)v62 + *(int *)(v63 + 64), (void (*)(void))type metadata accessor for ColumnView);
  sub_100038680(v58, (void (*)(void))type metadata accessor for ColumnView);
  sub_100038680(v59, (void (*)(void))type metadata accessor for ColumnView);
  sub_100038680(v61, (void (*)(void))type metadata accessor for ColumnView);
  return sub_100038680(v60, (void (*)(void))type metadata accessor for ColumnView);
}

uint64_t sub_1000351C4@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v50 = a2;
  uint64_t v48 = sub_10012C610();
  uint64_t v3 = *(void *)(v48 - 8);
  __chkstk_darwin(v48);
  uint64_t v5 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = type metadata accessor for ColumnView(0);
  uint64_t v6 = __chkstk_darwin(v46);
  uint64_t v49 = (uint64_t)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v39 - v9;
  __chkstk_darwin(v8);
  uint64_t v47 = (uint64_t)&v39 - v11;
  uint64_t v12 = a1 + *(int *)(type metadata accessor for DataDenseViewAttributes() + 20);
  int v13 = *(unsigned __int8 *)(v12 + 9);
  uint64_t v14 = sub_1000322D8(*(unsigned char *)(v12 + 9), 0);
  uint64_t v44 = v15;
  uint64_t v45 = v14;
  uint64_t v16 = 0;
  uint64_t v17 = 0;
  uint64_t v18 = 0;
  uint64_t v19 = 0;
  if (!v13)
  {
    type metadata accessor for DataDenseTableView(0);
    uint64_t v18 = sub_10012C0A0();
    uint64_t v19 = v20;
    uint64_t v16 = sub_10012C0D0();
  }
  uint64_t v42 = v17;
  uint64_t v43 = v16;
  uint64_t v21 = sub_100032D7C(v13);
  uint64_t v40 = v22;
  uint64_t v41 = v21;
  uint64_t v23 = sub_1000334B8(v13);
  uint64_t v25 = v24;
  uint64_t v26 = v3;
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  uint64_t v28 = v48;
  v27(v5, a1, v48);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v30 = v46;
  *(void *)&v10[*(int *)(v46 + 40)] = KeyPath;
  sub_1000053D8(&qword_10016B080);
  swift_storeEnumTagMultiPayload();
  uint64_t v31 = v44;
  *(void *)uint64_t v10 = v45;
  *((void *)v10 + 1) = v31;
  *((void *)v10 + 2) = v18;
  *((void *)v10 + 3) = v19;
  uint64_t v32 = v42;
  *((void *)v10 + 4) = v43;
  *((void *)v10 + 5) = v32;
  uint64_t v33 = v40;
  *((void *)v10 + 6) = v41;
  *((void *)v10 + 7) = v33;
  *((void *)v10 + 8) = v23;
  *((void *)v10 + 9) = v25;
  (*(void (**)(char *, char *, uint64_t))(v26 + 32))(&v10[*(int *)(v30 + 36)], v5, v28);
  uint64_t v34 = v47;
  sub_1000385D8((uint64_t)v10, v47, (void (*)(void))type metadata accessor for ColumnView);
  uint64_t v35 = v49;
  sub_10003862C(v34, v49, (void (*)(void))type metadata accessor for ColumnView);
  uint64_t v36 = v50;
  *uint64_t v50 = 0;
  *((unsigned char *)v36 + 8) = 0;
  uint64_t v37 = sub_1000053D8(&qword_10016C088);
  sub_10003862C(v35, (uint64_t)v36 + *(int *)(v37 + 48), (void (*)(void))type metadata accessor for ColumnView);
  sub_100038680(v34, (void (*)(void))type metadata accessor for ColumnView);
  return sub_100038680(v35, (void (*)(void))type metadata accessor for ColumnView);
}

uint64_t sub_100035500@<X0>(uint64_t a1@<X8>)
{
  uint64_t v36 = a1;
  uint64_t v2 = sub_10012B120();
  uint64_t v34 = *(void *)(v2 - 8);
  uint64_t v35 = v2;
  __chkstk_darwin(v2);
  uint64_t v33 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10012B2D0();
  uint64_t v27 = *(void *)(v4 - 8);
  uint64_t v28 = v4;
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000053D8(&qword_10016C278);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = sub_1000053D8(&qword_10016C280);
  __chkstk_darwin(v29);
  uint64_t v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_1000053D8(&qword_10016C288);
  uint64_t v32 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  int v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = sub_1000053D8(&qword_10016C290);
  uint64_t v14 = __chkstk_darwin(v31);
  uint64_t v16 = (char *)&v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v27 - v17;
  *(void *)uint64_t v9 = sub_10012AF10();
  *((void *)v9 + 1) = 0;
  v9[16] = 1;
  uint64_t v19 = sub_1000053D8(&qword_10016C298);
  sub_1000359E0(v1, (uint64_t)&v9[*(int *)(v19 + 44)]);
  type metadata accessor for RowView(0);
  sub_10012C600();
  sub_10008F590((uint64_t)v6);
  sub_10012B1D0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v27 + 8))(v6, v28);
  sub_10012B7A0();
  sub_10004C8B0();
  sub_1000235F8((uint64_t)v9, &qword_10016C278);
  uint64_t v20 = v33;
  sub_10012B100();
  unint64_t v21 = sub_100039FD4();
  uint64_t v22 = v29;
  sub_10012B520();
  (*(void (**)(char *, uint64_t))(v34 + 8))(v20, v35);
  sub_1000235F8((uint64_t)v11, &qword_10016C280);
  uint64_t v23 = v1[3];
  uint64_t v39 = v1[2];
  uint64_t v40 = v23;
  uint64_t v37 = v22;
  unint64_t v38 = v21;
  swift_getOpaqueTypeConformance2();
  sub_10000822C();
  uint64_t v24 = v30;
  sub_10012B4E0();
  (*(void (**)(char *, uint64_t))(v32 + 8))(v13, v24);
  uint64_t v25 = v1[11];
  uint64_t v39 = v1[10];
  uint64_t v40 = v25;
  sub_10012AC60();
  sub_1000235F8((uint64_t)v16, &qword_10016C290);
  sub_10012AC80();
  return sub_1000235F8((uint64_t)v18, &qword_10016C290);
}

uint64_t sub_1000359E0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v43 = a2;
  uint64_t v3 = type metadata accessor for ValueTextView(0);
  uint64_t v4 = v3 - 8;
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v42 = (uint64_t)&v34 - v8;
  uint64_t v9 = type metadata accessor for ConditionTextView(0);
  uint64_t v10 = v9 - 8;
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v40 = (uint64_t)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v14 = (uint64_t *)((char *)&v34 - v13);
  uint64_t v15 = a1[1];
  uint64_t v39 = *a1;
  uint64_t v41 = v15;
  uint64_t v16 = (char *)a1 + *(int *)(type metadata accessor for RowView(0) + 40);
  uint64_t v37 = v16;
  uint64_t v17 = (char *)v14 + *(int *)(v10 + 28);
  uint64_t v18 = sub_10012C610();
  uint64_t v19 = *(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16);
  v19(v17, v16, v18);
  *uint64_t v14 = v39;
  v14[1] = v15;
  uint64_t v20 = a1[8];
  uint64_t v21 = a1[9];
  unint64_t v38 = v14;
  uint64_t v39 = v21;
  uint64_t v22 = a1[11];
  uint64_t v35 = a1[10];
  uint64_t v36 = v20;
  uint64_t v23 = a1[5];
  uint64_t v34 = a1[4];
  uint64_t v24 = a1[6];
  uint64_t v25 = a1[7];
  v19(&v7[*(int *)(v4 + 40)], v37, v18);
  *(void *)uint64_t v7 = v36;
  *((void *)v7 + 1) = v21;
  *((void *)v7 + 2) = v35;
  *((void *)v7 + 3) = v22;
  *((void *)v7 + 4) = v34;
  *((void *)v7 + 5) = v23;
  *((void *)v7 + 6) = v24;
  *((void *)v7 + 7) = v25;
  uint64_t v26 = (uint64_t *)&v7[*(int *)(v4 + 44)];
  *uint64_t v26 = swift_getKeyPath();
  sub_1000053D8(&qword_10016B080);
  swift_storeEnumTagMultiPayload();
  uint64_t v27 = v42;
  sub_1000385D8((uint64_t)v7, v42, (void (*)(void))type metadata accessor for ValueTextView);
  uint64_t v28 = (uint64_t)v38;
  uint64_t v29 = v40;
  sub_10003862C((uint64_t)v38, v40, (void (*)(void))type metadata accessor for ConditionTextView);
  sub_10003862C(v27, (uint64_t)v7, (void (*)(void))type metadata accessor for ValueTextView);
  uint64_t v30 = v43;
  sub_10003862C(v29, v43, (void (*)(void))type metadata accessor for ConditionTextView);
  uint64_t v31 = sub_1000053D8(&qword_10016C2B0);
  uint64_t v32 = v30 + *(int *)(v31 + 48);
  *(void *)uint64_t v32 = 0;
  *(unsigned char *)(v32 + 8) = 1;
  sub_10003862C((uint64_t)v7, v30 + *(int *)(v31 + 64), (void (*)(void))type metadata accessor for ValueTextView);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_100038680(v27, (void (*)(void))type metadata accessor for ValueTextView);
  sub_100038680(v28, (void (*)(void))type metadata accessor for ConditionTextView);
  sub_100038680((uint64_t)v7, (void (*)(void))type metadata accessor for ValueTextView);
  return sub_100038680(v29, (void (*)(void))type metadata accessor for ConditionTextView);
}

uint64_t sub_100035D40@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v48 = a1;
  uint64_t v44 = sub_10012B120();
  uint64_t v3 = *(void *)(v44 - 8);
  __chkstk_darwin(v44);
  uint64_t v5 = (char *)&v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000053D8(&qword_10016C200);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = sub_1000053D8(&qword_10016C208);
  uint64_t v9 = *(void *)(v43 - 8);
  __chkstk_darwin(v43);
  uint64_t v11 = (char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = sub_1000053D8(&qword_10016C210);
  uint64_t v12 = __chkstk_darwin(v47);
  uint64_t v14 = (char *)&v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v12);
  uint64_t v46 = (char *)&v43 - v16;
  __chkstk_darwin(v15);
  uint64_t v45 = (char *)&v43 - v17;
  *(void *)uint64_t v8 = sub_10012B000();
  *((void *)v8 + 1) = 0xBFF0000000000000;
  v8[16] = 0;
  uint64_t v18 = sub_1000053D8(&qword_10016C218);
  sub_100036264((char *)v2, (uint64_t)&v8[*(int *)(v18 + 44)]);
  sub_10012B100();
  uint64_t v19 = sub_10000B38C(&qword_10016C220, &qword_10016C200);
  sub_10012B520();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v44);
  sub_1000235F8((uint64_t)v8, &qword_10016C200);
  uint64_t v20 = *(void *)(v2 + 8);
  uint64_t v51 = *(void **)v2;
  uint64_t v52 = v20;
  uint64_t v49 = v6;
  uint64_t v50 = v19;
  swift_getOpaqueTypeConformance2();
  sub_10000822C();
  uint64_t v21 = v43;
  sub_10012B4E0();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v21);
  uint64_t v22 = *(void *)(v2 + 40);
  uint64_t v23 = *(void *)(v2 + 64);
  uint64_t v24 = *(void *)(v2 + 72);
  if (v22)
  {
    uint64_t v25 = *(void *)(v2 + 32);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    sub_1000458D4(0, 1, 1, (uint64_t)&_swiftEmptyArrayStorage);
    uint64_t v27 = (void *)v26;
    unint64_t v29 = *(void *)(v26 + 16);
    unint64_t v28 = *(void *)(v26 + 24);
    if (v29 >= v28 >> 1)
    {
      sub_1000458D4(v28 > 1, v29 + 1, 1, v26);
      uint64_t v27 = v42;
    }
    v27[2] = v29 + 1;
    uint64_t v30 = (char *)&v27[2 * v29];
    *((void *)v30 + 4) = v25;
    *((void *)v30 + 5) = v22;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v27 = &_swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_1000458D4(0, v27[2] + 1, 1, (uint64_t)v27);
    uint64_t v27 = v40;
  }
  unint64_t v32 = v27[2];
  unint64_t v31 = v27[3];
  if (v32 >= v31 >> 1)
  {
    sub_1000458D4(v31 > 1, v32 + 1, 1, (uint64_t)v27);
    uint64_t v27 = v41;
  }
  v27[2] = v32 + 1;
  uint64_t v33 = (char *)&v27[2 * v32];
  *((void *)v33 + 4) = v23;
  *((void *)v33 + 5) = v24;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v51 = v27;
  sub_1000053D8(&qword_10016C228);
  sub_10000B38C(&qword_10016C230, &qword_10016C228);
  uint64_t v34 = sub_10012C9B0();
  uint64_t v36 = v35;
  swift_bridgeObjectRelease();
  uint64_t v51 = (void *)v34;
  uint64_t v52 = v36;
  uint64_t v37 = (uint64_t)v46;
  sub_10012AC60();
  swift_bridgeObjectRelease();
  sub_1000235F8((uint64_t)v14, &qword_10016C210);
  uint64_t v38 = (uint64_t)v45;
  sub_10012AC80();
  sub_1000235F8(v37, &qword_10016C210);
  return sub_10003BFD4(v38, v48, &qword_10016C210);
}

uint64_t sub_100036264@<X0>(char *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v60 = a2;
  uint64_t v3 = sub_10012C610();
  uint64_t v52 = *(void *)(v3 - 8);
  uint64_t v53 = v3;
  __chkstk_darwin(v3);
  uint64_t v51 = (char *)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = type metadata accessor for CombinedTextView(0);
  __chkstk_darwin(v56);
  uint64_t v54 = (char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = sub_1000053D8(&qword_10016C238);
  __chkstk_darwin(v58);
  uint64_t v57 = (uint64_t)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = sub_1000053D8(&qword_10016C240);
  __chkstk_darwin(v55);
  uint64_t v8 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = sub_1000053D8(&qword_10016C248);
  __chkstk_darwin(v59);
  uint64_t v10 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1000053D8(&qword_10016C250);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_10012AFD0();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v40 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for ColumnView(0);
  sub_10008F524((uint64_t)v17);
  int v19 = (*(uint64_t (**)(char *, uint64_t))(v15 + 88))(v17, v14);
  if (v19 == enum case for ColorSchemeContrast.standard(_:))
  {
    sub_100036998((uint64_t)v13);
    sub_10000B114((uint64_t)v13, (uint64_t)v8, &qword_10016C250);
    swift_storeEnumTagMultiPayload();
    sub_10000B38C(&qword_10016C260, &qword_10016C250);
    sub_10003856C(&qword_10016C268, (void (*)(uint64_t))type metadata accessor for CombinedTextView);
    sub_10012B0E0();
    sub_10000B114((uint64_t)v10, v57, &qword_10016C248);
    swift_storeEnumTagMultiPayload();
    sub_100039EC4();
    sub_10012B0E0();
    sub_1000235F8((uint64_t)v10, &qword_10016C248);
    return sub_1000235F8((uint64_t)v13, &qword_10016C250);
  }
  else
  {
    uint64_t v48 = v8;
    uint64_t v49 = v10;
    uint64_t v21 = (int *)v56;
    uint64_t v50 = v11;
    if (v19 == enum case for ColorSchemeContrast.increased(_:))
    {
      uint64_t v22 = *(void *)a1;
      uint64_t v47 = *((void *)a1 + 1);
      uint64_t v23 = v47;
      uint64_t v24 = *((void *)a1 + 7);
      uint64_t v42 = *((void *)a1 + 6);
      uint64_t v43 = v22;
      uint64_t v25 = *((void *)a1 + 9);
      uint64_t v41 = *((void *)a1 + 8);
      uint64_t v27 = v51;
      uint64_t v26 = v52;
      uint64_t v28 = v53;
      (*(void (**)(char *, char *, uint64_t))(v52 + 16))(v51, &a1[*(int *)(v18 + 36)], v53);
      uint64_t v29 = *((void *)a1 + 2);
      uint64_t v44 = *((void *)a1 + 3);
      uint64_t v45 = v29;
      uint64_t v30 = *((void *)a1 + 4);
      uint64_t v31 = *((void *)a1 + 5);
      uint64_t v46 = v30;
      uint64_t KeyPath = swift_getKeyPath();
      uint64_t v33 = v21;
      uint64_t v34 = v21[10];
      uint64_t v35 = v54;
      *(void *)&v54[v34] = KeyPath;
      sub_1000053D8(&qword_10016B080);
      swift_storeEnumTagMultiPayload();
      *(void *)uint64_t v35 = v43;
      *((void *)v35 + 1) = v23;
      *((void *)v35 + 2) = v42;
      *((void *)v35 + 3) = v24;
      *((void *)v35 + 4) = v41;
      *((void *)v35 + 5) = v25;
      (*(void (**)(char *, char *, uint64_t))(v26 + 32))(&v35[v33[7]], v27, v28);
      uint64_t v36 = &v35[v33[8]];
      uint64_t v37 = v44;
      *(void *)uint64_t v36 = v45;
      *((void *)v36 + 1) = v37;
      uint64_t v38 = &v35[v33[9]];
      *(void *)uint64_t v38 = v46;
      *((void *)v38 + 1) = v31;
      sub_10003862C((uint64_t)v35, (uint64_t)v48, (void (*)(void))type metadata accessor for CombinedTextView);
      swift_storeEnumTagMultiPayload();
      sub_10000B38C(&qword_10016C260, &qword_10016C250);
      sub_10003856C(&qword_10016C268, (void (*)(uint64_t))type metadata accessor for CombinedTextView);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v39 = (uint64_t)v49;
      sub_10012B0E0();
      sub_10000B114(v39, v57, &qword_10016C248);
      swift_storeEnumTagMultiPayload();
      sub_100039EC4();
      sub_10012B0E0();
      sub_1000235F8(v39, &qword_10016C248);
      return sub_100038680((uint64_t)v35, (void (*)(void))type metadata accessor for CombinedTextView);
    }
    else
    {
      sub_100036998((uint64_t)v13);
      sub_10000B114((uint64_t)v13, v57, &qword_10016C250);
      swift_storeEnumTagMultiPayload();
      sub_100039EC4();
      sub_10000B38C(&qword_10016C260, &qword_10016C250);
      sub_10012B0E0();
      sub_1000235F8((uint64_t)v13, &qword_10016C250);
      return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    }
  }
}

uint64_t sub_100036998@<X0>(uint64_t a1@<X8>)
{
  uint64_t v41 = a1;
  uint64_t v2 = type metadata accessor for ValueTextView(0);
  uint64_t v3 = v2 - 8;
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v40 = (uint64_t)&v32 - v7;
  uint64_t v8 = type metadata accessor for ConditionTextView(0);
  uint64_t v9 = v8 - 8;
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v38 = (uint64_t)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v13 = (uint64_t *)((char *)&v32 - v12);
  uint64_t v14 = v1[1];
  uint64_t v37 = *v1;
  uint64_t v39 = v14;
  uint64_t v15 = (char *)v1 + *(int *)(type metadata accessor for ColumnView(0) + 36);
  uint64_t v35 = v15;
  uint64_t v16 = (char *)v13 + *(int *)(v9 + 28);
  uint64_t v17 = sub_10012C610();
  uint64_t v18 = *(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16);
  v18(v16, v15, v17);
  *uint64_t v13 = v37;
  v13[1] = v14;
  uint64_t v19 = v1[6];
  uint64_t v20 = v1[7];
  uint64_t v36 = v13;
  uint64_t v37 = v20;
  uint64_t v21 = v1[9];
  uint64_t v33 = v1[8];
  uint64_t v34 = v19;
  uint64_t v22 = v1[3];
  uint64_t v32 = v1[2];
  uint64_t v24 = v1[4];
  uint64_t v23 = v1[5];
  v18(&v6[*(int *)(v3 + 40)], v35, v17);
  *(void *)uint64_t v6 = v34;
  *((void *)v6 + 1) = v20;
  *((void *)v6 + 2) = v33;
  *((void *)v6 + 3) = v21;
  *((void *)v6 + 4) = v32;
  *((void *)v6 + 5) = v22;
  *((void *)v6 + 6) = v24;
  *((void *)v6 + 7) = v23;
  uint64_t v25 = (uint64_t *)&v6[*(int *)(v3 + 44)];
  uint64_t *v25 = swift_getKeyPath();
  sub_1000053D8(&qword_10016B080);
  swift_storeEnumTagMultiPayload();
  uint64_t v26 = v40;
  sub_1000385D8((uint64_t)v6, v40, (void (*)(void))type metadata accessor for ValueTextView);
  uint64_t v27 = (uint64_t)v36;
  uint64_t v28 = v38;
  sub_10003862C((uint64_t)v36, v38, (void (*)(void))type metadata accessor for ConditionTextView);
  sub_10003862C(v26, (uint64_t)v6, (void (*)(void))type metadata accessor for ValueTextView);
  uint64_t v29 = v41;
  sub_10003862C(v28, v41, (void (*)(void))type metadata accessor for ConditionTextView);
  uint64_t v30 = sub_1000053D8(&qword_10016C270);
  sub_10003862C((uint64_t)v6, v29 + *(int *)(v30 + 48), (void (*)(void))type metadata accessor for ValueTextView);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_100038680(v26, (void (*)(void))type metadata accessor for ValueTextView);
  sub_100038680(v27, (void (*)(void))type metadata accessor for ConditionTextView);
  sub_100038680((uint64_t)v6, (void (*)(void))type metadata accessor for ValueTextView);
  return sub_100038680(v28, (void (*)(void))type metadata accessor for ConditionTextView);
}

uint64_t sub_100036CE0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v94 = a1;
  uint64_t v91 = sub_1000053D8(&qword_10016C4A8);
  __chkstk_darwin(v91);
  uint64_t v93 = (uint64_t)v69 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v75 = sub_10012B120();
  uint64_t v73 = *(void *)(v75 - 8);
  __chkstk_darwin(v75);
  uint64_t v72 = (char *)v69 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v89 = sub_1000053D8(&qword_10016C4B0);
  __chkstk_darwin(v89);
  uint64_t v71 = (void *)((char *)v69 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v92 = sub_1000053D8(&qword_10016C4B8);
  uint64_t v76 = *(void *)(v92 - 8);
  uint64_t v5 = __chkstk_darwin(v92);
  uint64_t v70 = (char *)v69 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v74 = (char *)v69 - v7;
  uint64_t v8 = sub_1000053D8(&qword_10016C4C0);
  __chkstk_darwin(v8 - 8);
  uint64_t v90 = (char *)v69 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v82 = sub_10012AFD0();
  uint64_t v81 = *(void *)(v82 - 8);
  uint64_t v10 = __chkstk_darwin(v82);
  uint64_t v80 = (char *)v69 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v79 = (uint64_t)v69 - v12;
  uint64_t v13 = sub_1000053D8(&qword_10016C4C8);
  uint64_t v86 = *(void *)(v13 - 8);
  uint64_t v87 = v13;
  __chkstk_darwin(v13);
  uint64_t v85 = (char *)v69 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v88 = sub_1000053D8(&qword_10016C4D0);
  __chkstk_darwin(v88);
  uint64_t v84 = (char *)v69 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = v1;
  uint64_t v17 = *v1;
  uint64_t v18 = v1[1];
  uint64_t v19 = v16;
  uint64_t v77 = v16;
  uint64_t v97 = v17;
  uint64_t v98 = v18;
  unint64_t v20 = sub_10000822C();
  swift_bridgeObjectRetain();
  unint64_t v83 = v20;
  uint64_t v21 = sub_10012B420();
  uint64_t v23 = v22;
  char v25 = v24 & 1;
  sub_10012B5C0();
  uint64_t v26 = sub_10012B3A0();
  uint64_t v28 = v27;
  char v30 = v29;
  swift_release();
  sub_100008278(v21, v23, v25);
  swift_bridgeObjectRelease();
  v69[1] = (char *)v19 + *(int *)(type metadata accessor for ValueTextView(0) + 32);
  sub_10012C600();
  uint64_t v31 = sub_10012B3F0();
  uint64_t v33 = v32;
  LOBYTE(v23) = v34;
  swift_release();
  LOBYTE(v21) = v23 & 1;
  sub_100008278(v26, v28, v30 & 1);
  swift_bridgeObjectRelease();
  uint64_t v35 = sub_10012B3B0();
  uint64_t v37 = v36;
  int v78 = v38;
  uint64_t v40 = v39;
  uint64_t v41 = v31;
  uint64_t v42 = v77;
  sub_100008278(v41, v33, v21);
  swift_bridgeObjectRelease();
  uint64_t v43 = v79;
  sub_10008F524(v79);
  uint64_t v44 = v81;
  uint64_t v45 = v80;
  uint64_t v46 = v82;
  (*(void (**)(char *, void, uint64_t))(v81 + 104))(v80, enum case for ColorSchemeContrast.increased(_:), v82);
  LOBYTE(v21) = sub_10012AFC0();
  uint64_t v47 = *(void (**)(char *, uint64_t))(v44 + 8);
  v47(v45, v46);
  v47((char *)v43, v46);
  double v48 = 1.0;
  if ((v21 & 1) == 0) {
    sub_10012C5A0();
  }
  uint64_t v97 = v35;
  uint64_t v98 = v37;
  char v49 = v78 & 1;
  char v99 = v78 & 1;
  uint64_t v100 = v40;
  double v101 = v48;
  sub_10012B2A0();
  uint64_t v50 = sub_1000053D8(&qword_10016C4D8);
  unint64_t v51 = sub_10003BE80();
  uint64_t v52 = v85;
  sub_10012B480();
  sub_100008278(v35, v37, v49);
  swift_bridgeObjectRelease();
  uint64_t v53 = v42[3];
  uint64_t v97 = v42[2];
  uint64_t v98 = v53;
  uint64_t v95 = v50;
  unint64_t v96 = v51;
  swift_getOpaqueTypeConformance2();
  uint64_t v54 = (uint64_t)v84;
  uint64_t v55 = v87;
  sub_10012B4E0();
  (*(void (**)(char *, uint64_t))(v86 + 8))(v52, v55);
  if (v42[5])
  {
    uint64_t v56 = sub_10012AF10();
    uint64_t v57 = (uint64_t)v71;
    *uint64_t v71 = v56;
    *(void *)(v57 + 8) = 0x4010000000000000;
    *(unsigned char *)(v57 + 16) = 0;
    uint64_t v58 = sub_1000053D8(&qword_10016C4F8);
    sub_100037638((uint64_t)v42, v54, (char *)(v57 + *(int *)(v58 + 44)));
    uint64_t v59 = v72;
    sub_10012B100();
    uint64_t v60 = sub_10000B38C(&qword_10016C4E8, &qword_10016C4B0);
    uint64_t v61 = v70;
    uint64_t v62 = v89;
    sub_10012B520();
    (*(void (**)(char *, uint64_t))(v73 + 8))(v59, v75);
    sub_1000235F8(v57, &qword_10016C4B0);
    uint64_t v63 = v76;
    uint64_t v64 = v74;
    uint64_t v65 = v92;
    (*(void (**)(char *, char *, uint64_t))(v76 + 32))(v74, v61, v92);
    (*(void (**)(uint64_t, char *, uint64_t))(v63 + 16))(v93, v64, v65);
    swift_storeEnumTagMultiPayload();
    uint64_t v97 = v62;
    uint64_t v98 = v60;
    swift_getOpaqueTypeConformance2();
    sub_10003BEF4();
    uint64_t v66 = (uint64_t)v90;
    sub_10012B0E0();
    (*(void (**)(char *, uint64_t))(v63 + 8))(v64, v65);
  }
  else
  {
    sub_10000B114(v54, v93, &qword_10016C4D0);
    swift_storeEnumTagMultiPayload();
    uint64_t v67 = sub_10000B38C(&qword_10016C4E8, &qword_10016C4B0);
    uint64_t v97 = v89;
    uint64_t v98 = v67;
    swift_getOpaqueTypeConformance2();
    sub_10003BEF4();
    uint64_t v66 = (uint64_t)v90;
    sub_10012B0E0();
  }
  sub_10003BFD4(v66, v94, &qword_10016C4C0);
  return sub_1000235F8(v54, &qword_10016C4D0);
}

uint64_t sub_100037638@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, char *a3@<X8>)
{
  uint64_t v76 = a2;
  v63[2] = a1;
  int v78 = a3;
  uint64_t v4 = sub_1000053D8(&qword_10016C4D0);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v79 = (uint64_t)v63 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v77 = (uint64_t)v63 - v7;
  uint64_t v67 = sub_10012AFD0();
  uint64_t v66 = *(void *)(v67 - 8);
  uint64_t v8 = __chkstk_darwin(v67);
  uint64_t v65 = (char *)v63 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v64 = (uint64_t)v63 - v10;
  uint64_t v11 = sub_1000053D8(&qword_10016C4C8);
  uint64_t v70 = *(void *)(v11 - 8);
  uint64_t v71 = v11;
  __chkstk_darwin(v11);
  uint64_t v69 = (char *)v63 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1000053D8(&qword_10016C500);
  uint64_t v74 = *(void *)(v13 - 8);
  uint64_t v75 = v13;
  uint64_t v14 = __chkstk_darwin(v13);
  uint64_t v73 = (char *)v63 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v68 = (char *)v63 - v17;
  __chkstk_darwin(v16);
  uint64_t v72 = (char *)v63 - v18;
  swift_bridgeObjectRetain();
  sub_10012B620();
  uint64_t v19 = sub_10012B430();
  uint64_t v21 = v20;
  char v23 = v22 & 1;
  sub_10012B5C0();
  uint64_t v24 = sub_10012B3A0();
  uint64_t v26 = v25;
  char v28 = v27;
  swift_release();
  sub_100008278(v19, v21, v23);
  swift_bridgeObjectRelease();
  v63[1] = a1 + *(int *)(type metadata accessor for ValueTextView(0) + 32);
  sub_10012C600();
  uint64_t v29 = sub_10012B3F0();
  uint64_t v31 = v30;
  char v33 = v32;
  swift_release();
  LOBYTE(v19) = v33 & 1;
  sub_100008278(v24, v26, v28 & 1);
  swift_bridgeObjectRelease();
  uint64_t v34 = sub_10012B3B0();
  uint64_t v36 = v35;
  char v38 = v37;
  uint64_t v40 = v39;
  sub_100008278(v29, v31, v19);
  swift_bridgeObjectRelease();
  uint64_t v41 = v64;
  sub_10008F524(v64);
  uint64_t v42 = v66;
  uint64_t v43 = v65;
  uint64_t v44 = v67;
  (*(void (**)(char *, void, uint64_t))(v66 + 104))(v65, enum case for ColorSchemeContrast.increased(_:), v67);
  LOBYTE(v19) = sub_10012AFC0();
  uint64_t v45 = *(void (**)(char *, uint64_t))(v42 + 8);
  v45(v43, v44);
  v45((char *)v41, v44);
  double v46 = 1.0;
  if ((v19 & 1) == 0) {
    sub_10012C5A0();
  }
  uint64_t v80 = v34;
  unint64_t v81 = v36;
  char v82 = v38 & 1;
  uint64_t v83 = v40;
  double v84 = v46;
  sub_10012B2A0();
  uint64_t v47 = sub_1000053D8(&qword_10016C4D8);
  unint64_t v48 = sub_10003BE80();
  char v49 = v69;
  sub_10012B480();
  sub_100008278(v34, v36, v38 & 1);
  swift_bridgeObjectRelease();
  uint64_t v80 = v47;
  unint64_t v81 = v48;
  swift_getOpaqueTypeConformance2();
  uint64_t v50 = v68;
  uint64_t v51 = v71;
  sub_10012B440();
  (*(void (**)(char *, uint64_t))(v70 + 8))(v49, v51);
  uint64_t v53 = v74;
  uint64_t v52 = v75;
  uint64_t v54 = v72;
  (*(void (**)(char *, char *, uint64_t))(v74 + 32))(v72, v50, v75);
  uint64_t v55 = v77;
  sub_10000B114(v76, v77, &qword_10016C4D0);
  uint64_t v56 = *(void (**)(char *, char *, uint64_t))(v53 + 16);
  uint64_t v57 = v73;
  v56(v73, v54, v52);
  uint64_t v58 = v79;
  sub_10000B114(v55, v79, &qword_10016C4D0);
  uint64_t v59 = v78;
  v56(v78, v57, v52);
  uint64_t v60 = sub_1000053D8(&qword_10016C508);
  sub_10000B114(v58, (uint64_t)&v59[*(int *)(v60 + 48)], &qword_10016C4D0);
  sub_1000235F8(v55, &qword_10016C4D0);
  uint64_t v61 = *(void (**)(char *, uint64_t))(v53 + 8);
  v61(v54, v52);
  sub_1000235F8(v58, &qword_10016C4D0);
  return ((uint64_t (*)(char *, uint64_t))v61)(v57, v52);
}

uint64_t sub_100037C88@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v39 = a1;
  uint64_t v2 = sub_10012B2E0();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = v1[1];
  uint64_t v40 = *v1;
  uint64_t v41 = v6;
  sub_10000822C();
  swift_bridgeObjectRetain();
  uint64_t v7 = sub_10012B420();
  uint64_t v9 = v8;
  LOBYTE(v6) = v10 & 1;
  sub_10012B5C0();
  uint64_t v11 = sub_10012B3A0();
  uint64_t v36 = v12;
  uint64_t v37 = v11;
  char v14 = v13;
  uint64_t v38 = v15;
  swift_release();
  sub_100008278(v7, v9, v6);
  swift_bridgeObjectRelease();
  type metadata accessor for ConditionTextView(0);
  sub_10012C600();
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, enum case for Font.Leading.tight(_:), v2);
  sub_10012B310();
  swift_release();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  uint64_t v17 = v36;
  uint64_t v16 = v37;
  uint64_t v18 = sub_10012B3F0();
  uint64_t v20 = v19;
  LOBYTE(v5) = v21;
  swift_release();
  char v22 = v5 & 1;
  sub_100008278(v16, v17, v14 & 1);
  swift_bridgeObjectRelease();
  uint64_t v23 = sub_10012B3B0();
  uint64_t v25 = v24;
  char v27 = v26 & 1;
  sub_100008278(v18, v20, v22);
  swift_bridgeObjectRelease();
  sub_10012B2A0();
  uint64_t v28 = sub_10012B350();
  uint64_t v30 = v29;
  LOBYTE(v20) = v31;
  uint64_t v33 = v32;
  sub_100008278(v23, v25, v27);
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v35 = v39;
  *uint64_t v39 = v28;
  v35[1] = v30;
  *((unsigned char *)v35 + 16) = v20 & 1;
  v35[3] = v33;
  return result;
}

uint64_t sub_100037F30@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v39 = a1;
  uint64_t v1 = sub_10012B2E0();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v36 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000381AC();
  uint64_t v7 = v6;
  char v9 = v8 & 1;
  sub_10012B5C0();
  uint64_t v10 = sub_10012B3A0();
  uint64_t v36 = v11;
  uint64_t v37 = v10;
  char v13 = v12;
  uint64_t v38 = v14;
  swift_release();
  sub_100008278(v5, v7, v9);
  swift_bridgeObjectRelease();
  type metadata accessor for CombinedTextView(0);
  sub_10012C600();
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, enum case for Font.Leading.tight(_:), v1);
  sub_10012B310();
  swift_release();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  uint64_t v16 = v36;
  uint64_t v15 = v37;
  uint64_t v17 = sub_10012B3F0();
  uint64_t v19 = v18;
  char v21 = v20;
  swift_release();
  char v22 = v21 & 1;
  sub_100008278(v15, v16, v13 & 1);
  swift_bridgeObjectRelease();
  uint64_t v23 = sub_10012B3B0();
  uint64_t v25 = v24;
  char v27 = v26 & 1;
  sub_100008278(v17, v19, v22);
  swift_bridgeObjectRelease();
  sub_10012B2A0();
  uint64_t v28 = sub_10012B350();
  uint64_t v30 = v29;
  LOBYTE(v19) = v31;
  uint64_t v33 = v32;
  sub_100008278(v23, v25, v27);
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v35 = v39;
  *uint64_t v39 = v28;
  v35[1] = v30;
  *((unsigned char *)v35 + 16) = v19 & 1;
  v35[3] = v33;
  return result;
}

uint64_t sub_1000381AC()
{
  sub_1000053D8(&qword_10016C4A0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100130850;
  sub_10000822C();
  swift_bridgeObjectRetain();
  *(void *)(inited + 32) = sub_10012B420();
  *(void *)(inited + 40) = v2;
  *(unsigned char *)(inited + 48) = v3 & 1;
  *(void *)(inited + 56) = v4;
  if (qword_10016AEE8 != -1) {
    swift_once();
  }
  uint64_t v5 = (objc_class *)(id)qword_100181E30;
  v41._countAndFlagsBits = 0x8000000100139540;
  v45._countAndFlagsBits = 8250;
  v45._object = (void *)0xE200000000000000;
  v46.value._countAndFlagsBits = 0;
  v46.value._object = 0;
  v6.super.isa = v5;
  v47._countAndFlagsBits = 0;
  v47._object = (void *)0xE000000000000000;
  sub_100129180(v45, v46, v6, v47, v41);

  *(void *)(inited + 64) = sub_10012B420();
  *(void *)(inited + 72) = v7;
  *(unsigned char *)(inited + 80) = v8 & 1;
  *(void *)(inited + 88) = v9;
  if (*(void *)(v0 + *(int *)(type metadata accessor for CombinedTextView(0) + 32) + 8))
  {
    swift_bridgeObjectRetain();
    sub_10012B620();
    uint64_t v10 = sub_10012B430();
    uint64_t v12 = v11;
    char v14 = v13;
    uint64_t v16 = v15;
    sub_100045988(1, 3, 1, inited);
    uint64_t inited = v17;
    *(void *)(v17 + 16) = 3;
    *(void *)(v17 + 96) = v10;
    *(void *)(v17 + 104) = v12;
    *(unsigned char *)(v17 + 112) = v14 & 1;
    *(void *)(v17 + 120) = v16;
  }
  swift_bridgeObjectRetain();
  uint64_t v18 = sub_10012B420();
  uint64_t v20 = v19;
  char v22 = v21;
  uint64_t v24 = v23;
  unint64_t v26 = *(void *)(inited + 16);
  unint64_t v25 = *(void *)(inited + 24);
  unint64_t v27 = v26 + 1;
  if (v26 >= v25 >> 1)
  {
    sub_100045988(v25 > 1, v26 + 1, 1, inited);
    uint64_t inited = v40;
  }
  *(void *)(inited + 16) = v27;
  uint64_t v28 = inited + 32 * v26;
  *(void *)(v28 + 32) = v18;
  *(void *)(v28 + 40) = v20;
  *(unsigned char *)(v28 + 48) = v22 & 1;
  *(void *)(v28 + 56) = v24;
  swift_bridgeObjectRetain_n();
  uint64_t v29 = 0;
  char v30 = 0;
  uint64_t v31 = inited + 56;
  unint64_t v32 = 0xE000000000000000;
  do
  {
    unint64_t v44 = v27;
    uint64_t v42 = v29;
    uint64_t v43 = v32;
    uint64_t v34 = *(void *)(v31 - 24);
    uint64_t v33 = *(void *)(v31 - 16);
    char v35 = *(unsigned char *)(v31 - 8);
    v31 += 32;
    sub_10000B0B0(v34, v33, v35);
    swift_bridgeObjectRetain();
    char v36 = v30 & 1;
    uint64_t v29 = sub_10012B3D0();
    unint64_t v32 = v37;
    char v30 = v38 & 1;
    sub_100008278(v34, v33, v35);
    swift_bridgeObjectRelease();
    sub_100008278(v42, v43, v36);
    swift_bridgeObjectRelease();
    unint64_t v27 = v44 - 1;
  }
  while (v44 != 1);
  swift_bridgeObjectRelease_n();
  return v29;
}

uint64_t type metadata accessor for RowView(uint64_t a1)
{
  return sub_10001A270(a1, (uint64_t *)&unk_10016C1A0);
}

unint64_t sub_100038520()
{
  unint64_t result = qword_10016C078;
  if (!qword_10016C078)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016C078);
  }
  return result;
}

uint64_t sub_10003856C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for ColumnView(uint64_t a1)
{
  return sub_10001A270(a1, qword_10016C0F0);
}

uint64_t sub_1000385D8(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_10000B3FC();
  uint64_t v4 = sub_10003C1BC();
  v5(v4);
  return a2;
}

uint64_t sub_10003862C(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_10000B3FC();
  uint64_t v4 = sub_10000B430();
  v5(v4);
  return a2;
}

uint64_t sub_100038680(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_10000B3FC();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t *sub_1000386D8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v18 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    uint64_t v9 = a2[5];
    a1[4] = a2[4];
    a1[5] = v9;
    uint64_t v10 = a2[7];
    a1[6] = a2[6];
    a1[7] = v10;
    uint64_t v11 = a2[9];
    uint64_t v12 = *(int *)(a3 + 36);
    char v21 = (char *)a2 + v12;
    char v22 = (char *)a1 + v12;
    a1[8] = a2[8];
    a1[9] = v11;
    uint64_t v13 = sub_10012C610();
    uint64_t v20 = *(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v20(v22, v21, v13);
    uint64_t v14 = *(int *)(a3 + 40);
    uint64_t v15 = (uint64_t *)((char *)v4 + v14);
    uint64_t v16 = (uint64_t *)((char *)a2 + v14);
    sub_1000053D8(&qword_10016B080);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v17 = sub_10012AFD0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
    }
    else
    {
      *uint64_t v15 = *v16;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return v4;
}

uint64_t sub_1000388B8(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 36);
  uint64_t v5 = sub_10012C610();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = a1 + *(int *)(a2 + 40);
  sub_1000053D8(&qword_10016B080);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_10012AFD0();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
    return v8(v6, v7);
  }
  else
  {
    return swift_release();
  }
}

void *sub_1000389DC(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  uint64_t v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  uint64_t v7 = a2[5];
  a1[4] = a2[4];
  a1[5] = v7;
  uint64_t v8 = a2[7];
  a1[6] = a2[6];
  a1[7] = v8;
  uint64_t v9 = a2[9];
  uint64_t v10 = *(int *)(a3 + 36);
  uint64_t v18 = (char *)a2 + v10;
  uint64_t v19 = (char *)a1 + v10;
  a1[8] = a2[8];
  a1[9] = v9;
  uint64_t v11 = sub_10012C610();
  uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v12(v19, v18, v11);
  uint64_t v13 = *(int *)(a3 + 40);
  uint64_t v14 = (void *)((char *)a1 + v13);
  uint64_t v15 = (void *)((char *)a2 + v13);
  sub_1000053D8(&qword_10016B080);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v16 = sub_10012AFD0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
  }
  else
  {
    *uint64_t v14 = *v15;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *sub_100038B60(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 36);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_10012C610();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  if (a1 != a2)
  {
    uint64_t v10 = *(int *)(a3 + 40);
    uint64_t v11 = (void *)((char *)a1 + v10);
    uint64_t v12 = (void *)((char *)a2 + v10);
    sub_1000235F8((uint64_t)a1 + v10, &qword_10016B080);
    sub_1000053D8(&qword_10016B080);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v13 = sub_10012AFD0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
    }
    else
    {
      *uint64_t v11 = *v12;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_OWORD *sub_100038D2C(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  long long v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  a1[4] = a2[4];
  uint64_t v8 = *(int *)(a3 + 36);
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = sub_10012C610();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
  uint64_t v12 = *(int *)(a3 + 40);
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  uint64_t v15 = sub_1000053D8(&qword_10016B080);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v16 = sub_10012AFD0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v13, v14, v16);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64));
  }
  return a1;
}

void *sub_100038E68(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = a2[7];
  a1[6] = a2[6];
  a1[7] = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = a2[9];
  a1[8] = a2[8];
  a1[9] = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = *(int *)(a3 + 36);
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = sub_10012C610();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  if (a1 != a2)
  {
    uint64_t v15 = *(int *)(a3 + 40);
    uint64_t v16 = (char *)a1 + v15;
    uint64_t v17 = (char *)a2 + v15;
    sub_1000235F8((uint64_t)a1 + v15, &qword_10016B080);
    uint64_t v18 = sub_1000053D8(&qword_10016B080);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v19 = sub_10012AFD0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 32))(v16, v17, v19);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v16, v17, *(void *)(*(void *)(v18 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_100038FF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100039008);
}

uint64_t sub_100039008()
{
  sub_10003C140();
  if (v2) {
    return sub_10003C114();
  }
  sub_10003C150();
  sub_10000B3D0();
  if (*(_DWORD *)(v4 + 84) == v0)
  {
    uint64_t v5 = *(int *)(v1 + 36);
  }
  else
  {
    sub_1000053D8(&qword_10016B0A8);
    uint64_t v5 = *(int *)(v1 + 40);
  }
  uint64_t v6 = sub_10003C1A4(v5);

  return _s13WeatherWidget20WeatherDataViewModelOwet_0(v6, v7, v8);
}

uint64_t sub_100039090(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000390A4);
}

void sub_1000390A4()
{
  sub_10003C12C();
  if (v2)
  {
    sub_10003C198();
  }
  else
  {
    sub_10003C17C();
    sub_10000B3D0();
    if (*(_DWORD *)(v3 + 84) == v1)
    {
      uint64_t v4 = *(int *)(v0 + 36);
    }
    else
    {
      sub_1000053D8(&qword_10016B0A8);
      uint64_t v4 = *(int *)(v0 + 40);
    }
    uint64_t v5 = sub_10003C16C(v4);
    _s13WeatherWidget20WeatherDataViewModelOwst_0(v5, v6, v7, v8);
  }
}

void sub_10003912C()
{
  sub_10012C610();
  if (v0 <= 0x3F)
  {
    sub_100039DDC(319, (unint64_t *)&qword_10016B128, (void (*)(uint64_t))&type metadata accessor for ColorSchemeContrast);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t *sub_10003922C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v19 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    uint64_t v9 = a2[5];
    a1[4] = a2[4];
    a1[5] = v9;
    uint64_t v10 = a2[7];
    a1[6] = a2[6];
    a1[7] = v10;
    uint64_t v11 = a2[9];
    a1[8] = a2[8];
    a1[9] = v11;
    uint64_t v12 = a2[11];
    uint64_t v13 = *(int *)(a3 + 40);
    char v22 = (char *)a2 + v13;
    uint64_t v23 = (char *)a1 + v13;
    a1[10] = a2[10];
    a1[11] = v12;
    uint64_t v14 = sub_10012C610();
    char v21 = *(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v21(v23, v22, v14);
    uint64_t v15 = *(int *)(a3 + 44);
    uint64_t v16 = (uint64_t *)((char *)v4 + v15);
    uint64_t v17 = (uint64_t *)((char *)a2 + v15);
    sub_1000053D8(&qword_10016B9E0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v18 = sub_10012B2D0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
    }
    else
    {
      void *v16 = *v17;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return v4;
}

uint64_t sub_100039418(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 40);
  uint64_t v5 = sub_10012C610();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = a1 + *(int *)(a2 + 44);
  sub_1000053D8(&qword_10016B9E0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_10012B2D0();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
    return v8(v6, v7);
  }
  else
  {
    return swift_release();
  }
}

void *sub_100039544(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  uint64_t v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  uint64_t v7 = a2[5];
  a1[4] = a2[4];
  a1[5] = v7;
  uint64_t v8 = a2[7];
  a1[6] = a2[6];
  a1[7] = v8;
  uint64_t v9 = a2[9];
  a1[8] = a2[8];
  a1[9] = v9;
  uint64_t v10 = a2[11];
  uint64_t v11 = *(int *)(a3 + 40);
  uint64_t v19 = (char *)a2 + v11;
  uint64_t v20 = (char *)a1 + v11;
  a1[10] = a2[10];
  a1[11] = v10;
  uint64_t v12 = sub_10012C610();
  uint64_t v18 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v18(v20, v19, v12);
  uint64_t v13 = *(int *)(a3 + 44);
  uint64_t v14 = (void *)((char *)a1 + v13);
  uint64_t v15 = (void *)((char *)a2 + v13);
  sub_1000053D8(&qword_10016B9E0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v16 = sub_10012B2D0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
  }
  else
  {
    *uint64_t v14 = *v15;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *sub_1000396E0(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[10] = a2[10];
  a1[11] = a2[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 40);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_10012C610();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  if (a1 != a2)
  {
    uint64_t v10 = *(int *)(a3 + 44);
    uint64_t v11 = (void *)((char *)a1 + v10);
    uint64_t v12 = (void *)((char *)a2 + v10);
    sub_1000235F8((uint64_t)a1 + v10, &qword_10016B9E0);
    sub_1000053D8(&qword_10016B9E0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v13 = sub_10012B2D0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
    }
    else
    {
      *uint64_t v11 = *v12;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_OWORD *sub_1000398CC(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  long long v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  long long v8 = a2[5];
  uint64_t v9 = *(int *)(a3 + 40);
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  a1[4] = a2[4];
  a1[5] = v8;
  uint64_t v12 = sub_10012C610();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v10, v11, v12);
  uint64_t v13 = *(int *)(a3 + 44);
  uint64_t v14 = (char *)a1 + v13;
  uint64_t v15 = (char *)a2 + v13;
  uint64_t v16 = sub_1000053D8(&qword_10016B9E0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v17 = sub_10012B2D0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32))(v14, v15, v17);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
  }
  return a1;
}

void *sub_100039A08(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = a2[7];
  a1[6] = a2[6];
  a1[7] = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = a2[9];
  a1[8] = a2[8];
  a1[9] = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = a2[11];
  a1[10] = a2[10];
  a1[11] = v11;
  swift_bridgeObjectRelease();
  uint64_t v12 = *(int *)(a3 + 40);
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  uint64_t v15 = sub_10012C610();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 40))(v13, v14, v15);
  if (a1 != a2)
  {
    uint64_t v16 = *(int *)(a3 + 44);
    uint64_t v17 = (char *)a1 + v16;
    uint64_t v18 = (char *)a2 + v16;
    sub_1000235F8((uint64_t)a1 + v16, &qword_10016B9E0);
    uint64_t v19 = sub_1000053D8(&qword_10016B9E0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v20 = sub_10012B2D0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 32))(v17, v18, v20);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_100039BA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100039BB8);
}

uint64_t sub_100039BB8()
{
  sub_10003C140();
  if (v2) {
    return sub_10003C114();
  }
  sub_10003C150();
  sub_10000B3D0();
  if (*(_DWORD *)(v4 + 84) == v0)
  {
    uint64_t v5 = *(int *)(v1 + 40);
  }
  else
  {
    sub_1000053D8(&qword_10016C140);
    uint64_t v5 = *(int *)(v1 + 44);
  }
  uint64_t v6 = sub_10003C1A4(v5);

  return _s13WeatherWidget20WeatherDataViewModelOwet_0(v6, v7, v8);
}

uint64_t sub_100039C40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100039C54);
}

void sub_100039C54()
{
  sub_10003C12C();
  if (v2)
  {
    sub_10003C198();
  }
  else
  {
    sub_10003C17C();
    sub_10000B3D0();
    if (*(_DWORD *)(v3 + 84) == v1)
    {
      uint64_t v4 = *(int *)(v0 + 40);
    }
    else
    {
      sub_1000053D8(&qword_10016C140);
      uint64_t v4 = *(int *)(v0 + 44);
    }
    uint64_t v5 = sub_10003C16C(v4);
    _s13WeatherWidget20WeatherDataViewModelOwst_0(v5, v6, v7, v8);
  }
}

void sub_100039CDC()
{
  sub_10012C610();
  if (v0 <= 0x3F)
  {
    sub_100039DDC(319, (unint64_t *)&unk_10016C1B0, (void (*)(uint64_t))&type metadata accessor for Font.Context);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_100039DDC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_10012AB90();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_100039E30()
{
  return sub_10000B38C(&qword_10016C1F8, &qword_10016BFD0);
}

uint64_t sub_100039E6C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100039E88()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t type metadata accessor for CombinedTextView(uint64_t a1)
{
  return sub_10001A270(a1, qword_10016C310);
}

unint64_t sub_100039EC4()
{
  unint64_t result = qword_10016C258;
  if (!qword_10016C258)
  {
    sub_100005470(&qword_10016C248);
    sub_10000B38C(&qword_10016C260, &qword_10016C250);
    sub_10003856C(&qword_10016C268, (void (*)(uint64_t))type metadata accessor for CombinedTextView);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016C258);
  }
  return result;
}

uint64_t type metadata accessor for ValueTextView(uint64_t a1)
{
  return sub_10001A270(a1, qword_10016C3B8);
}

uint64_t type metadata accessor for ConditionTextView(uint64_t a1)
{
  return sub_10001A270(a1, qword_10016C458);
}

unint64_t sub_100039FD4()
{
  unint64_t result = qword_10016C2A0;
  if (!qword_10016C2A0)
  {
    sub_100005470(&qword_10016C280);
    sub_10000B38C(&qword_10016C2A8, &qword_10016C278);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016C2A0);
  }
  return result;
}

uint64_t *sub_10003A074(uint64_t *a1, uint64_t *a2, int *a3)
{
  unint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v26 = *a2;
    *unint64_t v4 = *a2;
    unint64_t v4 = (uint64_t *)(v26 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    uint64_t v9 = a2[5];
    uint64_t v10 = a3[7];
    uint64_t v28 = (char *)a1 + v10;
    uint64_t v11 = (char *)a2 + v10;
    a1[4] = a2[4];
    a1[5] = v9;
    uint64_t v12 = sub_10012C610();
    uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v13(v28, v11, v12);
    uint64_t v14 = a3[8];
    uint64_t v15 = a3[9];
    uint64_t v16 = (uint64_t *)((char *)v4 + v14);
    uint64_t v17 = (uint64_t *)((char *)a2 + v14);
    uint64_t v18 = v17[1];
    void *v16 = *v17;
    v16[1] = v18;
    uint64_t v19 = (uint64_t *)((char *)v4 + v15);
    uint64_t v20 = (uint64_t *)((char *)a2 + v15);
    uint64_t v21 = v20[1];
    *uint64_t v19 = *v20;
    v19[1] = v21;
    uint64_t v22 = a3[10];
    uint64_t v23 = (uint64_t *)((char *)v4 + v22);
    uint64_t v24 = (uint64_t *)((char *)a2 + v22);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1000053D8(&qword_10016B080);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v25 = sub_10012AFD0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v25 - 8) + 16))(v23, v24, v25);
    }
    else
    {
      *uint64_t v23 = *v24;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return v4;
}

uint64_t sub_10003A260(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 28);
  uint64_t v5 = sub_10012C610();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v6 = a1 + *(int *)(a2 + 40);
  sub_1000053D8(&qword_10016B080);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_10012AFD0();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
    return v8(v6, v7);
  }
  else
  {
    return swift_release();
  }
}

void *sub_10003A394(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  uint64_t v8 = a2[5];
  uint64_t v9 = a3[7];
  uint64_t v26 = (char *)a1 + v9;
  uint64_t v10 = (char *)a2 + v9;
  a1[4] = a2[4];
  a1[5] = v8;
  uint64_t v11 = sub_10012C610();
  uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v12(v26, v10, v11);
  uint64_t v13 = a3[8];
  uint64_t v14 = a3[9];
  uint64_t v15 = (void *)((char *)a1 + v13);
  uint64_t v16 = (void *)((char *)a2 + v13);
  uint64_t v17 = v16[1];
  *uint64_t v15 = *v16;
  v15[1] = v17;
  uint64_t v18 = (void *)((char *)a1 + v14);
  uint64_t v19 = (void *)((char *)a2 + v14);
  uint64_t v20 = v19[1];
  *uint64_t v18 = *v19;
  v18[1] = v20;
  uint64_t v21 = a3[10];
  uint64_t v22 = (void *)((char *)a1 + v21);
  uint64_t v23 = (void *)((char *)a2 + v21);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1000053D8(&qword_10016B080);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v24 = sub_10012AFD0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v24 - 8) + 16))(v22, v23, v24);
  }
  else
  {
    *uint64_t v22 = *v23;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *sub_10003A528(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[7];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_10012C610();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = a3[8];
  uint64_t v11 = (void *)((char *)a1 + v10);
  uint64_t v12 = (void *)((char *)a2 + v10);
  *uint64_t v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v13 = a3[9];
  uint64_t v14 = (void *)((char *)a1 + v13);
  uint64_t v15 = (void *)((char *)a2 + v13);
  *uint64_t v14 = *v15;
  v14[1] = v15[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    uint64_t v16 = a3[10];
    uint64_t v17 = (void *)((char *)a1 + v16);
    uint64_t v18 = (void *)((char *)a2 + v16);
    sub_1000235F8((uint64_t)a1 + v16, &qword_10016B080);
    sub_1000053D8(&qword_10016B080);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v19 = sub_10012AFD0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
    }
    else
    {
      *uint64_t v17 = *v18;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_OWORD *sub_10003A70C(_OWORD *a1, _OWORD *a2, int *a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  a1[2] = a2[2];
  uint64_t v7 = a3[7];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_10012C610();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[9];
  *(_OWORD *)((char *)a1 + a3[8]) = *(_OWORD *)((char *)a2 + a3[8]);
  *(_OWORD *)((char *)a1 + v11) = *(_OWORD *)((char *)a2 + v11);
  uint64_t v12 = a3[10];
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  uint64_t v15 = sub_1000053D8(&qword_10016B080);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v16 = sub_10012AFD0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v13, v14, v16);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64));
  }
  return a1;
}

void *sub_10003A854(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = a3[7];
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = sub_10012C610();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 40))(v10, v11, v12);
  uint64_t v13 = a3[8];
  uint64_t v14 = (void *)((char *)a1 + v13);
  uint64_t v15 = (void *)((char *)a2 + v13);
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  *uint64_t v14 = v17;
  v14[1] = v16;
  swift_bridgeObjectRelease();
  uint64_t v18 = a3[9];
  uint64_t v19 = (void *)((char *)a1 + v18);
  uint64_t v20 = (void *)((char *)a2 + v18);
  uint64_t v22 = *v20;
  uint64_t v21 = v20[1];
  *uint64_t v19 = v22;
  v19[1] = v21;
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    uint64_t v23 = a3[10];
    uint64_t v24 = (char *)a1 + v23;
    uint64_t v25 = (char *)a2 + v23;
    sub_1000235F8((uint64_t)a1 + v23, &qword_10016B080);
    uint64_t v26 = sub_1000053D8(&qword_10016B080);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v27 = sub_10012AFD0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 32))(v24, v25, v27);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v24, v25, *(void *)(*(void *)(v26 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_10003A9F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10003AA0C);
}

uint64_t sub_10003AA0C()
{
  sub_10003C140();
  if (v2) {
    return sub_10003C114();
  }
  sub_10003C150();
  sub_10000B3D0();
  if (*(_DWORD *)(v4 + 84) == v0)
  {
    uint64_t v5 = *(int *)(v1 + 28);
  }
  else
  {
    sub_1000053D8(&qword_10016B0A8);
    uint64_t v5 = *(int *)(v1 + 40);
  }
  uint64_t v6 = sub_10003C1A4(v5);

  return _s13WeatherWidget20WeatherDataViewModelOwet_0(v6, v7, v8);
}

uint64_t sub_10003AA94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10003AAA8);
}

void sub_10003AAA8()
{
  sub_10003C12C();
  if (v2)
  {
    sub_10003C198();
  }
  else
  {
    sub_10003C17C();
    sub_10000B3D0();
    if (*(_DWORD *)(v3 + 84) == v1)
    {
      uint64_t v4 = *(int *)(v0 + 28);
    }
    else
    {
      sub_1000053D8(&qword_10016B0A8);
      uint64_t v4 = *(int *)(v0 + 40);
    }
    uint64_t v5 = sub_10003C16C(v4);
    _s13WeatherWidget20WeatherDataViewModelOwst_0(v5, v6, v7, v8);
  }
}

void sub_10003AB30()
{
  sub_10012C610();
  if (v0 <= 0x3F)
  {
    sub_100039DDC(319, (unint64_t *)&qword_10016B128, (void (*)(uint64_t))&type metadata accessor for ColorSchemeContrast);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t *sub_10003AC30(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v18 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    uint64_t v9 = a2[5];
    a1[4] = a2[4];
    a1[5] = v9;
    uint64_t v10 = a2[7];
    uint64_t v11 = *(int *)(a3 + 32);
    uint64_t v20 = (char *)a2 + v11;
    uint64_t v21 = (char *)a1 + v11;
    a1[6] = a2[6];
    a1[7] = v10;
    uint64_t v12 = sub_10012C610();
    uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v13(v21, v20, v12);
    uint64_t v14 = *(int *)(a3 + 36);
    uint64_t v15 = (uint64_t *)((char *)v4 + v14);
    uint64_t v16 = (uint64_t *)((char *)a2 + v14);
    sub_1000053D8(&qword_10016B080);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v17 = sub_10012AFD0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
    }
    else
    {
      *uint64_t v15 = *v16;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return v4;
}

uint64_t sub_10003ADF8(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 32);
  uint64_t v5 = sub_10012C610();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = a1 + *(int *)(a2 + 36);
  sub_1000053D8(&qword_10016B080);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_10012AFD0();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
    return v8(v6, v7);
  }
  else
  {
    return swift_release();
  }
}

void *sub_10003AF14(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  uint64_t v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  uint64_t v9 = a2[7];
  uint64_t v10 = *(int *)(a3 + 32);
  uint64_t v18 = (char *)a2 + v10;
  uint64_t v19 = (char *)a1 + v10;
  a1[6] = a2[6];
  a1[7] = v9;
  uint64_t v11 = sub_10012C610();
  uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v12(v19, v18, v11);
  uint64_t v13 = *(int *)(a3 + 36);
  uint64_t v14 = (void *)((char *)a1 + v13);
  uint64_t v15 = (void *)((char *)a2 + v13);
  sub_1000053D8(&qword_10016B080);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v16 = sub_10012AFD0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
  }
  else
  {
    *uint64_t v14 = *v15;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *sub_10003B084(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 32);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_10012C610();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  if (a1 != a2)
  {
    uint64_t v10 = *(int *)(a3 + 36);
    uint64_t v11 = (void *)((char *)a1 + v10);
    uint64_t v12 = (void *)((char *)a2 + v10);
    sub_1000235F8((uint64_t)a1 + v10, &qword_10016B080);
    sub_1000053D8(&qword_10016B080);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v13 = sub_10012AFD0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
    }
    else
    {
      *uint64_t v11 = *v12;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_OWORD *sub_10003B230(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  long long v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  uint64_t v8 = *(int *)(a3 + 32);
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = sub_10012C610();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
  uint64_t v12 = *(int *)(a3 + 36);
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  uint64_t v15 = sub_1000053D8(&qword_10016B080);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v16 = sub_10012AFD0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v13, v14, v16);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64));
  }
  return a1;
}

void *sub_10003B364(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = a2[7];
  a1[6] = a2[6];
  a1[7] = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = *(int *)(a3 + 32);
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = sub_10012C610();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 40))(v11, v12, v13);
  if (a1 != a2)
  {
    uint64_t v14 = *(int *)(a3 + 36);
    uint64_t v15 = (char *)a1 + v14;
    uint64_t v16 = (char *)a2 + v14;
    sub_1000235F8((uint64_t)a1 + v14, &qword_10016B080);
    uint64_t v17 = sub_1000053D8(&qword_10016B080);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v18 = sub_10012AFD0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v15, v16, v18);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_10003B4E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10003B4F4);
}

uint64_t sub_10003B4F4()
{
  sub_10003C140();
  if (v2) {
    return sub_10003C114();
  }
  sub_10003C150();
  sub_10000B3D0();
  if (*(_DWORD *)(v4 + 84) == v0)
  {
    uint64_t v5 = *(int *)(v1 + 32);
  }
  else
  {
    sub_1000053D8(&qword_10016B0A8);
    uint64_t v5 = *(int *)(v1 + 36);
  }
  uint64_t v6 = sub_10003C1A4(v5);

  return _s13WeatherWidget20WeatherDataViewModelOwet_0(v6, v7, v8);
}

uint64_t sub_10003B57C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10003B590);
}

void sub_10003B590()
{
  sub_10003C12C();
  if (v2)
  {
    sub_10003C198();
  }
  else
  {
    sub_10003C17C();
    sub_10000B3D0();
    if (*(_DWORD *)(v3 + 84) == v1)
    {
      uint64_t v4 = *(int *)(v0 + 32);
    }
    else
    {
      sub_1000053D8(&qword_10016B0A8);
      uint64_t v4 = *(int *)(v0 + 36);
    }
    uint64_t v5 = sub_10003C16C(v4);
    _s13WeatherWidget20WeatherDataViewModelOwst_0(v5, v6, v7, v8);
  }
}

void sub_10003B618()
{
  sub_10012C610();
  if (v0 <= 0x3F)
  {
    sub_100039DDC(319, (unint64_t *)&qword_10016B128, (void (*)(uint64_t))&type metadata accessor for ColorSchemeContrast);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t *sub_10003B714(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = sub_10012C610();
    uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    v10(v7, v8, v9);
  }
  return v3;
}

uint64_t sub_10003B7FC(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_10012C610();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

void *sub_10003B874(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(a3 + 20);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_10012C610();
  uint64_t v9 = *(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  v9(v6, v7, v8);
  return a1;
}

void *sub_10003B90C(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_10012C610();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

_OWORD *sub_10003B9A8(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_10012C610();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

void *sub_10003BA24(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_10012C610();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t sub_10003BAB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10003BAC4);
}

uint64_t sub_10003BAC4()
{
  sub_10003C140();
  if (v1) {
    return sub_10003C114();
  }
  sub_10003C150();
  uint64_t v3 = sub_10003C1A4(*(int *)(v0 + 20));

  return _s13WeatherWidget20WeatherDataViewModelOwet_0(v3, v4, v5);
}

uint64_t sub_10003BB24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10003BB38);
}

void sub_10003BB38()
{
  sub_10003C12C();
  if (v1)
  {
    sub_10003C198();
  }
  else
  {
    uint64_t v2 = v0;
    sub_10012C610();
    uint64_t v3 = sub_10003C16C(*(int *)(v2 + 20));
    _s13WeatherWidget20WeatherDataViewModelOwst_0(v3, v4, v5, v6);
  }
}

uint64_t sub_10003BBA0()
{
  uint64_t result = sub_10012C610();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_10003BC3C()
{
  unint64_t result = qword_10016C490;
  if (!qword_10016C490)
  {
    sub_100005470(&qword_10016C210);
    sub_100005470(&qword_10016C200);
    sub_10000B38C(&qword_10016C220, &qword_10016C200);
    swift_getOpaqueTypeConformance2();
    sub_10003856C((unint64_t *)&qword_10016BEC8, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016C490);
  }
  return result;
}

unint64_t sub_10003BD4C()
{
  unint64_t result = qword_10016C498;
  if (!qword_10016C498)
  {
    sub_100005470(&qword_10016C290);
    sub_100005470(&qword_10016C280);
    sub_100039FD4();
    swift_getOpaqueTypeConformance2();
    sub_10003856C((unint64_t *)&qword_10016BEC8, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016C498);
  }
  return result;
}

uint64_t sub_10003BE2C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10003BE48()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10003BE64()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_10003BE80()
{
  unint64_t result = qword_10016C4E0;
  if (!qword_10016C4E0)
  {
    sub_100005470(&qword_10016C4D8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016C4E0);
  }
  return result;
}

unint64_t sub_10003BEF4()
{
  unint64_t result = qword_10016C4F0;
  if (!qword_10016C4F0)
  {
    sub_100005470(&qword_10016C4D0);
    sub_100005470(&qword_10016C4D8);
    sub_10003BE80();
    swift_getOpaqueTypeConformance2();
    sub_10003856C((unint64_t *)&qword_10016BEC8, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016C4F0);
  }
  return result;
}

uint64_t sub_10003BFD4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  sub_1000053D8(a3);
  sub_10000B3FC();
  uint64_t v4 = sub_10003C1BC();
  v5(v4);
  return a2;
}

void *sub_10003C024()
{
  return &protocol witness table for Text;
}

unint64_t sub_10003C034()
{
  unint64_t result = qword_10016C510;
  if (!qword_10016C510)
  {
    sub_100005470(&qword_10016C4C0);
    sub_100005470(&qword_10016C4B0);
    sub_10000B38C(&qword_10016C4E8, &qword_10016C4B0);
    swift_getOpaqueTypeConformance2();
    sub_10003BEF4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016C510);
  }
  return result;
}

uint64_t sub_10003C114()
{
  unint64_t v1 = *(void *)(v0 + 8);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

uint64_t sub_10003C150()
{
  return sub_10012C610();
}

uint64_t sub_10003C16C@<X0>(uint64_t a1@<X8>)
{
  return v1 + a1;
}

uint64_t sub_10003C17C()
{
  return sub_10012C610();
}

void sub_10003C198()
{
  *(void *)(v1 + 8) = (v0 - 1);
}

uint64_t sub_10003C1A4@<X0>(uint64_t a1@<X8>)
{
  return v1 + a1;
}

uint64_t sub_10003C1BC()
{
  return v0;
}

uint64_t sub_10003C1D0(uint64_t a1, uint64_t a2, char a3, int a4)
{
  int v26 = a4;
  uint64_t v8 = sub_1000053D8((uint64_t *)&unk_10016C5F0);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = &v25[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = sub_10012AFE0();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v27 = &v25[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v14 = v4 + OBJC_IVAR____TtC13WeatherWidget21ViewAttributesFactory_widgetFamily;
  uint64_t v15 = sub_10012C800();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(void (**)(uint64_t, uint64_t))(v16 + 16);
  uint64_t v28 = v15;
  uint64_t v29 = a1;
  v17(v14, a1);
  *(unsigned char *)(v4 + OBJC_IVAR____TtC13WeatherWidget21ViewAttributesFactory_widgetDisplaySize) = a3;
  uint64_t v18 = *(void (**)(void))(v12 + 16);
  sub_10003C72C();
  v18();
  *(unsigned char *)(v4 + OBJC_IVAR____TtC13WeatherWidget21ViewAttributesFactory_showsWidgetBackground) = v26;
  uint64_t v19 = (unsigned int *)&enum case for ContentSizeCategory.accessibilityMedium(_:);
  if (!a3) {
    uint64_t v19 = (unsigned int *)&enum case for ContentSizeCategory.extraExtraExtraLarge(_:);
  }
  (*(void (**)(uint64_t, void, uint64_t))(v12 + 104))(v4 + OBJC_IVAR____TtC13WeatherWidget21ViewAttributesFactory_maxSupportedSizeCategory, *v19, v11);
  sub_10010E1A0();
  uint64_t v20 = v27;
  sub_10003C72C();
  v18();
  sub_10003C72C();
  v18();
  _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v10, 0, 1, v11);
  uint64_t v21 = (void *)sub_10012CEC0();
  id v22 = [self traitCollectionWithPreferredContentSizeCategory:v21];

  uint64_t v23 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
  v23(a2, v11);
  (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v29, v28);
  v23((uint64_t)v20, v11);
  *(void *)(v4 + OBJC_IVAR____TtC13WeatherWidget21ViewAttributesFactory_traitCollection) = v22;
  return v4;
}

uint64_t sub_10003C4AC()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC13WeatherWidget21ViewAttributesFactory_widgetFamily;
  uint64_t v2 = sub_10012C800();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0 + OBJC_IVAR____TtC13WeatherWidget21ViewAttributesFactory_sizeCategory;
  uint64_t v4 = sub_10012AFE0();
  uint64_t v5 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v5(v3, v4);
  v5(v0 + OBJC_IVAR____TtC13WeatherWidget21ViewAttributesFactory_maxSupportedSizeCategory, v4);

  return v0;
}

uint64_t sub_10003C594()
{
  sub_10003C4AC();
  uint64_t v1 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v2 = *(unsigned __int16 *)(*(void *)v0 + 52);

  return _swift_deallocClassInstance(v0, v1, v2);
}

uint64_t sub_10003C5EC()
{
  return type metadata accessor for ViewAttributesFactory();
}

uint64_t type metadata accessor for ViewAttributesFactory()
{
  uint64_t result = qword_10016C540;
  if (!qword_10016C540) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10003C63C()
{
  uint64_t result = sub_10012C800();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_10012AFE0();
    if (v2 <= 0x3F)
    {
      uint64_t result = swift_updateClassMetadata2();
      if (!result) {
        return 0;
      }
    }
  }
  return result;
}

id sub_10003C74C()
{
  id result = *(id *)(v0 + OBJC_IVAR____TtC13WeatherWidget21WidgetLocationManager_locationManager);
  if (result) {
    return [result _limitsPrecision];
  }
  __break(1u);
  return result;
}

id sub_10003C780(char *a1)
{
  unint64_t v2 = *(void **)&a1[OBJC_IVAR____TtC13WeatherWidget21WidgetLocationManager_locationQueue];
  objc_allocWithZone((Class)CLLocationManager);
  id v3 = v2;
  uint64_t v4 = a1;
  id result = sub_10004533C(0xD000000000000011, 0x80000001001398D0, (uint64_t)a1, v2);
  if (!result)
  {
    __break(1u);
    goto LABEL_8;
  }
  uint64_t v6 = OBJC_IVAR____TtC13WeatherWidget21WidgetLocationManager_locationManager;
  uint64_t v7 = *(void **)&v4[OBJC_IVAR____TtC13WeatherWidget21WidgetLocationManager_locationManager];
  *(void *)&v4[OBJC_IVAR____TtC13WeatherWidget21WidgetLocationManager_locationManager] = result;

  id result = *(id *)&v4[v6];
  if (!result)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  [result setDistanceFilter:500.0];
  id result = *(id *)&v4[v6];
  if (!result)
  {
LABEL_9:
    __break(1u);
    return result;
  }

  return [result setDesiredAccuracy:kCLLocationAccuracyKilometer];
}

void sub_10003C864(void *a1, void (*a2)(uint64_t, uint64_t), uint64_t a3)
{
  uint64_t v7 = sub_1000053D8(&qword_10016C738);
  uint64_t v8 = sub_10000DC9C(v7);
  __chkstk_darwin(v8);
  sub_1000212E4();
  if (sub_10003CBCC(a1))
  {
    if (sub_10003D358())
    {
      sub_10003D624(1, (uint64_t)a2, a3);
    }
    else
    {
      sub_100046928(0, (unint64_t *)&qword_10016C740);
      uint64_t v11 = (void *)sub_10012CD70();
      NSString v12 = sub_10012CA20();
      unsigned __int8 v13 = [v11 BOOLForKey:v12];

      if (v13)
      {
        if (qword_10016AE10 != -1) {
          swift_once();
        }
        uint64_t v14 = sub_10012AB60();
        uint64_t v15 = sub_100047448(v14, (uint64_t)qword_100181BF8);
        os_log_type_t v16 = sub_10012CD60();
        if (os_log_type_enabled(v15, v16))
        {
          *(_WORD *)sub_10000DC1C() = 0;
          sub_10004741C((void *)&_mh_execute_header, v17, v18, "No authorization - returning permission denied");
          sub_10000DBB4();
        }

        uint64_t v19 = sub_10012A6B0();
        uint64_t v20 = sub_1000473D0(v19);
      }
      else
      {
        if (qword_10016AE10 != -1) {
          swift_once();
        }
        uint64_t v22 = sub_10012AB60();
        uint64_t v23 = sub_100047448(v22, (uint64_t)qword_100181BF8);
        os_log_type_t v24 = sub_10012CD60();
        if (os_log_type_enabled(v23, v24))
        {
          uint64_t v25 = (uint8_t *)sub_10000DC1C();
          *(_WORD *)uint64_t v25 = 0;
          _os_log_impl((void *)&_mh_execute_header, v23, v24, "No authorization - returning default location", v25, 2u);
          sub_10000DBB4();
        }

        sub_10003CECC();
        uint64_t v26 = sub_10012A6B0();
        _s13WeatherWidget20WeatherDataViewModelOwst_0(v3, 0, 1, v26);
        uint64_t v20 = v3;
        uint64_t v21 = 3;
      }
      a2(v20, v21);
      sub_100046DC4(v3, &qword_10016C738);
    }
  }
  else
  {
    id v9 = [a1 location];
    if (v9
      && (uint64_t v10 = v9, v27 = [v9 geolocation], v10, v27))
    {
      sub_10003D9DC(v27, a2, a3);
    }
    else
    {
      sub_10003E0C4(a1, a2, a3);
    }
  }
}

uint64_t sub_10003CBCC(void *a1)
{
  id v2 = [a1 location];
  if (!v2)
  {
    if (qword_10016AE10 != -1) {
      swift_once();
    }
    uint64_t v11 = sub_10012AB60();
    sub_10000D7A4(v11, (uint64_t)qword_100181BF8);
    id v12 = a1;
    uint64_t v3 = sub_10012AB40();
    os_log_type_t v13 = sub_10012CD60();
    if (!os_log_type_enabled(v3, v13))
    {

      goto LABEL_22;
    }
    uint64_t v14 = swift_slowAlloc();
    uint64_t v15 = swift_slowAlloc();
    *(_DWORD *)uint64_t v14 = 141558275;
    uint64_t v27 = v15;
    sub_10012CF70();
    *(_WORD *)(v14 + 12) = 2081;
    type metadata accessor for WeatherIntent();
    id v16 = v12;
    uint64_t v17 = sub_10012CAB0();
    sub_100123564(v17, v18, &v27);
    sub_10012CF70();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v13, "Treating nil location as current location on intent: %{private,mask.hash}s", (uint8_t *)v14, 0x16u);
    char v19 = 1;
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
LABEL_26:

    return v19 & 1;
  }
  uint64_t v3 = v2;
  uint64_t v4 = sub_100124634(v3);
  uint64_t v6 = v5;
  uint64_t v7 = sub_10012A5B0();
  if (!v6)
  {
    swift_bridgeObjectRelease();
LABEL_14:
    uint64_t v20 = sub_100046A24(v3, (SEL *)&selRef_identifier);
    uint64_t v22 = v21;
    uint64_t v23 = sub_10012A5A0();
    if (!v22)
    {
      swift_bridgeObjectRelease();

      char v19 = 0;
      return v19 & 1;
    }
    if (v20 == v23 && v22 == v24) {
      char v19 = 1;
    }
    else {
      char v19 = sub_10012D1F0();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_26;
  }
  if (v4 == v7 && v6 == v8)
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_22;
  }
  char v10 = sub_10012D1F0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v10 & 1) == 0) {
    goto LABEL_14;
  }

LABEL_22:
  char v19 = 1;
  return v19 & 1;
}

void sub_10003CECC()
{
  sub_100047278();
  Swift::String v45 = v1;
  Swift::String_optional v46 = v0;
  uint64_t v2 = sub_1000053D8(&qword_10016C738);
  uint64_t v3 = sub_10000DC9C(v2);
  __chkstk_darwin(v3);
  sub_10000DC50();
  uint64_t v6 = v5 - v4;
  uint64_t v7 = sub_10012A6B0();
  sub_10000DB98();
  uint64_t v9 = v8;
  uint64_t v11 = __chkstk_darwin(v10);
  uint64_t v12 = __chkstk_darwin(v11);
  uint64_t v14 = (char *)v41 - v13;
  __chkstk_darwin(v12);
  id v16 = (char *)v41 - v15;
  if (qword_10016AE10 != -1) {
    swift_once();
  }
  uint64_t v17 = sub_10012AB60();
  sub_10000D7A4(v17, (uint64_t)qword_100181BF8);
  unint64_t v18 = (void *)sub_10012AB40();
  os_log_type_t v19 = sub_10012CD60();
  if (sub_100047244(v19))
  {
    uint64_t v20 = (_WORD *)sub_10000DC1C();
    sub_10000DC90(v20);
    sub_1000473FC((void *)&_mh_execute_header, v21, v22, "About to determine the default location");
    sub_10000DBB4();
  }

  sub_10000D890((Class *)((char *)&v46->isa + OBJC_IVAR____TtC13WeatherWidget21WidgetLocationManager_savedLocationsReader), *(uint64_t *)((char *)&v46[3].isa + OBJC_IVAR____TtC13WeatherWidget21WidgetLocationManager_savedLocationsReader));
  uint64_t v23 = sub_10012A3F0();
  if (!v23)
  {
    uint64_t v24 = (void *)sub_10012AB40();
    os_log_type_t v30 = sub_10012CD60();
    if (sub_100047244(v30))
    {
      uint64_t v31 = (_WORD *)sub_10000DC1C();
      sub_10000DC90(v31);
      uint64_t v29 = "We never saved any locations (key is empty).  Returning ALCityManager's default location";
      goto LABEL_11;
    }
LABEL_12:

    sub_10012CE80();
    goto LABEL_17;
  }
  uint64_t v48 = v23;
  sub_1000053D8(&qword_10016C800);
  sub_1000468D8(&qword_10016C808, &qword_10016C800);
  sub_10012CB40();
  swift_bridgeObjectRelease();
  if (_s13WeatherWidget20WeatherDataViewModelOwet_0(v6, 1, v7) == 1)
  {
    sub_100046DC4(v6, &qword_10016C738);
    uint64_t v24 = (void *)sub_10012AB40();
    os_log_type_t v25 = sub_10012CD60();
    if (sub_100047244(v25))
    {
      uint64_t v26 = (_WORD *)sub_10000DC1C();
      sub_10000DC90(v26);
      uint64_t v29 = "We deleted all the saved locations (list is empty).  Returning ALCityManager's default location";
LABEL_11:
      sub_1000473FC((void *)&_mh_execute_header, v27, v28, v29);
      sub_10000DBB4();
      goto LABEL_12;
    }
    goto LABEL_12;
  }
  unint64_t v44 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 32);
  v44(v16, v6, v7);
  unint64_t v32 = *(void (**)(void))(v9 + 16);
  sub_1000472A4();
  v32();
  uint64_t v33 = sub_10012AB40();
  os_log_type_t v34 = sub_10012CD60();
  int v35 = v34;
  Swift::String_optional v46 = v33;
  if (os_log_type_enabled(v33, v34))
  {
    uint64_t v36 = sub_100047470();
    uint64_t v43 = sub_10000DCC8();
    uint64_t v48 = v43;
    sub_100047378(7.2225e-34);
    uint64_t v47 = v37;
    int v42 = v35;
    sub_10012CF70();
    *(_WORD *)(v36 + 12) = 2081;
    v41[1] = v36 + 14;
    sub_1000472A4();
    v32();
    uint64_t v38 = sub_10012CAB0();
    uint64_t v47 = sub_100123564(v38, v39, &v48);
    sub_10012CF70();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v7);
    uint64_t v40 = v46;
    _os_log_impl((void *)&_mh_execute_header, v46, (os_log_type_t)v42, "Computed a default location. Locations=%{private,mask.hash}s", (uint8_t *)v36, 0x16u);
    swift_arrayDestroy();
    sub_10000DBB4();
    sub_10000DBB4();
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v7);
  }
  v44(v45, (uint64_t)v16, v7);
LABEL_17:
  sub_100047260();
}

uint64_t sub_10003D358()
{
  if (qword_10016AE10 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_10012AB60();
  uint64_t v2 = sub_100047448(v1, (uint64_t)qword_100181BF8);
  os_log_type_t v3 = sub_10012CD60();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)sub_10000DC1C();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "About to retrieve our location permissions from CoreLocation", v4, 2u);
    sub_10000DBB4();
  }

  uint64_t v5 = OBJC_IVAR____TtC13WeatherWidget21WidgetLocationManager_locationManager;
  uint64_t v6 = *(void **)&v0[OBJC_IVAR____TtC13WeatherWidget21WidgetLocationManager_locationManager];
  if (!v6)
  {
    __break(1u);
LABEL_31:
    __break(1u);
    JUMPOUT(0x10003D610);
  }
  switch([v6 _authorizationStatus])
  {
    case 0u:
      uint64_t v7 = sub_10012AB40();
      os_log_type_t v8 = sub_10012CD60();
      if (!sub_100047228(v8)) {
        goto LABEL_27;
      }
      uint64_t v9 = (_WORD *)sub_10000DC1C();
      sub_10004731C(v9);
      uint64_t v10 = "Location Permissions - notDetermined";
      goto LABEL_14;
    case 1u:
      uint64_t v7 = sub_10012AB40();
      os_log_type_t v12 = sub_10012CD60();
      if (!sub_100047228(v12)) {
        goto LABEL_27;
      }
      uint64_t v13 = (_WORD *)sub_10000DC1C();
      sub_10004731C(v13);
      uint64_t v10 = "Location Permissions - restricted";
      goto LABEL_14;
    case 2u:
      uint64_t v7 = sub_10012AB40();
      os_log_type_t v14 = sub_10012CD60();
      if (!sub_100047228(v14)) {
        goto LABEL_27;
      }
      uint64_t v15 = (_WORD *)sub_10000DC1C();
      sub_10004731C(v15);
      uint64_t v10 = "Location Permissions - denied";
LABEL_14:
      id v16 = v7;
      os_log_type_t v17 = v5;
      goto LABEL_15;
    case 3u:
      uint64_t v7 = sub_10012AB40();
      os_log_type_t v18 = sub_10012CD60();
      if (!sub_100047228(v18)) {
        goto LABEL_24;
      }
      os_log_type_t v19 = (_WORD *)sub_10000DC1C();
      sub_10004731C(v19);
      uint64_t v20 = "Location Permissions - always";
      uint64_t v21 = v7;
      os_log_type_t v22 = v5;
      goto LABEL_22;
    case 4u:
      uint64_t v23 = *(void **)&v0[v5];
      if (!v23) {
        goto LABEL_31;
      }
      unsigned int v24 = [v23 isAuthorizedForWidgetUpdates];
      uint64_t v7 = sub_10012AB40();
      os_log_type_t v25 = sub_10012CD60();
      BOOL v26 = os_log_type_enabled(v7, v25);
      if (v24)
      {
        if (v26)
        {
          uint64_t v0 = (uint8_t *)sub_10000DC1C();
          sub_10004743C(v0);
          uint64_t v20 = "Location Permissions - whenInUse";
          uint64_t v21 = v7;
LABEL_22:
          _os_log_impl((void *)&_mh_execute_header, v21, v22, v20, v0, 2u);
          uint64_t v11 = 1;
LABEL_23:
          sub_10000DBB4();
          goto LABEL_28;
        }
LABEL_24:
        uint64_t v11 = 1;
      }
      else
      {
        if (v26)
        {
          uint64_t v0 = (uint8_t *)sub_10000DC1C();
          sub_10004743C(v0);
          uint64_t v10 = "Location Permissions - whenInUse for app only";
          id v16 = v7;
LABEL_15:
          _os_log_impl((void *)&_mh_execute_header, v16, v17, v10, v0, 2u);
          uint64_t v11 = 0;
          goto LABEL_23;
        }
LABEL_27:
        uint64_t v11 = 0;
      }
LABEL_28:

      return v11;
    default:
      return 0;
  }
}

uint64_t sub_10003D624(int a1, uint64_t a2, uint64_t a3)
{
  uint64_t v27 = a3;
  uint64_t v25 = a2;
  int v26 = a1;
  uint64_t v28 = sub_100129300();
  uint64_t v3 = *(void *)(v28 - 8);
  __chkstk_darwin(v28);
  uint64_t v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10016AE10 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_10012AB60();
  sub_10000D7A4(v6, (uint64_t)qword_100181BF8);
  uint64_t v7 = sub_10012AB40();
  os_log_type_t v8 = sub_10012CD60();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v9 = 0;
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "About to handle current location update request", v9, 2u);
    swift_slowDealloc();
  }

  sub_100046928(0, (unint64_t *)&qword_10016C740);
  uint64_t v10 = (void *)sub_10012CD70();
  NSString v11 = sub_10012CA20();
  unsigned __int8 v12 = [v10 BOOLForKey:v11];

  if ((v12 & 1) == 0)
  {
    uint64_t v13 = sub_10012AB40();
    os_log_type_t v14 = sub_10012CD60();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v15 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v15 = 0;
      _os_log_impl((void *)&_mh_execute_header, v13, v14, "First time being location authorized - setting key", v15, 2u);
      swift_slowDealloc();
    }

    id v16 = (void *)sub_10012CD70();
    char v29 = 1;
    sub_10012CD90();
  }
  os_log_type_t v17 = sub_10012AB40();
  os_log_type_t v18 = sub_10012CD60();
  if (os_log_type_enabled(v17, v18))
  {
    os_log_type_t v19 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)os_log_type_t v19 = 0;
    _os_log_impl((void *)&_mh_execute_header, v17, v18, "Starting request to fetch location from CoreLocation", v19, 2u);
    swift_slowDealloc();
  }

  sub_1001292B0();
  uint64_t v20 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v21 = swift_allocObject();
  uint64_t v22 = v25;
  *(void *)(v21 + 16) = v20;
  *(void *)(v21 + 24) = v22;
  *(void *)(v21 + 32) = v27;
  *(unsigned char *)(v21 + 40) = v26 & 1;
  swift_retain();
  swift_retain();
  sub_10003FC20((uint64_t)sub_100045404, v21);
  swift_release();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v28);
  return swift_release();
}

void sub_10003D9DC(void *a1, void (*a2)(void, void), uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = sub_1000053D8(&qword_10016C738);
  __chkstk_darwin(v8 - 8);
  uint64_t v56 = (uint64_t)&v54 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10016AE10 != -1) {
    swift_once();
  }
  uint64_t v10 = sub_10012AB60();
  uint64_t v11 = sub_10000D7A4(v10, (uint64_t)qword_100181BF8);
  id v12 = a1;
  uint64_t v58 = v11;
  uint64_t v13 = sub_10012AB40();
  os_log_type_t v14 = sub_10012CD60();
  BOOL v15 = os_log_type_enabled(v13, v14);
  uint64_t v57 = a2;
  uint64_t v54 = v4;
  if (v15)
  {
    uint64_t v16 = swift_slowAlloc();
    uint64_t v17 = swift_slowAlloc();
    uint64_t v55 = a3;
    v59[0] = v17;
    *(_DWORD *)uint64_t v16 = 141558275;
    uint64_t v60 = 1752392040;
    sub_10012CF70();
    *(_WORD *)(v16 + 12) = 2081;
    uint64_t v60 = (uint64_t)v12;
    sub_100046928(0, &qword_10016C810);
    id v18 = v12;
    uint64_t v19 = sub_10012CAB0();
    uint64_t v60 = sub_100123564(v19, v20, v59);
    sub_10012CF70();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "About to handle old intent. placeMark=%{private,mask.hash}s", (uint8_t *)v16, 0x16u);
    swift_arrayDestroy();
    a3 = v55;
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  id v21 = [v12 location:v54];
  if (v21
    && (uint64_t v22 = v21,
        [v21 coordinate],
        uint64_t v24 = v23,
        uint64_t v26 = v25,
        v22,
        uint64_t v27 = sub_100046A24(v12, (SEL *)&selRef_name),
        v28))
  {
    uint64_t v29 = v27;
    uint64_t v30 = v28;
    uint64_t v31 = sub_10012AB40();
    os_log_type_t v32 = sub_10012CD60();
    if (os_log_type_enabled(v31, v32))
    {
      uint64_t v33 = swift_slowAlloc();
      uint64_t v34 = swift_slowAlloc();
      uint64_t v55 = a3;
      uint64_t v60 = v34;
      *(_DWORD *)uint64_t v33 = 141558275;
      v59[0] = 1752392040;
      sub_10012CF70();
      *(_WORD *)(v33 + 12) = 2081;
      v59[0] = v24;
      v59[1] = v26;
      type metadata accessor for CLLocationCoordinate2D(0);
      uint64_t v35 = sub_10012CAB0();
      v59[0] = sub_100123564(v35, v36, &v60);
      sub_10012CF70();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v31, v32, "Got a coordinate. Now performing a reverse geocode. coordinate=%{private,mask.hash}s", (uint8_t *)v33, 0x16u);
      swift_arrayDestroy();
      a3 = v55;
      swift_slowDealloc();
      swift_slowDealloc();
    }

    uint64_t v37 = v57;
    sub_10000D890((void *)(v54 + OBJC_IVAR____TtC13WeatherWidget21WidgetLocationManager_geocodeManager), *(void *)(v54 + OBJC_IVAR____TtC13WeatherWidget21WidgetLocationManager_geocodeManager + 24));
    sub_10012A2A0();
    uint64_t v38 = swift_allocObject();
    swift_unknownObjectWeakInit();
    unint64_t v39 = (void *)swift_allocObject();
    v39[2] = v12;
    v39[3] = v38;
    v39[4] = v37;
    v39[5] = a3;
    id v40 = v12;
    swift_retain();
    Swift::String v41 = (void *)sub_10012A870();
    sub_10012A890();
    swift_release();
    swift_release();

    int v42 = (void *)swift_allocObject();
    v42[2] = v29;
    v42[3] = v30;
    v42[4] = v37;
    v42[5] = a3;
    swift_retain();
    uint64_t v43 = (void *)sub_10012A870();
    sub_10012A8B0();
    swift_release();
    swift_release();
    swift_release();
  }
  else
  {
    id v44 = v12;
    Swift::String v45 = sub_10012AB40();
    os_log_type_t v46 = sub_10012CD40();
    if (os_log_type_enabled(v45, v46))
    {
      uint64_t v47 = swift_slowAlloc();
      v59[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v47 = 141558275;
      uint64_t v60 = 1752392040;
      sub_10012CF70();
      *(_WORD *)(v47 + 12) = 2081;
      uint64_t v60 = (uint64_t)v44;
      sub_100046928(0, &qword_10016C810);
      id v48 = v44;
      uint64_t v49 = sub_10012CAB0();
      uint64_t v60 = sub_100123564(v49, v50, v59);
      sub_10012CF70();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v45, v46, "Can't parse placemark from intent: %{private,mask.hash}s", (uint8_t *)v47, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    uint64_t v51 = v57;
    uint64_t v52 = sub_10012A6B0();
    uint64_t v53 = v56;
    _s13WeatherWidget20WeatherDataViewModelOwst_0(v56, 1, 1, v52);
    v51(v53, 0);
    sub_100046DC4(v53, &qword_10016C738);
  }
}

void sub_10003E0C4(void *a1, void (*a2)(void, void), uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = sub_1000053D8(&qword_10016C738);
  __chkstk_darwin(v8 - 8);
  uint64_t v51 = (char *)&v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10016AE10 != -1) {
    swift_once();
  }
  uint64_t v10 = sub_10012AB60();
  uint64_t v11 = sub_10000D7A4(v10, (uint64_t)qword_100181BF8);
  id v12 = a1;
  uint64_t v13 = sub_10012AB40();
  os_log_type_t v14 = sub_10012CD60();
  BOOL v15 = os_log_type_enabled(v13, v14);
  uint64_t v52 = v4;
  uint64_t v53 = a2;
  if (v15)
  {
    uint64_t v16 = swift_slowAlloc();
    uint64_t v49 = v11;
    uint64_t v17 = v16;
    uint64_t v18 = swift_slowAlloc();
    uint64_t v50 = a3;
    uint64_t v54 = v18;
    *(_DWORD *)uint64_t v17 = 141558275;
    uint64_t v56 = 1752392040;
    sub_10012CF70();
    *(_WORD *)(v17 + 12) = 2081;
    uint64_t v56 = (uint64_t)v12;
    type metadata accessor for WeatherIntent();
    id v19 = v12;
    uint64_t v20 = sub_10012CAB0();
    uint64_t v56 = sub_100123564(v20, v21, &v54);
    sub_10012CF70();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "About to handle new intent: %{private,mask.hash}s", (uint8_t *)v17, 0x16u);
    swift_arrayDestroy();
    a3 = v50;
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  id v22 = [v12 location];
  if (v22)
  {
    uint64_t v23 = v22;
    id v24 = [v22 displayString];

    uint64_t v25 = sub_10012CA40();
    uint64_t v27 = v26;

    swift_bridgeObjectRetain_n();
    uint64_t v28 = sub_10012AB40();
    os_log_type_t v29 = sub_10012CD60();
    if (os_log_type_enabled(v28, v29))
    {
      uint64_t v30 = swift_slowAlloc();
      uint64_t v56 = swift_slowAlloc();
      *(_DWORD *)uint64_t v30 = 141558275;
      uint64_t v54 = 1752392040;
      sub_10012CF70();
      *(_WORD *)(v30 + 12) = 2081;
      uint64_t v54 = v25;
      uint64_t v55 = v27;
      swift_bridgeObjectRetain();
      uint64_t v31 = sub_10012CAB0();
      uint64_t v54 = sub_100123564(v31, v32, &v56);
      sub_10012CF70();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v28, v29, "Got a name from the intent. Now performing a local search. name=%{private,mask.hash}s", (uint8_t *)v30, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    sub_10000D890((void *)(v52 + OBJC_IVAR____TtC13WeatherWidget21WidgetLocationManager_localSearchManager), *(void *)(v52 + OBJC_IVAR____TtC13WeatherWidget21WidgetLocationManager_localSearchManager + 24));
    LocalSearchRequestManager.performLocalSearch(with:)(v25, v27);
    uint64_t v40 = swift_allocObject();
    swift_unknownObjectWeakInit();
    Swift::String v41 = (void *)swift_allocObject();
    int v42 = v53;
    void v41[2] = v40;
    v41[3] = v42;
    v41[4] = a3;
    swift_retain();
    uint64_t v43 = (void *)sub_10012A870();
    sub_10012A890();
    swift_release();
    swift_release();

    id v44 = (void *)swift_allocObject();
    v44[2] = v25;
    v44[3] = v27;
    v44[4] = v42;
    v44[5] = a3;
    swift_retain();
    Swift::String v45 = (void *)sub_10012A870();
    sub_10012A8B0();
    swift_release();
    swift_release();
    swift_release();
  }
  else
  {
    id v33 = v12;
    uint64_t v34 = sub_10012AB40();
    os_log_type_t v35 = sub_10012CD40();
    if (os_log_type_enabled(v34, v35))
    {
      uint64_t v36 = swift_slowAlloc();
      uint64_t v56 = swift_slowAlloc();
      *(_DWORD *)uint64_t v36 = 141558275;
      uint64_t v54 = 1752392040;
      sub_10012CF70();
      *(_WORD *)(v36 + 12) = 2081;
      uint64_t v54 = sub_1001246A4(v33);
      uint64_t v55 = v37;
      sub_1000053D8(&qword_10016C858);
      uint64_t v38 = sub_10012CAB0();
      uint64_t v54 = sub_100123564(v38, v39, &v56);
      sub_10012CF70();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v34, v35, "Aborting: no display string on intent. intent.identifier=%{private,mask.hash}s", (uint8_t *)v36, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    os_log_type_t v46 = v53;
    uint64_t v47 = (uint64_t)v51;
    uint64_t v48 = sub_10012A6B0();
    _s13WeatherWidget20WeatherDataViewModelOwst_0(v47, 1, 1, v48);
    v46(v47, 0);
    sub_100046DC4(v47, &qword_10016C738);
  }
}

uint64_t sub_10003E790(char a1, void (*a2)(uint64_t), uint64_t a3)
{
  uint64_t v7 = sub_1000053D8(&qword_10016C738);
  uint64_t v8 = sub_10000DC9C(v7);
  __chkstk_darwin(v8);
  sub_1000212E4();
  if (sub_10003D358())
  {
    return sub_10003D624(a1 & 1, (uint64_t)a2, a3);
  }
  else
  {
    if (qword_10016AE10 != -1) {
      swift_once();
    }
    uint64_t v10 = sub_10012AB60();
    uint64_t v11 = sub_100047448(v10, (uint64_t)qword_100181BF8);
    os_log_type_t v12 = sub_10012CD60();
    if (os_log_type_enabled(v11, v12))
    {
      *(_WORD *)sub_10000DC1C() = 0;
      sub_10004741C((void *)&_mh_execute_header, v13, v14, "No authorization - returning permission denied");
      sub_10000DBB4();
    }

    uint64_t v15 = sub_10012A6B0();
    uint64_t v16 = sub_1000473D0(v15);
    a2(v16);
    return sub_100046DC4(v3, &qword_10016C738);
  }
}

void sub_10003E8F0()
{
}

id sub_10003E930()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return [super dealloc];
}

uint64_t type metadata accessor for WidgetLocationManager()
{
  return self;
}

void sub_10003EAEC(void *a1, uint64_t a2, uint64_t a3, void (*a4)(char *, uint64_t), uint64_t a5, char a6)
{
  uint64_t v11 = sub_1000053D8(&qword_10016C7B0);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_100129480();
  __chkstk_darwin(v14 - 8);
  uint64_t v15 = sub_1000053D8(&qword_10016C738);
  __chkstk_darwin(v15 - 8);
  uint64_t v17 = (char *)&v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    return;
  }
  id v19 = (char *)Strong;
  if ((a2 & 0x100) != 0)
  {
    char v45 = (char)a1;
    sub_100045788();
    swift_willThrowTypedImpl();
    if (qword_10016AE10 != -1) {
      swift_once();
    }
    uint64_t v32 = sub_10012AB60();
    sub_10000D7A4(v32, (uint64_t)qword_100181BF8);
    id v33 = sub_10012AB40();
    os_log_type_t v34 = sub_10012CD40();
    if (os_log_type_enabled(v33, v34))
    {
      os_log_type_t v35 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)os_log_type_t v35 = 0;
      _os_log_impl((void *)&_mh_execute_header, v33, v34, "Error fetching the current location from CoreLocation. Returning location=nil", v35, 2u);
      swift_slowDealloc();
    }

    uint64_t v36 = sub_10012A6B0();
    _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v17, 1, 1, v36);
    a4(v17, 0);

    goto LABEL_19;
  }
  if ((a6 & 1) == 0)
  {
    id v44 = a4;
    [a1 coordinate];
    if (qword_10016AE10 != -1) {
      swift_once();
    }
    uint64_t v37 = sub_10012AB60();
    sub_10000D7A4(v37, (uint64_t)qword_100181BF8);
    uint64_t v38 = sub_10012AB40();
    os_log_type_t v39 = sub_10012CD60();
    if (os_log_type_enabled(v38, v39))
    {
      uint64_t v40 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v40 = 0;
      _os_log_impl((void *)&_mh_execute_header, v38, v39, "Got a location from CoreLocation. shouldReverseGeocode=false. Returning a nameless location with current timezone.", v40, 2u);
      swift_slowDealloc();
    }

    sub_10012A5A0();
    sub_100129470();
    uint64_t v41 = sub_100129300();
    _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v13, 1, 1, v41);
    sub_10012A650();
    uint64_t v42 = sub_10012A6B0();
    _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v17, 0, 1, v42);
    v44(v17, a2);
    sub_100045484(a1, a2, 0);

    sub_100045484(a1, a2, 0);
LABEL_19:
    sub_100046DC4((uint64_t)v17, &qword_10016C738);
    return;
  }
  uint64_t v20 = qword_10016AE10;
  id v21 = a1;
  if (v20 != -1) {
    swift_once();
  }
  uint64_t v22 = sub_10012AB60();
  sub_10000D7A4(v22, (uint64_t)qword_100181BF8);
  uint64_t v23 = sub_10012AB40();
  os_log_type_t v24 = sub_10012CD60();
  if (os_log_type_enabled(v23, v24))
  {
    uint64_t v25 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v25 = 0;
    _os_log_impl((void *)&_mh_execute_header, v23, v24, "Got a location from CoreLocation. shouldReverseGeocode=true, so about to reverse geocode", v25, 2u);
    swift_slowDealloc();
  }

  sub_10000D890(&v19[OBJC_IVAR____TtC13WeatherWidget21WidgetLocationManager_geocodeManager], *(void *)&v19[OBJC_IVAR____TtC13WeatherWidget21WidgetLocationManager_geocodeManager + 24]);
  [v21 coordinate];
  sub_10012A2A0();
  uint64_t v26 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v27 = swift_allocObject();
  *(void *)(v27 + 16) = v26;
  *(void *)(v27 + 24) = a4;
  *(void *)(v27 + 32) = a5;
  *(unsigned char *)(v27 + 40) = a2;
  swift_retain();
  uint64_t v28 = a4;
  os_log_type_t v29 = (void *)sub_10012A870();
  sub_10012A890();
  swift_release();
  swift_release();

  uint64_t v30 = swift_allocObject();
  *(void *)(v30 + 16) = a1;
  *(unsigned char *)(v30 + 24) = a2;
  *(unsigned char *)(v30 + 25) = 0;
  *(void *)(v30 + 32) = v21;
  *(void *)(v30 + 40) = v28;
  *(void *)(v30 + 48) = a5;
  *(unsigned char *)(v30 + 56) = a2;
  sub_1000468CC(a1, a2, 0);
  sub_1000468CC(a1, a2, 0);
  swift_retain();
  uint64_t v31 = (void *)sub_10012A870();
  sub_10012A8B0();
  swift_release();
  swift_release();
  swift_release();

  sub_100045484(a1, a2, 0);
  sub_100045484(a1, a2, 0);
}

uint64_t sub_10003F164(void (*a1)(char *, char *, uint64_t), uint64_t a2, void (*a3)(uint64_t, void), uint64_t a4, unsigned int a5)
{
  unsigned int v55 = a5;
  uint64_t v56 = a4;
  uint64_t v57 = a3;
  uint64_t v59 = a1;
  uint64_t v6 = sub_1000053D8(&qword_10016C738);
  __chkstk_darwin(v6 - 8);
  uint64_t v54 = (char *)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000053D8(&qword_10016C7B0);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1000053D8(&qword_10016C7C0);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_10012A5E0();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v46 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1000053D8(&qword_10016C7C8);
  __chkstk_darwin(v18 - 8);
  uint64_t v20 = (char *)&v46 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_10012A6B0();
  uint64_t v52 = *(void *)(v21 - 8);
  uint64_t v53 = v21;
  uint64_t v22 = __chkstk_darwin(v21);
  uint64_t v51 = (char *)&v46 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v58 = (char *)&v46 - v25;
  __chkstk_darwin(v24);
  uint64_t v27 = (char *)&v46 - v26;
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v48 = (char *)result;
    uint64_t v50 = v5;
    sub_10012A600();
    sub_10012A5A0();
    sub_10012A5D0();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v20, 0, 1, v14);
    uint64_t v29 = sub_100129480();
    _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v13, 1, 1, v29);
    uint64_t v30 = sub_100129300();
    _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v10, 1, 1, v30);
    sub_10012A690();
    sub_100046DC4((uint64_t)v10, &qword_10016C7B0);
    sub_100046DC4((uint64_t)v13, &qword_10016C7C0);
    sub_100046DC4((uint64_t)v20, &qword_10016C7C8);
    if (qword_10016AE10 != -1) {
      swift_once();
    }
    uint64_t v31 = sub_10012AB60();
    sub_10000D7A4(v31, (uint64_t)qword_100181BF8);
    uint64_t v32 = v52;
    id v33 = *(void (**)(char *, char *, uint64_t))(v52 + 16);
    os_log_type_t v34 = v58;
    uint64_t v49 = v27;
    os_log_type_t v35 = v27;
    uint64_t v36 = v53;
    uint64_t v59 = v33;
    v33(v58, v35, v53);
    uint64_t v37 = sub_10012AB40();
    os_log_type_t v38 = sub_10012CD60();
    if (os_log_type_enabled(v37, v38))
    {
      uint64_t v39 = swift_slowAlloc();
      uint64_t v47 = swift_slowAlloc();
      uint64_t v61 = v47;
      *(_DWORD *)uint64_t v39 = 141558275;
      uint64_t v60 = 1752392040;
      sub_10012CF70();
      *(_WORD *)(v39 + 12) = 2081;
      uint64_t v46 = v39 + 14;
      v59(v51, v34, v36);
      uint64_t v40 = sub_10012CAB0();
      uint64_t v60 = sub_100123564(v40, v41, &v61);
      sub_10012CF70();
      swift_bridgeObjectRelease();
      uint64_t v42 = *(void (**)(char *, uint64_t))(v32 + 8);
      v42(v58, v36);
      _os_log_impl((void *)&_mh_execute_header, v37, v38, "Successfully performed a reverse geocode. location=%{private,mask.hash}s. Overriding location.identifier to current", (uint8_t *)v39, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      uint64_t v42 = *(void (**)(char *, uint64_t))(v32 + 8);
      v42(v34, v36);
    }

    uint64_t v43 = v48;
    sub_10000D890(&v48[OBJC_IVAR____TtC13WeatherWidget21WidgetLocationManager_locationCacheManager], *(void *)&v48[OBJC_IVAR____TtC13WeatherWidget21WidgetLocationManager_locationCacheManager + 24]);
    id v44 = v49;
    sub_10012A550();
    uint64_t v45 = (uint64_t)v54;
    v59(v54, v44, v36);
    _s13WeatherWidget20WeatherDataViewModelOwst_0(v45, 0, 1, v36);
    v57(v45, v55);

    sub_100046DC4(v45, &qword_10016C738);
    return ((uint64_t (*)(char *, uint64_t))v42)(v44, v36);
  }
  return result;
}

uint64_t sub_10003F7F0(uint64_t a1, void *a2, uint64_t a3, void *a4, void (*a5)(void, void), uint64_t a6, uint64_t a7)
{
  uint64_t v34 = a6;
  uint64_t v12 = sub_1000053D8(&qword_10016C7B0);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_100129480();
  __chkstk_darwin(v15 - 8);
  uint64_t v16 = sub_1000053D8(&qword_10016C738);
  __chkstk_darwin(v16 - 8);
  uint64_t v18 = (char *)v29 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10016AE10 != -1) {
    swift_once();
  }
  uint64_t v19 = sub_10012AB60();
  sub_10000D7A4(v19, (uint64_t)qword_100181BF8);
  sub_1000468CC(a2, a3, BYTE1(a3) & 1);
  sub_1000468CC(a2, a3, BYTE1(a3) & 1);
  uint64_t v20 = sub_10012AB40();
  os_log_type_t v21 = sub_10012CD40();
  int v33 = v21;
  if (os_log_type_enabled(v20, v21))
  {
    uint64_t v22 = swift_slowAlloc();
    uint64_t v32 = a5;
    uint64_t v23 = v22;
    uint64_t v31 = swift_slowAlloc();
    uint64_t v37 = v31;
    *(_DWORD *)uint64_t v23 = 141558275;
    uint64_t v35 = 1752392040;
    sub_10012CF70();
    *(_WORD *)(v23 + 12) = 2081;
    v29[1] = v23 + 14;
    uint64_t v35 = (uint64_t)a2;
    __int16 v36 = a3 & 0x1FF;
    sub_1000468CC(a2, a3, BYTE1(a3) & 1);
    sub_1000053D8(&qword_10016C7B8);
    uint64_t v24 = sub_10012CAB0();
    os_log_t v30 = v20;
    uint64_t v35 = sub_100123564(v24, v25, &v37);
    sub_10012CF70();
    swift_bridgeObjectRelease();
    sub_100045484(a2, a3, BYTE1(a3) & 1);
    sub_100045484(a2, a3, BYTE1(a3) & 1);
    uint64_t v20 = v30;
    _os_log_impl((void *)&_mh_execute_header, v30, (os_log_type_t)v33, "Error performing a reverse geocode. location=%{private,mask.hash}s. Returning a nameless location with current timezone.", (uint8_t *)v23, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    a5 = v32;
    swift_slowDealloc();
  }
  else
  {
    sub_100045484(a2, a3, BYTE1(a3) & 1);
    sub_100045484(a2, a3, BYTE1(a3) & 1);
  }

  [a4 coordinate];
  sub_10012A5A0();
  sub_100129470();
  uint64_t v26 = sub_100129300();
  _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v14, 1, 1, v26);
  sub_10012A650();
  uint64_t v27 = sub_10012A6B0();
  _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v18, 0, 1, v27);
  a5(v18, a7);
  return sub_100046DC4((uint64_t)v18, &qword_10016C738);
}

void sub_10003FC20(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_10012B830();
  uint64_t v23 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_10012B860();
  uint64_t v9 = *(void *)(v22 - 8);
  __chkstk_darwin(v22);
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10016AE10 != -1) {
    swift_once();
  }
  uint64_t v12 = sub_10012AB60();
  sub_10000D7A4(v12, (uint64_t)qword_100181BF8);
  uint64_t v13 = sub_10012AB40();
  os_log_type_t v14 = sub_10012CD60();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v15 = 0;
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "About to request location updates from CoreLocation", v15, 2u);
    swift_slowDealloc();
  }

  uint64_t v16 = *(void **)&v3[OBJC_IVAR____TtC13WeatherWidget21WidgetLocationManager_locationManager];
  if (v16)
  {
    uint64_t v17 = (void *)swift_allocObject();
    v17[2] = v3;
    v17[3] = v16;
    v17[4] = a1;
    v17[5] = a2;
    aBlock[4] = sub_100045460;
    aBlock[5] = v17;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1000434FC;
    aBlock[3] = &unk_100161EB0;
    uint64_t v18 = _Block_copy(aBlock);
    id v19 = v16;
    uint64_t v20 = v3;
    swift_retain();
    sub_10012B840();
    uint64_t v24 = &_swiftEmptyArrayStorage;
    sub_100045738(&qword_10016C748, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_1000053D8(&qword_10016C750);
    sub_1000468D8(&qword_10016C758, &qword_10016C750);
    sub_10012CFC0();
    sub_10012CE10();
    _Block_release(v18);

    (*(void (**)(char *, uint64_t))(v23 + 8))(v8, v6);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v22);
    swift_release();
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_10003FFBC(void (*a1)(unsigned char *, unsigned char *, uint64_t), NSObject *a2, uint64_t a3, void (*a4)(unsigned char *, void), uint64_t a5)
{
  uint64_t v90 = a5;
  uint64_t v89 = a4;
  uint64_t v86 = a2;
  double v84 = a1;
  uint64_t v6 = sub_1000053D8(&qword_10016C738);
  __chkstk_darwin(v6 - 8);
  unint64_t v81 = &v76[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = sub_1000053D8(&qword_10016C818);
  __chkstk_darwin(v8 - 8);
  uint64_t v83 = &v76[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = sub_1000053D8(&qword_10016C7B0);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = &v76[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v13 = sub_1000053D8(&qword_10016C7C0);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = &v76[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v16 = sub_10012A5E0();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  id v19 = &v76[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v20 = sub_1000053D8(&qword_10016C7C8);
  __chkstk_darwin(v20 - 8);
  uint64_t v22 = &v76[-((v21 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v87 = sub_10012A6B0();
  uint64_t v85 = *(void *)(v87 - 8);
  uint64_t v23 = __chkstk_darwin(v87);
  uint64_t v91 = &v76[-((v24 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v25 = __chkstk_darwin(v23);
  uint64_t v92 = &v76[-v26];
  uint64_t v27 = __chkstk_darwin(v25);
  uint64_t v93 = &v76[-v28];
  uint64_t v82 = v29;
  __chkstk_darwin(v27);
  uint64_t v31 = &v76[-v30];
  uint64_t v88 = a3 + 16;
  sub_10012A600();
  sub_100046A24(v86, (SEL *)&selRef_name);
  sub_10012A5D0();
  uint64_t v32 = v31;
  swift_bridgeObjectRelease();
  (*(void (**)(unsigned char *, uint64_t))(v17 + 8))(v19, v16);
  _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v22, 0, 1, v16);
  uint64_t v33 = sub_100129480();
  _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v15, 1, 1, v33);
  uint64_t v34 = sub_100129300();
  _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v12, 1, 1, v34);
  sub_10012A690();
  sub_100046DC4((uint64_t)v12, &qword_10016C7B0);
  sub_100046DC4((uint64_t)v15, &qword_10016C7C0);
  sub_100046DC4((uint64_t)v22, &qword_10016C7C8);
  if (qword_10016AE10 != -1) {
    swift_once();
  }
  uint64_t v35 = sub_10012AB60();
  uint64_t v36 = sub_10000D7A4(v35, (uint64_t)qword_100181BF8);
  uint64_t v37 = v85;
  os_log_type_t v38 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v85 + 16);
  uint64_t v39 = v31;
  uint64_t v40 = v87;
  v38(v93, v39, v87);
  unint64_t v41 = v92;
  v38(v92, v32, v40);
  uint64_t v80 = v36;
  uint64_t v42 = sub_10012AB40();
  os_log_type_t v43 = sub_10012CD60();
  int v44 = v43;
  uint64_t v86 = v42;
  BOOL v45 = os_log_type_enabled(v42, v43);
  double v84 = v38;
  if (v45)
  {
    uint64_t v46 = swift_slowAlloc();
    uint64_t v78 = swift_slowAlloc();
    uint64_t v96 = v78;
    *(_DWORD *)uint64_t v46 = 141558787;
    uint64_t v94 = 1752392040;
    int v77 = v44;
    sub_10012CF70();
    *(_WORD *)(v46 + 12) = 2081;
    uint64_t v79 = v32;
    uint64_t v47 = v93;
    v38(v91, v93, v40);
    uint64_t v48 = sub_10012CAB0();
    uint64_t v94 = sub_100123564(v48, v49, &v96);
    sub_10012CF70();
    swift_bridgeObjectRelease();
    uint64_t v50 = *(unsigned char **)(v37 + 8);
    ((void (*)(unsigned char *, uint64_t))v50)(v47, v40);
    *(_WORD *)(v46 + 22) = 2160;
    uint64_t v94 = 1752392040;
    sub_10012CF70();
    *(_WORD *)(v46 + 32) = 2081;
    uint64_t v51 = v92;
    uint64_t v94 = sub_10012A680();
    uint64_t v95 = v52;
    uint64_t v53 = sub_10012CAB0();
    uint64_t v94 = sub_100123564(v53, v54, &v96);
    uint64_t v32 = v79;
    sub_10012CF70();
    swift_bridgeObjectRelease();
    uint64_t v93 = v50;
    ((void (*)(unsigned char *, uint64_t))v50)(v51, v40);
    unsigned int v55 = v86;
    _os_log_impl((void *)&_mh_execute_header, v86, (os_log_type_t)v77, "Successfully performed a reverse geocode. location=%{private,mask.hash}s, name=%{private,mask.hash}s", (uint8_t *)v46, 0x2Au);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    uint64_t v56 = *(unsigned char **)(v37 + 8);
    ((void (*)(unsigned char *, uint64_t))v56)(v93, v40);
    uint64_t v93 = v56;
    ((void (*)(unsigned char *, uint64_t))v56)(v41, v40);
  }
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v58 = (void *)Strong;
    uint64_t v59 = sub_10012CC30();
    uint64_t v60 = v83;
    _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v83, 1, 1, v59);
    uint64_t v61 = v40;
    uint64_t v62 = v91;
    v84(v91, v32, v61);
    unint64_t v63 = (*(unsigned __int8 *)(v37 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80);
    uint64_t v64 = v32;
    unint64_t v65 = (v82 + v63 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v66 = (char *)swift_allocObject();
    *((void *)v66 + 2) = 0;
    *((void *)v66 + 3) = 0;
    *((void *)v66 + 4) = v58;
    uint64_t v67 = v62;
    uint64_t v40 = v61;
    (*(void (**)(char *, unsigned char *, uint64_t))(v37 + 32))(&v66[v63], v67, v61);
    uint64_t v68 = &v66[v65];
    uint64_t v32 = v64;
    uint64_t v69 = v90;
    *(void *)uint64_t v68 = v89;
    *((void *)v68 + 1) = v69;
    id v70 = v58;
    swift_retain();
    sub_10004145C((uint64_t)v60, (uint64_t)&unk_10016C828, (uint64_t)v66);

    swift_release();
  }
  else
  {
    uint64_t v71 = sub_10012AB40();
    os_log_type_t v72 = sub_10012CD40();
    if (os_log_type_enabled(v71, v72))
    {
      uint64_t v73 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v73 = 0;
      _os_log_impl((void *)&_mh_execute_header, v71, v72, "WidgetLocationManager.Self deallocated", v73, 2u);
      swift_slowDealloc();
    }

    uint64_t v74 = v81;
    _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v81, 1, 1, v40);
    v89(v74, 0);
    sub_100046DC4((uint64_t)v74, &qword_10016C738);
  }
  return ((uint64_t (*)(unsigned char *, uint64_t))v93)(v32, v40);
}

uint64_t sub_1000408E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[5] = a6;
  v7[6] = a7;
  v7[4] = a5;
  sub_1000053D8(&qword_10016C738);
  v7[7] = swift_task_alloc();
  uint64_t v9 = sub_10012A6B0();
  v7[8] = v9;
  v7[9] = *(void *)(v9 - 8);
  v7[10] = swift_task_alloc();
  v7[11] = swift_task_alloc();
  uint64_t v10 = swift_task_alloc();
  v7[12] = v10;
  uint64_t v11 = (void *)swift_task_alloc();
  v7[13] = v11;
  *uint64_t v11 = v7;
  v11[1] = sub_100040A40;
  return sub_100040B1C(v10, a5);
}

uint64_t sub_100040A40()
{
  sub_100047290();
  sub_10004716C();
  sub_1000473A8();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  sub_1000471B0();
  *uint64_t v5 = v4;
  *(void *)(v6 + 112) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v7 = sub_100047168;
  }
  else {
    uint64_t v7 = sub_100047158;
  }
  return _swift_task_switch(v7, 0, 0);
}

uint64_t sub_100040B1C(uint64_t a1, uint64_t a2)
{
  v3[7] = a2;
  v3[8] = v2;
  v3[6] = a1;
  sub_1000053D8(&qword_10016C848);
  v3[9] = swift_task_alloc();
  sub_1000053D8(&qword_10016C738);
  v3[10] = swift_task_alloc();
  uint64_t v4 = sub_10012A6B0();
  v3[11] = v4;
  v3[12] = *(void *)(v4 - 8);
  v3[13] = swift_task_alloc();
  v3[14] = swift_task_alloc();
  v3[15] = swift_task_alloc();
  v3[16] = sub_1000053D8(&qword_10016C850);
  v3[17] = swift_task_alloc();
  v3[18] = swift_task_alloc();
  v3[19] = swift_task_alloc();
  v3[20] = swift_task_alloc();
  return _swift_task_switch(sub_100040CB8, 0, 0);
}

uint64_t sub_100040CB8()
{
  uint64_t v1 = (void *)(v0[8] + OBJC_IVAR____TtC13WeatherWidget21WidgetLocationManager_savedLocationFinder);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  sub_10000D890(v1, v2);
  uint64_t v4 = (void *)swift_task_alloc();
  v0[21] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_100040D84;
  uint64_t v5 = v0[20];
  uint64_t v6 = v0[7];
  return dispatch thunk of SavedLocationFinderType.find(by:)(v5, v6, v2, v3);
}

uint64_t sub_100040D84()
{
  sub_100047290();
  sub_10004716C();
  sub_1000473A8();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  sub_1000471B0();
  *uint64_t v5 = v4;
  *(void *)(v6 + 176) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v7 = sub_1000413A8;
  }
  else {
    uint64_t v7 = sub_100040E60;
  }
  return _swift_task_switch(v7, 0, 0);
}

uint64_t sub_100040E60()
{
  uint64_t v52 = v0;
  if (qword_10016AE10 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[19];
  uint64_t v2 = v0[20];
  uint64_t v3 = v0[15];
  uint64_t v4 = v0[11];
  uint64_t v5 = v0[12];
  uint64_t v6 = v0[7];
  uint64_t v7 = sub_10012AB60();
  sub_10000D7A4(v7, (uint64_t)qword_100181BF8);
  sub_100046D5C(v2, v1);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
  v8(v3, v6, v4);
  uint64_t v9 = sub_10012AB40();
  os_log_type_t v10 = sub_10012CD60();
  BOOL v11 = sub_100047244(v10);
  uint64_t v12 = v0[19];
  if (v11)
  {
    uint64_t v13 = v0[18];
    uint64_t v49 = v0[15];
    uint64_t v50 = v0[12];
    uint64_t v47 = v0[14];
    uint64_t v48 = v0[11];
    uint64_t v14 = swift_slowAlloc();
    uint64_t v51 = swift_slowAlloc();
    sub_100047378(7.2227e-34);
    v0[2] = v15;
    sub_10012CF70();
    *(_WORD *)(v14 + 12) = 2081;
    sub_100046D5C(v12, v13);
    uint64_t v16 = sub_10012CAB0();
    v0[3] = sub_100123564(v16, v17, &v51);
    sub_10012CF70();
    swift_bridgeObjectRelease();
    sub_100046DC4(v12, &qword_10016C850);
    *(_WORD *)(v14 + 22) = 2160;
    v0[4] = 1752392040;
    sub_10012CF70();
    *(_WORD *)(v14 + 32) = 2081;
    v8(v47, v49, v48);
    uint64_t v18 = sub_10012CAB0();
    v0[5] = sub_100123564(v18, v19, &v51);
    sub_10012CF70();
    swift_bridgeObjectRelease();
    uint64_t v20 = *(void (**)(uint64_t, uint64_t))(v50 + 8);
    v20(v49, v48);
    _os_log_impl((void *)&_mh_execute_header, v9, (os_log_type_t)v1, "WidgetLocationManager found matched location =%{private,mask.hash}s, for input location=%{private,mask.hash}s", (uint8_t *)v14, 0x2Au);
    swift_arrayDestroy();
    sub_10000DBB4();
    sub_10000DBB4();
  }
  else
  {
    uint64_t v21 = v0[15];
    uint64_t v22 = v0[11];
    uint64_t v23 = v0[12];
    sub_100046DC4(v0[19], &qword_10016C850);
    uint64_t v20 = *(void (**)(uint64_t, uint64_t))(v23 + 8);
    v20(v21, v22);
  }

  uint64_t v24 = v0[17];
  sub_100046D5C(v0[20], v24);
  uint64_t v25 = sub_10012A0D0();
  if (_s13WeatherWidget20WeatherDataViewModelOwet_0(v24, 1, v25) == 1)
  {
    uint64_t v26 = v0[17];
    sub_100046DC4(v0[20], &qword_10016C850);
    uint64_t v27 = v26;
    uint64_t v28 = &qword_10016C850;
LABEL_10:
    sub_100046DC4(v27, v28);
    uint64_t v35 = 1;
    goto LABEL_12;
  }
  uint64_t v29 = v0[9];
  sub_10012A0C0();
  sub_1000472C0();
  sub_10000B424();
  v30();
  uint64_t v31 = sub_10012A2C0();
  int v32 = _s13WeatherWidget20WeatherDataViewModelOwet_0(v29, 1, v31);
  uint64_t v33 = v0[20];
  if (v32 == 1)
  {
    uint64_t v34 = v0[9];
    sub_100046DC4(v0[20], &qword_10016C850);
    uint64_t v28 = (uint64_t *)&unk_10016C848;
    uint64_t v27 = v34;
    goto LABEL_10;
  }
  sub_10012A2B0();
  sub_100046DC4(v33, &qword_10016C850);
  sub_1000472C0();
  sub_10000B424();
  v36();
  uint64_t v35 = 0;
LABEL_12:
  uint64_t v37 = v0[13];
  uint64_t v39 = v0[10];
  uint64_t v38 = v0[11];
  uint64_t v40 = v0[7];
  _s13WeatherWidget20WeatherDataViewModelOwst_0(v39, v35, 1, v38);
  v8(v37, v40, v38);
  int v41 = _s13WeatherWidget20WeatherDataViewModelOwet_0(v39, 1, v38);
  uint64_t v42 = v0[10];
  if (v41 == 1)
  {
    (*(void (**)(void, void, void))(v0[12] + 32))(v0[6], v0[13], v0[11]);
    sub_100046DC4(v42, &qword_10016C738);
  }
  else
  {
    v20(v0[13], v0[11]);
    uint64_t v43 = sub_1000472E8();
    v44(v43);
  }
  sub_100047354();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  BOOL v45 = (uint64_t (*)(void))v0[1];
  return v45();
}

uint64_t sub_1000413A8()
{
  sub_100047354();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_100047328();
  return v0();
}

uint64_t sub_10004145C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10012CC30();
  if (_s13WeatherWidget20WeatherDataViewModelOwet_0(a1, 1, v6) == 1)
  {
    sub_100046DC4(a1, &qword_10016C818);
  }
  else
  {
    sub_10012CC20();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
  }
  if (*(void *)(a3 + 16))
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_10012CC10();
    swift_unknownObjectRelease();
  }
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = a2;
  *(void *)(v7 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_1000415CC(uint64_t a1, uint64_t a2, void (*a3)(char *, void), uint64_t a4)
{
  uint64_t v71 = a4;
  id v70 = a3;
  uint64_t v6 = sub_1000053D8(&qword_10016C738);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000053D8(&qword_10016C818);
  __chkstk_darwin(v9 - 8);
  uint64_t v68 = (uint64_t)&v55 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10012A6B0();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v11);
  os_log_type_t v72 = (char *)&v55 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v73 = (char *)&v55 - v16;
  uint64_t v66 = v17;
  __chkstk_darwin(v15);
  unint64_t v19 = (char *)&v55 - v18;
  uint64_t v20 = a2 + 16;
  if (qword_10016AE10 != -1) {
    swift_once();
  }
  uint64_t v21 = sub_10012AB60();
  uint64_t v22 = sub_10000D7A4(v21, (uint64_t)qword_100181BF8);
  uint64_t v23 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  v23(v19, a1, v11);
  uint64_t v69 = a1;
  v23(v73, a1, v11);
  uint64_t v62 = v22;
  uint64_t v24 = sub_10012AB40();
  os_log_type_t v25 = sub_10012CD60();
  int v26 = v25;
  BOOL v27 = os_log_type_enabled(v24, v25);
  uint64_t v67 = v12;
  uint64_t v64 = v12 + 16;
  unint64_t v65 = v23;
  if (v27)
  {
    uint64_t v28 = swift_slowAlloc();
    uint64_t v60 = v20;
    uint64_t v29 = v28;
    uint64_t v59 = swift_slowAlloc();
    v74[0] = v59;
    *(_DWORD *)uint64_t v29 = 141558787;
    uint64_t v75 = 1752392040;
    unint64_t v63 = &v76;
    unsigned int v55 = v19;
    sub_10012CF70();
    *(_WORD *)(v29 + 12) = 2081;
    os_log_t v57 = v24;
    int v58 = v26;
    uint64_t v30 = v72;
    v23(v72, (uint64_t)v19, v11);
    uint64_t v31 = sub_10012CAB0();
    uint64_t v61 = v8;
    uint64_t v75 = sub_100123564(v31, v32, v74);
    sub_10012CF70();
    swift_bridgeObjectRelease();
    uint64_t v56 = *(void (**)(char *, uint64_t))(v12 + 8);
    v56(v55, v11);
    *(_WORD *)(v29 + 22) = 2160;
    uint64_t v75 = 1752392040;
    sub_10012CF70();
    *(_WORD *)(v29 + 32) = 2081;
    uint64_t v33 = v73;
    v23(v30, (uint64_t)v73, v11);
    uint64_t v34 = sub_10012CAB0();
    uint64_t v75 = sub_100123564(v34, v35, v74);
    uint64_t v8 = v61;
    sub_10012CF70();
    swift_bridgeObjectRelease();
    v56(v33, v11);
    os_log_t v36 = v57;
    _os_log_impl((void *)&_mh_execute_header, v57, (os_log_type_t)v58, "Successfully performed a local search. location=%{private,mask.hash}s, name=%{private,mask.hash}s", (uint8_t *)v29, 0x2Au);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    uint64_t v37 = *(void (**)(char *, uint64_t))(v12 + 8);
    v37(v19, v11);
    v37(v73, v11);
  }
  uint64_t v38 = v11;
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  uint64_t v40 = v69;
  if (Strong)
  {
    uint64_t v41 = Strong;
    uint64_t v42 = sub_10012CC30();
    uint64_t v43 = v68;
    _s13WeatherWidget20WeatherDataViewModelOwst_0(v68, 1, 1, v42);
    int v44 = v72;
    v65(v72, v40, v11);
    uint64_t v45 = v67;
    unint64_t v46 = (*(unsigned __int8 *)(v67 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v67 + 80);
    unint64_t v47 = (v66 + v46 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v48 = (char *)swift_allocObject();
    *((void *)v48 + 2) = 0;
    *((void *)v48 + 3) = 0;
    *((void *)v48 + 4) = v41;
    (*(void (**)(char *, char *, uint64_t))(v45 + 32))(&v48[v46], v44, v38);
    uint64_t v49 = &v48[v47];
    uint64_t v50 = v71;
    *(void *)uint64_t v49 = v70;
    *((void *)v49 + 1) = v50;
    swift_retain();
    sub_10004145C(v43, (uint64_t)&unk_10016C868, (uint64_t)v48);
    return swift_release();
  }
  else
  {
    uint64_t v52 = sub_10012AB40();
    os_log_type_t v53 = sub_10012CD40();
    if (os_log_type_enabled(v52, v53))
    {
      unint64_t v54 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v54 = 0;
      _os_log_impl((void *)&_mh_execute_header, v52, v53, "WidgetLocationManager.Self deallocated", v54, 2u);
      swift_slowDealloc();
    }

    _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v8, 1, 1, v11);
    v70(v8, 0);
    return sub_100046DC4((uint64_t)v8, &qword_10016C738);
  }
}

uint64_t sub_100041C1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[5] = a6;
  v7[6] = a7;
  v7[4] = a5;
  sub_1000053D8(&qword_10016C738);
  v7[7] = swift_task_alloc();
  uint64_t v9 = sub_10012A6B0();
  v7[8] = v9;
  v7[9] = *(void *)(v9 - 8);
  v7[10] = swift_task_alloc();
  v7[11] = swift_task_alloc();
  uint64_t v10 = swift_task_alloc();
  v7[12] = v10;
  uint64_t v11 = (void *)swift_task_alloc();
  v7[13] = v11;
  *uint64_t v11 = v7;
  v11[1] = sub_100041D78;
  return sub_100040B1C(v10, a5);
}

uint64_t sub_100041D78()
{
  sub_100047290();
  sub_10004716C();
  sub_1000473A8();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  sub_1000471B0();
  *uint64_t v5 = v4;
  *(void *)(v6 + 112) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v7 = sub_100041F5C;
  }
  else {
    uint64_t v7 = sub_100041E54;
  }
  return _swift_task_switch(v7, 0, 0);
}

uint64_t sub_100041E54()
{
  uint64_t v1 = v0[12];
  uint64_t v2 = v0[8];
  uint64_t v3 = v0[9];
  uint64_t v4 = v0[7];
  uint64_t v5 = (void (*)(uint64_t, uint64_t))v0[5];
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v4, v1, v2);
  _s13WeatherWidget20WeatherDataViewModelOwst_0(v4, 0, 1, v2);
  v5(v4, 1);
  sub_100046DC4(v4, &qword_10016C738);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_100047328();
  return v6();
}

uint64_t sub_100041F5C()
{
  uint64_t v17 = v0;
  if (qword_10016AE10 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[9];
  uint64_t v2 = sub_10012AB60();
  sub_10000D7A4(v2, (uint64_t)qword_100181BF8);
  uint64_t v3 = *(void (**)(void))(v1 + 16);
  sub_1000472A4();
  v3();
  uint64_t v4 = sub_10012AB40();
  os_log_type_t v5 = sub_10012CD40();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = sub_100047470();
    uint64_t v16 = sub_10000DCC8();
    *(_DWORD *)uint64_t v6 = 141558275;
    v0[2] = 1752392040;
    sub_10012CF70();
    *(_WORD *)(v6 + 12) = 2081;
    sub_1000472A4();
    v7();
    uint64_t v8 = sub_10012CAB0();
    v0[3] = sub_100123564(v8, v9, &v16);
    sub_10012CF70();
    swift_bridgeObjectRelease();
    sub_10000B424();
    v10();
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Failed to find location through savedLocationFinder location=%{private,mask.hash}s", (uint8_t *)v6, 0x16u);
    swift_arrayDestroy();
    sub_10000DBB4();
    sub_10000DBB4();
  }
  else
  {
    (*(void (**)(void, void))(v0[9] + 8))(v0[10], v0[8]);
  }

  uint64_t v11 = v0[7];
  uint64_t v12 = v0[8];
  uint64_t v13 = (void (*)(uint64_t, uint64_t))v0[5];
  sub_1000472A4();
  v3();
  _s13WeatherWidget20WeatherDataViewModelOwst_0(v11, 0, 1, v12);
  v13(v11, 1);
  swift_errorRelease();
  sub_100046DC4(v11, &qword_10016C738);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_100047328();
  return v14();
}

void sub_10004222C()
{
  sub_100047278();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v5 = sub_1000053D8(&qword_10016C738);
  uint64_t v6 = sub_10000DC9C(v5);
  __chkstk_darwin(v6);
  sub_1000212E4();
  if (qword_10016AE10 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_10012AB60();
  sub_10000D7A4(v7, (uint64_t)qword_100181BF8);
  swift_bridgeObjectRetain_n();
  uint64_t v8 = sub_10012AB40();
  os_log_type_t v9 = sub_10012CD40();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = sub_100047470();
    uint64_t v14 = sub_10000DCC8();
    *(_DWORD *)uint64_t v10 = 141558275;
    sub_10012CF70();
    *(_WORD *)(v10 + 12) = 2081;
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_10012CAB0();
    sub_100123564(v11, v12, &v14);
    sub_10012CF70();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v8, v9, v2, (uint8_t *)v10, 0x16u);
    swift_arrayDestroy();
    sub_10000DBB4();
    sub_10000DBB4();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v13 = sub_10012A6B0();
  _s13WeatherWidget20WeatherDataViewModelOwst_0(v0, 1, 1, v13);
  v4(v0, 0);
  sub_100046DC4(v0, &qword_10016C738);
  sub_100047260();
}

void sub_100042468(uint64_t a1, void *a2, void (*a3)(id, void), uint64_t a4)
{
  if (sub_10003D358())
  {
    if (qword_10016AE10 != -1) {
      swift_once();
    }
    uint64_t v8 = sub_10012AB60();
    sub_10000D7A4(v8, (uint64_t)qword_100181BF8);
    os_log_type_t v9 = sub_10012AB40();
    os_log_type_t v10 = sub_10012CD60();
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v11 = 0;
      _os_log_impl((void *)&_mh_execute_header, v9, v10, "location permissions granted, we can safely start listening to location updates from CoreLocation.", v11, 2u);
      swift_slowDealloc();
    }

    sub_10012A710();
    uint64_t v12 = *(void *)(a1 + OBJC_IVAR____TtC13WeatherWidget21WidgetLocationManager_timer);
    uint64_t v13 = sub_10012AB40();
    os_log_type_t v14 = sub_10012CD60();
    BOOL v15 = os_log_type_enabled(v13, v14);
    if (v12)
    {
      if (v15)
      {
        uint64_t v16 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v16 = 0;
        _os_log_impl((void *)&_mh_execute_header, v13, v14, "We are already listening to location updates from CoreLocation.", v16, 2u);
        swift_slowDealloc();
      }
    }
    else
    {
      if (v15)
      {
        os_log_type_t v25 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)os_log_type_t v25 = 0;
        _os_log_impl((void *)&_mh_execute_header, v13, v14, "Starting listening to location updates from CoreLocation.", v25, 2u);
        swift_slowDealloc();
      }

      [a2 startUpdatingLocation];
      sub_100042814();
    }
    uint64_t v26 = swift_allocObject();
    *(void *)(v26 + 16) = a3;
    *(void *)(v26 + 24) = a4;
    BOOL v27 = (uint64_t *)(a1 + OBJC_IVAR____TtC13WeatherWidget21WidgetLocationManager_completionQueue);
    swift_beginAccess();
    swift_retain();
    sub_10004569C();
    uint64_t v28 = *(void *)(*v27 + 16);
    sub_1000456F0(v28);
    uint64_t v29 = *v27;
    *(void *)(v29 + 16) = v28 + 1;
    uint64_t v30 = v29 + 16 * v28;
    *(void *)(v30 + 32) = sub_1000454C8;
    *(void *)(v30 + 40) = v26;
    swift_endAccess();
    sub_10012A720();
  }
  else
  {
    if (qword_10016AE10 != -1) {
      swift_once();
    }
    uint64_t v17 = sub_10012AB60();
    sub_10000D7A4(v17, (uint64_t)qword_100181BF8);
    uint64_t v18 = sub_10012AB40();
    os_log_type_t v19 = sub_10012CD60();
    if (os_log_type_enabled(v18, v19))
    {
      uint64_t v20 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v20 = 0;
      _os_log_impl((void *)&_mh_execute_header, v18, v19, "location permissions NOT granted, attempting to return a cachedLocation.", v20, 2u);
      swift_slowDealloc();
    }

    id v21 = sub_100042F24(2);
    uint64_t v23 = v22;
    unsigned int v24 = (v22 >> 8) & 1;
    a3(v21, v22 | (v24 << 8));
    sub_100045484(v21, v23, v24);
  }
}

uint64_t sub_100042814()
{
  uint64_t v0 = sub_10012B830();
  uint64_t v47 = *(void *)(v0 - 8);
  uint64_t v48 = v0;
  __chkstk_darwin(v0);
  int v44 = (char *)&v38 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_10012B860();
  uint64_t v45 = *(void *)(v2 - 8);
  uint64_t v46 = v2;
  __chkstk_darwin(v2);
  uint64_t v43 = (char *)&v38 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = sub_10012B820();
  uint64_t v4 = *(void *)(v41 - 8);
  uint64_t v5 = __chkstk_darwin(v41);
  uint64_t v42 = (uint64_t *)((char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v5);
  uint64_t v8 = (uint64_t *)((char *)&v38 - v7);
  uint64_t v40 = sub_10012B880();
  uint64_t v50 = *(void *)(v40 - 8);
  uint64_t v9 = __chkstk_darwin(v40);
  uint64_t v11 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v39 = (char *)&v38 - v12;
  uint64_t v13 = sub_10012CE30();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = sub_100046928(0, &qword_10016C760);
  aBlock[0] = &_swiftEmptyArrayStorage;
  sub_100045738(&qword_10016C768, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_source.TimerFlags);
  sub_1000053D8(&qword_10016C770);
  sub_1000468D8(&qword_10016C778, &qword_10016C770);
  sub_10012CFC0();
  uint64_t v49 = sub_10012CE40();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  swift_getObjectType();
  sub_10012B870();
  *uint64_t v8 = 10;
  uint64_t v17 = v41;
  (*(void (**)(void *, void, uint64_t))(v4 + 104))(v8, enum case for DispatchTimeInterval.seconds(_:), v41);
  uint64_t v18 = v39;
  sub_10012B8A0();
  os_log_type_t v19 = *(void (**)(void *, uint64_t))(v4 + 8);
  v19(v8, v17);
  uint64_t v20 = *(void (**)(char *, uint64_t))(v50 + 8);
  v50 += 8;
  id v21 = v11;
  uint64_t v22 = v40;
  v20(v21, v40);
  sub_100043EAC((uint64_t)v8);
  uint64_t v23 = v42;
  sub_100043F20(v42);
  sub_10012CF10();
  v19(v23, v17);
  v19(v8, v17);
  v20(v18, v22);
  uint64_t v24 = swift_allocObject();
  uint64_t v25 = v38;
  swift_unknownObjectWeakInit();
  aBlock[4] = sub_100045780;
  aBlock[5] = v24;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000434FC;
  aBlock[3] = &unk_100161F00;
  uint64_t v26 = _Block_copy(aBlock);
  swift_retain();
  BOOL v27 = v43;
  sub_10012B840();
  uint64_t v28 = v44;
  sub_1000441A4();
  uint64_t v29 = v28;
  uint64_t v30 = v49;
  sub_10012CE50();
  uint64_t v31 = v26;
  uint64_t v32 = v30;
  _Block_release(v31);
  (*(void (**)(char *, uint64_t))(v47 + 8))(v29, v48);
  (*(void (**)(char *, uint64_t))(v45 + 8))(v27, v46);
  swift_release();
  swift_release();
  sub_10012CE70();
  if (qword_10016AE10 != -1) {
    swift_once();
  }
  uint64_t v33 = sub_10012AB60();
  sub_10000D7A4(v33, (uint64_t)qword_100181BF8);
  uint64_t v34 = sub_10012AB40();
  os_log_type_t v35 = sub_10012CD60();
  if (os_log_type_enabled(v34, v35))
  {
    os_log_t v36 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)os_log_t v36 = 0;
    _os_log_impl((void *)&_mh_execute_header, v34, v35, "Timer: starting current location fetch timer", v36, 2u);
    swift_slowDealloc();
  }

  *(void *)(v25 + OBJC_IVAR____TtC13WeatherWidget21WidgetLocationManager_timer) = v32;
  return swift_unknownObjectRelease();
}

uint64_t sub_100042EDC(uint64_t a1, uint64_t (*a2)(void, void))
{
  return a2(*(void *)a1, *(unsigned __int8 *)(a1 + 8) | (*(unsigned __int8 *)(a1 + 9) << 8));
}

id sub_100042F24(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v34 = a1;
  uint64_t v3 = sub_1000053D8(&qword_10016C7A0);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10012A3A0();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10016AE10 != -1) {
    swift_once();
  }
  uint64_t v10 = sub_10012AB60();
  sub_10000D7A4(v10, (uint64_t)qword_100181BF8);
  uint64_t v11 = sub_10012AB40();
  os_log_type_t v12 = sub_10012CD60();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v13 = 0;
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "About to retrieve our last cachedLocation", v13, 2u);
    swift_slowDealloc();
  }

  uint64_t v14 = OBJC_IVAR____TtC13WeatherWidget21WidgetLocationManager_locationManager;
  id result = *(id *)(v2 + OBJC_IVAR____TtC13WeatherWidget21WidgetLocationManager_locationManager);
  if (!result)
  {
    __break(1u);
    goto LABEL_28;
  }
  [result _authorizationStatus];
  if (sub_10012CE90())
  {
    id result = *(id *)(v2 + v14);
    if (result)
    {
      if ([result isAuthorizedForWidgetUpdates])
      {
        sub_10000D890((void *)(v2 + OBJC_IVAR____TtC13WeatherWidget21WidgetLocationManager_locationCacheManager), *(void *)(v2 + OBJC_IVAR____TtC13WeatherWidget21WidgetLocationManager_locationCacheManager + 24));
        sub_10012A540();
        if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v5, 1, v6) == 1)
        {
          sub_100046DC4((uint64_t)v5, &qword_10016C7A0);
          uint64_t v16 = sub_10012AB40();
          os_log_type_t v17 = sub_10012CD60();
          if (os_log_type_enabled(v16, v17))
          {
            uint64_t v18 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)uint64_t v18 = 0;
            _os_log_impl((void *)&_mh_execute_header, v16, v17, "Aborting cachedLocation: no previous location data available", v18, 2u);
            swift_slowDealloc();
          }

          return (id)v34;
        }
        else
        {
          uint64_t v26 = v7;
          (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v5, v6);
          id v19 = (id)sub_100043C70();
          BOOL v27 = sub_10012AB40();
          os_log_type_t v28 = sub_10012CD60();
          if (os_log_type_enabled(v27, v28))
          {
            uint64_t v29 = swift_slowAlloc();
            uint64_t v30 = swift_slowAlloc();
            *(_DWORD *)uint64_t v29 = 141558275;
            uint64_t v35 = 1752392040;
            uint64_t v36 = v30;
            sub_10012CF70();
            *(_WORD *)(v29 + 12) = 2081;
            uint64_t v34 = v29 + 14;
            uint64_t v35 = (uint64_t)v19;
            sub_100046928(0, &qword_10016C7A8);
            id v31 = v19;
            uint64_t v32 = sub_10012CAB0();
            uint64_t v35 = sub_100123564(v32, v33, &v36);
            sub_10012CF70();

            swift_bridgeObjectRelease();
            _os_log_impl((void *)&_mh_execute_header, v27, v28, "Successfully retrieved a previous cachedLocation. location=%{private,mask.hash}s", (uint8_t *)v29, 0x16u);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();
          }
          else
          {
          }
          (*(void (**)(char *, uint64_t))(v26 + 8))(v9, v6);
        }
        return v19;
      }
      goto LABEL_13;
    }
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
LABEL_13:
  uint64_t v20 = sub_10012AB40();
  os_log_type_t v21 = sub_10012CD60();
  if (os_log_type_enabled(v20, v21))
  {
    uint64_t v22 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v22 = 0;
    _os_log_impl((void *)&_mh_execute_header, v20, v21, "Aborting cachedLocation: we are no longer authorized.", v22, 2u);
    swift_slowDealloc();
  }

  if (sub_10012CEB0()) {
    goto LABEL_18;
  }
  id result = *(id *)(v2 + v14);
  if (result)
  {
    if ([result isAuthorizedForWidgetUpdates]) {
      return (id)v34;
    }
LABEL_18:
    uint64_t v23 = sub_10012AB40();
    os_log_type_t v24 = sub_10012CD60();
    if (os_log_type_enabled(v23, v24))
    {
      uint64_t v25 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v25 = 0;
      _os_log_impl((void *)&_mh_execute_header, v23, v24, "Previous location authorization revoked. Clearing cache.", v25, 2u);
      swift_slowDealloc();
    }

    sub_10000D890((void *)(v2 + OBJC_IVAR____TtC13WeatherWidget21WidgetLocationManager_locationCacheManager), *(void *)(v2 + OBJC_IVAR____TtC13WeatherWidget21WidgetLocationManager_locationCacheManager + 24));
    sub_10012A570();
    return (id)v34;
  }
LABEL_29:
  __break(1u);
  return result;
}

void *sub_100043500(void *a1, uint64_t a2)
{
  uint64_t v4 = v2;
  uint64_t v7 = sub_10012B890();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (uint64_t *)((char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = *(void **)(v4 + OBJC_IVAR____TtC13WeatherWidget21WidgetLocationManager_locationQueue);
  void *v10 = v11;
  (*(void (**)(void *, void, uint64_t))(v8 + 104))(v10, enum case for DispatchPredicate.onQueue(_:), v7);
  id v12 = v11;
  LOBYTE(v11) = sub_10012B8B0();
  uint64_t v14 = *(void (**)(void *, uint64_t))(v8 + 8);
  uint64_t v13 = (void *)(v8 + 8);
  v14(v10, v7);
  if ((v11 & 1) == 0)
  {
    __break(1u);
LABEL_20:
    swift_once();
    goto LABEL_6;
  }
  LODWORD(v10) = a2 & 1;
  if (a2)
  {
    LOBYTE(v43[0]) = (_BYTE)a1;
    sub_100045788();
    swift_willThrowTypedImpl();
    uint64_t v13 = 0;
    unint64_t v3 = 0xEC0000006C756673;
    a2 = 0x7365636375736E75;
  }
  else
  {
    id v15 = a1;
    unint64_t v3 = 0xEA00000000006C75;
    a2 = 0x6673736563637573;
    uint64_t v13 = a1;
  }
  if (qword_10016AE10 != -1) {
    goto LABEL_20;
  }
LABEL_6:
  uint64_t v16 = sub_10012AB60();
  uint64_t v17 = sub_10000D7A4(v16, (uint64_t)qword_100181BF8);
  id v18 = v13;
  swift_bridgeObjectRetain();
  id v19 = sub_10012AB40();
  os_log_type_t v20 = sub_10012CD60();
  if (os_log_type_enabled(v19, v20))
  {
    uint64_t v21 = swift_slowAlloc();
    uint64_t v40 = a1;
    uint64_t v22 = v21;
    uint64_t v23 = swift_slowAlloc();
    uint64_t v38 = v17;
    v43[0] = v23;
    *(_DWORD *)uint64_t v22 = 136446723;
    int v39 = (int)v10;
    swift_bridgeObjectRetain();
    uint64_t v41 = sub_100123564(a2, v3, v43);
    sub_10012CF70();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v22 + 12) = 2160;
    uint64_t v41 = 1752392040;
    sub_10012CF70();
    *(_WORD *)(v22 + 22) = 2081;
    uint64_t v41 = (uint64_t)v13;
    uint64_t v10 = v18;
    sub_1000053D8(&qword_10016C788);
    uint64_t v24 = sub_10012CAB0();
    uint64_t v41 = sub_100123564(v24, v25, v43);
    sub_10012CF70();

    LOBYTE(v10) = v39;
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v19, v20, "CoreLocation fetch was %{public}s ...now stopping listening to location updates. location=%{private,mask.hash}s", (uint8_t *)v22, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    a1 = v40;
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  *(unsigned char *)(v4 + OBJC_IVAR____TtC13WeatherWidget21WidgetLocationManager_locationIsUpdating) = 0;
  id result = *(void **)(v4 + OBJC_IVAR____TtC13WeatherWidget21WidgetLocationManager_locationManager);
  if (result)
  {
    [result stopUpdatingLocation];
    sub_10012A710();
    sub_100043A8C();
    BOOL v27 = (uint64_t *)(v4 + OBJC_IVAR____TtC13WeatherWidget21WidgetLocationManager_completionQueue);
    swift_beginAccess();
    uint64_t v28 = *v27;
    *BOOL v27 = (uint64_t)&_swiftEmptyArrayStorage;
    sub_10012A720();
    id v29 = sub_100043BE4((uint64_t)a1, (char)v10, v4);
    uint64_t v31 = v30;
    swift_bridgeObjectRetain();
    uint64_t v32 = sub_10012AB40();
    os_log_type_t v33 = sub_10012CD60();
    if (os_log_type_enabled(v32, v33))
    {
      uint64_t v34 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v34 = 134217984;
      uint64_t v41 = *(void *)(v28 + 16);
      sub_10012CF70();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v32, v33, "locationUpdate: completed returning (%ld) requests", v34, 0xCu);
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease();
    }
    uint64_t v35 = *(void *)(v28 + 16);
    if (v35)
    {
      swift_bridgeObjectRetain();
      uint64_t v36 = v28 + 40;
      do
      {
        uint64_t v37 = *(void (**)(uint64_t *))(v36 - 8);
        uint64_t v41 = (uint64_t)v29;
        __int16 v42 = v31 & 0x1FF;
        swift_retain();
        v37(&v41);
        swift_release();
        v36 += 16;
        --v35;
      }
      while (v35);

      swift_bridgeObjectRelease();
    }
    else
    {
    }
    sub_100045484(v29, v31, BYTE1(v31) & 1);
    return (void *)swift_bridgeObjectRelease();
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_100043A8C()
{
  uint64_t v1 = OBJC_IVAR____TtC13WeatherWidget21WidgetLocationManager_timer;
  if (*(void *)(v0 + OBJC_IVAR____TtC13WeatherWidget21WidgetLocationManager_timer))
  {
    uint64_t v2 = v0;
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_10012CE60();
    if (qword_10016AE10 != -1) {
      swift_once();
    }
    uint64_t v3 = sub_10012AB60();
    sub_10000D7A4(v3, (uint64_t)qword_100181BF8);
    uint64_t v4 = sub_10012AB40();
    os_log_type_t v5 = sub_10012CD60();
    if (os_log_type_enabled(v4, v5))
    {
      uint64_t v6 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v6 = 0;
      _os_log_impl((void *)&_mh_execute_header, v4, v5, "Timer: stopped successfully before expiration", v6, 2u);
      swift_slowDealloc();
      swift_unknownObjectRelease();
    }
    else
    {

      swift_unknownObjectRelease();
    }
    *(void *)(v2 + v1) = 0;
    swift_unknownObjectRelease();
  }
}

id sub_100043BE4(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v3 = (void *)a1;
  if (a2) {
    return sub_100042F24(a1);
  }
  sub_10000D890((void *)(a3 + OBJC_IVAR____TtC13WeatherWidget21WidgetLocationManager_locationCacheManager), *(void *)(a3 + OBJC_IVAR____TtC13WeatherWidget21WidgetLocationManager_locationCacheManager + 24));
  id v4 = v3;
  sub_10012A560();
  return v3;
}

uint64_t sub_100043C70()
{
  uint64_t v0 = sub_10012A6B0();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10012A380();
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10012A390();
  if (swift_getEnumCaseMultiPayload() != 1) {
    return *(void *)v6;
  }
  (*(void (**)(char *, char *, uint64_t))(v1 + 32))(v3, v6, v0);
  sub_10012A5F0();
  uint64_t v7 = sub_10012CED0();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v7;
}

uint64_t sub_100043DD8(uint64_t a1)
{
  uint64_t v2 = sub_10012A230();
  __chkstk_darwin(v2);
  (*(void (**)(char *, uint64_t))(v4 + 16))((char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  return sub_10012A620();
}

uint64_t sub_100043EAC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = enum case for DispatchTimeInterval.never(_:);
  uint64_t v3 = sub_10012B820();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104);

  return v4(a1, v2, v3);
}

uint64_t sub_100043F20@<X0>(void *a1@<X8>)
{
  *a1 = 0;
  uint64_t v2 = enum case for DispatchTimeInterval.nanoseconds(_:);
  uint64_t v3 = sub_10012B820();
  uint64_t v4 = *(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104);

  return v4(a1, v2, v3);
}

void sub_100043F98()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = Strong;
    if (qword_10016AE10 != -1) {
      swift_once();
    }
    uint64_t v2 = sub_10012AB60();
    sub_10000D7A4(v2, (uint64_t)qword_100181BF8);
    uint64_t v3 = sub_10012AB40();
    os_log_type_t v4 = sub_10012CD60();
    if (os_log_type_enabled(v3, v4))
    {
      uint64_t v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v5 = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, v4, "Timer: timed out while attempting to fetch the current location", v5, 2u);
      swift_slowDealloc();
    }

    sub_100043500(0, 1);
  }
  else
  {
    if (qword_10016AE10 != -1) {
      swift_once();
    }
    uint64_t v6 = sub_10012AB60();
    sub_10000D7A4(v6, (uint64_t)qword_100181BF8);
    uint64_t v1 = sub_10012AB40();
    os_log_type_t v7 = sub_10012CD40();
    if (os_log_type_enabled(v1, v7))
    {
      uint64_t v8 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v8 = 0;
      _os_log_impl((void *)&_mh_execute_header, v1, v7, "Timer: we were deallocated before the timer timed out", v8, 2u);
      swift_slowDealloc();
    }
  }
}

uint64_t sub_100044160(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  v1(v2);

  return swift_release();
}

uint64_t sub_1000441A4()
{
  return sub_10012CFC0();
}

void sub_10004426C()
{
  sub_100047278();
  uint64_t v2 = v0;
  unint64_t v4 = v3;
  BOOL v6 = v5;
  uint64_t v7 = sub_10012A380();
  uint64_t v8 = sub_10000DC9C(v7);
  __chkstk_darwin(v8);
  sub_10000DC50();
  unint64_t v11 = v10 - v9;
  uint64_t v12 = sub_1000053D8(&qword_10016C7A0);
  uint64_t v13 = sub_10000DC9C(v12);
  __chkstk_darwin(v13);
  sub_1000212E4();
  uint64_t v14 = sub_10012B890();
  sub_10000DB98();
  uint64_t v16 = v15;
  __chkstk_darwin(v17);
  sub_10000DC50();
  uint64_t v20 = v19 - v18;
  uint64_t v21 = *(void **)(v2 + OBJC_IVAR____TtC13WeatherWidget21WidgetLocationManager_locationQueue);
  *(void *)(v19 - v18) = v21;
  (*(void (**)(uint64_t, void, uint64_t))(v16 + 104))(v19 - v18, enum case for DispatchPredicate.onQueue(_:), v14);
  id v22 = v21;
  LOBYTE(v21) = sub_10012B8B0();
  uint64_t v24 = *(void (**)(uint64_t, uint64_t))(v16 + 8);
  unint64_t v23 = v16 + 8;
  v24(v20, v14);
  if (v21)
  {
    *(unsigned char *)(v2 + OBJC_IVAR____TtC13WeatherWidget21WidgetLocationManager_locationIsUpdating) = 1;
    unint64_t v23 = v4 >> 62;
    if (!(v4 >> 62))
    {
      if (*(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_4;
      }
      goto LABEL_40;
    }
  }
  else
  {
LABEL_38:
    __break(1u);
  }
  swift_bridgeObjectRetain();
  uint64_t v52 = sub_10012D090();
  swift_bridgeObjectRelease();
  if (v52)
  {
LABEL_4:
    unsigned __int8 v25 = [(id)v6 _limitsPrecision];
    sub_10000D890((void *)(v2 + OBJC_IVAR____TtC13WeatherWidget21WidgetLocationManager_locationCacheManager), *(void *)(v2 + OBJC_IVAR____TtC13WeatherWidget21WidgetLocationManager_locationCacheManager + 24));
    sub_10012A540();
    uint64_t v26 = sub_10012A3A0();
    if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v1, 1, v26) == 1)
    {
      uint64_t v27 = sub_100046DC4((uint64_t)v1, &qword_10016C7A0);
      uint64_t v1 = 0;
    }
    else
    {
      sub_10012A390();
      sub_1000472C0();
      sub_10000B424();
      v28();
      uint64_t v1 = (CLLocation_optional *)sub_10012A370();
      uint64_t v27 = sub_1000470F8(v11);
    }
    unint64_t v58 = v4;
    if (v23)
    {
      swift_bridgeObjectRetain();
      uint64_t v29 = sub_10012D090();
      uint64_t v27 = swift_bridgeObjectRelease();
      if (v29)
      {
LABEL_9:
        unint64_t v11 = v29 - 1;
        if (__OFSUB__(v29, 1)) {
          goto LABEL_47;
        }
        unint64_t v23 = v4 & 0xC000000000000001;
        sub_1000454D4(v29 - 1, (v4 & 0xC000000000000001) == 0, v4);
        if ((v4 & 0xC000000000000001) != 0) {
LABEL_48:
        }
          id v30 = (id)sub_10012CFF0();
        else {
          id v30 = *(id *)(v4 + 8 * v11 + 32);
        }
        BOOL v6 = (BOOL)v30;
        BOOL v31 = sub_10012CD00(v25, v1);

        if (!v31 && v11)
        {
          while (1)
          {
            if (__OFSUB__(v11--, 1))
            {
              __break(1u);
              goto LABEL_38;
            }
            if (v23)
            {
              id v33 = (id)sub_10012CFF0();
            }
            else
            {
              if ((v11 & 0x8000000000000000) != 0)
              {
                __break(1u);
LABEL_46:
                __break(1u);
LABEL_47:
                __break(1u);
                goto LABEL_48;
              }
              if (v11 >= *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
                goto LABEL_46;
              }
              id v33 = *(id *)(v4 + 32 + 8 * v11);
            }
            uint64_t v34 = v33;
            BOOL v6 = sub_10012CD00(v25, v1);

            if (v6 || !v11) {
              goto LABEL_25;
            }
          }
        }
        goto LABEL_25;
      }
    }
    else
    {
      uint64_t v29 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v29) {
        goto LABEL_9;
      }
    }
    unint64_t v11 = 0;
LABEL_25:
    __chkstk_darwin(v27);
    v56[-2] = &v58;
    uint64_t v36 = sub_1000469C8((void *(*)(uint64_t *__return_ptr, uint64_t *))sub_1000470D8, (uint64_t)&v56[-4], v11, v35 & 1);
    if (v36)
    {
      uint64_t v37 = v36;
      if (qword_10016AE10 != -1) {
        swift_once();
      }
      uint64_t v38 = sub_10012AB60();
      sub_10000D7A4(v38, (uint64_t)qword_100181BF8);
      id v39 = v37;
      uint64_t v40 = sub_10012AB40();
      os_log_type_t v41 = sub_10012CD60();
      if (os_log_type_enabled(v40, v41))
      {
        uint64_t v42 = sub_100047470();
        unint64_t v58 = sub_10000DCC8();
        *(_DWORD *)uint64_t v42 = 141558275;
        uint64_t v57 = 1752392040;
        sub_10012CF70();
        *(_WORD *)(v42 + 12) = 2081;
        uint64_t v57 = (uint64_t)v39;
        sub_100046928(0, &qword_10016C7A8);
        v56[1] = v2;
        id v43 = v39;
        uint64_t v44 = sub_10012CAB0();
        uint64_t v57 = sub_100123564(v44, v45, (uint64_t *)&v58);
        sub_10012CF70();

        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v40, v41, "locationUpdate: completed successfully. location=%{private,mask.hash}s)", (uint8_t *)v42, 0x16u);
        swift_arrayDestroy();
        sub_10000DBB4();
        sub_10000DBB4();
      }
      else
      {
      }
      uint64_t v47 = v39;
      sub_100043500(v37, 0);
    }
    else
    {
      if (qword_10016AE10 != -1) {
        swift_once();
      }
      uint64_t v46 = sub_10012AB60();
      uint64_t v47 = sub_100047448(v46, (uint64_t)qword_100181BF8);
      os_log_type_t v48 = sub_10012CD60();
      if (os_log_type_enabled(v47, v48))
      {
        uint64_t v49 = (_WORD *)sub_10000DC1C();
        sub_10000DC90(v49);
        sub_10000DBE0((void *)&_mh_execute_header, v50, v51, "locationUpdate: locationManager did update locations but it's invalid or not accurate enough");
        sub_10000DBB4();
      }
    }

    goto LABEL_44;
  }
LABEL_40:
  if (qword_10016AE10 != -1) {
    swift_once();
  }
  uint64_t v53 = sub_10012AB60();
  uint64_t v1 = (CLLocation_optional *)sub_100047448(v53, (uint64_t)qword_100181BF8);
  os_log_type_t v54 = sub_10012CD60();
  if (os_log_type_enabled(&v1->value.super, v54))
  {
    unsigned int v55 = (_WORD *)sub_10000DC1C();
    sub_10004731C(v55);
    _os_log_impl((void *)&_mh_execute_header, &v1->value.super, v54, "locationUpdate: locationManager did update locations but location list is empty", (uint8_t *)v6, 2u);
    sub_10000DBB4();
  }
LABEL_44:

  sub_100047260();
}

void sub_1000449C8()
{
  sub_100047278();
  uint64_t v2 = sub_10012B890();
  sub_10000DB98();
  uint64_t v4 = v3;
  __chkstk_darwin(v5);
  sub_1000212E4();
  BOOL v6 = *(void **)(v0 + OBJC_IVAR____TtC13WeatherWidget21WidgetLocationManager_locationQueue);
  void *v1 = v6;
  (*(void (**)(void *, void, uint64_t))(v4 + 104))(v1, enum case for DispatchPredicate.onQueue(_:), v2);
  id v7 = v6;
  LOBYTE(v6) = sub_10012B8B0();
  (*(void (**)(void *, uint64_t))(v4 + 8))(v1, v2);
  if (v6)
  {
    if (qword_10016AE10 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  uint64_t v8 = sub_10012AB60();
  sub_10000D7A4(v8, (uint64_t)qword_100181BF8);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v9 = sub_10012AB40();
  os_log_type_t v10 = sub_10012CD60();
  if (os_log_type_enabled(v9, v10))
  {
    unint64_t v11 = (uint8_t *)swift_slowAlloc();
    uint64_t v14 = sub_10000DCC8();
    *(_DWORD *)unint64_t v11 = 136380675;
    swift_errorRetain();
    sub_1000053D8(&qword_10016C870);
    uint64_t v12 = sub_10012CAB0();
    sub_100123564(v12, v13, &v14);
    sub_10012CF70();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "locationUpdate: locationManager didFailWithError: %{private}s ... letting CoreLocation keep trying", v11, 0xCu);
    swift_arrayDestroy();
    sub_10000DBB4();
    sub_10000DBB4();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }

  sub_100047260();
}

void sub_100044C88()
{
  sub_100047278();
  uint64_t v2 = v0;
  uint64_t v4 = v3;
  uint64_t v5 = sub_10012B890();
  sub_10000DB98();
  uint64_t v7 = v6;
  __chkstk_darwin(v8);
  sub_1000212E4();
  uint64_t v9 = *(void **)(v2 + OBJC_IVAR____TtC13WeatherWidget21WidgetLocationManager_locationQueue);
  void *v1 = v9;
  (*(void (**)(void *, void, uint64_t))(v7 + 104))(v1, enum case for DispatchPredicate.onQueue(_:), v5);
  id v10 = v9;
  LOBYTE(v9) = sub_10012B8B0();
  (*(void (**)(void *, uint64_t))(v7 + 8))(v1, v5);
  if (v9)
  {
    [v4 authorizationStatus];
    [v4 _limitsPrecision];
    [v4 isAuthorizedForWidgetUpdates];
    if (qword_10016AE10 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  uint64_t v11 = sub_10012AB60();
  sub_10000D7A4(v11, (uint64_t)qword_100181BF8);
  uint64_t v12 = sub_10012AB40();
  os_log_type_t v13 = sub_10012CD60();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = swift_slowAlloc();
    uint64_t v30 = sub_10000DCC8();
    *(_DWORD *)uint64_t v14 = 136446722;
    uint64_t v15 = sub_10012CEA0();
    sub_100123564(v15, v16, &v30);
    sub_10012CF70();
    swift_bridgeObjectRelease();
    *(_WORD *)(v14 + 12) = 1024;
    sub_10012CF70();
    *(_WORD *)(v14 + 18) = 1024;
    sub_10012CF70();
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "locationUpdate: locationManager didChangeAuthorization. Received new states: authorizationState:%{public}s, limitsPrecision: %{BOOL}d, isAuthorizedForWidgetUpdates=%{BOOL}d", (uint8_t *)v14, 0x18u);
    swift_arrayDestroy();
    sub_10000DBB4();
    sub_10000DBB4();
  }

  if (sub_10003D358())
  {
    char v17 = *(unsigned char *)(v2 + OBJC_IVAR____TtC13WeatherWidget21WidgetLocationManager_locationIsUpdating);
    uint64_t v18 = sub_10012AB40();
    os_log_type_t v19 = sub_10012CD60();
    BOOL v20 = os_log_type_enabled(v18, v19);
    if (v17)
    {
      if (v20)
      {
        uint64_t v21 = (uint8_t *)sub_10000DC1C();
        sub_10004743C(v21);
        _os_log_impl((void *)&_mh_execute_header, v18, v22, "locationUpdate: not starting listening to location updates: location is already updating", v21, 2u);
        sub_10000DBB4();
      }
    }
    else
    {
      if (v20)
      {
        uint64_t v28 = (uint8_t *)sub_10000DC1C();
        sub_10004743C(v28);
        _os_log_impl((void *)&_mh_execute_header, v18, v29, "locationUpdate: starting listening to location updates", v28, 2u);
        sub_10000DBB4();
      }

      [v4 startUpdatingLocation];
    }
  }
  else
  {
    unint64_t v23 = sub_10012AB40();
    os_log_type_t v24 = sub_10012CD60();
    if (os_log_type_enabled(v23, v24))
    {
      unsigned __int8 v25 = (_WORD *)sub_10000DC1C();
      sub_10000DC90(v25);
      sub_10000DBE0((void *)&_mh_execute_header, v26, v27, "locationUpdate: not starting listening to location updates: we don't have location permissions");
      sub_10000DBB4();
    }
  }
  sub_100047260();
}

unsigned char *storeEnumTagSinglePayload for FailureReason(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *id result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100045160);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *id result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FailureReason()
{
  return &type metadata for FailureReason;
}

unsigned char *storeEnumTagSinglePayload for LocationState(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *id result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100045264);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *id result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LocationState()
{
  return &type metadata for LocationState;
}

unint64_t sub_1000452A0()
{
  unint64_t result = qword_10016C728;
  if (!qword_10016C728)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016C728);
  }
  return result;
}

unint64_t sub_1000452F0()
{
  unint64_t result = qword_10016C730;
  if (!qword_10016C730)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016C730);
  }
  return result;
}

id sub_10004533C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v5 = v4;
  if (a2)
  {
    NSString v8 = sub_10012CA20();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v8 = 0;
  }
  id v9 = [v5 initWithEffectiveBundleIdentifier:v8 delegate:a3 onQueue:a4];

  swift_unknownObjectRelease();
  return v9;
}

uint64_t sub_1000453C8()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_100045404(void *a1, __int16 a2)
{
  sub_10003EAEC(a1, a2 & 0x1FF, *(void *)(v2 + 16), *(void (**)(char *, uint64_t))(v2 + 24), *(void *)(v2 + 32), *(unsigned char *)(v2 + 40));
}

uint64_t sub_100045420()
{
  swift_release();
  uint64_t v1 = sub_1000472B0();

  return _swift_deallocObject(v1, v2, v3);
}

void sub_100045460()
{
  sub_100042468(*(void *)(v0 + 16), *(void **)(v0 + 24), *(void (**)(id, void))(v0 + 32), *(void *)(v0 + 40));
}

uint64_t sub_10004546C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10004547C()
{
  return swift_release();
}

void sub_100045484(id a1, uint64_t a2, char a3)
{
  if ((a3 & 1) == 0) {
}
  }

uint64_t sub_100045490()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000454C8(uint64_t a1)
{
  return sub_100042EDC(a1, *(uint64_t (**)(void, void))(v1 + 16));
}

unint64_t sub_1000454D4(unint64_t result, char a2, uint64_t a3)
{
  if (a2)
  {
    if ((result & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > result)
    {
      return result;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1000454F8(uint64_t a1, int *a2)
{
  unsigned int v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  unsigned int v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *unsigned int v4 = v2;
  v4[1] = sub_1000455D4;
  return v6(a1);
}

uint64_t sub_1000455D4()
{
  sub_100047290();
  sub_10004716C();
  uint64_t v1 = *v0;
  sub_1000471B0();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(void))(v1 + 8);
  return v3();
}

void sub_10004569C()
{
  uint64_t v1 = *v0;
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t *v0 = v1;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1000459BC(0, *(void *)(v1 + 16) + 1, 1, v1);
    uint64_t *v0 = v3;
  }
}

void sub_1000456F0(uint64_t a1)
{
  unint64_t v2 = *(void *)(*v1 + 24);
  if (a1 + 1 > (uint64_t)(v2 >> 1))
  {
    sub_1000459BC(v2 > 1, a1 + 1, 1, *v1);
    uint64_t *v1 = v3;
  }
}

uint64_t sub_100045738(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_100045780()
{
}

unint64_t sub_100045788()
{
  unint64_t result = qword_10016C780;
  if (!qword_10016C780)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016C780);
  }
  return result;
}

uint64_t sub_1000457D4(char a1, uint64_t a2, char a3, uint64_t a4)
{
  return sub_100045BDC(a1, a2, a3, a4, &qword_10016C7E0, type metadata accessor for EventViewModel, type metadata accessor for EventViewModel, (void (*)(void))type metadata accessor for EventViewModel);
}

void sub_10004581C(char a1, uint64_t a2, char a3, uint64_t a4)
{
  if (a3)
  {
    sub_1000471D0();
    if (v8 != v9)
    {
      sub_1000472DC();
      if (v8)
      {
        __break(1u);
        return;
      }
      sub_1000471C0();
    }
  }
  sub_1000472CC();
  if (v5)
  {
    sub_1000053D8(&qword_10016C7E8);
    id v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v4;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    id v10 = (char *)_swiftEmptyArrayStorage;
  }
  if (a1)
  {
    sub_1000464B0((char *)(a4 + 32), v4, v10 + 32);
    sub_1000473B8();
  }
  else
  {
    uint64_t v12 = sub_100047344();
    sub_100045E60(v12, v13, v14, v15);
  }
}

void sub_1000458D4(char a1, uint64_t a2, char a3, uint64_t a4)
{
  if (a3)
  {
    sub_1000471D0();
    if (v8 != v9)
    {
      sub_1000472DC();
      if (v8)
      {
        __break(1u);
        return;
      }
      sub_1000471C0();
    }
  }
  sub_1000472CC();
  if (v5)
  {
    sub_1000053D8(&qword_10016C880);
    id v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    sub_100047390(v11);
  }
  else
  {
    id v10 = (char *)&_swiftEmptyArrayStorage;
  }
  if (a1)
  {
    sub_100046540((char *)(a4 + 32), v4, v10 + 32);
    sub_1000473B8();
  }
  else
  {
    uint64_t v12 = sub_100047344();
    sub_100045F50(v12, v13, v14, v15);
  }
}

void sub_100045988(char a1, uint64_t a2, char a3, uint64_t a4)
{
}

void sub_1000459BC(char a1, uint64_t a2, char a3, uint64_t a4)
{
  if (a3)
  {
    sub_1000471D0();
    if (v8 != v9)
    {
      sub_1000472DC();
      if (v8)
      {
        __break(1u);
        return;
      }
      sub_1000471C0();
    }
  }
  sub_1000472CC();
  if (v5)
  {
    sub_1000053D8(v10);
    size_t v11 = (char *)swift_allocObject();
    size_t v12 = j__malloc_size(v11);
    sub_100047390(v12);
  }
  else
  {
    size_t v11 = (char *)&_swiftEmptyArrayStorage;
  }
  if (a1)
  {
    sub_1000466B0((char *)(a4 + 32), v4, v11 + 32);
    sub_1000473B8();
  }
  else
  {
    uint64_t v13 = sub_100047344();
    sub_100046234(v13, v14, v15, v16);
  }
}

void sub_100045A6C(char a1, uint64_t a2, char a3, uint64_t a4)
{
}

void sub_100045AA0(char a1, uint64_t a2, char a3, uint64_t a4, uint64_t *a5, void (*a6)(void, uint64_t, void *, uint64_t), void (*a7)(uint64_t, uint64_t, void *))
{
  if (a3)
  {
    sub_1000471D0();
    if (v12 != v13)
    {
      sub_1000472DC();
      if (v12)
      {
        __break(1u);
        return;
      }
      sub_1000471C0();
    }
  }
  else
  {
    uint64_t v11 = a2;
  }
  uint64_t v14 = *(void *)(a4 + 16);
  if (v11 <= v14) {
    uint64_t v15 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v15 = v11;
  }
  if (v15)
  {
    sub_1000053D8(a5);
    uint64_t v16 = (void *)swift_allocObject();
    size_t v17 = j__malloc_size(v16);
    v16[2] = v14;
    v16[3] = 2 * ((uint64_t)(v17 - 32) / 32);
  }
  else
  {
    uint64_t v16 = &_swiftEmptyArrayStorage;
  }
  uint64_t v18 = v16 + 4;
  if (a1)
  {
    a7(a4 + 32, v14, v18);
    sub_1000473B8();
  }
  else
  {
    a6(0, v14, v18, a4);
  }
}

void sub_100045B88(char a1, uint64_t a2, char a3, uint64_t a4)
{
}

uint64_t sub_100045B94(char a1, uint64_t a2, char a3, uint64_t a4)
{
  return sub_100045BDC(a1, a2, a3, a4, &qword_10016C7D0, type metadata accessor for ForecastEntry, type metadata accessor for ForecastEntry, (void (*)(void))type metadata accessor for ForecastEntry);
}

uint64_t sub_100045BDC(char a1, uint64_t a2, char a3, uint64_t a4, uint64_t *a5, uint64_t (*a6)(void), uint64_t (*a7)(void), void (*a8)(void))
{
  if (a3)
  {
    sub_1000471D0();
    if (v14 != v15)
    {
      sub_1000472DC();
      if (v14)
      {
        __break(1u);
        goto LABEL_23;
      }
      sub_1000471C0();
    }
  }
  else
  {
    uint64_t v13 = a2;
  }
  uint64_t v16 = *(void *)(a4 + 16);
  if (v13 <= v16) {
    uint64_t v17 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v17 = v13;
  }
  if (!v17)
  {
    unint64_t v23 = &_swiftEmptyArrayStorage;
    goto LABEL_18;
  }
  sub_1000053D8(a5);
  uint64_t v18 = a6(0);
  sub_100047198(v18);
  uint64_t v20 = *(void *)(v19 + 72);
  unint64_t v22 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  unint64_t v23 = (void *)swift_allocObject();
  size_t v24 = j__malloc_size(v23);
  if (!v20 || (v24 - v22 == 0x8000000000000000 ? (BOOL v25 = v20 == -1) : (BOOL v25 = 0), v25))
  {
LABEL_23:
    sub_100047184();
    uint64_t result = sub_10012D060();
    __break(1u);
    return result;
  }
  v23[2] = v16;
  v23[3] = 2 * ((uint64_t)(v24 - v22) / v20);
LABEL_18:
  uint64_t v26 = *(void *)(a6(0) - 8);
  unint64_t v27 = (*(unsigned __int8 *)(v26 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80);
  unint64_t v28 = (unint64_t)v23 + v27;
  if (a1)
  {
    sub_100046724(a4 + v27, v16, v28, a8);
    sub_1000473B8();
  }
  else
  {
    sub_100046334(0, v16, v28, a4, a7);
  }
  return (uint64_t)v23;
}

uint64_t sub_100045DD0(char a1, uint64_t a2, char a3, uint64_t a4)
{
  return sub_100045BDC(a1, a2, a3, a4, &qword_10016C7F0, (uint64_t (*)(void))&type metadata accessor for DailyForecastViewModel, (uint64_t (*)(void))&type metadata accessor for DailyForecastViewModel, (void (*)(void))&type metadata accessor for DailyForecastViewModel);
}

uint64_t sub_100045E18(char a1, uint64_t a2, char a3, uint64_t a4)
{
  return sub_100045BDC(a1, a2, a3, a4, &qword_10016C7F8, (uint64_t (*)(void))&type metadata accessor for HourlyForecastBannerViewModel, (uint64_t (*)(void))&type metadata accessor for HourlyForecastBannerViewModel, (void (*)(void))&type metadata accessor for HourlyForecastBannerViewModel);
}

char *sub_100045E60(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  size_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    uint64_t v5 = (char *)(a4 + a1 + 32);
    unsigned int v6 = &__dst[v4];
    if (v5 >= &__dst[v4] || &v5[v4] <= __dst)
    {
      memcpy(__dst, v5, v4);
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = (char *)sub_10012D0A0();
  __break(1u);
  return result;
}

uint64_t sub_100045F50(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = sub_10012D0A0();
  __break(1u);
  return result;
}

uint64_t sub_100046048(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 32 * a1 + 32;
    unint64_t v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = sub_10012D0A0();
  __break(1u);
  return result;
}

char *sub_100046140(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + 32 * a1 + 32);
    unint64_t v6 = &__dst[32 * v4];
    if (v5 >= v6 || &v5[32 * v4] <= __dst)
    {
      memcpy(__dst, v5, 32 * v4);
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = (char *)sub_10012D0A0();
  __break(1u);
  return result;
}

uint64_t sub_100046234(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      sub_1000053D8(&qword_10016C798);
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  sub_100047184();
  uint64_t result = sub_10012D0A0();
  __break(1u);
  return result;
}

uint64_t sub_100046334(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    uint64_t v9 = *(void *)(a5(0) - 8);
    uint64_t v10 = a4 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v11 = *(void *)(v9 + 72);
    unint64_t v12 = v10 + v11 * a1;
    unint64_t v13 = a3 + v11 * v5;
    if (v12 >= v13 || v12 + v11 * v5 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v13;
    }
  }
  sub_100047184();
  uint64_t result = sub_10012D0A0();
  __break(1u);
  return result;
}

void sub_100046480(unint64_t a1, uint64_t a2, unint64_t a3)
{
}

void sub_100046498(unint64_t a1, uint64_t a2, unint64_t a3)
{
}

char *sub_1000464B0(char *__src, size_t __len, char *__dst)
{
  if ((__len & 0x8000000000000000) != 0)
  {
    __src = (char *)sub_10012D0A0();
    __break(1u);
  }
  else if (__dst != __src || &__src[__len] <= __dst)
  {
    return (char *)memmove(__dst, __src, __len);
  }
  return __src;
}

char *sub_100046540(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)sub_10012D0A0();
    __break(1u);
  }
  else if (__dst != __src || &__src[16 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 16 * a2);
  }
  return __src;
}

char *sub_1000465D4(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)sub_10012D0A0();
    __break(1u);
  }
  else if (__dst != __src || &__src[32 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 32 * a2);
  }
  return __src;
}

void sub_100046668(unint64_t a1, uint64_t a2, unint64_t a3)
{
}

void sub_100046680(unint64_t a1, uint64_t a2, unint64_t a3)
{
}

void sub_100046698(unint64_t a1, uint64_t a2, unint64_t a3)
{
}

char *sub_1000466B0(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    sub_100047184();
    __src = (char *)sub_1000472F8();
    __break(1u);
  }
  else if (__dst != __src || &__src[16 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 16 * a2);
  }
  return __src;
}

void sub_100046724(unint64_t a1, uint64_t a2, unint64_t a3, void (*a4)(void))
{
  if (a2 < 0)
  {
    sub_100047184();
    sub_1000472F8();
    __break(1u);
  }
  else if (a3 < a1 || (a4(0), sub_1000472C0(), a1 + *(void *)(v8 + 72) * a2 <= a3))
  {
    a4(0);
    sub_1000472E8();
    swift_arrayInitWithTakeFrontToBack();
  }
  else if (a3 != a1)
  {
    sub_1000472E8();
    swift_arrayInitWithTakeBackToFront();
  }
}

uint64_t sub_100046830(void (*a1)(char *, char *, uint64_t))
{
  return sub_10003F164(a1, *(void *)(v1 + 16), *(void (**)(uint64_t, void))(v1 + 24), *(void *)(v1 + 32), *(unsigned __int8 *)(v1 + 40));
}

uint64_t sub_100046854()
{
  sub_100045484(*(id *)(v0 + 16), *(unsigned __int8 *)(v0 + 24), *(unsigned char *)(v0 + 25));

  swift_release();

  return _swift_deallocObject(v0, 57, 7);
}

uint64_t sub_1000468A4(uint64_t a1)
{
  return sub_10003F7F0(a1, *(void **)(v1 + 16), *(unsigned __int8 *)(v1 + 24) | (*(unsigned __int8 *)(v1 + 25) << 8), *(void **)(v1 + 32), *(void (**)(void, void))(v1 + 40), *(void *)(v1 + 48), *(unsigned __int8 *)(v1 + 56));
}

id sub_1000468CC(id result, uint64_t a2, char a3)
{
  if ((a3 & 1) == 0) {
    return result;
  }
  return result;
}

uint64_t sub_1000468D8(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100005470(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100046928(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    self;
    uint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

id sub_100046964(unint64_t a1, uint64_t a2)
{
  unint64_t v4 = a2 & 0xC000000000000001;
  sub_1000454D4(a1, (a2 & 0xC000000000000001) == 0, a2);
  if (v4) {
    return (id)sub_10012CFF0();
  }
  else {
    return *(id *)(a2 + 8 * a1 + 32);
  }
}

void *sub_1000469C8(void *(*a1)(uint64_t *__return_ptr, uint64_t *), uint64_t a2, uint64_t a3, char a4)
{
  if (a4) {
    return 0;
  }
  uint64_t v6 = a3;
  uint64_t result = a1(&v7, &v6);
  if (!v4) {
    return (void *)v7;
  }
  return result;
}

uint64_t sub_100046A24(void *a1, SEL *a2)
{
  id v2 = [a1 *a2];
  if (!v2) {
    return 0;
  }
  uint64_t v3 = v2;
  uint64_t v4 = sub_10012CA40();

  return v4;
}

uint64_t sub_100046A84()
{
  swift_release();
  swift_release();
  uint64_t v1 = sub_1000472B0();

  return _swift_deallocObject(v1, v2, v3);
}

uint64_t sub_100046AC4(void (*a1)(unsigned char *, unsigned char *, uint64_t))
{
  return sub_10003FFBC(a1, *(NSObject **)(v1 + 16), *(void *)(v1 + 24), *(void (**)(unsigned char *, void))(v1 + 32), *(void *)(v1 + 40));
}

void sub_100046AE8()
{
}

uint64_t sub_100046B14()
{
  uint64_t v0 = sub_10012A6B0();
  sub_100047198(v0);
  sub_1000471E0();
  uint64_t v1 = swift_task_alloc();
  uint64_t v2 = (void *)sub_100047334(v1);
  *uint64_t v2 = v3;
  v2[1] = sub_100047164;
  uint64_t v4 = sub_100047204();
  return sub_1000408E4(v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_100046BEC(uint64_t a1)
{
  uint64_t v3 = *(int **)(v1 + 16);
  uint64_t v4 = swift_task_alloc();
  uint64_t v5 = (void *)sub_100047334(v4);
  *uint64_t v5 = v6;
  v5[1] = sub_100046C9C;
  uint64_t v7 = (uint64_t (*)(uint64_t, int *))((char *)&dword_10016C830 + dword_10016C830);
  return v7(a1, v3);
}

uint64_t sub_100046C9C()
{
  sub_100047290();
  sub_10004716C();
  uint64_t v1 = *v0;
  sub_1000471B0();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  sub_100047328();
  return v3();
}

uint64_t sub_100046D5C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000053D8(&qword_10016C850);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100046DC4(uint64_t a1, uint64_t *a2)
{
  sub_1000053D8(a2);
  sub_1000472C0();
  sub_10000B424();
  v3();
  return a1;
}

uint64_t sub_100046E18()
{
  return sub_100046E20(40);
}

uint64_t sub_100046E20(uint64_t a1)
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v1, a1, 7);
}

uint64_t sub_100046E6C(uint64_t a1)
{
  return sub_1000415CC(a1, *(void *)(v1 + 16), *(void (**)(char *, void))(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_100046E90()
{
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v0 = sub_1000472B0();

  return _swift_deallocObject(v0, v1, v2);
}

void sub_100046EC8()
{
}

uint64_t sub_100046EF4()
{
  uint64_t v1 = sub_10012A6B0();
  sub_10000DB98();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v6 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v7 = (v6 + 40) & ~v6;
  uint64_t v8 = v6 | 7;
  unint64_t v9 = ((*(void *)(v5 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  swift_unknownObjectRelease();

  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v0 + v7, v1);
  swift_release();

  return _swift_deallocObject(v0, v9, v8);
}

uint64_t sub_100046FC0()
{
  uint64_t v0 = sub_10012A6B0();
  sub_100047198(v0);
  sub_1000471E0();
  uint64_t v1 = swift_task_alloc();
  uint64_t v2 = (void *)sub_100047334(v1);
  *uint64_t v2 = v3;
  v2[1] = sub_100046C9C;
  uint64_t v4 = sub_100047204();
  return sub_100041C1C(v4, v5, v6, v7, v8, v9, v10);
}

id sub_100047098@<X0>(unint64_t *a1@<X0>, uint64_t *a2@<X1>, void *a3@<X8>)
{
  id result = sub_100046964(*a1, *a2);
  if (!v3) {
    *a3 = result;
  }
  return result;
}

id sub_1000470D8@<X0>(unint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_100047098(a1, *(uint64_t **)(v2 + 16), a2);
}

uint64_t sub_1000470F8(uint64_t a1)
{
  uint64_t v2 = sub_10012A380();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100047198(uint64_t a1)
{
  return a1 - 8;
}

uint64_t sub_100047204()
{
  return v0;
}

BOOL sub_100047228(os_log_type_t a1)
{
  return os_log_type_enabled(v1, a1);
}

BOOL sub_100047244(os_log_type_t a1)
{
  return os_log_type_enabled(v1, a1);
}

uint64_t sub_10004729C()
{
  return sub_100046E20(41);
}

uint64_t sub_1000472B0()
{
  return v0;
}

uint64_t sub_1000472E8()
{
  return v0;
}

uint64_t sub_1000472F8()
{
  return sub_10012D0A0();
}

_WORD *sub_10004731C(_WORD *result)
{
  *id result = 0;
  return result;
}

uint64_t sub_100047328()
{
  return v0 + 8;
}

uint64_t sub_100047334(uint64_t result)
{
  *(void *)(v1 + 16) = result;
  return result;
}

uint64_t sub_100047344()
{
  return 0;
}

uint64_t sub_100047354()
{
  return swift_task_dealloc();
}

void sub_100047378(float a1)
{
  float *v1 = a1;
}

uint64_t sub_100047390(uint64_t result)
{
  *(void *)(v2 + 16) = v1;
  *(void *)(v2 + 24) = 2 * ((result - 32) / 16);
  return result;
}

uint64_t sub_1000473B8()
{
  *(void *)(v0 + 16) = 0;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1000473D0(uint64_t a1)
{
  _s13WeatherWidget20WeatherDataViewModelOwst_0(v1, 1, 1, a1);
  return v1;
}

void sub_1000473FC(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v5, v4, a4, v6, 2u);
}

void sub_10004741C(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v5, a4, v6, 2u);
}

_WORD *sub_10004743C(_WORD *result)
{
  *id result = 0;
  return result;
}

uint64_t sub_100047448(uint64_t a1, uint64_t a2)
{
  sub_10000D7A4(a1, a2);
  return sub_10012AB40();
}

uint64_t sub_100047470()
{
  return swift_slowAlloc();
}

uint64_t sub_100047488@<X0>(uint64_t a1@<X8>)
{
  uint64_t v77 = a1;
  uint64_t v67 = type metadata accessor for InstantWeatherViewModel();
  sub_10000B3FC();
  __chkstk_darwin(v2);
  sub_10000DC50();
  uint64_t v5 = v4 - v3;
  sub_10012C410();
  sub_10000DB98();
  uint64_t v75 = v7;
  uint64_t v76 = v6;
  __chkstk_darwin(v6);
  sub_10000DC50();
  uint64_t v74 = v9 - v8;
  sub_100129920();
  sub_10000DB98();
  uint64_t v72 = v11;
  uint64_t v73 = v10;
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v68 = (char *)v65 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v69 = (char *)v65 - v14;
  sub_10012BBA0();
  sub_10000DB98();
  uint64_t v70 = v16;
  uint64_t v71 = v15;
  __chkstk_darwin(v15);
  sub_10000DC50();
  type metadata accessor for AggregateWeatherViewModel(0);
  sub_10000B3FC();
  __chkstk_darwin(v17);
  sub_10000DC50();
  uint64_t v20 = v19 - v18;
  uint64_t v21 = type metadata accessor for WeatherDataViewModel();
  sub_10000B3FC();
  uint64_t v23 = __chkstk_darwin(v22);
  BOOL v25 = (char *)v65 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  unint64_t v27 = (char *)v65 - v26;
  type metadata accessor for ForecastEntry.Model(0);
  sub_10000B3FC();
  __chkstk_darwin(v28);
  sub_10000DC50();
  BOOL v31 = (unsigned char *)(v30 - v29);
  uint64_t v32 = type metadata accessor for ForecastEntry(0);
  sub_100012588(v1 + *(int *)(v32 + 28), (uint64_t)v31, (void (*)(void))type metadata accessor for ForecastEntry.Model);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    uint64_t v49 = v77;
    if (*v31) {
      uint64_t v50 = 1;
    }
    else {
      uint64_t v50 = 2;
    }
    uint64_t v51 = v76;
    return _s13WeatherWidget20WeatherDataViewModelOwst_0(v49, v50, 2, v51);
  }
  sub_100047B60((uint64_t)v31, (uint64_t)v27, (void (*)(void))type metadata accessor for WeatherDataViewModel);
  sub_100012588((uint64_t)v27, (uint64_t)v25, (void (*)(void))type metadata accessor for WeatherDataViewModel);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    sub_100047B60((uint64_t)v25, v20, (void (*)(void))type metadata accessor for AggregateWeatherViewModel);
    if (qword_10016AE28 != -1) {
      swift_once();
    }
    uint64_t v52 = sub_10012AB60();
    sub_10000D7A4(v52, (uint64_t)qword_100181C40);
    uint64_t v53 = sub_10012AB40();
    os_log_type_t v54 = sub_10012CD60();
    if (os_log_type_enabled(v53, v54))
    {
      unsigned int v55 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unsigned int v55 = 0;
      _os_log_impl((void *)&_mh_execute_header, v53, v54, "Making Location complication view model entry from aggregate weather", v55, 2u);
      swift_slowDealloc();
    }

    sub_10012C240();
    uint64_t v5 = (uint64_t)v69;
    sub_10012BB40();
    uint64_t v56 = sub_10012BB60();
    uint64_t v66 = v57;
    uint64_t v67 = v56;
    sub_10012A680();
    uint64_t v58 = sub_100047C30();
    v59(v58, v5, v31);
    uint64_t v60 = v74;
    sub_10012C400();
    (*(void (**)(uint64_t, unsigned char *))(v21 + 8))(v5, v31);
    uint64_t v61 = sub_100047C18();
    v62(v61);
    sub_100047BC0(v20, (void (*)(void))type metadata accessor for AggregateWeatherViewModel);
    sub_100047BC0((uint64_t)v27, (void (*)(void))type metadata accessor for WeatherDataViewModel);
    uint64_t v46 = sub_100047C48();
    uint64_t v48 = v60;
    goto LABEL_18;
  }
  if (EnumCaseMultiPayload == 1)
  {
    sub_100047B60((uint64_t)v25, v5, (void (*)(void))type metadata accessor for InstantWeatherViewModel);
    if (qword_10016AE28 != -1) {
      swift_once();
    }
    uint64_t v34 = sub_10012AB60();
    sub_10000D7A4(v34, (uint64_t)qword_100181C40);
    char v35 = sub_10012AB40();
    os_log_type_t v36 = sub_10012CD60();
    if (os_log_type_enabled(v35, v36))
    {
      uint64_t v37 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v37 = 0;
      _os_log_impl((void *)&_mh_execute_header, v35, v36, "Making Location complication view model entry from interpolated instant weather", v37, 2u);
      swift_slowDealloc();
    }

    sub_10012C240();
    uint64_t v38 = v69;
    sub_10012BB40();
    uint64_t v39 = sub_10012BB60();
    v65[1] = v40;
    uint64_t v66 = v39;
    sub_10012A680();
    uint64_t v41 = sub_100047C30();
    v42(v41, v38, v31);
    uint64_t v43 = v74;
    sub_10012C400();
    (*(void (**)(char *, unsigned char *))(v21 + 8))(v38, v31);
    uint64_t v44 = sub_100047C18();
    v45(v44);
    sub_100047BC0(v5, (void (*)(void))type metadata accessor for InstantWeatherViewModel);
    sub_100047BC0((uint64_t)v27, (void (*)(void))type metadata accessor for WeatherDataViewModel);
    uint64_t v46 = sub_100047C48();
    uint64_t v48 = v43;
LABEL_18:
    uint64_t v63 = v76;
    v47(v46, v48, v76);
    uint64_t v49 = v5;
    uint64_t v50 = 0;
    uint64_t v51 = v63;
    return _s13WeatherWidget20WeatherDataViewModelOwst_0(v49, v50, 2, v51);
  }
  sub_100047BC0((uint64_t)v27, (void (*)(void))type metadata accessor for WeatherDataViewModel);
  _s13WeatherWidget20WeatherDataViewModelOwst_0(v77, 1, 2, v76);
  return sub_100047BC0((uint64_t)v25, (void (*)(void))type metadata accessor for WeatherDataViewModel);
}

uint64_t sub_100047B60(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_10000B3FC();
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(a2, a1);
  return a2;
}

uint64_t sub_100047BC0(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_10000B3FC();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_100047C18()
{
  return v0;
}

uint64_t sub_100047C30()
{
  return *(void *)(v0 - 160);
}

uint64_t sub_100047C48()
{
  return *(void *)(v0 - 88);
}

void *sub_100047C5C(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) == 0)
  {
    sub_1000053D8(&qword_10016B410);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_10012C800();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v10 = a3[5];
    uint64_t v11 = (void *)((char *)a1 + v10);
    uint64_t v12 = (void *)((char *)a2 + v10);
    sub_1000053D8(&qword_10016B9D8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v13 = sub_10012AFE0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
    }
    else
    {
      *uint64_t v11 = *v12;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v14 = a3[6];
    uint64_t v15 = (char *)a1 + v14;
    uint64_t v16 = (char *)a2 + v14;
    uint64_t v17 = *(void *)v16;
    char v18 = v16[8];
    sub_10000886C(*(void *)v16, v18);
    *(void *)uint64_t v15 = v17;
    v15[8] = v18;
    uint64_t v19 = a3[7];
    uint64_t v20 = (void *)((char *)a1 + v19);
    uint64_t v21 = (void *)((char *)a2 + v19);
    sub_1000053D8(&qword_10016B9E0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v22 = sub_10012B2D0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
    }
    else
    {
      *uint64_t v20 = *v21;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v120 = a3;
    uint64_t v121 = a2;
    uint64_t v23 = a3[8];
    uint64_t v122 = a1;
    uint64_t v24 = (char *)a1 + v23;
    BOOL v25 = (char *)a2 + v23;
    uint64_t v26 = sub_100129300();
    uint64_t v118 = *(void (**)(char *, char *))(*(void *)(v26 - 8) + 16);
    uint64_t v119 = v26;
    v118(v24, v25);
    uint64_t v27 = type metadata accessor for ForecastEntry(0);
    uint64_t v28 = *(int *)(v27 + 20);
    uint64_t v29 = &v24[v28];
    uint64_t v30 = &v25[v28];
    uint64_t v31 = sub_10012C920();
    if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v30, 1, v31))
    {
      uint64_t v32 = sub_1000053D8(&qword_10016B418);
      memcpy(v29, v30, *(void *)(*(void *)(v32 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16))(v29, v30, v31);
      _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v29, 0, 1, v31);
    }
    uint64_t v123 = v27;
    char v124 = v25;
    uint64_t v33 = *(int *)(v27 + 24);
    uint64_t v34 = &v24[v33];
    char v35 = &v25[v33];
    uint64_t v36 = *(void *)&v25[v33 + 8];
    *(void *)uint64_t v34 = *(void *)&v25[v33];
    *((void *)v34 + 1) = v36;
    uint64_t v37 = *(void *)&v25[v33 + 24];
    *((void *)v34 + 2) = *(void *)&v25[v33 + 16];
    *((void *)v34 + 3) = v37;
    uint64_t v38 = *(void *)&v25[v33 + 32];
    uint64_t v39 = *((void *)v35 + 5);
    *((void *)v34 + 4) = v38;
    *((void *)v34 + 5) = v39;
    *((_DWORD *)v34 + 12) = *((_DWORD *)v35 + 12);
    uint64_t v40 = type metadata accessor for WidgetContext();
    uint64_t v41 = *(int *)(v40 + 40);
    uint64_t v42 = &v34[v41];
    uint64_t v43 = &v35[v41];
    uint64_t v44 = sub_100129220();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v43, 1, v44))
    {
      uint64_t v45 = sub_1000053D8(&qword_10016B420);
      memcpy(v42, v43, *(void *)(*(void *)(v45 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v44 - 8) + 16))(v42, v43, v44);
      _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v42, 0, 1, v44);
    }
    uint64_t v46 = *(int *)(v40 + 44);
    uint64_t v47 = &v34[v46];
    uint64_t v48 = &v35[v46];
    *(void *)uint64_t v47 = *(void *)v48;
    v47[8] = v48[8];
    uint64_t v49 = *(int *)(v123 + 28);
    uint64_t v50 = &v24[v49];
    uint64_t v51 = &v124[v49];
    uint64_t v52 = type metadata accessor for ForecastEntry.Model(0);
    swift_bridgeObjectRetain();
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      memcpy(v50, v51, *(void *)(*(void *)(v52 - 8) + 64));
      uint64_t v64 = v121;
      uint64_t v9 = v122;
      unint64_t v65 = v120;
LABEL_39:
      uint64_t v109 = v65[9];
      uint64_t v110 = v65[10];
      uint64_t v111 = (void *)((char *)v9 + v109);
      uint64_t v112 = (void *)((char *)v64 + v109);
      uint64_t v113 = v112[1];
      *uint64_t v111 = *v112;
      v111[1] = v113;
      *((unsigned char *)v9 + v110) = *((unsigned char *)v64 + v110);
      swift_bridgeObjectRetain();
      goto LABEL_40;
    }
    type metadata accessor for WeatherDataViewModel();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v66 = sub_10012BE90();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v66 - 8) + 16))(v50, v51, v66);
    }
    else
    {
      if (EnumCaseMultiPayload != 1)
      {
        uint64_t v117 = v44;
        uint64_t v67 = sub_100129330();
        uint64_t v68 = (void (**)(void *, const void *))(*(void *)(v67 - 8) + 16);
        uint64_t v115 = *v68;
        uint64_t v116 = v67;
        (*v68)(v50, v51);
        uint64_t v69 = (int *)type metadata accessor for AggregateWeatherViewModel(0);
        uint64_t v70 = v69[5];
        uint64_t v71 = &v50[v70];
        uint64_t v72 = &v51[v70];
        uint64_t v73 = sub_10012A6B0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v73 - 8) + 16))(v71, v72, v73);
        uint64_t v74 = v69[6];
        uint64_t v75 = &v50[v74];
        uint64_t v76 = &v51[v74];
        uint64_t v77 = sub_10012C250();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v77 - 8) + 16))(v75, v76, v77);
        *(void *)&v50[v69[7]] = *(void *)&v51[v69[7]];
        *(void *)&v50[v69[8]] = *(void *)&v51[v69[8]];
        uint64_t v78 = v69[9];
        uint64_t v79 = &v50[v78];
        uint64_t v80 = &v51[v78];
        unint64_t v81 = (int *)type metadata accessor for AirQualityViewModel();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v80, 1, (uint64_t)v81))
        {
          uint64_t v82 = sub_1000053D8(&qword_10016B428);
          memcpy(v79, v80, *(void *)(*(void *)(v82 - 8) + 64));
        }
        else
        {
          uint64_t v83 = (uint64_t)v79;
          ((void (*)(char *, char *, uint64_t))v115)(v79, v80, v116);
          ((void (*)(char *, char *, uint64_t))v118)(&v79[v81[5]], &v80[v81[5]], v119);
          *(void *)&v79[v81[6]] = *(void *)&v80[v81[6]];
          uint64_t v84 = v81[7];
          uint64_t v85 = &v79[v84];
          uint64_t v86 = &v80[v84];
          uint64_t v87 = sub_100129B70();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v87 - 8) + 16))(v85, v86, v87);
          uint64_t v88 = v81[8];
          uint64_t v89 = v83 + v88;
          uint64_t v90 = &v80[v88];
          uint64_t v91 = sub_100129C50();
          (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v91 - 8) + 16))(v89, v90, v91);
          _s13WeatherWidget20WeatherDataViewModelOwst_0(v83, 0, 1, (uint64_t)v81);
        }
        uint64_t v92 = v69[10];
        uint64_t v93 = &v50[v92];
        uint64_t v94 = &v51[v92];
        uint64_t v95 = sub_10012C6B0();
        if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v94, 1, v95))
        {
          uint64_t v96 = sub_1000053D8(&qword_10016B430);
          memcpy(v93, v94, *(void *)(*(void *)(v96 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v95 - 8) + 16))(v93, v94, v95);
          _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v93, 0, 1, v95);
        }
        *(void *)&v50[v69[11]] = *(void *)&v51[v69[11]];
        uint64_t v97 = v69[12];
        uint64_t v98 = &v50[v97];
        char v99 = &v51[v97];
        *(void *)uint64_t v98 = *(void *)v99;
        *((_WORD *)v98 + 4) = *((_WORD *)v99 + 4);
        uint64_t v100 = v69[13];
        double v101 = &v50[v100];
        uint64_t v102 = &v51[v100];
        swift_bridgeObjectRetain();
        if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v102, 1, v117))
        {
          uint64_t v103 = sub_1000053D8(&qword_10016B420);
          memcpy(v101, v102, *(void *)(*(void *)(v103 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v117 - 8) + 16))(v101, v102, v117);
          _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v101, 0, 1, v117);
        }
        uint64_t v104 = v69[14];
        uint64_t v105 = &v50[v104];
        int v106 = &v51[v104];
        uint64_t v107 = type metadata accessor for AggregateWeatherViewModel.SunEvent(0);
        if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v106, 1, v107))
        {
          uint64_t v108 = sub_1000053D8(&qword_10016B438);
          memcpy(v105, v106, *(void *)(*(void *)(v108 - 8) + 64));
        }
        else
        {
          swift_getEnumCaseMultiPayload();
          ((void (*)(char *, char *, uint64_t))v118)(v105, v106, v119);
          swift_storeEnumTagMultiPayload();
          _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v105, 0, 1, v107);
        }
        uint64_t v64 = v121;
        uint64_t v9 = v122;
        unint64_t v65 = v120;
        goto LABEL_38;
      }
      uint64_t v54 = sub_100129330();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v54 - 8) + 16))(v50, v51, v54);
      uint64_t v55 = type metadata accessor for InstantWeatherViewModel();
      uint64_t v56 = *(int *)(v55 + 20);
      uint64_t v57 = &v50[v56];
      uint64_t v58 = &v51[v56];
      uint64_t v59 = sub_10012A6B0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v59 - 8) + 16))(v57, v58, v59);
      uint64_t v60 = *(int *)(v55 + 24);
      uint64_t v61 = &v50[v60];
      uint64_t v62 = &v51[v60];
      uint64_t v63 = sub_10012C250();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v63 - 8) + 16))(v61, v62, v63);
    }
    uint64_t v64 = v121;
    uint64_t v9 = v122;
    unint64_t v65 = v120;
LABEL_38:
    swift_storeEnumTagMultiPayload();
    swift_storeEnumTagMultiPayload();
    goto LABEL_39;
  }
  uint64_t v8 = *a2;
  *a1 = *a2;
  uint64_t v9 = (void *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
LABEL_40:
  swift_retain();
  return v9;
}

uint64_t sub_100048768(uint64_t a1, int *a2)
{
  sub_1000053D8(&qword_10016B410);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_10012C800();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }
  uint64_t v5 = a1 + a2[5];
  sub_1000053D8(&qword_10016B9D8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_10012AFE0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  }
  else
  {
    swift_release();
  }
  sub_100008BF8(*(void *)(a1 + a2[6]), *(unsigned char *)(a1 + a2[6] + 8));
  uint64_t v7 = a1 + a2[7];
  sub_1000053D8(&qword_10016B9E0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = sub_10012B2D0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  }
  else
  {
    swift_release();
  }
  uint64_t v9 = a1 + a2[8];
  uint64_t v10 = sub_100129300();
  uint64_t v11 = (void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8);
  uint64_t v46 = *v11;
  (*v11)(v9, v10);
  uint64_t v12 = (int *)type metadata accessor for ForecastEntry(0);
  uint64_t v13 = v9 + v12[5];
  uint64_t v14 = sub_10012C920();
  if (!_s13WeatherWidget20WeatherDataViewModelOwet_0(v13, 1, v14)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
  }
  uint64_t v15 = v9 + v12[6];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v16 = v15 + *(int *)(type metadata accessor for WidgetContext() + 40);
  uint64_t v17 = sub_100129220();
  if (!_s13WeatherWidget20WeatherDataViewModelOwet_0(v16, 1, v17)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v17 - 8) + 8))(v16, v17);
  }
  swift_bridgeObjectRelease();
  uint64_t v18 = v9 + v12[7];
  type metadata accessor for ForecastEntry.Model(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    type metadata accessor for WeatherDataViewModel();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 2:
        uint64_t v37 = sub_10012BE90();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v37 - 8) + 8))(v18, v37);
        break;
      case 1:
        uint64_t v38 = sub_100129330();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v38 - 8) + 8))(v18, v38);
        uint64_t v39 = type metadata accessor for InstantWeatherViewModel();
        uint64_t v40 = v18 + *(int *)(v39 + 20);
        uint64_t v41 = sub_10012A6B0();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v41 - 8) + 8))(v40, v41);
        uint64_t v42 = v18 + *(int *)(v39 + 24);
        uint64_t v43 = sub_10012C250();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v43 - 8) + 8))(v42, v43);
        break;
      case 0:
        uint64_t v20 = sub_100129330();
        uint64_t v45 = *(void (**)(uint64_t, uint64_t))(*(void *)(v20 - 8) + 8);
        v45(v18, v20);
        uint64_t v21 = (int *)type metadata accessor for AggregateWeatherViewModel(0);
        uint64_t v22 = v18 + v21[5];
        uint64_t v23 = sub_10012A6B0();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v23 - 8) + 8))(v22, v23);
        uint64_t v24 = v18 + v21[6];
        uint64_t v25 = sub_10012C250();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v25 - 8) + 8))(v24, v25);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v26 = v18 + v21[9];
        uint64_t v27 = (int *)type metadata accessor for AirQualityViewModel();
        if (!_s13WeatherWidget20WeatherDataViewModelOwet_0(v26, 1, (uint64_t)v27))
        {
          v45(v26, v20);
          v46(v26 + v27[5], v10);
          uint64_t v28 = v26 + v27[7];
          uint64_t v29 = sub_100129B70();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v29 - 8) + 8))(v28, v29);
          uint64_t v30 = v26 + v27[8];
          uint64_t v31 = sub_100129C50();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v31 - 8) + 8))(v30, v31);
        }
        uint64_t v32 = v18 + v21[10];
        uint64_t v33 = sub_10012C6B0();
        if (!_s13WeatherWidget20WeatherDataViewModelOwet_0(v32, 1, v33)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v33 - 8) + 8))(v32, v33);
        }
        swift_bridgeObjectRelease();
        uint64_t v34 = v18 + v21[13];
        if (!_s13WeatherWidget20WeatherDataViewModelOwet_0(v34, 1, v17)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v17 - 8) + 8))(v34, v17);
        }
        uint64_t v35 = v18 + v21[14];
        uint64_t v36 = type metadata accessor for AggregateWeatherViewModel.SunEvent(0);
        if (!_s13WeatherWidget20WeatherDataViewModelOwet_0(v35, 1, v36)) {
          v46(v35, v10);
        }
        break;
    }
  }
  swift_bridgeObjectRelease();

  return swift_release();
}

void *sub_100048E54(void *a1, void *a2, int *a3)
{
  sub_1000053D8(&qword_10016B410);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_10012C800();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)((char *)a1 + v7);
  uint64_t v9 = (void *)((char *)a2 + v7);
  sub_1000053D8(&qword_10016B9D8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = sub_10012AFE0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  }
  else
  {
    *uint64_t v8 = *v9;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v11 = a3[6];
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = *(void *)v13;
  char v15 = v13[8];
  sub_10000886C(*(void *)v13, v15);
  *(void *)uint64_t v12 = v14;
  v12[8] = v15;
  uint64_t v16 = a3[7];
  uint64_t v17 = (void *)((char *)a1 + v16);
  uint64_t v18 = (void *)((char *)a2 + v16);
  sub_1000053D8(&qword_10016B9E0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v19 = sub_10012B2D0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
  }
  else
  {
    *uint64_t v17 = *v18;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v117 = a3;
  uint64_t v118 = a2;
  uint64_t v20 = a3[8];
  uint64_t v119 = a1;
  uint64_t v21 = (char *)a1 + v20;
  uint64_t v22 = (char *)a2 + v20;
  uint64_t v23 = sub_100129300();
  uint64_t v115 = *(void (**)(char *, char *))(*(void *)(v23 - 8) + 16);
  uint64_t v116 = v23;
  v115(v21, v22);
  uint64_t v24 = type metadata accessor for ForecastEntry(0);
  uint64_t v25 = *(int *)(v24 + 20);
  uint64_t v26 = &v21[v25];
  uint64_t v27 = &v22[v25];
  uint64_t v28 = sub_10012C920();
  if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v27, 1, v28))
  {
    uint64_t v29 = sub_1000053D8(&qword_10016B418);
    memcpy(v26, v27, *(void *)(*(void *)(v29 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 16))(v26, v27, v28);
    _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v26, 0, 1, v28);
  }
  uint64_t v120 = v24;
  uint64_t v30 = *(int *)(v24 + 24);
  uint64_t v31 = &v21[v30];
  uint64_t v32 = &v22[v30];
  uint64_t v33 = *(void *)&v22[v30 + 8];
  *(void *)uint64_t v31 = *(void *)&v22[v30];
  *((void *)v31 + 1) = v33;
  uint64_t v34 = *(void *)&v22[v30 + 24];
  *((void *)v31 + 2) = *(void *)&v22[v30 + 16];
  *((void *)v31 + 3) = v34;
  uint64_t v35 = *(void *)&v22[v30 + 40];
  *((void *)v31 + 4) = *(void *)&v22[v30 + 32];
  *((void *)v31 + 5) = v35;
  *((_DWORD *)v31 + 12) = *(_DWORD *)&v22[v30 + 48];
  uint64_t v36 = type metadata accessor for WidgetContext();
  uint64_t v37 = *(int *)(v36 + 40);
  uint64_t v38 = &v31[v37];
  uint64_t v39 = &v32[v37];
  uint64_t v40 = sub_100129220();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v39, 1, v40))
  {
    uint64_t v41 = sub_1000053D8(&qword_10016B420);
    memcpy(v38, v39, *(void *)(*(void *)(v41 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v40 - 8) + 16))(v38, v39, v40);
    _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v38, 0, 1, v40);
  }
  uint64_t v42 = *(int *)(v36 + 44);
  uint64_t v43 = &v31[v42];
  uint64_t v44 = &v32[v42];
  *(void *)uint64_t v43 = *(void *)v44;
  v43[8] = v44[8];
  uint64_t v45 = *(int *)(v120 + 28);
  uint64_t v46 = &v21[v45];
  uint64_t v47 = &v22[v45];
  uint64_t v48 = type metadata accessor for ForecastEntry.Model(0);
  swift_bridgeObjectRetain();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    type metadata accessor for WeatherDataViewModel();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v63 = sub_10012BE90();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v63 - 8) + 16))(v46, v47, v63);
    }
    else
    {
      if (EnumCaseMultiPayload != 1)
      {
        uint64_t v114 = v40;
        uint64_t v64 = sub_100129330();
        unint64_t v65 = (void (**)(void *, const void *))(*(void *)(v64 - 8) + 16);
        uint64_t v112 = *v65;
        uint64_t v113 = v64;
        (*v65)(v46, v47);
        uint64_t v66 = (int *)type metadata accessor for AggregateWeatherViewModel(0);
        uint64_t v67 = v66[5];
        uint64_t v68 = &v46[v67];
        uint64_t v69 = &v47[v67];
        uint64_t v70 = sub_10012A6B0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v70 - 8) + 16))(v68, v69, v70);
        uint64_t v71 = v66[6];
        uint64_t v72 = &v46[v71];
        uint64_t v73 = &v47[v71];
        uint64_t v74 = sub_10012C250();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v74 - 8) + 16))(v72, v73, v74);
        *(void *)&v46[v66[7]] = *(void *)&v47[v66[7]];
        *(void *)&v46[v66[8]] = *(void *)&v47[v66[8]];
        uint64_t v75 = v66[9];
        uint64_t v76 = &v46[v75];
        uint64_t v77 = &v47[v75];
        uint64_t v78 = (int *)type metadata accessor for AirQualityViewModel();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v77, 1, (uint64_t)v78))
        {
          uint64_t v79 = sub_1000053D8(&qword_10016B428);
          memcpy(v76, v77, *(void *)(*(void *)(v79 - 8) + 64));
        }
        else
        {
          uint64_t v80 = (uint64_t)v76;
          ((void (*)(char *, char *, uint64_t))v112)(v76, v77, v113);
          ((void (*)(char *, char *, uint64_t))v115)(&v76[v78[5]], &v77[v78[5]], v116);
          *(void *)&v76[v78[6]] = *(void *)&v77[v78[6]];
          uint64_t v81 = v78[7];
          uint64_t v82 = &v76[v81];
          uint64_t v83 = &v77[v81];
          uint64_t v84 = sub_100129B70();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v84 - 8) + 16))(v82, v83, v84);
          uint64_t v85 = v78[8];
          uint64_t v86 = v80 + v85;
          uint64_t v87 = &v77[v85];
          uint64_t v88 = sub_100129C50();
          (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v88 - 8) + 16))(v86, v87, v88);
          _s13WeatherWidget20WeatherDataViewModelOwst_0(v80, 0, 1, (uint64_t)v78);
        }
        uint64_t v89 = v66[10];
        uint64_t v90 = &v46[v89];
        uint64_t v91 = &v47[v89];
        uint64_t v92 = sub_10012C6B0();
        if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v91, 1, v92))
        {
          uint64_t v93 = sub_1000053D8(&qword_10016B430);
          memcpy(v90, v91, *(void *)(*(void *)(v93 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v92 - 8) + 16))(v90, v91, v92);
          _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v90, 0, 1, v92);
        }
        *(void *)&v46[v66[11]] = *(void *)&v47[v66[11]];
        uint64_t v94 = v66[12];
        uint64_t v95 = &v46[v94];
        uint64_t v96 = &v47[v94];
        *(void *)uint64_t v95 = *(void *)v96;
        *((_WORD *)v95 + 4) = *((_WORD *)v96 + 4);
        uint64_t v97 = v66[13];
        uint64_t v98 = &v46[v97];
        char v99 = &v47[v97];
        swift_bridgeObjectRetain();
        if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v99, 1, v114))
        {
          uint64_t v100 = sub_1000053D8(&qword_10016B420);
          memcpy(v98, v99, *(void *)(*(void *)(v100 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v114 - 8) + 16))(v98, v99, v114);
          _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v98, 0, 1, v114);
        }
        uint64_t v101 = v66[14];
        uint64_t v102 = &v46[v101];
        uint64_t v103 = &v47[v101];
        uint64_t v104 = type metadata accessor for AggregateWeatherViewModel.SunEvent(0);
        if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v103, 1, v104))
        {
          uint64_t v105 = sub_1000053D8(&qword_10016B438);
          memcpy(v102, v103, *(void *)(*(void *)(v105 - 8) + 64));
        }
        else
        {
          swift_getEnumCaseMultiPayload();
          ((void (*)(char *, char *, uint64_t))v115)(v102, v103, v116);
          swift_storeEnumTagMultiPayload();
          _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v102, 0, 1, v104);
        }
        uint64_t v61 = v118;
        uint64_t v60 = v119;
        uint64_t v62 = v117;
        goto LABEL_36;
      }
      uint64_t v50 = sub_100129330();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v50 - 8) + 16))(v46, v47, v50);
      uint64_t v51 = type metadata accessor for InstantWeatherViewModel();
      uint64_t v52 = *(int *)(v51 + 20);
      uint64_t v53 = &v46[v52];
      uint64_t v54 = &v47[v52];
      uint64_t v55 = sub_10012A6B0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v55 - 8) + 16))(v53, v54, v55);
      uint64_t v56 = *(int *)(v51 + 24);
      uint64_t v57 = &v46[v56];
      uint64_t v58 = &v47[v56];
      uint64_t v59 = sub_10012C250();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v59 - 8) + 16))(v57, v58, v59);
    }
    uint64_t v61 = v118;
    uint64_t v60 = v119;
    uint64_t v62 = v117;
LABEL_36:
    swift_storeEnumTagMultiPayload();
    swift_storeEnumTagMultiPayload();
    goto LABEL_37;
  }
  memcpy(v46, v47, *(void *)(*(void *)(v48 - 8) + 64));
  uint64_t v61 = v118;
  uint64_t v60 = v119;
  uint64_t v62 = v117;
LABEL_37:
  uint64_t v106 = v62[9];
  uint64_t v107 = v62[10];
  uint64_t v108 = (void *)((char *)v60 + v106);
  uint64_t v109 = (void *)((char *)v61 + v106);
  uint64_t v110 = v109[1];
  *uint64_t v108 = *v109;
  v108[1] = v110;
  *((unsigned char *)v60 + v107) = *((unsigned char *)v61 + v107);
  swift_bridgeObjectRetain();
  swift_retain();
  return v60;
}

void *sub_100049918(void *a1, void *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_10000D930((uint64_t)a1, &qword_10016B410);
    sub_1000053D8(&qword_10016B410);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_10012C800();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v7 = a3[5];
    uint64_t v8 = (void *)((char *)a1 + v7);
    uint64_t v9 = (void *)((char *)a2 + v7);
    sub_10000D930((uint64_t)a1 + v7, &qword_10016B9D8);
    sub_1000053D8(&qword_10016B9D8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v10 = sub_10012AFE0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    }
    else
    {
      *uint64_t v8 = *v9;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v11 = a3[6];
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = *(void *)v13;
  char v15 = v13[8];
  sub_10000886C(*(void *)v13, v15);
  uint64_t v16 = *(void *)v12;
  char v17 = v12[8];
  *(void *)uint64_t v12 = v14;
  v12[8] = v15;
  sub_100008BF8(v16, v17);
  if (a1 != a2)
  {
    uint64_t v18 = a3[7];
    uint64_t v19 = (void *)((char *)a1 + v18);
    uint64_t v20 = (void *)((char *)a2 + v18);
    sub_10000D930((uint64_t)a1 + v18, &qword_10016B9E0);
    sub_1000053D8(&qword_10016B9E0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v21 = sub_10012B2D0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v21 - 8) + 16))(v19, v20, v21);
    }
    else
    {
      *uint64_t v19 = *v20;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v120 = a3;
  uint64_t v121 = a2;
  uint64_t v22 = a3[8];
  uint64_t v23 = (char *)a1 + v22;
  uint64_t v24 = (char *)a2 + v22;
  uint64_t v25 = sub_100129300();
  uint64_t v117 = *(void *)(v25 - 8);
  uint64_t v118 = v25;
  (*(void (**)(char *, char *))(v117 + 24))(v23, v24);
  uint64_t v26 = (int *)type metadata accessor for ForecastEntry(0);
  uint64_t v27 = v26[5];
  uint64_t v28 = &v23[v27];
  uint64_t v29 = &v24[v27];
  uint64_t v30 = sub_10012C920();
  int v31 = _s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v28, 1, v30);
  int v32 = _s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v29, 1, v30);
  uint64_t v122 = a1;
  if (v31)
  {
    if (!v32)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 16))(v28, v29, v30);
      _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v28, 0, 1, v30);
      goto LABEL_20;
    }
    goto LABEL_19;
  }
  uint64_t v33 = *(void *)(v30 - 8);
  if (v32)
  {
    (*(void (**)(char *, uint64_t))(v33 + 8))(v28, v30);
LABEL_19:
    uint64_t v34 = sub_1000053D8(&qword_10016B418);
    memcpy(v28, v29, *(void *)(*(void *)(v34 - 8) + 64));
    goto LABEL_20;
  }
  (*(void (**)(char *, char *, uint64_t))(v33 + 24))(v28, v29, v30);
LABEL_20:
  uint64_t v35 = v26[6];
  uint64_t v36 = &v23[v35];
  uint64_t v37 = &v24[v35];
  *(void *)uint64_t v36 = *(void *)&v24[v35];
  *((void *)v36 + 1) = *(void *)&v24[v35 + 8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v36 + 2) = *((void *)v37 + 2);
  *((void *)v36 + 3) = *((void *)v37 + 3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v36 + 4) = *((void *)v37 + 4);
  *((void *)v36 + 5) = *((void *)v37 + 5);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v36[48] = v37[48];
  v36[49] = v37[49];
  v36[50] = v37[50];
  v36[51] = v37[51];
  uint64_t v38 = type metadata accessor for WidgetContext();
  uint64_t v39 = *(int *)(v38 + 40);
  uint64_t v40 = &v36[v39];
  uint64_t v41 = &v37[v39];
  uint64_t v42 = sub_100129220();
  int v43 = _s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v40, 1, v42);
  int v44 = _s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v41, 1, v42);
  uint64_t v119 = v42;
  if (v43)
  {
    uint64_t v45 = v122;
    if (v44)
    {
      uint64_t v46 = sub_1000053D8(&qword_10016B420);
      memcpy(v40, v41, *(void *)(*(void *)(v46 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v119 - 8) + 16))(v40, v41, v119);
      uint64_t v45 = v122;
      _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v40, 0, 1, v119);
    }
  }
  else
  {
    uint64_t v47 = *(void *)(v42 - 8);
    if (v44)
    {
      (*(void (**)(char *, uint64_t))(v47 + 8))(v40, v42);
      uint64_t v48 = sub_1000053D8(&qword_10016B420);
      memcpy(v40, v41, *(void *)(*(void *)(v48 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v47 + 24))(v40, v41, v42);
    }
    uint64_t v45 = v122;
  }
  uint64_t v49 = *(int *)(v38 + 44);
  uint64_t v50 = &v36[v49];
  uint64_t v51 = &v37[v49];
  *(void *)uint64_t v50 = *(void *)&v37[v49];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v50[8] = v51[8];
  uint64_t v52 = v121;
  if (v45 != v121)
  {
    uint64_t v53 = v26[7];
    uint64_t v54 = &v23[v53];
    uint64_t v55 = &v24[v53];
    sub_100056FD4((uint64_t)v54, (void (*)(void))type metadata accessor for ForecastEntry.Model);
    uint64_t v56 = type metadata accessor for ForecastEntry.Model(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      type metadata accessor for WeatherDataViewModel();
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        uint64_t v68 = sub_10012BE90();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v68 - 8) + 16))(v54, v55, v68);
      }
      else if (EnumCaseMultiPayload == 1)
      {
        uint64_t v58 = sub_100129330();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v58 - 8) + 16))(v54, v55, v58);
        uint64_t v59 = type metadata accessor for InstantWeatherViewModel();
        uint64_t v60 = *(int *)(v59 + 20);
        uint64_t v61 = &v54[v60];
        uint64_t v62 = &v55[v60];
        uint64_t v63 = sub_10012A6B0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v63 - 8) + 16))(v61, v62, v63);
        uint64_t v64 = *(int *)(v59 + 24);
        unint64_t v65 = &v54[v64];
        uint64_t v66 = &v55[v64];
        uint64_t v67 = sub_10012C250();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v67 - 8) + 16))(v65, v66, v67);
      }
      else
      {
        uint64_t v69 = sub_100129330();
        uint64_t v70 = (void (**)(void *, const void *))(*(void *)(v69 - 8) + 16);
        uint64_t v115 = *v70;
        uint64_t v116 = v69;
        (*v70)(v54, v55);
        uint64_t v71 = (int *)type metadata accessor for AggregateWeatherViewModel(0);
        uint64_t v72 = v71[5];
        uint64_t v73 = &v54[v72];
        uint64_t v74 = &v55[v72];
        uint64_t v75 = sub_10012A6B0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v75 - 8) + 16))(v73, v74, v75);
        uint64_t v76 = v71[6];
        uint64_t v77 = &v54[v76];
        uint64_t v78 = &v55[v76];
        uint64_t v79 = sub_10012C250();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v79 - 8) + 16))(v77, v78, v79);
        *(void *)&v54[v71[7]] = *(void *)&v55[v71[7]];
        *(void *)&v54[v71[8]] = *(void *)&v55[v71[8]];
        uint64_t v123 = v71;
        uint64_t v80 = v71[9];
        uint64_t v81 = &v54[v80];
        uint64_t v82 = &v55[v80];
        uint64_t v83 = (int *)type metadata accessor for AirQualityViewModel();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v82, 1, (uint64_t)v83))
        {
          uint64_t v84 = sub_1000053D8(&qword_10016B428);
          memcpy(v81, v82, *(void *)(*(void *)(v84 - 8) + 64));
        }
        else
        {
          ((void (*)(char *, char *, uint64_t))v115)(v81, v82, v116);
          (*(void (**)(char *, char *, uint64_t))(v117 + 16))(&v81[v83[5]], &v82[v83[5]], v118);
          *(void *)&v81[v83[6]] = *(void *)&v82[v83[6]];
          uint64_t v85 = v83[7];
          uint64_t v86 = &v81[v85];
          uint64_t v87 = &v82[v85];
          uint64_t v88 = sub_100129B70();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v88 - 8) + 16))(v86, v87, v88);
          uint64_t v89 = v83[8];
          uint64_t v90 = &v81[v89];
          uint64_t v91 = &v82[v89];
          uint64_t v92 = sub_100129C50();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v92 - 8) + 16))(v90, v91, v92);
          _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v81, 0, 1, (uint64_t)v83);
        }
        uint64_t v93 = v123[10];
        uint64_t v94 = &v54[v93];
        uint64_t v95 = &v55[v93];
        uint64_t v96 = sub_10012C6B0();
        if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v95, 1, v96))
        {
          uint64_t v97 = sub_1000053D8(&qword_10016B430);
          memcpy(v94, v95, *(void *)(*(void *)(v97 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v96 - 8) + 16))(v94, v95, v96);
          _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v94, 0, 1, v96);
        }
        *(void *)&v54[v123[11]] = *(void *)&v55[v123[11]];
        uint64_t v98 = v123[12];
        char v99 = &v54[v98];
        uint64_t v100 = &v55[v98];
        uint64_t v101 = *(void *)v100;
        *((_WORD *)v99 + 4) = *((_WORD *)v100 + 4);
        *(void *)char v99 = v101;
        uint64_t v102 = v123[13];
        uint64_t v103 = &v54[v102];
        uint64_t v104 = &v55[v102];
        swift_bridgeObjectRetain();
        if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v104, 1, v119))
        {
          uint64_t v105 = sub_1000053D8(&qword_10016B420);
          memcpy(v103, v104, *(void *)(*(void *)(v105 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v119 - 8) + 16))(v103, v104, v119);
          _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v103, 0, 1, v119);
        }
        uint64_t v106 = v123[14];
        uint64_t v107 = &v54[v106];
        uint64_t v108 = &v55[v106];
        uint64_t v109 = type metadata accessor for AggregateWeatherViewModel.SunEvent(0);
        if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v108, 1, v109))
        {
          uint64_t v110 = sub_1000053D8(&qword_10016B438);
          memcpy(v107, v108, *(void *)(*(void *)(v110 - 8) + 64));
        }
        else
        {
          swift_getEnumCaseMultiPayload();
          (*(void (**)(char *, char *, uint64_t))(v117 + 16))(v107, v108, v118);
          swift_storeEnumTagMultiPayload();
          _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v107, 0, 1, v109);
        }
        uint64_t v52 = v121;
      }
      swift_storeEnumTagMultiPayload();
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v54, v55, *(void *)(*(void *)(v56 - 8) + 64));
    }
  }
  uint64_t v111 = v120[9];
  uint64_t v112 = (uint64_t)v45 + v111;
  uint64_t v113 = (uint64_t)v52 + v111;
  *(void *)((char *)v45 + v111) = *(void *)((char *)v52 + v111);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v112 + 8) = *(void *)(v113 + 8);
  swift_retain();
  swift_release();
  *((unsigned char *)v45 + v120[10]) = *((unsigned char *)v52 + v120[10]);
  return v45;
}

char *sub_10004A618(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_1000053D8(&qword_10016B410);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_10012C800();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v8 = a3[5];
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = sub_1000053D8(&qword_10016B9D8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v12 = sub_10012AFE0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v9, v10, v12);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
  }
  uint64_t v13 = a3[6];
  uint64_t v14 = a3[7];
  char v15 = &a1[v13];
  uint64_t v16 = &a2[v13];
  *(void *)char v15 = *(void *)v16;
  v15[8] = v16[8];
  char v17 = &a1[v14];
  uint64_t v18 = &a2[v14];
  uint64_t v19 = sub_1000053D8(&qword_10016B9E0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v20 = sub_10012B2D0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 32))(v17, v18, v20);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
  }
  uint64_t v109 = a2;
  uint64_t v110 = a3;
  uint64_t v21 = a3[8];
  uint64_t v22 = &a1[v21];
  uint64_t v23 = &a2[v21];
  uint64_t v24 = sub_100129300();
  uint64_t v106 = *(void (**)(char *, char *))(*(void *)(v24 - 8) + 32);
  uint64_t v107 = v24;
  v106(v22, v23);
  uint64_t v25 = (int *)type metadata accessor for ForecastEntry(0);
  uint64_t v26 = v25[5];
  uint64_t v27 = &v22[v26];
  uint64_t v28 = &v23[v26];
  uint64_t v29 = sub_10012C920();
  if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v28, 1, v29))
  {
    uint64_t v30 = sub_1000053D8(&qword_10016B418);
    memcpy(v27, v28, *(void *)(*(void *)(v30 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 32))(v27, v28, v29);
    _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v27, 0, 1, v29);
  }
  uint64_t v31 = v25[6];
  int v32 = &v22[v31];
  uint64_t v33 = &v23[v31];
  long long v34 = *(_OWORD *)&v23[v31 + 16];
  *(_OWORD *)int v32 = *(_OWORD *)&v23[v31];
  *((_OWORD *)v32 + 1) = v34;
  *((_OWORD *)v32 + 2) = *(_OWORD *)&v23[v31 + 32];
  *((_DWORD *)v32 + 12) = *(_DWORD *)&v23[v31 + 48];
  uint64_t v35 = type metadata accessor for WidgetContext();
  uint64_t v36 = *(int *)(v35 + 40);
  uint64_t v37 = &v32[v36];
  uint64_t v38 = &v33[v36];
  uint64_t v39 = sub_100129220();
  uint64_t v108 = v39;
  if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v38, 1, v39))
  {
    uint64_t v40 = sub_1000053D8(&qword_10016B420);
    memcpy(v37, v38, *(void *)(*(void *)(v40 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 32))(v37, v38, v39);
    _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v37, 0, 1, v39);
  }
  uint64_t v41 = *(int *)(v35 + 44);
  uint64_t v42 = &v32[v41];
  int v43 = &v33[v41];
  *(void *)uint64_t v42 = *(void *)v43;
  v42[8] = v43[8];
  uint64_t v44 = v25[7];
  uint64_t v45 = &v22[v44];
  uint64_t v46 = &v23[v44];
  uint64_t v47 = type metadata accessor for ForecastEntry.Model(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    type metadata accessor for WeatherDataViewModel();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v61 = sub_10012BE90();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v61 - 8) + 32))(v45, v46, v61);
    }
    else
    {
      if (EnumCaseMultiPayload != 1)
      {
        uint64_t v62 = sub_100129330();
        uint64_t v101 = *(void (**)(char *, char *))(*(void *)(v62 - 8) + 32);
        uint64_t v103 = v62;
        v101(v45, v46);
        uint64_t v63 = (int *)type metadata accessor for AggregateWeatherViewModel(0);
        uint64_t v64 = v63[5];
        unint64_t v65 = &v45[v64];
        uint64_t v66 = &v46[v64];
        uint64_t v67 = sub_10012A6B0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v67 - 8) + 32))(v65, v66, v67);
        uint64_t v68 = v63[6];
        uint64_t v69 = &v45[v68];
        uint64_t v70 = &v46[v68];
        uint64_t v71 = sub_10012C250();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v71 - 8) + 32))(v69, v70, v71);
        *(void *)&v45[v63[7]] = *(void *)&v46[v63[7]];
        *(void *)&v45[v63[8]] = *(void *)&v46[v63[8]];
        uint64_t v72 = v63[9];
        uint64_t v73 = &v45[v72];
        uint64_t v74 = &v46[v72];
        uint64_t v75 = (int *)type metadata accessor for AirQualityViewModel();
        if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v74, 1, (uint64_t)v75))
        {
          uint64_t v76 = sub_1000053D8(&qword_10016B428);
          memcpy(v73, v74, *(void *)(*(void *)(v76 - 8) + 64));
        }
        else
        {
          ((void (*)(char *, char *, uint64_t))v101)(v73, v74, v103);
          ((void (*)(char *, char *, uint64_t))v106)(&v73[v75[5]], &v74[v75[5]], v107);
          *(void *)&v73[v75[6]] = *(void *)&v74[v75[6]];
          uint64_t v77 = v75[7];
          uint64_t v102 = &v74[v77];
          uint64_t v104 = &v73[v77];
          uint64_t v78 = sub_100129B70();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v78 - 8) + 32))(v104, v102, v78);
          uint64_t v79 = v75[8];
          uint64_t v105 = &v73[v79];
          uint64_t v80 = &v74[v79];
          uint64_t v81 = sub_100129C50();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v81 - 8) + 32))(v105, v80, v81);
          _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v73, 0, 1, (uint64_t)v75);
        }
        uint64_t v82 = v63[10];
        uint64_t v83 = &v45[v82];
        uint64_t v84 = &v46[v82];
        uint64_t v85 = sub_10012C6B0();
        if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v84, 1, v85))
        {
          uint64_t v86 = sub_1000053D8(&qword_10016B430);
          memcpy(v83, v84, *(void *)(*(void *)(v86 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v85 - 8) + 32))(v83, v84, v85);
          _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v83, 0, 1, v85);
        }
        *(void *)&v45[v63[11]] = *(void *)&v46[v63[11]];
        uint64_t v87 = v63[12];
        uint64_t v88 = &v45[v87];
        uint64_t v89 = &v46[v87];
        *(void *)uint64_t v88 = *(void *)v89;
        *((_WORD *)v88 + 4) = *((_WORD *)v89 + 4);
        uint64_t v90 = v63[13];
        uint64_t v91 = &v45[v90];
        uint64_t v92 = &v46[v90];
        if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)&v46[v90], 1, v108))
        {
          uint64_t v93 = sub_1000053D8(&qword_10016B420);
          memcpy(v91, v92, *(void *)(*(void *)(v93 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v108 - 8) + 32))(v91, v92, v108);
          _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v91, 0, 1, v108);
        }
        uint64_t v94 = v63[14];
        uint64_t v95 = &v45[v94];
        uint64_t v96 = &v46[v94];
        uint64_t v97 = type metadata accessor for AggregateWeatherViewModel.SunEvent(0);
        if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v96, 1, v97))
        {
          uint64_t v98 = sub_1000053D8(&qword_10016B438);
          memcpy(v95, v96, *(void *)(*(void *)(v98 - 8) + 64));
        }
        else
        {
          swift_getEnumCaseMultiPayload();
          ((void (*)(char *, char *, uint64_t))v106)(v95, v96, v107);
          swift_storeEnumTagMultiPayload();
          _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v95, 0, 1, v97);
        }
        uint64_t v60 = v110;
        goto LABEL_36;
      }
      uint64_t v49 = sub_100129330();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v49 - 8) + 32))(v45, v46, v49);
      uint64_t v50 = type metadata accessor for InstantWeatherViewModel();
      uint64_t v51 = *(int *)(v50 + 20);
      uint64_t v52 = &v45[v51];
      uint64_t v53 = &v46[v51];
      uint64_t v54 = sub_10012A6B0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v54 - 8) + 32))(v52, v53, v54);
      uint64_t v55 = *(int *)(v50 + 24);
      uint64_t v56 = &v45[v55];
      uint64_t v57 = &v46[v55];
      uint64_t v58 = sub_10012C250();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v58 - 8) + 32))(v56, v57, v58);
    }
    uint64_t v60 = v110;
LABEL_36:
    uint64_t v59 = v109;
    swift_storeEnumTagMultiPayload();
    swift_storeEnumTagMultiPayload();
    goto LABEL_37;
  }
  memcpy(v45, v46, *(void *)(*(void *)(v47 - 8) + 64));
  uint64_t v59 = v109;
  uint64_t v60 = v110;
LABEL_37:
  uint64_t v99 = v60[10];
  *(_OWORD *)&a1[v60[9]] = *(_OWORD *)&v59[v60[9]];
  a1[v99] = v59[v99];
  return a1;
}

char *sub_10004B08C(char *a1, char *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_10000D930((uint64_t)a1, &qword_10016B410);
    uint64_t v6 = sub_1000053D8(&qword_10016B410);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_10012C800();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
    uint64_t v8 = a3[5];
    uint64_t v9 = &a1[v8];
    uint64_t v10 = &a2[v8];
    sub_10000D930((uint64_t)&a1[v8], &qword_10016B9D8);
    uint64_t v11 = sub_1000053D8(&qword_10016B9D8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = sub_10012AFE0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v9, v10, v12);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
    }
  }
  uint64_t v13 = a3[6];
  uint64_t v14 = &a1[v13];
  char v15 = &a2[v13];
  uint64_t v16 = *(void *)v15;
  LOBYTE(v15) = v15[8];
  uint64_t v17 = *(void *)v14;
  char v18 = v14[8];
  *(void *)uint64_t v14 = v16;
  v14[8] = (char)v15;
  sub_100008BF8(v17, v18);
  if (a1 != a2)
  {
    uint64_t v19 = a3[7];
    uint64_t v20 = &a1[v19];
    uint64_t v21 = &a2[v19];
    sub_10000D930((uint64_t)&a1[v19], &qword_10016B9E0);
    uint64_t v22 = sub_1000053D8(&qword_10016B9E0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v23 = sub_10012B2D0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 32))(v20, v21, v23);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v20, v21, *(void *)(*(void *)(v22 - 8) + 64));
    }
  }
  char v124 = a3;
  uint64_t v125 = a2;
  uint64_t v24 = a3[8];
  uint64_t v25 = &a1[v24];
  uint64_t v26 = &a2[v24];
  uint64_t v27 = sub_100129300();
  uint64_t v121 = *(void *)(v27 - 8);
  uint64_t v122 = v27;
  (*(void (**)(char *, char *))(v121 + 40))(v25, v26);
  uint64_t v28 = (int *)type metadata accessor for ForecastEntry(0);
  uint64_t v29 = v28[5];
  uint64_t v30 = &v25[v29];
  uint64_t v31 = &v26[v29];
  uint64_t v32 = sub_10012C920();
  int v33 = _s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v30, 1, v32);
  int v34 = _s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v31, 1, v32);
  char v126 = a1;
  if (v33)
  {
    if (!v34)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 32))(v30, v31, v32);
      _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v30, 0, 1, v32);
      goto LABEL_18;
    }
    goto LABEL_17;
  }
  uint64_t v35 = *(void *)(v32 - 8);
  if (v34)
  {
    (*(void (**)(char *, uint64_t))(v35 + 8))(v30, v32);
LABEL_17:
    uint64_t v36 = sub_1000053D8(&qword_10016B418);
    memcpy(v30, v31, *(void *)(*(void *)(v36 - 8) + 64));
    goto LABEL_18;
  }
  (*(void (**)(char *, char *, uint64_t))(v35 + 40))(v30, v31, v32);
LABEL_18:
  uint64_t v37 = v28[6];
  uint64_t v38 = &v25[v37];
  uint64_t v39 = &v26[v37];
  uint64_t v40 = *(void *)&v26[v37 + 8];
  *(void *)uint64_t v38 = *(void *)&v26[v37];
  *((void *)v38 + 1) = v40;
  swift_bridgeObjectRelease();
  uint64_t v41 = *((void *)v39 + 3);
  *((void *)v38 + 2) = *((void *)v39 + 2);
  *((void *)v38 + 3) = v41;
  swift_bridgeObjectRelease();
  uint64_t v42 = *((void *)v39 + 5);
  *((void *)v38 + 4) = *((void *)v39 + 4);
  *((void *)v38 + 5) = v42;
  swift_bridgeObjectRelease();
  *((_WORD *)v38 + 24) = *((_WORD *)v39 + 24);
  v38[50] = v39[50];
  v38[51] = v39[51];
  uint64_t v43 = type metadata accessor for WidgetContext();
  uint64_t v44 = *(int *)(v43 + 40);
  uint64_t v45 = &v38[v44];
  uint64_t v46 = &v39[v44];
  uint64_t v47 = sub_100129220();
  int v48 = _s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v45, 1, v47);
  int v49 = _s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v46, 1, v47);
  uint64_t v123 = v47;
  if (v48)
  {
    uint64_t v50 = v126;
    if (v49)
    {
      uint64_t v51 = sub_1000053D8(&qword_10016B420);
      memcpy(v45, v46, *(void *)(*(void *)(v51 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v123 - 8) + 32))(v45, v46, v123);
      uint64_t v50 = v126;
      _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v45, 0, 1, v123);
    }
  }
  else
  {
    uint64_t v52 = *(void *)(v47 - 8);
    if (v49)
    {
      (*(void (**)(char *, uint64_t))(v52 + 8))(v45, v47);
      uint64_t v53 = sub_1000053D8(&qword_10016B420);
      memcpy(v45, v46, *(void *)(*(void *)(v53 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v52 + 40))(v45, v46, v47);
    }
    uint64_t v50 = v126;
  }
  uint64_t v54 = *(int *)(v43 + 44);
  uint64_t v55 = &v38[v54];
  uint64_t v56 = &v39[v54];
  *(void *)uint64_t v55 = *(void *)&v39[v54];
  swift_bridgeObjectRelease();
  v55[8] = v56[8];
  uint64_t v57 = v125;
  if (v50 != v125)
  {
    uint64_t v58 = v28[7];
    uint64_t v59 = &v25[v58];
    uint64_t v60 = &v26[v58];
    sub_100056FD4((uint64_t)v59, (void (*)(void))type metadata accessor for ForecastEntry.Model);
    uint64_t v61 = type metadata accessor for ForecastEntry.Model(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      type metadata accessor for WeatherDataViewModel();
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        uint64_t v73 = sub_10012BE90();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v73 - 8) + 32))(v59, v60, v73);
      }
      else if (EnumCaseMultiPayload == 1)
      {
        uint64_t v63 = sub_100129330();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v63 - 8) + 32))(v59, v60, v63);
        uint64_t v64 = type metadata accessor for InstantWeatherViewModel();
        uint64_t v65 = *(int *)(v64 + 20);
        uint64_t v66 = &v59[v65];
        uint64_t v67 = &v60[v65];
        uint64_t v68 = sub_10012A6B0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v68 - 8) + 32))(v66, v67, v68);
        uint64_t v69 = *(int *)(v64 + 24);
        uint64_t v70 = &v59[v69];
        uint64_t v71 = &v60[v69];
        uint64_t v72 = sub_10012C250();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v72 - 8) + 32))(v70, v71, v72);
      }
      else
      {
        uint64_t v74 = sub_100129330();
        uint64_t v75 = *(void (**)(char *, char *))(*(void *)(v74 - 8) + 32);
        uint64_t v120 = v74;
        v75(v59, v60);
        uint64_t v76 = (int *)type metadata accessor for AggregateWeatherViewModel(0);
        uint64_t v77 = v76[5];
        uint64_t v78 = &v59[v77];
        uint64_t v79 = &v60[v77];
        uint64_t v80 = sub_10012A6B0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v80 - 8) + 32))(v78, v79, v80);
        uint64_t v81 = v76[6];
        uint64_t v82 = &v59[v81];
        uint64_t v83 = &v60[v81];
        uint64_t v84 = sub_10012C250();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v84 - 8) + 32))(v82, v83, v84);
        *(void *)&v59[v76[7]] = *(void *)&v60[v76[7]];
        *(void *)&v59[v76[8]] = *(void *)&v60[v76[8]];
        uint64_t v85 = v76[9];
        uint64_t v86 = &v59[v85];
        uint64_t v87 = &v60[v85];
        uint64_t v88 = (int *)type metadata accessor for AirQualityViewModel();
        if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v87, 1, (uint64_t)v88))
        {
          uint64_t v89 = sub_1000053D8(&qword_10016B428);
          memcpy(v86, v87, *(void *)(*(void *)(v89 - 8) + 64));
        }
        else
        {
          ((void (*)(char *, char *, uint64_t))v75)(v86, v87, v120);
          (*(void (**)(char *, char *, uint64_t))(v121 + 32))(&v86[v88[5]], &v87[v88[5]], v122);
          *(void *)&v86[v88[6]] = *(void *)&v87[v88[6]];
          uint64_t v90 = v88[7];
          uint64_t v91 = (uint64_t)v86;
          uint64_t v92 = &v86[v90];
          uint64_t v93 = &v87[v90];
          uint64_t v94 = sub_100129B70();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v94 - 8) + 32))(v92, v93, v94);
          uint64_t v95 = v88[8];
          uint64_t v96 = v91 + v95;
          uint64_t v97 = &v87[v95];
          uint64_t v98 = sub_100129C50();
          (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v98 - 8) + 32))(v96, v97, v98);
          _s13WeatherWidget20WeatherDataViewModelOwst_0(v91, 0, 1, (uint64_t)v88);
        }
        uint64_t v99 = v76[10];
        uint64_t v100 = &v59[v99];
        uint64_t v101 = &v60[v99];
        uint64_t v102 = sub_10012C6B0();
        if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v101, 1, v102))
        {
          uint64_t v103 = sub_1000053D8(&qword_10016B430);
          memcpy(v100, v101, *(void *)(*(void *)(v103 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v102 - 8) + 32))(v100, v101, v102);
          _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v100, 0, 1, v102);
        }
        *(void *)&v59[v76[11]] = *(void *)&v60[v76[11]];
        uint64_t v104 = v76[12];
        uint64_t v105 = &v59[v104];
        uint64_t v106 = &v60[v104];
        *(void *)uint64_t v105 = *(void *)v106;
        *((_WORD *)v105 + 4) = *((_WORD *)v106 + 4);
        uint64_t v107 = v76[13];
        uint64_t v108 = &v59[v107];
        uint64_t v109 = &v60[v107];
        if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)&v60[v107], 1, v123))
        {
          uint64_t v110 = sub_1000053D8(&qword_10016B420);
          memcpy(v108, v109, *(void *)(*(void *)(v110 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v123 - 8) + 32))(v108, v109, v123);
          _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v108, 0, 1, v123);
        }
        uint64_t v111 = v76[14];
        uint64_t v112 = &v59[v111];
        uint64_t v113 = &v60[v111];
        uint64_t v114 = type metadata accessor for AggregateWeatherViewModel.SunEvent(0);
        if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v113, 1, v114))
        {
          uint64_t v115 = sub_1000053D8(&qword_10016B438);
          memcpy(v112, v113, *(void *)(*(void *)(v115 - 8) + 64));
        }
        else
        {
          swift_getEnumCaseMultiPayload();
          (*(void (**)(char *, char *, uint64_t))(v121 + 32))(v112, v113, v122);
          swift_storeEnumTagMultiPayload();
          _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v112, 0, 1, v114);
        }
        uint64_t v57 = v125;
      }
      swift_storeEnumTagMultiPayload();
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v59, v60, *(void *)(*(void *)(v61 - 8) + 64));
    }
  }
  uint64_t v116 = v124[9];
  uint64_t v117 = &v50[v116];
  uint64_t v118 = &v57[v116];
  *(void *)&v50[v116] = *(void *)&v57[v116];
  swift_bridgeObjectRelease();
  *((void *)v117 + 1) = *((void *)v118 + 1);
  swift_release();
  v50[v124[10]] = v57[v124[10]];
  return v50;
}

uint64_t sub_10004BD30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10004BD44);
}

uint64_t sub_10004BD44(uint64_t a1, uint64_t a2, int *a3)
{
  sub_1000053D8(&qword_10016B440);
  sub_10000B3D0();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1;
  }
  else
  {
    sub_1000053D8(&qword_10016B9D0);
    sub_10000B3D0();
    if (*(_DWORD *)(v11 + 84) == a2)
    {
      uint64_t v8 = v10;
      uint64_t v12 = a3[5];
    }
    else
    {
      sub_1000053D8(&qword_10016C140);
      sub_10000B3D0();
      if (*(_DWORD *)(v14 + 84) == a2)
      {
        uint64_t v8 = v13;
        uint64_t v12 = a3[7];
      }
      else
      {
        type metadata accessor for ForecastEntry(0);
        sub_10000B3D0();
        if (*(_DWORD *)(v16 + 84) != a2) {
          return sub_10002A65C(*(void *)(a1 + a3[9]));
        }
        uint64_t v8 = v15;
        uint64_t v12 = a3[8];
      }
    }
    uint64_t v9 = a1 + v12;
  }

  return _s13WeatherWidget20WeatherDataViewModelOwet_0(v9, a2, v8);
}

uint64_t sub_10004BE40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10004BE54);
}

void sub_10004BE54(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  sub_1000053D8(&qword_10016B440);
  sub_10000B3D0();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = a1;
  }
  else
  {
    sub_1000053D8(&qword_10016B9D0);
    sub_10000B3D0();
    if (*(_DWORD *)(v13 + 84) == a3)
    {
      uint64_t v10 = v12;
      uint64_t v14 = a4[5];
    }
    else
    {
      sub_1000053D8(&qword_10016C140);
      sub_10000B3D0();
      if (*(_DWORD *)(v16 + 84) == a3)
      {
        uint64_t v10 = v15;
        uint64_t v14 = a4[7];
      }
      else
      {
        type metadata accessor for ForecastEntry(0);
        sub_10000B3D0();
        if (*(_DWORD *)(v18 + 84) != a3)
        {
          *(void *)(a1 + a4[9]) = (a2 - 1);
          return;
        }
        uint64_t v10 = v17;
        uint64_t v14 = a4[8];
      }
    }
    uint64_t v11 = a1 + v14;
  }

  _s13WeatherWidget20WeatherDataViewModelOwst_0(v11, a2, a2, v10);
}

uint64_t type metadata accessor for WidgetContentView(uint64_t a1)
{
  return sub_10001A270(a1, (uint64_t *)&unk_10016C8E0);
}

void sub_10004BF78()
{
  sub_10005BEB0(319, (unint64_t *)&qword_10016B4B0, (uint64_t (*)(uint64_t))&type metadata accessor for WidgetFamily, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
  if (v0 <= 0x3F)
  {
    sub_10005BEB0(319, (unint64_t *)&unk_10016C8F0, (uint64_t (*)(uint64_t))&type metadata accessor for ContentSizeCategory, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
    if (v1 <= 0x3F)
    {
      sub_10005BEB0(319, (unint64_t *)&unk_10016C1B0, (uint64_t (*)(uint64_t))&type metadata accessor for Font.Context, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
      if (v2 <= 0x3F)
      {
        type metadata accessor for ForecastEntry(319);
        if (v3 <= 0x3F) {
          swift_initStructMetadata();
        }
      }
    }
  }
}

uint64_t sub_10004C164()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10004C180@<X0>(__n128 **a1@<X0>, __n128 *a2@<X8>)
{
  sub_10005C640(a1, a2);
  sub_1000053D8(&qword_10016CDA8);
  uint64_t v5 = sub_10005C748();
  sub_100057158(v5, v6, (void (*)(void))type metadata accessor for RowView);
  sub_10005C6FC();
  sub_10005C6C4();
  uint64_t v7 = v2 + *(int *)(v4 + 128);
  uint64_t v9 = *(uint64_t **)(v3 + 48);
  uint64_t v8 = *(void *)(v3 + 56);
  uint64_t v10 = *v9;
  LOBYTE(v9) = *((unsigned char *)v9 + 8);
  *(void *)uint64_t v7 = v10;
  *(unsigned char *)(v7 + 8) = (_BYTE)v9;
  return sub_100057158(v8, v2 + *(int *)(v4 + 144), (void (*)(void))type metadata accessor for RowView);
}

uint64_t sub_10004C208@<X0>(__n128 **a1@<X0>, __n128 *a2@<X8>)
{
  sub_10005C640(a1, a2);
  sub_1000053D8(&qword_10016CDA0);
  uint64_t v2 = sub_10005C748();
  sub_100057158(v2, v3, (void (*)(void))type metadata accessor for RowView);
  sub_10005C6FC();
  return sub_10005C6C4();
}

uint64_t sub_10004C264@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *a1;
  uint64_t v5 = sub_10012C270();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, v4, v5);
  uint64_t v6 = (int *)sub_1000053D8(&qword_10016CC70);
  uint64_t v7 = a2 + v6[12];
  uint64_t v9 = (uint64_t *)a1[1];
  uint64_t v8 = a1[2];
  uint64_t v10 = *v9;
  LOBYTE(v9) = *((unsigned char *)v9 + 8);
  *(void *)uint64_t v7 = v10;
  *(unsigned char *)(v7 + 8) = (_BYTE)v9;
  sub_10000B114(v8, a2 + v6[16], &qword_10016CC58);
  sub_10000B114(a1[3], a2 + v6[20], &qword_10016CC20);
  uint64_t v11 = a2 + v6[24];
  uint64_t v12 = (uint64_t *)a1[4];
  uint64_t v13 = a1[5];
  uint64_t v14 = *v12;
  LOBYTE(v12) = *((unsigned char *)v12 + 8);
  *(void *)uint64_t v11 = v14;
  *(unsigned char *)(v11 + 8) = (_BYTE)v12;
  uint64_t v15 = a2 + v6[28];
  uint64_t v16 = sub_10012BAD0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 16))(v15, v13, v16);
  uint64_t v17 = a2 + v6[32];
  uint64_t v19 = (uint64_t *)a1[6];
  uint64_t v18 = a1[7];
  uint64_t v20 = *v19;
  LOBYTE(v19) = *((unsigned char *)v19 + 8);
  *(void *)uint64_t v17 = v20;
  *(unsigned char *)(v17 + 8) = (_BYTE)v19;
  sub_10000B114(v18, a2 + v6[36], &qword_10016CC20);
  uint64_t v21 = a2 + v6[40];
  uint64_t v23 = (uint64_t *)a1[8];
  uint64_t v22 = a1[9];
  uint64_t v24 = *v23;
  LOBYTE(v23) = *((unsigned char *)v23 + 8);
  *(void *)uint64_t v21 = v24;
  *(unsigned char *)(v21 + 8) = (_BYTE)v23;
  return sub_10000B114(v22, a2 + v6[44], &qword_10016CC50);
}

uint64_t sub_10004C3F0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  sub_100057158(*a1, a2, (void (*)(void))type metadata accessor for PrecipitationChartView);
  uint64_t v4 = (int *)sub_1000053D8(&qword_10016CC28);
  uint64_t v5 = a2 + v4[12];
  uint64_t v6 = a1[1];
  uint64_t v7 = a1[2];
  char v8 = *(unsigned char *)(v6 + 8);
  uint64_t v9 = *(void *)(v6 + 16);
  char v10 = *(unsigned char *)(v6 + 24);
  uint64_t v11 = *(void *)(v6 + 32);
  char v12 = *(unsigned char *)(v6 + 40);
  long long v13 = *(_OWORD *)(v6 + 48);
  *(void *)uint64_t v5 = *(void *)v6;
  *(unsigned char *)(v5 + 8) = v8;
  *(void *)(v5 + 16) = v9;
  *(unsigned char *)(v5 + 24) = v10;
  *(void *)(v5 + 32) = v11;
  *(unsigned char *)(v5 + 40) = v12;
  *(_OWORD *)(v5 + 48) = v13;
  uint64_t v14 = a2 + v4[16];
  uint64_t v15 = *(void *)v7;
  uint64_t v16 = *(void *)(v7 + 8);
  uint64_t v17 = *(void *)(v7 + 16);
  LOBYTE(v7) = *(unsigned char *)(v7 + 24);
  *(void *)uint64_t v14 = v15;
  *(void *)(v14 + 8) = v16;
  *(void *)(v14 + 16) = v17;
  *(unsigned char *)(v14 + 24) = v7;
  uint64_t v18 = a2 + v4[20];
  uint64_t v20 = a1[3];
  uint64_t v19 = a1[4];
  uint64_t v21 = *(void *)v20;
  char v22 = *(unsigned char *)(v20 + 8);
  uint64_t v23 = *(void *)(v20 + 16);
  LOBYTE(v9) = *(unsigned char *)(v20 + 24);
  uint64_t v24 = *(void *)(v20 + 32);
  long long v25 = *(_OWORD *)(v20 + 48);
  LOBYTE(v20) = *(unsigned char *)(v20 + 40);
  *(void *)uint64_t v18 = v21;
  *(unsigned char *)(v18 + 8) = v22;
  *(void *)(v18 + 16) = v23;
  *(unsigned char *)(v18 + 24) = v9;
  *(void *)(v18 + 32) = v24;
  *(unsigned char *)(v18 + 40) = v20;
  *(_OWORD *)(v18 + 48) = v25;
  sub_10000B114(v19, a2 + v4[24], &qword_10016CC20);
  uint64_t v26 = a2 + v4[28];
  uint64_t v27 = a1[5];
  uint64_t v28 = a1[6];
  char v29 = *(unsigned char *)(v27 + 8);
  uint64_t v30 = *(void *)(v27 + 16);
  char v31 = *(unsigned char *)(v27 + 24);
  uint64_t v32 = *(void *)(v27 + 32);
  char v33 = *(unsigned char *)(v27 + 40);
  long long v34 = *(_OWORD *)(v27 + 48);
  *(void *)uint64_t v26 = *(void *)v27;
  *(unsigned char *)(v26 + 8) = v29;
  *(void *)(v26 + 16) = v30;
  *(unsigned char *)(v26 + 24) = v31;
  *(void *)(v26 + 32) = v32;
  *(unsigned char *)(v26 + 40) = v33;
  *(_OWORD *)(v26 + 48) = v34;
  uint64_t v35 = a2 + v4[32];
  uint64_t v36 = sub_10012BAD0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 16))(v35, v28, v36);
  swift_bridgeObjectRetain();

  return swift_retain();
}

uint64_t sub_10004C5B4@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  sub_100057158(*a1, a2, (void (*)(void))type metadata accessor for WeekdayColumn);
  sub_1000053D8(&qword_10016CDD0);
  uint64_t v5 = sub_10005C748();
  sub_10000B114(v5, v6, &qword_10016CDD8);
  sub_10000B114(a1[2], a2 + v2[16], &qword_10016CDE0);
  sub_10000B114(a1[3], a2 + v2[20], &qword_10016CDE8);
  uint64_t v7 = a2 + v2[24];
  uint64_t v9 = a1[4];
  uint64_t v8 = a1[5];
  char v10 = *(unsigned char *)(v9 + 8);
  uint64_t v11 = *(void *)(v9 + 16);
  char v12 = *(unsigned char *)(v9 + 24);
  uint64_t v13 = *(void *)(v9 + 32);
  char v14 = *(unsigned char *)(v9 + 40);
  long long v15 = *(_OWORD *)(v9 + 48);
  *(void *)uint64_t v7 = *(void *)v9;
  *(unsigned char *)(v7 + 8) = v10;
  *(void *)(v7 + 16) = v11;
  *(unsigned char *)(v7 + 24) = v12;
  *(void *)(v7 + 32) = v13;
  *(unsigned char *)(v7 + 40) = v14;
  *(_OWORD *)(v7 + 48) = v15;
  return sub_10000B114(v8, a2 + v2[28], &qword_10016CDF0);
}

void *sub_10004C6A4()
{
  sub_10005C6AC();
  return sub_10005C688(v0, v1, v3, v4, v5, v6, v7, v8, &qword_10016B198, &qword_10016B1A0);
}

void *sub_10004C6DC()
{
  sub_10005C6AC();
  return sub_10005C688(v0, v1, v3, v4, v5, v6, v7, v8, &qword_10016BD10, &qword_10016BD18);
}

void *sub_10004C714@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t *a9, uint64_t *a10)
{
  char v12 = a10;
  double v23 = sub_10005C75C(a1);
  if (!v24) {
    double v23 = -INFINITY;
  }
  double v25 = v13;
  if (v14) {
    double v25 = v23;
  }
  double v26 = v15;
  if (v16) {
    double v26 = v25;
  }
  if (v23 > v25 || v25 > v26) {
    goto LABEL_22;
  }
  double v28 = v17;
  if (v18) {
    double v28 = -INFINITY;
  }
  double v29 = v22;
  if (v20) {
    double v29 = v28;
  }
  double v30 = v21;
  if (v19) {
    double v30 = v29;
  }
  if (v28 > v29 || v29 > v30)
  {
LABEL_22:
    sub_10012CD50();
    uint64_t v32 = (void *)sub_10012B160();
    sub_10012AB10();

    char v12 = a10;
  }
  sub_10012ACB0();
  sub_10000B114(v10, a2, a9);
  uint64_t v33 = sub_1000053D8(v12);
  return memcpy((void *)(a2 + *(int *)(v33 + 36)), __src, 0x70uLL);
}

void *sub_10004C8B0()
{
  sub_10005C6AC();
  return sub_10005C688(v0, v1, v3, v4, v5, v6, v7, v8, &qword_10016C278, &qword_10016C280);
}

void *sub_10004C8E8@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13)
{
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_10012CD50();
    double v23 = (void *)sub_10012B160();
    sub_10012AB10();
  }
  sub_10012ACB0();
  uint64_t v24 = sub_10012BCB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 16))(a9, v13, v24);
  uint64_t v25 = sub_1000053D8(&qword_10016CAF8);
  return memcpy((void *)(a9 + *(int *)(v25 + 36)), __src, 0x70uLL);
}

void *sub_10004CAB0@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13)
{
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_10012CD50();
    double v23 = (void *)sub_10012B160();
    sub_10012AB10();
  }
  sub_10012ACB0();
  sub_100057158(v13, a9, (void (*)(void))type metadata accessor for DailyView);
  uint64_t v24 = sub_1000053D8(&qword_10016CC50);
  return memcpy((void *)(a9 + *(int *)(v24 + 36)), __src, 0x70uLL);
}

void *sub_10004CC5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10)
{
  char v11 = a10;
  double v22 = sub_10005C75C(a1);
  if (!v23) {
    double v22 = -INFINITY;
  }
  double v24 = v12;
  if (v13) {
    double v24 = v22;
  }
  double v25 = v14;
  if (v15) {
    double v25 = v24;
  }
  if (v22 > v24 || v24 > v25) {
    goto LABEL_22;
  }
  double v27 = v16;
  if (v17) {
    double v27 = -INFINITY;
  }
  double v28 = v21;
  if (v19) {
    double v28 = v27;
  }
  double v29 = v20;
  if (v18) {
    double v29 = v28;
  }
  if (v27 > v28 || v28 > v29)
  {
LABEL_22:
    sub_10012CD50();
    char v31 = (void *)sub_10012B160();
    sub_10012AB10();

    char v11 = a10;
  }
  sub_10012ACB0();
  *(void *)a2 = a9;
  *(unsigned char *)(a2 + 8) = v11 & 1;
  return memcpy((void *)(a2 + 16), __src, 0x70uLL);
}

void *sub_10004CDE0()
{
  sub_10005C6AC();
  return sub_10005C688(v0, v1, v3, v4, v5, v6, v7, v8, &qword_10016CD88, &qword_10016CD90);
}

BOOL sub_10004CE18()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for WidgetContentView(0);
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10012C800();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  char v11 = (char *)v17 - v10;
  sub_10008F554((uint64_t)v17 - v10);
  (*(void (**)(char *, void, uint64_t))(v6 + 104))(v9, enum case for WidgetFamily.systemMedium(_:), v5);
  sub_10005745C((uint64_t)&qword_10016CCC8);
  sub_10012CB60();
  sub_10012CB60();
  uint64_t v13 = v17[0];
  uint64_t v12 = v17[1];
  double v14 = *(void (**)(char *, uint64_t))(v6 + 8);
  v14(v9, v5);
  v14(v11, v5);
  sub_100057158(v1, (uint64_t)v4, (void (*)(void))type metadata accessor for WidgetContentView);
  if (v12 == v13)
  {
    uint64_t v15 = *(int *)(v2 + 32);
    LODWORD(v15) = v4[v15 + 48 + *(int *)(type metadata accessor for ForecastEntry(0) + 24)];
    sub_100056FD4((uint64_t)v4, (void (*)(void))type metadata accessor for WidgetContentView);
    return (v15 - 6) < 0xFFFFFFFD;
  }
  else
  {
    sub_100056FD4((uint64_t)v4, (void (*)(void))type metadata accessor for WidgetContentView);
    return 0;
  }
}

BOOL sub_10004D094()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for WidgetContentView(0);
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10012C800();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  char v11 = (char *)v17 - v10;
  sub_10008F554((uint64_t)v17 - v10);
  (*(void (**)(char *, void, uint64_t))(v6 + 104))(v9, enum case for WidgetFamily.systemMedium(_:), v5);
  sub_10005745C((uint64_t)&qword_10016CCC8);
  sub_10012CB60();
  sub_10012CB60();
  uint64_t v13 = v17[0];
  uint64_t v12 = v17[1];
  double v14 = *(void (**)(char *, uint64_t))(v6 + 8);
  v14(v9, v5);
  v14(v11, v5);
  sub_100057158(v1, (uint64_t)v4, (void (*)(void))type metadata accessor for WidgetContentView);
  if (v12 == v13)
  {
    uint64_t v15 = *(int *)(v2 + 32);
    LODWORD(v15) = v4[v15 + 48 + *(int *)(type metadata accessor for ForecastEntry(0) + 24)];
    sub_100056FD4((uint64_t)v4, (void (*)(void))type metadata accessor for WidgetContentView);
    return (v15 - 3) < 3;
  }
  else
  {
    sub_100056FD4((uint64_t)v4, (void (*)(void))type metadata accessor for WidgetContentView);
    return 0;
  }
}

BOOL sub_10004D310()
{
  uint64_t v0 = sub_10012C800();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = __chkstk_darwin(v0);
  uint64_t v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v6 = (char *)v10 - v5;
  sub_10008F554((uint64_t)v10 - v5);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v4, enum case for WidgetFamily.systemLarge(_:), v0);
  sub_10005745C((uint64_t)&qword_10016CCC8);
  sub_10012CB60();
  sub_10012CB60();
  BOOL v7 = v10[1] == v10[0];
  uint64_t v8 = *(void (**)(char *, uint64_t))(v1 + 8);
  v8(v4, v0);
  v8(v6, v0);
  return v7;
}

uint64_t sub_10004D4A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v33 = a1;
  uint64_t v34 = a2;
  uint64_t v4 = sub_10012AFE0();
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10012C800();
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for ForecastEntry.Model(0);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1000053D8(&qword_10016B310);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for AggregateWeatherViewModel(0);
  __chkstk_darwin(v16 - 8);
  char v18 = (char *)&v33 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for WidgetContentView(0);
  uint64_t v20 = v3 + *(int *)(v19 + 32);
  uint64_t v21 = type metadata accessor for ForecastEntry(0);
  sub_100057158(v20 + *(int *)(v21 + 28), (uint64_t)v12, (void (*)(void))type metadata accessor for ForecastEntry.Model);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1000571AC((uint64_t)v12, (uint64_t)v15, (void (*)(void))type metadata accessor for WeatherDataViewModel);
    uint64_t v22 = type metadata accessor for WeatherDataViewModel();
    uint64_t v23 = (uint64_t)v15;
    uint64_t v24 = 0;
  }
  else
  {
    uint64_t v22 = type metadata accessor for WeatherDataViewModel();
    uint64_t v23 = (uint64_t)v15;
    uint64_t v24 = 1;
  }
  _s13WeatherWidget20WeatherDataViewModelOwst_0(v23, v24, 1, v22);
  type metadata accessor for WeatherDataViewModel();
  if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v15, 1, v22) == 1)
  {
    sub_10000D930((uint64_t)v15, &qword_10016B310);
  }
  else
  {
    if (!swift_getEnumCaseMultiPayload())
    {
      sub_1000571AC((uint64_t)v15, (uint64_t)v18, (void (*)(void))type metadata accessor for AggregateWeatherViewModel);
      sub_10008F554((uint64_t)v9);
      sub_10008F5C4((uint64_t)v6);
      uint64_t v27 = v3 + *(int *)(v19 + 24);
      uint64_t v28 = *(void *)v27;
      char v29 = *(unsigned char *)(v27 + 8);
      sub_10000886C(*(void *)v27, v29);
      sub_10008F2A4(v28, v29);
      sub_100008BF8(v28, v29);
      type metadata accessor for DailyViewAttributesFactory();
      swift_allocObject();
      sub_100110864();
      uint64_t v30 = v20 + *(int *)(v21 + 24);
      uint64_t v26 = v34;
      sub_10010EBE4((uint64_t)v18, v33, v30, 0, v34);
      swift_release();
      sub_100056FD4((uint64_t)v18, (void (*)(void))type metadata accessor for AggregateWeatherViewModel);
      uint64_t v25 = 0;
      goto LABEL_10;
    }
    sub_100056FD4((uint64_t)v15, (void (*)(void))type metadata accessor for WeatherDataViewModel);
  }
  uint64_t v25 = 1;
  uint64_t v26 = v34;
LABEL_10:
  uint64_t v31 = type metadata accessor for DailyViewAttributes();
  return _s13WeatherWidget20WeatherDataViewModelOwst_0(v26, v25, 1, v31);
}

uint64_t sub_10004D87C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_10012AFE0();
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10012C800();
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for ForecastEntry.Model(0);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1000053D8(&qword_10016B310);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for AggregateWeatherViewModel(0);
  __chkstk_darwin(v16 - 8);
  char v18 = (char *)&v34 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = (int *)type metadata accessor for WidgetContentView(0);
  uint64_t v20 = v2 + v19[8];
  uint64_t v21 = type metadata accessor for ForecastEntry(0);
  sub_100057158(v20 + *(int *)(v21 + 28), (uint64_t)v12, (void (*)(void))type metadata accessor for ForecastEntry.Model);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1000571AC((uint64_t)v12, (uint64_t)v15, (void (*)(void))type metadata accessor for WeatherDataViewModel);
    uint64_t v22 = type metadata accessor for WeatherDataViewModel();
    uint64_t v23 = (uint64_t)v15;
    uint64_t v24 = 0;
  }
  else
  {
    uint64_t v22 = type metadata accessor for WeatherDataViewModel();
    uint64_t v23 = (uint64_t)v15;
    uint64_t v24 = 1;
  }
  _s13WeatherWidget20WeatherDataViewModelOwst_0(v23, v24, 1, v22);
  type metadata accessor for WeatherDataViewModel();
  if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v15, 1, v22) == 1)
  {
    sub_10000D930((uint64_t)v15, &qword_10016B310);
  }
  else
  {
    if (!swift_getEnumCaseMultiPayload())
    {
      sub_1000571AC((uint64_t)v15, (uint64_t)v18, (void (*)(void))type metadata accessor for AggregateWeatherViewModel);
      sub_10008F554((uint64_t)v9);
      sub_10008F5C4((uint64_t)v6);
      uint64_t v26 = v19[10];
      uint64_t v27 = v2 + v19[6];
      uint64_t v28 = *(void *)v27;
      char v29 = *(unsigned char *)(v27 + 8);
      char v30 = *(unsigned char *)(v2 + v26);
      sub_10000886C(*(void *)v27, v29);
      char v31 = sub_10008F2A4(v28, v29);
      sub_100008BF8(v28, v29);
      type metadata accessor for HourlyBannerViewAttributesFactory();
      swift_allocObject();
      sub_1001037A8((uint64_t)v9, (uint64_t)v6, v30, v31 & 1);
      sub_1001032F0((uint64_t)v18);
      swift_release();
      sub_100056FD4((uint64_t)v18, (void (*)(void))type metadata accessor for AggregateWeatherViewModel);
      uint64_t v25 = 0;
      goto LABEL_10;
    }
    sub_100056FD4((uint64_t)v15, (void (*)(void))type metadata accessor for WeatherDataViewModel);
  }
  uint64_t v25 = 1;
LABEL_10:
  uint64_t v32 = sub_10012C040();
  return _s13WeatherWidget20WeatherDataViewModelOwst_0(a1, v25, 1, v32);
}

uint64_t sub_10004DC34()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10012AFE0();
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10012C800();
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10008F554((uint64_t)v7);
  uint64_t v8 = (int *)type metadata accessor for WidgetContentView(0);
  sub_10008F5C4((uint64_t)v4);
  uint64_t v9 = v0 + v8[6];
  uint64_t v10 = *(void *)v9;
  char v11 = *(unsigned char *)(v9 + 8);
  char v12 = *(unsigned char *)(v1 + v8[10]);
  sub_10000886C(*(void *)v9, v11);
  char v13 = sub_10008F2A4(v10, v11);
  sub_100008BF8(v10, v11);
  type metadata accessor for LargePrecipitationViewAttributesFactory();
  swift_allocObject();
  sub_10006D7D0((uint64_t)v7, (uint64_t)v4, v12, v13 & 1);
  uint64_t v14 = v1 + v8[8];
  uint64_t v15 = type metadata accessor for ForecastEntry(0);
  uint64_t v16 = sub_10006D780(v14 + *(int *)(v15 + 24));
  swift_release();
  return v16;
}

uint64_t sub_10004DDD0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v35 = a1;
  uint64_t v3 = sub_10012AFE0();
  __chkstk_darwin(v3 - 8);
  uint64_t v34 = (uint64_t)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10012C800();
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for ForecastEntry.Model(0);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1000053D8(&qword_10016B310);
  __chkstk_darwin(v11 - 8);
  char v13 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for AggregateWeatherViewModel(0);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = (int *)type metadata accessor for WidgetContentView(0);
  uint64_t v18 = v2 + v17[8];
  uint64_t v19 = type metadata accessor for ForecastEntry(0);
  sub_100057158(v18 + *(int *)(v19 + 28), (uint64_t)v10, (void (*)(void))type metadata accessor for ForecastEntry.Model);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1000571AC((uint64_t)v10, (uint64_t)v13, (void (*)(void))type metadata accessor for WeatherDataViewModel);
    uint64_t v20 = type metadata accessor for WeatherDataViewModel();
    uint64_t v21 = (uint64_t)v13;
    uint64_t v22 = 0;
  }
  else
  {
    uint64_t v20 = type metadata accessor for WeatherDataViewModel();
    uint64_t v21 = (uint64_t)v13;
    uint64_t v22 = 1;
  }
  _s13WeatherWidget20WeatherDataViewModelOwst_0(v21, v22, 1, v20);
  type metadata accessor for WeatherDataViewModel();
  if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v13, 1, v20) == 1)
  {
    sub_10000D930((uint64_t)v13, &qword_10016B310);
  }
  else
  {
    if (!swift_getEnumCaseMultiPayload())
    {
      sub_1000571AC((uint64_t)v13, (uint64_t)v16, (void (*)(void))type metadata accessor for AggregateWeatherViewModel);
      sub_10008F554((uint64_t)v7);
      uint64_t v25 = v34;
      sub_10008F5C4(v34);
      uint64_t v26 = v2 + v17[6];
      uint64_t v27 = *(void *)v26;
      char v28 = *(unsigned char *)(v26 + 8);
      char v29 = *(unsigned char *)(v2 + v17[10]);
      sub_10000886C(*(void *)v26, v28);
      char v30 = sub_10008F2A4(v27, v28);
      sub_100008BF8(v27, v28);
      type metadata accessor for CurrentObservationViewAttributesFactory();
      swift_allocObject();
      sub_1000A4B44((uint64_t)v7, v25, v29, v30 & 1);
      uint64_t v31 = v18 + *(int *)(v19 + 24);
      uint64_t v24 = v35;
      sub_1000A37F8((uint64_t)v16, v31, (uint64_t)&v16[*(int *)(v14 + 20)], *(void *)v31, *(void *)(v31 + 8), *(unsigned __int8 *)(v31 + 50), *(unsigned __int8 *)(v31 + 51), 0, v35, 1, 0);
      swift_release();
      sub_100056FD4((uint64_t)v16, (void (*)(void))type metadata accessor for AggregateWeatherViewModel);
      uint64_t v23 = 0;
      goto LABEL_10;
    }
    sub_100056FD4((uint64_t)v13, (void (*)(void))type metadata accessor for WeatherDataViewModel);
  }
  uint64_t v23 = 1;
  uint64_t v24 = v35;
LABEL_10:
  uint64_t v32 = sub_10012C610();
  return _s13WeatherWidget20WeatherDataViewModelOwst_0(v24, v23, 1, v32);
}

uint64_t sub_10004E1D4@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v5 = v4;
  int v39 = a3;
  uint64_t v40 = a1;
  unint64_t v41 = a2;
  uint64_t v42 = a4;
  uint64_t v6 = sub_10012AFE0();
  __chkstk_darwin(v6 - 8);
  uint64_t v38 = (uint64_t)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10012C800();
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for ForecastEntry.Model(0);
  __chkstk_darwin(v11);
  char v13 = (char *)&v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1000053D8(&qword_10016B310);
  __chkstk_darwin(v14 - 8);
  uint64_t v16 = (char *)&v37 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for AggregateWeatherViewModel(0);
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)&v37 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = (int *)type metadata accessor for WidgetContentView(0);
  uint64_t v21 = v5 + v20[8];
  uint64_t v22 = type metadata accessor for ForecastEntry(0);
  sub_100057158(v21 + *(int *)(v22 + 28), (uint64_t)v13, (void (*)(void))type metadata accessor for ForecastEntry.Model);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1000571AC((uint64_t)v13, (uint64_t)v16, (void (*)(void))type metadata accessor for WeatherDataViewModel);
    uint64_t v23 = type metadata accessor for WeatherDataViewModel();
    uint64_t v24 = (uint64_t)v16;
    uint64_t v25 = 0;
  }
  else
  {
    uint64_t v23 = type metadata accessor for WeatherDataViewModel();
    uint64_t v24 = (uint64_t)v16;
    uint64_t v25 = 1;
  }
  _s13WeatherWidget20WeatherDataViewModelOwst_0(v24, v25, 1, v23);
  type metadata accessor for WeatherDataViewModel();
  if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v16, 1, v23) == 1)
  {
    sub_10000D930((uint64_t)v16, &qword_10016B310);
  }
  else
  {
    if (!swift_getEnumCaseMultiPayload())
    {
      sub_1000571AC((uint64_t)v16, (uint64_t)v19, (void (*)(void))type metadata accessor for AggregateWeatherViewModel);
      sub_10008F554((uint64_t)v10);
      uint64_t v28 = v38;
      sub_10008F5C4(v38);
      uint64_t v29 = v5 + v20[6];
      uint64_t v30 = *(void *)v29;
      char v31 = *(unsigned char *)(v29 + 8);
      char v32 = *(unsigned char *)(v5 + v20[10]);
      sub_10000886C(*(void *)v29, v31);
      char v33 = sub_10008F2A4(v30, v31);
      sub_100008BF8(v30, v31);
      type metadata accessor for CurrentObservationViewAttributesFactory();
      swift_allocObject();
      sub_1000A4B44((uint64_t)v10, v28, v32, v33 & 1);
      uint64_t v34 = v21 + *(int *)(v22 + 24);
      uint64_t v27 = v42;
      sub_1000A37F8((uint64_t)v19, v34, (uint64_t)&v19[*(int *)(v17 + 20)], v40, v41, *(unsigned __int8 *)(v34 + 50), *(unsigned __int8 *)(v34 + 51), 1, v42, v39 & 1, 0);
      swift_release();
      sub_100056FD4((uint64_t)v19, (void (*)(void))type metadata accessor for AggregateWeatherViewModel);
      uint64_t v26 = 0;
      goto LABEL_10;
    }
    sub_100056FD4((uint64_t)v16, (void (*)(void))type metadata accessor for WeatherDataViewModel);
  }
  uint64_t v26 = 1;
  uint64_t v27 = v42;
LABEL_10:
  uint64_t v35 = sub_10012C610();
  return _s13WeatherWidget20WeatherDataViewModelOwst_0(v27, v26, 1, v35);
}

void *sub_10004E5EC@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v22 = a1;
  uint64_t v21 = sub_10012B2D0();
  uint64_t v3 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  uint64_t v5 = &v19[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = sub_10012AFE0();
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = &v19[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = sub_10012C800();
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = &v19[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  int v20 = sub_10004E82C(v1);
  sub_10008F554((uint64_t)v11);
  uint64_t v12 = type metadata accessor for WidgetContentView(0);
  sub_10008F5C4((uint64_t)v8);
  uint64_t v13 = v1 + *(int *)(v12 + 24);
  uint64_t v14 = *(void *)v13;
  char v15 = *(unsigned char *)(v13 + 8);
  char v16 = *(unsigned char *)(v2 + *(int *)(v12 + 40));
  sub_10000886C(*(void *)v13, v15);
  char v17 = sub_10008F2A4(v14, v15);
  sub_100008BF8(v14, v15);
  type metadata accessor for ErrorViewAttributesFactory();
  swift_allocObject();
  sub_1000A67D4((uint64_t)v11, (uint64_t)v8, v16, v17 & 1);
  sub_10008F590((uint64_t)v5);
  sub_1000A6524(v20, (uint64_t)__src);
  swift_release();
  (*(void (**)(unsigned char *, uint64_t))(v3 + 8))(v5, v21);
  return memcpy(v22, __src, 0x50uLL);
}

uint64_t sub_10004E82C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ForecastEntry.Model(0);
  __chkstk_darwin(v2);
  uint64_t v4 = (unsigned __int8 *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = a1 + *(int *)(type metadata accessor for WidgetContentView(0) + 32);
  uint64_t v6 = type metadata accessor for ForecastEntry(0);
  sub_100057158(v5 + *(int *)(v6 + 28), (uint64_t)v4, (void (*)(void))type metadata accessor for ForecastEntry.Model);
  if (swift_getEnumCaseMultiPayload() != 1) {
    return *v4;
  }
  sub_100056FD4((uint64_t)v4, (void (*)(void))type metadata accessor for ForecastEntry.Model);
  return 3;
}

uint64_t sub_10004E91C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for ErrorView();
  uint64_t v4 = v3 - 8;
  __chkstk_darwin(v3);
  sub_10005C778();
  memcpy(v1, v1, 0x50uLL);
  uint64_t v5 = (uint64_t *)&v1[*(int *)(v4 + 28)];
  *uint64_t v5 = swift_getKeyPath();
  sub_1000053D8(&qword_10016B080);
  swift_storeEnumTagMultiPayload();
  sub_10005C49C((uint64_t)v1);
  char v6 = sub_10012B1A0();
  sub_100057158((uint64_t)v1, a1, (void (*)(void))type metadata accessor for ErrorView);
  uint64_t v7 = a1 + *(int *)(sub_1000053D8(&qword_10016CD98) + 36);
  *(unsigned char *)uint64_t v7 = v6;
  *(_OWORD *)(v7 + 8) = 0u;
  *(_OWORD *)(v7 + 24) = 0u;
  *(unsigned char *)(v7 + 40) = 1;
  return sub_100056FD4((uint64_t)v1, (void (*)(void))type metadata accessor for ErrorView);
}

uint64_t sub_10004EA40@<X0>(uint64_t a1@<X8>)
{
  memcpy(v4, v1, sizeof(v4));
  return sub_10004E91C(a1);
}

uint64_t sub_10004EA84@<X0>(uint64_t a1@<X8>)
{
  uint64_t v32 = a1;
  uint64_t v1 = sub_10012BCB0();
  uint64_t v28 = *(void *)(v1 - 8);
  uint64_t v29 = v1;
  __chkstk_darwin(v1);
  uint64_t v3 = (char *)&v27 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = sub_1000053D8(&qword_10016CAF8);
  uint64_t v4 = __chkstk_darwin(v31);
  char v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v27 - v7;
  uint64_t v30 = sub_1000053D8(&qword_10016CCC0);
  __chkstk_darwin(v30);
  uint64_t v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1000053D8(&qword_10016CB20);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_10012C610();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v27 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  int v20 = (char *)&v27 - v19;
  sub_10004DDD0((uint64_t)v13);
  if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v13, 1, v14) == 1)
  {
    sub_10000D930((uint64_t)v13, &qword_10016CB20);
    sub_10004E5EC(&v33);
    char v21 = v34;
    uint64_t v22 = v35;
    uint64_t v23 = v38;
    uint64_t v24 = v39;
    *(_OWORD *)uint64_t v10 = v33;
    v10[16] = v21;
    *((void *)v10 + 3) = v22;
    long long v25 = v37;
    *((_OWORD *)v10 + 2) = v36;
    *((_OWORD *)v10 + 3) = v25;
    *((void *)v10 + 8) = v23;
    *((void *)v10 + 9) = v24;
    swift_storeEnumTagMultiPayload();
    sub_100057920();
    sub_100057208();
    return sub_10012B0E0();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v20, v13, v14);
    (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v18, v20, v14);
    sub_10012BCA0();
    sub_10012B7B0();
    sub_10004C8E8(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v6, 0.0, 1, INFINITY, 0);
    (*(void (**)(char *, uint64_t))(v28 + 8))(v3, v29);
    sub_10003BFD4((uint64_t)v6, (uint64_t)v8, &qword_10016CAF8);
    sub_10000B114((uint64_t)v8, (uint64_t)v10, &qword_10016CAF8);
    swift_storeEnumTagMultiPayload();
    sub_100057920();
    sub_100057208();
    sub_10012B0E0();
    sub_10000D930((uint64_t)v8, &qword_10016CAF8);
    return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v20, v14);
  }
}

uint64_t sub_10004EEC4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v47 = a2;
  uint64_t v3 = sub_1000053D8(&qword_10016B9A0);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000053D8(&qword_10016CAC8);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000053D8(&qword_10016CC78);
  uint64_t v42 = *(void *)(v9 - 8);
  uint64_t v10 = __chkstk_darwin(v9);
  unint64_t v41 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v43 = (char *)&v38 - v12;
  uint64_t v13 = sub_1000053D8(&qword_10016CC80);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1000053D8(&qword_10016CB20);
  __chkstk_darwin(v16 - 8);
  uint64_t v18 = (char *)&v38 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_10012C610();
  uint64_t v45 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  uint64_t v44 = (char *)&v38 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10004DDD0((uint64_t)v18);
  uint64_t v46 = v19;
  if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v18, 1, v19) == 1)
  {
    sub_10000D930((uint64_t)v18, &qword_10016CB20);
    sub_10004E5EC(&v52);
    char v21 = v53;
    unint64_t v22 = v54;
    uint64_t v23 = v57;
    uint64_t v24 = v58;
    *(_OWORD *)uint64_t v15 = v52;
    v15[16] = v21;
    *((void *)v15 + 3) = v22;
    long long v25 = v56;
    *((_OWORD *)v15 + 2) = v55;
    *((_OWORD *)v15 + 3) = v25;
    *((void *)v15 + 8) = v23;
    *((void *)v15 + 9) = v24;
    swift_storeEnumTagMultiPayload();
    unint64_t v26 = sub_10005C550((uint64_t)&unk_10016CAD0);
    unint64_t v27 = sub_10005C550((uint64_t)&qword_10016B9B0);
    uint64_t v48 = v6;
    uint64_t v49 = v3;
    unint64_t v50 = v26;
    unint64_t v51 = v27;
    swift_getOpaqueTypeConformance2();
    sub_100057208();
    return sub_10012B0E0();
  }
  else
  {
    uint64_t v40 = v13;
    uint64_t v29 = (uint64_t)v44;
    (*(void (**)(char *, char *, uint64_t))(v45 + 32))(v44, v18, v46);
    *(void *)uint64_t v8 = sub_10012B000();
    *((void *)v8 + 1) = 0;
    v8[16] = 0;
    uint64_t v30 = sub_1000053D8(&qword_10016CC88);
    sub_10004F510(v29, a1, (uint64_t)&v8[*(int *)(v30 + 44)]);
    uint64_t v31 = enum case for DynamicTypeSize.xxLarge(_:);
    uint64_t v32 = sub_10012ABF0();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v32 - 8) + 104))(v5, v31, v32);
    sub_10005745C((uint64_t)&qword_10016B9F0);
    uint64_t result = sub_10012C9E0();
    if (result)
    {
      unint64_t v39 = sub_10005C550((uint64_t)&unk_10016CAD0);
      unint64_t v33 = sub_10005C550((uint64_t)&qword_10016B9B0);
      uint64_t v34 = v42;
      unint64_t v35 = v33;
      long long v36 = v41;
      sub_10012B4C0();
      sub_10000D930((uint64_t)v5, &qword_10016B9A0);
      sub_10000D930((uint64_t)v8, &qword_10016CAC8);
      long long v37 = v43;
      (*(void (**)(char *, char *, uint64_t))(v34 + 32))(v43, v36, v9);
      (*(void (**)(char *, char *, uint64_t))(v34 + 16))(v15, v37, v9);
      swift_storeEnumTagMultiPayload();
      *(void *)&long long v52 = v6;
      *((void *)&v52 + 1) = v3;
      unint64_t v53 = v39;
      unint64_t v54 = v35;
      swift_getOpaqueTypeConformance2();
      sub_100057208();
      sub_10012B0E0();
      (*(void (**)(char *, uint64_t))(v34 + 8))(v37, v9);
      return (*(uint64_t (**)(char *, uint64_t))(v45 + 8))(v44, v46);
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_10004F510@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v46 = a2;
  uint64_t v40 = a1;
  uint64_t v49 = a3;
  uint64_t v3 = sub_10012B120();
  uint64_t v47 = *(void *)(v3 - 8);
  uint64_t v48 = v3;
  __chkstk_darwin(v3);
  uint64_t v42 = (char *)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = sub_1000053D8(&qword_10016CC90);
  __chkstk_darwin(v44);
  uint64_t v6 = (uint64_t *)((char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v45 = sub_1000053D8(&qword_10016CC98);
  uint64_t v43 = *(void *)(v45 - 8);
  uint64_t v7 = __chkstk_darwin(v45);
  uint64_t v9 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  unint64_t v41 = (char *)&v40 - v10;
  uint64_t v11 = sub_10012C610();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for SmallCurrentObservationView(0);
  uint64_t v16 = v15 - 8;
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v40 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_1000053D8(&qword_10016CCA0);
  uint64_t v20 = v19 - 8;
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v23 = (char *)&v40 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  long long v25 = (char *)&v40 - v24;
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, v40, v11);
  *(void *)&v18[*(int *)(v16 + 28)] = swift_getKeyPath();
  sub_1000053D8(&qword_10016B088);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v18, v14, v11);
  sub_100057158((uint64_t)v18, (uint64_t)v23, (void (*)(void))type metadata accessor for SmallCurrentObservationView);
  *(_WORD *)&v23[*(int *)(v20 + 44)] = 256;
  sub_100056FD4((uint64_t)v18, (void (*)(void))type metadata accessor for SmallCurrentObservationView);
  sub_10003BFD4((uint64_t)v23, (uint64_t)v25, &qword_10016CCA0);
  *uint64_t v6 = sub_10012B7A0();
  v6[1] = v26;
  uint64_t v27 = sub_1000053D8(&qword_10016CCA8);
  sub_10004FA54(v46, (uint64_t)v6 + *(int *)(v27 + 44));
  uint64_t v28 = v42;
  sub_10012B110();
  sub_10005C550((uint64_t)&unk_10016CCB0);
  sub_10012B520();
  (*(void (**)(char *, uint64_t))(v47 + 8))(v28, v48);
  sub_10000D930((uint64_t)v6, &qword_10016CC90);
  uint64_t v29 = v43;
  uint64_t v30 = v41;
  uint64_t v31 = v45;
  (*(void (**)(char *, char *, uint64_t))(v43 + 32))(v41, v9, v45);
  sub_10000B114((uint64_t)v25, (uint64_t)v23, &qword_10016CCA0);
  uint64_t v32 = v29;
  unint64_t v33 = *(void (**)(char *, char *, uint64_t))(v29 + 16);
  uint64_t v34 = v31;
  v33(v9, v30, v31);
  uint64_t v35 = v49;
  sub_10000B114((uint64_t)v23, v49, &qword_10016CCA0);
  uint64_t v36 = sub_1000053D8(&qword_10016CCB8);
  uint64_t v37 = v35 + *(int *)(v36 + 48);
  *(void *)uint64_t v37 = 0x3FF0000000000000;
  *(unsigned char *)(v37 + 8) = 0;
  v33((char *)(v35 + *(int *)(v36 + 64)), v9, v34);
  uint64_t v38 = *(void (**)(char *, uint64_t))(v32 + 8);
  v38(v30, v34);
  sub_10000D930((uint64_t)v25, &qword_10016CCA0);
  v38(v9, v34);
  return sub_10000D930((uint64_t)v23, &qword_10016CCA0);
}

uint64_t sub_10004FA54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v40 = a2;
  uint64_t v3 = sub_10012C6D0();
  uint64_t v38 = *(void *)(v3 - 8);
  uint64_t v39 = v3;
  __chkstk_darwin(v3);
  uint64_t v37 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000053D8(&qword_10016B430);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10012C6B0();
  uint64_t v36 = *(void *)(v8 - 8);
  uint64_t v9 = __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v35 - v12;
  uint64_t v14 = type metadata accessor for ForecastEntry.Model(0);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_1000053D8(&qword_10016B310);
  __chkstk_darwin(v17 - 8);
  uint64_t v19 = (char *)&v35 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = type metadata accessor for AggregateWeatherViewModel(0);
  __chkstk_darwin(v20);
  uint64_t v22 = (char *)&v35 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = a1 + *(int *)(type metadata accessor for WidgetContentView(0) + 32);
  uint64_t v24 = type metadata accessor for ForecastEntry(0);
  sub_100057158(v23 + *(int *)(v24 + 28), (uint64_t)v16, (void (*)(void))type metadata accessor for ForecastEntry.Model);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1000571AC((uint64_t)v16, (uint64_t)v19, (void (*)(void))type metadata accessor for WeatherDataViewModel);
    uint64_t v25 = type metadata accessor for WeatherDataViewModel();
    uint64_t v26 = (uint64_t)v19;
    uint64_t v27 = 0;
  }
  else
  {
    uint64_t v25 = type metadata accessor for WeatherDataViewModel();
    uint64_t v26 = (uint64_t)v19;
    uint64_t v27 = 1;
  }
  _s13WeatherWidget20WeatherDataViewModelOwst_0(v26, v27, 1, v25);
  type metadata accessor for WeatherDataViewModel();
  if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v19, 1, v25) == 1)
  {
    sub_10000D930((uint64_t)v19, &qword_10016B310);
LABEL_8:
    uint64_t v28 = 1;
    uint64_t v30 = v39;
    uint64_t v29 = v40;
    return _s13WeatherWidget20WeatherDataViewModelOwst_0(v29, v28, 1, v30);
  }
  if (swift_getEnumCaseMultiPayload())
  {
    sub_100056FD4((uint64_t)v19, (void (*)(void))type metadata accessor for WeatherDataViewModel);
    goto LABEL_8;
  }
  sub_1000571AC((uint64_t)v19, (uint64_t)v22, (void (*)(void))type metadata accessor for AggregateWeatherViewModel);
  sub_10000B114((uint64_t)&v22[*(int *)(v20 + 40)], (uint64_t)v7, &qword_10016B430);
  int v32 = _s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v7, 1, v8);
  uint64_t v30 = v39;
  uint64_t v29 = v40;
  if (v32 == 1)
  {
    sub_100056FD4((uint64_t)v22, (void (*)(void))type metadata accessor for AggregateWeatherViewModel);
    sub_10000D930((uint64_t)v7, &qword_10016B430);
    uint64_t v28 = 1;
  }
  else
  {
    uint64_t v33 = v36;
    (*(void (**)(char *, char *, uint64_t))(v36 + 32))(v13, v7, v8);
    (*(void (**)(char *, char *, uint64_t))(v33 + 16))(v11, v13, v8);
    uint64_t v34 = v37;
    sub_10012C6C0();
    (*(void (**)(char *, uint64_t))(v33 + 8))(v13, v8);
    sub_100056FD4((uint64_t)v22, (void (*)(void))type metadata accessor for AggregateWeatherViewModel);
    (*(void (**)(uint64_t, char *, uint64_t))(v38 + 32))(v29, v34, v30);
    uint64_t v28 = 0;
  }
  return _s13WeatherWidget20WeatherDataViewModelOwst_0(v29, v28, 1, v30);
}

uint64_t sub_10004FF30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v35 = a1;
  uint64_t v38 = a3;
  uint64_t v36 = sub_1000053D8(&qword_10016CB68);
  __chkstk_darwin(v36);
  uint64_t v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = sub_1000053D8(&qword_10016CB70);
  __chkstk_darwin(v37);
  uint64_t v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000053D8(&qword_10016CB78);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10012C040();
  uint64_t v34 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v33 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1000053D8(&qword_10016CB20);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_10012C610();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v33 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = a2 + *(int *)(type metadata accessor for WidgetContentView(0) + 32);
  uint64_t v21 = type metadata accessor for ForecastEntry(0);
  sub_10004E1D4(*(void *)(v20 + *(int *)(v21 + 24)), *(void *)(v20 + *(int *)(v21 + 24) + 8), 1, (uint64_t)v15);
  if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v15, 1, v16) == 1)
  {
    uint64_t v22 = &qword_10016CB20;
    uint64_t v23 = (uint64_t)v15;
LABEL_5:
    sub_10000D930(v23, v22);
    sub_10004E5EC(&v39);
    char v24 = v40;
    uint64_t v25 = v41;
    uint64_t v26 = v44;
    uint64_t v27 = v45;
    *(_OWORD *)uint64_t v5 = v39;
    v5[16] = v24;
    *((void *)v5 + 3) = v25;
    long long v28 = v43;
    *((_OWORD *)v5 + 2) = v42;
    *((_OWORD *)v5 + 3) = v28;
    *((void *)v5 + 8) = v26;
    *((void *)v5 + 9) = v27;
    swift_storeEnumTagMultiPayload();
    sub_10005C550((uint64_t)&unk_10016CB80);
    sub_100057208();
    return sub_10012B0E0();
  }
  (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v19, v15, v16);
  sub_10012ABD0();
  sub_10004D87C((uint64_t)v10);
  if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v10, 1, v11) == 1)
  {
    (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
    uint64_t v22 = &qword_10016CB78;
    uint64_t v23 = (uint64_t)v10;
    goto LABEL_5;
  }
  uint64_t v30 = (uint64_t)v33;
  uint64_t v31 = v34;
  (*(void (**)(char *, char *, uint64_t))(v34 + 32))(v33, v10, v11);
  *(void *)uint64_t v7 = sub_10012AFF0();
  *((void *)v7 + 1) = 0;
  v7[16] = 0;
  uint64_t v32 = sub_1000053D8(&qword_10016CB88);
  sub_100050410((uint64_t)v19, a2, v30, &v7[*(int *)(v32 + 44)]);
  sub_10000B114((uint64_t)v7, (uint64_t)v5, &qword_10016CB70);
  swift_storeEnumTagMultiPayload();
  sub_10005C550((uint64_t)&unk_10016CB80);
  sub_100057208();
  sub_10012B0E0();
  sub_10000D930((uint64_t)v7, &qword_10016CB70);
  (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v30, v11);
  return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v19, v16);
}

uint64_t sub_100050410@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X8>)
{
  uint64_t v65 = a3;
  uint64_t v66 = a4;
  uint64_t v57 = a1;
  uint64_t v5 = sub_10012C040();
  uint64_t v62 = *(void *)(v5 - 8);
  uint64_t v63 = v5;
  __chkstk_darwin(v5);
  uint64_t v60 = (char *)&v55 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = sub_10012BAD0();
  uint64_t v61 = *(void *)(v64 - 8);
  uint64_t v7 = __chkstk_darwin(v64);
  uint64_t v69 = (char *)&v55 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v68 = (char *)&v55 - v9;
  uint64_t v56 = sub_10012AFE0();
  uint64_t v10 = *(void *)(v56 - 8);
  uint64_t v11 = __chkstk_darwin(v56);
  uint64_t v13 = (char *)&v55 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v55 - v14;
  uint64_t v16 = type metadata accessor for WidgetContentView(0);
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v55 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_10012C610();
  uint64_t v20 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  uint64_t v22 = (char *)&v55 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_10012C270();
  uint64_t v58 = *(void *)(v23 - 8);
  uint64_t v59 = v23;
  uint64_t v24 = __chkstk_darwin(v23);
  uint64_t v67 = (char *)&v55 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  uint64_t v27 = (char *)&v55 - v26;
  (*(void (**)(char *, uint64_t, uint64_t))(v20 + 16))(v22, v57, v19);
  sub_10012C260();
  uint64_t v28 = *(int *)(v16 + 40);
  unsigned int v29 = *(unsigned __int8 *)(a2 + v28);
  if (sub_1000051CC(*(unsigned char *)(a2 + v28)))
  {
    uint64_t v70 = 0x4028000000000000;
    __int16 v71 = 0;
    sub_10012B0E0();
    uint64_t v30 = v73;
    __int16 v31 = v74;
    if (HIBYTE(v74)) {
      __int16 v32 = 256;
    }
    else {
      __int16 v32 = 0;
    }
  }
  else
  {
    sub_100057158(a2, (uint64_t)v18, (void (*)(void))type metadata accessor for WidgetContentView);
    if (v29 > 1)
    {
      sub_10008F5C4((uint64_t)v15);
      uint64_t v33 = v56;
      (*(void (**)(char *, void, uint64_t))(v10 + 104))(v13, enum case for ContentSizeCategory.large(_:), v56);
      sub_10010E1A0();
      char v35 = v34;
      uint64_t v36 = *(void (**)(char *, uint64_t))(v10 + 8);
      v36(v13, v33);
      v36(v15, v33);
      sub_100056FD4((uint64_t)v18, (void (*)(void))type metadata accessor for WidgetContentView);
      if ((v35 & 1) == 0)
      {
        uint64_t v70 = 0x4030000000000000;
        __int16 v71 = 0;
        char v72 = 1;
        sub_1000053D8(&qword_10016CB90);
        sub_1000582E8();
        goto LABEL_12;
      }
    }
    else
    {
      sub_100056FD4((uint64_t)v18, (void (*)(void))type metadata accessor for WidgetContentView);
    }
    uint64_t v70 = 0x4018000000000000;
    __int16 v71 = 256;
    sub_10012B0E0();
    uint64_t v30 = v73;
    __int16 v31 = v74;
    if (HIBYTE(v74)) {
      __int16 v32 = 256;
    }
    else {
      __int16 v32 = 0;
    }
  }
  uint64_t v70 = v30;
  __int16 v71 = v32 | v31;
  char v72 = 0;
  sub_1000053D8(&qword_10016CB90);
  sub_1000582E8();
LABEL_12:
  sub_10012B0E0();
  uint64_t v57 = v73;
  LODWORD(v56) = v74;
  char v37 = v75;
  (*(void (**)(char *, uint64_t, uint64_t))(v62 + 16))(v60, v65, v63);
  uint64_t v38 = v68;
  sub_10012BAC0();
  uint64_t v39 = v58;
  char v40 = *(void (**)(char *, char *, uint64_t))(v58 + 16);
  uint64_t v41 = v67;
  long long v55 = v27;
  uint64_t v42 = v59;
  v40(v67, v27, v59);
  LOBYTE(v73) = v37;
  uint64_t v43 = v61;
  uint64_t v44 = *(void (**)(char *, char *, uint64_t))(v61 + 16);
  uint64_t v45 = v38;
  uint64_t v46 = v64;
  v44(v69, v45, v64);
  uint64_t v47 = v66;
  v40(v66, v41, v42);
  uint64_t v48 = sub_1000053D8(&qword_10016CBA0);
  uint64_t v49 = &v47[*(int *)(v48 + 48)];
  char v50 = v73;
  *(void *)uint64_t v49 = v57;
  *((_WORD *)v49 + 4) = v56;
  v49[10] = v50;
  unint64_t v51 = v69;
  v44(&v47[*(int *)(v48 + 64)], v69, v46);
  long long v52 = *(void (**)(char *, uint64_t))(v43 + 8);
  v52(v68, v46);
  unint64_t v53 = *(void (**)(char *, uint64_t))(v39 + 8);
  v53(v55, v42);
  v52(v51, v46);
  return ((uint64_t (*)(char *, uint64_t))v53)(v67, v42);
}

uint64_t sub_100050B1C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v86 = a1;
  uint64_t v77 = sub_1000053D8(&qword_10016CB08);
  __chkstk_darwin(v77);
  uint64_t v79 = (_OWORD *)((char *)&v65 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v78 = sub_1000053D8(&qword_10016CA30);
  __chkstk_darwin(v78);
  __int16 v71 = (uint64_t *)((char *)&v65 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v85 = sub_1000053D8(&qword_10016CA20);
  __chkstk_darwin(v85);
  uint64_t v80 = (char *)&v65 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v83 = sub_1000053D8(&qword_10016CB10);
  __chkstk_darwin(v83);
  uint64_t v84 = (uint64_t)&v65 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v73 = sub_1000053D8(&qword_10016CB18);
  __chkstk_darwin(v73);
  unsigned __int16 v74 = (_OWORD *)((char *)&v65 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v75 = sub_10012C760();
  uint64_t v70 = *(void *)(v75 - 8);
  __chkstk_darwin(v75);
  uint64_t v69 = (char *)&v65 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000053D8(&qword_10016CB20);
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  uint64_t v11 = (char *)&v65 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v65 - v12;
  uint64_t v81 = sub_10012C610();
  uint64_t v76 = *(void *)(v81 - 8);
  uint64_t v14 = __chkstk_darwin(v81);
  uint64_t v68 = (char *)&v65 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v66 = (char *)&v65 - v17;
  __chkstk_darwin(v16);
  uint64_t v67 = (char *)&v65 - v18;
  uint64_t v82 = sub_1000053D8(&qword_10016CA08);
  __chkstk_darwin(v82);
  char v72 = (char *)&v65 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_10012AFE0();
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v24 = (char *)&v65 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  uint64_t v26 = (char *)&v65 - v25;
  uint64_t v27 = type metadata accessor for WidgetContentView(0);
  sub_10008F5C4((uint64_t)v26);
  if (*(unsigned char *)(v1 + *(int *)(v27 + 40))) {
    uint64_t v28 = (unsigned int *)&enum case for ContentSizeCategory.accessibilityMedium(_:);
  }
  else {
    uint64_t v28 = (unsigned int *)&enum case for ContentSizeCategory.extraExtraExtraLarge(_:);
  }
  (*(void (**)(char *, void, uint64_t))(v21 + 104))(v24, *v28, v20);
  sub_10010E50C();
  char v30 = v29;
  __int16 v31 = *(void (**)(char *, uint64_t))(v21 + 8);
  v31(v24, v20);
  v31(v26, v20);
  uint64_t v32 = v1 + *(int *)(v27 + 32);
  uint64_t v33 = v32 + *(int *)(type metadata accessor for ForecastEntry(0) + 24);
  uint64_t v34 = *(void *)(v33 + 16);
  unint64_t v35 = *(void *)(v33 + 24);
  if (v30)
  {
    sub_10004E1D4(v34, v35, 0, (uint64_t)v13);
    uint64_t v36 = v81;
    if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v13, 1, v81) == 1)
    {
      sub_10000D930((uint64_t)v13, &qword_10016CB20);
      sub_10004E5EC(&v87);
      char v37 = v88;
      uint64_t v38 = v89;
      uint64_t v39 = v92;
      uint64_t v40 = v93;
      uint64_t v41 = v74;
      _OWORD *v74 = v87;
      *((unsigned char *)v41 + 16) = v37;
      *((void *)v41 + 3) = v38;
      long long v42 = v91;
      void v41[2] = v90;
      v41[3] = v42;
      *((void *)v41 + 8) = v39;
      *((void *)v41 + 9) = v40;
      swift_storeEnumTagMultiPayload();
      sub_10005745C((uint64_t)&unk_10016CA10);
      sub_100057208();
      uint64_t v43 = (uint64_t)v72;
      sub_10012B0E0();
    }
    else
    {
      uint64_t v52 = v76;
      unint64_t v53 = v67;
      (*(void (**)(char *, char *, uint64_t))(v76 + 32))(v67, v13, v36);
      (*(void (**)(char *, char *, uint64_t))(v52 + 16))(v66, v53, v36);
      unint64_t v54 = v69;
      sub_10012C750();
      uint64_t v55 = v70;
      uint64_t v56 = v75;
      (*(void (**)(_OWORD *, char *, uint64_t))(v70 + 16))(v74, v54, v75);
      swift_storeEnumTagMultiPayload();
      sub_10005745C((uint64_t)&unk_10016CA10);
      sub_100057208();
      uint64_t v43 = (uint64_t)v72;
      sub_10012B0E0();
      (*(void (**)(char *, uint64_t))(v55 + 8))(v54, v56);
      (*(void (**)(char *, uint64_t))(v52 + 8))(v53, v36);
    }
    uint64_t v57 = &qword_10016CA08;
    sub_10000B114(v43, v84, &qword_10016CA08);
    swift_storeEnumTagMultiPayload();
    sub_1000573B0();
    sub_1000574A0();
    sub_10012B0E0();
    uint64_t v58 = v43;
  }
  else
  {
    sub_10004E1D4(v34, v35, 1, (uint64_t)v11);
    uint64_t v44 = v81;
    if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v11, 1, v81) == 1)
    {
      sub_10000D930((uint64_t)v11, &qword_10016CB20);
      sub_10004E5EC(&v87);
      char v45 = v88;
      uint64_t v46 = v89;
      uint64_t v47 = v92;
      uint64_t v48 = v93;
      uint64_t v49 = v79;
      *uint64_t v79 = v87;
      *((unsigned char *)v49 + 16) = v45;
      *((void *)v49 + 3) = v46;
      long long v50 = v91;
      v49[2] = v90;
      v49[3] = v50;
      *((void *)v49 + 8) = v47;
      *((void *)v49 + 9) = v48;
      swift_storeEnumTagMultiPayload();
      sub_10005C550((uint64_t)&unk_10016CA28);
      sub_100057208();
      uint64_t v51 = (uint64_t)v80;
      sub_10012B0E0();
    }
    else
    {
      uint64_t v59 = v76;
      uint64_t v60 = (uint64_t)v68;
      (*(void (**)(char *, char *, uint64_t))(v76 + 32))(v68, v11, v44);
      uint64_t v61 = sub_10012AFF0();
      uint64_t v62 = (uint64_t)v71;
      *__int16 v71 = v61;
      *(void *)(v62 + 8) = 0;
      *(unsigned char *)(v62 + 16) = 1;
      uint64_t v63 = sub_1000053D8(&qword_10016CB28);
      sub_100051564(v60, v1, (char *)(v62 + *(int *)(v63 + 44)));
      sub_10000B114(v62, (uint64_t)v79, &qword_10016CA30);
      swift_storeEnumTagMultiPayload();
      sub_10005C550((uint64_t)&unk_10016CA28);
      sub_100057208();
      uint64_t v51 = (uint64_t)v80;
      sub_10012B0E0();
      sub_10000D930(v62, &qword_10016CA30);
      (*(void (**)(uint64_t, uint64_t))(v59 + 8))(v60, v44);
    }
    uint64_t v57 = &qword_10016CA20;
    sub_10000B114(v51, v84, &qword_10016CA20);
    swift_storeEnumTagMultiPayload();
    sub_1000573B0();
    sub_1000574A0();
    sub_10012B0E0();
    uint64_t v58 = v51;
  }
  return sub_10000D930(v58, v57);
}

uint64_t sub_100051564@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v62 = a2;
  uint64_t v67 = a3;
  uint64_t v4 = sub_10012B120();
  uint64_t v65 = *(void *)(v4 - 8);
  uint64_t v66 = v4;
  __chkstk_darwin(v4);
  uint64_t v64 = (char *)&v56 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000053D8(&qword_10016CB30);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (uint64_t *)((char *)&v56 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = sub_1000053D8(&qword_10016CB38);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v56 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = sub_1000053D8(&qword_10016CB40);
  uint64_t v68 = *(void *)(v63 - 8);
  uint64_t v12 = __chkstk_darwin(v63);
  uint64_t v60 = (char *)&v56 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v61 = (char *)&v56 - v14;
  uint64_t v15 = sub_10012C610();
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v56 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_10012C270();
  uint64_t v58 = *(void *)(v19 - 8);
  uint64_t v20 = v58;
  uint64_t v59 = v19;
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v23 = (char *)&v56 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  uint64_t v25 = (char *)&v56 - v24;
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v18, a1, v15);
  uint64_t v26 = v25;
  uint64_t v57 = v25;
  sub_10012C260();
  *uint64_t v8 = sub_10012B7A0();
  v8[1] = v27;
  uint64_t v28 = (uint64_t)v8 + *(int *)(sub_1000053D8(&qword_10016CB48) + 44);
  uint64_t v29 = type metadata accessor for WidgetContentView(0);
  sub_100057158(v62 + *(int *)(v29 + 32), v28, (void (*)(void))type metadata accessor for ForecastEntry);
  LOBYTE(v28) = sub_10012B1B0();
  sub_10012AB70();
  uint64_t v31 = v30;
  uint64_t v33 = v32;
  uint64_t v35 = v34;
  uint64_t v37 = v36;
  sub_10000B114((uint64_t)v8, (uint64_t)v11, &qword_10016CB30);
  uint64_t v38 = &v11[*(int *)(v9 + 36)];
  *uint64_t v38 = v28;
  *((void *)v38 + 1) = v31;
  *((void *)v38 + 2) = v33;
  *((void *)v38 + 3) = v35;
  *((void *)v38 + 4) = v37;
  v38[40] = 0;
  sub_10000D930((uint64_t)v8, &qword_10016CB30);
  uint64_t v39 = v64;
  sub_10012B110();
  sub_100058248();
  uint64_t v40 = v60;
  sub_10012B520();
  (*(void (**)(char *, uint64_t))(v65 + 8))(v39, v66);
  sub_10000D930((uint64_t)v11, &qword_10016CB38);
  uint64_t v41 = v68;
  long long v42 = v61;
  uint64_t v43 = v63;
  (*(void (**)(char *, char *, uint64_t))(v68 + 32))(v61, v40, v63);
  uint64_t v44 = *(void (**)(char *, char *, uint64_t))(v20 + 16);
  char v45 = v26;
  uint64_t v46 = v59;
  v44(v23, v45, v59);
  char v69 = 0;
  uint64_t v47 = *(void (**)(char *, char *, uint64_t))(v41 + 16);
  uint64_t v48 = v42;
  v47(v40, v42, v43);
  uint64_t v49 = v67;
  v44(v67, v23, v46);
  uint64_t v50 = sub_1000053D8(&qword_10016CB60);
  uint64_t v51 = &v49[*(int *)(v50 + 48)];
  char v52 = v69;
  *(void *)uint64_t v51 = 0x4018000000000000;
  v51[8] = v52;
  v47(&v49[*(int *)(v50 + 64)], v40, v43);
  unint64_t v53 = *(void (**)(char *, uint64_t))(v68 + 8);
  v53(v48, v43);
  unint64_t v54 = *(void (**)(char *, uint64_t))(v58 + 8);
  v54(v57, v46);
  v53(v40, v43);
  return ((uint64_t (*)(char *, uint64_t))v54)(v23, v46);
}

uint64_t sub_100051ADC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v47 = a3;
  uint64_t v45 = sub_1000053D8(&qword_10016CBA8);
  __chkstk_darwin(v45);
  uint64_t v6 = (char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = sub_1000053D8(&qword_10016CBB0);
  __chkstk_darwin(v46);
  uint64_t v43 = (uint64_t *)((char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = sub_1000053D8(&qword_10016CBB8);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for DailyViewAttributes();
  __chkstk_darwin(v11);
  uint64_t v41 = (uint64_t)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1000053D8(&qword_10016CB20);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)&v40 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_10012C610();
  uint64_t v44 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v40 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_1000053D8(&qword_10016CB78);
  __chkstk_darwin(v19 - 8);
  uint64_t v21 = (char *)&v40 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = a1;
  sub_10012ABD0();
  sub_10004D87C((uint64_t)v21);
  uint64_t v22 = sub_10012C040();
  if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v21, 1, v22) == 1)
  {
    uint64_t v23 = &qword_10016CB78;
    uint64_t v24 = (uint64_t)v21;
  }
  else
  {
    uint64_t v25 = sub_10012C030();
    (*(void (**)(char *, uint64_t))(*(void *)(v22 - 8) + 8))(v21, v22);
    uint64_t v26 = *(void *)(v25 + 16);
    swift_bridgeObjectRelease();
    sub_10004DDD0((uint64_t)v15);
    if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v15, 1, v16) == 1)
    {
      uint64_t v23 = &qword_10016CB20;
      uint64_t v24 = (uint64_t)v15;
    }
    else
    {
      uint64_t v27 = v44;
      (*(void (**)(char *, char *, uint64_t))(v44 + 32))(v18, v15, v16);
      sub_10004D4A8(v26, (uint64_t)v10);
      if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v10, 1, v11) != 1)
      {
        uint64_t v34 = (uint64_t)v10;
        uint64_t v35 = v27;
        uint64_t v36 = v41;
        sub_1000571AC(v34, v41, (void (*)(void))type metadata accessor for DailyViewAttributes);
        uint64_t v37 = sub_10012AF10();
        uint64_t v38 = (uint64_t)v43;
        *uint64_t v43 = v37;
        *(void *)(v38 + 8) = 0;
        *(unsigned char *)(v38 + 16) = 0;
        uint64_t v39 = sub_1000053D8(&qword_10016CBC8);
        sub_100052054((uint64_t)v18, v42, v36, a2, v38 + *(int *)(v39 + 44));
        sub_10000B114(v38, (uint64_t)v6, &qword_10016CBB0);
        swift_storeEnumTagMultiPayload();
        sub_10005C550((uint64_t)&unk_10016CBC0);
        sub_100057208();
        sub_10012B0E0();
        sub_10000D930(v38, &qword_10016CBB0);
        sub_100056FD4(v36, (void (*)(void))type metadata accessor for DailyViewAttributes);
        return (*(uint64_t (**)(char *, uint64_t))(v35 + 8))(v18, v16);
      }
      (*(void (**)(char *, uint64_t))(v27 + 8))(v18, v16);
      uint64_t v23 = &qword_10016CBB8;
      uint64_t v24 = (uint64_t)v10;
    }
  }
  sub_10000D930(v24, v23);
  sub_10004E5EC(&v48);
  char v28 = v49;
  uint64_t v29 = v50;
  uint64_t v30 = v53;
  uint64_t v31 = v54;
  *(_OWORD *)uint64_t v6 = v48;
  v6[16] = v28;
  *((void *)v6 + 3) = v29;
  long long v32 = v52;
  *((_OWORD *)v6 + 2) = v51;
  *((_OWORD *)v6 + 3) = v32;
  *((void *)v6 + 8) = v30;
  *((void *)v6 + 9) = v31;
  swift_storeEnumTagMultiPayload();
  sub_10005C550((uint64_t)&unk_10016CBC0);
  sub_100057208();
  return sub_10012B0E0();
}

uint64_t sub_100052054@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  *(void *)&long long v47 = a4;
  uint64_t v50 = a3;
  uint64_t v54 = a2;
  uint64_t v46 = a1;
  uint64_t v53 = a5;
  uint64_t v49 = type metadata accessor for DailyView(0) - 8;
  __chkstk_darwin(v49);
  uint64_t v48 = (uint64_t)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = sub_1000053D8(&qword_10016CBD0) - 8;
  uint64_t v6 = __chkstk_darwin(v51);
  uint64_t v8 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v52 = (uint64_t)&v43 - v9;
  uint64_t v10 = sub_10012C610();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_10012BCB0();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1000053D8(&qword_10016CBD8);
  uint64_t v19 = v18 - 8;
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v22 = (char *)&v43 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  uint64_t v24 = (char *)&v43 - v23;
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v46, v10);
  sub_10012BCA0();
  sub_10012ABD0();
  sub_10012ABD0();
  sub_10012B7B0();
  sub_10012ABC0();
  (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v22, v17, v14);
  uint64_t v25 = &v22[*(int *)(v19 + 44)];
  long long v26 = v58;
  *(_OWORD *)uint64_t v25 = v57;
  *((_OWORD *)v25 + 1) = v26;
  *((_OWORD *)v25 + 2) = v59;
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  sub_10003BFD4((uint64_t)v22, (uint64_t)v24, &qword_10016CBD8);
  sub_10012B7A0();
  sub_10012ABC0();
  uint64_t v27 = v60;
  LOBYTE(v19) = v61;
  uint64_t v28 = v62;
  LODWORD(v46) = v63;
  uint64_t v45 = v64;
  uint64_t v44 = v65;
  uint64_t v29 = (uint64_t *)(v47 + *(int *)(type metadata accessor for WidgetContentView(0) + 36));
  uint64_t v31 = *v29;
  uint64_t v30 = v29[1];
  uint64_t v55 = v31;
  uint64_t v56 = v30;
  sub_1000053D8(&qword_10016C980);
  sub_10012B6B0();
  uint64_t v32 = *(void *)v66;
  long long v47 = *(_OWORD *)&v66[8];
  uint64_t v33 = v48;
  sub_100057158(v50, v48, (void (*)(void))type metadata accessor for DailyViewAttributes);
  uint64_t v34 = v33 + *(int *)(v49 + 28);
  *(void *)uint64_t v34 = v32;
  *(_OWORD *)(v34 + 8) = v47;
  sub_10012ABD0();
  sub_10012ABD0();
  sub_10012B7B0();
  sub_10012ABC0();
  sub_100057158(v33, (uint64_t)v8, (void (*)(void))type metadata accessor for DailyView);
  uint64_t v35 = &v8[*(int *)(v51 + 44)];
  long long v36 = *(_OWORD *)&v66[16];
  *(_OWORD *)uint64_t v35 = *(_OWORD *)v66;
  *((_OWORD *)v35 + 1) = v36;
  *((_OWORD *)v35 + 2) = v67;
  sub_100056FD4(v33, (void (*)(void))type metadata accessor for DailyView);
  uint64_t v37 = v52;
  sub_10003BFD4((uint64_t)v8, v52, &qword_10016CBD0);
  sub_10000B114((uint64_t)v24, (uint64_t)v22, &qword_10016CBD8);
  sub_10000B114(v37, (uint64_t)v8, &qword_10016CBD0);
  uint64_t v38 = v53;
  sub_10000B114((uint64_t)v22, v53, &qword_10016CBD8);
  uint64_t v39 = sub_1000053D8(&qword_10016CBE0);
  uint64_t v40 = v38 + *(int *)(v39 + 48);
  *(void *)uint64_t v40 = 0;
  *(unsigned char *)(v40 + 8) = 1;
  *(void *)(v40 + 16) = v27;
  *(unsigned char *)(v40 + 24) = v19;
  *(void *)(v40 + 32) = v28;
  *(unsigned char *)(v40 + 40) = v46;
  uint64_t v41 = v44;
  *(void *)(v40 + 48) = v45;
  *(void *)(v40 + 56) = v41;
  sub_10000B114((uint64_t)v8, v38 + *(int *)(v39 + 64), &qword_10016CBD0);
  sub_10000D930(v37, &qword_10016CBD0);
  sub_10000D930((uint64_t)v24, &qword_10016CBD8);
  sub_10000D930((uint64_t)v8, &qword_10016CBD0);
  return sub_10000D930((uint64_t)v22, &qword_10016CBD8);
}

uint64_t sub_100052658@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v71 = a2;
  uint64_t v69 = sub_1000053D8(&qword_10016CC30);
  __chkstk_darwin(v69);
  uint64_t v4 = (char *)&v56 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v70 = sub_1000053D8(&qword_10016CC38);
  __chkstk_darwin(v70);
  char v61 = (uint64_t *)((char *)&v56 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = sub_1000053D8(&qword_10016CBB8);
  __chkstk_darwin(v6 - 8);
  uint64_t v63 = (uint64_t)&v56 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = type metadata accessor for DailyViewAttributes();
  __chkstk_darwin(v62);
  uint64_t v60 = (uint64_t)&v56 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000053D8(&qword_10016CB20);
  uint64_t v10 = __chkstk_darwin(v9 - 8);
  uint64_t v12 = (char *)&v56 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v56 - v13;
  uint64_t v15 = sub_10012C610();
  uint64_t v66 = *(void *)(v15 - 8);
  uint64_t v67 = v15;
  uint64_t v16 = __chkstk_darwin(v15);
  uint64_t v64 = (char *)&v56 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v65 = (char *)&v56 - v18;
  uint64_t v19 = sub_10012C040();
  uint64_t v20 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  uint64_t v68 = (uint64_t)&v56 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_1000053D8(&qword_10016CB78);
  uint64_t v23 = __chkstk_darwin(v22 - 8);
  uint64_t v25 = (char *)&v56 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  uint64_t v27 = (char *)&v56 - v26;
  sub_10012ABD0();
  sub_10004D87C((uint64_t)v27);
  if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v27, 1, v19) == 1)
  {
    uint64_t v28 = &qword_10016CB78;
    uint64_t v29 = (uint64_t)v27;
  }
  else
  {
    uint64_t v30 = sub_10012C030();
    uint64_t v31 = *(void (**)(uint64_t, uint64_t))(v20 + 8);
    uint64_t v59 = v20 + 8;
    long long v58 = v31;
    v31((uint64_t)v27, v19);
    uint64_t v32 = *(void *)(v30 + 16);
    swift_bridgeObjectRelease();
    sub_10012ABD0();
    sub_10004D87C((uint64_t)v25);
    if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v25, 1, v19) == 1)
    {
      uint64_t v28 = &qword_10016CB78;
      uint64_t v29 = (uint64_t)v25;
    }
    else
    {
      uint64_t v57 = v32;
      uint64_t v33 = v68;
      (*(void (**)(uint64_t, char *, uint64_t))(v20 + 32))(v68, v25, v19);
      sub_10004E1D4(0, 0xE000000000000000, 1, (uint64_t)v14);
      uint64_t v34 = v67;
      if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v14, 1, v67) == 1)
      {
        v58(v33, v19);
        uint64_t v28 = &qword_10016CB20;
        uint64_t v29 = (uint64_t)v14;
      }
      else
      {
        long long v36 = v65;
        uint64_t v35 = v66;
        uint64_t v56 = *(void (**)(char *, char *, uint64_t))(v66 + 32);
        v56(v65, v14, v34);
        uint64_t v37 = a1 + *(int *)(type metadata accessor for WidgetContentView(0) + 32);
        uint64_t v38 = type metadata accessor for ForecastEntry(0);
        sub_10004E1D4(*(void *)(v37 + *(int *)(v38 + 24) + 16), *(void *)(v37 + *(int *)(v38 + 24) + 24), 1, (uint64_t)v12);
        if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v12, 1, v34) == 1)
        {
          (*(void (**)(char *, uint64_t))(v35 + 8))(v36, v34);
          v58(v68, v19);
          uint64_t v28 = &qword_10016CB20;
          uint64_t v29 = (uint64_t)v12;
        }
        else
        {
          uint64_t v39 = v64;
          v56(v64, v12, v34);
          uint64_t v40 = v63;
          sub_10004D4A8(v57, v63);
          if (_s13WeatherWidget20WeatherDataViewModelOwet_0(v40, 1, v62) != 1)
          {
            uint64_t v48 = v60;
            sub_1000571AC(v40, v60, (void (*)(void))type metadata accessor for DailyViewAttributes);
            uint64_t v49 = sub_10012AFF0();
            uint64_t v50 = (uint64_t)v61;
            *char v61 = v49;
            *(void *)(v50 + 8) = 0;
            *(unsigned char *)(v50 + 16) = 0;
            uint64_t v51 = sub_1000053D8(&qword_10016CC48);
            uint64_t v52 = v65;
            uint64_t v53 = a1;
            uint64_t v54 = v68;
            sub_100052E98(v65, v53, v39, v68, v48, v50 + *(int *)(v51 + 44));
            sub_10000B114(v50, (uint64_t)v4, &qword_10016CC38);
            swift_storeEnumTagMultiPayload();
            sub_10005C550((uint64_t)&unk_10016CC40);
            sub_100057208();
            sub_10012B0E0();
            sub_10000D930(v50, &qword_10016CC38);
            sub_100056FD4(v48, (void (*)(void))type metadata accessor for DailyViewAttributes);
            uint64_t v55 = *(void (**)(char *, uint64_t))(v66 + 8);
            v55(v39, v34);
            v55(v52, v34);
            return ((uint64_t (*)(uint64_t, uint64_t))v58)(v54, v19);
          }
          uint64_t v41 = *(void (**)(char *, uint64_t))(v66 + 8);
          v41(v39, v34);
          v41(v65, v34);
          v58(v68, v19);
          uint64_t v28 = &qword_10016CBB8;
          uint64_t v29 = v40;
        }
      }
    }
  }
  sub_10000D930(v29, v28);
  sub_10004E5EC(&v72);
  char v42 = v73;
  uint64_t v43 = v74;
  uint64_t v44 = v77;
  uint64_t v45 = v78;
  *(_OWORD *)uint64_t v4 = v72;
  v4[16] = v42;
  *((void *)v4 + 3) = v43;
  long long v46 = v76;
  *((_OWORD *)v4 + 2) = v75;
  *((_OWORD *)v4 + 3) = v46;
  *((void *)v4 + 8) = v44;
  *((void *)v4 + 9) = v45;
  swift_storeEnumTagMultiPayload();
  sub_10005C550((uint64_t)&unk_10016CC40);
  sub_100057208();
  return sub_10012B0E0();
}

uint64_t sub_100052E98@<X0>(char *a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v115 = a5;
  uint64_t v111 = a4;
  uint64_t v105 = a3;
  char v128 = a1;
  uint64_t v122 = a6;
  uint64_t v114 = type metadata accessor for DailyView(0);
  __chkstk_darwin(v114);
  uint64_t v116 = (uint64_t)&v102 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000053D8(&qword_10016CC50);
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  uint64_t v121 = (uint64_t)&v102 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v118 = (uint64_t)&v102 - v11;
  uint64_t v109 = sub_10012C040();
  uint64_t v108 = *(void *)(v109 - 8);
  __chkstk_darwin(v109);
  uint64_t v107 = (char *)&v102 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v120 = sub_10012BAD0();
  uint64_t v119 = *(void *)(v120 - 8);
  uint64_t v13 = __chkstk_darwin(v120);
  uint64_t v117 = (char *)&v102 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  char v132 = (char *)&v102 - v15;
  uint64_t v16 = type metadata accessor for DescriptionView();
  uint64_t v17 = __chkstk_darwin(v16 - 8);
  uint64_t v104 = (uint64_t)&v102 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v103 = (char *)&v102 - v19;
  uint64_t v106 = sub_10012B710();
  uint64_t v124 = *(void *)(v106 - 8);
  __chkstk_darwin(v106);
  uint64_t v125 = (char *)&v102 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&long long v126 = sub_1000053D8(&qword_10016CC20);
  uint64_t v21 = __chkstk_darwin(v126);
  uint64_t v113 = (uint64_t)&v102 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = __chkstk_darwin(v21);
  uint64_t v131 = (char *)&v102 - v24;
  uint64_t v25 = __chkstk_darwin(v23);
  uint64_t v27 = (char *)&v102 - v26;
  __chkstk_darwin(v25);
  uint64_t v135 = (uint64_t)&v102 - v28;
  uint64_t v29 = type metadata accessor for WidgetContentView(0);
  __chkstk_darwin(v29);
  uint64_t v31 = (char *)&v102 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = sub_1000053D8(&qword_10016CC58);
  uint64_t v33 = __chkstk_darwin(v32 - 8);
  uint64_t v133 = (uint64_t)&v102 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v33);
  uint64_t v134 = (uint64_t)&v102 - v35;
  uint64_t v36 = sub_10012C610();
  uint64_t v37 = *(void *)(v36 - 8);
  __chkstk_darwin(v36);
  uint64_t v39 = (char *)&v102 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v130 = sub_10012C270();
  uint64_t v110 = *(void *)(v130 - 8);
  uint64_t v40 = __chkstk_darwin(v130);
  uint64_t v129 = (char *)&v102 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v40);
  uint64_t v43 = (char *)&v102 - v42;
  uint64_t v44 = *(void (**)(char *, char *, uint64_t))(v37 + 16);
  v44(v39, v128, v36);
  char v128 = v43;
  sub_10012C260();
  uint64_t v123 = v29;
  uint64_t v45 = a2 + *(int *)(v29 + 32);
  uint64_t v46 = type metadata accessor for ForecastEntry(0);
  int v47 = *(unsigned __int8 *)(v45 + *(int *)(v46 + 24) + 48);
  uint64_t v112 = a2;
  if ((v47 - 3) < 2)
  {
    sub_100057158(a2, (uint64_t)v31, (void (*)(void))type metadata accessor for WidgetContentView);
LABEL_4:
    sub_100056FD4((uint64_t)v31, (void (*)(void))type metadata accessor for WidgetContentView);
    uint64_t v49 = v135;
    uint64_t v50 = v125;
    goto LABEL_5;
  }
  uint64_t v48 = v46;
  sub_100057158(a2, (uint64_t)v31, (void (*)(void))type metadata accessor for WidgetContentView);
  if (v47 == 5) {
    goto LABEL_4;
  }
  int v100 = v31[*(int *)(v123 + 32) + 48 + (uint64_t)*(int *)(v48 + 24)];
  sub_100056FD4((uint64_t)v31, (void (*)(void))type metadata accessor for WidgetContentView);
  uint64_t v49 = v135;
  uint64_t v50 = v125;
  if (v100 != 2)
  {
    uint64_t v101 = sub_1000053D8(&qword_10016CC60);
    uint64_t v56 = v49;
    _s13WeatherWidget20WeatherDataViewModelOwst_0(v134, 1, 1, v101);
    uint64_t v54 = v106;
    goto LABEL_6;
  }
LABEL_5:
  sub_10012B700();
  sub_10012B5C0();
  uint64_t v51 = sub_10012B5D0();
  swift_release();
  char v52 = sub_10012B1A0();
  uint64_t v53 = v124;
  uint64_t v54 = v106;
  (*(void (**)(char *, char *, uint64_t))(v124 + 16))(v27, v50, v106);
  uint64_t v55 = &v27[*(int *)(v126 + 36)];
  *(void *)uint64_t v55 = v51;
  v55[8] = v52;
  (*(void (**)(char *, uint64_t))(v53 + 8))(v50, v54);
  sub_10003BFD4((uint64_t)v27, v49, &qword_10016CC20);
  uint64_t v56 = v49;
  uint64_t v57 = (uint64_t)v103;
  v44(v103, v105, v36);
  sub_10000B114(v56, (uint64_t)v27, &qword_10016CC20);
  uint64_t v58 = v104;
  sub_100057158(v57, v104, (void (*)(void))type metadata accessor for DescriptionView);
  uint64_t v59 = v133;
  sub_10000B114((uint64_t)v27, v133, &qword_10016CC20);
  uint64_t v60 = (int *)sub_1000053D8(&qword_10016CC68);
  uint64_t v61 = v59 + v60[12];
  *(void *)uint64_t v61 = 0x4018000000000000;
  *(unsigned char *)(v61 + 8) = 0;
  sub_100057158(v58, v59 + v60[16], (void (*)(void))type metadata accessor for DescriptionView);
  uint64_t v62 = v59 + v60[20];
  *(void *)uint64_t v62 = 0x4018000000000000;
  *(unsigned char *)(v62 + 8) = 0;
  sub_100056FD4(v57, (void (*)(void))type metadata accessor for DescriptionView);
  sub_10000D930(v56, &qword_10016CC20);
  uint64_t v63 = v58;
  uint64_t v50 = v125;
  sub_100056FD4(v63, (void (*)(void))type metadata accessor for DescriptionView);
  sub_10000D930((uint64_t)v27, &qword_10016CC20);
  uint64_t v64 = sub_1000053D8(&qword_10016CC60);
  _s13WeatherWidget20WeatherDataViewModelOwst_0(v59, 0, 1, v64);
  sub_10003BFD4(v59, v134, &qword_10016CC58);
LABEL_6:
  sub_10012B700();
  sub_10012B5C0();
  uint64_t v65 = sub_10012B5D0();
  swift_release();
  char v66 = sub_10012B1A0();
  uint64_t v67 = v124;
  uint64_t v68 = *(void (**)(char *, char *, uint64_t))(v124 + 16);
  v68(v27, v50, v54);
  uint64_t v69 = v126;
  uint64_t v70 = &v27[*(int *)(v126 + 36)];
  *(void *)uint64_t v70 = v65;
  v70[8] = v66;
  uint64_t v71 = (uint64_t)v27;
  uint64_t v127 = v27;
  long long v72 = *(void (**)(char *, uint64_t))(v67 + 8);
  v72(v50, v54);
  sub_10003BFD4(v71, v56, &qword_10016CC20);
  (*(void (**)(char *, uint64_t, uint64_t))(v108 + 16))(v107, v111, v109);
  sub_10012BAC0();
  sub_10012B700();
  sub_10012B5C0();
  uint64_t v73 = sub_10012B5D0();
  swift_release();
  LOBYTE(v65) = sub_10012B1A0();
  uint64_t v74 = (uint64_t)v131;
  v68(v131, v50, v54);
  uint64_t v75 = v74 + *(int *)(v69 + 36);
  uint64_t v76 = v74;
  *(void *)uint64_t v75 = v73;
  *(unsigned char *)(v75 + 8) = v65;
  v72(v50, v54);
  uint64_t v77 = v74;
  uint64_t v78 = (uint64_t)v127;
  sub_10003BFD4(v77, (uint64_t)v127, &qword_10016CC20);
  uint64_t v79 = (uint64_t *)(v112 + *(int *)(v123 + 36));
  uint64_t v81 = *v79;
  uint64_t v80 = v79[1];
  uint64_t v151 = v81;
  uint64_t v152 = v80;
  sub_1000053D8(&qword_10016C980);
  sub_10012B6B0();
  uint64_t v82 = v142;
  long long v126 = v143;
  uint64_t v83 = v116;
  sub_100057158(v115, v116, (void (*)(void))type metadata accessor for DailyViewAttributes);
  uint64_t v84 = v83 + *(int *)(v114 + 20);
  *(void *)uint64_t v84 = v82;
  *(_OWORD *)(v84 + 8) = v126;
  sub_10012B7A0();
  uint64_t v85 = v121;
  sub_10004CAB0(0.0, 1, 0.0, 1, 0.0, 1, 0.0, 1, v121, 0.0, 1, 152.0, 0);
  sub_100056FD4(v83, (void (*)(void))type metadata accessor for DailyView);
  uint64_t v86 = v118;
  sub_10003BFD4(v85, v118, &qword_10016CC50);
  uint64_t v87 = v110;
  uint64_t v88 = (uint64_t)v129;
  (*(void (**)(void))(v110 + 16))();
  uint64_t v151 = 0x4028000000000000;
  LOBYTE(v152) = 0;
  uint64_t v142 = v88;
  *(void *)&long long v143 = &v151;
  uint64_t v89 = v133;
  sub_10000B114(v134, v133, &qword_10016CC58);
  *((void *)&v143 + 1) = v89;
  sub_10000B114(v135, v76, &qword_10016CC20);
  uint64_t v140 = 0x4018000000000000;
  char v141 = 0;
  uint64_t v144 = v76;
  uint64_t v145 = &v140;
  uint64_t v90 = v119;
  long long v91 = v117;
  uint64_t v92 = v132;
  uint64_t v93 = v120;
  (*(void (**)(char *, char *, uint64_t))(v119 + 16))(v117, v132, v120);
  uint64_t v138 = 0x4018000000000000;
  char v139 = 0;
  Swift::Int v146 = v91;
  Swift::Int v147 = &v138;
  uint64_t v94 = v78;
  uint64_t v95 = v113;
  sub_10000B114(v94, v113, &qword_10016CC20);
  uint64_t v136 = 0x4018000000000000;
  char v137 = 0;
  uint64_t v148 = v95;
  uint64_t v149 = &v136;
  sub_10000B114(v86, v85, &qword_10016CC50);
  uint64_t v150 = v85;
  sub_10004C264(&v142, v122);
  sub_10000D930(v86, &qword_10016CC50);
  sub_10000D930((uint64_t)v127, &qword_10016CC20);
  uint64_t v96 = *(void (**)(char *, uint64_t))(v90 + 8);
  v96(v92, v93);
  sub_10000D930(v135, &qword_10016CC20);
  sub_10000D930(v134, &qword_10016CC58);
  uint64_t v97 = *(void (**)(char *, uint64_t))(v87 + 8);
  uint64_t v98 = v130;
  v97(v128, v130);
  sub_10000D930(v85, &qword_10016CC50);
  sub_10000D930(v95, &qword_10016CC20);
  v96(v91, v93);
  sub_10000D930((uint64_t)v131, &qword_10016CC20);
  sub_10000D930(v133, &qword_10016CC58);
  return ((uint64_t (*)(char *, uint64_t))v97)(v129, v98);
}

uint64_t sub_100053CF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v33 = a1;
  uint64_t v36 = a3;
  uint64_t v34 = sub_1000053D8(&qword_10016CBE8);
  __chkstk_darwin(v34);
  uint64_t v5 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = sub_1000053D8(&qword_10016CBF0);
  __chkstk_darwin(v35);
  uint64_t v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000053D8(&qword_10016CB78);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10012C040();
  uint64_t v32 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v31 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1000053D8(&qword_10016CB20);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_10012C610();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v31 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10004E1D4(0, 0xE000000000000000, 1, (uint64_t)v15);
  if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v15, 1, v16) == 1)
  {
    uint64_t v20 = &qword_10016CB20;
    uint64_t v21 = (uint64_t)v15;
LABEL_5:
    sub_10000D930(v21, v20);
    sub_10004E5EC(&v37);
    char v22 = v38;
    uint64_t v23 = v39;
    uint64_t v24 = v42;
    uint64_t v25 = v43;
    *(_OWORD *)uint64_t v5 = v37;
    v5[16] = v22;
    *((void *)v5 + 3) = v23;
    long long v26 = v41;
    *((_OWORD *)v5 + 2) = v40;
    *((_OWORD *)v5 + 3) = v26;
    *((void *)v5 + 8) = v24;
    *((void *)v5 + 9) = v25;
    swift_storeEnumTagMultiPayload();
    sub_10005C550((uint64_t)&unk_10016CBF8);
    sub_100057208();
    return sub_10012B0E0();
  }
  (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v19, v15, v16);
  sub_10012ABD0();
  sub_10004D87C((uint64_t)v10);
  if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v10, 1, v11) == 1)
  {
    (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
    uint64_t v20 = &qword_10016CB78;
    uint64_t v21 = (uint64_t)v10;
    goto LABEL_5;
  }
  uint64_t v28 = (uint64_t)v31;
  uint64_t v29 = v32;
  (*(void (**)(char *, char *, uint64_t))(v32 + 32))(v31, v10, v11);
  *(void *)uint64_t v7 = sub_10012AFF0();
  *((void *)v7 + 1) = 0;
  v7[16] = 1;
  uint64_t v30 = sub_1000053D8(&qword_10016CC00);
  sub_1000541B8((uint64_t)v19, a2, v28, &v7[*(int *)(v30 + 44)]);
  sub_10000B114((uint64_t)v7, (uint64_t)v5, &qword_10016CBF0);
  swift_storeEnumTagMultiPayload();
  sub_10005C550((uint64_t)&unk_10016CBF8);
  sub_100057208();
  sub_10012B0E0();
  sub_10000D930((uint64_t)v7, &qword_10016CBF0);
  (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v28, v11);
  return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v19, v16);
}

uint64_t sub_1000541B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X8>)
{
  uint64_t v38 = a2;
  uint64_t v39 = a3;
  long long v40 = a4;
  uint64_t v5 = sub_1000053D8(&qword_10016CC08);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v34 - v9;
  uint64_t v11 = sub_10012C610();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_10012C270();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v34 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v21 = (char *)&v34 - v20;
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, a1, v11);
  sub_10012C260();
  type metadata accessor for WidgetContentView(0);
  uint64_t v22 = v38;
  sub_10012B7A0();
  sub_10012ABC0();
  LOBYTE(v14) = v45;
  uint64_t v36 = v46;
  uint64_t v37 = v44;
  LOBYTE(v12) = v47;
  uint64_t v34 = v49;
  uint64_t v35 = v48;
  *(void *)uint64_t v10 = sub_10012B000();
  *((void *)v10 + 1) = 0;
  v10[16] = 0;
  uint64_t v23 = sub_1000053D8(&qword_10016CC10);
  sub_100054544(v22, v39, (uint64_t)&v10[*(int *)(v23 + 44)]);
  uint64_t v24 = *(void (**)(char *, char *, uint64_t))(v16 + 16);
  v24(v19, v21, v15);
  char v43 = 1;
  char v42 = (char)v14;
  char v41 = v12;
  sub_10000B114((uint64_t)v10, (uint64_t)v8, &qword_10016CC08);
  uint64_t v25 = v40;
  v24(v40, v19, v15);
  uint64_t v26 = sub_1000053D8(&qword_10016CC18);
  uint64_t v27 = &v25[*(int *)(v26 + 48)];
  char v28 = v43;
  char v29 = v42;
  char v30 = v41;
  *(void *)uint64_t v27 = 0;
  v27[8] = v28;
  *((void *)v27 + 2) = v37;
  v27[24] = v29;
  *((void *)v27 + 4) = v36;
  v27[40] = v30;
  uint64_t v31 = v34;
  *((void *)v27 + 6) = v35;
  *((void *)v27 + 7) = v31;
  sub_10000B114((uint64_t)v8, (uint64_t)&v25[*(int *)(v26 + 64)], &qword_10016CC08);
  sub_10000D930((uint64_t)v10, &qword_10016CC08);
  uint64_t v32 = *(void (**)(char *, uint64_t))(v16 + 8);
  v32(v21, v15);
  sub_10000D930((uint64_t)v8, &qword_10016CC08);
  return ((uint64_t (*)(char *, uint64_t))v32)(v19, v15);
}

uint64_t sub_100054544@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v70 = a2;
  uint64_t v74 = a3;
  uint64_t v69 = sub_10012C040();
  uint64_t v66 = *(void *)(v69 - 8);
  __chkstk_darwin(v69);
  uint64_t v68 = (char *)&v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10012BAD0();
  uint64_t v72 = *(void *)(v5 - 8);
  uint64_t v73 = v5;
  uint64_t v6 = __chkstk_darwin(v5);
  uint64_t v71 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v67 = (char *)&v42 - v8;
  uint64_t v9 = sub_10012B710();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1000053D8(&qword_10016CC20);
  uint64_t v14 = v13 - 8;
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v42 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v42 - v18;
  uint64_t v48 = (uint64_t)&v42 - v18;
  uint64_t v20 = type metadata accessor for PrecipitationChartView();
  uint64_t v21 = __chkstk_darwin(v20 - 8);
  uint64_t v75 = (uint64_t)&v42 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  uint64_t v24 = (char *)&v42 - v23;
  uint64_t v65 = (uint64_t)&v42 - v23;
  uint64_t v25 = type metadata accessor for WidgetContentView(0);
  sub_100057158(a1 + *(int *)(v25 + 32), (uint64_t)v24, (void (*)(void))type metadata accessor for ForecastEntry);
  sub_10012B7A0();
  sub_10012ABC0();
  uint64_t v64 = v102[7];
  int v63 = v103;
  uint64_t v62 = v104;
  int v61 = v105;
  uint64_t v59 = v107;
  uint64_t v60 = v106;
  uint64_t v58 = sub_10004DC34();
  uint64_t v55 = v27;
  uint64_t v56 = v26;
  int v57 = v28;
  sub_10012B7A0();
  sub_10012ABC0();
  uint64_t v54 = v108;
  int v53 = v109;
  uint64_t v52 = v110;
  int v51 = v111;
  uint64_t v49 = v113;
  uint64_t v50 = v112;
  sub_10012B700();
  sub_10012B5C0();
  uint64_t v29 = sub_10012B5D0();
  swift_release();
  char v30 = sub_10012B1A0();
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v17, v12, v9);
  uint64_t v31 = &v17[*(int *)(v14 + 44)];
  *(void *)uint64_t v31 = v29;
  v31[8] = v30;
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  sub_10003BFD4((uint64_t)v17, (uint64_t)v19, &qword_10016CC20);
  sub_10012B7A0();
  sub_10012ABC0();
  uint64_t v47 = v114;
  int v46 = v115;
  uint64_t v32 = v116;
  LOBYTE(v14) = v117;
  uint64_t v44 = v119;
  uint64_t v45 = v118;
  (*(void (**)(char *, uint64_t, uint64_t))(v66 + 16))(v68, v70, v69);
  uint64_t v33 = v67;
  sub_10012BAC0();
  uint64_t v34 = v65;
  uint64_t v35 = v75;
  sub_100057158(v65, v75, (void (*)(void))type metadata accessor for PrecipitationChartView);
  uint64_t v94 = 0;
  char v95 = 1;
  uint64_t v96 = v64;
  char v97 = v63;
  uint64_t v98 = v62;
  char v99 = v61;
  uint64_t v100 = v60;
  uint64_t v101 = v59;
  v102[0] = v35;
  v102[1] = (uint64_t)&v94;
  v92[0] = v58;
  v92[1] = v56;
  v92[2] = v55;
  char v93 = v57 & 1;
  uint64_t v84 = 0;
  char v85 = 1;
  uint64_t v86 = v54;
  char v87 = v53;
  uint64_t v88 = v52;
  char v89 = v51;
  uint64_t v36 = v48;
  uint64_t v90 = v50;
  uint64_t v91 = v49;
  v102[2] = (uint64_t)v92;
  v102[3] = (uint64_t)&v84;
  char v43 = v17;
  sub_10000B114(v48, (uint64_t)v17, &qword_10016CC20);
  uint64_t v76 = 0;
  char v77 = 1;
  uint64_t v78 = v47;
  char v79 = v46;
  uint64_t v80 = v32;
  char v81 = v14;
  uint64_t v82 = v45;
  uint64_t v83 = v44;
  v102[4] = (uint64_t)v17;
  v102[5] = (uint64_t)&v76;
  uint64_t v38 = (uint64_t)v71;
  uint64_t v37 = v72;
  uint64_t v39 = v73;
  (*(void (**)(char *, char *, uint64_t))(v72 + 16))(v71, v33, v73);
  v102[6] = v38;
  sub_10004C3F0(v102, v74);
  long long v40 = *(void (**)(char *, uint64_t))(v37 + 8);
  swift_bridgeObjectRetain();
  swift_retain();
  v40(v33, v39);
  sub_10000D930(v36, &qword_10016CC20);
  swift_release();
  swift_bridgeObjectRelease();
  sub_100056FD4(v34, (void (*)(void))type metadata accessor for PrecipitationChartView);
  v40((char *)v38, v39);
  sub_10000D930((uint64_t)v43, &qword_10016CC20);
  swift_release();
  swift_bridgeObjectRelease();
  return sub_100056FD4(v75, (void (*)(void))type metadata accessor for PrecipitationChartView);
}

uint64_t sub_100054BE4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v67 = a1;
  sub_10012B140();
  sub_10000DB98();
  uint64_t v62 = v4;
  uint64_t v63 = v3;
  __chkstk_darwin(v3);
  uint64_t v5 = type metadata accessor for WidgetContentView(0);
  sub_10000DB98();
  uint64_t v64 = v6;
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v65 = v9;
  uint64_t v66 = (uint64_t)v53 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)v53 - v10;
  uint64_t v12 = sub_1000053D8(&qword_10016C938);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (void *)((char *)v53 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v15 = sub_1000053D8(&qword_10016C940);
  sub_10000B3FC();
  __chkstk_darwin(v16);
  sub_10005C778();
  sub_1000053D8(&qword_10016C948);
  sub_10000DB98();
  uint64_t v56 = v18;
  uint64_t v57 = v17;
  __chkstk_darwin(v17);
  sub_10000DBCC();
  v53[2] = v19;
  sub_1000053D8(&qword_10016C950);
  sub_10000DB98();
  uint64_t v59 = v21;
  uint64_t v60 = v20;
  __chkstk_darwin(v20);
  sub_10000DBCC();
  uint64_t v58 = v22;
  uint64_t v54 = sub_1000053D8(&qword_10016C958);
  sub_10000B3FC();
  __chkstk_darwin(v23);
  sub_10000DBCC();
  uint64_t v55 = v24;
  *uint64_t v14 = sub_10012B7B0();
  v14[1] = v25;
  uint64_t v26 = sub_1000053D8(&qword_10016C960);
  sub_10005521C(v1, (uint64_t)v14 + *(int *)(v26 + 44));
  uint64_t v27 = v1 + *(int *)(v5 + 24);
  uint64_t v28 = *(void *)v27;
  char v29 = *(unsigned char *)(v27 + 8);
  sub_10000886C(*(void *)v27, v29);
  char v30 = sub_10008F2A4(v28, v29);
  sub_100008BF8(v28, v29);
  sub_100057158(v1, (uint64_t)v11, (void (*)(void))type metadata accessor for WidgetContentView);
  uint64_t v61 = v5;
  if ((v30 & 1) == 0)
  {
    sub_100056FD4((uint64_t)v11, (void (*)(void))type metadata accessor for WidgetContentView);
    goto LABEL_5;
  }
  uint64_t v31 = *(int *)(v5 + 32);
  uint64_t v32 = v31 + *(int *)(type metadata accessor for ForecastEntry(0) + 24);
  LOBYTE(v32) = v11[v32 + 8 + *(int *)(type metadata accessor for WidgetContext() + 44)];
  sub_100056FD4((uint64_t)v11, (void (*)(void))type metadata accessor for WidgetContentView);
  if ((v32 & 1) == 0)
  {
LABEL_5:
    uint64_t v33 = sub_10012B5B0();
    goto LABEL_6;
  }
  sub_10012B5A0();
  uint64_t v33 = sub_10012B5D0();
  swift_release();
LABEL_6:
  sub_10000B114((uint64_t)v14, v1, &qword_10016C938);
  uint64_t v34 = v1 + *(int *)(v15 + 36);
  *(void *)uint64_t v34 = v33;
  *(_OWORD *)(v34 + 8) = xmmword_100130E40;
  *(void *)(v34 + 24) = 0x4000000000000000;
  sub_10000D930((uint64_t)v14, &qword_10016C938);
  uint64_t v35 = sub_10012B130();
  v53[1] = v53;
  __chkstk_darwin(v35);
  sub_10012B7A0();
  uint64_t v36 = v1;
  uint64_t v37 = type metadata accessor for BackgroundView(0);
  unint64_t v38 = sub_100057050();
  unint64_t v39 = sub_10005745C((uint64_t)&unk_10016C978);
  v53[0] = v2;
  unint64_t v40 = v39;
  sub_10012B510();
  sub_10000B424();
  v41();
  sub_10000D930(v36, &qword_10016C940);
  uint64_t v42 = v53[0];
  type metadata accessor for ForecastEntry(0);
  type metadata accessor for WidgetContext();
  uint64_t v68 = v15;
  uint64_t v69 = v37;
  unint64_t v70 = v38;
  unint64_t v71 = v40;
  swift_getOpaqueTypeConformance2();
  uint64_t v43 = v58;
  sub_10012B450();
  sub_10000B424();
  v44();
  uint64_t v45 = v66;
  sub_100057158(v42, v66, (void (*)(void))type metadata accessor for WidgetContentView);
  unint64_t v46 = (*(unsigned __int8 *)(v64 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v64 + 80);
  uint64_t v47 = swift_allocObject();
  sub_1000571AC(v45, v47 + v46, (void (*)(void))type metadata accessor for WidgetContentView);
  uint64_t v49 = v59;
  uint64_t v48 = v60;
  uint64_t v50 = v55;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v59 + 16))(v55, v43, v60);
  int v51 = (void (**)(uint64_t *))(v50 + *(int *)(v54 + 36));
  char *v51 = sub_1000570F4;
  v51[1] = (void (*)(uint64_t *))v47;
  (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v43, v48);
  return sub_10003BFD4(v50, v67, &qword_10016C958);
}

uint64_t sub_10005521C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v97 = a2;
  uint64_t v80 = sub_1000053D8(&qword_10016C988);
  __chkstk_darwin(v80);
  uint64_t v77 = (uint64_t)v73 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v78 = sub_1000053D8(&qword_10016C990);
  __chkstk_darwin(v78);
  char v79 = (char *)v73 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v81 = sub_1000053D8(&qword_10016C998);
  __chkstk_darwin(v81);
  uint64_t v76 = (uint64_t)v73 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v96 = sub_1000053D8(&qword_10016C9A0);
  __chkstk_darwin(v96);
  uint64_t v90 = (char *)v73 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for WidgetContentView(0);
  uint64_t v8 = v7 - 8;
  uint64_t v86 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v87 = v9;
  char v89 = (char *)v73 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v82 = sub_1000053D8(&qword_10016C9A8);
  __chkstk_darwin(v82);
  uint64_t v84 = (uint64_t (**)(uint64_t))((char *)v73 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v83 = sub_1000053D8(&qword_10016C9B0);
  __chkstk_darwin(v83);
  uint64_t v88 = (char *)v73 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v91 = sub_1000053D8(&qword_10016C9B8);
  __chkstk_darwin(v91);
  char v85 = (char *)v73 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v94 = sub_1000053D8(&qword_10016C9C0);
  __chkstk_darwin(v94);
  uint64_t v98 = (uint64_t)v73 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v92 = sub_1000053D8(&qword_10016C9C8);
  __chkstk_darwin(v92);
  uint64_t v15 = (char *)v73 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1000053D8(&qword_10016C9D0);
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)v73 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v93 = sub_1000053D8(&qword_10016C9D8);
  __chkstk_darwin(v93);
  uint64_t v20 = (char *)v73 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v95 = sub_1000053D8(&qword_10016C9E0);
  __chkstk_darwin(v95);
  uint64_t v22 = (char *)v73 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = type metadata accessor for ForecastEntry.Model(0);
  __chkstk_darwin(v23);
  uint64_t v25 = (char *)v73 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = a1;
  uint64_t v27 = a1 + *(int *)(v8 + 40);
  uint64_t v28 = type metadata accessor for ForecastEntry(0);
  sub_100057158(v27 + *(int *)(v28 + 28), (uint64_t)v25, (void (*)(void))type metadata accessor for ForecastEntry.Model);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_10004E5EC(&v101);
    char v37 = v102;
    uint64_t v38 = v104;
    uint64_t v39 = v107;
    uint64_t v40 = v108;
    *(_OWORD *)uint64_t v18 = v101;
    v18[16] = v37;
    *((void *)v18 + 3) = v38;
    long long v41 = v106;
    *((_OWORD *)v18 + 2) = v105;
    *((_OWORD *)v18 + 3) = v41;
    *((void *)v18 + 8) = v39;
    *((void *)v18 + 9) = v40;
    swift_storeEnumTagMultiPayload();
    sub_10005C49C((uint64_t)&v101);
    sub_100057208();
    sub_100057254();
    sub_10012B0E0();
    sub_10000B114((uint64_t)v20, (uint64_t)v15, &qword_10016C9D8);
    swift_storeEnumTagMultiPayload();
    sub_1000053D8(&qword_10016CA48);
    sub_100057540();
    sub_10005757C();
    sub_10012B0E0();
    sub_10000D930((uint64_t)v20, &qword_10016C9D8);
    sub_10000B114((uint64_t)v22, v98, &qword_10016C9E0);
    swift_storeEnumTagMultiPayload();
    sub_10005732C((uint64_t)&unk_10016CAA0);
    sub_10005732C((uint64_t)&unk_10016CAA8);
    sub_10012B0E0();
    sub_10000D930((uint64_t)v22, &qword_10016C9E0);
    return sub_1000579CC((uint64_t)&v101);
  }
  uint64_t v29 = (uint64_t)v88;
  v73[1] = v16;
  uint64_t v30 = (uint64_t)v89;
  uint64_t v74 = v20;
  uint64_t v31 = (uint64_t)v90;
  uint64_t v75 = v15;
  uint64_t v32 = v98;
  sub_100056FD4((uint64_t)v25, (void (*)(void))type metadata accessor for ForecastEntry.Model);
  if (sub_10004CE18())
  {
    uint64_t v33 = v27 + *(int *)(v28 + 24);
    int v34 = *(unsigned __int8 *)(v33 + 48);
    int v35 = *(unsigned __int8 *)(v33 + 49);
    BOOL v36 = v34 == 6 || v35 == 6;
    if (v36)
    {
      sub_100050B1C(v29);
      sub_10000B114(v29, (uint64_t)v84, &qword_10016C9B0);
      swift_storeEnumTagMultiPayload();
      sub_1000053D8(&qword_10016CA40);
      sub_10005732C((uint64_t)&unk_10016C9F8);
      sub_10005C550((uint64_t)&unk_10016CA38);
      uint64_t v52 = (uint64_t)v85;
      sub_10012B0E0();
      sub_10000D930(v29, &qword_10016C9B0);
    }
    else
    {
      sub_100057158(v26, v30, (void (*)(void))type metadata accessor for WidgetContentView);
      unint64_t v49 = (*(unsigned __int8 *)(v86 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v86 + 80);
      uint64_t v50 = swift_allocObject();
      sub_1000571AC(v30, v50 + v49, (void (*)(void))type metadata accessor for WidgetContentView);
      int v51 = v84;
      *uint64_t v84 = sub_100058230;
      v51[1] = (uint64_t (*)(uint64_t))v50;
      swift_storeEnumTagMultiPayload();
      sub_1000053D8(&qword_10016CA40);
      sub_10005732C((uint64_t)&unk_10016C9F8);
      sub_10005C550((uint64_t)&unk_10016CA38);
      uint64_t v52 = (uint64_t)v85;
      sub_10012B0E0();
    }
    uint64_t v53 = (uint64_t)v75;
    sub_10000B114(v52, (uint64_t)v18, &qword_10016C9B8);
    swift_storeEnumTagMultiPayload();
    sub_100057208();
    sub_100057254();
    uint64_t v54 = (uint64_t)v74;
    sub_10012B0E0();
    sub_10000B114(v54, v53, &qword_10016C9D8);
    swift_storeEnumTagMultiPayload();
    sub_1000053D8(&qword_10016CA48);
    sub_100057540();
    sub_10005757C();
    sub_10012B0E0();
    sub_10000D930(v54, &qword_10016C9D8);
    sub_10000B114((uint64_t)v22, v32, &qword_10016C9E0);
    swift_storeEnumTagMultiPayload();
    sub_10005732C((uint64_t)&unk_10016CAA0);
    sub_10005732C((uint64_t)&unk_10016CAA8);
    sub_10012B0E0();
    sub_10000D930((uint64_t)v22, &qword_10016C9E0);
    uint64_t v55 = v52;
    uint64_t v56 = &qword_10016C9B8;
  }
  else
  {
    if (sub_10004D094())
    {
      uint64_t v43 = v30;
      sub_100057158(v26, v30, (void (*)(void))type metadata accessor for WidgetContentView);
      unint64_t v44 = (*(unsigned __int8 *)(v86 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v86 + 80);
      uint64_t v45 = swift_allocObject();
      sub_1000571AC(v43, v45 + v44, (void (*)(void))type metadata accessor for WidgetContentView);
      *(void *)&long long v99 = sub_100058214;
      *((void *)&v99 + 1) = v45;
      __int16 v100 = 0;
      swift_retain();
      sub_1000053D8(&qword_10016CA68);
      sub_1000053D8(&qword_10016CA78);
      sub_10005C550((uint64_t)&unk_10016CA60);
      sub_10005761C();
      sub_10012B0E0();
      char v46 = v102;
      char v47 = v103;
      uint64_t v48 = v75;
      *uint64_t v75 = v101;
      *((unsigned char *)v48 + 16) = v46;
      *((unsigned char *)v48 + 17) = v47;
      swift_storeEnumTagMultiPayload();
      sub_1000053D8(&qword_10016CA48);
      sub_100057540();
      sub_10005757C();
      sub_10012B0E0();
      sub_10000B114((uint64_t)v22, v32, &qword_10016C9E0);
      swift_storeEnumTagMultiPayload();
      sub_10005732C((uint64_t)&unk_10016CAA0);
      sub_10005732C((uint64_t)&unk_10016CAA8);
      sub_10012B0E0();
      sub_10000D930((uint64_t)v22, &qword_10016C9E0);
      return swift_release();
    }
    BOOL v57 = sub_10004D310();
    uint64_t v58 = v27 + *(int *)(v28 + 24);
    int v59 = *(unsigned __int8 *)(v58 + 48);
    if (v57)
    {
      int v60 = *(unsigned __int8 *)(v58 + 49);
      uint64_t v61 = v30;
      sub_100057158(v26, v30, (void (*)(void))type metadata accessor for WidgetContentView);
      unint64_t v62 = (*(unsigned __int8 *)(v86 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v86 + 80);
      if (v59 == 6 || v60 == 6)
      {
        uint64_t v64 = swift_allocObject();
        sub_1000571AC(v61, v64 + v62, (void (*)(void))type metadata accessor for WidgetContentView);
        *(void *)&long long v99 = sub_100058184;
        *((void *)&v99 + 1) = v64;
        LOBYTE(v100) = 0;
      }
      else
      {
        uint64_t v67 = swift_allocObject();
        sub_1000571AC(v61, v67 + v62, (void (*)(void))type metadata accessor for WidgetContentView);
        *(void *)&long long v99 = sub_100058158;
        *((void *)&v99 + 1) = v67;
        LOBYTE(v100) = 1;
      }
      sub_1000053D8(&qword_10016CA88);
      sub_1000053D8(&qword_10016CA98);
      sub_10005C550((uint64_t)&unk_10016CA80);
      sub_10005C550((uint64_t)&unk_10016CA90);
      sub_10012B0E0();
      long long v99 = v101;
      LOBYTE(v100) = v102;
      HIBYTE(v100) = 1;
      sub_100058170();
      sub_1000053D8(&qword_10016CA68);
      sub_1000053D8(&qword_10016CA78);
      sub_10005C550((uint64_t)&unk_10016CA60);
      sub_10005761C();
      sub_10012B0E0();
      char v68 = v102;
      char v69 = v103;
      unint64_t v70 = v75;
      *uint64_t v75 = v101;
      *((unsigned char *)v70 + 16) = v68;
      *((unsigned char *)v70 + 17) = v69;
      swift_storeEnumTagMultiPayload();
      sub_1000053D8(&qword_10016CA48);
      sub_100057540();
      sub_10005757C();
      sub_10012B0E0();
      sub_10000B114((uint64_t)v22, v32, &qword_10016C9E0);
      swift_storeEnumTagMultiPayload();
      sub_10005732C((uint64_t)&unk_10016CAA0);
      sub_10005732C((uint64_t)&unk_10016CAA8);
      sub_10012B0E0();
      sub_100058178();
      uint64_t v55 = (uint64_t)v22;
      uint64_t v56 = &qword_10016C9E0;
    }
    else
    {
      BOOL v36 = v59 == 6;
      uint64_t v65 = v32;
      uint64_t v66 = (uint64_t)v79;
      if (v36)
      {
        uint64_t v71 = v76;
        sub_10004EEC4(v26, v76);
        uint64_t v72 = &qword_10016C998;
        sub_10000B114(v71, v66, &qword_10016C998);
      }
      else
      {
        uint64_t v71 = v77;
        sub_10004EA84(v77);
        uint64_t v72 = &qword_10016C988;
        sub_10000B114(v71, v66, &qword_10016C988);
      }
      swift_storeEnumTagMultiPayload();
      sub_1000576DC();
      sub_100057874();
      sub_10012B0E0();
      sub_10000D930(v71, v72);
      sub_10000B114(v31, v65, &qword_10016C9A0);
      swift_storeEnumTagMultiPayload();
      sub_10005732C((uint64_t)&unk_10016CAA0);
      sub_10005732C((uint64_t)&unk_10016CAA8);
      sub_10012B0E0();
      uint64_t v55 = v31;
      uint64_t v56 = &qword_10016C9A0;
    }
  }
  return sub_10000D930(v55, v56);
}

uint64_t sub_100056508@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for ForecastEntry.Model(0);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = (int *)type metadata accessor for BackgroundView(0);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = a1 + *(int *)(type metadata accessor for WidgetContentView(0) + 32);
  uint64_t v11 = type metadata accessor for ForecastEntry(0);
  uint64_t v12 = *(int *)(v11 + 24);
  uint64_t v13 = (uint64_t *)(v10 + v12 + *(int *)(type metadata accessor for WidgetContext() + 44));
  uint64_t v14 = *v13;
  char v15 = *((unsigned char *)v13 + 8);
  uint64_t v16 = (uint64_t)&v9[v7[5]];
  sub_100057158(v10 + *(int *)(v11 + 28), (uint64_t)v6, (void (*)(void))type metadata accessor for ForecastEntry.Model);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1000571AC((uint64_t)v6, v16, (void (*)(void))type metadata accessor for WeatherDataViewModel);
    uint64_t v17 = 0;
  }
  else
  {
    uint64_t v17 = 1;
  }
  uint64_t v18 = type metadata accessor for WeatherDataViewModel();
  _s13WeatherWidget20WeatherDataViewModelOwst_0(v16, v17, 1, v18);
  *(void *)uint64_t v9 = v14;
  v9[8] = v15;
  uint64_t v19 = (uint64_t *)&v9[v7[6]];
  *uint64_t v19 = swift_getKeyPath();
  sub_1000053D8(&qword_10016B080);
  swift_storeEnumTagMultiPayload();
  uint64_t v20 = &v9[v7[7]];
  *(void *)uint64_t v20 = swift_getKeyPath();
  v20[8] = 0;
  sub_1000571AC((uint64_t)v9, a2, (void (*)(void))type metadata accessor for BackgroundView);
  return swift_bridgeObjectRetain();
}

void sub_10005672C(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = sub_10012BF20();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *a1;
  uint64_t v9 = *(void *)(*a1 + 16);
  if (v9)
  {
    uint64_t v33 = (uint64_t *)(a2 + *(int *)(type metadata accessor for WidgetContentView(0) + 36));
    uint64_t v11 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    uint64_t v10 = v5 + 16;
    uint64_t v12 = v8 + ((*(unsigned __int8 *)(v10 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 64));
    uint64_t v31 = *(void *)(v10 + 56);
    uint64_t v32 = v11;
    v29[1] = v8;
    uint64_t v30 = (void (**)(char *, uint64_t))(v10 - 8);
    swift_bridgeObjectRetain();
    while (1)
    {
      uint64_t v13 = v4;
      uint64_t v14 = v10;
      v32(v7, v12, v4);
      unint64_t v15 = sub_10012BF10();
      sub_10012BF00();
      uint64_t v17 = v16;
      uint64_t v19 = v18;
      uint64_t v21 = v20;
      uint64_t v23 = v22;
      uint64_t v24 = *v33;
      uint64_t v25 = v33[1];
      uint64_t v35 = *v33;
      uint64_t v36 = v25;
      swift_retain();
      swift_bridgeObjectRetain();
      sub_1000053D8(&qword_10016C980);
      sub_10012B690();
      uint64_t v26 = v37;
      if (swift_isUniquelyReferenced_nonNull_native())
      {
        if ((v15 & 0x8000000000000000) != 0) {
          goto LABEL_9;
        }
      }
      else
      {
        sub_100057144(v26);
        uint64_t v26 = v28;
        if ((v15 & 0x8000000000000000) != 0)
        {
LABEL_9:
          __break(1u);
LABEL_10:
          swift_bridgeObjectRelease();
          return;
        }
      }
      if (v15 >= *(void *)(v26 + 16)) {
        break;
      }
      uint64_t v27 = (void *)(v26 + 32 * v15);
      v27[4] = v17;
      v27[5] = v19;
      v27[6] = v21;
      v27[7] = v23;
      uint64_t v36 = v25;
      uint64_t v37 = v26;
      uint64_t v34 = v26;
      uint64_t v35 = v24;
      sub_10012B6A0();
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v4 = v13;
      (*v30)(v7, v13);
      v12 += v31;
      --v9;
      uint64_t v10 = v14;
      if (!v9) {
        goto LABEL_10;
      }
    }
    __break(1u);
  }
}

__n128 sub_100056978@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_10012B7A0();
  uint64_t v5 = v4;
  sub_1000569D4(v1, v10);
  uint64_t v6 = v11;
  uint64_t v7 = v12;
  __n128 result = (__n128)v10[0];
  long long v9 = v10[1];
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v5;
  *(__n128 *)(a1 + 16) = result;
  *(_OWORD *)(a1 + 32) = v9;
  *(void *)(a1 + 48) = v6;
  *(void *)(a1 + 56) = v7;
  return result;
}

uint64_t sub_1000569D4@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  v17[0] = sub_10012B590();
  uint64_t v4 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  uint64_t v6 = (char *)v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = a1 + *(int *)(type metadata accessor for BackgroundView(0) + 28);
  uint64_t v8 = *(void *)v7;
  char v9 = *(unsigned char *)(v7 + 8);
  sub_10000886C(*(void *)v7, v9);
  char v10 = sub_10008F2A4(v8, v9);
  sub_100008BF8(v8, v9);
  uint64_t v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = 0;
  uint64_t v14 = 0;
  uint64_t v15 = 0;
  if ((v10 & 1) == 0)
  {
    swift_bridgeObjectRetain();
    sub_10012B800();
    sub_10012B810();
    sub_10012ABE0();
    uint64_t v11 = v17[1];
    uint64_t v12 = v17[2];
    uint64_t v13 = v17[3];
    uint64_t v14 = v17[4];
    uint64_t v15 = v17[5];
  }
  sub_100056B84();
  (*(void (**)(char *, void, void))(v4 + 104))(v6, enum case for Color.RGBColorSpace.sRGB(_:), v17[0]);
  uint64_t result = sub_10012B600();
  *a2 = v11;
  a2[1] = v12;
  a2[2] = v13;
  a2[3] = v14;
  a2[4] = v15;
  a2[5] = result;
  return result;
}

double sub_100056B84()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10012AFD0();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v22 - v7;
  uint64_t v9 = v0 + *(int *)(type metadata accessor for BackgroundView(0) + 28);
  uint64_t v10 = *(void *)v9;
  char v11 = *(unsigned char *)(v9 + 8);
  sub_10000886C(*(void *)v9, v11);
  char v12 = sub_10008F2A4(v10, v11);
  sub_100008BF8(v10, v11);
  double v13 = 1.0;
  if ((v12 & 1) == 0)
  {
    sub_10008F524((uint64_t)v8);
    (*(void (**)(char *, void, uint64_t))(v3 + 104))(v6, enum case for ColorSchemeContrast.increased(_:), v2);
    char v14 = sub_10012AFC0();
    uint64_t v15 = *(void (**)(char *, uint64_t))(v3 + 8);
    v15(v6, v2);
    v15(v8, v2);
    if (v14)
    {
      uint64_t v16 = sub_10012B740();
      double v13 = 0.0;
      if (v16)
      {
        uint64_t v17 = v16;
        sub_10012B5C0();
        sub_10012B570();
        double v19 = v18;
        swift_release();
        if (v19 < 4.5)
        {
          sub_100056DB0(v17, 0.0, 0.46, 4.5);
          double v13 = v20;
        }
        swift_release();
      }
    }
    else if (*(unsigned char *)(v1 + 8))
    {
      return 0.1;
    }
    else
    {
      return 0.0;
    }
  }
  return v13;
}

uint64_t sub_100056DB0(uint64_t a1, double a2, double a3, double a4)
{
  uint64_t v8 = sub_10012B590();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  char v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a3 - a2 <= 0.01)
  {
    sub_10012B560();
    (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, enum case for Color.RGBColorSpace.sRGB(_:), v8);
    sub_10012B5F0();
    sub_10012B5C0();
    sub_10012B570();
    swift_release();
    return swift_release();
  }
  else
  {
    sub_10012B560();
    (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, enum case for Color.RGBColorSpace.sRGB(_:), v8);
    sub_10012B5F0();
    sub_10012B5C0();
    sub_10012B570();
    double v13 = v12;
    swift_release();
    swift_release();
    if (v13 >= a4)
    {
      v14.n128_f64[0] = a2;
      v15.n128_f64[0] = (a2 + a3) * 0.5;
    }
    else
    {
      v14.n128_f64[0] = (a2 + a3) * 0.5;
      v15.n128_f64[0] = a3;
    }
    return sub_100056DB0(a1, v14, v15, a4);
  }
}

uint64_t sub_100056FD4(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_10000B3FC();
  sub_10000B424();
  v3();
  return a1;
}

uint64_t sub_100057028@<X0>(uint64_t a1@<X8>)
{
  return sub_100056508(*(void *)(v1 + 16), a1);
}

uint64_t type metadata accessor for BackgroundView(uint64_t a1)
{
  return sub_10001A270(a1, (uint64_t *)&unk_10016CD28);
}

unint64_t sub_100057050()
{
  unint64_t result = qword_10016C968;
  if (!qword_10016C968)
  {
    sub_100005470(&qword_10016C940);
    sub_10005C550((uint64_t)&unk_10016C970);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016C968);
  }
  return result;
}

void sub_1000570F4(uint64_t *a1)
{
  uint64_t v3 = type metadata accessor for WidgetContentView(0);
  sub_10005C734(v3);
  uint64_t v5 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));

  sub_10005672C(a1, v5);
}

void sub_100057144(uint64_t a1)
{
}

uint64_t sub_100057158(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_10000B3FC();
  uint64_t v4 = sub_10000B430();
  v5(v4);
  return a2;
}

uint64_t sub_1000571AC(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_10000B3FC();
  uint64_t v4 = sub_10003C1BC();
  v5(v4);
  return a2;
}

unint64_t sub_100057208()
{
  unint64_t result = qword_10016C9E8;
  if (!qword_10016C9E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016C9E8);
  }
  return result;
}

unint64_t sub_100057254()
{
  unint64_t result = qword_10016C9F0;
  if (!qword_10016C9F0)
  {
    sub_100005470(&qword_10016C9B8);
    sub_10005732C((uint64_t)&unk_10016C9F8);
    sub_10005C550((uint64_t)&unk_10016CA38);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016C9F0);
  }
  return result;
}

unint64_t sub_10005732C(uint64_t a1)
{
  unint64_t result = sub_10005C790(a1);
  if (!result)
  {
    uint64_t v6 = v5;
    uint64_t v7 = v4;
    sub_100005470(v3);
    v7();
    v6();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, v1);
  }
  return result;
}

unint64_t sub_1000573B0()
{
  unint64_t result = qword_10016CA00;
  if (!qword_10016CA00)
  {
    sub_100005470(&qword_10016CA08);
    sub_10005745C((uint64_t)&unk_10016CA10);
    sub_100057208();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016CA00);
  }
  return result;
}

unint64_t sub_10005745C(uint64_t a1)
{
  unint64_t result = sub_10005C790(a1);
  if (!result)
  {
    v3(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, v1);
  }
  return result;
}

unint64_t sub_1000574A0()
{
  unint64_t result = qword_10016CA18;
  if (!qword_10016CA18)
  {
    sub_100005470(&qword_10016CA20);
    sub_10005C550((uint64_t)&unk_10016CA28);
    sub_100057208();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016CA18);
  }
  return result;
}

unint64_t sub_100057540()
{
  return sub_10005732C((uint64_t)&unk_10016CA50);
}

unint64_t sub_10005757C()
{
  unint64_t result = qword_10016CA58;
  if (!qword_10016CA58)
  {
    sub_100005470(&qword_10016CA48);
    sub_10005C550((uint64_t)&unk_10016CA60);
    sub_10005761C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016CA58);
  }
  return result;
}

unint64_t sub_10005761C()
{
  unint64_t result = qword_10016CA70;
  if (!qword_10016CA70)
  {
    sub_100005470(&qword_10016CA78);
    sub_10005C550((uint64_t)&unk_10016CA80);
    sub_10005C550((uint64_t)&unk_10016CA90);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016CA70);
  }
  return result;
}

unint64_t sub_1000576DC()
{
  unint64_t result = qword_10016CAB0;
  if (!qword_10016CAB0)
  {
    sub_100005470(&qword_10016C998);
    sub_100057750();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016CAB0);
  }
  return result;
}

unint64_t sub_100057750()
{
  unint64_t result = qword_10016CAB8;
  if (!qword_10016CAB8)
  {
    sub_100005470(&qword_10016CAC0);
    sub_100005470(&qword_10016CAC8);
    sub_100005470(&qword_10016B9A0);
    sub_10005C550((uint64_t)&unk_10016CAD0);
    sub_10005C550((uint64_t)&qword_10016B9B0);
    swift_getOpaqueTypeConformance2();
    sub_100057208();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016CAB8);
  }
  return result;
}

unint64_t sub_100057874()
{
  unint64_t result = qword_10016CAD8;
  if (!qword_10016CAD8)
  {
    sub_100005470(&qword_10016C988);
    sub_10005732C((uint64_t)&unk_10016CAE0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016CAD8);
  }
  return result;
}

unint64_t sub_100057920()
{
  unint64_t result = qword_10016CAF0;
  if (!qword_10016CAF0)
  {
    sub_100005470(&qword_10016CAF8);
    sub_10005745C((uint64_t)&unk_10016CB00);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016CAF0);
  }
  return result;
}

uint64_t sub_1000579CC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  uint64_t v4 = *(void *)(a1 + 48);
  uint64_t v5 = *(void *)(a1 + 56);
  sub_100008278(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
  swift_bridgeObjectRelease();
  sub_100057A48(v2, v3, v4, v5);
  swift_release();
  return a1;
}

uint64_t sub_100057A48(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    sub_100008278(result, a2, a3 & 1);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_100057A90()
{
  uint64_t v1 = type metadata accessor for WidgetContentView(0);
  uint64_t v49 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v48 = *(void *)(*(void *)(v1 - 8) + 64);
  uint64_t v2 = v0 + ((v49 + 16) & ~v49);
  sub_1000053D8(&qword_10016B410);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_10012C800();
    sub_10000B3FC();
    sub_10000B424();
    v3();
  }
  else
  {
    swift_release();
  }
  sub_1000053D8(&qword_10016B9D8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_10012AFE0();
    sub_10000B3FC();
    sub_10000B424();
    v4();
  }
  else
  {
    swift_release();
  }
  sub_100008BF8(*(void *)(v2 + *(int *)(v1 + 24)), *(unsigned char *)(v2 + *(int *)(v1 + 24) + 8));
  sub_1000053D8(&qword_10016B9E0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_10012B2D0();
    sub_10000B3FC();
    sub_10000B424();
    v5();
  }
  else
  {
    swift_release();
  }
  uint64_t v6 = v2 + *(int *)(v1 + 32);
  uint64_t v7 = sub_100129300();
  sub_10000B3FC();
  char v47 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
  v47(v6, v7);
  uint64_t v9 = (int *)type metadata accessor for ForecastEntry(0);
  uint64_t v10 = v6 + v9[5];
  uint64_t v11 = sub_10012C920();
  if (!_s13WeatherWidget20WeatherDataViewModelOwet_0(v10, 1, v11))
  {
    sub_1000472C0();
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v10, v11);
  }
  uint64_t v13 = v6 + v9[6];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v14 = v13 + *(int *)(type metadata accessor for WidgetContext() + 40);
  uint64_t v15 = sub_100129220();
  if (!_s13WeatherWidget20WeatherDataViewModelOwet_0(v14, 1, v15))
  {
    sub_1000472C0();
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v14, v15);
  }
  swift_bridgeObjectRelease();
  uint64_t v17 = v6 + v9[7];
  type metadata accessor for ForecastEntry.Model(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    type metadata accessor for WeatherDataViewModel();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 2:
        sub_10012BE90();
        sub_10000B3FC();
        (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v17, v39);
        break;
      case 1:
        sub_100129330();
        sub_10000B3FC();
        sub_10000B424();
        v40();
        uint64_t v41 = type metadata accessor for InstantWeatherViewModel();
        sub_10012A6B0();
        sub_10000B3FC();
        sub_10000B424();
        v42();
        uint64_t v43 = v17 + *(int *)(v41 + 24);
        sub_10012C250();
        sub_10000B3FC();
        (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v43, v45);
        break;
      case 0:
        uint64_t v19 = sub_100129330();
        sub_10000B3FC();
        (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v17, v19);
        uint64_t v21 = (int *)type metadata accessor for AggregateWeatherViewModel(0);
        sub_10012A6B0();
        sub_10000B3FC();
        sub_10000B424();
        v22();
        sub_10012C250();
        sub_10000B3FC();
        sub_10000B424();
        v23();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v24 = v17 + v21[9];
        uint64_t v25 = type metadata accessor for AirQualityViewModel();
        if (!_s13WeatherWidget20WeatherDataViewModelOwet_0(v24, 1, v25))
        {
          sub_10000B424();
          v26();
          sub_10000B424();
          v27();
          sub_100129B70();
          sub_10000B3FC();
          sub_10000B424();
          v28();
          uint64_t v29 = v24 + *(int *)(v25 + 32);
          sub_100129C50();
          sub_10000B3FC();
          (*(void (**)(uint64_t))(v30 + 8))(v29);
        }
        uint64_t v31 = v17 + v21[10];
        uint64_t v32 = sub_10012C6B0();
        if (!_s13WeatherWidget20WeatherDataViewModelOwet_0(v31, 1, v32))
        {
          sub_1000472C0();
          (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v31, v32);
        }
        swift_bridgeObjectRelease();
        uint64_t v34 = v17 + v21[13];
        if (!_s13WeatherWidget20WeatherDataViewModelOwet_0(v34, 1, v15))
        {
          sub_1000472C0();
          (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v34, v15);
        }
        uint64_t v36 = v17 + v21[14];
        uint64_t v37 = type metadata accessor for AggregateWeatherViewModel.SunEvent(0);
        if (!_s13WeatherWidget20WeatherDataViewModelOwet_0(v36, 1, v37)) {
          v47(v36, v7);
        }
        break;
    }
  }
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, ((v49 + 16) & ~v49) + v48, v49 | 7);
}

uint64_t sub_100058158(uint64_t a1)
{
  return sub_10005819C(a1, (uint64_t (*)(uint64_t, uint64_t))sub_100052658);
}

uint64_t sub_100058170()
{
  return swift_retain();
}

uint64_t sub_100058178()
{
  return swift_release();
}

uint64_t sub_100058184(uint64_t a1)
{
  return sub_10005819C(a1, (uint64_t (*)(uint64_t, uint64_t))sub_100053CF0);
}

uint64_t sub_10005819C(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t))
{
  uint64_t v4 = type metadata accessor for WidgetContentView(0);
  sub_10005C734(v4);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return a2(a1, v6);
}

uint64_t sub_100058214(uint64_t a1)
{
  return sub_10005819C(a1, (uint64_t (*)(uint64_t, uint64_t))sub_100051ADC);
}

uint64_t sub_100058230(uint64_t a1)
{
  return sub_10005819C(a1, (uint64_t (*)(uint64_t, uint64_t))sub_10004FF30);
}

unint64_t sub_100058248()
{
  unint64_t result = qword_10016CB50;
  if (!qword_10016CB50)
  {
    sub_100005470(&qword_10016CB38);
    sub_10005C550((uint64_t)&unk_10016CB58);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016CB50);
  }
  return result;
}

unint64_t sub_1000582E8()
{
  unint64_t result = qword_10016CB98;
  if (!qword_10016CB98)
  {
    sub_100005470(&qword_10016CB90);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016CB98);
  }
  return result;
}

uint64_t sub_10005835C(uint64_t a1, uint64_t *a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v4 = *a2;
  *(void *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = v4 + ((v3 + 16) & ~(unint64_t)v3);
    swift_retain();
  }
  else
  {
    uint64_t v7 = a1;
    *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)(a1 + v8);
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for WeatherDataViewModel();
    swift_bridgeObjectRetain();
    if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v10, 1, v11))
    {
      uint64_t v12 = sub_1000053D8(&qword_10016B310);
      memcpy(v9, v10, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        uint64_t v24 = sub_10012BE90();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16))(v9, v10, v24);
      }
      else if (EnumCaseMultiPayload == 1)
      {
        uint64_t v14 = sub_100129330();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v9, v10, v14);
        uint64_t v15 = type metadata accessor for InstantWeatherViewModel();
        uint64_t v16 = *(int *)(v15 + 20);
        uint64_t v17 = &v9[v16];
        double v18 = &v10[v16];
        uint64_t v19 = sub_10012A6B0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
        uint64_t v20 = *(int *)(v15 + 24);
        uint64_t v21 = &v9[v20];
        uint64_t v22 = &v10[v20];
        uint64_t v23 = sub_10012C250();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
      }
      else
      {
        uint64_t v25 = sub_100129330();
        uint64_t v77 = *(void (**)(char *, char *))(*(void *)(v25 - 8) + 16);
        uint64_t v78 = v25;
        v77(v9, v10);
        uint64_t v26 = (int *)type metadata accessor for AggregateWeatherViewModel(0);
        uint64_t v27 = v26[5];
        uint64_t v28 = &v9[v27];
        uint64_t v29 = &v10[v27];
        uint64_t v30 = sub_10012A6B0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 16))(v28, v29, v30);
        uint64_t v31 = v26[6];
        uint64_t v32 = &v9[v31];
        uint64_t v33 = &v10[v31];
        uint64_t v34 = sub_10012C250();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 16))(v32, v33, v34);
        *(void *)&v9[v26[7]] = *(void *)&v10[v26[7]];
        *(void *)&v9[v26[8]] = *(void *)&v10[v26[8]];
        uint64_t v35 = v26[9];
        uint64_t v82 = v26;
        __dst = &v9[v35];
        uint64_t v36 = &v10[v35];
        uint64_t v37 = type metadata accessor for AirQualityViewModel();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v38 = (int *)v37;
        if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v36, 1, v37))
        {
          uint64_t v39 = sub_1000053D8(&qword_10016B428);
          memcpy(__dst, v36, *(void *)(*(void *)(v39 - 8) + 64));
        }
        else
        {
          ((void (*)(char *, char *, uint64_t))v77)(__dst, v36, v78);
          uint64_t v40 = *(int *)(v37 + 20);
          char v79 = &__dst[v40];
          uint64_t v41 = &v36[v40];
          uint64_t v42 = sub_100129300();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v42 - 8) + 16))(v79, v41, v42);
          *(void *)&__dst[v38[6]] = *(void *)&v36[v38[6]];
          uint64_t v43 = v38[7];
          uint64_t v80 = &__dst[v43];
          uint64_t v44 = &v36[v43];
          uint64_t v45 = sub_100129B70();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v45 - 8) + 16))(v80, v44, v45);
          uint64_t v46 = v38[8];
          uint64_t v81 = &__dst[v46];
          char v47 = &v36[v46];
          uint64_t v48 = sub_100129C50();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v48 - 8) + 16))(v81, v47, v48);
          _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)__dst, 0, 1, (uint64_t)v38);
        }
        uint64_t v49 = v82[10];
        uint64_t v50 = &v9[v49];
        int v51 = &v10[v49];
        uint64_t v52 = sub_10012C6B0();
        if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v51, 1, v52))
        {
          uint64_t v53 = sub_1000053D8(&qword_10016B430);
          memcpy(v50, v51, *(void *)(*(void *)(v53 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v52 - 8) + 16))(v50, v51, v52);
          _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v50, 0, 1, v52);
        }
        *(void *)&v9[v82[11]] = *(void *)&v10[v82[11]];
        uint64_t v54 = v82[12];
        uint64_t v55 = &v9[v54];
        uint64_t v56 = &v10[v54];
        *(void *)uint64_t v55 = *(void *)v56;
        *((_WORD *)v55 + 4) = *((_WORD *)v56 + 4);
        uint64_t v57 = v82[13];
        __dsta = &v9[v57];
        uint64_t v58 = &v10[v57];
        uint64_t v59 = sub_100129220();
        swift_bridgeObjectRetain();
        if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v58, 1, v59))
        {
          uint64_t v60 = sub_1000053D8(&qword_10016B420);
          memcpy(__dsta, v58, *(void *)(*(void *)(v60 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v59 - 8) + 16))(__dsta, v58, v59);
          _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)__dsta, 0, 1, v59);
        }
        uint64_t v61 = v82[14];
        unint64_t v62 = &v9[v61];
        uint64_t v63 = &v10[v61];
        uint64_t v64 = type metadata accessor for AggregateWeatherViewModel.SunEvent(0);
        if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v63, 1, v64))
        {
          uint64_t v65 = sub_1000053D8(&qword_10016B438);
          memcpy(v62, v63, *(void *)(*(void *)(v65 - 8) + 64));
        }
        else
        {
          swift_getEnumCaseMultiPayload();
          uint64_t v66 = sub_100129300();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v66 - 8) + 16))(v62, v63, v66);
          swift_storeEnumTagMultiPayload();
          _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v62, 0, 1, v64);
        }
      }
      swift_storeEnumTagMultiPayload();
      _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v9, 0, 1, v11);
    }
    uint64_t v67 = a3[6];
    char v68 = (void *)(v7 + v67);
    char v69 = (uint64_t *)((char *)a2 + v67);
    sub_1000053D8(&qword_10016B080);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v70 = sub_10012AFD0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v70 - 8) + 16))(v68, v69, v70);
    }
    else
    {
      *char v68 = *v69;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v71 = a3[7];
    uint64_t v72 = v7 + v71;
    uint64_t v73 = (uint64_t)a2 + v71;
    uint64_t v74 = *(void *)v73;
    char v75 = *(unsigned char *)(v73 + 8);
    sub_10000886C(*(void *)v73, v75);
    *(void *)uint64_t v72 = v74;
    *(unsigned char *)(v72 + 8) = v75;
  }
  return v7;
}

uint64_t sub_100058B64(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[5];
  uint64_t v5 = type metadata accessor for WeatherDataViewModel();
  if (_s13WeatherWidget20WeatherDataViewModelOwet_0(v4, 1, v5)) {
    goto LABEL_16;
  }
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      uint64_t v27 = sub_10012BE90();
      goto LABEL_15;
    case 1:
      uint64_t v28 = sub_100129330();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v28 - 8) + 8))(v4, v28);
      uint64_t v29 = type metadata accessor for InstantWeatherViewModel();
      uint64_t v30 = v4 + *(int *)(v29 + 20);
      uint64_t v31 = sub_10012A6B0();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v31 - 8) + 8))(v30, v31);
      v4 += *(int *)(v29 + 24);
      uint64_t v27 = sub_10012C250();
      goto LABEL_15;
    case 0:
      uint64_t v7 = sub_100129330();
      uint64_t v8 = *(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
      v8(v4, v7);
      uint64_t v9 = (int *)type metadata accessor for AggregateWeatherViewModel(0);
      uint64_t v10 = v4 + v9[5];
      uint64_t v11 = sub_10012A6B0();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
      uint64_t v12 = v4 + v9[6];
      uint64_t v13 = sub_10012C250();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v14 = v4 + v9[9];
      uint64_t v15 = (int *)type metadata accessor for AirQualityViewModel();
      if (!_s13WeatherWidget20WeatherDataViewModelOwet_0(v14, 1, (uint64_t)v15))
      {
        v8(v14, v7);
        uint64_t v16 = v14 + v15[5];
        uint64_t v17 = sub_100129300();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v17 - 8) + 8))(v16, v17);
        uint64_t v18 = v14 + v15[7];
        uint64_t v19 = sub_100129B70();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v19 - 8) + 8))(v18, v19);
        uint64_t v20 = v14 + v15[8];
        uint64_t v21 = sub_100129C50();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v21 - 8) + 8))(v20, v21);
      }
      uint64_t v22 = v4 + v9[10];
      uint64_t v23 = sub_10012C6B0();
      if (!_s13WeatherWidget20WeatherDataViewModelOwet_0(v22, 1, v23)) {
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v23 - 8) + 8))(v22, v23);
      }
      swift_bridgeObjectRelease();
      uint64_t v24 = v4 + v9[13];
      uint64_t v25 = sub_100129220();
      if (!_s13WeatherWidget20WeatherDataViewModelOwet_0(v24, 1, v25)) {
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v25 - 8) + 8))(v24, v25);
      }
      v4 += v9[14];
      uint64_t v26 = type metadata accessor for AggregateWeatherViewModel.SunEvent(0);
      if (!_s13WeatherWidget20WeatherDataViewModelOwet_0(v4, 1, v26))
      {
        uint64_t v27 = sub_100129300();
LABEL_15:
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v27 - 8) + 8))(v4, v27);
      }
      break;
  }
LABEL_16:
  uint64_t v32 = a1 + a2[6];
  sub_1000053D8(&qword_10016B080);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v33 = sub_10012AFD0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v33 - 8) + 8))(v32, v33);
  }
  else
  {
    swift_release();
  }
  uint64_t v34 = a1 + a2[7];
  uint64_t v35 = *(void *)v34;
  char v36 = *(unsigned char *)(v34 + 8);

  return sub_100008BF8(v35, v36);
}

uint64_t sub_10005901C(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)(a1 + v6);
  uint64_t v8 = (char *)(a2 + v6);
  uint64_t v9 = type metadata accessor for WeatherDataViewModel();
  swift_bridgeObjectRetain();
  if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v8, 1, v9))
  {
    uint64_t v10 = sub_1000053D8(&qword_10016B310);
    memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v22 = sub_10012BE90();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16))(v7, v8, v22);
    }
    else if (EnumCaseMultiPayload == 1)
    {
      uint64_t v12 = sub_100129330();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v7, v8, v12);
      uint64_t v13 = type metadata accessor for InstantWeatherViewModel();
      uint64_t v14 = *(int *)(v13 + 20);
      uint64_t v15 = &v7[v14];
      uint64_t v16 = &v8[v14];
      uint64_t v17 = sub_10012A6B0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
      uint64_t v18 = *(int *)(v13 + 24);
      uint64_t v19 = &v7[v18];
      uint64_t v20 = &v8[v18];
      uint64_t v21 = sub_10012C250();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16))(v19, v20, v21);
    }
    else
    {
      uint64_t v23 = sub_100129330();
      uint64_t v76 = *(void (**)(char *, char *))(*(void *)(v23 - 8) + 16);
      uint64_t v77 = v23;
      v76(v7, v8);
      uint64_t v24 = (int *)type metadata accessor for AggregateWeatherViewModel(0);
      uint64_t v25 = v24[5];
      uint64_t v26 = &v7[v25];
      uint64_t v27 = &v8[v25];
      uint64_t v28 = sub_10012A6B0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 16))(v26, v27, v28);
      uint64_t v29 = v24[6];
      uint64_t v30 = &v7[v29];
      uint64_t v31 = &v8[v29];
      uint64_t v32 = sub_10012C250();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 16))(v30, v31, v32);
      *(void *)&v7[v24[7]] = *(void *)&v8[v24[7]];
      *(void *)&v7[v24[8]] = *(void *)&v8[v24[8]];
      uint64_t v33 = v24[9];
      uint64_t v80 = v24;
      __dst = &v7[v33];
      uint64_t v34 = &v8[v33];
      uint64_t v35 = type metadata accessor for AirQualityViewModel();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      char v36 = (int *)v35;
      if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v34, 1, v35))
      {
        uint64_t v37 = sub_1000053D8(&qword_10016B428);
        memcpy(__dst, v34, *(void *)(*(void *)(v37 - 8) + 64));
      }
      else
      {
        ((void (*)(char *, char *, uint64_t))v76)(__dst, v34, v77);
        uint64_t v38 = *(int *)(v35 + 20);
        uint64_t v78 = &__dst[v38];
        uint64_t v39 = &v34[v38];
        uint64_t v40 = sub_100129300();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v40 - 8) + 16))(v78, v39, v40);
        *(void *)&__dst[v36[6]] = *(void *)&v34[v36[6]];
        uint64_t v41 = v36[7];
        char v79 = &__dst[v41];
        uint64_t v42 = &v34[v41];
        uint64_t v43 = sub_100129B70();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 16))(v79, v42, v43);
        uint64_t v44 = v36[8];
        uint64_t v45 = &__dst[v44];
        uint64_t v46 = &v34[v44];
        uint64_t v47 = sub_100129C50();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v47 - 8) + 16))(v45, v46, v47);
        _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)__dst, 0, 1, (uint64_t)v36);
      }
      uint64_t v48 = v80[10];
      uint64_t v49 = &v7[v48];
      uint64_t v50 = &v8[v48];
      uint64_t v51 = sub_10012C6B0();
      if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v50, 1, v51))
      {
        uint64_t v52 = sub_1000053D8(&qword_10016B430);
        memcpy(v49, v50, *(void *)(*(void *)(v52 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v51 - 8) + 16))(v49, v50, v51);
        _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v49, 0, 1, v51);
      }
      *(void *)&v7[v80[11]] = *(void *)&v8[v80[11]];
      uint64_t v53 = v80[12];
      uint64_t v54 = &v7[v53];
      uint64_t v55 = &v8[v53];
      *(void *)uint64_t v54 = *(void *)v55;
      *((_WORD *)v54 + 4) = *((_WORD *)v55 + 4);
      uint64_t v56 = v80[13];
      __dsta = &v7[v56];
      uint64_t v57 = &v8[v56];
      uint64_t v58 = sub_100129220();
      swift_bridgeObjectRetain();
      if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v57, 1, v58))
      {
        uint64_t v59 = sub_1000053D8(&qword_10016B420);
        memcpy(__dsta, v57, *(void *)(*(void *)(v59 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v58 - 8) + 16))(__dsta, v57, v58);
        _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)__dsta, 0, 1, v58);
      }
      uint64_t v60 = v80[14];
      uint64_t v61 = &v7[v60];
      unint64_t v62 = &v8[v60];
      uint64_t v63 = type metadata accessor for AggregateWeatherViewModel.SunEvent(0);
      if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v62, 1, v63))
      {
        uint64_t v64 = sub_1000053D8(&qword_10016B438);
        memcpy(v61, v62, *(void *)(*(void *)(v64 - 8) + 64));
      }
      else
      {
        swift_getEnumCaseMultiPayload();
        uint64_t v65 = sub_100129300();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v65 - 8) + 16))(v61, v62, v65);
        swift_storeEnumTagMultiPayload();
        _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v61, 0, 1, v63);
      }
    }
    swift_storeEnumTagMultiPayload();
    _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v7, 0, 1, v9);
  }
  uint64_t v66 = a3[6];
  uint64_t v67 = (void *)(a1 + v66);
  char v68 = (void *)(a2 + v66);
  sub_1000053D8(&qword_10016B080);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v69 = sub_10012AFD0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v69 - 8) + 16))(v67, v68, v69);
  }
  else
  {
    void *v67 = *v68;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v70 = a3[7];
  uint64_t v71 = a1 + v70;
  uint64_t v72 = a2 + v70;
  uint64_t v73 = *(void *)v72;
  char v74 = *(unsigned char *)(v72 + 8);
  sub_10000886C(*(void *)v72, v74);
  *(void *)uint64_t v71 = v73;
  *(unsigned char *)(v71 + 8) = v74;
  return a1;
}

uint64_t sub_1000597D4(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)(a1 + v6);
  uint64_t v8 = (char *)(a2 + v6);
  uint64_t v9 = type metadata accessor for WeatherDataViewModel();
  int v10 = _s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v7, 1, v9);
  int v11 = _s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v8, 1, v9);
  if (v10)
  {
    if (!v11)
    {
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        uint64_t v35 = sub_10012BE90();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 16))(v7, v8, v35);
      }
      else if (EnumCaseMultiPayload == 1)
      {
        uint64_t v13 = sub_100129330();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16))(v7, v8, v13);
        uint64_t v14 = type metadata accessor for InstantWeatherViewModel();
        uint64_t v15 = *(int *)(v14 + 20);
        uint64_t v16 = &v7[v15];
        uint64_t v17 = &v8[v15];
        uint64_t v18 = sub_10012A6B0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
        uint64_t v19 = *(int *)(v14 + 24);
        uint64_t v20 = &v7[v19];
        uint64_t v21 = &v8[v19];
        uint64_t v22 = sub_10012C250();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
      }
      else
      {
        uint64_t v36 = sub_100129330();
        uint64_t v136 = *(void (**)(char *, char *))(*(void *)(v36 - 8) + 16);
        uint64_t v137 = v36;
        v136(v7, v8);
        uint64_t v37 = (int *)type metadata accessor for AggregateWeatherViewModel(0);
        uint64_t v38 = v37[5];
        uint64_t v39 = &v7[v38];
        uint64_t v40 = &v8[v38];
        uint64_t v41 = sub_10012A6B0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v41 - 8) + 16))(v39, v40, v41);
        uint64_t v42 = v37[6];
        uint64_t v43 = &v7[v42];
        uint64_t v44 = &v8[v42];
        uint64_t v45 = sub_10012C250();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v45 - 8) + 16))(v43, v44, v45);
        *(void *)&v7[v37[7]] = *(void *)&v8[v37[7]];
        *(void *)&v7[v37[8]] = *(void *)&v8[v37[8]];
        uint64_t v46 = v37[9];
        uint64_t v142 = v37;
        __dst = &v7[v46];
        uint64_t v47 = &v8[v46];
        uint64_t v48 = type metadata accessor for AirQualityViewModel();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v49 = (int *)v48;
        if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v47, 1, v48))
        {
          uint64_t v50 = sub_1000053D8(&qword_10016B428);
          memcpy(__dst, v47, *(void *)(*(void *)(v50 - 8) + 64));
        }
        else
        {
          ((void (*)(char *, char *, uint64_t))v136)(__dst, v47, v137);
          uint64_t v67 = *(int *)(v48 + 20);
          char v139 = &__dst[v67];
          char v68 = &v47[v67];
          uint64_t v69 = sub_100129300();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v69 - 8) + 16))(v139, v68, v69);
          *(void *)&__dst[v49[6]] = *(void *)&v47[v49[6]];
          uint64_t v70 = v49[7];
          uint64_t v140 = &__dst[v70];
          uint64_t v71 = &v47[v70];
          uint64_t v72 = sub_100129B70();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v72 - 8) + 16))(v140, v71, v72);
          uint64_t v73 = v49[8];
          char v141 = &__dst[v73];
          char v74 = &v47[v73];
          uint64_t v75 = sub_100129C50();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v75 - 8) + 16))(v141, v74, v75);
          _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)__dst, 0, 1, (uint64_t)v49);
        }
        uint64_t v76 = v142[10];
        uint64_t v77 = &v7[v76];
        uint64_t v78 = &v8[v76];
        uint64_t v79 = sub_10012C6B0();
        if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v78, 1, v79))
        {
          uint64_t v80 = sub_1000053D8(&qword_10016B430);
          memcpy(v77, v78, *(void *)(*(void *)(v80 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v79 - 8) + 16))(v77, v78, v79);
          _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v77, 0, 1, v79);
        }
        *(void *)&v7[v142[11]] = *(void *)&v8[v142[11]];
        uint64_t v81 = v142[12];
        uint64_t v82 = &v7[v81];
        uint64_t v83 = &v8[v81];
        uint64_t v84 = *(void *)v83;
        *((_WORD *)v82 + 4) = *((_WORD *)v83 + 4);
        *(void *)uint64_t v82 = v84;
        uint64_t v85 = v142[13];
        __dstb = &v7[v85];
        uint64_t v86 = &v8[v85];
        uint64_t v87 = sub_100129220();
        swift_bridgeObjectRetain();
        if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v86, 1, v87))
        {
          uint64_t v88 = sub_1000053D8(&qword_10016B420);
          memcpy(__dstb, v86, *(void *)(*(void *)(v88 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v87 - 8) + 16))(__dstb, v86, v87);
          _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)__dstb, 0, 1, v87);
        }
        uint64_t v89 = v142[14];
        uint64_t v90 = &v7[v89];
        uint64_t v91 = &v8[v89];
        uint64_t v92 = type metadata accessor for AggregateWeatherViewModel.SunEvent(0);
        if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v91, 1, v92))
        {
          uint64_t v93 = sub_1000053D8(&qword_10016B438);
          memcpy(v90, v91, *(void *)(*(void *)(v93 - 8) + 64));
        }
        else
        {
          swift_getEnumCaseMultiPayload();
          uint64_t v94 = sub_100129300();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v94 - 8) + 16))(v90, v91, v94);
          swift_storeEnumTagMultiPayload();
          _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v90, 0, 1, v92);
        }
      }
      swift_storeEnumTagMultiPayload();
      _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v7, 0, 1, v9);
      goto LABEL_42;
    }
    goto LABEL_8;
  }
  if (v11)
  {
    sub_100056FD4((uint64_t)v7, (void (*)(void))type metadata accessor for WeatherDataViewModel);
LABEL_8:
    uint64_t v23 = sub_1000053D8(&qword_10016B310);
    memcpy(v7, v8, *(void *)(*(void *)(v23 - 8) + 64));
    goto LABEL_42;
  }
  if (a1 != a2)
  {
    sub_100056FD4((uint64_t)v7, (void (*)(void))type metadata accessor for WeatherDataViewModel);
    int v24 = swift_getEnumCaseMultiPayload();
    if (v24 == 2)
    {
      uint64_t v51 = sub_10012BE90();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v51 - 8) + 16))(v7, v8, v51);
    }
    else if (v24 == 1)
    {
      uint64_t v25 = sub_100129330();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 16))(v7, v8, v25);
      uint64_t v26 = type metadata accessor for InstantWeatherViewModel();
      uint64_t v27 = *(int *)(v26 + 20);
      uint64_t v28 = &v7[v27];
      uint64_t v29 = &v8[v27];
      uint64_t v30 = sub_10012A6B0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 16))(v28, v29, v30);
      uint64_t v31 = *(int *)(v26 + 24);
      uint64_t v32 = &v7[v31];
      uint64_t v33 = &v8[v31];
      uint64_t v34 = sub_10012C250();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 16))(v32, v33, v34);
    }
    else
    {
      uint64_t v52 = sub_100129330();
      uint64_t v138 = *(void (**)(char *, char *))(*(void *)(v52 - 8) + 16);
      uint64_t v143 = v52;
      v138(v7, v8);
      uint64_t v53 = (int *)type metadata accessor for AggregateWeatherViewModel(0);
      uint64_t v54 = v53[5];
      uint64_t v55 = &v7[v54];
      uint64_t v56 = &v8[v54];
      uint64_t v57 = sub_10012A6B0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v57 - 8) + 16))(v55, v56, v57);
      uint64_t v58 = v53[6];
      uint64_t v59 = &v7[v58];
      uint64_t v60 = &v8[v58];
      uint64_t v61 = sub_10012C250();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v61 - 8) + 16))(v59, v60, v61);
      *(void *)&v7[v53[7]] = *(void *)&v8[v53[7]];
      *(void *)&v7[v53[8]] = *(void *)&v8[v53[8]];
      uint64_t v62 = v53[9];
      __dsta = v53;
      uint64_t v149 = &v7[v62];
      uint64_t v63 = &v8[v62];
      uint64_t v64 = type metadata accessor for AirQualityViewModel();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v65 = (int *)v64;
      if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v63, 1, v64))
      {
        uint64_t v66 = sub_1000053D8(&qword_10016B428);
        memcpy(v149, v63, *(void *)(*(void *)(v66 - 8) + 64));
      }
      else
      {
        ((void (*)(char *, char *, uint64_t))v138)(v149, v63, v143);
        uint64_t v95 = *(int *)(v64 + 20);
        uint64_t v144 = &v149[v95];
        uint64_t v96 = &v63[v95];
        uint64_t v97 = sub_100129300();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v97 - 8) + 16))(v144, v96, v97);
        *(void *)&v149[v65[6]] = *(void *)&v63[v65[6]];
        uint64_t v98 = v65[7];
        uint64_t v145 = &v149[v98];
        long long v99 = &v63[v98];
        uint64_t v100 = sub_100129B70();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v100 - 8) + 16))(v145, v99, v100);
        uint64_t v101 = v65[8];
        char v102 = &v149[v101];
        char v103 = &v63[v101];
        uint64_t v104 = sub_100129C50();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v104 - 8) + 16))(v102, v103, v104);
        _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v149, 0, 1, (uint64_t)v65);
      }
      uint64_t v105 = __dsta[10];
      long long v106 = &v7[v105];
      uint64_t v107 = &v8[v105];
      uint64_t v108 = sub_10012C6B0();
      if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v107, 1, v108))
      {
        uint64_t v109 = sub_1000053D8(&qword_10016B430);
        memcpy(v106, v107, *(void *)(*(void *)(v109 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v108 - 8) + 16))(v106, v107, v108);
        _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v106, 0, 1, v108);
      }
      *(void *)&v7[__dsta[11]] = *(void *)&v8[__dsta[11]];
      uint64_t v110 = __dsta[12];
      unsigned __int8 v111 = &v7[v110];
      uint64_t v112 = &v8[v110];
      uint64_t v113 = *(void *)v112;
      *((_WORD *)v111 + 4) = *((_WORD *)v112 + 4);
      *(void *)unsigned __int8 v111 = v113;
      uint64_t v114 = __dsta[13];
      uint64_t v150 = &v7[v114];
      unsigned __int8 v115 = &v8[v114];
      uint64_t v116 = sub_100129220();
      swift_bridgeObjectRetain();
      if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v115, 1, v116))
      {
        uint64_t v117 = sub_1000053D8(&qword_10016B420);
        memcpy(v150, v115, *(void *)(*(void *)(v117 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v116 - 8) + 16))(v150, v115, v116);
        _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v150, 0, 1, v116);
      }
      uint64_t v118 = __dsta[14];
      uint64_t v119 = &v7[v118];
      uint64_t v120 = &v8[v118];
      uint64_t v121 = type metadata accessor for AggregateWeatherViewModel.SunEvent(0);
      if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v120, 1, v121))
      {
        uint64_t v122 = sub_1000053D8(&qword_10016B438);
        memcpy(v119, v120, *(void *)(*(void *)(v122 - 8) + 64));
      }
      else
      {
        swift_getEnumCaseMultiPayload();
        uint64_t v123 = sub_100129300();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v123 - 8) + 16))(v119, v120, v123);
        swift_storeEnumTagMultiPayload();
        _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v119, 0, 1, v121);
      }
    }
    swift_storeEnumTagMultiPayload();
  }
LABEL_42:
  if (a1 != a2)
  {
    uint64_t v124 = a3[6];
    uint64_t v125 = (void *)(a1 + v124);
    long long v126 = (void *)(a2 + v124);
    sub_10000D930(a1 + v124, &qword_10016B080);
    sub_1000053D8(&qword_10016B080);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v127 = sub_10012AFD0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v127 - 8) + 16))(v125, v126, v127);
    }
    else
    {
      void *v125 = *v126;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v128 = a3[7];
  uint64_t v129 = a1 + v128;
  uint64_t v130 = a2 + v128;
  uint64_t v131 = *(void *)v130;
  char v132 = *(unsigned char *)(v130 + 8);
  sub_10000886C(*(void *)v130, v132);
  uint64_t v133 = *(void *)v129;
  char v134 = *(unsigned char *)(v129 + 8);
  *(void *)uint64_t v129 = v131;
  *(unsigned char *)(v129 + 8) = v132;
  sub_100008BF8(v133, v134);
  return a1;
}

uint64_t sub_10005A65C(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)(a1 + v6);
  uint64_t v8 = (char *)(a2 + v6);
  uint64_t v9 = type metadata accessor for WeatherDataViewModel();
  if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v8, 1, v9))
  {
    uint64_t v10 = sub_1000053D8(&qword_10016B310);
    memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v22 = sub_10012BE90();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 32))(v7, v8, v22);
    }
    else if (EnumCaseMultiPayload == 1)
    {
      uint64_t v12 = sub_100129330();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v7, v8, v12);
      uint64_t v13 = type metadata accessor for InstantWeatherViewModel();
      uint64_t v14 = *(int *)(v13 + 20);
      uint64_t v15 = &v7[v14];
      uint64_t v16 = &v8[v14];
      uint64_t v17 = sub_10012A6B0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32))(v15, v16, v17);
      uint64_t v18 = *(int *)(v13 + 24);
      uint64_t v19 = &v7[v18];
      uint64_t v20 = &v8[v18];
      uint64_t v21 = sub_10012C250();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 32))(v19, v20, v21);
    }
    else
    {
      uint64_t v23 = sub_100129330();
      uint64_t v73 = *(void (**)(char *, char *))(*(void *)(v23 - 8) + 32);
      uint64_t v76 = v23;
      v73(v7, v8);
      int v24 = (int *)type metadata accessor for AggregateWeatherViewModel(0);
      uint64_t v25 = v24[5];
      uint64_t v26 = &v7[v25];
      uint64_t v27 = &v8[v25];
      uint64_t v28 = sub_10012A6B0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 32))(v26, v27, v28);
      uint64_t v29 = v24[6];
      uint64_t v30 = &v7[v29];
      uint64_t v31 = &v8[v29];
      uint64_t v32 = sub_10012C250();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 32))(v30, v31, v32);
      *(void *)&v7[v24[7]] = *(void *)&v8[v24[7]];
      *(void *)&v7[v24[8]] = *(void *)&v8[v24[8]];
      uint64_t v33 = v24[9];
      uint64_t v34 = &v7[v33];
      uint64_t v35 = &v8[v33];
      uint64_t v36 = (int *)type metadata accessor for AirQualityViewModel();
      if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v35, 1, (uint64_t)v36))
      {
        uint64_t v37 = sub_1000053D8(&qword_10016B428);
        memcpy(v34, v35, *(void *)(*(void *)(v37 - 8) + 64));
      }
      else
      {
        ((void (*)(char *, char *, uint64_t))v73)(v34, v35, v76);
        uint64_t v38 = v36[5];
        char v74 = &v35[v38];
        uint64_t v77 = &v34[v38];
        uint64_t v39 = sub_100129300();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 32))(v77, v74, v39);
        *(void *)&v34[v36[6]] = *(void *)&v35[v36[6]];
        uint64_t v40 = v36[7];
        uint64_t v75 = &v35[v40];
        uint64_t v78 = &v34[v40];
        uint64_t v41 = sub_100129B70();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v41 - 8) + 32))(v78, v75, v41);
        uint64_t v42 = v36[8];
        uint64_t v79 = &v34[v42];
        uint64_t v43 = &v35[v42];
        uint64_t v44 = sub_100129C50();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v44 - 8) + 32))(v79, v43, v44);
        _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v34, 0, 1, (uint64_t)v36);
      }
      uint64_t v45 = v24[10];
      uint64_t v46 = &v7[v45];
      uint64_t v47 = &v8[v45];
      uint64_t v48 = sub_10012C6B0();
      if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v47, 1, v48))
      {
        uint64_t v49 = sub_1000053D8(&qword_10016B430);
        memcpy(v46, v47, *(void *)(*(void *)(v49 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v48 - 8) + 32))(v46, v47, v48);
        _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v46, 0, 1, v48);
      }
      *(void *)&v7[v24[11]] = *(void *)&v8[v24[11]];
      uint64_t v50 = v24[12];
      uint64_t v51 = &v7[v50];
      uint64_t v52 = &v8[v50];
      *(void *)uint64_t v51 = *(void *)v52;
      *((_WORD *)v51 + 4) = *((_WORD *)v52 + 4);
      uint64_t v53 = v24[13];
      uint64_t v54 = &v7[v53];
      uint64_t v55 = &v8[v53];
      uint64_t v56 = sub_100129220();
      if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v55, 1, v56))
      {
        uint64_t v57 = sub_1000053D8(&qword_10016B420);
        memcpy(v54, v55, *(void *)(*(void *)(v57 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v56 - 8) + 32))(v54, v55, v56);
        _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v54, 0, 1, v56);
      }
      uint64_t v58 = v24[14];
      uint64_t v59 = &v7[v58];
      uint64_t v60 = &v8[v58];
      uint64_t v61 = type metadata accessor for AggregateWeatherViewModel.SunEvent(0);
      if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v60, 1, v61))
      {
        uint64_t v62 = sub_1000053D8(&qword_10016B438);
        memcpy(v59, v60, *(void *)(*(void *)(v62 - 8) + 64));
      }
      else
      {
        swift_getEnumCaseMultiPayload();
        uint64_t v63 = sub_100129300();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v63 - 8) + 32))(v59, v60, v63);
        swift_storeEnumTagMultiPayload();
        _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v59, 0, 1, v61);
      }
    }
    swift_storeEnumTagMultiPayload();
    _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v7, 0, 1, v9);
  }
  uint64_t v64 = a3[6];
  uint64_t v65 = (void *)(a1 + v64);
  uint64_t v66 = (const void *)(a2 + v64);
  uint64_t v67 = sub_1000053D8(&qword_10016B080);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v68 = sub_10012AFD0();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v68 - 8) + 32))(v65, v66, v68);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v65, v66, *(void *)(*(void *)(v67 - 8) + 64));
  }
  uint64_t v69 = a3[7];
  uint64_t v70 = a1 + v69;
  uint64_t v71 = a2 + v69;
  *(void *)uint64_t v70 = *(void *)v71;
  *(unsigned char *)(v70 + 8) = *(unsigned char *)(v71 + 8);
  return a1;
}

uint64_t sub_10005ADDC(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)(a1 + v6);
  uint64_t v8 = (char *)(a2 + v6);
  uint64_t v9 = type metadata accessor for WeatherDataViewModel();
  int v10 = _s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v7, 1, v9);
  int v11 = _s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v8, 1, v9);
  if (v10)
  {
    if (!v11)
    {
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        uint64_t v35 = sub_10012BE90();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 32))(v7, v8, v35);
      }
      else if (EnumCaseMultiPayload == 1)
      {
        uint64_t v13 = sub_100129330();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v7, v8, v13);
        uint64_t v14 = type metadata accessor for InstantWeatherViewModel();
        uint64_t v15 = *(int *)(v14 + 20);
        uint64_t v16 = &v7[v15];
        uint64_t v17 = &v8[v15];
        uint64_t v18 = sub_10012A6B0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
        uint64_t v19 = *(int *)(v14 + 24);
        uint64_t v20 = &v7[v19];
        uint64_t v21 = &v8[v19];
        uint64_t v22 = sub_10012C250();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
      }
      else
      {
        uint64_t v36 = sub_100129330();
        uint64_t v131 = *(void (**)(char *, char *))(*(void *)(v36 - 8) + 32);
        uint64_t v134 = v36;
        v131(v7, v8);
        uint64_t v37 = (int *)type metadata accessor for AggregateWeatherViewModel(0);
        uint64_t v38 = v37[5];
        uint64_t v39 = &v7[v38];
        uint64_t v40 = &v8[v38];
        uint64_t v41 = sub_10012A6B0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v41 - 8) + 32))(v39, v40, v41);
        uint64_t v42 = v37[6];
        uint64_t v43 = &v7[v42];
        uint64_t v44 = &v8[v42];
        uint64_t v45 = sub_10012C250();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v45 - 8) + 32))(v43, v44, v45);
        *(void *)&v7[v37[7]] = *(void *)&v8[v37[7]];
        *(void *)&v7[v37[8]] = *(void *)&v8[v37[8]];
        uint64_t v46 = v37[9];
        uint64_t v47 = &v7[v46];
        uint64_t v48 = &v8[v46];
        uint64_t v49 = (int *)type metadata accessor for AirQualityViewModel();
        if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v48, 1, (uint64_t)v49))
        {
          uint64_t v50 = sub_1000053D8(&qword_10016B428);
          memcpy(v47, v48, *(void *)(*(void *)(v50 - 8) + 64));
        }
        else
        {
          ((void (*)(char *, char *, uint64_t))v131)(v47, v48, v134);
          uint64_t v67 = v49[5];
          char v132 = &v48[v67];
          uint64_t v136 = &v47[v67];
          uint64_t v68 = sub_100129300();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v68 - 8) + 32))(v136, v132, v68);
          *(void *)&v47[v49[6]] = *(void *)&v48[v49[6]];
          uint64_t v69 = v49[7];
          uint64_t v133 = &v48[v69];
          uint64_t v137 = &v47[v69];
          uint64_t v70 = sub_100129B70();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v70 - 8) + 32))(v137, v133, v70);
          uint64_t v71 = v49[8];
          uint64_t v138 = &v47[v71];
          uint64_t v72 = &v48[v71];
          uint64_t v73 = sub_100129C50();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v73 - 8) + 32))(v138, v72, v73);
          _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v47, 0, 1, (uint64_t)v49);
        }
        uint64_t v74 = v37[10];
        uint64_t v75 = &v7[v74];
        uint64_t v76 = &v8[v74];
        uint64_t v77 = sub_10012C6B0();
        if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v76, 1, v77))
        {
          uint64_t v78 = sub_1000053D8(&qword_10016B430);
          memcpy(v75, v76, *(void *)(*(void *)(v78 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v77 - 8) + 32))(v75, v76, v77);
          _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v75, 0, 1, v77);
        }
        *(void *)&v7[v37[11]] = *(void *)&v8[v37[11]];
        uint64_t v79 = v37[12];
        uint64_t v80 = &v7[v79];
        uint64_t v81 = &v8[v79];
        *(void *)uint64_t v80 = *(void *)v81;
        *((_WORD *)v80 + 4) = *((_WORD *)v81 + 4);
        uint64_t v82 = v37[13];
        uint64_t v83 = &v7[v82];
        uint64_t v84 = &v8[v82];
        uint64_t v85 = sub_100129220();
        if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v84, 1, v85))
        {
          uint64_t v86 = sub_1000053D8(&qword_10016B420);
          memcpy(v83, v84, *(void *)(*(void *)(v86 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v85 - 8) + 32))(v83, v84, v85);
          _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v83, 0, 1, v85);
        }
        uint64_t v87 = v37[14];
        uint64_t v88 = &v7[v87];
        uint64_t v89 = &v8[v87];
        uint64_t v90 = type metadata accessor for AggregateWeatherViewModel.SunEvent(0);
        if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v89, 1, v90))
        {
          uint64_t v91 = sub_1000053D8(&qword_10016B438);
          memcpy(v88, v89, *(void *)(*(void *)(v91 - 8) + 64));
        }
        else
        {
          swift_getEnumCaseMultiPayload();
          uint64_t v92 = sub_100129300();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v92 - 8) + 32))(v88, v89, v92);
          swift_storeEnumTagMultiPayload();
          _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v88, 0, 1, v90);
        }
      }
      swift_storeEnumTagMultiPayload();
      _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v7, 0, 1, v9);
      goto LABEL_42;
    }
LABEL_8:
    uint64_t v23 = sub_1000053D8(&qword_10016B310);
    memcpy(v7, v8, *(void *)(*(void *)(v23 - 8) + 64));
    goto LABEL_42;
  }
  if (v11)
  {
    sub_100056FD4((uint64_t)v7, (void (*)(void))type metadata accessor for WeatherDataViewModel);
    goto LABEL_8;
  }
  if (a1 != a2)
  {
    sub_100056FD4((uint64_t)v7, (void (*)(void))type metadata accessor for WeatherDataViewModel);
    int v24 = swift_getEnumCaseMultiPayload();
    if (v24 == 2)
    {
      uint64_t v51 = sub_10012BE90();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v51 - 8) + 32))(v7, v8, v51);
    }
    else if (v24 == 1)
    {
      uint64_t v25 = sub_100129330();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 32))(v7, v8, v25);
      uint64_t v26 = type metadata accessor for InstantWeatherViewModel();
      uint64_t v27 = *(int *)(v26 + 20);
      uint64_t v28 = &v7[v27];
      uint64_t v29 = &v8[v27];
      uint64_t v30 = sub_10012A6B0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 32))(v28, v29, v30);
      uint64_t v31 = *(int *)(v26 + 24);
      uint64_t v32 = &v7[v31];
      uint64_t v33 = &v8[v31];
      uint64_t v34 = sub_10012C250();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 32))(v32, v33, v34);
    }
    else
    {
      uint64_t v52 = sub_100129330();
      uint64_t v135 = *(void (**)(char *, char *))(*(void *)(v52 - 8) + 32);
      uint64_t v141 = v52;
      v135(v7, v8);
      uint64_t v53 = (int *)type metadata accessor for AggregateWeatherViewModel(0);
      uint64_t v54 = v53[5];
      uint64_t v55 = &v7[v54];
      uint64_t v56 = &v8[v54];
      uint64_t v57 = sub_10012A6B0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v57 - 8) + 32))(v55, v56, v57);
      uint64_t v58 = v53[6];
      uint64_t v59 = &v7[v58];
      uint64_t v60 = &v8[v58];
      uint64_t v61 = sub_10012C250();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v61 - 8) + 32))(v59, v60, v61);
      *(void *)&v7[v53[7]] = *(void *)&v8[v53[7]];
      *(void *)&v7[v53[8]] = *(void *)&v8[v53[8]];
      uint64_t v62 = v53[9];
      uint64_t v63 = &v7[v62];
      uint64_t v64 = &v8[v62];
      uint64_t v65 = (int *)type metadata accessor for AirQualityViewModel();
      if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v64, 1, (uint64_t)v65))
      {
        uint64_t v66 = sub_1000053D8(&qword_10016B428);
        memcpy(v63, v64, *(void *)(*(void *)(v66 - 8) + 64));
      }
      else
      {
        ((void (*)(char *, char *, uint64_t))v135)(v63, v64, v141);
        uint64_t v93 = v65[5];
        char v139 = &v64[v93];
        uint64_t v142 = &v63[v93];
        uint64_t v94 = sub_100129300();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v94 - 8) + 32))(v142, v139, v94);
        *(void *)&v63[v65[6]] = *(void *)&v64[v65[6]];
        uint64_t v95 = v65[7];
        uint64_t v140 = &v64[v95];
        uint64_t v143 = &v63[v95];
        uint64_t v96 = sub_100129B70();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v96 - 8) + 32))(v143, v140, v96);
        uint64_t v97 = v65[8];
        uint64_t v144 = &v63[v97];
        uint64_t v98 = &v64[v97];
        uint64_t v99 = sub_100129C50();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v99 - 8) + 32))(v144, v98, v99);
        _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v63, 0, 1, (uint64_t)v65);
      }
      uint64_t v100 = v53[10];
      uint64_t v101 = &v7[v100];
      char v102 = &v8[v100];
      uint64_t v103 = sub_10012C6B0();
      if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v102, 1, v103))
      {
        uint64_t v104 = sub_1000053D8(&qword_10016B430);
        memcpy(v101, v102, *(void *)(*(void *)(v104 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v103 - 8) + 32))(v101, v102, v103);
        _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v101, 0, 1, v103);
      }
      *(void *)&v7[v53[11]] = *(void *)&v8[v53[11]];
      uint64_t v105 = v53[12];
      long long v106 = &v7[v105];
      uint64_t v107 = &v8[v105];
      *(void *)long long v106 = *(void *)v107;
      *((_WORD *)v106 + 4) = *((_WORD *)v107 + 4);
      uint64_t v108 = v53[13];
      uint64_t v109 = &v7[v108];
      uint64_t v110 = &v8[v108];
      uint64_t v111 = sub_100129220();
      if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v110, 1, v111))
      {
        uint64_t v112 = sub_1000053D8(&qword_10016B420);
        memcpy(v109, v110, *(void *)(*(void *)(v112 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v111 - 8) + 32))(v109, v110, v111);
        _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v109, 0, 1, v111);
      }
      uint64_t v113 = v53[14];
      uint64_t v114 = &v7[v113];
      unsigned __int8 v115 = &v8[v113];
      uint64_t v116 = type metadata accessor for AggregateWeatherViewModel.SunEvent(0);
      if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v115, 1, v116))
      {
        uint64_t v117 = sub_1000053D8(&qword_10016B438);
        memcpy(v114, v115, *(void *)(*(void *)(v117 - 8) + 64));
      }
      else
      {
        swift_getEnumCaseMultiPayload();
        uint64_t v118 = sub_100129300();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v118 - 8) + 32))(v114, v115, v118);
        swift_storeEnumTagMultiPayload();
        _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v114, 0, 1, v116);
      }
    }
    swift_storeEnumTagMultiPayload();
  }
LABEL_42:
  if (a1 != a2)
  {
    uint64_t v119 = a3[6];
    uint64_t v120 = (void *)(a1 + v119);
    uint64_t v121 = (const void *)(a2 + v119);
    sub_10000D930(a1 + v119, &qword_10016B080);
    uint64_t v122 = sub_1000053D8(&qword_10016B080);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v123 = sub_10012AFD0();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v123 - 8) + 32))(v120, v121, v123);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v120, v121, *(void *)(*(void *)(v122 - 8) + 64));
    }
  }
  uint64_t v124 = a3[7];
  uint64_t v125 = a1 + v124;
  long long v126 = (uint64_t *)(a2 + v124);
  uint64_t v127 = *v126;
  LOBYTE(v126) = *((unsigned char *)v126 + 8);
  uint64_t v128 = *(void *)v125;
  char v129 = *(unsigned char *)(v125 + 8);
  *(void *)uint64_t v125 = v127;
  *(unsigned char *)(v125 + 8) = (_BYTE)v126;
  sub_100008BF8(v128, v129);
  return a1;
}

uint64_t sub_10005BBF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10005BC08);
}

uint64_t sub_10005BC08(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF) {
    return sub_10002A65C(*a1);
  }
  sub_1000053D8(&qword_10016B310);
  sub_10000B3D0();
  if (*(_DWORD *)(v8 + 84) == a2)
  {
    uint64_t v9 = v7;
    uint64_t v10 = *(int *)(a3 + 20);
  }
  else
  {
    uint64_t v9 = sub_1000053D8(&qword_10016B0A8);
    uint64_t v10 = *(int *)(a3 + 24);
  }

  return _s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)a1 + v10, a2, v9);
}

uint64_t sub_10005BCB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10005BCC4);
}

void *sub_10005BCC4(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *unint64_t result = (a2 - 1);
  }
  else
  {
    sub_1000053D8(&qword_10016B310);
    sub_10000B3D0();
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = *(int *)(a4 + 20);
    }
    else
    {
      uint64_t v10 = sub_1000053D8(&qword_10016B0A8);
      uint64_t v11 = *(int *)(a4 + 24);
    }
    return (void *)_s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v5 + v11, a2, a2, v10);
  }
  return result;
}

void sub_10005BD74()
{
  sub_10005BEB0(319, (unint64_t *)&unk_10016CD38, (uint64_t (*)(uint64_t))type metadata accessor for WeatherDataViewModel, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
  if (v0 <= 0x3F)
  {
    sub_10005BEB0(319, (unint64_t *)&qword_10016B128, (uint64_t (*)(uint64_t))&type metadata accessor for ColorSchemeContrast, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_10005BEB0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t destroy for ErrorViewAttributes(uint64_t a1)
{
  sub_100008278(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 56))
  {
    sub_100008278(*(void *)(a1 + 32), *(void *)(a1 + 40), *(unsigned char *)(a1 + 48));
    swift_bridgeObjectRelease();
  }

  return swift_release();
}

uint64_t initializeWithCopy for ErrorViewAttributes(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  char v6 = *(unsigned char *)(a2 + 16);
  sub_10000B0B0(*(void *)a2, v5, v6);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(unsigned char *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  if (v7)
  {
    uint64_t v8 = *(void *)(a2 + 32);
    uint64_t v9 = *(void *)(a2 + 40);
    char v10 = *(unsigned char *)(a2 + 48);
    sub_10000B0B0(v8, v9, v10);
    *(void *)(a1 + 32) = v8;
    *(void *)(a1 + 40) = v9;
    *(unsigned char *)(a1 + 48) = v10;
    *(void *)(a1 + 56) = v7;
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v11 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v11;
  }
  uint64_t v12 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v12;
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for ErrorViewAttributes(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  char v6 = *(unsigned char *)(a2 + 16);
  sub_10000B0B0(*(void *)a2, v5, v6);
  uint64_t v7 = *(void *)a1;
  uint64_t v8 = *(void *)(a1 + 8);
  char v9 = *(unsigned char *)(a1 + 16);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(unsigned char *)(a1 + 16) = v6;
  sub_100008278(v7, v8, v9);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  char v10 = (_OWORD *)(a1 + 32);
  long long v11 = (_OWORD *)(a2 + 32);
  uint64_t v12 = *(void *)(a2 + 56);
  if (*(void *)(a1 + 56))
  {
    if (v12)
    {
      uint64_t v13 = *(void *)(a2 + 32);
      uint64_t v14 = *(void *)(a2 + 40);
      char v15 = *(unsigned char *)(a2 + 48);
      sub_10000B0B0(v13, v14, v15);
      uint64_t v16 = *(void *)(a1 + 32);
      uint64_t v17 = *(void *)(a1 + 40);
      char v18 = *(unsigned char *)(a1 + 48);
      *(void *)(a1 + 32) = v13;
      *(void *)(a1 + 40) = v14;
      *(unsigned char *)(a1 + 48) = v15;
      sub_100008278(v16, v17, v18);
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_10002AC98(a1 + 32);
      long long v22 = *(_OWORD *)(a2 + 48);
      _OWORD *v10 = *v11;
      *(_OWORD *)(a1 + 48) = v22;
    }
  }
  else if (v12)
  {
    uint64_t v19 = *(void *)(a2 + 32);
    uint64_t v20 = *(void *)(a2 + 40);
    char v21 = *(unsigned char *)(a2 + 48);
    sub_10000B0B0(v19, v20, v21);
    *(void *)(a1 + 32) = v19;
    *(void *)(a1 + 40) = v20;
    *(unsigned char *)(a1 + 48) = v21;
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v23 = *(_OWORD *)(a2 + 48);
    _OWORD *v10 = *v11;
    *(_OWORD *)(a1 + 48) = v23;
  }
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_retain();
  swift_release();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  return a1;
}

void *initializeWithTake for ErrorViewAttributes(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x50uLL);
}

uint64_t assignWithTake for ErrorViewAttributes(uint64_t a1, uint64_t a2)
{
  char v4 = *(unsigned char *)(a2 + 16);
  uint64_t v5 = *(void *)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  char v7 = *(unsigned char *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = v4;
  sub_100008278(v5, v6, v7);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  if (!*(void *)(a1 + 56)) {
    goto LABEL_5;
  }
  uint64_t v8 = *(void *)(a2 + 56);
  if (!v8)
  {
    sub_10002AC98(a1 + 32);
LABEL_5:
    long long v13 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v13;
    goto LABEL_6;
  }
  char v9 = *(unsigned char *)(a2 + 48);
  uint64_t v10 = *(void *)(a1 + 32);
  uint64_t v11 = *(void *)(a1 + 40);
  char v12 = *(unsigned char *)(a1 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 48) = v9;
  sub_100008278(v10, v11, v12);
  *(void *)(a1 + 56) = v8;
  swift_bridgeObjectRelease();
LABEL_6:
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_release();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  return a1;
}

uint64_t getEnumTagSinglePayload for ErrorViewAttributes(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 80))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 24);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ErrorViewAttributes(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 80) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 80) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WidgetContentView.GenericErrorView()
{
  return &type metadata for WidgetContentView.GenericErrorView;
}

unint64_t sub_10005C304()
{
  unint64_t result = qword_10016CD70;
  if (!qword_10016CD70)
  {
    sub_100005470(&qword_10016C958);
    sub_100005470(&qword_10016C948);
    sub_100005470(&qword_10016C940);
    type metadata accessor for BackgroundView(255);
    sub_100057050();
    sub_10005745C((uint64_t)&unk_10016C978);
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    sub_10005C550((uint64_t)&unk_10016CD78);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016CD70);
  }
  return result;
}

uint64_t sub_10005C464()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10005C480()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10005C49C(uint64_t a1)
{
  uint64_t v2 = sub_10005C790(a1);
  uint64_t v3 = *(void *)(v1 + 32);
  uint64_t v4 = *(void *)(v1 + 40);
  uint64_t v5 = *(void *)(v1 + 48);
  uint64_t v6 = *(void *)(v1 + 56);
  sub_10000B0B0(v2, *(void *)(v1 + 8), *(unsigned char *)(v1 + 16));
  swift_bridgeObjectRetain();
  sub_10002BDA4(v3, v4, v5, v6);
  swift_retain();
  return v1;
}

unint64_t sub_10005C514()
{
  return sub_10005C550((uint64_t)&unk_10016CDB0);
}

unint64_t sub_10005C550(uint64_t a1)
{
  unint64_t result = sub_10005C790(a1);
  if (!result)
  {
    sub_100005470(v3);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, v1);
  }
  return result;
}

unint64_t sub_10005C594()
{
  unint64_t result = qword_10016CDC0;
  if (!qword_10016CDC0)
  {
    sub_100005470(&qword_10016CD98);
    sub_10005745C((uint64_t)&unk_10016CDC8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016CDC0);
  }
  return result;
}

__n128 sub_10005C640@<Q0>(__n128 **a1@<X0>, __n128 *a2@<X8>)
{
  unsigned __int8 v2 = (*a1)->n128_u8[8];
  unint64_t v3 = (*a1)[1].n128_u64[0];
  unsigned __int8 v4 = (*a1)[1].n128_u8[8];
  unint64_t v5 = (*a1)[2].n128_u64[0];
  unsigned __int8 v6 = (*a1)[2].n128_u8[8];
  __n128 result = (*a1)[3];
  a2->n128_u64[0] = (*a1)->n128_u64[0];
  a2->n128_u8[8] = v2;
  a2[1].n128_u64[0] = v3;
  a2[1].n128_u8[8] = v4;
  a2[2].n128_u64[0] = v5;
  a2[2].n128_u8[8] = v6;
  a2[3] = result;
  return result;
}

void *sub_10005C688@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t *a9, uint64_t *a10)
{
  LOBYTE(a6) = v13;
  LOBYTE(a4) = v11;
  return sub_10004C714(a1, a2, v10, a4, v12, a6, v14, v15, a9, a10);
}

uint64_t sub_10005C6C4()
{
  uint64_t v5 = v0 + *(int *)(v2 + 96);
  char v7 = *(uint64_t **)(v1 + 32);
  uint64_t v6 = *(void *)(v1 + 40);
  uint64_t v8 = *v7;
  LOBYTE(v7) = *((unsigned char *)v7 + 8);
  *(void *)uint64_t v5 = v8;
  *(unsigned char *)(v5 + 8) = (_BYTE)v7;
  uint64_t v9 = v0 + *(int *)(v2 + 112);
  return sub_100057158(v6, v9, v3);
}

uint64_t sub_10005C6FC()
{
  uint64_t v5 = v0 + *(int *)(v2 + 64);
  char v7 = *(uint64_t **)(v1 + 16);
  uint64_t v6 = *(void *)(v1 + 24);
  uint64_t v8 = *v7;
  LOBYTE(v7) = *((unsigned char *)v7 + 8);
  *(void *)uint64_t v5 = v8;
  *(unsigned char *)(v5 + 8) = (_BYTE)v7;
  uint64_t v9 = v0 + *(int *)(v2 + 80);
  return sub_100057158(v6, v9, v3);
}

uint64_t sub_10005C734(uint64_t a1)
{
  return a1 - 8;
}

uint64_t sub_10005C748()
{
  return *(void *)(v0 + 8);
}

double sub_10005C75C(uint64_t a1)
{
  return *(double *)&a1;
}

uint64_t sub_10005C790(uint64_t a1)
{
  return *(void *)a1;
}

uint64_t sub_10005C79C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000053D8(&qword_10016CDF8);
  sub_10000DB98();
  uint64_t v6 = v5;
  __chkstk_darwin(v7);
  sub_10000DC50();
  uint64_t v10 = v9 - v8;
  sub_1000053D8(&qword_10016CE00);
  sub_10000DB98();
  uint64_t v36 = v11;
  uint64_t v37 = v12;
  __chkstk_darwin(v11);
  sub_10000DC50();
  uint64_t v15 = v14 - v13;
  sub_1000053D8(&qword_10016CE08);
  sub_10000DB98();
  uint64_t v38 = v16;
  uint64_t v39 = v17;
  __chkstk_darwin(v16);
  sub_10000DC50();
  uint64_t v35 = v19 - v18;
  type metadata accessor for WeatherTimelineProvider();
  swift_allocObject();
  swift_bridgeObjectRetain_n();
  sub_100118DBC(1, a1, a2);
  type metadata accessor for LocationContentView();
  sub_10005CE38(&qword_10016CE10, (void (*)(uint64_t))type metadata accessor for LocationContentView);
  sub_10005CE38(&qword_10016BDB8, (void (*)(uint64_t))type metadata accessor for WeatherTimelineProvider);
  sub_10012C890();
  sub_10012AF80();
  uint64_t v20 = sub_10012B400();
  uint64_t v22 = v21;
  char v24 = v23 & 1;
  sub_10005CE80();
  sub_10012B0B0();
  sub_100008278(v20, v22, v24);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v10, v4);
  sub_10012AF80();
  uint64_t v25 = sub_10012B400();
  uint64_t v27 = v26;
  LOBYTE(v22) = v28 & 1;
  swift_getOpaqueTypeConformance2();
  sub_10012B070();
  sub_100008278(v25, v27, v22);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v15, v36);
  sub_1000053D8(&qword_10016B9C8);
  uint64_t v29 = sub_10012C800();
  sub_10000DB98();
  uint64_t v31 = v30;
  unint64_t v32 = (*(unsigned __int8 *)(v30 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80);
  uint64_t v33 = swift_allocObject();
  *(_OWORD *)(v33 + 16) = xmmword_100130010;
  (*(void (**)(unint64_t, void, uint64_t))(v31 + 104))(v33 + v32, enum case for WidgetFamily.accessoryInline(_:), v29);
  swift_getOpaqueTypeConformance2();
  sub_10012B090();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v39 + 8))(v35, v38);
}

uint64_t sub_10005CC4C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = type metadata accessor for ForecastEntry(0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100024484(a1, (uint64_t)v6);
  *a2 = swift_getKeyPath();
  sub_1000053D8(&qword_10016B410);
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = type metadata accessor for LocationContentView();
  return sub_100024560((uint64_t)v6, (uint64_t)a2 + *(int *)(v7 + 20));
}

uint64_t sub_10005CD10()
{
  uint64_t v0 = sub_10012A0B0();
  sub_10000DB98();
  uint64_t v2 = v1;
  __chkstk_darwin(v3);
  sub_10000DC50();
  uint64_t v6 = v5 - v4;
  (*(void (**)(uint64_t, void, uint64_t))(v2 + 104))(v5 - v4, enum case for WidgetNames.LocationComplication(_:), v0);
  uint64_t v7 = sub_10012A0A0();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v6, v0);
  return v7;
}

ValueMetadata *type metadata accessor for LocationComplicationWidget()
{
  return &type metadata for LocationComplicationWidget;
}

uint64_t sub_10005CDEC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10005CE08@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_10005CD10();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_10005CE30()
{
  return sub_10005C79C(*v0, v0[1]);
}

uint64_t sub_10005CE38(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10005CE80()
{
  unint64_t result = qword_10016CE18;
  if (!qword_10016CE18)
  {
    sub_100005470(&qword_10016CDF8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016CE18);
  }
  return result;
}

uint64_t sub_10005CED8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10005CFA4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for AggregateWeatherViewModel(0);
  sub_10000B3FC();
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for WeatherDataViewModel();
  sub_10000B3FC();
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v27 - v11;
  type metadata accessor for ForecastEntry.Model(0);
  sub_10000B3FC();
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for ForecastEntry(0);
  sub_100012588(v1 + *(int *)(v16 + 28), (uint64_t)v15, (void (*)(void))type metadata accessor for ForecastEntry.Model);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1000125E8((uint64_t)v15, (uint64_t)v12, (void (*)(void))type metadata accessor for WeatherDataViewModel);
    sub_100012588((uint64_t)v12, (uint64_t)v10, (void (*)(void))type metadata accessor for WeatherDataViewModel);
    if (swift_getEnumCaseMultiPayload())
    {
      sub_10005EFC0((uint64_t)v10, (void (*)(void))type metadata accessor for WeatherDataViewModel);
      if (qword_10016AE28 != -1) {
        swift_once();
      }
      uint64_t v17 = sub_10012AB60();
      sub_10000D7A4(v17, (uint64_t)qword_100181C40);
      uint64_t v18 = sub_10012AB40();
      os_log_type_t v19 = sub_10012CD40();
      if (os_log_type_enabled(v18, v19))
      {
        uint64_t v20 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v20 = 0;
        _os_log_impl((void *)&_mh_execute_header, v18, v19, "Expected aggregate but got instant or sunriseSunset", v20, 2u);
        swift_slowDealloc();
      }

      sub_10005EFC0((uint64_t)v12, (void (*)(void))type metadata accessor for WeatherDataViewModel);
      uint64_t v21 = 1;
    }
    else
    {
      sub_1000125E8((uint64_t)v10, (uint64_t)v6, (void (*)(void))type metadata accessor for AggregateWeatherViewModel);
      if (qword_10016AE28 != -1) {
        swift_once();
      }
      uint64_t v22 = sub_10012AB60();
      sub_10000D7A4(v22, (uint64_t)qword_100181C40);
      char v23 = sub_10012AB40();
      os_log_type_t v24 = sub_10012CD60();
      if (os_log_type_enabled(v23, v24))
      {
        uint64_t v25 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v25 = 0;
        _os_log_impl((void *)&_mh_execute_header, v23, v24, "Making Rain complication view model entry from aggregate weather", v25, 2u);
        swift_slowDealloc();
      }

      sub_10005EFC0((uint64_t)v12, (void (*)(void))type metadata accessor for WeatherDataViewModel);
      sub_1000125E8((uint64_t)v6, a1, (void (*)(void))type metadata accessor for AggregateWeatherViewModel);
      uint64_t v21 = 0;
    }
  }
  else if (*v15)
  {
    uint64_t v21 = 1;
  }
  else
  {
    uint64_t v21 = 2;
  }
  return _s13WeatherWidget20WeatherDataViewModelOwst_0(a1, v21, 2, v3);
}

uint64_t *initializeBufferWithCopyOfBuffer for AdaptiveConditionsComplicationDataStatus(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    uint64_t v7 = (int *)type metadata accessor for AggregateWeatherViewModel(0);
    if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)a2, 2, (uint64_t)v7))
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      uint64_t v9 = sub_100129330();
      uint64_t v10 = (void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
      uint64_t v56 = *v10;
      (*v10)((char *)a1, (char *)a2, v9);
      uint64_t v11 = v7[5];
      uint64_t v12 = (char *)a1 + v11;
      uint64_t v13 = (char *)a2 + v11;
      uint64_t v14 = sub_10012A6B0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
      uint64_t v15 = v7[6];
      uint64_t v16 = (char *)a1 + v15;
      uint64_t v17 = (char *)a2 + v15;
      uint64_t v18 = sub_10012C250();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
      *(uint64_t *)((char *)a1 + v7[7]) = *(uint64_t *)((char *)a2 + v7[7]);
      *(uint64_t *)((char *)a1 + v7[8]) = *(uint64_t *)((char *)a2 + v7[8]);
      uint64_t v19 = v7[9];
      uint64_t v20 = (char *)a1 + v19;
      uint64_t v21 = (char *)a2 + v19;
      uint64_t v22 = (int *)type metadata accessor for AirQualityViewModel();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v21, 1, (uint64_t)v22))
      {
        uint64_t v23 = sub_1000053D8(&qword_10016B428);
        memcpy(v20, v21, *(void *)(*(void *)(v23 - 8) + 64));
      }
      else
      {
        v56(v20, v21, v9);
        uint64_t v24 = v22[5];
        uint64_t v25 = &v20[v24];
        uint64_t v26 = &v21[v24];
        uint64_t v27 = sub_100129300();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
        *(void *)&v20[v22[6]] = *(void *)&v21[v22[6]];
        uint64_t v28 = v22[7];
        uint64_t v29 = &v20[v28];
        uint64_t v30 = &v21[v28];
        uint64_t v31 = sub_100129B70();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16))(v29, v30, v31);
        uint64_t v32 = v22[8];
        uint64_t v33 = &v20[v32];
        uint64_t v34 = &v21[v32];
        uint64_t v35 = sub_100129C50();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 16))(v33, v34, v35);
        _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v20, 0, 1, (uint64_t)v22);
      }
      uint64_t v36 = v7[10];
      uint64_t v37 = (char *)a1 + v36;
      uint64_t v38 = (char *)a2 + v36;
      uint64_t v39 = sub_10012C6B0();
      if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v38, 1, v39))
      {
        uint64_t v40 = sub_1000053D8(&qword_10016B430);
        memcpy(v37, v38, *(void *)(*(void *)(v40 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 16))(v37, v38, v39);
        _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v37, 0, 1, v39);
      }
      *(uint64_t *)((char *)a1 + v7[11]) = *(uint64_t *)((char *)a2 + v7[11]);
      uint64_t v41 = v7[12];
      uint64_t v42 = (char *)a1 + v41;
      uint64_t v43 = (char *)a2 + v41;
      *(void *)uint64_t v42 = *(void *)v43;
      *((_WORD *)v42 + 4) = *((_WORD *)v43 + 4);
      uint64_t v44 = v7[13];
      uint64_t v45 = (char *)a1 + v44;
      uint64_t v46 = (char *)a2 + v44;
      uint64_t v47 = sub_100129220();
      swift_bridgeObjectRetain();
      if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v46, 1, v47))
      {
        uint64_t v48 = sub_1000053D8(&qword_10016B420);
        memcpy(v45, v46, *(void *)(*(void *)(v48 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v47 - 8) + 16))(v45, v46, v47);
        _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v45, 0, 1, v47);
      }
      uint64_t v49 = v7[14];
      uint64_t v50 = (char *)a1 + v49;
      uint64_t v51 = (char *)a2 + v49;
      uint64_t v52 = type metadata accessor for AggregateWeatherViewModel.SunEvent(0);
      if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v51, 1, v52))
      {
        uint64_t v53 = sub_1000053D8(&qword_10016B438);
        memcpy(v50, v51, *(void *)(*(void *)(v53 - 8) + 64));
      }
      else
      {
        swift_getEnumCaseMultiPayload();
        uint64_t v54 = sub_100129300();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v54 - 8) + 16))(v50, v51, v54);
        swift_storeEnumTagMultiPayload();
        _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v50, 0, 1, v52);
      }
      _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)a1, 0, 2, (uint64_t)v7);
    }
  }
  return a1;
}

uint64_t destroy for AdaptiveConditionsComplicationDataStatus(uint64_t a1)
{
  uint64_t v2 = (int *)type metadata accessor for AggregateWeatherViewModel(0);
  uint64_t result = _s13WeatherWidget20WeatherDataViewModelOwet_0(a1, 2, (uint64_t)v2);
  if (!result)
  {
    uint64_t v4 = sub_100129330();
    int v5 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
    v5(a1, v4);
    uint64_t v6 = a1 + v2[5];
    uint64_t v7 = sub_10012A6B0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
    uint64_t v8 = a1 + v2[6];
    uint64_t v9 = sub_10012C250();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v10 = a1 + v2[9];
    uint64_t v11 = (int *)type metadata accessor for AirQualityViewModel();
    if (!_s13WeatherWidget20WeatherDataViewModelOwet_0(v10, 1, (uint64_t)v11))
    {
      v5(v10, v4);
      uint64_t v12 = v10 + v11[5];
      uint64_t v13 = sub_100129300();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
      uint64_t v14 = v10 + v11[7];
      uint64_t v15 = sub_100129B70();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v14, v15);
      uint64_t v16 = v10 + v11[8];
      uint64_t v17 = sub_100129C50();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v17 - 8) + 8))(v16, v17);
    }
    uint64_t v18 = a1 + v2[10];
    uint64_t v19 = sub_10012C6B0();
    if (!_s13WeatherWidget20WeatherDataViewModelOwet_0(v18, 1, v19)) {
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v19 - 8) + 8))(v18, v19);
    }
    swift_bridgeObjectRelease();
    uint64_t v20 = a1 + v2[13];
    uint64_t v21 = sub_100129220();
    if (!_s13WeatherWidget20WeatherDataViewModelOwet_0(v20, 1, v21)) {
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v21 - 8) + 8))(v20, v21);
    }
    uint64_t v22 = a1 + v2[14];
    uint64_t v23 = type metadata accessor for AggregateWeatherViewModel.SunEvent(0);
    uint64_t result = _s13WeatherWidget20WeatherDataViewModelOwet_0(v22, 1, v23);
    if (!result)
    {
      uint64_t v24 = sub_100129300();
      uint64_t v25 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v24 - 8) + 8);
      return v25(v22, v24);
    }
  }
  return result;
}

char *initializeWithCopy for AdaptiveConditionsComplicationDataStatus(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = (int *)type metadata accessor for AggregateWeatherViewModel(0);
  if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)a2, 2, (uint64_t)v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v7 = sub_100129330();
    uint64_t v8 = (void (**)(void *, const void *, uint64_t))(*(void *)(v7 - 8) + 16);
    uint64_t v54 = *v8;
    (*v8)(a1, a2, v7);
    uint64_t v9 = v6[5];
    uint64_t v10 = &a1[v9];
    uint64_t v11 = &a2[v9];
    uint64_t v12 = sub_10012A6B0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
    uint64_t v13 = v6[6];
    uint64_t v14 = &a1[v13];
    uint64_t v15 = &a2[v13];
    uint64_t v16 = sub_10012C250();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
    *(void *)&a1[v6[7]] = *(void *)&a2[v6[7]];
    *(void *)&a1[v6[8]] = *(void *)&a2[v6[8]];
    uint64_t v17 = v6[9];
    uint64_t v18 = &a1[v17];
    uint64_t v19 = &a2[v17];
    uint64_t v20 = (int *)type metadata accessor for AirQualityViewModel();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v19, 1, (uint64_t)v20))
    {
      uint64_t v21 = sub_1000053D8(&qword_10016B428);
      memcpy(v18, v19, *(void *)(*(void *)(v21 - 8) + 64));
    }
    else
    {
      v54(v18, v19, v7);
      uint64_t v22 = v20[5];
      uint64_t v23 = &v18[v22];
      uint64_t v24 = &v19[v22];
      uint64_t v25 = sub_100129300();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 16))(v23, v24, v25);
      *(void *)&v18[v20[6]] = *(void *)&v19[v20[6]];
      uint64_t v26 = v20[7];
      uint64_t v27 = &v18[v26];
      uint64_t v28 = &v19[v26];
      uint64_t v29 = sub_100129B70();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 16))(v27, v28, v29);
      uint64_t v30 = v20[8];
      uint64_t v31 = &v18[v30];
      uint64_t v32 = &v19[v30];
      uint64_t v33 = sub_100129C50();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 16))(v31, v32, v33);
      _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v18, 0, 1, (uint64_t)v20);
    }
    uint64_t v34 = v6[10];
    uint64_t v35 = &a1[v34];
    uint64_t v36 = &a2[v34];
    uint64_t v37 = sub_10012C6B0();
    if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v36, 1, v37))
    {
      uint64_t v38 = sub_1000053D8(&qword_10016B430);
      memcpy(v35, v36, *(void *)(*(void *)(v38 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 16))(v35, v36, v37);
      _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v35, 0, 1, v37);
    }
    *(void *)&a1[v6[11]] = *(void *)&a2[v6[11]];
    uint64_t v39 = v6[12];
    uint64_t v40 = &a1[v39];
    uint64_t v41 = &a2[v39];
    *(void *)uint64_t v40 = *(void *)v41;
    *((_WORD *)v40 + 4) = *((_WORD *)v41 + 4);
    uint64_t v42 = v6[13];
    uint64_t v43 = &a1[v42];
    uint64_t v44 = &a2[v42];
    uint64_t v45 = sub_100129220();
    swift_bridgeObjectRetain();
    if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v44, 1, v45))
    {
      uint64_t v46 = sub_1000053D8(&qword_10016B420);
      memcpy(v43, v44, *(void *)(*(void *)(v46 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v45 - 8) + 16))(v43, v44, v45);
      _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v43, 0, 1, v45);
    }
    uint64_t v47 = v6[14];
    uint64_t v48 = &a1[v47];
    uint64_t v49 = &a2[v47];
    uint64_t v50 = type metadata accessor for AggregateWeatherViewModel.SunEvent(0);
    if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v49, 1, v50))
    {
      uint64_t v51 = sub_1000053D8(&qword_10016B438);
      memcpy(v48, v49, *(void *)(*(void *)(v51 - 8) + 64));
    }
    else
    {
      swift_getEnumCaseMultiPayload();
      uint64_t v52 = sub_100129300();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v52 - 8) + 16))(v48, v49, v52);
      swift_storeEnumTagMultiPayload();
      _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v48, 0, 1, v50);
    }
    _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)a1, 0, 2, (uint64_t)v6);
  }
  return a1;
}

uint64_t sub_10005E1F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = (int *)type metadata accessor for AggregateWeatherViewModel(0);
  int v7 = _s13WeatherWidget20WeatherDataViewModelOwet_0(a1, 2, (uint64_t)v6);
  int v8 = _s13WeatherWidget20WeatherDataViewModelOwet_0(a2, 2, (uint64_t)v6);
  if (v7)
  {
    if (!v8)
    {
      uint64_t v9 = sub_100129330();
      uint64_t v10 = (void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16);
      uint64_t v131 = *v10;
      (*v10)(a1, a2, v9);
      uint64_t v11 = v6[5];
      uint64_t v12 = a1 + v11;
      uint64_t v13 = a2 + v11;
      uint64_t v14 = sub_10012A6B0();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
      uint64_t v15 = v6[6];
      uint64_t v16 = a1 + v15;
      uint64_t v17 = a2 + v15;
      uint64_t v18 = sub_10012C250();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
      *(void *)(a1 + v6[7]) = *(void *)(a2 + v6[7]);
      *(void *)(a1 + v6[8]) = *(void *)(a2 + v6[8]);
      uint64_t v19 = v6[9];
      uint64_t v20 = (char *)(a1 + v19);
      uint64_t v21 = (char *)(a2 + v19);
      uint64_t v22 = (int *)type metadata accessor for AirQualityViewModel();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v21, 1, (uint64_t)v22))
      {
        uint64_t v23 = sub_1000053D8(&qword_10016B428);
        memcpy(v20, v21, *(void *)(*(void *)(v23 - 8) + 64));
      }
      else
      {
        v131((uint64_t)v20, (uint64_t)v21, v9);
        uint64_t v55 = v22[5];
        uint64_t v56 = &v20[v55];
        uint64_t v57 = &v21[v55];
        uint64_t v58 = sub_100129300();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v58 - 8) + 16))(v56, v57, v58);
        *(void *)&v20[v22[6]] = *(void *)&v21[v22[6]];
        uint64_t v59 = v22[7];
        uint64_t v60 = &v20[v59];
        uint64_t v61 = &v21[v59];
        uint64_t v62 = sub_100129B70();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v62 - 8) + 16))(v60, v61, v62);
        uint64_t v63 = v22[8];
        uint64_t v64 = &v20[v63];
        uint64_t v65 = &v21[v63];
        uint64_t v66 = sub_100129C50();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v66 - 8) + 16))(v64, v65, v66);
        _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v20, 0, 1, (uint64_t)v22);
      }
      uint64_t v67 = v6[10];
      uint64_t v68 = (void *)(a1 + v67);
      uint64_t v69 = (const void *)(a2 + v67);
      uint64_t v70 = sub_10012C6B0();
      if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v69, 1, v70))
      {
        uint64_t v71 = sub_1000053D8(&qword_10016B430);
        memcpy(v68, v69, *(void *)(*(void *)(v71 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v70 - 8) + 16))(v68, v69, v70);
        _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v68, 0, 1, v70);
      }
      *(void *)(a1 + v6[11]) = *(void *)(a2 + v6[11]);
      uint64_t v72 = v6[12];
      uint64_t v73 = a1 + v72;
      uint64_t v74 = (uint64_t *)(a2 + v72);
      uint64_t v75 = *v74;
      *(_WORD *)(v73 + 8) = *((_WORD *)v74 + 4);
      *(void *)uint64_t v73 = v75;
      uint64_t v76 = v6[13];
      uint64_t v77 = (void *)(a1 + v76);
      uint64_t v78 = (const void *)(a2 + v76);
      uint64_t v79 = sub_100129220();
      swift_bridgeObjectRetain();
      if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v78, 1, v79))
      {
        uint64_t v80 = sub_1000053D8(&qword_10016B420);
        memcpy(v77, v78, *(void *)(*(void *)(v80 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v79 - 8) + 16))(v77, v78, v79);
        _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v77, 0, 1, v79);
      }
      uint64_t v81 = v6[14];
      uint64_t v82 = (void *)(a1 + v81);
      uint64_t v83 = (const void *)(a2 + v81);
      uint64_t v84 = type metadata accessor for AggregateWeatherViewModel.SunEvent(0);
      if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v83, 1, v84))
      {
        uint64_t v85 = sub_1000053D8(&qword_10016B438);
        memcpy(v82, v83, *(void *)(*(void *)(v85 - 8) + 64));
      }
      else
      {
        swift_getEnumCaseMultiPayload();
        uint64_t v86 = sub_100129300();
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v86 - 8) + 16))(v82, v83, v86);
        swift_storeEnumTagMultiPayload();
        _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v82, 0, 1, v84);
      }
      uint64_t v87 = a1;
      uint64_t v88 = 2;
      uint64_t v89 = (uint64_t)v6;
      goto LABEL_23;
    }
    goto LABEL_7;
  }
  if (v8)
  {
    sub_10005EFC0(a1, (void (*)(void))type metadata accessor for AggregateWeatherViewModel);
LABEL_7:
    size_t v24 = *(void *)(*(void *)(a3 - 8) + 64);
    uint64_t v25 = (void *)a1;
    uint64_t v26 = (const void *)a2;
LABEL_8:
    memcpy(v25, v26, v24);
    return a1;
  }
  uint64_t v27 = sub_100129330();
  uint64_t v132 = *(void *)(v27 - 8);
  uint64_t v28 = *(void (**)(uint64_t, uint64_t, uint64_t))(v132 + 24);
  v28(a1, a2, v27);
  uint64_t v29 = v6[5];
  uint64_t v30 = a1 + v29;
  uint64_t v31 = a2 + v29;
  uint64_t v32 = sub_10012A6B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 24))(v30, v31, v32);
  uint64_t v33 = v6[6];
  uint64_t v34 = a1 + v33;
  uint64_t v35 = a2 + v33;
  uint64_t v36 = sub_10012C250();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 24))(v34, v35, v36);
  *(void *)(a1 + v6[7]) = *(void *)(a2 + v6[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + v6[8]) = *(void *)(a2 + v6[8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v37 = v6[9];
  uint64_t v38 = (char *)(a1 + v37);
  uint64_t v39 = (char *)(a2 + v37);
  uint64_t v40 = (int *)type metadata accessor for AirQualityViewModel();
  int v41 = _s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v38, 1, (uint64_t)v40);
  int v42 = _s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v39, 1, (uint64_t)v40);
  if (v41)
  {
    if (!v42)
    {
      (*(void (**)(char *, char *, uint64_t))(v132 + 16))(v38, v39, v27);
      uint64_t v43 = v40[5];
      uint64_t v44 = &v38[v43];
      uint64_t v45 = &v39[v43];
      uint64_t v46 = sub_100129300();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v46 - 8) + 16))(v44, v45, v46);
      *(void *)&v38[v40[6]] = *(void *)&v39[v40[6]];
      uint64_t v47 = v40[7];
      uint64_t v48 = &v38[v47];
      uint64_t v49 = &v39[v47];
      uint64_t v50 = sub_100129B70();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v50 - 8) + 16))(v48, v49, v50);
      uint64_t v51 = v40[8];
      uint64_t v52 = &v38[v51];
      uint64_t v53 = &v39[v51];
      uint64_t v54 = sub_100129C50();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v54 - 8) + 16))(v52, v53, v54);
      _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v38, 0, 1, (uint64_t)v40);
      goto LABEL_28;
    }
    goto LABEL_27;
  }
  if (v42)
  {
    sub_10005EFC0((uint64_t)v38, (void (*)(void))type metadata accessor for AirQualityViewModel);
LABEL_27:
    uint64_t v91 = sub_1000053D8(&qword_10016B428);
    memcpy(v38, v39, *(void *)(*(void *)(v91 - 8) + 64));
    goto LABEL_28;
  }
  v28((uint64_t)v38, (uint64_t)v39, v27);
  uint64_t v118 = v40[5];
  uint64_t v119 = &v38[v118];
  uint64_t v120 = &v39[v118];
  uint64_t v121 = sub_100129300();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v121 - 8) + 24))(v119, v120, v121);
  *(void *)&v38[v40[6]] = *(void *)&v39[v40[6]];
  uint64_t v122 = v40[7];
  uint64_t v123 = &v38[v122];
  uint64_t v124 = &v39[v122];
  uint64_t v125 = sub_100129B70();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v125 - 8) + 24))(v123, v124, v125);
  uint64_t v126 = v40[8];
  uint64_t v127 = &v38[v126];
  uint64_t v128 = &v39[v126];
  uint64_t v129 = sub_100129C50();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v129 - 8) + 24))(v127, v128, v129);
LABEL_28:
  uint64_t v92 = v6[10];
  uint64_t v93 = (void *)(a1 + v92);
  uint64_t v94 = (const void *)(a2 + v92);
  uint64_t v95 = sub_10012C6B0();
  int v96 = _s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v93, 1, v95);
  int v97 = _s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v94, 1, v95);
  if (v96)
  {
    if (!v97)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v95 - 8) + 16))(v93, v94, v95);
      _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v93, 0, 1, v95);
      goto LABEL_34;
    }
    goto LABEL_33;
  }
  uint64_t v98 = *(void *)(v95 - 8);
  if (v97)
  {
    (*(void (**)(void *, uint64_t))(v98 + 8))(v93, v95);
LABEL_33:
    uint64_t v99 = sub_1000053D8(&qword_10016B430);
    memcpy(v93, v94, *(void *)(*(void *)(v99 - 8) + 64));
    goto LABEL_34;
  }
  (*(void (**)(void *, const void *, uint64_t))(v98 + 24))(v93, v94, v95);
LABEL_34:
  *(void *)(a1 + v6[11]) = *(void *)(a2 + v6[11]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v100 = v6[12];
  uint64_t v101 = (unsigned char *)(a1 + v100);
  char v102 = (unsigned char *)(a2 + v100);
  *uint64_t v101 = *v102;
  v101[1] = v102[1];
  v101[2] = v102[2];
  v101[3] = v102[3];
  v101[4] = v102[4];
  v101[5] = v102[5];
  v101[6] = v102[6];
  v101[7] = v102[7];
  v101[8] = v102[8];
  v101[9] = v102[9];
  uint64_t v103 = v6[13];
  uint64_t v104 = (void *)(a1 + v103);
  uint64_t v105 = (const void *)(a2 + v103);
  uint64_t v106 = sub_100129220();
  int v107 = _s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v104, 1, v106);
  int v108 = _s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v105, 1, v106);
  if (v107)
  {
    if (!v108)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v106 - 8) + 16))(v104, v105, v106);
      _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v104, 0, 1, v106);
      goto LABEL_40;
    }
    goto LABEL_39;
  }
  uint64_t v109 = *(void *)(v106 - 8);
  if (v108)
  {
    (*(void (**)(void *, uint64_t))(v109 + 8))(v104, v106);
LABEL_39:
    uint64_t v110 = sub_1000053D8(&qword_10016B420);
    memcpy(v104, v105, *(void *)(*(void *)(v110 - 8) + 64));
    goto LABEL_40;
  }
  (*(void (**)(void *, const void *, uint64_t))(v109 + 24))(v104, v105, v106);
LABEL_40:
  uint64_t v111 = v6[14];
  uint64_t v112 = a1 + v111;
  uint64_t v113 = a2 + v111;
  uint64_t v114 = type metadata accessor for AggregateWeatherViewModel.SunEvent(0);
  int v115 = _s13WeatherWidget20WeatherDataViewModelOwet_0(v112, 1, v114);
  int v116 = _s13WeatherWidget20WeatherDataViewModelOwet_0(v113, 1, v114);
  if (v115)
  {
    if (!v116)
    {
      swift_getEnumCaseMultiPayload();
      uint64_t v117 = sub_100129300();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v117 - 8) + 16))(v112, v113, v117);
      swift_storeEnumTagMultiPayload();
      uint64_t v87 = v112;
      uint64_t v88 = 1;
      uint64_t v89 = v114;
LABEL_23:
      _s13WeatherWidget20WeatherDataViewModelOwst_0(v87, 0, v88, v89);
      return a1;
    }
    goto LABEL_45;
  }
  if (v116)
  {
    sub_10005EFC0(v112, (void (*)(void))type metadata accessor for AggregateWeatherViewModel.SunEvent);
LABEL_45:
    size_t v24 = *(void *)(*(void *)(sub_1000053D8(&qword_10016B438) - 8) + 64);
    uint64_t v25 = (void *)v112;
    uint64_t v26 = (const void *)v113;
    goto LABEL_8;
  }
  if (a1 != a2)
  {
    sub_10005EFC0(v112, (void (*)(void))type metadata accessor for AggregateWeatherViewModel.SunEvent);
    swift_getEnumCaseMultiPayload();
    uint64_t v130 = sub_100129300();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v130 - 8) + 16))(v112, v113, v130);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_10005EFC0(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_10000B3FC();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

char *initializeWithTake for AdaptiveConditionsComplicationDataStatus(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = (int *)type metadata accessor for AggregateWeatherViewModel(0);
  if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)a2, 2, (uint64_t)v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v7 = sub_100129330();
    int v8 = *(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32);
    v8(a1, a2, v7);
    uint64_t v9 = v6[5];
    uint64_t v10 = &a1[v9];
    uint64_t v11 = &a2[v9];
    uint64_t v12 = sub_10012A6B0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v10, v11, v12);
    uint64_t v13 = v6[6];
    uint64_t v14 = &a1[v13];
    uint64_t v15 = &a2[v13];
    uint64_t v16 = sub_10012C250();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v14, v15, v16);
    *(void *)&a1[v6[7]] = *(void *)&a2[v6[7]];
    *(void *)&a1[v6[8]] = *(void *)&a2[v6[8]];
    uint64_t v17 = v6[9];
    uint64_t v18 = &a1[v17];
    uint64_t v19 = &a2[v17];
    uint64_t v20 = (int *)type metadata accessor for AirQualityViewModel();
    if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v19, 1, (uint64_t)v20))
    {
      uint64_t v21 = sub_1000053D8(&qword_10016B428);
      memcpy(v18, v19, *(void *)(*(void *)(v21 - 8) + 64));
    }
    else
    {
      v8(v18, v19, v7);
      uint64_t v22 = v20[5];
      uint64_t v23 = &v18[v22];
      size_t v24 = &v19[v22];
      uint64_t v25 = sub_100129300();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 32))(v23, v24, v25);
      *(void *)&v18[v20[6]] = *(void *)&v19[v20[6]];
      uint64_t v26 = v20[7];
      uint64_t v27 = &v18[v26];
      uint64_t v28 = &v19[v26];
      uint64_t v29 = sub_100129B70();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 32))(v27, v28, v29);
      uint64_t v30 = v20[8];
      uint64_t v31 = &v18[v30];
      uint64_t v32 = &v19[v30];
      uint64_t v33 = sub_100129C50();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 32))(v31, v32, v33);
      _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v18, 0, 1, (uint64_t)v20);
    }
    uint64_t v34 = v6[10];
    uint64_t v35 = &a1[v34];
    uint64_t v36 = &a2[v34];
    uint64_t v37 = sub_10012C6B0();
    if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v36, 1, v37))
    {
      uint64_t v38 = sub_1000053D8(&qword_10016B430);
      memcpy(v35, v36, *(void *)(*(void *)(v38 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 32))(v35, v36, v37);
      _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v35, 0, 1, v37);
    }
    *(void *)&a1[v6[11]] = *(void *)&a2[v6[11]];
    uint64_t v39 = v6[12];
    uint64_t v40 = &a1[v39];
    int v41 = &a2[v39];
    *(void *)uint64_t v40 = *(void *)v41;
    *((_WORD *)v40 + 4) = *((_WORD *)v41 + 4);
    uint64_t v42 = v6[13];
    uint64_t v43 = &a1[v42];
    uint64_t v44 = &a2[v42];
    uint64_t v45 = sub_100129220();
    if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v44, 1, v45))
    {
      uint64_t v46 = sub_1000053D8(&qword_10016B420);
      memcpy(v43, v44, *(void *)(*(void *)(v46 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v45 - 8) + 32))(v43, v44, v45);
      _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v43, 0, 1, v45);
    }
    uint64_t v47 = v6[14];
    uint64_t v48 = &a1[v47];
    uint64_t v49 = &a2[v47];
    uint64_t v50 = type metadata accessor for AggregateWeatherViewModel.SunEvent(0);
    if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v49, 1, v50))
    {
      uint64_t v51 = sub_1000053D8(&qword_10016B438);
      memcpy(v48, v49, *(void *)(*(void *)(v51 - 8) + 64));
    }
    else
    {
      swift_getEnumCaseMultiPayload();
      uint64_t v52 = sub_100129300();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v52 - 8) + 32))(v48, v49, v52);
      swift_storeEnumTagMultiPayload();
      _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v48, 0, 1, v50);
    }
    _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)a1, 0, 2, (uint64_t)v6);
  }
  return a1;
}

uint64_t sub_10005F550(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = (int *)type metadata accessor for AggregateWeatherViewModel(0);
  int v7 = _s13WeatherWidget20WeatherDataViewModelOwet_0(a1, 2, (uint64_t)v6);
  int v8 = _s13WeatherWidget20WeatherDataViewModelOwet_0(a2, 2, (uint64_t)v6);
  if (v7)
  {
    if (!v8)
    {
      uint64_t v9 = sub_100129330();
      uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32);
      v10(a1, a2, v9);
      uint64_t v11 = v6[5];
      uint64_t v12 = a1 + v11;
      uint64_t v13 = a2 + v11;
      uint64_t v14 = sub_10012A6B0();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
      uint64_t v15 = v6[6];
      uint64_t v16 = a1 + v15;
      uint64_t v17 = a2 + v15;
      uint64_t v18 = sub_10012C250();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
      *(void *)(a1 + v6[7]) = *(void *)(a2 + v6[7]);
      *(void *)(a1 + v6[8]) = *(void *)(a2 + v6[8]);
      uint64_t v19 = v6[9];
      uint64_t v20 = (char *)(a1 + v19);
      uint64_t v21 = (char *)(a2 + v19);
      uint64_t v22 = (int *)type metadata accessor for AirQualityViewModel();
      if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v21, 1, (uint64_t)v22))
      {
        uint64_t v23 = sub_1000053D8(&qword_10016B428);
        memcpy(v20, v21, *(void *)(*(void *)(v23 - 8) + 64));
      }
      else
      {
        v10((uint64_t)v20, (uint64_t)v21, v9);
        uint64_t v55 = v22[5];
        uint64_t v56 = &v20[v55];
        uint64_t v57 = &v21[v55];
        uint64_t v58 = sub_100129300();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v58 - 8) + 32))(v56, v57, v58);
        *(void *)&v20[v22[6]] = *(void *)&v21[v22[6]];
        uint64_t v59 = v22[7];
        uint64_t v60 = &v20[v59];
        uint64_t v61 = &v21[v59];
        uint64_t v62 = sub_100129B70();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v62 - 8) + 32))(v60, v61, v62);
        uint64_t v63 = v22[8];
        uint64_t v64 = &v20[v63];
        uint64_t v65 = &v21[v63];
        uint64_t v66 = sub_100129C50();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v66 - 8) + 32))(v64, v65, v66);
        _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v20, 0, 1, (uint64_t)v22);
      }
      uint64_t v67 = v6[10];
      uint64_t v68 = (void *)(a1 + v67);
      uint64_t v69 = (const void *)(a2 + v67);
      uint64_t v70 = sub_10012C6B0();
      if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v69, 1, v70))
      {
        uint64_t v71 = sub_1000053D8(&qword_10016B430);
        memcpy(v68, v69, *(void *)(*(void *)(v71 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v70 - 8) + 32))(v68, v69, v70);
        _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v68, 0, 1, v70);
      }
      *(void *)(a1 + v6[11]) = *(void *)(a2 + v6[11]);
      uint64_t v72 = v6[12];
      uint64_t v73 = a1 + v72;
      uint64_t v74 = a2 + v72;
      *(void *)uint64_t v73 = *(void *)v74;
      *(_WORD *)(v73 + 8) = *(_WORD *)(v74 + 8);
      uint64_t v75 = v6[13];
      uint64_t v76 = (void *)(a1 + v75);
      uint64_t v77 = (const void *)(a2 + v75);
      uint64_t v78 = sub_100129220();
      if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v77, 1, v78))
      {
        uint64_t v79 = sub_1000053D8(&qword_10016B420);
        memcpy(v76, v77, *(void *)(*(void *)(v79 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v78 - 8) + 32))(v76, v77, v78);
        _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v76, 0, 1, v78);
      }
      uint64_t v80 = v6[14];
      uint64_t v81 = (void *)(a1 + v80);
      uint64_t v82 = (const void *)(a2 + v80);
      uint64_t v83 = type metadata accessor for AggregateWeatherViewModel.SunEvent(0);
      if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v82, 1, v83))
      {
        uint64_t v84 = sub_1000053D8(&qword_10016B438);
        memcpy(v81, v82, *(void *)(*(void *)(v84 - 8) + 64));
      }
      else
      {
        swift_getEnumCaseMultiPayload();
        uint64_t v85 = sub_100129300();
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v85 - 8) + 32))(v81, v82, v85);
        swift_storeEnumTagMultiPayload();
        _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v81, 0, 1, v83);
      }
      uint64_t v86 = a1;
      uint64_t v87 = 2;
      uint64_t v88 = (uint64_t)v6;
      goto LABEL_23;
    }
    goto LABEL_7;
  }
  if (v8)
  {
    sub_10005EFC0(a1, (void (*)(void))type metadata accessor for AggregateWeatherViewModel);
LABEL_7:
    size_t v24 = *(void *)(*(void *)(a3 - 8) + 64);
    uint64_t v25 = (void *)a1;
    uint64_t v26 = (const void *)a2;
LABEL_8:
    memcpy(v25, v26, v24);
    return a1;
  }
  uint64_t v27 = sub_100129330();
  uint64_t v130 = *(void *)(v27 - 8);
  uint64_t v28 = *(void (**)(uint64_t, uint64_t, uint64_t))(v130 + 40);
  v28(a1, a2, v27);
  uint64_t v29 = v6[5];
  uint64_t v30 = a1 + v29;
  uint64_t v31 = a2 + v29;
  uint64_t v32 = sub_10012A6B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 40))(v30, v31, v32);
  uint64_t v33 = v6[6];
  uint64_t v34 = a1 + v33;
  uint64_t v35 = a2 + v33;
  uint64_t v36 = sub_10012C250();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 40))(v34, v35, v36);
  *(void *)(a1 + v6[7]) = *(void *)(a2 + v6[7]);
  swift_bridgeObjectRelease();
  *(void *)(a1 + v6[8]) = *(void *)(a2 + v6[8]);
  swift_bridgeObjectRelease();
  uint64_t v37 = v6[9];
  uint64_t v38 = (char *)(a1 + v37);
  uint64_t v39 = (char *)(a2 + v37);
  uint64_t v40 = (int *)type metadata accessor for AirQualityViewModel();
  int v41 = _s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v38, 1, (uint64_t)v40);
  int v42 = _s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v39, 1, (uint64_t)v40);
  if (v41)
  {
    if (!v42)
    {
      (*(void (**)(char *, char *, uint64_t))(v130 + 32))(v38, v39, v27);
      uint64_t v43 = v40[5];
      uint64_t v44 = &v38[v43];
      uint64_t v45 = &v39[v43];
      uint64_t v46 = sub_100129300();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v46 - 8) + 32))(v44, v45, v46);
      *(void *)&v38[v40[6]] = *(void *)&v39[v40[6]];
      uint64_t v47 = v40[7];
      uint64_t v48 = &v38[v47];
      uint64_t v49 = &v39[v47];
      uint64_t v50 = sub_100129B70();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v50 - 8) + 32))(v48, v49, v50);
      uint64_t v51 = v40[8];
      uint64_t v52 = &v38[v51];
      uint64_t v53 = &v39[v51];
      uint64_t v54 = sub_100129C50();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v54 - 8) + 32))(v52, v53, v54);
      _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v38, 0, 1, (uint64_t)v40);
      goto LABEL_28;
    }
    goto LABEL_27;
  }
  if (v42)
  {
    sub_10005EFC0((uint64_t)v38, (void (*)(void))type metadata accessor for AirQualityViewModel);
LABEL_27:
    uint64_t v90 = sub_1000053D8(&qword_10016B428);
    memcpy(v38, v39, *(void *)(*(void *)(v90 - 8) + 64));
    goto LABEL_28;
  }
  v28((uint64_t)v38, (uint64_t)v39, v27);
  uint64_t v117 = v40[5];
  uint64_t v118 = &v38[v117];
  uint64_t v119 = &v39[v117];
  uint64_t v120 = sub_100129300();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v120 - 8) + 40))(v118, v119, v120);
  *(void *)&v38[v40[6]] = *(void *)&v39[v40[6]];
  uint64_t v121 = v40[7];
  uint64_t v122 = &v38[v121];
  uint64_t v123 = &v39[v121];
  uint64_t v124 = sub_100129B70();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v124 - 8) + 40))(v122, v123, v124);
  uint64_t v125 = v40[8];
  uint64_t v126 = &v38[v125];
  uint64_t v127 = &v39[v125];
  uint64_t v128 = sub_100129C50();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v128 - 8) + 40))(v126, v127, v128);
LABEL_28:
  uint64_t v91 = v6[10];
  uint64_t v92 = (void *)(a1 + v91);
  uint64_t v93 = (const void *)(a2 + v91);
  uint64_t v94 = sub_10012C6B0();
  int v95 = _s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v92, 1, v94);
  int v96 = _s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v93, 1, v94);
  if (v95)
  {
    if (!v96)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v94 - 8) + 32))(v92, v93, v94);
      _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v92, 0, 1, v94);
      goto LABEL_34;
    }
    goto LABEL_33;
  }
  uint64_t v97 = *(void *)(v94 - 8);
  if (v96)
  {
    (*(void (**)(void *, uint64_t))(v97 + 8))(v92, v94);
LABEL_33:
    uint64_t v98 = sub_1000053D8(&qword_10016B430);
    memcpy(v92, v93, *(void *)(*(void *)(v98 - 8) + 64));
    goto LABEL_34;
  }
  (*(void (**)(void *, const void *, uint64_t))(v97 + 40))(v92, v93, v94);
LABEL_34:
  *(void *)(a1 + v6[11]) = *(void *)(a2 + v6[11]);
  swift_bridgeObjectRelease();
  uint64_t v99 = v6[12];
  uint64_t v100 = a1 + v99;
  uint64_t v101 = a2 + v99;
  *(void *)uint64_t v100 = *(void *)v101;
  *(_WORD *)(v100 + 8) = *(_WORD *)(v101 + 8);
  uint64_t v102 = v6[13];
  uint64_t v103 = (void *)(a1 + v102);
  uint64_t v104 = (const void *)(a2 + v102);
  uint64_t v105 = sub_100129220();
  int v106 = _s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v103, 1, v105);
  int v107 = _s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v104, 1, v105);
  if (v106)
  {
    if (!v107)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v105 - 8) + 32))(v103, v104, v105);
      _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v103, 0, 1, v105);
      goto LABEL_40;
    }
    goto LABEL_39;
  }
  uint64_t v108 = *(void *)(v105 - 8);
  if (v107)
  {
    (*(void (**)(void *, uint64_t))(v108 + 8))(v103, v105);
LABEL_39:
    uint64_t v109 = sub_1000053D8(&qword_10016B420);
    memcpy(v103, v104, *(void *)(*(void *)(v109 - 8) + 64));
    goto LABEL_40;
  }
  (*(void (**)(void *, const void *, uint64_t))(v108 + 40))(v103, v104, v105);
LABEL_40:
  uint64_t v110 = v6[14];
  uint64_t v111 = a1 + v110;
  uint64_t v112 = a2 + v110;
  uint64_t v113 = type metadata accessor for AggregateWeatherViewModel.SunEvent(0);
  int v114 = _s13WeatherWidget20WeatherDataViewModelOwet_0(v111, 1, v113);
  int v115 = _s13WeatherWidget20WeatherDataViewModelOwet_0(v112, 1, v113);
  if (v114)
  {
    if (!v115)
    {
      swift_getEnumCaseMultiPayload();
      uint64_t v116 = sub_100129300();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v116 - 8) + 32))(v111, v112, v116);
      swift_storeEnumTagMultiPayload();
      uint64_t v86 = v111;
      uint64_t v87 = 1;
      uint64_t v88 = v113;
LABEL_23:
      _s13WeatherWidget20WeatherDataViewModelOwst_0(v86, 0, v87, v88);
      return a1;
    }
    goto LABEL_45;
  }
  if (v115)
  {
    sub_10005EFC0(v111, (void (*)(void))type metadata accessor for AggregateWeatherViewModel.SunEvent);
LABEL_45:
    size_t v24 = *(void *)(*(void *)(sub_1000053D8(&qword_10016B438) - 8) + 64);
    uint64_t v25 = (void *)v111;
    uint64_t v26 = (const void *)v112;
    goto LABEL_8;
  }
  if (a1 != a2)
  {
    sub_10005EFC0(v111, (void (*)(void))type metadata accessor for AggregateWeatherViewModel.SunEvent);
    swift_getEnumCaseMultiPayload();
    uint64_t v129 = sub_100129300();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v129 - 8) + 32))(v111, v112, v129);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1000602A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000602BC);
}

uint64_t sub_1000602BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AggregateWeatherViewModel(0);
  unsigned int v5 = _s13WeatherWidget20WeatherDataViewModelOwet_0(a1, a2, v4);
  if (v5 >= 3) {
    return v5 - 2;
  }
  else {
    return 0;
  }
}

uint64_t sub_100060304(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100060318);
}

uint64_t sub_100060318(uint64_t a1, int a2, uint64_t a3)
{
  if (a2) {
    uint64_t v5 = (a2 + 2);
  }
  else {
    uint64_t v5 = 0;
  }
  uint64_t v6 = type metadata accessor for AggregateWeatherViewModel(0);

  return _s13WeatherWidget20WeatherDataViewModelOwst_0(a1, v5, a3, v6);
}

uint64_t sub_100060378(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for AggregateWeatherViewModel(0);

  return _s13WeatherWidget20WeatherDataViewModelOwet_0(a1, 2, v2);
}

uint64_t sub_1000603BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AggregateWeatherViewModel(0);

  return _s13WeatherWidget20WeatherDataViewModelOwst_0(a1, a2, 2, v4);
}

uint64_t type metadata accessor for RainComplicationDataStatus()
{
  uint64_t result = qword_10016CE90;
  if (!qword_10016CE90) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100060450()
{
  uint64_t result = type metadata accessor for AggregateWeatherViewModel(319);
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

uint64_t sub_1000604C8@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v2 = 1;
  switch(a1)
  {
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      sub_10012C910();
      uint64_t v2 = 0;
      break;
    default:
      break;
  }
  uint64_t v4 = sub_10012C920();

  return _s13WeatherWidget20WeatherDataViewModelOwst_0(a2, v2, 1, v4);
}

uint64_t sub_100060574()
{
  return _swift_deallocClassInstance(v0, 16, 7);
}

uint64_t type metadata accessor for RelevanceProvider()
{
  return self;
}

uint64_t sub_1000605A8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v55 = a1;
  sub_100129480();
  sub_10000DB98();
  uint64_t v53 = v3;
  uint64_t v54 = v2;
  __chkstk_darwin(v2);
  sub_10002A5E0();
  uint64_t v52 = v4 - v5;
  __chkstk_darwin(v6);
  uint64_t v50 = (char *)&v48 - v7;
  uint64_t v51 = sub_10012BBB0();
  sub_10000DB98();
  uint64_t v49 = v8;
  __chkstk_darwin(v9);
  sub_10002A5E0();
  uint64_t v12 = v10 - v11;
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v48 - v14;
  type metadata accessor for AggregateWeatherViewModel(0);
  sub_10000B3FC();
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v48 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for WeatherDataViewModel();
  sub_10000B3FC();
  __chkstk_darwin(v19);
  sub_10002A5E0();
  uint64_t v22 = v20 - v21;
  __chkstk_darwin(v23);
  uint64_t v25 = (char *)&v48 - v24;
  type metadata accessor for ForecastEntry.Model(0);
  sub_10000B3FC();
  __chkstk_darwin(v26);
  uint64_t v28 = (unsigned __int8 *)&v48 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = type metadata accessor for ForecastEntry(0);
  sub_100012588(v1 + *(int *)(v29 + 28), (uint64_t)v28, (void (*)(void))type metadata accessor for ForecastEntry.Model);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    int v35 = *v28;
    uint64_t v34 = sub_10012BF40();
    if (!v35)
    {
      uint64_t v36 = v55;
      uint64_t v37 = 2;
      return _s13WeatherWidget20WeatherDataViewModelOwst_0(v36, v37, 2, v34);
    }
    goto LABEL_9;
  }
  sub_1000125E8((uint64_t)v28, (uint64_t)v25, (void (*)(void))type metadata accessor for WeatherDataViewModel);
  sub_100012588((uint64_t)v25, v22, (void (*)(void))type metadata accessor for WeatherDataViewModel);
  if (swift_getEnumCaseMultiPayload())
  {
    sub_100012710(v22, (void (*)(void))type metadata accessor for WeatherDataViewModel);
    if (qword_10016AE28 != -1) {
      swift_once();
    }
    uint64_t v30 = sub_10012AB60();
    sub_10000D7A4(v30, (uint64_t)qword_100181C40);
    uint64_t v31 = sub_10012AB40();
    os_log_type_t v32 = sub_10012CD40();
    if (os_log_type_enabled(v31, v32))
    {
      uint64_t v33 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v33 = 0;
      _os_log_impl((void *)&_mh_execute_header, v31, v32, "Expected aggregate but got instant or sunriseSunset", v33, 2u);
      swift_slowDealloc();
    }

    sub_100012710((uint64_t)v25, (void (*)(void))type metadata accessor for WeatherDataViewModel);
    uint64_t v34 = sub_10012BF40();
LABEL_9:
    uint64_t v36 = v55;
    uint64_t v37 = 1;
    return _s13WeatherWidget20WeatherDataViewModelOwst_0(v36, v37, 2, v34);
  }
  sub_1000125E8(v22, (uint64_t)v18, (void (*)(void))type metadata accessor for AggregateWeatherViewModel);
  if (qword_10016AE28 != -1) {
    swift_once();
  }
  uint64_t v38 = sub_10012AB60();
  sub_10000D7A4(v38, (uint64_t)qword_100181C40);
  uint64_t v39 = sub_10012AB40();
  os_log_type_t v40 = sub_10012CD60();
  if (os_log_type_enabled(v39, v40))
  {
    int v41 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)int v41 = 0;
    _os_log_impl((void *)&_mh_execute_header, v39, v40, "Making Sun complication view model entry from aggregate weather", v41, 2u);
    swift_slowDealloc();
  }

  sub_10006423C((uint64_t)v15);
  int v42 = v50;
  sub_10012A6A0();
  uint64_t v43 = v49;
  uint64_t v44 = v51;
  (*(void (**)(uint64_t, char *, uint64_t))(v49 + 16))(v12, v15, v51);
  uint64_t v45 = v53;
  uint64_t v46 = v54;
  (*(void (**)(uint64_t, char *, uint64_t))(v53 + 16))(v52, v42, v54);
  sub_10012BF30();
  (*(void (**)(char *, uint64_t))(v45 + 8))(v42, v46);
  (*(void (**)(char *, uint64_t))(v43 + 8))(v15, v44);
  sub_100012710((uint64_t)v18, (void (*)(void))type metadata accessor for AggregateWeatherViewModel);
  sub_100012710((uint64_t)v25, (void (*)(void))type metadata accessor for WeatherDataViewModel);
  uint64_t v34 = sub_10012BF40();
  uint64_t v36 = v55;
  uint64_t v37 = 0;
  return _s13WeatherWidget20WeatherDataViewModelOwst_0(v36, v37, 2, v34);
}

uint64_t sub_100060B38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100060B4C);
}

uint64_t sub_100060B4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1000053D8(&qword_10016B440);
  sub_10000B3D0();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1;
  }
  else
  {
    uint64_t v8 = type metadata accessor for ForecastEntry(0);
    uint64_t v9 = a1 + *(int *)(a3 + 20);
  }

  return _s13WeatherWidget20WeatherDataViewModelOwet_0(v9, a2, v8);
}

uint64_t sub_100060BCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100060BE0);
}

uint64_t sub_100060BE0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_1000053D8(&qword_10016B440);
  sub_10000B3D0();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = a1;
  }
  else
  {
    uint64_t v10 = type metadata accessor for ForecastEntry(0);
    uint64_t v11 = a1 + *(int *)(a4 + 20);
  }

  return _s13WeatherWidget20WeatherDataViewModelOwst_0(v11, a2, a2, v10);
}

uint64_t type metadata accessor for SunEventsContentView()
{
  uint64_t result = qword_10016CF90;
  if (!qword_10016CF90) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100060CB0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100060CCC@<X0>(uint64_t a1@<X8>)
{
  return sub_100060CD4(v1, a1);
}

uint64_t sub_100060CD4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v53 = a2;
  uint64_t v43 = sub_1000053D8(&qword_10016CFC8);
  __chkstk_darwin(v43);
  uint64_t v44 = (char *)&v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = sub_1000053D8(&qword_10016CFD0);
  __chkstk_darwin(v52);
  uint64_t v48 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10012BC10();
  uint64_t v46 = *(void *)(v5 - 8);
  uint64_t v47 = v5;
  __chkstk_darwin(v5);
  uint64_t v45 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = type metadata accessor for SunEventsContentView();
  uint64_t v7 = __chkstk_darwin(v49);
  uint64_t v40 = (uint64_t)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v38 = (uint64_t)&v37 - v9;
  uint64_t v50 = sub_1000053D8(&qword_10016CFD8);
  __chkstk_darwin(v50);
  uint64_t v11 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = sub_1000053D8(&qword_10016CFE0);
  __chkstk_darwin(v41);
  uint64_t v13 = (char *)&v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = sub_1000053D8(&qword_10016CFE8);
  __chkstk_darwin(v51);
  uint64_t v15 = (char *)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_10012BFF0();
  __chkstk_darwin(v16 - 8);
  uint64_t v18 = (char *)&v37 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_10012BE10();
  uint64_t v42 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  uint64_t v21 = (char *)&v37 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_10012C800();
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v37 = (uint64_t)&v37 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  uint64_t v27 = (char *)&v37 - v26;
  sub_10008F554((uint64_t)&v37 - v26);
  uint64_t v39 = v23;
  int v28 = (*(uint64_t (**)(char *, uint64_t))(v23 + 88))(v27, v22);
  if (v28 == enum case for WidgetFamily.accessoryCircular(_:))
  {
    sub_1000605A8((uint64_t)v18);
    sub_10012BE00();
    uint64_t v29 = v42;
    (*(void (**)(char *, char *, uint64_t))(v42 + 16))(v13, v21, v19);
    swift_storeEnumTagMultiPayload();
    sub_1000616F8(&qword_10016D000, (void (*)(uint64_t))&type metadata accessor for SunCircularContentView);
    sub_10012B0E0();
    sub_100016CAC((uint64_t)v15, (uint64_t)v11, &qword_10016CFE8);
    swift_storeEnumTagMultiPayload();
    sub_10006164C();
    sub_100061740();
    sub_10012B0E0();
    sub_100016D10((uint64_t)v15, &qword_10016CFE8);
    return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v21, v19);
  }
  if (v28 == enum case for WidgetFamily.accessoryRectangular(_:))
  {
    sub_1000615E8(a1, v38);
    uint64_t v54 = 0;
    unint64_t v55 = 0xE000000000000000;
    sub_10012CFD0(68);
    v56._countAndFlagsBits = 0xD000000000000022;
    v56._object = (void *)0x8000000100138E20;
    sub_10012CAF0(v56);
    uint64_t v35 = v37;
    sub_10008F554(v37);
    sub_1000616F8(&qword_10016B508, (void (*)(uint64_t))&type metadata accessor for WidgetFamily);
    v57._countAndFlagsBits = sub_10012D1D0();
    sub_10012CAF0(v57);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v35, v22);
    v58._object = (void *)0x8000000100139BF0;
    v58._countAndFlagsBits = 0xD000000000000020;
    sub_10012CAF0(v58);
LABEL_9:
    uint64_t result = sub_10012D070();
    __break(1u);
    return result;
  }
  if (v28 != enum case for WidgetFamily.accessoryInline(_:))
  {
    sub_1000615E8(a1, v40);
    uint64_t v54 = 0;
    unint64_t v55 = 0xE000000000000000;
    sub_10012CFD0(68);
    v59._countAndFlagsBits = 0xD000000000000022;
    v59._object = (void *)0x8000000100138E20;
    sub_10012CAF0(v59);
    uint64_t v36 = v37;
    sub_10008F554(v37);
    sub_1000616F8(&qword_10016B508, (void (*)(uint64_t))&type metadata accessor for WidgetFamily);
    v60._countAndFlagsBits = sub_10012D1D0();
    sub_10012CAF0(v60);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v36, v22);
    v61._object = (void *)0x8000000100139BF0;
    v61._countAndFlagsBits = 0xD000000000000020;
    sub_10012CAF0(v61);
    goto LABEL_9;
  }
  sub_1000605A8((uint64_t)v18);
  uint64_t v31 = v45;
  sub_10012BC00();
  uint64_t v33 = v46;
  uint64_t v32 = v47;
  (*(void (**)(char *, char *, uint64_t))(v46 + 16))(v44, v31, v47);
  swift_storeEnumTagMultiPayload();
  sub_1000616F8(&qword_10016CFF0, (void (*)(uint64_t))&type metadata accessor for SunInlineContentView);
  uint64_t v34 = (uint64_t)v48;
  sub_10012B0E0();
  sub_100016CAC(v34, (uint64_t)v11, &qword_10016CFD0);
  swift_storeEnumTagMultiPayload();
  sub_10006164C();
  sub_100061740();
  sub_10012B0E0();
  sub_100016D10(v34, &qword_10016CFD0);
  return (*(uint64_t (**)(char *, uint64_t))(v33 + 8))(v31, v32);
}

uint64_t sub_1000615E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SunEventsContentView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_10006164C()
{
  unint64_t result = qword_10016CFF8;
  if (!qword_10016CFF8)
  {
    sub_100005470(&qword_10016CFE8);
    sub_1000616F8(&qword_10016D000, (void (*)(uint64_t))&type metadata accessor for SunCircularContentView);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016CFF8);
  }
  return result;
}

uint64_t sub_1000616F8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100061740()
{
  unint64_t result = qword_10016D008;
  if (!qword_10016D008)
  {
    sub_100005470(&qword_10016CFD0);
    sub_1000616F8(&qword_10016CFF0, (void (*)(uint64_t))&type metadata accessor for SunInlineContentView);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016D008);
  }
  return result;
}

unint64_t sub_1000617F0()
{
  unint64_t result = qword_10016D010;
  if (!qword_10016D010)
  {
    sub_100005470(&qword_10016D018);
    sub_100061864();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016D010);
  }
  return result;
}

unint64_t sub_100061864()
{
  unint64_t result = qword_10016D020;
  if (!qword_10016D020)
  {
    sub_100005470(&qword_10016D028);
    sub_10006164C();
    sub_100061740();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016D020);
  }
  return result;
}

BOOL sub_1000618E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000053D8(&qword_10016B060);
  uint64_t v54 = *(void *)(v4 - 8);
  uint64_t v55 = v4;
  __chkstk_darwin(v4);
  uint64_t v52 = &v46[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = sub_1000053D8(&qword_10016D110);
  sub_10000B3FC();
  __chkstk_darwin(v7);
  sub_10000DCB4();
  uint64_t v53 = v8;
  sub_1000636C8();
  __chkstk_darwin(v9);
  uint64_t v11 = &v46[-v10];
  uint64_t v12 = sub_1000053D8(&qword_10016B098);
  __chkstk_darwin(v12 - 8);
  sub_10000DCB4();
  uint64_t v49 = v13;
  sub_1000636C8();
  __chkstk_darwin(v14);
  uint64_t v50 = &v46[-v15];
  sub_1000636C8();
  __chkstk_darwin(v16);
  uint64_t v51 = &v46[-v17];
  sub_1000636C8();
  uint64_t v19 = __chkstk_darwin(v18);
  uint64_t v21 = &v46[-v20];
  uint64_t v22 = __chkstk_darwin(v19);
  uint64_t v24 = &v46[-v23];
  __chkstk_darwin(v22);
  uint64_t v26 = &v46[-v25];
  sub_10012C800();
  sub_10006357C();
  sub_10012CB60();
  sub_10012CB60();
  if (v57 != v56) {
    return 0;
  }
  uint64_t v27 = (int *)type metadata accessor for DailyViewAttributes();
  sub_100066B3C();
  if ((v28 & 1) == 0) {
    return 0;
  }
  if (!static ActiveEvent.__derived_struct_equals(_:_:)(*(_WORD *)(a1 + v27[6]), *(_WORD *)(a2 + v27[6]))) {
    return 0;
  }
  sub_1000636B8();
  if (!v30) {
    return 0;
  }
  sub_1000636A8();
  if (!v30) {
    return 0;
  }
  sub_1000636A8();
  if (!v30) {
    return 0;
  }
  sub_1000636A8();
  if (!v30) {
    return 0;
  }
  sub_1000636B8();
  if (!v30) {
    return 0;
  }
  sub_1000636A8();
  if (!v30) {
    return 0;
  }
  sub_1000636A8();
  if (!v30) {
    return 0;
  }
  sub_1000636A8();
  if (!v30) {
    return 0;
  }
  sub_1000636A8();
  if (!v30) {
    return 0;
  }
  sub_1000636B8();
  if (!v30) {
    return 0;
  }
  if ((sub_10012B220() & 1) == 0) {
    return 0;
  }
  if ((sub_10012B220() & 1) == 0) {
    return 0;
  }
  if ((sub_10012B220() & 1) == 0) {
    return 0;
  }
  if ((sub_10012B270() & 1) == 0) {
    return 0;
  }
  sub_1000636B8();
  if (!v30) {
    return 0;
  }
  sub_1000635CC(a1 + v27[22], (uint64_t)v26);
  sub_1000635CC(a2 + v27[22], (uint64_t)v24);
  uint64_t v29 = (uint64_t)&v11[*(int *)(v6 + 48)];
  sub_1000635CC((uint64_t)v26, (uint64_t)v11);
  sub_1000635CC((uint64_t)v24, v29);
  sub_100063688((uint64_t)v11);
  if (v30)
  {
    sub_1000235F8((uint64_t)v24, &qword_10016B098);
    sub_1000235F8((uint64_t)v26, &qword_10016B098);
    sub_100063688(v29);
    if (v30)
    {
      sub_1000235F8((uint64_t)v11, &qword_10016B098);
      goto LABEL_40;
    }
LABEL_38:
    uint64_t v31 = (uint64_t)v11;
LABEL_49:
    sub_1000235F8(v31, &qword_10016D110);
    return 0;
  }
  sub_1000635CC((uint64_t)v11, (uint64_t)v21);
  sub_100063688(v29);
  if (v30)
  {
    sub_1000235F8((uint64_t)v24, &qword_10016B098);
    sub_1000235F8((uint64_t)v26, &qword_10016B098);
    (*(void (**)(unsigned char *, uint64_t))(v54 + 8))(v21, v55);
    goto LABEL_38;
  }
  uint64_t v32 = v55;
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v54 + 32))(v52, v29, v55);
  sub_100063634();
  int v47 = sub_10012C9E0();
  uint64_t v48 = *(void (**)(unsigned char *, uint64_t))(v54 + 8);
  v48(v52, v32);
  sub_1000235F8((uint64_t)v24, &qword_10016B098);
  sub_1000235F8((uint64_t)v26, &qword_10016B098);
  v48(v21, v32);
  sub_1000235F8((uint64_t)v11, &qword_10016B098);
  if ((v47 & 1) == 0) {
    return 0;
  }
LABEL_40:
  uint64_t v33 = v51;
  sub_1000635CC(a1 + v27[23], (uint64_t)v51);
  uint64_t v34 = a2 + v27[23];
  uint64_t v35 = v50;
  sub_1000635CC(v34, (uint64_t)v50);
  uint64_t v36 = v53;
  uint64_t v37 = v53 + *(int *)(v6 + 48);
  sub_1000635CC((uint64_t)v33, v53);
  sub_1000635CC((uint64_t)v35, v37);
  sub_100063688(v36);
  if (v30)
  {
    sub_1000235F8((uint64_t)v50, &qword_10016B098);
    sub_1000235F8((uint64_t)v51, &qword_10016B098);
    sub_100063688(v37);
    if (v30)
    {
      sub_1000235F8(v53, &qword_10016B098);
      return 1;
    }
    goto LABEL_48;
  }
  sub_1000635CC(v53, v49);
  sub_100063688(v37);
  if (v38)
  {
    sub_1000235F8((uint64_t)v50, &qword_10016B098);
    sub_1000235F8((uint64_t)v51, &qword_10016B098);
    (*(void (**)(uint64_t, uint64_t))(v54 + 8))(v49, v55);
LABEL_48:
    uint64_t v31 = v53;
    goto LABEL_49;
  }
  uint64_t v41 = v54;
  uint64_t v40 = v55;
  uint64_t v42 = v52;
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v54 + 32))(v52, v37, v55);
  sub_100063634();
  uint64_t v43 = v49;
  char v44 = sub_10012C9E0();
  uint64_t v45 = *(void (**)(unsigned char *, uint64_t))(v41 + 8);
  v45(v42, v40);
  sub_1000235F8((uint64_t)v50, &qword_10016B098);
  sub_1000235F8((uint64_t)v51, &qword_10016B098);
  v45((unsigned char *)v43, v40);
  sub_1000235F8(v53, &qword_10016B098);
  return (v44 & 1) != 0;
}

uint64_t sub_100061F78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, __int16 a3@<W2>, uint64_t a4@<X3>, char a5@<W4>, char a6@<W5>, char a7@<W6>, uint64_t a8@<X7>, uint64_t a9@<X8>, double a10@<D0>, char a11, char a12, char a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  sub_10012C800();
  sub_10000B3FC();
  (*(void (**)(uint64_t, uint64_t))(v28 + 32))(a9, a1);
  uint64_t v29 = (int *)type metadata accessor for DailyViewAttributes();
  *(void *)(a9 + v29[5]) = a2;
  *(_WORD *)(a9 + v29[6]) = a3;
  *(void *)(a9 + v29[7]) = a4;
  *(unsigned char *)(a9 + v29[8]) = a5;
  *(unsigned char *)(a9 + v29[9]) = a6;
  *(unsigned char *)(a9 + v29[10]) = a7;
  *(void *)(a9 + v29[11]) = a8;
  *(unsigned char *)(a9 + v29[12]) = a11;
  *(unsigned char *)(a9 + v29[13]) = a12;
  *(unsigned char *)(a9 + v29[14]) = a13;
  *(unsigned char *)(a9 + v29[15]) = a14;
  *(void *)(a9 + v29[16]) = a15;
  *(void *)(a9 + v29[17]) = a16;
  *(void *)(a9 + v29[18]) = a17;
  *(void *)(a9 + v29[19]) = a18;
  *(double *)(a9 + v29[20]) = a10;
  *(void *)(a9 + v29[21]) = a19;
  sub_100062190(a20, a9 + v29[22]);
  uint64_t v30 = a9 + v29[23];

  return sub_100062190(a21, v30);
}

uint64_t type metadata accessor for DailyViewAttributes()
{
  uint64_t result = qword_10016D088;
  if (!qword_10016D088) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100062190(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000053D8(&qword_10016B098);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void *sub_1000621F8(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v21 = *a2;
    *a1 = *a2;
    a1 = (void *)(v21 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_10012C800();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[6];
    *(void *)((char *)a1 + a3[5]) = *(void *)((char *)a2 + a3[5]);
    *(_WORD *)((char *)a1 + v8) = *(_WORD *)((char *)a2 + v8);
    uint64_t v9 = a3[8];
    *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
    *((unsigned char *)a1 + v9) = *((unsigned char *)a2 + v9);
    uint64_t v10 = a3[10];
    *((unsigned char *)a1 + a3[9]) = *((unsigned char *)a2 + a3[9]);
    *((unsigned char *)a1 + v10) = *((unsigned char *)a2 + v10);
    uint64_t v11 = a3[12];
    *(void *)((char *)a1 + a3[11]) = *(void *)((char *)a2 + a3[11]);
    *((unsigned char *)a1 + v11) = *((unsigned char *)a2 + v11);
    uint64_t v12 = a3[14];
    *((unsigned char *)a1 + a3[13]) = *((unsigned char *)a2 + a3[13]);
    *((unsigned char *)a1 + v12) = *((unsigned char *)a2 + v12);
    uint64_t v13 = a3[16];
    *((unsigned char *)a1 + a3[15]) = *((unsigned char *)a2 + a3[15]);
    *(void *)((char *)a1 + v13) = *(void *)((char *)a2 + v13);
    uint64_t v14 = a3[18];
    *(void *)((char *)a1 + a3[17]) = *(void *)((char *)a2 + a3[17]);
    *(void *)((char *)a1 + v14) = *(void *)((char *)a2 + v14);
    uint64_t v15 = a3[20];
    *(void *)((char *)a1 + a3[19]) = *(void *)((char *)a2 + a3[19]);
    *(void *)((char *)a1 + v15) = *(void *)((char *)a2 + v15);
    uint64_t v16 = a3[22];
    *(void *)((char *)a1 + a3[21]) = *(void *)((char *)a2 + a3[21]);
    uint64_t v17 = (char *)a1 + v16;
    uint64_t v18 = (char *)a2 + v16;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v19 = sub_1000053D8(&qword_10016B060);
    if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v18, 1, v19))
    {
      uint64_t v20 = sub_1000053D8(&qword_10016B098);
      memcpy(v17, v18, *(void *)(*(void *)(v20 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
      _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v17, 0, 1, v19);
    }
    uint64_t v22 = a3[23];
    uint64_t v23 = (char *)a1 + v22;
    uint64_t v24 = (char *)a2 + v22;
    if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v24, 1, v19))
    {
      uint64_t v25 = sub_1000053D8(&qword_10016B098);
      memcpy(v23, v24, *(void *)(*(void *)(v25 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v23, v24, v19);
      _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v23, 0, 1, v19);
    }
  }
  return a1;
}

uint64_t sub_1000624CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10012C800();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v5 = a1 + *(int *)(a2 + 88);
  uint64_t v6 = sub_1000053D8(&qword_10016B060);
  if (!_s13WeatherWidget20WeatherDataViewModelOwet_0(v5, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  }
  uint64_t v7 = a1 + *(int *)(a2 + 92);
  uint64_t result = _s13WeatherWidget20WeatherDataViewModelOwet_0(v7, 1, v6);
  if (!result)
  {
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
    return v9(v7, v6);
  }
  return result;
}

uint64_t sub_100062624(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_10012C800();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  *(_WORD *)(a1 + v7) = *(_WORD *)(a2 + v7);
  uint64_t v8 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  *(unsigned char *)(a1 + v8) = *(unsigned char *)(a2 + v8);
  uint64_t v9 = a3[10];
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  *(unsigned char *)(a1 + v9) = *(unsigned char *)(a2 + v9);
  uint64_t v10 = a3[12];
  *(void *)(a1 + a3[11]) = *(void *)(a2 + a3[11]);
  *(unsigned char *)(a1 + v10) = *(unsigned char *)(a2 + v10);
  uint64_t v11 = a3[14];
  *(unsigned char *)(a1 + a3[13]) = *(unsigned char *)(a2 + a3[13]);
  *(unsigned char *)(a1 + v11) = *(unsigned char *)(a2 + v11);
  uint64_t v12 = a3[16];
  *(unsigned char *)(a1 + a3[15]) = *(unsigned char *)(a2 + a3[15]);
  *(void *)(a1 + v12) = *(void *)(a2 + v12);
  uint64_t v13 = a3[18];
  *(void *)(a1 + a3[17]) = *(void *)(a2 + a3[17]);
  *(void *)(a1 + v13) = *(void *)(a2 + v13);
  uint64_t v14 = a3[20];
  *(void *)(a1 + a3[19]) = *(void *)(a2 + a3[19]);
  *(void *)(a1 + v14) = *(void *)(a2 + v14);
  uint64_t v15 = a3[22];
  *(void *)(a1 + a3[21]) = *(void *)(a2 + a3[21]);
  uint64_t v16 = (void *)(a1 + v15);
  uint64_t v17 = (const void *)(a2 + v15);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v18 = sub_1000053D8(&qword_10016B060);
  if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v17, 1, v18))
  {
    uint64_t v19 = sub_1000053D8(&qword_10016B098);
    memcpy(v16, v17, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
    _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v16, 0, 1, v18);
  }
  uint64_t v20 = a3[23];
  uint64_t v21 = (void *)(a1 + v20);
  uint64_t v22 = (const void *)(a2 + v20);
  if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v22, 1, v18))
  {
    uint64_t v23 = sub_1000053D8(&qword_10016B098);
    memcpy(v21, v22, *(void *)(*(void *)(v23 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v18 - 8) + 16))(v21, v22, v18);
    _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v21, 0, 1, v18);
  }
  return a1;
}

uint64_t sub_1000628A8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_10012C800();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[6];
  uint64_t v8 = (unsigned char *)(a1 + v7);
  uint64_t v9 = (unsigned char *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  *(unsigned char *)(a1 + a3[10]) = *(unsigned char *)(a2 + a3[10]);
  *(void *)(a1 + a3[11]) = *(void *)(a2 + a3[11]);
  *(unsigned char *)(a1 + a3[12]) = *(unsigned char *)(a2 + a3[12]);
  *(unsigned char *)(a1 + a3[13]) = *(unsigned char *)(a2 + a3[13]);
  *(unsigned char *)(a1 + a3[14]) = *(unsigned char *)(a2 + a3[14]);
  *(unsigned char *)(a1 + a3[15]) = *(unsigned char *)(a2 + a3[15]);
  *(void *)(a1 + a3[16]) = *(void *)(a2 + a3[16]);
  *(void *)(a1 + a3[17]) = *(void *)(a2 + a3[17]);
  swift_retain();
  swift_release();
  *(void *)(a1 + a3[18]) = *(void *)(a2 + a3[18]);
  swift_retain();
  swift_release();
  *(void *)(a1 + a3[19]) = *(void *)(a2 + a3[19]);
  swift_retain();
  swift_release();
  *(void *)(a1 + a3[20]) = *(void *)(a2 + a3[20]);
  *(void *)(a1 + a3[21]) = *(void *)(a2 + a3[21]);
  uint64_t v10 = a3[22];
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (const void *)(a2 + v10);
  uint64_t v13 = sub_1000053D8(&qword_10016B060);
  int v14 = _s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v11, 1, v13);
  int v15 = _s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v12, 1, v13);
  if (v14)
  {
    if (!v15)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
      _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v11, 0, 1, v13);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v16 = *(void *)(v13 - 8);
  if (v15)
  {
    (*(void (**)(void *, uint64_t))(v16 + 8))(v11, v13);
LABEL_6:
    uint64_t v17 = sub_1000053D8(&qword_10016B098);
    memcpy(v11, v12, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(v16 + 24))(v11, v12, v13);
LABEL_7:
  uint64_t v18 = a3[23];
  uint64_t v19 = (void *)(a1 + v18);
  uint64_t v20 = (const void *)(a2 + v18);
  int v21 = _s13WeatherWidget20WeatherDataViewModelOwet_0(a1 + v18, 1, v13);
  int v22 = _s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v20, 1, v13);
  if (!v21)
  {
    uint64_t v23 = *(void *)(v13 - 8);
    if (!v22)
    {
      (*(void (**)(void *, const void *, uint64_t))(v23 + 24))(v19, v20, v13);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v23 + 8))(v19, v13);
    goto LABEL_12;
  }
  if (v22)
  {
LABEL_12:
    uint64_t v24 = sub_1000053D8(&qword_10016B098);
    memcpy(v19, v20, *(void *)(*(void *)(v24 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(void *)(v13 - 8) + 16))(v19, v20, v13);
  _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v19, 0, 1, v13);
  return a1;
}

uint64_t sub_100062C84(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_10012C800();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  *(_WORD *)(a1 + v7) = *(_WORD *)(a2 + v7);
  uint64_t v8 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  *(unsigned char *)(a1 + v8) = *(unsigned char *)(a2 + v8);
  uint64_t v9 = a3[10];
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  *(unsigned char *)(a1 + v9) = *(unsigned char *)(a2 + v9);
  uint64_t v10 = a3[12];
  *(void *)(a1 + a3[11]) = *(void *)(a2 + a3[11]);
  *(unsigned char *)(a1 + v10) = *(unsigned char *)(a2 + v10);
  uint64_t v11 = a3[14];
  *(unsigned char *)(a1 + a3[13]) = *(unsigned char *)(a2 + a3[13]);
  *(unsigned char *)(a1 + v11) = *(unsigned char *)(a2 + v11);
  uint64_t v12 = a3[16];
  *(unsigned char *)(a1 + a3[15]) = *(unsigned char *)(a2 + a3[15]);
  *(void *)(a1 + v12) = *(void *)(a2 + v12);
  uint64_t v13 = a3[18];
  *(void *)(a1 + a3[17]) = *(void *)(a2 + a3[17]);
  *(void *)(a1 + v13) = *(void *)(a2 + v13);
  uint64_t v14 = a3[20];
  *(void *)(a1 + a3[19]) = *(void *)(a2 + a3[19]);
  *(void *)(a1 + v14) = *(void *)(a2 + v14);
  uint64_t v15 = a3[22];
  *(void *)(a1 + a3[21]) = *(void *)(a2 + a3[21]);
  uint64_t v16 = (void *)(a1 + v15);
  uint64_t v17 = (const void *)(a2 + v15);
  uint64_t v18 = sub_1000053D8(&qword_10016B060);
  if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v17, 1, v18))
  {
    uint64_t v19 = sub_1000053D8(&qword_10016B098);
    memcpy(v16, v17, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
    _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v16, 0, 1, v18);
  }
  uint64_t v20 = a3[23];
  int v21 = (void *)(a1 + v20);
  int v22 = (const void *)(a2 + v20);
  if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v22, 1, v18))
  {
    uint64_t v23 = sub_1000053D8(&qword_10016B098);
    memcpy(v21, v22, *(void *)(*(void *)(v23 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v18 - 8) + 32))(v21, v22, v18);
    _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v21, 0, 1, v18);
  }
  return a1;
}

uint64_t sub_100062EE4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_10012C800();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[7];
  *(_WORD *)(a1 + a3[6]) = *(_WORD *)(a2 + a3[6]);
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  uint64_t v8 = a3[9];
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  *(unsigned char *)(a1 + v8) = *(unsigned char *)(a2 + v8);
  uint64_t v9 = a3[11];
  *(unsigned char *)(a1 + a3[10]) = *(unsigned char *)(a2 + a3[10]);
  *(void *)(a1 + v9) = *(void *)(a2 + v9);
  uint64_t v10 = a3[13];
  *(unsigned char *)(a1 + a3[12]) = *(unsigned char *)(a2 + a3[12]);
  *(unsigned char *)(a1 + v10) = *(unsigned char *)(a2 + v10);
  uint64_t v11 = a3[15];
  *(unsigned char *)(a1 + a3[14]) = *(unsigned char *)(a2 + a3[14]);
  *(unsigned char *)(a1 + v11) = *(unsigned char *)(a2 + v11);
  uint64_t v12 = a3[17];
  *(void *)(a1 + a3[16]) = *(void *)(a2 + a3[16]);
  *(void *)(a1 + v12) = *(void *)(a2 + v12);
  swift_release();
  *(void *)(a1 + a3[18]) = *(void *)(a2 + a3[18]);
  swift_release();
  *(void *)(a1 + a3[19]) = *(void *)(a2 + a3[19]);
  swift_release();
  uint64_t v13 = a3[21];
  *(void *)(a1 + a3[20]) = *(void *)(a2 + a3[20]);
  *(void *)(a1 + v13) = *(void *)(a2 + v13);
  uint64_t v14 = a3[22];
  uint64_t v15 = (void *)(a1 + v14);
  uint64_t v16 = (const void *)(a2 + v14);
  uint64_t v17 = sub_1000053D8(&qword_10016B060);
  int v18 = _s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v15, 1, v17);
  int v19 = _s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v16, 1, v17);
  if (v18)
  {
    if (!v19)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v17 - 8) + 32))(v15, v16, v17);
      _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v15, 0, 1, v17);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v20 = *(void *)(v17 - 8);
  if (v19)
  {
    (*(void (**)(void *, uint64_t))(v20 + 8))(v15, v17);
LABEL_6:
    uint64_t v21 = sub_1000053D8(&qword_10016B098);
    memcpy(v15, v16, *(void *)(*(void *)(v21 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(v20 + 40))(v15, v16, v17);
LABEL_7:
  uint64_t v22 = a3[23];
  uint64_t v23 = (void *)(a1 + v22);
  uint64_t v24 = (const void *)(a2 + v22);
  int v25 = _s13WeatherWidget20WeatherDataViewModelOwet_0(a1 + v22, 1, v17);
  int v26 = _s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v24, 1, v17);
  if (!v25)
  {
    uint64_t v27 = *(void *)(v17 - 8);
    if (!v26)
    {
      (*(void (**)(void *, const void *, uint64_t))(v27 + 40))(v23, v24, v17);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v27 + 8))(v23, v17);
    goto LABEL_12;
  }
  if (v26)
  {
LABEL_12:
    uint64_t v28 = sub_1000053D8(&qword_10016B098);
    memcpy(v23, v24, *(void *)(*(void *)(v28 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(void *)(v17 - 8) + 32))(v23, v24, v17);
  _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v23, 0, 1, v17);
  return a1;
}

uint64_t sub_100063274(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100063288);
}

uint64_t sub_100063288(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_10012C800();
  sub_10000B3D0();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1;
LABEL_8:
    return _s13WeatherWidget20WeatherDataViewModelOwet_0(v9, a2, v8);
  }
  if (a2 != 0x7FFFFFFF)
  {
    uint64_t v8 = sub_1000053D8(&qword_10016B098);
    uint64_t v9 = a1 + *(int *)(a3 + 88);
    goto LABEL_8;
  }
  unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
  if (v10 >= 0xFFFFFFFF) {
    LODWORD(v10) = -1;
  }
  return (v10 + 1);
}

uint64_t sub_10006333C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100063350);
}

void sub_100063350(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_10012C800();
  sub_10000B3D0();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = a1;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
      return;
    }
    uint64_t v10 = sub_1000053D8(&qword_10016B098);
    uint64_t v11 = a1 + *(int *)(a4 + 88);
  }

  _s13WeatherWidget20WeatherDataViewModelOwst_0(v11, a2, a2, v10);
}

void sub_100063400()
{
  sub_10012C800();
  if (v0 <= 0x3F)
  {
    sub_10006351C();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_10006351C()
{
  if (!qword_10016D098)
  {
    sub_100005470(&qword_10016B060);
    unint64_t v0 = sub_10012CF40();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10016D098);
    }
  }
}

unint64_t sub_10006357C()
{
  unint64_t result = qword_10016CCC8;
  if (!qword_10016CCC8)
  {
    sub_10012C800();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016CCC8);
  }
  return result;
}

uint64_t sub_1000635CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000053D8(&qword_10016B098);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_100063634()
{
  unint64_t result = qword_10016D118;
  if (!qword_10016D118)
  {
    sub_100005470(&qword_10016B060);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016D118);
  }
  return result;
}

uint64_t sub_100063688(uint64_t a1)
{
  return _s13WeatherWidget20WeatherDataViewModelOwet_0(a1, 1, *(void *)(v1 - 104));
}

uint64_t sub_1000636D4@<X0>(uint64_t a1@<X8>)
{
  sub_100129C50();
  sub_10000DB98();
  __chkstk_darwin(v1);
  sub_10000DBCC();
  sub_100129B70();
  sub_10000DB98();
  __chkstk_darwin(v2);
  sub_10000DBCC();
  sub_100129300();
  sub_10000DB98();
  __chkstk_darwin(v3);
  sub_10000DBCC();
  uint64_t v4 = sub_1001298F0();
  sub_10000DB98();
  uint64_t v6 = v5;
  __chkstk_darwin(v7);
  sub_10000DC50();
  uint64_t v10 = v9 - v8;
  sub_100129330();
  sub_10000DB98();
  __chkstk_darwin(v11);
  sub_10000DC50();
  uint64_t v12 = sub_1000053D8(&qword_10016B558);
  __chkstk_darwin(v12 - 8);
  sub_10000DC50();
  uint64_t v15 = v14 - v13;
  uint64_t v16 = sub_100129A20();
  sub_10000DB98();
  uint64_t v18 = v17;
  __chkstk_darwin(v19);
  sub_10000DC50();
  uint64_t v22 = v21 - v20;
  sub_100129960();
  if (_s13WeatherWidget20WeatherDataViewModelOwet_0(v15, 1, v16) == 1)
  {
    sub_100063A74(v15);
    uint64_t v23 = type metadata accessor for AirQualityViewModel();
    uint64_t v24 = a1;
    uint64_t v25 = 1;
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 32))(v22, v15, v16);
    sub_100129320();
    sub_100129A10();
    sub_1001298E0();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v10, v4);
    uint64_t v26 = sub_1001299F0();
    sub_100129A00();
    sub_1001299E0();
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v22, v16);
    sub_100063AE4();
    v27();
    uint64_t v28 = type metadata accessor for AirQualityViewModel();
    sub_100063AE4();
    v29();
    *(void *)(a1 + *(int *)(v28 + 24)) = v26;
    sub_100063AE4();
    v30();
    sub_100063AE4();
    v31();
    uint64_t v24 = a1;
    uint64_t v25 = 0;
    uint64_t v23 = v28;
  }
  return _s13WeatherWidget20WeatherDataViewModelOwst_0(v24, v25, 1, v23);
}

uint64_t sub_100063A74(uint64_t a1)
{
  uint64_t v2 = sub_1000053D8(&qword_10016B558);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

ValueMetadata *type metadata accessor for AirQualityViewModelFactory()
{
  return &type metadata for AirQualityViewModelFactory;
}

id sub_100063AF0()
{
  id result = [objc_allocWithZone((Class)type metadata accessor for WeatherSettingsState()) init];
  qword_100181BC0 = (uint64_t)result;
  return result;
}

id sub_100063B20()
{
  if (qword_10016ADF0 != -1) {
    swift_once();
  }
  unint64_t v0 = (void *)qword_100181BC0;

  return v0;
}

id sub_100063BD8()
{
  return *(id *)(v0 + OBJC_IVAR____TtC13WeatherWidget20WeatherSettingsState_units);
}

id sub_100063C30()
{
  return sub_100063D10(0x8000000100139D60, 0);
}

void sub_100063CA4()
{
}

id sub_100063CF8()
{
  return sub_100063D10(0x8000000100139D30, 1);
}

id sub_100063D10(uint64_t a1, char a2)
{
  uint64_t v3 = self;
  NSString v4 = sub_10012CA20();
  id v5 = [v3 readBoolFromContainerPreferenceValueForKey:v4 defaultValue:a2 & 1];

  return v5;
}

void sub_100063DE0()
{
}

void sub_100063DEC()
{
  uint64_t v0 = self;
  NSString v1 = sub_10012CA20();
  Class isa = sub_10012CC00().super.super.isa;
  [v0 writePreferenceForKey:v1 value:isa];
}

id sub_100063E80()
{
  ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v2 = OBJC_IVAR____TtC13WeatherWidget20WeatherSettingsState_units;
  id v3 = objc_allocWithZone((Class)type metadata accessor for WeatherSettingsUnits());
  NSString v4 = v0;
  *(void *)&v0[v2] = [v3 init];

  v6.receiver = v4;
  v6.super_class = ObjectType;
  return [super init];
}

uint64_t type metadata accessor for WeatherSettingsState()
{
  return self;
}

void sub_100063F60()
{
}

uint64_t sub_100063F6C(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x6E6F697461636F6CLL;
  }
  else {
    uint64_t v3 = 7890280;
  }
  if (v2) {
    unint64_t v4 = 0xE300000000000000;
  }
  else {
    unint64_t v4 = 0xE800000000000000;
  }
  if (a2) {
    uint64_t v5 = 0x6E6F697461636F6CLL;
  }
  else {
    uint64_t v5 = 7890280;
  }
  if (a2) {
    unint64_t v6 = 0xE800000000000000;
  }
  else {
    unint64_t v6 = 0xE300000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = sub_10012D1F0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_100064008(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x737569736C6563;
  int v3 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v4 = 0x65686E6572686166;
    }
    else {
      uint64_t v4 = 0x7953726F7272696DLL;
    }
    if (v3 == 1) {
      unint64_t v5 = 0xEA00000000007469;
    }
    else {
      unint64_t v5 = 0xEC0000006D657473;
    }
  }
  else
  {
    unint64_t v5 = 0xE700000000000000;
    uint64_t v4 = 0x737569736C6563;
  }
  if (a2)
  {
    if (a2 == 1) {
      uint64_t v2 = 0x65686E6572686166;
    }
    else {
      uint64_t v2 = 0x7953726F7272696DLL;
    }
    if (a2 == 1) {
      unint64_t v6 = 0xEA00000000007469;
    }
    else {
      unint64_t v6 = 0xEC0000006D657473;
    }
  }
  else
  {
    unint64_t v6 = 0xE700000000000000;
  }
  if (v4 == v2 && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = sub_10012D1F0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

BOOL sub_10006412C(uint64_t a1, uint64_t a2)
{
  return a1 == a2;
}

uint64_t sub_100064138@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_1000053D8(&qword_10016D4C8);
  uint64_t v3 = sub_10000DC9C(v2);
  __chkstk_darwin(v3);
  unint64_t v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100064C00();
  uint64_t v6 = sub_10012BDF0();
  sub_10006D2E8((uint64_t)v5, 1, v6);
  if (v7)
  {
    sub_10000D930((uint64_t)v5, &qword_10016D4C8);
    uint64_t v8 = sub_100129A40();
    return _s13WeatherWidget20WeatherDataViewModelOwst_0(a1, 1, 1, v8);
  }
  else
  {
    sub_10012BCC0();
    return (*(uint64_t (**)(char *, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  }
}

uint64_t sub_10006423C@<X0>(uint64_t a1@<X8>)
{
  sub_100129480();
  sub_10000DB98();
  __chkstk_darwin(v3);
  sub_10000DBCC();
  sub_10000DCA8();
  uint64_t v4 = sub_100129300();
  sub_10000DB98();
  uint64_t v6 = v5;
  __chkstk_darwin(v7);
  sub_1000212FC();
  uint64_t v8 = sub_1000053D8(&qword_10016B438);
  uint64_t v9 = sub_10000DC9C(v8);
  __chkstk_darwin(v9);
  sub_10000DC50();
  uint64_t v12 = v11 - v10;
  uint64_t v13 = type metadata accessor for AggregateWeatherViewModel.SunEvent(0);
  sub_10000B3FC();
  __chkstk_darwin(v14);
  sub_10006D4AC();
  __chkstk_darwin(v15);
  sub_10006D5D4();
  uint64_t v16 = type metadata accessor for AggregateWeatherViewModel(0);
  sub_10006CCD8(v1 + *(int *)(v16 + 56), v12, &qword_10016B438);
  sub_10006D2E8(v12, 1, v13);
  if (v17)
  {
    sub_10000D930(v12, &qword_10016B438);
    if (qword_10016ADF8 != -1) {
      swift_once();
    }
    uint64_t v18 = sub_10012C2B0();
    sub_10000D7A4(v18, (uint64_t)qword_10016D150);
    sub_10012A5F0();
    sub_1001292F0();
    sub_10012A6A0();
    sub_10012C290();
    sub_10000B424();
    v19();
    sub_10006D6CC();
    sub_10006D574();
    return v20();
  }
  else
  {
    sub_100069000();
    sub_10006D6FC();
    sub_100069000();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(a1, v2, v4);
    sub_10012BBB0();
    sub_10000B3FC();
    if (EnumCaseMultiPayload == 1) {
      uint64_t v24 = (unsigned int *)&enum case for SunriseSunsetEvent.sunset(_:);
    }
    else {
      uint64_t v24 = (unsigned int *)&enum case for SunriseSunsetEvent.sunrise(_:);
    }
    return (*(uint64_t (**)(uint64_t, void))(v23 + 104))(a1, *v24);
  }
}

uint64_t AggregateWeatherViewModel.id.getter@<X0>(uint64_t a1@<X8>)
{
  sub_100129330();
  sub_10000B3FC();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);

  return v5(a1, v1, v3);
}

uint64_t sub_1000645A0()
{
  uint64_t v0 = sub_10012C2B0();
  sub_10006D284(v0, qword_10016D150);
  sub_10000D7A4(v0, (uint64_t)qword_10016D150);
  return sub_10012C2A0();
}

void sub_1000645EC()
{
  sub_100047278();
  uint64_t v2 = v1;
  uint64_t v49 = sub_1000053D8(&qword_10016B060);
  sub_10000DB98();
  uint64_t v4 = v3;
  __chkstk_darwin(v5);
  uint64_t v48 = (char *)v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000636C8();
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v16 = sub_10006D5E4(v8, v9, v10, v11, v12, v13, v14, v15, v45[0]);
  sub_10000DB98();
  uint64_t v18 = v17;
  __chkstk_darwin(v19);
  sub_10002A5E0();
  uint64_t v22 = v20 - v21;
  __chkstk_darwin(v23);
  uint64_t v24 = sub_1000053D8(&qword_10016D4C8);
  uint64_t v25 = sub_10000DC9C(v24);
  __chkstk_darwin(v25);
  uint64_t v27 = (char *)v45 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = *(void *)(v0 + *(int *)(type metadata accessor for AggregateWeatherViewModel(0) + 32));
  uint64_t v29 = *(void *)(v28 + 16);
  if (!v29)
  {
    sub_10006D6AC();
    goto LABEL_12;
  }
  uint64_t v30 = sub_10006D338();
  v31(v30);
  swift_bridgeObjectRetain();
  if (v29 == 1)
  {
LABEL_9:
    uint64_t v27 = (char *)v45[0];
    sub_100011F6C();
    v40();
    sub_10006D674();
    sub_10006D2E8((uint64_t)v27, 1, v16);
    uint64_t v2 = v45[1];
    if (!v41)
    {
      sub_10012BD90();
      uint64_t v42 = sub_10006D55C();
      v43(v42);
      uint64_t v44 = 0;
LABEL_13:
      _s13WeatherWidget20WeatherDataViewModelOwst_0(v2, v44, 1, v49);
      sub_100047260();
      return;
    }
LABEL_12:
    sub_10000D930((uint64_t)v27, &qword_10016D4C8);
    uint64_t v44 = 1;
    goto LABEL_13;
  }
  v45[4] = v18 + 8;
  v45[5] = v4 + 8;
  v45[2] = v18 + 32;
  v45[3] = v22;
  unint64_t v32 = 1;
  uint64_t v46 = v29;
  uint64_t v47 = v28;
  while (v32 < *(void *)(v28 + 16))
  {
    sub_10006D648();
    v33();
    sub_10012BD90();
    sub_10012BD90();
    sub_10006CD88();
    char v34 = sub_10006D538();
    uint64_t v35 = *(void (**)(void))(v4 + 8);
    sub_10006D3C8();
    v35();
    sub_10006D3C8();
    v35();
    if (v34)
    {
      sub_10000B424();
      v36();
      sub_10006D6E4();
      sub_10006D6D8();
      sub_100063AE4();
      v37();
    }
    else
    {
      uint64_t v38 = sub_10006D740();
      v39(v38);
    }
    ++v32;
    uint64_t v28 = v47;
    if (v46 == v32) {
      goto LABEL_9;
    }
  }
  __break(1u);
}

void sub_1000648F0()
{
  sub_100047278();
  uint64_t v2 = v1;
  uint64_t v50 = sub_1000053D8(&qword_10016B060);
  sub_10000DB98();
  uint64_t v4 = v3;
  __chkstk_darwin(v5);
  uint64_t v49 = (char *)v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000636C8();
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v16 = sub_10006D5E4(v8, v9, v10, v11, v12, v13, v14, v15, v45[0]);
  sub_10000DB98();
  uint64_t v18 = v17;
  __chkstk_darwin(v19);
  sub_10002A5E0();
  uint64_t v22 = v20 - v21;
  __chkstk_darwin(v23);
  uint64_t v24 = sub_1000053D8(&qword_10016D4C8);
  uint64_t v25 = sub_10000DC9C(v24);
  __chkstk_darwin(v25);
  uint64_t v27 = (char *)v45 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = *(void *)(v0 + *(int *)(type metadata accessor for AggregateWeatherViewModel(0) + 32));
  uint64_t v29 = *(void *)(v28 + 16);
  if (!v29)
  {
    sub_10006D6AC();
    goto LABEL_12;
  }
  uint64_t v30 = sub_10006D338();
  v31(v30);
  swift_bridgeObjectRetain();
  if (v29 == 1)
  {
LABEL_9:
    uint64_t v27 = (char *)v45[0];
    sub_100011F6C();
    v40();
    sub_10006D674();
    sub_10006D2E8((uint64_t)v27, 1, v16);
    uint64_t v2 = v45[1];
    if (!v41)
    {
      sub_10012BD70();
      uint64_t v42 = sub_10006D55C();
      v43(v42);
      uint64_t v44 = 0;
LABEL_13:
      _s13WeatherWidget20WeatherDataViewModelOwst_0(v2, v44, 1, v50);
      sub_100047260();
      return;
    }
LABEL_12:
    sub_10000D930((uint64_t)v27, &qword_10016D4C8);
    uint64_t v44 = 1;
    goto LABEL_13;
  }
  v45[4] = v18 + 8;
  uint64_t v46 = (void (**)(void))(v4 + 8);
  v45[2] = v18 + 32;
  v45[3] = v22;
  unint64_t v32 = 1;
  uint64_t v47 = v29;
  uint64_t v48 = v28;
  while (v32 < *(void *)(v28 + 16))
  {
    sub_10006D648();
    v33();
    sub_10012BD70();
    sub_10012BD70();
    sub_10006CD88();
    char v34 = sub_10006D538();
    uint64_t v35 = *v46;
    sub_10006D3C8();
    v35();
    sub_10006D3C8();
    v35();
    if (v34)
    {
      sub_10000B424();
      v36();
      sub_10006D6E4();
      sub_100063AE4();
      v37();
    }
    else
    {
      uint64_t v38 = sub_10006D6FC();
      v39(v38);
    }
    uint64_t v28 = v48;
    if (v47 == ++v32) {
      goto LABEL_9;
    }
  }
  __break(1u);
}

void sub_100064C00()
{
  sub_100047278();
  uint64_t v5 = v4;
  uint64_t v38 = sub_100129300();
  sub_10000DB98();
  uint64_t v36 = v6;
  __chkstk_darwin(v7);
  sub_10006D51C();
  uint64_t v37 = sub_100129450();
  sub_10000DB98();
  uint64_t v33 = v8;
  __chkstk_darwin(v9);
  sub_10000DC50();
  uint64_t v12 = v11 - v10;
  uint64_t v13 = sub_10012BDF0();
  sub_10000DB98();
  uint64_t v15 = v14;
  __chkstk_darwin(v16);
  sub_10002A53C();
  uint64_t v17 = sub_1000053D8(&qword_10016D4C8);
  uint64_t v18 = sub_10000DC9C(v17);
  __chkstk_darwin(v18);
  uint64_t v19 = sub_10006D4E4();
  uint64_t v20 = *(void *)(v0 + *(int *)(type metadata accessor for AggregateWeatherViewModel(v19) + 32));
  uint64_t v21 = *(void *)(v20 + 16);
  if (v21)
  {
    uint64_t v31 = v1;
    uint64_t v32 = v5;
    uint64_t v22 = v20 + ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80));
    uint64_t v23 = (void (**)(uint64_t, uint64_t))(v33 + 8);
    uint64_t v35 = *(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16);
    uint64_t v34 = *(void *)(v15 + 72);
    swift_bridgeObjectRetain();
    while (1)
    {
      v35(v3, v22, v13);
      sub_100129410();
      sub_10012BD80();
      char v24 = sub_1001293C0();
      (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v2, v38);
      (*v23)(v12, v37);
      if (v24) {
        break;
      }
      uint64_t v25 = sub_10006D740();
      v26(v25);
      v22 += v34;
      if (!--v21)
      {
        uint64_t v27 = 1;
        uint64_t v5 = v32;
        uint64_t v1 = v31;
        goto LABEL_8;
      }
    }
    uint64_t v1 = v31;
    sub_10006D6D8();
    sub_100011F6C();
    v28();
    uint64_t v27 = 0;
    uint64_t v5 = v32;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v27 = 1;
  }
LABEL_8:
  _s13WeatherWidget20WeatherDataViewModelOwst_0(v1, v27, 1, v13);
  swift_bridgeObjectRelease();
  sub_10006D2E8(v1, 1, v13);
  if (v29)
  {
    sub_10000D930(v1, &qword_10016D4C8);
    uint64_t v30 = 1;
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 32))(v5, v1, v13);
    uint64_t v30 = 0;
  }
  _s13WeatherWidget20WeatherDataViewModelOwst_0(v5, v30, 1, v13);
  sub_100047260();
}

void sub_100064EE4()
{
  sub_100047278();
  uint64_t v16 = sub_100129300();
  sub_10000DB98();
  uint64_t v3 = v2;
  __chkstk_darwin(v4);
  sub_10006D474();
  __chkstk_darwin(v5);
  uint64_t v6 = sub_10006D72C();
  type metadata accessor for AggregateWeatherViewModel.SunEvent(v6);
  sub_10000B3FC();
  __chkstk_darwin(v7);
  sub_10006D490();
  __chkstk_darwin(v8);
  sub_10006D5C4();
  uint64_t v9 = sub_1000053D8(&qword_10016D4D8);
  uint64_t v10 = sub_10000DC9C(v9);
  __chkstk_darwin(v10);
  sub_10005C778();
  sub_100069578();
  sub_100069578();
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_100069578();
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      sub_100011F6C();
      v13();
      sub_10006D6F0();
      sub_1001292A0();
      uint64_t v14 = *(void (**)(void))(v3 + 8);
      sub_10006D3C8();
      v14();
      ((void (*)(uint64_t, uint64_t))v14)(v1, v16);
      goto LABEL_6;
    }
LABEL_7:
    sub_10006D3C8();
    v15();
    sub_10000D930(v0, &qword_10016D4D8);
    goto LABEL_8;
  }
  sub_100069578();
  if (swift_getEnumCaseMultiPayload() != 1) {
    goto LABEL_7;
  }
  sub_100011F6C();
  v11();
  sub_10006D6CC();
  sub_1001292A0();
  uint64_t v12 = *(void (**)(void))(v3 + 8);
  sub_10006D3C8();
  v12();
  sub_10006D3C8();
  v12();
LABEL_6:
  sub_100068FAC(v0, (void (*)(void))type metadata accessor for AggregateWeatherViewModel.SunEvent);
LABEL_8:
  sub_100047260();
}

uint64_t sub_10006519C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x657369726E7573 && a2 == 0xE700000000000000;
  if (v2 || (sub_10012D1F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7465736E7573 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v7 = sub_10012D1F0();
    swift_bridgeObjectRelease();
    if (v7) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_100065284(char a1)
{
  if (a1) {
    return 0x7465736E7573;
  }
  else {
    return 0x657369726E7573;
  }
}

uint64_t sub_1000652B8(void *a1)
{
  sub_1000053D8(&qword_10016D470);
  sub_10000DB98();
  __chkstk_darwin(v2);
  sub_10000DBCC();
  sub_1000053D8(&qword_10016D478);
  sub_10000DB98();
  __chkstk_darwin(v3);
  sub_10000DBCC();
  sub_10000DCA8();
  sub_100129300();
  sub_10000DB98();
  __chkstk_darwin(v4);
  sub_10000DCB4();
  sub_1000636C8();
  __chkstk_darwin(v5);
  uint64_t v6 = sub_10006D72C();
  type metadata accessor for AggregateWeatherViewModel.SunEvent(v6);
  sub_10000B3FC();
  __chkstk_darwin(v7);
  sub_10002A5F0();
  sub_1000053D8(&qword_10016D480);
  sub_10000DB98();
  __chkstk_darwin(v8);
  sub_1000212FC();
  sub_10000D890(a1, a1[3]);
  sub_10006C74C();
  sub_10012D2C0();
  sub_100069578();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_100011F6C();
    v9();
    sub_10006C798();
    sub_10012D150();
    sub_100068F64(&qword_10016B6E8, (void (*)(uint64_t))&type metadata accessor for Date);
    sub_10012D1B0();
    sub_10006D6F0();
    sub_10000B424();
    v10();
  }
  else
  {
    sub_100011F6C();
    v11();
    sub_10006C7E4();
    sub_10012D150();
    sub_100068F64(&qword_10016B6E8, (void (*)(uint64_t))&type metadata accessor for Date);
    sub_10012D1B0();
    uint64_t v12 = sub_10006D720();
    v13(v12);
  }
  sub_10006D3C8();
  v14();
  sub_10000B424();
  return v15();
}

uint64_t sub_10006567C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v39 = a2;
  sub_1000053D8(&qword_10016D4A0);
  sub_10000DB98();
  uint64_t v42 = v5;
  uint64_t v43 = v6;
  __chkstk_darwin(v5);
  sub_10000DBCC();
  uint64_t v45 = v7;
  sub_1000053D8(&qword_10016D4A8);
  sub_10000DB98();
  uint64_t v40 = v9;
  uint64_t v41 = v8;
  __chkstk_darwin(v8);
  sub_10000DBCC();
  uint64_t v44 = v10;
  sub_1000053D8(&qword_10016D4B0);
  sub_10000DB98();
  uint64_t v46 = v12;
  uint64_t v47 = v11;
  __chkstk_darwin(v11);
  uint64_t v13 = sub_10006D51C();
  uint64_t v14 = type metadata accessor for AggregateWeatherViewModel.SunEvent(v13);
  sub_10000B3FC();
  __chkstk_darwin(v15);
  sub_10006D490();
  uint64_t v17 = __chkstk_darwin(v16);
  uint64_t v19 = (char *)v37 - v18;
  __chkstk_darwin(v17);
  sub_10006D5D4();
  sub_10000D890(a1, a1[3]);
  sub_10006C74C();
  uint64_t v20 = v48;
  sub_10012D2B0();
  if (v20) {
    goto LABEL_8;
  }
  v37[1] = v3;
  v37[2] = v19;
  v37[0] = v2;
  uint64_t v38 = v14;
  uint64_t v48 = a1;
  uint64_t v21 = sub_10012D140();
  uint64_t v22 = *(void *)(v21 + 16);
  if (!v22
    || (char v23 = *(unsigned char *)(v21 + 32),
        sub_1000B0244(1, v22, v21, v21 + 32, 0, (2 * v22) | 1),
        uint64_t v25 = v24,
        unint64_t v27 = v26,
        swift_bridgeObjectRelease(),
        v25 != v27 >> 1))
  {
    uint64_t v28 = v38;
    uint64_t v29 = sub_10012D010();
    swift_allocError();
    uint64_t v31 = v30;
    sub_1000053D8(&qword_10016B730);
    uint64_t *v31 = v28;
    sub_10012D0D0();
    sub_10012D000();
    (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v29 - 8) + 104))(v31, enum case for DecodingError.typeMismatch(_:), v29);
    swift_willThrow();
    swift_unknownObjectRelease();
    sub_10006D3C8();
    v32();
    a1 = v48;
LABEL_8:
    uint64_t v33 = (uint64_t)a1;
    return sub_10000DB48(v33);
  }
  if (v23)
  {
    char v50 = 1;
    sub_10006C798();
    sub_10006D628();
    sub_100129300();
    sub_100068F64(&qword_10016B6C0, (void (*)(uint64_t))&type metadata accessor for Date);
    sub_10012D130();
    sub_10006D74C();
  }
  else
  {
    char v49 = 0;
    sub_10006C7E4();
    sub_10006D628();
    sub_100129300();
    sub_100068F64(&qword_10016B6C0, (void (*)(uint64_t))&type metadata accessor for Date);
    sub_10012D130();
    sub_10006D608();
  }
  sub_10000B424();
  v35();
  swift_unknownObjectRelease();
  sub_10006D3C8();
  v36();
  swift_storeEnumTagMultiPayload();
  sub_100069000();
  sub_100069000();
  uint64_t v33 = (uint64_t)v48;
  return sub_10000DB48(v33);
}

uint64_t sub_100065BEC()
{
  return sub_100065284(*v0);
}

uint64_t sub_100065BF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_10006519C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100065C1C(uint64_t a1)
{
  unint64_t v2 = sub_10006C74C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100065C58(uint64_t a1)
{
  unint64_t v2 = sub_10006C74C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100065C94(uint64_t a1)
{
  unint64_t v2 = sub_10006C7E4();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100065CD0(uint64_t a1)
{
  unint64_t v2 = sub_10006C7E4();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100065D0C(uint64_t a1)
{
  unint64_t v2 = sub_10006C798();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100065D48(uint64_t a1)
{
  unint64_t v2 = sub_10006C798();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100065D84@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10006567C(a1, a2);
}

uint64_t sub_100065D9C(void *a1)
{
  return sub_1000652B8(a1);
}

void static AggregateWeatherViewModel.__derived_struct_equals(_:_:)()
{
  sub_100047278();
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v112 = type metadata accessor for AggregateWeatherViewModel.SunEvent(0);
  sub_10000B3FC();
  __chkstk_darwin(v8);
  sub_10000DBCC();
  uint64_t v110 = v9;
  uint64_t v111 = sub_1000053D8(&qword_10016D168);
  sub_10000B3FC();
  __chkstk_darwin(v10);
  uint64_t v113 = (char *)&v107 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1000053D8(&qword_10016B438);
  uint64_t v13 = sub_10000DC9C(v12);
  __chkstk_darwin(v13);
  sub_10000DCB4();
  uint64_t v116 = v14;
  sub_1000636C8();
  __chkstk_darwin(v15);
  uint64_t v124 = (char *)&v107 - v16;
  sub_1000636C8();
  __chkstk_darwin(v17);
  uint64_t v119 = (char *)&v107 - v18;
  sub_10000DCA8();
  uint64_t v118 = sub_100129220();
  sub_10000DB98();
  uint64_t v114 = v19;
  __chkstk_darwin(v20);
  sub_10006D4C8(v21, v107);
  uint64_t v117 = sub_1000053D8(&qword_10016D170);
  sub_10000B3FC();
  __chkstk_darwin(v22);
  sub_10000DBCC();
  uint64_t v120 = v23;
  uint64_t v24 = sub_1000053D8(&qword_10016B420);
  uint64_t v25 = sub_10000DC9C(v24);
  __chkstk_darwin(v25);
  sub_10000DCB4();
  uint64_t v115 = v26;
  sub_1000636C8();
  __chkstk_darwin(v27);
  uint64_t v130 = (uint64_t)&v107 - v28;
  sub_1000636C8();
  __chkstk_darwin(v29);
  uint64_t v125 = (uint64_t)&v107 - v30;
  sub_10000DCA8();
  uint64_t v31 = sub_10012C6B0();
  sub_10000DB98();
  uint64_t v123 = v32;
  __chkstk_darwin(v33);
  sub_10000DBCC();
  uint64_t v121 = v34;
  uint64_t v126 = sub_1000053D8(&qword_10016D178);
  sub_10000B3FC();
  __chkstk_darwin(v35);
  sub_10000DBCC();
  uint64_t v129 = v36;
  uint64_t v37 = sub_1000053D8(&qword_10016B430);
  uint64_t v38 = sub_10000DC9C(v37);
  __chkstk_darwin(v38);
  sub_10000DCB4();
  uint64_t v122 = v39;
  sub_1000636C8();
  __chkstk_darwin(v40);
  uint64_t v127 = (uint64_t)&v107 - v41;
  sub_1000636C8();
  __chkstk_darwin(v42);
  uint64_t v128 = (uint64_t)&v107 - v43;
  sub_10000DCA8();
  uint64_t v44 = type metadata accessor for AirQualityViewModel();
  sub_10000B3FC();
  __chkstk_darwin(v45);
  sub_10005C778();
  uint64_t v46 = sub_1000053D8(&qword_10016D180);
  sub_10000B3FC();
  __chkstk_darwin(v47);
  sub_10002A53C();
  uint64_t v48 = sub_1000053D8(&qword_10016B428);
  uint64_t v49 = sub_10000DC9C(v48);
  __chkstk_darwin(v49);
  sub_10006D4AC();
  uint64_t v51 = __chkstk_darwin(v50);
  uint64_t v53 = (char *)&v107 - v52;
  __chkstk_darwin(v51);
  sub_10006D5D4();
  if ((sub_100129310() & 1) == 0) {
    goto LABEL_33;
  }
  uint64_t v109 = v31;
  uint64_t v54 = type metadata accessor for AggregateWeatherViewModel(0);
  if ((sub_10012A640() & 1) == 0) {
    goto LABEL_33;
  }
  if ((sub_10012C1E0() & 1) == 0) {
    goto LABEL_33;
  }
  sub_100066FF0();
  if ((v55 & 1) == 0) {
    goto LABEL_33;
  }
  sub_100066FF0();
  if ((v56 & 1) == 0) {
    goto LABEL_33;
  }
  uint64_t v57 = *(int *)(v54 + 36);
  uint64_t v107 = v7;
  sub_10006CCD8(v7 + v57, v0, &qword_10016B428);
  uint64_t v58 = *(int *)(v54 + 36);
  uint64_t v108 = v5;
  sub_10006CCD8(v5 + v58, (uint64_t)v53, &qword_10016B428);
  uint64_t v59 = v3 + *(int *)(v46 + 48);
  sub_10006CCD8(v0, v3, &qword_10016B428);
  sub_10006CCD8((uint64_t)v53, v59, &qword_10016B428);
  sub_10006D2E8(v3, 1, v44);
  Swift::String v60 = (int *)v54;
  if (v73)
  {
    sub_10006D65C();
    sub_10006D708();
    sub_10006D2E8(v59, 1, v44);
    uint64_t v61 = v130;
    uint64_t v62 = v109;
    if (v73)
    {
      sub_10000D930(v3, &qword_10016B428);
      goto LABEL_11;
    }
    goto LABEL_19;
  }
  uint64_t v70 = sub_10006D740();
  sub_10006CCD8(v70, v71, v72);
  sub_10006D2E8(v59, 1, v44);
  uint64_t v61 = v130;
  uint64_t v62 = v109;
  if (v73)
  {
    sub_10006D65C();
    sub_10006D708();
    sub_100068FAC(v2, (void (*)(void))type metadata accessor for AirQualityViewModel);
LABEL_19:
    uint64_t v74 = &qword_10016D180;
    uint64_t v75 = v3;
LABEL_32:
    sub_10000D930(v75, v74);
    goto LABEL_33;
  }
  sub_100069000();
  char v76 = sub_100129310();
  if ((v76 & 1) == 0
    || (sub_1001292A0() & 1) == 0
    || *(void *)(v2 + *(int *)(v44 + 24)) != *(void *)(v1 + *(int *)(v44 + 24))
    || (sub_100129B60() & 1) == 0)
  {
    sub_100068FAC(v1, (void (*)(void))type metadata accessor for AirQualityViewModel);
    sub_10006D65C();
    sub_10006D708();
    sub_100068FAC(v2, (void (*)(void))type metadata accessor for AirQualityViewModel);
    uint64_t v75 = v3;
    uint64_t v74 = &qword_10016B428;
    goto LABEL_32;
  }
  char v77 = sub_100129C40();
  sub_100068FAC(v1, (void (*)(void))type metadata accessor for AirQualityViewModel);
  sub_10006D65C();
  sub_10006D708();
  sub_100068FAC(v2, (void (*)(void))type metadata accessor for AirQualityViewModel);
  sub_10000D930(v3, &qword_10016B428);
  if ((v77 & 1) == 0) {
    goto LABEL_33;
  }
LABEL_11:
  uint64_t v63 = v107;
  uint64_t v64 = v128;
  sub_10006CCD8(v107 + v60[10], v128, &qword_10016B430);
  uint64_t v65 = v108;
  uint64_t v66 = v127;
  sub_10006CCD8(v108 + v60[10], v127, &qword_10016B430);
  uint64_t v67 = (uint64_t)v129;
  sub_10006D760();
  sub_10006CCD8(v66, v0, &qword_10016B430);
  sub_10006D2E8(v67, 1, v62);
  if (v73)
  {
    sub_10000D930(v66, &qword_10016B430);
    sub_10000D930(v64, &qword_10016B430);
    sub_10006D2E8(v0, 1, v62);
    uint64_t v69 = (uint64_t)v124;
    uint64_t v68 = v125;
    if (v73)
    {
      sub_10000D930(v67, &qword_10016B430);
      goto LABEL_35;
    }
LABEL_30:
    uint64_t v74 = &qword_10016D178;
LABEL_31:
    uint64_t v75 = v67;
    goto LABEL_32;
  }
  uint64_t v78 = v122;
  sub_10006CCD8(v67, v122, &qword_10016B430);
  sub_10006D2E8(v0, 1, v62);
  if (v79)
  {
    sub_10000D930(v66, &qword_10016B430);
    sub_10000D930(v64, &qword_10016B430);
    (*(void (**)(uint64_t, uint64_t))(v123 + 8))(v78, v62);
    goto LABEL_30;
  }
  uint64_t v80 = v123;
  sub_10006D5B4();
  sub_100011F6C();
  v81();
  sub_100068F64(&qword_10016D190, (void (*)(uint64_t))&type metadata accessor for NextHourPrecipitationChartViewModel);
  LODWORD(v126) = sub_10012C9E0();
  uint64_t v0 = v67;
  uint64_t v82 = *(void (**)(void))(v80 + 8);
  sub_10006D438();
  v82();
  sub_10000D930(v66, &qword_10016B430);
  sub_10000D930(v64, &qword_10016B430);
  sub_10006D438();
  v82();
  uint64_t v65 = v108;
  uint64_t v69 = (uint64_t)v124;
  sub_10000D930(v0, &qword_10016B430);
  uint64_t v63 = v107;
  uint64_t v68 = v125;
  if ((v126 & 1) == 0) {
    goto LABEL_33;
  }
LABEL_35:
  if ((sub_1000671AC(*(void *)(v63 + v60[11]), *(void *)(v65 + v60[11])) & 1) == 0
    || !sub_1000D01A8(*(void *)(v63 + v60[12]), *(_WORD *)(v63 + v60[12] + 8), *(void *)(v65 + v60[12]), *(_WORD *)(v65 + v60[12] + 8)))
  {
    goto LABEL_33;
  }
  sub_10006CCD8(v63 + v60[13], v68, &qword_10016B420);
  uint64_t v129 = v60;
  sub_10006CCD8(v65 + v60[13], v61, &qword_10016B420);
  uint64_t v83 = v120;
  sub_10006D760();
  uint64_t v84 = v83;
  sub_10006CCD8(v61, v0, &qword_10016B420);
  uint64_t v85 = v83;
  uint64_t v86 = v118;
  sub_10006D2E8(v85, 1, v118);
  if (v73)
  {
    sub_10000D930(v61, &qword_10016B420);
    uint64_t v84 = v120;
    sub_10000D930(v68, &qword_10016B420);
    sub_10006D2E8(v0, 1, v86);
    uint64_t v87 = v116;
    uint64_t v88 = (uint64_t)v119;
    if (v73)
    {
      sub_10000D930(v84, &qword_10016B420);
LABEL_47:
      uint64_t v94 = v129;
      sub_10006CCD8(v63 + v129[14], v88, &qword_10016B438);
      sub_10006CCD8(v65 + v94[14], v69, &qword_10016B438);
      uint64_t v67 = (uint64_t)v113;
      uint64_t v95 = (uint64_t)&v113[*(int *)(v111 + 48)];
      uint64_t v96 = sub_10006D6CC();
      sub_10006CCD8(v96, v97, &qword_10016B438);
      uint64_t v98 = sub_10006D5B4();
      sub_10006CCD8(v98, v99, v100);
      uint64_t v101 = v112;
      sub_10006D2E8(v67, 1, v112);
      if (v73)
      {
        sub_10000D930(v69, &qword_10016B438);
        sub_10000D930(v88, &qword_10016B438);
        sub_10006D2E8(v95, 1, v101);
        if (v73)
        {
          sub_10000D930(v67, &qword_10016B438);
          goto LABEL_33;
        }
      }
      else
      {
        sub_10006CCD8(v67, v87, &qword_10016B438);
        sub_10006D2E8(v95, 1, v101);
        if (!v102)
        {
          uint64_t v103 = v87;
          uint64_t v104 = v110;
          sub_100069000();
          sub_10006D6F0();
          sub_100064EE4();
          sub_100068FAC(v104, (void (*)(void))type metadata accessor for AggregateWeatherViewModel.SunEvent);
          sub_10000D930(v69, &qword_10016B438);
          uint64_t v105 = sub_10006D6CC();
          sub_10000D930(v105, v106);
          sub_100068FAC(v103, (void (*)(void))type metadata accessor for AggregateWeatherViewModel.SunEvent);
          sub_10000D930(v67, &qword_10016B438);
          goto LABEL_33;
        }
        sub_10000D930(v69, &qword_10016B438);
        sub_10000D930(v88, &qword_10016B438);
        sub_100068FAC(v87, (void (*)(void))type metadata accessor for AggregateWeatherViewModel.SunEvent);
      }
      uint64_t v74 = &qword_10016D168;
      goto LABEL_31;
    }
LABEL_45:
    uint64_t v74 = &qword_10016D170;
    uint64_t v75 = v84;
    goto LABEL_32;
  }
  uint64_t v89 = v115;
  sub_10006CCD8(v84, v115, &qword_10016B420);
  sub_10006D2E8(v0, 1, v86);
  uint64_t v88 = (uint64_t)v119;
  if (v90)
  {
    sub_10000D930(v61, &qword_10016B420);
    sub_10000D930(v68, &qword_10016B420);
    (*(void (**)(uint64_t, uint64_t))(v114 + 8))(v89, v86);
    goto LABEL_45;
  }
  uint64_t v91 = v114;
  sub_100011F6C();
  v92();
  sub_100068F64(&qword_10016D188, (void (*)(uint64_t))&type metadata accessor for URL);
  LODWORD(v128) = sub_10012C9E0();
  uint64_t v93 = *(void (**)(void))(v91 + 8);
  uint64_t v87 = v116;
  sub_10006D574();
  v93();
  sub_10000D930(v130, &qword_10016B420);
  sub_10000D930(v125, &qword_10016B420);
  sub_10006D6FC();
  sub_10006D574();
  v93();
  sub_10000D930(v120, &qword_10016B420);
  if (v128) {
    goto LABEL_47;
  }
LABEL_33:
  sub_100047260();
}

void sub_100066B3C()
{
}

void sub_100066B84()
{
  sub_100047278();
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v7 = sub_100129300();
  sub_10000DB98();
  uint64_t v9 = v8;
  __chkstk_darwin(v10);
  sub_1000212E4();
  uint64_t v11 = sub_1000053D8(&qword_10016C7B0);
  uint64_t v12 = sub_10000DC9C(v11);
  __chkstk_darwin(v12);
  sub_1000213D4();
  uint64_t v43 = sub_1000053D8(&qword_10016BB48);
  sub_10000B3FC();
  __chkstk_darwin(v13);
  uint64_t v14 = sub_10006D500();
  uint64_t v42 = type metadata accessor for TemplateDescriptions(v14);
  uint64_t v15 = __chkstk_darwin(v42);
  uint64_t v17 = (void *)((char *)v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v15);
  uint64_t v20 = (void *)((char *)v36 - v19);
  uint64_t v21 = *(void *)(v6 + 16);
  if (v21 == *(void *)(v4 + 16) && v21 && v6 != v4)
  {
    v36[2] = v0;
    unint64_t v22 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
    uint64_t v39 = *(void *)(v18 + 72);
    uint64_t v40 = v6;
    v36[1] = v9 + 32;
    uint64_t v37 = (void (**)(void))(v9 + 8);
    uint64_t v41 = v4;
    while (1)
    {
      sub_100069578();
      sub_100069578();
      BOOL v23 = *v20 == *v17 && v20[1] == v17[1];
      if (!v23 && (sub_10012D1F0() & 1) == 0) {
        break;
      }
      BOOL v24 = v20[2] == v17[2] && v20[3] == v17[3];
      if (!v24 && (sub_10012D1F0() & 1) == 0) {
        break;
      }
      uint64_t v25 = v17[4];
      if (v20[4])
      {
        if (!v25) {
          break;
        }
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_10006C830();
        char v27 = v26;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v27 & 1) == 0) {
          break;
        }
      }
      else if (v25)
      {
        break;
      }
      uint64_t v28 = *(int *)(v42 + 28);
      uint64_t v29 = (uint64_t)v17 + v28;
      uint64_t v30 = v2 + *(int *)(v43 + 48);
      sub_10006CCD8((uint64_t)v20 + v28, v2, &qword_10016C7B0);
      sub_10006CCD8(v29, v30, &qword_10016C7B0);
      sub_10006D2E8(v2, 1, v7);
      if (v23)
      {
        sub_10006D2E8(v30, 1, v7);
        if (!v23) {
          goto LABEL_30;
        }
        sub_10000D930(v2, &qword_10016C7B0);
      }
      else
      {
        sub_10006CCD8(v2, v1, &qword_10016C7B0);
        sub_10006D2E8(v30, 1, v7);
        if (v31)
        {
          uint64_t v34 = sub_10006D6E4();
          v35(v34, v7);
LABEL_30:
          sub_10000D930(v2, &qword_10016BB48);
          break;
        }
        sub_10006D5B4();
        sub_100063AE4();
        v32();
        sub_100068F64(&qword_10016BB58, (void (*)(uint64_t))&type metadata accessor for Date);
        int v38 = sub_10012C9E0();
        uint64_t v33 = *v37;
        sub_10006D574();
        v33();
        sub_10006D574();
        v33();
        sub_10000D930(v2, &qword_10016C7B0);
        if ((v38 & 1) == 0) {
          break;
        }
      }
      sub_100068FAC((uint64_t)v17, (void (*)(void))type metadata accessor for TemplateDescriptions);
      sub_100068FAC((uint64_t)v20, (void (*)(void))type metadata accessor for TemplateDescriptions);
      v22 += v39;
      if (!--v21) {
        goto LABEL_32;
      }
    }
    sub_100068FAC((uint64_t)v17, (void (*)(void))type metadata accessor for TemplateDescriptions);
    sub_100068FAC((uint64_t)v20, (void (*)(void))type metadata accessor for TemplateDescriptions);
  }
LABEL_32:
  sub_100047260();
}

void sub_100066FF0()
{
  sub_100047278();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  uint64_t v10 = v9(0);
  sub_10000DB98();
  __chkstk_darwin(v11);
  sub_10002A5E0();
  __chkstk_darwin(v12);
  sub_10006D5C4();
  uint64_t v15 = *(void *)(v8 + 16);
  if (v15 == *(void *)(v6 + 16) && v15 && v8 != v6)
  {
    unint64_t v16 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
    uint64_t v18 = *(void (**)(uint64_t, unint64_t, uint64_t))(v13 + 16);
    uint64_t v17 = v13 + 16;
    uint64_t v28 = v18;
    uint64_t v29 = v14;
    uint64_t v24 = *(void *)(v17 + 56);
    uint64_t v25 = v6;
    uint64_t v26 = v8;
    char v27 = (void (**)(void))(v17 - 8);
    uint64_t v19 = v15 - 1;
    do
    {
      v28(v0, v8 + v16, v10);
      v28(v29, v6 + v16, v10);
      sub_100068F64(v4, v2);
      sub_10006D720();
      char v20 = sub_10012C9E0();
      uint64_t v21 = *v27;
      sub_10006D438();
      v21();
      sub_10006D438();
      v21();
      BOOL v23 = v19-- != 0;
      if ((v20 & 1) == 0) {
        break;
      }
      v16 += v24;
      uint64_t v6 = v25;
      uint64_t v8 = v26;
    }
    while (v23);
  }
  sub_100047260();
}

uint64_t sub_1000671AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for EventViewModel(0) - 8;
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v7 = (unsigned __int8 *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v10 = (unsigned __int8 *)&v19 - v9;
  uint64_t v11 = *(void *)(a1 + 16);
  if (v11 == *(void *)(a2 + 16))
  {
    if (!v11 || a1 == a2)
    {
      char v15 = 1;
    }
    else
    {
      unint64_t v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
      uint64_t v13 = *(void *)(v8 + 72);
      uint64_t v14 = v11 - 1;
      do
      {
        sub_100069578();
        sub_100069578();
        char v15 = sub_100026668(v10, v7);
        sub_100068FAC((uint64_t)v7, (void (*)(void))type metadata accessor for EventViewModel);
        sub_100068FAC((uint64_t)v10, (void (*)(void))type metadata accessor for EventViewModel);
        BOOL v17 = v14-- != 0;
        if ((v15 & 1) == 0) {
          break;
        }
        v12 += v13;
      }
      while (v17);
    }
  }
  else
  {
    char v15 = 0;
  }
  return v15 & 1;
}

uint64_t sub_10006734C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_10012D1F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x6E6F697461636F6CLL && a2 == 0xE800000000000000;
    if (v6 || (sub_10012D1F0() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0xD000000000000012 && a2 == 0x8000000100139D90 || (sub_10012D1F0() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      BOOL v7 = a1 == 0x6F46796C72756F68 && a2 == 0xEF73747361636572;
      if (v7 || (sub_10012D1F0() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else
      {
        BOOL v8 = a1 == 0x726F46796C696164 && a2 == 0xEE00737473616365;
        if (v8 || (sub_10012D1F0() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 4;
        }
        else
        {
          BOOL v9 = a1 == 0x696C617551726961 && a2 == 0xEA00000000007974;
          if (v9 || (sub_10012D1F0() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 5;
          }
          else if (a1 == 0xD000000000000015 && a2 == 0x8000000100139DB0 || (sub_10012D1F0() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 6;
          }
          else
          {
            BOOL v10 = a1 == 0x73746E657665 && a2 == 0xE600000000000000;
            if (v10 || (sub_10012D1F0() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 7;
            }
            else
            {
              BOOL v11 = a1 == 0x736E654461746164 && a2 == 0xEE00656C62615465;
              if (v11 || (sub_10012D1F0() & 1) != 0)
              {
                swift_bridgeObjectRelease();
                return 8;
              }
              else
              {
                BOOL v12 = a1 == 0x5255656372756F73 && a2 == 0xE90000000000004CLL;
                if (v12 || (sub_10012D1F0() & 1) != 0)
                {
                  swift_bridgeObjectRelease();
                  return 9;
                }
                else if (a1 == 0xD000000000000015 && a2 == 0x8000000100139DD0)
                {
                  swift_bridgeObjectRelease();
                  return 10;
                }
                else
                {
                  char v13 = sub_10012D1F0();
                  swift_bridgeObjectRelease();
                  if (v13) {
                    return 10;
                  }
                  else {
                    return 11;
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

uint64_t sub_1000677F4()
{
  return 11;
}

unint64_t sub_1000677FC(char a1)
{
  unint64_t result = 25705;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6E6F697461636F6CLL;
      break;
    case 2:
      unint64_t result = 0xD000000000000012;
      break;
    case 3:
      unint64_t result = 0x6F46796C72756F68;
      break;
    case 4:
      unint64_t result = 0x726F46796C696164;
      break;
    case 5:
      unint64_t result = 0x696C617551726961;
      break;
    case 6:
    case 10:
      unint64_t result = 0xD000000000000015;
      break;
    case 7:
      unint64_t result = 0x73746E657665;
      break;
    case 8:
      unint64_t result = 0x736E654461746164;
      break;
    case 9:
      unint64_t result = 0x5255656372756F73;
      break;
    default:
      return result;
  }
  return result;
}

Swift::Int sub_100067970()
{
  return sub_100019858(*v0);
}

unint64_t sub_100067978()
{
  return sub_1000677FC(*v0);
}

uint64_t sub_100067980@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_10006734C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1000679A8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1000677F4();
  *a1 = result;
  return result;
}

uint64_t sub_1000679D0(uint64_t a1)
{
  unint64_t v2 = sub_100069054();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100067A0C(uint64_t a1)
{
  unint64_t v2 = sub_100069054();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t AggregateWeatherViewModel.encode(to:)(void *a1)
{
  uint64_t v4 = sub_1000053D8(&qword_10016D198);
  sub_10000DB98();
  uint64_t v6 = v5;
  __chkstk_darwin(v7);
  sub_1000212E4();
  sub_10000D890(a1, a1[3]);
  sub_100069054();
  sub_10012D2C0();
  sub_100129330();
  sub_100068F64(&qword_10016D1A8, (void (*)(uint64_t))&type metadata accessor for UUID);
  sub_10012D1B0();
  if (!v1)
  {
    type metadata accessor for AggregateWeatherViewModel(0);
    sub_10006D468(1);
    sub_10012A6B0();
    sub_100068F64(&qword_10016D1B0, (void (*)(uint64_t))&type metadata accessor for Location);
    sub_10006D40C();
    sub_10006D468(2);
    sub_10012C250();
    sub_100068F64(&qword_10016D1B8, (void (*)(uint64_t))&type metadata accessor for CurrentObservationViewModel);
    sub_10006D40C();
    sub_1000053D8(&qword_10016D1C0);
    sub_1000690A0();
    sub_10006D370();
    sub_1000053D8(&qword_10016D1D8);
    sub_100069144();
    sub_10006D370();
    sub_10006D468(5);
    type metadata accessor for AirQualityViewModel();
    sub_100068F64(&qword_10016D1F0, (void (*)(uint64_t))type metadata accessor for AirQualityViewModel);
    sub_10006D39C();
    sub_10006D468(6);
    sub_10012C6B0();
    sub_100068F64(&qword_10016D1F8, (void (*)(uint64_t))&type metadata accessor for NextHourPrecipitationChartViewModel);
    sub_10006D39C();
    sub_1000053D8(&qword_10016D200);
    sub_1000691E8();
    sub_10006D370();
    sub_10006928C();
    sub_10012D1B0();
    sub_10006D468(9);
    sub_100129220();
    sub_100068F64(&qword_10016D220, (void (*)(uint64_t))&type metadata accessor for URL);
    sub_10006D39C();
    uint64_t v8 = sub_10006D468(10);
    type metadata accessor for AggregateWeatherViewModel.SunEvent(v8);
    sub_100068F64(&qword_10016D228, (void (*)(uint64_t))type metadata accessor for AggregateWeatherViewModel.SunEvent);
    sub_10012D170();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v2, v4);
}

uint64_t AggregateWeatherViewModel.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  v57[1] = a2;
  uint64_t v4 = sub_1000053D8(&qword_10016B438);
  uint64_t v5 = sub_10000DC9C(v4);
  __chkstk_darwin(v5);
  sub_10006D4C8(v6, v57[0]);
  uint64_t v7 = sub_1000053D8(&qword_10016B420);
  uint64_t v8 = sub_10000DC9C(v7);
  __chkstk_darwin(v8);
  sub_10000DBCC();
  uint64_t v58 = v9;
  uint64_t v10 = sub_1000053D8(&qword_10016B430);
  uint64_t v11 = sub_10000DC9C(v10);
  __chkstk_darwin(v11);
  sub_10000DBCC();
  uint64_t v59 = v12;
  uint64_t v13 = sub_1000053D8(&qword_10016B428);
  uint64_t v14 = sub_10000DC9C(v13);
  __chkstk_darwin(v14);
  Swift::String v60 = (char *)v57 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000DCA8();
  uint64_t v66 = sub_10012C250();
  sub_10000DB98();
  uint64_t v64 = v16;
  __chkstk_darwin(v17);
  sub_10000DBCC();
  uint64_t v70 = v18;
  sub_10000DCA8();
  uint64_t v68 = sub_10012A6B0();
  sub_10000DB98();
  uint64_t v65 = v19;
  __chkstk_darwin(v20);
  sub_10006D4E4();
  uint64_t v21 = sub_100129330();
  sub_10000DB98();
  uint64_t v69 = v22;
  __chkstk_darwin(v23);
  sub_10002A5F0();
  uint64_t v67 = sub_1000053D8(&qword_10016D230);
  sub_10000DB98();
  uint64_t v61 = v24;
  __chkstk_darwin(v25);
  uint64_t v26 = sub_10006D500();
  type metadata accessor for AggregateWeatherViewModel(v26);
  sub_10000B3FC();
  __chkstk_darwin(v27);
  sub_10000DC50();
  uint64_t v74 = v28;
  uint64_t v75 = v30 - v29;
  uint64_t v31 = v30 - v29 + v28[14];
  uint64_t v32 = type metadata accessor for AggregateWeatherViewModel.SunEvent(0);
  uint64_t v72 = v31;
  _s13WeatherWidget20WeatherDataViewModelOwst_0(v31, 1, 1, v32);
  uint64_t v33 = a1[3];
  uint64_t v71 = a1;
  sub_10000D890(a1, v33);
  sub_100069054();
  uint64_t v63 = v2;
  uint64_t v34 = v73;
  sub_10012D2B0();
  uint64_t v62 = v21;
  if (v34)
  {
    uint64_t v73 = v34;
    uint64_t v36 = v74;
    uint64_t v35 = v75;
    sub_10000DB48((uint64_t)v71);
    int v37 = 0;
    LODWORD(v70) = 0;
    goto LABEL_5;
  }
  v57[0] = v32;
  LOBYTE(v76) = 0;
  sub_100068F64(&qword_10016D238, (void (*)(uint64_t))&type metadata accessor for UUID);
  sub_10006D3D4();
  sub_10012D130();
  uint64_t v42 = v75;
  sub_10006D6FC();
  sub_100011F6C();
  v43();
  LOBYTE(v76) = 1;
  sub_100068F64(&qword_10016D240, (void (*)(uint64_t))&type metadata accessor for Location);
  sub_10006D3D4();
  sub_10012D130();
  uint64_t v44 = v74;
  sub_100011F6C();
  v45();
  LOBYTE(v76) = 2;
  sub_100068F64(&qword_10016D248, (void (*)(uint64_t))&type metadata accessor for CurrentObservationViewModel);
  sub_10006D3D4();
  sub_10012D130();
  sub_100011F6C();
  v46();
  sub_1000053D8(&qword_10016D1C0);
  char v78 = 3;
  sub_1000692D8();
  sub_10006D3E0();
  *(void *)(v42 + v44[7]) = v76;
  sub_1000053D8(&qword_10016D1D8);
  char v78 = 4;
  sub_10006937C();
  sub_10006D3E0();
  *(void *)(v42 + v44[8]) = v76;
  type metadata accessor for AirQualityViewModel();
  LOBYTE(v76) = 5;
  sub_100068F64(&qword_10016D270, (void (*)(uint64_t))type metadata accessor for AirQualityViewModel);
  sub_10006D3D4();
  uint64_t v47 = (uint64_t)v60;
  sub_10006D590();
  sub_10006CD30(v47, v42 + v44[9], &qword_10016B428);
  sub_10012C6B0();
  LOBYTE(v76) = 6;
  sub_100068F64(&qword_10016D278, (void (*)(uint64_t))&type metadata accessor for NextHourPrecipitationChartViewModel);
  sub_10006D3D4();
  uint64_t v48 = v59;
  sub_10006D590();
  sub_10006CD30(v48, v42 + v44[10], &qword_10016B430);
  sub_1000053D8(&qword_10016D200);
  char v78 = 7;
  sub_100069420();
  sub_10012D130();
  LODWORD(v70) = 1;
  *(void *)(v42 + v44[11]) = v76;
  char v78 = 8;
  sub_1000694C4();
  sub_10012D130();
  __int16 v49 = v77;
  uint64_t v50 = v42 + v44[12];
  *(void *)uint64_t v50 = v76;
  *(_WORD *)(v50 + 8) = v49;
  sub_100129220();
  LOBYTE(v76) = 9;
  sub_100068F64(&qword_10016D298, (void (*)(uint64_t))&type metadata accessor for URL);
  sub_10006D3D4();
  sub_10012D0F0();
  uint64_t v73 = 0;
  sub_10006CD30(v58, v75 + v74[13], &qword_10016B420);
  LOBYTE(v76) = 10;
  sub_100068F64(&qword_10016D2A0, (void (*)(uint64_t))type metadata accessor for AggregateWeatherViewModel.SunEvent);
  sub_10006D3D4();
  uint64_t v51 = v73;
  sub_10012D0F0();
  uint64_t v73 = v51;
  if (v51)
  {
    uint64_t v52 = sub_10006D31C();
    v53(v52);
    int v37 = 1;
    uint64_t v36 = v74;
    uint64_t v35 = v75;
    sub_10000DB48((uint64_t)v71);
    sub_10000B424();
    v40();
    sub_10000B424();
    v41();
    sub_10000B424();
    v38();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_10000D930(v35 + v36[9], &qword_10016B428);
    sub_10000D930(v35 + v36[10], &qword_10016B430);
    if (v70)
    {
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
LABEL_5:
    if (!v37) {
      return sub_10000D930(v72, &qword_10016B438);
    }
LABEL_6:
    sub_10000D930(v35 + v36[13], &qword_10016B420);
    return sub_10000D930(v72, &qword_10016B438);
  }
  uint64_t v54 = sub_10006D31C();
  v55(v54);
  sub_100069510(v57[2], v72);
  uint64_t v56 = v75;
  sub_100069578();
  sub_10000DB48((uint64_t)v71);
  return sub_100068FAC(v56, (void (*)(void))type metadata accessor for AggregateWeatherViewModel);
}

uint64_t sub_1000688E0@<X0>(uint64_t a1@<X3>, uint64_t a2@<X4>, uint64_t a3@<X5>, uint64_t a4@<X6>, uint64_t a5@<X7>, uint64_t a6@<X8>, uint64_t a7, __int16 a8, uint64_t a9, uint64_t a10)
{
  sub_100129330();
  sub_10000B3FC();
  sub_100063AE4();
  v14();
  uint64_t v15 = (int *)type metadata accessor for AggregateWeatherViewModel(0);
  sub_10012A6B0();
  sub_10000B3FC();
  sub_100063AE4();
  v16();
  sub_10012C250();
  sub_10000B3FC();
  sub_100063AE4();
  v17();
  *(void *)(a6 + v15[7]) = a1;
  *(void *)(a6 + v15[8]) = a2;
  sub_10006CD30(a3, a6 + v15[9], &qword_10016B428);
  sub_10006CD30(a4, a6 + v15[10], &qword_10016B430);
  *(void *)(a6 + v15[11]) = a5;
  uint64_t v18 = a6 + v15[12];
  *(void *)uint64_t v18 = a7;
  *(_WORD *)(v18 + 8) = a8;
  sub_10006CD30(a9, a6 + v15[13], &qword_10016B420);
  return sub_10006CD30(a10, a6 + v15[14], &qword_10016B438);
}

uint64_t InstantWeatherViewModel.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100129330();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t sub_100068B7C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return AggregateWeatherViewModel.init(from:)(a1, a2);
}

uint64_t sub_100068B94(void *a1)
{
  return AggregateWeatherViewModel.encode(to:)(a1);
}

void AggregateWeatherViewModel.nextHourPrecipitationShift(startDate:timeZone:)()
{
  sub_100047278();
  uint64_t v5 = v4;
  uint64_t v6 = type metadata accessor for EventViewModel(0);
  sub_10000DB98();
  uint64_t v34 = v7;
  __chkstk_darwin(v8);
  sub_1000213D4();
  uint64_t v9 = sub_1000053D8(&qword_10016D2A8);
  uint64_t v10 = sub_10000DC9C(v9);
  __chkstk_darwin(v10);
  sub_10006D474();
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v33 - v12;
  uint64_t v14 = sub_1000053D8(&qword_10016B430);
  uint64_t v15 = sub_10000DC9C(v14);
  __chkstk_darwin(v15);
  sub_10002A53C();
  uint64_t v16 = type metadata accessor for AggregateWeatherViewModel(0);
  sub_10006D6D8();
  sub_10006CCD8(v17, v18, v19);
  uint64_t v20 = sub_10012C6B0();
  int v21 = _s13WeatherWidget20WeatherDataViewModelOwet_0(v3, 1, v20);
  uint64_t v22 = sub_10006D740();
  sub_10000D930(v22, v23);
  if (v21 == 1)
  {
    uint64_t v24 = sub_100129C10();
    uint64_t v25 = v5;
LABEL_14:
    _s13WeatherWidget20WeatherDataViewModelOwst_0(v25, 1, 1, v24);
    goto LABEL_15;
  }
  uint64_t v26 = v5;
  uint64_t v27 = *(void *)(v0 + *(int *)(v16 + 44));
  uint64_t v28 = *(void *)(v27 + 16);
  if (v28)
  {
    uint64_t v29 = v27 + ((*(unsigned __int8 *)(v34 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80));
    uint64_t v30 = *(void *)(v34 + 72);
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_10006D720();
      sub_100069578();
      if (*v2 == 6) {
        break;
      }
      sub_100068FAC((uint64_t)v2, (void (*)(void))type metadata accessor for EventViewModel);
      v29 += v30;
      if (!--v28) {
        goto LABEL_9;
      }
    }
    sub_10006D6F0();
    sub_100069000();
    uint64_t v31 = 0;
  }
  else
  {
    swift_bridgeObjectRetain();
LABEL_9:
    uint64_t v31 = 1;
  }
  _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v13, v31, 1, v6);
  swift_bridgeObjectRelease();
  sub_10006CD30((uint64_t)v13, v1, &qword_10016D2A8);
  sub_10006D2E8(v1, 1, v6);
  if (v32)
  {
    sub_10000D930(v1, &qword_10016D2A8);
    uint64_t v24 = sub_100129C10();
    uint64_t v25 = v26;
    goto LABEL_14;
  }
  sub_10006CCD8(v1 + *(int *)(v6 + 52), v26, &qword_10016B9F8);
  sub_100068FAC(v1, (void (*)(void))type metadata accessor for EventViewModel);
LABEL_15:
  sub_100047260();
}

uint64_t AggregateWeatherViewModel.hourlyPrecipitationForecast.getter()
{
  type metadata accessor for AggregateWeatherViewModel(0);

  return swift_bridgeObjectRetain();
}

uint64_t AggregateWeatherViewModel.dailyPrecipitationForecast.getter()
{
  type metadata accessor for AggregateWeatherViewModel(0);

  return swift_bridgeObjectRetain();
}

uint64_t sub_100068ED4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = AggregateWeatherViewModel.hourlyPrecipitationForecast.getter();
  *a1 = result;
  return result;
}

uint64_t sub_100068EFC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = AggregateWeatherViewModel.dailyPrecipitationForecast.getter();
  *a1 = result;
  return result;
}

uint64_t type metadata accessor for AggregateWeatherViewModel.SunEvent(uint64_t a1)
{
  return sub_10001A270(a1, qword_10016D420);
}

uint64_t type metadata accessor for AggregateWeatherViewModel(uint64_t a1)
{
  return sub_10001A270(a1, (uint64_t *)&unk_10016D330);
}

uint64_t sub_100068F64(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100068FAC(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_10000B3FC();
  sub_10000B424();
  v3();
  return a1;
}

uint64_t sub_100069000()
{
  uint64_t v1 = sub_10006D580();
  v2(v1);
  sub_10000B3FC();
  sub_100063AE4();
  v3();
  return v0;
}

unint64_t sub_100069054()
{
  unint64_t result = qword_10016D1A0;
  if (!qword_10016D1A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016D1A0);
  }
  return result;
}

unint64_t sub_1000690A0()
{
  unint64_t result = qword_10016D1C8;
  if (!qword_10016D1C8)
  {
    sub_100005470(&qword_10016D1C0);
    sub_100068F64(&qword_10016D1D0, (void (*)(uint64_t))&type metadata accessor for HourlyForecastBannerViewModel);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016D1C8);
  }
  return result;
}

unint64_t sub_100069144()
{
  unint64_t result = qword_10016D1E0;
  if (!qword_10016D1E0)
  {
    sub_100005470(&qword_10016D1D8);
    sub_100068F64(&qword_10016D1E8, (void (*)(uint64_t))&type metadata accessor for DailyForecastViewModel);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016D1E0);
  }
  return result;
}

unint64_t sub_1000691E8()
{
  unint64_t result = qword_10016D208;
  if (!qword_10016D208)
  {
    sub_100005470(&qword_10016D200);
    sub_100068F64(&qword_10016D210, (void (*)(uint64_t))type metadata accessor for EventViewModel);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016D208);
  }
  return result;
}

unint64_t sub_10006928C()
{
  unint64_t result = qword_10016D218;
  if (!qword_10016D218)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016D218);
  }
  return result;
}

unint64_t sub_1000692D8()
{
  unint64_t result = qword_10016D250;
  if (!qword_10016D250)
  {
    sub_100005470(&qword_10016D1C0);
    sub_100068F64(&qword_10016D258, (void (*)(uint64_t))&type metadata accessor for HourlyForecastBannerViewModel);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016D250);
  }
  return result;
}

unint64_t sub_10006937C()
{
  unint64_t result = qword_10016D260;
  if (!qword_10016D260)
  {
    sub_100005470(&qword_10016D1D8);
    sub_100068F64(&qword_10016D268, (void (*)(uint64_t))&type metadata accessor for DailyForecastViewModel);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016D260);
  }
  return result;
}

unint64_t sub_100069420()
{
  unint64_t result = qword_10016D280;
  if (!qword_10016D280)
  {
    sub_100005470(&qword_10016D200);
    sub_100068F64(&qword_10016D288, (void (*)(uint64_t))type metadata accessor for EventViewModel);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016D280);
  }
  return result;
}

unint64_t sub_1000694C4()
{
  unint64_t result = qword_10016D290;
  if (!qword_10016D290)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016D290);
  }
  return result;
}

uint64_t sub_100069510(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000053D8(&qword_10016B438);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_100069578()
{
  uint64_t v1 = sub_10006D580();
  v2(v1);
  sub_10000B3FC();
  sub_10006D61C();
  v3();
  return v0;
}

uint64_t sub_1000695CC()
{
  return sub_100068F64(&qword_10016D2B0, (void (*)(uint64_t))&type metadata accessor for UUID);
}

uint64_t sub_100069614()
{
  return sub_1000696F4(&qword_10016D2B8, &qword_10016D1D8);
}

uint64_t sub_10006963C()
{
  return sub_100068F64(&qword_10016D2C0, (void (*)(uint64_t))&type metadata accessor for DailyForecastViewModel);
}

uint64_t sub_100069684()
{
  return sub_100068F64(&qword_10016D2C8, (void (*)(uint64_t))&type metadata accessor for HourlyForecastBannerViewModel);
}

uint64_t sub_1000696CC()
{
  return sub_1000696F4(&qword_10016D2D0, &qword_10016D1C0);
}

uint64_t sub_1000696F4(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100005470(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

char *initializeBufferWithCopyOfBuffer for AggregateWeatherViewModel(char *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v23 = *a2;
    *(void *)a1 = *a2;
    a1 = (char *)(v23 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_100129330();
    uint64_t v8 = (void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16);
    uint64_t v56 = *v8;
    (*v8)(a1, (char *)a2, v7);
    uint64_t v9 = a3[5];
    uint64_t v10 = &a1[v9];
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = sub_10012A6B0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
    uint64_t v13 = a3[6];
    uint64_t v14 = &a1[v13];
    uint64_t v15 = (char *)a2 + v13;
    uint64_t v16 = sub_10012C250();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
    uint64_t v17 = a3[8];
    *(void *)&a1[a3[7]] = *(uint64_t *)((char *)a2 + a3[7]);
    *(void *)&a1[v17] = *(uint64_t *)((char *)a2 + v17);
    uint64_t v18 = a3[9];
    uint64_t v19 = &a1[v18];
    uint64_t v20 = (char *)a2 + v18;
    int v21 = (int *)type metadata accessor for AirQualityViewModel();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v20, 1, (uint64_t)v21))
    {
      uint64_t v22 = sub_1000053D8(&qword_10016B428);
      memcpy(v19, v20, *(void *)(*(void *)(v22 - 8) + 64));
    }
    else
    {
      v56(v19, v20, v7);
      uint64_t v24 = v21[5];
      uint64_t v25 = &v19[v24];
      uint64_t v26 = &v20[v24];
      uint64_t v27 = sub_100129300();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
      *(void *)&v19[v21[6]] = *(void *)&v20[v21[6]];
      uint64_t v28 = v21[7];
      uint64_t v29 = &v19[v28];
      uint64_t v30 = &v20[v28];
      uint64_t v31 = sub_100129B70();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16))(v29, v30, v31);
      uint64_t v32 = v21[8];
      uint64_t v33 = &v19[v32];
      uint64_t v34 = &v20[v32];
      uint64_t v35 = sub_100129C50();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 16))(v33, v34, v35);
      _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v19, 0, 1, (uint64_t)v21);
    }
    uint64_t v36 = a3[10];
    int v37 = &a1[v36];
    int v38 = (char *)a2 + v36;
    uint64_t v39 = sub_10012C6B0();
    if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v38, 1, v39))
    {
      uint64_t v40 = sub_1000053D8(&qword_10016B430);
      memcpy(v37, v38, *(void *)(*(void *)(v40 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 16))(v37, v38, v39);
      _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v37, 0, 1, v39);
    }
    uint64_t v41 = a3[12];
    *(void *)&a1[a3[11]] = *(uint64_t *)((char *)a2 + a3[11]);
    uint64_t v42 = &a1[v41];
    uint64_t v43 = (char *)a2 + v41;
    *(void *)uint64_t v42 = *(void *)v43;
    *((_WORD *)v42 + 4) = *((_WORD *)v43 + 4);
    uint64_t v44 = a3[13];
    uint64_t v45 = &a1[v44];
    uint64_t v46 = (char *)a2 + v44;
    uint64_t v47 = sub_100129220();
    swift_bridgeObjectRetain();
    if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v46, 1, v47))
    {
      uint64_t v48 = sub_1000053D8(&qword_10016B420);
      memcpy(v45, v46, *(void *)(*(void *)(v48 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v47 - 8) + 16))(v45, v46, v47);
      _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v45, 0, 1, v47);
    }
    uint64_t v49 = a3[14];
    uint64_t v50 = &a1[v49];
    uint64_t v51 = (char *)a2 + v49;
    uint64_t v52 = type metadata accessor for AggregateWeatherViewModel.SunEvent(0);
    if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v51, 1, v52))
    {
      uint64_t v53 = sub_1000053D8(&qword_10016B438);
      memcpy(v50, v51, *(void *)(*(void *)(v53 - 8) + 64));
    }
    else
    {
      swift_getEnumCaseMultiPayload();
      uint64_t v54 = sub_100129300();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v54 - 8) + 16))(v50, v51, v54);
      swift_storeEnumTagMultiPayload();
      _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v50, 0, 1, v52);
    }
  }
  return a1;
}

uint64_t destroy for AggregateWeatherViewModel(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_100129330();
  int v5 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v5(a1, v4);
  uint64_t v6 = a1 + a2[5];
  uint64_t v7 = sub_10012A6B0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  uint64_t v8 = a1 + a2[6];
  uint64_t v9 = sub_10012C250();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v10 = a1 + a2[9];
  uint64_t v11 = (int *)type metadata accessor for AirQualityViewModel();
  if (!_s13WeatherWidget20WeatherDataViewModelOwet_0(v10, 1, (uint64_t)v11))
  {
    v5(v10, v4);
    uint64_t v12 = v10 + v11[5];
    uint64_t v13 = sub_100129300();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
    uint64_t v14 = v10 + v11[7];
    uint64_t v15 = sub_100129B70();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v14, v15);
    uint64_t v16 = v10 + v11[8];
    uint64_t v17 = sub_100129C50();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v17 - 8) + 8))(v16, v17);
  }
  uint64_t v18 = a1 + a2[10];
  uint64_t v19 = sub_10012C6B0();
  if (!_s13WeatherWidget20WeatherDataViewModelOwet_0(v18, 1, v19)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v19 - 8) + 8))(v18, v19);
  }
  swift_bridgeObjectRelease();
  uint64_t v20 = a1 + a2[13];
  uint64_t v21 = sub_100129220();
  if (!_s13WeatherWidget20WeatherDataViewModelOwet_0(v20, 1, v21)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v21 - 8) + 8))(v20, v21);
  }
  uint64_t v22 = a1 + a2[14];
  uint64_t v23 = type metadata accessor for AggregateWeatherViewModel.SunEvent(0);
  uint64_t result = _s13WeatherWidget20WeatherDataViewModelOwet_0(v22, 1, v23);
  if (!result)
  {
    uint64_t v25 = sub_100129300();
    uint64_t v26 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v25 - 8) + 8);
    return v26(v22, v25);
  }
  return result;
}

uint64_t initializeWithCopy for AggregateWeatherViewModel(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_100129330();
  uint64_t v7 = (void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  uint64_t v54 = *v7;
  (*v7)(a1, a2, v6);
  uint64_t v8 = a3[5];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_10012A6B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
  uint64_t v12 = a3[6];
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = sub_10012C250();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
  uint64_t v16 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  *(void *)(a1 + v16) = *(void *)(a2 + v16);
  uint64_t v17 = a3[9];
  uint64_t v18 = (char *)(a1 + v17);
  uint64_t v19 = (char *)(a2 + v17);
  uint64_t v20 = (int *)type metadata accessor for AirQualityViewModel();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v19, 1, (uint64_t)v20))
  {
    uint64_t v21 = sub_1000053D8(&qword_10016B428);
    memcpy(v18, v19, *(void *)(*(void *)(v21 - 8) + 64));
  }
  else
  {
    v54((uint64_t)v18, (uint64_t)v19, v6);
    uint64_t v22 = v20[5];
    uint64_t v23 = &v18[v22];
    uint64_t v24 = &v19[v22];
    uint64_t v25 = sub_100129300();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 16))(v23, v24, v25);
    *(void *)&v18[v20[6]] = *(void *)&v19[v20[6]];
    uint64_t v26 = v20[7];
    uint64_t v27 = &v18[v26];
    uint64_t v28 = &v19[v26];
    uint64_t v29 = sub_100129B70();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 16))(v27, v28, v29);
    uint64_t v30 = v20[8];
    uint64_t v31 = &v18[v30];
    uint64_t v32 = &v19[v30];
    uint64_t v33 = sub_100129C50();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 16))(v31, v32, v33);
    _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v18, 0, 1, (uint64_t)v20);
  }
  uint64_t v34 = a3[10];
  uint64_t v35 = (void *)(a1 + v34);
  uint64_t v36 = (const void *)(a2 + v34);
  uint64_t v37 = sub_10012C6B0();
  if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v36, 1, v37))
  {
    uint64_t v38 = sub_1000053D8(&qword_10016B430);
    memcpy(v35, v36, *(void *)(*(void *)(v38 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v37 - 8) + 16))(v35, v36, v37);
    _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v35, 0, 1, v37);
  }
  uint64_t v39 = a3[12];
  *(void *)(a1 + a3[11]) = *(void *)(a2 + a3[11]);
  uint64_t v40 = a1 + v39;
  uint64_t v41 = a2 + v39;
  *(void *)uint64_t v40 = *(void *)v41;
  *(_WORD *)(v40 + 8) = *(_WORD *)(v41 + 8);
  uint64_t v42 = a3[13];
  uint64_t v43 = (void *)(a1 + v42);
  uint64_t v44 = (const void *)(a2 + v42);
  uint64_t v45 = sub_100129220();
  swift_bridgeObjectRetain();
  if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v44, 1, v45))
  {
    uint64_t v46 = sub_1000053D8(&qword_10016B420);
    memcpy(v43, v44, *(void *)(*(void *)(v46 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v45 - 8) + 16))(v43, v44, v45);
    _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v43, 0, 1, v45);
  }
  uint64_t v47 = a3[14];
  uint64_t v48 = (void *)(a1 + v47);
  uint64_t v49 = (const void *)(a2 + v47);
  uint64_t v50 = type metadata accessor for AggregateWeatherViewModel.SunEvent(0);
  if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v49, 1, v50))
  {
    uint64_t v51 = sub_1000053D8(&qword_10016B438);
    memcpy(v48, v49, *(void *)(*(void *)(v51 - 8) + 64));
  }
  else
  {
    swift_getEnumCaseMultiPayload();
    uint64_t v52 = sub_100129300();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v52 - 8) + 16))(v48, v49, v52);
    swift_storeEnumTagMultiPayload();
    _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v48, 0, 1, v50);
  }
  return a1;
}

uint64_t assignWithCopy for AggregateWeatherViewModel(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_100129330();
  uint64_t v76 = *(void *)(v6 - 8);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v76 + 24);
  v7(a1, a2, v6);
  uint64_t v8 = a3[5];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_10012A6B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 24))(v9, v10, v11);
  uint64_t v12 = a3[6];
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = sub_10012C250();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 24))(v13, v14, v15);
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v16 = a3[9];
  uint64_t v17 = (char *)(a1 + v16);
  uint64_t v18 = (char *)(a2 + v16);
  uint64_t v19 = (int *)type metadata accessor for AirQualityViewModel();
  int v20 = _s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v17, 1, (uint64_t)v19);
  int v21 = _s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v18, 1, (uint64_t)v19);
  if (v20)
  {
    if (!v21)
    {
      (*(void (**)(char *, char *, uint64_t))(v76 + 16))(v17, v18, v6);
      uint64_t v22 = v19[5];
      uint64_t v23 = &v17[v22];
      uint64_t v24 = &v18[v22];
      uint64_t v25 = sub_100129300();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 16))(v23, v24, v25);
      *(void *)&v17[v19[6]] = *(void *)&v18[v19[6]];
      uint64_t v26 = v19[7];
      uint64_t v27 = &v17[v26];
      uint64_t v28 = &v18[v26];
      uint64_t v29 = sub_100129B70();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 16))(v27, v28, v29);
      uint64_t v30 = v19[8];
      uint64_t v31 = &v17[v30];
      uint64_t v32 = &v18[v30];
      uint64_t v33 = sub_100129C50();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 16))(v31, v32, v33);
      _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v17, 0, 1, (uint64_t)v19);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v21)
  {
    sub_100068FAC((uint64_t)v17, (void (*)(void))type metadata accessor for AirQualityViewModel);
LABEL_6:
    uint64_t v34 = sub_1000053D8(&qword_10016B428);
    memcpy(v17, v18, *(void *)(*(void *)(v34 - 8) + 64));
    goto LABEL_7;
  }
  v7((uint64_t)v17, (uint64_t)v18, v6);
  uint64_t v63 = v19[5];
  uint64_t v64 = &v17[v63];
  uint64_t v65 = &v18[v63];
  uint64_t v66 = sub_100129300();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v66 - 8) + 24))(v64, v65, v66);
  *(void *)&v17[v19[6]] = *(void *)&v18[v19[6]];
  uint64_t v67 = v19[7];
  uint64_t v68 = &v17[v67];
  uint64_t v69 = &v18[v67];
  uint64_t v70 = sub_100129B70();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v70 - 8) + 24))(v68, v69, v70);
  uint64_t v71 = v19[8];
  uint64_t v72 = &v17[v71];
  uint64_t v73 = &v18[v71];
  uint64_t v74 = sub_100129C50();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v74 - 8) + 24))(v72, v73, v74);
LABEL_7:
  uint64_t v35 = a3[10];
  uint64_t v36 = (void *)(a1 + v35);
  uint64_t v37 = (const void *)(a2 + v35);
  uint64_t v38 = sub_10012C6B0();
  int v39 = _s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v36, 1, v38);
  int v40 = _s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v37, 1, v38);
  if (v39)
  {
    if (!v40)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v38 - 8) + 16))(v36, v37, v38);
      _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v36, 0, 1, v38);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  uint64_t v41 = *(void *)(v38 - 8);
  if (v40)
  {
    (*(void (**)(void *, uint64_t))(v41 + 8))(v36, v38);
LABEL_12:
    uint64_t v42 = sub_1000053D8(&qword_10016B430);
    memcpy(v36, v37, *(void *)(*(void *)(v42 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, const void *, uint64_t))(v41 + 24))(v36, v37, v38);
LABEL_13:
  *(void *)(a1 + a3[11]) = *(void *)(a2 + a3[11]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v43 = a3[12];
  uint64_t v44 = (unsigned char *)(a1 + v43);
  uint64_t v45 = (unsigned char *)(a2 + v43);
  *uint64_t v44 = *v45;
  v44[1] = v45[1];
  v44[2] = v45[2];
  v44[3] = v45[3];
  v44[4] = v45[4];
  v44[5] = v45[5];
  v44[6] = v45[6];
  v44[7] = v45[7];
  v44[8] = v45[8];
  v44[9] = v45[9];
  uint64_t v46 = a3[13];
  uint64_t v47 = (void *)(a1 + v46);
  uint64_t v48 = (const void *)(a2 + v46);
  uint64_t v49 = sub_100129220();
  int v50 = _s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v47, 1, v49);
  int v51 = _s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v48, 1, v49);
  if (v50)
  {
    if (!v51)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v49 - 8) + 16))(v47, v48, v49);
      _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v47, 0, 1, v49);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  uint64_t v52 = *(void *)(v49 - 8);
  if (v51)
  {
    (*(void (**)(void *, uint64_t))(v52 + 8))(v47, v49);
LABEL_18:
    uint64_t v53 = sub_1000053D8(&qword_10016B420);
    memcpy(v47, v48, *(void *)(*(void *)(v53 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(void *, const void *, uint64_t))(v52 + 24))(v47, v48, v49);
LABEL_19:
  uint64_t v54 = a3[14];
  char v55 = (void *)(a1 + v54);
  uint64_t v56 = (const void *)(a2 + v54);
  uint64_t v57 = type metadata accessor for AggregateWeatherViewModel.SunEvent(0);
  int v58 = _s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v55, 1, v57);
  int v59 = _s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v56, 1, v57);
  if (v58)
  {
    if (!v59)
    {
      swift_getEnumCaseMultiPayload();
      uint64_t v60 = sub_100129300();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v60 - 8) + 16))(v55, v56, v60);
      swift_storeEnumTagMultiPayload();
      _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v55, 0, 1, v57);
      return a1;
    }
LABEL_24:
    uint64_t v61 = sub_1000053D8(&qword_10016B438);
    memcpy(v55, v56, *(void *)(*(void *)(v61 - 8) + 64));
    return a1;
  }
  if (v59)
  {
    sub_100068FAC((uint64_t)v55, (void (*)(void))type metadata accessor for AggregateWeatherViewModel.SunEvent);
    goto LABEL_24;
  }
  if (a1 != a2)
  {
    sub_100068FAC((uint64_t)v55, (void (*)(void))type metadata accessor for AggregateWeatherViewModel.SunEvent);
    swift_getEnumCaseMultiPayload();
    uint64_t v75 = sub_100129300();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v75 - 8) + 16))(v55, v56, v75);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t initializeWithTake for AggregateWeatherViewModel(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_100129330();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  uint64_t v8 = a3[5];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_10012A6B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
  uint64_t v12 = a3[6];
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = sub_10012C250();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
  uint64_t v16 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  *(void *)(a1 + v16) = *(void *)(a2 + v16);
  uint64_t v17 = a3[9];
  uint64_t v18 = (char *)(a1 + v17);
  uint64_t v19 = (char *)(a2 + v17);
  int v20 = (int *)type metadata accessor for AirQualityViewModel();
  if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v19, 1, (uint64_t)v20))
  {
    uint64_t v21 = sub_1000053D8(&qword_10016B428);
    memcpy(v18, v19, *(void *)(*(void *)(v21 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v18, (uint64_t)v19, v6);
    uint64_t v22 = v20[5];
    uint64_t v23 = &v18[v22];
    uint64_t v24 = &v19[v22];
    uint64_t v25 = sub_100129300();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 32))(v23, v24, v25);
    *(void *)&v18[v20[6]] = *(void *)&v19[v20[6]];
    uint64_t v26 = v20[7];
    uint64_t v27 = &v18[v26];
    uint64_t v28 = &v19[v26];
    uint64_t v29 = sub_100129B70();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 32))(v27, v28, v29);
    uint64_t v30 = v20[8];
    uint64_t v31 = &v18[v30];
    uint64_t v32 = &v19[v30];
    uint64_t v33 = sub_100129C50();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 32))(v31, v32, v33);
    _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v18, 0, 1, (uint64_t)v20);
  }
  uint64_t v34 = a3[10];
  uint64_t v35 = (void *)(a1 + v34);
  uint64_t v36 = (const void *)(a2 + v34);
  uint64_t v37 = sub_10012C6B0();
  if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v36, 1, v37))
  {
    uint64_t v38 = sub_1000053D8(&qword_10016B430);
    memcpy(v35, v36, *(void *)(*(void *)(v38 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v37 - 8) + 32))(v35, v36, v37);
    _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v35, 0, 1, v37);
  }
  uint64_t v39 = a3[12];
  *(void *)(a1 + a3[11]) = *(void *)(a2 + a3[11]);
  uint64_t v40 = a1 + v39;
  uint64_t v41 = a2 + v39;
  *(void *)uint64_t v40 = *(void *)v41;
  *(_WORD *)(v40 + 8) = *(_WORD *)(v41 + 8);
  uint64_t v42 = a3[13];
  uint64_t v43 = (void *)(a1 + v42);
  uint64_t v44 = (const void *)(a2 + v42);
  uint64_t v45 = sub_100129220();
  if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v44, 1, v45))
  {
    uint64_t v46 = sub_1000053D8(&qword_10016B420);
    memcpy(v43, v44, *(void *)(*(void *)(v46 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v45 - 8) + 32))(v43, v44, v45);
    _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v43, 0, 1, v45);
  }
  uint64_t v47 = a3[14];
  uint64_t v48 = (void *)(a1 + v47);
  uint64_t v49 = (const void *)(a2 + v47);
  uint64_t v50 = type metadata accessor for AggregateWeatherViewModel.SunEvent(0);
  if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v49, 1, v50))
  {
    uint64_t v51 = sub_1000053D8(&qword_10016B438);
    memcpy(v48, v49, *(void *)(*(void *)(v51 - 8) + 64));
  }
  else
  {
    swift_getEnumCaseMultiPayload();
    uint64_t v52 = sub_100129300();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v52 - 8) + 32))(v48, v49, v52);
    swift_storeEnumTagMultiPayload();
    _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v48, 0, 1, v50);
  }
  return a1;
}

uint64_t assignWithTake for AggregateWeatherViewModel(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_100129330();
  uint64_t v76 = *(void *)(v6 - 8);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v76 + 40);
  v7(a1, a2, v6);
  uint64_t v8 = a3[5];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_10012A6B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 40))(v9, v10, v11);
  uint64_t v12 = a3[6];
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = sub_10012C250();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 40))(v13, v14, v15);
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  swift_bridgeObjectRelease();
  uint64_t v16 = a3[9];
  uint64_t v17 = (char *)(a1 + v16);
  uint64_t v18 = (char *)(a2 + v16);
  uint64_t v19 = (int *)type metadata accessor for AirQualityViewModel();
  int v20 = _s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v17, 1, (uint64_t)v19);
  int v21 = _s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v18, 1, (uint64_t)v19);
  if (v20)
  {
    if (!v21)
    {
      (*(void (**)(char *, char *, uint64_t))(v76 + 32))(v17, v18, v6);
      uint64_t v22 = v19[5];
      uint64_t v23 = &v17[v22];
      uint64_t v24 = &v18[v22];
      uint64_t v25 = sub_100129300();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 32))(v23, v24, v25);
      *(void *)&v17[v19[6]] = *(void *)&v18[v19[6]];
      uint64_t v26 = v19[7];
      uint64_t v27 = &v17[v26];
      uint64_t v28 = &v18[v26];
      uint64_t v29 = sub_100129B70();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 32))(v27, v28, v29);
      uint64_t v30 = v19[8];
      uint64_t v31 = &v17[v30];
      uint64_t v32 = &v18[v30];
      uint64_t v33 = sub_100129C50();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 32))(v31, v32, v33);
      _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v17, 0, 1, (uint64_t)v19);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v21)
  {
    sub_100068FAC((uint64_t)v17, (void (*)(void))type metadata accessor for AirQualityViewModel);
LABEL_6:
    uint64_t v34 = sub_1000053D8(&qword_10016B428);
    memcpy(v17, v18, *(void *)(*(void *)(v34 - 8) + 64));
    goto LABEL_7;
  }
  v7((uint64_t)v17, (uint64_t)v18, v6);
  uint64_t v63 = v19[5];
  uint64_t v64 = &v17[v63];
  uint64_t v65 = &v18[v63];
  uint64_t v66 = sub_100129300();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v66 - 8) + 40))(v64, v65, v66);
  *(void *)&v17[v19[6]] = *(void *)&v18[v19[6]];
  uint64_t v67 = v19[7];
  uint64_t v68 = &v17[v67];
  uint64_t v69 = &v18[v67];
  uint64_t v70 = sub_100129B70();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v70 - 8) + 40))(v68, v69, v70);
  uint64_t v71 = v19[8];
  uint64_t v72 = &v17[v71];
  uint64_t v73 = &v18[v71];
  uint64_t v74 = sub_100129C50();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v74 - 8) + 40))(v72, v73, v74);
LABEL_7:
  uint64_t v35 = a3[10];
  uint64_t v36 = (void *)(a1 + v35);
  uint64_t v37 = (const void *)(a2 + v35);
  uint64_t v38 = sub_10012C6B0();
  int v39 = _s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v36, 1, v38);
  int v40 = _s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v37, 1, v38);
  if (v39)
  {
    if (!v40)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v38 - 8) + 32))(v36, v37, v38);
      _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v36, 0, 1, v38);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  uint64_t v41 = *(void *)(v38 - 8);
  if (v40)
  {
    (*(void (**)(void *, uint64_t))(v41 + 8))(v36, v38);
LABEL_12:
    uint64_t v42 = sub_1000053D8(&qword_10016B430);
    memcpy(v36, v37, *(void *)(*(void *)(v42 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, const void *, uint64_t))(v41 + 40))(v36, v37, v38);
LABEL_13:
  *(void *)(a1 + a3[11]) = *(void *)(a2 + a3[11]);
  swift_bridgeObjectRelease();
  uint64_t v43 = a3[12];
  uint64_t v44 = a3[13];
  uint64_t v45 = a1 + v43;
  uint64_t v46 = a2 + v43;
  *(void *)uint64_t v45 = *(void *)v46;
  *(_WORD *)(v45 + 8) = *(_WORD *)(v46 + 8);
  uint64_t v47 = (void *)(a1 + v44);
  uint64_t v48 = (const void *)(a2 + v44);
  uint64_t v49 = sub_100129220();
  int v50 = _s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v47, 1, v49);
  int v51 = _s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v48, 1, v49);
  if (v50)
  {
    if (!v51)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v49 - 8) + 32))(v47, v48, v49);
      _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v47, 0, 1, v49);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  uint64_t v52 = *(void *)(v49 - 8);
  if (v51)
  {
    (*(void (**)(void *, uint64_t))(v52 + 8))(v47, v49);
LABEL_18:
    uint64_t v53 = sub_1000053D8(&qword_10016B420);
    memcpy(v47, v48, *(void *)(*(void *)(v53 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(void *, const void *, uint64_t))(v52 + 40))(v47, v48, v49);
LABEL_19:
  uint64_t v54 = a3[14];
  char v55 = (void *)(a1 + v54);
  uint64_t v56 = (const void *)(a2 + v54);
  uint64_t v57 = type metadata accessor for AggregateWeatherViewModel.SunEvent(0);
  int v58 = _s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v55, 1, v57);
  int v59 = _s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v56, 1, v57);
  if (v58)
  {
    if (!v59)
    {
      swift_getEnumCaseMultiPayload();
      uint64_t v60 = sub_100129300();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v60 - 8) + 32))(v55, v56, v60);
      swift_storeEnumTagMultiPayload();
      _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v55, 0, 1, v57);
      return a1;
    }
LABEL_24:
    uint64_t v61 = sub_1000053D8(&qword_10016B438);
    memcpy(v55, v56, *(void *)(*(void *)(v61 - 8) + 64));
    return a1;
  }
  if (v59)
  {
    sub_100068FAC((uint64_t)v55, (void (*)(void))type metadata accessor for AggregateWeatherViewModel.SunEvent);
    goto LABEL_24;
  }
  if (a1 != a2)
  {
    sub_100068FAC((uint64_t)v55, (void (*)(void))type metadata accessor for AggregateWeatherViewModel.SunEvent);
    swift_getEnumCaseMultiPayload();
    uint64_t v75 = sub_100129300();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v75 - 8) + 32))(v55, v56, v75);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for AggregateWeatherViewModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10006BA8C);
}

uint64_t sub_10006BA8C(uint64_t a1, uint64_t a2, int *a3)
{
  sub_100129330();
  sub_10000B3D0();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1;
LABEL_19:
    return _s13WeatherWidget20WeatherDataViewModelOwet_0(v9, a2, v8);
  }
  sub_10012A6B0();
  sub_10000B3D0();
  if (*(_DWORD *)(v11 + 84) == a2)
  {
    uint64_t v8 = v10;
    uint64_t v12 = a3[5];
LABEL_18:
    uint64_t v9 = a1 + v12;
    goto LABEL_19;
  }
  sub_10012C250();
  sub_10000B3D0();
  if (*(_DWORD *)(v14 + 84) == a2)
  {
    uint64_t v8 = v13;
    uint64_t v12 = a3[6];
    goto LABEL_18;
  }
  if (a2 != 0x7FFFFFFF)
  {
    sub_1000053D8(&qword_10016B428);
    sub_10000B3D0();
    if (*(_DWORD *)(v18 + 84) == a2)
    {
      uint64_t v8 = v17;
      uint64_t v12 = a3[9];
    }
    else
    {
      sub_1000053D8(&qword_10016B430);
      sub_10000B3D0();
      if (*(_DWORD *)(v20 + 84) == a2)
      {
        uint64_t v8 = v19;
        uint64_t v12 = a3[10];
      }
      else
      {
        sub_1000053D8(&qword_10016B420);
        sub_10000B3D0();
        if (*(_DWORD *)(v22 + 84) == a2)
        {
          uint64_t v8 = v21;
          uint64_t v12 = a3[13];
        }
        else
        {
          uint64_t v8 = sub_1000053D8(&qword_10016B438);
          uint64_t v12 = a3[14];
        }
      }
    }
    goto LABEL_18;
  }
  unint64_t v15 = *(void *)(a1 + a3[7]);
  if (v15 >= 0xFFFFFFFF) {
    LODWORD(v15) = -1;
  }
  return (v15 + 1);
}

uint64_t storeEnumTagSinglePayload for AggregateWeatherViewModel(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10006BC14);
}

void sub_10006BC14(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  sub_100129330();
  sub_10000B3D0();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = a1;
  }
  else
  {
    sub_10012A6B0();
    sub_10000B3D0();
    if (*(_DWORD *)(v13 + 84) == a3)
    {
      uint64_t v10 = v12;
      uint64_t v14 = a4[5];
    }
    else
    {
      sub_10012C250();
      sub_10000B3D0();
      if (*(_DWORD *)(v16 + 84) == a3)
      {
        uint64_t v10 = v15;
        uint64_t v14 = a4[6];
      }
      else
      {
        if (a3 == 0x7FFFFFFF)
        {
          *(void *)(a1 + a4[7]) = (a2 - 1);
          return;
        }
        sub_1000053D8(&qword_10016B428);
        sub_10000B3D0();
        if (*(_DWORD *)(v18 + 84) == a3)
        {
          uint64_t v10 = v17;
          uint64_t v14 = a4[9];
        }
        else
        {
          sub_1000053D8(&qword_10016B430);
          sub_10000B3D0();
          if (*(_DWORD *)(v20 + 84) == a3)
          {
            uint64_t v10 = v19;
            uint64_t v14 = a4[10];
          }
          else
          {
            sub_1000053D8(&qword_10016B420);
            sub_10000B3D0();
            if (*(_DWORD *)(v22 + 84) == a3)
            {
              uint64_t v10 = v21;
              uint64_t v14 = a4[13];
            }
            else
            {
              uint64_t v10 = sub_1000053D8(&qword_10016B438);
              uint64_t v14 = a4[14];
            }
          }
        }
      }
    }
    uint64_t v11 = a1 + v14;
  }

  _s13WeatherWidget20WeatherDataViewModelOwst_0(v11, a2, a2, v10);
}

void sub_10006BD84()
{
  sub_100129330();
  if (v0 <= 0x3F)
  {
    sub_10012A6B0();
    if (v1 <= 0x3F)
    {
      sub_10012C250();
      if (v2 <= 0x3F)
      {
        sub_10006C008(319, &qword_10016D340, (void (*)(uint64_t))type metadata accessor for AirQualityViewModel);
        if (v3 <= 0x3F)
        {
          sub_10006C008(319, &qword_10016D348, (void (*)(uint64_t))&type metadata accessor for NextHourPrecipitationChartViewModel);
          if (v4 <= 0x3F)
          {
            sub_10006C008(319, (unint64_t *)&qword_10016D350, (void (*)(uint64_t))&type metadata accessor for URL);
            if (v5 <= 0x3F)
            {
              sub_10006C008(319, (unint64_t *)&unk_10016D358, (void (*)(uint64_t))type metadata accessor for AggregateWeatherViewModel.SunEvent);
              if (v6 <= 0x3F) {
                swift_initStructMetadata();
              }
            }
          }
        }
      }
    }
  }
}

void sub_10006C008(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_10012CF40();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t getEnumTagSinglePayload for AggregateWeatherViewModel.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xF6)
  {
    if (a2 + 10 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 10) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 11;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xB;
  int v5 = v6 - 11;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for AggregateWeatherViewModel.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 10 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 10) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF6) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF5)
  {
    unsigned int v6 = ((a2 - 246) >> 8) + 1;
    *uint64_t result = a2 + 10;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10006C1B0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 10;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AggregateWeatherViewModel.CodingKeys()
{
  return &type metadata for AggregateWeatherViewModel.CodingKeys;
}

uint64_t *sub_10006C1E8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v7 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v7 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    swift_getEnumCaseMultiPayload();
    uint64_t v6 = sub_100129300();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_10006C2D8(uint64_t a1)
{
  uint64_t v2 = sub_100129300();
  int v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(a1, v2);
}

uint64_t sub_10006C33C(uint64_t a1, uint64_t a2)
{
  swift_getEnumCaseMultiPayload();
  uint64_t v4 = sub_100129300();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_10006C3D0(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_100068FAC(a1, (void (*)(void))type metadata accessor for AggregateWeatherViewModel.SunEvent);
    swift_getEnumCaseMultiPayload();
    uint64_t v4 = sub_100129300();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_10006C488(uint64_t a1, uint64_t a2)
{
  swift_getEnumCaseMultiPayload();
  uint64_t v4 = sub_100129300();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_10006C51C(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_100068FAC(a1, (void (*)(void))type metadata accessor for AggregateWeatherViewModel.SunEvent);
    swift_getEnumCaseMultiPayload();
    uint64_t v4 = sub_100129300();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_10006C5D4()
{
  uint64_t result = sub_100129300();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

unint64_t sub_10006C660()
{
  unint64_t result = qword_10016D458;
  if (!qword_10016D458)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016D458);
  }
  return result;
}

unint64_t sub_10006C6B0()
{
  unint64_t result = qword_10016D460;
  if (!qword_10016D460)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016D460);
  }
  return result;
}

unint64_t sub_10006C700()
{
  unint64_t result = qword_10016D468;
  if (!qword_10016D468)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016D468);
  }
  return result;
}

unint64_t sub_10006C74C()
{
  unint64_t result = qword_10016D488;
  if (!qword_10016D488)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016D488);
  }
  return result;
}

unint64_t sub_10006C798()
{
  unint64_t result = qword_10016D490;
  if (!qword_10016D490)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016D490);
  }
  return result;
}

unint64_t sub_10006C7E4()
{
  unint64_t result = qword_10016D498;
  if (!qword_10016D498)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016D498);
  }
  return result;
}

void sub_10006C830()
{
  sub_100047278();
  sub_10006D580();
  uint64_t v3 = sub_100129300();
  sub_10000DB98();
  uint64_t v68 = v4;
  __chkstk_darwin(v5);
  sub_10000DCB4();
  uint64_t v64 = v6;
  sub_1000636C8();
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v57 - v8;
  uint64_t v10 = sub_1000053D8(&qword_10016D4B8);
  uint64_t v11 = sub_10000DC9C(v10);
  __chkstk_darwin(v11);
  sub_10002A5E0();
  uint64_t v14 = (void *)(v12 - v13);
  __chkstk_darwin(v15);
  sub_10006D5C4();
  if (v1 == v0)
  {
    int v66 = 1;
LABEL_40:
    sub_100047260();
    return;
  }
  if (*(void *)(v1 + 16) != *(void *)(v0 + 16))
  {
LABEL_39:
    int v66 = 0;
    goto LABEL_40;
  }
  int64_t v65 = 0;
  uint64_t v60 = v1;
  uint64_t v18 = *(void *)(v1 + 64);
  uint64_t v17 = v1 + 64;
  uint64_t v16 = v18;
  uint64_t v19 = 1 << *(unsigned char *)(v17 - 32);
  uint64_t v20 = -1;
  if (v19 < 64) {
    uint64_t v20 = ~(-1 << v19);
  }
  unint64_t v21 = v20 & v16;
  uint64_t v67 = v68 + 16;
  uint64_t v61 = v68 + 8;
  uint64_t v62 = v68 + 32;
  uint64_t v58 = v17;
  int64_t v59 = (unint64_t)(v19 + 63) >> 6;
  int64_t v57 = v59 - 1;
  uint64_t v22 = (uint64_t *)&unk_10016D4C0;
  uint64_t v63 = v0;
  while (1)
  {
    if (v21)
    {
      unint64_t v23 = __clz(__rbit64(v21));
      uint64_t v24 = (v21 - 1) & v21;
      unint64_t v25 = v23 | (v65 << 6);
LABEL_8:
      uint64_t v26 = (void *)(*(void *)(v60 + 48) + 16 * v25);
      uint64_t v27 = v26[1];
      *uint64_t v14 = *v26;
      v14[1] = v27;
      uint64_t v28 = sub_1000053D8(v22);
      sub_10006D6D8();
      sub_10006D61C();
      v29();
      _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v14, 0, 1, v28);
      swift_bridgeObjectRetain();
      goto LABEL_30;
    }
    int64_t v30 = v65 + 1;
    if (__OFADD__(v65, 1))
    {
      __break(1u);
      goto LABEL_42;
    }
    if (v30 < v59)
    {
      unint64_t v31 = *(void *)(v58 + 8 * v30);
      if (v31) {
        goto LABEL_12;
      }
      int64_t v32 = v65 + 2;
      ++v65;
      if (v30 + 1 < v59)
      {
        unint64_t v31 = *(void *)(v58 + 8 * v32);
        if (v31) {
          goto LABEL_15;
        }
        int64_t v65 = v30 + 1;
        if (v30 + 2 < v59)
        {
          unint64_t v31 = *(void *)(v58 + 8 * (v30 + 2));
          if (v31)
          {
            v30 += 2;
            goto LABEL_12;
          }
          int64_t v65 = v30 + 2;
          if (v30 + 3 < v59)
          {
            unint64_t v31 = *(void *)(v58 + 8 * (v30 + 3));
            if (v31)
            {
              v30 += 3;
              goto LABEL_12;
            }
            int64_t v32 = v30 + 4;
            int64_t v65 = v30 + 3;
            if (v30 + 4 < v59) {
              break;
            }
          }
        }
      }
    }
LABEL_29:
    uint64_t v33 = sub_1000053D8(v22);
    _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v14, 1, 1, v33);
    uint64_t v24 = 0;
LABEL_30:
    uint64_t v34 = sub_10006D720();
    sub_10006CD30(v34, v35, &qword_10016D4B8);
    uint64_t v36 = sub_1000053D8(v22);
    sub_10006D2E8((uint64_t)v2, 1, v36);
    if (v37) {
      int v38 = 1;
    }
    else {
      int v38 = 0;
    }
    int v66 = v38;
    if (v37) {
      goto LABEL_40;
    }
    unint64_t v39 = v24;
    int v40 = v22;
    uint64_t v41 = *v2;
    uint64_t v42 = v2[1];
    uint64_t v43 = v2;
    sub_100063AE4();
    v44();
    uint64_t v45 = v9;
    sub_1000DC3D0(v41, v42);
    char v47 = v46;
    swift_bridgeObjectRelease();
    if ((v47 & 1) == 0)
    {
      uint64_t v55 = sub_10006D6E4();
      v56(v55, v3);
      goto LABEL_39;
    }
    uint64_t v48 = v3;
    uint64_t v49 = v14;
    uint64_t v50 = v68;
    uint64_t v51 = v64;
    sub_10006D61C();
    v52();
    sub_100068F64(&qword_10016BB58, (void (*)(uint64_t))&type metadata accessor for Date);
    char v53 = sub_10012C9E0();
    uint64_t v54 = *(void (**)(uint64_t, uint64_t))(v50 + 8);
    uint64_t v14 = v49;
    uint64_t v3 = v48;
    v54(v51, v48);
    v54((uint64_t)v45, v48);
    uint64_t v9 = v45;
    uint64_t v2 = v43;
    uint64_t v22 = v40;
    unint64_t v21 = v39;
    if ((v53 & 1) == 0) {
      goto LABEL_40;
    }
  }
  unint64_t v31 = *(void *)(v58 + 8 * v32);
  if (v31)
  {
LABEL_15:
    int64_t v30 = v32;
LABEL_12:
    uint64_t v24 = (v31 - 1) & v31;
    unint64_t v25 = __clz(__rbit64(v31)) + (v30 << 6);
    int64_t v65 = v30;
    goto LABEL_8;
  }
  while (1)
  {
    int64_t v30 = v32 + 1;
    if (__OFADD__(v32, 1)) {
      break;
    }
    if (v30 >= v59)
    {
      int64_t v65 = v57;
      goto LABEL_29;
    }
    unint64_t v31 = *(void *)(v58 + 8 * v30);
    ++v32;
    if (v31) {
      goto LABEL_12;
    }
  }
LABEL_42:
  __break(1u);
}

uint64_t sub_10006CCD8(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  sub_1000053D8(a3);
  sub_10000B3FC();
  sub_10006D61C();
  v4();
  return a2;
}

uint64_t sub_10006CD30(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  sub_1000053D8(a3);
  sub_10000B3FC();
  sub_100063AE4();
  v4();
  return a2;
}

unint64_t sub_10006CD88()
{
  unint64_t result = qword_10016D4D0;
  if (!qword_10016D4D0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_10016D4D0);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for AggregateWeatherViewModel.SunEvent.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10006CE94);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AggregateWeatherViewModel.SunEvent.CodingKeys()
{
  return &type metadata for AggregateWeatherViewModel.SunEvent.CodingKeys;
}

ValueMetadata *type metadata accessor for AggregateWeatherViewModel.SunEvent.SunriseCodingKeys()
{
  return &type metadata for AggregateWeatherViewModel.SunEvent.SunriseCodingKeys;
}

unsigned char *_s13WeatherWidget25AggregateWeatherViewModelV8SunEventO17SunriseCodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x10006CF7CLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for AggregateWeatherViewModel.SunEvent.SunsetCodingKeys()
{
  return &type metadata for AggregateWeatherViewModel.SunEvent.SunsetCodingKeys;
}

unint64_t sub_10006CFB8()
{
  unint64_t result = qword_10016D4F0;
  if (!qword_10016D4F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016D4F0);
  }
  return result;
}

unint64_t sub_10006D008()
{
  unint64_t result = qword_10016D4F8;
  if (!qword_10016D4F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016D4F8);
  }
  return result;
}

unint64_t sub_10006D058()
{
  unint64_t result = qword_10016D500;
  if (!qword_10016D500)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016D500);
  }
  return result;
}

unint64_t sub_10006D0A8()
{
  unint64_t result = qword_10016D508;
  if (!qword_10016D508)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016D508);
  }
  return result;
}

unint64_t sub_10006D0F8()
{
  unint64_t result = qword_10016D510;
  if (!qword_10016D510)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016D510);
  }
  return result;
}

unint64_t sub_10006D148()
{
  unint64_t result = qword_10016D518;
  if (!qword_10016D518)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016D518);
  }
  return result;
}

unint64_t sub_10006D198()
{
  unint64_t result = qword_10016D520;
  if (!qword_10016D520)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016D520);
  }
  return result;
}

unint64_t sub_10006D1E8()
{
  unint64_t result = qword_10016D528;
  if (!qword_10016D528)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016D528);
  }
  return result;
}

unint64_t sub_10006D238()
{
  unint64_t result = qword_10016D530;
  if (!qword_10016D530)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016D530);
  }
  return result;
}

uint64_t *sub_10006D284(uint64_t a1, uint64_t *a2)
{
  if ((*(_DWORD *)(*(void *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    uint64_t v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t sub_10006D2E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _s13WeatherWidget20WeatherDataViewModelOwet_0(a1, a2, a3);
}

uint64_t sub_10006D300()
{
  *(void *)(v2 - 128) = v1;
  return v0;
}

uint64_t sub_10006D31C()
{
  return *(void *)(v0 - 208);
}

uint64_t sub_10006D338()
{
  *(void *)(v5 - 192) = v2;
  *(void *)(v5 - 184) = v0;
  uint64_t v6 = *(void *)(v3 + 16);
  uint64_t result = v4;
  *(void *)(v5 - 128) = v1
                        + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  *(void *)(v5 - 120) = v6;
  *(void *)(v5 - 112) = v3 + 16;
  return result;
}

uint64_t sub_10006D370()
{
  return sub_10012D1B0();
}

uint64_t sub_10006D39C()
{
  return sub_10012D170();
}

uint64_t sub_10006D3E0()
{
  return sub_10012D130();
}

uint64_t sub_10006D40C()
{
  return sub_10012D1B0();
}

uint64_t sub_10006D448()
{
  *(void *)(v2 - 128) = v1;
  return v0;
}

uint64_t sub_10006D468@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v1 - 80) = a1;
  return 0;
}

void sub_10006D4C8(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 256) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t sub_10006D4E4()
{
  return 0;
}

uint64_t sub_10006D500()
{
  return 0;
}

uint64_t sub_10006D51C()
{
  return 0;
}

uint64_t sub_10006D538()
{
  return static Measurement.< infix<A, B>(_:_:)(v1, v0);
}

uint64_t sub_10006D55C()
{
  return v0;
}

uint64_t sub_10006D580()
{
  return 0;
}

uint64_t sub_10006D590()
{
  return sub_10012D0F0();
}

uint64_t sub_10006D5B4()
{
  return v0;
}

uint64_t sub_10006D5E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  *(void *)(v10 - 104) = (char *)&a9 - v9;
  return sub_10012BDF0();
}

uint64_t sub_10006D608()
{
  return v0;
}

uint64_t sub_10006D628()
{
  return sub_10012D0C0();
}

uint64_t sub_10006D65C()
{
  return sub_10000D930(v1, v0);
}

uint64_t sub_10006D674()
{
  _s13WeatherWidget20WeatherDataViewModelOwst_0(v0, 0, 1, v1);
  return swift_bridgeObjectRelease();
}

uint64_t sub_10006D6AC()
{
  return _s13WeatherWidget20WeatherDataViewModelOwst_0(v0, 1, 1, v1);
}

uint64_t sub_10006D6CC()
{
  return v0;
}

uint64_t sub_10006D6E4()
{
  return v0;
}

uint64_t sub_10006D6F0()
{
  return v0;
}

uint64_t sub_10006D6FC()
{
  return v0;
}

uint64_t sub_10006D708()
{
  return sub_10000D930(v0, v1);
}

uint64_t sub_10006D720()
{
  return v0;
}

uint64_t sub_10006D72C()
{
  return 0;
}

uint64_t sub_10006D740()
{
  return v0;
}

uint64_t sub_10006D74C()
{
  return v0;
}

uint64_t sub_10006D760()
{
  return sub_10006CCD8(v2, v1, v0);
}

uint64_t sub_10006D780(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  swift_bridgeObjectRetain();
  sub_10012B330();
  return v1;
}

uint64_t sub_10006D7D0(uint64_t a1, uint64_t a2, char a3, int a4)
{
  uint64_t v8 = sub_10012AFE0();
  sub_10000DB98();
  uint64_t v10 = v9;
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_10012C800();
  sub_10000DB98();
  uint64_t v16 = v15;
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)&v22 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v19, a1, v14);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v13, a2, v8);
  uint64_t v20 = sub_10003C1D0((uint64_t)v19, (uint64_t)v13, a3, a4);
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(a2, v8);
  (*(void (**)(uint64_t, uint64_t))(v16 + 8))(a1, v14);
  return v20;
}

uint64_t sub_10006D958()
{
  uint64_t v0 = sub_10003C4AC();
  uint64_t v1 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v2 = *(unsigned __int16 *)(*(void *)v0 + 52);

  return _swift_deallocClassInstance(v0, v1, v2);
}

uint64_t sub_10006D9AC()
{
  return type metadata accessor for LargePrecipitationViewAttributesFactory();
}

uint64_t type metadata accessor for LargePrecipitationViewAttributesFactory()
{
  uint64_t result = qword_10016D560;
  if (!qword_10016D560) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10006D9FC()
{
  return swift_updateClassMetadata2();
}

uint64_t sub_10006DA34@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_10012AE30();
  *a1 = result & 1;
  return result;
}

uint64_t sub_10006DA64(uint64_t a1, uint64_t a2)
{
  sub_1000053D8(&qword_10016D610);
  sub_10000DB98();
  __chkstk_darwin(v4);
  sub_10000DC50();
  sub_1000053D8(&qword_10016D618);
  sub_10000DB98();
  __chkstk_darwin(v5);
  sub_10000DC50();
  sub_1000053D8(&qword_10016D620);
  sub_10000DB98();
  __chkstk_darwin(v6);
  sub_10000DBCC();
  sub_1000053D8(&qword_10016D628);
  sub_10000DB98();
  __chkstk_darwin(v7);
  sub_10000DBCC();
  type metadata accessor for WeatherTimelineProvider();
  swift_allocObject();
  swift_bridgeObjectRetain();
  sub_100118DBC(192, a1, a2);
  type metadata accessor for SunriseSunsetContentView();
  sub_10006E478(&qword_10016D630, (void (*)(uint64_t))type metadata accessor for SunriseSunsetContentView);
  sub_10006E478(&qword_10016BDB8, (void (*)(uint64_t))type metadata accessor for WeatherTimelineProvider);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_10012C890();
  sub_10012AF80();
  uint64_t v8 = sub_10012B400();
  uint64_t v10 = v9;
  LOBYTE(a1) = v11 & 1;
  sub_10006E4C0();
  sub_10012B0B0();
  sub_100008278(v8, v10, a1);
  swift_bridgeObjectRelease();
  sub_10000B424();
  v12();
  sub_1000053D8(&qword_10016B9C8);
  uint64_t v13 = sub_10012C800();
  sub_10000DB98();
  uint64_t v15 = v14;
  unint64_t v16 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  uint64_t v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_100130010;
  (*(void (**)(unint64_t, void, uint64_t))(v15 + 104))(v17 + v16, enum case for WidgetFamily.systemSmall(_:), v13);
  swift_getOpaqueTypeConformance2();
  sub_10012B090();
  swift_bridgeObjectRelease();
  sub_10000B424();
  v18();
  sub_10012AF80();
  uint64_t v19 = sub_10012B400();
  uint64_t v21 = v20;
  LOBYTE(v16) = v22 & 1;
  swift_getOpaqueTypeConformance2();
  sub_10012B070();
  sub_100008278(v19, v21, v16);
  swift_bridgeObjectRelease();
  sub_10000B424();
  v23();
  swift_getOpaqueTypeConformance2();
  sub_10012B0D0();
  swift_release();
  sub_10000B424();
  return v24();
}

uint64_t sub_10006DFD8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1000053D8(&qword_10016B0B0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (uint64_t *)((char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = sub_1000053D8(&qword_10016C140);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (uint64_t *)((char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = sub_1000053D8(&qword_10016B9D0);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (uint64_t *)((char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v13 = sub_1000053D8(&qword_10016B440);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (uint64_t *)((char *)&v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v16 = type metadata accessor for ForecastEntry(0);
  __chkstk_darwin(v16 - 8);
  uint64_t v18 = (char *)&v27 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100024484(a1, (uint64_t)v18);
  *uint64_t v15 = swift_getKeyPath();
  sub_1000053D8(&qword_10016B410);
  swift_storeEnumTagMultiPayload();
  uint64_t *v12 = swift_getKeyPath();
  sub_1000053D8(&qword_10016B9D8);
  swift_storeEnumTagMultiPayload();
  uint64_t KeyPath = swift_getKeyPath();
  *uint64_t v9 = swift_getKeyPath();
  sub_1000053D8(&qword_10016B9E0);
  swift_storeEnumTagMultiPayload();
  *uint64_t v6 = swift_getKeyPath();
  sub_1000053D8(&qword_10016B088);
  swift_storeEnumTagMultiPayload();
  uint64_t v20 = swift_getKeyPath();
  sub_1000244FC((uint64_t)v15, a2, &qword_10016B440);
  uint64_t v21 = (int *)type metadata accessor for SunriseSunsetContentView();
  sub_1000244FC((uint64_t)v12, a2 + v21[5], &qword_10016B9D0);
  uint64_t v22 = a2 + v21[6];
  *(void *)uint64_t v22 = KeyPath;
  *(unsigned char *)(v22 + 8) = 0;
  sub_1000244FC((uint64_t)v9, a2 + v21[7], &qword_10016C140);
  sub_1000244FC((uint64_t)v6, a2 + v21[8], &qword_10016B0B0);
  uint64_t v23 = a2 + v21[9];
  *(void *)uint64_t v23 = v20;
  *(unsigned char *)(v23 + 8) = 0;
  sub_100024560((uint64_t)v18, a2 + v21[10]);
  uint64_t v24 = v21[11];
  id v25 = [self mainScreen];
  [v25 bounds];

  uint64_t result = sub_100005130();
  *(unsigned char *)(a2 + v24) = result;
  return result;
}

uint64_t sub_10006E350()
{
  uint64_t v0 = sub_10012A0B0();
  sub_10000DB98();
  uint64_t v2 = v1;
  __chkstk_darwin(v3);
  sub_10000DC50();
  uint64_t v6 = v5 - v4;
  (*(void (**)(uint64_t, void, uint64_t))(v2 + 104))(v5 - v4, enum case for WidgetNames.SunriseSunset(_:), v0);
  uint64_t v7 = sub_10012A0A0();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v6, v0);
  return v7;
}

ValueMetadata *type metadata accessor for SunriseSunsetWidget()
{
  return &type metadata for SunriseSunsetWidget;
}

uint64_t sub_10006E42C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10006E448@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_10006E350();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_10006E470()
{
  return sub_10006DA64(*v0, v0[1]);
}

uint64_t sub_10006E478(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10006E4C0()
{
  unint64_t result = qword_10016D638;
  if (!qword_10016D638)
  {
    sub_100005470(&qword_10016D610);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016D638);
  }
  return result;
}

uint64_t sub_10006E520()
{
  return sub_10012AEA0();
}

uint64_t sub_10006E544(uint64_t a1)
{
  sub_10012C7F0();
  sub_10000DB98();
  __chkstk_darwin(v2);
  sub_10000DC50();
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(v4 - v3, a1);
  return sub_10012AEB0();
}

uint64_t sub_10006E5E4()
{
  return sub_10012AEA0();
}

uint64_t sub_10006E60C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_10012AE30();
  *a1 = result & 1;
  return result;
}

uint64_t sub_10006E63C()
{
  return sub_1000247D8();
}

uint64_t sub_10006E71C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000053D8(&qword_10016D640);
  sub_10000DB98();
  uint64_t v6 = v5;
  __chkstk_darwin(v7);
  sub_10000DC50();
  uint64_t v10 = v9 - v8;
  sub_1000053D8(&qword_10016D648);
  sub_10000DB98();
  uint64_t v36 = v11;
  uint64_t v37 = v12;
  __chkstk_darwin(v11);
  sub_10000DC50();
  uint64_t v15 = v14 - v13;
  sub_1000053D8(&qword_10016D650);
  sub_10000DB98();
  uint64_t v38 = v16;
  uint64_t v39 = v17;
  __chkstk_darwin(v16);
  sub_10000DC50();
  uint64_t v35 = v19 - v18;
  type metadata accessor for WeatherTimelineProvider();
  swift_allocObject();
  swift_bridgeObjectRetain_n();
  sub_100118DBC(1, a1, a2);
  type metadata accessor for TemperatureContentView();
  sub_10006EDC0(&qword_10016D658, (void (*)(uint64_t))type metadata accessor for TemperatureContentView);
  sub_10006EDC0(&qword_10016BDB8, (void (*)(uint64_t))type metadata accessor for WeatherTimelineProvider);
  sub_10012C890();
  sub_10012AF80();
  uint64_t v20 = sub_10012B400();
  uint64_t v22 = v21;
  char v24 = v23 & 1;
  sub_10006EE08();
  sub_10012B0B0();
  sub_100008278(v20, v22, v24);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v10, v4);
  sub_10012AF80();
  uint64_t v25 = sub_10012B400();
  uint64_t v27 = v26;
  LOBYTE(v22) = v28 & 1;
  swift_getOpaqueTypeConformance2();
  sub_10012B070();
  sub_100008278(v25, v27, v22);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v15, v36);
  sub_1000053D8(&qword_10016B9C8);
  uint64_t v29 = sub_10012C800();
  sub_10000DB98();
  uint64_t v31 = v30;
  unint64_t v32 = (*(unsigned __int8 *)(v30 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80);
  uint64_t v33 = swift_allocObject();
  *(_OWORD *)(v33 + 16) = xmmword_100130010;
  (*(void (**)(unint64_t, void, uint64_t))(v31 + 104))(v33 + v32, enum case for WidgetFamily.accessoryCircular(_:), v29);
  swift_getOpaqueTypeConformance2();
  sub_10012B090();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v39 + 8))(v35, v38);
}

uint64_t sub_10006EBD4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = type metadata accessor for ForecastEntry(0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100024484(a1, (uint64_t)v6);
  *a2 = swift_getKeyPath();
  sub_1000053D8(&qword_10016B410);
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = type metadata accessor for TemperatureContentView();
  return sub_100024560((uint64_t)v6, (uint64_t)a2 + *(int *)(v7 + 20));
}

uint64_t sub_10006EC98()
{
  uint64_t v0 = sub_10012A0B0();
  sub_10000DB98();
  uint64_t v2 = v1;
  __chkstk_darwin(v3);
  sub_10000DC50();
  uint64_t v6 = v5 - v4;
  (*(void (**)(uint64_t, void, uint64_t))(v2 + 104))(v5 - v4, enum case for WidgetNames.TemperatureComplication(_:), v0);
  uint64_t v7 = sub_10012A0A0();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v6, v0);
  return v7;
}

ValueMetadata *type metadata accessor for TemperatureComplicationWidget()
{
  return &type metadata for TemperatureComplicationWidget;
}

uint64_t sub_10006ED74()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10006ED90@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_10006EC98();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_10006EDB8()
{
  return sub_10006E71C(*v0, v0[1]);
}

uint64_t sub_10006EDC0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10006EE08()
{
  unint64_t result = qword_10016D660;
  if (!qword_10016D660)
  {
    sub_100005470(&qword_10016D640);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016D660);
  }
  return result;
}

uint64_t sub_10006EE60()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10006EF2C()
{
  uint64_t v2 = sub_10012B120();
  sub_10000DB98();
  uint64_t v4 = v3;
  __chkstk_darwin(v5);
  sub_10000DC50();
  uint64_t v8 = v7 - v6;
  sub_1000053D8(&qword_10016BEF8);
  sub_10000B3FC();
  __chkstk_darwin(v9);
  sub_10005C778();
  uint64_t v10 = sub_1000053D8(&qword_10016D668);
  sub_10000DB98();
  uint64_t v12 = v11;
  __chkstk_darwin(v13);
  uint64_t *v0 = sub_1000709D8();
  v0[1] = v14;
  uint64_t v15 = sub_1000053D8(&qword_10016D670);
  sub_10006FCC4((char *)v0 + *(int *)(v15 + 44));
  sub_10012B0F0();
  sub_10000B38C((unint64_t *)&qword_10016BF00, &qword_10016BEF8);
  sub_10012B520();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v8, v2);
  sub_1000235F8((uint64_t)v0, &qword_10016BEF8);
  sub_10012AF80();
  uint64_t v16 = sub_10012B400();
  uint64_t v18 = v17;
  LOBYTE(v4) = v19 & 1;
  swift_getOpaqueTypeConformance2();
  sub_10012B4D0();
  sub_100008278(v16, v18, v4);
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 8))(v1, v10);
}

uint64_t sub_10006F190()
{
  uint64_t v25 = sub_10012B120();
  sub_10000DB98();
  uint64_t v3 = v2;
  __chkstk_darwin(v4);
  sub_10000DC50();
  uint64_t v7 = v6 - v5;
  sub_1000053D8(&qword_10016D740);
  sub_10000B3FC();
  __chkstk_darwin(v8);
  sub_10005C778();
  uint64_t v24 = sub_1000053D8(&qword_10016D748);
  sub_10000DB98();
  uint64_t v10 = v9;
  __chkstk_darwin(v11);
  sub_10000DC50();
  uint64_t v14 = v13 - v12;
  sub_1000053D8(&qword_10016D750);
  sub_10000B3FC();
  __chkstk_darwin(v15);
  uint64_t *v0 = sub_1000709D8();
  v0[1] = v16;
  uint64_t v17 = sub_1000053D8(&qword_10016D758);
  sub_10006F490((char *)v0 + *(int *)(v17 + 44));
  sub_10012B0F0();
  sub_10000B38C(&qword_10016D760, &qword_10016D740);
  sub_10012B520();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v7, v25);
  sub_1000235F8((uint64_t)v0, &qword_10016D740);
  sub_10012C0C0();
  swift_getOpaqueTypeConformance2();
  sub_10000822C();
  sub_10012B4F0();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v14, v24);
  sub_10012AF80();
  uint64_t v18 = sub_10012B400();
  uint64_t v20 = v19;
  char v22 = v21 & 1;
  sub_10012AC40();
  sub_100008278(v18, v20, v22);
  swift_bridgeObjectRelease();
  return sub_1000235F8(v1, &qword_10016D750);
}

uint64_t sub_10006F490@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1000053D8(&qword_10016D768);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v20 - v6;
  uint64_t v8 = sub_10012C7A0();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v20 - v13;
  sub_10012C790();
  *(void *)uint64_t v7 = sub_10012AFF0();
  *((void *)v7 + 1) = 0;
  v7[16] = 1;
  uint64_t v15 = sub_1000053D8(&qword_10016D770);
  sub_10006F6BC((uint64_t *)&v7[*(int *)(v15 + 44)]);
  uint64_t v16 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
  v16(v12, v14, v8);
  sub_10002BADC((uint64_t)v7, (uint64_t)v5, &qword_10016D768);
  v16(a1, v12, v8);
  uint64_t v17 = sub_1000053D8(&qword_10016D778);
  sub_10002BADC((uint64_t)v5, (uint64_t)&a1[*(int *)(v17 + 48)], &qword_10016D768);
  sub_1000235F8((uint64_t)v7, &qword_10016D768);
  uint64_t v18 = *(void (**)(char *, uint64_t))(v9 + 8);
  v18(v14, v8);
  sub_1000235F8((uint64_t)v5, &qword_10016D768);
  return ((uint64_t (*)(char *, uint64_t))v18)(v12, v8);
}

uint64_t sub_10006F6BC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v54 = a1;
  uint64_t v50 = sub_1000053D8(&qword_10016D780);
  __chkstk_darwin(v50);
  uint64_t v2 = (uint64_t *)((char *)&v46 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v3 = sub_1000053D8(&qword_10016D788);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v46 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100129160();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v46 = sub_1000053D8(&qword_10016D790);
  __chkstk_darwin(v46);
  uint64_t v12 = (char *)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = sub_1000053D8(&qword_10016D798);
  __chkstk_darwin(v48);
  uint64_t v47 = (uint64_t)&v46 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1000053D8(&qword_10016D7A0);
  uint64_t v52 = *(void *)(v14 - 8);
  uint64_t v53 = v14;
  uint64_t v15 = __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v46 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v51 = (char *)&v46 - v18;
  sub_10012C0A0();
  if (v19) {
    uint64_t v49 = sub_10012B620();
  }
  else {
    uint64_t v49 = 0;
  }
  uint64_t v20 = sub_10012B7A0();
  LOBYTE(v45) = 0;
  LOBYTE(v44) = 1;
  sub_10004CC5C(0, (uint64_t)__src, 0, v44, 0x4008000000000000, v45, v20, v21, 0, 1);
  sub_10012C080();
  sub_10012B300();
  sub_100129140();
  swift_release();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  uint64_t v22 = sub_10012B410();
  uint64_t v24 = v23;
  uint64_t v26 = v25;
  char v28 = v27 & 1;
  uint64_t v29 = enum case for Text.Case.uppercase(_:);
  uint64_t v30 = sub_10012B3E0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v30 - 8) + 104))(v5, v29, v30);
  _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v5, 0, 1, v30);
  uint64_t KeyPath = swift_getKeyPath();
  sub_10002BADC((uint64_t)v5, (uint64_t)v2 + *(int *)(v50 + 28), &qword_10016D788);
  *uint64_t v2 = KeyPath;
  sub_10002BADC((uint64_t)v2, (uint64_t)&v12[*(int *)(v46 + 36)], &qword_10016D780);
  *(void *)uint64_t v12 = v22;
  *((void *)v12 + 1) = v24;
  v12[16] = v28;
  *((void *)v12 + 3) = v26;
  sub_10000B0B0(v22, v24, v28);
  swift_bridgeObjectRetain();
  sub_1000235F8((uint64_t)v2, &qword_10016D780);
  sub_1000235F8((uint64_t)v5, &qword_10016D788);
  sub_100008278(v22, v24, v28);
  swift_bridgeObjectRelease();
  uint64_t v32 = swift_getKeyPath();
  uint64_t v33 = v47;
  sub_10002BADC((uint64_t)v12, v47, &qword_10016D790);
  uint64_t v34 = v33 + *(int *)(v48 + 36);
  *(void *)uint64_t v34 = v32;
  *(unsigned char *)(v34 + 8) = 1;
  sub_1000235F8((uint64_t)v12, &qword_10016D790);
  sub_10012B2A0();
  sub_10007074C();
  sub_10012B480();
  sub_1000235F8(v33, &qword_10016D798);
  uint64_t v36 = v51;
  uint64_t v35 = v52;
  uint64_t v37 = v53;
  (*(void (**)(char *, char *, uint64_t))(v52 + 32))(v51, v17, v53);
  uint64_t v38 = *(void (**)(char *, char *, uint64_t))(v35 + 16);
  v38(v17, v36, v37);
  uint64_t v39 = v54;
  int v40 = v54;
  *uint64_t v54 = v49;
  memcpy(v40 + 1, __src, 0x80uLL);
  uint64_t v41 = sub_1000053D8(&qword_10016D7C0);
  v38((char *)v39 + *(int *)(v41 + 64), v17, v37);
  uint64_t v42 = *(void (**)(char *, uint64_t))(v35 + 8);
  swift_retain();
  v42(v36, v37);
  v42(v17, v37);
  return swift_release();
}

uint64_t sub_10006FCC4@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1000053D8(&qword_10016D678);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v20 - v6;
  uint64_t v8 = sub_10012C7A0();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v20 - v13;
  sub_10012C790();
  *(void *)uint64_t v7 = sub_10012AFF0();
  *((void *)v7 + 1) = 0x4008000000000000;
  v7[16] = 0;
  uint64_t v15 = sub_1000053D8(&qword_10016D680);
  sub_10006FEE8((uint64_t *)&v7[*(int *)(v15 + 44)]);
  uint64_t v16 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
  v16(v12, v14, v8);
  sub_10002BADC((uint64_t)v7, (uint64_t)v5, &qword_10016D678);
  v16(a1, v12, v8);
  uint64_t v17 = sub_1000053D8(&qword_10016D688);
  sub_10002BADC((uint64_t)v5, (uint64_t)&a1[*(int *)(v17 + 48)], &qword_10016D678);
  sub_1000235F8((uint64_t)v7, &qword_10016D678);
  uint64_t v18 = *(void (**)(char *, uint64_t))(v9 + 8);
  v18(v14, v8);
  sub_1000235F8((uint64_t)v5, &qword_10016D678);
  return ((uint64_t (*)(char *, uint64_t))v18)(v12, v8);
}

uint64_t sub_10006FEE8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v25 = a1;
  uint64_t v23 = sub_1000053D8(&qword_10016D690);
  uint64_t v1 = *(void *)(v23 - 8);
  uint64_t v2 = __chkstk_darwin(v23);
  uint64_t v24 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v22 - v4;
  uint64_t v22 = sub_10012B620();
  sub_10012AF80();
  if (qword_10016AEE8 != -1) {
    swift_once();
  }
  id v6 = (id)qword_100181E30;
  uint64_t v7 = sub_10012B400();
  uint64_t v9 = v8;
  uint64_t v11 = v10;
  char v13 = v12 & 1;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v26 = v7;
  uint64_t v27 = v9;
  char v28 = v13;
  uint64_t v29 = v11;
  uint64_t v30 = KeyPath;
  char v31 = 1;
  sub_10012B2A0();
  sub_1000053D8(&qword_10016D698);
  sub_10007080C((unint64_t *)&qword_10016D6A0, &qword_10016D698, &qword_10016BD88, &qword_10016BD90);
  sub_10012B480();
  sub_100008278(v7, v9, v13);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v15 = *(void (**)(char *, char *, uint64_t))(v1 + 16);
  uint64_t v17 = v23;
  uint64_t v16 = v24;
  v15(v24, v5, v23);
  uint64_t v18 = v25;
  uint64_t *v25 = v22;
  uint64_t v19 = sub_1000053D8(&qword_10016D6A8);
  v15((char *)v18 + *(int *)(v19 + 48), v16, v17);
  uint64_t v20 = *(void (**)(char *, uint64_t))(v1 + 8);
  swift_retain();
  v20(v5, v17);
  v20(v16, v17);
  return swift_release();
}

uint64_t sub_1000701DC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_10012AE10();
  *a1 = result;
  return result;
}

uint64_t sub_100070208@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_10012AE10();
  *a1 = result;
  return result;
}

uint64_t sub_100070234()
{
  return sub_10012AE20();
}

uint64_t sub_10007025C()
{
  return sub_10012AE20();
}

uint64_t sub_100070284(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10012C0E0();
  uint64_t v5 = **(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);

  return v5(a1, a2, v4);
}

uint64_t sub_1000702F0(uint64_t a1)
{
  uint64_t v2 = sub_10012C0E0();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(a1, v2);
}

uint64_t sub_100070354(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10012C0E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t sub_1000703B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10012C0E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t sub_10007041C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10012C0E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t sub_100070480(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10012C0E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t sub_1000704E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000704F8);
}

uint64_t sub_1000704F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10012C0E0();

  return _s13WeatherWidget20WeatherDataViewModelOwet_0(a1, a2, v4);
}

uint64_t sub_100070540(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100070554);
}

uint64_t sub_100070554(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10012C0E0();

  return _s13WeatherWidget20WeatherDataViewModelOwst_0(a1, a2, a2, v4);
}

uint64_t type metadata accessor for RainCircularContentView()
{
  uint64_t result = qword_10016D708;
  if (!qword_10016D708) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1000705E8()
{
  uint64_t result = sub_10012C0E0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_100070674()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100070690()
{
  return sub_10012AE60();
}

uint64_t sub_1000706B4(uint64_t a1)
{
  uint64_t v2 = sub_1000053D8(&qword_10016D788);
  __chkstk_darwin(v2 - 8);
  sub_10002BADC(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_10016D788);
  return sub_10012AE70();
}

unint64_t sub_10007074C()
{
  unint64_t result = qword_10016D7A8;
  if (!qword_10016D7A8)
  {
    sub_100005470(&qword_10016D798);
    sub_10007080C(&qword_10016D7B0, &qword_10016D790, &qword_10016D7B8, &qword_10016D780);
    sub_10000B38C(&qword_10016BD88, &qword_10016BD90);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016D7A8);
  }
  return result;
}

uint64_t sub_10007080C(unint64_t *a1, uint64_t *a2, unint64_t *a3, uint64_t *a4)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100005470(a2);
    sub_10000B38C(a3, a4);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1000708AC()
{
  unint64_t result = qword_10016D7C8;
  if (!qword_10016D7C8)
  {
    sub_100005470(&qword_10016D750);
    sub_100005470(&qword_10016D740);
    sub_10000B38C(&qword_10016D760, &qword_10016D740);
    swift_getOpaqueTypeConformance2();
    sub_100070988();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016D7C8);
  }
  return result;
}

unint64_t sub_100070988()
{
  unint64_t result = qword_10016BEC8;
  if (!qword_10016BEC8)
  {
    sub_10012B150();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016BEC8);
  }
  return result;
}

uint64_t sub_1000709D8()
{
  return sub_10012B7A0();
}

uint64_t LocalSearchRequestService.__allocating_init(appConfigurationManager:)(long long *a1)
{
  uint64_t v2 = swift_allocObject();
  sub_100070A60(a1, v2 + 16);
  return v2;
}

uint64_t LocalSearchRequestService.init(appConfigurationManager:)(long long *a1)
{
  sub_100070A60(a1, v1 + 16);
  return v1;
}

uint64_t sub_100070A60(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(void *)(a2 + 32) = *((void *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t LocalSearchRequestService.performLocalSearch(with:calloutTitle:)(uint64_t a1)
{
  id v3 = [objc_allocWithZone((Class)MKLocalSearchRequest) initWithCompletion:a1];
  sub_1000053D8(&qword_10016D7D0);
  swift_allocObject();
  uint64_t v1 = sub_10012A8E0();

  return v1;
}

uint64_t LocalSearchRequestService.performLocalSearch(with:)(uint64_t a1, uint64_t a2)
{
  id v4 = [objc_allocWithZone((Class)MKLocalSearchRequest) init];
  sub_100071EB8(a1, a2, v4);
  sub_1000053D8(&qword_10016D7D0);
  swift_allocObject();
  uint64_t v5 = sub_10012A8E0();

  return v5;
}

void sub_100070BC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7)
{
  sub_100071EB8(a6, a7, a5);
  id v14 = [objc_allocWithZone((Class)MKLocalSearch) initWithRequest:a5];
  uint64_t v15 = (void *)swift_allocObject();
  v15[2] = a6;
  v15[3] = a7;
  v15[4] = a3;
  v15[5] = a4;
  v15[6] = a1;
  v15[7] = a2;
  v17[4] = sub_100071F7C;
  v17[5] = v15;
  v17[0] = _NSConcreteStackBlock;
  v17[1] = 1107296256;
  void v17[2] = sub_100071DDC;
  v17[3] = &unk_100162618;
  uint64_t v16 = _Block_copy(v17);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_release();
  [v14 startWithCompletionHandler:v16];
  _Block_release(v16);
}

void sub_100070D18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_100070BC8(a1, a2, a3, a4, *(void **)(v4 + 16), *(void *)(v4 + 24), *(void *)(v4 + 32));
}

void sub_100070D24(void *a1, uint64_t a2, uint64_t a3, unint64_t a4, void (*a5)(void), uint64_t a6, void (*a7)(char *), uint64_t a8)
{
  uint64_t v123 = a8;
  uint64_t v124 = a7;
  uint64_t v130 = a6;
  uint64_t v131 = a5;
  unint64_t v132 = a4;
  id v128 = a1;
  uint64_t v129 = a3;
  uint64_t v9 = sub_1000053D8(&qword_10016C7B0);
  __chkstk_darwin(v9 - 8);
  uint64_t v125 = (char *)v113 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v126 = sub_10012A6B0();
  uint64_t v122 = *(void *)(v126 - 8);
  uint64_t v11 = __chkstk_darwin(v126);
  char v13 = (char *)v113 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)v113 - v14;
  uint64_t v16 = sub_1000053D8(&qword_10016C7C0);
  uint64_t v17 = __chkstk_darwin(v16 - 8);
  uint64_t v19 = (char *)v113 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __chkstk_darwin(v17);
  uint64_t v22 = (char *)v113 - v21;
  __chkstk_darwin(v20);
  uint64_t v24 = (char *)v113 - v23;
  uint64_t v25 = sub_100129480();
  uint64_t v127 = *(void *)(v25 - 8);
  uint64_t v26 = __chkstk_darwin(v25);
  char v28 = (char *)v113 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  uint64_t v30 = (char *)v113 - v29;
  uint64_t v31 = sub_10012AB60();
  uint64_t v32 = *(void *)(v31 - 8);
  uint64_t v133 = v31;
  uint64_t v134 = v32;
  uint64_t v33 = __chkstk_darwin(v31);
  uint64_t v34 = __chkstk_darwin(v33);
  uint64_t v35 = __chkstk_darwin(v34);
  __chkstk_darwin(v35);
  if (a2)
  {
    int v40 = (char *)v113 - v37;
    swift_errorRetain();
    sub_10012AB30();
    swift_errorRetain();
    unint64_t v41 = v132;
    swift_bridgeObjectRetain();
    swift_errorRetain();
    swift_bridgeObjectRetain();
    uint64_t v42 = sub_10012AB40();
    os_log_type_t v43 = sub_10012CD40();
    if (os_log_type_enabled(v42, v43))
    {
      uint64_t v44 = swift_slowAlloc();
      uint64_t v45 = swift_slowAlloc();
      *(_DWORD *)uint64_t v44 = 141558531;
      uint64_t v135 = 1752392040;
      v136[0] = v45;
      sub_10012CF70();
      *(_WORD *)(v44 + 12) = 2085;
      swift_bridgeObjectRetain();
      uint64_t v135 = sub_100123564(v129, v41, v136);
      sub_10012CF70();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v44 + 22) = 2082;
      uint64_t v135 = a2;
      swift_errorRetain();
      sub_1000053D8(&qword_10016C870);
      uint64_t v46 = sub_10012CAA0();
      uint64_t v135 = sub_100123564(v46, v47, v136);
      sub_10012CF70();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v42, v43, "Failed to geocode. searchString=%{sensitive,mask.hash}s, error=%{public}s", (uint8_t *)v44, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_bridgeObjectRelease_n();
      swift_errorRelease();
      swift_errorRelease();
    }

    (*(void (**)(char *, uint64_t))(v134 + 8))(v40, v133);
    sub_100071FA4();
    uint64_t v64 = swift_allocError();
    *int64_t v65 = a2;
    swift_errorRetain();
    ((void (*)(uint64_t))v131)(v64);
    swift_errorRelease();
LABEL_20:
    swift_errorRelease();
    return;
  }
  uint64_t v118 = (uint64_t)v19;
  uint64_t v120 = v22;
  uint64_t v116 = v13;
  uint64_t v119 = v30;
  uint64_t v121 = v25;
  uint64_t v117 = v15;
  unint64_t v48 = v132;
  if (!v128)
  {
LABEL_16:
    uint64_t v66 = v36;
    sub_10012AB30();
    swift_bridgeObjectRetain_n();
    uint64_t v67 = sub_10012AB40();
    os_log_type_t v68 = sub_10012CD40();
    if (os_log_type_enabled(v67, v68))
    {
      uint64_t v69 = swift_slowAlloc();
      uint64_t v70 = swift_slowAlloc();
      *(_DWORD *)uint64_t v69 = 141558275;
      uint64_t v135 = 1752392040;
      v136[0] = v70;
      sub_10012CF70();
      *(_WORD *)(v69 + 12) = 2085;
      swift_bridgeObjectRetain();
      uint64_t v135 = sub_100123564(v129, v48, v136);
      sub_10012CF70();
      swift_bridgeObjectRelease_n();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    (*(void (**)(uint64_t, uint64_t))(v134 + 8))(v66, v133);
    sub_100071FA4();
    swift_allocError();
    *uint64_t v71 = 0;
    v131();
    goto LABEL_20;
  }
  uint64_t v49 = v36;
  uint64_t v114 = v39;
  uint64_t v115 = v38;
  id v50 = [v128 mapItems];
  sub_100071FF0();
  unint64_t v51 = sub_10012CBA0();

  if (v51 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v52 = sub_10012D090();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v52 = *(void *)((v51 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v53 = v121;
  uint64_t v54 = v127;
  if (!v52)
  {
    swift_bridgeObjectRelease();
    uint64_t v36 = v49;
    goto LABEL_16;
  }
  sub_1000454D0(0, (v51 & 0xC000000000000001) == 0, v51);
  if ((v51 & 0xC000000000000001) != 0) {
    id v55 = (id)sub_10012CFF0();
  }
  else {
    id v55 = *(id *)(v51 + 32);
  }
  uint64_t v56 = v55;
  swift_bridgeObjectRelease();
  id v57 = [v56 placemark];
  id v58 = [v57 timeZone];

  if (!v58)
  {
    _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v120, 1, 1, v53);
    uint64_t v62 = v118;
    goto LABEL_22;
  }
  sub_100129460();

  int64_t v59 = *(void (**)(char *, char *, uint64_t))(v54 + 32);
  uint64_t v60 = (uint64_t)v120;
  v59(v120, v28, v53);
  _s13WeatherWidget20WeatherDataViewModelOwst_0(v60, 0, 1, v53);
  int v61 = _s13WeatherWidget20WeatherDataViewModelOwet_0(v60, 1, v53);
  uint64_t v62 = v118;
  if (v61 == 1)
  {
LABEL_22:
    id v72 = [v56 timeZone];
    if (v72)
    {
      uint64_t v73 = v72;
      sub_100129460();

      uint64_t v74 = 0;
    }
    else
    {
      uint64_t v74 = 1;
    }
    uint64_t v63 = v119;
    _s13WeatherWidget20WeatherDataViewModelOwst_0(v62, v74, 1, v53);
    sub_100072030(v62, (uint64_t)v24);
    sub_100072098((uint64_t)v120);
    goto LABEL_26;
  }
  v59(v24, v120, v53);
  _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v24, 0, 1, v53);
  uint64_t v63 = v119;
LABEL_26:
  if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v24, 1, v53) == 1)
  {
    sub_100072098((uint64_t)v24);
    uint64_t v75 = v114;
    sub_10012AB30();
    swift_bridgeObjectRetain_n();
    uint64_t v76 = sub_10012AB40();
    os_log_type_t v77 = sub_10012CD40();
    if (os_log_type_enabled(v76, v77))
    {
      uint64_t v78 = swift_slowAlloc();
      uint64_t v79 = swift_slowAlloc();
      *(_DWORD *)uint64_t v78 = 141558275;
      uint64_t v135 = 1752392040;
      v136[0] = v79;
      sub_10012CF70();
      *(_WORD *)(v78 + 12) = 2085;
      swift_bridgeObjectRetain();
      uint64_t v135 = sub_100123564(v129, v48, v136);
      sub_10012CF70();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v76, v77, "Time zone missing while geocoding, searchString=%{sensitive,mask.hash}s.", (uint8_t *)v78, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    (*(void (**)(uint64_t, uint64_t))(v134 + 8))(v75, v133);
    sub_100071FA4();
    swift_allocError();
    *uint64_t v112 = 1;
    v131();
    swift_errorRelease();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v54 + 32))(v63, v24, v53);
    id v80 = [v56 placemark];
    [v80 coordinate];

    uint64_t v81 = sub_10012CF00();
    uint64_t v130 = v82;
    uint64_t v131 = (void (*)(void))v81;
    id v83 = [v56 wc_weatherDisplayName];
    id v128 = (id)sub_10012CA40();
    uint64_t v120 = (char *)v84;

    (*(void (**)(char *, char *, uint64_t))(v54 + 16))(v28, v63, v53);
    uint64_t v85 = (uint64_t)v125;
    sub_1001292F0();
    uint64_t v86 = sub_100129300();
    _s13WeatherWidget20WeatherDataViewModelOwst_0(v85, 0, 1, v86);
    id v87 = [v56 placemark];
    uint64_t v118 = MKPlacemark.safeTitle.getter();
    uint64_t v114 = v88;

    id v89 = [v56 placemark];
    v113[1] = MKPlacemark.safeSubtitle.getter();
    char v90 = v56;
    v113[0] = v91;

    id v92 = [v56 wc_weatherLocationName];
    sub_10012CA40();

    id v93 = [v56 wc_weatherLocationName];
    sub_10012CA40();

    id v94 = [v56 wc_weatherDisplayName];
    sub_10012CA40();

    sub_10012A630();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v95 = v117;
    sub_10012A650();
    sub_10012AB30();
    uint64_t v96 = v122;
    uint64_t v97 = v116;
    uint64_t v98 = v126;
    (*(void (**)(char *, char *, uint64_t))(v122 + 16))(v116, v95, v126);
    swift_bridgeObjectRetain_n();
    id v99 = v90;
    uint64_t v100 = sub_10012AB40();
    os_log_type_t v101 = sub_10012CD60();
    int v102 = v101;
    if (os_log_type_enabled(v100, v101))
    {
      uint64_t v103 = swift_slowAlloc();
      uint64_t v104 = swift_slowAlloc();
      uint64_t v131 = (void (*)(void))v104;
      *(_DWORD *)uint64_t v103 = 141559299;
      uint64_t v135 = 1752392040;
      v136[0] = v104;
      sub_10012CF70();
      *(_WORD *)(v103 + 12) = 2085;
      LODWORD(v130) = v102;
      swift_bridgeObjectRetain();
      uint64_t v135 = sub_100123564(v129, v48, v136);
      sub_10012CF70();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v103 + 22) = 2160;
      uint64_t v135 = 1752392040;
      sub_10012CF70();
      *(_WORD *)(v103 + 32) = 2081;
      uint64_t v105 = sub_10012A660();
      uint64_t v135 = sub_100123564(v105, v106, v136);
      sub_10012CF70();
      swift_bridgeObjectRelease();
      uint64_t v107 = *(void (**)(char *, uint64_t))(v96 + 8);
      v107(v97, v126);
      *(_WORD *)(v103 + 42) = 2160;
      uint64_t v135 = 1752392040;
      sub_10012CF70();
      *(_WORD *)(v103 + 52) = 2081;
      id v108 = [v99 wc_weatherLocationName];
      uint64_t v109 = sub_10012CA40();
      unint64_t v111 = v110;

      uint64_t v135 = sub_100123564(v109, v111, v136);
      uint64_t v95 = v117;
      sub_10012CF70();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v100, (os_log_type_t)v130, "Successfully geocoded location. searchString=%{sensitive,mask.hash}s, location=%{private,mask.hash}s, unsanitizedSecondaryName=%{private,mask.hash}s", (uint8_t *)v103, 0x3Eu);
      swift_arrayDestroy();
      swift_slowDealloc();
      uint64_t v98 = v126;
      swift_slowDealloc();
    }
    else
    {
      swift_bridgeObjectRelease_n();
      uint64_t v107 = *(void (**)(char *, uint64_t))(v96 + 8);
      v107(v97, v98);
    }
    (*(void (**)(uint64_t, uint64_t))(v134 + 8))(v115, v133);
    v124(v95);

    v107(v95, v98);
    (*(void (**)(char *, uint64_t))(v127 + 8))(v119, v121);
  }
}

void sub_100071DDC(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5 = *(void (**)(void *, void *))(a1 + 32);
  swift_retain();
  id v7 = a2;
  id v6 = a3;
  v5(a2, a3);
  swift_release();
}

uint64_t LocalSearchRequestService.deinit()
{
  sub_10000DB48(v0 + 16);
  return v0;
}

uint64_t sub_100071E88(uint64_t a1, uint64_t a2)
{
  return LocalSearchRequestService.performLocalSearch(with:)(a1, a2);
}

uint64_t sub_100071EA0(uint64_t a1)
{
  return LocalSearchRequestService.performLocalSearch(with:calloutTitle:)(a1);
}

void sub_100071EB8(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = sub_10012CA20();
  [a3 setNaturalLanguageQuery:v4];
}

uint64_t type metadata accessor for LocalSearchRequestService()
{
  return self;
}

uint64_t sub_100071F34()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 64, 7);
}

void sub_100071F7C(void *a1, uint64_t a2)
{
  sub_100070D24(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24), *(void (**)(void))(v2 + 32), *(void *)(v2 + 40), *(void (**)(char *))(v2 + 48), *(void *)(v2 + 56));
}

uint64_t sub_100071F8C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100071F9C()
{
  return swift_release();
}

unint64_t sub_100071FA4()
{
  unint64_t result = qword_10016D878;
  if (!qword_10016D878)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016D878);
  }
  return result;
}

unint64_t sub_100071FF0()
{
  unint64_t result = qword_10016D880;
  if (!qword_10016D880)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_10016D880);
  }
  return result;
}

uint64_t sub_100072030(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000053D8(&qword_10016C7C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100072098(uint64_t a1)
{
  uint64_t v2 = sub_1000053D8(&qword_10016C7C0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void *initializeBufferWithCopyOfBuffer for LocalSearchRequestService.LocalSearchRequestError(void *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  if ((unint64_t)*a2 >= 0xFFFFFFFF) {
    swift_errorRetain();
  }
  *a1 = v3;
  return a1;
}

unint64_t destroy for LocalSearchRequestService.LocalSearchRequestError(unint64_t *a1)
{
  unint64_t result = *a1;
  if (result >= 0xFFFFFFFF) {
    return swift_errorRelease();
  }
  return result;
}

unint64_t *assignWithCopy for LocalSearchRequestService.LocalSearchRequestError(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a2;
  if (*a1 < 0xFFFFFFFF)
  {
    if (v3 >= 0xFFFFFFFF) {
      swift_errorRetain();
    }
    *a1 = v3;
  }
  else if (v3 < 0xFFFFFFFF)
  {
    swift_errorRelease();
    *a1 = *a2;
  }
  else
  {
    swift_errorRetain();
    *a1 = v3;
    swift_errorRelease();
  }
  return a1;
}

void *initializeWithTake for LocalSearchRequestService.LocalSearchRequestError(void *result, void *a2)
{
  *unint64_t result = *a2;
  return result;
}

unint64_t *assignWithTake for LocalSearchRequestService.LocalSearchRequestError(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a2;
  if (*a1 < 0xFFFFFFFF) {
    goto LABEL_6;
  }
  if (v3 < 0xFFFFFFFF)
  {
    swift_errorRelease();
LABEL_6:
    *a1 = v3;
    return a1;
  }
  *a1 = v3;
  swift_errorRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for LocalSearchRequestService.LocalSearchRequestError(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFE && *((unsigned char *)a1 + 8)) {
    return (*(_DWORD *)a1 + 2147483646);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 1;
  if (v4 >= 3) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for LocalSearchRequestService.LocalSearchRequestError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(void *)unint64_t result = 0;
    *(_DWORD *)unint64_t result = a2 - 2147483646;
    if (a3 >= 0x7FFFFFFE) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFE) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2) {
      *(void *)unint64_t result = a2 + 1;
    }
  }
  return result;
}

uint64_t sub_100072300(uint64_t *a1)
{
  uint64_t v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

void *sub_100072318(void *result, int a2)
{
  if (a2 < 0)
  {
    unsigned int v2 = a2 ^ 0x80000000;
  }
  else
  {
    if (!a2) {
      return result;
    }
    unsigned int v2 = a2 - 1;
  }
  *unint64_t result = v2;
  return result;
}

ValueMetadata *type metadata accessor for LocalSearchRequestService.LocalSearchRequestError()
{
  return &type metadata for LocalSearchRequestService.LocalSearchRequestError;
}

uint64_t sub_100072350(uint64_t a1)
{
  return sub_10007243C(a1, qword_100181BC8);
}

uint64_t sub_100072374(uint64_t a1)
{
  return sub_10007243C(a1, qword_100181BE0);
}

uint64_t sub_100072398(uint64_t a1)
{
  return sub_10007243C(a1, qword_100181BF8);
}

uint64_t sub_1000723C4(uint64_t a1)
{
  return sub_1000724B4(a1, qword_100181C10);
}

uint64_t sub_1000723EC(uint64_t a1)
{
  return sub_1000724B4(a1, qword_100181C28);
}

uint64_t sub_100072414(uint64_t a1)
{
  return sub_1000724B4(a1, qword_100181C40);
}

uint64_t sub_10007243C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_10012AB60();
  sub_10006D284(v3, a2);
  sub_10000D7A4(v3, (uint64_t)a2);
  return sub_10012AB50();
}

uint64_t sub_1000724B4(uint64_t a1, uint64_t *a2)
{
  return sub_10007243C(a1, a2);
}

unint64_t static LocalSearchRequestManager.dependencyKey.getter()
{
  return 0xD00000000000001DLL;
}

double sub_1000724D8()
{
  uint64_t v1 = sub_10012A190();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  unsigned int v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000D890((void *)(v0 + 16), *(void *)(v0 + 40));
  sub_10012A490();
  sub_10012A170();
  double v6 = v5;
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return v6;
}

uint64_t sub_1000725D4@<X0>(uint64_t a1@<X8>)
{
  swift_beginAccess();
  sub_100016CAC(v1 + 80, (uint64_t)v4, &qword_10016D888);
  if (v5 != 1) {
    return sub_100074170((uint64_t)v4, a1);
  }
  sub_100016D10((uint64_t)v4, &qword_10016D888);
  sub_1000726A4(v1, a1);
  sub_100016CAC(a1, (uint64_t)v4, &qword_10016D960);
  swift_beginAccess();
  sub_100074108((uint64_t)v4, v1 + 80);
  return swift_endAccess();
}

uint64_t sub_1000726A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_10012AB60();
  uint64_t v5 = __chkstk_darwin(v4);
  (*(void (**)(void *__return_ptr, uint64_t))(a1 + 120))(v9, v5);
  sub_100129FD0();
  sub_100129FC0();
  sub_100129F50();
  sub_100129FB0();
  swift_release();
  swift_release();
  sub_10000D890(v9, v9[3]);
  sub_10012A1D0();
  if (v8 == 1)
  {
    sub_100129F50();
    sub_1000742C4(&qword_10016D968, v6, (void (*)(uint64_t))type metadata accessor for LocalSearchRequestManager);
    sub_100129FE0();
    swift_release();
  }
  sub_100074220((uint64_t)v9, a2);
  return sub_10000DB48((uint64_t)v9);
}

BOOL sub_100072A50()
{
  uint64_t v0 = sub_1000053D8(&qword_10016C7B0);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)&v15 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_100129300();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(v3);
  id v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v15 - v8;
  sub_10012A610();
  if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v2, 1, v3) == 1)
  {
    sub_100016D10((uint64_t)v2, &qword_10016C7B0);
    return 1;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v9, v2, v3);
    double v11 = sub_1000724D8();
    sub_1001292F0();
    sub_100129240();
    double v13 = v12;
    uint64_t v14 = *(void (**)(char *, uint64_t))(v4 + 8);
    v14(v7, v3);
    v14(v9, v3);
    return v11 <= v13;
  }
}

uint64_t LocalSearchRequestManager.__allocating_init(service:store:appConfigurationManager:queue:)()
{
  sub_100074360();
  uint64_t v0 = sub_10007433C();

  return sub_100073B48(v0, v1, v2, v3, v4, v5, v6, v7);
}

uint64_t LocalSearchRequestManager.init(service:store:appConfigurationManager:queue:)()
{
  sub_100074360();
  uint64_t v0 = sub_10007433C();

  return sub_100073BD8(v0, v1, v2, v3, v4, v5, v6, v7);
}

uint64_t LocalSearchRequestManager.performLocalSearch(with:)(uint64_t a1, uint64_t a2)
{
  sub_100074328();
  uint64_t v5 = (void *)swift_allocObject();
  void v5[2] = a1;
  v5[3] = a2;
  v5[4] = v2;
  sub_10012A6B0();
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v6 = sub_10012A8F0();
  swift_release();
  return v6;
}

uint64_t sub_100072D78()
{
  return sub_10012A7D0();
}

uint64_t sub_100072DD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v32 = *a4;
  uint64_t v7 = sub_1000053D8(&qword_10016C738);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10012A6B0();
  uint64_t v30 = *(void *)(v10 - 8);
  uint64_t v11 = __chkstk_darwin(v10);
  double v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v25 - v14;
  sub_100129FD0();
  sub_100129FC0();
  sub_100129F60();
  sub_100129FB0();
  swift_release();
  swift_release();
  if (v35[0]) {
    goto LABEL_9;
  }
  uint64_t v27 = v9;
  uint64_t v28 = a3;
  uint64_t v25 = v13;
  uint64_t v26 = v15;
  uint64_t v29 = v10;
  uint64_t v31 = a2;
  sub_1000725D4((uint64_t)v35);
  if (!v36)
  {
    sub_100016D10((uint64_t)v35, &qword_10016D960);
    uint64_t v16 = (uint64_t)v27;
    _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v27, 1, 1, v29);
    a3 = v28;
    goto LABEL_8;
  }
  sub_100074220((uint64_t)v35, (uint64_t)v33);
  sub_100016D10((uint64_t)v35, &qword_10016D960);
  sub_10000D890(v33, v34);
  uint64_t v16 = (uint64_t)v27;
  a3 = v28;
  sub_10012A1B0();
  sub_10000DB48((uint64_t)v33);
  uint64_t v17 = v29;
  if (_s13WeatherWidget20WeatherDataViewModelOwet_0(v16, 1, v29) == 1)
  {
LABEL_8:
    sub_100016D10(v16, &qword_10016C738);
    a2 = v31;
    goto LABEL_9;
  }
  uint64_t v18 = v30;
  uint64_t v19 = v26;
  (*(void (**)(char *, uint64_t, uint64_t))(v30 + 32))(v26, v16, v17);
  if (!sub_100072A50())
  {
    (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v25, v19, v17);
    sub_1000053D8(&qword_10016D7D0);
    swift_allocObject();
    uint64_t v23 = sub_10012A8C0();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v19, v17);
    return v23;
  }
  sub_1000725D4((uint64_t)v35);
  if (v36)
  {
    sub_100074220((uint64_t)v35, (uint64_t)v33);
    sub_100016D10((uint64_t)v35, &qword_10016D960);
    sub_10000D890(v33, v34);
    sub_10012A1C0();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v19, v17);
    sub_10000DB48((uint64_t)v33);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v18 + 8))(v19, v17);
    sub_100016D10((uint64_t)v35, &qword_10016D960);
  }
  a2 = v31;
  a3 = v28;
LABEL_9:
  uint64_t v20 = *(void *)(a1 + 64);
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 8))(a2, a3, ObjectType, v20);
  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 16) = a2;
  *(void *)(v22 + 24) = a3;
  swift_bridgeObjectRetain();
  uint64_t v23 = sub_10012A8A0();
  swift_release();
  swift_release();
  return v23;
}

uint64_t LocalSearchRequestManager.performLocalSearch(with:calloutTitle:)(void *a1, uint64_t a2, uint64_t a3)
{
  sub_100074328();
  uint64_t v7 = (void *)swift_allocObject();
  v7[2] = a2;
  v7[3] = a3;
  v7[4] = a1;
  v7[5] = v3;
  sub_10012A6B0();
  swift_bridgeObjectRetain();
  id v8 = a1;
  swift_retain();
  uint64_t v9 = sub_10012A8F0();
  swift_release();
  return v9;
}

uint64_t sub_100073310()
{
  return sub_10012A7D0();
}

uint64_t sub_100073370(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v32 = *a5;
  uint64_t v33 = a3;
  uint64_t v9 = sub_1000053D8(&qword_10016C738);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10012A6B0();
  uint64_t v30 = *(void *)(v12 - 8);
  uint64_t v13 = __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v26 - v16;
  sub_100129FD0();
  sub_100129FC0();
  sub_100129F60();
  sub_100129FB0();
  swift_release();
  uint64_t v18 = v12;
  uint64_t v19 = v33;
  swift_release();
  if (v36[0]) {
    goto LABEL_9;
  }
  uint64_t v27 = v15;
  uint64_t v28 = a5;
  uint64_t v29 = a2;
  uint64_t v31 = a1;
  sub_1000725D4((uint64_t)v36);
  if (!v37)
  {
    sub_100016D10((uint64_t)v36, &qword_10016D960);
    _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v11, 1, 1, v18);
    a2 = v29;
    goto LABEL_8;
  }
  sub_100074220((uint64_t)v36, (uint64_t)v34);
  sub_100016D10((uint64_t)v36, &qword_10016D960);
  sub_10000D890(v34, v35);
  a2 = v29;
  sub_10012A1B0();
  sub_10000DB48((uint64_t)v34);
  if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v11, 1, v18) == 1)
  {
LABEL_8:
    sub_100016D10((uint64_t)v11, &qword_10016C738);
    a1 = v31;
    goto LABEL_9;
  }
  uint64_t v20 = v30;
  (*(void (**)(char *, char *, uint64_t))(v30 + 32))(v17, v11, v18);
  if (!sub_100072A50())
  {
    (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v27, v17, v18);
    sub_1000053D8(&qword_10016D7D0);
    swift_allocObject();
    uint64_t v24 = sub_10012A8C0();
    (*(void (**)(char *, uint64_t))(v20 + 8))(v17, v18);
    return v24;
  }
  sub_1000725D4((uint64_t)v36);
  if (v37)
  {
    sub_100074220((uint64_t)v36, (uint64_t)v34);
    sub_100016D10((uint64_t)v36, &qword_10016D960);
    sub_10000D890(v34, v35);
    sub_10012A1C0();
    (*(void (**)(char *, uint64_t))(v20 + 8))(v17, v18);
    sub_10000DB48((uint64_t)v34);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v20 + 8))(v17, v18);
    sub_100016D10((uint64_t)v36, &qword_10016D960);
  }
  a1 = v31;
  a2 = v29;
LABEL_9:
  uint64_t v21 = *(void *)(v19 + 64);
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v21 + 16))(a4, a1, a2, ObjectType, v21);
  uint64_t v23 = swift_allocObject();
  *(void *)(v23 + 16) = a1;
  *(void *)(v23 + 24) = a2;
  swift_bridgeObjectRetain();
  uint64_t v24 = sub_10012A8A0();
  swift_release();
  swift_release();
  return v24;
}

uint64_t sub_1000737E8(uint64_t a1)
{
  uint64_t v3 = sub_10012A6B0();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000725D4((uint64_t)v9);
  if (v10)
  {
    sub_100074220((uint64_t)v9, (uint64_t)v8);
    sub_100016D10((uint64_t)v9, &qword_10016D960);
    uint64_t v11 = v1;
    sub_10000D890(v8, v8[3]);
    sub_10012A1A0();
    sub_10000DB48((uint64_t)v8);
  }
  else
  {
    sub_100016D10((uint64_t)v9, &qword_10016D960);
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a1, v3);
  sub_1000053D8(&qword_10016D7D0);
  swift_allocObject();
  return sub_10012A8C0();
}

uint64_t LocalSearchRequestManager.deinit()
{
  sub_10000DB48(v0 + 16);
  swift_unknownObjectRelease();
  swift_release();
  sub_100016D10(v0 + 80, &qword_10016D888);
  swift_release();

  return v0;
}

uint64_t LocalSearchRequestManager.__deallocating_deinit()
{
  LocalSearchRequestManager.deinit();

  return _swift_deallocClassInstance(v0, 144, 7);
}

uint64_t sub_1000739FC()
{
  return sub_100129FE0();
}

uint64_t sub_100073A2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return Updatable.reset<A>(setting:)(a1, *v5, a5);
}

uint64_t sub_100073A5C(uint64_t a1)
{
  return Updatable.apply(preset:)(a1, *v1);
}

uint64_t sub_100073A88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return Configurable.setting<A>(_:)(a1, *v5, a5);
}

uint64_t sub_100073AB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return Configurable.setting<A>(_:defaultValue:)(a1, a2, *v6, a6);
}

uint64_t sub_100073AE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return Configurable.setting<A>(_:_:)(a1, a2, a3, *v7, a7);
}

uint64_t sub_100073B18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return Configurable.setting<A>(_:defaultValue:_:)(a1, a2, a3, a4, *v8, a8);
}

uint64_t sub_100073B48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v15 = swift_allocObject();

  return sub_100073BD8(a1, a2, a3, a4, a5, v15, a7, a8);
}

uint64_t sub_100073BD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v26 = a2;
  uint64_t v27 = a8;
  uint64_t v25 = sub_10012CE00();
  uint64_t v23 = *(void *)(v25 - 8);
  __chkstk_darwin(v25);
  uint64_t v24 = (char *)v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_10012CDF0();
  __chkstk_darwin(v21);
  uint64_t v22 = (char *)v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_10012B860();
  __chkstk_darwin(v15 - 8);
  v20[1] = (char *)v20 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_10012A810();
  __chkstk_darwin(v17);
  uint64_t v28 = &_swiftEmptyArrayStorage;
  sub_1000742C4((unint64_t *)&qword_10016AEF0, 255, (void (*)(uint64_t))&type metadata accessor for PromiseDeduperFlags);
  sub_1000053D8(&qword_10016AEF8);
  sub_1000468D8((unint64_t *)&qword_10016AF00, &qword_10016AEF8);
  sub_10012CFC0();
  sub_1000053D8(&qword_10016AF08);
  swift_allocObject();
  *(void *)(a6 + 72) = sub_10012A7C0();
  *(void *)(a6 + 80) = 0;
  *(void *)(a6 + 88) = 0;
  *(void *)(a6 + 96) = 0;
  *(_OWORD *)(a6 + 104) = xmmword_10012F2D0;
  uint64_t v18 = v27;
  *(void *)(a6 + 56) = a1;
  *(void *)(a6 + 64) = v18;
  *(void *)(a6 + 120) = v26;
  *(void *)(a6 + 128) = a3;
  sub_100074220(a4, a6 + 16);
  if (!a5)
  {
    sub_100074284();
    swift_unknownObjectRetain();
    swift_retain();
    sub_10012B840();
    uint64_t v28 = &_swiftEmptyArrayStorage;
    sub_1000742C4(&qword_10016D978, 255, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
    sub_1000053D8(&qword_10016D980);
    sub_1000468D8(&qword_10016D988, &qword_10016D980);
    sub_10012CFC0();
    (*(void (**)(char *, void, uint64_t))(v23 + 104))(v24, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v25);
    a5 = sub_10012CE20();
    swift_unknownObjectRelease();
    swift_release();
  }
  sub_10000DB48(a4);
  *(void *)(a6 + 136) = a5;
  return a6;
}

uint64_t sub_100073FA8()
{
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100073FE8()
{
  return sub_100072D78();
}

uint64_t sub_100074008()
{
  swift_bridgeObjectRelease();

  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_100074050()
{
  return sub_100073310();
}

uint64_t sub_100074070(uint64_t a1, uint64_t a2)
{
  return sub_1000742C4(&qword_10016D890, a2, (void (*)(uint64_t))type metadata accessor for LocalSearchRequestManager);
}

uint64_t type metadata accessor for LocalSearchRequestManager()
{
  return self;
}

uint64_t sub_1000740DC()
{
  return sub_100073370(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void **)(v0 + 48));
}

uint64_t sub_1000740EC(uint64_t a1)
{
  return sub_1000737E8(a1);
}

uint64_t sub_100074108(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000053D8(&qword_10016D888);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_100074170(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000053D8(&qword_10016D960);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000741DC()
{
  return sub_100072DD4(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(uint64_t **)(v0 + 40));
}

uint64_t sub_1000741E8()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100074220(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

unint64_t sub_100074284()
{
  unint64_t result = qword_10016D970;
  if (!qword_10016D970)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_10016D970);
  }
  return result;
}

uint64_t sub_1000742C4(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100074310(uint64_t a1)
{
  return sub_1000740EC(a1);
}

uint64_t sub_10007433C()
{
  return v0;
}

uint64_t sub_100074360()
{
  return swift_getObjectType();
}

uint64_t *sub_100074388(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  return sub_100078AAC(a1, a2, a3, &qword_10016B088, (void (*)(uint64_t))&type metadata accessor for WidgetRenderingMode);
}

uint64_t sub_1000743A8(uint64_t a1, uint64_t a2)
{
  return sub_100078BFC(a1, a2, &qword_10016B088, (void (*)(uint64_t))&type metadata accessor for WidgetRenderingMode);
}

uint64_t sub_1000743C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100078D04(a1, a2, a3, &qword_10016B088, (void (*)(uint64_t))&type metadata accessor for WidgetRenderingMode);
}

uint64_t sub_1000743E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100078E04(a1, a2, a3, &qword_10016B088, (void (*)(uint64_t))&type metadata accessor for WidgetRenderingMode);
}

uint64_t sub_100074408()
{
  return sub_100078F20();
}

uint64_t sub_100074428()
{
  return sub_10007901C();
}

uint64_t sub_100074448(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10007445C);
}

uint64_t sub_10007445C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100079134(a1, a2, a3, &qword_10016B0B0);
}

uint64_t sub_100074468(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10007447C);
}

uint64_t sub_10007447C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return sub_1000791C8(a1, a2, a3, a4, &qword_10016B0B0);
}

uint64_t type metadata accessor for SmallCurrentObservationView(uint64_t a1)
{
  return sub_10001A270(a1, qword_10016D9E8);
}

void sub_1000744A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

uint64_t sub_1000744C8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1000744E4@<X0>(uint64_t *a1@<X8>)
{
  *a1 = sub_10012B7A0();
  a1[1] = v3;
  uint64_t v4 = (char *)a1 + *(int *)(sub_1000053D8(&qword_10016DA20) + 44);
  *(void *)uint64_t v4 = sub_10012B000();
  *((void *)v4 + 1) = 0;
  v4[16] = 0;
  uint64_t v5 = sub_1000053D8(&qword_10016DA28);
  return sub_100074548(v1, (uint64_t)&v4[*(int *)(v5 + 44)]);
}

uint64_t sub_100074548@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v81 = a2;
  uint64_t v84 = type metadata accessor for SmallConditionDescriptionView(0);
  __chkstk_darwin(v84);
  os_log_type_t v77 = (char *)&v68 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v83 = sub_1000053D8(&qword_10016DA30);
  __chkstk_darwin(v83);
  uint64_t v79 = (uint64_t)&v68 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10012BBA0();
  uint64_t v72 = *(void *)(v5 - 8);
  uint64_t v73 = v5;
  __chkstk_darwin(v5);
  uint64_t v69 = (char *)&v68 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10012C250();
  uint64_t v70 = *(void *)(v7 - 8);
  uint64_t v71 = v7;
  __chkstk_darwin(v7);
  uint64_t v74 = (char *)&v68 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v82 = sub_10012C610();
  uint64_t v9 = *(void *)(v82 - 8);
  __chkstk_darwin(v82);
  uint64_t v76 = (char *)&v68 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v78 = sub_1000053D8(&qword_10016DA38);
  __chkstk_darwin(v78);
  uint64_t v75 = (char *)&v68 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1000053D8(&qword_10016DA40);
  uint64_t v13 = __chkstk_darwin(v12 - 8);
  id v80 = (char *)&v68 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v68 - v15;
  uint64_t v17 = sub_1000053D8(&qword_10016DA48);
  __chkstk_darwin(v17 - 8);
  uint64_t v19 = (char *)&v68 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_1000053D8(&qword_10016DA50);
  uint64_t v21 = v20 - 8;
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v24 = (char *)&v68 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = __chkstk_darwin(v22);
  uint64_t v27 = (char *)&v68 - v26;
  __chkstk_darwin(v25);
  uint64_t v29 = (char *)&v68 - v28;
  *uint64_t v19 = sub_10012B170();
  uint64_t v30 = sub_1000053D8(&qword_10016DA58);
  sub_100074D08(a1, (uint64_t)&v19[*(int *)(v30 + 44)]);
  char v31 = sub_10012B1B0();
  sub_10012AB70();
  uint64_t v33 = v32;
  uint64_t v35 = v34;
  uint64_t v37 = v36;
  uint64_t v39 = v38;
  sub_100079444((uint64_t)v19, (uint64_t)v27, &qword_10016DA48);
  int v40 = &v27[*(int *)(v21 + 44)];
  *int v40 = v31;
  *((void *)v40 + 1) = v33;
  *((void *)v40 + 2) = v35;
  *((void *)v40 + 3) = v37;
  *((void *)v40 + 4) = v39;
  v40[40] = 0;
  sub_1000235F8((uint64_t)v19, &qword_10016DA48);
  sub_100079490((uint64_t)v27, (uint64_t)v29, &qword_10016DA50);
  uint64_t v41 = sub_10012C540();
  unint64_t v43 = v42;
  swift_bridgeObjectRelease();
  uint64_t v44 = HIBYTE(v43) & 0xF;
  if ((v43 & 0x2000000000000000) == 0) {
    uint64_t v44 = v41 & 0xFFFFFFFFFFFFLL;
  }
  if (v44)
  {
    uint64_t v45 = (uint64_t)v77;
    (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v77, a1, v82);
    uint64_t v46 = sub_10012C540();
    unint64_t v47 = (uint64_t *)(v45 + *(int *)(v84 + 20));
    uint64_t *v47 = v46;
    v47[1] = v48;
    sub_100075728(v45, v79, (void (*)(void))type metadata accessor for SmallConditionDescriptionView);
    swift_storeEnumTagMultiPayload();
    sub_100075664();
    sub_100077BE8(&qword_10016DA68, (void (*)(uint64_t))type metadata accessor for SmallConditionDescriptionView);
    sub_10012B0E0();
    sub_100075778(v45, (void (*)(void))type metadata accessor for SmallConditionDescriptionView);
    uint64_t v49 = v81;
  }
  else
  {
    id v50 = v76;
    unint64_t v51 = v74;
    uint64_t v52 = v9;
    uint64_t v53 = v82;
    os_log_type_t v77 = v16;
    char v54 = sub_10012C5B0();
    uint64_t v49 = v81;
    uint64_t v55 = v84;
    uint64_t v56 = v79;
    if (v54)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v52 + 16))(v50, a1, v53);
      sub_10012C530();
      id v57 = v69;
      sub_10012C240();
      (*(void (**)(char *, uint64_t))(v70 + 8))(v51, v71);
      uint64_t v58 = sub_10012BB50();
      uint64_t v60 = v59;
      (*(void (**)(char *, uint64_t))(v72 + 8))(v57, v73);
      uint64_t v61 = (uint64_t)v75;
      (*(void (**)(char *, char *, uint64_t))(v52 + 32))(v75, v76, v82);
      uint64_t v55 = v84;
      uint64_t v62 = 0;
      uint64_t v63 = (uint64_t *)(v61 + *(int *)(v84 + 20));
      *uint64_t v63 = v58;
      v63[1] = v60;
    }
    else
    {
      uint64_t v62 = 1;
      uint64_t v61 = (uint64_t)v75;
    }
    _s13WeatherWidget20WeatherDataViewModelOwst_0(v61, v62, 1, v55);
    sub_100079444(v61, v56, &qword_10016DA38);
    swift_storeEnumTagMultiPayload();
    sub_100075664();
    sub_100077BE8(&qword_10016DA68, (void (*)(uint64_t))type metadata accessor for SmallConditionDescriptionView);
    uint64_t v16 = v77;
    sub_10012B0E0();
    sub_1000235F8(v61, &qword_10016DA38);
  }
  uint64_t v64 = (uint64_t)v80;
  sub_100079444((uint64_t)v29, (uint64_t)v24, &qword_10016DA50);
  sub_100079444((uint64_t)v16, v64, &qword_10016DA40);
  sub_100079444((uint64_t)v24, v49, &qword_10016DA50);
  uint64_t v65 = sub_1000053D8(&qword_10016DA70);
  sub_100079444(v64, v49 + *(int *)(v65 + 48), &qword_10016DA40);
  uint64_t v66 = v49 + *(int *)(v65 + 64);
  *(void *)uint64_t v66 = 0;
  *(unsigned char *)(v66 + 8) = 1;
  sub_1000235F8((uint64_t)v16, &qword_10016DA40);
  sub_1000235F8((uint64_t)v29, &qword_10016DA50);
  sub_1000235F8(v64, &qword_10016DA40);
  return sub_1000235F8((uint64_t)v24, &qword_10016DA50);
}

uint64_t sub_100074D08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for SmallLocationView(0);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v20 - v8;
  uint64_t v10 = sub_1000053D8(&qword_10016DA78);
  uint64_t v11 = __chkstk_darwin(v10 - 8);
  uint64_t v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v20 - v14;
  *(void *)uint64_t v15 = sub_10012AF10();
  *((void *)v15 + 1) = 0;
  v15[16] = 1;
  uint64_t v16 = sub_1000053D8(&qword_10016DA80);
  sub_100074F14(a1, (uint64_t)&v15[*(int *)(v16 + 44)]);
  uint64_t v17 = sub_10012C610();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 16))(v9, a1, v17);
  sub_100079444((uint64_t)v15, (uint64_t)v13, &qword_10016DA78);
  sub_100075728((uint64_t)v9, (uint64_t)v7, (void (*)(void))type metadata accessor for SmallLocationView);
  sub_100079444((uint64_t)v13, a2, &qword_10016DA78);
  uint64_t v18 = sub_1000053D8(&qword_10016DA88);
  sub_100075728((uint64_t)v7, a2 + *(int *)(v18 + 48), (void (*)(void))type metadata accessor for SmallLocationView);
  sub_100075778((uint64_t)v9, (void (*)(void))type metadata accessor for SmallLocationView);
  sub_1000235F8((uint64_t)v15, &qword_10016DA78);
  sub_100075778((uint64_t)v7, (void (*)(void))type metadata accessor for SmallLocationView);
  return sub_1000235F8((uint64_t)v13, &qword_10016DA78);
}

uint64_t sub_100074F14@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v59 = a2;
  uint64_t v57 = sub_1000053D8(&qword_10016DA90);
  __chkstk_darwin(v57);
  uint64_t v58 = (uint64_t *)((char *)&v53 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v65 = sub_10012C7F0();
  uint64_t v63 = *(void *)(v65 - 8);
  uint64_t v4 = __chkstk_darwin(v65);
  uint64_t v6 = (char *)&v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v53 - v7;
  uint64_t v9 = sub_1000053D8(&qword_10016DA98);
  __chkstk_darwin(v9 - 8);
  uint64_t v56 = (char *)&v53 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = sub_10012BBA0();
  uint64_t v55 = *(void *)(v60 - 8);
  __chkstk_darwin(v60);
  uint64_t v12 = (char *)&v53 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = sub_10012C250();
  uint64_t v13 = *(void *)(v54 - 8);
  __chkstk_darwin(v54);
  uint64_t v15 = (char *)&v53 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = type metadata accessor for SmallCurrentObservationView(0);
  __chkstk_darwin(v61);
  uint64_t v17 = (char *)&v53 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = sub_1000053D8(&qword_10016DAA0);
  uint64_t v18 = __chkstk_darwin(v62);
  uint64_t v68 = (uint64_t)&v53 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v22 = (uint64_t *)((char *)&v53 - v21);
  __chkstk_darwin(v20);
  uint64_t v67 = (uint64_t)&v53 - v23;
  uint64_t v24 = type metadata accessor for SmallLocationView(0);
  uint64_t v25 = __chkstk_darwin(v24 - 8);
  uint64_t v66 = (uint64_t)&v53 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  uint64_t v28 = (char *)&v53 - v27;
  uint64_t v29 = sub_10012C610();
  uint64_t v30 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v29 - 8) + 16);
  uint64_t v64 = v28;
  v30(v28, a1, v29);
  sub_10012C570();
  uint64_t v32 = v31;
  sub_100075728(a1, (uint64_t)v17, (void (*)(void))type metadata accessor for SmallCurrentObservationView);
  if (!v32)
  {
    sub_10012C530();
    sub_10012C240();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v54);
    sub_10012BB60();
    (*(void (**)(char *, uint64_t))(v55 + 8))(v12, v60);
  }
  sub_100075778((uint64_t)v17, (void (*)(void))type metadata accessor for SmallCurrentObservationView);
  uint64_t v60 = sub_10012B620();
  uint64_t v33 = sub_10012B5C0();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v35 = sub_10012C600();
  uint64_t v36 = swift_getKeyPath();
  sub_10008F028((uint64_t)v8);
  sub_10012C7E0();
  char v37 = sub_10012C7B0();
  uint64_t v38 = *(void (**)(char *, uint64_t))(v63 + 8);
  uint64_t v39 = v65;
  v38(v6, v65);
  v38(v8, v39);
  uint64_t v40 = (uint64_t)v56;
  if (v37) {
    sub_10012B030();
  }
  else {
    sub_10012B020();
  }
  unint64_t v42 = v58;
  uint64_t v41 = v59;
  uint64_t v43 = v57;
  uint64_t v44 = sub_10012B040();
  _s13WeatherWidget20WeatherDataViewModelOwst_0(v40, 0, 1, v44);
  uint64_t v45 = swift_getKeyPath();
  sub_100079444(v40, (uint64_t)v42 + *(int *)(v43 + 28), &qword_10016DA98);
  *unint64_t v42 = v45;
  sub_100079444((uint64_t)v42, (uint64_t)v22 + *(int *)(v62 + 36), &qword_10016DA90);
  *uint64_t v22 = v60;
  v22[1] = KeyPath;
  void v22[2] = v33;
  v22[3] = v36;
  v22[4] = v35;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1000235F8((uint64_t)v42, &qword_10016DA90);
  sub_1000235F8(v40, &qword_10016DA98);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v46 = v67;
  sub_100079490((uint64_t)v22, v67, &qword_10016DAA0);
  uint64_t v47 = (uint64_t)v64;
  uint64_t v48 = v66;
  sub_100075728((uint64_t)v64, v66, (void (*)(void))type metadata accessor for SmallLocationView);
  uint64_t v49 = v68;
  sub_100079444(v46, v68, &qword_10016DAA0);
  sub_100075728(v48, v41, (void (*)(void))type metadata accessor for SmallLocationView);
  uint64_t v50 = sub_1000053D8(&qword_10016DAA8);
  uint64_t v51 = v41 + *(int *)(v50 + 48);
  *(void *)uint64_t v51 = 0x4010000000000000;
  *(unsigned char *)(v51 + 8) = 0;
  sub_100079444(v49, v41 + *(int *)(v50 + 64), &qword_10016DAA0);
  sub_1000235F8(v46, &qword_10016DAA0);
  sub_100075778(v47, (void (*)(void))type metadata accessor for SmallLocationView);
  sub_1000235F8(v49, &qword_10016DAA0);
  return sub_100075778(v48, (void (*)(void))type metadata accessor for SmallLocationView);
}

uint64_t type metadata accessor for SmallConditionDescriptionView(uint64_t a1)
{
  return sub_10001A270(a1, qword_10016DB08);
}

unint64_t sub_100075664()
{
  unint64_t result = qword_10016DA60;
  if (!qword_10016DA60)
  {
    sub_100005470(&qword_10016DA38);
    sub_100077BE8(&qword_10016DA68, (void (*)(uint64_t))type metadata accessor for SmallConditionDescriptionView);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016DA60);
  }
  return result;
}

uint64_t type metadata accessor for SmallLocationView(uint64_t a1)
{
  return sub_10001A270(a1, qword_10016DB98);
}

uint64_t sub_100075728(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100079884();
  uint64_t v4 = sub_10000B430();
  v5(v4);
  return a2;
}

uint64_t sub_100075778(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_10000B3FC();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_1000757D0@<X0>(uint64_t a1@<X8>)
{
  *(void *)a1 = sub_10012B000();
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 0;
  uint64_t v3 = sub_1000053D8(&qword_10016DBE0);
  return sub_100075818(v1, a1 + *(int *)(v3 + 44));
}

uint64_t sub_100075818@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  v18[1] = a2;
  uint64_t v3 = sub_10012C610();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for SmallLocationText(0);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1000053D8(&qword_10016DBE8);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1000053D8(&qword_10016DBF0);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (sub_10012C510())
  {
    *(void *)uint64_t v15 = sub_10012AF10();
    *((void *)v15 + 1) = 0;
    v15[16] = 1;
    uint64_t v16 = sub_1000053D8(&qword_10016DC08);
    sub_100075BD8(a1, (uint64_t)&v15[*(int *)(v16 + 44)]);
    sub_100079444((uint64_t)v15, (uint64_t)v12, &qword_10016DBF0);
    swift_storeEnumTagMultiPayload();
    sub_10000B38C(&qword_10016DBF8, &qword_10016DBF0);
    sub_100077BE8(&qword_10016DC00, (void (*)(uint64_t))type metadata accessor for SmallLocationText);
    sub_10012B0E0();
    return sub_1000235F8((uint64_t)v15, &qword_10016DBF0);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a1, v3);
    *(void *)&v9[*(int *)(v7 + 20)] = swift_getKeyPath();
    sub_1000053D8(&qword_10016B9E0);
    swift_storeEnumTagMultiPayload();
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v9, v6, v3);
    sub_100075728((uint64_t)v9, (uint64_t)v12, (void (*)(void))type metadata accessor for SmallLocationText);
    swift_storeEnumTagMultiPayload();
    sub_10000B38C(&qword_10016DBF8, &qword_10016DBF0);
    sub_100077BE8(&qword_10016DC00, (void (*)(uint64_t))type metadata accessor for SmallLocationText);
    sub_10012B0E0();
    return sub_100075778((uint64_t)v9, (void (*)(void))type metadata accessor for SmallLocationText);
  }
}

uint64_t sub_100075BD8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v54 = a2;
  uint64_t v52 = sub_1000053D8(&qword_10016DC10) - 8;
  __chkstk_darwin(v52);
  uint64_t v51 = (uint64_t *)((char *)&v38 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v49 = sub_10012B660();
  uint64_t v4 = *(void *)(v49 - 8);
  __chkstk_darwin(v49);
  uint64_t v6 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = sub_1000053D8(&qword_10016DC18) - 8;
  uint64_t v7 = __chkstk_darwin(v48);
  uint64_t v9 = (uint64_t *)((char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v7);
  uint64_t v53 = (uint64_t)&v38 - v10;
  uint64_t v11 = sub_10012C610();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for SmallLocationText(0);
  uint64_t v16 = v15 - 8;
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v50 = (uint64_t)&v38 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v38 - v19;
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, a1, v11);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v22 = (uint64_t *)&v20[*(int *)(v16 + 28)];
  uint64_t v41 = v20;
  *uint64_t v22 = KeyPath;
  sub_1000053D8(&qword_10016B9E0);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v20, v14, v11);
  sub_10012B7A0();
  sub_10012ABC0();
  uint64_t v47 = v55;
  int v46 = v56;
  uint64_t v45 = v57;
  int v44 = v58;
  uint64_t v42 = v60;
  uint64_t v43 = v59;
  sub_10012C5D0();
  uint64_t v40 = sub_10012B620();
  uint64_t v23 = sub_10012B5C0();
  uint64_t v24 = swift_getKeyPath();
  uint64_t v25 = sub_10012C600();
  uint64_t v26 = swift_getKeyPath();
  uint64_t v39 = v4;
  uint64_t v27 = v49;
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, enum case for Image.Scale.small(_:), v49);
  uint64_t v28 = swift_getKeyPath();
  uint64_t v29 = v51;
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))((char *)v51 + *(int *)(v52 + 36), v6, v27);
  *uint64_t v29 = v28;
  sub_100079444((uint64_t)v29, (uint64_t)v9 + *(int *)(v48 + 44), &qword_10016DC10);
  *uint64_t v9 = v40;
  v9[1] = v24;
  v9[2] = v23;
  v9[3] = v26;
  void v9[4] = v25;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1000235F8((uint64_t)v29, &qword_10016DC10);
  (*(void (**)(char *, uint64_t))(v39 + 8))(v6, v27);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v30 = v53;
  sub_100079490((uint64_t)v9, v53, &qword_10016DC18);
  uint64_t v31 = (uint64_t)v41;
  uint64_t v32 = v50;
  sub_100075728((uint64_t)v41, v50, (void (*)(void))type metadata accessor for SmallLocationText);
  sub_100079444(v30, (uint64_t)v9, &qword_10016DC18);
  uint64_t v33 = v54;
  sub_100075728(v32, v54, (void (*)(void))type metadata accessor for SmallLocationText);
  uint64_t v34 = sub_1000053D8(&qword_10016DC20);
  uint64_t v35 = v33 + *(int *)(v34 + 48);
  *(void *)uint64_t v35 = 0;
  *(unsigned char *)(v35 + 8) = 1;
  *(void *)(v35 + 16) = v47;
  *(unsigned char *)(v35 + 24) = v46;
  *(void *)(v35 + 32) = v45;
  *(unsigned char *)(v35 + 40) = v44;
  uint64_t v36 = v42;
  *(void *)(v35 + 48) = v43;
  *(void *)(v35 + 56) = v36;
  sub_100079444((uint64_t)v9, v33 + *(int *)(v34 + 64), &qword_10016DC18);
  sub_1000235F8(v30, &qword_10016DC18);
  sub_100075778(v31, (void (*)(void))type metadata accessor for SmallLocationText);
  sub_1000235F8((uint64_t)v9, &qword_10016DC18);
  return sub_100075778(v32, (void (*)(void))type metadata accessor for SmallLocationText);
}

double sub_10007616C@<D0>(uint64_t *a1@<X8>)
{
  uint64_t v38 = a1;
  uint64_t v1 = sub_10012B2D0();
  uint64_t v40 = *(void *)(v1 - 8);
  uint64_t v41 = v1;
  __chkstk_darwin(v1);
  uint64_t v39 = (uint64_t)&v37 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_10012A6B0();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10012C5F0();
  uint64_t v7 = sub_10012A680();
  uint64_t v9 = v8;
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  uint64_t v42 = v7;
  uint64_t v43 = v9;
  sub_10000822C();
  uint64_t v10 = sub_10012B420();
  uint64_t v12 = v11;
  LOBYTE(v9) = v13 & 1;
  sub_10012B5C0();
  uint64_t v14 = sub_10012B3A0();
  uint64_t v16 = v15;
  char v18 = v17;
  swift_release();
  sub_100008278(v10, v12, v9);
  swift_bridgeObjectRelease();
  sub_10012C550();
  uint64_t v19 = sub_10012B3F0();
  uint64_t v21 = v20;
  LOBYTE(v9) = v22;
  swift_release();
  sub_100008278(v14, v16, v18 & 1);
  swift_bridgeObjectRelease();
  sub_10012C5C0();
  uint64_t v23 = sub_10012B350();
  uint64_t v25 = v24;
  char v27 = v26;
  uint64_t v29 = v28;
  sub_100008278(v19, v21, v9 & 1);
  swift_bridgeObjectRelease();
  sub_10012C550();
  type metadata accessor for SmallLocationText(0);
  uint64_t v30 = v39;
  sub_10008F590(v39);
  sub_10012B1D0();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v30, v41);
  sub_10012B7A0();
  sub_10012ABC0();
  uint64_t v31 = v42;
  char v32 = v43;
  uint64_t v33 = v44;
  char v34 = v45;
  uint64_t v35 = v38;
  *uint64_t v38 = v23;
  v35[1] = v25;
  *((unsigned char *)v35 + 16) = v27 & 1;
  v35[3] = v29;
  v35[4] = v31;
  *((unsigned char *)v35 + 40) = v32;
  v35[6] = v33;
  *((unsigned char *)v35 + 56) = v34;
  double result = *(double *)&v46;
  *((_OWORD *)v35 + 4) = v46;
  return result;
}

uint64_t sub_1000764B4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1000053D8(&qword_10016B0B0);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (uint64_t *)((char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = sub_10012C610();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v1, v6);
  uint64_t v10 = (uint64_t *)(v1 + *(int *)(type metadata accessor for SmallConditionDescriptionView(0) + 20));
  uint64_t v11 = *v10;
  uint64_t v12 = v10[1];
  *uint64_t v5 = swift_getKeyPath();
  sub_1000053D8(&qword_10016B088);
  swift_storeEnumTagMultiPayload();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v14 = (int *)type metadata accessor for SmallConditionDescription(0);
  *(void *)(a1 + v14[5]) = KeyPath;
  sub_1000053D8(&qword_10016B9E0);
  swift_storeEnumTagMultiPayload();
  sub_100079490((uint64_t)v5, a1, &qword_10016B0B0);
  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(a1 + v14[6], v9, v6);
  uint64_t v15 = (void *)(a1 + v14[7]);
  *uint64_t v15 = v11;
  v15[1] = v12;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1000766A8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v98 = a1;
  uint64_t v3 = sub_10012AFD0();
  uint64_t v96 = *(void *)(v3 - 8);
  uint64_t v97 = v3;
  __chkstk_darwin(v3);
  uint64_t v95 = (char *)v75 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v93 = sub_1000053D8(&qword_10016DA90);
  __chkstk_darwin(v93);
  id v94 = (void *)((char *)v75 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = sub_10012C7F0();
  uint64_t v89 = *(void *)(v6 - 8);
  uint64_t v90 = v6;
  uint64_t v7 = __chkstk_darwin(v6);
  uint64_t v88 = (char *)v75 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v86 = (uint64_t)v75 - v9;
  uint64_t v10 = sub_1000053D8(&qword_10016DA98);
  __chkstk_darwin(v10 - 8);
  uint64_t v99 = (uint64_t)v75 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v85 = sub_10012B2D0();
  uint64_t v84 = *(void *)(v85 - 8);
  __chkstk_darwin(v85);
  uint64_t v80 = (uint64_t)v75 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v83 = sub_10012B2E0();
  uint64_t v82 = *(void *)(v83 - 8);
  __chkstk_darwin(v83);
  uint64_t v81 = (char *)v75 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v87 = sub_1000053D8(&qword_10016DD68);
  __chkstk_darwin(v87);
  uint64_t v15 = (char *)v75 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v91 = sub_1000053D8(&qword_10016DD70);
  __chkstk_darwin(v91);
  id v92 = (char *)v75 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for SmallConditionDescription(0);
  uint64_t v18 = *(int *)(v17 + 28);
  uint64_t v77 = v17;
  uint64_t v76 = v1;
  uint64_t v19 = (uint64_t *)(v1 + v18);
  uint64_t v20 = v19[1];
  uint64_t v100 = *v19;
  uint64_t v101 = v20;
  sub_10000822C();
  swift_bridgeObjectRetain();
  uint64_t v21 = sub_10012B420();
  uint64_t v23 = v22;
  char v25 = v24 & 1;
  sub_10012B5C0();
  uint64_t v26 = sub_10012B3A0();
  uint64_t v78 = v27;
  char v29 = v28;
  uint64_t KeyPath = v30;
  swift_release();
  char v31 = v29 & 1;
  sub_100008278(v21, v23, v25);
  swift_bridgeObjectRelease();
  v75[1] = v2 + *(int *)(v17 + 24);
  sub_10012C580();
  uint64_t v32 = v82;
  uint64_t v33 = v81;
  uint64_t v34 = v83;
  (*(void (**)(char *, void, uint64_t))(v82 + 104))(v81, enum case for Font.Leading.tight(_:), v83);
  sub_10012B310();
  swift_release();
  (*(void (**)(char *, uint64_t))(v32 + 8))(v33, v34);
  uint64_t v35 = v78;
  uint64_t v36 = sub_10012B3F0();
  uint64_t v38 = v37;
  char v40 = v39;
  swift_release();
  sub_100008278(v26, v35, v31);
  swift_bridgeObjectRelease();
  sub_10012B290();
  uint64_t v82 = sub_10012B350();
  uint64_t v81 = v41;
  LODWORD(v78) = v42;
  uint64_t v83 = v43;
  sub_100008278(v36, v38, v40 & 1);
  swift_bridgeObjectRelease();
  uint64_t KeyPath = swift_getKeyPath();
  sub_10012C600();
  uint64_t v44 = v80;
  sub_10008F590(v80);
  sub_10012B1E0();
  double v46 = v45;
  swift_release();
  uint64_t v47 = *(void (**)(uint64_t, uint64_t))(v84 + 8);
  uint64_t v48 = v85;
  v47(v44, v85);
  sub_10012C600();
  sub_10008F590(v44);
  sub_10012B1E0();
  double v50 = v49;
  swift_release();
  v47(v44, v48);
  uint64_t v85 = swift_getKeyPath();
  unsigned int v51 = [self wu_systemUsesExuberatedLineHeight];
  uint64_t v84 = swift_getKeyPath();
  uint64_t v52 = v86;
  sub_10008F028(v86);
  uint64_t v53 = v88;
  sub_10012C7E0();
  LOBYTE(v21) = sub_10012C7B0();
  uint64_t v54 = *(void (**)(char *, uint64_t))(v89 + 8);
  uint64_t v55 = v53;
  uint64_t v56 = v90;
  v54(v55, v90);
  v54((char *)v52, v56);
  if (v21) {
    sub_10012B030();
  }
  else {
    sub_10012B020();
  }
  char v57 = v78 & 1;
  uint64_t v58 = 2;
  if (!v51) {
    uint64_t v58 = 3;
  }
  uint64_t v90 = v58;
  uint64_t v59 = sub_10012B040();
  uint64_t v60 = v99;
  _s13WeatherWidget20WeatherDataViewModelOwst_0(v99, 0, 1, v59);
  uint64_t v61 = swift_getKeyPath();
  uint64_t v62 = v94;
  sub_100079444(v60, (uint64_t)v94 + *(int *)(v93 + 28), &qword_10016DA98);
  uint64_t *v62 = v61;
  sub_100079444((uint64_t)v62, (uint64_t)&v15[*(int *)(v87 + 36)], &qword_10016DA90);
  uint64_t v63 = v82;
  uint64_t v64 = (uint64_t)v81;
  *(void *)uint64_t v15 = v82;
  *((void *)v15 + 1) = v64;
  v15[16] = v57;
  uint64_t v65 = KeyPath;
  *((void *)v15 + 3) = v83;
  *((void *)v15 + 4) = v65;
  v15[40] = 0;
  *((void *)v15 + 6) = v85;
  *((double *)v15 + 7) = (v46 + -1.0) / v50;
  uint64_t v66 = v90;
  *((void *)v15 + 8) = v84;
  *((void *)v15 + 9) = v66;
  v15[80] = 0;
  sub_10000B0B0(v63, v64, v57);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1000235F8((uint64_t)v62, &qword_10016DA90);
  sub_1000235F8(v60, &qword_10016DA98);
  sub_100008278(v63, v64, v57);
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v67 = swift_getKeyPath();
  uint64_t v69 = v95;
  uint64_t v68 = v96;
  uint64_t v70 = v97;
  (*(void (**)(char *, void, uint64_t))(v96 + 104))(v95, enum case for ColorSchemeContrast.standard(_:), v97);
  uint64_t v71 = (uint64_t)v92;
  uint64_t v72 = (uint64_t *)&v92[*(int *)(v91 + 36)];
  uint64_t v73 = sub_1000053D8(&qword_10016DD78);
  (*(void (**)(char *, char *, uint64_t))(v68 + 16))((char *)v72 + *(int *)(v73 + 28), v69, v70);
  *uint64_t v72 = v67;
  sub_100079444((uint64_t)v15, v71, &qword_10016DD68);
  (*(void (**)(char *, uint64_t))(v68 + 8))(v69, v70);
  sub_1000235F8((uint64_t)v15, &qword_10016DD68);
  return sub_100079490(v71, v98, &qword_10016DD70);
}

uint64_t sub_10007702C()
{
  return sub_10012ADE0();
}

uint64_t sub_100077050(uint64_t a1)
{
  uint64_t v2 = sub_10012AFD0();
  __chkstk_darwin(v2);
  (*(void (**)(char *, uint64_t))(v4 + 16))((char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  return sub_10012ADF0();
}

uint64_t sub_10007711C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_10012AD50();
  *a1 = result;
  return result;
}

uint64_t sub_100077148@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_10012AD50();
  *a1 = result;
  return result;
}

uint64_t sub_100077174()
{
  return sub_10012AD60();
}

uint64_t sub_1000771AC()
{
  return sub_10012ADC0();
}

uint64_t sub_1000771D0(uint64_t a1)
{
  uint64_t v2 = sub_1000053D8(&qword_10016DA98);
  __chkstk_darwin(v2 - 8);
  sub_100079444(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_10016DA98);
  return sub_10012ADD0();
}

uint64_t *sub_100077268(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_10012C610();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (uint64_t *)((char *)a1 + v8);
    uint64_t v10 = (uint64_t *)((char *)a2 + v8);
    uint64_t v11 = v10[1];
    *uint64_t v9 = *v10;
    v9[1] = v11;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_100077340(uint64_t a1)
{
  uint64_t v2 = sub_10012C610();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);

  return swift_bridgeObjectRelease();
}

uint64_t sub_1000773B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10012C610();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = v9[1];
  *uint64_t v8 = *v9;
  v8[1] = v10;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_100077440(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10012C610();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1000774DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10012C610();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_100077558(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10012C610();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  *uint64_t v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1000775E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000775F8);
}

uint64_t sub_1000775F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_10012C610();
  sub_10000B3D0();
  if (*(_DWORD *)(v7 + 84) != a2) {
    return sub_1000798F8(a1 + *(int *)(a3 + 20));
  }

  return _s13WeatherWidget20WeatherDataViewModelOwet_0(a1, a2, v6);
}

uint64_t sub_100077678(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10007768C);
}

void sub_10007768C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_1000798A8();
  sub_10000B3D0();
  if (*(_DWORD *)(v8 + 84) == a3)
  {
    sub_10007993C();
    _s13WeatherWidget20WeatherDataViewModelOwst_0(v9, v10, v11, v12);
  }
  else
  {
    *(void *)(v5 + *(int *)(a4 + 20) + 8) = (v4 - 1);
  }
}

uint64_t sub_100077708()
{
  uint64_t result = sub_10012C610();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_10007779C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10012C610();
  uint64_t v5 = **(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);

  return v5(a1, a2, v4);
}

uint64_t sub_100077808(uint64_t a1)
{
  uint64_t v2 = sub_10012C610();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(a1, v2);
}

uint64_t sub_10007786C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10012C610();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t sub_1000778D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10012C610();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t sub_100077934(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10012C610();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t sub_100077998(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10012C610();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t sub_1000779FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100077A10);
}

uint64_t sub_100077A10()
{
  uint64_t v2 = sub_1000798A8();

  return _s13WeatherWidget20WeatherDataViewModelOwet_0(v1, v0, v2);
}

uint64_t sub_100077A4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100077A60);
}

uint64_t sub_100077A60()
{
  sub_1000798A8();
  sub_10007993C();

  return _s13WeatherWidget20WeatherDataViewModelOwst_0(v0, v1, v2, v3);
}

uint64_t sub_100077A9C()
{
  uint64_t result = sub_10012C610();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_100077B28()
{
  return sub_10000B38C(&qword_10016DBD0, &qword_10016DBD8);
}

uint64_t sub_100077B64()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100077B80()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t type metadata accessor for SmallConditionDescription(uint64_t a1)
{
  return sub_10001A270(a1, qword_10016DC80);
}

uint64_t type metadata accessor for SmallLocationText(uint64_t a1)
{
  return sub_10001A270(a1, qword_10016DD18);
}

uint64_t sub_100077BE8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t *sub_100077C38(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1000053D8(&qword_10016B088);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_10012C7F0();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v9 = a3[5];
    uint64_t v10 = (uint64_t *)((char *)a1 + v9);
    uint64_t v11 = (uint64_t *)((char *)a2 + v9);
    sub_1000053D8(&qword_10016B9E0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = sub_10012B2D0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
    }
    else
    {
      void *v10 = *v11;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v13 = a3[6];
    uint64_t v14 = (char *)a1 + v13;
    uint64_t v15 = (char *)a2 + v13;
    uint64_t v16 = sub_10012C610();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
    uint64_t v17 = a3[7];
    uint64_t v18 = (uint64_t *)((char *)a1 + v17);
    uint64_t v19 = (uint64_t *)((char *)a2 + v17);
    uint64_t v20 = v19[1];
    *uint64_t v18 = *v19;
    v18[1] = v20;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_100077E48(uint64_t a1, uint64_t a2)
{
  sub_1000053D8(&qword_10016B088);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_10012C7F0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  sub_1000053D8(&qword_10016B9E0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_10012B2D0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  }
  else
  {
    swift_release();
  }
  uint64_t v7 = a1 + *(int *)(a2 + 24);
  uint64_t v8 = sub_10012C610();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);

  return swift_bridgeObjectRelease();
}

void *sub_100077FA0(void *a1, void *a2, int *a3)
{
  sub_1000053D8(&qword_10016B088);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_10012C7F0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)((char *)a1 + v7);
  uint64_t v9 = (void *)((char *)a2 + v7);
  sub_1000053D8(&qword_10016B9E0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = sub_10012B2D0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  }
  else
  {
    *uint64_t v8 = *v9;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v11 = a3[6];
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = sub_10012C610();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = (void *)((char *)a1 + v15);
  uint64_t v17 = (void *)((char *)a2 + v15);
  uint64_t v18 = v17[1];
  void *v16 = *v17;
  v16[1] = v18;
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_100078160(void *a1, void *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_1000235F8((uint64_t)a1, &qword_10016B088);
    sub_1000053D8(&qword_10016B088);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_10012C7F0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v7 = a3[5];
    uint64_t v8 = (void *)((char *)a1 + v7);
    uint64_t v9 = (void *)((char *)a2 + v7);
    sub_1000235F8((uint64_t)a1 + v7, &qword_10016B9E0);
    sub_1000053D8(&qword_10016B9E0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v10 = sub_10012B2D0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    }
    else
    {
      *uint64_t v8 = *v9;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v11 = a3[6];
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = sub_10012C610();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = (void *)((char *)a1 + v15);
  uint64_t v17 = (void *)((char *)a2 + v15);
  void *v16 = *v17;
  v16[1] = v17[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

char *sub_10007835C(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_1000053D8(&qword_10016B088);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_10012C7F0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v8 = a3[5];
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = sub_1000053D8(&qword_10016B9E0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v12 = sub_10012B2D0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v9, v10, v12);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
  }
  uint64_t v13 = a3[6];
  uint64_t v14 = &a1[v13];
  uint64_t v15 = &a2[v13];
  uint64_t v16 = sub_10012C610();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v14, v15, v16);
  *(_OWORD *)&a1[a3[7]] = *(_OWORD *)&a2[a3[7]];
  return a1;
}

char *sub_100078520(char *a1, char *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_1000235F8((uint64_t)a1, &qword_10016B088);
    uint64_t v6 = sub_1000053D8(&qword_10016B088);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_10012C7F0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
    uint64_t v8 = a3[5];
    uint64_t v9 = &a1[v8];
    uint64_t v10 = &a2[v8];
    sub_1000235F8((uint64_t)&a1[v8], &qword_10016B9E0);
    uint64_t v11 = sub_1000053D8(&qword_10016B9E0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = sub_10012B2D0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v9, v10, v12);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
    }
  }
  uint64_t v13 = a3[6];
  uint64_t v14 = &a1[v13];
  uint64_t v15 = &a2[v13];
  uint64_t v16 = sub_10012C610();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 40))(v14, v15, v16);
  uint64_t v17 = a3[7];
  uint64_t v18 = &a1[v17];
  uint64_t v19 = &a2[v17];
  uint64_t v21 = *(void *)v19;
  uint64_t v20 = *((void *)v19 + 1);
  *(void *)uint64_t v18 = v21;
  *((void *)v18 + 1) = v20;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_10007871C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100078730);
}

uint64_t sub_100078730(uint64_t a1, uint64_t a2, int *a3)
{
  sub_1000053D8(&qword_10016B0B0);
  sub_10000B3D0();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1;
  }
  else
  {
    sub_1000053D8(&qword_10016C140);
    sub_10000B3D0();
    if (*(_DWORD *)(v11 + 84) == a2)
    {
      uint64_t v8 = v10;
      uint64_t v12 = a3[5];
    }
    else
    {
      sub_10012C610();
      sub_10000B3D0();
      if (*(_DWORD *)(v14 + 84) != a2) {
        return sub_1000798F8(a1 + a3[7]);
      }
      uint64_t v8 = v13;
      uint64_t v12 = a3[6];
    }
    uint64_t v9 = a1 + v12;
  }

  return _s13WeatherWidget20WeatherDataViewModelOwet_0(v9, a2, v8);
}

uint64_t sub_100078804(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100078818);
}

void sub_100078818(uint64_t a1, int a2, int a3, uint64_t a4)
{
  sub_1000053D8(&qword_10016B0B0);
  sub_10000B3D0();
  if (*(_DWORD *)(v8 + 84) == a3
    || (sub_1000053D8(&qword_10016C140), sub_10000B3D0(), *(_DWORD *)(v9 + 84) == a3)
    || (sub_10012C610(), sub_10000B3D0(), *(_DWORD *)(v10 + 84) == a3))
  {
    sub_10007993C();
    _s13WeatherWidget20WeatherDataViewModelOwst_0(v11, v12, v13, v14);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 28) + 8) = (a2 - 1);
  }
}

void sub_1000788F4()
{
  sub_100078A38(319, &qword_10016B130, (void (*)(uint64_t))&type metadata accessor for WidgetRenderingMode);
  if (v0 <= 0x3F)
  {
    sub_100078A38(319, (unint64_t *)&unk_10016C1B0, (void (*)(uint64_t))&type metadata accessor for Font.Context);
    if (v1 <= 0x3F)
    {
      sub_10012C610();
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

void sub_100078A38(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_10012AB90();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t *sub_100078A8C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  return sub_100078AAC(a1, a2, a3, &qword_10016B9E0, (void (*)(uint64_t))&type metadata accessor for Font.Context);
}

uint64_t *sub_100078AAC(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t *a4, void (*a5)(uint64_t))
{
  int v7 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v7 & 0x20000) != 0)
  {
    uint64_t v17 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v17 + ((v7 + 16) & ~(unint64_t)v7));
    swift_retain();
  }
  else
  {
    sub_10012C610();
    sub_100079884();
    sub_100079898();
    v11();
    uint64_t v12 = *(int *)(a3 + 20);
    uint64_t v13 = (uint64_t *)((char *)a1 + v12);
    uint64_t v14 = (uint64_t *)((char *)a2 + v12);
    sub_1000053D8(a4);
    if (sub_100079920() == 1)
    {
      uint64_t v15 = sub_1000798C4();
      a5(v15);
      sub_100079884();
      sub_100079898();
      v16();
    }
    else
    {
      *uint64_t v13 = *v14;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_100078BDC(uint64_t a1, uint64_t a2)
{
  return sub_100078BFC(a1, a2, &qword_10016B9E0, (void (*)(uint64_t))&type metadata accessor for Font.Context);
}

uint64_t sub_100078BFC(uint64_t a1, uint64_t a2, uint64_t *a3, void (*a4)(uint64_t))
{
  sub_10012C610();
  sub_10000B3FC();
  (*(void (**)(uint64_t))(v8 + 8))(a1);
  uint64_t v9 = a1 + *(int *)(a2 + 20);
  sub_1000053D8(a3);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = sub_1000798C4();
    a4(v10);
    sub_10000B3FC();
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t))(v12 + 8);
    return v13(v9, v11);
  }
  else
  {
    return swift_release();
  }
}

uint64_t sub_100078CE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100078D04(a1, a2, a3, &qword_10016B9E0, (void (*)(uint64_t))&type metadata accessor for Font.Context);
}

uint64_t sub_100078D04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, void (*a5)(uint64_t))
{
  sub_10012C610();
  sub_100079884();
  sub_100079898();
  v10();
  uint64_t v11 = *(int *)(a3 + 20);
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (void *)(a2 + v11);
  sub_1000053D8(a4);
  if (sub_100079920() == 1)
  {
    uint64_t v14 = sub_1000798C4();
    a5(v14);
    sub_100079884();
    sub_100079898();
    v15();
  }
  else
  {
    void *v12 = *v13;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_100078DE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100078E04(a1, a2, a3, &qword_10016B9E0, (void (*)(uint64_t))&type metadata accessor for Font.Context);
}

uint64_t sub_100078E04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, void (*a5)(uint64_t))
{
  sub_10012C610();
  sub_100079884();
  (*(void (**)(uint64_t, uint64_t))(v10 + 24))(a1, a2);
  if (a1 != a2)
  {
    uint64_t v11 = *(int *)(a3 + 20);
    uint64_t v12 = (void *)(a1 + v11);
    uint64_t v13 = (void *)(a2 + v11);
    sub_1000235F8(a1 + v11, a4);
    sub_1000053D8(a4);
    if (sub_100079920() == 1)
    {
      uint64_t v14 = sub_1000798C4();
      a5(v14);
      sub_100079884();
      sub_100079898();
      v15();
    }
    else
    {
      void *v12 = *v13;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_100078F00()
{
  return sub_100078F20();
}

uint64_t sub_100078F20()
{
  sub_1000798D0();
  sub_100079884();
  sub_100079910();
  v5();
  uint64_t v6 = *(int *)(v2 + 20);
  int v7 = (void *)(v0 + v6);
  uint64_t v8 = (const void *)(v3 + v6);
  uint64_t v9 = sub_1000053D8(v4);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = sub_1000798C4();
    v1(v10);
    sub_100079884();
    sub_100079910();
    v11();
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
  }
  return v0;
}

uint64_t sub_100078FFC()
{
  return sub_10007901C();
}

uint64_t sub_10007901C()
{
  sub_1000798D0();
  sub_100079884();
  (*(void (**)(uint64_t, uint64_t))(v5 + 40))(v0, v3);
  if (v0 != v3)
  {
    uint64_t v6 = *(int *)(v2 + 20);
    int v7 = (void *)(v0 + v6);
    uint64_t v8 = (const void *)(v3 + v6);
    sub_1000235F8(v0 + v6, v4);
    uint64_t v9 = sub_1000053D8(v4);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v10 = sub_1000798C4();
      v1(v10);
      sub_100079884();
      sub_100079910();
      v11();
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
    }
  }
  return v0;
}

uint64_t sub_100079114(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100079128);
}

uint64_t sub_100079128(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100079134(a1, a2, a3, &qword_10016C140);
}

uint64_t sub_100079134(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  sub_1000798A8();
  sub_10000B3D0();
  if (*(_DWORD *)(v9 + 84) == v4)
  {
    uint64_t v10 = v8;
    uint64_t v11 = v5;
  }
  else
  {
    uint64_t v10 = sub_1000053D8(a4);
    uint64_t v11 = v5 + *(int *)(a3 + 20);
  }

  return _s13WeatherWidget20WeatherDataViewModelOwet_0(v11, v4, v10);
}

uint64_t sub_1000791A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000791BC);
}

uint64_t sub_1000791BC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return sub_1000791C8(a1, a2, a3, a4, &qword_10016C140);
}

uint64_t sub_1000791C8(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t *a5)
{
  sub_1000798A8();
  sub_10000B3D0();
  if (*(_DWORD *)(v7 + 84) != a3) {
    sub_1000053D8(a5);
  }
  sub_10007993C();

  return _s13WeatherWidget20WeatherDataViewModelOwst_0(v8, v9, v10, v11);
}

void sub_100079248(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

void sub_100079268(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t *a4, void (*a5)(uint64_t))
{
  sub_10012C610();
  if (v7 <= 0x3F)
  {
    sub_100078A38(319, a4, a5);
    if (v8 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_100079348()
{
  return sub_100077BE8(&qword_10016DD50, (void (*)(uint64_t))type metadata accessor for SmallConditionDescription);
}

uint64_t sub_100079390()
{
  return sub_10000B38C(&qword_10016DD58, &qword_10016DD60);
}

uint64_t sub_1000793CC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1000793E8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10007941C()
{
  return sub_10012ADE0();
}

uint64_t sub_100079444(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  sub_1000053D8(a3);
  sub_100079884();
  uint64_t v4 = sub_10000B430();
  v5(v4);
  return a2;
}

uint64_t sub_100079490(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  sub_1000053D8(a3);
  sub_100079884();
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(a2, a1);
  return a2;
}

unint64_t sub_1000794EC()
{
  unint64_t result = qword_10016DD80;
  if (!qword_10016DD80)
  {
    sub_100005470(&qword_10016DD88);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016DD80);
  }
  return result;
}

unint64_t sub_100079564()
{
  unint64_t result = qword_10016DD90;
  if (!qword_10016DD90)
  {
    sub_100005470(&qword_10016DD70);
    sub_100079604();
    sub_10000B38C(&qword_10016DDE8, &qword_10016DD78);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016DD90);
  }
  return result;
}

unint64_t sub_100079604()
{
  unint64_t result = qword_10016DD98;
  if (!qword_10016DD98)
  {
    sub_100005470(&qword_10016DD68);
    sub_1000796A4();
    sub_10000B38C(&qword_10016DDE0, &qword_10016DA90);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016DD98);
  }
  return result;
}

unint64_t sub_1000796A4()
{
  unint64_t result = qword_10016DDA0;
  if (!qword_10016DDA0)
  {
    sub_100005470(&qword_10016DDA8);
    sub_100079744();
    sub_10000B38C(&qword_10016DDD0, &qword_10016DDD8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016DDA0);
  }
  return result;
}

unint64_t sub_100079744()
{
  unint64_t result = qword_10016DDB0;
  if (!qword_10016DDB0)
  {
    sub_100005470(&qword_10016DDB8);
    sub_1000797E4();
    sub_10000B38C(&qword_10016DDC0, &qword_10016DDC8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016DDB0);
  }
  return result;
}

unint64_t sub_1000797E4()
{
  unint64_t result = qword_10016D6A0;
  if (!qword_10016D6A0)
  {
    sub_100005470(&qword_10016D698);
    sub_10000B38C(&qword_10016BD88, &qword_10016BD90);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016D6A0);
  }
  return result;
}

uint64_t sub_1000798A8()
{
  return sub_10012C610();
}

uint64_t sub_1000798C4()
{
  return 0;
}

uint64_t sub_1000798D0()
{
  return sub_10012C610();
}

uint64_t sub_1000798F8@<X0>(uint64_t a1@<X8>)
{
  unint64_t v1 = *(void *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

uint64_t sub_100079920()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t *sub_100079948(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v29 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v29 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_10012BFA0();
    unint64_t v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    uint64_t v9 = a3[6];
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = sub_10012C320();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
    uint64_t v13 = a3[7];
    uint64_t v14 = (char *)a1 + v13;
    uint64_t v15 = (char *)a2 + v13;
    uint64_t v16 = sub_10012C700();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
    uint64_t v17 = a3[8];
    long long v18 = *(_OWORD *)((char *)a2 + v17 + 24);
    *(_OWORD *)((char *)a1 + v17 + 24) = v18;
    (**(void (***)(void))(v18 - 8))();
    uint64_t v19 = a3[10];
    uint64_t v20 = (char *)a1 + v19;
    uint64_t v21 = (char *)a2 + v19;
    v8((uint64_t *)((char *)a1 + v19), (uint64_t *)((char *)a2 + v19), v7);
    uint64_t v22 = type metadata accessor for EventViewModelFactory();
    *(void *)&v20[*(int *)(v22 + 20)] = *(void *)&v21[*(int *)(v22 + 20)];
    uint64_t v23 = a3[11];
    char v24 = (char *)a1 + v23;
    char v25 = (char *)a2 + v23;
    long long v26 = *(_OWORD *)(v25 + 24);
    *(_OWORD *)((char *)a1 + v23 + 24) = v26;
    uint64_t v27 = v26;
    char v28 = **(void (***)(char *, char *, uint64_t))(v26 - 8);
    swift_retain();
    v28(v24, v25, v27);
  }
  return a1;
}

uint64_t sub_100079B9C(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_10012BFA0();
  int v5 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v5(a1, v4);
  uint64_t v6 = a1 + a2[6];
  uint64_t v7 = sub_10012C320();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  uint64_t v8 = a1 + a2[7];
  uint64_t v9 = sub_10012C700();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  sub_10000DB48(a1 + a2[8]);
  v5(a1 + a2[10], v4);
  type metadata accessor for EventViewModelFactory();
  swift_release();
  uint64_t v10 = a1 + a2[11];

  return sub_10000DB48(v10);
}

uint64_t sub_100079CE0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_10012BFA0();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_10012C320();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
  uint64_t v12 = a3[7];
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = sub_10012C700();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
  uint64_t v16 = a3[8];
  long long v17 = *(_OWORD *)(a2 + v16 + 24);
  *(_OWORD *)(a1 + v16 + 24) = v17;
  (**(void (***)(void))(v17 - 8))();
  uint64_t v18 = a3[10];
  uint64_t v19 = a1 + v18;
  uint64_t v20 = a2 + v18;
  v7(a1 + v18, a2 + v18, v6);
  uint64_t v21 = type metadata accessor for EventViewModelFactory();
  *(void *)(v19 + *(int *)(v21 + 20)) = *(void *)(v20 + *(int *)(v21 + 20));
  uint64_t v22 = a3[11];
  uint64_t v23 = a1 + v22;
  uint64_t v24 = a2 + v22;
  long long v25 = *(_OWORD *)(v24 + 24);
  *(_OWORD *)(a1 + v22 + 24) = v25;
  uint64_t v26 = v25;
  uint64_t v27 = **(void (***)(uint64_t, uint64_t, uint64_t))(v25 - 8);
  swift_retain();
  v27(v23, v24, v26);
  return a1;
}

uint64_t sub_100079EE4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_10012BFA0();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_10012C320();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 24))(v9, v10, v11);
  uint64_t v12 = a3[7];
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = sub_10012C700();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 24))(v13, v14, v15);
  sub_10007A060((uint64_t *)(a1 + a3[8]), (uint64_t *)(a2 + a3[8]));
  uint64_t v16 = a3[10];
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  v7(a1 + v16, a2 + v16, v6);
  uint64_t v19 = type metadata accessor for EventViewModelFactory();
  *(void *)(v17 + *(int *)(v19 + 20)) = *(void *)(v18 + *(int *)(v19 + 20));
  swift_retain();
  swift_release();
  sub_10007A060((uint64_t *)(a1 + a3[11]), (uint64_t *)(a2 + a3[11]));
  return a1;
}

uint64_t *sub_10007A060(uint64_t *result, uint64_t *a2)
{
  if (result != a2)
  {
    uint64_t v3 = result;
    uint64_t v4 = result[3];
    uint64_t v5 = a2[3];
    if (v4 == v5)
    {
      uint64_t v10 = *(void *)(v4 - 8);
      if ((*(unsigned char *)(v10 + 82) & 2) != 0)
      {
        uint64_t v12 = *a2;
        swift_retain();
        unint64_t result = (uint64_t *)swift_release();
        *uint64_t v3 = v12;
      }
      else
      {
        uint64_t v11 = *(uint64_t (**)(void))(v10 + 24);
        return (uint64_t *)v11();
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      uint64_t v6 = *(void *)(v4 - 8);
      uint64_t v7 = *(void *)(v5 - 8);
      uint64_t v8 = v7;
      int v9 = *(_DWORD *)(v7 + 80);
      if ((*(unsigned char *)(v6 + 82) & 2) != 0)
      {
        if ((v9 & 0x20000) != 0)
        {
          *unint64_t result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(unsigned char *, uint64_t *, uint64_t))(v6 + 32))(v13, result, v4);
        if ((v9 & 0x20000) != 0)
        {
          *uint64_t v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v13, v4);
      }
    }
  }
  return result;
}

uint64_t sub_10007A290(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_10012BFA0();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_10012C320();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
  uint64_t v12 = a3[7];
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = sub_10012C700();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
  uint64_t v16 = a3[8];
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  long long v19 = *(_OWORD *)(v18 + 16);
  *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
  *(_OWORD *)(v17 + 16) = v19;
  *(void *)(v17 + 32) = *(void *)(v18 + 32);
  uint64_t v20 = a3[10];
  uint64_t v21 = a1 + v20;
  uint64_t v22 = a2 + v20;
  v7(a1 + v20, a2 + v20, v6);
  uint64_t v23 = type metadata accessor for EventViewModelFactory();
  *(void *)(v21 + *(int *)(v23 + 20)) = *(void *)(v22 + *(int *)(v23 + 20));
  uint64_t v24 = a3[11];
  uint64_t v25 = a1 + v24;
  uint64_t v26 = a2 + v24;
  *(void *)(v25 + 32) = *(void *)(v26 + 32);
  long long v27 = *(_OWORD *)(v26 + 16);
  *(_OWORD *)uint64_t v25 = *(_OWORD *)v26;
  *(_OWORD *)(v25 + 16) = v27;
  return a1;
}

uint64_t sub_10007A414(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_10012BFA0();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_10012C320();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 40))(v9, v10, v11);
  uint64_t v12 = a3[7];
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = sub_10012C700();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 40))(v13, v14, v15);
  uint64_t v16 = a3[8];
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  sub_10000DB48(a1 + v16);
  long long v19 = *(_OWORD *)(v18 + 16);
  *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
  *(_OWORD *)(v17 + 16) = v19;
  *(void *)(v17 + 32) = *(void *)(v18 + 32);
  uint64_t v20 = a3[10];
  uint64_t v21 = a1 + v20;
  uint64_t v22 = a2 + v20;
  v7(a1 + v20, a2 + v20, v6);
  uint64_t v23 = type metadata accessor for EventViewModelFactory();
  *(void *)(v21 + *(int *)(v23 + 20)) = *(void *)(v22 + *(int *)(v23 + 20));
  swift_release();
  uint64_t v24 = a3[11];
  uint64_t v25 = a1 + v24;
  uint64_t v26 = a2 + v24;
  sub_10000DB48(a1 + v24);
  long long v27 = *(_OWORD *)(v26 + 16);
  *(_OWORD *)uint64_t v25 = *(_OWORD *)v26;
  *(_OWORD *)(v25 + 16) = v27;
  *(void *)(v25 + 32) = *(void *)(v26 + 32);
  return a1;
}

uint64_t sub_10007A5B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10007A5C4);
}

uint64_t sub_10007A5C4(uint64_t a1, uint64_t a2, int *a3)
{
  type metadata accessor for CurrentObservationViewModelFactory();
  sub_10000B3D0();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1;
LABEL_13:
    return _s13WeatherWidget20WeatherDataViewModelOwet_0(v9, a2, v8);
  }
  sub_10012C320();
  sub_10000B3D0();
  if (*(_DWORD *)(v11 + 84) == a2)
  {
    uint64_t v8 = v10;
    uint64_t v12 = a3[6];
LABEL_12:
    uint64_t v9 = a1 + v12;
    goto LABEL_13;
  }
  sub_10012C700();
  sub_10000B3D0();
  if (*(_DWORD *)(v14 + 84) == a2)
  {
    uint64_t v8 = v13;
    uint64_t v12 = a3[7];
    goto LABEL_12;
  }
  if (a2 != 0x7FFFFFFF)
  {
    uint64_t v8 = type metadata accessor for EventViewModelFactory();
    uint64_t v12 = a3[10];
    goto LABEL_12;
  }
  unint64_t v15 = *(void *)(a1 + a3[8] + 24);
  if (v15 >= 0xFFFFFFFF) {
    LODWORD(v15) = -1;
  }
  return (v15 + 1);
}

uint64_t sub_10007A6C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10007A6D4);
}

void sub_10007A6D4(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  type metadata accessor for CurrentObservationViewModelFactory();
  sub_10000B3D0();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = a1;
  }
  else
  {
    sub_10012C320();
    sub_10000B3D0();
    if (*(_DWORD *)(v13 + 84) == a3)
    {
      uint64_t v10 = v12;
      uint64_t v14 = a4[6];
    }
    else
    {
      sub_10012C700();
      sub_10000B3D0();
      if (*(_DWORD *)(v16 + 84) == a3)
      {
        uint64_t v10 = v15;
        uint64_t v14 = a4[7];
      }
      else
      {
        if (a3 == 0x7FFFFFFF)
        {
          *(void *)(a1 + a4[8] + 24) = (a2 - 1);
          return;
        }
        uint64_t v10 = type metadata accessor for EventViewModelFactory();
        uint64_t v14 = a4[10];
      }
    }
    uint64_t v11 = a1 + v14;
  }

  _s13WeatherWidget20WeatherDataViewModelOwst_0(v11, a2, a2, v10);
}

uint64_t type metadata accessor for AggregateWeatherViewModelFactory()
{
  uint64_t result = qword_10016DE48;
  if (!qword_10016DE48) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10007A814()
{
  uint64_t result = sub_10012BFA0();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_10012C320();
    if (v2 <= 0x3F)
    {
      uint64_t result = sub_10012C700();
      if (v3 <= 0x3F)
      {
        uint64_t result = type metadata accessor for EventViewModelFactory();
        if (v4 <= 0x3F)
        {
          swift_initStructMetadata();
          return 0;
        }
      }
    }
  }
  return result;
}

uint64_t sub_10007A97C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_10012A190();
  uint64_t v5 = sub_10000DC9C(v4);
  __chkstk_darwin(v5);
  uint64_t v6 = type metadata accessor for AggregateWeatherViewModelFactory();
  uint64_t v7 = (int *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100074220((uint64_t)a1, (uint64_t)&v9[v7[13]]);
  sub_10012BF90();
  sub_10000D890(a1, a1[3]);
  sub_10012A490();
  sub_10012C310();
  uint64_t v10 = &v9[v7[12]];
  sub_10012BF90();
  uint64_t v11 = *(int *)(type metadata accessor for EventViewModelFactory() + 20);
  sub_10012BA30();
  swift_allocObject();
  *(void *)&v10[v11] = sub_10012BA20();
  sub_10012C6F0();
  uint64_t v12 = sub_10012C740();
  swift_allocObject();
  uint64_t v13 = sub_10012C730();
  uint64_t v14 = (uint64_t *)&v9[v7[10]];
  v14[3] = v12;
  v14[4] = (uint64_t)&protocol witness table for NextHourPrecipitationChartViewModelFactory;
  *uint64_t v14 = v13;
  sub_10007AB24((uint64_t)v9, a2);
  return sub_10000DB48((uint64_t)a1);
}

uint64_t sub_10007AB24(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AggregateWeatherViewModelFactory();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10007AB88@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v121 = a3;
  uint64_t v123 = a1;
  uint64_t v115 = a4;
  sub_100129220();
  sub_10000DB98();
  uint64_t v125 = v6;
  uint64_t v126 = v5;
  __chkstk_darwin(v5);
  sub_10000DCB4();
  uint64_t v113 = v7;
  sub_1000636C8();
  uint64_t v9 = __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v103 - v10;
  __chkstk_darwin(v9);
  sub_100011F60();
  uint64_t v128 = v12;
  sub_1000636C8();
  __chkstk_darwin(v13);
  sub_100011FAC();
  uint64_t v129 = v14;
  sub_10000DCA8();
  uint64_t v112 = sub_1001296F0();
  sub_10000DB98();
  uint64_t v110 = v15;
  __chkstk_darwin(v16);
  sub_10000DBCC();
  uint64_t v108 = v17;
  uint64_t v18 = sub_1000053D8(&qword_10016B420);
  uint64_t v19 = sub_10000DC9C(v18);
  __chkstk_darwin(v19);
  sub_10000DCB4();
  uint64_t v119 = v20;
  sub_1000636C8();
  __chkstk_darwin(v21);
  sub_100011F60();
  unint64_t v118 = v22;
  sub_1000636C8();
  __chkstk_darwin(v23);
  sub_100011F60();
  uint64_t v117 = v24;
  sub_1000636C8();
  __chkstk_darwin(v25);
  sub_100011F60();
  unint64_t v120 = v26;
  sub_1000636C8();
  __chkstk_darwin(v27);
  sub_100011FAC();
  uint64_t v114 = v28;
  sub_10000DCA8();
  sub_10012A6B0();
  sub_10000DB98();
  uint64_t v136 = v30;
  uint64_t v137 = v29;
  __chkstk_darwin(v29);
  sub_10000DBCC();
  uint64_t v134 = v31;
  sub_10000DCA8();
  uint64_t v107 = sub_100129330();
  sub_10000DB98();
  uint64_t v106 = v32;
  __chkstk_darwin(v33);
  sub_10000DBCC();
  uint64_t v132 = v34;
  uint64_t v35 = sub_1000053D8(&qword_10016B430);
  uint64_t v36 = sub_10000DC9C(v35);
  __chkstk_darwin(v36);
  sub_10000DCB4();
  uint64_t v133 = v37;
  sub_1000636C8();
  __chkstk_darwin(v38);
  char v40 = (char *)&v103 - v39;
  sub_10012C250();
  sub_10000DB98();
  uint64_t v140 = v42;
  uint64_t v141 = v41;
  __chkstk_darwin(v41);
  sub_10000DCB4();
  uint64_t v131 = v43;
  sub_1000636C8();
  __chkstk_darwin(v44);
  sub_100011FAC();
  uint64_t v139 = v45;
  uint64_t v46 = sub_1000053D8(&qword_10016B428);
  uint64_t v47 = sub_10000DC9C(v46);
  __chkstk_darwin(v47);
  sub_10000DCB4();
  uint64_t v130 = v48;
  sub_1000636C8();
  __chkstk_darwin(v49);
  sub_100011FAC();
  uint64_t v138 = v50;
  sub_10000DCA8();
  uint64_t v51 = sub_100129480();
  sub_10000DB98();
  uint64_t v53 = v52;
  uint64_t v55 = __chkstk_darwin(v54);
  char v57 = (char *)&v103 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = __chkstk_darwin(v55);
  uint64_t v60 = (char *)&v103 - v59;
  __chkstk_darwin(v58);
  uint64_t v62 = (char *)&v103 - v61;
  uint64_t v124 = a2;
  sub_10012A6A0();
  if (qword_10016AE28 != -1) {
    swift_once();
  }
  uint64_t v63 = sub_10012AB60();
  uint64_t v64 = sub_10000D7A4(v63, (uint64_t)qword_100181C40);
  uint64_t v65 = *(void (**)(char *, char *, uint64_t))(v53 + 16);
  uint64_t v135 = v62;
  v65(v60, v62, v51);
  uint64_t v105 = v64;
  uint64_t v66 = sub_10012AB40();
  os_log_type_t v67 = sub_10012CD60();
  BOOL v68 = os_log_type_enabled(v66, v67);
  uint64_t v127 = v40;
  uint64_t v116 = v11;
  uint64_t v111 = v51;
  uint64_t v109 = v53;
  if (v68)
  {
    uint64_t v69 = (uint8_t *)swift_slowAlloc();
    uint64_t v103 = swift_slowAlloc();
    uint64_t v143 = v103;
    *(_DWORD *)uint64_t v69 = 136446210;
    uint64_t v104 = (uint64_t (*)(char *, uint64_t))(v69 + 4);
    v65(v57, v60, v51);
    uint64_t v70 = sub_10012CAB0();
    uint64_t v142 = sub_100123564(v70, v71, &v143);
    char v40 = v127;
    sub_10012CF70();
    swift_bridgeObjectRelease();
    uint64_t v72 = sub_10007BB40();
    v73(v72);
    _os_log_impl((void *)&_mh_execute_header, v66, v67, "Building aggregate weather data model. - timeZone: %{public}s", v69, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    uint64_t v74 = sub_10007BB40();
    v75(v74);
  }

  uint64_t v76 = v138;
  uint64_t v77 = v123;
  sub_1000636D4(v138);
  uint64_t v78 = v139;
  sub_1000CB818(v77, (uint64_t)v135, v121, v139);
  type metadata accessor for AggregateWeatherViewModelFactory();
  sub_10007BB5C();
  uint64_t v121 = (char *)sub_10012C6E0();
  sub_10007BB5C();
  uint64_t v103 = sub_10012C300();
  uint64_t v79 = v124;
  sub_10007B700(v124, (uint64_t)v40);
  uint64_t v80 = sub_10007BB5C();
  uint64_t v122 = sub_10000E270(v80, v81, 0);
  unint64_t v82 = sub_1000171E8(v77);
  unsigned int v84 = v83;
  sub_100129320();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v136 + 16))(v134, v79, v137);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v140 + 16))(v131, v78, v141);
  sub_10002BADC(v76, v130, &qword_10016B428);
  sub_10002BADC((uint64_t)v40, v133, &qword_10016B430);
  sub_10007BB8C();
  uint64_t v85 = v120;
  sub_100129210();
  uint64_t v86 = v126;
  uint64_t result = _s13WeatherWidget20WeatherDataViewModelOwet_0(v85, 1, v126);
  if (result == 1)
  {
    __break(1u);
    goto LABEL_14;
  }
  uint64_t v88 = *(void (**)(void))(v125 + 32);
  sub_10007BB30();
  v88();
  sub_10007BB8C();
  uint64_t v89 = v117;
  sub_100129210();
  uint64_t result = sub_10007BB6C(v89);
  uint64_t v90 = v119;
  uint64_t v91 = v118;
  if (v92)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  sub_10007BB30();
  v88();
  sub_10007BB8C();
  sub_100129210();
  uint64_t result = sub_10007BB6C(v91);
  if (v92)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  sub_10007BB30();
  v88();
  sub_10007BB8C();
  sub_100129210();
  uint64_t result = sub_10007BB6C(v90);
  if (v92)
  {
LABEL_16:
    __break(1u);
    return result;
  }
  LODWORD(v125) = v84 >> 8;
  uint64_t v124 = HIBYTE(v82);
  unint64_t v120 = HIWORD(v82);
  unint64_t v118 = v82 >> 40;
  LODWORD(v123) = v84;
  sub_10007BB30();
  v88();
  uint64_t v93 = v108;
  sub_1001296D0();
  uint64_t v94 = v114;
  sub_1001296E0();
  (*(void (**)(uint64_t, uint64_t))(v110 + 8))(v93, v112);
  _s13WeatherWidget20WeatherDataViewModelOwst_0(v94, 0, 1, v86);
  uint64_t v95 = (int *)type metadata accessor for AggregateWeatherViewModel(0);
  uint64_t v96 = v115;
  uint64_t v97 = v115 + v95[14];
  uint64_t v98 = type metadata accessor for AggregateWeatherViewModel.SunEvent(0);
  _s13WeatherWidget20WeatherDataViewModelOwst_0(v97, 1, 1, v98);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v106 + 32))(v96, v132, v107);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v136 + 32))(v96 + v95[5], v134, v137);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v140 + 32))(v96 + v95[6], v131, v141);
  *(void *)(v96 + v95[7]) = v121;
  *(void *)(v96 + v95[8]) = v103;
  sub_10000B2F4(v130, v96 + v95[9], &qword_10016B428);
  sub_10000B2F4(v133, v96 + v95[10], &qword_10016B430);
  *(void *)(v96 + v95[11]) = v122;
  uint64_t v99 = v96 + v95[12];
  *(_WORD *)uint64_t v99 = v82;
  *(unsigned char *)(v99 + 2) = BYTE2(v82);
  *(unsigned char *)(v99 + 3) = BYTE3(v82);
  *(unsigned char *)(v99 + 4) = BYTE4(v82);
  *(unsigned char *)(v99 + 5) = v118;
  *(unsigned char *)(v99 + 6) = v120;
  *(unsigned char *)(v99 + 7) = v124;
  *(unsigned char *)(v99 + 8) = v123;
  *(unsigned char *)(v99 + 9) = v125;
  sub_10000B2F4(v94, v96 + v95[13], &qword_10016B420);
  uint64_t v100 = sub_10012AB40();
  os_log_type_t v101 = sub_10012CD60();
  if (os_log_type_enabled(v100, v101))
  {
    int v102 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)int v102 = 0;
    _os_log_impl((void *)&_mh_execute_header, v100, v101, "Built aggregate weather data model.", v102, 2u);
    swift_slowDealloc();
  }

  sub_1000235F8((uint64_t)v127, &qword_10016B430);
  (*(void (**)(uint64_t, uint64_t))(v140 + 8))(v139, v141);
  sub_1000235F8(v138, &qword_10016B428);
  return v104(v135, v111);
}

uint64_t sub_10007B700@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v32 = a1;
  uint64_t v35 = a2;
  uint64_t v2 = sub_100129300();
  uint64_t v33 = *(void *)(v2 - 8);
  uint64_t v34 = v2;
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10012C680();
  uint64_t v30 = *(void *)(v5 - 8);
  uint64_t v31 = v5;
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100129DC0();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1000053D8(&qword_10016B3D8);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1000053D8(&qword_10016B3E0);
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v28 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001299A0();
  if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v14, 1, v15) == 1)
  {
    sub_1000235F8((uint64_t)v14, &qword_10016B3D8);
LABEL_6:
    uint64_t v25 = 1;
    uint64_t v24 = v35;
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v18, v14, v15);
  (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, enum case for PrecipitationRelevancyWindow.default(_:), v8);
  char v19 = sub_100129EB0();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  if ((v19 & 1) == 0)
  {
    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
    goto LABEL_6;
  }
  uint64_t v20 = (void *)(v29 + *(int *)(type metadata accessor for AggregateWeatherViewModelFactory() + 32));
  uint64_t v21 = v20[3];
  uint64_t v29 = v20[4];
  sub_10000D890(v20, v21);
  uint64_t v22 = v30;
  uint64_t v23 = v31;
  (*(void (**)(char *, void, uint64_t))(v30 + 104))(v7, enum case for NextHourPrecipitationChartPlacement.component(_:), v31);
  sub_1001292F0();
  uint64_t v24 = v35;
  sub_10012C770();
  (*(void (**)(char *, uint64_t))(v33 + 8))(v4, v34);
  (*(void (**)(char *, uint64_t))(v22 + 8))(v7, v23);
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  uint64_t v25 = 0;
LABEL_7:
  uint64_t v26 = sub_10012C6B0();
  return _s13WeatherWidget20WeatherDataViewModelOwst_0(v24, v25, 1, v26);
}

uint64_t sub_10007BB40()
{
  uint64_t result = v0;
  *(void *)(v2 - 408) = *(void *)(v1 + 8);
  return result;
}

uint64_t sub_10007BB5C()
{
  return v0;
}

uint64_t sub_10007BB6C(uint64_t a1)
{
  return _s13WeatherWidget20WeatherDataViewModelOwet_0(a1, 1, v1);
}

uint64_t sub_10007BB98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10007BBAC);
}

uint64_t sub_10007BBAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1000053D8(&qword_10016B440);
  sub_10000B3D0();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1;
  }
  else
  {
    uint64_t v8 = type metadata accessor for ForecastEntry(0);
    uint64_t v9 = a1 + *(int *)(a3 + 20);
  }

  return _s13WeatherWidget20WeatherDataViewModelOwet_0(v9, a2, v8);
}

uint64_t sub_10007BC2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10007BC40);
}

uint64_t sub_10007BC40(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_1000053D8(&qword_10016B440);
  sub_10000B3D0();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = a1;
  }
  else
  {
    uint64_t v10 = type metadata accessor for ForecastEntry(0);
    uint64_t v11 = a1 + *(int *)(a4 + 20);
  }

  return _s13WeatherWidget20WeatherDataViewModelOwst_0(v11, a2, a2, v10);
}

uint64_t type metadata accessor for MoonContentView()
{
  uint64_t result = qword_10016DEF0;
  if (!qword_10016DEF0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10007BD10()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10007BD2C@<X0>(uint64_t a1@<X8>)
{
  return sub_10007BD34(v1, a1);
}

uint64_t sub_10007BD34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v54 = a2;
  uint64_t v44 = sub_1000053D8(&qword_10016DF28);
  __chkstk_darwin(v44);
  uint64_t v45 = (char *)&v38 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = sub_1000053D8(&qword_10016DF30);
  __chkstk_darwin(v53);
  uint64_t v49 = (char *)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10012BC50();
  uint64_t v47 = *(void *)(v5 - 8);
  uint64_t v48 = v5;
  __chkstk_darwin(v5);
  uint64_t v46 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = sub_1000053D8(&qword_10016DF38);
  __chkstk_darwin(v51);
  uint64_t v52 = (uint64_t)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = sub_1000053D8(&qword_10016DF40);
  __chkstk_darwin(v41);
  uint64_t v9 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = sub_1000053D8(&qword_10016DF48);
  __chkstk_darwin(v50);
  uint64_t v43 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10012C050();
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_10012C070();
  uint64_t v42 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for MoonContentView();
  uint64_t v18 = __chkstk_darwin(v17);
  uint64_t v38 = (uint64_t)&v38 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v21 = (char *)&v38 - v20;
  uint64_t v22 = sub_10012C800();
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v39 = (uint64_t)&v38 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  uint64_t v27 = (char *)&v38 - v26;
  sub_10008F554((uint64_t)&v38 - v26);
  uint64_t v40 = v23;
  int v28 = (*(uint64_t (**)(char *, uint64_t))(v23 + 88))(v27, v22);
  if (v28 == enum case for WidgetFamily.accessoryCircular(_:))
  {
    sub_10007C638(a1, (uint64_t)v21);
    uint64_t v55 = 0;
    unint64_t v56 = 0xE000000000000000;
    sub_10012CFD0(64);
    v57._countAndFlagsBits = 0xD000000000000021;
    v57._object = (void *)0x8000000100138E70;
    sub_10012CAF0(v57);
    uint64_t v36 = v39;
    sub_10008F554(v39);
    sub_10007C748(&qword_10016B508, (void (*)(uint64_t))&type metadata accessor for WidgetFamily);
    v58._countAndFlagsBits = sub_10012D1D0();
    sub_10012CAF0(v58);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v36, v22);
    v59._object = (void *)0x800000010013A390;
    v59._countAndFlagsBits = 0xD00000000000001DLL;
    sub_10012CAF0(v59);
LABEL_9:
    uint64_t result = sub_10012D070();
    __break(1u);
    return result;
  }
  if (v28 == enum case for WidgetFamily.accessoryRectangular(_:))
  {
    sub_1000120B0((uint64_t)v13);
    sub_10012C060();
    uint64_t v29 = v42;
    (*(void (**)(char *, char *, uint64_t))(v42 + 16))(v9, v16, v14);
    swift_storeEnumTagMultiPayload();
    sub_10007C748(&qword_10016DF60, (void (*)(uint64_t))&type metadata accessor for MoonRectangularContentView);
    uint64_t v30 = (uint64_t)v43;
    sub_10012B0E0();
    sub_100016CAC(v30, v52, &qword_10016DF48);
    swift_storeEnumTagMultiPayload();
    sub_10007C69C();
    sub_10007C790();
    sub_10012B0E0();
    sub_100016D10(v30, &qword_10016DF48);
    return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v16, v14);
  }
  if (v28 != enum case for WidgetFamily.accessoryInline(_:))
  {
    sub_10007C638(a1, v38);
    uint64_t v55 = 0;
    unint64_t v56 = 0xE000000000000000;
    sub_10012CFD0(65);
    v60._countAndFlagsBits = 0xD000000000000022;
    v60._object = (void *)0x8000000100138E20;
    sub_10012CAF0(v60);
    uint64_t v37 = v39;
    sub_10008F554(v39);
    sub_10007C748(&qword_10016B508, (void (*)(uint64_t))&type metadata accessor for WidgetFamily);
    v61._countAndFlagsBits = sub_10012D1D0();
    sub_10012CAF0(v61);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v37, v22);
    v62._object = (void *)0x800000010013A390;
    v62._countAndFlagsBits = 0xD00000000000001DLL;
    sub_10012CAF0(v62);
    goto LABEL_9;
  }
  sub_1000120B0((uint64_t)v13);
  uint64_t v32 = v46;
  sub_10012BC40();
  uint64_t v34 = v47;
  uint64_t v33 = v48;
  (*(void (**)(char *, char *, uint64_t))(v47 + 16))(v45, v32, v48);
  swift_storeEnumTagMultiPayload();
  sub_10007C748(&qword_10016DF50, (void (*)(uint64_t))&type metadata accessor for MoonInlineContentView);
  uint64_t v35 = (uint64_t)v49;
  sub_10012B0E0();
  sub_100016CAC(v35, v52, &qword_10016DF30);
  swift_storeEnumTagMultiPayload();
  sub_10007C69C();
  sub_10007C790();
  sub_10012B0E0();
  sub_100016D10(v35, &qword_10016DF30);
  return (*(uint64_t (**)(char *, uint64_t))(v34 + 8))(v32, v33);
}

uint64_t sub_10007C638(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MoonContentView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_10007C69C()
{
  unint64_t result = qword_10016DF58;
  if (!qword_10016DF58)
  {
    sub_100005470(&qword_10016DF48);
    sub_10007C748(&qword_10016DF60, (void (*)(uint64_t))&type metadata accessor for MoonRectangularContentView);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016DF58);
  }
  return result;
}

uint64_t sub_10007C748(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10007C790()
{
  unint64_t result = qword_10016DF68;
  if (!qword_10016DF68)
  {
    sub_100005470(&qword_10016DF30);
    sub_10007C748(&qword_10016DF50, (void (*)(uint64_t))&type metadata accessor for MoonInlineContentView);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016DF68);
  }
  return result;
}

unint64_t sub_10007C840()
{
  unint64_t result = qword_10016DF70;
  if (!qword_10016DF70)
  {
    sub_100005470(&qword_10016DF78);
    sub_10007C8B4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016DF70);
  }
  return result;
}

unint64_t sub_10007C8B4()
{
  unint64_t result = qword_10016DF80;
  if (!qword_10016DF80)
  {
    sub_100005470(&qword_10016DF88);
    sub_10007C69C();
    sub_10007C790();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016DF80);
  }
  return result;
}

uint64_t *sub_10007C930(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v20 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_100129330();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_100129300();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[7];
    *(uint64_t *)((char *)a1 + a3[6]) = *(uint64_t *)((char *)a2 + a3[6]);
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    uint64_t v15 = sub_100129B70();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    uint64_t v16 = a3[8];
    uint64_t v17 = (char *)a1 + v16;
    uint64_t v18 = (char *)a2 + v16;
    uint64_t v19 = sub_100129C50();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
  }
  return a1;
}

uint64_t sub_10007CAD8(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_100129330();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + a2[5];
  uint64_t v6 = sub_100129300();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + a2[7];
  uint64_t v8 = sub_100129B70();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = a1 + a2[8];
  uint64_t v10 = sub_100129C50();
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8);

  return v11(v9, v10);
}

uint64_t sub_10007CC08(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_100129330();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_100129300();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[7];
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_100129B70();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  uint64_t v15 = a3[8];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_100129C50();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  return a1;
}

uint64_t sub_10007CD60(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_100129330();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_100129300();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  uint64_t v11 = a3[7];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_100129B70();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  uint64_t v15 = a3[8];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_100129C50();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 24))(v16, v17, v18);
  return a1;
}

uint64_t sub_10007CEBC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_100129330();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_100129300();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[7];
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_100129B70();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  uint64_t v15 = a3[8];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_100129C50();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
  return a1;
}

uint64_t sub_10007D014(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_100129330();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_100129300();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[7];
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_100129B70();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v15 = a3[8];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_100129C50();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 40))(v16, v17, v18);
  return a1;
}

uint64_t sub_10007D16C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10007D180);
}

uint64_t sub_10007D180(uint64_t a1, uint64_t a2, int *a3)
{
  sub_100129330();
  sub_10000B3D0();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1;
  }
  else
  {
    sub_100129300();
    sub_10000B3D0();
    if (*(_DWORD *)(v11 + 84) == a2)
    {
      uint64_t v8 = v10;
      uint64_t v12 = a3[5];
    }
    else
    {
      sub_100129B70();
      sub_10000B3D0();
      if (*(_DWORD *)(v14 + 84) == a2)
      {
        uint64_t v8 = v13;
        uint64_t v12 = a3[7];
      }
      else
      {
        uint64_t v8 = sub_100129C50();
        uint64_t v12 = a3[8];
      }
    }
    uint64_t v9 = a1 + v12;
  }

  return _s13WeatherWidget20WeatherDataViewModelOwet_0(v9, a2, v8);
}

uint64_t sub_10007D244(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10007D258);
}

uint64_t sub_10007D258(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  sub_100129330();
  sub_10000B3D0();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = a1;
  }
  else
  {
    sub_100129300();
    sub_10000B3D0();
    if (*(_DWORD *)(v13 + 84) == a3)
    {
      uint64_t v10 = v12;
      uint64_t v14 = a4[5];
    }
    else
    {
      sub_100129B70();
      sub_10000B3D0();
      if (*(_DWORD *)(v16 + 84) == a3)
      {
        uint64_t v10 = v15;
        uint64_t v14 = a4[7];
      }
      else
      {
        uint64_t v10 = sub_100129C50();
        uint64_t v14 = a4[8];
      }
    }
    uint64_t v11 = a1 + v14;
  }

  return _s13WeatherWidget20WeatherDataViewModelOwst_0(v11, a2, a2, v10);
}

uint64_t type metadata accessor for AirQualityViewModel()
{
  uint64_t result = qword_10016DFE8;
  if (!qword_10016DFE8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10007D36C()
{
  uint64_t result = sub_100129330();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_100129300();
    if (v2 <= 0x3F)
    {
      uint64_t result = sub_100129B70();
      if (v3 <= 0x3F)
      {
        uint64_t result = sub_100129C50();
        if (v4 <= 0x3F)
        {
          swift_initStructMetadata();
          return 0;
        }
      }
    }
  }
  return result;
}

uint64_t sub_10007D4B8(uint64_t a1, uint64_t a2)
{
  if ((sub_100129310() & 1) == 0) {
    return 0;
  }
  uint64_t v4 = type metadata accessor for AirQualityViewModel();
  if ((sub_1001292A0() & 1) == 0
    || *(void *)(a1 + *(int *)(v4 + 24)) != *(void *)(a2 + *(int *)(v4 + 24))
    || (sub_100129B60() & 1) == 0)
  {
    return 0;
  }

  return sub_100129C40();
}

uint64_t sub_10007D564(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_10012D1F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 1702125924 && a2 == 0xE400000000000000;
    if (v6 || (sub_10012D1F0() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 0x7865646E69 && a2 == 0xE500000000000000;
      if (v7 || (sub_10012D1F0() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        BOOL v8 = a1 == 0x656C616373 && a2 == 0xE500000000000000;
        if (v8 || (sub_10012D1F0() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else if (a1 == 0xD000000000000014 && a2 == 0x800000010013A3B0)
        {
          swift_bridgeObjectRelease();
          return 4;
        }
        else
        {
          char v9 = sub_10012D1F0();
          swift_bridgeObjectRelease();
          if (v9) {
            return 4;
          }
          else {
            return 5;
          }
        }
      }
    }
  }
}

uint64_t sub_10007D744()
{
  return 5;
}

unint64_t sub_10007D74C(char a1)
{
  unint64_t result = 25705;
  switch(a1)
  {
    case 1:
      unint64_t result = 1702125924;
      break;
    case 2:
      unint64_t result = 0x7865646E69;
      break;
    case 3:
      unint64_t result = 0x656C616373;
      break;
    case 4:
      unint64_t result = 0xD000000000000014;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_10007D7E4(void *a1)
{
  uint64_t v3 = sub_1000053D8(&qword_10016E030);
  sub_10000DB98();
  uint64_t v5 = v4;
  __chkstk_darwin(v6);
  sub_10000DC50();
  uint64_t v9 = v8 - v7;
  sub_10000D890(a1, a1[3]);
  sub_10007E1D0();
  sub_10012D2C0();
  sub_100129330();
  sub_10007E21C(&qword_10016D1A8, (void (*)(uint64_t))&type metadata accessor for UUID);
  sub_10012D1B0();
  if (!v1)
  {
    type metadata accessor for AirQualityViewModel();
    sub_100129300();
    sub_10007E21C(&qword_10016B6E8, (void (*)(uint64_t))&type metadata accessor for Date);
    sub_10007E530();
    sub_10012D1A0();
    sub_100129B70();
    sub_10007E21C(&qword_10016E040, (void (*)(uint64_t))&type metadata accessor for AirQualityScale);
    sub_10007E530();
    sub_100129C50();
    sub_10007E21C(&qword_10016E048, (void (*)(uint64_t))&type metadata accessor for AirQualityScaleCategory);
    sub_10012D1B0();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v9, v3);
}

uint64_t sub_10007DAAC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v29 = sub_100129C50();
  sub_10000DB98();
  uint64_t v26 = v3;
  __chkstk_darwin(v4);
  sub_10000DBCC();
  uint64_t v28 = v5;
  uint64_t v35 = sub_100129B70();
  sub_10000DB98();
  uint64_t v31 = v6;
  __chkstk_darwin(v7);
  sub_10000DBCC();
  uint64_t v30 = v8;
  sub_100129300();
  sub_10000DB98();
  uint64_t v33 = v10;
  uint64_t v34 = v9;
  __chkstk_darwin(v9);
  sub_10000DC50();
  uint64_t v13 = v12 - v11;
  uint64_t v14 = sub_100129330();
  sub_10000DB98();
  uint64_t v32 = v15;
  __chkstk_darwin(v16);
  sub_10000DBCC();
  uint64_t v36 = v17;
  sub_1000053D8(&qword_10016E050);
  sub_10000DB98();
  __chkstk_darwin(v18);
  sub_10000DC50();
  uint64_t v19 = (int *)type metadata accessor for AirQualityViewModel();
  __chkstk_darwin(v19);
  sub_10000DC50();
  uint64_t v22 = v21 - v20;
  sub_10000D890(a1, a1[3]);
  sub_10007E1D0();
  sub_10012D2B0();
  if (v37) {
    return sub_10000DB48((uint64_t)a1);
  }
  sub_10007E21C(&qword_10016D238, (void (*)(uint64_t))&type metadata accessor for UUID);
  sub_10012D130();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v32 + 32))(v22, v36, v14);
  sub_10007E21C(&qword_10016B6C0, (void (*)(uint64_t))&type metadata accessor for Date);
  sub_10012D130();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v33 + 32))(v22 + v19[5], v13, v34);
  *(void *)(v22 + v19[6]) = sub_10012D120();
  sub_10007E21C(&qword_10016E058, (void (*)(uint64_t))&type metadata accessor for AirQualityScale);
  sub_10012D130();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v31 + 32))(v22 + v19[7], v30, v35);
  sub_10007E21C(&qword_10016E060, (void (*)(uint64_t))&type metadata accessor for AirQualityScaleCategory);
  sub_10012D130();
  uint64_t v23 = sub_10007E518();
  v24(v23);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v26 + 32))(v22 + v19[8], v28, v29);
  sub_10007E264(v22, a2);
  sub_10000DB48((uint64_t)a1);
  return sub_10007E2C8(v22);
}

unint64_t sub_10007E084()
{
  return sub_10007D74C(*v0);
}

uint64_t sub_10007E08C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_10007D564(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_10007E0B4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_10007D744();
  *a1 = result;
  return result;
}

uint64_t sub_10007E0DC(uint64_t a1)
{
  unint64_t v2 = sub_10007E1D0();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10007E118(uint64_t a1)
{
  unint64_t v2 = sub_10007E1D0();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10007E158()
{
  return sub_10007E21C(&qword_10016D2B0, (void (*)(uint64_t))&type metadata accessor for UUID);
}

uint64_t sub_10007E1A0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10007DAAC(a1, a2);
}

uint64_t sub_10007E1B8(void *a1)
{
  return sub_10007D7E4(a1);
}

unint64_t sub_10007E1D0()
{
  unint64_t result = qword_10016E038;
  if (!qword_10016E038)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016E038);
  }
  return result;
}

uint64_t sub_10007E21C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10007E264(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AirQualityViewModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10007E2C8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for AirQualityViewModel();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unsigned char *storeEnumTagSinglePayload for AirQualityViewModel.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10007E3F0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AirQualityViewModel.CodingKeys()
{
  return &type metadata for AirQualityViewModel.CodingKeys;
}

unint64_t sub_10007E42C()
{
  unint64_t result = qword_10016E068;
  if (!qword_10016E068)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016E068);
  }
  return result;
}

unint64_t sub_10007E47C()
{
  unint64_t result = qword_10016E070;
  if (!qword_10016E070)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016E070);
  }
  return result;
}

unint64_t sub_10007E4CC()
{
  unint64_t result = qword_10016E078;
  if (!qword_10016E078)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016E078);
  }
  return result;
}

uint64_t sub_10007E518()
{
  return *(void *)(v0 - 104);
}

uint64_t sub_10007E530()
{
  return sub_10012D1B0();
}

uint64_t sub_10007E554(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000053D8(&qword_10016E080);
  sub_10000DB98();
  uint64_t v6 = v5;
  __chkstk_darwin(v7);
  sub_10000DC50();
  uint64_t v10 = v9 - v8;
  sub_1000053D8(&qword_10016E088);
  sub_10000DB98();
  uint64_t v40 = v11;
  uint64_t v41 = v12;
  __chkstk_darwin(v11);
  sub_10000DC50();
  uint64_t v15 = v14 - v13;
  sub_1000053D8(&qword_10016E090);
  sub_10000DB98();
  uint64_t v42 = v16;
  uint64_t v43 = v17;
  __chkstk_darwin(v16);
  sub_10000DC50();
  uint64_t v39 = v19 - v18;
  type metadata accessor for WeatherTimelineProvider();
  swift_allocObject();
  swift_bridgeObjectRetain_n();
  sub_100118DBC(0, a1, a2);
  type metadata accessor for WindContentView();
  sub_10007EB64(&qword_10016E098, (void (*)(uint64_t))type metadata accessor for WindContentView);
  sub_10007EB64(&qword_10016BDB8, (void (*)(uint64_t))type metadata accessor for WeatherTimelineProvider);
  sub_10012C890();
  sub_10012AF80();
  uint64_t v20 = sub_10012B400();
  uint64_t v22 = v21;
  char v24 = v23 & 1;
  sub_10007EBAC();
  sub_10012B0B0();
  sub_100008278(v20, v22, v24);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v10, v4);
  sub_10012AF80();
  uint64_t v25 = sub_10012B400();
  uint64_t v27 = v26;
  LOBYTE(v22) = v28 & 1;
  swift_getOpaqueTypeConformance2();
  sub_10012B070();
  sub_100008278(v25, v27, v22);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v15, v40);
  sub_1000053D8(&qword_10016B9C8);
  uint64_t v29 = sub_10012C800();
  sub_10000DB98();
  uint64_t v31 = v30;
  uint64_t v33 = *(void *)(v32 + 72);
  unint64_t v34 = (*(unsigned __int8 *)(v30 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80);
  uint64_t v35 = swift_allocObject();
  *(_OWORD *)(v35 + 16) = xmmword_100130850;
  unint64_t v36 = v35 + v34;
  uint64_t v37 = *(void (**)(unint64_t, void, uint64_t))(v31 + 104);
  v37(v36, enum case for WidgetFamily.accessoryCircular(_:), v29);
  v37(v36 + v33, enum case for WidgetFamily.accessoryInline(_:), v29);
  swift_getOpaqueTypeConformance2();
  sub_10012B090();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v43 + 8))(v39, v42);
}

uint64_t sub_10007EA20@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = type metadata accessor for ForecastEntry(0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100024484(a1, (uint64_t)v6);
  *a2 = swift_getKeyPath();
  sub_1000053D8(&qword_10016B410);
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = type metadata accessor for WindContentView();
  return sub_100024560((uint64_t)v6, (uint64_t)a2 + *(int *)(v7 + 20));
}

unint64_t sub_10007EAE4()
{
  return 0xD000000000000023;
}

ValueMetadata *type metadata accessor for WindComplicationWidget()
{
  return &type metadata for WindComplicationWidget;
}

uint64_t sub_10007EB10()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_10007EB2C@<X0>(void *a1@<X8>)
{
  unint64_t result = sub_10007EAE4();
  *a1 = 0xD000000000000023;
  a1[1] = v3;
  return result;
}

uint64_t sub_10007EB5C()
{
  return sub_10007E554(*v0, v0[1]);
}

uint64_t sub_10007EB64(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10007EBAC()
{
  unint64_t result = qword_10016E0A0;
  if (!qword_10016E0A0)
  {
    sub_100005470(&qword_10016E080);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016E0A0);
  }
  return result;
}

uint64_t sub_10007EC04()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t DateComponents.hour(for:)(uint64_t a1)
{
  return sub_10007ECE8(a1, (unsigned int *)&enum case for Calendar.Component.hour(_:));
}

uint64_t DateComponents.minute(for:)(uint64_t a1)
{
  return sub_10007ECE8(a1, (unsigned int *)&enum case for Calendar.Component.minute(_:));
}

uint64_t sub_10007ECE8(uint64_t a1, unsigned int *a2)
{
  sub_100129430();
  sub_10000DB98();
  uint64_t v41 = v3;
  uint64_t v42 = v2;
  __chkstk_darwin(v2);
  sub_10000DBCC();
  uint64_t v39 = v4;
  uint64_t v5 = sub_1000053D8(&qword_10016C7B0);
  __chkstk_darwin(v5 - 8);
  sub_10000DC50();
  uint64_t v8 = v7 - v6;
  uint64_t v45 = sub_100129300();
  sub_10000DB98();
  uint64_t v38 = v9;
  __chkstk_darwin(v10);
  sub_10000DBCC();
  uint64_t v44 = v11;
  uint64_t v12 = sub_100129480();
  sub_10000DB98();
  uint64_t v14 = v13;
  __chkstk_darwin(v15);
  sub_10000DC50();
  uint64_t v18 = v17 - v16;
  uint64_t v19 = sub_1000053D8(&qword_10016E0A8);
  __chkstk_darwin(v19 - 8);
  sub_10000DC50();
  uint64_t v22 = v21 - v20;
  uint64_t v23 = sub_100129450();
  sub_10000DB98();
  uint64_t v25 = v24;
  __chkstk_darwin(v26);
  sub_10000DC50();
  uint64_t v29 = v28 - v27;
  sub_1001290F0();
  if (_s13WeatherWidget20WeatherDataViewModelOwet_0(v22, 1, v23) == 1)
  {
    uint64_t v30 = &qword_10016E0A8;
    uint64_t v31 = v22;
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v25 + 32))(v29, v22, v23);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16))(v18, a1, v12);
    sub_100129420();
    sub_1001290E0();
    if (_s13WeatherWidget20WeatherDataViewModelOwet_0(v8, 1, v45) != 1)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v38 + 32))(v44, v8, v45);
      (*(void (**)(uint64_t, void, uint64_t))(v41 + 104))(v39, *a2, v42);
      uint64_t v34 = sub_100129440();
      (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v39, v42);
      (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v44, v45);
      uint64_t v35 = sub_10007F04C();
      v36(v35);
      return v34;
    }
    uint64_t v32 = sub_10007F04C();
    v33(v32);
    uint64_t v30 = &qword_10016C7B0;
    uint64_t v31 = v8;
  }
  sub_100016D10(v31, v30);
  return 0;
}

uint64_t DateComponents.day(for:)(uint64_t a1)
{
  return sub_10007ECE8(a1, &enum case for Calendar.Component.weekday(_:));
}

uint64_t sub_10007F04C()
{
  return v0;
}

ValueMetadata *type metadata accessor for LargePrecipitationDescriptionView()
{
  return &type metadata for LargePrecipitationDescriptionView;
}

uint64_t *sub_10007F074(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = type metadata accessor for ForecastEntry(0);
  int v5 = *(_DWORD *)(*(void *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *a1 = *a2;
    uint64_t v14 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = (int *)v4;
    uint64_t v7 = sub_100129300();
    uint64_t v91 = *(void (**)(uint64_t *, uint64_t *))(*(void *)(v7 - 8) + 16);
    uint64_t v92 = v7;
    v91(a1, a2);
    uint64_t v8 = v6[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_10012C920();
    if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v10, 1, v11))
    {
      uint64_t v12 = sub_1000053D8(&qword_10016B418);
      memcpy(v9, v10, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
      _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v9, 0, 1, v11);
    }
    uint64_t v15 = v6[6];
    uint64_t v94 = a1;
    uint64_t v16 = (char *)a1 + v15;
    uint64_t v17 = (char *)a2 + v15;
    uint64_t v18 = *(uint64_t *)((char *)a2 + v15 + 8);
    *(void *)uint64_t v16 = *(uint64_t *)((char *)a2 + v15);
    *((void *)v16 + 1) = v18;
    uint64_t v19 = *(uint64_t *)((char *)a2 + v15 + 24);
    *((void *)v16 + 2) = *(uint64_t *)((char *)a2 + v15 + 16);
    *((void *)v16 + 3) = v19;
    uint64_t v20 = *(uint64_t *)((char *)a2 + v15 + 40);
    *((void *)v16 + 4) = *(uint64_t *)((char *)a2 + v15 + 32);
    *((void *)v16 + 5) = v20;
    *((_DWORD *)v16 + 12) = *(_DWORD *)((char *)a2 + v15 + 48);
    uint64_t v21 = type metadata accessor for WidgetContext();
    uint64_t v22 = *(int *)(v21 + 40);
    __dst = &v16[v22];
    uint64_t v23 = &v17[v22];
    uint64_t v24 = sub_100129220();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v23, 1, v24))
    {
      uint64_t v25 = sub_1000053D8(&qword_10016B420);
      memcpy(__dst, v23, *(void *)(*(void *)(v25 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16))(__dst, v23, v24);
      _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)__dst, 0, 1, v24);
    }
    uint64_t v26 = *(int *)(v21 + 44);
    uint64_t v27 = &v16[v26];
    uint64_t v28 = &v17[v26];
    *(void *)uint64_t v27 = *(void *)v28;
    v27[8] = v28[8];
    uint64_t v29 = v6[7];
    uint64_t v14 = v94;
    uint64_t v30 = (char *)v94 + v29;
    uint64_t v31 = (char *)a2 + v29;
    uint64_t v32 = type metadata accessor for ForecastEntry.Model(0);
    swift_bridgeObjectRetain();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      type metadata accessor for WeatherDataViewModel();
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        uint64_t v44 = sub_10012BE90();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v44 - 8) + 16))(v30, v31, v44);
      }
      else if (EnumCaseMultiPayload == 1)
      {
        uint64_t v34 = sub_100129330();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 16))(v30, v31, v34);
        uint64_t v35 = type metadata accessor for InstantWeatherViewModel();
        uint64_t v36 = *(int *)(v35 + 20);
        uint64_t v37 = &v30[v36];
        uint64_t v38 = &v31[v36];
        uint64_t v39 = sub_10012A6B0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 16))(v37, v38, v39);
        uint64_t v40 = *(int *)(v35 + 24);
        uint64_t v41 = &v30[v40];
        uint64_t v42 = &v31[v40];
        uint64_t v43 = sub_10012C250();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 16))(v41, v42, v43);
      }
      else
      {
        uint64_t v90 = v24;
        uint64_t v45 = sub_100129330();
        uint64_t v46 = (void (**)(void *, const void *))(*(void *)(v45 - 8) + 16);
        uint64_t v88 = *v46;
        uint64_t v89 = v45;
        (*v46)(v30, v31);
        uint64_t v47 = (int *)type metadata accessor for AggregateWeatherViewModel(0);
        uint64_t v48 = v47[5];
        uint64_t v49 = &v30[v48];
        uint64_t v50 = &v31[v48];
        uint64_t v51 = sub_10012A6B0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v51 - 8) + 16))(v49, v50, v51);
        uint64_t v52 = v47[6];
        uint64_t v53 = &v30[v52];
        uint64_t v54 = &v31[v52];
        uint64_t v55 = sub_10012C250();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v55 - 8) + 16))(v53, v54, v55);
        *(void *)&v30[v47[7]] = *(void *)&v31[v47[7]];
        *(void *)&v30[v47[8]] = *(void *)&v31[v47[8]];
        uint64_t v56 = v47[9];
        Swift::String v57 = &v30[v56];
        Swift::String v58 = &v31[v56];
        Swift::String v59 = (int *)type metadata accessor for AirQualityViewModel();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v58, 1, (uint64_t)v59))
        {
          uint64_t v60 = sub_1000053D8(&qword_10016B428);
          memcpy(v57, v58, *(void *)(*(void *)(v60 - 8) + 64));
        }
        else
        {
          uint64_t v61 = (uint64_t)v57;
          ((void (*)(char *, char *, uint64_t))v88)(v57, v58, v89);
          ((void (*)(char *, char *, uint64_t))v91)(&v57[v59[5]], &v58[v59[5]], v92);
          *(void *)&v57[v59[6]] = *(void *)&v58[v59[6]];
          uint64_t v62 = v59[7];
          uint64_t v63 = &v57[v62];
          uint64_t v64 = &v58[v62];
          uint64_t v65 = sub_100129B70();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v65 - 8) + 16))(v63, v64, v65);
          uint64_t v66 = v59[8];
          uint64_t v67 = v61 + v66;
          BOOL v68 = &v58[v66];
          uint64_t v69 = sub_100129C50();
          (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v69 - 8) + 16))(v67, v68, v69);
          _s13WeatherWidget20WeatherDataViewModelOwst_0(v61, 0, 1, (uint64_t)v59);
        }
        uint64_t v14 = v94;
        uint64_t v70 = v47[10];
        unint64_t v71 = &v30[v70];
        uint64_t v72 = &v31[v70];
        uint64_t v73 = sub_10012C6B0();
        if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v72, 1, v73))
        {
          uint64_t v74 = sub_1000053D8(&qword_10016B430);
          memcpy(v71, v72, *(void *)(*(void *)(v74 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v73 - 8) + 16))(v71, v72, v73);
          _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v71, 0, 1, v73);
        }
        *(void *)&v30[v47[11]] = *(void *)&v31[v47[11]];
        uint64_t v75 = v47[12];
        uint64_t v76 = &v30[v75];
        uint64_t v77 = &v31[v75];
        *(void *)uint64_t v76 = *(void *)v77;
        *((_WORD *)v76 + 4) = *((_WORD *)v77 + 4);
        uint64_t v78 = v47[13];
        uint64_t v79 = &v30[v78];
        uint64_t v80 = &v31[v78];
        swift_bridgeObjectRetain();
        if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v80, 1, v90))
        {
          uint64_t v81 = sub_1000053D8(&qword_10016B420);
          memcpy(v79, v80, *(void *)(*(void *)(v81 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v90 - 8) + 16))(v79, v80, v90);
          _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v79, 0, 1, v90);
        }
        uint64_t v82 = v47[14];
        unsigned int v83 = &v30[v82];
        unsigned int v84 = &v31[v82];
        uint64_t v85 = type metadata accessor for AggregateWeatherViewModel.SunEvent(0);
        if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v84, 1, v85))
        {
          uint64_t v86 = sub_1000053D8(&qword_10016B438);
          memcpy(v83, v84, *(void *)(*(void *)(v86 - 8) + 64));
        }
        else
        {
          swift_getEnumCaseMultiPayload();
          ((void (*)(char *, char *, uint64_t))v91)(v83, v84, v92);
          swift_storeEnumTagMultiPayload();
          _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v83, 0, 1, v85);
        }
      }
      swift_storeEnumTagMultiPayload();
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v30, v31, *(void *)(*(void *)(v32 - 8) + 64));
    }
  }
  return v14;
}

uint64_t sub_10007F958(uint64_t a1)
{
  uint64_t v2 = sub_100129300();
  uint64_t v39 = *(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  v39(a1, v2);
  uint64_t v3 = (int *)type metadata accessor for ForecastEntry(0);
  uint64_t v4 = a1 + v3[5];
  uint64_t v5 = sub_10012C920();
  if (!_s13WeatherWidget20WeatherDataViewModelOwet_0(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  uint64_t v6 = a1 + v3[6];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v7 = v6 + *(int *)(type metadata accessor for WidgetContext() + 40);
  uint64_t v8 = sub_100129220();
  if (!_s13WeatherWidget20WeatherDataViewModelOwet_0(v7, 1, v8)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  }
  swift_bridgeObjectRelease();
  uint64_t v9 = a1 + v3[7];
  type metadata accessor for ForecastEntry.Model(0);
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 1)
  {
    type metadata accessor for WeatherDataViewModel();
    uint64_t result = swift_getEnumCaseMultiPayload();
    if (result == 2)
    {
      uint64_t v29 = sub_10012BE90();
      uint64_t v30 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v29 - 8) + 8);
      uint64_t v31 = v29;
      uint64_t v32 = v9;
    }
    else if (result == 1)
    {
      uint64_t v33 = sub_100129330();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v33 - 8) + 8))(v9, v33);
      uint64_t v34 = type metadata accessor for InstantWeatherViewModel();
      uint64_t v35 = v9 + *(int *)(v34 + 20);
      uint64_t v36 = sub_10012A6B0();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v36 - 8) + 8))(v35, v36);
      uint64_t v37 = v9 + *(int *)(v34 + 24);
      uint64_t v38 = sub_10012C250();
      uint64_t v30 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v38 - 8) + 8);
      uint64_t v31 = v38;
      uint64_t v32 = v37;
    }
    else
    {
      if (result) {
        return result;
      }
      uint64_t v11 = sub_100129330();
      uint64_t v12 = *(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8);
      v12(v9, v11);
      uint64_t v13 = (int *)type metadata accessor for AggregateWeatherViewModel(0);
      uint64_t v14 = v9 + v13[5];
      uint64_t v15 = sub_10012A6B0();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v14, v15);
      uint64_t v16 = v9 + v13[6];
      uint64_t v17 = sub_10012C250();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v17 - 8) + 8))(v16, v17);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v18 = v9 + v13[9];
      uint64_t v19 = (int *)type metadata accessor for AirQualityViewModel();
      if (!_s13WeatherWidget20WeatherDataViewModelOwet_0(v18, 1, (uint64_t)v19))
      {
        v12(v18, v11);
        v39(v18 + v19[5], v2);
        uint64_t v20 = v18 + v19[7];
        uint64_t v21 = sub_100129B70();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v21 - 8) + 8))(v20, v21);
        uint64_t v22 = v18 + v19[8];
        uint64_t v23 = sub_100129C50();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v23 - 8) + 8))(v22, v23);
      }
      uint64_t v24 = v9 + v13[10];
      uint64_t v25 = sub_10012C6B0();
      if (!_s13WeatherWidget20WeatherDataViewModelOwet_0(v24, 1, v25)) {
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v25 - 8) + 8))(v24, v25);
      }
      swift_bridgeObjectRelease();
      uint64_t v26 = v9 + v13[13];
      if (!_s13WeatherWidget20WeatherDataViewModelOwet_0(v26, 1, v8)) {
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v26, v8);
      }
      uint64_t v27 = v9 + v13[14];
      uint64_t v28 = type metadata accessor for AggregateWeatherViewModel.SunEvent(0);
      uint64_t result = _s13WeatherWidget20WeatherDataViewModelOwet_0(v27, 1, v28);
      if (result) {
        return result;
      }
      uint64_t v32 = v27;
      uint64_t v31 = v2;
      uint64_t v30 = (uint64_t (*)(uint64_t, uint64_t))v39;
    }
    return v30(v32, v31);
  }
  return result;
}

uint64_t sub_10007FEDC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100129300();
  uint64_t v89 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  uint64_t v90 = v4;
  v89(a1, a2);
  uint64_t v5 = type metadata accessor for ForecastEntry(0);
  uint64_t v6 = *(int *)(v5 + 20);
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (const void *)(a2 + v6);
  uint64_t v9 = sub_10012C920();
  if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v8, 1, v9))
  {
    uint64_t v10 = sub_1000053D8(&qword_10016B418);
    memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
    _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v7, 0, 1, v9);
  }
  uint64_t v91 = v5;
  uint64_t v92 = a1;
  uint64_t v11 = *(int *)(v5 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = *(void *)(a2 + v11 + 8);
  *(void *)uint64_t v12 = *(void *)(a2 + v11);
  *(void *)(v12 + 8) = v14;
  uint64_t v15 = *(void *)(a2 + v11 + 24);
  *(void *)(v12 + 16) = *(void *)(a2 + v11 + 16);
  *(void *)(v12 + 24) = v15;
  uint64_t v16 = *(void *)(a2 + v11 + 40);
  *(void *)(v12 + 32) = *(void *)(a2 + v11 + 32);
  *(void *)(v12 + 40) = v16;
  *(_DWORD *)(v12 + 48) = *(_DWORD *)(a2 + v11 + 48);
  uint64_t v17 = type metadata accessor for WidgetContext();
  uint64_t v18 = *(int *)(v17 + 40);
  uint64_t v19 = (void *)(v12 + v18);
  uint64_t v20 = (const void *)(v13 + v18);
  uint64_t v21 = sub_100129220();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v20, 1, v21))
  {
    uint64_t v22 = sub_1000053D8(&qword_10016B420);
    memcpy(v19, v20, *(void *)(*(void *)(v22 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v21 - 8) + 16))(v19, v20, v21);
    _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v19, 0, 1, v21);
  }
  uint64_t v23 = *(int *)(v17 + 44);
  uint64_t v24 = v12 + v23;
  uint64_t v25 = v13 + v23;
  *(void *)uint64_t v24 = *(void *)v25;
  *(unsigned char *)(v24 + 8) = *(unsigned char *)(v25 + 8);
  uint64_t v26 = v92;
  uint64_t v27 = *(int *)(v91 + 28);
  uint64_t v28 = (char *)(v92 + v27);
  uint64_t v29 = (char *)(a2 + v27);
  uint64_t v30 = type metadata accessor for ForecastEntry.Model(0);
  swift_bridgeObjectRetain();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    type metadata accessor for WeatherDataViewModel();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v42 = sub_10012BE90();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v42 - 8) + 16))(v28, v29, v42);
    }
    else if (EnumCaseMultiPayload == 1)
    {
      uint64_t v32 = sub_100129330();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 16))(v28, v29, v32);
      uint64_t v33 = type metadata accessor for InstantWeatherViewModel();
      uint64_t v34 = *(int *)(v33 + 20);
      uint64_t v35 = &v28[v34];
      uint64_t v36 = &v29[v34];
      uint64_t v37 = sub_10012A6B0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 16))(v35, v36, v37);
      uint64_t v38 = *(int *)(v33 + 24);
      uint64_t v39 = &v28[v38];
      uint64_t v40 = &v29[v38];
      uint64_t v41 = sub_10012C250();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v41 - 8) + 16))(v39, v40, v41);
    }
    else
    {
      uint64_t v88 = v21;
      uint64_t v43 = sub_100129330();
      uint64_t v44 = (void (**)(void *, const void *))(*(void *)(v43 - 8) + 16);
      uint64_t v86 = *v44;
      uint64_t v87 = v43;
      (*v44)(v28, v29);
      uint64_t v45 = (int *)type metadata accessor for AggregateWeatherViewModel(0);
      uint64_t v46 = v45[5];
      uint64_t v47 = &v28[v46];
      uint64_t v48 = &v29[v46];
      uint64_t v49 = sub_10012A6B0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v49 - 8) + 16))(v47, v48, v49);
      uint64_t v50 = v45[6];
      uint64_t v51 = &v28[v50];
      uint64_t v52 = &v29[v50];
      uint64_t v53 = sub_10012C250();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v53 - 8) + 16))(v51, v52, v53);
      *(void *)&v28[v45[7]] = *(void *)&v29[v45[7]];
      *(void *)&v28[v45[8]] = *(void *)&v29[v45[8]];
      uint64_t v54 = v45[9];
      uint64_t v55 = &v28[v54];
      uint64_t v56 = &v29[v54];
      Swift::String v57 = (int *)type metadata accessor for AirQualityViewModel();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v56, 1, (uint64_t)v57))
      {
        uint64_t v58 = sub_1000053D8(&qword_10016B428);
        memcpy(v55, v56, *(void *)(*(void *)(v58 - 8) + 64));
      }
      else
      {
        uint64_t v59 = (uint64_t)v55;
        ((void (*)(char *, char *, uint64_t))v86)(v55, v56, v87);
        ((void (*)(char *, char *, uint64_t))v89)(&v55[v57[5]], &v56[v57[5]], v90);
        *(void *)&v55[v57[6]] = *(void *)&v56[v57[6]];
        uint64_t v60 = v57[7];
        uint64_t v61 = &v55[v60];
        uint64_t v62 = &v56[v60];
        uint64_t v63 = sub_100129B70();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v63 - 8) + 16))(v61, v62, v63);
        uint64_t v64 = v57[8];
        uint64_t v65 = v59 + v64;
        uint64_t v66 = &v56[v64];
        uint64_t v67 = sub_100129C50();
        (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v67 - 8) + 16))(v65, v66, v67);
        _s13WeatherWidget20WeatherDataViewModelOwst_0(v59, 0, 1, (uint64_t)v57);
      }
      uint64_t v26 = v92;
      uint64_t v68 = v45[10];
      uint64_t v69 = &v28[v68];
      uint64_t v70 = &v29[v68];
      uint64_t v71 = sub_10012C6B0();
      if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v70, 1, v71))
      {
        uint64_t v72 = sub_1000053D8(&qword_10016B430);
        memcpy(v69, v70, *(void *)(*(void *)(v72 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v71 - 8) + 16))(v69, v70, v71);
        _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v69, 0, 1, v71);
      }
      *(void *)&v28[v45[11]] = *(void *)&v29[v45[11]];
      uint64_t v73 = v45[12];
      uint64_t v74 = &v28[v73];
      uint64_t v75 = &v29[v73];
      *(void *)uint64_t v74 = *(void *)v75;
      *((_WORD *)v74 + 4) = *((_WORD *)v75 + 4);
      uint64_t v76 = v45[13];
      uint64_t v77 = &v28[v76];
      uint64_t v78 = &v29[v76];
      swift_bridgeObjectRetain();
      if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v78, 1, v88))
      {
        uint64_t v79 = sub_1000053D8(&qword_10016B420);
        memcpy(v77, v78, *(void *)(*(void *)(v79 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v88 - 8) + 16))(v77, v78, v88);
        _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v77, 0, 1, v88);
      }
      uint64_t v80 = v45[14];
      uint64_t v81 = &v28[v80];
      uint64_t v82 = &v29[v80];
      uint64_t v83 = type metadata accessor for AggregateWeatherViewModel.SunEvent(0);
      if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v82, 1, v83))
      {
        uint64_t v84 = sub_1000053D8(&qword_10016B438);
        memcpy(v81, v82, *(void *)(*(void *)(v84 - 8) + 64));
      }
      else
      {
        swift_getEnumCaseMultiPayload();
        ((void (*)(char *, char *, uint64_t))v89)(v81, v82, v90);
        swift_storeEnumTagMultiPayload();
        _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v81, 0, 1, v83);
      }
    }
    swift_storeEnumTagMultiPayload();
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v28, v29, *(void *)(*(void *)(v30 - 8) + 64));
  }
  return v26;
}

uint64_t sub_100080768(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100129300();
  uint64_t v90 = *(void *)(v4 - 8);
  uint64_t v91 = v4;
  (*(void (**)(uint64_t, uint64_t))(v90 + 24))(a1, a2);
  uint64_t v5 = (int *)type metadata accessor for ForecastEntry(0);
  uint64_t v6 = v5[5];
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (const void *)(a2 + v6);
  uint64_t v9 = sub_10012C920();
  int v10 = _s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v7, 1, v9);
  int v11 = _s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v8, 1, v9);
  if (v10)
  {
    if (!v11)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
      _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v12 = *(void *)(v9 - 8);
  if (v11)
  {
    (*(void (**)(void *, uint64_t))(v12 + 8))(v7, v9);
LABEL_6:
    uint64_t v13 = sub_1000053D8(&qword_10016B418);
    memcpy(v7, v8, *(void *)(*(void *)(v13 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(v12 + 24))(v7, v8, v9);
LABEL_7:
  uint64_t v14 = v5[6];
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  *(void *)uint64_t v15 = *(void *)(a2 + v14);
  *(void *)(v15 + 8) = *(void *)(a2 + v14 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v15 + 16) = *(void *)(v16 + 16);
  *(void *)(v15 + 24) = *(void *)(v16 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v15 + 32) = *(void *)(v16 + 32);
  *(void *)(v15 + 40) = *(void *)(v16 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v15 + 48) = *(unsigned char *)(v16 + 48);
  *(unsigned char *)(v15 + 49) = *(unsigned char *)(v16 + 49);
  *(unsigned char *)(v15 + 50) = *(unsigned char *)(v16 + 50);
  *(unsigned char *)(v15 + 51) = *(unsigned char *)(v16 + 51);
  uint64_t v17 = type metadata accessor for WidgetContext();
  uint64_t v18 = *(int *)(v17 + 40);
  uint64_t v19 = (void *)(v15 + v18);
  uint64_t v20 = (const void *)(v16 + v18);
  uint64_t v21 = sub_100129220();
  int v22 = _s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v19, 1, v21);
  int v23 = _s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v20, 1, v21);
  if (v22)
  {
    if (!v23)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v21 - 8) + 16))(v19, v20, v21);
      _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v19, 0, 1, v21);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  uint64_t v24 = *(void *)(v21 - 8);
  if (v23)
  {
    (*(void (**)(void *, uint64_t))(v24 + 8))(v19, v21);
LABEL_12:
    uint64_t v25 = sub_1000053D8(&qword_10016B420);
    memcpy(v19, v20, *(void *)(*(void *)(v25 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, const void *, uint64_t))(v24 + 24))(v19, v20, v21);
LABEL_13:
  uint64_t v26 = *(int *)(v17 + 44);
  uint64_t v27 = v15 + v26;
  uint64_t v28 = v16 + v26;
  *(void *)(v15 + v26) = *(void *)v28;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v27 + 8) = *(unsigned char *)(v28 + 8);
  if (a1 != a2)
  {
    uint64_t v29 = v5[7];
    uint64_t v30 = (char *)(a1 + v29);
    uint64_t v31 = (char *)(a2 + v29);
    sub_100084168(a1 + v29, (void (*)(void))type metadata accessor for ForecastEntry.Model);
    uint64_t v32 = type metadata accessor for ForecastEntry.Model(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      type metadata accessor for WeatherDataViewModel();
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        uint64_t v44 = sub_10012BE90();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v44 - 8) + 16))(v30, v31, v44);
      }
      else if (EnumCaseMultiPayload == 1)
      {
        uint64_t v34 = sub_100129330();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 16))(v30, v31, v34);
        uint64_t v35 = type metadata accessor for InstantWeatherViewModel();
        uint64_t v36 = *(int *)(v35 + 20);
        uint64_t v37 = &v30[v36];
        uint64_t v38 = &v31[v36];
        uint64_t v39 = sub_10012A6B0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 16))(v37, v38, v39);
        uint64_t v40 = *(int *)(v35 + 24);
        uint64_t v41 = &v30[v40];
        uint64_t v42 = &v31[v40];
        uint64_t v43 = sub_10012C250();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 16))(v41, v42, v43);
      }
      else
      {
        uint64_t v45 = sub_100129330();
        uint64_t v87 = *(void (**)(char *, char *))(*(void *)(v45 - 8) + 16);
        uint64_t v88 = v45;
        v87(v30, v31);
        uint64_t v46 = (int *)type metadata accessor for AggregateWeatherViewModel(0);
        uint64_t v47 = v46[5];
        uint64_t v48 = &v30[v47];
        uint64_t v49 = &v31[v47];
        uint64_t v50 = sub_10012A6B0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v50 - 8) + 16))(v48, v49, v50);
        uint64_t v51 = v46[6];
        uint64_t v52 = &v30[v51];
        uint64_t v53 = &v31[v51];
        uint64_t v54 = sub_10012C250();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v54 - 8) + 16))(v52, v53, v54);
        *(void *)&v30[v46[7]] = *(void *)&v31[v46[7]];
        *(void *)&v30[v46[8]] = *(void *)&v31[v46[8]];
        uint64_t v89 = v46;
        uint64_t v55 = v46[9];
        uint64_t v56 = &v30[v55];
        Swift::String v57 = &v31[v55];
        uint64_t v58 = (int *)type metadata accessor for AirQualityViewModel();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v57, 1, (uint64_t)v58))
        {
          uint64_t v59 = sub_1000053D8(&qword_10016B428);
          memcpy(v56, v57, *(void *)(*(void *)(v59 - 8) + 64));
        }
        else
        {
          ((void (*)(char *, char *, uint64_t))v87)(v56, v57, v88);
          (*(void (**)(char *, char *, uint64_t))(v90 + 16))(&v56[v58[5]], &v57[v58[5]], v91);
          *(void *)&v56[v58[6]] = *(void *)&v57[v58[6]];
          uint64_t v60 = v58[7];
          uint64_t v61 = &v56[v60];
          uint64_t v62 = &v57[v60];
          uint64_t v63 = sub_100129B70();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v63 - 8) + 16))(v61, v62, v63);
          uint64_t v64 = v58[8];
          uint64_t v65 = &v56[v64];
          uint64_t v66 = &v57[v64];
          uint64_t v67 = sub_100129C50();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v67 - 8) + 16))(v65, v66, v67);
          _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v56, 0, 1, (uint64_t)v58);
        }
        uint64_t v68 = v89[10];
        uint64_t v69 = &v30[v68];
        uint64_t v70 = &v31[v68];
        uint64_t v71 = sub_10012C6B0();
        if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v70, 1, v71))
        {
          uint64_t v72 = sub_1000053D8(&qword_10016B430);
          memcpy(v69, v70, *(void *)(*(void *)(v72 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v71 - 8) + 16))(v69, v70, v71);
          _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v69, 0, 1, v71);
        }
        *(void *)&v30[v89[11]] = *(void *)&v31[v89[11]];
        uint64_t v73 = v89[12];
        uint64_t v74 = &v30[v73];
        uint64_t v75 = &v31[v73];
        uint64_t v76 = *(void *)v75;
        *((_WORD *)v74 + 4) = *((_WORD *)v75 + 4);
        *(void *)uint64_t v74 = v76;
        uint64_t v77 = v89[13];
        uint64_t v78 = &v30[v77];
        uint64_t v79 = &v31[v77];
        swift_bridgeObjectRetain();
        if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v79, 1, v21))
        {
          uint64_t v80 = sub_1000053D8(&qword_10016B420);
          memcpy(v78, v79, *(void *)(*(void *)(v80 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16))(v78, v79, v21);
          _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v78, 0, 1, v21);
        }
        uint64_t v81 = v89[14];
        uint64_t v82 = &v30[v81];
        uint64_t v83 = &v31[v81];
        uint64_t v84 = type metadata accessor for AggregateWeatherViewModel.SunEvent(0);
        if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v83, 1, v84))
        {
          uint64_t v85 = sub_1000053D8(&qword_10016B438);
          memcpy(v82, v83, *(void *)(*(void *)(v85 - 8) + 64));
        }
        else
        {
          swift_getEnumCaseMultiPayload();
          (*(void (**)(char *, char *, uint64_t))(v90 + 16))(v82, v83, v91);
          swift_storeEnumTagMultiPayload();
          _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v82, 0, 1, v84);
        }
      }
      swift_storeEnumTagMultiPayload();
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v30, v31, *(void *)(*(void *)(v32 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_10008118C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100129300();
  uint64_t v83 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32);
  v83(a1, a2, v4);
  uint64_t v5 = (int *)type metadata accessor for ForecastEntry(0);
  uint64_t v6 = v5[5];
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (const void *)(a2 + v6);
  uint64_t v9 = sub_10012C920();
  if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v8, 1, v9))
  {
    uint64_t v10 = sub_1000053D8(&qword_10016B418);
    memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
    _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v7, 0, 1, v9);
  }
  uint64_t v11 = v5[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  long long v14 = *(_OWORD *)(a2 + v11 + 16);
  *(_OWORD *)uint64_t v12 = *(_OWORD *)(a2 + v11);
  *(_OWORD *)(v12 + 16) = v14;
  *(_OWORD *)(v12 + 32) = *(_OWORD *)(a2 + v11 + 32);
  *(_DWORD *)(v12 + 48) = *(_DWORD *)(a2 + v11 + 48);
  uint64_t v15 = type metadata accessor for WidgetContext();
  uint64_t v16 = *(int *)(v15 + 40);
  uint64_t v17 = (void *)(v12 + v16);
  uint64_t v18 = (const void *)(v13 + v16);
  uint64_t v19 = sub_100129220();
  if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v18, 1, v19))
  {
    uint64_t v20 = sub_1000053D8(&qword_10016B420);
    memcpy(v17, v18, *(void *)(*(void *)(v20 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v19 - 8) + 32))(v17, v18, v19);
    _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v17, 0, 1, v19);
  }
  uint64_t v21 = *(int *)(v15 + 44);
  uint64_t v22 = v12 + v21;
  uint64_t v23 = v13 + v21;
  *(void *)uint64_t v22 = *(void *)v23;
  *(unsigned char *)(v22 + 8) = *(unsigned char *)(v23 + 8);
  uint64_t v24 = v5[7];
  uint64_t v25 = (char *)(a1 + v24);
  uint64_t v26 = (char *)(a2 + v24);
  uint64_t v27 = type metadata accessor for ForecastEntry.Model(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    type metadata accessor for WeatherDataViewModel();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v39 = sub_10012BE90();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 32))(v25, v26, v39);
    }
    else if (EnumCaseMultiPayload == 1)
    {
      uint64_t v29 = sub_100129330();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 32))(v25, v26, v29);
      uint64_t v30 = type metadata accessor for InstantWeatherViewModel();
      uint64_t v31 = *(int *)(v30 + 20);
      uint64_t v32 = &v25[v31];
      uint64_t v33 = &v26[v31];
      uint64_t v34 = sub_10012A6B0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 32))(v32, v33, v34);
      uint64_t v35 = *(int *)(v30 + 24);
      uint64_t v36 = &v25[v35];
      uint64_t v37 = &v26[v35];
      uint64_t v38 = sub_10012C250();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 32))(v36, v37, v38);
    }
    else
    {
      uint64_t v40 = sub_100129330();
      uint64_t v78 = *(void (**)(char *, char *))(*(void *)(v40 - 8) + 32);
      uint64_t v80 = v40;
      v78(v25, v26);
      uint64_t v41 = (int *)type metadata accessor for AggregateWeatherViewModel(0);
      uint64_t v42 = v41[5];
      uint64_t v43 = &v25[v42];
      uint64_t v44 = &v26[v42];
      uint64_t v45 = sub_10012A6B0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v45 - 8) + 32))(v43, v44, v45);
      uint64_t v46 = v41[6];
      uint64_t v47 = &v25[v46];
      uint64_t v48 = &v26[v46];
      uint64_t v49 = sub_10012C250();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v49 - 8) + 32))(v47, v48, v49);
      *(void *)&v25[v41[7]] = *(void *)&v26[v41[7]];
      *(void *)&v25[v41[8]] = *(void *)&v26[v41[8]];
      uint64_t v50 = v41[9];
      uint64_t v51 = &v25[v50];
      uint64_t v52 = &v26[v50];
      uint64_t v53 = (int *)type metadata accessor for AirQualityViewModel();
      if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v52, 1, (uint64_t)v53))
      {
        uint64_t v54 = sub_1000053D8(&qword_10016B428);
        memcpy(v51, v52, *(void *)(*(void *)(v54 - 8) + 64));
      }
      else
      {
        ((void (*)(char *, char *, uint64_t))v78)(v51, v52, v80);
        v83((uint64_t)&v51[v53[5]], (uint64_t)&v52[v53[5]], v4);
        *(void *)&v51[v53[6]] = *(void *)&v52[v53[6]];
        uint64_t v55 = v53[7];
        uint64_t v79 = &v52[v55];
        uint64_t v81 = &v51[v55];
        uint64_t v56 = sub_100129B70();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v56 - 8) + 32))(v81, v79, v56);
        uint64_t v57 = v53[8];
        uint64_t v82 = &v51[v57];
        uint64_t v58 = &v52[v57];
        uint64_t v59 = sub_100129C50();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v59 - 8) + 32))(v82, v58, v59);
        _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v51, 0, 1, (uint64_t)v53);
      }
      uint64_t v60 = v41[10];
      uint64_t v61 = &v25[v60];
      uint64_t v62 = &v26[v60];
      uint64_t v63 = sub_10012C6B0();
      if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v62, 1, v63))
      {
        uint64_t v64 = sub_1000053D8(&qword_10016B430);
        memcpy(v61, v62, *(void *)(*(void *)(v64 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v63 - 8) + 32))(v61, v62, v63);
        _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v61, 0, 1, v63);
      }
      *(void *)&v25[v41[11]] = *(void *)&v26[v41[11]];
      uint64_t v65 = v41[12];
      uint64_t v66 = &v25[v65];
      uint64_t v67 = &v26[v65];
      *(void *)uint64_t v66 = *(void *)v67;
      *((_WORD *)v66 + 4) = *((_WORD *)v67 + 4);
      uint64_t v68 = v41[13];
      uint64_t v69 = &v25[v68];
      uint64_t v70 = &v26[v68];
      if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)&v26[v68], 1, v19))
      {
        uint64_t v71 = sub_1000053D8(&qword_10016B420);
        memcpy(v69, v70, *(void *)(*(void *)(v71 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 32))(v69, v70, v19);
        _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v69, 0, 1, v19);
      }
      uint64_t v72 = v41[14];
      uint64_t v73 = &v25[v72];
      uint64_t v74 = &v26[v72];
      uint64_t v75 = type metadata accessor for AggregateWeatherViewModel.SunEvent(0);
      if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v74, 1, v75))
      {
        uint64_t v76 = sub_1000053D8(&qword_10016B438);
        memcpy(v73, v74, *(void *)(*(void *)(v76 - 8) + 64));
      }
      else
      {
        swift_getEnumCaseMultiPayload();
        v83((uint64_t)v73, (uint64_t)v74, v4);
        swift_storeEnumTagMultiPayload();
        _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v73, 0, 1, v75);
      }
    }
    swift_storeEnumTagMultiPayload();
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v25, v26, *(void *)(*(void *)(v27 - 8) + 64));
  }
  return a1;
}

uint64_t sub_1000819D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100129300();
  uint64_t v92 = *(void *)(v4 - 8);
  uint64_t v93 = v4;
  (*(void (**)(uint64_t, uint64_t))(v92 + 40))(a1, a2);
  uint64_t v5 = (int *)type metadata accessor for ForecastEntry(0);
  uint64_t v6 = v5[5];
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (const void *)(a2 + v6);
  uint64_t v9 = sub_10012C920();
  int v10 = _s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v7, 1, v9);
  int v11 = _s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v8, 1, v9);
  if (v10)
  {
    if (!v11)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
      _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v12 = *(void *)(v9 - 8);
  if (v11)
  {
    (*(void (**)(void *, uint64_t))(v12 + 8))(v7, v9);
LABEL_6:
    uint64_t v13 = sub_1000053D8(&qword_10016B418);
    memcpy(v7, v8, *(void *)(*(void *)(v13 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(v12 + 40))(v7, v8, v9);
LABEL_7:
  uint64_t v14 = v5[6];
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  uint64_t v17 = *(void *)(a2 + v14 + 8);
  *(void *)uint64_t v15 = *(void *)(a2 + v14);
  *(void *)(v15 + 8) = v17;
  swift_bridgeObjectRelease();
  uint64_t v18 = *(void *)(v16 + 24);
  *(void *)(v15 + 16) = *(void *)(v16 + 16);
  *(void *)(v15 + 24) = v18;
  swift_bridgeObjectRelease();
  uint64_t v19 = *(void *)(v16 + 40);
  *(void *)(v15 + 32) = *(void *)(v16 + 32);
  *(void *)(v15 + 40) = v19;
  swift_bridgeObjectRelease();
  *(_WORD *)(v15 + 48) = *(_WORD *)(v16 + 48);
  *(unsigned char *)(v15 + 50) = *(unsigned char *)(v16 + 50);
  *(unsigned char *)(v15 + 51) = *(unsigned char *)(v16 + 51);
  uint64_t v20 = type metadata accessor for WidgetContext();
  uint64_t v21 = *(int *)(v20 + 40);
  uint64_t v22 = (void *)(v15 + v21);
  uint64_t v23 = (const void *)(v16 + v21);
  uint64_t v24 = sub_100129220();
  int v25 = _s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v22, 1, v24);
  int v26 = _s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v23, 1, v24);
  if (v25)
  {
    if (!v26)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v24 - 8) + 32))(v22, v23, v24);
      _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v22, 0, 1, v24);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  uint64_t v27 = *(void *)(v24 - 8);
  if (v26)
  {
    (*(void (**)(void *, uint64_t))(v27 + 8))(v22, v24);
LABEL_12:
    uint64_t v28 = sub_1000053D8(&qword_10016B420);
    memcpy(v22, v23, *(void *)(*(void *)(v28 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, const void *, uint64_t))(v27 + 40))(v22, v23, v24);
LABEL_13:
  uint64_t v29 = *(int *)(v20 + 44);
  uint64_t v30 = v15 + v29;
  uint64_t v31 = v16 + v29;
  *(void *)(v15 + v29) = *(void *)v31;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v30 + 8) = *(unsigned char *)(v31 + 8);
  if (a1 != a2)
  {
    uint64_t v32 = v5[7];
    uint64_t v33 = (char *)(a1 + v32);
    uint64_t v34 = (char *)(a2 + v32);
    sub_100084168(a1 + v32, (void (*)(void))type metadata accessor for ForecastEntry.Model);
    uint64_t v35 = type metadata accessor for ForecastEntry.Model(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      type metadata accessor for WeatherDataViewModel();
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        uint64_t v47 = sub_10012BE90();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v47 - 8) + 32))(v33, v34, v47);
      }
      else if (EnumCaseMultiPayload == 1)
      {
        uint64_t v37 = sub_100129330();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 32))(v33, v34, v37);
        uint64_t v38 = type metadata accessor for InstantWeatherViewModel();
        uint64_t v39 = *(int *)(v38 + 20);
        uint64_t v40 = &v33[v39];
        uint64_t v41 = &v34[v39];
        uint64_t v42 = sub_10012A6B0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v42 - 8) + 32))(v40, v41, v42);
        uint64_t v43 = *(int *)(v38 + 24);
        uint64_t v44 = &v33[v43];
        uint64_t v45 = &v34[v43];
        uint64_t v46 = sub_10012C250();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v46 - 8) + 32))(v44, v45, v46);
      }
      else
      {
        uint64_t v48 = sub_100129330();
        uint64_t v49 = (void (**)(void *, const void *))(*(void *)(v48 - 8) + 32);
        uint64_t v89 = *v49;
        uint64_t v90 = v48;
        (*v49)(v33, v34);
        uint64_t v50 = (int *)type metadata accessor for AggregateWeatherViewModel(0);
        uint64_t v51 = v50[5];
        uint64_t v52 = &v33[v51];
        uint64_t v53 = &v34[v51];
        uint64_t v54 = sub_10012A6B0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v54 - 8) + 32))(v52, v53, v54);
        uint64_t v55 = v50[6];
        uint64_t v56 = &v33[v55];
        uint64_t v57 = &v34[v55];
        uint64_t v58 = sub_10012C250();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v58 - 8) + 32))(v56, v57, v58);
        *(void *)&v33[v50[7]] = *(void *)&v34[v50[7]];
        *(void *)&v33[v50[8]] = *(void *)&v34[v50[8]];
        uint64_t v59 = v50[9];
        uint64_t v60 = &v33[v59];
        uint64_t v61 = &v34[v59];
        uint64_t v62 = (int *)type metadata accessor for AirQualityViewModel();
        if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v61, 1, (uint64_t)v62))
        {
          uint64_t v63 = sub_1000053D8(&qword_10016B428);
          memcpy(v60, v61, *(void *)(*(void *)(v63 - 8) + 64));
        }
        else
        {
          ((void (*)(char *, char *, uint64_t))v89)(v60, v61, v90);
          (*(void (**)(char *, char *, uint64_t))(v92 + 32))(&v60[v62[5]], &v61[v62[5]], v93);
          *(void *)&v60[v62[6]] = *(void *)&v61[v62[6]];
          uint64_t v64 = v62[7];
          uint64_t v65 = &v60[v64];
          uint64_t v91 = &v61[v64];
          uint64_t v66 = sub_100129B70();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v66 - 8) + 32))(v65, v91, v66);
          uint64_t v67 = v62[8];
          uint64_t v68 = &v60[v67];
          uint64_t v69 = &v61[v67];
          uint64_t v70 = sub_100129C50();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v70 - 8) + 32))(v68, v69, v70);
          _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v60, 0, 1, (uint64_t)v62);
        }
        uint64_t v71 = v50[10];
        uint64_t v72 = &v33[v71];
        uint64_t v73 = &v34[v71];
        uint64_t v74 = sub_10012C6B0();
        if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v73, 1, v74))
        {
          uint64_t v75 = sub_1000053D8(&qword_10016B430);
          memcpy(v72, v73, *(void *)(*(void *)(v75 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v74 - 8) + 32))(v72, v73, v74);
          _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v72, 0, 1, v74);
        }
        *(void *)&v33[v50[11]] = *(void *)&v34[v50[11]];
        uint64_t v76 = v50[12];
        uint64_t v77 = &v33[v76];
        uint64_t v78 = &v34[v76];
        *(void *)uint64_t v77 = *(void *)v78;
        *((_WORD *)v77 + 4) = *((_WORD *)v78 + 4);
        uint64_t v79 = v50[13];
        uint64_t v80 = &v33[v79];
        uint64_t v81 = &v34[v79];
        if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)&v34[v79], 1, v24))
        {
          uint64_t v82 = sub_1000053D8(&qword_10016B420);
          memcpy(v80, v81, *(void *)(*(void *)(v82 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 32))(v80, v81, v24);
          _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v80, 0, 1, v24);
        }
        uint64_t v83 = v50[14];
        uint64_t v84 = &v33[v83];
        uint64_t v85 = &v34[v83];
        uint64_t v86 = type metadata accessor for AggregateWeatherViewModel.SunEvent(0);
        if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v85, 1, v86))
        {
          uint64_t v87 = sub_1000053D8(&qword_10016B438);
          memcpy(v84, v85, *(void *)(*(void *)(v87 - 8) + 64));
        }
        else
        {
          swift_getEnumCaseMultiPayload();
          (*(void (**)(char *, char *, uint64_t))(v92 + 32))(v84, v85, v93);
          swift_storeEnumTagMultiPayload();
          _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v84, 0, 1, v86);
        }
      }
      swift_storeEnumTagMultiPayload();
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v33, v34, *(void *)(*(void *)(v35 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_100082398(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000823AC);
}

uint64_t sub_1000823AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ForecastEntry(0);

  return _s13WeatherWidget20WeatherDataViewModelOwet_0(a1, a2, v4);
}

uint64_t sub_1000823F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100082408);
}

uint64_t sub_100082408(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ForecastEntry(0);

  return _s13WeatherWidget20WeatherDataViewModelOwst_0(a1, a2, a2, v4);
}

uint64_t type metadata accessor for PrecipitationChartView()
{
  uint64_t result = qword_10016E108;
  if (!qword_10016E108) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10008249C()
{
  uint64_t result = type metadata accessor for ForecastEntry(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_100082528()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100082544()
{
  uint64_t v31 = sub_10012B120();
  sub_10000DB98();
  uint64_t v3 = v2;
  __chkstk_darwin(v4);
  sub_10002A53C();
  sub_1000053D8(&qword_10016E1A0);
  sub_10000B3FC();
  __chkstk_darwin(v5);
  sub_10000DC50();
  uint64_t v8 = v7 - v6;
  sub_1000053D8(&qword_10016E1A8);
  sub_10000DB98();
  uint64_t v32 = v10;
  uint64_t v33 = v9;
  __chkstk_darwin(v9);
  sub_10000DC50();
  uint64_t v13 = v12 - v11;
  sub_1000053D8(&qword_10016E1B0);
  sub_10000B3FC();
  __chkstk_darwin(v14);
  sub_1000212E4();
  if (qword_10016AE28 != -1) {
    swift_once();
  }
  uint64_t v15 = sub_10012AB60();
  sub_10000D7A4(v15, (uint64_t)qword_100181C40);
  uint64_t v16 = sub_10012AB40();
  os_log_type_t v17 = sub_10012CD60();
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v18 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v18 = 0;
    _os_log_impl((void *)&_mh_execute_header, v16, v17, "Precipitation chart rendering", v18, 2u);
    swift_slowDealloc();
  }

  *(void *)uint64_t v8 = sub_10012B000();
  *(void *)(v8 + 8) = 0;
  *(unsigned char *)(v8 + 16) = 0;
  uint64_t v19 = sub_1000053D8(&qword_10016E1B8);
  sub_100082948(v34, (char *)(v8 + *(int *)(v19 + 44)));
  sub_10012B100();
  sub_10000B38C(&qword_10016E1C0, &qword_10016E1A0);
  sub_10012B520();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v31);
  sub_1000235F8(v8, &qword_10016E1A0);
  sub_10012AF80();
  uint64_t v20 = sub_10012B400();
  uint64_t v22 = v21;
  char v24 = v23 & 1;
  swift_getOpaqueTypeConformance2();
  sub_10012B490();
  sub_100008278(v20, v22, v24);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v13, v33);
  type metadata accessor for ForecastEntry(0);
  sub_10000822C();
  swift_bridgeObjectRetain();
  uint64_t v25 = sub_10012B420();
  uint64_t v27 = v26;
  char v29 = v28 & 1;
  sub_10012AC30();
  sub_100008278(v25, v27, v29);
  swift_bridgeObjectRelease();
  return sub_1000235F8(v0, &qword_10016E1B0);
}

uint64_t sub_100082948@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v112 = a1;
  uint64_t v115 = a2;
  uint64_t v94 = sub_10012AB80();
  uint64_t v93 = *(void *)(v94 - 8);
  __chkstk_darwin(v94);
  uint64_t v92 = (char *)&v88 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1000053D8(&qword_10016E1C8);
  __chkstk_darwin(v3 - 8);
  uint64_t v89 = (uint64_t)&v88 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v91 = sub_10012C480();
  uint64_t v90 = *(void *)(v91 - 8);
  __chkstk_darwin(v91);
  os_log_type_t v101 = (char *)&v88 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v114 = sub_1000053D8(&qword_10016E1D0);
  __chkstk_darwin(v114);
  uint64_t v100 = (uint64_t)&v88 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000053D8(&qword_10016B430);
  __chkstk_darwin(v7 - 8);
  uint64_t v96 = (uint64_t)&v88 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v99 = sub_10012C6B0();
  uint64_t v98 = *(void *)(v99 - 8);
  uint64_t v9 = __chkstk_darwin(v99);
  uint64_t v88 = (char *)&v88 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v97 = (char *)&v88 - v11;
  uint64_t v12 = sub_1000053D8(&qword_10016B310);
  __chkstk_darwin(v12 - 8);
  uint64_t v111 = (uint64_t)&v88 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v95 = type metadata accessor for AggregateWeatherViewModel(0);
  __chkstk_darwin(v95);
  uint64_t v102 = (uint64_t)&v88 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1000053D8(&qword_10016E1D8);
  uint64_t v16 = __chkstk_darwin(v15 - 8);
  uint64_t v113 = (uint64_t)&v88 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v117 = (uint64_t)&v88 - v18;
  uint64_t v108 = sub_1000053D8(&qword_10016B9A0);
  __chkstk_darwin(v108);
  uint64_t v20 = (char *)&v88 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v116 = sub_1000053D8(&qword_10016E1E0);
  uint64_t v110 = *(void *)(v116 - 8);
  uint64_t v21 = __chkstk_darwin(v116);
  uint64_t v109 = (char *)&v88 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  unint64_t v118 = (char *)&v88 - v23;
  sub_10012AF80();
  uint64_t v24 = sub_10012B400();
  uint64_t v26 = v25;
  char v28 = v27 & 1;
  id v29 = [self whiteColor];
  id v30 = [v29 colorWithAlphaComponent:0.5];

  sub_10012B610();
  uint64_t v31 = sub_10012B3A0();
  uint64_t v33 = v32;
  char v35 = v34;
  swift_release();
  sub_100008278(v24, v26, v28);
  swift_bridgeObjectRelease();
  sub_10012B320();
  uint64_t v36 = sub_10012B3F0();
  uint64_t v38 = v37;
  char v40 = v39;
  swift_release();
  char v41 = v40 & 1;
  sub_100008278(v31, v33, v35 & 1);
  swift_bridgeObjectRelease();
  sub_10012B2A0();
  uint64_t v42 = sub_10012B350();
  uint64_t v44 = v43;
  char v46 = v45;
  uint64_t v48 = v47;
  sub_100008278(v36, v38, v41);
  swift_bridgeObjectRelease();
  uint64_t v119 = v42;
  uint64_t v120 = v44;
  LOBYTE(v121) = v46 & 1;
  uint64_t v122 = v48;
  uint64_t v49 = enum case for DynamicTypeSize.large(_:);
  uint64_t v50 = sub_10012ABF0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v50 - 8) + 104))(v20, v49, v50);
  sub_100084300(&qword_10016B9F0, (void (*)(uint64_t))&type metadata accessor for DynamicTypeSize);
  uint64_t result = sub_10012C9E0();
  if (result)
  {
    sub_10000B38C(&qword_10016B9B0, &qword_10016B9A0);
    uint64_t v52 = v109;
    sub_10012B4C0();
    sub_1000235F8((uint64_t)v20, &qword_10016B9A0);
    sub_100008278(v119, v120, v121);
    swift_bridgeObjectRelease();
    uint64_t v53 = v110;
    uint64_t v54 = v118;
    uint64_t v55 = v116;
    (*(void (**)(char *, char *, uint64_t))(v110 + 32))(v118, v52, v116);
    sub_10012B7A0();
    sub_10012ABC0();
    uint64_t v108 = v119;
    int v107 = v120;
    uint64_t v106 = v121;
    int v105 = v122;
    uint64_t v104 = v123;
    uint64_t v103 = v124;
    uint64_t v56 = v111;
    sub_100017B20(v111);
    uint64_t v57 = type metadata accessor for WeatherDataViewModel();
    if (_s13WeatherWidget20WeatherDataViewModelOwet_0(v56, 1, v57) == 1)
    {
      sub_1000235F8(v56, &qword_10016B310);
      uint64_t v58 = 1;
      uint64_t v59 = v114;
    }
    else
    {
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      uint64_t v59 = v114;
      if (EnumCaseMultiPayload)
      {
        sub_100084168(v56, (void (*)(void))type metadata accessor for WeatherDataViewModel);
        uint64_t v58 = 1;
      }
      else
      {
        uint64_t v61 = v102;
        sub_10002FA1C(v56, v102);
        uint64_t v62 = v96;
        sub_10002BADC(v61 + *(int *)(v95 + 40), v96, &qword_10016B430);
        uint64_t v63 = v99;
        if (_s13WeatherWidget20WeatherDataViewModelOwet_0(v62, 1, v99) == 1)
        {
          sub_100084168(v61, (void (*)(void))type metadata accessor for AggregateWeatherViewModel);
          sub_1000235F8(v62, &qword_10016B430);
          uint64_t v58 = 1;
        }
        else
        {
          uint64_t v64 = v98;
          uint64_t v65 = v97;
          (*(void (**)(char *, uint64_t, uint64_t))(v98 + 32))(v97, v62, v63);
          (*(void (**)(char *, char *, uint64_t))(v64 + 16))(v88, v65, v63);
          long long v125 = 0u;
          long long v126 = 0u;
          char v127 = 0;
          uint64_t v66 = sub_1000053D8(&qword_10016E1F0);
          _s13WeatherWidget20WeatherDataViewModelOwst_0(v89, 1, 1, v66);
          sub_10012C470();
          uint64_t KeyPath = swift_getKeyPath();
          uint64_t v68 = v93;
          uint64_t v69 = v92;
          uint64_t v70 = v94;
          (*(void (**)(char *, void, uint64_t))(v93 + 104))(v92, enum case for ColorScheme.dark(_:), v94);
          uint64_t v71 = v100;
          uint64_t v72 = (uint64_t *)(v100 + *(int *)(v59 + 36));
          uint64_t v73 = sub_1000053D8(&qword_10016E1F8);
          (*(void (**)(char *, char *, uint64_t))(v68 + 16))((char *)v72 + *(int *)(v73 + 28), v69, v70);
          *uint64_t v72 = KeyPath;
          uint64_t v74 = v90;
          uint64_t v75 = v71;
          uint64_t v76 = v101;
          uint64_t v77 = v91;
          (*(void (**)(uint64_t, char *, uint64_t))(v90 + 16))(v75, v101, v91);
          (*(void (**)(char *, uint64_t))(v68 + 8))(v69, v70);
          (*(void (**)(char *, uint64_t))(v74 + 8))(v76, v77);
          uint64_t v55 = v116;
          (*(void (**)(char *, uint64_t))(v98 + 8))(v97, v63);
          sub_100084168(v102, (void (*)(void))type metadata accessor for AggregateWeatherViewModel);
          sub_1000841E8(v100, v117);
          uint64_t v58 = 0;
        }
        uint64_t v54 = v118;
      }
    }
    uint64_t v78 = v117;
    _s13WeatherWidget20WeatherDataViewModelOwst_0(v117, v58, 1, v59);
    uint64_t v79 = *(void (**)(char *, char *, uint64_t))(v53 + 16);
    v79(v52, v54, v55);
    uint64_t v80 = v52;
    uint64_t v81 = v55;
    uint64_t v82 = v113;
    sub_10002BADC(v78, v113, &qword_10016E1D8);
    uint64_t v83 = v115;
    v79(v115, v80, v81);
    uint64_t v84 = sub_1000053D8(&qword_10016E1E8);
    uint64_t v85 = &v83[*(int *)(v84 + 48)];
    *(void *)uint64_t v85 = 0;
    v85[8] = 1;
    *((void *)v85 + 2) = v108;
    v85[24] = v107;
    *((void *)v85 + 4) = v106;
    v85[40] = v105;
    uint64_t v86 = v103;
    *((void *)v85 + 6) = v104;
    *((void *)v85 + 7) = v86;
    sub_10002BADC(v82, (uint64_t)&v83[*(int *)(v84 + 64)], &qword_10016E1D8);
    sub_1000235F8(v78, &qword_10016E1D8);
    uint64_t v87 = *(void (**)(char *, uint64_t))(v53 + 8);
    v87(v118, v81);
    sub_1000235F8(v82, &qword_10016E1D8);
    return ((uint64_t (*)(char *, uint64_t))v87)(v80, v81);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100083610(uint64_t a1)
{
  uint64_t v2 = sub_10012AB80();
  __chkstk_darwin(v2);
  (*(void (**)(char *, uint64_t))(v4 + 16))((char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  return sub_10012AD20();
}

uint64_t sub_1000836DC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1000836F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X8>)
{
  uint64_t v10 = sub_1000053D8(&qword_10016E180);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1000053D8(&qword_10016E178);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v17 = (char *)v22 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a4)
  {
    v22[1] = a5;
    __chkstk_darwin(v15);
    v22[-4] = a1;
    v22[-3] = a2;
    v22[-2] = a3;
    LOBYTE(v22[-1]) = 1;
    sub_1000053D8(&qword_10016E188);
    sub_1000840C0();
    sub_10012B670();
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v12, v17, v13);
    swift_storeEnumTagMultiPayload();
    sub_10000B38C(&qword_10016E170, &qword_10016E178);
    sub_10012B0E0();
    return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v17, v13);
  }
  else
  {
    void v22[2] = a1;
    v22[3] = a2;
    sub_10000822C();
    swift_bridgeObjectRetain();
    *(void *)uint64_t v12 = sub_10012B420();
    *((void *)v12 + 1) = v19;
    v12[16] = v20 & 1;
    *((void *)v12 + 3) = v21;
    swift_storeEnumTagMultiPayload();
    sub_10000B38C(&qword_10016E170, &qword_10016E178);
    return sub_10012B0E0();
  }
}

uint64_t sub_1000839EC@<X0>(uint64_t a1@<X8>)
{
  sub_10000822C();
  swift_bridgeObjectRetain();
  uint64_t result = sub_10012B420();
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = v4 & 1;
  *(void *)(a1 + 24) = v5;
  return result;
}

uint64_t sub_100083A58@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_1000053D8(&qword_10016DC10);
  uint64_t v3 = v2 - 8;
  __chkstk_darwin(v2);
  uint64_t v5 = (uint64_t *)((char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = sub_10012B660();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10012B620();
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, enum case for Image.Scale.small(_:), v6);
  uint64_t KeyPath = swift_getKeyPath();
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))((char *)v5 + *(int *)(v3 + 36), v9, v6);
  *uint64_t v5 = KeyPath;
  uint64_t v12 = sub_1000053D8(&qword_10016E188);
  sub_10002BADC((uint64_t)v5, (uint64_t)a1 + *(int *)(v12 + 36), &qword_10016DC10);
  *a1 = v10;
  swift_retain();
  sub_1000235F8((uint64_t)v5, &qword_10016DC10);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return swift_release();
}

uint64_t sub_100083C3C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v31 = sub_10012B2E0();
  sub_10000DB98();
  uint64_t v10 = v9;
  __chkstk_darwin(v11);
  sub_1000212E4();
  uint64_t v12 = sub_1000053D8(&qword_10016E140);
  __chkstk_darwin(v12 - 8);
  sub_10002A53C();
  uint64_t v13 = sub_1000053D8(&qword_10016E148);
  uint64_t v14 = v13 - 8;
  __chkstk_darwin(v13);
  sub_10000DC50();
  uint64_t v17 = v16 - v15;
  uint64_t v29 = sub_1000053D8(&qword_10016E150);
  sub_10000B3FC();
  __chkstk_darwin(v18);
  sub_10000DC50();
  uint64_t v21 = v20 - v19;
  sub_1000836F8(a1, a2, a3, a4, v5);
  uint64_t v22 = sub_10012B5C0();
  uint64_t KeyPath = swift_getKeyPath();
  sub_10002BADC(v5, v17, &qword_10016E140);
  uint64_t v24 = (uint64_t *)(v17 + *(int *)(v14 + 44));
  *uint64_t v24 = KeyPath;
  v24[1] = v22;
  sub_1000235F8(v5, &qword_10016E140);
  (*(void (**)(uint64_t, void, uint64_t))(v10 + 104))(v4, enum case for Font.Leading.tight(_:), v31);
  uint64_t v25 = sub_10012B310();
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v4, v31);
  uint64_t v26 = swift_getKeyPath();
  sub_10002BADC(v17, v21, &qword_10016E148);
  char v27 = (uint64_t *)(v21 + *(int *)(v29 + 36));
  *char v27 = v26;
  v27[1] = v25;
  sub_1000235F8(v17, &qword_10016E148);
  sub_100083ED0();
  sub_10012B4A0();
  return sub_1000235F8(v21, &qword_10016E150);
}

uint64_t sub_100083EB0()
{
  return sub_100083C3C(*(void *)v0, *(void *)(v0 + 8), *(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
}

unint64_t sub_100083ED0()
{
  unint64_t result = qword_10016E158;
  if (!qword_10016E158)
  {
    sub_100005470(&qword_10016E150);
    sub_100083F70();
    sub_10000B38C(&qword_10016BD48, &qword_10016BD50);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016E158);
  }
  return result;
}

unint64_t sub_100083F70()
{
  unint64_t result = qword_10016E160;
  if (!qword_10016E160)
  {
    sub_100005470(&qword_10016E148);
    sub_100084010();
    sub_10000B38C(&qword_10016BD78, &qword_10016BD80);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016E160);
  }
  return result;
}

unint64_t sub_100084010()
{
  unint64_t result = qword_10016E168;
  if (!qword_10016E168)
  {
    sub_100005470(&qword_10016E140);
    sub_10000B38C(&qword_10016E170, &qword_10016E178);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016E168);
  }
  return result;
}

uint64_t sub_1000840B0@<X0>(uint64_t a1@<X8>)
{
  return sub_1000839EC(a1);
}

unint64_t sub_1000840C0()
{
  unint64_t result = qword_10016E190;
  if (!qword_10016E190)
  {
    sub_100005470(&qword_10016E188);
    sub_10000B38C(&qword_10016E198, &qword_10016DC10);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016E190);
  }
  return result;
}

uint64_t sub_100084168(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_10000B3FC();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_1000841C0()
{
  return sub_10012AD10();
}

uint64_t sub_1000841E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000053D8(&qword_10016E1D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_100084254()
{
  unint64_t result = qword_10016E200;
  if (!qword_10016E200)
  {
    sub_100005470(&qword_10016E208);
    sub_100083ED0();
    sub_100084300((unint64_t *)&qword_10016BEC8, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016E200);
  }
  return result;
}

uint64_t sub_100084300(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10008434C()
{
  unint64_t result = qword_10016E210;
  if (!qword_10016E210)
  {
    sub_100005470(&qword_10016E1B0);
    sub_100005470(&qword_10016E1A0);
    sub_10000B38C(&qword_10016E1C0, &qword_10016E1A0);
    swift_getOpaqueTypeConformance2();
    sub_100084300((unint64_t *)&qword_10016BEC8, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016E210);
  }
  return result;
}

uint64_t sub_100084458()
{
  return sub_10012AE00();
}

uint64_t sub_10008447C()
{
  return sub_10012AD30();
}

uint64_t sub_1000844A0(uint64_t a1)
{
  sub_10012AFE0();
  sub_10000DB98();
  __chkstk_darwin(v2);
  sub_10000DC50();
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(v4 - v3, a1);
  return sub_10012AD40();
}

uint64_t sub_100084538()
{
  uint64_t v0 = sub_10012A0B0();
  sub_10000DB98();
  uint64_t v2 = v1;
  __chkstk_darwin(v3);
  sub_10000DC50();
  uint64_t v6 = v5 - v4;
  (*(void (**)(uint64_t, void, uint64_t))(v2 + 104))(v5 - v4, enum case for WidgetNames.DataDense(_:), v0);
  uint64_t v7 = sub_10012A0A0();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v6, v0);
  return v7;
}

ValueMetadata *type metadata accessor for DataDenseWidget()
{
  return &type metadata for DataDenseWidget;
}

uint64_t sub_100084614()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100084630(uint64_t a1, uint64_t a2)
{
  sub_1000053D8(&qword_10016E218);
  sub_10000DB98();
  __chkstk_darwin(v4);
  sub_10000DC50();
  sub_1000053D8(&qword_10016E220);
  sub_10000DB98();
  __chkstk_darwin(v5);
  sub_10000DC50();
  sub_1000053D8(&qword_10016E228);
  sub_10000DB98();
  __chkstk_darwin(v6);
  sub_10000DBCC();
  sub_1000053D8(&qword_10016E230);
  sub_10000DB98();
  __chkstk_darwin(v7);
  sub_10000DBCC();
  type metadata accessor for WeatherTimelineProvider();
  swift_allocObject();
  swift_bridgeObjectRetain();
  sub_100118DBC(65, a1, a2);
  type metadata accessor for WeatherIntent();
  type metadata accessor for DataDenseContentView();
  sub_100085018(&qword_10016E238, (void (*)(uint64_t))type metadata accessor for DataDenseContentView);
  sub_100085018(&qword_10016B9B8, (void (*)(uint64_t))type metadata accessor for WeatherTimelineProvider);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_10012C880();
  sub_10012AF80();
  uint64_t v8 = sub_10012B400();
  uint64_t v10 = v9;
  char v12 = v11 & 1;
  sub_100084E54();
  sub_10012B0B0();
  sub_100008278(v8, v10, v12);
  swift_bridgeObjectRelease();
  sub_10000B424();
  v13();
  sub_1000053D8(&qword_10016B9C8);
  uint64_t v14 = sub_10012C800();
  sub_10000DB98();
  uint64_t v16 = v15;
  unint64_t v17 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  uint64_t v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_100130010;
  (*(void (**)(unint64_t, void, uint64_t))(v16 + 104))(v18 + v17, enum case for WidgetFamily.systemSmall(_:), v14);
  swift_getOpaqueTypeConformance2();
  sub_10012B090();
  swift_bridgeObjectRelease();
  sub_10000B424();
  v19();
  sub_10012AF80();
  uint64_t v20 = sub_10012B400();
  uint64_t v22 = v21;
  char v24 = v23 & 1;
  swift_getOpaqueTypeConformance2();
  sub_10012B070();
  sub_100008278(v20, v22, v24);
  swift_bridgeObjectRelease();
  sub_10000B424();
  v25();
  swift_getOpaqueTypeConformance2();
  sub_10012B0D0();
  swift_release();
  sub_10000B424();
  return v26();
}

uint64_t sub_100084BAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1000053D8(&qword_10016B9D0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (uint64_t *)((char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = sub_1000053D8(&qword_10016B440);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (uint64_t *)((char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = type metadata accessor for ForecastEntry(0);
  __chkstk_darwin(v10 - 8);
  char v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100024484(a1, (uint64_t)v12);
  *uint64_t v9 = swift_getKeyPath();
  sub_1000053D8(&qword_10016B410);
  swift_storeEnumTagMultiPayload();
  *uint64_t v6 = swift_getKeyPath();
  sub_1000053D8(&qword_10016B9D8);
  swift_storeEnumTagMultiPayload();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v14 = swift_getKeyPath();
  uint64_t v15 = (int *)type metadata accessor for DataDenseContentView();
  *(void *)(a2 + v15[7]) = v14;
  sub_1000053D8(&qword_10016B9E0);
  swift_storeEnumTagMultiPayload();
  sub_1000244FC((uint64_t)v9, a2, &qword_10016B440);
  sub_1000244FC((uint64_t)v6, a2 + v15[5], &qword_10016B9D0);
  uint64_t v16 = a2 + v15[6];
  *(void *)uint64_t v16 = KeyPath;
  *(unsigned char *)(v16 + 8) = 0;
  sub_100024560((uint64_t)v12, a2 + v15[8]);
  uint64_t v17 = v15[9];
  id v18 = [self mainScreen];
  [v18 bounds];

  uint64_t result = sub_100005130();
  *(unsigned char *)(a2 + v17) = result;
  return result;
}

uint64_t sub_100084E24@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_100084538();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_100084E4C()
{
  return sub_100084630(*v0, v0[1]);
}

unint64_t sub_100084E54()
{
  unint64_t result = qword_10016E240;
  if (!qword_10016E240)
  {
    sub_100005470(&qword_10016E218);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016E240);
  }
  return result;
}

uint64_t sub_100084EA8()
{
  return sub_10012AE90();
}

uint64_t sub_100084ECC()
{
  return sub_10012AE90();
}

uint64_t sub_100084EF0()
{
  return sub_10012AD30();
}

uint64_t sub_100084F18()
{
  sub_10012AE80();
  sub_100085018(&qword_10016E248, (void (*)(uint64_t))&type metadata accessor for EnvironmentValues.ShowsWidgetBackgroundKey);
  sub_10012AF00();
  return v1;
}

uint64_t sub_100084F94@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_100084F18();
  *a1 = result & 1;
  return result;
}

uint64_t sub_100084FC4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_100084F18();
  *a1 = result & 1;
  return result;
}

uint64_t sub_100084FF4()
{
  return sub_10012AE00();
}

uint64_t sub_100085018(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100085060()
{
  return sub_1000247D8();
}

uint64_t sub_100085140(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_100129220();
  sub_10000DB98();
  uint64_t v7 = v6;
  __chkstk_darwin(v8);
  sub_1000213D4();
  uint64_t v9 = sub_1000053D8(&qword_10016D170);
  sub_10000B3FC();
  __chkstk_darwin(v10);
  char v12 = &v38[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v13 = sub_1000053D8(&qword_10016B420);
  uint64_t v14 = __chkstk_darwin(v13 - 8);
  uint64_t v16 = &v38[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v17 = __chkstk_darwin(v14);
  uint64_t v19 = &v38[-v18];
  __chkstk_darwin(v17);
  uint64_t v21 = &v38[-v20];
  BOOL v22 = *(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8);
  if (v22 || (v23 = sub_10012D1F0(), char v24 = 0, (v23 & 1) != 0))
  {
    BOOL v25 = *(void *)(a1 + 16) == *(void *)(a2 + 16) && *(void *)(a1 + 24) == *(void *)(a2 + 24);
    if (v25 || (v26 = sub_10012D1F0(), char v24 = 0, (v26 & 1) != 0))
    {
      BOOL v27 = *(void *)(a1 + 32) == *(void *)(a2 + 32) && *(void *)(a1 + 40) == *(void *)(a2 + 40);
      if (v27 || (v28 = sub_10012D1F0(), char v24 = 0, (v28 & 1) != 0))
      {
        if (!static ActiveEvent.__derived_struct_equals(_:_:)(*(_WORD *)(a1 + 48), *(_WORD *)(a2 + 48))
          || *(unsigned __int8 *)(a1 + 50) != *(unsigned __int8 *)(a2 + 50)
          || *(unsigned __int8 *)(a1 + 51) != *(unsigned __int8 *)(a2 + 51))
        {
          goto LABEL_30;
        }
        uint64_t v41 = v7;
        uint64_t v29 = type metadata accessor for WidgetContext();
        sub_100087FBC(a1 + *(int *)(v29 + 40), (uint64_t)v21);
        uint64_t v40 = v29;
        sub_100087FBC(a2 + *(int *)(v29 + 40), (uint64_t)v19);
        uint64_t v30 = (uint64_t)&v12[*(int *)(v9 + 48)];
        sub_100087FBC((uint64_t)v21, (uint64_t)v12);
        sub_100087FBC((uint64_t)v19, v30);
        sub_10002A504((uint64_t)v12);
        if (v22)
        {
          sub_1000235F8((uint64_t)v19, &qword_10016B420);
          sub_1000235F8((uint64_t)v21, &qword_10016B420);
          sub_10002A504(v30);
          if (v22)
          {
            sub_1000235F8((uint64_t)v12, &qword_10016B420);
LABEL_29:
            uint64_t v34 = *(int *)(v40 + 44);
            char v35 = *(unsigned char *)(a1 + v34 + 8);
            char v36 = *(unsigned char *)(a2 + v34 + 8);
            char v24 = sub_10012B760() & (v35 ^ v36 ^ 1);
            return v24 & 1;
          }
        }
        else
        {
          sub_100087FBC((uint64_t)v12, (uint64_t)v16);
          sub_10002A504(v30);
          if (!v31)
          {
            uint64_t v32 = v41;
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v41 + 32))(v2, v30, v5);
            sub_10008827C(&qword_10016D188);
            int v39 = sub_10012C9E0();
            uint64_t v33 = *(void (**)(uint64_t, uint64_t))(v32 + 8);
            v33(v2, v5);
            sub_1000235F8((uint64_t)v19, &qword_10016B420);
            sub_1000235F8((uint64_t)v21, &qword_10016B420);
            v33((uint64_t)v16, v5);
            sub_1000235F8((uint64_t)v12, &qword_10016B420);
            if (v39) {
              goto LABEL_29;
            }
LABEL_30:
            char v24 = 0;
            return v24 & 1;
          }
          sub_1000235F8((uint64_t)v19, &qword_10016B420);
          sub_1000235F8((uint64_t)v21, &qword_10016B420);
          (*(void (**)(unsigned char *, uint64_t))(v41 + 8))(v16, v5);
        }
        sub_1000235F8((uint64_t)v12, &qword_10016D170);
        goto LABEL_30;
      }
    }
  }
  return v24 & 1;
}

uint64_t sub_100085538(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000010 && a2 == 0x800000010013A6E0 || (sub_10012D1F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v5 = a1 == 0x63736544676E6F6CLL && a2 == 0xEF6E6F6974706972;
    if (v5 || (sub_10012D1F0() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0xD000000000000017 && a2 == 0x800000010013A700 || (sub_10012D1F0() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      BOOL v6 = a1 == 0x7645657669746361 && a2 == 0xEB00000000746E65;
      if (v6 || (sub_10012D1F0() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else if (a1 == 0xD000000000000011 && a2 == 0x800000010013A720 || (sub_10012D1F0() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 4;
      }
      else
      {
        BOOL v7 = a1 == 0x656C6174537369 && a2 == 0xE700000000000000;
        if (v7 || (sub_10012D1F0() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 5;
        }
        else
        {
          BOOL v8 = a1 == 1802398060 && a2 == 0xE400000000000000;
          if (v8 || (sub_10012D1F0() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 6;
          }
          else if (a1 == 0xD000000000000011 && a2 == 0x800000010013A740)
          {
            swift_bridgeObjectRelease();
            return 7;
          }
          else
          {
            char v9 = sub_10012D1F0();
            swift_bridgeObjectRelease();
            if (v9) {
              return 7;
            }
            else {
              return 8;
            }
          }
        }
      }
    }
  }
}

uint64_t sub_100085880()
{
  return 8;
}

unint64_t sub_100085888(char a1)
{
  unint64_t result = 0xD000000000000010;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x63736544676E6F6CLL;
      break;
    case 2:
      unint64_t result = 0xD000000000000017;
      break;
    case 3:
      unint64_t result = 0x7645657669746361;
      break;
    case 4:
    case 7:
      unint64_t result = 0xD000000000000011;
      break;
    case 5:
      unint64_t result = 0x656C6174537369;
      break;
    case 6:
      unint64_t result = 1802398060;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_100085998()
{
  sub_1000053D8(&qword_10016E3B0);
  sub_10000DB98();
  __chkstk_darwin(v1);
  sub_100088A58();
  sub_100088024();
  sub_100088AC4();
  sub_10002A578();
  if (!v0)
  {
    sub_10002A578();
    sub_10002A578();
    sub_100088230();
    sub_100088B04();
    sub_100088AA0(4);
    sub_100088AA0(5);
    type metadata accessor for WidgetContext();
    sub_100129220();
    sub_10008827C(&qword_10016D220);
    sub_10012D170();
    sub_1000882C0();
    sub_100088B04();
  }
  sub_10002A56C();
  return v2();
}

uint64_t sub_100085BC4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v22 = a2;
  uint64_t v5 = sub_1000053D8(&qword_10016B420);
  __chkstk_darwin(v5 - 8);
  sub_1000213D4();
  sub_1000053D8(&qword_10016E390);
  sub_10000DB98();
  __chkstk_darwin(v6);
  uint64_t v23 = type metadata accessor for WidgetContext();
  sub_10000B3FC();
  __chkstk_darwin(v7);
  char v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = a1[3];
  char v24 = a1;
  sub_10000D890(a1, v10);
  sub_100088024();
  sub_10012D2B0();
  if (v2) {
    return sub_10000DB48((uint64_t)v24);
  }
  uint64_t v11 = v3;
  uint64_t v12 = v22;
  LOBYTE(v25) = 0;
  *(void *)char v9 = sub_100088A10();
  *((void *)v9 + 1) = v13;
  LOBYTE(v25) = 1;
  *((void *)v9 + 2) = sub_100088A10();
  *((void *)v9 + 3) = v14;
  LOBYTE(v25) = 2;
  *((void *)v9 + 4) = sub_100088A10();
  *((void *)v9 + 5) = v15;
  char v27 = 3;
  sub_100088070();
  sub_100088A30();
  *((_WORD *)v9 + 24) = v25;
  v9[50] = sub_100088AE0(4) & 1;
  v9[51] = sub_100088AE0(5) & 1;
  sub_100129220();
  LOBYTE(v25) = 6;
  sub_10008827C(&qword_10016D298);
  sub_10012D0F0();
  sub_1000880BC(v11, (uint64_t)&v9[*(int *)(v23 + 40)]);
  char v27 = 7;
  sub_100088124();
  sub_100088A30();
  uint64_t v16 = sub_1000889E0();
  v17(v16);
  char v18 = v26;
  uint64_t v19 = &v9[*(int *)(v23 + 44)];
  *(void *)uint64_t v19 = v25;
  v19[8] = v18;
  sub_100088170((uint64_t)v9, v12);
  sub_10000DB48((uint64_t)v24);
  return sub_1000881D4((uint64_t)v9);
}

uint64_t sub_100085FA4(uint64_t a1, int a2, uint64_t a3, int a4)
{
  return sub_10012B760() & ~(a2 ^ a4) & 1;
}

uint64_t sub_100085FDC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x746E656964617267 && a2 == 0xE800000000000000;
  if (v2 || (sub_10012D1F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E6F43776F4C7369 && a2 == 0xED00007473617274)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v7 = sub_10012D1F0();
    swift_bridgeObjectRelease();
    if (v7) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1000860F0(char a1)
{
  if (a1) {
    return 0x6E6F43776F4C7369;
  }
  else {
    return 0x746E656964617267;
  }
}

uint64_t sub_100086134(void *a1)
{
  uint64_t v4 = sub_1000053D8(&qword_10016E3F8);
  sub_10000DB98();
  uint64_t v6 = v5;
  __chkstk_darwin(v7);
  sub_1000213D4();
  sub_10000D890(a1, a1[3]);
  sub_1000886FC();
  sub_10012D2C0();
  sub_100088794();
  sub_10012D1B0();
  if (!v1) {
    sub_10012D190();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v2, v4);
}

uint64_t sub_10008627C(uint64_t a1)
{
  sub_1000053D8(&qword_10016E3E0);
  sub_10000DB98();
  __chkstk_darwin(v4);
  sub_100088A7C();
  sub_1000886FC();
  sub_10012D2B0();
  if (v1)
  {
    sub_10000DB48(a1);
  }
  else
  {
    sub_100088748();
    sub_10012D130();
    uint64_t v2 = v7;
    swift_bridgeObjectRetain();
    sub_10012D110();
    sub_10002A56C();
    v6();
    sub_10000DB48(a1);
    swift_bridgeObjectRelease();
  }
  return v2;
}

unint64_t sub_100086424()
{
  return sub_100085888(*v0);
}

uint64_t sub_10008642C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100085538(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100086454@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_100085880();
  *a1 = result;
  return result;
}

uint64_t sub_10008647C(uint64_t a1)
{
  unint64_t v2 = sub_100088024();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1000864B8(uint64_t a1)
{
  unint64_t v2 = sub_100088024();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1000864F8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100085BC4(a1, a2);
}

uint64_t sub_100086510()
{
  return sub_100085998();
}

uint64_t sub_100086528()
{
  return sub_1000860F0(*v0);
}

uint64_t sub_100086530@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100085FDC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100086558(uint64_t a1)
{
  unint64_t v2 = sub_1000886FC();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100086594(uint64_t a1)
{
  unint64_t v2 = sub_1000886FC();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1000865D0(uint64_t a1, uint64_t a2)
{
  return sub_100085FA4(*(void *)a1, *(unsigned __int8 *)(a1 + 8), *(void *)a2, *(unsigned __int8 *)(a2 + 8));
}

uint64_t sub_1000865EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_10008627C(a1);
  if (!v2)
  {
    *(void *)a2 = result;
    *(unsigned char *)(a2 + 8) = v5 & 1;
  }
  return result;
}

uint64_t sub_100086620(void *a1)
{
  return sub_100086134(a1);
}

uint64_t Gradient.init(from:)(uint64_t a1)
{
  sub_1000053D8(&qword_10016E250);
  sub_10000DB98();
  __chkstk_darwin(v4);
  sub_1000213D4();
  sub_100088A7C();
  sub_1000867BC();
  sub_10012D2B0();
  if (!v2)
  {
    sub_1000053D8(&qword_10016E260);
    sub_10008697C(&qword_10016E268, (void (*)(void))sub_100086808);
    sub_10012D130();
    uint64_t v1 = sub_10012B780();
    sub_10002A56C();
    v6();
  }
  sub_10000DB48(a1);
  return v1;
}

unint64_t sub_1000867BC()
{
  unint64_t result = qword_10016E258;
  if (!qword_10016E258)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016E258);
  }
  return result;
}

unint64_t sub_100086808()
{
  unint64_t result = qword_10016E270;
  if (!qword_10016E270)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016E270);
  }
  return result;
}

uint64_t Gradient.encode(to:)()
{
  sub_1000053D8(&qword_10016E278);
  sub_10000DB98();
  __chkstk_darwin(v0);
  sub_1000213D4();
  sub_100088A58();
  sub_1000867BC();
  sub_100088AC4();
  sub_1000053D8(&qword_10016E260);
  sub_10008697C(&qword_10016E280, (void (*)(void))sub_1000869EC);
  sub_10012D1B0();
  sub_10002A56C();
  return v1();
}

uint64_t sub_10008697C(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100005470(&qword_10016E260);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1000869EC()
{
  unint64_t result = qword_10016E288;
  if (!qword_10016E288)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016E288);
  }
  return result;
}

BOOL sub_100086A38(uint64_t a1, void *a2)
{
  v6._countAndFlagsBits = a1;
  v3._rawValue = &off_100161118;
  v6._object = a2;
  Swift::Int v4 = sub_10012D0B0(v3, v6);
  swift_bridgeObjectRelease();
  return v4 != 0;
}

BOOL sub_100086A80(uint64_t a1, void *a2)
{
  return sub_100086A38(a1, a2);
}

uint64_t sub_100086A9C()
{
  return 0x73706F7473;
}

BOOL sub_100086ABC@<W0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  BOOL result = sub_100086A38(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

uint64_t sub_100086AF0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_100086A9C();
  *a1 = result;
  a1[1] = v3;
  return result;
}

BOOL sub_100086B1C@<W0>(uint64_t a1@<X0>, void *a2@<X1>, unsigned char *a3@<X8>)
{
  BOOL result = sub_100086A80(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100086B48(uint64_t a1)
{
  unint64_t v2 = sub_1000867BC();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100086B84(uint64_t a1)
{
  unint64_t v2 = sub_1000867BC();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100086BC0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = Gradient.init(from:)(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_100086BEC()
{
  return Gradient.encode(to:)();
}

double Gradient.Stop.init(from:)(uint64_t a1)
{
  sub_1000053D8(&qword_10016E290);
  sub_10000DB98();
  __chkstk_darwin(v4);
  sub_100088A7C();
  sub_100086D98();
  sub_10012D2B0();
  if (!v1)
  {
    uint64_t v5 = sub_10012D100();
    sub_100016E60(v5, v6);
    sub_100086DE4();
    sub_10012D130();
    sub_10012B770();
    double v2 = v8;
    uint64_t v9 = sub_1000889F8();
    v10(v9);
  }
  sub_10000DB48(a1);
  return v2;
}

unint64_t sub_100086D98()
{
  unint64_t result = qword_10016E298;
  if (!qword_10016E298)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016E298);
  }
  return result;
}

unint64_t sub_100086DE4()
{
  unint64_t result = qword_10016E2A0;
  if (!qword_10016E2A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016E2A0);
  }
  return result;
}

uint64_t Gradient.Stop.encode(to:)(double a1)
{
  uint64_t v3 = sub_1000053D8(&qword_10016E2A8);
  sub_10000DB98();
  uint64_t v5 = v4;
  __chkstk_darwin(v6);
  double v8 = (char *)v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100088A58();
  sub_100086D98();
  sub_100088AC4();
  sub_10012B580();
  char v13 = 0;
  sub_10002A578();
  if (v1)
  {
    sub_10002A56C();
    v9();
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    *(double *)&v11[1] = a1;
    char v12 = 1;
    sub_100086F84();
    sub_100088B04();
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v3);
  }
}

unint64_t sub_100086F84()
{
  unint64_t result = qword_10016E2B0;
  if (!qword_10016E2B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016E2B0);
  }
  return result;
}

uint64_t sub_100086FD0(uint64_t a1, void *a2)
{
  v7._countAndFlagsBits = a1;
  v3._rawValue = &off_100161150;
  v7._object = a2;
  Swift::Int v4 = sub_10012D0B0(v3, v7);
  swift_bridgeObjectRelease();
  if (v4 == 1) {
    unsigned int v5 = 1;
  }
  else {
    unsigned int v5 = 2;
  }
  if (v4) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t sub_100087028(char a1)
{
  if (a1) {
    return 0x6E6F697461636F6CLL;
  }
  else {
    return 7890280;
  }
}

uint64_t sub_100087058(char *a1, char *a2)
{
  return sub_100063F6C(*a1, *a2);
}

Swift::Int sub_100087064()
{
  return sub_10002613C();
}

uint64_t sub_10008706C()
{
  return sub_1000261EC();
}

Swift::Int sub_100087074()
{
  return sub_1000264BC();
}

uint64_t sub_10008707C@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_100086FD0(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

uint64_t sub_1000870AC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_100087028(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1000870D8()
{
  return sub_100087028(*v0);
}

uint64_t sub_1000870E0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_100087024();
  *a1 = result;
  return result;
}

uint64_t sub_100087108(uint64_t a1)
{
  unint64_t v2 = sub_100086D98();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100087144(uint64_t a1)
{
  unint64_t v2 = sub_100086D98();

  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_100087180(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  double v5 = Gradient.Stop.init(from:)(a1);
  if (!v2)
  {
    *(void *)a2 = v4;
    *(double *)(a2 + 8) = v5;
  }
}

uint64_t sub_1000871B0()
{
  return Gradient.Stop.encode(to:)(*(double *)(v0 + 8));
}

ValueMetadata *_s10CodingKeysOMa()
{
  return &_s10CodingKeysON;
}

unsigned char *_s10CodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x100087284);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *_s10CodingKeysOMa_0()
{
  return &_s10CodingKeysON_0;
}

unint64_t sub_1000872C0()
{
  unint64_t result = qword_10016E2B8;
  if (!qword_10016E2B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016E2B8);
  }
  return result;
}

unint64_t sub_100087310()
{
  unint64_t result = qword_10016E2C0;
  if (!qword_10016E2C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016E2C0);
  }
  return result;
}

unint64_t sub_100087360()
{
  unint64_t result = qword_10016E2C8;
  if (!qword_10016E2C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016E2C8);
  }
  return result;
}

unint64_t sub_1000873B0()
{
  unint64_t result = qword_10016E2D0;
  if (!qword_10016E2D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016E2D0);
  }
  return result;
}

unint64_t sub_100087400()
{
  unint64_t result = qword_10016E2D8;
  if (!qword_10016E2D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016E2D8);
  }
  return result;
}

unint64_t sub_100087450()
{
  unint64_t result = qword_10016E2E0;
  if (!qword_10016E2E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016E2E0);
  }
  return result;
}

void *sub_10008749C(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  unsigned int v4 = (void *)a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *unsigned int v4 = *a2;
    unsigned int v4 = (void *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    uint64_t v8 = a2[3];
    *(void *)(a1 + 16) = a2[2];
    *(void *)(a1 + 24) = v8;
    uint64_t v9 = a2[4];
    uint64_t v10 = a2[5];
    *(_DWORD *)(a1 + 48) = *((_DWORD *)a2 + 12);
    uint64_t v11 = *(int *)(a3 + 40);
    char v12 = (void *)(a1 + v11);
    char v13 = (char *)a2 + v11;
    *(void *)(a1 + 32) = v9;
    *(void *)(a1 + 40) = v10;
    uint64_t v14 = sub_100129220();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v13, 1, v14))
    {
      uint64_t v15 = sub_1000053D8(&qword_10016B420);
      memcpy(v12, v13, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
      _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v12, 0, 1, v14);
    }
    uint64_t v17 = *(int *)(a3 + 44);
    char v18 = (char *)v4 + v17;
    uint64_t v19 = (uint64_t)a2 + v17;
    *(void *)char v18 = *(void *)v19;
    v18[8] = *(unsigned char *)(v19 + 8);
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_100087634(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 40);
  uint64_t v5 = sub_100129220();
  if (!_s13WeatherWidget20WeatherDataViewModelOwet_0(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }

  return swift_bridgeObjectRelease();
}

uint64_t sub_1000876E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  uint64_t v7 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v7;
  uint64_t v8 = *(void *)(a2 + 32);
  uint64_t v9 = *(void *)(a2 + 40);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  uint64_t v10 = *(int *)(a3 + 40);
  uint64_t v11 = (void *)(a1 + v10);
  char v12 = (const void *)(a2 + v10);
  *(void *)(a1 + 32) = v8;
  *(void *)(a1 + 40) = v9;
  uint64_t v13 = sub_100129220();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v12, 1, v13))
  {
    uint64_t v14 = sub_1000053D8(&qword_10016B420);
    memcpy(v11, v12, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
    _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v11, 0, 1, v13);
  }
  uint64_t v15 = *(int *)(a3 + 44);
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  *(void *)uint64_t v16 = *(void *)v17;
  *(unsigned char *)(v16 + 8) = *(unsigned char *)(v17 + 8);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_100087830(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(unsigned char *)(a1 + 49) = *(unsigned char *)(a2 + 49);
  *(unsigned char *)(a1 + 50) = *(unsigned char *)(a2 + 50);
  *(unsigned char *)(a1 + 51) = *(unsigned char *)(a2 + 51);
  uint64_t v6 = *(int *)(a3 + 40);
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (const void *)(a2 + v6);
  uint64_t v9 = sub_100129220();
  int v10 = _s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v7, 1, v9);
  int v11 = _s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v8, 1, v9);
  if (!v10)
  {
    uint64_t v12 = *(void *)(v9 - 8);
    if (!v11)
    {
      (*(void (**)(void *, const void *, uint64_t))(v12 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v12 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    uint64_t v13 = sub_1000053D8(&qword_10016B420);
    memcpy(v7, v8, *(void *)(*(void *)(v13 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
  _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v7, 0, 1, v9);
LABEL_7:
  uint64_t v14 = *(int *)(a3 + 44);
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  *(void *)(a1 + v14) = *(void *)(a2 + v14);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v15 + 8) = *(unsigned char *)(v16 + 8);
  return a1;
}

uint64_t sub_100087A44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  uint64_t v7 = *(int *)(a3 + 40);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = sub_100129220();
  if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v9, 1, v10))
  {
    uint64_t v11 = sub_1000053D8(&qword_10016B420);
    memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
    _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v8, 0, 1, v10);
  }
  uint64_t v12 = *(int *)(a3 + 44);
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  *(void *)uint64_t v13 = *(void *)v14;
  *(unsigned char *)(v13 + 8) = *(unsigned char *)(v14 + 8);
  return a1;
}

uint64_t sub_100087B58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v8;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 48) = *(_WORD *)(a2 + 48);
  *(unsigned char *)(a1 + 50) = *(unsigned char *)(a2 + 50);
  *(unsigned char *)(a1 + 51) = *(unsigned char *)(a2 + 51);
  uint64_t v9 = *(int *)(a3 + 40);
  uint64_t v10 = (void *)(a1 + v9);
  uint64_t v11 = (const void *)(a2 + v9);
  uint64_t v12 = sub_100129220();
  int v13 = _s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v10, 1, v12);
  int v14 = _s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v11, 1, v12);
  if (!v13)
  {
    uint64_t v15 = *(void *)(v12 - 8);
    if (!v14)
    {
      (*(void (**)(void *, const void *, uint64_t))(v15 + 40))(v10, v11, v12);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v15 + 8))(v10, v12);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    uint64_t v16 = sub_1000053D8(&qword_10016B420);
    memcpy(v10, v11, *(void *)(*(void *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(void *)(v12 - 8) + 32))(v10, v11, v12);
  _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v10, 0, 1, v12);
LABEL_7:
  uint64_t v17 = *(int *)(a3 + 44);
  uint64_t v18 = a1 + v17;
  uint64_t v19 = a2 + v17;
  *(void *)(a1 + v17) = *(void *)v19;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v18 + 8) = *(unsigned char *)(v19 + 8);
  return a1;
}

uint64_t sub_100087D2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100087D40);
}

uint64_t sub_100087D40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1000053D8(&qword_10016B420);
    uint64_t v9 = a1 + *(int *)(a3 + 40);
    return _s13WeatherWidget20WeatherDataViewModelOwet_0(v9, a2, v8);
  }
}

uint64_t sub_100087DCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100087DE0);
}

uint64_t sub_100087DE0(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_1000053D8(&qword_10016B420);
    uint64_t v8 = v5 + *(int *)(a4 + 40);
    return _s13WeatherWidget20WeatherDataViewModelOwst_0(v8, a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for WidgetContext()
{
  uint64_t result = qword_10016E340;
  if (!qword_10016E340) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100087EAC()
{
  sub_100087F64();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_100087F64()
{
  if (!qword_10016D350)
  {
    sub_100129220();
    unint64_t v0 = sub_10012CF40();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10016D350);
    }
  }
}

uint64_t sub_100087FBC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000053D8(&qword_10016B420);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_100088024()
{
  unint64_t result = qword_10016E398;
  if (!qword_10016E398)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016E398);
  }
  return result;
}

unint64_t sub_100088070()
{
  unint64_t result = qword_10016E3A0;
  if (!qword_10016E3A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016E3A0);
  }
  return result;
}

uint64_t sub_1000880BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000053D8(&qword_10016B420);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_100088124()
{
  unint64_t result = qword_10016E3A8;
  if (!qword_10016E3A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016E3A8);
  }
  return result;
}

uint64_t sub_100088170(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for WidgetContext();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000881D4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for WidgetContext();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_100088230()
{
  unint64_t result = qword_10016E3B8;
  if (!qword_10016E3B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016E3B8);
  }
  return result;
}

uint64_t sub_10008827C(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100129220();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1000882C0()
{
  unint64_t result = qword_10016E3C0;
  if (!qword_10016E3C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016E3C0);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for WidgetContext.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xF9)
  {
    if (a2 + 7 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 7) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 8;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 8;
  int v5 = v6 - 8;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for WidgetContext.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *unint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100088460);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WidgetContext.CodingKeys()
{
  return &type metadata for WidgetContext.CodingKeys;
}

uint64_t initializeBufferWithCopyOfBuffer for WidgetBackgroundContext(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for WidgetBackgroundContext()
{
  return swift_bridgeObjectRelease();
}

uint64_t assignWithCopy for WidgetBackgroundContext(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  return a1;
}

uint64_t initializeWithTake for WidgetBackgroundContext(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(unsigned char *)(result + 8) = *((unsigned char *)a2 + 8);
  *(void *)unint64_t result = v2;
  return result;
}

uint64_t assignWithTake for WidgetBackgroundContext(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  return a1;
}

uint64_t getEnumTagSinglePayload for WidgetBackgroundContext(uint64_t *a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *((unsigned char *)a1 + 9))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      uint64_t v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for WidgetBackgroundContext(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 9) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WidgetBackgroundContext()
{
  return &type metadata for WidgetBackgroundContext;
}

unint64_t sub_100088610()
{
  unint64_t result = qword_10016E3C8;
  if (!qword_10016E3C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016E3C8);
  }
  return result;
}

unint64_t sub_100088660()
{
  unint64_t result = qword_10016E3D0;
  if (!qword_10016E3D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016E3D0);
  }
  return result;
}

unint64_t sub_1000886B0()
{
  unint64_t result = qword_10016E3D8;
  if (!qword_10016E3D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016E3D8);
  }
  return result;
}

unint64_t sub_1000886FC()
{
  unint64_t result = qword_10016E3E8;
  if (!qword_10016E3E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016E3E8);
  }
  return result;
}

unint64_t sub_100088748()
{
  unint64_t result = qword_10016E3F0;
  if (!qword_10016E3F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016E3F0);
  }
  return result;
}

unint64_t sub_100088794()
{
  unint64_t result = qword_10016E400;
  if (!qword_10016E400)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016E400);
  }
  return result;
}

unsigned char *_s10CodingKeysOwst_1(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000888ACLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WidgetBackgroundContext.CodingKeys()
{
  return &type metadata for WidgetBackgroundContext.CodingKeys;
}

unint64_t sub_1000888E8()
{
  unint64_t result = qword_10016E408;
  if (!qword_10016E408)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016E408);
  }
  return result;
}

unint64_t sub_100088938()
{
  unint64_t result = qword_10016E410;
  if (!qword_10016E410)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016E410);
  }
  return result;
}

unint64_t sub_100088988()
{
  unint64_t result = qword_10016E418;
  if (!qword_10016E418)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016E418);
  }
  return result;
}

uint64_t sub_1000889E0()
{
  return v0;
}

uint64_t sub_1000889F8()
{
  return v0;
}

uint64_t sub_100088A10()
{
  return sub_10012D100();
}

uint64_t sub_100088A30()
{
  return sub_10012D130();
}

void *sub_100088A58()
{
  return sub_10000D890(v0, v0[3]);
}

void *sub_100088A7C()
{
  return sub_10000D890(v0, v0[3]);
}

uint64_t sub_100088AA0@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v1 - 80) = a1;
  return sub_10012D190();
}

uint64_t sub_100088AC4()
{
  return sub_10012D2C0();
}

uint64_t sub_100088AE0@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v1 - 96) = a1;
  return sub_10012D110();
}

uint64_t sub_100088B04()
{
  return sub_10012D1B0();
}

void *sub_100088B20(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) == 0)
  {
    sub_1000053D8(&qword_10016B410);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_10012C800();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v10 = a3[5];
    uint64_t v11 = (void *)((char *)a1 + v10);
    uint64_t v12 = (void *)((char *)a2 + v10);
    sub_1000053D8(&qword_10016B9D8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v13 = sub_10012AFE0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
    }
    else
    {
      *uint64_t v11 = *v12;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v14 = a3[6];
    uint64_t v15 = (char *)a1 + v14;
    uint64_t v16 = (char *)a2 + v14;
    uint64_t v17 = *(void *)v16;
    char v18 = v16[8];
    sub_10000886C(*(void *)v16, v18);
    *(void *)uint64_t v15 = v17;
    v15[8] = v18;
    uint64_t v19 = a3[7];
    uint64_t v20 = (void *)((char *)a1 + v19);
    uint64_t v21 = (void *)((char *)a2 + v19);
    sub_1000053D8(&qword_10016B9E0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v22 = sub_10012B2D0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
    }
    else
    {
      *uint64_t v20 = *v21;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v115 = a3;
    uint64_t v116 = a2;
    uint64_t v23 = a3[8];
    uint64_t v117 = a1;
    char v24 = (char *)a1 + v23;
    uint64_t v25 = (char *)a2 + v23;
    uint64_t v26 = sub_100129300();
    uint64_t v113 = *(void (**)(char *, char *))(*(void *)(v26 - 8) + 16);
    uint64_t v114 = v26;
    v113(v24, v25);
    uint64_t v27 = type metadata accessor for ForecastEntry(0);
    uint64_t v28 = *(int *)(v27 + 20);
    uint64_t v29 = &v24[v28];
    uint64_t v30 = &v25[v28];
    uint64_t v31 = sub_10012C920();
    if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v30, 1, v31))
    {
      uint64_t v32 = sub_1000053D8(&qword_10016B418);
      memcpy(v29, v30, *(void *)(*(void *)(v32 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16))(v29, v30, v31);
      _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v29, 0, 1, v31);
    }
    uint64_t v118 = v27;
    uint64_t v119 = v25;
    uint64_t v33 = *(int *)(v27 + 24);
    uint64_t v34 = &v24[v33];
    char v35 = &v25[v33];
    uint64_t v36 = *(void *)&v25[v33 + 8];
    *(void *)uint64_t v34 = *(void *)&v25[v33];
    *((void *)v34 + 1) = v36;
    uint64_t v37 = *(void *)&v25[v33 + 24];
    *((void *)v34 + 2) = *(void *)&v25[v33 + 16];
    *((void *)v34 + 3) = v37;
    uint64_t v38 = *(void *)&v25[v33 + 32];
    uint64_t v39 = *((void *)v35 + 5);
    *((void *)v34 + 4) = v38;
    *((void *)v34 + 5) = v39;
    *((_DWORD *)v34 + 12) = *((_DWORD *)v35 + 12);
    uint64_t v40 = type metadata accessor for WidgetContext();
    uint64_t v41 = *(int *)(v40 + 40);
    uint64_t v42 = &v34[v41];
    uint64_t v43 = &v35[v41];
    uint64_t v44 = sub_100129220();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v43, 1, v44))
    {
      uint64_t v45 = sub_1000053D8(&qword_10016B420);
      memcpy(v42, v43, *(void *)(*(void *)(v45 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v44 - 8) + 16))(v42, v43, v44);
      _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v42, 0, 1, v44);
    }
    uint64_t v46 = *(int *)(v40 + 44);
    uint64_t v47 = &v34[v46];
    uint64_t v48 = &v35[v46];
    *(void *)uint64_t v47 = *(void *)v48;
    v47[8] = v48[8];
    uint64_t v49 = *(int *)(v118 + 28);
    uint64_t v50 = &v24[v49];
    uint64_t v51 = &v119[v49];
    uint64_t v52 = type metadata accessor for ForecastEntry.Model(0);
    swift_bridgeObjectRetain();
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      memcpy(v50, v51, *(void *)(*(void *)(v52 - 8) + 64));
      uint64_t v64 = v116;
      uint64_t v9 = v117;
      uint64_t v65 = v115;
LABEL_39:
      *((unsigned char *)v9 + v65[9]) = *((unsigned char *)v64 + v65[9]);
      return v9;
    }
    type metadata accessor for WeatherDataViewModel();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v66 = sub_10012BE90();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v66 - 8) + 16))(v50, v51, v66);
    }
    else
    {
      if (EnumCaseMultiPayload != 1)
      {
        uint64_t v112 = v44;
        uint64_t v67 = sub_100129330();
        uint64_t v68 = (void (**)(void *, const void *))(*(void *)(v67 - 8) + 16);
        uint64_t v110 = *v68;
        uint64_t v111 = v67;
        (*v68)(v50, v51);
        uint64_t v69 = (int *)type metadata accessor for AggregateWeatherViewModel(0);
        uint64_t v70 = v69[5];
        uint64_t v71 = &v50[v70];
        uint64_t v72 = &v51[v70];
        uint64_t v73 = sub_10012A6B0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v73 - 8) + 16))(v71, v72, v73);
        uint64_t v74 = v69[6];
        uint64_t v75 = &v50[v74];
        uint64_t v76 = &v51[v74];
        uint64_t v77 = sub_10012C250();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v77 - 8) + 16))(v75, v76, v77);
        *(void *)&v50[v69[7]] = *(void *)&v51[v69[7]];
        *(void *)&v50[v69[8]] = *(void *)&v51[v69[8]];
        uint64_t v78 = v69[9];
        uint64_t v79 = &v50[v78];
        uint64_t v80 = &v51[v78];
        uint64_t v81 = (int *)type metadata accessor for AirQualityViewModel();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v80, 1, (uint64_t)v81))
        {
          uint64_t v82 = sub_1000053D8(&qword_10016B428);
          memcpy(v79, v80, *(void *)(*(void *)(v82 - 8) + 64));
        }
        else
        {
          uint64_t v83 = (uint64_t)v79;
          ((void (*)(char *, char *, uint64_t))v110)(v79, v80, v111);
          ((void (*)(char *, char *, uint64_t))v113)(&v79[v81[5]], &v80[v81[5]], v114);
          *(void *)&v79[v81[6]] = *(void *)&v80[v81[6]];
          uint64_t v84 = v81[7];
          uint64_t v85 = &v79[v84];
          uint64_t v86 = &v80[v84];
          uint64_t v87 = sub_100129B70();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v87 - 8) + 16))(v85, v86, v87);
          uint64_t v88 = v81[8];
          uint64_t v89 = v83 + v88;
          uint64_t v90 = &v80[v88];
          uint64_t v91 = sub_100129C50();
          (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v91 - 8) + 16))(v89, v90, v91);
          _s13WeatherWidget20WeatherDataViewModelOwst_0(v83, 0, 1, (uint64_t)v81);
        }
        uint64_t v92 = v69[10];
        uint64_t v93 = &v50[v92];
        uint64_t v94 = &v51[v92];
        uint64_t v95 = sub_10012C6B0();
        if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v94, 1, v95))
        {
          uint64_t v96 = sub_1000053D8(&qword_10016B430);
          memcpy(v93, v94, *(void *)(*(void *)(v96 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v95 - 8) + 16))(v93, v94, v95);
          _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v93, 0, 1, v95);
        }
        *(void *)&v50[v69[11]] = *(void *)&v51[v69[11]];
        uint64_t v97 = v69[12];
        uint64_t v98 = &v50[v97];
        uint64_t v99 = &v51[v97];
        *(void *)uint64_t v98 = *(void *)v99;
        *((_WORD *)v98 + 4) = *((_WORD *)v99 + 4);
        uint64_t v100 = v69[13];
        os_log_type_t v101 = &v50[v100];
        uint64_t v102 = &v51[v100];
        swift_bridgeObjectRetain();
        if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v102, 1, v112))
        {
          uint64_t v103 = sub_1000053D8(&qword_10016B420);
          memcpy(v101, v102, *(void *)(*(void *)(v103 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v112 - 8) + 16))(v101, v102, v112);
          _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v101, 0, 1, v112);
        }
        uint64_t v104 = v69[14];
        int v105 = &v50[v104];
        uint64_t v106 = &v51[v104];
        uint64_t v107 = type metadata accessor for AggregateWeatherViewModel.SunEvent(0);
        if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v106, 1, v107))
        {
          uint64_t v108 = sub_1000053D8(&qword_10016B438);
          memcpy(v105, v106, *(void *)(*(void *)(v108 - 8) + 64));
        }
        else
        {
          swift_getEnumCaseMultiPayload();
          ((void (*)(char *, char *, uint64_t))v113)(v105, v106, v114);
          swift_storeEnumTagMultiPayload();
          _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v105, 0, 1, v107);
        }
        uint64_t v64 = v116;
        uint64_t v9 = v117;
        uint64_t v65 = v115;
        goto LABEL_38;
      }
      uint64_t v54 = sub_100129330();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v54 - 8) + 16))(v50, v51, v54);
      uint64_t v55 = type metadata accessor for InstantWeatherViewModel();
      uint64_t v56 = *(int *)(v55 + 20);
      uint64_t v57 = &v50[v56];
      uint64_t v58 = &v51[v56];
      uint64_t v59 = sub_10012A6B0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v59 - 8) + 16))(v57, v58, v59);
      uint64_t v60 = *(int *)(v55 + 24);
      uint64_t v61 = &v50[v60];
      uint64_t v62 = &v51[v60];
      uint64_t v63 = sub_10012C250();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v63 - 8) + 16))(v61, v62, v63);
    }
    uint64_t v64 = v116;
    uint64_t v9 = v117;
    uint64_t v65 = v115;
LABEL_38:
    swift_storeEnumTagMultiPayload();
    swift_storeEnumTagMultiPayload();
    goto LABEL_39;
  }
  uint64_t v8 = *a2;
  *a1 = *a2;
  uint64_t v9 = (void *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
  swift_retain();
  return v9;
}

uint64_t sub_100089614(uint64_t a1, int *a2)
{
  sub_1000053D8(&qword_10016B410);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_10012C800();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }
  uint64_t v5 = a1 + a2[5];
  sub_1000053D8(&qword_10016B9D8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_10012AFE0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  }
  else
  {
    swift_release();
  }
  sub_100008BF8(*(void *)(a1 + a2[6]), *(unsigned char *)(a1 + a2[6] + 8));
  uint64_t v7 = a1 + a2[7];
  sub_1000053D8(&qword_10016B9E0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = sub_10012B2D0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  }
  else
  {
    swift_release();
  }
  uint64_t v9 = a1 + a2[8];
  uint64_t v10 = sub_100129300();
  uint64_t v47 = *(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8);
  v47(v9, v10);
  uint64_t v11 = (int *)type metadata accessor for ForecastEntry(0);
  uint64_t v12 = v9 + v11[5];
  uint64_t v13 = sub_10012C920();
  if (!_s13WeatherWidget20WeatherDataViewModelOwet_0(v12, 1, v13)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
  }
  uint64_t v14 = v9 + v11[6];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v15 = v14 + *(int *)(type metadata accessor for WidgetContext() + 40);
  uint64_t v16 = sub_100129220();
  if (!_s13WeatherWidget20WeatherDataViewModelOwet_0(v15, 1, v16)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
  }
  swift_bridgeObjectRelease();
  uint64_t v17 = v9 + v11[7];
  type metadata accessor for ForecastEntry.Model(0);
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 1)
  {
    type metadata accessor for WeatherDataViewModel();
    uint64_t result = swift_getEnumCaseMultiPayload();
    if (result == 2)
    {
      uint64_t v37 = sub_10012BE90();
      uint64_t v38 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v37 - 8) + 8);
      uint64_t v39 = v37;
      uint64_t v40 = v17;
    }
    else if (result == 1)
    {
      uint64_t v41 = sub_100129330();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v41 - 8) + 8))(v17, v41);
      uint64_t v42 = type metadata accessor for InstantWeatherViewModel();
      uint64_t v43 = v17 + *(int *)(v42 + 20);
      uint64_t v44 = sub_10012A6B0();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v44 - 8) + 8))(v43, v44);
      uint64_t v45 = v17 + *(int *)(v42 + 24);
      uint64_t v46 = sub_10012C250();
      uint64_t v38 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v46 - 8) + 8);
      uint64_t v39 = v46;
      uint64_t v40 = v45;
    }
    else
    {
      if (result) {
        return result;
      }
      uint64_t v19 = sub_100129330();
      uint64_t v20 = *(void (**)(uint64_t, uint64_t))(*(void *)(v19 - 8) + 8);
      v20(v17, v19);
      uint64_t v21 = (int *)type metadata accessor for AggregateWeatherViewModel(0);
      uint64_t v22 = v17 + v21[5];
      uint64_t v23 = sub_10012A6B0();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v23 - 8) + 8))(v22, v23);
      uint64_t v24 = v17 + v21[6];
      uint64_t v25 = sub_10012C250();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v25 - 8) + 8))(v24, v25);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v26 = v17 + v21[9];
      uint64_t v27 = (int *)type metadata accessor for AirQualityViewModel();
      if (!_s13WeatherWidget20WeatherDataViewModelOwet_0(v26, 1, (uint64_t)v27))
      {
        v20(v26, v19);
        v47(v26 + v27[5], v10);
        uint64_t v28 = v26 + v27[7];
        uint64_t v29 = sub_100129B70();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v29 - 8) + 8))(v28, v29);
        uint64_t v30 = v26 + v27[8];
        uint64_t v31 = sub_100129C50();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v31 - 8) + 8))(v30, v31);
      }
      uint64_t v32 = v17 + v21[10];
      uint64_t v33 = sub_10012C6B0();
      if (!_s13WeatherWidget20WeatherDataViewModelOwet_0(v32, 1, v33)) {
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v33 - 8) + 8))(v32, v33);
      }
      swift_bridgeObjectRelease();
      uint64_t v34 = v17 + v21[13];
      if (!_s13WeatherWidget20WeatherDataViewModelOwet_0(v34, 1, v16)) {
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v34, v16);
      }
      uint64_t v35 = v17 + v21[14];
      uint64_t v36 = type metadata accessor for AggregateWeatherViewModel.SunEvent(0);
      uint64_t result = _s13WeatherWidget20WeatherDataViewModelOwet_0(v35, 1, v36);
      if (result) {
        return result;
      }
      uint64_t v40 = v35;
      uint64_t v39 = v10;
      uint64_t v38 = (uint64_t (*)(uint64_t, uint64_t))v47;
    }
    return v38(v40, v39);
  }
  return result;
}

void *sub_100089CF4(void *a1, void *a2, int *a3)
{
  sub_1000053D8(&qword_10016B410);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_10012C800();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)((char *)a1 + v7);
  uint64_t v9 = (void *)((char *)a2 + v7);
  sub_1000053D8(&qword_10016B9D8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = sub_10012AFE0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  }
  else
  {
    *uint64_t v8 = *v9;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v11 = a3[6];
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = *(void *)v13;
  char v15 = v13[8];
  sub_10000886C(*(void *)v13, v15);
  *(void *)uint64_t v12 = v14;
  v12[8] = v15;
  uint64_t v16 = a3[7];
  uint64_t v17 = (void *)((char *)a1 + v16);
  char v18 = (void *)((char *)a2 + v16);
  sub_1000053D8(&qword_10016B9E0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v19 = sub_10012B2D0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
  }
  else
  {
    *uint64_t v17 = *v18;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v112 = a3;
  uint64_t v113 = a2;
  uint64_t v20 = a3[8];
  uint64_t v114 = a1;
  uint64_t v21 = (char *)a1 + v20;
  uint64_t v22 = (char *)a2 + v20;
  uint64_t v23 = sub_100129300();
  uint64_t v110 = *(void (**)(char *, char *))(*(void *)(v23 - 8) + 16);
  uint64_t v111 = v23;
  v110(v21, v22);
  uint64_t v24 = type metadata accessor for ForecastEntry(0);
  uint64_t v25 = *(int *)(v24 + 20);
  uint64_t v26 = &v21[v25];
  uint64_t v27 = &v22[v25];
  uint64_t v28 = sub_10012C920();
  if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v27, 1, v28))
  {
    uint64_t v29 = sub_1000053D8(&qword_10016B418);
    memcpy(v26, v27, *(void *)(*(void *)(v29 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 16))(v26, v27, v28);
    _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v26, 0, 1, v28);
  }
  uint64_t v115 = v24;
  uint64_t v30 = *(int *)(v24 + 24);
  uint64_t v31 = &v21[v30];
  uint64_t v32 = &v22[v30];
  uint64_t v33 = *(void *)&v22[v30 + 8];
  *(void *)uint64_t v31 = *(void *)&v22[v30];
  *((void *)v31 + 1) = v33;
  uint64_t v34 = *(void *)&v22[v30 + 24];
  *((void *)v31 + 2) = *(void *)&v22[v30 + 16];
  *((void *)v31 + 3) = v34;
  uint64_t v35 = *(void *)&v22[v30 + 40];
  *((void *)v31 + 4) = *(void *)&v22[v30 + 32];
  *((void *)v31 + 5) = v35;
  *((_DWORD *)v31 + 12) = *(_DWORD *)&v22[v30 + 48];
  uint64_t v36 = type metadata accessor for WidgetContext();
  uint64_t v37 = *(int *)(v36 + 40);
  uint64_t v38 = &v31[v37];
  uint64_t v39 = &v32[v37];
  uint64_t v40 = sub_100129220();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v39, 1, v40))
  {
    uint64_t v41 = sub_1000053D8(&qword_10016B420);
    memcpy(v38, v39, *(void *)(*(void *)(v41 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v40 - 8) + 16))(v38, v39, v40);
    _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v38, 0, 1, v40);
  }
  uint64_t v42 = *(int *)(v36 + 44);
  uint64_t v43 = &v31[v42];
  uint64_t v44 = &v32[v42];
  *(void *)uint64_t v43 = *(void *)v44;
  v43[8] = v44[8];
  uint64_t v45 = *(int *)(v115 + 28);
  uint64_t v46 = &v21[v45];
  uint64_t v47 = &v22[v45];
  uint64_t v48 = type metadata accessor for ForecastEntry.Model(0);
  swift_bridgeObjectRetain();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    type metadata accessor for WeatherDataViewModel();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v63 = sub_10012BE90();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v63 - 8) + 16))(v46, v47, v63);
    }
    else
    {
      if (EnumCaseMultiPayload != 1)
      {
        uint64_t v109 = v40;
        uint64_t v64 = sub_100129330();
        uint64_t v65 = (void (**)(void *, const void *))(*(void *)(v64 - 8) + 16);
        uint64_t v107 = *v65;
        uint64_t v108 = v64;
        (*v65)(v46, v47);
        uint64_t v66 = (int *)type metadata accessor for AggregateWeatherViewModel(0);
        uint64_t v67 = v66[5];
        uint64_t v68 = &v46[v67];
        uint64_t v69 = &v47[v67];
        uint64_t v70 = sub_10012A6B0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v70 - 8) + 16))(v68, v69, v70);
        uint64_t v71 = v66[6];
        uint64_t v72 = &v46[v71];
        uint64_t v73 = &v47[v71];
        uint64_t v74 = sub_10012C250();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v74 - 8) + 16))(v72, v73, v74);
        *(void *)&v46[v66[7]] = *(void *)&v47[v66[7]];
        *(void *)&v46[v66[8]] = *(void *)&v47[v66[8]];
        uint64_t v75 = v66[9];
        uint64_t v76 = &v46[v75];
        uint64_t v77 = &v47[v75];
        uint64_t v78 = (int *)type metadata accessor for AirQualityViewModel();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v77, 1, (uint64_t)v78))
        {
          uint64_t v79 = sub_1000053D8(&qword_10016B428);
          memcpy(v76, v77, *(void *)(*(void *)(v79 - 8) + 64));
        }
        else
        {
          uint64_t v80 = (uint64_t)v76;
          ((void (*)(char *, char *, uint64_t))v107)(v76, v77, v108);
          ((void (*)(char *, char *, uint64_t))v110)(&v76[v78[5]], &v77[v78[5]], v111);
          *(void *)&v76[v78[6]] = *(void *)&v77[v78[6]];
          uint64_t v81 = v78[7];
          uint64_t v82 = &v76[v81];
          uint64_t v83 = &v77[v81];
          uint64_t v84 = sub_100129B70();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v84 - 8) + 16))(v82, v83, v84);
          uint64_t v85 = v78[8];
          uint64_t v86 = v80 + v85;
          uint64_t v87 = &v77[v85];
          uint64_t v88 = sub_100129C50();
          (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v88 - 8) + 16))(v86, v87, v88);
          _s13WeatherWidget20WeatherDataViewModelOwst_0(v80, 0, 1, (uint64_t)v78);
        }
        uint64_t v89 = v66[10];
        uint64_t v90 = &v46[v89];
        uint64_t v91 = &v47[v89];
        uint64_t v92 = sub_10012C6B0();
        if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v91, 1, v92))
        {
          uint64_t v93 = sub_1000053D8(&qword_10016B430);
          memcpy(v90, v91, *(void *)(*(void *)(v93 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v92 - 8) + 16))(v90, v91, v92);
          _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v90, 0, 1, v92);
        }
        *(void *)&v46[v66[11]] = *(void *)&v47[v66[11]];
        uint64_t v94 = v66[12];
        uint64_t v95 = &v46[v94];
        uint64_t v96 = &v47[v94];
        *(void *)uint64_t v95 = *(void *)v96;
        *((_WORD *)v95 + 4) = *((_WORD *)v96 + 4);
        uint64_t v97 = v66[13];
        uint64_t v98 = &v46[v97];
        uint64_t v99 = &v47[v97];
        swift_bridgeObjectRetain();
        if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v99, 1, v109))
        {
          uint64_t v100 = sub_1000053D8(&qword_10016B420);
          memcpy(v98, v99, *(void *)(*(void *)(v100 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v109 - 8) + 16))(v98, v99, v109);
          _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v98, 0, 1, v109);
        }
        uint64_t v101 = v66[14];
        uint64_t v102 = &v46[v101];
        uint64_t v103 = &v47[v101];
        uint64_t v104 = type metadata accessor for AggregateWeatherViewModel.SunEvent(0);
        if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v103, 1, v104))
        {
          uint64_t v105 = sub_1000053D8(&qword_10016B438);
          memcpy(v102, v103, *(void *)(*(void *)(v105 - 8) + 64));
        }
        else
        {
          swift_getEnumCaseMultiPayload();
          ((void (*)(char *, char *, uint64_t))v110)(v102, v103, v111);
          swift_storeEnumTagMultiPayload();
          _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v102, 0, 1, v104);
        }
        uint64_t v61 = v113;
        uint64_t v60 = v114;
        uint64_t v62 = v112;
        goto LABEL_36;
      }
      uint64_t v50 = sub_100129330();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v50 - 8) + 16))(v46, v47, v50);
      uint64_t v51 = type metadata accessor for InstantWeatherViewModel();
      uint64_t v52 = *(int *)(v51 + 20);
      uint64_t v53 = &v46[v52];
      uint64_t v54 = &v47[v52];
      uint64_t v55 = sub_10012A6B0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v55 - 8) + 16))(v53, v54, v55);
      uint64_t v56 = *(int *)(v51 + 24);
      uint64_t v57 = &v46[v56];
      uint64_t v58 = &v47[v56];
      uint64_t v59 = sub_10012C250();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v59 - 8) + 16))(v57, v58, v59);
    }
    uint64_t v61 = v113;
    uint64_t v60 = v114;
    uint64_t v62 = v112;
LABEL_36:
    swift_storeEnumTagMultiPayload();
    swift_storeEnumTagMultiPayload();
    goto LABEL_37;
  }
  memcpy(v46, v47, *(void *)(*(void *)(v48 - 8) + 64));
  uint64_t v61 = v113;
  uint64_t v60 = v114;
  uint64_t v62 = v112;
LABEL_37:
  *((unsigned char *)v60 + v62[9]) = *((unsigned char *)v61 + v62[9]);
  return v60;
}

void *sub_10008A79C(void *a1, void *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_1000235F8((uint64_t)a1, &qword_10016B410);
    sub_1000053D8(&qword_10016B410);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_10012C800();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v7 = a3[5];
    uint64_t v8 = (void *)((char *)a1 + v7);
    uint64_t v9 = (void *)((char *)a2 + v7);
    sub_1000235F8((uint64_t)a1 + v7, &qword_10016B9D8);
    sub_1000053D8(&qword_10016B9D8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v10 = sub_10012AFE0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    }
    else
    {
      *uint64_t v8 = *v9;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v11 = a3[6];
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = *(void *)v13;
  char v15 = v13[8];
  sub_10000886C(*(void *)v13, v15);
  uint64_t v16 = *(void *)v12;
  char v17 = v12[8];
  *(void *)uint64_t v12 = v14;
  v12[8] = v15;
  sub_100008BF8(v16, v17);
  if (a1 != a2)
  {
    uint64_t v18 = a3[7];
    uint64_t v19 = (void *)((char *)a1 + v18);
    uint64_t v20 = (void *)((char *)a2 + v18);
    sub_1000235F8((uint64_t)a1 + v18, &qword_10016B9E0);
    sub_1000053D8(&qword_10016B9E0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v21 = sub_10012B2D0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v21 - 8) + 16))(v19, v20, v21);
    }
    else
    {
      *uint64_t v19 = *v20;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v118 = a3;
  uint64_t v119 = a2;
  uint64_t v22 = a3[8];
  uint64_t v23 = (char *)a1 + v22;
  uint64_t v24 = (char *)a2 + v22;
  uint64_t v25 = sub_100129300();
  uint64_t v115 = *(void *)(v25 - 8);
  uint64_t v116 = v25;
  (*(void (**)(char *, char *))(v115 + 24))(v23, v24);
  uint64_t v26 = (int *)type metadata accessor for ForecastEntry(0);
  uint64_t v27 = v26[5];
  uint64_t v28 = &v23[v27];
  uint64_t v29 = &v24[v27];
  uint64_t v30 = sub_10012C920();
  int v31 = _s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v28, 1, v30);
  int v32 = _s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v29, 1, v30);
  uint64_t v120 = a1;
  if (v31)
  {
    if (!v32)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 16))(v28, v29, v30);
      _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v28, 0, 1, v30);
      goto LABEL_20;
    }
    goto LABEL_19;
  }
  uint64_t v33 = *(void *)(v30 - 8);
  if (v32)
  {
    (*(void (**)(char *, uint64_t))(v33 + 8))(v28, v30);
LABEL_19:
    uint64_t v34 = sub_1000053D8(&qword_10016B418);
    memcpy(v28, v29, *(void *)(*(void *)(v34 - 8) + 64));
    goto LABEL_20;
  }
  (*(void (**)(char *, char *, uint64_t))(v33 + 24))(v28, v29, v30);
LABEL_20:
  uint64_t v35 = v26[6];
  uint64_t v36 = &v23[v35];
  uint64_t v37 = &v24[v35];
  *(void *)uint64_t v36 = *(void *)&v24[v35];
  *((void *)v36 + 1) = *(void *)&v24[v35 + 8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v36 + 2) = *((void *)v37 + 2);
  *((void *)v36 + 3) = *((void *)v37 + 3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v36 + 4) = *((void *)v37 + 4);
  *((void *)v36 + 5) = *((void *)v37 + 5);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v36[48] = v37[48];
  v36[49] = v37[49];
  v36[50] = v37[50];
  v36[51] = v37[51];
  uint64_t v38 = type metadata accessor for WidgetContext();
  uint64_t v39 = *(int *)(v38 + 40);
  uint64_t v40 = &v36[v39];
  uint64_t v41 = &v37[v39];
  uint64_t v42 = sub_100129220();
  int v43 = _s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v40, 1, v42);
  int v44 = _s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v41, 1, v42);
  uint64_t v117 = v42;
  if (v43)
  {
    uint64_t v45 = v120;
    if (v44)
    {
      uint64_t v46 = sub_1000053D8(&qword_10016B420);
      memcpy(v40, v41, *(void *)(*(void *)(v46 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v117 - 8) + 16))(v40, v41, v117);
      uint64_t v45 = v120;
      _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v40, 0, 1, v117);
    }
  }
  else
  {
    uint64_t v47 = *(void *)(v42 - 8);
    if (v44)
    {
      (*(void (**)(char *, uint64_t))(v47 + 8))(v40, v42);
      uint64_t v48 = sub_1000053D8(&qword_10016B420);
      memcpy(v40, v41, *(void *)(*(void *)(v48 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v47 + 24))(v40, v41, v42);
    }
    uint64_t v45 = v120;
  }
  uint64_t v49 = *(int *)(v38 + 44);
  uint64_t v50 = &v36[v49];
  uint64_t v51 = &v37[v49];
  *(void *)uint64_t v50 = *(void *)&v37[v49];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v50[8] = v51[8];
  uint64_t v52 = v119;
  if (v45 != v119)
  {
    uint64_t v53 = v26[7];
    uint64_t v54 = &v23[v53];
    uint64_t v55 = &v24[v53];
    sub_10008F8B0((uint64_t)v54, (void (*)(void))type metadata accessor for ForecastEntry.Model);
    uint64_t v56 = type metadata accessor for ForecastEntry.Model(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      type metadata accessor for WeatherDataViewModel();
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        uint64_t v68 = sub_10012BE90();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v68 - 8) + 16))(v54, v55, v68);
      }
      else if (EnumCaseMultiPayload == 1)
      {
        uint64_t v58 = sub_100129330();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v58 - 8) + 16))(v54, v55, v58);
        uint64_t v59 = type metadata accessor for InstantWeatherViewModel();
        uint64_t v60 = *(int *)(v59 + 20);
        uint64_t v61 = &v54[v60];
        uint64_t v62 = &v55[v60];
        uint64_t v63 = sub_10012A6B0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v63 - 8) + 16))(v61, v62, v63);
        uint64_t v64 = *(int *)(v59 + 24);
        uint64_t v65 = &v54[v64];
        uint64_t v66 = &v55[v64];
        uint64_t v67 = sub_10012C250();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v67 - 8) + 16))(v65, v66, v67);
      }
      else
      {
        uint64_t v69 = sub_100129330();
        uint64_t v70 = (void (**)(void *, const void *))(*(void *)(v69 - 8) + 16);
        uint64_t v112 = *v70;
        uint64_t v113 = v69;
        (*v70)(v54, v55);
        uint64_t v71 = (int *)type metadata accessor for AggregateWeatherViewModel(0);
        uint64_t v72 = v71[5];
        uint64_t v73 = &v54[v72];
        uint64_t v74 = &v55[v72];
        uint64_t v75 = sub_10012A6B0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v75 - 8) + 16))(v73, v74, v75);
        uint64_t v76 = v71[6];
        uint64_t v77 = &v54[v76];
        uint64_t v78 = &v55[v76];
        uint64_t v79 = sub_10012C250();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v79 - 8) + 16))(v77, v78, v79);
        *(void *)&v54[v71[7]] = *(void *)&v55[v71[7]];
        *(void *)&v54[v71[8]] = *(void *)&v55[v71[8]];
        uint64_t v114 = v71;
        uint64_t v80 = v71[9];
        uint64_t v81 = &v54[v80];
        uint64_t v82 = &v55[v80];
        uint64_t v83 = (int *)type metadata accessor for AirQualityViewModel();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v82, 1, (uint64_t)v83))
        {
          uint64_t v84 = sub_1000053D8(&qword_10016B428);
          memcpy(v81, v82, *(void *)(*(void *)(v84 - 8) + 64));
        }
        else
        {
          ((void (*)(char *, char *, uint64_t))v112)(v81, v82, v113);
          (*(void (**)(char *, char *, uint64_t))(v115 + 16))(&v81[v83[5]], &v82[v83[5]], v116);
          *(void *)&v81[v83[6]] = *(void *)&v82[v83[6]];
          uint64_t v85 = v83[7];
          uint64_t v86 = &v81[v85];
          uint64_t v87 = &v82[v85];
          uint64_t v88 = sub_100129B70();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v88 - 8) + 16))(v86, v87, v88);
          uint64_t v89 = v83[8];
          uint64_t v90 = &v81[v89];
          uint64_t v91 = &v82[v89];
          uint64_t v92 = sub_100129C50();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v92 - 8) + 16))(v90, v91, v92);
          _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v81, 0, 1, (uint64_t)v83);
        }
        uint64_t v93 = v114[10];
        uint64_t v94 = &v54[v93];
        uint64_t v95 = &v55[v93];
        uint64_t v96 = sub_10012C6B0();
        if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v95, 1, v96))
        {
          uint64_t v97 = sub_1000053D8(&qword_10016B430);
          memcpy(v94, v95, *(void *)(*(void *)(v97 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v96 - 8) + 16))(v94, v95, v96);
          _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v94, 0, 1, v96);
        }
        *(void *)&v54[v114[11]] = *(void *)&v55[v114[11]];
        uint64_t v98 = v114[12];
        uint64_t v99 = &v54[v98];
        uint64_t v100 = &v55[v98];
        uint64_t v101 = *(void *)v100;
        *((_WORD *)v99 + 4) = *((_WORD *)v100 + 4);
        *(void *)uint64_t v99 = v101;
        uint64_t v102 = v114[13];
        uint64_t v103 = &v54[v102];
        uint64_t v104 = &v55[v102];
        swift_bridgeObjectRetain();
        if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v104, 1, v117))
        {
          uint64_t v105 = sub_1000053D8(&qword_10016B420);
          memcpy(v103, v104, *(void *)(*(void *)(v105 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v117 - 8) + 16))(v103, v104, v117);
          _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v103, 0, 1, v117);
        }
        uint64_t v106 = v114[14];
        uint64_t v107 = &v54[v106];
        uint64_t v108 = &v55[v106];
        uint64_t v109 = type metadata accessor for AggregateWeatherViewModel.SunEvent(0);
        if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v108, 1, v109))
        {
          uint64_t v110 = sub_1000053D8(&qword_10016B438);
          memcpy(v107, v108, *(void *)(*(void *)(v110 - 8) + 64));
        }
        else
        {
          swift_getEnumCaseMultiPayload();
          (*(void (**)(char *, char *, uint64_t))(v115 + 16))(v107, v108, v116);
          swift_storeEnumTagMultiPayload();
          _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v107, 0, 1, v109);
        }
        uint64_t v52 = v119;
      }
      swift_storeEnumTagMultiPayload();
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v54, v55, *(void *)(*(void *)(v56 - 8) + 64));
    }
  }
  *((unsigned char *)v45 + v118[9]) = *((unsigned char *)v52 + v118[9]);
  return v45;
}

char *sub_10008B454(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_1000053D8(&qword_10016B410);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_10012C800();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v8 = a3[5];
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = sub_1000053D8(&qword_10016B9D8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v12 = sub_10012AFE0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v9, v10, v12);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
  }
  uint64_t v13 = a3[6];
  uint64_t v14 = a3[7];
  char v15 = &a1[v13];
  uint64_t v16 = &a2[v13];
  *(void *)char v15 = *(void *)v16;
  v15[8] = v16[8];
  char v17 = &a1[v14];
  uint64_t v18 = &a2[v14];
  uint64_t v19 = sub_1000053D8(&qword_10016B9E0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v20 = sub_10012B2D0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 32))(v17, v18, v20);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
  }
  uint64_t v108 = a2;
  uint64_t v109 = a3;
  uint64_t v21 = a3[8];
  uint64_t v22 = &a1[v21];
  uint64_t v23 = &a2[v21];
  uint64_t v24 = sub_100129300();
  uint64_t v105 = *(void (**)(char *, char *))(*(void *)(v24 - 8) + 32);
  uint64_t v106 = v24;
  v105(v22, v23);
  uint64_t v25 = (int *)type metadata accessor for ForecastEntry(0);
  uint64_t v26 = v25[5];
  uint64_t v27 = &v22[v26];
  uint64_t v28 = &v23[v26];
  uint64_t v29 = sub_10012C920();
  if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v28, 1, v29))
  {
    uint64_t v30 = sub_1000053D8(&qword_10016B418);
    memcpy(v27, v28, *(void *)(*(void *)(v30 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 32))(v27, v28, v29);
    _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v27, 0, 1, v29);
  }
  uint64_t v31 = v25[6];
  int v32 = &v22[v31];
  uint64_t v33 = &v23[v31];
  long long v34 = *(_OWORD *)&v23[v31 + 16];
  *(_OWORD *)int v32 = *(_OWORD *)&v23[v31];
  *((_OWORD *)v32 + 1) = v34;
  *((_OWORD *)v32 + 2) = *(_OWORD *)&v23[v31 + 32];
  *((_DWORD *)v32 + 12) = *(_DWORD *)&v23[v31 + 48];
  uint64_t v35 = type metadata accessor for WidgetContext();
  uint64_t v36 = *(int *)(v35 + 40);
  uint64_t v37 = &v32[v36];
  uint64_t v38 = &v33[v36];
  uint64_t v39 = sub_100129220();
  uint64_t v107 = v39;
  if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v38, 1, v39))
  {
    uint64_t v40 = sub_1000053D8(&qword_10016B420);
    memcpy(v37, v38, *(void *)(*(void *)(v40 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 32))(v37, v38, v39);
    _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v37, 0, 1, v39);
  }
  uint64_t v41 = *(int *)(v35 + 44);
  uint64_t v42 = &v32[v41];
  int v43 = &v33[v41];
  *(void *)uint64_t v42 = *(void *)v43;
  v42[8] = v43[8];
  uint64_t v44 = v25[7];
  uint64_t v45 = &v22[v44];
  uint64_t v46 = &v23[v44];
  uint64_t v47 = type metadata accessor for ForecastEntry.Model(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    type metadata accessor for WeatherDataViewModel();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v61 = sub_10012BE90();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v61 - 8) + 32))(v45, v46, v61);
    }
    else
    {
      if (EnumCaseMultiPayload != 1)
      {
        uint64_t v62 = sub_100129330();
        uint64_t v100 = *(void (**)(char *, char *))(*(void *)(v62 - 8) + 32);
        uint64_t v102 = v62;
        v100(v45, v46);
        uint64_t v63 = (int *)type metadata accessor for AggregateWeatherViewModel(0);
        uint64_t v64 = v63[5];
        uint64_t v65 = &v45[v64];
        uint64_t v66 = &v46[v64];
        uint64_t v67 = sub_10012A6B0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v67 - 8) + 32))(v65, v66, v67);
        uint64_t v68 = v63[6];
        uint64_t v69 = &v45[v68];
        uint64_t v70 = &v46[v68];
        uint64_t v71 = sub_10012C250();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v71 - 8) + 32))(v69, v70, v71);
        *(void *)&v45[v63[7]] = *(void *)&v46[v63[7]];
        *(void *)&v45[v63[8]] = *(void *)&v46[v63[8]];
        uint64_t v72 = v63[9];
        uint64_t v73 = &v45[v72];
        uint64_t v74 = &v46[v72];
        uint64_t v75 = (int *)type metadata accessor for AirQualityViewModel();
        if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v74, 1, (uint64_t)v75))
        {
          uint64_t v76 = sub_1000053D8(&qword_10016B428);
          memcpy(v73, v74, *(void *)(*(void *)(v76 - 8) + 64));
        }
        else
        {
          ((void (*)(char *, char *, uint64_t))v100)(v73, v74, v102);
          ((void (*)(char *, char *, uint64_t))v105)(&v73[v75[5]], &v74[v75[5]], v106);
          *(void *)&v73[v75[6]] = *(void *)&v74[v75[6]];
          uint64_t v77 = v75[7];
          uint64_t v101 = &v74[v77];
          uint64_t v103 = &v73[v77];
          uint64_t v78 = sub_100129B70();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v78 - 8) + 32))(v103, v101, v78);
          uint64_t v79 = v75[8];
          uint64_t v104 = &v73[v79];
          uint64_t v80 = &v74[v79];
          uint64_t v81 = sub_100129C50();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v81 - 8) + 32))(v104, v80, v81);
          _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v73, 0, 1, (uint64_t)v75);
        }
        uint64_t v82 = v63[10];
        uint64_t v83 = &v45[v82];
        uint64_t v84 = &v46[v82];
        uint64_t v85 = sub_10012C6B0();
        if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v84, 1, v85))
        {
          uint64_t v86 = sub_1000053D8(&qword_10016B430);
          memcpy(v83, v84, *(void *)(*(void *)(v86 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v85 - 8) + 32))(v83, v84, v85);
          _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v83, 0, 1, v85);
        }
        *(void *)&v45[v63[11]] = *(void *)&v46[v63[11]];
        uint64_t v87 = v63[12];
        uint64_t v88 = &v45[v87];
        uint64_t v89 = &v46[v87];
        *(void *)uint64_t v88 = *(void *)v89;
        *((_WORD *)v88 + 4) = *((_WORD *)v89 + 4);
        uint64_t v90 = v63[13];
        uint64_t v91 = &v45[v90];
        uint64_t v92 = &v46[v90];
        if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)&v46[v90], 1, v107))
        {
          uint64_t v93 = sub_1000053D8(&qword_10016B420);
          memcpy(v91, v92, *(void *)(*(void *)(v93 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v107 - 8) + 32))(v91, v92, v107);
          _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v91, 0, 1, v107);
        }
        uint64_t v94 = v63[14];
        uint64_t v95 = &v45[v94];
        uint64_t v96 = &v46[v94];
        uint64_t v97 = type metadata accessor for AggregateWeatherViewModel.SunEvent(0);
        if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v96, 1, v97))
        {
          uint64_t v98 = sub_1000053D8(&qword_10016B438);
          memcpy(v95, v96, *(void *)(*(void *)(v98 - 8) + 64));
        }
        else
        {
          swift_getEnumCaseMultiPayload();
          ((void (*)(char *, char *, uint64_t))v105)(v95, v96, v106);
          swift_storeEnumTagMultiPayload();
          _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v95, 0, 1, v97);
        }
        uint64_t v60 = v109;
        goto LABEL_36;
      }
      uint64_t v49 = sub_100129330();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v49 - 8) + 32))(v45, v46, v49);
      uint64_t v50 = type metadata accessor for InstantWeatherViewModel();
      uint64_t v51 = *(int *)(v50 + 20);
      uint64_t v52 = &v45[v51];
      uint64_t v53 = &v46[v51];
      uint64_t v54 = sub_10012A6B0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v54 - 8) + 32))(v52, v53, v54);
      uint64_t v55 = *(int *)(v50 + 24);
      uint64_t v56 = &v45[v55];
      uint64_t v57 = &v46[v55];
      uint64_t v58 = sub_10012C250();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v58 - 8) + 32))(v56, v57, v58);
    }
    uint64_t v60 = v109;
LABEL_36:
    uint64_t v59 = v108;
    swift_storeEnumTagMultiPayload();
    swift_storeEnumTagMultiPayload();
    goto LABEL_37;
  }
  memcpy(v45, v46, *(void *)(*(void *)(v47 - 8) + 64));
  uint64_t v59 = v108;
  uint64_t v60 = v109;
LABEL_37:
  a1[v60[9]] = v59[v60[9]];
  return a1;
}

char *sub_10008BEC0(char *a1, char *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_1000235F8((uint64_t)a1, &qword_10016B410);
    uint64_t v6 = sub_1000053D8(&qword_10016B410);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_10012C800();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
    uint64_t v8 = a3[5];
    uint64_t v9 = &a1[v8];
    uint64_t v10 = &a2[v8];
    sub_1000235F8((uint64_t)&a1[v8], &qword_10016B9D8);
    uint64_t v11 = sub_1000053D8(&qword_10016B9D8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = sub_10012AFE0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v9, v10, v12);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
    }
  }
  uint64_t v13 = a3[6];
  uint64_t v14 = &a1[v13];
  char v15 = &a2[v13];
  uint64_t v16 = *(void *)v15;
  LOBYTE(v15) = v15[8];
  uint64_t v17 = *(void *)v14;
  char v18 = v14[8];
  *(void *)uint64_t v14 = v16;
  v14[8] = (char)v15;
  sub_100008BF8(v17, v18);
  if (a1 != a2)
  {
    uint64_t v19 = a3[7];
    uint64_t v20 = &a1[v19];
    uint64_t v21 = &a2[v19];
    sub_1000235F8((uint64_t)&a1[v19], &qword_10016B9E0);
    uint64_t v22 = sub_1000053D8(&qword_10016B9E0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v23 = sub_10012B2D0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 32))(v20, v21, v23);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v20, v21, *(void *)(*(void *)(v22 - 8) + 64));
    }
  }
  uint64_t v121 = a3;
  uint64_t v24 = a3[8];
  uint64_t v25 = &a1[v24];
  uint64_t v26 = &a2[v24];
  uint64_t v27 = sub_100129300();
  uint64_t v118 = *(void *)(v27 - 8);
  uint64_t v119 = v27;
  (*(void (**)(char *, char *))(v118 + 40))(v25, v26);
  uint64_t v28 = (int *)type metadata accessor for ForecastEntry(0);
  uint64_t v29 = v28[5];
  uint64_t v30 = &v25[v29];
  uint64_t v31 = &v26[v29];
  uint64_t v32 = sub_10012C920();
  int v33 = _s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v30, 1, v32);
  int v34 = _s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v31, 1, v32);
  uint64_t v122 = a2;
  uint64_t v123 = a1;
  if (v33)
  {
    if (!v34)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 32))(v30, v31, v32);
      _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v30, 0, 1, v32);
      goto LABEL_18;
    }
    goto LABEL_17;
  }
  uint64_t v35 = *(void *)(v32 - 8);
  if (v34)
  {
    (*(void (**)(char *, uint64_t))(v35 + 8))(v30, v32);
LABEL_17:
    uint64_t v36 = sub_1000053D8(&qword_10016B418);
    memcpy(v30, v31, *(void *)(*(void *)(v36 - 8) + 64));
    goto LABEL_18;
  }
  (*(void (**)(char *, char *, uint64_t))(v35 + 40))(v30, v31, v32);
LABEL_18:
  uint64_t v37 = v28[6];
  uint64_t v38 = &v25[v37];
  uint64_t v39 = &v26[v37];
  uint64_t v40 = *(void *)&v26[v37 + 8];
  *(void *)uint64_t v38 = *(void *)&v26[v37];
  *((void *)v38 + 1) = v40;
  swift_bridgeObjectRelease();
  uint64_t v41 = *((void *)v39 + 3);
  *((void *)v38 + 2) = *((void *)v39 + 2);
  *((void *)v38 + 3) = v41;
  swift_bridgeObjectRelease();
  uint64_t v42 = *((void *)v39 + 5);
  *((void *)v38 + 4) = *((void *)v39 + 4);
  *((void *)v38 + 5) = v42;
  swift_bridgeObjectRelease();
  *((_WORD *)v38 + 24) = *((_WORD *)v39 + 24);
  v38[50] = v39[50];
  v38[51] = v39[51];
  uint64_t v43 = type metadata accessor for WidgetContext();
  uint64_t v44 = *(int *)(v43 + 40);
  uint64_t v45 = &v38[v44];
  uint64_t v46 = &v39[v44];
  uint64_t v47 = sub_100129220();
  int v48 = _s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v45, 1, v47);
  int v49 = _s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v46, 1, v47);
  uint64_t v120 = v47;
  if (v48)
  {
    uint64_t v50 = v123;
    if (v49)
    {
      uint64_t v51 = sub_1000053D8(&qword_10016B420);
      memcpy(v45, v46, *(void *)(*(void *)(v51 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v120 - 8) + 32))(v45, v46, v120);
      uint64_t v50 = v123;
      _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v45, 0, 1, v120);
    }
  }
  else
  {
    uint64_t v52 = *(void *)(v47 - 8);
    if (v49)
    {
      (*(void (**)(char *, uint64_t))(v52 + 8))(v45, v47);
      uint64_t v53 = sub_1000053D8(&qword_10016B420);
      memcpy(v45, v46, *(void *)(*(void *)(v53 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v52 + 40))(v45, v46, v47);
    }
    uint64_t v50 = v123;
  }
  uint64_t v54 = *(int *)(v43 + 44);
  uint64_t v55 = &v38[v54];
  uint64_t v56 = &v39[v54];
  *(void *)uint64_t v55 = *(void *)&v39[v54];
  swift_bridgeObjectRelease();
  v55[8] = v56[8];
  uint64_t v57 = v122;
  if (v50 != v122)
  {
    uint64_t v58 = v28[7];
    uint64_t v59 = &v25[v58];
    uint64_t v60 = &v26[v58];
    sub_10008F8B0((uint64_t)v59, (void (*)(void))type metadata accessor for ForecastEntry.Model);
    uint64_t v61 = type metadata accessor for ForecastEntry.Model(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      type metadata accessor for WeatherDataViewModel();
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        uint64_t v73 = sub_10012BE90();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v73 - 8) + 32))(v59, v60, v73);
      }
      else if (EnumCaseMultiPayload == 1)
      {
        uint64_t v63 = sub_100129330();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v63 - 8) + 32))(v59, v60, v63);
        uint64_t v64 = type metadata accessor for InstantWeatherViewModel();
        uint64_t v65 = *(int *)(v64 + 20);
        uint64_t v66 = &v59[v65];
        uint64_t v67 = &v60[v65];
        uint64_t v68 = sub_10012A6B0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v68 - 8) + 32))(v66, v67, v68);
        uint64_t v69 = *(int *)(v64 + 24);
        uint64_t v70 = &v59[v69];
        uint64_t v71 = &v60[v69];
        uint64_t v72 = sub_10012C250();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v72 - 8) + 32))(v70, v71, v72);
      }
      else
      {
        uint64_t v74 = sub_100129330();
        uint64_t v75 = *(void (**)(char *, char *))(*(void *)(v74 - 8) + 32);
        uint64_t v117 = v74;
        v75(v59, v60);
        uint64_t v76 = (int *)type metadata accessor for AggregateWeatherViewModel(0);
        uint64_t v77 = v76[5];
        uint64_t v78 = &v59[v77];
        uint64_t v79 = &v60[v77];
        uint64_t v80 = sub_10012A6B0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v80 - 8) + 32))(v78, v79, v80);
        uint64_t v81 = v76[6];
        uint64_t v82 = &v59[v81];
        uint64_t v83 = &v60[v81];
        uint64_t v84 = sub_10012C250();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v84 - 8) + 32))(v82, v83, v84);
        *(void *)&v59[v76[7]] = *(void *)&v60[v76[7]];
        *(void *)&v59[v76[8]] = *(void *)&v60[v76[8]];
        uint64_t v85 = v76[9];
        uint64_t v86 = &v59[v85];
        uint64_t v87 = &v60[v85];
        uint64_t v88 = (int *)type metadata accessor for AirQualityViewModel();
        if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v87, 1, (uint64_t)v88))
        {
          uint64_t v89 = sub_1000053D8(&qword_10016B428);
          memcpy(v86, v87, *(void *)(*(void *)(v89 - 8) + 64));
        }
        else
        {
          ((void (*)(char *, char *, uint64_t))v75)(v86, v87, v117);
          (*(void (**)(char *, char *, uint64_t))(v118 + 32))(&v86[v88[5]], &v87[v88[5]], v119);
          *(void *)&v86[v88[6]] = *(void *)&v87[v88[6]];
          uint64_t v90 = v88[7];
          uint64_t v91 = (uint64_t)v86;
          uint64_t v92 = &v86[v90];
          uint64_t v93 = &v87[v90];
          uint64_t v94 = sub_100129B70();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v94 - 8) + 32))(v92, v93, v94);
          uint64_t v95 = v88[8];
          uint64_t v96 = v91 + v95;
          uint64_t v97 = &v87[v95];
          uint64_t v98 = sub_100129C50();
          (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v98 - 8) + 32))(v96, v97, v98);
          _s13WeatherWidget20WeatherDataViewModelOwst_0(v91, 0, 1, (uint64_t)v88);
        }
        uint64_t v99 = v76[10];
        uint64_t v100 = &v59[v99];
        uint64_t v101 = &v60[v99];
        uint64_t v102 = sub_10012C6B0();
        uint64_t v57 = v122;
        if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v101, 1, v102))
        {
          uint64_t v103 = sub_1000053D8(&qword_10016B430);
          memcpy(v100, v101, *(void *)(*(void *)(v103 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v102 - 8) + 32))(v100, v101, v102);
          _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v100, 0, 1, v102);
        }
        *(void *)&v59[v76[11]] = *(void *)&v60[v76[11]];
        uint64_t v104 = v76[12];
        uint64_t v105 = &v59[v104];
        uint64_t v106 = &v60[v104];
        *(void *)uint64_t v105 = *(void *)v106;
        *((_WORD *)v105 + 4) = *((_WORD *)v106 + 4);
        uint64_t v107 = v76[13];
        uint64_t v108 = &v59[v107];
        uint64_t v109 = &v60[v107];
        if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)&v60[v107], 1, v120))
        {
          uint64_t v110 = sub_1000053D8(&qword_10016B420);
          memcpy(v108, v109, *(void *)(*(void *)(v110 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v120 - 8) + 32))(v108, v109, v120);
          _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v108, 0, 1, v120);
        }
        uint64_t v111 = v76[14];
        uint64_t v112 = &v59[v111];
        uint64_t v113 = &v60[v111];
        uint64_t v114 = type metadata accessor for AggregateWeatherViewModel.SunEvent(0);
        if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v113, 1, v114))
        {
          uint64_t v115 = sub_1000053D8(&qword_10016B438);
          memcpy(v112, v113, *(void *)(*(void *)(v115 - 8) + 64));
        }
        else
        {
          swift_getEnumCaseMultiPayload();
          (*(void (**)(char *, char *, uint64_t))(v118 + 32))(v112, v113, v119);
          swift_storeEnumTagMultiPayload();
          _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v112, 0, 1, v114);
        }
      }
      swift_storeEnumTagMultiPayload();
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v59, v60, *(void *)(*(void *)(v61 - 8) + 64));
    }
  }
  v50[v121[9]] = v57[v121[9]];
  return v50;
}

uint64_t sub_10008CB38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10008CB4C);
}

uint64_t sub_10008CB4C(uint64_t a1, uint64_t a2, int *a3)
{
  sub_1000053D8(&qword_10016B440);
  sub_10000B3D0();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1;
  }
  else
  {
    sub_1000053D8(&qword_10016B9D0);
    sub_10000B3D0();
    if (*(_DWORD *)(v11 + 84) == a2)
    {
      uint64_t v8 = v10;
      uint64_t v12 = a3[5];
    }
    else
    {
      if (a2 == 254)
      {
        unsigned int v13 = *(unsigned __int8 *)(a1 + a3[6] + 8);
        if (v13 > 1) {
          return (v13 ^ 0xFF) + 1;
        }
        else {
          return 0;
        }
      }
      sub_1000053D8(&qword_10016C140);
      sub_10000B3D0();
      if (*(_DWORD *)(v16 + 84) == a2)
      {
        uint64_t v8 = v15;
        uint64_t v12 = a3[7];
      }
      else
      {
        uint64_t v8 = type metadata accessor for ForecastEntry(0);
        uint64_t v12 = a3[8];
      }
    }
    uint64_t v9 = a1 + v12;
  }

  return _s13WeatherWidget20WeatherDataViewModelOwet_0(v9, a2, v8);
}

uint64_t sub_10008CC4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10008CC60);
}

void sub_10008CC60(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  sub_1000053D8(&qword_10016B440);
  sub_10000B3D0();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = a1;
  }
  else
  {
    sub_1000053D8(&qword_10016B9D0);
    sub_10000B3D0();
    if (*(_DWORD *)(v13 + 84) == a3)
    {
      uint64_t v10 = v12;
      uint64_t v14 = a4[5];
    }
    else
    {
      if (a3 == 254)
      {
        *(unsigned char *)(a1 + a4[6] + 8) = -(char)a2;
        return;
      }
      sub_1000053D8(&qword_10016C140);
      sub_10000B3D0();
      if (*(_DWORD *)(v16 + 84) == a3)
      {
        uint64_t v10 = v15;
        uint64_t v14 = a4[7];
      }
      else
      {
        uint64_t v10 = type metadata accessor for ForecastEntry(0);
        uint64_t v14 = a4[8];
      }
    }
    uint64_t v11 = a1 + v14;
  }

  _s13WeatherWidget20WeatherDataViewModelOwst_0(v11, a2, a2, v10);
}

uint64_t type metadata accessor for DataDenseContentView()
{
  uint64_t result = qword_10016E478;
  if (!qword_10016E478) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_10008CDA8()
{
  sub_10008CF4C(319, (unint64_t *)&qword_10016B4B0, (void (*)(uint64_t))&type metadata accessor for WidgetFamily);
  if (v0 <= 0x3F)
  {
    sub_10008CF4C(319, (unint64_t *)&unk_10016C8F0, (void (*)(uint64_t))&type metadata accessor for ContentSizeCategory);
    if (v1 <= 0x3F)
    {
      sub_10008CF4C(319, (unint64_t *)&unk_10016C1B0, (void (*)(uint64_t))&type metadata accessor for Font.Context);
      if (v2 <= 0x3F)
      {
        type metadata accessor for ForecastEntry(319);
        if (v3 <= 0x3F) {
          swift_initStructMetadata();
        }
      }
    }
  }
}

void sub_10008CF4C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_10012AB90();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_10008CFA0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10008CFBC()
{
  return sub_10012ADB0();
}

uint64_t sub_10008CFE0@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v5 = v4;
  int v56 = a3;
  uint64_t v57 = a1;
  unint64_t v58 = a2;
  uint64_t v65 = a4;
  uint64_t v6 = sub_10012C0E0();
  uint64_t v63 = *(void *)(v6 - 8);
  uint64_t v64 = v6;
  __chkstk_darwin(v6);
  uint64_t v62 = (uint64_t)&v54 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10012C610();
  uint64_t v60 = *(void *)(v8 - 8);
  uint64_t v61 = v8;
  uint64_t v9 = __chkstk_darwin(v8);
  uint64_t v59 = (char *)&v54 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v55 = (uint64_t)&v54 - v11;
  uint64_t v12 = sub_10012AFE0();
  __chkstk_darwin(v12 - 8);
  uint64_t v54 = (uint64_t)&v54 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_10012C800();
  __chkstk_darwin(v14 - 8);
  uint64_t v16 = (char *)&v54 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for ForecastEntry.Model(0);
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)&v54 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_1000053D8(&qword_10016B310);
  __chkstk_darwin(v20 - 8);
  uint64_t v22 = (char *)&v54 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = type metadata accessor for AggregateWeatherViewModel(0);
  __chkstk_darwin(v23);
  uint64_t v25 = (char *)&v54 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = (int *)type metadata accessor for DataDenseContentView();
  uint64_t v27 = v5 + v26[8];
  uint64_t v28 = type metadata accessor for ForecastEntry(0);
  sub_10008F85C(v27 + *(int *)(v28 + 28), (uint64_t)v19, (void (*)(void))type metadata accessor for ForecastEntry.Model);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_10008F6A8((uint64_t)v19, (uint64_t)v22, (void (*)(void))type metadata accessor for WeatherDataViewModel);
    uint64_t v29 = type metadata accessor for WeatherDataViewModel();
    uint64_t v30 = (uint64_t)v22;
    uint64_t v31 = 0;
  }
  else
  {
    uint64_t v29 = type metadata accessor for WeatherDataViewModel();
    uint64_t v30 = (uint64_t)v22;
    uint64_t v31 = 1;
  }
  _s13WeatherWidget20WeatherDataViewModelOwst_0(v30, v31, 1, v29);
  type metadata accessor for WeatherDataViewModel();
  if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v22, 1, v29) == 1)
  {
    sub_1000235F8((uint64_t)v22, &qword_10016B310);
  }
  else
  {
    if (!swift_getEnumCaseMultiPayload())
    {
      sub_10008F6A8((uint64_t)v22, (uint64_t)v25, (void (*)(void))type metadata accessor for AggregateWeatherViewModel);
      sub_10008F058(&qword_10016B410, (void (*)(void))&type metadata accessor for WidgetFamily, 0x6146746567646957, 0xEC000000796C696DLL, (uint64_t)v16);
      uint64_t v35 = v54;
      sub_10008F058(&qword_10016B9D8, (void (*)(void))&type metadata accessor for ContentSizeCategory, 0xD000000000000013, 0x800000010013A760, v54);
      uint64_t v36 = v5 + v26[6];
      uint64_t v37 = *(void *)v36;
      char v38 = *(unsigned char *)(v36 + 8);
      char v39 = *(unsigned char *)(v5 + v26[9]);
      sub_10000886C(*(void *)v36, v38);
      char v40 = sub_10008F2A4(v37, v38);
      sub_100008BF8(v37, v38);
      type metadata accessor for CurrentObservationViewAttributesFactory();
      swift_allocObject();
      sub_1000A4B44((uint64_t)v16, v35, v39, v40 & 1);
      uint64_t v41 = v27 + *(int *)(v28 + 24);
      uint64_t v42 = v55;
      sub_1000A37F8((uint64_t)v25, v41, (uint64_t)&v25[*(int *)(v23 + 20)], v57, v58, *(unsigned __int8 *)(v41 + 50), *(unsigned __int8 *)(v41 + 51), 1, v55, v56 & 1, 1u);
      uint64_t v44 = v59;
      uint64_t v43 = v60;
      uint64_t v45 = v61;
      (*(void (**)(char *, uint64_t, uint64_t))(v60 + 16))(v59, v42, v61);
      uint64_t v46 = &v25[*(int *)(v23 + 48)];
      __int16 v47 = *((_WORD *)v46 + 4);
      uint64_t v48 = *(void *)v46;
      uint64_t v49 = v62;
      sub_1000A69AC((uint64_t)v25, 1, v62);
      swift_release();
      (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v42, v45);
      sub_10008F8B0((uint64_t)v25, (void (*)(void))type metadata accessor for AggregateWeatherViewModel);
      uint64_t v50 = v65;
      (*(void (**)(uint64_t, char *, uint64_t))(v43 + 32))(v65, v44, v45);
      uint64_t v51 = type metadata accessor for DataDenseViewAttributes();
      uint64_t v52 = v50 + *(int *)(v51 + 20);
      *(void *)uint64_t v52 = v48;
      *(_WORD *)(v52 + 8) = v47;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v63 + 32))(v50 + *(int *)(v51 + 24), v49, v64);
      uint64_t v33 = v50;
      uint64_t v34 = 0;
      uint64_t v32 = v51;
      return _s13WeatherWidget20WeatherDataViewModelOwst_0(v33, v34, 1, v32);
    }
    sub_10008F8B0((uint64_t)v22, (void (*)(void))type metadata accessor for WeatherDataViewModel);
  }
  uint64_t v32 = type metadata accessor for DataDenseViewAttributes();
  uint64_t v33 = v65;
  uint64_t v34 = 1;
  return _s13WeatherWidget20WeatherDataViewModelOwst_0(v33, v34, 1, v32);
}

void *sub_10008D64C@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v22 = a1;
  uint64_t v21 = sub_10012B2D0();
  uint64_t v3 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  uint64_t v5 = &v19[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = sub_10012AFE0();
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = &v19[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = sub_10012C800();
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = &v19[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  int v20 = sub_10008D928(v1);
  sub_10008F058(&qword_10016B410, (void (*)(void))&type metadata accessor for WidgetFamily, 0x6146746567646957, 0xEC000000796C696DLL, (uint64_t)v11);
  uint64_t v12 = type metadata accessor for DataDenseContentView();
  sub_10008F058(&qword_10016B9D8, (void (*)(void))&type metadata accessor for ContentSizeCategory, 0xD000000000000013, 0x800000010013A760, (uint64_t)v8);
  uint64_t v13 = v1 + *(int *)(v12 + 24);
  uint64_t v14 = *(void *)v13;
  char v15 = *(unsigned char *)(v13 + 8);
  char v16 = *(unsigned char *)(v2 + *(int *)(v12 + 36));
  sub_10000886C(*(void *)v13, v15);
  char v17 = sub_10008F2A4(v14, v15);
  sub_100008BF8(v14, v15);
  type metadata accessor for ErrorViewAttributesFactory();
  swift_allocObject();
  sub_1000A67D4((uint64_t)v11, (uint64_t)v8, v16, v17 & 1);
  sub_10008F058(&qword_10016B9E0, (void (*)(void))&type metadata accessor for Font.Context, 0x747865746E6F43, 0xE700000000000000, (uint64_t)v5);
  sub_1000A6524(v20, (uint64_t)__src);
  swift_release();
  (*(void (**)(unsigned char *, uint64_t))(v3 + 8))(v5, v21);
  return memcpy(v22, __src, 0x50uLL);
}

uint64_t sub_10008D928(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ForecastEntry.Model(0);
  __chkstk_darwin(v2);
  uint64_t v4 = (unsigned __int8 *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = a1 + *(int *)(type metadata accessor for DataDenseContentView() + 32);
  uint64_t v6 = type metadata accessor for ForecastEntry(0);
  sub_10008F85C(v5 + *(int *)(v6 + 28), (uint64_t)v4, (void (*)(void))type metadata accessor for ForecastEntry.Model);
  if (swift_getEnumCaseMultiPayload() != 1) {
    return *v4;
  }
  sub_10008F8B0((uint64_t)v4, (void (*)(void))type metadata accessor for ForecastEntry.Model);
  return 3;
}

uint64_t sub_10008DA18@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for ErrorView();
  uint64_t v5 = v4 - 8;
  __chkstk_darwin(v4);
  sub_10000DC50();
  uint64_t v8 = v7 - v6;
  memcpy((void *)(v7 - v6), v2, 0x50uLL);
  uint64_t v9 = (uint64_t *)(v8 + *(int *)(v5 + 28));
  *uint64_t v9 = swift_getKeyPath();
  sub_1000053D8(&qword_10016B080);
  swift_storeEnumTagMultiPayload();
  sub_10008F7E0((uint64_t)v2);
  LOBYTE(v2) = sub_10012B1A0();
  sub_10008F85C(v8, a1, (void (*)(void))type metadata accessor for ErrorView);
  uint64_t v10 = a1 + *(int *)(sub_1000053D8(&qword_10016CD98) + 36);
  *(unsigned char *)uint64_t v10 = (_BYTE)v2;
  *(_OWORD *)(v10 + 8) = 0u;
  *(_OWORD *)(v10 + 24) = 0u;
  *(unsigned char *)(v10 + 40) = 1;
  return sub_10008F8B0(v8, (void (*)(void))type metadata accessor for ErrorView);
}

uint64_t sub_10008DB44@<X0>(uint64_t a1@<X8>)
{
  memcpy(v4, v1, sizeof(v4));
  return sub_10008DA18(a1);
}

uint64_t sub_10008DB88@<X0>(uint64_t a1@<X8>)
{
  sub_10012B140();
  sub_10000DB98();
  uint64_t v39 = v3;
  uint64_t v40 = v2;
  __chkstk_darwin(v2);
  sub_10000DC50();
  uint64_t v6 = v5 - v4;
  uint64_t v7 = type metadata accessor for DataDenseContentView();
  sub_10000B3FC();
  __chkstk_darwin(v8);
  sub_10000DC50();
  uint64_t v11 = v10 - v9;
  uint64_t v12 = sub_1000053D8(&qword_10016E4C0);
  __chkstk_darwin(v12 - 8);
  sub_10000DC50();
  char v15 = (uint64_t *)(v14 - v13);
  uint64_t v37 = sub_1000053D8(&qword_10016E4C8);
  sub_10000B3FC();
  __chkstk_darwin(v16);
  sub_10000DC50();
  uint64_t v19 = v18 - v17;
  uint64_t v38 = sub_1000053D8(&qword_10016E4D0);
  sub_10000DB98();
  uint64_t v36 = v20;
  __chkstk_darwin(v21);
  sub_10000DC50();
  uint64_t v24 = v23 - v22;
  *char v15 = sub_10012B7B0();
  v15[1] = v25;
  sub_1000053D8(&qword_10016E4D8);
  sub_10008DF8C(v1);
  uint64_t v26 = v1 + *(int *)(v7 + 24);
  uint64_t v27 = *(void *)v26;
  char v28 = *(unsigned char *)(v26 + 8);
  sub_10000886C(*(void *)v26, v28);
  char v29 = sub_10008F2A4(v27, v28);
  sub_100008BF8(v27, v28);
  sub_10008F85C(v1, v11, (void (*)(void))type metadata accessor for DataDenseContentView);
  if ((v29 & 1) == 0)
  {
    sub_10008F8B0(v11, (void (*)(void))type metadata accessor for DataDenseContentView);
    goto LABEL_5;
  }
  uint64_t v30 = *(int *)(v7 + 32);
  uint64_t v31 = v30 + *(int *)(type metadata accessor for ForecastEntry(0) + 24);
  LOBYTE(v31) = *(unsigned char *)(v11 + v31 + *(int *)(type metadata accessor for WidgetContext() + 44) + 8);
  sub_10008F8B0(v11, (void (*)(void))type metadata accessor for DataDenseContentView);
  if ((v31 & 1) == 0)
  {
LABEL_5:
    uint64_t v32 = sub_10012B5B0();
    goto LABEL_6;
  }
  sub_10012B5A0();
  uint64_t v32 = sub_10012B5D0();
  swift_release();
LABEL_6:
  sub_10000B114((uint64_t)v15, v19, &qword_10016E4C0);
  uint64_t v33 = v19 + *(int *)(v37 + 36);
  *(void *)uint64_t v33 = v32;
  *(_OWORD *)(v33 + 8) = xmmword_100130E40;
  *(void *)(v33 + 24) = 0x4000000000000000;
  sub_1000235F8((uint64_t)v15, &qword_10016E4C0);
  uint64_t v34 = sub_10012B130();
  __chkstk_darwin(v34);
  sub_10012B7A0();
  type metadata accessor for BackgroundView(0);
  sub_10008F45C();
  sub_10008F90C(&qword_10016C978, (void (*)(uint64_t))type metadata accessor for BackgroundView);
  sub_10012B510();
  (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v6, v40);
  sub_1000235F8(v19, &qword_10016E4C8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v36 + 32))(a1, v24, v38);
}

uint64_t sub_10008DF8C(uint64_t a1)
{
  uint64_t v2 = sub_1000053D8(&qword_10016E4F0);
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000053D8(&qword_10016E4F8);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000053D8(&qword_10016E500);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for DataDenseViewAttributes();
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = a1 + *(int *)(type metadata accessor for DataDenseContentView() + 32);
  uint64_t v15 = type metadata accessor for ForecastEntry(0);
  sub_10008CFE0(*(void *)(v14 + *(int *)(v15 + 24)), *(void *)(v14 + *(int *)(v15 + 24) + 8), 1, (uint64_t)v10);
  if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v10, 1, v11) == 1)
  {
    sub_1000235F8((uint64_t)v10, &qword_10016E500);
    sub_10008D64C(&v23);
    char v16 = v24;
    uint64_t v17 = v25;
    uint64_t v18 = v28;
    uint64_t v19 = v29;
    *(_OWORD *)uint64_t v7 = v23;
    v7[16] = v16;
    *((void *)v7 + 3) = v17;
    long long v20 = v27;
    *((_OWORD *)v7 + 2) = v26;
    *((_OWORD *)v7 + 3) = v20;
    *((void *)v7 + 8) = v18;
    *((void *)v7 + 9) = v19;
    swift_storeEnumTagMultiPayload();
    sub_10000B38C(&qword_10016E508, &qword_10016E4F0);
    sub_10008F5F4();
    return sub_10012B0E0();
  }
  else
  {
    sub_10008F6A8((uint64_t)v10, (uint64_t)v13, (void (*)(void))type metadata accessor for DataDenseViewAttributes);
    *(void *)uint64_t v4 = sub_10012B000();
    *((void *)v4 + 1) = 0;
    v4[16] = 1;
    uint64_t v22 = sub_1000053D8(&qword_10016E518);
    sub_10008E2E8((uint64_t)v13, (uint64_t)&v4[*(int *)(v22 + 44)]);
    sub_10000B114((uint64_t)v4, (uint64_t)v7, &qword_10016E4F0);
    swift_storeEnumTagMultiPayload();
    sub_10000B38C(&qword_10016E508, &qword_10016E4F0);
    sub_10008F5F4();
    sub_10012B0E0();
    sub_1000235F8((uint64_t)v4, &qword_10016E4F0);
    return sub_10008F8B0((uint64_t)v13, (void (*)(void))type metadata accessor for DataDenseViewAttributes);
  }
}

uint64_t sub_10008E2E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v50 = a1;
  uint64_t v66 = a2;
  uint64_t v3 = sub_10012C0E0();
  uint64_t v63 = *(void *)(v3 - 8);
  uint64_t v64 = v3;
  __chkstk_darwin(v3);
  uint64_t v62 = (char *)&v50 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = type metadata accessor for DataDenseViewAttributes() - 8;
  __chkstk_darwin(v61);
  uint64_t v59 = (uint64_t)&v50 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = type metadata accessor for DataDenseTableView(0) - 8;
  uint64_t v6 = __chkstk_darwin(v60);
  uint64_t v65 = (uint64_t)&v50 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  unint64_t v58 = (char *)&v50 - v8;
  uint64_t v9 = sub_10012A6B0();
  uint64_t v56 = *(void *)(v9 - 8);
  uint64_t v57 = v9;
  __chkstk_darwin(v9);
  uint64_t v55 = (char *)&v50 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = sub_10012B120();
  uint64_t v11 = *(void *)(v52 - 8);
  __chkstk_darwin(v52);
  uint64_t v13 = (char *)&v50 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1000053D8(&qword_10016E520);
  __chkstk_darwin(v14);
  char v16 = (char *)&v50 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_1000053D8(&qword_10016E528);
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  long long v20 = (char *)&v50 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = sub_1000053D8(&qword_10016E530);
  uint64_t v21 = __chkstk_darwin(v54);
  long long v23 = (char *)&v50 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = __chkstk_darwin(v21);
  uint64_t v51 = (char *)&v50 - v25;
  __chkstk_darwin(v24);
  uint64_t v53 = (uint64_t)&v50 - v26;
  *(void *)char v16 = sub_10012AFF0();
  *((void *)v16 + 1) = 0;
  v16[16] = 1;
  uint64_t v27 = sub_1000053D8(&qword_10016E538);
  sub_10008E9EC(a1, &v16[*(int *)(v27 + 44)]);
  sub_10012B100();
  uint64_t v28 = sub_10000B38C(&qword_10016E540, &qword_10016E520);
  sub_10012B520();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v52);
  sub_1000235F8((uint64_t)v16, &qword_10016E520);
  uint64_t v67 = v14;
  uint64_t v68 = v28;
  swift_getOpaqueTypeConformance2();
  sub_10012B540();
  (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
  sub_1000053D8(&qword_10016C880);
  uint64_t v29 = swift_allocObject();
  *(_OWORD *)(v29 + 16) = xmmword_100130010;
  uint64_t v30 = v55;
  uint64_t v31 = v50;
  sub_10012C5F0();
  uint64_t v32 = sub_10012A680();
  uint64_t v34 = v33;
  (*(void (**)(char *, uint64_t))(v56 + 8))(v30, v57);
  *(void *)(v29 + 32) = v32;
  *(void *)(v29 + 40) = v34;
  sub_10000822C();
  uint64_t v35 = (uint64_t)v51;
  sub_10012AC70();
  swift_bridgeObjectRelease();
  sub_1000235F8((uint64_t)v23, &qword_10016E530);
  uint64_t v36 = v53;
  sub_10008F640(v35, v53);
  uint64_t v37 = v31;
  uint64_t v38 = v31;
  uint64_t v39 = v59;
  sub_10008F85C(v38, v59, (void (*)(void))type metadata accessor for DataDenseViewAttributes);
  uint64_t v40 = v62;
  uint64_t v42 = v63;
  uint64_t v41 = v64;
  (*(void (**)(char *, uint64_t, uint64_t))(v63 + 16))(v62, v37 + *(int *)(v61 + 32), v64);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v44 = v60;
  uint64_t v45 = (uint64_t)v58;
  *(void *)&v58[*(int *)(v60 + 32)] = KeyPath;
  sub_1000053D8(&qword_10016B080);
  swift_storeEnumTagMultiPayload();
  sub_10008F6A8(v39, v45, (void (*)(void))type metadata accessor for DataDenseViewAttributes);
  (*(void (**)(uint64_t, char *, uint64_t))(v42 + 32))(v45 + *(int *)(v44 + 28), v40, v41);
  sub_10000B114(v36, v35, &qword_10016E530);
  uint64_t v46 = v65;
  sub_10008F85C(v45, v65, (void (*)(void))type metadata accessor for DataDenseTableView);
  uint64_t v47 = v66;
  sub_10000B114(v35, v66, &qword_10016E530);
  uint64_t v48 = sub_1000053D8(&qword_10016E548);
  sub_10008F85C(v46, v47 + *(int *)(v48 + 48), (void (*)(void))type metadata accessor for DataDenseTableView);
  sub_10008F8B0(v45, (void (*)(void))type metadata accessor for DataDenseTableView);
  sub_1000235F8(v36, &qword_10016E530);
  sub_10008F8B0(v46, (void (*)(void))type metadata accessor for DataDenseTableView);
  return sub_1000235F8(v35, &qword_10016E530);
}

uint64_t sub_10008E9EC@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v51 = a2;
  uint64_t v3 = sub_10012BBF0();
  uint64_t v49 = *(void *)(v3 - 8);
  uint64_t v50 = v3;
  uint64_t v4 = __chkstk_darwin(v3);
  uint64_t v48 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v52 = (char *)&v39 - v6;
  uint64_t v7 = sub_10012C610();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10012BAF0();
  uint64_t v46 = *(void *)(v11 - 8);
  uint64_t v12 = v46;
  uint64_t v47 = v11;
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v39 - v16;
  uint64_t v18 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  v18(v10, a1, v7);
  uint64_t v45 = v17;
  sub_10012BAE0();
  sub_10012B7A0();
  sub_10012ABC0();
  char v19 = v57;
  uint64_t v43 = v58;
  uint64_t v44 = v56;
  char v20 = v59;
  uint64_t v41 = v61;
  uint64_t v42 = v60;
  v18(v10, a1, v7);
  uint64_t v21 = v52;
  sub_10012BBE0();
  uint64_t v22 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
  uint64_t v40 = v15;
  uint64_t v23 = v47;
  v22(v15, v17, v47);
  char v55 = 1;
  char v54 = v19;
  char v53 = v20;
  uint64_t v25 = v48;
  uint64_t v24 = v49;
  uint64_t v26 = *(void (**)(char *, char *, uint64_t))(v49 + 16);
  uint64_t v27 = v21;
  uint64_t v28 = v50;
  v26(v48, v27, v50);
  uint64_t v29 = v51;
  v22(v51, v15, v23);
  uint64_t v30 = sub_1000053D8(&qword_10016E550);
  uint64_t v31 = &v29[*(int *)(v30 + 48)];
  char v32 = v55;
  char v33 = v54;
  char v34 = v53;
  *(void *)uint64_t v31 = 0;
  v31[8] = v32;
  *((void *)v31 + 2) = v44;
  v31[24] = v33;
  *((void *)v31 + 4) = v43;
  v31[40] = v34;
  uint64_t v35 = v41;
  *((void *)v31 + 6) = v42;
  *((void *)v31 + 7) = v35;
  v26(&v29[*(int *)(v30 + 64)], v25, v28);
  uint64_t v36 = *(void (**)(char *, uint64_t))(v24 + 8);
  v36(v52, v28);
  uint64_t v37 = *(void (**)(char *, uint64_t))(v46 + 8);
  v37(v45, v23);
  v36(v25, v28);
  return ((uint64_t (*)(char *, uint64_t))v37)(v40, v23);
}

uint64_t sub_10008EDC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for ForecastEntry.Model(0);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = (int *)type metadata accessor for BackgroundView(0);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = a1 + *(int *)(type metadata accessor for DataDenseContentView() + 32);
  uint64_t v11 = type metadata accessor for ForecastEntry(0);
  uint64_t v12 = *(int *)(v11 + 24);
  uint64_t v13 = (uint64_t *)(v10 + v12 + *(int *)(type metadata accessor for WidgetContext() + 44));
  uint64_t v14 = *v13;
  char v15 = *((unsigned char *)v13 + 8);
  uint64_t v16 = (uint64_t)&v9[v7[5]];
  sub_10008F85C(v10 + *(int *)(v11 + 28), (uint64_t)v6, (void (*)(void))type metadata accessor for ForecastEntry.Model);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_10008F6A8((uint64_t)v6, v16, (void (*)(void))type metadata accessor for WeatherDataViewModel);
    uint64_t v17 = 0;
  }
  else
  {
    uint64_t v17 = 1;
  }
  uint64_t v18 = type metadata accessor for WeatherDataViewModel();
  _s13WeatherWidget20WeatherDataViewModelOwst_0(v16, v17, 1, v18);
  *(void *)uint64_t v9 = v14;
  v9[8] = v15;
  char v19 = (uint64_t *)&v9[v7[6]];
  *char v19 = swift_getKeyPath();
  sub_1000053D8(&qword_10016B080);
  swift_storeEnumTagMultiPayload();
  char v20 = &v9[v7[7]];
  *(void *)char v20 = swift_getKeyPath();
  v20[8] = 0;
  sub_10008F6A8((uint64_t)v9, a2, (void (*)(void))type metadata accessor for BackgroundView);
  return swift_bridgeObjectRetain();
}

uint64_t sub_10008EFE8@<X0>(uint64_t a1@<X8>)
{
  return sub_10008F058(&qword_10016B078, (void (*)(void))&type metadata accessor for LayoutDirection, 0x694474756F79614CLL, 0xEF6E6F6974636572, a1);
}

uint64_t sub_10008F028@<X0>(uint64_t a1@<X8>)
{
  return sub_10008F954(&qword_10016B088, (void (*)(void))&type metadata accessor for WidgetRenderingMode, 0x800000010013A780, a1);
}

uint64_t sub_10008F058@<X0>(uint64_t *a1@<X0>, void (*a2)(void)@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10 = v5;
  uint64_t v12 = sub_10012AEF0();
  sub_10000DB98();
  uint64_t v14 = v13;
  __chkstk_darwin();
  sub_10008F960();
  sub_1000053D8(a1);
  sub_10000B3FC();
  __chkstk_darwin();
  sub_10000DC50();
  uint64_t v17 = v16 - v15;
  sub_10000B114(v10, v16 - v15, a1);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    a2(0);
    sub_10000B3FC();
    return (*(uint64_t (**)(uint64_t, uint64_t))(v18 + 32))(a5, v17);
  }
  else
  {
    os_log_type_t v20 = sub_10012CD50();
    uint64_t v21 = sub_10012B160();
    if (os_log_type_enabled(v21, v20))
    {
      uint64_t v22 = (uint8_t *)swift_slowAlloc();
      uint64_t v25 = swift_slowAlloc();
      *(_DWORD *)uint64_t v22 = 136315138;
      uint64_t v23 = sub_100123564(a3, a4, &v25);
      sub_10008F978(v23);
      sub_10012CF70();
      _os_log_impl((void *)&_mh_execute_header, v21, v20, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v22, 0xCu);
      swift_arrayDestroy();
      sub_10000DBB4();
      sub_10000DBB4();
    }

    sub_10012AEE0();
    swift_getAtKeyPath();
    swift_release();
    return (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 8))(v6, v12);
  }
}

uint64_t sub_10008F2A4(uint64_t a1, char a2)
{
  uint64_t v5 = sub_10012AEF0();
  sub_10000DB98();
  uint64_t v7 = v6;
  __chkstk_darwin(v8);
  sub_10008F960();
  if (a2) {
    return a1 & 1;
  }
  swift_retain();
  os_log_type_t v9 = sub_10012CD50();
  uint64_t v10 = sub_10012B160();
  os_log_type_t v11 = v9;
  if (os_log_type_enabled(v10, v9))
  {
    uint64_t v12 = (uint8_t *)swift_slowAlloc();
    uint64_t v15 = swift_slowAlloc();
    *(_DWORD *)uint64_t v12 = 136315138;
    uint64_t v13 = sub_100123564(1819242306, 0xE400000000000000, &v15);
    sub_10008F978(v13);
    sub_10012CF70();
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v12, 0xCu);
    swift_arrayDestroy();
    sub_10000DBB4();
    sub_10000DBB4();
  }

  sub_10012AEE0();
  swift_getAtKeyPath();
  sub_100008BF8(a1, 0);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v2, v5);
  return v15;
}

uint64_t sub_10008F454@<X0>(uint64_t a1@<X8>)
{
  return sub_10008EDC0(*(void *)(v1 + 16), a1);
}

unint64_t sub_10008F45C()
{
  unint64_t result = qword_10016E4E0;
  if (!qword_10016E4E0)
  {
    sub_100005470(&qword_10016E4C8);
    sub_10000B38C(&qword_10016E4E8, &qword_10016E4C0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016E4E0);
  }
  return result;
}

uint64_t sub_10008F4FC()
{
  return sub_10012ADB0();
}

uint64_t sub_10008F524@<X0>(uint64_t a1@<X8>)
{
  return sub_10008F954(&qword_10016B080, (void (*)(void))&type metadata accessor for ColorSchemeContrast, 0x800000010013A7A0, a1);
}

uint64_t sub_10008F554@<X0>(uint64_t a1@<X8>)
{
  return sub_10008F058(&qword_10016B410, (void (*)(void))&type metadata accessor for WidgetFamily, 0x6146746567646957, 0xEC000000796C696DLL, a1);
}

uint64_t sub_10008F590@<X0>(uint64_t a1@<X8>)
{
  return sub_10008F058(&qword_10016B9E0, (void (*)(void))&type metadata accessor for Font.Context, 0x747865746E6F43, 0xE700000000000000, a1);
}

uint64_t sub_10008F5C4@<X0>(uint64_t a1@<X8>)
{
  return sub_10008F954(&qword_10016B9D8, (void (*)(void))&type metadata accessor for ContentSizeCategory, 0x800000010013A760, a1);
}

unint64_t sub_10008F5F4()
{
  unint64_t result = qword_10016E510;
  if (!qword_10016E510)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016E510);
  }
  return result;
}

uint64_t sub_10008F640(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000053D8(&qword_10016E530);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10008F6A8(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_10000B3FC();
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(a2, a1);
  return a2;
}

ValueMetadata *type metadata accessor for DataDenseContentView.GenericErrorView()
{
  return &type metadata for DataDenseContentView.GenericErrorView;
}

uint64_t sub_10008F718()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10008F7C4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10008F7E0(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  uint64_t v4 = *(void *)(a1 + 48);
  uint64_t v5 = *(void *)(a1 + 56);
  sub_10000B0B0(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
  swift_bridgeObjectRetain();
  sub_10002BDA4(v2, v3, v4, v5);
  swift_retain();
  return a1;
}

uint64_t sub_10008F85C(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_10000B3FC();
  uint64_t v4 = sub_10000B430();
  v5(v4);
  return a2;
}

uint64_t sub_10008F8B0(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_10000B3FC();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_10008F90C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10008F954@<X0>(uint64_t *a1@<X0>, void (*a2)(void)@<X1>, unint64_t a3@<X3>, uint64_t a4@<X8>)
{
  return sub_10008F058(a1, a2, 0xD000000000000013, a3, a4);
}

uint64_t sub_10008F978(uint64_t a1)
{
  *(void *)(v1 - 96) = a1;
  return v1 - 96;
}

uint64_t sub_10008F98C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10012BFA0();
  uint64_t v5 = **(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);

  return v5(a1, a2, v4);
}

uint64_t sub_10008F9F8(uint64_t a1)
{
  uint64_t v2 = sub_10012BFA0();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(a1, v2);
}

uint64_t sub_10008FA5C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10012BFA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t sub_10008FAC0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10012BFA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t sub_10008FB24(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10012BFA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t sub_10008FB88(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10012BFA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t sub_10008FBEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10008FC00);
}

uint64_t sub_10008FC00(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CurrentObservationViewModelFactory();

  return _s13WeatherWidget20WeatherDataViewModelOwet_0(a1, a2, v4);
}

uint64_t sub_10008FC48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10008FC5C);
}

uint64_t sub_10008FC5C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CurrentObservationViewModelFactory();

  return _s13WeatherWidget20WeatherDataViewModelOwst_0(a1, a2, a2, v4);
}

uint64_t type metadata accessor for InstantWeatherViewModelFactory()
{
  uint64_t result = qword_10016E5B0;
  if (!qword_10016E5B0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10008FCF0()
{
  uint64_t result = sub_10012BFA0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_10008FD7C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v45 = a1;
  uint64_t v47 = a3;
  uint64_t v50 = sub_10012C250();
  sub_10000DB98();
  uint64_t v5 = v4;
  __chkstk_darwin(v6);
  uint64_t v49 = (char *)v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100129480();
  sub_10000DB98();
  uint64_t v10 = v9;
  uint64_t v12 = __chkstk_darwin(v11);
  uint64_t v14 = (void (*)(uint64_t))((char *)v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v15 = __chkstk_darwin(v12);
  uint64_t v17 = (char *)v41 - v16;
  __chkstk_darwin(v15);
  char v19 = (char *)v41 - v18;
  uint64_t v46 = a2;
  sub_10012A6A0();
  if (qword_10016AE28 != -1) {
    swift_once();
  }
  uint64_t v20 = sub_10012AB60();
  uint64_t v21 = sub_10000D7A4(v20, (uint64_t)qword_100181C40);
  uint64_t v22 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
  v22(v17, v19, v8);
  uint64_t v44 = v21;
  uint64_t v23 = sub_10012AB40();
  os_log_type_t v24 = sub_10012CD60();
  BOOL v25 = os_log_type_enabled(v23, v24);
  uint64_t v48 = v19;
  if (v25)
  {
    uint64_t v26 = swift_slowAlloc();
    uint64_t v43 = v5;
    uint64_t v27 = (uint8_t *)v26;
    uint64_t v42 = swift_slowAlloc();
    uint64_t v52 = v42;
    *(_DWORD *)uint64_t v27 = 136446210;
    v41[1] = v27 + 4;
    v22((char *)v14, v17, v8);
    uint64_t v28 = sub_10012CAB0();
    uint64_t v14 = (void (*)(uint64_t))v29;
    uint64_t v51 = sub_100123564(v28, v29, &v52);
    sub_10012CF70();
    swift_bridgeObjectRelease();
    uint64_t v30 = sub_1000901A0();
    v14(v30);
    _os_log_impl((void *)&_mh_execute_header, v23, v24, "Building instant weather data model. - timeZone: %{public}s", v27, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v5 = v43;
    swift_slowDealloc();
  }
  else
  {
    uint64_t v31 = sub_1000901A0();
    v14(v31);
  }

  char v32 = v49;
  sub_1000CDC58();
  uint64_t v33 = v47;
  sub_100129320();
  uint64_t v34 = type metadata accessor for InstantWeatherViewModel();
  uint64_t v35 = v33 + *(int *)(v34 + 20);
  uint64_t v36 = sub_10012A6B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 16))(v35, v46, v36);
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 16))(v33 + *(int *)(v34 + 24), v32, v50);
  uint64_t v37 = sub_10012AB40();
  os_log_type_t v38 = sub_10012CD60();
  if (os_log_type_enabled(v37, v38))
  {
    uint64_t v39 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v39 = 0;
    _os_log_impl((void *)&_mh_execute_header, v37, v38, "Built instant weather data model.", v39, 2u);
    swift_slowDealloc();
  }

  (*(void (**)(char *, uint64_t))(v5 + 8))(v32, v50);
  return ((uint64_t (*)(char *, uint64_t))v14)(v48, v8);
}

uint64_t sub_1000901A0()
{
  return v0;
}

BOOL static ActiveEvent.__derived_struct_equals(_:_:)(__int16 a1, __int16 a2)
{
  return a1 == a2;
}

uint64_t sub_1000901C8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x457972616D697270 && a2 == 0xEC000000746E6576;
  if (v2 || (sub_10012D1F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7261646E6F636573 && a2 == 0xEE00746E65764579)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v7 = sub_10012D1F0();
    swift_bridgeObjectRelease();
    if (v7) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1000902F4(char a1)
{
  if (a1) {
    return 0x7261646E6F636573;
  }
  else {
    return 0x457972616D697270;
  }
}

uint64_t sub_100090340()
{
  return sub_1000902F4(*v0);
}

uint64_t sub_100090348@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1000901C8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100090370(uint64_t a1)
{
  unint64_t v2 = sub_10009052C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1000903AC(uint64_t a1)
{
  unint64_t v2 = sub_10009052C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t ActiveEvent.encode(to:)(void *a1, __int16 a2)
{
  uint64_t v5 = sub_1000053D8(&qword_10016E5E8);
  sub_10000DB98();
  uint64_t v7 = v6;
  __chkstk_darwin(v8);
  uint64_t v10 = &v12[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10000D890(a1, a1[3]);
  sub_10009052C();
  sub_10012D2C0();
  v12[15] = a2;
  v12[14] = 0;
  sub_100028F74();
  sub_100090AE0();
  if (!v2)
  {
    v12[13] = HIBYTE(a2);
    v12[12] = 1;
    sub_100090AE0();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v7 + 8))(v10, v5);
}

unint64_t sub_10009052C()
{
  unint64_t result = qword_10016E5F0;
  if (!qword_10016E5F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016E5F0);
  }
  return result;
}

uint64_t ActiveEvent.init(from:)(void *a1)
{
  sub_1000053D8(&qword_10016E5F8);
  sub_10000DB98();
  __chkstk_darwin(v3);
  sub_10000D890(a1, a1[3]);
  sub_10009052C();
  sub_10012D2B0();
  if (v1) {
    return sub_10000DB48((uint64_t)a1);
  }
  sub_100029074();
  sub_100090ABC();
  sub_100090ABC();
  uint64_t v4 = sub_1000889F8();
  v5(v4);
  sub_10000DB48((uint64_t)a1);
  return v8 | (v7 << 8);
}

BOOL sub_1000906D8(__int16 *a1, __int16 *a2)
{
  return static ActiveEvent.__derived_struct_equals(_:_:)(*a1, *a2);
}

uint64_t sub_1000906E4@<X0>(void *a1@<X0>, _WORD *a2@<X8>)
{
  uint64_t result = ActiveEvent.init(from:)(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_100090710(void *a1)
{
  return ActiveEvent.encode(to:)(a1, *v1);
}

_WORD *initializeBufferWithCopyOfBuffer for ActiveEvent(_WORD *result, _WORD *a2)
{
  *uint64_t result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for ActiveEvent(unsigned __int16 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFA)
  {
    if (a2 + 65286 <= 0xFFFEFFFF) {
      int v2 = 2;
    }
    else {
      int v2 = 4;
    }
    if (a2 + 65286 < 0xFF0000) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = *((unsigned __int8 *)a1 + 2);
      if (!*((unsigned char *)a1 + 2)) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 16)) - 65287;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *(unsigned __int8 *)a1;
  BOOL v7 = v6 >= 7;
  int v5 = v6 - 7;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for ActiveEvent(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a3 + 65286 <= 0xFFFEFFFF) {
    int v3 = 2;
  }
  else {
    int v3 = 4;
  }
  if (a3 + 65286 < 0xFF0000) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 16) + 1;
    *(_WORD *)uint64_t result = a2 - 250;
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = v6;
        break;
      case 2:
        *(_WORD *)(result + 2) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100090890);
      case 4:
        *(_DWORD *)(result + 2) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 2) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *(unsigned char *)uint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ActiveEvent()
{
  return &type metadata for ActiveEvent;
}

unsigned char *storeEnumTagSinglePayload for ActiveEvent.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100090994);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ActiveEvent.CodingKeys()
{
  return &type metadata for ActiveEvent.CodingKeys;
}

unint64_t sub_1000909D0()
{
  unint64_t result = qword_10016E600;
  if (!qword_10016E600)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016E600);
  }
  return result;
}

unint64_t sub_100090A20()
{
  unint64_t result = qword_10016E608;
  if (!qword_10016E608)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016E608);
  }
  return result;
}

unint64_t sub_100090A70()
{
  unint64_t result = qword_10016E610;
  if (!qword_10016E610)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016E610);
  }
  return result;
}

uint64_t sub_100090ABC()
{
  return sub_10012D130();
}

uint64_t sub_100090AE0()
{
  return sub_10012D1B0();
}

uint64_t type metadata accessor for WeatherDataOperation(uint64_t a1)
{
  return sub_10001A270(a1, (uint64_t *)&unk_10016E660);
}

uint64_t sub_100090B20()
{
  uint64_t result = sub_10012A6B0();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_100129300();
    if (v2 <= 0x3F) {
      return swift_initClassMetadata2();
    }
  }
  return result;
}

void sub_100090C24()
{
  sub_100047278();
  int v26 = v1;
  uint64_t v3 = v2;
  uint64_t v29 = v4;
  uint64_t v30 = v5;
  uint64_t v7 = v6;
  sub_100129480();
  sub_10000DB98();
  uint64_t v27 = v9;
  uint64_t v28 = v8;
  __chkstk_darwin(v8);
  sub_100099AF0();
  uint64_t v25 = sub_100129300();
  sub_10000DB98();
  uint64_t v11 = v10;
  uint64_t v13 = __chkstk_darwin(v12);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)v24 - v14;
  uint64_t v16 = qword_10016E640;
  sub_100129DB0();
  swift_allocObject();
  uint64_t v17 = v0;
  *(void *)&v0[v16] = sub_100129DA0();
  *(void *)&v17[qword_10016E650] = 0x40F5180000000000;
  *(void *)&v17[qword_10016E658] = 0x40AC200000000000;
  sub_10012A6B0();
  sub_100099990();
  sub_1000999B4();
  v18();
  v24[1] = v7;
  *(void *)&v17[qword_10016E620] = v7;
  sub_100074220(v30, (uint64_t)&v17[qword_10016E628]);
  sub_100074220(v3, (uint64_t)&v17[qword_10016E630]);
  v17[qword_10016E638] = v26;
  swift_retain();
  sub_1001292B0();
  sub_10012A6A0();
  sub_100129230();
  sub_10000B424();
  v19();
  uint64_t v20 = v25;
  sub_1000999D0();
  v21();
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(&v17[qword_10016E648], v15, v20);

  uint64_t v22 = (objc_class *)type metadata accessor for WeatherDataOperation(0);
  v31.receiver = v17;
  v31.super_class = v22;
  [super init];
  swift_release();
  sub_10000DB48(v3);
  sub_10000DB48(v30);
  sub_10006D574();
  v23();
  sub_100047260();
}

void sub_100090EC8()
{
  sub_100099BEC();
  uint64_t v93 = v1;
  uint64_t v91 = v2;
  sub_10012A190();
  sub_10000DB98();
  Class v86 = v3;
  __chkstk_darwin(v4);
  sub_10000DC50();
  uint64_t v88 = sub_100129780();
  sub_10000DB98();
  uint64_t v94 = v5;
  __chkstk_darwin(v6);
  sub_100099A78();
  uint64_t v96 = v7;
  uint64_t v87 = v8;
  __chkstk_darwin(v9);
  sub_100011FAC();
  uint64_t v99 = v10;
  uint64_t v11 = sub_1000053D8(&qword_10016C7C0);
  uint64_t v12 = sub_10000DC9C(v11);
  __chkstk_darwin(v12);
  sub_10000DC50();
  uint64_t v15 = v14 - v13;
  uint64_t v98 = sub_100129CF0();
  sub_10000DB98();
  uint64_t v92 = v16;
  __chkstk_darwin(v17);
  sub_100099A78();
  uint64_t v95 = v18;
  uint64_t v84 = v19;
  __chkstk_darwin(v20);
  sub_100011FAC();
  uint64_t v97 = v21;
  uint64_t v90 = v0;
  sub_10012A5F0();
  double v23 = v22;
  sub_10012A5F0();
  id v25 = [objc_allocWithZone((Class)CLLocation) initWithLatitude:v23 longitude:v24];
  uint64_t v26 = swift_allocObject();
  *(void *)(v26 + 16) = 0;
  *(void *)(v26 + 24) = 0;
  uint64_t v89 = v26;
  if (qword_10016AE28 != -1) {
    swift_once();
  }
  uint64_t v27 = sub_10012AB60();
  sub_10000D7A4(v27, (uint64_t)qword_100181C40);
  os_log_t v28 = (os_log_t)v25;
  uint64_t v29 = sub_10012AB40();
  os_log_type_t v30 = sub_10012CD60();
  int v31 = v30;
  uint64_t v85 = (uint64_t)v28;
  if (os_log_type_enabled(v29, v30))
  {
    uint64_t v32 = sub_100047470();
    uint64_t v83 = sub_100099ABC();
    *(_DWORD *)uint64_t v32 = 141558275;
    sub_10012CF70();
    *(_WORD *)(v32 + 12) = 2113;
    os_log_t v82 = v29;
    LODWORD(v81) = v31;
    os_log_t v100 = v28;
    uint64_t v33 = v28;
    sub_10012CF70();
    *(void *)uint64_t v83 = v28;

    os_log_t v28 = v82;
    _os_log_impl((void *)&_mh_execute_header, v82, (os_log_type_t)v81, "About to fetch weather data; location=%{private,mask.hash}@",
      (uint8_t *)v32,
      0x16u);
    sub_1000053D8(&qword_10016E7F0);
    swift_arrayDestroy();
    sub_10000DBB4();
    sub_10000DBB4();
  }
  else
  {
  }
  sub_100097ACC();
  LODWORD(v83) = v34;
  sub_10012A6A0();
  uint64_t v35 = sub_100129480();
  _s13WeatherWidget20WeatherDataViewModelOwst_0(v15, 0, 1, v35);
  sub_100129D00();
  sub_10000D930(v15, &qword_10016C7C0);
  sub_10000D890((void *)(v90 + qword_10016E628), *(void *)(v90 + qword_10016E628 + 24));
  sub_100099D14();
  sub_10012A490();
  sub_10012A160();
  sub_10000B424();
  v36();
  uint64_t v37 = sub_100099C8C();
  __chkstk_darwin(v37);
  *(&v72 - 2) = v90;
  sub_1000053D8(&qword_10016E7E8);
  uint64_t v79 = sub_10012A900();
  uint64_t v38 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v39 = v94;
  Class isa = v94[2].isa;
  os_log_t v82 = v94 + 2;
  Class v86 = isa;
  uint64_t v41 = v88;
  sub_10006D61C();
  v42();
  uint64_t v43 = v92;
  uint64_t v44 = *(void *)(v92 + 16);
  uint64_t v80 = v92 + 16;
  uint64_t v81 = v44;
  sub_10006D61C();
  v45();
  uint64_t isa_low = LOBYTE(v39[10].isa);
  uint64_t v47 = (isa_low + 56) & ~isa_low;
  uint64_t v48 = v43;
  uint64_t v49 = *(unsigned __int8 *)(v43 + 80);
  uint64_t v78 = v47;
  uint64_t v50 = (v87 + v49 + v47) & ~v49;
  uint64_t v51 = v50 + v84;
  uint64_t v77 = v50;
  uint64_t v87 = isa_low | v49 | 7;
  v84 += v50 + 1;
  uint64_t v52 = v51;
  uint64_t v74 = v51;
  char v53 = (char *)swift_allocObject();
  uint64_t v54 = v91;
  *((void *)v53 + 2) = v38;
  *((void *)v53 + 3) = v54;
  uint64_t v55 = v89;
  *((void *)v53 + 4) = v93;
  *((void *)v53 + 5) = v55;
  uint64_t v56 = (void *)v85;
  *((void *)v53 + 6) = v85;
  uint64_t v76 = (void (*)(char *, uint64_t, uint64_t))v39[4].isa;
  v76(&v53[v47], v96, v41);
  uint64_t v75 = *(void (**)(char *, uint64_t, uint64_t))(v48 + 32);
  v75(&v53[v50], v95, v98);
  LODWORD(v83) = v83 & 1;
  v53[v52] = v83;
  id v73 = v56;
  swift_retain();
  swift_retain();
  char v57 = (void *)sub_10012A870();
  uint64_t v85 = sub_10012A890();
  swift_release();
  swift_release();

  uint64_t v58 = swift_allocObject();
  uint64_t v79 = v58;
  swift_unknownObjectWeakInit();
  uint64_t v59 = v96;
  sub_10006D61C();
  v60();
  sub_10006D61C();
  v61();
  uint64_t v62 = (void *)swift_allocObject();
  uint64_t v63 = v91;
  v62[2] = v58;
  v62[3] = v63;
  uint64_t v64 = v73;
  v62[4] = v93;
  v62[5] = v64;
  sub_100099CAC();
  v62[6] = v89;
  v76((char *)(v65 + v66), v59, v41);
  sub_100099BB0();
  v67();
  *((unsigned char *)v62 + v74) = v83;
  id v68 = v64;
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v69 = (void *)sub_10012A870();
  sub_10012A8B0();

  swift_release();
  swift_release();
  swift_release();

  sub_10000B424();
  v70();
  sub_10000B424();
  v71();
  swift_release();
  swift_release();
  sub_100099C20();
}

uint64_t sub_100091708(uint64_t a1)
{
  sub_10000D890((void *)(a1 + qword_10016E630), *(void *)(a1 + qword_10016E630 + 24));
  sub_10012A4C0();
  uint64_t v1 = sub_10012A880();
  swift_release();
  return v1;
}

uint64_t sub_100091788(uint64_t *a1, uint64_t a2, void (*a3)(uint64_t *), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned __int8 a9)
{
  uint64_t v67 = a4;
  uint64_t v62 = a7;
  uint64_t v63 = a8;
  uint64_t v61 = a6;
  uint64_t v66 = a3;
  uint64_t v11 = sub_1000053D8(&qword_10016E7F8);
  __chkstk_darwin(v11);
  uint64_t v13 = (uint64_t *)((char *)&v55 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v14 = sub_10012AB60();
  uint64_t v64 = *(void *)(v14 - 8);
  uint64_t v65 = v14;
  uint64_t v15 = __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v55 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __chkstk_darwin(v15);
  uint64_t v59 = (char *)&v55 - v19;
  uint64_t v20 = __chkstk_darwin(v18);
  double v22 = (char *)&v55 - v21;
  __chkstk_darwin(v20);
  double v24 = (char *)&v55 - v23;
  uint64_t v25 = *a1;
  unint64_t v26 = a1[1];
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    unsigned __int8 v28 = a9;
    uint64_t v29 = (void *)(a5 + 16);
    id v60 = Strong;
    if (!v26)
    {
      swift_beginAccess();
      *uint64_t v29 = 0;
      *(void *)(a5 + 24) = 0;
      swift_bridgeObjectRelease();
      sub_10012AB30();
      uint64_t v39 = sub_10012AB40();
      os_log_type_t v40 = sub_10012CD60();
      if (os_log_type_enabled(v39, v40))
      {
        uint64_t v41 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v41 = 0;
        _os_log_impl((void *)&_mh_execute_header, v39, v40, "countryCode unresolvable", v41, 2u);
        swift_slowDealloc();
      }

      (*(void (**)(char *, uint64_t))(v64 + 8))(v17, v65);
      goto LABEL_17;
    }
    if (v26 == 1)
    {
      swift_beginAccess();
      *uint64_t v29 = 0;
      *(void *)(a5 + 24) = 0;
      swift_bridgeObjectRelease();
      sub_10012AB30();
      os_log_type_t v30 = sub_10012AB40();
      os_log_type_t v31 = sub_10012CD60();
      if (os_log_type_enabled(v30, v31))
      {
        uint64_t v32 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v32 = 0;
        _os_log_impl((void *)&_mh_execute_header, v30, v31, "countryCode = nil", v32, 2u);
        swift_slowDealloc();
      }
    }
    else
    {
      swift_beginAccess();
      uint64_t v42 = v25;
      *(void *)(a5 + 16) = v25;
      *(void *)(a5 + 24) = v26;
      sub_100099488(v25, v26);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      double v22 = v59;
      sub_10012AB30();
      id v43 = v60;
      sub_100099488(v25, v26);
      id v44 = v43;
      uint64_t v45 = sub_10012AB40();
      os_log_type_t v46 = sub_10012CD60();
      int v47 = v46;
      if (os_log_type_enabled(v45, v46))
      {
        uint64_t v48 = swift_slowAlloc();
        uint64_t v58 = a5;
        HIDWORD(v57) = a9;
        uint64_t v49 = v48;
        uint64_t v56 = swift_slowAlloc();
        v69[0] = v56;
        *(_DWORD *)uint64_t v49 = 141558787;
        uint64_t v70 = 1752392040;
        sub_10012CF70();
        *(_WORD *)(v49 + 12) = 2081;
        HIDWORD(v55) = v47;
        swift_bridgeObjectRetain();
        uint64_t v70 = sub_100123564(v42, v26, v69);
        sub_10012CF70();
        sub_10009949C(v42, v26);
        sub_10009949C(v42, v26);
        swift_bridgeObjectRelease();
        *(_WORD *)(v49 + 22) = 2160;
        uint64_t v70 = 1752392040;
        sub_10012CF70();
        *(_WORD *)(v49 + 32) = 2081;
        sub_10012A6B0();
        sub_1000994B0(&qword_10016E808, (void (*)(uint64_t))&type metadata accessor for Location);
        uint64_t v50 = sub_10012D1D0();
        uint64_t v70 = sub_100123564(v50, v51, v69);
        sub_10012CF70();

        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v45, BYTE4(v55), "resolved countryCode=%{private,mask.hash}s for location=%{private,mask.hash}s", (uint8_t *)v49, 0x2Au);
        swift_arrayDestroy();
        swift_slowDealloc();
        unsigned __int8 v28 = BYTE4(v57);
        a5 = v58;
        swift_slowDealloc();

        (*(void (**)(char *, uint64_t))(v64 + 8))(v59, v65);
LABEL_17:
        swift_beginAccess();
        uint64_t v53 = *(void *)(a5 + 16);
        uint64_t v52 = *(void *)(a5 + 24);
        swift_bridgeObjectRetain();
        id v54 = v60;
        sub_1000922E8(v61, v53, v52, v62, v63, v28 & 1, (uint64_t)v66, v67, v55, v56, v57, v58, (uint64_t)v59, (uint64_t)v60, v61, v62, v63, v64, v65,
          (uint64_t)v66,
          v67,
          v68);

        return swift_bridgeObjectRelease();
      }
      sub_10009949C(v42, v26);
      sub_10009949C(v42, v26);
    }
    (*(void (**)(char *, uint64_t))(v64 + 8))(v22, v65);
    goto LABEL_17;
  }
  sub_10012AB30();
  uint64_t v33 = sub_10012AB40();
  os_log_type_t v34 = sub_10012CD60();
  if (os_log_type_enabled(v33, v34))
  {
    uint64_t v35 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v35 = 0;
    _os_log_impl((void *)&_mh_execute_header, v33, v34, "countryCode unresolvable; object was released", v35, 2u);
    swift_slowDealloc();
  }

  (*(void (**)(char *, uint64_t))(v64 + 8))(v24, v65);
  sub_10009943C();
  uint64_t v36 = swift_allocError();
  *uint64_t v37 = 0;
  *uint64_t v13 = v36;
  swift_storeEnumTagMultiPayload();
  v66(v13);
  return sub_10000D930((uint64_t)v13, &qword_10016E7F8);
}

uint64_t sub_100091E9C(uint64_t a1, uint64_t a2, void (*a3)(void), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  uint64_t v47 = a7;
  uint64_t v48 = a8;
  uint64_t v45 = a6;
  uint64_t v46 = a5;
  uint64_t v12 = sub_1000053D8(&qword_10016E7F8);
  __chkstk_darwin(v12);
  id v44 = (uint64_t *)((char *)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v14 = sub_10012AB60();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v49 = (char *)&v40 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v40 - v18;
  uint64_t v50 = a2 + 16;
  sub_10012AB30();
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v20 = sub_10012AB40();
  os_log_type_t v21 = sub_10012CD40();
  if (os_log_type_enabled(v20, v21))
  {
    uint64_t v22 = swift_slowAlloc();
    uint64_t v41 = v14;
    uint64_t v23 = (uint8_t *)v22;
    uint64_t v24 = swift_slowAlloc();
    uint64_t v40 = v15;
    v55[0] = v24;
    uint64_t v42 = v12;
    id v43 = a3;
    *(_DWORD *)uint64_t v23 = 136380675;
    swift_getErrorValue();
    uint64_t v25 = sub_10012D230();
    uint64_t v54 = sub_100123564(v25, v26, v55);
    a3 = v43;
    sub_10012CF70();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v20, v21, "Error resolving the country code, using a nil country code; error=%{private}s",
      v23,
      0xCu);
    swift_arrayDestroy();
    uint64_t v15 = v40;
    swift_slowDealloc();
    uint64_t v14 = v41;
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }

  uint64_t v27 = *(void (**)(char *, uint64_t))(v15 + 8);
  v27(v19, v14);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v29 = (void *)Strong;
    uint64_t v30 = v45;
    swift_beginAccess();
    uint64_t v31 = *(void *)(v30 + 16);
    uint64_t v32 = *(void *)(v30 + 24);
    swift_bridgeObjectRetain();
    sub_1000922E8(v46, v31, v32, v47, v48, a9 & 1, (uint64_t)a3, a4, v40, v41, v42, (uint64_t)v43, (uint64_t)v44, v45, v46, v47, v48, (uint64_t)v49, v50,
      v51,
      v52,
      v53);

    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_10012AB30();
    os_log_type_t v34 = sub_10012AB40();
    os_log_type_t v35 = sub_10012CD60();
    if (os_log_type_enabled(v34, v35))
    {
      uint64_t v36 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v36 = 0;
      _os_log_impl((void *)&_mh_execute_header, v34, v35, "cannot fetch weather; object was released", v36, 2u);
      swift_slowDealloc();
    }

    v27(v49, v14);
    sub_10009943C();
    uint64_t v37 = swift_allocError();
    *uint64_t v38 = 0;
    uint64_t v39 = v44;
    *id v44 = v37;
    swift_storeEnumTagMultiPayload();
    a3(v39);
    return sub_10000D930((uint64_t)v39, &qword_10016E7F8);
  }
}

void sub_1000922E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  sub_100099BEC();
  a21 = v25;
  a22 = v26;
  uint64_t v27 = v22;
  uint64_t v162 = v28;
  uint64_t v163 = v29;
  LODWORD(v173) = v30;
  uint64_t v161 = v31;
  uint64_t v171 = v33;
  uint64_t v172 = v32;
  uint64_t v168 = v34;
  uint64_t v164 = v35;
  uint64_t v136 = sub_100129CF0();
  sub_10000DB98();
  uint64_t v134 = v36;
  __chkstk_darwin(v37);
  uint64_t v133 = v38;
  sub_1000999FC((uint64_t)v132 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v158 = sub_1001296C0();
  sub_10000DB98();
  uint64_t v157 = v39;
  __chkstk_darwin(v40);
  sub_10000DBCC();
  sub_1000999FC(v41);
  uint64_t v137 = sub_1001290A0();
  sub_10000DB98();
  uint64_t v135 = v42;
  __chkstk_darwin(v43);
  sub_10000DBCC();
  sub_1000999FC(v44);
  uint64_t v155 = sub_100129300();
  sub_10000DB98();
  uint64_t v153 = v45;
  __chkstk_darwin(v46);
  sub_100011EF0();
  __chkstk_darwin(v47);
  sub_100011FAC();
  sub_100012098(v48);
  uint64_t v145 = sub_1000053D8(&qword_10016E820);
  sub_10000DB98();
  uint64_t v144 = v49;
  __chkstk_darwin(v50);
  sub_10000DBCC();
  sub_100012098(v51);
  uint64_t v143 = sub_1000053D8(&qword_10016E828);
  sub_10000DB98();
  uint64_t v142 = v52;
  __chkstk_darwin(v53);
  sub_100012098((uint64_t)v132 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v141 = sub_1000053D8(&qword_10016E830);
  sub_10000DB98();
  uint64_t v140 = v55;
  __chkstk_darwin(v56);
  sub_10000DBCC();
  uint64_t v160 = v57;
  uint64_t v151 = sub_1000053D8(&qword_10016E838);
  sub_10000DB98();
  uint64_t v150 = v58;
  __chkstk_darwin(v59);
  sub_10000DBCC();
  uint64_t v167 = v60;
  uint64_t v149 = sub_1000053D8(&qword_10016E858);
  sub_10000DB98();
  uint64_t v148 = v61;
  __chkstk_darwin(v62);
  sub_10000DBCC();
  uint64_t v166 = v63;
  uint64_t v139 = sub_1000053D8(&qword_10016E840);
  sub_10000DB98();
  uint64_t v138 = v64;
  __chkstk_darwin(v65);
  sub_10000DBCC();
  uint64_t v159 = v66;
  uint64_t v147 = sub_1000053D8(&qword_10016E848);
  sub_10000DB98();
  uint64_t v146 = v67;
  __chkstk_darwin(v68);
  sub_10000DBCC();
  uint64_t v165 = v69;
  uint64_t v70 = sub_1000053D8(&qword_10016E860);
  uint64_t v71 = sub_10000DC9C(v70);
  __chkstk_darwin(v71);
  sub_10000DBCC();
  uint64_t v170 = v72;
  uint64_t v169 = sub_10012A190();
  sub_10000DB98();
  uint64_t v74 = v73;
  __chkstk_darwin(v75);
  sub_100099AF0();
  sub_100129710();
  sub_10000B3FC();
  __chkstk_darwin(v76);
  sub_10000DC50();
  uint64_t v77 = sub_1000053D8(&qword_10016E868);
  uint64_t v78 = sub_10000DC9C(v77);
  __chkstk_darwin(v78);
  sub_1000212FC();
  uint64_t v79 = sub_1000053D8(&qword_10016C7C0);
  uint64_t v80 = sub_10000DC9C(v79);
  __chkstk_darwin(v80);
  sub_10000DC50();
  uint64_t v83 = v82 - v81;
  sub_100129760();
  sub_10000DB98();
  uint64_t v174 = v85;
  uint64_t v175 = v84;
  __chkstk_darwin(v84);
  sub_100099A78();
  sub_100012098(v86);
  v132[1] = v87;
  __chkstk_darwin(v88);
  uint64_t v90 = (char *)v132 - v89;
  swift_bridgeObjectRetain();
  sub_10012A6A0();
  uint64_t v91 = sub_100129480();
  _s13WeatherWidget20WeatherDataViewModelOwst_0(v83, 0, 1, v91);
  uint64_t v92 = sub_100129780();
  sub_10000B3FC();
  sub_10006D61C();
  v93();
  _s13WeatherWidget20WeatherDataViewModelOwst_0(v23, 0, 1, v92);
  uint64_t v176 = &_swiftEmptyArrayStorage;
  sub_1000994B0((unint64_t *)&qword_10016E878, (void (*)(uint64_t))&type metadata accessor for WeatherServiceCaching.Options);
  sub_1000053D8(&qword_10016E880);
  sub_1000994F8();
  sub_10012CFC0();
  uint64_t v94 = v27;
  sub_10000D890(&v27[qword_10016E628], *(void *)&v27[qword_10016E628 + 24]);
  sub_10012A490();
  sub_10012A120();
  (*(void (**)(uint64_t, uint64_t))(v74 + 8))(v24, v169);
  uint64_t v95 = sub_100129740();
  _s13WeatherWidget20WeatherDataViewModelOwst_0(v170, 1, 1, v95);
  sub_100129750();
  unsigned int v96 = v27[qword_10016E638];
  switch(v96 >> 6)
  {
    case 1u:
      uint64_t v173 = *(char **)&v27[qword_10016E620];
      sub_100129CD0();
      sub_100129CE0();
      sub_100129CB0();
      sub_100129C90();
      sub_100129C80();
      sub_100129CC0();
      sub_100129CA0();
      uint64_t v117 = (void *)swift_allocObject();
      sub_100099B80(v117);
      uint64_t v118 = v27;
      swift_retain();
      sub_1000053D8(&qword_10016B3D8);
      sub_1000053D8(&qword_10016E890);
      sub_1000053D8(&qword_10016B3C0);
      sub_1000053D8(&qword_10016B558);
      sub_1000053D8(&qword_10016B3C8);
      sub_1000053D8(&qword_10016E898);
      uint64_t v119 = v165;
      sub_100129880();
      swift_release();
      sub_100099A5C();
      sub_1000999A4();
      v120();
      sub_1000999A4();
      v121();
      sub_100099A5C();
      sub_1000999A4();
      v122();
      sub_1000999A4();
      v123();
      sub_1000999A4();
      v124();
      sub_100099A5C();
      sub_1000999A4();
      v125();
      uint64_t v114 = *(void (**)(uint64_t, void))(v146 + 8);
      uint64_t v115 = v119;
      goto LABEL_6;
    case 2u:
      goto LABEL_8;
    case 3u:
      if (v96 != 192) {
        goto LABEL_8;
      }
      uint64_t v126 = v165;
      sub_100129CD0();
      sub_100129CB0();
      sub_100129C90();
      char v127 = (void *)swift_allocObject();
      sub_100099B80(v127);
      uint64_t v128 = v27;
      swift_retain();
      sub_1000053D8(&qword_10016E890);
      sub_1000053D8(&qword_10016B3C0);
      sub_100129870();
      swift_release();
      sub_100099A5C();
      sub_1000999A4();
      v129();
      sub_1000999A4();
      v130();
      uint64_t v114 = *(void (**)(uint64_t, void))(v146 + 8);
      uint64_t v115 = v126;
LABEL_6:
      uint64_t v116 = &a9;
LABEL_7:
      v114(v115, *(v116 - 32));
LABEL_8:
      sub_10000B424();
      v131();
      sub_100099C20();
      return;
    default:
      sub_1001292B0();
      sub_100099B34();
      sub_1000999B4();
      v97();
      sub_100129090();
      uint64_t v172 = *(void *)&v27[qword_10016E620];
      *uint64_t v156 = 10;
      (*(void (**)(void))(v157 + 104))();
      uint64_t v98 = v134;
      uint64_t v99 = v136;
      sub_1000999B4();
      v100();
      uint64_t v101 = v174;
      uint64_t v102 = v132[2];
      sub_1000999B4();
      v103();
      unint64_t v104 = (*(unsigned __int8 *)(v98 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v98 + 80);
      unint64_t v105 = (v133 + *(unsigned __int8 *)(v101 + 80) + v104) & ~(unint64_t)*(unsigned __int8 *)(v101 + 80);
      uint64_t v106 = (char *)swift_allocObject();
      uint64_t v107 = v162;
      uint64_t v108 = v163;
      *((void *)v106 + 2) = v94;
      *((void *)v106 + 3) = v107;
      uint64_t v173 = v90;
      uint64_t v109 = v164;
      *((void *)v106 + 4) = v108;
      *((void *)v106 + 5) = v109;
      (*(void (**)(char *, uint64_t, uint64_t))(v98 + 32))(&v106[v104], v154, v99);
      (*(void (**)(char *, uint64_t, uint64_t))(v101 + 32))(&v106[v105], v102, v175);
      id v110 = v94;
      swift_retain();
      id v111 = v109;
      sub_100129860();
      swift_release();
      sub_10000B424();
      v112();
      sub_100099A5C();
      sub_1000999A4();
      v113();
      sub_100099A5C();
      uint64_t v115 = v152;
      uint64_t v116 = &a17;
      goto LABEL_7;
  }
}

uint64_t sub_100092FDC(uint64_t a1, uint64_t a2, void (*a3)(uint64_t *), uint64_t a4)
{
  uint64_t v90 = a4;
  uint64_t v92 = a3;
  uint64_t v84 = a2;
  uint64_t v89 = sub_1000053D8(&qword_10016E7F8);
  __chkstk_darwin(v89);
  uint64_t v87 = (uint64_t *)((char *)&v65 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v83 = type metadata accessor for WeatherDataOperationResult(0);
  __chkstk_darwin(v83);
  uint64_t v86 = (char *)&v65 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1001299C0();
  uint64_t v85 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v93 = (char *)&v65 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000053D8(&qword_10016E8A0);
  uint64_t v10 = __chkstk_darwin(v9);
  uint64_t v82 = (char *)&v65 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v91 = (char *)&v65 - v13;
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v88 = (char *)&v65 - v15;
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v65 - v16;
  uint64_t v18 = sub_1000053D8(&qword_10016E8A8);
  __chkstk_darwin(v18);
  uint64_t v20 = (char *)&v65 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10006CCD8(a1, (uint64_t)v20, &qword_10016E8A8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    swift_errorRelease();
    sub_10009943C();
    uint64_t v21 = swift_allocError();
    *uint64_t v22 = 0;
    uint64_t v23 = v87;
    uint64_t *v87 = v21;
    swift_storeEnumTagMultiPayload();
    v92(v23);
    uint64_t v24 = &qword_10016E7F8;
    uint64_t v25 = (uint64_t)v23;
  }
  else
  {
    uint64_t v26 = *(int *)(v9 + 48);
    uint64_t v27 = &v17[v26];
    uint64_t v75 = &v17[v26];
    uint64_t v28 = *(int *)(v9 + 64);
    uint64_t v29 = &v17[v28];
    int v30 = &v20[v26];
    uint64_t v78 = (void (*)(void))&v20[v28];
    uint64_t v31 = sub_1001295D0();
    uint64_t v80 = *(void **)(v31 - 8);
    uint64_t v32 = (void (*)(char *, char *))v80[4];
    uint64_t v81 = v17;
    uint64_t v77 = v31;
    v32(v17, v20);
    uint64_t v76 = sub_1000053D8(&qword_10016E890);
    uint64_t v33 = *(void *)(v76 - 8);
    uint64_t v70 = v33;
    (*(void (**)(char *, char *, uint64_t))(v33 + 32))(v27, v30, v76);
    uint64_t v67 = sub_1000053D8(&qword_10016B3C0);
    uint64_t v79 = *(void **)(v67 - 8);
    uint64_t v34 = (void (*)(char *, void (*)(void), uint64_t))v79[4];
    uint64_t v65 = v29;
    v34(v29, v78, v67);
    uint64_t v72 = &v88[*(int *)(v9 + 48)];
    os_log_type_t v35 = v72;
    uint64_t v71 = &v88[*(int *)(v9 + 64)];
    uint64_t v36 = v71;
    uint64_t v73 = v7;
    uint64_t v78 = (void (*)(void))v80[2];
    v78();
    uint64_t v74 = *(void (**)(char *, char *, uint64_t))(v33 + 16);
    uint64_t v37 = v75;
    v74(v35, v75, v76);
    uint64_t v38 = (void (*)(char *, char *, uint64_t))v79[2];
    uint64_t v39 = v67;
    v38(v36, v29, v67);
    uint64_t v66 = v38;
    uint64_t v68 = &v91[*(int *)(v9 + 48)];
    uint64_t v40 = v68;
    uint64_t v69 = &v91[*(int *)(v9 + 64)];
    uint64_t v41 = v69;
    uint64_t v42 = v81;
    v78();
    uint64_t v43 = v40;
    uint64_t v44 = v76;
    v74(v43, v37, v76);
    uint64_t v45 = v41;
    uint64_t v46 = v65;
    v38(v45, v65, v39);
    uint64_t v47 = v82;
    uint64_t v48 = &v82[*(int *)(v9 + 48)];
    uint64_t v49 = &v82[*(int *)(v9 + 64)];
    uint64_t v50 = v42;
    uint64_t v51 = v77;
    ((void (*)(char *, char *, uint64_t))v78)(v82, v50, v77);
    uint64_t v52 = v44;
    v74(v48, v75, v44);
    v66(v49, v46, v39);
    sub_100129930();
    uint64_t v53 = *(void (**)(char *, uint64_t))(v70 + 8);
    v53(v48, v52);
    uint64_t v54 = (void (*)(char *, uint64_t))v80[1];
    v54(v47, v51);
    uint64_t v55 = (void (*)(char *, uint64_t))v79[1];
    v55(v69, v39);
    v54(v91, v51);
    v55(v71, v39);
    v53(v72, v52);
    uint64_t v57 = v85;
    uint64_t v56 = (uint64_t)v86;
    uint64_t v58 = v93;
    uint64_t v59 = v73;
    (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v86, v93, v73);
    type metadata accessor for WeatherDataOperationResult.Data(0);
    swift_storeEnumTagMultiPayload();
    uint64_t v60 = v84 + qword_10016E618;
    uint64_t v61 = v56 + *(int *)(v83 + 20);
    uint64_t v62 = sub_10012A6B0();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v62 - 8) + 16))(v61, v60, v62);
    uint64_t v63 = v87;
    sub_10009973C(v56, (uint64_t)v87);
    swift_storeEnumTagMultiPayload();
    v92(v63);
    sub_10000D930((uint64_t)v63, &qword_10016E7F8);
    sub_1000997A0(v56, (void (*)(void))type metadata accessor for WeatherDataOperationResult);
    (*(void (**)(char *, uint64_t))(v57 + 8))(v58, v59);
    uint64_t v24 = &qword_10016E8A0;
    uint64_t v25 = (uint64_t)v81;
  }
  return sub_10000D930(v25, v24);
}

uint64_t sub_1000937B0(uint64_t a1, char a2, char *a3, void (*a4)(void), uint64_t a5, void *a6, uint64_t a7, uint64_t a8)
{
  uint64_t v71 = a8;
  id v73 = a6;
  uint64_t v78 = a5;
  uint64_t v12 = sub_1000053D8(&qword_10016E820);
  uint64_t v72 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v70 = (char *)&v53 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1000053D8(&qword_10016E828);
  uint64_t v68 = *(void *)(v14 - 8);
  uint64_t v69 = v14;
  __chkstk_darwin(v14);
  uint64_t v67 = (char *)&v53 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1000053D8(&qword_10016E830);
  uint64_t v65 = *(void *)(v16 - 8);
  uint64_t v66 = v16;
  __chkstk_darwin(v16);
  uint64_t v64 = (char *)&v53 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1000053D8(&qword_10016E838);
  uint64_t v62 = *(void *)(v18 - 8);
  uint64_t v63 = v18;
  __chkstk_darwin(v18);
  uint64_t v77 = (char *)&v53 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_1000053D8(&qword_10016E858);
  uint64_t v60 = *(void *)(v20 - 8);
  uint64_t v61 = v20;
  __chkstk_darwin(v20);
  uint64_t v76 = (char *)&v53 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = sub_1000053D8(&qword_10016E840);
  uint64_t v58 = *(void *)(v59 - 8);
  __chkstk_darwin(v59);
  uint64_t v75 = (char *)&v53 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = sub_1000053D8(&qword_10016E848);
  uint64_t v56 = *(void *)(v57 - 8);
  __chkstk_darwin(v57);
  uint64_t v74 = (char *)&v53 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_1000053D8(&qword_10016E7F8);
  __chkstk_darwin(v24);
  uint64_t v26 = (char *)&v53 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = type metadata accessor for WeatherDataOperationResult(0);
  __chkstk_darwin(v27);
  uint64_t v29 = (void (**)(void))((char *)&v53 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (a2)
  {
    uint64_t v54 = a3;
    uint64_t v53 = a4;
    if (qword_10016AE28 != -1) {
      swift_once();
    }
    uint64_t v55 = v12;
    uint64_t v34 = sub_10012AB60();
    sub_10000D7A4(v34, (uint64_t)qword_100181C40);
    id v35 = v73;
    uint64_t v36 = sub_10012AB40();
    os_log_type_t v37 = sub_10012CD40();
    BOOL v38 = os_log_type_enabled(v36, v37);
    id v73 = v35;
    if (v38)
    {
      uint64_t v39 = swift_slowAlloc();
      uint64_t v40 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v39 = 141558275;
      uint64_t v79 = 1752392040;
      sub_10012CF70();
      *(_WORD *)(v39 + 12) = 2113;
      uint64_t v79 = (uint64_t)v35;
      id v41 = v35;
      sub_10012CF70();
      *uint64_t v40 = v35;

      _os_log_impl((void *)&_mh_execute_header, v36, v37, "Failed to interpolate, falling back to aggregate fetch from WDS; location=%{private,mask.hash}@",
        (uint8_t *)v39,
        0x16u);
      sub_1000053D8(&qword_10016E7F0);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    uint64_t v42 = v53;
    uint64_t v43 = v54;
    uint64_t v54 = *(char **)&v54[qword_10016E620];
    sub_100129CD0();
    sub_100129CE0();
    sub_100129CB0();
    sub_100129C90();
    uint64_t v44 = v64;
    sub_100129C80();
    uint64_t v45 = v67;
    sub_100129CC0();
    uint64_t v46 = v70;
    sub_100129CA0();
    uint64_t v47 = (void *)swift_allocObject();
    v47[2] = v43;
    v47[3] = v42;
    v47[4] = v78;
    sub_1001295D0();
    id v48 = v43;
    swift_retain();
    sub_1000053D8(&qword_10016B3D8);
    sub_1000053D8(&qword_10016E890);
    sub_1000053D8(&qword_10016B3C0);
    sub_1000053D8(&qword_10016B558);
    sub_1000053D8(&qword_10016B3C8);
    sub_1000053D8(&qword_10016E898);
    uint64_t v49 = v74;
    uint64_t v50 = v75;
    uint64_t v51 = v76;
    uint64_t v52 = v77;
    sub_100129880();
    swift_release();
    (*(void (**)(char *, uint64_t))(v72 + 8))(v46, v55);
    (*(void (**)(char *, uint64_t))(v68 + 8))(v45, v69);
    (*(void (**)(char *, uint64_t))(v65 + 8))(v44, v66);
    (*(void (**)(char *, uint64_t))(v62 + 8))(v52, v63);
    (*(void (**)(char *, uint64_t))(v60 + 8))(v51, v61);
    (*(void (**)(char *, uint64_t))(v58 + 8))(v50, v59);
    return (*(uint64_t (**)(char *, uint64_t))(v56 + 8))(v49, v57);
  }
  else
  {
    *uint64_t v29 = a1;
    type metadata accessor for WeatherDataOperationResult.Data(0);
    swift_storeEnumTagMultiPayload();
    int v30 = &a3[qword_10016E618];
    uint64_t v31 = (char *)v29 + *(int *)(v27 + 20);
    uint64_t v32 = sub_10012A6B0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 16))(v31, v30, v32);
    sub_10009973C((uint64_t)v29, (uint64_t)v26);
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
    a4(v26);
    sub_10000D930((uint64_t)v26, &qword_10016E7F8);
    return sub_1000997A0((uint64_t)v29, (void (*)(void))type metadata accessor for WeatherDataOperationResult);
  }
}

void sub_1000940D0()
{
  sub_100047278();
  uint64_t v179 = v1;
  uint64_t v178 = v2;
  v173[1] = v3;
  uint64_t v177 = sub_1000053D8(&qword_10016E7F8);
  sub_10000B3FC();
  __chkstk_darwin(v4);
  sub_1000212FC();
  v173[0] = type metadata accessor for WeatherDataOperationResult(0);
  sub_10000B3FC();
  __chkstk_darwin(v5);
  sub_10000DBCC();
  sub_1000999FC(v6);
  uint64_t v172 = sub_1001299C0();
  sub_10000DB98();
  uint64_t v174 = v7;
  __chkstk_darwin(v8);
  sub_10000DBCC();
  uint64_t v180 = v9;
  uint64_t v10 = (int *)sub_1000053D8(&qword_10016E810);
  sub_10000B3FC();
  __chkstk_darwin(v11);
  sub_10000DCB4();
  sub_100011EF0();
  __chkstk_darwin(v12);
  sub_100011F60();
  uint64_t v182 = v13;
  sub_1000636C8();
  __chkstk_darwin(v14);
  sub_100011F60();
  uint64_t v183 = v15;
  sub_1000636C8();
  __chkstk_darwin(v16);
  sub_100011F60();
  uint64_t v184 = v17;
  sub_1000636C8();
  __chkstk_darwin(v18);
  sub_100011F60();
  uint64_t v185 = v19;
  sub_1000636C8();
  __chkstk_darwin(v20);
  sub_100011F60();
  uint64_t v186 = v21;
  sub_1000636C8();
  uint64_t v23 = __chkstk_darwin(v22);
  uint64_t v25 = (char *)&v134 - v24;
  __chkstk_darwin(v23);
  sub_100011FAC();
  uint64_t v27 = v26;
  sub_1000053D8(&qword_10016E818);
  sub_10000B3FC();
  __chkstk_darwin(v28);
  int v30 = (char *)&v134 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = sub_100099B74();
  sub_10006CCD8(v31, v32, &qword_10016E818);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    swift_errorRelease();
    sub_10009943C();
    uint64_t v33 = swift_allocError();
    *uint64_t v34 = 0;
    uint64_t *v0 = v33;
    sub_100099BA4();
    swift_storeEnumTagMultiPayload();
    sub_100099C60();
    v35();
    uint64_t v36 = &qword_10016E7F8;
    uint64_t v37 = (uint64_t)v0;
  }
  else
  {
    uint64_t v38 = v10[12];
    uint64_t v39 = v27 + v38;
    uint64_t v190 = v27 + v38;
    uint64_t v193 = v27 + v10[16];
    uint64_t v40 = v10[20];
    uint64_t v188 = v27 + v40;
    uint64_t v41 = v10[24];
    uint64_t v42 = v27 + v41;
    uint64_t v187 = v27 + v41;
    uint64_t v43 = v10[28];
    uint64_t v196 = v27 + v43;
    uint64_t v44 = (uint64_t)&v30[v38];
    uint64_t v199 = v10[32];
    uint64_t v161 = v0;
    uint64_t v192 = (void (*)(void))&v30[v40];
    uint64_t v194 = &v30[v41];
    uint64_t v195 = (void (*)(void))&v30[v43];
    uint64_t v198 = sub_1001295D0();
    sub_100099990();
    uint64_t v46 = v45;
    uint64_t v153 = v45;
    sub_100011F6C();
    v47();
    sub_10006CD30(v44, v39, &qword_10016B3D8);
    uint64_t v197 = sub_1000053D8(&qword_10016E890);
    sub_100099990();
    uint64_t v168 = v48;
    uint64_t v49 = (uint64_t)v25;
    sub_100011F6C();
    v50();
    uint64_t v176 = sub_1000053D8(&qword_10016B3C0);
    sub_100099990();
    uint64_t v52 = v51;
    uint64_t v150 = v51;
    uint64_t v53 = v188;
    sub_100011F6C();
    v54();
    sub_10006CD30((uint64_t)v194, v42, &qword_10016B558);
    sub_10006CD30((uint64_t)v195, v196, &qword_10016B3C8);
    uint64_t v189 = *(void *)&v30[v199];
    uint64_t v200 = v27;
    *(void *)(v27 + v199) = v189;
    uint64_t v55 = v10[12];
    uint64_t v166 = v49;
    uint64_t v56 = v49 + v55;
    uint64_t v160 = v49 + v55;
    uint64_t v159 = v49 + v10[16];
    uint64_t v158 = v49 + v10[20];
    uint64_t v57 = v158;
    uint64_t v157 = v49 + v10[24];
    uint64_t v58 = v157;
    sub_100099C54(v49 + v10[28]);
    uint64_t v169 = v59;
    uint64_t v195 = *(void (**)(void))(v46 + 16);
    uint64_t v199 = v46 + 16;
    v195();
    uint64_t v60 = v190;
    sub_10006CCD8(v190, v56, &qword_10016B3D8);
    sub_100099B34();
    uint64_t v192 = v61;
    uint64_t v194 = (char *)v62;
    sub_1000999B4();
    v63();
    uint64_t v64 = *(void (**)(void))(v52 + 16);
    uint64_t v181 = v52 + 16;
    uint64_t v191 = v64;
    ((void (*)(uint64_t, uint64_t, uint64_t))v64)(v57, v53, v176);
    uint64_t v65 = v187;
    sub_10006CCD8(v187, v58, &qword_10016B558);
    uint64_t v66 = v196;
    sub_10006CCD8(v196, v170, &qword_10016B3C8);
    sub_100099A0C(v166);
    uint64_t v68 = v186 + v67;
    uint64_t v147 = v186 + v67;
    uint64_t v156 = v186 + v10[16];
    uint64_t v155 = v186 + v10[20];
    uint64_t v154 = v186 + v10[24];
    uint64_t v69 = v154;
    sub_100099BE0();
    sub_100099D20(v70);
    sub_1000999B4();
    v71();
    sub_10006CCD8(v60, v68, &qword_10016B3D8);
    sub_1000999B4();
    v72();
    sub_100099B40();
    v73();
    sub_10006CCD8(v65, v69, &qword_10016B558);
    sub_10006CCD8(v66, v169, &qword_10016B3C8);
    uint64_t v74 = v189;
    uint64_t v75 = v185;
    *(void *)(v186 + v167) = v189;
    uint64_t v152 = v75 + v10[12];
    uint64_t v76 = v152;
    uint64_t v145 = v75 + v10[16];
    uint64_t v151 = v75 + v10[20];
    sub_100099B58(v75);
    sub_100099C54(v77);
    uint64_t v165 = v78;
    sub_1000999B4();
    v79();
    sub_10006CCD8(v190, v76, &qword_10016B3D8);
    sub_1000999B4();
    v80();
    sub_100099B40();
    v81();
    uint64_t v82 = v187;
    sub_10006CCD8(v187, v68, &qword_10016B558);
    uint64_t v83 = v196;
    sub_10006CCD8(v196, v167, &qword_10016B3C8);
    uint64_t v84 = v184;
    *(void *)(v185 + v165) = v74;
    uint64_t v149 = v84 + v10[12];
    uint64_t v85 = v149;
    uint64_t v148 = v84 + v10[16];
    uint64_t v141 = v84 + v10[20];
    uint64_t v146 = v84 + v10[24];
    uint64_t v86 = v146;
    sub_100099BE0();
    sub_100099D34(v87);
    sub_1000999B4();
    v88();
    sub_10006CCD8(v190, v85, &qword_10016B3D8);
    uint64_t v89 = v197;
    uint64_t v90 = v192;
    sub_1000999B4();
    v90();
    uint64_t v91 = v191;
    sub_1000999B4();
    v91();
    sub_10006CCD8(v82, v86, &qword_10016B558);
    sub_10006CCD8(v83, v165, &qword_10016B3C8);
    sub_100099A0C(v184);
    uint64_t v94 = v92 + v93;
    uint64_t v144 = v92 + v93;
    uint64_t v143 = v92 + v10[16];
    uint64_t v95 = v143;
    uint64_t v142 = v92 + v10[20];
    sub_100099A34(v92);
    uint64_t v163 = v96;
    uint64_t v97 = v195;
    sub_1000999B4();
    v97();
    uint64_t v98 = v190;
    sub_10006CCD8(v190, v94, &qword_10016B3D8);
    ((void (*)(uint64_t, uint64_t, uint64_t))v90)(v95, v193, v89);
    sub_1000999B4();
    v91();
    sub_10006CCD8(v187, v86, &qword_10016B558);
    sub_10006CCD8(v196, v164, &qword_10016B3C8);
    uint64_t v99 = v189;
    uint64_t v100 = v182;
    *(void *)(v183 + v163) = v189;
    uint64_t v140 = v100 + v10[12];
    uint64_t v101 = v140;
    uint64_t v139 = v100 + v10[16];
    uint64_t v102 = v139;
    uint64_t v103 = sub_100099C08(v100);
    uint64_t v163 = v103 + v104;
    sub_100099BE0();
    uint64_t v162 = v105;
    uint64_t v138 = v10[32];
    sub_1000999B4();
    v97();
    sub_10006CCD8(v98, v101, &qword_10016B3D8);
    ((void (*)(uint64_t, uint64_t, uint64_t))v192)(v102, v193, v197);
    sub_100099D08();
    v106();
    sub_10006CCD8(v187, v163, &qword_10016B558);
    sub_10006CCD8(v196, v162, &qword_10016B3C8);
    *(void *)(v182 + v138) = v99;
    uint64_t v107 = v171;
    uint64_t v138 = v171 + v10[12];
    uint64_t v108 = v138;
    uint64_t v137 = v171 + v10[16];
    uint64_t v109 = v171 + v10[20];
    uint64_t v135 = v171 + v10[24];
    uint64_t v136 = v171 + v10[28];
    uint64_t v110 = v10[32];
    sub_10006D61C();
    v111();
    sub_10006CCD8(v190, v108, &qword_10016B3D8);
    sub_10006D61C();
    v112();
    uint64_t v113 = v176;
    sub_100099D08();
    v114();
    uint64_t v115 = v135;
    sub_10006CCD8(v187, v135, &qword_10016B558);
    uint64_t v116 = v136;
    sub_10006CCD8(v196, v136, &qword_10016B3C8);
    *(void *)(v107 + v110) = v189;
    swift_bridgeObjectRetain();
    sub_100129940();
    sub_10000D930(v116, &qword_10016B3C8);
    sub_10000D930(v115, &qword_10016B558);
    uint64_t v117 = *(void (**)(uint64_t, uint64_t))(v150 + 8);
    v117(v109, v113);
    uint64_t v118 = *(void (**)(void))(v168 + 8);
    sub_100099A68();
    v118();
    sub_10000D930(v138, &qword_10016B3D8);
    uint64_t v119 = *(void (**)(void))(v153 + 8);
    sub_1000999C0();
    v119();
    sub_10000D930(v163, &qword_10016B558);
    uint64_t v120 = sub_1000999E8((uint64_t)&v169);
    ((void (*)(uint64_t))v117)(v120);
    sub_100099A68();
    v118();
    sub_100099CD0((uint64_t)&v171);
    sub_1000999C0();
    v119();
    sub_10000D930(v164, &qword_10016B3C8);
    uint64_t v121 = sub_1000999E8((uint64_t)v173);
    ((void (*)(uint64_t))v117)(v121);
    sub_100099A68();
    v118();
    sub_10000D930(v144, &qword_10016B3D8);
    sub_1000999C0();
    v119();
    sub_100099CD0((uint64_t)&v196);
    sub_10000D930(v146, &qword_10016B558);
    sub_100099A68();
    v118();
    sub_10000D930(v149, &qword_10016B3D8);
    sub_1000999C0();
    v119();
    sub_10000D930(v167, &qword_10016B3C8);
    sub_100099CD0((uint64_t)&v181);
    uint64_t v122 = sub_1000999E8((uint64_t)&v182);
    ((void (*)(uint64_t))v117)(v122);
    sub_10000D930(v152, &qword_10016B3D8);
    sub_1000999C0();
    v119();
    sub_10000D930(v169, &qword_10016B3C8);
    sub_100099CD0((uint64_t)&v185);
    uint64_t v123 = sub_1000999E8((uint64_t)&v186);
    ((void (*)(uint64_t))v117)(v123);
    ((void (*)(uint64_t, uint64_t))v118)(v156, v197);
    sub_1000999C0();
    v119();
    sub_10000D930(v170, &qword_10016B3C8);
    sub_10000D930(v157, &qword_10016B558);
    uint64_t v124 = sub_1000999E8((uint64_t)&v189);
    ((void (*)(uint64_t))v117)(v124);
    uint64_t v125 = sub_100099B4C((uint64_t)&v190);
    ((void (*)(uint64_t))v118)(v125);
    sub_10000D930(v160, &qword_10016B3D8);
    uint64_t v126 = v174;
    uint64_t v127 = v175;
    uint64_t v128 = v180;
    uint64_t v129 = v172;
    sub_1000999B4();
    v130();
    type metadata accessor for WeatherDataOperationResult.Data(0);
    swift_storeEnumTagMultiPayload();
    sub_10012A6B0();
    sub_10000B3FC();
    sub_10006D61C();
    v131();
    uint64_t v132 = (uint64_t)v161;
    sub_10009973C(v127, (uint64_t)v161);
    sub_100099BA4();
    swift_storeEnumTagMultiPayload();
    sub_100099C60();
    v133();
    sub_10000D930(v132, &qword_10016E7F8);
    sub_1000997A0(v127, (void (*)(void))type metadata accessor for WeatherDataOperationResult);
    (*(void (**)(uint64_t, uint64_t))(v126 + 8))(v128, v129);
    uint64_t v36 = &qword_10016E810;
    uint64_t v37 = v200;
  }
  sub_10000D930(v37, v36);
  sub_100047260();
}

void sub_100094FCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  sub_100099BEC();
  a21 = v24;
  a22 = v25;
  uint64_t v26 = v22;
  uint64_t v28 = v27;
  uint64_t v343 = v29;
  uint64_t v326 = sub_1001299C0();
  sub_10000DB98();
  uint64_t v325 = v30;
  __chkstk_darwin(v31);
  sub_1000213D4();
  v327 = (int *)sub_1000053D8(&qword_10016E810);
  sub_10000B3FC();
  __chkstk_darwin(v32);
  sub_10000DCB4();
  sub_100011EF0();
  __chkstk_darwin(v33);
  sub_100011F60();
  sub_100011EF0();
  __chkstk_darwin(v34);
  sub_100011F60();
  sub_100011EF0();
  __chkstk_darwin(v35);
  sub_100011F60();
  sub_100011EF0();
  __chkstk_darwin(v36);
  sub_100011F60();
  sub_100011EF0();
  __chkstk_darwin(v37);
  sub_100011F60();
  sub_100011EF0();
  __chkstk_darwin(v38);
  sub_100011F60();
  sub_100011EF0();
  __chkstk_darwin(v39);
  sub_100011FAC();
  sub_100012098(v40);
  uint64_t v403 = sub_1000053D8(&qword_10016E818);
  sub_10000B3FC();
  __chkstk_darwin(v41);
  sub_10000DCB4();
  sub_100011EF0();
  __chkstk_darwin(v42);
  uint64_t v44 = (char *)&v322 - v43;
  uint64_t v384 = sub_1000053D8(&qword_10016E820);
  sub_10000DB98();
  uint64_t v399 = v45;
  __chkstk_darwin(v46);
  sub_10000DBCC();
  sub_100012098(v47);
  uint64_t v382 = sub_1000053D8(&qword_10016E828);
  sub_10000DB98();
  v398 = v48;
  __chkstk_darwin(v49);
  sub_100012098((uint64_t)&v322 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v380 = sub_1000053D8(&qword_10016E830);
  sub_10000DB98();
  uint64_t v397 = v51;
  __chkstk_darwin(v52);
  sub_10000DBCC();
  sub_100012098(v53);
  uint64_t v379 = sub_1000053D8(&qword_10016E838);
  sub_10000DB98();
  uint64_t v395 = v54;
  __chkstk_darwin(v55);
  sub_10000DBCC();
  sub_100012098(v56);
  uint64_t v378 = sub_1000053D8(&qword_10016E840);
  sub_10000DB98();
  uint64_t v393 = v57;
  __chkstk_darwin(v58);
  sub_10000DBCC();
  sub_100012098(v59);
  uint64_t v377 = sub_1000053D8(&qword_10016E848);
  sub_10000DB98();
  uint64_t v391 = v60;
  __chkstk_darwin(v61);
  sub_10000DBCC();
  sub_100012098(v62);
  uint64_t v63 = sub_1000053D8(&qword_10016E850);
  uint64_t v64 = sub_10000DC9C(v63);
  __chkstk_darwin(v64);
  sub_10000DCB4();
  sub_100011EF0();
  __chkstk_darwin(v65);
  sub_100011F60();
  sub_100011EF0();
  __chkstk_darwin(v66);
  sub_100011F60();
  sub_100011EF0();
  __chkstk_darwin(v67);
  sub_100011FAC();
  sub_1000999FC(v68);
  uint64_t v385 = sub_100129790();
  sub_10000DB98();
  uint64_t v70 = v69;
  __chkstk_darwin(v71);
  sub_10000DBCC();
  sub_100012098(v72);
  uint64_t v375 = sub_1000053D8(&qword_10016E858);
  sub_10000DB98();
  uint64_t v340 = v73;
  __chkstk_darwin(v74);
  sub_100011EF0();
  __chkstk_darwin(v75);
  sub_100011FAC();
  v409 = v76;
  uint64_t v408 = sub_100129300();
  sub_10000DB98();
  uint64_t v346 = v77;
  __chkstk_darwin(v78);
  sub_10000DCB4();
  uint64_t v407 = v79;
  sub_1000636C8();
  __chkstk_darwin(v80);
  sub_100011FAC();
  uint64_t v400 = v81;
  uint64_t v344 = sub_100129CF0();
  sub_10000DB98();
  uint64_t v345 = v82;
  __chkstk_darwin(v83);
  sub_10000DBCC();
  v405[1] = v84;
  uint64_t v85 = sub_1000053D8(&qword_10016E860);
  uint64_t v86 = sub_10000DC9C(v85);
  __chkstk_darwin(v86);
  sub_10000DBCC();
  sub_1000999FC(v87);
  uint64_t v370 = sub_100129710();
  sub_10000DB98();
  uint64_t v369 = v88;
  __chkstk_darwin(v89);
  sub_10000DBCC();
  sub_100012098(v90);
  uint64_t v91 = sub_1000053D8(&qword_10016E868);
  uint64_t v92 = sub_10000DC9C(v91);
  __chkstk_darwin(v92);
  sub_10000DBCC();
  sub_100012098(v93);
  uint64_t v94 = sub_1000053D8(&qword_10016C7C0);
  uint64_t v95 = sub_10000DC9C(v94);
  __chkstk_darwin(v95);
  sub_10000DBCC();
  sub_1000999FC(v96);
  uint64_t v341 = sub_100129760();
  sub_10000DB98();
  uint64_t v342 = v97;
  __chkstk_darwin(v98);
  sub_10000DBCC();
  v405[0] = v99;
  v389 = (char *)sub_10012A190();
  sub_10000DB98();
  uint64_t v406 = v100;
  __chkstk_darwin(v101);
  sub_100099B0C();
  uint64_t v348 = sub_100129780();
  sub_10000DB98();
  uint64_t v349 = v102;
  __chkstk_darwin(v103);
  sub_10000DBCC();
  sub_100012098(v104);
  sub_10012A5F0();
  double v106 = v105;
  uint64_t v388 = v28;
  sub_10012A5F0();
  id v108 = [objc_allocWithZone((Class)CLLocation) initWithLatitude:v106 longitude:v107];
  if (qword_10016AE28 != -1) {
LABEL_52:
  }
    swift_once();
  uint64_t v109 = sub_10012AB60();
  uint64_t v110 = sub_10000D7A4(v109, (uint64_t)qword_100181C40);
  id v111 = (void (**)(void))v108;
  v402 = (void (*)(void))v110;
  uint64_t v112 = sub_10012AB40();
  os_log_type_t v113 = sub_10012CD60();
  BOOL v114 = os_log_type_enabled(v112, v113);
  v404 = v26;
  v339 = v44;
  v329 = v23;
  v401 = v70;
  v368 = v111;
  if (v114)
  {
    uint64_t v115 = sub_100047470();
    uint64_t v116 = (void *)sub_100099ABC();
    *(_DWORD *)uint64_t v115 = 141558275;
    uint64_t v412 = 1752392040;
    sub_10012CF70();
    *(_WORD *)(v115 + 12) = 2113;
    uint64_t v412 = (uint64_t)v111;
    uint64_t v117 = v111;
    sub_10012CF70();
    *uint64_t v116 = v111;

    uint64_t v26 = v404;
    _os_log_impl((void *)&_mh_execute_header, v112, v113, "About to retrieve cached weather data; location=%{private,mask.hash}@",
      (uint8_t *)v115,
      0x16u);
    sub_1000053D8(&qword_10016E7F0);
    swift_arrayDestroy();
    sub_10000DBB4();
    sub_10000DBB4();
  }
  else
  {
  }
  sub_100097ACC();
  LODWORD(v366) = v118;
  uint64_t v119 = &v26[qword_10016E628];
  sub_10000D890(&v26[qword_10016E628], *(void *)&v26[qword_10016E628 + 24]);
  sub_100099D14();
  sub_10012A490();
  sub_10012A160();
  uint64_t v120 = *(void (**)(uint64_t, void, uint64_t))(v406 + 8);
  v406 += 8;
  v365 = v120;
  sub_1000999D0();
  v121();
  sub_100099C8C();
  id v122 = (id)WCCountryCodeEstimate();
  if (v122)
  {
    uint64_t v123 = v122;
    v364 = (void (*)(uint64_t))sub_10012CA40();
    uint64_t v363 = v124;
  }
  else
  {
    v364 = 0;
    uint64_t v363 = 0;
  }
  uint64_t v125 = v367;
  sub_10012A6A0();
  sub_100129480();
  sub_100099CE8();
  sub_100099B34();
  uint64_t v126 = v373;
  uint64_t v127 = v348;
  sub_1000999B4();
  v128();
  _s13WeatherWidget20WeatherDataViewModelOwst_0(v126, 0, 1, v127);
  sub_1000053D8(&qword_10016E870);
  uint64_t v129 = swift_allocObject();
  *(_OWORD *)(v129 + 16) = xmmword_100130010;
  sub_100129700();
  uint64_t v412 = v129;
  sub_1000994B0((unint64_t *)&qword_10016E878, (void (*)(uint64_t))&type metadata accessor for WeatherServiceCaching.Options);
  sub_1000053D8(&qword_10016E880);
  sub_1000994F8();
  sub_10012CFC0();
  sub_10000D890(v119, *((void *)v119 + 3));
  sub_100099D14();
  sub_10012A490();
  sub_10012A120();
  sub_1000999D0();
  v130();
  uint64_t v131 = sub_100129740();
  _s13WeatherWidget20WeatherDataViewModelOwst_0(v387, 1, 1, v131);
  sub_100129750();
  uint64_t v132 = v404;
  sub_10012A6A0();
  sub_100099CE8();
  sub_100129D00();
  sub_10000D930(v125, &qword_10016C7C0);
  unsigned int v133 = v132[qword_10016E638];
  uint64_t v134 = v401;
  uint64_t v135 = v368;
  if (v133 >> 6 >= 2 && (v133 >> 6 != 3 || v133 != 192))
  {

    goto LABEL_35;
  }
  unsigned int v324 = v133 >> 6;
  sub_100099B34();
  uint64_t v370 = v136;
  uint64_t v369 = v137;
  sub_1000999B4();
  v138();
  uint64_t v413 = 0;
  uint64_t v139 = v135;
  uint64_t v140 = sub_10012AB40();
  os_log_type_t v141 = sub_10012CD60();
  BOOL v142 = os_log_type_enabled(v140, v141);
  v389 = (char *)v139;
  if (v142)
  {
    uint64_t v143 = sub_100047470();
    uint64_t v406 = sub_100099ABC();
    *(_DWORD *)uint64_t v143 = 141558275;
    uint64_t v412 = 1752392040;
    sub_10012CF70();
    *(_WORD *)(v143 + 12) = 2113;
    uint64_t v412 = (uint64_t)v389;
    uint64_t v144 = v389;
    sub_10012CF70();
    *(void *)uint64_t v406 = v389;

    _os_log_impl((void *)&_mh_execute_header, v140, v141, "Attempting to retrieve cached weather data; location=%{private,mask.hash}@",
      (uint8_t *)v143,
      0x16u);
    sub_1000053D8(&qword_10016E7F0);
    swift_arrayDestroy();
    sub_10000DBB4();
    sub_10000DBB4();
  }
  else
  {

    uint64_t v140 = v139;
  }
  uint64_t v145 = v385;

  uint64_t v146 = (void (*)(void))*((void *)v134 + 13);
  LODWORD(v367) = enum case for WeatherQueryHourlyRelativeRange.RelativeTo.now(_:);
  uint64_t v366 = (uint64_t)v134 + 104;
  v365 = (void (*)(uint64_t, void, uint64_t))v146;
  v146(v386);
  if (!__OFADD__(v413, 24))
  {
    unsigned int v323 = v133;
    sub_1001297E0();
    uint64_t v70 = (void (*)(void))((char *)v134 + 8);
    uint64_t v147 = sub_100099B74();
    v364 = v148;
    v148(v147);
    uint64_t v373 = *(void *)&v132[qword_10016E620];
    sub_100129CD0();
    sub_100129CE0();
    sub_100129C90();
    sub_100099CAC();
    sub_100129C80();
    sub_100129CC0();
    sub_100129CA0();
    uint64_t v149 = sub_1001295D0();
    uint64_t v150 = sub_1000053D8(&qword_10016B3D8);
    uint64_t v151 = sub_1000053D8(&qword_10016E890);
    uint64_t v152 = sub_1000053D8(&qword_10016B3C0);
    uint64_t v153 = sub_1000053D8(&qword_10016B558);
    uint64_t v154 = sub_1000053D8(&qword_10016B3C8);
    uint64_t v360 = sub_1000053D8(&qword_10016E898);
    uint64_t v361 = v154;
    uint64_t v362 = v153;
    uint64_t v374 = v152;
    uint64_t v44 = v389;
    uint64_t v388 = v151;
    uint64_t v363 = v150;
    uint64_t v387 = v149;
    uint64_t v26 = v396;
    sub_1001298A0();
    sub_100099B28();
    uint64_t v399 = v155;
    uint64_t v359 = v156;
    sub_1000999D0();
    v157();
    sub_100099B28();
    v398 = v158;
    uint64_t v358 = v159;
    sub_1000999D0();
    v160();
    sub_100099B28();
    uint64_t v397 = v161;
    uint64_t v357 = v162;
    sub_1000999D0();
    v163();
    sub_100099B28();
    uint64_t v164 = v350;
    uint64_t v395 = v165;
    uint64_t v356 = v166;
    sub_1000999D0();
    v167();
    sub_100099B28();
    uint64_t v393 = v168;
    uint64_t v355 = v169;
    sub_1000999D0();
    v170();
    sub_100099B28();
    uint64_t v391 = v171;
    uint64_t v354 = v172;
    sub_1000999D0();
    v173();
    v368 = (void (**)(void))qword_10016E658;
    swift_beginAccess();
    uint64_t v174 = v376;
    sub_10006CCD8(v164, v376, &qword_10016E850);
    sub_100099A8C();
    if (v176)
    {
      uint64_t v23 = (void (**)(void))(v346 + 8);
      uint64_t v352 = v340 + 8;
      uint64_t v351 = v340 + 32;
      *(void *)&long long v175 = 134218499;
      long long v347 = v175;
      v401 = v70;
      v353 = (void (**)(void))(v346 + 8);
      while (1)
      {
        sub_10000D930(v174, &qword_10016E850);
        if (v413 > 18) {
          break;
        }
        sub_100129290();
        uint64_t v177 = *v23;
        sub_10006D574();
        v177();
        sub_1000999B4();
        v178();
        id v108 = (id)(v413 + 1);
        if (__OFADD__(v413, 1))
        {
          __break(1u);
LABEL_51:
          __break(1u);
          goto LABEL_52;
        }
        ++v413;
        v365(v386, v367, v145);
        if (__OFADD__(v108, 24)) {
          goto LABEL_51;
        }
        uint64_t v406 = (uint64_t)v177;
        sub_1001297E0();
        uint64_t v179 = sub_100099B74();
        v364(v179);
        sub_10000B424();
        v180();
        sub_100063AE4();
        v181();
        uint64_t v182 = v44;
        uint64_t v183 = sub_10012AB40();
        os_log_type_t v184 = sub_10012CD60();
        if (os_log_type_enabled(v183, v184))
        {
          uint64_t v185 = swift_slowAlloc();
          uint64_t v186 = (void *)sub_100099ABC();
          *(_DWORD *)uint64_t v185 = v347;
          *(void *)(v185 + 4) = v413;
          *(_WORD *)(v185 + 12) = 2160;
          *(void *)(v185 + 14) = 1752392040;
          *(_WORD *)(v185 + 22) = 2113;
          *(void *)(v185 + 24) = v182;
          *uint64_t v186 = v44;

          _os_log_impl((void *)&_mh_execute_header, v183, v184, "Cache retrieval attempt #%ld; location=%{private,mask.hash}@",
            (uint8_t *)v185,
            0x20u);
          sub_1000053D8(&qword_10016E7F0);
          swift_arrayDestroy();
          sub_10000DBB4();
          uint64_t v187 = v350;
          sub_10000DBB4();
        }
        else
        {

          uint64_t v183 = v182;
          uint64_t v187 = v164;
        }

        sub_100129CD0();
        sub_100129CE0();
        sub_100129C90();
        uint64_t v26 = v396;
        sub_100129C80();
        sub_100129CC0();
        sub_100129CA0();
        uint64_t v188 = (uint64_t)v372;
        sub_1001298A0();
        sub_1000999D0();
        v189();
        sub_1000999D0();
        v190();
        sub_1000999D0();
        v191();
        sub_1000999D0();
        v192();
        sub_100099BB0();
        sub_1000999D0();
        v193();
        sub_1000999D0();
        v194();
        uint64_t v23 = v353;
        sub_10006D574();
        v195();
        sub_10000D930(v187, &qword_10016E850);
        sub_10006CD30(v188, v187, &qword_10016E850);
        uint64_t v174 = v376;
        sub_10006CCD8(v187, v376, &qword_10016E850);
        sub_100099A8C();
        uint64_t v145 = v385;
        uint64_t v70 = v401;
        uint64_t v44 = v389;
        uint64_t v164 = v187;
        if (!v176) {
          goto LABEL_26;
        }
      }
    }
    else
    {
LABEL_26:
      sub_10000D930(v174, &qword_10016E850);
    }
    uint64_t v196 = v337;
    sub_10006CCD8(v164, v337, &qword_10016E850);
    sub_100099A8C();
    if (!v176)
    {
      sub_10006CD30(v196, (uint64_t)v339, &qword_10016E818);
      v203 = v44;
      uint64_t v204 = (uint64_t)v402;
      v205 = sub_10012AB40();
      os_log_type_t v206 = sub_10012CD60();
      if (os_log_type_enabled(v205, v206))
      {
        uint64_t v204 = swift_slowAlloc();
        uint64_t v208 = (void *)sub_100099ABC();
        *(_DWORD *)uint64_t v204 = 134218499;
        swift_beginAccess();
        uint64_t v411 = v413;
        sub_10012CF70();
        *(_WORD *)(v204 + 12) = 2160;
        uint64_t v411 = 1752392040;
        sub_10012CF70();
        *(_WORD *)(v204 + 22) = 2113;
        uint64_t v411 = (uint64_t)v203;
        v209 = v203;
        sub_10012CF70();
        *uint64_t v208 = v203;

        _os_log_impl((void *)&_mh_execute_header, v205, v206, "Successfully retrieved for cached weather after %ld iteration; location=%{private,mask.hash}@",
          (uint8_t *)v204,
          0x20u);
        sub_1000053D8(&qword_10016E7F0);
        swift_arrayDestroy();
        sub_10000DBB4();
        sub_10000DBB4();
      }
      else
      {

        v205 = v203;
      }
      uint64_t v217 = v330;

      sub_10006CCD8((uint64_t)v339, v217, &qword_10016E818);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v218 = v203;
        sub_100099D14();
        swift_errorRetain();
        v219 = (id)v204;
        swift_errorRetain();
        uint64_t v220 = sub_10012AB40();
        os_log_type_t v221 = sub_10012CD40();
        if (os_log_type_enabled(v220, v221))
        {
          uint64_t v222 = swift_slowAlloc();
          uint64_t v223 = (void *)swift_slowAlloc();
          *(_DWORD *)uint64_t v222 = 141558531;
          uint64_t v411 = 1752392040;
          sub_10012CF70();
          *(_WORD *)(v222 + 12) = 2113;
          uint64_t v411 = (uint64_t)v219;
          uint64_t v224 = v219;
          sub_10012CF70();
          *uint64_t v223 = v219;

          *(_WORD *)(v222 + 22) = 2112;
          swift_errorRetain();
          uint64_t v225 = _swift_stdlib_bridgeErrorToNSError();
          uint64_t v411 = v225;
          sub_10012CF70();
          v223[1] = v225;
          swift_errorRelease();
          swift_errorRelease();
          _os_log_impl((void *)&_mh_execute_header, v220, v221, "Aborting: unexpected error while fetching cached weather data; location=%{private,mask.hash}@, error=%@",
            (uint8_t *)v222,
            0x20u);
          sub_1000053D8(&qword_10016E7F0);
          swift_arrayDestroy();
          sub_10000DBB4();
          sub_10000DBB4();
        }
        else
        {

          swift_errorRelease();
          swift_errorRelease();

          uint64_t v220 = v219;
        }
        uint64_t v314 = v350;

        swift_errorRelease();
        sub_10000D930((uint64_t)v339, &qword_10016E818);
        sub_10000D930(v314, &qword_10016E850);
        sub_1000999A4();
        v315();
        sub_10000B424();
        v316();
        sub_1000999A4();
        v317();
        sub_10006D574();
        v318();
      }
      else
      {
        uint64_t v226 = v327;
        uint64_t v227 = v327[12];
        uint64_t v228 = v338 + v227;
        uint64_t v399 = v338 + v227;
        uint64_t v397 = v338 + v327[16];
        uint64_t v229 = v327[20];
        uint64_t v395 = v338 + v229;
        uint64_t v230 = v327[24];
        uint64_t v231 = v338 + v230;
        uint64_t v394 = v338 + v230;
        uint64_t v232 = v327[28];
        uint64_t v233 = v338 + v232;
        uint64_t v406 = v327[32];
        uint64_t v234 = v217 + v227;
        v401 = (void (*)(void))(v217 + v229);
        v402 = (void (*)(void))(v217 + v230);
        uint64_t v403 = v338 + v232;
        v372 = v203;
        uint64_t v407 = v217 + v232;
        uint64_t v391 = *(void *)(v387 - 8);
        sub_100063AE4();
        v235();
        sub_10006CD30(v234, v228, &qword_10016B3D8);
        sub_100099990();
        uint64_t v390 = v236;
        sub_100011F6C();
        v237();
        sub_100099990();
        v239 = v238;
        v368 = (void (**)(void))v238;
        sub_100011F6C();
        v240();
        sub_10006CD30((uint64_t)v402, v231, &qword_10016B558);
        sub_10006CD30(v407, v233, &qword_10016B3C8);
        uint64_t v407 = *(void *)(v217 + v406);
        *(void *)(v338 + v406) = v407;
        uint64_t v241 = v331;
        uint64_t v382 = v331 + v226[12];
        uint64_t v242 = v382;
        uint64_t v381 = v331 + v226[16];
        uint64_t v380 = v331 + v226[20];
        uint64_t v243 = v380;
        uint64_t v379 = v331 + v226[24];
        uint64_t v378 = v331 + v226[28];
        uint64_t v244 = v378;
        uint64_t v392 = v226[32];
        sub_100099B34();
        v398 = v245;
        uint64_t v393 = v246;
        sub_1000999B4();
        v247();
        sub_10006CCD8(v399, v242, &qword_10016B3D8);
        sub_100099B34();
        v402 = (void (*)(void))v248;
        uint64_t v406 = v249;
        sub_1000999B4();
        v250();
        uint64_t v251 = (void (*)(void))v239[2];
        v396 = (char *)(v239 + 2);
        v401 = v251;
        ((void (*)(uint64_t, uint64_t, uint64_t))v251)(v243, v395, v374);
        uint64_t v252 = v394;
        uint64_t v253 = sub_100099B74();
        sub_10006CCD8(v253, v254, &qword_10016B558);
        uint64_t v255 = v403;
        sub_10006CCD8(v403, v244, &qword_10016B3C8);
        *(void *)(v241 + v392) = v407;
        v364 = (void (*)(uint64_t))(v336 + v226[12]);
        uint64_t v256 = (uint64_t)v364;
        uint64_t v377 = v336 + v226[16];
        uint64_t v376 = v336 + v226[20];
        uint64_t v373 = v336 + v226[24];
        uint64_t v257 = v373;
        sub_100099BE0();
        sub_100099C54(v258);
        v389 = v259;
        sub_100099BB0();
        sub_1000999B4();
        v260();
        sub_10006CCD8(v399, v256, &qword_10016B3D8);
        uint64_t v261 = v402;
        sub_1000999B4();
        v261();
        sub_10006D61C();
        v262();
        sub_10006CCD8(v252, v257, &qword_10016B558);
        sub_10006CCD8(v255, v392, &qword_10016B3C8);
        sub_100099A0C(v336);
        uint64_t v264 = v335 + v263;
        uint64_t v371 = v335 + v263;
        uint64_t v360 = v335 + v226[16];
        uint64_t v370 = v335 + v226[20];
        sub_100099B58(v335);
        sub_100099D20(v265);
        v266 = v398;
        sub_100099BB0();
        sub_1000999B4();
        v266();
        uint64_t v267 = v399;
        sub_10006CCD8(v399, v264, &qword_10016B3D8);
        sub_100099BA4();
        sub_1000999B4();
        v261();
        sub_10006D61C();
        v268();
        sub_10006CCD8(v394, v252, &qword_10016B558);
        sub_10006CCD8(v403, (uint64_t)v389, &qword_10016B3C8);
        sub_100099A0C(v335);
        uint64_t v270 = v334 + v269;
        uint64_t v367 = v334 + v269;
        uint64_t v366 = v334 + v226[16];
        uint64_t v271 = sub_100099C08(v334);
        uint64_t v273 = v271 + v272;
        v365 = (void (*)(uint64_t, void, uint64_t))(v271 + v272);
        sub_100099C54(v271 + v226[28]);
        uint64_t v385 = v274;
        sub_100099D08();
        v266();
        sub_10006CCD8(v267, v270, &qword_10016B3D8);
        sub_100099BA4();
        sub_1000999B4();
        v275();
        sub_100099B40();
        v276();
        uint64_t v277 = v394;
        sub_10006CCD8(v394, v273, &qword_10016B558);
        sub_10006CCD8(v403, v386, &qword_10016B3C8);
        uint64_t v278 = v407;
        *(void *)(v334 + v385) = v407;
        uint64_t v363 = v333 + v226[12];
        uint64_t v279 = v363;
        uint64_t v362 = v333 + v226[16];
        uint64_t v361 = v333 + v226[20];
        uint64_t v384 = v333 + v226[24];
        sub_100099BE0();
        sub_100099D34(v280);
        sub_100099D08();
        v281();
        uint64_t v282 = v399;
        sub_10006CCD8(v399, v279, &qword_10016B3D8);
        sub_10006D61C();
        v283();
        sub_100099B74();
        uint64_t v284 = v401;
        sub_100099B40();
        v284();
        sub_10006CCD8(v277, v384, &qword_10016B558);
        sub_10006CCD8(v403, v385, &qword_10016B3C8);
        *(void *)(v333 + v383) = v278;
        uint64_t v359 = v332 + v226[12];
        uint64_t v285 = v359;
        uint64_t v358 = v332 + v226[16];
        uint64_t v357 = v332 + v226[20];
        sub_100099A34(v332);
        uint64_t v354 = v286;
        uint64_t v287 = v338;
        sub_100099B40();
        v288();
        sub_10006CCD8(v282, v285, &qword_10016B3D8);
        sub_10006D61C();
        v289();
        sub_100099CAC();
        sub_1000999B4();
        v284();
        uint64_t v290 = sub_100099B4C((uint64_t)&a15);
        sub_10006CCD8(v290, v291, &qword_10016B558);
        sub_10006CCD8(v403, v383, &qword_10016B3C8);
        sub_100099A0C(v332);
        uint64_t v292 = v328;
        uint64_t v354 = v328 + v293;
        v353 = (void (**)(void))(v328 + v226[16]);
        uint64_t v294 = v328 + v226[24];
        uint64_t v352 = v328 + v226[28];
        uint64_t v295 = v226[32];
        sub_100099B40();
        v296();
        uint64_t v297 = sub_100099B4C((uint64_t)&a20);
        sub_10006CCD8(v297, v298, &qword_10016B3D8);
        sub_100099BA4();
        sub_10006D61C();
        v299();
        sub_100099CAC();
        sub_1000999B4();
        v300();
        sub_10006CCD8(v394, v294, &qword_10016B558);
        uint64_t v301 = v352;
        sub_10006CCD8(v403, v352, &qword_10016B3C8);
        *(void *)(v292 + v295) = v407;
        swift_bridgeObjectRetain();
        sub_100129940();

        sub_10000D930(v287, &qword_10016E810);
        sub_10000D930((uint64_t)v339, &qword_10016E818);
        sub_10000D930(v350, &qword_10016E850);
        sub_1000999A4();
        v302();
        sub_10000B424();
        v303();
        sub_1000999A4();
        v304();
        sub_1000999A4();
        v305();
        sub_100099C3C();
        sub_1000999A4();
        v306();
        sub_10000D930(v301, &qword_10016B3C8);
        sub_10000D930(v294, &qword_10016B558);
        v409 = v368[1];
        sub_100099AB0();
        v307();
        uint64_t v408 = *(void *)(v390 + 8);
        sub_100017B00();
        v308();
        sub_10000D930(v354, &qword_10016B3D8);
        uint64_t v309 = *(void (**)(void))(v391 + 8);
        sub_1000999DC();
        v309();
        sub_10000D930(v355, &qword_10016B558);
        uint64_t v310 = v409;
        sub_100099AB0();
        v310();
        sub_100099B4C((uint64_t)&v390);
        uint64_t v311 = (void (*)(void))v408;
        sub_100017B00();
        v311();
        sub_100099CB8((uint64_t)&v391);
        sub_1000999DC();
        v309();
        sub_10000D930(v385, &qword_10016B3C8);
        sub_100099AB0();
        v310();
        sub_100099B4C((uint64_t)&v394);
        sub_100017B00();
        v311();
        sub_10000D930(v363, &qword_10016B3D8);
        sub_1000999C0();
        v309();
        sub_100099CB8((uint64_t)&v413);
        sub_10000D930((uint64_t)v365, &qword_10016B558);
        sub_100099B4C((uint64_t)&v398);
        sub_10006D574();
        v311();
        sub_10000D930(v367, &qword_10016B3D8);
        sub_1000999C0();
        v309();
        sub_10000D930((uint64_t)v389, &qword_10016B3C8);
        sub_100099CB8((uint64_t)&v401);
        uint64_t v312 = v409;
        sub_100099AB0();
        v312();
        sub_10000D930(v371, &qword_10016B3D8);
        sub_1000999C0();
        v309();
        sub_10000D930(v392, &qword_10016B3C8);
        sub_100099CB8((uint64_t)v405);
        sub_100099AB0();
        v312();
        uint64_t v313 = (void (*)(void))v408;
        sub_10006D574();
        v313();
        sub_1000999C0();
        v309();
        sub_10000D930(v378, &qword_10016B3C8);
        sub_10000D930(v379, &qword_10016B558);
        sub_100099AB0();
        v312();
        sub_10006D574();
        v313();
        sub_10000D930(v382, &qword_10016B3D8);
        if (v324 < 2 || v324 != 2 && v323 == 192)
        {
          sub_100099AD4();
          sub_100063AE4();
          v319();
          type metadata accessor for WeatherDataOperationResult.Data(0);
          swift_storeEnumTagMultiPayload();
          uint64_t v320 = type metadata accessor for WeatherDataOperationResult(0);
          sub_10012A6B0();
          sub_10000B3FC();
          sub_10006D61C();
          v321();
          uint64_t v215 = (uint64_t)v313;
          uint64_t v216 = 0;
          uint64_t v214 = v320;
          goto LABEL_37;
        }
        sub_100099A5C();
      }
LABEL_36:
      sub_1000999A4();
      v213();
      uint64_t v214 = type metadata accessor for WeatherDataOperationResult(0);
      uint64_t v215 = v343;
      uint64_t v216 = 1;
LABEL_37:
      _s13WeatherWidget20WeatherDataViewModelOwst_0(v215, v216, 1, v214);
      sub_100099C20();
      return;
    }
    sub_10000D930(v196, &qword_10016E850);
    uint64_t v197 = v44;
    uint64_t v198 = sub_10012AB40();
    os_log_type_t v199 = sub_10012CD40();
    if (os_log_type_enabled(v198, v199))
    {
      uint64_t v200 = sub_100047470();
      uint64_t v201 = (void *)sub_100099ABC();
      *(_DWORD *)uint64_t v200 = 141558275;
      uint64_t v410 = 1752392040;
      sub_10012CF70();
      *(_WORD *)(v200 + 12) = 2113;
      uint64_t v410 = (uint64_t)v197;
      uint64_t v202 = v197;
      uint64_t v164 = v350;
      sub_10012CF70();
      *uint64_t v201 = v197;

      _os_log_impl((void *)&_mh_execute_header, v198, v199, "Aborting: NO cached weather data found; location=%{private,mask.hash}@,",
        (uint8_t *)v200,
        0x16u);
      sub_1000053D8(&qword_10016E7F0);
      swift_arrayDestroy();
      sub_10000DBB4();
      sub_10000DBB4();
    }
    else
    {
    }
    sub_10000D930(v164, &qword_10016E850);
    sub_1000999A4();
    v210();
    (*(void (**)(uint64_t, uint64_t))(v346 + 8))(v400, v408);
LABEL_35:
    sub_1000999A4();
    v211();
    sub_1000999A4();
    v212();
    sub_100099C3C();
    goto LABEL_36;
  }
  __break(1u);
}

void sub_100097ACC()
{
  sub_100047278();
  uint64_t v2 = v1;
  sub_10012A020();
  sub_10000DB98();
  __chkstk_darwin(v3);
  sub_100099B0C();
  uint64_t v4 = sub_10012A190();
  sub_10000DB98();
  uint64_t v6 = v5;
  __chkstk_darwin(v7);
  sub_1000213D4();
  if ((*(unsigned char *)(v2 + qword_10016E638) & 0x81) == 1)
  {
    sub_10000D890((void *)(v2 + qword_10016E628), *(void *)(v2 + qword_10016E628 + 24));
    sub_10012A490();
    sub_10012A150();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0, v4);
    char v8 = sub_10012A010();
    sub_100017B00();
    v9();
    if (v8)
    {
      if (qword_10016AE28 != -1) {
        swift_once();
      }
      uint64_t v10 = sub_10012AB60();
      sub_10000D7A4(v10, (uint64_t)qword_100181C40);
      uint64_t v11 = sub_10012AB40();
      os_log_type_t v12 = sub_10012CD60();
      if (os_log_type_enabled(v11, v12))
      {
        uint64_t v13 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v13 = 0;
        _os_log_impl((void *)&_mh_execute_header, v11, v12, "Allowing twilight adjustment...", v13, 2u);
        sub_10000DBB4();
      }
    }
  }
  sub_100047260();
}

void sub_100097CC0()
{
}

void sub_100097CF0()
{
}

uint64_t sub_100097D00()
{
  sub_10012A6B0();
  sub_10000B3FC();
  sub_10000B424();
  v1();
  swift_release();
  sub_10000DB48(v0 + qword_10016E628);
  sub_10000DB48(v0 + qword_10016E630);
  swift_release();
  uint64_t v2 = v0 + qword_10016E648;
  sub_100129300();
  sub_10000B3FC();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8);

  return v5(v2, v3);
}

id sub_100097DDC()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for WeatherDataOperation(0);
  return [super dealloc];
}

uint64_t sub_100097E14(uint64_t a1)
{
  sub_10012A6B0();
  sub_10000B3FC();
  sub_10000B424();
  v2();
  swift_release();
  sub_10000DB48(a1 + qword_10016E628);
  sub_10000DB48(a1 + qword_10016E630);
  swift_release();
  uint64_t v3 = a1 + qword_10016E648;
  sub_100129300();
  sub_10000B3FC();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8);

  return v6(v3, v4);
}

uint64_t sub_100097EF8()
{
  return type metadata accessor for WeatherDataOperation(0);
}

uint64_t *sub_100097F00(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v7 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v7 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    type metadata accessor for WeatherDataOperationResult.Data(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v8 = sub_1001299C0();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v9 = *(int *)(a3 + 20);
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = sub_10012A6B0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
  }
  return a1;
}

uint64_t type metadata accessor for WeatherDataOperationResult.Data(uint64_t a1)
{
  return sub_10001A270(a1, qword_10016E7B0);
}

uint64_t sub_1000980C8(uint64_t a1, uint64_t a2)
{
  type metadata accessor for WeatherDataOperationResult.Data(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
LABEL_4:
    uint64_t v5 = sub_1001299C0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
    goto LABEL_6;
  }
  if (EnumCaseMultiPayload != 1)
  {
    if (EnumCaseMultiPayload) {
      goto LABEL_6;
    }
    goto LABEL_4;
  }
  swift_bridgeObjectRelease();
LABEL_6:
  uint64_t v6 = a1 + *(int *)(a2 + 20);
  uint64_t v7 = sub_10012A6B0();
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);

  return v8(v6, v7);
}

void *sub_1000981A4(void *a1, void *a2, uint64_t a3)
{
  type metadata accessor for WeatherDataOperationResult.Data(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *a1 = *a2;
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v6 = sub_1001299C0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_10012A6B0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  return a1;
}

void *sub_1000982FC(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1000997A0((uint64_t)a1, (void (*)(void))type metadata accessor for WeatherDataOperationResult.Data);
    type metadata accessor for WeatherDataOperationResult.Data(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v6 = sub_1001299C0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_10012A6B0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

char *sub_100098478(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for WeatherDataOperationResult.Data(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload != 2 && EnumCaseMultiPayload)
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  else
  {
    uint64_t v8 = sub_1001299C0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  uint64_t v12 = sub_10012A6B0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v10, v11, v12);
  return a1;
}

char *sub_1000985D4(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1000997A0((uint64_t)a1, (void (*)(void))type metadata accessor for WeatherDataOperationResult.Data);
    uint64_t v6 = type metadata accessor for WeatherDataOperationResult.Data(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload != 2 && EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
    else
    {
      uint64_t v8 = sub_1001299C0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
      swift_storeEnumTagMultiPayload();
    }
  }
  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  uint64_t v12 = sub_10012A6B0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 40))(v10, v11, v12);
  return a1;
}

uint64_t sub_100098754(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100098768);
}

uint64_t sub_100098768(uint64_t a1, uint64_t a2, uint64_t a3)
{
  type metadata accessor for WeatherDataOperationResult.Data(0);
  sub_100099990();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1;
  }
  else
  {
    uint64_t v8 = sub_10012A6B0();
    uint64_t v9 = a1 + *(int *)(a3 + 20);
  }

  return _s13WeatherWidget20WeatherDataViewModelOwet_0(v9, a2, v8);
}

uint64_t sub_1000987E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000987FC);
}

uint64_t sub_1000987FC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  type metadata accessor for WeatherDataOperationResult.Data(0);
  sub_100099990();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = a1;
  }
  else
  {
    uint64_t v10 = sub_10012A6B0();
    uint64_t v11 = a1 + *(int *)(a4 + 20);
  }

  return _s13WeatherWidget20WeatherDataViewModelOwst_0(v11, a2, a2, v10);
}

uint64_t type metadata accessor for WeatherDataOperationResult(uint64_t a1)
{
  return sub_10001A270(a1, qword_10016E708);
}

uint64_t sub_1000988A4()
{
  uint64_t result = type metadata accessor for WeatherDataOperationResult.Data(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_10012A6B0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_10009896C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v6 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v6 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v7 = sub_1001299C0();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_100098AC0(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 2)
  {
LABEL_4:
    uint64_t v3 = sub_1001299C0();
    uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
    return v4(a1, v3);
  }
  if (result != 1)
  {
    if (result) {
      return result;
    }
    goto LABEL_4;
  }

  return swift_bridgeObjectRelease();
}

void *sub_100098B68(void *a1, void *a2)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *a1 = *a2;
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v4 = sub_1001299C0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *sub_100098C6C(void *a1, void *a2)
{
  if (a1 != a2)
  {
    sub_1000997A0((uint64_t)a1, (void (*)(void))type metadata accessor for WeatherDataOperationResult.Data);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v4 = sub_1001299C0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_100098D94(void *a1, const void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload != 2 && EnumCaseMultiPayload)
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v7 = sub_1001299C0();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_100098E9C(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1000997A0((uint64_t)a1, (void (*)(void))type metadata accessor for WeatherDataOperationResult.Data);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload != 2 && EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      uint64_t v7 = sub_1001299C0();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_100098FC8()
{
  uint64_t result = sub_1001299C0();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_100099060()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100099098()
{
  return sub_100091708(*(void *)(v0 + 16));
}

uint64_t sub_1000990B4()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000990EC()
{
  sub_100047278();
  sub_100129780();
  sub_10000DB98();
  sub_100129CF0();
  sub_10000DB98();
  sub_100099BBC();
  swift_release();
  swift_release();

  sub_1000999DC();
  v1();
  uint64_t v2 = sub_100099A1C();
  v3(v2);
  sub_100047260();
  return _swift_deallocObject(v4, v5, v6);
}

uint64_t sub_1000991D8(uint64_t *a1)
{
  uint64_t v3 = sub_100129780();
  sub_100047198(v3);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = sub_100129CF0();
  sub_100047198(v6);
  sub_100099C78();
  return sub_100091788(a1, v9, v10, v11, v12, v13, v1 + v5, v1 + v7, *(unsigned char *)(v1 + v8));
}

uint64_t sub_1000992A0()
{
  sub_100047278();
  sub_100129780();
  sub_10000DB98();
  sub_100129CF0();
  sub_10000DB98();
  sub_100099BBC();
  swift_release();

  swift_release();
  sub_1000999DC();
  v1();
  uint64_t v2 = sub_100099A1C();
  v3(v2);
  sub_100047260();
  return _swift_deallocObject(v4, v5, v6);
}

uint64_t sub_10009938C(uint64_t a1)
{
  uint64_t v3 = sub_100129780();
  sub_100047198(v3);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = sub_100129CF0();
  sub_100047198(v6);
  sub_100099C78();
  return sub_100091E9C(a1, v9, v10, v11, v12, v13, v1 + v5, v1 + v7, *(unsigned char *)(v1 + v8));
}

unint64_t sub_10009943C()
{
  unint64_t result = qword_10016E800;
  if (!qword_10016E800)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016E800);
  }
  return result;
}

uint64_t sub_100099488(uint64_t a1, uint64_t a2)
{
  if (a2 != 1) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_10009949C(uint64_t a1, uint64_t a2)
{
  if (a2 != 1) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1000994B0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1000994F8()
{
  unint64_t result = qword_10016E888;
  if (!qword_10016E888)
  {
    sub_100005470(&qword_10016E880);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016E888);
  }
  return result;
}

uint64_t sub_10009954C()
{
  sub_100047278();
  sub_100129CF0();
  sub_10000DB98();
  sub_100129760();
  sub_10000DB98();

  swift_release();
  sub_1000999DC();
  v1();
  uint64_t v2 = sub_100099A1C();
  v3(v2);
  sub_100047260();
  return _swift_deallocObject(v4, v5, v6);
}

uint64_t sub_100099640(uint64_t a1, char a2)
{
  char v4 = a2 & 1;
  uint64_t v5 = sub_100129CF0();
  sub_100047198(v5);
  unint64_t v7 = (*(unsigned __int8 *)(v6 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v9 = *(void *)(v8 + 64);
  uint64_t v10 = *(void *)(sub_100129760() - 8);
  uint64_t v11 = (char *)v2[2];
  uint64_t v12 = (void (*)(void))v2[3];
  uint64_t v13 = v2[4];
  uint64_t v14 = (void *)v2[5];
  uint64_t v15 = (uint64_t)v2 + ((v7 + v9 + *(unsigned __int8 *)(v10 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));

  return sub_1000937B0(a1, v4, v11, v12, v13, v14, (uint64_t)v2 + v7, v15);
}

uint64_t sub_10009970C(uint64_t a1)
{
  return sub_100092FDC(a1, *(void *)(v1 + 16), *(void (**)(uint64_t *))(v1 + 24), *(void *)(v1 + 32));
}

void sub_10009971C()
{
}

uint64_t sub_10009973C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for WeatherDataOperationResult(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000997A0(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_10000B3FC();
  sub_10000B424();
  v3();
  return a1;
}

uint64_t sub_1000997F8()
{
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

unsigned char *storeEnumTagSinglePayload for WeatherDataOperationError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100099904);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WeatherDataOperationError()
{
  return &type metadata for WeatherDataOperationError;
}

unint64_t sub_100099940()
{
  unint64_t result = qword_10016E8B0;
  if (!qword_10016E8B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016E8B0);
  }
  return result;
}

uint64_t sub_1000999E8@<X0>(uint64_t a1@<X8>)
{
  return *(void *)(a1 - 256);
}

uint64_t sub_1000999FC@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v1 - 256) = a1;
  return 0;
}

void sub_100099A0C(uint64_t a1@<X8>)
{
  *(void *)(a1 + *(void *)(v2 - 256)) = v1;
}

uint64_t sub_100099A1C()
{
  return v0 + v1;
}

uint64_t sub_100099A34(uint64_t result)
{
  *(void *)(v2 - 616) = result + *(int *)(v1 + 96);
  *(void *)(v2 - 392) = result + *(int *)(v1 + 112);
  return result;
}

uint64_t sub_100099A8C()
{
  return _s13WeatherWidget20WeatherDataViewModelOwet_0(v0, 1, *(void *)(v1 - 232));
}

uint64_t sub_100099ABC()
{
  return swift_slowAlloc();
}

uint64_t sub_100099AD4()
{
  return *(void *)(v0 - 736);
}

uint64_t sub_100099AF0()
{
  return 0;
}

uint64_t sub_100099B0C()
{
  return 0;
}

uint64_t sub_100099B4C@<X0>(uint64_t a1@<X8>)
{
  return *(void *)(a1 - 256);
}

uint64_t sub_100099B58(uint64_t result)
{
  *(void *)(v2 - 504) = result + *(int *)(v1 + 96);
  return result;
}

uint64_t sub_100099B74()
{
  return v0;
}

uint64_t sub_100099B80(void *a1)
{
  uint64_t v4 = *(void *)(v2 - 224);
  uint64_t v5 = *(void *)(v2 - 216);
  a1[2] = v1;
  a1[3] = v4;
  a1[4] = v5;
  return sub_1001295D0();
}

uint64_t sub_100099BBC()
{
  return swift_release();
}

uint64_t sub_100099C08(uint64_t result)
{
  *(void *)(v2 - 608) = result + *(int *)(v1 + 80);
  return result;
}

uint64_t sub_100099C3C()
{
  return *(void *)(v0 - 680);
}

void sub_100099C54(uint64_t a1@<X8>)
{
  *(void *)(v1 - 256) = a1;
}

uint64_t sub_100099C8C()
{
  return sub_100129770();
}

uint64_t sub_100099CB8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(a1 - 256);
  return sub_10000D930(v3, v1);
}

uint64_t sub_100099CD0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(a1 - 256);
  return sub_10000D930(v3, v1);
}

uint64_t sub_100099CE8()
{
  return _s13WeatherWidget20WeatherDataViewModelOwst_0(v1, 0, 1, v0);
}

uint64_t sub_100099D14()
{
  return v0;
}

void sub_100099D20(uint64_t a1@<X8>)
{
  *(void *)(v1 - 256) = a1;
  *(void *)(v3 - 368) = *(int *)(v2 + 128);
}

void sub_100099D34(uint64_t a1@<X8>)
{
  *(void *)(v1 - 256) = a1;
  *(void *)(v3 - 392) = *(int *)(v2 + 128);
}

uint64_t *sub_100099D48(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    unint64_t v7 = (int *)type metadata accessor for AggregateWeatherViewModel(0);
    if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)a2, 2, (uint64_t)v7))
    {
      uint64_t v8 = type metadata accessor for AdaptiveConditionsComplicationDataStatus();
      memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
    }
    else
    {
      uint64_t v10 = sub_100129330();
      uint64_t v56 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v10 - 8) + 16);
      v56(a1, a2, v10);
      uint64_t v11 = v7[5];
      uint64_t v12 = (char *)a1 + v11;
      uint64_t v13 = (char *)a2 + v11;
      uint64_t v14 = sub_10012A6B0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
      uint64_t v15 = v7[6];
      uint64_t v16 = (char *)a1 + v15;
      uint64_t v17 = (char *)a2 + v15;
      uint64_t v18 = sub_10012C250();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
      *(uint64_t *)((char *)a1 + v7[7]) = *(uint64_t *)((char *)a2 + v7[7]);
      *(uint64_t *)((char *)a1 + v7[8]) = *(uint64_t *)((char *)a2 + v7[8]);
      uint64_t v19 = v7[9];
      uint64_t v20 = (char *)a1 + v19;
      uint64_t v21 = (char *)a2 + v19;
      uint64_t v22 = (int *)type metadata accessor for AirQualityViewModel();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v21, 1, (uint64_t)v22))
      {
        uint64_t v23 = sub_1000053D8(&qword_10016B428);
        memcpy(v20, v21, *(void *)(*(void *)(v23 - 8) + 64));
      }
      else
      {
        v56((uint64_t *)v20, (uint64_t *)v21, v10);
        uint64_t v24 = v22[5];
        uint64_t v25 = &v20[v24];
        uint64_t v26 = &v21[v24];
        uint64_t v27 = sub_100129300();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
        *(void *)&v20[v22[6]] = *(void *)&v21[v22[6]];
        uint64_t v28 = v22[7];
        uint64_t v29 = &v20[v28];
        uint64_t v30 = &v21[v28];
        uint64_t v31 = sub_100129B70();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16))(v29, v30, v31);
        uint64_t v32 = v22[8];
        uint64_t v33 = &v20[v32];
        uint64_t v34 = &v21[v32];
        uint64_t v35 = sub_100129C50();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 16))(v33, v34, v35);
        _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v20, 0, 1, (uint64_t)v22);
      }
      uint64_t v36 = v7[10];
      uint64_t v37 = (char *)a1 + v36;
      uint64_t v38 = (char *)a2 + v36;
      uint64_t v39 = sub_10012C6B0();
      if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v38, 1, v39))
      {
        uint64_t v40 = sub_1000053D8(&qword_10016B430);
        memcpy(v37, v38, *(void *)(*(void *)(v40 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 16))(v37, v38, v39);
        _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v37, 0, 1, v39);
      }
      *(uint64_t *)((char *)a1 + v7[11]) = *(uint64_t *)((char *)a2 + v7[11]);
      uint64_t v41 = v7[12];
      uint64_t v42 = (char *)a1 + v41;
      uint64_t v43 = (char *)a2 + v41;
      *(void *)uint64_t v42 = *(void *)v43;
      *((_WORD *)v42 + 4) = *((_WORD *)v43 + 4);
      uint64_t v44 = v7[13];
      uint64_t v45 = (char *)a1 + v44;
      uint64_t v46 = (char *)a2 + v44;
      uint64_t v47 = sub_100129220();
      swift_bridgeObjectRetain();
      if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v46, 1, v47))
      {
        uint64_t v48 = sub_1000053D8(&qword_10016B420);
        memcpy(v45, v46, *(void *)(*(void *)(v48 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v47 - 8) + 16))(v45, v46, v47);
        _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v45, 0, 1, v47);
      }
      uint64_t v49 = v7[14];
      uint64_t v50 = (char *)a1 + v49;
      uint64_t v51 = (char *)a2 + v49;
      uint64_t v52 = type metadata accessor for AggregateWeatherViewModel.SunEvent(0);
      if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v51, 1, v52))
      {
        uint64_t v53 = sub_1000053D8(&qword_10016B438);
        memcpy(v50, v51, *(void *)(*(void *)(v53 - 8) + 64));
      }
      else
      {
        swift_getEnumCaseMultiPayload();
        uint64_t v54 = sub_100129300();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v54 - 8) + 16))(v50, v51, v54);
        swift_storeEnumTagMultiPayload();
        _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v50, 0, 1, v52);
      }
      _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)a1, 0, 2, (uint64_t)v7);
    }
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
  }
  swift_retain();
  return a1;
}

uint64_t sub_10009A30C(uint64_t a1)
{
  uint64_t v2 = (int *)type metadata accessor for AggregateWeatherViewModel(0);
  if (!_s13WeatherWidget20WeatherDataViewModelOwet_0(a1, 2, (uint64_t)v2))
  {
    uint64_t v3 = sub_100129330();
    uint64_t v4 = *(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
    v4(a1, v3);
    uint64_t v5 = a1 + v2[5];
    uint64_t v6 = sub_10012A6B0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
    uint64_t v7 = a1 + v2[6];
    uint64_t v8 = sub_10012C250();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v9 = a1 + v2[9];
    uint64_t v10 = (int *)type metadata accessor for AirQualityViewModel();
    if (!_s13WeatherWidget20WeatherDataViewModelOwet_0(v9, 1, (uint64_t)v10))
    {
      v4(v9, v3);
      uint64_t v11 = v9 + v10[5];
      uint64_t v12 = sub_100129300();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
      uint64_t v13 = v9 + v10[7];
      uint64_t v14 = sub_100129B70();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
      uint64_t v15 = v9 + v10[8];
      uint64_t v16 = sub_100129C50();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
    }
    uint64_t v17 = a1 + v2[10];
    uint64_t v18 = sub_10012C6B0();
    if (!_s13WeatherWidget20WeatherDataViewModelOwet_0(v17, 1, v18)) {
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(v17, v18);
    }
    swift_bridgeObjectRelease();
    uint64_t v19 = a1 + v2[13];
    uint64_t v20 = sub_100129220();
    if (!_s13WeatherWidget20WeatherDataViewModelOwet_0(v19, 1, v20)) {
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v20 - 8) + 8))(v19, v20);
    }
    uint64_t v21 = a1 + v2[14];
    uint64_t v22 = type metadata accessor for AggregateWeatherViewModel.SunEvent(0);
    if (!_s13WeatherWidget20WeatherDataViewModelOwet_0(v21, 1, v22))
    {
      uint64_t v23 = sub_100129300();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v23 - 8) + 8))(v21, v23);
    }
  }

  return swift_release();
}

char *sub_10009A668(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = (int *)type metadata accessor for AggregateWeatherViewModel(0);
  if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)a2, 2, (uint64_t)v6))
  {
    uint64_t v7 = type metadata accessor for AdaptiveConditionsComplicationDataStatus();
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
  }
  else
  {
    uint64_t v56 = a3;
    uint64_t v8 = sub_100129330();
    uint64_t v9 = (void (**)(void *, const void *, uint64_t))(*(void *)(v8 - 8) + 16);
    uint64_t v55 = *v9;
    (*v9)(a1, a2, v8);
    uint64_t v10 = v6[5];
    uint64_t v11 = &a1[v10];
    uint64_t v12 = &a2[v10];
    uint64_t v13 = sub_10012A6B0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
    uint64_t v14 = v6[6];
    uint64_t v15 = &a1[v14];
    uint64_t v16 = &a2[v14];
    uint64_t v17 = sub_10012C250();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
    *(void *)&a1[v6[7]] = *(void *)&a2[v6[7]];
    *(void *)&a1[v6[8]] = *(void *)&a2[v6[8]];
    uint64_t v18 = v6[9];
    uint64_t v19 = &a1[v18];
    uint64_t v20 = &a2[v18];
    uint64_t v21 = (int *)type metadata accessor for AirQualityViewModel();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v20, 1, (uint64_t)v21))
    {
      uint64_t v22 = sub_1000053D8(&qword_10016B428);
      memcpy(v19, v20, *(void *)(*(void *)(v22 - 8) + 64));
    }
    else
    {
      v55(v19, v20, v8);
      uint64_t v23 = v21[5];
      uint64_t v24 = &v19[v23];
      uint64_t v25 = &v20[v23];
      uint64_t v26 = sub_100129300();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 16))(v24, v25, v26);
      *(void *)&v19[v21[6]] = *(void *)&v20[v21[6]];
      uint64_t v27 = v21[7];
      uint64_t v28 = &v19[v27];
      uint64_t v29 = &v20[v27];
      uint64_t v30 = sub_100129B70();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 16))(v28, v29, v30);
      uint64_t v31 = v21[8];
      uint64_t v32 = &v19[v31];
      uint64_t v33 = &v20[v31];
      uint64_t v34 = sub_100129C50();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 16))(v32, v33, v34);
      _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v19, 0, 1, (uint64_t)v21);
    }
    uint64_t v35 = v6[10];
    uint64_t v36 = &a1[v35];
    uint64_t v37 = &a2[v35];
    uint64_t v38 = sub_10012C6B0();
    a3 = v56;
    if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v37, 1, v38))
    {
      uint64_t v39 = sub_1000053D8(&qword_10016B430);
      memcpy(v36, v37, *(void *)(*(void *)(v39 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 16))(v36, v37, v38);
      _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v36, 0, 1, v38);
    }
    *(void *)&a1[v6[11]] = *(void *)&a2[v6[11]];
    uint64_t v40 = v6[12];
    uint64_t v41 = &a1[v40];
    uint64_t v42 = &a2[v40];
    *(void *)uint64_t v41 = *(void *)v42;
    *((_WORD *)v41 + 4) = *((_WORD *)v42 + 4);
    uint64_t v43 = v6[13];
    uint64_t v44 = &a1[v43];
    uint64_t v45 = &a2[v43];
    uint64_t v46 = sub_100129220();
    swift_bridgeObjectRetain();
    if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v45, 1, v46))
    {
      uint64_t v47 = sub_1000053D8(&qword_10016B420);
      memcpy(v44, v45, *(void *)(*(void *)(v47 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v46 - 8) + 16))(v44, v45, v46);
      _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v44, 0, 1, v46);
    }
    uint64_t v48 = v6[14];
    uint64_t v49 = &a1[v48];
    uint64_t v50 = &a2[v48];
    uint64_t v51 = type metadata accessor for AggregateWeatherViewModel.SunEvent(0);
    if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v50, 1, v51))
    {
      uint64_t v52 = sub_1000053D8(&qword_10016B438);
      memcpy(v49, v50, *(void *)(*(void *)(v52 - 8) + 64));
    }
    else
    {
      swift_getEnumCaseMultiPayload();
      uint64_t v53 = sub_100129300();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v53 - 8) + 16))(v49, v50, v53);
      swift_storeEnumTagMultiPayload();
      _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v49, 0, 1, v51);
    }
    _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)a1, 0, 2, (uint64_t)v6);
  }
  *(void *)&a1[*(int *)(a3 + 20)] = *(void *)&a2[*(int *)(a3 + 20)];
  swift_retain();
  return a1;
}

uint64_t sub_10009ABE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = (int *)type metadata accessor for AggregateWeatherViewModel(0);
  int v7 = _s13WeatherWidget20WeatherDataViewModelOwet_0(a1, 2, (uint64_t)v6);
  int v8 = _s13WeatherWidget20WeatherDataViewModelOwet_0(a2, 2, (uint64_t)v6);
  if (v7)
  {
    if (!v8)
    {
      uint64_t v133 = a3;
      uint64_t v9 = sub_100129330();
      uint64_t v10 = (void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16);
      uint64_t v131 = *v10;
      (*v10)(a1, a2, v9);
      uint64_t v11 = v6[5];
      uint64_t v12 = a1 + v11;
      uint64_t v13 = a2 + v11;
      uint64_t v14 = sub_10012A6B0();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
      uint64_t v15 = v6[6];
      uint64_t v16 = a1 + v15;
      uint64_t v17 = a2 + v15;
      uint64_t v18 = sub_10012C250();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
      *(void *)(a1 + v6[7]) = *(void *)(a2 + v6[7]);
      *(void *)(a1 + v6[8]) = *(void *)(a2 + v6[8]);
      uint64_t v19 = v6[9];
      uint64_t v20 = (char *)(a1 + v19);
      uint64_t v21 = (char *)(a2 + v19);
      uint64_t v22 = (int *)type metadata accessor for AirQualityViewModel();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v21, 1, (uint64_t)v22))
      {
        uint64_t v23 = sub_1000053D8(&qword_10016B428);
        memcpy(v20, v21, *(void *)(*(void *)(v23 - 8) + 64));
      }
      else
      {
        v131((uint64_t)v20, (uint64_t)v21, v9);
        uint64_t v55 = v22[5];
        uint64_t v56 = &v20[v55];
        uint64_t v57 = &v21[v55];
        uint64_t v58 = sub_100129300();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v58 - 8) + 16))(v56, v57, v58);
        *(void *)&v20[v22[6]] = *(void *)&v21[v22[6]];
        uint64_t v59 = v22[7];
        uint64_t v60 = &v20[v59];
        uint64_t v61 = &v21[v59];
        uint64_t v62 = sub_100129B70();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v62 - 8) + 16))(v60, v61, v62);
        uint64_t v63 = v22[8];
        uint64_t v64 = &v20[v63];
        uint64_t v65 = &v21[v63];
        uint64_t v66 = sub_100129C50();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v66 - 8) + 16))(v64, v65, v66);
        _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v20, 0, 1, (uint64_t)v22);
      }
      a3 = v133;
      uint64_t v67 = v6[10];
      uint64_t v68 = (void *)(a1 + v67);
      uint64_t v69 = (const void *)(a2 + v67);
      uint64_t v70 = sub_10012C6B0();
      if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v69, 1, v70))
      {
        uint64_t v71 = sub_1000053D8(&qword_10016B430);
        memcpy(v68, v69, *(void *)(*(void *)(v71 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v70 - 8) + 16))(v68, v69, v70);
        _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v68, 0, 1, v70);
      }
      *(void *)(a1 + v6[11]) = *(void *)(a2 + v6[11]);
      uint64_t v72 = v6[12];
      uint64_t v73 = a1 + v72;
      uint64_t v74 = (uint64_t *)(a2 + v72);
      uint64_t v75 = *v74;
      *(_WORD *)(v73 + 8) = *((_WORD *)v74 + 4);
      *(void *)uint64_t v73 = v75;
      uint64_t v76 = v6[13];
      uint64_t v77 = (void *)(a1 + v76);
      uint64_t v78 = (const void *)(a2 + v76);
      uint64_t v79 = sub_100129220();
      swift_bridgeObjectRetain();
      if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v78, 1, v79))
      {
        uint64_t v80 = sub_1000053D8(&qword_10016B420);
        memcpy(v77, v78, *(void *)(*(void *)(v80 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v79 - 8) + 16))(v77, v78, v79);
        _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v77, 0, 1, v79);
      }
      uint64_t v81 = v6[14];
      uint64_t v82 = (void *)(a1 + v81);
      uint64_t v83 = (const void *)(a2 + v81);
      uint64_t v84 = type metadata accessor for AggregateWeatherViewModel.SunEvent(0);
      if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v83, 1, v84))
      {
        uint64_t v85 = sub_1000053D8(&qword_10016B438);
        memcpy(v82, v83, *(void *)(*(void *)(v85 - 8) + 64));
      }
      else
      {
        swift_getEnumCaseMultiPayload();
        uint64_t v86 = sub_100129300();
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v86 - 8) + 16))(v82, v83, v86);
        swift_storeEnumTagMultiPayload();
        _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v82, 0, 1, v84);
      }
      uint64_t v87 = a1;
      uint64_t v88 = 2;
      uint64_t v89 = (uint64_t)v6;
      goto LABEL_23;
    }
    goto LABEL_7;
  }
  if (v8)
  {
    sub_1000A3648(a1, (void (*)(void))type metadata accessor for AggregateWeatherViewModel);
LABEL_7:
    size_t v24 = *(void *)(*(void *)(type metadata accessor for AdaptiveConditionsComplicationDataStatus() - 8) + 64);
    uint64_t v25 = (void *)a1;
    uint64_t v26 = (const void *)a2;
LABEL_8:
    memcpy(v25, v26, v24);
    goto LABEL_24;
  }
  uint64_t v134 = a3;
  uint64_t v27 = sub_100129330();
  uint64_t v132 = *(void *)(v27 - 8);
  uint64_t v28 = *(void (**)(uint64_t, uint64_t, uint64_t))(v132 + 24);
  v28(a1, a2, v27);
  uint64_t v29 = v6[5];
  uint64_t v30 = a1 + v29;
  uint64_t v31 = a2 + v29;
  uint64_t v32 = sub_10012A6B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 24))(v30, v31, v32);
  uint64_t v33 = v6[6];
  uint64_t v34 = a1 + v33;
  uint64_t v35 = a2 + v33;
  uint64_t v36 = sub_10012C250();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 24))(v34, v35, v36);
  *(void *)(a1 + v6[7]) = *(void *)(a2 + v6[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + v6[8]) = *(void *)(a2 + v6[8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v37 = v6[9];
  uint64_t v38 = (char *)(a1 + v37);
  uint64_t v39 = (char *)(a2 + v37);
  uint64_t v40 = (int *)type metadata accessor for AirQualityViewModel();
  int v41 = _s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v38, 1, (uint64_t)v40);
  int v42 = _s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v39, 1, (uint64_t)v40);
  if (v41)
  {
    if (!v42)
    {
      (*(void (**)(char *, char *, uint64_t))(v132 + 16))(v38, v39, v27);
      uint64_t v43 = v40[5];
      uint64_t v44 = &v38[v43];
      uint64_t v45 = &v39[v43];
      uint64_t v46 = sub_100129300();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v46 - 8) + 16))(v44, v45, v46);
      *(void *)&v38[v40[6]] = *(void *)&v39[v40[6]];
      uint64_t v47 = v40[7];
      uint64_t v48 = &v38[v47];
      uint64_t v49 = &v39[v47];
      uint64_t v50 = sub_100129B70();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v50 - 8) + 16))(v48, v49, v50);
      uint64_t v51 = v40[8];
      uint64_t v52 = &v38[v51];
      uint64_t v53 = &v39[v51];
      uint64_t v54 = sub_100129C50();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v54 - 8) + 16))(v52, v53, v54);
      _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v38, 0, 1, (uint64_t)v40);
      goto LABEL_28;
    }
    goto LABEL_27;
  }
  if (v42)
  {
    sub_1000A3648((uint64_t)v38, (void (*)(void))type metadata accessor for AirQualityViewModel);
LABEL_27:
    uint64_t v91 = sub_1000053D8(&qword_10016B428);
    memcpy(v38, v39, *(void *)(*(void *)(v91 - 8) + 64));
    goto LABEL_28;
  }
  v28((uint64_t)v38, (uint64_t)v39, v27);
  uint64_t v118 = v40[5];
  uint64_t v119 = &v38[v118];
  uint64_t v120 = &v39[v118];
  uint64_t v121 = sub_100129300();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v121 - 8) + 24))(v119, v120, v121);
  *(void *)&v38[v40[6]] = *(void *)&v39[v40[6]];
  uint64_t v122 = v40[7];
  uint64_t v123 = &v38[v122];
  uint64_t v124 = &v39[v122];
  uint64_t v125 = sub_100129B70();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v125 - 8) + 24))(v123, v124, v125);
  uint64_t v126 = v40[8];
  uint64_t v127 = &v38[v126];
  uint64_t v128 = &v39[v126];
  uint64_t v129 = sub_100129C50();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v129 - 8) + 24))(v127, v128, v129);
LABEL_28:
  a3 = v134;
  uint64_t v92 = v6[10];
  uint64_t v93 = (void *)(a1 + v92);
  uint64_t v94 = (const void *)(a2 + v92);
  uint64_t v95 = sub_10012C6B0();
  int v96 = _s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v93, 1, v95);
  int v97 = _s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v94, 1, v95);
  if (v96)
  {
    if (!v97)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v95 - 8) + 16))(v93, v94, v95);
      _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v93, 0, 1, v95);
      goto LABEL_34;
    }
    goto LABEL_33;
  }
  uint64_t v98 = *(void *)(v95 - 8);
  if (v97)
  {
    (*(void (**)(void *, uint64_t))(v98 + 8))(v93, v95);
LABEL_33:
    uint64_t v99 = sub_1000053D8(&qword_10016B430);
    memcpy(v93, v94, *(void *)(*(void *)(v99 - 8) + 64));
    goto LABEL_34;
  }
  (*(void (**)(void *, const void *, uint64_t))(v98 + 24))(v93, v94, v95);
LABEL_34:
  *(void *)(a1 + v6[11]) = *(void *)(a2 + v6[11]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v100 = v6[12];
  uint64_t v101 = (unsigned char *)(a1 + v100);
  uint64_t v102 = (unsigned char *)(a2 + v100);
  *uint64_t v101 = *v102;
  v101[1] = v102[1];
  v101[2] = v102[2];
  v101[3] = v102[3];
  v101[4] = v102[4];
  v101[5] = v102[5];
  v101[6] = v102[6];
  v101[7] = v102[7];
  v101[8] = v102[8];
  v101[9] = v102[9];
  uint64_t v103 = v6[13];
  uint64_t v104 = (void *)(a1 + v103);
  double v105 = (const void *)(a2 + v103);
  uint64_t v106 = sub_100129220();
  int v107 = _s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v104, 1, v106);
  int v108 = _s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v105, 1, v106);
  if (v107)
  {
    if (!v108)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v106 - 8) + 16))(v104, v105, v106);
      _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v104, 0, 1, v106);
      goto LABEL_40;
    }
    goto LABEL_39;
  }
  uint64_t v109 = *(void *)(v106 - 8);
  if (v108)
  {
    (*(void (**)(void *, uint64_t))(v109 + 8))(v104, v106);
LABEL_39:
    uint64_t v110 = sub_1000053D8(&qword_10016B420);
    memcpy(v104, v105, *(void *)(*(void *)(v110 - 8) + 64));
    goto LABEL_40;
  }
  (*(void (**)(void *, const void *, uint64_t))(v109 + 24))(v104, v105, v106);
LABEL_40:
  uint64_t v111 = v6[14];
  uint64_t v112 = a1 + v111;
  uint64_t v113 = a2 + v111;
  uint64_t v114 = type metadata accessor for AggregateWeatherViewModel.SunEvent(0);
  int v115 = _s13WeatherWidget20WeatherDataViewModelOwet_0(v112, 1, v114);
  int v116 = _s13WeatherWidget20WeatherDataViewModelOwet_0(v113, 1, v114);
  if (v115)
  {
    if (!v116)
    {
      swift_getEnumCaseMultiPayload();
      uint64_t v117 = sub_100129300();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v117 - 8) + 16))(v112, v113, v117);
      swift_storeEnumTagMultiPayload();
      uint64_t v87 = v112;
      uint64_t v88 = 1;
      uint64_t v89 = v114;
LABEL_23:
      _s13WeatherWidget20WeatherDataViewModelOwst_0(v87, 0, v88, v89);
      goto LABEL_24;
    }
    goto LABEL_45;
  }
  if (v116)
  {
    sub_1000A3648(v112, (void (*)(void))type metadata accessor for AggregateWeatherViewModel.SunEvent);
LABEL_45:
    size_t v24 = *(void *)(*(void *)(sub_1000053D8(&qword_10016B438) - 8) + 64);
    uint64_t v25 = (void *)v112;
    uint64_t v26 = (const void *)v113;
    goto LABEL_8;
  }
  if (a1 != a2)
  {
    sub_1000A3648(v112, (void (*)(void))type metadata accessor for AggregateWeatherViewModel.SunEvent);
    swift_getEnumCaseMultiPayload();
    uint64_t v130 = sub_100129300();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v130 - 8) + 16))(v112, v113, v130);
    swift_storeEnumTagMultiPayload();
  }
LABEL_24:
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_retain();
  swift_release();
  return a1;
}

char *sub_10009B9EC(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = (int *)type metadata accessor for AggregateWeatherViewModel(0);
  if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)a2, 2, (uint64_t)v6))
  {
    uint64_t v7 = type metadata accessor for AdaptiveConditionsComplicationDataStatus();
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
  }
  else
  {
    uint64_t v8 = sub_100129330();
    uint64_t v9 = *(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 32);
    v9(a1, a2, v8);
    uint64_t v10 = v6[5];
    uint64_t v11 = &a1[v10];
    uint64_t v12 = &a2[v10];
    uint64_t v13 = sub_10012A6B0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
    uint64_t v14 = v6[6];
    uint64_t v15 = &a1[v14];
    uint64_t v16 = &a2[v14];
    uint64_t v17 = sub_10012C250();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32))(v15, v16, v17);
    *(void *)&a1[v6[7]] = *(void *)&a2[v6[7]];
    *(void *)&a1[v6[8]] = *(void *)&a2[v6[8]];
    uint64_t v18 = v6[9];
    uint64_t v19 = &a1[v18];
    uint64_t v20 = &a2[v18];
    uint64_t v21 = (int *)type metadata accessor for AirQualityViewModel();
    if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v20, 1, (uint64_t)v21))
    {
      uint64_t v22 = sub_1000053D8(&qword_10016B428);
      memcpy(v19, v20, *(void *)(*(void *)(v22 - 8) + 64));
    }
    else
    {
      v9(v19, v20, v8);
      uint64_t v23 = v21[5];
      size_t v24 = &v19[v23];
      uint64_t v25 = &v20[v23];
      uint64_t v26 = sub_100129300();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 32))(v24, v25, v26);
      *(void *)&v19[v21[6]] = *(void *)&v20[v21[6]];
      uint64_t v27 = v21[7];
      uint64_t v28 = &v19[v27];
      uint64_t v29 = &v20[v27];
      uint64_t v30 = sub_100129B70();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 32))(v28, v29, v30);
      uint64_t v31 = v21[8];
      uint64_t v32 = &v19[v31];
      uint64_t v33 = &v20[v31];
      uint64_t v34 = sub_100129C50();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 32))(v32, v33, v34);
      _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v19, 0, 1, (uint64_t)v21);
    }
    uint64_t v35 = v6[10];
    uint64_t v36 = &a1[v35];
    uint64_t v37 = &a2[v35];
    uint64_t v38 = sub_10012C6B0();
    if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v37, 1, v38))
    {
      uint64_t v39 = sub_1000053D8(&qword_10016B430);
      memcpy(v36, v37, *(void *)(*(void *)(v39 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 32))(v36, v37, v38);
      _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v36, 0, 1, v38);
    }
    *(void *)&a1[v6[11]] = *(void *)&a2[v6[11]];
    uint64_t v40 = v6[12];
    int v41 = &a1[v40];
    int v42 = &a2[v40];
    *(void *)int v41 = *(void *)v42;
    *((_WORD *)v41 + 4) = *((_WORD *)v42 + 4);
    uint64_t v43 = v6[13];
    uint64_t v44 = &a1[v43];
    uint64_t v45 = &a2[v43];
    uint64_t v46 = sub_100129220();
    if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v45, 1, v46))
    {
      uint64_t v47 = sub_1000053D8(&qword_10016B420);
      memcpy(v44, v45, *(void *)(*(void *)(v47 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v46 - 8) + 32))(v44, v45, v46);
      _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v44, 0, 1, v46);
    }
    uint64_t v48 = v6[14];
    uint64_t v49 = &a1[v48];
    uint64_t v50 = &a2[v48];
    uint64_t v51 = type metadata accessor for AggregateWeatherViewModel.SunEvent(0);
    if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v50, 1, v51))
    {
      uint64_t v52 = sub_1000053D8(&qword_10016B438);
      memcpy(v49, v50, *(void *)(*(void *)(v52 - 8) + 64));
    }
    else
    {
      swift_getEnumCaseMultiPayload();
      uint64_t v53 = sub_100129300();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v53 - 8) + 32))(v49, v50, v53);
      swift_storeEnumTagMultiPayload();
      _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v49, 0, 1, v51);
    }
    _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)a1, 0, 2, (uint64_t)v6);
  }
  *(void *)&a1[*(int *)(a3 + 20)] = *(void *)&a2[*(int *)(a3 + 20)];
  return a1;
}

uint64_t sub_10009BF38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = (int *)type metadata accessor for AggregateWeatherViewModel(0);
  int v7 = _s13WeatherWidget20WeatherDataViewModelOwet_0(a1, 2, (uint64_t)v6);
  int v8 = _s13WeatherWidget20WeatherDataViewModelOwet_0(a2, 2, (uint64_t)v6);
  if (v7)
  {
    if (!v8)
    {
      uint64_t v9 = sub_100129330();
      uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32);
      v10(a1, a2, v9);
      uint64_t v11 = v6[5];
      uint64_t v12 = a1 + v11;
      uint64_t v13 = a2 + v11;
      uint64_t v14 = sub_10012A6B0();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
      uint64_t v15 = v6[6];
      uint64_t v16 = a1 + v15;
      uint64_t v17 = a2 + v15;
      uint64_t v18 = sub_10012C250();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
      *(void *)(a1 + v6[7]) = *(void *)(a2 + v6[7]);
      *(void *)(a1 + v6[8]) = *(void *)(a2 + v6[8]);
      uint64_t v19 = v6[9];
      uint64_t v20 = (char *)(a1 + v19);
      uint64_t v21 = (char *)(a2 + v19);
      uint64_t v22 = (int *)type metadata accessor for AirQualityViewModel();
      if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v21, 1, (uint64_t)v22))
      {
        uint64_t v23 = sub_1000053D8(&qword_10016B428);
        memcpy(v20, v21, *(void *)(*(void *)(v23 - 8) + 64));
      }
      else
      {
        v10((uint64_t)v20, (uint64_t)v21, v9);
        uint64_t v55 = v22[5];
        uint64_t v56 = &v20[v55];
        uint64_t v57 = &v21[v55];
        uint64_t v58 = sub_100129300();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v58 - 8) + 32))(v56, v57, v58);
        *(void *)&v20[v22[6]] = *(void *)&v21[v22[6]];
        uint64_t v59 = v22[7];
        uint64_t v60 = &v20[v59];
        uint64_t v61 = &v21[v59];
        uint64_t v62 = sub_100129B70();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v62 - 8) + 32))(v60, v61, v62);
        uint64_t v63 = v22[8];
        uint64_t v64 = &v20[v63];
        uint64_t v65 = &v21[v63];
        uint64_t v66 = sub_100129C50();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v66 - 8) + 32))(v64, v65, v66);
        _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v20, 0, 1, (uint64_t)v22);
      }
      uint64_t v67 = v6[10];
      uint64_t v68 = (void *)(a1 + v67);
      uint64_t v69 = (const void *)(a2 + v67);
      uint64_t v70 = sub_10012C6B0();
      if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v69, 1, v70))
      {
        uint64_t v71 = sub_1000053D8(&qword_10016B430);
        memcpy(v68, v69, *(void *)(*(void *)(v71 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v70 - 8) + 32))(v68, v69, v70);
        _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v68, 0, 1, v70);
      }
      *(void *)(a1 + v6[11]) = *(void *)(a2 + v6[11]);
      uint64_t v72 = v6[12];
      uint64_t v73 = a1 + v72;
      uint64_t v74 = a2 + v72;
      *(void *)uint64_t v73 = *(void *)v74;
      *(_WORD *)(v73 + 8) = *(_WORD *)(v74 + 8);
      uint64_t v75 = v6[13];
      uint64_t v76 = (void *)(a1 + v75);
      uint64_t v77 = (const void *)(a2 + v75);
      uint64_t v78 = sub_100129220();
      if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v77, 1, v78))
      {
        uint64_t v79 = sub_1000053D8(&qword_10016B420);
        memcpy(v76, v77, *(void *)(*(void *)(v79 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v78 - 8) + 32))(v76, v77, v78);
        _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v76, 0, 1, v78);
      }
      uint64_t v80 = v6[14];
      uint64_t v81 = (void *)(a1 + v80);
      uint64_t v82 = (const void *)(a2 + v80);
      uint64_t v83 = type metadata accessor for AggregateWeatherViewModel.SunEvent(0);
      if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v82, 1, v83))
      {
        uint64_t v84 = sub_1000053D8(&qword_10016B438);
        memcpy(v81, v82, *(void *)(*(void *)(v84 - 8) + 64));
      }
      else
      {
        swift_getEnumCaseMultiPayload();
        uint64_t v85 = sub_100129300();
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v85 - 8) + 32))(v81, v82, v85);
        swift_storeEnumTagMultiPayload();
        _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v81, 0, 1, v83);
      }
      uint64_t v86 = a1;
      uint64_t v87 = 2;
      uint64_t v88 = (uint64_t)v6;
      goto LABEL_23;
    }
    goto LABEL_7;
  }
  if (v8)
  {
    sub_1000A3648(a1, (void (*)(void))type metadata accessor for AggregateWeatherViewModel);
LABEL_7:
    size_t v24 = *(void *)(*(void *)(type metadata accessor for AdaptiveConditionsComplicationDataStatus() - 8) + 64);
    uint64_t v25 = (void *)a1;
    uint64_t v26 = (const void *)a2;
LABEL_8:
    memcpy(v25, v26, v24);
    goto LABEL_24;
  }
  uint64_t v27 = sub_100129330();
  uint64_t v130 = *(void *)(v27 - 8);
  uint64_t v28 = *(void (**)(uint64_t, uint64_t, uint64_t))(v130 + 40);
  v28(a1, a2, v27);
  uint64_t v29 = v6[5];
  uint64_t v30 = a1 + v29;
  uint64_t v31 = a2 + v29;
  uint64_t v32 = sub_10012A6B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 40))(v30, v31, v32);
  uint64_t v33 = v6[6];
  uint64_t v34 = a1 + v33;
  uint64_t v35 = a2 + v33;
  uint64_t v36 = sub_10012C250();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 40))(v34, v35, v36);
  *(void *)(a1 + v6[7]) = *(void *)(a2 + v6[7]);
  swift_bridgeObjectRelease();
  *(void *)(a1 + v6[8]) = *(void *)(a2 + v6[8]);
  swift_bridgeObjectRelease();
  uint64_t v37 = v6[9];
  uint64_t v38 = (char *)(a1 + v37);
  uint64_t v39 = (char *)(a2 + v37);
  uint64_t v40 = (int *)type metadata accessor for AirQualityViewModel();
  int v41 = _s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v38, 1, (uint64_t)v40);
  int v42 = _s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v39, 1, (uint64_t)v40);
  if (v41)
  {
    if (!v42)
    {
      (*(void (**)(char *, char *, uint64_t))(v130 + 32))(v38, v39, v27);
      uint64_t v43 = v40[5];
      uint64_t v44 = &v38[v43];
      uint64_t v45 = &v39[v43];
      uint64_t v46 = sub_100129300();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v46 - 8) + 32))(v44, v45, v46);
      *(void *)&v38[v40[6]] = *(void *)&v39[v40[6]];
      uint64_t v47 = v40[7];
      uint64_t v48 = &v38[v47];
      uint64_t v49 = &v39[v47];
      uint64_t v50 = sub_100129B70();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v50 - 8) + 32))(v48, v49, v50);
      uint64_t v51 = v40[8];
      uint64_t v52 = &v38[v51];
      uint64_t v53 = &v39[v51];
      uint64_t v54 = sub_100129C50();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v54 - 8) + 32))(v52, v53, v54);
      _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v38, 0, 1, (uint64_t)v40);
      goto LABEL_28;
    }
    goto LABEL_27;
  }
  if (v42)
  {
    sub_1000A3648((uint64_t)v38, (void (*)(void))type metadata accessor for AirQualityViewModel);
LABEL_27:
    uint64_t v90 = sub_1000053D8(&qword_10016B428);
    memcpy(v38, v39, *(void *)(*(void *)(v90 - 8) + 64));
    goto LABEL_28;
  }
  v28((uint64_t)v38, (uint64_t)v39, v27);
  uint64_t v117 = v40[5];
  uint64_t v118 = &v38[v117];
  uint64_t v119 = &v39[v117];
  uint64_t v120 = sub_100129300();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v120 - 8) + 40))(v118, v119, v120);
  *(void *)&v38[v40[6]] = *(void *)&v39[v40[6]];
  uint64_t v121 = v40[7];
  uint64_t v122 = &v38[v121];
  uint64_t v123 = &v39[v121];
  uint64_t v124 = sub_100129B70();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v124 - 8) + 40))(v122, v123, v124);
  uint64_t v125 = v40[8];
  uint64_t v126 = &v38[v125];
  uint64_t v127 = &v39[v125];
  uint64_t v128 = sub_100129C50();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v128 - 8) + 40))(v126, v127, v128);
LABEL_28:
  uint64_t v91 = v6[10];
  uint64_t v92 = (void *)(a1 + v91);
  uint64_t v93 = (const void *)(a2 + v91);
  uint64_t v94 = sub_10012C6B0();
  int v95 = _s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v92, 1, v94);
  int v96 = _s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v93, 1, v94);
  if (v95)
  {
    if (!v96)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v94 - 8) + 32))(v92, v93, v94);
      _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v92, 0, 1, v94);
      goto LABEL_34;
    }
    goto LABEL_33;
  }
  uint64_t v97 = *(void *)(v94 - 8);
  if (v96)
  {
    (*(void (**)(void *, uint64_t))(v97 + 8))(v92, v94);
LABEL_33:
    uint64_t v98 = sub_1000053D8(&qword_10016B430);
    memcpy(v92, v93, *(void *)(*(void *)(v98 - 8) + 64));
    goto LABEL_34;
  }
  (*(void (**)(void *, const void *, uint64_t))(v97 + 40))(v92, v93, v94);
LABEL_34:
  *(void *)(a1 + v6[11]) = *(void *)(a2 + v6[11]);
  swift_bridgeObjectRelease();
  uint64_t v99 = v6[12];
  uint64_t v100 = a1 + v99;
  uint64_t v101 = a2 + v99;
  *(void *)uint64_t v100 = *(void *)v101;
  *(_WORD *)(v100 + 8) = *(_WORD *)(v101 + 8);
  uint64_t v102 = v6[13];
  uint64_t v103 = (void *)(a1 + v102);
  uint64_t v104 = (const void *)(a2 + v102);
  uint64_t v105 = sub_100129220();
  int v106 = _s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v103, 1, v105);
  int v107 = _s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v104, 1, v105);
  if (v106)
  {
    if (!v107)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v105 - 8) + 32))(v103, v104, v105);
      _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v103, 0, 1, v105);
      goto LABEL_40;
    }
    goto LABEL_39;
  }
  uint64_t v108 = *(void *)(v105 - 8);
  if (v107)
  {
    (*(void (**)(void *, uint64_t))(v108 + 8))(v103, v105);
LABEL_39:
    uint64_t v109 = sub_1000053D8(&qword_10016B420);
    memcpy(v103, v104, *(void *)(*(void *)(v109 - 8) + 64));
    goto LABEL_40;
  }
  (*(void (**)(void *, const void *, uint64_t))(v108 + 40))(v103, v104, v105);
LABEL_40:
  uint64_t v110 = v6[14];
  uint64_t v111 = a1 + v110;
  uint64_t v112 = a2 + v110;
  uint64_t v113 = type metadata accessor for AggregateWeatherViewModel.SunEvent(0);
  int v114 = _s13WeatherWidget20WeatherDataViewModelOwet_0(v111, 1, v113);
  int v115 = _s13WeatherWidget20WeatherDataViewModelOwet_0(v112, 1, v113);
  if (v114)
  {
    if (!v115)
    {
      swift_getEnumCaseMultiPayload();
      uint64_t v116 = sub_100129300();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v116 - 8) + 32))(v111, v112, v116);
      swift_storeEnumTagMultiPayload();
      uint64_t v86 = v111;
      uint64_t v87 = 1;
      uint64_t v88 = v113;
LABEL_23:
      _s13WeatherWidget20WeatherDataViewModelOwst_0(v86, 0, v87, v88);
      goto LABEL_24;
    }
    goto LABEL_45;
  }
  if (v115)
  {
    sub_1000A3648(v111, (void (*)(void))type metadata accessor for AggregateWeatherViewModel.SunEvent);
LABEL_45:
    size_t v24 = *(void *)(*(void *)(sub_1000053D8(&qword_10016B438) - 8) + 64);
    uint64_t v25 = (void *)v111;
    uint64_t v26 = (const void *)v112;
    goto LABEL_8;
  }
  if (a1 != a2)
  {
    sub_1000A3648(v111, (void (*)(void))type metadata accessor for AggregateWeatherViewModel.SunEvent);
    swift_getEnumCaseMultiPayload();
    uint64_t v129 = sub_100129300();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v129 - 8) + 32))(v111, v112, v129);
    swift_storeEnumTagMultiPayload();
  }
LABEL_24:
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_release();
  return a1;
}

uint64_t sub_10009CCB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10009CCC8);
}

uint64_t sub_10009CCC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  type metadata accessor for AdaptiveConditionsComplicationDataStatus();
  sub_10000B3D0();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    return _s13WeatherWidget20WeatherDataViewModelOwet_0(a1, a2, v6);
  }
  else
  {
    unint64_t v9 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v9 >= 0xFFFFFFFF) {
      LODWORD(v9) = -1;
    }
    return (v9 + 1);
  }
}

uint64_t sub_10009CD54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10009CD68);
}

void sub_10009CD68(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  type metadata accessor for AdaptiveConditionsComplicationDataStatus();
  sub_10000B3D0();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    _s13WeatherWidget20WeatherDataViewModelOwst_0(a1, a2, a2, v8);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
}

uint64_t type metadata accessor for AdaptiveConditionsRectangularContentView()
{
  uint64_t result = qword_10016E910;
  if (!qword_10016E910) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10009CE38()
{
  uint64_t result = type metadata accessor for AdaptiveConditionsComplicationDataStatus();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_10009CED0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10009CEEC()
{
  uint64_t v2 = sub_10012B120();
  sub_10000DB98();
  uint64_t v4 = v3;
  __chkstk_darwin(v5);
  sub_1000212E4();
  sub_1000053D8(&qword_10016E948);
  sub_10000B3FC();
  __chkstk_darwin(v6);
  sub_10000DC50();
  uint64_t v9 = v8 - v7;
  *(void *)uint64_t v9 = sub_10012AF10();
  *(void *)(v9 + 8) = 0;
  *(unsigned char *)(v9 + 16) = 1;
  uint64_t v10 = sub_1000053D8(&qword_10016E950);
  sub_10009D044(v0, v9 + *(int *)(v10 + 44));
  sub_10012B100();
  sub_10000B38C(&qword_10016E958, &qword_10016E948);
  sub_10012B520();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v1, v2);
  return sub_10000D930(v9, &qword_10016E948);
}

uint64_t sub_10009D044@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v237 = a1;
  uint64_t v234 = a2;
  uint64_t v2 = sub_10012AF70();
  __chkstk_darwin(v2 - 8);
  uint64_t v204 = (char *)&v166 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v209 = sub_1000053D8(&qword_10016E960);
  v207 = *(void (***)(char *, uint64_t))(v209 - 8);
  __chkstk_darwin(v209);
  os_log_type_t v206 = (char *)&v166 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v236 = sub_1000053D8(&qword_10016E968);
  uint64_t v5 = __chkstk_darwin(v236);
  v205 = (char *)&v166 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v208 = (uint64_t)&v166 - v7;
  uint64_t v231 = sub_1000053D8(&qword_10016E970);
  __chkstk_darwin(v231);
  uint64_t v233 = (uint64_t)&v166 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v226 = sub_1000053D8(&qword_10016E978);
  __chkstk_darwin(v226);
  uint64_t v227 = (char *)&v166 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v232 = sub_1000053D8(&qword_10016E980);
  __chkstk_darwin(v232);
  uint64_t v228 = (char *)&v166 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v216 = sub_1000053D8(&qword_10016E988);
  __chkstk_darwin(v216);
  long long v175 = (uint64_t *)((char *)&v166 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v195 = sub_10012C6B0();
  uint64_t v174 = *(void *)(v195 - 8);
  __chkstk_darwin(v195);
  uint64_t v173 = (char *)&v166 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v197 = sub_1000053D8(&qword_10016E990);
  __chkstk_darwin(v197);
  uint64_t v198 = (uint64_t)&v166 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v213 = sub_1000053D8(&qword_10016E998);
  __chkstk_darwin(v213);
  os_log_type_t v221 = (char *)&v166 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v190 = sub_1000053D8(&qword_10016E9A0);
  __chkstk_darwin(v190);
  uint64_t v192 = (uint64_t)&v166 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v191 = sub_1000053D8(&qword_10016E9A8);
  __chkstk_darwin(v191);
  uint64_t v170 = (uint64_t *)((char *)&v166 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v196 = sub_1000053D8(&qword_10016E9B0);
  __chkstk_darwin(v196);
  uint64_t v193 = (char *)&v166 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v219 = sub_10012B120();
  uint64_t v218 = *(void *)(v219 - 8);
  __chkstk_darwin(v219);
  uint64_t v217 = (char *)&v166 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v183 = sub_1000053D8(&qword_10016E9B8);
  __chkstk_darwin(v183);
  uint64_t v182 = (uint64_t *)((char *)&v166 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v186 = sub_1000053D8(&qword_10016E9C0);
  uint64_t v185 = *(void *)(v186 - 8);
  __chkstk_darwin(v186);
  os_log_type_t v184 = (char *)&v166 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v203 = sub_1000053D8(&qword_10016E9C8);
  uint64_t v21 = __chkstk_darwin(v203);
  uint64_t v188 = (char *)&v166 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = __chkstk_darwin(v21);
  uint64_t v187 = (char *)&v166 - v24;
  __chkstk_darwin(v23);
  uint64_t v189 = (uint64_t)&v166 - v25;
  uint64_t v224 = sub_10012C0E0();
  uint64_t v215 = *(void *)(v224 - 8);
  __chkstk_darwin(v224);
  uint64_t v220 = (char *)&v166 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v210 = sub_1000053D8(&qword_10016E9D0);
  __chkstk_darwin(v210);
  uint64_t v212 = (uint64_t)&v166 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v200 = sub_1000053D8(&qword_10016E9D8);
  __chkstk_darwin(v200);
  uint64_t v201 = (uint64_t)&v166 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v211 = sub_1000053D8(&qword_10016E9E0);
  __chkstk_darwin(v211);
  uint64_t v202 = (char *)&v166 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v229 = sub_10012B8D0();
  uint64_t v223 = *(void *)(v229 - 8);
  __chkstk_darwin(v229);
  uint64_t v222 = (char *)&v166 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v179 = sub_1000053D8(&qword_10016E9E8);
  __chkstk_darwin(v179);
  uint64_t v181 = (uint64_t)&v166 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v180 = sub_1000053D8(&qword_10016E9F0);
  __chkstk_darwin(v180);
  uint64_t v169 = (uint64_t *)((char *)&v166 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v33 = sub_1000053D8(&qword_10016B098);
  uint64_t v34 = __chkstk_darwin(v33 - 8);
  uint64_t v172 = (char *)&v166 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = __chkstk_darwin(v34);
  uint64_t v177 = (char *)&v166 - v37;
  uint64_t v38 = __chkstk_darwin(v36);
  uint64_t v171 = (char *)&v166 - v39;
  __chkstk_darwin(v38);
  char v176 = (char *)&v166 - v40;
  uint64_t v199 = sub_1000053D8(&qword_10016B060);
  uint64_t v194 = *(void *)(v199 - 8);
  uint64_t v41 = __chkstk_darwin(v199);
  uint64_t v168 = (char *)&v166 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = __chkstk_darwin(v41);
  uint64_t v178 = (uint64_t)&v166 - v44;
  uint64_t v45 = __chkstk_darwin(v43);
  uint64_t v47 = (char *)&v166 - v46;
  __chkstk_darwin(v45);
  uint64_t v49 = (char *)&v166 - v48;
  uint64_t v50 = sub_1000053D8(&qword_10016E9F8);
  __chkstk_darwin(v50);
  uint64_t v52 = (void (**)(char *, uint64_t))((char *)&v166 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v225 = sub_1000053D8(&qword_10016EA00);
  __chkstk_darwin(v225);
  uint64_t v54 = (char *)&v166 - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v214 = type metadata accessor for ConditionState();
  uint64_t v55 = __chkstk_darwin(v214);
  uint64_t v57 = (unint64_t *)((char *)&v166 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v55);
  uint64_t v59 = (void **)((char *)&v166 - v58);
  uint64_t v60 = type metadata accessor for AggregateWeatherViewModel(0);
  __chkstk_darwin(v60);
  uint64_t v62 = (char *)&v166 - ((v61 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = type metadata accessor for AdaptiveConditionsComplicationDataStatus();
  __chkstk_darwin(v63 - 8);
  uint64_t v65 = (char *)&v166 - ((v64 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = sub_1000053D8(&qword_10016EA08);
  uint64_t v67 = __chkstk_darwin(v66 - 8);
  uint64_t v230 = (char *)&v166 - ((v68 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v67);
  uint64_t v235 = (char *)&v166 - v69;
  sub_1000A356C(v237, (uint64_t)v65, (void (*)(void))type metadata accessor for AdaptiveConditionsComplicationDataStatus);
  int v70 = _s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v65, 2, v60);
  if (v70)
  {
    if (v70 == 1)
    {
      uint64_t v71 = v222;
      sub_10012B8C0();
      uint64_t v72 = v223;
      uint64_t v73 = v229;
      (*(void (**)(char *, char *, uint64_t))(v223 + 16))(v227, v71, v229);
      swift_storeEnumTagMultiPayload();
      sub_1000A30DC();
      sub_1000A369C(&qword_10016EA48, (void (*)(uint64_t))&type metadata accessor for NoWeatherDataRectangularErrorView);
      uint64_t v74 = (uint64_t)v228;
      sub_10012B0E0();
      sub_10000B114(v74, v233, &qword_10016E980);
      swift_storeEnumTagMultiPayload();
      sub_1000A3030();
      sub_1000A348C();
      uint64_t v75 = (uint64_t)v235;
      sub_10012B0E0();
      sub_10000D930(v74, &qword_10016E980);
      (*(void (**)(char *, uint64_t))(v72 + 8))(v71, v73);
    }
    else
    {
      sub_10012AF60();
      v245._countAndFlagsBits = 0;
      v245._object = (void *)0xE000000000000000;
      sub_10012AF50(v245);
      sub_10012B620();
      sub_10012AF30();
      swift_release();
      v246._countAndFlagsBits = 0xD000000000000017;
      v246._object = (void *)0x800000010013A8F0;
      sub_10012AF50(v246);
      sub_10012AF90();
      uint64_t v240 = sub_10012B400();
      uint64_t v241 = v87;
      char v242 = v88 & 1;
      uint64_t v243 = v89;
      __int16 v244 = 256;
      uint64_t v90 = v217;
      sub_10012B0F0();
      uint64_t v91 = sub_1000053D8(&qword_10016EA10);
      unint64_t v92 = sub_1000A2FBC();
      uint64_t v93 = v206;
      sub_10012B520();
      (*(void (**)(char *, uint64_t))(v218 + 8))(v90, v219);
      sub_100008278(v240, v241, v242);
      swift_bridgeObjectRelease();
      sub_10012AF80();
      uint64_t v94 = sub_10012B400();
      uint64_t v96 = v95;
      char v98 = v97 & 1;
      uint64_t v240 = v91;
      uint64_t v241 = v92;
      swift_getOpaqueTypeConformance2();
      uint64_t v99 = (uint64_t)v205;
      uint64_t v100 = v209;
      sub_10012B4D0();
      sub_100008278(v94, v96, v98);
      swift_bridgeObjectRelease();
      v207[1](v93, v100);
      uint64_t v101 = v208;
      sub_10000B2F4(v99, v208, &qword_10016E968);
      sub_10000B114(v101, v233, &qword_10016E968);
      swift_storeEnumTagMultiPayload();
      sub_1000A3030();
      sub_1000A348C();
      uint64_t v75 = (uint64_t)v235;
      sub_10012B0E0();
      sub_10000D930(v101, &qword_10016E968);
    }
    uint64_t v102 = v234;
    uint64_t v103 = (uint64_t)v230;
    goto LABEL_26;
  }
  os_log_type_t v206 = v47;
  v207 = v52;
  uint64_t v208 = v50;
  uint64_t v209 = (uint64_t)v54;
  sub_10002FA1C((uint64_t)v65, (uint64_t)v62);
  type metadata accessor for AdaptiveConditionsRectangularContentView();
  sub_1000D7E94((uint64_t)v62, v59);
  sub_1000A356C((uint64_t)v59, (uint64_t)v57, (void (*)(void))type metadata accessor for ConditionState);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v77 = (uint64_t)v62;
  uint64_t v78 = v224;
  uint64_t v79 = v215;
  uint64_t v80 = v220;
  uint64_t v166 = v59;
  uint64_t v167 = v77;
  switch(EnumCaseMultiPayload)
  {
    case 1:
      uint64_t v124 = (uint64_t)v220;
      uint64_t v125 = (uint64_t)v221;
      uint64_t v126 = (char *)v57 + *(int *)(sub_1000053D8(&qword_10016EA90) + 48);
      (*(void (**)(uint64_t, unint64_t *, uint64_t))(v79 + 32))(v124, v57, v78);
      uint64_t v127 = v174;
      uint64_t v128 = (uint64_t)v173;
      (*(void (**)(char *, char *, uint64_t))(v174 + 32))(v173, v126, v195);
      uint64_t v129 = sub_10012B000();
      uint64_t v130 = (uint64_t)v175;
      *long long v175 = v129;
      *(void *)(v130 + 8) = 0;
      *(unsigned char *)(v130 + 16) = 0;
      uint64_t v131 = sub_1000053D8(&qword_10016EA98);
      sub_1000A28FC(v124, v128, v130 + *(int *)(v131 + 44));
      sub_10000B114(v130, v198, &qword_10016E988);
      swift_storeEnumTagMultiPayload();
      sub_1000A31F4(&qword_10016EA68, &qword_10016E9B0, &qword_10016EA70, &qword_10016E9A8);
      sub_10000B38C(&qword_10016EA78, &qword_10016E988);
      sub_10012B0E0();
      sub_10000B114(v125, v212, &qword_10016E998);
      swift_storeEnumTagMultiPayload();
      sub_1000A3158();
      sub_1000A33CC();
      uint64_t v121 = v209;
      sub_10012B0E0();
      sub_10000D930(v125, &qword_10016E998);
      sub_10000D930(v130, &qword_10016E988);
      (*(void (**)(uint64_t, uint64_t))(v127 + 8))(v128, v195);
      (*(void (**)(char *, uint64_t))(v79 + 8))(v220, v224);
      goto LABEL_13;
    case 2:
      (*(void (**)(char *, unint64_t *, uint64_t))(v215 + 32))(v220, v57, v224);
      uint64_t v104 = sub_10012B000();
      uint64_t v105 = (uint64_t)v182;
      *uint64_t v182 = v104;
      *(void *)(v105 + 8) = 0;
      *(unsigned char *)(v105 + 16) = 1;
      uint64_t v106 = sub_1000053D8(&qword_10016EAA8);
      sub_1000A075C(v105 + *(int *)(v106 + 44));
      int v107 = v217;
      sub_10012B0F0();
      uint64_t v108 = sub_10000B38C(&qword_10016EA58, &qword_10016E9B8);
      uint64_t v109 = v184;
      uint64_t v110 = v183;
      sub_10012B520();
      (*(void (**)(char *, uint64_t))(v218 + 8))(v107, v219);
      sub_10000D930(v105, &qword_10016E9B8);
      uint64_t v240 = sub_10012C0C0();
      uint64_t v241 = v111;
      uint64_t v238 = v110;
      uint64_t v239 = v108;
      swift_getOpaqueTypeConformance2();
      sub_10000822C();
      uint64_t v112 = (uint64_t)v188;
      uint64_t v113 = v186;
      sub_10012B4F0();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v185 + 8))(v109, v113);
      sub_10012AF80();
      uint64_t v114 = sub_10012B400();
      uint64_t v116 = v115;
      LOBYTE(v107) = v117 & 1;
      uint64_t v118 = (uint64_t)v187;
      sub_10012AC40();
      sub_100008278(v114, v116, (char)v107);
      swift_bridgeObjectRelease();
      sub_10000D930(v112, &qword_10016E9C8);
      uint64_t v119 = v189;
      sub_10000B2F4(v118, v189, &qword_10016E9C8);
      sub_10000B114(v119, v201, &qword_10016E9C8);
      swift_storeEnumTagMultiPayload();
      sub_1000A31F4(&qword_10016EA38, &qword_10016E9F8, &qword_10016EA40, &qword_10016E9F0);
      sub_1000A32C0();
      uint64_t v120 = (uint64_t)v202;
      sub_10012B0E0();
      sub_10000B114(v120, v212, &qword_10016E9E0);
      swift_storeEnumTagMultiPayload();
      sub_1000A3158();
      sub_1000A33CC();
      uint64_t v121 = v209;
      sub_10012B0E0();
      sub_10000D930(v120, &qword_10016E9E0);
      sub_10000D930(v119, &qword_10016E9C8);
      (*(void (**)(char *, uint64_t))(v79 + 8))(v80, v224);
LABEL_13:
      uint64_t v132 = v233;
      uint64_t v102 = v234;
      uint64_t v85 = (uint64_t)v227;
      uint64_t v133 = (uint64_t)v228;
      uint64_t v103 = (uint64_t)v230;
      goto LABEL_25;
    case 3:
      uint64_t v122 = (uint64_t)v176;
      sub_10012C1C0();
      uint64_t v123 = v199;
      if (_s13WeatherWidget20WeatherDataViewModelOwet_0(v122, 1, v199) == 1)
      {
        uint64_t v102 = v234;
        uint64_t v85 = (uint64_t)v227;
        uint64_t v103 = (uint64_t)v230;
LABEL_19:
        sub_10000D930(v122, &qword_10016B098);
        uint64_t v143 = v222;
        sub_10012B8C0();
        uint64_t v144 = v223;
        uint64_t v145 = v229;
        (*(void (**)(uint64_t, char *, uint64_t))(v223 + 16))(v181, v143, v229);
        swift_storeEnumTagMultiPayload();
        sub_10000B38C(&qword_10016EA40, &qword_10016E9F0);
        sub_1000A369C(&qword_10016EA48, (void (*)(uint64_t))&type metadata accessor for NoWeatherDataRectangularErrorView);
        uint64_t v146 = (uint64_t)v207;
        sub_10012B0E0();
        (*(void (**)(char *, uint64_t))(v144 + 8))(v143, v145);
        uint64_t v147 = v212;
        uint64_t v148 = v201;
        goto LABEL_23;
      }
      os_log_type_t v141 = *(void (**)(char *, uint64_t, uint64_t))(v194 + 32);
      v141(v49, v122, v123);
      uint64_t v122 = (uint64_t)v171;
      sub_10012C1B0();
      int v142 = _s13WeatherWidget20WeatherDataViewModelOwet_0(v122, 1, v123);
      uint64_t v85 = (uint64_t)v227;
      uint64_t v103 = (uint64_t)v230;
      if (v142 == 1)
      {
        (*(void (**)(char *, uint64_t))(v194 + 8))(v49, v123);
        uint64_t v102 = v234;
        goto LABEL_19;
      }
      uint64_t v157 = (uint64_t)v206;
      v141(v206, v122, v123);
      uint64_t v158 = sub_10012B000();
      uint64_t v159 = (uint64_t)v169;
      *uint64_t v169 = v158;
      *(void *)(v159 + 8) = 0;
      *(unsigned char *)(v159 + 16) = 1;
      uint64_t v160 = sub_1000053D8(&qword_10016EAB0);
      uint64_t v161 = v157;
      sub_10009F3B8((uint64_t)v49, v157, v159 + *(int *)(v160 + 44));
      sub_10000B114(v159, v181, &qword_10016E9F0);
      swift_storeEnumTagMultiPayload();
      sub_10000B38C(&qword_10016EA40, &qword_10016E9F0);
      sub_1000A369C(&qword_10016EA48, (void (*)(uint64_t))&type metadata accessor for NoWeatherDataRectangularErrorView);
      uint64_t v146 = (uint64_t)v207;
      sub_10012B0E0();
      sub_10000D930(v159, &qword_10016E9F0);
      uint64_t v162 = *(void (**)(uint64_t, uint64_t))(v194 + 8);
      v162(v161, v123);
      v162((uint64_t)v49, v123);
      uint64_t v102 = v234;
      uint64_t v147 = v212;
      uint64_t v148 = v201;
LABEL_23:
      sub_10000B114(v146, v148, &qword_10016E9F8);
      swift_storeEnumTagMultiPayload();
      sub_1000A31F4(&qword_10016EA38, &qword_10016E9F8, &qword_10016EA40, &qword_10016E9F0);
      sub_1000A32C0();
      uint64_t v163 = (uint64_t)v202;
      sub_10012B0E0();
      sub_10000B114(v163, v147, &qword_10016E9E0);
      swift_storeEnumTagMultiPayload();
      sub_1000A3158();
      sub_1000A33CC();
      uint64_t v121 = v209;
      sub_10012B0E0();
      sub_10000D930(v163, &qword_10016E9E0);
      sub_10000D930(v146, &qword_10016E9F8);
      uint64_t v133 = (uint64_t)v228;
      goto LABEL_24;
    default:
      unint64_t v82 = *v57;
      uint64_t v81 = (void *)v57[1];
      uint64_t v83 = (uint64_t)v177;
      sub_10012C1C0();
      uint64_t v84 = v199;
      if (_s13WeatherWidget20WeatherDataViewModelOwet_0(v83, 1, v199) == 1)
      {
        swift_bridgeObjectRelease();
        uint64_t v85 = (uint64_t)v227;
        uint64_t v86 = (uint64_t)v193;
LABEL_16:
        sub_10000D930(v83, &qword_10016B098);
        uint64_t v137 = v222;
        sub_10012B8C0();
        uint64_t v138 = v223;
        uint64_t v139 = v229;
        (*(void (**)(uint64_t, char *, uint64_t))(v223 + 16))(v192, v137, v229);
        swift_storeEnumTagMultiPayload();
        sub_10000B38C(&qword_10016EA70, &qword_10016E9A8);
        sub_1000A369C(&qword_10016EA48, (void (*)(uint64_t))&type metadata accessor for NoWeatherDataRectangularErrorView);
        sub_10012B0E0();
        (*(void (**)(char *, uint64_t))(v138 + 8))(v137, v139);
        uint64_t v102 = v234;
        uint64_t v133 = (uint64_t)v228;
        uint64_t v140 = v212;
        goto LABEL_21;
      }
      uint64_t v134 = v194;
      uint64_t v135 = *(void (**)(uint64_t, uint64_t, uint64_t))(v194 + 32);
      v135(v178, v83, v84);
      uint64_t v83 = (uint64_t)v172;
      sub_10012C1B0();
      int v136 = _s13WeatherWidget20WeatherDataViewModelOwet_0(v83, 1, v84);
      uint64_t v86 = (uint64_t)v193;
      if (v136 == 1)
      {
        swift_bridgeObjectRelease();
        (*(void (**)(uint64_t, uint64_t))(v134 + 8))(v178, v84);
        uint64_t v85 = (uint64_t)v227;
        goto LABEL_16;
      }
      uint64_t v149 = (uint64_t)v168;
      v135((uint64_t)v168, v83, v84);
      uint64_t v150 = sub_10012B000();
      uint64_t v151 = (uint64_t)v170;
      *uint64_t v170 = v150;
      *(void *)(v151 + 8) = 0;
      *(unsigned char *)(v151 + 16) = 1;
      uint64_t v152 = v151 + *(int *)(sub_1000053D8(&qword_10016EAA0) + 44);
      unint64_t v153 = v82;
      uint64_t v154 = v178;
      sub_1000A0AA4(v153, v81, v77, v178, v149, v152);
      swift_bridgeObjectRelease();
      sub_10000B114(v151, v192, &qword_10016E9A8);
      swift_storeEnumTagMultiPayload();
      sub_10000B38C(&qword_10016EA70, &qword_10016E9A8);
      sub_1000A369C(&qword_10016EA48, (void (*)(uint64_t))&type metadata accessor for NoWeatherDataRectangularErrorView);
      sub_10012B0E0();
      sub_10000D930(v151, &qword_10016E9A8);
      uint64_t v155 = *(void (**)(uint64_t, uint64_t))(v134 + 8);
      v155(v149, v84);
      v155(v154, v84);
      uint64_t v102 = v234;
      uint64_t v85 = (uint64_t)v227;
      uint64_t v133 = (uint64_t)v228;
      uint64_t v140 = v212;
LABEL_21:
      sub_10000B114(v86, v198, &qword_10016E9B0);
      swift_storeEnumTagMultiPayload();
      sub_1000A31F4(&qword_10016EA68, &qword_10016E9B0, &qword_10016EA70, &qword_10016E9A8);
      sub_10000B38C(&qword_10016EA78, &qword_10016E988);
      uint64_t v156 = (uint64_t)v221;
      sub_10012B0E0();
      sub_10000B114(v156, v140, &qword_10016E998);
      swift_storeEnumTagMultiPayload();
      sub_1000A3158();
      sub_1000A33CC();
      uint64_t v121 = v209;
      sub_10012B0E0();
      sub_10000D930(v156, &qword_10016E998);
      sub_10000D930(v86, &qword_10016E9B0);
      uint64_t v103 = (uint64_t)v230;
LABEL_24:
      uint64_t v132 = v233;
LABEL_25:
      sub_10000B114(v121, v85, &qword_10016EA00);
      swift_storeEnumTagMultiPayload();
      sub_1000A30DC();
      sub_1000A369C(&qword_10016EA48, (void (*)(uint64_t))&type metadata accessor for NoWeatherDataRectangularErrorView);
      sub_10012B0E0();
      sub_10000B114(v133, v132, &qword_10016E980);
      swift_storeEnumTagMultiPayload();
      sub_1000A3030();
      sub_1000A348C();
      uint64_t v75 = (uint64_t)v235;
      sub_10012B0E0();
      sub_10000D930(v133, &qword_10016E980);
      sub_10000D930(v121, &qword_10016EA00);
      sub_1000A3648((uint64_t)v166, (void (*)(void))type metadata accessor for ConditionState);
      sub_1000A3648(v167, (void (*)(void))type metadata accessor for AggregateWeatherViewModel);
LABEL_26:
      sub_10000B114(v75, v103, &qword_10016EA08);
      sub_10000B114(v103, v102, &qword_10016EA08);
      uint64_t v164 = v102 + *(int *)(sub_1000053D8(&qword_10016EA88) + 48);
      *(void *)uint64_t v164 = 0;
      *(unsigned char *)(v164 + 8) = 1;
      sub_10000D930(v75, &qword_10016EA08);
      return sub_10000D930(v103, &qword_10016EA08);
  }
}

uint64_t sub_10009F3B8@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v77 = a2;
  uint64_t v73 = a1;
  uint64_t v81 = a3;
  uint64_t v3 = sub_10012BEB0();
  uint64_t v79 = *(void *)(v3 - 8);
  uint64_t v80 = v3;
  __chkstk_darwin(v3);
  uint64_t v78 = (char *)v60 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = sub_10012B940();
  uint64_t v84 = *(void *)(v68 - 8);
  __chkstk_darwin(v68);
  uint64_t v67 = (char *)v60 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10012CDD0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)v60 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)v60 - v11;
  uint64_t v13 = sub_10012BEC0();
  uint64_t v75 = *(void *)(v13 - 8);
  uint64_t v76 = v13;
  uint64_t v14 = __chkstk_darwin(v13);
  uint64_t v74 = (char *)v60 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v83 = (char *)v60 - v16;
  uint64_t v17 = sub_10012BBA0();
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v20 = (char *)v60 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_1000053D8(&qword_10016BE70);
  uint64_t v22 = __chkstk_darwin(v21 - 8);
  uint64_t v82 = (uint64_t)v60 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  uint64_t v72 = (uint64_t)v60 - v24;
  sub_10009FBC4();
  type metadata accessor for AggregateWeatherViewModel(0);
  sub_10012C240();
  uint64_t v25 = sub_10012BB50();
  uint64_t v27 = v26;
  (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
  uint64_t v85 = v25;
  uint64_t v86 = v27;
  sub_10000822C();
  uint64_t v28 = sub_10012B420();
  uint64_t v30 = v29;
  LOBYTE(v27) = v31 & 1;
  sub_10012B230();
  uint64_t v32 = sub_10012B3F0();
  uint64_t v69 = v33;
  uint64_t v70 = v32;
  int v66 = v34;
  uint64_t v71 = v35;
  swift_release();
  sub_100008278(v28, v30, v27);
  swift_bridgeObjectRelease();
  sub_10012B8F0();
  uint64_t v36 = v10;
  sub_10012CDC0();
  uint64_t v61 = *(void (**)(char *, uint64_t))(v7 + 8);
  v61(v12, v6);
  unsigned int v64 = enum case for WeatherFormatPlaceholder.none(_:);
  uint64_t v37 = v84;
  uint64_t v63 = *(void (**)(char *))(v84 + 104);
  uint64_t v39 = v67;
  uint64_t v38 = v68;
  v63(v67);
  uint64_t v62 = sub_10012A090();
  sub_10012A080();
  v60[1] = sub_1000053D8(&qword_10016B060);
  v60[0] = sub_1000A369C(&qword_10016B068, (void (*)(uint64_t))&type metadata accessor for NSUnitTemperature.BaseWeatherFormatStyle);
  uint64_t v73 = sub_100129020();
  uint64_t v65 = v40;
  swift_release();
  uint64_t v41 = *(void (**)(char *, uint64_t))(v37 + 8);
  uint64_t v84 = v37 + 8;
  v41(v39, v38);
  uint64_t v42 = v61;
  v61(v36, v6);
  sub_10012B8F0();
  sub_10012CDC0();
  v42(v12, v6);
  ((void (*)(char *, void, uint64_t))v63)(v39, v64, v38);
  sub_10012A080();
  uint64_t v77 = sub_100129020();
  swift_release();
  v41(v39, v38);
  v42(v36, v6);
  sub_10012B230();
  sub_10012B5E0();
  (*(void (**)(char *, void, uint64_t))(v79 + 104))(v78, enum case for TemperatureHighLowText.Style.textLabels(_:), v80);
  sub_10012B7B0();
  uint64_t v43 = v83;
  sub_10012BEA0();
  uint64_t v44 = v72;
  uint64_t v45 = v82;
  sub_10000B114(v72, v82, &qword_10016BE70);
  LOBYTE(v85) = v66 & 1;
  uint64_t v47 = v74;
  uint64_t v46 = v75;
  uint64_t v48 = *(void (**)(char *, char *, uint64_t))(v75 + 16);
  uint64_t v49 = v43;
  uint64_t v50 = v76;
  v48(v74, v49, v76);
  uint64_t v51 = v45;
  uint64_t v52 = v81;
  sub_10000B114(v51, v81, &qword_10016BE70);
  uint64_t v53 = sub_1000053D8(&qword_10016EAB8);
  uint64_t v54 = v52 + *(int *)(v53 + 48);
  uint64_t v55 = v52;
  LOBYTE(v52) = v85;
  uint64_t v56 = v69;
  uint64_t v57 = v70;
  *(void *)uint64_t v54 = v70;
  *(void *)(v54 + 8) = v56;
  *(unsigned char *)(v54 + 16) = v52;
  *(void *)(v54 + 24) = v71;
  v48((char *)(v55 + *(int *)(v53 + 64)), v47, v50);
  sub_10000B0B0(v57, v56, v52);
  uint64_t v58 = *(void (**)(char *, uint64_t))(v46 + 8);
  swift_bridgeObjectRetain();
  v58(v83, v50);
  sub_10000D930(v44, &qword_10016BE70);
  v58(v47, v50);
  sub_100008278(v57, v56, v85);
  swift_bridgeObjectRelease();
  return sub_10000D930(v82, &qword_10016BE70);
}

uint64_t sub_10009FBC4()
{
  uint64_t v0 = sub_1000053D8(&qword_10016C058);
  __chkstk_darwin(v0 - 8);
  sub_10000DBCC();
  uint64_t v82 = v1;
  sub_10000DCA8();
  sub_10012B120();
  sub_10000DB98();
  __chkstk_darwin(v2);
  sub_10000DBCC();
  sub_1000053D8(&qword_10016EAC0);
  sub_10000DB98();
  __chkstk_darwin(v3);
  sub_10000DBCC();
  sub_10000DCA8();
  uint64_t v87 = sub_10012B940();
  sub_10000DB98();
  uint64_t v80 = v4;
  __chkstk_darwin(v5);
  sub_10000DBCC();
  uint64_t v86 = v6;
  sub_10000DCA8();
  sub_10012CDA0();
  sub_10000DB98();
  __chkstk_darwin(v7);
  sub_10000DBCC();
  sub_10000DCA8();
  uint64_t v85 = sub_10012CDD0();
  sub_10000DB98();
  uint64_t v78 = v8;
  __chkstk_darwin(v9);
  sub_10000DBCC();
  uint64_t v88 = v10;
  uint64_t v84 = sub_1000053D8(&qword_10016B060);
  sub_10000DB98();
  uint64_t v77 = v11;
  __chkstk_darwin(v12);
  sub_10000DC50();
  uint64_t v15 = v14 - v13;
  sub_100129160();
  sub_10000DB98();
  __chkstk_darwin(v16);
  sub_10000DBCC();
  sub_10000DCA8();
  uint64_t v83 = sub_10012BBA0();
  sub_10000DB98();
  uint64_t v18 = v17;
  __chkstk_darwin(v19);
  sub_10000DC50();
  uint64_t v22 = v21 - v20;
  uint64_t v23 = sub_10012AF70();
  __chkstk_darwin(v23 - 8);
  sub_1000212E4();
  uint64_t v24 = sub_100129380();
  sub_10000DB98();
  uint64_t v26 = v25;
  __chkstk_darwin(v27);
  sub_10000DC50();
  uint64_t v30 = v29 - v28;
  uint64_t v31 = sub_1001293A0();
  sub_10000DB98();
  uint64_t v33 = v32;
  __chkstk_darwin(v34);
  sub_10000DC50();
  uint64_t v37 = v36 - v35;
  sub_100129340();
  sub_100129390();
  (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v37, v31);
  LOBYTE(v33) = sub_100129350();
  (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v30, v24);
  sub_10012AF60();
  v89._countAndFlagsBits = 0;
  v89._object = (void *)0xE000000000000000;
  sub_10012AF50(v89);
  type metadata accessor for AggregateWeatherViewModel(0);
  sub_10012C240();
  sub_10012BB60();
  (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v22, v83);
  sub_10012B620();
  sub_10012AF30();
  swift_release();
  v90._countAndFlagsBits = 32;
  v90._object = (void *)0xE100000000000000;
  sub_10012AF50(v90);
  sub_10012C190();
  sub_10012B8F0();
  if (v33)
  {
    sub_10012CDB0();
    sub_1000A3764();
    sub_1000A37BC(v38);
    v39();
    uint64_t v40 = v80;
    sub_1000A37A4(v80);
    unsigned int v76 = v41;
    sub_1000A37E4();
    v42();
    sub_10012A090();
    sub_10012A080();
    sub_1000A369C(&qword_10016EAC8, (void (*)(uint64_t))&type metadata accessor for NSUnitTemperature.AttributedWeatherFormatStyle);
    sub_100129010();
    swift_release();
    uint64_t v81 = *(void (**)(uint64_t, uint64_t))(v80 + 8);
    (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v86, v87);
    sub_10000B424();
    v43();
    sub_1000A3784();
    sub_1000A37D0();
    v44();
    sub_10012AF20();
    sub_10000B424();
    v45();
  }
  else
  {
    unsigned int v76 = enum case for WeatherFormatPlaceholder.none(_:);
    uint64_t v46 = v80;
    sub_1000A37A4(v80);
    sub_1000A37E4();
    v47();
    sub_10012A090();
    sub_10012A080();
    sub_1000A369C(&qword_10016B068, (void (*)(uint64_t))&type metadata accessor for NSUnitTemperature.BaseWeatherFormatStyle);
    uint64_t v48 = sub_100129020();
    uint64_t v50 = v49;
    swift_release();
    uint64_t v81 = *(void (**)(uint64_t, uint64_t))(v80 + 8);
    (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v86, v87);
    sub_1000A3764();
    sub_1000A37BC(v51);
    v52();
    sub_1000A3784();
    sub_1000A37D0();
    v53();
    v92._countAndFlagsBits = v48;
    v92._object = v50;
    sub_10012AF40(v92);
    swift_bridgeObjectRelease();
  }
  v91._countAndFlagsBits = 0;
  v91._object = (void *)0xE000000000000000;
  sub_10012AF50(v91);
  sub_10012AF90();
  uint64_t v54 = sub_10012B400();
  uint64_t v73 = v55;
  uint64_t v74 = v54;
  char v75 = v56 & 1;
  sub_10012B340();
  sub_10012B240();
  swift_release();
  uint64_t v57 = sub_10012B3F0();
  uint64_t v59 = v58;
  char v61 = v60;
  swift_release();
  sub_10012B0F0();
  sub_10012B520();
  sub_10000B424();
  v62();
  sub_100008278(v57, v59, v61 & 1);
  swift_bridgeObjectRelease();
  sub_10012AF60();
  v93._countAndFlagsBits = 0;
  v93._object = (void *)0xE000000000000000;
  sub_10012AF50(v93);
  sub_10012C190();
  sub_10012CCA0();
  _s13WeatherWidget20WeatherDataViewModelOwst_0(v82, 1, 1, v31);
  sub_10012B900();
  swift_bridgeObjectRelease();
  sub_10000D930(v82, &qword_10016C058);
  v79(v86, v76, v87);
  sub_10012A090();
  sub_10012A080();
  sub_1000A369C(&qword_10016B068, (void (*)(uint64_t))&type metadata accessor for NSUnitTemperature.BaseWeatherFormatStyle);
  uint64_t v63 = sub_100129020();
  uint64_t v65 = v64;
  swift_release();
  v81(v86, v87);
  v78(v88, v85);
  v77(v15, v84);
  v94._countAndFlagsBits = v63;
  v94._object = v65;
  sub_10012AF40(v94);
  swift_bridgeObjectRelease();
  v95._countAndFlagsBits = 0x7365657267656420;
  v95._object = (void *)0xE800000000000000;
  sub_10012AF50(v95);
  sub_10012AF90();
  uint64_t v66 = sub_10012B400();
  uint64_t v68 = v67;
  char v70 = v69 & 1;
  swift_getOpaqueTypeConformance2();
  sub_10012B4D0();
  sub_100008278(v66, v68, v70);
  swift_bridgeObjectRelease();
  sub_100008278(v74, v73, v75);
  swift_bridgeObjectRelease();
  sub_10000B424();
  return v71();
}

uint64_t sub_1000A075C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v46 = a1;
  uint64_t v1 = sub_100129160();
  __chkstk_darwin(v1 - 8);
  uint64_t v2 = sub_1000053D8(&qword_10016BE70);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v45 = (uint64_t)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v44 = (uint64_t)&v40 - v5;
  sub_10009FBC4();
  sub_10012AF80();
  uint64_t v6 = sub_10012B400();
  uint64_t v8 = v7;
  char v10 = v9 & 1;
  sub_10012B340();
  sub_10012B240();
  swift_release();
  uint64_t v11 = sub_10012B3F0();
  uint64_t v42 = v12;
  uint64_t v43 = v11;
  uint64_t v41 = v13;
  char v15 = v14;
  swift_release();
  char v16 = v15 & 1;
  sub_100008278(v6, v8, v10);
  swift_bridgeObjectRelease();
  sub_10012C080();
  uint64_t v17 = sub_10012B410();
  uint64_t v19 = v18;
  char v21 = v20 & 1;
  sub_10012B230();
  uint64_t v22 = sub_10012B3F0();
  uint64_t v24 = v23;
  char v26 = v25;
  uint64_t v28 = v27;
  swift_release();
  LOBYTE(v8) = v26 & 1;
  sub_100008278(v17, v19, v21);
  swift_bridgeObjectRelease();
  uint64_t v30 = v44;
  uint64_t v29 = v45;
  sub_10000B114(v44, v45, &qword_10016BE70);
  char v47 = v16;
  uint64_t v31 = v46;
  sub_10000B114(v29, v46, &qword_10016BE70);
  uint64_t v32 = sub_1000053D8(&qword_10016EAD0);
  uint64_t v33 = v31 + *(int *)(v32 + 48);
  uint64_t v35 = v42;
  uint64_t v34 = v43;
  uint64_t v36 = v41;
  *(void *)uint64_t v33 = v43;
  *(void *)(v33 + 8) = v36;
  *(unsigned char *)(v33 + 16) = v16;
  *(void *)(v33 + 24) = v35;
  *(_OWORD *)(v33 + 32) = xmmword_100133300;
  uint64_t v37 = v31 + *(int *)(v32 + 64);
  *(void *)uint64_t v37 = v22;
  *(void *)(v37 + 8) = v24;
  *(unsigned char *)(v37 + 16) = v8;
  *(void *)(v37 + 24) = v28;
  uint64_t v38 = v34;
  sub_10000B0B0(v34, v36, v16);
  swift_bridgeObjectRetain();
  sub_10000B0B0(v22, v24, v8);
  swift_bridgeObjectRetain();
  sub_10000D930(v30, &qword_10016BE70);
  sub_100008278(v22, v24, v8);
  swift_bridgeObjectRelease();
  sub_100008278(v38, v36, v47);
  swift_bridgeObjectRelease();
  return sub_10000D930(v29, &qword_10016BE70);
}

uint64_t sub_1000A0AA4@<X0>(unint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v158 = a5;
  uint64_t v157 = a4;
  uint64_t v174 = a3;
  unint64_t v187 = a1;
  uint64_t v188 = a2;
  uint64_t v164 = a6;
  uint64_t v160 = sub_10012BEB0();
  uint64_t v159 = *(void *)(v160 - 8);
  __chkstk_darwin(v160);
  uint64_t v161 = (char *)&v137 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v166 = sub_10012BEC0();
  uint64_t v165 = *(void *)(v166 - 8);
  uint64_t v7 = __chkstk_darwin(v166);
  uint64_t v163 = (char *)&v137 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v162 = (char *)&v137 - v9;
  uint64_t v10 = sub_1000053D8(&qword_10016C058);
  __chkstk_darwin(v10 - 8);
  uint64_t v152 = (uint64_t)&v137 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v151 = sub_10012B120();
  uint64_t v150 = *(void *)(v151 - 8);
  __chkstk_darwin(v151);
  uint64_t v149 = (char *)&v137 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v156 = sub_1000053D8(&qword_10016EAC0);
  uint64_t v155 = *(void *)(v156 - 8);
  __chkstk_darwin(v156);
  long long v175 = (char *)&v137 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1000053D8(&qword_10016BE70);
  uint64_t v15 = __chkstk_darwin(v14 - 8);
  uint64_t v178 = (uint64_t)&v137 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v184 = (uint64_t)&v137 - v17;
  uint64_t v173 = sub_10012BBA0();
  uint64_t v148 = *(void *)(v173 - 8);
  __chkstk_darwin(v173);
  uint64_t v172 = (char *)&v137 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v183 = sub_10012B940();
  uint64_t v179 = *(void **)(v183 - 8);
  __chkstk_darwin(v183);
  uint64_t v177 = (char *)&v137 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v143 = (void *)sub_10012CDA0();
  uint64_t v142 = *(v143 - 1);
  __chkstk_darwin(v143);
  os_log_type_t v141 = (char *)&v137 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v176 = sub_10012CDD0();
  uint64_t v170 = *(void (**)(char *, uint64_t))(v176 - 8);
  uint64_t v21 = __chkstk_darwin(v176);
  unint64_t v153 = (char *)&v137 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  uint64_t v167 = (char *)&v137 - v23;
  uint64_t v181 = sub_1000053D8(&qword_10016B060);
  uint64_t v146 = *(void *)(v181 - 8);
  __chkstk_darwin(v181);
  uint64_t v144 = (uint64_t)&v137 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v140 = sub_100129160();
  uint64_t v139 = *(void *)(v140 - 8);
  __chkstk_darwin(v140);
  uint64_t v138 = (char *)&v137 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_10012AF70();
  __chkstk_darwin(v26 - 8);
  uint64_t v185 = (char *)&v137 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = sub_100129380();
  uint64_t v29 = *(void *)(v28 - 8);
  __chkstk_darwin(v28);
  uint64_t v31 = (char *)&v137 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v171 = sub_1001293A0();
  uint64_t v32 = *(void *)(v171 - 8);
  __chkstk_darwin(v171);
  uint64_t v34 = (char *)&v137 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = sub_1000053D8(&qword_10016EAD8);
  uint64_t v36 = __chkstk_darwin(v35 - 8);
  uint64_t v154 = (uint64_t)&v137 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = __chkstk_darwin(v36);
  uint64_t v40 = (char *)&v137 - v39;
  __chkstk_darwin(v38);
  uint64_t v182 = (uint64_t)&v137 - v41;
  unsigned __int8 v42 = sub_10012B170();
  unsigned __int8 v43 = sub_10012B190();
  char v44 = sub_10012B180();
  sub_10012B180();
  if (sub_10012B180() != v42) {
    char v44 = sub_10012B180();
  }
  sub_10012B180();
  if (sub_10012B180() != v43) {
    char v44 = sub_10012B180();
  }
  uint64_t v45 = v176;
  *uint64_t v40 = v44;
  uint64_t v46 = sub_1000053D8(&qword_10016EAE0);
  sub_1000A212C(v187, v188, &v40[*(int *)(v46 + 44)]);
  sub_10000B2F4((uint64_t)v40, v182, &qword_10016EAD8);
  sub_100129340();
  sub_100129390();
  (*(void (**)(char *, uint64_t))(v32 + 8))(v34, v171);
  char v47 = sub_100129350();
  (*(void (**)(char *, uint64_t))(v29 + 8))(v31, v28);
  sub_10012AF60();
  v193._countAndFlagsBits = 0;
  v193._object = (void *)0xE000000000000000;
  sub_10012AF50(v193);
  uint64_t v147 = type metadata accessor for AggregateWeatherViewModel(0);
  uint64_t v48 = v144;
  uint64_t v145 = v174 + *(int *)(v147 + 24);
  sub_10012C190();
  uint64_t v49 = v167;
  sub_10012B8F0();
  if (v47)
  {
    uint64_t v50 = v141;
    sub_10012CDB0();
    uint64_t v51 = (void (*)(char *, uint64_t))*((void *)v170 + 1);
    uint64_t v169 = ((unint64_t)v170 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    uint64_t v170 = v51;
    v51(v49, v45);
    uint64_t v52 = v179;
    uint64_t v53 = (void (*)(void))v179[13];
    unint64_t v187 = (unint64_t)(v179 + 13) & 0xFFFFFFFFFFFFLL | 0xB2E4000000000000;
    uint64_t v54 = v177;
    LODWORD(v188) = enum case for WeatherFormatPlaceholder.none(_:);
    uint64_t v55 = v183;
    uint64_t v180 = (void (*)(char *, void, uint64_t))v53;
    v53(v177);
    uint64_t v186 = sub_10012A090();
    sub_10012A080();
    sub_1000A369C(&qword_10016EAC8, (void (*)(uint64_t))&type metadata accessor for NSUnitTemperature.AttributedWeatherFormatStyle);
    char v56 = v138;
    uint64_t v57 = v181;
    uint64_t v58 = v143;
    sub_100129010();
    swift_release();
    uint64_t v59 = (void *)v52[1];
    uint64_t v168 = (unint64_t)(v52 + 1) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    uint64_t v179 = v59;
    ((void (*)(char *, uint64_t))v59)(v54, v55);
    (*(void (**)(char *, void *))(v142 + 8))(v50, v58);
    char v60 = *(void **)(v146 + 8);
    uint64_t v142 = (v146 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    uint64_t v143 = v60;
    ((void (*)(uint64_t, uint64_t))v60)(v48, v57);
    sub_10012AF20();
    char v61 = v56;
    uint64_t v62 = v54;
    (*(void (**)(char *, uint64_t))(v139 + 8))(v61, v140);
    v194._countAndFlagsBits = 32;
    v194._object = (void *)0xE100000000000000;
    sub_10012AF50(v194);
    uint64_t v63 = v48;
    unsigned int v64 = v172;
    sub_10012C240();
    uint64_t v65 = sub_10012BB50();
    uint64_t v67 = v66;
    uint64_t v68 = *(char **)(v148 + 8);
    uint64_t v140 = (v148 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    os_log_type_t v141 = v68;
    ((void (*)(char *, uint64_t))v68)(v64, v173);
    v195._countAndFlagsBits = v65;
    v195._object = v67;
    sub_10012AF40(v195);
    swift_bridgeObjectRelease();
    v196._countAndFlagsBits = 0;
    v196._object = (void *)0xE000000000000000;
    sub_10012AF50(v196);
    sub_10012AF90();
    uint64_t v70 = sub_10012B400();
    uint64_t v72 = v71;
    uint64_t v74 = v73;
    uint64_t v49 = v167;
  }
  else
  {
    char v75 = v179;
    unsigned int v76 = (void (*)(void))v179[13];
    unint64_t v187 = (unint64_t)(v179 + 13) & 0xFFFFFFFFFFFFLL | 0xB2E4000000000000;
    uint64_t v62 = v177;
    LODWORD(v188) = enum case for WeatherFormatPlaceholder.none(_:);
    uint64_t v77 = v183;
    uint64_t v180 = (void (*)(char *, void, uint64_t))v76;
    v76(v177);
    uint64_t v186 = sub_10012A090();
    sub_10012A080();
    sub_1000A369C(&qword_10016B068, (void (*)(uint64_t))&type metadata accessor for NSUnitTemperature.BaseWeatherFormatStyle);
    uint64_t v78 = v181;
    uint64_t v79 = sub_100129020();
    uint64_t v80 = v45;
    uint64_t v82 = v81;
    swift_release();
    uint64_t v83 = (void *)v75[1];
    uint64_t v168 = (unint64_t)(v75 + 1) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    uint64_t v179 = v83;
    ((void (*)(char *, uint64_t))v83)(v62, v77);
    uint64_t v84 = (void (*)(char *, uint64_t))*((void *)v170 + 1);
    uint64_t v169 = ((unint64_t)v170 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    uint64_t v170 = v84;
    v84(v49, v80);
    uint64_t v85 = *(void **)(v146 + 8);
    uint64_t v142 = (v146 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    uint64_t v143 = v85;
    ((void (*)(uint64_t, uint64_t))v85)(v48, v78);
    v197._countAndFlagsBits = v79;
    v197._object = v82;
    sub_10012AF40(v197);
    swift_bridgeObjectRelease();
    v198._countAndFlagsBits = 32;
    v198._object = (void *)0xE100000000000000;
    sub_10012AF50(v198);
    uint64_t v63 = v48;
    uint64_t v86 = v172;
    sub_10012C240();
    uint64_t v87 = sub_10012BB50();
    Swift::String v89 = v88;
    Swift::String v90 = *(char **)(v148 + 8);
    uint64_t v140 = (v148 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    os_log_type_t v141 = v90;
    ((void (*)(char *, uint64_t))v90)(v86, v173);
    v199._countAndFlagsBits = v87;
    v199._object = v89;
    sub_10012AF40(v199);
    swift_bridgeObjectRelease();
    v200._countAndFlagsBits = 0;
    v200._object = (void *)0xE000000000000000;
    sub_10012AF50(v200);
    sub_10012AF90();
    uint64_t v70 = sub_10012B400();
    uint64_t v72 = v91;
    uint64_t v74 = v92;
  }
  uint64_t v144 = v72;
  uint64_t v145 = v70;
  uint64_t v148 = v74;
  LODWORD(v146) = v69 & 1;
  sub_10012B230();
  Swift::String v93 = (void *)sub_10012B3F0();
  Swift::String v95 = v94;
  char v97 = v96;
  uint64_t v99 = v98;
  swift_release();
  uint64_t v189 = v93;
  uint64_t v190 = v95;
  char v191 = v97 & 1;
  uint64_t v192 = v99;
  uint64_t v100 = v149;
  sub_10012B0F0();
  sub_10012B520();
  (*(void (**)(char *, uint64_t))(v150 + 8))(v100, v151);
  sub_100008278((uint64_t)v189, (uint64_t)v190, v191);
  swift_bridgeObjectRelease();
  sub_10012AF60();
  v201._countAndFlagsBits = 0;
  v201._object = (void *)0xE000000000000000;
  sub_10012AF50(v201);
  uint64_t v151 = v174 + *(int *)(v147 + 24);
  sub_10012C190();
  sub_10012CCA0();
  uint64_t v101 = v152;
  _s13WeatherWidget20WeatherDataViewModelOwst_0(v152, 1, 1, v171);
  sub_10012B900();
  swift_bridgeObjectRelease();
  sub_10000D930(v101, &qword_10016C058);
  uint64_t v102 = v183;
  v180(v62, v188, v183);
  sub_10012A090();
  sub_10012A080();
  uint64_t v174 = sub_1000A369C(&qword_10016B068, (void (*)(uint64_t))&type metadata accessor for NSUnitTemperature.BaseWeatherFormatStyle);
  uint64_t v103 = v181;
  uint64_t v104 = v63;
  uint64_t v105 = v176;
  uint64_t v106 = sub_100129020();
  int v107 = v62;
  uint64_t v109 = v108;
  swift_release();
  ((void (*)(char *, uint64_t))v179)(v107, v102);
  v170(v49, v105);
  ((void (*)(uint64_t, uint64_t))v143)(v104, v103);
  v202._countAndFlagsBits = v106;
  v202._object = v109;
  sub_10012AF40(v202);
  swift_bridgeObjectRelease();
  v203._countAndFlagsBits = 0x7365657267656420;
  v203._object = (void *)0xEA0000000000202CLL;
  sub_10012AF50(v203);
  uint64_t v110 = v172;
  sub_10012C240();
  uint64_t v111 = sub_10012BB50();
  uint64_t v113 = v112;
  ((void (*)(char *, uint64_t))v141)(v110, v173);
  v204._countAndFlagsBits = v111;
  v204._object = v113;
  sub_10012AF40(v204);
  swift_bridgeObjectRelease();
  v205._countAndFlagsBits = 0;
  v205._object = (void *)0xE000000000000000;
  sub_10012AF50(v205);
  sub_10012AF90();
  uint64_t v114 = sub_10012B400();
  uint64_t v116 = v115;
  LOBYTE(v109) = v117 & 1;
  uint64_t v189 = &type metadata for Text;
  uint64_t v190 = &protocol witness table for Text;
  swift_getOpaqueTypeConformance2();
  uint64_t v118 = v178;
  uint64_t v119 = v156;
  uint64_t v120 = v175;
  sub_10012B4D0();
  sub_100008278(v114, v116, (char)v109);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v155 + 8))(v120, v119);
  sub_10000B2F4(v118, v184, &qword_10016BE70);
  sub_10012B8F0();
  uint64_t v121 = v153;
  sub_10012CDC0();
  uint64_t v122 = v170;
  v170(v49, v105);
  uint64_t v123 = v177;
  uint64_t v124 = v183;
  v180(v177, v188, v183);
  sub_10012A080();
  uint64_t v185 = (char *)sub_100129020();
  long long v175 = v125;
  swift_release();
  ((void (*)(char *, uint64_t))v179)(v123, v124);
  v122(v121, v105);
  sub_10012B8F0();
  sub_10012CDC0();
  v122(v49, v105);
  v180(v123, v188, v124);
  sub_10012A080();
  sub_100129020();
  swift_release();
  ((void (*)(char *, uint64_t))v179)(v123, v124);
  v122(v121, v105);
  sub_10012B230();
  sub_10012B5E0();
  (*(void (**)(char *, void, uint64_t))(v159 + 104))(v161, enum case for TemperatureHighLowText.Style.textLabels(_:), v160);
  sub_10012B7B0();
  uint64_t v126 = v162;
  sub_10012BEA0();
  uint64_t v127 = v154;
  sub_10000B114(v182, v154, &qword_10016EAD8);
  uint64_t v128 = v178;
  sub_10000B114(v184, v178, &qword_10016BE70);
  uint64_t v129 = v165;
  uint64_t v130 = *(void (**)(char *, char *, uint64_t))(v165 + 16);
  uint64_t v131 = v163;
  uint64_t v132 = v166;
  v130(v163, v126, v166);
  uint64_t v133 = v164;
  sub_10000B114(v127, v164, &qword_10016EAD8);
  uint64_t v134 = sub_1000053D8(&qword_10016EAE8);
  sub_10000B114(v128, v133 + *(int *)(v134 + 48), &qword_10016BE70);
  v130((char *)(v133 + *(int *)(v134 + 64)), v131, v132);
  sub_100008278(v145, v144, v146);
  swift_bridgeObjectRelease();
  uint64_t v135 = *(void (**)(char *, uint64_t))(v129 + 8);
  v135(v126, v132);
  sub_10000D930(v184, &qword_10016BE70);
  sub_10000D930(v182, &qword_10016EAD8);
  v135(v131, v132);
  sub_10000D930(v128, &qword_10016BE70);
  return sub_10000D930(v127, &qword_10016EAD8);
}

uint64_t sub_1000A212C@<X0>(uint64_t a1@<X0>, void *a2@<X1>, char *a3@<X8>)
{
  char v60 = a3;
  uint64_t v59 = sub_1000053D8(&qword_10016EAF0);
  uint64_t v65 = *(void *)(v59 - 8);
  uint64_t v5 = __chkstk_darwin(v59);
  uint64_t v57 = (char *)&v54 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v58 = (char *)&v54 - v7;
  uint64_t v56 = sub_10012B120();
  uint64_t v55 = *(void *)(v56 - 8);
  __chkstk_darwin(v56);
  uint64_t v9 = (char *)&v54 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10012AF70();
  __chkstk_darwin(v10 - 8);
  uint64_t v11 = sub_1000053D8(&qword_10016EAC0);
  uint64_t v63 = *(void *)(v11 - 8);
  uint64_t v64 = v11;
  uint64_t v12 = __chkstk_darwin(v11);
  char v61 = (char *)&v54 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v62 = (char *)&v54 - v14;
  sub_10012AF60();
  v72._countAndFlagsBits = 0;
  v72._object = (void *)0xE000000000000000;
  sub_10012AF50(v72);
  sub_10012B620();
  sub_10012AF30();
  swift_release();
  v73._countAndFlagsBits = 32;
  v73._object = (void *)0xE100000000000000;
  sub_10012AF50(v73);
  v74._countAndFlagsBits = a1;
  v74._object = a2;
  sub_10012AF40(v74);
  v75._countAndFlagsBits = 0;
  v75._object = (void *)0xE000000000000000;
  sub_10012AF50(v75);
  sub_10012AF90();
  uint64_t v15 = sub_10012B400();
  uint64_t v17 = v16;
  char v19 = v18 & 1;
  sub_10012B340();
  sub_10012B240();
  swift_release();
  uint64_t v20 = sub_10012B3F0();
  uint64_t v22 = v21;
  char v24 = v23;
  uint64_t v26 = v25;
  swift_release();
  sub_100008278(v15, v17, v19);
  swift_bridgeObjectRelease();
  *(void *)&long long v66 = v20;
  *((void *)&v66 + 1) = v22;
  v67[0] = v24 & 1;
  *(void *)&v67[8] = v26;
  sub_10012B0F0();
  uint64_t v27 = v61;
  sub_10012B520();
  uint64_t v28 = *(void (**)(char *, uint64_t))(v55 + 8);
  uint64_t v29 = v56;
  v28(v9, v56);
  sub_100008278(v66, *((uint64_t *)&v66 + 1), v67[0]);
  swift_bridgeObjectRelease();
  uint64_t v31 = v62;
  uint64_t v30 = v63;
  (*(void (**)(char *, char *, uint64_t))(v63 + 32))(v62, v27, v64);
  uint64_t v32 = sub_10012AF10();
  sub_1000A2728((uint64_t)&v66);
  uint64_t v33 = *(void *)&v67[16];
  char v34 = v68;
  uint64_t v35 = *((void *)&v68 + 1);
  long long v37 = v66;
  long long v36 = *(_OWORD *)v67;
  *(void *)&long long v66 = v32;
  *((void *)&v66 + 1) = 0x4000000000000000;
  v67[0] = 0;
  *(_OWORD *)&v67[8] = v37;
  long long v68 = v36;
  uint64_t v69 = v33;
  char v70 = v34;
  uint64_t v71 = v35;
  sub_10012B0F0();
  sub_1000053D8(&qword_10016EAF8);
  sub_10000B38C(&qword_10016EB00, &qword_10016EAF8);
  uint64_t v38 = v57;
  sub_10012B520();
  v28(v9, v29);
  uint64_t v39 = *((void *)&v68 + 1);
  uint64_t v40 = v69;
  LOBYTE(v29) = v70;
  swift_release();
  swift_release();
  swift_release();
  sub_100008278(v39, v40, v29);
  swift_bridgeObjectRelease();
  uint64_t v41 = v65;
  unsigned __int8 v43 = v58;
  uint64_t v42 = v59;
  (*(void (**)(char *, char *, uint64_t))(v65 + 32))(v58, v38, v59);
  char v44 = *(void (**)(char *, char *, uint64_t))(v30 + 16);
  uint64_t v45 = v61;
  uint64_t v46 = v64;
  v44(v61, v31, v64);
  char v47 = *(void (**)(char *, char *, uint64_t))(v41 + 16);
  uint64_t v48 = v43;
  v47(v38, v43, v42);
  uint64_t v49 = v60;
  v44(v60, v45, v46);
  uint64_t v50 = sub_1000053D8(&qword_10016EB08);
  v47(&v49[*(int *)(v50 + 48)], v38, v42);
  uint64_t v51 = *(void (**)(char *, uint64_t))(v65 + 8);
  v51(v48, v42);
  uint64_t v52 = *(void (**)(char *, uint64_t))(v63 + 8);
  v52(v62, v46);
  v51(v38, v42);
  return ((uint64_t (*)(char *, uint64_t))v52)(v45, v46);
}

uint64_t sub_1000A2728@<X0>(uint64_t a1@<X8>)
{
  uint64_t v17 = sub_10012B620();
  sub_10012B200();
  uint64_t v16 = sub_10012B240();
  swift_release();
  uint64_t KeyPath = swift_getKeyPath();
  sub_10012AF80();
  uint64_t v2 = sub_10012B400();
  uint64_t v4 = v3;
  char v6 = v5 & 1;
  sub_10012B340();
  sub_10012B240();
  swift_release();
  uint64_t v7 = sub_10012B3F0();
  uint64_t v9 = v8;
  char v11 = v10;
  uint64_t v13 = v12;
  swift_release();
  v11 &= 1u;
  sub_100008278(v2, v4, v6);
  swift_bridgeObjectRelease();
  *(void *)a1 = v17;
  *(void *)(a1 + 8) = KeyPath;
  *(void *)(a1 + 16) = v16;
  *(void *)(a1 + 24) = v7;
  *(void *)(a1 + 32) = v9;
  *(unsigned char *)(a1 + 40) = v11;
  *(void *)(a1 + 48) = v13;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_10000B0B0(v7, v9, v11);
  swift_bridgeObjectRetain();
  sub_100008278(v7, v9, v11);
  swift_release();
  swift_release();
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1000A28FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v57 = a2;
  uint64_t v63 = a3;
  uint64_t v4 = sub_10012B120();
  uint64_t v60 = *(void *)(v4 - 8);
  uint64_t v61 = v4;
  __chkstk_darwin(v4);
  uint64_t v53 = (char *)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = sub_10012C6B0();
  uint64_t v52 = *(void *)(v54 - 8);
  __chkstk_darwin(v54);
  uint64_t v51 = (char *)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10012C720();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v55 = v7;
  uint64_t v56 = v8;
  __chkstk_darwin(v7);
  char v10 = (char *)&v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = sub_1000053D8(&qword_10016EB10);
  uint64_t v62 = *(void *)(v59 - 8);
  __chkstk_darwin(v59);
  uint64_t v50 = (char *)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1000053D8(&qword_10016EB18);
  uint64_t v13 = __chkstk_darwin(v12 - 8);
  uint64_t v15 = (char *)&v49 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v58 = (uint64_t)&v49 - v16;
  uint64_t v17 = type metadata accessor for RainInlineTruncateFallbackText();
  __chkstk_darwin(v17);
  char v19 = (char *)&v49 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_1000053D8(&qword_10016CD88);
  uint64_t v21 = __chkstk_darwin(v20 - 8);
  char v23 = (char *)&v49 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  uint64_t v25 = (char *)&v49 - v24;
  uint64_t v49 = (uint64_t)&v49 - v24;
  uint64_t v26 = sub_10012C0E0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v26 - 8) + 16))(v19, a1, v26);
  sub_10012AF80();
  uint64_t v27 = sub_10012B400();
  uint64_t v29 = v28;
  char v31 = v30 & 1;
  sub_1000A369C(&qword_10016EB20, (void (*)(uint64_t))type metadata accessor for RainInlineTruncateFallbackText);
  sub_10012B4D0();
  sub_100008278(v27, v29, v31);
  swift_bridgeObjectRelease();
  sub_1000A3648((uint64_t)v19, (void (*)(void))type metadata accessor for RainInlineTruncateFallbackText);
  sub_10000B2F4((uint64_t)v23, (uint64_t)v25, &qword_10016CD88);
  (*(void (**)(char *, uint64_t, uint64_t))(v52 + 16))(v51, v57, v54);
  sub_10012C710();
  uint64_t v32 = v53;
  sub_10012B0F0();
  uint64_t v33 = sub_1000A369C(&qword_10016EB28, (void (*)(uint64_t))&type metadata accessor for CompactNextHourPrecipitationChartView);
  char v34 = v50;
  uint64_t v35 = v55;
  sub_10012B520();
  (*(void (**)(char *, uint64_t))(v60 + 8))(v32, v61);
  uint64_t v36 = v35;
  (*(void (**)(char *, uint64_t))(v56 + 8))(v10, v35);
  uint64_t v64 = sub_10012C690();
  uint64_t v65 = v37;
  sub_10000822C();
  uint64_t v38 = sub_10012B420();
  uint64_t v40 = v39;
  char v42 = v41 & 1;
  uint64_t v64 = v36;
  uint64_t v65 = v33;
  swift_getOpaqueTypeConformance2();
  uint64_t v43 = v59;
  sub_10012B4D0();
  sub_100008278(v38, v40, v42);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v62 + 8))(v34, v43);
  uint64_t v44 = v58;
  sub_10000B2F4((uint64_t)v15, v58, &qword_10016EB18);
  uint64_t v45 = v49;
  sub_10000B114(v49, (uint64_t)v23, &qword_10016CD88);
  sub_10000B114(v44, (uint64_t)v15, &qword_10016EB18);
  uint64_t v46 = v63;
  sub_10000B114((uint64_t)v23, v63, &qword_10016CD88);
  uint64_t v47 = sub_1000053D8(&qword_10016EB30);
  sub_10000B114((uint64_t)v15, v46 + *(int *)(v47 + 48), &qword_10016EB18);
  sub_10000D930(v44, &qword_10016EB18);
  sub_10000D930(v45, &qword_10016CD88);
  sub_10000D930((uint64_t)v15, &qword_10016EB18);
  return sub_10000D930((uint64_t)v23, &qword_10016CD88);
}

unint64_t sub_1000A2FBC()
{
  unint64_t result = qword_10016EA18;
  if (!qword_10016EA18)
  {
    sub_100005470(&qword_10016EA10);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016EA18);
  }
  return result;
}

unint64_t sub_1000A3030()
{
  unint64_t result = qword_10016EA20;
  if (!qword_10016EA20)
  {
    sub_100005470(&qword_10016E980);
    sub_1000A30DC();
    sub_1000A369C(&qword_10016EA48, (void (*)(uint64_t))&type metadata accessor for NoWeatherDataRectangularErrorView);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016EA20);
  }
  return result;
}

unint64_t sub_1000A30DC()
{
  unint64_t result = qword_10016EA28;
  if (!qword_10016EA28)
  {
    sub_100005470(&qword_10016EA00);
    sub_1000A3158();
    sub_1000A33CC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016EA28);
  }
  return result;
}

unint64_t sub_1000A3158()
{
  unint64_t result = qword_10016EA30;
  if (!qword_10016EA30)
  {
    sub_100005470(&qword_10016E9E0);
    sub_1000A31F4(&qword_10016EA38, &qword_10016E9F8, &qword_10016EA40, &qword_10016E9F0);
    sub_1000A32C0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016EA30);
  }
  return result;
}

uint64_t sub_1000A31F4(unint64_t *a1, uint64_t *a2, unint64_t *a3, uint64_t *a4)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100005470(a2);
    sub_10000B38C(a3, a4);
    sub_1000A369C(&qword_10016EA48, (void (*)(uint64_t))&type metadata accessor for NoWeatherDataRectangularErrorView);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1000A32C0()
{
  unint64_t result = qword_10016EA50;
  if (!qword_10016EA50)
  {
    sub_100005470(&qword_10016E9C8);
    sub_100005470(&qword_10016E9B8);
    sub_10000B38C(&qword_10016EA58, &qword_10016E9B8);
    swift_getOpaqueTypeConformance2();
    sub_1000A369C((unint64_t *)&qword_10016BEC8, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016EA50);
  }
  return result;
}

unint64_t sub_1000A33CC()
{
  unint64_t result = qword_10016EA60;
  if (!qword_10016EA60)
  {
    sub_100005470(&qword_10016E998);
    sub_1000A31F4(&qword_10016EA68, &qword_10016E9B0, &qword_10016EA70, &qword_10016E9A8);
    sub_10000B38C(&qword_10016EA78, &qword_10016E988);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016EA60);
  }
  return result;
}

unint64_t sub_1000A348C()
{
  unint64_t result = qword_10016EA80;
  if (!qword_10016EA80)
  {
    sub_100005470(&qword_10016E968);
    sub_100005470(&qword_10016EA10);
    sub_1000A2FBC();
    swift_getOpaqueTypeConformance2();
    sub_1000A369C((unint64_t *)&qword_10016BEC8, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10016EA80);
  }
  return result;
}

uint64_t sub_1000A356C(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_10000B3FC();
  uint64_t v4 = sub_10000B430();
  v5(v4);
  return a2;
}

uint64_t sub_1000A35C0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_10012AE40();
  *a1 = result;
  return result;
}

uint64_t sub_1000A35EC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_10012AE40();
  *a1 = result;
  return result;
}

uint64_t sub_1000A3618()
{
  return sub_10012AE50();
}

uint64_t sub_1000A3648(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_10000B3FC();
  sub_10000B424();
  v3();
  return a1;
}

uint64_t sub_1000A369C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000A36E4()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_1000A3764()
{
  *(void *)(v0 - 320) = (*(void *)(v0 - 304) + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
}

void sub_1000A3784()
{
  *(void *)(v0 - 360) = (*(void *)(v0 - 328) + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
}

void sub_1000A37A4(uint64_t a1@<X8>)
{
  *(void *)(v1 - 312) = (a1 + 104) & 0xFFFFFFFFFFFFLL | 0xB2E4000000000000;
}

void sub_1000A37BC(uint64_t a1@<X8>)
{
  *(void *)(v1 - 304) = a1;
}

void sub_1000A37D0()
{
  *(void *)(v1 - 328) = v0;
}

void sub_1000A37E4()
{
  *(void *)(v1 - 296) = v0;
}

uint64_t sub_1000A37F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, unint64_t a5@<X4>, int a6@<W5>, int a7@<W6>, int a8@<W7>, uint64_t a9@<X8>, char a10, unsigned __int8 a11)
{
  uint64_t v13 = v11;
  int v171 = a8;
  int v159 = a7;
  int v165 = a6;
  unint64_t v178 = a5;
  uint64_t v179 = a4;
  uint64_t v162 = a3;
  uint64_t v157 = a2;
  uint64_t v168 = a1;
  int v180 = a11;
  uint64_t v161 = sub_10012A6B0();
  sub_10000DB98();
  uint64_t v160 = v15;
  __chkstk_darwin(v16);
  sub_10000DBCC();
  uint64_t v164 = v17;
  sub_10000DCA8();
  uint64_t v148 = sub_10012BBA0();
  sub_10000DB98();
  uint64_t v147 = v18;
  __chkstk_darwin(v19);
  sub_10000DBCC();
  uint64_t v146 = v20;
  uint64_t v21 = sub_1000053D8(&qword_10016BEA8);
  __chkstk_darwin(v21 - 8);
  sub_10000DCB4();
  uint64_t v163 = v22;
  __chkstk_darwin(v23);
  uint64_t v174 = (uint64_t)&v144 - v24;
  sub_10000DCA8();
  uint64_t v25 = type metadata accessor for WidgetContext();
  __chkstk_darwin(v25 - 8);
  sub_10000DBCC();
  uint64_t v155 = v26;
  sub_10000DCA8();
  uint64_t v182 = sub_10012BDF0();
  sub_10000DB98();
  uint64_t v173 = v27;
  __chkstk_darwin(v28);
  sub_10000DCB4();
  uint64_t v158 = v29;
  __chkstk_darwin(v30);
  uint64_t v181 = (char *)&v144 - v31;
  sub_10000DCA8();
  uint64_t v183 = sub_10012C250();
  sub_10000DB98();
  uint64_t v176 = v32;
  __chkstk_darwin(v33);
  sub_10000DCB4();
  uint64_t v172 = v34;
  __chkstk_darwin(v35);
  uint64_t v184 = (char *)&v144 - v36;
  sub_10000DCA8();
  uint64_t v150 = sub_10012AFE0();
  sub_10000DB98();
  uint64_t v149 = v37;
  __chkstk_darwin(v38);
  sub_10000DBCC();
  uint64_t v145 = v39;
  sub_10000DCA8();
  unint64_t v40 = sub_100129380();
  sub_10000DB98();
  uint64_t v169 = v41;
  __chkstk_darwin(v42);
  sub_10002A5F0();
  sub_1001293A0();
  sub_10000DB98();
  uint64_t v154 = v43;
  __chkstk_darwin(v44);
  sub_10000DC50();
  unint64_t v47 = v46 - v45;
  uint64_t v48 = sub_1000053D8(&qword_10016EC18);
  __chkstk_darwin(v48 - 8);
  sub_10000DC50();
  uint64_t v51 = v50 - v49;
  uint64_t v52 = sub_10012C800();
  sub_10000DB98();
  unint64_t v170 = v53;
  __chkstk_darwin(v54);
  sub_10000DC50();
  uint64_t v57 = v56 - v55;
  uint64_t v156 = sub_10012B200();
  int v177 = *(unsigned __int8 *)(v11 + OBJC_IVAR____TtC13WeatherWidget21ViewAttributesFactory_widgetDisplaySize);
  uint64_t v166 = a9;
  if (v177)
  {
    uint64_t v175 = sub_10012B330();
    uint64_t v167 = v11;
    if ((*(unsigned char *)(v11 + OBJC_IVAR____TtC13WeatherWidget21ViewAttributesFactory_showsWidgetBackground) & 1) != 0
      || (uint64_t v13 = v170,
          uint64_t v58 = sub_1000A4DC8(),
          v59(v58),
          sub_1000A4D04(&qword_10016EC20),
          uint64_t v60 = sub_1000A4E2C(),
          uint64_t v61 = sub_1000A4DB0(),
          v62(v61),
          (v60 & 1) == 0))
    {
      if (v177 == 1) {
        goto LABEL_17;
      }
      if ((v171 & 1) == 0) {
        goto LABEL_17;
      }
      uint64_t v13 = v170;
      uint64_t v73 = sub_1000A4DC8();
      v74(v73);
      sub_1000A4D04((unint64_t *)&qword_10016CCC8);
      sub_10012CB60();
      sub_10012CB60();
      uint64_t v76 = v185;
      uint64_t v75 = v186;
      uint64_t v77 = sub_1000A4DB0();
      v78(v77);
      if (v75 == v76)
      {
        sub_100129340();
        sub_100129390();
        sub_10000B424();
        v79();
        uint64_t v60 = v12;
        char v80 = sub_100129360();
        sub_10000B424();
        v81();
        if (v80) {
          uint64_t v82 = sub_10012B250();
        }
        else {
          uint64_t v82 = sub_10012B1F0();
        }
        sub_1000A4EA4(v82);
        sub_1000A4DE0();
        uint64_t v143 = sub_10012B300();
        sub_1000A4E98(v143);
      }
      else
      {
LABEL_17:
        sub_10012B280();
        uint64_t v60 = v83;
        uint64_t v84 = sub_10012B260();
        sub_1000A4DF4(v84);
        uint64_t v85 = sub_10012B2B0();
        sub_1000A4EA4(v85);
        sub_100011E78(v51, &qword_10016EC18);
        uint64_t v152 = sub_10012B200();
        sub_1000A4DE0();
      }
      uint64_t v154 = sub_10012B330();
      sub_10012B2A0();
      int v153 = 0;
    }
    else
    {
      if (v177 == 1)
      {
        uint64_t v151 = sub_10012B1C0();
        uint64_t v152 = sub_10012B200();
        sub_1000A4DE0();
      }
      else
      {
        sub_1000A4DE0();
        if (v171)
        {
          uint64_t v86 = sub_10012B300();
          sub_1000A4E98(v86);
          uint64_t v87 = sub_10012B1C0();
          uint64_t v88 = &v183;
        }
        else
        {
          uint64_t v151 = sub_10012B1C0();
          uint64_t v87 = sub_10012B200();
          uint64_t v88 = (uint64_t *)&v184;
        }
        *(v88 - 32) = v87;
      }
      uint64_t v154 = sub_10012B330();
      int v153 = 1;
      sub_10012B2A0();
    }
  }
  else
  {
    uint64_t v175 = sub_10012B300();
    unint64_t v47 = v170;
    if ((*(unsigned char *)(v11 + OBJC_IVAR____TtC13WeatherWidget21ViewAttributesFactory_showsWidgetBackground) & 1) != 0
      || (uint64_t v63 = sub_1000A4DC8(),
          v64(v63),
          sub_1000A4D04(&qword_10016EC20),
          uint64_t v60 = sub_1000A4E2C(),
          uint64_t v65 = sub_1000A4DB0(),
          v66(v65),
          (v60 & 1) == 0))
    {
      sub_10012B280();
      uint64_t v60 = v69;
      uint64_t v70 = sub_10012B260();
      sub_1000A4DF4(v70);
      uint64_t v71 = sub_10012B2B0();
      sub_1000A4EA4(v71);
      sub_100011E78(v51, &qword_10016EC18);
      uint64_t v154 = sub_10012B300();
      uint64_t v72 = sub_10012B2F0();
      sub_1000A4E98(v72);
      sub_10012B290();
      int v153 = 0;
    }
    else
    {
      uint64_t v67 = sub_10012B1C0();
      sub_1000A4EA4(v67);
      uint64_t v154 = sub_10012B300();
      uint64_t v68 = sub_10012B2F0();
      sub_1000A4E98(v68);
      int v153 = 1;
      sub_10012B2A0();
    }
    unint64_t v40 = v178;
  }
  uint64_t v89 = HIBYTE(v40) & 0xF;
  if (sub_100129F40())
  {
    uint64_t v90 = v179 & 0xFFFFFFFFFFFFLL;
    if ((v40 & 0x2000000000000000) != 0) {
      uint64_t v90 = HIBYTE(v40) & 0xF;
    }
    if (!v90)
    {
      if (v180)
      {
        LODWORD(v169) = 1;
      }
      else
      {
        uint64_t v134 = v149;
        uint64_t v135 = v145;
        sub_1000A4E14();
        v136();
        sub_10010E1A0();
        LODWORD(v169) = v137;
        v134[1](v135, v60);
      }
      uint64_t v167 = v13;
      uint64_t v138 = v13 + OBJC_IVAR____TtC13WeatherWidget21ViewAttributesFactory_widgetFamily;
      uint64_t v103 = enum case for WidgetFamily.systemSmall(_:);
      uint64_t v104 = *(void (**)(uint64_t))(v47 + 104);
      uint64_t v139 = sub_1000A4E50();
      v104(v139);
      sub_1000A4D04((unint64_t *)&qword_10016CCC8);
      uint64_t v150 = v138;
      sub_1000A4E80();
      sub_1000A4E80();
      uint64_t v141 = v185;
      uint64_t v140 = v186;
      uint64_t v149 = *(void (***)(void, uint64_t))(v47 + 8);
      ((void (*)(uint64_t, uint64_t))v149)(v57, v52);
      if (v140 == v141 && (v169 & 1) != 0)
      {
        LODWORD(v169) = 1;
        unint64_t v40 = v178;
        if (v171) {
          goto LABEL_36;
        }
        int v171 = 0;
      }
      else
      {
        if (v171)
        {
          uint64_t v142 = sub_1000A4E50();
          v104(v142);
          swift_retain();
          sub_1000A4E80();
          sub_1000A4E80();
          ((void (*)(uint64_t, uint64_t))v149)(v57, v52);
          int v171 = 1;
          unint64_t v40 = v178;
          goto LABEL_37;
        }
        int v171 = 1;
        unint64_t v40 = v178;
      }
LABEL_39:
      swift_retain();
      int v107 = sub_1000A4A40();
      goto LABEL_40;
    }
  }
  if (sub_100129F40() & 1) != 0 && (v180)
  {
    LODWORD(v169) = 1;
  }
  else
  {
    uint64_t v91 = sub_1000A4DC8();
    v92(v91);
    sub_1000A4D04((unint64_t *)&qword_10016CCC8);
    sub_1000A4E68();
    sub_1000A4E68();
    uint64_t v94 = v185;
    uint64_t v93 = v186;
    uint64_t v95 = sub_1000A4DB0();
    v96(v95);
    if (v93 == v94)
    {
      char v97 = v149;
      unint64_t v98 = v47;
      uint64_t v99 = v145;
      sub_1000A4E14();
      v100();
      sub_10010E50C();
      LODWORD(v169) = v101;
      uint64_t v102 = v99;
      unint64_t v47 = v98;
      v97[1](v102, v94);
    }
    else
    {
      LODWORD(v169) = 0;
    }
  }
  if ((v171 & 1) == 0)
  {
    int v171 = 0;
    goto LABEL_39;
  }
  uint64_t v103 = enum case for WidgetFamily.systemSmall(_:);
  uint64_t v104 = *(void (**)(uint64_t))(v47 + 104);
LABEL_36:
  ((void (*)(uint64_t, uint64_t, uint64_t))v104)(v57, v103, v52);
  sub_1000A4D04((unint64_t *)&qword_10016CCC8);
  swift_retain();
  sub_1000A4E68();
  sub_1000A4E68();
  uint64_t v105 = sub_1000A4DB0();
  v106(v105);
  int v171 = 0;
LABEL_37:
  int v107 = sub_1000A491C();
LABEL_40:
  int v108 = v107;
  if ((v40 & 0x2000000000000000) != 0) {
    uint64_t v109 = v89;
  }
  else {
    uint64_t v109 = v179 & 0xFFFFFFFFFFFFLL;
  }
  if (v109) {
    uint64_t v167 = sub_10012B5C0();
  }
  else {
    uint64_t v167 = 0;
  }
  uint64_t v110 = type metadata accessor for AggregateWeatherViewModel(0);
  uint64_t v111 = v168;
  uint64_t v112 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v176 + 16);
  uint64_t result = v112(v184, v168 + *(int *)(v110 + 24), v183);
  uint64_t v114 = *(void *)(v111 + *(int *)(v110 + 32));
  if (!*(void *)(v114 + 16))
  {
    __break(1u);
    return result;
  }
  LODWORD(v150) = v108;
  uint64_t v115 = *(void (**)(char *, unint64_t, uint64_t))(v173 + 16);
  v115(v181, v114 + ((*(unsigned __int8 *)(v173 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v173 + 80)), v182);
  uint64_t v116 = v157;
  uint64_t v117 = v155;
  sub_100088170(v157, v155);
  if (v177 == 2)
  {
    LODWORD(v149) = *(unsigned __int8 *)(v117 + 48) == 2;
    sub_1000881D4(v117);
  }
  else
  {
    sub_1000881D4(v117);
    LODWORD(v149) = 0;
  }
  if (v180) {
    goto LABEL_58;
  }
  int v118 = *(unsigned __int8 *)(v116 + 48);
  if (v118 == 4)
  {
    uint64_t v157 = 0x616C6C6572626D75;
    unint64_t v119 = 0xED00006C6C69662ELL;
    uint64_t v120 = (uint64_t *)&v187;
    goto LABEL_57;
  }
  if (v118 != 5)
  {
LABEL_58:
    sub_1000A4EB0();
    goto LABEL_59;
  }
  uint64_t v155 = 0xEB00000000726574;
  unint64_t v119 = 0x656D6F6D72656874;
  uint64_t v120 = &v188;
LABEL_57:
  *(v120 - 32) = v119;
LABEL_59:
  if (v171) {
    BOOL v121 = !sub_1000051CC(v177);
  }
  else {
    BOOL v121 = 1;
  }
  int v177 = v121;
  if (v109) {
    goto LABEL_66;
  }
  sub_10012C240();
  char v122 = sub_10012BB70();
  sub_10000B424();
  v123();
  if (v122) {
    goto LABEL_66;
  }
  unint64_t v124 = v170;
  uint64_t v125 = sub_1000A4DC8();
  v126(v125);
  sub_1000A4D04((unint64_t *)&qword_10016CCC8);
  sub_10012CB60();
  sub_10012CB60();
  uint64_t v128 = v185;
  uint64_t v127 = v186;
  (*(void (**)(uint64_t, uint64_t))(v124 + 8))(v57, v52);
  if (v127 != v128)
  {
LABEL_66:
    uint64_t v130 = sub_10012C0E0();
    uint64_t v129 = v174;
    _s13WeatherWidget20WeatherDataViewModelOwst_0(v174, 1, 1, v130);
  }
  else
  {
    uint64_t v129 = v174;
    sub_1000A7190(v168, 1, COERCE_DOUBLE(6), v174, 0.6);
  }
  unint64_t v131 = 0xE800000000000000;
  if ((v159 & 1) == 0) {
    unint64_t v131 = 0xED00006C6C69662ELL;
  }
  unint64_t v170 = v131;
  v112(v172, (uint64_t)v184, v183);
  v115(v158, (unint64_t)v181, v182);
  sub_1000A4D48(v129, v163);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v160 + 16))(v164, v162, v161);
  swift_bridgeObjectRetain();
  sub_10012B5C0();
  swift_retain();
  sub_10012B5C0();
  sub_10012B5C0();
  sub_10012B5C0();
  sub_10012B5C0();
  sub_10012B5C0();
  sub_10012C520();
  swift_release();
  sub_100011E78(v174, &qword_10016BEA8);
  sub_10000B424();
  v132();
  sub_10000B424();
  return v133();
}

uint64_t sub_1000A491C()
{
  uint64_t v1 = sub_10012AFE0();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC13WeatherWidget21ViewAttributesFactory_widgetDisplaySize)) {
    uint64_t v5 = (unsigned int *)&enum case for ContentSizeCategory.extraExtraLarge(_:);
  }
  else {
    uint64_t v5 = (unsigned int *)&enum case for ContentSizeCategory.extraLarge(_:);
  }
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, *v5, v1);
  sub_10010E878();
  char v7 = v6;
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return v7 & 1;
}

uint64_t sub_1000A4A40()
{
  uint64_t v0 = sub_10012AFE0();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for ContentSizeCategory.extraExtraLarge(_:), v0);
  sub_10010E878();
  char v5 = v4;
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v5 & 1;
}

uint64_t sub_1000A4B44(uint64_t a1, uint64_t a2, char a3, int a4)
{
  uint64_t v9 = sub_10012AFE0();
  sub_10000DB98();
  uint64_t v11 = v10;
  __chkstk_darwin(v12);
  sub_10000DC50();
  uint64_t v15 = v14 - v13;
  uint64_t v16 = sub_10012C800();
  sub_10000DB98();
  uint64_t v18 = v17;
  __chkstk_darwin(v19);
  sub_10002A5F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 16))(v4, a1, v16);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v15, a2, v9);
  uint64_t v20 = sub_10003C1D0(v4, v15, a3, a4);
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(a2, v9);
  (*(void (**)(uint64_t, uint64_t))(v18 + 8))(a1, v16);
  return v20;
}

uint64_t sub_1000A4CB4()
{
  return type metadata accessor for CurrentObservationViewAttributesFactory();
}

uint64_t type metadata accessor for CurrentObservationViewAttributesFactory()
{
  uint64_t result = qword_10016EB60;
  if (!qword_10016EB60) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1000A4D04(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10012C800();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000A4D48(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000053D8(&qword_10016BEA8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000A4DB0()
{
  return v0;
}

uint64_t sub_1000A4DC8()
{
  return v0;
}

uint64_t sub_1000A4DF4(uint64_t a1)
{
  return _s13WeatherWidget20WeatherDataViewModelOwst_0(v1, 1, 1, a1);
}

uint64_t sub_1000A4E2C()
{
  return sub_10012C9E0();
}

uint64_t sub_1000A4E50()
{
  return v0;
}

uint64_t sub_1000A4E68()
{
  return sub_10012CB60();
}

uint64_t sub_1000A4E80()
{
  return sub_10012CB60();
}

uint64_t sub_1000A4E98(uint64_t result)
{
  *(void *)(v1 - 384) = result;
  return result;
}

uint64_t sub_1000A4EA4(uint64_t result)
{
  *(void *)(v1 - 392) = result;
  return result;
}

void sub_1000A4EB0()
{
  *(void *)(v0 - 344) = 0;
  *(void *)(v0 - 360) = 0;
}

uint64_t sub_1000A4EC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000A4ED8);
}

uint64_t sub_1000A4ED8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10012C0E0();

  return _s13WeatherWidget20WeatherDataViewModelOwet_0(a1, a2, v4);
}

uint64_t sub_1000A4F20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000A4F34);
}

uint64_t sub_1000A4F34(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10012C0E0();

  return _s13WeatherWidget20WeatherDataViewModelOwst_0(a1, a2, a2, v4);
}

uint64_t type metadata accessor for RainInlineTruncateFallbackText()
{
  uint64_t result = qword_10016EC80;
  if (!qword_10016EC80) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1000A4FC8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1000A4FE4@<X0>(unsigned char *a1@<X8>)
{
  *a1 = sub_10012B170();
  uint64_t v2 = sub_1000053D8(&qword_10016ECB8);
  return sub_1000A5028((uint64_t)&a1[*(int *)(v2 + 44)]);
}

uint64_t sub_1000A5028@<X0>(uint64_t a1@<X8>)
{
  uint64_t v40 = a1;
  uint64_t v1 = sub_1000053D8(&qword_10016ECC0);
  uint64_t v2 = __chkstk_darwin(v1 - 8);
  uint64_t v4 = (char *)&v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v37 = (uint64_t)&v33 - v5;
  uint64_t v6 = sub_1000053D8(&qword_10016ECC8);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v39 = (uint64_t)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v38 = (uint64_t)&v33 - v9;
  uint64_t v10 = sub_100129160();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  char v34 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v33 - v15;
  __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v33 - v17;
  uint64_t v36 = sub_1000053D8(&qword_10016ECD0);
  uint64_t v19 = __chkstk_darwin(v36);
  uint64_t v21 = (char *)&v33 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v23 = (char *)&v33 - v22;
  sub_10012C080();
  sub_10012B230();
  sub_100129140();
  swift_release();
  uint64_t v35 = v11;
  uint64_t v24 = *(void (**)(char *, uint64_t))(v11 + 8);
  v24(v16, v10);
  sub_1000A54BC((uint64_t)v18, (uint64_t)v21);
  v24(v18, v10);
  sub_1000A5970((uint64_t)v21, (uint64_t)v23);
  sub_10012C0B0();
  if (_s13WeatherWidget20WeatherDataViewModelOwet_0((uint64_t)v4, 1, v10) == 1)
  {
    sub_100016D10((uint64_t)v4, &qword_10016ECC0);
    uint64_t v25 = v37;
    _s13WeatherWidget20WeatherDataViewModelOwst_0(v37, 1, 1, v10);
  }
  else
  {
    sub_10012B230();
    uint64_t v25 = v37;
    sub_100129140();
    swift_release();
    v24(v4, v10);
    _s13WeatherWidget20WeatherDataViewModelOwst_0(v25, 0, 1, v10);
    if (_s13WeatherWidget20WeatherDataViewModelOwet_0(v25, 1, v10) != 1)
    {
      uint64_t v28 = (uint64_t)v34;
      (*(void (**)(char *, uint64_t, uint64_t))(v35 + 32))(v34, v25, v10);
      sub_1000A54BC(v28, (uint64_t)v21);
      v24((char *)v28, v10);
      uint64_t v27 = v38;
      sub_1000A5970((uint64_t)v21, v38);
      uint64_t v26 = 0;
      goto LABEL_6;
    }
  }
  sub_100016D10(v25, &qword_10016ECC0);
  uint64_t v26 = 1;
  uint64_t v27 = v38;
LABEL_6:
  _s13WeatherWidget20WeatherDataViewModelOwst_0(v27, v26, 1, v36);
  sub_100016CAC((uint64_t)v23, (uint64_t)v21, &qword_10016ECD0);
  uint64_t v29 = v39;
  sub_100016CAC(v27, v39, &qword_10016ECC8);
  uint64_t v30 = v40;
  sub_100016CAC((uint64_t)v21, v40, &qword_10016ECD0);
  uint64_t v31 = sub_1000053D8(&qword_10016ECD8);
  sub_100016CAC(v29, v30 + *(int *)(v31 + 48), &qword_10016ECC8);
  sub_100016D10(v27, &qword_10016ECC8);
  sub_100016D10((uint64_t)v23, &qword_10016ECD0);
  sub_100016D10(v29, &qword_10016ECC8);
  return sub_100016D10((uint64_t)v21, &qword_10016ECD0);
}

uint64_t sub_1000A54BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  v25[1] = a2;
  uint64_t v3 = sub_10012B120();
  sub_10000DB98();
  uint64_t v5 = v4;
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000053D8(&qword_10016ECE0);
  sub_10000DB98();
  uint64_t v11 = v10;
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_10012AF10();
  sub_1000A56FC(a1, (uint64_t)&v26);
  char v16 = v27[16];
  uint64_t v17 = v28;
  char v18 = BYTE8(v28);
  long long v19 = v26;
  long long v20 = *(_OWORD *)v27;
  long long v26 = (unint64_t)v15;
  v27[0] = 1;
  *(_OWORD *)&v27[8] = v19;
  long long v28 = v20;
  char v29 = v16;
  uint64_t v30 = v17;
  char v31 = v18;
  sub_10012B0F0();
  uint64_t v21 = sub_1000053D8(&qword_10016ECE8);
  uint64_t v22 = sub_10000B38C(&qword_10016ECF0, &qword_10016ECE8);
  sub_10012B520();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v3);
  sub_1000A59D8(*(uint64_t *)&v27[8], *(uint64_t *)&v27[16], v28);
  *(void *)&long long v26 = sub_10012C0C0();
  *((void *)&v26 + 1) = v23;
  v25[2] = v21;
  v25[3] = v22;
  swift_getOpaqueTypeConformance2();
  sub_10000822C();
  sub_10012B4F0();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v14, v9);
}

uint64_t sub_1000A56FC@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_10012AF70();
  __chkstk_darwin(v4 - 8);
  uint64_t v5 = sub_100129160();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10012C0A0();
  if (v9)
  {
    sub_10012AF60();
    v33._countAndFlagsBits = 0;
    v33._object = (void *)0xE000000000000000;
    sub_10012AF50(v33);
    sub_10012B620();
    sub_10012AF30();
    swift_release();
    v34._countAndFlagsBits = 32;
    v34._object = (void *)0xE100000000000000;
    sub_10012AF50(v34);
    sub_10012AF20();
    v35._countAndFlagsBits = 0;
    v35._object = (void *)0xE000000000000000;
    sub_10012AF50(v35);
    sub_10012AF90();
    uint64_t v23 = sub_10012B400();
    uint64_t v24 = v10;
    uint64_t v25 = v11 & 1;
    uint64_t v26 = v12;
    char v27 = 0;
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a1, v5);
    uint64_t v23 = sub_10012B410();
    uint64_t v24 = v14;
    uint64_t v25 = v13 & 1;
    uint64_t v26 = v15;
    char v27 = 1;
  }
  sub_10012B0E0();
  uint64_t v16 = v28;
  uint64_t v17 = v29;
  uint64_t v18 = v30;
  uint64_t v19 = v31;
  char v20 = v32;
  *(void *)a2 = v28;
  *(void *)(a2 + 8) = v17;
  *(void *)(a2 + 16) = v18;
  *(void *)(a2 + 24) = v19;
  *(unsigned char *)(a2 + 32) = v20;
  *(void *)(a2 + 40) = 0;
  *(unsigned char *)(a2 + 48) = 1;
  sub_1000A5A14(v16, v17, v18);
  return sub_1000A59D8(v16, v17, v18);
}

uint64_t sub_1000A5970(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000053D8(&qword_10016ECD0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000A59D8(uint64_t a1, uint64_t a2, char a3)
{
  sub_100008278(a1, a2, a3 & 1);

  return swift_bridgeObjectRelease();
}

uint64_t sub_1000A5A14(uint64_t a1, uint64_t a2, char a3)
{
  sub_10000B0B0(a1, a2, a3 & 1);

  return swift_bridgeObjectRetain();
}

uint64_t sub_1000A5A50()
{
  return sub_10000B38C(&qword_10016ECF8, &qword_10016ED00);
}

uint64_t sub_1000A5A8C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v72 = a1;
  sub_100129C50();
  sub_10000DB98();
  uint64_t v69 = v3;
  uint64_t v70 = v2;
  __chkstk_darwin(v2);
  sub_10000DBCC();
  uint64_t v68 = v4;
  sub_100129B70();
  sub_10000DB98();
  uint64_t v63 = v6;
  uint64_t v64 = v5;
  __chkstk_darwin(v5);
  sub_10000DBCC();
  uint64_t v66 = v7;
  uint64_t v67 = sub_100129480();
  sub_10000DB98();
  uint64_t v65 = v8;
  uint64_t v10 = __chkstk_darwin(v9);
  uint64_t v61 = (char *)v60 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v62 = (char *)v60 - v12;
  uint64_t v13 = sub_1000053D8(&qword_10016B428);
  __chkstk_darwin(v13 - 8);
  sub_10000DC50();
  uint64_t v16 = v15 - v14;
  uint64_t v17 = (int *)type metadata accessor for AirQualityViewModel();
  sub_10000B3FC();
  __chkstk_darwin(v18);
  sub_10000DBCC();
  uint64_t v71 = v19;
  uint64_t v20 = type metadata accessor for AggregateWeatherViewModel(0);
  sub_10000B3FC();
  __chkstk_darwin(v21);
  sub_10000DC50();
  uint64_t v24 = v23 - v22;
  type metadata accessor for WeatherDataViewModel();
  sub_10000B3FC();
  uint64_t v26 = __chkstk_darwin(v25);
  uint64_t v28 = (char *)v60 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  uint64_t v30 = (char *)v60 - v29;
  type metadata accessor for ForecastEntry.Model(0);
  sub_10000B3FC();
  __chkstk_darwin(v31);
  sub_10000DC50();
  Swift::String v34 = (unsigned __int8 *)(v33 - v32);
  uint64_t v35 = type metadata accessor for ForecastEntry(0);
  sub_100012588(v1 + *(int *)(v35 + 28), (uint64_t)v34, (void (*)(void))type metadata accessor for ForecastEntry.Model);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1000A62AC((uint64_t)v34, (uint64_t)v30, (void (*)(void))type metadata accessor for WeatherDataViewModel);
    sub_100012588((uint64_t)v30, (uint64_t)v28, (void (*)(void))type metadata accessor for WeatherDataViewModel);
    if (swift_getEnumCaseMultiPayload())
    {
      sub_1000A630C((uint64_t)v28, (void (*)(void))type metadata accessor for WeatherDataViewModel);
      if (qword_10016AE28 != -1) {
        swift_once();
      }
      uint64_t v36 = sub_10012AB60();
      sub_10000D7A4(v36, (uint64_t)qword_100181C40);
      uint64_t v37 = sub_10012AB40();
      os_log_type_t v38 = sub_10012CD40();
      if (os_log_type_enabled(v37, v38))
      {
        uint64_t v39 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v39 = 0;
        _os_log_impl((void *)&_mh_execute_header, v37, v38, "Unexpectedly got instant weather instead of aggregate weather", v39, 2u);
        swift_slowDealloc();
      }

      sub_1000A630C((uint64_t)v30, (void (*)(void))type metadata accessor for WeatherDataViewModel);
      goto LABEL_16;
    }
    sub_1000A62AC((uint64_t)v28, v24, (void (*)(void))type metadata accessor for AggregateWeatherViewModel);
    if (qword_10016AE28 != -1) {
      swift_once();
    }
    uint64_t v44 = sub_10012AB60();
    sub_10000D7A4(v44, (uint64_t)qword_100181C40);
    uint64_t v45 = sub_10012AB40();
    os_log_type_t v46 = sub_10012CD60();
    if (os_log_type_enabled(v45, v46))
    {
      unint64_t v47 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v47 = 0;
      _os_log_impl((void *)&_mh_execute_header, v45, v46, "Making AirQuality complication view model entry from aggregate weather", v47, 2u);
      swift_slowDealloc();
    }

    sub_1000A61E4(v24 + *(int *)(v20 + 36), v16);
    if (_s13WeatherWidget20WeatherDataViewModelOwet_0(v16, 1, (uint64_t)v17) == 1)
    {
      sub_1000A630C(v24, (void (*)(void))type metadata accessor for AggregateWeatherViewModel);
      sub_1000A630C((uint64_t)v30, (void (*)(void))type metadata accessor for WeatherDataViewModel);
      sub_1000A624C(v16);
LABEL_16:
      uint64_t v41 = sub_10012C4E0();
      goto LABEL_17;
    }
    sub_1000A62AC(v16, v71, (void (*)(void))type metadata accessor for AirQualityViewModel);
    sub_10012A670();
    uint64_t v49 = sub_10012A5C0();
    uint64_t v51 = v50;
    if (v49 != sub_10012A5C0() || v51 != v52) {
      sub_10012D1F0();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v54 = v62;
    sub_10012A6A0();
    uint64_t v55 = v65;
    uint64_t v56 = v67;
    (*(void (**)(char *, char *, uint64_t))(v65 + 16))(v61, v54, v67);
    uint64_t v57 = v17[7];
    uint64_t v58 = v71;
    v60[1] = *(void *)(v71 + v17[6]);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v63 + 16))(v66, v71 + v57, v64);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v69 + 16))(v68, v58 + v17[8], v70);
    uint64_t v59 = v72;
    sub_10012C4D0();
    (*(void (**)(char *, uint64_t))(v55 + 8))(v54, v56);
    sub_1000A630C(v58, (void (*)(void))type metadata accessor for AirQualityViewModel);
    sub_1000A630C(v24, (void (*)(void))type metadata accessor for AggregateWeatherViewModel);
    sub_1000A630C((uint64_t)v30, (void (*)(void))type metadata accessor for WeatherDataViewModel);
    uint64_t v41 = sub_10012C4E0();
    uint64_t v42 = v59;
    uint64_t v43 = 0;
  }
  else
  {
    int v40 = *v34;
    uint64_t v41 = sub_10012C4E0();
    if (v40)
    {
LABEL_17:
      uint64_t v42 = v72;
      uint64_t v43 = 1;
      return _s13WeatherWidget20WeatherDataViewModelOwst_0(v42, v43, 2, v41);
    }
    uint64_t v42 = v72;
    uint64_t v43 = 2;
  }
  return _s13WeatherWidget20WeatherDataViewModelOwst_0(v42, v43, 2, v41);
}

uint64_t sub_1000A61E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000053D8(&qword_10016B428);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000A624C(uint64_t a1)
{
  uint64_t v2 = sub_1000053D8(&qword_10016B428);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1000A62AC(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_10000B3FC();
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(a2, a1);
  return a2;
}

uint64_t sub_1000A630C(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_10000B3FC();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

unint64_t sub_1000A6364()
{
  return sub_1000A651C(63);
}

unint64_t sub_1000A639C()
{
  return sub_1000A651C(80);
}

unint64_t sub_1000A63D4()
{
  return sub_1000A651C(77);
}

unint64_t sub_1000A640C()
{
  return sub_1000A651C(85);
}

id sub_1000A6444(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3();
  NSString v3 = sub_10012CA20();
  swift_bridgeObjectRelease();

  return v3;
}

id sub_1000A6498()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return [super init];
}

uint64_t type metadata accessor for WeatherSettingsConstants()
{
  return self;
}

unint64_t sub_1000A651C(uint64_t a1)
{
  return a1 & 0xFFFFFFFFFFFFLL | 0xD000000000000000;
}

double sub_1000A6524@<D0>(unsigned __int8 a1@<W0>, uint64_t a2@<X8>)
{
  int v4 = a1;
  uint64_t v5 = sub_10012B200();
  sub_10012B1E0();
  double v7 = v6;
  uint64_t v8 = sub_1000A663C(a1);
  uint64_t v10 = v9;
  char v12 = v11;
  uint64_t v14 = v13;
  if (v4)
  {
    uint64_t v15 = 0;
    uint64_t v16 = 0;
    uint64_t v17 = 0;
    uint64_t v18 = 0;
  }
  else
  {
    sub_10012AF80();
    uint64_t v15 = sub_10012B400();
    uint64_t v17 = v19 & 1;
  }
  *(void *)a2 = v8;
  *(void *)(a2 + 8) = v10;
  *(unsigned char *)(a2 + 16) = v12 & 1;
  *(void *)(a2 + 24) = v14;
  *(void *)(a2 + 32) = v15;
  *(void *)(a2 + 40) = v16;
  *(void *)(a2 + 48) = v17;
  double result = fmin(15.0 / v7, 0.1);
  *(void *)(a2 + 56) = v18;
  *(void *)(a2 + 64) = v5;
  *(double *)(a2 + 72) = result;
  return result;
}

uint64_t sub_1000A663C(unsigned __int8 a1)
{
  if (a1 - 1 >= 2 && a1)
  {
    if (qword_10016AE28 != -1) {
      swift_once();
    }
    uint64_t v2 = sub_10012AB60();
    sub_10000D7A4(v2, (uint64_t)qword_100181C40);
    NSString v3 = sub_10012AB40();
    os_log_type_t v4 = sub_10012CD60();
    if (os_log_type_enabled(v3, v4))
    {
      uint64_t v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v5 = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, v4, "Unexpected error while building a home screen widget", v5, 2u);
      swift_slowDealloc();
    }

    return 11565;
  }
  else
  {
    sub_10012AF80();
    return sub_10012B400();
  }
}

uint64_t sub_1000A67D4(uint64_t a1, uint64_t a2, char a3, int a4)
{
  uint64_t v8 = sub_10012AFE0();
  sub_10000DB98();
  uint64_t v10 = v9;
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_10012C800();
  sub_10000DB98();
  uint64_t v16 = v15;
  __chkstk_darwin(v17);
  char v19 = (char *)&v22 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v19, a1, v14);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v13, a2, v8);
  uint64_t v20 = sub_10003C1D0((uint64_t)v19, (uint64_t)v13, a3, a4);
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(a2, v8);
  (*(void (**)(uint64_t, uint64_t))(v16 + 8))(a1, v14);
  return v20;
}

uint64_t sub_1000A695C()
{
  return type metadata accessor for ErrorViewAttributesFactory();
}

uint64_t type metadata accessor for ErrorViewAttributesFactory()
{
  uint64_t result = qword_10016ED58;
  if (!qword_10016ED58) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1000A69AC@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  int v111 = a2;
  uint64_t v110 = a3;
  uint64_t v5 = sub_1000053D8(&qword_10016BEA8);
  uint64_t v6 = sub_10000DC9C(v5);
  __chkstk_darwin(v6);
  sub_10000DCB4();
  uint64_t v100 = v7;
  sub_1000636C8();
  __chkstk_darwin(v8);
  sub_100011F60();
  uint64_t v102 = v9;
  sub_1000636C8();
  uint64_t v11 = __chkstk_darwin(v10);
  sub_1000AC124(v11, v12, v13, v14, v15, v16, v17, v18, v98);
  sub_10012AB00();
  sub_10000DB98();
  int v107 = v20;
  uint64_t v108 = v19;
  __chkstk_darwin(v19);
  sub_10000DCB4();
  uint64_t v99 = v21;
  sub_1000636C8();
  __chkstk_darwin(v22);
  sub_100011F60();
  uint64_t v101 = v23;
  sub_1000636C8();
  __chkstk_darwin(v24);
  sub_100011FAC();
  uint64_t v103 = v25;
  uint64_t v26 = sub_100129300();
  uint64_t v27 = sub_10000DC9C(v26);
  __chkstk_darwin(v27);
  sub_10000DBCC();
  uint64_t v106 = v28;
  type metadata accessor for AggregateWeatherViewModel(0);
  sub_1000472C0();
  __chkstk_darwin(v29);
  sub_10006D4E4();
  uint64_t v105 = sub_10012AA90();
  sub_10000DB98();
  uint64_t v112 = v30;
  __chkstk_darwin(v31);
  uint64_t v98 = (uint64_t)&v98 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000636C8();
  uint64_t v34 = __chkstk_darwin(v33);
  uint64_t v36 = (char *)&v98 - v35;
  __chkstk_darwin(v34);
  sub_1000AC1D4();
  uint64_t v37 = sub_100129480();
  sub_10000DB98();
  uint64_t v39 = v38;
  __chkstk_darwin(v40);
  sub_10002A5E0();
  uint64_t v43 = v41 - v42;
  __chkstk_darwin(v44);
  os_log_type_t v46 = (char *)&v98 - v45;
  sub_10012A6A0();
  uint64_t v47 = v37;
  sub_1000ABCE8(a1, v3);
  uint64_t v109 = v39;
  uint64_t v48 = v36;
  uint64_t v49 = *(void (**)(uint64_t, char *, uint64_t))(v39 + 16);
  uint64_t v113 = v46;
  v49(v43, v46, v37);
  sub_1001292B0();
  sub_1000ABE60(&qword_10016EE48, (void (*)(uint64_t))type metadata accessor for AggregateWeatherViewModel);
  uint64_t v50 = v105;
  uint64_t v51 = v112;
  sub_10012AA70();
  uint64_t v52 = *(void (**)(void))(v51 + 16);
  sub_1000AC1AC();
  v52();
  int v53 = (*(uint64_t (**)(char *, uint64_t))(v51 + 88))(v48, v50);
  if (v53 == enum case for NextPrecipitation.in60Minutes(_:))
  {
    uint64_t v54 = sub_1000AC00C();
    v55(v54);
    uint64_t v56 = v103;
    sub_100011F6C();
    v57();
    uint64_t v58 = v104;
    unsigned __int8 v59 = v111;
    sub_1000A7658(v56, v111, 0, 0, v104);
    sub_1000AC040();
    v60();
    uint64_t v61 = sub_10012C0E0();
    sub_10006D2E8(v58, 1, v61);
    if (!v62)
    {
      uint64_t v72 = sub_1000AC028();
      v73(v72);
      sub_10000B424();
      v74();
      sub_1000472C0();
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v75 + 32))(v110, v58, v61);
    }
    uint64_t v63 = v58;
  }
  else
  {
    uint64_t v64 = v107;
    uint64_t v65 = v108;
    if (v53 == enum case for NextPrecipitation.in24Hours(_:))
    {
      uint64_t v66 = sub_1000AC00C();
      v67(v66);
      uint64_t v68 = v64;
      uint64_t v69 = v101;
      sub_100011F6C();
      v70();
      uint64_t v71 = v102;
      unsigned __int8 v59 = v111;
      sub_1000A887C(v69, v111, v102);
      (*((void (**)(uint64_t, uint64_t))v68 + 1))(v69, v65);
    }
    else
    {
      unsigned __int8 v59 = v111;
      if (v53 != enum case for NextPrecipitation.in10Days(_:))
      {
        if (v53 != enum case for NextPrecipitation.noneIn10Days(_:))
        {
          int v107 = v48;
          uint64_t v108 = v47;
          if (qword_10016AE18 != -1) {
            swift_once();
          }
          uint64_t v89 = sub_10012AB60();
          sub_10000D7A4(v89, (uint64_t)qword_100181C10);
          uint64_t v90 = v98;
          sub_1000AC1AC();
          v52();
          uint64_t v91 = sub_10012AB40();
          os_log_type_t v92 = sub_10012CD40();
          if (os_log_type_enabled(v91, v92))
          {
            uint64_t v93 = (uint8_t *)sub_1000AC160();
            uint64_t v115 = swift_slowAlloc();
            *(_DWORD *)uint64_t v93 = 136315138;
            sub_1000ABE60(&qword_10016EE50, (void (*)(uint64_t))&type metadata accessor for NextPrecipitation);
            uint64_t v94 = sub_10012D1D0();
            uint64_t v114 = sub_100123564(v94, v95, &v115);
            uint64_t v96 = v112;
            sub_10012CF70();
            swift_bridgeObjectRelease();
            char v97 = *(void (**)(void))(v96 + 8);
            sub_1000999D0();
            v97();
            _os_log_impl((void *)&_mh_execute_header, v91, v92, "Unknown nextPrecipitationEventModel case in makePrecipitationModel: %s", v93, 0xCu);
            swift_arrayDestroy();
            unsigned __int8 v59 = v111;
            sub_10000DBB4();
            sub_10000DBB4();
          }
          else
          {
            char v97 = *(void (**)(void))(v51 + 8);
            ((void (*)(uint64_t, uint64_t))v97)(v90, v50);
          }

          ((void (*)(char *, uint64_t))v97)(v107, v50);
        }
        goto LABEL_13;
      }
      uint64_t v77 = sub_1000AC00C();
      v78(v77);
      uint64_t v79 = v99;
      sub_100011F6C();
      v80();
      uint64_t v71 = v100;
      sub_1000A92F4(v79, (uint64_t)v113, v59, v100);
      (*((void (**)(uint64_t, uint64_t))v64 + 1))(v79, v65);
    }
    uint64_t v81 = sub_10012C0E0();
    sub_10006D2E8(v71, 1, v81);
    if (!v62)
    {
      uint64_t v85 = sub_1000AC028();
      v86(v85);
      sub_10000B424();
      v87();
      sub_1000472C0();
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v88 + 32))(v110, v71, v81);
    }
    uint64_t v63 = v71;
  }
  sub_100046DC4(v63, &qword_10016BEA8);
LABEL_13:
  sub_1000AA544(v59, v110);
  uint64_t v82 = sub_1000AC028();
  v83(v82);
  sub_10000B424();
  return v84();
}

uint64_t sub_1000A7190@<X0>(uint64_t a1@<X0>, int a2@<W1>, double a3@<X2>, uint64_t a4@<X8>, double a5@<D0>)
{
  int v52 = a2;
  uint64_t v54 = a4;
  uint64_t v8 = sub_1000053D8(&qword_10016EE10);
  uint64_t v9 = sub_10000DC9C(v8);
  __chkstk_darwin(v9);
  sub_10000DC50();
  uint64_t v12 = v11 - v10;
  uint64_t v13 = sub_10012AB00();
  sub_10000DB98();
  uint64_t v51 = v14;
  __chkstk_darwin(v15);
  sub_1000AC07C(v16, v50[0]);
  uint64_t v17 = sub_100129300();
  uint64_t v18 = sub_10000DC9C(v17);
  __chkstk_darwin(v18);
  sub_10000DC50();
  sub_100129480();
  sub_10000DB98();
  v50[0] = v20;
  v50[1] = v19;
  __chkstk_darwin(v19);
  sub_10002A53C();
  uint64_t v21 = sub_1000053D8(&qword_10016EE18);
  uint64_t v22 = sub_10000DC9C(v21);
  __chkstk_darwin(v22);
  sub_10002A5E0();
  uint64_t v25 = v23 - v24;
  __chkstk_darwin(v26);
  uint64_t v28 = (char *)v50 - v27;
  double v55 = *(double *)(a1 + *(int *)(type metadata accessor for AggregateWeatherViewModel(0) + 28));
  swift_bridgeObjectRetain();
  sub_10012A6A0();
  sub_1001292B0();
  sub_1000053D8(&qword_10016D1C0);
  sub_10000B38C(&qword_10016D2D0, &qword_10016D1C0);
  sub_1000ABE60(&qword_10016D2C8, (void (*)(uint64_t))&type metadata accessor for HourlyForecastBannerViewModel);
  double v53 = a3;
  sub_10012AA60();
  sub_1000ABD4C((uint64_t)v28, v25, &qword_10016EE18);
  uint64_t v29 = sub_10012AA90();
  sub_10006D2E8(v25, 1, v29);
  if (v33)
  {
    sub_100046DC4(v25, &qword_10016EE18);
    _s13WeatherWidget20WeatherDataViewModelOwst_0(v12, 1, 1, v13);
  }
  else
  {
    sub_10012AA80();
    sub_1000472C0();
    sub_10000B424();
    v32(v30, v31);
    sub_10006D2E8(v12, 1, v13);
    if (!v33)
    {
      uint64_t v42 = v50[2];
      uint64_t v41 = v51;
      sub_100011F6C();
      v45(v43, v44);
      sub_10012A6A0();
      sub_1000A887C(v42, v52, v54);
      sub_10000B424();
      v48(v46, v47);
      (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v42, v13);
      return sub_100046DC4((uint64_t)v28, &qword_10016EE18);
    }
  }
  sub_100046DC4(v12, &qword_10016EE10);
  if (qword_10016AE18 != -1) {
    swift_once();
  }
  uint64_t v34 = sub_10012AB60();
  sub_10000D7A4(v34, (uint64_t)qword_100181C10);
  uint64_t v35 = sub_10012AB40();
  os_log_type_t v36 = sub_10012CD60();
  if (os_log_type_enabled(v35, v36))
  {
    uint64_t v37 = swift_slowAlloc();
    *(_DWORD *)uint64_t v37 = 134218240;
    double v55 = v53;
    sub_10012CF70();
    *(_WORD *)(v37 + 12) = 2048;
    double v55 = a5;
    sub_10012CF70();
    _os_log_impl((void *)&_mh_execute_header, v35, v36, "No precipitation occurring in the next %ld hours(s), with precip threshold %f", (uint8_t *)v37, 0x16u);
    sub_10000DBB4();
  }

  sub_100046DC4((uint64_t)v28, &qword_10016EE18);
  uint64_t v38 = sub_10012C0E0();
  return sub_1000AC238(v54, v39, v40, v38);
}

uint64_t sub_1000A7658@<X0>(uint64_t a1@<X0>, int a2@<W2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v193 = a4;
  uint64_t v191 = a3;
  uint64_t v212 = a5;
  LODWORD(v217) = a2;
  int v6 = a2;
  uint64_t v215 = sub_100129160();
  sub_10000DB98();
  uint64_t v202 = v7;
  __chkstk_darwin(v8);
  sub_10000DCB4();
  uint64_t v192 = v9;
  sub_1000636C8();
  __chkstk_darwin(v10);
  sub_100011FAC();
  uint64_t v205 = v11;
  uint64_t v12 = sub_1001291A0();
  uint64_t v13 = sub_10000DC9C(v12);
  __chkstk_darwin(v13);
  sub_10000DBCC();
  sub_1000999FC(v14);
  uint64_t v201 = sub_10012CA10();
  sub_10000DB98();
  uint64_t v200 = v15;
  __chkstk_darwin(v16);
  sub_10000DBCC();
  sub_1000999FC(v17);
  uint64_t v198 = sub_100129380();
  sub_10000DB98();
  uint64_t v197 = v18;
  __chkstk_darwin(v19);
  sub_10000DBCC();
  sub_1000999FC(v20);
  uint64_t v196 = sub_1001293A0();
  sub_10000DB98();
  uint64_t v195 = v21;
  __chkstk_darwin(v22);
  sub_10000DBCC();
  uint64_t v194 = v23;
  uint64_t v24 = sub_1000053D8(&qword_10016ECC0);
  uint64_t v25 = sub_10000DC9C(v24);
  __chkstk_darwin(v25);
  sub_10000DCB4();
  uint64_t v204 = v26;
  sub_1000636C8();
  __chkstk_darwin(v27);
  sub_100011F60();
  uint64_t v203 = v28;
  sub_1000636C8();
  __chkstk_darwin(v29);
  sub_100011F60();
  uint64_t v213 = v30;
  sub_1000636C8();
  __chkstk_darwin(v31);
  sub_100011FAC();
  uint64_t v207 = v32;
  sub_100129B10();
  sub_10000DB98();
  uint64_t v218 = v34;
  uint64_t v219 = v33;
  __chkstk_darwin(v33);
  sub_1000AC07C(v35, v187._countAndFlagsBits);
  uint64_t v36 = sub_10012AAD0();
  sub_10000DB98();
  uint64_t v38 = v37;
  __chkstk_darwin(v39);
  sub_10000DCB4();
  *(void *)&long long v214 = v40;
  sub_1000636C8();
  __chkstk_darwin(v41);
  uint64_t v43 = (char *)&v187 - v42;
  uint64_t v44 = sub_10012AB00();
  sub_10000DB98();
  uint64_t v46 = v45;
  __chkstk_darwin(v47);
  sub_10000DCB4();
  uint64_t v190 = v48;
  sub_1000636C8();
  uint64_t v50 = __chkstk_darwin(v49);
  int v52 = (char *)&v187 - v51;
  __chkstk_darwin(v50);
  double v53 = *(void (**)(void, void, void))(v46 + 16);
  uint64_t v220 = a1;
  uint64_t v209 = v53;
  v53((char *)&v187 - v54, a1, v44);
  uint64_t v210 = v46;
  uint64_t v211 = v36;
  if (v6 == 2)
  {
    sub_10012AAF0();
    char v55 = sub_10012AAC0();
    (*(void (**)(char *, uint64_t))(v38 + 8))(v43, v36);
    uint64_t v56 = sub_1000AC09C();
    v57(v56);
    if (v55)
    {
      unint64_t v206 = 0xEE006C6C69662E6ELL;
      uint64_t v58 = 0x75732E64756F6C63;
      uint64_t v59 = v38;
      uint64_t v60 = v214;
      uint64_t v61 = v216;
      goto LABEL_7;
    }
    uint64_t v59 = v38;
  }
  else
  {
    uint64_t v62 = sub_1000AC09C();
    v63(v62);
    uint64_t v59 = v38;
  }
  uint64_t v60 = v214;
  uint64_t v61 = v216;
  sub_1000AC264();
  uint64_t v58 = sub_1000AE508();
  unint64_t v65 = v64;
  sub_1000999D0();
  v66();
  unint64_t v206 = v65;
  if (!v65) {
    goto LABEL_54;
  }
LABEL_7:
  int v67 = v217;
  sub_1000AC17C();
  v68();
  uint64_t v188 = v58;
  if (v67 == 2)
  {
    sub_10012AAF0();
    char v69 = sub_10012AAC0();
    sub_1000999D0();
    v70();
    sub_1000999D0();
    v71();
    if (v69)
    {
      if (qword_10016AEE8 != -1) {
        swift_once();
      }
      id v72 = (id)qword_100181E30;
      sub_1000AC208();
      sub_1000AC04C();
      v223._countAndFlagsBits = 0x676E6970706F7473;
      v223._object = (void *)0xE800000000000000;
      uint64_t v79 = (void *)sub_1000AC100(v223, v73, v74, v75, v76, v77, v78, v187);
      uint64_t v81 = v80;

      goto LABEL_14;
    }
  }
  else
  {
    v208(v52, v44);
  }
  sub_1000AC264();
  uint64_t v79 = (void *)sub_1000AE6FC();
  uint64_t v81 = v82;
  sub_1000999D0();
  v83();
  if (!v81)
  {
    swift_bridgeObjectRelease();
    goto LABEL_54;
  }
LABEL_14:
  v187._object = v79;
  NSDateComponentsFormatterUnitsStyle v84 = NSDateComponentsFormatterUnitsStyleAbbreviated;
  sub_1000AC22C();
  _s13WeatherWidget20WeatherDataViewModelOwst_0(v85, v86, v87, v215);
  if (!(_BYTE)v217)
  {
    sub_100129340();
    sub_100129390();
    sub_10000B424();
    v88();
    char v89 = sub_100129370();
    sub_10000B424();
    v90();
    if (v89) {
      NSDateComponentsFormatterUnitsStyle v84 = NSDateComponentsFormatterUnitsStyleBrief;
    }
    else {
      NSDateComponentsFormatterUnitsStyle v84 = NSDateComponentsFormatterUnitsStyleShort;
    }
  }
  sub_10012AAF0();
  uint64_t v91 = v211;
  int v92 = (*(uint64_t (**)(uint64_t, uint64_t))(v59 + 88))(v60, v211);
  if (v92 == enum case for PrecipitationEvent.StartStop.start(_:))
  {
    uint64_t v93 = sub_1000AC194();
    v94(v93);
    uint64_t v95 = sub_10012CC70(v84);
    uint64_t v189 = v81;
    if (v96)
    {
      uint64_t v97 = v95;
      uint64_t v98 = v96;
      uint64_t v99 = v199;
      sub_10012CA00();
      sub_1000053D8(&qword_10016C880);
      uint64_t v100 = sub_1000AC214();
      *(_OWORD *)(v100 + 16) = xmmword_100130010;
      *(void *)(v100 + 32) = v97;
      *(void *)(v100 + 40) = v98;
      swift_bridgeObjectRetain();
      uint64_t v101 = v203;
      sub_1000AB6B0(v99, 0, v217, v100, v203);
      swift_bridgeObjectRelease();
      sub_10000B424();
      v102();
      _s13WeatherWidget20WeatherDataViewModelOwst_0(v101, 0, 1, v215);
      sub_1000ABDF8(v101, v207);
      uint64_t v103 = v213;
      if (qword_10016AEE8 != -1) {
        swift_once();
      }
      id v104 = (id)qword_100181E30;
      sub_1000AC04C();
      v224._countAndFlagsBits = 0x206E692040243125;
      v224._object = (void *)0xEC00000040243225;
      sub_1000AC0DC(v224, v105, v106, v107, v108, v109, v110, v187);

      sub_1000053D8(&qword_10016EE28);
      uint64_t v111 = swift_allocObject();
      *(_OWORD *)(v111 + 16) = xmmword_100130850;
      uint64_t v112 = v216;
      sub_10012AAA0();
      sub_100129B00();
      sub_1000AC250();
      sub_10000B424();
      v115(v113, v114);
      *(void *)(v111 + 56) = &type metadata for String;
      unint64_t v116 = sub_1000ABC9C();
      *(void *)(v111 + 32) = v112;
      *(void *)(v111 + 40) = v81;
      *(void *)(v111 + 96) = &type metadata for String;
      *(void *)(v111 + 104) = v116;
      *(void *)(v111 + 64) = v116;
      *(void *)(v111 + 72) = v97;
LABEL_28:
      *(void *)(v111 + 80) = v98;
      sub_10012CA70();
      uint64_t v148 = v147;
      swift_bridgeObjectRelease();
      uint64_t v149 = v215;
      uint64_t v150 = v205;
      NSDateComponentsFormatterUnitsStyle v84 = v207;
LABEL_46:
      uint64_t v177 = v204;
      sub_1000ABD4C(v84, v204, &qword_10016ECC0);
      sub_10006D2E8(v177, 1, v149);
      if (v178)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_100046DC4(v103, &qword_10016ECC0);
        swift_bridgeObjectRelease();
        uint64_t v103 = v84;
      }
      else
      {
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v202 + 32))(v150, v177, v149);
        if (v148)
        {
          if (v193)
          {
            swift_bridgeObjectRetain_n();
            swift_bridgeObjectRelease();
            sub_100129190();
            sub_100129170();
            _s13WeatherWidget20WeatherDataViewModelOwst_0(v203, 1, 1, v149);
            uint64_t v179 = v212;
            sub_1000AC05C();
            sub_10012C090();
            sub_1000AC040();
            v180();
            sub_100046DC4(v103, &qword_10016ECC0);
            sub_100046DC4(v84, &qword_10016ECC0);
            uint64_t v181 = sub_10012C0E0();
            uint64_t v182 = v179;
          }
          else
          {
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v202 + 16))(v192, v150, v149);
            sub_1000ABD4C(v103, v203, &qword_10016ECC0);
            uint64_t v185 = v212;
            sub_1000AC05C();
            sub_10012C090();
            sub_1000AC040();
            v186();
            sub_100046DC4(v103, &qword_10016ECC0);
            sub_100046DC4(v207, &qword_10016ECC0);
            uint64_t v181 = sub_10012C0E0();
            uint64_t v182 = v185;
          }
          uint64_t v184 = 0;
          return _s13WeatherWidget20WeatherDataViewModelOwst_0(v182, v184, 1, v181);
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1000AC040();
        v183();
        uint64_t v177 = v84;
      }
      sub_100046DC4(v103, &qword_10016ECC0);
      sub_100046DC4(v177, &qword_10016ECC0);
LABEL_54:
      uint64_t v181 = sub_10012C0E0();
      uint64_t v182 = v212;
      uint64_t v184 = 1;
      return _s13WeatherWidget20WeatherDataViewModelOwst_0(v182, v184, 1, v181);
    }
LABEL_30:
    sub_1000AC264();
    sub_1000AB1A4(v61, v217);
    uint64_t v148 = v151;
    sub_10000B424();
    v152();
    uint64_t v103 = v213;
    if (v148)
    {
      swift_bridgeObjectRetain();
      sub_100129190();
      sub_1000AC0B8();
      uint64_t v153 = v84;
      uint64_t v154 = 0;
    }
    else
    {
      NSDateComponentsFormatterUnitsStyle v84 = v207;
      uint64_t v153 = v207;
      uint64_t v154 = 1;
    }
    uint64_t v149 = v215;
    _s13WeatherWidget20WeatherDataViewModelOwst_0(v153, v154, 1, v215);
LABEL_45:
    uint64_t v150 = v205;
    goto LABEL_46;
  }
  if (v92 == enum case for PrecipitationEvent.StartStop.stop(_:))
  {
    uint64_t v117 = sub_1000AC194();
    v118(v117);
    uint64_t v119 = sub_10012CC70(v84);
    uint64_t v189 = v81;
    if (v120)
    {
      uint64_t v121 = v119;
      uint64_t v98 = v120;
      sub_1000AC208();
      uint64_t v122 = v199;
      sub_10012CA00();
      sub_1000053D8(&qword_10016EE58);
      uint64_t v123 = *(void *)(sub_1000053D8(&qword_10016EE60) - 8);
      unint64_t v124 = (*(unsigned __int8 *)(v123 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v123 + 80);
      uint64_t v125 = swift_allocObject();
      long long v214 = xmmword_100130010;
      *(_OWORD *)(v125 + 16) = xmmword_100130010;
      *(unsigned char *)(v125 + v124) = 2;
      sub_10012CA00();
      sub_1000ABDAC();
      uint64_t v126 = sub_10012C9A0();
      sub_1000053D8(&qword_10016C880);
      uint64_t v127 = sub_1000AC214();
      sub_1000AC1E8(v127);
      uint64_t v128 = v203;
      unsigned __int8 v129 = v217;
      sub_1000AB6B0(v122, v126, v217, v127, v203);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v130 = *(void (**)(uint64_t))(v200 + 8);
      uint64_t v131 = sub_1000AC1C0();
      v130(v131);
      uint64_t v132 = v215;
      _s13WeatherWidget20WeatherDataViewModelOwst_0(v128, 0, 1, v215);
      sub_1000ABDF8(v128, v207);
      sub_1000AC208();
      sub_10012CA00();
      uint64_t v133 = sub_1000AC214();
      sub_1000AC1E8(v133);
      sub_1000AB6B0(v122, 0, v129, v133, v128);
      swift_bridgeObjectRelease();
      uint64_t v134 = sub_1000AC1C0();
      v130(v134);
      uint64_t v103 = v213;
      sub_100046DC4(v213, &qword_10016ECC0);
      _s13WeatherWidget20WeatherDataViewModelOwst_0(v128, 0, 1, v132);
      sub_1000ABDF8(v128, v103);
      if (qword_10016AEE8 != -1) {
        swift_once();
      }
      id v135 = (id)qword_100181E30;
      sub_1000AC208();
      sub_1000AC04C();
      v225._object = (void *)0x800000010013B180;
      sub_1000AC0DC(v225, v136, v137, v138, v139, v140, v141, v187);

      sub_1000053D8(&qword_10016EE28);
      uint64_t v111 = swift_allocObject();
      *(_OWORD *)(v111 + 16) = xmmword_100130850;
      uint64_t v142 = v216;
      sub_10012AAA0();
      sub_100129B00();
      sub_1000AC250();
      sub_10000B424();
      v145(v143, v144);
      *(void *)(v111 + 56) = &type metadata for String;
      unint64_t v146 = sub_1000ABC9C();
      *(void *)(v111 + 32) = v142;
      *(void *)(v111 + 40) = v128;
      *(void *)(v111 + 96) = &type metadata for String;
      *(void *)(v111 + 104) = v146;
      *(void *)(v111 + 64) = v146;
      *(void *)(v111 + 72) = v121;
      goto LABEL_28;
    }
    goto LABEL_30;
  }
  if (v92 == enum case for PrecipitationEvent.StartStop.constant(_:))
  {
    uint64_t v189 = v81;
    sub_1000AC264();
    sub_1000AB1A4(v61, v217);
    uint64_t v148 = v155;
    sub_10000B424();
    v156();
    if (v148)
    {
      swift_bridgeObjectRetain();
      sub_100129190();
      sub_1000AC0B8();
      uint64_t v157 = v84;
      uint64_t v158 = 0;
    }
    else
    {
      NSDateComponentsFormatterUnitsStyle v84 = v207;
      uint64_t v157 = v207;
      uint64_t v158 = 1;
    }
    uint64_t v149 = v215;
    _s13WeatherWidget20WeatherDataViewModelOwst_0(v157, v158, 1, v215);
    uint64_t v103 = v213;
    goto LABEL_45;
  }
  uint64_t v219 = v59;
  uint64_t v159 = v91;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (qword_10016AE18 != -1) {
    swift_once();
  }
  uint64_t v160 = sub_10012AB60();
  sub_10000D7A4(v160, (uint64_t)qword_100181C10);
  sub_1000AC17C();
  v161();
  uint64_t v162 = sub_10012AB40();
  os_log_type_t v163 = sub_10012CD40();
  if (os_log_type_enabled(v162, v163))
  {
    uint64_t v164 = (uint8_t *)sub_1000AC160();
    uint64_t v220 = swift_slowAlloc();
    uint64_t v222 = v220;
    uint64_t v218 = v164;
    *(_DWORD *)uint64_t v164 = 136315138;
    uint64_t v217 = v164 + 4;
    sub_10012AAF0();
    sub_1000ABE60(&qword_10016EE20, (void (*)(uint64_t))&type metadata accessor for PrecipitationEvent.StartStop);
    uint64_t v165 = v159;
    uint64_t v166 = sub_10012D1D0();
    unint64_t v168 = v167;
    uint64_t v169 = v219;
    sub_1000999D0();
    v170();
    uint64_t v221 = sub_100123564(v166, v168, &v222);
    sub_10012CF70();
    swift_bridgeObjectRelease();
    sub_1000999D0();
    v171();
    _os_log_impl((void *)&_mh_execute_header, v162, v163, "Unknown PrecipitationStartStop case in makeNextHourPrecipitationModel: %s", v218, 0xCu);
    swift_arrayDestroy();
    sub_10000DBB4();
    sub_10000DBB4();

    sub_100046DC4(v213, &qword_10016ECC0);
  }
  else
  {

    sub_1000999D0();
    v172();
    sub_100046DC4(v213, &qword_10016ECC0);
    uint64_t v165 = v159;
    uint64_t v169 = v219;
  }
  uint64_t v173 = sub_10012C0E0();
  sub_1000AC238(v212, v174, v175, v173);
  return (*(uint64_t (**)(void, uint64_t))(v169 + 8))(v214, v165);
}

uint64_t sub_1000A887C@<X0>(uint64_t a1@<X0>, int a2@<W2>, uint64_t a3@<X8>)
{
  uint64_t v135 = a1;
  uint64_t v131 = a3;
  int v120 = a2;
  LODWORD(v132) = a2;
  uint64_t v130 = sub_10012AB00();
  sub_10000DB98();
  uint64_t v133 = v5;
  __chkstk_darwin(v6);
  sub_10000DBCC();
  uint64_t v134 = v7;
  uint64_t v8 = sub_1000053D8(&qword_10016ECC0);
  uint64_t v9 = sub_10000DC9C(v8);
  __chkstk_darwin(v9);
  sub_10000DBCC();
  uint64_t v127 = v10;
  uint64_t v126 = sub_100129B10();
  sub_10000DB98();
  uint64_t v128 = v11;
  __chkstk_darwin(v12);
  sub_10000DCB4();
  uint64_t v122 = v13;
  sub_1000636C8();
  __chkstk_darwin(v14);
  sub_100011F60();
  v117._object = v15;
  sub_1000636C8();
  __chkstk_darwin(v16);
  sub_100011FAC();
  uint64_t v121 = v17;
  uint64_t v119 = sub_10012CA10();
  sub_10000DB98();
  uint64_t v118 = v18;
  __chkstk_darwin(v19);
  sub_10000DBCC();
  sub_1000999FC(v20);
  sub_100129160();
  sub_10000DB98();
  uint64_t v124 = v22;
  uint64_t v125 = v21;
  __chkstk_darwin(v21);
  uint64_t v123 = (char *)&v117 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000636C8();
  uint64_t v25 = __chkstk_darwin(v24);
  sub_1000AC124(v25, v26, v27, v28, v29, v30, v31, v32, v117._countAndFlagsBits);
  uint64_t v33 = sub_10012AAD0();
  sub_10000DB98();
  uint64_t v35 = v34;
  __chkstk_darwin(v36);
  sub_10002A5E0();
  uint64_t v39 = v37 - v38;
  __chkstk_darwin(v40);
  sub_1000AC1D4();
  uint64_t v41 = sub_100129380();
  sub_10000DB98();
  uint64_t v43 = v42;
  __chkstk_darwin(v44);
  sub_100099AF0();
  sub_1001293A0();
  sub_10000DB98();
  __chkstk_darwin(v45);
  sub_10000DC50();
  if (v132)
  {
    NSDateComponentsFormatterUnitsStyle v46 = NSDateComponentsFormatterUnitsStyleAbbreviated;
  }
  else
  {
    sub_100129340();
    sub_100129390();
    sub_1000AC040();
    v47();
    char v48 = sub_100129370();
    (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v4, v41);
    if (v48) {
      NSDateComponentsFormatterUnitsStyle v46 = NSDateComponentsFormatterUnitsStyleBrief;
    }
    else {
      NSDateComponentsFormatterUnitsStyle v46 = NSDateComponentsFormatterUnitsStyleShort;
    }
  }
  uint64_t v49 = v135;
  sub_10012AAF0();
  int v50 = (*(uint64_t (**)(uint64_t, uint64_t))(v35 + 88))(v3, v33);
  uint64_t v51 = v133;
  uint64_t v52 = v134;
  if (v50 != enum case for PrecipitationEvent.StartStop.start(_:))
  {
    uint64_t v66 = *(void (**)(uint64_t, uint64_t))(v35 + 8);
    v66(v3, v33);
    if (qword_10016AE18 != -1) {
      swift_once();
    }
    uint64_t v67 = sub_10012AB60();
    sub_10000D7A4(v67, (uint64_t)qword_100181C10);
    uint64_t v68 = v130;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v51 + 16))(v52, v49, v130);
    char v69 = sub_10012AB40();
    os_log_type_t v70 = sub_10012CD40();
    if (os_log_type_enabled(v69, v70))
    {
      uint64_t v71 = (uint8_t *)sub_1000AC160();
      uint64_t v135 = swift_slowAlloc();
      uint64_t v137 = v135;
      unsigned __int8 v129 = v66;
      *(_DWORD *)uint64_t v71 = 136315138;
      uint64_t v132 = v71 + 4;
      sub_10012AAF0();
      sub_1000ABE60(&qword_10016EE20, (void (*)(uint64_t))&type metadata accessor for PrecipitationEvent.StartStop);
      uint64_t v72 = sub_10012D1D0();
      unint64_t v74 = v73;
      v129(v39, v33);
      uint64_t v136 = sub_100123564(v72, v74, &v137);
      sub_10012CF70();
      swift_bridgeObjectRelease();
      sub_1000AC040();
      v75();
      _os_log_impl((void *)&_mh_execute_header, v69, v70, "unexpectedly got startStop type: %s when calculating 24 hour precipitation string", v71, 0xCu);
      swift_arrayDestroy();
      sub_10000DBB4();
      sub_10000DBB4();
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t))(v51 + 8))(v52, v68);
    }

    uint64_t v82 = v131;
    uint64_t v80 = sub_10012C0E0();
    uint64_t v81 = v82;
    goto LABEL_22;
  }
  (*(void (**)(uint64_t, uint64_t))(v35 + 96))(v3, v33);
  sub_10012AAB0();
  if (v53)
  {
    if (qword_10016AE18 != -1) {
      swift_once();
    }
    uint64_t v76 = sub_10012AB60();
    sub_10000D7A4(v76, (uint64_t)qword_100181C10);
    uint64_t v77 = sub_10012AB40();
    os_log_type_t v78 = sub_10012CD40();
    if (os_log_type_enabled(v77, v78))
    {
      uint64_t v79 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v79 = 0;
      _os_log_impl((void *)&_mh_execute_header, v77, v78, "unexpectedly got nil precipitation chance when calculating 24 hour precipitation string", v79, 2u);
      sub_10000DBB4();
    }

    uint64_t v80 = sub_10012C0E0();
    uint64_t v81 = v131;
LABEL_22:
    uint64_t v83 = 1;
    return _s13WeatherWidget20WeatherDataViewModelOwst_0(v81, v83, 1, v80);
  }
  uint64_t v54 = sub_10012CC40(1);
  uint64_t v56 = v55;
  uint64_t v57 = sub_10012CC60(v46);
  if (v58)
  {
    uint64_t v59 = v57;
    uint64_t v60 = v58;
    unsigned __int8 v61 = v120;
    if (v120 == 2)
    {
      sub_1000AC13C();
      sub_1000053D8(&qword_10016C880);
      uint64_t v62 = sub_1000AC214();
      *(_OWORD *)(v62 + 16) = xmmword_100130010;
      *(void *)(v62 + 32) = v59;
      *(void *)(v62 + 40) = v60;
      swift_bridgeObjectRetain();
      uint64_t v63 = (uint64_t)v129;
      uint64_t v64 = v52;
      unsigned __int8 v65 = 2;
    }
    else
    {
      sub_1000AC13C();
      sub_1000053D8(&qword_10016C880);
      uint64_t v62 = swift_allocObject();
      *(_OWORD *)(v62 + 16) = xmmword_100130850;
      *(void *)(v62 + 32) = v54;
      *(void *)(v62 + 40) = v56;
      *(void *)(v62 + 48) = v59;
      *(void *)(v62 + 56) = v60;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v63 = (uint64_t)v129;
      uint64_t v64 = v52;
      unsigned __int8 v65 = v61;
    }
    sub_1000AB6B0(v64, 0, v65, v62, v63);
    uint64_t v88 = v126;
    swift_bridgeObjectRelease();
    sub_10000B424();
    v89();
    if (qword_10016AEE8 != -1) {
      swift_once();
    }
    id v90 = (id)qword_100181E30;
    sub_1000AC04C();
    v138._object = (void *)0x800000010013AFF0;
    v138._countAndFlagsBits = 0xD000000000000013;
    sub_1000AC100(v138, v91, v92, v93, v94, v95, v96, v117);

    sub_1000053D8(&qword_10016EE28);
    uint64_t v97 = swift_allocObject();
    *(_OWORD *)(v97 + 16) = xmmword_100130850;
    *(void *)(v97 + 56) = &type metadata for String;
    unint64_t v98 = sub_1000ABC9C();
    *(void *)(v97 + 32) = v54;
    *(void *)(v97 + 40) = v56;
    *(void *)(v97 + 96) = &type metadata for String;
    *(void *)(v97 + 104) = v98;
    *(void *)(v97 + 64) = v98;
    *(void *)(v97 + 72) = v59;
    *(void *)(v97 + 80) = v60;
    uint64_t v99 = sub_10012CA70();
    uint64_t v133 = v100;
    uint64_t v134 = v99;
    swift_bridgeObjectRelease();
    sub_10012AAA0();
    sub_1000AE508();
    uint64_t v102 = v101;
    uint64_t v103 = v128;
    id v104 = *(void (**)(void))(v128 + 8);
    sub_1000AC040();
    v104();
    if (!v102)
    {
      uint64_t v105 = *(void (**)(void *, void, uint64_t))(v103 + 104);
      object = v117._object;
      v105(v117._object, enum case for Precipitation.mixed(_:), v88);
      sub_1000AE508();
      ((void (*)(void *, uint64_t))v104)(object, v88);
    }
    sub_10012AAA0();
    sub_1000AE6FC();
    uint64_t v108 = v107;
    sub_1000AC040();
    v104();
    if (!v108)
    {
      uint64_t v109 = v117._object;
      (*(void (**)(void *, void, uint64_t))(v128 + 104))(v117._object, enum case for Precipitation.mixed(_:), v88);
      sub_1000AE6FC();
      ((void (*)(void *, uint64_t))v104)(v109, v88);
    }
    uint64_t v110 = v124;
    uint64_t v111 = v129;
    uint64_t v112 = v125;
    (*(void (**)(char *, void (*)(uint64_t, uint64_t), uint64_t))(v124 + 16))(v123, v129, v125);
    sub_1000AC22C();
    _s13WeatherWidget20WeatherDataViewModelOwst_0(v113, v114, v115, v112);
    uint64_t v116 = v131;
    sub_10012C090();
    (*(void (**)(void, uint64_t))(v110 + 8))(v111, v112);
    uint64_t v80 = sub_10012C0E0();
    uint64_t v81 = v116;
    uint64_t v83 = 0;
    return _s13WeatherWidget20WeatherDataViewModelOwst_0(v81, v83, 1, v80);
  }
  uint64_t v85 = sub_10012C0E0();
  sub_1000AC238(v131, v86, v87, v85);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1000A92F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned __int8 a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v136 = a2;
  uint64_t v156 = a4;
  uint64_t v6 = sub_10012AB00();
  uint64_t v154 = *(void *)(v6 - 8);
  uint64_t v155 = v6;
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v134 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v139 = sub_10012CA10();
  uint64_t v138 = *(void *)(v139 - 8);
  __chkstk_darwin(v139);
  uint64_t v137 = (char *)&v134 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100129300();
  uint64_t v135 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v134 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1000053D8(&qword_10016ECC0);
  __chkstk_darwin(v13 - 8);
  uint64_t v152 = (uint8_t *)&v134 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_100129B10();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v147 = v15;
  uint64_t v148 = v16;
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v141 = (char *)&v134 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v140 = (char *)&v134 - v20;
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v143 = (char *)&v134 - v22;
  uint64_t v23 = __chkstk_darwin(v21);
  uint64_t v145 = (char *)&v134 - v24;
  __chkstk_darwin(v23);
  uint64_t v142 = (char *)&v134 - v25;
  uint64_t v26 = sub_1001291A0();
  __chkstk_darwin(v26 - 8);
  uint64_t v144 = (char *)&v134 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = sub_100129160();
  uint64_t v150 = *(void (***)(char *, char *, char *))(v28 - 8);
  uint64_t v151 = (char *)v28;
  uint64_t v29 = __chkstk_darwin(v28);
  unint64_t v146 = (char *)&v134 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = __chkstk_darwin(v29);
  uint64_t v149 = (char *)&v134 - v32;
  __chkstk_darwin(v31);
  uint64_t v153 = (char *)&v134 - v33;
  uint64_t v34 = sub_10012AAD0();
  uint64_t v35 = *(void *)(v34 - 8);
  uint64_t v36 = __chkstk_darwin(v34);
  uint64_t v38 = (char *)&v134 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v36);
  uint64_t v40 = (double *)((char *)&v134 - v39);
  if (a3) {
    NSDateComponentsFormatterUnitsStyle v41 = NSDateComponentsFormatterUnitsStyleAbbreviated;
  }
  else {
    NSDateComponentsFormatterUnitsStyle v41 = NSDateComponentsFormatterUnitsStyleShort;
  }
  sub_10012AAF0();
  if ((*(unsigned int (**)(double *, uint64_t))(v35 + 88))(v40, v34) == enum case for PrecipitationEvent.StartStop.start(_:))
  {
    uint64_t v43 = *(void (**)(double *, uint64_t))(v35 + 96);
    uint64_t v42 = v35 + 96;
    v43(v40, v34);
    double v44 = *v40;
    sub_10012AAB0();
    if (v45)
    {
      uint64_t v42 = v156;
      if (qword_10016AE18 == -1)
      {
LABEL_20:
        uint64_t v71 = sub_10012AB60();
        sub_10000D7A4(v71, (uint64_t)qword_100181C10);
        uint64_t v72 = sub_10012AB40();
        os_log_type_t v73 = sub_10012CD40();
        if (!os_log_type_enabled(v72, v73))
        {
LABEL_44:

          uint64_t v70 = 1;
          goto LABEL_56;
        }
        unint64_t v74 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)unint64_t v74 = 0;
        uint64_t v75 = "unexpectedly got nil precipitation chance when calculating 10 day precipitation string";
        uint64_t v76 = v72;
        os_log_type_t v77 = v73;
        os_log_type_t v78 = v74;
        uint32_t v79 = 2;
LABEL_43:
        _os_log_impl((void *)&_mh_execute_header, v76, v77, v75, v78, v79);
        swift_slowDealloc();
        goto LABEL_44;
      }
LABEL_60:
      swift_once();
      goto LABEL_20;
    }
    uint64_t v46 = sub_10012CC40(1);
    double v48 = v44 / 86400.0;
    if ((~COERCE__INT64(v44 / 86400.0) & 0x7FF0000000000000) != 0)
    {
      if (v48 > -9.22337204e18)
      {
        if (v48 < 9.22337204e18)
        {
          uint64_t v49 = v46;
          uint64_t v50 = v47;
          uint64_t v51 = (uint64_t)v48;
          if (!(uint64_t)v48)
          {
            if (a3 == 2)
            {
              uint64_t v80 = v147;
              if (qword_10016AEE8 != -1) {
                swift_once();
              }
              uint64_t v81 = (objc_class *)(id)qword_100181E30;
              v132._countAndFlagsBits = 0x800000010013B640;
              v159._countAndFlagsBits = 0x7961646F54;
              v159._object = (void *)0xE500000000000000;
              v163.value._countAndFlagsBits = 0;
              v163.value._object = 0;
              v82.super.Class isa = v81;
              v167._countAndFlagsBits = 0;
              v167._object = (void *)0xE000000000000000;
              sub_100129180(v159, v163, v82, v167, v132);
            }
            else
            {
              uint64_t v80 = v147;
              if (qword_10016AEE8 != -1) {
                swift_once();
              }
              uint64_t v83 = (objc_class *)(id)qword_100181E30;
              v132._countAndFlagsBits = 0x800000010013B510;
              v160._countAndFlagsBits = 0x7961646F54204025;
              v160._object = (void *)0xE800000000000000;
              v164.value._countAndFlagsBits = 0;
              v164.value._object = 0;
              v84.super.Class isa = v83;
              v168._countAndFlagsBits = 0;
              v168._object = (void *)0xE000000000000000;
              sub_100129180(v160, v164, v84, v168, v132);

              sub_1000053D8(&qword_10016EE28);
              uint64_t v85 = swift_allocObject();
              *(_OWORD *)(v85 + 16) = xmmword_100130010;
              *(void *)(v85 + 56) = &type metadata for String;
              *(void *)(v85 + 64) = sub_1000ABC9C();
              *(void *)(v85 + 32) = v49;
              *(void *)(v85 + 40) = v50;
              swift_bridgeObjectRetain();
              sub_10012CA70();
              swift_bridgeObjectRelease();
            }
            sub_100129190();
            sub_100129170();
            if (qword_10016AEE8 != -1) {
              swift_once();
            }
            uint64_t v86 = (objc_class *)(id)qword_100181E30;
            v133._countAndFlagsBits = 0x800000010013B5A0;
            v161._countAndFlagsBits = 0x636E616863204025;
            v161._object = (void *)0xEF7961646F742065;
            v165.value._countAndFlagsBits = 0;
            v165.value._object = 0;
            v87.super.Class isa = v86;
            v169._countAndFlagsBits = 0;
            v169._object = (void *)0xE000000000000000;
            sub_100129180(v161, v165, v87, v169, v133);

            sub_1000053D8(&qword_10016EE28);
            uint64_t v88 = swift_allocObject();
            *(_OWORD *)(v88 + 16) = xmmword_100130010;
            *(void *)(v88 + 56) = &type metadata for String;
            *(void *)(v88 + 64) = sub_1000ABC9C();
            *(void *)(v88 + 32) = v49;
            *(void *)(v88 + 40) = v50;
            uint64_t v89 = sub_10012CA70();
            uint64_t v154 = v90;
            uint64_t v155 = v89;
            swift_bridgeObjectRelease();
            uint64_t v91 = v142;
            sub_10012AAA0();
            sub_1000AE508();
            uint64_t v93 = v92;
            uint64_t v94 = v148;
            uint64_t v95 = *(void (**)(char *, uint64_t))(v148 + 8);
            v95(v91, v80);
            if (!v93)
            {
              uint64_t v96 = v145;
              (*(void (**)(char *, void, uint64_t))(v94 + 104))(v145, enum case for Precipitation.mixed(_:), v80);
              sub_1000AE508();
              v95(v96, v80);
            }
            uint64_t v97 = v143;
            sub_10012AAA0();
            sub_1000AE6FC();
            uint64_t v99 = v98;
            v95(v97, v80);
            if (!v99)
            {
              uint64_t v100 = v145;
              (*(void (**)(char *, void, uint64_t))(v94 + 104))(v145, enum case for Precipitation.mixed(_:), v80);
              sub_1000AE6FC();
              v95(v100, v80);
            }
            uint64_t v101 = v150;
            uint64_t v102 = v153;
            uint64_t v103 = (uint64_t)v151;
            v150[2](v149, v153, v151);
            _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v152, 1, 1, v103);
            uint64_t v42 = v156;
            goto LABEL_55;
          }
          uint64_t v155 = v46;
          uint64_t v52 = sub_10012CC50(v41);
          if (v53)
          {
            uint64_t v54 = v52;
            uint64_t v55 = v53;
            uint64_t v56 = v50;
            uint64_t v154 = a1;
            uint64_t v57 = sub_10012CC50(NSDateComponentsFormatterUnitsStyleShort);
            if (v58)
            {
              uint64_t v59 = v58;
              uint64_t v153 = (char *)v57;
              if (a3 == 2)
              {
                if (v51 <= 6)
                {
                  swift_bridgeObjectRelease();
                  sub_10012AAE0();
                  sub_1001292D0();
                  (*(void (**)(char *, uint64_t))(v135 + 8))(v12, v10);
                  sub_100129190();
                  sub_100129170();
LABEL_48:
                  uint64_t v113 = v140;
                  uint64_t v114 = v147;
                  if (qword_10016AEE8 != -1) {
                    swift_once();
                  }
                  uint64_t v115 = (objc_class *)(id)qword_100181E30;
                  v132._countAndFlagsBits = 0x800000010013B010;
                  v162._object = (void *)0x800000010013AFF0;
                  v162._countAndFlagsBits = 0xD000000000000013;
                  v166.value._countAndFlagsBits = 0;
                  v166.value._object = 0;
                  v116.super.Class isa = v115;
                  v170._countAndFlagsBits = 0;
                  v170._object = (void *)0xE000000000000000;
                  sub_100129180(v162, v166, v116, v170, v132);

                  sub_1000053D8(&qword_10016EE28);
                  uint64_t v117 = swift_allocObject();
                  *(_OWORD *)(v117 + 16) = xmmword_100130850;
                  *(void *)(v117 + 56) = &type metadata for String;
                  unint64_t v118 = sub_1000ABC9C();
                  *(void *)(v117 + 32) = v155;
                  *(void *)(v117 + 40) = v56;
                  *(void *)(v117 + 96) = &type metadata for String;
                  *(void *)(v117 + 104) = v118;
                  uint64_t v119 = v153;
                  *(void *)(v117 + 64) = v118;
                  *(void *)(v117 + 72) = v119;
                  *(void *)(v117 + 80) = v59;
                  uint64_t v155 = sub_10012CA70();
                  uint64_t v153 = v120;
                  swift_bridgeObjectRelease();
                  sub_10012AAA0();
                  sub_1000AE508();
                  uint64_t v122 = v121;
                  uint64_t v123 = v148;
                  uint64_t v124 = *(void (**)(char *, uint64_t))(v148 + 8);
                  v124(v113, v114);
                  if (!v122)
                  {
                    uint64_t v125 = v145;
                    (*(void (**)(char *, void, uint64_t))(v123 + 104))(v145, enum case for Precipitation.mixed(_:), v114);
                    sub_1000AE508();
                    v124(v125, v114);
                  }
                  uint64_t v126 = v141;
                  sub_10012AAA0();
                  sub_1000AE6FC();
                  uint64_t v128 = v127;
                  v124(v126, v114);
                  if (!v128)
                  {
                    unsigned __int8 v129 = v145;
                    (*(void (**)(char *, void, uint64_t))(v123 + 104))(v145, enum case for Precipitation.mixed(_:), v114);
                    sub_1000AE6FC();
                    v124(v129, v114);
                  }
                  uint64_t v101 = v150;
                  uint64_t v102 = v146;
                  uint64_t v103 = (uint64_t)v151;
                  v150[2](v149, v146, v151);
                  _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v152, 1, 1, v103);
                  uint64_t v42 = v156;
LABEL_55:
                  sub_10012C090();
                  ((void (*)(char *, uint64_t))v101[1])(v102, v103);
                  uint64_t v70 = 0;
                  goto LABEL_56;
                }
                uint64_t v108 = v137;
                sub_10012CA00();
                sub_1000053D8(&qword_10016C880);
                uint64_t v109 = swift_allocObject();
                *(_OWORD *)(v109 + 16) = xmmword_100130010;
                *(void *)(v109 + 32) = v54;
                *(void *)(v109 + 40) = v55;
                uint64_t v110 = (uint64_t)v146;
                uint64_t v111 = (uint64_t)v108;
                unsigned __int8 v112 = 2;
              }
              else
              {
                uint64_t v108 = v137;
                sub_10012CA00();
                sub_1000053D8(&qword_10016C880);
                uint64_t v109 = swift_allocObject();
                *(_OWORD *)(v109 + 16) = xmmword_100130850;
                *(void *)(v109 + 32) = v155;
                *(void *)(v109 + 40) = v56;
                *(void *)(v109 + 48) = v54;
                *(void *)(v109 + 56) = v55;
                swift_bridgeObjectRetain();
                uint64_t v110 = (uint64_t)v146;
                uint64_t v111 = (uint64_t)v108;
                unsigned __int8 v112 = a3;
              }
              sub_1000AB6B0(v111, 0, v112, v109, v110);
              swift_bridgeObjectRelease();
              (*(void (**)(char *, uint64_t))(v138 + 8))(v108, v139);
              goto LABEL_48;
            }
            swift_bridgeObjectRelease();
          }
          swift_bridgeObjectRelease();
          if (qword_10016AE18 != -1) {
            swift_once();
          }
          uint64_t v104 = sub_10012AB60();
          sub_10000D7A4(v104, (uint64_t)qword_100181C10);
          uint64_t v72 = sub_10012AB40();
          os_log_type_t v105 = sub_10012CD40();
          BOOL v106 = os_log_type_enabled(v72, v105);
          uint64_t v42 = v156;
          if (!v106) {
            goto LABEL_44;
          }
          uint64_t v107 = (uint8_t *)swift_slowAlloc();
          *(_DWORD *)uint64_t v107 = 134349056;
          v158[0] = v44;
          sub_10012CF70();
          uint64_t v75 = "unexpectedly failed to derive a day duration string. dayDuration=%{public}f";
          uint64_t v76 = v72;
          os_log_type_t v77 = v105;
          os_log_type_t v78 = v107;
          uint32_t v79 = 12;
          goto LABEL_43;
        }
        goto LABEL_59;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
LABEL_59:
    __break(1u);
    goto LABEL_60;
  }
  uint64_t v60 = *(void (***)(char *, char *, char *))(v35 + 8);
  ((void (*)(double *, uint64_t))v60)(v40, v34);
  if (qword_10016AE18 != -1) {
    swift_once();
  }
  uint64_t v61 = sub_10012AB60();
  sub_10000D7A4(v61, (uint64_t)qword_100181C10);
  uint64_t v63 = v154;
  uint64_t v62 = v155;
  (*(void (**)(char *, uint64_t, uint64_t))(v154 + 16))(v8, a1, v155);
  uint64_t v64 = sub_10012AB40();
  os_log_type_t v65 = sub_10012CD40();
  if (os_log_type_enabled(v64, v65))
  {
    uint64_t v66 = (uint8_t *)swift_slowAlloc();
    uint64_t v153 = (char *)swift_slowAlloc();
    v158[0] = *(double *)&v153;
    uint64_t v150 = v60;
    *(_DWORD *)uint64_t v66 = 136315138;
    uint64_t v152 = v66 + 4;
    sub_10012AAF0();
    sub_1000ABE60(&qword_10016EE20, (void (*)(uint64_t))&type metadata accessor for PrecipitationEvent.StartStop);
    uint64_t v67 = sub_10012D1D0();
    uint64_t v151 = v8;
    unint64_t v69 = v68;
    ((void (*)(char *, uint64_t))v150)(v38, v34);
    uint64_t v157 = sub_100123564(v67, v69, (uint64_t *)v158);
    sub_10012CF70();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v63 + 8))(v151, v155);
    _os_log_impl((void *)&_mh_execute_header, v64, v65, "unexpectedly got startStop type: %s when calculating 10 day precipitation string", v66, 0xCu);
    uint64_t v70 = 1;
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v63 + 8))(v8, v62);

    uint64_t v70 = 1;
  }
  uint64_t v42 = v156;
LABEL_56:
  uint64_t v130 = sub_10012C0E0();
  return _s13WeatherWidget20WeatherDataViewModelOwst_0(v42, v70, 1, v130);
}

uint64_t sub_1000AA544@<X0>(unsigned __int8 a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v81 = a2;
  uint64_t v71 = sub_100129120();
  __chkstk_darwin(v71);
  uint64_t v72 = (char *)v65 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1000053D8(&qword_10016C058);
  __chkstk_darwin(v4 - 8);
  uint64_t v70 = (uint64_t)v65 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10012CA10();
  uint64_t v68 = *(void *)(v6 - 8);
  uint64_t v69 = v6;
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)v65 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000053D8(&qword_10016ECC0);
  __chkstk_darwin(v9 - 8);
  uint64_t v80 = (char *)v65 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1001291A0();
  __chkstk_darwin(v11 - 8);
  uint64_t v67 = (char *)v65 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v79 = sub_100129160();
  uint64_t v73 = *(void *)(v79 - 8);
  uint64_t v13 = __chkstk_darwin(v79);
  os_log_type_t v77 = (char *)v65 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v76 = (uint64_t)v65 - v16;
  __chkstk_darwin(v15);
  os_log_type_t v78 = (char *)v65 - v17;
  uint64_t v75 = sub_100129B10();
  uint64_t v18 = *(void *)(v75 - 8);
  uint64_t v19 = __chkstk_darwin(v75);
  uint64_t v21 = (char *)v65 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  unint64_t v74 = (char *)v65 - v22;
  if (qword_10016AEE8 != -1) {
    swift_once();
  }
  uint64_t v23 = (objc_class *)(id)qword_100181E30;
  v64._countAndFlagsBits = 0x800000010013B680;
  v83._countAndFlagsBits = 0x726F6620656E6F4ELL;
  v83._object = (void *)0xEB00000000402520;
  v84.value._countAndFlagsBits = 0;
  v84.value._object = 0;
  v24.super.Class isa = v23;
  v85._countAndFlagsBits = 0;
  v85._object = (void *)0xE000000000000000;
  sub_100129180(v83, v84, v24, v85, v64);

  sub_1000053D8(&qword_10016EE28);
  uint64_t v25 = swift_allocObject();
  long long v66 = xmmword_100130010;
  *(_OWORD *)(v25 + 16) = xmmword_100130010;
  uint64_t v26 = sub_1000ABB2C(1, a1);
  uint64_t v28 = v27;
  int v29 = a1;
  *(void *)(v25 + 56) = &type metadata for String;
  *(void *)(v25 + 64) = sub_1000ABC9C();
  *(void *)(v25 + 32) = v26;
  *(void *)(v25 + 40) = v28;
  unsigned __int8 v30 = a1;
  uint64_t v31 = sub_10012CA70();
  uint64_t v33 = v32;
  swift_bridgeObjectRelease();
  if (v29 == 2)
  {
    uint64_t v34 = enum case for Precipitation.mixed(_:);
    uint64_t v35 = *(void (**)(char *, uint64_t, uint64_t))(v18 + 104);
    uint64_t v36 = v74;
    uint64_t v37 = v18;
    uint64_t v38 = v75;
    v35(v74, enum case for Precipitation.mixed(_:), v75);
    uint64_t v39 = sub_1000AE508();
    uint64_t v76 = v40;
    os_log_type_t v77 = (char *)v39;
    NSDateComponentsFormatterUnitsStyle v41 = *(void (**)(char *, uint64_t))(v37 + 8);
    v41(v36, v38);
    v35(v21, v34, v38);
    sub_1000AE6FC();
    v41(v21, v38);
    sub_10012CC40(1);
    sub_100129190();
    sub_100129170();
    _s13WeatherWidget20WeatherDataViewModelOwst_0((uint64_t)v80, 1, 1, v79);
    return sub_10012C090();
  }
  else
  {
    v65[1] = v31;
    uint64_t v67 = v33;
    v65[0] = v18;
    sub_10012CA00();
    sub_1000053D8(&qword_10016C880);
    uint64_t v43 = swift_allocObject();
    *(_OWORD *)(v43 + 16) = v66;
    *(void *)(v43 + 32) = sub_1000ABB2C(0, v30);
    *(void *)(v43 + 40) = v44;
    uint64_t v45 = v76;
    sub_1000AB6B0((uint64_t)v8, 0, v30, v43, v76);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v68 + 8))(v8, v69);
    sub_10012CA00();
    uint64_t v46 = (void *)qword_100181E30;
    uint64_t v47 = sub_1001293A0();
    _s13WeatherWidget20WeatherDataViewModelOwst_0(v70, 1, 1, v47);
    NSBundle v82 = &_swiftEmptyArrayStorage;
    sub_1000ABE60(&qword_10016EE70, (void (*)(uint64_t))&type metadata accessor for AttributedString.FormattingOptions);
    id v48 = v46;
    sub_1000053D8(&qword_10016EE78);
    sub_10000B38C(&qword_10016EE80, &qword_10016EE78);
    sub_10012CFC0();
    sub_100129150();
    uint64_t v71 = 0;
    uint64_t v72 = 0;
    if (!v29)
    {
      uint64_t v49 = enum case for Precipitation.mixed(_:);
      uint64_t v50 = v65[0];
      uint64_t v51 = *(void (**)(char *, uint64_t, uint64_t))(v65[0] + 104);
      uint64_t v53 = v74;
      uint64_t v52 = v75;
      v51(v74, enum case for Precipitation.mixed(_:), v75);
      uint64_t v54 = sub_1000AE508();
      uint64_t v71 = v55;
      uint64_t v72 = (char *)v54;
      uint64_t v56 = *(void (**)(char *, uint64_t))(v50 + 8);
      v56(v53, v52);
      v51(v53, v49, v52);
      uint64_t v45 = v76;
      sub_1000AE6FC();
      v56(v53, v52);
    }
    uint64_t v57 = v73;
    uint64_t v58 = *(void (**)(char *, uint64_t, uint64_t))(v73 + 16);
    uint64_t v59 = v79;
    v58(v78, v45, v79);
    uint64_t v60 = v45;
    uint64_t v61 = (uint64_t)v80;
    uint64_t v62 = v77;
    v58(v80, (uint64_t)v77, v59);
    _s13WeatherWidget20WeatherDataViewModelOwst_0(v61, 0, 1, v59);
    sub_10012C090();
    uint64_t v63 = *(void (**)(char *, uint64_t))(v57 + 8);
    v63(v62, v59);
    return ((uint64_t (*)(uint64_t, uint64_t))v63)(v60, v59);
  }
}