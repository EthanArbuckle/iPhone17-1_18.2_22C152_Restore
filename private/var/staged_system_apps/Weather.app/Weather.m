void sub_1000044EC()
{
  unint64_t v0;
  unint64_t v1;

  sub_100004800(319, (unint64_t *)&qword_100E85858, (void (*)(uint64_t))&type metadata accessor for Settings.VFX.AnimatedBackgrounds.AnimationKind);
  if (v0 <= 0x3F)
  {
    sub_100004800(319, (unint64_t *)&unk_100EAC018, (void (*)(uint64_t))&type metadata accessor for BackgroundAnimationKind);
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

void sub_100004600()
{
  sub_1000047AC(319, (unint64_t *)&qword_100E85858, (void (*)(uint64_t))&type metadata accessor for Settings.VFX.AnimatedBackgrounds.AnimationKind);
  if (v0 <= 0x3F)
  {
    sub_1000047AC(319, &qword_100E85E50, (void (*)(uint64_t))type metadata accessor for ActualListInput);
    if (v1 <= 0x3F)
    {
      sub_1000047AC(319, (unint64_t *)&unk_100E85E58, (void (*)(uint64_t))type metadata accessor for ListViewModel);
      if (v2 <= 0x3F) {
        swift_updateClassMetadata2();
      }
    }
  }
}

void sub_1000047AC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = type metadata accessor for Optional();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_100004800(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = type metadata accessor for Optional();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_100004854()
{
  sub_100004BA8(319, qword_100E6D470, (void (*)(uint64_t))&type metadata accessor for URL);
  if (v0 <= 0x3F)
  {
    type metadata accessor for LearnMoreAttributorViewModel();
    if (v1 <= 0x3F)
    {
      sub_100004BA8(319, (unint64_t *)&qword_100E7C518, (void (*)(uint64_t))&type metadata accessor for LocationOfInterest);
      if (v2 <= 0x3F)
      {
        sub_100004BA8(319, (unint64_t *)&unk_100E7C520, (void (*)(uint64_t))type metadata accessor for HomeAndWorkRefinementRowViewModel);
        if (v3 <= 0x3F) {
          swift_initStructMetadata();
        }
      }
    }
  }
}

void sub_100004A14()
{
  sub_100004B44(319, (unint64_t *)&unk_100E74AE8, (uint64_t (*)(uint64_t))&type metadata accessor for ColorScheme, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
  if (v0 <= 0x3F)
  {
    sub_100004B44(319, qword_100E6D470, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_100004B44(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_100004BA8(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = type metadata accessor for Optional();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_100004BFC()
{
  type metadata accessor for DailyForecastComponentViewModel.DayForecastViewModel(319);
  if (v0 <= 0x3F)
  {
    sub_100005268(319, (unint64_t *)&qword_100E7DE68, (uint64_t (*)(uint64_t))sub_1001433AC, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Measurement);
    if (v1 <= 0x3F)
    {
      sub_100005018(319, (unint64_t *)&qword_100E7DE70, &qword_100E65250, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
      if (v2 <= 0x3F)
      {
        sub_100005018(319, (unint64_t *)&qword_100E6B940, &qword_100E6B8D0, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Binding);
        if (v3 <= 0x3F)
        {
          sub_100004FB0(319, (unint64_t *)&qword_100E73AF0, (uint64_t (*)(void))sub_10014F1B0, (uint64_t)&type metadata for CGFloat, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for ScaledMetric);
          if (v4 <= 0x3F)
          {
            sub_100004FB0(319, (unint64_t *)&qword_100E7DE78, (uint64_t (*)(void))sub_100146A70, (uint64_t)&type metadata for Double, (uint64_t (*)(uint64_t, uint64_t, uint64_t))&type metadata accessor for ScaledValue);
            if (v5 <= 0x3F)
            {
              sub_100005268(319, (unint64_t *)&qword_100E6D980, (uint64_t (*)(uint64_t))&type metadata accessor for ColorSchemeContrast, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
              if (v6 <= 0x3F)
              {
                sub_100005018(319, (unint64_t *)&qword_100E7DE80, (uint64_t *)&unk_100E73CA0, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for State);
                if (v7 <= 0x3F) {
                  swift_initStructMetadata();
                }
              }
            }
          }
        }
      }
    }
  }
}

void sub_100004FB0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

void sub_100005018(uint64_t a1, unint64_t *a2, uint64_t *a3, uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = sub_10018C6DC(a3);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_100005078()
{
  type metadata accessor for Date();
  if (v0 <= 0x3F)
  {
    type metadata accessor for TimeZone();
    if (v1 <= 0x3F)
    {
      sub_1000052CC(319, (unint64_t *)&qword_100E7DE68, (uint64_t (*)(uint64_t))sub_1001433AC, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Measurement);
      if (v2 <= 0x3F)
      {
        sub_1000052CC(319, (unint64_t *)&unk_100E96E50, (uint64_t (*)(uint64_t))&type metadata accessor for Precipitation, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
        if (v3 <= 0x3F) {
          swift_initStructMetadata();
        }
      }
    }
  }
}

void sub_100005268(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1000052CC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_100005330()
{
  uint64_t v0 = type metadata accessor for ContentStatusBannerPresentationMetrics(0);
  sub_100097814(v0, qword_100E8DEC8);
  sub_1002102B0(v0, (uint64_t)qword_100E8DEC8);
  if (qword_100E62548 != -1) {
    swift_once();
  }
  sub_1002102B0(v0, (uint64_t)qword_100E8DEB0);
  return sub_10015176C();
}

uint64_t sub_1000053D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10020BC54(a1, a2);
}

double sub_100005410@<D0>(_OWORD *a1@<X8>)
{
  TipAlignmentKey.defaultValue.unsafeMutableAddressor();
  double result = *(double *)&static TipAlignmentKey.defaultValue;
  *a1 = static TipAlignmentKey.defaultValue;
  return result;
}

long long *TipAlignmentKey.defaultValue.unsafeMutableAddressor()
{
  if (qword_100E621E8 != -1) {
    swift_once();
  }
  return &static TipAlignmentKey.defaultValue;
}

double sub_10000548C@<D0>(_OWORD *a1@<X8>)
{
  SafeAreaInsetsKey.defaultValue.unsafeMutableAddressor();
  double result = *(double *)&static SafeAreaInsetsKey.defaultValue;
  long long v3 = *(_OWORD *)&qword_100F50BE0;
  *a1 = static SafeAreaInsetsKey.defaultValue;
  a1[1] = v3;
  return result;
}

long long *SafeAreaInsetsKey.defaultValue.unsafeMutableAddressor()
{
  if (qword_100E621D8 != -1) {
    swift_once();
  }
  return &static SafeAreaInsetsKey.defaultValue;
}

__n128 sub_10000550C@<Q0>(uint64_t a1@<X8>)
{
  unint64_t v2 = sub_100005540();
  long long v3 = v2[1];
  *(_OWORD *)a1 = *v2;
  *(_OWORD *)(a1 + 16) = v3;
  __n128 result = (__n128)v2[2];
  *(__n128 *)(a1 + 32) = result;
  return result;
}

long long *sub_100005540()
{
  if (qword_100E622C8 != -1) {
    swift_once();
  }
  return &xmmword_100E738A8;
}

uint64_t sub_10000558C(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a1 + 16);
  v5[0] = *(_OWORD *)a1;
  v5[1] = v2;
  v5[2] = *(_OWORD *)(a1 + 32);
  char v6 = *(unsigned char *)(a1 + 48);
  long long v3 = *(_OWORD *)(a2 + 16);
  v7[0] = *(_OWORD *)a2;
  v7[1] = v3;
  v7[2] = *(_OWORD *)(a2 + 32);
  char v8 = *(unsigned char *)(a2 + 48);
  return sub_1000055E8((uint64_t)v5, (uint64_t)v7) & 1;
}

uint64_t sub_1000055E8(uint64_t a1, uint64_t a2)
{
  if (CGRectEqualToRect(*(CGRect *)a1, *(CGRect *)a2)
    && *(double *)(a1 + 32) == *(double *)(a2 + 32)
    && *(double *)(a1 + 40) == *(double *)(a2 + 40))
  {
    char v4 = ((*(unsigned char *)(a1 + 48) & 1) == 0) ^ *(unsigned char *)(a2 + 48);
  }
  else
  {
    char v4 = 0;
  }
  return v4 & 1;
}

double sub_100005664@<D0>(void *a1@<X8>)
{
  CompressedLocationHeaderHeightKey.defaultValue.unsafeMutableAddressor();
  double result = *(double *)&static CompressedLocationHeaderHeightKey.defaultValue;
  *a1 = static CompressedLocationHeaderHeightKey.defaultValue;
  return result;
}

uint64_t *CompressedLocationHeaderHeightKey.defaultValue.unsafeMutableAddressor()
{
  if (qword_100E621F0 != -1) {
    swift_once();
  }
  return &static CompressedLocationHeaderHeightKey.defaultValue;
}

unint64_t sub_1000056E0()
{
  unint64_t result = qword_100E7EB00;
  if (!qword_100E7EB00)
  {
    sub_10018C6DC(&qword_100E7EB08);
    sub_1001246C8(&qword_100E7EB10, &qword_100E7EB18);
    sub_1001246C8(&qword_100E7EB20, &qword_100E7EB28);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E7EB00);
  }
  return result;
}

unint64_t sub_1000057A4()
{
  unint64_t result = qword_100E74B20;
  if (!qword_100E74B20)
  {
    sub_10018C6DC(&qword_100E74A50);
    sub_1001246C8(&qword_100E74B28, &qword_100E74A60);
    sub_1001246C8(&qword_100E74B30, &qword_100E74A58);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E74B20);
  }
  return result;
}

unint64_t sub_100005868()
{
  unint64_t result = qword_100EB1CB0;
  if (!qword_100EB1CB0)
  {
    sub_10018C6DC(&qword_100EB1C40);
    sub_1001246C8(&qword_100EB1CB8, &qword_100EB1C60);
    sub_1001246C8(&qword_100E825E0, &qword_100E825E8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB1CB0);
  }
  return result;
}

unint64_t sub_10000592C()
{
  unint64_t result = qword_100E7EA38;
  if (!qword_100E7EA38)
  {
    sub_10018C6DC(&qword_100E7E908);
    sub_1001246C8(&qword_100E7EA40, &qword_100E7E8F8);
    sub_1001246C8(&qword_100E7EA48, &qword_100E7EA50);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E7EA38);
  }
  return result;
}

unint64_t sub_1000059F0()
{
  unint64_t result = qword_100E9C670;
  if (!qword_100E9C670)
  {
    sub_10018C6DC(&qword_100E9C640);
    sub_1001246C8(&qword_100E9C678, &qword_100E9C638);
    sub_1001246C8(&qword_100E65218, &qword_100E65220);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9C670);
  }
  return result;
}

unint64_t sub_100005AB4()
{
  unint64_t result = qword_100E7B110;
  if (!qword_100E7B110)
  {
    sub_10018C6DC(&qword_100E7B038);
    sub_1001246C8(&qword_100E7B118, &qword_100E7B048);
    sub_1001246C8(&qword_100E7B120, &qword_100E7B040);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E7B110);
  }
  return result;
}

unint64_t sub_100005B78()
{
  unint64_t result = qword_100E95340;
  if (!qword_100E95340)
  {
    sub_10018C6DC(&qword_100E952E8);
    sub_1001246C8(&qword_100E95348, &qword_100E95310);
    sub_1001246C8(&qword_100E95350, &qword_100E95308);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E95340);
  }
  return result;
}

unint64_t sub_100005C3C()
{
  unint64_t result = qword_100E81330;
  if (!qword_100E81330)
  {
    sub_10018C6DC(&qword_100E81320);
    sub_1001246C8(&qword_100E81338, &qword_100E81328);
    sub_1001246C8(&qword_100E65218, &qword_100E65220);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E81330);
  }
  return result;
}

unint64_t sub_100005D00()
{
  unint64_t result = qword_100EA6800;
  if (!qword_100EA6800)
  {
    sub_10018C6DC(&qword_100EA67E0);
    sub_1001246C8(&qword_100EA6808, &qword_100EA67D8);
    sub_1001246C8(&qword_100EA6810, &qword_100EA6818);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA6800);
  }
  return result;
}

unint64_t sub_100005DC4()
{
  unint64_t result = qword_100EAA700;
  if (!qword_100EAA700)
  {
    sub_10018C6DC((uint64_t *)&unk_100EAA6C0);
    sub_1001246C8(&qword_100EAA708, &qword_100EAA6B8);
    sub_1001246C8(&qword_100EAA710, &qword_100EAA718);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAA700);
  }
  return result;
}

double sub_100005E88@<D0>(uint64_t a1@<X8>)
{
  sub_100005EEC();
  uint64_t v2 = qword_100F50B98;
  char v3 = byte_100F50BA0;
  uint64_t v4 = qword_100F50BA8;
  __int16 v5 = word_100F50BB0;
  *(void *)a1 = qword_100F50B80;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)algn_100F50B88;
  *(void *)(a1 + 24) = v2;
  *(unsigned char *)(a1 + 32) = v3;
  *(void *)(a1 + 40) = v4;
  *(_WORD *)(a1 + 48) = v5;
  double result = *(double *)&qword_100F50BB8;
  *(_OWORD *)(a1 + 56) = *(_OWORD *)&qword_100F50BB8;
  return result;
}

uint64_t *sub_100005EEC()
{
  if (qword_100E621D0 != -1) {
    swift_once();
  }
  return &qword_100F50B80;
}

uint64_t sub_100005F38@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_10019CC90();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void sub_100005F64(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v6 = sub_10018C6DC(&qword_100E6B8D0);
    unint64_t v7 = a3(a1, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_100005FC8()
{
  unint64_t result = qword_100EAD7F0;
  if (!qword_100EAD7F0)
  {
    sub_10018C6DC(&qword_100EAD7F8);
    sub_10024D5E4((uint64_t)&unk_100EAD800);
    sub_10024D5E4((uint64_t)&unk_100E66B60);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAD7F0);
  }
  return result;
}

unint64_t sub_10000608C()
{
  unint64_t result = qword_100EAD960;
  if (!qword_100EAD960)
  {
    sub_10018C6DC(&qword_100EAD968);
    sub_10024D5E4((uint64_t)&unk_100E70EA8);
    sub_10024D5E4((uint64_t)&unk_100E66B60);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAD960);
  }
  return result;
}

unint64_t sub_100006150()
{
  unint64_t result = qword_100EA1F00;
  if (!qword_100EA1F00)
  {
    sub_10018C6DC(&qword_100EA1D90);
    sub_10024D5E4((uint64_t)&unk_100EA1F08);
    sub_10024D5E4((uint64_t)&unk_100E70D10);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA1F00);
  }
  return result;
}

unint64_t sub_100006214()
{
  unint64_t result = qword_100EA18A0;
  if (!qword_100EA18A0)
  {
    sub_10018C6DC(&qword_100EA17F8);
    sub_10024D5E4((uint64_t)&unk_100EA18A8);
    sub_10024D5E4((uint64_t)&qword_100E70D10);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA18A0);
  }
  return result;
}

unint64_t sub_1000062D8()
{
  unint64_t result = qword_100E83098;
  if (!qword_100E83098)
  {
    sub_10018C6DC(&qword_100E82B10);
    sub_10024D5E4((uint64_t)&unk_100E830A0);
    sub_10024D5E4((uint64_t)&unk_100E6E388);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E83098);
  }
  return result;
}

unint64_t sub_10000639C()
{
  unint64_t result = qword_100EAD8E0;
  if (!qword_100EAD8E0)
  {
    sub_10018C6DC(&qword_100EAD8E8);
    sub_10024D5E4((uint64_t)&unk_100E70E58);
    sub_10024D5E4((uint64_t)&unk_100E66B60);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAD8E0);
  }
  return result;
}

unint64_t sub_100006460()
{
  unint64_t result = qword_100EAD8B0;
  if (!qword_100EAD8B0)
  {
    sub_10018C6DC(&qword_100EAD8B8);
    sub_10024D5E4((uint64_t)&unk_100E70E38);
    sub_10024D5E4((uint64_t)&unk_100E66B60);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAD8B0);
  }
  return result;
}

unint64_t sub_100006524()
{
  unint64_t result = qword_100EAD940;
  if (!qword_100EAD940)
  {
    sub_10018C6DC(&qword_100EAD948);
    sub_10024D5E4((uint64_t)&unk_100E70E98);
    sub_10024D5E4((uint64_t)&unk_100E66B60);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAD940);
  }
  return result;
}

unint64_t sub_1000065E8()
{
  unint64_t result = qword_100EAD7A0;
  if (!qword_100EAD7A0)
  {
    sub_10018C6DC(&qword_100EAD7A8);
    sub_10024D5E4((uint64_t)&unk_100EAD7B0);
    sub_10024D5E4((uint64_t)&unk_100E66B60);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAD7A0);
  }
  return result;
}

unint64_t sub_1000066AC()
{
  unint64_t result = qword_100E843F0;
  if (!qword_100E843F0)
  {
    sub_10018C6DC(&qword_100E843F8);
    sub_10024D5E4((uint64_t)&unk_100E84400);
    sub_10024D5E4((uint64_t)&unk_100E79F38);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E843F0);
  }
  return result;
}

unint64_t sub_100006770()
{
  unint64_t result = qword_100EA1F10;
  if (!qword_100EA1F10)
  {
    sub_10018C6DC(&qword_100EA1D98);
    sub_10024D5E4((uint64_t)&unk_100EA1F18);
    sub_10024D5E4((uint64_t)&unk_100E70D10);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA1F10);
  }
  return result;
}

unint64_t sub_100006834()
{
  unint64_t result = qword_100E8F0C8;
  if (!qword_100E8F0C8)
  {
    sub_10018C6DC(&qword_100E8F098);
    sub_10024D5E4((uint64_t)&unk_100E8F0D0);
    sub_10024D5E4((uint64_t)&unk_100E8F0D8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8F0C8);
  }
  return result;
}

unint64_t sub_1000068F8()
{
  unint64_t result = qword_100EB8250;
  if (!qword_100EB8250)
  {
    sub_10018C6DC(&qword_100EB8220);
    sub_10024D5E4((uint64_t)&unk_100EB8258);
    sub_10024D5E4((uint64_t)&unk_100E65368);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB8250);
  }
  return result;
}

unint64_t sub_1000069BC()
{
  unint64_t result = qword_100EAD750;
  if (!qword_100EAD750)
  {
    sub_10018C6DC(&qword_100EAD758);
    sub_10024D5E4((uint64_t)&unk_100EAD760);
    sub_10024D5E4((uint64_t)&unk_100E66B60);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAD750);
  }
  return result;
}

unint64_t sub_100006A80()
{
  unint64_t result = qword_100E74408;
  if (!qword_100E74408)
  {
    sub_10018C6DC(&qword_100E74320);
    sub_10024D5E4((uint64_t)&unk_100E74410);
    sub_10024D5E4((uint64_t)&unk_100E74418);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E74408);
  }
  return result;
}

unint64_t sub_100006B44()
{
  unint64_t result = qword_100EA1FC0;
  if (!qword_100EA1FC0)
  {
    sub_10018C6DC(&qword_100EA1E30);
    sub_10024D5E4((uint64_t)&unk_100EA1FC8);
    sub_10024D5E4((uint64_t)&unk_100E70D10);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA1FC0);
  }
  return result;
}

unint64_t sub_100006C08()
{
  unint64_t result = qword_100E8EFE8;
  if (!qword_100E8EFE8)
  {
    sub_10018C6DC(&qword_100E8EBB0);
    sub_10024D5E4((uint64_t)&unk_100E8EFF0);
    sub_10024D5E4((uint64_t)&unk_100E70F48);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8EFE8);
  }
  return result;
}

unint64_t sub_100006CCC()
{
  unint64_t result = qword_100E82960;
  if (!qword_100E82960)
  {
    sub_10018C6DC(&qword_100E82950);
    sub_10024D5E4((uint64_t)&unk_100E82968);
    sub_10024D5E4((uint64_t)&unk_100E82970);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E82960);
  }
  return result;
}

unint64_t sub_100006D90()
{
  unint64_t result = qword_100EAD990;
  if (!qword_100EAD990)
  {
    sub_10018C6DC(&qword_100EAD998);
    sub_10024D5E4((uint64_t)&unk_100E70EE0);
    sub_10024D5E4((uint64_t)&unk_100E66B60);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAD990);
  }
  return result;
}

unint64_t sub_100006E54()
{
  unint64_t result = qword_100E84298;
  if (!qword_100E84298)
  {
    sub_10018C6DC(&qword_100E83C60);
    sub_10024D5E4((uint64_t)&unk_100E842A0);
    sub_10024D5E4((uint64_t)&unk_100E842A8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E84298);
  }
  return result;
}

unint64_t sub_100006F18()
{
  unint64_t result = qword_100EA1EF0;
  if (!qword_100EA1EF0)
  {
    sub_10018C6DC(&qword_100EA1D78);
    sub_10024D5E4((uint64_t)&unk_100EA1EF8);
    sub_10024D5E4((uint64_t)&unk_100E6DE30);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA1EF0);
  }
  return result;
}

unint64_t sub_100006FDC()
{
  unint64_t result = qword_100EADA78;
  if (!qword_100EADA78)
  {
    sub_10018C6DC(&qword_100EAD6C8);
    sub_10024D5E4((uint64_t)&unk_100EADA80);
    sub_10024D5E4((uint64_t)&unk_100EADA88);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EADA78);
  }
  return result;
}

unint64_t sub_1000070A0()
{
  unint64_t result = qword_100E83CE8;
  if (!qword_100E83CE8)
  {
    sub_10018C6DC(&qword_100E83C90);
    sub_10024D5E4((uint64_t)&unk_100E83CF0);
    sub_10024D5E4((uint64_t)&unk_100E83D00);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E83CE8);
  }
  return result;
}

unint64_t sub_100007164()
{
  unint64_t result = qword_100E63EA8;
  if (!qword_100E63EA8)
  {
    sub_10018C6DC(&qword_100E63EB0);
    sub_10024D5E4((uint64_t)&unk_100E63EB8);
    sub_10024D5E4((uint64_t)&unk_100E63EC8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E63EA8);
  }
  return result;
}

unint64_t sub_100007228()
{
  unint64_t result = qword_100EAD820;
  if (!qword_100EAD820)
  {
    sub_10018C6DC(&qword_100EAD828);
    sub_10024D5E4((uint64_t)&unk_100EAD830);
    sub_10024D5E4((uint64_t)&unk_100E66B60);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAD820);
  }
  return result;
}

unint64_t sub_1000072EC()
{
  unint64_t result = qword_100E742B0;
  if (!qword_100E742B0)
  {
    sub_10018C6DC(&qword_100E74208);
    sub_10024D5E4((uint64_t)&unk_100E742B8);
    sub_10024D5E4((uint64_t)&unk_100E742C0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E742B0);
  }
  return result;
}

unint64_t sub_1000073B0()
{
  unint64_t result = qword_100E645C8;
  if (!qword_100E645C8)
  {
    sub_10018C6DC(&qword_100E644B8);
    sub_10024D5E4((uint64_t)&unk_100E645D0);
    sub_10024D5E4((uint64_t)&unk_100E645D8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E645C8);
  }
  return result;
}

unint64_t sub_100007474()
{
  unint64_t result = qword_100E64570;
  if (!qword_100E64570)
  {
    sub_10018C6DC(&qword_100E64460);
    sub_10024D5E4((uint64_t)&unk_100E64578);
    sub_10024D5E4((uint64_t)&unk_100E64580);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E64570);
  }
  return result;
}

unint64_t sub_100007538()
{
  unint64_t result = qword_100EA1F60;
  if (!qword_100EA1F60)
  {
    sub_10018C6DC(&qword_100EA1DF0);
    sub_10024D5E4((uint64_t)&unk_100EA1F68);
    sub_10024D5E4((uint64_t)&unk_100E842A8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA1F60);
  }
  return result;
}

unint64_t sub_1000075FC()
{
  unint64_t result = qword_100E842B8;
  if (!qword_100E842B8)
  {
    sub_10018C6DC(&qword_100E83C78);
    sub_10024D5E4((uint64_t)&unk_100E842C0);
    sub_10024D5E4((uint64_t)&unk_100E842C8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E842B8);
  }
  return result;
}

unint64_t sub_1000076C0()
{
  unint64_t result = qword_100EAD890;
  if (!qword_100EAD890)
  {
    sub_10018C6DC(&qword_100EAD898);
    sub_10024D5E4((uint64_t)&unk_100E70E28);
    sub_10024D5E4((uint64_t)&unk_100E66B60);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAD890);
  }
  return result;
}

unint64_t sub_100007784()
{
  unint64_t result = qword_100E74578;
  if (!qword_100E74578)
  {
    sub_10018C6DC(&qword_100E74430);
    sub_10024D5E4((uint64_t)&unk_100E74580);
    sub_10024D5E4((uint64_t)&unk_100E74588);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E74578);
  }
  return result;
}

unint64_t sub_100007848()
{
  unint64_t result = qword_100E8E2C0;
  if (!qword_100E8E2C0)
  {
    sub_10018C6DC(&qword_100E8E2C8);
    sub_10024D5E4((uint64_t)&unk_100E8E2D0);
    sub_10024D5E4((uint64_t)&qword_100E70D10);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8E2C0);
  }
  return result;
}

unint64_t sub_10000790C()
{
  unint64_t result = qword_100EA1658;
  if (!qword_100EA1658)
  {
    sub_10018C6DC(&qword_100EA1640);
    sub_10024D5E4((uint64_t)&unk_100EA1660);
    sub_10024D5E4((uint64_t)&unk_100E6E388);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA1658);
  }
  return result;
}

unint64_t sub_1000079D0()
{
  unint64_t result = qword_100EAD900;
  if (!qword_100EAD900)
  {
    sub_10018C6DC(&qword_100EAD908);
    sub_10024D5E4((uint64_t)&unk_100E70E68);
    sub_10024D5E4((uint64_t)&unk_100E66B60);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAD900);
  }
  return result;
}

unint64_t sub_100007A94()
{
  unint64_t result = qword_100E8EFD8;
  if (!qword_100E8EFD8)
  {
    sub_10018C6DC(&qword_100E8EBA0);
    sub_10024D5E4((uint64_t)&unk_100E8EFE0);
    sub_10024D5E4((uint64_t)&unk_100E6D0E0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8EFD8);
  }
  return result;
}

void sub_100007B58()
{
}

void WeatherFeatureFlags.feature.getter()
{
}

uint64_t sub_100007B98()
{
  uint64_t result = type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.SunriseSetModel(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.HourModel(319);
    if (v2 <= 0x3F)
    {
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

void sub_100007C5C()
{
  type metadata accessor for DailyForecastComponentViewModel(319);
  if (v0 <= 0x3F)
  {
    type metadata accessor for DailyForecastComponentViewModel.DayForecastViewModel(319);
    if (v1 <= 0x3F)
    {
      sub_100005F64(319, (unint64_t *)&qword_100E6B940, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Binding);
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

uint64_t sub_100007DB0()
{
  uint64_t v1 = sub_1005F0090();
  uint64_t v3 = v2(v1);
  sub_100164920(v3);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v7 = *(void *)(v6 + 64);
  uint64_t v8 = type metadata accessor for LocationComponentContainerContentView(0);
  sub_1001627C0(v8);
  uint64_t v10 = v0 + ((v5 + v7 + *(unsigned __int8 *)(v9 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));

  return v12(v0 + v5, v10);
}

uint64_t sub_100007E50@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = type metadata accessor for FullscreenMapTransitionContainer(0);
  __chkstk_darwin(v6);
  uint64_t v8 = &v17[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (*(unsigned char *)(a2 + 48) == 1)
  {
    uint64_t v10 = *((void *)a1 + 1);
    uint64_t v9 = *((void *)a1 + 2);
    char v11 = *a1;
    sub_10020D948(a2, (uint64_t)(v8 + 24));
    uint64_t v12 = *(void *)(a2 + 40);
    *uint64_t v8 = v11;
    *((void *)v8 + 1) = v10;
    *((void *)v8 + 2) = v9;
    *((void *)v8 + 8) = v12;
    *((void *)v8 + 9) = swift_getKeyPath();
    v8[80] = 0;
    v13 = (uint64_t *)&v8[*(int *)(v6 + 32)];
    uint64_t *v13 = swift_getKeyPath();
    sub_10017DF08(&qword_100E63BD0);
    swift_storeEnumTagMultiPayload();
    v14 = &v8[*(int *)(v6 + 36)];
    v17[15] = 4;
    swift_bridgeObjectRetain();
    State.init(wrappedValue:)();
    uint64_t v15 = v18;
    unsigned char *v14 = v17[16];
    *((void *)v14 + 1) = v15;
    sub_1000CD2E8((uint64_t)v8, a3, (void (*)(void))type metadata accessor for FullscreenMapTransitionContainer);
    return _s7Weather24LocationCompositionStateOwst_0(a3, 0, 1, v6);
  }
  else
  {
    return _s7Weather24LocationCompositionStateOwst_0(a3, 1, 1, v6);
  }
}

uint64_t type metadata accessor for FullscreenMapTransitionContainer(uint64_t a1)
{
  return sub_10018678C(a1, qword_100E74268);
}

void sub_100008028()
{
  type metadata accessor for LocationPreviewViewState(319);
  if (v0 <= 0x3F)
  {
    sub_100222AE4();
    if (v1 <= 0x3F)
    {
      type metadata accessor for ModalViewState.LocationDetailModal(319);
      if (v2 <= 0x3F) {
        swift_initEnumMetadataMultiPayload();
      }
    }
  }
}

void sub_100008140()
{
  type metadata accessor for ViewState.SecondaryViewState(319);
  if (v0 <= 0x3F)
  {
    sub_100222030();
    if (v1 <= 0x3F)
    {
      type metadata accessor for DisplayMetrics();
      if (v2 <= 0x3F)
      {
        type metadata accessor for WeatherMapPresentationState(319);
        if (v3 <= 0x3F) {
          swift_initStructMetadata();
        }
      }
    }
  }
}

uint64_t sub_10000829C()
{
  unint64_t v0 = (int *)type metadata accessor for LocationComponentHeaderMetrics(0);
  sub_100097814((uint64_t)v0, qword_100E7AEB8);
  uint64_t v1 = sub_1002102B0((uint64_t)v0, (uint64_t)qword_100E7AEB8);
  *(void *)uint64_t v1 = 0;
  *(void *)(v1 + 8) = 0xE000000000000000;
  *(void *)(v1 + 16) = 0;
  *(void *)(v1 + 24) = 0xE000000000000000;
  *(unsigned char *)(v1 + 32) = 0;
  type metadata accessor for LocationComponentHeaderViewModel(0);
  *(void *)(v1 + 40) = 0;
  *(void *)(v1 + 48) = 0;
  uint64_t result = swift_storeEnumTagMultiPayload();
  *(void *)(v1 + v0[5]) = 0;
  *(void *)(v1 + v0[6]) = 0;
  uint64_t v3 = v1 + v0[7];
  *(void *)uint64_t v3 = 0;
  *(unsigned char *)(v3 + 8) = 1;
  *(unsigned char *)(v1 + v0[8]) = 0;
  return result;
}

uint64_t sub_10000833C()
{
  uint64_t result = type metadata accessor for AutomationViewInfo(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for AutomationCellInfo(319);
    if (v2 <= 0x3F)
    {
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

uint64_t sub_100008408@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E7CD20);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v7)
  {
    uint64_t v4 = type metadata accessor for LocationPreviewViewStateReducer();
    uint64_t v5 = swift_allocObject();
    uint64_t result = sub_1001262E4(&v6, v5 + 16);
    a2[3] = v4;
    a2[4] = (uint64_t)&off_100E32708;
    *a2 = v5;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1000084AC()
{
  uint64_t result = type metadata accessor for CurrentWeather();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for PressureComponentPreprocessedDataModel();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_100008574()
{
  uint64_t result = type metadata accessor for ArticlePlacementLocation();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_100008610@<X0>(uint64_t (*a1)(void)@<X1>, uint64_t (*a2)(void)@<X2>, uint64_t a3@<X3>, uint64_t *a4@<X8>)
{
  uint64_t v7 = a1(0);
  swift_allocObject();
  uint64_t result = a2();
  a4[3] = v7;
  a4[4] = a3;
  *a4 = result;
  return result;
}

uint64_t sub_100008678(void *a1)
{
  return dispatch thunk of ContextType.use<A>(_:for:name:)();
}

uint64_t sub_100008700()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t type metadata accessor for LocationViewerAssembly()
{
  return self;
}

uint64_t sub_100008758()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for DayPickerAssembly()
{
  return self;
}

uint64_t sub_100008810()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_100008840()
{
  uint64_t result = type metadata accessor for StartupTaskExecutionPhase();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1000088DC()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_100008978()
{
  uint64_t v1 = type metadata accessor for CoarseLocationStatus();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001B1E64((void *)(v0 + 16), *(void *)(v0 + 40));
  char v5 = dispatch thunk of LocationManagerType.limitsPrecision.getter();
  long long v6 = (unsigned int *)&enum case for CoarseLocationStatus.coarse(_:);
  if ((v5 & 1) == 0) {
    long long v6 = (unsigned int *)&enum case for CoarseLocationStatus.precise(_:);
  }
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, *v6, v1);
  return CoarseLocationData.init(status:)();
}

void sub_100008A8C()
{
  sub_10000AFF4();
  if (v0 <= 0x3F)
  {
    type metadata accessor for Date();
    if (v1 <= 0x3F)
    {
      type metadata accessor for URL();
      if (v2 <= 0x3F)
      {
        type metadata accessor for NewsChannel();
        if (v3 <= 0x3F) {
          swift_initStructMetadata();
        }
      }
    }
  }
}

uint64_t type metadata accessor for UnitsConfigurationViewStateReducer()
{
  return self;
}

void sub_100008C0C()
{
  type metadata accessor for SunriseSunsetViewModel();
  if (v0 <= 0x3F)
  {
    sub_100230954();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_100008CE4()
{
  type metadata accessor for Location.Identifier();
  if (v0 <= 0x3F)
  {
    sub_10002FD50(319, (unint64_t *)&qword_100E63C80, (uint64_t (*)(uint64_t))type metadata accessor for DisplayMetrics, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_100008E08()
{
  uint64_t result = type metadata accessor for StartMethod();
  if (v1 <= 0x3F) {
    return swift_updateClassMetadata2();
  }
  return result;
}

uint64_t sub_100008EF8()
{
  return swift_release();
}

uint64_t type metadata accessor for ManagerAssembly()
{
  return self;
}

unint64_t sub_100008F8C()
{
  unint64_t result = qword_100E66F90;
  if (!qword_100E66F90)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100E66F90);
  }
  return result;
}

unint64_t sub_100008FCC()
{
  unint64_t result = qword_100E85F68;
  if (!qword_100E85F68)
  {
    type metadata accessor for LazyOptions();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E85F68);
  }
  return result;
}

void sub_10000901C()
{
  type metadata accessor for Location.Identifier();
  if (v0 <= 0x3F)
  {
    sub_10000CE24();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_100009118(char a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v9 = type metadata accessor for LocationCompositionState();
  __chkstk_darwin(v9);
  unint64_t v11 = (v10 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v12 = (char *)&v17 - v11;
  if (a1)
  {
    sub_1001D9BA8(a2, (uint64_t)&v17 - v11, (void (*)(void))type metadata accessor for LocationCompositionState);
    swift_getEnumCaseMultiPayload();
    uint64_t v13 = *((void *)v12 + 1);
    uint64_t v14 = (uint64_t)&v12[*(int *)(sub_10017DF08(&qword_100E85F90) + 48)];
    if (v13)
    {
      uint64_t v15 = *((void *)v12 + 2);
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v15 = Location.name.getter();
    }
    sub_100178110(v14, &qword_100E63508);
  }
  else
  {
    uint64_t v15 = Location.name.getter();
    if (static Settings.Features.homeAndWorkEnabled.getter() & 1) == 0 && (a5)
    {
      swift_bridgeObjectRelease();
      uint64_t v15 = *(void *)(a4 + OBJC_IVAR____TtC7Weather24LocationViewModelFactory_myLocationString);
      swift_bridgeObjectRetain();
    }
  }
  return v15;
}

uint64_t sub_100009274@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for LocationsOfInterestManager();
  uint64_t result = static LocationsOfInterestManager.standard.getter();
  a1[3] = v2;
  a1[4] = (uint64_t)&protocol witness table for LocationsOfInterestManager;
  *a1 = result;
  return result;
}

uint64_t sub_1000092B4(uint64_t a1, uint64_t a2, unsigned char *a3)
{
  uint64_t v6 = sub_10017DF08(&qword_100E63770);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void *)&a3[*(int *)(type metadata accessor for LocationInput() + 64) + 16];
  swift_bridgeObjectRetain();
  sub_1001BBE9C(a1, a2, v9);
  swift_bridgeObjectRelease();
  LOBYTE(a2) = sub_10021D3E0((uint64_t)v8);
  sub_100178110((uint64_t)v8, &qword_100E63770);
  return *a3 & ~(_BYTE)a2 & 1;
}

uint64_t sub_100009398@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for WeatherEventDescriptionStringBuilder();
  swift_allocObject();
  uint64_t result = WeatherEventDescriptionStringBuilder.init()();
  a1[3] = v2;
  a1[4] = (uint64_t)&protocol witness table for WeatherEventDescriptionStringBuilder;
  *a1 = result;
  return result;
}

uint64_t type metadata accessor for ListAssembly()
{
  return self;
}

uint64_t sub_100009414@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  State.init(wrappedValue:)();
  uint64_t result = State.init(wrappedValue:)();
  *(unsigned char *)a2 = a1;
  *(unsigned char *)(a2 + 8) = v5;
  *(void *)(a2 + 16) = v6;
  *(unsigned char *)(a2 + 24) = v5;
  *(void *)(a2 + 32) = v6;
  return result;
}

uint64_t sub_1000094A4()
{
  uint64_t result = type metadata accessor for Location();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for LocationOfInterest();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for MonitorsAssembly()
{
  return self;
}

uint64_t type metadata accessor for UnitsConfigurationAssembly()
{
  return self;
}

uint64_t sub_1000095BC()
{
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 16);
  swift_release();

  return v0;
}

uint64_t sub_1000095EC(void *a1)
{
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E64798);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v2)
  {
    type metadata accessor for ShortcutItemUpdater();
    uint64_t result = swift_allocObject();
    *(void *)(result + 16) = v2;
    *(_OWORD *)(result + 24) = v3;
    *(void *)(result + 40) = v4;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10000967C(void (*a1)(void *), uint64_t a2, void (*a3)(void *__return_ptr, __n128))
{
  uint64_t v5 = sub_10017DF08(&qword_100E64A28);
  __n128 v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  a3(v16, v6);
  a1(v16);
  swift_release();
  uint64_t v9 = type metadata accessor for LocationInput();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v9) != 1) {
    return sub_1001522B4();
  }
  sub_1001781AC((uint64_t)v8, &qword_100E64A28);
  v16[0] = 0;
  v16[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(82);
  v11._countAndFlagsBits = 0xD00000000000004BLL;
  v11._object = (void *)0x8000000100C96D70;
  String.append(_:)(v11);
  v12._countAndFlagsBits = 0x6E6F697461636F4CLL;
  v12._object = (void *)0xED00007475706E49;
  String.append(_:)(v12);
  v13._countAndFlagsBits = 8236;
  v13._object = (void *)0xE200000000000000;
  String.append(_:)(v13);
  v14._object = (void *)0x8000000100C97060;
  v14._countAndFlagsBits = 0xD000000000000011;
  String.append(_:)(v14);
  v15._countAndFlagsBits = 46;
  v15._object = (void *)0xE100000000000000;
  String.append(_:)(v15);
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t type metadata accessor for HandlerAssembly()
{
  return self;
}

uint64_t sub_100009884()
{
  uint64_t v0 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)&v7 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for ContentStatusBanner();
  sub_100097814(v3, qword_100E8DEE0);
  uint64_t v4 = sub_1002102B0(v3, (uint64_t)qword_100E8DEE0);
  Date.init()();
  uint64_t v5 = type metadata accessor for Date();
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v2, 0, 1, v5);
  *(unsigned char *)uint64_t v4 = 1;
  *(_OWORD *)(v4 + 8) = xmmword_100C313A0;
  return sub_10024D364((uint64_t)v2, v4 + *(int *)(v3 + 24), (uint64_t *)&unk_100E73CA0);
}

uint64_t type metadata accessor for MoonDetailAssembly()
{
  return self;
}

void *sub_10000999C(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[1] = v6;
  uint64_t v7 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 24))(((unint64_t)a1 + *(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t type metadata accessor for TimeReducer()
{
  return self;
}

uint64_t sub_100009A5C()
{
  uint64_t result = type metadata accessor for Location();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_100009AE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v16 = type metadata accessor for GCDSerialDispatchQueueFactory();
  uint64_t v17 = &off_100E2C068;
  uint64_t v6 = sub_100170694(v15);
  sub_100213BF8(a3, (uint64_t)v6);
  type metadata accessor for WeatherDataVisibleLocationLoadingTelemetry();
  uint64_t v7 = swift_allocObject();
  uint64_t v8 = sub_1000DF0C4((uint64_t)v15, v16);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v15[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v11 + 16))(v10);
  uint64_t v12 = sub_1000373A0(a1, a2, (uint64_t)v10, v7);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v15);
  return v12;
}

uint64_t type metadata accessor for NotificationsStoreObserver()
{
  return self;
}

uint64_t sub_100009C48()
{
  uint64_t result = type metadata accessor for LocationModel();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for ConditionPickerMenuViewModel(319);
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

void sub_100009D44()
{
  sub_10000AFF4();
  if (v0 <= 0x3F)
  {
    type metadata accessor for URL();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t type metadata accessor for SettingsAssembly()
{
  return self;
}

uint64_t type metadata accessor for LocationPreviewAssembly()
{
  return self;
}

uint64_t sub_100009E74(uint64_t a1, void *a2)
{
  uint64_t v3 = sub_10017DF08(&qword_100E71B68);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001B1E64(a2, a2[3]);
  uint64_t v6 = type metadata accessor for Configuration();
  dispatch thunk of ResolverType.resolve<A>(_:)();
  uint64_t result = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v5, 1, v6);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    char v8 = Configuration.isEnabled.getter();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
    if (v8)
    {
      sub_10020D948((uint64_t)a2, (uint64_t)v11);
      uint64_t v9 = swift_allocObject();
      sub_1001262E4(v11, v9 + 16);
      type metadata accessor for LazyEventProcessor();
      swift_allocObject();
      LazyEventProcessor.init(underlyingProcessorProvider:)();
      SessionManager.processorManager.getter();
      swift_retain();
      ProcessorManager.add(eventProcessor:)();
      swift_release();
      return swift_release_n();
    }
  }
  return result;
}

uint64_t sub_10000A034()
{
  uint64_t result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for LocationPreviewViewStateReducer()
{
  return self;
}

uint64_t type metadata accessor for DebugAssembly()
{
  return self;
}

uint64_t sub_10000A118@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1001B1E64(a1, a1[3]);
  type metadata accessor for Tracker();
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (result)
  {
    a2[3] = (uint64_t)&type metadata for LocationViewerTracker;
    a2[4] = (uint64_t)&off_100E119F0;
    *a2 = result;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_10000A188()
{
  sub_100004B44(319, qword_100E6D470, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
  if (v0 <= 0x3F)
  {
    type metadata accessor for ColorScheme();
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

uint64_t type metadata accessor for LocationsReducer()
{
  return self;
}

uint64_t type metadata accessor for InteractionDonationStoreObserver()
{
  return self;
}

uint64_t sub_10000A2D8()
{
  uint64_t result = type metadata accessor for Location();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for WeatherData(319);
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_10000A3B8@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E6FC60);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v6)
  {
    uint64_t v4 = type metadata accessor for LocationViewerViewModelFactory();
    swift_allocObject();
    uint64_t result = sub_100219E58(&v5);
    a2[3] = v4;
    a2[4] = (uint64_t)&off_100E268E8;
    *a2 = result;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_10000A458(void *a1)
{
  v2.is_nil = swift_getObjectType();
  v2.value._rawValue = a1;

  ApplicationStateMonitor.applicationDidFinishLaunching(withOptions:)(v2);
}

uint64_t sub_10000A4A8()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_10000A584()
{
  uint64_t result = type metadata accessor for Location();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for WeatherMapOverlayKind();
    if (v2 <= 0x3F)
    {
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

uint64_t sub_10000A64C()
{
  uint64_t result = type metadata accessor for Location.Identifier();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for ProviderAssembly()
{
  return self;
}

uint64_t type metadata accessor for LocationsOfInterestUpdater()
{
  return self;
}

uint64_t type metadata accessor for DebugReducer()
{
  return self;
}

uint64_t sub_10000A730()
{
  uint64_t result = type metadata accessor for Date();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_10000A7BC()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_10000A800()
{
  type metadata accessor for DailyForecastComponentViewModel(319);
  if (v0 <= 0x3F)
  {
    sub_100230954();
    if (v1 <= 0x3F)
    {
      type metadata accessor for Text.Measurements();
      if (v2 <= 0x3F)
      {
        sub_100005F64(319, (unint64_t *)&unk_100E7E8A8, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for State);
        if (v3 <= 0x3F) {
          swift_initStructMetadata();
        }
      }
    }
  }
}

uint64_t sub_10000A994()
{
  uint64_t result = type metadata accessor for Locale();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for ActivityAction();
    if (v2 <= 0x3F)
    {
      uint64_t result = type metadata accessor for ConfiguredUnitsAction();
      if (v3 <= 0x3F)
      {
        swift_initEnumMetadataMultiPayload();
        return 0;
      }
    }
  }
  return result;
}

uint64_t type metadata accessor for AutomationAssembly()
{
  return self;
}

uint64_t sub_10000AAFC(uint64_t a1)
{
  uint64_t v2 = sub_10017DF08(&qword_100EAC4A0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = &v11[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = type metadata accessor for LocationModel();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  char v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1001643C8(a1, (uint64_t)v11);
  if (swift_dynamicCast())
  {
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v4, 0, 1, v5);
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v6 + 32))(v8, v4, v5);
    sub_10015180C((uint64_t)&unk_100E6A4C8);
    char v9 = dispatch thunk of static Equatable.== infix(_:_:)();
    (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
  }
  else
  {
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v4, 1, 1, v5);
    sub_10017DF4C((uint64_t)v4, &qword_100EAC4A0);
    char v9 = 0;
  }
  return v9 & 1;
}

uint64_t type metadata accessor for DemoAssembly()
{
  return self;
}

uint64_t sub_10000AD14@<X0>(uint64_t (*a1)(void)@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t v5 = a1(0);
  uint64_t result = swift_allocObject();
  a3[3] = v5;
  a3[4] = a2;
  *a3 = result;
  return result;
}

uint64_t type metadata accessor for TimeStoreObserver()
{
  return self;
}

uint64_t sub_10000AD88@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = j__swift_retain(*a1);
  *a2 = result;
  return result;
}

void sub_10000ADB8()
{
  if (!qword_100E6CD50)
  {
    type metadata accessor for NWActivity.CompletionReason();
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100E6CD50);
    }
  }
}

uint64_t type metadata accessor for NotificationsOptInAssembly()
{
  return self;
}

uint64_t type metadata accessor for AirQualityDetailAssembly()
{
  return self;
}

uint64_t sub_10000AE58()
{
  uint64_t result = type metadata accessor for Date();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void sub_10000AEE4()
{
  sub_10000F7E4();
  if (v0 <= 0x3F)
  {
    type metadata accessor for ObservationRegistrar();
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

void *sub_10000AFB0(uint64_t a1, uint64_t a2)
{
  v2[4] = dispatch_group_create();
  v2[5] = &_swiftEmptyDictionarySingleton;
  v2[2] = a1;
  v2[3] = a2;
  return v2;
}

void sub_10000AFF4()
{
  if (!qword_100E6D470[0])
  {
    type metadata accessor for URL();
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, qword_100E6D470);
    }
  }
}

uint64_t type metadata accessor for InteractionsAssembly()
{
  return self;
}

uint64_t type metadata accessor for LocationAssembly()
{
  return self;
}

uint64_t sub_10000B094(void *a1)
{
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E64798);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v3)
  {
    type metadata accessor for VisibleLocationWeatherLoadMonitor();
    uint64_t v2 = swift_allocObject();
    sub_10000BB58(v2 + OBJC_IVAR____TtC7Weather33VisibleLocationWeatherLoadMonitor_loadState);
    *(void *)(v2 + 16) = v3;
    *(_OWORD *)(v2 + 24) = v4;
    *(void *)(v2 + 40) = v5;
    return v2;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10000B144()
{
  uint64_t result = type metadata accessor for TemperatureScaleConfiguration();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_10000B1F4()
{
  uint64_t result = type metadata accessor for ObservationRegistrar();
  if (v1 <= 0x3F) {
    return swift_updateClassMetadata2();
  }
  return result;
}

uint64_t type metadata accessor for AveragesDetailAssembly()
{
  return self;
}

uint64_t sub_10000B2E0()
{
  uint64_t result = type metadata accessor for SevereAlertComponentStringsBuilder();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for MoonDetailViewStateReducer()
{
  return self;
}

uint64_t sub_10000B394()
{
  uint64_t v1 = v0
     + OBJC_IVAR____TtC7WeatherP33_5624985E7B87C7961D79AEAA50BEAAE139WeatherConditionBackgroundModifierState___observationRegistrar;
  uint64_t v2 = type metadata accessor for ObservationRegistrar();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_10000B434()
{
  uint64_t result = type metadata accessor for WeatherAlert.Prominence();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_10000B4F4@<X0>(uint64_t a1@<X1>, double *a2@<X8>)
{
  uint64_t v4 = type metadata accessor for NamedCoordinateSpace();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = &v13[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t result = type metadata accessor for HighLowModifier(0);
  double v9 = 0.0;
  if (*(unsigned char *)(a1 + *(int *)(result + 24)) == 1)
  {
    uint64_t v10 = result;
    static CoordinateSpaceProtocol<>.scrollView.getter();
    GeometryProxy.bounds(of:)();
    (*(void (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
    uint64_t result = sub_10024D364((uint64_t)v13, (uint64_t)v14, &qword_100E64498);
    double v11 = v15;
    double v9 = 0.0;
    if (v16) {
      double v11 = 0.0;
    }
    double v12 = *(double *)(a1 + *(int *)(v10 + 28));
    if (v12 >= -v11) {
      double v9 = v11 + v12;
    }
  }
  *a2 = v9;
  return result;
}

uint64_t sub_10000B644()
{
  ProxyContainer.public.getter();
  sub_10017DF08(&qword_100E7C0F8);
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();

  return swift_release();
}

uint64_t type metadata accessor for MainAssembly()
{
  return self;
}

uint64_t sub_10000B6DC@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1001B1E64(a1, a1[3]);
  type metadata accessor for Tracker();
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (result)
  {
    uint64_t v4 = result;
    uint64_t v5 = type metadata accessor for MainTracker();
    uint64_t result = swift_allocObject();
    *(void *)(result + 16) = v4;
    a2[3] = v5;
    a2[4] = (uint64_t)&off_100E38E68;
    *a2 = result;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10000B764()
{
  uint64_t result = type metadata accessor for SavedLocation();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for PreviewLocation();
    if (v2 <= 0x3F)
    {
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

uint64_t sub_10000B828()
{
  sub_1000A9DE8();
  type metadata accessor for MainActor();
  *(void *)(v0 + 256) = static MainActor.shared.getter();
  uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_10021B8EC, v2, v1);
}

void sub_10000B8B8()
{
  type metadata accessor for Text.Measurements();
  if (v0 <= 0x3F)
  {
    sub_10000F5F8();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_10000B998()
{
  uint64_t result = type metadata accessor for Date();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_10000BA60()
{
  uint64_t result = type metadata accessor for Date();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_10000BB0C(uint64_t a1)
{
  return a1;
}

uint64_t sub_10000BB58@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for Location.Identifier();
  _s7Weather24LocationCompositionStateOwst_0(a1, 1, 1, v2);
  State = (int *)type metadata accessor for VisibleLocationWeatherLoadState();
  *(void *)(a1 + State[5]) = _swiftEmptyArrayStorage;
  uint64_t v4 = (_OWORD *)(a1 + State[6]);
  uint64_t StatusLog = type metadata accessor for VisibleLocationWeatherLoadStatusLog();
  *uint64_t v4 = 0u;
  v4[1] = 0u;
  Date.init()();
  uint64_t v6 = (char *)v4 + *(int *)(StatusLog + 36);
  *(void *)uint64_t v6 = 0;
  v6[8] = 1;
  uint64_t v7 = (char *)v4 + *(int *)(StatusLog + 40);
  *(void *)uint64_t v7 = 0;
  v7[8] = 1;
  *(unsigned char *)(a1 + State[7]) = 0;
  return Date.init()();
}

uint64_t sub_10000BC20(void *a1)
{
  sub_1001B1E64(a1, a1[3]);
  type metadata accessor for TipCoordinator();
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (result)
  {
    uint64_t v2 = result;
    type metadata accessor for LocationViewerStoreObserver();
    uint64_t v3 = swift_allocObject();
    uint64_t v4 = v3 + OBJC_IVAR____TtC7Weather27LocationViewerStoreObserver_lastViewedLocationIdentifier;
    uint64_t v5 = type metadata accessor for Location.Identifier();
    _s7Weather24LocationCompositionStateOwst_0(v4, 1, 1, v5);
    *(void *)(v3 + 16) = v2;
    return v3;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10000BCC0()
{
  uint64_t result = type metadata accessor for WeatherMapOverlayKind();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for WeatherData(319);
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_10000BD88()
{
  uint64_t result = type metadata accessor for Location();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_10000BE1C(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = v3;
  *(void *)(v6 + 24) = a2;
  a3 &= 1u;
  *(unsigned char *)(v6 + 32) = a3;
  swift_retain();
  sub_100230E90(a2, a3);
  asyncMain(block:)();

  return swift_release();
}

uint64_t sub_10000BEB0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for AppBackgroundTaskManager();
  swift_allocObject();
  uint64_t v3 = AppBackgroundTaskManager.init()();
  a1[3] = v2;
  uint64_t result = sub_100019A3C(&qword_100E807D8, (void (*)(uint64_t))&type metadata accessor for AppBackgroundTaskManager);
  a1[4] = result;
  *a1 = v3;
  return result;
}

uint64_t sub_10000BF3C()
{
  uint64_t result = type metadata accessor for WeatherMapOverlayKind();
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

void sub_10000BFD0()
{
  if (!qword_100E766D0)
  {
    type metadata accessor for MicaBackgroundAnimation();
    unint64_t v0 = type metadata accessor for Published();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100E766D0);
    }
  }
}

uint64_t type metadata accessor for ReportWeatherViewModelFactory()
{
  return self;
}

uint64_t sub_10000C04C()
{
  if (*(void *)(v0 + 24))
  {
    uint64_t v1 = *(void *)(v0 + 16);
  }
  else
  {
    *(_OWORD *)(v0 + 16) = xmmword_100C58AF0;
    swift_bridgeObjectRelease();
    uint64_t v1 = 0x6D65442034323032;
  }
  swift_bridgeObjectRetain();
  return v1;
}

id sub_10000C0B4(void *a1, void *a2)
{
  id v4 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) initWithIntent:a1 response:a2];

  return v4;
}

uint64_t sub_10000C110(uint64_t a1)
{
  sub_10020D948(a1, (uint64_t)v6);
  type metadata accessor for AppIntentsDependencyStartupTask();
  uint64_t v1 = swift_allocObject();
  uint64_t v2 = v1 + OBJC_IVAR____TtC7Weather31AppIntentsDependencyStartupTask_executionPhase;
  uint64_t v3 = enum case for StartupTaskExecutionPhase.willFinishLaunching(_:);
  uint64_t v4 = type metadata accessor for StartupTaskExecutionPhase();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 104))(v2, v3, v4);
  sub_1001262E4(v6, v1 + 16);
  return v1;
}

void sub_10000C1C4()
{
  type metadata accessor for Location.Identifier();
  if (v0 <= 0x3F)
  {
    sub_100230A04();
    if (v1 <= 0x3F)
    {
      sub_100046CB8(319, (unint64_t *)&unk_100E82E60, (void (*)(uint64_t))type metadata accessor for LocationComponentCornerRadiusConfiguration);
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

uint64_t sub_10000C318()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t type metadata accessor for ToolbarAssembly()
{
  return self;
}

uint64_t sub_10000C380()
{
  uint64_t result = type metadata accessor for MoonDetailSelectedDate();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for Date();
    if (v2 <= 0x3F)
    {
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

uint64_t sub_10000C44C@<X0>(unsigned char *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for LocationModel() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  char v7 = *(unsigned char *)(v2 + v6 + *(void *)(v5 + 64));

  return sub_100025154(a1, (void *)(v2 + 16), v2 + v6, v7, a2);
}

void sub_10000C4F4()
{
  sub_10000F990();
  if (v0 <= 0x3F)
  {
    type metadata accessor for VisibleLocationWeatherLoadStatusLog();
    if (v1 <= 0x3F)
    {
      type metadata accessor for Date();
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

uint64_t type metadata accessor for AppStoreReviewPrivacySampler()
{
  return self;
}

uint64_t sub_10000C630()
{
  uint64_t result = type metadata accessor for DynamicTypeSize();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for VFXTestAssembly()
{
  return self;
}

uint64_t sub_10000C710(void *a1)
{
  void (*v2)(uint64_t *__return_ptr, __n128);

  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E64798);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v2)
  {
    type metadata accessor for WidgetReloadStoreObserver();
    swift_allocObject();
    return sub_10004E954(v2);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10000C7B0()
{
  uint64_t result = type metadata accessor for ObservationRegistrar();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_10000C850()
{
  ProxyContainer.public.getter();
  sub_10017DF08(&qword_100E7C0E0);
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();

  return swift_release();
}

uint64_t type metadata accessor for NotificationSettingsViewStateReducer()
{
  return self;
}

uint64_t type metadata accessor for ReportWeatherAssembly()
{
  return self;
}

uint64_t sub_10000C90C()
{
  uint64_t result = type metadata accessor for TargetWindowSizeClass();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_10000C9B4()
{
  uint64_t result = type metadata accessor for Article();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for NewsArticle();
    if (v2 <= 0x3F)
    {
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

uint64_t sub_10000CA78()
{
  uint64_t result = type metadata accessor for NextHourPrecipitationChartViewModel();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_10000CB10()
{
  uint64_t result = type metadata accessor for Date();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for DetailCondition();
    if (v2 <= 0x3F)
    {
      uint64_t result = type metadata accessor for DetailChartSelection();
      if (v3 <= 0x3F)
      {
        swift_initEnumMetadataMultiPayload();
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_10000CC10()
{
  uint64_t v1 = type metadata accessor for AppConfiguration();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001B1E64((void *)(v0 + 16), *(void *)(v0 + 40));
  dispatch thunk of AppConfigurationManagerType.appConfiguration.getter();
  AppConfiguration.news.getter();
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
}

uint64_t type metadata accessor for ConditionDetailViewStateReducer()
{
  return self;
}

uint64_t sub_10000CD30()
{
  uint64_t result = type metadata accessor for ObservationRegistrar();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

void sub_10000CDCC()
{
  if (!qword_100E812E8)
  {
    type metadata accessor for Font.Leading();
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100E812E8);
    }
  }
}

void sub_10000CE24()
{
  if (!qword_100E63C70)
  {
    type metadata accessor for LayoutDirection();
    unint64_t v0 = type metadata accessor for Environment.Content();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100E63C70);
    }
  }
}

uint64_t type metadata accessor for OpenL2HandlerObserver()
{
  return self;
}

uint64_t sub_10000CEA0(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  uint64_t v4 = *(void *)(a1 + 48);
  uint64_t v5 = *(void *)(a1 + 56);
  sub_100190CC4(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
  swift_bridgeObjectRetain();
  sub_100147E1C(v2, v3, v4, v5);
  swift_retain();
  return a1;
}

void sub_10000CF1C()
{
  type metadata accessor for ConfiguredUnit();
  if (v0 <= 0x3F)
  {
    sub_1000147DC();
    if (v1 <= 0x3F) {
      swift_initEnumMetadataMultiPayload();
    }
  }
}

uint64_t type metadata accessor for NotificationSettingsAssembly()
{
  return self;
}

uint64_t type metadata accessor for ActivityActionReducer()
{
  return self;
}

uint64_t type metadata accessor for AveragesDetailViewStateReducer()
{
  return self;
}

uint64_t sub_10000D04C()
{
  uint64_t result = type metadata accessor for WeatherNetworkActivity.Label();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for WidgetReloadStoreObserver()
{
  return self;
}

void sub_10000D130()
{
  type metadata accessor for Location();
  if (v0 <= 0x3F)
  {
    sub_10000D280(319, (unint64_t *)&qword_100E74F78, (void (*)(uint64_t))type metadata accessor for MoonDetailSelectedDate);
    if (v1 <= 0x3F)
    {
      sub_10000D280(319, (unint64_t *)&qword_100E638F0, (void (*)(uint64_t))&type metadata accessor for Date);
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

void sub_10000D280(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = type metadata accessor for Optional();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_10000D2D4()
{
  uint64_t result = type metadata accessor for Location();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for WeatherData(319);
    if (v2 <= 0x3F)
    {
      uint64_t result = type metadata accessor for PreprocessedWeatherData();
      if (v3 <= 0x3F)
      {
        uint64_t result = type metadata accessor for NewsDataModel();
        if (v4 <= 0x3F)
        {
          swift_initStructMetadata();
          return 0;
        }
      }
    }
  }
  return result;
}

uint64_t sub_10000D420()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10000D464()
{
  uint64_t result = type metadata accessor for ObservationRegistrar();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_10000D500()
{
  uint64_t result = type metadata accessor for WeatherDescription();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_10000D594()
{
  uint64_t result = type metadata accessor for Location();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for SunriseSunsetDetailAssembly()
{
  return self;
}

uint64_t sub_10000D64C@<X0>(uint64_t a1@<X8>)
{
  type metadata accessor for WeatherData.WeatherStatisticsState(0);
  sub_100162E4C();
  __chkstk_darwin(v3);
  sub_100162EB8();
  sub_10014FE48(v1, v1, (void (*)(void))type metadata accessor for WeatherData.WeatherStatisticsState);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    sub_1001BC288(v1, (void (*)(void))type metadata accessor for WeatherData.WeatherStatisticsState);
    goto LABEL_5;
  }
  if (EnumCaseMultiPayload != 1)
  {
LABEL_5:
    uint64_t v9 = type metadata accessor for WeatherStatisticsModel();
    uint64_t v7 = a1;
    uint64_t v8 = 1;
    return _s7Weather24LocationCompositionStateOwst_0(v7, v8, 1, v9);
  }
  uint64_t v5 = type metadata accessor for WeatherStatisticsModel();
  sub_100162E4C();
  sub_1001190D4();
  v6();
  uint64_t v7 = a1;
  uint64_t v8 = 0;
  uint64_t v9 = v5;
  return _s7Weather24LocationCompositionStateOwst_0(v7, v8, 1, v9);
}

id sub_10000D768(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v18 = &v9[OBJC_IVAR____TtC7Weather28LocationAuthorizationMonitor_dispatcher];
  *(void *)uint64_t v18 = a1;
  *((void *)v18 + 1) = a2;
  sub_10020D948(a3, (uint64_t)&v9[OBJC_IVAR____TtC7Weather28LocationAuthorizationMonitor_locationManager]);
  v19 = &v9[OBJC_IVAR____TtC7Weather28LocationAuthorizationMonitor_locationsOfInterestUpdater];
  *(void *)v19 = a4;
  *((void *)v19 + 1) = a5;
  v20 = &v9[OBJC_IVAR____TtC7Weather28LocationAuthorizationMonitor_stateReader];
  *(void *)v20 = a6;
  *((void *)v20 + 1) = a7;
  *((void *)v20 + 2) = a8;
  *((void *)v20 + 3) = a9;
  v24.receiver = v9;
  v24.super_class = ObjectType;
  [super init];
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a3);
  return v21;
}

uint64_t type metadata accessor for PerformanceTestReducer()
{
  return self;
}

void sub_10000D870()
{
  uint64_t v0 = type metadata accessor for BackgroundAnimationKind();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = __chkstk_darwin(v0);
  unint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v10 - v5;
  type metadata accessor for WeatherConditionBackgroundModifier(0);
  WeatherConditionBackgroundModel.animationKind.getter();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v4, enum case for BackgroundAnimationKind.mica(_:), v0);
  char v7 = static BackgroundAnimationKind.== infix(_:_:)();
  uint64_t v8 = *(void (**)(char *, uint64_t))(v1 + 8);
  v8(v4, v0);
  v8(v6, v0);
  if (v7)
  {
    type metadata accessor for WeatherMicaConditionBackground();
    sub_1001CA9B8(&qword_100EB4A70, (void (*)(uint64_t))type metadata accessor for WeatherMicaConditionBackground);
    *(unsigned char *)(StateObject.wrappedValue.getter()
             + OBJC_IVAR____TtC7Weather30WeatherMicaConditionBackground_isWindowActive) = 1;
    swift_release();
    StateObject.wrappedValue.getter();
    uint64_t v9 = (void *)sub_100436878();
    MicaBackgroundAnimation.play(_:)(1);
    swift_release();
  }
}

void sub_10000DA88()
{
  if (!qword_100E7EF50)
  {
    type metadata accessor for CurrentLocation();
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100E7EF50);
    }
  }
}

uint64_t sub_10000DAE0()
{
  uint64_t result = type metadata accessor for CurrentWeather();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for LocationViewerInputFactory()
{
  return self;
}

uint64_t sub_10000DB98()
{
  uint64_t result = type metadata accessor for NSRunLoop.SchedulerTimeType.Stride();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for OSSignpostID();
    if (v2 <= 0x3F) {
      return swift_updateClassMetadata2();
    }
  }
  return result;
}

uint64_t sub_10000DCA4(uint64_t a1, char *a2)
{
  char v2 = *a2;
  type metadata accessor for PageControlDisplayStateModifier(0);
  sub_10017DF08(&qword_100E8EC18);
  State.wrappedValue.getter();
  *(unsigned char *)(v4 + 17) = v2;
  return swift_release();
}

uint64_t sub_10000DD14()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_10000DD3C()
{
  if ((*v0 & 1) == 0) {
    return 1;
  }
  sub_10017DF08(&qword_100E65950);
  State.wrappedValue.getter();
  if (v2) {
    return 1;
  }
  State.wrappedValue.getter();
  return v2;
}

uint64_t sub_10000DDC4()
{
  uint64_t result = type metadata accessor for Date();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for LinkReducer()
{
  return self;
}

uint64_t sub_10000DE88()
{
  uint64_t result = type metadata accessor for Date();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_10000DF30()
{
  uint64_t result = type metadata accessor for Date();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

void sub_10000DFA8()
{
  type metadata accessor for Logger();
  if (v0 <= 0x3F)
  {
    sub_1000159D8();
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

Swift::Void __swiftcall ReportWeatherMonitor.applicationWillEnterForeground()()
{
  if (qword_100E62420 != -1) {
    swift_once();
  }
  sub_1000325A4(&qword_100E91CA8);
  Updatable.save<A>(setting:value:)();
}

uint64_t type metadata accessor for LocationFinder()
{
  return self;
}

uint64_t sub_10000E17C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E7CD20);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v7)
  {
    uint64_t v4 = type metadata accessor for LocationsReducer();
    uint64_t v5 = swift_allocObject();
    uint64_t result = sub_1001262E4(&v6, v5 + 16);
    a2[3] = v4;
    a2[4] = (uint64_t)&off_100E28918;
    *a2 = v5;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_10000E220()
{
  type metadata accessor for LocationViewerActiveLocationState();
  if (v0 <= 0x3F)
  {
    type metadata accessor for LocationModel();
    if (v1 <= 0x3F)
    {
      type metadata accessor for LocationsState();
      if (v2 <= 0x3F)
      {
        type metadata accessor for Date();
        if (v3 <= 0x3F)
        {
          sub_100226490();
          if (v4 <= 0x3F) {
            swift_initStructMetadata();
          }
        }
      }
    }
  }
}

uint64_t sub_10000E3E4()
{
  uint64_t v1 = v0;
  type metadata accessor for LocationComponentHeaderViewModel(0);
  sub_100162E4C();
  __chkstk_darwin(v2);
  sub_1001626E0();
  uint64_t v5 = (uint64_t *)(v4 - v3);
  sub_1001F0424(v1, v4 - v3, (void (*)(void))type metadata accessor for LocationComponentHeaderViewModel);
  if (swift_getEnumCaseMultiPayload())
  {
    sub_1001F4EE0((uint64_t)v5, (void (*)(void))type metadata accessor for LocationComponentHeaderViewModel);
    return 0;
  }
  else
  {
    if (v5[6]) {
      uint64_t v6 = v5[5];
    }
    else {
      uint64_t v6 = *v5;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v6;
}

uint64_t sub_10000E4EC()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for AutomationReducer()
{
  return self;
}

uint64_t type metadata accessor for SearchViewStateReducer()
{
  return self;
}

void sub_10000E5E4()
{
  if (!qword_100E7A438)
  {
    type metadata accessor for FinishLaunchTestAction();
    unint64_t v0 = type metadata accessor for Environment.Content();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100E7A438);
    }
  }
}

uint64_t sub_10000E63C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = type metadata accessor for Access();
  sub_100179C0C();
  uint64_t v7 = v6;
  __chkstk_darwin(v8);
  sub_1001626E0();
  uint64_t v11 = v10 - v9;
  swift_allocObject();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v11, a4, v5);
  uint64_t v12 = SettingGroup.init(key:defaultValue:access:)();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a4, v5);
  return v12;
}

uint64_t type metadata accessor for MainViewModelFactory()
{
  return self;
}

uint64_t sub_10000E758(uint64_t a1, void (*a2)(void), uint64_t (*a3)(void))
{
  return a3();
}

void sub_10000E79C()
{
  if (!qword_100E794B0)
  {
    type metadata accessor for WeatherDescription();
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100E794B0);
    }
  }
}

uint64_t type metadata accessor for AnalyticsAssembly()
{
  return self;
}

uint64_t type metadata accessor for ConditionDetailAssembly()
{
  return self;
}

void sub_10000E83C()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for EnvironmentState();
  uint64_t v3 = v2 - 8;
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&aBlock[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001B1E64(&v0[OBJC_IVAR____TtC7Weather28LocationAuthorizationMonitor_locationManager], *(void *)&v0[OBJC_IVAR____TtC7Weather28LocationAuthorizationMonitor_locationManager + 24]);
  sub_10021A6D4();
  uint64_t v6 = dispatch thunk of LocationManagerType.addObserver(_:)();
  (*(void (**)(void *__return_ptr, uint64_t))&v0[OBJC_IVAR____TtC7Weather28LocationAuthorizationMonitor_stateReader])(aBlock, v6);
  uint64_t v7 = aBlock[0] + OBJC_IVAR____TtCV7Weather9MainState8_Storage_environment;
  swift_beginAccess();
  sub_1000F1324(v7, (uint64_t)v5);
  swift_release();
  int v8 = v5[*(int *)(v3 + 56)];
  sub_100159290((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for EnvironmentState);
  if (v8 == 1)
  {
    uint64_t v9 = self;
    uint64_t v10 = swift_allocObject();
    *(void *)(v10 + 16) = v1;
    aBlock[4] = sub_100BA9E94;
    aBlock[5] = v10;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1003169EC;
    aBlock[3] = &unk_100E39FE8;
    uint64_t v11 = _Block_copy(aBlock);
    id v12 = v1;
    swift_release();
    id v13 = [v9 scheduledTimerWithTimeInterval:0 repeats:v11 block:60.0];
    _Block_release(v11);
  }
}

uint64_t type metadata accessor for SceneResizeMonitor()
{
  return self;
}

uint64_t sub_10000EA6C()
{
  uint64_t result = type metadata accessor for Published();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_10000EB1C()
{
  uint64_t result = type metadata accessor for WeatherCondition();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

Swift::Void __swiftcall AppStateMonitor.applicationDidFinishLaunching(withOptions:)(Swift::OpaquePointer_optional withOptions)
{
  type metadata accessor for MainAction();
  sub_100179DC0();
  __chkstk_darwin(v2);
  uint64_t v4 = &v6[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = *(uint64_t (**)(uint64_t))(v1 + 16);
  *uint64_t v4 = 0;
  swift_storeEnumTagMultiPayload();
  sub_10017CC38();
  sub_1001AAF58((uint64_t)v4, (uint64_t)v6, v5);
  sub_1001AB060((uint64_t)v6, (uint64_t *)&unk_100EA01F0);
  sub_1001ABE70((uint64_t)v4);
  swift_release();
}

uint64_t sub_10000EC6C()
{
  uint64_t result = type metadata accessor for URL();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_10000ED08()
{
  uint64_t result = type metadata accessor for ConditionDetailViewState();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for AirQualityDetailViewState();
    if (v2 <= 0x3F)
    {
      uint64_t result = type metadata accessor for NextHourPrecipitationDetailViewState();
      if (v3 <= 0x3F)
      {
        uint64_t result = type metadata accessor for SunriseSunsetDetailViewState();
        if (v4 <= 0x3F)
        {
          uint64_t result = type metadata accessor for MoonDetailViewState();
          if (v5 <= 0x3F)
          {
            uint64_t result = type metadata accessor for AveragesDetailViewState();
            if (v6 <= 0x3F)
            {
              uint64_t result = type metadata accessor for URL();
              if (v7 <= 0x3F)
              {
                uint64_t result = type metadata accessor for HomeAndWorkRefinementViewState();
                if (v8 <= 0x3F)
                {
                  swift_initEnumMetadataMultiPayload();
                  return 0;
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10000EF34()
{
  uint64_t result = type metadata accessor for CurrentWeather();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for NotificationsOptInReducer()
{
  return self;
}

unint64_t sub_10000EFEC()
{
  unint64_t result = qword_100EA9088;
  if (!qword_100EA9088)
  {
    sub_10018C6DC(&qword_100EA9090);
    type metadata accessor for LocationEntity();
    sub_1000B0928(&qword_100EA9068, (void (*)(uint64_t))&type metadata accessor for LocationEntity);
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA9088);
  }
  return result;
}

uint64_t sub_10000F0D4()
{
  uint64_t result = type metadata accessor for CurrentWeather();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_10000F16C()
{
  uint64_t result = type metadata accessor for AvailableDataSets();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for AppLifecycleReducer()
{
  return self;
}

uint64_t type metadata accessor for WeatherLocation()
{
  return self;
}

uint64_t type metadata accessor for NextHourPrecipitationDetailAssembly()
{
  return self;
}

uint64_t *sub_10000F268(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  sub_1000C1E18(a1, a2);
  if (a1 != a2)
  {
    uint64_t v6 = *(int *)(a3 + 20);
    unint64_t v7 = (uint64_t *)((char *)a1 + v6);
    unint64_t v8 = (uint64_t *)((char *)a2 + v6);
    sub_100178110((uint64_t)a1 + v6, &qword_100EAA740);
    sub_10017DF08(&qword_100EAA740);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v9 = type metadata accessor for ScenePhase();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
    }
    else
    {
      *unint64_t v7 = *v8;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t type metadata accessor for ResettingBool()
{
  return self;
}

uint64_t sub_10000F374(void *a1, void (*a2)(void), void (*a3)(uint64_t))
{
  unint64_t v5 = sub_1001B1E64(a1, a1[3]);
  a2(0);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (result)
  {
    uint64_t v7 = sub_100162708();
    a3(v7);
    uint64_t result = swift_allocObject();
    *(void *)(result + 16) = v5;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t type metadata accessor for MoonCalendarAssembly()
{
  return self;
}

uint64_t type metadata accessor for SearchAssembly()
{
  return self;
}

uint64_t sub_10000F444()
{
  uint64_t result = type metadata accessor for LocationModel();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_10000F4D0()
{
  uint64_t result = type metadata accessor for CodableError();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_10000F564()
{
  uint64_t result = type metadata accessor for Location.Identifier();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void sub_10000F5F8()
{
  if (!qword_100E6D980)
  {
    type metadata accessor for ColorSchemeContrast();
    unint64_t v0 = type metadata accessor for Environment.Content();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100E6D980);
    }
  }
}

uint64_t destroy for LocationTracker(uint64_t a1)
{
  swift_release();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1 + 8);
  swift_release();

  return swift_release();
}

void sub_10000F69C()
{
  type metadata accessor for Date();
  if (v0 <= 0x3F)
  {
    sub_10000DA88();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_10000F7E4()
{
  if (!qword_100EAE0F0)
  {
    type metadata accessor for WeatherConditionBackgroundModel();
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100EAE0F0);
    }
  }
}

uint64_t sub_10000F83C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for CurrentWeather();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_10000F8C4()
{
  if (qword_100E62A98 != -1) {
    swift_once();
  }
  uint64_t result = dispatch thunk of SettingGroup.isEnabled.getter();
  byte_100EAF668 = result & 1;
  return result;
}

void *assignWithCopy for MainViewModelEnvironmentModifier(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t type metadata accessor for SunriseSunsetDetailViewStateReducer()
{
  return self;
}

void sub_10000F990()
{
  if (!qword_100E6EAC8)
  {
    type metadata accessor for Location.Identifier();
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100E6EAC8);
    }
  }
}

uint64_t sub_10000F9E8()
{
  uint64_t result = type metadata accessor for Location();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_10000FA88()
{
  uint64_t result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for FeelsLikeComponentPreprocessedDataModel();
    if (v2 <= 0x3F)
    {
      uint64_t result = type metadata accessor for HourlyForecastComponentPreprocessedDataModel();
      if (v3 <= 0x3F)
      {
        uint64_t result = type metadata accessor for ListPreprocessedDataModel();
        if (v4 <= 0x3F)
        {
          uint64_t result = type metadata accessor for UVIndexComponentPreprocessedDataModel();
          if (v5 <= 0x3F)
          {
            uint64_t result = type metadata accessor for PressureComponentPreprocessedDataModel();
            if (v6 <= 0x3F)
            {
              uint64_t result = type metadata accessor for WeatherConditionBackgroundTimeData();
              if (v7 <= 0x3F)
              {
                swift_initStructMetadata();
                return 0;
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10000FCA0()
{
  swift_getKeyPath();
  sub_100231104(&qword_100E8F960, (void (*)(uint64_t))type metadata accessor for LocationViewCollisionOptionsUpdatingViewState);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  return *(unsigned __int8 *)(v0 + 16);
}

void sub_10000FD40()
{
  type metadata accessor for WeatherMapOverlayKind();
  if (v0 <= 0x3F)
  {
    type metadata accessor for Location();
    if (v1 <= 0x3F)
    {
      sub_100224C28();
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

uint64_t sub_10000FEAC()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for MainAction();
  __chkstk_darwin(v2);
  unint64_t v4 = (char *)v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for EnvironmentState();
  uint64_t v6 = v5 - 8;
  __chkstk_darwin(v5);
  unint64_t v8 = (char *)v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  int IsReduceMotionEnabled = UIAccessibilityIsReduceMotionEnabled();
  (*(void (**)(_OWORD *__return_ptr))(v0 + 16))(v14);
  uint64_t v10 = *(void *)&v14[0] + OBJC_IVAR____TtCV7Weather9MainState8_Storage_environment;
  swift_beginAccess();
  sub_1000F1324(v10, (uint64_t)v8);
  swift_release();
  int v11 = v8[*(int *)(v6 + 44)];
  uint64_t result = sub_10002E0FC((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for EnvironmentState);
  if (IsReduceMotionEnabled != v11)
  {
    id v13 = *(uint64_t (**)(uint64_t))(v1 + 48);
    *unint64_t v4 = IsReduceMotionEnabled;
    type metadata accessor for EnvironmentAction();
    swift_storeEnumTagMultiPayload();
    swift_storeEnumTagMultiPayload();
    uint64_t v15 = 0;
    memset(v14, 0, sizeof(v14));
    swift_retain();
    sub_1001AAF58((uint64_t)v4, (uint64_t)v14, v13);
    sub_100016E7C((uint64_t)v14);
    sub_10002E0FC((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for MainAction);
    return swift_release();
  }
  return result;
}

uint64_t type metadata accessor for VFXTestViewStateReducer()
{
  return self;
}

uint64_t sub_1000100A8()
{
  uint64_t result = type metadata accessor for NewsDataModel();
  if (v1 <= 0x3F)
  {
    uint64_t v5 = *(void *)(result - 8) + 64;
    uint64_t result = type metadata accessor for WeatherData(319);
    if (v2 <= 0x3F)
    {
      uint64_t result = type metadata accessor for PreprocessedWeatherData();
      if (v3 <= 0x3F)
      {
        swift_getTupleTypeLayout3();
        uint64_t v6 = &v4;
        uint64_t v7 = " ";
        swift_initEnumMetadataMultiPayload();
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_1000101C8()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      uint64_t result = swift_initClassMetadata2();
      if (!result) {
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_1000102A4()
{
  uint64_t result = type metadata accessor for Location();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for Logger();
    if (v2 <= 0x3F) {
      return swift_updateClassMetadata2();
    }
  }
  return result;
}

uint64_t type metadata accessor for MainReducer()
{
  return self;
}

uint64_t type metadata accessor for MoonScrubberAssembly()
{
  return self;
}

uint64_t sub_1000103E0()
{
  uint64_t result = type metadata accessor for Locale();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1000104B4()
{
  uint64_t result = type metadata accessor for WeatherNetworkActivity.Label();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

void sub_10001056C()
{
  type metadata accessor for CurrentWeather();
  if (v0 <= 0x3F)
  {
    type metadata accessor for HourlyForecastComponentPreprocessedDataModel();
    if (v1 <= 0x3F)
    {
      sub_100020CBC();
      if (v2 <= 0x3F)
      {
        sub_10001CB2C();
        if (v3 <= 0x3F)
        {
          sub_100010848();
          if (v4 <= 0x3F) {
            swift_initStructMetadata();
          }
        }
      }
    }
  }
}

uint64_t sub_1000106F4(uint64_t a1, uint64_t a2)
{
  v2[2] = a1;
  v2[3] = a2;
  type metadata accessor for MainActor();
  v2[4] = static MainActor.shared.getter();
  uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_10022502C, v4, v3);
}

uint64_t type metadata accessor for LocationModule()
{
  return self;
}

uint64_t type metadata accessor for ActiveUserAnalyticsManager()
{
  return self;
}

uint64_t sub_1000107D4@<X0>(uint64_t (*a1)(void)@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t v5 = a1(0);
  uint64_t result = swift_allocObject();
  a3[3] = v5;
  a3[4] = a2;
  *a3 = result;
  return result;
}

uint64_t type metadata accessor for StartupAssembly()
{
  return self;
}

void sub_100010848()
{
  if (!qword_100E71338)
  {
    type metadata accessor for WeatherChanges();
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100E71338);
    }
  }
}

uint64_t assignWithCopy for InvertedColorSchemeStatusBarCorrectionModifier(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_1000108E4()
{
  char IsVerySlow = DeviceIsVerySlow();
  char v1 = DeviceUsesWireframeOnLocationViewScroll();
  uint64_t result = DeviceIsVerySlow();
  byte_100F51390 = IsVerySlow;
  byte_100F51391 = v1;
  byte_100F51392 = result;
  return result;
}

void *sub_100010928@<X0>(void *a1@<X8>)
{
  __src[10] = sub_100874A94;
  __src[11] = 0;
  LOBYTE(__src[12]) = 0;
  __src[0] = sub_10017DF08(&qword_100EAAAC0);
  if (qword_100E62290 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t result = (void *)sub_10006DF38((uint64_t)&xmmword_100F51398, (uint64_t)&v4, &qword_100E6F2A0);
  if (v5)
  {
    sub_1001262E4(&v4, (uint64_t)&__src[3]);
    __src[1] = sub_100A2778C;
    __src[2] = 0;
    uint64_t v3 = Dictionary.init(dictionaryLiteral:)();
    __src[8] = &_swiftEmptyArrayStorage;
    __src[9] = v3;
    return memcpy(a1, __src, 0x61uLL);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void *sub_100010A44(uint64_t a1, const void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  a5[5] = type metadata accessor for LocationViewDescriptor();
  a5[6] = &off_100E37020;
  a5[2] = a1;
  a5[10] = &type metadata for MapOverlayKindProvider;
  a5[11] = &off_100E1D390;
  uint64_t v10 = swift_allocObject();
  a5[7] = v10;
  memcpy((void *)(v10 + 16), a2, 0x50uLL);
  a5[15] = type metadata accessor for NotificationsOptInViewModelFactory();
  a5[16] = &off_100E2BA78;
  a5[12] = a3;
  a5[20] = type metadata accessor for ReportWeatherViewModelFactory();
  a5[21] = &off_100E2BC00;
  a5[17] = a4;
  return a5;
}

uint64_t sub_100010B10@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  type metadata accessor for WeatherData(0);
  WeatherDataModel.currentWeather.getter();
  uint64_t v4 = *(void *)(a1 + *(int *)(type metadata accessor for PreprocessedWeatherData() + 20));
  *(void *)(a2 + *(int *)(type metadata accessor for DailyForecastComponent() + 20)) = v4;
  type metadata accessor for LocationViewComponent();
  swift_storeEnumTagMultiPayload();

  return swift_bridgeObjectRetain();
}

uint64_t sub_100010BA4()
{
  char v1 = v0;
  uint64_t v2 = *v0;
  sub_10017DF08(&qword_100E972F0);
  uint64_t v3 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_34:
    *char v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v9 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v10 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v12 = 0;
  if (!v8) {
    goto LABEL_7;
  }
LABEL_6:
  unint64_t v13 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  for (unint64_t i = v13 | (v12 << 6); ; unint64_t i = __clz(__rbit64(v16)) + (v12 << 6))
  {
    uint64_t v18 = *(void *)(*(void *)(v2 + 48) + 8 * i);
    Hasher.init(_seed:)();
    Namespace.ID.hash(into:)();
    uint64_t result = Hasher._finalize()();
    uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v20 = result & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~*(void *)(v10 + 8 * (v20 >> 6))) == 0)
    {
      char v23 = 0;
      unint64_t v24 = (unint64_t)(63 - v19) >> 6;
      while (++v21 != v24 || (v23 & 1) == 0)
      {
        BOOL v25 = v21 == v24;
        if (v21 == v24) {
          unint64_t v21 = 0;
        }
        v23 |= v25;
        uint64_t v26 = *(void *)(v10 + 8 * v21);
        if (v26 != -1)
        {
          unint64_t v22 = __clz(__rbit64(~v26)) + (v21 << 6);
          goto LABEL_30;
        }
      }
      __break(1u);
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    unint64_t v22 = __clz(__rbit64((-1 << v20) & ~*(void *)(v10 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
    *(void *)(v10 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    *(void *)(*(void *)(v4 + 48) + 8 * v22) = v18;
    ++*(void *)(v4 + 16);
    if (v8) {
      goto LABEL_6;
    }
LABEL_7:
    int64_t v15 = v12 + 1;
    if (__OFADD__(v12, 1)) {
      goto LABEL_36;
    }
    if (v15 >= v9) {
      goto LABEL_32;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v15);
    ++v12;
    if (!v16)
    {
      int64_t v12 = v15 + 1;
      if (v15 + 1 >= v9) {
        goto LABEL_32;
      }
      unint64_t v16 = *(void *)(v6 + 8 * v12);
      if (!v16)
      {
        int64_t v12 = v15 + 2;
        if (v15 + 2 >= v9) {
          goto LABEL_32;
        }
        unint64_t v16 = *(void *)(v6 + 8 * v12);
        if (!v16) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v8 = (v16 - 1) & v16;
  }
  int64_t v17 = v15 + 3;
  if (v17 >= v9)
  {
LABEL_32:
    uint64_t result = swift_release_n();
    char v1 = v0;
    goto LABEL_34;
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16)
  {
    int64_t v12 = v17;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v12 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v12 >= v9) {
      goto LABEL_32;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v12);
    ++v17;
    if (v16) {
      goto LABEL_20;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t type metadata accessor for ShortcutItemMiddleware()
{
  return self;
}

void sub_100010E4C()
{
  swift_checkMetadataState();
  if (v0 <= 0x3F)
  {
    sub_10022728C();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_100010F4C()
{
  uint64_t result = type metadata accessor for WeatherCondition();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_100010FD8(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for Date() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v1 + 16);
  uint64_t v7 = *(void *)(v1 + 24);
  uint64_t v8 = v1 + v5;
  uint64_t v9 = *(void *)(v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *uint64_t v10 = v2;
  v10[1] = sub_10021C78C;
  return sub_10006734C(a1, v6, v7, v8, v9);
}

uint64_t type metadata accessor for WeatherDataStoreObserver()
{
  return self;
}

uint64_t sub_100011120()
{
  uint64_t result = type metadata accessor for AppConfiguration();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for MainInitialStateProvider()
{
  return self;
}

uint64_t type metadata accessor for HomeAndWorkRefinementAssembly()
{
  return self;
}

void *sub_1000111F4(void *a1, const void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v8 = type metadata accessor for Location.Identifier();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
  }
  else if (EnumCaseMultiPayload == 1)
  {
    uint64_t v9 = type metadata accessor for WeatherMapOverlayKind();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
  }
  else
  {
    if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      return a1;
    }
    uint64_t v7 = type metadata accessor for LocationModel();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_100011350(uint64_t a1, const __SCPreferences *a2)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_100056498(a2);
    return swift_release();
  }
  return result;
}

uint64_t sub_1000113B0()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for MainAction();
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for EnvironmentState();
  uint64_t v6 = v5 - 8;
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  int IsSwitchControlRunning = UIAccessibilityIsSwitchControlRunning();
  (*(void (**)(_OWORD *__return_ptr))(v0 + 16))(v14);
  uint64_t v10 = *(void *)&v14[0] + OBJC_IVAR____TtCV7Weather9MainState8_Storage_environment;
  swift_beginAccess();
  sub_1000F1324(v10, (uint64_t)v8);
  swift_release();
  int v11 = v8[*(int *)(v6 + 48)];
  uint64_t result = sub_10002E0FC((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for EnvironmentState);
  if (IsSwitchControlRunning != v11)
  {
    unint64_t v13 = *(uint64_t (**)(uint64_t))(v1 + 48);
    *uint64_t v4 = IsSwitchControlRunning;
    type metadata accessor for EnvironmentAction();
    swift_storeEnumTagMultiPayload();
    swift_storeEnumTagMultiPayload();
    uint64_t v15 = 0;
    memset(v14, 0, sizeof(v14));
    swift_retain();
    sub_1001AAF58((uint64_t)v4, (uint64_t)v14, v13);
    sub_100016E7C((uint64_t)v14);
    sub_10002E0FC((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for MainAction);
    return swift_release();
  }
  return result;
}

void sub_100011588()
{
  if (!qword_100E6EE60)
  {
    type metadata accessor for Location();
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100E6EE60);
    }
  }
}

void sub_1000115E0()
{
  type metadata accessor for Location();
  if (v0 <= 0x3F)
  {
    sub_100219840();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

unint64_t sub_1000116B8(uint64_t a1)
{
  unint64_t result = sub_10017DFE0(a1);
  if (!result)
  {
    v3(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, v1);
  }
  return result;
}

uint64_t sub_1000116FC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_100011744()
{
  id v0 = [self sharedService];
}

uint64_t sub_100011788@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E64798);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v5)
  {
    uint64_t v4 = type metadata accessor for InteractionDonationManager();
    swift_allocObject();
    uint64_t result = (uint64_t)sub_100030654(v5, v6, v7, v8);
    a2[3] = v4;
    a2[4] = (uint64_t)&off_100E1F328;
    *a2 = result;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100011848()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1000118E4()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void sub_100011980()
{
  sub_100011F84();
  if (v0 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    v3[4] = v3;
    uint64_t v1 = type metadata accessor for Location();
    if (v2 <= 0x3F)
    {
      v3[5] = *(void *)(v1 - 8) + 64;
      swift_initEnumMetadataMultiPayload();
    }
  }
}

uint64_t type metadata accessor for NotificationsOptInViewStateReducer()
{
  return self;
}

uint64_t sub_100011A7C()
{
  uint64_t result = type metadata accessor for Date();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for TimeZone();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_100011B5C()
{
  uint64_t result = type metadata accessor for WeatherDescription();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void sub_100011C10()
{
  type metadata accessor for CurrentWeather();
  if (v0 <= 0x3F)
  {
    type metadata accessor for Date();
    if (v1 <= 0x3F)
    {
      sub_10001A1C4();
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

uint64_t sub_100011D14()
{
  uint64_t result = type metadata accessor for Date();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_100011DC8()
{
  uint64_t result = type metadata accessor for WeatherMapOverlayKind();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for WeatherMapTrackingState(319);
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t assignWithCopy for FullscreenMapPresentation(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100011F00(void *a1)
{
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E980F8);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v2)
  {
    type metadata accessor for TimeStoreObserver();
    uint64_t result = swift_allocObject();
    *(void *)(result + 16) = v2;
    *(void *)(result + 24) = v3;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_100011F84()
{
  if (!qword_100E79090)
  {
    type metadata accessor for WeatherCondition();
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100E79090);
    }
  }
}

uint64_t sub_100011FDC(void *a1)
{
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E647D8);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v2)
  {
    type metadata accessor for WeatherDataDebounceMiddleware();
    swift_allocObject();
    return sub_100095738(v2, v3);
  }
  else
  {
    __break(1u);
  }
  return result;
}

unint64_t sub_100012070()
{
  unint64_t result = qword_100EA03B0;
  if (!qword_100EA03B0)
  {
    sub_10018C6DC(&qword_100EA03B8);
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA03B0);
  }
  return result;
}

uint64_t sub_100012114()
{
  uint64_t result = type metadata accessor for AirQuality();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1000121A0()
{
  uint64_t result = type metadata accessor for Location.Identifier();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

uint64_t sub_100012218()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for MainAction();
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for EnvironmentState();
  uint64_t v6 = v5 - 8;
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  int IsVoiceOverRunning = UIAccessibilityIsVoiceOverRunning();
  (*(void (**)(_OWORD *__return_ptr))(v0 + 16))(v14);
  uint64_t v10 = *(void *)&v14[0] + OBJC_IVAR____TtCV7Weather9MainState8_Storage_environment;
  swift_beginAccess();
  sub_1000F1324(v10, (uint64_t)v8);
  swift_release();
  int v11 = v8[*(int *)(v6 + 52)];
  uint64_t result = sub_10002E0FC((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for EnvironmentState);
  if (IsVoiceOverRunning != v11)
  {
    unint64_t v13 = *(uint64_t (**)(uint64_t))(v1 + 48);
    *uint64_t v4 = IsVoiceOverRunning;
    type metadata accessor for EnvironmentAction();
    swift_storeEnumTagMultiPayload();
    swift_storeEnumTagMultiPayload();
    uint64_t v15 = 0;
    memset(v14, 0, sizeof(v14));
    swift_retain();
    sub_1001AAF58((uint64_t)v4, (uint64_t)v14, v13);
    sub_100016E7C((uint64_t)v14);
    sub_10002E0FC((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for MainAction);
    return swift_release();
  }
  return result;
}

void sub_10001246C()
{
  sub_100162EA0();
  uint64_t v2 = v0;
  unsigned __int8 v4 = v3;
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  uint64_t v9 = sub_10017DF08((uint64_t *)&unk_100EADD50);
  uint64_t v10 = sub_100109308(v9);
  __chkstk_darwin(v10);
  sub_10011C760();
  sub_10006DF38(v2, v1, (uint64_t *)&unk_100EADD50);
  type metadata accessor for LocationsState();
  if (v4 <= 2u) {
    swift_bridgeObjectRetain();
  }
  sub_10015458C(v8, v6, v4);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1001CF8D0();
  sub_100162694();
}

uint64_t sub_100012594()
{
  uint64_t result = type metadata accessor for CurrentWeather();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for AppConfigurationReducer()
{
  return self;
}

uint64_t sub_100012644()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_checkMetadataState();
    if (v2 <= 0x3F) {
      return swift_initClassMetadata2();
    }
  }
  return result;
}

uint64_t sub_100012754(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = type metadata accessor for URL();
  if (!_s7Weather24LocationCompositionStateOwet_0(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  swift_bridgeObjectRelease();

  return swift_release();
}

uint64_t type metadata accessor for LocationInputFactory()
{
  return self;
}

id sub_10001282C()
{
  ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v0[OBJC_IVAR____TtC7Weather11AppDelegate____lazy_storage___containerManager] = 0;
  *(void *)&v0[OBJC_IVAR____TtC7Weather11AppDelegate____lazy_storage___container] = 0;
  unint64_t v2 = &v0[OBJC_IVAR____TtC7Weather11AppDelegate____lazy_storage___resolver];
  *(_OWORD *)unint64_t v2 = 0u;
  *((_OWORD *)v2 + 1) = 0u;
  *((void *)v2 + 4) = 0;
  *(void *)&v0[OBJC_IVAR____TtC7Weather11AppDelegate____lazy_storage___observableResolver] = 0;
  *(void *)&v0[OBJC_IVAR____TtC7Weather11AppDelegate____lazy_storage___tracker] = 0;
  unsigned __int8 v3 = &v0[OBJC_IVAR____TtC7Weather11AppDelegate____lazy_storage___stateManager];
  *(_OWORD *)unsigned __int8 v3 = 0u;
  *((_OWORD *)v3 + 1) = 0u;
  *((void *)v3 + 4) = 0;
  uint64_t v4 = &v0[OBJC_IVAR____TtC7Weather11AppDelegate____lazy_storage___windowFocusManager];
  *(_OWORD *)uint64_t v4 = 0u;
  *((_OWORD *)v4 + 1) = 0u;
  *((void *)v4 + 4) = 0;
  uint64_t v5 = &v0[OBJC_IVAR____TtC7Weather11AppDelegate____lazy_storage___debugPresenter];
  *((void *)v5 + 4) = 0;
  *(_OWORD *)uint64_t v5 = 0u;
  *((_OWORD *)v5 + 1) = 0u;
  *(void *)&v0[OBJC_IVAR____TtC7Weather11AppDelegate____lazy_storage___testManager] = 0;
  *(void *)&v0[OBJC_IVAR____TtC7Weather11AppDelegate_sessionManager] = 0;
  *(void *)&v0[OBJC_IVAR____TtC7Weather11AppDelegate_appSessionManager] = 0;
  uint64_t v6 = &v0[OBJC_IVAR____TtC7Weather11AppDelegate_appLaunchTime];
  *(void *)uint64_t v6 = 0;
  v6[8] = 1;
  v8.receiver = v0;
  v8.super_class = ObjectType;
  return [super init];
}

uint64_t type metadata accessor for WeatherMapOverlayDataStoreObserver()
{
  return self;
}

uint64_t type metadata accessor for NewsDataManager()
{
  return self;
}

uint64_t sub_10001296C()
{
  uint64_t result = type metadata accessor for RoundedCornerStyle();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for MessageCoverAssembly()
{
  return self;
}

uint64_t sub_100012A2C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 24 * a1 + 32;
    unint64_t v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100012B2C(uint64_t a1, uint64_t a2)
{
  UnfairLock.lock()();
  uint64_t v5 = *(void *)(v2 + 64);
  *(void *)(v2 + 64) = a1;
  *(void *)(v2 + 72) = a2;
  sub_10005BEBC(a1);
  sub_1001361AC(v5);
  UnfairLock.unlock()();

  return sub_1001361AC(a1);
}

uint64_t sub_100012BA8()
{
  uint64_t result = type metadata accessor for Location();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_100012CD8(uint64_t a1)
{
  uint64_t v9 = Set.init(minimumCapacity:)();
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    uint64_t v4 = (uint64_t *)(a1 + 40);
    do
    {
      uint64_t v5 = *(v4 - 1);
      uint64_t v6 = *v4;
      swift_bridgeObjectRetain();
      sub_1007EC5C0(v8, v5, v6);
      swift_bridgeObjectRelease();
      v4 += 2;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
    return v9;
  }
  else
  {
    sub_100182F1C();
  }
  return v1;
}

uint64_t sub_100012D84()
{
  uint64_t result = type metadata accessor for Location();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for LocationOfInterest();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_100012E58()
{
  sub_10017DF08(&qword_100E980E8);
  uint64_t v0 = swift_allocObject();
  Logger.init(subsystem:category:)();
  return v0;
}

unint64_t sub_100012EC8()
{
  unint64_t result = qword_100EA6068;
  if (!qword_100EA6068)
  {
    sub_10018C6DC(&qword_100EA6050);
    swift_getOpaqueTypeConformance2();
    sub_1001246C8(&qword_100E6DE30, &qword_100E6DE38);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA6068);
  }
  return result;
}

uint64_t sub_100012F98()
{
  uint64_t result = type metadata accessor for PinnedScrollableViews();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_100013054@<X0>(uint64_t *a1@<X8>)
{
  a1[3] = type metadata accessor for SystemClock();
  a1[4] = (uint64_t)&protocol witness table for SystemClock;
  sub_100170694(a1);
  return SystemClock.init()();
}

uint64_t sub_100013098()
{
  uint64_t result = type metadata accessor for ObservationRegistrar();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_100013140()
{
  uint64_t result = type metadata accessor for ObservationRegistrar();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1000131DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)a2;
  char v7 = *(unsigned char *)(a2 + 8);
  sub_100195B7C(*(void *)a2, v7);
  uint64_t v8 = *(void *)a1;
  char v9 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v6;
  *(unsigned char *)(a1 + 8) = v7;
  sub_10018F6D8(v8, v9);
  uint64_t v10 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v10 + 24))((*(unsigned __int8 *)(v10 + 80) + 9 + a1) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80), (*(unsigned __int8 *)(v10 + 80) + 9 + a2) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
  return a1;
}

uint64_t type metadata accessor for WeatherConditionBackgroundAssembly()
{
  return self;
}

uint64_t sub_1000132A8()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for NotificationSettingsViewModelFactory()
{
  return self;
}

uint64_t type metadata accessor for ListMenuAssembly()
{
  return self;
}

void sub_100013434()
{
  sub_1002311D4();
  if (v0 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    uint64_t v3 = &v2;
    swift_getTupleTypeLayout2();
    uint64_t v4 = &v1;
    swift_initEnumMetadataMultiPayload();
  }
}

uint64_t sub_1000134F8@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E807C8);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v7)
  {
    uint64_t v4 = type metadata accessor for PerformanceTestReducer();
    uint64_t v5 = swift_allocObject();
    uint64_t result = sub_1001262E4(&v6, v5 + 16);
    a2[3] = v4;
    a2[4] = (uint64_t)&off_100E2BC10;
    *a2 = v5;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10001359C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for BackgroundAnimationData();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10017DF08(&qword_100E64A60);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for WeatherConditionBackgroundModel();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  Swift::String v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10006DF38(a1, (uint64_t)v10, &qword_100E64A60);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v10, 1, v11) == 1)
  {
    sub_100178110((uint64_t)v10, &qword_100E64A60);
    uint64_t v15 = type metadata accessor for BackgroundAnimationData.Model();
    uint64_t v16 = a2;
    uint64_t v17 = 1;
    return _s7Weather24LocationCompositionStateOwst_0(v16, v17, 1, v15);
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v14, v10, v11);
  WeatherConditionBackgroundModel.animationData.getter();
  int v18 = (*(uint64_t (**)(char *, uint64_t))(v5 + 88))(v7, v4);
  if (v18 == enum case for BackgroundAnimationData.none(_:))
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
  else
  {
    int v19 = v18;
    int v20 = enum case for BackgroundAnimationData.loaded(_:);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    if (v19 == v20)
    {
      (*(void (**)(char *, uint64_t))(v5 + 96))(v7, v4);
      uint64_t v21 = type metadata accessor for BackgroundAnimationData.Model();
      (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v21 - 8) + 32))(a2, v7, v21);
      uint64_t v16 = a2;
      uint64_t v17 = 0;
      uint64_t v15 = v21;
      return _s7Weather24LocationCompositionStateOwst_0(v16, v17, 1, v15);
    }
  }
  uint64_t v23 = type metadata accessor for BackgroundAnimationData.Model();
  _s7Weather24LocationCompositionStateOwst_0(a2, 1, 1, v23);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1000138C0()
{
  uint64_t result = type metadata accessor for WeatherStatisticsModel();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for StubTimeMonitor()
{
  return self;
}

uint64_t sub_100013978(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = type metadata accessor for WeatherDescription();
  uint64_t result = _s7Weather24LocationCompositionStateOwet_0(v4, 1, v5);
  if (!result)
  {
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
    return v7(v4, v5);
  }
  return result;
}

uint64_t type metadata accessor for ShortcutItemUpdater()
{
  return self;
}

uint64_t sub_100013A38()
{
  type metadata accessor for SettingReader();
  uint64_t result = static SettingReader.shared.getter();
  qword_100EAF670 = result;
  return result;
}

uint64_t sub_100013A6C()
{
  uint64_t result = type metadata accessor for ObservationRegistrar();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_100013B08()
{
  uint64_t result = type metadata accessor for SunriseSunsetEventCalculator();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_100013BA0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Location.Identifier();

  return _s7Weather24LocationCompositionStateOwst_0(a1, a2, 2, v4);
}

void sub_100013BEC(uint64_t a1, unint64_t a2, char a3)
{
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  if (a3)
  {
    sub_1007EF37C();
  }
  else
  {
    if (v7 > v6)
    {
      sub_1007F1164();
      goto LABEL_14;
    }
    sub_100010BA4();
  }
  uint64_t v8 = *v3;
  Hasher.init(_seed:)();
  Namespace.ID.hash(into:)();
  Swift::Int v9 = Hasher._finalize()();
  uint64_t v10 = -1 << *(unsigned char *)(v8 + 32);
  a2 = v9 & ~v10;
  if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    if (static Namespace.ID.== infix(_:_:)())
    {
LABEL_13:
      ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
      __break(1u);
    }
    else
    {
      uint64_t v11 = ~v10;
      while (1)
      {
        a2 = (a2 + 1) & v11;
        if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        if (static Namespace.ID.== infix(_:_:)()) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v12 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v12 + 48) + 8 * a2) = a1;
  uint64_t v13 = *(void *)(v12 + 16);
  BOOL v14 = __OFADD__(v13, 1);
  uint64_t v15 = v13 + 1;
  if (v14) {
    __break(1u);
  }
  else {
    *(void *)(v12 + 16) = v15;
  }
}

uint64_t sub_100013D48()
{
  uint64_t result = type metadata accessor for Page();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for AppStoreReviewManager()
{
  return self;
}

void sub_100013E14()
{
  if (!qword_100E85858)
  {
    type metadata accessor for Settings.VFX.AnimatedBackgrounds.AnimationKind();
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100E85858);
    }
  }
}

uint64_t sub_100013E6C()
{
  uint64_t result = type metadata accessor for Published();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_100013F2C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E647D8);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v8)
  {
    uint64_t v4 = type metadata accessor for AppContinuationBridge();
    uint64_t v5 = swift_allocObject();
    uint64_t v6 = v5 + OBJC_IVAR____TtC7Weather21AppContinuationBridge_pendingOpenL2Descriptor;
    uint64_t v7 = type metadata accessor for OpenL2Descriptor(0);
    uint64_t result = _s7Weather24LocationCompositionStateOwst_0(v6, 1, 1, v7);
    *(void *)(v5 + 16) = v8;
    *(void *)(v5 + 24) = v9;
    a2[3] = v4;
    a2[4] = (uint64_t)&off_100E12BD8;
    *a2 = v5;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100013FFC()
{
  uint64_t result = type metadata accessor for WeatherMapOverlayKind();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_1000140C0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 8 * a1 + 32;
    unint64_t v6 = a3 + 8 * v4;
    if (v5 >= v6 || v5 + 8 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1000141B8()
{
  uint64_t result = type metadata accessor for Date();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_10001424C(uint64_t a1, unsigned __int8 *a2, uint64_t a3)
{
  int v4 = *a2;
  type metadata accessor for SettingReader();
  static SettingReader.shared.getter();
  static Settings.Daemon.enablePushLocationViewLoadData.getter();
  SettingReader.read<A>(_:)();
  swift_release();
  uint64_t result = swift_release();
  if (v7 == 1)
  {
    uint64_t v6 = type metadata accessor for LocationViewObserverView();
    return sub_1008CF9A8(a3 + *(int *)(v6 + 24), v4);
  }
  return result;
}

uint64_t sub_1000142DC()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_100014348()
{
  uint64_t result = type metadata accessor for AppConfiguration();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for EnvironmentAction();
    if (v2 <= 0x3F)
    {
      uint64_t result = type metadata accessor for LocationsAction();
      if (v3 <= 0x3F)
      {
        uint64_t result = type metadata accessor for NotificationsAction();
        if (v4 <= 0x3F)
        {
          uint64_t result = type metadata accessor for NotificationsOptInAction();
          if (v5 <= 0x3F)
          {
            uint64_t result = type metadata accessor for ViewAction();
            if (v6 <= 0x3F)
            {
              uint64_t result = type metadata accessor for ModalViewAction();
              if (v7 <= 0x3F)
              {
                uint64_t result = type metadata accessor for LocationViewAction();
                if (v8 <= 0x3F)
                {
                  uint64_t result = type metadata accessor for WeatherDataAction();
                  if (v9 <= 0x3F)
                  {
                    uint64_t result = type metadata accessor for DebugAction();
                    if (v10 <= 0x3F)
                    {
                      uint64_t result = type metadata accessor for ConditionDetailViewAction();
                      if (v11 <= 0x3F)
                      {
                        uint64_t result = type metadata accessor for MoonDetailViewAction();
                        if (v12 <= 0x3F)
                        {
                          uint64_t result = type metadata accessor for AveragesDetailViewAction();
                          if (v13 <= 0x3F)
                          {
                            uint64_t result = type metadata accessor for PerformanceTestAction();
                            if (v14 <= 0x3F)
                            {
                              swift_initEnumMetadataMultiPayload();
                              return 0;
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t type metadata accessor for NetworkReducer()
{
  return self;
}

uint64_t sub_100014720(char a1)
{
  type metadata accessor for MainAction();
  sub_100179DC0();
  __chkstk_darwin(v3);
  unint64_t v5 = &v8[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  unint64_t v6 = *(uint64_t (**)(uint64_t))(v1 + 16);
  *unint64_t v5 = a1;
  swift_storeEnumTagMultiPayload();
  sub_10017CC38();
  sub_1001AAF58((uint64_t)v5, (uint64_t)v8, v6);
  sub_1001AB060((uint64_t)v8, (uint64_t *)&unk_100EA01F0);
  sub_1001ABE70((uint64_t)v5);
  return swift_release();
}

void sub_1000147DC()
{
  if (!qword_100E77B98)
  {
    type metadata accessor for UnitConfiguration.Temperature();
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100E77B98);
    }
  }
}

uint64_t type metadata accessor for InteractiveMapAssembly()
{
  return self;
}

uint64_t sub_100014858(uint64_t a1)
{
  uint64_t result = type metadata accessor for AppConfiguration();
  if (v3 <= 0x3F)
  {
    uint64_t v4 = *(void *)(result - 8);
    swift_initEnumMetadataSingleCase();
    uint64_t result = 0;
    *(_DWORD *)(*(void *)(a1 - 8) + 84) = *(_DWORD *)(v4 + 84);
  }
  return result;
}

uint64_t sub_1000148FC()
{
  uint64_t result = type metadata accessor for LocationModel();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for DetailChartAssembly()
{
  return self;
}

unsigned char *sub_100014998(unsigned char *result)
{
  if (*result == 1)
  {
    type metadata accessor for LocationViewPage(0);
    swift_retain();
    sub_100230A60();
    swift_release();
    sub_10021DB34();
    return (unsigned char *)swift_release();
  }
  return result;
}

void *sub_100014A1C(void *a1)
{
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E647D8);
  uint64_t result = (void *)dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v2)
  {
    type metadata accessor for NetworkConnectivityMonitor();
    swift_allocObject();
    return sub_10002FE08(v2, v3);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t type metadata accessor for NotificationsReducer()
{
  return self;
}

void sub_100014AD4()
{
  type metadata accessor for CurrentWeather();
  if (v0 <= 0x3F)
  {
    type metadata accessor for UVIndexComponentPreprocessedDataModel();
    if (v1 <= 0x3F)
    {
      sub_10001CB2C();
      if (v2 <= 0x3F)
      {
        sub_100020CBC();
        if (v3 <= 0x3F) {
          swift_initStructMetadata();
        }
      }
    }
  }
}

uint64_t sub_100014C14()
{
  uint64_t result = type metadata accessor for Date();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_100014CD4()
{
  uint64_t result = type metadata accessor for News();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for WeatherIntent()
{
  return self;
}

uint64_t sub_100014D8C()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for ReportWeatherViewStateReducer()
{
  return self;
}

uint64_t sub_100014E60()
{
  uint64_t result = type metadata accessor for URL();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for ConditionDetailViewState();
    if (v2 <= 0x3F)
    {
      uint64_t result = type metadata accessor for AirQualityDetailViewState();
      if (v3 <= 0x3F)
      {
        uint64_t result = type metadata accessor for NextHourPrecipitationDetailViewState();
        if (v4 <= 0x3F)
        {
          uint64_t result = type metadata accessor for SunriseSunsetDetailViewState();
          if (v5 <= 0x3F)
          {
            uint64_t result = type metadata accessor for MoonDetailViewState();
            if (v6 <= 0x3F)
            {
              uint64_t result = type metadata accessor for NewsArticle();
              if (v7 <= 0x3F)
              {
                uint64_t result = type metadata accessor for AveragesDetailViewState();
                if (v8 <= 0x3F)
                {
                  uint64_t result = type metadata accessor for HomeAndWorkRefinementViewState();
                  if (v9 <= 0x3F)
                  {
                    swift_initEnumMetadataMultiPayload();
                    return 0;
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_1000150C8()
{
  uint64_t result = type metadata accessor for Location();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for LocationOfInterest();
    if (v2 <= 0x3F)
    {
      uint64_t result = type metadata accessor for SearchLocation();
      if (v3 <= 0x3F)
      {
        swift_initEnumMetadataMultiPayload();
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_1000151D0()
{
  uint64_t result = type metadata accessor for WeatherDescription();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void *sub_100015270()
{
  uint64_t v0 = type metadata accessor for URL();
  sub_100179C0C();
  uint64_t v2 = v1;
  __chkstk_darwin(v3);
  sub_10016278C();
  uint64_t v44 = v4 - v5;
  __chkstk_darwin(v6);
  unint64_t v8 = (char *)v37 - v7;
  uint64_t v9 = sub_10017DF08(&qword_100E749B0);
  uint64_t v10 = sub_100109308(v9);
  __chkstk_darwin(v10);
  sub_1001626E0();
  uint64_t v13 = v12 - v11;
  unint64_t v14 = sub_1000193E4();
  uint64_t v15 = v14[2];
  v37[1] = v14;
  if (v15)
  {
    uint64_t v17 = *(void (**)(uint64_t, char *, uint64_t))(v2 + 16);
    uint64_t v16 = v2 + 16;
    v43 = v17;
    int v18 = (char *)v14 + ((*(unsigned __int8 *)(v16 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 64));
    uint64_t v19 = *(void *)(v16 + 56);
    v40 = (void (**)(char *, uint64_t, uint64_t))(v16 + 16);
    uint64_t v41 = v19;
    int v20 = (void (**)(void))(v16 - 8);
    swift_bridgeObjectRetain();
    v45 = _swiftEmptyArrayStorage;
    uint64_t v42 = v16;
    v38 = (void (**)(void))(v16 - 8);
    v39 = v8;
    while (1)
    {
      v43(v13, v18, v0);
      sub_1001093B0();
      _s7Weather24LocationCompositionStateOwst_0(v21, v22, v23, v0);
      if (_s7Weather24LocationCompositionStateOwet_0(v13, 1, v0) == 1) {
        break;
      }
      uint64_t v24 = v13;
      (*v40)(v8, v13, v0);
      BOOL v25 = v8;
      URL.deletingPathExtension()();
      uint64_t v26 = URL.lastPathComponent.getter();
      unint64_t v28 = v27;
      v29 = *v20;
      sub_1001A0DB8();
      v29();
      uint64_t v30 = HIBYTE(v28) & 0xF;
      if ((v28 & 0x2000000000000000) == 0) {
        uint64_t v30 = v26 & 0xFFFFFFFFFFFFLL;
      }
      if (v30)
      {
        sub_1001A0DB8();
        v29();
        v31 = v45;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_10012B78C();
          v31 = v34;
        }
        uint64_t v13 = v24;
        unint64_t v32 = v31[2];
        if (v32 >= v31[3] >> 1)
        {
          sub_10012B78C();
          v31 = v35;
        }
        v31[2] = v32 + 1;
        v45 = v31;
        v33 = &v31[2 * v32];
        v33[4] = v26;
        v33[5] = v28;
        int v20 = v38;
        unint64_t v8 = v39;
      }
      else
      {
        swift_bridgeObjectRelease();
        sub_1001A0DB8();
        v29();
        unint64_t v8 = v25;
        uint64_t v13 = v24;
      }
      v18 += v41;
      if (!--v15) {
        goto LABEL_16;
      }
    }
  }
  else
  {
    swift_bridgeObjectRetain();
    v45 = _swiftEmptyArrayStorage;
LABEL_16:
    _s7Weather24LocationCompositionStateOwst_0(v13, 1, 1, v0);
  }
  swift_bridgeObjectRelease_n();
  return v45;
}

void sub_10001554C()
{
  type metadata accessor for LocationModel();
  if (v0 <= 0x3F)
  {
    type metadata accessor for ContentStatusBannerPresentationMetrics(319);
    if (v1 <= 0x3F)
    {
      sub_1002308A0();
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

uint64_t sub_100015670()
{
  uint64_t result = type metadata accessor for ObservationRegistrar();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_10001570C()
{
  uint64_t result = type metadata accessor for WindComponentCompassViewModel();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for EmptySidebarWidthStorage()
{
  return self;
}

uint64_t destroy for LocationCompositionState(uint64_t a1)
{
  swift_getEnumCaseMultiPayload();
  if (*(void *)(a1 + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v2 = a1 + *(int *)(sub_10017DF08(&qword_100E85F90) + 48);
  uint64_t v3 = type metadata accessor for LocationOfInterest();
  uint64_t result = _s7Weather24LocationCompositionStateOwet_0(v2, 1, v3);
  if (!result)
  {
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
    return v5(v2, v3);
  }
  return result;
}

uint64_t sub_1000158B4(uint64_t result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  if (v2)
  {
    uint64_t v4 = result;
    swift_bridgeObjectRetain();
    uint64_t v5 = a2 + 40;
    do
    {
      uint64_t v6 = *(void (**)(uint64_t))(v5 - 8);
      swift_retain();
      v6(v4);
      swift_release();
      v5 += 16;
      --v2;
    }
    while (v2);
    return swift_bridgeObjectRelease();
  }
  return result;
}

id sub_100015950()
{
  ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v0[OBJC_IVAR____TtC7Weather13SceneDelegate____lazy_storage___sessionObserver] = 0;
  *(void *)&v0[OBJC_IVAR____TtC7Weather13SceneDelegate____lazy_storage___shortcutItemHandlerManager] = 0;
  uint64_t v2 = &v0[OBJC_IVAR____TtC7Weather13SceneDelegate____lazy_storage___continueUserActivityHandlerManager];
  *(_OWORD *)uint64_t v2 = 0u;
  *((_OWORD *)v2 + 1) = 0u;
  *((void *)v2 + 4) = 0;
  uint64_t v3 = &v0[OBJC_IVAR____TtC7Weather13SceneDelegate____lazy_storage___stateManager];
  *(_OWORD *)uint64_t v3 = 0u;
  *((_OWORD *)v3 + 1) = 0u;
  *((void *)v3 + 4) = 0;
  *(void *)&v0[OBJC_IVAR____TtC7Weather13SceneDelegate____lazy_storage___windowFrameMonitor] = 0;
  v5.receiver = v0;
  v5.super_class = ObjectType;
  return [super init];
}

void sub_1000159D8()
{
  if (!qword_100E638F0)
  {
    type metadata accessor for Date();
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100E638F0);
    }
  }
}

uint64_t sub_100015A30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = type metadata accessor for Access();
  sub_100179C0C();
  uint64_t v8 = v7;
  __chkstk_darwin(v9);
  sub_10011C760();
  swift_allocObject();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v4, a4, v6);
  uint64_t v10 = SettingGroup.init(key:defaultValue:access:)();
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(a4, v6);
  return v10;
}

uint64_t sub_100015B20(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Location.Identifier();

  return _s7Weather24LocationCompositionStateOwet_0(a1, 2, v2);
}

uint64_t sub_100015B64()
{
  uint64_t result = type metadata accessor for ObservationRegistrar();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for PerformanceTestAssembly()
{
  return self;
}

uint64_t sub_100015C68()
{
  uint64_t result = type metadata accessor for Logger();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

void *sub_100015CF8()
{
  uint64_t v1 = type metadata accessor for WireframeInterestManager();
  swift_allocObject();
  uint64_t v2 = sub_10000AFB0(0xD000000000000013, 0x8000000100CB9F60);
  v0[5] = v1;
  v0[6] = &off_100E37DF0;
  v0[2] = v2;
  type metadata accessor for WireframeContentInterestManager();
  uint64_t v3 = swift_allocObject();
  uint64_t v4 = swift_retain();
  v0[7] = sub_1002193A4(v4, v3);
  return v0;
}

uint64_t sub_100015D9C()
{
  uint64_t result = type metadata accessor for PressureTrend();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_100015E44(uint64_t a1)
{
  *(void *)(a1 + 8) = swift_getWitnessTable();
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t sub_100015EA4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v4 < 0)
  {
LABEL_9:
    sub_100187288();
    sub_1001D1DF8();
    goto LABEL_11;
  }
  unint64_t v5 = a4 + 40 * a1 + 32;
  unint64_t v6 = a3 + 40 * v4;
  if (v5 >= v6 || v5 + 40 * v4 <= a3)
  {
    swift_arrayInitWithCopy();
    swift_bridgeObjectRelease();
    return v6;
  }
  sub_100187288();
  sub_100181768();
LABEL_11:
  uint64_t result = sub_100163950();
  __break(1u);
  return result;
}

uint64_t sub_100015F70()
{
  unint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Location.Identifier();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  unint64_t v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v0;
  sub_10017DF08(&qword_100E970E0);
  uint64_t v7 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = swift_release();
LABEL_34:
    *unint64_t v1 = v8;
    return result;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v10 = *(void *)(v6 + 56);
  v34 = v0;
  uint64_t v35 = v6 + 56;
  if (v9 < 64) {
    uint64_t v11 = ~(-1 << v9);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & v10;
  int64_t v36 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v37 = v3 + 16;
  uint64_t v13 = v7 + 56;
  uint64_t v38 = v3;
  unint64_t v14 = (uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32);
  uint64_t result = swift_retain();
  int64_t v16 = 0;
  if (!v12) {
    goto LABEL_7;
  }
LABEL_6:
  unint64_t v17 = __clz(__rbit64(v12));
  v12 &= v12 - 1;
  for (unint64_t i = v17 | (v16 << 6); ; unint64_t i = __clz(__rbit64(v20)) + (v16 << 6))
  {
    uint64_t v22 = v6;
    uint64_t v23 = *(void *)(v6 + 48);
    uint64_t v24 = *(void *)(v38 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v38 + 16))(v5, v23 + v24 * i, v2);
    sub_100109818(&qword_100E63A28, (void (*)(uint64_t))&type metadata accessor for Location.Identifier);
    uint64_t result = dispatch thunk of Hashable._rawHashValue(seed:)();
    uint64_t v25 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v26 = result & ~v25;
    unint64_t v27 = v26 >> 6;
    if (((-1 << v26) & ~*(void *)(v13 + 8 * (v26 >> 6))) == 0)
    {
      char v29 = 0;
      unint64_t v30 = (unint64_t)(63 - v25) >> 6;
      while (++v27 != v30 || (v29 & 1) == 0)
      {
        BOOL v31 = v27 == v30;
        if (v27 == v30) {
          unint64_t v27 = 0;
        }
        v29 |= v31;
        uint64_t v32 = *(void *)(v13 + 8 * v27);
        if (v32 != -1)
        {
          unint64_t v28 = __clz(__rbit64(~v32)) + (v27 << 6);
          goto LABEL_30;
        }
      }
      __break(1u);
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    unint64_t v28 = __clz(__rbit64((-1 << v26) & ~*(void *)(v13 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
    *(void *)(v13 + ((v28 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v28;
    uint64_t result = (*v14)(*(void *)(v8 + 48) + v28 * v24, v5, v2);
    ++*(void *)(v8 + 16);
    uint64_t v6 = v22;
    if (v12) {
      goto LABEL_6;
    }
LABEL_7:
    int64_t v19 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      goto LABEL_36;
    }
    if (v19 >= v36) {
      goto LABEL_32;
    }
    unint64_t v20 = *(void *)(v35 + 8 * v19);
    ++v16;
    if (!v20)
    {
      int64_t v16 = v19 + 1;
      if (v19 + 1 >= v36) {
        goto LABEL_32;
      }
      unint64_t v20 = *(void *)(v35 + 8 * v16);
      if (!v20)
      {
        int64_t v16 = v19 + 2;
        if (v19 + 2 >= v36) {
          goto LABEL_32;
        }
        unint64_t v20 = *(void *)(v35 + 8 * v16);
        if (!v20) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v12 = (v20 - 1) & v20;
  }
  int64_t v21 = v19 + 3;
  if (v21 >= v36)
  {
LABEL_32:
    uint64_t result = swift_release_n();
    unint64_t v1 = v34;
    goto LABEL_34;
  }
  unint64_t v20 = *(void *)(v35 + 8 * v21);
  if (v20)
  {
    int64_t v16 = v21;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v16 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v16 >= v36) {
      goto LABEL_32;
    }
    unint64_t v20 = *(void *)(v35 + 8 * v16);
    ++v21;
    if (v20) {
      goto LABEL_20;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_10001631C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t type metadata accessor for SharedSearchAssembly()
{
  return self;
}

uint64_t sub_10001638C(void (*a1)(void), uint64_t (*a2)(void))
{
  return a2();
}

void sub_1000163D4(uint64_t a1, const char *a2)
{
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    sub_100065EB8();
    swift_release();
  }
  else
  {
    if (qword_100E627D8 != -1) {
      swift_once();
    }
    uint64_t v3 = type metadata accessor for Logger();
    sub_1002102B0(v3, (uint64_t)qword_100F51EA0);
    uint64_t v4 = Logger.logObject.getter();
    os_log_type_t v5 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v4, v5))
    {
      uint64_t v6 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v6 = 0;
      _os_log_impl((void *)&_mh_execute_header, v4, v5, a2, v6, 2u);
      swift_slowDealloc();
    }
  }
}

uint64_t type metadata accessor for WireframeInterestManager()
{
  return self;
}

uint64_t sub_100016510()
{
  uint64_t result = type metadata accessor for Location();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for WeatherDataReducer()
{
  return self;
}

uint64_t sub_1000165D4()
{
  uint64_t result = type metadata accessor for PressureTrend();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_10001667C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_10017DF08(&qword_100E731C8);
  sub_10017C83C();
  uint64_t v4 = v3;
  __chkstk_darwin(v5);
  sub_1001626E0();
  uint64_t v8 = v7 - v6;
  Dictionary.init(dictionaryLiteral:)();
  ShortDescription.init(name:_:)();
  a1[3] = v2;
  a1[4] = sub_100230F68();
  uint64_t v9 = sub_100170694(a1);
  return (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v4 + 32))(v9, v8, v2);
}

uint64_t type metadata accessor for RemotelyConfiguredSlowLocationLoadingMonitor()
{
  return self;
}

uint64_t sub_1000168AC()
{
  uint64_t result = type metadata accessor for DispatchQoS();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for MainModule()
{
  return self;
}

void sub_100016968(uint64_t a1)
{
}

uint64_t sub_100016994()
{
  uint64_t result = type metadata accessor for WeatherMapOverlayKind();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_100016A28@<X0>(unsigned char *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for Settings.VFX.AnimatedBackgrounds.AnimationKind();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100031A78((uint64_t)v5);
  int v6 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v5, v2);
  if (v6 == enum case for Settings.VFX.AnimatedBackgrounds.AnimationKind.vfx(_:))
  {
    *a1 = 1;
    uint64_t v7 = (unsigned int *)&enum case for BackgroundAnimationKind.vfx(_:);
LABEL_5:
    uint64_t v8 = *v7;
    uint64_t v9 = type metadata accessor for BackgroundAnimationKind();
    return (*(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104))(a1, v8, v9);
  }
  if (v6 == enum case for Settings.VFX.AnimatedBackgrounds.AnimationKind.mica(_:))
  {
    uint64_t v7 = (unsigned int *)&enum case for BackgroundAnimationKind.mica(_:);
    goto LABEL_5;
  }
  *a1 = 1;
  uint64_t v11 = enum case for BackgroundAnimationKind.vfx(_:);
  uint64_t v12 = type metadata accessor for BackgroundAnimationKind();
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 104))(a1, v11, v12);
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

void sub_100016BEC()
{
  if (!qword_100E94528)
  {
    type metadata accessor for HistoricalComparisons();
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100E94528);
    }
  }
}

uint64_t type metadata accessor for MainTracker()
{
  return self;
}

uint64_t sub_100016C68@<X0>(void (*a1)(void *)@<X0>, void (*a2)(void *__return_ptr, uint64_t)@<X2>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_10017DF08(&qword_100E64A70);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  a2(v17, v7);
  a1(v17);
  swift_release();
  uint64_t v10 = type metadata accessor for WeatherConditionBackgroundModelFactoryInput();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v10) != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(void *)(v10 - 8) + 32))(a3, v9, v10);
  }
  sub_1001781AC((uint64_t)v9, &qword_100E64A70);
  v17[0] = 0;
  v17[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(82);
  v12._countAndFlagsBits = 0xD00000000000004BLL;
  v12._object = (void *)0x8000000100C96D70;
  String.append(_:)(v12);
  v13._countAndFlagsBits = 0xD00000000000002BLL;
  v13._object = (void *)0x8000000100C97080;
  String.append(_:)(v13);
  v14._countAndFlagsBits = 8236;
  v14._object = (void *)0xE200000000000000;
  String.append(_:)(v14);
  v15._object = (void *)0x8000000100C970B0;
  v15._countAndFlagsBits = 0xD00000000000001FLL;
  String.append(_:)(v15);
  v16._countAndFlagsBits = 46;
  v16._object = (void *)0xE100000000000000;
  String.append(_:)(v16);
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t type metadata accessor for UnitManagerMiddleware()
{
  return self;
}

uint64_t sub_100016E7C(uint64_t a1)
{
  uint64_t v2 = sub_10017DF08((uint64_t *)&unk_100EA01F0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100016EDC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for ActivityModifier();
  uint64_t v7 = sub_100164920(v6);
  uint64_t v9 = v8;
  uint64_t v11 = *(void *)(v10 + 64);
  __chkstk_darwin(v7);
  sub_100221C18(v3, (uint64_t)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v12 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v13 = swift_allocObject();
  sub_100221C7C((uint64_t)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v13 + v12);
  uint64_t v14 = sub_10017DF08(&qword_100EB7260);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(a2, a1, v14);
  uint64_t result = sub_10017DF08(&qword_100EB7268);
  Swift::String v16 = (void (**)())(a2 + *(int *)(result + 36));
  *Swift::String v16 = sub_100221D8C;
  v16[1] = (void (*)())v13;
  void v16[2] = 0;
  v16[3] = 0;
  return result;
}

uint64_t sub_10001700C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for LocationComponentHeaderMetrics(0);
  __chkstk_darwin(v4 - 8);
  sub_1005D284C();
  uint64_t v5 = sub_10000E3E4();
  uint64_t v7 = v6;
  sub_1001F75CC();
  uint64_t v18 = v5;
  uint64_t v19 = v7;
  sub_10014A85C();
  uint64_t v8 = Text.init<A>(_:)();
  uint64_t v10 = v9;
  uint64_t v12 = v11;
  uint64_t v14 = v13 & 1;
  uint64_t v15 = sub_10017DF08(&qword_100E83C70);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16))(a2, a1, v15);
  uint64_t result = sub_10017DF08(&qword_100E83C78);
  uint64_t v17 = (uint64_t *)(a2 + *(int *)(result + 36));
  *uint64_t v17 = v8;
  v17[1] = v10;
  void v17[2] = v14;
  v17[3] = v12;
  return result;
}

uint64_t sub_10001717C(uint64_t a1)
{
  uint64_t v2 = sub_10017DF08(&qword_100E9C248);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);

  return swift_bridgeObjectRelease();
}

uint64_t sub_1000171F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10017DF08(&qword_100E6DC08);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_100017260@<X0>(char a1@<W0>, char a2@<W1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, uint64_t a10, char a11, char a12, uint64_t a13)
{
  *(unsigned char *)a9 = a1;
  *(unsigned char *)(a9 + 1) = a2;
  *(unsigned char *)(a9 + 2) = a3;
  *(void *)(a9 + 8) = a4;
  *(void *)(a9 + 16) = a5;
  uint64_t v17 = (int *)type metadata accessor for LocationFooterViewModel();
  sub_10024D364(a6, a9 + v17[8], &qword_100E749B0);
  sub_100218CE8(a7, a9 + v17[9], (void (*)(void))type metadata accessor for LearnMoreAttributorViewModel);
  *(unsigned char *)(a9 + v17[10]) = a8;
  sub_10024D364(a10, a9 + v17[11], &qword_100E63508);
  *(unsigned char *)(a9 + v17[12]) = a11;
  *(unsigned char *)(a9 + v17[13]) = a12;
  return sub_10024D364(a13, a9 + v17[14], &qword_100E6DC10);
}

unint64_t sub_10001735C()
{
  unint64_t result = qword_100E7EA88;
  if (!qword_100E7EA88)
  {
    sub_10018C6DC(&qword_100E79AA8);
    sub_100145810(&qword_100E7EA90, (void (*)(uint64_t))type metadata accessor for DailyComponentForecastRowViewLargeText);
    sub_100145810((unint64_t *)&qword_100E66BF8, (void (*)(uint64_t))type metadata accessor for AutomationInfoViewModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E7EA88);
  }
  return result;
}

uint64_t sub_100017438()
{
  sub_10017DF08(&qword_100E98048);
  uint64_t v0 = swift_allocObject();
  *(void *)(v0 + 16) = _swiftEmptyArrayStorage;
  sub_100129D0C((uint64_t)sub_1007FCE98, 0);
  sub_100129D0C((uint64_t)sub_1007FCEC0, 0);
  sub_100129D0C((uint64_t)sub_1007FCEE8, 0);
  return v0;
}

uint64_t sub_1000174D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, long long *a5, long long *a6, char a7)
{
  *(void *)(v7 + 136) = 0;
  *(void *)(v7 + 144) = 0;
  *(void *)(v7 + 16) = a1;
  *(void *)(v7 + 24) = a2;
  *(void *)(v7 + 32) = a3;
  *(void *)(v7 + 40) = a4;
  sub_1001262E4(a5, v7 + 48);
  sub_1001262E4(a6, v7 + 96);
  *(unsigned char *)(v7 + 88) = a7;
  return v7;
}

void *sub_10001752C(uint64_t a1, uint64_t a2, long long *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, long long *a8)
{
  sub_1001ABC4C(0, (unint64_t *)&qword_100E62D68);
  v8[18] = OS_os_log.init(subsystem:category:)();
  v8[2] = a1;
  v8[3] = a2;
  sub_1001262E4(a3, (uint64_t)(v8 + 4));
  v8[9] = a4;
  v8[10] = a5;
  v8[11] = a6;
  v8[12] = a7;
  sub_1001262E4(a8, (uint64_t)(v8 + 13));
  return v8;
}

uint64_t sub_10001760C(uint64_t a1, uint64_t a2, long long *a3, uint64_t a4)
{
  uint64_t v10 = type metadata accessor for NetworkActivityManager();
  uint64_t v11 = &off_100E175C0;
  *(void *)&long long v9 = a2;
  sub_1001ABC4C(0, (unint64_t *)&qword_100E62D68);
  *(void *)(a4 + 104) = OS_os_log.init(subsystem:category:)();
  *(void *)(a4 + 16) = a1;
  sub_1001262E4(&v9, a4 + 24);
  sub_1001262E4(a3, a4 + 64);
  return a4;
}

void sub_1000176D8()
{
  type metadata accessor for LocationComponentHeaderViewModel(319);
  if (v0 <= 0x3F)
  {
    sub_100046D60(319, (unint64_t *)&qword_100E63C70, (void (*)(uint64_t))&type metadata accessor for LayoutDirection);
    if (v1 <= 0x3F)
    {
      sub_100046D60(319, (unint64_t *)&qword_100E63C78, (void (*)(uint64_t))&type metadata accessor for ContentSizeCategory);
      if (v2 <= 0x3F)
      {
        sub_100046D60(319, (unint64_t *)&qword_100E6D980, (void (*)(uint64_t))&type metadata accessor for ColorSchemeContrast);
        if (v3 <= 0x3F)
        {
          sub_1002306F0();
          if (v4 <= 0x3F) {
            swift_initStructMetadata();
          }
        }
      }
    }
  }
}

void sub_1000178BC()
{
  sub_10002FD50(319, (unint64_t *)&qword_100E6DC90, (uint64_t (*)(uint64_t))&type metadata accessor for ScenePhase, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
  if (v0 <= 0x3F)
  {
    sub_10002FD50(319, (unint64_t *)&unk_100E8EF88, type metadata accessor for ContentStatusBannerPresentationMetrics, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for State);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_1000179F0()
{
  sub_10002FD50(319, (unint64_t *)&qword_100E64EF8, (uint64_t (*)(uint64_t))type metadata accessor for ContentStatusBanner, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
  if (v0 <= 0x3F)
  {
    sub_10002FD50(319, (unint64_t *)&qword_100E63C80, (uint64_t (*)(uint64_t))type metadata accessor for DisplayMetrics, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
    if (v1 <= 0x3F)
    {
      sub_10002FD50(319, (unint64_t *)&unk_100E8EB20, (uint64_t (*)(uint64_t))type metadata accessor for ContentStatusBanner, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for State);
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

void sub_100017B98()
{
  sub_100011588();
  if (v0 <= 0x3F)
  {
    sub_100017E34(319, &qword_100E94848, &qword_100E66430);
    if (v1 <= 0x3F)
    {
      sub_100017E34(319, (unint64_t *)&unk_100E94850, &qword_100E66420);
      if (v2 <= 0x3F) {
        swift_updateClassMetadata2();
      }
    }
  }
}

void sub_100017CE0()
{
  sub_100017E34(319, &qword_100E94848, &qword_100E66430);
  if (v0 <= 0x3F)
  {
    sub_100017E34(319, (unint64_t *)&unk_100E94850, &qword_100E66420);
    if (v1 <= 0x3F)
    {
      sub_100017E34(319, (unint64_t *)&unk_100E95570, &qword_100E72B30);
      if (v2 <= 0x3F) {
        swift_updateClassMetadata2();
      }
    }
  }
}

void sub_100017E34(uint64_t a1, unint64_t *a2, uint64_t *a3)
{
  if (!*a2)
  {
    sub_10018C6DC(a3);
    unint64_t v4 = type metadata accessor for Optional();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_100017E84()
{
  swift_bridgeObjectRelease();
  sub_100178254(v0 + OBJC_IVAR____TtCOO7Weather10DemoPreset5Demos8Fall2024____lazy_storage___currentLocation, &qword_100E639E8);
  sub_1001844EC(OBJC_IVAR____TtCOO7Weather10DemoPreset5Demos8Fall2024____lazy_storage___egilsstadirLocation);
  sub_1001844EC(OBJC_IVAR____TtCOO7Weather10DemoPreset5Demos8Fall2024____lazy_storage___akureyriLocation);
  sub_100178254(v0 + OBJC_IVAR____TtCOO7Weather10DemoPreset5Demos8Fall2024____lazy_storage___locations, &qword_100E94A40);
  sub_100178254(v0 + OBJC_IVAR____TtCOO7Weather10DemoPreset5Demos8Fall2024____lazy_storage___timeState, &qword_100E94A38);
  sub_1000AEB6C(*(void *)(v0 + OBJC_IVAR____TtCOO7Weather10DemoPreset5Demos8Fall2024____lazy_storage___weatherDataState), *(void *)(v0 + OBJC_IVAR____TtCOO7Weather10DemoPreset5Demos8Fall2024____lazy_storage___weatherDataState + 8));
  sub_1000AEB7C(*(void *)(v0 + OBJC_IVAR____TtCOO7Weather10DemoPreset5Demos8Fall2024____lazy_storage___preset));
  return v0;
}

void sub_100017F38()
{
  sub_100020914(319, (unint64_t *)&qword_100E63C78, (void (*)(uint64_t))&type metadata accessor for ContentSizeCategory);
  if (v0 <= 0x3F)
  {
    sub_1000180BC(319, qword_100EAA5E0, &qword_100E827E0);
    if (v1 <= 0x3F)
    {
      sub_1000180BC(319, (unint64_t *)&qword_100E66100, &qword_100E65ED8);
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

void sub_1000180BC(uint64_t a1, unint64_t *a2, uint64_t *a3)
{
  if (!*a2)
  {
    sub_10018C6DC(a3);
    unint64_t v4 = type metadata accessor for Environment.Content();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_10001810C()
{
  sub_10001832C(319, (unint64_t *)&qword_100E77B98, (void (*)(uint64_t))&type metadata accessor for UnitConfiguration.Temperature);
  if (v0 <= 0x3F)
  {
    sub_10001832C(319, &qword_100EA2360, (void (*)(uint64_t))&type metadata accessor for UnitConfiguration.Distance);
    if (v1 <= 0x3F)
    {
      sub_10001832C(319, &qword_100EA2368, (void (*)(uint64_t))&type metadata accessor for UnitConfiguration.WindSpeed);
      if (v2 <= 0x3F)
      {
        sub_10001832C(319, &qword_100EA2370, (void (*)(uint64_t))&type metadata accessor for UnitConfiguration.Pressure);
        if (v3 <= 0x3F)
        {
          sub_10001832C(319, (unint64_t *)&unk_100EA2378, (void (*)(uint64_t))&type metadata accessor for UnitConfiguration.Precipitation);
          if (v4 <= 0x3F) {
            swift_updateClassMetadata2();
          }
        }
      }
    }
  }
}

void sub_10001832C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = type metadata accessor for Optional();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_100018380()
{
  sub_1000185B4(319, (unint64_t *)&qword_100E75238, (void (*)(uint64_t))type metadata accessor for WeatherData);
  if (v0 <= 0x3F)
  {
    sub_1000185B4(319, (unint64_t *)&qword_100E671E0, (void (*)(uint64_t))type metadata accessor for NewsDataModel);
    if (v1 <= 0x3F)
    {
      sub_1000185B4(319, &qword_100EA9408, (void (*)(uint64_t))type metadata accessor for LocationViewModel);
      if (v2 <= 0x3F)
      {
        sub_1000185B4(319, (unint64_t *)&unk_100EA9410, (void (*)(uint64_t))&type metadata accessor for UUID);
        if (v3 <= 0x3F) {
          swift_updateClassMetadata2();
        }
      }
    }
  }
}

void sub_100018560(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = type metadata accessor for Optional();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_1000185B4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = type metadata accessor for Optional();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_100018608(uint64_t a1)
{
  uint64_t v2 = sub_10017DF08(&qword_100E731E0);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v16 - v6;
  sub_100018824(a1, (uint64_t)&v16 - v6);
  uint64_t v8 = type metadata accessor for NWInterface.InterfaceType();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v7, 1, v8) != 1)
  {
    sub_100018824((uint64_t)v7, (uint64_t)v5);
    sub_10017C83C();
    uint64_t v11 = v10;
    int v13 = (*(uint64_t (**)(char *, uint64_t))(v12 + 88))(v5, v8);
    if (v13 == enum case for NWInterface.InterfaceType.other(_:)) {
      goto LABEL_4;
    }
    if (v13 == enum case for NWInterface.InterfaceType.wifi(_:))
    {
      uint64_t v9 = 1;
      goto LABEL_9;
    }
    if (v13 == enum case for NWInterface.InterfaceType.cellular(_:))
    {
      uint64_t v9 = 0;
      goto LABEL_9;
    }
    if (v13 == enum case for NWInterface.InterfaceType.wiredEthernet(_:)
      || v13 == enum case for NWInterface.InterfaceType.loopback(_:))
    {
LABEL_4:
      uint64_t v9 = 2;
      goto LABEL_9;
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v5, v8);
  }
  uint64_t v9 = 3;
LABEL_9:
  sub_1000187C4(a1);
  sub_1000187C4((uint64_t)v7);
  return v9;
}

uint64_t sub_1000187C4(uint64_t a1)
{
  uint64_t v2 = sub_10017DF08(&qword_100E731E0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100018824(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10017DF08(&qword_100E731E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10001888C(char a1)
{
  uint64_t v3 = type metadata accessor for TrackExposureModifier();
  sub_1001627C0(v3);
  uint64_t v5 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));

  return sub_10003ADD0(a1, v5);
}

uint64_t sub_1000188DC(unsigned __int8 *a1)
{
  return sub_100018904(*a1);
}

uint64_t sub_100018904(uint64_t a1)
{
  return sub_100199EE0(a1, (void (*)(void))sub_1001AEC4C);
}

uint64_t sub_100018924@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_100018954();
  *a1 = result & 1;
  return result;
}

uint64_t sub_100018954()
{
  return sub_10018C9CC((void (*)(void))sub_1001AEC4C);
}

uint64_t assignWithCopy for FullscreenMapPresentationSourceViewModifier(uint64_t a1, void *a2)
{
  uint64_t v2 = a2;
  *(void *)a1 = *a2;
  *(void *)(a1 + 8) = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = v2[2];
  LOBYTE(v2) = *((unsigned char *)v2 + 24);
  sub_100195B7C(v4, (char)v2);
  uint64_t v5 = *(void *)(a1 + 16);
  char v6 = *(unsigned char *)(a1 + 24);
  *(void *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 24) = (_BYTE)v2;
  sub_10018F6D8(v5, v6);
  return a1;
}

void sub_1000189EC(uint64_t a1@<X1>, uint64_t a2@<X8>, CGFloat a3@<D0>, double a4@<D1>)
{
  uint64_t v39 = type metadata accessor for CoordinateSpace();
  uint64_t v8 = *(void *)(v39 - 8);
  __chkstk_darwin(v39);
  uint64_t v10 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for NamedCoordinateSpace();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *(void *)a1;
  LOBYTE(a1) = *(unsigned char *)(a1 + 8);
  sub_100195B7C(v15, a1);
  sub_100149AE8();
  char v17 = v16;
  sub_10018F6D8(v15, a1);
  if (v17)
  {
    static CoordinateSpaceProtocol<>.scrollView.getter();
    GeometryProxy.bounds(of:)();
    double v18 = *(double *)v44;
    double v19 = *(double *)&v44[1];
    double v20 = *(double *)&v44[2];
    double v21 = *(double *)&v44[3];
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    sub_10024D364((uint64_t)v44, (uint64_t)v45, &qword_100E64498);
    if (v46) {
      double v22 = 0.0;
    }
    else {
      double v22 = v20;
    }
    if (v46) {
      double v23 = 0.0;
    }
    else {
      double v23 = v21;
    }
    if (v46) {
      double v24 = 0.0;
    }
    else {
      double v24 = v18;
    }
    if (v46) {
      double v25 = 0.0;
    }
    else {
      double v25 = v19;
    }
    CGFloat MinY = CGRectGetMinY(*(CGRect *)(&v22 - 2));
    CGFloat v27 = -MinY;
    double v28 = MinY + a3;
    if (v27 < a3) {
      double v29 = v28;
    }
    else {
      double v29 = 0.0;
    }
    CGFloat.clamp(min:max:)();
    double v31 = 1.0 - (v30 - (a4 + -16.0)) / (a4 + -16.0 + 5.0 - (a4 + -16.0));
    uint64_t v32 = v39;
    (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, enum case for CoordinateSpace.global(_:), v39);
    GeometryProxy.frameClippedToScrollViews(in:)();
    CGFloat v33 = v40;
    CGFloat v34 = v41;
    CGFloat v35 = v42;
    CGFloat v36 = v43;
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v32);
    v47.origin.x = v33;
    v47.origin.y = v34;
    v47.size.width = v35;
    v47.size.height = v36;
    BOOL v37 = CGRectGetHeight(v47) == 0.0;
    *(double *)a2 = v29;
    *(double *)(a2 + 8) = v31;
    *(unsigned char *)(a2 + 16) = v37;
  }
  else
  {
    *(_OWORD *)a2 = xmmword_100C33200;
    *(unsigned char *)(a2 + 16) = 0;
  }
}

uint64_t sub_100018CD4()
{
  sub_10017DF08(&qword_100E8D8D0);
  sub_100162E4C();
  __chkstk_darwin(v0);
  sub_1001626E0();
  uint64_t v3 = v2 - v1;
  type metadata accessor for LocationViewerPageControl(0);
  Binding.projectedValue.getter();
  type metadata accessor for LocationViewerPageControl.Coordinator(0);
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + OBJC_IVAR____TtCV7Weather25LocationViewerPageControl11Coordinator_pages) = _swiftEmptyArrayStorage;
  sub_1002270B0(v3, v4 + OBJC_IVAR____TtCV7Weather25LocationViewerPageControl11Coordinator_selection);
  return v4;
}

uint64_t sub_100018D9C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Date();
  uint64_t v16 = *(void *)(v4 - 8);
  uint64_t v17 = v4;
  __chkstk_darwin(v4);
  char v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10017DF08(&qword_100E9EED8);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for MoonRiseSetEvent();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001262FC(a1, (uint64_t)v9, &qword_100E9EED8);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v10) == 1)
  {
    sub_100178110((uint64_t)v9, &qword_100E9EED8);
    return 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v13, v9, v10);
    sub_1001B1E64((void *)(a2 + 56), *(void *)(a2 + 80));
    MoonRiseSetEvent.date.getter();
    uint64_t v14 = dispatch thunk of MoonStringBuilderType.nextMoonRiseSetString(_:now:timeZone:)();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v6, v17);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
  return v14;
}

uint64_t sub_100019014(uint64_t *a1, void (*a2)(void))
{
  uint64_t v3 = *a1;
  uint64_t v4 = *(void *)(v2 + *a1);
  if (v4)
  {
    uint64_t v5 = v4;
LABEL_5:
    swift_retain();
    return v5;
  }
  uint64_t v7 = v2;
  sub_10002DF88((uint64_t)v9);
  sub_1001B1E64(v9, v9[3]);
  a2(0);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (result)
  {
    uint64_t v5 = result;
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v9);
    *(void *)(v7 + v3) = v5;
    swift_retain();
    swift_release();
    goto LABEL_5;
  }
  __break(1u);
  return result;
}

uint64_t type metadata accessor for UserNotificationMonitor()
{
  return self;
}

uint64_t sub_1000190F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  *(void *)a4 = swift_getKeyPath();
  *(unsigned char *)(a4 + 8) = 0;
  *(void *)(a4 + 16) = swift_getKeyPath();
  *(unsigned char *)(a4 + 24) = 0;
  uint64_t v8 = (int *)type metadata accessor for LocationFooterView(0);
  uint64_t v9 = (uint64_t *)(a4 + v8[6]);
  *uint64_t v9 = swift_getKeyPath();
  sub_10017DF08(&qword_100E66E50);
  swift_storeEnumTagMultiPayload();
  uint64_t result = sub_10021DD60(a1, a4 + v8[7], (void (*)(void))type metadata accessor for LocationFooterViewModel);
  uint64_t v11 = (void *)(a4 + v8[8]);
  *uint64_t v11 = a2;
  v11[1] = a3;
  return result;
}

unint64_t sub_1000191CC()
{
  unint64_t result = qword_100E839C0;
  if (!qword_100E839C0)
  {
    sub_10018C6DC(&qword_100E83278);
    sub_10022B254();
    sub_10018C6DC(&qword_100E83258);
    sub_10022ADF4();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E839C0);
  }
  return result;
}

uint64_t type metadata accessor for AccessibilitySettingsMonitor()
{
  return self;
}

void *assignWithCopy for ConditionDetailView(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  sub_1000C1E18(a1 + 2, a2 + 2);
  a1[7] = a2[7];
  swift_retain();
  swift_release();
  return a1;
}

unint64_t sub_10001931C()
{
  unint64_t result = qword_100EAE018;
  if (!qword_100EAE018)
  {
    sub_10018C6DC(qword_100EAE020);
    sub_10018C6DC(&qword_100EADFF0);
    sub_10008C654();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAE018);
  }
  return result;
}

void *sub_1000193E4()
{
  type metadata accessor for URL();
  sub_100179C0C();
  __chkstk_darwin(v0);
  sub_1001626E0();
  uint64_t v1 = self;
  sub_100047CB0();
  URL._bridgeToObjectiveC()(v2);
  uint64_t v4 = v3;
  sub_1001A0DB8();
  v5();
  uint64_t v6 = sub_10001F1E8(7496033, 0xE300000000000000, 0, (uint64_t)v4, v1);

  if (!v6) {
    return _swiftEmptyArrayStorage;
  }
  uint64_t v8 = v6;
  swift_bridgeObjectRetain();
  sub_1007C165C(&v8);
  swift_bridgeObjectRelease();
  return (void *)v8;
}

uint64_t sub_1000194F8()
{
  uint64_t result = type metadata accessor for LocationComponentHeaderViewModel(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for Text.Measurements();
    if (v2 <= 0x3F)
    {
      uint64_t result = type metadata accessor for LayoutDirection();
      if (v3 <= 0x3F)
      {
        uint64_t result = type metadata accessor for ContentSizeCategory();
        if (v4 <= 0x3F)
        {
          swift_initStructMetadata();
          return 0;
        }
      }
    }
  }
  return result;
}

unint64_t sub_100019668()
{
  unint64_t result = qword_100E8F068;
  if (!qword_100E8F068)
  {
    sub_10018C6DC(&qword_100E8ED48);
    sub_10018C6DC(&qword_100E8ED68);
    sub_1000E4044();
    swift_getOpaqueTypeConformance2();
    sub_10024D5E4((uint64_t)&qword_100E8F070);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8F068);
  }
  return result;
}

uint64_t sub_10001973C(uint64_t a1, void (*a2)(uint64_t, __n128))
{
  uint64_t v4 = sub_10017DF08(&qword_100E64A18);
  __n128 v5 = __chkstk_darwin(v4 - 8);
  uint64_t v7 = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  a2(a1, v5);
  uint64_t v8 = type metadata accessor for LocationViewModel();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v7, 1, v8) != 1) {
    return sub_1001522B4();
  }
  sub_1001781AC((uint64_t)v7, &qword_100E64A18);
  v15[0] = 0;
  v15[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(87);
  v10._countAndFlagsBits = 0xD000000000000050;
  v10._object = (void *)0x8000000100C96D10;
  String.append(_:)(v10);
  v11._countAndFlagsBits = 0x6E6F697461636F4CLL;
  v11._object = (void *)0xED00007475706E49;
  String.append(_:)(v11);
  v12._countAndFlagsBits = 8236;
  v12._object = (void *)0xE200000000000000;
  String.append(_:)(v12);
  v13._object = (void *)0x8000000100C97060;
  v13._countAndFlagsBits = 0xD000000000000011;
  String.append(_:)(v13);
  v14._countAndFlagsBits = 46;
  v14._object = (void *)0xE100000000000000;
  String.append(_:)(v14);
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1000198FC(void *a1, void *a2)
{
  sub_1001B1E64(a1, a1[3]);
  sub_1001B1E64(a2, a2[3]);
  type metadata accessor for SessionScenePhaseObserver();
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (result)
  {
    sub_100019A3C(&qword_100E807B8, (void (*)(uint64_t))type metadata accessor for SessionScenePhaseObserver);
    dispatch thunk of ScenePhaseManagerType.addObserver(_:)();
    swift_release();
    return _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v4);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void *assignWithCopy for HostsLocationHeaderFrameCoordinatorViewModifier(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_100019A3C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100019A84()
{
  uint64_t result = type metadata accessor for ObservationRegistrar();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for AppDelegate()
{
  return self;
}

unint64_t sub_100019B40()
{
  unint64_t result = qword_100E8F080;
  if (!qword_100E8F080)
  {
    sub_10018C6DC(&qword_100E8EDB0);
    sub_10018C6DC(&qword_100E8EDA0);
    sub_10024D5E4((uint64_t)&unk_100E8EDC0);
    swift_getOpaqueTypeConformance2();
    sub_10015180C((uint64_t)&qword_100EAACA0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8F080);
  }
  return result;
}

uint64_t type metadata accessor for CountryCodeConfigurationMonitor()
{
  return self;
}

uint64_t sub_100019C70@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC7Weather31AppIntentsDependencyStartupTask_executionPhase;
  uint64_t v4 = type metadata accessor for StartupTaskExecutionPhase();
  __n128 v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

double sub_100019CE8@<D0>(uint64_t a1@<X8>)
{
  memcpy(__dst, v1, sizeof(__dst));
  sub_1001BEAB0((uint64_t)v1);
  sub_1001BEAF4();
  sub_1001BEAB0((uint64_t)v1);
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
  *(void *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = v6;
  *(unsigned char *)(a1 + 40) = v7;
  double result = *(double *)&v8;
  *(_OWORD *)(a1 + 48) = v8;
  return result;
}

uint64_t sub_100019DD4()
{
  uint64_t result = type metadata accessor for LocationModel();
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    uint64_t v4 = &v3;
    char v5 = &unk_100C42140;
    uint64_t result = type metadata accessor for Location.Identifier();
    if (v2 <= 0x3F)
    {
      uint64_t v6 = *(void *)(result - 8) + 64;
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

uint64_t sub_100019EB4()
{
  uint64_t v0 = type metadata accessor for LocationViewModel();
  uint64_t v1 = v0 - 8;
  __chkstk_darwin(v0);
  char v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  sub_100133E68();
  swift_release();
  uint64_t v4 = *(void *)&v3[*(int *)(v1 + 36)];
  swift_bridgeObjectRetain();
  sub_1001338DC((uint64_t)v3, (void (*)(void))type metadata accessor for LocationViewModel);
  uint64_t v5 = *(void *)(v4 + 16);
  uint64_t result = swift_bridgeObjectRelease();
  if (v5) {
    return sub_100031844();
  }
  return result;
}

double sub_100019F88@<D0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  char v5 = a2 & 1;
  sub_100195B7C(a1, a2 & 1);
  sub_100149AE8();
  char v7 = v6;
  sub_10018F6D8(a1, v5);
  sub_10017DF08(&qword_100E646B0);
  uint64_t v8 = swift_allocObject();
  if (v7)
  {
    *(_OWORD *)(v8 + 16) = xmmword_100C25ED0;
    static Color.black.getter();
    uint64_t v9 = Color.opacity(_:)();
    swift_release();
    *(void *)(v8 + 32) = v9;
    *(void *)(v8 + 40) = static Color.clear.getter();
  }
  else
  {
    *(_OWORD *)(v8 + 16) = xmmword_100C251B0;
    *(void *)(v8 + 32) = static Color.clear.getter();
  }
  specialized Array._endMutation()();
  static UnitPoint.center.getter();
  EllipticalGradient.init(colors:center:startRadiusFraction:endRadiusFraction:)();
  *(void *)a3 = v8;
  *(_OWORD *)(a3 + 8) = v11;
  double result = *(double *)&v12;
  *(_OWORD *)(a3 + 24) = v12;
  *(_WORD *)(a3 + 40) = 256;
  return result;
}

uint64_t type metadata accessor for ViewStateReducer()
{
  return self;
}

id WeatherIntent.init(identifier:backingStore:)(uint64_t a1, uint64_t a2, void *a3)
{
  if (a2)
  {
    NSString v5 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v5 = 0;
  }
  v8.receiver = v3;
  v8.super_class = (Class)type metadata accessor for WeatherIntent();
  [super initWithIdentifier:v5 backingStore:a3];

  return v6;
}

uint64_t sub_10001A150@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for DailyForecastFilter();
  uint64_t v3 = swift_allocObject();
  type metadata accessor for IsSameDayCache();
  swift_allocObject();
  uint64_t result = IsSameDayCache.init()();
  *(void *)(v3 + 16) = result;
  a1[3] = v2;
  a1[4] = (uint64_t)&off_100E0D630;
  *a1 = v3;
  return result;
}

void sub_10001A1C4()
{
  if (!qword_100E72750)
  {
    type metadata accessor for MinuteWeather();
    sub_10001A2C8(&qword_100E72758, (void (*)(uint64_t))&type metadata accessor for MinuteWeather);
    sub_10001A2C8(&qword_100E72760, (void (*)(uint64_t))&type metadata accessor for MinuteWeather);
    sub_10001A2C8((unint64_t *)&unk_100E72768, (void (*)(uint64_t))&type metadata accessor for MinuteWeather);
    unint64_t v0 = type metadata accessor for Forecast();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100E72750);
    }
  }
}

uint64_t sub_10001A2C8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10001A310(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t assignWithCopy for LocationNameModifier(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_10001A3AC(uint64_t a1, char a2)
{
  uint64_t v4 = type metadata accessor for MainAction();
  __chkstk_darwin(v4);
  id v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v7 = *(uint64_t (**)(uint64_t))(a1 + 16);
  *id v6 = a2;
  type metadata accessor for ViewAction();
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  uint64_t v10 = 0;
  memset(v9, 0, sizeof(v9));
  swift_retain();
  sub_1001AAF58((uint64_t)v6, (uint64_t)v9, v7);
  sub_100016E7C((uint64_t)v9);
  sub_1001ABE70((uint64_t)v6);
  return swift_release();
}

uint64_t sub_10001A4A4()
{
  type metadata accessor for Client();
  id v0 = [self mainBundle];
  return Client.__allocating_init(bundle:)();
}

uint64_t sub_10001A4F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for WeatherDescription();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  objc_super v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = v9[1];
  *objc_super v8 = *v9;
  v8[1] = v10;
  swift_bridgeObjectRetain();
  return a1;
}

unint64_t sub_10001A578()
{
  unint64_t result = qword_100E90B80;
  if (!qword_100E90B80)
  {
    sub_10018C6DC(&qword_100E90B78);
    sub_10018C6DC(&qword_100E90B68);
    type metadata accessor for WireframeContentManager();
    sub_1001246C8(&qword_100E90B70, &qword_100E90B68);
    sub_1001357B0(&qword_100E83B40, (void (*)(uint64_t))type metadata accessor for WireframeContentManager);
    swift_getOpaqueTypeConformance2();
    sub_10022037C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E90B80);
  }
  return result;
}

uint64_t sub_10001A69C()
{
  uint64_t result = type metadata accessor for SkyBackgroundGradient();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for Date();
    if (v2 <= 0x3F)
    {
      uint64_t result = type metadata accessor for Elevation();
      if (v3 <= 0x3F)
      {
        swift_initStructMetadata();
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_10001A7C8()
{
  uint64_t result = type metadata accessor for Page();
  if (v1 <= 0x3F)
  {
    type metadata accessor for TransitionContext();
    uint64_t result = type metadata accessor for Optional();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_10001A8E0()
{
  uint64_t v1 = *(void *)(type metadata accessor for MonitorAppLaunchStateViewModifier(0) - 8);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + ((*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80)));
  sub_10017DF08((uint64_t *)&unk_100EAA7B0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    type metadata accessor for FinishLaunchTestAction();
    sub_100162E4C();
    sub_100162F0C();
    v2();
  }
  else
  {
    swift_release();
  }
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10001AA18(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10018C6DC(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for LocationAuthorizationMonitor()
{
  return self;
}

uint64_t type metadata accessor for LocationViewStateReducer()
{
  return self;
}

uint64_t sub_10001AADC()
{
  return swift_bridgeObjectRetain();
}

unint64_t sub_10001AB70()
{
  unint64_t result = qword_100EA5F90;
  if (!qword_100EA5F90)
  {
    sub_10018C6DC(&qword_100E7A0E0);
    sub_10018C6DC(&qword_100EA5F98);
    sub_1001246C8(&qword_100EA5FA0, &qword_100EA5F98);
    swift_getOpaqueTypeConformance2();
    sub_1000116FC((unint64_t *)&qword_100EAACA0, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA5F90);
  }
  return result;
}

uint64_t type metadata accessor for SidebarVisibilityMonitor()
{
  return self;
}

uint64_t type metadata accessor for NotificationAuthorizationMonitor()
{
  return self;
}

uint64_t sub_10001ACC4()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for NotificationSubscriptionMonitor()
{
  return self;
}

void sub_10001AD78()
{
  type metadata accessor for AirQuality();
  if (v0 <= 0x3F)
  {
    type metadata accessor for DailyForecastComponent();
    if (v1 <= 0x3F)
    {
      type metadata accessor for FeelsLikeComponentPreprocessedDataModel();
      if (v2 <= 0x3F)
      {
        type metadata accessor for HourlyForecastComponent();
        if (v3 <= 0x3F)
        {
          type metadata accessor for CurrentWeather();
          if (v4 <= 0x3F)
          {
            type metadata accessor for MapComponent();
            if (v5 <= 0x3F)
            {
              type metadata accessor for WeatherData(319);
              if (v6 <= 0x3F)
              {
                type metadata accessor for NewsArticleComponent();
                if (v7 <= 0x3F)
                {
                  type metadata accessor for NextHourPrecipitationComponent();
                  if (v8 <= 0x3F)
                  {
                    type metadata accessor for Location();
                    if (v9 <= 0x3F)
                    {
                      type metadata accessor for PressureComponent();
                      if (v10 <= 0x3F)
                      {
                        type metadata accessor for SevereAlertComponent();
                        if (v11 <= 0x3F)
                        {
                          type metadata accessor for SunriseSunsetModel();
                          if (v12 <= 0x3F)
                          {
                            sub_100016BEC();
                            if (v13 <= 0x3F)
                            {
                              type metadata accessor for UVIndexComponent();
                              if (v14 <= 0x3F)
                              {
                                type metadata accessor for VisibilityComponent();
                                if (v15 <= 0x3F)
                                {
                                  type metadata accessor for WindComponent();
                                  if (v16 <= 0x3F) {
                                    swift_initEnumMetadataMultiPayload();
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

uint64_t sub_10001B1D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for OSSignpostID();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  unint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10017DF08(&qword_100E639E8);
  uint64_t v11 = __chkstk_darwin(v10 - 8);
  unint64_t v13 = (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  unint64_t v15 = (char *)&v19 - v14;
  sub_100070B1C(a1, v3, (uint64_t)&v19 - v14);
  sub_10006DF38((uint64_t)v15, (uint64_t)v13, &qword_100E639E8);
  uint64_t v16 = type metadata accessor for Location();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v13, 1, v16) == 1)
  {
    sub_100178110((uint64_t)v13, &qword_100E639E8);
    static os_signpost_type_t.event.getter();
    static OSSignpostID.exclusive.getter();
    os_signpost(_:dso:log:name:signpostID:)();
    uint64_t v17 = 1;
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v16 - 8) + 32))(a2, v13, v16);
    static os_signpost_type_t.event.getter();
    static OSSignpostID.exclusive.getter();
    os_signpost(_:dso:log:name:signpostID:)();
    uint64_t v17 = 0;
  }
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  sub_100178110((uint64_t)v15, &qword_100E639E8);
  return _s7Weather24LocationCompositionStateOwst_0(a2, v17, 1, v16);
}

uint64_t sub_10001B44C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = Image.init(systemName:)();
  *a1 = result;
  return result;
}

uint64_t sub_10001B480(void *a1)
{
  id v2 = [a1 bundleIdentifier];

  if (!v2) {
    return 0;
  }
  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  return v3;
}

uint64_t sub_10001B4F0@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for DailyForecastComponentViewModel(0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001EC0BC();
  uint64_t v7 = type metadata accessor for LocationComponentContainerContentView(0);
  uint64_t v8 = *(int *)(v7 + 32);
  unint64_t v9 = (uint64_t *)(a1 + *(int *)(v7 + 28));
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  uint64_t v12 = *(void *)(a1 + v8);
  uint64_t v13 = *(void *)(a1 + v8 + 8);
  uint64_t v14 = *(void *)(a1 + 16);
  LOBYTE(a1) = *(unsigned char *)(a1 + 24);
  swift_unknownObjectRetain();
  swift_retain();
  sub_100195B7C(v14, a1);
  sub_100149AE8();
  char v16 = v15;
  sub_10018F6D8(v14, a1);
  if (v16)
  {
    if (qword_100E62240 != -1) {
      swift_once();
    }
    uint64_t v17 = &qword_100F51340;
  }
  else
  {
    if (qword_100E62248 != -1) {
      swift_once();
    }
    uint64_t v17 = &qword_100F51348;
  }
  return sub_1000422E8((uint64_t)v6, v11, v10, v12, v13, a2, *(double *)v17);
}

uint64_t sub_10001B694()
{
  type metadata accessor for SettingReader();
  static SettingReader.shared.getter();
  if (qword_100E62A00 != -1) {
    swift_once();
  }
  char v0 = SettingReader.isEnabled(_:with:)();
  uint64_t result = swift_release();
  byte_100EA1308 = v0 & 1;
  return result;
}

uint64_t sub_10001B71C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for Material();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10017DF08(&qword_100EB4FE8);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (DeviceIsSlow())
  {
    static Color.black.getter();
    uint64_t v9 = Color.opacity(_:)();
    swift_release();
    v11[1] = v9;
  }
  else
  {
    static Material.thin.getter();
    (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v8, v5, v2);
    *(_WORD *)&v8[*(int *)(v6 + 56)] = 256;
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    sub_100230A78();
  }
  uint64_t result = AnyView.init<A>(_:)();
  *a1 = result;
  return result;
}

uint64_t sub_10001B8C4(char *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for Date();
  sub_100179C0C();
  uint64_t v6 = v5;
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v11 = __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v18 - v12;
  uint64_t v14 = *(void (**)(char *, char *, uint64_t, __n128))(v6 + 16);
  v14((char *)&v18 - v12, a1, v4, v11);
  swift_beginAccess();
  ((void (*)(char *, char *, uint64_t))v14)(v9, v13, v4);
  sub_10017DF08(qword_100E66D98);
  swift_allocObject();
  uint64_t v15 = Atomic.init(wrappedValue:)();
  char v16 = *(void (**)(char *, uint64_t))(v6 + 8);
  v16(v13, v4);
  *(void *)(v2 + 16) = v15;
  swift_endAccess();
  v16(a1, v4);
  return v2;
}

uint64_t type metadata accessor for AppLaunchCountMonitor()
{
  return self;
}

uint64_t sub_10001BA50()
{
  return static Published.subscript.setter();
}

id sub_10001BAD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (Location.Identifier.kind.getter()) {
    return 0;
  }
  type metadata accessor for WeatherLocation();
  Location.Identifier.name.getter();
  objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  swift_bridgeObjectRetain();
  return sub_100029B90(a2, a3);
}

uint64_t sub_10001BB60(char a1)
{
  uint64_t v2 = type metadata accessor for DispatchWorkItemFlags();
  v16[0] = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for DispatchQoS();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for DispatchQoS.QoSClass();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    swift_retain();
    asyncMain(block:)();
    return swift_release();
  }
  else
  {
    sub_1001AB3E0();
    (*(void (**)(char *, void, uint64_t))(v10 + 104))(v12, enum case for DispatchQoS.QoSClass.utility(_:), v9);
    uint64_t v14 = (void *)static OS_dispatch_queue.global(qos:)();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    aBlock[4] = sub_10055DA74;
    aBlock[5] = 0;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10010A4D4;
    aBlock[3] = &unk_100E1A3F8;
    uint64_t v15 = _Block_copy(aBlock);
    static DispatchQoS.unspecified.getter();
    v16[1] = &_swiftEmptyArrayStorage;
    sub_100216874();
    sub_10017DF08(&qword_100E75530);
    sub_100115EDC();
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v15);

    (*(void (**)(char *, uint64_t))(v16[0] + 8))(v4, v2);
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
}

uint64_t sub_10001BED0()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for LocationViewerViewStateReducer()
{
  return self;
}

uint64_t sub_10001BFB0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for NWPath();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __chkstk_darwin(v4);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
  unint64_t v7 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v8 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v8 + v7, (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  *(void *)(v8 + ((v6 + v7 + 7) & 0xFFFFFFFFFFFFFFF8)) = a2;
  swift_retain();
  asyncMain(block:)();
  return swift_release();
}

void sub_10001C104(uint64_t a1, int a2, char a3, uint64_t a4, void *a5)
{
  uint64_t v7 = a1;
  if ((a4 & 0xC000000000000001) != 0)
  {
    if (a3)
    {
      sub_10017F3C8();
      __CocoaSet.element(at:)();
      sub_100165064();
      swift_unknownObjectRetain();
      swift_dynamicCast();
      swift_unknownObjectRelease();
      return;
    }
    goto LABEL_24;
  }
  if (a3) {
    goto LABEL_10;
  }
  if (a1 < 0 || 1 << *(unsigned char *)(a4 + 32) <= a1)
  {
    __break(1u);
    goto LABEL_21;
  }
  if (((*(void *)(a4 + 8 * ((unint64_t)a1 >> 6) + 56) >> a1) & 1) == 0)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (*(_DWORD *)(a4 + 36) == a2) {
    goto LABEL_17;
  }
  __break(1u);
LABEL_10:
  sub_10017F3C8();
  if (__CocoaSet.Index.age.getter() != *(_DWORD *)(a4 + 36))
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  sub_10017F3C8();
  __CocoaSet.Index.element.getter();
  sub_100165064();
  swift_unknownObjectRetain();
  swift_dynamicCast();
  a5 = v19;
  swift_unknownObjectRelease();
  Swift::Int v8 = NSObject._rawHashValue(seed:)(*(void *)(a4 + 40));
  uint64_t v9 = -1 << *(unsigned char *)(a4 + 32);
  uint64_t v7 = v8 & ~v9;
  sub_100189E40();
  if ((v10 & 1) == 0)
  {
LABEL_23:

    __break(1u);
LABEL_24:
    __break(1u);
    return;
  }
  id v11 = *(id *)(*(void *)(a4 + 48) + 8 * v7);
  char v12 = static NSObject.== infix(_:_:)();

  if ((v12 & 1) == 0)
  {
    uint64_t v13 = ~v9;
    do
    {
      uint64_t v7 = (v7 + 1) & v13;
      sub_100189E40();
      if ((v14 & 1) == 0) {
        goto LABEL_23;
      }
      id v15 = *(id *)(*(void *)(a4 + 48) + 8 * v7);
      char v16 = static NSObject.== infix(_:_:)();
    }
    while ((v16 & 1) == 0);
  }

LABEL_17:
  uint64_t v17 = *(void **)(*(void *)(a4 + 48) + 8 * v7);

  id v18 = v17;
}

uint64_t *sub_10001C330(uint64_t *a1, unsigned __int8 *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *(void *)a2;
    *a1 = *(void *)a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v7 = type metadata accessor for CurrentLocation();
        if (swift_getEnumCaseMultiPayload() > 2)
        {
          memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
        }
        else
        {
          uint64_t v16 = type metadata accessor for Location();
          (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v16 - 8) + 16))(a1, a2, v16);
          swift_storeEnumTagMultiPayload();
        }
        goto LABEL_12;
      case 1u:
        uint64_t v9 = type metadata accessor for Location();
        (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
        uint64_t v10 = sub_10017DF08(&qword_100E6F628);
        *((unsigned char *)a1 + *(int *)(v10 + 48)) = a2[*(int *)(v10 + 48)];
        goto LABEL_12;
      case 2u:
        uint64_t v11 = *(void *)a2;
        uint64_t v12 = *((void *)a2 + 1);
        *a1 = v11;
        a1[1] = v12;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_12;
      case 5u:
        *a1 = *(void *)a2;
        swift_bridgeObjectRetain();
        goto LABEL_12;
      case 6u:
        uint64_t v13 = *(void *)a2;
        uint64_t v14 = *((void *)a2 + 1);
        unsigned __int8 v15 = a2[16];
        sub_10015458C(v13, v14, v15);
        *a1 = v13;
        a1[1] = v14;
        *((unsigned char *)a1 + 16) = v15;
LABEL_12:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(v6 + 64));
        break;
    }
  }
  return a1;
}

uint64_t type metadata accessor for WeatherDataUpdater()
{
  return self;
}

_OWORD *sub_10001C648(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_release();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for UUID();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  return a1;
}

uint64_t sub_10001C6D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = sub_10017DF08(&qword_100E63758);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for WeatherDescription();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for HourlyForecastComponent();
  if (*(unsigned char *)(a1 + *(int *)(v15 + 36)) == 1 && (*(unsigned char *)(a1 + *(int *)(v15 + 40)) & 1) == 0)
  {
    uint64_t v16 = type metadata accessor for HourlyForecastComponentPreprocessedDataModel();
    sub_10006DF38(a2 + *(int *)(v16 + 20), (uint64_t)v10, &qword_100E63758);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v10, 1, v11) != 1)
    {
      uint64_t v19 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
      v19(v14, v10, v11);
      v19((char *)a4, v14, v11);
      uint64_t v20 = type metadata accessor for LocationComponentHeaderViewModel.Description(0);
      uint64_t v21 = a4 + *(int *)(v20 + 20);
      long long v22 = *(_OWORD *)(a3 + 16);
      *(_OWORD *)uint64_t v21 = *(_OWORD *)a3;
      *(_OWORD *)(v21 + 16) = v22;
      *(_OWORD *)(v21 + 32) = *(_OWORD *)(a3 + 32);
      *(void *)(v21 + 48) = *(void *)(a3 + 48);
      *(unsigned char *)(a4 + *(int *)(v20 + 24)) = 1;
      goto LABEL_6;
    }
    sub_1001781AC((uint64_t)v10, &qword_100E63758);
  }
  long long v17 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)a4 = *(_OWORD *)a3;
  *(_OWORD *)(a4 + 16) = v17;
  *(_OWORD *)(a4 + 32) = *(_OWORD *)(a3 + 32);
  *(void *)(a4 + 48) = *(void *)(a3 + 48);
LABEL_6:
  type metadata accessor for LocationComponentHeaderViewModel(0);
  swift_storeEnumTagMultiPayload();
  return sub_10000BB0C(a3);
}

uint64_t type metadata accessor for MainInteractor()
{
  return self;
}

unint64_t sub_10001C918()
{
  unint64_t result = qword_100EA15D8;
  if (!qword_100EA15D8)
  {
    sub_10018C6DC(&qword_100EA15E0);
    sub_10018C6DC(&qword_100EA15E8);
    sub_10024D5E4((uint64_t)&unk_100EA15F0);
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA15D8);
  }
  return result;
}

uint64_t type metadata accessor for NetworkConnectivityMonitor()
{
  return self;
}

uint64_t sub_10001CA18(uint64_t a1, char a2, char a3)
{
  uint64_t v6 = type metadata accessor for MainAction();
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(uint64_t (**)(uint64_t))(a1 + 16);
  if (a2) {
    char v10 = 1;
  }
  else {
    char v10 = 2;
  }
  if (a3) {
    char v10 = 3;
  }
  *uint64_t v8 = v10;
  type metadata accessor for NotificationsAction();
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  uint64_t v13 = 0;
  memset(v12, 0, sizeof(v12));
  swift_retain();
  sub_1001AAF58((uint64_t)v8, (uint64_t)v12, v9);
  sub_100016E7C((uint64_t)v12);
  sub_1001ABE70((uint64_t)v8);
  return swift_release();
}

void sub_10001CB2C()
{
  if (!qword_100E71310)
  {
    type metadata accessor for DayWeather();
    sub_1001A3918(&qword_100E71318, (void (*)(uint64_t))&type metadata accessor for DayWeather);
    sub_1001A3918(&qword_100E71320, (void (*)(uint64_t))&type metadata accessor for DayWeather);
    sub_1001A3918(&qword_100E71328, (void (*)(uint64_t))&type metadata accessor for DayWeather);
    unint64_t v0 = type metadata accessor for Forecast();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100E71310);
    }
  }
}

uint64_t assignWithCopy for LocationHeaderViewGradientBackgroundViewModifier(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 16) = a2[2];
  *(void *)(a1 + 24) = a2[3];
  *(void *)(a1 + 32) = a2[4];
  *(void *)(a1 + 40) = a2[5];
  *(void *)(a1 + 48) = a2[6];
  *(void *)(a1 + 56) = a2[7];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t type metadata accessor for CurrentLocationMonitor()
{
  return self;
}

id sub_10001CCC8(double a1, double a2, double a3, double a4, uint64_t a5, uint64_t a6, void *a7)
{
  NSString v12 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v13 = [a7 URLForSearch:v12 at:a1 span:a2, a3, a4];

  return v13;
}

uint64_t type metadata accessor for WeatherDataPreprocessor()
{
  return self;
}

uint64_t sub_10001CD80@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v8 = type metadata accessor for DispatchQoS();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = v3[1];
  uint64_t v19 = *v3;
  uint64_t v20 = v12;
  swift_bridgeObjectRetain();
  v13._countAndFlagsBits = 46;
  v13._object = (void *)0xE100000000000000;
  String.append(_:)(v13);
  v14._countAndFlagsBits = a1;
  v14._object = a2;
  String.append(_:)(v14);
  uint64_t v15 = v19;
  uint64_t v16 = v20;
  uint64_t v17 = type metadata accessor for GCDSerialDispatchQueueFactory();
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v11, (char *)v4 + *(int *)(v17 + 20), v8);
  uint64_t result = sub_1000333D4(v15, v16, (uint64_t)v11);
  a3[3] = (uint64_t)&type metadata for GCDSerialDispatchQueue;
  a3[4] = (uint64_t)&off_100E38960;
  *a3 = result;
  return result;
}

uint64_t sub_10001CEC0()
{
  uint64_t result = type metadata accessor for Precipitation();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for Date();
    if (v2 <= 0x3F)
    {
      uint64_t result = type metadata accessor for TimeZone();
      if (v3 <= 0x3F)
      {
        swift_initStructMetadata();
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_10001D010(uint64_t a1)
{
  return a1;
}

void sub_10001D048(char a1)
{
  unint64_t v2 = v1;
  uint64_t v13 = sub_100098CC0(v2);
  if (v13)
  {
    sub_10017FC08();
    *(void *)&long long v10 = v4;
    *((void *)&v10 + 1) = v5;
    AnyHashable.init<A>(_:)();
    if (a1 == 2)
    {
      long long v10 = 0u;
      long long v11 = 0u;
    }
    else
    {
      uint64_t v6 = 0x6174654479746963;
      if ((a1 & 1) == 0) {
        uint64_t v6 = 0x7473694C79746963;
      }
      unint64_t v7 = 0xEE00776569566C69;
      *((void *)&v11 + 1) = &type metadata for String;
      if ((a1 & 1) == 0) {
        unint64_t v7 = 0xEC00000077656956;
      }
      *(void *)&long long v10 = v6;
      *((void *)&v10 + 1) = v7;
    }
    uint64_t v8 = sub_100098D2C((uint64_t)&v10, (uint64_t)v12);
    if (v13)
    {
      v9.super.isa = Dictionary._bridgeToObjectiveC()().super.isa;
      uint64_t v8 = swift_bridgeObjectRelease();
    }
    else
    {
      v9.super.isa = 0;
    }
    sub_100189094(v8, "setUserInfo:");
  }
  else
  {
    [v2 setUserInfo:0];
  }
}

id sub_10001D1B0(uint64_t a1, uint64_t a2, void *a3)
{
  if (a2)
  {
    NSString v5 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v5 = 0;
  }
  id v6 = [v3 initWithName:v5 sessionRole:a3];

  return v6;
}

uint64_t sub_10001D220()
{
  id v0 = [self currentDevice];
  id v1 = [v0 userInterfaceIdiom];

  if (v1 != (id)1 || (DeviceIsSlow() & 1) != 0) {
    return 0;
  }
  type metadata accessor for MapsExperiments();
  return static MapsExperiments.isPinnedMapEnabledOnIpad.getter() & 1;
}

uint64_t sub_10001D2A0(uint64_t a1, uint64_t a2)
{
  swift_unknownObjectRelease();
  uint64_t v4 = *(void *)(*(void *)(a2 + 16) - 8);
  NSString v5 = *(uint64_t (**)(unint64_t))(v4 + 8);
  unint64_t v6 = (a1 + *(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);

  return v5(v6);
}

unint64_t sub_10001D314()
{
  unint64_t result = qword_100E74648;
  if (!qword_100E74648)
  {
    sub_10018C6DC(&qword_100E745E0);
    sub_10018C6DC(&qword_100E745D0);
    sub_1000CD3C0();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    sub_10024D5E4((uint64_t)&unk_100E74650);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E74648);
  }
  return result;
}

uint64_t sub_10001D438()
{
  uint64_t result = type metadata accessor for AppConfiguration();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for EnvironmentState();
    if (v2 <= 0x3F)
    {
      uint64_t result = type metadata accessor for LocationsState();
      if (v3 <= 0x3F)
      {
        uint64_t result = type metadata accessor for NotificationsOptInState();
        if (v4 <= 0x3F)
        {
          uint64_t result = type metadata accessor for Date();
          if (v5 <= 0x3F)
          {
            uint64_t result = type metadata accessor for ViewState(319);
            if (v6 <= 0x3F)
            {
              uint64_t result = type metadata accessor for ModalViewState(319);
              if (v7 <= 0x3F) {
                return swift_updateClassMetadata2();
              }
            }
          }
        }
      }
    }
  }
  return result;
}

unint64_t sub_10001D664()
{
  unint64_t result = qword_100EA6070;
  if (!qword_100EA6070)
  {
    sub_10018C6DC(&qword_100EA5F48);
    sub_10018C6DC(&qword_100EA5F38);
    sub_10018C6DC(&qword_100EA5F30);
    sub_1001246C8(&qword_100EA5F70, &qword_100EA5F30);
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    sub_1000116FC((unint64_t *)&qword_100EAACA0, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA6070);
  }
  return result;
}

uint64_t sub_10001D7A4()
{
  return sub_1001AEC98();
}

uint64_t sub_10001D7C8(uint64_t a1)
{
  uint64_t v4 = type metadata accessor for Date();
  sub_100179C0C();
  uint64_t v6 = v5;
  uint64_t v8 = *(void *)(v7 + 64);
  __chkstk_darwin(v9);
  uint64_t v10 = sub_10017DF08(&qword_100E634B0);
  __chkstk_darwin(v10 - 8);
  sub_100152344();
  uint64_t v11 = type metadata accessor for TaskPriority();
  _s7Weather24LocationCompositionStateOwst_0(v2, 1, 1, v11);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))((char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
  unint64_t v12 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = 0;
  *(void *)(v13 + 24) = 0;
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v13 + v12, (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  *(void *)(v13 + ((v8 + v12 + 7) & 0xFFFFFFFFFFFFFFF8)) = v1;
  swift_retain();
  sub_1001BCCF0(v2, (uint64_t)&unk_100E98E10, v13);
  return swift_release();
}

void *assignWithCopy for CompactContent(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_retain();
  swift_release();
  sub_1000C1E18(a1 + 4, a2 + 4);
  return a1;
}

uint64_t type metadata accessor for NotificationsOptInViewModelFactory()
{
  return self;
}

uint64_t type metadata accessor for SavedLocationsMonitor()
{
  return self;
}

uint64_t type metadata accessor for ListViewStateReducer()
{
  return self;
}

uint64_t sub_10001DA2C()
{
  type metadata accessor for SettingReader();
  static SettingReader.shared.getter();
  if (qword_100E62670 != -1) {
    swift_once();
  }
  char v0 = SettingReader.isEnabled(_:with:)();
  uint64_t result = swift_release();
  byte_100F51C58 = v0 & 1;
  return result;
}

uint64_t type metadata accessor for SavedLocationsStoreObserver()
{
  return self;
}

void sub_10001DAD8()
{
  id v1 = [self defaultCenter];
  [v1 addObserver:v0 selector:"postLocaleIfChanged" name:NSCurrentLocaleDidChangeNotification object:0];
}

uint64_t type metadata accessor for AppConfigurationMonitor()
{
  return self;
}

unint64_t sub_10001DB78()
{
  unint64_t result = qword_100E8E2A0;
  if (!qword_100E8E2A0)
  {
    sub_10018C6DC(&qword_100E8E2A8);
    sub_10018C6DC(&qword_100E8E2B0);
    sub_1000E37A8();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8E2A0);
  }
  return result;
}

uint64_t sub_10001DC28(void *a1)
{
  sub_1001B1E64(a1, a1[3]);
  type metadata accessor for Tracker();
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (result)
  {
    uint64_t v2 = Tracker.chain(name:identifier:)();
    swift_release();
    return v2;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10001DCB0()
{
  return UIViewControllerRepresentable.sizeThatFits(_:uiViewController:context:)();
}

uint64_t sub_10001DCE4(uint64_t a1)
{
  uint64_t v2 = v1;
  sub_1001B1E64((void *)(v1 + 144), *(void *)(v1 + 168));
  uint64_t v4 = dispatch thunk of LocationDisplayContextManagerType.fetchDisplayContextByLocation()();
  uint64_t v5 = (void *)swift_allocObject();
  v5[2] = v2;
  _OWORD v5[3] = a1;
  v5[4] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  asyncMain(block:)();

  return swift_release();
}

char *sub_10001DD9C(char *result, int64_t a2, char a3, uint64_t a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    uint64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v7 = a2;
      }
    }
  }
  else
  {
    uint64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10017DF08(&qword_100E97300);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 4);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  unint64_t v12 = v10 + 32;
  uint64_t v13 = (char *)(a4 + 32);
  if (v5)
  {
    sub_1007EB4F8(v13, v8, v12);
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_100215A60(v13, v8, v12);
  }
  swift_release();
  return v10;
}

uint64_t type metadata accessor for ReverseGeocodingStoreObserver()
{
  return self;
}

uint64_t type metadata accessor for ActiveLocationModelFactory()
{
  return self;
}

uint64_t sub_10001DEC8(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  uint64_t v8 = type metadata accessor for MainAction();
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  size_t v11 = *(uint64_t (**)(uint64_t))(a1 + 112);
  *(void *)uint64_t v10 = a2;
  *((void *)v10 + 1) = a3;
  v10[16] = a4;
  type metadata accessor for LocationsAction();
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  uint64_t v14 = 0;
  memset(v13, 0, sizeof(v13));
  swift_retain();
  sub_10015458C(a2, a3, a4);
  sub_1001AAF58((uint64_t)v10, (uint64_t)v13, v11);
  sub_100178254((uint64_t)v13, (uint64_t *)&unk_100EA01F0);
  sub_1001ABE70((uint64_t)v10);
  return swift_release();
}

uint64_t type metadata accessor for EnvironmentReducer()
{
  return self;
}

uint64_t sub_10001E018()
{
  swift_getObjectType();
  type metadata accessor for Capabilities();
  uint64_t result = static Capabilities.isInternalBuild()();
  if (result)
  {
    if (qword_100E62690 != -1) {
      swift_once();
    }
    sub_1000A382C(&qword_100E6F298, v1, (void (*)(uint64_t))type metadata accessor for AppDelegate);
    uint64_t result = Configurable.setting<A>(_:)();
    if (LOBYTE(v3[0]) == 1)
    {
      LOBYTE(v3[0]) = 0;
      sub_1000A382C(&qword_100E6F4B8, v2, (void (*)(uint64_t))type metadata accessor for AppDelegate);
      Updatable.save<A>(setting:value:)();
      sub_1000A0944((uint64_t)v3);
      sub_1001B1E64(v3, v3[3]);
      type metadata accessor for DebugCacheRegistry();
      uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
      if (result)
      {
        DebugCacheRegistry.clearCache()();
        swift_release();
        return _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v3);
      }
      else
      {
        __break(1u);
      }
    }
  }
  return result;
}

uint64_t assignWithCopy for LazyUntilDismissedViewModifier(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_retain();
  swift_release();
  return a1;
}

unint64_t sub_10001E214()
{
  unint64_t result = qword_100E83848;
  if (!qword_100E83848)
  {
    sub_10018C6DC(&qword_100E832E0);
    sub_10022B1B4();
    sub_10018C6DC(&qword_100E832B8);
    sub_10022AF34();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E83848);
  }
  return result;
}

uint64_t sub_10001E2CC()
{
  uint64_t result = type metadata accessor for LocationModel();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for WeatherMapOverlayKind();
    if (v2 <= 0x3F)
    {
      uint64_t result = type metadata accessor for Location.Identifier();
      if (v3 <= 0x3F)
      {
        swift_initEnumMetadataMultiPayload();
        return 0;
      }
    }
  }
  return result;
}

unint64_t sub_10001E3CC()
{
  unint64_t result = qword_100E7CFC0;
  if (!qword_100E7CFC0)
  {
    sub_10018C6DC(&qword_100E7CF68);
    sub_10018C6DC(&qword_100E7CF88);
    type metadata accessor for ZoomNavigationTransition();
    sub_1000D76A8();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E7CFC0);
  }
  return result;
}

void sub_10001E498()
{
  sub_10001E87C(319, (unint64_t *)&qword_100E6D980, (void (*)(uint64_t))&type metadata accessor for ColorSchemeContrast);
  if (v0 <= 0x3F)
  {
    sub_10001E87C(319, (unint64_t *)&qword_100E77A78, (void (*)(uint64_t))&type metadata accessor for DynamicTypeSize);
    if (v1 <= 0x3F)
    {
      type metadata accessor for Text.Measurements();
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

void sub_10001E5F8()
{
  sub_10001E828(319, (unint64_t *)&qword_100E6D980, (void (*)(uint64_t))&type metadata accessor for ColorSchemeContrast);
  if (v0 <= 0x3F)
  {
    sub_10001E828(319, (unint64_t *)&qword_100E63C78, (void (*)(uint64_t))&type metadata accessor for ContentSizeCategory);
    if (v1 <= 0x3F)
    {
      sub_100230A04();
      if (v2 <= 0x3F)
      {
        sub_10001E828(319, (unint64_t *)&qword_100E6DC90, (void (*)(uint64_t))&type metadata accessor for ScenePhase);
        if (v3 <= 0x3F)
        {
          type metadata accessor for Text.Measurements();
          if (v4 <= 0x3F)
          {
            type metadata accessor for MoonComponentViewModel();
            if (v5 <= 0x3F) {
              swift_initStructMetadata();
            }
          }
        }
      }
    }
  }
}

void sub_10001E828(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = type metadata accessor for Environment.Content();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_10001E87C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = type metadata accessor for Environment.Content();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_10001E8D0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = type metadata accessor for Environment.Content();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t type metadata accessor for AppStateMonitor()
{
  return self;
}

unint64_t sub_10001E948()
{
  unint64_t result = qword_100E83900;
  if (!qword_100E83900)
  {
    sub_10018C6DC(&qword_100E832A0);
    sub_10018C6DC(&qword_100E832A8);
    sub_10022AE94();
    swift_getOpaqueTypeConformance2();
    sub_10022B574();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E83900);
  }
  return result;
}

uint64_t sub_10001E9F8()
{
  type metadata accessor for SettingReader();
  static SettingReader.shared.getter();
  if (qword_100E62A00 != -1) {
    swift_once();
  }
  char v0 = SettingReader.isEnabled(_:with:)();
  uint64_t result = swift_release();
  byte_100EB2450 = v0 & 1;
  return result;
}

uint64_t sub_10001EA80()
{
  uint64_t result = type metadata accessor for CurrentLocation();
  if (v1 <= 0x3F)
  {
    uint64_t v4 = *(void *)(result - 8) + 64;
    uint64_t result = type metadata accessor for Location();
    if (v2 <= 0x3F)
    {
      swift_getTupleTypeLayout2();
      uint64_t v5 = &v3;
      unint64_t v6 = &unk_100C564A0;
      uint64_t v7 = &unk_100C564B8;
      uint64_t v8 = (char *)&value witness table for Builtin.Int64 + 64;
      uint64_t v9 = (char *)&value witness table for Builtin.BridgeObject + 64;
      uint64_t v10 = &unk_100C564D0;
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

void sub_10001EB90()
{
  sub_10001EDD8(319, (unint64_t *)&qword_100E7EF50, (void (*)(uint64_t))&type metadata accessor for CurrentLocation);
  if (v0 <= 0x3F)
  {
    sub_10001EDD8(319, (unint64_t *)&unk_100E7EF58, (void (*)(uint64_t))type metadata accessor for SearchViewState.ViewState);
    if (v1 <= 0x3F)
    {
      type metadata accessor for Date();
      if (v2 <= 0x3F)
      {
        sub_10001EDD8(319, (unint64_t *)&qword_100E64EF8, (void (*)(uint64_t))type metadata accessor for ContentStatusBanner);
        if (v3 <= 0x3F) {
          swift_initStructMetadata();
        }
      }
    }
  }
}

void sub_10001EDD8(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = type metadata accessor for Optional();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_10001EE2C()
{
  id v1 = [self currentDevice];
  id v2 = [v1 userInterfaceIdiom];

  uint64_t v3 = type metadata accessor for ViewState(0);
  if (v2 && *(void *)(v0 + *(int *)(v3 + 36) + 8) == 2) {
    return 1;
  }
  else {
    return *(unsigned __int8 *)(v0 + *(int *)(v3 + 28));
  }
}

double sub_10001EEB8@<D0>(uint64_t a1@<X8>)
{
  *(void *)a1 = swift_getKeyPath();
  *(unsigned char *)(a1 + 8) = 0;
  id v2 = (int *)type metadata accessor for PinningHeaderModifier(0);
  uint64_t v3 = (uint64_t *)(a1 + v2[5]);
  *uint64_t v3 = swift_getKeyPath();
  sub_10017DF08(&qword_100E829F0);
  swift_storeEnumTagMultiPayload();
  uint64_t v4 = a1 + v2[6];
  *(void *)uint64_t v4 = swift_getKeyPath();
  *(unsigned char *)(v4 + 8) = 0;
  uint64_t v5 = a1 + v2[7];
  State.init(wrappedValue:)();
  double result = *(double *)&v7;
  *(_OWORD *)uint64_t v5 = v7;
  *(unsigned char *)(v5 + 16) = v8;
  *(void *)(v5 + 24) = v9;
  return result;
}

uint64_t sub_10001EF9C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = Image.init(systemName:)();
  *a1 = result;
  return result;
}

uint64_t sub_10001EFE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CurrentWeather();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = type metadata accessor for PressureTrend();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  type metadata accessor for PressureComponentPreprocessedDataModel();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t type metadata accessor for LocationAuthorizationReducer()
{
  return self;
}

unint64_t sub_10001F0F8()
{
  unint64_t result = qword_100E8E448;
  if (!qword_100E8E448)
  {
    sub_10018C6DC(&qword_100E8E350);
    sub_10018C6DC(&qword_100E8E340);
    sub_10024D5E4((uint64_t)&unk_100E8E400);
    sub_1000FD1D8();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8E448);
  }
  return result;
}

uint64_t sub_10001F1E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  NSString v8 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v9 = [a5 URLsForResourcesWithExtension:v8 subdirectory:a3 inBundleWithURL:a4];

  if (!v9) {
    return 0;
  }
  type metadata accessor for URL();
  uint64_t v10 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  return v10;
}

uint64_t sub_10001F28C@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = swift_beginAccess();
  char v3 = byte_100E65EB8;
  *(void *)a1 = static MapTransitionNamespaceKey.defaultValue;
  *(unsigned char *)(a1 + 8) = v3;
  return result;
}

uint64_t sub_10001F2E0()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_10001F374(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for PressureTrend();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t type metadata accessor for DemoPresetProvider()
{
  return self;
}

uint64_t type metadata accessor for ActiveLocationInputFactory()
{
  return self;
}

uint64_t sub_10001F464()
{
  uint64_t v1 = OBJC_IVAR____TtC7Weather11AppDelegate____lazy_storage___containerManager;
  if (*(void *)(v0 + OBJC_IVAR____TtC7Weather11AppDelegate____lazy_storage___containerManager))
  {
    uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC7Weather11AppDelegate____lazy_storage___containerManager);
  }
  else
  {
    uint64_t v2 = sub_1000A253C();
    *(void *)(v0 + v1) = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

uint64_t type metadata accessor for ModalViewStateReducer()
{
  return self;
}

uint64_t sub_10001F4EC()
{
  type metadata accessor for SettingReader();
  static SettingReader.shared.getter();
  static Settings.VFX.vfxCollisionEnabled.getter();
  SettingReader.read<A>(_:)();
  swift_release();

  return swift_release();
}

uint64_t sub_10001F54C@<X0>(uint64_t a1@<X8>)
{
  swift_getKeyPath();
  sub_100040608();
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v3 = v1 + OBJC_IVAR____TtC7Weather49WeatherConditionBackgroundModifierObservableModel__model;
  swift_beginAccess();
  return sub_10021680C(v3, a1);
}

uint64_t sub_10001F5E8()
{
  uint64_t result = type metadata accessor for DailyForecastComponentViewModel(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for FeelsLikeComponentViewModel(319);
    if (v2 <= 0x3F)
    {
      uint64_t result = type metadata accessor for MapComponentViewModel();
      if (v3 <= 0x3F)
      {
        uint64_t result = type metadata accessor for MoonComponentViewModel();
        if (v4 <= 0x3F)
        {
          uint64_t result = type metadata accessor for NewsArticleComponentViewModel(319);
          if (v5 <= 0x3F)
          {
            uint64_t result = type metadata accessor for NextHourPrecipitationComponentViewModel();
            if (v6 <= 0x3F)
            {
              uint64_t result = type metadata accessor for NotificationsOptInComponentViewModel();
              if (v7 <= 0x3F)
              {
                uint64_t result = type metadata accessor for PressureComponentViewModel();
                if (v8 <= 0x3F)
                {
                  uint64_t result = type metadata accessor for SevereAlertComponentViewModel();
                  if (v9 <= 0x3F)
                  {
                    uint64_t result = type metadata accessor for SunriseSunsetViewModel();
                    if (v10 <= 0x3F)
                    {
                      uint64_t result = type metadata accessor for UVIndexComponentViewModel();
                      if (v11 <= 0x3F)
                      {
                        uint64_t result = type metadata accessor for WindComponentViewModel();
                        if (v12 <= 0x3F)
                        {
                          swift_initEnumMetadataMultiPayload();
                          return 0;
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

id sub_10001F948(int a1, id a2)
{
  id v2 = [a2 role];
  id v3 = objc_allocWithZone((Class)UISceneConfiguration);
  id v4 = sub_10001D1B0(0xD000000000000015, 0x8000000100C9CBC0, v2);
  type metadata accessor for SceneDelegate();
  [v4 setDelegateClass:swift_getObjCClassFromMetadata()];
  return v4;
}

uint64_t sub_10001F9D8()
{
  type metadata accessor for SettingReader();
  static SettingReader.shared.getter();
  if (qword_100E62A70 != -1) {
    swift_once();
  }
  SettingReader.read<A>(_:)();

  return swift_release();
}

unint64_t sub_10001FA60()
{
  unint64_t result = qword_100EA1740;
  if (!qword_100EA1740)
  {
    sub_10018C6DC(&qword_100EA1748);
    sub_10018C6DC(&qword_100EA1750);
    sub_10024D5E4((uint64_t)&unk_100EA1758);
    swift_getOpaqueTypeConformance2();
    sub_100217BEC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA1740);
  }
  return result;
}

uint64_t sub_10001FB3C(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, uint64_t))
{
  sub_1001ABC4C(0, (unint64_t *)&qword_100E62D68);
  id v4 = (void *)static OS_os_log.default.getter();
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();

  sub_1000A02F4(&OBJC_IVAR____TtC7Weather11AppDelegate____lazy_storage___stateManager, &qword_100E6F460, (uint64_t (*)(unsigned char *, uint64_t))sub_1001262E4, &qword_100E6F468, (uint64_t)v8);
  uint64_t v5 = v9;
  uint64_t v6 = v10;
  sub_1001B1E64(v8, v9);
  a3(v5, v6);
  return _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v8);
}

uint64_t type metadata accessor for NotificationsOptInMonitor()
{
  return self;
}

uint64_t type metadata accessor for LocationOfInterestMonitor()
{
  return self;
}

void sub_10001FC80()
{
  type metadata accessor for Date();
  if (v0 <= 0x3F)
  {
    sub_10001FDBC(319, &qword_100E86BA0, (void (*)(uint64_t))&type metadata accessor for Elevation);
    if (v1 <= 0x3F)
    {
      sub_10001FDBC(319, (unint64_t *)&unk_100E86BA8, (void (*)(uint64_t))&type metadata accessor for BackgroundMoonData);
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

void sub_10001FDBC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = type metadata accessor for Optional();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_10001FE10()
{
  return swift_weakAssign();
}

uint64_t sub_10001FE30@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for StubNotificationsOptInStatusFactory();
  uint64_t result = swift_allocObject();
  a1[3] = v2;
  a1[4] = (uint64_t)&off_100E1F2D0;
  *a1 = result;
  return result;
}

uint64_t type metadata accessor for StubNotificationsOptInStatusFactory()
{
  return self;
}

uint64_t type metadata accessor for SessionScenePhaseObserver()
{
  return self;
}

unint64_t sub_10001FEC0()
{
  unint64_t result = qword_100E9A700;
  if (!qword_100E9A700)
  {
    sub_10018C6DC(&qword_100E9A6F8);
    sub_10018C6DC(&qword_100E9A6E8);
    sub_1002275AC();
    swift_getOpaqueTypeConformance2();
    sub_10021D860();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9A700);
  }
  return result;
}

uint64_t sub_10001FF70@<X0>(uint64_t (*a1)(void)@<X1>, uint64_t (*a2)(void)@<X2>, uint64_t a3@<X3>, uint64_t *a4@<X8>)
{
  uint64_t v7 = a1(0);
  swift_allocObject();
  uint64_t result = a2();
  a4[3] = v7;
  a4[4] = a3;
  *a4 = result;
  return result;
}

uint64_t sub_10001FFD8(unsigned __int8 a1)
{
  id v2 = [self currentDevice];
  id v3 = [v2 userInterfaceIdiom];

  if (((v3 == 0) & a1) != 0) {
    return 1;
  }
  else {
    return 2;
  }
}

unint64_t sub_10002004C()
{
  unint64_t result = qword_100EAA760;
  if (!qword_100EAA760)
  {
    sub_10018C6DC(&qword_100EAA660);
    sub_10018C6DC(&qword_100EAA650);
    type metadata accessor for VibrantDividerStyle();
    sub_1000F7DF8();
    sub_1000F6744(&qword_100EAA738, (void (*)(uint64_t))&type metadata accessor for VibrantDividerStyle);
    swift_getOpaqueTypeConformance2();
    sub_1001246C8((unint64_t *)&qword_100E64F80, (uint64_t *)&unk_100EAA770);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAA760);
  }
  return result;
}

uint64_t sub_100020170()
{
  return sub_1001AED2C();
}

void sub_100020194(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v6 = [objc_allocWithZone((Class)type metadata accessor for WeatherIntent()) init];
  id v7 = sub_10001BAD0(a1, a2, a3);
  [v6 setLocation:v7];
  sub_1001ABC4C(0, &qword_100E89650);
  id v8 = v6;
  id v9 = sub_10000C0B4(v8, 0);
  NSString v10 = String._bridgeToObjectiveC()();
  [v9 setIdentifier:v10];

  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a2;
  *(void *)(v11 + 24) = a3;
  v13[4] = sub_100694754;
  v13[5] = v11;
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 1107296256;
  _OWORD v13[2] = sub_100693D60;
  v13[3] = &unk_100E1F3B0;
  unint64_t v12 = _Block_copy(v13);
  swift_bridgeObjectRetain();
  swift_release();
  [v9 donateInteractionWithCompletion:v12];
  _Block_release(v12);
}

uint64_t sub_100020328(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  uint64_t v6 = a3[6];
  id v7 = (void *)(a1 + v6);
  id v8 = (const void *)(a2 + v6);
  uint64_t v9 = type metadata accessor for URL();
  swift_bridgeObjectRetain();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v9))
  {
    uint64_t v10 = sub_10017DF08(&qword_100E749B0);
    memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v7, 0, 1, v9);
  }
  uint64_t v11 = a3[7];
  uint64_t v12 = a3[8];
  uint64_t v13 = (void *)(a1 + v11);
  uint64_t v14 = (void *)(a2 + v11);
  uint64_t v15 = v14[1];
  void *v13 = *v14;
  v13[1] = v15;
  *(void *)(a1 + v12) = *(void *)(a2 + v12);
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t sub_100020450()
{
  uint64_t result = type metadata accessor for CodableError();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for Location();
    if (v2 <= 0x3F)
    {
      uint64_t result = type metadata accessor for LocationOfInterest();
      if (v3 <= 0x3F)
      {
        uint64_t result = type metadata accessor for SearchLocation();
        if (v4 <= 0x3F)
        {
          swift_initEnumMetadataMultiPayload();
          return 0;
        }
      }
    }
  }
  return result;
}

uint64_t sub_1000205A4()
{
  uint64_t v0 = type metadata accessor for Scope();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  unint64_t v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10017DF08(&qword_100EACEB0);
  RegistrationContainer.register<A>(_:name:factory:)();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for Scope.singleton(_:), v0);
  Definition.inScope(_:)();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

void sub_1000206D4()
{
  type metadata accessor for LocationComponentContainerViewModel();
  if (v0 <= 0x3F)
  {
    type metadata accessor for Text.Measurements();
    if (v1 <= 0x3F)
    {
      sub_1000208C0(319, (unint64_t *)&qword_100E63C78, (void (*)(uint64_t))&type metadata accessor for ContentSizeCategory);
      if (v2 <= 0x3F)
      {
        sub_1000208C0(319, (unint64_t *)&qword_100E63C70, (void (*)(uint64_t))&type metadata accessor for LayoutDirection);
        if (v3 <= 0x3F) {
          swift_initStructMetadata();
        }
      }
    }
  }
}

void sub_10002086C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = type metadata accessor for Environment.Content();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_1000208C0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = type metadata accessor for Environment.Content();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_100020914(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = type metadata accessor for Environment.Content();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_100020968()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    type metadata accessor for TransitionContext();
    uint64_t result = type metadata accessor for Optional();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_100020A6C()
{
  uint64_t v1 = sub_10017DF08(&qword_100E634B0);
  __chkstk_darwin(v1 - 8);
  sub_1001626E0();
  uint64_t v4 = v3 - v2;
  uint64_t result = static Settings.Features.homeAndWorkEnabled.getter();
  if (result)
  {
    uint64_t v6 = type metadata accessor for TaskPriority();
    _s7Weather24LocationCompositionStateOwst_0(v4, 1, 1, v6);
    id v7 = (void *)swift_allocObject();
    v7[2] = 0;
    _OWORD v7[3] = 0;
    v7[4] = v0;
    swift_retain();
    sub_1001BCCF0(v4, (uint64_t)&unk_100E8AA28, (uint64_t)v7);
    return swift_release();
  }
  return result;
}

uint64_t sub_100020B44()
{
  uint64_t v4 = &unk_100C730D0;
  uint64_t v5 = &unk_100C730E8;
  uint64_t result = type metadata accessor for Location();
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    uint64_t v6 = &v3;
    id v7 = &unk_100C73100;
    uint64_t result = type metadata accessor for Date();
    if (v2 <= 0x3F)
    {
      uint64_t v8 = *(void *)(result - 8) + 64;
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for WireframeInterestToken()
{
  return self;
}

uint64_t sub_100020C5C()
{
  type metadata accessor for SettingReader();
  static SettingReader.shared.getter();
  static Settings.VFX.overrideConditionBackground.getter();
  SettingReader.read<A>(_:)();
  swift_release();

  return swift_release();
}

void sub_100020CBC()
{
  if (!qword_100E712E8)
  {
    type metadata accessor for HourWeather();
    sub_1001A3918(&qword_100E712F0, (void (*)(uint64_t))&type metadata accessor for HourWeather);
    sub_1001A3918(&qword_100E712F8, (void (*)(uint64_t))&type metadata accessor for HourWeather);
    sub_1001A3918(&qword_100E71300, (void (*)(uint64_t))&type metadata accessor for HourWeather);
    unint64_t v0 = type metadata accessor for Forecast();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100E712E8);
    }
  }
}

uint64_t sub_100020DC0(uint64_t a1, uint64_t a2)
{
  char v3 = *(uint64_t (**)(uint64_t))(a1 + 16);
  uint64_t v9 = 0;
  memset(v8, 0, sizeof(v8));
  sub_1001AB0B0((uint64_t)v8, (uint64_t)v5);
  uint64_t v6 = a2;
  char v7 = 0;
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1001AB2DC((uint64_t)v5, v3);
  sub_100178110((uint64_t)v5, &qword_100E63488);
  sub_100178110((uint64_t)v8, (uint64_t *)&unk_100EA01F0);
  return swift_release();
}

uint64_t sub_100020E5C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for LocationViewModel();
  __chkstk_darwin(v3 - 8);
  uint64_t v4 = type metadata accessor for LocationInput();
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10017DF08(&qword_100E64A10);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v12 = (void (**)(void))((char *)&v20 - v11);
  uint64_t v13 = v1 + *(void *)(*(void *)v1 + 120);
  swift_beginAccess();
  sub_10006DF38(v13, (uint64_t)v12, &qword_100E64A10);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v15 = (uint64_t)v12 + *(int *)(sub_10017DF08(&qword_100E64A30) + 48);
      sub_1001522B4();
      _s7Weather24LocationCompositionStateOwst_0(a1, 0, 1, v4);
      return sub_1001524C8(v15, (void (*)(void))type metadata accessor for LocationViewModel);
    }
    else
    {
      _s7Weather24LocationCompositionStateOwst_0(a1, 1, 1, v4);
      return sub_1001781AC((uint64_t)v12, &qword_100E64A10);
    }
  }
  else
  {
    uint64_t v17 = *v12;
    uint64_t v21 = a1;
    id v18 = v12[2];
    v17();
    ((void (*)(char *))v18)(v6);
    swift_release();
    swift_release();
    sub_10017DF08(&qword_100E64A30);
    sub_100136460();
    sub_1001522B4();
    swift_storeEnumTagMultiPayload();
    swift_beginAccess();
    sub_1001DF004((uint64_t)v9, v13, &qword_100E64A10);
    swift_endAccess();
    uint64_t v19 = v21;
    sub_1001522B4();
    return _s7Weather24LocationCompositionStateOwst_0(v19, 0, 1, v4);
  }
}

void (*sub_10002118C())(void *__return_ptr)
{
  void (*v11)(void *__return_ptr);
  void (*v12)(void);
  uint64_t v14;
  void (*v15)(void *__return_ptr);

  uint64_t v1 = type metadata accessor for MainViewModel(0);
  __chkstk_darwin(v1 - 8);
  uint64_t v2 = sub_10017DF08(&qword_100E64B40);
  __chkstk_darwin(v2);
  uint64_t v4 = (uint64_t *)((char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v5);
  uint64_t v7 = (uint64_t *)((char *)&v14 - v6);
  uint64_t v8 = v0 + *(void *)(*(void *)v0 + 120);
  swift_beginAccess();
  sub_10006DF38(v8, (uint64_t)v7, &qword_100E64B40);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v10 = sub_10017DF08(&qword_100E64B50);
      uint64_t v11 = (void (*)(void *__return_ptr))*v7;
      sub_1001524C8((uint64_t)v7 + *(int *)(v10 + 48), (void (*)(void))type metadata accessor for MainViewModel);
    }
    else
    {
      sub_1001781AC((uint64_t)v7, &qword_100E64B40);
      return 0;
    }
  }
  else
  {
    uint64_t v12 = (void (*)(void))v7[2];
    ((void (*)(void *__return_ptr))*v7)(&v15);
    v12(&v15);
    swift_release();
    swift_release();
    sub_10017DF08(&qword_100E64B50);
    uint64_t v11 = v15;
    *uint64_t v4 = v15;
    sub_1001522B4();
    swift_storeEnumTagMultiPayload();
    swift_beginAccess();
    swift_retain();
    sub_1001DF004((uint64_t)v4, v8, &qword_100E64B40);
    swift_endAccess();
  }
  return v11;
}

uint64_t sub_1000213E0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for LocationViewerViewModel();
  __chkstk_darwin(v3 - 8);
  uint64_t v4 = type metadata accessor for LocationViewerInput();
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10017DF08(&qword_100E64A48);
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v12 = (void (**)(void))((char *)&v20 - v11);
  uint64_t v13 = v1 + *(void *)(*(void *)v1 + 120);
  swift_beginAccess();
  sub_10006DF38(v13, (uint64_t)v12, &qword_100E64A48);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v15 = (uint64_t)v12 + *(int *)(sub_10017DF08(&qword_100E64A50) + 48);
      sub_1001522B4();
      _s7Weather24LocationCompositionStateOwst_0(a1, 0, 1, v4);
      return sub_1001524C8(v15, (void (*)(void))type metadata accessor for LocationViewerViewModel);
    }
    else
    {
      _s7Weather24LocationCompositionStateOwst_0(a1, 1, 1, v4);
      return sub_1001781AC((uint64_t)v12, &qword_100E64A48);
    }
  }
  else
  {
    uint64_t v17 = *v12;
    uint64_t v21 = a1;
    id v18 = v12[2];
    v17();
    ((void (*)(char *))v18)(v6);
    swift_release();
    swift_release();
    sub_10017DF08(&qword_100E64A50);
    sub_100136460();
    sub_1001522B4();
    swift_storeEnumTagMultiPayload();
    swift_beginAccess();
    sub_1001DF004((uint64_t)v10, v13, &qword_100E64A48);
    swift_endAccess();
    uint64_t v19 = v21;
    sub_1001522B4();
    return _s7Weather24LocationCompositionStateOwst_0(v19, 0, 1, v4);
  }
}

uint64_t sub_100021710(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10017DF08(&qword_100E65958);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10017DF08(&qword_100E65960);
  __chkstk_darwin(v7);
  uint64_t v9 = (uint64_t *)((char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (sub_10000DD3C())
  {
    long long v10 = *(_OWORD *)(a1 + 8);
    long long v16 = *(_OWORD *)(a1 + 24);
    long long v17 = v10;
    uint64_t v11 = swift_allocObject();
    long long v12 = *(_OWORD *)(a1 + 16);
    *(_OWORD *)(v11 + 16) = *(_OWORD *)a1;
    *(_OWORD *)(v11 + 32) = v12;
    *(void *)(v11 + 48) = *(void *)(a1 + 32);
    uint64_t v13 = sub_10017DF08(&qword_100E65988);
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16))(v6, a2, v13);
    uint64_t v14 = (uint64_t (**)())&v6[*(int *)(v4 + 36)];
    void *v14 = sub_10029291C;
    v14[1] = (uint64_t (*)())v11;
    _OWORD v14[2] = 0;
    v14[3] = 0;
    sub_1000F350C((uint64_t)v6, (uint64_t)v9, &qword_100E65958);
    swift_storeEnumTagMultiPayload();
    sub_100042ED0((uint64_t)&v17);
    sub_100042ED0((uint64_t)&v16);
    sub_10017DF08(&qword_100E65968);
    sub_10022F258();
    sub_10022FD6C();
    _ConditionalContent<>.init(storage:)();
    return sub_1000F3400((uint64_t)v6, &qword_100E65958);
  }
  else
  {
    *uint64_t v9 = static Color.clear.getter();
    v9[1] = (uint64_t)sub_100030040;
    _OWORD v9[2] = 0;
    v9[3] = 0;
    void v9[4] = 0;
    swift_storeEnumTagMultiPayload();
    sub_10017DF08(&qword_100E65968);
    sub_10022F258();
    sub_10022FD6C();
    return _ConditionalContent<>.init(storage:)();
  }
}

uint64_t sub_10002197C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_10017DF08(&qword_100E65ED8);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)(a3 + 48);
  unint64_t v9 = *(void *)(a3 + 56);
  sub_10006DF38(a2, (uint64_t)v7, &qword_100E65ED8);
  sub_1000D54E0(v8, v9);
  sub_1000D448C(v8, v9, (uint64_t)v7, (uint64_t)v21);
  long long v10 = (long long *)(a3 + *(int *)(type metadata accessor for ContentStatusBannerView() + 24));
  char v11 = *((unsigned char *)v10 + 32);
  uint64_t v12 = *((void *)v10 + 5);
  long long v13 = v10[1];
  long long v17 = *v10;
  long long v18 = v13;
  char v19 = v11;
  uint64_t v20 = v12;
  v15[0] = v21[0];
  v15[1] = v21[1];
  char v16 = v22;
  sub_10017DF08(&qword_100E9C628);
  return State.wrappedValue.setter();
}

uint64_t sub_100021A90()
{
  uint64_t v32 = type metadata accessor for DateInterval();
  uint64_t v34 = *(void *)(v32 - 8);
  __chkstk_darwin(v32);
  CGFloat v33 = (char *)&v30 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v37 = (uint64_t)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v36 = (uint64_t)&v30 - v6;
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v30 - v7;
  uint64_t v9 = type metadata accessor for Date();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  long long v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v11);
  char v16 = (char *)&v30 - v15;
  uint64_t v17 = __chkstk_darwin(v14);
  char v19 = (char *)&v30 - v18;
  __chkstk_darwin(v17);
  uint64_t v21 = (char *)&v30 - v20;
  uint64_t v22 = v0;
  uint64_t v23 = v0 + *(int *)(type metadata accessor for TrackExposureModifier() + 28);
  sub_10017DF08(&qword_100E7DDF8);
  uint64_t v35 = v23;
  State.wrappedValue.getter();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v9) == 1) {
    return sub_1001E7540((uint64_t)v8);
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v21, v8, v9);
  Date.init()();
  Date.distance(to:)();
  if (*(double *)(v22 + 8) <= v25)
  {
    double v31 = *(void (**)(char *))(v22 + 16);
    unint64_t v26 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
    v26(v16, v21, v9);
    v26(v13, v19, v9);
    CGFloat v27 = v33;
    DateInterval.init(start:end:)();
    v31(v27);
    (*(void (**)(char *, uint64_t))(v34 + 8))(v27, v32);
  }
  uint64_t v28 = v36;
  _s7Weather24LocationCompositionStateOwst_0(v36, 1, 1, v9);
  sub_1001C7278(v28, v37);
  State.wrappedValue.setter();
  sub_1001E7540(v28);
  double v29 = *(void (**)(char *, uint64_t))(v10 + 8);
  v29(v19, v9);
  return ((uint64_t (*)(char *, uint64_t))v29)(v21, v9);
}

uint64_t sub_100021E38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_10017DF08(&qword_100EA1D98);
  __chkstk_darwin(v5);
  uint64_t v7 = &v13[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t KeyPath = swift_getKeyPath();
  if (*v2)
  {
    BOOL v9 = 0;
  }
  else
  {
    memcpy(__dst, v2 + 8, sizeof(__dst));
    sub_100021FB4((uint64_t)v2, (void (*)(void, void, void, void, void, void, void, void, void, char))sub_1001910C8);
    sub_1001BEAF4();
    sub_100021FB4((uint64_t)v2, (void (*)(void, void, void, void, void, void, void, void, void, char))sub_10018CCC4);
    BOOL v9 = v13[57] == 4;
  }
  uint64_t v10 = sub_10017DF08(&qword_100EA1DA0);
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v7, a1, v10);
  uint64_t v11 = &v7[*(int *)(v5 + 36)];
  *(void *)uint64_t v11 = KeyPath;
  v11[8] = v9;
  return sub_10024D364((uint64_t)v7, a2, &qword_100EA1D98);
}

uint64_t sub_100021FB4(uint64_t a1, void (*a2)(void, void, void, void, void, void, void, void, void, char))
{
  char v4 = *(unsigned char *)(a1 + 80);
  a2(*(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), v4);
  return a1;
}

uint64_t sub_10002200C()
{
  uint64_t v1 = type metadata accessor for HourlyForecastComponentView();
  uint64_t v2 = sub_100164920(v1);
  uint64_t v4 = v3;
  uint64_t v6 = *(void *)(v5 + 64);
  __chkstk_darwin(v2);
  double v7 = sub_1000430D0();
  v11[1] = *v0;
  sub_10014BF8C((uint64_t)v0, (uint64_t)v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), (void (*)(void))type metadata accessor for HourlyForecastComponentView);
  unint64_t v8 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v9 = swift_allocObject();
  sub_10021B08C((uint64_t)v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v9 + v8);
  *(double *)(v9 + ((v6 + v8 + 7) & 0xFFFFFFFFFFFFFFF8)) = v7;
  swift_bridgeObjectRetain();
  sub_10017DF08(&qword_100E8F5F0);
  sub_10017DF08(&qword_100E7A0E8);
  sub_1001246C8(&qword_100EA5FA8, &qword_100E8F5F0);
  sub_10022BBB4();
  sub_1000116FC(&qword_100EA5FB0, (void (*)(uint64_t))type metadata accessor for HourlyForecastComponentViewModel.HourlyItem);
  return ForEach<>.init(_:content:)();
}

uint64_t sub_1000221DC@<X0>(unsigned __int8 a1@<W0>, uint64_t *a2@<X8>)
{
  int v4 = a1;
  uint64_t v5 = sub_10017DF08(&qword_100E731C8);
  sub_100179C0C();
  uint64_t v7 = v6;
  __chkstk_darwin(v8);
  sub_1001626E0();
  uint64_t v11 = v10 - v9;
  if (v4 != 4)
  {
    sub_10017DF08(&qword_100E635E0);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_100C251B0;
    *(void *)(inited + 32) = 0x6361667265746E69;
    *(void *)(inited + 40) = 0xE900000000000065;
    *(void *)(inited + 72) = &type metadata for NetworkInterface;
    *(unsigned char *)(inited + 48) = a1;
  }
  Dictionary.init(dictionaryLiteral:)();
  ShortDescription.init(name:_:)();
  a2[3] = v5;
  a2[4] = sub_100230F68();
  long long v13 = sub_100170694(a2);
  return (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v7 + 32))(v13, v11, v5);
}

uint64_t sub_100022384(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10017DF08((uint64_t *)&unk_100EAA640);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000223EC(uint64_t a1, int *a2)
{
  uint64_t v4 = type metadata accessor for CurrentWeather();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + a2[5];
  uint64_t v6 = type metadata accessor for WeatherDescription();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  type metadata accessor for UVIndexComponentPreprocessedDataModel();
  swift_bridgeObjectRelease();
  uint64_t v7 = a1 + a2[6];
  uint64_t v8 = sub_10017DF08(&qword_100E66CA0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = a1 + a2[7];
  uint64_t v10 = sub_10017DF08(&qword_100E66CC8);
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8);

  return v11(v9, v10);
}

uint64_t sub_10002253C()
{
  uint64_t v1 = sub_10017DF08(&qword_100E63A10);
  uint64_t v2 = __chkstk_darwin(v1 - 8);
  uint64_t v4 = (char *)&v56 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v56 - v5;
  uint64_t v7 = type metadata accessor for LocationWeatherDataState(0);
  uint64_t v65 = *(void *)(v7 - 8);
  uint64_t v66 = v7;
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v56 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10017DF08(&qword_100E6A480);
  uint64_t v11 = __chkstk_darwin(v10 - 8);
  long long v13 = (uint64_t *)((char *)&v56 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v56 - v14;
  uint64_t v16 = type metadata accessor for BannerStateComputer();
  uint64_t v17 = v16;
  if (*(unsigned char *)(v0 + *(int *)(v16 + 28)) != 1)
  {
    if (sub_10007DC94())
    {
      uint64_t v39 = *(void *)(v0 + *(int *)(v17 + 20));
      uint64_t v40 = OBJC_IVAR____TtCV7Weather9MainState8_Storage_view;
      if ((*(unsigned char *)(v39 + v40 + *(int *)(type metadata accessor for ViewState(0) + 40) + 1) & 0xC0) == 0x40)
      {
        uint64_t v41 = type metadata accessor for ContentStatusBanner();
        uint64_t v42 = (uint64_t)&v4[*(int *)(v41 + 24)];
        uint64_t v43 = type metadata accessor for Date();
        _s7Weather24LocationCompositionStateOwst_0(v42, 1, 1, v43);
        *uint64_t v4 = 0;
        *(_OWORD *)(v4 + 8) = xmmword_100C3E060;
        uint64_t v44 = (uint64_t)v4;
        uint64_t v45 = 0;
        uint64_t v46 = v41;
LABEL_34:
        _s7Weather24LocationCompositionStateOwst_0(v44, v45, 1, v46);
        return sub_1001EB4CC();
      }
    }
LABEL_33:
    uint64_t v46 = type metadata accessor for ContentStatusBanner();
    uint64_t v44 = (uint64_t)v4;
    uint64_t v45 = 1;
    goto LABEL_34;
  }
  uint64_t v62 = *(int *)(v16 + 20);
  uint64_t v18 = *(void *)(v0 + v62);
  uint64_t v19 = OBJC_IVAR____TtCV7Weather9MainState8_Storage_view;
  if ((*(unsigned char *)(v18 + v19 + *(int *)(type metadata accessor for ViewState(0) + 40) + 1) & 0xC0) != 0x40) {
    goto LABEL_33;
  }
  v58 = v6;
  v59 = v4;
  uint64_t v60 = v17;
  uint64_t v61 = v0;
  uint64_t v20 = *(void *)(v18 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_weatherData + 16);
  uint64_t v21 = *(void *)(v20 + 64);
  uint64_t v63 = v20 + 64;
  uint64_t v22 = 1 << *(unsigned char *)(v20 + 32);
  uint64_t v23 = -1;
  if (v22 < 64) {
    uint64_t v23 = ~(-1 << v22);
  }
  unint64_t v24 = v23 & v21;
  int64_t v64 = (unint64_t)(v22 + 63) >> 6;
  int64_t v57 = v64 - 1;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v26 = 0;
  if (!v24) {
    goto LABEL_8;
  }
LABEL_6:
  unint64_t v27 = __clz(__rbit64(v24));
  v24 &= v24 - 1;
  unint64_t v28 = v27 | (v26 << 6);
  while (2)
  {
    uint64_t v29 = *(void *)(v20 + 56);
    uint64_t v30 = (void *)(*(void *)(v20 + 48) + 16 * v28);
    uint64_t v31 = v30[1];
    void *v13 = *v30;
    v13[1] = v31;
    uint64_t v32 = v29 + *(void *)(v65 + 72) * v28;
    uint64_t v33 = sub_10017DF08(&qword_100E6A488);
    sub_100166838(v32, (uint64_t)v13 + *(int *)(v33 + 48), (void (*)(void))type metadata accessor for LocationWeatherDataState);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v13, 0, 1, v33);
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_10024D364((uint64_t)v13, (uint64_t)v15, &qword_100E6A480);
      uint64_t v38 = sub_10017DF08(&qword_100E6A488);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v15, 1, v38) == 1)
      {
        swift_release();
        uint64_t v47 = type metadata accessor for ContentStatusBanner();
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v59, 1, 1, v47);
        return sub_1001EB4CC();
      }
      swift_bridgeObjectRelease();
      sub_10017487C((uint64_t)&v15[*(int *)(v38 + 48)], (uint64_t)v9, (void (*)(void))type metadata accessor for LocationWeatherDataState);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v48 = sub_10017DF08(&qword_100E63748);
        uint64_t v49 = (uint64_t)&v9[*(int *)(v48 + 48)];
        sub_100173018((uint64_t)&v9[*(int *)(v48 + 64)], (void (*)(void))type metadata accessor for NewsDataModel);
        sub_100173018(v49, (void (*)(void))type metadata accessor for PreprocessedWeatherData);
        sub_100173018((uint64_t)v9, (void (*)(void))type metadata accessor for WeatherData);
        uint64_t v50 = *(void *)(v61 + v62) + OBJC_IVAR____TtCV7Weather9MainState8_Storage_environment;
        swift_beginAccess();
        if (*(unsigned char *)(v50 + *(int *)(type metadata accessor for EnvironmentState() + 64))) {
          char v51 = 2;
        }
        else {
          char v51 = 1;
        }
        uint64_t v52 = type metadata accessor for ContentStatusBanner();
        uint64_t v53 = (uint64_t)v58;
        uint64_t v54 = (uint64_t)&v58[*(int *)(v52 + 24)];
        uint64_t v55 = type metadata accessor for Date();
        _s7Weather24LocationCompositionStateOwst_0(v54, 1, 1, v55);
        *(unsigned char *)uint64_t v53 = v51;
        *(_OWORD *)(v53 + 8) = xmmword_100C3E060;
        _s7Weather24LocationCompositionStateOwst_0(v53, 0, 1, v52);
        sub_1001EB4CC();
        return swift_release();
      }
      uint64_t result = sub_100173018((uint64_t)v9, (void (*)(void))type metadata accessor for LocationWeatherDataState);
      if (v24) {
        goto LABEL_6;
      }
LABEL_8:
      int64_t v34 = v26 + 1;
      if (__OFADD__(v26, 1))
      {
        __break(1u);
        goto LABEL_42;
      }
      if (v34 < v64)
      {
        unint64_t v35 = *(void *)(v63 + 8 * v34);
        if (v35) {
          goto LABEL_11;
        }
        int64_t v36 = v26 + 2;
        ++v26;
        if (v34 + 1 < v64)
        {
          unint64_t v35 = *(void *)(v63 + 8 * v36);
          if (v35) {
            goto LABEL_14;
          }
          int64_t v26 = v34 + 1;
          if (v34 + 2 < v64)
          {
            unint64_t v35 = *(void *)(v63 + 8 * (v34 + 2));
            if (v35)
            {
              v34 += 2;
              goto LABEL_11;
            }
            int64_t v36 = v34 + 3;
            int64_t v26 = v34 + 2;
            if (v34 + 3 < v64) {
              break;
            }
          }
        }
      }
LABEL_25:
      uint64_t v37 = sub_10017DF08(&qword_100E6A488);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v13, 1, 1, v37);
      unint64_t v24 = 0;
    }
    unint64_t v35 = *(void *)(v63 + 8 * v36);
    if (v35)
    {
LABEL_14:
      int64_t v34 = v36;
LABEL_11:
      unint64_t v24 = (v35 - 1) & v35;
      unint64_t v28 = __clz(__rbit64(v35)) + (v34 << 6);
      int64_t v26 = v34;
      continue;
    }
    break;
  }
  while (1)
  {
    int64_t v34 = v36 + 1;
    if (__OFADD__(v36, 1)) {
      break;
    }
    if (v34 >= v64)
    {
      int64_t v26 = v57;
      goto LABEL_25;
    }
    unint64_t v35 = *(void *)(v63 + 8 * v34);
    ++v36;
    if (v35) {
      goto LABEL_11;
    }
  }
LABEL_42:
  __break(1u);
  return result;
}

uint64_t sub_100022BE4(void *a1)
{
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E81B08);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (result)
  {
    uint64_t v2 = result;
    sub_10017DF08(&qword_100E97FE8);
    uint64_t result = swift_allocObject();
    *(void *)(result + 16) = v2;
    *(void *)(result + 24) = _swiftEmptyArrayStorage;
  }
  else
  {
    __break(1u);
  }
  return result;
}

double sub_100022C64@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  unsigned int v8 = (a3 >> 8) & 1;
  sub_100193DD4(a2, a3, BYTE1(a3) & 1);
  sub_1001F4F38();
  sub_10014D82C(a2, a3, v8);
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v9 = sub_10017DF08(&qword_100E83C80);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16))(a4, a1, v9);
  uint64_t v10 = (_OWORD *)(a4 + *(int *)(sub_10017DF08(&qword_100E83C88) + 36));
  *uint64_t v10 = v12;
  v10[1] = v13;
  double result = *(double *)&v14;
  v10[2] = v14;
  return result;
}

uint64_t sub_100022DA4@<X0>(__int16 a1@<W0>, uint64_t *a2@<X8>)
{
  char v4 = a1;
  uint64_t v5 = sub_10017DF08(&qword_100E76058);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  unsigned int v8 = &v12[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10017DF08(&qword_100E635E0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100C251B0;
  if ((a1 & 0x100) != 0)
  {
    *(void *)(inited + 32) = 0x64656C62616E65;
    *(void *)(inited + 40) = 0xE700000000000000;
    *(void *)(inited + 72) = &type metadata for Bool;
    *(unsigned char *)(inited + 48) = v4 & 1;
  }
  else
  {
    *(void *)(inited + 32) = 28532;
    *(void *)(inited + 40) = 0xE200000000000000;
    *(void *)(inited + 72) = &type metadata for NetworkState;
    *(unsigned char *)(inited + 48) = v4;
  }
  Dictionary.init(dictionaryLiteral:)();
  ShortDescription.init(name:_:)();
  a2[3] = v5;
  a2[4] = sub_100230F14();
  uint64_t v10 = sub_100170694(a2);
  return (*(uint64_t (**)(uint64_t *, unsigned char *, uint64_t))(v6 + 32))(v10, v8, v5);
}

uint64_t sub_100022FB0()
{
  sub_10017DF08(&qword_100E74B40);
  UIViewControllerRepresentableContext.coordinator.getter();
  return v1;
}

uint64_t sub_100022FF0()
{
  return State.wrappedValue.setter();
}

uint64_t sub_10002303C()
{
  uint64_t v0 = sub_10017DF08(&qword_100EAA940);
  __chkstk_darwin(v0);
  uint64_t v2 = (char *)&v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_10017DF08(&qword_100EAA948);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10017DF08(&qword_100EAA950);
  __chkstk_darwin(v6);
  unsigned int v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100E62668 != -1) {
    swift_once();
  }
  if (byte_100F51C48 == 1)
  {
    sub_1000F8114((uint64_t)v8);
    uint64_t v9 = &qword_100EAA950;
    sub_10006DF38((uint64_t)v8, (uint64_t)v5, &qword_100EAA950);
    swift_storeEnumTagMultiPayload();
    sub_100227714();
    sub_100227F64();
    _ConditionalContent<>.init(storage:)();
    uint64_t v10 = (uint64_t)v8;
  }
  else
  {
    sub_100A26DE4((uint64_t)v2);
    uint64_t v9 = &qword_100EAA940;
    sub_10006DF38((uint64_t)v2, (uint64_t)v5, &qword_100EAA940);
    swift_storeEnumTagMultiPayload();
    sub_100227714();
    sub_100227F64();
    _ConditionalContent<>.init(storage:)();
    uint64_t v10 = (uint64_t)v2;
  }
  return sub_100178110(v10, v9);
}

void *sub_10002326C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v19 = type metadata accessor for WeatherConditionBackgroundTimeDataFactory();
  uint64_t v20 = &off_100E19AF8;
  *(void *)&long long v18 = a3;
  uint64_t v14 = (uint64_t)a4
      + OBJC_IVAR____TtC7Weather39WeatherConditionBackgroundStoreObserver____lazy_storage___locationAnimationKind;
  uint64_t v15 = type metadata accessor for Settings.VFX.AnimatedBackgrounds.AnimationKind();
  _s7Weather24LocationCompositionStateOwst_0(v14, 1, 1, v15);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)a4 + OBJC_IVAR____TtC7Weather39WeatherConditionBackgroundStoreObserver____lazy_storage___listAnimationKind, 1, 1, v15);
  uint64_t v16 = OBJC_IVAR____TtC7Weather39WeatherConditionBackgroundStoreObserver_logger;
  sub_1000DBCCC();
  *(void *)((char *)a4 + v16) = OS_os_log.init(subsystem:category:)();
  *((unsigned char *)a4 + OBJC_IVAR____TtC7Weather39WeatherConditionBackgroundStoreObserver_hasPrewarmDone) = 0;
  a4[2] = a1;
  a4[3] = a7;
  a4[4] = a2;
  a4[5] = a8;
  sub_1001262E4(&v18, (uint64_t)a4+ OBJC_IVAR____TtC7Weather39WeatherConditionBackgroundStoreObserver_weatherConditionBackgroundTimeDataFactory);
  return a4;
}

uint64_t sub_100023394@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, unsigned char *a4@<X8>)
{
  uint64_t v8 = sub_10017DF08(&qword_100E63508);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for LocationOfInterest();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10006DF38(a1, (uint64_t)v10, &qword_100E63508);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v10, 1, v11) == 1)
  {
    sub_100178110((uint64_t)v10, &qword_100E63508);
    uint64_t v15 = type metadata accessor for HomeAndWorkRefinementRowViewModel();
    uint64_t v16 = (uint64_t)a4;
    uint64_t v17 = 1;
  }
  else
  {
    long long v18 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
    v18(v14, v10, v11);
    BOOL v19 = sub_1009F9C80();
    uint64_t v20 = (int *)type metadata accessor for HomeAndWorkRefinementRowViewModel();
    uint64_t v21 = &a4[v20[5]];
    uint64_t v22 = type metadata accessor for Location();
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16))(v21, a3, v22);
    v18(&a4[v20[6]], v14, v11);
    *a4 = a2 & 1;
    a4[v20[7]] = v19;
    uint64_t v16 = (uint64_t)a4;
    uint64_t v17 = 0;
    uint64_t v15 = (uint64_t)v20;
  }
  return _s7Weather24LocationCompositionStateOwst_0(v16, v17, 1, v15);
}

uint64_t sub_1000235B0@<X0>(uint64_t a1@<X8>)
{
  sub_1001D2014();
  sub_10018B1B0();
  double v5 = *(double *)(v1 + v4);

  return sub_1000A0E50(v1 + v3, a1, v5);
}

_OWORD *sub_100023618(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(void *)(a3 + 16);
  double v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  uint64_t v6 = *(unsigned __int8 *)(*(void *)(v4 - 8) + 80);
  uint64_t v7 = ((unint64_t)a1 + v6 + 16) & ~v6;
  uint64_t v8 = ((unint64_t)a2 + v6 + 16) & ~v6;
  swift_unknownObjectRetain();
  v5(v7, v8, v4);
  return a1;
}

uint64_t sub_1000236AC(uint64_t a1, uint64_t a2, long long *a3, long long *a4, long long *a5, long long *a6, long long *a7, char a8, uint64_t a9)
{
  *(void *)(a9 + 48) = type metadata accessor for DemoPresetProvider();
  *(void *)(a9 + 56) = &off_100E363F0;
  *(void *)(a9 + 16) = a1;
  *(void *)(a9 + 24) = a2;
  sub_1001262E4(a3, a9 + 64);
  sub_1001262E4(a4, a9 + 104);
  sub_1001262E4(a5, a9 + 144);
  sub_1001262E4(a6, a9 + 184);
  sub_1001262E4(a7, a9 + 224);
  *(unsigned char *)(a9 + 264) = a8;
  return a9;
}

uint64_t sub_100023768@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(v2 + 16);
  uint64_t v6 = *(void *)(v2 + 24);
  uint64_t v7 = type metadata accessor for WeatherWindowGroup();
  sub_1001627C0(v7);
  uint64_t v9 = v2 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));

  return sub_1000855B4(a1, v9, v5, v6, a2);
}

uint64_t type metadata accessor for WeatherWindowGroup()
{
  return sub_100109098();
}

uint64_t sub_1000237FC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), uint64_t (*a4)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v7 = *(void *)(a3(0) - 8);
  uint64_t v8 = v4 + ((*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));

  return a4(a1, a2, v8);
}

uint64_t sub_100023894(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t v4 = swift_retain();
  a3(v4);

  return swift_release();
}

void *sub_1000238D8(uint64_t a1, uint64_t a2, long long *a3, uint64_t a4, uint64_t a5, long long *a6, uint64_t a7, uint64_t *a8)
{
  uint64_t v16 = *a8;
  uint64_t v34 = type metadata accessor for MainInteractor();
  unint64_t v35 = &off_100E1EA00;
  v33[0] = a1;
  uint64_t v31 = v16;
  uint64_t v32 = &off_100E39B40;
  v30[0] = a8;
  type metadata accessor for MainModule();
  uint64_t v17 = (void *)swift_allocObject();
  uint64_t v18 = sub_1000DF0C4((uint64_t)v33, v34);
  __n128 v19 = __chkstk_darwin(v18);
  uint64_t v21 = (void *)((char *)v30 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, __n128))(v22 + 16))(v21, v19);
  uint64_t v23 = sub_1000DF0C4((uint64_t)v30, v31);
  __n128 v24 = __chkstk_darwin(v23);
  int64_t v26 = (void *)((char *)v30 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, __n128))(v27 + 16))(v26, v24);
  unint64_t v28 = sub_100044054(*v21, a2, a3, a4, a5, a6, a7, *v26, v17);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v30);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v33);
  return v28;
}

void *sub_100023B18(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v6 = *a3;
  uint64_t v7 = type metadata accessor for NotificationSettingsViewModelFactory();
  v36[3] = v7;
  v36[4] = &off_100E3AD68;
  v36[0] = a1;
  uint64_t v8 = type metadata accessor for NotificationsOptInViewModelFactory();
  uint64_t v34 = v8;
  unint64_t v35 = &off_100E2BA78;
  v33[0] = a2;
  uint64_t v31 = v6;
  uint64_t v32 = &off_100E2BC00;
  v30[0] = a3;
  type metadata accessor for ListViewStateReducer();
  uint64_t v9 = (void *)swift_allocObject();
  uint64_t v10 = sub_1000DF0C4((uint64_t)v36, v7);
  __n128 v11 = __chkstk_darwin(v10);
  uint64_t v13 = (void *)((char *)&v30[-1] - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, __n128))(v14 + 16))(v13, v11);
  uint64_t v15 = sub_1000DF0C4((uint64_t)v33, v34);
  __n128 v16 = __chkstk_darwin(v15);
  uint64_t v18 = (void *)((char *)&v30[-1] - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, __n128))(v19 + 16))(v18, v16);
  uint64_t v20 = sub_1000DF0C4((uint64_t)v30, v31);
  __n128 v21 = __chkstk_darwin(v20);
  uint64_t v23 = (void *)((char *)&v30[-1] - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, __n128))(v24 + 16))(v23, v21);
  uint64_t v25 = *v13;
  uint64_t v26 = *v18;
  uint64_t v27 = *v23;
  v9[5] = v7;
  v9[6] = &off_100E3AD68;
  v9[7] = v26;
  _OWORD v9[2] = v25;
  v9[10] = v8;
  v9[11] = &off_100E2BA78;
  v9[15] = v6;
  v9[16] = &off_100E2BC00;
  v9[12] = v27;
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v30);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v33);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v36);
  return v9;
}

void *sub_100023DFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t *a8)
{
  uint64_t v31 = a6;
  uint64_t v32 = a7;
  uint64_t v14 = *a8;
  uint64_t v15 = type metadata accessor for MainTracker();
  v36[3] = v15;
  v36[4] = &off_100E38E68;
  v36[0] = a3;
  uint64_t v34 = v14;
  unint64_t v35 = &off_100E175C0;
  v33[0] = a8;
  type metadata accessor for MainInteractor();
  __n128 v16 = (void *)swift_allocObject();
  uint64_t v17 = sub_1000DF0C4((uint64_t)v36, v15);
  __n128 v18 = __chkstk_darwin(v17);
  uint64_t v20 = (uint64_t *)((char *)&v31 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, __n128))(v21 + 16))(v20, v18);
  uint64_t v22 = sub_1000DF0C4((uint64_t)v33, v34);
  __n128 v23 = __chkstk_darwin(v22);
  uint64_t v25 = (uint64_t *)((char *)&v31 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, __n128))(v26 + 16))(v25, v23);
  uint64_t v27 = *v20;
  uint64_t v28 = *v25;
  v16[11] = v15;
  v16[12] = &off_100E38E68;
  v16[8] = v27;
  v16[16] = v14;
  v16[17] = &off_100E175C0;
  v16[13] = v28;
  v16[6] = a1;
  v16[7] = a2;
  void v16[2] = a4;
  v16[3] = a5;
  uint64_t v29 = v32;
  v16[4] = v31;
  v16[5] = v29;
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v33);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v36);
  return v16;
}

void sub_10002404C()
{
  type metadata accessor for LocationComponentContainerViewModel();
  if (v0 <= 0x3F)
  {
    type metadata accessor for Location.Identifier();
    if (v1 <= 0x3F)
    {
      sub_100046CB8(319, (unint64_t *)&qword_100E63C70, (void (*)(uint64_t))&type metadata accessor for LayoutDirection);
      if (v2 <= 0x3F)
      {
        sub_100046CB8(319, (unint64_t *)&qword_100E63C78, (void (*)(uint64_t))&type metadata accessor for ContentSizeCategory);
        if (v3 <= 0x3F)
        {
          sub_100046CB8(319, (unint64_t *)&qword_100E63C80, (void (*)(uint64_t))type metadata accessor for DisplayMetrics);
          if (v4 <= 0x3F) {
            swift_initStructMetadata();
          }
        }
      }
    }
  }
}

void sub_1000242AC()
{
  sub_100046CB8(319, (unint64_t *)&qword_100E63C80, (void (*)(uint64_t))type metadata accessor for DisplayMetrics);
  if (v0 <= 0x3F)
  {
    sub_100046CB8(319, (unint64_t *)&unk_100E82E60, (void (*)(uint64_t))type metadata accessor for LocationComponentCornerRadiusConfiguration);
    if (v1 <= 0x3F)
    {
      type metadata accessor for LocationComponentViewModel();
      if (v2 <= 0x3F)
      {
        sub_100046CB8(319, (unint64_t *)&unk_100E82DC0, (void (*)(uint64_t))type metadata accessor for LocationComponentHeaderMetrics);
        if (v3 <= 0x3F)
        {
          type metadata accessor for Location.Identifier();
          if (v4 <= 0x3F) {
            swift_initStructMetadata();
          }
        }
      }
    }
  }
}

void sub_1000244B4()
{
  sub_10002FCFC(319, (unint64_t *)&qword_100E63C80, (void (*)(uint64_t))type metadata accessor for DisplayMetrics);
  if (v0 <= 0x3F)
  {
    sub_10002FCFC(319, (unint64_t *)&qword_100E63C78, (void (*)(uint64_t))&type metadata accessor for ContentSizeCategory);
    if (v1 <= 0x3F)
    {
      type metadata accessor for Text.Measurements();
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

void sub_100024660()
{
  swift_checkMetadataState();
  if (v0 <= 0x3F)
  {
    swift_checkMetadataState();
    if (v1 <= 0x3F)
    {
      sub_10002FD50(319, &qword_100E8E968, type metadata accessor for ContentStatusBannerPresentationMetrics, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
      if (v2 <= 0x3F)
      {
        sub_10002FD50(319, (unint64_t *)&qword_100E63C80, (uint64_t (*)(uint64_t))type metadata accessor for DisplayMetrics, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
        if (v3 <= 0x3F) {
          swift_initStructMetadata();
        }
      }
    }
  }
}

void sub_10002482C()
{
  type metadata accessor for LocationViewModel();
  if (v0 <= 0x3F)
  {
    type metadata accessor for Text.Measurements();
    if (v1 <= 0x3F)
    {
      sub_10002FCFC(319, (unint64_t *)&qword_100E63C80, (void (*)(uint64_t))type metadata accessor for DisplayMetrics);
      if (v2 <= 0x3F)
      {
        sub_10002FCFC(319, (unint64_t *)&qword_100E63C78, (void (*)(uint64_t))&type metadata accessor for ContentSizeCategory);
        if (v3 <= 0x3F) {
          swift_initStructMetadata();
        }
      }
    }
  }
}

void sub_1000249D4()
{
  sub_100024CA4(319, (unint64_t *)&unk_100E80D28, (void (*)(uint64_t))&type metadata accessor for Locale);
  if (v0 <= 0x3F)
  {
    sub_100024CA4(319, (unint64_t *)&qword_100E77B98, (void (*)(uint64_t))&type metadata accessor for UnitConfiguration.Temperature);
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

void sub_100024AE4()
{
  sub_100024CF8(319, (unint64_t *)&unk_100E80D28, (void (*)(uint64_t))&type metadata accessor for Locale);
  if (v0 <= 0x3F)
  {
    type metadata accessor for WeatherDataModel();
    if (v1 <= 0x3F)
    {
      type metadata accessor for WeatherData.CachingState(319);
      if (v2 <= 0x3F)
      {
        type metadata accessor for WeatherData.WeatherStatisticsState(319);
        if (v3 <= 0x3F)
        {
          sub_100024CF8(319, (unint64_t *)&unk_100EA9FA8, (void (*)(uint64_t))type metadata accessor for WeatherDataOverrides);
          if (v4 <= 0x3F) {
            swift_initStructMetadata();
          }
        }
      }
    }
  }
}

void sub_100024CA4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = type metadata accessor for Optional();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_100024CF8(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = type metadata accessor for Optional();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_100024D50(uint64_t a1, uint64_t a2)
{
  return sub_100024D6C(a1, a2, *(unsigned char *)(v2 + 16));
}

uint64_t sub_100024D6C(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v5 = type metadata accessor for DispatchQoS();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void **)a1;
  if (*(uint64_t *)(a1 + 8) < 1) {
    static DispatchQoS.userInitiated.getter();
  }
  else {
    static DispatchQoS.utility.getter();
  }
  uint64_t v10 = sub_100115F30(v9, a3 & 1, (uint64_t)v8);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return v10;
}

uint64_t sub_100024E80()
{
  return sub_100024E9C(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_100024E9C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a1 + OBJC_IVAR____TtC7Weather49WeatherConditionBackgroundModifierObservableModel__model;
  swift_beginAccess();
  sub_100024F08(a2, v3);
  return swift_endAccess();
}

uint64_t sub_100024F08(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10017DF08(&qword_100E64A60);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

void sub_100024F70(void *a1@<X0>, const void *a2@<X1>, float *a3@<X8>)
{
  uint64_t v4 = a1[1];
  if (__OFSUB__(v4, *a1))
  {
    __break(1u);
  }
  else
  {
    double v5 = (double)(v4 - *a1);
    memcpy(__dst, a2, 0x49uLL);
    sub_1001F4DEC((uint64_t)__dst, (void (*)(void, void, void, void, void, void, void, void, void, char))sub_1001910C8);
    sub_1001BEAF4();
    sub_1001F4DEC((uint64_t)__dst, (void (*)(void, void, void, void, void, void, void, void, void, char))sub_10018CCC4);
    double v6 = v5 + -1.0;
    if (v5 + -1.0 < 0.0) {
      double v6 = 0.0;
    }
    double v7 = v6 * v9;
    sub_1001F4DEC((uint64_t)__dst, (void (*)(void, void, void, void, void, void, void, void, void, char))sub_1001910C8);
    sub_1001BEAF4();
    sub_1001F4DEC((uint64_t)__dst, (void (*)(void, void, void, void, void, void, void, void, void, char))sub_10018CCC4);
    float v8 = v7 + sub_10004D56C() * v5;
    *a3 = v8;
  }
}

uint64_t sub_10002507C(unsigned __int8 *a1)
{
  return sub_1000250A4(*a1);
}

uint64_t sub_1000250A4(uint64_t a1)
{
  return sub_100199EE0(a1, (void (*)(void))sub_10019B968);
}

uint64_t sub_1000250C4(unsigned __int8 *a1)
{
  return sub_1000250EC(*a1);
}

uint64_t sub_1000250EC(uint64_t a1)
{
  return sub_100199EE0(a1, (void (*)(void))sub_10019CA88);
}

uint64_t sub_10002510C(unsigned __int8 *a1)
{
  return sub_100025134(*a1);
}

uint64_t sub_100025134(uint64_t a1)
{
  return sub_100199EE0(a1, (void (*)(void))sub_10019A344);
}

uint64_t sub_100025154@<X0>(unsigned char *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X8>)
{
  int v8 = a4 & 1;
  sub_1001B1E64(a2, a2[3]);
  sub_1001D6B94(a1, a3, v8, a5);
  uint64_t v9 = type metadata accessor for LocationViewModel();

  return _s7Weather24LocationCompositionStateOwst_0(a5, 0, 1, v9);
}

uint64_t sub_1000251E0()
{
  ProxyContainer.public.getter();
  sub_10017DF08(&qword_100E66BC8);
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  swift_release();
  ProxyContainer.private.getter();
  RegistrationContainer.lazy(block:)();

  return swift_release();
}

uint64_t sub_100025288(void (*a1)(), void (*a2)(), uint64_t (*a3)(), uint64_t (*a4)())
{
  uint64_t v5 = v4;
  uint64_t v10 = type metadata accessor for UnfairLock.Options();
  __chkstk_darwin(v10 - 8);
  *(unsigned char *)(v4 + 16) = 1;
  uint64_t v11 = v4 + qword_100EB1940;
  uint64_t v12 = type metadata accessor for URL();
  _s7Weather24LocationCompositionStateOwst_0(v11, 1, 1, v12);
  *(void *)(v4 + qword_100EB1948) = 100;
  *(_OWORD *)(v4 + qword_100EB1950) = xmmword_100C5DF20;
  *(unsigned char *)(v4 + qword_100EB1958) = 1;
  uint64_t v13 = qword_100EB1960;
  static UnfairLock.Options.dataSynchronization.getter();
  type metadata accessor for UnfairLock();
  swift_allocObject();
  *(void *)(v4 + v13) = UnfairLock.init(options:)();
  uint64_t v14 = (void (**)())(v4 + qword_100EB1968);
  char *v14 = sub_100B2D934;
  v14[1] = 0;
  uint64_t v15 = (uint64_t (**)())(v4 + qword_100EB1970);
  *uint64_t v15 = sub_100B2DA94;
  v15[1] = 0;
  sub_100058AEC();
  if (a1)
  {
    char *v14 = a1;
    v14[1] = a2;
    swift_release();
  }
  if (a3)
  {
    *uint64_t v15 = a3;
    v15[1] = a4;
    swift_release();
  }
  return v5;
}

void sub_100025418()
{
  uint64_t v0 = type metadata accessor for Location();
  if (v1 <= 0x3F)
  {
    uint64_t v7 = *(void *)(v0 - 8) + 64;
    type metadata accessor for LocationComponentAction(319);
    if (v2 <= 0x3F)
    {
      sub_1000159D8();
      if (v3 <= 0x3F)
      {
        swift_getTupleTypeLayout3();
        int v8 = &v6;
        type metadata accessor for LocationOfInterest();
        if (v4 <= 0x3F)
        {
          swift_getTupleTypeLayout2();
          swift_getTupleTypeLayout2();
          uint64_t v9 = &v5;
          swift_initEnumMetadataMultiPayload();
        }
      }
    }
  }
}

uint64_t sub_100025594(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, double a7)
{
  uint64_t v23 = a5;
  uint64_t v24 = a6;
  uint64_t v21 = a3;
  uint64_t v22 = a4;
  uint64_t v20 = a2;
  uint64_t v10 = type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin(v10);
  uint64_t v11 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for DispatchQoS();
  __chkstk_darwin(v15 - 8);
  *(void *)(v7 + 16) = 0;
  sub_1001ABC4C(0, (unint64_t *)&qword_100E62D10);
  static DispatchQoS.background.getter();
  (*(void (**)(char *, void, uint64_t))(v12 + 104))(v14, enum case for OS_dispatch_queue.AutoreleaseFrequency.workItem(_:), v11);
  uint64_t v25 = _swiftEmptyArrayStorage;
  sub_1001A58D4((unint64_t *)&qword_100E62D18, 255, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_10017DF08(&qword_100E62D20);
  sub_1001246C8((unint64_t *)&qword_100E62D28, &qword_100E62D20);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  uint64_t v16 = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  *(double *)(v7 + 56) = a7;
  uint64_t v17 = v20;
  *(void *)(v7 + 24) = a1;
  *(void *)(v7 + 32) = v17;
  uint64_t v18 = v22;
  *(void *)(v7 + 40) = v21;
  *(void *)(v7 + 48) = v18;
  *(void *)(v7 + 64) = v23;
  *(void *)(v7 + 72) = v24;
  *(void *)(v7 + 80) = v16;
  return v7;
}

uint64_t type metadata accessor for NetworkActivityManager()
{
  return self;
}

uint64_t sub_100025868(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for MainAction();
  __chkstk_darwin(v2);
  unint64_t v4 = (char *)v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100E622A0 != -1) {
    swift_once();
  }
  LOBYTE(v7[0]) = 1;
  sub_100039C08(&qword_100E6BBC8);
  uint64_t result = Updatable.save<A>(setting:value:)();
  char v6 = *(uint64_t (**)(uint64_t))(a1 + 16);
  if (v6)
  {
    type metadata accessor for EnvironmentAction();
    swift_storeEnumTagMultiPayload();
    swift_storeEnumTagMultiPayload();
    uint64_t v8 = 0;
    memset(v7, 0, sizeof(v7));
    swift_retain();
    sub_1001AAF58((uint64_t)v4, (uint64_t)v7, v6);
    sub_100178160((uint64_t)v7, (uint64_t *)&unk_100EA01F0);
    sub_100158A74((uint64_t)v4, (void (*)(void))type metadata accessor for MainAction);
    return sub_1001361AC((uint64_t)v6);
  }
  return result;
}

uint64_t sub_100025A1C()
{
  uint64_t v14 = &unk_100C817D8;
  uint64_t v15 = &unk_100C817D8;
  uint64_t v16 = &unk_100C817F0;
  uint64_t v17 = &unk_100C81808;
  uint64_t v9 = &unk_100C817D8;
  uint64_t result = type metadata accessor for WeatherData(319);
  if (v1 <= 0x3F)
  {
    uint64_t v10 = *(void *)(result - 8) + 64;
    uint64_t result = type metadata accessor for PreprocessedWeatherData();
    if (v2 <= 0x3F)
    {
      uint64_t v11 = *(void *)(result - 8) + 64;
      uint64_t result = type metadata accessor for NewsDataModel();
      if (v3 <= 0x3F)
      {
        uint64_t v12 = *(void *)(result - 8) + 64;
        swift_getTupleTypeLayout();
        uint64_t v18 = &v13;
        swift_getTupleTypeLayout2();
        uint64_t v19 = &v8;
        uint64_t result = type metadata accessor for AvailableDataSets();
        if (v4 <= 0x3F)
        {
          swift_getTupleTypeLayout2();
          uint64_t v20 = &v7;
          uint64_t v21 = &unk_100C817D8;
          uint64_t result = type metadata accessor for WeatherStatisticsModel();
          if (v5 <= 0x3F)
          {
            swift_getTupleTypeLayout2();
            uint64_t v22 = &v6;
            uint64_t v23 = &unk_100C81808;
            swift_initEnumMetadataMultiPayload();
            return 0;
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_100025C28(uint64_t a1)
{
  return a1;
}

uint64_t sub_100025CB4()
{
  uint64_t v1 = v0;
  type metadata accessor for ContainerScope();
  sub_100179C0C();
  __chkstk_darwin(v2);
  sub_10012B938();
  uint64_t v3 = OBJC_IVAR____TtC7Weather11AppDelegate____lazy_storage___container;
  if (*(void *)(v0 + OBJC_IVAR____TtC7Weather11AppDelegate____lazy_storage___container))
  {
    uint64_t v4 = *(void *)(v0 + OBJC_IVAR____TtC7Weather11AppDelegate____lazy_storage___container);
  }
  else
  {
    sub_10001F464();
    uint64_t v5 = sub_10017FAE8();
    v6(v5);
    uint64_t v4 = ContainerManager.container(for:)();
    swift_release();
    uint64_t v7 = sub_10017E264();
    v8(v7);
    *(void *)(v1 + v3) = v4;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v4;
}

uint64_t sub_100025DB0()
{
  sub_100179DB4();
  *(unsigned char *)(*(void *)(v0 + 112) + 208) = 0;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100025E58()
{
  type metadata accessor for SettingReader();
  static SettingReader.shared.getter();
  if (qword_100E62660 != -1) {
    swift_once();
  }
  char v0 = SettingReader.isEnabled(_:with:)();
  uint64_t result = swift_release();
  if (v0)
  {
    uint64_t v4 = &type metadata for UIKitFlags;
    unint64_t v5 = sub_100224994();
    char v2 = isFeatureEnabled(_:)();
    uint64_t result = _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v3);
  }
  else
  {
    char v2 = 0;
  }
  byte_100F51C48 = v2 & 1;
  return result;
}

uint64_t sub_100025F1C()
{
  uint64_t v7 = &unk_100C4F2C0;
  char v8 = &unk_100C4F2D8;
  uint64_t result = type metadata accessor for Location();
  if (v1 <= 0x3F)
  {
    uint64_t v9 = *(void *)(result - 8) + 64;
    uint64_t v2 = v9;
    swift_getTupleTypeLayout2();
    uint64_t v10 = &v6;
    swift_getTupleTypeLayout3();
    uint64_t v11 = &v5;
    uint64_t v12 = &unk_100C4F3B8;
    char v13 = &unk_100C4F3D0;
    uint64_t v14 = &unk_100C4F3D0;
    uint64_t v15 = (char *)&value witness table for Builtin.Int64 + 64;
    uint64_t v16 = &unk_100C4F3E8;
    uint64_t v17 = v2;
    uint64_t v18 = &unk_100C4F2D8;
    uint64_t v19 = &unk_100C4F400;
    uint64_t v20 = &unk_100C4F2D8;
    uint64_t v21 = v2;
    swift_getTupleTypeLayout2();
    uint64_t v22 = &v4;
    swift_getTupleTypeLayout2();
    uint64_t v23 = &v3;
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_100026074(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ScenePhase();
  sub_100179C0C();
  uint64_t v6 = v5;
  __chkstk_darwin(v7);
  sub_1001626E0();
  uint64_t v10 = v9 - v8;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v9 - v8, a2, v4);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 88))(v10, v4);
  if (result == enum case for ScenePhase.active(_:)) {
    return sub_10004CC3C(v2);
  }
  if (result != enum case for ScenePhase.inactive(_:)
    && result != enum case for ScenePhase.background(_:))
  {
    return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v10, v4);
  }
  return result;
}

unint64_t sub_100026188(uint64_t a1)
{
  unint64_t result = sub_10017DFE0(a1);
  if (!result)
  {
    uint64_t v5 = v4;
    sub_10018C6DC(v3);
    v5();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, v1);
  }
  return result;
}

void sub_100026204()
{
  sub_1000266FC(319, (unint64_t *)&qword_100E77A78, (uint64_t (*)(uint64_t))&type metadata accessor for DynamicTypeSize, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
  if (v0 <= 0x3F)
  {
    sub_100026638(319, (unint64_t *)&qword_100E66100, &qword_100E65ED8, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
    if (v1 <= 0x3F)
    {
      sub_100026638(319, &qword_100EB48E8, &qword_100EAA930, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
      if (v2 <= 0x3F)
      {
        type metadata accessor for WeatherConditionBackgroundModel();
        if (v3 <= 0x3F)
        {
          sub_1000266FC(319, &qword_100EB48F0, (uint64_t (*)(uint64_t))&type metadata accessor for AnimatedGradient, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for State);
          if (v4 <= 0x3F)
          {
            sub_100026638(319, &qword_100EB48F8, &qword_100E64A60, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for State);
            if (v5 <= 0x3F)
            {
              sub_100026638(319, &qword_100EB4900, &qword_100EAA930, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for State);
              if (v6 <= 0x3F)
              {
                sub_100026638(319, (unint64_t *)&unk_100EB4908, &qword_100EB4848, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for State);
                if (v7 <= 0x3F) {
                  swift_initStructMetadata();
                }
              }
            }
          }
        }
      }
    }
  }
}

void sub_1000265D8(uint64_t a1, unint64_t *a2, uint64_t *a3, uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = sub_10018C6DC(a3);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_100026638(uint64_t a1, unint64_t *a2, uint64_t *a3, uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = sub_10018C6DC(a3);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_100026698(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1000266FC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t destroy for NextHourPrecipitationLeadingValueRule()
{
  swift_release();

  return swift_release();
}

unint64_t sub_10002679C()
{
  unint64_t result = qword_100E84250;
  if (!qword_100E84250)
  {
    sub_10018C6DC(&qword_100E83188);
    sub_10018C6DC(&qword_100E831A0);
    sub_10024D5E4((uint64_t)&unk_100E831A8);
    sub_10020BC08();
    swift_getOpaqueTypeConformance2();
    sub_10024D5E4((uint64_t)&unk_100E84258);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E84250);
  }
  return result;
}

uint64_t type metadata accessor for LocationViewObserverViewState()
{
  return self;
}

uint64_t sub_1000268D4()
{
  uint64_t countAndFlagsBits = Location.name.getter();
  Location.kind.getter();
  uint64_t v1 = Location.Identifier.Kind.rawValue.getter();
  uint64_t v3 = v2;
  if (v1 == Location.Identifier.Kind.rawValue.getter() && v3 == v4)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v6 & 1) == 0) {
      return countAndFlagsBits;
    }
  }
  swift_bridgeObjectRelease();
  id v7 = [self mainBundle];
  v11._object = (void *)0x8000000100CAF170;
  v8._uint64_t countAndFlagsBits = 0x7461636F4C20794DLL;
  v8._object = (void *)0xEB000000006E6F69;
  v9._uint64_t countAndFlagsBits = 0;
  v9._object = (void *)0xE000000000000000;
  v11._uint64_t countAndFlagsBits = 0xD00000000000003DLL;
  uint64_t countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v8, (Swift::String_optional)0, (NSBundle)v7, v9, v11)._countAndFlagsBits;

  return countAndFlagsBits;
}

uint64_t sub_100026A1C()
{
  uint64_t v1 = v0;
  uint64_t v2 = v0 + 16;
  swift_beginAccess();
  sub_1001B1E64(v2, v1[19]);
  sub_1001A3364();
  uint64_t v3 = (void (*)(char *, uint64_t, uint64_t))dispatch thunk of LocationsOfInterestManagerType.locations.getter();
  swift_endAccess();
  sub_10008D34C(v1, v3);
  sub_1001A3364();
  swift_bridgeObjectRelease();
  uint64_t v4 = v2[2];
  if (!v4) {
    return swift_bridgeObjectRelease();
  }
  uint64_t v5 = *(void *)(type metadata accessor for LocationOfInterest() - 8);
  uint64_t v6 = (uint64_t)v2 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
  uint64_t v7 = *(void *)(v5 + 72);
  swift_bridgeObjectRetain();
  do
  {
    sub_1006A424C(v6, (uint64_t)v1);
    v6 += v7;
    --v4;
  }
  while (v4);
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_100026B44()
{
  uint64_t result = type metadata accessor for Binding();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for State();
    if (v2 <= 0x3F)
    {
      type metadata accessor for TransitionContext();
      type metadata accessor for Optional();
      uint64_t result = type metadata accessor for State();
      if (v3 <= 0x3F)
      {
        swift_initStructMetadata();
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_100026CC8()
{
  uint64_t v1 = v0;
  unint64_t v2 = (void *)(v0 + 56);
  sub_1001B1E64((void *)(v0 + 56), *(void *)(v0 + 80));
  uint64_t v3 = dispatch thunk of SavedLocationsManagerType.savedLocations.getter();
  swift_retain();
  uint64_t v4 = sub_1000A85E8(v3, v1);
  swift_bridgeObjectRelease();
  sub_1001B1E64(v2, *(void *)(v1 + 80));
  unint64_t v5 = *(void *)(dispatch thunk of SavedLocationsManagerType.savedLocations.getter() + 16);
  uint64_t v6 = swift_bridgeObjectRelease();
  if (v5 >> 31)
  {
    __break(1u);
  }
  else
  {
    uint64_t v6 = (uint64_t)v4;
    unint64_t v7 = v5;
  }
  return FollowingLocationListData.init(locations:locationCount:)(v6, v7);
}

uint64_t sub_100026DA0(uint64_t a1)
{
  return a1;
}

uint64_t sub_100026E2C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v17[1] = a4;
  uint64_t v5 = type metadata accessor for TimeZone();
  uint64_t v18 = *(void *)(v5 - 8);
  uint64_t v19 = v5;
  __chkstk_darwin(v5);
  unint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for Date();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001B1E64(a1 + 2, a1[5]);
  dispatch thunk of MoonDataProviderType.nextFullMoonDate(for:timeZone:coordinate:)();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v10, 1, v11) == 1)
  {
    sub_100178110((uint64_t)v10, (uint64_t *)&unk_100E73CA0);
    return 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v14, v10, v11);
    sub_1001B1E64(a1 + 7, a1[10]);
    Location.timeZone.getter();
    uint64_t v15 = dispatch thunk of MoonStringBuilderType.nextFullMoonDurationString(fullMoonDate:now:timeZone:)();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v7, v19);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
  return v15;
}

uint64_t sub_1000270D8()
{
  ProxyContainer.public.getter();
  sub_10017DF08(&qword_100E87EE8);
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  swift_release();
  ProxyContainer.private.getter();
  RegistrationContainer.lazy(block:)();

  return swift_release();
}

uint64_t sub_100027180@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  char v5 = a2 & 1;
  sub_100195B7C(a1, a2 & 1);
  sub_100201DE4();
  sub_10018F6D8(a1, v5);
  static Alignment.bottom.getter();
  _FrameLayout.init(width:height:alignment:)();
  static Color.white.getter();
  uint64_t v6 = Color.opacity(_:)();
  swift_release();
  uint64_t result = swift_getKeyPath();
  *(void *)a3 = v8;
  *(unsigned char *)(a3 + 8) = v9;
  *(void *)(a3 + 16) = v10;
  *(unsigned char *)(a3 + 24) = v11;
  *(void *)(a3 + 32) = v12;
  *(void *)(a3 + 40) = v13;
  *(void *)(a3 + 48) = result;
  *(void *)(a3 + 56) = v6;
  return result;
}

uint64_t sub_100027284(uint64_t *a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  Hasher.init(_seed:)();
  swift_bridgeObjectRetain();
  Namespace.ID.hash(into:)();
  Swift::Int v6 = Hasher._finalize()();
  uint64_t v7 = -1 << *(unsigned char *)(v5 + 32);
  unint64_t v8 = v6 & ~v7;
  sub_1001830F8();
  if ((v9 & 1) == 0)
  {
LABEL_7:
    swift_bridgeObjectRelease();
    swift_isUniquelyReferenced_nonNull_native();
    sub_1001A4B8C();
    sub_100013BEC(a2, v8, v13);
    *unint64_t v2 = v14;
    swift_bridgeObjectRelease();
    uint64_t result = 1;
    goto LABEL_8;
  }
  if ((static Namespace.ID.== infix(_:_:)() & 1) == 0)
  {
    uint64_t v10 = ~v7;
    do
    {
      unint64_t v8 = (v8 + 1) & v10;
      sub_1001830F8();
      if ((v11 & 1) == 0) {
        goto LABEL_7;
      }
    }
    while ((static Namespace.ID.== infix(_:_:)() & 1) == 0);
  }
  swift_bridgeObjectRelease();
  uint64_t result = 0;
  a2 = *(void *)(*(void *)(*v2 + 48) + 8 * v8);
LABEL_8:
  *a1 = a2;
  return result;
}

uint64_t sub_1000273A4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for WeatherMapOverlayKind();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  sub_1001626E0();
  uint64_t v6 = v5 - v4;
  uint64_t v7 = type metadata accessor for MapComponentViewModel();
  __chkstk_darwin(v7 - 8);
  sub_1001626E0();
  uint64_t v10 = v9 - v8;
  uint64_t v11 = type metadata accessor for LocationComponentViewModel();
  __chkstk_darwin(v11);
  sub_1001626E0();
  uint64_t v14 = v13 - v12;
  sub_1001356AC(a1, v13 - v12);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    switch(EnumCaseMultiPayload)
    {
      case 18:
        sub_1001EC58C(a1, (uint64_t (*)(void))type metadata accessor for LocationComponentViewModel);
        sub_100163C60();
        return 5;
      case 5:
        sub_100891044(v14, v10);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v6, v10, v2);
        if ((*(unsigned int (**)(uint64_t, uint64_t))(v3 + 88))(v6, v2) == enum case for WeatherMapOverlayKind.wind(_:))
        {
          if (qword_100E623C0 != -1) {
            swift_once();
          }
          uint64_t v17 = sub_10017DF08(&qword_100E63520);
          sub_1002102B0(v17, (uint64_t)qword_100F515D8);
          swift_beginAccess();
          Tips.Parameter.wrappedValue.getter();
          swift_endAccess();
          sub_1001EC58C(a1, (uint64_t (*)(void))type metadata accessor for LocationComponentViewModel);
          sub_1001EC58C(v10, (uint64_t (*)(void))type metadata accessor for MapComponentViewModel);
          if (v18) {
            return 2;
          }
          else {
            return 3;
          }
        }
        else
        {
          sub_1001EC58C(a1, (uint64_t (*)(void))type metadata accessor for LocationComponentViewModel);
          sub_1001EC58C(v10, (uint64_t (*)(void))type metadata accessor for MapComponentViewModel);
          (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v6, v2);
          return 2;
        }
      case 16:
        sub_1001EC58C(a1, (uint64_t (*)(void))type metadata accessor for LocationComponentViewModel);
        sub_100163C60();
        return 4;
      case 1:
        sub_1001EC58C(a1, (uint64_t (*)(void))type metadata accessor for LocationComponentViewModel);
        sub_100163C60();
        return 0;
      default:
        sub_1001EC58C(a1, (uint64_t (*)(void))type metadata accessor for LocationComponentViewModel);
        sub_100163C60();
        return 6;
    }
  }
  else
  {
    sub_1001EC58C(a1, (uint64_t (*)(void))type metadata accessor for LocationComponentViewModel);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return 1;
  }
}

uint64_t destroy for HostsLocationHeaderFrameCoordinatorViewModifier()
{
  swift_release();

  return swift_release();
}

void sub_1000277CC(uint64_t a1@<X8>)
{
  sub_10017C924();
  uint64_t v3 = sub_10017DF08(&qword_100E885C0);
  __chkstk_darwin(v3 - 8);
  sub_10011BFD8();
  uint64_t v4 = type metadata accessor for AirQuality();
  sub_100179C0C();
  uint64_t v6 = v5;
  __chkstk_darwin(v7);
  sub_1001626E0();
  uint64_t v11 = v10 - v9;
  if (qword_100E62A40 != -1) {
    swift_once();
  }
  sub_10021A5E0(&qword_100EAC560, v8, (void (*)(uint64_t))type metadata accessor for LocationViewComponentFactory);
  Configurable.setting<A>(_:)();
  if (v18 == 1) {
    goto LABEL_10;
  }
  if (qword_100E62A30 != -1) {
    swift_once();
  }
  Configurable.setting<A>(_:)();
  if (v17 != 1)
  {
    type metadata accessor for WeatherData(0);
    WeatherDataModel.airQuality.getter();
    if (_s7Weather24LocationCompositionStateOwet_0(v1, 1, v4) != 1)
    {
      uint64_t v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32);
      v16(v11, v1, v4);
      v16(a1, v11, v4);
      type metadata accessor for LocationViewComponent();
      swift_storeEnumTagMultiPayload();
      uint64_t v12 = sub_100180994();
      goto LABEL_11;
    }
    sub_1001AB060(v1, &qword_100E885C0);
LABEL_10:
    type metadata accessor for LocationViewComponent();
    uint64_t v12 = sub_100162E38();
LABEL_11:
    _s7Weather24LocationCompositionStateOwst_0(v12, v13, v14, v15);
    goto LABEL_12;
  }
  sub_100A63030(a1);
LABEL_12:
  sub_100162694();
}

uint64_t sub_100027A40()
{
  uint64_t result = type metadata accessor for DetailCondition();
  if (v1 <= 0x3F)
  {
    uint64_t v6 = *(void *)(result - 8) + 64;
    uint64_t v7 = (char *)&value witness table for Builtin.Int64 + 64;
    uint64_t result = type metadata accessor for Location();
    if (v2 <= 0x3F)
    {
      uint64_t v8 = *(void *)(result - 8) + 64;
      uint64_t result = type metadata accessor for WeatherMapOverlayKind();
      if (v3 <= 0x3F)
      {
        swift_getTupleTypeLayout3();
        uint64_t v9 = &v5;
        uint64_t result = type metadata accessor for WeatherCondition();
        if (v4 <= 0x3F)
        {
          uint64_t v10 = *(void *)(result - 8) + 64;
          swift_initEnumMetadataMultiPayload();
          return 0;
        }
      }
    }
  }
  return result;
}

uint64_t sub_100027BA0()
{
  Location.kind.getter();
  uint64_t v0 = Location.Identifier.Kind.rawValue.getter();
  uint64_t v2 = v1;
  if (v0 == Location.Identifier.Kind.rawValue.getter() && v2 == v3)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v5 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v5 & 1) == 0) {
      return 2;
    }
  }
  id v7 = [self currentDevice];
  id v8 = [v7 userInterfaceIdiom];

  if (v8) {
    return 2;
  }
  else {
    return 1;
  }
}

uint64_t sub_100027C7C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = type metadata accessor for Date();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  id v7 = (char *)&v15[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for TimeState();
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v15[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E97FD8);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v16)
  {
    sub_1001B1E64(v15, v16);
    uint64_t v12 = sub_1000AE1C8();
    sub_1002168DC(v12 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_time, (uint64_t)v10);
    swift_release();
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v10, v4);
    type metadata accessor for TimeManager();
    swift_allocObject();
    uint64_t v13 = sub_10001B8C4(v7);
    uint64_t result = _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v15);
    *a2 = v13;
    a2[1] = (uint64_t)&off_100E0D778;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100027E44(uint64_t a1, void *a2)
{
  if (qword_100E62AE8 != -1) {
    swift_once();
  }
  if (*a2 != -1) {
    swift_once();
  }
  return SettingReader.read<A>(_:)();
}

uint64_t destroy for TrackVisibilityModifier()
{
  swift_release();
  swift_release();

  return sub_10018F6E4();
}

uint64_t sub_100027F28@<X0>(void (*a1)(void)@<X1>, uint64_t a2@<X8>)
{
  a1();
  uint64_t v3 = type metadata accessor for WeatherConditionBackgroundModel();

  return _s7Weather24LocationCompositionStateOwst_0(a2, 0, 1, v3);
}

uint64_t sub_100027F7C(uint64_t a1)
{
  return sub_100027F84(a1, (void *)(v1 + 16));
}

uint64_t sub_100027F84(uint64_t a1, void *a2)
{
  return dispatch thunk of WeatherConditionBackgroundModelFactoryType.makeModel(from:)();
}

void sub_100027FDC()
{
  id v1 = [self defaultCenter];
  [v1 addObserver:v0 selector:"postReduceMotionIfChanged" name:UIAccessibilityReduceMotionStatusDidChangeNotification object:0];
  [v1 addObserver:v0 selector:"postSwitchControlIfChanged" name:UIAccessibilitySwitchControlStatusDidChangeNotification object:0];
  [v1 addObserver:v0 selector:"postVoiceOverIfChanged" name:UIAccessibilityVoiceOverStatusDidChangeNotification object:0];
}

uint64_t sub_1000280B0()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    sub_1001627C0(result);
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void sub_100028128()
{
  id v0 = [objc_allocWithZone((Class)NSDateFormatter) init];
  [v0 setDoesRelativeDateFormatting:1];
  [v0 setTimeStyle:1];

  qword_100E775B0 = (uint64_t)v0;
}

unint64_t sub_100028194(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for LocationViewComponent();
  __chkstk_darwin(v4 - 8);
  sub_1001626E0();
  uint64_t v103 = v6 - v5;
  uint64_t v7 = sub_10017DF08(&qword_100E64E80);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  uint64_t v10 = (char *)&v99 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v99 - v11;
  uint64_t v13 = (int *)type metadata accessor for LocationContentState();
  sub_100162E4C();
  __chkstk_darwin(v14);
  sub_1001626E0();
  uint64_t v17 = v16 - v15;
  char v18 = (int *)type metadata accessor for LocationViewConfigurationInputs();
  sub_100162E4C();
  __chkstk_darwin(v19);
  sub_1001626E0();
  uint64_t v22 = v21 - v20;
  id v23 = [self currentDevice];
  id v24 = [v23 userInterfaceIdiom];

  if (v24) {
    goto LABEL_5;
  }
  if (qword_100E62B78 != -1) {
    swift_once();
  }
  if (byte_100EB2450 != 1) {
    return 0xC000000000000004;
  }
LABEL_5:
  v101 = v12;
  v102 = v10;
  type metadata accessor for Location();
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v25 + 16))(v22, a1);
  sub_10014FEFC(a1 + v13[5], v22 + v18[5], (void (*)(void))type metadata accessor for WeatherData);
  sub_10014FEFC(a1 + v13[6], v22 + v18[6], (void (*)(void))type metadata accessor for PreprocessedWeatherData);
  sub_10014FEFC(a1 + v13[7], v22 + v18[7], (void (*)(void))type metadata accessor for NewsDataModel);
  char v26 = *(unsigned char *)(a1 + v13[9]);
  *(unsigned char *)(v22 + v18[8]) = *(unsigned char *)(a1 + v13[8]);
  *(unsigned char *)(v22 + v18[9]) = 2;
  *(unsigned char *)(v22 + v18[10]) = v26;
  *(unsigned char *)(v22 + v18[11]) = 0;
  uint64_t v27 = *(void *)(v2 + 40);
  uint64_t v28 = *(void *)(v2 + 48);
  sub_1001B1E64((void *)(v2 + 16), v27);
  unint64_t v29 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v28 + 16))(v22, v27, v28);
  if (qword_100E627A0 != -1) {
    swift_once();
  }
  uint64_t v30 = type metadata accessor for Logger();
  sub_1002102B0(v30, (uint64_t)qword_100F51DF8);
  sub_10014FEFC(a1, v17, (void (*)(void))type metadata accessor for LocationContentState);
  swift_retain_n();
  uint64_t v31 = Logger.logObject.getter();
  os_log_type_t v32 = static os_log_type_t.default.getter();
  BOOL v33 = os_log_type_enabled(v31, v32);
  uint64_t v104 = v2;
  if (v33)
  {
    uint64_t v34 = swift_slowAlloc();
    uint64_t v100 = v22;
    uint64_t v35 = v34;
    uint64_t v36 = swift_slowAlloc();
    *(_DWORD *)uint64_t v35 = 141558531;
    uint64_t v105 = 1752392040;
    uint64_t v106 = v36;
    uint64_t v99 = a1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v35 + 12) = 2081;
    uint64_t v37 = Location.name.getter();
    uint64_t v105 = sub_10016414C(v37, v38, &v106);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_100B4F484(v17, (void (*)(void))type metadata accessor for LocationContentState);
    *(_WORD *)(v35 + 22) = 2082;
    uint64_t v2 = v35 + 24;
    unint64_t v39 = sub_100BB59B4(v29);
    uint64_t v105 = sub_10016414C(v39, v40, &v106);
    a1 = v99;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v31, v32, "Location configuration for %{private,mask.hash}s chosen: %{public}s", (uint8_t *)v35, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v22 = v100;
    swift_slowDealloc();
  }
  else
  {
    sub_100B4F484(v17, (void (*)(void))type metadata accessor for LocationContentState);

    uint64_t v41 = swift_release_n();
  }
  switch((v29 >> 59) & 0x1E | (v29 >> 2) & 1)
  {
    case 1uLL:
      sub_100180C58();
      __chkstk_darwin(v44);
      uint64_t v45 = sub_100188494();
      sub_100BA42AC(v45, (void (*)(uint64_t))sub_100B4BC24);
      sub_10019F830();
      sub_100B4F484(v22, (void (*)(void))type metadata accessor for LocationViewConfigurationInputs);
      return v2 | 4;
    case 2uLL:
      sub_100180C58();
      __chkstk_darwin(v46);
      uint64_t v47 = sub_100188494();
      sub_100479350(v47, (void (*)(uint64_t))sub_100B51884);
      sub_10019F830();
      sub_100B4F484(v22, (void (*)(void))type metadata accessor for LocationViewConfigurationInputs);
      return v2 | 0x1000000000000000;
    case 3uLL:
      sub_100180C58();
      __chkstk_darwin(v48);
      uint64_t v49 = sub_100188494();
      sub_100B59584(v49, (void (*)(uint64_t))sub_100B51884);
      sub_10019F830();
      sub_100B4F484(v22, (void (*)(void))type metadata accessor for LocationViewConfigurationInputs);
      unint64_t v50 = 0x1000000000000004;
      return v2 | v50;
    case 4uLL:
      sub_100180C58();
      __chkstk_darwin(v51);
      uint64_t v52 = sub_100188494();
      sub_1007257F8(v52, (void (*)(uint64_t))sub_100B51884);
      sub_10019F830();
      sub_100B4F484(v22, (void (*)(void))type metadata accessor for LocationViewConfigurationInputs);
      return v2 | 0x2000000000000000;
    case 5uLL:
      sub_100180C58();
      __chkstk_darwin(v53);
      uint64_t v54 = sub_100188494();
      sub_100820FE4(v54, (void (*)(uint64_t))sub_100B51884);
      sub_10019F830();
      sub_100B4F484(v22, (void (*)(void))type metadata accessor for LocationViewConfigurationInputs);
      unint64_t v50 = 0x2000000000000004;
      return v2 | v50;
    case 6uLL:
      sub_100180C58();
      __chkstk_darwin(v55);
      uint64_t v56 = sub_100188494();
      sub_1009D13B8(v56, (void (*)(uint64_t))sub_100B51884);
      sub_10019F830();
      sub_100B4F484(v22, (void (*)(void))type metadata accessor for LocationViewConfigurationInputs);
      return v2 | 0x3000000000000000;
    case 7uLL:
      sub_100180C58();
      __chkstk_darwin(v57);
      uint64_t v58 = sub_100188494();
      sub_10094F4F4(v58, (void (*)(uint64_t))sub_100B51884);
      sub_10019F830();
      sub_100B4F484(v22, (void (*)(void))type metadata accessor for LocationViewConfigurationInputs);
      unint64_t v50 = 0x3000000000000004;
      return v2 | v50;
    case 8uLL:
      sub_100180C58();
      __chkstk_darwin(v59);
      uint64_t v60 = sub_100188494();
      sub_1007CD430(v60, (void (*)(uint64_t))sub_100B51884);
      sub_10019F830();
      sub_100B4F484(v22, (void (*)(void))type metadata accessor for LocationViewConfigurationInputs);
      return v2 | 0x4000000000000000;
    case 9uLL:
      sub_100180C58();
      __chkstk_darwin(v61);
      uint64_t v62 = sub_100188494();
      sub_1009E97B8(v62, (void (*)(uint64_t))sub_100B51884);
      sub_10019F830();
      sub_100B4F484(v22, (void (*)(void))type metadata accessor for LocationViewConfigurationInputs);
      unint64_t v50 = 0x4000000000000004;
      return v2 | v50;
    case 0xAuLL:
      sub_100180C58();
      __chkstk_darwin(v63);
      uint64_t v64 = sub_100188494();
      sub_1003BD7C0(v64, (void (*)(uint64_t))sub_100B51884);
      sub_10019F830();
      sub_100B4F484(v22, (void (*)(void))type metadata accessor for LocationViewConfigurationInputs);
      unint64_t v50 = 0x5000000000000000;
      return v2 | v50;
    case 0xBuLL:
      sub_100180C58();
      __chkstk_darwin(v65);
      uint64_t v66 = sub_100188494();
      sub_10042867C(v66, (void (*)(uint64_t))sub_100B51884);
      sub_10019F830();
      sub_100B4F484(v22, (void (*)(void))type metadata accessor for LocationViewConfigurationInputs);
      unint64_t v50 = 0x5000000000000004;
      return v2 | v50;
    case 0xCuLL:
      sub_100180C58();
      __chkstk_darwin(v67);
      uint64_t v68 = sub_100188494();
      sub_1007928D8(v68, (void (*)(uint64_t))sub_100B51884);
      sub_10019F830();
      sub_100B4F484(v22, (void (*)(void))type metadata accessor for LocationViewConfigurationInputs);
      return v2 | 0x6000000000000000;
    case 0xDuLL:
      sub_100180C58();
      __chkstk_darwin(v69);
      uint64_t v70 = sub_100188494();
      sub_10031E560(v70, (void (*)(uint64_t))sub_100B51884);
      sub_10019F830();
      sub_100B4F484(v22, (void (*)(void))type metadata accessor for LocationViewConfigurationInputs);
      unint64_t v50 = 0x6000000000000004;
      return v2 | v50;
    case 0xEuLL:
      sub_100180C58();
      __chkstk_darwin(v71);
      uint64_t v72 = sub_100188494();
      sub_1006B9644(v72, (void (*)(uint64_t))sub_100B51884);
      sub_10019F830();
      sub_100B4F484(v22, (void (*)(void))type metadata accessor for LocationViewConfigurationInputs);
      return v2 | 0x7000000000000000;
    case 0xFuLL:
      sub_100180C58();
      __chkstk_darwin(v73);
      uint64_t v74 = sub_100188494();
      sub_10070C6D0(v74, (void (*)(uint64_t))sub_100B51884);
      sub_10019F830();
      sub_100B4F484(v22, (void (*)(void))type metadata accessor for LocationViewConfigurationInputs);
      unint64_t v50 = 0x7000000000000004;
      return v2 | v50;
    case 0x10uLL:
      sub_100180C58();
      __chkstk_darwin(v75);
      uint64_t v76 = sub_100188494();
      sub_1006E2420(v76, (void (*)(uint64_t))sub_100B51884);
      sub_10019F830();
      sub_100B4F484(v22, (void (*)(void))type metadata accessor for LocationViewConfigurationInputs);
      return v2 | 0x8000000000000000;
    case 0x11uLL:
      sub_100180C58();
      __chkstk_darwin(v77);
      uint64_t v78 = sub_100188494();
      sub_1004A8C08(v78, (void (*)(uint64_t))sub_100B51884);
      sub_10019F830();
      sub_100B4F484(v22, (void (*)(void))type metadata accessor for LocationViewConfigurationInputs);
      unint64_t v50 = 0x8000000000000004;
      return v2 | v50;
    case 0x12uLL:
      sub_100180C58();
      __chkstk_darwin(v79);
      uint64_t v80 = sub_100188494();
      sub_1008D7604(v80, (void (*)(uint64_t))sub_100B51884);
      sub_10019F830();
      sub_100B4F484(v22, (void (*)(void))type metadata accessor for LocationViewConfigurationInputs);
      unint64_t v50 = 0x9000000000000000;
      return v2 | v50;
    case 0x13uLL:
      sub_100180C58();
      __chkstk_darwin(v81);
      uint64_t v82 = sub_100188494();
      sub_100AE0CAC(v82, (void (*)(uint64_t))sub_100B51884);
      sub_10019F830();
      sub_100B4F484(v22, (void (*)(void))type metadata accessor for LocationViewConfigurationInputs);
      unint64_t v50 = 0x9000000000000004;
      return v2 | v50;
    case 0x14uLL:
      __chkstk_darwin(v41);
      uint64_t v83 = v104;
      *(&v99 - 2) = v104;
      *(&v99 - 1) = a1;
      swift_retain();
      uint64_t v84 = swift_retain();
      sub_1006E2E94(v84, (void (*)(uint64_t))sub_100B51884);
      uint64_t v86 = v85;
      swift_release();
      uint64_t v87 = v103;
      sub_10014FEFC((v29 & 0xFFFFFFFFFFFFFFBLL) + OBJC_IVAR____TtCV7Weather26LocationNoAqiConfiguration8_Storage_map, v103, (void (*)(void))type metadata accessor for LocationViewComponent);
      sub_1001B1E64((void *)(v83 + 56), *(void *)(v83 + 80));
      uint64_t v88 = (uint64_t)v101;
      sub_1001D9C10(v87, (uint64_t)v101);
      sub_100B4F484(v87, (void (*)(void))type metadata accessor for LocationViewComponent);
      uint64_t v89 = type metadata accessor for LocationComponentContainerViewModel();
      _s7Weather24LocationCompositionStateOwst_0(v88, 0, 1, v89);
      sub_10027A764(v88, (uint64_t)v102);
      type metadata accessor for NoAqiContent._Storage(0);
      swift_allocObject();
      uint64_t v2 = sub_1002DBF00(v86);
      sub_1001781AC(v88, &qword_100E64E80);
      swift_release_n();
      sub_100B4F484(v22, (void (*)(void))type metadata accessor for LocationViewConfigurationInputs);
      unint64_t v50 = 0xA000000000000000;
      return v2 | v50;
    case 0x15uLL:
      sub_100180C58();
      __chkstk_darwin(v90);
      uint64_t v91 = sub_100188494();
      sub_1006A3980(v91, (void (*)(uint64_t))sub_100B51884);
      sub_10019F830();
      sub_100B4F484(v22, (void (*)(void))type metadata accessor for LocationViewConfigurationInputs);
      unint64_t v50 = 0xA000000000000004;
      return v2 | v50;
    case 0x16uLL:
      sub_100180C58();
      __chkstk_darwin(v92);
      uint64_t v93 = sub_100188494();
      sub_1008ECE70(v93, (void (*)(uint64_t))sub_100B51884);
      sub_10019F830();
      sub_100B4F484(v22, (void (*)(void))type metadata accessor for LocationViewConfigurationInputs);
      unint64_t v50 = 0xB000000000000000;
      return v2 | v50;
    case 0x17uLL:
      sub_100180C58();
      __chkstk_darwin(v94);
      uint64_t v95 = sub_100188494();
      sub_1007F5D64(v95, (void (*)(uint64_t))sub_100B51884);
      sub_10019F830();
      sub_100B4F484(v22, (void (*)(void))type metadata accessor for LocationViewConfigurationInputs);
      unint64_t v50 = 0xB000000000000004;
      return v2 | v50;
    case 0x18uLL:
      sub_100180C58();
      __chkstk_darwin(v97);
      uint64_t v98 = sub_100188494();
      sub_100687968(v98, (void (*)(uint64_t))sub_100B51884);
      sub_10019F830();
      sub_100B4F484(v22, (void (*)(void))type metadata accessor for LocationViewConfigurationInputs);
      return v2 | 0xC000000000000000;
    case 0x19uLL:
      uint64_t v43 = 0xC000000000000004;
      goto LABEL_40;
    default:
      __chkstk_darwin(v41);
      *(&v99 - 2) = v104;
      *(&v99 - 1) = a1;
      uint64_t v42 = swift_retain();
      uint64_t v43 = sub_1006644FC(v42, (void (*)(uint64_t))sub_100B51884);
      swift_release_n();
LABEL_40:
      sub_100B4F484(v22, (void (*)(void))type metadata accessor for LocationViewConfigurationInputs);
      break;
  }
  return v43;
}

uint64_t sub_1000291EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for MainAction();
  __chkstk_darwin(v6);
  uint64_t v8 = (void *)((char *)v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = *(uint64_t (**)(uint64_t))(a1 + 48);
  *uint64_t v8 = a2;
  v8[1] = a3;
  type metadata accessor for LocationsAction();
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  uint64_t v12 = 0;
  memset(v11, 0, sizeof(v11));
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1001AAF58((uint64_t)v8, (uint64_t)v11, v9);
  sub_100016E7C((uint64_t)v11);
  sub_1001ABE70((uint64_t)v8);
  return swift_release();
}

void *sub_1000292F8(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  sub_1000C1E18(a1 + 2, a2 + 2);
  a1[7] = a2[7];
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    uint64_t v6 = *(int *)(a3 + 28);
    uint64_t v7 = (void *)((char *)a1 + v6);
    uint64_t v8 = (void *)((char *)a2 + v6);
    sub_1001781AC((uint64_t)a1 + v6, (uint64_t *)&unk_100EAA560);
    sub_10017DF08((uint64_t *)&unk_100EAA560);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v9 = type metadata accessor for UserInterfaceSizeClass();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v9))
      {
        uint64_t v10 = sub_10017DF08(&qword_100E65ED8);
        memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v7, 0, 1, v9);
      }
    }
    else
    {
      *uint64_t v7 = *v8;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_100029484(uint64_t result, uint64_t a2)
{
  if (a2)
  {
    __chkstk_darwin(result);
    sub_10005BEBC(v3);
    type metadata accessor for UnfairLock();
    swift_retain();
    Lock.sync<A>(_:)();
    swift_release();
    return sub_1001361AC(a2);
  }
  return result;
}

void sub_100029570()
{
  type metadata accessor for Location.Identifier();
  if (v0 <= 0x3F)
  {
    sub_100029834(319, (unint64_t *)&qword_100E6EAC8, (void (*)(uint64_t))&type metadata accessor for Location.Identifier);
    if (v1 <= 0x3F)
    {
      sub_100029834(319, &qword_100EA0A60, (void (*)(uint64_t))type metadata accessor for LocationFooterViewModel);
      if (v2 <= 0x3F)
      {
        type metadata accessor for Date();
        if (v3 <= 0x3F)
        {
          sub_100029834(319, (unint64_t *)&unk_100EA0A68, (void (*)(uint64_t))&type metadata accessor for ForegroundEffect);
          if (v4 <= 0x3F)
          {
            type metadata accessor for LocationEntity();
            if (v5 <= 0x3F) {
              swift_initStructMetadata();
            }
          }
        }
      }
    }
  }
}

void sub_1000297E0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = type metadata accessor for Optional();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_100029834(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = type metadata accessor for Optional();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_100029888(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1000298EC()
{
  uint64_t v1 = type metadata accessor for OSSignpostID();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  unint64_t v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  static os_signpost_type_t.event.getter();
  id v5 = *(id *)(v0 + 144);
  OSSignpostID.init(log:)();
  os_signpost(_:dso:log:name:signpostID:)();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  sub_1001B1E64((void *)(v0 + 32), *(void *)(v0 + 56));
  return dispatch thunk of LocationManagerType.requestAuthorization()();
}

uint64_t sub_100029A10(uint64_t a1)
{
  return a1;
}

Swift::Void __swiftcall SidebarVisibilityMonitor.applicationWillEnterForeground()()
{
  if (qword_100E629F0 != -1) {
    swift_once();
  }
  sub_10021CF30();
  Configurable.setting<A>(_:)();
  uint64_t v1 = swift_allocObject();
  *(void *)(v1 + 16) = v0;
  *(unsigned char *)(v1 + 24) = v2;
  swift_retain();
  asyncMain(block:)();
  swift_release();
}

id sub_100029B90(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    NSString v3 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v3 = 0;
  }
  NSString v4 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v5 = [v2 initWithIdentifier:v3 displayString:v4];

  return v5;
}

uint64_t sub_100029C24()
{
  uint64_t v0 = type metadata accessor for Access();
  sub_100179C0C();
  uint64_t v2 = v1;
  __chkstk_darwin(v3);
  id v5 = &v10[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  type metadata accessor for Domain();
  sub_100179C0C();
  __chkstk_darwin(v6);
  (*(void (**)(unsigned char *, void))(v8 + 104))(&v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)], enum case for Domain.standard(_:));
  (*(void (**)(unsigned char *, void, uint64_t))(v2 + 104))(v5, enum case for Access.public(_:), v0);
  v10[15] = 1;
  sub_10017DF08(&qword_100E70818);
  swift_allocObject();
  uint64_t result = Setting.init(_:defaultValue:domain:access:)();
  qword_100F523D0 = result;
  return result;
}

void *sub_100029D88(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(a3 + 20);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = type metadata accessor for DispatchQoS();
  uint64_t v9 = *(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  v9(v6, v7, v8);
  return a1;
}

uint64_t sub_100029E20()
{
  type metadata accessor for AppDependencyManager();
  static AppDependencyManager.shared.getter();
  AppDependencyManager.addWeatherDependencies(from:)();
  swift_release();
  sub_10002B6E8(v0 + 16);
  sub_10017DF08(&qword_100E73F60);
  swift_allocObject();
  return Promise.init(value:)();
}

uint64_t sub_100029E9C()
{
  uint64_t countAndFlagsBits = LocationModel.name.getter();
  LocationModel.kind.getter();
  uint64_t v1 = Location.Identifier.Kind.rawValue.getter();
  uint64_t v3 = v2;
  if (v1 == Location.Identifier.Kind.rawValue.getter() && v3 == v4)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v6 & 1) == 0) {
      return countAndFlagsBits;
    }
  }
  swift_bridgeObjectRelease();
  id v7 = [self mainBundle];
  v11._object = (void *)0x8000000100CAF170;
  v8._uint64_t countAndFlagsBits = 0x7461636F4C20794DLL;
  v8._object = (void *)0xEB000000006E6F69;
  v9._uint64_t countAndFlagsBits = 0;
  v9._object = (void *)0xE000000000000000;
  v11._uint64_t countAndFlagsBits = 0xD00000000000003DLL;
  uint64_t countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v8, (Swift::String_optional)0, (NSBundle)v7, v9, v11)._countAndFlagsBits;

  return countAndFlagsBits;
}

uint64_t sub_100029FE4@<X0>(void *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for CoordinateSpace();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, enum case for CoordinateSpace.global(_:), v2);
  GeometryProxy.frameClippedToScrollViews(in:)();
  uint64_t v6 = v9[3];
  uint64_t v7 = v9[4];
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  *a1 = v6;
  a1[1] = v7;
  return result;
}

uint64_t sub_10002A0F4()
{
  ProxyContainer.public.getter();
  sub_10017DF08(&qword_100E881B8);
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  swift_release();
  ProxyContainer.private.getter();
  RegistrationContainer.lazy(block:)();

  return swift_release();
}

uint64_t sub_10002A19C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E807D0);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v9)
  {
    sub_1001B1E64(a1, a1[3]);
    type metadata accessor for SessionManager();
    uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:name:)();
    if (result)
    {
      uint64_t v5 = result;
      uint64_t active = type metadata accessor for ActiveUserAnalyticsManager();
      uint64_t v7 = swift_allocObject();
      uint64_t result = sub_1001262E4(&v8, v7 + 16);
      *(void *)(v7 + 56) = v5;
      a2[3] = active;
      a2[4] = (uint64_t)&off_100E29820;
      *a2 = v7;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t *sub_10002A2A4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  sub_1000C1E18(a1, a2);
  if (a1 != a2)
  {
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (uint64_t *)((char *)a1 + v6);
    long long v8 = (uint64_t *)((char *)a2 + v6);
    sub_100178110((uint64_t)a1 + v6, (uint64_t *)&unk_100EAA7B0);
    sub_10017DF08((uint64_t *)&unk_100EAA7B0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v9 = type metadata accessor for FinishLaunchTestAction();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
    }
    else
    {
      *uint64_t v7 = *v8;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v10 = *(int *)(a3 + 24);
  Swift::String v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  *(uint64_t *)((char *)a1 + v10) = *(uint64_t *)((char *)a2 + v10);
  swift_retain();
  swift_release();
  *((void *)v11 + 1) = *((void *)v12 + 1);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_10002A3D0()
{
  uint64_t v0 = type metadata accessor for Access();
  sub_100179C0C();
  uint64_t v2 = v1;
  __chkstk_darwin(v3);
  uint64_t v5 = &v10[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  type metadata accessor for Domain();
  sub_100179C0C();
  __chkstk_darwin(v6);
  (*(void (**)(unsigned char *, void))(v8 + 104))(&v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)], enum case for Domain.standard(_:));
  (*(void (**)(unsigned char *, void, uint64_t))(v2 + 104))(v5, enum case for Access.public(_:), v0);
  v10[15] = 0;
  sub_10017DF08(&qword_100E70818);
  swift_allocObject();
  uint64_t result = Setting.init(_:defaultValue:domain:access:)();
  qword_100F51C90 = result;
  return result;
}

void sub_10002A530()
{
  swift_getObjectType();
  id v0 = [self sharedApplication];
  unsigned __int8 v1 = [v0 isRunningPerformanceTest];

  if ((v1 & 1) == 0)
  {
    if (qword_100E62698 != -1) {
      swift_once();
    }
    sub_1000A382C(&qword_100E6F298, v2, (void (*)(uint64_t))type metadata accessor for AppDelegate);
    Configurable.setting<A>(_:)();
    if (v5 == 1)
    {
      uint64_t v3 = self;
      sub_10036437C(0xD000000000000011, 0x8000000100C967B0, 0, 0xE000000000000000, v3);
      sub_1000A382C(&qword_100E6F4B8, v4, (void (*)(uint64_t))type metadata accessor for AppDelegate);
      Updatable.save<A>(setting:value:)();
    }
  }
}

void *sub_10002A6B0(void *a1, const void *a2)
{
  uint64_t v4 = type metadata accessor for Location.Identifier();
  int v5 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a1, 2, v4);
  int v6 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 2, v4);
  if (!v5)
  {
    uint64_t v7 = *(void *)(v4 - 8);
    if (!v6)
    {
      (*(void (**)(void *, const void *, uint64_t))(v7 + 24))(a1, a2, v4);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v7 + 8))(a1, v4);
    goto LABEL_6;
  }
  if (v6)
  {
LABEL_6:
    uint64_t v8 = type metadata accessor for WeatherActivity();
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 2, v4);
  return a1;
}

uint64_t sub_10002A888(uint64_t a1)
{
  return a1;
}

uint64_t sub_10002A900()
{
  ProxyContainer.public.getter();
  sub_10017DF08(&qword_100EAAAC0);
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  swift_release();
  ProxyContainer.private.getter();
  RegistrationContainer.lazy(block:)();

  return swift_release();
}

void *sub_10002A9A8(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v5 = a3[9];
  int v6 = (char *)a1 + v5;
  uint64_t v8 = (char *)a2 + v5;
  uint64_t v9 = type metadata accessor for PinnedScrollableViews();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v6, v8, v9);
  uint64_t v10 = a3[10];
  Swift::String v11 = (void *)((char *)a1 + v10);
  uint64_t v12 = (void *)((char *)a2 + v10);
  uint64_t v13 = v12[1];
  *Swift::String v11 = *v12;
  v11[1] = v13;
  swift_retain();
  swift_release();
  uint64_t v14 = a3[11];
  uint64_t v15 = (char *)a1 + v14;
  uint64_t v44 = a1;
  uint64_t v16 = (char *)a2 + v14;
  uint64_t v17 = *(void *)v16;
  LOBYTE(v8) = v16[8];
  sub_100195B7C(*(void *)v16, (char)v8);
  uint64_t v18 = *(void *)v15;
  char v19 = v15[8];
  *(void *)uint64_t v15 = v17;
  v15[8] = (char)v8;
  sub_10018F6D8(v18, v19);
  uint64_t v20 = a3[12];
  uint64_t v21 = (char *)a1 + v20;
  uint64_t v22 = (char *)a2 + v20;
  uint64_t v23 = *(void *)v22;
  uint64_t v24 = *((void *)v22 + 1);
  uint64_t v25 = *((void *)v22 + 2);
  uint64_t v26 = *((void *)v22 + 3);
  uint64_t v27 = *((void *)v22 + 4);
  uint64_t v28 = *((void *)v22 + 5);
  uint64_t v29 = *((void *)v22 + 6);
  uint64_t v30 = *((void *)v22 + 7);
  uint64_t v31 = *((void *)v22 + 8);
  char v43 = v22[72];
  sub_1001910C8(*(void *)v22, v24, v25, v26, v27, v28, v29, v30, v31, v43);
  uint64_t v32 = *(void *)v21;
  uint64_t v33 = *((void *)v21 + 1);
  uint64_t v34 = *((void *)v21 + 2);
  uint64_t v35 = *((void *)v21 + 3);
  uint64_t v36 = *((void *)v21 + 4);
  uint64_t v37 = *((void *)v21 + 5);
  uint64_t v38 = *((void *)v21 + 6);
  uint64_t v39 = *((void *)v21 + 7);
  uint64_t v40 = *((void *)v21 + 8);
  char v41 = v21[72];
  *(void *)uint64_t v21 = v23;
  *((void *)v21 + 1) = v24;
  *((void *)v21 + 2) = v25;
  *((void *)v21 + 3) = v26;
  *((void *)v21 + 4) = v27;
  *((void *)v21 + 5) = v28;
  *((void *)v21 + 6) = v29;
  *((void *)v21 + 7) = v30;
  *((void *)v21 + 8) = v31;
  v21[72] = v43;
  sub_10018CCC4(v32, v33, v34, v35, v36, v37, v38, v39, v40, v41);
  return v44;
}

id sub_10002AB3C()
{
  id v0 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  NSString v1 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v2 = [v0 initWithActivityType:v1];

  return v2;
}

void sub_10002ABB0(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4) {
      atomic_store(ForeignTypeMetadata, a2);
    }
  }
}

uint64_t sub_10002ABF8(uint64_t a1, unsigned char *a2, void *a3)
{
  uint64_t v5 = type metadata accessor for Location.Identifier();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v16[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for LocationViewModel();
  uint64_t result = __chkstk_darwin(v9 - 8);
  uint64_t v12 = (char *)&v16[-1] - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*a2 == 1)
  {
    uint64_t v13 = a3[15];
    uint64_t v14 = a3[16];
    sub_1001B1E64(a3 + 12, v13);
    (*(void (**)(uint64_t, uint64_t))(v14 + 16))(v13, v14);
    sub_1001E9994((uint64_t)(a3 + 7), (uint64_t)v16);
    sub_1001B1E64(v16, v16[3]);
    swift_retain();
    sub_100133E68();
    swift_release();
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v8, v12, v5);
    sub_1001338DC((uint64_t)v12, (void (*)(void))type metadata accessor for LocationViewModel);
    Location.Identifier.id.getter();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    sub_100089C4C();
    swift_bridgeObjectRelease();
    return _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v16);
  }
  return result;
}

uint64_t sub_10002ADF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  *(void *)(a1 + OBJC_IVAR____TtC7Weather27LocationNetworkActivityFlow_rootActivity) = a2;
  swift_release();
  uint64_t v10 = (void *)(a1 + OBJC_IVAR____TtC7Weather27LocationNetworkActivityFlow_locationId);
  *uint64_t v10 = a3;
  v10[1] = a4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_10017DF08(&qword_100E6BBD0);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_100C31F30;
  *(void *)(v11 + 32) = a2;
  uint64_t v15 = v11;
  specialized Array._endMutation()();
  uint64_t v12 = (uint64_t)a5 + *(int *)(type metadata accessor for NetworkActivityCompletion() + 24);
  uint64_t v13 = type metadata accessor for NWActivity.CompletionReason();
  _s7Weather24LocationCompositionStateOwst_0(v12, 1, 1, v13);
  *a5 = v15;
  a5[1] = (uint64_t)_swiftEmptyArrayStorage;

  return swift_retain();
}

uint64_t sub_10002AEFC()
{
  ProxyContainer.public.getter();
  sub_10017DF08(&qword_100E70FF8);
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  swift_release();
  ProxyContainer.private.getter();
  RegistrationContainer.lazy(block:)();

  return swift_release();
}

void sub_10002AFA4()
{
  type metadata accessor for DetailCondition();
  if (v0 <= 0x3F)
  {
    type metadata accessor for Location();
    if (v1 <= 0x3F)
    {
      sub_10002B340(319, (unint64_t *)&qword_100E638F0, (void (*)(uint64_t))&type metadata accessor for Date);
      if (v2 <= 0x3F)
      {
        sub_10002B340(319, (unint64_t *)&qword_100E71330, (void (*)(uint64_t))type metadata accessor for DetailChartSelection);
        if (v3 <= 0x3F) {
          swift_initStructMetadata();
        }
      }
    }
  }
}

void sub_10002B12C()
{
  type metadata accessor for LocationModel();
  if (v0 <= 0x3F)
  {
    type metadata accessor for ListLocationRowPrimaryText(319);
    if (v1 <= 0x3F)
    {
      sub_10002B3E8(319, (unint64_t *)&qword_100E638F0, (void (*)(uint64_t))&type metadata accessor for Date);
      if (v2 <= 0x3F)
      {
        sub_10002B3E8(319, (unint64_t *)&unk_100EB4430, (void (*)(uint64_t))&type metadata accessor for TimeZone);
        if (v3 <= 0x3F)
        {
          type metadata accessor for WeatherConditionBackgroundModel();
          if (v4 <= 0x3F) {
            swift_initStructMetadata();
          }
        }
      }
    }
  }
}

void sub_10002B340(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = type metadata accessor for Optional();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_10002B394(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = type metadata accessor for Optional();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_10002B3E8(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = type metadata accessor for Optional();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_10002B43C()
{
  uint64_t v8 = &unk_100C4B568;
  type metadata accessor for NotificationLocation();
  if (v0 <= 0x3F)
  {
    sub_10000AFF4();
    if (v1 <= 0x3F)
    {
      swift_getTupleTypeLayout2();
      uint64_t v9 = &v7;
      type metadata accessor for NotificationSubscription.Location();
      if (v2 <= 0x3F)
      {
        type metadata accessor for NotificationSubscription.Kind();
        if (v3 <= 0x3F)
        {
          swift_getTupleTypeLayout2();
          uint64_t v10 = &v6;
          uint64_t v11 = (char *)&value witness table for Builtin.BridgeObject + 64;
          uint64_t v12 = (char *)&value witness table for Builtin.BridgeObject + 64;
          type metadata accessor for Location();
          if (v4 <= 0x3F)
          {
            swift_getTupleTypeLayout2();
            uint64_t v13 = &v5;
            uint64_t v14 = &unk_100C4B580;
            swift_initEnumMetadataMultiPayload();
          }
        }
      }
    }
  }
}

uint64_t sub_10002B60C()
{
  ProxyContainer.public.getter();
  sub_10017DF08(&qword_100E732B0);
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  swift_release();
  ProxyContainer.private.getter();
  RegistrationContainer.lazy(block:)();

  return swift_release();
}

uint64_t sub_10002B6B4(uint64_t a1)
{
  sub_10017DFE0(a1);
  swift_retain();
  swift_retain();
  return v1;
}

uint64_t sub_10002B6E8(uint64_t a1)
{
  type metadata accessor for AppDependencyManager();
  static AppDependencyManager.shared.getter();
  uint64_t v7 = 0;
  memset(v6, 0, sizeof(v6));
  sub_10020D948(a1, (uint64_t)v5);
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = v1;
  sub_1001262E4(v5, v3 + 24);
  swift_retain();
  sub_10017DF08(&qword_100E73F78);
  AppDependencyManager.add<A>(key:dependency:)();
  swift_release();
  swift_release();
  return sub_100215278((uint64_t)v6);
}

uint64_t sub_10002B7C0(void (*a1)(void *), uint64_t a2, void (*a3)(void *__return_ptr, uint64_t))
{
  uint64_t v5 = sub_10017DF08(&qword_100E64AB0);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  a3(v16, v6);
  a1(v16);
  swift_release();
  uint64_t v9 = type metadata accessor for LocationViewerInput();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v9) != 1) {
    return sub_1001522B4();
  }
  sub_1001781AC((uint64_t)v8, &qword_100E64AB0);
  v16[0] = 0;
  v16[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(82);
  v11._uint64_t countAndFlagsBits = 0xD00000000000004BLL;
  v11._object = (void *)0x8000000100C96D70;
  String.append(_:)(v11);
  v12._object = (void *)0x8000000100C970D0;
  v12._uint64_t countAndFlagsBits = 0xD000000000000013;
  String.append(_:)(v12);
  v13._uint64_t countAndFlagsBits = 8236;
  v13._object = (void *)0xE200000000000000;
  String.append(_:)(v13);
  v14._uint64_t countAndFlagsBits = 0xD000000000000017;
  v14._object = (void *)0x8000000100C970F0;
  String.append(_:)(v14);
  v15._uint64_t countAndFlagsBits = 46;
  v15._object = (void *)0xE100000000000000;
  String.append(_:)(v15);
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

void *sub_10002B998(void *a1)
{
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E64798);
  uint64_t result = (void *)dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v5)
  {
    sub_1001B1E64(a1, a1[3]);
    sub_10017DF08(&qword_100E647D8);
    uint64_t result = (void *)dispatch thunk of ResolverType.resolve<A>(_:)();
    if (v3)
    {
      type metadata accessor for AccessibilitySettingsMonitor();
      uint64_t result = (void *)swift_allocObject();
      result[2] = v5;
      result[3] = v6;
      result[4] = v7;
      result[5] = v8;
      result[6] = v3;
      result[7] = v4;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_10002BA80()
{
  uint64_t v2 = sub_10018126C();
  sub_1002178BC(v2, v3);
  uint64_t v4 = (_OWORD *)swift_allocObject();
  sub_10017A1E0(v4, v5, v6, v7, v8, v9, v10, v11, v20, v21, v22, v12);
  *(void *)(v13 + 64) = v23;
  uint64_t v14 = static Alignment.center.getter();
  uint64_t v16 = v15;
  sub_10017DF08(&qword_100E74428);
  sub_100162E4C();
  sub_10008B8B4();
  v17();
  uint64_t result = sub_10017DF08(&qword_100E74430);
  char v19 = (uint64_t (**)@<X0>(uint64_t@<X0>, uint64_t@<X8>))(v1 + *(int *)(result + 36));
  void *v19 = sub_100213A10;
  v19[1] = v0;
  v19[2] = (uint64_t (*)@<X0>(uint64_t@<X0>, uint64_t@<X8>))v14;
  v19[3] = v16;
  return result;
}

uint64_t sub_10002BB48(void *a1)
{
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E647D8);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v5)
  {
    sub_1001B1E64(a1, a1[3]);
    sub_10017DF08(&qword_100E96470);
    uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
    if (v4)
    {
      type metadata accessor for NotificationAuthorizationMonitor();
      swift_allocObject();
      return sub_100218F78(v5, v6, &v3);
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

double sub_10002BC28@<D0>(uint64_t a1@<X0>, void (*a2)(uint64_t)@<X1>, uint64_t *a3@<X2>, uint64_t *a4@<X3>, uint64_t a5@<X8>)
{
  memcpy(__dst, v5, sizeof(__dst));
  sub_1001BEAB0((uint64_t)v5);
  sub_1001BEAF4();
  uint64_t v11 = sub_1001BEAB0((uint64_t)v5);
  a2(v11);
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  sub_10017DF08(a3);
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v12 + 16))(a5, a1);
  uint64_t v13 = (_OWORD *)(a5 + *(int *)(sub_10017DF08(a4) + 36));
  _OWORD *v13 = v15;
  v13[1] = v16;
  double result = *(double *)&v17;
  _OWORD v13[2] = v17;
  return result;
}

uint64_t sub_10002BD5C(uint64_t a1)
{
  uint64_t v2 = sub_10017DF08(&qword_100E6DC08);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = (uint64_t *)(a1 + *(int *)(type metadata accessor for LocationViewCollisionOptionsUpdatingView(0) + 36));
  uint64_t v6 = *v5;
  uint64_t v7 = v5[1];
  uint64_t v13 = *v5;
  uint64_t v14 = v7;
  sub_10017DF08(&qword_100E8F958);
  State.wrappedValue.getter();
  char v8 = sub_10000FCA0();
  uint64_t result = swift_release();
  if ((v8 & 1) == 0)
  {
    uint64_t v13 = v6;
    uint64_t v14 = v7;
    State.wrappedValue.getter();
    sub_100008EF8();
    swift_release();
    uint64_t v10 = *(void *)(a1 + 80);
    uint64_t v11 = type metadata accessor for Location.Identifier();
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v4, 1, 1, v11);
    sub_100076D8C(v10, (uint64_t)v4);
    return sub_100178110((uint64_t)v4, &qword_100E6DC08);
  }
  return result;
}

uint64_t sub_10002BE98(void *a1)
{
  sub_1001B1E64(a1, a1[3]);
  type metadata accessor for WeatherDataUpdater();
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!result)
  {
    __break(1u);
    goto LABEL_6;
  }
  uint64_t v3 = result;
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E7CD18);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v13)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E98110);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v11)
  {
    uint64_t v4 = sub_1000DF0C4((uint64_t)v12, v13);
    __n128 v5 = __chkstk_darwin(v4);
    uint64_t v7 = (uint64_t *)((char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, __n128))(v8 + 16))(v7, v5);
    uint64_t v9 = sub_100225EFC(v3, *v7, &v10);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v12);
    return v9;
  }
LABEL_7:
  __break(1u);
  return result;
}

BOOL sub_10002C044(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for LocationWeatherDataState(0);
  sub_100162E4C();
  __chkstk_darwin(v6);
  sub_1001626E0();
  uint64_t v9 = v8 - v7;
  uint64_t v10 = sub_10017DF08(&qword_100E63848);
  sub_100162E4C();
  __chkstk_darwin(v11);
  sub_1001626E0();
  uint64_t v14 = v13 - v12;
  uint64_t v15 = sub_10017DF08(&qword_100E63770);
  uint64_t v16 = sub_100109308(v15);
  uint64_t v17 = __chkstk_darwin(v16);
  char v19 = (char *)&v43 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  sub_100119550();
  __chkstk_darwin(v20);
  long long v22 = (char *)&v43 - v21;
  if ((sub_10011CB88(a1, a2) & 1) == 0) {
    return 0;
  }
  uint64_t v23 = (int *)type metadata accessor for LocationViewerInput();
  if ((static LocationModel.== infix(_:_:)() & 1) == 0) {
    return 0;
  }
  sub_100180F34();
  if (!v35) {
    return 0;
  }
  sub_1001266D8(a1 + v23[7], a2 + v23[7], v24, v25, v26, v27, v28, v29, v43, v44, v45, v46, v47, v48, v49, v50, v51, v52, v53,
    v54);
  if ((v30 & 1) == 0) {
    return 0;
  }
  uint64_t v31 = v23[8];
  char v32 = *(unsigned char *)(a1 + v31);
  HIDWORD(v45) = *(unsigned __int8 *)(a2 + v31);
  unint64_t v44 = LocationAuthorizationState.rawValue.getter(v32);
  uint64_t v46 = v33;
  BOOL v35 = v44 == LocationAuthorizationState.rawValue.getter(SBYTE4(v45)) && v46 == v34;
  if (v35)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_13;
  }
  uint64_t v43 = v34;
  HIDWORD(v45) = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  BOOL result = 0;
  if ((v45 & 0x100000000) != 0)
  {
LABEL_13:
    sub_100180F34();
    if (!v35) {
      return 0;
    }
    if (*(unsigned __int8 *)(a1 + v23[10]) != *(unsigned __int8 *)(a2 + v23[10])) {
      return 0;
    }
    sub_10011B100();
    if ((v37 & 1) == 0) {
      return 0;
    }
    if ((static Date.== infix(_:_:)() & 1) == 0) {
      return 0;
    }
    sub_100180F34();
    if (!v35) {
      return 0;
    }
    if (*(void *)(a1 + v23[13]) != *(void *)(a2 + v23[13])) {
      return 0;
    }
    sub_100180F34();
    if (!v35) {
      return 0;
    }
    sub_100180F34();
    if (!v35) {
      return 0;
    }
    sub_1000ABFA0();
    if ((v38 & 1) == 0) {
      return 0;
    }
    sub_100180F34();
    if (!v35) {
      return 0;
    }
    sub_100141778(a1 + v23[18], (uint64_t)v22);
    sub_100141778(a2 + v23[18], v2);
    uint64_t v39 = v14 + *(int *)(v10 + 48);
    sub_100141778((uint64_t)v22, v14);
    sub_100141778(v2, v39);
    sub_10012B520(v14, 1, v5);
    if (v35)
    {
      sub_100178110(v2, &qword_100E63770);
      sub_100178110((uint64_t)v22, &qword_100E63770);
      sub_10012B520(v39, 1, v5);
      if (v35)
      {
        sub_100178110(v14, &qword_100E63770);
        return 1;
      }
    }
    else
    {
      sub_100141778(v14, (uint64_t)v19);
      sub_10012B520(v39, 1, v5);
      if (!v40)
      {
        sub_1001E0F88(v39, v9, (void (*)(void))type metadata accessor for LocationWeatherDataState);
        sub_100866548();
        char v42 = v41;
        sub_1001D1194(v9, (void (*)(void))type metadata accessor for LocationWeatherDataState);
        sub_100178110(v2, &qword_100E63770);
        sub_100178110((uint64_t)v22, &qword_100E63770);
        sub_1001D1194((uint64_t)v19, (void (*)(void))type metadata accessor for LocationWeatherDataState);
        sub_100178110(v14, &qword_100E63770);
        return (v42 & 1) != 0;
      }
      sub_100178110(v2, &qword_100E63770);
      sub_100178110((uint64_t)v22, &qword_100E63770);
      sub_1001D1194((uint64_t)v19, (void (*)(void))type metadata accessor for LocationWeatherDataState);
    }
    sub_100178110(v14, &qword_100E63848);
    return 0;
  }
  return result;
}

uint64_t sub_10002C4A0@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E64798);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v8)
  {
    sub_1001B1E64(a1, a1[3]);
    sub_10017DF08(&qword_100E647D8);
    uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
    if (v6)
    {
      uint64_t v5 = type metadata accessor for ExtendedAppLaunchManager();
      swift_allocObject();
      uint64_t result = sub_100062980(v8, v9, v10, v11, v6, v7, 1);
      a2[3] = v5;
      a2[4] = (uint64_t)&off_100E17F38;
      *a2 = result;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_10002C5C4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  v19[0] = a1;
  uint64_t v3 = sub_10017DF08(&qword_100E9C2E8);
  sub_100162E4C();
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10017DF08(&qword_100E9C2F0);
  sub_100179C0C();
  uint64_t v9 = v8;
  uint64_t v11 = __chkstk_darwin(v10);
  uint64_t v13 = (char *)v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)v19 - v14;
  sub_10017DF08(&qword_100E9C248);
  uint64_t v16 = (void *)UIApplicationDelegateAdaptor.wrappedValue.getter();
  sub_1000A0944((uint64_t)v20);

  sub_10006C1C4((uint64_t)v20, v2, (uint64_t)v6);
  type metadata accessor for WeatherApp();
  uint64_t v17 = sub_1001246C8(&qword_100E9C2F8, &qword_100E9C2E8);
  Scene.extendedLaunchTestName(_:)();
  sub_1001781AC((uint64_t)v6, &qword_100E9C2E8);
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v15, v13, v7);
  v19[1] = v3;
  v19[2] = v17;
  swift_getOpaqueTypeConformance2();
  static SceneBuilder.buildBlock<A>(_:)();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v15, v7);
  return _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v20);
}

uint64_t sub_10002C7DC()
{
  return State.wrappedValue.setter();
}

uint64_t sub_10002C834@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_10017DF08(&qword_100E6D908);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (uint64_t *)((char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  *uint64_t v6 = swift_getKeyPath();
  sub_10017DF08(&qword_100E66E50);
  swift_storeEnumTagMultiPayload();
  *(void *)a2 = a1;
  *(void *)(a2 + 8) = swift_getKeyPath();
  *(unsigned char *)(a2 + 16) = 0;
  uint64_t v7 = type metadata accessor for HourlyForecastComponentView();
  swift_bridgeObjectRetain();
  Text.Measurements.init()();
  return sub_10024D364((uint64_t)v6, a2 + *(int *)(v7 + 28), &qword_100E6D908);
}

uint64_t sub_10002C934@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v6 = *(void *)(v2 + 80);
  char v7 = *(unsigned char *)(v2 + 88);
  sub_100195B7C(v6, v7);
  sub_100149AE8();
  char v9 = v8;
  sub_10018F6D8(v6, v7);
  if (v9)
  {
    BOOL v10 = 1;
  }
  else
  {
    memcpy(__dst, (const void *)v2, 0x49uLL);
    sub_1001BEAB0((uint64_t)__dst);
    sub_1001BEAF4();
    sub_1001BEAB0((uint64_t)__dst);
    BOOL v10 = sub_10004D56C() <= 162.0;
  }
  uint64_t v11 = sub_10017DF08(&qword_100EA1D88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16))(a2, a1, v11);
  uint64_t result = sub_10017DF08(&qword_100EA1D90);
  uint64_t v13 = a2 + *(int *)(result + 36);
  *(void *)uint64_t v13 = KeyPath;
  *(unsigned char *)(v13 + 8) = v10;
  return result;
}

uint64_t sub_10002CA8C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E6FC60);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v14)
  {
    sub_1001B1E64(a1, a1[3]);
    sub_10017DF08(&qword_100EA7DC0);
    uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
    if (v12)
    {
      uint64_t v5 = sub_1000DF0C4((uint64_t)v11, v12);
      __n128 v6 = __chkstk_darwin(v5);
      char v8 = (uint64_t **)&v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
      (*(void (**)(uint64_t **, __n128))(v9 + 16))(v8, v6);
      uint64_t v10 = sub_10021F0EC(&v13, *v8);
      _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v11);
      uint64_t result = type metadata accessor for AppStoreReviewManager();
      a2[3] = result;
      a2[4] = (uint64_t)&off_100E1B070;
      *a2 = v10;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_10002CC10@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E64798);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v12)
  {
    uint64_t v6 = v14;
    uint64_t v5 = v15;
    uint64_t v7 = v13;
    sub_1001B1E64(a1, a1[3]);
    sub_10017DF08(&qword_100E98010);
    uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
    if (v11)
    {
      uint64_t v8 = type metadata accessor for LocationFinder();
      uint64_t v9 = (void *)swift_allocObject();
      _OWORD v9[2] = v12;
      v9[3] = v7;
      void v9[4] = v6;
      v9[5] = v5;
      uint64_t result = sub_1001262E4(&v10, (uint64_t)(v9 + 6));
      a2[3] = v8;
      a2[4] = &off_100E1F478;
      *a2 = v9;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_10002CD20@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  void (*v8)(uint64_t *__return_ptr, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E64798);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v8)
  {
    sub_1001B1E64(a1, a1[3]);
    sub_10017DF08(&qword_100E647D8);
    uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
    if (v6)
    {
      uint64_t v5 = type metadata accessor for RemotelyConfiguredSlowLocationLoadingMonitor();
      swift_allocObject();
      uint64_t result = (uint64_t)sub_100054014(v8, v9, v10, v11, v6, v7);
      a2[3] = v5;
      a2[4] = (uint64_t)&off_100E34778;
      *a2 = result;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_10002CE40()
{
  sub_10017DF08(&qword_100EA7DD8);
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  sub_10017DF08(&qword_100EA7DE0);
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  sub_10017DF08(&qword_100EA7DE8);
  RegistrationContainer.register<A>(_:name:factory:)();

  return swift_release();
}

uint64_t sub_10002CF14(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  int v5 = ~a3;
  uint64_t v6 = sub_10017DF08(&qword_100E9EED8);
  __chkstk_darwin(v6 - 8);
  unint64_t v8 = (v7 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v9 = (char *)&v19 - v8;
  if (!v5) {
    return 0;
  }
  sub_1001262FC(a4, (uint64_t)&v19 - v8, &qword_100E9EED8);
  uint64_t v10 = type metadata accessor for MoonRiseSetEvent();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v10) == 1)
  {
    sub_100178110((uint64_t)v9, &qword_100E9EED8);
    return 0;
  }
  sub_100040D34();
  uint64_t v12 = v11;
  (*(void (**)(char *, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  if (!v12) {
    return 0;
  }
  sub_10017DF08(&qword_100E64020);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_100C251B0;
  uint64_t v14 = TemporalString.string.getter();
  uint64_t v16 = v15;
  *(void *)(v13 + 56) = &type metadata for String;
  *(void *)(v13 + 64) = sub_10012B7C0();
  *(void *)(v13 + 32) = v14;
  *(void *)(v13 + 40) = v16;
  uint64_t v17 = String.init(format:_:)();
  swift_bridgeObjectRelease();
  return v17;
}

uint64_t sub_10002D0CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_10017DF08(&qword_100EA1D78);
  uint64_t v6 = v5 - 8;
  __chkstk_darwin(v5);
  unint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t KeyPath = swift_getKeyPath();
  memcpy(__dst, v2, sizeof(__dst));
  sub_1001BEAB0((uint64_t)v2);
  sub_1001BEAF4();
  sub_1001BEAB0((uint64_t)v2);
  BOOL v10 = (v16 & 7) == 0;
  BOOL v11 = (v16 & 7) != 0;
  uint64_t v12 = sub_10017DF08(&qword_100EA1D80);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16))(v8, a1, v12);
  uint64_t v13 = &v8[*(int *)(v6 + 44)];
  *(void *)uint64_t v13 = KeyPath;
  *((void *)v13 + 1) = v11;
  v13[16] = v10;
  return sub_10024D364((uint64_t)v8, a2, &qword_100EA1D78);
}

uint64_t sub_10002D238(void *a1)
{
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E7C0D8);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v15)
  {
    __break(1u);
    goto LABEL_6;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E98128);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v13)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E96470);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v11)
  {
    uint64_t v3 = sub_1000DF0C4((uint64_t)v14, v15);
    __n128 v4 = __chkstk_darwin(v3);
    uint64_t v6 = (uint64_t *)((char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, __n128))(v7 + 16))(v6, v4);
    unint64_t v8 = sub_1002195E8(*v6, &v12, &v10);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v14);
    return (uint64_t)v8;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_10002D3E4()
{
  return StringBuilder.init(_:)();
}

uint64_t sub_10002D438@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for WeatherConditionBackgroundModel();
  uint64_t v26 = *(void *)(v3 - 8);
  uint64_t v27 = v3;
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for WeatherConditionBackgroundModelFactoryInput();
  uint64_t v25 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  unint64_t v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10017DF08(&qword_100E64A58);
  uint64_t v10 = __chkstk_darwin(v9);
  long long v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v14 = (void (**)(void))((char *)&v24 - v13);
  uint64_t v15 = v1 + *(void *)(*(void *)v1 + 120);
  swift_beginAccess();
  sub_10006DF38(v15, (uint64_t)v14, &qword_100E64A58);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v17 = (char *)v14 + *(int *)(sub_10017DF08(&qword_100E64A78) + 48);
      (*(void (**)(uint64_t, void (**)(void), uint64_t))(v25 + 32))(a1, v14, v6);
      _s7Weather24LocationCompositionStateOwst_0(a1, 0, 1, v6);
      return (*(uint64_t (**)(char *, uint64_t))(v26 + 8))(v17, v27);
    }
    else
    {
      _s7Weather24LocationCompositionStateOwst_0(a1, 1, 1, v6);
      return sub_1001781AC((uint64_t)v14, &qword_100E64A58);
    }
  }
  else
  {
    uint64_t v19 = *v14;
    uint64_t v24 = a1;
    uint64_t v20 = v14[2];
    v19();
    ((void (*)(char *))v20)(v8);
    swift_release();
    swift_release();
    uint64_t v21 = &v12[*(int *)(sub_10017DF08(&qword_100E64A78) + 48)];
    uint64_t v22 = v25;
    (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v12, v8, v6);
    (*(void (**)(char *, char *, uint64_t))(v26 + 32))(v21, v5, v27);
    swift_storeEnumTagMultiPayload();
    swift_beginAccess();
    sub_1001DF004((uint64_t)v12, v15, &qword_100E64A58);
    swift_endAccess();
    uint64_t v23 = v24;
    (*(void (**)(uint64_t, char *, uint64_t))(v22 + 32))(v24, v8, v6);
    return _s7Weather24LocationCompositionStateOwst_0(v23, 0, 1, v6);
  }
}

uint64_t sub_10002D7C8(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[5];
  uint64_t v5 = sub_10017DF08(&qword_100E65250);
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  v6(v4, v5);
  v6(a1 + a2[6], v5);
  v6(a1 + a2[7], v5);
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_10002D8A8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_10017DF08(&qword_100EA15C0);
  sub_1001627C0(v3);
  return sub_10006DF38(v1 + ((*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80)), a1, &qword_100EA15C0);
}

uint64_t sub_10002D900(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  uint64_t v5 = type metadata accessor for WeatherConditionBackgroundTimeData();
  uint64_t v6 = *(int *)(v5 + 20);
  uint64_t v7 = (void *)(a1 + v6);
  unint64_t v8 = (const void *)(a2 + v6);
  uint64_t v9 = type metadata accessor for Elevation();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v9))
  {
    uint64_t v10 = sub_10017DF08(&qword_100E63760);
    memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v7, 0, 1, v9);
  }
  uint64_t v11 = *(int *)(v5 + 24);
  long long v12 = (void *)(a1 + v11);
  uint64_t v13 = (const void *)(a2 + v11);
  uint64_t v14 = type metadata accessor for BackgroundMoonData();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v13, 1, v14))
  {
    uint64_t v15 = sub_10017DF08(&qword_100E63768);
    memcpy(v12, v13, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v12, 0, 1, v14);
  }
  return a1;
}

uint64_t sub_10002DAC8(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for Locale();
  sub_100187DB4(v5);
  uint64_t v6 = type metadata accessor for UnitConfiguration.Temperature();
  sub_100187DB4(v6);
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return v2;
}

uint64_t sub_10002DB2C()
{
  uint64_t v2 = type metadata accessor for Location();
  sub_100179C0C();
  uint64_t v4 = v3;
  __chkstk_darwin(v5);
  sub_10011BFD8();
  if ((Location.kind.getter() & 1) == 0)
  {
    Location.searchTitle.getter();
    sub_10017A398();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v1, v0, v2);
    Location.name.getter();
    sub_10017A398();
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v1, v2);
  }
  return 0;
}

uint64_t sub_10002DC04(uint64_t a1, void *a2)
{
  sub_1001B1E64(a2, a2[3]);
  sub_10017DF08(&qword_100E80770);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v4)
  {
    sub_1001262E4(&v3, (uint64_t)v5);
    sub_1001B1E64(v5, v5[3]);
    dispatch thunk of ScenePhaseManagerType.addObserver(_:)();
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)&v3);
    return _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v5);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10002DCC4()
{
  type metadata accessor for TranslationModifier(0);
  sub_10017B22C();

  return sub_1000375F4();
}

unint64_t sub_10002DD2C()
{
  unint64_t result = qword_100E7DFD8;
  if (!qword_100E7DFD8)
  {
    sub_10018C6DC(&qword_100E7DF10);
    sub_10018C6DC(&qword_100E7DF00);
    sub_10018C6DC(&qword_100E7DEF8);
    type metadata accessor for DailyForecastRowViewButtonStyle();
    sub_1001246C8(&qword_100E7DF28, &qword_100E7DEF8);
    sub_100147140(&qword_100E7DF30, (void (*)(uint64_t))type metadata accessor for DailyForecastRowViewButtonStyle);
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    sub_100147140((unint64_t *)&qword_100EAACA0, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E7DFD8);
  }
  return result;
}

void *sub_10002DEBC(uint64_t a1, long long *a2, long long *a3, void *a4)
{
  uint64_t v10 = type metadata accessor for LocationViewDescriptor();
  uint64_t v11 = &off_100E37020;
  *(void *)&long long v9 = a1;
  a4[2] = 0;
  a4[3] = 0;
  sub_10017DF08(&qword_100E98130);
  swift_allocObject();
  a4[19] = OnlyOnceDeferredPromise.init()();
  swift_allocObject();
  a4[20] = OnlyOnceDeferredPromise.init()();
  sub_1001262E4(&v9, (uint64_t)(a4 + 4));
  sub_1001262E4(a2, (uint64_t)(a4 + 9));
  sub_1001262E4(a3, (uint64_t)(a4 + 14));
  return a4;
}

uint64_t sub_10002DF88@<X0>(uint64_t a1@<X8>)
{
  if (qword_100E62290 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t result = sub_1001262FC((uint64_t)&xmmword_100F51398, (uint64_t)&v3, &qword_100E6F2A0);
  if (v4) {
    return sub_1001262E4(&v3, a1);
  }
  __break(1u);
  return result;
}

uint64_t sub_10002E028(long long *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v8 = type metadata accessor for AppStoreReviewPrivacySampler();
  long long v9 = &off_100E11D78;
  *(void *)&long long v7 = a2;
  if (qword_100E629D0 != -1) {
    swift_once();
  }
  sub_10017DF08(&qword_100EA7E08);
  swift_allocObject();
  swift_retain();
  *(void *)(a3 + 96) = SettingProperty.init(_:)();
  sub_1001262E4(a1, a3 + 16);
  sub_1001262E4(&v7, a3 + 56);
  return a3;
}

uint64_t sub_10002E0FC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_10002E15C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10002E1DC(&qword_100E74B48);

  return static UIViewControllerRepresentable._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_10002E1DC(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for SafariSheetModifier.SafariPresenter(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10002E220@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for SevereAlertComponentViewModelFactory();
  uint64_t v3 = swift_allocObject();
  uint64_t result = SevereAlertComponentStringsBuilder.init()();
  a1[3] = v2;
  a1[4] = (uint64_t)&off_100E31D58;
  *a1 = v3;
  return result;
}

uint64_t sub_10002E284(void *a1)
{
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E90FD8);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v18)
  {
    uint64_t v2 = sub_1000DF0C4((uint64_t)v17, v18);
    __n128 v3 = __chkstk_darwin(v2);
    uint64_t v5 = (void *)((char *)v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, __n128))(v6 + 16))(v5, v3);
    uint64_t v7 = *v5;
    uint64_t v8 = type metadata accessor for InteractionDonationManager();
    v16[3] = v8;
    v16[4] = &off_100E1F328;
    v16[0] = v7;
    type metadata accessor for InteractionDonationStoreObserver();
    long long v9 = (void *)swift_allocObject();
    uint64_t v10 = sub_1000DF0C4((uint64_t)v16, v8);
    __n128 v11 = __chkstk_darwin(v10);
    uint64_t v13 = (void *)((char *)v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, __n128))(v14 + 16))(v13, v11);
    uint64_t v15 = *v13;
    v9[5] = v8;
    void v9[6] = &off_100E1F328;
    _OWORD v9[2] = v15;
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v16);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v17);
    return (uint64_t)v9;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_10002E484()
{
  sub_100046CB8(319, (unint64_t *)&unk_100E82DC0, (void (*)(uint64_t))type metadata accessor for LocationComponentHeaderMetrics);
  if (v1 <= 0x3F)
  {
    sub_1001627C0(v0);
    swift_initStructMetadata();
  }
}

void sub_10002E51C()
{
  sub_100046C10(319, (unint64_t *)&qword_100E63C70, (void (*)(uint64_t))&type metadata accessor for LayoutDirection);
  if (v0 <= 0x3F)
  {
    sub_100046C10(319, (unint64_t *)&qword_100E63C78, (void (*)(uint64_t))&type metadata accessor for ContentSizeCategory);
    if (v1 <= 0x3F)
    {
      sub_100046C10(319, (unint64_t *)&qword_100E63C80, (void (*)(uint64_t))type metadata accessor for DisplayMetrics);
      if (v2 <= 0x3F)
      {
        sub_100046C10(319, (unint64_t *)&qword_100E63C88, (void (*)(uint64_t))&type metadata accessor for Font.Context);
        if (v3 <= 0x3F)
        {
          type metadata accessor for Text.Measurements();
          if (v4 <= 0x3F)
          {
            sub_1002306F0();
            if (v5 <= 0x3F) {
              swift_initStructMetadata();
            }
          }
        }
      }
    }
  }
}

uint64_t sub_10002E798()
{
  sub_10002E7F0();

  return swift_deallocClassInstance();
}

uint64_t sub_10002E7F0()
{
  swift_release();
  swift_release();
  swift_weakDestroy();
  uint64_t v1 = v0 + OBJC_IVAR____TtC7Weather23WireframeContentManager___observationRegistrar;
  uint64_t v2 = type metadata accessor for ObservationRegistrar();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

void sub_10002E86C(double *a1@<X8>)
{
  *a1 = sub_10019C838();
}

void sub_10002E898()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(void **)(v0 + 32);
  if (v2)
  {
    id v3 = v2;
    dispatch thunk of NSKeyValueObservation.invalidate()();
  }
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v7 = (void *)Strong;
    swift_getKeyPath();
    swift_allocObject();
    swift_weakInit();
    uint64_t v5 = _KeyValueCodingAndObserving.observe<A>(_:options:changeHandler:)();
    swift_release();
    swift_release();
  }
  else
  {
    uint64_t v5 = 0;
  }
  uint64_t v6 = *(void **)(v1 + 32);
  *(void *)(v1 + 32) = v5;

  sub_10006D1BC();
}

uint64_t sub_10002E994(uint64_t a1, uint64_t a2)
{
  char v4 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v4;
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 9) = *(unsigned char *)(a2 + 9);
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_10002EA04(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for AirQualityScaleCategory();
  uint64_t v51 = *(void *)(v2 - 8);
  uint64_t v52 = v2;
  __chkstk_darwin(v2);
  uint64_t v50 = (char *)&v47 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for AirQualityScale();
  uint64_t v48 = *(void *)(v4 - 8);
  uint64_t v49 = v4;
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10017DF08(&qword_100E885C0);
  __chkstk_darwin(v7 - 8);
  long long v9 = (char *)&v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for AirQuality();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v47 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for WeatherMapOverlayKind();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v47 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, a1, v14);
  int v18 = (*(uint64_t (**)(char *, uint64_t))(v15 + 88))(v17, v14);
  if (v18 == enum case for WeatherMapOverlayKind.precipitation(_:))
  {
    uint64_t v19 = (objc_class *)[self mainBundle];
    unint64_t v20 = 0xD000000000000021;
    unint64_t v21 = 0xD000000000000043;
    unint64_t v46 = 0x8000000100CAD330;
    unint64_t v22 = 0x8000000100CAD560;
    v23.super.isa = v19;
    uint64_t v24 = 0x7469706963657250;
    unint64_t v25 = 0xED00006E6F697461;
LABEL_3:
    uint64_t countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v20, (Swift::String_optional)0, v23, *(Swift::String *)&v24, *(Swift::String *)&v21)._countAndFlagsBits;

    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    return countAndFlagsBits;
  }
  int v28 = v18;
  if (v18 != enum case for WeatherMapOverlayKind.airQuality(_:))
  {
    if (v18 == enum case for WeatherMapOverlayKind.temperature(_:))
    {
      id v32 = [self mainBundle];
      v54._uint64_t countAndFlagsBits = 0xD000000000000041;
      v54._object = (void *)0x8000000100CAD510;
      v33._object = (void *)0x8000000100CAD4F0;
      v33._uint64_t countAndFlagsBits = 0xD00000000000001FLL;
      v34._uint64_t countAndFlagsBits = 0x74617265706D6554;
      v34._object = (void *)0xEB00000000657275;
      uint64_t countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v33, (Swift::String_optional)0, (NSBundle)v32, v34, v54)._countAndFlagsBits;

      return countAndFlagsBits;
    }
    int v43 = enum case for WeatherMapOverlayKind.wind(_:);
    uint64_t v19 = (objc_class *)[self mainBundle];
    if (v28 == v43)
    {
      v44._uint64_t countAndFlagsBits = 0xD000000000000018;
      v56._uint64_t countAndFlagsBits = 0xD00000000000003ALL;
      v56._object = (void *)0x8000000100CAD4B0;
      v44._object = (void *)0x8000000100CAD490;
      v45._uint64_t countAndFlagsBits = 0x70614D20646E6957;
      v45._object = (void *)0xE800000000000000;
      uint64_t countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v44, (Swift::String_optional)0, (NSBundle)v19, v45, v56)._countAndFlagsBits;

      return countAndFlagsBits;
    }
    unint64_t v21 = 0xD000000000000043;
    unint64_t v46 = 0x8000000100CAD330;
    unint64_t v20 = 0x7469706963657250;
    unint64_t v22 = 0xED00006E6F697461;
    v23.super.isa = v19;
    uint64_t v24 = 0;
    unint64_t v25 = 0xE000000000000000;
    goto LABEL_3;
  }
  type metadata accessor for MapComponent();
  type metadata accessor for WeatherData(0);
  WeatherDataModel.airQuality.getter();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v10) == 1)
  {
    sub_100686AC0((uint64_t)v9);
    id v29 = [self mainBundle];
    v53._uint64_t countAndFlagsBits = 0xD000000000000041;
    v53._object = (void *)0x8000000100CAD3A0;
    v30._object = (void *)0x8000000100CAD380;
    v30._uint64_t countAndFlagsBits = 0xD00000000000001FLL;
    v31._uint64_t countAndFlagsBits = 0x6C61755120726941;
    v31._object = (void *)0xEF70614D20797469;
    uint64_t countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v30, (Swift::String_optional)0, (NSBundle)v29, v31, v53)._countAndFlagsBits;
  }
  else
  {
    uint64_t v47 = v11;
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v13, v9, v10);
    id v35 = [self mainBundle];
    v55._uint64_t countAndFlagsBits = 0xD000000000000090;
    v55._object = (void *)0x8000000100CAD3F0;
    v36._uint64_t countAndFlagsBits = 0x70614D204025;
    v36._object = (void *)0xE600000000000000;
    v37._uint64_t countAndFlagsBits = 0;
    v37._object = (void *)0xE000000000000000;
    NSLocalizedString(_:tableName:bundle:value:comment:)(v36, (Swift::String_optional)0, (NSBundle)v35, v37, v55);

    sub_10017DF08(&qword_100E64020);
    uint64_t v38 = swift_allocObject();
    *(_OWORD *)(v38 + 16) = xmmword_100C251B0;
    AirQuality.scale.getter();
    uint64_t v39 = AirQualityScale.displayLabel.getter();
    uint64_t v41 = v40;
    (*(void (**)(char *, uint64_t))(v48 + 8))(v6, v49);
    *(void *)(v38 + 56) = &type metadata for String;
    *(void *)(v38 + 64) = sub_10012B7C0();
    *(void *)(v38 + 32) = v39;
    *(void *)(v38 + 40) = v41;
    uint64_t countAndFlagsBits = static String.localizedStringWithFormat(_:_:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char v42 = v50;
    AirQuality.currentScaleCategory.getter();
    AirQualityScaleCategory.glyph.getter();
    (*(void (**)(char *, uint64_t))(v51 + 8))(v42, v52);
    (*(void (**)(char *, uint64_t))(v47 + 8))(v13, v10);
  }
  return countAndFlagsBits;
}

uint64_t sub_10002F240@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X3>, int a4@<W4>, char a5@<W5>, uint64_t a6@<X7>, uint64_t a7@<X8>, unsigned __int8 a8)
{
  int v53 = a4;
  uint64_t v44 = a1;
  uint64_t v14 = type metadata accessor for CurrentWeather();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v40 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_100009118(a8, a6, a3, v8, a5);
  uint64_t v50 = v19;
  uint64_t v51 = v18;
  int v52 = a8;
  sub_1000366F0(a8, a6, v8, a5, a3, v54);
  uint64_t v48 = v54[1];
  uint64_t v49 = v54[0];
  uint64_t v46 = v54[3];
  uint64_t v47 = v54[2];
  int v45 = v55;
  uint64_t v20 = v44;
  uint64_t v21 = sub_100054324(v44, (uint64_t)a2);
  uint64_t v23 = v22;
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, v20, v14);
  if (v23)
  {
    uint64_t v44 = v21;
  }
  else
  {
    uint64_t v44 = CurrentWeather.conditionDescription.getter();
    uint64_t v23 = v24;
  }
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  uint64_t v26 = *a2;
  uint64_t v25 = a2[1];
  uint64_t v27 = a2[2];
  uint64_t v28 = a2[3];
  uint64_t v29 = a2[7];
  uint64_t v42 = a2[6];
  uint64_t v43 = v27;
  uint64_t v30 = a2[9];
  uint64_t v41 = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char v31 = static Settings.InternationalAuthenticity.verticalHeroEnabledForCurrentLocale.getter();
  uint64_t v32 = a2[10];
  uint64_t v33 = a2[11];
  swift_bridgeObjectRetain();
  uint64_t result = static Settings.Features.homeAndWorkEnabled.getter();
  char v35 = v53 & 1;
  uint64_t v37 = v49;
  uint64_t v36 = v50;
  *(void *)a7 = v51;
  *(void *)(a7 + 8) = v36;
  LOBYTE(v36) = v52 & 1;
  uint64_t v38 = v48;
  *(void *)(a7 + 16) = v37;
  *(void *)(a7 + 24) = v38;
  uint64_t v39 = v46;
  *(void *)(a7 + 32) = v47;
  *(void *)(a7 + 40) = v39;
  *(unsigned char *)(a7 + 48) = v45;
  *(void *)(a7 + 56) = v44;
  *(void *)(a7 + 64) = v23;
  *(void *)(a7 + 72) = v26;
  *(void *)(a7 + 80) = v25;
  *(void *)(a7 + 88) = v43;
  *(void *)(a7 + 96) = v28;
  *(void *)(a7 + 104) = v42;
  *(void *)(a7 + 112) = v29;
  *(void *)(a7 + 120) = v41;
  *(void *)(a7 + 128) = v30;
  *(unsigned char *)(a7 + 136) = v31 & 1;
  *(unsigned char *)(a7 + 137) = 1;
  *(unsigned char *)(a7 + 138) = v35;
  *(void *)(a7 + 144) = v32;
  *(void *)(a7 + 152) = v33;
  *(unsigned char *)(a7 + 160) = v36;
  *(unsigned char *)(a7 + 161) = result & 1;
  return result;
}

uint64_t sub_10002F4B4()
{
  return EnvironmentValues.fontResolutionContext.getter();
}

uint64_t sub_10002F4D8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  id v2 = [self mainBundle];
  if (v1 == 10)
  {
    v10._uint64_t countAndFlagsBits = 0xD000000000000086;
    v10._object = (void *)0x8000000100C9FF20;
    v3._uint64_t countAndFlagsBits = 0x46207961442D6425;
    v3._object = (void *)0xEF7473616365726FLL;
    v4._uint64_t countAndFlagsBits = 0;
    v4._object = (void *)0xE000000000000000;
    NSLocalizedString(_:tableName:bundle:value:comment:)(v3, (Swift::String_optional)0, (NSBundle)v2, v4, v10);

    sub_10017DF08(&qword_100E64020);
    uint64_t v5 = swift_allocObject();
    *(_OWORD *)(v5 + 16) = xmmword_100C251B0;
    *(void *)(v5 + 56) = &type metadata for Int;
    *(void *)(v5 + 64) = &protocol witness table for Int;
    *(void *)(v5 + 32) = 10;
    uint64_t countAndFlagsBits = static String.localizedStringWithFormat(_:_:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    v11._object = (void *)0x8000000100C9FED0;
    v8._uint64_t countAndFlagsBits = 0x6F4620796C696144;
    v8._object = (void *)0xEE00747361636572;
    v9._uint64_t countAndFlagsBits = 0;
    v9._object = (void *)0xE000000000000000;
    v11._uint64_t countAndFlagsBits = 0xD000000000000040;
    uint64_t countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v8, (Swift::String_optional)0, (NSBundle)v2, v9, v11)._countAndFlagsBits;
  }
  return countAndFlagsBits;
}

void sub_10002F678()
{
  type metadata accessor for LocationViewModel();
  if (v0 <= 0x3F)
  {
    type metadata accessor for Text.Measurements();
    if (v1 <= 0x3F)
    {
      sub_10002FCFC(319, (unint64_t *)&qword_100E63C80, (void (*)(uint64_t))type metadata accessor for DisplayMetrics);
      if (v2 <= 0x3F)
      {
        sub_10002FCFC(319, (unint64_t *)&qword_100E63C78, (void (*)(uint64_t))&type metadata accessor for ContentSizeCategory);
        if (v3 <= 0x3F) {
          swift_initStructMetadata();
        }
      }
    }
  }
}

void sub_10002F818()
{
  sub_10002FCFC(319, (unint64_t *)&qword_100E63C80, (void (*)(uint64_t))type metadata accessor for DisplayMetrics);
  if (v0 <= 0x3F)
  {
    sub_10002FCFC(319, (unint64_t *)&qword_100E63C78, (void (*)(uint64_t))&type metadata accessor for ContentSizeCategory);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_10002F968()
{
  sub_10002FD50(319, (unint64_t *)&qword_100E63C80, (uint64_t (*)(uint64_t))type metadata accessor for DisplayMetrics, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
  if (v0 <= 0x3F)
  {
    sub_10002FD50(319, (unint64_t *)&qword_100E63C78, (uint64_t (*)(uint64_t))&type metadata accessor for ContentSizeCategory, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
    if (v1 <= 0x3F)
    {
      sub_1002308A0();
      if (v2 <= 0x3F)
      {
        type metadata accessor for Text.Measurements();
        if (v3 <= 0x3F) {
          swift_initStructMetadata();
        }
      }
    }
  }
}

void sub_10002FBA8()
{
  sub_10002FCFC(319, (unint64_t *)&qword_100E63C80, (void (*)(uint64_t))type metadata accessor for DisplayMetrics);
  if (v0 <= 0x3F)
  {
    sub_1002308A0();
    if (v1 <= 0x3F)
    {
      sub_10002FCFC(319, (unint64_t *)&qword_100E63C78, (void (*)(uint64_t))&type metadata accessor for ContentSizeCategory);
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

void sub_10002FCFC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = type metadata accessor for Environment.Content();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_10002FD50(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_10002FDB4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = type metadata accessor for Environment.Content();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void *sub_10002FE08(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  sub_1001626E0();
  uint64_t v7 = v6 - v5;
  type metadata accessor for OS_dispatch_queue.Attributes();
  sub_100162E4C();
  __chkstk_darwin(v8);
  sub_1001626E0();
  uint64_t v9 = type metadata accessor for DispatchQoS();
  __chkstk_darwin(v9 - 8);
  sub_1001626E0();
  sub_1001AB3E0();
  v2[4] = 0;
  v2[5] = 0;
  static DispatchQoS.unspecified.getter();
  sub_100215C98((unint64_t *)&qword_100E62D18, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_10017DF08(&qword_100E62D20);
  sub_10012470C((unint64_t *)&qword_100E62D28, &qword_100E62D20);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  (*(void (**)(uint64_t, void, uint64_t))(v4 + 104))(v7, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v3);
  v2[6] = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  v2[2] = a1;
  v2[3] = a2;
  return v2;
}

void sub_100030040()
{
  if (qword_100E62788 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for Logger();
  sub_1002102B0(v0, (uint64_t)qword_100F51DB0);
  oslog = Logger.logObject.getter();
  os_log_type_t v1 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(oslog, v1))
  {
    unint64_t v2 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v2 = 0;
    _os_log_impl((void *)&_mh_execute_header, oslog, v1, "Lazy: Hiding under presentation", v2, 2u);
    swift_slowDealloc();
  }
}

uint64_t sub_100030128@<X0>(uint64_t a1@<X8>)
{
  sub_1001B1E64((void *)(v1 + OBJC_IVAR____TtC7Weather38SunriseSunsetComponentViewModelFactory_viewModelFactory), *(void *)(v1 + OBJC_IVAR____TtC7Weather38SunriseSunsetComponentViewModelFactory_viewModelFactory + 24));
  uint64_t v3 = type metadata accessor for LocationComponentContainerViewModel();
  dispatch thunk of SunriseSunsetViewModelFactoryType.makeViewModel(for:component:)();
  uint64_t v4 = SunriseSunsetViewModel.headerTitle.getter();
  uint64_t v6 = v5;
  uint64_t v7 = SunriseSunsetViewModel.headerIcon.getter();
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v6;
  *(void *)(a1 + 16) = v7;
  *(void *)(a1 + 24) = v8;
  *(unsigned char *)(a1 + 32) = 0;
  type metadata accessor for LocationComponentHeaderViewModel(0);
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = 0;
  swift_storeEnumTagMultiPayload();
  type metadata accessor for LocationComponentViewModel();
  swift_storeEnumTagMultiPayload();
  uint64_t v9 = a1 + *(int *)(v3 + 28);
  uint64_t v10 = type metadata accessor for LocationComponentAction(0);
  swift_storeEnumTagMultiPayload();
  uint64_t result = _s7Weather24LocationCompositionStateOwst_0(v9, 0, 1, v10);
  *(_WORD *)(a1 + *(int *)(v3 + 24)) = 259;
  return result;
}

uint64_t sub_100030248(uint64_t a1, const char *a2, void (*a3)(uint64_t, uint64_t))
{
  if (qword_100E627B0 != -1) {
    swift_once();
  }
  uint64_t v5 = type metadata accessor for Logger();
  sub_1002102B0(v5, (uint64_t)qword_100F51E28);
  uint64_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v8 = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, v7, a2, v8, 2u);
    swift_slowDealloc();
  }

  sub_10003D10C(&OBJC_IVAR____TtC7Weather13SceneDelegate____lazy_storage___stateManager, &qword_100E74C00, (uint64_t (*)(unsigned char *, uint64_t))sub_1001262E4, (uint64_t *)&unk_100E74C08, (uint64_t)v12);
  uint64_t v9 = v13;
  uint64_t v10 = v14;
  sub_1001B1E64(v12, v13);
  a3(v9, v10);
  return _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v12);
}

uint64_t assignWithCopy for DetermineWhetherViewsShouldConsiderMapPinnedToTopModifier(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 8);
  uint64_t v4 = *(void *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 24);
  uint64_t v6 = *(void *)(a2 + 32);
  uint64_t v7 = *(void *)(a2 + 40);
  uint64_t v8 = *(void *)(a2 + 48);
  uint64_t v9 = *(void *)(a2 + 56);
  uint64_t v10 = *(void *)(a2 + 64);
  uint64_t v11 = *(void *)(a2 + 72);
  sub_1001910C8(v3, v4, v5, v6, v7, v8, v9, v10, v11, *(unsigned char *)(a2 + 80));
  uint64_t v12 = *(void *)(a1 + 8);
  uint64_t v13 = *(void *)(a1 + 16);
  uint64_t v14 = *(void *)(a1 + 24);
  uint64_t v15 = *(void *)(a1 + 32);
  uint64_t v16 = *(void *)(a1 + 40);
  uint64_t v17 = *(void *)(a1 + 48);
  uint64_t v18 = *(void *)(a1 + 56);
  uint64_t v19 = *(void *)(a1 + 64);
  uint64_t v20 = *(void *)(a1 + 72);
  char v21 = *(unsigned char *)(a1 + 80);
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = v6;
  *(void *)(a1 + 40) = v7;
  *(void *)(a1 + 48) = v8;
  *(void *)(a1 + 56) = v9;
  *(void *)(a1 + 64) = v10;
  *(void *)(a1 + 72) = v11;
  *(unsigned char *)(a1 + 80) = v23;
  sub_10018CCC4(v12, v13, v14, v15, v16, v17, v18, v19, v20, v21);
  return a1;
}

uint64_t sub_100030478(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = type metadata accessor for DispatchQoS();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

id WeatherLocation.init(identifier:display:pronunciationHint:)()
{
  sub_10017DE18();
  if (v2)
  {
    NSString v3 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v3 = 0;
  }
  NSString v4 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  if (v1)
  {
    NSString v5 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v5 = 0;
  }
  v8.receiver = v0;
  v8.super_class = (Class)type metadata accessor for WeatherLocation();
  id v6 = [super initWithIdentifier:v3 displayString:v4 pronunciationHint:v5];

  return v6;
}

uint64_t sub_1000305C4@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for LocationComponentActionState();
  uint64_t result = ObservableObject<>.objectWillChange.getter();
  *a1 = result;
  return result;
}

uint64_t sub_100030604()
{
  type metadata accessor for LocationComponentActionState();
  uint64_t result = swift_allocObject();
  *(unsigned char *)(result + 16) = 0;
  return result;
}

uint64_t type metadata accessor for LocationComponentActionState()
{
  return self;
}

void *sub_100030654(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v17 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  sub_100179C0C();
  uint64_t v6 = v5;
  __chkstk_darwin(v7);
  sub_1001626E0();
  uint64_t v10 = v9 - v8;
  type metadata accessor for OS_dispatch_queue.Attributes();
  sub_100162E4C();
  __chkstk_darwin(v11);
  sub_100162F18();
  uint64_t v12 = type metadata accessor for DispatchQoS();
  __chkstk_darwin(v12 - 8);
  sub_1001626E0();
  uint64_t v13 = (uint64_t)v4 + OBJC_IVAR____TtC7Weather26InteractionDonationManager_previousDonatedLocationIdentifier;
  uint64_t v14 = type metadata accessor for Location.Identifier();
  _s7Weather24LocationCompositionStateOwst_0(v13, 1, 1, v14);
  uint64_t v16 = OBJC_IVAR____TtC7Weather26InteractionDonationManager_queue;
  sub_1001ABC4C(0, (unint64_t *)&qword_100E62D10);
  static DispatchQoS.utility.getter();
  sub_100128C74((unint64_t *)&qword_100E62D18, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_10017DF08(&qword_100E62D20);
  sub_10012470C((unint64_t *)&qword_100E62D28, &qword_100E62D20);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  (*(void (**)(uint64_t, void, uint64_t))(v6 + 104))(v10, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v17);
  *(void *)((char *)v4 + v16) = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  v4[2] = a1;
  v4[3] = a2;
  v4[4] = a3;
  v4[5] = a4;
  return v4;
}

uint64_t sub_1000308B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for NotificationSubscription.Kind();
  uint64_t v32 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for Location.Identifier();
  uint64_t v31 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for SavedLocation();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10 - 8);
  uint64_t v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for LocationsAction();
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100166618(a1, (uint64_t)v16, (void (*)(void))type metadata accessor for LocationsAction);
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 1:
      uint64_t v20 = type metadata accessor for Location();
      return (*(uint64_t (**)(char *, uint64_t))(*(void *)(v20 - 8) + 8))(v16, v20);
    case 2:
      uint64_t v21 = *(void *)v16;
      swift_bridgeObjectRelease();
      sub_1006BBDE8(v21);
      return swift_bridgeObjectRelease();
    case 3:
      return result;
    case 4:
      unint64_t v22 = *(void *)v16;
      uint64_t v23 = *(void *)(a2 + 56);
      uint64_t v24 = OBJC_IVAR____TtCV7Weather9MainState8_Storage_locations;
      uint64_t result = type metadata accessor for LocationsState();
      if ((v22 & 0x8000000000000000) != 0)
      {
        __break(1u);
        goto LABEL_14;
      }
      uint64_t v25 = *(void *)(v23 + v24 + *(int *)(result + 20));
      if (v22 >= *(void *)(v25 + 16))
      {
LABEL_14:
        __break(1u);
        return result;
      }
      sub_100166618(v25+ ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80))+ *(void *)(v11 + 72) * v22, (uint64_t)v13, (void (*)(void))&type metadata accessor for SavedLocation);
      SavedLocation.identifier.getter();
      static NotificationSubscription.Kind.all.getter();
      sub_1006BC908((uint64_t)v9, (uint64_t)v6, (void (*)(void))&type metadata accessor for Location.Identifier, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))&dispatch thunk of NotificationSubscriptionManagerType.unsubscribe(from:for:), (uint64_t)&Location.Identifier.id.getter, (uint64_t)"Failed to unsubscribe from notifications for location: %{private,mask.hash}s with error: %{public}s %@");
      (*(void (**)(char *, uint64_t))(v32 + 8))(v6, v4);
      (*(void (**)(char *, uint64_t))(v31 + 8))(v9, v7);
      uint64_t v18 = &type metadata accessor for SavedLocation;
      uint64_t v19 = (uint64_t)v13;
      return sub_100158EDC(v19, (void (*)(void))v18);
    case 5:
      uint64_t v26 = *(void *)v16;
      uint64_t v27 = *(void *)(a2 + 64) + OBJC_IVAR____TtCV7Weather9MainState8_Storage_locations;
      uint64_t v28 = *(void *)(v27 + *(int *)(type metadata accessor for LocationsState() + 40));
      swift_bridgeObjectRetain_n();
      uint64_t v29 = sub_100091A24(v26, v28);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1000395EC((uint64_t)v29);
      return swift_bridgeObjectRelease();
    case 6:
      sub_10015303C(*(void *)v16, *((void *)v16 + 1), v16[16]);
      type metadata accessor for LocationsState();
      uint64_t v30 = swift_bridgeObjectRetain();
      sub_1006BC54C(v30);
      return swift_bridgeObjectRelease();
    default:
      sub_10003B1D8(*(void *)(a2 + 64));
      uint64_t v18 = &type metadata accessor for CurrentLocation;
      uint64_t v19 = (uint64_t)v16;
      return sub_100158EDC(v19, (void (*)(void))v18);
  }
}

uint64_t sub_100030D60()
{
  uint64_t v0 = type metadata accessor for Scope();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  NSString v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for SessionManager();
  RegistrationContainer.register<A>(_:name:factory:)();
  Definition.thenConfigure(_:)();
  swift_release();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for Scope.containerSingleton(_:), v0);
  Definition.inScope(_:)();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

char *sub_100030ED4(uint64_t a1)
{
  uint64_t v51 = type metadata accessor for URL.WeatherSourcePar();
  uint64_t v2 = *(void *)(v51 - 8);
  __chkstk_darwin(v51);
  uint64_t v50 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = type metadata accessor for URL();
  uint64_t v4 = *(void *)(v49 - 8);
  uint64_t v5 = __chkstk_darwin(v49);
  uint64_t v48 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v47 = (char *)&v35 - v7;
  uint64_t v8 = type metadata accessor for WeatherProviderAttribution();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v46 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v35 - v12;
  sub_1001B1E64((void *)(a1 + 256), *(void *)(a1 + 280));
  Location.coordinate.getter();
  uint64_t v14 = (void *)CLLocationCoordinate2D.clLocation.getter();
  uint64_t v15 = dispatch thunk of WeatherProviderAttributionCacheManagerType.cachedAttributions(for:)();

  uint64_t v16 = *(void *)(v15 + 16);
  if (v16)
  {
    unsigned __int8 v55 = (char *)_swiftEmptyArrayStorage;
    sub_1007F38AC();
    uint64_t v18 = *(void (**)(char *, unint64_t, uint64_t))(v9 + 16);
    uint64_t v17 = v9 + 16;
    unint64_t v19 = (*(unsigned __int8 *)(v17 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 64);
    uint64_t v35 = v15;
    unint64_t v43 = v19;
    uint64_t v44 = v18;
    unint64_t v20 = v15 + v19;
    uint64_t v42 = *(void *)(v17 + 56);
    uint64_t v41 = (void (**)(char *, void, uint64_t))(v2 + 104);
    unsigned int v40 = enum case for URL.WeatherSourcePar.app(_:);
    uint64_t v38 = (void (**)(char *, uint64_t))(v4 + 8);
    uint64_t v39 = (void (**)(char *, uint64_t))(v2 + 8);
    uint64_t v36 = (void (**)(char *, char *, uint64_t))(v17 + 16);
    uint64_t v37 = (void (**)(char *, uint64_t))(v17 - 8);
    uint64_t v45 = v17;
    do
    {
      uint64_t v54 = v16;
      uint64_t v21 = v46;
      v44(v46, v20, v8);
      uint64_t v22 = WeatherProviderAttribution.name.getter();
      uint64_t v52 = v23;
      uint64_t v53 = v22;
      WeatherProviderAttribution.logo.getter();
      uint64_t v24 = v8;
      uint64_t v25 = v48;
      WeatherProviderAttribution.source.getter();
      uint64_t v26 = v50;
      uint64_t v27 = v13;
      uint64_t v28 = v51;
      (*v41)(v50, v40, v51);
      URL.applyWeatherSourceQueryParams(for:)();
      uint64_t v29 = v28;
      uint64_t v13 = v27;
      (*v39)(v26, v29);
      uint64_t v30 = v25;
      uint64_t v8 = v24;
      (*v38)(v30, v49);
      WeatherProviderAttribution.init(name:logo:source:)();
      (*v37)(v21, v24);
      uint64_t v31 = v55;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1007F38AC();
        uint64_t v31 = v55;
      }
      unint64_t v32 = *((void *)v31 + 2);
      if (v32 >= *((void *)v31 + 3) >> 1)
      {
        sub_1007F38AC();
        uint64_t v31 = v55;
      }
      *((void *)v31 + 2) = v32 + 1;
      uint64_t v33 = v42;
      (*v36)(&v31[v43 + v32 * v42], v13, v24);
      unsigned __int8 v55 = v31;
      v20 += v33;
      uint64_t v16 = v54 - 1;
    }
    while (v54 != 1);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return (char *)_swiftEmptyArrayStorage;
  }
  return v31;
}

uint64_t *sub_10003134C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v7 = type metadata accessor for LocationModel();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v7))
        {
          uint64_t v8 = type metadata accessor for NotificationLocation();
          memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v7);
        }
        uint64_t v20 = *(int *)(sub_10017DF08((uint64_t *)&unk_100EAC3E0) + 48);
        uint64_t v21 = (char *)a1 + v20;
        uint64_t v22 = (char *)a2 + v20;
        uint64_t v23 = type metadata accessor for URL();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v22, 1, v23))
        {
          uint64_t v24 = sub_10017DF08(&qword_100E749B0);
          memcpy(v21, v22, *(void *)(*(void *)(v24 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v21, 0, 1, v23);
        }
        goto LABEL_14;
      case 2u:
        uint64_t v10 = type metadata accessor for NotificationSubscription.Location();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v10 - 8) + 16))(a1, a2, v10);
        uint64_t v11 = *(int *)(sub_10017DF08(&qword_100E6F630) + 48);
        uint64_t v12 = (char *)a1 + v11;
        uint64_t v13 = (char *)a2 + v11;
        uint64_t v14 = type metadata accessor for NotificationSubscription.Kind();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
        goto LABEL_14;
      case 3u:
      case 4u:
        *a1 = *a2;
        swift_bridgeObjectRetain();
        goto LABEL_14;
      case 5u:
        uint64_t v15 = type metadata accessor for Location();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v15 - 8) + 16))(a1, a2, v15);
        uint64_t v16 = *(int *)(sub_10017DF08(&qword_100E6F638) + 48);
        uint64_t v17 = (char *)a1 + v16;
        uint64_t v18 = (char *)a2 + v16;
        uint64_t v19 = type metadata accessor for NotificationSubscription.Kind();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
LABEL_14:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(v6 + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_1000316F4()
{
  return sub_10003172C();
}

uint64_t sub_10003172C()
{
  uint64_t v1 = sub_10017DF08(&qword_100E6BAD0);
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = v0 + OBJC_IVAR____TtC7Weather27PagingContentOffsetsStorage__offsets;
  long long v7 = xmmword_100E6B9E0;
  char v8 = byte_100E6B9F0;
  long long v9 = unk_100E6B9F8;
  char v10 = byte_100E6BA08;
  Published.init(initialValue:)();
  (*(void (**)(uint64_t, char *, uint64_t))(v2 + 32))(v5, v4, v1);
  return v0;
}

uint64_t sub_100031844()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for LocationViewModel();
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000A1418()[2];
  uint64_t result = swift_bridgeObjectRelease();
  if (v5)
  {
    if (*(void *)(v1 + *(int *)(type metadata accessor for LocationContentView(0) + 84)))
    {
      type metadata accessor for TipCoordinator();
      swift_retain();
      ObservableResolver.resolve<A>(_:)();
      swift_release();
      if (v8[1])
      {
        swift_retain();
        sub_100133E68();
        swift_release();
        uint64_t v7 = *(void *)&v4[*(int *)(v2 + 28)];
        swift_bridgeObjectRetain();
        sub_1001338DC((uint64_t)v4, (void (*)(void))type metadata accessor for LocationViewModel);
        sub_1001EB8AC(v7);
        sub_10007B510();
        swift_release();
        return swift_bridgeObjectRelease();
      }
      __break(1u);
    }
    type metadata accessor for ObservableResolver();
    sub_100135128((uint64_t)&qword_100E70FD0);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t sub_100031A78@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_10017DF08(&qword_100E85920);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v7 = &v13[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v5);
  long long v9 = &v13[-v8];
  uint64_t v10 = v2
      + OBJC_IVAR____TtC7Weather43WeatherConditionBackgroundModelInputFactory____lazy_storage___locationAnimationKind;
  swift_beginAccess();
  sub_10006DF38(v10, (uint64_t)v9, &qword_100E85920);
  uint64_t v11 = type metadata accessor for Settings.VFX.AnimatedBackgrounds.AnimationKind();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v11) != 1) {
    return (*(uint64_t (**)(uint64_t, unsigned char *, uint64_t))(*(void *)(v11 - 8) + 32))(a1, v9, v11);
  }
  sub_1001781AC((uint64_t)v9, &qword_100E85920);
  static Settings.VFX.animatedBackgrounds.getter();
  Settings.VFX.AnimatedBackgrounds.locationAnimationKind.getter();
  swift_release();
  sub_100225194();
  Configurable.setting<A>(_:)();
  swift_release();
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16))(v7, a1, v11);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v7, 0, 1, v11);
  swift_beginAccess();
  sub_1001DF004((uint64_t)v7, v10, &qword_100E85920);
  return swift_endAccess();
}

uint64_t sub_100031CA8()
{
  uint64_t v0 = type metadata accessor for Settings.VFX.AnimatedBackgrounds.AnimationKind();
  sub_100097814(v0, qword_100EA12F0);
  sub_1002102B0(v0, (uint64_t)qword_100EA12F0);
  type metadata accessor for SettingReader();
  static SettingReader.shared.getter();
  static Settings.VFX.animatedBackgrounds.getter();
  Settings.VFX.AnimatedBackgrounds.locationAnimationKind.getter();
  swift_release();
  SettingReader.read<A>(_:)();
  swift_release();

  return swift_release();
}

uint64_t assignWithCopy for ContentStatusBannerViewStyle(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_retain();
  swift_release();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  return a1;
}

uint64_t sub_100031DE8()
{
  uint64_t v0 = type metadata accessor for CallbackScope();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v6[-1] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  ProxyContainer.private.getter();
  type metadata accessor for AppIntentsDependencyStartupTask();
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  swift_release();
  ProxyContainer.callback.getter();
  sub_1001B1E64(v6, v6[3]);
  type metadata accessor for StartupTaskManager();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for CallbackScope.any(_:), v0);
  dispatch thunk of CallbackRegistrationType.whenResolving<A>(_:scope:callback:)();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v6);
}

uint64_t sub_100031F8C(void *a1)
{
  sub_1001B1E64(a1, a1[3]);
  uint64_t v1 = dispatch thunk of LocationMetadataManagerType.availableCountryCode(for:)();
  uint64_t v3 = v1;
  if (!v2)
  {
    sub_10003204C(v1, 0);
    return 0;
  }
  uint64_t v4 = v2;
  if (v2 == 1) {
    return 0;
  }
  if (v1 == 20035 && v2 == 0xE200000000000000)
  {
    sub_10003204C(20035, 0xE200000000000000);
    return 1;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    sub_10003204C(v3, v4);
    return v6 & 1;
  }
}

uint64_t sub_10003204C(uint64_t a1, uint64_t a2)
{
  if (a2 != 1) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_100032060@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for GeocodeService();
  swift_allocObject();
  GeocodeService.init()();
  type metadata accessor for GeocodeManager();
  swift_allocObject();
  GeocodeManager.init(service:store:)();
  uint64_t OptionsProvider = type metadata accessor for WeatherServiceFetchOptionsProvider();
  swift_allocObject();
  uint64_t result = WeatherServiceFetchOptionsProvider.init(geocodeManager:)();
  a1[3] = OptionsProvider;
  a1[4] = (uint64_t)&protocol witness table for WeatherServiceFetchOptionsProvider;
  *a1 = result;
  return result;
}

unint64_t sub_100032120()
{
  unint64_t result = qword_100EAA8A8;
  if (!qword_100EAA8A8)
  {
    sub_10018C6DC(&qword_100EAA690);
    sub_10018C6DC(&qword_100EAA680);
    sub_10018C6DC(&qword_100E827E0);
    sub_10018C6DC(&qword_100EAA678);
    type metadata accessor for ContentSizeCategory();
    sub_1000F7EA4();
    sub_1000F6744(&qword_100EAA788, (void (*)(uint64_t))&type metadata accessor for ContentSizeCategory);
    swift_getOpaqueTypeConformance2();
    sub_1000F7D54();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAA8A8);
  }
  return result;
}

uint64_t sub_10003226C(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v2 = a1 + *(int *)(type metadata accessor for FeelsLikeComponentPreprocessedDataModel() + 28);
  uint64_t v3 = type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference(0);
  if (!_s7Weather24LocationCompositionStateOwet_0(v2, 1, v3))
  {
    swift_bridgeObjectRelease();
    uint64_t v4 = v2 + *(int *)(v3 + 20);
    uint64_t v5 = type metadata accessor for TemperatureScaleConfiguration();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
    type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
    swift_bridgeObjectRelease();
  }

  return swift_bridgeObjectRelease();
}

uint64_t sub_10003235C()
{
  ProxyContainer.public.getter();
  sub_10017DF08(&qword_100E870F8);
  sub_100179D0C();
  swift_release();
  swift_release();
  ProxyContainer.public.getter();
  sub_100179D0C();
  swift_release();

  return swift_release();
}

uint64_t sub_1000323FC()
{
  v1[14] = v0;
  uint64_t v2 = type metadata accessor for Location();
  v1[15] = v2;
  v1[16] = *(void *)(v2 - 8);
  v1[17] = swift_task_alloc();
  v1[18] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for LocationOfInterestType();
  v1[19] = v3;
  v1[20] = *(void *)(v3 - 8);
  v1[21] = swift_task_alloc();
  v1[22] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for LocationOfInterest();
  v1[23] = v4;
  v1[24] = *(void *)(v4 - 8);
  v1[25] = swift_task_alloc();
  v1[26] = swift_task_alloc();
  return _swift_task_switch(sub_10021B990, v0, 0);
}

uint64_t sub_1000325A4(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for ReportWeatherMonitor();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for ReportWeatherMonitor()
{
  return self;
}

char *sub_100032608(char *a1, char **a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *(void *)a1 = *a2;
    a1 = &v8[(v5 + 16) & ~(unint64_t)v5];
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 2u:
        uint64_t v7 = type metadata accessor for Locale();
        (*(void (**)(char *, char **, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
        goto LABEL_34;
      case 3u:
        uint64_t v10 = type metadata accessor for ActivityAction();
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload == 1)
        {
          type metadata accessor for PreviewLocation();
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
              uint64_t v19 = type metadata accessor for LocationOfInterest();
              (*(void (**)(char *, char **, uint64_t))(*(void *)(v19 - 8) + 16))(a1, a2, v19);
              break;
            case 2u:
              uint64_t v21 = *a2;
              uint64_t v20 = a2[1];
              *(void *)a1 = *a2;
              *((void *)a1 + 1) = v20;
              uint64_t v22 = a2[3];
              *((void *)a1 + 2) = a2[2];
              *((void *)a1 + 3) = v22;
              uint64_t v23 = a2[5];
              *((void *)a1 + 4) = a2[4];
              *((void *)a1 + 5) = v23;
              *((void *)a1 + 6) = a2[6];
              uint64_t v24 = type metadata accessor for SearchLocation();
              uint64_t v25 = *(int *)(v24 + 32);
              __dst = &a1[v25];
              uint64_t v36 = v24;
              Swift::String v34 = (char *)a2 + v25;
              uint64_t v26 = type metadata accessor for Location();
              uint64_t v27 = v21;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v34, 1, v26))
              {
                uint64_t v28 = sub_10017DF08(&qword_100E639E8);
                memcpy(__dst, v34, *(void *)(*(void *)(v28 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 16))(__dst, v34, v26);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dst, 0, 1, v26);
              }
              uint64_t v30 = *(int *)(v36 + 36);
              uint64_t v31 = &a1[v30];
              unint64_t v32 = (char *)a2 + v30;
              *(_OWORD *)uint64_t v31 = *(_OWORD *)v32;
              v31[16] = v32[16];
              break;
            case 3u:
              *(_OWORD *)a1 = *(_OWORD *)a2;
              uint64_t v29 = a2[3];
              *((void *)a1 + 2) = a2[2];
              *((void *)a1 + 3) = v29;
              swift_bridgeObjectRetain();
              break;
            default:
              uint64_t v16 = type metadata accessor for Location();
              (*(void (**)(char *, char **, uint64_t))(*(void *)(v16 - 8) + 16))(a1, a2, v16);
              break;
          }
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          if (EnumCaseMultiPayload) {
            goto LABEL_19;
          }
          type metadata accessor for SavedLocation();
          if (swift_getEnumCaseMultiPayload() == 1) {
            uint64_t v12 = type metadata accessor for SavedLocation.Placeholder();
          }
          else {
            uint64_t v12 = type metadata accessor for Location();
          }
          (*(void (**)(char *, char **))(*(void *)(v12 - 8) + 16))(a1, a2);
          swift_storeEnumTagMultiPayload();
        }
        goto LABEL_33;
      case 4u:
        long long v9 = a2[1];
        *(void *)a1 = *a2;
        *((void *)a1 + 1) = v9;
        swift_bridgeObjectRetain();
        goto LABEL_34;
      case 9u:
        unint64_t v13 = (unint64_t)a2[1];
        if (v13 >= 2)
        {
          *(void *)a1 = *a2;
          *((void *)a1 + 1) = v13;
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)a1 = *(_OWORD *)a2;
        }
        goto LABEL_34;
      case 0xBu:
        uint64_t v10 = type metadata accessor for ConfiguredUnitsAction();
        int v14 = swift_getEnumCaseMultiPayload();
        if (v14 == 1)
        {
          uint64_t v17 = type metadata accessor for UnitConfiguration.Temperature();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v17))
          {
            uint64_t v18 = sub_10017DF08(&qword_100E6F620);
            memcpy(a1, a2, *(void *)(*(void *)(v18 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char **, uint64_t))(*(void *)(v17 - 8) + 16))(a1, a2, v17);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v17);
          }
        }
        else
        {
          if (v14)
          {
LABEL_19:
            memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
            goto LABEL_34;
          }
          uint64_t v15 = type metadata accessor for ConfiguredUnit();
          (*(void (**)(char *, char **, uint64_t))(*(void *)(v15 - 8) + 16))(a1, a2, v15);
        }
LABEL_33:
        swift_storeEnumTagMultiPayload();
LABEL_34:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(v6 + 64));
        return a1;
    }
  }
  return a1;
}

uint64_t sub_100032C00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 8);
  char v7 = *(unsigned char *)(a2 + 16);
  sub_100195B7C(v6, v7);
  uint64_t v8 = *(void *)(a1 + 8);
  char v9 = *(unsigned char *)(a1 + 16);
  *(void *)(a1 + 8) = v6;
  *(unsigned char *)(a1 + 16) = v7;
  sub_10018F6D8(v8, v9);
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  uint64_t v13 = type metadata accessor for Text.Measurements();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 24))(v11, v12, v13);
  if (a1 != a2)
  {
    uint64_t v14 = *(int *)(a3 + 28);
    uint64_t v15 = (void *)(a1 + v14);
    uint64_t v16 = (void *)(a2 + v14);
    sub_100178110(a1 + v14, &qword_100E66E50);
    sub_10017DF08(&qword_100E66E50);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v17 = type metadata accessor for ColorSchemeContrast();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
    }
    else
    {
      *uint64_t v15 = *v16;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_100032D6C(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 28);
  uint64_t v5 = type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference(0);
  if (!_s7Weather24LocationCompositionStateOwet_0(v4, 1, v5))
  {
    swift_bridgeObjectRelease();
    uint64_t v6 = v4 + *(int *)(v5 + 20);
    uint64_t v7 = type metadata accessor for TemperatureScaleConfiguration();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
    type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
    swift_bridgeObjectRelease();
  }

  return swift_bridgeObjectRelease();
}

uint64_t sub_100032E54@<X0>(uint64_t a1@<X8>)
{
  uint64_t v4 = sub_10017DF08(&qword_100E749B0);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v7 = (char *)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v5);
  uint64_t v10 = (char *)&v49 - v9;
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v49 - v11;
  uint64_t v13 = type metadata accessor for Location();
  sub_100179C0C();
  uint64_t v15 = v14;
  __chkstk_darwin(v16);
  sub_10011C760();
  if (Location.kind.getter())
  {
    Location.coordinate.getter();
    double v30 = v29;
    double v32 = v31;
    Location.preciseName.getter();
    sub_10017A398();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v2, v1, v13);
    if (!v7)
    {
      Location.name.getter();
      sub_10017A398();
    }
    uint64_t v33 = self;
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v2, v13);
    id v34 = sub_1004DBE40(v30, v32, (uint64_t)v10, (uint64_t)v7, v33);
    if (v34)
    {
      uint64_t v35 = v34;
      static URL._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v36 = 0;
    }
    else
    {
      uint64_t v36 = 1;
    }
    uint64_t v47 = type metadata accessor for URL();
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v12, v36, 1, v47);
  }
  else
  {
    uint64_t v17 = Location.searchTitle.getter();
    if (v18)
    {
      uint64_t v19 = sub_1004DB9FC(v1, v17);
      uint64_t v21 = v20;
      swift_bridgeObjectRelease();
      uint64_t v22 = self;
      Location.coordinate.getter();
      id v25 = sub_10001CCC8(v23, v24, 0.01, 0.01, v19, v21, v22);
      if (v25)
      {
        uint64_t v26 = v25;
        static URL._unconditionallyBridgeFromObjectiveC(_:)();

        uint64_t v27 = type metadata accessor for URL();
        uint64_t v28 = 0;
      }
      else
      {
        uint64_t v27 = type metadata accessor for URL();
        uint64_t v28 = 1;
      }
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v10, v28, 1, v27);
      uint64_t v12 = v10;
    }
    else
    {
      uint64_t v37 = self;
      uint64_t v38 = Location.name.getter();
      uint64_t v40 = v39;
      Location.coordinate.getter();
      id v43 = sub_10001CCC8(v41, v42, 0.01, 0.01, v38, v40, v37);
      if (v43)
      {
        uint64_t v44 = v43;
        static URL._unconditionallyBridgeFromObjectiveC(_:)();

        uint64_t v45 = type metadata accessor for URL();
        uint64_t v46 = 0;
      }
      else
      {
        uint64_t v45 = type metadata accessor for URL();
        uint64_t v46 = 1;
      }
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v7, v46, 1, v45);
      uint64_t v12 = v7;
    }
  }
  return sub_1000F21C8((uint64_t)v12, a1);
}

uint64_t sub_100033160()
{
  uint64_t v0 = sub_10017DF08(&qword_100E639E8);
  uint64_t v1 = __chkstk_darwin(v0 - 8);
  uint64_t v3 = (char *)&v23 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v1);
  uint64_t v5 = (char *)&v23 - v4;
  LocationModel.kind.getter();
  uint64_t v6 = Location.Identifier.Kind.rawValue.getter();
  uint64_t v8 = v7;
  if (v6 == Location.Identifier.Kind.rawValue.getter() && v8 == v9)
  {
    swift_bridgeObjectRelease_n();
    return LocationModel.name.getter();
  }
  char v11 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v11) {
    return LocationModel.name.getter();
  }
  LocationModel.location.getter();
  uint64_t v12 = type metadata accessor for Location();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v5, 1, v12) == 1)
  {
    sub_1001781AC((uint64_t)v5, &qword_100E639E8);
  }
  else
  {
    uint64_t v13 = Location.secondaryName.getter();
    uint64_t v16 = v15;
    uint64_t v17 = *(void (**)(char *, uint64_t))(*(void *)(v12 - 8) + 8);
    v17(v5, v12);
    if (!v16) {
      return 0;
    }
    LocationModel.location.getter();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v3, 1, v12) == 1)
    {
      sub_1001781AC((uint64_t)v3, &qword_100E639E8);
      return v13;
    }
    uint64_t v18 = Location.name.getter();
    uint64_t v20 = v19;
    v17(v3, v12);
    if (v13 == v18 && v16 == v20)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v22 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if ((v22 & 1) == 0) {
        return v13;
      }
    }
    swift_bridgeObjectRelease();
  }
  return 0;
}

uint64_t sub_1000333D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v21 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  sub_100179C0C();
  uint64_t v5 = v4;
  __chkstk_darwin(v6);
  sub_1001626E0();
  uint64_t v9 = v8 - v7;
  uint64_t v10 = type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin(v10);
  sub_1001626E0();
  uint64_t v11 = type metadata accessor for DispatchQoS();
  sub_100179C0C();
  uint64_t v13 = v12;
  __chkstk_darwin(v14);
  sub_1001626E0();
  uint64_t v17 = v16 - v15;
  sub_1001AB3E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16))(v17, a3, v11);
  sub_100215CE0();
  sub_10017DF08(&qword_100E62D20);
  sub_1002160C8();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  (*(void (**)(uint64_t, void, uint64_t))(v5 + 104))(v9, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v21);
  uint64_t v18 = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(a3, v11);
  return v18;
}

uint64_t sub_1000335C8()
{
  uint64_t v2 = type metadata accessor for Access();
  sub_100179C0C();
  uint64_t v4 = v3;
  __chkstk_darwin(v5);
  uint64_t v6 = sub_10017A0A0();
  sub_100179C0C();
  uint64_t v8 = v7;
  __chkstk_darwin(v9);
  sub_100179CB8();
  uint64_t v10 = type metadata accessor for Date();
  __chkstk_darwin(v10 - 8);
  sub_10016279C();
  static Date.distantPast.getter();
  (*(void (**)(uint64_t, void, uint64_t))(v8 + 104))(v1, enum case for Domain.standard(_:), v6);
  (*(void (**)(uint64_t, void, uint64_t))(v4 + 104))(v0, enum case for Access.public(_:), v2);
  sub_10017DF08(&qword_100EABFC0);
  swift_allocObject();
  uint64_t result = Setting.init(_:defaultValue:domain:access:)();
  qword_100F52290 = result;
  return result;
}

uint64_t sub_100033744()
{
  uint64_t result = type metadata accessor for URL();
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    uint64_t v8 = &v7;
    uint64_t result = type metadata accessor for WeatherMapOverlayKind();
    if (v2 <= 0x3F)
    {
      uint64_t v9 = *(void *)(result - 8) + 64;
      uint64_t result = type metadata accessor for DetailCondition();
      if (v3 <= 0x3F)
      {
        swift_getTupleTypeLayout2();
        uint64_t v10 = &v6;
        uint64_t v11 = &unk_100C32FC8;
        uint64_t result = type metadata accessor for Location();
        if (v4 <= 0x3F)
        {
          swift_getTupleTypeLayout2();
          uint64_t v12 = &v5;
          swift_initEnumMetadataMultiPayload();
          return 0;
        }
      }
    }
  }
  return result;
}

uint64_t sub_1000338C4()
{
  type metadata accessor for Access();
  sub_100179C0C();
  __chkstk_darwin(v0);
  sub_10017A0A0();
  sub_100179C0C();
  __chkstk_darwin(v1);
  sub_10011BFD8();
  uint64_t v2 = sub_10017A08C();
  v3(v2);
  uint64_t v4 = sub_10017FB90();
  v5(v4);
  sub_10017DF08(&qword_100E70818);
  swift_allocObject();
  uint64_t result = Setting.init(_:defaultValue:domain:access:)();
  qword_100F513D0 = result;
  return result;
}

uint64_t sub_1000339E0()
{
  type metadata accessor for Access();
  sub_100179C0C();
  __chkstk_darwin(v0);
  sub_10017A0A0();
  sub_100179C0C();
  __chkstk_darwin(v1);
  sub_10011BFD8();
  uint64_t v2 = sub_10017A08C();
  v3(v2);
  uint64_t v4 = sub_10017FB90();
  v5(v4);
  sub_10017DF08(&qword_100E7F440);
  swift_allocObject();
  uint64_t result = Setting.init(_:defaultValue:domain:access:)();
  qword_100F516D0 = result;
  return result;
}

uint64_t sub_100033AFC()
{
  type metadata accessor for Domain();
  sub_100179C0C();
  __chkstk_darwin(v0);
  sub_10017AE00();
  sub_100179C0C();
  __chkstk_darwin(v1);
  sub_10011BFD8();
  uint64_t v2 = sub_10017A08C();
  v3(v2);
  uint64_t v4 = sub_10017FB90();
  v5(v4);
  sub_10017DF08(&qword_100E935C0);
  swift_allocObject();
  sub_100164FD4();
  uint64_t result = Setting.init(_:defaultValue:domain:access:)();
  qword_100F522C0 = result;
  return result;
}

uint64_t sub_100033C18()
{
  type metadata accessor for Access();
  sub_100179C0C();
  __chkstk_darwin(v0);
  sub_10017A0A0();
  sub_100179C0C();
  __chkstk_darwin(v1);
  sub_10011BFD8();
  uint64_t v2 = sub_10017A08C();
  v3(v2);
  uint64_t v4 = sub_10017FB90();
  v5(v4);
  sub_10017DF08(&qword_100E70818);
  swift_allocObject();
  uint64_t result = Setting.init(_:defaultValue:domain:access:)();
  qword_100F516D8 = result;
  return result;
}

uint64_t sub_100033D34()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10017DF08(&qword_100E63A10);
  __chkstk_darwin(v2 - 8);
  v157 = (uint64_t *)((char *)&v126 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v4 = type metadata accessor for ContentStatusBanner();
  uint64_t v147 = *(void *)(v4 - 8);
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v153 = (uint64_t)&v126 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v160 = (uint64_t)&v126 - v7;
  uint64_t v142 = type metadata accessor for CurrentWeather();
  uint64_t v8 = *(void *)(v142 - 8);
  __chkstk_darwin(v142);
  v141 = (char *)&v126 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v152 = type metadata accessor for Date();
  uint64_t v10 = *(void *)(v152 - 8);
  __chkstk_darwin(v152);
  v151 = (char *)&v126 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10017DF08((uint64_t *)&unk_100EADD50);
  __chkstk_darwin(v12 - 8);
  uint64_t v139 = (uint64_t)&v126 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for LocationsState();
  __chkstk_darwin(v14 - 8);
  uint64_t v138 = (uint64_t)&v126 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for CurrentLocation();
  uint64_t v17 = __chkstk_darwin(v16);
  uint64_t v130 = (uint64_t)&v126 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v129 = (uint64_t)&v126 - v19;
  uint64_t v140 = type metadata accessor for WeatherData(0);
  __chkstk_darwin(v140);
  uint64_t v21 = (char *)&v126 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v158 = type metadata accessor for LocationWeatherDataState(0);
  uint64_t v150 = *(void *)(v158 - 8);
  __chkstk_darwin(v158);
  *(void *)&long long v161 = (char *)&v126 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_10017DF08(&qword_100E6A480);
  uint64_t v24 = __chkstk_darwin(v23 - 8);
  uint64_t v26 = (char *)&v126 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  uint64_t v28 = (uint64_t *)((char *)&v126 - v27);
  double v29 = (int *)type metadata accessor for BannerStateComputer();
  BOOL v55 = *(unsigned char *)(v1 + v29[7]) == 1;
  uint64_t v146 = v1;
  uint64_t v159 = v4;
  if (!v55)
  {
    uint64_t v98 = v29[6];
    uint64_t v99 = swift_bridgeObjectRetain();
    uint64_t v100 = sub_1002162CC(v99, v1);
    uint64_t v102 = *(void *)(v100 + 16);
    if (v102)
    {
      uint64_t v158 = v100;
      uint64_t v103 = (unint64_t *)(v100 + 40);
      *(void *)&long long v101 = 141558275;
      long long v161 = v101;
      uint64_t v160 = (uint64_t)&type metadata for Any + 8;
      do
      {
        uint64_t v104 = v98;
        uint64_t v105 = *(v103 - 1);
        uint64_t v106 = (void *)*v103;
        sub_1000D54E0(v105, *v103);
        if (qword_100E62878 != -1) {
          swift_once();
        }
        uint64_t v107 = type metadata accessor for Logger();
        sub_1002102B0(v107, (uint64_t)qword_100F52070);
        sub_1000D54E0(v105, (unint64_t)v106);
        sub_1000D54E0(v105, (unint64_t)v106);
        v108 = Logger.logObject.getter();
        os_log_type_t v109 = static os_log_type_t.info.getter();
        if (os_log_type_enabled(v108, v109))
        {
          uint64_t v110 = swift_slowAlloc();
          v164 = (void *)swift_slowAlloc();
          *(_DWORD *)uint64_t v110 = v161;
          *(void *)(v110 + 4) = 1752392040;
          *(_WORD *)(v110 + 12) = 2081;
          if (v106)
          {
            if (v106 == (void *)1)
            {
              unint64_t v111 = 0xE300000000000000;
              uint64_t v112 = 7364941;
            }
            else
            {
              uint64_t v162 = 0x6E6F697461636F4CLL;
              unint64_t v163 = 0xEA00000000002820;
              swift_bridgeObjectRetain();
              v113._uint64_t countAndFlagsBits = v105;
              v113._object = v106;
              String.append(_:)(v113);
              v114._uint64_t countAndFlagsBits = 41;
              v114._object = (void *)0xE100000000000000;
              String.append(_:)(v114);
              sub_1001EB5EC(v105, (unint64_t)v106);
              uint64_t v112 = v162;
              unint64_t v111 = v163;
            }
          }
          else
          {
            unint64_t v111 = 0xE400000000000000;
            uint64_t v112 = 1953720652;
          }
          *(void *)(v110 + 14) = sub_10016414C(v112, v111, (uint64_t *)&v164);
          swift_bridgeObjectRelease();
          sub_1001EB5EC(v105, (unint64_t)v106);
          sub_1001EB5EC(v105, (unint64_t)v106);
          _os_log_impl((void *)&_mh_execute_header, v108, v109, "Removing offline banner. ID=%{private,mask.hash}s", (uint8_t *)v110, 0x16u);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          uint64_t v1 = v146;
          uint64_t v4 = v159;
        }
        else
        {
          sub_1001EB5EC(v105, (unint64_t)v106);
          sub_1001EB5EC(v105, (unint64_t)v106);
        }
        uint64_t v98 = v104;
        swift_bridgeObjectRetain();
        unint64_t v115 = sub_1001EB73C(v105, (uint64_t)v106);
        char v117 = v116;
        swift_bridgeObjectRelease();
        if (v117)
        {
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v162 = *(void *)(v1 + v98);
          uint64_t v119 = v162;
          *(void *)(v1 + v98) = 0x8000000000000000;
          Swift::Int v120 = *(void *)(v119 + 24);
          sub_10017DF08(&qword_100E63A00);
          Swift::Int v121 = v120;
          uint64_t v4 = v159;
          _NativeDictionary.ensureUnique(isUnique:capacity:)(isUniquelyReferenced_nonNull_native, v121);
          uint64_t v122 = v162;
          sub_1001EB5EC(*(void *)(*(void *)(v162 + 48) + 16 * v115), *(void *)(*(void *)(v162 + 48) + 16 * v115 + 8));
          uint64_t v123 = (uint64_t)v157;
          sub_10017487C(*(void *)(v122 + 56) + *(void *)(v147 + 72) * v115, (uint64_t)v157, (void (*)(void))type metadata accessor for ContentStatusBanner);
          sub_100249728();
          _NativeDictionary._delete(at:)();
          *(void *)(v1 + v98) = v122;
          swift_bridgeObjectRelease();
          uint64_t v124 = 0;
        }
        else
        {
          uint64_t v124 = 1;
          uint64_t v123 = (uint64_t)v157;
        }
        v103 += 2;
        _s7Weather24LocationCompositionStateOwst_0(v123, v124, 1, v4);
        sub_1001781AC(v123, &qword_100E63A10);
        sub_1001EB5EC(v105, (unint64_t)v106);
        --v102;
      }
      while (v102);
    }
    else if (((vars8 ^ (2 * vars8)) & 0x4000000000000000) != 0)
    {
      __break(0xC471u);
    }
    return swift_bridgeObjectRelease();
  }
  v157 = v26;
  v137 = v29;
  uint64_t v148 = v29[5];
  uint64_t v30 = *(void *)(*(void *)(v1 + v148) + OBJC_IVAR____TtCV7Weather9MainState8_Storage_weatherData + 16);
  uint64_t v31 = *(void *)(v30 + 64);
  uint64_t v131 = v30 + 64;
  uint64_t v32 = 1 << *(unsigned char *)(v30 + 32);
  uint64_t v33 = -1;
  if (v32 < 64) {
    uint64_t v33 = ~(-1 << v32);
  }
  unint64_t v34 = v33 & v31;
  v136 = (void (**)(char *, uint64_t))(v8 + 8);
  v135 = (void (**)(uint64_t, char *, uint64_t))(v10 + 16);
  v134 = (void (**)(char *, uint64_t))(v10 + 8);
  int64_t v143 = (unint64_t)(v32 + 63) >> 6;
  int64_t v127 = v143 - 1;
  uint64_t v149 = v30;
  swift_bridgeObjectRetain();
  uint64_t v133 = v16;
  int64_t v35 = 0;
  *(void *)&long long v36 = 141558275;
  long long v132 = v36;
  v128 = (char *)&type metadata for Any + 8;
  v144 = v21;
  uint64_t v37 = v161;
  while (v34)
  {
    unint64_t v38 = __clz(__rbit64(v34));
    v34 &= v34 - 1;
    unint64_t v39 = v38 | (v35 << 6);
    uint64_t v40 = v157;
LABEL_8:
    uint64_t v41 = *(void *)(v149 + 56);
    double v42 = (void *)(*(void *)(v149 + 48) + 16 * v39);
    uint64_t v43 = v42[1];
    *uint64_t v40 = *v42;
    v40[1] = v43;
    uint64_t v44 = v41 + *(void *)(v150 + 72) * v39;
    uint64_t v45 = sub_10017DF08(&qword_100E6A488);
    sub_100166838(v44, (uint64_t)v40 + *(int *)(v45 + 48), (void (*)(void))type metadata accessor for LocationWeatherDataState);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v40, 0, 1, v45);
    swift_bridgeObjectRetain();
    uint64_t v37 = v161;
LABEL_27:
    sub_10024D364((uint64_t)v40, (uint64_t)v28, &qword_100E6A480);
    uint64_t v50 = sub_10017DF08(&qword_100E6A488);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v28, 1, v50) == 1) {
      return swift_release();
    }
    uint64_t v52 = *v28;
    unint64_t v51 = v28[1];
    sub_10017487C((uint64_t)v28 + *(int *)(v50 + 48), v37, (void (*)(void))type metadata accessor for LocationWeatherDataState);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      int64_t v156 = v35;
      uint64_t v53 = sub_10017DF08(&qword_100E63748);
      uint64_t v155 = v37 + *(int *)(v53 + 48);
      uint64_t v154 = v37 + *(int *)(v53 + 64);
      sub_10017487C(v37, (uint64_t)v21, (void (*)(void))type metadata accessor for WeatherData);
      BOOL v55 = v52 == static Location.currentLocationID.getter() && v51 == v54;
      if (v55)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        char v56 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        if ((v56 & 1) == 0) {
          goto LABEL_44;
        }
      }
      uint64_t v145 = v52;
      uint64_t v57 = v138;
      sub_100166838(*(void *)(v1 + v148) + OBJC_IVAR____TtCV7Weather9MainState8_Storage_locations, v138, (void (*)(void))type metadata accessor for LocationsState);
      uint64_t v58 = v139;
      sub_10006DF38(v57, v139, (uint64_t *)&unk_100EADD50);
      sub_100173018(v57, (void (*)(void))type metadata accessor for LocationsState);
      if (_s7Weather24LocationCompositionStateOwet_0(v58, 1, v133) == 1)
      {
        sub_1001781AC(v58, (uint64_t *)&unk_100EADD50);
        uint64_t v52 = v145;
      }
      else
      {
        uint64_t v59 = v58;
        uint64_t v60 = v129;
        sub_10017487C(v59, v129, (void (*)(void))&type metadata accessor for CurrentLocation);
        uint64_t v61 = v60;
        uint64_t v62 = v130;
        sub_10017487C(v61, v130, (void (*)(void))&type metadata accessor for CurrentLocation);
        unsigned int v63 = swift_getEnumCaseMultiPayload() - 1;
        sub_100173018(v62, (void (*)(void))&type metadata accessor for CurrentLocation);
        uint64_t v52 = v145;
        if (v63 < 2)
        {
          if (qword_100E62878 != -1) {
            swift_once();
          }
          uint64_t v64 = type metadata accessor for Logger();
          sub_1002102B0(v64, (uint64_t)qword_100F52070);
          swift_bridgeObjectRetain();
          uint64_t v65 = Logger.logObject.getter();
          os_log_type_t v66 = static os_log_type_t.info.getter();
          if (os_log_type_enabled(v65, v66))
          {
            uint64_t v67 = swift_slowAlloc();
            v164 = (void *)swift_slowAlloc();
            *(_DWORD *)uint64_t v67 = v132;
            *(void *)(v67 + 4) = 1752392040;
            *(_WORD *)(v67 + 12) = 2081;
            swift_bridgeObjectRetain();
            *(void *)(v67 + 14) = sub_10016414C(v52, v51, (uint64_t *)&v164);
            swift_bridgeObjectRelease_n();
            _os_log_impl((void *)&_mh_execute_header, v65, v66, "Not displaying offline banner - location is stale or uncertain. ID=%{private,mask.hash}s", (uint8_t *)v67, 0x16u);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();
          }
          else
          {
            swift_bridgeObjectRelease_n();
          }

          uint64_t v21 = v144;
          sub_100173018((uint64_t)v144, (void (*)(void))type metadata accessor for WeatherData);
          int64_t v35 = v156;
          sub_100173018(v154, (void (*)(void))type metadata accessor for NewsDataModel);
          sub_100173018(v155, (void (*)(void))type metadata accessor for PreprocessedWeatherData);
          goto LABEL_61;
        }
      }
LABEL_44:
      uint64_t v68 = v141;
      WeatherDataModel.currentWeather.getter();
      uint64_t v69 = v151;
      CurrentWeather.date.getter();
      (*v136)(v68, v142);
      uint64_t v70 = *(void *)(v1 + v148) + OBJC_IVAR____TtCV7Weather9MainState8_Storage_environment;
      swift_beginAccess();
      if (*(unsigned char *)(v70 + *(int *)(type metadata accessor for EnvironmentState() + 64))) {
        char v71 = 2;
      }
      else {
        char v71 = 1;
      }
      uint64_t v72 = v160;
      uint64_t v73 = v160 + *(int *)(v4 + 24);
      uint64_t v74 = v152;
      (*v135)(v73, v69, v152);
      _s7Weather24LocationCompositionStateOwst_0(v73, 0, 1, v74);
      *(unsigned char *)uint64_t v72 = v71;
      *(void *)(v72 + 8) = v52;
      *(void *)(v72 + 16) = v51;
      uint64_t v75 = qword_100E62878;
      swift_bridgeObjectRetain();
      if (v75 != -1) {
        swift_once();
      }
      uint64_t v76 = type metadata accessor for Logger();
      sub_1002102B0(v76, (uint64_t)qword_100F52070);
      swift_bridgeObjectRetain_n();
      uint64_t v77 = Logger.logObject.getter();
      os_log_type_t v78 = static os_log_type_t.info.getter();
      if (os_log_type_enabled(v77, v78))
      {
        uint64_t v79 = swift_slowAlloc();
        v164 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v79 = v132;
        *(void *)(v79 + 4) = 1752392040;
        *(_WORD *)(v79 + 12) = 2081;
        swift_bridgeObjectRetain();
        *(void *)(v79 + 14) = sub_10016414C(v52, v51, (uint64_t *)&v164);
        swift_bridgeObjectRelease_n();
        _os_log_impl((void *)&_mh_execute_header, v77, v78, "Displaying offline banner. ID=%{private,mask.hash}s", (uint8_t *)v79, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      uint64_t v80 = v137[6];
      sub_100166838(v160, v153, (void (*)(void))type metadata accessor for ContentStatusBanner);
      char v81 = swift_isUniquelyReferenced_nonNull_native();
      v164 = *(void **)(v1 + v80);
      uint64_t v82 = (uint64_t)v164;
      *(void *)(v1 + v80) = 0x8000000000000000;
      unint64_t v83 = sub_1001EB73C(v52, v51);
      uint64_t v85 = *(void *)(v82 + 16);
      BOOL v86 = (v84 & 1) == 0;
      Swift::Int v87 = v85 + v86;
      if (__OFADD__(v85, v86))
      {
        __break(1u);
LABEL_86:
        __break(1u);
LABEL_87:
        __break(1u);
        goto LABEL_88;
      }
      unint64_t v88 = v83;
      char v89 = v84;
      sub_10017DF08(&qword_100E63A00);
      Swift::Bool v90 = _NativeDictionary.ensureUnique(isUnique:capacity:)(v81, v87);
      int64_t v35 = v156;
      if (v90)
      {
        unint64_t v91 = sub_1001EB73C(v52, v51);
        if ((v89 & 1) != (v92 & 1)) {
          goto LABEL_89;
        }
        unint64_t v88 = v91;
      }
      uint64_t v93 = v164;
      if (v89)
      {
        sub_100244488(v153, v164[7] + *(void *)(v147 + 72) * v88);
      }
      else
      {
        v164[(v88 >> 6) + 8] |= 1 << v88;
        uint64_t v94 = (uint64_t *)(v93[6] + 16 * v88);
        *uint64_t v94 = v52;
        v94[1] = v51;
        sub_10017487C(v153, v93[7] + *(void *)(v147 + 72) * v88, (void (*)(void))type metadata accessor for ContentStatusBanner);
        uint64_t v95 = v93[2];
        BOOL v96 = __OFADD__(v95, 1);
        uint64_t v97 = v95 + 1;
        if (v96) {
          goto LABEL_87;
        }
        v93[2] = v97;
        swift_bridgeObjectRetain();
      }
      uint64_t v1 = v146;
      *(void *)(v146 + v80) = v93;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_100173018(v160, (void (*)(void))type metadata accessor for ContentStatusBanner);
      (*v134)(v151, v152);
      uint64_t v21 = v144;
      sub_100173018((uint64_t)v144, (void (*)(void))type metadata accessor for WeatherData);
      sub_100173018(v154, (void (*)(void))type metadata accessor for NewsDataModel);
      sub_100173018(v155, (void (*)(void))type metadata accessor for PreprocessedWeatherData);
      uint64_t v4 = v159;
LABEL_61:
      uint64_t v37 = v161;
    }
    else
    {
      swift_bridgeObjectRelease();
      sub_100173018(v37, (void (*)(void))type metadata accessor for LocationWeatherDataState);
    }
  }
  int64_t v46 = v35 + 1;
  uint64_t v40 = v157;
  if (__OFADD__(v35, 1)) {
    goto LABEL_86;
  }
  if (v46 >= v143)
  {
LABEL_26:
    uint64_t v49 = sub_10017DF08(&qword_100E6A488);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v40, 1, 1, v49);
    unint64_t v34 = 0;
    goto LABEL_27;
  }
  unint64_t v47 = *(void *)(v131 + 8 * v46);
  if (v47)
  {
LABEL_12:
    unint64_t v34 = (v47 - 1) & v47;
    unint64_t v39 = __clz(__rbit64(v47)) + (v46 << 6);
    int64_t v35 = v46;
    goto LABEL_8;
  }
  int64_t v48 = v35 + 2;
  ++v35;
  if (v46 + 1 >= v143) {
    goto LABEL_26;
  }
  unint64_t v47 = *(void *)(v131 + 8 * v48);
  if (v47) {
    goto LABEL_15;
  }
  int64_t v35 = v46 + 1;
  if (v46 + 2 >= v143) {
    goto LABEL_26;
  }
  unint64_t v47 = *(void *)(v131 + 8 * (v46 + 2));
  if (v47)
  {
    v46 += 2;
    goto LABEL_12;
  }
  int64_t v48 = v46 + 3;
  int64_t v35 = v46 + 2;
  if (v46 + 3 >= v143) {
    goto LABEL_26;
  }
  unint64_t v47 = *(void *)(v131 + 8 * v48);
  if (v47)
  {
LABEL_15:
    int64_t v46 = v48;
    goto LABEL_12;
  }
  while (1)
  {
    int64_t v46 = v48 + 1;
    if (__OFADD__(v48, 1)) {
      break;
    }
    if (v46 >= v143)
    {
      int64_t v35 = v127;
      goto LABEL_26;
    }
    unint64_t v47 = *(void *)(v131 + 8 * v46);
    ++v48;
    if (v47) {
      goto LABEL_12;
    }
  }
LABEL_88:
  __break(1u);
LABEL_89:
  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

uint64_t sub_1000350FC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for ButtonStyleConfiguration.Label();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  ButtonStyleConfiguration.label.getter();
  char v6 = ButtonStyleConfiguration.isPressed.getter();
  (*(void (**)(uint64_t, char *, uint64_t))(v3 + 16))(a1, v5, v2);
  *(unsigned char *)(a1 + *(int *)(sub_10017DF08(&qword_100EB1C30) + 36)) = v6 & 1;
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_10003520C@<X0>(void *a1@<X0>, uint64_t *a2@<X1>, uint64_t (*a3)(void)@<X2>, uint64_t (*a4)(char *)@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X8>)
{
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(a2);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v14)
  {
    uint64_t v12 = a3(0);
    swift_allocObject();
    uint64_t result = a4(v13);
    a6[3] = v12;
    a6[4] = a5;
    *a6 = result;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1000352CC(void *a1)
{
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E75340);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:name:)();
  uint64_t v3 = v22;
  if (!v22)
  {
    __break(1u);
    goto LABEL_6;
  }
  uint64_t v4 = v23;
  sub_1001B1E64(a1, a1[3]);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:name:)();
  uint64_t v5 = v20;
  if (!v20)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v6 = v21;
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E7CD30);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v19)
  {
    uint64_t v7 = type metadata accessor for WeatherConditionBackgroundStoreObserver();
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v9 = swift_getObjectType();
    uint64_t v10 = sub_1000DF0C4((uint64_t)v18, v19);
    __n128 v11 = __chkstk_darwin(v10);
    uint64_t v13 = &v18[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
    (*(void (**)(unsigned char *, __n128))(v14 + 16))(v13, v11);
    uint64_t v15 = type metadata accessor for WeatherConditionBackgroundTimeDataFactory();
    uint64_t v16 = sub_100225544(v3, v5, (uint64_t)v13, v7, ObjectType, v15, v9, v4, (uint64_t)&off_100E19AF8, v6);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v18);
    return (uint64_t)v16;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_10003550C(uint64_t a1, uint64_t a2, double a3, double a4)
{
  uint64_t v8 = type metadata accessor for LazyOptions();
  __chkstk_darwin(v8);
  uint64_t v9 = swift_allocObject();
  *(double *)(v9 + 16) = a3;
  *(double *)(v9 + 24) = a4;
  *(void *)(v9 + 32) = a1;
  *(void *)(v9 + 40) = a2;
  sub_100008FCC();
  swift_bridgeObjectRetain();
  sub_10017DF08(&qword_100E85F70);
  sub_100216158();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  sub_10017DF08(&qword_100E85F80);
  swift_allocObject();
  return Lazy.init(options:loadBlock:)();
}

void *sub_100035650(void *a1)
{
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E647D8);
  uint64_t result = (void *)dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v9)
  {
    __break(1u);
    goto LABEL_6;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E98128);
  uint64_t result = (void *)dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v8)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E64798);
  uint64_t result = (void *)dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v3)
  {
    type metadata accessor for NotificationsOptInMonitor();
    swift_allocObject();
    return sub_10021C8B8(v9, v10, &v7, v3, v4, v5, v6);
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_10003578C()
{
  uint64_t v0 = type metadata accessor for ToolbarItemPlacement();
  uint64_t v1 = sub_100109308(v0);
  __chkstk_darwin(v1);
  sub_10012B938();
  uint64_t v2 = sub_10017DF08(&qword_100EAAA60);
  sub_100179C0C();
  uint64_t v4 = v3;
  __chkstk_darwin(v5);
  long long v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  static ToolbarItemPlacement.confirmationAction.getter();
  sub_10017DF08(&qword_100EAAAB0);
  sub_1001246C8(&qword_100EAAAB8, &qword_100EAAAB0);
  ToolbarItem<>.init(placement:content:)();
  sub_1001246C8((unint64_t *)&unk_100EAAA68, &qword_100EAAA60);
  static ToolbarContentBuilder.buildBlock<A>(_:)();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v2);
}

uint64_t sub_100035908(uint64_t a1, int *a2)
{
  uint64_t v4 = type metadata accessor for CurrentWeather();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + a2[5];
  swift_bridgeObjectRelease();
  uint64_t v6 = v5 + *(int *)(type metadata accessor for HourlyForecastComponentPreprocessedDataModel() + 20);
  uint64_t v7 = type metadata accessor for WeatherDescription();
  if (!_s7Weather24LocationCompositionStateOwet_0(v6, 1, v7)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  }
  uint64_t v8 = a1 + a2[6];
  uint64_t v9 = sub_10017DF08(&qword_100E66CC8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  uint64_t v10 = a1 + a2[7];
  uint64_t v11 = sub_10017DF08(&qword_100E66CA0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  uint64_t v12 = a1 + a2[8];
  uint64_t v13 = type metadata accessor for WeatherChanges();
  uint64_t result = _s7Weather24LocationCompositionStateOwet_0(v12, 1, v13);
  if (!result)
  {
    uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8);
    return v15(v12, v13);
  }
  return result;
}

uint64_t sub_100035AD8(void *a1)
{
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08((uint64_t *)&unk_100E6F470);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!result)
  {
    __break(1u);
    goto LABEL_6;
  }
  uint64_t v3 = result;
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E98048);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:name:)();
  if (!result)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v4 = result;
  sub_1001B1E64(a1, a1[3]);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:name:)();
  if (v5 != 2)
  {
    sub_10017DF08(&qword_100E97FF0);
    uint64_t result = swift_allocObject();
    *(void *)(result + 16) = v3;
    *(void *)(result + 24) = v4;
    *(unsigned char *)(result + 32) = v5 & 1;
    return result;
  }
LABEL_7:
  __break(1u);
  return result;
}

void sub_100035C24()
{
  uint64_t v1 = sub_10017DF08(&qword_100E63DB8);
  __chkstk_darwin(v1 - 8);
  uint64_t v74 = (uint64_t)&v67 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for Font.TextStyle();
  uint64_t v71 = *(void *)(v3 - 8);
  uint64_t v72 = v3;
  __chkstk_darwin(v3);
  uint64_t v70 = (char *)&v67 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v76 = type metadata accessor for Text.Measurements();
  uint64_t v73 = *(void *)(v76 - 8);
  __chkstk_darwin(v76);
  uint64_t v75 = (char *)&v67 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DailyForecastComponentViewModel.DayForecastViewModel(0);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v67 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v67 - v11;
  uint64_t v13 = sub_10017DF08(&qword_100E6B8D0);
  __chkstk_darwin(v13 - 8);
  uint64_t v69 = (uint64_t)&v67 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  int IsSlow = DeviceIsSlow();
  uint64_t v16 = sub_100215E38(8, *v0);
  uint64_t v20 = v17;
  uint64_t v21 = v18;
  if (IsSlow)
  {
    uint64_t v68 = v0;
    if (v18 == v19 >> 1)
    {
      uint64_t v22 = v69;
      _s7Weather24LocationCompositionStateOwst_0(v69, 1, 1, v6);
      swift_bridgeObjectRetain();
LABEL_20:
      swift_unknownObjectRelease();
      int v35 = _s7Weather24LocationCompositionStateOwet_0(v22, 1, v6);
      long long v36 = v68;
      if (v35 == 1)
      {
        sub_100178110(v22, &qword_100E6B8D0);
        Swift::Int v37 = 5;
      }
      else
      {
        swift_bridgeObjectRetain();
        sub_1001440E4(v22, (void (*)(void))type metadata accessor for DailyForecastComponentViewModel.DayForecastViewModel);
        Swift::Int v37 = String.count.getter();
        swift_bridgeObjectRelease();
      }
      id v38 = [self mainBundle];
      v78._object = (void *)0x8000000100CA3F70;
      v39._uint64_t countAndFlagsBits = 77;
      v39._object = (void *)0xE100000000000000;
      v40._uint64_t countAndFlagsBits = 0;
      v40._object = (void *)0xE000000000000000;
      v78._uint64_t countAndFlagsBits = 0xD000000000000063;
      Swift::String v41 = NSLocalizedString(_:tableName:bundle:value:comment:)(v39, (Swift::String_optional)0, (NSBundle)v38, v40, v78);

      Swift::String v42 = String.init(repeating:count:)(v41, v37);
      uint64_t v43 = type metadata accessor for DailyComponentView(0);
      uint64_t v44 = v73;
      (*(void (**)(char *, char *, uint64_t))(v73 + 16))(v75, (char *)v36 + *(int *)(v43 + 44), v76);
      Swift::String v77 = v42;
      sub_10014A85C();
      uint64_t v45 = Text.init<A>(_:)();
      uint64_t v47 = v46;
      char v49 = v48 & 1;
      uint64_t v50 = (uint64_t)v36 + *(int *)(v43 + 36);
      uint64_t v51 = *(void *)v50;
      LOBYTE(v43) = *(unsigned char *)(v50 + 8);
      sub_100195B7C(*(void *)v50, v43);
      sub_100149AE8();
      char v53 = v52;
      sub_10018F6D8(v51, v43);
      uint64_t v55 = v71;
      uint64_t v54 = v72;
      char v56 = (unsigned int *)&enum case for Font.TextStyle.body(_:);
      if ((v53 & 1) == 0) {
        char v56 = (unsigned int *)&enum case for Font.TextStyle.title3(_:);
      }
      uint64_t v57 = v70;
      (*(void (**)(char *, void, uint64_t))(v71 + 104))(v70, *v56, v72);
      static Font.Weight.medium.getter();
      static Font.system(_:weight:)();
      (*(void (**)(char *, uint64_t))(v55 + 8))(v57, v54);
      uint64_t v58 = Text.font(_:)();
      uint64_t v60 = v59;
      char v62 = v61;
      swift_release();
      sub_100191924(v45, v47, v49);
      swift_bridgeObjectRelease();
      uint64_t v63 = type metadata accessor for Text.WritingMode();
      uint64_t v64 = v74;
      _s7Weather24LocationCompositionStateOwst_0(v74, 1, 1, v63);
      uint64_t v65 = v75;
      Text.Measurements.size(of:in:writingMode:)();
      sub_100191924(v58, v60, v62 & 1);
      swift_bridgeObjectRelease();
      sub_100178110(v64, &qword_100E63DB8);
      (*(void (**)(char *, uint64_t))(v44 + 8))(v65, v76);
      id v66 = [self currentDevice];
      [v66 userInterfaceIdiom];

      return;
    }
    int64_t v29 = v19 >> 1;
    if (v18 < (uint64_t)(v19 >> 1))
    {
      uint64_t v30 = *(void *)(v7 + 72);
      sub_100145458(v17 + v30 * v18, (uint64_t)v12, (void (*)(void))type metadata accessor for DailyForecastComponentViewModel.DayForecastViewModel);
      uint64_t v31 = v21 + 1;
      swift_bridgeObjectRetain();
      if (v31 == v29)
      {
LABEL_19:
        uint64_t v34 = (uint64_t)v12;
        uint64_t v22 = v69;
        sub_100144A28(v34, v69, (void (*)(void))type metadata accessor for DailyForecastComponentViewModel.DayForecastViewModel);
        _s7Weather24LocationCompositionStateOwst_0(v22, 0, 1, v6);
        goto LABEL_20;
      }
      uint64_t v32 = v20 + v30 * v31;
      while (v31 < v29)
      {
        sub_100145458(v32, (uint64_t)v10, (void (*)(void))type metadata accessor for DailyForecastComponentViewModel.DayForecastViewModel);
        uint64_t v33 = String.count.getter();
        if (v33 >= String.count.getter())
        {
          sub_1001440E4((uint64_t)v10, (void (*)(void))type metadata accessor for DailyForecastComponentViewModel.DayForecastViewModel);
        }
        else
        {
          sub_1001440E4((uint64_t)v12, (void (*)(void))type metadata accessor for DailyForecastComponentViewModel.DayForecastViewModel);
          sub_100144A28((uint64_t)v10, (uint64_t)v12, (void (*)(void))type metadata accessor for DailyForecastComponentViewModel.DayForecastViewModel);
        }
        ++v31;
        v32 += v30;
        if (v29 == v31) {
          goto LABEL_19;
        }
      }
      __break(1u);
    }
    __break(1u);
    return;
  }
  __chkstk_darwin(v16);
  swift_bridgeObjectRetain();
  sub_1000B6A00();
  uint64_t v24 = v23;
  swift_unknownObjectRelease();
  uint64_t v25 = *(void *)(v24 + 16);
  if (v25)
  {
    uint64_t v26 = v25 - 1;
    if (v26)
    {
      uint64_t v27 = 48;
      double v28 = *(double *)(v24 + 32);
      do
      {
        if (v28 < *(double *)(v24 + v27)) {
          double v28 = *(double *)(v24 + v27);
        }
        v27 += 16;
        --v26;
      }
      while (v26);
    }
  }
  swift_bridgeObjectRelease();
}

uint64_t sub_10003643C(uint64_t *a1)
{
  sub_10017DF08(a1);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = 0u;
  *(_OWORD *)(v1 + 32) = 0u;
  *(void *)(v1 + 48) = 0;
  uint64_t v2 = Dictionary.init(dictionaryLiteral:)();
  *(void *)(v1 + 56) = &_swiftEmptyArrayStorage;
  *(void *)(v1 + 64) = v2;
  return v1;
}

uint64_t sub_1000364A8(void *a1)
{
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E97FD8);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v8)
  {
    sub_1001B1E64(v7, v8);
    uint64_t v3 = sub_1000AE1C8();
    sub_1001B1E64(a1, a1[3]);
    sub_10017DF08(&qword_100E98038);
    uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
    if (v6)
    {
      uint64_t v4 = swift_allocObject();
      *(void *)(v4 + 16) = v6;
      sub_10017DF08(&qword_100E81B08);
      swift_allocObject();
      uint64_t v5 = sub_10004675C(v3, (uint64_t)sub_1001AC6B0, v4);
      _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v7);
      return (uint64_t)v5;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1000365DC(void *a1)
{
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E90688);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v8)
  {
    __break(1u);
    goto LABEL_6;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E90680);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v6)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E71B60);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v4)
  {
    type metadata accessor for NotificationsStoreObserver();
    swift_allocObject();
    return sub_10003D240(&v7, &v5, &v3);
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_1000366F0@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t *a6@<X8>)
{
  uint64_t v60 = a5;
  uint64_t v55 = a3;
  uint64_t v62 = a2;
  uint64_t v63 = a6;
  uint64_t v8 = type metadata accessor for LocationOfInterestType();
  uint64_t v57 = *(void *)(v8 - 8);
  uint64_t v58 = v8;
  __chkstk_darwin(v8);
  char v56 = (char *)&v54 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = type metadata accessor for LocationOfInterest();
  uint64_t v59 = *(void *)(v61 - 8);
  uint64_t v10 = __chkstk_darwin(v61);
  uint64_t v12 = (char *)&v54 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v54 - v13;
  uint64_t v15 = sub_10017DF08(&qword_100E63508);
  uint64_t v16 = __chkstk_darwin(v15 - 8);
  uint64_t v18 = (char *)&v54 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __chkstk_darwin(v16);
  uint64_t v21 = (char *)&v54 - v20;
  uint64_t v22 = __chkstk_darwin(v19);
  uint64_t v24 = (char *)&v54 - v23;
  __chkstk_darwin(v22);
  uint64_t v26 = (char *)&v54 - v25;
  uint64_t v27 = type metadata accessor for LocationCompositionState();
  __chkstk_darwin(v27);
  unint64_t v29 = (v28 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v30 = (uint64_t *)((char *)&v54 - v29);
  if ((a1 & 1) == 0)
  {
    if (a4)
    {
      if (static Settings.Features.homeAndWorkEnabled.getter())
      {
LABEL_11:
        uint64_t countAndFlagsBits = *(void *)(v55 + OBJC_IVAR____TtC7Weather24LocationViewModelFactory_myLocationAllCapsString);
        object = *(void **)(v55 + OBJC_IVAR____TtC7Weather24LocationViewModelFactory_myLocationAllCapsString + 8);
        uint64_t result = swift_bridgeObjectRetain();
        goto LABEL_14;
      }
      Location.name.getter();
    }
    else
    {
      uint64_t result = Location.sanitizedSecondaryName.getter();
      if (!v42)
      {
        uint64_t countAndFlagsBits = 0;
        object = 0;
        uint64_t v44 = 0;
        uint64_t v32 = 0;
LABEL_20:
        char v45 = 2;
        goto LABEL_15;
      }
    }
    Swift::String v43 = String.uppercasedWithPreferredLocale()();
    uint64_t countAndFlagsBits = v43._countAndFlagsBits;
    object = v43._object;
    uint64_t result = swift_bridgeObjectRelease();
    goto LABEL_14;
  }
  sub_1001D9BA8(v62, (uint64_t)&v54 - v29, (void (*)(void))type metadata accessor for LocationCompositionState);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v33 = *v30;
  uint64_t v32 = (void *)v30[1];
  if (EnumCaseMultiPayload != 1)
  {
    sub_10021A144(*v30, v30[1]);
    uint64_t v40 = sub_10017DF08(&qword_100E85F90);
    sub_10018CCD4((uint64_t)v30 + *(int *)(v40 + 48), (uint64_t)v26);
    sub_10006DF38((uint64_t)v26, (uint64_t)v24, &qword_100E63508);
    uint64_t v41 = v61;
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v24, 1, v61) != 1)
    {
      uint64_t v51 = v59;
      (*(void (**)(char *, char *, uint64_t))(v59 + 32))(v14, v24, v41);
      char v52 = v56;
      LocationOfInterest.type.getter();
      LocationOfInterestType.title.getter();
      (*(void (**)(char *, uint64_t))(v57 + 8))(v52, v58);
      Swift::String v53 = String.uppercasedWithPreferredLocale()();
      uint64_t v44 = v53._countAndFlagsBits;
      uint64_t v32 = v53._object;
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v51 + 8))(v14, v41);
      uint64_t result = sub_100178110((uint64_t)v26, &qword_100E63508);
      char v45 = 1;
      object = (void *)0xED00006C6C69662ELL;
      uint64_t countAndFlagsBits = 0x6E6F697461636F6CLL;
      goto LABEL_15;
    }
    sub_100178110((uint64_t)v26, &qword_100E63508);
    sub_100178110((uint64_t)v24, &qword_100E63508);
    goto LABEL_11;
  }
  uint64_t v34 = sub_10017DF08(&qword_100E85F90);
  sub_10018CCD4((uint64_t)v30 + *(int *)(v34 + 48), (uint64_t)v21);
  sub_10006DF38((uint64_t)v21, (uint64_t)v18, &qword_100E63508);
  uint64_t v35 = v61;
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v18, 1, v61) != 1)
  {
    sub_10021A144(v33, (uint64_t)v32);
    uint64_t v47 = v59;
    (*(void (**)(char *, char *, uint64_t))(v59 + 32))(v12, v18, v35);
    uint64_t countAndFlagsBits = LocationOfInterest.imageName.getter();
    object = v48;
    char v49 = v56;
    LocationOfInterest.type.getter();
    LocationOfInterestType.title.getter();
    (*(void (**)(char *, uint64_t))(v57 + 8))(v49, v58);
    Swift::String v50 = String.uppercasedWithPreferredLocale()();
    uint64_t v44 = v50._countAndFlagsBits;
    uint64_t v32 = v50._object;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v47 + 8))(v12, v35);
    uint64_t result = sub_100178110((uint64_t)v21, &qword_100E63508);
    char v45 = 1;
    goto LABEL_15;
  }
  sub_100178110((uint64_t)v18, &qword_100E63508);
  if (!v32)
  {
    uint64_t result = sub_100178110((uint64_t)v21, &qword_100E63508);
    uint64_t countAndFlagsBits = 0;
    object = 0;
    uint64_t v44 = 0;
    goto LABEL_20;
  }
  Swift::String v36 = String.uppercasedWithPreferredLocale()();
  uint64_t countAndFlagsBits = v36._countAndFlagsBits;
  object = v36._object;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = sub_100178110((uint64_t)v21, &qword_100E63508);
LABEL_14:
  uint64_t v44 = 0;
  uint64_t v32 = 0;
  char v45 = 0;
LABEL_15:
  uint64_t v46 = v63;
  *uint64_t v63 = countAndFlagsBits;
  v46[1] = (uint64_t)object;
  v46[2] = v44;
  v46[3] = (uint64_t)v32;
  *((unsigned char *)v46 + 32) = v45;
  return result;
}

char *sub_100036CE8(char *a1, char *a2)
{
  uint64_t v4 = type metadata accessor for ColorScheme();
  int v5 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a1, 1, v4);
  int v6 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v4);
  if (!v5)
  {
    uint64_t v7 = *(void *)(v4 - 8);
    if (!v6)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v4);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v4);
    goto LABEL_6;
  }
  if (v6)
  {
LABEL_6:
    uint64_t v8 = sub_10017DF08((uint64_t *)&unk_100EAA640);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v4);
LABEL_7:
  uint64_t v9 = sub_10017DF08(&qword_100E79370);
  *(void *)&a1[*(int *)(v9 + 28)] = *(void *)&a2[*(int *)(v9 + 28)];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_100036E58@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1001B1E64(a1, a1[3]);
  type metadata accessor for Tracker();
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:name:)();
  if (!result)
  {
    __break(1u);
    goto LABEL_6;
  }
  uint64_t v5 = result;
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E647E0);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v11)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E64798);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v7)
  {
    a2[3] = (uint64_t)&type metadata for LocationTracker;
    a2[4] = (uint64_t)&off_100E1D6E8;
    uint64_t v6 = swift_allocObject();
    *a2 = v6;
    *(void *)(v6 + 16) = v5;
    uint64_t result = sub_1001262E4(&v10, v6 + 24);
    *(void *)(v6 + 64) = v7;
    *(_OWORD *)(v6 + 72) = v8;
    *(void *)(v6 + 88) = v9;
    return result;
  }
LABEL_7:
  __break(1u);
  return result;
}

void *sub_100036FC4(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = type metadata accessor for WeatherDescription();
  swift_bridgeObjectRetain();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v6, 1, v7))
  {
    uint64_t v8 = sub_10017DF08(&qword_100E63758);
    memcpy(v5, v6, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16))(v5, v6, v7);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v5, 0, 1, v7);
  }
  return a1;
}

uint64_t LocationAuthorizationState.shortDescription.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_10017DF08(&qword_100E6F038);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  Dictionary.init(dictionaryLiteral:)();
  ShortDescription.init(name:_:)();
  a1[3] = v2;
  a1[4] = sub_10003734C();
  uint64_t v6 = sub_100170694(a1);
  return (*(uint64_t (**)(uint64_t *, char *, uint64_t))(v3 + 32))(v6, v5, v2);
}

unint64_t sub_10003734C()
{
  unint64_t result = qword_100E6F040;
  if (!qword_100E6F040)
  {
    sub_10018C6DC(&qword_100E6F038);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6F040);
  }
  return result;
}

uint64_t sub_1000373A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v18 = type metadata accessor for GCDSerialDispatchQueueFactory();
  uint64_t v19 = &off_100E2C068;
  uint64_t v8 = sub_100170694(v17);
  sub_100213BF8(a3, (uint64_t)v8);
  uint64_t v9 = OBJC_IVAR____TtC7Weather42WeatherDataVisibleLocationLoadingTelemetry_logger;
  if (qword_100E62888 != -1) {
    swift_once();
  }
  uint64_t v10 = type metadata accessor for Logger();
  uint64_t v11 = sub_1002102B0(v10, (uint64_t)qword_100F520A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(a4 + v9, v11, v10);
  uint64_t v12 = a4 + OBJC_IVAR____TtC7Weather42WeatherDataVisibleLocationLoadingTelemetry_startLoadTime;
  uint64_t v13 = type metadata accessor for Date();
  _s7Weather24LocationCompositionStateOwst_0(v12, 1, 1, v13);
  uint64_t v14 = (void *)(a4 + OBJC_IVAR____TtC7Weather42WeatherDataVisibleLocationLoadingTelemetry_lastAssumedVisibleLocationID);
  void *v14 = 0;
  v14[1] = 0;
  *(unsigned char *)(a4 + OBJC_IVAR____TtC7Weather42WeatherDataVisibleLocationLoadingTelemetry_loadBeganDuringObservation) = 0;
  sub_10020D948(a1, a4 + OBJC_IVAR____TtC7Weather42WeatherDataVisibleLocationLoadingTelemetry_backend);
  sub_10020D948(a2, a4 + OBJC_IVAR____TtC7Weather42WeatherDataVisibleLocationLoadingTelemetry_clock);
  sub_1001B1E64(v17, v18);
  sub_10001CD80(0xD000000000000022, (void *)0x8000000100CA7F90, (uint64_t *)v16);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a2);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1);
  sub_1001262E4(v16, a4 + OBJC_IVAR____TtC7Weather42WeatherDataVisibleLocationLoadingTelemetry_queue);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v17);
  return a4;
}

uint64_t sub_100037560()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 64);

  return swift_deallocObject();
}

unsigned char *sub_1000375B0()
{
  uint64_t v0 = type metadata accessor for LocationViewPage(0);
  sub_1001627C0(v0);
  uint64_t v1 = (unsigned char *)sub_10017238C();

  return sub_100014998(v1);
}

uint64_t sub_1000375F4()
{
  return State.wrappedValue.setter();
}

void sub_100037664(void *a1@<X0>, void *a2@<X8>)
{
  sub_1001B1E64(a1, a1[3]);
  type metadata accessor for MainReducer();
  uint64_t v4 = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v4)
  {
    __break(1u);
LABEL_9:
    __break(1u);
    return;
  }
  uint64_t v5 = v4;
  swift_retain();
  sub_1000377D4();
  uint64_t v7 = v6;
  unint64_t v8 = *(void *)(v6 + 16);
  if (v8 >= *(void *)(v6 + 24) >> 1)
  {
    sub_1000377D4();
    uint64_t v7 = v12;
  }
  *(void *)(v7 + 16) = v8 + 1;
  uint64_t v9 = v7 + 16 * v8;
  *(void *)(v9 + 32) = sub_1001AC7B0;
  *(void *)(v9 + 40) = v5;
  swift_release();
  sub_1001B1E64(a1, a1[3]);
  dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v14) {
    goto LABEL_9;
  }
  unint64_t v10 = *(void *)(v7 + 16);
  if (v10 >= *(void *)(v7 + 24) >> 1)
  {
    sub_1000377D4();
    uint64_t v7 = v13;
  }
  *(void *)(v7 + 16) = v10 + 1;
  uint64_t v11 = v7 + 16 * v10;
  *(void *)(v11 + 32) = sub_1001AC82C;
  *(void *)(v11 + 40) = 0;
  *a2 = v7;
}

void sub_1000377D4()
{
}

uint64_t sub_1000377E8@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E6FC60);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v10)
  {
    sub_1001B1E64(a1, a1[3]);
    sub_10017DF08(&qword_100EA7DE8);
    uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
    if (v8)
    {
      uint64_t v5 = type metadata accessor for AppStoreReviewPrivacySampler();
      uint64_t v6 = swift_allocObject();
      sub_1001262E4(&v9, v6 + 16);
      uint64_t result = sub_1001262E4(&v7, v6 + 56);
      a2[3] = v5;
      a2[4] = (uint64_t)&off_100E11D78;
      *a2 = v6;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1000378E4()
{
  sub_1001184F4(v0 + OBJC_IVAR____TtCV7Weather23LocationViewerViewState8_Storage_activeLocationState, (void (*)(void))type metadata accessor for LocationViewerActiveLocationState);
  sub_10017C924();

  return swift_deallocClassInstance();
}

uint64_t sub_10003793C()
{
  uint64_t v0 = type metadata accessor for GridGeometryComputerModifier(0);
  sub_1001627C0(v0);
  sub_100181A58();

  return sub_1000C3318(v1);
}

BOOL sub_100037990(uint64_t a1)
{
  sub_1000E0E14(v1 + 8, (uint64_t)v15);
  sub_1000E0E14(a1 + 8, (uint64_t)v14);
  sub_1000E0E14((uint64_t)v15, (uint64_t)v16);
  double v4 = *(double *)v16;
  if (v17)
  {
    double v5 = *(double *)&v16[2];
    sub_1000E0E14((uint64_t)v14, (uint64_t)v18);
    if (v19 != 1) {
      return 0;
    }
    sub_1001A01F4();
    BOOL v7 = v7 && v5 == v6;
    if (!v7) {
      return 0;
    }
LABEL_10:
    if (*(double *)(v1 + 40) != *(double *)(a1 + 40) || *(unsigned __int8 *)(v1 + 48) != *(unsigned __int8 *)(a1 + 48)) {
      return 0;
    }
    sub_1000E0DAC(v1 + 49, (uint64_t)&v13);
    sub_1000E0DAC(a1 + 49, (uint64_t)&v12);
    sub_1000E0DAC((uint64_t)&v13, (uint64_t)&v20);
    sub_100163C34();
    if (v7)
    {
      sub_1000E0DAC(v9, v10);
      if (v21 != 4) {
        return 0;
      }
    }
    else if (v2 == 3)
    {
      sub_1000E0DAC(v9, v10);
      if (v21 != 3) {
        return 0;
      }
    }
    else
    {
      sub_1000E0DAC(v9, v10);
      if (v21 - 3 < 2 || v2 != v21) {
        return 0;
      }
    }
    if (*(double *)(v1 + 56) == *(double *)(a1 + 56)) {
      return sub_100189644();
    }
    return 0;
  }
  sub_1000E0E14((uint64_t)v14, (uint64_t)v18);
  BOOL result = 0;
  if ((v19 & 1) == 0 && v4 == v18[0]) {
    goto LABEL_10;
  }
  return result;
}

void *sub_100037B00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v8 = *a4;
  uint64_t v42 = type metadata accessor for ListViewStateReducer();
  Swift::String v43 = &off_100E36700;
  v41[0] = a1;
  uint64_t v39 = type metadata accessor for LocationViewerViewStateReducer();
  uint64_t v40 = &off_100E26248;
  v38[0] = a2;
  uint64_t v36 = type metadata accessor for VFXTestViewStateReducer();
  Swift::Int v37 = &off_100E178C0;
  v35[0] = a3;
  uint64_t v33 = v8;
  uint64_t v34 = &off_100E2E1E8;
  v32[0] = a4;
  type metadata accessor for ViewStateReducer();
  uint64_t v9 = (void *)swift_allocObject();
  uint64_t v10 = sub_1000DF0C4((uint64_t)v41, v42);
  __n128 v11 = __chkstk_darwin(v10);
  char v13 = (void *)((char *)v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, __n128))(v14 + 16))(v13, v11);
  uint64_t v15 = sub_1000DF0C4((uint64_t)v38, v39);
  __n128 v16 = __chkstk_darwin(v15);
  uint64_t v18 = (void *)((char *)v32 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, __n128))(v19 + 16))(v18, v16);
  uint64_t v20 = sub_1000DF0C4((uint64_t)v35, v36);
  __n128 v21 = __chkstk_darwin(v20);
  uint64_t v23 = (void *)((char *)v32 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, __n128))(v24 + 16))(v23, v21);
  uint64_t v25 = sub_1000DF0C4((uint64_t)v32, v33);
  __n128 v26 = __chkstk_darwin(v25);
  uint64_t v28 = (void *)((char *)v32 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, __n128))(v29 + 16))(v28, v26);
  uint64_t v30 = sub_100221128(*v13, *v18, *v23, *v28, v9);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v32);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v35);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v38);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v41);
  return v30;
}

uint64_t sub_100037E7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, long long *a9, long long *a10, uint64_t a11, uint64_t a12, long long *a13, long long *a14, unsigned __int8 a15, uint64_t a16, long long *a17, uint64_t *a18)
{
  uint64_t v52 = a8;
  uint64_t v51 = a7;
  uint64_t v50 = a6;
  uint64_t v49 = a5;
  uint64_t v48 = a4;
  uint64_t v47 = a3;
  uint64_t v46 = a2;
  uint64_t v45 = a1;
  uint64_t v44 = a9;
  Swift::String v43 = a10;
  uint64_t v18 = *a18;
  uint64_t v63 = type metadata accessor for WeatherDataPreprocessor();
  uint64_t v64 = &off_100E2BE50;
  v62[0] = a11;
  uint64_t v60 = type metadata accessor for NewsDataManager();
  uint64_t v61 = &off_100E37880;
  v59[0] = a12;
  uint64_t v57 = type metadata accessor for RemotelyConfiguredSlowLocationLoadingMonitor();
  uint64_t v58 = &off_100E34778;
  v56[0] = a16;
  uint64_t v54 = v18;
  uint64_t v55 = &off_100E0D630;
  v53[0] = a18;
  type metadata accessor for WeatherDataUpdater();
  uint64_t v19 = swift_allocObject();
  uint64_t v20 = sub_1000DF0C4((uint64_t)v62, v63);
  __n128 v21 = __chkstk_darwin(v20);
  uint64_t v23 = (uint64_t *)((char *)&v42 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, __n128))(v24 + 16))(v23, v21);
  uint64_t v25 = sub_1000DF0C4((uint64_t)v59, v60);
  __n128 v26 = __chkstk_darwin(v25);
  uint64_t v28 = (uint64_t *)((char *)&v42 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, __n128))(v29 + 16))(v28, v26);
  uint64_t v30 = sub_1000DF0C4((uint64_t)v56, v57);
  __n128 v31 = __chkstk_darwin(v30);
  uint64_t v33 = (uint64_t *)((char *)&v42 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, __n128))(v34 + 16))(v33, v31);
  uint64_t v35 = sub_1000DF0C4((uint64_t)v53, v54);
  __n128 v36 = __chkstk_darwin(v35);
  id v38 = (uint64_t *)((char *)&v42 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, __n128))(v39 + 16))(v38, v36);
  uint64_t v40 = sub_1000636CC(v45, v46, v47, v48, v49, v50, v51, v52, v44, v43, *v23, *v28, a13, a14, a15, *v33, a17, *v38, v19);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v53);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v56);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v59);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v62);
  return v40;
}

void *sub_1000382CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v8 = *a4;
  uint64_t v42 = type metadata accessor for LocationAuthorizationReducer();
  Swift::String v43 = &off_100E166B8;
  v41[0] = a1;
  uint64_t v39 = type metadata accessor for NetworkReducer();
  uint64_t v40 = &off_100E302A0;
  v38[0] = a2;
  uint64_t v36 = type metadata accessor for ActivityActionReducer();
  uint64_t v37 = &off_100E2BA88;
  v35[0] = a3;
  uint64_t v33 = v8;
  uint64_t v34 = &off_100E116E0;
  v32[0] = a4;
  type metadata accessor for EnvironmentReducer();
  uint64_t v9 = (void *)swift_allocObject();
  uint64_t v10 = sub_1000DF0C4((uint64_t)v41, v42);
  __n128 v11 = __chkstk_darwin(v10);
  char v13 = (void *)((char *)v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, __n128))(v14 + 16))(v13, v11);
  uint64_t v15 = sub_1000DF0C4((uint64_t)v38, v39);
  __n128 v16 = __chkstk_darwin(v15);
  uint64_t v18 = (void *)((char *)v32 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, __n128))(v19 + 16))(v18, v16);
  uint64_t v20 = sub_1000DF0C4((uint64_t)v35, v36);
  __n128 v21 = __chkstk_darwin(v20);
  uint64_t v23 = (void *)((char *)v32 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, __n128))(v24 + 16))(v23, v21);
  uint64_t v25 = sub_1000DF0C4((uint64_t)v32, v33);
  __n128 v26 = __chkstk_darwin(v25);
  uint64_t v28 = (void *)((char *)v32 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, __n128))(v29 + 16))(v28, v26);
  uint64_t v30 = sub_100220740(*v13, *v18, *v23, *v28, v9);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v32);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v35);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v38);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v41);
  return v30;
}

void *sub_100038648(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v8 = *a4;
  uint64_t v42 = type metadata accessor for LocationPreviewViewStateReducer();
  Swift::String v43 = &off_100E32708;
  v41[0] = a1;
  uint64_t v39 = type metadata accessor for NotificationSettingsViewStateReducer();
  uint64_t v40 = &off_100E1B040;
  v38[0] = a2;
  uint64_t v36 = type metadata accessor for NotificationsOptInViewStateReducer();
  uint64_t v37 = &off_100E0D3B8;
  v35[0] = a3;
  uint64_t v33 = v8;
  uint64_t v34 = &off_100E2EF50;
  v32[0] = a4;
  type metadata accessor for ModalViewStateReducer();
  uint64_t v9 = (void *)swift_allocObject();
  uint64_t v10 = sub_1000DF0C4((uint64_t)v41, v42);
  __n128 v11 = __chkstk_darwin(v10);
  char v13 = (void *)((char *)v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, __n128))(v14 + 16))(v13, v11);
  uint64_t v15 = sub_1000DF0C4((uint64_t)v38, v39);
  __n128 v16 = __chkstk_darwin(v15);
  uint64_t v18 = (void *)((char *)v32 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, __n128))(v19 + 16))(v18, v16);
  uint64_t v20 = sub_1000DF0C4((uint64_t)v35, v36);
  __n128 v21 = __chkstk_darwin(v20);
  uint64_t v23 = (void *)((char *)v32 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, __n128))(v24 + 16))(v23, v21);
  uint64_t v25 = sub_1000DF0C4((uint64_t)v32, v33);
  __n128 v26 = __chkstk_darwin(v25);
  uint64_t v28 = (void *)((char *)v32 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, __n128))(v29 + 16))(v28, v26);
  uint64_t v30 = sub_10021ED38(*v13, *v18, *v23, *v28, v9);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v32);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v35);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v38);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v41);
  return v30;
}

void *sub_1000389C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, long long *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  __n128 v31 = a5;
  uint64_t v32 = a6;
  uint64_t v30 = a4;
  uint64_t v37 = a9;
  uint64_t v38 = a12;
  uint64_t v18 = sub_100170694(v36);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a9 - 8) + 32))(v18, a1, a9);
  uint64_t v34 = a10;
  uint64_t v35 = a13;
  uint64_t v19 = sub_100170694(v33);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a10 - 8) + 32))(v19, a7, a10);
  uint64_t v20 = (void *)swift_allocObject();
  sub_1000DF0C4((uint64_t)v36, v37);
  sub_100188270();
  __chkstk_darwin(v21);
  uint64_t v23 = (uint64_t *)((char *)&v29 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v24 + 16))(v23);
  sub_1000DF0C4((uint64_t)v33, v34);
  sub_100188270();
  __chkstk_darwin(v25);
  (*(void (**)(void))(v26 + 16))();
  uint64_t v27 = sub_10003D308(*v23, a2, a3, v30, v31, v32, v20, a11, a14);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v33);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v36);
  return v27;
}

uint64_t sub_100038BD0@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for LocationViewCollisionOptions();
  uint64_t result = ObservableObject<>.objectWillChange.getter();
  *a1 = result;
  return result;
}

uint64_t sub_100038C10@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_100038C50();
  return sub_1001F0424(v2, a1, (void (*)(void))type metadata accessor for LocationComponentHeaderMetrics);
}

uint64_t sub_100038C50()
{
  if (qword_100E62350 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for LocationComponentHeaderMetrics(0);

  return sub_1002102B0(v0, (uint64_t)qword_100E7AEB8);
}

uint64_t sub_100038CB4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_100038CEC();

  return sub_1001CB2DC(v2, a1);
}

uint64_t sub_100038CEC()
{
  if (qword_100E621C8 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for DisplayMetrics();

  return sub_1002102B0(v0, (uint64_t)qword_100F50B68);
}

uint64_t sub_100038D50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for Location();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v38 - v13;
  uint64_t v40 = v9;
  uint64_t v41 = v15;
  uint64_t v39 = *(void (**)(char *, uint64_t))(v9 + 16);
  v39((char *)&v38 - v13, a2);
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = a3;
  *(void *)(v16 + 24) = a4;
  uint64_t v17 = (uint64_t *)(a1 + 464);
  swift_beginAccess();
  swift_retain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v42 = *(void *)(a1 + 464);
  uint64_t v19 = v42;
  *(void *)(a1 + 464) = 0x8000000000000000;
  unint64_t v20 = sub_1001CB7B4();
  uint64_t v22 = *(void *)(v19 + 16);
  BOOL v23 = (v21 & 1) == 0;
  Swift::Int v24 = v22 + v23;
  if (__OFADD__(v22, v23))
  {
    __break(1u);
    goto LABEL_9;
  }
  unint64_t v25 = v20;
  char v26 = v21;
  sub_10017DF08(&qword_100E639C0);
  Swift::Bool v27 = _NativeDictionary.ensureUnique(isUnique:capacity:)(isUniquelyReferenced_nonNull_native, v24);
  uint64_t v28 = v42;
  if (v27)
  {
    unint64_t v29 = sub_1001CB7B4();
    if ((v26 & 1) == (v30 & 1))
    {
      unint64_t v25 = v29;
      goto LABEL_5;
    }
LABEL_9:
    uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return result;
  }
LABEL_5:
  *uint64_t v17 = v28;
  swift_bridgeObjectRelease();
  uint64_t v31 = *v17;
  uint64_t v32 = v41;
  if ((v26 & 1) == 0)
  {
    ((void (*)(char *, char *, uint64_t))v39)(v12, v14, v41);
    sub_1002150A4(v25, (uint64_t)v12, (uint64_t)&_swiftEmptyArrayStorage, v31);
  }
  uint64_t v33 = *(void *)(v31 + 56) + 8 * v25;
  sub_1002162B4();
  uint64_t v34 = *(void *)(*(void *)v33 + 16);
  sub_10021629C(v34);
  uint64_t v35 = *(void *)v33;
  *(void *)(v35 + 16) = v34 + 1;
  uint64_t v36 = v35 + 16 * v34;
  *(void *)(v36 + 32) = sub_100230FBC;
  *(void *)(v36 + 40) = v16;
  swift_endAccess();
  return (*(uint64_t (**)(char *, uint64_t))(v40 + 8))(v14, v32);
}

uint64_t sub_100038FDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v6 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v6;
  swift_retain();
  swift_release();
  uint64_t v66 = a1;
  unint64_t v7 = a1 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = a2 & 0xFFFFFFFFFFFFFFF8;
  uint64_t v9 = *(void *)((a2 & 0xFFFFFFFFFFFFFFF8) + 16);
  char v10 = *(unsigned char *)(v8 + 24);
  sub_100195B7C(v9, v10);
  uint64_t v11 = *(void *)((a1 & 0xFFFFFFFFFFFFFFF8) + 16);
  char v12 = *(unsigned char *)((a1 & 0xFFFFFFFFFFFFFFF8) + 24);
  *(void *)(v7 + 16) = v9;
  *(unsigned char *)(v7 + 24) = v10;
  sub_10018F6D8(v11, v12);
  uint64_t v13 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v14 = v13;
  int v15 = *(_DWORD *)(v13 + 80);
  uint64_t v16 = v15;
  unint64_t v68 = ~(unint64_t)v15;
  uint64_t v69 = *(void *)(a3 + 24);
  unint64_t v17 = (v16 + 25 + (a1 & 0xFFFFFFFFFFFFFFF8)) & ~v16;
  uint64_t v18 = (v16 + 25 + v8) & ~v16;
  uint64_t v58 = *(void (**)(unint64_t, uint64_t))(v13 + 24);
  v58(v17, v18);
  uint64_t v19 = *(void *)(v13 + 64);
  uint64_t v67 = *(void *)(a3 + 16);
  uint64_t v20 = *(void *)(v67 - 8);
  uint64_t v21 = *(unsigned __int8 *)(v20 + 80) | v15;
  uint64_t v22 = (v21 | 7) + v19;
  uint64_t v23 = (v22 + v17) & ~(v21 | 7);
  uint64_t v70 = (_DWORD *)((v22 + v18) & ~(v21 | 7));
  uint64_t v24 = *(unsigned int *)(v20 + 84);
  uint64_t v60 = v14;
  uint64_t v25 = *(unsigned int *)(v14 + 84);
  uint64_t v26 = *(void *)(v20 + 64) + v15;
  uint64_t v27 = (v26 & v68) + v19;
  uint64_t v28 = ~v21;
  uint64_t v29 = v27 + v21;
  uint64_t v59 = v27 + 7;
  unint64_t v30 = (v27 + 7 + ((v27 + v21) & ~v21)) & 0xFFFFFFFFFFFFFFF8;
  size_t v31 = v30 + 8;
  unint64_t v65 = v30;
  int v64 = v25 | v24;
  uint64_t v62 = v29;
  uint64_t v63 = v28;
  if (v25 | v24)
  {
    if (v24 >= v25)
    {
      int v37 = _s7Weather24LocationCompositionStateOwet_0(v23, v24, v67);
      unint64_t v33 = (unint64_t)v70;
      int v34 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v70, v24, v67);
      if (v37)
      {
LABEL_4:
        if (!v34) {
          goto LABEL_30;
        }
LABEL_26:
        unint64_t v48 = v65;
        int v49 = v64;
        if (v64) {
          size_t v50 = v31;
        }
        else {
          size_t v50 = v65 + 9;
        }
        memcpy((void *)v23, (const void *)v33, v50);
        uint64_t v47 = v66;
        goto LABEL_32;
      }
    }
    else
    {
      int v32 = _s7Weather24LocationCompositionStateOwet_0((v26 + v23) & v68, v25, v69);
      unint64_t v33 = (unint64_t)v70;
      int v34 = _s7Weather24LocationCompositionStateOwet_0(((unint64_t)v70 + v26) & v68, v25, v69);
      if (v32) {
        goto LABEL_4;
      }
    }
    if (!v34)
    {
LABEL_23:
      uint64_t v44 = *(void (**)(uint64_t, unint64_t, uint64_t))(v20 + 24);
      v44(v23, v33, v67);
      ((void (*)(unint64_t, unint64_t, uint64_t))v58)((v26 + v23) & v68, (v26 + v33) & v68, v69);
      uint64_t v45 = (v62 + v23) & v63;
      unint64_t v46 = (v62 + v33) & v63;
      v44(v45, v46, v67);
      ((void (*)(unint64_t, unint64_t, uint64_t))v58)((v26 + v45) & v68, (v26 + v46) & v68, v69);
      *(void *)((v59 + v45) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v59 + v46) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v48 = v65;
      uint64_t v47 = v66;
      int v49 = v64;
      goto LABEL_32;
    }
LABEL_22:
    uint64_t v42 = *(void (**)(uint64_t, uint64_t))(v20 + 8);
    v42(v23, v67);
    Swift::String v43 = *(void (**)(unint64_t, uint64_t))(v60 + 8);
    v43((v26 + v23) & v68, v69);
    v42((v62 + v23) & v63, v67);
    v43((v26 + ((v62 + v23) & v63)) & v68, v69);
    unint64_t v33 = (unint64_t)v70;
    goto LABEL_26;
  }
  unint64_t v33 = (unint64_t)v70;
  if (!*(unsigned char *)(v23 + v31)
    || ((int v35 = *(unsigned __int8 *)(v23 + v31) - 1, !v31) ? (v36 = 0) : (int v35 = 0, v36 = *(_DWORD *)v23),
        (v36 | v35) == 0xFFFFFFFF))
  {
    if (!*((unsigned char *)v70 + v31)) {
      goto LABEL_23;
    }
    int v40 = *((unsigned __int8 *)v70 + v31) - 1;
    if (v31)
    {
      int v40 = 0;
      int v41 = *v70;
    }
    else
    {
      int v41 = 0;
    }
    if ((v41 | v40) == 0xFFFFFFFF) {
      goto LABEL_23;
    }
    goto LABEL_22;
  }
  if (*((unsigned char *)v70 + v31))
  {
    int v38 = *((unsigned __int8 *)v70 + v31) - 1;
    if (v31)
    {
      int v38 = 0;
      int v39 = *v70;
    }
    else
    {
      int v39 = 0;
    }
    if ((v39 | v38) != 0xFFFFFFFF) {
      goto LABEL_26;
    }
  }
LABEL_30:
  uint64_t v51 = *(void (**)(uint64_t, unint64_t, uint64_t))(v20 + 16);
  v51(v23, v33, v67);
  uint64_t v61 = *(void (**)(unint64_t, unint64_t, uint64_t))(v60 + 16);
  v61((v26 + v23) & v68, (v26 + v33) & v68, v69);
  uint64_t v52 = (v62 + v23) & v63;
  unint64_t v53 = ((unint64_t)v70 + v62) & v63;
  v51(v52, v53, v67);
  v61((v26 + v52) & v68, (v26 + v53) & v68, v69);
  unint64_t v33 = (unint64_t)v70;
  *(void *)((v59 + v52) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v59 + v53) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v48 = v65;
  uint64_t v47 = v66;
  int v49 = v64;
  if (!v64) {
    *(unsigned char *)(v23 + v31) = 0;
  }
LABEL_32:
  size_t v54 = v48 + 9;
  if (v49) {
    size_t v54 = v31;
  }
  unint64_t v55 = ((v23 | 7) + v54) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v56 = ((v33 | 7) + v54) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v55 = *(void *)v56;
  swift_retain();
  swift_release();
  *(void *)(v55 + 8) = *(void *)(v56 + 8);
  swift_retain();
  swift_release();
  *(unsigned char *)(v55 + 16) = *(unsigned char *)(v56 + 16);
  return v47;
}

uint64_t assignWithCopy for CalculateLocationComponentContainerBackgroundPinningOffsetViewModifier(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  uint64_t v3 = *(void *)(a2 + 16);
  char v4 = *(unsigned char *)(a2 + 24);
  sub_100195B7C(v3, v4);
  uint64_t v5 = *(void *)(a1 + 16);
  char v6 = *(unsigned char *)(a1 + 24);
  *(void *)(a1 + 16) = v3;
  *(unsigned char *)(a1 + 24) = v4;
  sub_10018F6D8(v5, v6);
  return a1;
}

uint64_t sub_1000395EC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for NotificationSubscription.Location();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  char v6 = (char *)v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = __chkstk_darwin(v4);
  uint64_t v9 = (char *)v15 - v8;
  uint64_t v10 = *(void *)(a1 + 16);
  if (v10)
  {
    char v12 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v11 = v3 + 16;
    uint64_t v13 = a1 + ((*(unsigned __int8 *)(v11 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 64));
    uint64_t v21 = (void (**)(char *, uint64_t))(v11 - 8);
    uint64_t v22 = v12;
    uint64_t v18 = *(void *)(v11 + 56);
    uint64_t v19 = (void *)(v20 + 16);
    v15[1] = a1;
    swift_bridgeObjectRetain();
    *(void *)&long long v14 = 141558787;
    long long v16 = v14;
    _OWORD v15[2] = v6;
    void v15[3] = (char *)&type metadata for Any + 8;
    uint64_t v17 = v11;
    do
    {
      v22(v9, v13, v2);
      sub_1001B1E64(v19, *(void *)(v20 + 40));
      dispatch thunk of NotificationSubscriptionManagerType.updateSubscription(for:)();
      (*v21)(v9, v2);
      v13 += v18;
      --v10;
    }
    while (v10);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_100039A88()
{
  uint64_t v2 = type metadata accessor for Access();
  sub_100179C0C();
  uint64_t v4 = v3;
  __chkstk_darwin(v5);
  sub_10017F948();
  uint64_t v6 = type metadata accessor for FeatureState();
  sub_100179C0C();
  uint64_t v8 = v7;
  __chkstk_darwin(v9);
  sub_10011BFD8();
  id v10 = [self currentDevice];
  id v11 = [v10 userInterfaceIdiom];

  char v12 = (unsigned int *)&enum case for FeatureState.disabled(_:);
  if (v11) {
    char v12 = &enum case for FeatureState.enabled(_:);
  }
  (*(void (**)(uint64_t, void, uint64_t))(v8 + 104))(v1, *v12, v6);
  sub_10017DF08(&qword_100E89E10);
  (*(void (**)(uint64_t, void, uint64_t))(v4 + 104))(v0, enum case for Access.protected(_:), v2);
  sub_100164FD4();
  uint64_t result = Setting<>.init(_:defaultValue:access:)();
  qword_100F522C8 = result;
  return result;
}

uint64_t sub_100039C08(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for NotificationsOptInStoreObserver();
    sub_100189D7C();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for NotificationsOptInStoreObserver()
{
  return self;
}

uint64_t initializeWithCopy for TrackVisibilityModifier(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  uint64_t v3 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  uint64_t v4 = *(void *)(a2 + 40);
  char v5 = *(unsigned char *)(a2 + 48);
  swift_retain();
  swift_retain();
  sub_100195B88();
  *(void *)(a1 + 32) = v3;
  *(void *)(a1 + 40) = v4;
  *(unsigned char *)(a1 + 48) = v5;
  return a1;
}

uint64_t sub_100039CE4@<X0>(void *a1@<X1>, uint64_t a2@<X8>)
{
  memcpy(v14, a1, sizeof(v14));
  uint64_t v4 = a1[12];
  uint64_t v5 = a1[13];
  uint64_t v6 = v14[11];
  *(void *)a2 = v14[10];
  *(void *)(a2 + 8) = v6;
  *(void *)(a2 + 16) = v4;
  *(void *)(a2 + 24) = v5;
  *(unsigned char *)(a2 + 32) = 0;
  type metadata accessor for LocationComponentHeaderViewModel(0);
  *(void *)(a2 + 40) = 0;
  *(void *)(a2 + 48) = 0;
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = (int *)type metadata accessor for LocationComponentContainerViewModel();
  memcpy((void *)(a2 + v7[5]), v14, 0x60uLL);
  type metadata accessor for LocationComponentViewModel();
  swift_storeEnumTagMultiPayload();
  uint64_t v8 = a2 + v7[7];
  uint64_t v9 = *(int *)(sub_10017DF08(&qword_100E66488) + 48);
  uint64_t v10 = enum case for DetailCondition.precipitationTotal(_:);
  uint64_t v11 = type metadata accessor for DetailCondition();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 104))(v8, v10, v11);
  *(unsigned char *)(v8 + v9) = 0;
  uint64_t v12 = type metadata accessor for LocationComponentAction(0);
  swift_storeEnumTagMultiPayload();
  _s7Weather24LocationCompositionStateOwst_0(v8, 0, 1, v12);
  *(_WORD *)(a2 + v7[6]) = 256;
  sub_10002A888((uint64_t)v14);
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t _s7Weather30ExplicitComponentWidthModifierVwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  char v4 = *(unsigned char *)(a2 + 9);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 8);
  sub_100193DD4(*(void *)a2, v5, v4);
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v5;
  *(unsigned char *)(a1 + 9) = v4;
  return a1;
}

unsigned char *sub_100039EAC(unsigned char *a1, unsigned char *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_1001F4EE0((uint64_t)a1, (void (*)(void))type metadata accessor for LocationComponentHeaderViewModel);
    uint64_t v6 = type metadata accessor for LocationComponentHeaderViewModel(0);
    if (swift_getEnumCaseMultiPayload() == 3)
    {
      uint64_t v7 = type metadata accessor for WeatherDescription();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      uint64_t v8 = type metadata accessor for LocationComponentHeaderViewModel.Description(0);
      uint64_t v9 = *(int *)(v8 + 20);
      uint64_t v10 = &a1[v9];
      uint64_t v11 = &a2[v9];
      long long v12 = *((_OWORD *)v11 + 1);
      *(_OWORD *)uint64_t v10 = *(_OWORD *)v11;
      *((_OWORD *)v10 + 1) = v12;
      *((_OWORD *)v10 + 2) = *((_OWORD *)v11 + 2);
      *((void *)v10 + 6) = *((void *)v11 + 6);
      a1[*(int *)(v8 + 24)] = a2[*(int *)(v8 + 24)];
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
  }
  uint64_t v13 = a3[6];
  *(void *)&a1[a3[5]] = *(void *)&a2[a3[5]];
  *(void *)&a1[v13] = *(void *)&a2[v13];
  uint64_t v14 = a3[7];
  uint64_t v15 = a3[8];
  long long v16 = &a1[v14];
  uint64_t v17 = &a2[v14];
  *(void *)long long v16 = *(void *)v17;
  v16[8] = v17[8];
  a1[v15] = a2[v15];
  return a1;
}

uint64_t sub_10003A004(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for WeatherMapOverlayKind();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  swift_bridgeObjectRelease();
  uint64_t v6 = (int *)type metadata accessor for WeatherData(0);
  uint64_t v7 = v5 + v6[5];
  uint64_t v8 = type metadata accessor for Locale();
  if (!_s7Weather24LocationCompositionStateOwet_0(v7, 1, v8)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  }
  uint64_t v9 = v5 + v6[6];
  uint64_t v10 = type metadata accessor for WeatherDataModel();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  uint64_t v11 = v5 + v6[7];
  uint64_t v12 = sub_10017DF08(&qword_100E63738);
  if (!_s7Weather24LocationCompositionStateOwet_0(v11, 1, v12))
  {
    uint64_t v13 = type metadata accessor for Date();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v11, v13);
  }
  uint64_t v14 = v5 + v6[8];
  type metadata accessor for WeatherData.WeatherStatisticsState(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v16 = type metadata accessor for WeatherStatisticsModel();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v14, v16);
  }
  else if (!EnumCaseMultiPayload)
  {
    swift_bridgeObjectRelease();
  }
  uint64_t v17 = v5 + v6[9];
  uint64_t v18 = type metadata accessor for WeatherDataOverrides();
  uint64_t result = _s7Weather24LocationCompositionStateOwet_0(v17, 1, v18);
  if (!result)
  {
    uint64_t v20 = type metadata accessor for Date();
    if (!_s7Weather24LocationCompositionStateOwet_0(v17, 1, v20)) {
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v20 - 8) + 8))(v17, v20);
    }
    uint64_t v21 = v17 + *(int *)(v18 + 20);
    uint64_t result = _s7Weather24LocationCompositionStateOwet_0(v21, 1, v20);
    if (!result)
    {
      uint64_t v22 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v20 - 8) + 8);
      return v22(v21, v20);
    }
  }
  return result;
}

uint64_t sub_10003A2C8@<X0>(void *a1@<X0>, uint64_t *a2@<X1>, uint64_t (*a3)(void)@<X2>, uint64_t (*a4)(char *)@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X8>)
{
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(a2);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v14)
  {
    uint64_t v12 = a3(0);
    swift_allocObject();
    uint64_t result = a4(v13);
    a6[3] = v12;
    a6[4] = a5;
    *a6 = result;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10003A388(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for WeatherFormatPlaceholder();
  uint64_t v38 = *(void *)(v2 - 8);
  uint64_t v39 = v2;
  __chkstk_darwin(v2);
  int v36 = (char *)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = type metadata accessor for NSUnitTemperature.BaseWeatherFormatStyle();
  uint64_t v35 = *(void *)(v37 - 8);
  __chkstk_darwin(v37);
  int v34 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10017DF08(&qword_100E65250);
  uint64_t v32 = *(void *)(v5 - 8);
  uint64_t v33 = v5;
  __chkstk_darwin(v5);
  int v40 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = type metadata accessor for WeatherCondition();
  uint64_t v7 = *(void *)(v41 - 8);
  __chkstk_darwin(v41);
  uint64_t v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for CurrentWeather();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_10017DF08(&qword_100E885C0);
  __chkstk_darwin(v14 - 8);
  uint64_t v16 = (char *)&v32 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for WeatherMapOverlayKind();
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v32 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v20, a1, v17);
  int v21 = (*(uint64_t (**)(char *, uint64_t))(v18 + 88))(v20, v17);
  if (v21 != enum case for WeatherMapOverlayKind.precipitation(_:))
  {
    if (v21 == enum case for WeatherMapOverlayKind.airQuality(_:))
    {
      type metadata accessor for MapComponent();
      type metadata accessor for WeatherData(0);
      WeatherDataModel.airQuality.getter();
      uint64_t v23 = type metadata accessor for AirQuality();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v16, 1, v23) != 1)
      {
        uint64_t v22 = AirQuality.displayDescription.getter();
        (*(void (**)(char *, uint64_t))(*(void *)(v23 - 8) + 8))(v16, v23);
        return v22;
      }
      sub_100686AC0((uint64_t)v16);
    }
    else
    {
      if (v21 == enum case for WeatherMapOverlayKind.temperature(_:))
      {
        type metadata accessor for MapComponent();
        type metadata accessor for WeatherData(0);
        WeatherDataModel.currentWeather.getter();
        CurrentWeather.temperature.getter();
        (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
        uint64_t v24 = v34;
        static WeatherFormatStyle<>.weather.getter();
        uint64_t v26 = v38;
        uint64_t v25 = v39;
        uint64_t v27 = v36;
        (*(void (**)(char *, void, uint64_t))(v38 + 104))(v36, enum case for WeatherFormatPlaceholder.none(_:), v39);
        type metadata accessor for UnitManager();
        static UnitManager.standard.getter();
        sub_10012BBE0();
        uint64_t v28 = v33;
        uint64_t v29 = v37;
        unint64_t v30 = v40;
        uint64_t v22 = Measurement.formatted<A>(_:placeholder:unitManager:)();
        swift_release();
        (*(void (**)(char *, uint64_t))(v26 + 8))(v27, v25);
        (*(void (**)(char *, uint64_t))(v35 + 8))(v24, v29);
        (*(void (**)(char *, uint64_t))(v32 + 8))(v30, v28);
        return v22;
      }
      (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
    }
    return 0;
  }
  type metadata accessor for MapComponent();
  type metadata accessor for WeatherData(0);
  WeatherDataModel.currentWeather.getter();
  CurrentWeather.condition.getter();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  uint64_t v22 = WeatherCondition.description.getter();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v41);
  (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
  return v22;
}

char *sub_10003A9E8(void *a1)
{
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E647D8);
  uint64_t result = (char *)dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v6)
  {
    id v3 = [self currentNotificationCenter];
    sub_1001B1E64(a1, a1[3]);
    sub_10017DF08(&qword_100E81B08);
    uint64_t result = (char *)dispatch thunk of ResolverType.resolve<A>(_:)();
    if (result)
    {
      uint64_t v4 = (uint64_t)result;
      id v5 = objc_allocWithZone((Class)type metadata accessor for UserNotificationMonitor());
      return sub_10003F824(v6, v7, v3, v4);
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_10003AAF0(void *a1, void (*a2)(void), uint64_t (*a3)())
{
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E647D8);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v6)
  {
    a2(0);
    swift_allocObject();
    return a3();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10003AB9C(void *a1, uint64_t *a2, void (*a3)(void))
{
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(a2);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v6)
  {
    a3(0);
    uint64_t result = swift_allocObject();
    *(void *)(result + 16) = v6;
    *(void *)(result + 24) = v7;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10003AC34(void *a1)
{
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E64798);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v8)
  {
    __break(1u);
    goto LABEL_7;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E7CD08);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v7)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E98120);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v5)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  sub_1001B1E64(a1, a1[3]);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:name:)();
  if (v3 != 2)
  {
    type metadata accessor for ReverseGeocodingStoreObserver();
    swift_allocObject();
    return sub_1000174D4(v8, v9, v10, v11, &v6, &v4, v3 & 1);
  }
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_10003ADD0(char a1, uint64_t a2)
{
  uint64_t v4 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v7 = &v19[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v5);
  uint64_t v9 = &v19[-v8];
  if (a1)
  {
    Date.init()();
    uint64_t v10 = type metadata accessor for Date();
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v9, 0, 1, v10);
    uint64_t v11 = type metadata accessor for TrackExposureModifier();
    sub_1001C7278((uint64_t)v9, (uint64_t)v7);
    sub_10017DF08(&qword_100E7DDF8);
    State.wrappedValue.setter();
    sub_1001E7540((uint64_t)v9);
    uint64_t v12 = (char *)(a2 + *(int *)(v11 + 32));
    char v13 = *v12;
    uint64_t v14 = *((void *)v12 + 1);
    char v21 = v13;
    uint64_t v22 = v14;
    char v20 = 1;
  }
  else
  {
    sub_100021A90();
    uint64_t v15 = (char *)(a2 + *(int *)(type metadata accessor for TrackExposureModifier() + 32));
    char v16 = *v15;
    uint64_t v17 = *((void *)v15 + 1);
    char v21 = v16;
    uint64_t v22 = v17;
    char v20 = 0;
  }
  sub_10017DF08(&qword_100E65950);
  return State.wrappedValue.setter();
}

uint64_t sub_10003AF48()
{
  uint64_t v0 = type metadata accessor for Scope();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  char v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  ProxyContainer.public.getter();
  sub_10017DF08(&qword_100E90FD8);
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  sub_10017DF08(&qword_100E90FE0);
  Definition.thenConfigure<A>(as:configuration:)();
  swift_release();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for Scope.singleton(_:), v0);
  Definition.inScope(_:)();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_10003B0CC@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E64798);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v5)
  {
    unint64_t v4 = sub_10003B184();
    a2[3] = sub_10017DF08(&qword_100E8DE30);
    a2[4] = v4;
    uint64_t result = swift_allocObject();
    *a2 = result;
    *(void *)(result + 16) = v5;
    *(_OWORD *)(result + 24) = v6;
    *(void *)(result + 40) = v7;
  }
  else
  {
    __break(1u);
  }
  return result;
}

unint64_t sub_10003B184()
{
  unint64_t result = qword_100E8DE38;
  if (!qword_100E8DE38)
  {
    sub_10018C6DC(&qword_100E8DE30);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E8DE38);
  }
  return result;
}

uint64_t sub_10003B1D8(uint64_t a1)
{
  uint64_t v57 = *v1;
  uint64_t v3 = type metadata accessor for NotificationSubscription.Kind();
  uint64_t v61 = *(void *)(v3 - 8);
  uint64_t v62 = v3;
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v52 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10017DF08(&qword_100E639E8);
  __chkstk_darwin(v6 - 8);
  uint64_t v56 = (uint64_t)&v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for NotificationSubscription.Location();
  uint64_t v59 = *(void *)(v8 - 8);
  uint64_t v60 = v8;
  __chkstk_darwin(v8);
  uint64_t v58 = (char *)&v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10017DF08(&qword_100E8C288);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v52 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = type metadata accessor for NotificationSubscription();
  uint64_t v54 = *(void *)(v63 - 8);
  uint64_t v13 = __chkstk_darwin(v63);
  unint64_t v53 = (char *)&v52 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  char v16 = (char *)&v52 - v15;
  uint64_t v67 = type metadata accessor for Location();
  uint64_t v65 = *(void *)(v67 - 8);
  uint64_t v17 = __chkstk_darwin(v67);
  unint64_t v55 = (char *)&v52 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  unint64_t v68 = (char *)&v52 - v19;
  uint64_t v20 = sub_10017DF08((uint64_t *)&unk_100EADD50);
  __chkstk_darwin(v20 - 8);
  uint64_t v22 = (char *)&v52 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = type metadata accessor for LocationsState();
  __chkstk_darwin(v23 - 8);
  uint64_t v25 = (char *)&v52 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = type metadata accessor for CurrentLocation();
  uint64_t v27 = __chkstk_darwin(v26);
  uint64_t v29 = (char *)&v52 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = __chkstk_darwin(v27);
  if (*(unsigned char *)(a1 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_notifications) == 1)
  {
    int v64 = (char *)&v52 - v31;
    uint64_t v32 = a1 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_environment;
    swift_beginAccess();
    if (LocationAuthorizationState.rawValue.getter(*(unsigned char *)(v32 + 1)) == 0xD000000000000010
      && v33 == 0x8000000100C95500)
    {
      swift_bridgeObjectRelease();
      uint64_t v34 = (uint64_t)v64;
    }
    else
    {
      char v35 = _stringCompareWithSmolCheck(_:_:expecting:)();
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v34 = (uint64_t)v64;
      if ((v35 & 1) == 0) {
        return result;
      }
    }
    sub_100166618(a1 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_locations, (uint64_t)v25, (void (*)(void))type metadata accessor for LocationsState);
    sub_10006DF38((uint64_t)v25, (uint64_t)v22, (uint64_t *)&unk_100EADD50);
    sub_100158EDC((uint64_t)v25, (void (*)(void))type metadata accessor for LocationsState);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v22, 1, v26) == 1) {
      return sub_1001781AC((uint64_t)v22, (uint64_t *)&unk_100EADD50);
    }
    sub_100164DC8((uint64_t)v22, v34, (void (*)(void))&type metadata accessor for CurrentLocation);
    sub_100166618(v34, (uint64_t)v29, (void (*)(void))&type metadata accessor for CurrentLocation);
    if (swift_getEnumCaseMultiPayload())
    {
      sub_100158EDC(v34, (void (*)(void))&type metadata accessor for CurrentLocation);
      uint64_t v36 = (uint64_t)v29;
      return sub_100158EDC(v36, (void (*)(void))&type metadata accessor for CurrentLocation);
    }
    uint64_t v52 = v5;
    uint64_t v37 = v65;
    uint64_t v38 = v67;
    (*(void (**)(char *, char *, uint64_t))(v65 + 32))(v68, v29, v67);
    uint64_t v39 = (void *)(v66 + 16);
    sub_1001B1E64((void *)(v66 + 16), *(void *)(v66 + 40));
    Location.id.getter();
    dispatch thunk of NotificationSubscriptionManagerType.subscription(with:)();
    swift_bridgeObjectRelease();
    uint64_t v40 = v63;
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v12, 1, v63) == 1)
    {
      sub_1001781AC((uint64_t)v12, &qword_100E8C288);
      uint64_t v41 = v64;
LABEL_12:
      (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v55, v68, v38);
      _s7Weather24LocationCompositionStateOwst_0(v56, 1, 1, v38);
      uint64_t v42 = (uint64_t)v58;
      NotificationSubscription.Location.init(location:locationOverride:)();
      if (qword_100E622B0 != -1) {
        swift_once();
      }
      sub_1006BF8B4(&qword_100E8C290, v43, (void (*)(uint64_t))type metadata accessor for NotificationsStoreObserver);
      uint64_t v44 = v66;
      Configurable.setting<A>(_:)();
      if (v69 == 1
        && (sub_1001B1E64(v39, *(void *)(v44 + 40)),
            (dispatch thunk of NotificationSubscriptionManagerType.resubscribedAfterDeviceRestoreOnce()() & 1) == 0))
      {
        sub_1001B1E64(v39, *(void *)(v44 + 40));
        dispatch thunk of NotificationSubscriptionManagerType.setResubscribedAfterDeviceRestoreOnce()();
        uint64_t v45 = (uint64_t)v52;
        static NotificationSubscription.Kind.all.getter();
      }
      else
      {
        uint64_t v45 = (uint64_t)v52;
        static NotificationSubscription.Kind.precipitation.getter();
      }
      sub_1006BC908(v42, v45, (void (*)(void))&type metadata accessor for NotificationSubscription.Location, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))&dispatch thunk of NotificationSubscriptionManagerType.subscribe(to:for:), (uint64_t)&NotificationSubscription.Location.id.getter, (uint64_t)"Failed to subscribe to notifications for location: %{private,mask.hash}s with error: %{public}s %@");
      (*(void (**)(uint64_t, uint64_t))(v61 + 8))(v45, v62);
      (*(void (**)(uint64_t, uint64_t))(v59 + 8))(v42, v60);
      goto LABEL_23;
    }
    uint64_t v46 = v54;
    (*(void (**)(char *, char *, uint64_t))(v54 + 32))(v16, v12, v40);
    int v47 = NotificationSubscription.precipitation.getter();
    unint64_t v48 = v53;
    (*(void (**)(char *, char *, uint64_t))(v46 + 16))(v53, v16, v40);
    uint64_t v41 = v64;
    if (v47 == 2)
    {
      int v49 = NotificationSubscription.severe.getter();
      size_t v50 = *(void (**)(char *, uint64_t))(v46 + 8);
      v50(v48, v40);
      v50(v16, v40);
      if (v49 == 2) {
        goto LABEL_12;
      }
    }
    else
    {
      uint64_t v51 = *(void (**)(char *, uint64_t))(v46 + 8);
      v51(v48, v40);
      v51(v16, v40);
    }
LABEL_23:
    (*(void (**)(char *, uint64_t))(v37 + 8))(v68, v38);
    uint64_t v36 = (uint64_t)v41;
    return sub_100158EDC(v36, (void (*)(void))&type metadata accessor for CurrentLocation);
  }
  return result;
}

uint64_t sub_10003BDDC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v28 = a2;
  uint64_t v3 = type metadata accessor for PinnedScrollableViews();
  __chkstk_darwin(v3);
  uint64_t v27 = sub_10017DF08(&qword_100EA5F68);
  uint64_t v4 = *(void *)(v27 - 8);
  __chkstk_darwin(v27);
  uint64_t v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_10017DF08(&qword_100EA5F50);
  uint64_t v7 = __chkstk_darwin(v26);
  uint64_t v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100E62968 != -1) {
    uint64_t v7 = swift_once();
  }
  __chkstk_darwin(v7);
  *(&v26 - 2) = a1;
  static VerticalAlignment.center.getter();
  int v29 = 0;
  sub_1000116FC(&qword_100E82070, (void (*)(uint64_t))&type metadata accessor for PinnedScrollableViews);
  dispatch thunk of OptionSet.init(rawValue:)();
  sub_10017DF08(&qword_100EA5F78);
  sub_100226FE0();
  LazyHStack.init(alignment:spacing:pinnedViews:content:)();
  char v10 = static Edge.Set.horizontal.getter();
  uint64_t v11 = *(void *)(a1 + 8);
  char v12 = *(unsigned char *)(a1 + 16);
  sub_100195B7C(v11, v12);
  sub_100149AE8();
  char v14 = v13;
  sub_10018F6D8(v11, v12);
  if (v14)
  {
    if (qword_100E62240 == -1) {
      goto LABEL_7;
    }
    goto LABEL_8;
  }
  if (qword_100E62248 != -1) {
LABEL_8:
  }
    swift_once();
LABEL_7:
  EdgeInsets.init(_all:)();
  uint64_t v16 = v15;
  uint64_t v18 = v17;
  uint64_t v20 = v19;
  uint64_t v22 = v21;
  uint64_t v23 = v27;
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v9, v6, v27);
  uint64_t v24 = &v9[*(int *)(v26 + 36)];
  *uint64_t v24 = v10;
  *((void *)v24 + 1) = v16;
  *((void *)v24 + 2) = v18;
  *((void *)v24 + 3) = v20;
  *((void *)v24 + 4) = v22;
  v24[40] = 0;
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v23);
  return sub_10020E72C((uint64_t)v9, v28, &qword_100EA5F50);
}

uint64_t sub_10003C188(void *a1)
{
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08((uint64_t *)&unk_100E6F470);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!result)
  {
    __break(1u);
    goto LABEL_6;
  }
  uint64_t v3 = result;
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E98048);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:name:)();
  if (!result)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v4 = result;
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E98050);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v7)
  {
    uint64_t v5 = qword_100E6DFC0;
    uint64_t v6 = off_100E6DFC8;
    sub_10017DF08(&qword_100E98040);
    swift_allocObject();
    swift_bridgeObjectRetain();
    return sub_100025594(v3, v4, v7, v8, v5, (uint64_t)v6, 1.0);
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_10003C2F0@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X8>, double a5@<D0>, double a6@<D1>, double a7@<D2>, double a8@<D3>, double a9@<D4>)
{
  v32[0] = a4;
  uint64_t v17 = type metadata accessor for DailyComponentView(0);
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = *(void *)(v18 + 64);
  __chkstk_darwin(v17 - 8);
  uint64_t v20 = (char *)v32 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  sub_1000B0A28();
  uint64_t v22 = v21;
  swift_bridgeObjectRelease();
  v32[1] = v22;
  swift_getKeyPath();
  sub_100145458(a1, (uint64_t)v20, (void (*)(void))type metadata accessor for DailyComponentView);
  unint64_t v23 = (*(unsigned __int8 *)(v18 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  unint64_t v24 = (v19 + v23 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v25 = (v24 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v26 = swift_allocObject();
  sub_100144A28((uint64_t)v20, v26 + v23, (void (*)(void))type metadata accessor for DailyComponentView);
  uint64_t v27 = (double *)(v26 + v24);
  *uint64_t v27 = a5;
  v27[1] = a6;
  uint64_t v28 = (double *)(v26 + v25);
  *uint64_t v28 = a7;
  v28[1] = a8;
  unint64_t v29 = v26 + ((v25 + 23) & 0xFFFFFFFFFFFFFFF8);
  *(double *)unint64_t v29 = a9;
  *(unsigned char *)(v29 + 8) = a2;
  *(void *)(v26 + ((v25 + 39) & 0xFFFFFFFFFFFFFFF8)) = a3;
  uint64_t v30 = swift_allocObject();
  *(void *)(v30 + 16) = sub_100091290;
  *(void *)(v30 + 24) = v26;
  sub_10017DF08(&qword_100E7E910);
  sub_10017DF08(&qword_100E7E918);
  sub_1001246C8(&qword_100E7E920, &qword_100E7E910);
  sub_100145810((unint64_t *)&qword_100E63978, (void (*)(uint64_t))&type metadata accessor for Date);
  sub_1001246C8(&qword_100E7E928, &qword_100E7E918);
  return ForEach<>.init(_:id:content:)();
}

uint64_t sub_10003C5D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for WeatherConditionBackgroundModel();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v33 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10017DF08(&qword_100EB4A90);
  uint64_t v8 = v7 - 8;
  __chkstk_darwin(v7);
  char v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10017DF08(&qword_100E64A60);
  uint64_t v12 = __chkstk_darwin(v11 - 8);
  char v14 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v12);
  uint64_t v17 = (char *)&v33 - v16;
  __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v33 - v18;
  uint64_t v34 = type metadata accessor for WeatherConditionBackgroundModifier(0);
  uint64_t v36 = a1;
  sub_10017DF08(&qword_100EB4860);
  State.wrappedValue.getter();
  uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  uint64_t v35 = a2;
  v20(v17, a2, v4);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v17, 0, 1, v4);
  uint64_t v21 = (uint64_t)&v10[*(int *)(v8 + 56)];
  sub_10006DF38((uint64_t)v19, (uint64_t)v10, &qword_100E64A60);
  sub_10006DF38((uint64_t)v17, v21, &qword_100E64A60);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v10, 1, v4) != 1)
  {
    sub_10006DF38((uint64_t)v10, (uint64_t)v14, &qword_100E64A60);
    if (_s7Weather24LocationCompositionStateOwet_0(v21, 1, v4) != 1)
    {
      unint64_t v23 = v33;
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v33, v21, v4);
      sub_1001CA9B8((unint64_t *)&qword_100E64A80, (void (*)(uint64_t))&type metadata accessor for WeatherConditionBackgroundModel);
      char v24 = dispatch thunk of static Equatable.== infix(_:_:)();
      unint64_t v25 = *(void (**)(char *, uint64_t))(v5 + 8);
      v25(v23, v4);
      sub_100178110((uint64_t)v17, &qword_100E64A60);
      sub_100178110((uint64_t)v19, &qword_100E64A60);
      v25(v14, v4);
      uint64_t result = sub_100178110((uint64_t)v10, &qword_100E64A60);
      if ((v24 & 1) == 0) {
        return result;
      }
      goto LABEL_8;
    }
    sub_100178110((uint64_t)v17, &qword_100E64A60);
    sub_100178110((uint64_t)v19, &qword_100E64A60);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v14, v4);
    return sub_100178110((uint64_t)v10, &qword_100EB4A90);
  }
  sub_100178110((uint64_t)v17, &qword_100E64A60);
  sub_100178110((uint64_t)v19, &qword_100E64A60);
  if (_s7Weather24LocationCompositionStateOwet_0(v21, 1, v4) != 1) {
    return sub_100178110((uint64_t)v10, &qword_100EB4A90);
  }
  sub_100178110((uint64_t)v10, &qword_100E64A60);
LABEL_8:
  uint64_t v26 = v34;
  uint64_t v27 = v36;
  uint64_t v28 = v36 + *(int *)(v34 + 100);
  uint64_t v29 = *(void *)v28;
  char v30 = *(unsigned char *)(v28 + 8);
  sub_100195B7C(*(void *)v28, v30);
  sub_100149AE8();
  char v32 = v31;
  sub_10018F6D8(v29, v30);
  return sub_100079A9C(v35, v32 & 1, *(unsigned __int8 *)(v27 + *(int *)(v26 + 64)));
}

uint64_t NotificationAuthorizationState.shortDescription.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_10017DF08(&qword_100E7DFE0);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  Dictionary.init(dictionaryLiteral:)();
  ShortDescription.init(name:_:)();
  a1[3] = v2;
  a1[4] = sub_10003CC3C();
  uint64_t v6 = sub_100170694(a1);
  return (*(uint64_t (**)(uint64_t *, char *, uint64_t))(v3 + 32))(v6, v5, v2);
}

unint64_t sub_10003CC3C()
{
  unint64_t result = qword_100E7DFE8;
  if (!qword_100E7DFE8)
  {
    sub_10018C6DC(&qword_100E7DFE0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E7DFE8);
  }
  return result;
}

uint64_t sub_10003CC90(void *a1, void *a2)
{
  sub_1001B1E64(a2, a2[3]);
  sub_10017DF08(&qword_100E75340);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:name:)();
  uint64_t v5 = v7[0];
  if (v7[0])
  {
    sub_1001B1E64(a2, a2[3]);
    dispatch thunk of ResolverType.resolve<A>(_:name:)();
    uint64_t v6 = v7[0];
    sub_1001B1E64(a1, a1[3]);
    dispatch thunk of SceneStateManagerType.add(monitor:)();
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v7);
    if (v5 == v6)
    {
      return swift_unknownObjectRelease_n();
    }
    else
    {
      dispatch thunk of SceneStateManagerType.add(monitor:)();
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      return _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v7);
    }
  }
  else
  {
    __break(1u);
    __break(1u);
  }
  return result;
}

uint64_t sub_10003CE00(void *a1, void *a2)
{
  sub_1001B1E64(a1, a1[3]);
  sub_1001B1E64(a2, a2[3]);
  type metadata accessor for SessionEventsAndDataCoordinator();
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (result)
  {
    sub_100019A3C(&qword_100E807B0, (void (*)(uint64_t))type metadata accessor for SessionEventsAndDataCoordinator);
    dispatch thunk of SceneStateManagerType.add(monitor:)();
    swift_release();
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v4);
    sub_1001B1E64(a2, a2[3]);
    uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:name:)();
    if (result)
    {
      dispatch thunk of SceneStateManagerType.add(monitor:)();
      swift_release();
      return _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v4);
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_10003CF6C()
{
  return swift_bridgeObjectRetain();
}

double sub_10003D010()
{
  uint64_t v0 = sub_10018C470();
  uint64_t v1 = type metadata accessor for BackgroundModifier(v0);
  sub_1001627C0(v1);
  sub_10020FA00();

  return sub_100054A60(v2, v3);
}

uint64_t sub_10003D060()
{
  uint64_t v0 = sub_10018C470();
  uint64_t v1 = type metadata accessor for LocationComponentContainerView(v0);
  sub_1001627C0(v1);
  uint64_t v2 = sub_10020FA00();

  return sub_10004C910(v2, v3);
}

double sub_10003D0B0()
{
  uint64_t v0 = sub_10018C470();
  uint64_t v1 = type metadata accessor for RowModifier(v0);
  sub_1001627C0(v1);
  sub_10020FA00();

  return sub_10020B6B0(v2, v3, v4, v5, v6, v7);
}

uint64_t sub_10003D10C@<X0>(void *a1@<X0>, uint64_t *a2@<X1>, uint64_t (*a3)(unsigned char *, uint64_t)@<X2>, uint64_t *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10 = v5 + *a1;
  swift_beginAccess();
  sub_1001262FC(v10, (uint64_t)v14, a2);
  if (v15) {
    return a3(v14, a5);
  }
  sub_1001781AC((uint64_t)v14, a2);
  sub_10002DF88((uint64_t)v14);
  sub_1001B1E64(v14, v15);
  sub_10017DF08(a4);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v13)
  {
    a3(v12, a5);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v14);
    sub_10020D948(a5, (uint64_t)v14);
    swift_beginAccess();
    sub_1001DF004((uint64_t)v14, v10, a2);
    return swift_endAccess();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10003D240(long long *a1, long long *a2, long long *a3)
{
  sub_1001AB3E0();
  static OS_dispatch_queue.main.getter();
  type metadata accessor for Debouncer();
  swift_allocObject();
  *(void *)(v3 + 136) = sub_100181660(v7);
  static OS_dispatch_queue.main.getter();
  swift_allocObject();
  *(void *)(v3 + 144) = sub_100181660(v8);
  sub_1001262E4(a1, v3 + 16);
  sub_1001262E4(a2, v3 + 56);
  sub_1001262E4(a3, v3 + 96);
  return v3;
}

void *sub_10003D308(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, long long *a5, uint64_t a6, void *a7, uint64_t a8, uint64_t a9)
{
  uint64_t v26 = &off_100E23B00;
  uint64_t v25 = type metadata accessor for LocationViewerInteractor();
  unint64_t v23 = &off_100E38A68;
  *(void *)&long long v24 = a1;
  uint64_t v22 = &type metadata for ContentStatusBannerViewFactory;
  if (qword_100E62798 != -1) {
    swift_once();
  }
  uint64_t v16 = type metadata accessor for Logger();
  sub_1002102B0(v16, (uint64_t)qword_100F51DE0);
  uint64_t v17 = Logger.logObject.getter();
  os_log_type_t v18 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v19 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v19 = 0;
    _os_log_impl((void *)&_mh_execute_header, v17, v18, "Initializing LocationViewer module", v19, 2u);
    swift_slowDealloc();
  }

  sub_1001262E4(&v24, (uint64_t)(a7 + 2));
  a7[7] = a2;
  a7[8] = a3;
  a7[9] = a4;
  a7[10] = a9;
  sub_1001262E4(a5, (uint64_t)(a7 + 11));
  a7[16] = a6;
  sub_1001262E4(&v21, (uint64_t)(a7 + 17));
  return a7;
}

uint64_t sub_10003D484(void *a1, uint64_t *a2, void (*a3)(void), void (*a4)(unsigned char *, uint64_t))
{
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(a2);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v10)
  {
    a3(0);
    uint64_t v8 = swift_allocObject();
    a4(v9, v8 + 16);
    return v8;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10003D530(void *a1)
{
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E98118);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v22)
  {
    sub_1001B1E64(a1, a1[3]);
    sub_10017DF08(&qword_100E807C8);
    uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
    if (v20)
    {
      uint64_t v3 = sub_1000DF0C4((uint64_t)v21, v22);
      __n128 v4 = __chkstk_darwin(v3);
      double v6 = (void *)((char *)&v18[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *, __n128))(v7 + 16))(v6, v4);
      uint64_t v8 = *v6;
      uint64_t v9 = type metadata accessor for AppStoreReviewManager();
      double v18[3] = v9;
      v18[4] = &off_100E1B070;
      v18[0] = v8;
      type metadata accessor for SavedLocationsStoreObserver();
      uint64_t v10 = swift_allocObject();
      uint64_t v11 = sub_1000DF0C4((uint64_t)v18, v9);
      __n128 v12 = __chkstk_darwin(v11);
      char v14 = (void *)((char *)&v18[-1] - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *, __n128))(v15 + 16))(v14, v12);
      uint64_t v16 = *v14;
      *(void *)(v10 + 56) = v9;
      *(void *)(v10 + 64) = &off_100E1B070;
      *(void *)(v10 + 24) = 0;
      *(void *)(v10 + 32) = v16;
      *(void *)(v10 + 16) = 0;
      *(unsigned char *)(v10 + 112) = 2;
      sub_1001262E4(&v19, v10 + 72);
      _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v18);
      _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v21);
      return v10;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void *sub_10003D790(uint64_t a1, uint64_t a2, const void *a3)
{
  uint64_t v6 = type metadata accessor for NotificationsOptInViewModelFactory();
  void v32[3] = v6;
  v32[4] = &off_100E2BA78;
  v32[0] = a1;
  uint64_t v7 = type metadata accessor for LocationViewDescriptor();
  uint64_t v30 = v7;
  char v31 = &off_100E37020;
  v29[0] = a2;
  uint64_t v27 = &type metadata for MapOverlayKindProvider;
  uint64_t v28 = &off_100E1D390;
  v26[0] = swift_allocObject();
  memcpy((void *)(v26[0] + 16), a3, 0x50uLL);
  type metadata accessor for LocationViewerViewStateReducer();
  uint64_t v8 = (void *)swift_allocObject();
  uint64_t v9 = sub_1000DF0C4((uint64_t)v32, v6);
  __chkstk_darwin(v9);
  uint64_t v11 = (void *)((char *)&v26[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v12 + 16))(v11);
  uint64_t v13 = sub_1000DF0C4((uint64_t)v29, v30);
  __chkstk_darwin(v13);
  uint64_t v15 = (void *)((char *)&v26[-1] - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v16 + 16))(v15);
  uint64_t v17 = sub_1000DF0C4((uint64_t)v26, (uint64_t)v27);
  __chkstk_darwin(v17);
  long long v19 = (char *)&v26[-1] - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v20 + 16))(v19);
  uint64_t v21 = *v11;
  uint64_t v22 = *v15;
  v8[5] = v6;
  v8[6] = &off_100E2BA78;
  void v8[2] = v21;
  v8[10] = v7;
  v8[11] = &off_100E37020;
  v8[7] = v22;
  v8[15] = &type metadata for MapOverlayKindProvider;
  v8[16] = &off_100E1D390;
  uint64_t v23 = swift_allocObject();
  v8[12] = v23;
  memcpy((void *)(v23 + 16), v19, 0x50uLL);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v26);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v29);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v32);
  return v8;
}

uint64_t sub_10003DAB0@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E647D8);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  uint64_t v5 = v22;
  if (v22)
  {
    uint64_t v6 = v23;
    sub_1001B1E64(a1, a1[3]);
    sub_10017DF08(&qword_100E907C0);
    uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
    if (v21)
    {
      uint64_t v7 = sub_1000DF0C4((uint64_t)v20, v21);
      __chkstk_darwin(v7);
      uint64_t v9 = (void *)((char *)v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *))(v10 + 16))(v9);
      uint64_t v11 = *v9;
      void v19[3] = &type metadata for LocationViewerTracker;
      v19[4] = &off_100E119F0;
      v19[0] = v11;
      uint64_t v12 = type metadata accessor for LocationViewerInteractor();
      uint64_t v13 = (void *)swift_allocObject();
      uint64_t v14 = sub_1000DF0C4((uint64_t)v19, (uint64_t)&type metadata for LocationViewerTracker);
      __chkstk_darwin(v14);
      uint64_t v16 = (void *)((char *)v19 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *))(v17 + 16))(v16);
      uint64_t v18 = *v16;
      v13[7] = &type metadata for LocationViewerTracker;
      v13[8] = &off_100E119F0;
      v13[3] = v6;
      v13[4] = v18;
      _OWORD v13[2] = v5;
      _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v19);
      uint64_t result = _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v20);
      a2[3] = v12;
      a2[4] = &off_100E23B00;
      *a2 = v13;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_10003DD1C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E90C70);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v27)
  {
    __break(1u);
    goto LABEL_6;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E8DE68);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v25)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E71B08);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v23)
  {
    uint64_t v5 = sub_1000DF0C4((uint64_t)v26, v27);
    __n128 v6 = __chkstk_darwin(v5);
    uint64_t v8 = (uint64_t *)&v22[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
    (*(void (**)(uint64_t *, __n128))(v9 + 16))(v8, v6);
    uint64_t v10 = sub_1000DF0C4((uint64_t)v24, v25);
    __n128 v11 = __chkstk_darwin(v10);
    uint64_t v13 = (uint64_t *)&v22[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
    (*(void (**)(uint64_t *, __n128))(v14 + 16))(v13, v11);
    uint64_t v15 = sub_1000DF0C4((uint64_t)v22, v23);
    __n128 v16 = __chkstk_darwin(v15);
    uint64_t v18 = (uint64_t **)&v22[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
    (*(void (**)(uint64_t **, __n128))(v19 + 16))(v18, v16);
    uint64_t v20 = sub_100023B18(*v8, *v13, *v18);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v22);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v24);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v26);
    uint64_t result = type metadata accessor for ListViewStateReducer();
    a2[3] = result;
    a2[4] = &off_100E36700;
    *a2 = v20;
    return result;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_10003E040(void *a1)
{
  sub_1001B1E64(a1, a1[3]);
  type metadata accessor for WeatherForecastDescriptionStringBuilder();
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:name:)();
  if (result)
  {
    uint64_t v2 = result;
    type metadata accessor for HourlyForecastComponentViewModelFactory();
    uint64_t result = swift_allocObject();
    *(void *)(result + 16) = v2;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10003E0C8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = sub_10018E040();
  v4(v3);
  swift_allocObject();
  return a2();
}

uint64_t sub_10003E10C()
{
  uint64_t v1 = sub_10017DF08(&qword_100EABBF8);
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  __n128 v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = v0 + OBJC_IVAR____TtC7Weather28LocationViewCollisionOptions__value;
  int v7 = 0;
  uint64_t v8 = &_swiftEmptyArrayStorage;
  Published.init(initialValue:)();
  (*(void (**)(uint64_t, char *, uint64_t))(v2 + 32))(v5, v4, v1);
  return v0;
}

uint64_t sub_10003E20C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X8>)
{
  char v11 = a5 & 1;
  sub_100195B7C(a4, a5 & 1);
  sub_1000C3D18();
  char v13 = v12;
  sub_10018F6D8(a4, v11);
  uint64_t v14 = sub_10017DF08(&qword_100E74318);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(a6, a1, v14);
  uint64_t v15 = a6 + *(int *)(sub_10017DF08(&qword_100E74320) + 36);
  *(unsigned char *)uint64_t v15 = (v13 & 0xC0) == 64;
  *(void *)(v15 + 8) = a2;
  *(void *)(v15 + 16) = a3;

  return swift_bridgeObjectRetain();
}

void *assignWithCopy for MainViewFullscreenMapZoomTransitionModifier(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  sub_1000C1E18(a1 + 1, a2 + 1);
  a1[6] = a2[6];
  swift_retain();
  swift_release();
  return a1;
}

void *assignWithCopy for LocationView(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  uint64_t v4 = a2[4];
  a1[3] = a2[3];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[4] = v4;
  a1[5] = a2[5];
  a1[6] = a2[6];
  swift_retain();
  swift_release();
  sub_1000C1E18(a1 + 7, a2 + 7);
  sub_1000C1E18(a1 + 12, a2 + 12);
  return a1;
}

uint64_t sub_10003E424(void *a1, uint64_t a2, void *a3, uint64_t a4, void (*a5)(id, uint64_t))
{
  uint64_t v6 = a4;
  if (a4)
  {
    type metadata accessor for LaunchOptionsKey(0);
    sub_1000A382C((unint64_t *)&unk_100E6F490, 255, type metadata accessor for LaunchOptionsKey);
    uint64_t v6 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();
  }
  id v9 = a3;
  id v10 = a1;
  a5(v9, v6);

  swift_bridgeObjectRelease();
  return 1;
}

void *_s7Weather47HostsLocationHeaderFrameCoordinatorViewModifierVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_10003E534(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for BackgroundAnimationData();
  uint64_t v37 = *(void *)(v3 - 8);
  uint64_t v38 = v3;
  __chkstk_darwin(v3);
  uint64_t v36 = (char *)v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for WeatherConditionBackgroundModel();
  uint64_t v40 = *(void *)(v5 - 8);
  uint64_t v41 = v5;
  __chkstk_darwin(v5);
  uint64_t v42 = (char *)v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for AnimatedGradient();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  id v10 = (char *)v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for SkyBackgroundGradient();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  WeatherConditionBackgroundModel.gradient.getter();
  uint64_t v15 = SkyBackgroundGradient.gradient()();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  type metadata accessor for WeatherConditionBackgroundModifier(0);
  uint64_t v39 = v1;
  sub_10017DF08(&qword_100EB4850);
  State.wrappedValue.getter();
  AnimatedGradient.visibleGradient.getter();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  uint64_t v16 = v15;
  LOBYTE(v7) = static Gradient.== infix(_:_:)();
  swift_bridgeObjectRelease();
  if (v7) {
    return swift_bridgeObjectRelease();
  }
  if (qword_100E627D0 != -1) {
    swift_once();
  }
  uint64_t v18 = type metadata accessor for Logger();
  sub_1002102B0(v18, (uint64_t)qword_100F51E88);
  uint64_t v20 = v40;
  uint64_t v19 = v41;
  uint64_t v21 = v42;
  (*(void (**)(char *, uint64_t, uint64_t))(v40 + 16))(v42, a1, v41);
  uint64_t v22 = Logger.logObject.getter();
  os_log_type_t v23 = static os_log_type_t.default.getter();
  int v24 = v23;
  if (os_log_type_enabled(v22, v23))
  {
    uint64_t v25 = swift_slowAlloc();
    uint64_t v26 = swift_slowAlloc();
    uint64_t v35 = v26;
    *(_DWORD *)uint64_t v25 = 141558275;
    uint64_t v43 = 1752392040;
    uint64_t v44 = v26;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v25 + 12) = 2081;
    v33[1] = v25 + 14;
    uint64_t v27 = v36;
    int v34 = v24;
    WeatherConditionBackgroundModel.animationData.getter();
    sub_1001CA9B8(&qword_100EB4AC0, (void (*)(uint64_t))&type metadata accessor for BackgroundAnimationData);
    uint64_t v28 = v38;
    uint64_t v29 = dispatch thunk of CustomStringConvertible.description.getter();
    unint64_t v31 = v30;
    (*(void (**)(char *, uint64_t))(v37 + 8))(v27, v28);
    uint64_t v43 = sub_10016414C(v29, v31, &v44);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v20 + 8))(v42, v19);
    _os_log_impl((void *)&_mh_execute_header, v22, (os_log_type_t)v34, "Updating gradient background; model=%{private,mask.hash}s",
      (uint8_t *)v25,
      0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v20 + 8))(v21, v19);
  }

  uint64_t v32 = static Animation.easeInOut(duration:)();
  __chkstk_darwin(v32);
  v33[-2] = v39;
  v33[-1] = v16;
  withAnimation<A>(_:_:)();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_10003EAB8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v21 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for DispatchQoS();
  uint64_t v19 = *(void *)(v5 - 8);
  uint64_t v20 = v5;
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for MonitorAppLaunchStateViewModifier(0);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  __chkstk_darwin(v8 - 8);
  sub_10020D948(a1, (uint64_t)aBlock);
  uint64_t v11 = v23;
  uint64_t v12 = v24;
  sub_1001B1E64(aBlock, (uint64_t)v23);
  sub_1000F7538(a1, (uint64_t)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v13 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v14 = swift_allocObject();
  sub_1000F76BC((uint64_t)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v14 + v13);
  (*((void (**)(uint64_t (*)(), uint64_t, void *, uint64_t (*)()))v12 + 1))(sub_1004A8AE8, v14, v11, v12);
  swift_release();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)aBlock);
  sub_1001ABC4C(0, (unint64_t *)&qword_100E62D10);
  uint64_t v15 = (void *)static OS_dispatch_queue.main.getter();
  int v24 = sub_100218B90;
  uint64_t v25 = 0;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10010A4D4;
  os_log_type_t v23 = &unk_100E18080;
  uint64_t v16 = _Block_copy(aBlock);
  static DispatchQoS.unspecified.getter();
  aBlock[0] = &_swiftEmptyArrayStorage;
  sub_100128BE4((unint64_t *)&qword_100EA0200, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10017DF08(&qword_100E75530);
  sub_1001246C8((unint64_t *)&qword_100EA0210, &qword_100E75530);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v16);

  (*(void (**)(char *, uint64_t))(v21 + 8))(v4, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v7, v20);
}

uint64_t sub_10003EE80()
{
  uint64_t result = type metadata accessor for Optional();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_10003EF1C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for PressureTrend();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = (void *)(a1 + v7);
  uint64_t v10 = (void *)(a2 + v7);
  uint64_t v11 = v10[1];
  *uint64_t v9 = *v10;
  v9[1] = v11;
  uint64_t v12 = (void *)(a1 + v8);
  unint64_t v13 = (void *)(a2 + v8);
  uint64_t v14 = v13[1];
  *uint64_t v12 = *v13;
  v12[1] = v14;
  uint64_t v15 = a3[7];
  uint64_t v16 = a3[8];
  uint64_t v17 = (void *)(a1 + v15);
  uint64_t v18 = (void *)(a2 + v15);
  uint64_t v19 = v18[1];
  *uint64_t v17 = *v18;
  v17[1] = v19;
  *(void *)(a1 + v16) = *(void *)(a2 + v16);
  uint64_t v20 = a3[9];
  uint64_t v21 = (void *)(a1 + v20);
  uint64_t v22 = (void *)(a2 + v20);
  uint64_t v23 = v22[1];
  *uint64_t v21 = *v22;
  v21[1] = v23;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_10003F004()
{
  return Transaction.disablesPageScrollAnimations.setter();
}

uint64_t _s7Weather25FullscreenMapPresentationVwCP_0(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_10003F064()
{
  char v0 = Location.Identifier.kind.getter();
  id v1 = [self mainBundle];
  if (v0)
  {
    v9._uint64_t countAndFlagsBits = 0xD00000000000001BLL;
    v13._uint64_t countAndFlagsBits = 0xD000000000000048;
    v13._object = (void *)0x8000000100C9ECD0;
    v9._object = (void *)0x8000000100C9ECB0;
    v10._uint64_t countAndFlagsBits = 0;
    v10._object = (void *)0xE000000000000000;
    uint64_t countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v9, (Swift::String_optional)0, (NSBundle)v1, v10, v13)._countAndFlagsBits;
  }
  else
  {
    v12._uint64_t countAndFlagsBits = 0xD000000000000040;
    v12._object = (void *)0x8000000100C9EE70;
    v2._object = (void *)0x8000000100C9EE50;
    v2._uint64_t countAndFlagsBits = 0xD000000000000012;
    v3._uint64_t countAndFlagsBits = 0;
    v3._object = (void *)0xE000000000000000;
    NSLocalizedString(_:tableName:bundle:value:comment:)(v2, (Swift::String_optional)0, (NSBundle)v1, v3, v12);

    sub_10017DF08(&qword_100E64020);
    uint64_t v4 = swift_allocObject();
    *(_OWORD *)(v4 + 16) = xmmword_100C251B0;
    uint64_t v5 = Location.Identifier.name.getter();
    uint64_t v7 = v6;
    *(void *)(v4 + 56) = &type metadata for String;
    *(void *)(v4 + 64) = sub_10012B7C0();
    *(void *)(v4 + 32) = v5;
    *(void *)(v4 + 40) = v7;
    uint64_t countAndFlagsBits = static String.localizedStringWithFormat(_:_:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return countAndFlagsBits;
}

void *sub_10003F1F8(uint64_t a1, uint64_t a2)
{
  v2[4] = 0;
  uint64_t v5 = (uint64_t)v2 + OBJC_IVAR____TtC7Weather21DisplayMetricsMonitor_previousDisplayMetrics;
  uint64_t v6 = type metadata accessor for DisplayMetrics();
  _s7Weather24LocationCompositionStateOwst_0(v5, 1, 1, v6);
  swift_unknownObjectWeakInit();
  v2[2] = a1;
  v2[3] = a2;
  uint64_t v7 = self;
  swift_retain();
  id v8 = [v7 defaultCenter];
  swift_retain();
  [v8 addObserver:v2 selector:"updateDisplayMetricsIfChanged" name:UIContentSizeCategoryDidChangeNotification object:0];

  swift_release();
  swift_release();
  return v2;
}

uint64_t sub_10003F2F8(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    Swift::String v3 = &_swiftEmptySetSingleton;
    goto LABEL_25;
  }
  sub_10017DF08(&qword_100E6D110);
  uint64_t result = sub_10017FA94();
  Swift::String v3 = (unsigned char *)result;
  uint64_t v24 = *(void *)(a1 + 16);
  if (!v24)
  {
LABEL_25:
    swift_bridgeObjectRelease();
    return (uint64_t)v3;
  }
  unint64_t v4 = 0;
  uint64_t v5 = result + 56;
  while (v4 < *(void *)(a1 + 16))
  {
    uint64_t v6 = (uint64_t *)(a1 + 32 + 16 * v4);
    uint64_t v8 = *v6;
    uint64_t v7 = v6[1];
    Hasher.init(_seed:)();
    swift_bridgeObjectRetain();
    String.hash(into:)();
    uint64_t result = Hasher._finalize()();
    uint64_t v9 = -1 << v3[32];
    unint64_t v10 = result & ~v9;
    unint64_t v11 = v10 >> 6;
    uint64_t v12 = *(void *)(v5 + 8 * (v10 >> 6));
    uint64_t v13 = 1 << v10;
    if (((1 << v10) & v12) != 0)
    {
      uint64_t v14 = *((void *)v3 + 6);
      uint64_t v15 = (void *)(v14 + 16 * v10);
      BOOL v16 = *v15 == v8 && v15[1] == v7;
      if (v16 || (uint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)(), (result & 1) != 0))
      {
LABEL_11:
        uint64_t result = swift_bridgeObjectRelease();
        goto LABEL_22;
      }
      uint64_t v17 = ~v9;
      while (1)
      {
        unint64_t v10 = (v10 + 1) & v17;
        unint64_t v11 = v10 >> 6;
        uint64_t v12 = *(void *)(v5 + 8 * (v10 >> 6));
        uint64_t v13 = 1 << v10;
        if ((v12 & (1 << v10)) == 0) {
          break;
        }
        uint64_t v18 = (void *)(v14 + 16 * v10);
        if (*v18 != v8 || v18[1] != v7)
        {
          uint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)();
          if ((result & 1) == 0) {
            continue;
          }
        }
        goto LABEL_11;
      }
    }
    *(void *)(v5 + 8 * v11) = v13 | v12;
    uint64_t v20 = (void *)(*((void *)v3 + 6) + 16 * v10);
    void *v20 = v8;
    v20[1] = v7;
    uint64_t v21 = *((void *)v3 + 2);
    BOOL v22 = __OFADD__(v21, 1);
    uint64_t v23 = v21 + 1;
    if (v22) {
      goto LABEL_27;
    }
    *((void *)v3 + 2) = v23;
LABEL_22:
    if (++v4 == v24) {
      goto LABEL_25;
    }
  }
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

unsigned char *sub_10003F4BC@<X0>(unsigned char *result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X8>)
{
  if (*result == 1)
  {
    uint64_t v11 = static Color.clear.getter();
    uint64_t v12 = (void *)swift_allocObject();
    _OWORD v12[2] = a2;
    void v12[3] = a3;
    v12[4] = a4;
    v12[5] = a5;
    swift_retain();
    swift_retain();
    uint64_t result = (unsigned char *)swift_retain();
    uint64_t v13 = sub_1004EAB94;
    uint64_t v14 = sub_100029FE4;
  }
  else
  {
    uint64_t v11 = 0;
    uint64_t v14 = 0;
    uint64_t v13 = 0;
    uint64_t v12 = 0;
  }
  *a6 = v11;
  a6[1] = (uint64_t)v14;
  a6[2] = 0;
  a6[3] = (uint64_t)v13;
  a6[4] = (uint64_t)v12;
  return result;
}

uint64_t sub_10003F594()
{
  return sub_10003F5F8();
}

uint64_t sub_10003F5F8()
{
  return EnvironmentValues.subscript.setter();
}

uint64_t sub_10003F650()
{
  uint64_t v0 = sub_10003F67C();
  return sub_100182AB8(v0);
}

uint64_t sub_10003F67C()
{
  return sub_10018C9CC((void (*)(void))sub_10019CA88);
}

uint64_t sub_10003F69C(uint64_t *a1)
{
  uint64_t v1 = *a1;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v3 = result;
    unint64_t v4 = *(uint64_t (**)(uint64_t))(result + 16);
    memset(v11, 0, sizeof(v11));
    uint64_t v12 = 0;
    uint64_t v13 = v1;
    char v14 = 1;
    swift_bridgeObjectRetain();
    sub_1001AB2DC((uint64_t)v11, v4);
    sub_10017DF4C((uint64_t)v11, &qword_100E63488);
    static os_signpost_type_t.event.getter();
    uint64_t v5 = *(void **)(v3 + OBJC_IVAR____TtC7Weather29WeatherDataDebounceMiddleware_logger);
    sub_10017DF08(&qword_100E64020);
    uint64_t v6 = swift_allocObject();
    *(_OWORD *)(v6 + 16) = xmmword_100C251B0;
    swift_bridgeObjectRetain();
    id v7 = v5;
    uint64_t v8 = sub_1000AF4B8(v1);
    uint64_t v10 = v9;
    swift_bridgeObjectRelease();
    *(void *)(v6 + 56) = &type metadata for String;
    *(void *)(v6 + 64) = sub_10012B7C0();
    *(void *)(v6 + 32) = v8;
    *(void *)(v6 + 40) = v10;
    os_signpost(_:dso:log:name:signpostID:_:_:)();
    swift_release();

    return swift_bridgeObjectRelease();
  }
  return result;
}

char *sub_10003F824(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v11 = &v5[OBJC_IVAR____TtC7Weather23UserNotificationMonitor_dispatcher];
  *(void *)uint64_t v11 = a1;
  *((void *)v11 + 1) = a2;
  *(void *)&v5[OBJC_IVAR____TtC7Weather23UserNotificationMonitor_userNotificationCenter] = a3;
  *(void *)&v5[OBJC_IVAR____TtC7Weather23UserNotificationMonitor_store] = a4;
  v18.receiver = v5;
  v18.super_class = ObjectType;
  swift_retain();
  id v12 = a3;
  swift_retain();
  uint64_t v13 = (char *)[super init];
  char v14 = *(void **)&v13[OBJC_IVAR____TtC7Weather23UserNotificationMonitor_userNotificationCenter];
  uint64_t v15 = v13;
  id v16 = v14;
  [v16 setDelegate:v15];

  swift_release();
  swift_release();
  return v15;
}

id sub_10003F914()
{
  id v1 = [objc_allocWithZone((Class)UIPageControl) init];
  Swift::String v2 = v1;
  if (*(unsigned char *)(v0 + 8) == 1) {
    [v1 setBackgroundStyle:1];
  }
  sub_10017DF08(&qword_100E8D978);
  UIViewRepresentableContext.coordinator.getter();
  [v2 addTarget:v10 action:"pageDidChange:" forControlEvents:4096];
  swift_release();
  uint64_t v3 = self;
  id v4 = v2;
  id v5 = [v3 mainBundle];
  v11._uint64_t countAndFlagsBits = 0xD000000000000039;
  v11._object = (void *)0x8000000100CAEE20;
  v6._object = (void *)0x8000000100CAEE00;
  v6._uint64_t countAndFlagsBits = 0xD000000000000010;
  v7._uint64_t countAndFlagsBits = 0;
  v7._object = (void *)0xE000000000000000;
  Swift::String v8 = NSLocalizedString(_:tableName:bundle:value:comment:)(v6, (Swift::String_optional)0, (NSBundle)v5, v7, v11);

  sub_10013D3A0(v8._countAndFlagsBits, (uint64_t)v8._object, v4, (SEL *)&selRef_setAccessibilityLabel_);
  return v4;
}

uint64_t sub_10003FA78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Location.Identifier();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = *(void *)v9;
  uint64_t v11 = *(void *)(v9 + 8);
  uint64_t v12 = *(void *)(v9 + 16);
  uint64_t v13 = *(void *)(v9 + 24);
  uint64_t v14 = *(void *)(v9 + 32);
  uint64_t v15 = *(void *)(v9 + 40);
  uint64_t v16 = *(void *)(v9 + 48);
  uint64_t v17 = *(void *)(v9 + 56);
  uint64_t v18 = *(void *)(v9 + 64);
  char v30 = *(unsigned char *)(v9 + 72);
  sub_1001910C8(*(void *)v9, v11, v12, v13, v14, v15, v16, v17, v18, v30);
  uint64_t v19 = *(void *)v8;
  uint64_t v20 = *(void *)(v8 + 8);
  uint64_t v21 = *(void *)(v8 + 16);
  uint64_t v22 = *(void *)(v8 + 24);
  uint64_t v23 = *(void *)(v8 + 32);
  uint64_t v24 = *(void *)(v8 + 40);
  uint64_t v25 = *(void *)(v8 + 48);
  uint64_t v26 = *(void *)(v8 + 56);
  uint64_t v27 = *(void *)(v8 + 64);
  char v28 = *(unsigned char *)(v8 + 72);
  *(void *)uint64_t v8 = v10;
  *(void *)(v8 + 8) = v11;
  *(void *)(v8 + 16) = v12;
  *(void *)(v8 + 24) = v13;
  *(void *)(v8 + 32) = v14;
  *(void *)(v8 + 40) = v15;
  *(void *)(v8 + 48) = v16;
  *(void *)(v8 + 56) = v17;
  *(void *)(v8 + 64) = v18;
  *(unsigned char *)(v8 + 72) = v30;
  sub_10018CCC4(v19, v20, v21, v22, v23, v24, v25, v26, v27, v28);
  return a1;
}

uint64_t sub_10003FBA0()
{
  uint64_t v1 = type metadata accessor for Location();
  sub_1001627C0(v1);
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 24);

  return sub_100095EC8(v2, v3);
}

uint64_t sub_10003FBE4()
{
  uint64_t result = type metadata accessor for Selector.ModelState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for Selector.ModelState()
{
  return swift_getGenericMetadata();
}

uint64_t assignWithCopy for RecordLocationHeaderFrameViewModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  *(unsigned char *)a1 = *(unsigned char *)a2;
  char v4 = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = v4;
  swift_retain();
  swift_release();
  uint64_t v5 = *(void *)(v2 + 24);
  uint64_t v6 = *(void *)(v2 + 32);
  uint64_t v7 = *(void *)(v2 + 40);
  uint64_t v8 = *(void *)(v2 + 48);
  LOBYTE(v2) = *(unsigned char *)(v2 + 56);
  sub_100190CD4(v5, v6, v7, v8, v2);
  uint64_t v9 = *(void *)(a1 + 24);
  uint64_t v10 = *(void *)(a1 + 32);
  uint64_t v11 = *(void *)(a1 + 40);
  uint64_t v12 = *(void *)(a1 + 48);
  char v13 = *(unsigned char *)(a1 + 56);
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = v6;
  *(void *)(a1 + 40) = v7;
  *(void *)(a1 + 48) = v8;
  *(unsigned char *)(a1 + 56) = v2;
  sub_100191934(v9, v10, v11, v12, v13);
  return a1;
}

uint64_t sub_10003FD40@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for CoordinateSpace();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, enum case for CoordinateSpace.global(_:), v2);
  GeometryProxy.frameClippedToScrollViews(in:)();
  double v6 = *(double *)&v11[3];
  double v7 = *(double *)&v11[4];
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  uint64_t result = GeometryProxy.size.getter();
  *a1 = v6 * v7 / (v9 * v10) == 1.0;
  return result;
}

uint64_t assignWithCopy for LocationViewCollisionOptions.PublishedValue(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s7Weather26NetworkConnectivityMonitorC30applicationWillEnterForegroundyyF_0()
{
  uint64_t v1 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for DispatchQoS();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t result = __chkstk_darwin(v5);
  double v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(v0 + 32))
  {
    uint64_t v15 = *(void *)(v0 + 48);
    uint64_t v10 = swift_allocObject();
    uint64_t v14 = v2;
    uint64_t v11 = v10;
    swift_weakInit();
    aBlock[4] = sub_10021B6A4;
    aBlock[5] = v11;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10010A4D4;
    void aBlock[3] = &unk_100E3BF30;
    uint64_t v12 = _Block_copy(aBlock);
    swift_retain();
    static DispatchQoS.unspecified.getter();
    uint64_t v16 = &_swiftEmptyArrayStorage;
    sub_100215C98((unint64_t *)&qword_100EA0200, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_10017DF08(&qword_100E75530);
    sub_10012470C((unint64_t *)&qword_100EA0210, &qword_100E75530);
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v12);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v4, v1);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    swift_release();
    return swift_release();
  }
  return result;
}

void SessionEventsAndDataCoordinator.sceneWillConnectToSession(withOptions:)()
{
  sub_100162EA0();
  uint64_t v1 = type metadata accessor for URL();
  sub_100179C0C();
  uint64_t v3 = v2;
  __chkstk_darwin(v4);
  sub_10012B938();
  if ((SceneConnectionOptions.isEmpty.getter() & 1) == 0)
  {
    uint64_t v5 = (void *)SceneConnectionOptions.connectionOptions.getter();
    if (v5)
    {
      uint64_t v6 = v5;
      id v7 = [v5 URLContexts];

      sub_1001ABC4C(0, &qword_100E76AE8);
      sub_1000F0308(&qword_100E76AF0, &qword_100E76AE8);
      static Set._unconditionallyBridgeFromObjectiveC(_:)();

      sub_1000F0358();
      double v9 = v8;
      swift_bridgeObjectRelease();
      if (v9)
      {
        sub_100442358([v9 options]);
        if (v10)
        {
          String.lowercased()();
          swift_bridgeObjectRelease();
        }
        id v11 = [v9 URL];
        static URL._unconditionallyBridgeFromObjectiveC(_:)();

        URL.absoluteString.getter();
        uint64_t v12 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(v0, v1);
        __chkstk_darwin(v12);
        type metadata accessor for UnfairLock();
        swift_retain();
        Lock.sync<A>(_:)();
        swift_release();
        sub_1004402C0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1000ECC08();
      }
    }
  }
  sub_100162694();
}

uint64_t sub_1000403F8(uint64_t a1)
{
  return sub_10004051C(a1);
}

uint64_t sub_10004046C()
{
  sub_10004051C(v0 + OBJC_IVAR____TtC7Weather49WeatherConditionBackgroundModifierObservableModel__model);
  uint64_t v1 = v0 + OBJC_IVAR____TtC7Weather49WeatherConditionBackgroundModifierObservableModel___observationRegistrar;
  uint64_t v2 = type metadata accessor for ObservationRegistrar();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_10004051C(uint64_t a1)
{
  uint64_t v2 = sub_10017DF08(&qword_100E64A60);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10004057C()
{
  return ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
}

unint64_t sub_100040608()
{
  unint64_t result = qword_100EAE178;
  if (!qword_100EAE178)
  {
    type metadata accessor for WeatherConditionBackgroundModifierObservableModel();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAE178);
  }
  return result;
}

uint64_t sub_100040658(uint64_t a1)
{
  return a1;
}

uint64_t sub_100040744()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10017DF08(&qword_100E76778);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = v1
     + OBJC_IVAR____TtC7WeatherP33_5624985E7B87C7961D79AEAA50BEAAE138AnimatedBackgroundsUserDefaultsMonitor__animatedBackgroundsEnabled;
  char v14 = 1;
  Published.init(initialValue:)();
  (*(void (**)(uint64_t, char *, uint64_t))(v3 + 32))(v6, v5, v2);
  *(void *)(v1
            + OBJC_IVAR____TtC7WeatherP33_5624985E7B87C7961D79AEAA50BEAAE138AnimatedBackgroundsUserDefaultsMonitor_observer) = 0;
  uint64_t v7 = OBJC_IVAR____TtC7WeatherP33_5624985E7B87C7961D79AEAA50BEAAE138AnimatedBackgroundsUserDefaultsMonitor_defaults;
  id v8 = [self standardUserDefaults];
  *(void *)(v1 + v7) = v8;
  id v13 = v8;
  swift_getKeyPath();
  swift_allocObject();
  swift_weakInit();
  id v9 = v8;
  uint64_t v10 = _KeyValueCodingAndObserving.observe<A>(_:options:changeHandler:)();
  swift_release();
  swift_release();

  id v11 = *(void **)(v1
                 + OBJC_IVAR____TtC7WeatherP33_5624985E7B87C7961D79AEAA50BEAAE138AnimatedBackgroundsUserDefaultsMonitor_observer);
  *(void *)(v1
            + OBJC_IVAR____TtC7WeatherP33_5624985E7B87C7961D79AEAA50BEAAE138AnimatedBackgroundsUserDefaultsMonitor_observer) = v10;

  return v1;
}

uint64_t destroy for LazyUntilDismissedViewModifier()
{
  swift_release();

  return swift_release();
}

uint64_t sub_100040950()
{
  type metadata accessor for MoonRiseSetEvent();
  sub_100179C0C();
  __chkstk_darwin(v3);
  uint64_t v4 = sub_1001A02B8();
  sub_100179C0C();
  uint64_t v6 = v5;
  __chkstk_darwin(v7);
  sub_100162758();
  __chkstk_darwin(v8);
  sub_10017FF4C();
  __chkstk_darwin(v9);
  sub_100166C94();
  __chkstk_darwin(v10);
  uint64_t v11 = sub_10017AFB8();
  v12(v11);
  uint64_t v13 = sub_1001842A0();
  int v15 = v14(v13);
  if (v15 != enum case for MoonRiseSetEvent.today(_:))
  {
    if (v15 == enum case for MoonRiseSetEvent.tomorrow(_:))
    {
      uint64_t v30 = sub_10019F7CC();
      v31(v30);
      sub_100180BD4();
      v32();
      uint64_t v33 = sub_100181B8C();
      v34(v33);
      sub_1001A08F0();
      int v36 = v35();
      if (v36 == enum case for MoonRiseSet.rise(_:))
      {
        id v37 = [self mainBundle];
        uint64_t v38 = sub_10017EE78();
        uint64_t v45 = 0xED0000657369726ELL;
      }
      else
      {
        if (v36 != enum case for MoonRiseSet.set(_:))
        {
          uint64_t v52 = *(void (**)(void))(v6 + 8);
          sub_10017CB40();
          v52();
          ((void (*)(uint64_t, uint64_t))v52)(v1, v4);
          return 0;
        }
        id v37 = [self mainBundle];
        uint64_t v38 = sub_10017EE78();
        uint64_t v45 = 0xEC0000007465736ELL;
      }
      uint64_t countAndFlagsBits = sub_100163324(v38, v45, v39, v40, v41, v42, v43, v44);

      uint64_t v51 = *(void (**)(void))(v6 + 8);
      sub_10017CB40();
      v51();
      sub_10017CB40();
      v51();
      return countAndFlagsBits;
    }
    if (v15 != enum case for MoonRiseSetEvent.future(_:))
    {
      uint64_t v48 = sub_1001A4A2C();
      v49(v48);
      return 0;
    }
  }
  uint64_t v16 = sub_10019F7CC();
  v17(v16);
  uint64_t v18 = *(void (**)(void))(v6 + 32);
  sub_100180BD4();
  v18();
  ((void (*)(uint64_t, uint64_t, uint64_t))v18)(v0, v2, v4);
  sub_1001A08F0();
  int v20 = v19();
  if (v20 != enum case for MoonRiseSet.rise(_:))
  {
    if (v20 == enum case for MoonRiseSet.set(_:))
    {
      id v21 = [self mainBundle];
      sub_100163CE8();
      sub_1001A1314();
      unint64_t v29 = 0xD00000000000002CLL;
      goto LABEL_9;
    }
    sub_10017CB40();
    v50();
    return 0;
  }
  id v21 = [self mainBundle];
  sub_1001A29C0();
  sub_1001A1314();
LABEL_9:
  uint64_t countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v22, *(Swift::String_optional *)&v24, v26, *(Swift::String *)&v27, *(Swift::String *)(&v54 - 1))._countAndFlagsBits;

  sub_10017CB40();
  v47();
  return countAndFlagsBits;
}

uint64_t sub_100040D34()
{
  type metadata accessor for MoonRiseSetEvent();
  sub_100179C0C();
  __chkstk_darwin(v3);
  uint64_t v4 = sub_1001A02B8();
  sub_100179C0C();
  uint64_t v6 = v5;
  __chkstk_darwin(v7);
  sub_100162758();
  __chkstk_darwin(v8);
  sub_10017FF4C();
  __chkstk_darwin(v9);
  sub_100166C94();
  __chkstk_darwin(v10);
  uint64_t v11 = sub_10017AFB8();
  v12(v11);
  uint64_t v13 = sub_1001842A0();
  int v15 = v14(v13);
  if (v15 != enum case for MoonRiseSetEvent.today(_:))
  {
    if (v15 == enum case for MoonRiseSetEvent.tomorrow(_:))
    {
      uint64_t v22 = sub_10019F7CC();
      v23(v22);
      sub_100180BD4();
      v24();
      uint64_t v25 = sub_100181B8C();
      v26(v25);
      sub_1001A08F0();
      int v28 = v27();
      if (v28 == enum case for MoonRiseSet.rise(_:))
      {
        id v29 = [self mainBundle];
        sub_1001A1AB8();
        unint64_t v36 = v35 | 1;
        uint64_t v37 = v35 + 151;
        uint64_t v38 = 0x8000000100CBE220;
      }
      else
      {
        if (v28 != enum case for MoonRiseSet.set(_:))
        {
          size_t v50 = *(void (**)(void))(v6 + 8);
          sub_10017CB40();
          v50();
          ((void (*)(uint64_t, uint64_t))v50)(v1, v4);
          return 0;
        }
        id v29 = [self mainBundle];
        sub_1001A1AB8();
        uint64_t v37 = v48 + 149;
        uint64_t v38 = 0x8000000100CBE150;
        unint64_t v36 = 0xD000000000000010;
      }
      uint64_t countAndFlagsBits = sub_100163324(v36, v38, v30, v31, v32, v33, v34, v37);

      int v49 = *(void (**)(void))(v6 + 8);
      sub_10017CB40();
      v49();
      sub_10017CB40();
      v49();
      return countAndFlagsBits;
    }
    if (v15 != enum case for MoonRiseSetEvent.future(_:))
    {
      uint64_t v45 = sub_1001A4A2C();
      v46(v45);
      return 0;
    }
  }
  uint64_t v16 = sub_10019F7CC();
  v17(v16);
  uint64_t v18 = *(void (**)(void))(v6 + 32);
  sub_100180BD4();
  v18();
  ((void (*)(uint64_t, uint64_t, uint64_t))v18)(v0, v2, v4);
  sub_1001A08F0();
  int v20 = v19();
  if (v20 != enum case for MoonRiseSet.rise(_:))
  {
    if (v20 == enum case for MoonRiseSet.set(_:))
    {
      id v21 = [self mainBundle];
      sub_1001A1AB8();
      sub_100163CE8();
      goto LABEL_9;
    }
    sub_10017CB40();
    v47();
    return 0;
  }
  id v21 = [self mainBundle];
  sub_1001A1AB8();
  sub_1001A29C0();
LABEL_9:
  sub_1001A1314();
  uint64_t countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v39, v40, v41, v42, *(Swift::String *)(&v52 - 1))._countAndFlagsBits;

  sub_10017CB40();
  v44();
  return countAndFlagsBits;
}

uint64_t sub_100041138@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v30 = a3;
  uint64_t v31 = a4;
  uint64_t v34 = a5;
  int v29 = a2 & 1;
  uint64_t v32 = sub_10017DF08(&qword_100E83B58);
  __chkstk_darwin(v32);
  uint64_t v7 = &v28[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = type metadata accessor for RowModifier(0);
  __chkstk_darwin(v8);
  uint64_t v10 = (uint64_t *)&v28[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v33 = sub_10017DF08(&qword_100E835F0);
  uint64_t v11 = __chkstk_darwin(v33);
  uint64_t v13 = &v28[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v11);
  int v15 = &v28[-v14];
  uint64_t v16 = *(void *)a1;
  char v17 = *(unsigned char *)(a1 + 8);
  sub_100195B7C(*(void *)a1, v17);
  sub_100149AE8();
  char v19 = v18;
  sub_10018F6D8(v16, v17);
  if (v19)
  {
    uint64_t v20 = static HorizontalAlignment.leading.getter();
    sub_100058114(v29, v30, v31, a1, (uint64_t)v44);
    char v43 = 0;
    memcpy(&v45[7], v44, 0xE1uLL);
    *uint64_t v10 = swift_getKeyPath();
    sub_10017DF08(&qword_100E829F0);
    swift_storeEnumTagMultiPayload();
    id v21 = (char *)v10 + *(int *)(v8 + 20);
    *(void *)id v21 = swift_getKeyPath();
    v21[8] = 0;
    uint64_t v22 = (char *)v10 + *(int *)(v8 + 24);
    uint64_t v35 = 0;
    uint64_t v36 = 0;
    char v38 = 0;
    uint64_t v37 = 0;
    State.init(wrappedValue:)();
    uint64_t v23 = v40;
    char v24 = v41;
    uint64_t v25 = v42;
    *(_OWORD *)uint64_t v22 = v39;
    *((void *)v22 + 2) = v23;
    unsigned char v22[24] = v24;
    *((void *)v22 + 4) = v25;
    sub_1001EC0BC();
    *(void *)uint64_t v13 = v20;
    *((void *)v13 + 1) = 0;
    v13[16] = 0;
    memcpy(v13 + 17, v45, 0xE8uLL);
    sub_1001F75CC();
    sub_10024D364((uint64_t)v13, (uint64_t)v15, &qword_100E835F0);
    sub_1005EFB58((uint64_t)v15, (uint64_t)v7, &qword_100E835F0);
    swift_storeEnumTagMultiPayload();
    sub_10017DF08(&qword_100E83600);
    sub_10022D4EC();
    sub_10024D5E4((uint64_t)&unk_100E835F8);
    _ConditionalContent<>.init(storage:)();
    return sub_10017DF4C((uint64_t)v15, &qword_100E835F0);
  }
  else
  {
    uint64_t v27 = static HorizontalAlignment.leading.getter();
    sub_100058114(v29, v30, v31, a1, (uint64_t)v44);
    LOBYTE(v39) = 0;
    memcpy(&v45[7], v44, 0xE1uLL);
    *(void *)uint64_t v7 = v27;
    *((void *)v7 + 1) = 0;
    v7[16] = 0;
    memcpy(v7 + 17, v45, 0xE8uLL);
    swift_storeEnumTagMultiPayload();
    sub_10017DF08(&qword_100E83600);
    sub_10022D4EC();
    sub_10024D5E4((uint64_t)&unk_100E835F8);
    return _ConditionalContent<>.init(storage:)();
  }
}

void *sub_100041554(void *a1)
{
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E647D8);
  unint64_t result = (void *)dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v11)
  {
    __break(1u);
    goto LABEL_7;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E71B60);
  unint64_t result = (void *)dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v10)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E64798);
  unint64_t result = (void *)dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v5)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E8DE50);
  unint64_t result = (void *)dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v4)
  {
    type metadata accessor for CurrentLocationMonitor();
    swift_allocObject();
    return sub_10001752C(v11, v12, &v9, v5, v6, v7, v8, &v3);
  }
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_1000416E0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v18 = a2;
  uint64_t v3 = type metadata accessor for URL();
  __chkstk_darwin(v3 - 8);
  uint64_t v4 = type metadata accessor for WDSEndpoint();
  uint64_t v16 = *(void *)(v4 - 8);
  uint64_t v17 = v4;
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10017DF08(&qword_100E98138);
  __chkstk_darwin(v7 - 8);
  long long v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for WDSEndpoint();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v15 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E980D8);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v20)
  {
    sub_1001262E4(&v19, (uint64_t)v21);
    sub_1001B1E64(a1, a1[3]);
    dispatch thunk of ResolverType.resolve<A>(_:)();
    uint64_t result = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v10);
    if (result != 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v13, v9, v10);
      WDSEndpoint.url.getter();
      WDSEndpoint.portOverrideProvider.getter();
      WDSEndpoint.init(url:portOverrideProvider:)();
      sub_1001B1E64(v21, v21[3]);
      dispatch thunk of WDSAuthenticatorFactoryType.makeAuthenticator(for:)();
      (*(void (**)(char *, uint64_t))(v16 + 8))(v6, v17);
      (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
      return _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v21);
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1000419E4(uint64_t a1)
{
  v11[0] = static HorizontalAlignment.center.getter();
  v11[1] = 0;
  char v12 = 1;
  sub_1000F8BF0(a1, (uint64_t)__src);
  uint64_t v2 = swift_allocObject();
  memcpy((void *)(v2 + 16), __src, 0x48uLL);
  uint64_t v3 = sub_10017DF08(&qword_100E90C28);
  __src[10] = sub_100874A88;
  __src[11] = 0;
  LOBYTE(__src[12]) = 0;
  __src[0] = v3;
  if (qword_100E62290 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t result = sub_10006DF38((uint64_t)&xmmword_100F51398, (uint64_t)&v8, &qword_100E6F2A0);
  if (v9)
  {
    sub_1001262E4(&v8, (uint64_t)&__src[3]);
    __src[1] = sub_100A2E1B4;
    __src[2] = v2;
    uint64_t v5 = Dictionary.init(dictionaryLiteral:)();
    __src[8] = &_swiftEmptyArrayStorage;
    __src[9] = v5;
    memcpy(v13, __src, sizeof(v13));
    sub_10017DF08(&qword_100EAAA48);
    sub_10017DF08(&qword_100EAAA50);
    sub_1001246C8(&qword_100EAAA58, &qword_100EAAA48);
    uint64_t v6 = sub_10018C6DC(&qword_100EAAA60);
    uint64_t v7 = sub_1001246C8((unint64_t *)&unk_100EAAA68, &qword_100EAAA60);
    __src[0] = v6;
    __src[1] = v7;
    swift_getOpaqueTypeConformance2();
    View.toolbar<A>(content:)();
    return sub_100178110((uint64_t)v11, &qword_100EAAA48);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100041C50(uint64_t a1, unsigned int *a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v20 = a5;
  uint64_t v6 = type metadata accessor for Access();
  sub_100179C0C();
  uint64_t v8 = v7;
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for FeatureState();
  sub_100179C0C();
  uint64_t v14 = v13;
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v19 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10017DF08(&qword_100E89E10);
  (*(void (**)(char *, void, uint64_t))(v14 + 104))(v17, *a2, v12);
  (*(void (**)(char *, void, uint64_t))(v8 + 104))(v11, enum case for Access.protected(_:), v6);
  uint64_t result = Setting<>.init(_:defaultValue:access:)();
  uint64_t *v20 = result;
  return result;
}

void sub_100041DB4(void *a1)
{
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E647D8);
  dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v4)
  {
    __break(1u);
    goto LABEL_7;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E64798);
  dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v3)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E90688);
  dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v2)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  sub_1001B1E64(a1, a1[3]);
  type metadata accessor for SessionManager();
  if (dispatch thunk of ResolverType.resolve<A>(_:)())
  {
    type metadata accessor for NotificationSubscriptionMonitor();
    swift_allocObject();
    sub_100050864();
    return;
  }
LABEL_9:
  __break(1u);
}

uint64_t sub_100041F3C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_10017DF08(&qword_100E6B648);
  sub_10017C83C();
  uint64_t v7 = v6;
  __chkstk_darwin(v8);
  sub_10011C760();
  uint64_t v9 = (uint64_t *)(a1 + *(int *)(type metadata accessor for VisibilityComponent() + 20));
  uint64_t v10 = *v9;
  uint64_t v11 = v9[1];
  uint64_t v24 = v9[3];
  uint64_t v12 = v9[5];
  uint64_t v25 = v9[4];
  uint64_t v26 = v9[2];
  CurrentWeather.visibility.getter();
  uint64_t v13 = Measurement<>.formattedAndClampedVisibilityWithUnit.getter();
  uint64_t v15 = v14;
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v2, v5);
  *(void *)a2 = v10;
  *(void *)(a2 + 8) = v11;
  *(void *)(a2 + 16) = 0x6C6C69662E657965;
  *(void *)(a2 + 24) = 0xE800000000000000;
  *(unsigned char *)(a2 + 32) = 0;
  type metadata accessor for LocationComponentHeaderViewModel(0);
  *(void *)(a2 + 40) = 0;
  *(void *)(a2 + 48) = 0;
  swift_storeEnumTagMultiPayload();
  uint64_t v16 = (int *)type metadata accessor for LocationComponentContainerViewModel();
  uint64_t v17 = (uint64_t *)(a2 + v16[5]);
  *uint64_t v17 = v13;
  v17[1] = v15;
  void v17[2] = v26;
  uint64_t v17[3] = v24;
  v17[4] = v25;
  v17[5] = v12;
  type metadata accessor for LocationComponentViewModel();
  swift_storeEnumTagMultiPayload();
  uint64_t v18 = a2 + v16[7];
  uint64_t v19 = *(int *)(sub_10017DF08(&qword_100E66488) + 48);
  uint64_t v20 = enum case for DetailCondition.visibility(_:);
  uint64_t v21 = type metadata accessor for DetailCondition();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 104))(v18, v20, v21);
  *(unsigned char *)(v18 + v19) = 0;
  uint64_t v22 = type metadata accessor for LocationComponentAction(0);
  swift_storeEnumTagMultiPayload();
  _s7Weather24LocationCompositionStateOwst_0(v18, 0, 1, v22);
  *(_WORD *)(a2 + v16[6]) = 256;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

id sub_100042160(void *a1)
{
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E647D8);
  id result = (id)dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v12)
  {
    __break(1u);
    goto LABEL_7;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E71B60);
  id result = (id)dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v11)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100EA7DD0);
  id result = (id)dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v8)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E64798);
  id result = (id)dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v4)
  {
    id v3 = objc_allocWithZone((Class)type metadata accessor for LocationAuthorizationMonitor());
    return sub_10000D768(v12, v13, (uint64_t)v10, v8, v9, v4, v5, v6, v7);
  }
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_1000422E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>, double a7@<D0>)
{
  sub_10017DF08(&qword_100E6B8D0);
  sub_100162E4C();
  __chkstk_darwin(v14);
  sub_10016278C();
  uint64_t v17 = v15 - v16;
  __chkstk_darwin(v18);
  uint64_t v20 = (char *)&v31 - v19;
  sub_100144A28(a1, a6, (void (*)(void))type metadata accessor for DailyForecastComponentViewModel);
  uint64_t v21 = (int *)type metadata accessor for DailyComponentView(0);
  uint64_t v22 = (void *)(a6 + v21[5]);
  *uint64_t v22 = a2;
  v22[1] = a3;
  uint64_t v23 = (void *)(a6 + v21[6]);
  *uint64_t v23 = a4;
  v23[1] = a5;
  *(double *)(a6 + v21[7]) = a7;
  uint64_t v24 = (uint64_t *)(a6 + v21[8]);
  *uint64_t v24 = swift_getKeyPath();
  sub_10017DF08(&qword_100E63BC8);
  swift_storeEnumTagMultiPayload();
  uint64_t v25 = a6 + v21[9];
  *(void *)uint64_t v25 = swift_getKeyPath();
  *(unsigned char *)(v25 + 8) = 0;
  uint64_t v26 = a6 + v21[10];
  *(void *)uint64_t v26 = swift_getKeyPath();
  *(unsigned char *)(v26 + 8) = 0;
  Text.Measurements.init()();
  uint64_t v27 = type metadata accessor for DailyForecastComponentViewModel.DayForecastViewModel(0);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v20, 1, 1, v27);
  sub_10006DF38((uint64_t)v20, v17, &qword_100E6B8D0);
  State.init(wrappedValue:)();
  sub_100178110((uint64_t)v20, &qword_100E6B8D0);
  int v28 = (uint64_t *)(a6 + v21[13]);
  type metadata accessor for ObservableResolver();
  sub_100145810((unint64_t *)&qword_100E70FD0, (void (*)(uint64_t))&type metadata accessor for ObservableResolver);
  uint64_t result = EnvironmentObject.init()();
  *int v28 = result;
  v28[1] = v30;
  return result;
}

uint64_t sub_10004251C@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v30 = a3;
  uint64_t v31 = a4;
  uint64_t v34 = a5;
  int v29 = a2 & 1;
  uint64_t v32 = sub_10017DF08(&qword_100E83B70);
  __chkstk_darwin(v32);
  uint64_t v7 = &v28[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = type metadata accessor for RowModifier(0);
  __chkstk_darwin(v8);
  uint64_t v10 = (uint64_t *)&v28[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v33 = sub_10017DF08(&qword_100E836A8);
  uint64_t v11 = __chkstk_darwin(v33);
  uint64_t v13 = &v28[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v11);
  uint64_t v15 = &v28[-v14];
  uint64_t v16 = *(void *)a1;
  char v17 = *(unsigned char *)(a1 + 8);
  sub_100195B7C(*(void *)a1, v17);
  sub_100149AE8();
  char v19 = v18;
  sub_10018F6D8(v16, v17);
  if (v19)
  {
    uint64_t v20 = static HorizontalAlignment.leading.getter();
    sub_1000482F8(v29, v30, v31, a1, (uint64_t)v44);
    char v43 = 0;
    memcpy(&v45[7], v44, 0xE1uLL);
    *uint64_t v10 = swift_getKeyPath();
    sub_10017DF08(&qword_100E829F0);
    swift_storeEnumTagMultiPayload();
    uint64_t v21 = (char *)v10 + *(int *)(v8 + 20);
    *(void *)uint64_t v21 = swift_getKeyPath();
    v21[8] = 0;
    uint64_t v22 = (char *)v10 + *(int *)(v8 + 24);
    uint64_t v35 = 0;
    uint64_t v36 = 0;
    char v38 = 0;
    uint64_t v37 = 0;
    State.init(wrappedValue:)();
    uint64_t v23 = v40;
    char v24 = v41;
    uint64_t v25 = v42;
    *(_OWORD *)uint64_t v22 = v39;
    *((void *)v22 + 2) = v23;
    unsigned char v22[24] = v24;
    *((void *)v22 + 4) = v25;
    sub_1001EC0BC();
    *(void *)uint64_t v13 = v20;
    *((void *)v13 + 1) = 0;
    v13[16] = 0;
    memcpy(v13 + 17, v45, 0xE8uLL);
    sub_1001F75CC();
    sub_10024D364((uint64_t)v13, (uint64_t)v15, &qword_100E836A8);
    sub_1005EFB58((uint64_t)v15, (uint64_t)v7, &qword_100E836A8);
    swift_storeEnumTagMultiPayload();
    sub_10017DF08(&qword_100E836B8);
    sub_10022D34C();
    sub_10024D5E4((uint64_t)&unk_100E836B0);
    _ConditionalContent<>.init(storage:)();
    return sub_10017DF4C((uint64_t)v15, &qword_100E836A8);
  }
  else
  {
    uint64_t v27 = static HorizontalAlignment.leading.getter();
    sub_1000482F8(v29, v30, v31, a1, (uint64_t)v44);
    LOBYTE(v39) = 0;
    memcpy(&v45[7], v44, 0xE1uLL);
    *(void *)uint64_t v7 = v27;
    *((void *)v7 + 1) = 0;
    v7[16] = 0;
    memcpy(v7 + 17, v45, 0xE8uLL);
    swift_storeEnumTagMultiPayload();
    sub_10017DF08(&qword_100E836B8);
    sub_10022D34C();
    sub_10024D5E4((uint64_t)&unk_100E836B0);
    return _ConditionalContent<>.init(storage:)();
  }
}

void sub_100042938()
{
  sub_1001888BC();
  sub_10017DF08(&qword_100E640C8);
  sub_100162F30();
  if (*(_DWORD *)(v4 + 84) == v3)
  {
    uint64_t v5 = sub_1001A303C();
    _s7Weather24LocationCompositionStateOwst_0(v5, v6, v7, v8);
  }
  else
  {
    *(void *)(v2 + *(int *)(v1 + 40) + 8) = v0;
  }
}

uint64_t sub_1000429B0@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E890B0);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v5)
  {
    uint64_t HourPrecipitationChartViewModelFactory = type metadata accessor for NextHourPrecipitationChartViewModelFactory();
    swift_allocObject();
    uint64_t result = NextHourPrecipitationChartViewModelFactory.init(leadingPrecipitationValueRule:)();
    a2[3] = HourPrecipitationChartViewModelFactory;
    a2[4] = (uint64_t)&protocol witness table for NextHourPrecipitationChartViewModelFactory;
    *a2 = result;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100042A50@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  v16[1] = a1;
  uint64_t v17 = a2;
  uint64_t v3 = sub_10017DF08(&qword_100EB1C08);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10017DF08(&qword_100EB1C10);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v9 = *(_OWORD *)(v2 + 48);
  long long v18 = *(_OWORD *)(v2 + 32);
  long long v19 = v9;
  uint64_t v20 = *(void *)(v2 + 64);
  sub_10017DF08(&qword_100EB1C18);
  State.wrappedValue.getter();
  if (v24)
  {
    uint64_t v10 = v21;
    uint64_t v11 = v22;
    char v12 = v23 & 1;
  }
  else
  {
    uint64_t v10 = *(void *)v2;
    uint64_t v11 = *(void *)(v2 + 8);
    char v12 = *(unsigned char *)(v2 + 16) & 1;
    sub_100190CC4(*(void *)v2, v11, v12);
    swift_bridgeObjectRetain();
  }
  sub_10017DF08(&qword_100EB1C20);
  sub_1001246C8(&qword_100EB1C28, &qword_100EB1C20);
  View.accessibilityLabel(_:)();
  sub_100191924(v10, v11, v12);
  swift_bridgeObjectRelease();
  uint64_t v13 = swift_allocObject();
  memcpy((void *)(v13 + 16), (const void *)v2, 0x48uLL);
  sub_1001B4A34((uint64_t)v5, (uint64_t)v8, &qword_100EB1C08);
  uint64_t v14 = (uint64_t *(**)(uint64_t *))&v8[*(int *)(v6 + 36)];
  void *v14 = sub_100B3427C;
  v14[1] = (uint64_t *(*)(uint64_t *))v13;
  sub_10000CEA0(v2);
  sub_100178254((uint64_t)v5, &qword_100EB1C08);
  return sub_10006F038((uint64_t)v8, v17, &qword_100EB1C10);
}

uint64_t sub_100042C94@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for NSNotificationCenter.Publisher();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  long long v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10017DF08(&qword_100E65938);
  __chkstk_darwin(v10 - 8);
  char v12 = (uint64_t *)((char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  *char v12 = static Alignment.center.getter();
  v12[1] = v13;
  sub_10017DF08(&qword_100E65940);
  sub_100021710(v3, a1);
  id v14 = [self defaultCenter];
  NSNotificationCenter.publisher(for:object:)();

  long long v15 = *(_OWORD *)(v3 + 8);
  long long v21 = *(_OWORD *)(v3 + 24);
  long long v22 = v15;
  uint64_t v16 = swift_allocObject();
  long long v17 = *(_OWORD *)(v3 + 16);
  *(_OWORD *)(v16 + 16) = *(_OWORD *)v3;
  *(_OWORD *)(v16 + 32) = v17;
  *(void *)(v16 + 48) = *(void *)(v3 + 32);
  sub_1000F350C((uint64_t)v12, a2, &qword_100E65938);
  uint64_t v18 = sub_10017DF08(&qword_100E65948);
  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 16))(a2 + *(int *)(v18 + 52), v9, v6);
  long long v19 = (void (**)())(a2 + *(int *)(v18 + 56));
  char *v19 = sub_100292910;
  v19[1] = (void (*)())v16;
  sub_100042ED0((uint64_t)&v22);
  sub_100042ED0((uint64_t)&v21);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return sub_1000F3400((uint64_t)v12, &qword_100E65938);
}

uint64_t sub_100042ED0(uint64_t a1)
{
  return a1;
}

uint64_t sub_100042EFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_10003A388(a2);
  uint64_t v26 = v7;
  uint64_t v27 = v6;
  uint64_t v8 = (int *)type metadata accessor for LocationComponentContainerViewModel();
  uint64_t v9 = a3 + v8[5];
  uint64_t v10 = *(void (**)(uint64_t))(*(void *)(type metadata accessor for WeatherMapOverlayKind() - 8) + 16);
  uint64_t v11 = sub_100187EE4();
  v10(v11);
  char v12 = (int *)type metadata accessor for MapComponentViewModel();
  uint64_t v13 = v9 + v12[5];
  uint64_t v14 = type metadata accessor for Location();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v13, a1, v14);
  uint64_t v15 = v9 + v12[6];
  uint64_t v16 = type metadata accessor for MapComponent();
  sub_100224BC4(a2 + *(int *)(v16 + 20), v15);
  uint64_t v17 = type metadata accessor for WeatherData(0);
  _s7Weather24LocationCompositionStateOwst_0(v15, 0, 1, v17);
  uint64_t v18 = (uint64_t *)(v9 + v12[7]);
  *uint64_t v18 = v27;
  v18[1] = v26;
  *(void *)a3 = sub_10002EA04(a2);
  *(void *)(a3 + 8) = v19;
  *(void *)(a3 + 16) = v20;
  *(void *)(a3 + 24) = v21;
  *(unsigned char *)(a3 + 32) = 0;
  type metadata accessor for LocationComponentHeaderViewModel(0);
  *(void *)(a3 + 40) = 0;
  *(void *)(a3 + 48) = 0;
  swift_storeEnumTagMultiPayload();
  type metadata accessor for LocationComponentViewModel();
  swift_storeEnumTagMultiPayload();
  uint64_t v22 = a3 + v8[7];
  uint64_t v23 = sub_100187EE4();
  v10(v23);
  uint64_t v24 = type metadata accessor for LocationComponentAction(0);
  swift_storeEnumTagMultiPayload();
  uint64_t result = _s7Weather24LocationCompositionStateOwst_0(v22, 0, 1, v24);
  *(_WORD *)(a3 + v8[6]) = 259;
  return result;
}

double sub_1000430D0()
{
  uint64_t v0 = sub_10017DF08(&qword_100E63DB8);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)&v18 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_10004EC48();
  uint64_t v4 = v3;
  HIDWORD(v18) = v5 & 1;
  uint64_t v6 = sub_10004EF14(623915057, 0xE400000000000000);
  uint64_t v8 = v7;
  char v10 = v9 & 1;
  type metadata accessor for HourlyForecastComponentView();
  uint64_t v11 = type metadata accessor for Text.WritingMode();
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v2, 1, 1, v11);
  char v12 = BYTE4(v18);
  Text.Measurements.size(of:in:writingMode:)();
  double v14 = v13;
  sub_100178110((uint64_t)v2, &qword_100E63DB8);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v2, 1, 1, v11);
  Text.Measurements.size(of:in:writingMode:)();
  double v16 = v15;
  sub_100191924(v6, v8, v10);
  swift_bridgeObjectRelease();
  sub_100191924(v19, v4, v12);
  swift_bridgeObjectRelease();
  sub_100178110((uint64_t)v2, &qword_100E63DB8);
  return v14 + v16;
}

void *sub_1000432A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7, uint64_t a8, uint64_t a9)
{
  char v10 = v9;
  v10[2] = a1;
  v10[3] = a2;
  v10[4] = a3;
  v10[5] = a4;
  v10[6] = a5;
  v10[7] = a6;
  sub_10020D948((uint64_t)a7, (uint64_t)(v10 + 8));
  sub_10020D948(a8, (uint64_t)(v10 + 13));
  sub_10020D948(a9, (uint64_t)(v10 + 18));
  sub_1001B1E64(a7, a7[3]);
  sub_10021E9BC();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  dispatch thunk of SavedLocationsManagerType.addObserver(_:)();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a9);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a8);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)a7);
  return v10;
}

uint64_t destroy for ConditionDetailView(uint64_t a1)
{
  swift_release();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1 + 16);

  return swift_release();
}

uint64_t sub_100043404(void *a1)
{
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E64798);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  uint64_t v3 = v15;
  if (v15)
  {
    uint64_t v5 = v17;
    uint64_t v4 = v18;
    uint64_t v6 = v16;
    sub_1001B1E64(a1, a1[3]);
    sub_10017DF08(&qword_100E98030);
    uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
    if (v14)
    {
      uint64_t v7 = *sub_1001B1E64(v13, v14);
      void v12[3] = type metadata accessor for MainViewModelFactory();
      v12[4] = &off_100E27740;
      v12[0] = v7;
      sub_10020D948((uint64_t)v12, (uint64_t)v11);
      uint64_t v8 = swift_allocObject();
      sub_1001262E4(v11, v8 + 16);
      swift_retain();
      _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v12);
      _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v13);
      uint64_t v9 = swift_allocObject();
      *(void *)(v9 + 16) = sub_10013DF9C;
      *(void *)(v9 + 24) = v8;
      uint64_t v10 = swift_allocObject();
      *(void *)(v10 + 16) = sub_100137FCC;
      *(void *)(v10 + 24) = v9;
      sub_10017DF08(&qword_100E64B58);
      swift_allocObject();
      return sub_1000665EC(v3, v6, v5, v4, sub_1001AF4C0, 0, sub_10000AD88, 0, sub_100137F50, v10);
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_100043608()
{
  *(void *)(v0 + 16) = 0;
  *(void *)(v0 + 24) = 0;
  uint64_t v2 = type metadata accessor for Location();
  sub_10019B5F4(v2);
  sub_1001A33BC(OBJC_IVAR____TtCOO7Weather10DemoPreset5Demos8Fall2024____lazy_storage___egilsstadirLocation);
  sub_1001A33BC(OBJC_IVAR____TtCOO7Weather10DemoPreset5Demos8Fall2024____lazy_storage___akureyriLocation);
  uint64_t v3 = sub_10017DF08(&qword_100E66430);
  sub_1001633C8(v3);
  uint64_t v4 = sub_10017DF08(&qword_100E66420);
  sub_1001633C8(v4);
  uint64_t v5 = v0 + OBJC_IVAR____TtCOO7Weather10DemoPreset5Demos8Fall2024____lazy_storage___weatherDataState;
  *(_OWORD *)uint64_t v5 = xmmword_100C3E060;
  *(void *)(v5 + 16) = 0;
  *(void *)(v5 + 24) = 0;
  *(void *)(v0 + OBJC_IVAR____TtCOO7Weather10DemoPreset5Demos8Fall2024____lazy_storage___preset) = v1;
  return v0;
}

uint64_t sub_1000436C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v51 = a1;
  uint64_t v52 = a2;
  uint64_t v4 = sub_10017DF08(&qword_100E82928);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = sub_10017DF08(&qword_100E82930);
  __chkstk_darwin(v50);
  uint64_t v9 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10017DF08(&qword_100E82938);
  __chkstk_darwin(v10 - 8);
  uint64_t v46 = (uint64_t)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = sub_10017DF08(&qword_100E82940);
  __chkstk_darwin(v45);
  uint64_t v47 = (uint64_t)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = sub_10017DF08(&qword_100E82948);
  __chkstk_darwin(v44);
  uint64_t v48 = (uint64_t)&v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = sub_10017DF08(&qword_100E82950);
  __chkstk_darwin(v53);
  int v49 = (char *)&v41 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10024D364(v2 + 97, (uint64_t)&v56, &qword_100E82958);
  sub_10024D364((uint64_t)&v56, (uint64_t)v57, &qword_100E82958);
  char v15 = v57[0];
  if (v57[0] == 6) {
    goto LABEL_9;
  }
  uint64_t v16 = *(void *)(v2 + 32);
  char v17 = *(unsigned char *)(v3 + 40);
  sub_100195B7C(*(void *)(v3 + 32), v17);
  sub_100149AE8();
  char v19 = v18;
  sub_10018F6D8(v16, v17);
  if (v19) {
    goto LABEL_9;
  }
  long long v55 = *(_OWORD *)v3;
  if ((void)v55)
  {
    type metadata accessor for TipCoordinator();
    swift_retain();
    ObservableResolver.resolve<A>(_:)();
    sub_1002171E0((uint64_t)&v55);
    if (!v54)
    {
      __break(1u);
LABEL_11:
      __break(1u);
      goto LABEL_12;
    }
    char v20 = sub_1001357F8();
    swift_release();
    if (v20)
    {
      swift_retain();
      ObservableResolver.resolve<A>(_:)();
      sub_1002171E0((uint64_t)&v55);
      if (v54)
      {
        char v21 = sub_10088CD6C(v15);
        swift_release();
        if (v21)
        {
          uint64_t v22 = *(void *)(v3 + 48);
          uint64_t v23 = *(void *)(v3 + 56);
          char v24 = *(unsigned char *)(v3 + 64);
          sub_100193DD4(v22, v23, v24);
          uint64_t v25 = sub_1005D236C(v22, v23, v24);
          uint64_t v42 = v26;
          uint64_t v43 = v25;
          sub_10014D82C(v22, v23, v24);
          uint64_t v27 = (uint64_t)v49;
          uint64_t v28 = (uint64_t)&v49[*(int *)(v53 + 36)];
          uint64_t v29 = v46;
          sub_1005CF3E4(v3, v46);
          uint64_t v30 = v47;
          sub_1005EFB58(v29, v47, &qword_100E82938);
          *(void *)(v30 + *(int *)(v45 + 36)) = 0x3FF0000000000000;
          sub_10017DF4C(v29, &qword_100E82938);
          uint64_t v31 = static VerticalAlignment.bottom.getter();
          uint64_t v32 = v48;
          sub_1005EFB58(v30, v48, &qword_100E82940);
          uint64_t v33 = (uint64_t *)(v32 + *(int *)(v44 + 36));
          uint64_t *v33 = v31;
          v33[1] = (uint64_t)sub_1005CFB10;
          void v33[2] = 0;
          sub_10017DF4C(v30, &qword_100E82940);
          uint64_t v34 = v51;
          double v35 = sub_1005CFB38();
          sub_1005EFB58(v32, v28, &qword_100E82948);
          uint64_t v36 = (double *)(v28 + *(int *)(sub_10017DF08(&qword_100E82980) + 36));
          *uint64_t v36 = 0.0;
          v36[1] = v35;
          sub_10017DF4C(v32, &qword_100E82948);
          uint64_t v37 = (uint64_t *)(v28 + *(int *)(sub_10017DF08(&qword_100E82978) + 36));
          uint64_t v38 = v42;
          *uint64_t v37 = v43;
          v37[1] = v38;
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v27, v34, v4);
          sub_1005EFB58(v27, (uint64_t)v9, &qword_100E82950);
          swift_storeEnumTagMultiPayload();
          sub_100006CCC();
          sub_10024D5E4((uint64_t)&unk_100E82968);
          _ConditionalContent<>.init(storage:)();
          return sub_10017DF4C(v27, &qword_100E82950);
        }
        goto LABEL_9;
      }
      goto LABEL_11;
    }
LABEL_9:
    uint64_t v40 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    v40(v7, v51, v4);
    v40(v9, (uint64_t)v7, v4);
    swift_storeEnumTagMultiPayload();
    sub_100006CCC();
    sub_10024D5E4((uint64_t)&unk_100E82968);
    _ConditionalContent<>.init(storage:)();
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
LABEL_12:
  type metadata accessor for ObservableResolver();
  sub_10013509C((uint64_t)&qword_100E70FD0);
  uint64_t result = EnvironmentObject.error()();
  __break(1u);
  return result;
}

void *sub_100043D38(uint64_t *a1, void *a2)
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  sub_1001B1E64(a2, a2[3]);
  type metadata accessor for ReverseGeocodingStoreObserver();
  uint64_t result = (void *)dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!result)
  {
    __break(1u);
    goto LABEL_8;
  }
  uint64_t v6 = result[17];
  result[17] = v4;
  result[18] = v3;
  swift_retain();
  sub_1001361AC(v6);
  sub_1001B1E64(a2, a2[3]);
  type metadata accessor for NotificationsOptInStoreObserver();
  uint64_t result = (void *)dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!result)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v7 = result[2];
  result[2] = v4;
  result[3] = v3;
  swift_retain();
  sub_1001361AC(v7);
  sub_1001B1E64(a2, a2[3]);
  type metadata accessor for SavedLocationsStoreObserver();
  uint64_t result = (void *)dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!result)
  {
LABEL_9:
    __break(1u);
    return result;
  }
  uint64_t v8 = result;
  swift_release();
  swift_release();
  uint64_t v9 = v8[2];
  void v8[2] = v4;
  void v8[3] = v3;
  swift_retain();
  sub_1001361AC(v9);

  return (void *)swift_release();
}

uint64_t sub_100043E94(void *a1)
{
  sub_10017DF08(&qword_100E98048);
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = _swiftEmptyArrayStorage;
  sub_1001B1E64(a1, a1[3]);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v6)
  {
    __break(1u);
  }
  else
  {
    uint64_t v4 = swift_allocObject();
    *(void *)(v4 + 16) = v5;
    sub_100129D0C((uint64_t)sub_1007FCF20, v4);
    swift_release();
    sub_100129D0C((uint64_t)sub_1007FCF28, 0);
    sub_100129D0C((uint64_t)sub_1007FCF50, 0);
    sub_100129D0C((uint64_t)sub_1007FCF78, 0);
    sub_100129D0C((uint64_t)sub_1007FCFA0, 0);
    sub_100129D0C((uint64_t)sub_1007FCFC8, 0);
    sub_100129D0C((uint64_t)sub_1007FCFF0, 0);
    sub_100129D0C((uint64_t)sub_1007FD018, 0);
    sub_100129D0C((uint64_t)sub_1007FD040, 0);
    return v2;
  }
  return result;
}

void *sub_100044054(uint64_t a1, uint64_t a2, long long *a3, uint64_t a4, uint64_t a5, long long *a6, uint64_t a7, uint64_t a8, void *a9)
{
  uint64_t v26 = type metadata accessor for MainInteractor();
  uint64_t v27 = &off_100E1EA00;
  *(void *)&long long v25 = a1;
  uint64_t v23 = type metadata accessor for EmptySidebarWidthStorage();
  char v24 = &off_100E39B40;
  *(void *)&long long v22 = a8;
  if (qword_100E627B0 != -1) {
    swift_once();
  }
  uint64_t v17 = type metadata accessor for Logger();
  sub_1002102B0(v17, (uint64_t)qword_100F51E28);
  char v18 = Logger.logObject.getter();
  os_log_type_t v19 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v18, v19))
  {
    char v20 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)char v20 = 0;
    _os_log_impl((void *)&_mh_execute_header, v18, v19, "Initializing Main module", v20, 2u);
    swift_slowDealloc();
  }

  sub_1001262E4(&v25, (uint64_t)(a9 + 2));
  a9[7] = a2;
  sub_1001262E4(a3, (uint64_t)(a9 + 8));
  a9[13] = a4;
  a9[14] = a5;
  sub_1001262E4(a6, (uint64_t)(a9 + 15));
  a9[20] = a7;
  sub_1001262E4(&v22, (uint64_t)(a9 + 21));
  return a9;
}

uint64_t sub_1000441E0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  type metadata accessor for CurrentLocation();
  sub_100162E4C();
  __chkstk_darwin(v4);
  sub_1001626E0();
  uint64_t v7 = v6 - v5;
  uint64_t v8 = sub_10017DF08(&qword_100E7F010);
  sub_100162E4C();
  __chkstk_darwin(v9);
  sub_1001626E0();
  uint64_t v12 = v11 - v10;
  uint64_t v13 = sub_10017DF08((uint64_t *)&unk_100EADD50);
  __chkstk_darwin(v13 - 8);
  char v15 = (char *)&v55 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  char v18 = (char *)&v55 - v17;
  __chkstk_darwin(v19);
  char v21 = (char *)&v55 - v20;
  if (*a1 != *a2) {
    goto LABEL_47;
  }
  if (a1[1] != a2[1]) {
    goto LABEL_47;
  }
  sub_1001191CC(*((void *)a1 + 1), *((void *)a2 + 1));
  if ((v22 & 1) == 0) {
    goto LABEL_47;
  }
  uint64_t v23 = (int *)type metadata accessor for LocationInput();
  if ((static Date.== infix(_:_:)() & 1) == 0) {
    goto LABEL_47;
  }
  sub_10011C778();
  if (!v28) {
    goto LABEL_47;
  }
  if ((sub_100222164(a1[v23[9]], a2[v23[9]]) & 1) == 0) {
    goto LABEL_47;
  }
  sub_10011C778();
  if (!v28) {
    goto LABEL_47;
  }
  uint64_t v24 = v23[11];
  char v25 = a1[v24];
  LODWORD(v57) = a2[v24];
  unint64_t v56 = LocationAuthorizationState.rawValue.getter(v25);
  uint64_t v58 = v26;
  BOOL v28 = v56 == LocationAuthorizationState.rawValue.getter(v57) && v58 == v27;
  if (v28)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    uint64_t v55 = v27;
    LODWORD(v57) = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char v29 = 0;
    if ((v57 & 1) == 0) {
      return v29 & 1;
    }
  }
  if ((sub_1001197F8(a1[v23[12]], a2[v23[12]]) & 1) == 0) {
    goto LABEL_47;
  }
  sub_10011C778();
  if (!v28) {
    goto LABEL_47;
  }
  if ((static Date.== infix(_:_:)() & 1) == 0) {
    goto LABEL_47;
  }
  sub_10011C778();
  if (!v28) {
    goto LABEL_47;
  }
  uint64_t v30 = v23[16];
  uint64_t v31 = *(void *)&a1[v30];
  uint64_t v32 = *(void *)&a1[v30 + 8];
  unint64_t v33 = *(void *)&a1[v30 + 16];
  uint64_t v34 = *(void *)&a1[v30 + 24];
  double v35 = &a2[v30];
  uint64_t v36 = *(void *)v35;
  uint64_t v37 = *((void *)v35 + 1);
  uint64_t v38 = *((void *)v35 + 2);
  uint64_t v57 = *((void *)v35 + 3);
  uint64_t v58 = v34;
  BOOL v39 = v31 == v36 && v32 == v37;
  if (v39 || (v55 = v38, v56 = v33, v40 = _stringCompareWithSmolCheck(_:_:expecting:)(), char v29 = 0, (v40 & 1) != 0))
  {
    sub_10011AD08();
    if ((v41 & 1) == 0) {
      goto LABEL_47;
    }
    sub_10011A5D0();
    if ((v42 & 1) == 0) {
      goto LABEL_47;
    }
    sub_10013B3F0((uint64_t)&a1[v23[17]], (uint64_t)v21);
    sub_10013B3F0((uint64_t)&a2[v23[17]], (uint64_t)v18);
    uint64_t v43 = v12 + *(int *)(v8 + 48);
    sub_10013B3F0((uint64_t)v21, v12);
    sub_10013B3F0((uint64_t)v18, v43);
    sub_100163F10(v12);
    if (v28)
    {
      sub_1001781AC((uint64_t)v18, (uint64_t *)&unk_100EADD50);
      sub_1001781AC((uint64_t)v21, (uint64_t *)&unk_100EADD50);
      sub_100163F10(v43);
      if (v28)
      {
        sub_1001781AC(v12, (uint64_t *)&unk_100EADD50);
        goto LABEL_40;
      }
    }
    else
    {
      sub_10013B3F0(v12, (uint64_t)v15);
      sub_100163F10(v43);
      if (!v44)
      {
        sub_10013CA40(v43, v7);
        char v45 = static CurrentLocation.== infix(_:_:)();
        sub_1001D12EC(v7, (void (*)(void))&type metadata accessor for CurrentLocation);
        sub_1001781AC((uint64_t)v18, (uint64_t *)&unk_100EADD50);
        sub_1001781AC((uint64_t)v21, (uint64_t *)&unk_100EADD50);
        sub_1001D12EC((uint64_t)v15, (void (*)(void))&type metadata accessor for CurrentLocation);
        sub_1001781AC(v12, (uint64_t *)&unk_100EADD50);
        if (v45)
        {
LABEL_40:
          if (*(void *)&a1[v23[18]] == *(void *)&a2[v23[18]])
          {
            uint64_t v46 = v23[19];
            long long v47 = *(_OWORD *)&a1[v46 + 16];
            v59[0] = *(_OWORD *)&a1[v46];
            v59[1] = v47;
            long long v48 = *(_OWORD *)&a1[v46 + 32];
            int v49 = &a2[v46];
            long long v50 = *(_OWORD *)v49;
            long long v51 = *((_OWORD *)v49 + 1);
            v59[2] = v48;
            v60[0] = v50;
            long long v52 = *((_OWORD *)v49 + 2);
            v60[1] = v51;
            v60[2] = v52;
            if ((sub_10011C8A8((uint64_t)v59, (id *)v60) & 1) != 0
              && (sub_1001508B0(*(void **)&a1[v23[20]], *(void **)&a2[v23[20]]) & 1) != 0
              && (static Date.== infix(_:_:)() & 1) != 0
              && a1[v23[22]] == a2[v23[22]])
            {
              sub_10011B100();
              if (v53)
              {
                sub_10011C778();
                if (v28)
                {
                  sub_1001272E0();
                  return v29 & 1;
                }
              }
            }
          }
        }
LABEL_47:
        char v29 = 0;
        return v29 & 1;
      }
      sub_1001781AC((uint64_t)v18, (uint64_t *)&unk_100EADD50);
      sub_1001781AC((uint64_t)v21, (uint64_t *)&unk_100EADD50);
      sub_1001D12EC((uint64_t)v15, (void (*)(void))&type metadata accessor for CurrentLocation);
    }
    sub_1001781AC(v12, &qword_100E7F010);
    goto LABEL_47;
  }
  return v29 & 1;
}

void *sub_100044708(uint64_t a1, const void *a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v8 = *a4;
  uint64_t v38 = type metadata accessor for LocationViewDescriptor();
  BOOL v39 = &off_100E37020;
  v37[0] = a1;
  double v35 = &type metadata for MapOverlayKindProvider;
  uint64_t v36 = &off_100E1D390;
  v34[0] = swift_allocObject();
  memcpy((void *)(v34[0] + 16), a2, 0x50uLL);
  uint64_t v32 = type metadata accessor for NotificationsOptInViewModelFactory();
  unint64_t v33 = &off_100E2BA78;
  v31[0] = a3;
  uint64_t v29 = v8;
  uint64_t v30 = &off_100E2BC00;
  v28[0] = a4;
  type metadata accessor for LocationViewStateReducer();
  uint64_t v9 = (void *)swift_allocObject();
  uint64_t v10 = sub_1000DF0C4((uint64_t)v37, v38);
  __chkstk_darwin(v10);
  uint64_t v12 = (void *)((char *)v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v13 + 16))(v12);
  uint64_t v14 = sub_1000DF0C4((uint64_t)v34, (uint64_t)v35);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)v28 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v17 + 16))(v16);
  uint64_t v18 = sub_1000DF0C4((uint64_t)v31, v32);
  __chkstk_darwin(v18);
  uint64_t v20 = (void *)((char *)v28 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v21 + 16))(v20);
  uint64_t v22 = sub_1000DF0C4((uint64_t)v28, v29);
  __chkstk_darwin(v22);
  uint64_t v24 = (void *)((char *)v28 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v25 + 16))(v24);
  uint64_t v26 = sub_100010A44(*v12, v16, *v20, *v24, v9);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v28);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v31);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v34);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v37);
  return v26;
}

uint64_t sub_100044AAC@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E8DE68);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v24)
  {
    __break(1u);
    goto LABEL_6;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E7C0D8);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v22)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E7C0E0);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v20)
  {
    uint64_t v5 = sub_1000DF0C4((uint64_t)v23, v24);
    __chkstk_darwin(v5);
    uint64_t v7 = (uint64_t *)&v19[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
    (*(void (**)(uint64_t *))(v8 + 16))(v7);
    uint64_t v9 = sub_1000DF0C4((uint64_t)v21, v22);
    __chkstk_darwin(v9);
    uint64_t v11 = (uint64_t *)&v19[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
    (*(void (**)(uint64_t *))(v12 + 16))(v11);
    uint64_t v13 = sub_1000DF0C4((uint64_t)v19, v20);
    __chkstk_darwin(v13);
    uint64_t v15 = &v19[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
    (*(void (**)(unsigned char *))(v16 + 16))(v15);
    uint64_t v17 = sub_10003D790(*v7, *v11, v15);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v19);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v21);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v23);
    uint64_t result = type metadata accessor for LocationViewerViewStateReducer();
    a2[3] = result;
    a2[4] = &off_100E26248;
    *a2 = v17;
    return result;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_100044DD0(void *a1)
{
  sub_1001B1E64(a1, a1[3]);
  type metadata accessor for SessionManager();
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!result)
  {
    __break(1u);
    goto LABEL_6;
  }
  uint64_t v3 = result;
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E71B38);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v21)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E80768);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v19)
  {
    uint64_t v4 = sub_1000DF0C4((uint64_t)v18, v19);
    __chkstk_darwin(v4);
    uint64_t v6 = (void *)((char *)&v17[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v7 + 16))(v6);
    uint64_t v8 = *v6;
    uint64_t active = type metadata accessor for ActiveUserAnalyticsManager();
    uint64_t v17[3] = active;
    v17[4] = &off_100E29820;
    v17[0] = v8;
    type metadata accessor for SessionScenePhaseObserver();
    uint64_t v10 = (void *)swift_allocObject();
    uint64_t v11 = sub_1000DF0C4((uint64_t)v17, active);
    __chkstk_darwin(v11);
    uint64_t v13 = (void *)((char *)&v17[-1] - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v14 + 16))(v13);
    uint64_t v15 = *v13;
    v10[11] = active;
    v10[12] = &off_100E29820;
    v10[8] = v15;
    v10[2] = v3;
    sub_1001262E4(&v20, (uint64_t)(v10 + 3));
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v17);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v18);
    return (uint64_t)v10;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_100045064@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  type metadata accessor for LocationViewCollisionOptions();
  sub_10015180C((uint64_t)&qword_100E6D0B8);
  uint64_t v4 = StateObject.wrappedValue.getter();
  uint64_t v5 = static ObservableObject.environmentStore.getter();
  uint64_t v6 = sub_10017DF08(&qword_100E8EB98);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  uint64_t result = sub_10017DF08(&qword_100E8EBA0);
  uint64_t v8 = (uint64_t *)(a2 + *(int *)(result + 36));
  *uint64_t v8 = v5;
  v8[1] = v4;
  return result;
}

uint64_t sub_100045178(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for LocationModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[6];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = a2 + v7;
  uint64_t v10 = *(void *)(a2 + v7 + 8);
  *uint64_t v8 = *(void *)(a2 + v7);
  v8[1] = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = type metadata accessor for ConditionPickerMenuViewModel(0);
  uint64_t v12 = *(int *)(v11 + 20);
  uint64_t v13 = (char *)v8 + v12;
  uint64_t v14 = (const void *)(v9 + v12);
  uint64_t v15 = type metadata accessor for WeatherCondition();
  int v16 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v13, 1, v15);
  int v17 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v14, 1, v15);
  if (!v16)
  {
    uint64_t v18 = *(void *)(v15 - 8);
    if (!v17)
    {
      (*(void (**)(char *, const void *, uint64_t))(v18 + 40))(v13, v14, v15);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v18 + 8))(v13, v15);
    goto LABEL_6;
  }
  if (v17)
  {
LABEL_6:
    uint64_t v19 = sub_10017DF08(&qword_100E63A50);
    memcpy(v13, v14, *(void *)(*(void *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, const void *, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v13, 0, 1, v15);
LABEL_7:
  *(void *)((char *)v8 + *(int *)(v11 + 24)) = *(void *)(v9 + *(int *)(v11 + 24));
  swift_bridgeObjectRelease();
  uint64_t v20 = a3[8];
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  *(unsigned char *)(a1 + v20) = *(unsigned char *)(a2 + v20);
  uint64_t v21 = a3[10];
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  *(unsigned char *)(a1 + v21) = *(unsigned char *)(a2 + v21);
  uint64_t v22 = a3[12];
  *(unsigned char *)(a1 + a3[11]) = *(unsigned char *)(a2 + a3[11]);
  *(void *)(a1 + v22) = *(void *)(a2 + v22);
  swift_bridgeObjectRelease();
  uint64_t v23 = a3[14];
  *(unsigned char *)(a1 + a3[13]) = *(unsigned char *)(a2 + a3[13]);
  uint64_t v24 = (void *)(a1 + v23);
  uint64_t v25 = (void *)(a2 + v23);
  uint64_t v26 = v25[1];
  *uint64_t v24 = *v25;
  v24[1] = v26;
  swift_bridgeObjectRelease();
  uint64_t v27 = v25[3];
  v24[2] = v25[2];
  v24[3] = v27;
  swift_bridgeObjectRelease();
  uint64_t v28 = v25[5];
  v24[4] = v25[4];
  v24[5] = v28;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1000453FC()
{
  ProxyContainer.public.getter();
  type metadata accessor for PerformanceTestManager();
  sub_100187ED0();
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  swift_release();
  ProxyContainer.public.getter();
  sub_10017DF08(&qword_100E88508);
  sub_100187ED0();
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  swift_release();
  ProxyContainer.private.getter();
  RegistrationContainer.lazy(block:)();

  return swift_release();
}

uint64_t sub_1000454D4@<X0>(const void *a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  char v7 = a2 & 1;
  id v8 = [self mainBundle];
  v19._uint64_t countAndFlagsBits = 0xD00000000000003ALL;
  v19._object = (void *)0x8000000100CA3F10;
  v9._uint64_t countAndFlagsBits = 0x7365676172657641;
  v9._object = (void *)0xE800000000000000;
  v10._uint64_t countAndFlagsBits = 0;
  v10._object = (void *)0xE000000000000000;
  Swift::String v11 = NSLocalizedString(_:tableName:bundle:value:comment:)(v9, (Swift::String_optional)0, (NSBundle)v8, v10, v19);

  *(Swift::String *)a4 = v11;
  *(void *)(a4 + 16) = 0xD000000000000019;
  *(void *)(a4 + 24) = 0x8000000100CA3F50;
  *(unsigned char *)(a4 + 32) = 0;
  type metadata accessor for LocationComponentHeaderViewModel(0);
  *(void *)(a4 + 40) = 0;
  *(void *)(a4 + 48) = 0;
  swift_storeEnumTagMultiPayload();
  uint64_t v12 = (int *)type metadata accessor for LocationComponentContainerViewModel();
  memcpy((void *)(a4 + v12[5]), a1, 0xD0uLL);
  type metadata accessor for LocationComponentViewModel();
  swift_storeEnumTagMultiPayload();
  uint64_t v13 = (unsigned char *)(a4 + v12[7]);
  uint64_t v14 = &v13[*(int *)(sub_10017DF08(&qword_100E66480) + 48)];
  unsigned char *v13 = v7;
  uint64_t v15 = type metadata accessor for Location();
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16))(v14, a3, v15);
  uint64_t v16 = type metadata accessor for LocationComponentAction(0);
  swift_storeEnumTagMultiPayload();
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v13, 0, 1, v16);
  *(_WORD *)(a4 + v12[6]) = 256;

  return sub_100040658((uint64_t)a1);
}

void sub_1000456BC()
{
  uint64_t v1 = OBJC_IVAR____TtC7Weather15SettingsMonitor_observer;
  if (!*(void *)(v0 + OBJC_IVAR____TtC7Weather15SettingsMonitor_observer))
  {
    uint64_t v2 = v0;
    sub_1001ABC4C(0, &qword_100EA2428);
    uint64_t v3 = (void *)static NSUserDefaults.weatherShared.getter();
    swift_retain();
    uint64_t v4 = NSUserDefaults.registerUnitsConfigurationChanges(_:)();

    swift_release();
    uint64_t v5 = *(void **)(v2 + v1);
    *(void *)(v2 + v1) = v4;
  }
}

uint64_t sub_100045774()
{
  uint64_t v0 = type metadata accessor for CallbackScope();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v6[-1] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  ProxyContainer.callback.getter();
  sub_1001B1E64(v6, v6[3]);
  sub_10017DF08(&qword_100E803F0);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for CallbackScope.any(_:), v0);
  dispatch thunk of CallbackRegistrationType.whenResolving<A>(_:scope:callback:)();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v6);
  ProxyContainer.public.getter();
  sub_10017DF08(&qword_100E803F8);
  swift_retain();
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  swift_release();
  swift_release();
  ProxyContainer.public.getter();
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  return swift_release();
}

uint64_t sub_100045990@<X0>(uint64_t a1@<X0>, int a2@<W1>, int a3@<W2>, int a4@<W3>, uint64_t a5@<X4>, int a6@<W5>, int a7@<W6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11)
{
  uint64_t v53 = a8;
  int v51 = a4;
  int v52 = a7;
  int v47 = a6;
  uint64_t v48 = a5;
  uint64_t v49 = a9;
  int v50 = a3;
  int v45 = a2;
  uint64_t v41 = a1;
  uint64_t v42 = a10;
  uint64_t v11 = sub_10017DF08(&qword_100E63508);
  __chkstk_darwin(v11 - 8);
  uint64_t v46 = &v39[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v13 = type metadata accessor for LearnMoreAttributorViewModel();
  __chkstk_darwin(v13 - 8);
  char v44 = &v39[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v15 = sub_10017DF08(&qword_100E749B0);
  __chkstk_darwin(v15 - 8);
  uint64_t v43 = &v39[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v17 = type metadata accessor for Location();
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v20 = &v39[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v21 = sub_10017DF08(&qword_100E6DC10);
  __chkstk_darwin(v21 - 8);
  uint64_t v23 = &v39[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v24 = self;
  id v25 = [v24 currentDevice];
  id v26 = [v25 userInterfaceIdiom];

  id v27 = [v24 currentDevice];
  id v28 = [v27 userInterfaceIdiom];

  int v40 = sub_10001FFD8(v28 != 0);
  uint64_t v29 = v41;
  sub_100023394(a11, v28 != 0, v41, v23);
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v18 + 16))(v20, v29, v17);
  uint64_t v30 = v42;
  if (!v42)
  {
    uint64_t v53 = sub_10002DB2C();
    uint64_t v30 = v31;
  }
  uint64_t v32 = *(void (**)(unsigned char *, uint64_t))(v18 + 8);
  swift_bridgeObjectRetain();
  v32(v20, v17);
  if (v26)
  {
    uint64_t v33 = type metadata accessor for URL();
    uint64_t v34 = v43;
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v43, 1, 1, v33);
  }
  else
  {
    uint64_t v34 = v43;
    sub_100032E54((uint64_t)v43);
  }
  char v35 = v45 & v47 & (v26 == 0);
  uint64_t v36 = v44;
  sub_1001D9BA8(v48, (uint64_t)v44, (void (*)(void))type metadata accessor for LearnMoreAttributorViewModel);
  uint64_t v37 = v46;
  sub_10006DF38(a11, (uint64_t)v46, &qword_100E63508);
  return sub_100017260(v35, v50 & 1, v51 & 1, v53, v30, (uint64_t)v34, (uint64_t)v36, v52, v49, (uint64_t)v37, v28 != 0, v40, (uint64_t)v23);
}

uint64_t assignWithCopy for LocationViewerView(uint64_t a1, void *a2)
{
  uint64_t v2 = a2;
  *(void *)a1 = *a2;
  swift_retain();
  swift_release();
  *(void *)(a1 + 8) = v2[1];
  swift_retain();
  swift_release();
  sub_1000C1E18((uint64_t *)(a1 + 16), v2 + 2);
  *(void *)(a1 + 56) = v2[7];
  uint64_t v4 = v2[9];
  *(void *)(a1 + 64) = v2[8];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(a1 + 72) = v4;
  sub_1000C1E18((uint64_t *)(a1 + 80), v2 + 10);
  sub_1000C1E18((uint64_t *)(a1 + 120), v2 + 15);
  *(void *)(a1 + 160) = v2[20];
  swift_retain();
  swift_release();
  uint64_t v5 = v2[21];
  LOBYTE(v2) = *((unsigned char *)v2 + 176);
  sub_100195B7C(v5, (char)v2);
  uint64_t v6 = *(void *)(a1 + 168);
  char v7 = *(unsigned char *)(a1 + 176);
  *(void *)(a1 + 168) = v5;
  *(unsigned char *)(a1 + 176) = (_BYTE)v2;
  sub_10018F6D8(v6, v7);
  return a1;
}

uint64_t sub_100045E4C@<X0>(uint64_t a1@<X8>)
{
  CurrentWeather.humidity.getter();
  uint64_t v3 = v2;
  CurrentWeather.humidity.getter();
  uint64_t v4 = StringBuilder.makeString(for:data:formattedForAccessibility:)();
  uint64_t v6 = v5;
  id v7 = [self mainBundle];
  v19._object = (void *)0x8000000100C993E0;
  v8._uint64_t countAndFlagsBits = 0x79746964696D7548;
  v8._object = (void *)0xE800000000000000;
  v9._uint64_t countAndFlagsBits = 0;
  v9._object = (void *)0xE000000000000000;
  v19._uint64_t countAndFlagsBits = 0xD00000000000003ALL;
  Swift::String v10 = NSLocalizedString(_:tableName:bundle:value:comment:)(v8, (Swift::String_optional)0, (NSBundle)v7, v9, v19);

  *(Swift::String *)a1 = v10;
  strcpy((char *)(a1 + 16), "humidity.fill");
  *(_WORD *)(a1 + 30) = -4864;
  *(unsigned char *)(a1 + 32) = 0;
  type metadata accessor for LocationComponentHeaderViewModel(0);
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = 0;
  swift_storeEnumTagMultiPayload();
  uint64_t v11 = (int *)type metadata accessor for LocationComponentContainerViewModel();
  uint64_t v12 = (void *)(a1 + v11[5]);
  *uint64_t v12 = v3;
  v12[1] = v4;
  _OWORD v12[2] = v6;
  type metadata accessor for LocationComponentViewModel();
  swift_storeEnumTagMultiPayload();
  uint64_t v13 = a1 + v11[7];
  uint64_t v14 = *(int *)(sub_10017DF08(&qword_100E66488) + 48);
  uint64_t v15 = enum case for DetailCondition.humidity(_:);
  uint64_t v16 = type metadata accessor for DetailCondition();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 104))(v13, v15, v16);
  *(unsigned char *)(v13 + v14) = 0;
  uint64_t v17 = type metadata accessor for LocationComponentAction(0);
  swift_storeEnumTagMultiPayload();
  uint64_t result = _s7Weather24LocationCompositionStateOwst_0(v13, 0, 1, v17);
  *(_WORD *)(a1 + v11[6]) = 256;
  return result;
}

uint64_t sub_100046064()
{
  uint64_t v0 = type metadata accessor for Scope();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  ProxyContainer.private.getter();
  type metadata accessor for ToolbarTemplate();
  sub_100179D0C();
  swift_release();
  swift_release();
  ProxyContainer.public.getter();
  sub_10017DF08(&qword_100EAF318);
  sub_100179D0C();
  swift_release();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for Scope.singleton(_:), v0);
  Definition.inScope(_:)();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_1000461DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for WeatherMapOverlayKind();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = type metadata accessor for Location();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + *(int *)(a2 + 24);
  Swift::String v8 = (int *)type metadata accessor for WeatherData(0);
  if (!_s7Weather24LocationCompositionStateOwet_0(v7, 1, (uint64_t)v8))
  {
    swift_bridgeObjectRelease();
    uint64_t v9 = v7 + v8[5];
    uint64_t v10 = type metadata accessor for Locale();
    if (!_s7Weather24LocationCompositionStateOwet_0(v9, 1, v10)) {
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
    }
    uint64_t v11 = v7 + v8[6];
    uint64_t v12 = type metadata accessor for WeatherDataModel();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
    uint64_t v13 = v7 + v8[7];
    uint64_t v14 = sub_10017DF08(&qword_100E63738);
    if (!_s7Weather24LocationCompositionStateOwet_0(v13, 1, v14))
    {
      uint64_t v15 = type metadata accessor for Date();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v13, v15);
    }
    uint64_t v16 = v7 + v8[8];
    type metadata accessor for WeatherData.WeatherStatisticsState(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v18 = type metadata accessor for WeatherStatisticsModel();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(v16, v18);
    }
    else if (!EnumCaseMultiPayload)
    {
      swift_bridgeObjectRelease();
    }
    uint64_t v19 = v7 + v8[9];
    uint64_t v20 = type metadata accessor for WeatherDataOverrides();
    if (!_s7Weather24LocationCompositionStateOwet_0(v19, 1, v20))
    {
      uint64_t v21 = type metadata accessor for Date();
      if (!_s7Weather24LocationCompositionStateOwet_0(v19, 1, v21)) {
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v21 - 8) + 8))(v19, v21);
      }
      uint64_t v22 = v19 + *(int *)(v20 + 20);
      if (!_s7Weather24LocationCompositionStateOwet_0(v22, 1, v21)) {
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v21 - 8) + 8))(v22, v21);
      }
    }
  }

  return swift_bridgeObjectRelease();
}

uint64_t sub_1000464FC()
{
  uint64_t v0 = type metadata accessor for CallbackScope();
  sub_100179C0C();
  uint64_t v2 = v1;
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v14[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Scope();
  sub_100179C0C();
  uint64_t v8 = v7;
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v14[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  ProxyContainer.public.getter();
  type metadata accessor for DisplayMetricsMonitor();
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  (*(void (**)(char *, void, uint64_t))(v8 + 104))(v11, enum case for Scope.containerSingleton(_:), v6);
  Definition.inScope(_:)();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v6);
  ProxyContainer.private.getter();
  RegistrationContainer.lazy(block:)();
  swift_release();
  ProxyContainer.callback.getter();
  sub_1001B1E64(v14, v14[3]);
  sub_10017DF08(&qword_100E6F468);
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v5, enum case for CallbackScope.any(_:), v0);
  dispatch thunk of CallbackRegistrationType.whenResolving<A>(_:scope:callback:)();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v0);
  return _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v14);
}

void *sub_10004675C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v13 = a2;
  uint64_t v14 = a3;
  uint64_t v12 = a1;
  uint64_t v11 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  uint64_t v4 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin(v7);
  uint64_t v8 = type metadata accessor for DispatchQoS();
  __chkstk_darwin(v8 - 8);
  sub_1001ABC4C(0, (unint64_t *)&qword_100E62D68);
  void v3[4] = OS_os_log.init(subsystem:category:)();
  v3[5] = _swiftEmptyArrayStorage;
  sub_1001ABC4C(0, (unint64_t *)&qword_100E62D10);
  static DispatchQoS.unspecified.getter();
  uint64_t v16 = _swiftEmptyArrayStorage;
  sub_1001A58D4((unint64_t *)&qword_100E62D18, 255, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_10017DF08(&qword_100E62D20);
  sub_1001246C8((unint64_t *)&qword_100E62D28, &qword_100E62D20);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v11);
  void v3[6] = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  swift_beginAccess();
  uint64_t v15 = v12;
  swift_retain();
  Published.init(initialValue:)();
  swift_endAccess();
  swift_release();
  uint64_t v9 = v14;
  v3[2] = v13;
  v3[3] = v9;
  return v3;
}

void sub_100046A90()
{
  sub_100046CB8(319, (unint64_t *)&unk_100E82DC0, (void (*)(uint64_t))type metadata accessor for LocationComponentHeaderMetrics);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_100046B38()
{
  sub_100046C10(319, (unint64_t *)&unk_100E64138, (void (*)(uint64_t))type metadata accessor for LocationHeaderViewMeasurements);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_100046C10(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = type metadata accessor for Environment.Content();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_100046C64(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = type metadata accessor for Environment.Content();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_100046CB8(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = type metadata accessor for Environment.Content();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_100046D0C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = type metadata accessor for Environment.Content();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_100046D60(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = type metadata accessor for Environment.Content();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void *sub_100046DB4(void *a1)
{
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E64798);
  uint64_t result = (void *)dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v10)
  {
    __break(1u);
    goto LABEL_8;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E647D8);
  uint64_t result = (void *)dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v8)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E807C8);
  uint64_t result = (void *)dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v7[3])
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100EB3AC8);
  uint64_t result = (void *)dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v6)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E981F0);
  uint64_t result = (void *)dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v4)
  {
    type metadata accessor for SavedLocationsMonitor();
    swift_allocObject();
    return sub_1000432A4(v10, v11, v12, v13, v8, v9, v7, (uint64_t)v5, (uint64_t)v3);
  }
LABEL_11:
  __break(1u);
  return result;
}

void *sub_100046F88(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = (int *)type metadata accessor for WeatherData(0);
  uint64_t v6 = v5[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for Locale();
  swift_bridgeObjectRetain();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v9))
  {
    uint64_t v10 = sub_10017DF08(&qword_100E63730);
    memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v7, 0, 1, v9);
  }
  uint64_t v11 = v5[6];
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = type metadata accessor for WeatherDataModel();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  uint64_t v15 = v5[7];
  uint64_t v16 = (char *)a1 + v15;
  uint64_t v17 = (char *)a2 + v15;
  uint64_t v18 = sub_10017DF08(&qword_100E63738);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v17, 1, v18))
  {
    uint64_t v19 = type metadata accessor for WeatherData.CachingState(0);
    memcpy(v16, v17, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    uint64_t v20 = type metadata accessor for Date();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16))(v16, v17, v20);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v16, 0, 1, v18);
  }
  uint64_t v21 = v5[8];
  uint64_t v22 = (void *)((char *)a1 + v21);
  uint64_t v23 = (void *)((char *)a2 + v21);
  uint64_t v24 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v27 = type metadata accessor for WeatherStatisticsModel();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v27 - 8) + 16))(v22, v23, v27);
    goto LABEL_11;
  }
  if (!EnumCaseMultiPayload)
  {
    uint64_t v26 = v23[1];
    *uint64_t v22 = *v23;
    v22[1] = v26;
    swift_bridgeObjectRetain();
LABEL_11:
    swift_storeEnumTagMultiPayload();
    goto LABEL_13;
  }
  memcpy(v22, v23, *(void *)(*(void *)(v24 - 8) + 64));
LABEL_13:
  uint64_t v28 = v5[9];
  uint64_t v29 = (char *)a1 + v28;
  uint64_t v30 = (char *)a2 + v28;
  uint64_t v31 = type metadata accessor for WeatherDataOverrides();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v30, 1, v31))
  {
    uint64_t v32 = sub_10017DF08(&qword_100E63740);
    memcpy(v29, v30, *(void *)(*(void *)(v32 - 8) + 64));
  }
  else
  {
    uint64_t v33 = type metadata accessor for Date();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v30, 1, v33))
    {
      uint64_t v34 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
      memcpy(v29, v30, *(void *)(*(void *)(v34 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 16))(v29, v30, v33);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v29, 0, 1, v33);
    }
    uint64_t v35 = *(int *)(v31 + 20);
    uint64_t v36 = &v29[v35];
    uint64_t v37 = &v30[v35];
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v37, 1, v33))
    {
      uint64_t v38 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
      memcpy(v36, v37, *(void *)(*(void *)(v38 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 16))(v36, v37, v33);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v36, 0, 1, v33);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v29, 0, 1, v31);
  }
  return a1;
}

uint64_t sub_1000473D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[12] = a4;
  v5[13] = a5;
  sub_10017DF08(&qword_100E63850);
  v5[14] = swift_task_alloc();
  v5[15] = type metadata accessor for LocationsState();
  v5[16] = swift_task_alloc();
  sub_10017DF08((uint64_t *)&unk_100EADD50);
  v5[17] = swift_task_alloc();
  sub_10017DF08(&qword_100E639E8);
  v5[18] = swift_task_alloc();
  v5[19] = swift_task_alloc();
  type metadata accessor for WeatherConditionBackgroundTimeData();
  v5[20] = swift_task_alloc();
  v5[21] = swift_task_alloc();
  type metadata accessor for TimeState();
  v5[22] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for Date();
  v5[23] = v6;
  unsigned char v5[24] = *(void *)(v6 - 8);
  v5[25] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for OSSignpostID();
  v5[26] = v7;
  v5[27] = *(void *)(v7 - 8);
  v5[28] = swift_task_alloc();
  return _swift_task_switch(sub_10020D448, 0, 0);
}

#error "100047898: call analysis failed (funcsize=183)"

uint64_t sub_100047940(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10017DF08(&qword_100E94AE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000479A8@<X0>(uint64_t *a1@<X8>)
{
  sub_10017DF08(&qword_100EAB000);
  sub_10017CE00();
  __chkstk_darwin(v3);
  sub_10011BFD8();
  Dictionary.init(dictionaryLiteral:)();
  ShortDescription.init(name:_:)();
  a1[3] = v1;
  a1[4] = sub_100047B30(&qword_100EAB008, &qword_100EAB000);
  sub_100170694(a1);
  sub_100181AC8();
  return v4();
}

uint64_t sub_100047B30(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10018C6DC(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_100047B80(double *a1@<X8>, double a2@<D0>)
{
  uint64_t v4 = type metadata accessor for NamedCoordinateSpace();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = &v11[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  static CoordinateSpaceProtocol<>.scrollView.getter();
  GeometryProxy.bounds(of:)();
  (*(void (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
  sub_10024D364((uint64_t)v11, (uint64_t)&v12, &qword_100E64498);
  double MinY = 0.0;
  if ((v13 & 1) == 0) {
    double MinY = CGRectGetMinY(v12);
  }
  double v9 = -MinY;
  double v10 = MinY + a2;
  if (v9 >= a2) {
    double v10 = 0.0;
  }
  *a1 = v10;
}

uint64_t sub_100047CB0()
{
  uint64_t v0 = type metadata accessor for URL.DirectoryHint();
  sub_100179C0C();
  uint64_t v2 = v1;
  __chkstk_darwin(v3);
  sub_1001626E0();
  uint64_t v6 = v5 - v4;
  id v7 = (id)WDWeatherLibraryDirectory();
  static URL._unconditionallyBridgeFromObjectiveC(_:)();

  id v8 = [self mainBundle];
  sub_10001B480(v8);
  uint64_t v9 = enum case for URL.DirectoryHint.isDirectory(_:);
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 104);
  if (v10)
  {
    v11(v6, enum case for URL.DirectoryHint.isDirectory(_:), v0);
    sub_10014A85C();
    URL.append<A>(path:directoryHint:)();
    (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v6, v0);
    swift_bridgeObjectRelease();
  }
  v11(v6, v9, v0);
  sub_10014A85C();
  URL.append<A>(path:directoryHint:)();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v6, v0);
  return swift_bridgeObjectRelease();
}

uint64_t sub_100047E74(void *a1)
{
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E98100);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v38)
  {
    sub_1001B1E64(a1, a1[3]);
    sub_10017DF08(&qword_100E7C0E8);
    uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
    if (v36)
    {
      uint64_t v3 = sub_1000DF0C4((uint64_t)v37, v38);
      v30[2] = v30;
      __n128 v4 = __chkstk_darwin(v3);
      uint64_t v6 = (void *)((char *)v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *, __n128))(v7 + 16))(v6, v4);
      uint64_t v8 = sub_1000DF0C4((uint64_t)v35, v36);
      v30[1] = v30;
      __n128 v9 = __chkstk_darwin(v8);
      uint64_t v11 = (void *)((char *)v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *, __n128))(v12 + 16))(v11, v9);
      uint64_t v13 = *v6;
      uint64_t v14 = *v11;
      uint64_t v15 = type metadata accessor for AppContinuationBridge();
      void v34[3] = v15;
      v34[4] = &off_100E12BD8;
      v34[0] = v13;
      uint64_t v16 = type metadata accessor for LocationFinder();
      uint64_t v32 = v16;
      uint64_t v33 = &off_100E1F478;
      v31[0] = v14;
      type metadata accessor for OpenL2HandlerObserver();
      uint64_t v17 = (void *)swift_allocObject();
      uint64_t v18 = sub_1000DF0C4((uint64_t)v34, v15);
      __n128 v19 = __chkstk_darwin(v18);
      uint64_t v21 = (void *)((char *)v30 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *, __n128))(v22 + 16))(v21, v19);
      uint64_t v23 = sub_1000DF0C4((uint64_t)v31, v32);
      __n128 v24 = __chkstk_darwin(v23);
      uint64_t v26 = (void *)((char *)v30 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *, __n128))(v27 + 16))(v26, v24);
      uint64_t v28 = *v21;
      uint64_t v29 = *v26;
      void v17[5] = v15;
      v17[6] = &off_100E12BD8;
      void v17[2] = v28;
      v17[10] = v16;
      v17[11] = &off_100E1F478;
      v17[7] = v29;
      _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v31);
      _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v34);
      _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v35);
      _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v37);
      return (uint64_t)v17;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void *assignWithCopy for WeatherConditionBackgroundBindingModifierWithVFXBackground(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[3] = v4;
  sub_1000C1E18(a1 + 4, a2 + 4);
  a1[9] = a2[9];
  a1[10] = a2[10];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_1000482F8@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a2;
  *(void *)(v10 + 24) = a3;
  type metadata accessor for WireframeContentManager();
  sub_10013509C((uint64_t)&qword_100E83B40);
  swift_retain();
  uint64_t v11 = Environment.init<A>(_:)();
  LOBYTE(a2) = v12;
  uint64_t v13 = static Alignment.center.getter();
  sub_1002272E8(__src, 0, 1, 0, 1, 0x7FEFFFFFFFFFFFFFLL, 0, 0, 1, 0, 1, 0, 1, v13, v14, v11, a2 & 1 | ((a1 & 1) << 8), sub_1000CA324, v10);
  swift_release();
  swift_release();
  uint64_t v15 = a4 + *(int *)(type metadata accessor for LocationComponentContainerContentView(0) + 24);
  uint64_t v16 = (unsigned __int8 *)(v15 + *(int *)(type metadata accessor for LocationComponentContainerViewModel() + 24));
  if (v16[1] != 1)
  {
    unsigned __int8 v20 = static Edge.Set.leading.getter();
    unsigned __int8 v21 = static Edge.Set.trailing.getter();
    Edge.Set.init(rawValue:)();
    Edge.Set.init(rawValue:)();
    if (Edge.Set.init(rawValue:)() != v20) {
      Edge.Set.init(rawValue:)();
    }
    Edge.Set.init(rawValue:)();
    if (Edge.Set.init(rawValue:)() != v21) {
      Edge.Set.init(rawValue:)();
    }
    Edge.Set.init(rawValue:)();
    goto LABEL_12;
  }
  if (*v16 >= 2u) {
    goto LABEL_12;
  }
  unsigned __int8 v17 = static Edge.Set.leading.getter();
  unsigned __int8 v18 = static Edge.Set.trailing.getter();
  char v19 = Edge.Set.init(rawValue:)();
  Edge.Set.init(rawValue:)();
  if (Edge.Set.init(rawValue:)() != v17) {
    char v19 = Edge.Set.init(rawValue:)();
  }
  Edge.Set.init(rawValue:)();
  if (Edge.Set.init(rawValue:)() != v18) {
LABEL_12:
  }
    char v19 = Edge.Set.init(rawValue:)();
  uint64_t v22 = *(void *)(a4 + 16);
  char v23 = *(unsigned char *)(a4 + 24);
  sub_100195B7C(v22, v23);
  sub_100149AE8();
  char v25 = v24;
  sub_10018F6D8(v22, v23);
  if (v25)
  {
    if (qword_100E62240 == -1) {
      goto LABEL_17;
    }
    goto LABEL_18;
  }
  if (qword_100E62248 != -1) {
LABEL_18:
  }
    swift_once();
LABEL_17:
  EdgeInsets.init(_all:)();
  uint64_t v27 = v26;
  uint64_t v29 = v28;
  uint64_t v31 = v30;
  uint64_t v33 = v32;
  memcpy(__dst, __src, 0x90uLL);
  memcpy(v35, __src, 0x90uLL);
  LOBYTE(v35[18]) = v19;
  v35[19] = v27;
  v35[20] = v29;
  v35[21] = v31;
  v35[22] = v33;
  LOBYTE(v35[23]) = 0;
  unsigned char v35[24] = 0x3FF0000000000000;
  v37[208] = 0;
  memcpy(&v37[7], v35, 0xC8uLL);
  char v36 = 0;
  *(void *)a5 = 0;
  *(unsigned char *)(a5 + 8) = 0;
  memcpy((void *)(a5 + 9), v37, 0xCFuLL);
  *(void *)(a5 + 216) = 0;
  *(unsigned char *)(a5 + 224) = 0;
  __dst[144] = v19;
  uint64_t v39 = v27;
  uint64_t v40 = v29;
  uint64_t v41 = v31;
  uint64_t v42 = v33;
  char v43 = 0;
  uint64_t v44 = 0x3FF0000000000000;
  sub_10002B6B4((uint64_t)v35);
  return sub_10001D010((uint64_t)__dst);
}

uint64_t sub_1000486D8@<X0>(uint64_t (*a1)(void)@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t v5 = a1(0);
  uint64_t result = swift_allocObject();
  a3[3] = v5;
  a3[4] = a2;
  *a3 = result;
  return result;
}

uint64_t sub_100048728(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for CurrentWeather();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_100048808(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v20 = *a2;
    *(void *)a1 = *a2;
    a1 = v20 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
      uint64_t v21 = a2[3];
      *(void *)(a1 + 16) = a2[2];
      *(void *)(a1 + 24) = v21;
      uint64_t v22 = a2[5];
      *(void *)(a1 + 32) = a2[4];
      *(void *)(a1 + 40) = v22;
      *(unsigned char *)(a1 + 48) = *((unsigned char *)a2 + 48);
      char v23 = (int *)type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.HourModel(0);
      uint64_t v24 = v23[9];
      uint64_t v49 = a1 + v24;
      uint64_t v25 = (uint64_t)a2 + v24;
      uint64_t v26 = type metadata accessor for Precipitation();
      uint64_t v27 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v27(v49, v25, v26);
      uint64_t v28 = v23[10];
      uint64_t v29 = (void *)(a1 + v28);
      uint64_t v30 = (uint64_t *)((char *)a2 + v28);
      uint64_t v31 = v30[1];
      *uint64_t v29 = *v30;
      v29[1] = v31;
      uint64_t v32 = v23[11];
      uint64_t v33 = (void *)(a1 + v32);
      uint64_t v34 = (uint64_t *)((char *)a2 + v32);
      uint64_t v35 = v34[1];
      void *v33 = *v34;
      v33[1] = v35;
      uint64_t v36 = v23[12];
      uint64_t v37 = (void *)(a1 + v36);
      uint64_t v38 = (uint64_t *)((char *)a2 + v36);
      uint64_t v39 = v38[1];
      *uint64_t v37 = *v38;
      v37[1] = v39;
      uint64_t v40 = v23[13];
      uint64_t v48 = (uint64_t)a2 + v40;
      uint64_t v50 = a1 + v40;
      uint64_t v41 = type metadata accessor for Date();
      uint64_t v42 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v42(v50, v48, v41);
      uint64_t v43 = v23[14];
      uint64_t v44 = a1 + v43;
      uint64_t v45 = (uint64_t)a2 + v43;
      uint64_t v46 = type metadata accessor for TimeZone();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 16))(v44, v45, v46);
      *(unsigned char *)(a1 + v23[15]) = *((unsigned char *)a2 + v23[15]);
      *(void *)(a1 + v23[16]) = *(uint64_t *)((char *)a2 + v23[16]);
    }
    else
    {
      uint64_t v6 = type metadata accessor for Date();
      (*(void (**)(uint64_t, uint64_t *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
      uint64_t v7 = (int *)type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.SunriseSetModel(0);
      uint64_t v8 = v7[5];
      uint64_t v9 = a1 + v8;
      uint64_t v10 = (uint64_t)a2 + v8;
      uint64_t v11 = type metadata accessor for TimeZone();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
      *(void *)(a1 + v7[6]) = *(uint64_t *)((char *)a2 + v7[6]);
      uint64_t v12 = v7[7];
      uint64_t v13 = (void *)(a1 + v12);
      uint64_t v14 = (uint64_t *)((char *)a2 + v12);
      uint64_t v15 = v14[1];
      void *v13 = *v14;
      v13[1] = v15;
      uint64_t v16 = v7[8];
      unsigned __int8 v17 = (void *)(a1 + v16);
      unsigned __int8 v18 = (uint64_t *)((char *)a2 + v16);
      uint64_t v19 = v18[1];
      *unsigned __int8 v17 = *v18;
      v17[1] = v19;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_100048C38()
{
  type metadata accessor for WeatherForecastDescriptionStringBuilder();
  swift_allocObject();
  uint64_t v0 = WeatherForecastDescriptionStringBuilder.init()();
  type metadata accessor for FeelsLikeStringBuilder();
  swift_allocObject();
  FeelsLikeStringBuilder.init()();
  WeatherForecastDescriptionStringBuilder.feelsLikeStringBuilder.setter();
  return v0;
}

uint64_t sub_100048CC4()
{
  uint64_t v26 = v0;
  uint64_t v1 = v0[3];
  uint64_t v2 = v0[38];
  uint64_t v3 = v0[34];
  uint64_t v4 = v0[35];
  static Logger.activeUser.getter();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v2, v1, v3);
  int v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v24 = v0[40];
    uint64_t v7 = v0[35];
    uint64_t v22 = v0[34];
    uint64_t v23 = v0[38];
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    uint64_t v25 = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 136315138;
    sub_1000EF120(&qword_100E656D8, (void (*)(uint64_t))&type metadata accessor for Date);
    uint64_t v9 = dispatch thunk of CustomStringConvertible.description.getter();
    v0[2] = sub_10016414C(v9, v10, &v25);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    uint64_t v11 = *(void (**)(void))(v7 + 8);
    ((void (*)(uint64_t, uint64_t))v11)(v23, v22);
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "Handling launch at %s", v8, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    sub_100185A34();

    uint64_t v12 = *(void (**)(void))(v24 + 8);
    sub_100127BA4();
    v12();
  }
  else
  {
    uint64_t v13 = v0[43];
    uint64_t v14 = v0[39];
    uint64_t v15 = v0[40];
    uint64_t v11 = *(void (**)(void))(v0[35] + 8);
    sub_100127BA4();
    v11();

    uint64_t v12 = *(void (**)(void))(v15 + 8);
    ((void (*)(uint64_t, uint64_t))v12)(v13, v14);
  }
  v0[44] = v11;
  v0[45] = v12;
  uint64_t v16 = (void *)v0[4];
  uint64_t v17 = v16[5];
  uint64_t v18 = v16[6];
  sub_1001B1E64(v16 + 2, v17);
  uint64_t v19 = (void *)swift_task_alloc();
  v0[46] = v19;
  void *v19 = v0;
  v19[1] = sub_10021C6C0;
  uint64_t v20 = v0[33];
  return dispatch thunk of ActiveUserServiceType.status.getter(v20, v17, v18);
}

uint64_t sub_100048F80()
{
  return EnvironmentValues.colorSchemeContrast.getter();
}

uint64_t sub_100048FA4()
{
  uint64_t v0 = type metadata accessor for Material();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for SettingReader();
  static SettingReader.shared.getter();
  if (qword_100E624F0 != -1) {
    swift_once();
  }
  DeviceSupportsMaterialBackgrounds();
  char v4 = SettingReader.isEnabled(_:with:)();
  swift_release();
  id v5 = [self mainBundle];
  *(unsigned char *)(swift_allocObject() + 16) = v4 & 1;
  static Material.coreMaterial(bundle:provider:)();

  swift_release();
  Material.applyingFiltersInPlace(_:)();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_100049160(uint64_t a1)
{
  return a1;
}

uint64_t sub_100049258()
{
  ProxyContainer.public.getter();
  sub_10017DF08(&qword_100E72A08);
  sub_100179D0C();
  swift_release();
  swift_release();
  ProxyContainer.public.getter();
  sub_10017DF08(&qword_100E72A10);
  sub_100179D0C();
  swift_release();
  swift_release();
  ProxyContainer.private.getter();
  RegistrationContainer.lazy(block:)();

  return swift_release();
}

uint64_t sub_10004932C()
{
  ProxyContainer.public.getter();
  sub_10017DF08(&qword_100E64768);
  sub_100179D0C();
  swift_release();
  swift_release();
  ProxyContainer.public.getter();
  sub_10017DF08(&qword_100E64770);
  sub_100179D0C();
  swift_release();
  swift_release();
  ProxyContainer.private.getter();
  RegistrationContainer.lazy(block:)();

  return swift_release();
}

uint64_t sub_100049400()
{
  ProxyContainer.public.getter();
  sub_10017DF08(&qword_100E71000);
  sub_100179D0C();
  swift_release();
  swift_release();
  ProxyContainer.public.getter();
  sub_10017DF08(&qword_100E98178);
  sub_100179D0C();
  swift_release();
  swift_release();
  ProxyContainer.private.getter();
  RegistrationContainer.lazy(block:)();

  return swift_release();
}

uint64_t sub_1000494D4()
{
  ProxyContainer.public.getter();
  sub_10017DF08(&qword_100E75310);
  sub_100179D0C();
  swift_release();
  swift_release();
  ProxyContainer.public.getter();
  sub_10017DF08(&qword_100E75318);
  sub_100179D0C();
  swift_release();
  swift_release();
  ProxyContainer.private.getter();
  RegistrationContainer.lazy(block:)();

  return swift_release();
}

uint64_t sub_1000495A8()
{
  ProxyContainer.public.getter();
  sub_10017DF08(&qword_100E71010);
  sub_100179D0C();
  swift_release();
  swift_release();
  ProxyContainer.public.getter();
  sub_10017DF08(&qword_100E89088);
  sub_100179D0C();
  swift_release();
  swift_release();
  ProxyContainer.private.getter();
  RegistrationContainer.lazy(block:)();

  return swift_release();
}

uint64_t sub_10004967C()
{
  ProxyContainer.public.getter();
  sub_10017DF08(&qword_100E947A8);
  sub_100179D0C();
  swift_release();
  swift_release();
  ProxyContainer.public.getter();
  sub_10017DF08(&qword_100E947B0);
  sub_100179D0C();
  swift_release();
  swift_release();
  ProxyContainer.private.getter();
  RegistrationContainer.lazy(block:)();

  return swift_release();
}

void sub_100049750()
{
  sub_100162EA0();
  uint64_t v29 = v0;
  uint64_t v30 = v4;
  uint64_t v31 = v5;
  uint64_t v33 = type metadata accessor for NetworkActivityCompletion();
  sub_100162E4C();
  __chkstk_darwin(v6);
  uint64_t v32 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10017DF08(&qword_100E855D0);
  uint64_t v9 = sub_100109308(v8);
  __chkstk_darwin(v9);
  sub_100162EF8();
  uint64_t v28 = v10;
  sub_1001626D4();
  __chkstk_darwin(v11);
  uint64_t v12 = sub_100185744();
  sub_100179C0C();
  uint64_t v14 = v13;
  __chkstk_darwin(v15);
  sub_100163770();
  uint64_t v16 = type metadata accessor for WeatherNetworkActivity.Domain();
  sub_100179C0C();
  uint64_t v18 = v17;
  __chkstk_darwin(v19);
  sub_10012B938();
  uint64_t v20 = type metadata accessor for WeatherNetworkActivity();
  sub_100179C0C();
  uint64_t v22 = v21;
  __chkstk_darwin(v23);
  sub_100162EB8();
  (*(void (**)(uint64_t, void, uint64_t))(v18 + 104))(v1, enum case for WeatherNetworkActivity.Domain.weather(_:), v16);
  uint64_t v24 = v29;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16))(v3, v29 + OBJC_IVAR____TtC7Weather27LocationNetworkActivityFlow_label, v12);
  uint64_t v25 = type metadata accessor for UUID();
  _s7Weather24LocationCompositionStateOwst_0(v2, 1, 1, v25);
  _s7Weather24LocationCompositionStateOwst_0(v28, 1, 1, v25);
  WeatherNetworkActivity.init(domain:label:token:parentToken:)();
  uint64_t v26 = WeatherNetworkActivity.createNWActivity()();
  (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v0, v20);
  uint64_t v38 = *(void *)(v24 + OBJC_IVAR____TtC7Weather27LocationNetworkActivityFlow_lock);
  uint64_t v34 = v24;
  uint64_t v35 = v26;
  uint64_t v36 = v30;
  uint64_t v37 = v31;
  type metadata accessor for UnfairLock();
  swift_retain();
  uint64_t v27 = (uint64_t)v32;
  Lock.sync<A>(_:)();
  swift_release();
  sub_100089EEC();
  swift_release();
  sub_100089DA4(v27);
  sub_100162694();
}

uint64_t sub_100049A1C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for MainAction();
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10017DF08(qword_100EB9098);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10017DF08(&qword_100E731E0);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for NWPath.Status();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  NWPath.status.getter();
  if ((*(unsigned int (**)(char *, uint64_t))(v13 + 88))(v15, v12) == enum case for NWPath.Status.satisfied(_:))
  {
    uint64_t v16 = NWPath.availableInterfaces.getter();
    sub_100215E78(v16, (uint64_t)v8);
    swift_bridgeObjectRelease();
    uint64_t v17 = type metadata accessor for NWInterface();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v17) == 1)
    {
      sub_1001781AC((uint64_t)v8, qword_100EB9098);
      uint64_t v18 = 1;
    }
    else
    {
      NWInterface.type.getter();
      (*(void (**)(char *, uint64_t))(*(void *)(v17 - 8) + 8))(v8, v17);
      uint64_t v18 = 0;
    }
    uint64_t v21 = type metadata accessor for NWInterface.InterfaceType();
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v11, v18, 1, v21);
    char v22 = sub_100018608((uint64_t)v11);
    uint64_t v23 = *(uint64_t (**)(uint64_t))(a2 + 16);
    *uint64_t v5 = v22;
    v5[1] = 0;
    type metadata accessor for EnvironmentAction();
    swift_storeEnumTagMultiPayload();
    swift_storeEnumTagMultiPayload();
    uint64_t v26 = 0;
    long long v24 = 0u;
    long long v25 = 0u;
    swift_retain();
    sub_1001AAF58((uint64_t)v5, (uint64_t)&v24, v23);
    sub_1001781AC((uint64_t)&v24, (uint64_t *)&unk_100EA01F0);
    sub_1001ABE70((uint64_t)v5);
    return swift_release();
  }
  else
  {
    uint64_t v19 = *(uint64_t (**)(uint64_t))(a2 + 16);
    *(_WORD *)uint64_t v5 = 4;
    type metadata accessor for EnvironmentAction();
    swift_storeEnumTagMultiPayload();
    swift_storeEnumTagMultiPayload();
    uint64_t v26 = 0;
    long long v24 = 0u;
    long long v25 = 0u;
    swift_retain();
    sub_1001AAF58((uint64_t)v5, (uint64_t)&v24, v19);
    sub_1001781AC((uint64_t)&v24, (uint64_t *)&unk_100EA01F0);
    sub_1001ABE70((uint64_t)v5);
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  }
}

uint64_t sub_100049DC0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_100150040();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_100049DE8()
{
  uint64_t v1 = type metadata accessor for FollowingLocationListData();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for CoarseLocationData();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = AccessTracker.diagnosticSubmissionAllowed.getter();
  if (result)
  {
    uint64_t v18 = v2;
    uint64_t v19 = v6;
    uint64_t v10 = v0[29];
    uint64_t v11 = v0[30];
    sub_1001B1E64(v0 + 26, v10);
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v11);
    uint64_t v13 = v0[29];
    uint64_t v12 = v0[30];
    sub_1001B1E64(v0 + 26, v13);
    (*(void (**)(uint64_t, uint64_t))(v12 + 16))(v13, v12);
    sub_10017DF08(&qword_100E6E1F0);
    uint64_t v14 = type metadata accessor for DataEventTrait();
    uint64_t v15 = *(void *)(v14 - 8);
    unint64_t v16 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
    uint64_t v17 = swift_allocObject();
    *(_OWORD *)(v17 + 16) = xmmword_100C251B0;
    (*(void (**)(unint64_t, void, uint64_t))(v15 + 104))(v17 + v16, enum case for DataEventTrait.onlyOnce(_:), v14);
    sub_1000EDE3C(&qword_100E76C70, (void (*)(uint64_t))&type metadata accessor for CoarseLocationData);
    AccessTracker.push<A>(data:traits:file:line:)();
    swift_bridgeObjectRelease();
    sub_1000EDE3C(&qword_100E76C78, (void (*)(uint64_t))&type metadata accessor for FollowingLocationListData);
    AccessTracker.push<A>(data:traits:file:line:)();
    type metadata accessor for FollowingLocationListEvent();
    sub_1000EDE3C(&qword_100E76C80, (void (*)(uint64_t))&type metadata accessor for FollowingLocationListEvent);
    memset(v20, 0, sizeof(v20));
    AccessTracker.submit<A>(_:onlyIfTimed:userInfo:completion:)();
    sub_100178110((uint64_t)v20, &qword_100EAC3D0);
    (*(void (**)(char *, uint64_t))(v18 + 8))(v4, v1);
    return (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v8, v5);
  }
  return result;
}

Swift::String *sub_10004A1D4@<X0>(Swift::String **a1@<X8>)
{
  uint64_t v2 = type metadata accessor for NewsArticleComponentViewModelFactory();
  swift_allocObject();
  uint64_t result = sub_10004A22C();
  a1[3] = (Swift::String *)v2;
  a1[4] = (Swift::String *)&off_100E23878;
  *a1 = result;
  return result;
}

Swift::String *sub_10004A22C()
{
  id v1 = [self mainBundle];
  v6._object = (void *)0x8000000100C9C0C0;
  v2._uint64_t countAndFlagsBits = 1937204558;
  v2._object = (void *)0xE400000000000000;
  v3._uint64_t countAndFlagsBits = 0;
  v3._object = (void *)0xE000000000000000;
  v6._uint64_t countAndFlagsBits = 0xD000000000000021;
  Swift::String v4 = NSLocalizedString(_:tableName:bundle:value:comment:)(v2, (Swift::String_optional)0, (NSBundle)v1, v3, v6);

  v0[1] = v4;
  return v0;
}

uint64_t sub_10004A2D0()
{
  sub_10004A328();

  return swift_deallocClassInstance();
}

uint64_t sub_10004A328()
{
  swift_bridgeObjectRelease();
  type metadata accessor for Location();
  sub_100162E4C();
  sub_100162F0C();
  v1();
  type metadata accessor for Logger();
  sub_100162E4C();
  sub_100162F0C();
  v2();
  swift_release();
  return v0;
}

uint64_t sub_10004A3D0()
{
  return sub_10004A3F8();
}

uint64_t sub_10004A3F8()
{
  return EnvironmentValues.subscript.setter();
}

uint64_t type metadata accessor for WireframeLevelInterestManager()
{
  return self;
}

uint64_t assignWithCopy for DetermineCompactGridLayoutModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 24);
  uint64_t v8 = *(void *)(a2 + 32);
  uint64_t v9 = *(void *)(a2 + 40);
  uint64_t v10 = *(void *)(a2 + 48);
  uint64_t v11 = *(void *)(a2 + 56);
  uint64_t v26 = *(void *)(a2 + 64);
  char v27 = *(unsigned char *)(a2 + 72);
  sub_1001910C8(*(void *)a2, v5, v6, v7, v8, v9, v10, v11, v26, v27);
  uint64_t v12 = *(void *)a1;
  uint64_t v13 = *(void *)(a1 + 8);
  uint64_t v14 = *(void *)(a1 + 16);
  uint64_t v15 = *(void *)(a1 + 24);
  uint64_t v16 = *(void *)(a1 + 32);
  uint64_t v17 = *(void *)(a1 + 40);
  uint64_t v18 = *(void *)(a1 + 48);
  uint64_t v19 = *(void *)(a1 + 56);
  uint64_t v20 = *(void *)(a1 + 64);
  char v21 = *(unsigned char *)(a1 + 72);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(void *)(a1 + 32) = v8;
  *(void *)(a1 + 40) = v9;
  *(void *)(a1 + 48) = v10;
  *(void *)(a1 + 56) = v11;
  *(void *)(a1 + 64) = v26;
  *(unsigned char *)(a1 + 72) = v27;
  sub_10018CCC4(v12, v13, v14, v15, v16, v17, v18, v19, v20, v21);
  uint64_t v22 = *(void *)(v2 + 80);
  LOBYTE(v2) = *(unsigned char *)(v2 + 88);
  sub_100195B7C(v22, v2);
  uint64_t v23 = *(void *)(a1 + 80);
  char v24 = *(unsigned char *)(a1 + 88);
  *(void *)(a1 + 80) = v22;
  *(unsigned char *)(a1 + 88) = v2;
  sub_10018F6D8(v23, v24);
  return a1;
}

uint64_t destroy for FullscreenMapPresentationSourceViewModifier(uint64_t a1)
{
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void *)(a1 + 16);
  char v3 = *(unsigned char *)(a1 + 24);

  return sub_10018F6D8(v2, v3);
}

uint64_t assignWithCopy for WeatherComponentButtonAccessibilityLabelModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  char v6 = *(unsigned char *)(a2 + 16);
  sub_100190CC4(*(void *)a2, v5, v6);
  uint64_t v7 = *(void *)a1;
  uint64_t v8 = *(void *)(a1 + 8);
  char v9 = *(unsigned char *)(a1 + 16);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(unsigned char *)(a1 + 16) = v6;
  sub_100191924(v7, v8, v9);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = (_OWORD *)(a1 + 32);
  uint64_t v11 = (_OWORD *)(a2 + 32);
  uint64_t v12 = *(void *)(a2 + 56);
  if (*(void *)(a1 + 56))
  {
    if (v12)
    {
      uint64_t v13 = *(void *)(a2 + 32);
      uint64_t v14 = *(void *)(a2 + 40);
      char v15 = *(unsigned char *)(a2 + 48);
      sub_100190CC4(v13, v14, v15);
      uint64_t v16 = *(void *)(a1 + 32);
      uint64_t v17 = *(void *)(a1 + 40);
      char v18 = *(unsigned char *)(a1 + 48);
      *(void *)(a1 + 32) = v13;
      *(void *)(a1 + 40) = v14;
      *(unsigned char *)(a1 + 48) = v15;
      sub_100191924(v16, v17, v18);
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_10024ADC8(a1 + 32);
      long long v22 = *(_OWORD *)(a2 + 48);
      *uint64_t v10 = *v11;
      *(_OWORD *)(a1 + 48) = v22;
    }
  }
  else if (v12)
  {
    uint64_t v19 = *(void *)(a2 + 32);
    uint64_t v20 = *(void *)(a2 + 40);
    char v21 = *(unsigned char *)(a2 + 48);
    sub_100190CC4(v19, v20, v21);
    *(void *)(a1 + 32) = v19;
    *(void *)(a1 + 40) = v20;
    *(unsigned char *)(a1 + 48) = v21;
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v23 = *(_OWORD *)(a2 + 48);
    *uint64_t v10 = *v11;
    *(_OWORD *)(a1 + 48) = v23;
  }
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_retain();
  swift_release();
  return a1;
}

void sub_10004A6E4()
{
  type metadata accessor for Capabilities();
  if (static Capabilities.isInternalBuild()())
  {
    id v0 = [self sharedApplication];
    id v1 = (void *)UIApplication.maybeWindow.getter();

    if (v1)
    {
      uint64_t v2 = swift_allocObject();
      swift_weakInit();
      uint64_t v3 = swift_allocObject();
      *(void *)(v3 + 16) = v2;
      *(void *)(v3 + 24) = v1;
      aBlock[4] = sub_1006A212C;
      aBlock[5] = v3;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_10010A4D4;
      void aBlock[3] = &unk_100E1FB88;
      uint64_t v4 = _Block_copy(aBlock);
      id v5 = v1;
      swift_release();
      [v5 ts_installDebugMenuHandler:v4];
      _Block_release(v4);
    }
    else
    {
      if (qword_100E62860 != -1) {
        swift_once();
      }
      uint64_t v6 = type metadata accessor for Logger();
      sub_1002102B0(v6, (uint64_t)qword_100F52028);
      oslog = Logger.logObject.getter();
      os_log_type_t v7 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(oslog, v7))
      {
        uint64_t v8 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v8 = 0;
        _os_log_impl((void *)&_mh_execute_header, oslog, v7, "unable to present debug menu because we have no window", v8, 2u);
        swift_slowDealloc();
      }
    }
  }
}

uint64_t sub_10004A90C()
{
  sub_100119470();
  uint64_t v3 = *v0;
  swift_task_dealloc();
  id v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

unsigned char *sub_10004A9DC(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = (unsigned char *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 4:
        uint64_t v11 = type metadata accessor for Date();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
        break;
      case 3:
        *(void *)a1 = *(void *)a2;
        a1[8] = a2[8];
        swift_bridgeObjectRetain();
        break;
      case 2:
        uint64_t v8 = type metadata accessor for Location();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
        uint64_t v9 = sub_10017DF08(&qword_100E6BBD8);
        a1[*(int *)(v9 + 48)] = a2[*(int *)(v9 + 48)];
        break;
      default:
        memcpy(a1, a2, *(void *)(v6 + 64));
        return a1;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

Swift::Void __swiftcall NotificationSubscriptionMonitor.applicationWillEnterForeground()()
{
  sub_100162EA0();
  type metadata accessor for DispatchWorkItemFlags();
  sub_100179C0C();
  __chkstk_darwin(v1);
  sub_10017FB48();
  sub_100179C0C();
  __chkstk_darwin(v2);
  sub_10019F1B4();
  swift_allocObject();
  sub_100181790();
  v8[4] = sub_1002197DC;
  uint64_t v9 = v0;
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 1107296256;
  void v8[2] = sub_10010A4D4;
  void v8[3] = &unk_100E29188;
  uint64_t v3 = _Block_copy(v8);
  swift_retain();
  static DispatchQoS.unspecified.getter();
  sub_100128CBC((unint64_t *)&qword_100EA0200, 255, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10017DF08(&qword_100E75530);
  sub_10012470C((unint64_t *)&qword_100EA0210, &qword_100E75530);
  sub_10017D50C();
  sub_1001A24B0();
  _Block_release(v3);
  uint64_t v4 = sub_1001A0E30();
  v5(v4);
  uint64_t v6 = sub_10017A958();
  v7(v6);
  swift_release();
  swift_release();
  sub_100162694();
}

uint64_t sub_10004AD48(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v5 = *(void *)a2;
  uint64_t v6 = *(void *)(a2 + 8);
  uint64_t v7 = *(void *)(a2 + 16);
  uint64_t v8 = *(void *)(a2 + 24);
  uint64_t v9 = *(void *)(a2 + 32);
  uint64_t v10 = *(void *)(a2 + 40);
  uint64_t v12 = *(void *)(a2 + 48);
  uint64_t v11 = *(void *)(a2 + 56);
  uint64_t v41 = *(void *)(a2 + 64);
  char v42 = *(unsigned char *)(a2 + 72);
  sub_1001910C8(*(void *)a2, v6, v7, v8, v9, v10, v12, v11, v41, v42);
  uint64_t v13 = *(void *)a1;
  uint64_t v14 = *(void *)(a1 + 8);
  uint64_t v15 = *(void *)(a1 + 16);
  uint64_t v16 = *(void *)(a1 + 24);
  uint64_t v17 = *(void *)(a1 + 32);
  uint64_t v18 = *(void *)(a1 + 40);
  uint64_t v19 = *(void *)(a1 + 48);
  uint64_t v20 = *(void *)(a1 + 56);
  uint64_t v21 = *(void *)(a1 + 64);
  char v22 = *(unsigned char *)(a1 + 72);
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v6;
  *(void *)(a1 + 16) = v7;
  *(void *)(a1 + 24) = v8;
  *(void *)(a1 + 32) = v9;
  *(void *)(a1 + 40) = v10;
  *(void *)(a1 + 48) = v12;
  *(void *)(a1 + 56) = v11;
  *(void *)(a1 + 64) = v41;
  *(unsigned char *)(a1 + 72) = v42;
  sub_10018CCC4(v13, v14, v15, v16, v17, v18, v19, v20, v21, v22);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v23 = a3[6];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  uint64_t v26 = type metadata accessor for Location.Identifier();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 24))(v24, v25, v26);
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  uint64_t v27 = a3[8];
  uint64_t v28 = (void *)(a1 + v27);
  uint64_t v29 = (void *)(a2 + v27);
  *uint64_t v28 = *v29;
  v28[1] = v29[1];
  swift_retain();
  swift_release();
  uint64_t v30 = a3[9];
  uint64_t v31 = a1 + v30;
  uint64_t v32 = a2 + v30;
  *(void *)(a1 + v30) = *(void *)(a2 + v30);
  swift_retain();
  swift_release();
  *(void *)(v31 + 8) = *(void *)(v32 + 8);
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    uint64_t v33 = a3[10];
    uint64_t v34 = (void *)(a1 + v33);
    uint64_t v35 = (void *)(a2 + v33);
    sub_100178110(a1 + v33, &qword_100E62CB8);
    sub_10017DF08(&qword_100E62CB8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v36 = type metadata accessor for LayoutDirection();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v36 - 8) + 16))(v34, v35, v36);
    }
    else
    {
      void *v34 = *v35;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v37 = a3[11];
  uint64_t v38 = a1 + v37;
  uint64_t v39 = a2 + v37;
  *(void *)(a1 + v37) = *(void *)(a2 + v37);
  swift_retain();
  swift_release();
  *(void *)(v38 + 8) = *(void *)(v39 + 8);
  return a1;
}

uint64_t sub_10004AFD8()
{
  uint64_t v2 = v0;
  uint64_t v13 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  sub_100179C0C();
  uint64_t v4 = v3;
  __chkstk_darwin(v5);
  sub_100152344();
  uint64_t v6 = type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin(v6);
  sub_10016279C();
  uint64_t v7 = type metadata accessor for DispatchQoS();
  __chkstk_darwin(v7 - 8);
  uint64_t v8 = type metadata accessor for UnfairLock.Options();
  __chkstk_darwin(v8 - 8);
  static UnfairLock.Options.dataSynchronization.getter();
  type metadata accessor for UnfairLock();
  swift_allocObject();
  *(void *)(v0 + 24) = UnfairLock.init(options:)();
  sub_1001AB3E0();
  static DispatchQoS.unspecified.getter();
  sub_100128DDC((unint64_t *)&qword_100E62D18, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_10017DF08(&qword_100E62D20);
  sub_10012470C((unint64_t *)&qword_100E62D28, &qword_100E62D20);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  (*(void (**)(uint64_t, void, uint64_t))(v4 + 104))(v1, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v13);
  *(void *)(v0 + 32) = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  *(void *)(v0 + 40) = 0;
  *(unsigned char *)(v0 + 48) = 0;
  *(void *)(v0 + 64) = 0;
  *(void *)(v0 + 72) = 0;
  *(void *)(v0 + 56) = 0;
  uint64_t v9 = (__CFString *)String._bridgeToObjectiveC()();
  uint64_t v10 = (__CFString *)String._bridgeToObjectiveC()();
  SCPreferencesRef v11 = SCPreferencesCreate(0, v9, v10);

  *(void *)(v2 + 16) = v11;
  return v2;
}

uint64_t sub_10004B2B4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = type metadata accessor for SunriseSunsetEventCalculator();
  __chkstk_darwin(v4 - 8);
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E8DCE8);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (result)
  {
    SunriseSunsetEventCalculator.init()();
    uint64_t v6 = type metadata accessor for SunriseSunsetViewModelFactory();
    swift_allocObject();
    uint64_t result = SunriseSunsetViewModelFactory.init(stringBuilder:sunriseSunsetEventCalculator:)();
    a2[3] = v6;
    a2[4] = (uint64_t)&protocol witness table for SunriseSunsetViewModelFactory;
    *a2 = result;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10004B3B0@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E75338);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v7)
  {
    sub_1001B1E64(a1, a1[3]);
    uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:name:)();
    if (v6 != 2)
    {
      uint64_t v5 = type metadata accessor for WeatherConditionBackgroundModelFactory();
      swift_allocObject();
      uint64_t result = WeatherConditionBackgroundModelFactory.init(gradientManager:automationEnabled:isDemoPresetActive:)();
      a2[3] = v5;
      a2[4] = (uint64_t)&protocol witness table for WeatherConditionBackgroundModelFactory;
      *a2 = result;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_10004B4C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10017DF08(&qword_100EB9410);
  __chkstk_darwin(v6 - 8);
  uint64_t v80 = (char *)&v65 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10017DF08(&qword_100EB9418);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v67 = (char *)&v65 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10017DF08(&qword_100EB9420);
  uint64_t v71 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  char v81 = (char *)&v65 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_10017DF08(&qword_100EB9428);
  __chkstk_darwin(v13 - 8);
  uint64_t v79 = (char *)&v65 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v78 = type metadata accessor for _RegexFactory();
  uint64_t v77 = *(void *)(v78 - 8);
  __chkstk_darwin(v78);
  uint64_t v76 = (char *)&v65 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_10017DF08(&qword_100EB9430);
  __chkstk_darwin(v16 - 8);
  uint64_t v74 = (uint64_t)&v65 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v75 = type metadata accessor for CharacterClass();
  uint64_t v73 = *(void *)(v75 - 8);
  __chkstk_darwin(v75);
  uint64_t v72 = (char *)&v65 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v70 = sub_10017DF08(&qword_100EB9438);
  uint64_t v69 = *(void *)(v70 - 8);
  __chkstk_darwin(v70);
  uint64_t v20 = (char *)&v65 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v87 = type metadata accessor for Location();
  uint64_t v21 = *(void *)(v87 - 8);
  __chkstk_darwin(v87);
  uint64_t v23 = (char *)&v65 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_10017DF08(&qword_100E639E8);
  __chkstk_darwin(v24 - 8);
  uint64_t v85 = (char *)&v65 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = a3 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_locations;
  uint64_t v27 = *(void *)(v26 + *(int *)(type metadata accessor for LocationsState() + 32));
  uint64_t v28 = *(void *)(v27 + 16);
  uint64_t v68 = v9;
  uint64_t v82 = v11;
  if (v28)
  {
    char v84 = v20;
    uint64_t v66 = v8;
    uint64_t v65 = v21;
    uint64_t v30 = *(void (**)(char *, uint64_t, uint64_t))(v21 + 16);
    uint64_t v29 = v21 + 16;
    BOOL v86 = v30;
    uint64_t v31 = v27 + ((*(unsigned __int8 *)(v29 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 64));
    uint64_t v32 = *(void *)(v29 + 56);
    uint64_t v83 = v27;
    swift_bridgeObjectRetain_n();
    uint64_t v33 = v87;
    while (1)
    {
      v86(v23, v31, v33);
      if (Location.id.getter() == a1 && v34 == a2)
      {
        swift_bridgeObjectRelease();
        uint64_t v8 = v66;
        goto LABEL_14;
      }
      uint64_t v36 = a1;
      uint64_t v37 = a2;
      char v38 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v38) {
        break;
      }
      uint64_t v33 = v87;
      (*(void (**)(char *, uint64_t))(v29 - 8))(v23, v87);
      v31 += v32;
      --v28;
      a2 = v37;
      a1 = v36;
      if (!v28)
      {
        swift_bridgeObjectRelease();
        uint64_t v39 = 1;
        uint64_t v8 = v66;
        uint64_t v20 = v84;
        uint64_t v21 = v65;
        goto LABEL_11;
      }
    }
    uint64_t v8 = v66;
    a2 = v37;
    a1 = v36;
LABEL_14:
    uint64_t v20 = v84;
    uint64_t v40 = (uint64_t)v85;
    uint64_t v33 = v87;
    uint64_t v21 = v65;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v21 + 32))(v40, v23, v33);
    uint64_t v39 = 0;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v39 = 1;
    uint64_t v33 = v87;
LABEL_11:
    uint64_t v40 = (uint64_t)v85;
  }
  _s7Weather24LocationCompositionStateOwst_0(v40, v39, 1, v33);
  swift_bridgeObjectRelease();
  if (_s7Weather24LocationCompositionStateOwet_0(v40, 1, v33) == 1)
  {
    sub_100178160(v40, &qword_100E639E8);
    uint64_t v41 = v8;
    char v42 = v72;
    static RegexComponent<>.digit.getter();
    uint64_t v43 = type metadata accessor for RegexRepetitionBehavior();
    uint64_t v44 = v74;
    _s7Weather24LocationCompositionStateOwst_0(v74, 1, 1, v43);
    uint64_t v45 = v76;
    makeFactory()();
    sub_100128F44(&qword_100EB9440, (void (*)(uint64_t))&type metadata accessor for CharacterClass);
    uint64_t v46 = v75;
    _RegexFactory.oneOrMore<A, B>(_:_:)();
    sub_100178160(v44, &qword_100EB9430);
    int v47 = v42;
    uint64_t v48 = v41;
    uint64_t v49 = v82;
    (*(void (**)(char *, uint64_t))(v73 + 8))(v47, v46);
    (*(void (**)(char *, uint64_t))(v77 + 8))(v45, v78);
    uint64_t v50 = OneOrMore.init(_:)();
    __chkstk_darwin(v50);
    *(&v65 - 2) = (uint64_t)v20;
    sub_10017DF08(&qword_100EB9448);
    sub_1001246C8(&qword_100EB9450, &qword_100EB9420);
    int v51 = v81;
    Regex.init<A>(_:)();
    uint64_t v88 = a1;
    uint64_t v89 = a2;
    sub_1002AE218();
    uint64_t v52 = (uint64_t)v80;
    BidirectionalCollection<>.firstMatch<A, B>(of:)();
    if (_s7Weather24LocationCompositionStateOwet_0(v52, 1, v48) == 1)
    {
      (*(void (**)(char *, uint64_t))(v71 + 8))(v51, v49);
      (*(void (**)(char *, uint64_t))(v69 + 8))(v20, v70);
      sub_100178160(v52, &qword_100EB9410);
      return 0;
    }
    char v84 = v20;
    uint64_t v56 = v68;
    uint64_t v57 = v67;
    (*(void (**)(char *, uint64_t, uint64_t))(v68 + 32))(v67, v52, v48);
    Regex.Match.output.getter();
    swift_bridgeObjectRelease();
    uint64_t v58 = Double.init(_:)();
    if (v59)
    {
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v56 + 8))(v57, v48);
      (*(void (**)(char *, uint64_t))(v71 + 8))(v51, v49);
      uint64_t v62 = v70;
      uint64_t v63 = v69;
    }
    else
    {
      uint64_t v55 = v58;
      Double.init(_:)();
      char v61 = v60;
      (*(void (**)(char *, uint64_t))(v56 + 8))(v57, v48);
      (*(void (**)(char *, uint64_t))(v71 + 8))(v51, v49);
      uint64_t v62 = v70;
      uint64_t v63 = v69;
      if ((v61 & 1) == 0)
      {
        (*(void (**)(char *, uint64_t))(v69 + 8))(v84, v70);
        return v55;
      }
    }
    (*(void (**)(char *, uint64_t))(v63 + 8))(v84, v62);
    return 0;
  }
  Location.coordinate.getter();
  uint64_t v54 = v53;
  (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v40, v33);
  return v54;
}

uint64_t sub_10004BF50@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E64798);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v6)
  {
    uint64_t v4 = type metadata accessor for CellularRadioAccessTechnologyProvider();
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v6;
    *(_OWORD *)(v5 + 24) = v7;
    *(void *)(v5 + 40) = v8;
    a2[3] = v4;
    uint64_t result = sub_1001A58D4(&qword_100E98188, 255, (void (*)(uint64_t))type metadata accessor for CellularRadioAccessTechnologyProvider);
    a2[4] = result;
    *a2 = v5;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t type metadata accessor for CellularRadioAccessTechnologyProvider()
{
  return self;
}

uint64_t sub_10004C05C(uint64_t a1, uint64_t a2)
{
  sub_10018A080();
  uint64_t v5 = type metadata accessor for UnitConfiguration.Temperature();
  sub_100187DB4(v5);
  sub_10018A080();
  uint64_t v6 = type metadata accessor for UnitConfiguration.Distance();
  sub_100187DB4(v6);
  sub_10018A080();
  uint64_t v7 = type metadata accessor for UnitConfiguration.WindSpeed();
  sub_100187DB4(v7);
  sub_10018A080();
  uint64_t v8 = type metadata accessor for UnitConfiguration.Pressure();
  sub_100187DB4(v8);
  sub_10018A080();
  uint64_t v9 = type metadata accessor for UnitConfiguration.Precipitation();
  sub_100187DB4(v9);
  *(void *)(v2 + OBJC_IVAR____TtC7Weather15SettingsMonitor_observer) = 0;
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return v2;
}

uint64_t sub_10004C100()
{
  uint64_t v2 = sub_10018126C();
  sub_10004C1C8(v2, v3);
  uint64_t v4 = (_OWORD *)swift_allocObject();
  sub_10017A1E0(v4, v5, v6, v7, v8, v9, v10, v11, v20, v21, v22, v12);
  *(unsigned char *)(v13 + 64) = v23;
  uint64_t v14 = static Alignment.center.getter();
  uint64_t v16 = v15;
  sub_10017DF08(&qword_100E74200);
  sub_100162E4C();
  sub_10008B8B4();
  v17();
  uint64_t result = sub_10017DF08(&qword_100E74208);
  uint64_t v19 = (uint64_t (**)@<X0>(char *@<X0>, uint64_t@<X8>))(v1 + *(int *)(result + 36));
  void *v19 = sub_100213A9C;
  v19[1] = v0;
  v19[2] = (uint64_t (*)@<X0>(char *@<X0>, uint64_t@<X8>))v14;
  void v19[3] = v16;
  return result;
}

uint64_t sub_10004C1C8(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t initializeWithCopy for MainViewFullscreenMapOverlayModifier(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  return a1;
}

uint64_t sub_10004C26C()
{
  sub_100162EA0();
  uint64_t v1 = (int *)type metadata accessor for LocationRowButtonStyle(0);
  sub_100179EF0();
  uint64_t v3 = v0 + ((*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  swift_unknownObjectRelease();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v3 + 16);
  uint64_t v4 = v3 + v1[6];
  type metadata accessor for LocationModel();
  sub_100162E4C();
  sub_100162F0C();
  v5();
  uint64_t v6 = type metadata accessor for ListLocationViewModel(0);
  sub_100179008();
  sub_1001D0E80();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = type metadata accessor for Date();
    if (!sub_1001810A0(v7))
    {
      sub_100162880();
      sub_100162F0C();
      v8();
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  sub_10019FDA4(v4 + *(int *)(v6 + 32));
  uint64_t v9 = sub_10018444C();
  if (!sub_1001810A0(v9))
  {
    sub_100162880();
    uint64_t v10 = sub_10019D614();
    v11(v10);
  }
  uint64_t v12 = sub_100187128();
  if (!sub_1001810A0(v12))
  {
    sub_100162880();
    uint64_t v13 = sub_10019D614();
    v14(v13);
  }
  sub_100179008();
  sub_100179008();
  sub_100179008();
  sub_100179008();
  sub_100179008();
  sub_100179008();
  sub_100179008();
  sub_100179008();
  type metadata accessor for WeatherConditionBackgroundModel();
  sub_100162E4C();
  sub_100162F0C();
  v15();
  sub_100179008();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v16 = v3 + v1[13];
  sub_10017DF08((uint64_t *)&unk_100EAA560);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v17 = type metadata accessor for UserInterfaceSizeClass();
    if (!_s7Weather24LocationCompositionStateOwet_0(v16, 1, v17))
    {
      sub_100162880();
      sub_100162F0C();
      v18();
    }
  }
  else
  {
    swift_release();
  }
  sub_10018F6D8(*(void *)(v3 + v1[14]), *(unsigned char *)(v3 + v1[14] + 8));
  uint64_t v19 = v3 + v1[15];
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v20 = type metadata accessor for UserInterfaceSizeClass();
    if (!_s7Weather24LocationCompositionStateOwet_0(v19, 1, v20))
    {
      sub_100162880();
      sub_10017B204();
      sub_100162F0C();
      v21();
    }
  }
  else
  {
    swift_release();
  }
  swift_release();
  swift_release();
  sub_100162694();
  return swift_deallocObject();
}

uint64_t sub_10004C5DC()
{
  type metadata accessor for LocationContentView(0);
  sub_10017FC70();
  swift_release();
  swift_release();
  swift_unknownObjectRelease();
  swift_release();
  sub_100186CC8();
  sub_100166D9C();
  sub_10017DF08(&qword_100E63BD0);
  if (sub_10017A0C8() == 1)
  {
    type metadata accessor for DisplayMetrics();
    sub_100166C60();
    sub_100162E4C();
    sub_100162F0C();
    v0();
  }
  else
  {
    swift_release();
  }
  sub_10019DA50();
  sub_10017DF08(&qword_100E63BC8);
  if (sub_10017A0C8() == 1)
  {
    type metadata accessor for ContentSizeCategory();
    sub_100162E4C();
    sub_100162F0C();
    v1();
  }
  else
  {
    swift_release();
  }
  sub_100180740();
  sub_1001724C0();
  sub_100162E4C();
  sub_100162F0C();
  v2();
  sub_100188C14();

  return swift_deallocObject();
}

uint64_t sub_10004C768()
{
  swift_unknownObjectRelease();
  swift_release();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 48);
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10004C7B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  type metadata accessor for WeatherVFXConditionBackground();
  sub_10015180C((uint64_t)&qword_100E70F28);
  uint64_t v4 = StateObject.wrappedValue.getter();
  uint64_t v5 = static ObservableObject.environmentStore.getter();
  uint64_t v6 = sub_10017DF08(&qword_100E8EBA8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  uint64_t result = sub_10017DF08(&qword_100E8EBB0);
  uint64_t v8 = (uint64_t *)(a2 + *(int *)(result + 36));
  *uint64_t v8 = v5;
  v8[1] = v4;
  return result;
}

uint64_t sub_10004C8CC()
{
  uint64_t v0 = type metadata accessor for MeasuredLocationViewerView(0);
  sub_1001627C0(v0);
  sub_1001891A4();

  return sub_100054980(v1);
}

uint64_t sub_10004C910@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for LocationComponentContainerBackgroundView(0);
  __chkstk_darwin(v4 - 8);
  sub_10024D364(a1, (uint64_t)v8, &qword_100E82BC8);
  sub_1001FA290();
  uint64_t KeyPath = swift_getKeyPath();
  sub_1001EC0BC();
  uint64_t v6 = a2 + *(int *)(sub_10017DF08(&qword_100E82BD0) + 36);
  *(void *)uint64_t v6 = KeyPath;
  *(_WORD *)(v6 + 8) = 0;
  return sub_1001F75CC();
}

uint64_t assignWithCopy for ApplyLocationComponentContentWidthModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  char v5 = *(unsigned char *)(a2 + 8);
  sub_100195B7C(*(void *)a2, v5);
  uint64_t v6 = *(void *)a1;
  char v7 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v4;
  *(unsigned char *)(a1 + 8) = v5;
  sub_10018F6D8(v6, v7);
  uint64_t v8 = *(void *)(a2 + 16);
  char v9 = *(unsigned char *)(a2 + 25);
  uint64_t v10 = *(unsigned __int8 *)(a2 + 24);
  sub_100193DD4(v8, v10, v9);
  uint64_t v11 = *(void *)(a1 + 16);
  char v12 = *(unsigned char *)(a1 + 25);
  *(void *)(a1 + 16) = v8;
  uint64_t v13 = *(unsigned __int8 *)(a1 + 24);
  *(unsigned char *)(a1 + 24) = v10;
  *(unsigned char *)(a1 + 25) = v9;
  sub_10014D82C(v11, v13, v12);
  return a1;
}

uint64_t sub_10004CAA4(void *a1, void *a2)
{
  sub_1001B1E64(a2, a2[3]);
  sub_10017DF08(&qword_100E807A0);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v12)
  {
    sub_1001262E4(&v11, (uint64_t)v13);
    sub_1001B1E64(a2, a2[3]);
    sub_10017DF08(&qword_100E80780);
    uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
    if (v9)
    {
      sub_1001262E4(&v8, (uint64_t)&v11);
      sub_10020D948((uint64_t)v13, (uint64_t)&v8);
      sub_10020D948((uint64_t)&v11, (uint64_t)&v7);
      uint64_t v5 = type metadata accessor for GeocodeTelemetry();
      swift_allocObject();
      uint64_t v6 = GeocodeTelemetry.init(backend:clock:)();
      sub_1001B1E64(a1, a1[3]);
      uint64_t v9 = v5;
      uint64_t v10 = sub_100019A3C(&qword_100E807A8, (void (*)(uint64_t))&type metadata accessor for GeocodeTelemetry);
      *(void *)&long long v8 = v6;
      dispatch thunk of GeocodeManagerType.register(callbacks:)();
      _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)&v11);
      _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v13);
      return _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)&v8);
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_10004CC3C(uint64_t a1)
{
  void (*v13)(uint64_t *__return_ptr, uint64_t);
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;

  uint64_t v2 = type metadata accessor for Location.Identifier();
  uint64_t v22 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  long long v21 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t active = type metadata accessor for LocationViewerActiveLocationState();
  __chkstk_darwin(active - 8);
  uint64_t v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for ViewState.SecondaryViewState(0);
  __chkstk_darwin(v7);
  uint64_t v9 = (uint64_t *)((char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = (int *)type metadata accessor for ViewState(0);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *(void (**)(uint64_t *__return_ptr, uint64_t))(a1 + 16);
  swift_retain();
  uint64_t v14 = swift_retain();
  v13(&v23, v14);
  swift_release();
  swift_release();
  sub_100113908(v23 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_view, (uint64_t)v12, (void (*)(void))type metadata accessor for ViewState);
  swift_release();
  sub_100113908((uint64_t)&v12[v10[5]], (uint64_t)v9, (void (*)(void))type metadata accessor for ViewState.SecondaryViewState);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_10011E2A4((uint64_t)v9, (void (*)(void))type metadata accessor for ViewState.SecondaryViewState);
    return sub_10011E2A4((uint64_t)v12, (void (*)(void))type metadata accessor for ViewState);
  }
  uint64_t v15 = *v9;
  if (*(void *)&v12[v10[9] + 8] == 1)
  {
    uint64_t v16 = [self currentDevice];
    [v16 userInterfaceIdiom];

    if ((v12[v10[7]] & 1) == 0)
    {
      swift_release();
      return sub_10011E2A4((uint64_t)v12, (void (*)(void))type metadata accessor for ViewState);
    }
  }
  sub_10011E2A4((uint64_t)v12, (void (*)(void))type metadata accessor for ViewState);
  sub_100113908(v15 + OBJC_IVAR____TtCV7Weather23LocationViewerViewState8_Storage_activeLocationState, (uint64_t)v6, (void (*)(void))type metadata accessor for LocationViewerActiveLocationState);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v6, 1, v2) == 1) {
    return swift_release();
  }
  uint64_t v19 = (uint64_t)v21;
  uint64_t v18 = v22;
  (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v21, v6, v2);
  sub_10006B734(v19);
  swift_release();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v18 + 8))(v19, v2);
}

uint64_t sub_10004CFDC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = *(void *)(a2 - 8);
  __chkstk_darwin(a1);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for WeatherComponentButton();
  sub_100121584(a1 + *(int *)(v9 + 40), a2, (uint64_t)v8);
  sub_100121584((uint64_t)v8, a2, a3);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, a2);
}

uint64_t type metadata accessor for WeatherComponentButton()
{
  return sub_100109098();
}

uint64_t sub_10004D0EC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  uint64_t v4 = type metadata accessor for URL();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = &v38[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = sub_10017DF08(&qword_100E6D578);
  __chkstk_darwin(v8);
  uint64_t v10 = &v38[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = sub_10017DF08(&qword_100E749B0);
  uint64_t v12 = __chkstk_darwin(v11 - 8);
  uint64_t v14 = &v38[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v15 = __chkstk_darwin(v12);
  uint64_t v17 = &v38[-v16];
  __chkstk_darwin(v15);
  uint64_t v19 = &v38[-v18];
  if (*a1 != *a2) {
    return 0;
  }
  sub_100216254();
  if ((v20 & 1) == 0) {
    return 0;
  }
  uint64_t v41 = v5;
  uint64_t v21 = type metadata accessor for LearnMoreAttributorViewModel();
  sub_1000F32E4((uint64_t)&a1[*(int *)(v21 + 24)], (uint64_t)v19);
  uint64_t v40 = v21;
  sub_1000F32E4((uint64_t)&a2[*(int *)(v21 + 24)], (uint64_t)v17);
  uint64_t v22 = (uint64_t)&v10[*(int *)(v8 + 48)];
  sub_1000F32E4((uint64_t)v19, (uint64_t)v10);
  sub_1000F32E4((uint64_t)v17, v22);
  sub_100162F8C((uint64_t)v10);
  if (!v23)
  {
    sub_1000F32E4((uint64_t)v10, (uint64_t)v14);
    sub_100162F8C(v22);
    if (!v23)
    {
      uint64_t v25 = v41;
      (*(void (**)(unsigned char *, uint64_t, uint64_t))(v41 + 32))(v7, v22, v4);
      sub_10023197C();
      int v39 = dispatch thunk of static Equatable.== infix(_:_:)();
      uint64_t v26 = *(void (**)(unsigned char *, uint64_t))(v25 + 8);
      v26(v7, v4);
      sub_1000F3400((uint64_t)v17, &qword_100E749B0);
      sub_1000F3400((uint64_t)v19, &qword_100E749B0);
      v26(v14, v4);
      sub_1000F3400((uint64_t)v10, &qword_100E749B0);
      if (v39) {
        goto LABEL_15;
      }
      return 0;
    }
    sub_1000F3400((uint64_t)v17, &qword_100E749B0);
    sub_1000F3400((uint64_t)v19, &qword_100E749B0);
    (*(void (**)(unsigned char *, uint64_t))(v41 + 8))(v14, v4);
LABEL_11:
    sub_1000F3400((uint64_t)v10, &qword_100E6D578);
    return 0;
  }
  sub_1000F3400((uint64_t)v17, &qword_100E749B0);
  sub_1000F3400((uint64_t)v19, &qword_100E749B0);
  sub_100162F8C(v22);
  if (!v23) {
    goto LABEL_11;
  }
  sub_1000F3400((uint64_t)v10, &qword_100E749B0);
LABEL_15:
  uint64_t v27 = v40;
  uint64_t v28 = *(int *)(v40 + 28);
  uint64_t v29 = *(void *)&a1[v28];
  uint64_t v30 = *(void *)&a1[v28 + 8];
  uint64_t v31 = &a2[v28];
  BOOL v32 = v29 == *(void *)v31 && v30 == *((void *)v31 + 1);
  if (v32 || (v33 = _stringCompareWithSmolCheck(_:_:expecting:)(), uint64_t result = 0, (v33 & 1) != 0))
  {
    uint64_t v34 = *(int *)(v27 + 32);
    uint64_t v35 = *(void *)&a1[v34];
    uint64_t v36 = *(void *)&a2[v34];
    if (v35)
    {
      uint64_t v43 = v35;
      if (v36)
      {
        uint64_t v42 = v36;
        sub_10017DF08(&qword_100E85F80);
        sub_100230EA8();
        swift_retain_n();
        char v37 = dispatch thunk of static Equatable.== infix(_:_:)();
        swift_release();
        swift_release();
        if (v37) {
          return 1;
        }
      }
    }
    else if (!v36)
    {
      return 1;
    }
    return 0;
  }
  return result;
}

uint64_t sub_10004D508()
{
  type metadata accessor for PresentationWithoutInitialAnimation();
  uint64_t result = sub_1000E1598();
  if ((result & 1) == 0)
  {
    sub_10017DF08(&qword_100E65950);
    return State.wrappedValue.setter();
  }
  return result;
}

double sub_10004D56C()
{
  sub_1000E0E14(v0 + 8, (uint64_t)v8);
  sub_1000E0E14((uint64_t)v8, (uint64_t)v9);
  double v1 = v9[0];
  if (v10 == 1)
  {
    sub_1000E0E84();
    sub_1000E0DAC(v0 + 49, (uint64_t)&v7);
    sub_1000E0DAC((uint64_t)&v7, (uint64_t)&v11);
    sub_1001809F4();
    unsigned __int8 v2 = sub_1000E0EF0();
    double v3 = sub_10017D9F8(v2);
    if (v5) {
      return v4;
    }
    else {
      return v3;
    }
  }
  return v1;
}

uint64_t sub_10004D618@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E647D8);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  uint64_t v5 = v30;
  if (!v30)
  {
    __break(1u);
    goto LABEL_7;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E98020);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v29)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  uint64_t v21 = v31;
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E64798);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  uint64_t v6 = v24;
  if (!v24)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v7 = v26;
  uint64_t v20 = v27;
  uint64_t v8 = v25;
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E7CD18);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v23)
  {
    uint64_t v9 = sub_1000DF0C4((uint64_t)v28, v29);
    __n128 v10 = __chkstk_darwin(v9);
    uint64_t v12 = (uint64_t *)((char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, __n128))(v13 + 16))(v12, v10);
    uint64_t v14 = sub_1000DF0C4((uint64_t)v22, v23);
    __n128 v15 = __chkstk_darwin(v14);
    uint64_t v17 = (uint64_t **)((char *)&v20 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t **, __n128))(v18 + 16))(v17, v15);
    uint64_t v19 = sub_100023DFC(v5, v21, *v12, v6, v8, v7, v20, *v17);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v22);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v28);
    uint64_t result = type metadata accessor for MainInteractor();
    a2[3] = result;
    a2[4] = &off_100E1EA00;
    *a2 = v19;
    return result;
  }
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_10004D900@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v25 = a2;
  uint64_t v3 = type metadata accessor for URL();
  __chkstk_darwin(v3 - 8);
  uint64_t v23 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = type metadata accessor for EndpointConfiguration();
  uint64_t v5 = *(void *)(v24 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  uint64_t v7 = __chkstk_darwin(v24);
  uint64_t v21 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v20 - v8;
  uint64_t v22 = type metadata accessor for AppConfiguration();
  uint64_t v10 = *(void *)(v22 - 8);
  __chkstk_darwin(v22);
  uint64_t v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for SettingReader();
  static SettingReader.shared.getter();
  static Settings.WeatherEnvironment.contentEnvironment.getter();
  SettingReader.read<A>(_:)();
  swift_release();
  swift_release();
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E6FC60);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v27)
  {
    sub_1001262E4(&v26, (uint64_t)v28);
    sub_1001B1E64(v28, v28[3]);
    dispatch thunk of AppConfigurationManagerType.appConfiguration.getter();
    AppConfiguration.endpointConfig(for:)();
    char v14 = EndpointConfiguration.useDynamicPortForWeatherData.getter();
    EndpointConfiguration.weatherDataURL.getter();
    if (v14)
    {
      __n128 v15 = v21;
      uint64_t v16 = v24;
      (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v21, v9, v24);
      unint64_t v17 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
      uint64_t v18 = swift_allocObject();
      (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v18 + v17, v15, v16);
      WDSEndpoint.init(url:portOverrideProvider:)();
    }
    else
    {
      WDSEndpoint.init(url:)();
      uint64_t v16 = v24;
    }
    uint64_t v19 = v22;
    (*(void (**)(char *, uint64_t))(v5 + 8))(v9, v16);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v19);
    return _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v28);
  }
  else
  {
    __break(1u);
  }
  return result;
}

Swift::Void __swiftcall SavedLocationsMonitor.applicationWillEnterForeground()()
{
  uint64_t v1 = type metadata accessor for SavedLocationsManagerDataStatus();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001B1E64((void *)(v0 + 64), *(void *)(v0 + 88));
  dispatch thunk of SavedLocationsManagerType.dataStatus.getter();
  int v5 = (*(uint64_t (**)(char *, uint64_t))(v2 + 88))(v4, v1);
  if (v5 == enum case for SavedLocationsManagerDataStatus.pending(_:))
  {
    if (qword_100E627A0 != -1) {
      swift_once();
    }
    uint64_t v6 = type metadata accessor for Logger();
    sub_1002102B0(v6, (uint64_t)qword_100F51DF8);
    uint64_t v7 = Logger.logObject.getter();
    os_log_type_t v8 = static os_log_type_t.default.getter();
    if (!os_log_type_enabled(v7, v8)) {
      goto LABEL_12;
    }
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v9 = 0;
    uint64_t v10 = "SavedLocationsMonitor: saved locations data is still pending, ignore applicationWillEnterForeground event";
LABEL_11:
    _os_log_impl((void *)&_mh_execute_header, v7, v8, v10, v9, 2u);
    swift_slowDealloc();
LABEL_12:

    return;
  }
  if (v5 == enum case for SavedLocationsManagerDataStatus.ready(_:))
  {
    sub_1001B1E64((void *)(v0 + 64), *(void *)(v0 + 88));
    uint64_t v11 = dispatch thunk of SavedLocationsManagerType.savedLocations.getter();
    sub_10001DCE4(v11);
    swift_bridgeObjectRelease();
    if (qword_100E627A0 != -1) {
      swift_once();
    }
    uint64_t v12 = type metadata accessor for Logger();
    sub_1002102B0(v12, (uint64_t)qword_100F51DF8);
    uint64_t v7 = Logger.logObject.getter();
    os_log_type_t v8 = static os_log_type_t.default.getter();
    if (!os_log_type_enabled(v7, v8)) {
      goto LABEL_12;
    }
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v9 = 0;
    uint64_t v10 = "Unhandled case in SavedLocationsMonitor.applicationWillEnterForeground";
    goto LABEL_11;
  }
  if (qword_100E627A0 != -1) {
    swift_once();
  }
  uint64_t v13 = type metadata accessor for Logger();
  sub_1002102B0(v13, (uint64_t)qword_100F51DF8);
  char v14 = Logger.logObject.getter();
  os_log_type_t v15 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v16 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v16 = 0;
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "Unhandled case in SavedLocationsMonitor.applicationWillEnterForeground", v16, 2u);
    swift_slowDealloc();
  }

  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
}

uint64_t sub_10004DFC4()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10017DF08(&qword_100E76780);
  uint64_t v3 = sub_100109308(v2);
  uint64_t v4 = __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v24[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  os_log_type_t v8 = (char *)&v24[-1] - v7;
  uint64_t v9 = sub_10017DF08(&qword_100E76778);
  sub_100179C0C();
  uint64_t v11 = v10;
  __chkstk_darwin(v12);
  sub_1001626E0();
  uint64_t v15 = v14 - v13;
  uint64_t v16 = v1 + OBJC_IVAR____TtC7Weather30WeatherMicaConditionBackground__isLoaded;
  LOBYTE(v24[0]) = 1;
  Published.init(initialValue:)();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 32))(v16, v15, v9);
  *(unsigned char *)(v1 + OBJC_IVAR____TtC7Weather30WeatherMicaConditionBackground_isWindowActive) = 1;
  uint64_t v17 = OBJC_IVAR____TtC7Weather30WeatherMicaConditionBackground__lastModel;
  uint64_t v18 = type metadata accessor for BackgroundAnimationData.Model();
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v8, 1, 1, v18);
  sub_1001262FC((uint64_t)v8, (uint64_t)v6, &qword_100E76780);
  sub_10017DF08(&qword_100E76788);
  swift_allocObject();
  uint64_t v19 = Atomic.init(wrappedValue:)();
  sub_100178110((uint64_t)v8, &qword_100E76780);
  *(void *)(v1 + v17) = v19;
  type metadata accessor for MicaBackgroundAnimation();
  id v20 = [self sharedApplication];
  UIApplication.expectedWindow.getter();

  sub_1001B1E64(v24, v24[3]);
  dispatch thunk of WindowType.bounds.getter();
  uint64_t v21 = MicaBackgroundAnimation.__allocating_init(windowBounds:)();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v24);
  swift_beginAccess();
  uint64_t v23 = v21;
  Published.init(initialValue:)();
  swift_endAccess();
  return v1;
}

#error "10004E258: call analysis failed (funcsize=12)"

uint64_t sub_10004E264()
{
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10004E2AC()
{
  swift_release();
  swift_release();
  sub_10018F6E4();

  return swift_deallocObject();
}

uint64_t sub_10004E2F8()
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 104);

  return swift_deallocObject();
}

uint64_t sub_10004E358()
{
  if (qword_100E62818 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for Logger();
  sub_1002102B0(v0, (uint64_t)qword_100F51F50);
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Fetching weather data for non-priority locations", v3, 2u);
    swift_slowDealloc();
  }

  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    swift_retain();
    swift_release();
    sub_10020E788();
    swift_release();
  }
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    swift_retain();
    swift_release();
    sub_10005EC80();
    return swift_release();
  }
  return result;
}

uint64_t sub_10004E53C()
{
  uint64_t v0 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v24 = *(void *)(v0 - 8);
  uint64_t v25 = v0;
  __chkstk_darwin(v0);
  uint64_t v23 = (char *)&v21 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = type metadata accessor for DispatchQoS();
  uint64_t v21 = *(void *)(v2 - 8);
  uint64_t v22 = v2;
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for DispatchQoS.QoSClass();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  os_log_type_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for Logger();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Logger.geocode.getter();
  uint64_t v13 = Logger.logObject.getter();
  os_log_type_t v14 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v15 = 0;
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "Prewarming GeoServices", v15, 2u);
    swift_slowDealloc();
  }

  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  sub_1001AB3E0();
  (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, enum case for DispatchQoS.QoSClass.background(_:), v5);
  uint64_t v16 = (void *)static OS_dispatch_queue.global(qos:)();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  aBlock[4] = sub_100011744;
  aBlock[5] = 0;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10010A4D4;
  void aBlock[3] = &unk_100E3A178;
  uint64_t v17 = _Block_copy(aBlock);
  static DispatchQoS.unspecified.getter();
  long long v26 = &_swiftEmptyArrayStorage;
  sub_100216874();
  sub_10017DF08(&qword_100E75530);
  sub_100115EDC();
  uint64_t v18 = v23;
  uint64_t v19 = v25;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v17);

  (*(void (**)(char *, uint64_t))(v24 + 8))(v18, v19);
  return (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v4, v22);
}

uint64_t sub_10004E954(void (*a1)(uint64_t *__return_ptr, __n128))
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for WidgetConfiguration();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for AppConfigurationState();
  __n128 v9 = __chkstk_darwin(v8 - 8);
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  a1(&v22, v9);
  sub_100118240(v22 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_appConfiguration, (uint64_t)v11, (void (*)(void))type metadata accessor for AppConfigurationState);
  swift_release();
  AppConfiguration.widget.getter();
  type metadata accessor for AppConfiguration();
  sub_100162E4C();
  (*(void (**)(char *))(v12 + 8))(v11);
  WidgetConfiguration.timelineReloadDebouncingInterval.getter();
  uint64_t v14 = v13;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  if (qword_100E62820 != -1) {
    swift_once();
  }
  uint64_t v15 = type metadata accessor for Logger();
  sub_1002102B0(v15, (uint64_t)qword_100F51F68);
  uint64_t v16 = Logger.logObject.getter();
  os_log_type_t v17 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v18 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v18 = 134217984;
    uint64_t v22 = v14;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v16, v17, "Debounced widget timeline reload requests will debounce in intervals of %fs", v18, 0xCu);
    swift_slowDealloc();
  }

  sub_10017DF08(&qword_100E7F5B0);
  swift_allocObject();
  uint64_t v19 = Debounce.init(delay:block:)();
  swift_release();
  swift_release();
  *(void *)(v2 + 16) = v19;
  return v2;
}

uint64_t sub_10004EC48()
{
  uint64_t v1 = type metadata accessor for TypesettingLanguageAwareLineHeightRatio();
  uint64_t v25 = *(void *)(v1 - 8);
  uint64_t v26 = v1;
  __chkstk_darwin(v1);
  uint64_t v3 = (char *)&v24 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10017DF08(&qword_100E7DFA0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  Image.init(systemName:)();
  static Image.TemplateRenderingMode.macSafeOriginal.getter();
  uint64_t v7 = type metadata accessor for Image.TemplateRenderingMode();
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v6, 0, 1, v7);
  Image.renderingMode(_:)();
  swift_release();
  sub_100178110((uint64_t)v6, &qword_100E7DFA0);
  uint64_t v8 = Text.init(_:)();
  uint64_t v10 = v9;
  char v12 = v11;
  uint64_t v13 = *(void *)(v0 + 8);
  char v14 = *(unsigned char *)(v0 + 16);
  sub_100195B7C(v13, v14);
  sub_100149AE8();
  char v16 = v15;
  sub_10018F6D8(v13, v14);
  if (v16) {
    static Font.body.getter();
  }
  else {
    static Font.title3.getter();
  }
  uint64_t v17 = Text.font(_:)();
  uint64_t v19 = v18;
  char v21 = v20;
  swift_release();
  sub_100191924(v8, v10, v12 & 1);
  swift_bridgeObjectRelease();
  static TypesettingLanguageAwareLineHeightRatio.disable.getter();
  uint64_t v22 = Text.typesettingLanguageAwareLineHeightRatio(_:isEnabled:)();
  sub_100191924(v17, v19, v21 & 1);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v25 + 8))(v3, v26);
  return v22;
}

void *assignWithCopy for ExternalSearchQuery(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_10004EF14(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TypesettingLanguageAwareLineHeightRatio();
  uint64_t v29 = *(void *)(v4 - 8);
  uint64_t v30 = v4;
  __chkstk_darwin(v4);
  uint64_t v28 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = type metadata accessor for Font.Leading();
  uint64_t v6 = *(void *)(v27 - 8);
  __chkstk_darwin(v27);
  uint64_t v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for Font.TextStyle();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  char v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = a1;
  uint64_t v32 = a2;
  sub_10014A85C();
  swift_bridgeObjectRetain();
  uint64_t v13 = Text.init<A>(_:)();
  uint64_t v15 = v14;
  char v17 = v16 & 1;
  (*(void (**)(char *, void, uint64_t))(v10 + 104))(v12, enum case for Font.TextStyle.caption(_:), v9);
  static Font.Weight.bold.getter();
  static Font.system(_:weight:)();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  uint64_t v18 = v27;
  (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, enum case for Font.Leading.tight(_:), v27);
  Font.leading(_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v18);
  uint64_t v19 = Text.font(_:)();
  uint64_t v21 = v20;
  LOBYTE(v8) = v22;
  swift_release();
  sub_100191924(v13, v15, v17);
  swift_bridgeObjectRelease();
  uint64_t v23 = v28;
  static TypesettingLanguageAwareLineHeightRatio.disable.getter();
  uint64_t v24 = Text.typesettingLanguageAwareLineHeightRatio(_:isEnabled:)();
  sub_100191924(v19, v21, v8 & 1);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v29 + 8))(v23, v30);
  return v24;
}

uint64_t sub_10004F270@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v31 = a2;
  type metadata accessor for LocationComponentHeaderViewModel(0);
  sub_100162E4C();
  __chkstk_darwin(v5);
  sub_100162EB8();
  uint64_t v6 = type metadata accessor for FeelsLikeComponentViewModel(0);
  uint64_t v7 = v6 - 8;
  __chkstk_darwin(v6);
  uint64_t v9 = (uint64_t *)((char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = type metadata accessor for FeelsLikeComponentPreprocessedDataModel();
  uint64_t v11 = v10 - 8;
  __chkstk_darwin(v10);
  sub_100109370();
  sub_10021B1EC(a1, (uint64_t)v3, (void (*)(void))type metadata accessor for FeelsLikeComponentPreprocessedDataModel);
  uint64_t v13 = v3[2];
  uint64_t v12 = v3[3];
  uint64_t v14 = v3[4];
  uint64_t v15 = v3[5];
  sub_1001B62F0((uint64_t)v3 + *(int *)(v11 + 36), (uint64_t)v9 + *(int *)(v7 + 32));
  char v16 = (uint64_t *)((char *)v3 + *(int *)(v11 + 40));
  uint64_t v17 = *v16;
  uint64_t v18 = v16[1];
  *uint64_t v9 = v13;
  v9[1] = v12;
  _OWORD v9[2] = v14;
  double v9[3] = v15;
  uint64_t v19 = (void *)((char *)v9 + *(int *)(v7 + 36));
  void *v19 = v17;
  v19[1] = v18;
  uint64_t v20 = *v3;
  uint64_t v21 = v3[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_100217CCC((uint64_t)v3);
  *(void *)uint64_t v2 = v20;
  *(void *)(v2 + 8) = v21;
  *(void *)(v2 + 16) = 0x656D6F6D72656874;
  *(void *)(v2 + 24) = 0xEB00000000726574;
  *(unsigned char *)(v2 + 32) = 0;
  *(void *)(v2 + 40) = 0;
  *(void *)(v2 + 48) = 0;
  swift_storeEnumTagMultiPayload();
  char v22 = (int *)type metadata accessor for LocationComponentContainerViewModel();
  uint64_t v23 = v31;
  sub_10004F574((uint64_t)v9, v31 + v22[5], (void (*)(void))type metadata accessor for FeelsLikeComponentViewModel);
  type metadata accessor for LocationComponentViewModel();
  swift_storeEnumTagMultiPayload();
  uint64_t v24 = v23 + v22[7];
  uint64_t v25 = *(int *)(sub_10017DF08(&qword_100E66488) + 48);
  type metadata accessor for TemperatureChartKind();
  sub_100162E4C();
  sub_1001631E8();
  v26();
  type metadata accessor for DetailCondition();
  sub_100162E4C();
  sub_1001631E8();
  v27();
  *(unsigned char *)(v24 + v25) = 0;
  uint64_t v28 = type metadata accessor for LocationComponentAction(0);
  swift_storeEnumTagMultiPayload();
  _s7Weather24LocationCompositionStateOwst_0(v24, 0, 1, v28);
  uint64_t result = sub_10004F574(v2, v23, (void (*)(void))type metadata accessor for LocationComponentHeaderViewModel);
  *(_WORD *)(v23 + v22[6]) = 256;
  return result;
}

uint64_t sub_10004F574(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(a2, a1);
  return a2;
}

uint64_t sub_10004F5D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v36 = a1;
  uint64_t v39 = a2;
  uint64_t v2 = type metadata accessor for LocationComponentHeaderViewModel(0);
  uint64_t v3 = __chkstk_darwin(v2);
  char v38 = (char *)v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v5 = type metadata accessor for LocationComponentHeaderMetrics(0);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  __chkstk_darwin(v6);
  uint64_t v35 = sub_10017DF08(&qword_100E84478);
  __chkstk_darwin(v35);
  uint64_t v8 = (char *)v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = sub_10017DF08(&qword_100E84480);
  __chkstk_darwin(v37);
  uint64_t v10 = (char *)v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v34 = static Edge.Set.top.getter();
  if (qword_100E62230 != -1) {
    swift_once();
  }
  sub_1005D284C();
  sub_1001EC0BC();
  swift_getEnumCaseMultiPayload();
  v33[1] = v2;
  sub_1001F75CC();
  sub_1001F75CC();
  EdgeInsets.init(_all:)();
  uint64_t v12 = v11;
  uint64_t v14 = v13;
  uint64_t v16 = v15;
  uint64_t v18 = v17;
  uint64_t v19 = sub_10017DF08(&qword_100E84488);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v19 - 8) + 16))(v8, v36, v19);
  uint64_t v20 = &v8[*(int *)(v35 + 36)];
  char *v20 = v34;
  *((void *)v20 + 1) = v12;
  *((void *)v20 + 2) = v14;
  *((void *)v20 + 3) = v16;
  *((void *)v20 + 4) = v18;
  unsigned char v20[40] = 0;
  char v21 = static Edge.Set.bottom.getter();
  sub_1005D284C();
  sub_1001EC0BC();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  sub_1001F75CC();
  sub_1001F75CC();
  if (EnumCaseMultiPayload != 1 && qword_100E62238 != -1) {
    swift_once();
  }
  EdgeInsets.init(_all:)();
  uint64_t v24 = v23;
  uint64_t v26 = v25;
  uint64_t v28 = v27;
  uint64_t v30 = v29;
  sub_1005EFB58((uint64_t)v8, (uint64_t)v10, &qword_100E84478);
  uint64_t v31 = &v10[*(int *)(v37 + 36)];
  char *v31 = v21;
  *((void *)v31 + 1) = v24;
  *((void *)v31 + 2) = v26;
  *((void *)v31 + 3) = v28;
  *((void *)v31 + 4) = v30;
  v31[40] = 0;
  sub_10017DF4C((uint64_t)v8, &qword_100E84478);
  return sub_10024D364((uint64_t)v10, v39, &qword_100E84480);
}

uint64_t sub_10004FA2C@<X0>(void *a1@<X0>, uint64_t (**a2)@<X0>(uint64_t *a1@<X8>)@<X8>)
{
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E81B08);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (result)
  {
    *a2 = sub_1000F0A5C;
    a2[1] = (uint64_t (*)@<X0>(uint64_t *@<X8>))result;
    a2[2] = (uint64_t (*)@<X0>(uint64_t *@<X8>))sub_1000DA138;
    a2[3] = (uint64_t (*)@<X0>(uint64_t *@<X8>))result;
    return swift_retain();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10004FAC0(void *a1)
{
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E7CD28);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v23)
  {
    __break(1u);
    goto LABEL_10;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E7CD30);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v21)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E90C60);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v19)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E6FC60);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v17)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E90C68);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v15)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E8DE58);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v13)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E8DE60);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v11)
  {
    uint64_t v3 = sub_1000DF0C4((uint64_t)v20, v21);
    __n128 v4 = __chkstk_darwin(v3);
    uint64_t v6 = (uint64_t *)((char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, __n128))(v7 + 16))(v6, v4);
    uint64_t v8 = sub_10021F654(&v22, *v6, &v18, &v16, &v14, &v12, 0, &v10);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v20);
    return v8;
  }
LABEL_15:
  __break(1u);
  return result;
}

uint64_t sub_10004FD8C(uint64_t a1, void (*a2)(char *, uint64_t, uint64_t), double a3, float a4)
{
  uint64_t v43 = a2;
  uint64_t v7 = sub_10017DF08(&qword_100EAA930);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (void (*)(char *, uint64_t, uint64_t))((char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = sub_10017DF08(&qword_100EB3360);
  __chkstk_darwin(v10 - 8);
  long long v12 = (char *)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_10017DF08(&qword_100E64A60);
  uint64_t v14 = __chkstk_darwin(v13 - 8);
  long long v16 = (char *)&v43 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  long long v18 = (char *)&v43 - v17;
  uint64_t v19 = type metadata accessor for WeatherConditionBackgroundModel();
  uint64_t v20 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  long long v22 = (char *)&v43 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = (int *)type metadata accessor for WeatherConditionBackgroundModifier(0);
  uint64_t v24 = (uint64_t *)(a1 + v23[28]);
  uint64_t v26 = *v24;
  uint64_t v25 = v24[1];
  uint64_t v44 = v26;
  uint64_t v45 = v25;
  sub_10017DF08(&qword_100EB4A88);
  State.wrappedValue.getter();
  sub_10001F54C((uint64_t)v18);
  swift_release();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v18, 1, v19) == 1) {
    return sub_100178110((uint64_t)v18, &qword_100E64A60);
  }
  (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v22, v18, v19);
  uint64_t v28 = (uint64_t *)(a1 + v23[21]);
  uint64_t v30 = *v28;
  uint64_t v29 = v28[1];
  uint64_t v44 = v30;
  uint64_t v45 = v29;
  sub_10017DF08(&qword_100EB4A78);
  State.wrappedValue.getter();
  int v31 = *(unsigned __int8 *)(*(void *)&v46 + 16);
  swift_release();
  if (v31 == 1)
  {
    char v33 = (uint64_t *)(a1 + v23[22]);
    uint64_t v34 = *v33;
    uint64_t v35 = v33[1];
    uint64_t v44 = v34;
    uint64_t v45 = v35;
    sub_10017DF08(&qword_100EB4AB8);
    State.wrappedValue.getter();
    v32.n128_f64[0] = v46;
    if (v46 == a3)
    {
      sub_10017DF08(&qword_100EB4860);
      State.wrappedValue.getter();
      uint64_t v36 = type metadata accessor for DynamicTypeSize();
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v12, 1, 1, v36);
      uint64_t v37 = type metadata accessor for TargetWindowSizeClass();
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v9, 1, 1, v37);
      sub_1000FDF14((uint64_t)v16, (uint64_t)v22, (uint64_t)v12, v9, LODWORD(a4), v43);
      sub_100178110((uint64_t)v9, &qword_100EAA930);
      sub_100178110((uint64_t)v12, &qword_100EB3360);
      sub_100178110((uint64_t)v16, &qword_100E64A60);
      uint64_t v38 = a1 + v23[25];
      uint64_t v39 = *(void *)v38;
      char v40 = *(unsigned char *)(v38 + 8);
      sub_100195B7C(*(void *)v38, v40);
      sub_100149AE8();
      char v42 = v41;
      sub_10018F6D8(v39, v40);
      sub_100079A9C((uint64_t)v22, v42 & 1, *(unsigned __int8 *)(a1 + v23[16]));
    }
  }
  return (*(uint64_t (**)(char *, uint64_t, __n128))(v20 + 8))(v22, v19, v32);
}

uint64_t sub_100050170()
{
  uint64_t v1 = type metadata accessor for Location();
  sub_100164920(v1);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v5 = *(void *)(v4 + 64);
  uint64_t v6 = type metadata accessor for WeatherData(0);
  sub_100164920(v6);
  unint64_t v8 = (v3 + v5 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v10 = *(void *)(v9 + 64);
  uint64_t v11 = type metadata accessor for PreprocessedWeatherData();
  sub_100164920(v11);
  unint64_t v13 = (v8 + v10 + *(unsigned __int8 *)(v12 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  uint64_t v15 = *(void *)(v14 + 64);
  uint64_t v16 = type metadata accessor for NewsDataModel();
  sub_1001627C0(v16);
  uint64_t v18 = *(void *)(v0 + 16);
  char v19 = *(unsigned char *)(v0 + 24);
  uint64_t v20 = *(void *)(v0 + 32);
  uint64_t v21 = v0 + ((v13 + v15 + *(unsigned __int8 *)(v17 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80));

  return sub_1000840BC(v18, v19, v20, v0 + v3, (uint64_t *)(v0 + v8), v0 + v13, v21);
}

uint64_t sub_10005027C(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v55 = a5;
  uint64_t v47 = a4;
  uint64_t v53 = a3;
  int v56 = a1;
  LODWORD(v57) = a1 & 1;
  uint64_t v54 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v46 = *(void *)(v54 - 8);
  __chkstk_darwin(v54);
  uint64_t v50 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DispatchQoS();
  uint64_t v51 = *(void *)(v8 - 8);
  uint64_t v52 = v8;
  __chkstk_darwin(v8);
  uint64_t v49 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for DispatchTime();
  uint64_t v48 = *(void *)(v10 - 8);
  uint64_t v11 = __chkstk_darwin(v10);
  unint64_t v13 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v40 - v14;
  uint64_t v16 = type metadata accessor for LocationViewModel();
  uint64_t v45 = *(void *)(v16 - 8);
  uint64_t v17 = *(void *)(v45 + 64);
  uint64_t v18 = __chkstk_darwin(v16);
  __chkstk_darwin(v18);
  uint64_t v20 = (char *)&v40 - v19;
  int v21 = *(unsigned __int8 *)(v5 + 16);
  sub_1001372AC();
  if (v21 == v57) {
    return sub_100133888((uint64_t)v20, (void (*)(void))type metadata accessor for LocationViewModel);
  }
  char v42 = v13;
  uint64_t v43 = a2;
  uint64_t v44 = v15;
  uint64_t v23 = v54;
  uint64_t v22 = v55;
  uint64_t v57 = v10;
  char v24 = v56;
  uint64_t v25 = v5;
  char v26 = v20[*(int *)(v16 + 52)];
  uint64_t result = sub_100133888((uint64_t)v20, (void (*)(void))type metadata accessor for LocationViewModel);
  if (v26)
  {
    uint64_t v28 = v25;
    uint64_t v29 = v53;
    if (v24)
    {
      sub_1001AB3E0();
      uint64_t v40 = static OS_dispatch_queue.main.getter();
      uint64_t v30 = v42;
      static DispatchTime.now()();
      + infix(_:_:)();
      char v41 = *(void (**)(char *, uint64_t))(v48 + 8);
      v41(v30, v57);
      sub_1001372AC();
      unint64_t v31 = (v17 + ((*(unsigned __int8 *)(v45 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v45 + 80)) + 7) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v32 = swift_allocObject();
      uint64_t v48 = v25;
      uint64_t v33 = v32;
      uint64_t v34 = v47;
      *(void *)(v32 + 16) = v29;
      *(void *)(v32 + 24) = v34;
      sub_1001372F4();
      *(void *)(v33 + v31) = v22;
      aBlock[4] = sub_10033DDD8;
      aBlock[5] = v33;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_10010A4D4;
      void aBlock[3] = &unk_100E11718;
      uint64_t v35 = _Block_copy(aBlock);
      swift_unknownObjectRetain();
      swift_retain();
      uint64_t v36 = v49;
      static DispatchQoS.unspecified.getter();
      uint64_t v58 = _swiftEmptyArrayStorage;
      sub_100128B54((unint64_t *)&qword_100EA0200, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
      sub_10017DF08(&qword_100E75530);
      sub_1001246C8((unint64_t *)&qword_100EA0210, &qword_100E75530);
      uint64_t v37 = v50;
      uint64_t v28 = v48;
      dispatch thunk of SetAlgebra.init<A>(_:)();
      uint64_t v38 = v44;
      uint64_t v39 = (void *)v40;
      OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
      _Block_release(v35);

      char v24 = v56;
      (*(void (**)(char *, uint64_t))(v46 + 8))(v37, v23);
      (*(void (**)(char *, uint64_t))(v51 + 8))(v36, v52);
      v41(v38, v57);
      uint64_t result = swift_release();
    }
    else
    {
      sub_1008CF810(v43);
      *(unsigned char *)(v22 + 72) = 0;
      uint64_t result = sub_100BC5520();
    }
    *(unsigned char *)(v28 + 16) = v24 & 1;
  }
  return result;
}

void sub_100050864()
{
  sub_100162EA0();
  uint64_t v28 = v1;
  uint64_t v29 = v2;
  uint64_t v4 = v3;
  uint64_t v26 = v5;
  uint64_t v27 = v6;
  uint64_t v24 = v7;
  uint64_t v25 = v8;
  uint64_t v23 = v9;
  uint64_t v22 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  sub_100179C0C();
  uint64_t v11 = v10;
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin(v15);
  uint64_t v16 = type metadata accessor for DispatchQoS();
  __chkstk_darwin(v16 - 8);
  unint64_t v21 = sub_1001AB3E0();
  static DispatchQoS.userInitiated.getter();
  uint64_t v30 = _swiftEmptyArrayStorage;
  sub_100128CBC((unint64_t *)&qword_100E62D18, 255, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_10017DF08(&qword_100E62D20);
  sub_10012470C((unint64_t *)&qword_100E62D28, &qword_100E62D20);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  (*(void (**)(char *, void, uint64_t))(v11 + 104))(v14, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v22);
  v0[14] = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  uint64_t v17 = v24;
  v0[2] = v23;
  v0[3] = v17;
  uint64_t v18 = v26;
  v0[4] = v25;
  v0[5] = v18;
  uint64_t v19 = v28;
  v0[6] = v27;
  v0[7] = v19;
  sub_10020D948((uint64_t)v4, (uint64_t)(v0 + 8));
  v0[13] = v29;
  sub_1001B1E64(v4, v4[3]);
  sub_100128CBC(&qword_100E986F0, v20, (void (*)(uint64_t))type metadata accessor for NotificationSubscriptionMonitor);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  dispatch thunk of NotificationSubscriptionManagerType.addObserver(_:)();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v4);
  sub_100162694();
}

uint64_t sub_100050B68(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ScenePhase();
  uint64_t v49 = *(void *)(v2 - 8);
  uint64_t v50 = v2;
  uint64_t v3 = __chkstk_darwin(v2);
  uint64_t v48 = (char *)&v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v47 = (char *)&v45 - v5;
  uint64_t v6 = type metadata accessor for LocationViewObserverView();
  __chkstk_darwin(v6);
  uint64_t v54 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for Location.Identifier();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v46 = (char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10017DF08(&qword_100E6DD18);
  uint64_t v12 = v11 - 8;
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v45 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t active = type metadata accessor for ActiveLocationModel(0);
  __chkstk_darwin(active - 8);
  uint64_t v17 = (char *)&v45 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_10017DF08(&qword_100E6DC08);
  uint64_t v19 = __chkstk_darwin(v18 - 8);
  uint64_t v51 = (uint64_t)&v45 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v23 = (char *)&v45 - v22;
  __chkstk_darwin(v21);
  uint64_t v25 = (char *)&v45 - v24;
  uint64_t v26 = *(int *)(v6 + 24);
  uint64_t v52 = v9;
  uint64_t v53 = a1 + v26;
  (*(void (**)(char *))(v9 + 16))((char *)&v45 - v24);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v25, 0, 1, v8);
  uint64_t v55 = v6;
  uint64_t v56 = a1;
  swift_retain();
  sub_1001362A4();
  swift_release();
  sub_1001373E4((uint64_t)v17, (uint64_t)v23);
  uint64_t v27 = (uint64_t)&v14[*(int *)(v12 + 56)];
  sub_10006DF38((uint64_t)v25, (uint64_t)v14, &qword_100E6DC08);
  sub_10006DF38((uint64_t)v23, v27, &qword_100E6DC08);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v14, 1, v8) != 1)
  {
    uint64_t v31 = v51;
    sub_10006DF38((uint64_t)v14, v51, &qword_100E6DC08);
    if (_s7Weather24LocationCompositionStateOwet_0(v27, 1, v8) != 1)
    {
      uint64_t v32 = v52;
      uint64_t v33 = v46;
      (*(void (**)(char *, uint64_t, uint64_t))(v52 + 32))(v46, v27, v8);
      sub_100128B54((unint64_t *)&qword_100E63A30, (void (*)(uint64_t))&type metadata accessor for Location.Identifier);
      char v34 = dispatch thunk of static Equatable.== infix(_:_:)();
      uint64_t v35 = *(void (**)(char *, uint64_t))(v32 + 8);
      v35(v33, v8);
      sub_100178110((uint64_t)v23, &qword_100E6DC08);
      sub_100178110((uint64_t)v25, &qword_100E6DC08);
      v35((char *)v31, v8);
      sub_100178110((uint64_t)v14, &qword_100E6DC08);
      uint64_t v29 = v56;
      uint64_t v30 = (uint64_t)v54;
      sub_1001372AC();
      if (v34) {
        goto LABEL_8;
      }
LABEL_9:
      sub_100133888(v30, (void (*)(void))type metadata accessor for LocationViewObserverView);
      char v42 = 0;
      goto LABEL_10;
    }
    sub_100178110((uint64_t)v23, &qword_100E6DC08);
    sub_100178110((uint64_t)v25, &qword_100E6DC08);
    (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v31, v8);
    uint64_t v29 = v56;
    uint64_t v30 = (uint64_t)v54;
LABEL_6:
    sub_100178110((uint64_t)v14, &qword_100E6DD18);
    sub_1001372AC();
    goto LABEL_9;
  }
  sub_100178110((uint64_t)v23, &qword_100E6DC08);
  sub_100178110((uint64_t)v25, &qword_100E6DC08);
  int v28 = _s7Weather24LocationCompositionStateOwet_0(v27, 1, v8);
  uint64_t v29 = v56;
  uint64_t v30 = (uint64_t)v54;
  if (v28 != 1) {
    goto LABEL_6;
  }
  sub_100178110((uint64_t)v14, &qword_100E6DC08);
  sub_1001372AC();
LABEL_8:
  uint64_t v36 = v47;
  sub_1000F80DC();
  uint64_t v38 = v48;
  uint64_t v37 = v49;
  uint64_t v39 = v50;
  (*(void (**)(char *, void, uint64_t))(v49 + 104))(v48, enum case for ScenePhase.background(_:), v50);
  sub_100128B54(&qword_100EAA8E0, (void (*)(uint64_t))&type metadata accessor for ScenePhase);
  char v40 = dispatch thunk of static Equatable.== infix(_:_:)();
  char v41 = *(void (**)(char *, uint64_t))(v37 + 8);
  v41(v38, v39);
  v41(v36, v39);
  sub_100133888(v30, (void (*)(void))type metadata accessor for LocationViewObserverView);
  char v42 = v40 ^ 1;
LABEL_10:
  uint64_t v43 = v55;
  type metadata accessor for LocationViewObserverViewState();
  sub_100128B54(&qword_100E6DD20, (void (*)(uint64_t))type metadata accessor for LocationViewObserverViewState);
  StateObject.wrappedValue.getter();
  sub_10005027C(v42 & 1, v53, *(void *)(v29 + *(int *)(v43 + 28)), *(void *)(v29 + *(int *)(v43 + 28) + 8), *(void *)(v29 + *(int *)(v43 + 36)));
  return swift_release();
}

uint64_t sub_100051294(long long *a1, uint64_t a2, long long *a3, long long *a4, long long *a5, long long *a6, char a7, long long *a8, uint64_t a9)
{
  uint64_t v32 = type metadata accessor for WeatherConditionBackgroundTimeDataFactory();
  uint64_t v33 = &off_100E19AF8;
  *(void *)&long long v31 = a2;
  uint64_t v15 = a9 + OBJC_IVAR____TtC7Weather20ListViewModelFactory____lazy_storage___listAnimationKind;
  uint64_t v16 = type metadata accessor for Settings.VFX.AnimatedBackgrounds.AnimationKind();
  _s7Weather24LocationCompositionStateOwst_0(v15, 1, 1, v16);
  *(unsigned char *)(a9 + OBJC_IVAR____TtC7Weather20ListViewModelFactory____lazy_storage___allListVfxBackgroundsEnabled) = 2;
  uint64_t v17 = a9 + OBJC_IVAR____TtC7Weather20ListViewModelFactory____lazy_storage___listVfxCellsEnabled;
  *(void *)uint64_t v17 = 0;
  *(unsigned char *)(v17 + 8) = 1;
  uint64_t v18 = a9 + OBJC_IVAR____TtC7Weather20ListViewModelFactory_cachedInput;
  uint64_t v19 = type metadata accessor for ActualListInput(0);
  _s7Weather24LocationCompositionStateOwst_0(v18, 1, 1, v19);
  uint64_t v20 = a9 + OBJC_IVAR____TtC7Weather20ListViewModelFactory_cachedModel;
  uint64_t v21 = type metadata accessor for ListViewModel();
  _s7Weather24LocationCompositionStateOwst_0(v20, 1, 1, v21);
  *(void *)(a9 + OBJC_IVAR____TtC7Weather20ListViewModelFactory_temperatureUnitUsedToPreprocess) = 0;
  *(void *)(a9 + OBJC_IVAR____TtC7Weather20ListViewModelFactory_temperatureUnitUsedByCachedModel) = 0;
  uint64_t v22 = (Swift::String *)(a9 + OBJC_IVAR____TtC7Weather20ListViewModelFactory_myLocationString);
  id v23 = [self mainBundle];
  v34._uint64_t countAndFlagsBits = 0xD000000000000039;
  v34._object = (void *)0x8000000100CAFFA0;
  v24._uint64_t countAndFlagsBits = 0x7461636F4C20794DLL;
  v24._object = (void *)0xEB000000006E6F69;
  v25._uint64_t countAndFlagsBits = 0;
  v25._object = (void *)0xE000000000000000;
  Swift::String v26 = NSLocalizedString(_:tableName:bundle:value:comment:)(v24, (Swift::String_optional)0, (NSBundle)v23, v25, v34);

  *uint64_t v22 = v26;
  uint64_t v27 = OBJC_IVAR____TtC7Weather20ListViewModelFactory_logger;
  sub_1000DBCCC();
  *(void *)(a9 + v27) = OS_os_log.init(subsystem:category:)();
  sub_1001262E4(a1, a9 + OBJC_IVAR____TtC7Weather20ListViewModelFactory_weatherConditionBackgroundModelFactory);
  sub_1001262E4(&v31, a9 + OBJC_IVAR____TtC7Weather20ListViewModelFactory_weatherConditionBackgroundTimeDataFactory);
  sub_1001262E4(a3, a9 + OBJC_IVAR____TtC7Weather20ListViewModelFactory_weatherEventDescriptionStringBuilder);
  sub_1001262E4(a4, a9 + OBJC_IVAR____TtC7Weather20ListViewModelFactory_appConfigurationManager);
  sub_1001262E4(a5, a9 + OBJC_IVAR____TtC7Weather20ListViewModelFactory_listViewTipManager);
  sub_1001262E4(a6, a9 + OBJC_IVAR____TtC7Weather20ListViewModelFactory_notificationsOptInStatusFactory);
  *(unsigned char *)(a9 + OBJC_IVAR____TtC7Weather20ListViewModelFactory_forceDisplayHomeAndWorkUI) = a7;
  sub_1001262E4(a8, a9 + OBJC_IVAR____TtC7Weather20ListViewModelFactory_weatherProviderAttributionCacheManager);
  return a9;
}

uint64_t sub_10005154C(void *a1)
{
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E8DE48);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (result)
  {
    uint64_t v3 = result;
    sub_1001B1E64(a1, a1[3]);
    sub_10017DF08(&qword_100E6FC60);
    uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
    if (v6)
    {
      type metadata accessor for FeelsLikeComponentViewModelFactory();
      uint64_t v4 = swift_allocObject();
      *(void *)(v4 + 16) = v3;
      sub_1001262E4(&v5, v4 + 24);
      return v4;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_100051628@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E6FC60);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v9)
  {
    sub_1001B1E64(a1, a1[3]);
    sub_10017DF08(&qword_100E8DE50);
    uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
    if (v7)
    {
      a2[3] = (uint64_t)&type metadata for MapOverlayKindProvider;
      a2[4] = (uint64_t)&off_100E1D390;
      uint64_t v5 = swift_allocObject();
      *a2 = v5;
      sub_1001262E4(&v8, v5 + 16);
      return sub_1001262E4(&v6, v5 + 56);
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_100051728@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E80798);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v18)
  {
    __break(1u);
    goto LABEL_6;
  }
  sub_1001262E4(&v17, (uint64_t)v19);
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E80780);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v16)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  sub_1001262E4(&v15, (uint64_t)&v17);
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E80788);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v14)
  {
    sub_1001262E4(&v13, (uint64_t)&v15);
    sub_10020D948((uint64_t)v19, (uint64_t)&v13);
    sub_10020D948((uint64_t)&v17, (uint64_t)v12);
    sub_10020D948((uint64_t)&v15, (uint64_t)v10);
    uint64_t v5 = sub_1000DF0C4((uint64_t)v10, v11);
    __chkstk_darwin(v5);
    uint64_t v7 = &v10[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
    (*(void (**)(unsigned char *))(v8 + 16))(v7);
    uint64_t v9 = sub_100009AE8((uint64_t)&v13, (uint64_t)v12, (uint64_t)v7);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v10);
    a2[3] = type metadata accessor for WeatherDataVisibleLocationLoadingTelemetry();
    a2[4] = (uint64_t)&off_100E3C1E8;
    *a2 = v9;
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)&v15);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)&v17);
    return _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v19);
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_100051958@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  sub_1001B1E64(a1, a1[3]);
  uint64_t v4 = type metadata accessor for LocationAuthorizationReducer();
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!result)
  {
    __break(1u);
    goto LABEL_7;
  }
  void v34[3] = v4;
  v34[4] = &off_100E166B8;
  v34[0] = result;
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E98088);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v33)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E980A8);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v31)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E980B0);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v29)
  {
    uint64_t v6 = sub_1000DF0C4((uint64_t)v34, v4);
    __n128 v7 = __chkstk_darwin(v6);
    uint64_t v9 = (uint64_t *)&v28[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
    (*(void (**)(uint64_t *, __n128))(v10 + 16))(v9, v7);
    uint64_t v11 = sub_1000DF0C4((uint64_t)v32, v33);
    __n128 v12 = __chkstk_darwin(v11);
    uint64_t v14 = (uint64_t *)&v28[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
    (*(void (**)(uint64_t *, __n128))(v15 + 16))(v14, v12);
    uint64_t v16 = sub_1000DF0C4((uint64_t)v30, v31);
    __n128 v17 = __chkstk_darwin(v16);
    uint64_t v19 = (uint64_t *)&v28[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
    (*(void (**)(uint64_t *, __n128))(v20 + 16))(v19, v17);
    uint64_t v21 = sub_1000DF0C4((uint64_t)v28, v29);
    __n128 v22 = __chkstk_darwin(v21);
    Swift::String v24 = (uint64_t **)&v28[-((v23 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
    (*(void (**)(uint64_t **, __n128))(v25 + 16))(v24, v22);
    Swift::String v26 = sub_1000382CC(*v9, *v14, *v19, *v24);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v28);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v30);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v32);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v34);
    uint64_t result = type metadata accessor for EnvironmentReducer();
    a2[3] = result;
    a2[4] = &off_100E2BEC0;
    *a2 = v26;
    return result;
  }
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_100051D74(void *a1)
{
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E8DDF8);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v11)
  {
    uint64_t v2 = sub_1000DF0C4((uint64_t)v10, v11);
    __chkstk_darwin(v2);
    (*(void (**)(void))(v3 + 16))();
    uint64_t v8 = &type metadata for AveragesStringBuilder;
    uint64_t v9 = &off_100E1A978;
    type metadata accessor for AveragesComponentViewModelFactory();
    uint64_t v4 = swift_allocObject();
    uint64_t v5 = sub_1000DF0C4((uint64_t)v7, (uint64_t)&type metadata for AveragesStringBuilder);
    __chkstk_darwin(v5);
    (*(void (**)(void))(v6 + 16))();
    *(void *)(v4 + 40) = &type metadata for AveragesStringBuilder;
    *(void *)(v4 + 48) = &off_100E1A978;
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v7);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v10);
    return v4;
  }
  else
  {
    __break(1u);
  }
  return result;
}

#error "1000520A0: call analysis failed (funcsize=93)"

uint64_t sub_1000520D4()
{
  uint64_t v32 = type metadata accessor for Font.Leading();
  uint64_t v1 = *(void *)(v32 - 8);
  __chkstk_darwin(v32);
  uint64_t v3 = &v29[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v4 = type metadata accessor for Font.TextStyle();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  __n128 v7 = &v29[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = (uint64_t *)(v0 + *(int *)(type metadata accessor for DailyForecastComponentViewModel(0) + 36));
  uint64_t v9 = v8[1];
  uint64_t v33 = *v8;
  uint64_t v34 = v9;
  sub_10014A85C();
  swift_bridgeObjectRetain();
  uint64_t v10 = Text.init<A>(_:)();
  uint64_t v12 = v11;
  int v30 = v13;
  uint64_t v31 = v14;
  uint64_t v15 = v0 + *(int *)(type metadata accessor for DailyComponentView(0) + 36);
  uint64_t v16 = *(void *)v15;
  char v17 = *(unsigned char *)(v15 + 8);
  sub_100195B7C(*(void *)v15, v17);
  sub_100149AE8();
  char v19 = v18;
  sub_10018F6D8(v16, v17);
  uint64_t v20 = (unsigned int *)&enum case for Font.TextStyle.body(_:);
  if ((v19 & 1) == 0) {
    uint64_t v20 = (unsigned int *)&enum case for Font.TextStyle.title3(_:);
  }
  (*(void (**)(unsigned char *, void, uint64_t))(v5 + 104))(v7, *v20, v4);
  static Font.Weight.medium.getter();
  static Font.system(_:weight:)();
  (*(void (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
  uint64_t v21 = v32;
  (*(void (**)(unsigned char *, void, uint64_t))(v1 + 104))(v3, enum case for Font.Leading.tight(_:), v32);
  Font.leading(_:)();
  swift_release();
  (*(void (**)(unsigned char *, uint64_t))(v1 + 8))(v3, v21);
  LOBYTE(v21) = v30 & 1;
  uint64_t v22 = Text.font(_:)();
  uint64_t v24 = v23;
  char v26 = v25;
  swift_release();
  sub_100191924(v10, v12, v21);
  swift_bridgeObjectRelease();
  uint64_t v27 = Text.monospacedDigit()();
  sub_100191924(v22, v24, v26 & 1);
  swift_bridgeObjectRelease();
  return v27;
}

uint64_t sub_1000523F4()
{
  uint64_t v32 = type metadata accessor for Font.Leading();
  uint64_t v1 = *(void *)(v32 - 8);
  __chkstk_darwin(v32);
  uint64_t v3 = &v29[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v4 = type metadata accessor for Font.TextStyle();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  __n128 v7 = &v29[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = (uint64_t *)(v0 + *(int *)(type metadata accessor for DailyForecastComponentViewModel(0) + 32));
  uint64_t v9 = v8[1];
  uint64_t v33 = *v8;
  uint64_t v34 = v9;
  sub_10014A85C();
  swift_bridgeObjectRetain();
  uint64_t v10 = Text.init<A>(_:)();
  uint64_t v12 = v11;
  int v30 = v13;
  uint64_t v31 = v14;
  uint64_t v15 = v0 + *(int *)(type metadata accessor for DailyComponentView(0) + 36);
  uint64_t v16 = *(void *)v15;
  char v17 = *(unsigned char *)(v15 + 8);
  sub_100195B7C(*(void *)v15, v17);
  sub_100149AE8();
  char v19 = v18;
  sub_10018F6D8(v16, v17);
  uint64_t v20 = (unsigned int *)&enum case for Font.TextStyle.body(_:);
  if ((v19 & 1) == 0) {
    uint64_t v20 = (unsigned int *)&enum case for Font.TextStyle.title3(_:);
  }
  (*(void (**)(unsigned char *, void, uint64_t))(v5 + 104))(v7, *v20, v4);
  static Font.Weight.medium.getter();
  static Font.system(_:weight:)();
  (*(void (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
  uint64_t v21 = v32;
  (*(void (**)(unsigned char *, void, uint64_t))(v1 + 104))(v3, enum case for Font.Leading.tight(_:), v32);
  Font.leading(_:)();
  swift_release();
  (*(void (**)(unsigned char *, uint64_t))(v1 + 8))(v3, v21);
  LOBYTE(v21) = v30 & 1;
  uint64_t v22 = Text.font(_:)();
  uint64_t v24 = v23;
  char v26 = v25;
  swift_release();
  sub_100191924(v10, v12, v21);
  swift_bridgeObjectRelease();
  uint64_t v27 = Text.monospacedDigit()();
  sub_100191924(v22, v24, v26 & 1);
  swift_bridgeObjectRelease();
  return v27;
}

uint64_t sub_100052714()
{
  ProxyContainer.public.getter();
  sub_10017DF08(&qword_100EADA68);
  sub_100179D0C();
  swift_release();
  swift_release();
  ProxyContainer.public.getter();
  sub_10017DF08(&qword_100E98160);
  sub_100179D0C();
  swift_release();
  swift_release();
  ProxyContainer.public.getter();
  sub_10017DF08(&qword_100E90C70);
  sub_100179D0C();
  swift_release();
  swift_release();
  ProxyContainer.private.getter();
  RegistrationContainer.lazy(block:)();

  return swift_release();
}

uint64_t sub_100052824()
{
  ProxyContainer.public.getter();
  sub_10017DF08(&qword_100E6CEF0);
  sub_100179D0C();
  swift_release();
  swift_release();
  ProxyContainer.public.getter();
  sub_10017DF08(&qword_100E6CEF8);
  sub_100179D0C();
  swift_release();
  swift_release();
  ProxyContainer.public.getter();
  sub_100179D0C();
  swift_release();
  swift_release();
  ProxyContainer.private.getter();
  RegistrationContainer.lazy(block:)();

  return swift_release();
}

uint64_t sub_100052930()
{
  ProxyContainer.public.getter();
  sub_10017DF08(&qword_100E71008);
  sub_100179D0C();
  swift_release();
  swift_release();
  ProxyContainer.public.getter();
  sub_10017DF08(&qword_100E98170);
  sub_100179D0C();
  swift_release();
  swift_release();
  ProxyContainer.public.getter();
  sub_10017DF08(&qword_100EA6110);
  sub_100179D0C();
  swift_release();
  swift_release();
  ProxyContainer.private.getter();
  RegistrationContainer.lazy(block:)();

  return swift_release();
}

uint64_t sub_100052A40(uint64_t a1, uint64_t a2, int *a3)
{
  char v6 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v6;
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    uint64_t v7 = a3[5];
    uint64_t v8 = (_OWORD *)(a1 + v7);
    uint64_t v9 = (_OWORD *)(a2 + v7);
    sub_100178110(a1 + v7, &qword_100E63D98);
    sub_10017DF08(&qword_100E63D98);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *uint64_t v8 = *v9;
      v8[1] = v9[1];
      void v8[2] = v9[2];
      void v8[3] = v9[3];
      uint64_t v10 = *(int *)(type metadata accessor for LocationHeaderViewMeasurements(0) + 32);
      uint64_t v11 = (char *)v8 + v10;
      uint64_t v12 = (char *)v9 + v10;
      *(void *)uint64_t v11 = *(void *)((char *)v9 + v10);
      *((void *)v11 + 1) = *(void *)((char *)v9 + v10 + 8);
      v11[16] = *((unsigned char *)v9 + v10 + 16);
      v11[17] = *((unsigned char *)v9 + v10 + 17);
      v11[18] = *((unsigned char *)v9 + v10 + 18);
      uint64_t v13 = *(int *)(type metadata accessor for DisplayMetrics() + 36);
      uint64_t v14 = &v11[v13];
      uint64_t v15 = &v12[v13];
      uint64_t v16 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
    }
    else
    {
      *(void *)uint64_t v8 = *(void *)v9;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  *(unsigned char *)(a1 + a3[6]) = *(unsigned char *)(a2 + a3[6]);
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  uint64_t v17 = a3[8];
  char v18 = (void *)(a1 + v17);
  char v19 = (void *)(a2 + v17);
  *char v18 = *v19;
  v18[1] = v19[1];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_100052C00()
{
  ProxyContainer.public.getter();
  sub_10017DF08(&qword_100E7CCD8);
  sub_100179D0C();
  swift_release();
  swift_release();
  ProxyContainer.public.getter();
  sub_10017DF08(&qword_100E7CCE0);
  sub_100179D0C();
  swift_release();
  swift_release();
  ProxyContainer.public.getter();
  sub_10017DF08(&qword_100E7CCE8);
  sub_100179D0C();
  swift_release();
  swift_release();
  ProxyContainer.private.getter();
  RegistrationContainer.lazy(block:)();

  return swift_release();
}

uint64_t sub_100052D10()
{
  ProxyContainer.public.getter();
  sub_10017DF08(&qword_100E6FC38);
  sub_100179D0C();
  swift_release();
  swift_release();
  ProxyContainer.public.getter();
  sub_10017DF08(&qword_100E6FC40);
  sub_100179D0C();
  swift_release();
  swift_release();
  ProxyContainer.public.getter();
  sub_10017DF08(&qword_100E6FC48);
  sub_100179D0C();
  swift_release();
  swift_release();
  ProxyContainer.private.getter();
  RegistrationContainer.lazy(block:)();

  return swift_release();
}

uint64_t sub_100052E20()
{
  ProxyContainer.public.getter();
  sub_10017DF08(&qword_100E7CF78);
  sub_100179D0C();
  swift_release();
  swift_release();
  ProxyContainer.public.getter();
  sub_10017DF08(&qword_100E907B0);
  sub_100179D0C();
  swift_release();
  swift_release();
  ProxyContainer.public.getter();
  sub_10017DF08(&qword_100E907B8);
  sub_100179D0C();
  swift_release();
  swift_release();
  ProxyContainer.private.getter();
  RegistrationContainer.lazy(block:)();

  return swift_release();
}

void *sub_100052F30(void *(*a1)(uint64_t *__return_ptr, uint64_t, __n128), uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t *))
{
  void (*v23)(void *__return_ptr);
  char v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  void (*v38)(uint64_t *);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41[3];
  uint64_t v42;
  uint64_t vars8;

  uint64_t v38 = a5;
  uint64_t v39 = sub_10017DF08(&qword_100E64B40);
  __chkstk_darwin(v39);
  uint64_t v9 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10017DF08(&qword_100E64B48);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for MainViewModel(0);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v17 = __chkstk_darwin(v16);
  char v19 = (char *)&v37 - v18;
  uint64_t result = a1(v41, a3 + 64, v17);
  uint64_t v21 = v41[0];
  if (!v41[0]) {
    return result;
  }
  uint64_t v37 = (uint64_t *)v9;
  char v42 = v41[0];
  swift_retain();
  uint64_t v22 = a4;
  uint64_t v23 = sub_10002118C();
  if (v23)
  {
    if ((void (*)(void *__return_ptr))v21 == v23) {
      return (void *)swift_release_n();
    }
    type metadata accessor for MainState._Storage(0);
    swift_retain_n();
    sub_10011796C();
    char v25 = v24;
    swift_release_n();
    swift_release();
    if (v25)
    {
      return (void *)swift_release();
    }
  }
  else
  {
    swift_release();
  }
  v38(&v42);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v12, 1, v13) == 1)
  {
    sub_1001781AC((uint64_t)v12, &qword_100E64B48);
    char v26 = a4;
LABEL_13:
    uint64_t v29 = v37;
    sub_10017DF08(&qword_100E64B50);
    *uint64_t v29 = v42;
    swift_retain();
    sub_1001BFD60();
    swift_release();
    swift_storeEnumTagMultiPayload();
    int v30 = v26 + *(void *)(*(void *)v26 + 120);
    swift_beginAccess();
    sub_1001DF004((uint64_t)v29, v30, &qword_100E64B40);
    return (void *)swift_endAccess();
  }
  uint64_t v27 = (uint64_t)v19;
  sub_1001522B4();
  char v26 = v22;
  sub_1001BFD60();
  int v28 = sub_10004762C(v19, v15);
  sub_1001524C8((uint64_t)v15, (void (*)(void))type metadata accessor for MainViewModel);
  if (v28)
  {
    sub_1001524C8((uint64_t)v19, (void (*)(void))type metadata accessor for MainViewModel);
    goto LABEL_13;
  }
  uint64_t v31 = v37;
  if (qword_100E62828 != -1) {
    swift_once();
  }
  uint64_t v32 = type metadata accessor for Logger();
  sub_1002102B0(v32, (uint64_t)qword_100F51F80);
  uint64_t v33 = Logger.logObject.getter();
  uint64_t v34 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v33, v34))
  {
    uint64_t v35 = swift_slowAlloc();
    v41[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v35 = 136446466;
    char v40 = sub_10016414C(0x746174536E69614DLL, 0xE900000000000065, v41);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v35 + 12) = 2082;
    char v40 = sub_10016414C(0x776569566E69614DLL, 0xED00006C65646F4DLL, v41);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v33, v34, "Selector observed model difference for %{public}s, %{public}s; views will update",
      (uint8_t *)v35,
      0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  sub_10017DF08(&qword_100E64B50);
  char *v31 = v42;
  sub_100136460();
  swift_storeEnumTagMultiPayload();
  uint64_t v36 = v26 + *(void *)(*(void *)v26 + 120);
  swift_beginAccess();
  swift_retain();
  sub_1001DF004((uint64_t)v31, v36, &qword_100E64B40);
  swift_endAccess();
  sub_10017DF08(&qword_100E64B58);
  sub_1001246C8(&qword_100EAA6D0, &qword_100E64B58);
  ObservableObject<>.objectWillChange.getter();
  ObservableObjectPublisher.send()();
  swift_release();
  sub_1001524C8(v27, (void (*)(void))type metadata accessor for MainViewModel);
  return (void *)swift_release();
}

uint64_t sub_10005359C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)a2;
  uint64_t v7 = *(void *)(a2 + 8);
  uint64_t v8 = *(void *)(a2 + 16);
  uint64_t v9 = *(void *)(a2 + 24);
  char v10 = *(unsigned char *)(a2 + 32);
  sub_100190CD4(*(void *)a2, v7, v8, v9, v10);
  uint64_t v11 = *(void *)a1;
  uint64_t v12 = *(void *)(a1 + 8);
  uint64_t v13 = *(void *)(a1 + 16);
  uint64_t v14 = *(void *)(a1 + 24);
  char v15 = *(unsigned char *)(a1 + 32);
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v7;
  *(void *)(a1 + 16) = v8;
  *(void *)(a1 + 24) = v9;
  *(unsigned char *)(a1 + 32) = v10;
  sub_100191934(v11, v12, v13, v14, v15);
  if (a1 != a2)
  {
    uint64_t v16 = *(int *)(a3 + 20);
    __n128 v17 = (void *)(a1 + v16);
    uint64_t v18 = (void *)(a2 + v16);
    sub_10017DF4C(a1 + v16, &qword_100EAA740);
    sub_10017DF08(&qword_100EAA740);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v19 = type metadata accessor for ScenePhase();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
    }
    else
    {
      *__n128 v17 = *v18;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v20 = *(int *)(a3 + 24);
  uint64_t v21 = (void *)(a1 + v20);
  uint64_t v22 = a2 + v20;
  *uint64_t v21 = *(void *)(a2 + v20);
  v21[1] = *(void *)(a2 + v20 + 8);
  uint64_t v23 = *(int *)(type metadata accessor for ContentStatusBannerPresentationMetrics(0) + 20);
  uint64_t v24 = (uint64_t)v21 + v23;
  uint64_t v25 = v22 + v23;
  uint64_t v26 = type metadata accessor for ContentStatusBanner();
  int v27 = _s7Weather24LocationCompositionStateOwet_0(v24, 1, v26);
  int v28 = _s7Weather24LocationCompositionStateOwet_0(v25, 1, v26);
  if (v27)
  {
    if (!v28)
    {
      *(unsigned char *)uint64_t v24 = *(unsigned char *)v25;
      if (*(void *)(v25 + 16) >= 2uLL)
      {
        *(void *)(v24 + 8) = *(void *)(v25 + 8);
        *(void *)(v24 + 16) = *(void *)(v25 + 16);
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(v24 + 8) = *(_OWORD *)(v25 + 8);
      }
      uint64_t v33 = *(int *)(v26 + 24);
      uint64_t v34 = (void *)(v24 + v33);
      uint64_t v35 = (const void *)(v25 + v33);
      uint64_t v36 = type metadata accessor for Date();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v35, 1, v36))
      {
        uint64_t v37 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
        memcpy(v34, v35, *(void *)(*(void *)(v37 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v36 - 8) + 16))(v34, v35, v36);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v34, 0, 1, v36);
      }
      uint64_t v38 = v24;
      uint64_t v39 = v26;
      goto LABEL_22;
    }
    goto LABEL_12;
  }
  if (v28)
  {
    sub_100151660();
LABEL_12:
    size_t v29 = *(void *)(*(void *)(sub_10017DF08(&qword_100E63A10) - 8) + 64);
    int v30 = (void *)v24;
    uint64_t v31 = (const void *)v25;
    goto LABEL_13;
  }
  *(unsigned char *)uint64_t v24 = *(unsigned char *)v25;
  unint64_t v32 = *(void *)(v25 + 16);
  if (*(void *)(v24 + 16) >= 2uLL)
  {
    if (v32 >= 2)
    {
      *(void *)(v24 + 8) = *(void *)(v25 + 8);
      *(void *)(v24 + 16) = *(void *)(v25 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_28;
    }
    sub_10027B4D4(v24 + 8);
    goto LABEL_26;
  }
  if (v32 < 2)
  {
LABEL_26:
    *(_OWORD *)(v24 + 8) = *(_OWORD *)(v25 + 8);
    goto LABEL_28;
  }
  *(void *)(v24 + 8) = *(void *)(v25 + 8);
  *(void *)(v24 + 16) = *(void *)(v25 + 16);
  swift_bridgeObjectRetain();
LABEL_28:
  uint64_t v42 = *(int *)(v26 + 24);
  uint64_t v43 = v24 + v42;
  uint64_t v44 = v25 + v42;
  uint64_t v45 = type metadata accessor for Date();
  int v46 = _s7Weather24LocationCompositionStateOwet_0(v43, 1, v45);
  int v47 = _s7Weather24LocationCompositionStateOwet_0(v44, 1, v45);
  if (v46)
  {
    if (!v47)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v45 - 8) + 16))(v43, v44, v45);
      uint64_t v38 = v43;
      uint64_t v39 = v45;
LABEL_22:
      _s7Weather24LocationCompositionStateOwst_0(v38, 0, 1, v39);
      goto LABEL_23;
    }
  }
  else
  {
    uint64_t v48 = *(void *)(v45 - 8);
    if (!v47)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v48 + 24))(v43, v44, v45);
      goto LABEL_23;
    }
    (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v43, v45);
  }
  size_t v29 = *(void *)(*(void *)(sub_10017DF08((uint64_t *)&unk_100E73CA0) - 8) + 64);
  int v30 = (void *)v43;
  uint64_t v31 = (const void *)v44;
LABEL_13:
  memcpy(v30, v31, v29);
LABEL_23:
  uint64_t v40 = sub_10017DF08(&qword_100E8EF18);
  *(void *)((char *)v21 + *(int *)(v40 + 28)) = *(void *)(v22 + *(int *)(v40 + 28));
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithCopy for LocationTipOverlayModifier(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  uint64_t v4 = *(void *)(a2 + 16);
  char v5 = *(unsigned char *)(a2 + 24);
  sub_100195B7C(v4, v5);
  uint64_t v6 = *(void *)(a1 + 16);
  char v7 = *(unsigned char *)(a1 + 24);
  *(void *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 24) = v5;
  sub_10018F6D8(v6, v7);
  uint64_t v8 = *(void *)(a2 + 32);
  char v9 = *(unsigned char *)(a2 + 40);
  sub_100195B7C(v8, v9);
  uint64_t v10 = *(void *)(a1 + 32);
  char v11 = *(unsigned char *)(a1 + 40);
  *(void *)(a1 + 32) = v8;
  *(unsigned char *)(a1 + 40) = v9;
  sub_10018F6D8(v10, v11);
  uint64_t v12 = *(void *)(a2 + 48);
  uint64_t v13 = *(void *)(a2 + 56);
  char v14 = *(unsigned char *)(a2 + 64);
  sub_100193DD4(v12, v13, v14);
  uint64_t v15 = *(void *)(a1 + 48);
  uint64_t v16 = *(void *)(a1 + 56);
  char v17 = *(unsigned char *)(a1 + 64);
  *(void *)(a1 + 48) = v12;
  *(void *)(a1 + 56) = v13;
  *(unsigned char *)(a1 + 64) = v14;
  sub_10014D82C(v15, v16, v17);
  uint64_t v18 = *(void *)(a2 + 72);
  LOBYTE(v13) = *(unsigned char *)(a2 + 80);
  sub_100195B7C(v18, v13);
  uint64_t v19 = *(void *)(a1 + 72);
  char v20 = *(unsigned char *)(a1 + 80);
  *(void *)(a1 + 72) = v18;
  *(unsigned char *)(a1 + 80) = v13;
  sub_10018F6D8(v19, v20);
  uint64_t v21 = *(void *)(a2 + 88);
  LOBYTE(v13) = *(unsigned char *)(a2 + 96);
  sub_100195B7C(v21, v13);
  uint64_t v22 = *(void *)(a1 + 88);
  char v23 = *(unsigned char *)(a1 + 96);
  *(void *)(a1 + 88) = v21;
  *(unsigned char *)(a1 + 96) = v13;
  sub_10018F6D8(v22, v23);
  *(unsigned char *)(a1 + 97) = *(unsigned char *)(a2 + 97);
  return a1;
}

uint64_t sub_100053B6C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v38 = a1;
  sub_100179C0C();
  uint64_t v34 = v1;
  uint64_t v3 = *(void *)(v2 + 64);
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v6 = *(void *)(v5 + 16);
  uint64_t v35 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = v6;
  uint64_t v7 = v5;
  uint64_t v32 = v5;
  sub_10018C6DC(&qword_100E7D128);
  type metadata accessor for ModifiedContent();
  sub_10018C6DC(&qword_100E7D130);
  sub_10017FE34();
  type metadata accessor for ModifiedContent();
  sub_10018C6DC(&qword_100E7D138);
  sub_10017FE34();
  type metadata accessor for ModifiedContent();
  uint64_t v33 = *(void *)(v7 + 24);
  uint64_t v8 = v33;
  uint64_t v9 = sub_1001246C8(&qword_100E7D140, &qword_100E7D128);
  uint64_t v43 = v8;
  uint64_t v44 = v9;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v11 = sub_1001246C8(&qword_100E7D148, &qword_100E7D130);
  uint64_t v41 = WitnessTable;
  uint64_t v42 = v11;
  uint64_t v12 = swift_getWitnessTable();
  uint64_t v13 = sub_1001246C8(&qword_100E7D150, &qword_100E7D138);
  uint64_t v39 = v12;
  uint64_t v40 = v13;
  swift_getWitnessTable();
  type metadata accessor for GeometryReader();
  uint64_t v31 = swift_getWitnessTable();
  uint64_t v14 = type metadata accessor for WindowGroup();
  sub_100179C0C();
  uint64_t v16 = v15;
  uint64_t v18 = __chkstk_darwin(v17);
  char v20 = (char *)&v31 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v22 = (char *)&v31 - v21;
  uint64_t v24 = v34;
  char v23 = v35;
  uint64_t v25 = v32;
  (*(void (**)(char *, uint64_t, uint64_t))(v34 + 16))(v35, v37, v32);
  unint64_t v26 = (*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
  uint64_t v27 = swift_allocObject();
  uint64_t v28 = v33;
  *(void *)(v27 + 16) = v36;
  *(void *)(v27 + 24) = v28;
  (*(void (**)(unint64_t, char *, uint64_t))(v24 + 32))(v27 + v26, v23, v25);
  sub_1002307A8();
  swift_getWitnessTable();
  (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v22, v20, v14);
  size_t v29 = *(void (**)(char *, uint64_t))(v16 + 8);
  v29(v20, v14);
  static SceneBuilder.buildBlock<A>(_:)();
  return ((uint64_t (*)(char *, uint64_t))v29)(v22, v14);
}

uint64_t sub_100053EF4()
{
  ProxyContainer.public.getter();
  sub_10017DF08(&qword_100E71AF8);
  sub_100179D0C();
  swift_release();
  swift_release();
  ProxyContainer.public.getter();
  sub_10017DF08(&qword_100E71B00);
  sub_100179D0C();
  swift_release();
  swift_release();
  ProxyContainer.public.getter();
  sub_10017DF08(&qword_100E71B08);
  sub_100179D0C();
  swift_release();
  swift_release();
  ProxyContainer.private.getter();
  swift_retain();
  RegistrationContainer.lazy(block:)();
  swift_release();

  return swift_release();
}

void *sub_100054014(void (*a1)(uint64_t *__return_ptr, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v28 = type metadata accessor for WeatherDataConfiguration();
  sub_100179C0C();
  uint64_t v9 = v8;
  __chkstk_darwin(v10);
  sub_1001626E0();
  uint64_t v13 = v12 - v11;
  uint64_t v14 = type metadata accessor for AppConfigurationState();
  __chkstk_darwin(v14 - 8);
  sub_1001626E0();
  uint64_t v17 = v16 - v15;
  uint64_t v18 = type metadata accessor for UnfairLock.Options();
  __chkstk_darwin(v18);
  sub_1001626E0();
  sub_10017DF08(&qword_100E62C98);
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_100C251B0;
  static UnfairLock.Options.dataSynchronization.getter();
  uint64_t v29 = v19;
  sub_1000EF168((unint64_t *)&qword_100E62CA0, (void (*)(uint64_t))&type metadata accessor for UnfairLock.Options);
  sub_10017DF08(&qword_100E62CA8);
  sub_1002161AC();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  type metadata accessor for UnfairLock();
  swift_allocObject();
  uint64_t v20 = UnfairLock.init(options:)();
  v6[6] = &_swiftEmptyDictionarySingleton;
  _OWORD v6[2] = v20;
  v6[3] = a5;
  void v6[4] = a6;
  uint64_t v21 = swift_retain();
  a1(&v29, v21);
  sub_10021F308(v29 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_appConfiguration, v17);
  swift_release();
  AppConfiguration.weatherData.getter();
  uint64_t v22 = type metadata accessor for AppConfiguration();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v22 - 8) + 8))(v17, v22);
  WeatherDataConfiguration.extendedRefreshHintInterval.getter();
  uint64_t v24 = v23;
  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v13, v28);
  v6[5] = v24;
  return v6;
}

uint64_t sub_100054324(uint64_t a1, uint64_t a2)
{
  uint64_t v25 = a2;
  uint64_t v2 = sub_10017DF08(&qword_100E65250);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v24 - v7;
  uint64_t v9 = type metadata accessor for TemperatureDifferenceThresholdDetector();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  TemperatureDifferenceThresholdDetector.init()();
  CurrentWeather.apparentTemperature.getter();
  CurrentWeather.temperature.getter();
  id v13 = [self fahrenheit];
  char v14 = TemperatureDifferenceThresholdDetector.areTemperaturesSignificantlyDifferent(_:_:threshold:thresholdUnit:)();

  uint64_t v15 = *(void (**)(char *, uint64_t))(v3 + 8);
  v15(v6, v2);
  v15(v8, v2);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  uint64_t v16 = 0;
  if (v14)
  {
    id v17 = [self mainBundle];
    v26._object = (void *)0x8000000100CBA290;
    v18._object = (void *)0x8000000100CBA270;
    v18._uint64_t countAndFlagsBits = 0xD00000000000001ALL;
    v19._uint64_t countAndFlagsBits = 0x694C20736C656546;
    v19._object = (void *)0xEE004025203A656BLL;
    v26._uint64_t countAndFlagsBits = 0x1000000000000351;
    NSLocalizedString(_:tableName:bundle:value:comment:)(v18, (Swift::String_optional)0, (NSBundle)v17, v19, v26);

    sub_10017DF08(&qword_100E64020);
    uint64_t v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_100C251B0;
    uint64_t v22 = *(void *)(v25 + 32);
    uint64_t v21 = *(void *)(v25 + 40);
    *(void *)(v20 + 56) = &type metadata for String;
    *(void *)(v20 + 64) = sub_10012B7C0();
    *(void *)(v20 + 32) = v22;
    *(void *)(v20 + 40) = v21;
    swift_bridgeObjectRetain();
    uint64_t v16 = static String.localizedStringWithFormat(_:_:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v16;
}

uint64_t sub_100054648()
{
  uint64_t v0 = type metadata accessor for Scope();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  ProxyContainer.public.getter();
  sub_10017DF08(&qword_100E8DE70);
  sub_100179D0C();
  swift_release();
  uint64_t v2 = *(void (**)(uint64_t))(v1 + 104);
  uint64_t v3 = sub_1001884E0();
  v2(v3);
  Definition.inScope(_:)();
  swift_release();
  swift_release();
  uint64_t v4 = *(void (**)(uint64_t))(v1 + 8);
  uint64_t v5 = sub_10017DC6C();
  v4(v5);
  ProxyContainer.public.getter();
  sub_10017DF08(&qword_100E98168);
  sub_100179D0C();
  swift_release();
  uint64_t v6 = sub_1001884E0();
  v2(v6);
  Definition.inScope(_:)();
  swift_release();
  swift_release();
  uint64_t v7 = sub_10017DC6C();
  return ((uint64_t (*)(uint64_t))v4)(v7);
}

uint64_t sub_1000547E4@<X0>(uint64_t a1@<X8>)
{
  type metadata accessor for LocationWeatherDataState(0);
  sub_100162E4C();
  __chkstk_darwin(v3);
  sub_100162EB8();
  sub_100157394(v1, v1, (void (*)(void))type metadata accessor for LocationWeatherDataState);
  switch(sub_1001D255C())
  {
    case 1u:
      uint64_t v8 = sub_10017DF08(&qword_100E63748);
      uint64_t v9 = v1 + *(int *)(v8 + 48);
      sub_100178C8C(v1 + *(int *)(v8 + 64), a1, (void (*)(void))type metadata accessor for NewsDataModel);
      uint64_t v10 = type metadata accessor for NewsDataModel();
      sub_100182118(v10);
      sub_100156908(v9, (void (*)(void))type metadata accessor for PreprocessedWeatherData);
      return sub_100156908(v1, (void (*)(void))type metadata accessor for WeatherData);
    case 2u:
      sub_100156908(v1, (void (*)(void))type metadata accessor for LocationWeatherDataState);
      goto LABEL_4;
    case 3u:
LABEL_4:
      uint64_t v4 = type metadata accessor for NewsDataModel();
      uint64_t v5 = a1;
      uint64_t v6 = 1;
      return _s7Weather24LocationCompositionStateOwst_0(v5, v6, 1, v4);
    default:
      sub_100178C8C(v1, a1, (void (*)(void))type metadata accessor for NewsDataModel);
      uint64_t v4 = type metadata accessor for NewsDataModel();
      uint64_t v5 = a1;
      uint64_t v6 = 0;
      return _s7Weather24LocationCompositionStateOwst_0(v5, v6, 1, v4);
  }
}

uint64_t sub_100054980@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for LocationViewerViewModel();
  uint64_t v3 = v2 - 8;
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for MeasuredLocationViewerView(0);
  sub_1001520F8();
  uint64_t v6 = *(int *)(v3 + 40);
  int v7 = v5[v6];
  int v8 = v5[v6];
  uint64_t result = sub_100151660();
  BOOL v10 = (v8 - 1) < 2;
  if (v7 < 0) {
    BOOL v10 = v7;
  }
  *a1 = v10;
  return result;
}

double sub_100054A60@<D0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for CoordinateSpace();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  int v7 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for NamedCoordinateSpace();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  static CoordinateSpaceProtocol<>.scrollView.getter();
  GeometryProxy.bounds(of:)();
  double v12 = *(double *)&v45[1];
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  sub_10024D364((uint64_t)v45, (uint64_t)v46, &qword_100E64498);
  double v13 = 0.0;
  if ((v46[32] & 1) == 0) {
    double v13 = v12;
  }
  GeometryProxy.size.getter();
  CGFloat v15 = v14;
  CGFloat v17 = v16;
  double v18 = *(double *)(a1 + 8);
  uint64_t v19 = *(void *)(a1 + 16);
  char v20 = *(unsigned char *)(a1 + 24);
  sub_100195B7C(v19, v20);
  sub_100201DE4();
  double v22 = v21;
  sub_10018F6D8(v19, v20);
  if (v13 >= -v22)
  {
    sub_100195B7C(v19, v20);
    sub_100201DE4();
    sub_10018F6D8(v19, v20);
    CGRect.adding(minY:)();
    v52.origin.CGFloat x = v27;
    v52.origin.CGFloat y = v28;
    v52.size.CGFloat width = v29;
    v52.size.double height = v30;
    v49.origin.CGFloat x = 0.0;
    v49.origin.CGFloat y = 0.0;
    v49.size.CGFloat width = v15;
    v49.size.double height = v17;
    CGRect v50 = CGRectIntersection(v49, v52);
    CGFloat x = v50.origin.x;
    CGFloat y = v50.origin.y;
    CGFloat width = v50.size.width;
    double v31 = v18 - v50.size.height;
    if (v50.size.height >= v18) {
      double v31 = 0.0;
    }
    double v40 = v31;
    if (v50.size.height < v18) {
      double v26 = v50.size.height / v18;
    }
    else {
      double v26 = 1.0;
    }
    if (v50.size.height < v18) {
      double height = v18;
    }
    else {
      double height = v50.size.height;
    }
  }
  else
  {
    v47.origin.CGFloat x = 0.0;
    double v40 = 0.0;
    v47.origin.CGFloat y = 0.0;
    v47.size.CGFloat width = v15;
    v47.size.double height = v17;
    CGRect v48 = CGRectIntegral(v47);
    CGFloat x = v48.origin.x;
    CGFloat y = v48.origin.y;
    CGFloat width = v48.size.width;
    double height = v48.size.height;
    double v26 = 1.0;
  }
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, enum case for CoordinateSpace.global(_:), v4);
  GeometryProxy.frameClippedToScrollViews(in:)();
  CGFloat v32 = v41;
  CGFloat v33 = v42;
  CGFloat v34 = v43;
  CGFloat v35 = v44;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v51.origin.CGFloat x = v32;
  v51.origin.CGFloat y = v33;
  v51.size.CGFloat width = v34;
  v51.size.double height = v35;
  BOOL v36 = CGRectGetHeight(v51) == 0.0;
  *(CGFloat *)a2 = x;
  *(CGFloat *)(a2 + 8) = y;
  *(CGFloat *)(a2 + 16) = width;
  *(double *)(a2 + 24) = height;
  double result = v40;
  *(double *)(a2 + 32) = v26;
  *(double *)(a2 + 40) = result;
  *(unsigned char *)(a2 + 48) = v36;
  return result;
}

void sub_100054DE8(char a1@<W1>, double *a2@<X8>, double a3@<D0>)
{
  uint64_t v6 = type metadata accessor for NamedCoordinateSpace();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = &v12[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  double v10 = 0.0;
  if (a1)
  {
    static CoordinateSpaceProtocol<>.scrollView.getter();
    GeometryProxy.bounds(of:)();
    (*(void (**)(unsigned char *, uint64_t))(v7 + 8))(v9, v6);
    sub_10024D364((uint64_t)v12, (uint64_t)&v13, &qword_100E64498);
    double MinY = 0.0;
    if ((v14 & 1) == 0) {
      double MinY = CGRectGetMinY(v13);
    }
    if (-MinY <= a3) {
      double v10 = MinY + a3;
    }
  }
  *a2 = v10;
}

uint64_t sub_100054F20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = type metadata accessor for WeatherWindowGroup();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v22 - v10;
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)&v22 - v10, a1, v8);
  unint64_t v12 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = a2;
  *(void *)(v13 + 24) = a3;
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v13 + v12, v11, v8);
  sub_10018C6DC(&qword_100E7D128);
  type metadata accessor for ModifiedContent();
  sub_10018C6DC(&qword_100E7D130);
  type metadata accessor for ModifiedContent();
  sub_10018C6DC(&qword_100E7D138);
  type metadata accessor for ModifiedContent();
  uint64_t v14 = sub_1001246C8(&qword_100E7D140, &qword_100E7D128);
  uint64_t v28 = a3;
  uint64_t v29 = v14;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v16 = sub_1001246C8(&qword_100E7D148, &qword_100E7D130);
  uint64_t v26 = WitnessTable;
  uint64_t v27 = v16;
  uint64_t v17 = swift_getWitnessTable();
  uint64_t v18 = sub_1001246C8(&qword_100E7D150, &qword_100E7D138);
  uint64_t v24 = v17;
  uint64_t v25 = v18;
  swift_getWitnessTable();
  uint64_t v22 = GeometryReader.init(content:)();
  uint64_t v23 = v19;
  uint64_t v20 = type metadata accessor for GeometryReader();
  swift_getWitnessTable();
  sub_100121584((uint64_t)&v22, v20, (uint64_t)v30);
  swift_release();
  uint64_t v22 = v30[0];
  uint64_t v23 = v30[1];
  sub_100121584((uint64_t)&v22, v20, a4);
  return swift_release();
}

uint64_t sub_100055218@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_10005524C();
  return sub_1000F350C(v2, a1, &qword_100E65FA8);
}

uint64_t sub_10005524C()
{
  if (qword_100E621F8 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_10017DF08(&qword_100E65FA8);

  return sub_1002102B0(v0, (uint64_t)qword_100E65EC0);
}

uint64_t sub_1000552B4(uint64_t a1)
{
  uint64_t v2 = sub_10017DF08(&qword_100E65ED8);
  uint64_t v3 = sub_100109308(v2);
  __chkstk_darwin(v3);
  sub_1001626E0();
  uint64_t v6 = v5 - v4;
  sub_10006DF38(a1, v5 - v4, &qword_100E65ED8);
  return sub_10005533C(v6);
}

uint64_t sub_10005533C(uint64_t a1)
{
  return sub_1000F334C(a1, &qword_100E65ED8, (void (*)(uint64_t))sub_1000F34C0);
}

uint64_t sub_100055364@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E90C30);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v34)
  {
    __break(1u);
    goto LABEL_7;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E907B0);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v32)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E75318);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v30)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E947B0);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v28)
  {
    uint64_t v5 = sub_1000DF0C4((uint64_t)v33, v34);
    __n128 v6 = __chkstk_darwin(v5);
    uint64_t v8 = (uint64_t *)&v27[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
    (*(void (**)(uint64_t *, __n128))(v9 + 16))(v8, v6);
    uint64_t v10 = sub_1000DF0C4((uint64_t)v31, v32);
    __n128 v11 = __chkstk_darwin(v10);
    uint64_t v13 = (uint64_t *)&v27[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
    (*(void (**)(uint64_t *, __n128))(v14 + 16))(v13, v11);
    uint64_t v15 = sub_1000DF0C4((uint64_t)v29, v30);
    __n128 v16 = __chkstk_darwin(v15);
    uint64_t v18 = (uint64_t *)&v27[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
    (*(void (**)(uint64_t *, __n128))(v19 + 16))(v18, v16);
    uint64_t v20 = sub_1000DF0C4((uint64_t)v27, v28);
    __n128 v21 = __chkstk_darwin(v20);
    uint64_t v23 = (uint64_t **)&v27[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
    (*(void (**)(uint64_t **, __n128))(v24 + 16))(v23, v21);
    uint64_t v25 = sub_100037B00(*v8, *v13, *v18, *v23);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v27);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v29);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v31);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v33);
    uint64_t result = type metadata accessor for ViewStateReducer();
    a2[3] = result;
    a2[4] = &off_100E1D070;
    *a2 = v25;
    return result;
  }
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_10005577C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E7C0D8);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v30)
  {
    __break(1u);
    goto LABEL_7;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E7C0E0);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v28)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E8DE68);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v26)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E71B08);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v24)
  {
    uint64_t v5 = sub_1000DF0C4((uint64_t)v29, v30);
    __chkstk_darwin(v5);
    uint64_t v7 = (uint64_t *)&v23[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
    (*(void (**)(uint64_t *))(v8 + 16))(v7);
    uint64_t v9 = sub_1000DF0C4((uint64_t)v27, v28);
    __chkstk_darwin(v9);
    __n128 v11 = &v23[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
    (*(void (**)(unsigned char *))(v12 + 16))(v11);
    uint64_t v13 = sub_1000DF0C4((uint64_t)v25, v26);
    __chkstk_darwin(v13);
    uint64_t v15 = (uint64_t *)&v23[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
    (*(void (**)(uint64_t *))(v16 + 16))(v15);
    uint64_t v17 = sub_1000DF0C4((uint64_t)v23, v24);
    __chkstk_darwin(v17);
    uint64_t v19 = (uint64_t **)&v23[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
    (*(void (**)(uint64_t **))(v20 + 16))(v19);
    __n128 v21 = sub_100044708(*v7, v11, *v15, *v19);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v23);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v25);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v27);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v29);
    uint64_t result = type metadata accessor for LocationViewStateReducer();
    a2[3] = result;
    a2[4] = &off_100E0D278;
    *a2 = v21;
    return result;
  }
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_100055B94@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E7CCE8);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v34)
  {
    __break(1u);
    goto LABEL_7;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E98160);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v32)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E96458);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v30)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E71B00);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v28)
  {
    uint64_t v5 = sub_1000DF0C4((uint64_t)v33, v34);
    __n128 v6 = __chkstk_darwin(v5);
    uint64_t v8 = (uint64_t *)&v27[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
    (*(void (**)(uint64_t *, __n128))(v9 + 16))(v8, v6);
    uint64_t v10 = sub_1000DF0C4((uint64_t)v31, v32);
    __n128 v11 = __chkstk_darwin(v10);
    uint64_t v13 = (uint64_t *)&v27[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
    (*(void (**)(uint64_t *, __n128))(v14 + 16))(v13, v11);
    uint64_t v15 = sub_1000DF0C4((uint64_t)v29, v30);
    __n128 v16 = __chkstk_darwin(v15);
    uint64_t v18 = (uint64_t *)&v27[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
    (*(void (**)(uint64_t *, __n128))(v19 + 16))(v18, v16);
    uint64_t v20 = sub_1000DF0C4((uint64_t)v27, v28);
    __n128 v21 = __chkstk_darwin(v20);
    uint64_t v23 = (uint64_t **)&v27[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
    (*(void (**)(uint64_t **, __n128))(v24 + 16))(v23, v21);
    uint64_t v25 = sub_100038648(*v8, *v13, *v18, *v23);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v27);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v29);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v31);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v33);
    uint64_t result = type metadata accessor for ModalViewStateReducer();
    a2[3] = result;
    a2[4] = &off_100E35ED8;
    *a2 = v25;
    return result;
  }
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_100055FAC@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E8DD68);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v19)
  {
    uint64_t v4 = sub_1000DF0C4((uint64_t)v18, v19);
    __chkstk_darwin(v4);
    __n128 v6 = (void *)((char *)v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v7 + 16))(v6);
    uint64_t v8 = *v6;
    uint64_t v9 = type metadata accessor for LocationViewComponentFactory();
    uint64_t v17[3] = v9;
    v17[4] = &off_100E35888;
    v17[0] = v8;
    uint64_t v10 = type metadata accessor for AlternativeLocationViewConfigurationFactory();
    __n128 v11 = (void *)swift_allocObject();
    uint64_t v12 = sub_1000DF0C4((uint64_t)v17, v9);
    __chkstk_darwin(v12);
    uint64_t v14 = (void *)((char *)v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v15 + 16))(v14);
    uint64_t v16 = *v14;
    v11[5] = v9;
    void v11[6] = &off_100E35888;
    long long v11[2] = v16;
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v17);
    uint64_t result = _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v18);
    a2[3] = v10;
    a2[4] = &off_100E11F20;
    *a2 = v11;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t type metadata accessor for AlternativeLocationViewConfigurationFactory()
{
  return self;
}

void *sub_1000561EC(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  unint64_t v6 = a2[7];
  if (a1[7] < 2uLL)
  {
    if (v6 >= 2)
    {
      a1[6] = a2[6];
      a1[7] = a2[7];
      swift_bridgeObjectRetain();
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  if (v6 < 2)
  {
    sub_10027B4D4((uint64_t)(a1 + 6));
LABEL_6:
    *((_OWORD *)a1 + 3) = *((_OWORD *)a2 + 3);
    goto LABEL_8;
  }
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_8:
  if (a1 != a2)
  {
    uint64_t v7 = *(int *)(a3 + 20);
    uint64_t v8 = (void *)((char *)a1 + v7);
    uint64_t v9 = (void *)((char *)a2 + v7);
    sub_1001781AC((uint64_t)a1 + v7, (uint64_t *)&unk_100EAA560);
    sub_10017DF08((uint64_t *)&unk_100EAA560);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v10 = type metadata accessor for UserInterfaceSizeClass();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v10))
      {
        uint64_t v11 = sub_10017DF08(&qword_100E65ED8);
        memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v8, 0, 1, v10);
      }
    }
    else
    {
      *uint64_t v8 = *v9;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v12 = *(int *)(a3 + 24);
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  *(void *)((char *)a1 + v12) = *(void *)((char *)a2 + v12);
  swift_retain();
  swift_release();
  *((void *)v13 + 1) = *((void *)v14 + 1);
  swift_retain();
  swift_release();
  *((void *)v13 + 2) = *((void *)v14 + 2);
  swift_retain();
  swift_release();
  *((void *)v13 + 3) = *((void *)v14 + 3);
  swift_retain();
  swift_release();
  v13[32] = v14[32];
  *((void *)v13 + 5) = *((void *)v14 + 5);
  swift_retain();
  swift_release();
  return a1;
}

void sub_100056498(const __SCPreferences *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v42 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  unint64_t v6 = (char *)v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for DispatchQoS();
  uint64_t v41 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for DispatchPredicate();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (void *)((char *)v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v14 = *(void **)(v2 + 32);
  void *v13 = v14;
  (*(void (**)(void *, void, uint64_t))(v11 + 104))(v13, enum case for DispatchPredicate.onQueue(_:), v10);
  id v15 = v14;
  LOBYTE(v14) = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v11 + 8))(v13, v10);
  if ((v14 & 1) == 0)
  {
    __break(1u);
LABEL_23:
    swift_once();
    goto LABEL_9;
  }
  UnfairLock.lock()();
  SCPreferencesSynchronize(a1);
  uint64_t v16 = (__CFString *)String._bridgeToObjectiveC()();
  CFPropertyListRef v17 = (id)SCPreferencesGetValue(a1, v16);

  if (v17)
  {
    aBlock[0] = v17;
    if (swift_dynamicCast())
    {
      int v18 = v43;
      uint64_t v19 = *(void **)(v2 + 40);
      int v20 = *(unsigned __int8 *)(v2 + 48);
      uint64_t v21 = *(void *)(v2 + 64);
      uint64_t v22 = *(void *)(v2 + 72);
      *(unsigned char *)(v2 + 48) = (_BYTE)v43;
      if (v19)
      {
        uint64_t v23 = v19;
        if (v18 != v20)
        {
          if (v21)
          {
            uint64_t v24 = swift_allocObject();
            *(void *)(v24 + 16) = v21;
            *(void *)(v24 + 24) = v22;
            *(unsigned char *)(v24 + 32) = v18;
            aBlock[4] = sub_10090B494;
            aBlock[5] = v24;
            aBlock[0] = _NSConcreteStackBlock;
            aBlock[1] = 1107296256;
            aBlock[2] = sub_10010A4D4;
            void aBlock[3] = &unk_100E2DF38;
            double v40 = _Block_copy(aBlock);
            sub_10005BEBC(v21);
            sub_10005BEBC(v21);
            sub_10005BEBC(v21);
            id v25 = v19;
            static DispatchQoS.unspecified.getter();
            double v43 = &_swiftEmptyArrayStorage;
            v39[1] = sub_100128DDC((unint64_t *)&qword_100EA0200, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
            sub_10017DF08(&qword_100E75530);
            sub_10012470C((unint64_t *)&qword_100EA0210, &qword_100E75530);
            dispatch thunk of SetAlgebra.init<A>(_:)();
            uint64_t v26 = v40;
            OS_dispatch_queue.async(group:qos:flags:execute:)();
            _Block_release(v26);
            sub_1001361AC(v21);
            sub_1001361AC(v21);

            (*(void (**)(char *, uint64_t))(v42 + 8))(v6, v4);
            (*(void (**)(char *, uint64_t))(v41 + 8))(v9, v7);
            swift_release();
            goto LABEL_20;
          }
          uint64_t v23 = v19;
          goto LABEL_14;
        }
      }
      else
      {
        uint64_t v23 = 0;
      }
      sub_10005BEBC(v21);
LABEL_14:
      uint64_t v31 = qword_100E62830;
      id v32 = v23;
      if (v31 != -1) {
        swift_once();
      }
      uint64_t v33 = type metadata accessor for Logger();
      sub_1002102B0(v33, (uint64_t)qword_100F51F98);
      sub_10005BEBC(v21);
      uint64_t v34 = v32;
      CGFloat v35 = Logger.logObject.getter();
      os_log_type_t v36 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v35, v36))
      {
        uint64_t v37 = swift_slowAlloc();
        *(_DWORD *)uint64_t v37 = 67109376;
        LODWORD(aBlock[0]) = v19 != 0;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        *(_WORD *)(v37 + 8) = 1024;
        LODWORD(aBlock[0]) = v21 != 0;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        sub_1001361AC(v21);
        _os_log_impl((void *)&_mh_execute_header, v35, v36, "Not calling handler, state not changed or handler not present. callbackQueuePresent=%{BOOL}d, handlerPresent=%{BOOL}d", (uint8_t *)v37, 0xEu);
        swift_slowDealloc();
        uint64_t v38 = v35;
      }
      else
      {

        sub_1001361AC(v21);
        uint64_t v38 = v34;
        uint64_t v34 = v35;
      }

      sub_1001361AC(v21);
      goto LABEL_20;
    }
  }
  if (qword_100E62830 != -1) {
    goto LABEL_23;
  }
LABEL_9:
  uint64_t v27 = type metadata accessor for Logger();
  sub_1002102B0(v27, (uint64_t)qword_100F51F98);
  uint64_t v28 = Logger.logObject.getter();
  os_log_type_t v29 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v28, v29))
  {
    uint64_t v30 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v30 = 0;
    _os_log_impl((void *)&_mh_execute_header, v28, v29, "Cannot get AirplaneMode preferences value", v30, 2u);
    swift_slowDealloc();
  }

LABEL_20:
  UnfairLock.unlock()();
}

uint64_t sub_100056B5C()
{
  uint64_t v1 = v0
     + OBJC_IVAR____TtC7WeatherP33_5EE0AB7E2265079F8C0DECAD5CEADEAC25PageContainerSidebarState___observationRegistrar;
  uint64_t v2 = type metadata accessor for ObservationRegistrar();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t destroy for VisibilityModifier()
{
  swift_release();
  swift_release();

  return swift_release();
}

void *sub_100056C40()
{
  uint64_t v1 = v0;
  id v2 = [self sharedApplication];
  UIApplication.expectedWindow.getter();

  sub_1001B1E64(v10, (uint64_t)v11);
  dispatch thunk of WindowType.bounds.getter();
  uint64_t v4 = v3;
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v10);
  v1[2] = v4;
  type metadata accessor for ResettingBool();
  swift_allocObject();
  v1[3] = ResettingBool.init(wrappedValue:interval:)(0, 1.0);
  swift_allocObject();
  v1[4] = ResettingBool.init(wrappedValue:interval:)(0, 1.0);
  v1[5] = 0;
  id v5 = [self defaultCenter];
  uint64_t v6 = swift_allocObject();
  swift_weakInit();
  uint64_t v12 = sub_100923E48;
  uint64_t v13 = v6;
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 1107296256;
  v10[2] = sub_100922AE8;
  uint64_t v11 = &unk_100E2E430;
  uint64_t v7 = _Block_copy(v10);
  swift_release();
  id v8 = [v5 addObserverForName:UIDeviceOrientationDidChangeNotification object:0 queue:0 usingBlock:v7];
  _Block_release(v7);

  v1[5] = v8;
  swift_unknownObjectRelease();
  return v1;
}

uint64_t ResettingBool.init(wrappedValue:interval:)(char a1, double a2)
{
  *(void *)(v2 + 24) = 0;
  *(unsigned char *)(v2 + 32) = a1;
  *(double *)(v2 + 16) = a2;
  return v2;
}

uint64_t sub_100056E4C(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_retain();
  swift_release();
  sub_1000C1E18((uint64_t *)(a1 + 32), (uint64_t *)(a2 + 32));
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    uint64_t v6 = a3[8];
    uint64_t v7 = a1 + v6;
    uint64_t v8 = a2 + v6;
    sub_100178110(a1 + v6, &qword_100E63BD0);
    sub_10017DF08(&qword_100E63BD0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(void *)uint64_t v7 = *(void *)v8;
      *(void *)(v7 + 8) = *(void *)(v8 + 8);
      *(unsigned char *)(v7 + 16) = *(unsigned char *)(v8 + 16);
      *(unsigned char *)(v7 + 17) = *(unsigned char *)(v8 + 17);
      *(unsigned char *)(v7 + 18) = *(unsigned char *)(v8 + 18);
      uint64_t v9 = *(int *)(type metadata accessor for DisplayMetrics() + 36);
      uint64_t v10 = v7 + v9;
      uint64_t v11 = v8 + v9;
      uint64_t v12 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
    }
    else
    {
      *(void *)uint64_t v7 = *(void *)v8;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v13 = a3[9];
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  uint64_t v16 = *(void *)v15;
  char v17 = *(unsigned char *)(v15 + 8);
  sub_100195B7C(*(void *)v15, v17);
  uint64_t v18 = *(void *)v14;
  char v19 = *(unsigned char *)(v14 + 8);
  *(void *)uint64_t v14 = v16;
  *(unsigned char *)(v14 + 8) = v17;
  sub_10018F6D8(v18, v19);
  uint64_t v20 = a3[10];
  uint64_t v21 = a1 + v20;
  uint64_t v22 = a2 + v20;
  uint64_t v23 = *(void *)v22;
  char v24 = *(unsigned char *)(v22 + 9);
  LOBYTE(v14) = *(unsigned char *)(v22 + 8);
  sub_100193DD4(*(void *)v22, v14, v24);
  uint64_t v25 = *(void *)v21;
  char v26 = *(unsigned char *)(v21 + 9);
  *(void *)uint64_t v21 = v23;
  uint64_t v27 = *(unsigned __int8 *)(v21 + 8);
  *(unsigned char *)(v21 + 8) = v14;
  *(unsigned char *)(v21 + 9) = v24;
  sub_10014D82C(v25, v27, v26);
  uint64_t v28 = a3[11];
  uint64_t v29 = a1 + v28;
  uint64_t v30 = a2 + v28;
  *(void *)(a1 + v28) = *(void *)(a2 + v28);
  swift_retain();
  swift_release();
  *(void *)(v29 + 8) = *(void *)(v30 + 8);
  uint64_t v31 = a3[12];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  *(unsigned char *)uint64_t v32 = *(unsigned char *)v33;
  *(void *)(v32 + 8) = *(void *)(v33 + 8);
  swift_retain();
  swift_release();
  uint64_t v34 = a3[13];
  uint64_t v35 = a1 + v34;
  uint64_t v36 = a2 + v34;
  *(unsigned char *)uint64_t v35 = *(unsigned char *)v36;
  *(void *)(v35 + 8) = *(void *)(v36 + 8);
  swift_retain();
  swift_release();
  uint64_t v37 = a3[14];
  uint64_t v38 = a1 + v37;
  uint64_t v39 = a2 + v37;
  *(unsigned char *)uint64_t v38 = *(unsigned char *)v39;
  *(void *)(v38 + 8) = *(void *)(v39 + 8);
  swift_retain();
  swift_release();
  return a1;
}

unint64_t sub_100057100@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100EACEA8);
  unint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v7)
  {
    sub_1001B1E64(a1, a1[3]);
    sub_10017DF08(&qword_100EACEB0);
    unint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
    if (v6)
    {
      type metadata accessor for WeatherConditionBackgroundManager();
      swift_allocObject();
      uint64_t v5 = WeatherConditionBackgroundManager.init(configurationManager:templateManager:)();
      unint64_t result = sub_1000571F4();
      *a2 = v5;
      a2[1] = (uint64_t)&protocol witness table for WeatherConditionBackgroundManager;
      a2[2] = result;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

unint64_t sub_1000571F4()
{
  unint64_t result = qword_100EACEB8;
  if (!qword_100EACEB8)
  {
    type metadata accessor for WeatherConditionBackgroundManager();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EACEB8);
  }
  return result;
}

uint64_t sub_100057244()
{
  sub_10017DF08(&qword_100E907C0);
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  sub_10017DF08(&qword_100E907C8);
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  sub_10017DF08(&qword_100E907D0);
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  sub_10017DF08(&qword_100E64AB8);
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  sub_10017DF08(&qword_100E64A88);
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  sub_10017DF08(&qword_100E907D8);
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  type metadata accessor for WeatherConditionBackgroundModelInputFactory();
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  sub_10017DF08(&qword_100E907E0);
  RegistrationContainer.register<A>(_:name:factory:)();

  return swift_release();
}

uint64_t sub_10005742C@<X0>(uint64_t a1@<X8>)
{
  sub_10014A85C();
  swift_bridgeObjectRetain();
  uint64_t result = Text.init<A>(_:)();
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = v4 & 1;
  *(void *)(a1 + 24) = v5;
  return result;
}

void *sub_100057498(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t *a10, uint64_t *a11, void *a12, uint64_t **a13)
{
  uint64_t v77 = a1;
  uint64_t v78 = a2;
  uint64_t v76 = a12;
  uint64_t v74 = a11;
  uint64_t v73 = a10;
  uint64_t v75 = *a13;
  uint64_t v110 = type metadata accessor for DailyForecastComponentViewModelFactory();
  unint64_t v111 = &off_100E16D28;
  v109[0] = a3;
  uint64_t v107 = type metadata accessor for FeelsLikeComponentViewModelFactory();
  v108 = &off_100E35D48;
  v106[0] = a4;
  uint64_t v104 = type metadata accessor for HourlyForecastComponentViewModelFactory();
  uint64_t v105 = &off_100E1CB80;
  v103[0] = a5;
  uint64_t v101 = type metadata accessor for ListViewModelFactory();
  uint64_t v102 = &off_100E1D548;
  v100[0] = a6;
  uint64_t v98 = type metadata accessor for PrecipitationTotalComponentViewModelFactory();
  uint64_t v99 = &off_100E2A0B0;
  v97[0] = a7;
  uint64_t v95 = type metadata accessor for UVIndexComponentViewModelFactory();
  BOOL v96 = &off_100E2E038;
  v94[0] = a8;
  uint64_t v92 = type metadata accessor for VisibilityComponentViewModelFactory();
  uint64_t v93 = &off_100E2BA98;
  v91[0] = a9;
  uint64_t v89 = type metadata accessor for PressureComponentViewModelFactory();
  Swift::Bool v90 = &off_100E39AA0;
  v88[0] = a10;
  uint64_t v86 = type metadata accessor for WindComponentViewModelFactory();
  uint64_t v87 = &off_100E278F0;
  v85[0] = a11;
  uint64_t v83 = type metadata accessor for WeatherConditionBackgroundModelInputFactory();
  char v84 = &off_100E357E0;
  v82[0] = a12;
  uint64_t v80 = v75;
  char v81 = &off_100E32808;
  v79[0] = a13;
  type metadata accessor for WeatherDataPreprocessor();
  uint64_t v76 = (void *)swift_allocObject();
  uint64_t v19 = sub_1000DF0C4((uint64_t)v109, v110);
  __n128 v20 = __chkstk_darwin(v19);
  uint64_t v75 = (uint64_t *)((char *)&v73 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(__n128))(v22 + 16))(v20);
  uint64_t v23 = sub_1000DF0C4((uint64_t)v106, v107);
  __n128 v24 = __chkstk_darwin(v23);
  uint64_t v74 = (uint64_t *)((char *)&v73 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(__n128))(v26 + 16))(v24);
  uint64_t v27 = sub_1000DF0C4((uint64_t)v103, v104);
  __n128 v28 = __chkstk_darwin(v27);
  uint64_t v73 = (uint64_t *)((char *)&v73 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(__n128))(v30 + 16))(v28);
  uint64_t v31 = sub_1000DF0C4((uint64_t)v100, v101);
  __n128 v32 = __chkstk_darwin(v31);
  uint64_t v34 = (uint64_t *)((char *)&v73 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, __n128))(v35 + 16))(v34, v32);
  uint64_t v36 = sub_1000DF0C4((uint64_t)v97, v98);
  __n128 v37 = __chkstk_darwin(v36);
  uint64_t v39 = (uint64_t *)((char *)&v73 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, __n128))(v40 + 16))(v39, v37);
  uint64_t v41 = sub_1000DF0C4((uint64_t)v94, v95);
  __n128 v42 = __chkstk_darwin(v41);
  double v44 = (uint64_t *)((char *)&v73 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, __n128))(v45 + 16))(v44, v42);
  uint64_t v46 = sub_1000DF0C4((uint64_t)v91, v92);
  __n128 v47 = __chkstk_darwin(v46);
  CGRect v49 = (uint64_t *)((char *)&v73 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, __n128))(v50 + 16))(v49, v47);
  uint64_t v51 = sub_1000DF0C4((uint64_t)v88, v89);
  __n128 v52 = __chkstk_darwin(v51);
  uint64_t v54 = (uint64_t *)((char *)&v73 - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, __n128))(v55 + 16))(v54, v52);
  uint64_t v56 = sub_1000DF0C4((uint64_t)v85, v86);
  __n128 v57 = __chkstk_darwin(v56);
  char v59 = (uint64_t *)((char *)&v73 - ((v58 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, __n128))(v60 + 16))(v59, v57);
  uint64_t v61 = sub_1000DF0C4((uint64_t)v82, v83);
  __n128 v62 = __chkstk_darwin(v61);
  int v64 = (uint64_t *)((char *)&v73 - ((v63 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, __n128))(v65 + 16))(v64, v62);
  uint64_t v66 = sub_1000DF0C4((uint64_t)v79, (uint64_t)v80);
  __n128 v67 = __chkstk_darwin(v66);
  uint64_t v69 = (uint64_t *)((char *)&v73 - ((v68 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, __n128))(v70 + 16))(v69, v67);
  uint64_t v71 = sub_1002260C4(v77, v78, *v75, *v74, *v73, *v34, *v39, *v44, *v49, *v54, *v59, *v64, *v69, v76);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v79);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v82);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v85);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v88);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v91);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v94);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v97);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v100);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v103);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v106);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v109);
  return v71;
}

Swift::Void __swiftcall AppLaunchCountMonitor.applicationDidFinishLaunching(withOptions:)(Swift::OpaquePointer_optional withOptions)
{
  uint64_t v34 = type metadata accessor for DispatchWorkItemFlags();
  sub_100179C0C();
  uint64_t v37 = v1;
  __chkstk_darwin(v2);
  sub_1001626E0();
  uint64_t v5 = v4 - v3;
  type metadata accessor for DispatchQoS();
  sub_100179C0C();
  uint64_t v35 = v7;
  uint64_t v36 = v6;
  __chkstk_darwin(v6);
  sub_1001626E0();
  uint64_t v10 = v9 - v8;
  uint64_t v11 = type metadata accessor for DispatchTimeInterval();
  sub_100179C0C();
  uint64_t v13 = v12;
  __chkstk_darwin(v14);
  sub_1001626E0();
  char v17 = (void *)(v16 - v15);
  uint64_t v18 = type metadata accessor for DispatchTime();
  sub_100179C0C();
  uint64_t v20 = v19;
  uint64_t v22 = __chkstk_darwin(v21);
  __n128 v24 = (char *)&v33 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  uint64_t v26 = (char *)&v33 - v25;
  sub_1001AB3E0();
  uint64_t v33 = static OS_dispatch_queue.main.getter();
  static DispatchTime.now()();
  *char v17 = 500;
  (*(void (**)(void *, void, uint64_t))(v13 + 104))(v17, enum case for DispatchTimeInterval.milliseconds(_:), v11);
  + infix(_:_:)();
  (*(void (**)(void *, uint64_t))(v13 + 8))(v17, v11);
  uint64_t v27 = *(void (**)(char *, uint64_t))(v20 + 8);
  uint64_t v28 = v18;
  v27(v24, v18);
  uint64_t v29 = swift_allocObject();
  swift_weakInit();
  aBlock[4] = sub_1003FD894;
  aBlock[5] = v29;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10010A4D4;
  void aBlock[3] = &unk_100E15310;
  uint64_t v30 = _Block_copy(aBlock);
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = &_swiftEmptyArrayStorage;
  sub_100216874();
  sub_10017DF08(&qword_100E75530);
  sub_100115EDC();
  uint64_t v31 = v34;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  __n128 v32 = (void *)v33;
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
  _Block_release(v30);

  (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v5, v31);
  (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v10, v36);
  v27(v26, v28);
}

uint64_t sub_100058114@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a2;
  *(void *)(v10 + 24) = a3;
  type metadata accessor for WireframeContentManager();
  sub_10013509C((uint64_t)&qword_100E83B40);
  swift_retain();
  uint64_t v11 = Environment.init<A>(_:)();
  LOBYTE(a2) = v12;
  uint64_t v13 = static Alignment.center.getter();
  sub_1002272E8(__src, 0, 1, 0, 1, 0x7FEFFFFFFFFFFFFFLL, 0, 0, 1, 0, 1, 0, 1, v13, v14, v11, a2 & 1 | ((a1 & 1) << 8), sub_1000CA324, v10);
  swift_release();
  swift_release();
  uint64_t v15 = a4 + *(int *)(type metadata accessor for LocationComponentContainerContentView(0) + 24);
  uint64_t v16 = (unsigned __int8 *)(v15 + *(int *)(type metadata accessor for LocationComponentContainerViewModel() + 24));
  if (v16[1] != 1)
  {
    unsigned __int8 v20 = static Edge.Set.leading.getter();
    unsigned __int8 v21 = static Edge.Set.trailing.getter();
    Edge.Set.init(rawValue:)();
    Edge.Set.init(rawValue:)();
    if (Edge.Set.init(rawValue:)() != v20) {
      Edge.Set.init(rawValue:)();
    }
    Edge.Set.init(rawValue:)();
    if (Edge.Set.init(rawValue:)() != v21) {
      Edge.Set.init(rawValue:)();
    }
    Edge.Set.init(rawValue:)();
    goto LABEL_12;
  }
  if (*v16 >= 2u) {
    goto LABEL_12;
  }
  unsigned __int8 v17 = static Edge.Set.leading.getter();
  unsigned __int8 v18 = static Edge.Set.trailing.getter();
  char v19 = Edge.Set.init(rawValue:)();
  Edge.Set.init(rawValue:)();
  if (Edge.Set.init(rawValue:)() != v17) {
    char v19 = Edge.Set.init(rawValue:)();
  }
  Edge.Set.init(rawValue:)();
  if (Edge.Set.init(rawValue:)() != v18) {
LABEL_12:
  }
    char v19 = Edge.Set.init(rawValue:)();
  uint64_t v22 = *(void *)(a4 + 16);
  char v23 = *(unsigned char *)(a4 + 24);
  sub_100195B7C(v22, v23);
  sub_100149AE8();
  char v25 = v24;
  sub_10018F6D8(v22, v23);
  if (v25)
  {
    if (qword_100E62240 == -1) {
      goto LABEL_17;
    }
    goto LABEL_18;
  }
  if (qword_100E62248 != -1) {
LABEL_18:
  }
    swift_once();
LABEL_17:
  EdgeInsets.init(_all:)();
  uint64_t v27 = v26;
  uint64_t v29 = v28;
  uint64_t v31 = v30;
  uint64_t v33 = v32;
  memcpy(__dst, __src, 0x90uLL);
  memcpy(v35, __src, 0x90uLL);
  LOBYTE(v35[18]) = v19;
  v35[19] = v27;
  v35[20] = v29;
  v35[21] = v31;
  v35[22] = v33;
  LOBYTE(v35[23]) = 0;
  unsigned char v35[24] = 0x3FF0000000000000;
  v37[208] = 0;
  memcpy(&v37[7], v35, 0xC8uLL);
  char v36 = 0;
  *(void *)a5 = 0;
  *(unsigned char *)(a5 + 8) = 0;
  memcpy((void *)(a5 + 9), v37, 0xCFuLL);
  *(void *)(a5 + 216) = 0;
  *(unsigned char *)(a5 + 224) = 0;
  __dst[144] = v19;
  uint64_t v39 = v27;
  uint64_t v40 = v29;
  uint64_t v41 = v31;
  uint64_t v42 = v33;
  char v43 = 0;
  uint64_t v44 = 0x3FF0000000000000;
  sub_10002B6B4((uint64_t)v35);
  return sub_10001D010((uint64_t)__dst);
}

uint64_t sub_1000584F4()
{
  uint64_t v0 = type metadata accessor for SunriseSunsetNightRule();
  uint64_t v18 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v2 = (char *)&v15 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for SunriseSunsetDayRule();
  uint64_t v17 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for SunriseSunsetMorningRule();
  uint64_t v16 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for SunriseSunsetPolarRule();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  char v12 = (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  SunriseSunsetPolarRule.init()();
  SunriseSunsetMorningRule.init()();
  SunriseSunsetDayRule.init()();
  SunriseSunsetNightRule.init()();
  type metadata accessor for Date();
  type metadata accessor for SunriseSunsetDescriptionContext();
  uint64_t v13 = static RuleBuilder.buildBlock<A, B, C, D>(_:_:_:_:)();
  (*(void (**)(char *, uint64_t))(v18 + 8))(v2, v0);
  (*(void (**)(char *, uint64_t))(v17 + 8))(v5, v3);
  (*(void (**)(char *, uint64_t))(v16 + 8))(v8, v6);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  return v13;
}

uint64_t sub_100058818(uint64_t a1, void *a2)
{
  sub_1001B1E64(a2, a2[3]);
  type metadata accessor for WeatherDataDebounceMiddleware();
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!result)
  {
    __break(1u);
    goto LABEL_10;
  }
  sub_100058A2C((uint64_t)sub_1001ABCF8, result);
  swift_release();
  sub_1001B1E64(a2, a2[3]);
  type metadata accessor for ShortcutItemMiddleware();
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!result)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  sub_100058A2C((uint64_t)sub_1001ABECC, result);
  swift_release();
  sub_1001B1E64(a2, a2[3]);
  type metadata accessor for UnitManagerMiddleware();
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!result)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  sub_100058A2C((uint64_t)sub_1001AC6A0, result);
  swift_release();
  sub_1001B1E64(a2, a2[3]);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:name:)();
  if (v4 != 2 && (v4 & 1) != 0)
  {
    sub_1001B1E64(a2, a2[3]);
    type metadata accessor for DemoPresetMiddleware();
    uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
    if (result)
    {
      sub_100058A2C((uint64_t)sub_1007FD0D8, result);
      return swift_release();
    }
LABEL_12:
    __break(1u);
  }
  return result;
}

uint64_t sub_100058A2C(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  swift_retain();
  sub_100058AD4();
  uint64_t v5 = *(void *)(*(void *)(v2 + 24) + 16);
  sub_100058ABC(v5);
  uint64_t v6 = *(void *)(v2 + 24);
  *(void *)(v6 + 16) = v5 + 1;
  uint64_t v7 = v6 + 16 * v5;
  *(void *)(v7 + 32) = a1;
  *(void *)(v7 + 40) = a2;
  return swift_endAccess();
}

uint64_t sub_100058ABC(uint64_t a1)
{
  return sub_100129E30(a1, (uint64_t (*)(BOOL))sub_10012C1D4);
}

uint64_t sub_100058AD4()
{
  return sub_100129E78((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_10012C1D4);
}

uint64_t sub_100058AEC()
{
  uint64_t v0 = sub_10017DF08(&qword_100E749B0);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = &v23[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v3 = type metadata accessor for URL();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = &v23[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7);
  uint64_t v9 = &v23[-v8];
  uint64_t v10 = self;
  id v11 = [v10 defaultManager];
  id v12 = [v11 URLsForDirectory:13 inDomains:1];

  uint64_t v13 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  sub_100215E90(v13, (uint64_t)v2);
  swift_bridgeObjectRelease();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v2, 1, v3) == 1) {
    __break(1u);
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v4 + 32))(v9, v2, v3);
  URL.appendingPathComponent(_:)();
  id v14 = [v10 defaultManager];
  URL._bridgeToObjectiveC()(v15);
  uint64_t v17 = v16;
  id v24 = 0;
  unsigned int v18 = [v14 removeItemAtURL:v16 error:&v24];

  if (v18)
  {
    id v19 = v24;
  }
  else
  {
    id v20 = v24;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    swift_errorRelease();
  }
  unsigned __int8 v21 = *(void (**)(unsigned char *, uint64_t))(v4 + 8);
  v21(v6, v3);
  return ((uint64_t (*)(unsigned char *, uint64_t))v21)(v9, v3);
}

uint64_t sub_100058DC0@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E647D8);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v17)
  {
    __break(1u);
    goto LABEL_11;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E906A8);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v16)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E7CD20);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v14)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  sub_1001B1E64(a1, a1[3]);
  type metadata accessor for WeatherDataUpdater();
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!result)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  uint64_t v5 = result;
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E807C8);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v12[3])
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E98010);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v11)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E981F0);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v9)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100EA7DF0);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v7)
  {
    type metadata accessor for LocationsOfInterestUpdater();
    swift_allocObject();
    uint64_t result = sub_1001E945C(v17, v18, (uint64_t)v15, (uint64_t)v13, v5, v12, (uint64_t)v10, (uint64_t)v8, (uint64_t)v6);
    *a2 = result;
    a2[1] = (uint64_t)&off_100E1FC78;
    return result;
  }
LABEL_17:
  __break(1u);
  return result;
}

uint64_t sub_100059054()
{
  uint64_t v0 = type metadata accessor for Scope();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  ProxyContainer.public.getter();
  sub_10017DF08(&qword_100E71018);
  sub_100179D0C();
  swift_release();
  swift_release();
  ProxyContainer.public.getter();
  sub_10017DF08(&qword_100E72898);
  sub_100179D0C();
  swift_release();
  swift_release();
  ProxyContainer.public.getter();
  sub_10017DF08(&qword_100E728A0);
  sub_100179D0C();
  swift_release();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for Scope.singleton(_:), v0);
  Definition.inScope(_:)();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  ProxyContainer.private.getter();
  RegistrationContainer.lazy(block:)();
  return swift_release();
}

uint64_t sub_10005923C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E97FF0);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!result)
  {
    __break(1u);
    goto LABEL_11;
  }
  uint64_t v5 = result;
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E981E8);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v26)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E71B60);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v24)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E807C8);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v22)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E906A8);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v20)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E7CD20);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v18)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E981F0);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v16)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  sub_1001B1E64(a1, a1[3]);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:name:)();
  if (v14 != 2)
  {
    char v6 = v14 & 1;
    uint64_t v7 = sub_1000DF0C4((uint64_t)v25, v26);
    __n128 v8 = __chkstk_darwin(v7);
    uint64_t v10 = (uint64_t *)((char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, __n128))(v11 + 16))(v10, v8);
    uint64_t v12 = sub_10021D178(v5, *v10, &v23, &v21, &v19, &v17, &v15, v6);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v25);
    uint64_t result = type metadata accessor for MainInitialStateProvider();
    a2[3] = result;
    a2[4] = (uint64_t)&off_100E3B218;
    *a2 = v12;
    return result;
  }
LABEL_17:
  __break(1u);
  return result;
}

uint64_t sub_100059588@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = sub_10017DF08(&qword_100EAC4A0);
  __chkstk_darwin(v4 - 8);
  char v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001B1E64(a1, a1[3]);
  uint64_t v7 = type metadata accessor for LocationModel();
  dispatch thunk of ResolverType.resolve<A>(_:)();
  uint64_t result = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v6, 1, v7);
  if (result == 1)
  {
    __break(1u);
    goto LABEL_11;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E64A38);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!result)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  uint64_t v9 = result;
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08((uint64_t *)&unk_100EAAA90);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!result)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v10 = result;
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E8DD40);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  uint64_t v11 = v34;
  if (!v34)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  uint64_t v24 = v35;
  char v25 = a2;
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E64798);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  uint64_t v12 = v30;
  if (!v30)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v13 = v33;
  uint64_t v22 = v32;
  uint64_t v23 = v9;
  uint64_t v21 = v31;
  sub_1001B1E64(a1, a1[3]);
  type metadata accessor for WireframeLevelInterestManager();
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!result)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  uint64_t v14 = result;
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E7CD18);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v29)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E8DE70);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v27)
  {
    uint64_t v15 = sub_1000DF0C4((uint64_t)v28, v29);
    __chkstk_darwin(v15);
    long long v17 = (uint64_t *)((char *)&v21 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v18 + 16))(v17);
    long long v19 = sub_100222C90(v6, v23, v10, v11, v24, v12, v21, v22, v13, v14, *v17, &v26);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v28);
    uint64_t result = type metadata accessor for LocationModule();
    uint64_t v20 = v25;
    v25[3] = result;
    v20[4] = &off_100E3B1F8;
    void *v20 = v19;
    return result;
  }
LABEL_17:
  __break(1u);
  return result;
}

uint64_t sub_100059930@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for LocationComponentHeaderMetrics(0);
  __chkstk_darwin(v4 - 8);
  sub_1001626E0();
  uint64_t v7 = v6 - v5;
  uint64_t KeyPath = swift_getKeyPath();
  sub_1001F46D0(v7);
  uint64_t v9 = (uint64_t *)(a2 + *(int *)(sub_10017DF08(&qword_100E7B038) + 36));
  uint64_t v10 = sub_10017DF08(&qword_100E7B040);
  sub_1001F0424(v7, (uint64_t)v9 + *(int *)(v10 + 28), (void (*)(void))type metadata accessor for LocationComponentHeaderMetrics);
  *uint64_t v9 = KeyPath;
  sub_10017DF08(&qword_100E7B048);
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v11 + 16))(a2, a1);
  return sub_1001F4EE0(v7, (void (*)(void))type metadata accessor for LocationComponentHeaderMetrics);
}

uint64_t sub_100059A58()
{
  uint64_t v0 = type metadata accessor for Scope();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  ProxyContainer.public.getter();
  sub_10017DF08(&qword_100E981E8);
  sub_100187ED0();
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  uint64_t v2 = *(void (**)(uint64_t))(v1 + 104);
  uint64_t v3 = sub_100188384();
  v2(v3);
  Definition.inScope(_:)();
  swift_release();
  swift_release();
  uint64_t v4 = *(void (**)(uint64_t))(v1 + 8);
  uint64_t v5 = sub_10017D9E4();
  v4(v5);
  ProxyContainer.public.getter();
  type metadata accessor for DemoPresetMiddleware();
  sub_100187ED0();
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  uint64_t v6 = sub_100188384();
  v2(v6);
  Definition.inScope(_:)();
  swift_release();
  swift_release();
  uint64_t v7 = sub_10017D9E4();
  v4(v7);
  ProxyContainer.public.getter();
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  return swift_release();
}

uint64_t sub_100059C50(uint64_t a1, void *a2)
{
  sub_1001B1E64(a2, a2[3]);
  sub_10017DF08(&qword_100EAF5D0);
  dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v7)
  {
    sub_1001262E4(&v6, (uint64_t)v8);
    sub_1001B1E64(v8, v9);
    dispatch thunk of UnitSetupManagerType.setupClient()();
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v8);
  }
  else
  {
    sub_1000F3400((uint64_t)&v6, &qword_100EAF5D8);
  }
  sub_1001B1E64(a2, a2[3]);
  uint64_t v3 = type metadata accessor for AppIntentsDependencyStartupTask();
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!result)
  {
    __break(1u);
LABEL_12:
    __break(1u);
    return result;
  }
  uint64_t v5 = result;
  uint64_t v9 = v3;
  unint64_t v10 = sub_100219C30();
  v8[0] = v5;
  StartupTaskManager.onStartup(run:)();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v8);
  uint64_t result = static Settings.Features.homeAndWorkEnabled.getter();
  if (result)
  {
    sub_1001B1E64(a2, a2[3]);
    sub_10017DF08(&qword_100E906A8);
    dispatch thunk of ResolverType.resolve<A>(_:)();
    if (v7)
    {
      sub_1001262E4(&v6, (uint64_t)v8);
      sub_1001B1E64(v8, v9);
      sub_1001B1E64(a2, a2[3]);
      sub_10017DF08(&qword_100EAF5E8);
      uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
      if (v7)
      {
        dispatch thunk of LocationsOfInterestManagerType.setupLocationsOfInterestPushing(nanoPreferencesSynchronizer:)();
        _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)&v6);
        return _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v8);
      }
      goto LABEL_12;
    }
    return sub_1000F3400((uint64_t)&v6, &qword_100E906B0);
  }
  return result;
}

uint64_t sub_100059E54(void *a1, uint64_t *a2, void (*a3)(void), void (*a4)(unsigned char *, uint64_t))
{
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E647D8);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v13)
  {
    uint64_t v9 = v14;
    sub_1001B1E64(a1, a1[3]);
    sub_10017DF08(a2);
    uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
    if (v12)
    {
      a3(0);
      uint64_t v10 = swift_allocObject();
      *(void *)(v10 + 16) = v13;
      *(void *)(v10 + 24) = v9;
      a4(v11, v10 + 32);
      return v10;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_100059F58(void *a1)
{
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E64798);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  uint64_t v3 = v18;
  if (!v18)
  {
    __break(1u);
    goto LABEL_6;
  }
  uint64_t v5 = v20;
  uint64_t v4 = v21;
  uint64_t v6 = v19;
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E907D8);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v17)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v7 = *sub_1001B1E64(v16, v17);
  uint64_t v14 = type metadata accessor for WeatherConditionBackgroundModelInputFactory();
  uint64_t v15 = &off_100E357F0;
  *(void *)&long long v13 = v7;
  sub_10020D948((uint64_t)&v13, (uint64_t)v12);
  uint64_t v8 = swift_allocObject();
  sub_1001262E4(v12, v8 + 16);
  swift_retain();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)&v13);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v16);
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = sub_10013A888;
  *(void *)(v9 + 24) = v8;
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E7CD28);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v17)
  {
    sub_10020D948((uint64_t)v16, (uint64_t)&v13);
    uint64_t v10 = swift_allocObject();
    sub_1001262E4(&v13, v10 + 16);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v16);
    uint64_t v11 = swift_allocObject();
    *(void *)(v11 + 16) = sub_100027F7C;
    *(void *)(v11 + 24) = v10;
    sub_10017DF08(&qword_100E64A88);
    swift_allocObject();
    return sub_1000667E0(v3, v6, v5, v4, sub_1001B0A30, 0, sub_100137F50, v9, sub_100216804, v11);
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_10005A1D4@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v5 = type metadata accessor for LocationComponentHeaderViewModel(0);
  uint64_t v6 = sub_100109308(v5);
  __chkstk_darwin(v6);
  sub_1001626E0();
  uint64_t v9 = v8 - v7;
  uint64_t v10 = type metadata accessor for HourlyForecastComponentPreprocessedDataModel();
  uint64_t v11 = sub_100109308(v10);
  __chkstk_darwin(v11);
  sub_10012B938();
  uint64_t v12 = type metadata accessor for HourlyForecastComponent();
  sub_100181CF4(a1 + *(int *)(v12 + 20), (uint64_t)v2, (void (*)(void))type metadata accessor for HourlyForecastComponentPreprocessedDataModel);
  int v13 = *(unsigned __int8 *)(a1 + *(int *)(v12 + 40));
  uint64_t v14 = *v2;
  swift_bridgeObjectRetain();
  if (v13 == 1)
  {
    uint64_t v15 = sub_100702B40(v14);
    swift_bridgeObjectRelease();
    uint64_t v14 = v15;
  }
  id v16 = [self mainBundle];
  v33._object = (void *)0x8000000100CAB2A0;
  v17._uint64_t countAndFlagsBits = 0x4620796C72756F48;
  v17._object = (void *)0xEF7473616365726FLL;
  v18._uint64_t countAndFlagsBits = 0;
  v18._object = (void *)0xE000000000000000;
  v33._uint64_t countAndFlagsBits = 0xD000000000000041;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v17, (Swift::String_optional)0, (NSBundle)v16, v18, v33);

  v29[0] = String.init<A>(_:)();
  v29[1] = v19;
  v29[2] = 0x6B636F6C63;
  void v29[3] = 0xE500000000000000;
  char v30 = 1;
  uint64_t v31 = 0;
  uint64_t v32 = 0;
  sub_10001C6D4(a1, (uint64_t)v2, (uint64_t)v29, v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1001A8674((uint64_t)v2, (void (*)(void))type metadata accessor for HourlyForecastComponentPreprocessedDataModel);
  uint64_t v20 = (int *)type metadata accessor for LocationComponentContainerViewModel();
  *(void *)(a2 + v20[5]) = v14;
  type metadata accessor for LocationComponentViewModel();
  swift_storeEnumTagMultiPayload();
  uint64_t v21 = a2 + v20[7];
  uint64_t v22 = *(int *)(sub_10017DF08(&qword_100E66488) + 48);
  type metadata accessor for TemperatureChartKind();
  sub_100162E4C();
  uint64_t v23 = sub_1001D1ADC();
  v24(v23);
  type metadata accessor for DetailCondition();
  sub_100162E4C();
  uint64_t v25 = sub_1001D1ADC();
  v26(v25);
  *(unsigned char *)(v21 + v22) = 0;
  uint64_t v27 = type metadata accessor for LocationComponentAction(0);
  swift_storeEnumTagMultiPayload();
  _s7Weather24LocationCompositionStateOwst_0(v21, 0, 1, v27);
  uint64_t result = sub_100182770(v9, a2, (void (*)(void))type metadata accessor for LocationComponentHeaderViewModel);
  *(_WORD *)(a2 + v20[6]) = 259;
  return result;
}

uint64_t sub_10005A510(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_10017DF4C(a1, &qword_100E829F0);
    sub_10017DF08(&qword_100E829F0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      type metadata accessor for LocationComponentHeaderViewModel(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          *(void *)a1 = *(void *)a2;
          *(void *)(a1 + 8) = *(void *)(a2 + 8);
          *(void *)(a1 + 16) = *(void *)(a2 + 16);
          *(void *)(a1 + 24) = *(void *)(a2 + 24);
          *(void *)(a1 + 32) = *(void *)(a2 + 32);
          *(void *)(a1 + 40) = *(void *)(a2 + 40);
          *(void *)(a1 + 48) = *(void *)(a2 + 48);
          *(void *)(a1 + 56) = *(void *)(a2 + 56);
          *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
          *(void *)(a1 + 72) = *(void *)(a2 + 72);
          *(void *)(a1 + 80) = *(void *)(a2 + 80);
          *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          break;
        case 2u:
          *(void *)a1 = *(void *)a2;
          *(void *)(a1 + 8) = *(void *)(a2 + 8);
          *(void *)(a1 + 16) = *(void *)(a2 + 16);
          *(void *)(a1 + 24) = *(void *)(a2 + 24);
          *(void *)(a1 + 32) = *(void *)(a2 + 32);
          *(void *)(a1 + 40) = *(void *)(a2 + 40);
          *(void *)(a1 + 48) = *(void *)(a2 + 48);
          *(void *)(a1 + 56) = *(void *)(a2 + 56);
          *(void *)(a1 + 64) = *(void *)(a2 + 64);
          *(void *)(a1 + 72) = *(void *)(a2 + 72);
          *(void *)(a1 + 80) = *(void *)(a2 + 80);
          *(void *)(a1 + 88) = *(void *)(a2 + 88);
          *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
          *(void *)(a1 + 104) = *(void *)(a2 + 104);
          *(void *)(a1 + 112) = *(void *)(a2 + 112);
          *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          break;
        case 3u:
          uint64_t v6 = type metadata accessor for WeatherDescription();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
          uint64_t v7 = type metadata accessor for LocationComponentHeaderViewModel.Description(0);
          uint64_t v8 = *(int *)(v7 + 20);
          uint64_t v9 = a1 + v8;
          *(void *)uint64_t v9 = *(void *)(a2 + v8);
          *(void *)(v9 + 8) = *(void *)(a2 + v8 + 8);
          *(void *)(v9 + 16) = *(void *)(a2 + v8 + 16);
          *(void *)(v9 + 24) = *(void *)(a2 + v8 + 24);
          *(unsigned char *)(v9 + 32) = *(unsigned char *)(a2 + v8 + 32);
          *(void *)(v9 + 40) = *(void *)(a2 + v8 + 40);
          *(void *)(v9 + 48) = *(void *)(a2 + v8 + 48);
          *(unsigned char *)(a1 + *(int *)(v7 + 24)) = *(unsigned char *)(a2 + *(int *)(v7 + 24));
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          break;
        case 5u:
          *(void *)a1 = *(void *)a2;
          *(void *)(a1 + 8) = *(void *)(a2 + 8);
          *(void *)(a1 + 16) = *(void *)(a2 + 16);
          *(void *)(a1 + 24) = *(void *)(a2 + 24);
          *(void *)(a1 + 32) = *(void *)(a2 + 32);
          *(void *)(a1 + 40) = *(void *)(a2 + 40);
          *(void *)(a1 + 48) = *(void *)(a2 + 48);
          *(void *)(a1 + 56) = *(void *)(a2 + 56);
          *(void *)(a1 + 64) = *(void *)(a2 + 64);
          *(void *)(a1 + 72) = *(void *)(a2 + 72);
          *(void *)(a1 + 80) = *(void *)(a2 + 80);
          *(void *)(a1 + 88) = *(void *)(a2 + 88);
          *(void *)(a1 + 96) = *(void *)(a2 + 96);
          *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
          *(void *)(a1 + 112) = *(void *)(a2 + 112);
          *(void *)(a1 + 120) = *(void *)(a2 + 120);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          break;
        default:
          *(void *)a1 = *(void *)a2;
          *(void *)(a1 + 8) = *(void *)(a2 + 8);
          *(void *)(a1 + 16) = *(void *)(a2 + 16);
          *(void *)(a1 + 24) = *(void *)(a2 + 24);
          *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
          *(void *)(a1 + 40) = *(void *)(a2 + 40);
          *(void *)(a1 + 48) = *(void *)(a2 + 48);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          break;
      }
      swift_storeEnumTagMultiPayload();
      uint64_t v10 = (int *)type metadata accessor for LocationComponentHeaderMetrics(0);
      *(void *)(a1 + v10[5]) = *(void *)(a2 + v10[5]);
      *(void *)(a1 + v10[6]) = *(void *)(a2 + v10[6]);
      uint64_t v11 = v10[7];
      uint64_t v12 = a1 + v11;
      uint64_t v13 = a2 + v11;
      char v14 = *(unsigned char *)(v13 + 8);
      *(void *)uint64_t v12 = *(void *)v13;
      *(unsigned char *)(v12 + 8) = v14;
      *(unsigned char *)(a1 + v10[8]) = *(unsigned char *)(a2 + v10[8]);
    }
    else
    {
      *(void *)a1 = *(void *)a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v15 = *(int *)(a3 + 20);
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = *(void *)v17;
  char v19 = *(unsigned char *)(v17 + 8);
  sub_100195B7C(*(void *)v17, v19);
  uint64_t v20 = *(void *)v16;
  char v21 = *(unsigned char *)(v16 + 8);
  *(void *)uint64_t v16 = v18;
  *(unsigned char *)(v16 + 8) = v19;
  sub_10018F6D8(v20, v21);
  uint64_t v22 = *(int *)(a3 + 24);
  uint64_t v23 = a1 + v22;
  uint64_t v24 = a2 + v22;
  *(void *)uint64_t v23 = *(void *)v24;
  *(void *)(v23 + 8) = *(void *)(v24 + 8);
  *(unsigned char *)(v23 + 16) = *(unsigned char *)(v24 + 16);
  *(void *)(v23 + 24) = *(void *)(v24 + 24);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_10005AA60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 16);
  char v7 = *(unsigned char *)(a2 + 24);
  sub_100195B7C(v6, v7);
  uint64_t v8 = *(void *)(a1 + 16);
  char v9 = *(unsigned char *)(a1 + 24);
  *(void *)(a1 + 16) = v6;
  *(unsigned char *)(a1 + 24) = v7;
  sub_10018F6D8(v8, v9);
  if (a1 != a2)
  {
    uint64_t v10 = *(int *)(a3 + 28);
    uint64_t v11 = (void *)(a1 + v10);
    uint64_t v12 = (void *)(a2 + v10);
    sub_10017DF4C(a1 + v10, &qword_100E82BD8);
    sub_10017DF08(&qword_100E82BD8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *uint64_t v11 = *v12;
      uint64_t v13 = *(int *)(type metadata accessor for LocationComponentCornerRadiusConfiguration(0) + 20);
      char v14 = (char *)v11 + v13;
      uint64_t v15 = (char *)v12 + v13;
      uint64_t v16 = type metadata accessor for RoundedCornerStyle();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
    }
    else
    {
      *uint64_t v11 = *v12;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v17 = *(int *)(a3 + 32);
  uint64_t v18 = a1 + v17;
  uint64_t v19 = a2 + v17;
  *(void *)uint64_t v18 = *(void *)v19;
  *(void *)(v18 + 8) = *(void *)(v19 + 8);
  *(void *)(v18 + 16) = *(void *)(v19 + 16);
  *(void *)(v18 + 24) = *(void *)(v19 + 24);
  *(void *)(v18 + 32) = *(void *)(v19 + 32);
  *(void *)(v18 + 40) = *(void *)(v19 + 40);
  *(unsigned char *)(v18 + 48) = *(unsigned char *)(v19 + 48);
  *(void *)(v18 + 56) = *(void *)(v19 + 56);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_10005ABFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)a2;
  uint64_t v6 = *(void *)(a2 + 8);
  uint64_t v7 = *(void *)(a2 + 16);
  uint64_t v8 = *(void *)(a2 + 24);
  uint64_t v9 = *(void *)(a2 + 32);
  uint64_t v10 = *(void *)(a2 + 40);
  uint64_t v12 = *(void *)(a2 + 48);
  uint64_t v11 = *(void *)(a2 + 56);
  uint64_t v29 = *(void *)(a2 + 64);
  char v30 = *(unsigned char *)(a2 + 72);
  sub_1001910C8(*(void *)a2, v6, v7, v8, v9, v10, v12, v11, v29, v30);
  uint64_t v13 = *(void *)a1;
  uint64_t v14 = *(void *)(a1 + 8);
  uint64_t v15 = *(void *)(a1 + 16);
  uint64_t v16 = *(void *)(a1 + 24);
  uint64_t v17 = *(void *)(a1 + 32);
  uint64_t v18 = *(void *)(a1 + 40);
  uint64_t v19 = *(void *)(a1 + 48);
  uint64_t v20 = *(void *)(a1 + 56);
  uint64_t v21 = *(void *)(a1 + 64);
  char v22 = *(unsigned char *)(a1 + 72);
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v6;
  *(void *)(a1 + 16) = v7;
  *(void *)(a1 + 24) = v8;
  *(void *)(a1 + 32) = v9;
  *(void *)(a1 + 40) = v10;
  *(void *)(a1 + 48) = v12;
  *(void *)(a1 + 56) = v11;
  *(void *)(a1 + 64) = v29;
  *(unsigned char *)(a1 + 72) = v30;
  sub_10018CCC4(v13, v14, v15, v16, v17, v18, v19, v20, v21, v22);
  if (a1 != a2)
  {
    uint64_t v23 = *(int *)(a3 + 20);
    uint64_t v24 = (void *)(a1 + v23);
    uint64_t v25 = (void *)(a2 + v23);
    sub_100178110(a1 + v23, &qword_100E63BC8);
    sub_10017DF08(&qword_100E63BC8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v26 = type metadata accessor for ContentSizeCategory();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v26 - 8) + 16))(v24, v25, v26);
    }
    else
    {
      *uint64_t v24 = *v25;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void sub_10005AD88(uint64_t a1, int *a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for WeatherConditionBackgroundModifier(0);
  uint64_t v49 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v48 = v6;
  uint64_t v45 = (uint64_t)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for Date();
  uint64_t v46 = *(void *)(v7 - 8);
  uint64_t v47 = v7;
  __chkstk_darwin(v7);
  uint64_t v44 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for WeatherConditionBackgroundOptions();
  uint64_t v50 = *(void *)(v9 - 8);
  uint64_t v51 = v9;
  __chkstk_darwin(v9);
  uint64_t v53 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for BackgroundAnimationData();
  uint64_t v52 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for BackgroundAnimationKind();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v42 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v18 = *a2;
  uint64_t v19 = *((void *)a2 + 1);
  WeatherConditionBackgroundModel.animationKind.getter();
  if ((*(unsigned int (**)(char *, uint64_t))(v15 + 88))(v17, v14) == enum case for BackgroundAnimationKind.vfx(_:))
  {
    uint64_t v20 = v13;
    uint64_t v21 = v52;
    char v22 = v53;
    uint64_t v43 = v19;
    if (sub_1002257C8())
    {
      uint64_t v23 = (void ***)(a3 + *(int *)(v5 + 84));
      uint64_t v25 = *v23;
      uint64_t v24 = (uint64_t)v23[1];
      aBlock = v25;
      uint64_t v55 = v24;
      sub_10017DF08(&qword_100EB4A78);
      State.wrappedValue.getter();
      int v26 = *(unsigned __int8 *)(v60 + 16);
      swift_release();
      if (v26 == 1)
      {
        WeatherConditionBackgroundModel.animationData.getter();
        BackgroundAnimationData.options.getter();
        (*(void (**)(char *, uint64_t))(v21 + 8))(v20, v11);
        char v27 = WeatherConditionBackgroundOptions.canShowCollisionLayer.getter();
        (*(void (**)(char *, uint64_t))(v50 + 8))(v22, v51);
        if (v27)
        {
          uint64_t v28 = v44;
          Date.init()();
          Date.timeIntervalSince1970.getter();
          uint64_t v30 = v29;
          (*(void (**)(char *, uint64_t))(v46 + 8))(v28, v47);
          uint64_t v31 = a3 + *(int *)(v5 + 88);
          uint64_t v33 = *(void *)(v31 + 8);
          aBlock = *(void ***)v31;
          uint64_t v32 = aBlock;
          uint64_t v55 = v33;
          uint64_t v60 = v30;
          sub_10017DF08(&qword_100EB4AB8);
          State.wrappedValue.setter();
          aBlock = v32;
          uint64_t v55 = v33;
          State.wrappedValue.getter();
          uint64_t v34 = v60;
          uint64_t v35 = self;
          uint64_t v36 = v45;
          sub_1001C9BA4(a3, v45, (void (*)(void))type metadata accessor for WeatherConditionBackgroundModifier);
          unint64_t v37 = (*(unsigned __int8 *)(v49 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v49 + 80);
          unint64_t v38 = (v48 + v37 + 7) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v39 = swift_allocObject();
          sub_1001CA430(v36, v39 + v37);
          *(void *)(v39 + v38) = v34;
          unint64_t v40 = v39 + ((v38 + 15) & 0xFFFFFFFFFFFFFFF8);
          *(_DWORD *)unint64_t v40 = v18;
          *(void *)(v40 + 8) = v43;
          uint64_t v58 = sub_100225A20;
          uint64_t v59 = v39;
          aBlock = _NSConcreteStackBlock;
          uint64_t v55 = 1107296256;
          uint64_t v56 = sub_10010A4D4;
          __n128 v57 = &unk_100E398E0;
          uint64_t v41 = _Block_copy(&aBlock);
          swift_bridgeObjectRetain();
          swift_release();
          [v35 setCompletionBlock:v41];
          _Block_release(v41);
        }
      }
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  }
}

uint64_t sub_10005B310(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_10017DF4C(a1, &qword_100E829F0);
    sub_10017DF08(&qword_100E829F0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      type metadata accessor for LocationComponentHeaderViewModel(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          *(void *)a1 = *(void *)a2;
          *(void *)(a1 + 8) = *(void *)(a2 + 8);
          *(void *)(a1 + 16) = *(void *)(a2 + 16);
          *(void *)(a1 + 24) = *(void *)(a2 + 24);
          *(void *)(a1 + 32) = *(void *)(a2 + 32);
          *(void *)(a1 + 40) = *(void *)(a2 + 40);
          *(void *)(a1 + 48) = *(void *)(a2 + 48);
          *(void *)(a1 + 56) = *(void *)(a2 + 56);
          *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
          *(void *)(a1 + 72) = *(void *)(a2 + 72);
          *(void *)(a1 + 80) = *(void *)(a2 + 80);
          *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          break;
        case 2u:
          *(void *)a1 = *(void *)a2;
          *(void *)(a1 + 8) = *(void *)(a2 + 8);
          *(void *)(a1 + 16) = *(void *)(a2 + 16);
          *(void *)(a1 + 24) = *(void *)(a2 + 24);
          *(void *)(a1 + 32) = *(void *)(a2 + 32);
          *(void *)(a1 + 40) = *(void *)(a2 + 40);
          *(void *)(a1 + 48) = *(void *)(a2 + 48);
          *(void *)(a1 + 56) = *(void *)(a2 + 56);
          *(void *)(a1 + 64) = *(void *)(a2 + 64);
          *(void *)(a1 + 72) = *(void *)(a2 + 72);
          *(void *)(a1 + 80) = *(void *)(a2 + 80);
          *(void *)(a1 + 88) = *(void *)(a2 + 88);
          *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
          *(void *)(a1 + 104) = *(void *)(a2 + 104);
          *(void *)(a1 + 112) = *(void *)(a2 + 112);
          *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          break;
        case 3u:
          uint64_t v6 = type metadata accessor for WeatherDescription();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
          uint64_t v7 = type metadata accessor for LocationComponentHeaderViewModel.Description(0);
          uint64_t v8 = *(int *)(v7 + 20);
          uint64_t v9 = a1 + v8;
          *(void *)uint64_t v9 = *(void *)(a2 + v8);
          *(void *)(v9 + 8) = *(void *)(a2 + v8 + 8);
          *(void *)(v9 + 16) = *(void *)(a2 + v8 + 16);
          *(void *)(v9 + 24) = *(void *)(a2 + v8 + 24);
          *(unsigned char *)(v9 + 32) = *(unsigned char *)(a2 + v8 + 32);
          *(void *)(v9 + 40) = *(void *)(a2 + v8 + 40);
          *(void *)(v9 + 48) = *(void *)(a2 + v8 + 48);
          *(unsigned char *)(a1 + *(int *)(v7 + 24)) = *(unsigned char *)(a2 + *(int *)(v7 + 24));
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          break;
        case 5u:
          *(void *)a1 = *(void *)a2;
          *(void *)(a1 + 8) = *(void *)(a2 + 8);
          *(void *)(a1 + 16) = *(void *)(a2 + 16);
          *(void *)(a1 + 24) = *(void *)(a2 + 24);
          *(void *)(a1 + 32) = *(void *)(a2 + 32);
          *(void *)(a1 + 40) = *(void *)(a2 + 40);
          *(void *)(a1 + 48) = *(void *)(a2 + 48);
          *(void *)(a1 + 56) = *(void *)(a2 + 56);
          *(void *)(a1 + 64) = *(void *)(a2 + 64);
          *(void *)(a1 + 72) = *(void *)(a2 + 72);
          *(void *)(a1 + 80) = *(void *)(a2 + 80);
          *(void *)(a1 + 88) = *(void *)(a2 + 88);
          *(void *)(a1 + 96) = *(void *)(a2 + 96);
          *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
          *(void *)(a1 + 112) = *(void *)(a2 + 112);
          *(void *)(a1 + 120) = *(void *)(a2 + 120);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          break;
        default:
          *(void *)a1 = *(void *)a2;
          *(void *)(a1 + 8) = *(void *)(a2 + 8);
          *(void *)(a1 + 16) = *(void *)(a2 + 16);
          *(void *)(a1 + 24) = *(void *)(a2 + 24);
          *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
          *(void *)(a1 + 40) = *(void *)(a2 + 40);
          *(void *)(a1 + 48) = *(void *)(a2 + 48);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          break;
      }
      swift_storeEnumTagMultiPayload();
      uint64_t v10 = (int *)type metadata accessor for LocationComponentHeaderMetrics(0);
      *(void *)(a1 + v10[5]) = *(void *)(a2 + v10[5]);
      *(void *)(a1 + v10[6]) = *(void *)(a2 + v10[6]);
      uint64_t v11 = v10[7];
      uint64_t v12 = a1 + v11;
      uint64_t v13 = a2 + v11;
      char v14 = *(unsigned char *)(v13 + 8);
      *(void *)uint64_t v12 = *(void *)v13;
      *(unsigned char *)(v12 + 8) = v14;
      *(unsigned char *)(a1 + v10[8]) = *(unsigned char *)(a2 + v10[8]);
    }
    else
    {
      *(void *)a1 = *(void *)a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v15 = *(int *)(a3 + 20);
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = *(void *)v17;
  char v19 = *(unsigned char *)(v17 + 8);
  sub_100195B7C(*(void *)v17, v19);
  uint64_t v20 = *(void *)v16;
  char v21 = *(unsigned char *)(v16 + 8);
  *(void *)uint64_t v16 = v18;
  *(unsigned char *)(v16 + 8) = v19;
  sub_10018F6D8(v20, v21);
  uint64_t v22 = *(int *)(a3 + 24);
  uint64_t v23 = a1 + v22;
  uint64_t v24 = a2 + v22;
  *(void *)uint64_t v23 = *(void *)v24;
  *(void *)(v23 + 8) = *(void *)(v24 + 8);
  *(void *)(v23 + 16) = *(void *)(v24 + 16);
  *(unsigned char *)(v23 + 24) = *(unsigned char *)(v24 + 24);
  *(void *)(v23 + 32) = *(void *)(v24 + 32);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_10005B868@<X0>(uint64_t a1@<X8>)
{
  uint64_t v27 = a1;
  uint64_t v1 = sub_10017DF08(&qword_100E63FF8);
  uint64_t v2 = __chkstk_darwin(v1 - 8);
  uint64_t v26 = (uint64_t)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v25 - v4;
  sub_10006E850((uint64_t)&v25 - v4);
  type metadata accessor for LocationHeaderView(0);
  static Font.largeTitle.getter();
  uint64_t v6 = Text.font(_:)();
  uint64_t v8 = v7;
  char v10 = v9;
  swift_release();
  char v11 = v10 & 1;
  static Color.black.getter();
  sub_10021FC00();
  Color.opacity(_:)();
  swift_release();
  sub_10021FC2C();
  sub_10021FC74();
  sub_10021FC50();
  uint64_t v12 = Text.shadow(color:radius:x:y:)();
  uint64_t v14 = v13;
  char v16 = v15;
  uint64_t v18 = v17;
  swift_release();
  sub_100191924(v6, v8, v11);
  swift_bridgeObjectRelease();
  double v19 = sub_10024A444();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v21 = v26;
  sub_10006DF38((uint64_t)v5, v26, &qword_100E63FF8);
  uint64_t v22 = v27;
  sub_10006DF38(v21, v27, &qword_100E63FF8);
  uint64_t v23 = v22 + *(int *)(sub_10017DF08(&qword_100E64018) + 48);
  *(void *)uint64_t v23 = v12;
  *(void *)(v23 + 8) = v14;
  *(unsigned char *)(v23 + 16) = v16 & 1;
  *(void *)(v23 + 24) = v18;
  *(void *)(v23 + 32) = 0;
  *(double *)(v23 + 40) = v19;
  *(void *)(v23 + 48) = KeyPath;
  *(void *)(v23 + 56) = 0x3FC999999999999ALL;
  sub_100190CC4(v12, v14, v16 & 1);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_100178110((uint64_t)v5, &qword_100E63FF8);
  sub_100191924(v12, v14, v16 & 1);
  swift_release();
  swift_bridgeObjectRelease();
  return sub_100178110(v21, &qword_100E63FF8);
}

uint64_t sub_10005BAF0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_10017DF08(&qword_100E63FF8);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v27 = (uint64_t)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v26 = (uint64_t)&v25 - v5;
  type metadata accessor for LocationHeaderView(0);
  static Font.largeTitle.getter();
  uint64_t v6 = Text.font(_:)();
  uint64_t v8 = v7;
  char v10 = v9;
  swift_release();
  char v11 = v10 & 1;
  static Color.black.getter();
  sub_10021FC00();
  Color.opacity(_:)();
  swift_release();
  sub_10021FC2C();
  sub_10021FC74();
  sub_10021FC50();
  uint64_t v12 = Text.shadow(color:radius:x:y:)();
  uint64_t v14 = v13;
  char v16 = v15;
  uint64_t v18 = v17;
  swift_release();
  sub_100191924(v6, v8, v11);
  swift_bridgeObjectRelease();
  double v19 = sub_10024A444();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v21 = v26;
  sub_10006E850(v26);
  uint64_t v22 = v27;
  sub_10006DF38(v21, v27, &qword_100E63FF8);
  *(void *)a1 = v12;
  *(void *)(a1 + 8) = v14;
  *(unsigned char *)(a1 + 16) = v16 & 1;
  *(void *)(a1 + 24) = v18;
  *(void *)(a1 + 32) = 0;
  *(double *)(a1 + 40) = v19;
  *(void *)(a1 + 48) = KeyPath;
  *(void *)(a1 + 56) = 0x3FC999999999999ALL;
  uint64_t v23 = sub_10017DF08(&qword_100E64000);
  sub_10006DF38(v22, a1 + *(int *)(v23 + 48), &qword_100E63FF8);
  sub_100190CC4(v12, v14, v16 & 1);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_100178110(v21, &qword_100E63FF8);
  sub_100178110(v22, &qword_100E63FF8);
  sub_100191924(v12, v14, v16 & 1);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_10005BD78(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MainAction();
  uint64_t result = __chkstk_darwin(v4);
  uint64_t v7 = (void *)((char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = *a1;
  if (*(void *)(*a1 + 16))
  {
    char v9 = *(uint64_t (**)(uint64_t))(a2 + 136);
    if (v9)
    {
      *uint64_t v7 = v8;
      type metadata accessor for LocationsAction();
      swift_storeEnumTagMultiPayload();
      swift_storeEnumTagMultiPayload();
      uint64_t v11 = 0;
      memset(v10, 0, sizeof(v10));
      sub_10005BEBC((uint64_t)v9);
      swift_bridgeObjectRetain();
      sub_1001AAF58((uint64_t)v7, (uint64_t)v10, v9);
      sub_100178160((uint64_t)v10, (uint64_t *)&unk_100EA01F0);
      sub_1001592F0((uint64_t)v7, (void (*)(void))type metadata accessor for MainAction);
      return sub_1001361AC((uint64_t)v9);
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_10005BEBC(uint64_t result)
{
  if (result) {
    return swift_retain();
  }
  return result;
}

uint64_t *sub_10005BECC(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v6 = a2 + 11;
  *a1 = *a2;
  swift_retain();
  swift_release();
  sub_1000C1E18(a1 + 1, a2 + 1);
  sub_1000C1E18(a1 + 6, a2 + 6);
  sub_1000C1E18(a1 + 11, v6);
  if (a1 != a2)
  {
    uint64_t v7 = a3[8];
    uint64_t v8 = (uint64_t *)((char *)a1 + v7);
    char v9 = (uint64_t *)((char *)a2 + v7);
    sub_100178110((uint64_t)a1 + v7, &qword_100E63BC8);
    sub_10017DF08(&qword_100E63BC8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v10 = type metadata accessor for ContentSizeCategory();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    }
    else
    {
      *uint64_t v8 = *v9;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v11 = a3[9];
    uint64_t v12 = (uint64_t *)((char *)a1 + v11);
    uint64_t v13 = (uint64_t *)((char *)a2 + v11);
    sub_100178110((uint64_t)a1 + v11, (uint64_t *)&unk_100EAA550);
    sub_10017DF08((uint64_t *)&unk_100EAA550);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v14 = type metadata accessor for LegibilityWeight();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v13, 1, v14))
      {
        uint64_t v15 = sub_10017DF08(&qword_100E827E0);
        memcpy(v12, v13, *(void *)(*(void *)(v15 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v12, 0, 1, v14);
      }
    }
    else
    {
      *uint64_t v12 = *v13;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v16 = a3[10];
    uint64_t v17 = (uint64_t *)((char *)a1 + v16);
    uint64_t v18 = (uint64_t *)((char *)a2 + v16);
    sub_100178110((uint64_t)a1 + v16, (uint64_t *)&unk_100EAA560);
    sub_10017DF08((uint64_t *)&unk_100EAA560);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v19 = type metadata accessor for UserInterfaceSizeClass();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v18, 1, v19))
      {
        uint64_t v20 = sub_10017DF08(&qword_100E65ED8);
        memcpy(v17, v18, *(void *)(*(void *)(v20 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v17, 0, 1, v19);
      }
    }
    else
    {
      *uint64_t v17 = *v18;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v21 = a3[11];
  uint64_t v22 = (char *)a1 + v21;
  uint64_t v23 = (char *)a2 + v21;
  uint64_t v24 = *(void *)v23;
  char v25 = v23[8];
  sub_100195B7C(*(void *)v23, v25);
  uint64_t v26 = *(void *)v22;
  char v27 = v22[8];
  *(void *)uint64_t v22 = v24;
  v22[8] = v25;
  sub_10018F6D8(v26, v27);
  *(uint64_t *)((char *)a1 + a3[12]) = *(uint64_t *)((char *)a2 + a3[12]);
  *(uint64_t *)((char *)a1 + a3[13]) = *(uint64_t *)((char *)a2 + a3[13]);
  *(uint64_t *)((char *)a1 + a3[14]) = *(uint64_t *)((char *)a2 + a3[14]);
  swift_retain();
  swift_release();
  sub_1000C1E18((uint64_t *)((char *)a1 + a3[15]), (uint64_t *)((char *)a2 + a3[15]));
  return a1;
}

uint64_t sub_10005C280@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  memcpy(v6, v2, sizeof(v6));
  return sub_10005C2D4(a1, a2);
}

uint64_t sub_10005C2D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t KeyPath = swift_getKeyPath();
  memcpy(__dst, v2, sizeof(__dst));
  sub_1001BEAB0((uint64_t)v2);
  sub_1001BEAF4();
  sub_1001BEAB0((uint64_t)v2);
  double v6 = sub_1000E0B50();
  sub_1001BEAB0((uint64_t)v2);
  sub_1001BEAF4();
  sub_1001BEAB0((uint64_t)v2);
  uint64_t v7 = sub_10017DF08(&qword_100EA1DE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(a2, a1, v7);
  uint64_t result = sub_10017DF08(&qword_100EA1DF0);
  uint64_t v9 = a2 + *(int *)(result + 36);
  *(void *)uint64_t v9 = KeyPath;
  *(double *)(v9 + 8) = v6 - (v10 + v10);
  *(unsigned char *)(v9 + 16) = 0;
  return result;
}

uint64_t *sub_10005C42C(uint64_t *a1, uint64_t *a2, uint64_t a3, void (*a4)(void, uint64_t, uint64_t), void (*a5)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v7 = *a2;
  uint64_t v8 = a2[1];
  uint64_t v9 = *((unsigned __int8 *)a2 + 16);
  a4(*a2, v8, v9);
  uint64_t v10 = *a1;
  uint64_t v11 = a1[1];
  uint64_t v12 = *((unsigned __int8 *)a1 + 16);
  *a1 = v7;
  a1[1] = v8;
  *((unsigned char *)a1 + 16) = v9;
  a5(v10, v11, v12);
  return a1;
}

uint64_t sub_10005C498()
{
  uint64_t v5 = " ";
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      uint64_t v3 = *(void *)(result - 8) + 64;
      swift_getTupleTypeLayout2();
      double v6 = &v4;
      uint64_t v7 = v3;
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

uint64_t sub_10005C588()
{
  type metadata accessor for SettingReader();
  static SettingReader.shared.getter();
  if (qword_100E625E8 != -1) {
    swift_once();
  }
  SettingReader.read<A>(_:)();
  swift_release();
  if (v6) {
    return 1;
  }
  static SettingReader.shared.getter();
  if (qword_100E625F0 != -1) {
    swift_once();
  }
  SettingReader.read<A>(_:)();
  swift_release();
  if (v5) {
    return 0;
  }
  static SettingReader.shared.getter();
  if (qword_100E625F8 != -1) {
    swift_once();
  }
  SettingReader.read<A>(_:)();
  swift_release();
  if (v4) {
    return 2;
  }
  static SettingReader.shared.getter();
  if (qword_100E62600 != -1) {
    swift_once();
  }
  SettingReader.read<A>(_:)();
  swift_release();
  if (v3) {
    return 3;
  }
  static SettingReader.shared.getter();
  if (qword_100E62610 != -1) {
    swift_once();
  }
  SettingReader.read<A>(_:)();
  swift_release();
  if (v2) {
    return 5;
  }
  static SettingReader.shared.getter();
  if (qword_100E62608 != -1) {
    swift_once();
  }
  SettingReader.read<A>(_:)();
  swift_release();
  if (v1) {
    return 4;
  }
  else {
    return 6;
  }
}

unint64_t sub_10005C814(uint64_t a1)
{
  unint64_t result = sub_10017DFE0(a1);
  if (!result)
  {
    uint64_t v5 = v4;
    sub_10018C6DC(v3);
    sub_10024D5E4(v5);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, v1);
  }
  return result;
}

uint64_t sub_10005C8AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for Location();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  type metadata accessor for SavedLocation();
  return swift_storeEnumTagMultiPayload();
}

void sub_10005C934(void *a1)
{
  uint64_t v4 = v1;
  uint64_t v6 = type metadata accessor for DispatchWorkItemFlags();
  sub_100179C0C();
  uint64_t v8 = v7;
  __chkstk_darwin(v9);
  sub_100152344();
  type metadata accessor for DispatchQoS();
  sub_100179C0C();
  __chkstk_darwin(v10);
  sub_10016279C();
  uint64_t v13 = *(void **)(v4 + 16);
  if (v13)
  {
    uint64_t v24 = v12;
    uint64_t v25 = v11;
    uint64_t v14 = v13;
    UnfairLock.lock()();
    uint64_t v15 = *(void **)(v4 + 40);
    *(void *)(v4 + 40) = a1;

    context.version = 1;
    context.info = (void *)v4;
    context.retain = (const void *(__cdecl *)(const void *))sub_1002201B4;
    context.release = (void (__cdecl *)(const void *))j_j__swift_unknownObjectRelease;
    context.copyDescription = (CFStringRef (__cdecl *)(const void *))sub_10090B3E0;
    id v16 = a1;
    SCPreferencesSetCallback(v14, (SCPreferencesCallBack)sub_10090B300, &context);
    SCPreferencesSetDispatchQueue(v14, *(dispatch_queue_t *)(v4 + 32));
    UnfairLock.unlock()();
    uint64_t v17 = swift_allocObject();
    swift_weakInit();
    uint64_t v18 = swift_allocObject();
    *(void *)(v18 + 16) = v17;
    *(void *)(v18 + 24) = v14;
    aBlock[4] = sub_1002201AC;
    aBlock[5] = v18;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10010A4D4;
    void aBlock[3] = &unk_100E2DEE8;
    uint64_t v19 = _Block_copy(aBlock);
    uint64_t v20 = v14;
    swift_retain();
    static DispatchQoS.unspecified.getter();
    sub_100128DDC((unint64_t *)&qword_100EA0200, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_10017DF08(&qword_100E75530);
    sub_10012470C((unint64_t *)&qword_100EA0210, &qword_100E75530);
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v19);

    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v2, v6);
    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v3, v25);
    swift_release();
    swift_release();
  }
  else
  {
    if (qword_100E62830 != -1) {
      swift_once();
    }
    uint64_t v21 = type metadata accessor for Logger();
    sub_1002102B0(v21, (uint64_t)qword_100F51F98);
    uint64_t v26 = Logger.logObject.getter();
    os_log_type_t v22 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v26, v22))
    {
      uint64_t v23 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v23 = 0;
      _os_log_impl((void *)&_mh_execute_header, v26, v22, "Cannot start monitoring Airplane Mode - no preferences", v23, 2u);
      swift_slowDealloc();
    }
  }
}

uint64_t sub_10005CD64(void *a1)
{
  uint64_t v2 = sub_10017DF08(&qword_100E71B78);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for SessionManager.Options();
  __chkstk_darwin(v5);
  uint64_t v14 = type metadata accessor for SessionManagerConfiguration();
  uint64_t v6 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10017DF08(&qword_100E71B80);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_100C25ED0;
  static SessionManager.Options.gracefulNoSessionEventSubmission.getter();
  static SessionManager.Options.gracefulEventCreation.getter();
  uint64_t v15 = v9;
  sub_100019A3C((unint64_t *)&qword_100E71B88, (void (*)(uint64_t))&type metadata accessor for SessionManager.Options);
  sub_10017DF08(&qword_100E71B90);
  sub_100216200();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  sub_1001B1E64(a1, a1[3]);
  type metadata accessor for FlushProcessor();
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!result)
  {
    __break(1u);
    goto LABEL_7;
  }
  sub_1001B1E64(a1, a1[3]);
  uint64_t v11 = type metadata accessor for TimestampJitter();
  dispatch thunk of ResolverType.resolve<A>(_:)();
  uint64_t result = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v4, 1, v11);
  if (result == 1)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E71BA0);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v15)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  SessionManagerConfiguration.init(options:flushProcessor:timestampJitter:privacyValidationProvider:)();
  sub_1001B1E64(a1, a1[3]);
  type metadata accessor for AppSessionManager();
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (result)
  {
    uint64_t v12 = AppSessionManager.createSessionManager(with:)();
    swift_release();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v14);
    return v12;
  }
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_10005D0F4(uint64_t a1, unsigned int *a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v20 = a5;
  uint64_t v6 = type metadata accessor for Access();
  sub_100179C0C();
  uint64_t v8 = v7;
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for FeatureState();
  sub_100179C0C();
  uint64_t v14 = v13;
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v19 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10017DF08(&qword_100E89E10);
  (*(void (**)(char *, void, uint64_t))(v14 + 104))(v17, *a2, v12);
  (*(void (**)(char *, void, uint64_t))(v8 + 104))(v11, enum case for Access.protected(_:), v6);
  uint64_t result = Setting<>.init(_:defaultValue:access:)();
  uint64_t *v20 = result;
  return result;
}

void *sub_10005D258(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  uint64_t v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  swift_retain();
  swift_release();
  uint64_t v7 = *(int *)(a3 + 28);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for Date();
  int v11 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v10);
  int v12 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v10);
  if (!v11)
  {
    uint64_t v13 = *(void *)(v10 - 8);
    if (!v12)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v8, v9, v10);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v13 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v12)
  {
LABEL_6:
    uint64_t v14 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    memcpy(v8, v9, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v8, 0, 1, v10);
LABEL_7:
  uint64_t v15 = sub_10017DF08(&qword_100E7DDF8);
  *(void *)&v8[*(int *)(v15 + 28)] = *(void *)&v9[*(int *)(v15 + 28)];
  swift_retain();
  swift_release();
  uint64_t v16 = *(int *)(a3 + 32);
  uint64_t v17 = (char *)a1 + v16;
  uint64_t v18 = (char *)a2 + v16;
  *uint64_t v17 = *v18;
  *((void *)v17 + 1) = *((void *)v18 + 1);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_10005D43C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_10005D470();
  return sub_10006DF38(v2, a1, (uint64_t *)&unk_100EAA640);
}

uint64_t sub_10005D470()
{
  if (qword_100E62AA8 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_10017DF08((uint64_t *)&unk_100EAA640);

  return sub_1002102B0(v0, (uint64_t)qword_100F52380);
}

uint64_t sub_10005D4D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for MainAction();
  __chkstk_darwin(v5);
  uint64_t v7 = (uint64_t *)((char *)v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = *(uint64_t (**)(uint64_t))(a1 + 48);
  uint64_t v9 = (uint64_t)v7 + *(int *)(sub_10017DF08(&qword_100E6BBB0) + 48);
  swift_retain();
  *uint64_t v7 = Location.id.getter();
  v7[1] = v10;
  sub_1001B9A30(a3, v9, (void (*)(void))type metadata accessor for NewsDataModel);
  type metadata accessor for WeatherDataAction();
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  uint64_t v13 = 0;
  memset(v12, 0, sizeof(v12));
  sub_1001AAF58((uint64_t)v7, (uint64_t)v12, v8);
  sub_10017DF4C((uint64_t)v12, (uint64_t *)&unk_100EA01F0);
  sub_1001BC5DC();
  return swift_release();
}

void sub_10005D630()
{
  sub_100162EA0();
  uint64_t v42 = v2;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  uint64_t v10 = v9;
  uint64_t v11 = type metadata accessor for UUID();
  sub_100179C0C();
  uint64_t v43 = v12;
  __chkstk_darwin(v13);
  sub_100152344();
  uint64_t v14 = type metadata accessor for PreprocessedWeatherData();
  uint64_t v15 = sub_100109308(v14);
  __chkstk_darwin(v15);
  sub_10017EF38(v16, v37);
  uint64_t v17 = type metadata accessor for WeatherData(0);
  uint64_t v18 = sub_100109308(v17);
  __chkstk_darwin(v18);
  sub_10008B8C0();
  uint64_t v19 = sub_10017DF08(&qword_100E63770);
  uint64_t v20 = sub_100109308(v19);
  __chkstk_darwin(v20);
  sub_1001A072C();
  __chkstk_darwin(v21);
  uint64_t v23 = (char *)&v37 - v22;
  __chkstk_darwin(v24);
  uint64_t v26 = (char *)&v37 - v25;
  uint64_t v44 = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1001BBE9C(v8, v6, v4);
  swift_bridgeObjectRelease();
  uint64_t v27 = type metadata accessor for LocationWeatherDataState(0);
  sub_10012B520((uint64_t)v26, 1, v27);
  if (v28) {
    goto LABEL_5;
  }
  uint64_t v40 = v10;
  sub_1001B7204((uint64_t)v26, (uint64_t)v23, &qword_100E63770);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_100156908((uint64_t)v23, (void (*)(void))type metadata accessor for LocationWeatherDataState);
    uint64_t v10 = v40;
LABEL_5:
    sub_100157394(v10, v0, (void (*)(void))type metadata accessor for NewsDataModel);
    swift_storeEnumTagMultiPayload();
    sub_10019B1C4();
    sub_100176B1C();
    goto LABEL_6;
  }
  uint64_t v29 = sub_10017DF08(&qword_100E63748);
  uint64_t v37 = v8;
  uint64_t v30 = v29;
  uint64_t v31 = &v23[*(int *)(v29 + 48)];
  unint64_t v38 = &v23[*(int *)(v29 + 64)];
  uint64_t v39 = v11;
  sub_100178C8C((uint64_t)v23, v1, (void (*)(void))type metadata accessor for WeatherData);
  uint64_t v32 = (uint64_t)v31;
  uint64_t v33 = v41;
  sub_100178C8C(v32, v41, (void (*)(void))type metadata accessor for PreprocessedWeatherData);
  uint64_t v34 = v0 + *(int *)(v30 + 48);
  uint64_t v35 = v0 + *(int *)(v30 + 64);
  sub_100157394(v1, v0, (void (*)(void))type metadata accessor for WeatherData);
  sub_100157394(v33, v34, (void (*)(void))type metadata accessor for PreprocessedWeatherData);
  sub_100157394(v40, v35, (void (*)(void))type metadata accessor for NewsDataModel);
  swift_storeEnumTagMultiPayload();
  sub_10019B1C4();
  sub_100176B1C();
  sub_100156908(v33, (void (*)(void))type metadata accessor for PreprocessedWeatherData);
  sub_100156908(v1, (void (*)(void))type metadata accessor for WeatherData);
  sub_100156908((uint64_t)v38, (void (*)(void))type metadata accessor for NewsDataModel);
LABEL_6:
  sub_100178110((uint64_t)v26, &qword_100E63770);
  swift_bridgeObjectRetain();
  UUID.init()();
  UUID.uuidString.getter();
  sub_100162F0C();
  v36();
  sub_100162694();
}

uint64_t sub_10005DA28()
{
  uint64_t v0 = type metadata accessor for LocationViewPage(0);
  sub_1001627C0(v0);
  uint64_t v1 = (double *)sub_10017238C();

  return sub_1000991B4(v1, v2);
}

uint64_t sub_10005DA6C(void *a1)
{
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E64798);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  uint64_t v3 = v18;
  if (!v18)
  {
    __break(1u);
    goto LABEL_6;
  }
  uint64_t v5 = v20;
  uint64_t v4 = v21;
  uint64_t v6 = v19;
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E907D0);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v17)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v7 = *sub_1001B1E64(v16, v17);
  uint64_t v14 = type metadata accessor for LocationViewerInputFactory();
  uint64_t v15 = &off_100E09530;
  v13[0] = v7;
  sub_10020D948((uint64_t)v13, (uint64_t)v12);
  uint64_t v8 = swift_allocObject();
  sub_1001262E4(v12, v8 + 16);
  swift_retain();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v13);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v16);
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = sub_100138EA4;
  *(void *)(v9 + 24) = v8;
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E907E0);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v17)
  {
    uint64_t v10 = *sub_1001B1E64(v16, v17);
    uint64_t v14 = type metadata accessor for LocationViewerViewModelFactory();
    uint64_t v15 = &off_100E268E8;
    v13[0] = v10;
    sub_10020D948((uint64_t)v13, (uint64_t)v12);
    uint64_t v11 = swift_allocObject();
    sub_1001262E4(v12, v11 + 16);
    swift_retain();
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v13);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v16);
    sub_10017DF08(&qword_100E64AB8);
    swift_allocObject();
    return sub_100066974(v3, v6, v5, v4, sub_1001B0A30, 0, sub_10021698C, v9, sub_10021E47C, v11);
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_10005DCF0(double a1, uint64_t a2, char a3, uint64_t a4, char a5)
{
  uint64_t v10 = sub_10017DF08(&qword_100E82B10);
  sub_100162E4C();
  __chkstk_darwin(v11);
  sub_10012B938();
  uint64_t KeyPath = swift_getKeyPath();
  if ((a3 & 1) == 0)
  {
    char v13 = a5 & 1;
    sub_100195B7C(a4, v13);
    sub_100149AE8();
    char v15 = v14;
    sub_10018F6D8(a4, v13);
    if (v15) {
      a1 = 0.0;
    }
  }
  sub_10017DF08(&qword_100E82B18);
  sub_100162E4C();
  sub_100119108();
  v16();
  uint64_t v17 = v5 + *(int *)(v10 + 36);
  *(void *)uint64_t v17 = KeyPath;
  *(double *)(v17 + 8) = a1;
  uint64_t v18 = sub_10012B5E8();
  return sub_10024D364(v18, v19, v20);
}

uint64_t sub_10005DE1C()
{
  uint64_t v0 = type metadata accessor for AnimatableTabView();
  sub_1001627C0(v0);

  return sub_10006DFD4();
}

void sub_10005DF18(uint64_t a1)
{
  v3.receiver = v1;
  v3.super_class = (Class)swift_getObjectType();
  [super didMoveToParentViewController:a1];
  sub_1000F2D90();
}

void *sub_10005DF64(uint64_t a1, char a2)
{
  type metadata accessor for PrecipitationRelevancyWindow();
  sub_100179C0C();
  uint64_t v42 = v3;
  uint64_t v43 = v2;
  __chkstk_darwin(v2);
  sub_100109314();
  uint64_t v41 = v4;
  uint64_t v5 = sub_10017DF08(&qword_100E6E8F8);
  __chkstk_darwin(v5 - 8);
  sub_1001626E0();
  uint64_t v8 = v7 - v6;
  uint64_t v9 = sub_10017DF08(&qword_100E6E900);
  sub_100179C0C();
  uint64_t v45 = v10;
  __chkstk_darwin(v11);
  sub_100109314();
  uint64_t v44 = v12;
  uint64_t v13 = sub_10017DF08(&qword_100E885C0);
  __chkstk_darwin(v13 - 8);
  sub_1001626E0();
  uint64_t v16 = v15 - v14;
  uint64_t v17 = type metadata accessor for AirQuality();
  sub_100179C0C();
  uint64_t v19 = v18;
  __chkstk_darwin(v20);
  sub_1001626E0();
  uint64_t v23 = v22 - v21;
  uint64_t v47 = &_swiftEmptySetSingleton;
  if (qword_100E62A30 != -1) {
    swift_once();
  }
  sub_10021E4FC();
  Configurable.setting<A>(_:)();
  if (v46 == 1) {
    sub_10019F774();
  }
  if (qword_100E62A48 != -1) {
    swift_once();
  }
  Configurable.setting<A>(_:)();
  if (v46 == 1) {
    sub_100180B80();
  }
  type metadata accessor for WeatherData(0);
  WeatherDataModel.airQuality.getter();
  if (_s7Weather24LocationCompositionStateOwet_0(v16, 1, v17) == 1)
  {
    sub_1000F3400(v16, &qword_100E885C0);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 32))(v23, v16, v17);
    if (AirQuality.isSignificant.getter()) {
      sub_10019F774();
    }
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v23, v17);
  }
  WeatherDataModel.minuteForecast.getter();
  if (_s7Weather24LocationCompositionStateOwet_0(v8, 1, v9) == 1)
  {
    sub_1000F3400(v8, &qword_100E6E8F8);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v45 + 32))(v44, v8, v9);
    if (a2)
    {
      uint64_t v24 = v41;
      *uint64_t v41 = vdupq_n_s64(0x40AC200000000000uLL);
      uint64_t v25 = (unsigned int *)&enum case for PrecipitationRelevancyWindow.window(_:);
    }
    else
    {
      uint64_t v25 = (unsigned int *)&enum case for PrecipitationRelevancyWindow.default(_:);
      uint64_t v24 = v41;
    }
    (*(void (**)(int64x2_t *, void, uint64_t))(v42 + 104))(v24, *v25, v43);
    char v26 = Forecast<>.isRelevant(in:)();
    (*(void (**)(int64x2_t *, uint64_t))(v42 + 8))(v24, v43);
    if (v26) {
      sub_100180B80();
    }
    (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v44, v9);
  }
  if (qword_100E62AE0 != -1) {
    swift_once();
  }
  if (byte_100EAF668 == 1)
  {
    if (qword_100E62AF0 != -1) {
      swift_once();
    }
    if (byte_100EAF678 == 1) {
      sub_10019F774();
    }
    if (qword_100E62AF8 != -1) {
      swift_once();
    }
    if (byte_100EAF679 == 1) {
      sub_100180B80();
    }
    if (qword_100E62B00 != -1) {
      swift_once();
    }
    if (byte_100EAF67A == 1) {
      sub_1007EC358(&v46, 2);
    }
    if (qword_100E62B08 != -1) {
      swift_once();
    }
    if (byte_100EAF67B == 1) {
      sub_1007EC358(&v46, 3);
    }
  }
  if (qword_100E62B10 != -1) {
    swift_once();
  }
  if (byte_100EAF67C == 1)
  {
    sub_10017DF08(&qword_100EAF720);
    uint64_t v27 = type metadata accessor for WeatherAlert();
    sub_100164920(v27);
    uint64_t v29 = *(void *)(v28 + 72);
    unint64_t v31 = (*(unsigned __int8 *)(v30 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80);
    uint64_t v32 = swift_allocObject();
    *(_OWORD *)(v32 + 16) = xmmword_100C25ED0;
    uint64_t v33 = v32 + v31;
    sub_100AD5E40(v33);
    uint64_t v34 = v33 + v29;
  }
  else
  {
    if (qword_100E62B18 != -1) {
      swift_once();
    }
    if (byte_100EAF67D != 1)
    {
      WeatherDataModel.weatherAlerts.getter();
      return v47;
    }
    sub_10017DF08(&qword_100EAF720);
    uint64_t v35 = type metadata accessor for WeatherAlert();
    sub_100164920(v35);
    unint64_t v37 = (*(unsigned __int8 *)(v36 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80);
    uint64_t v38 = swift_allocObject();
    *(_OWORD *)(v38 + 16) = xmmword_100C251B0;
    uint64_t v34 = v38 + v37;
  }
  sub_100AD6488(v34);
  return v47;
}

uint64_t sub_10005E680@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E907C8);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v32)
  {
    __break(1u);
    goto LABEL_10;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E64AB8);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!result)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  uint64_t v5 = result;
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E64A88);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!result)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  uint64_t v6 = result;
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E75340);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:name:)();
  uint64_t v7 = v29;
  if (!v29)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E75348);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v28)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  sub_1001B1E64(a1, a1[3]);
  type metadata accessor for WireframeLevelInterestManager();
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!result)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v8 = result;
  uint64_t v22 = v30;
  uint64_t v23 = v6;
  uint64_t v24 = a2;
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E870F8);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v26)
  {
    uint64_t v9 = type metadata accessor for LocationViewerModule();
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v11 = sub_1000DF0C4((uint64_t)v31, v32);
    __chkstk_darwin(v11);
    uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v14 + 16))(v13);
    uint64_t v15 = sub_1000DF0C4((uint64_t)v25, v26);
    __chkstk_darwin(v15);
    uint64_t v17 = (char *)&v22 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v18 + 16))(v17);
    uint64_t v19 = type metadata accessor for LocationViewerInteractor();
    uint64_t v20 = sub_1000389C4((uint64_t)v13, v5, v23, v7, &v27, v8, (uint64_t)v17, v9, v19, (uint64_t)&type metadata for ContentStatusBannerViewFactory, ObjectType, (uint64_t)&off_100E23B00, (uint64_t)&off_100E38A68, v22);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v25);
    uint64_t result = _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v31);
    uint64_t v21 = v24;
    v24[3] = v9;
    void v21[4] = &off_100E2CC80;
    *uint64_t v21 = v20;
    return result;
  }
LABEL_15:
  __break(1u);
  return result;
}

void sub_10005EA74(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  sub_10005EAA8(a1, a2, *(void *)a2, *(unsigned char *)(a2 + 8));
  *a3 = v4;
  a3[1] = v5;
  a3[2] = v6;
}

void sub_10005EAA8(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v6 = type metadata accessor for NamedCoordinateSpace();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = &v10[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (a4)
  {
    if (a3)
    {
      static CoordinateSpaceProtocol<>.scrollView.getter();
      GeometryProxy.bounds(of:)();
      (*(void (**)(unsigned char *, uint64_t))(v7 + 8))(v9, v6);
      sub_10024D364((uint64_t)v10, (uint64_t)&v11, &qword_100E64498);
      if ((v12 & 1) == 0) {
        CGRectGetMinY(v11);
      }
    }
  }
  else
  {
    static CoordinateSpaceProtocol<>.scrollView.getter();
    GeometryProxy.bounds(of:)();
    (*(void (**)(unsigned char *, uint64_t))(v7 + 8))(v9, v6);
    sub_10024D364((uint64_t)v10, (uint64_t)&v11, &qword_100E64498);
    if ((v12 & 1) == 0) {
      CGRectGetMinY(v11);
    }
    CGFloat.clamp(min:max:)();
  }
}

void sub_10005EC80()
{
  sub_100162EA0();
  char v21 = v1;
  uint64_t v22 = v2;
  uint64_t v23 = v3;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  type metadata accessor for AppConfiguration();
  sub_100179C0C();
  __chkstk_darwin(v10);
  sub_1001626E0();
  uint64_t v13 = v12 - v11;
  sub_1001B1E64((void *)(v0 + 120), *(void *)(v0 + 144));
  dispatch thunk of AppConfigurationManagerType.appConfiguration.getter();
  uint64_t v14 = *(void *)(v9 + 16);
  if (v14)
  {
    uint64_t v15 = type metadata accessor for Location();
    sub_100164920(v15);
    uint64_t v17 = v9 + ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80));
    uint64_t v19 = *(void *)(v18 + 72);
    swift_bridgeObjectRetain();
    do
    {
      sub_10020ECDC(v17, v7, v22, v5, v23, v13, v21 & 1, 0);
      v17 += v19;
      --v14;
    }
    while (v14);
    swift_bridgeObjectRelease();
  }
  sub_100162F0C();
  v20();
  sub_100162694();
}

uint64_t sub_10005EDF4@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  type metadata accessor for LocationComponentHeaderViewModel(0);
  sub_100162E4C();
  __chkstk_darwin(v4);
  sub_1001626E0();
  uint64_t v7 = v6 - v5;
  uint64_t v8 = type metadata accessor for PressureComponentViewModel();
  uint64_t v9 = (int *)(v8 - 8);
  __chkstk_darwin(v8);
  sub_1001626E0();
  uint64_t v12 = v11 - v10;
  uint64_t v13 = type metadata accessor for PressureComponentPreprocessedDataModel();
  uint64_t v14 = (int *)(v13 - 8);
  __chkstk_darwin(v13);
  sub_1001626E0();
  uint64_t v17 = v16 - v15;
  uint64_t v18 = type metadata accessor for PressureComponent();
  sub_100217E44(a1 + *(int *)(v18 + 20), v17);
  type metadata accessor for PressureTrend();
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v19 + 16))(v12, v17);
  uint64_t v20 = (uint64_t *)(v17 + v14[7]);
  uint64_t v21 = *v20;
  uint64_t v22 = v20[1];
  uint64_t v23 = (uint64_t *)(v17 + v14[8]);
  uint64_t v24 = *v23;
  uint64_t v25 = v23[1];
  uint64_t v26 = (uint64_t *)(v17 + v14[9]);
  uint64_t v27 = *v26;
  uint64_t v28 = v26[1];
  uint64_t v29 = *(void *)(v17 + v14[10]);
  uint64_t v30 = (uint64_t *)(v17 + v14[11]);
  uint64_t v31 = *v30;
  uint64_t v32 = v30[1];
  uint64_t v33 = (void *)(v12 + v9[7]);
  void *v33 = v21;
  v33[1] = v22;
  uint64_t v34 = (void *)(v12 + v9[8]);
  void *v34 = v24;
  v34[1] = v25;
  uint64_t v35 = (void *)(v12 + v9[9]);
  void *v35 = v27;
  v35[1] = v28;
  *(void *)(v12 + v9[10]) = v29;
  uint64_t v36 = (void *)(v12 + v9[11]);
  *uint64_t v36 = v31;
  v36[1] = v32;
  unint64_t v37 = self;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v38 = [v37 mainBundle];
  sub_1001631D8();
  v39._uint64_t countAndFlagsBits = 0x6572757373657250;
  v39._object = (void *)0xE800000000000000;
  v40._uint64_t countAndFlagsBits = 0;
  v40._object = (void *)0xE000000000000000;
  unint64_t v41 = 0xD00000000000003ALL;
  Swift::String v42 = NSLocalizedString(_:tableName:bundle:value:comment:)(v39, (Swift::String_optional)0, (NSBundle)v38, v40, *(Swift::String *)(&v50 - 1));

  sub_100217DE8(v17);
  *(Swift::String *)uint64_t v7 = v42;
  *(void *)(v7 + 16) = 0x6567756167;
  *(void *)(v7 + 24) = 0xE500000000000000;
  *(unsigned char *)(v7 + 32) = 0;
  *(void *)(v7 + 40) = 0;
  *(void *)(v7 + 48) = 0;
  swift_storeEnumTagMultiPayload();
  uint64_t v43 = (int *)type metadata accessor for LocationComponentContainerViewModel();
  sub_10005F184(v12, a2 + v43[5], (void (*)(void))type metadata accessor for PressureComponentViewModel);
  type metadata accessor for LocationComponentViewModel();
  swift_storeEnumTagMultiPayload();
  uint64_t v44 = a2 + v43[7];
  uint64_t v45 = *(int *)(sub_10017DF08(&qword_100E66488) + 48);
  uint64_t v46 = enum case for DetailCondition.pressure(_:);
  type metadata accessor for DetailCondition();
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v47 + 104))(v44, v46);
  *(unsigned char *)(v44 + v45) = 0;
  uint64_t v48 = type metadata accessor for LocationComponentAction(0);
  swift_storeEnumTagMultiPayload();
  _s7Weather24LocationCompositionStateOwst_0(v44, 0, 1, v48);
  uint64_t result = sub_10005F184(v7, a2, (void (*)(void))type metadata accessor for LocationComponentHeaderViewModel);
  *(_WORD *)(a2 + v43[6]) = 256;
  return result;
}

uint64_t sub_10005F184(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(a2, a1);
  return a2;
}

uint64_t sub_10005F1E4(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v18 = a1;
  uint64_t v3 = sub_10017DF08(&qword_100E63440);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for NSRunLoop.SchedulerTimeType.Stride();
  uint64_t v6 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10017DF08(&qword_100E981A8);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10017DF08(&qword_100E81B08);
  sub_1001246C8(&qword_100E981B0, &qword_100E81B08);
  uint64_t v21 = ObservableObject<>.objectWillChange.getter();
  static NSRunLoop.SchedulerTimeType.Stride.seconds(_:)();
  id v20 = [self mainRunLoop];
  uint64_t v13 = type metadata accessor for NSRunLoop.SchedulerOptions();
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v5, 1, 1, v13);
  type metadata accessor for ObservableObjectPublisher();
  sub_1001ABC4C(0, (unint64_t *)&qword_100E63460);
  sub_10008E51C();
  Publisher.debounce<A>(for:scheduler:options:)();
  sub_1001781AC((uint64_t)v5, &qword_100E63440);

  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v19);
  swift_release();
  uint64_t v14 = swift_allocObject();
  swift_weakInit();
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = v18;
  *(void *)(v15 + 24) = v14;
  sub_1001246C8(&qword_100E981B8, &qword_100E981A8);
  swift_retain();
  swift_retain();
  uint64_t v16 = Publisher<>.sink(receiveValue:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  swift_release();
  *(void *)(v2 + 16) = v16;
  return swift_release();
}

void *sub_10005F578(unsigned char *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, long long *a12, void *a13)
{
  uint64_t v52 = a7;
  uint64_t v53 = a8;
  uint64_t v50 = a5;
  uint64_t v51 = a6;
  uint64_t v48 = a3;
  uint64_t v49 = a4;
  uint64_t v47 = a2;
  uint64_t v54 = a1;
  uint64_t v13 = a12;
  uint64_t v14 = type metadata accessor for LocationModel();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v18 = &v41[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v16);
  id v20 = &v41[-v19];
  uint64_t v58 = type metadata accessor for NetworkActivityManager();
  uint64_t v59 = &off_100E175C0;
  *(void *)&long long v57 = a11;
  if (qword_100E62790 != -1) {
    swift_once();
  }
  uint64_t v45 = a9;
  uint64_t v46 = a10;
  uint64_t v21 = type metadata accessor for Logger();
  sub_1002102B0(v21, (uint64_t)qword_100F51DC8);
  uint64_t v22 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v15 + 16);
  uint64_t v23 = v54;
  v22(v20, (uint64_t)v54, v14);
  v22(v18, (uint64_t)v23, v14);
  uint64_t v24 = Logger.logObject.getter();
  os_log_type_t v25 = static os_log_type_t.default.getter();
  int v26 = v25;
  if (os_log_type_enabled(v24, v25))
  {
    uint64_t v27 = swift_slowAlloc();
    uint64_t v44 = a12;
    uint64_t v28 = v27;
    uint64_t v29 = swift_slowAlloc();
    uint64_t v43 = v29;
    *(_DWORD *)uint64_t v28 = 141558787;
    uint64_t v55 = 1752392040;
    uint64_t v56 = v29;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v28 + 12) = 2081;
    int v42 = v26;
    uint64_t v30 = LocationModel.name.getter();
    uint64_t v55 = sub_10016414C(v30, v31, &v56);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    uint64_t v32 = *(void (**)(unsigned char *, uint64_t))(v15 + 8);
    v32(v20, v14);
    *(_WORD *)(v28 + 22) = 2160;
    uint64_t v55 = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v28 + 32) = 2081;
    uint64_t v33 = LocationModel.id.getter();
    uint64_t v55 = sub_10016414C(v33, v34, &v56);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    v32(v18, v14);
    _os_log_impl((void *)&_mh_execute_header, v24, (os_log_type_t)v42, "Initializing Location module for location: name=%{private,mask.hash}s, id=%{private,mask.hash}s", (uint8_t *)v28, 0x2Au);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v13 = v44;
    swift_slowDealloc();

    v32(v54, v14);
  }
  else
  {

    uint64_t v35 = *(void (**)(unsigned char *, uint64_t))(v15 + 8);
    v35(v18, v14);
    v35(v20, v14);
    v35(v54, v14);
  }
  uint64_t v36 = v48;
  a13[2] = v47;
  a13[3] = v36;
  uint64_t v37 = v50;
  a13[4] = v49;
  a13[5] = v37;
  uint64_t v38 = v52;
  a13[6] = v51;
  a13[7] = v38;
  uint64_t v39 = v45;
  a13[8] = v53;
  a13[9] = v39;
  a13[10] = v46;
  sub_1001262E4(&v57, (uint64_t)(a13 + 11));
  sub_1001262E4(v13, (uint64_t)(a13 + 16));
  return a13;
}

uint64_t sub_10005F980()
{
  return sub_10005F9B0();
}

uint64_t sub_10005F9B0()
{
  return EnvironmentValues.subscript.setter();
}

uint64_t sub_10005F9F4@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = sub_10005FA28();
  *(void *)a1 = result;
  *(unsigned char *)(a1 + 8) = v3 & 1;
  return result;
}

uint64_t sub_10005FA28()
{
  sub_10005FA68();
  EnvironmentValues.subscript.getter();
  return v1;
}

unint64_t sub_10005FA68()
{
  unint64_t result = qword_100E65F58;
  if (!qword_100E65F58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E65F58);
  }
  return result;
}

#error "10005FADC: call analysis failed (funcsize=12)"

uint64_t initializeWithCopy for WeatherConditionBackgroundBindingModifierWithVFXBackground(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  uint64_t v5 = a2 + 32;
  long long v6 = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 56) = v6;
  uint64_t v7 = v6;
  uint64_t v8 = **(void (***)(uint64_t, uint64_t, uint64_t))(v6 - 8);
  swift_retain();
  swift_unknownObjectRetain();
  v8(a1 + 32, v5, v7);
  uint64_t v9 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v9;
  swift_retain();
  return a1;
}

uint64_t initializeWithCopy for LazyUntilDismissedViewModifier(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_10005FC00@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = ObservableObject<>.objectWillChange.getter();
  *a1 = result;
  return result;
}

uint64_t sub_10005FC50()
{
  uint64_t v2 = v0;
  uint64_t v3 = type metadata accessor for OSSignpostID();
  sub_100179C0C();
  uint64_t v5 = v4;
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)aBlock - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for DispatchPredicate();
  sub_100179C0C();
  uint64_t v11 = v10;
  __chkstk_darwin(v12);
  sub_10012B938();
  sub_1001ABC4C(0, (unint64_t *)&qword_100E62D10);
  *uint64_t v1 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v11 + 104))(v1, enum case for DispatchPredicate.onQueue(_:), v9);
  char v13 = _dispatchPreconditionTest(_:)();
  uint64_t result = (*(uint64_t (**)(uint64_t *, uint64_t))(v11 + 8))(v1, v9);
  if (v13)
  {
    if (*(unsigned char *)(v2 + 104) == 1 && (*(unsigned char *)(v2 + 32) & 1) == 0)
    {
      uint64_t v15 = *(void *)(v2 + 16);
      if (v15)
      {
        uint64_t v16 = *(void *)(v2 + 24);
        *(unsigned char *)(v2 + 32) = 1;
        swift_retain();
        static os_signpost_type_t.event.getter();
        sub_1001ABC4C(0, (unint64_t *)&qword_100E62D68);
        uint64_t v17 = (void *)OS_os_log.init(subsystem:category:)();
        static OSSignpostID.exclusive.getter();
        os_signpost(_:dso:log:name:signpostID:)();

        (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v3);
        id v18 = [self sharedApplication];
        uint64_t v19 = swift_allocObject();
        swift_weakInit();
        id v20 = (void *)swift_allocObject();
        _OWORD v20[2] = v15;
        v20[3] = v16;
        v20[4] = v19;
        aBlock[4] = sub_1004A8488;
        aBlock[5] = v20;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = sub_10010A4D4;
        void aBlock[3] = &unk_100E17FB8;
        uint64_t v21 = _Block_copy(aBlock);
        swift_retain();
        swift_release();
        [v18 installCACommitCompletionBlock:v21];
        _Block_release(v21);

        return sub_1001361AC(v15);
      }
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_10005FF78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  sub_100162EA0();
  char v24 = v23;
  LODWORD(v74) = v25;
  uint64_t v77 = v26;
  uint64_t v81 = v27;
  uint64_t v86 = v28;
  uint64_t v88 = v29;
  uint64_t v89 = v30;
  uint64_t v32 = v31;
  uint64_t v33 = type metadata accessor for TimeState();
  uint64_t v34 = sub_100164920(v33);
  uint64_t v78 = v35;
  __chkstk_darwin(v34);
  uint64_t v79 = v36;
  sub_10018B1EC();
  uint64_t v87 = v37;
  uint64_t v83 = type metadata accessor for Location();
  sub_100179C0C();
  uint64_t v39 = v38;
  __chkstk_darwin(v40);
  uint64_t v76 = v41;
  int v42 = (char *)v69 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v85 = type metadata accessor for AppConfiguration();
  sub_100179C0C();
  uint64_t v80 = v43;
  __chkstk_darwin(v44);
  sub_1001811B8();
  uint64_t v84 = v45;
  uint64_t v75 = v46;
  __chkstk_darwin(v47);
  uint64_t v49 = (char *)v69 - v48;
  if (a21)
  {
    uint64_t v50 = swift_allocObject();
    *(void *)(v50 + 16) = a21;
    *(void *)(v50 + 24) = a22;
    swift_retain_n();
    sub_100029484(v32, (uint64_t)sub_10021E384);
    swift_release();
    sub_1001361AC(a21);
  }
  int v73 = v24 & 1;
  uint64_t v51 = v22;
  sub_1001B1E64((void *)(v22 + 120), *(void *)(v22 + 144));
  dispatch thunk of AppConfigurationManagerType.appConfiguration.getter();
  v69[1] = v39;
  uint64_t v82 = v49;
  uint64_t v70 = *(void (**)(char *, uint64_t, uint64_t))(v39 + 16);
  uint64_t v52 = v83;
  v70(v42, v32, v83);
  type metadata accessor for WeatherDataUpdateRequestLog(0);
  swift_allocObject();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v53 = v81;
  swift_bridgeObjectRetain();
  int v72 = v74 & 1;
  v69[3] = v42;
  uint64_t v71 = sub_10020FD50(0, (uint64_t)v42, v72);
  __chkstk_darwin(v71);
  v69[-2] = v22;
  v69[-1] = v32;
  sub_10017DF08(&qword_100E65F18);
  uint64_t v74 = firstly<A>(closure:)();
  v70(v42, v32, v52);
  sub_1001B9A30(v77, v87, (void (*)(void))type metadata accessor for TimeState);
  uint64_t v54 = v80;
  sub_100162808();
  v55();
  unint64_t v56 = (v76 + ((*(unsigned __int8 *)(v39 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80)) + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v57 = (*(unsigned __int8 *)(v78 + 80) + v56 + 32) & ~(unint64_t)*(unsigned __int8 *)(v78 + 80);
  unint64_t v58 = (v79 + *(unsigned __int8 *)(v54 + 80) + v57) & ~(unint64_t)*(unsigned __int8 *)(v54 + 80);
  uint64_t v59 = v58 + v75;
  v69[2] = v51;
  unint64_t v60 = (v58 + v75 + 9) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v61 = swift_allocObject();
  *(void *)(v61 + 16) = v51;
  sub_1001190D4();
  v62();
  uint64_t v63 = (void *)(v61 + v56);
  uint64_t v64 = v89;
  *uint64_t v63 = v88;
  v63[1] = v64;
  uint64_t v65 = v87;
  v63[2] = v86;
  v63[3] = v53;
  sub_1001B9AF4(v65, v61 + v57, (void (*)(void))type metadata accessor for TimeState);
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v54 + 32))(v61 + v58, v84, v85);
  uint64_t v66 = (unsigned char *)(v61 + v59);
  *uint64_t v66 = v72;
  v66[1] = v73;
  *(void *)(v61 + v60) = v71;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  __n128 v67 = (void *)zalgo.getter();
  Promise.then<A>(on:closure:)();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  sub_100164F40();
  v68();
  sub_100162694();
}

uint64_t sub_10006045C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v41 = a1;
  uint64_t v43 = a2;
  uint64_t v4 = type metadata accessor for PinningHeaderModifier(0);
  int v42 = *(char **)(v4 - 8);
  uint64_t v5 = *((void *)v42 + 8);
  __chkstk_darwin(v4);
  uint64_t v39 = sub_10017DF08(&qword_100E84490);
  __chkstk_darwin(v39);
  uint64_t v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = sub_10017DF08(&qword_100E84498);
  __chkstk_darwin(v40);
  uint64_t v9 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for LocationComponentHeaderMetrics(0);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = v2 + *(int *)(v4 + 24);
  uint64_t v14 = *(void *)v13;
  char v15 = *(unsigned char *)(v13 + 8);
  sub_100195B7C(*(void *)v13, v15);
  sub_100201DE4();
  double v17 = v16;
  sub_10018F6D8(v14, v15);
  if (qword_100E62230 != -1) {
    swift_once();
  }
  double v18 = v17 + *(double *)&qword_100F51330;
  sub_100195B7C(v14, v15);
  sub_100201DE4();
  double v20 = v19;
  sub_10018F6D8(v14, v15);
  sub_1005D284C();
  double v21 = *(double *)&v12[*(int *)(v10 + 24)];
  sub_1001F75CC();
  double v22 = v20 + v21;
  char v23 = (uint64_t *)(v3 + *(int *)(v4 + 28));
  uint64_t v25 = v23[1];
  char v26 = *((unsigned char *)v23 + 16);
  uint64_t v27 = v23[3];
  uint64_t v44 = *v23;
  uint64_t v24 = v44;
  uint64_t v45 = v25;
  char v46 = v26;
  uint64_t v47 = v27;
  sub_10017DF08(&qword_100E844A0);
  State.wrappedValue.getter();
  uint64_t v28 = v49;
  uint64_t v29 = sub_10017DF08(&qword_100E844A8);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v29 - 8) + 16))(v7, v41, v29);
  *(void *)&v7[*(int *)(v39 + 36)] = v28;
  uint64_t v44 = v24;
  uint64_t v45 = v25;
  char v46 = v26;
  uint64_t v47 = v27;
  State.wrappedValue.getter();
  uint64_t v30 = v48;
  sub_1005EFB58((uint64_t)v7, (uint64_t)v9, &qword_100E84490);
  uint64_t v31 = &v9[*(int *)(v40 + 36)];
  *(void *)uint64_t v31 = 0;
  *((void *)v31 + 1) = v30;
  sub_10017DF4C((uint64_t)v7, &qword_100E84490);
  sub_1001EC0BC();
  unint64_t v32 = (((v42[80] + 16) & ~(unint64_t)v42[80]) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  int v42 = v9;
  uint64_t v33 = swift_allocObject();
  sub_1005D8BD8();
  *(double *)(v33 + v32) = v18;
  *(double *)(v33 + ((v32 + 15) & 0xFFFFFFFFFFFFFFF8)) = v22;
  sub_1001EC0BC();
  uint64_t v34 = swift_allocObject();
  sub_1005D8BD8();
  uint64_t v36 = (uint64_t)v42;
  uint64_t v35 = v43;
  sub_1005EFB58((uint64_t)v42, v43, &qword_100E84498);
  uint64_t v37 = (void (**)())(v35 + *(int *)(sub_10017DF08(&qword_100E844B0) + 36));
  *uint64_t v37 = sub_10021EBD4;
  v37[1] = (void (*)())v33;
  void v37[2] = (void (*)())sub_1005EF6D0;
  void v37[3] = (void (*)())v34;
  return sub_10017DF4C(v36, &qword_100E84498);
}

uint64_t sub_100060944(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  uint64_t v6 = *(void *)(a2 + 32);
  uint64_t v7 = *(void *)(a2 + 40);
  uint64_t v8 = *(void *)(a2 + 48);
  uint64_t v9 = *(void *)(a2 + 56);
  uint64_t v10 = *(void *)(a2 + 64);
  uint64_t v12 = *(void *)(a2 + 72);
  uint64_t v11 = *(void *)(a2 + 80);
  uint64_t v29 = *(void *)(a2 + 88);
  char v30 = *(unsigned char *)(a2 + 96);
  sub_1001910C8(v5, v6, v7, v8, v9, v10, v12, v11, v29, v30);
  uint64_t v13 = *(void *)(a1 + 24);
  uint64_t v14 = *(void *)(a1 + 32);
  uint64_t v15 = *(void *)(a1 + 40);
  uint64_t v16 = *(void *)(a1 + 48);
  uint64_t v17 = *(void *)(a1 + 56);
  uint64_t v18 = *(void *)(a1 + 64);
  uint64_t v19 = *(void *)(a1 + 72);
  uint64_t v20 = *(void *)(a1 + 80);
  uint64_t v21 = *(void *)(a1 + 88);
  char v22 = *(unsigned char *)(a1 + 96);
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = v6;
  *(void *)(a1 + 40) = v7;
  *(void *)(a1 + 48) = v8;
  *(void *)(a1 + 56) = v9;
  *(void *)(a1 + 64) = v10;
  *(void *)(a1 + 72) = v12;
  *(void *)(a1 + 80) = v11;
  *(void *)(a1 + 88) = v29;
  *(unsigned char *)(a1 + 96) = v30;
  sub_10018CCC4(v13, v14, v15, v16, v17, v18, v19, v20, v21, v22);
  if (a1 != a2)
  {
    uint64_t v23 = *(int *)(a3 + 24);
    uint64_t v24 = (void *)(a1 + v23);
    uint64_t v25 = (void *)(a2 + v23);
    sub_100178110(a1 + v23, &qword_100E63BC8);
    sub_10017DF08(&qword_100E63BC8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v26 = type metadata accessor for ContentSizeCategory();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v26 - 8) + 16))(v24, v25, v26);
    }
    else
    {
      *uint64_t v24 = *v25;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void sub_100060B0C(void *a1)
{
  sub_1001B1E64(a1, a1[3]);
  type metadata accessor for SessionManager();
  uint64_t v2 = dispatch thunk of ResolverType.resolve<A>(_:name:)();
  if (!v2)
  {
    __break(1u);
    goto LABEL_12;
  }
  uint64_t v3 = v2;
  sub_1001B1E64(a1, a1[3]);
  type metadata accessor for Client();
  uint64_t v4 = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v4)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v5 = v4;
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E71B40);
  dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v23)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E71B38);
  dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v21)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E71B48);
  dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v19)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E71B50);
  dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v17)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E71B58);
  dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v15)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E6FC60);
  dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v11)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E71B60);
  dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v8)
  {
    type metadata accessor for SessionEventsAndDataCoordinator();
    swift_allocObject();
    LOBYTE(v6) = 1;
    sub_1000EC7B8(1, v3, v5, (uint64_t)v22, (uint64_t)v20, (uint64_t)v18, (uint64_t)v16, (uint64_t)&v13, (uint64_t)v10, (uint64_t)v7, v6, v7[0], v7[1], v7[2], v8, v9, v10[0], v10[1], v10[2],
      v11,
      v12,
      v13,
      v14);
    return;
  }
LABEL_19:
  __break(1u);
}

void sub_100060DE0(void *a1)
{
  sub_1001B1E64(a1, a1[3]);
  type metadata accessor for SessionManager();
  uint64_t v2 = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v2)
  {
    __break(1u);
    goto LABEL_12;
  }
  uint64_t v3 = v2;
  sub_1001B1E64(a1, a1[3]);
  type metadata accessor for Client();
  uint64_t v4 = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v4)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v5 = v4;
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E71B40);
  dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v23)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E71B38);
  dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v21)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E71B48);
  dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v19)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E71B50);
  dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v17)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E71B58);
  dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v15)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E6FC60);
  dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v11)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E71B60);
  dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v8)
  {
    type metadata accessor for SessionEventsAndDataCoordinator();
    swift_allocObject();
    LOBYTE(v6) = 2;
    sub_1000EC7B8(0, v3, v5, (uint64_t)v22, (uint64_t)v20, (uint64_t)v18, (uint64_t)v16, (uint64_t)&v13, (uint64_t)v10, (uint64_t)v7, v6, v7[0], v7[1], v7[2], v8, v9, v10[0], v10[1], v10[2],
      v11,
      v12,
      v13,
      v14);
    return;
  }
LABEL_19:
  __break(1u);
}

uint64_t sub_10006109C(void *a1)
{
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E8DE28);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!result)
  {
    __break(1u);
    goto LABEL_6;
  }
  uint64_t v3 = result;
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E6FC58);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v7)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E72948);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v5)
  {
    type metadata accessor for PrecipitationTotalComponentViewModelFactory();
    swift_allocObject();
    return sub_1000611B4(v3, &v6, &v4);
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_1000611B4(uint64_t a1, long long *a2, long long *a3)
{
  *(void *)(v3 + 16) = a1;
  sub_1001262E4(a2, v3 + 24);
  sub_1001262E4(a3, v3 + 64);
  return v3;
}

uint64_t sub_1000611F8@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E98028);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v28)
  {
    __break(1u);
    goto LABEL_11;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E64B58);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!result)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  uint64_t v5 = result;
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E80770);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v26)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  sub_1001B1E64(a1, a1[3]);
  type metadata accessor for SessionEventsAndDataCoordinator();
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!result)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  uint64_t v6 = result;
  sub_1001B1E64(a1, a1[3]);
  type metadata accessor for SessionScenePhaseObserver();
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!result)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v7 = result;
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E8DE70);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v24)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08((uint64_t *)&unk_100EAAA90);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!result)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v8 = result;
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E97FF8);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v22)
  {
    uint64_t v9 = sub_1000DF0C4((uint64_t)v27, v28);
    __n128 v10 = __chkstk_darwin(v9);
    uint64_t v12 = (uint64_t *)&v21[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
    (*(void (**)(uint64_t *, __n128))(v13 + 16))(v12, v10);
    uint64_t v14 = sub_1000DF0C4((uint64_t)v21, v22);
    __n128 v15 = __chkstk_darwin(v14);
    uint64_t v17 = (uint64_t **)&v21[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
    (*(void (**)(uint64_t **, __n128))(v18 + 16))(v17, v15);
    uint64_t v19 = sub_1000238D8(*v12, v5, &v25, v6, v7, &v23, v8, *v17);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v21);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v27);
    uint64_t result = type metadata accessor for MainModule();
    a2[3] = result;
    a2[4] = &off_100E314C0;
    *a2 = v19;
    return result;
  }
LABEL_17:
  __break(1u);
  return result;
}

void *assignWithCopy for MainViewDestinationLocationViewer(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  sub_1000C1E18(a1 + 1, a2 + 1);
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_retain();
  swift_release();
  a1[8] = a2[8];
  a1[9] = a2[9];
  swift_retain();
  swift_release();
  a1[10] = a2[10];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_100061664@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1000616A8(a1, a2);
}

uint64_t sub_1000616A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = static Alignment.center.getter();
  uint64_t v22 = v6;
  uint64_t v23 = v5;
  if (*(unsigned char *)v2)
  {
    uint64_t v7 = static Color.clear.getter();
    uint64_t v26 = *(void *)(v2 + 8);
    char v27 = *(unsigned char *)(v2 + 16);
    long long v15 = *(_OWORD *)(v2 + 40);
    v24[0] = *(_OWORD *)(v2 + 24);
    v24[1] = v15;
    char v25 = *(unsigned char *)(v2 + 56);
    uint64_t v9 = (_OWORD *)swift_allocObject();
    long long v16 = *(_OWORD *)(v2 + 16);
    v9[1] = *(_OWORD *)v2;
    _OWORD v9[2] = v16;
    double v9[3] = *(_OWORD *)(v2 + 32);
    *(_OWORD *)((char *)v9 + 57) = *(_OWORD *)(v2 + 41);
    uint64_t v11 = (_OWORD *)swift_allocObject();
    long long v17 = *(_OWORD *)(v2 + 16);
    v11[1] = *(_OWORD *)v2;
    long long v11[2] = v17;
    v11[3] = *(_OWORD *)(v2 + 32);
    *(_OWORD *)((char *)v11 + 57) = *(_OWORD *)(v2 + 41);
    uint64_t v14 = (_OWORD *)swift_allocObject();
    long long v18 = *(_OWORD *)(v2 + 16);
    v14[1] = *(_OWORD *)v2;
    _OWORD v14[2] = v18;
    void v14[3] = *(_OWORD *)(v2 + 32);
    *(_OWORD *)((char *)v14 + 57) = *(_OWORD *)(v2 + 41);
    sub_1000618F8((uint64_t)&v26);
    sub_1000FA614((uint64_t)v24);
    sub_1000618F8((uint64_t)&v26);
    sub_1000FA614((uint64_t)v24);
    sub_1000618F8((uint64_t)&v26);
    sub_1000FA614((uint64_t)v24);
    uint64_t v13 = sub_10007A75C;
    uint64_t v12 = sub_100218424;
    __n128 v10 = sub_10007A724;
    uint64_t v8 = sub_100213480;
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v8 = 0;
    uint64_t v9 = 0;
    __n128 v10 = 0;
    uint64_t v11 = 0;
    uint64_t v12 = 0;
    uint64_t v13 = 0;
    uint64_t v14 = 0;
  }
  uint64_t v19 = sub_10017DF08(&qword_100E64458);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 16))(a2, a1, v19);
  uint64_t result = sub_10017DF08(&qword_100E64460);
  uint64_t v21 = (uint64_t *)(a2 + *(int *)(result + 36));
  *uint64_t v21 = v7;
  v21[1] = (uint64_t)v8;
  _OWORD v21[2] = (uint64_t)v9;
  v21[3] = (uint64_t)v10;
  void v21[4] = (uint64_t)v11;
  v21[5] = (uint64_t)v12;
  v21[6] = 0;
  v21[7] = (uint64_t)v13;
  v21[8] = (uint64_t)v14;
  v21[9] = v23;
  v21[10] = v22;
  return result;
}

uint64_t sub_1000618F8(uint64_t a1)
{
  return a1;
}

uint64_t sub_100061924@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  swift_beginAccess();
  uint64_t v6 = sub_1000619DC(a2, *(void *)(a1 + 464));
  swift_endAccess();
  if (v6) {
    uint64_t v7 = (void *)v6;
  }
  else {
    uint64_t v7 = &_swiftEmptyArrayStorage;
  }
  swift_beginAccess();
  sub_100061A20(a2);
  swift_endAccess();
  uint64_t result = swift_bridgeObjectRelease();
  *a3 = v7;
  return result;
}

uint64_t sub_1000619DC(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16) && (sub_1001CB7B4(), (v2 & 1) != 0)) {
    return swift_bridgeObjectRetain();
  }
  else {
    return 0;
  }
}

#error "100061A84: call analysis failed (funcsize=75)"

uint64_t sub_100061B58@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  type metadata accessor for LocationComponentHeaderViewModel(0);
  sub_100162E4C();
  __chkstk_darwin(v3);
  sub_100109314();
  uint64_t v45 = v4;
  uint64_t v44 = type metadata accessor for WeatherDescription();
  sub_10017C83C();
  uint64_t v6 = v5;
  __chkstk_darwin(v7);
  sub_100109314();
  uint64_t v43 = v8;
  uint64_t v9 = type metadata accessor for UVIndex();
  sub_10017C83C();
  uint64_t v11 = v10;
  __chkstk_darwin(v12);
  sub_1001626E0();
  uint64_t v15 = v14 - v13;
  uint64_t v16 = type metadata accessor for UVIndexComponentViewModel();
  uint64_t v17 = v16 - 8;
  __chkstk_darwin(v16);
  sub_1001626E0();
  uint64_t v20 = v19 - v18;
  uint64_t v21 = type metadata accessor for UVIndexComponentPreprocessedDataModel();
  uint64_t v22 = v21 - 8;
  __chkstk_darwin(v21);
  sub_1001626E0();
  uint64_t v25 = v24 - v23;
  uint64_t v26 = type metadata accessor for UVIndexComponent();
  sub_100218358(a1 + *(int *)(v26 + 20), v25);
  CurrentWeather.uvIndex.getter();
  uint64_t v27 = UVIndex.value.getter();
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v15, v9);
  uint64_t v28 = (uint64_t *)(v25 + *(int *)(v22 + 28));
  uint64_t v30 = *v28;
  uint64_t v29 = v28[1];
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v43, v25, v44);
  sub_10017BAF4();
  swift_bridgeObjectRetain();
  uint64_t v31 = static NSDateFormatter.prevailingPeriodSymbols.getter();
  *(void *)uint64_t v20 = v27;
  *(double *)(v20 + 8) = fmin((double)v27 / 11.0, 1.0);
  *(void *)(v20 + 16) = v30;
  *(void *)(v20 + 24) = v29;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(v20 + *(int *)(v17 + 36), v43, v44);
  *(void *)(v20 + *(int *)(v17 + 40)) = v31;
  id v32 = [self mainBundle];
  v47._object = (void *)0x8000000100CB7350;
  v33._uint64_t countAndFlagsBits = 0x7865646E49205655;
  v33._object = (void *)0xE800000000000000;
  v34._uint64_t countAndFlagsBits = 0;
  v34._object = (void *)0xE000000000000000;
  v47._uint64_t countAndFlagsBits = 0xD00000000000003ALL;
  Swift::String v35 = NSLocalizedString(_:tableName:bundle:value:comment:)(v33, (Swift::String_optional)0, (NSBundle)v32, v34, v47);

  sub_1002182FC(v25);
  *(Swift::String *)uint64_t v45 = v35;
  strcpy((char *)(v45 + 16), "sun.max.fill");
  *(unsigned char *)(v45 + 29) = 0;
  *(_WORD *)(v45 + 30) = -5120;
  *(unsigned char *)(v45 + 32) = 0;
  *(void *)(v45 + 40) = 0;
  *(void *)(v45 + 48) = 0;
  swift_storeEnumTagMultiPayload();
  uint64_t v36 = (int *)type metadata accessor for LocationComponentContainerViewModel();
  sub_100061F9C(v20, a2 + v36[5], (void (*)(void))type metadata accessor for UVIndexComponentViewModel);
  type metadata accessor for LocationComponentViewModel();
  swift_storeEnumTagMultiPayload();
  uint64_t v37 = a2 + v36[7];
  uint64_t v38 = *(int *)(sub_10017DF08(&qword_100E66488) + 48);
  uint64_t v39 = enum case for DetailCondition.uvIndex(_:);
  type metadata accessor for DetailCondition();
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v40 + 104))(v37, v39);
  *(unsigned char *)(v37 + v38) = 0;
  uint64_t v41 = type metadata accessor for LocationComponentAction(0);
  swift_storeEnumTagMultiPayload();
  _s7Weather24LocationCompositionStateOwst_0(v37, 0, 1, v41);
  uint64_t result = sub_100061F9C(v45, a2, (void (*)(void))type metadata accessor for LocationComponentHeaderViewModel);
  *(_WORD *)(a2 + v36[6]) = 256;
  return result;
}

uint64_t sub_100061F9C(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(a2, a1);
  return a2;
}

uint64_t sub_100061FFC(void *a1)
{
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E64798);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  uint64_t v3 = v20;
  if (!v20)
  {
    __break(1u);
    goto LABEL_6;
  }
  uint64_t v5 = v22;
  uint64_t v4 = v23;
  uint64_t v6 = v21;
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E8DD58);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v19)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v7 = *sub_1001B1E64(v18, v19);
  uint64_t active = type metadata accessor for ActiveLocationInputFactory();
  uint64_t v17 = &off_100E120C8;
  v15[0] = v7;
  sub_10020D948((uint64_t)v15, (uint64_t)v14);
  uint64_t v8 = swift_allocObject();
  sub_1001262E4(v14, v8 + 16);
  swift_retain();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v15);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v18);
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = sub_10013D91C;
  *(void *)(v9 + 24) = v8;
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = sub_100137F7C;
  *(void *)(v10 + 24) = v9;
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E8DD60);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v19)
  {
    uint64_t v11 = *sub_1001B1E64(v18, v19);
    uint64_t active = type metadata accessor for ActiveLocationModelFactory();
    uint64_t v17 = &off_100E120B8;
    v15[0] = v11;
    sub_10020D948((uint64_t)v15, (uint64_t)v14);
    uint64_t v12 = swift_allocObject();
    sub_1001262E4(v14, v12 + 16);
    swift_retain();
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v15);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v18);
    uint64_t v13 = swift_allocObject();
    *(void *)(v13 + 16) = sub_1001367B4;
    *(void *)(v13 + 24) = v12;
    sub_10017DF08((uint64_t *)&unk_100EAAA90);
    swift_allocObject();
    return sub_1000D9F50(v3, v6, v5, v4, sub_1001B194C, 0, sub_10021698C, v10, sub_100136764, v13);
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_1000622DC(void *a1)
{
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E64798);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  uint64_t v3 = v20;
  if (!v20)
  {
    __break(1u);
    goto LABEL_6;
  }
  uint64_t v5 = v22;
  uint64_t v4 = v23;
  uint64_t v6 = v21;
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E8DD58);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v19)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v7 = *sub_1001B1E64(v18, v19);
  uint64_t active = type metadata accessor for ActiveLocationInputFactory();
  uint64_t v17 = &off_100E120C8;
  v15[0] = v7;
  sub_10020D948((uint64_t)v15, (uint64_t)v14);
  uint64_t v8 = swift_allocObject();
  sub_1001262E4(v14, v8 + 16);
  swift_retain();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v15);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v18);
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = sub_10013DF6C;
  *(void *)(v9 + 24) = v8;
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = sub_100137F7C;
  *(void *)(v10 + 24) = v9;
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E8DD60);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v19)
  {
    uint64_t v11 = *sub_1001B1E64(v18, v19);
    uint64_t active = type metadata accessor for ActiveLocationModelFactory();
    uint64_t v17 = &off_100E120B8;
    v15[0] = v11;
    sub_10020D948((uint64_t)v15, (uint64_t)v14);
    uint64_t v12 = swift_allocObject();
    sub_1001262E4(v14, v12 + 16);
    swift_retain();
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v15);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v18);
    uint64_t v13 = swift_allocObject();
    *(void *)(v13 + 16) = sub_1001367B4;
    *(void *)(v13 + 24) = v12;
    sub_10017DF08((uint64_t *)&unk_100EAAA90);
    swift_allocObject();
    return sub_1000D9F50(v3, v6, v5, v4, sub_1001B19C8, 0, sub_100216990, v10, sub_100136764, v13);
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_1000625BC(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = a3[3];
  uint64_t v6 = a3[4];
  sub_1001B1E64(a3, v5);
  return sub_100062614(a1, a2, v5, v6);
}

uint64_t sub_100062614(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v24[3] = a4;
  v24[1] = a3;
  uint64_t v6 = type metadata accessor for ScenePhase();
  sub_100179C0C();
  uint64_t v8 = v7;
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for ScenePhase();
  sub_100179C0C();
  uint64_t v14 = v13;
  uint64_t v16 = __chkstk_darwin(v15);
  uint64_t v18 = (char *)v24 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v20 = (char *)v24 - v19;
  uint64_t v21 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  v21(v11, a1, v6);
  sub_1000627B4((uint64_t)v11, (uint64_t)v20);
  v21(v11, a2, v6);
  sub_1000627B4((uint64_t)v11, (uint64_t)v18);
  dispatch thunk of ScenePhaseManagerType.onChange(old:new:)();
  uint64_t v22 = *(void (**)(char *, uint64_t))(v14 + 8);
  v22(v18, v12);
  return ((uint64_t (*)(char *, uint64_t))v22)(v20, v12);
}

uint64_t sub_1000627B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for ScenePhase();
  sub_100179C0C();
  uint64_t v6 = v5;
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v9, a1, v4);
  int v10 = (*(uint64_t (**)(char *, uint64_t))(v6 + 88))(v9, v4);
  if (v10 == enum case for ScenePhase.background(_:))
  {
    uint64_t v11 = sub_10017DB94();
    v12(v11);
    uint64_t v13 = (unsigned int *)&enum case for ScenePhase.background(_:);
LABEL_7:
    uint64_t v18 = *v13;
    uint64_t v19 = type metadata accessor for ScenePhase();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 104))(a2, v18, v19);
  }
  if (v10 == enum case for ScenePhase.inactive(_:))
  {
    uint64_t v14 = sub_10017DB94();
    v15(v14);
    uint64_t v13 = (unsigned int *)&enum case for ScenePhase.inactive(_:);
    goto LABEL_7;
  }
  if (v10 == enum case for ScenePhase.active(_:))
  {
    uint64_t v16 = sub_10017DB94();
    v17(v16);
    uint64_t v13 = (unsigned int *)&enum case for ScenePhase.active(_:);
    goto LABEL_7;
  }
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100062980(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t), uint64_t a6, char a7)
{
  uint64_t v8 = v7;
  uint64_t v55 = a6;
  type metadata accessor for MainAction();
  sub_100162E4C();
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v44 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for DispatchWorkItemFlags();
  sub_100179C0C();
  uint64_t v53 = v19;
  uint64_t v54 = v18;
  __chkstk_darwin(v18);
  sub_100109314();
  uint64_t v51 = v20;
  uint64_t v52 = type metadata accessor for DispatchQoS();
  sub_100179C0C();
  uint64_t v50 = v21;
  __chkstk_darwin(v22);
  sub_100109314();
  uint64_t v49 = v23;
  type metadata accessor for DispatchTime();
  sub_100179C0C();
  uint64_t v25 = __chkstk_darwin(v24);
  uint64_t v27 = (char *)&v44 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = __chkstk_darwin(v25);
  *(void *)(v8 + 16) = 0;
  *(void *)(v8 + 24) = 0;
  *(unsigned char *)(v8 + 32) = 0;
  *(void *)(v8 + 40) = &_swiftEmptySetSingleton;
  *(void *)(v8 + 48) = a1;
  uint64_t v31 = a2;
  uint64_t v32 = a4;
  uint64_t v33 = v55;
  *(void *)(v8 + 56) = v31;
  *(void *)(v8 + 64) = a3;
  *(void *)(v8 + 72) = v32;
  *(void *)(v8 + 80) = a5;
  *(void *)(v8 + 88) = v33;
  *(void *)(v8 + 96) = 0x4014000000000000;
  *(unsigned char *)(v8 + 104) = a7;
  if (a7)
  {
    uint64_t v34 = v28;
    uint64_t v47 = v28;
    uint64_t v35 = v30;
    uint64_t v44 = (char *)&v44 - v29;
    sub_1001ABC4C(0, (unint64_t *)&qword_100E62D10);
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v45 = static OS_dispatch_queue.main.getter();
    static DispatchTime.now()();
    + infix(_:_:)();
    uint64_t v36 = *(void (**)(void, void))(v35 + 8);
    uint64_t v46 = v35 + 8;
    uint64_t v48 = v36;
    v36(v27, v34);
    uint64_t v37 = (void *)swift_allocObject();
    void v37[2] = v8;
    void v37[3] = a5;
    v37[4] = v33;
    unint64_t v58 = sub_1004A85FC;
    uint64_t v59 = v37;
    *(void *)&long long aBlock = _NSConcreteStackBlock;
    *((void *)&aBlock + 1) = 1107296256;
    *(void *)&long long v57 = sub_10010A4D4;
    *((void *)&v57 + 1) = &unk_100E18008;
    uint64_t v38 = _Block_copy(&aBlock);
    swift_retain();
    swift_retain();
    swift_release();
    static DispatchQoS.unspecified.getter();
    *(void *)&long long aBlock = _swiftEmptyArrayStorage;
    sub_100128BE4((unint64_t *)&qword_100EA0200, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_10017DF08(&qword_100E75530);
    sub_1001246C8((unint64_t *)&qword_100EA0210, &qword_100E75530);
    dispatch thunk of SetAlgebra.init<A>(_:)();
    uint64_t v39 = (void *)v45;
    OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
    _Block_release(v38);
    swift_release();
    swift_release();
    swift_release();

    sub_100162F0C();
    v40();
    sub_100162F0C();
    v41();
    sub_100162F0C();
    v42();
  }
  else
  {
    type metadata accessor for EnvironmentAction();
    swift_storeEnumTagMultiPayload();
    swift_storeEnumTagMultiPayload();
    unint64_t v58 = 0;
    long long aBlock = 0u;
    long long v57 = 0u;
    swift_retain();
    swift_retain();
    swift_retain();
    sub_1001AAF58((uint64_t)v17, (uint64_t)&aBlock, a5);
    swift_release();
    swift_release();
    sub_100178110((uint64_t)&aBlock, (uint64_t *)&unk_100EA01F0);
    sub_1001ABE70((uint64_t)v17);
    swift_release();
  }
  return v8;
}

uint64_t sub_100062E4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v81 = a2;
  uint64_t v65 = type metadata accessor for URL.WeatherSourcePar();
  uint64_t v63 = *(void *)(v65 - 8);
  __chkstk_darwin(v65);
  __n128 v62 = (char *)&v60 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for WeatherMetadata();
  uint64_t v72 = *(void *)(v4 - 8);
  uint64_t v73 = v4;
  __chkstk_darwin(v4);
  uint64_t v71 = (char *)&v60 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v70 = type metadata accessor for CurrentWeather();
  uint64_t v68 = *(void *)(v70 - 8);
  __chkstk_darwin(v70);
  __n128 v67 = (char *)&v60 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v74 = type metadata accessor for WeatherData(0);
  __chkstk_darwin(v74);
  uint64_t v66 = (uint64_t)&v60 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10017DF08(&qword_100E85FA0);
  __chkstk_darwin(v8 - 8);
  uint64_t v69 = (char *)&v60 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v80 = type metadata accessor for LearnMoreAttributorViewModel();
  __chkstk_darwin(v80);
  uint64_t v76 = (char *)&v60 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10017DF08(&qword_100E749B0);
  __chkstk_darwin(v11 - 8);
  uint64_t v64 = (char *)&v60 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v75 = (char *)&v60 - v14;
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v60 - v16;
  uint64_t v18 = type metadata accessor for ProviderAttributionConfiguration();
  uint64_t v19 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v21 = (char *)&v60 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = type metadata accessor for AppConfiguration();
  uint64_t v78 = *(void *)(v22 - 8);
  uint64_t v79 = v22;
  __chkstk_darwin(v22);
  uint64_t v24 = (char *)&v60 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001B1E64((void *)(a1 + 136), *(void *)(a1 + 160));
  dispatch thunk of AppConfigurationManagerType.appConfiguration.getter();
  Location.coordinate.getter();
  double v26 = v25;
  double v28 = v27;
  AppConfiguration.providerAttribution.getter();
  uint64_t v29 = ProviderAttributionConfiguration.mapDataLearnMoreURL.getter();
  uint64_t v31 = v30;
  uint64_t v32 = *(void (**)(char *, uint64_t))(v19 + 8);
  v32(v21, v18);
  uint64_t v77 = sub_10003550C(v29, v31, v26, v28);
  swift_bridgeObjectRelease();
  uint64_t v33 = v18;
  uint64_t v34 = sub_100030ED4(a1);
  AppConfiguration.providerAttribution.getter();
  LOBYTE(v29) = ProviderAttributionConfiguration.hideLocationViewDataProviderLogos.getter();
  v32(v21, v18);
  if ((v29 & 1) == 0)
  {
    uint64_t v36 = a1 + OBJC_IVAR____TtC7Weather24LocationViewModelFactory_lastWeatherData;
    swift_beginAccess();
    int v37 = _s7Weather24LocationCompositionStateOwet_0(v36, 1, v74);
    uint64_t v17 = v75;
    if (!v37)
    {
      uint64_t v61 = v34;
      uint64_t v38 = v66;
      sub_1001D9BA8(v36, v66, (void (*)(void))type metadata accessor for WeatherData);
      uint64_t v39 = v67;
      WeatherDataModel.currentWeather.getter();
      sub_1001569A8(v38, (void (*)(void))type metadata accessor for WeatherData);
      uint64_t v40 = v71;
      CurrentWeather.metadata.getter();
      (*(void (**)(char *, uint64_t))(v68 + 8))(v39, v70);
      uint64_t v41 = (uint64_t)v69;
      WeatherMetadata.attribution.getter();
      (*(void (**)(char *, uint64_t))(v72 + 8))(v40, v73);
      uint64_t v42 = type metadata accessor for WeatherAttribution();
      if (_s7Weather24LocationCompositionStateOwet_0(v41, 1, v42) == 1)
      {
        sub_100178110(v41, &qword_100E85FA0);
        uint64_t v34 = v61;
      }
      else
      {
        uint64_t v43 = v64;
        WeatherAttribution.sourceURL.getter();
        uint64_t v44 = (uint64_t)v43;
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v42 - 8) + 8))(v41, v42);
        uint64_t v45 = type metadata accessor for URL();
        int v46 = _s7Weather24LocationCompositionStateOwet_0(v44, 1, v45);
        uint64_t v34 = v61;
        if (v46 != 1)
        {
          uint64_t v58 = v63;
          uint64_t v59 = v62;
          (*(void (**)(char *, void, uint64_t))(v63 + 104))(v62, enum case for URL.WeatherSourcePar.app(_:), v65);
          URL.applyWeatherSourceQueryParams(for:)();
          (*(void (**)(char *, uint64_t))(v58 + 8))(v59, v65);
          uint64_t v17 = v75;
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v45 - 8) + 8))(v44, v45);
          uint64_t v48 = (uint64_t)v17;
          uint64_t v49 = 0;
          uint64_t v47 = v45;
          goto LABEL_9;
        }
        sub_100178110(v44, &qword_100E749B0);
      }
    }
    uint64_t v47 = type metadata accessor for URL();
    uint64_t v48 = (uint64_t)v17;
    uint64_t v49 = 1;
LABEL_9:
    _s7Weather24LocationCompositionStateOwst_0(v48, v49, 1, v47);
    goto LABEL_10;
  }
  swift_bridgeObjectRelease();
  uint64_t v35 = type metadata accessor for URL();
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v17, 1, 1, v35);
  uint64_t v34 = (char *)_swiftEmptyArrayStorage;
LABEL_10:
  AppConfiguration.providerAttribution.getter();
  uint64_t v50 = ProviderAttributionConfiguration.featureAvailabilityURL.getter();
  uint64_t v52 = v51;
  v32(v21, v33);
  uint64_t v53 = (uint64_t)v76;
  *uint64_t v76 = 2;
  *(void *)(v53 + 8) = v34;
  uint64_t v54 = v80;
  sub_10006DF38((uint64_t)v17, v53 + *(int *)(v80 + 24), &qword_100E749B0);
  uint64_t v55 = (uint64_t *)(v53 + *(int *)(v54 + 28));
  *uint64_t v55 = v50;
  v55[1] = v52;
  uint64_t v56 = v77;
  swift_retain();
  sub_100178110((uint64_t)v17, &qword_100E749B0);
  *(void *)(v53 + *(int *)(v54 + 32)) = v56;
  sub_1001E11B8(v53, v81, (void (*)(void))type metadata accessor for LearnMoreAttributorViewModel);
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v78 + 8))(v24, v79);
}

uint64_t sub_1000636CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, long long *a9, long long *a10, uint64_t a11, uint64_t a12, long long *a13, long long *a14, unsigned __int8 a15, uint64_t a16, long long *a17, uint64_t a18, uint64_t a19)
{
  uint64_t v51 = a8;
  uint64_t v50 = a7;
  uint64_t v48 = a6;
  uint64_t v47 = a5;
  uint64_t v46 = a4;
  uint64_t v45 = a3;
  uint64_t v43 = a2;
  uint64_t v42 = a1;
  int v54 = a15;
  uint64_t v53 = a14;
  uint64_t v52 = a13;
  uint64_t v49 = a10;
  uint64_t v44 = a9;
  uint64_t v55 = a17;
  uint64_t v57 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  uint64_t v58 = *(void *)(v57 - 8);
  __chkstk_darwin(v57);
  uint64_t v20 = (char *)&v35 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin(v21);
  uint64_t v22 = type metadata accessor for DispatchQoS();
  __chkstk_darwin(v22 - 8);
  uint64_t v23 = type metadata accessor for UnfairLock.Options();
  __chkstk_darwin(v23 - 8);
  uint64_t v70 = type metadata accessor for WeatherDataPreprocessor();
  uint64_t v71 = &off_100E2BE50;
  *(void *)&long long v69 = a11;
  uint64_t v67 = type metadata accessor for NewsDataManager();
  uint64_t v68 = &off_100E37880;
  *(void *)&long long v66 = a12;
  uint64_t v64 = type metadata accessor for RemotelyConfiguredSlowLocationLoadingMonitor();
  uint64_t v65 = &off_100E34778;
  *(void *)&long long v63 = a16;
  uint64_t v61 = type metadata accessor for DailyForecastFilter();
  __n128 v62 = &off_100E0D630;
  *(void *)&long long v60 = a18;
  sub_1001ABC4C(0, (unint64_t *)&qword_100E62D68);
  *(void *)(a19 + 448) = OS_os_log.init(subsystem:category:)();
  *(void *)(a19 + 456) = &_swiftEmptySetSingleton;
  *(void *)(a19 + 464) = &_swiftEmptyDictionarySingleton;
  static UnfairLock.Options.dataSynchronization.getter();
  type metadata accessor for UnfairLock();
  swift_allocObject();
  *(void *)(a19 + 472) = UnfairLock.init(options:)();
  uint64_t v41 = sub_1001ABC4C(0, (unint64_t *)&qword_100E62D10);
  static DispatchQoS.userInitiated.getter();
  uint64_t v59 = _swiftEmptyArrayStorage;
  uint64_t v56 = sub_1001A58D4((unint64_t *)&qword_100E62D18, 255, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  uint64_t v24 = sub_10017DF08(&qword_100E62D20);
  uint64_t v40 = sub_1001246C8((unint64_t *)&qword_100E62D28, &qword_100E62D20);
  uint64_t v38 = v24;
  uint64_t v39 = v21;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  uint64_t v25 = enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:);
  double v26 = *(void (**)(char *, void, uint64_t))(v58 + 104);
  v58 += 104;
  uint64_t v35 = v20;
  double v27 = v20;
  unsigned int v36 = enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:);
  uint64_t v28 = v57;
  v26(v27, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v57);
  int v37 = v26;
  *(void *)(a19 + 480) = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  static DispatchQoS.utility.getter();
  uint64_t v59 = _swiftEmptyArrayStorage;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  uint64_t v29 = v35;
  v26(v35, v25, v28);
  *(void *)(a19 + 488) = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  static DispatchQoS.utility.getter();
  uint64_t v59 = _swiftEmptyArrayStorage;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  v37(v29, v36, v57);
  *(void *)(a19 + 496) = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  uint64_t v30 = v43;
  *(void *)(a19 + 16) = v42;
  *(void *)(a19 + 24) = v30;
  uint64_t v31 = v46;
  *(void *)(a19 + 32) = v45;
  *(void *)(a19 + 40) = v31;
  uint64_t v32 = v48;
  *(void *)(a19 + 48) = v47;
  *(void *)(a19 + 56) = v32;
  uint64_t v33 = v51;
  *(void *)(a19 + 64) = v50;
  *(void *)(a19 + 72) = v33;
  sub_1001262E4(v44, a19 + 80);
  sub_1001262E4(v49, a19 + 120);
  sub_1001262E4(&v69, a19 + 160);
  sub_1001262E4(&v66, a19 + 200);
  sub_1001262E4(v52, a19 + 240);
  sub_1001262E4(v53, a19 + 280);
  *(unsigned char *)(a19 + 320) = v54;
  sub_1001262E4(&v63, a19 + 328);
  sub_1001262E4(v55, a19 + 368);
  sub_1001262E4(&v60, a19 + 408);
  return a19;
}

uint64_t initializeBufferWithCopyOfBuffer for InvertedColorSchemeStatusBarCorrectionModifier(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  return a1;
}

void sub_100063DCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v68 = a7;
  uint64_t v69 = a3;
  uint64_t v70 = a4;
  uint64_t v11 = type metadata accessor for TimeState();
  uint64_t v65 = *(void *)(v11 - 8);
  __chkstk_darwin(v11 - 8);
  uint64_t v66 = v12;
  uint64_t v64 = (uint64_t)&v56 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_10017DF08(&qword_100E639E8);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)&v56 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for Location();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v56 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v22 = (char *)&v56 - v21;
  uint64_t v24 = v23;
  sub_10006DF38(a2, (uint64_t)v15, &qword_100E639E8);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v15, 1, v24) == 1)
  {
    sub_100178110((uint64_t)v15, &qword_100E639E8);
    if (qword_100E62818 != -1) {
      swift_once();
    }
    uint64_t v25 = type metadata accessor for Logger();
    sub_1002102B0(v25, (uint64_t)qword_100F51F50);
    double v26 = Logger.logObject.getter();
    os_log_type_t v27 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v26, v27))
    {
      uint64_t v28 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v28 = 0;
      _os_log_impl((void *)&_mh_execute_header, v26, v27, "WeatherDataStoreObserver: Fetching weather data for all locations", v28, 2u);
      swift_slowDealloc();
    }

    sub_10020E788();
    sub_10005EC80();
  }
  else
  {
    uint64_t v29 = (*(uint64_t (**)(char *, char *, uint64_t))(v17 + 32))(v22, v15, v24);
    __chkstk_darwin(v29);
    swift_bridgeObjectRetain();
    sub_10021522C();
    uint64_t v58 = v30;
    if (qword_100E62818 != -1) {
      swift_once();
    }
    uint64_t v62 = a5;
    uint64_t v63 = a6;
    uint64_t v31 = type metadata accessor for Logger();
    sub_1002102B0(v31, (uint64_t)qword_100F51F50);
    uint64_t v32 = *(void (**)(char *, char *, uint64_t))(v17 + 16);
    long long v60 = v22;
    v32(v20, v22, v24);
    uint64_t v33 = Logger.logObject.getter();
    uint64_t v34 = v24;
    os_log_type_t v35 = static os_log_type_t.default.getter();
    BOOL v36 = os_log_type_enabled(v33, v35);
    uint64_t v61 = a1;
    uint64_t v59 = v34;
    if (v36)
    {
      uint64_t v37 = swift_slowAlloc();
      uint64_t v38 = swift_slowAlloc();
      *(_DWORD *)uint64_t v37 = 141558275;
      uint64_t v71 = 1752392040;
      uint64_t v72 = v38;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v37 + 12) = 2081;
      uint64_t v39 = Location.name.getter();
      uint64_t v71 = sub_10016414C(v39, v40, &v72);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      uint64_t v41 = *(void (**)(uint64_t, uint64_t))(v17 + 8);
      uint64_t v56 = (v17 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
      uint64_t v57 = v41;
      v41((uint64_t)v20, v34);
      _os_log_impl((void *)&_mh_execute_header, v33, v35, "WeatherDataStoreObserver: Fetching weather data for priority location %{private,mask.hash}s", (uint8_t *)v37, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      uint64_t v42 = *(void (**)(uint64_t, uint64_t))(v17 + 8);
      uint64_t v56 = (v17 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
      uint64_t v57 = v42;
      v42((uint64_t)v20, v34);
    }

    uint64_t v43 = swift_allocObject();
    swift_weakInit();
    uint64_t v44 = v68;
    uint64_t v45 = v64;
    sub_1001668D8(v68, v64, (void (*)(void))type metadata accessor for TimeState);
    unint64_t v46 = (*(unsigned __int8 *)(v65 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v65 + 80);
    unint64_t v47 = (v66 + v46 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v48 = (void *)swift_allocObject();
    uint64_t v49 = v58;
    v48[2] = v43;
    v48[3] = v49;
    uint64_t v51 = v69;
    uint64_t v50 = v70;
    v48[4] = v69;
    v48[5] = v50;
    uint64_t v52 = (uint64_t)v48 + v46;
    uint64_t v54 = v62;
    uint64_t v53 = v63;
    v48[6] = v62;
    v48[7] = v53;
    sub_100116FA0(v45, v52, (void (*)(void))type metadata accessor for TimeState);
    *(void *)((char *)v48 + v47) = v61;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v55 = (uint64_t)v60;
    sub_10005FF78((uint64_t)v60, v51, v50, v54, v53, v44, 0, 0, (uint64_t)sub_100226028, (uint64_t)v48, v56, (uint64_t)v57, v58, v59, (uint64_t)v60, v61, v62, v63, v64,
      v65,
      v66,
      v67);
    swift_release();
    v57(v55, v59);
    swift_release();
  }
}

uint64_t sub_100064478(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v6 = (_OWORD *)(a1 + 8);
  uint64_t v7 = (_OWORD *)(a2 + 8);
  if (*(void *)(a1 + 16) < 2uLL) {
    goto LABEL_4;
  }
  unint64_t v8 = *(void *)(a2 + 16);
  if (v8 < 2)
  {
    sub_10027B4D4((uint64_t)v6);
LABEL_4:
    *uint64_t v6 = *v7;
    goto LABEL_6;
  }
  *(void *)(a1 + 8) = *(void *)v7;
  *(void *)(a1 + 16) = v8;
  swift_bridgeObjectRelease();
LABEL_6:
  uint64_t v9 = *(int *)(a3 + 24);
  uint64_t v10 = (void *)(a1 + v9);
  uint64_t v11 = (const void *)(a2 + v9);
  uint64_t v12 = type metadata accessor for Date();
  int v13 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v10, 1, v12);
  int v14 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v11, 1, v12);
  if (!v13)
  {
    uint64_t v15 = *(void *)(v12 - 8);
    if (!v14)
    {
      (*(void (**)(void *, const void *, uint64_t))(v15 + 40))(v10, v11, v12);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v15 + 8))(v10, v12);
    goto LABEL_11;
  }
  if (v14)
  {
LABEL_11:
    uint64_t v16 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    memcpy(v10, v11, *(void *)(*(void *)(v16 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(void *)(v12 - 8) + 32))(v10, v11, v12);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v10, 0, 1, v12);
  return a1;
}

uint64_t destroy for ConditionDetailLegendViewModel()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for LocationView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  uint64_t v6 = a2 + 56;
  long long v7 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 80) = v7;
  uint64_t v8 = v7;
  uint64_t v9 = **(void (***)(uint64_t, uint64_t, uint64_t))(v7 - 8);
  swift_retain();
  swift_retain();
  swift_unknownObjectRetain();
  swift_retain();
  v9(a1 + 56, v6, v8);
  long long v10 = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 120) = v10;
  (**(void (***)(uint64_t, uint64_t))(v10 - 8))(a1 + 96, a2 + 96);
  return a1;
}

uint64_t sub_100064788()
{
  ProxyContainer.public.getter();
  sub_10017DF08(&qword_100E90C28);
  sub_100179D0C();
  swift_release();
  swift_release();
  ProxyContainer.public.getter();
  sub_10017DF08(&qword_100E90C30);
  sub_100179D0C();
  swift_release();
  swift_release();
  ProxyContainer.public.getter();
  sub_10017DF08(&qword_100E870F0);
  sub_100179D0C();
  swift_release();
  swift_release();
  ProxyContainer.public.getter();
  sub_10017DF08(&qword_100E90C38);
  sub_100179D0C();
  swift_release();
  swift_release();
  ProxyContainer.private.getter();
  swift_retain();
  RegistrationContainer.lazy(block:)();
  swift_release();

  return swift_release();
}

uint64_t sub_1000648E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v8 = sub_10015180C((uint64_t)&unk_100E8EB60);

  return static EnvironmentKey<>._valuesEqual(_:_:)(a1, a2, a3, a4, v8);
}

uint64_t sub_100064978@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_10017DF08(&qword_100E8EBB8);
  uint64_t v6 = __chkstk_darwin(v5);
  unint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void *)(v2 + 72);
  if (v9)
  {
    uint64_t v10 = *(void *)(v2 + 64);
    uint64_t v11 = &v8[*(int *)(v6 + 36)];
    long long v15 = *(_OWORD *)(v2 + 8);
    sub_1001E9994(v2 + 24, (uint64_t)(v11 + 32));
    swift_retain_n();
    swift_retain();
    swift_unknownObjectRetain();
    sub_10017DF08(&qword_100E64A88);
    sub_10024D5E4((uint64_t)&unk_100E64A90);
    *(void *)uint64_t v11 = ObservedObject.init(wrappedValue:)();
    *((void *)v11 + 1) = v12;
    *((_OWORD *)v11 + 1) = v15;
    *((void *)v11 + 9) = v10;
    *((void *)v11 + 10) = v9;
    uint64_t v13 = sub_10017DF08(&qword_100E8EBC0);
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16))(v8, a1, v13);
    swift_release();
    return sub_10024D364((uint64_t)v8, a2, &qword_100E8EBB8);
  }
  else
  {
    type metadata accessor for WeatherVFXConditionBackground();
    sub_10015180C((uint64_t)&unk_100E70F28);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t sub_100064B70@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X8>, double a5@<D0>, double a6@<D1>)
{
  v28[0] = a4;
  uint64_t v11 = sub_10017DF08(&qword_100E64550);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_10017DF08(&qword_100E64558);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)v28 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_10017DF08(&qword_100E64560);
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)v28 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = 0;
  if (a2)
  {
    *(double *)&v28[1] = a6;
    v28[2] = a3;
    sub_10017DF08(&qword_100E64490);
    State.wrappedValue.getter();
    uint64_t v20 = v28[3];
  }
  uint64_t v21 = sub_10017DF08(&qword_100E64568);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v21 - 8) + 16))(v13, a1, v21);
  uint64_t v22 = &v13[*(int *)(v11 + 36)];
  *(void *)uint64_t v22 = 0;
  *((void *)v22 + 1) = v20;
  uint64_t v23 = swift_allocObject();
  char v24 = a2 & 1;
  *(unsigned char *)(v23 + 16) = v24;
  *(double *)(v23 + 24) = a5;
  *(double *)(v23 + 32) = a6;
  *(void *)(v23 + 40) = a3;
  uint64_t v25 = swift_allocObject();
  *(unsigned char *)(v25 + 16) = v24;
  *(double *)(v25 + 24) = a5;
  *(double *)(v25 + 32) = a6;
  *(void *)(v25 + 40) = a3;
  sub_10006DF38((uint64_t)v13, (uint64_t)v16, &qword_100E64550);
  double v26 = (void (**)(double *@<X8>))&v16[*(int *)(v14 + 36)];
  *double v26 = sub_100213758;
  v26[1] = (void (*)(double *@<X8>))v23;
  v26[2] = (void (*)(double *@<X8>))sub_100214100;
  void v26[3] = (void (*)(double *@<X8>))v25;
  swift_retain_n();
  sub_100178110((uint64_t)v13, &qword_100E64550);
  sub_10006DF38((uint64_t)v16, (uint64_t)v19, &qword_100E64558);
  *(void *)&v19[*(int *)(v17 + 36)] = 0x3FF0000000000000;
  sub_100178110((uint64_t)v16, &qword_100E64558);
  return sub_10024D364((uint64_t)v19, v28[0], &qword_100E64560);
}

uint64_t sub_100064E38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v12 = type metadata accessor for Divider();
  uint64_t v75 = *(void *)(v12 - 8);
  uint64_t v76 = v12;
  __chkstk_darwin(v12);
  uint64_t v73 = (char *)&v70 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v71 = sub_10017DF08(&qword_100E66250);
  uint64_t v14 = __chkstk_darwin(v71);
  uint64_t v81 = (uint64_t)&v70 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v72 = (char *)&v70 - v17;
  __chkstk_darwin(v16);
  uint64_t v85 = (uint64_t)&v70 - v18;
  uint64_t v19 = type metadata accessor for LocationComponentHeaderView(0);
  uint64_t v20 = a5 + *(int *)(v19 + 48);
  uint64_t v21 = *(void *)v20;
  uint64_t v22 = *(unsigned __int8 *)(v20 + 8);
  char v23 = *(unsigned char *)(v20 + 9);
  sub_100193DD4(*(void *)v20, v22, v23);
  sub_10020CEA4();
  uint64_t v78 = v24;
  int v77 = v25;
  sub_10014D838(v21, v22, v23);
  uint64_t KeyPath = swift_getKeyPath();
  int v80 = a3;
  uint64_t v82 = a1;
  uint64_t v83 = a2;
  sub_100190CC4(a1, a2, a3 & 1);
  uint64_t v84 = a4;
  swift_bridgeObjectRetain();
  int v74 = static Edge.Set.horizontal.getter();
  uint64_t v26 = a5 + *(int *)(v19 + 20);
  uint64_t v27 = *(void *)v26;
  char v28 = *(unsigned char *)(v26 + 8);
  sub_100195B7C(*(void *)v26, v28);
  sub_100149AE8();
  LOBYTE(v22) = v29;
  sub_10018F6D8(v27, v28);
  if ((v22 & 1) == 0)
  {
    if (qword_100E62248 == -1) {
      goto LABEL_5;
    }
    goto LABEL_14;
  }
  if (qword_100E62240 != -1) {
LABEL_14:
  }
    swift_once();
LABEL_5:
  uint64_t v30 = v85;
  uint64_t v31 = v73;
  EdgeInsets.init(_all:)();
  uint64_t v33 = v32;
  uint64_t v35 = v34;
  uint64_t v37 = v36;
  uint64_t v39 = v38;
  Divider.init()();
  char v40 = static Edge.Set.leading.getter();
  sub_100195B7C(v27, v28);
  sub_100149AE8();
  char v42 = v41;
  sub_10018F6D8(v27, v28);
  if (v42)
  {
    if (qword_100E62240 == -1) {
      goto LABEL_9;
    }
    goto LABEL_15;
  }
  if (qword_100E62248 != -1) {
LABEL_15:
  }
    swift_once();
LABEL_9:
  EdgeInsets.init(_all:)();
  uint64_t v44 = v43;
  uint64_t v46 = v45;
  uint64_t v48 = v47;
  uint64_t v50 = v49;
  uint64_t v52 = v75;
  uint64_t v51 = v76;
  uint64_t v53 = (uint64_t)v72;
  (*(void (**)(char *, char *, uint64_t))(v75 + 16))(v72, v31, v76);
  uint64_t v54 = v53 + *(int *)(v71 + 36);
  *(unsigned char *)uint64_t v54 = v40;
  *(void *)(v54 + 8) = v44;
  *(void *)(v54 + 16) = v46;
  *(void *)(v54 + 24) = v48;
  *(void *)(v54 + 32) = v50;
  *(unsigned char *)(v54 + 40) = 0;
  (*(void (**)(char *, uint64_t))(v52 + 8))(v31, v51);
  sub_10024D364(v53, v30, &qword_100E66250);
  uint64_t v55 = *(void *)v26;
  LOBYTE(v52) = *(unsigned char *)(v26 + 8);
  sub_100195B7C(*(void *)v26, v52);
  sub_100149AE8();
  char v57 = v56;
  sub_10018F6D8(v55, v52);
  BOOL v60 = 1;
  if (v57)
  {
    id v58 = [self currentDevice];
    id v59 = [v58 userInterfaceIdiom];

    if (v59 == (id)1) {
      BOOL v60 = 0;
    }
  }
  uint64_t v61 = v81;
  sub_10006DF38(v30, v81, &qword_100E66250);
  uint64_t v63 = v82;
  uint64_t v62 = v83;
  *(void *)a6 = v82;
  *(void *)(a6 + 8) = v62;
  char v64 = v80 & 1;
  *(unsigned char *)(a6 + 16) = v80 & 1;
  uint64_t v65 = v78;
  uint64_t v66 = KeyPath;
  *(void *)(a6 + 24) = v84;
  *(void *)(a6 + 32) = v66;
  *(void *)(a6 + 40) = v65;
  *(unsigned char *)(a6 + 48) = v77 & 1;
  *(_WORD *)(a6 + 49) = 256;
  *(unsigned char *)(a6 + 56) = v74;
  *(void *)(a6 + 64) = v33;
  *(void *)(a6 + 72) = v35;
  *(void *)(a6 + 80) = v37;
  *(void *)(a6 + 88) = v39;
  *(unsigned char *)(a6 + 96) = 0;
  *(void *)(a6 + 104) = 0x402C000000000000;
  *(unsigned char *)(a6 + 112) = 0;
  uint64_t v67 = sub_10017DF08(&qword_100EB82C0);
  sub_10006DF38(v61, a6 + *(int *)(v67 + 64), &qword_100E66250);
  uint64_t v68 = a6 + *(int *)(v67 + 80);
  *(void *)uint64_t v68 = 0;
  *(unsigned char *)(v68 + 8) = v60;
  sub_100190CC4(v63, v62, v64);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_10017DF4C(v85, &qword_100E66250);
  sub_10017DF4C(v61, &qword_100E66250);
  sub_100191924(v63, v62, v64);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1000653F0@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_10017DF08(&qword_100E90B60);
  sub_100179C0C();
  uint64_t v7 = v6;
  __chkstk_darwin(v8);
  sub_10016279C();
  sub_10017DF08(&qword_100E90B68);
  type metadata accessor for WireframeContentManager();
  sub_1001246C8(&qword_100E90B70, &qword_100E90B68);
  sub_1001357B0(&qword_100E83B40, (void (*)(uint64_t))type metadata accessor for WireframeContentManager);
  View.environment<A>(_:)();
  type metadata accessor for VisibilityState();
  swift_allocObject();
  swift_retain_n();
  sub_100065614();
  State.init(wrappedValue:)();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(a2, v2, v5);
  swift_release();
  uint64_t v9 = (void *)(a2 + *(int *)(sub_10017DF08(&qword_100E90B78) + 36));
  *uint64_t v9 = v11;
  v9[1] = v12;
  _OWORD v9[2] = sub_1000A9FA0;
  double v9[3] = a1;
  return (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(v2, v5);
}

uint64_t type metadata accessor for VisibilityState()
{
  uint64_t result = qword_100E7C5D0;
  if (!qword_100E7C5D0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100065614()
{
  *(void *)(v0 + 16) = 0;
  *(void *)(v0 + 24) = 0;
  *(_WORD *)(v0 + 32) = 0;
  ObservationRegistrar.init()();
  return v0;
}

uint64_t sub_100065644(void *a1)
{
  uint64_t v2 = sub_10017DF08(&qword_100EAC4A0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = &v23[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = type metadata accessor for LocationModel();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  __chkstk_darwin(v5);
  uint64_t v30 = &v23[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v8);
  uint64_t v10 = &v23[-v9];
  sub_1001B1E64(a1, a1[3]);
  dispatch thunk of ResolverType.resolve<A>(_:)();
  uint64_t result = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v4, 1, v5);
  if (result == 1)
  {
    __break(1u);
    goto LABEL_7;
  }
  char v29 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v6 + 32);
  v29(v10, v4, v5);
  sub_1001B1E64(a1, a1[3]);
  dispatch thunk of ResolverType.resolve<A>(_:)();
  char v12 = v41[0];
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E8DD50);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v40)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  sub_1001262E4(&v39, (uint64_t)v41);
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E8DCD0);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v37)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  char v28 = v10;
  sub_1001262E4(&v36, (uint64_t)&v39);
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E64798);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  uint64_t v13 = v32;
  if (v32)
  {
    uint64_t v27 = v35;
    uint64_t v26 = v34;
    uint64_t v25 = v33;
    int v24 = v12 & 1;
    uint64_t v14 = *sub_1001B1E64(v41, v41[3]);
    uint64_t v37 = type metadata accessor for LocationInputFactory();
    uint64_t v38 = &off_100E31808;
    *(void *)&long long v36 = v14;
    sub_10020D948((uint64_t)&v36, (uint64_t)v31);
    uint64_t v15 = swift_allocObject();
    sub_1001262E4(v31, v15 + 16);
    swift_retain();
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)&v36);
    uint64_t v16 = swift_allocObject();
    *(void *)(v16 + 16) = sub_10013A8B8;
    *(void *)(v16 + 24) = v15;
    sub_10020D948((uint64_t)&v39, (uint64_t)&v36);
    uint64_t v17 = v30;
    uint64_t v18 = v28;
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v6 + 16))(v30, v28, v5);
    unint64_t v19 = (*(unsigned __int8 *)(v6 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    uint64_t v20 = v19 + v7;
    uint64_t v21 = swift_allocObject();
    sub_1001262E4(&v36, v21 + 16);
    v29((unsigned char *)(v21 + v19), v17, v5);
    *(unsigned char *)(v21 + v20) = v24;
    sub_10017DF08(&qword_100E64A38);
    swift_allocObject();
    uint64_t v22 = sub_100066458(v13, v25, v26, v27, sub_1001AF4C0, 0, sub_100137F50, v16, sub_10000C44C, v21);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)&v39);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v41);
    (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v18, v5);
    return v22;
  }
LABEL_9:
  __break(1u);
  return result;
}

void sub_100065B10()
{
  uint64_t v0 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin(v4);
  uint64_t v5 = type metadata accessor for DispatchQoS();
  __chkstk_darwin(v5 - 8);
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v7 = Strong;
    uint64_t v10 = v0;
    type metadata accessor for NWPathMonitor();
    swift_allocObject();
    *(void *)(v7 + 32) = NWPathMonitor.init()();
    swift_release();
    if (*(void *)(v7 + 32))
    {
      swift_retain();
      swift_retain();
      sub_10005BEBC((uint64_t)sub_10021B69C);
      NWPathMonitor.pathUpdateHandler.setter();
      swift_release();
      swift_release();
    }
    sub_1001AB3E0();
    static DispatchQoS.unspecified.getter();
    uint64_t v11 = &_swiftEmptyArrayStorage;
    sub_100215C98((unint64_t *)&qword_100E62D18, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
    sub_10017DF08(&qword_100E62D20);
    sub_10012470C((unint64_t *)&qword_100E62D28, &qword_100E62D20);
    dispatch thunk of SetAlgebra.init<A>(_:)();
    (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v10);
    uint64_t v8 = (void *)OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
    if (*(void *)(v7 + 32))
    {
      swift_retain();
      NWPathMonitor.start(queue:)();
      swift_release();
    }
    type metadata accessor for AirplaneModeMonitor();
    swift_allocObject();
    *(void *)(v7 + 40) = sub_10004AFD8();
    swift_release();
    if (*(void *)(v7 + 40))
    {
      swift_retain();
      swift_retain();
      sub_100012B2C((uint64_t)sub_100C08FB0, v7);
      swift_release();
      if (*(void *)(v7 + 40))
      {
        swift_retain();
        sub_10005C934(v8);
        swift_release();
      }
    }
    swift_release();
  }
}

uint64_t sub_100065EB8()
{
  uint64_t v1 = type metadata accessor for NotificationSubscription.Kind();
  uint64_t v37 = *(void *)(v1 - 8);
  uint64_t v38 = v1;
  __chkstk_darwin(v1);
  uint64_t v45 = (char *)&v31 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = swift_allocObject();
  uint64_t v44 = v3;
  *(void *)(v3 + 16) = &_swiftEmptyArrayStorage;
  uint64_t v32 = (uint64_t *)(v3 + 16);
  uint64_t v4 = swift_allocObject();
  uint64_t v43 = v4;
  *(void *)(v4 + 16) = &_swiftEmptyArrayStorage;
  uint64_t v5 = (uint64_t *)(v4 + 16);
  uint64_t v6 = swift_allocObject();
  uint64_t v42 = v6;
  *(unsigned char *)(v6 + 16) = 0;
  uint64_t v7 = (unsigned char *)(v6 + 16);
  uint64_t v8 = swift_allocObject();
  uint64_t v41 = v8;
  *(unsigned char *)(v8 + 16) = 0;
  uint64_t v9 = (unsigned char *)(v8 + 16);
  uint64_t v10 = swift_allocObject();
  uint64_t v40 = v10;
  *(unsigned char *)(v10 + 16) = 0;
  uint64_t v11 = (unsigned char *)(v10 + 16);
  uint64_t v12 = swift_allocObject();
  uint64_t v39 = v12;
  *(unsigned char *)(v12 + 16) = 0;
  uint64_t v13 = (unsigned char *)(v12 + 16);
  sub_1001B1E64(v0 + 8, v0[11]);
  int v34 = dispatch thunk of NotificationSubscriptionManagerType.isSubscriptionAvailable.getter();
  uint64_t v15 = v0[11];
  uint64_t v14 = v0[12];
  uint64_t v35 = v0;
  uint64_t v36 = v14;
  uint64_t v33 = v0 + 8;
  sub_1001B1E64(v0 + 8, v15);
  static NotificationSubscription.Kind.all.getter();
  uint64_t v16 = dispatch thunk of NotificationSubscriptionManagerType.subscriptions(of:)();
  uint64_t v17 = v32;
  (*(void (**)(char *, uint64_t))(v37 + 8))(v45, v38);
  uint64_t v18 = *(void *)(v16 + 16);
  if (v18)
  {
    uint64_t v19 = *(void *)(type metadata accessor for NotificationSubscription() - 8);
    uint64_t v20 = (char *)v16;
    uint64_t v21 = v16 + ((*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80));
    uint64_t v22 = *(void *)(v19 + 72);
    uint64_t v45 = v20;
    swift_bridgeObjectRetain();
    do
    {
      sub_1008037D4(v21, v17, v7, v9, v5, v11, v13);
      v21 += v22;
      --v18;
    }
    while (v18);
    swift_bridgeObjectRelease_n();
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  char v23 = v35;
  sub_1001B1E64(v33, v35[11]);
  char v24 = dispatch thunk of NotificationSubscriptionManagerType.resubscribedAfterDeviceRestoreOnce()();
  uint64_t v25 = swift_allocObject();
  *(unsigned char *)(v25 + 16) = v24 & 1;
  uint64_t v27 = v43;
  uint64_t v26 = v44;
  *(void *)(v25 + 24) = v23;
  *(void *)(v25 + 32) = v26;
  *(void *)(v25 + 40) = v27;
  *(unsigned char *)(v25 + 48) = v34 & 1;
  uint64_t v28 = v41;
  *(void *)(v25 + 56) = v42;
  *(void *)(v25 + 64) = v28;
  uint64_t v29 = v39;
  *(void *)(v25 + 72) = v40;
  *(void *)(v25 + 80) = v29;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  asyncMain(block:)();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

#error "100066534: call analysis failed (funcsize=93)"

#error "1000666C8: call analysis failed (funcsize=93)"

uint64_t initializeWithCopy for VisibilityModifier(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v3 = *(void *)(a2 + 24);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = v3;
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

#error "1000668BC: call analysis failed (funcsize=93)"

#error "100066A50: call analysis failed (funcsize=93)"

uint64_t sub_100066B08(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)a2;
  char v7 = *(unsigned char *)(a2 + 8);
  sub_100195B7C(*(void *)a2, v7);
  uint64_t v8 = *(void *)a1;
  char v9 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v6;
  *(unsigned char *)(a1 + 8) = v7;
  sub_10018F6D8(v8, v9);
  if (a1 != a2)
  {
    uint64_t v10 = a3[5];
    uint64_t v11 = a1 + v10;
    uint64_t v12 = a2 + v10;
    sub_10017DF4C(a1 + v10, &qword_100E829F0);
    sub_10017DF08(&qword_100E829F0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      type metadata accessor for LocationComponentHeaderViewModel(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          *(void *)uint64_t v11 = *(void *)v12;
          *(void *)(v11 + 8) = *(void *)(v12 + 8);
          *(void *)(v11 + 16) = *(void *)(v12 + 16);
          *(void *)(v11 + 24) = *(void *)(v12 + 24);
          *(void *)(v11 + 32) = *(void *)(v12 + 32);
          *(void *)(v11 + 40) = *(void *)(v12 + 40);
          *(void *)(v11 + 48) = *(void *)(v12 + 48);
          *(void *)(v11 + 56) = *(void *)(v12 + 56);
          *(unsigned char *)(v11 + 64) = *(unsigned char *)(v12 + 64);
          *(void *)(v11 + 72) = *(void *)(v12 + 72);
          *(void *)(v11 + 80) = *(void *)(v12 + 80);
          *(unsigned char *)(v11 + 88) = *(unsigned char *)(v12 + 88);
          goto LABEL_10;
        case 2u:
          *(void *)uint64_t v11 = *(void *)v12;
          *(void *)(v11 + 8) = *(void *)(v12 + 8);
          *(void *)(v11 + 16) = *(void *)(v12 + 16);
          *(void *)(v11 + 24) = *(void *)(v12 + 24);
          *(void *)(v11 + 32) = *(void *)(v12 + 32);
          *(void *)(v11 + 40) = *(void *)(v12 + 40);
          *(void *)(v11 + 48) = *(void *)(v12 + 48);
          *(void *)(v11 + 56) = *(void *)(v12 + 56);
          *(void *)(v11 + 64) = *(void *)(v12 + 64);
          *(void *)(v11 + 72) = *(void *)(v12 + 72);
          *(void *)(v11 + 80) = *(void *)(v12 + 80);
          *(void *)(v11 + 88) = *(void *)(v12 + 88);
          *(unsigned char *)(v11 + 96) = *(unsigned char *)(v12 + 96);
          *(void *)(v11 + 104) = *(void *)(v12 + 104);
          *(void *)(v11 + 112) = *(void *)(v12 + 112);
          *(unsigned char *)(v11 + 120) = *(unsigned char *)(v12 + 120);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_11;
        case 3u:
          uint64_t v13 = type metadata accessor for WeatherDescription();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
          uint64_t v14 = type metadata accessor for LocationComponentHeaderViewModel.Description(0);
          uint64_t v15 = *(int *)(v14 + 20);
          uint64_t v16 = v11 + v15;
          uint64_t v17 = v12 + v15;
          *(void *)uint64_t v16 = *(void *)v17;
          *(void *)(v16 + 8) = *(void *)(v17 + 8);
          *(void *)(v16 + 16) = *(void *)(v17 + 16);
          *(void *)(v16 + 24) = *(void *)(v17 + 24);
          *(unsigned char *)(v16 + 32) = *(unsigned char *)(v17 + 32);
          *(void *)(v16 + 40) = *(void *)(v17 + 40);
          *(void *)(v16 + 48) = *(void *)(v17 + 48);
          *(unsigned char *)(v11 + *(int *)(v14 + 24)) = *(unsigned char *)(v12 + *(int *)(v14 + 24));
          break;
        case 5u:
          *(void *)uint64_t v11 = *(void *)v12;
          *(void *)(v11 + 8) = *(void *)(v12 + 8);
          *(void *)(v11 + 16) = *(void *)(v12 + 16);
          *(void *)(v11 + 24) = *(void *)(v12 + 24);
          *(void *)(v11 + 32) = *(void *)(v12 + 32);
          *(void *)(v11 + 40) = *(void *)(v12 + 40);
          *(void *)(v11 + 48) = *(void *)(v12 + 48);
          *(void *)(v11 + 56) = *(void *)(v12 + 56);
          *(void *)(v11 + 64) = *(void *)(v12 + 64);
          *(void *)(v11 + 72) = *(void *)(v12 + 72);
          *(void *)(v11 + 80) = *(void *)(v12 + 80);
          *(void *)(v11 + 88) = *(void *)(v12 + 88);
          *(void *)(v11 + 96) = *(void *)(v12 + 96);
          *(unsigned char *)(v11 + 104) = *(unsigned char *)(v12 + 104);
          *(void *)(v11 + 112) = *(void *)(v12 + 112);
          *(void *)(v11 + 120) = *(void *)(v12 + 120);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
LABEL_10:
          swift_bridgeObjectRetain();
LABEL_11:
          swift_bridgeObjectRetain();
          break;
        default:
          *(void *)uint64_t v11 = *(void *)v12;
          *(void *)(v11 + 8) = *(void *)(v12 + 8);
          *(void *)(v11 + 16) = *(void *)(v12 + 16);
          *(void *)(v11 + 24) = *(void *)(v12 + 24);
          *(unsigned char *)(v11 + 32) = *(unsigned char *)(v12 + 32);
          *(void *)(v11 + 40) = *(void *)(v12 + 40);
          *(void *)(v11 + 48) = *(void *)(v12 + 48);
          break;
      }
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
      uint64_t v18 = (int *)type metadata accessor for LocationComponentHeaderMetrics(0);
      *(void *)(v11 + v18[5]) = *(void *)(v12 + v18[5]);
      *(void *)(v11 + v18[6]) = *(void *)(v12 + v18[6]);
      uint64_t v19 = v18[7];
      uint64_t v20 = v11 + v19;
      uint64_t v21 = v12 + v19;
      char v22 = *(unsigned char *)(v21 + 8);
      *(void *)uint64_t v20 = *(void *)v21;
      *(unsigned char *)(v20 + 8) = v22;
      *(unsigned char *)(v11 + v18[8]) = *(unsigned char *)(v12 + v18[8]);
    }
    else
    {
      *(void *)uint64_t v11 = *(void *)v12;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v23 = a3[6];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  uint64_t v26 = *(void *)v25;
  char v27 = *(unsigned char *)(v25 + 8);
  sub_100195B7C(*(void *)v25, v27);
  uint64_t v28 = *(void *)v24;
  char v29 = *(unsigned char *)(v24 + 8);
  *(void *)uint64_t v24 = v26;
  *(unsigned char *)(v24 + 8) = v27;
  sub_10018F6D8(v28, v29);
  uint64_t v30 = a3[7];
  uint64_t v31 = a1 + v30;
  uint64_t v32 = a2 + v30;
  *(void *)uint64_t v31 = *(void *)v32;
  *(void *)(v31 + 8) = *(void *)(v32 + 8);
  *(unsigned char *)(v31 + 16) = *(unsigned char *)(v32 + 16);
  *(void *)(v31 + 24) = *(void *)(v32 + 24);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_100066FA8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t KeyPath = swift_getKeyPath();
  char v5 = sub_100067044();
  sub_10017DF08(&qword_100EA1E28);
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v6 + 16))(a2, a1);
  uint64_t result = sub_10017DF08(&qword_100EA1E30);
  uint64_t v8 = a2 + *(int *)(result + 36);
  *(void *)uint64_t v8 = KeyPath;
  *(unsigned char *)(v8 + 8) = v5 & 1;
  return result;
}

uint64_t sub_100067044()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for ContentSizeCategory();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = &v22[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v4);
  uint64_t v8 = &v22[-v7];
  type metadata accessor for DetermineWhetherLocationContentWantsGridViewModifier(0);
  sub_10014E6E8();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v3 + 16))(v6, v8, v2);
  int v9 = (*(uint64_t (**)(unsigned char *, uint64_t))(v3 + 88))(v6, v2);
  if (v9 == enum case for ContentSizeCategory.extraSmall(_:)
    || v9 == enum case for ContentSizeCategory.small(_:)
    || v9 == enum case for ContentSizeCategory.medium(_:)
    || v9 == enum case for ContentSizeCategory.large(_:)
    || v9 == enum case for ContentSizeCategory.extraLarge(_:)
    || v9 == enum case for ContentSizeCategory.extraExtraLarge(_:)
    || v9 == enum case for ContentSizeCategory.extraExtraExtraLarge(_:))
  {
    (*(void (**)(unsigned char *, uint64_t))(v3 + 8))(v8, v2);
  }
  else
  {
    uint64_t v16 = *(void (**)(unsigned char *, uint64_t))(v3 + 8);
    if (v9 == enum case for ContentSizeCategory.accessibilityMedium(_:)
      || v9 == enum case for ContentSizeCategory.accessibilityLarge(_:)
      || v9 == enum case for ContentSizeCategory.accessibilityExtraLarge(_:)
      || v9 == enum case for ContentSizeCategory.accessibilityExtraExtraLarge(_:)
      || v9 == enum case for ContentSizeCategory.accessibilityExtraExtraExtraLarge(_:))
    {
      v16(v8, v2);
      return 0;
    }
    v16(v6, v2);
    v16(v8, v2);
  }
  memcpy(__dst, v1, 0x49uLL);
  sub_1001BEAB0((uint64_t)__dst);
  sub_1001BEAF4();
  sub_1001BEAB0((uint64_t)__dst);
  if (v22[56]) {
    return 1;
  }
  if (qword_100E628F0 != -1) {
    swift_once();
  }
  return byte_100EA1308;
}

uint64_t type metadata accessor for DetermineWhetherLocationContentWantsGridViewModifier(uint64_t a1)
{
  return sub_10018678C(a1, qword_100EA1940);
}

uint64_t sub_10006734C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _OWORD v5[3] = a4;
  void v5[4] = a5;
  uint64_t v6 = type metadata accessor for Session.Kind();
  v5[5] = v6;
  v5[6] = *(void *)(v6 - 8);
  v5[7] = swift_task_alloc();
  sub_10017DF08(&qword_100E76D38);
  v5[8] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for Locale.Language();
  v5[9] = v7;
  v5[10] = *(void *)(v7 - 8);
  v5[11] = swift_task_alloc();
  v5[12] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for Locale();
  v5[13] = v8;
  v5[14] = *(void *)(v8 - 8);
  v5[15] = swift_task_alloc();
  v5[16] = swift_task_alloc();
  sub_10017DF08(&qword_100E63DC0);
  v5[17] = swift_task_alloc();
  uint64_t LaunchEventData = type metadata accessor for FirstLaunchEventData();
  v5[18] = LaunchEventData;
  uint64_t v10 = *(void *)(LaunchEventData - 8);
  v5[19] = v10;
  v5[20] = *(void *)(v10 + 64);
  v5[21] = swift_task_alloc();
  v5[22] = swift_task_alloc();
  uint64_t v11 = type metadata accessor for DeviceInfo();
  v5[23] = v11;
  unsigned char v5[24] = *(void *)(v11 - 8);
  v5[25] = swift_task_alloc();
  sub_10017DF08(&qword_100E6D1D8);
  v5[26] = swift_task_alloc();
  uint64_t v12 = type metadata accessor for TimeZone();
  v5[27] = v12;
  v5[28] = *(void *)(v12 - 8);
  v5[29] = swift_task_alloc();
  v5[30] = swift_task_alloc();
  uint64_t active = type metadata accessor for ActiveUserStatus();
  v5[31] = active;
  v5[32] = *(void *)(active - 8);
  v5[33] = swift_task_alloc();
  uint64_t v14 = type metadata accessor for Date();
  v5[34] = v14;
  v5[35] = *(void *)(v14 - 8);
  v5[36] = swift_task_alloc();
  v5[37] = swift_task_alloc();
  v5[38] = swift_task_alloc();
  uint64_t v15 = type metadata accessor for Logger();
  v5[39] = v15;
  unsigned char v5[40] = *(void *)(v15 - 8);
  v5[41] = swift_task_alloc();
  v5[42] = swift_task_alloc();
  v5[43] = swift_task_alloc();
  return _swift_task_switch(sub_100048CC4, 0, 0);
}

uint64_t sub_1000677FC()
{
  uint64_t v0 = type metadata accessor for Container.TestSuite();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  ProxyContainer.public.getter();
  sub_10017DF08(&qword_100E96450);
  sub_100179D0C();
  swift_release();
  swift_release();
  ProxyContainer.public.getter();
  sub_10017DF08(&qword_100E96458);
  sub_100179D0C();
  swift_release();
  swift_release();
  ProxyContainer.public.getter();
  sub_10017DF08(&qword_100E8DE68);
  sub_100179D0C();
  swift_release();
  swift_release();
  ProxyContainer.public.getter();
  sub_10017DF08(&qword_100E8DE58);
  sub_100179D0C();
  swift_release();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for Container.TestSuite.performance(_:), v0);
  Definition.whenTesting(_:_:)();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  ProxyContainer.private.getter();
  RegistrationContainer.lazy(block:)();
  return swift_release();
}

uint64_t sub_100067A38(uint64_t a1, uint64_t a2, int *a3)
{
  if (a1 != a2)
  {
    sub_100178110(a1, &qword_100E63BD0);
    sub_10017DF08(&qword_100E63BD0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = *(void *)(a2 + 8);
      *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
      *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
      *(unsigned char *)(a1 + 18) = *(unsigned char *)(a2 + 18);
      uint64_t v6 = *(int *)(type metadata accessor for DisplayMetrics() + 36);
      uint64_t v7 = a1 + v6;
      uint64_t v8 = a2 + v6;
      uint64_t v9 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
    }
    else
    {
      *(void *)a1 = *(void *)a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v10 = a3[5];
    uint64_t v11 = (void *)(a1 + v10);
    uint64_t v12 = (void *)(a2 + v10);
    sub_100178110(a1 + v10, (uint64_t *)&unk_100EAA560);
    sub_10017DF08((uint64_t *)&unk_100EAA560);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v13 = type metadata accessor for UserInterfaceSizeClass();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v12, 1, v13))
      {
        uint64_t v14 = sub_10017DF08(&qword_100E65ED8);
        memcpy(v11, v12, *(void *)(*(void *)(v14 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v11, 0, 1, v13);
      }
    }
    else
    {
      *uint64_t v11 = *v12;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v15 = a3[6];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = *(void *)v17;
  char v19 = *(unsigned char *)(v17 + 8);
  sub_100195B7C(*(void *)v17, v19);
  uint64_t v20 = *(void *)v16;
  char v21 = *(unsigned char *)(v16 + 8);
  *(void *)uint64_t v16 = v18;
  *(unsigned char *)(v16 + 8) = v19;
  sub_10018F6D8(v20, v21);
  uint64_t v22 = a3[7];
  uint64_t v23 = a1 + v22;
  uint64_t v24 = a2 + v22;
  uint64_t v25 = *(void *)v24;
  char v26 = *(unsigned char *)(v24 + 8);
  sub_100195B7C(*(void *)v24, v26);
  uint64_t v27 = *(void *)v23;
  char v28 = *(unsigned char *)(v23 + 8);
  *(void *)uint64_t v23 = v25;
  *(unsigned char *)(v23 + 8) = v26;
  sub_10018F6D8(v27, v28);
  if (a1 != a2)
  {
    uint64_t v29 = a3[8];
    uint64_t v30 = (void *)(a1 + v29);
    uint64_t v31 = (void *)(a2 + v29);
    sub_100178110(a1 + v29, &qword_100E63BC8);
    sub_10017DF08(&qword_100E63BC8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v32 = type metadata accessor for ContentSizeCategory();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v32 - 8) + 16))(v30, v31, v32);
    }
    else
    {
      *uint64_t v30 = *v31;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v33 = a3[9];
    int v34 = (void *)(a1 + v33);
    uint64_t v35 = (void *)(a2 + v33);
    sub_100178110(a1 + v33, (uint64_t *)&unk_100EAA560);
    sub_10017DF08((uint64_t *)&unk_100EAA560);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v36 = type metadata accessor for UserInterfaceSizeClass();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v35, 1, v36))
      {
        uint64_t v37 = sub_10017DF08(&qword_100E65ED8);
        memcpy(v34, v35, *(void *)(*(void *)(v37 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v36 - 8) + 16))(v34, v35, v36);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v34, 0, 1, v36);
      }
    }
    else
    {
      void *v34 = *v35;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v38 = a3[10];
  uint64_t v39 = a1 + v38;
  uint64_t v40 = (uint64_t *)(a2 + v38);
  uint64_t v41 = *v40;
  uint64_t v42 = v40[1];
  char v43 = *((unsigned char *)v40 + 16);
  sub_100195B88();
  *(void *)uint64_t v39 = v41;
  *(void *)(v39 + 8) = v42;
  *(unsigned char *)(v39 + 16) = v43;
  sub_10018F6E4();
  return a1;
}

uint64_t sub_100067EA4@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  type metadata accessor for LocationComponentViewModel();
  sub_100162E4C();
  __chkstk_darwin(v5);
  sub_1001626E0();
  uint64_t v8 = v7 - v6;
  type metadata accessor for LocationComponentHeaderViewModel(0);
  sub_100162E4C();
  __chkstk_darwin(v9);
  sub_10012B938();
  uint64_t v10 = sub_10017DF08(&qword_100E65250);
  __chkstk_darwin(v10 - 8);
  sub_1001626E0();
  uint64_t v13 = v12 - v11;
  uint64_t v14 = type metadata accessor for DailyForecastComponentViewModel(0);
  __chkstk_darwin(v14 - 8);
  sub_1001626E0();
  uint64_t v17 = (void *)(v16 - v15);
  uint64_t v18 = *(void *)(a1 + *(int *)(type metadata accessor for DailyForecastComponent() + 20));
  swift_bridgeObjectRetain();
  CurrentWeather.temperature.getter();
  sub_1001418B0(v18, v13, v17);
  *(void *)uint64_t v2 = sub_10002F4D8(v18);
  *(void *)(v2 + 8) = v19;
  *(void *)(v2 + 16) = 0x7261646E656C6163;
  *(void *)(v2 + 24) = 0xE800000000000000;
  *(unsigned char *)(v2 + 32) = 0;
  *(void *)(v2 + 40) = 0;
  *(void *)(v2 + 48) = 0;
  swift_storeEnumTagMultiPayload();
  sub_100219A04((uint64_t)v17, v8);
  swift_storeEnumTagMultiPayload();
  unsigned __int8 v20 = static Edge.Set.leading.getter();
  unsigned __int8 v21 = static Edge.Set.trailing.getter();
  char v22 = Edge.Set.init(rawValue:)();
  Edge.Set.init(rawValue:)();
  if (Edge.Set.init(rawValue:)() != v20) {
    char v22 = Edge.Set.init(rawValue:)();
  }
  Edge.Set.init(rawValue:)();
  if (Edge.Set.init(rawValue:)() != v21) {
    char v22 = Edge.Set.init(rawValue:)();
  }
  sub_1002199A8((uint64_t)v17);
  uint64_t v23 = (int *)type metadata accessor for LocationComponentContainerViewModel();
  uint64_t v24 = a2 + v23[7];
  uint64_t v25 = *(int *)(sub_10017DF08(&qword_100E66488) + 48);
  type metadata accessor for TemperatureChartKind();
  sub_100162E4C();
  uint64_t v26 = sub_10017A2CC();
  v27(v26);
  type metadata accessor for DetailCondition();
  sub_100162E4C();
  uint64_t v28 = sub_10017A2CC();
  v29(v28);
  *(unsigned char *)(v24 + v25) = 1;
  uint64_t v30 = type metadata accessor for LocationComponentAction(0);
  swift_storeEnumTagMultiPayload();
  _s7Weather24LocationCompositionStateOwst_0(v24, 0, 1, v30);
  sub_1001FDC3C(v2, a2, (void (*)(void))type metadata accessor for LocationComponentHeaderViewModel);
  uint64_t result = sub_1001FDC3C(v8, a2 + v23[5], (void (*)(void))type metadata accessor for LocationComponentViewModel);
  uint64_t v32 = (unsigned char *)(a2 + v23[6]);
  *uint64_t v32 = v22;
  v32[1] = 0;
  return result;
}

uint64_t sub_1000681E8(uint64_t a1)
{
  swift_bridgeObjectRelease();
  uint64_t v2 = (int *)type metadata accessor for WeatherData(0);
  uint64_t v3 = a1 + v2[5];
  uint64_t v4 = type metadata accessor for Locale();
  if (!_s7Weather24LocationCompositionStateOwet_0(v3, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  }
  uint64_t v5 = a1 + v2[6];
  uint64_t v6 = type metadata accessor for WeatherDataModel();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + v2[7];
  uint64_t v8 = sub_10017DF08(&qword_100E63738);
  if (!_s7Weather24LocationCompositionStateOwet_0(v7, 1, v8))
  {
    uint64_t v9 = type metadata accessor for Date();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v7, v9);
  }
  uint64_t v10 = a1 + v2[8];
  type metadata accessor for WeatherData.WeatherStatisticsState(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v12 = type metadata accessor for WeatherStatisticsModel();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v10, v12);
  }
  else if (!EnumCaseMultiPayload)
  {
    swift_bridgeObjectRelease();
  }
  uint64_t v13 = a1 + v2[9];
  uint64_t v14 = type metadata accessor for WeatherDataOverrides();
  uint64_t result = _s7Weather24LocationCompositionStateOwet_0(v13, 1, v14);
  if (!result)
  {
    uint64_t v16 = type metadata accessor for Date();
    if (!_s7Weather24LocationCompositionStateOwet_0(v13, 1, v16)) {
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v13, v16);
    }
    uint64_t v17 = v13 + *(int *)(v14 + 20);
    uint64_t result = _s7Weather24LocationCompositionStateOwet_0(v17, 1, v16);
    if (!result)
    {
      uint64_t v18 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8);
      return v18(v17, v16);
    }
  }
  return result;
}

uint64_t sub_100068468(void *a1)
{
  uint64_t v2 = type metadata accessor for WeatherServiceCaching();
  __chkstk_darwin(v2 - 8);
  uint64_t v3 = sub_10017DF08(&qword_100E98138);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = &v15[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  type metadata accessor for WeatherAQIScaleCacheManager();
  static WeatherAQIScaleCacheManager.shared.getter();
  sub_1001B1E64(a1, a1[3]);
  uint64_t v6 = type metadata accessor for WDSEndpoint();
  dispatch thunk of ResolverType.resolve<A>(_:)();
  uint64_t result = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v5, 1, v6);
  if (result == 1)
  {
    __break(1u);
    goto LABEL_12;
  }
  sub_1001B1E64(a1, a1[3]);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:name:)();
  if (LOBYTE(v22[0]) == 2)
  {
LABEL_12:
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (v22[0]) {
    static WeatherServiceCaching.disabled.getter();
  }
  else {
    static WeatherServiceCaching.enabled.getter();
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E98150);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  uint64_t v8 = v23;
  if (!v23) {
    goto LABEL_13;
  }
  uint64_t v9 = sub_1001B1E64(v22, v23);
  v21[3] = v8;
  uint64_t v10 = sub_100170694(v21);
  (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v8 - 8) + 16))(v10, v9, v8);
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E980E0);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  uint64_t v11 = v20;
  if (!v20)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v12 = sub_1001B1E64(v19, v20);
  void v18[3] = v11;
  uint64_t v13 = sub_100170694(v18);
  (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v11 - 8) + 16))(v13, v12, v11);
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E980D0);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v17)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E98158);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v16)
  {
    type metadata accessor for WeatherService();
    swift_allocObject();
    uint64_t v14 = WeatherService.init(scaleCacheManager:endpoint:caching:networkMonitor:authenticator:fetchOptionsProvider:serviceConfigurationProvider:)();
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v19);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v22);
    return v14;
  }
LABEL_16:
  __break(1u);
  return result;
}

void sub_1000687FC()
{
  uint64_t v26 = _swiftEmptyArrayStorage;
  sub_1001EA6A0(0, 2, 0);
  char v0 = 0;
  uint64_t v1 = 0;
  do
  {
    char v2 = v0;
    char v3 = *((unsigned char *)&off_100E07C10 + v1 + 32);
    uint64_t v24 = 9;
    unint64_t v25 = 0xE100000000000000;
    v4._uint64_t countAndFlagsBits = StaticString.description.getter();
    String.append(_:)(v4);
    swift_bridgeObjectRelease();
    v5._uint64_t countAndFlagsBits = 8250;
    v5._object = (void *)0xE200000000000000;
    String.append(_:)(v5);
    v23[3] = (uint64_t)&type metadata for WeatherFeatureFlags;
    unsigned char v23[4] = sub_100068B7C();
    LOBYTE(v23[0]) = v3;
    char v6 = isFeatureEnabled(_:)();
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v23);
    if (v6) {
      uint64_t v7 = 1702195828;
    }
    else {
      uint64_t v7 = 0x65736C6166;
    }
    if (v6) {
      unint64_t v8 = 0xE400000000000000;
    }
    else {
      unint64_t v8 = 0xE500000000000000;
    }
    unint64_t v9 = v8;
    String.append(_:)(*(Swift::String *)&v7);
    swift_bridgeObjectRelease();
    uint64_t v10 = v24;
    unint64_t v11 = v25;
    uint64_t v12 = (uint64_t)v26;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1001EA6A0(0, *(void *)(v12 + 16) + 1, 1);
      uint64_t v12 = (uint64_t)v26;
    }
    unint64_t v14 = *(void *)(v12 + 16);
    unint64_t v13 = *(void *)(v12 + 24);
    if (v14 >= v13 >> 1)
    {
      sub_1001EA6A0(v13 > 1, v14 + 1, 1);
      uint64_t v12 = (uint64_t)v26;
    }
    *(void *)(v12 + 16) = v14 + 1;
    uint64_t v15 = v12 + 16 * v14;
    *(void *)(v15 + 32) = v10;
    *(void *)(v15 + 40) = v11;
    char v0 = 1;
    uint64_t v1 = &_mh_execute_header.magic + 1;
  }
  while ((v2 & 1) == 0);
  v23[0] = v12;
  sub_10017DF08(&qword_100E91BC0);
  sub_1001246C8((unint64_t *)&qword_100E73CB0, &qword_100E91BC0);
  uint64_t v16 = BidirectionalCollection<>.joined(separator:)();
  unint64_t v18 = v17;
  swift_release();
  if (qword_100E62890 != -1) {
    swift_once();
  }
  uint64_t v19 = type metadata accessor for Logger();
  sub_1002102B0(v19, (uint64_t)qword_100F520B8);
  swift_bridgeObjectRetain();
  uint64_t v20 = Logger.logObject.getter();
  os_log_type_t v21 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v20, v21))
  {
    char v22 = (uint8_t *)swift_slowAlloc();
    v23[0] = swift_slowAlloc();
    *(_DWORD *)char v22 = 136315138;
    swift_bridgeObjectRetain();
    uint64_t v24 = sub_10016414C(v16, v18, v23);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v20, v21, "Weather feature enablement states:\n%s", v22, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
}

unint64_t sub_100068B7C()
{
  unint64_t result = qword_100E92DA8;
  if (!qword_100E92DA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E92DA8);
  }
  return result;
}

void sub_100068BC8()
{
  if (qword_100E62800 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for Logger();
  sub_1002102B0(v0, (uint64_t)qword_100F51F08);
  swift_retain_n();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = swift_slowAlloc();
    uint64_t v11 = swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 136446722;
    NWActivity.domain.getter();
    uint64_t v4 = dispatch thunk of CustomStringConvertible.description.getter();
    sub_10016414C(v4, v5, &v11);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v3 + 12) = 2082;
    NWActivity.label.getter();
    uint64_t v6 = dispatch thunk of CustomStringConvertible.description.getter();
    sub_10016414C(v6, v7, &v11);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v3 + 22) = 2082;
    uint64_t v8 = NWActivity.parentActivity.getter();
    swift_release();
    if (v8) {
      uint64_t v9 = 7562617;
    }
    else {
      uint64_t v9 = 28526;
    }
    if (v8) {
      unint64_t v10 = 0xE300000000000000;
    }
    else {
      unint64_t v10 = 0xE200000000000000;
    }
    sub_10016414C(v9, v10, &v11);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Activating parent network activity. domain=%{public}s, label=%{public}s, hasParent=%{public}s", (uint8_t *)v3, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  NWActivity.activate()();
}

uint64_t sub_100068E88()
{
  sub_100109790();
  uint64_t v1 = v0;
  unint64_t v7 = (uint64_t (*)(uint64_t))((char *)v2 + *v2);
  uint64_t v3 = swift_task_alloc();
  uint64_t v4 = (void *)sub_100162FCC(v3);
  *uint64_t v4 = v5;
  v4[1] = sub_100076C20;
  return v7(v1);
}

uint64_t sub_100068F58(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v3 = sub_10018C470();
  v4(v3);
  uint64_t v5 = sub_10017F930();

  return a3(v5);
}

uint64_t sub_100068FD8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = static VerticalAlignment.center.getter();
  *(void *)(a2 + 8) = 0;
  *(unsigned char *)(a2 + 16) = 0;
  uint64_t v4 = sub_10017DF08(&qword_100E7DF38);
  return sub_100147EA4(a1, a2 + *(int *)(v4 + 44));
}

uint64_t sub_100069024@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 24);
  uint64_t v5 = type metadata accessor for WireframeScrollInterestView();
  sub_1001627C0(v5);
  uint64_t v7 = v1 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));

  return sub_10011F790(v7, v3, v4, a1);
}

uint64_t sub_1000690A0(uint64_t a1)
{
  uint64_t v3 = sub_10017DF08(&qword_100EAA930);
  uint64_t v4 = sub_100109308(v3);
  __chkstk_darwin(v4);
  sub_10012B938();
  sub_10006DF38(a1, v1, &qword_100EAA930);
  return sub_100069120(v1);
}

uint64_t sub_100069120(uint64_t a1)
{
  return sub_1000F334C(a1, &qword_100EAA930, (void (*)(uint64_t))sub_1000F35D4);
}

uint64_t sub_100069148(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  v15[0] = a4;
  v15[1] = a1;
  uint64_t v17 = a2;
  uint64_t v16 = type metadata accessor for PrivacyConfiguration();
  uint64_t v5 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v7 = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for AppConfiguration();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for SettingReader();
  static SettingReader.shared.getter();
  static Settings.WeatherAnalytics.Debugging.sendAppSessionStartAndEventsForNonDnuUsers.getter();
  SettingReader.read<A>(_:)();
  swift_release();
  swift_release();
  char v12 = v18;
  sub_1001B1E64(a3, a3[3]);
  dispatch thunk of AppConfigurationManagerType.appConfiguration.getter();
  AppConfiguration.privacy.getter();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  char v13 = PrivacyConfiguration.allowAppSessionEventForNonDNUUsers.getter();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v16);
  uint64_t result = 1;
  if ((v12 & 1) == 0 && (v13 & 1) == 0) {
    uint64_t result = AccessTracker.diagnosticSubmissionAllowed.getter();
  }
  switch(v17)
  {
    case 0:
    case 3:
      return result;
    case 1:
      if (result)
      {
        type metadata accessor for AppSessionStartEvent();
        sub_1000EDE3C(&qword_100E76C68, (void (*)(uint64_t))&type metadata accessor for AppSessionStartEvent);
        long long v18 = 0u;
        long long v19 = 0u;
        AccessTracker.submit<A>(_:onlyIfTimed:userInfo:completion:)();
        sub_100178110((uint64_t)&v18, &qword_100EAC3D0);
        type metadata accessor for AppSessionEndEvent();
        sub_1000EDE3C(&qword_100E76C60, (void (*)(uint64_t))&type metadata accessor for AppSessionEndEvent);
        AccessTracker.time<A>(_:submitAndRestartWithSession:)();
        uint64_t result = sub_100049DE8();
      }
      break;
    case 2:
      if (result)
      {
        type metadata accessor for AppSessionEndEvent();
        long long v18 = 0u;
        long long v19 = 0u;
        sub_1000EDE3C(&qword_100E76C60, (void (*)(uint64_t))&type metadata accessor for AppSessionEndEvent);
        swift_retain();
        AccessTracker.submit<A>(_:onlyIfTimed:userInfo:completion:)();
        swift_release();
        uint64_t result = sub_100178110((uint64_t)&v18, &qword_100EAC3D0);
      }
      else
      {
        type metadata accessor for ReferralData();
        sub_1000EDE3C(&qword_100E76C58, (void (*)(uint64_t))&type metadata accessor for ReferralData);
        uint64_t result = AccessTracker.clearStack<A>(of:includeParentTrackers:)();
      }
      break;
    default:
      uint64_t result = _assertionFailure(_:_:file:line:flags:)();
      __break(1u);
      break;
  }
  return result;
}

uint64_t sub_1000695AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v33 = a1;
  uint64_t v38 = a2;
  uint64_t v3 = type metadata accessor for HighLowModifier(0);
  uint64_t v35 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v36 = v4;
  uint64_t v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = sub_10017DF08(&qword_100E64510);
  __chkstk_darwin(v31);
  uint64_t v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = sub_10017DF08(&qword_100E64518);
  __chkstk_darwin(v32);
  uint64_t v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = sub_10017DF08(&qword_100E64520);
  __chkstk_darwin(v34);
  uint64_t v37 = (uint64_t)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for LocationHeaderViewMeasurements(0);
  uint64_t v12 = v11 - 8;
  __chkstk_darwin(v11);
  unint64_t v14 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  sub_1000E71B8();
  swift_release();
  sub_1000E72E0();
  swift_release();
  sub_1000E72AC();
  swift_retain();
  sub_1000E71B8();
  swift_release();
  sub_1000E7380();
  swift_release();
  sub_1000E71D0((uint64_t *)&v14[*(int *)(v12 + 40)]);
  sub_10014CC74((uint64_t)v14, (void (*)(void))type metadata accessor for LocationHeaderViewMeasurements);
  double v15 = 1.0;
  int v16 = *(unsigned __int8 *)(v2 + *(int *)(v3 + 24));
  double v17 = 1.0;
  if (v16 == 1)
  {
    long long v18 = (uint64_t *)(v2 + *(int *)(v3 + 40));
    uint64_t v19 = *v18;
    uint64_t v20 = v18[1];
    uint64_t v39 = v19;
    uint64_t v40 = v20;
    sub_10017DF08(&qword_100E64490);
    State.wrappedValue.getter();
    double v17 = v41;
  }
  uint64_t v21 = sub_10017DF08(&qword_100E64528);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v21 - 8) + 16))(v7, v33, v21);
  char v22 = (double *)&v7[*(int *)(v31 + 36)];
  *char v22 = 0.0;
  v22[1] = v17;
  if (v16)
  {
    CGFloat.clamp(min:max:)();
    double v15 = v23;
  }
  sub_10006DF38((uint64_t)v7, (uint64_t)v9, &qword_100E64510);
  *(double *)&v9[*(int *)(v32 + 36)] = v15;
  sub_100178110((uint64_t)v7, &qword_100E64510);
  sub_10014D0EC(v2, (uint64_t)v5, (void (*)(void))type metadata accessor for HighLowModifier);
  unint64_t v24 = (*(unsigned __int8 *)(v35 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80);
  uint64_t v25 = swift_allocObject();
  sub_10014DEEC((uint64_t)v5, v25 + v24, (void (*)(void))type metadata accessor for HighLowModifier);
  sub_10014D0EC(v2, (uint64_t)v5, (void (*)(void))type metadata accessor for HighLowModifier);
  uint64_t v26 = swift_allocObject();
  sub_10014DEEC((uint64_t)v5, v26 + v24, (void (*)(void))type metadata accessor for HighLowModifier);
  uint64_t v27 = v37;
  sub_10006DF38((uint64_t)v9, v37, &qword_100E64518);
  uint64_t v28 = (uint64_t (**)(uint64_t))(v27 + *(int *)(v34 + 36));
  *uint64_t v28 = sub_1002225E8;
  v28[1] = (uint64_t (*)(uint64_t))v25;
  v28[2] = sub_1002225BC;
  void v28[3] = (uint64_t (*)(uint64_t))v26;
  sub_100178110((uint64_t)v9, &qword_100E64518);
  return sub_10024D364(v27, v38, &qword_100E64520);
}

__n128 sub_100069AC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)a2;
  char v6 = *(unsigned char *)(a2 + 8);
  sub_100195B7C(*(void *)a2, v6);
  sub_100149AE8();
  char v8 = v7;
  sub_10018F6D8(v5, v6);
  if (v8)
  {
    if (qword_100E62748 != -1) {
      swift_once();
    }
    uint64_t v9 = &xmmword_100F51D48;
  }
  else
  {
    uint64_t v9 = (long long *)(a3 + *(int *)(type metadata accessor for LocationViewGeometry(0) + 28));
  }
  __n128 result = *(__n128 *)((char *)v9 + 8);
  uint64_t v11 = *((void *)v9 + 3);
  *(void *)a1 = *(void *)v9;
  *(__n128 *)(a1 + 8) = result;
  *(void *)(a1 + 24) = v11;
  return result;
}

uint64_t sub_100069B90@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E647D8);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v29)
  {
    __break(1u);
    goto LABEL_8;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E8DD38);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v28)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  sub_1001B1E64(a1, a1[3]);
  type metadata accessor for WireframeLevelInterestManager();
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!result)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v5 = result;
  sub_1001B1E64(a1, a1[3]);
  type metadata accessor for TipCoordinator();
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!result)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  uint64_t v6 = result;
  uint64_t v23 = v30;
  uint64_t v24 = v29;
  uint64_t v25 = a2;
  sub_1001B1E64(a1, a1[3]);
  type metadata accessor for VisibleLocationWeatherLoadMonitor();
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (result)
  {
    uint64_t v7 = result;
    uint64_t v8 = sub_1000DF0C4((uint64_t)v27, v28);
    __n128 v9 = __chkstk_darwin(v8);
    uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, __n128))(v12 + 16))(v11, v9);
    void v26[3] = &type metadata for LocationTracker;
    v26[4] = &off_100E1D6E8;
    v26[0] = swift_allocObject();
    memcpy((void *)(v26[0] + 16), v11, 0x50uLL);
    type metadata accessor for LocationInteractor();
    uint64_t v13 = (void *)swift_allocObject();
    uint64_t v14 = sub_1000DF0C4((uint64_t)v26, (uint64_t)&type metadata for LocationTracker);
    __n128 v15 = __chkstk_darwin(v14);
    double v17 = (char *)&v22 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, __n128))(v18 + 16))(v17, v15);
    v13[7] = &type metadata for LocationTracker;
    v13[8] = &off_100E1D6E8;
    uint64_t v19 = swift_allocObject();
    v13[4] = v19;
    memcpy((void *)(v19 + 16), v17, 0x50uLL);
    uint64_t v20 = v23;
    _OWORD v13[2] = v24;
    void v13[3] = v20;
    v13[9] = v5;
    v13[10] = v6;
    v13[11] = v7;
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v26);
    uint64_t result = _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v27);
    uint64_t v21 = v25;
    *uint64_t v25 = v13;
    v21[1] = &off_100E2BF38;
    return result;
  }
LABEL_11:
  __break(1u);
  return result;
}

uint64_t initializeWithCopy for LocationTracker(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v4 = a2 + 8;
  long long v5 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 32) = v5;
  uint64_t v6 = v5;
  uint64_t v7 = **(void (***)(uint64_t, uint64_t, uint64_t))(v5 - 8);
  swift_retain();
  v7(a1 + 8, v4, v6);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  uint64_t v8 = *(void *)(a2 + 72);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(void *)(a1 + 72) = v8;
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_100069FC0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_10006A008();
  *a1 = result & 1;
  a1[1] = BYTE1(result) & 1;
  a1[2] = BYTE2(result) & 1;
  a1[3] = BYTE3(result) & 1;
  return result;
}

uint64_t sub_10006A008()
{
  sub_10019BF90();
  EnvironmentValues.subscript.getter();
  if (v7) {
    int v0 = 0x1000000;
  }
  else {
    int v0 = 0;
  }
  if (v6) {
    int v1 = 0x10000;
  }
  else {
    int v1 = 0;
  }
  if (v5) {
    int v2 = 256;
  }
  else {
    int v2 = 0;
  }
  return v2 | v4 | v1 | v0;
}

uint64_t assignWithTake for ContentStatusBannerViewStyle(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  swift_release();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_release();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  return a1;
}

uint64_t sub_10006A0E0()
{
  return UIViewRepresentable.sizeThatFits(_:uiView:context:)();
}

uint64_t initializeWithCopy for LocationHeaderViewGradientBackgroundViewModifier(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  long long v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  uint64_t v4 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v4;
  swift_retain();
  return a1;
}

uint64_t sub_10006A15C()
{
  uint64_t v1 = v0[26];
  uint64_t v2 = v0[27];
  TimeZone.init(secondsFromGMT:)();
  uint64_t v3 = _s7Weather24LocationCompositionStateOwet_0(v1, 1, v2);
  if (v3 == 1) {
    goto LABEL_34;
  }
  uint64_t v6 = v0[30];
  uint64_t v7 = v0[27];
  uint64_t v8 = v0[28];
  (*(void (**)(uint64_t, void, uint64_t))(v8 + 32))(v6, v0[26], v7);
  Date.startOfDay(timeZone:)();
  __n128 v9 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
  v9(v6, v7);
  if (ActiveUserStatus.isFirstLaunchOfDay(now:)())
  {
    sub_1008122B4();
    static DeviceInfo.current.getter();
    type metadata accessor for Capabilities();
    if (static Capabilities.isInternalBuild()()) {
      unsigned int v10 = 1;
    }
    else {
      unsigned int v10 = [self isSeedBuild];
    }
    uint64_t v3 = Date.timeIntervalSince1970.getter();
    double v22 = v21 * 1000.0;
    if ((~COERCE__INT64(v21 * 1000.0) & 0x7FF0000000000000) != 0)
    {
      if (v22 > -9.22337204e18)
      {
        if (v22 < 9.22337204e18)
        {
          unsigned int v76 = v10;
          uint64_t v23 = v0[36];
          uint64_t v24 = v0[34];
          uint64_t v25 = v0[35];
          uint64_t v26 = v0[29];
          uint64_t v77 = v0[27];
          uint64_t v79 = (void (*)(uint64_t, uint64_t))v0[44];
          ActiveUserStatus.isFirstLaunchOfMonth(now:)();
          SessionManager.tracker.getter();
          Tracker.diagnosticSubmissionAllowed.getter();
          swift_release();
          static TimeZone.current.getter();
          Date.init()();
          uint64_t v27 = TimeZone.secondsFromGMT(for:)();
          v0[47] = (v25 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
          v79(v23, v24);
          uint64_t v3 = ((uint64_t (*)(uint64_t, uint64_t))v9)(v26, v77);
          if (v27 >= (uint64_t)0xFFFFFFFF80000000)
          {
            if (v27 <= 0x7FFFFFFF)
            {
              uint64_t v28 = v0[17];
              uint64_t v29 = v0[10];
              static Locale.current.getter();
              Locale.language.getter();
              uint64_t v30 = sub_100127A9C();
              uint64_t v78 = v31;
              v31(v30);
              Locale.Language.languageCode.getter();
              uint64_t v32 = *(void (**)(uint64_t))(v29 + 8);
              uint64_t v33 = sub_100189444();
              v32(v33);
              uint64_t v34 = type metadata accessor for Locale.LanguageCode();
              int v35 = _s7Weather24LocationCompositionStateOwet_0(v28, 1, v34);
              uint64_t v36 = v0[17];
              if (v35 == 1)
              {
                sub_100178254(v36, &qword_100E63DC0);
              }
              else
              {
                Locale.LanguageCode.identifier.getter();
                sub_100162880();
                (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v36, v34);
              }
              uint64_t v38 = v0[8];
              static Locale.current.getter();
              Locale.language.getter();
              uint64_t v39 = sub_100127A9C();
              v78(v39);
              Locale.Language.region.getter();
              uint64_t v40 = sub_100189444();
              v32(v40);
              uint64_t v41 = type metadata accessor for Locale.Region();
              int v42 = _s7Weather24LocationCompositionStateOwet_0(v38, 1, v41);
              uint64_t v43 = v0[8];
              if (v42 == 1)
              {
                sub_100178254(v0[8], &qword_100E76D38);
              }
              else
              {
                Locale.Region.identifier.getter();
                sub_100162880();
                (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v43, v41);
              }
              DeviceInfo.productVersion.getter();
              if (v76) {
                DeviceInfo.buildVersion.getter();
              }
              swift_bridgeObjectRetain();
              FirstLaunchEventData.init(eventID:date:isFirstLaunchOfMonth:isDnu:utcOffset:languageCode:countryCode:osVersion:osBuild:)();
              static Logger.activeUser.getter();
              uint64_t v45 = Logger.logObject.getter();
              os_log_type_t v46 = static os_log_type_t.default.getter();
              if (os_log_type_enabled(v45, v46))
              {
                *(_WORD *)swift_slowAlloc() = 0;
                sub_100162FF8((void *)&_mh_execute_header, v47, v48, "Submitting first launch event");
                sub_100185A34();
              }
              uint64_t v74 = v0[21];
              uint64_t v75 = v0[22];
              uint64_t v49 = v0[19];
              uint64_t v73 = v0[18];
              uint64_t v51 = v0[6];
              uint64_t v50 = v0[7];
              uint64_t v52 = v45;
              uint64_t v53 = (void *)v0[4];
              uint64_t v54 = v0[5];

              sub_100127BA4();
              v61(v55, v56, v57, v58, v59, v60);
              (*(void (**)(uint64_t, void, uint64_t))(v51 + 104))(v50, enum case for Session.Kind.userEvents(_:), v54);
              Date.init()();
              SessionManager.start(for:identifier:startDate:timestampJitter:)();
              swift_bridgeObjectRelease();
              uint64_t v62 = sub_10017E9B4();
              v63(v62);
              uint64_t v64 = sub_1001D1E18();
              v65(v64);
              SessionManager.tracker.getter();
              (*(void (**)(uint64_t, uint64_t, uint64_t))(v49 + 16))(v74, v75, v73);
              unint64_t v66 = (*(unsigned __int8 *)(v49 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v49 + 80);
              uint64_t v67 = swift_allocObject();
              (*(void (**)(unint64_t, uint64_t, uint64_t))(v49 + 32))(v67 + v66, v74, v73);
              Tracker.transaction(block:)();
              swift_release();
              swift_release();
              Date.init()();
              sub_100127A5C();
              SessionManager.end(endDate:completion:)();
              uint64_t v68 = sub_10017E9B4();
              v69(v68);
              uint64_t v70 = v53[5];
              uint64_t v71 = v53[6];
              sub_1001B1E64(v53 + 2, v70);
              uint64_t v72 = (void *)swift_task_alloc();
              v0[48] = v72;
              *uint64_t v72 = v0;
              v72[1] = sub_100812044;
              uint64_t v3 = v0[37];
              uint64_t v4 = v70;
              uint64_t v5 = v71;
              return dispatch thunk of ActiveUserServiceType.updateLastLaunchDate(to:)(v3, v4, v5);
            }
            goto LABEL_33;
          }
LABEL_32:
          __break(1u);
LABEL_33:
          __break(1u);
LABEL_34:
          __break(1u);
          return dispatch thunk of ActiveUserServiceType.updateLastLaunchDate(to:)(v3, v4, v5);
        }
LABEL_31:
        __break(1u);
        goto LABEL_32;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_31;
  }
  static Logger.activeUser.getter();
  uint64_t v11 = Logger.logObject.getter();
  os_log_type_t v12 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v11, v12))
  {
    *(_WORD *)swift_slowAlloc() = 0;
    sub_100162FF8((void *)&_mh_execute_header, v13, v14, "Already launched today - returning");
    sub_100185A34();
  }
  __n128 v15 = (void (*)(void))v0[45];

  sub_100127BA4();
  v15();
  sub_10019F21C();
  sub_100127BA4();
  v16();
  uint64_t v17 = sub_1001A0E5C();
  v18(v17);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v19 = (uint64_t (*)(void))v0[1];
  return v19();
}

uint64_t sub_10006AA18@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for WindComponent();
  memcpy(__dst, (const void *)(a1 + *(int *)(v4 + 20)), sizeof(__dst));
  uint64_t v5 = *(void *)&__dst[8];
  long long v39 = *(_OWORD *)&__dst[16];
  long long v40 = *(_OWORD *)&__dst[32];
  uint64_t v6 = *(void *)&__dst[56];
  uint64_t v7 = *(void *)&__dst[72];
  uint64_t v35 = *(void *)&__dst[64];
  uint64_t v36 = *(void *)__dst;
  long long v41 = *(_OWORD *)&__dst[80];
  long long v42 = *(_OWORD *)&__dst[96];
  uint64_t v8 = *(void *)&__dst[120];
  uint64_t v33 = *(void *)&__dst[112];
  uint64_t v34 = *(void *)&__dst[48];
  long long v43 = *(_OWORD *)&__dst[160];
  long long v44 = *(_OWORD *)&__dst[176];
  uint64_t v9 = *(void *)&__dst[208];
  long long v45 = *(_OWORD *)&__dst[192];
  long long v46 = *(_OWORD *)&__dst[216];
  uint64_t v37 = (int *)type metadata accessor for LocationComponentContainerViewModel();
  uint64_t v10 = a2 + v37[5];
  uint64_t v11 = type metadata accessor for WindComponentViewModel();
  uint64_t v12 = v10 + *(int *)(v11 + 68);
  swift_bridgeObjectRetain();
  sub_10006AD9C((uint64_t)&v39);
  sub_10006AD9C((uint64_t)&v40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_10006AD9C((uint64_t)&v41);
  sub_10006AD9C((uint64_t)&v42);
  swift_bridgeObjectRetain();
  sub_10006AD9C((uint64_t)&v43);
  sub_10006AD9C((uint64_t)&v44);
  sub_10006AD9C((uint64_t)&v45);
  sub_10006AD9C((uint64_t)&v46);
  sub_100076498((uint64_t)__dst, v12);
  sub_10017DF08(&qword_100E952E0);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_100C33BA0;
  long long v14 = v40;
  *(_OWORD *)(v10 + 16) = v39;
  *(_OWORD *)(v10 + 32) = v14;
  long long v15 = v42;
  *(_OWORD *)(v10 + 80) = v41;
  *(_OWORD *)(v10 + 96) = v15;
  long long v16 = v44;
  *(_OWORD *)(v10 + 128) = v43;
  *(_OWORD *)(v10 + 144) = v16;
  long long v17 = v46;
  *(_OWORD *)(v10 + 160) = v45;
  *(void *)(v13 + 32) = v34;
  *(void *)(v13 + 40) = v6;
  *(void *)(v13 + 48) = v36;
  *(void *)(v13 + 56) = v5;
  *(void *)(v13 + 64) = v33;
  *(void *)(v13 + 72) = v8;
  *(void *)(v13 + 80) = v35;
  *(void *)(v13 + 88) = v7;
  uint64_t v18 = *(void *)&__dst[152];
  uint64_t v19 = *(void *)&__dst[128];
  uint64_t v20 = *(void *)&__dst[136];
  *(void *)(v13 + 96) = *(void *)&__dst[144];
  *(void *)(v13 + 104) = v18;
  *(void *)(v13 + 112) = v19;
  *(void *)(v13 + 120) = v20;
  *(void *)uint64_t v10 = v36;
  *(void *)(v10 + 8) = v5;
  *(void *)(v10 + 48) = v34;
  *(void *)(v10 + 56) = v6;
  *(void *)(v10 + 64) = v35;
  *(void *)(v10 + 72) = v7;
  *(void *)(v10 + 112) = v33;
  *(void *)(v10 + 120) = v8;
  *(void *)(v10 + 176) = v9;
  *(_OWORD *)(v10 + 184) = v17;
  *(void *)(v10 + *(int *)(v11 + 72)) = v13;
  double v21 = self;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v22 = [v21 mainBundle];
  sub_100162AD8();
  v47._object = v23;
  v24._uint64_t countAndFlagsBits = 1684957527;
  v24._object = (void *)0xE400000000000000;
  v25._uint64_t countAndFlagsBits = 0;
  v25._object = (void *)0xE000000000000000;
  v47._uint64_t countAndFlagsBits = 0xD000000000000036;
  Swift::String v26 = NSLocalizedString(_:tableName:bundle:value:comment:)(v24, (Swift::String_optional)0, (NSBundle)v22, v25, v47);

  *(Swift::String *)a2 = v26;
  *(void *)(a2 + 16) = 1684957559;
  *(void *)(a2 + 24) = 0xE400000000000000;
  *(unsigned char *)(a2 + 32) = 0;
  type metadata accessor for LocationComponentHeaderViewModel(0);
  *(void *)(a2 + 40) = 0;
  *(void *)(a2 + 48) = 0;
  swift_storeEnumTagMultiPayload();
  type metadata accessor for LocationComponentViewModel();
  swift_storeEnumTagMultiPayload();
  uint64_t v27 = a2 + v37[7];
  uint64_t v28 = *(int *)(sub_10017DF08(&qword_100E66488) + 48);
  uint64_t v29 = enum case for DetailCondition.wind(_:);
  type metadata accessor for DetailCondition();
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v30 + 104))(v27, v29);
  *(unsigned char *)(v27 + v28) = 0;
  uint64_t v31 = type metadata accessor for LocationComponentAction(0);
  swift_storeEnumTagMultiPayload();
  uint64_t result = _s7Weather24LocationCompositionStateOwst_0(v27, 0, 1, v31);
  *(_WORD *)(a2 + v37[6]) = 256;
  return result;
}

uint64_t sub_10006AD9C(uint64_t a1)
{
  return a1;
}

uint64_t sub_10006ADC8(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v31 = a1;
  uint64_t v3 = type metadata accessor for ColorScheme();
  sub_10017C83C();
  uint64_t v5 = v4;
  __chkstk_darwin(v6);
  sub_1001626E0();
  uint64_t v9 = v8 - v7;
  uint64_t v10 = sub_10017DF08(&qword_100EACC60);
  sub_100162E4C();
  __chkstk_darwin(v11);
  sub_1001626E0();
  uint64_t v14 = v13 - v12;
  uint64_t v15 = sub_10017DF08((uint64_t *)&unk_100EAA640);
  sub_100162E4C();
  uint64_t v17 = __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v30 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __chkstk_darwin(v17);
  id v22 = (char *)&v30 - v21;
  a2(v20);
  if (qword_100E62AA8 != -1) {
    swift_once();
  }
  uint64_t v23 = sub_1002102B0(v15, (uint64_t)qword_100F52380);
  uint64_t v24 = v14 + *(int *)(v10 + 48);
  sub_10006DF38((uint64_t)v22, v14, (uint64_t *)&unk_100EAA640);
  sub_10006DF38(v23, v24, (uint64_t *)&unk_100EAA640);
  sub_100179F0C(v14);
  if (v25)
  {
    sub_100179F0C(v24);
    if (v25)
    {
      sub_100178110(v14, (uint64_t *)&unk_100EAA640);
      return sub_100178110((uint64_t)v22, (uint64_t *)&unk_100EAA640);
    }
    goto LABEL_11;
  }
  sub_10006DF38(v14, (uint64_t)v19, (uint64_t *)&unk_100EAA640);
  sub_100179F0C(v24);
  if (v25)
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v19, v3);
LABEL_11:
    sub_100178110(v14, &qword_100EACC60);
    goto LABEL_14;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(v9, v24, v3);
  sub_100A73D0C(&qword_100EACC68, (void (*)(uint64_t))&type metadata accessor for ColorScheme);
  char v26 = dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t v27 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v27(v9, v3);
  v27((uint64_t)v19, v3);
  sub_100178110(v14, (uint64_t *)&unk_100EAA640);
  if (v26) {
    return sub_100178110((uint64_t)v22, (uint64_t *)&unk_100EAA640);
  }
LABEL_14:
  uint64_t v29 = v31;
  sub_100178110(v31, (uint64_t *)&unk_100EAA640);
  return sub_10020E72C((uint64_t)v22, v29, (uint64_t *)&unk_100EAA640);
}

uint64_t destroy for WeatherConditionBackgroundBindingModifierWithVFXBackground(uint64_t a1)
{
  swift_release();
  swift_unknownObjectRelease();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1 + 32);

  return swift_release();
}

uint64_t sub_10006B13C(uint64_t a1, uint64_t a2)
{
  uint64_t v30 = a2;
  uint64_t v3 = sub_10017DF08(&qword_100E6CCE0);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = &v25[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = type metadata accessor for NWActivity.CompletionReason();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = &v25[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_100E62800 != -1) {
    swift_once();
  }
  uint64_t v10 = type metadata accessor for Logger();
  sub_1002102B0(v10, (uint64_t)qword_100F51F08);
  swift_retain_n();
  uint64_t v11 = Logger.logObject.getter();
  os_log_type_t v12 = static os_log_type_t.default.getter();
  int v13 = v12;
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v14 = swift_slowAlloc();
    uint64_t v28 = v6;
    uint64_t v15 = v14;
    uint64_t v27 = swift_slowAlloc();
    uint64_t v32 = v27;
    *(_DWORD *)uint64_t v15 = 136446722;
    uint64_t v29 = v2;
    uint64_t v31 = NWActivity.domain.getter();
    int v26 = v13;
    uint64_t v16 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v31 = sub_10016414C(v16, v17, &v32);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v15 + 12) = 2082;
    uint64_t v31 = NWActivity.label.getter();
    uint64_t v18 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v31 = sub_10016414C(v18, v19, &v32);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v15 + 22) = 2082;
    uint64_t v20 = NWActivity.parentActivity.getter();
    swift_release();
    if (v20) {
      uint64_t v21 = 7562617;
    }
    else {
      uint64_t v21 = 28526;
    }
    if (v20) {
      unint64_t v22 = 0xE300000000000000;
    }
    else {
      unint64_t v22 = 0xE200000000000000;
    }
    uint64_t v31 = sub_10016414C(v21, v22, &v32);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v11, (os_log_type_t)v26, "Completing parent network activity. domain=%{public}s, label=%{public}s, hasParent=%{public}s", (uint8_t *)v15, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v6 = v28;
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  uint64_t v23 = type metadata accessor for NetworkActivityCompletion();
  sub_100230AE0(v30 + *(int *)(v23 + 24), (uint64_t)v5);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v5, 1, v6) == 1)
  {
    (*(void (**)(unsigned char *, void, uint64_t))(v7 + 104))(v9, enum case for NWActivity.CompletionReason.success(_:), v6);
    sub_1001781AC((uint64_t)v5, &qword_100E6CCE0);
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v7 + 32))(v9, v5, v6);
  }
  NWActivity.complete(reason:)();
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_10006B57C()
{
  uint64_t v0 = sub_10018E040();
  v1(v0);
  sub_100179DC0();
  sub_100162F0C();
  v2();
  sub_100127A9C();

  return swift_deallocObject();
}

void sub_10006B5FC(uint64_t a1@<X1>, CGFloat *a2@<X8>)
{
  uint64_t v4 = type metadata accessor for NamedCoordinateSpace();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = &v9[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  CGFloat MinY = 0.0;
  if (*(unsigned char *)(a1 + *(int *)(type metadata accessor for TranslationModifier(0) + 24)) == 1)
  {
    static CoordinateSpaceProtocol<>.scrollView.getter();
    GeometryProxy.bounds(of:)();
    (*(void (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
    sub_10024D364((uint64_t)v9, (uint64_t)&v10, &qword_100E64498);
    if ((v11 & 1) == 0) {
      CGFloat MinY = CGRectGetMinY(v10);
    }
  }
  *a2 = MinY;
}

void sub_10006B734(uint64_t a1)
{
  uint64_t v3 = v1;
  type metadata accessor for DispatchWorkItemFlags();
  sub_100179C0C();
  uint64_t v65 = v5;
  __chkstk_darwin(v6);
  sub_100109314();
  uint64_t v63 = v7;
  uint64_t v64 = type metadata accessor for DispatchQoS();
  sub_100179C0C();
  uint64_t v62 = v8;
  __chkstk_darwin(v9);
  sub_100109314();
  uint64_t v61 = v10;
  uint64_t v11 = type metadata accessor for Location.Identifier();
  sub_100179C0C();
  uint64_t v13 = v12;
  uint64_t v15 = *(void *)(v14 + 64);
  __chkstk_darwin(v16);
  uint64_t v67 = &v54[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v17 = sub_10017DF08(&qword_100E6DD18);
  uint64_t v18 = v17 - 8;
  __chkstk_darwin(v17);
  sub_100162F18();
  uint64_t v19 = sub_10017DF08(&qword_100E6DC08);
  uint64_t v20 = __chkstk_darwin(v19 - 8);
  uint64_t v58 = &v54[-((v21 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v24 = &v54[-v23];
  __chkstk_darwin(v22);
  int v26 = &v54[-v25];
  uint64_t v66 = Location.Identifier.intentIdentifier.getter();
  unint64_t v68 = v27;
  uint64_t v69 = v13;
  uint64_t v60 = a1;
  sub_1001A0C34();
  uint64_t v57 = v28;
  v28();
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v26, 0, 1, v11);
  uint64_t v59 = v3;
  uint64_t v29 = v3 + OBJC_IVAR____TtC7Weather26InteractionDonationManager_previousDonatedLocationIdentifier;
  swift_beginAccess();
  uint64_t v30 = v2 + *(int *)(v18 + 56);
  sub_100111070((uint64_t)v26, v2);
  sub_100111070(v29, v30);
  sub_10017A6D8(v2);
  if (!v31)
  {
    sub_100111070(v2, (uint64_t)v24);
    sub_10017A6D8(v30);
    if (!v31)
    {
      uint64_t v56 = v15;
      uint64_t v32 = v69;
      uint64_t v33 = v67;
      sub_1001A0C34();
      v34();
      sub_100128C74((unint64_t *)&qword_100E63A30, (void (*)(uint64_t))&type metadata accessor for Location.Identifier);
      int v55 = dispatch thunk of static Equatable.== infix(_:_:)();
      uint64_t v35 = *(void (**)(unsigned char *, uint64_t))(v32 + 8);
      v35(v33, v11);
      sub_100178110((uint64_t)v26, &qword_100E6DC08);
      v35(v24, v11);
      sub_100178110(v2, &qword_100E6DC08);
      if (v55) {
        goto LABEL_11;
      }
LABEL_15:
      uint64_t v42 = (uint64_t)v58;
      sub_1001A0C34();
      long long v43 = v57;
      v57();
      _s7Weather24LocationCompositionStateOwst_0(v42, 0, 1, v11);
      swift_beginAccess();
      sub_1000171F8(v42, v29);
      swift_endAccess();
      long long v44 = v67;
      sub_1001A0C34();
      v43();
      uint64_t v45 = v69;
      unint64_t v46 = (*(unsigned __int8 *)(v69 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v69 + 80);
      unint64_t v47 = (v56 + v46 + 7) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v48 = swift_allocObject();
      (*(void (**)(unint64_t, unsigned char *, uint64_t))(v45 + 32))(v48 + v46, v44, v11);
      uint64_t v49 = (void *)(v48 + v47);
      unint64_t v50 = v68;
      *uint64_t v49 = v66;
      v49[1] = v50;
      aBlock[4] = (uint64_t)sub_10021C22C;
      aBlock[5] = v48;
      aBlock[0] = (uint64_t)_NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = (uint64_t)sub_10010A4D4;
      void aBlock[3] = (uint64_t)&unk_100E1F360;
      uint64_t v51 = _Block_copy(aBlock);
      static DispatchQoS.unspecified.getter();
      uint64_t v70 = (uint64_t)&_swiftEmptyArrayStorage;
      sub_100128C74((unint64_t *)&qword_100EA0200, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
      sub_10017DF08(&qword_100E75530);
      sub_10012470C((unint64_t *)&qword_100EA0210, &qword_100E75530);
      dispatch thunk of SetAlgebra.init<A>(_:)();
      OS_dispatch_queue.async(group:qos:flags:execute:)();
      _Block_release(v51);
      sub_100162F0C();
      v52();
      sub_100162F0C();
      v53();
      swift_release();
      return;
    }
    sub_100178110((uint64_t)v26, &qword_100E6DC08);
    (*(void (**)(unsigned char *, uint64_t))(v69 + 8))(v24, v11);
LABEL_9:
    uint64_t v56 = v15;
    sub_100178110(v2, &qword_100E6DD18);
    goto LABEL_15;
  }
  sub_100178110((uint64_t)v26, &qword_100E6DC08);
  sub_10017A6D8(v30);
  if (!v31) {
    goto LABEL_9;
  }
  sub_100178110(v2, &qword_100E6DC08);
LABEL_11:
  if (qword_100E62858 != -1) {
    swift_once();
  }
  uint64_t v36 = type metadata accessor for Logger();
  sub_1002102B0(v36, (uint64_t)qword_100F52010);
  unint64_t v37 = v68;
  swift_bridgeObjectRetain();
  uint64_t v38 = Logger.logObject.getter();
  os_log_type_t v39 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v38, v39))
  {
    uint64_t v40 = swift_slowAlloc();
    uint64_t v41 = swift_slowAlloc();
    *(_DWORD *)uint64_t v40 = 141558275;
    uint64_t v70 = 1752392040;
    aBlock[0] = v41;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v40 + 12) = 2081;
    swift_bridgeObjectRetain();
    uint64_t v70 = sub_10016414C(v66, v37, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v38, v39, "The interaction to donate matches the most recently donated interaction. Bailing to avoid donating a duplicate interaction. persistentIdentifier=%{private,mask.hash}s", (uint8_t *)v40, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
}

uint64_t sub_10006BF08(void *a1)
{
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E6FC60);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v23)
  {
    __break(1u);
    goto LABEL_6;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E728A0);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v21)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  sub_1001B1E64(a1, a1[3]);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:name:)();
  if (v19 != 2)
  {
    char v3 = v19 & 1;
    uint64_t v4 = sub_1000DF0C4((uint64_t)v20, v21);
    __n128 v5 = __chkstk_darwin(v4);
    uint64_t v7 = (void *)((char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, __n128))(v8 + 16))(v7, v5);
    uint64_t v9 = *v7;
    uint64_t v10 = type metadata accessor for DailyForecastFilter();
    void v18[3] = v10;
    uint64_t v18[4] = &off_100E0D630;
    v18[0] = v9;
    type metadata accessor for DailyForecastComponentViewModelFactory();
    uint64_t v11 = swift_allocObject();
    uint64_t v12 = sub_1000DF0C4((uint64_t)v18, v10);
    __n128 v13 = __chkstk_darwin(v12);
    uint64_t v15 = (void *)((char *)v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, __n128))(v16 + 16))(v15, v13);
    uint64_t v17 = *v15;
    *(void *)(v11 + 80) = v10;
    *(void *)(v11 + 88) = &off_100E0D630;
    *(void *)(v11 + 56) = v17;
    sub_1001262E4(&v22, v11 + 16);
    *(unsigned char *)(v11 + 96) = v3;
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v18);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v20);
    return v11;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_10006C1C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v45 = a3;
  uint64_t v44 = type metadata accessor for TaskPriority();
  uint64_t v43 = *(void *)(v44 - 8);
  __chkstk_darwin(v44);
  uint64_t v42 = (char *)v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for WeatherApp();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  __chkstk_darwin(v6 - 8);
  uint64_t v9 = (char *)v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = sub_10017DF08(&qword_100E9C300);
  uint64_t v10 = *(void *)(v37 - 8);
  __chkstk_darwin(v37);
  uint64_t v12 = (char *)v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = sub_10017DF08(&qword_100E9C308);
  __chkstk_darwin(v36);
  uint64_t v14 = (char *)v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = sub_10017DF08(&qword_100E9C310);
  __chkstk_darwin(v38);
  uint64_t v40 = (char *)v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10020D948(a1, (uint64_t)__dst);
  uint64_t v41 = a2;
  sub_1000F4944(a2, (uint64_t)v9, (void (*)(void))type metadata accessor for WeatherApp);
  uint64_t v16 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v39 = v8;
  v35[1] = v16 | 7;
  uint64_t v17 = swift_allocObject();
  sub_1001262E4((long long *)__dst, v17 + 16);
  sub_10006C84C((uint64_t)v9, v17 + ((v16 + 56) & ~v16));
  uint64_t v18 = sub_10017DF08(&qword_100E97FC8);
  *(void *)&__src[80] = sub_100224A1C;
  *(void *)&__src[88] = 0;
  __src[96] = 0;
  *(void *)__src = v18;
  if (qword_100E62290 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t result = sub_10006DF38((uint64_t)&xmmword_100F51398, (uint64_t)__dst, &qword_100E6F2A0);
  if (*(void *)&__dst[24])
  {
    v35[0] = ~v16;
    sub_1001262E4((long long *)__dst, (uint64_t)&__src[24]);
    *(void *)&__src[8] = sub_1000F4304;
    *(void *)&__src[16] = v17;
    uint64_t v20 = Dictionary.init(dictionaryLiteral:)();
    *(void *)&__src[64] = &_swiftEmptyArrayStorage;
    *(void *)&__src[72] = v20;
    memcpy(__dst, __src, sizeof(__dst));
    sub_10020D948(a1, (uint64_t)__src);
    uint64_t v21 = swift_allocObject();
    sub_1001262E4((long long *)__src, v21 + 16);
    sub_10017DF08(&qword_100E9C318);
    sub_1001246C8(&qword_100E9C320, &qword_100E9C318);
    View.onOpenURL(perform:)();
    swift_release();
    sub_1001781AC((uint64_t)__dst, &qword_100E9C318);
    __src[0] = UIAccessibilityIsInvertColorsEnabled();
    State.init(wrappedValue:)();
    char v22 = __dst[0];
    uint64_t v23 = *(void *)&__dst[8];
    uint64_t v24 = v37;
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v14, v12, v37);
    uint64_t v25 = &v14[*(int *)(v36 + 36)];
    *uint64_t v25 = v22;
    *((void *)v25 + 1) = v23;
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v24);
    sub_1000F4944(v41, (uint64_t)v9, (void (*)(void))type metadata accessor for WeatherApp);
    sub_10020D948(a1, (uint64_t)__dst);
    uint64_t v26 = (v16 + 16) & v35[0];
    unint64_t v27 = (v39 + v26 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v28 = swift_allocObject();
    sub_10006C84C((uint64_t)v9, v28 + v26);
    sub_1001262E4((long long *)__dst, v28 + v27);
    uint64_t v29 = v42;
    static TaskPriority.userInitiated.getter();
    uint64_t v30 = (uint64_t)v40;
    char v31 = &v40[*(int *)(v38 + 36)];
    uint64_t v32 = type metadata accessor for _TaskModifier();
    uint64_t v33 = v43;
    uint64_t v34 = v44;
    (*(void (**)(char *, char *, uint64_t))(v43 + 16))(&v31[*(int *)(v32 + 20)], v29, v44);
    *(void *)char v31 = &unk_100E9C330;
    *((void *)v31 + 1) = v28;
    sub_10006DF38((uint64_t)v14, v30, &qword_100E9C308);
    (*(void (**)(char *, uint64_t))(v33 + 8))(v29, v34);
    sub_1001781AC((uint64_t)v14, &qword_100E9C308);
    return sub_10020E72C(v30, v45, &qword_100E9C310);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10006C84C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for WeatherApp();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

double sub_10006C8B0@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_10006C974();
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v4 = sub_10017DF08(&qword_100E83DE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  uint64_t v5 = (_OWORD *)(a2 + *(int *)(sub_10017DF08(&qword_100E83DF0) + 36));
  *uint64_t v5 = v7;
  v5[1] = v8;
  double result = *(double *)&v9;
  long long v5[2] = v9;
  return result;
}

double sub_10006C974()
{
  uint64_t v0 = type metadata accessor for LocationComponentHeaderViewModel(0);
  __chkstk_darwin(v0);
  uint64_t v1 = type metadata accessor for LocationComponentHeaderMetrics(0);
  uint64_t v2 = __chkstk_darwin(v1);
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v9 - v3;
  sub_1005D284C();
  char v5 = v4[*(int *)(v1 + 32)];
  sub_1001F75CC();
  if (v5)
  {
    if (qword_100E62230 != -1) {
      swift_once();
    }
    return *(double *)&qword_100F51330;
  }
  else
  {
    sub_1005D284C();
    sub_1001EC0BC();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    sub_1001F75CC();
    sub_1001F75CC();
    double v6 = 0.0;
    if (EnumCaseMultiPayload != 4)
    {
      sub_1005D284C();
      double v6 = *(double *)&v4[*(int *)(v1 + 20)];
      sub_1001F75CC();
    }
  }
  return v6;
}

uint64_t sub_10006CC08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)a2;
  char v7 = *(unsigned char *)(a2 + 8);
  sub_100195B7C(*(void *)a2, v7);
  uint64_t v8 = *(void *)a1;
  char v9 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v6;
  *(unsigned char *)(a1 + 8) = v7;
  sub_10018F6D8(v8, v9);
  if (a1 != a2)
  {
    uint64_t v10 = *(int *)(a3 + 20);
    uint64_t v11 = (void *)(a1 + v10);
    uint64_t v12 = (void *)(a2 + v10);
    sub_10017DF4C(a1 + v10, (uint64_t *)&unk_100EAA560);
    sub_10017DF08((uint64_t *)&unk_100EAA560);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v13 = type metadata accessor for UserInterfaceSizeClass();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v12, 1, v13))
      {
        uint64_t v14 = sub_10017DF08(&qword_100E65ED8);
        memcpy(v11, v12, *(void *)(*(void *)(v14 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v11, 0, 1, v13);
      }
    }
    else
    {
      *uint64_t v11 = *v12;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v15 = *(int *)(a3 + 24);
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  *(void *)(a1 + v15) = *(void *)(a2 + v15);
  swift_retain();
  swift_release();
  *(void *)(v16 + 8) = *(void *)(v17 + 8);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_10006CDBC@<X0>(char a1@<W1>, char a2@<W2>, char a3@<W3>, uint64_t a4@<X8>)
{
  type metadata accessor for Location();
  sub_100179C0C();
  __chkstk_darwin(v6);
  sub_10011C760();
  uint64_t v7 = type metadata accessor for LocationEntity();
  uint64_t v8 = sub_100109308(v7);
  __chkstk_darwin(v8);
  sub_100109314();
  uint64_t v45 = v9;
  uint64_t v10 = sub_10017DF08(&qword_100E65FA8);
  uint64_t v11 = sub_100109308(v10);
  __chkstk_darwin(v11);
  sub_1001626E0();
  uint64_t v14 = v13 - v12;
  uint64_t v15 = type metadata accessor for Date();
  uint64_t v16 = sub_100109308(v15);
  __chkstk_darwin(v16);
  sub_1001626E0();
  uint64_t v19 = v18 - v17;
  uint64_t v20 = sub_10017DF08(&qword_100E6DC18);
  uint64_t v21 = sub_100109308(v20);
  __chkstk_darwin(v21);
  sub_1001626E0();
  uint64_t v24 = v23 - v22;
  uint64_t v25 = sub_10017DF08(&qword_100E6DC08);
  uint64_t v26 = sub_100109308(v25);
  __chkstk_darwin(v26);
  sub_100179CB8();
  uint64_t v27 = type metadata accessor for Location.Identifier();
  sub_100179C0C();
  uint64_t v29 = v28;
  __chkstk_darwin(v30);
  sub_10012B938();
  char v31 = *(void (**)(void))(v29 + 16);
  sub_100189570();
  v31();
  sub_100189570();
  v31();
  _s7Weather24LocationCompositionStateOwst_0(v4, 0, 1, v27);
  uint64_t v32 = Location.Identifier.name.getter();
  uint64_t v34 = v33;
  uint64_t v35 = type metadata accessor for LocationFooterViewModel();
  _s7Weather24LocationCompositionStateOwst_0(v24, 1, 1, v35);
  char v36 = 2;
  if ((a2 & 1) == 0)
  {
    uint64_t v37 = Location.Identifier.name.getter();
    unint64_t v39 = v38;
    swift_bridgeObjectRelease();
    uint64_t v40 = HIBYTE(v39) & 0xF;
    if ((v39 & 0x2000000000000000) == 0) {
      uint64_t v40 = v37 & 0xFFFFFFFFFFFFLL;
    }
    char v36 = v40 != 0;
  }
  v50[0] = v32;
  v50[1] = v34;
  long long v51 = 0u;
  long long v52 = 0u;
  char v53 = 2;
  uint64_t v54 = 0;
  unint64_t v55 = 0xE000000000000000;
  uint64_t v56 = 11565;
  unint64_t v57 = 0xE200000000000000;
  uint64_t v58 = 0;
  uint64_t v59 = 0;
  uint64_t v60 = 0;
  unint64_t v61 = 0xE000000000000000;
  uint64_t v62 = 0;
  unint64_t v63 = 0xE000000000000000;
  __int16 v64 = 0;
  char v65 = 0;
  uint64_t v66 = 0;
  unint64_t v67 = 0xE000000000000000;
  __int16 v68 = 0;
  id v41 = [self fahrenheit];
  Date.init()();
  uint64_t v42 = type metadata accessor for ForegroundEffect();
  _s7Weather24LocationCompositionStateOwst_0(v14, 1, 1, v42);
  static Location.current.getter();
  static LocationEntity.makeFromLocation(_:name:)();
  sub_100162F0C();
  v43();
  return sub_100083BB4(v5, v4, v50, (uint64_t)_swiftEmptyArrayStorage, 0xC000000000000004, v24, 0, 0, a4, 2, a1 & 1, v36, v41, 1, a3 & 1, a2 & 1, v19, v14, 0,
           v45,
           1);
}

void sub_10006D1BC()
{
  uint64_t v1 = type metadata accessor for MainAction();
  __chkstk_darwin(v1);
  uint64_t v29 = (uint64_t)v27 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_10017DF08(&qword_100E7FB38);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10017DF08(&qword_100E66400);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v9 = (char *)v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v7);
  uint64_t v12 = (char *)v27 - v11;
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)v27 - v13;
  uint64_t v15 = type metadata accessor for DisplayMetrics();
  uint64_t v16 = __chkstk_darwin(v15);
  uint64_t v18 = (char *)v27 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v20 = (char *)v27 - v19;
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    v27[1] = v1;
    id v28 = Strong;
    sub_1000EB04C(v28, (uint64_t)v20);
    sub_1001CB2DC((uint64_t)v20, (uint64_t)v14);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v14, 0, 1, v15);
    v27[0] = v0;
    uint64_t v22 = v0 + OBJC_IVAR____TtC7Weather21DisplayMetricsMonitor_previousDisplayMetrics;
    swift_beginAccess();
    uint64_t v23 = (uint64_t)&v5[*(int *)(v3 + 48)];
    sub_10006D674((uint64_t)v14, (uint64_t)v5);
    sub_10006D674(v22, v23);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v5, 1, v15) == 1)
    {
      sub_1001AB060((uint64_t)v14, &qword_100E66400);
      if (_s7Weather24LocationCompositionStateOwet_0(v23, 1, v15) == 1)
      {
        sub_1001AB060((uint64_t)v5, &qword_100E66400);
LABEL_9:
        sub_100158C78((uint64_t)v20, (void (*)(void))type metadata accessor for DisplayMetrics);

        return;
      }
    }
    else
    {
      sub_10006D674((uint64_t)v5, (uint64_t)v12);
      if (_s7Weather24LocationCompositionStateOwet_0(v23, 1, v15) != 1)
      {
        sub_1000EB47C(v23, (uint64_t)v18);
        char v24 = sub_10011BE7C((uint64_t)v12, (uint64_t)v18);
        sub_100158C78((uint64_t)v18, (void (*)(void))type metadata accessor for DisplayMetrics);
        sub_1001AB060((uint64_t)v14, &qword_100E66400);
        sub_100158C78((uint64_t)v12, (void (*)(void))type metadata accessor for DisplayMetrics);
        sub_1001AB060((uint64_t)v5, &qword_100E66400);
        if (v24) {
          goto LABEL_9;
        }
        goto LABEL_10;
      }
      sub_1001AB060((uint64_t)v14, &qword_100E66400);
      sub_100158C78((uint64_t)v12, (void (*)(void))type metadata accessor for DisplayMetrics);
    }
    sub_1001AB060((uint64_t)v5, &qword_100E7FB38);
LABEL_10:
    sub_1001CB2DC((uint64_t)v20, (uint64_t)v9);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v9, 0, 1, v15);
    swift_beginAccess();
    sub_100222E60((uint64_t)v9, v22);
    swift_endAccess();
    uint64_t v25 = *(uint64_t (**)(uint64_t))(v27[0] + 16);
    uint64_t v26 = v29;
    sub_1001CB2DC((uint64_t)v20, v29);
    type metadata accessor for ViewAction();
    swift_storeEnumTagMultiPayload();
    swift_storeEnumTagMultiPayload();
    uint64_t v31 = 0;
    memset(v30, 0, sizeof(v30));
    swift_retain();
    sub_1001AAF58(v26, (uint64_t)v30, v25);

    sub_1001AB060((uint64_t)v30, (uint64_t *)&unk_100EA01F0);
    sub_100158C78(v26, (void (*)(void))type metadata accessor for MainAction);
    swift_release();
    sub_100158C78((uint64_t)v20, (void (*)(void))type metadata accessor for DisplayMetrics);
  }
}

uint64_t sub_10006D674(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10017DF08(&qword_100E66400);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10006D6DC@<X0>(uint64_t a1@<X8>)
{
  type metadata accessor for LocationWeatherDataState(0);
  sub_100162E4C();
  __chkstk_darwin(v3);
  sub_100162EB8();
  sub_100157394(v1, v1, (void (*)(void))type metadata accessor for LocationWeatherDataState);
  switch(sub_1001D255C())
  {
    case 1u:
      uint64_t v8 = sub_10017DF08(&qword_100E63748);
      uint64_t v9 = v1 + *(int *)(v8 + 64);
      sub_100178C8C(v1 + *(int *)(v8 + 48), a1, (void (*)(void))type metadata accessor for PreprocessedWeatherData);
      uint64_t v10 = type metadata accessor for PreprocessedWeatherData();
      sub_100182118(v10);
      sub_100156908(v9, (void (*)(void))type metadata accessor for NewsDataModel);
      uint64_t result = sub_100156908(v1, (void (*)(void))type metadata accessor for WeatherData);
      break;
    case 3u:
      goto LABEL_3;
    default:
      sub_100156908(v1, (void (*)(void))type metadata accessor for LocationWeatherDataState);
LABEL_3:
      uint64_t v4 = type metadata accessor for PreprocessedWeatherData();
      uint64_t result = sub_100163050(a1, v5, v6, v4);
      break;
  }
  return result;
}

uint64_t sub_10006D83C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100AB00EC);
}

uint64_t sub_10006D850@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v4 = sub_10017DF08(&qword_100E8EE70);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for ContentStatusBannerPresentationMetrics(0);
  uint64_t v8 = v7 - 8;
  __chkstk_darwin(v7);
  uint64_t v10 = (uint64_t *)((char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = static Color.clear.getter();
  GeometryProxy.size.getter();
  uint64_t v13 = v12;
  uint64_t v15 = v14;
  sub_10006DF38(a1, (uint64_t)v10 + *(int *)(v8 + 28), &qword_100E63A10);
  *uint64_t v10 = v13;
  v10[1] = v15;
  sub_10015176C();
  uint64_t v16 = sub_10017DF08(&qword_100E8EE78);
  sub_10006DF38((uint64_t)v6, (uint64_t)a2 + *(int *)(v16 + 36), &qword_100E8EE70);
  *a2 = v11;
  swift_retain();
  sub_10017DF4C((uint64_t)v6, &qword_100E8EE70);
  sub_100151660();
  return swift_release();
}

uint64_t sub_10006D9DC@<X0>(int a1@<W0>, int a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, unsigned char *a7@<X8>)
{
  uint64_t v9 = v7;
  uint64_t v62 = a6;
  uint64_t v54 = a5;
  uint64_t v58 = a4;
  uint64_t v59 = a3;
  int v64 = a1;
  int v12 = a1;
  uint64_t v13 = sub_10017DF08(qword_100E66490);
  uint64_t v14 = sub_100109308(v13);
  __chkstk_darwin(v14);
  sub_10017B2CC(v15, v53);
  uint64_t v61 = type metadata accessor for WeatherMapTrackingState(0);
  sub_100162E4C();
  __chkstk_darwin(v16);
  sub_10017225C(v17, v53);
  uint64_t v18 = sub_10017DF08(&qword_100E65BC0);
  uint64_t v19 = sub_100109308(v18);
  __chkstk_darwin(v19);
  sub_100125FF8();
  uint64_t v63 = type metadata accessor for WeatherMapOverlayKind();
  sub_100179C0C();
  uint64_t v66 = v20;
  __chkstk_darwin(v21);
  sub_10017E32C(v22, v53);
  uint64_t v23 = (int *)type metadata accessor for WeatherMapPresentationState(0);
  sub_100162E4C();
  __chkstk_darwin(v24);
  sub_10016278C();
  uint64_t v60 = v25 - v26;
  __chkstk_darwin(v27);
  uint64_t v29 = (char *)&v53 - v28;
  __chkstk_darwin(v30);
  uint64_t v32 = (char *)&v53 - v31;
  __chkstk_darwin(v33);
  uint64_t v35 = (char *)&v53 - v34;
  __chkstk_darwin(v36);
  unint64_t v38 = (unsigned __int8 *)&v53 - v37;
  sub_10011EED8();
  if (v12 == 6) {
    int v64 = *v38;
  }
  sub_10011EF7C((uint64_t)v38, (void (*)(void))type metadata accessor for WeatherMapPresentationState);
  sub_10011EED8();
  int v57 = a2;
  char v39 = a2;
  if (a2 >= 0xFEu) {
    char v39 = v35[1];
  }
  sub_10011EF7C((uint64_t)v35, (void (*)(void))type metadata accessor for WeatherMapPresentationState);
  sub_10006DF88();
  sub_10011EED8();
  uint64_t v40 = v63;
  if (_s7Weather24LocationCompositionStateOwet_0(v8, 1, v63) == 1)
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v66 + 16))(v65, &v32[v23[6]], v40);
    sub_10011EF7C((uint64_t)v32, (void (*)(void))type metadata accessor for WeatherMapPresentationState);
    sub_100178110(v8, &qword_100E65BC0);
  }
  else
  {
    sub_10011EF7C((uint64_t)v32, (void (*)(void))type metadata accessor for WeatherMapPresentationState);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v66 + 32))(v65, v8, v40);
  }
  uint64_t v41 = v58;
  uint64_t v43 = v54;
  uint64_t v42 = v55;
  sub_10011EED8();
  uint64_t v44 = v43;
  if (!v43)
  {
    uint64_t v45 = &v29[v23[7]];
    uint64_t v41 = *(void *)v45;
    uint64_t v44 = *((void *)v45 + 1);
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  sub_10011EF7C((uint64_t)v29, (void (*)(void))type metadata accessor for WeatherMapPresentationState);
  sub_10006DF88();
  uint64_t v46 = v60;
  sub_10011EED8();
  if (_s7Weather24LocationCompositionStateOwet_0(v42, 1, v61) == 1)
  {
    uint64_t v47 = v46;
    uint64_t v48 = v56;
    sub_10011EED8();
    sub_10011EF7C(v47, (void (*)(void))type metadata accessor for WeatherMapPresentationState);
    sub_100178110(v42, qword_100E66490);
  }
  else
  {
    sub_10011EF7C(v46, (void (*)(void))type metadata accessor for WeatherMapPresentationState);
    uint64_t v48 = v56;
    sub_10006DED4(v42, v56);
  }
  char v49 = v64;
  char v50 = sub_100225E8C(v57, v9);
  *a7 = v49;
  a7[1] = v39;
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v66 + 32))(&a7[v23[6]], v65, v40);
  long long v51 = &a7[v23[7]];
  *long long v51 = v41;
  v51[1] = v44;
  uint64_t result = sub_10006DED4(v48, (uint64_t)&a7[v23[8]]);
  a7[v23[9]] = v50 & 1;
  return result;
}

uint64_t sub_10006DED4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for WeatherMapTrackingState(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10006DF38(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  sub_10017DF08(a3);
  sub_100162E4C();
  uint64_t v4 = sub_10011BFA4();
  v5(v4);
  return a2;
}

uint64_t sub_10006DF88()
{
  sub_1001097B4();
  sub_10017DF08(v1);
  sub_100162E4C();
  uint64_t v2 = sub_10011BFA4();
  v3(v2);
  return v0;
}

uint64_t sub_10006DFD4()
{
  return State.wrappedValue.getter();
}

uint64_t initializeWithCopy for MainViewFullscreenMapZoomTransitionModifier(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v4 = a2 + 8;
  long long v5 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 32) = v5;
  uint64_t v6 = v5;
  uint64_t v7 = **(void (***)(uint64_t, uint64_t, uint64_t))(v5 - 8);
  swift_retain();
  v7(a1 + 8, v4, v6);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_retain();
  return a1;
}

void *sub_10006E0DC(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[2];
  a1[1] = a2[1];
  a1[2] = v6;
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    uint64_t v7 = *(int *)(a3 + 40);
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    sub_100178110((uint64_t)a1 + v7, &qword_100E63BD0);
    sub_10017DF08(&qword_100E63BD0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(void *)uint64_t v8 = *(void *)v9;
      *((void *)v8 + 1) = *((void *)v9 + 1);
      v8[16] = v9[16];
      v8[17] = v9[17];
      v8[18] = v9[18];
      uint64_t v10 = *(int *)(type metadata accessor for DisplayMetrics() + 36);
      uint64_t v11 = &v8[v10];
      int v12 = &v9[v10];
      uint64_t v13 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
    }
    else
    {
      *(void *)uint64_t v8 = *(void *)v9;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v14 = *(int *)(a3 + 44);
  uint64_t v45 = a2;
  uint64_t v46 = a3;
  uint64_t v15 = (char *)a1 + v14;
  uint64_t v16 = (char *)a2 + v14;
  uint64_t v17 = *(void *)v16;
  uint64_t v18 = *((void *)v16 + 1);
  uint64_t v19 = *((void *)v16 + 2);
  uint64_t v20 = *((void *)v16 + 3);
  uint64_t v21 = *((void *)v16 + 4);
  uint64_t v22 = *((void *)v16 + 5);
  uint64_t v24 = *((void *)v16 + 6);
  uint64_t v23 = *((void *)v16 + 7);
  uint64_t v44 = a1;
  uint64_t v25 = *((void *)v16 + 8);
  char v43 = v16[72];
  sub_1001910C8(*(void *)v16, v18, v19, v20, v21, v22, v24, v23, v25, v43);
  uint64_t v26 = *(void *)v15;
  uint64_t v27 = *((void *)v15 + 1);
  uint64_t v28 = *((void *)v15 + 2);
  uint64_t v29 = *((void *)v15 + 3);
  uint64_t v30 = *((void *)v15 + 4);
  uint64_t v31 = *((void *)v15 + 5);
  uint64_t v32 = *((void *)v15 + 6);
  uint64_t v33 = *((void *)v15 + 7);
  uint64_t v34 = *((void *)v15 + 8);
  char v35 = v15[72];
  *(void *)uint64_t v15 = v17;
  *((void *)v15 + 1) = v18;
  *((void *)v15 + 2) = v19;
  *((void *)v15 + 3) = v20;
  *((void *)v15 + 4) = v21;
  *((void *)v15 + 5) = v22;
  *((void *)v15 + 6) = v24;
  *((void *)v15 + 7) = v23;
  *((void *)v15 + 8) = v25;
  v15[72] = v43;
  sub_10018CCC4(v26, v27, v28, v29, v30, v31, v32, v33, v34, v35);
  uint64_t v36 = *(int *)(v46 + 48);
  uint64_t v37 = (char *)v44 + v36;
  unint64_t v38 = (char *)v45 + v36;
  uint64_t v39 = *(void *)v38;
  LOBYTE(v23) = v38[8];
  sub_100195B7C(*(void *)v38, v23);
  uint64_t v40 = *(void *)v37;
  char v41 = v37[8];
  *(void *)uint64_t v37 = v39;
  v37[8] = v23;
  sub_10018F6D8(v40, v41);
  return v44;
}

uint64_t sub_10006E31C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v46 = a1;
  type metadata accessor for AccessibilityChildBehavior();
  sub_100179C0C();
  uint64_t v44 = v3;
  uint64_t v45 = v2;
  __chkstk_darwin(v2);
  sub_100109314();
  uint64_t v43 = v4;
  uint64_t v42 = type metadata accessor for ScrollIndicatorVisibility();
  sub_100179C0C();
  uint64_t v39 = v5;
  __chkstk_darwin(v6);
  uint64_t v7 = sub_10017DF08(&qword_100EA5F30);
  sub_100179C0C();
  uint64_t v9 = v8;
  uint64_t v11 = __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v35 - v14;
  uint64_t v40 = sub_10017DF08(&qword_100EA5F38);
  sub_100179C0C();
  uint64_t v37 = v16;
  __chkstk_darwin(v17);
  uint64_t v41 = sub_10017DF08(&qword_100EA5F40);
  sub_100179C0C();
  uint64_t v38 = v18;
  __chkstk_darwin(v19);
  sub_100109314();
  uint64_t v35 = v20;
  uint64_t v21 = sub_10017DF08(&qword_100EA5F48);
  __chkstk_darwin(v21 - 8);
  sub_100109314();
  uint64_t v36 = v22;
  static Axis.Set.horizontal.getter();
  uint64_t v47 = v1;
  sub_10017DF08(&qword_100EA5F50);
  sub_10022F6A4();
  ScrollView.init(_:showsIndicators:content:)();
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v15, v13, v7);
  ScrollView.scrollsContentToBeginningInRightToLeft.setter();
  uint64_t v23 = *(void (**)(char *, uint64_t))(v9 + 8);
  v23(v13, v7);
  static ScrollIndicatorVisibility.never.getter();
  unsigned __int8 v24 = static Axis.Set.vertical.getter();
  unsigned __int8 v25 = static Axis.Set.horizontal.getter();
  Axis.Set.init(rawValue:)();
  Axis.Set.init(rawValue:)();
  if (Axis.Set.init(rawValue:)() != v24) {
    Axis.Set.init(rawValue:)();
  }
  Axis.Set.init(rawValue:)();
  if (Axis.Set.init(rawValue:)() != v25) {
    Axis.Set.init(rawValue:)();
  }
  uint64_t v26 = sub_1001246C8(&qword_100EA5F70, &qword_100EA5F30);
  View.scrollIndicators(_:axes:)();
  sub_100162F0C();
  v27();
  v23(v15, v7);
  static AccessibilityChildBehavior.contain.getter();
  uint64_t v48 = v7;
  uint64_t v49 = v26;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v29 = v40;
  View.accessibilityElement(children:)();
  sub_100162F0C();
  v30();
  sub_100162F0C();
  v31();
  uint64_t v48 = v29;
  uint64_t v49 = OpaqueTypeConformance2;
  swift_getOpaqueTypeConformance2();
  uint64_t v32 = v36;
  View.accessibilityRespondsToUserInteraction(_:)();
  sub_100162F0C();
  v33();
  return sub_10020E72C(v32, v46, &qword_100EA5F48);
}

uint64_t sub_10006E7C0(uint64_t a1)
{
  sub_10017B374();
  uint64_t result = v2();
  if (*(unsigned char *)(a1 + 32))
  {
    if (v5) {
      return result;
    }
LABEL_6:
    *(CGFloat *)a1 = v4.origin.x;
    *(CGFloat *)(a1 + 8) = v4.origin.y;
    *(CGFloat *)(a1 + 16) = v4.size.width;
    *(CGFloat *)(a1 + 24) = v4.size.height;
    *(unsigned char *)(a1 + 32) = v5;
    return result;
  }
  if (v5) {
    goto LABEL_6;
  }
  uint64_t result = CGRectEqualToRect(*(CGRect *)a1, v4);
  if ((result & 1) == 0) {
    goto LABEL_6;
  }
  return result;
}

uint64_t sub_10006E850@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for AccessibilityChildBehavior();
  uint64_t v63 = *(void *)(v4 - 8);
  uint64_t v64 = v4;
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10017DF08(&qword_100E64008);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10017DF08(&qword_100E64010);
  uint64_t v12 = __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v49 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v49 - v15;
  uint64_t v17 = type metadata accessor for LocationHeaderView(0);
  uint64_t v18 = (uint64_t *)(v2 + *(int *)(v17 + 76));
  uint64_t v19 = v18[3];
  if (v19)
  {
    uint64_t v60 = v16;
    uint64_t v61 = v14;
    uint64_t v62 = v8;
    uint64_t v56 = v7;
    uint64_t v57 = v11;
    uint64_t v58 = a1;
    uint64_t v20 = *v18;
    uint64_t v21 = v18[1];
    uint64_t v52 = v18[2];
    char v22 = v52 & 1;
    uint64_t v51 = v17;
    swift_bridgeObjectRetain();
    sub_100190CC4(v20, v21, v22);
    sub_10020632C();
    LOBYTE(v67) = v22;
    uint64_t v53 = v21;
    uint64_t v54 = v20;
    uint64_t v59 = v19;
    uint64_t v23 = Text.font(_:)();
    uint64_t v55 = v10;
    uint64_t v24 = v23;
    uint64_t v26 = v25;
    LOBYTE(v20) = v27;
    swift_release();
    static Color.black.getter();
    sub_10021FC00();
    Color.opacity(_:)();
    swift_release();
    sub_10021FC2C();
    sub_10021FC74();
    sub_10021FC50();
    uint64_t v28 = Text.shadow(color:radius:x:y:)();
    uint64_t v30 = v29;
    uint64_t v50 = v2;
    char v32 = v31;
    uint64_t v34 = v33;
    swift_release();
    uint64_t v35 = v24;
    uint64_t v36 = v55;
    sub_100191924(v35, v26, v20 & 1);
    swift_bridgeObjectRelease();
    uint64_t v67 = v28;
    uint64_t v68 = v30;
    char v69 = v32 & 1;
    uint64_t v70 = v34;
    static AccessibilityChildBehavior.ignore.getter();
    View.accessibilityElement(children:)();
    (*(void (**)(char *, uint64_t))(v63 + 8))(v6, v64);
    sub_100191924(v67, v68, v69);
    swift_bridgeObjectRelease();
    uint64_t v37 = v50 + *(int *)(v51 + 64);
    if (*(unsigned char *)(v37 + 48))
    {
      if (*(unsigned char *)(v37 + 48) != 1)
      {
        uint64_t v45 = 0;
        unint64_t v44 = 0xE000000000000000;
        uint64_t v42 = (uint64_t)v61;
        uint64_t v41 = v62;
        uint64_t v43 = (uint64_t)v60;
        goto LABEL_11;
      }
      uint64_t v38 = (unint64_t *)(v37 + 40);
      uint64_t v39 = (uint64_t *)(v37 + 32);
    }
    else
    {
      uint64_t v39 = (uint64_t *)(v37 + 16);
      uint64_t v38 = (unint64_t *)(v37 + 24);
    }
    uint64_t v42 = (uint64_t)v61;
    uint64_t v41 = v62;
    uint64_t v43 = (uint64_t)v60;
    unint64_t v44 = *v38;
    uint64_t v45 = *v39;
    swift_bridgeObjectRetain();
LABEL_11:
    char v46 = v52 & 1;
    uint64_t v67 = v45;
    uint64_t v68 = v44;
    uint64_t v65 = &type metadata for Text;
    uint64_t v66 = &protocol witness table for Text;
    swift_getOpaqueTypeConformance2();
    sub_10014A85C();
    uint64_t v47 = v56;
    View.accessibilityLabel<A>(_:)();
    sub_100191924(v54, v53, v46);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v41 + 8))(v36, v47);
    sub_10024D364(v42, v43, &qword_100E64010);
    uint64_t v48 = v58;
    sub_10024D364(v43, v58, &qword_100E64010);
    return _s7Weather24LocationCompositionStateOwst_0(v48, 0, 1, v57);
  }

  return _s7Weather24LocationCompositionStateOwst_0(a1, 1, 1, v11);
}

uint64_t sub_10006ED40@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v32 = a1;
  uint64_t v33 = a3;
  uint64_t v4 = sub_10017DF08(&qword_100EB1C40);
  uint64_t v5 = v4 - 8;
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10017DF08(&qword_100EB1C48);
  uint64_t v9 = v8 - 8;
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10017DF08(&qword_100EB1C50);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_10017DF08(&qword_100EB1C58);
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = static Color.clear.getter();
  char v19 = static Edge.Set.all.getter();
  uint64_t v20 = sub_10017DF08(&qword_100EB1C60);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v20 - 8) + 16))(v7, v32, v20);
  uint64_t v21 = &v7[*(int *)(v5 + 44)];
  *(void *)uint64_t v21 = v18;
  v21[8] = v19;
  if (a2) {
    double v22 = 0.95;
  }
  else {
    double v22 = 1.0;
  }
  static UnitPoint.center.getter();
  uint64_t v24 = v23;
  uint64_t v26 = v25;
  sub_1001B4A34((uint64_t)v7, (uint64_t)v11, &qword_100EB1C40);
  char v27 = &v11[*(int *)(v9 + 44)];
  *(double *)char v27 = v22;
  *((double *)v27 + 1) = v22;
  *((void *)v27 + 2) = v24;
  *((void *)v27 + 3) = v26;
  sub_100178254((uint64_t)v7, &qword_100EB1C40);
  sub_1001B4A34((uint64_t)v11, (uint64_t)v14, &qword_100EB1C48);
  sub_100178254((uint64_t)v11, &qword_100EB1C48);
  if (a2) {
    uint64_t v28 = static Animation.timingCurve(_:_:_:_:duration:)();
  }
  else {
    uint64_t v28 = static Animation.interpolatingSpring(mass:stiffness:damping:initialVelocity:)();
  }
  uint64_t v29 = v28;
  sub_1001B4A34((uint64_t)v14, (uint64_t)v17, &qword_100EB1C50);
  uint64_t v30 = &v17[*(int *)(v15 + 36)];
  *(void *)uint64_t v30 = v29;
  v30[8] = a2 & 1;
  sub_100178254((uint64_t)v14, &qword_100EB1C50);
  return sub_10006F038((uint64_t)v17, v33, &qword_100EB1C58);
}

uint64_t sub_10006F038(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  sub_10017DF08(a3);
  sub_100162880();
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(a2, a1);
  return a2;
}

void sub_10006F098()
{
  sub_10010977C();
  *(void *)uint64_t v0 = sub_10018289C(v3, v4);
  *(unsigned char *)(v0 + 8) = v5;
  swift_retain();
  swift_release();
  if (v0 != v1)
  {
    uint64_t v6 = v2[5];
    uint64_t v7 = (_OWORD *)(v0 + v6);
    uint64_t v8 = (_OWORD *)(v1 + v6);
    sub_100178110(v0 + v6, &qword_100E63D98);
    sub_10017DF08(&qword_100E63D98);
    if (sub_100162F5C() == 1)
    {
      *uint64_t v7 = *v8;
      v7[1] = v8[1];
      void v7[2] = v8[2];
      uint64_t v7[3] = v8[3];
      uint64_t v9 = *(int *)(type metadata accessor for LocationHeaderViewMeasurements(0) + 32);
      uint64_t v10 = (char *)v7 + v9;
      *(void *)uint64_t v10 = *(void *)((char *)v8 + v9);
      *((void *)v10 + 1) = *(void *)((char *)v8 + v9 + 8);
      unsigned char v10[16] = *((unsigned char *)v8 + v9 + 16);
      v10[17] = *((unsigned char *)v8 + v9 + 17);
      v10[18] = *((unsigned char *)v8 + v9 + 18);
      type metadata accessor for DisplayMetrics();
      sub_1001A1C2C();
      sub_100162E4C();
      uint64_t v11 = sub_1001A4520();
      v12(v11);
    }
    else
    {
      *(void *)uint64_t v7 = *(void *)v8;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  *(unsigned char *)(v0 + v2[6]) = *(unsigned char *)(v1 + v2[6]);
  sub_1001D0DD4(v2[7]);
  sub_1001D0DD4(v2[8]);
  sub_1001D0DD4(v2[9]);
  sub_1001A14B0();
  *(void *)(v14 + 8) = *(void *)(v13 + 8);
  swift_retain();
  swift_release();
  sub_100162714();
}

uint64_t sub_10006F20C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  memcpy(v6, v2, sizeof(v6));
  return sub_10006F260(a1, a2);
}

uint64_t sub_10006F260@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_10017DF08(&qword_100EA1DF8);
  __chkstk_darwin(v6);
  uint64_t v8 = __dst - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0) + 64;
  unsigned __int8 v9 = static Edge.Set.leading.getter();
  unsigned __int8 v10 = static Edge.Set.trailing.getter();
  char v11 = Edge.Set.init(rawValue:)();
  Edge.Set.init(rawValue:)();
  if (Edge.Set.init(rawValue:)() != v9) {
    char v11 = Edge.Set.init(rawValue:)();
  }
  Edge.Set.init(rawValue:)();
  if (Edge.Set.init(rawValue:)() != v10) {
    char v11 = Edge.Set.init(rawValue:)();
  }
  memcpy(__dst, v3, sizeof(__dst));
  sub_1001BEAB0((uint64_t)v3);
  sub_1001BEAF4();
  sub_1001BEAB0((uint64_t)v3);
  EdgeInsets.init(_all:)();
  uint64_t v13 = v12;
  uint64_t v15 = v14;
  uint64_t v17 = v16;
  uint64_t v19 = v18;
  uint64_t v20 = sub_10017DF08(&qword_100EA1E00);
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v20 - 8) + 16))(v8, a1, v20);
  uint64_t v21 = &v8[*(int *)(v6 + 36)];
  *uint64_t v21 = v11;
  *((void *)v21 + 1) = v13;
  *((void *)v21 + 2) = v15;
  *((void *)v21 + 3) = v17;
  *((void *)v21 + 4) = v19;
  v21[40] = 0;
  return sub_10024D364((uint64_t)v8, a2, &qword_100EA1DF8);
}

uint64_t destroy for ContentStatusBannerViewStyle()
{
  swift_release();
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t sub_10006F49C(void (*a1)(char *, uint64_t), uint64_t a2, uint64_t a3)
{
  Swift::String v114 = a1;
  uint64_t v115 = a2;
  uint64_t v4 = sub_10017DF08(&qword_100EAA930);
  __chkstk_darwin(v4 - 8);
  uint64_t v112 = (void (*)(char *, uint64_t, uint64_t))((char *)&v86 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = sub_10017DF08(&qword_100EB3360);
  __chkstk_darwin(v6 - 8);
  uint64_t v111 = (uint64_t)&v86 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v97 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v96 = *(void *)(v97 - 8);
  __chkstk_darwin(v97);
  uint64_t v94 = (char *)&v86 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v95 = type metadata accessor for DispatchQoS();
  uint64_t v93 = *(void *)(v95 - 8);
  __chkstk_darwin(v95);
  uint64_t v92 = (char *)&v86 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for WeatherConditionBackgroundModifier(0);
  uint64_t v87 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v88 = v11;
  uint64_t v89 = (uint64_t)&v86 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v98 = type metadata accessor for DispatchTime();
  uint64_t v91 = *(void *)(v98 - 8);
  uint64_t v12 = __chkstk_darwin(v98);
  uint64_t v86 = (char *)&v86 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  Swift::Bool v90 = (char *)&v86 - v14;
  uint64_t v15 = type metadata accessor for VFXEffectViewID();
  uint64_t v106 = *(void *)(v15 - 8);
  uint64_t v107 = v15;
  uint64_t v16 = __chkstk_darwin(v15);
  uint64_t v104 = (char *)&v86 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v103 = (char *)&v86 - v18;
  uint64_t v110 = type metadata accessor for WeatherConditionBackgroundOptions();
  uint64_t v108 = *(void *)(v110 - 8);
  uint64_t v19 = __chkstk_darwin(v110);
  uint64_t v102 = (char *)&v86 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v101 = (char *)&v86 - v22;
  __chkstk_darwin(v21);
  uint64_t v24 = (char *)&v86 - v23;
  uint64_t v109 = type metadata accessor for BackgroundAnimationData();
  uint64_t v105 = *(void *)(v109 - 8);
  uint64_t v25 = __chkstk_darwin(v109);
  uint64_t v100 = (char *)&v86 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = __chkstk_darwin(v25);
  uint64_t v99 = (char *)&v86 - v28;
  __chkstk_darwin(v27);
  uint64_t v30 = (char *)&v86 - v29;
  uint64_t v31 = type metadata accessor for BackgroundAnimationKind();
  uint64_t v32 = *(void *)(v31 - 8);
  __chkstk_darwin(v31);
  uint64_t v34 = (char *)&v86 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = sub_10017DF08(&qword_100E64A60);
  __chkstk_darwin(v35 - 8);
  uint64_t v37 = (char *)&v86 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = (void ***)(a3 + *(int *)(v10 + 112));
  uint64_t v40 = *v38;
  uint64_t v39 = (uint64_t)v38[1];
  long long aBlock = v40;
  uint64_t v117 = v39;
  sub_10017DF08(&qword_100EB4A88);
  State.wrappedValue.getter();
  uint64_t v41 = type metadata accessor for WeatherConditionBackgroundModel();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v41 - 8) + 16))(v37, v115, v41);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v37, 0, 1, v41);
  sub_1000403F8((uint64_t)v37);
  swift_release();
  uint64_t v113 = v10;
  uint64_t v42 = a3;
  uint64_t v43 = (void ***)(a3 + *(int *)(v10 + 84));
  uint64_t v45 = *v43;
  uint64_t v44 = (uint64_t)v43[1];
  long long aBlock = v45;
  uint64_t v117 = v44;
  sub_10017DF08(&qword_100EB4A78);
  State.wrappedValue.getter();
  int v46 = *(unsigned __int8 *)(v122 + 16);
  uint64_t result = swift_release();
  if (v46 == 1)
  {
    WeatherConditionBackgroundModel.animationKind.getter();
    if ((*(unsigned int (**)(char *, uint64_t))(v32 + 88))(v34, v31) == enum case for BackgroundAnimationKind.vfx(_:))
    {
      WeatherConditionBackgroundModel.animationData.getter();
      BackgroundAnimationData.options.getter();
      uint64_t v105 = *(void *)(v105 + 8);
      ((void (*)(char *, uint64_t))v105)(v30, v109);
      uint64_t v48 = v103;
      WeatherConditionBackgroundOptions.effectViewID.getter();
      uint64_t v108 = *(void *)(v108 + 8);
      ((void (*)(char *, uint64_t))v108)(v24, v110);
      uint64_t v49 = v106;
      uint64_t v50 = v107;
      uint64_t v51 = v104;
      (*(void (**)(char *, void, uint64_t))(v106 + 104))(v104, enum case for VFXEffectViewID.locationViewer(_:), v107);
      char v52 = static VFXEffectViewID.== infix(_:_:)();
      uint64_t v53 = *(void (**)(char *, uint64_t))(v49 + 8);
      v53(v51, v50);
      v53(v48, v50);
      a3 = v42;
      if (v52)
      {
        uint64_t v54 = v99;
        WeatherConditionBackgroundModel.animationData.getter();
        uint64_t v55 = v101;
        BackgroundAnimationData.options.getter();
        uint64_t v56 = v54;
        uint64_t v57 = v109;
        uint64_t v58 = (void (*)(char *, uint64_t))v105;
        ((void (*)(char *, uint64_t))v105)(v56, v109);
        uint64_t v106 = WeatherConditionBackgroundOptions.locationViewerOrientation.getter();
        LODWORD(v107) = v59;
        uint64_t v60 = v110;
        ((void (*)(char *, uint64_t))v108)(v55, v110);
        uint64_t v61 = v100;
        WeatherConditionBackgroundModel.animationData.getter();
        uint64_t v62 = v102;
        BackgroundAnimationData.options.getter();
        v58(v61, v57);
        uint64_t v63 = WeatherConditionBackgroundOptions.locationViewerOrientation.getter();
        char v65 = v64;
        ((void (*)(char *, uint64_t))v108)(v62, v60);
        if ((v107 & 1) == 0)
        {
          if ((v65 & 1) == 0 && v106 == v63) {
            goto LABEL_9;
          }
          goto LABEL_12;
        }
        if ((v65 & 1) == 0)
        {
LABEL_12:
          swift_getObjectType();
          WeatherConditionPlaybackCoordinatorType.pause(_:)(0);
          sub_1001AB3E0();
          uint64_t v110 = static OS_dispatch_queue.main.getter();
          unsigned int v76 = v86;
          static DispatchTime.now()();
          uint64_t v77 = v90;
          + infix(_:_:)();
          Swift::String v114 = *(void (**)(char *, uint64_t))(v91 + 8);
          v114(v76, v98);
          uint64_t v78 = v89;
          sub_1001C9BA4(a3, v89, (void (*)(void))type metadata accessor for WeatherConditionBackgroundModifier);
          unint64_t v79 = (*(unsigned __int8 *)(v87 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v87 + 80);
          uint64_t v80 = swift_allocObject();
          sub_1001CA430(v78, v80 + v79);
          Swift::Int v120 = sub_100B80394;
          uint64_t v121 = v80;
          long long aBlock = _NSConcreteStackBlock;
          uint64_t v117 = 1107296256;
          v118 = sub_10010A4D4;
          uint64_t v119 = &unk_100E39A20;
          uint64_t v81 = _Block_copy(&aBlock);
          swift_release();
          uint64_t v82 = v92;
          static DispatchQoS.unspecified.getter();
          long long aBlock = (void **)&_swiftEmptyArrayStorage;
          sub_1001CA9B8((unint64_t *)&qword_100EA0200, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
          sub_10017DF08(&qword_100E75530);
          sub_1001246C8((unint64_t *)&qword_100EA0210, &qword_100E75530);
          uint64_t v83 = v94;
          uint64_t v84 = v97;
          dispatch thunk of SetAlgebra.init<A>(_:)();
          uint64_t v85 = (void *)v110;
          OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
          _Block_release(v81);

          (*(void (**)(char *, uint64_t))(v96 + 8))(v83, v84);
          (*(void (**)(char *, uint64_t))(v93 + 8))(v82, v95);
          v114(v77, v98);
        }
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v32 + 8))(v34, v31);
    }
LABEL_9:
    uint64_t v66 = v115;
    sub_10003E534(v115);
    uint64_t v67 = v113;
    sub_10017DF08(&qword_100EB4860);
    State.wrappedValue.getter();
    uint64_t v68 = type metadata accessor for DynamicTypeSize();
    uint64_t v69 = v111;
    _s7Weather24LocationCompositionStateOwst_0(v111, 1, 1, v68);
    uint64_t v70 = type metadata accessor for TargetWindowSizeClass();
    uint64_t v71 = v112;
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v112, 1, 1, v70);
    sub_1000FDF14((uint64_t)v37, v66, v69, v71, 0, 0);
    sub_100178110((uint64_t)v71, &qword_100EAA930);
    sub_100178110(v69, &qword_100EB3360);
    sub_100178110((uint64_t)v37, &qword_100E64A60);
    uint64_t v72 = a3 + *(int *)(v67 + 100);
    uint64_t v73 = *(void *)v72;
    char v74 = *(unsigned char *)(v72 + 8);
    sub_100195B7C(*(void *)v72, v74);
    sub_100149AE8();
    LOBYTE(v69) = v75;
    sub_10018F6D8(v73, v74);
    return sub_100079A9C(v66, v69 & 1, *(unsigned __int8 *)(a3 + *(int *)(v67 + 64)));
  }
  return result;
}

void *sub_100070168(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  uint64_t v8 = a2[5];
  uint64_t v9 = *(int *)(a3 + 28);
  uint64_t v10 = (void *)((char *)a1 + v9);
  uint64_t v11 = (void *)((char *)a2 + v9);
  a1[4] = a2[4];
  a1[5] = v8;
  uint64_t v12 = type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference(0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v11, 1, v12))
  {
    uint64_t v13 = sub_10017DF08(&qword_100E63750);
    memcpy(v10, v11, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    uint64_t v14 = v11[1];
    *uint64_t v10 = *v11;
    v10[1] = v14;
    uint64_t v15 = *(int *)(v12 + 20);
    uint64_t v16 = (char *)v10 + v15;
    uint64_t v17 = (char *)v11 + v15;
    uint64_t v18 = type metadata accessor for TemperatureScaleConfiguration();
    uint64_t v30 = *(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16);
    swift_bridgeObjectRetain();
    v30(v16, v17, v18);
    uint64_t v19 = (int *)type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
    *(void *)&v16[v19[5]] = *(void *)&v17[v19[5]];
    *(void *)&v16[v19[6]] = *(void *)&v17[v19[6]];
    *(void *)&v16[v19[7]] = *(void *)&v17[v19[7]];
    uint64_t v20 = v19[8];
    uint64_t v21 = &v16[v20];
    uint64_t v22 = &v17[v20];
    uint64_t v24 = *(void *)v22;
    uint64_t v23 = *((void *)v22 + 1);
    *(void *)uint64_t v21 = v24;
    *((void *)v21 + 1) = v23;
    v16[v19[9]] = v17[v19[9]];
    swift_bridgeObjectRetain();
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v10, 0, 1, v12);
  }
  uint64_t v25 = *(int *)(a3 + 32);
  uint64_t v26 = (void *)((char *)a1 + v25);
  uint64_t v27 = (void *)((char *)a2 + v25);
  uint64_t v28 = v27[1];
  *uint64_t v26 = *v27;
  v26[1] = v28;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_10007032C(void *a1)
{
  uint64_t v2 = type metadata accessor for WeatherServiceCaching();
  __chkstk_darwin(v2 - 8);
  uint64_t v3 = sub_10017DF08(&qword_100E98138);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = &v16[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E98148);
  dispatch thunk of ResolverType.resolve<A>(_:)();
  uint64_t v6 = v23;
  if (v23 >= 2)
  {
    swift_getObjectType();
    dispatch thunk of AutomationWeatherDataManagerType.setupStubData()();
    sub_1002312DC(v6);
  }
  type metadata accessor for WeatherAQIScaleCacheManager();
  static WeatherAQIScaleCacheManager.shared.getter();
  sub_1001B1E64(a1, a1[3]);
  uint64_t v7 = type metadata accessor for WDSEndpoint();
  dispatch thunk of ResolverType.resolve<A>(_:)();
  uint64_t result = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v5, 1, v7);
  if (result == 1)
  {
    __break(1u);
    goto LABEL_14;
  }
  sub_1001B1E64(a1, a1[3]);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:name:)();
  if (v23 == 2)
  {
LABEL_14:
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if (v23) {
    static WeatherServiceCaching.disabled.getter();
  }
  else {
    static WeatherServiceCaching.enabled.getter();
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E98150);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  uint64_t v9 = v24;
  if (!v24) {
    goto LABEL_15;
  }
  uint64_t v10 = sub_1001B1E64(&v23, v24);
  void v22[3] = v9;
  uint64_t v11 = sub_100170694(v22);
  (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v9 - 8) + 16))(v11, v10, v9);
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E980E0);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  uint64_t v12 = v21;
  if (!v21)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v13 = sub_1001B1E64(v20, v21);
  void v19[3] = v12;
  uint64_t v14 = sub_100170694(v19);
  (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v12 - 8) + 16))(v14, v13, v12);
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E980D0);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v18)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E98158);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v17)
  {
    type metadata accessor for WeatherService();
    swift_allocObject();
    uint64_t v15 = WeatherService.init(scaleCacheManager:endpoint:caching:networkMonitor:authenticator:fetchOptionsProvider:serviceConfigurationProvider:)();
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v20);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)&v23);
    return v15;
  }
LABEL_18:
  __break(1u);
  return result;
}

uint64_t sub_100070720@<X0>(uint64_t a1@<X1>, double *a2@<X8>)
{
  uint64_t v4 = type metadata accessor for NamedCoordinateSpace();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = &v12[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  static CoordinateSpaceProtocol<>.scrollView.getter();
  GeometryProxy.bounds(of:)();
  (*(void (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
  sub_10024D364((uint64_t)v12, (uint64_t)v13, &qword_100E64498);
  if (v15) {
    double v8 = 0.0;
  }
  else {
    double v8 = v14;
  }
  uint64_t result = type metadata accessor for ConditionSummaryModifier(0);
  double v10 = *(double *)(a1 + *(int *)(result + 28));
  if (v10 >= -v8) {
    double v11 = v8 + v10;
  }
  else {
    double v11 = 0.0;
  }
  *a2 = v11;
  return result;
}

uint64_t sub_100070860@<X0>(uint64_t a1@<X1>, double *a2@<X8>)
{
  uint64_t v4 = type metadata accessor for NamedCoordinateSpace();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = &v13[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t result = type metadata accessor for ConditionModifier(0);
  double v9 = 0.0;
  if (*(unsigned char *)(a1 + *(int *)(result + 24)) == 1)
  {
    uint64_t v10 = result;
    static CoordinateSpaceProtocol<>.scrollView(axis:)();
    GeometryProxy.bounds(of:)();
    (*(void (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
    uint64_t result = sub_10024D364((uint64_t)v13, (uint64_t)v14, &qword_100E64498);
    double v11 = v15;
    double v9 = 0.0;
    if (v16) {
      double v11 = 0.0;
    }
    double v12 = *(double *)(a1 + *(int *)(v10 + 28));
    if (v12 >= -v11) {
      double v9 = v11 + v12;
    }
  }
  *a2 = v9;
  return result;
}

uint64_t sub_1000709B4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = WindowHorizontalSizeClassKey.defaultValue.unsafeMutableAddressor();
  return sub_1000F350C(v2, a1, &qword_100E65ED8);
}

uint64_t sub_1000709E8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_100070A44(&qword_100E621C0, &qword_100EAA930, (uint64_t)qword_100F50B50);
  return sub_1000F350C(v2, a1, &qword_100EAA930);
}

uint64_t sub_100070A44(void *a1, uint64_t *a2, uint64_t a3)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_10017DF08(a2);

  return sub_1002102B0(v5, a3);
}

uint64_t WindowHorizontalSizeClassKey.defaultValue.unsafeMutableAddressor()
{
  return sub_100070A44(&qword_100E621E0, &qword_100E65ED8, (uint64_t)static WindowHorizontalSizeClassKey.defaultValue);
}

uint64_t initializeWithCopy for FullscreenMapPresentationSourceViewModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 16);
  char v5 = *(unsigned char *)(a2 + 24);
  swift_bridgeObjectRetain();
  sub_100195B7C(v4, v5);
  *(void *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 24) = v5;
  return a1;
}

uint64_t sub_100070B1C@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v100 = a2;
  uint64_t v102 = a3;
  uint64_t v4 = sub_10017DF08(&qword_100EB4310);
  __chkstk_darwin(v4 - 8);
  uint64_t v93 = (char *)&v83 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v86 = type metadata accessor for CachedCurrentLocation.EmbeddedLocation();
  __chkstk_darwin(v86);
  uint64_t v87 = (char *)&v83 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10017DF08((uint64_t *)&unk_100EADD50);
  __chkstk_darwin(v7 - 8);
  uint64_t v94 = (uint64_t)&v83 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10017DF08(&qword_100E639E8);
  __chkstk_darwin(v9 - 8);
  uint64_t v90 = (uint64_t)&v83 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v101 = type metadata accessor for Location();
  uint64_t v88 = *(void *)(v101 - 8);
  uint64_t v11 = __chkstk_darwin(v101);
  uint64_t v84 = (char *)&v83 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v85 = (char *)&v83 - v13;
  uint64_t v92 = type metadata accessor for LocationModel();
  uint64_t v95 = *(void *)(v92 - 8);
  __chkstk_darwin(v92);
  double v15 = (char *)&v83 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v89 = type metadata accessor for LocationsState();
  uint64_t v16 = __chkstk_darwin(v89);
  uint64_t v18 = (char *)&v83 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v96 = (uint64_t)&v83 - v19;
  uint64_t v20 = sub_10017DF08(&qword_100EAC4A0);
  __chkstk_darwin(v20 - 8);
  uint64_t v91 = (char *)&v83 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = type metadata accessor for OSSignpostID();
  uint64_t v97 = *(void *)(v22 - 8);
  uint64_t v98 = v22;
  __chkstk_darwin(v22);
  uint64_t v24 = (char *)&v83 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = type metadata accessor for Location.Identifier();
  uint64_t v26 = *(void *)(v25 - 8);
  uint64_t v104 = v25;
  uint64_t v105 = v26;
  uint64_t v27 = __chkstk_darwin(v25);
  uint64_t v29 = (char *)&v83 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27);
  uint64_t v103 = (char *)&v83 - v30;
  uint64_t active = type metadata accessor for LocationViewerActiveLocationState();
  __chkstk_darwin(active - 8);
  uint64_t v33 = (char *)&v83 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = type metadata accessor for ViewState.SecondaryViewState(0);
  __chkstk_darwin(v34);
  uint64_t v36 = (uint64_t *)((char *)&v83 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v37 = (int *)type metadata accessor for ViewState(0);
  __chkstk_darwin(v37);
  uint64_t v39 = (char *)&v83 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v99 = a1;
  sub_1001668D8(a1 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_view, (uint64_t)v39, (void (*)(void))type metadata accessor for ViewState);
  sub_1001668D8((uint64_t)&v39[v37[5]], (uint64_t)v36, (void (*)(void))type metadata accessor for ViewState.SecondaryViewState);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_10015918C((uint64_t)v36, (void (*)(void))type metadata accessor for ViewState.SecondaryViewState);
LABEL_11:
    uint64_t v59 = v101;
    uint64_t v58 = v102;
    sub_10015918C((uint64_t)v39, (void (*)(void))type metadata accessor for ViewState);
    uint64_t v60 = v58;
    uint64_t v61 = 1;
    uint64_t v62 = v59;
    return _s7Weather24LocationCompositionStateOwst_0(v60, v61, 1, v62);
  }
  uint64_t v40 = *v36;
  if (*(void *)&v39[v37[9] + 8] == 1)
  {
    id v41 = [self currentDevice];
    [v41 userInterfaceIdiom];

    if ((v39[v37[7]] & 1) == 0)
    {
      swift_release();
      goto LABEL_11;
    }
  }
  sub_10015918C((uint64_t)v39, (void (*)(void))type metadata accessor for ViewState);
  sub_1001668D8(v40 + OBJC_IVAR____TtCV7Weather23LocationViewerViewState8_Storage_activeLocationState, (uint64_t)v33, (void (*)(void))type metadata accessor for LocationViewerActiveLocationState);
  uint64_t v42 = v104;
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v33, 1, v104) == 1)
  {
    static os_signpost_type_t.event.getter();
    uint64_t v43 = v100;
    static OSSignpostID.exclusive.getter();
    os_signpost(_:dso:log:name:signpostID:)();
    (*(void (**)(char *, uint64_t))(v97 + 8))(v24, v98);
    sub_1001668D8(v99 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_locations, (uint64_t)v18, (void (*)(void))type metadata accessor for LocationsState);
    uint64_t v44 = v94;
    sub_10006DF38((uint64_t)v18, v94, (uint64_t *)&unk_100EADD50);
    sub_10015918C((uint64_t)v18, (void (*)(void))type metadata accessor for LocationsState);
    uint64_t v45 = type metadata accessor for CurrentLocation();
    if (_s7Weather24LocationCompositionStateOwet_0(v44, 1, v45) == 1)
    {
      sub_100178110(v44, (uint64_t *)&unk_100EADD50);
      uint64_t v46 = v90;
      uint64_t v47 = v101;
      _s7Weather24LocationCompositionStateOwst_0(v90, 1, 1, v101);
      uint64_t v48 = (uint64_t)v93;
    }
    else
    {
      uint64_t v46 = v90;
      CurrentLocation.location.getter();
      sub_10015918C(v44, (void (*)(void))&type metadata accessor for CurrentLocation);
      uint64_t v47 = v101;
      int v63 = _s7Weather24LocationCompositionStateOwet_0(v46, 1, v101);
      uint64_t v48 = (uint64_t)v93;
      if (v63 != 1)
      {
        swift_release();
        unsigned int v76 = *(void (**)(char *, uint64_t, uint64_t))(v88 + 32);
        uint64_t v77 = v85;
        v76(v85, v46, v47);
        uint64_t v75 = v102;
        v76((char *)v102, (uint64_t)v77, v47);
        goto LABEL_23;
      }
    }
    sub_100178110(v46, &qword_100E639E8);
    sub_1001B1E64(v43 + 8, v43[11]);
    dispatch thunk of CurrentLocationCacheManagerType.readCachedLocation()();
    uint64_t v64 = type metadata accessor for CachedCurrentLocation();
    if (_s7Weather24LocationCompositionStateOwet_0(v48, 1, v64) == 1)
    {
      swift_release();
      sub_100178110(v48, &qword_100EB4310);
LABEL_27:
      uint64_t v60 = v102;
      uint64_t v61 = 1;
      goto LABEL_28;
    }
    uint64_t v72 = (uint64_t)v87;
    CachedCurrentLocation.embeddedLocation.getter();
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v64 - 8) + 8))(v48, v64);
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      sub_10015918C(v72, (void (*)(void))&type metadata accessor for CachedCurrentLocation.EmbeddedLocation);
      goto LABEL_27;
    }
    uint64_t v73 = *(void (**)(char *, uint64_t, uint64_t))(v88 + 32);
    char v74 = v84;
    v73(v84, v72, v47);
    uint64_t v75 = v102;
    v73((char *)v102, (uint64_t)v74, v47);
LABEL_23:
    uint64_t v60 = v75;
    uint64_t v61 = 0;
LABEL_28:
    uint64_t v62 = v47;
    return _s7Weather24LocationCompositionStateOwst_0(v60, v61, 1, v62);
  }
  uint64_t v94 = v40;
  uint64_t v49 = v105;
  (*(void (**)(char *, char *, uint64_t))(v105 + 32))(v103, v33, v42);
  static os_signpost_type_t.event.getter();
  static OSSignpostID.exclusive.getter();
  os_signpost(_:dso:log:name:signpostID:)();
  (*(void (**)(char *, uint64_t))(v97 + 8))(v24, v98);
  uint64_t v50 = v96;
  sub_1001668D8(v99 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_locations, v96, (void (*)(void))type metadata accessor for LocationsState);
  static CurrentLocation.placeholderIdentifier.getter();
  char v51 = static Location.Identifier.== infix(_:_:)();
  char v52 = *(void **)(v49 + 8);
  uint64_t v105 = v49 + 8;
  uint64_t v100 = v52;
  ((void (*)(char *, uint64_t))v52)(v29, v42);
  if (v51)
  {
    uint64_t v53 = sub_10017DF08(&qword_100E63878);
    uint64_t v54 = (uint64_t)v91;
    uint64_t v55 = (uint64_t)&v91[*(int *)(v53 + 48)];
    type metadata accessor for CurrentLocation();
    swift_storeEnumTagMultiPayload();
    uint64_t v56 = type metadata accessor for LocationOfInterest();
    _s7Weather24LocationCompositionStateOwst_0(v55, 1, 1, v56);
    uint64_t v57 = v92;
    (*(void (**)(uint64_t, void, uint64_t))(v95 + 104))(v54, enum case for LocationModel.current(_:), v92);
    _s7Weather24LocationCompositionStateOwst_0(v54, 0, 1, v57);
  }
  else
  {
    uint64_t v65 = *(void *)(v50 + *(int *)(v89 + 24));
    uint64_t v66 = *(void *)(v65 + 16);
    uint64_t v57 = v92;
    uint64_t v99 = v65;
    if (v66)
    {
      uint64_t v67 = *(void (**)(char *, uint64_t, uint64_t))(v95 + 16);
      uint64_t v68 = v65 + ((*(unsigned __int8 *)(v95 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v95 + 80));
      uint64_t v69 = (void (**)(char *, uint64_t))(v95 + 8);
      uint64_t v70 = *(void *)(v95 + 72);
      swift_bridgeObjectRetain();
      while (1)
      {
        v67(v15, v68, v57);
        LocationModel.identifier.getter();
        char v71 = static Location.Identifier.== infix(_:_:)();
        ((void (*)(char *, uint64_t))v100)(v29, v104);
        if (v71) {
          break;
        }
        (*v69)(v15, v57);
        v68 += v70;
        if (!--v66) {
          goto LABEL_25;
        }
      }
      uint64_t v54 = (uint64_t)v91;
      (*(void (**)(char *, char *, uint64_t))(v95 + 32))(v91, v15, v57);
      uint64_t v78 = v54;
      uint64_t v79 = 0;
    }
    else
    {
      swift_bridgeObjectRetain();
LABEL_25:
      uint64_t v54 = (uint64_t)v91;
      uint64_t v78 = (uint64_t)v91;
      uint64_t v79 = 1;
    }
    _s7Weather24LocationCompositionStateOwst_0(v78, v79, 1, v57);
    swift_bridgeObjectRelease();
    uint64_t v50 = v96;
    uint64_t v42 = v104;
  }
  sub_10015918C(v50, (void (*)(void))type metadata accessor for LocationsState);
  int v80 = _s7Weather24LocationCompositionStateOwet_0(v54, 1, v57);
  uint64_t v81 = v102;
  if (v80 == 1)
  {
    ((void (*)(char *, uint64_t))v100)(v103, v42);
    swift_release();
    sub_100178110(v54, &qword_100EAC4A0);
    uint64_t v60 = v81;
    uint64_t v61 = 1;
    uint64_t v62 = v101;
    return _s7Weather24LocationCompositionStateOwst_0(v60, v61, 1, v62);
  }
  LocationModel.location.getter();
  swift_release();
  ((void (*)(char *, uint64_t))v100)(v103, v42);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v95 + 8))(v54, v57);
}

uint64_t sub_100071840@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v132 = a1;
  uint64_t v3 = sub_10017DF08(&qword_100EA1ED8);
  __chkstk_darwin(v3 - 8);
  uint64_t v129 = (uint64_t)&v109 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for DisplayMetrics();
  __chkstk_darwin(v5 - 8);
  uint64_t v126 = (char *)&v109 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10017DF08(&qword_100E63DB8);
  __chkstk_darwin(v7 - 8);
  uint64_t v122 = (uint64_t)&v109 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for LocationHeaderView(0);
  __chkstk_darwin(v9 - 8);
  uint64_t v125 = (uint64_t)&v109 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v124 = sub_10017DF08(&qword_100EA1E68);
  uint64_t v11 = __chkstk_darwin(v124);
  uint64_t v128 = (uint64_t)&v109 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v123 = (char *)&v109 - v14;
  __chkstk_darwin(v13);
  int64_t v127 = (char *)&v109 - v15;
  uint64_t v16 = type metadata accessor for ContentSizeCategory();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v109 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v22 = (char *)&v109 - v21;
  uint64_t v23 = type metadata accessor for LocationContentTopHeaderView(0);
  uint64_t v24 = __chkstk_darwin(v23);
  uint64_t v26 = (char *)&v109 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v130 = (int *)v24;
  uint64_t v27 = v2 + *(int *)(v24 + 52);
  uint64_t v28 = *(void *)v27;
  char v29 = *(unsigned char *)(v27 + 8);
  sub_100195B7C(*(void *)v27, v29);
  sub_100149AE8();
  char v31 = v30;
  sub_10018F6D8(v28, v29);
  uint64_t v131 = v2;
  sub_1001300BC();
  if ((v31 & 1) == 0)
  {
    sub_1001338DC((uint64_t)v26, (void (*)(void))type metadata accessor for LocationContentTopHeaderView);
    goto LABEL_25;
  }
  uint64_t v32 = type metadata accessor for LocationViewModel();
  char v33 = v26[*(int *)(v32 + 64)];
  sub_1001338DC((uint64_t)v26, (void (*)(void))type metadata accessor for LocationContentTopHeaderView);
  if ((v33 & 1) == 0)
  {
LABEL_25:
    uint64_t v43 = sub_10017DF08(&qword_100EA1EE0);
    return _s7Weather24LocationCompositionStateOwst_0(v132, 1, 1, v43);
  }
  uint64_t v35 = v130;
  uint64_t v34 = v131;
  sub_10014E6E8();
  (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v20, v22, v16);
  int v36 = (*(uint64_t (**)(char *, uint64_t))(v17 + 88))(v20, v16);
  if (v36 == enum case for ContentSizeCategory.extraSmall(_:)
    || v36 == enum case for ContentSizeCategory.small(_:)
    || v36 == enum case for ContentSizeCategory.medium(_:)
    || v36 == enum case for ContentSizeCategory.large(_:)
    || v36 == enum case for ContentSizeCategory.extraLarge(_:)
    || v36 == enum case for ContentSizeCategory.extraExtraLarge(_:)
    || v36 == enum case for ContentSizeCategory.extraExtraExtraLarge(_:))
  {
    (*(void (**)(char *, uint64_t))(v17 + 8))(v22, v16);
LABEL_41:
    memcpy(__dst, (const void *)(v34 + v35[10]), 0x49uLL);
    sub_1001BEAB0((uint64_t)__dst);
    sub_1001BEAF4();
    sub_1001BEAB0((uint64_t)__dst);
    double v50 = v141[5] + v141[5];
    goto LABEL_42;
  }
  uint64_t v45 = *(void (**)(char *, uint64_t))(v17 + 8);
  if (v36 != enum case for ContentSizeCategory.accessibilityMedium(_:)
    && v36 != enum case for ContentSizeCategory.accessibilityLarge(_:)
    && v36 != enum case for ContentSizeCategory.accessibilityExtraLarge(_:)
    && v36 != enum case for ContentSizeCategory.accessibilityExtraExtraLarge(_:)
    && v36 != enum case for ContentSizeCategory.accessibilityExtraExtraExtraLarge(_:))
  {
    v45(v20, v16);
    v45(v22, v16);
    goto LABEL_41;
  }
  v45(v22, v16);
  memcpy(__dst, (const void *)(v34 + v35[10]), 0x49uLL);
  sub_1001BEAB0((uint64_t)__dst);
  sub_1001BEAF4();
  sub_1001BEAB0((uint64_t)__dst);
  double v50 = v141[7];
LABEL_42:
  memcpy(v141, (const void *)(v34 + *(int *)(v32 + 24)), 0xA2uLL);
  uint64_t v51 = v35[6];
  uint64_t v52 = v34 + v35[5];
  uint64_t v54 = *(void *)v52;
  uint64_t v110 = *(void *)(v52 + 8);
  uint64_t v53 = v110;
  int v55 = *(unsigned __int8 *)(v52 + 16);
  uint64_t v56 = *(void *)(v52 + 24);
  uint64_t v58 = *(void *)(v34 + v51);
  uint64_t v116 = *(void *)(v34 + v51 + 8);
  uint64_t v57 = v116;
  uint64_t v117 = v58;
  unsigned __int8 v59 = *(unsigned char *)(v34 + v51 + 16);
  int v115 = v59;
  uint64_t v60 = *(void *)(v34 + v51 + 24);
  uint64_t v61 = v35[8];
  uint64_t v62 = (uint64_t *)(v34 + v35[7]);
  unint64_t v119 = *v62;
  uint64_t v118 = v62[1];
  unint64_t v64 = v62[2];
  uint64_t v63 = v62[3];
  unint64_t v120 = v64;
  uint64_t v121 = v60;
  uint64_t v109 = v63;
  uint64_t v114 = v34 + v61;
  uint64_t v65 = v34 + v35[11];
  uint64_t v66 = *(void *)v65;
  char v67 = *(unsigned char *)(v65 + 8);
  sub_1000CE848((uint64_t)v141);
  uint64_t v113 = v54;
  int v112 = v55;
  sub_100190CC4(v54, v53, v55);
  uint64_t v111 = v56;
  swift_bridgeObjectRetain();
  sub_100190CC4(v58, v57, v59);
  swift_bridgeObjectRetain();
  unint64_t v68 = v109;
  sub_100147E1C(v119, v118, v120, v109);
  sub_100195B7C(v66, v67);
  sub_100149AE8();
  LOBYTE(v53) = v69;
  sub_10018F6D8(v66, v67);
  sub_1000CF838(v53 & 1);
  uint64_t v70 = v110;
  uint64_t v71 = Text.font(_:)();
  uint64_t v73 = v72;
  LOBYTE(v55) = v74;
  swift_release();
  uint64_t v75 = type metadata accessor for Text.WritingMode();
  uint64_t v76 = v122;
  _s7Weather24LocationCompositionStateOwst_0(v122, 1, 1, v75);
  Text.Measurements.size(of:in:writingMode:)();
  double v78 = v77;
  sub_100191924(v71, v73, v55 & 1);
  swift_bridgeObjectRelease();
  sub_100178110(v76, &qword_100E63DB8);
  v108.n128_u64[1] = v118;
  v108.n128_u64[0] = v119;
  uint64_t v79 = v125;
  sub_1000CFA3C(v141, v113, v70, v112, v111, v117, v116, v115, v125, v78, v50, v121, v108, v120, v68);
  LOBYTE(v71) = static Edge.Set.leading.getter();
  char v80 = static Edge.Set.trailing.getter();
  char v81 = Edge.Set.init(rawValue:)();
  Edge.Set.init(rawValue:)();
  if (Edge.Set.init(rawValue:)() != v71) {
    char v81 = Edge.Set.init(rawValue:)();
  }
  Edge.Set.init(rawValue:)();
  char v82 = Edge.Set.init(rawValue:)();
  uint64_t v83 = (uint64_t)v127;
  if (v82 != v80) {
    char v81 = Edge.Set.init(rawValue:)();
  }
  uint64_t v85 = v130;
  uint64_t v84 = v131;
  EdgeInsets.init(_all:)();
  uint64_t v87 = v86;
  uint64_t v89 = v88;
  uint64_t v91 = v90;
  uint64_t v93 = v92;
  uint64_t v94 = (uint64_t)v123;
  sub_1001300BC();
  uint64_t v95 = v94 + *(int *)(v124 + 36);
  *(unsigned char *)uint64_t v95 = v81;
  *(void *)(v95 + 8) = v87;
  *(void *)(v95 + 16) = v89;
  *(void *)(v95 + 24) = v91;
  *(void *)(v95 + 32) = v93;
  *(unsigned char *)(v95 + 40) = 0;
  sub_1001338DC(v79, (void (*)(void))type metadata accessor for LocationHeaderView);
  sub_10024D364(v94, v83, &qword_100EA1E68);
  uint64_t v96 = (const void *)(v84 + v85[10]);
  memcpy(v140, v96, 0x49uLL);
  sub_1001BEAB0((uint64_t)v140);
  sub_1001BEAF4();
  sub_1001BEAB0((uint64_t)v140);
  uint64_t v97 = (uint64_t)v126;
  sub_1001EFFBC();
  sub_1009F3538(v97);
  sub_1001338DC(v97, (void (*)(void))type metadata accessor for DisplayMetrics);
  if (qword_100E62990 != -1) {
    swift_once();
  }
  memcpy(v139, v96, 0x49uLL);
  sub_1001BEAB0((uint64_t)v139);
  sub_1001BEAF4();
  sub_1001BEAB0((uint64_t)v139);
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v131 = v133;
  char v98 = v134;
  uint64_t v99 = v135;
  char v100 = v136;
  uint64_t v101 = v137;
  uint64_t v102 = v138;
  uint64_t v103 = v128;
  sub_10006DF38(v83, v128, &qword_100EA1E68);
  uint64_t v104 = v83;
  uint64_t v105 = v129;
  sub_10006DF38(v103, v129, &qword_100EA1E68);
  uint64_t v106 = v105 + *(int *)(sub_10017DF08(&qword_100EA1EE8) + 48);
  *(void *)uint64_t v106 = 0;
  *(unsigned char *)(v106 + 8) = 1;
  *(void *)(v106 + 16) = v131;
  *(unsigned char *)(v106 + 24) = v98;
  *(void *)(v106 + 32) = v99;
  *(unsigned char *)(v106 + 40) = v100;
  *(void *)(v106 + 48) = v101;
  *(void *)(v106 + 56) = v102;
  sub_100178110(v104, &qword_100EA1E68);
  sub_100178110(v103, &qword_100EA1E68);
  uint64_t v107 = sub_10017DF08(&qword_100EA1EE0);
  _s7Weather24LocationCompositionStateOwst_0(v105, 0, 1, v107);
  return sub_10024D364(v105, v132, &qword_100EA1ED8);
}

uint64_t sub_100072378(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10024BAD4);
}

uint64_t sub_10007238C()
{
  uint64_t v1 = sub_10017DF08(&qword_100E65FA8);
  uint64_t v2 = sub_100109308(v1);
  __chkstk_darwin(v2);
  sub_10012B938();
  sub_100188C14();
  sub_10006DF38(v3, v4, v5);
  return sub_100072408(v0);
}

uint64_t sub_100072408(uint64_t a1)
{
  return sub_1000F334C(a1, &qword_100E65FA8, (void (*)(uint64_t))sub_1001AED6C);
}

uint64_t sub_100072430()
{
  uint64_t v0 = type metadata accessor for Scope();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  ProxyContainer.public.getter();
  sub_10017DF08(&qword_100E870A8);
  sub_100179D0C();
  swift_release();
  swift_release();
  ProxyContainer.public.getter();
  sub_10017DF08(&qword_100E870B0);
  sub_100179D0C();
  swift_release();
  swift_release();
  ProxyContainer.public.getter();
  sub_10017DF08(&qword_100E7C100);
  sub_100179D0C();
  swift_release();
  uint64_t v2 = *(void (**)(uint64_t))(v1 + 104);
  uint64_t v3 = sub_1001800D0();
  v2(v3);
  Definition.inScope(_:)();
  swift_release();
  swift_release();
  uint64_t v4 = *(void (**)(uint64_t))(v1 + 8);
  uint64_t v5 = sub_10017D22C();
  v4(v5);
  ProxyContainer.public.getter();
  sub_10017DF08(&qword_100E870B8);
  sub_100179D0C();
  swift_release();
  uint64_t v6 = sub_1001800D0();
  v2(v6);
  Definition.inScope(_:)();
  swift_release();
  swift_release();
  uint64_t v7 = sub_10017D22C();
  v4(v7);
  ProxyContainer.private.getter();
  swift_retain();
  RegistrationContainer.lazy(block:)();
  swift_release();
  return swift_release();
}

uint64_t sub_100072690@<X0>(void (*a1)(char *, char *, uint64_t)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v44 = a1;
  uint64_t v47 = a2;
  uint64_t v4 = type metadata accessor for NSNotificationCenter.Publisher();
  uint64_t v45 = *(void *)(v4 - 8);
  uint64_t v46 = v4;
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10017DF08(&qword_100E9F228);
  uint64_t v8 = v7 - 8;
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10017DF08(&qword_100E9F230);
  uint64_t v12 = v11 - 8;
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_10017DF08(&qword_100E9F238);
  uint64_t v16 = v15 - 8;
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v42 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = *(void *)(v3 + 8);
  uint64_t v49 = *(void *)(v3 + 24);
  long long v50 = *(_OWORD *)(v3 + 32);
  char v51 = *(unsigned char *)(v3 + 48);
  uint64_t v20 = swift_allocObject();
  long long v21 = *(_OWORD *)(v3 + 16);
  *(_OWORD *)(v20 + 16) = *(_OWORD *)v3;
  *(_OWORD *)(v20 + 32) = v21;
  *(_OWORD *)(v20 + 48) = *(_OWORD *)(v3 + 32);
  *(unsigned char *)(v20 + 64) = *(unsigned char *)(v3 + 48);
  uint64_t v22 = sub_10017DF08(&qword_100E9F240);
  (*(void (**)(char *, void, uint64_t))(*(void *)(v22 - 8) + 16))(v10, v44, v22);
  uint64_t v23 = (uint64_t (**)())&v10[*(int *)(v8 + 44)];
  *uint64_t v23 = sub_100214018;
  v23[1] = (uint64_t (*)())v20;
  v23[2] = 0;
  v23[3] = 0;
  uint64_t v24 = swift_allocObject();
  long long v25 = *(_OWORD *)(v3 + 16);
  *(_OWORD *)(v24 + 16) = *(_OWORD *)v3;
  *(_OWORD *)(v24 + 32) = v25;
  *(_OWORD *)(v24 + 48) = *(_OWORD *)(v3 + 32);
  *(unsigned char *)(v24 + 64) = *(unsigned char *)(v3 + 48);
  sub_1000F350C((uint64_t)v10, (uint64_t)v14, &qword_100E9F228);
  uint64_t v26 = &v14[*(int *)(v12 + 44)];
  *(void *)uint64_t v26 = 0;
  *((void *)v26 + 1) = 0;
  *((void *)v26 + 2) = sub_1008EAF00;
  *((void *)v26 + 3) = v24;
  uint64_t v48 = v19;
  swift_retain();
  swift_retain();
  sub_100072BA8((uint64_t)&v50);
  swift_retain();
  swift_retain();
  sub_100072BA8((uint64_t)&v50);
  sub_1000F3400((uint64_t)v10, &qword_100E9F228);
  id v43 = self;
  id v27 = [v43 defaultCenter];
  NSNotificationCenter.publisher(for:object:)();

  uint64_t v28 = swift_allocObject();
  long long v29 = *(_OWORD *)(v3 + 16);
  *(_OWORD *)(v28 + 16) = *(_OWORD *)v3;
  *(_OWORD *)(v28 + 32) = v29;
  *(_OWORD *)(v28 + 48) = *(_OWORD *)(v3 + 32);
  *(unsigned char *)(v28 + 64) = *(unsigned char *)(v3 + 48);
  sub_1000F350C((uint64_t)v14, (uint64_t)v18, &qword_100E9F230);
  char v30 = &v18[*(int *)(v16 + 60)];
  uint64_t v31 = v45;
  uint64_t v32 = v46;
  uint64_t v44 = *(void (**)(char *, char *, uint64_t))(v45 + 16);
  v44(v30, v6, v46);
  char v33 = (uint64_t (**)(uint64_t))&v18[*(int *)(v16 + 64)];
  char *v33 = sub_1008EAF0C;
  v33[1] = (uint64_t (*)(uint64_t))v28;
  swift_retain();
  swift_retain();
  sub_100072BA8((uint64_t)&v50);
  uint64_t v34 = *(void (**)(char *, uint64_t))(v31 + 8);
  v34(v6, v32);
  sub_1000F3400((uint64_t)v14, &qword_100E9F230);
  id v35 = [v43 defaultCenter];
  NSNotificationCenter.publisher(for:object:)();

  uint64_t v36 = swift_allocObject();
  long long v37 = *(_OWORD *)(v3 + 16);
  *(_OWORD *)(v36 + 16) = *(_OWORD *)v3;
  *(_OWORD *)(v36 + 32) = v37;
  *(_OWORD *)(v36 + 48) = *(_OWORD *)(v3 + 32);
  *(unsigned char *)(v36 + 64) = *(unsigned char *)(v3 + 48);
  uint64_t v38 = v47;
  sub_1000F350C((uint64_t)v18, v47, &qword_100E9F238);
  uint64_t v39 = sub_10017DF08(&qword_100E9F248);
  v44((char *)(v38 + *(int *)(v39 + 52)), v6, v32);
  uint64_t v40 = (uint64_t (**)(uint64_t))(v38 + *(int *)(v39 + 56));
  *uint64_t v40 = sub_1008EAF18;
  v40[1] = (uint64_t (*)(uint64_t))v36;
  swift_retain();
  swift_retain();
  sub_100072BA8((uint64_t)&v50);
  v34(v6, v32);
  return sub_1000F3400((uint64_t)v18, &qword_100E9F238);
}

uint64_t sub_100072BA8(uint64_t a1)
{
  return a1;
}

uint64_t assignWithCopy for CollisionModifier(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v4 = *(void *)(a2 + 48);
  char v5 = *(unsigned char *)(a2 + 56);
  sub_100195B7C(v4, v5);
  uint64_t v6 = *(void *)(a1 + 48);
  char v7 = *(unsigned char *)(a1 + 56);
  *(void *)(a1 + 48) = v4;
  *(unsigned char *)(a1 + 56) = v5;
  sub_10018F6D8(v6, v7);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_100072C94()
{
  uint64_t v48 = type metadata accessor for Domain();
  sub_100179C0C();
  uint64_t v46 = v0;
  __chkstk_darwin(v1);
  uint64_t v47 = (char *)&v41 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_10017DF08(&qword_100E6F8F8);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = v4;
  uint64_t v6 = __chkstk_darwin(v3);
  uint64_t v8 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v41 - v9;
  type metadata accessor for Access();
  sub_100179C0C();
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = 0;
  unint64_t v60 = 0xE000000000000000;
  uint64_t v15 = *(void (**)(void))(v14 + 104);
  uint64_t v45 = v13;
  v15();
  sub_10017DF08(&qword_100E935B8);
  uint64_t v16 = *(void *)(v4 + 72);
  unint64_t v17 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v51 = v16;
  uint64_t v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_100C251B0;
  unint64_t v50 = v17;
  uint64_t v54 = 0;
  unint64_t v55 = 0xE000000000000000;
  Option.init(label:value:description:)();
  uint64_t v19 = Array.sorting<A>(on:)();
  uint64_t v20 = *(void *)(v19 + 16);
  if (v20)
  {
    uint64_t v49 = v19;
    uint64_t v42 = v18;
    uint64_t v44 = v8;
    uint64_t v58 = (char *)_swiftEmptyArrayStorage;
    sub_1002151FC();
    uint64_t v21 = 0;
    uint64_t v43 = v5;
    uint64_t v22 = (void (**)(char *, char *, uint64_t))(v5 + 32);
    do
    {
      uint64_t v23 = v3;
      if (*(unsigned char *)(v49 + v21 + 32))
      {
        uint64_t v24 = _s5DemosO10Winter2024CMa(0);
        swift_allocObject();
        uint64_t v25 = sub_1007A38EC();
        uint64_t v26 = 0x30327265746E6977;
        unint64_t v27 = 0xEA00000000003432;
        uint64_t v28 = &off_100E276E0;
      }
      else
      {
        uint64_t v24 = _s5DemosO8Fall2024CMa(0);
        swift_allocObject();
        uint64_t v25 = sub_100043608();
        uint64_t v26 = 0x343230326C6C6166;
        unint64_t v27 = 0xE800000000000000;
        uint64_t v28 = &off_100E27710;
      }
      uint64_t v56 = v24;
      uint64_t v57 = v28;
      uint64_t v54 = v25;
      sub_1001B1E64(&v54, v24);
      ((void (__cdecl *)())v28[1])();
      uint64_t v52 = (void *)v26;
      unint64_t v53 = v27;
      Option.init(label:value:description:)();
      _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)&v54);
      long long v29 = v58;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1002151FC();
        long long v29 = v58;
      }
      uint64_t v3 = v23;
      unint64_t v30 = *((void *)v29 + 2);
      if (v30 >= *((void *)v29 + 3) >> 1)
      {
        sub_1002151FC();
        long long v29 = v58;
      }
      ++v21;
      *((void *)v29 + 2) = v30 + 1;
      (*v22)(&v29[v50 + v30 * v51], v10, v23);
    }
    while (v20 != v21);
    swift_bridgeObjectRelease();
    uint64_t v5 = v43;
    uint64_t v8 = v44;
    uint64_t v18 = v42;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  uint64_t v54 = v18;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_100073318();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v31 = v54;
  type metadata accessor for LocalPreset();
  sub_100015270();
  uint64_t v32 = Array.sorting<A>(on:)();
  swift_bridgeObjectRelease();
  uint64_t v33 = *(void *)(v32 + 16);
  if (v33)
  {
    uint64_t v49 = v31;
    uint64_t v52 = _swiftEmptyArrayStorage;
    sub_1002151FC();
    uint64_t v34 = v52;
    id v35 = (void (**)(char *, char *, uint64_t))(v5 + 32);
    uint64_t v44 = (char *)v32;
    uint64_t v36 = (unint64_t *)(v32 + 40);
    do
    {
      unint64_t v37 = *v36;
      uint64_t v54 = *(v36 - 1);
      unint64_t v55 = v37;
      swift_bridgeObjectRetain_n();
      Option.init(label:value:description:)();
      swift_bridgeObjectRelease();
      uint64_t v52 = v34;
      uint64_t v38 = v8;
      unint64_t v39 = v34[2];
      if (v39 >= v34[3] >> 1)
      {
        sub_1002151FC();
        uint64_t v34 = v52;
      }
      v36 += 2;
      v34[2] = v39 + 1;
      (*v35)((char *)v34 + v50 + v39 * v51, v38, v3);
      --v33;
      uint64_t v8 = v38;
    }
    while (v33);
    swift_bridgeObjectRelease();
    uint64_t v31 = v49;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  sub_10017DF08(&qword_100E935C0);
  uint64_t v54 = v31;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_100073318();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, void, uint64_t))(v46 + 104))(v47, enum case for Domain.standard(_:), v48);
  uint64_t result = Setting<>.init(_:defaultValue:domain:access:options:)();
  qword_100F51B68 = result;
  return result;
}

void sub_100073318()
{
  sub_10019E918();
  if (v5)
  {
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (!sub_1001A05DC() || v4 > *(void *)(v2 + 24) >> 1)
  {
    sub_10017A054();
    uint64_t v2 = sub_100073418();
  }
  if (!*(void *)(v0 + 16))
  {
    if (!v3) {
      goto LABEL_11;
    }
    goto LABEL_13;
  }
  uint64_t v6 = (*(void *)(v2 + 24) >> 1) - *(void *)(v2 + 16);
  uint64_t v7 = *(void *)(sub_10017DF08(&qword_100E6F8F8) - 8);
  if (v6 < v3)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  sub_100215BEC(v0 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80)), v3);
  if (!v3)
  {
LABEL_11:
    swift_bridgeObjectRelease();
    *uint64_t v1 = v2;
    return;
  }
  sub_1001A1D6C();
  if (!v5)
  {
    *(void *)(v2 + 16) = v8;
    goto LABEL_11;
  }
LABEL_15:
  __break(1u);
}

uint64_t sub_100073418()
{
  return sub_10012A068();
}

uint64_t sub_10007342C(uint64_t a1)
{
  uint64_t v2 = (int *)type metadata accessor for WeatherConditionBackgroundModifier(0);
  uint64_t v97 = *((void *)v2 - 1);
  __chkstk_darwin(v2);
  uint64_t v98 = v3;
  uint64_t v99 = (uint64_t)&v76 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10017DF08(&qword_100EAA930);
  __chkstk_darwin(v4 - 8);
  uint64_t v94 = (void (*)(char *, uint64_t, uint64_t))((char *)&v76 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = sub_10017DF08(&qword_100EB3360);
  __chkstk_darwin(v6 - 8);
  uint64_t v93 = (uint64_t)&v76 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v103 = type metadata accessor for WeatherConditionBackgroundModel();
  uint64_t v8 = *(void *)(v103 - 8);
  uint64_t v9 = __chkstk_darwin(v103);
  uint64_t v95 = v10;
  uint64_t v96 = (char *)&v76 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v102 = (char *)&v76 - v11;
  uint64_t v80 = type metadata accessor for WeatherVFXViewModel();
  uint64_t v78 = *(void *)(v80 - 8);
  __chkstk_darwin(v80);
  double v77 = (char *)&v76 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_10017DF08(&qword_100EB4A80);
  __chkstk_darwin(v13 - 8);
  uint64_t v79 = (char *)&v76 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v89 = type metadata accessor for BackgroundAnimationKind();
  uint64_t v88 = *(void *)(v89 - 8);
  __chkstk_darwin(v89);
  uint64_t v87 = (char *)&v76 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v86 = type metadata accessor for VFXEffectViewID();
  uint64_t v16 = *(void *)(v86 - 8);
  uint64_t v17 = __chkstk_darwin(v86);
  uint64_t v85 = (char *)&v76 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v83 = (char *)&v76 - v19;
  uint64_t v84 = type metadata accessor for WeatherConditionBackgroundOptions();
  uint64_t v82 = *(void *)(v84 - 8);
  __chkstk_darwin(v84);
  uint64_t v21 = (char *)&v76 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v81 = type metadata accessor for BackgroundAnimationData();
  uint64_t v22 = *(void *)(v81 - 8);
  __chkstk_darwin(v81);
  uint64_t v24 = (char *)&v76 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_10017DF08(&qword_100E64A60);
  __chkstk_darwin(v25 - 8);
  unint64_t v27 = (char *)&v76 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = (void ***)(a1 + v2[28]);
  unint64_t v30 = *v28;
  uint64_t v29 = (uint64_t)v28[1];
  long long aBlock = v30;
  uint64_t v105 = v29;
  sub_10017DF08(&qword_100EB4A88);
  State.wrappedValue.getter();
  uint64_t v31 = a1 + v2[10];
  uint64_t v100 = v8;
  uint64_t v32 = v8 + 16;
  uint64_t v33 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  uint64_t v34 = v103;
  uint64_t v90 = v33;
  uint64_t v91 = v32;
  v33(v27, v31, v103);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v27, 0, 1, v34);
  uint64_t v92 = v27;
  sub_1000403F8((uint64_t)v27);
  swift_release();
  uint64_t v101 = v2;
  uint64_t v35 = a1;
  uint64_t v36 = (void ***)(a1 + v2[21]);
  uint64_t v37 = v31;
  unint64_t v39 = *v36;
  uint64_t v38 = (uint64_t)v36[1];
  long long aBlock = v39;
  uint64_t v105 = v38;
  sub_10017DF08(&qword_100EB4A78);
  State.wrappedValue.getter();
  *(unsigned char *)(v110 + 16) = 1;
  swift_release();
  WeatherConditionBackgroundModel.animationData.getter();
  BackgroundAnimationData.options.getter();
  (*(void (**)(char *, uint64_t))(v22 + 8))(v24, v81);
  uint64_t v40 = v83;
  WeatherConditionBackgroundOptions.effectViewID.getter();
  (*(void (**)(char *, uint64_t))(v82 + 8))(v21, v84);
  uint64_t v41 = v85;
  uint64_t v42 = v86;
  (*(void (**)(char *, void, uint64_t))(v16 + 104))(v85, enum case for VFXEffectViewID.locationViewer(_:), v86);
  uint64_t v43 = v41;
  LOBYTE(v41) = static VFXEffectViewID.== infix(_:_:)();
  uint64_t v44 = *(void (**)(char *, uint64_t))(v16 + 8);
  v44(v43, v42);
  v44(v40, v42);
  if (v41)
  {
    if (qword_100E62BA8 != -1) {
      swift_once();
    }
    uint64_t v45 = Namespace.wrappedValue.getter();
    swift_beginAccess();
    sub_100027284(&v110, v45);
    swift_endAccess();
  }
  uint64_t v46 = v87;
  WeatherConditionBackgroundModel.animationKind.getter();
  uint64_t v47 = v88;
  uint64_t v48 = v89;
  if ((*(unsigned int (**)(char *, uint64_t))(v88 + 88))(v46, v89) == enum case for BackgroundAnimationKind.vfx(_:))
  {
    if (WeatherVFXConditionBackground.isLoaded.getter())
    {
      uint64_t v49 = (uint64_t)v79;
      WeatherVFXConditionBackground.backgroundEffectModel.getter();
      uint64_t v50 = v80;
      if (_s7Weather24LocationCompositionStateOwet_0(v49, 1, v80))
      {
        sub_100178110(v49, &qword_100EB4A80);
      }
      else
      {
        uint64_t v70 = v78;
        uint64_t v71 = v77;
        (*(void (**)(char *, uint64_t, uint64_t))(v78 + 16))(v77, v49, v50);
        sub_100178110(v49, &qword_100EB4A80);
        uint64_t v72 = (void *)WeatherVFXViewModel.effect.getter();
        (*(void (**)(char *, uint64_t))(v70 + 8))(v71, v50);
        if (v72)
        {
          uint64_t v73 = dispatch thunk of VFXEffect.scene.getter();
          if (!v73
            || (char v74 = (void *)v73,
                unint64_t v75 = dispatch thunk of VFXScene.effects.getter(),
                v74,
                LOBYTE(v74) = sub_100B09B3C((uint64_t)v72, v75),
                swift_bridgeObjectRelease(),
                (v74 & 1) == 0))
          {
            WeatherVFXConditionBackground.reset(animated:)(0);
          }
        }
      }
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v47 + 8))(v46, v48);
  }
  uint64_t v51 = (uint64_t)v102;
  uint64_t v52 = v90;
  v90(v102, v37, v103);
  uint64_t v53 = v35;
  sub_10017DF08(&qword_100EB4860);
  uint64_t v54 = (uint64_t)v92;
  State.wrappedValue.getter();
  uint64_t v55 = type metadata accessor for DynamicTypeSize();
  uint64_t v56 = v93;
  _s7Weather24LocationCompositionStateOwst_0(v93, 1, 1, v55);
  uint64_t v57 = type metadata accessor for TargetWindowSizeClass();
  uint64_t v58 = v94;
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v94, 1, 1, v57);
  sub_1000FDF14(v54, v51, v56, v58, 0, 0);
  sub_100178110((uint64_t)v58, &qword_100EAA930);
  sub_100178110(v56, &qword_100EB3360);
  sub_100178110(v54, &qword_100E64A60);
  uint64_t v59 = self;
  uint64_t v60 = v99;
  sub_1001C9BA4(v53, v99, (void (*)(void))type metadata accessor for WeatherConditionBackgroundModifier);
  uint64_t v61 = v96;
  uint64_t v62 = v51;
  uint64_t v63 = v103;
  v52(v96, v62, v103);
  unint64_t v64 = (*(unsigned __int8 *)(v97 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v97 + 80);
  uint64_t v65 = v100;
  unint64_t v66 = (v98 + *(unsigned __int8 *)(v100 + 80) + v64) & ~(unint64_t)*(unsigned __int8 *)(v100 + 80);
  uint64_t v67 = swift_allocObject();
  sub_1001CA430(v60, v67 + v64);
  (*(void (**)(unint64_t, char *, uint64_t))(v65 + 32))(v67 + v66, v61, v63);
  __n128 v108 = sub_10022592C;
  uint64_t v109 = v67;
  long long aBlock = _NSConcreteStackBlock;
  uint64_t v105 = 1107296256;
  uint64_t v106 = sub_10010A4D4;
  uint64_t v107 = &unk_100E39890;
  unint64_t v68 = _Block_copy(&aBlock);
  swift_release();
  [v59 setCompletionBlock:v68];
  _Block_release(v68);
  return (*(uint64_t (**)(char *, uint64_t))(v65 + 8))(v102, v63);
}

uint64_t sub_100073F4C@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v33 = a3;
  uint64_t v34 = a1;
  uint64_t v37 = a4;
  uint64_t v6 = type metadata accessor for NSNotificationCenter.Publisher();
  uint64_t v35 = *(void *)(v6 - 8);
  uint64_t v36 = v6;
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for ColorScheme();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_10017DF08(&qword_100E9C368);
  uint64_t v14 = v13 - 8;
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_10017DF08(&qword_100E9C370);
  uint64_t v18 = v17 - 8;
  __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v33 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v38 = a2;
  uint64_t v39 = a3;
  sub_10017DF08(&qword_100E65950);
  State.wrappedValue.getter();
  uint64_t v21 = (unsigned int *)&enum case for ColorScheme.light(_:);
  if (!v40) {
    uint64_t v21 = (unsigned int *)&enum case for ColorScheme.dark(_:);
  }
  (*(void (**)(char *, void, uint64_t))(v10 + 104))(v12, *v21, v9);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v23 = (uint64_t *)&v16[*(int *)(v14 + 44)];
  uint64_t v24 = sub_10017DF08(&qword_100EAACE0);
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))((char *)v23 + *(int *)(v24 + 28), v12, v9);
  *uint64_t v23 = KeyPath;
  uint64_t v25 = sub_10017DF08(&qword_100E9C378);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v25 - 8) + 16))(v16, v34, v25);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  id v26 = [self defaultCenter];
  NSNotificationCenter.publisher(for:object:)();

  uint64_t v27 = swift_allocObject();
  *(unsigned char *)(v27 + 16) = a2;
  *(void *)(v27 + 24) = v33;
  sub_10006DF38((uint64_t)v16, (uint64_t)v20, &qword_100E9C368);
  uint64_t v28 = v35;
  uint64_t v29 = v36;
  (*(void (**)(char *, char *, uint64_t))(v35 + 16))(&v20[*(int *)(v18 + 60)], v8, v36);
  unint64_t v30 = (uint64_t (**)())&v20[*(int *)(v18 + 64)];
  *unint64_t v30 = sub_1008754DC;
  v30[1] = (uint64_t (*)())v27;
  uint64_t v31 = *(void (**)(char *, uint64_t))(v28 + 8);
  swift_retain();
  v31(v8, v29);
  sub_1001781AC((uint64_t)v16, &qword_100E9C368);
  return sub_10020E72C((uint64_t)v20, v37, &qword_100E9C370);
}

uint64_t sub_100074324@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, unsigned char *a5@<X8>)
{
  uint64_t v43 = a3;
  uint64_t v44 = a4;
  uint64_t v42 = a2;
  uint64_t v45 = a5;
  uint64_t v7 = sub_10017DF08(qword_100E66490);
  uint64_t v8 = sub_100109308(v7);
  __chkstk_darwin(v8);
  sub_10016278C();
  uint64_t v11 = v9 - v10;
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v41 - v13;
  uint64_t v15 = type metadata accessor for WeatherMapPresentationState(0);
  sub_100162E4C();
  __chkstk_darwin(v16);
  sub_10016278C();
  uint64_t v19 = v17 - v18;
  __chkstk_darwin(v20);
  uint64_t v22 = (char *)&v41 - v21;
  uint64_t v23 = sub_10017DF08(&qword_100E65BC0);
  uint64_t v24 = sub_100109308(v23);
  __chkstk_darwin(v24);
  sub_10016278C();
  uint64_t v27 = v25 - v26;
  __chkstk_darwin(v28);
  unint64_t v30 = (char *)&v41 - v29;
  int v31 = 128;
  uint64_t v46 = a1;
  switch((char)a1)
  {
    case 1:
    case 3:
      if (DeviceIsSlow()) {
        int v31 = 64;
      }
      else {
        int v31 = 65;
      }
      break;
    case 2:
      int v31 = 65;
      break;
    case 4:
      break;
    case 5:
      int v31 = sub_100B5996C(v42);
      break;
    default:
      int v31 = 64;
      if (v42[1] != 1)
      {
        if (DeviceIsSlow()) {
          int v31 = 64;
        }
        else {
          int v31 = 65;
        }
      }
      break;
  }
  sub_10006DF38(v43, v27, &qword_100E65BC0);
  sub_1000747A4(v5, (uint64_t)v22, (void (*)(void))type metadata accessor for WeatherMapPresentationState);
  uint64_t v32 = type metadata accessor for WeatherMapOverlayKind();
  if (_s7Weather24LocationCompositionStateOwet_0(v27, 1, v32) == 1)
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 16))(v30, &v22[*(int *)(v15 + 24)], v32);
    sub_1000746F4((uint64_t)v22);
    sub_1001781AC(v27, &qword_100E65BC0);
  }
  else
  {
    sub_1000746F4((uint64_t)v22);
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v32 - 8) + 32))(v30, v27, v32);
  }
  sub_1001093B0();
  _s7Weather24LocationCompositionStateOwst_0(v33, v34, v35, v32);
  sub_10006DF38(v44, v11, qword_100E66490);
  sub_1000747A4(v5, v19, (void (*)(void))type metadata accessor for WeatherMapPresentationState);
  uint64_t v36 = type metadata accessor for WeatherMapTrackingState(0);
  if (_s7Weather24LocationCompositionStateOwet_0(v11, 1, v36) == 1)
  {
    sub_1000747A4(v19 + *(int *)(v15 + 32), (uint64_t)v14, (void (*)(void))type metadata accessor for WeatherMapTrackingState);
    sub_1000746F4(v19);
    sub_1001781AC(v11, qword_100E66490);
  }
  else
  {
    sub_1000746F4(v19);
    sub_10006DED4(v11, (uint64_t)v14);
  }
  sub_1001093B0();
  _s7Weather24LocationCompositionStateOwst_0(v37, v38, v39, v36);
  sub_10006D9DC(v46, v31, (uint64_t)v30, 0, 0, (uint64_t)v14, v45);
  sub_1001781AC((uint64_t)v14, qword_100E66490);
  return sub_1001781AC((uint64_t)v30, &qword_100E65BC0);
}

uint64_t sub_1000746F4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for WeatherMapPresentationState(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100074750(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  uint64_t v4 = sub_10011BFA4();
  v5(v4);
  return a2;
}

uint64_t sub_1000747A4(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  uint64_t v4 = sub_10011BFA4();
  v5(v4);
  return a2;
}

uint64_t sub_1000747F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF) {
    return sub_100163020(*(void *)(a1 + 16));
  }
  uint64_t v7 = sub_10017DF08(&qword_100E63BF8);
  uint64_t v8 = a1 + *(int *)(a3 + 32);

  return _s7Weather24LocationCompositionStateOwet_0(v8, a2, v7);
}

uint64_t sub_100074878()
{
  sub_1001D190C();
  sub_10017C808();
  if (*(_DWORD *)(v4 + 84) == v1)
  {
    return _s7Weather24LocationCompositionStateOwet_0(v0, v1, v3);
  }
  else
  {
    unsigned int v6 = *(unsigned __int8 *)(v0 + *(int *)(v2 + 20) + 8);
    if (v6 > 1) {
      return (v6 ^ 0xFF) + 1;
    }
    else {
      return 0;
    }
  }
}

uint64_t sub_1000748F8(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  a4(0);
  sub_100162F30();
  if (*(_DWORD *)(v8 + 84) != a2) {
    return sub_100163020(*(void *)(a1 + *(int *)(a3 + 20) + 24));
  }

  return _s7Weather24LocationCompositionStateOwet_0(a1, a2, v7);
}

uint64_t sub_100074980(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_10017DF08(&qword_100E63A50);
    uint64_t v9 = a1 + *(int *)(a3 + 20);
    return _s7Weather24LocationCompositionStateOwet_0(v9, a2, v8);
  }
}

uint64_t sub_100074A0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  type metadata accessor for OverviewTableViewModel();
  sub_100162F30();
  if (*(_DWORD *)(v9 + 84) == a2)
  {
    uint64_t v10 = v8;
    uint64_t v11 = a1;
  }
  else
  {
    uint64_t v10 = sub_10017DF08(a4);
    uint64_t v11 = a1 + *(int *)(a3 + 20);
  }

  return _s7Weather24LocationCompositionStateOwet_0(v11, a2, v10);
}

uint64_t sub_100074A8C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Date();

  return _s7Weather24LocationCompositionStateOwet_0(a1, a2, v4);
}

uint64_t sub_100074AD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_10017DF08(&qword_100E79530);
  sub_100162F30();
  if (*(_DWORD *)(v7 + 84) != a2) {
    return sub_100185838(a1 + *(int *)(a3 + 20));
  }

  return _s7Weather24LocationCompositionStateOwet_0(a1, a2, v6);
}

uint64_t sub_100074B58(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8)
{
  sub_10011C058(a1, a2, a3, a4, a5, a6, a7, a8, v9, __src[0]);
  return sub_100074B88(__src);
}

uint64_t sub_100074B88(void *__src)
{
  memcpy(__dst, __src, sizeof(__dst));
  sub_10019C26C();
  return EnvironmentValues.subscript.setter();
}

uint64_t sub_100074BD0(void *a1, void *a2)
{
  void (*v10)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;

  sub_1001B1E64(a2, a2[3]);
  sub_10017DF08(&qword_100E75340);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:name:)();
  uint64_t v5 = v11;
  if (v11)
  {
    sub_1001B1E64(a2, a2[3]);
    dispatch thunk of ResolverType.resolve<A>(_:name:)();
    uint64_t v6 = v11;
    uint64_t v7 = v12;
    uint64_t v8 = a1[3];
    uint64_t v9 = a1[4];
    sub_1001B1E64(a1, v8);
    uint64_t v10 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 24);
    v10(&v11, v11, v12, v8, v9);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)&v11);
    if (v5 == v6)
    {
      return swift_unknownObjectRelease_n();
    }
    else
    {
      v10(&v11, v6, v7, v8, v9);
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      return _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)&v11);
    }
  }
  else
  {
    __break(1u);
    __break(1u);
  }
  return result;
}

unint64_t sub_100074D60@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  return WindowFocusManager.add(monitor:)(a1, a2);
}

unint64_t WindowFocusManager.add(monitor:)@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for DisposableMonitor();
  swift_allocObject();
  uint64_t v7 = swift_unknownObjectRetain();
  uint64_t v8 = sub_100074ED0(v7, a1);
  swift_beginAccess();
  swift_retain();
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  sub_1000DAF68(*(void *)((*(void *)(v3 + 16) & 0xFFFFFFFFFFFFFF8) + 0x10));
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  swift_endAccess();
  a2[3] = v6;
  unint64_t result = sub_100074E80();
  a2[4] = result;
  *a2 = v8;
  return result;
}

uint64_t type metadata accessor for DisposableMonitor()
{
  return self;
}

unint64_t sub_100074E80()
{
  unint64_t result = qword_100E65418;
  if (!qword_100E65418)
  {
    type metadata accessor for DisposableMonitor();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E65418);
  }
  return result;
}

uint64_t sub_100074ED0(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 24) = 0;
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  *(void *)(v2 + 24) = a2;
  swift_unknownObjectWeakAssign();
  swift_unknownObjectWeakAssign();
  swift_unknownObjectRelease();
  return v2;
}

char *sub_100074F50(char *a1, char *a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = (int *)type metadata accessor for DailyForecastComponentViewModel(0);
  uint64_t v7 = v6[5];
  uint64_t v8 = &a1[v7];
  uint64_t v9 = &a2[v7];
  uint64_t v10 = sub_10017DF08(&qword_100E65250);
  __dst = *(void **)(v10 - 8);
  uint64_t v11 = (void (*)(char *, char *, uint64_t))__dst[3];
  v11(v8, v9, v10);
  v11(&a1[v6[6]], &a2[v6[6]], v10);
  v11(&a1[v6[7]], &a2[v6[7]], v10);
  uint64_t v12 = v6[8];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  *(void *)uint64_t v13 = *(void *)v14;
  *((void *)v13 + 1) = *((void *)v14 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v15 = v6[9];
  uint64_t v16 = &a1[v15];
  uint64_t v17 = &a2[v15];
  *(void *)uint64_t v16 = *(void *)v17;
  *((void *)v16 + 1) = *((void *)v17 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v18 = a3[5];
  uint64_t v19 = &a1[v18];
  uint64_t v20 = &a2[v18];
  uint64_t v21 = *((void *)v20 + 1);
  *(void *)uint64_t v19 = *(void *)v20;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *((void *)v19 + 1) = v21;
  uint64_t v22 = a3[6];
  uint64_t v23 = &a1[v22];
  uint64_t v24 = &a2[v22];
  uint64_t v25 = *((void *)v24 + 1);
  *(void *)uint64_t v23 = *(void *)v24;
  *((void *)v23 + 1) = v25;
  swift_retain();
  swift_release();
  *(void *)&a1[a3[7]] = *(void *)&a2[a3[7]];
  if (a1 != a2)
  {
    uint64_t v26 = a3[8];
    uint64_t v27 = &a1[v26];
    uint64_t v28 = &a2[v26];
    sub_100178110((uint64_t)&a1[v26], &qword_100E63BC8);
    sub_10017DF08(&qword_100E63BC8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v29 = type metadata accessor for ContentSizeCategory();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 16))(v27, v28, v29);
    }
    else
    {
      *(void *)uint64_t v27 = *(void *)v28;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v30 = a3[9];
  int v31 = &a1[v30];
  uint64_t v32 = &a2[v30];
  uint64_t v33 = *(void *)v32;
  char v34 = v32[8];
  sub_100195B7C(*(void *)v32, v34);
  uint64_t v35 = *(void *)v31;
  char v36 = v31[8];
  *(void *)int v31 = v33;
  v31[8] = v34;
  sub_10018F6D8(v35, v36);
  uint64_t v37 = a3[10];
  uint64_t v38 = &a1[v37];
  uint64_t v39 = &a2[v37];
  uint64_t v40 = *(void *)v39;
  char v41 = v39[8];
  sub_100195B7C(*(void *)v39, v41);
  uint64_t v42 = *(void *)v38;
  char v43 = v38[8];
  *(void *)uint64_t v38 = v40;
  v38[8] = v41;
  sub_10018F6D8(v42, v43);
  uint64_t v44 = a3[11];
  uint64_t v45 = &a1[v44];
  uint64_t v46 = &a2[v44];
  uint64_t v47 = type metadata accessor for Text.Measurements();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v47 - 8) + 24))(v45, v46, v47);
  uint64_t v48 = a3[12];
  uint64_t v49 = &a1[v48];
  uint64_t v50 = &a2[v48];
  uint64_t v51 = (int *)type metadata accessor for DailyForecastComponentViewModel.DayForecastViewModel(0);
  int v52 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v49, 1, (uint64_t)v51);
  int v53 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v50, 1, (uint64_t)v51);
  if (!v52)
  {
    if (v53)
    {
      sub_1001440E4((uint64_t)v49, (void (*)(void))type metadata accessor for DailyForecastComponentViewModel.DayForecastViewModel);
      goto LABEL_12;
    }
    uint64_t v78 = type metadata accessor for Date();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v78 - 8) + 24))(v49, v50, v78);
    uint64_t v79 = v51[5];
    uint64_t v80 = &v49[v79];
    uint64_t v81 = &v50[v79];
    *(void *)uint64_t v80 = *(void *)v81;
    *((void *)v80 + 1) = *((void *)v81 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v82 = v51[6];
    uint64_t v83 = &v49[v82];
    uint64_t v84 = &v50[v82];
    *(void *)uint64_t v83 = *(void *)v84;
    *((void *)v83 + 1) = *((void *)v84 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v85 = v51[7];
    uint64_t v86 = &v49[v85];
    __dstb = &v50[v85];
    uint64_t v87 = type metadata accessor for TimeZone();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v87 - 8) + 24))(v86, __dstb, v87);
    v11(&v49[v51[8]], &v50[v51[8]], v10);
    v11(&v49[v51[9]], &v50[v51[9]], v10);
    uint64_t v88 = v51[10];
    uint64_t v89 = &v49[v88];
    uint64_t v90 = &v50[v88];
    *(void *)uint64_t v89 = *(void *)v90;
    *((void *)v89 + 1) = *((void *)v90 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v91 = v51[11];
    uint64_t v92 = &v49[v91];
    uint64_t v93 = &v50[v91];
    *(void *)uint64_t v92 = *(void *)v93;
    *((void *)v92 + 1) = *((void *)v93 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)&v49[v51[12]] = *(void *)&v50[v51[12]];
    v49[v51[13]] = v50[v51[13]];
    uint64_t v94 = v51[14];
    uint64_t v95 = &v49[v94];
    uint64_t v96 = &v50[v94];
    *(void *)uint64_t v95 = *(void *)v96;
    *((void *)v95 + 1) = *((void *)v96 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v97 = v51[15];
    uint64_t v98 = &v49[v97];
    uint64_t v99 = &v50[v97];
    uint64_t v100 = type metadata accessor for Precipitation();
    int v101 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v98, 1, v100);
    int v102 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v99, 1, v100);
    if (v101)
    {
      if (!v102)
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v100 - 8) + 16))(v98, v99, v100);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v98, 0, 1, v100);
LABEL_21:
        v49[v51[16]] = v50[v51[16]];
        uint64_t v114 = v51[17];
        int v115 = &v49[v114];
        uint64_t v116 = &v50[v114];
        *(void *)int v115 = *(void *)v116;
        *((void *)v115 + 1) = *((void *)v116 + 1);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        uint64_t v117 = v51[18];
        uint64_t v118 = &v49[v117];
        unint64_t v119 = &v50[v117];
        *(void *)uint64_t v118 = *(void *)v119;
        *((void *)v118 + 1) = *((void *)v119 + 1);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        uint64_t v120 = v51[19];
        uint64_t v121 = &v49[v120];
        uint64_t v122 = &v50[v120];
        *(void *)uint64_t v121 = *(void *)v122;
        *((void *)v121 + 1) = *((void *)v122 + 1);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *(void *)&v49[v51[20]] = *(void *)&v50[v51[20]];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v112 = *(void *)(v100 - 8);
      if (!v102)
      {
        (*(void (**)(char *, char *, uint64_t))(v112 + 24))(v98, v99, v100);
        goto LABEL_21;
      }
      (*(void (**)(char *, uint64_t))(v112 + 8))(v98, v100);
    }
    uint64_t v113 = sub_10017DF08(&qword_100E6B8C8);
    memcpy(v98, v99, *(void *)(*(void *)(v113 - 8) + 64));
    goto LABEL_21;
  }
  if (v53)
  {
LABEL_12:
    uint64_t v77 = sub_10017DF08(&qword_100E6B8D0);
    memcpy(v49, v50, *(void *)(*(void *)(v77 - 8) + 64));
    goto LABEL_22;
  }
  uint64_t v131 = a3;
  uint64_t v54 = type metadata accessor for Date();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v54 - 8) + 16))(v49, v50, v54);
  uint64_t v55 = v51[5];
  uint64_t v56 = &v49[v55];
  uint64_t v57 = &v50[v55];
  *(void *)uint64_t v56 = *(void *)v57;
  *((void *)v56 + 1) = *((void *)v57 + 1);
  uint64_t v58 = v51[6];
  uint64_t v59 = &v49[v58];
  uint64_t v60 = &v50[v58];
  *(void *)uint64_t v59 = *(void *)v60;
  *((void *)v59 + 1) = *((void *)v60 + 1);
  uint64_t v61 = v51[7];
  uint64_t v129 = &v50[v61];
  uint64_t v130 = &v49[v61];
  uint64_t v62 = type metadata accessor for TimeZone();
  uint64_t v128 = *(void (**)(char *, char *, uint64_t))(*(void *)(v62 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v128(v130, v129, v62);
  uint64_t v63 = (void (*)(char *, char *, uint64_t))__dst[2];
  v63(&v49[v51[8]], &v50[v51[8]], v10);
  v63(&v49[v51[9]], &v50[v51[9]], v10);
  uint64_t v64 = v51[10];
  uint64_t v65 = &v49[v64];
  unint64_t v66 = &v50[v64];
  *(void *)uint64_t v65 = *(void *)v66;
  *((void *)v65 + 1) = *((void *)v66 + 1);
  uint64_t v67 = v51[11];
  unint64_t v68 = &v49[v67];
  char v69 = &v50[v67];
  *(void *)unint64_t v68 = *(void *)v69;
  *((void *)v68 + 1) = *((void *)v69 + 1);
  *(void *)&v49[v51[12]] = *(void *)&v50[v51[12]];
  v49[v51[13]] = v50[v51[13]];
  uint64_t v70 = v51[14];
  uint64_t v71 = &v49[v70];
  uint64_t v72 = &v50[v70];
  *(void *)uint64_t v71 = *(void *)v72;
  *((void *)v71 + 1) = *((void *)v72 + 1);
  uint64_t v73 = v51[15];
  __dsta = &v49[v73];
  char v74 = &v50[v73];
  uint64_t v75 = type metadata accessor for Precipitation();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v74, 1, v75))
  {
    uint64_t v76 = sub_10017DF08(&qword_100E6B8C8);
    memcpy(__dsta, v74, *(void *)(*(void *)(v76 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v75 - 8) + 16))(__dsta, v74, v75);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dsta, 0, 1, v75);
  }
  a3 = v131;
  v49[v51[16]] = v50[v51[16]];
  uint64_t v103 = v51[17];
  uint64_t v104 = &v49[v103];
  uint64_t v105 = &v50[v103];
  *(void *)uint64_t v104 = *(void *)v105;
  *((void *)v104 + 1) = *((void *)v105 + 1);
  uint64_t v106 = v51[18];
  uint64_t v107 = &v49[v106];
  __n128 v108 = &v50[v106];
  *(void *)uint64_t v107 = *(void *)v108;
  *((void *)v107 + 1) = *((void *)v108 + 1);
  uint64_t v109 = v51[19];
  uint64_t v110 = &v49[v109];
  uint64_t v111 = &v50[v109];
  *(void *)uint64_t v110 = *(void *)v111;
  *((void *)v110 + 1) = *((void *)v111 + 1);
  *(void *)&v49[v51[20]] = *(void *)&v50[v51[20]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v49, 0, 1, (uint64_t)v51);
LABEL_22:
  uint64_t v123 = sub_10017DF08(&qword_100E7E838);
  *(void *)&v49[*(int *)(v123 + 28)] = *(void *)&v50[*(int *)(v123 + 28)];
  swift_retain();
  swift_release();
  uint64_t v124 = a3[13];
  uint64_t v125 = &a1[v124];
  uint64_t v126 = &a2[v124];
  *(void *)&a1[v124] = *(void *)&a2[v124];
  swift_retain();
  swift_release();
  *((void *)v125 + 1) = *((void *)v126 + 1);
  return a1;
}

uint64_t sub_1000759D0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_100075A00();
  *a1 = result & 1;
  return result;
}

uint64_t sub_100075A00()
{
  uint64_t v2 = type metadata accessor for EnvironmentValues();
  sub_100179C0C();
  uint64_t v4 = v3;
  __chkstk_darwin(v5);
  sub_10011BFD8();
  char v6 = EnvironmentValues.accessibilityVoiceOverEnabled.getter();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v1, v0, v2);
  if (v6) {
    char v7 = 1;
  }
  else {
    char v7 = EnvironmentValues.accessibilitySwitchControlEnabled.getter();
  }
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v1, v2);
  return v7 & 1;
}

void sub_100075ACC(void *a1, uint64_t a2, void *a3)
{
  uint64_t v5 = type metadata accessor for SceneConnectionOptions();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v31[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  self;
  uint64_t v9 = swift_dynamicCastObjCClass();
  if (!v9) {
    return;
  }
  uint64_t v10 = (void *)v9;
  id v30 = a1;
  id v11 = [a3 shortcutItem];
  if (v11)
  {
    uint64_t v12 = v11;
    sub_100019014(&OBJC_IVAR____TtC7Weather13SceneDelegate____lazy_storage___shortcutItemHandlerManager, (void (*)(void))&type metadata accessor for ShortcutItemHandlerManager);
    ShortcutItemHandlerManager.handle(shortcutItem:)((UIApplicationShortcutItem)v12);

    swift_release();
  }
  sub_10003D10C(&OBJC_IVAR____TtC7Weather13SceneDelegate____lazy_storage___stateManager, &qword_100E74C00, (uint64_t (*)(unsigned char *, uint64_t))sub_1001262E4, (uint64_t *)&unk_100E74C08, (uint64_t)v31);
  sub_1001B1E64(v31, v32);
  UISceneConnectionOptions.connectionOptions.getter();
  dispatch thunk of SceneStateManagerType.sceneWillConnectToSession(withOptions:)();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v31);
  sub_100019014(&OBJC_IVAR____TtC7Weather13SceneDelegate____lazy_storage___windowFrameMonitor, (void (*)(void))type metadata accessor for DisplayMetricsMonitor);
  id v13 = [v10 windows];
  sub_1001ABC4C(0, &qword_100E74C28);
  unint64_t v14 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v14 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v15 = (void *)_CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v15) {
      goto LABEL_9;
    }
  }
  else
  {
    uint64_t v15 = *(void **)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v15) {
      goto LABEL_9;
    }
  }
  sub_100076028(0, (v14 & 0xC000000000000001) == 0, v14);
  if ((v14 & 0xC000000000000001) != 0) {
    id v16 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else {
    id v16 = *(id *)(v14 + 32);
  }
  uint64_t v15 = v16;
LABEL_9:
  swift_bridgeObjectRelease();
  sub_10021F084(v15);
  swift_release();
  id v17 = [a3 userActivities];
  sub_1001ABC4C(0, (unint64_t *)&qword_100E74C30);
  sub_100215D44();
  static Set._unconditionallyBridgeFromObjectiveC(_:)();

  sub_100215E64();
  uint64_t v19 = v18;
  swift_bridgeObjectRelease();
  if (v19)
  {
    if (qword_100E627B0 != -1) {
      swift_once();
    }
    uint64_t v20 = type metadata accessor for Logger();
    sub_1002102B0(v20, (uint64_t)qword_100F51E28);
    uint64_t v21 = Logger.logObject.getter();
    os_log_type_t v22 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v21, v22))
    {
      uint64_t v23 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v23 = 0;
      _os_log_impl((void *)&_mh_execute_header, v21, v22, "Scene is handling a user activity on launch", v23, 2u);
      swift_slowDealloc();
    }

    sub_10003D10C(&OBJC_IVAR____TtC7Weather13SceneDelegate____lazy_storage___continueUserActivityHandlerManager, &qword_100E74C18, (uint64_t (*)(unsigned char *, uint64_t))sub_1001262E4, &qword_100E74C20, (uint64_t)v31);
    sub_1001B1E64(v31, v32);
    sub_100664774(v19);

    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v31);
  }
  id v24 = [v10 windows];
  unint64_t v25 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v25 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v29 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v29) {
      goto LABEL_17;
    }
LABEL_23:

    swift_bridgeObjectRelease();
    return;
  }
  if (!*(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_23;
  }
LABEL_17:
  sub_100076028(0, (v25 & 0xC000000000000001) == 0, v25);
  if ((v25 & 0xC000000000000001) != 0) {
    id v26 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else {
    id v26 = *(id *)(v25 + 32);
  }
  uint64_t v27 = v26;
  swift_bridgeObjectRelease();
  id v28 = v30;
  static UIWindow.keyWindowScene.setter();
  UIWindow.registerKeyWindowSceneNotification()();
}

unint64_t sub_100076004(unint64_t result, char a2, uint64_t a3)
{
  if (a2)
  {
    if ((result & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > result)
    {
      return result;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_10007602C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  char v5 = *(unsigned char *)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v7 = *(void *)(a1 + 16);
  uint64_t v8 = *a2;
  sub_10020D948((uint64_t)(a2 + 1), (uint64_t)v11);
  uint64_t v9 = a2[6];
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  return sub_1000760BC(v5, v6, v7, v8, v11, v9, a3);
}

uint64_t sub_1000760BC@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, long long *a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  unint64_t v14 = (int *)type metadata accessor for MainViewFullscreenMapZoomTransitionModifier.TransitionContainer(0);
  uint64_t v15 = (uint64_t *)(a7 + v14[8]);
  *uint64_t v15 = swift_getKeyPath();
  sub_10017DF08(&qword_100E63BD0);
  swift_storeEnumTagMultiPayload();
  uint64_t v16 = a7 + v14[9];
  *(void *)uint64_t v16 = swift_getKeyPath();
  *(unsigned char *)(v16 + 8) = 0;
  uint64_t v17 = a7 + v14[10];
  *(void *)uint64_t v17 = swift_getKeyPath();
  *(_WORD *)(v17 + 8) = 0;
  uint64_t v18 = (uint64_t *)(a7 + v14[11]);
  type metadata accessor for ObservableResolver();
  sub_100076280((uint64_t)&qword_100E70FD0);
  *uint64_t v18 = EnvironmentObject.init()();
  v18[1] = v19;
  uint64_t v20 = a7 + v14[12];
  State.init(wrappedValue:)();
  *(unsigned char *)uint64_t v20 = v24;
  *(void *)(v20 + 8) = v25;
  uint64_t v21 = a7 + v14[13];
  State.init(wrappedValue:)();
  *(unsigned char *)uint64_t v21 = v24;
  *(void *)(v21 + 8) = v25;
  *(unsigned char *)a7 = a1;
  *(void *)(a7 + 8) = a2;
  *(void *)(a7 + 16) = a3;
  *(void *)(a7 + 24) = a4;
  uint64_t result = sub_1001262E4(a5, a7 + 32);
  *(void *)(a7 + 72) = a6;
  uint64_t v23 = a7 + v14[14];
  *(unsigned char *)uint64_t v23 = a1;
  *(void *)(v23 + 8) = 0;
  return result;
}

unint64_t sub_100076280(uint64_t a1)
{
  unint64_t result = sub_10017DFE0(a1);
  if (!result)
  {
    v3(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, v1);
  }
  return result;
}

uint64_t destroy for LocationView(uint64_t a1)
{
  swift_release();
  swift_release();
  swift_unknownObjectRelease();
  swift_release();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1 + 56);

  return _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1 + 96);
}

uint64_t sub_100076320()
{
  return sub_100076338();
}

uint64_t sub_100076338()
{
  return sub_100076354(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_100076354(uint64_t a1, uint64_t a2)
{
  return dispatch thunk of LocationMetadataManagerType.resolveAddress(for:)();
}

uint64_t sub_100076384()
{
  uint64_t v0 = sub_10019BAF8();
  return sub_100182AB8(v0);
}

uint64_t sub_1000763B0(double *a1, double *a2)
{
  if (*a1 != *a2 || a1[1] != a2[1]) {
    return 0;
  }
  if (a1[2] != a2[2] || a1[3] != a2[3]) {
    return 0;
  }
  if (a1[4] != a2[4] || a1[5] != a2[5]) {
    return 0;
  }
  if (a1[6] != a2[6] || a1[7] != a2[7]) {
    return 0;
  }
  uint64_t v9 = *(int *)(type metadata accessor for LocationHeaderViewMeasurements(0) + 32);

  return sub_10011BE7C((uint64_t)a1 + v9, (uint64_t)a2 + v9);
}

void *_s7Weather24LocationViewRowViewModelVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_100076498@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v50 = a1;
  uint64_t v55 = a2;
  uint64_t v46 = type metadata accessor for Locale.Language();
  uint64_t v45 = *(void *)(v46 - 8);
  __chkstk_darwin(v46);
  uint64_t v44 = (char *)&v41 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = type metadata accessor for Locale();
  uint64_t v42 = *(void *)(v43 - 8);
  __chkstk_darwin(v43);
  char v41 = (char *)&v41 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = type metadata accessor for WindComponentCompassViewStyle();
  uint64_t v60 = *(void *)(v48 - 8);
  uint64_t v4 = __chkstk_darwin(v48);
  uint64_t v49 = (char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v47 = (BOOL *)&v41 - v6;
  uint64_t v7 = self;
  id v8 = [v7 mainBundle];
  v66._object = (void *)0x8000000100CB31B0;
  v9._uint64_t countAndFlagsBits = 87;
  v9._object = (void *)0xE100000000000000;
  v10._uint64_t countAndFlagsBits = 0;
  v10._object = (void *)0xE000000000000000;
  v66._uint64_t countAndFlagsBits = 0xD000000000000024;
  Swift::String v11 = NSLocalizedString(_:tableName:bundle:value:comment:)(v9, (Swift::String_optional)0, (NSBundle)v8, v10, v66);

  id v12 = [v7 mainBundle];
  v67._object = (void *)0x8000000100CB31E0;
  v13._uint64_t countAndFlagsBits = 69;
  v13._object = (void *)0xE100000000000000;
  v14._uint64_t countAndFlagsBits = 0;
  v14._object = (void *)0xE000000000000000;
  v67._uint64_t countAndFlagsBits = 0xD000000000000024;
  Swift::String v15 = NSLocalizedString(_:tableName:bundle:value:comment:)(v13, (Swift::String_optional)0, (NSBundle)v12, v14, v67);

  id v16 = [v7 mainBundle];
  v68._object = (void *)0x8000000100CB3210;
  v17._uint64_t countAndFlagsBits = 78;
  v17._object = (void *)0xE100000000000000;
  v18._uint64_t countAndFlagsBits = 0;
  v18._object = (void *)0xE000000000000000;
  v68._uint64_t countAndFlagsBits = 0xD000000000000025;
  Swift::String v19 = NSLocalizedString(_:tableName:bundle:value:comment:)(v17, (Swift::String_optional)0, (NSBundle)v16, v18, v68);

  id v20 = [v7 mainBundle];
  v69._object = (void *)0x8000000100CB3240;
  v21._uint64_t countAndFlagsBits = 83;
  v21._object = (void *)0xE100000000000000;
  v22._uint64_t countAndFlagsBits = 0;
  v22._object = (void *)0xE000000000000000;
  v69._uint64_t countAndFlagsBits = 0xD000000000000025;
  Swift::String v23 = NSLocalizedString(_:tableName:bundle:value:comment:)(v21, (Swift::String_optional)0, (NSBundle)v20, v22, v69);

  sub_10017DF08(&qword_100E66F98);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100C31870;
  *(Swift::String *)(inited + 32) = v11;
  *(Swift::String *)(inited + 48) = v15;
  uint64_t countAndFlagsBits = v19._countAndFlagsBits;
  *(Swift::String *)(inited + 64) = v19;
  uint64_t v57 = v23._countAndFlagsBits;
  *(Swift::String *)(inited + 80) = v23;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  object = v19._object;
  swift_bridgeObjectRetain();
  uint64_t v56 = v23._object;
  swift_bridgeObjectRetain();
  uint64_t v25 = String.count.getter();
  int v53 = v11._object;
  swift_bridgeObjectRelease();
  uint64_t v52 = v15._countAndFlagsBits;
  if (v25 == 1 && (swift_bridgeObjectRetain(), uint64_t v26 = String.count.getter(), swift_bridgeObjectRelease(), v26 == 1))
  {
    swift_bridgeObjectRetain();
    uint64_t v27 = String.count.getter();
    swift_bridgeObjectRelease();
    uint64_t v28 = v50;
    uint64_t v29 = v48;
    id v30 = v47;
    if (v27 == 1)
    {
      swift_bridgeObjectRetain();
      uint64_t v31 = String.count.getter();
      swift_release();
      swift_bridgeObjectRelease();
      BOOL v32 = v31 == 1;
    }
    else
    {
      swift_release();
      BOOL v32 = 0;
    }
  }
  else
  {
    swift_release();
    BOOL v32 = 0;
    uint64_t v28 = v50;
    uint64_t v29 = v48;
    id v30 = v47;
  }
  *id v30 = v32;
  (*(void (**)(BOOL *, void, uint64_t))(v60 + 104))(v30, enum case for WindComponentCompassViewStyle.cardinalDirectionsInline(_:), v29);
  char v33 = WindComponentCompassViewStyle.canPrimaryLabelShowWindDirection.getter();
  uint64_t v54 = v11._countAndFlagsBits;
  uint64_t v51 = v15._object;
  if (v33)
  {
    char v34 = v41;
    static Locale.current.getter();
    uint64_t v35 = v44;
    Locale.language.getter();
    (*(void (**)(char *, uint64_t))(v42 + 8))(v34, v43);
    char v36 = Locale.Language.isHebrew.getter();
    (*(void (**)(char *, uint64_t))(v45 + 8))(v35, v46);
    uint64_t v37 = v49;
    uint64_t v38 = v29;
    if (v36)
    {
      long long v65 = *(_OWORD *)(v28 + 192);
      uint64_t v63 = 47;
      unint64_t v64 = 0xE100000000000000;
      uint64_t v61 = 10;
      unint64_t v62 = 0xE100000000000000;
      sub_10014A85C();
      StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)();
    }
    else
    {
      swift_bridgeObjectRetain();
    }
  }
  else
  {
    uint64_t v37 = v49;
    uint64_t v38 = v29;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  uint64_t v39 = v60;
  (*(void (**)(char *, BOOL *, uint64_t))(v60 + 16))(v37, v30, v38);
  WindComponentCompassViewModel.init(style:angle:primaryLabel:secondaryLabel:primaryLabelLineLimit:northString:eastString:southString:westString:)();
  return (*(uint64_t (**)(BOOL *, uint64_t))(v39 + 8))(v30, v38);
}

uint64_t sub_100076C20()
{
  sub_1000A9DE8();
  sub_100119470();
  uint64_t v1 = *v0;
  sub_100179D88();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(void))(v1 + 8);
  return v3();
}

uint64_t sub_100076CE8()
{
  sub_100109790();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_100162FCC(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_10007FF00;
  uint64_t v3 = sub_1001832D8();
  return v4(v3);
}

uint64_t sub_100076D8C(uint64_t a1, uint64_t a2)
{
  uint64_t v67 = a1;
  uint64_t v71 = type metadata accessor for LayoutDirection();
  uint64_t v70 = *(void *)(v71 - 8);
  uint64_t v4 = __chkstk_darwin(v71);
  Swift::String v69 = (char *)&v65 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  Swift::String v68 = (char *)&v65 - v6;
  uint64_t v7 = type metadata accessor for Location.Identifier();
  uint64_t v72 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  long long v65 = (char *)&v65 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v73 = sub_10017DF08(&qword_100E6DD18);
  __chkstk_darwin(v73);
  Swift::String v10 = (char *)&v65 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t active = type metadata accessor for ActiveLocationModel(0);
  __chkstk_darwin(active - 8);
  Swift::String v13 = (char *)&v65 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for LocationViewCollisionOptionsUpdatingView(0);
  uint64_t v15 = __chkstk_darwin(v14);
  uint64_t v74 = (uint64_t)&v65 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  Swift::String v18 = (char *)&v65 - v17;
  uint64_t v19 = sub_10017DF08(&qword_100E6DC08);
  uint64_t v20 = __chkstk_darwin(v19 - 8);
  uint64_t v66 = (uint64_t)&v65 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = __chkstk_darwin(v20);
  char v24 = (char *)&v65 - v23;
  uint64_t v25 = __chkstk_darwin(v22);
  uint64_t v27 = (char *)&v65 - v26;
  __chkstk_darwin(v25);
  uint64_t v29 = (char *)&v65 - v28;
  sub_100111070(a2, (uint64_t)v27);
  uint64_t v30 = v2;
  sub_1001361BC(v2, (uint64_t)v18);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v27, 1, v7) == 1)
  {
    swift_retain();
    sub_1001362A4();
    swift_release();
    sub_1001373E4((uint64_t)v13, (uint64_t)v29);
    sub_1000776EC((uint64_t)v18);
    sub_100178110((uint64_t)v27, &qword_100E6DC08);
    uint64_t v31 = (uint64_t)v29;
    uint64_t v32 = v72;
  }
  else
  {
    sub_1000776EC((uint64_t)v18);
    uint64_t v33 = v72;
    (*(void (**)(char *, char *, uint64_t))(v72 + 32))(v29, v27, v7);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v29, 0, 1, v7);
    uint64_t v31 = (uint64_t)v29;
    uint64_t v32 = v33;
  }
  char v34 = (char *)v30;
  (*(void (**)(char *, uint64_t, uint64_t))(v32 + 16))(v24, v30 + *(int *)(v14 + 24), v7);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v24, 0, 1, v7);
  uint64_t v35 = (uint64_t)&v10[*(int *)(v73 + 48)];
  sub_100111070((uint64_t)v24, (uint64_t)v10);
  sub_100111070(v31, v35);
  uint64_t v36 = v14;
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v10, 1, v7) == 1)
  {
    sub_100178110((uint64_t)v24, &qword_100E6DC08);
    if (_s7Weather24LocationCompositionStateOwet_0(v35, 1, v7) == 1)
    {
      sub_100178110((uint64_t)v10, &qword_100E6DC08);
      uint64_t v37 = v74;
      sub_1001361BC(v30, v74);
LABEL_13:
      sub_1000776EC(v37);
      goto LABEL_14;
    }
    goto LABEL_9;
  }
  uint64_t v38 = v32;
  uint64_t v39 = v66;
  sub_100111070((uint64_t)v10, v66);
  if (_s7Weather24LocationCompositionStateOwet_0(v35, 1, v7) == 1)
  {
    sub_100178110((uint64_t)v24, &qword_100E6DC08);
    (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v39, v7);
LABEL_9:
    sub_100178110((uint64_t)v10, &qword_100E6DD18);
    uint64_t v37 = v74;
    sub_1001361BC(v30, v74);
    goto LABEL_10;
  }
  uint64_t v42 = v65;
  (*(void (**)(char *, uint64_t, uint64_t))(v38 + 32))(v65, v35, v7);
  sub_100231104((unint64_t *)&qword_100E63A30, (void (*)(uint64_t))&type metadata accessor for Location.Identifier);
  uint64_t v73 = v31;
  LODWORD(v72) = dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t v43 = v39;
  uint64_t v44 = *(void (**)(char *, uint64_t))(v38 + 8);
  v44(v42, v7);
  sub_100178110((uint64_t)v24, &qword_100E6DC08);
  v44((char *)v43, v7);
  uint64_t v31 = v73;
  sub_100178110((uint64_t)v10, &qword_100E6DC08);
  uint64_t v37 = v74;
  sub_1001361BC((uint64_t)v34, v74);
  if (v72) {
    goto LABEL_13;
  }
LABEL_10:
  int v40 = *(unsigned __int8 *)(v37 + *(int *)(v36 + 28));
  sub_1000776EC(v37);
  if (v40 != 1)
  {
    uint64_t v41 = v31;
    return sub_100178110(v41, &qword_100E6DC08);
  }
LABEL_14:
  memcpy(__dst, v34, 0x49uLL);
  sub_1001F4DEC((uint64_t)__dst, (void (*)(void, void, void, void, void, void, void, void, void, char))sub_1001910C8);
  sub_1001BEAF4();
  sub_1001F4DEC((uint64_t)__dst, (void (*)(void, void, void, void, void, void, void, void, void, char))sub_10018CCC4);
  double v45 = *(double *)&v75[5];
  uint64_t v46 = sub_100216764(0, v67);
  if (v46) {
    uint64_t v47 = (void *)v46;
  }
  else {
    uint64_t v47 = _swiftEmptyArrayStorage;
  }
  v75[0] = (uint64_t)v47;
  swift_bridgeObjectRetain();
  sub_10021668C(v75);
  uint64_t v48 = swift_bridgeObjectRelease();
  uint64_t v49 = v75[0];
  __chkstk_darwin(v48);
  *(&v65 - 2) = v34;
  uint64_t v50 = sub_100215EA8((void (*)(uint64_t, uint64_t))sub_10022676C, (uint64_t)(&v65 - 4), v49);
  swift_release();
  uint64_t v51 = v36;
  uint64_t v52 = v68;
  sub_1001FF23C();
  uint64_t v53 = v70;
  uint64_t v54 = v69;
  uint64_t v55 = v71;
  (*(void (**)(char *, void, uint64_t))(v70 + 104))(v69, enum case for LayoutDirection.rightToLeft(_:), v71);
  LOBYTE(v49) = static LayoutDirection.== infix(_:_:)();
  uint64_t v56 = *(void (**)(char *, uint64_t))(v53 + 8);
  v56(v54, v55);
  v56(v52, v55);
  if (v49)
  {
    sub_1002F7F1C(v50);
    uint64_t v50 = v57;
  }
  if (*(void *)&v34[*(int *)(v51 + 44)])
  {
    float v58 = v45;
    swift_retain();
    uint64_t v59 = sub_1000C965C();
    float v61 = v60;
    uint64_t v62 = v59;
    swift_release();
    if (v61 == v58)
    {
      char v63 = sub_1000C96D4(v62, v50);
      swift_bridgeObjectRelease();
      if (v63) {
        goto LABEL_27;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    if (sub_100100BE0(v50, v58) <= 0.0)
    {
LABEL_27:
      sub_100178110(v31, &qword_100E6DC08);
      return swift_bridgeObjectRelease();
    }
    swift_retain();
    sub_10001BA50();
    swift_release();
    uint64_t v41 = v31;
    return sub_100178110(v41, &qword_100E6DC08);
  }
  type metadata accessor for LocationViewCollisionOptions();
  sub_100231104(&qword_100E6D0B8, (void (*)(uint64_t))type metadata accessor for LocationViewCollisionOptions);
  uint64_t result = EnvironmentObject.error()();
  __break(1u);
  return result;
}

uint64_t sub_1000776EC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for LocationViewCollisionOptionsUpdatingView(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100077748()
{
  uint64_t v85 = v0;
  uint64_t v1 = *(void *)(v0 + 112);
  swift_beginAccess();
  uint64_t v78 = (void *)(v1 + 128);
  uint64_t v79 = v1;
  sub_1001B1E64((void *)(v1 + 128), *(void *)(v1 + 152));
  sub_1001A3364();
  uint64_t v77 = dispatch thunk of LocationsOfInterestManagerType.locations.getter();
  swift_endAccess();
  if (qword_100E627A8 != -1) {
    goto LABEL_41;
  }
  while (1)
  {
    uint64_t v2 = type metadata accessor for Logger();
    sub_1002102B0(v2, (uint64_t)qword_100F51E10);
    swift_bridgeObjectRetain_n();
    uint64_t v3 = Logger.logObject.getter();
    os_log_type_t v4 = static os_log_type_t.default.getter();
    BOOL v5 = os_log_type_enabled(v3, v4);
    uint64_t v6 = *(void *)(v0 + 224);
    if (v5)
    {
      uint64_t v7 = swift_slowAlloc();
      uint64_t v84 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v7 = 134218499;
      *(void *)(v0 + 88) = *(void *)(v6 + 16);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v7 + 12) = 2160;
      *(void *)(v0 + 96) = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v7 + 22) = 2081;
      swift_bridgeObjectRetain();
      uint64_t v8 = Array.description.getter();
      unint64_t v10 = v9;
      swift_bridgeObjectRelease();
      *(void *)(v0 + 104) = sub_10016414C(v8, v10, (uint64_t *)&v84);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v3, v4, "Massaged data contains %ld location of interest with content %{private,mask.hash}s", (uint8_t *)v7, 0x20u);
      swift_arrayDestroy();
      sub_100162EE0();
      sub_100162EE0();
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    swift_beginAccess();
    sub_1001B1E64(v78, *(void *)(v79 + 152));
    uint64_t v11 = dispatch thunk of LocationsOfInterestManagerType.locations.getter();
    swift_endAccess();
    uint64_t v12 = *(void *)(v11 + 16);
    if (v12)
    {
      sub_100180124();
      uint64_t v14 = v11 + v13;
      uint64_t v81 = v15;
      uint64_t v16 = (void (**)(uint64_t, uint64_t))(v15 + 8);
      uint64_t v83 = *(void *)(v17 + 56);
      Swift::String v18 = &_swiftEmptyDictionarySingleton;
      while (1)
      {
        uint64_t v19 = sub_10017E7A0();
        v20(v19);
        LocationOfInterest.type.getter();
        LocationOfInterest.location.getter();
        Location.coordinate.getter();
        uint64_t v21 = sub_10017D2D0();
        v22(v21);
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v84 = v18;
        unint64_t v24 = sub_100246DFC();
        uint64_t v26 = v18[2];
        BOOL v27 = (v25 & 1) == 0;
        Swift::Int v28 = v26 + v27;
        if (__OFADD__(v26, v27))
        {
          __break(1u);
          goto LABEL_38;
        }
        unint64_t v29 = v24;
        char v30 = v25;
        sub_10017DF08(&qword_100E8AA08);
        Swift::Bool v31 = _NativeDictionary.ensureUnique(isUnique:capacity:)(isUniquelyReferenced_nonNull_native, v28);
        Swift::String v18 = v84;
        if (v31)
        {
          unint64_t v32 = sub_100246DFC();
          if ((v30 & 1) != (v33 & 1))
          {
LABEL_30:
            return KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
          }
          unint64_t v29 = v32;
        }
        if (v30)
        {
          sub_1001854F0(v18[7]);
        }
        else
        {
          sub_10019FF24((uint64_t)&v18[v29 >> 6]);
          (*(void (**)(unint64_t))(v81 + 16))(v18[6] + *(void *)(v81 + 72) * v29);
          sub_1001854F0(v18[7]);
          uint64_t v34 = v18[2];
          BOOL v35 = __OFADD__(v34, 1);
          uint64_t v36 = v34 + 1;
          if (v35) {
            goto LABEL_39;
          }
          v18[2] = v36;
        }
        uint64_t v37 = *(void *)(v0 + 176);
        uint64_t v38 = *(void *)(v0 + 152);
        swift_bridgeObjectRelease();
        (*v16)(v37, v38);
        uint64_t v39 = sub_100181618();
        v40(v39);
        v14 += v83;
        if (!--v12) {
          goto LABEL_18;
        }
      }
    }
    Swift::String v18 = &_swiftEmptyDictionarySingleton;
LABEL_18:
    uint64_t v41 = *(void *)(v0 + 224);
    swift_bridgeObjectRelease();
    uint64_t v42 = *(void *)(v41 + 16);
    if (!v42) {
      break;
    }
    sub_100180124();
    uint64_t v45 = v43 + v44;
    uint64_t v80 = v46;
    uint64_t v82 = *(void *)(v47 + 56);
    swift_bridgeObjectRetain();
    uint64_t v48 = &_swiftEmptyDictionarySingleton;
    while (1)
    {
      uint64_t v49 = sub_10017E7A0();
      v50(v49);
      LocationOfInterest.type.getter();
      LocationOfInterest.location.getter();
      Location.coordinate.getter();
      uint64_t v51 = sub_10017D2D0();
      v52(v51);
      char v53 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v84 = v48;
      unint64_t v54 = sub_100246DFC();
      uint64_t v56 = v48[2];
      BOOL v57 = (v55 & 1) == 0;
      Swift::Int v58 = v56 + v57;
      if (__OFADD__(v56, v57)) {
        break;
      }
      unint64_t v59 = v54;
      char v60 = v55;
      sub_10017DF08(&qword_100E8AA08);
      Swift::Bool v61 = _NativeDictionary.ensureUnique(isUnique:capacity:)(v53, v58);
      uint64_t v48 = v84;
      if (v61)
      {
        unint64_t v62 = sub_100246DFC();
        if ((v60 & 1) != (v63 & 1)) {
          goto LABEL_30;
        }
        unint64_t v59 = v62;
      }
      if (v60)
      {
        sub_1001854F0(v48[7]);
      }
      else
      {
        sub_10019FF24((uint64_t)&v48[v59 >> 6]);
        (*(void (**)(unint64_t))(v80 + 16))(v48[6] + *(void *)(v80 + 72) * v59);
        sub_1001854F0(v48[7]);
        uint64_t v64 = v48[2];
        BOOL v35 = __OFADD__(v64, 1);
        uint64_t v65 = v64 + 1;
        if (v35) {
          goto LABEL_40;
        }
        v48[2] = v65;
      }
      swift_bridgeObjectRelease();
      uint64_t v66 = sub_10017D2D0();
      v67(v66);
      uint64_t v68 = sub_100181618();
      v69(v68);
      v45 += v82;
      if (!--v42)
      {
        swift_bridgeObjectRelease();
        goto LABEL_34;
      }
    }
LABEL_38:
    __break(1u);
LABEL_39:
    __break(1u);
LABEL_40:
    __break(1u);
LABEL_41:
    swift_once();
  }
  uint64_t v48 = &_swiftEmptyDictionarySingleton;
LABEL_34:
  uint64_t v71 = *(void *)(v0 + 224);
  swift_beginAccess();
  sub_1000DF0C4((uint64_t)v78, *(void *)(v79 + 152));
  sub_1001A3364();
  swift_bridgeObjectRetain();
  dispatch thunk of LocationsOfInterestManagerType.locations.setter();
  swift_endAccess();
  sub_100026A1C();
  uint64_t v72 = sub_10021BC00((uint64_t)v18, (uint64_t)v48, v71, v77);
  uint64_t v74 = v73;
  char v76 = v75;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(void *)(v0 + 240) = v72;
  *(void *)(v0 + 248) = v74;
  *(unsigned char *)(v0 + 264) = v76;
  return _swift_task_switch(sub_10000B828, 0, 0);
}

void *sub_100077EA8(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(a3 + 20);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = type metadata accessor for TemperatureScaleConfiguration();
  unint64_t v9 = *(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  v9(v6, v7, v8);
  unint64_t v10 = (int *)type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
  *(void *)&v6[v10[5]] = *(void *)&v7[v10[5]];
  *(void *)&v6[v10[6]] = *(void *)&v7[v10[6]];
  *(void *)&v6[v10[7]] = *(void *)&v7[v10[7]];
  uint64_t v11 = v10[8];
  uint64_t v12 = &v6[v11];
  uint64_t v13 = &v7[v11];
  uint64_t v15 = *(void *)v13;
  uint64_t v14 = *((void *)v13 + 1);
  *(void *)uint64_t v12 = v15;
  *((void *)v12 + 1) = v14;
  v6[v10[9]] = v7[v10[9]];
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_100077F94()
{
  type metadata accessor for Scope();
  sub_100179C0C();
  uint64_t v17 = v1;
  uint64_t v18 = v0;
  __chkstk_darwin(v0);
  sub_100109314();
  uint64_t v16 = v2;
  uint64_t v3 = type metadata accessor for CallbackScope();
  sub_100179C0C();
  uint64_t v5 = v4;
  __chkstk_darwin(v6);
  sub_1001626E0();
  uint64_t v9 = v8 - v7;
  ProxyContainer.callback.getter();
  sub_1001B1E64(v19, v20);
  sub_100162708();
  type metadata accessor for DebugDataSource();
  unsigned int v15 = enum case for CallbackScope.any(_:);
  uint64_t v14 = *(void (**)(uint64_t))(v5 + 104);
  v14(v9);
  swift_allocObject();
  swift_weakInit();
  dispatch thunk of CallbackRegistrationType.whenResolving<A>(_:scope:callback:)();
  swift_release();
  unint64_t v10 = *(void (**)(uint64_t))(v5 + 8);
  uint64_t v11 = sub_1001A2410();
  v10(v11);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v19);
  ProxyContainer.public.getter();
  sub_10017DF08((uint64_t *)&unk_100E6F450);
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  swift_release();
  ProxyContainer.callback.getter();
  sub_1001B1E64(v19, v20);
  sub_100162708();
  type metadata accessor for DebugCacheRegistry();
  ((void (*)(uint64_t, void, uint64_t))v14)(v9, v15, v3);
  dispatch thunk of CallbackRegistrationType.whenResolving<A>(_:scope:callback:)();
  uint64_t v12 = sub_1001A2410();
  v10(v12);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v19);
  ProxyContainer.public.getter();
  sub_100162708();
  type metadata accessor for DiagnosticManager();
  sub_10017A54C();
  swift_release();
  (*(void (**)(uint64_t, void, uint64_t))(v17 + 104))(v16, enum case for Scope.singleton(_:), v18);
  Definition.inScope(_:)();
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v16, v18);
  ProxyContainer.private.getter();
  RegistrationContainer.lazy(block:)();
  swift_release();
  ProxyContainer.public.getter();
  sub_100162708();
  type metadata accessor for DebugNotificationSubscriptionsViewController();
  sub_10017A54C();
  swift_release();
  return swift_release();
}

uint64_t sub_100078300(void (*a1)(uint64_t), uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(char *), uint64_t a6)
{
  uint64_t v72 = a6;
  uint64_t v73 = a5;
  uint64_t v77 = a4;
  uint64_t v78 = a1;
  uint64_t v74 = sub_10017DF08(&qword_100E64A58);
  __chkstk_darwin(v74);
  char v75 = (char *)&v62 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10017DF08(&qword_100E64A60);
  __chkstk_darwin(v8 - 8);
  uint64_t v71 = (char *)&v62 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v76 = type metadata accessor for WeatherConditionBackgroundModel();
  uint64_t v69 = *(void *)(v76 - 8);
  uint64_t v10 = __chkstk_darwin(v76);
  uint64_t v67 = (char *)&v62 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v68 = (char *)&v62 - v12;
  uint64_t v13 = sub_10017DF08(&qword_100E64A68);
  __chkstk_darwin(v13);
  unsigned int v15 = (char *)&v62 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_10017DF08(&qword_100E64A70);
  uint64_t v17 = __chkstk_darwin(v16 - 8);
  uint64_t v70 = (uint64_t)&v62 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v21 = (char *)&v62 - v20;
  uint64_t v22 = __chkstk_darwin(v19);
  unint64_t v24 = (char *)&v62 - v23;
  __chkstk_darwin(v22);
  uint64_t v26 = (char *)&v62 - v25;
  uint64_t v27 = type metadata accessor for WeatherConditionBackgroundModelFactoryInput();
  uint64_t v28 = *(void *)(v27 - 8);
  uint64_t v29 = __chkstk_darwin(v27);
  uint64_t v65 = (char *)&v62 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v29);
  unint64_t v32 = (char *)&v62 - v31;
  v78(a3 + 64);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v26, 1, v27) == 1) {
    return sub_1001781AC((uint64_t)v26, &qword_100E64A70);
  }
  char v63 = *(void (**)(char *, char *, uint64_t))(v28 + 32);
  v63(v32, v26, v27);
  uint64_t v34 = *(void (**)(char *, char *, uint64_t))(v28 + 16);
  uint64_t v66 = v32;
  uint64_t v64 = v34;
  v34(v24, v32, v27);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v24, 0, 1, v27);
  sub_10002D438((uint64_t)v21);
  uint64_t v35 = (uint64_t)&v15[*(int *)(v13 + 48)];
  uint64_t v78 = (void (*)(uint64_t))v27;
  sub_10006DF38((uint64_t)v24, (uint64_t)v15, &qword_100E64A70);
  uint64_t v36 = (uint64_t)v78;
  sub_10006DF38((uint64_t)v21, v35, &qword_100E64A70);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v15, 1, v36) == 1)
  {
    sub_1001781AC((uint64_t)v21, &qword_100E64A70);
    sub_1001781AC((uint64_t)v24, &qword_100E64A70);
    if (_s7Weather24LocationCompositionStateOwet_0(v35, 1, v36) == 1)
    {
      sub_1001781AC((uint64_t)v15, &qword_100E64A70);
      return (*(uint64_t (**)(char *, uint64_t))(v28 + 8))(v66, v36);
    }
    goto LABEL_8;
  }
  uint64_t v37 = v70;
  sub_10006DF38((uint64_t)v15, v70, &qword_100E64A70);
  if (_s7Weather24LocationCompositionStateOwet_0(v35, 1, v36) == 1)
  {
    sub_1001781AC((uint64_t)v21, &qword_100E64A70);
    sub_1001781AC((uint64_t)v24, &qword_100E64A70);
    (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v37, v36);
LABEL_8:
    sub_1001781AC((uint64_t)v15, &qword_100E64A68);
    uint64_t v38 = v66;
    goto LABEL_9;
  }
  uint64_t v62 = v28 + 16;
  uint64_t v50 = v65;
  v63(v65, (char *)v35, v36);
  sub_100128B0C(&qword_100E64A98, (void (*)(uint64_t))&type metadata accessor for WeatherConditionBackgroundModelFactoryInput);
  char v51 = dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t v52 = *(void (**)(char *, uint64_t))(v28 + 8);
  v52(v50, v36);
  sub_1001781AC((uint64_t)v21, &qword_100E64A70);
  sub_1001781AC((uint64_t)v24, &qword_100E64A70);
  v52((char *)v37, (uint64_t)v78);
  uint64_t v36 = (uint64_t)v78;
  sub_1001781AC((uint64_t)v15, &qword_100E64A70);
  uint64_t v38 = v66;
  if (v51) {
    return ((uint64_t (*)(char *, uint64_t))v52)(v66, v36);
  }
LABEL_9:
  uint64_t v39 = v28;
  uint64_t v40 = (uint64_t)v71;
  v73(v38);
  uint64_t v41 = v76;
  if (_s7Weather24LocationCompositionStateOwet_0(v40, 1, v76) == 1)
  {
    sub_1001781AC(v40, &qword_100E64A60);
    uint64_t v42 = v77;
LABEL_13:
    sub_10017DF08(&qword_100E64A78);
    uint64_t v48 = (uint64_t)v75;
    v64(v75, v38, v36);
    sub_1000D900C();
    (*(void (**)(char *, uint64_t))(v39 + 8))(v38, v36);
    swift_storeEnumTagMultiPayload();
    uint64_t v49 = v42 + *(void *)(*(void *)v42 + 120);
    swift_beginAccess();
    sub_1001DF004(v48, v49, &qword_100E64A58);
    return swift_endAccess();
  }
  uint64_t v43 = v68;
  uint64_t v44 = v69;
  (*(void (**)(char *, uint64_t, uint64_t))(v69 + 32))(v68, v40, v41);
  uint64_t v45 = v67;
  uint64_t v42 = v77;
  sub_1000D900C();
  sub_100128B0C((unint64_t *)&qword_100E64A80, (void (*)(uint64_t))&type metadata accessor for WeatherConditionBackgroundModel);
  char v46 = dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t v47 = *(void (**)(char *, uint64_t))(v44 + 8);
  v47(v45, v41);
  if (v46)
  {
    v47(v43, v41);
    uint64_t v38 = v66;
    goto LABEL_13;
  }
  uint64_t v73 = (void (*)(char *))v47;
  if (qword_100E62828 != -1) {
    swift_once();
  }
  uint64_t v53 = type metadata accessor for Logger();
  sub_1002102B0(v53, (uint64_t)qword_100F51F80);
  unint64_t v54 = Logger.logObject.getter();
  os_log_type_t v55 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v54, v55))
  {
    uint64_t v56 = swift_slowAlloc();
    v80[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v56 = 136446466;
    uint64_t v79 = sub_10016414C(0xD00000000000002BLL, 0x8000000100C97080, v80);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v56 + 12) = 2082;
    uint64_t v79 = sub_10016414C(0xD00000000000001FLL, 0x8000000100C970B0, v80);
    uint64_t v43 = v68;
    uint64_t v36 = (uint64_t)v78;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v54, v55, "Selector observed model difference for %{public}s, %{public}s; views will update",
      (uint8_t *)v56,
      0x16u);
    swift_arrayDestroy();
    uint64_t v41 = v76;
    swift_slowDealloc();
    swift_slowDealloc();
  }

  uint64_t v57 = sub_10017DF08(&qword_100E64A78);
  uint64_t v58 = (uint64_t)v75;
  unint64_t v59 = &v75[*(int *)(v57 + 48)];
  char v60 = v66;
  v64(v75, v66, v36);
  (*(void (**)(char *, char *, uint64_t))(v69 + 16))(v59, v43, v41);
  swift_storeEnumTagMultiPayload();
  uint64_t v61 = v42 + *(void *)(*(void *)v42 + 120);
  swift_beginAccess();
  sub_1001DF004(v58, v61, &qword_100E64A58);
  swift_endAccess();
  sub_10017DF08(&qword_100E64A88);
  sub_1001246C8(&qword_100E64A90, &qword_100E64A88);
  ObservableObject<>.objectWillChange.getter();
  ObservableObjectPublisher.send()();
  swift_release();
  ((void (*)(char *, uint64_t))v73)(v43, v41);
  return (*(uint64_t (**)(char *, uint64_t))(v39 + 8))(v60, v36);
}

uint64_t assignWithCopy for LocationHeaderViewGradientBackground(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  char v4 = *(unsigned char *)(a2 + 8);
  sub_100195B7C(*(void *)a2, v4);
  uint64_t v5 = *(void *)a1;
  char v6 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  sub_10018F6D8(v5, v6);
  return a1;
}

uint64_t sub_100078DD8()
{
  uint64_t v0 = type metadata accessor for Scope();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  ProxyContainer.public.getter();
  type metadata accessor for Tracker();
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for Scope.containerSingleton(_:), v0);
  Definition.inScope(_:)();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  type metadata accessor for ListViewModelFactory();
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  sub_10017DF08(&qword_100E90C40);
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  sub_10017DF08(&qword_100E90C48);
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  sub_10017DF08(&qword_100E90C50);
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  sub_10017DF08(&qword_100E64AF0);
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  sub_10017DF08((uint64_t *)&unk_100EAAA90);
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  sub_10017DF08(&qword_100E8DD58);
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  sub_10017DF08(&qword_100E8DD60);
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  sub_10017DF08(&qword_100E90C58);
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  sub_10017DF08(&qword_100E90C60);
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  sub_10017DF08(&qword_100E64A88);
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  sub_10017DF08(&qword_100E907D8);
  RegistrationContainer.register<A>(_:name:factory:)();
  return swift_release();
}

uint64_t sub_1000791D4@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for NotificationSubscription.Kind();
  sub_100179C0C();
  __chkstk_darwin(v2);
  sub_1001626E0();
  type metadata accessor for NotificationsAction();
  sub_100162E4C();
  __chkstk_darwin(v3);
  sub_1001626E0();
  char v6 = (char *)(v5 - v4);
  uint64_t v7 = sub_10017DF08(&qword_100E7F4F8);
  sub_100179C0C();
  uint64_t v9 = v8;
  __chkstk_darwin(v10);
  sub_1001626E0();
  uint64_t v13 = v12 - v11;
  sub_100079770(v1, (uint64_t)v6);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v16 = (uint64_t)&v6[*(int *)(sub_10017DF08((uint64_t *)&unk_100EAC3E0) + 48)];
      Dictionary.init(dictionaryLiteral:)();
      type metadata accessor for MainAction();
      ShortDescription.init(name:_:)();
      sub_100658530(v16);
      sub_100658590((uint64_t)v6, (void (*)(void))type metadata accessor for NotificationLocation);
      goto LABEL_11;
    case 2u:
      sub_10017DF08(&qword_100E6F630);
      uint64_t v17 = sub_10019EEA4();
      v18(v17);
      sub_10017DF08(&qword_100E635E0);
      uint64_t inited = (__n128 *)swift_initStackObject();
      uint64_t v20 = sub_1001A0BDC(inited, (__n128)xmmword_100C251B0);
      inited[4].n128_u64[1] = (unint64_t)&type metadata for String;
      inited[3].n128_u64[0] = v20;
      inited[3].n128_u64[1] = v21;
      Dictionary.init(dictionaryLiteral:)();
      type metadata accessor for MainAction();
      ShortDescription.init(name:_:)();
      uint64_t v22 = sub_1001800A0();
      v23(v22);
      type metadata accessor for NotificationSubscription.Location();
      goto LABEL_7;
    case 3u:
    case 4u:
      swift_bridgeObjectRelease();
      Dictionary.init(dictionaryLiteral:)();
      sub_10017E740();
      sub_10017D204();
      goto LABEL_10;
    case 5u:
      sub_10017DF08(&qword_100E6F638);
      uint64_t v24 = sub_10019EEA4();
      v25(v24);
      sub_10017DF08(&qword_100E635E0);
      uint64_t v26 = (__n128 *)swift_initStackObject();
      uint64_t v27 = sub_1001A0BDC(v26, (__n128)xmmword_100C251B0);
      v26[4].n128_u64[1] = (unint64_t)&type metadata for String;
      v26[3].n128_u64[0] = v27;
      v26[3].n128_u64[1] = v28;
      Dictionary.init(dictionaryLiteral:)();
      type metadata accessor for MainAction();
      ShortDescription.init(name:_:)();
      uint64_t v29 = sub_1001800A0();
      v30(v29);
      type metadata accessor for Location();
LABEL_7:
      sub_100162E4C();
      (*(void (**)(char *))(v31 + 8))(v6);
      goto LABEL_11;
    case 6u:
      char v32 = *v6;
      sub_10017DF08(&qword_100E635E0);
      uint64_t v33 = swift_initStackObject();
      *(_OWORD *)(v33 + 16) = xmmword_100C251B0;
      strcpy((char *)(v33 + 32), "availability");
      *(unsigned char *)(v33 + 45) = 0;
      *(_WORD *)(v33 + 46) = -5120;
      *(void *)(v33 + 72) = &type metadata for Bool;
      *(unsigned char *)(v33 + 48) = v32;
      Dictionary.init(dictionaryLiteral:)();
      sub_10017E740();
      sub_10017D204();
      goto LABEL_10;
    case 7u:
      Dictionary.init(dictionaryLiteral:)();
      sub_10017E740();
      sub_10017D204();
      goto LABEL_10;
    default:
      char v14 = *v6;
      sub_10017DF08(&qword_100E635E0);
      uint64_t v15 = swift_initStackObject();
      *(_OWORD *)(v15 + 16) = xmmword_100C251B0;
      *(void *)(v15 + 32) = 0x6574617473;
      *(void *)(v15 + 40) = 0xE500000000000000;
      *(void *)(v15 + 72) = &type metadata for NotificationAuthorizationState;
      *(unsigned char *)(v15 + 48) = v14;
      Dictionary.init(dictionaryLiteral:)();
      sub_10017E740();
      sub_10017D204();
LABEL_10:
      ShortDescription.init(name:_:)();
LABEL_11:
      a1[3] = v7;
      a1[4] = sub_1001706F8();
      uint64_t v34 = sub_100170694(a1);
      return (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v9 + 32))(v34, v13, v7);
  }
}

uint64_t sub_100079770(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for NotificationsAction();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1000797D4(uint64_t a1@<X1>, double *a2@<X8>)
{
  uint64_t v4 = type metadata accessor for NamedCoordinateSpace();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = &v13[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = type metadata accessor for TemperatureModifier(0);
  double v9 = 0.0;
  if (*(unsigned char *)(a1 + *(int *)(v8 + 24)) == 1)
  {
    uint64_t v10 = v8;
    static CoordinateSpaceProtocol<>.scrollView.getter();
    GeometryProxy.bounds(of:)();
    (*(void (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
    sub_10024D364((uint64_t)v13, (uint64_t)&v14, &qword_100E64498);
    double MinY = 0.0;
    if ((v15 & 1) == 0) {
      double MinY = CGRectGetMinY(v14);
    }
    double v12 = *(double *)(a1 + *(int *)(v10 + 28));
    if (v12 >= -MinY) {
      double v9 = MinY + v12;
    }
  }
  *a2 = v9;
}

uint64_t sub_100079930(uint64_t a1, void (*a2)(void), uint64_t (*a3)(void))
{
  a2(0);
  sub_10017B22C();
  return sub_1000799A0(a1, v5, a3);
}

uint64_t sub_1000799A0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  return State.wrappedValue.setter();
}

uint64_t sub_100079A14()
{
  uint64_t v0 = sub_100079A40();
  return sub_100182AB8(v0);
}

uint64_t sub_100079A40()
{
  return sub_10018C9CC((void (*)(void))sub_10019C348);
}

uint64_t destroy for LazyUntilLocationViewLoadedIfBelowTheFoldViewModifier()
{
  swift_release();

  return swift_release();
}

uint64_t sub_100079A9C(uint64_t a1, int a2, int a3)
{
  int v53 = a3;
  int v59 = a2;
  uint64_t v3 = type metadata accessor for BackgroundAnimationData.Model();
  uint64_t v56 = *(void *)(v3 - 8);
  uint64_t v57 = v3;
  __chkstk_darwin(v3);
  os_log_type_t v55 = (char *)&v49 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10017DF08(&qword_100E64A60);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v49 - v9;
  uint64_t v11 = type metadata accessor for BackgroundAnimationKind();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v11);
  char v15 = (char *)&v49 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __chkstk_darwin(v13);
  unint64_t v54 = (char *)&v49 - v17;
  __chkstk_darwin(v16);
  uint64_t v58 = (char *)&v49 - v18;
  uint64_t v19 = type metadata accessor for BackgroundAnimationData();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v23 = (char *)&v49 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  uint64_t v25 = (char *)&v49 - v24;
  if ((WeatherConditionBackgroundModel.canShowAnimatedBackground.getter() & 1) == 0)
  {
    WeatherConditionBackgroundModel.animationKind.getter();
    int v38 = (*(uint64_t (**)(char *, uint64_t))(v12 + 88))(v15, v11);
    if (v38 == enum case for BackgroundAnimationKind.vfx(_:))
    {
      type metadata accessor for WeatherConditionBackgroundModifier(0);
      WeatherVFXConditionBackground.reset(animated:)(0);
    }
    else if (v38 == enum case for BackgroundAnimationKind.mica(_:))
    {
      type metadata accessor for WeatherConditionBackgroundModifier(0);
      type metadata accessor for WeatherMicaConditionBackground();
      sub_1001CA9B8(&qword_100EB4A70, (void (*)(uint64_t))type metadata accessor for WeatherMicaConditionBackground);
      StateObject.wrappedValue.getter();
      sub_1004390D0(0);
      swift_release();
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
    }
    uint64_t v44 = type metadata accessor for WeatherConditionBackgroundModel();
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v10, 1, 1, v44);
    type metadata accessor for WeatherConditionBackgroundModifier(0);
    sub_10006DF38((uint64_t)v10, (uint64_t)v8, &qword_100E64A60);
    sub_10017DF08(&qword_100EB4860);
    goto LABEL_20;
  }
  uint64_t v51 = v12;
  uint64_t v52 = v11;
  uint64_t v49 = v8;
  uint64_t v50 = v10;
  WeatherConditionBackgroundModel.animationData.getter();
  uint64_t v26 = *(uint64_t (**)(char *, uint64_t))(v20 + 88);
  int v27 = v26(v25, v19);
  int v28 = enum case for BackgroundAnimationData.none(_:);
  uint64_t v29 = v25;
  uint64_t v30 = *(void (**)(char *, uint64_t))(v20 + 8);
  v30(v29, v19);
  if (v27 == v28 || (v59 & 1) != 0)
  {
    uint64_t v39 = v58;
    WeatherConditionBackgroundModel.animationKind.getter();
    uint64_t v41 = v51;
    uint64_t v40 = v52;
    int v42 = (*(uint64_t (**)(char *, uint64_t))(v51 + 88))(v39, v52);
    if (v42 == enum case for BackgroundAnimationKind.vfx(_:))
    {
      type metadata accessor for WeatherConditionBackgroundModifier(0);
      WeatherVFXConditionBackground.reset(animated:)(1);
      uint64_t v43 = (uint64_t)v49;
      uint64_t v10 = v50;
    }
    else
    {
      uint64_t v43 = (uint64_t)v49;
      uint64_t v10 = v50;
      if (v42 == enum case for BackgroundAnimationKind.mica(_:))
      {
        type metadata accessor for WeatherConditionBackgroundModifier(0);
        type metadata accessor for WeatherMicaConditionBackground();
        sub_1001CA9B8(&qword_100EB4A70, (void (*)(uint64_t))type metadata accessor for WeatherMicaConditionBackground);
        StateObject.wrappedValue.getter();
        sub_1004390D0((v59 & 1) == 0);
        swift_release();
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v41 + 8))(v39, v40);
      }
    }
    uint64_t v46 = type metadata accessor for WeatherConditionBackgroundModel();
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v10, 1, 1, v46);
    type metadata accessor for WeatherConditionBackgroundModifier(0);
    sub_10006DF38((uint64_t)v10, v43, &qword_100E64A60);
    sub_10017DF08(&qword_100EB4860);
LABEL_20:
    State.wrappedValue.setter();
    return sub_100178110((uint64_t)v10, &qword_100E64A60);
  }
  WeatherConditionBackgroundModel.animationData.getter();
  if (v26(v23, v19) != enum case for BackgroundAnimationData.loaded(_:)) {
    return ((uint64_t (*)(char *, uint64_t))v30)(v23, v19);
  }
  (*(void (**)(char *, uint64_t))(v20 + 96))(v23, v19);
  unint64_t v32 = (unint64_t)v55;
  uint64_t v31 = v56;
  uint64_t v33 = v57;
  (*(void (**)(char *, char *, uint64_t))(v56 + 32))(v55, v23, v57);
  uint64_t v34 = v54;
  WeatherConditionBackgroundModel.animationKind.getter();
  uint64_t v36 = v51;
  uint64_t v35 = v52;
  int v37 = (*(uint64_t (**)(char *, uint64_t))(v51 + 88))(v34, v52);
  if (v37 == enum case for BackgroundAnimationKind.vfx(_:))
  {
    type metadata accessor for WeatherConditionBackgroundModifier(0);
    swift_getObjectType();
    WeatherConditionBackgroundManagerType.executeRequests()();
    return (*(uint64_t (**)(unint64_t, uint64_t))(v31 + 8))(v32, v33);
  }
  if (v37 == enum case for BackgroundAnimationKind.mica(_:))
  {
    uint64_t v47 = type metadata accessor for WeatherConditionBackgroundModifier(0);
    uint64_t v48 = v60;
    type metadata accessor for WeatherMicaConditionBackground();
    sub_1001CA9B8(&qword_100EB4A70, (void (*)(uint64_t))type metadata accessor for WeatherMicaConditionBackground);
    StateObject.wrappedValue.getter();
    sub_100436E68(v32, (void *)(v48 + *(int *)(v47 + 48)), v53 & 1);
    swift_release();
    return (*(uint64_t (**)(unint64_t, uint64_t))(v31 + 8))(v32, v33);
  }
  (*(void (**)(unint64_t, uint64_t))(v31 + 8))(v32, v33);
  return (*(uint64_t (**)(char *, uint64_t))(v36 + 8))(v34, v35);
}

void sub_10007A298()
{
  sub_100162EA0();
  uint64_t v63 = v7;
  uint64_t v64 = v6;
  uint64_t v8 = sub_10017DF08(qword_100E66490);
  uint64_t v9 = sub_100109308(v8);
  __chkstk_darwin(v9);
  sub_100109314();
  uint64_t v62 = v10;
  uint64_t v11 = sub_10017DF08(&qword_100E65BC0);
  uint64_t v12 = sub_100109308(v11);
  __chkstk_darwin(v12);
  sub_10017EF38(v13, v57);
  uint64_t v14 = sub_10017DF08(&qword_100E663F8);
  uint64_t v15 = sub_100109308(v14);
  __chkstk_darwin(v15);
  sub_100125FF8();
  uint64_t v16 = sub_10017DF08(&qword_100E66400);
  uint64_t v17 = sub_100109308(v16);
  __chkstk_darwin(v17);
  sub_100109370();
  uint64_t v18 = sub_10017DF08(&qword_100E66410);
  uint64_t v19 = sub_100109308(v18);
  __chkstk_darwin(v19);
  sub_10017B2B0(v20, v57);
  uint64_t v21 = sub_10017DF08(&qword_100E66408);
  uint64_t v22 = sub_100109308(v21);
  __chkstk_darwin(v22);
  sub_10016278C();
  sub_1001190EC();
  __chkstk_darwin(v23);
  uint64_t v25 = (char *)&v57 - v24;
  uint64_t v26 = type metadata accessor for SearchViewState(0);
  sub_100162E4C();
  __chkstk_darwin(v27);
  sub_10017FDD0();
  uint64_t v59 = type metadata accessor for DisplayMetrics();
  sub_100162E4C();
  __chkstk_darwin(v28);
  sub_10011C760();
  uint64_t v29 = (int *)type metadata accessor for ViewState(0);
  uint64_t v30 = *(void *)(v1 + v29[9] + 8);
  sub_10011E568();
  BOOL v31 = v30 != 2 || *(void *)(v3 + 8) != 1;
  sub_10011E4B4(v3, (void (*)(void))type metadata accessor for DisplayMetrics);
  uint64_t v32 = v1;
  sub_1001B7204(v1 + v29[8], (uint64_t)v25, &qword_100E66408);
  uint64_t v33 = sub_1001A1520();
  sub_10012B520(v33, v34, v26);
  if (v35)
  {
    sub_100178110((uint64_t)v25, &qword_100E66408);
  }
  else
  {
    sub_10011E6CC();
    unint64_t v36 = v0[1];
    if ((v36 & 0x2000000000000000) != 0) {
      uint64_t v37 = HIBYTE(v36) & 0xF;
    }
    else {
      uint64_t v37 = *v0 & 0xFFFFFFFFFFFFLL;
    }
    sub_10011E4B4((uint64_t)v0, (void (*)(void))type metadata accessor for SearchViewState);
    if (v37) {
      char v38 = v31;
    }
    else {
      char v38 = 1;
    }
    if ((v38 & 1) == 0)
    {
      BOOL v58 = 0;
      goto LABEL_16;
    }
  }
  BOOL v58 = sub_10001EE2C() != 0;
LABEL_16:
  uint64_t v39 = type metadata accessor for ViewState.SecondaryViewState(0);
  uint64_t v40 = v60;
  _s7Weather24LocationCompositionStateOwst_0(v60, 1, 1, v39);
  _s7Weather24LocationCompositionStateOwst_0(v5, 1, 1, v26);
  uint64_t v41 = v64;
  sub_10011E568();
  sub_1001093B0();
  _s7Weather24LocationCompositionStateOwst_0(v42, v43, v44, v59);
  uint64_t v45 = *(unsigned __int8 *)(v32 + v29[10]);
  uint64_t v46 = type metadata accessor for WeatherMapOverlayKind();
  uint64_t v47 = v61;
  uint64_t v50 = sub_100179C70(v61, v48, v49, v46);
  uint64_t v51 = type metadata accessor for WeatherMapTrackingState(v50);
  uint64_t v52 = v62;
  _s7Weather24LocationCompositionStateOwst_0(v62, 1, 1, v51);
  sub_100074324(v45, v41, v47, v52, v2);
  sub_100178110(v52, qword_100E66490);
  sub_100178110(v47, &qword_100E65BC0);
  type metadata accessor for WeatherMapPresentationState(0);
  sub_1001093B0();
  _s7Weather24LocationCompositionStateOwst_0(v53, v54, v55, v56);
  sub_10011D8AC();
  sub_100178110((uint64_t)v2, &qword_100E663F8);
  sub_100178110(v4, &qword_100E66400);
  sub_100178110(v5, &qword_100E66408);
  sub_100178110(v40, &qword_100E66410);
  sub_100162694();
}

uint64_t sub_10007A724()
{
  return sub_10007A794();
}

uint64_t sub_10007A75C()
{
  return sub_10007A794();
}

uint64_t sub_10007A794()
{
  swift_retain();
  sub_1000E71B8();
  swift_release();
  sub_10007A818();

  return swift_release();
}

uint64_t sub_10007A818()
{
  return swift_release();
}

uint64_t sub_10007A87C()
{
  return ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
}

uint64_t sub_10007A938(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v5 = sub_10017DF08(&qword_100E663F0);
  uint64_t v6 = sub_100109308(v5);
  __chkstk_darwin(v6);
  sub_100109314();
  uint64_t v72 = v7;
  uint64_t v8 = sub_10017DF08(&qword_100E66418);
  uint64_t v9 = sub_100109308(v8);
  __chkstk_darwin(v9);
  sub_100109314();
  uint64_t v10 = sub_10017DF08(&qword_100E66420);
  uint64_t v11 = sub_100109308(v10);
  __chkstk_darwin(v11);
  sub_100109314();
  uint64_t v12 = sub_10017DF08(&qword_100E66428);
  uint64_t v13 = sub_100109308(v12);
  __chkstk_darwin(v13);
  sub_1001626E0();
  uint64_t v16 = v15 - v14;
  uint64_t v17 = sub_10017DF08(&qword_100E66430);
  uint64_t v18 = sub_100109308(v17);
  __chkstk_darwin(v18);
  sub_1001626E0();
  uint64_t v21 = v20 - v19;
  uint64_t v22 = sub_10017DF08(&qword_100E63730);
  uint64_t v23 = sub_100109308(v22);
  __chkstk_darwin(v23);
  sub_1001626E0();
  uint64_t v26 = v25 - v24;
  uint64_t v27 = type metadata accessor for EnvironmentState();
  __chkstk_darwin(v27);
  sub_1001626E0();
  uint64_t v30 = v29 - v28;
  uint64_t v31 = sub_10017DF08(&qword_100E66438);
  uint64_t v32 = sub_100109308(v31);
  __chkstk_darwin(v32);
  sub_1001626E0();
  uint64_t v35 = v34 - v33;
  uint64_t v36 = sub_10017DF08(&qword_100E66440);
  uint64_t v37 = sub_100109308(v36);
  __chkstk_darwin(v37);
  sub_1001626E0();
  uint64_t v40 = v39 - v38;
  uint64_t v41 = type metadata accessor for AppConfigurationState();
  sub_1001A2734(v41);
  sub_10017EBDC();
  sub_1000F1324(a2, v30);
  uint64_t v42 = type metadata accessor for Locale();
  sub_100164EB8(v42);
  sub_10017AC20();
  if ((a3 & 0x100) != 0)
  {
    v69[2] = v43;
    *(_WORD *)uint64_t v69 = 513;
    unsigned __int8 v44 = sub_1001A1050();
    int v47 = 5;
  }
  else
  {
    v69[2] = 2;
    *(_WORD *)uint64_t v69 = 513;
    unsigned __int8 v44 = sub_1001A1050();
    int v47 = a3;
  }
  sub_1000F0AD4(v44, v45, v47, v26, 0, 0, 2, 2, v46, v67[0], v67[1], v67[2], 0, v69[0], v69[1], v69[2], (uint64_t)v73);
  sub_1000F3400(v26, &qword_100E63730);
  sub_1000F12C8(v30);
  _s7Weather24LocationCompositionStateOwst_0(v35, 0, 1, v27);
  uint64_t v48 = type metadata accessor for LocationsState();
  sub_100179C70(v21, v49, v50, v48);
  uint64_t v51 = type metadata accessor for NotificationsOptInState();
  sub_100179C70(v16, v52, v53, v51);
  uint64_t v54 = type metadata accessor for TimeState();
  uint64_t v55 = v68;
  uint64_t v58 = sub_100179C70(v68, v56, v57, v54);
  uint64_t v59 = type metadata accessor for ViewState(v58);
  uint64_t v60 = v70;
  uint64_t v63 = sub_100179C70(v70, v61, v62, v59);
  uint64_t v64 = type metadata accessor for ModalViewState(v63);
  _s7Weather24LocationCompositionStateOwst_0(v72, 1, 1, v64);
  uint64_t v65 = sub_1001659F0(0, 3, v40, v35, v21, 0, 0, 0, 0, v16, v68, v70, v72, 0, 0, 0, 0, 0, 0, 0, v71);
  sub_1000F3400(v72, &qword_100E663F0);
  sub_1000F3400(v60, &qword_100E66418);
  sub_1000F3400(v55, &qword_100E66420);
  sub_1000F3400(v16, &qword_100E66428);
  sub_1000F3400(v21, &qword_100E66430);
  sub_1000F3400(v35, &qword_100E66438);
  sub_1000F3400(v40, &qword_100E66440);
  return v65;
}

uint64_t sub_10007ADE8@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E6CF20);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v7)
  {
    uint64_t v4 = type metadata accessor for WeatherConditionBackgroundTimeDataFactory();
    uint64_t v5 = swift_allocObject();
    uint64_t result = sub_1001262E4(&v6, v5 + 16);
    a2[3] = v4;
    a2[4] = (uint64_t)&off_100E19AF8;
    *a2 = v5;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10007AE8C(void *a1)
{
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E7CD30);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v21)
  {
    uint64_t v2 = sub_1000DF0C4((uint64_t)v20, v21);
    __chkstk_darwin(v2);
    uint64_t v4 = (void *)((char *)v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v5 + 16))(v4);
    uint64_t v6 = *v4;
    uint64_t v7 = type metadata accessor for WeatherConditionBackgroundTimeDataFactory();
    void v19[3] = v7;
    uint64_t v19[4] = &off_100E19AF8;
    v19[0] = v6;
    type metadata accessor for WeatherConditionBackgroundModelInputFactory();
    uint64_t v8 = swift_allocObject();
    uint64_t v9 = sub_1000DF0C4((uint64_t)v19, v7);
    __chkstk_darwin(v9);
    uint64_t v11 = (void *)((char *)v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v12 + 16))(v11);
    uint64_t v13 = *v11;
    uint64_t v14 = (void *)(v8
                   + OBJC_IVAR____TtC7Weather43WeatherConditionBackgroundModelInputFactory_weatherConditionBackgroundTimeDataFactory);
    void v14[3] = v7;
    void v14[4] = &off_100E19AF8;
    void *v14 = v13;
    uint64_t v15 = v8
        + OBJC_IVAR____TtC7Weather43WeatherConditionBackgroundModelInputFactory____lazy_storage___locationAnimationKind;
    uint64_t v16 = type metadata accessor for Settings.VFX.AnimatedBackgrounds.AnimationKind();
    _s7Weather24LocationCompositionStateOwst_0(v15, 1, 1, v16);
    uint64_t v17 = v8 + OBJC_IVAR____TtC7Weather43WeatherConditionBackgroundModelInputFactory____lazy_storage___animationKind;
    uint64_t v18 = type metadata accessor for BackgroundAnimationKind();
    _s7Weather24LocationCompositionStateOwst_0(v17, 1, 1, v18);
    *(unsigned char *)(v8
             + OBJC_IVAR____TtC7Weather43WeatherConditionBackgroundModelInputFactory_forceTileGradientPresentationContext) = 0;
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v19);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v20);
    return v8;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t type metadata accessor for WeatherConditionBackgroundTimeDataFactory()
{
  return self;
}

uint64_t sub_10007B11C@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  sub_1001B1E64(a1, a1[3]);
  uint64_t v5 = type metadata accessor for WeatherConditionBackgroundModelInputFactory();
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (result)
  {
    a3[3] = v5;
    a3[4] = a2;
    *a3 = result;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t type metadata accessor for WeatherConditionBackgroundModelInputFactory()
{
  uint64_t result = qword_100EAC008;
  if (!qword_100EAC008) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10007B1D4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Location.Identifier();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + a3[6]) = *(unsigned char *)(a2 + a3[6]);
  uint64_t v10 = a3[7];
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  char v13 = *(unsigned char *)(v12 + 32);
  long long v14 = *(_OWORD *)(v12 + 16);
  *(_OWORD *)uint64_t v11 = *(_OWORD *)v12;
  *(_OWORD *)(v11 + 16) = v14;
  *(unsigned char *)(v11 + 32) = v13;
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  uint64_t v15 = a3[9];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = *(void *)v17;
  char v19 = *(unsigned char *)(v17 + 8);
  sub_100195B7C(*(void *)v17, v19);
  uint64_t v20 = *(void *)v16;
  char v21 = *(unsigned char *)(v16 + 8);
  *(void *)uint64_t v16 = v18;
  *(unsigned char *)(v16 + 8) = v19;
  sub_10018F6D8(v20, v21);
  uint64_t v22 = a3[10];
  uint64_t v23 = a1 + v22;
  uint64_t v24 = a2 + v22;
  uint64_t v25 = *(void *)v24;
  char v26 = *(unsigned char *)(v24 + 8);
  sub_100195B7C(*(void *)v24, v26);
  uint64_t v27 = *(void *)v23;
  char v28 = *(unsigned char *)(v23 + 8);
  *(void *)uint64_t v23 = v25;
  *(unsigned char *)(v23 + 8) = v26;
  sub_10018F6D8(v27, v28);
  uint64_t v29 = a3[11];
  uint64_t v30 = a1 + v29;
  uint64_t v31 = a2 + v29;
  *(void *)(a1 + v29) = *(void *)(a2 + v29);
  swift_retain();
  swift_release();
  *(void *)(v30 + 8) = *(void *)(v31 + 8);
  if (a1 != a2)
  {
    uint64_t v32 = a3[12];
    uint64_t v33 = (void *)(a1 + v32);
    uint64_t v34 = (void *)(a2 + v32);
    sub_10017DF4C(a1 + v32, &qword_100E78CE0);
    sub_10017DF08(&qword_100E78CE0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v35 = type metadata accessor for ForegroundEffect();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v34, 1, v35))
      {
        uint64_t v36 = sub_10017DF08(&qword_100E65FA8);
        memcpy(v33, v34, *(void *)(*(void *)(v36 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v35 - 8) + 16))(v33, v34, v35);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v33, 0, 1, v35);
      }
    }
    else
    {
      void *v33 = *v34;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v37 = a3[13];
    uint64_t v38 = (void *)(a1 + v37);
    uint64_t v39 = (void *)(a2 + v37);
    sub_10017DF4C(a1 + v37, &qword_100E82BD8);
    sub_10017DF08(&qword_100E82BD8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *uint64_t v38 = *v39;
      uint64_t v40 = *(int *)(type metadata accessor for LocationComponentCornerRadiusConfiguration(0) + 20);
      uint64_t v41 = (char *)v38 + v40;
      uint64_t v42 = (char *)v39 + v40;
      uint64_t v43 = type metadata accessor for RoundedCornerStyle();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 16))(v41, v42, v43);
    }
    else
    {
      *uint64_t v38 = *v39;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void sub_10007B510()
{
  if (qword_100E62898 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for Logger();
  sub_1002102B0(v0, (uint64_t)qword_100F520D0);
  swift_bridgeObjectRetain_n();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.default.getter();
  uint64_t v3 = &OBJC_INSTANCE_METHODS__TtC7Weather27LocalSearchCompleterManager;
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v4 = (uint8_t *)sub_10017E670();
    uint64_t v14 = sub_10016EEA8();
    *(_DWORD *)uint64_t v4 = 136315138;
    swift_bridgeObjectRetain();
    uint64_t v5 = String.init<A>(describing:)();
    sub_10016414C(v5, v6, &v14);
    uint64_t v3 = &OBJC_INSTANCE_METHODS__TtC7Weather27LocalSearchCompleterManager;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    sub_1001A38D0();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "tipPriorityQueue update attempted - queue=%s", v4, 0xCu);
    swift_arrayDestroy();
    sub_100162EE0();
    sub_100162EE0();
  }
  else
  {

    sub_1001A38D0();
  }
  uint64_t v7 = sub_10003CF6C();
  if (!v7 || (uint64_t v8 = *(void *)(v7 + 16), swift_bridgeObjectRelease(), !v8))
  {
    swift_bridgeObjectRetain();
    sub_1000142DC();
    swift_bridgeObjectRetain_n();
    uint64_t v9 = Logger.logObject.getter();
    os_log_type_t v10 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v11 = (uint8_t *)sub_10017E670();
      uint64_t v14 = sub_10016EEA8();
      *(_DWORD *)uint64_t v11 = v3[478];
      swift_bridgeObjectRetain();
      uint64_t v12 = String.init<A>(describing:)();
      sub_10016414C(v12, v13, &v14);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      sub_1001A38D0();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v9, v10, "tipPriorityQueueUpdated - queue=%s", v11, 0xCu);
      swift_arrayDestroy();
      sub_100162EE0();
      sub_100162EE0();
    }
    else
    {

      sub_1001A38D0();
    }
  }
}

uint64_t sub_10007B7F0(void *a1)
{
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E64798);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v57)
  {
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v35 = v58;
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E647D8);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v55)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  uint64_t v32 = v59;
  uint64_t v33 = v60;
  uint64_t v34 = v57;
  sub_1001B1E64(a1, a1[3]);
  type metadata accessor for WeatherService();
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:name:)();
  if (!result)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v3 = result;
  sub_1001B1E64(a1, a1[3]);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:name:)();
  if (!result)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v4 = result;
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E8DE50);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v54)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E6FC60);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v52)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E980C8);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v50)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E98190);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v48)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E97090);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v46)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E98008);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v44)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  sub_1001B1E64(a1, a1[3]);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:name:)();
  char v5 = v42;
  if (v42 == 2)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E98000);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v41)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E8DE60);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v39)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  uint64_t v28 = v4;
  uint64_t v29 = v3;
  uint64_t v30 = v56;
  uint64_t v31 = v55;
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E728A0);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v37)
  {
    uint64_t v6 = sub_1000DF0C4((uint64_t)v49, v50);
    uint64_t v27 = (uint64_t)&v27;
    __n128 v7 = __chkstk_darwin(v6);
    uint64_t v9 = (uint64_t *)((char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, __n128))(v10 + 16))(v9, v7);
    uint64_t v11 = sub_1000DF0C4((uint64_t)v47, v48);
    __n128 v12 = __chkstk_darwin(v11);
    uint64_t v14 = (uint64_t *)((char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, __n128))(v15 + 16))(v14, v12);
    uint64_t v16 = sub_1000DF0C4((uint64_t)v40, v41);
    __n128 v17 = __chkstk_darwin(v16);
    char v19 = (uint64_t *)((char *)&v27 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, __n128))(v20 + 16))(v19, v17);
    uint64_t v21 = sub_1000DF0C4((uint64_t)v36, v37);
    __n128 v22 = __chkstk_darwin(v21);
    uint64_t v24 = (uint64_t **)((char *)&v27 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t **, __n128))(v25 + 16))(v24, v22);
    uint64_t v26 = sub_100037E7C(v34, v35, v32, v33, v31, v30, v29, v28, &v53, &v51, *v9, *v14, &v45, &v43, v5 & 1, *v19, &v38, *v24);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v36);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v40);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v47);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v49);
    return v26;
  }
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_10007BF28(uint64_t a1)
{
  type metadata accessor for VisibilityStateHolder();
  sub_100128D4C(&qword_100E9F250, (void (*)(uint64_t))type metadata accessor for VisibilityStateHolder);
  StateObject.wrappedValue.getter();
  sub_10007C004(1, *(void *)a1, *(void *)(a1 + 8), *(uint64_t (**)(uint64_t))(a1 + 16));

  return swift_release();
}

uint64_t type metadata accessor for VisibilityStateHolder()
{
  return self;
}

uint64_t sub_10007C004(char a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  uint64_t v30 = a2;
  uint64_t v31 = a3;
  int v7 = a1 & 1;
  uint64_t v8 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v34 = *(void *)(v8 - 8);
  uint64_t v35 = v8;
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for DispatchQoS();
  uint64_t v32 = *(void *)(v11 - 8);
  uint64_t v33 = v11;
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for DispatchTime();
  uint64_t v15 = __chkstk_darwin(v14);
  __n128 v17 = (char *)&v28 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = __chkstk_darwin(v15);
  uint64_t v21 = (char *)&v28 - v20;
  if (*(unsigned __int8 *)(v4 + 16) != v7)
  {
    *(unsigned char *)(v4 + 16) = v7;
    if (a1)
    {
      uint64_t v22 = v19;
      sub_1001AB3E0();
      uint64_t v28 = static OS_dispatch_queue.main.getter();
      static DispatchTime.now()();
      + infix(_:_:)();
      uint64_t v29 = *(void (**)(char *, uint64_t))(v22 + 8);
      v29(v17, v14);
      uint64_t v23 = swift_allocObject();
      uint64_t v24 = v31;
      *(void *)(v23 + 16) = v30;
      *(void *)(v23 + 24) = v24;
      aBlock[4] = sub_10021E384;
      aBlock[5] = v23;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_10010A4D4;
      void aBlock[3] = &unk_100E2CB30;
      uint64_t v25 = _Block_copy(aBlock);
      swift_retain();
      swift_release();
      static DispatchQoS.unspecified.getter();
      aBlock[0] = _swiftEmptyArrayStorage;
      sub_100128D4C((unint64_t *)&qword_100EA0200, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
      sub_10017DF08(&qword_100E75530);
      sub_1001246C8((unint64_t *)&qword_100EA0210, &qword_100E75530);
      uint64_t v26 = v35;
      dispatch thunk of SetAlgebra.init<A>(_:)();
      uint64_t v27 = (void *)v28;
      OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
      _Block_release(v25);

      (*(void (**)(char *, uint64_t))(v34 + 8))(v10, v26);
      (*(void (**)(char *, uint64_t))(v32 + 8))(v13, v33);
      return ((uint64_t (*)(char *, uint64_t))v29)(v21, v14);
    }
    else
    {
      return a4(result);
    }
  }
  return result;
}

uint64_t sub_10007C3FC(char a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  void (*v31)(void *__return_ptr, uint64_t);
  void (*v32)(void *__return_ptr, uint64_t);
  char v33;
  char v34;
  uint64_t v35;
  void (*v36)(void *__return_ptr, uint64_t);
  uint64_t v37;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  char v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t (*v51)(uint64_t);
  char v52;
  uint64_t result;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void (*v61)(uint64_t, uint64_t, uint64_t);
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  void *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  long long v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  void v81[6];
  char v82;
  _OWORD v83[2];
  uint64_t v84;

  uint64_t v69 = a8;
  uint64_t v68 = a7;
  uint64_t v67 = a6;
  LODWORD(v73) = a5;
  uint64_t v80 = a2;
  uint64_t v72 = sub_10017DF08(&qword_100E986F8);
  uint64_t v71 = *(void *)(v72 - 8);
  __chkstk_darwin(v72);
  uint64_t v79 = (char *)&v65 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v76 = type metadata accessor for NotificationSettingsData();
  char v75 = *(void *)(v76 - 8);
  uint64_t v12 = __chkstk_darwin(v76);
  uint64_t v70 = (char *)&v65 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v74 = (char *)&v65 - v14;
  uint64_t v15 = type metadata accessor for MainAction();
  uint64_t v77 = *(void *)(v15 - 8);
  uint64_t v16 = __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v65 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __chkstk_darwin(v16);
  uint64_t v66 = (uint64_t *)((char *)&v65 - v20);
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v23 = (uint64_t *)((char *)&v65 - v22);
  uint64_t v24 = __chkstk_darwin(v21);
  uint64_t v26 = (char *)&v65 - v25;
  if (a1)
  {
    type metadata accessor for NotificationsOptInAction();
    swift_storeEnumTagMultiPayload();
    swift_storeEnumTagMultiPayload();
    uint64_t v27 = (void *)sub_1001A6D34(0, 1, 1, (uint64_t)&_swiftEmptyArrayStorage);
    unint64_t v29 = v27[2];
    unint64_t v28 = v27[3];
    if (v29 >= v28 >> 1) {
      uint64_t v27 = (void *)sub_1001A6D34(v28 > 1, v29 + 1, 1, (uint64_t)v27);
    }
    void v27[2] = v29 + 1;
    uint64_t v24 = sub_10008FF6C((uint64_t)v26, (uint64_t)v27+ ((*(unsigned __int8 *)(v77 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v77 + 80))+ *(void *)(v77 + 72) * v29);
  }
  else
  {
    uint64_t v27 = &_swiftEmptyArrayStorage;
  }
  uint64_t v30 = (uint64_t *)(a4 + 16);
  uint64_t v31 = *(void (**)(void *__return_ptr, uint64_t))(v80 + 32);
  uint64_t v78 = *(void *)(v80 + 40);
  uint64_t v32 = v31;
  v31(v81, v24);
  swift_bridgeObjectRetain();
  swift_release();
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_10011968C();
  uint64_t v34 = v33;
  swift_bridgeObjectRelease();
  uint64_t v35 = swift_bridgeObjectRelease();
  if (v34)
  {
    uint64_t v36 = v32;
    uint64_t v37 = v77;
    v32(v81, v35);
  }
  else
  {
    swift_beginAccess();
    *uint64_t v23 = *(void *)(a3 + 16);
    type metadata accessor for NotificationsAction();
    swift_storeEnumTagMultiPayload();
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v37 = v77;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      uint64_t v27 = (void *)sub_1001A6D34(0, v27[2] + 1, 1, (uint64_t)v27);
    }
    uint64_t v36 = v32;
    uint64_t v40 = v27[2];
    uint64_t v39 = v27[3];
    if (v40 >= v39 >> 1) {
      uint64_t v27 = (void *)sub_1001A6D34(v39 > 1, v40 + 1, 1, (uint64_t)v27);
    }
    void v27[2] = v40 + 1;
    uint64_t v41 = sub_10008FF6C((uint64_t)v23, (uint64_t)v27+ ((*(unsigned __int8 *)(v37 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80))+ *(void *)(v37 + 72) * v40);
    v32(v81, v41);
  }
  swift_bridgeObjectRetain();
  swift_release();
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_10011968C();
  long long v43 = v42;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v43 & 1) == 0)
  {
    swift_beginAccess();
    uint64_t v44 = *v30;
    long long v45 = (uint64_t)v66;
    *uint64_t v66 = v44;
    type metadata accessor for NotificationsAction();
    swift_storeEnumTagMultiPayload();
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v27 = (void *)sub_1001A6D34(0, v27[2] + 1, 1, (uint64_t)v27);
    }
    int v47 = v27[2];
    uint64_t v46 = v27[3];
    if (v47 >= v46 >> 1) {
      uint64_t v27 = (void *)sub_1001A6D34(v46 > 1, v47 + 1, 1, (uint64_t)v27);
    }
    void v27[2] = v47 + 1;
    sub_10008FF6C(v45, (uint64_t)v27+ ((*(unsigned __int8 *)(v37 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80))+ *(void *)(v37 + 72) * v47);
  }
  *uint64_t v18 = v73 & 1;
  type metadata accessor for NotificationsAction();
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v27 = (void *)sub_1001A6D34(0, v27[2] + 1, 1, (uint64_t)v27);
  }
  uint64_t v48 = v80;
  uint64_t v50 = v27[2];
  uint64_t v49 = v27[3];
  if (v50 >= v49 >> 1) {
    uint64_t v27 = (void *)sub_1001A6D34(v49 > 1, v50 + 1, 1, (uint64_t)v27);
  }
  void v27[2] = v50 + 1;
  sub_10008FF6C((uint64_t)v18, (uint64_t)v27+ ((*(unsigned __int8 *)(v37 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80))+ *(void *)(v37 + 72) * v50);
  if (v27[2])
  {
    long long v51 = *(uint64_t (**)(uint64_t))(v48 + 16);
    uint64_t v84 = 0;
    memset(v83, 0, sizeof(v83));
    sub_1001AB0B0((uint64_t)v83, (uint64_t)v81);
    v81[5] = v27;
    uint64_t v82 = 0;
    swift_retain();
    swift_bridgeObjectRetain();
    sub_1001AB2DC((uint64_t)v81, v51);
    sub_1000F3400((uint64_t)v81, &qword_100E63488);
    swift_bridgeObjectRelease();
    sub_1000F3400((uint64_t)v83, (uint64_t *)&unk_100EA01F0);
    swift_release();
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  SessionManager.tracker.getter();
  uint64_t v52 = Tracker.diagnosticSubmissionAllowed.getter();
  uint64_t result = swift_release();
  if (v52)
  {
    v36(v81, result);
    swift_release();
    swift_beginAccess();
    swift_beginAccess();
    swift_beginAccess();
    swift_beginAccess();
    uint64_t v54 = v74;
    NotificationSettingsData.init(isNotificationsEnabled:isCurrentLocationPrecipitationNotificationEnabled:isOtherLocationsPrecipitationNotificationEnabled:isCurrentLocationSevereNotificationEnabled:isOtherLocationsSevereNotificationEnabled:)();
    (*(void (**)(char *, char *, uint64_t))(v75 + 16))(v70, v54, v76);
    uint64_t v80 = sub_100128CBC(&qword_100E98700, 255, (void (*)(uint64_t))&type metadata accessor for NotificationSettingsData);
    SessionData.init(key:data:)();
    uint64_t v78 = sub_10017DF08(&qword_100E6E1F0);
    uint64_t v55 = type metadata accessor for DataEventTrait();
    uint64_t v56 = *(void *)(v55 - 8);
    uint64_t v57 = *(unsigned __int8 *)(v56 + 80);
    uint64_t v58 = (v57 + 32) & ~v57;
    uint64_t v77 = v57 | 7;
    uint64_t v59 = swift_allocObject();
    uint64_t v73 = xmmword_100C251B0;
    *(_OWORD *)(v59 + 16) = xmmword_100C251B0;
    uint64_t v60 = enum case for DataEventTrait.unique(_:);
    uint64_t v61 = *(void (**)(uint64_t, uint64_t, uint64_t))(v56 + 104);
    v61(v59 + v58, enum case for DataEventTrait.unique(_:), v55);
    SessionManager.push<A>(_:traits:file:line:)();
    swift_bridgeObjectRelease();
    SessionManager.tracker.getter();
    uint64_t v62 = swift_allocObject();
    *(_OWORD *)(v62 + 16) = v73;
    v61(v62 + v58, v60, v55);
    uint64_t v63 = v74;
    uint64_t v64 = v76;
    Tracker.push<A>(data:traits:file:line:)();
    swift_release();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v71 + 8))(v79, v72);
    return (*(uint64_t (**)(char *, uint64_t))(v75 + 8))(v63, v64);
  }
  return result;
}

uint64_t sub_10007CF08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t *a4@<X8>)
{
  char v5 = v4;
  uint64_t v99 = a3;
  uint64_t v96 = a4;
  uint64_t v8 = sub_10017DF08(&qword_100E6C288);
  __chkstk_darwin(v8 - 8);
  uint64_t v100 = (uint64_t)&v88 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for Date();
  uint64_t v103 = *(void *)(v10 - 8);
  uint64_t v104 = v10;
  __chkstk_darwin(v10);
  int v102 = (char *)&v88 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10017DF08(&qword_100E9EED8);
  uint64_t v13 = __chkstk_darwin(v12 - 8);
  uint64_t v15 = (char *)&v88 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v88 - v16;
  uint64_t v18 = type metadata accessor for TimeZone();
  uint64_t v97 = *(void *)(v18 - 8);
  uint64_t v98 = v18;
  __chkstk_darwin(v18);
  uint64_t v20 = (char *)&v88 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  Location.timeZone.getter();
  uint64_t v101 = a1;
  Location.coordinate.getter();
  sub_1001B1E64(v5 + 2, v5[5]);
  uint64_t v21 = dispatch thunk of MoonDataProviderType.moonEphemeris(for:coordinate:)();
  sub_1001B1E64(v5 + 2, v5[5]);
  uint64_t v22 = a2;
  dispatch thunk of MoonDataProviderType.nextMoonEvent(after:coordinate:timeZone:)();
  uint64_t v23 = sub_100018D9C((uint64_t)v17, (uint64_t)v5);
  uint64_t v24 = v23;
  uint64_t v105 = v25;
  int v106 = v26;
  if (v21)
  {
    uint64_t v27 = v23;
    sub_100008F8C();
    swift_retain();
    unint64_t v28 = (void *)static NSNumberFormatter.percent.getter();
    CelestialEphemeris.illuminatedFraction.getter();
    Class isa = Double._bridgeToObjectiveC()().super.super.isa;
    id v30 = [v28 stringFromNumber:isa];

    if (v30)
    {
      uint64_t v91 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v32 = v31;

      swift_release();
      char v33 = 0;
    }
    else
    {
      swift_release();
      uint64_t v91 = 0;
      uint64_t v32 = 0;
      char v33 = 1;
    }
    uint64_t v24 = v27;
  }
  else
  {
    uint64_t v91 = 0;
    uint64_t v32 = 0;
    char v33 = 1;
  }
  uint64_t v34 = sub_100026E2C(v5, v22, (uint64_t)v20, v101);
  uint64_t v92 = v35;
  uint64_t v93 = v34;
  LODWORD(v101) = v36;
  uint64_t v37 = sub_10002CF14(v24, v105, v106, (uint64_t)v17);
  uint64_t v94 = v38;
  uint64_t v95 = v37;
  if (v33)
  {
    uint64_t v39 = _swiftEmptyArrayStorage;
  }
  else
  {
    uint64_t v89 = v24;
    uint64_t v90 = v20;
    uint64_t v40 = v17;
    uint64_t v41 = v22;
    id v42 = [self mainBundle];
    v107._object = (void *)0x8000000100CB6740;
    v43._uint64_t countAndFlagsBits = 0x616E696D756C6C49;
    v43._object = (void *)0xEC0000006E6F6974;
    v44._uint64_t countAndFlagsBits = 0;
    v44._object = (void *)0xE000000000000000;
    v107._uint64_t countAndFlagsBits = 0xD000000000000035;
    Swift::String v45 = NSLocalizedString(_:tableName:bundle:value:comment:)(v43, (Swift::String_optional)0, (NSBundle)v42, v44, v107);

    sub_10007D850(0, 1, 1, (uint64_t)_swiftEmptyArrayStorage);
    uint64_t v39 = (void *)v46;
    unint64_t v48 = *(void *)(v46 + 16);
    unint64_t v47 = *(void *)(v46 + 24);
    if (v48 >= v47 >> 1)
    {
      sub_10007D850(v47 > 1, v48 + 1, 1, v46);
      uint64_t v39 = v85;
    }
    void v39[2] = v48 + 1;
    uint64_t v49 = (Swift::String *)&v39[5 * v48];
    v49[2] = v45;
    v49[3]._uint64_t countAndFlagsBits = v91;
    v49[3]._object = v32;
    LOBYTE(v49[4]._countAndFlagsBits) = 0;
    uint64_t v22 = v41;
    uint64_t v17 = v40;
    uint64_t v24 = v89;
    uint64_t v20 = v90;
  }
  sub_1001262FC((uint64_t)v17, (uint64_t)v15, &qword_100E9EED8);
  uint64_t v50 = type metadata accessor for MoonRiseSetEvent();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v15, 1, v50) == 1)
  {
    sub_100178110((uint64_t)v15, &qword_100E9EED8);
  }
  else
  {
    uint64_t v51 = sub_100040950();
    uint64_t v53 = v52;
    (*(void (**)(char *, uint64_t))(*(void *)(v50 - 8) + 8))(v15, v50);
    if (v53)
    {
      if ((_BYTE)v106 == 0xFF)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_1001F3C64(v24, v105, v106);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_10007D850(0, v39[2] + 1, 1, (uint64_t)v39);
          uint64_t v39 = v86;
        }
        unint64_t v55 = v39[2];
        unint64_t v54 = v39[3];
        if (v55 >= v54 >> 1)
        {
          sub_10007D850(v54 > 1, v55 + 1, 1, (uint64_t)v39);
          uint64_t v39 = v87;
        }
        void v39[2] = v55 + 1;
        uint64_t v56 = &v39[5 * v55];
        v56[4] = v51;
        v56[5] = v53;
        uint64_t v57 = v105;
        v56[6] = v24;
        v56[7] = v57;
        *((unsigned char *)v56 + 64) = v106;
      }
    }
  }
  if ((_BYTE)v101 != 0xFF)
  {
    id v58 = [self mainBundle];
    v108._uint64_t countAndFlagsBits = 0xD000000000000036;
    v108._object = (void *)0x8000000100CB6700;
    v59._uint64_t countAndFlagsBits = 0x6C7546207478654ELL;
    v59._object = (void *)0xEE006E6F6F4D206CLL;
    v60._uint64_t countAndFlagsBits = 0;
    v60._object = (void *)0xE000000000000000;
    Swift::String v61 = NSLocalizedString(_:tableName:bundle:value:comment:)(v59, (Swift::String_optional)0, (NSBundle)v58, v60, v108);

    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_10007D850(0, v39[2] + 1, 1, (uint64_t)v39);
      uint64_t v39 = v83;
    }
    unint64_t v63 = v39[2];
    unint64_t v62 = v39[3];
    if (v63 >= v62 >> 1)
    {
      sub_10007D850(v62 > 1, v63 + 1, 1, (uint64_t)v39);
      uint64_t v39 = v84;
    }
    void v39[2] = v63 + 1;
    uint64_t v64 = (Swift::String *)&v39[5 * v63];
    v64[2] = v61;
    uint64_t v65 = v92;
    v64[3]._uint64_t countAndFlagsBits = v93;
    v64[3]._object = v65;
    LOBYTE(v64[4]._countAndFlagsBits) = v101;
  }
  if (v21)
  {
    swift_retain();
    CelestialEphemeris.librationPositionAngle.getter();
    double v67 = v66;
    CelestialEphemeris.topocentricParallacticAngle.getter();
    double v69 = v68;
    swift_release();
    double v70 = v69 - v67 + 360.0;
  }
  else
  {
    if (qword_100E62790 != -1) {
      swift_once();
    }
    uint64_t v71 = type metadata accessor for Logger();
    sub_1002102B0(v71, (uint64_t)qword_100F51DC8);
    uint64_t v72 = Logger.logObject.getter();
    os_log_type_t v73 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v72, v73))
    {
      uint64_t v74 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v74 = 0;
      _os_log_impl((void *)&_mh_execute_header, v72, v73, "Failed to calcuate rotationAngle due to missing ephemeris", v74, 2u);
      swift_slowDealloc();
    }

    double v70 = 0.0;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v103 + 16))(v102, v22, v104);
  uint64_t v75 = v100;
  sub_1001262FC(v99, v100, &qword_100E6C288);
  uint64_t v76 = type metadata accessor for DayMoonData();
  if (_s7Weather24LocationCompositionStateOwet_0(v75, 1, v76) == 1)
  {
    swift_release();
    sub_100178110((uint64_t)v17, &qword_100E9EED8);
    (*(void (**)(char *, uint64_t))(v97 + 8))(v20, v98);
    sub_100178110(v75, &qword_100E6C288);
    char v77 = 8;
  }
  else
  {
    char v77 = DayMoonData.phase.getter();
    swift_release();
    sub_100178110((uint64_t)v17, &qword_100E9EED8);
    (*(void (**)(char *, uint64_t))(v97 + 8))(v20, v98);
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v76 - 8) + 8))(v75, v76);
  }
  uint64_t v78 = v96;
  uint64_t v79 = v94;
  *uint64_t v96 = v95;
  v78[1] = v79;
  uint64_t v80 = v105;
  v78[2] = v24;
  v78[3] = v80;
  *((unsigned char *)v78 + 32) = v106;
  v78[5] = (uint64_t)v39;
  uint64_t v81 = (int *)type metadata accessor for MoonComponentViewModel();
  uint64_t result = (*(uint64_t (**)(char *, char *, uint64_t))(v103 + 32))((char *)v78 + v81[7], v102, v104);
  *((unsigned char *)v78 + v81[8]) = v77;
  *(double *)((char *)v78 + v81[9]) = v70;
  return result;
}

void sub_10007D850(char a1, uint64_t a2, char a3, uint64_t a4)
{
}

uint64_t initializeWithCopy for DailyForecastFilter.DailyForecastFilterConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_10007D8CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __dst[0] = 0;
  __dst[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(21);
  swift_bridgeObjectRelease();
  v5._uint64_t countAndFlagsBits = Location.Identifier.id.getter();
  String.append(_:)(v5);
  swift_bridgeObjectRelease();
  v6._uint64_t countAndFlagsBits = 45;
  v6._object = (void *)0xE100000000000000;
  String.append(_:)(v6);
  uint64_t v7 = type metadata accessor for LocationViewerFullscreenMapPresentationSourceModifier(0);
  memcpy(__dst, (const void *)(v2 + *(int *)(v7 + 20)), 0x49uLL);
  sub_1001F4E98((uint64_t)__dst);
  sub_1001BEAF4();
  sub_1001F4E98((uint64_t)__dst);
  v8._uint64_t countAndFlagsBits = sub_10007DA60();
  String.append(_:)(v8);
  swift_bridgeObjectRelease();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v10 = sub_10017DF08(&qword_100E8EB88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(a2, a1, v10);
  uint64_t result = sub_10017DF08(&qword_100E8EB90);
  uint64_t v12 = a2 + *(int *)(result + 36);
  *(void *)uint64_t v12 = 0xD000000000000010;
  *(void *)(v12 + 8) = 0x8000000100CAF480;
  *(void *)(v12 + 16) = KeyPath;
  *(unsigned char *)(v12 + 24) = 0;
  return result;
}

uint64_t sub_10007DA60()
{
  sub_1000E0EF0();
  sub_10007DB18();
  uint64_t v3 = dispatch thunk of CustomStringConvertible.description.getter();
  v0._uint64_t countAndFlagsBits = 45;
  v0._object = (void *)0xE100000000000000;
  String.append(_:)(v0);
  v1._uint64_t countAndFlagsBits = Double.description.getter();
  String.append(_:)(v1);
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_10007DADC()
{
  sub_10007DB64();

  return ShortDescribable.description.getter();
}

unint64_t sub_10007DB18()
{
  unint64_t result = qword_100EAAFD8;
  if (!qword_100EAAFD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAAFD8);
  }
  return result;
}

unint64_t sub_10007DB64()
{
  unint64_t result = qword_100EAB010;
  if (!qword_100EAB010)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAB010);
  }
  return result;
}

uint64_t sub_10007DBB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = a1 + v6;
  Swift::String v8 = (void *)(a2 + v6);
  *(void *)(a1 + v6) = *v8;
  swift_retain();
  swift_release();
  *(void *)(v7 + 8) = v8[1];
  swift_retain();
  swift_release();
  uint64_t v9 = *(int *)(sub_10017DF08(&qword_100E8D8D0) + 32);
  uint64_t v10 = v7 + v9;
  uint64_t v11 = (char *)v8 + v9;
  uint64_t v12 = type metadata accessor for Location.Identifier();
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v12 - 8) + 24))(v10, v11, v12);
  return a1;
}

uint64_t sub_10007DC94()
{
  uint64_t v65 = type metadata accessor for Date();
  uint64_t v1 = *(void *)(v65 - 8);
  __chkstk_darwin(v65);
  unint64_t v62 = (char *)&v60 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v70 = sub_10017DF08(&qword_100EA9990);
  __chkstk_darwin(v70);
  uint64_t v73 = (uint64_t)&v60 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for WeatherData.CachingState(0);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v7 = (char *)&v60 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v74 = (uint64_t)&v60 - v8;
  uint64_t v69 = type metadata accessor for WeatherData(0);
  __chkstk_darwin(v69);
  uint64_t v10 = (char *)&v60 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for LocationWeatherDataState(0);
  uint64_t v71 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v76 = (uint64_t)&v60 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_10017DF08(&qword_100E6A480);
  uint64_t v14 = __chkstk_darwin(v13 - 8);
  uint64_t v16 = (int64_t *)((char *)&v60 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v60 - v17;
  uint64_t v19 = *(void *)(*(void *)(v0 + *(int *)(type metadata accessor for BannerStateComputer() + 20))
                  + OBJC_IVAR____TtCV7Weather9MainState8_Storage_weatherData
                  + 16);
  uint64_t v20 = *(void *)(v19 + 64);
  uint64_t v63 = v19 + 64;
  uint64_t v21 = 1 << *(unsigned char *)(v19 + 32);
  uint64_t v22 = -1;
  if (v21 < 64) {
    uint64_t v22 = ~(-1 << v21);
  }
  unint64_t v23 = v22 & v20;
  uint64_t v64 = (void (**)(char *, uint64_t))(v1 + 8);
  int64_t v67 = (unint64_t)(v21 + 63) >> 6;
  int64_t v60 = v67 - 1;
  Swift::String v61 = (void (**)(char *, uint64_t, uint64_t))(v1 + 32);
  uint64_t v72 = v19;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v75 = 0;
  char v77 = v18;
  double v68 = v10;
  uint64_t v66 = v11;
  while (v23)
  {
    unint64_t v25 = __clz(__rbit64(v23));
    v23 &= v23 - 1;
    unint64_t v26 = v25 | (v75 << 6);
LABEL_6:
    uint64_t v27 = *(void *)(v72 + 56);
    unint64_t v28 = (void *)(*(void *)(v72 + 48) + 16 * v26);
    uint64_t v29 = v28[1];
    *uint64_t v16 = *v28;
    v16[1] = v29;
    uint64_t v30 = v27 + *(void *)(v71 + 72) * v26;
    uint64_t v31 = sub_10017DF08(&qword_100E6A488);
    sub_100166838(v30, (uint64_t)v16 + *(int *)(v31 + 48), (void (*)(void))type metadata accessor for LocationWeatherDataState);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v16, 0, 1, v31);
    swift_bridgeObjectRetain();
    uint64_t v18 = v77;
LABEL_25:
    sub_10024D364((uint64_t)v16, (uint64_t)v18, &qword_100E6A480);
    uint64_t v36 = sub_10017DF08(&qword_100E6A488);
    int v37 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v18, 1, v36);
    if (v37 == 1)
    {
      swift_release();
      return v37 == 1;
    }
    uint64_t v38 = v16;
    uint64_t v39 = v7;
    swift_bridgeObjectRelease();
    uint64_t v40 = (uint64_t)&v18[*(int *)(v36 + 48)];
    uint64_t v41 = v76;
    sub_10017487C(v40, v76, (void (*)(void))type metadata accessor for LocationWeatherDataState);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      sub_10017487C(v41, (uint64_t)v10, (void (*)(void))type metadata accessor for WeatherData);
      uint64_t v45 = (uint64_t)&v10[*(int *)(v69 + 28)];
      uint64_t v46 = sub_10017DF08(&qword_100E63738);
      uint64_t v47 = v74;
      _s7Weather24LocationCompositionStateOwst_0(v74, 1, 1, v46);
      uint64_t v48 = v73;
      uint64_t v49 = v73 + *(int *)(v70 + 48);
      sub_100166838(v45, v73, (void (*)(void))type metadata accessor for WeatherData.CachingState);
      sub_100166838(v47, v49, (void (*)(void))type metadata accessor for WeatherData.CachingState);
      if (_s7Weather24LocationCompositionStateOwet_0(v48, 1, v46) == 1)
      {
        int v50 = _s7Weather24LocationCompositionStateOwet_0(v49, 1, v46);
        uint64_t v10 = v68;
        if (v50 == 1)
        {
          sub_100173018(v73, (void (*)(void))type metadata accessor for WeatherData.CachingState);
          char v51 = 1;
          goto LABEL_36;
        }
        goto LABEL_34;
      }
      uint64_t v52 = v48;
      sub_100166838(v48, (uint64_t)v7, (void (*)(void))type metadata accessor for WeatherData.CachingState);
      if (_s7Weather24LocationCompositionStateOwet_0(v49, 1, v46) == 1)
      {
        (*v64)(v7, v65);
        uint64_t v10 = v68;
LABEL_34:
        sub_1001781AC(v73, &qword_100EA9990);
        char v51 = 0;
        goto LABEL_36;
      }
      uint64_t v53 = v62;
      uint64_t v54 = v65;
      (*v61)(v62, v49, v65);
      char v51 = static Date.== infix(_:_:)();
      unint64_t v55 = *v64;
      uint64_t v56 = v53;
      uint64_t v7 = v39;
      (*v64)(v56, v54);
      v55(v39, v54);
      sub_100173018(v52, (void (*)(void))type metadata accessor for WeatherData.CachingState);
      uint64_t v10 = v68;
LABEL_36:
      uint64_t v16 = v38;
      uint64_t v57 = sub_10017DF08(&qword_100E63748);
      uint64_t v41 = v76 + *(int *)(v57 + 48);
      uint64_t v58 = v76 + *(int *)(v57 + 64);
      sub_100173018(v74, (void (*)(void))type metadata accessor for WeatherData.CachingState);
      sub_100173018((uint64_t)v10, (void (*)(void))type metadata accessor for WeatherData);
      if (v51)
      {
        swift_release();
        sub_100173018(v58, (void (*)(void))type metadata accessor for NewsDataModel);
        Swift::String v59 = (void (*)(void))type metadata accessor for PreprocessedWeatherData;
LABEL_41:
        sub_100173018(v41, v59);
        return v37 == 1;
      }
      sub_100173018(v58, (void (*)(void))type metadata accessor for NewsDataModel);
      uint64_t result = sub_100173018(v41, (void (*)(void))type metadata accessor for PreprocessedWeatherData);
      uint64_t v18 = v77;
    }
    else
    {
      if (EnumCaseMultiPayload != 2)
      {
        swift_release();
        Swift::String v59 = (void (*)(void))type metadata accessor for LocationWeatherDataState;
        goto LABEL_41;
      }
      uint64_t v43 = *(void *)(v41 + 16);
      unint64_t v44 = *(void *)(v41 + 24);
      swift_bridgeObjectRelease();
      uint64_t result = sub_100303D6C(v43, v44);
      uint64_t v16 = v38;
      uint64_t v18 = v77;
    }
  }
  int64_t v32 = v75 + 1;
  if (__OFADD__(v75, 1))
  {
    __break(1u);
    goto LABEL_44;
  }
  if (v32 >= v67)
  {
LABEL_24:
    uint64_t v35 = sub_10017DF08(&qword_100E6A488);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v16, 1, 1, v35);
    unint64_t v23 = 0;
    goto LABEL_25;
  }
  unint64_t v33 = *(void *)(v63 + 8 * v32);
  if (v33)
  {
LABEL_10:
    unint64_t v23 = (v33 - 1) & v33;
    unint64_t v26 = __clz(__rbit64(v33)) + (v32 << 6);
    int64_t v75 = v32;
    goto LABEL_6;
  }
  int64_t v34 = v75 + 2;
  ++v75;
  if (v32 + 1 >= v67) {
    goto LABEL_24;
  }
  unint64_t v33 = *(void *)(v63 + 8 * v34);
  if (v33) {
    goto LABEL_13;
  }
  int64_t v75 = v32 + 1;
  if (v32 + 2 >= v67) {
    goto LABEL_24;
  }
  unint64_t v33 = *(void *)(v63 + 8 * (v32 + 2));
  if (v33)
  {
    v32 += 2;
    goto LABEL_10;
  }
  int64_t v34 = v32 + 3;
  int64_t v75 = v32 + 2;
  if (v32 + 3 >= v67) {
    goto LABEL_24;
  }
  unint64_t v33 = *(void *)(v63 + 8 * v34);
  if (v33)
  {
LABEL_13:
    int64_t v32 = v34;
    goto LABEL_10;
  }
  while (1)
  {
    int64_t v32 = v34 + 1;
    if (__OFADD__(v34, 1)) {
      break;
    }
    if (v32 >= v67)
    {
      int64_t v75 = v60;
      goto LABEL_24;
    }
    unint64_t v33 = *(void *)(v63 + 8 * v32);
    ++v34;
    if (v33) {
      goto LABEL_10;
    }
  }
LABEL_44:
  __break(1u);
  return result;
}

uint64_t sub_10007E54C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v46 = a2;
  uint64_t v38 = type metadata accessor for PinnedScrollableViews();
  uint64_t v36 = *(void *)(v38 - 8);
  __chkstk_darwin(v38);
  int v37 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  uint64_t v8 = type metadata accessor for LazyVStack();
  uint64_t v40 = *(void *)(v8 - 8);
  uint64_t v9 = __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v39 = (uint64_t)&v33 - v12;
  uint64_t v42 = v6;
  uint64_t v41 = v7;
  uint64_t v13 = type metadata accessor for VStack();
  uint64_t v35 = *(void *)(v13 - 8);
  uint64_t v14 = __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v34 = (uint64_t)&v33 - v17;
  uint64_t v45 = type metadata accessor for _ConditionalContent();
  uint64_t v44 = *(void *)(v45 - 8);
  __chkstk_darwin(v45);
  uint64_t v43 = (char *)&v33 - v18;
  memcpy(__dst, (const void *)(v3 + *(int *)(a1 + 48)), 0x49uLL);
  sub_1001BEAB0((uint64_t)__dst);
  sub_1001BEAF4();
  sub_1001BEAB0((uint64_t)__dst);
  uint64_t v19 = v3 + *(int *)(a1 + 44);
  uint64_t v20 = *(void *)v19;
  char v21 = *(unsigned char *)(v19 + 8);
  sub_100195B7C(*(void *)v19, v21);
  sub_100149AE8();
  char v23 = v22;
  sub_10018F6D8(v20, v21);
  if (v23)
  {
    VStack.init(alignment:spacing:content:)();
    swift_getWitnessTable();
    uint64_t v24 = v34;
    sub_100121584((uint64_t)v16, v13, v34);
    unint64_t v25 = *(void (**)(char *, uint64_t))(v35 + 8);
    v25(v16, v13);
    sub_100121584(v24, v13, (uint64_t)v16);
    swift_getWitnessTable();
    uint64_t v26 = (uint64_t)v43;
    sub_1000E95C0();
    v25(v16, v13);
    v25((char *)v24, v13);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v36 + 16))(v37, v3 + *(int *)(a1 + 36), v38);
    LazyVStack.init(alignment:spacing:pinnedViews:content:)();
    swift_getWitnessTable();
    uint64_t v27 = v39;
    sub_100121584((uint64_t)v11, v8, v39);
    unint64_t v28 = *(void (**)(char *, uint64_t))(v40 + 8);
    v28(v11, v8);
    sub_100121584(v27, v8, (uint64_t)v11);
    swift_getWitnessTable();
    uint64_t v26 = (uint64_t)v43;
    sub_100121F14();
    v28(v11, v8);
    v28((char *)v27, v8);
  }
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v30 = swift_getWitnessTable();
  uint64_t v47 = WitnessTable;
  uint64_t v48 = v30;
  uint64_t v31 = v45;
  swift_getWitnessTable();
  sub_100121584(v26, v31, v46);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v44 + 8))(v26, v31);
}

uint64_t sub_10007EBA8()
{
  sub_10007EBF4();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_10007EBF4()
{
  uint64_t result = sub_10007F424();
  if (result)
  {
    sub_10007EC48();
    return swift_release();
  }
  return result;
}

uint64_t sub_10007EC48()
{
  uint64_t v1 = *(void *)(v0 + 56);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v1 + 24));
  sub_10007ECC8((uint64_t *)(v1 + 16));
  os_unfair_lock_unlock((os_unfair_lock_t)(v1 + 24));

  return swift_release();
}

uint64_t sub_10007ECC8(uint64_t *a1)
{
  return sub_10007ECE4(a1, v1);
}

uint64_t sub_10007ECE4(uint64_t *a1, uint64_t a2)
{
  swift_retain();
  uint64_t result = sub_10007EFF4(a1, a2);
  uint64_t v5 = result;
  if ((unint64_t)*a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t result = swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v6 = *(void *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (v6 >= v5) {
    return sub_10007ED90(v5, v6);
  }
  __break(1u);
  return result;
}

uint64_t sub_10007ED90(uint64_t a1, uint64_t a2)
{
  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v2 = a2;
    uint64_t v4 = a1;
    if (!(*v3 >> 62))
    {
      uint64_t v6 = *(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
      goto LABEL_4;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
LABEL_4:
  if (v6 < v2)
  {
    __break(1u);
    goto LABEL_30;
  }
  if (__OFSUB__(v2, v4))
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  uint64_t v5 = v4 - v2;
  if (__OFSUB__(0, v2 - v4))
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  if (!(*v3 >> 62))
  {
    uint64_t v7 = *(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    goto LABEL_9;
  }
LABEL_32:
  swift_bridgeObjectRetain();
  uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
LABEL_9:
  uint64_t v8 = v7 + v5;
  if (__OFADD__(v7, v5))
  {
    __break(1u);
    goto LABEL_34;
  }
  unint64_t v9 = *v3;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v3 = v9;
  if (!isUniquelyReferenced_nonNull_bridgeObject
    || (v9 & 0x8000000000000000) != 0
    || (v9 & 0x4000000000000000) != 0
    || (uint64_t v11 = v9 & 0xFFFFFFFFFFFFFF8, v8 > *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1))
  {
    if (!(v9 >> 62))
    {
LABEL_15:
      swift_bridgeObjectRetain();
      unint64_t v9 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
      swift_bridgeObjectRelease();
      *uint64_t v3 = v9;
      uint64_t v11 = v9 & 0xFFFFFFFFFFFFFF8;
      goto LABEL_16;
    }
LABEL_34:
    swift_bridgeObjectRetain();
    _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
LABEL_16:
  uint64_t v12 = v11 + 32 + 8 * v4;
  type metadata accessor for WireframeContentManager();
  swift_arrayDestroy();
  if (!v5) {
    goto LABEL_24;
  }
  if (v9 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v13 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v13 = *(void *)(v11 + 16);
  }
  if (__OFSUB__(v13, v2))
  {
    __break(1u);
    goto LABEL_37;
  }
  uint64_t result = sub_1007EAF74(v11 + 32 + 8 * v2, v13 - v2, v12);
  if (v9 >> 62)
  {
LABEL_37:
    swift_bridgeObjectRetain();
    uint64_t v15 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t result = swift_bridgeObjectRelease();
    goto LABEL_22;
  }
  uint64_t v15 = *(void *)(v11 + 16);
LABEL_22:
  if (__OFADD__(v15, v5))
  {
    __break(1u);
    return result;
  }
  *(void *)(v11 + 16) = v15 + v5;
LABEL_24:

  return specialized Array._endMutation()();
}

unint64_t sub_10007EFF4(uint64_t *a1, uint64_t a2)
{
  swift_retain();
  unint64_t v6 = swift_bridgeObjectRetain();
  uint64_t v7 = sub_10007F328(v6, a2);
  if (!v2)
  {
    unint64_t v3 = v7;
    char v9 = v8;
    swift_bridgeObjectRelease();
    if (v9)
    {
      unint64_t v22 = *a1;
      if (v22 >> 62)
      {
        swift_bridgeObjectRetain();
        unint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
        swift_release();
        swift_bridgeObjectRelease();
        return v3;
      }
      unint64_t v3 = *(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    else
    {
      uint64_t v10 = v3 + 1;
      if (__OFADD__(v3, 1)) {
        goto LABEL_58;
      }
      if ((unint64_t)*a1 >> 62)
      {
LABEL_59:
        swift_bridgeObjectRetain();
        uint64_t v11 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v11 = *(void *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      if (v10 != v11)
      {
        unint64_t v12 = v3 + 5;
        while (1)
        {
          unint64_t v13 = v12 - 4;
          uint64_t v14 = *a1;
          if ((*a1 & 0xC000000000000001) != 0) {
            break;
          }
          if ((v13 & 0x8000000000000000) != 0)
          {
            __break(1u);
LABEL_49:
            __break(1u);
LABEL_50:
            __break(1u);
LABEL_51:
            __break(1u);
LABEL_52:
            __break(1u);
LABEL_53:
            __break(1u);
LABEL_54:
            __break(1u);
LABEL_55:
            __break(1u);
LABEL_56:
            __break(1u);
LABEL_57:
            __break(1u);
LABEL_58:
            __break(1u);
            goto LABEL_59;
          }
          if (v13 >= *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_49;
          }
          if (*(void *)(v14 + 8 * v12) != a2) {
            goto LABEL_13;
          }
LABEL_34:
          uint64_t v10 = v12 - 3;
          if (__OFADD__(v13, 1)) {
            goto LABEL_50;
          }
          if ((unint64_t)*a1 >> 62)
          {
            swift_bridgeObjectRetain();
            uint64_t v20 = _CocoaArrayWrapper.endIndex.getter();
            swift_bridgeObjectRelease();
          }
          else
          {
            uint64_t v20 = *(void *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
          }
          ++v12;
          if (v10 == v20) {
            goto LABEL_46;
          }
        }
        uint64_t v21 = specialized _ArrayBuffer._getElementSlowPath(_:)();
        swift_unknownObjectRelease();
        if (v21 == a2) {
          goto LABEL_34;
        }
LABEL_13:
        if (v13 != v3)
        {
          uint64_t v10 = *a1;
          if ((*a1 & 0xC000000000000001) != 0)
          {
            uint64_t v15 = specialized _ArrayBuffer._getElementSlowPath(_:)();
            uint64_t v10 = *a1;
          }
          else
          {
            if ((v3 & 0x8000000000000000) != 0) {
              goto LABEL_52;
            }
            if (v3 >= *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
              goto LABEL_53;
            }
            uint64_t v15 = *(void *)(v10 + 8 * v3 + 32);
            swift_retain();
          }
          if ((v10 & 0xC000000000000001) != 0)
          {
            uint64_t v16 = specialized _ArrayBuffer._getElementSlowPath(_:)();
            uint64_t v10 = *a1;
          }
          else
          {
            if ((v13 & 0x8000000000000000) != 0) {
              goto LABEL_54;
            }
            if (v13 >= *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
              goto LABEL_55;
            }
            uint64_t v16 = *(void *)(v10 + 8 * v12);
            swift_retain();
          }
          int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
          *a1 = v10;
          if (!isUniquelyReferenced_nonNull_bridgeObject || v10 < 0 || (v10 & 0x4000000000000000) != 0)
          {
            uint64_t v10 = sub_100ABB510(v10);
            *a1 = v10;
          }
          *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 8 * v3 + 0x20) = v16;
          swift_release();
          specialized Array._endMutation()();
          uint64_t v10 = *a1;
          int v18 = swift_isUniquelyReferenced_nonNull_bridgeObject();
          *a1 = v10;
          if (!v18 || v10 < 0 || (v10 & 0x4000000000000000) != 0)
          {
            uint64_t v10 = sub_100ABB510(v10);
            *a1 = v10;
          }
          if ((v13 & 0x8000000000000000) != 0) {
            goto LABEL_56;
          }
          if (v13 >= *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_57;
          }
          *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 8 * v12) = v15;
          swift_release();
          specialized Array._endMutation()();
        }
        if (__OFADD__(v3++, 1)) {
          goto LABEL_51;
        }
        goto LABEL_34;
      }
    }
LABEL_46:
    swift_release();
    return v3;
  }
  swift_release();
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_10007F328(unint64_t a1, uint64_t a2)
{
  if (a1 >> 62) {
    goto LABEL_13;
  }
  uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v4)
  {
    uint64_t v5 = 0;
    while (1)
    {
      if ((a1 & 0xC000000000000001) != 0)
      {
        uint64_t v6 = specialized _ArrayBuffer._getElementSlowPath(_:)();
        swift_unknownObjectRelease();
        if (v6 == a2) {
          goto LABEL_11;
        }
      }
      else if (*(void *)(a1 + 8 * v5 + 32) == a2)
      {
        goto LABEL_11;
      }
      if (__OFADD__(v5, 1)) {
        break;
      }
      if (++v5 == v4) {
        goto LABEL_10;
      }
    }
    __break(1u);
LABEL_13:
    swift_bridgeObjectRetain();
    uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
LABEL_10:
  uint64_t v5 = 0;
LABEL_11:
  swift_release();
  return v5;
}

uint64_t sub_10007F424()
{
  return swift_weakLoadStrong();
}

uint64_t sub_10007F4C8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for ConfiguredUnitsAction();
  sub_100162E4C();
  __chkstk_darwin(v3);
  sub_1001626E0();
  uint64_t v6 = v5 - v4;
  uint64_t v7 = type metadata accessor for ActivityAction();
  sub_100162E4C();
  __chkstk_darwin(v8);
  sub_1001626E0();
  uint64_t v11 = v10 - v9;
  uint64_t v12 = type metadata accessor for Locale();
  sub_100179C0C();
  uint64_t v56 = v13;
  __chkstk_darwin(v14);
  sub_1001626E0();
  uint64_t v17 = v16 - v15;
  uint64_t v18 = type metadata accessor for EnvironmentAction();
  sub_100162E4C();
  __chkstk_darwin(v19);
  sub_1001626E0();
  uint64_t v22 = v21 - v20;
  sub_10017DF08(&qword_100E7F4F8);
  sub_100179C0C();
  uint64_t v57 = v24;
  uint64_t v58 = v23;
  __chkstk_darwin(v23);
  sub_1001626E0();
  sub_10007FEA0(v1, v22, (void (*)(void))type metadata accessor for EnvironmentAction);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      char v27 = *(unsigned char *)(v22 + 1);
      sub_10017DF08(&qword_100E635E0);
      uint64_t inited = (__n128 *)swift_initStackObject();
      uint64_t v29 = sub_10017FEC4(inited, (__n128)xmmword_100C251B0);
      *(unsigned char *)(sub_1001A2378((uint64_t)v29, (uint64_t)&type metadata for NetworkAction) + 49) = v27;
      Dictionary.init(dictionaryLiteral:)();
      sub_10017E740();
      sub_10017A710();
      goto LABEL_19;
    case 2u:
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v56 + 32))(v17, v22, v12);
      sub_10017DF08(&qword_100E635E0);
      uint64_t v30 = swift_initStackObject();
      *(_OWORD *)(v30 + 16) = xmmword_100C251B0;
      *(void *)(v30 + 32) = 0x656C61636F6CLL;
      *(void *)(v30 + 40) = 0xE600000000000000;
      *(void *)(v30 + 72) = v12;
      uint64_t v31 = sub_100170694((uint64_t *)(v30 + 48));
      (*(void (**)(uint64_t *, uint64_t, uint64_t))(v56 + 16))(v31, v17, v12);
      Dictionary.init(dictionaryLiteral:)();
      sub_10017E740();
      sub_10017A710();
      ShortDescription.init(name:_:)();
      (*(void (**)(uint64_t, uint64_t))(v56 + 8))(v17, v12);
      goto LABEL_20;
    case 3u:
      sub_10069F008(v22, v11, (void (*)(void))type metadata accessor for ActivityAction);
      sub_10017DF08(&qword_100E635E0);
      uint64_t v32 = swift_initStackObject();
      *(_OWORD *)(v32 + 16) = xmmword_100C251B0;
      *(void *)(v32 + 32) = 0x6E6F69746361;
      *(void *)(v32 + 40) = 0xE600000000000000;
      *(void *)(v32 + 72) = v7;
      uint64_t v33 = sub_100170694((uint64_t *)(v32 + 48));
      uint64_t v34 = type metadata accessor for ActivityAction;
      sub_10007FEA0(v11, (uint64_t)v33, (void (*)(void))type metadata accessor for ActivityAction);
      Dictionary.init(dictionaryLiteral:)();
      sub_10017E740();
      sub_10017A710();
      ShortDescription.init(name:_:)();
      uint64_t v35 = v11;
      goto LABEL_15;
    case 4u:
      unint64_t v36 = *(void *)v22;
      uint64_t v37 = *(void *)(v22 + 8);
      sub_10017DF08(&qword_100E635E0);
      uint64_t v38 = swift_initStackObject();
      *(_OWORD *)(v38 + 16) = xmmword_100C251B0;
      *(void *)(v38 + 32) = 0x437972746E756F63;
      *(void *)(v38 + 40) = 0xEB0000000065646FLL;
      *(void *)(v38 + 72) = &type metadata for String;
      *(void *)(v38 + 48) = v36;
      *(void *)(v38 + 56) = v37;
      Dictionary.init(dictionaryLiteral:)();
      sub_10017E740();
      goto LABEL_17;
    case 5u:
      sub_10017DF08(&qword_100E635E0);
      uint64_t v39 = swift_initStackObject();
      *(_OWORD *)(v39 + 16) = xmmword_100C251B0;
      uint64_t v40 = sub_10017E790(v39, 0xD000000000000015);
      sub_1001A2378(v40, (uint64_t)&type metadata for Bool);
      Dictionary.init(dictionaryLiteral:)();
      sub_10017E740();
      goto LABEL_17;
    case 6u:
      sub_10017DF08(&qword_100E635E0);
      uint64_t v41 = swift_initStackObject();
      *(_OWORD *)(v41 + 16) = xmmword_100C251B0;
      *(void *)(v41 + 32) = 0xD000000000000016;
      *(void *)(v41 + 40) = 0x8000000100CADE60;
      sub_1001A2378(v41, (uint64_t)&type metadata for Bool);
      Dictionary.init(dictionaryLiteral:)();
      sub_10017E740();
      goto LABEL_17;
    case 7u:
      sub_10017DF08(&qword_100E635E0);
      uint64_t v42 = swift_initStackObject();
      *(_OWORD *)(v42 + 16) = xmmword_100C251B0;
      uint64_t v43 = sub_10017E790(v42, 0xD000000000000014);
      sub_1001A2378(v43, (uint64_t)&type metadata for Bool);
      Dictionary.init(dictionaryLiteral:)();
      sub_10017E740();
      goto LABEL_17;
    case 8u:
      sub_10017DF08(&qword_100E635E0);
      uint64_t v44 = swift_initStackObject();
      *(_OWORD *)(v44 + 16) = xmmword_100C251B0;
      uint64_t v45 = sub_10017E790(v44, 0xD000000000000012);
      sub_1001A2378(v45, (uint64_t)&type metadata for Bool);
      Dictionary.init(dictionaryLiteral:)();
      sub_10017E740();
      goto LABEL_17;
    case 9u:
      unint64_t v46 = *(void *)v22;
      unint64_t v47 = *(void *)(v22 + 8);
      sub_10017DF08(&qword_100E635E0);
      uint64_t v48 = (__n128 *)swift_initStackObject();
      uint64_t v49 = sub_10017FEC4(v48, (__n128)xmmword_100C251B0);
      v49[4].n128_u64[1] = (unint64_t)&type metadata for LinkAction;
      v49[3].n128_u64[0] = v46;
      v49[3].n128_u64[1] = v47;
      Dictionary.init(dictionaryLiteral:)();
      sub_10017E740();
      sub_10017A710();
      goto LABEL_19;
    case 0xAu:
      unint64_t v50 = *(void *)v22;
      sub_10017DF08(&qword_100E635E0);
      uint64_t v51 = swift_initStackObject();
      *(_OWORD *)(v51 + 16) = xmmword_100C251B0;
      *(void *)(v51 + 32) = 0x746E756F4377656ELL;
      *(void *)(v51 + 40) = 0xE800000000000000;
      *(void *)(v51 + 72) = &type metadata for Int;
      *(void *)(v51 + 48) = v50;
      Dictionary.init(dictionaryLiteral:)();
      sub_10017E740();
      sub_1001815F4();
      goto LABEL_19;
    case 0xBu:
      sub_10069F008(v22, v6, (void (*)(void))type metadata accessor for ConfiguredUnitsAction);
      sub_10017DF08(&qword_100E635E0);
      uint64_t v52 = swift_initStackObject();
      *(_OWORD *)(v52 + 16) = xmmword_100C251B0;
      *(void *)(v52 + 32) = 1953066613;
      *(void *)(v52 + 40) = 0xE400000000000000;
      *(void *)(v52 + 72) = v2;
      uint64_t v53 = sub_100170694((uint64_t *)(v52 + 48));
      uint64_t v34 = type metadata accessor for ConfiguredUnitsAction;
      sub_10007FEA0(v6, (uint64_t)v53, (void (*)(void))type metadata accessor for ConfiguredUnitsAction);
      Dictionary.init(dictionaryLiteral:)();
      sub_10017E740();
      sub_10017A710();
      ShortDescription.init(name:_:)();
      uint64_t v35 = v6;
LABEL_15:
      sub_100220CD0(v35, (void (*)(void))v34);
      goto LABEL_20;
    case 0xCu:
      Dictionary.init(dictionaryLiteral:)();
      sub_10017E740();
      goto LABEL_17;
    case 0xDu:
      Dictionary.init(dictionaryLiteral:)();
      sub_10017E740();
      sub_1001815F4();
      goto LABEL_19;
    default:
      sub_10017DF08(&qword_100E635E0);
      unint64_t v25 = (__n128 *)swift_initStackObject();
      uint64_t v26 = sub_10017FEC4(v25, (__n128)xmmword_100C251B0);
      sub_1001A2378((uint64_t)v26, (uint64_t)&type metadata for LocationAuthorizationAction);
      Dictionary.init(dictionaryLiteral:)();
      sub_10017E740();
LABEL_17:
      sub_1001D1C04();
LABEL_19:
      ShortDescription.init(name:_:)();
LABEL_20:
      a1[3] = v58;
      a1[4] = sub_1001706F8();
      uint64_t v54 = sub_100170694(a1);
      return (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v57 + 32))(v54, v18, v58);
  }
}

uint64_t sub_10007FEA0(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(a2, a1);
  return a2;
}

uint64_t sub_10007FF00()
{
  sub_1000A9DE8();
  sub_100119470();
  uint64_t v1 = *v0;
  sub_10018AA7C();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  sub_1001627B4();
  return v3();
}

id sub_10007FFC4@<X0>(void *a1@<X8>)
{
  id result = sub_10007FFEC();
  *a1 = result;
  return result;
}

id sub_10007FFEC()
{
  uint64_t v1 = type metadata accessor for ColorScheme();
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10017DF08(&qword_100E749B0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for SafariSheetModifier.SafariPresenter(0);
  sub_1000F32E4(v0 + *(int *)(v7 + 20), (uint64_t)v6);
  uint64_t v8 = v0 + *(int *)(v7 + 24);
  uint64_t v9 = *(void *)v8;
  uint64_t v10 = *(void *)(v8 + 8);
  char v11 = *(unsigned char *)(v8 + 16);
  swift_retain();
  swift_retain();
  sub_1000F3620();
  id v12 = objc_allocWithZone((Class)type metadata accessor for SafariSheetModifier.SafariPresenter.Coordinator(0));
  return sub_100080134((uint64_t)v6, v9, v10, v11, (uint64_t)v3);
}

uint64_t type metadata accessor for SafariSheetModifier.SafariPresenter.Coordinator(uint64_t a1)
{
  return sub_10018678C(a1, qword_100E74988);
}

id sub_100080134(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v13 = (uint64_t)&v6[OBJC_IVAR____TtCVV7WeatherP33_6F14ACE14E05F94F19B7002A2956129619SafariSheetModifier15SafariPresenter11Coordinator_initialURL];
  uint64_t v14 = type metadata accessor for URL();
  _s7Weather24LocationCompositionStateOwst_0(v13, 1, 1, v14);
  *(void *)&v6[OBJC_IVAR____TtCVV7WeatherP33_6F14ACE14E05F94F19B7002A2956129619SafariSheetModifier15SafariPresenter11Coordinator_safariViewController] = 0;
  swift_beginAccess();
  uint64_t v15 = v6;
  sub_1000F365C(a1, v13);
  swift_endAccess();
  uint64_t v16 = &v15[OBJC_IVAR____TtCVV7WeatherP33_6F14ACE14E05F94F19B7002A2956129619SafariSheetModifier15SafariPresenter11Coordinator_wantsPresentation];
  *(void *)uint64_t v16 = a2;
  *((void *)v16 + 1) = a3;
  v16[16] = a4;
  uint64_t v17 = &v15[OBJC_IVAR____TtCVV7WeatherP33_6F14ACE14E05F94F19B7002A2956129619SafariSheetModifier15SafariPresenter11Coordinator_colorScheme];
  uint64_t v18 = type metadata accessor for ColorScheme();
  uint64_t v19 = *(void *)(v18 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))(v17, a5, v18);
  swift_retain();
  swift_retain();

  v22.receiver = v15;
  v22.super_class = ObjectType;
  id v20 = [super initWithNibName:0 bundle:0];
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v19 + 8))(a5, v18);
  sub_1000F3400(a1, &qword_100E749B0);
  return v20;
}

uint64_t sub_1000802E8(uint64_t a1)
{
  uint64_t v62 = a1;
  uint64_t v63 = sub_10017DF08(&qword_100E76CC8);
  uint64_t v61 = *(void *)(v63 - 8);
  __chkstk_darwin(v63);
  int64_t v60 = (char *)&v48 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = type metadata accessor for OsInstallVariant();
  uint64_t v51 = *(void *)(v2 - 8);
  uint64_t v52 = v2;
  __chkstk_darwin(v2);
  uint64_t v53 = (char *)&v48 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for DeviceData();
  uint64_t v58 = *(void *)(v4 - 8);
  uint64_t v59 = v4;
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v54 = (char *)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v57 = (char *)&v48 - v7;
  uint64_t v8 = sub_10017DF08(&qword_100E76CD0);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for DevicePlatform();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v48 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __chkstk_darwin(v13);
  uint64_t v18 = (char *)&v48 - v17;
  uint64_t v19 = __chkstk_darwin(v16);
  uint64_t v21 = (char *)&v48 - v20;
  __chkstk_darwin(v19);
  uint64_t v65 = (char *)&v48 - v22;
  uint64_t v23 = type metadata accessor for DeviceInfo();
  uint64_t v55 = *(void *)(v23 - 8);
  uint64_t v56 = v23;
  __chkstk_darwin(v23);
  unint64_t v25 = (char *)&v48 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  static DeviceInfo.current.getter();
  char v26 = Tracker.diagnosticSubmissionAllowed.getter();
  uint64_t v64 = v25;
  uint64_t v27 = DeviceInfo.marketingProductName.getter();
  uint64_t v29 = v27;
  uint64_t v30 = v28;
  if (v26)
  {
    DevicePlatform.init(rawValue:)();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v10, 1, v11) == 1)
    {
      (*(void (**)(char *, void, uint64_t))(v12 + 104))(v21, enum case for DevicePlatform.unknown(_:), v11);
      sub_100178110((uint64_t)v10, &qword_100E76CD0);
      uint64_t v31 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
    }
    else
    {
      uint64_t v31 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
      v31(v21, v10, v11);
    }
  }
  else
  {
    BOOL v32 = v27 == 5459817 && v28 == 0xE300000000000000;
    if (v32 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      uint64_t v33 = (unsigned int *)&enum case for DevicePlatform.iOS(_:);
    }
    else if (v29 == 0x534F63616DLL && v30 == 0xE500000000000000)
    {
      swift_bridgeObjectRelease();
      uint64_t v33 = (unsigned int *)&enum case for DevicePlatform.macOS(_:);
    }
    else
    {
      char v47 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      uint64_t v33 = (unsigned int *)&enum case for DevicePlatform.unknown(_:);
      if (v47) {
        uint64_t v33 = (unsigned int *)&enum case for DevicePlatform.macOS(_:);
      }
    }
    (*(void (**)(char *, void, uint64_t))(v12 + 104))(v18, *v33, v11);
    uint64_t v31 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
    v31(v21, v18, v11);
  }
  uint64_t v49 = v12;
  uint64_t v50 = v11;
  uint64_t v34 = v65;
  v31(v65, v21, v11);
  bzero(&v66, 0x500uLL);
  uname(&v66);
  String.init(cString:)();
  (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v15, v34, v11);
  type metadata accessor for Capabilities();
  char v35 = static Capabilities.isInternalBuild()();
  unint64_t v36 = (unsigned int *)&enum case for OsInstallVariant.internal(_:);
  if ((v35 & 1) == 0) {
    unint64_t v36 = (unsigned int *)&enum case for OsInstallVariant.external(_:);
  }
  (*(void (**)(char *, void, uint64_t))(v51 + 104))(v53, *v36, v52);
  DeviceInfo.productVersion.getter();
  DeviceInfo.buildVersion.getter();
  uint64_t v37 = v57;
  DeviceData.init(deviceModel:devicePlatform:osInstallVariant:osVersion:osBundleVersion:)();
  uint64_t v38 = v58;
  uint64_t v39 = v59;
  (*(void (**)(char *, char *, uint64_t))(v58 + 16))(v54, v37, v59);
  sub_1000EDE3C(&qword_100E76CD8, (void (*)(uint64_t))&type metadata accessor for DeviceData);
  uint64_t v40 = v60;
  SessionData.init(key:data:)();
  sub_10017DF08(&qword_100E6E1F0);
  uint64_t v41 = type metadata accessor for DataEventTrait();
  uint64_t v42 = *(void *)(v41 - 8);
  unint64_t v43 = (*(unsigned __int8 *)(v42 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v42 + 80);
  uint64_t v44 = swift_allocObject();
  *(_OWORD *)(v44 + 16) = xmmword_100C251B0;
  (*(void (**)(unint64_t, void, uint64_t))(v42 + 104))(v44 + v43, enum case for DataEventTrait.unique(_:), v41);
  AccessSessionManager.push<A>(_:traits:file:line:)();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v61 + 8))(v40, v63);
  (*(void (**)(char *, uint64_t))(v38 + 8))(v37, v39);
  (*(void (**)(char *, uint64_t))(v49 + 8))(v65, v50);
  return (*(uint64_t (**)(char *, uint64_t))(v55 + 8))(v64, v56);
}

uint64_t sub_100080B20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v8 = type metadata accessor for MapsConfiguration.OverlayKind();
  uint64_t v9 = sub_100109308(v8);
  __chkstk_darwin(v9);
  sub_1001626E0();
  uint64_t v12 = v11 - v10;
  type metadata accessor for WeatherAvailability.AvailabilityKind();
  sub_100179C0C();
  uint64_t v53 = v14;
  uint64_t v54 = v13;
  __chkstk_darwin(v13);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v15);
  sub_100128F8C();
  uint64_t v51 = v16;
  type metadata accessor for WeatherAvailability();
  sub_100179C0C();
  __chkstk_darwin(v17);
  sub_100109314();
  sub_100109328(v18);
  uint64_t v19 = type metadata accessor for Location.Identifier();
  sub_100179C0C();
  uint64_t v21 = v20;
  __chkstk_darwin(v22);
  sub_100125FF8();
  static Settings.Maps.overrides.getter();
  char v23 = dispatch thunk of SettingGroup.isEnabled.getter();
  swift_release();
  if ((v23 & 1) == 0)
  {
    uint64_t v27 = *(void *)(a1 + 16);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v21 + 16))(v4, a2, v19);
    sub_1000812EC(v3, (uint64_t)v56);
    if (v27)
    {
      char v28 = sub_100031F8C(v57);
      sub_100081284((uint64_t)v56);
      uint64_t v29 = sub_100188A8C();
      v30(v29);
      if (v28) {
        goto LABEL_38;
      }
    }
    else
    {
      sub_100081284((uint64_t)v56);
      uint64_t v31 = sub_100188A8C();
      v32(v31);
    }
    if (!*(void *)(a1 + 16)) {
      goto LABEL_35;
    }
    sub_10019B598();
    String.hash(into:)();
    Swift::Int v33 = Hasher._finalize()();
    if ((*(void *)(a1 + 56 + (((v33 & (unint64_t)~(-1 << *(unsigned char *)(a1 + 32))) >> 3) & 0xFFFFFFFFFFFFFF8)) >> (v33 & ~(-1 << *(unsigned char *)(a1 + 32)))))
    {
      while (1)
      {
        sub_10017F4B4();
        switch(v34)
        {
          case 1:
            swift_bridgeObjectRelease();
            goto LABEL_37;
          case 2:
            sub_1001871A8();
            break;
          case 3:
            sub_100182AE8();
            break;
          default:
            break;
        }
        _stringCompareWithSmolCheck(_:_:expecting:)();
        sub_100182F1C();
        if (v55) {
          break;
        }
        sub_1001A0BA0();
        if ((v35 & 1) == 0) {
          goto LABEL_14;
        }
      }
LABEL_37:
      WeatherDataModel.availability.getter();
      WeatherAvailability.minuteAvailability.getter();
      sub_10017F874();
      v45();
      (*(void (**)(uint64_t, void, uint64_t))(v53 + 104))(v52, enum case for WeatherAvailability.AvailabilityKind.available(_:), v54);
      sub_100214FFC(v51, v52);
      unint64_t v46 = *(void (**)(uint64_t, uint64_t))(v53 + 8);
      v46(v52, v54);
      v46(v51, v54);
      type metadata accessor for WeatherMapPrecipitationOverlayKind();
      sub_100162E4C();
      sub_1001631E8();
      v47();
      goto LABEL_38;
    }
LABEL_14:
    if (!*(void *)(a1 + 16)) {
      goto LABEL_35;
    }
    sub_10019B598();
    String.hash(into:)();
    Hasher._finalize()();
    sub_1001814D0();
    if (v36)
    {
      do
      {
        sub_10017F4B4();
        switch(v37)
        {
          case 1:
            break;
          case 2:
            sub_1001871A8();
            break;
          case 3:
            sub_100182AE8();
            break;
          default:
            swift_bridgeObjectRelease();
            goto LABEL_38;
        }
        _stringCompareWithSmolCheck(_:_:expecting:)();
        sub_100182F1C();
        if (v55) {
          goto LABEL_38;
        }
        sub_1001A0BA0();
      }
      while ((v38 & 1) != 0);
    }
    if (!*(void *)(a1 + 16)) {
      goto LABEL_35;
    }
    sub_10019B598();
    String.hash(into:)();
    Hasher._finalize()();
    sub_1001814D0();
    if (v39)
    {
      do
      {
        sub_10017F4B4();
        switch(v40)
        {
          case 1:
            sub_10019D6DC();
            break;
          case 2:
            sub_1001871A8();
            break;
          case 3:
            swift_bridgeObjectRelease();
            goto LABEL_38;
          default:
            break;
        }
        _stringCompareWithSmolCheck(_:_:expecting:)();
        sub_100182F1C();
        if (v55) {
          goto LABEL_38;
        }
        sub_1001A0BA0();
      }
      while ((v41 & 1) != 0);
    }
    if (!*(void *)(a1 + 16)
      || (sub_10019B598(), String.hash(into:)(), Hasher._finalize()(), sub_1001814D0(), (v42 & 1) == 0))
    {
LABEL_35:
      uint64_t v24 = type metadata accessor for WeatherMapOverlayKind();
      uint64_t v25 = a3;
      uint64_t v26 = 1;
      return _s7Weather24LocationCompositionStateOwst_0(v25, v26, 1, v24);
    }
    while (1)
    {
      sub_10017F4B4();
      switch(v43)
      {
        case 1:
          sub_10019D6DC();
          break;
        case 2:
          swift_bridgeObjectRelease();
          goto LABEL_38;
        case 3:
          sub_100182AE8();
          break;
        default:
          break;
      }
      _stringCompareWithSmolCheck(_:_:expecting:)();
      sub_100182F1C();
      if (v55) {
        break;
      }
      sub_1001A0BA0();
      if ((v44 & 1) == 0) {
        goto LABEL_35;
      }
    }
LABEL_38:
    uint64_t v48 = type metadata accessor for WeatherMapOverlayKind();
    sub_100162E4C();
    sub_1001631E8();
    v49();
    uint64_t v25 = a3;
    uint64_t v26 = 0;
    uint64_t v24 = v48;
    return _s7Weather24LocationCompositionStateOwst_0(v25, v26, 1, v24);
  }
  type metadata accessor for SettingReader();
  static SettingReader.shared.getter();
  type metadata accessor for Settings.Maps.Overrides();
  static Settings.Maps.Overrides.defaultOverlayKind.getter();
  SettingReader.read<A>(_:)();
  swift_release();
  swift_release();
  sub_100632D94(v12, a3);
  uint64_t v24 = type metadata accessor for WeatherMapOverlayKind();
  uint64_t v25 = a3;
  uint64_t v26 = 0;
  return _s7Weather24LocationCompositionStateOwst_0(v25, v26, 1, v24);
}

uint64_t sub_100081284(uint64_t a1)
{
  return a1;
}

uint64_t destroy for MapOverlayKindProvider(uint64_t a1)
{
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1);

  return _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1 + 40);
}

uint64_t sub_1000812EC(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_100081324()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_10017DF08(&qword_100E97000);
  uint64_t v3 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v6 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v7 = ~(-1 << v5);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v8 = v7 & *(void *)(v2 + 56);
    int64_t v9 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v10 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v12 = 0;
    if (!v8) {
      goto LABEL_7;
    }
LABEL_6:
    unint64_t v13 = __clz(__rbit64(v8));
    v8 &= v8 - 1;
    for (unint64_t i = v13 | (v12 << 6); ; unint64_t i = __clz(__rbit64(v16)) + (v12 << 6))
    {
      char v18 = *(unsigned char *)(*(void *)(v2 + 48) + i);
      Hasher.init(_seed:)();
      String.hash(into:)();
      swift_bridgeObjectRelease();
      uint64_t result = Hasher._finalize()();
      uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v20 = result & ~v19;
      unint64_t v21 = v20 >> 6;
      if (((-1 << v20) & ~*(void *)(v10 + 8 * (v20 >> 6))) == 0)
      {
        char v23 = 0;
        unint64_t v24 = (unint64_t)(63 - v19) >> 6;
        while (++v21 != v24 || (v23 & 1) == 0)
        {
          BOOL v25 = v21 == v24;
          if (v21 == v24) {
            unint64_t v21 = 0;
          }
          v23 |= v25;
          uint64_t v26 = *(void *)(v10 + 8 * v21);
          if (v26 != -1)
          {
            unint64_t v22 = __clz(__rbit64(~v26)) + (v21 << 6);
            goto LABEL_30;
          }
        }
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        return result;
      }
      unint64_t v22 = __clz(__rbit64((-1 << v20) & ~*(void *)(v10 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
      *(void *)(v10 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
      *(unsigned char *)(*(void *)(v4 + 48) + v22) = v18;
      ++*(void *)(v4 + 16);
      if (v8) {
        goto LABEL_6;
      }
LABEL_7:
      int64_t v15 = v12 + 1;
      if (__OFADD__(v12, 1)) {
        goto LABEL_38;
      }
      if (v15 >= v9) {
        goto LABEL_32;
      }
      unint64_t v16 = v6[v15];
      ++v12;
      if (!v16)
      {
        int64_t v12 = v15 + 1;
        if (v15 + 1 >= v9) {
          goto LABEL_32;
        }
        unint64_t v16 = v6[v12];
        if (!v16)
        {
          int64_t v12 = v15 + 2;
          if (v15 + 2 >= v9) {
            goto LABEL_32;
          }
          unint64_t v16 = v6[v12];
          if (!v16)
          {
            int64_t v17 = v15 + 3;
            if (v17 >= v9)
            {
LABEL_32:
              swift_release();
              uint64_t v1 = v0;
              uint64_t v27 = 1 << *(unsigned char *)(v2 + 32);
              if (v27 > 63) {
                sub_1007F3004(0, (unint64_t)(v27 + 63) >> 6, (void *)(v2 + 56));
              }
              else {
                *uint64_t v6 = -1 << v27;
              }
              *(void *)(v2 + 16) = 0;
              break;
            }
            unint64_t v16 = v6[v17];
            if (!v16)
            {
              while (1)
              {
                int64_t v12 = v17 + 1;
                if (__OFADD__(v17, 1)) {
                  goto LABEL_39;
                }
                if (v12 >= v9) {
                  goto LABEL_32;
                }
                unint64_t v16 = v6[v12];
                ++v17;
                if (v16) {
                  goto LABEL_20;
                }
              }
            }
            int64_t v12 = v17;
          }
        }
      }
LABEL_20:
      unint64_t v8 = (v16 - 1) & v16;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t initializeWithCopy for LocationNameModifier(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_retain();
  return a1;
}

BOOL sub_10008186C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  uint64_t v92 = type metadata accessor for HomeAndWorkRefinementRowViewModel();
  sub_100162E4C();
  __chkstk_darwin(v4);
  sub_100109314();
  uint64_t v87 = (unsigned __int8 *)v5;
  uint64_t v89 = sub_10017DF08(&qword_100E7C578);
  sub_100162E4C();
  __chkstk_darwin(v6);
  sub_100109314();
  uint64_t v93 = v7;
  uint64_t v8 = sub_10017DF08(&qword_100E6DC10);
  __chkstk_darwin(v8 - 8);
  sub_100162EF8();
  uint64_t v88 = (unsigned __int8 *)v9;
  sub_1001626D4();
  __chkstk_darwin(v10);
  uint64_t v90 = &v83[-v11];
  sub_1001626D4();
  __chkstk_darwin(v12);
  uint64_t v91 = &v83[-v13];
  uint64_t v99 = type metadata accessor for LocationOfInterest();
  sub_100179C0C();
  uint64_t v95 = v14;
  __chkstk_darwin(v15);
  sub_100109314();
  uint64_t v94 = v16;
  uint64_t v17 = sub_10017DF08(&qword_100E7C580);
  sub_100162E4C();
  __chkstk_darwin(v18);
  sub_100109314();
  uint64_t v98 = v19;
  uint64_t v20 = sub_10017DF08(&qword_100E63508);
  __chkstk_darwin(v20 - 8);
  sub_100162EF8();
  uint64_t v96 = v21;
  sub_1001626D4();
  __chkstk_darwin(v22);
  uint64_t v100 = &v83[-v23];
  sub_1001626D4();
  __chkstk_darwin(v24);
  uint64_t v97 = &v83[-v25];
  uint64_t v26 = type metadata accessor for URL();
  sub_100179C0C();
  uint64_t v101 = v27;
  __chkstk_darwin(v28);
  uint64_t v30 = &v83[-((v29 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v31 = sub_10017DF08(&qword_100E6D578);
  sub_100162E4C();
  __chkstk_darwin(v32);
  uint64_t v34 = &v83[-((v33 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v35 = sub_10017DF08(&qword_100E749B0);
  uint64_t v36 = __chkstk_darwin(v35 - 8);
  char v38 = &v83[-((v37 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v39 = __chkstk_darwin(v36);
  char v41 = &v83[-v40];
  __chkstk_darwin(v39);
  uint64_t v43 = &v83[-v42];
  if (*a1 != *a2 || a1[1] != a2[1] || a1[2] != a2[2]) {
    return 0;
  }
  uint64_t v45 = *((void *)a1 + 2);
  uint64_t v46 = *((void *)a2 + 2);
  if (!v45)
  {
    if (v46) {
      return 0;
    }
    goto LABEL_15;
  }
  if (!v46) {
    return 0;
  }
  BOOL v47 = *((void *)a1 + 1) == *((void *)a2 + 1) && v45 == v46;
  if (v47 || (v48 = _stringCompareWithSmolCheck(_:_:expecting:)(), BOOL result = 0, (v48 & 1) != 0))
  {
LABEL_15:
    uint64_t v49 = type metadata accessor for LocationFooterViewModel();
    uint64_t v86 = a2;
    uint64_t v50 = v49;
    sub_1001262FC((uint64_t)&a1[*(int *)(v49 + 32)], (uint64_t)v43, &qword_100E749B0);
    uint64_t v85 = (int *)v50;
    sub_1001262FC((uint64_t)&v86[*(int *)(v50 + 32)], (uint64_t)v41, &qword_100E749B0);
    uint64_t v51 = (uint64_t)&v34[*(int *)(v31 + 48)];
    sub_1001262FC((uint64_t)v43, (uint64_t)v34, &qword_100E749B0);
    sub_1001262FC((uint64_t)v41, v51, &qword_100E749B0);
    sub_10012B520((uint64_t)v34, 1, v26);
    if (v47)
    {
      sub_1001781AC((uint64_t)v41, &qword_100E749B0);
      sub_1001781AC((uint64_t)v43, &qword_100E749B0);
      sub_10012B520(v51, 1, v26);
      if (v47)
      {
        sub_1001781AC((uint64_t)v34, &qword_100E749B0);
        goto LABEL_26;
      }
    }
    else
    {
      sub_1001262FC((uint64_t)v34, (uint64_t)v38, &qword_100E749B0);
      sub_10012B520(v51, 1, v26);
      if (!v52)
      {
        uint64_t v55 = v101;
        (*(void (**)(unsigned char *, uint64_t, uint64_t))(v101 + 32))(v30, v51, v26);
        sub_10023122C(qword_100E6D3E8, (void (*)(uint64_t))&type metadata accessor for URL);
        int v84 = dispatch thunk of static Equatable.== infix(_:_:)();
        uint64_t v56 = *(void (**)(unsigned char *, uint64_t))(v55 + 8);
        v56(v30, v26);
        sub_1001781AC((uint64_t)v41, &qword_100E749B0);
        sub_1001781AC((uint64_t)v43, &qword_100E749B0);
        v56(v38, v26);
        sub_1001781AC((uint64_t)v34, &qword_100E749B0);
        if ((v84 & 1) == 0) {
          return 0;
        }
LABEL_26:
        uint64_t v57 = v85;
        if ((sub_10004D0EC(&a1[v85[9]], &v86[v85[9]]) & 1) == 0 || (sub_100222164(a1[v57[10]], v86[v57[10]]) & 1) == 0) {
          return 0;
        }
        uint64_t v58 = v97;
        sub_1001262FC((uint64_t)&a1[v57[11]], (uint64_t)v97, &qword_100E63508);
        uint64_t v59 = v100;
        sub_1001262FC((uint64_t)&v86[v57[11]], (uint64_t)v100, &qword_100E63508);
        uint64_t v60 = v98;
        uint64_t v61 = v98 + *(int *)(v17 + 48);
        sub_1001262FC((uint64_t)v58, v98, &qword_100E63508);
        sub_1001262FC((uint64_t)v59, v61, &qword_100E63508);
        uint64_t v62 = v99;
        sub_10012B520(v60, 1, v99);
        if (v47)
        {
          sub_1001781AC((uint64_t)v59, &qword_100E63508);
          sub_1001781AC((uint64_t)v58, &qword_100E63508);
          sub_10012B520(v61, 1, v62);
          if (v47)
          {
            sub_1001781AC(v60, &qword_100E63508);
LABEL_38:
            sub_1001A0914();
            if (!v47) {
              return 0;
            }
            sub_1001A0914();
            if (!v47) {
              return 0;
            }
            uint64_t v69 = v91;
            sub_1001262FC((uint64_t)&a1[v57[14]], (uint64_t)v91, &qword_100E6DC10);
            uint64_t v70 = (uint64_t)&v86[v57[14]];
            uint64_t v71 = v90;
            sub_1001262FC(v70, (uint64_t)v90, &qword_100E6DC10);
            uint64_t v72 = v93;
            uint64_t v73 = v93 + *(int *)(v89 + 48);
            sub_1001262FC((uint64_t)v69, v93, &qword_100E6DC10);
            sub_1001262FC((uint64_t)v71, v73, &qword_100E6DC10);
            uint64_t v74 = v92;
            sub_10012B520(v72, 1, v92);
            if (v47)
            {
              sub_1001781AC((uint64_t)v71, &qword_100E6DC10);
              sub_1001781AC((uint64_t)v69, &qword_100E6DC10);
              sub_10012B520(v73, 1, v74);
              if (v47)
              {
                sub_1001781AC(v72, &qword_100E6DC10);
                return 1;
              }
              char v77 = &qword_100E7C578;
            }
            else
            {
              int64_t v75 = v88;
              sub_1001262FC(v72, (uint64_t)v88, &qword_100E6DC10);
              sub_10012B520(v73, 1, v74);
              if (v76)
              {
                char v77 = &qword_100E7C578;
              }
              else
              {
                uint64_t v78 = v73;
                uint64_t v79 = v87;
                sub_100218CE8(v78, (uint64_t)v87, (void (*)(void))type metadata accessor for HomeAndWorkRefinementRowViewModel);
                if (*v75 == *v79
                  && (static Location.== infix(_:_:)() & 1) != 0
                  && (static LocationOfInterest.== infix(_:_:)() & 1) != 0)
                {
                  uint64_t v80 = *(int *)(v74 + 28);
                  int v81 = v75[v80];
                  int v82 = v79[v80];
                  sub_1004E9B60((uint64_t)v79);
                  sub_1001781AC((uint64_t)v71, &qword_100E6DC10);
                  sub_1001781AC((uint64_t)v69, &qword_100E6DC10);
                  sub_1004E9B60((uint64_t)v75);
                  sub_1001781AC(v72, &qword_100E6DC10);
                  return v81 == v82;
                }
                sub_1004E9B60((uint64_t)v79);
                char v77 = &qword_100E6DC10;
              }
              sub_1001781AC((uint64_t)v71, &qword_100E6DC10);
              sub_1001781AC((uint64_t)v69, &qword_100E6DC10);
              sub_1004E9B60((uint64_t)v75);
            }
            uint64_t v54 = v72;
            uint64_t v53 = v77;
LABEL_24:
            sub_1001781AC(v54, v53);
            return 0;
          }
        }
        else
        {
          uint64_t v63 = v96;
          sub_1001262FC(v60, v96, &qword_100E63508);
          sub_10012B520(v61, 1, v62);
          if (!v64)
          {
            uint64_t v66 = v94;
            uint64_t v65 = v95;
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v95 + 32))(v94, v61, v62);
            sub_10023122C((unint64_t *)&qword_100E7C588, (void (*)(uint64_t))&type metadata accessor for LocationOfInterest);
            LODWORD(v101) = dispatch thunk of static Equatable.== infix(_:_:)();
            int64_t v67 = *(void (**)(uint64_t, uint64_t))(v65 + 8);
            uint64_t v68 = v66;
            uint64_t v57 = v85;
            v67(v68, v62);
            sub_1001781AC((uint64_t)v100, &qword_100E63508);
            sub_1001781AC((uint64_t)v58, &qword_100E63508);
            v67(v63, v62);
            sub_1001781AC(v60, &qword_100E63508);
            if ((v101 & 1) == 0) {
              return 0;
            }
            goto LABEL_38;
          }
          sub_1001781AC((uint64_t)v59, &qword_100E63508);
          sub_1001781AC((uint64_t)v58, &qword_100E63508);
          (*(void (**)(uint64_t, uint64_t))(v95 + 8))(v63, v62);
        }
        uint64_t v53 = &qword_100E7C580;
        uint64_t v54 = v60;
        goto LABEL_24;
      }
      sub_1001781AC((uint64_t)v41, &qword_100E749B0);
      sub_1001781AC((uint64_t)v43, &qword_100E749B0);
      (*(void (**)(unsigned char *, uint64_t))(v101 + 8))(v38, v26);
    }
    uint64_t v53 = &qword_100E6D578;
    uint64_t v54 = (uint64_t)v34;
    goto LABEL_24;
  }
  return result;
}

uint64_t sub_1000822BC@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E71B60);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v11)
  {
    __break(1u);
    goto LABEL_6;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E807C8);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v9)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E647E0);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v7)
  {
    uint64_t v5 = type metadata accessor for LocationDataProvider();
    swift_allocObject();
    uint64_t result = sub_100082574(&v10, &v8, &v6);
    a2[3] = v5;
    a2[4] = (uint64_t)&off_100E0D420;
    *a2 = result;
    return result;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t type metadata accessor for LocationDataProvider()
{
  return self;
}

uint64_t sub_100082414@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E8DCD8);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:name:)();
  if (!v11)
  {
    __break(1u);
    goto LABEL_6;
  }
  sub_1001B1E64(a1, a1[3]);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:name:)();
  if (!v9)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E8DE50);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v7)
  {
    uint64_t v5 = type metadata accessor for LocationViewConfigurationFactory();
    swift_allocObject();
    uint64_t result = sub_100082574(&v10, &v8, &v6);
    a2[3] = v5;
    a2[4] = (uint64_t)&off_100E1A278;
    *a2 = result;
    return result;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_100082574(long long *a1, long long *a2, long long *a3)
{
  sub_1001262E4(a1, v3 + 16);
  sub_1001262E4(a2, v3 + 56);
  sub_1001262E4(a3, v3 + 96);
  return v3;
}

uint64_t type metadata accessor for LocationViewConfigurationFactory()
{
  return self;
}

uint64_t sub_1000825E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v5 = type metadata accessor for Domain();
  sub_100179C0C();
  uint64_t v7 = v6;
  __chkstk_darwin(v8);
  sub_1001626E0();
  uint64_t v11 = v10 - v9;
  type metadata accessor for Access();
  sub_100179C0C();
  __chkstk_darwin(v12);
  sub_1001626E0();
  (*(void (**)(uint64_t, void))(v15 + 104))(v14 - v13, enum case for Access.protected(_:));
  (*(void (**)(uint64_t, void, uint64_t))(v7 + 104))(v11, enum case for Domain.standard(_:), v5);
  sub_10017DF08(&qword_100E70818);
  swift_allocObject();
  uint64_t result = Setting.init(_:defaultValue:domain:access:)();
  *a4 = result;
  return result;
}

uint64_t sub_100082744(void *a1, uint64_t a2)
{
  uint64_t v4 = v2;
  uint64_t v33 = type metadata accessor for StartupTaskExecutionPhase();
  sub_100179C0C();
  uint64_t v8 = v7;
  __chkstk_darwin(v9);
  sub_10012B938();
  sub_10017DF08(&qword_100E64020);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_100C251B0;
  v34[0] = 0;
  v34[1] = 0xE000000000000000;
  void v34[5] = [a1 applicationState];
  type metadata accessor for State(0);
  _print_unlocked<A, B>(_:_:)();
  *(void *)(v10 + 56) = &type metadata for String;
  *(void *)(v10 + 64) = sub_10012B7C0();
  *(void *)(v10 + 32) = 0;
  *(void *)(v10 + 40) = 0xE000000000000000;
  sub_1001ABC4C(0, (unint64_t *)&qword_100E62D68);
  uint64_t v11 = (void *)static OS_os_log.default.getter();
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  swift_bridgeObjectRelease();

  sub_1000A02F4(&OBJC_IVAR____TtC7Weather11AppDelegate____lazy_storage___stateManager, &qword_100E6F460, (uint64_t (*)(unsigned char *, uint64_t))sub_1001262E4, &qword_100E6F468, (uint64_t)v34);
  sub_1001B1E64(v34, v34[3]);
  if (a2)
  {
    type metadata accessor for LaunchOptionsKey(0);
    type metadata accessor for ApplicationStateLaunchOptionKey();
    sub_1000A382C((unint64_t *)&unk_100E6F490, 255, type metadata accessor for LaunchOptionsKey);
    sub_1000A382C(&qword_100E6F4A8, 255, (void (*)(uint64_t))&type metadata accessor for ApplicationStateLaunchOptionKey);
    Dictionary.mapKeysAndValues<A, B>(_:)();
  }
  dispatch thunk of ApplicationStateManagerType.applicationDidFinishLaunching(withOptions:)();
  swift_bridgeObjectRelease();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v34);
  id v12 = [self defaultCenter];
  sub_10019E8FC(v12, v13, v14, (uint64_t)"didBecomeKeyWindow", (uint64_t)UIWindowDidBecomeKeyNotification);

  id v15 = sub_1001A05C4();
  sub_10019E8FC(v15, v16, v17, (uint64_t)"willEnterForeground", (uint64_t)UIApplicationWillEnterForegroundNotification);

  id v18 = sub_1001A05C4();
  sub_10019E8FC(v18, v19, v20, (uint64_t)"didEnterBackground", (uint64_t)UIApplicationDidEnterBackgroundNotification);

  id v21 = sub_1001A05C4();
  sub_10019E8FC(v21, v22, v23, (uint64_t)"willTerminate", (uint64_t)UIApplicationWillTerminateNotification);

  id v24 = sub_1001A05C4();
  sub_10019E8FC(v24, v25, v26, (uint64_t)"didBecomeFocused", (uint64_t)UIApplicationDidBecomeActiveNotification);

  id v27 = sub_1001A05C4();
  sub_10019E8FC(v27, v28, v29, (uint64_t)"didLoseFocus", (uint64_t)UIApplicationWillResignActiveNotification);

  CFAbsoluteTime Current = CFAbsoluteTimeGetCurrent();
  uint64_t v31 = v4 + OBJC_IVAR____TtC7Weather11AppDelegate_appLaunchTime;
  *(CFAbsoluteTime *)uint64_t v31 = Current;
  *(unsigned char *)(v31 + 8) = 0;
  sub_1000A0944((uint64_t)v34);
  sub_1001D1870(v34);
  type metadata accessor for StartupTaskManager();
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (result)
  {
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v34);
    if (a2) {
      Dictionary<>.applicationStateLaunchOptions.getter();
    }
    (*(void (**)(uint64_t, void, uint64_t))(v8 + 104))(v3, enum case for StartupTaskExecutionPhase.didFinishLaunching(_:), v33);
    StartupTaskManager.startAllTasks(launchOptions:phase:)();
    swift_release();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v3, v33);
    return 1;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100082C00()
{
  sub_100162EA0();
  uint64_t v1 = (int *)type metadata accessor for LocationViewBannerContainer(0);
  sub_100179EF0();
  uint64_t v3 = v0 + ((*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  uint64_t v4 = type metadata accessor for ContentStatusBanner();
  if (!_s7Weather24LocationCompositionStateOwet_0(v3, 1, v4))
  {
    if (*(void *)(v3 + 16) >= 2uLL) {
      swift_bridgeObjectRelease();
    }
    uint64_t v5 = v3 + *(int *)(v4 + 24);
    uint64_t v6 = type metadata accessor for Date();
    if (!_s7Weather24LocationCompositionStateOwet_0(v5, 1, v6))
    {
      sub_100162880();
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
    }
  }
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v3 + v1[5]);
  uint64_t v8 = v3 + v1[6];
  sub_100191934(*(void *)v8, *(void *)(v8 + 8), *(void *)(v8 + 16), *(void *)(v8 + 24), *(unsigned char *)(v8 + 32));
  sub_10017DF08(&qword_100E63BD0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    type metadata accessor for DisplayMetrics();
    type metadata accessor for DynamicTypeSize();
    sub_100179DC0();
    sub_100162F0C();
    v9();
  }
  else
  {
    swift_release();
  }
  if (*(void *)(v3 + v1[8] + 16) >= 2uLL) {
    swift_bridgeObjectRelease();
  }
  uint64_t v10 = type metadata accessor for Date();
  if (!sub_100181EF0(v10))
  {
    sub_100162880();
    uint64_t v11 = sub_1001CA884();
    v12(v11);
  }
  sub_10017DF08(&qword_100E8EAB0);
  swift_release();
  sub_100188D90();
  sub_100162694();
  return swift_deallocObject();
}

uint64_t sub_100082E00(void (*a1)(uint64_t, __n128), uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t), uint64_t a6)
{
  uint64_t v57 = a6;
  uint64_t v58 = a5;
  uint64_t v61 = a4;
  uint64_t v62 = a2;
  uint64_t v63 = a1;
  uint64_t v59 = sub_10017DF08(&qword_100E64A10);
  __chkstk_darwin(v59);
  uint64_t v60 = (char *)&v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10017DF08(&qword_100E64A18);
  __chkstk_darwin(v8 - 8);
  uint64_t v56 = (char *)&v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = type metadata accessor for LocationViewModel();
  __chkstk_darwin(v55);
  uint64_t v53 = (char *)&v52 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v54 = (char *)&v52 - v12;
  uint64_t v13 = sub_10017DF08(&qword_100E64A20);
  __chkstk_darwin(v13);
  id v15 = (char *)&v52 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_10017DF08(&qword_100E64A28);
  __chkstk_darwin(v16 - 8);
  id v18 = (unsigned __int8 *)&v52 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  id v21 = (char *)&v52 - v20;
  __chkstk_darwin(v22);
  id v24 = (char *)&v52 - v23;
  __chkstk_darwin(v25);
  id v27 = (char *)&v52 - v26;
  uint64_t v28 = type metadata accessor for LocationInput();
  __chkstk_darwin(v28);
  uint64_t v30 = (unsigned __int8 *)&v52 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v32 = __chkstk_darwin(v31);
  uint64_t v34 = (void (*)(uint64_t, __n128))((char *)&v52 - v33);
  v63(a3 + 64, v32);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v27, 1, v28) == 1) {
    return sub_1001781AC((uint64_t)v27, &qword_100E64A28);
  }
  sub_1001522B4();
  uint64_t v63 = v34;
  sub_100136460();
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v24, 0, 1, v28);
  uint64_t v36 = v61;
  sub_100020E5C((uint64_t)v21);
  uint64_t v37 = (uint64_t)&v15[*(int *)(v13 + 48)];
  sub_10006DF38((uint64_t)v24, (uint64_t)v15, &qword_100E64A28);
  sub_10006DF38((uint64_t)v21, v37, &qword_100E64A28);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v15, 1, v28) != 1)
  {
    sub_10006DF38((uint64_t)v15, (uint64_t)v18, &qword_100E64A28);
    if (_s7Weather24LocationCompositionStateOwet_0(v37, 1, v28) != 1)
    {
      sub_1001522B4();
      char v45 = sub_1000441E0(v18, v30);
      sub_1001524C8((uint64_t)v30, (void (*)(void))type metadata accessor for LocationInput);
      sub_1001781AC((uint64_t)v21, &qword_100E64A28);
      sub_1001781AC((uint64_t)v24, &qword_100E64A28);
      sub_1001524C8((uint64_t)v18, (void (*)(void))type metadata accessor for LocationInput);
      sub_1001781AC((uint64_t)v15, &qword_100E64A28);
      uint64_t v38 = (uint64_t)v63;
      if (v45) {
        return sub_1001524C8(v38, (void (*)(void))type metadata accessor for LocationInput);
      }
LABEL_9:
      uint64_t v39 = (uint64_t)v56;
      v58(v38);
      if (_s7Weather24LocationCompositionStateOwet_0(v39, 1, v55) == 1)
      {
        sub_1001781AC(v39, &qword_100E64A18);
      }
      else
      {
        uint64_t v40 = (uint64_t)v54;
        sub_1001522B4();
        uint64_t v41 = (uint64_t)v53;
        sub_100133E68();
        char v42 = sub_1000C7464(v40, v41);
        sub_1001524C8(v41, (void (*)(void))type metadata accessor for LocationViewModel);
        if ((v42 & 1) == 0)
        {
          if (qword_100E62828 != -1) {
            swift_once();
          }
          uint64_t v46 = type metadata accessor for Logger();
          sub_1002102B0(v46, (uint64_t)qword_100F51F80);
          BOOL v47 = Logger.logObject.getter();
          os_log_type_t v48 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v47, v48))
          {
            uint64_t v49 = swift_slowAlloc();
            v65[0] = swift_slowAlloc();
            *(_DWORD *)uint64_t v49 = 136446466;
            uint64_t v64 = sub_10016414C(0x6E6F697461636F4CLL, 0xED00007475706E49, v65);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            *(_WORD *)(v49 + 12) = 2082;
            uint64_t v64 = sub_10016414C(0xD000000000000011, 0x8000000100C97060, v65);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            _os_log_impl((void *)&_mh_execute_header, v47, v48, "Selector observed model difference for %{public}s, %{public}s; views will update",
              (uint8_t *)v49,
              0x16u);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();
          }

          sub_10017DF08(&qword_100E64A30);
          uint64_t v50 = (uint64_t)v60;
          sub_100136460();
          sub_100136460();
          swift_storeEnumTagMultiPayload();
          uint64_t v51 = v36 + *(void *)(*(void *)v36 + 120);
          swift_beginAccess();
          sub_1001DF004(v50, v51, &qword_100E64A10);
          swift_endAccess();
          sub_10017DF08(&qword_100E64A38);
          sub_1001246C8((unint64_t *)&qword_100E64A40, &qword_100E64A38);
          ObservableObject<>.objectWillChange.getter();
          ObservableObjectPublisher.send()();
          swift_release();
          sub_1001524C8(v40, (void (*)(void))type metadata accessor for LocationViewModel);
          return sub_1001524C8(v38, (void (*)(void))type metadata accessor for LocationInput);
        }
        sub_1001524C8(v40, (void (*)(void))type metadata accessor for LocationViewModel);
      }
      sub_10017DF08(&qword_100E64A30);
      uint64_t v43 = (uint64_t)v60;
      sub_100136460();
      sub_100133E68();
      sub_1001524C8(v38, (void (*)(void))type metadata accessor for LocationInput);
      swift_storeEnumTagMultiPayload();
      uint64_t v44 = v36 + *(void *)(*(void *)v36 + 120);
      swift_beginAccess();
      sub_1001DF004(v43, v44, &qword_100E64A10);
      return swift_endAccess();
    }
    sub_1001781AC((uint64_t)v21, &qword_100E64A28);
    sub_1001781AC((uint64_t)v24, &qword_100E64A28);
    sub_1001524C8((uint64_t)v18, (void (*)(void))type metadata accessor for LocationInput);
LABEL_8:
    sub_1001781AC((uint64_t)v15, &qword_100E64A20);
    uint64_t v38 = (uint64_t)v63;
    goto LABEL_9;
  }
  sub_1001781AC((uint64_t)v21, &qword_100E64A28);
  sub_1001781AC((uint64_t)v24, &qword_100E64A28);
  if (_s7Weather24LocationCompositionStateOwet_0(v37, 1, v28) != 1) {
    goto LABEL_8;
  }
  sub_1001781AC((uint64_t)v15, &qword_100E64A28);
  uint64_t v38 = (uint64_t)v63;
  return sub_1001524C8(v38, (void (*)(void))type metadata accessor for LocationInput);
}

uint64_t sub_100083750(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1009B232C);
}

uint64_t sub_100083764@<X0>(uint64_t (*a1)(void)@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t v5 = a1(0);
  uint64_t result = swift_allocObject();
  a3[3] = v5;
  a3[4] = a2;
  *a3 = result;
  return result;
}

uint64_t type metadata accessor for NotificationsResubscriptionComponentViewModelFactory()
{
  return self;
}

uint64_t type metadata accessor for PressureComponentViewModelFactory()
{
  return self;
}

uint64_t type metadata accessor for MapComponentViewModelFactory()
{
  return self;
}

uint64_t type metadata accessor for ReportWeatherComponentViewModelFactory()
{
  return self;
}

uint64_t type metadata accessor for WindComponentViewModelFactory()
{
  return self;
}

uint64_t sub_100083868@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = sub_100083B94();
  *(void *)a1 = result;
  *(unsigned char *)(a1 + 8) = v3 & 1;
  return result;
}

uint64_t sub_10008389C(uint64_t a1)
{
  return sub_100083B74(*(void *)a1, *(unsigned __int8 *)(a1 + 8));
}

uint64_t sub_1000838CC(uint64_t a1)
{
  uint64_t v1 = sub_1002103D8(a1);
  return sub_100083B54(v1, v2);
}

uint64_t sub_1000838F0(uint64_t a1)
{
  uint64_t v1 = sub_1002103D8(a1);
  return sub_100083964(v1, v2);
}

uint64_t sub_100083914(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, uint64_t))
{
  return EnvironmentValues.subscript.setter();
}

uint64_t sub_100083964(uint64_t a1, uint64_t a2)
{
  return sub_100083914(a1, a2, (void (*)(uint64_t, uint64_t))sub_100083A30);
}

uint64_t sub_100083984()
{
  sub_100184810();
  uint64_t result = sub_100083AE8();
  *(void *)uint64_t v0 = result;
  *(unsigned char *)(v0 + 8) = v2 & 1;
  return result;
}

uint64_t sub_1000839B4()
{
  sub_100184810();
  uint64_t result = sub_100083A7C();
  *(void *)uint64_t v0 = result;
  *(unsigned char *)(v0 + 8) = v2 & 1;
  return result;
}

uint64_t sub_1000839E4(void (*a1)(void))
{
  a1();
  EnvironmentValues.subscript.getter();
  return v2;
}

unint64_t sub_100083A30()
{
  unint64_t result = qword_100E66000;
  if (!qword_100E66000)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E66000);
  }
  return result;
}

uint64_t sub_100083A7C()
{
  return sub_1000839E4((void (*)(void))sub_100083A30);
}

unint64_t sub_100083A9C()
{
  unint64_t result = qword_100E66018;
  if (!qword_100E66018)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E66018);
  }
  return result;
}

uint64_t sub_100083AE8()
{
  return sub_1000839E4((void (*)(void))sub_100083A9C);
}

unint64_t sub_100083B08()
{
  unint64_t result = qword_100E66040;
  if (!qword_100E66040)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E66040);
  }
  return result;
}

uint64_t sub_100083B54(uint64_t a1, uint64_t a2)
{
  return sub_100083914(a1, a2, (void (*)(uint64_t, uint64_t))sub_100083A9C);
}

uint64_t sub_100083B74(uint64_t a1, uint64_t a2)
{
  return sub_100083914(a1, a2, (void (*)(uint64_t, uint64_t))sub_100083B08);
}

uint64_t sub_100083B94()
{
  return sub_1000839E4((void (*)(void))sub_100083B08);
}

uint64_t sub_100083BB4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, const void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char a7@<W6>, char a8@<W7>, uint64_t a9@<X8>, char a10, char a11, char a12, void *a13, char a14, char a15, char a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,char a21)
{
  type metadata accessor for Location.Identifier();
  sub_100179C0C();
  (*(void (**)(uint64_t, uint64_t))(v28 + 16))(a9, a1);
  uint64_t v29 = (int *)type metadata accessor for LocationViewModel();
  uint64_t v59 = a2;
  sub_10006DF38(a2, a9 + v29[5], &qword_100E6DC08);
  memcpy((void *)(a9 + v29[6]), a3, 0xA2uLL);
  *(void *)(a9 + v29[7]) = a4;
  *(void *)(a9 + v29[8]) = a5;
  uint64_t v60 = a6;
  sub_10006DF38(a6, a9 + v29[9], &qword_100E6DC18);
  *(unsigned char *)(a9 + v29[10]) = a7;
  *(unsigned char *)(a9 + v29[11]) = a8;
  *(unsigned char *)(a9 + v29[12]) = a10;
  *(unsigned char *)(a9 + v29[13]) = a11;
  *(unsigned char *)(a9 + v29[14]) = a12;
  *(void *)(a9 + v29[15]) = a13;
  *(unsigned char *)(a9 + v29[16]) = a14;
  *(unsigned char *)(a9 + v29[17]) = a15;
  *(unsigned char *)(a9 + v29[18]) = a16;
  uint64_t v30 = a9 + v29[19];
  uint64_t v31 = type metadata accessor for Date();
  sub_100162F30();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v32 + 16))(v30, a17, v31);
  sub_10006DF38(a18, a9 + v29[20], &qword_100E65FA8);
  *(unsigned char *)(a9 + v29[21]) = a19;
  uint64_t v33 = a9 + v29[24];
  uint64_t v34 = type metadata accessor for LocationEntity();
  sub_100162F30();
  uint64_t v36 = v35;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v35 + 16))(v33, a20, v34);
  *(unsigned char *)(a9 + v29[23]) = a21;
  uint64_t v37 = self;
  swift_retain();
  id v38 = a13;
  swift_bridgeObjectRetain();
  id v39 = [v37 currentDevice];
  id v40 = [v39 userInterfaceIdiom];

  if (v40)
  {
    uint64_t v57 = v34;
    uint64_t v41 = v38;
    uint64_t v42 = v60;
    uint64_t v62 = &_swiftEmptyDictionarySingleton;
    uint64_t v43 = *(void *)(a4 + 16);
    if (v43)
    {
      swift_bridgeObjectRetain();
      uint64_t v44 = a4;
      uint64_t v45 = 0;
      uint64_t v46 = (uint64_t *)(v44 + 48);
      do
      {
        uint64_t v47 = *(v46 - 1);
        uint64_t v48 = *v46;
        uint64_t v49 = *(v46 - 2);
        v61[0] = v45;
        v61[1] = v49;
        v61[2] = v47;
        v61[3] = v48;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1009108C0((uint64_t)&v62, v61);
        v46 += 3;
        ++v45;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      while (v43 != v45);
      swift_release();

      swift_bridgeObjectRelease();
      uint64_t v50 = v62;
      uint64_t v42 = v60;
    }
    else
    {
      swift_release();

      uint64_t v50 = &_swiftEmptyDictionarySingleton;
    }
    (*(void (**)(uint64_t, uint64_t))(v36 + 8))(a20, v57);
    sub_100178110(a18, &qword_100E65FA8);
    sub_100162F0C();
    v54();
    sub_100178110(v42, &qword_100E6DC18);
    sub_100178110(v59, &qword_100E6DC08);
    sub_100162F0C();
    v55();
    uint64_t result = swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v50 = (void *)Dictionary.init(dictionaryLiteral:)();
    swift_release();

    (*(void (**)(uint64_t, uint64_t))(v36 + 8))(a20, v34);
    sub_100178110(a18, &qword_100E65FA8);
    sub_100162F0C();
    v51();
    sub_100178110(v60, &qword_100E6DC18);
    sub_100178110(v59, &qword_100E6DC08);
    sub_100162F0C();
    uint64_t result = v52();
  }
  *(void *)(a9 + v29[22]) = v50;
  return result;
}

uint64_t sub_1000840BC(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v32 = a6;
  uint64_t v33 = a7;
  uint64_t v34 = type metadata accessor for MainAction();
  __chkstk_darwin(v34);
  uint64_t v11 = (uint64_t *)((char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t updated = type metadata accessor for WeatherDataUpdateRequestLog.Event(0);
  __chkstk_darwin(updated);
  uint64_t v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned char *v14 = a2;
  swift_storeEnumTagMultiPayload();
  sub_10015B128((uint64_t)v14);
  sub_1001BC5DC();
  uint64_t v31 = *(uint64_t (**)(uint64_t))(a3 + 48);
  id v15 = (int *)sub_10017DF08(&qword_100E6BBC0);
  uint64_t v16 = (uint64_t *)((char *)v11 + v15[12]);
  uint64_t v17 = (uint64_t)v11 + v15[16];
  uint64_t v30 = (uint64_t)v11 + v15[20];
  swift_retain();
  *uint64_t v11 = Location.id.getter();
  v11[1] = v18;
  uint64_t v20 = *a5;
  uint64_t v19 = a5[1];
  id v21 = (int *)type metadata accessor for WeatherData(0);
  uint64_t v22 = v21[6];
  uint64_t v23 = (char *)a5 + v22;
  id v24 = (char *)v16 + v22;
  uint64_t v25 = type metadata accessor for WeatherDataModel();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 16))(v24, v23, v25);
  sub_1001B9A30((uint64_t)a5 + v21[8], (uint64_t)v16 + v21[8], (void (*)(void))type metadata accessor for WeatherData.WeatherStatisticsState);
  sub_1001B9A30((uint64_t)a5 + v21[7], (uint64_t)v16 + v21[7], (void (*)(void))type metadata accessor for WeatherData.CachingState);
  sub_1001B7204((uint64_t)a5 + v21[9], (uint64_t)v16 + v21[9], &qword_100E63740);
  uint64_t v26 = (uint64_t)v16 + v21[5];
  swift_bridgeObjectRetain();
  static Locale.current.getter();
  uint64_t v27 = type metadata accessor for Locale();
  _s7Weather24LocationCompositionStateOwst_0(v26, 0, 1, v27);
  *uint64_t v16 = v20;
  v16[1] = v19;
  sub_1001B9A30(v32, v17, (void (*)(void))type metadata accessor for PreprocessedWeatherData);
  sub_1001B9A30(v33, v30, (void (*)(void))type metadata accessor for NewsDataModel);
  type metadata accessor for WeatherDataAction();
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  uint64_t v36 = 0;
  memset(v35, 0, sizeof(v35));
  sub_1001AAF58((uint64_t)v11, (uint64_t)v35, v31);
  sub_10017DF4C((uint64_t)v35, (uint64_t *)&unk_100EA01F0);
  sub_1001BC5DC();
  return swift_release();
}

uint64_t sub_1000843D8@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E980F8);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v94)
  {
    __break(1u);
    goto LABEL_15;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E8DCF0);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v93)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E8DCF8);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v91)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E8DD00);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v89)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E90C38);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v87)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E8DD08);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v85)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E8DD10);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v83)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E8DD18);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v81)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E8DD20);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v79)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E8DD28);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v77)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E907B8);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v75)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  uint64_t v69 = v95;
  uint64_t v70 = v94;
  uint64_t v71 = a2;
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E8DD30);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v73)
  {
    uint64_t v5 = sub_1000DF0C4((uint64_t)v92, v93);
    uint64_t v68 = v58;
    __n128 v6 = __chkstk_darwin(v5);
    uint64_t v65 = (void *)((char *)v58 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(__n128))(v8 + 16))(v6);
    uint64_t v9 = sub_1000DF0C4((uint64_t)v90, v91);
    int64_t v67 = v58;
    __n128 v10 = __chkstk_darwin(v9);
    uint64_t v63 = (void *)((char *)v58 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(__n128))(v12 + 16))(v10);
    uint64_t v13 = sub_1000DF0C4((uint64_t)v88, v89);
    uint64_t v66 = v58;
    __n128 v14 = __chkstk_darwin(v13);
    uint64_t v61 = (void *)((char *)v58 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(__n128))(v16 + 16))(v14);
    uint64_t v17 = sub_1000DF0C4((uint64_t)v86, v87);
    uint64_t v64 = v58;
    __n128 v18 = __chkstk_darwin(v17);
    uint64_t v59 = (void *)((char *)v58 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(__n128))(v20 + 16))(v18);
    uint64_t v21 = sub_1000DF0C4((uint64_t)v84, v85);
    uint64_t v62 = v58;
    __n128 v22 = __chkstk_darwin(v21);
    id v24 = (void *)((char *)v58 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, __n128))(v25 + 16))(v24, v22);
    uint64_t v26 = sub_1000DF0C4((uint64_t)v82, v83);
    uint64_t v60 = v58;
    __n128 v27 = __chkstk_darwin(v26);
    uint64_t v29 = (void *)((char *)v58 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, __n128))(v30 + 16))(v29, v27);
    uint64_t v31 = sub_1000DF0C4((uint64_t)v80, v81);
    v58[4] = v58;
    __n128 v32 = __chkstk_darwin(v31);
    uint64_t v34 = (void *)((char *)v58 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, __n128))(v35 + 16))(v34, v32);
    uint64_t v36 = sub_1000DF0C4((uint64_t)v78, v79);
    v58[3] = v58;
    __n128 v37 = __chkstk_darwin(v36);
    id v39 = (uint64_t **)((char *)v58 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t **, __n128))(v40 + 16))(v39, v37);
    uint64_t v41 = sub_1000DF0C4((uint64_t)v76, v77);
    v58[2] = v58;
    __n128 v42 = __chkstk_darwin(v41);
    uint64_t v44 = (uint64_t **)((char *)v58 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t **, __n128))(v45 + 16))(v44, v42);
    uint64_t v46 = sub_1000DF0C4((uint64_t)v74, v75);
    v58[1] = v58;
    __n128 v47 = __chkstk_darwin(v46);
    uint64_t v49 = (void **)((char *)v58 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(void **, __n128))(v50 + 16))(v49, v47);
    uint64_t v51 = sub_1000DF0C4((uint64_t)v72, v73);
    __n128 v52 = __chkstk_darwin(v51);
    uint64_t v54 = (uint64_t ***)((char *)v58 - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t ***, __n128))(v55 + 16))(v54, v52);
    uint64_t v56 = sub_100057498(v70, v69, *v65, *v63, *v61, *v59, *v24, *v29, *v34, *v39, *v44, *v49, *v54);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v72);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v74);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v76);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v78);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v80);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v82);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v84);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v86);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v88);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v90);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v92);
    uint64_t result = type metadata accessor for WeatherDataPreprocessor();
    uint64_t v57 = v71;
    v71[3] = result;
    v57[4] = &off_100E2BE50;
    *uint64_t v57 = v56;
    return result;
  }
LABEL_25:
  __break(1u);
  return result;
}

void sub_100084F30()
{
  memcpy(v1, v0, sizeof(v1));
  sub_100084F84();
}

void sub_100084F84()
{
  sub_100127C98();
  uint64_t v3 = v0;
  uint64_t v28 = v4;
  uint64_t v5 = sub_10017DF08(&qword_100E82CA0);
  uint64_t v6 = v5 - 8;
  __chkstk_darwin(v5);
  sub_10011C760();
  uint64_t v7 = sub_10017DF08(&qword_100E82CA8);
  uint64_t v8 = v7 - 8;
  __chkstk_darwin(v7);
  sub_10016279C();
  uint64_t v9 = *(void *)(v0 + 48);
  char v10 = *(unsigned char *)(v0 + 56);
  sub_100195B7C(*(void *)(v3 + 48), *(unsigned char *)(v3 + 56));
  sub_100201DE4();
  uint64_t v12 = v11;
  sub_10018F6D8(v9, v10);
  uint64_t v14 = *(void *)(v0 + 16);
  uint64_t v13 = *(void *)(v0 + 24);
  uint64_t v15 = *(void *)(v0 + 8);
  static UnitPoint.top.getter();
  uint64_t v17 = v16;
  uint64_t v19 = v18;
  uint64_t KeyPath = swift_getKeyPath();
  sub_10017DF08(&qword_100E82CB0);
  sub_100162E4C();
  sub_100119108();
  v21();
  uint64_t v22 = v2 + *(int *)(v6 + 44);
  *(void *)uint64_t v22 = v14;
  *(void *)(v22 + 8) = v13;
  *(void *)(v22 + 16) = v15;
  *(_DWORD *)(v22 + 24) = 0;
  *(void *)(v22 + 32) = v17;
  *(void *)(v22 + 40) = v19;
  *(unsigned char *)(v22 + 48) = 1;
  *(void *)(v22 + 56) = KeyPath;
  *(unsigned char *)(v22 + 64) = 0;
  swift_bridgeObjectRetain();
  sub_10017DF08(&qword_100E64490);
  State.wrappedValue.getter();
  sub_1005EFB58(v2, v1, &qword_100E82CA0);
  uint64_t v23 = (void *)(v1 + *(int *)(v8 + 44));
  *uint64_t v23 = 0;
  v23[1] = v29;
  sub_10017DF4C(v2, &qword_100E82CA0);
  uint64_t v24 = swift_allocObject();
  *(void *)(v24 + 16) = v12;
  uint64_t v25 = swift_allocObject();
  memcpy((void *)(v25 + 16), (const void *)v3, 0x50uLL);
  uint64_t v26 = swift_getKeyPath();
  sub_1005EFB58(v1, v28, &qword_100E82CA8);
  uint64_t v27 = v28 + *(int *)(sub_10017DF08(&qword_100E82CB8) + 36);
  *(void *)uint64_t v27 = sub_100214200;
  *(void *)(v27 + 8) = v24;
  *(void *)(v27 + 16) = sub_100220EB8;
  *(void *)(v27 + 24) = v25;
  *(void *)(v27 + 32) = v26;
  *(unsigned char *)(v27 + 40) = 0;
  sub_100085210(v3);
  sub_10017DF4C(v1, &qword_100E82CA8);
  sub_1005EFC60();
}

uint64_t sub_100085210(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 48);
  char v3 = *(unsigned char *)(a1 + 56);
  swift_bridgeObjectRetain();
  sub_100195B7C(v2, v3);
  swift_retain();
  return a1;
}

void sub_100085264()
{
  sub_100162EA0();
  uint64_t v41 = v2;
  uint64_t v42 = v1;
  uint64_t v3 = sub_10017DF08(&qword_100E94AE8);
  uint64_t v4 = sub_100109308(v3);
  __chkstk_darwin(v4);
  sub_1001626E0();
  uint64_t v7 = v6 - v5;
  uint64_t v40 = v6 - v5;
  uint64_t v8 = type metadata accessor for MainViewModel(0);
  uint64_t v9 = v8 - 8;
  __chkstk_darwin(v8);
  sub_1001626E0();
  uint64_t v12 = v11 - v10;
  uint64_t v13 = type metadata accessor for ModalPresentationViewModifier(0);
  uint64_t v14 = (int *)(v13 - 8);
  __chkstk_darwin(v13);
  sub_10012B938();
  swift_retain();
  sub_1001BFFC8();
  swift_release();
  sub_10006DF38(v12 + *(int *)(v9 + 32), v7, &qword_100E94AE8);
  sub_1001BFF70(v12, (void (*)(void))type metadata accessor for MainViewModel);
  sub_1001BDCF0();
  uint64_t v16 = v15;
  uint64_t v18 = v17;
  char v39 = v19;
  sub_1001BDCF0();
  uint64_t v21 = v20;
  uint64_t v23 = v22;
  char v25 = v24;
  sub_1001BDCF0();
  uint64_t v27 = v26;
  uint64_t v29 = v28;
  LOBYTE(v7) = v30;
  sub_10024D364(v40, v0, &qword_100E94AE8);
  uint64_t v31 = v0 + v14[7];
  *(void *)uint64_t v31 = v16;
  *(void *)(v31 + 8) = v18;
  *(unsigned char *)(v31 + 16) = v39 & 1;
  uint64_t v32 = v0 + v14[8];
  *(void *)uint64_t v32 = v21;
  *(void *)(v32 + 8) = v23;
  *(unsigned char *)(v32 + 16) = v25 & 1;
  uint64_t v33 = v0 + v14[9];
  *(void *)uint64_t v33 = v27;
  *(void *)(v33 + 8) = v29;
  *(unsigned char *)(v33 + 16) = v7 & 1;
  uint64_t v34 = (uint64_t *)(v0 + v14[10]);
  type metadata accessor for ObservableResolver();
  sub_10013516C((uint64_t)&qword_100E70FD0);
  uint64_t *v34 = EnvironmentObject.init()();
  v34[1] = v35;
  uint64_t v36 = v0 + v14[11];
  *(void *)uint64_t v36 = swift_getKeyPath();
  *(unsigned char *)(v36 + 8) = 0;
  sub_10017DF08(&qword_100EAD600);
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v37 + 16))(v41, v42);
  uint64_t v38 = sub_10017DF08(&qword_100EAD608);
  sub_1001BE1F4(v0, v41 + *(int *)(v38 + 36), (void (*)(void))type metadata accessor for ModalPresentationViewModifier);
  sub_100162694();
}

uint64_t sub_1000855B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v48 = a4;
  uint64_t v54 = a5;
  uint64_t v7 = *(void *)(a3 - 8);
  __chkstk_darwin(a1);
  uint64_t v9 = (char *)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10018C6DC(&qword_100E7D128);
  uint64_t v10 = type metadata accessor for ModifiedContent();
  uint64_t v51 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v46 = (char *)&v46 - v11;
  sub_10018C6DC(&qword_100E7D130);
  uint64_t v12 = type metadata accessor for ModifiedContent();
  uint64_t v52 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  __n128 v47 = (char *)&v46 - v13;
  sub_10018C6DC(&qword_100E7D138);
  uint64_t v14 = type metadata accessor for ModifiedContent();
  uint64_t v53 = *(void *)(v14 - 8);
  uint64_t v15 = __chkstk_darwin(v14);
  uint64_t v49 = (char *)&v46 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v50 = (uint64_t)&v46 - v17;
  GeometryProxy.size.getter();
  uint64_t v19 = v18;
  uint64_t v21 = v20;
  GeometryProxy.safeAreaInsets.getter();
  uint64_t v23 = v22;
  uint64_t v25 = v24;
  uint64_t v27 = v26;
  uint64_t v29 = v28;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, a3);
  swift_getKeyPath();
  uint64_t v61 = v19;
  uint64_t v62 = v21;
  uint64_t v63 = v23;
  uint64_t v64 = v25;
  uint64_t v65 = v27;
  uint64_t v66 = v29;
  uint64_t v30 = v48;
  View.environment<A>(_:_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, a3);
  swift_getKeyPath();
  GeometryProxy.safeAreaInsets.getter();
  uint64_t v61 = v31;
  uint64_t v62 = v32;
  uint64_t v63 = v33;
  uint64_t v64 = v34;
  uint64_t v35 = sub_1001246C8(&qword_100E7D140, &qword_100E7D128);
  uint64_t v59 = v30;
  uint64_t v60 = v35;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v37 = v47;
  uint64_t v38 = v46;
  View.environment<A>(_:_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v51 + 8))(v38, v10);
  uint64_t v61 = v19;
  uint64_t v62 = v21;
  uint64_t v63 = v23;
  uint64_t v64 = v25;
  uint64_t v65 = v27;
  uint64_t v66 = v29;
  uint64_t v39 = sub_1001246C8(&qword_100E7D148, &qword_100E7D130);
  uint64_t v57 = WitnessTable;
  uint64_t v58 = v39;
  uint64_t v40 = swift_getWitnessTable();
  sub_100085B08();
  uint64_t v41 = (uint64_t)v49;
  View.animation<A>(_:value:)();
  (*(void (**)(char *, uint64_t))(v52 + 8))(v37, v12);
  uint64_t v42 = sub_1001246C8(&qword_100E7D150, &qword_100E7D138);
  uint64_t v55 = v40;
  uint64_t v56 = v42;
  swift_getWitnessTable();
  uint64_t v43 = v50;
  sub_100121584(v41, v14, v50);
  uint64_t v44 = *(void (**)(uint64_t, uint64_t))(v53 + 8);
  v44(v41, v14);
  sub_100121584(v43, v14, v54);
  return ((uint64_t (*)(uint64_t, uint64_t))v44)(v43, v14);
}

unint64_t sub_100085B08()
{
  unint64_t result = qword_100E73900;
  if (!qword_100E73900)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E73900);
  }
  return result;
}

uint64_t LocationModel.locationCompositionState.getter@<X0>(_OWORD *a1@<X8>)
{
  v189 = a1;
  uint64_t v2 = type metadata accessor for SavedLocation();
  uint64_t v3 = sub_100109308(v2);
  __chkstk_darwin(v3);
  sub_100109314();
  v179 = (char *)v4;
  uint64_t v5 = sub_10017DF08(&qword_100E639E8);
  uint64_t v6 = sub_100109308(v5);
  __chkstk_darwin(v6);
  sub_100162EF8();
  uint64_t v176 = v7;
  sub_1001626D4();
  __chkstk_darwin(v8);
  sub_100109770();
  uint64_t v172 = v9;
  sub_1001626D4();
  __chkstk_darwin(v10);
  sub_100109770();
  uint64_t v175 = v11;
  sub_1001626D4();
  __chkstk_darwin(v12);
  v183 = (char *)v169 - v13;
  sub_1001626D4();
  __chkstk_darwin(v14);
  sub_100128F8C();
  uint64_t v177 = v15;
  uint64_t v190 = type metadata accessor for LocationOfInterest();
  sub_100179C0C();
  uint64_t v188 = v16;
  __chkstk_darwin(v17);
  sub_100162EF8();
  uint64_t v174 = v18;
  sub_1001626D4();
  __chkstk_darwin(v19);
  sub_100109770();
  v169[1] = v20;
  sub_1001626D4();
  __chkstk_darwin(v21);
  sub_100109770();
  uint64_t v181 = v22;
  sub_1001626D4();
  __chkstk_darwin(v23);
  sub_100109770();
  uint64_t v182 = v24;
  sub_1001626D4();
  __chkstk_darwin(v25);
  sub_100128F8C();
  v171 = v26;
  sub_100129064();
  uint64_t v187 = type metadata accessor for Location();
  sub_100179C0C();
  uint64_t v192 = v27;
  __chkstk_darwin(v28);
  sub_100185A80(v29, v169[0]);
  uint64_t v30 = sub_10017DF08(&qword_100E63508);
  uint64_t v31 = sub_100109308(v30);
  __chkstk_darwin(v31);
  sub_100162EF8();
  uint64_t v173 = v32;
  sub_1001626D4();
  __chkstk_darwin(v33);
  uint64_t v170 = (uint64_t)v169 - v34;
  sub_1001626D4();
  __chkstk_darwin(v35);
  sub_100109770();
  v185 = (char *)v36;
  sub_1001626D4();
  __chkstk_darwin(v37);
  sub_100109770();
  v184 = (char *)v38;
  sub_1001626D4();
  __chkstk_darwin(v39);
  sub_100109770();
  v180 = (char *)v40;
  sub_1001626D4();
  __chkstk_darwin(v41);
  uint64_t v178 = (uint64_t)v169 - v42;
  sub_1001626D4();
  __chkstk_darwin(v43);
  uint64_t v45 = (char *)v169 - v44;
  __chkstk_darwin(v46);
  uint64_t v48 = (char *)v169 - v47;
  __chkstk_darwin(v49);
  uint64_t v51 = (char *)v169 - v50;
  __chkstk_darwin(v52);
  uint64_t v54 = (char *)v169 - v53;
  __chkstk_darwin(v55);
  uint64_t v57 = (char *)v169 - v56;
  __chkstk_darwin(v58);
  uint64_t v60 = (char *)v169 - v59;
  uint64_t v61 = type metadata accessor for CurrentLocation();
  uint64_t v62 = sub_100109308(v61);
  __chkstk_darwin(v62);
  sub_100163770();
  uint64_t v63 = type metadata accessor for LocationModel();
  sub_100179C0C();
  uint64_t v65 = v64;
  __chkstk_darwin(v66);
  uint64_t v68 = (char *)v169 - ((v67 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100162808();
  v69();
  int v70 = (*(uint64_t (**)(char *, uint64_t))(v65 + 88))(v68, v63);
  if (v70 != enum case for LocationModel.current(_:))
  {
    uint64_t v78 = (uint64_t)v184;
    uint64_t v79 = (uint64_t)v185;
    uint64_t v80 = v190;
    if (v70 != enum case for LocationModel.saved(_:))
    {
      uint64_t v94 = sub_10017DF08(&qword_100E85F90);
      uint64_t v95 = v189;
      uint64_t v96 = (uint64_t)v189 + *(int *)(v94 + 48);
      _OWORD *v189 = 0u;
      v95[1] = 0u;
      _s7Weather24LocationCompositionStateOwst_0(v96, 1, 1, v80);
      type metadata accessor for LocationCompositionState();
      swift_storeEnumTagMultiPayload();
      return (*(uint64_t (**)(char *, uint64_t))(v65 + 8))(v68, v63);
    }
    uint64_t v81 = sub_100185C40();
    v82(v81);
    uint64_t v83 = (uint64_t)&v68[*(int *)(sub_10017DF08(&qword_100E63870) + 48)];
    uint64_t v84 = (uint64_t)v179;
    sub_10017DE2C((uint64_t)v68, (uint64_t)v179, (void (*)(void))&type metadata accessor for SavedLocation);
    uint64_t v85 = (uint64_t)v180;
    sub_10018CCD4(v83, (uint64_t)v180);
    sub_10006DF38(v85, v78, &qword_100E63508);
    uint64_t v86 = sub_10011C004();
    uint64_t v87 = v80;
    sub_10012B520(v86, v88, v80);
    if (v93)
    {
      sub_100178110(v78, &qword_100E63508);
      uint64_t v89 = v187;
    }
    else
    {
      uint64_t v98 = v186;
      LocationOfInterest.location.getter();
      uint64_t v68 = *(char **)(v188 + 8);
      ((void (*)(uint64_t, uint64_t))v68)(v78, v80);
      v191 = (char *)Location.name.getter();
      uint64_t v83 = v99;
      uint64_t v100 = v85;
      uint64_t v101 = v80;
      int v102 = *(void (**)(char *, uint64_t))(v192 + 8);
      uint64_t v103 = v187;
      v102(v98, v187);
      sub_10006DF38(v100, v79, &qword_100E63508);
      sub_10012B520(v79, 1, v80);
      if (v104)
      {
        swift_bridgeObjectRelease();
        sub_100178110(v79, &qword_100E63508);
        uint64_t v87 = v80;
        uint64_t v89 = v103;
      }
      else
      {
        LocationOfInterest.location.getter();
        ((void (*)(uint64_t, uint64_t))v68)(v79, v80);
        uint64_t v68 = (char *)Location.sanitizedSecondaryName.getter();
        Swift::String v108 = v107;
        v102(v98, v103);
        uint64_t v89 = v103;
        if (v108)
        {
          uint64_t v109 = (uint64_t)v180;
          uint64_t v110 = v170;
          sub_10006DF38((uint64_t)v180, v170, &qword_100E63508);
          sub_10012B520(v110, 1, v101);
          uint64_t v87 = v101;
          uint64_t v84 = (uint64_t)v179;
          uint64_t v111 = v83;
          if (!v93)
          {
            sub_10018CFC4((uint64_t)v179, (void (*)(void))&type metadata accessor for SavedLocation);
            v164 = v68;
            v165 = *(void (**)(void))(v188 + 32);
            sub_10017E944();
            v165();
            uint64_t v166 = sub_10017DF08(&qword_100E85F90);
            v167 = (char **)v189;
            uint64_t v168 = (uint64_t)v189 + *(int *)(v166 + 48);
            sub_100178110(v109, &qword_100E63508);
            *v167 = v164;
            v167[1] = v108;
            v167[2] = v191;
            v167[3] = (char *)v111;
            sub_10017E944();
            v165();
            sub_10017D4CC(v168, 0);
            return swift_storeEnumTagMultiPayload();
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_100178110(v110, &qword_100E63508);
          uint64_t v112 = v176;
          uint64_t v85 = v109;
LABEL_54:
          uint64_t v144 = v175;
          SavedLocation.location.getter();
          sub_10012B520(v144, 1, v89);
          if (!v93)
          {
            v191 = (char *)Location.name.getter();
            uint64_t v83 = v145;
            uint64_t v68 = *(char **)(v192 + 8);
            uint64_t v146 = sub_10016393C();
            ((void (*)(uint64_t))v68)(v146);
            uint64_t v144 = v172;
            SavedLocation.location.getter();
            sub_10012B520(v144, 1, v89);
            if (!v93)
            {
              uint64_t v190 = v83;
              uint64_t v83 = (uint64_t)v191;
              uint64_t v156 = Location.sanitizedSecondaryName.getter();
              uint64_t v158 = v157;
              uint64_t v159 = sub_10016393C();
              ((void (*)(uint64_t))v68)(v159);
              if (v158)
              {
                sub_10018CFC4(v84, (void (*)(void))&type metadata accessor for SavedLocation);
                uint64_t v160 = sub_10017DF08(&qword_100E85F90);
                long long v161 = (uint64_t *)v189;
                uint64_t v162 = (char *)v189 + *(int *)(v160 + 48);
                sub_100178110((uint64_t)v180, &qword_100E63508);
                *long long v161 = v156;
                v161[1] = v158;
                uint64_t v163 = v190;
                v161[2] = v83;
                v161[3] = v163;
                uint64_t v151 = (uint64_t)v162;
                goto LABEL_72;
              }
              swift_bridgeObjectRelease();
              uint64_t v85 = (uint64_t)v180;
LABEL_59:
              SavedLocation.location.getter();
              sub_10012B520(v112, 1, v89);
              if (v93)
              {
                sub_100178110(v112, &qword_100E639E8);
              }
              else
              {
                Location.sanitizedSecondaryName.getter();
                sub_10018AA68();
                sub_100162F0C();
                v147();
                if (v83)
                {
                  sub_10012B520(v85, 1, v87);
                  if (v93)
                  {
                    sub_10017DF08(&qword_100E85F90);
                    sub_100189FF8();
                    uint64_t v148 = SavedLocation.name.getter();
                    uint64_t v150 = v149;
                    sub_10018CFC4(v84, (void (*)(void))&type metadata accessor for SavedLocation);
                    sub_100178110(v89, &qword_100E63508);
                    *(void *)uint64_t v68 = v144;
                    *((void *)v68 + 1) = v83;
                    *((void *)v68 + 2) = v148;
                    *((void *)v68 + 3) = v150;
                    uint64_t v151 = v85;
LABEL_72:
                    sub_10017D4CC(v151, 1);
                    return swift_storeEnumTagMultiPayload();
                  }
                  sub_10018CFC4(v84, (void (*)(void))&type metadata accessor for SavedLocation);
                  swift_bridgeObjectRelease();
LABEL_67:
                  uint64_t v130 = v173;
                  sub_10018CCD4(v85, v173);
                  sub_10012B520(v130, 1, v87);
                  if (!v93)
                  {
LABEL_68:
                    uint64_t v152 = *(void (**)(void))(v188 + 32);
                    sub_10017E944();
                    v152();
                    uint64_t v153 = sub_10017DF08(&qword_100E85F90);
                    uint64_t v154 = v189;
                    uint64_t v155 = (uint64_t)v189 + *(int *)(v153 + 48);
                    _OWORD *v189 = 0u;
                    v154[1] = 0u;
                    sub_10017E944();
                    v152();
                    sub_10017D4CC(v155, 0);
                    return swift_storeEnumTagMultiPayload();
                  }
LABEL_49:
                  sub_100178110(v130, &qword_100E63508);
                  uint64_t v131 = sub_10017DF08(&qword_100E85F90);
                  uint64_t v132 = v189;
                  uint64_t v133 = (uint64_t)v189 + *(int *)(v131 + 48);
                  _OWORD *v189 = 0u;
                  v132[1] = 0u;
                  sub_10017D4CC(v133, 1);
                  return swift_storeEnumTagMultiPayload();
                }
              }
              sub_10018CFC4(v84, (void (*)(void))&type metadata accessor for SavedLocation);
              goto LABEL_67;
            }
            swift_bridgeObjectRelease();
          }
          sub_100178110(v144, &qword_100E639E8);
          goto LABEL_59;
        }
        swift_bridgeObjectRelease();
        uint64_t v87 = v80;
      }
      uint64_t v84 = (uint64_t)v179;
      uint64_t v85 = (uint64_t)v180;
    }
    uint64_t v112 = v176;
    goto LABEL_54;
  }
  v184 = v51;
  v185 = v48;
  v180 = v45;
  uint64_t v71 = sub_100185C40();
  v72(v71);
  uint64_t v73 = (uint64_t)&v68[*(int *)(sub_10017DF08(&qword_100E63878) + 48)];
  v191 = (char *)v1;
  sub_10017DE2C((uint64_t)v68, v1, (void (*)(void))&type metadata accessor for CurrentLocation);
  sub_10018CCD4(v73, (uint64_t)v60);
  sub_10006DF38((uint64_t)v60, (uint64_t)v57, &qword_100E63508);
  uint64_t v74 = sub_10011C004();
  uint64_t v75 = v190;
  sub_10012B520(v74, v76, v190);
  if (v93)
  {
    sub_100178110((uint64_t)v57, &qword_100E63508);
    uint64_t v92 = v187;
LABEL_5:
    uint64_t v77 = (uint64_t)v183;
    goto LABEL_27;
  }
  uint64_t v51 = v186;
  LocationOfInterest.location.getter();
  uint64_t v73 = v188 + 8;
  uint64_t v90 = *(void (**)(char *, uint64_t))(v188 + 8);
  v90(v57, v75);
  uint64_t v175 = Location.name.getter();
  uint64_t v176 = v91;
  uint64_t v68 = *(char **)(v192 + 8);
  uint64_t v92 = v187;
  ((void (*)(char *, uint64_t))v68)(v51, v187);
  v179 = v60;
  sub_10006DF38((uint64_t)v60, (uint64_t)v54, &qword_100E63508);
  sub_10012B520((uint64_t)v54, 1, v75);
  if (v93)
  {
    swift_bridgeObjectRelease();
    sub_100178110((uint64_t)v54, &qword_100E63508);
LABEL_26:
    uint64_t v77 = (uint64_t)v183;
    uint64_t v60 = v179;
LABEL_27:
    uint64_t v113 = v182;
    uint64_t v114 = (uint64_t)v185;
    sub_10006DF38((uint64_t)v60, (uint64_t)v185, &qword_100E63508);
    uint64_t v115 = sub_10011C004();
    sub_10012B520(v115, v116, v75);
    if (v93)
    {
      uint64_t v117 = &qword_100E63508;
      uint64_t v118 = v114;
    }
    else
    {
      LocationOfInterest.location.getter();
      (*(void (**)(uint64_t, uint64_t))(v188 + 8))(v114, v75);
      uint64_t v190 = Location.name.getter();
      uint64_t v51 = v119;
      uint64_t v68 = *(char **)(v192 + 8);
      uint64_t v120 = sub_10016393C();
      ((void (*)(uint64_t))v68)(v120);
      uint64_t v73 = v177;
      CurrentLocation.location.getter();
      sub_10012B520(v73, 1, v92);
      if (v121)
      {
        swift_bridgeObjectRelease();
        uint64_t v117 = &qword_100E639E8;
      }
      else
      {
        uint64_t v187 = Location.sanitizedSecondaryName.getter();
        uint64_t v123 = v122;
        uint64_t v124 = sub_10016393C();
        ((void (*)(uint64_t))v68)(v124);
        if (!v123)
        {
          swift_bridgeObjectRelease();
LABEL_39:
          uint64_t v125 = (uint64_t)v191;
          CurrentLocation.location.getter();
          sub_10012B520(v77, 1, v92);
          if (v93)
          {
            sub_100178110(v77, &qword_100E639E8);
          }
          else
          {
            Location.sanitizedSecondaryName.getter();
            sub_10018AA68();
            sub_100162F0C();
            v126();
            if (v51)
            {
              sub_10012B520((uint64_t)v60, 1, v75);
              if (v93)
              {
                sub_10017DF08(&qword_100E85F90);
                sub_100189FF8();
                uint64_t v127 = CurrentLocation.name.getter();
                uint64_t v129 = v128;
                sub_10018CFC4(v125, (void (*)(void))&type metadata accessor for CurrentLocation);
                sub_100178110(v92, &qword_100E63508);
                *(void *)uint64_t v68 = v73;
                *((void *)v68 + 1) = v51;
                *((void *)v68 + 2) = v127;
                *((void *)v68 + 3) = v129;
                sub_10017D4CC((uint64_t)v60, 1);
                return swift_storeEnumTagMultiPayload();
              }
              sub_10018CFC4(v125, (void (*)(void))&type metadata accessor for CurrentLocation);
              swift_bridgeObjectRelease();
LABEL_47:
              uint64_t v130 = v178;
              sub_10018CCD4((uint64_t)v60, v178);
              sub_10012B520(v130, 1, v75);
              if (!v93) {
                goto LABEL_68;
              }
              goto LABEL_49;
            }
          }
          sub_10018CFC4(v125, (void (*)(void))&type metadata accessor for CurrentLocation);
          goto LABEL_47;
        }
        uint64_t v73 = (uint64_t)v180;
        sub_10006DF38((uint64_t)v60, (uint64_t)v180, &qword_100E63508);
        sub_10012B520(v73, 1, v75);
        if (!v93)
        {
          sub_10018CFC4((uint64_t)v191, (void (*)(void))&type metadata accessor for CurrentLocation);
          uint64_t v140 = *(void (**)(uint64_t, uint64_t, uint64_t))(v188 + 32);
          v140(v113, v73, v75);
          uint64_t v141 = sub_10017DF08(&qword_100E85F90);
          uint64_t v142 = (uint64_t *)v189;
          uint64_t v143 = (uint64_t)v189 + *(int *)(v141 + 48);
          sub_100178110((uint64_t)v60, &qword_100E63508);
          *uint64_t v142 = v187;
          v142[1] = v123;
          v142[2] = v190;
          v142[3] = (uint64_t)v51;
          v140(v143, v113, v75);
          sub_10017D4CC(v143, 0);
          return swift_storeEnumTagMultiPayload();
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v117 = &qword_100E63508;
      }
      uint64_t v118 = v73;
    }
    sub_100178110(v118, v117);
    goto LABEL_39;
  }
  LocationOfInterest.location.getter();
  v90(v54, v75);
  uint64_t v73 = Location.sanitizedSecondaryName.getter();
  uint64_t v106 = v105;
  ((void (*)(char *, uint64_t))v68)(v51, v92);
  if (!v106)
  {
    swift_bridgeObjectRelease();
    goto LABEL_26;
  }
  uint64_t v60 = v179;
  uint64_t v51 = v184;
  sub_10006DF38((uint64_t)v179, (uint64_t)v184, &qword_100E63508);
  sub_10012B520((uint64_t)v51, 1, v75);
  if (v93)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_100178110((uint64_t)v51, &qword_100E63508);
    goto LABEL_5;
  }
  sub_10018CFC4((uint64_t)v191, (void (*)(void))&type metadata accessor for CurrentLocation);
  char v134 = *(void (**)(uint64_t, char *, uint64_t))(v188 + 32);
  uint64_t v135 = v171;
  v134((uint64_t)v171, v51, v75);
  uint64_t v136 = sub_10017DF08(&qword_100E85F90);
  uint64_t v137 = (uint64_t *)v189;
  uint64_t v138 = (uint64_t)v189 + *(int *)(v136 + 48);
  sub_100178110((uint64_t)v60, &qword_100E63508);
  uint64_t *v137 = v73;
  v137[1] = v106;
  uint64_t v139 = v176;
  v137[2] = v175;
  v137[3] = v139;
  v134(v138, v135, v75);
  sub_10017D4CC(v138, 0);
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_100086C50(uint64_t a1)
{
  uint64_t v2 = (uint64_t *)(a1 + 16);
  swift_beginAccess();
  unint64_t v3 = *(void *)(a1 + 16);
  if (v3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = _CocoaArrayWrapper.endIndex.getter();
    uint64_t v4 = result;
    if (!result) {
      goto LABEL_12;
    }
  }
  else
  {
    uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (!v4) {
      goto LABEL_12;
    }
  }
  if (v4 < 1)
  {
    __break(1u);
    goto LABEL_29;
  }
  for (uint64_t i = 0; i != v4; ++i)
  {
    if ((v3 & 0xC000000000000001) != 0)
    {
      uint64_t v7 = specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else
    {
      uint64_t v7 = *(void *)(v3 + 8 * i + 32);
      swift_retain();
    }
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    swift_unknownObjectRelease();
    if (Strong && swift_unknownObjectWeakLoadStrong())
    {
      uint64_t v9 = *(void *)(v7 + 24);
      uint64_t ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(ObjectType, v9);
      swift_unknownObjectRelease();
    }
    swift_release();
  }
LABEL_12:
  swift_bridgeObjectRelease();
  uint64_t v11 = *v2;
  if (!((unint64_t)*v2 >> 62))
  {
    uint64_t v12 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v12) {
      goto LABEL_14;
    }
LABEL_27:
    swift_bridgeObjectRelease();
    *uint64_t v2 = (uint64_t)_swiftEmptyArrayStorage;
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  uint64_t result = _CocoaArrayWrapper.endIndex.getter();
  uint64_t v12 = result;
  if (!result) {
    goto LABEL_27;
  }
LABEL_14:
  if (v12 >= 1)
  {
    for (uint64_t j = 0; j != v12; ++j)
    {
      if ((v11 & 0xC000000000000001) != 0) {
        specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        swift_retain();
      }
      uint64_t v14 = swift_unknownObjectWeakLoadStrong();
      swift_unknownObjectRelease();
      if (v14)
      {
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
      }
      else
      {
        swift_release();
      }
    }
    goto LABEL_27;
  }
LABEL_29:
  __break(1u);
  return result;
}

Swift::Void __swiftcall WeatherConditionBackgroundManager.windowDidBecomeFocused()()
{
  if (WeatherConditionBackgroundManager.isVfxSceneLoaded.getter())
  {
    if (qword_100E627D0 != -1) {
      swift_once();
    }
    uint64_t v0 = type metadata accessor for Logger();
    sub_1002102B0(v0, (uint64_t)qword_100F51E88);
    uint64_t v1 = Logger.logObject.getter();
    os_log_type_t v2 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v1, v2))
    {
      unint64_t v3 = (uint8_t *)sub_100163DC4();
      *(_WORD *)unint64_t v3 = 0;
      _os_log_impl((void *)&_mh_execute_header, v1, v2, "Window did become focused. VFXScene is loaded and will be played.", v3, 2u);
      sub_100162EE0();
    }

    WeatherConditionBackgroundManager.play(_:)(1);
  }
  else
  {
    if (qword_100E627D0 != -1) {
      swift_once();
    }
    uint64_t v4 = type metadata accessor for Logger();
    sub_1002102B0(v4, (uint64_t)qword_100F51E88);
    oslog = Logger.logObject.getter();
    os_log_type_t v5 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(oslog, v5))
    {
      *(_WORD *)sub_100163DC4() = 0;
      sub_100187BE4((void *)&_mh_execute_header, v6, v7, "Window did become focused. VFXScene is not loaded yet.", v8, v9, v10, v11, v12, oslog);
      sub_100162EE0();
    }
  }
}

uint64_t sub_10008704C(void (*a1)(uint64_t), uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t), uint64_t a6)
{
  uint64_t v57 = a6;
  uint64_t v58 = a5;
  uint64_t v61 = a4;
  uint64_t v62 = a2;
  uint64_t v63 = a1;
  uint64_t v59 = sub_10017DF08(&qword_100E64A48);
  __chkstk_darwin(v59);
  uint64_t v60 = (char *)&v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10017DF08(&qword_100E64AA0);
  __chkstk_darwin(v8 - 8);
  uint64_t v56 = (char *)&v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = type metadata accessor for LocationViewerViewModel();
  uint64_t v10 = __chkstk_darwin(v55);
  uint64_t v53 = (char *)&v52 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v54 = (char *)&v52 - v12;
  uint64_t v13 = sub_10017DF08(&qword_100E64AA8);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v52 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_10017DF08(&qword_100E64AB0);
  uint64_t v17 = __chkstk_darwin(v16 - 8);
  uint64_t v19 = (char *)&v52 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __chkstk_darwin(v17);
  uint64_t v22 = (char *)&v52 - v21;
  uint64_t v23 = __chkstk_darwin(v20);
  uint64_t v25 = (char *)&v52 - v24;
  __chkstk_darwin(v23);
  uint64_t v27 = (char *)&v52 - v26;
  uint64_t v28 = type metadata accessor for LocationViewerInput();
  uint64_t v29 = __chkstk_darwin(v28);
  uint64_t v31 = (char *)&v52 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v29);
  uint64_t v33 = (void (*)(uint64_t))((char *)&v52 - v32);
  v63(a3 + 64);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v27, 1, v28) == 1) {
    return sub_1001781AC((uint64_t)v27, &qword_100E64AB0);
  }
  sub_1001522B4();
  uint64_t v63 = v33;
  sub_100136460();
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v25, 0, 1, v28);
  uint64_t v35 = v61;
  sub_1000213E0((uint64_t)v22);
  uint64_t v36 = (uint64_t)&v15[*(int *)(v13 + 48)];
  sub_10006DF38((uint64_t)v25, (uint64_t)v15, &qword_100E64AB0);
  sub_10006DF38((uint64_t)v22, v36, &qword_100E64AB0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v15, 1, v28) != 1)
  {
    sub_10006DF38((uint64_t)v15, (uint64_t)v19, &qword_100E64AB0);
    if (_s7Weather24LocationCompositionStateOwet_0(v36, 1, v28) != 1)
    {
      sub_1001522B4();
      BOOL v45 = sub_10002C044((uint64_t)v19, (uint64_t)v31);
      sub_1001524C8((uint64_t)v31, (void (*)(void))type metadata accessor for LocationViewerInput);
      sub_1001781AC((uint64_t)v22, &qword_100E64AB0);
      sub_1001781AC((uint64_t)v25, &qword_100E64AB0);
      sub_1001524C8((uint64_t)v19, (void (*)(void))type metadata accessor for LocationViewerInput);
      sub_1001781AC((uint64_t)v15, &qword_100E64AB0);
      uint64_t v38 = (uint64_t)v63;
      if (v45) {
        return sub_1001524C8(v38, (void (*)(void))type metadata accessor for LocationViewerInput);
      }
LABEL_9:
      uint64_t v39 = (uint64_t)v56;
      v58(v38);
      if (_s7Weather24LocationCompositionStateOwet_0(v39, 1, v55) == 1)
      {
        sub_1001781AC(v39, &qword_100E64AA0);
      }
      else
      {
        uint64_t v40 = (uint64_t)v54;
        sub_1001522B4();
        uint64_t v41 = (uint64_t)v53;
        sub_1001520F8();
        char v42 = sub_1000ABE8C(v40, v41);
        sub_1001524C8(v41, (void (*)(void))type metadata accessor for LocationViewerViewModel);
        if ((v42 & 1) == 0)
        {
          if (qword_100E62828 != -1) {
            swift_once();
          }
          uint64_t v46 = type metadata accessor for Logger();
          sub_1002102B0(v46, (uint64_t)qword_100F51F80);
          uint64_t v47 = Logger.logObject.getter();
          os_log_type_t v48 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v47, v48))
          {
            uint64_t v49 = swift_slowAlloc();
            v65[0] = swift_slowAlloc();
            *(_DWORD *)uint64_t v49 = 136446466;
            uint64_t v64 = sub_10016414C(0xD000000000000013, 0x8000000100C970D0, v65);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            *(_WORD *)(v49 + 12) = 2082;
            uint64_t v64 = sub_10016414C(0xD000000000000017, 0x8000000100C970F0, v65);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            _os_log_impl((void *)&_mh_execute_header, v47, v48, "Selector observed model difference for %{public}s, %{public}s; views will update",
              (uint8_t *)v49,
              0x16u);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();
          }

          sub_10017DF08(&qword_100E64A50);
          uint64_t v50 = (uint64_t)v60;
          sub_100136460();
          sub_100136460();
          swift_storeEnumTagMultiPayload();
          uint64_t v51 = v35 + *(void *)(*(void *)v35 + 120);
          swift_beginAccess();
          sub_1001DF004(v50, v51, &qword_100E64A48);
          swift_endAccess();
          sub_10017DF08(&qword_100E64AB8);
          sub_1001246C8(&qword_100E64AC0, &qword_100E64AB8);
          ObservableObject<>.objectWillChange.getter();
          ObservableObjectPublisher.send()();
          swift_release();
          sub_1001524C8(v40, (void (*)(void))type metadata accessor for LocationViewerViewModel);
          return sub_1001524C8(v38, (void (*)(void))type metadata accessor for LocationViewerInput);
        }
        sub_1001524C8(v40, (void (*)(void))type metadata accessor for LocationViewerViewModel);
      }
      sub_10017DF08(&qword_100E64A50);
      uint64_t v43 = (uint64_t)v60;
      sub_100136460();
      sub_1001520F8();
      sub_1001524C8(v38, (void (*)(void))type metadata accessor for LocationViewerInput);
      swift_storeEnumTagMultiPayload();
      uint64_t v44 = v35 + *(void *)(*(void *)v35 + 120);
      swift_beginAccess();
      sub_1001DF004(v43, v44, &qword_100E64A48);
      return swift_endAccess();
    }
    sub_1001781AC((uint64_t)v22, &qword_100E64AB0);
    sub_1001781AC((uint64_t)v25, &qword_100E64AB0);
    sub_1001524C8((uint64_t)v19, (void (*)(void))type metadata accessor for LocationViewerInput);
    uint64_t v38 = (uint64_t)v63;
LABEL_8:
    sub_1001781AC((uint64_t)v15, &qword_100E64AA8);
    goto LABEL_9;
  }
  sub_1001781AC((uint64_t)v22, &qword_100E64AB0);
  sub_1001781AC((uint64_t)v25, &qword_100E64AB0);
  int v37 = _s7Weather24LocationCompositionStateOwet_0(v36, 1, v28);
  uint64_t v38 = (uint64_t)v63;
  if (v37 != 1) {
    goto LABEL_8;
  }
  sub_1001781AC((uint64_t)v15, &qword_100E64AB0);
  return sub_1001524C8(v38, (void (*)(void))type metadata accessor for LocationViewerInput);
}

uint64_t sub_1000879A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100244244);
}

void *initializeBufferWithCopyOfBuffer for Scroll(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  return a1;
}

uint64_t sub_1000879E4()
{
  uint64_t v0 = type metadata accessor for Location();
  sub_1001627C0(v0);
  return sub_1001AAE54();
}

uint64_t sub_100087A1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v177 = a2;
  uint64_t v180 = a1;
  uint64_t v178 = a3;
  uint64_t v173 = *v3;
  uint64_t v176 = type metadata accessor for Location();
  sub_100179C0C();
  uint64_t v5 = v4;
  __chkstk_darwin(v6);
  sub_10016278C();
  uint64_t v9 = v7 - v8;
  __chkstk_darwin(v10);
  sub_100109338((uint64_t)&v150 - v11);
  uint64_t v154 = sub_10017DF08(&qword_100E6B7C8);
  sub_100179C0C();
  uint64_t v153 = v12;
  __chkstk_darwin(v13);
  sub_100109314();
  sub_100109328(v14);
  uint64_t v170 = type metadata accessor for NSUnitLength.WeatherFormatUsage();
  sub_100179C0C();
  uint64_t v169 = v15;
  __chkstk_darwin(v16);
  sub_100109314();
  sub_100109328(v17);
  uint64_t v165 = type metadata accessor for Date();
  sub_100179C0C();
  uint64_t v164 = v18;
  __chkstk_darwin(v19);
  sub_100109314();
  sub_100109328(v20);
  uint64_t v163 = type metadata accessor for Deviation();
  sub_100179C0C();
  uint64_t v162 = v21;
  __chkstk_darwin(v22);
  sub_100109314();
  sub_100109338(v23);
  uint64_t v161 = sub_10017DF08(&qword_100E6B648);
  sub_100179C0C();
  uint64_t v160 = v24;
  __chkstk_darwin(v25);
  sub_10016278C();
  uint64_t v158 = v26 - v27;
  __chkstk_darwin(v28);
  sub_100109338((uint64_t)&v150 - v29);
  uint64_t v172 = sub_10017DF08(&qword_100E7E728);
  sub_100179C0C();
  uint64_t v156 = v30;
  __chkstk_darwin(v31);
  sub_100109314();
  sub_100109338(v32);
  uint64_t v171 = sub_10017DF08(&qword_100E7E730);
  sub_100179C0C();
  uint64_t v167 = v33;
  __chkstk_darwin(v34);
  sub_100109314();
  sub_100109338(v35);
  uint64_t v36 = sub_10017DF08(&qword_100E7E738);
  __chkstk_darwin(v36 - 8);
  sub_1001626E0();
  uint64_t v39 = v38 - v37;
  uint64_t v40 = type metadata accessor for HistoricalComparison();
  sub_100179C0C();
  uint64_t v42 = v41;
  __chkstk_darwin(v43);
  sub_10016278C();
  uint64_t v46 = v44 - v45;
  __chkstk_darwin(v47);
  sub_100109338((uint64_t)&v150 - v48);
  uint64_t v49 = sub_10017DF08(&qword_100E6B8B8);
  __chkstk_darwin(v49 - 8);
  sub_1001626E0();
  uint64_t v52 = v51 - v50;
  uint64_t v53 = type metadata accessor for HistoricalComparisons();
  sub_100179C0C();
  uint64_t v55 = v54;
  __chkstk_darwin(v56);
  sub_1001626E0();
  uint64_t v59 = v58 - v57;
  sub_1002318AC(v177, v52);
  if (_s7Weather24LocationCompositionStateOwet_0(v52, 1, v53) == 1)
  {
    uint64_t v60 = &qword_100E6B8B8;
    uint64_t v61 = v52;
  }
  else
  {
    sub_1001627D4();
    v62();
    uint64_t v177 = v40;
    sub_10043F7C8();
    uint64_t v63 = v53;
    if (_s7Weather24LocationCompositionStateOwet_0(v39, 1, v177) != 1)
    {
      uint64_t v151 = v55;
      uint64_t v79 = v175;
      sub_1001627D4();
      v80();
      uint64_t v82 = v59;
      if (HistoricalComparisons.hasValidData.getter())
      {
        if (qword_100E62A18 != -1) {
          swift_once();
        }
        sub_100230FE4(&qword_100E7E740, v81, (void (*)(uint64_t))type metadata accessor for AveragesComponentViewModelFactory);
        uint64_t v83 = v179;
        Configurable.setting<A>(_:)();
        if (v181 == 1)
        {
          uint64_t v176 = v42;
          uint64_t v84 = v156;
          uint64_t v85 = v155;
          (*(void (**)(uint64_t, void, uint64_t))(v156 + 104))(v155, enum case for TrendBaseline.Kind.mean<A>(_:), v172);
          uint64_t v86 = self;
          uint64_t v154 = v82;
          uint64_t v173 = v63;
          uint64_t v87 = v86;
          id v88 = [v86 inches];
          uint64_t v89 = sub_1001ABC4C(0, (unint64_t *)&qword_100E6B678);
          uint64_t v90 = v157;
          Measurement.init(value:unit:)();
          id v91 = [v87 inches];
          uint64_t v92 = v158;
          Measurement.init(value:unit:)();
          uint64_t v93 = v162;
          uint64_t v94 = v159;
          sub_100185380();
          v95();
          static Date.now.getter();
          uint64_t v96 = v166;
          static Trend<>.mock(baselineKind:baselineValue:currentValue:deviation:baselineStartDate:)();
          sub_10017F874();
          v97();
          (*(void (**)(uint64_t, uint64_t))(v93 + 8))(v94, v89);
          uint64_t v98 = *(void (**)(uint64_t, uint64_t))(v160 + 8);
          uint64_t v99 = v161;
          v98(v92, v161);
          v98(v90, v99);
          (*(void (**)(uint64_t, uint64_t))(v84 + 8))(v85, v172);
          uint64_t v100 = v169;
          uint64_t v101 = v168;
          sub_100185380();
          v102();
          sub_10052C1D8(v96, v101, v83, v180, v178);
          (*(void (**)(uint64_t, void))(v100 + 8))(v101, v98);
          sub_10017F874();
          v103();
          sub_10017F874();
          v104();
          return (*(uint64_t (**)(uint64_t, uint64_t))(v151 + 8))(v154, v173);
        }
        uint64_t v118 = v177;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v42 + 16))(v46, v79, v177);
        int v119 = (*(uint64_t (**)(uint64_t, uint64_t))(v42 + 88))(v46, v118);
        if (v119 == enum case for HistoricalComparison.highTemperature(_:)
          || v119 == enum case for HistoricalComparison.lowTemperature(_:))
        {
          (*(void (**)(uint64_t, uint64_t))(v42 + 96))(v46, v118);
          uint64_t v121 = v152;
          sub_1001627D4();
          v122();
          sub_10052AD04(v121, v83, v180, v178);
          uint64_t v123 = sub_1001A0970();
          v124(v123);
          (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v79, v118);
        }
        else
        {
          if (v119 == enum case for HistoricalComparison.precipitationAmount(_:))
          {
            uint64_t v128 = sub_10017E59C();
            v129(v128);
            sub_1001A20A4();
            sub_1001627D4();
            v130();
            uint64_t v131 = sub_10017FE60();
            v132(v131);
            uint64_t v133 = sub_100185AC0();
            sub_10052C1D8(v133, v134, v83, v180, v135);
            uint64_t v136 = sub_1001A0970();
            v137(v136);
            (*(void (**)(uint64_t, uint64_t))(v118 + 8))(v9, v171);
          }
          else
          {
            if (v119 != enum case for HistoricalComparison.snowfallAmount(_:))
            {
              uint64_t result = _assertionFailure(_:_:file:line:flags:)();
              __break(1u);
              return result;
            }
            uint64_t v138 = sub_10017E59C();
            v139(v138);
            sub_1001A20A4();
            uint64_t v141 = *(void *)(v140 - 256);
            sub_1001627D4();
            v142();
            uint64_t v143 = sub_10017FE60();
            v144(v143);
            uint64_t v145 = sub_100185AC0();
            sub_10052C1D8(v145, v146, v179, v180, v147);
            uint64_t v148 = sub_1001A0970();
            v149(v148);
            (*(void (**)(uint64_t, uint64_t))(v118 + 8))(v9, v141);
          }
          (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v79, v177);
        }
        uint64_t v127 = v151;
      }
      else
      {
        if (qword_100E62780 != -1) {
          swift_once();
        }
        uint64_t v105 = type metadata accessor for Logger();
        sub_1002102B0(v105, (uint64_t)qword_100F51D98);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v174, v180, v176);
        uint64_t v106 = Logger.logObject.getter();
        os_log_type_t v107 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v106, v107))
        {
          uint64_t v108 = swift_slowAlloc();
          uint64_t v173 = v63;
          uint64_t v109 = v108;
          uint64_t v110 = swift_slowAlloc();
          uint64_t v154 = v59;
          uint64_t v181 = v110;
          sub_10017A424(7.2225e-34);
          *(_WORD *)(v109 + 12) = 2081;
          uint64_t v172 = v109 + 14;
          sub_100230FE4((unint64_t *)&qword_100E66470, 255, (void (*)(uint64_t))&type metadata accessor for Location);
          uint64_t v111 = dispatch thunk of CustomStringConvertible.description.getter();
          uint64_t v113 = sub_10016414C(v111, v112, &v181);
          sub_1001D1A38(v113);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          uint64_t v114 = sub_1001A4650();
          v115(v114);
          sub_10008B8D8((void *)&_mh_execute_header, v116, v117, "Could not find both a temperature and precipitation weather comparison while making the averages component model. Show internal error message. location=%{private,mask.hash}s");
          swift_arrayDestroy();
          uint64_t v82 = v154;
          sub_100162EE0();
          uint64_t v63 = v173;
          sub_100162EE0();
        }
        else
        {
          uint64_t v125 = sub_1001A4650();
          v126(v125);
        }

        uint64_t v127 = v151;
        sub_10017CEB8();
        (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v175, v177);
      }
      return (*(uint64_t (**)(uint64_t, uint64_t))(v127 + 8))(v82, v63);
    }
    (*(void (**)(uint64_t, uint64_t))(v55 + 8))(v59, v53);
    uint64_t v60 = &qword_100E7E738;
    uint64_t v61 = v39;
  }
  sub_1000F3400(v61, v60);
  uint64_t v64 = v176;
  if (qword_100E62780 != -1) {
    swift_once();
  }
  uint64_t v65 = type metadata accessor for Logger();
  sub_1002102B0(v65, (uint64_t)qword_100F51D98);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v9, v180, v64);
  uint64_t v66 = Logger.logObject.getter();
  os_log_type_t v67 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v66, v67))
  {
    uint64_t v68 = swift_slowAlloc();
    uint64_t v181 = swift_slowAlloc();
    sub_10017A424(7.2225e-34);
    *(_WORD *)(v68 + 12) = 2081;
    sub_100230FE4((unint64_t *)&qword_100E66470, 255, (void (*)(uint64_t))&type metadata accessor for Location);
    uint64_t v69 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v71 = sub_10016414C(v69, v70, &v181);
    sub_1001D1A38(v71);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    uint64_t v72 = sub_1001A16B4();
    v73(v72);
    sub_10008B8D8((void *)&_mh_execute_header, v74, v75, "Encountered empty weather comparisons while making the averages component model. Show internal error message. location=%{private,mask.hash}s");
    swift_arrayDestroy();
    sub_100162EE0();
    sub_100162EE0();
  }
  else
  {
    uint64_t v76 = sub_1001A16B4();
    v77(v76);
  }

  return sub_10017CEB8();
}

uint64_t SessionScenePhaseObserver.scenePhaseChanged(old:new:)(uint64_t a1, char *a2)
{
  uint64_t v86 = a2;
  uint64_t v70 = type metadata accessor for EndReason();
  sub_100179C0C();
  uint64_t v85 = v3;
  __chkstk_darwin(v4);
  sub_100109314();
  uint64_t v84 = v5;
  sub_100129064();
  type metadata accessor for SessionEndData();
  sub_100179C0C();
  uint64_t v78 = v7;
  uint64_t v79 = v6;
  __chkstk_darwin(v6);
  sub_100109314();
  uint64_t v71 = v8;
  sub_100129064();
  type metadata accessor for UUID();
  sub_100179C0C();
  uint64_t v74 = v10;
  uint64_t v75 = v9;
  __chkstk_darwin(v9);
  sub_100109314();
  uint64_t v72 = v11;
  sub_100129064();
  type metadata accessor for Session.Kind();
  sub_100179C0C();
  uint64_t v76 = v13;
  uint64_t v77 = v12;
  __chkstk_darwin(v12);
  sub_100109314();
  uint64_t v73 = v14;
  sub_100129064();
  uint64_t v15 = type metadata accessor for Date();
  sub_100179C0C();
  uint64_t v82 = v16;
  __chkstk_darwin(v17);
  sub_100109314();
  uint64_t v81 = v18;
  sub_100129064();
  type metadata accessor for UserIdentityChange();
  sub_100179C0C();
  uint64_t v69 = v19;
  __chkstk_darwin(v20);
  uint64_t v22 = (char *)&v69 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_10017DF08(&qword_100E6E1E8);
  uint64_t v24 = __chkstk_darwin(v23 - 8);
  uint64_t v26 = (char *)&v69 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = &v26[*(int *)(v24 + 56)];
  uint64_t v28 = type metadata accessor for ScenePhase();
  uint64_t v29 = *(void **)(v28 - 8);
  uint64_t v30 = (void (*)(char *, uint64_t, uint64_t))v29[2];
  v30(v26, a1, v28);
  v30(v27, (uint64_t)v86, v28);
  uint64_t v31 = (uint64_t (*)(char *, uint64_t))v29[11];
  uint64_t v86 = v27;
  int v32 = v31(v27, v28);
  int v33 = v32;
  int v34 = enum case for ScenePhase.active(_:);
  uint64_t v83 = v15;
  if (v32 == enum case for ScenePhase.active(_:))
  {
    uint64_t v85 = v22;
    int v35 = v31(v26, v28);
    int v36 = enum case for ScenePhase.background(_:);
    if (v35 == v33 || v35 == enum case for ScenePhase.inactive(_:) || v35 == enum case for ScenePhase.background(_:))
    {
      sub_10017FAC0();
      v40(v39);
      uint64_t v41 = v80;
      sub_1001B1E64(v80 + 3, v80[6]);
      dispatch thunk of IdentityRotationManagerType.rotateIdentifiersIfNeeded()();
      sub_100162F0C();
      v43(v42);
      sub_1001B1E64(v41 + 8, v41[11]);
      uint64_t v44 = v81;
      static Date.now.getter();
      sub_10001D7C8(v44);
      uint64_t v45 = *(void (**)(uint64_t))(v82 + 8);
      uint64_t v46 = sub_100179FF4();
      v45(v46);
      uint64_t v86 = (char *)v41[2];
      uint64_t v48 = v76;
      uint64_t v47 = v77;
      uint64_t v49 = v73;
      (*(void (**)(uint64_t, void, uint64_t))(v76 + 104))(v73, enum case for Session.Kind.userEvents(_:), v77);
      UUID.init()();
      UUID.uuidString.getter();
      sub_100162F0C();
      v51(v50);
      Date.init()();
      SessionManager.start(for:identifier:startDate:timestampJitter:)();
      swift_bridgeObjectRelease();
      uint64_t v52 = sub_100179FF4();
      v45(v52);
      return (*(uint64_t (**)(uint64_t, uint64_t))(v48 + 8))(v49, v47);
    }
  }
  else
  {
    uint64_t v54 = v84;
    uint64_t v55 = v85;
    int v36 = enum case for ScenePhase.background(_:);
    if (v32 == enum case for ScenePhase.background(_:))
    {
      uint64_t v80 = (void *)v80[2];
      SessionManager.tracker.getter();
      (*((void (**)(uint64_t, void, uint64_t))v55 + 13))(v54, enum case for EndReason.appBackground(_:), v70);
      SessionEndData.init(endReason:)();
      sub_10017DF08(&qword_100E6E1F0);
      uint64_t v56 = type metadata accessor for DataEventTrait();
      sub_100179C0C();
      uint64_t v58 = v57;
      unint64_t v59 = (*(unsigned __int8 *)(v57 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v57 + 80);
      uint64_t v60 = swift_allocObject();
      *(_OWORD *)(v60 + 16) = xmmword_100C251B0;
      (*(void (**)(unint64_t, void, uint64_t))(v58 + 104))(v60 + v59, enum case for DataEventTrait.unique(_:), v56);
      sub_100347E78();
      Tracker.push<A>(data:traits:file:line:)();
      swift_release();
      swift_bridgeObjectRelease();
      sub_100162F0C();
      v62(v61);
      Date.init()();
      SessionManager.end(endDate:completion:)();
      sub_100162F0C();
      v64(v63);
      uint64_t v65 = (void (*)(uint64_t))v29[1];
      sub_10017FAC0();
      v65(v66);
      sub_10017FAC0();
      return ((uint64_t (*)(uint64_t))v65)(v67);
    }
  }
  int v68 = v31(v26, v28);
  if (v68 == v34 || v68 == enum case for ScenePhase.inactive(_:) || v68 == v36) {
    return ((uint64_t (*)(char *, uint64_t))v29[1])(v86, v28);
  }
  else {
    return sub_100347E18((uint64_t)v26);
  }
}

uint64_t sub_100088F44(uint64_t a1, uint64_t a2)
{
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1);
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  sub_10017DF08((uint64_t *)&unk_100EAA7B0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = type metadata accessor for FinishLaunchTestAction();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  swift_release();

  return swift_release();
}

uint64_t initializeWithCopy for NextHourPrecipitationLeadingValueRule(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v3 = *(void *)(a2 + 24);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = v3;
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t _s7Weather49DetermineLocationComponentHeaderLineLimitModifierVwca_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_100181940(*(void *)a2, a2, a3, a4, a5, a6, a7, a8, *(void *)(a2 + 64), *(unsigned char *)(a2 + 72));
  sub_10019D2EC();
  *(unsigned char *)(a1 + 72) = v20;
  sub_10018CCC4(v9, v10, v11, v12, v13, v14, v15, v16, v17, v18);
  return a1;
}

uint64_t initializeWithCopy for DetermineWhetherViewsShouldConsiderMapPinnedToTopModifier(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 8);
  uint64_t v4 = *(void *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 24);
  uint64_t v6 = *(void *)(a2 + 32);
  uint64_t v7 = *(void *)(a2 + 40);
  uint64_t v8 = *(void *)(a2 + 48);
  uint64_t v9 = *(void *)(a2 + 56);
  uint64_t v10 = *(void *)(a2 + 64);
  uint64_t v11 = *(void *)(a2 + 72);
  sub_1001910C8(v3, v4, v5, v6, v7, v8, v9, v10, v11, *(unsigned char *)(a2 + 80));
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = v6;
  *(void *)(a1 + 40) = v7;
  *(void *)(a1 + 48) = v8;
  *(void *)(a1 + 56) = v9;
  *(void *)(a1 + 64) = v10;
  *(void *)(a1 + 72) = v11;
  *(unsigned char *)(a1 + 80) = v13;
  return a1;
}

uint64_t sub_1000891B0()
{
  return sub_10015176C();
}

uint64_t sub_100089210()
{
  return sub_10015176C();
}

uint64_t sub_100089270(void *a1, uint64_t a2)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v3 = type metadata accessor for ContentStatusBannerPresentationMetrics(0);

  return sub_1002102B0(v3, a2);
}

uint64_t sub_1000892C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v46 = type metadata accessor for WeatherMapPresentationState(0) - 8;
  __chkstk_darwin(v46);
  sub_1001626E0();
  uint64_t v7 = (unsigned char *)(v6 - v5);
  uint64_t v8 = type metadata accessor for DisplayMetrics();
  __chkstk_darwin(v8 - 8);
  sub_1001626E0();
  uint64_t v11 = v10 - v9;
  uint64_t v12 = type metadata accessor for MainViewModel(0);
  uint64_t v13 = v12 - 8;
  __chkstk_darwin(v12);
  sub_1001626E0();
  uint64_t v16 = v15 - v14;
  uint64_t v17 = sub_10017DF08(&qword_100E952E8);
  uint64_t v18 = v17 - 8;
  __chkstk_darwin(v17);
  sub_100109314();
  uint64_t v20 = v19;
  uint64_t v40 = sub_10017DF08(&qword_100E952F0) - 8;
  __chkstk_darwin(v40);
  sub_100109314();
  uint64_t v39 = v21;
  uint64_t v43 = sub_10017DF08(&qword_100E952F8) - 8;
  __chkstk_darwin(v43);
  sub_100109314();
  uint64_t v42 = v22;
  uint64_t v45 = sub_10017DF08(&qword_100E95300) - 8;
  __chkstk_darwin(v45);
  sub_100109314();
  uint64_t v44 = v23;
  uint64_t KeyPath = swift_getKeyPath();
  swift_retain();
  sub_1001BFFC8();
  swift_release();
  sub_1001517B8(v16 + *(int *)(v13 + 48), v11, (void (*)(void))type metadata accessor for DisplayMetrics);
  sub_1001BFF18(v16, (void (*)(void))type metadata accessor for MainViewModel);
  uint64_t v25 = (uint64_t *)(v20 + *(int *)(v18 + 44));
  uint64_t v26 = sub_10017DF08(&qword_100E95308);
  sub_1001517B8(v11, (uint64_t)v25 + *(int *)(v26 + 28), (void (*)(void))type metadata accessor for DisplayMetrics);
  *uint64_t v25 = KeyPath;
  sub_10017DF08(&qword_100E95310);
  sub_100162E4C();
  uint64_t v28 = v20;
  (*(void (**)(uint64_t, uint64_t))(v27 + 16))(v20, a1);
  sub_1001BFF18(v11, (void (*)(void))type metadata accessor for DisplayMetrics);
  uint64_t v29 = swift_getKeyPath();
  swift_retain();
  sub_1001BFFC8();
  swift_release();
  sub_1001517B8(v16 + *(int *)(v13 + 44), (uint64_t)v7, (void (*)(void))type metadata accessor for WeatherMapPresentationState);
  sub_1001BFF18(v16, (void (*)(void))type metadata accessor for MainViewModel);
  LOBYTE(KeyPath) = v7[1];
  sub_1001BFF18((uint64_t)v7, (void (*)(void))type metadata accessor for WeatherMapPresentationState);
  sub_10006DF38(v28, v39, &qword_100E952E8);
  uint64_t v30 = v39 + *(int *)(v40 + 44);
  *(void *)uint64_t v30 = v29;
  *(unsigned char *)(v30 + 8) = KeyPath;
  sub_1001781AC(v28, &qword_100E952E8);
  uint64_t v41 = swift_getKeyPath();
  swift_retain();
  sub_1001BFFC8();
  swift_release();
  uint64_t v37 = v13;
  sub_1001517B8(v16 + *(int *)(v13 + 44), (uint64_t)v7, (void (*)(void))type metadata accessor for WeatherMapPresentationState);
  sub_1001BFF18(v16, (void (*)(void))type metadata accessor for MainViewModel);
  LOBYTE(v13) = v7[*(int *)(v46 + 44)];
  sub_1001BFF18((uint64_t)v7, (void (*)(void))type metadata accessor for WeatherMapPresentationState);
  sub_10006DF38(v39, v42, &qword_100E952F0);
  uint64_t v31 = v42 + *(int *)(v43 + 44);
  *(void *)uint64_t v31 = v41;
  *(unsigned char *)(v31 + 8) = v13;
  sub_1001781AC(v39, &qword_100E952F0);
  uint64_t v32 = swift_getKeyPath();
  swift_retain();
  sub_1001BFFC8();
  swift_release();
  sub_1001517B8(v16 + *(int *)(v37 + 44), (uint64_t)v7, (void (*)(void))type metadata accessor for WeatherMapPresentationState);
  sub_1001BFF18(v16, (void (*)(void))type metadata accessor for MainViewModel);
  LOBYTE(v13) = v7[1];
  sub_1001BFF18((uint64_t)v7, (void (*)(void))type metadata accessor for WeatherMapPresentationState);
  sub_10006DF38(v42, v44, &qword_100E952F8);
  uint64_t v33 = v44 + *(int *)(v45 + 44);
  *(void *)uint64_t v33 = v32;
  *(unsigned char *)(v33 + 8) = (v13 & 0xC0) == 64;
  sub_1001781AC(v42, &qword_100E952F8);
  swift_retain();
  sub_1001BFFC8();
  swift_release();
  sub_1001517B8(v16 + *(int *)(v37 + 44), (uint64_t)v7, (void (*)(void))type metadata accessor for WeatherMapPresentationState);
  sub_1001BFF18(v16, (void (*)(void))type metadata accessor for MainViewModel);
  LOBYTE(v32) = *v7;
  sub_1001BFF18((uint64_t)v7, (void (*)(void))type metadata accessor for WeatherMapPresentationState);
  uint64_t v34 = swift_allocObject();
  *(void *)(v34 + 16) = a2;
  *(void *)(v34 + 24) = a3;
  sub_10006DF38(v44, a4, &qword_100E95300);
  uint64_t v35 = a4 + *(int *)(sub_10017DF08(&qword_100E95318) + 36);
  *(unsigned char *)uint64_t v35 = v32;
  *(void *)(v35 + 8) = sub_1007BD404;
  *(void *)(v35 + 16) = v34;
  swift_retain();
  return sub_1001781AC(v44, &qword_100E95300);
}

uint64_t sub_1000898B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, void *a5@<X8>)
{
  uint64_t v10 = type metadata accessor for NWActivity.CompletionReason();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *(void *)(a1 + OBJC_IVAR____TtC7Weather27LocationNetworkActivityFlow_locationId + 8);
  if ((!v14
     || a3
     && (*(void *)(a1 + OBJC_IVAR____TtC7Weather27LocationNetworkActivityFlow_locationId) == a2
       ? (BOOL v15 = v14 == a3)
       : (BOOL v15 = 0),
         v15 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0))
    && *(void *)(a1 + OBJC_IVAR____TtC7Weather27LocationNetworkActivityFlow_rootActivity)
    && ((uint64_t v16 = OBJC_IVAR____TtC7Weather27LocationNetworkActivityFlow_mapActivity,
         (uint64_t v17 = *(void *)(a1 + OBJC_IVAR____TtC7Weather27LocationNetworkActivityFlow_mapActivity)) == 0)
     || (a4 & 1) != 0))
  {
    HIDWORD(v26) = a4;
    uint64_t v20 = OBJC_IVAR____TtC7Weather27LocationNetworkActivityFlow_mapTilesActivity;
    uint64_t v21 = *(void *)(a1 + OBJC_IVAR____TtC7Weather27LocationNetworkActivityFlow_mapTilesActivity);
    *(void *)(a1 + OBJC_IVAR____TtC7Weather27LocationNetworkActivityFlow_rootActivity) = 0;
    *(void *)(a1 + v16) = 0;
    swift_retain();
    swift_retain();
    swift_release();
    *(void *)(a1 + v20) = 0;
    swift_release();
    unint64_t v27 = (unint64_t)&_swiftEmptyArrayStorage;
    swift_retain_n();
    swift_retain();
    swift_retain();
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    char v22 = BYTE4(v26);
    if (v17)
    {
      swift_retain();
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
    }
    if (v21)
    {
      swift_retain();
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
    }
    unint64_t v23 = v27;
    swift_release();
    swift_release();
    swift_release();
    uint64_t v24 = (unsigned int *)&enum case for NWActivity.CompletionReason.success(_:);
    if ((v22 & 1) == 0) {
      uint64_t v24 = (unsigned int *)&enum case for NWActivity.CompletionReason.cancelled(_:);
    }
    (*(void (**)(char *, void, uint64_t))(v11 + 104))(v13, *v24, v10);
    uint64_t v25 = (uint64_t)a5 + *(int *)(type metadata accessor for NetworkActivityCompletion() + 24);
    (*(void (**)(uint64_t, char *, uint64_t))(v11 + 16))(v25, v13, v10);
    _s7Weather24LocationCompositionStateOwst_0(v25, 0, 1, v10);
    swift_release();
    swift_release();
    swift_release();
    *a5 = &_swiftEmptyArrayStorage;
    a5[1] = v23;
    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
  else
  {
    uint64_t v18 = type metadata accessor for NetworkActivityCompletion();
    uint64_t result = _s7Weather24LocationCompositionStateOwst_0((uint64_t)a5 + *(int *)(v18 + 24), 1, 1, v10);
    *a5 = &_swiftEmptyArrayStorage;
    a5[1] = &_swiftEmptyArrayStorage;
  }
  return result;
}

uint64_t sub_100089C4C()
{
  if (*(void *)(v0 + 16)) {
    uint64_t result = sub_100089CAC();
  }
  if (*(void *)(v0 + 24)) {
    return sub_100089CAC();
  }
  return result;
}

uint64_t sub_100089CAC()
{
  type metadata accessor for NetworkActivityCompletion();
  sub_100162E4C();
  __chkstk_darwin(v1);
  sub_100125FF8();
  type metadata accessor for UnfairLock();
  swift_retain();
  Lock.sync<A>(_:)();
  swift_release();
  sub_100089EEC();
  return sub_100089DA4(v0);
}

uint64_t sub_100089DA4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for NetworkActivityCompletion();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for NetworkActivityCompletion()
{
  uint64_t result = qword_100E6CD40;
  if (!qword_100E6CD40) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100089E48(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = type metadata accessor for NWActivity.CompletionReason();
  uint64_t result = _s7Weather24LocationCompositionStateOwet_0(v4, 1, v5);
  if (!result)
  {
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
    return v7(v4, v5);
  }
  return result;
}

uint64_t sub_100089EEC()
{
  uint64_t v1 = *v0;
  if (!((unint64_t)*v0 >> 62))
  {
    uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain_n();
    if (v2) {
      goto LABEL_3;
    }
LABEL_11:
    uint64_t v6 = swift_bridgeObjectRelease_n();
    unint64_t v7 = v0[1];
    __chkstk_darwin(v6);
    void v8[2] = v0;
    swift_bridgeObjectRetain();
    sub_10008A040((void (*)(uint64_t *))sub_10021CA34, (uint64_t)v8, v7);
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain_n();
  uint64_t result = _CocoaArrayWrapper.endIndex.getter();
  uint64_t v2 = result;
  if (!result) {
    goto LABEL_11;
  }
LABEL_3:
  if (v2 >= 1)
  {
    uint64_t v4 = 0;
    do
    {
      if ((v1 & 0xC000000000000001) != 0)
      {
        uint64_t v5 = specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        uint64_t v5 = *(void *)(v1 + 8 * v4 + 32);
        swift_retain();
      }
      ++v4;
      void v8[5] = v5;
      sub_100068BC8();
      swift_release();
    }
    while (v2 != v4);
    goto LABEL_11;
  }
  __break(1u);
  return result;
}

uint64_t sub_10008A040(void (*a1)(uint64_t *), uint64_t a2, unint64_t a3)
{
  if (a3 >> 62) {
    goto LABEL_13;
  }
  uint64_t v6 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v6; uint64_t v6 = _CocoaArrayWrapper.endIndex.getter())
  {
    for (uint64_t i = 4; ; ++i)
    {
      if ((a3 & 0xC000000000000001) != 0)
      {
        uint64_t v8 = specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        uint64_t v8 = *(void *)(a3 + 8 * i);
        swift_retain();
      }
      uint64_t v9 = i - 3;
      if (__OFADD__(i - 4, 1)) {
        break;
      }
      uint64_t v11 = v8;
      a1(&v11);
      if (v3)
      {
        swift_bridgeObjectRelease();
        return swift_release();
      }
      swift_release();
      if (v9 == v6) {
        return swift_bridgeObjectRelease();
      }
    }
    __break(1u);
LABEL_13:
    swift_bridgeObjectRetain();
  }
  return swift_bridgeObjectRelease();
}

BOOL sub_10008A15C(CGRect *a1)
{
  sub_10017B374();
  v2();
  BOOL result = CGRectEqualToRect(*a1, v4);
  if (!result)
  {
    a1->origin.CGFloat x = v4.origin.x;
    a1->origin.CGFloat y = v4.origin.y;
    a1->size.CGFloat width = v4.size.width;
    a1->size.double height = v4.size.height;
  }
  return result;
}

__n128 initializeWithTake for WeatherDataState(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t sub_10008A1DC()
{
  type metadata accessor for CallbackScope();
  sub_10017C83C();
  uint64_t v26 = v0;
  uint64_t v27 = v1;
  __chkstk_darwin(v0);
  uint64_t v25 = (char *)v24 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for Scope();
  sub_10017C83C();
  uint64_t v4 = v3;
  __chkstk_darwin(v5);
  ProxyContainer.public.getter();
  v24[1] = sub_10017DF08(&qword_100E80778);
  RegistrationContainer.register<A>(_:name:factory:)();
  sub_100181A40();
  uint64_t v6 = *(void (**)(uint64_t))(v4 + 104);
  uint64_t v7 = sub_10017D914();
  v6(v7);
  sub_10017EC70();
  swift_release();
  swift_release();
  uint64_t v8 = *(void (**)(uint64_t))(v4 + 8);
  uint64_t v9 = sub_10019F5C4();
  v8(v9);
  ProxyContainer.public.getter();
  sub_10017DF08(&qword_100E74C20);
  sub_100179D0C();
  sub_100181A40();
  uint64_t v10 = sub_10017D914();
  v6(v10);
  sub_10017EC70();
  swift_release();
  swift_release();
  uint64_t v11 = sub_10019F5C4();
  v8(v11);
  ProxyContainer.public.getter();
  sub_10017DF08(&qword_100E98100);
  sub_100179D0C();
  sub_100181A40();
  uint64_t v12 = sub_10017D914();
  v6(v12);
  sub_10017EC70();
  swift_release();
  swift_release();
  uint64_t v13 = sub_10019F5C4();
  v8(v13);
  ProxyContainer.public.getter();
  sub_10017DF08(&qword_100EA5CC8);
  sub_100179D0C();
  sub_100181A40();
  uint64_t v14 = sub_10017D914();
  v6(v14);
  sub_10017EC70();
  swift_release();
  swift_release();
  uint64_t v15 = sub_10019F5C4();
  v8(v15);
  ProxyContainer.private.getter();
  RegistrationContainer.lazy(block:)();
  swift_release();
  ProxyContainer.callback.getter();
  sub_1001B1E64(v28, v29);
  uint64_t v16 = v26;
  uint64_t v17 = v27;
  uint64_t v18 = *(void (**)(uint64_t))(v27 + 104);
  uint64_t v19 = v25;
  uint64_t v20 = sub_1001A278C();
  v18(v20);
  dispatch thunk of CallbackRegistrationType.whenResolving<A>(_:scope:callback:)();
  uint64_t v21 = *(void (**)(char *, uint64_t))(v17 + 8);
  uint64_t v27 = v17 + 8;
  v21(v19, v16);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v28);
  ProxyContainer.callback.getter();
  sub_1001B1E64(v28, v29);
  type metadata accessor for ShortcutItemHandlerManager();
  uint64_t v22 = sub_1001A278C();
  v18(v22);
  dispatch thunk of CallbackRegistrationType.whenResolving<A>(_:scope:callback:)();
  v21(v19, v16);
  return _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v28);
}

uint64_t sub_10008A598@<X0>(uint64_t a1@<X8>)
{
  uint64_t v92 = a1;
  uint64_t v3 = sub_10017DF08(&qword_100E7E8F8);
  __chkstk_darwin(v3 - 8);
  sub_100109314();
  id v91 = v4;
  type metadata accessor for ContentSizeCategory();
  sub_100179C0C();
  uint64_t v89 = v6;
  uint64_t v90 = v5;
  __chkstk_darwin(v5);
  sub_10016278C();
  uint64_t v87 = v7 - v8;
  __chkstk_darwin(v9);
  id v88 = (char *)&v80 - v10;
  uint64_t v11 = type metadata accessor for DailyComponentView(0);
  sub_100162E4C();
  __chkstk_darwin(v12);
  sub_100109314();
  uint64_t v85 = v13;
  uint64_t v14 = type metadata accessor for DailyForecastComponentViewModel.DayForecastViewModel(0);
  sub_100179C0C();
  uint64_t v81 = v15;
  __chkstk_darwin(v16);
  sub_1001626E0();
  uint64_t v19 = v18 - v17;
  uint64_t v20 = sub_10017DF08(&qword_100E63DB8);
  __chkstk_darwin(v20 - 8);
  sub_100162F18();
  uint64_t v86 = v11;
  uint64_t v21 = *(int *)(v11 + 44);
  uint64_t v84 = v1;
  uint64_t v82 = v1 + v21;
  uint64_t v22 = sub_1000520D4();
  uint64_t v24 = v23;
  char v26 = v25 & 1;
  uint64_t v83 = type metadata accessor for Text.WritingMode();
  uint64_t v27 = 1;
  _s7Weather24LocationCompositionStateOwst_0(v2, 1, 1, v83);
  Text.Measurements.size(of:in:writingMode:)();
  double v29 = v28;
  double v31 = v30;
  sub_100191924(v22, v24, v26);
  swift_bridgeObjectRelease();
  sub_100178110(v2, &qword_100E63DB8);
  uint64_t v32 = v84;
  uint64_t v33 = sub_1000523F4();
  uint64_t v35 = v34;
  LOBYTE(v24) = v36 & 1;
  _s7Weather24LocationCompositionStateOwst_0(v2, 1, 1, v83);
  Text.Measurements.size(of:in:writingMode:)();
  double v38 = v37;
  double v40 = v39;
  sub_100191924(v33, v35, v24);
  swift_bridgeObjectRelease();
  uint64_t v41 = v2;
  uint64_t v42 = v32;
  sub_100178110(v41, &qword_100E63DB8);
  sub_100035C24();
  double v44 = v43;
  uint64_t v45 = *(void *)(*(void *)v32 + 16);
  if (v45)
  {
    uint64_t v46 = *(void *)v32 + ((*(unsigned __int8 *)(v81 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v81 + 80));
    uint64_t v47 = *(void *)(v81 + 72);
    swift_bridgeObjectRetain();
    uint64_t v27 = 0;
    uint64_t v48 = v85;
    while (1)
    {
      sub_100145458(v46, v19, (void (*)(void))type metadata accessor for DailyForecastComponentViewModel.DayForecastViewModel);
      double v49 = *(double *)(v19 + *(int *)(v14 + 48));
      sub_1001440E4(v19, (void (*)(void))type metadata accessor for DailyForecastComponentViewModel.DayForecastViewModel);
      if (v49 >= 0.3) {
        break;
      }
      ++v27;
      v46 += v47;
      if (v45 == v27)
      {
        uint64_t v27 = 1;
        break;
      }
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v48 = v85;
  }
  if (qword_100E62790 != -1) {
    swift_once();
  }
  uint64_t v50 = type metadata accessor for Logger();
  sub_1002102B0(v50, (uint64_t)qword_100F51DC8);
  sub_100145458(v42, v48, (void (*)(void))type metadata accessor for DailyComponentView);
  uint64_t v51 = Logger.logObject.getter();
  os_log_type_t v52 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v51, v52))
  {
    uint64_t v53 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v53 = 134349056;
    uint64_t v54 = *(void *)(*(void *)v48 + 16);
    sub_1001440E4(v48, (void (*)(void))type metadata accessor for DailyComponentView);
    uint64_t v93 = v54;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v51, v52, "About to check if a large text layout might be required for the daily forecast component. dailyForecastCount=%{public}ld", v53, 0xCu);
    swift_slowDealloc();
  }
  else
  {
    sub_1001440E4(v48, (void (*)(void))type metadata accessor for DailyComponentView);
  }
  uint64_t v56 = v87;
  uint64_t v55 = v88;

  sub_10014E6E8();
  uint64_t v58 = v89;
  uint64_t v57 = v90;
  (*(void (**)(uint64_t, char *, uint64_t))(v89 + 16))(v56, v55, v90);
  int v59 = (*(uint64_t (**)(uint64_t, uint64_t))(v58 + 88))(v56, v57);
  if (v59 != enum case for ContentSizeCategory.extraSmall(_:)
    && v59 != enum case for ContentSizeCategory.small(_:)
    && v59 != enum case for ContentSizeCategory.medium(_:)
    && v59 != enum case for ContentSizeCategory.large(_:)
    && v59 != enum case for ContentSizeCategory.extraLarge(_:)
    && v59 != enum case for ContentSizeCategory.extraExtraLarge(_:)
    && v59 != enum case for ContentSizeCategory.extraExtraExtraLarge(_:))
  {
    if (v59 == enum case for ContentSizeCategory.accessibilityMedium(_:)
      || v59 == enum case for ContentSizeCategory.accessibilityLarge(_:)
      || v59 == enum case for ContentSizeCategory.accessibilityExtraLarge(_:)
      || v59 == enum case for ContentSizeCategory.accessibilityExtraExtraLarge(_:)
      || v59 == enum case for ContentSizeCategory.accessibilityExtraExtraExtraLarge(_:))
    {
      int v70 = 1;
      goto LABEL_48;
    }
    (*(void (**)(uint64_t, uint64_t))(v58 + 8))(v56, v57);
  }
  int v70 = 0;
LABEL_48:
  (*(void (**)(char *, uint64_t))(v58 + 8))(v55, v57);
  uint64_t v71 = Logger.logObject.getter();
  os_log_type_t v72 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v71, v72))
  {
    uint64_t v73 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v73 = 67240192;
    int v94 = v70;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v71, v72, "Obtained the large text layout requirement for the daily forecast component. mightRequireLargeTextRowView=%{BOOL,public}d", v73, 8u);
    swift_slowDealloc();
  }

  uint64_t v74 = static HorizontalAlignment.center.getter();
  uint64_t v75 = (uint64_t)v91;
  *id v91 = v74;
  *(void *)(v75 + 8) = 0;
  *(unsigned char *)(v75 + 16) = 0;
  uint64_t v76 = sub_10017DF08(&qword_100E7E900);
  sub_10003C2F0(v42, v70, v27, v75 + *(int *)(v76 + 44), v29, v31, v38, v40, v44);
  uint64_t v77 = v92;
  sub_10006DF38(v75, v92, &qword_100E7E8F8);
  uint64_t v78 = (void *)(v77 + *(int *)(sub_10017DF08(&qword_100E7E908) + 36));
  *uint64_t v78 = 0xD000000000000012;
  v78[1] = 0x8000000100C43310;
  return sub_100178110(v75, &qword_100E7E8F8);
}

unint64_t sub_10008AD4C(uint64_t a1)
{
  unint64_t result = sub_10017DFE0(a1);
  if (!result)
  {
    uint64_t v5 = v4;
    sub_10018C6DC(v3);
    v5();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, v1);
  }
  return result;
}

char *sub_10008ADB4(char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for MainViewModel.ModalModule(0);
  int v7 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a1, 1, v6);
  int v8 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v6);
  if (!v7)
  {
    if (!v8)
    {
      if (a1 == a2) {
        goto LABEL_18;
      }
      sub_1001BFF70((uint64_t)a1, (void (*)(void))type metadata accessor for MainViewModel.ModalModule);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v12 = type metadata accessor for MainViewModel.ModalModule.LocationDetailModule(0);
        if (swift_getEnumCaseMultiPayload() == 6)
        {
          uint64_t v13 = type metadata accessor for URL();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16))(a1, a2, v13);
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(a1, a2, *(void *)(*(void *)(v12 - 8) + 64));
        }
        swift_storeEnumTagMultiPayload();
        goto LABEL_18;
      }
      size_t v11 = *(void *)(*(void *)(v6 - 8) + 64);
LABEL_9:
      memcpy(a1, a2, v11);
      goto LABEL_18;
    }
    sub_1001BFF70((uint64_t)a1, (void (*)(void))type metadata accessor for MainViewModel.ModalModule);
LABEL_8:
    size_t v11 = *(void *)(*(void *)(sub_10017DF08(&qword_100E94AE8) - 8) + 64);
    goto LABEL_9;
  }
  if (v8) {
    goto LABEL_8;
  }
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v9 = type metadata accessor for MainViewModel.ModalModule.LocationDetailModule(0);
    if (swift_getEnumCaseMultiPayload() == 6)
    {
      uint64_t v10 = type metadata accessor for URL();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(a1, a2, v10);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v6);
LABEL_18:
  uint64_t v14 = a3[5];
  uint64_t v15 = &a1[v14];
  uint64_t v16 = &a2[v14];
  *(void *)&a1[v14] = *(void *)&a2[v14];
  swift_retain();
  swift_release();
  *((void *)v15 + 1) = *((void *)v16 + 1);
  swift_retain();
  swift_release();
  v15[16] = v16[16];
  uint64_t v17 = a3[6];
  uint64_t v18 = &a1[v17];
  uint64_t v19 = &a2[v17];
  *(void *)&a1[v17] = *(void *)&a2[v17];
  swift_retain();
  swift_release();
  *((void *)v18 + 1) = *((void *)v19 + 1);
  swift_retain();
  swift_release();
  v18[16] = v19[16];
  uint64_t v20 = a3[7];
  uint64_t v21 = &a1[v20];
  uint64_t v22 = &a2[v20];
  *(void *)&a1[v20] = *(void *)&a2[v20];
  swift_retain();
  swift_release();
  *((void *)v21 + 1) = *((void *)v22 + 1);
  swift_retain();
  swift_release();
  v21[16] = v22[16];
  uint64_t v23 = a3[8];
  uint64_t v24 = &a1[v23];
  char v25 = &a2[v23];
  *(void *)&a1[v23] = *(void *)&a2[v23];
  swift_retain();
  swift_release();
  *((void *)v24 + 1) = *((void *)v25 + 1);
  uint64_t v26 = a3[9];
  uint64_t v27 = &a1[v26];
  double v28 = &a2[v26];
  uint64_t v29 = *(void *)v28;
  char v30 = v28[8];
  sub_100195B7C(*(void *)v28, v30);
  uint64_t v31 = *(void *)v27;
  char v32 = v27[8];
  *(void *)uint64_t v27 = v29;
  v27[8] = v30;
  sub_10018F6D8(v31, v32);
  return a1;
}

uint64_t sub_10008B188()
{
  sub_10008B218(*v0);
  static Alignment.center.getter();
  return sub_10008B708();
}

uint64_t sub_10008B218(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ContentSizeCategory();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  int v8 = (char *)&v40 - v7;
  uint64_t v9 = sub_10017DF08(&qword_100E64E80);
  __chkstk_darwin(v9 - 8);
  size_t v11 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for LocationComponentViewModel();
  uint64_t v13 = __chkstk_darwin(v12);
  uint64_t v14 = __chkstk_darwin(v13);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v40 - v16;
  if (*(void *)(a1 + 16) != 1) {
    return 0;
  }
  uint64_t v42 = v3;
  uint64_t v43 = v15;
  double v40 = v6;
  uint64_t v41 = v8;
  sub_10008B6DC(a1, (uint64_t)v11);
  uint64_t v18 = type metadata accessor for LocationComponentContainerViewModel();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v11, 1, v18) != 1)
  {
    sub_1001300BC();
    sub_1001338DC((uint64_t)v11, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    sub_100130070();
    uint64_t v19 = v43;
    sub_1001300BC();
    if (swift_getEnumCaseMultiPayload() == 6)
    {
      type metadata accessor for LocationContentRowHeightModifier(0);
      uint64_t v20 = v41;
      sub_10014E6E8();
      uint64_t v21 = v42;
      uint64_t v22 = v40;
      (*(void (**)(char *, char *, uint64_t))(v42 + 16))(v40, v20, v2);
      int v23 = (*(uint64_t (**)(char *, uint64_t))(v21 + 88))(v22, v2);
      if (v23 == enum case for ContentSizeCategory.extraSmall(_:)
        || v23 == enum case for ContentSizeCategory.small(_:)
        || v23 == enum case for ContentSizeCategory.medium(_:)
        || v23 == enum case for ContentSizeCategory.large(_:)
        || v23 == enum case for ContentSizeCategory.extraLarge(_:)
        || v23 == enum case for ContentSizeCategory.extraExtraLarge(_:)
        || v23 == enum case for ContentSizeCategory.extraExtraExtraLarge(_:))
      {
        (*(void (**)(char *, uint64_t))(v21 + 8))(v20, v2);
LABEL_45:
        sub_100921BAC();
        uint64_t v39 = v38;
        sub_1001338DC((uint64_t)v17, (void (*)(void))type metadata accessor for LocationComponentViewModel);
        uint64_t v36 = v39;
        sub_1001338DC(v43, (void (*)(void))type metadata accessor for LocationComponentViewModel);
        return v36;
      }
      uint64_t v31 = *(void (**)(char *, uint64_t))(v21 + 8);
      if (v23 != enum case for ContentSizeCategory.accessibilityMedium(_:)
        && v23 != enum case for ContentSizeCategory.accessibilityLarge(_:)
        && v23 != enum case for ContentSizeCategory.accessibilityExtraLarge(_:)
        && v23 != enum case for ContentSizeCategory.accessibilityExtraExtraLarge(_:)
        && v23 != enum case for ContentSizeCategory.accessibilityExtraExtraExtraLarge(_:))
      {
        v31(v22, v2);
        v31(v20, v2);
        goto LABEL_45;
      }
      v31(v20, v2);
      sub_1001338DC((uint64_t)v17, (void (*)(void))type metadata accessor for LocationComponentViewModel);
      uint64_t v30 = v43;
    }
    else
    {
      sub_1001338DC((uint64_t)v17, (void (*)(void))type metadata accessor for LocationComponentViewModel);
      uint64_t v30 = v19;
    }
    sub_1001338DC(v30, (void (*)(void))type metadata accessor for LocationComponentViewModel);
    return 0;
  }
  sub_100178110((uint64_t)v11, &qword_100E64E80);
  return 0;
}

uint64_t sub_10008B6DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1001464B8(a1, (uint64_t (*)(void))type metadata accessor for LocationComponentContainerViewModel, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel, a2);
}

uint64_t sub_10008B708()
{
  sub_100180CF4();
  return sub_10016EF60(v0, v1, v2, v3, v4, v5);
}

#error "10008B828: call analysis failed (funcsize=88)"

uint64_t sub_10008B8A8()
{
  return 0;
}

void sub_10008B8D8(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v6, a4, v5, 0x16u);
}

uint64_t sub_10008B938@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v95 = a1;
  uint64_t v98 = a2;
  uint64_t v92 = a3;
  uint64_t v91 = type metadata accessor for LocationComponentHeaderViewModel(0);
  sub_100162E4C();
  __chkstk_darwin(v3);
  sub_1001626E0();
  uint64_t v6 = v5 - v4;
  type metadata accessor for MoonPhase.Hemisphere();
  sub_100179C0C();
  uint64_t v84 = v8;
  uint64_t v85 = v7;
  __chkstk_darwin(v7);
  sub_100109314();
  uint64_t v83 = v9;
  sub_100129064();
  uint64_t v10 = type metadata accessor for MoonComponentViewModel();
  uint64_t v11 = sub_100109308(v10);
  __chkstk_darwin(v11);
  sub_100109314();
  uint64_t v96 = v12;
  sub_100129064();
  type metadata accessor for TimeZone();
  sub_100179C0C();
  uint64_t v86 = v14;
  uint64_t v87 = v13;
  __chkstk_darwin(v13);
  sub_1001626E0();
  uint64_t v15 = sub_10017DF08(&qword_100E6C288);
  uint64_t v16 = sub_100109308(v15);
  uint64_t v17 = __chkstk_darwin(v16);
  uint64_t v90 = (uint64_t)v82 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v88 = (uint64_t)v82 - v20;
  __chkstk_darwin(v19);
  uint64_t v97 = (uint64_t)v82 - v21;
  sub_100129064();
  type metadata accessor for CurrentWeather();
  sub_100179C0C();
  v82[1] = v23;
  v82[2] = v22;
  __chkstk_darwin(v22);
  sub_1001626E0();
  uint64_t v24 = type metadata accessor for MoonComponent();
  uint64_t v25 = sub_100109308(v24);
  __chkstk_darwin(v25);
  sub_1001626E0();
  uint64_t v28 = v27 - v26;
  uint64_t v29 = sub_10017DF08(&qword_100E63740);
  uint64_t v30 = sub_100109308(v29);
  __chkstk_darwin(v30);
  sub_1001626E0();
  uint64_t v33 = v32 - v31;
  uint64_t v34 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  uint64_t v35 = sub_100109308(v34);
  __chkstk_darwin(v35);
  sub_1001626E0();
  uint64_t v38 = v37 - v36;
  uint64_t v39 = type metadata accessor for Date();
  sub_100179C0C();
  uint64_t v93 = v40;
  __chkstk_darwin(v41);
  sub_100109314();
  uint64_t v43 = v42;
  uint64_t v44 = sub_100129064();
  uint64_t v45 = type metadata accessor for WeatherData(v44);
  sub_1001262FC(v98 + *(int *)(v45 + 36), v33, &qword_100E63740);
  uint64_t v46 = type metadata accessor for WeatherDataOverrides();
  if (_s7Weather24LocationCompositionStateOwet_0(v33, 1, v46) == 1)
  {
    sub_100178110(v33, &qword_100E63740);
    _s7Weather24LocationCompositionStateOwst_0(v38, 1, 1, v39);
  }
  else
  {
    sub_1001262FC(v33, v38, (uint64_t *)&unk_100E73CA0);
    sub_1002231CC(v33, (void (*)(void))type metadata accessor for WeatherDataOverrides);
  }
  sub_100223220(v98, v28);
  int v47 = _s7Weather24LocationCompositionStateOwet_0(v38, 1, v39);
  uint64_t v89 = v39;
  if (v47 == 1)
  {
    WeatherDataModel.currentWeather.getter();
    uint64_t v48 = v43;
    CurrentWeather.date.getter();
    sub_100162F0C();
    v49();
    sub_1002231CC(v28, (void (*)(void))type metadata accessor for MoonComponent);
    sub_100178110(v38, (uint64_t *)&unk_100E73CA0);
  }
  else
  {
    sub_1002231CC(v28, (void (*)(void))type metadata accessor for MoonComponent);
    uint64_t v50 = v39;
    uint64_t v48 = v43;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v93 + 32))(v43, v38, v50);
  }
  sub_1001B1E64((void *)(v94 + 16), *(void *)(v94 + 40));
  Location.timeZone.getter();
  Location.coordinate.getter();
  uint64_t v51 = v97;
  dispatch thunk of MoonDataProviderType.dayMoonData(for:timeZone:coordinate:)();
  sub_100162F0C();
  v52();
  id v53 = [self mainBundle];
  v100._uint64_t countAndFlagsBits = 0xD000000000000036;
  v100._object = (void *)0x8000000100CB66A0;
  v54._uint64_t countAndFlagsBits = 1852796749;
  v54._object = (void *)0xE400000000000000;
  v55._uint64_t countAndFlagsBits = 0;
  v55._object = (void *)0xE000000000000000;
  Swift::String v56 = NSLocalizedString(_:tableName:bundle:value:comment:)(v54, (Swift::String_optional)0, (NSBundle)v53, v55, v100);
  uint64_t countAndFlagsBits = v56._countAndFlagsBits;
  object = v56._object;

  uint64_t v59 = v88;
  sub_1001262FC(v51, v88, &qword_100E6C288);
  uint64_t v60 = type metadata accessor for DayMoonData();
  if (_s7Weather24LocationCompositionStateOwet_0(v59, 1, v60) == 1)
  {
    sub_100178110(v59, &qword_100E6C288);
    swift_bridgeObjectRetain();
    uint64_t v61 = v56._countAndFlagsBits;
    uint64_t v62 = v56._object;
  }
  else
  {
    DayMoonData.phase.getter();
    sub_100162F0C();
    v63();
    uint64_t v61 = MoonPhase.description.getter();
    uint64_t v62 = v64;
    Swift::String v99 = v56;
    v65._uint64_t countAndFlagsBits = 8236;
    v65._object = (void *)0xE200000000000000;
    String.append(_:)(v65);
    v66._uint64_t countAndFlagsBits = v61;
    v66._object = v62;
    String.append(_:)(v66);
    Swift::String v67 = v99;
    object = v67._object;
    uint64_t countAndFlagsBits = v67._countAndFlagsBits;
  }
  uint64_t v68 = v97;
  sub_10007CF08(v95, v48, v97, v96);
  uint64_t v69 = v68;
  uint64_t v70 = v90;
  sub_1001262FC(v69, v90, &qword_100E6C288);
  if (_s7Weather24LocationCompositionStateOwet_0(v70, 1, v60) == 1)
  {
    sub_100178110(v70, &qword_100E6C288);
    uint64_t v71 = 0;
    unint64_t v72 = 0;
  }
  else
  {
    DayMoonData.phase.getter();
    sub_100162F0C();
    v73();
    Location.coordinate.getter();
    uint64_t v74 = v83;
    MoonPhase.Hemisphere.init(latitude:)();
    uint64_t v71 = MoonPhase.symbolName(for:)();
    unint64_t v72 = v75;
    (*(void (**)(uint64_t, uint64_t))(v84 + 8))(v74, v85);
  }
  if (!v72)
  {
    uint64_t v71 = 0xD000000000000013;
    unint64_t v72 = 0x8000000100CB66E0;
  }
  sub_100178110(v97, &qword_100E6C288);
  sub_100162F0C();
  v76();
  *(void *)uint64_t v6 = v61;
  *(void *)(v6 + 8) = v62;
  *(void *)(v6 + 16) = v71;
  *(void *)(v6 + 24) = v72;
  *(unsigned char *)(v6 + 32) = 0;
  *(void *)(v6 + 40) = countAndFlagsBits;
  *(void *)(v6 + 48) = object;
  swift_storeEnumTagMultiPayload();
  uint64_t v77 = (int *)type metadata accessor for LocationComponentContainerViewModel();
  uint64_t v78 = v92;
  sub_10008C1A0((uint64_t)v96, v92 + v77[5], (void (*)(void))type metadata accessor for MoonComponentViewModel);
  type metadata accessor for LocationComponentViewModel();
  swift_storeEnumTagMultiPayload();
  uint64_t v79 = v78 + v77[7];
  uint64_t v80 = type metadata accessor for LocationComponentAction(0);
  swift_storeEnumTagMultiPayload();
  _s7Weather24LocationCompositionStateOwst_0(v79, 0, 1, v80);
  uint64_t result = sub_10008C1A0(v6, v78, (void (*)(void))type metadata accessor for LocationComponentHeaderViewModel);
  *(_WORD *)(v78 + v77[6]) = 256;
  return result;
}

uint64_t sub_10008C14C(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  uint64_t v4 = sub_100126010();
  v5(v4);
  return a2;
}

uint64_t sub_10008C1A0(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(a2, a1);
  return a2;
}

uint64_t sub_10008C200@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v22 = a1;
  uint64_t v23 = sub_10017DF08(&qword_100EADFE8);
  __chkstk_darwin(v23);
  uint64_t v6 = (char *)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10017DF08(&qword_100EADFF0);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10017DF08(&qword_100EADFF8);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v14 = (char *)v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v16 = (char *)v21 - v15;
  sub_10017DF08(&qword_100EAE000);
  if (a2)
  {
    v21[1] = a3;
    sub_10008C5A0();
    uint64_t v17 = View.accessibilityHidden(_:)();
    __chkstk_darwin(v17);
    v21[-2] = v22;
    v21[-1] = a2;
    unint64_t v18 = sub_10008C654();
    View.accessibilityRepresentation<A>(representation:)();
    sub_10008C5F4((uint64_t)v9);
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v16, v14, v10);
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v6, v16, v10);
    swift_storeEnumTagMultiPayload();
    uint64_t v24 = v7;
    uint64_t v25 = &type metadata for Text;
    unint64_t v26 = v18;
    uint64_t v27 = &protocol witness table for Text;
    swift_getOpaqueTypeConformance2();
    _ConditionalContent<>.init(storage:)();
    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v16, v10);
  }
  else
  {
    sub_10008C5A0();
    View.accessibilityHidden(_:)();
    sub_100A9268C((uint64_t)v9, (uint64_t)v6);
    swift_storeEnumTagMultiPayload();
    unint64_t v20 = sub_10008C654();
    uint64_t v24 = v7;
    uint64_t v25 = &type metadata for Text;
    unint64_t v26 = v20;
    uint64_t v27 = &protocol witness table for Text;
    swift_getOpaqueTypeConformance2();
    _ConditionalContent<>.init(storage:)();
    return sub_10008C5F4((uint64_t)v9);
  }
}

unint64_t sub_10008C5A0()
{
  unint64_t result = qword_100EAE008;
  if (!qword_100EAE008)
  {
    sub_10018C6DC(&qword_100EAE000);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAE008);
  }
  return result;
}

uint64_t sub_10008C5F4(uint64_t a1)
{
  uint64_t v2 = sub_10017DF08(&qword_100EADFF0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_10008C654()
{
  unint64_t result = qword_100EAE010;
  if (!qword_100EAE010)
  {
    sub_10018C6DC(&qword_100EADFF0);
    sub_10008C5A0();
    sub_100227408();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAE010);
  }
  return result;
}

uint64_t sub_10008C6D0(uint64_t a1, void (*a2)(void), uint64_t (*a3)(uint64_t))
{
  a2(0);
  sub_10017B22C();

  return a3(a1);
}

__n128 sub_10008C760@<Q0>(long long *a1@<X8>)
{
  uint64_t v2 = sub_10008C78C();
  __n128 result = (__n128)*v2;
  long long v4 = v2[1];
  *a1 = *v2;
  a1[1] = v4;
  return result;
}

long long *sub_10008C78C()
{
  if (qword_100E62478 != -1) {
    swift_once();
  }
  return &xmmword_100E82650;
}

uint64_t sub_10008C7D8()
{
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10008C818(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for LocationHeaderViewMeasurements(0);
  __chkstk_darwin(v2 - 8);
  long long v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10014D0EC(a1, (uint64_t)v4, (void (*)(void))type metadata accessor for LocationHeaderViewMeasurements);
  return sub_10008C8B4((uint64_t)v4);
}

uint64_t sub_10008C8B4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for LocationHeaderViewMeasurements(0);
  __chkstk_darwin(v2 - 8);
  sub_10014D0EC(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), (void (*)(void))type metadata accessor for LocationHeaderViewMeasurements);
  sub_10019A65C();
  EnvironmentValues.subscript.setter();
  return sub_10014CC74(a1, (void (*)(void))type metadata accessor for LocationHeaderViewMeasurements);
}

uint64_t sub_10008C97C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v5 = *(int *)(a3 + 20);
  uint64_t v6 = (void *)(a1 + v5);
  uint64_t v7 = (const void *)(a2 + v5);
  uint64_t v8 = type metadata accessor for URL();
  swift_retain();
  swift_retain();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v7, 1, v8))
  {
    uint64_t v9 = sub_10017DF08(&qword_100E749B0);
    memcpy(v6, v7, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v8 - 8) + 16))(v6, v7, v8);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v6, 0, 1, v8);
  }
  return a1;
}

uint64_t sub_10008CA74(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Location();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  swift_bridgeObjectRelease();
  uint64_t v6 = (int *)type metadata accessor for WeatherData(0);
  uint64_t v7 = v5 + v6[5];
  uint64_t v8 = type metadata accessor for Locale();
  if (!_s7Weather24LocationCompositionStateOwet_0(v7, 1, v8)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  }
  uint64_t v9 = v5 + v6[6];
  uint64_t v10 = type metadata accessor for WeatherDataModel();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  uint64_t v11 = v5 + v6[7];
  uint64_t v12 = sub_10017DF08(&qword_100E63738);
  if (!_s7Weather24LocationCompositionStateOwet_0(v11, 1, v12))
  {
    uint64_t v13 = type metadata accessor for Date();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v11, v13);
  }
  uint64_t v14 = v5 + v6[8];
  type metadata accessor for WeatherData.WeatherStatisticsState(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v16 = type metadata accessor for WeatherStatisticsModel();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v14, v16);
  }
  else if (!EnumCaseMultiPayload)
  {
    swift_bridgeObjectRelease();
  }
  uint64_t v17 = v5 + v6[9];
  uint64_t v18 = type metadata accessor for WeatherDataOverrides();
  if (!_s7Weather24LocationCompositionStateOwet_0(v17, 1, v18))
  {
    uint64_t v19 = type metadata accessor for Date();
    if (!_s7Weather24LocationCompositionStateOwet_0(v17, 1, v19)) {
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v19 - 8) + 8))(v17, v19);
    }
    uint64_t v20 = v17 + *(int *)(v18 + 20);
    if (!_s7Weather24LocationCompositionStateOwet_0(v20, 1, v19)) {
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v19 - 8) + 8))(v20, v19);
    }
  }
  uint64_t v50 = a2;
  uint64_t v21 = a1 + *(int *)(a2 + 24);
  uint64_t v22 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v22 - 8) + 8))(v21, v22);
  uint64_t v23 = (int *)type metadata accessor for PreprocessedWeatherData();
  swift_bridgeObjectRelease();
  uint64_t v24 = v21 + v23[6];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v25 = v24 + *(int *)(type metadata accessor for FeelsLikeComponentPreprocessedDataModel() + 28);
  uint64_t v26 = type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference(0);
  if (!_s7Weather24LocationCompositionStateOwet_0(v25, 1, v26))
  {
    swift_bridgeObjectRelease();
    uint64_t v27 = v25 + *(int *)(v26 + 20);
    uint64_t v28 = type metadata accessor for TemperatureScaleConfiguration();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v28 - 8) + 8))(v27, v28);
    type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
    swift_bridgeObjectRelease();
  }
  uint64_t v51 = a1;
  swift_bridgeObjectRelease();
  uint64_t v29 = v21 + v23[7];
  swift_bridgeObjectRelease();
  uint64_t v30 = v29 + *(int *)(type metadata accessor for HourlyForecastComponentPreprocessedDataModel() + 20);
  uint64_t v31 = type metadata accessor for WeatherDescription();
  if (!_s7Weather24LocationCompositionStateOwet_0(v30, 1, v31)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v31 - 8) + 8))(v30, v31);
  }
  uint64_t v32 = v21 + v23[8];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v33 = v32 + *(int *)(type metadata accessor for ListPreprocessedDataModel() + 32);
  uint64_t v34 = type metadata accessor for Date();
  uint64_t v35 = *(void (**)(uint64_t, uint64_t))(*(void *)(v34 - 8) + 8);
  v35(v33, v34);
  uint64_t v36 = type metadata accessor for WeatherConditionBackgroundTimeData();
  uint64_t v37 = v33 + *(int *)(v36 + 20);
  uint64_t v38 = type metadata accessor for Elevation();
  if (!_s7Weather24LocationCompositionStateOwet_0(v37, 1, v38)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v38 - 8) + 8))(v37, v38);
  }
  uint64_t v39 = v33 + *(int *)(v36 + 24);
  uint64_t v40 = type metadata accessor for BackgroundMoonData();
  if (!_s7Weather24LocationCompositionStateOwet_0(v39, 1, v40)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v40 - 8) + 8))(v39, v40);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v31 - 8) + 8))(v21 + v23[10], v31);
  type metadata accessor for UVIndexComponentPreprocessedDataModel();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v41 = v21 + v23[12];
  uint64_t v42 = type metadata accessor for PressureTrend();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v42 - 8) + 8))(v41, v42);
  type metadata accessor for PressureComponentPreprocessedDataModel();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v43 = v21 + v23[14];
  v35(v43, v34);
  uint64_t v44 = v43 + *(int *)(v36 + 20);
  if (!_s7Weather24LocationCompositionStateOwet_0(v44, 1, v38)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v38 - 8) + 8))(v44, v38);
  }
  uint64_t v45 = v43 + *(int *)(v36 + 24);
  if (!_s7Weather24LocationCompositionStateOwet_0(v45, 1, v40)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v40 - 8) + 8))(v45, v40);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v46 = v51 + *(int *)(v50 + 28);
  type metadata accessor for NewsDataModel();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v48 = type metadata accessor for News();
    double v49 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v48 - 8) + 8);
    return v49(v46, v48);
  }
}

void *sub_10008D34C(void *a1, void (*a2)(char *, uint64_t, uint64_t))
{
  uint64_t v48 = a2;
  uint64_t v3 = sub_10017DF08(&qword_100E63508);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for LocationOfInterest();
  uint64_t v46 = *(void *)(v6 - 8);
  uint64_t v7 = __chkstk_darwin(v6);
  uint64_t v50 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v45 = (char *)&v39 - v9;
  uint64_t v10 = type metadata accessor for LocationModel();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  double v49 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_10017DF08((uint64_t *)&unk_100EADD50);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)&v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = v15;
  uint64_t v16 = type metadata accessor for WeatherCoalescedLocationResult();
  uint64_t v41 = *(void *)(v16 - 8);
  uint64_t v42 = v16;
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v39 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = a1[25];
  uint64_t v44 = a1[24];
  uint64_t v47 = v19;
  uint64_t v43 = sub_1001B1E64(a1 + 21, v44);
  uint64_t v20 = type metadata accessor for CurrentLocation();
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v15, 1, 1, v20);
  sub_1001B1E64(a1 + 28, a1[31]);
  dispatch thunk of SavedLocationsManagerType.savedLocations.getter();
  sub_1001B1E64(a1 + 38, a1[41]);
  dispatch thunk of LocationDisplayContextManagerType.fetchDisplayContextByLocation()();
  uint64_t v21 = (uint64_t)v40;
  dispatch thunk of WeatherLocationCoalescenceManagerType.coalesceLocations(currentLocation:locationList:locationsOfInterest:displayContextByLocation:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_100178254(v21, (uint64_t *)&unk_100EADD50);
  uint64_t v40 = v18;
  uint64_t v22 = WeatherCoalescedLocationResult.coalescedLocations.getter();
  uint64_t v23 = *(void *)(v22 + 16);
  if (v23)
  {
    uint64_t v25 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
    uint64_t v24 = v11 + 16;
    uint64_t v26 = *(unsigned __int8 *)(v24 + 64);
    uint64_t v39 = v22;
    uint64_t v27 = v22 + ((v26 + 32) & ~v26);
    uint64_t v47 = *(void *)(v24 + 56);
    uint64_t v48 = v25;
    uint64_t v28 = (void (**)(char *, uint64_t))(v24 - 8);
    uint64_t v29 = (void (**)(char *, char *, uint64_t))(v46 + 32);
    uint64_t v30 = _swiftEmptyArrayStorage;
    uint64_t v43 = (void *)v24;
    uint64_t v44 = v6;
    do
    {
      uint64_t v31 = v49;
      v48(v49, v27, v10);
      LocationModel.locationOfInterest.getter();
      (*v28)(v31, v10);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v5, 1, v6) == 1)
      {
        sub_100178254((uint64_t)v5, &qword_100E63508);
      }
      else
      {
        uint64_t v32 = v10;
        uint64_t v33 = *v29;
        uint64_t v34 = v45;
        (*v29)(v45, v5, v6);
        v33(v50, v34, v6);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v30 = (void *)sub_1007E95B0(0, v30[2] + 1, 1, (uint64_t)v30);
        }
        unint64_t v36 = v30[2];
        unint64_t v35 = v30[3];
        if (v36 >= v35 >> 1) {
          uint64_t v30 = (void *)sub_1007E95B0(v35 > 1, v36 + 1, 1, (uint64_t)v30);
        }
        _OWORD v30[2] = v36 + 1;
        unint64_t v37 = (unint64_t)v30
            + ((*(unsigned __int8 *)(v46 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v46 + 80))
            + *(void *)(v46 + 72) * v36;
        uint64_t v6 = v44;
        v33((char *)v37, v50, v44);
        uint64_t v10 = v32;
      }
      v27 += v47;
      --v23;
    }
    while (v23);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v30 = _swiftEmptyArrayStorage;
  }
  (*(void (**)(char *, uint64_t))(v41 + 8))(v40, v42);
  return v30;
}

uint64_t sub_10008D84C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a3 + 16);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = v7;
  uint64_t v62 = v6;
  Swift::String v54 = *(void (**)(void))(v7 + 24);
  v54();
  uint64_t v9 = *(void *)(a3 + 24);
  uint64_t v10 = *(void *)(v9 - 8);
  unsigned int v11 = *(_DWORD *)(v10 + 80);
  uint64_t v12 = *(void *)(v7 + 64) + *(_DWORD *)(v10 + 80);
  unint64_t v61 = ~(unint64_t)*(_DWORD *)(v10 + 80);
  uint64_t v63 = v9;
  os_log_type_t v52 = *(void (**)(unint64_t, unint64_t))(v10 + 24);
  v52((v12 + a1) & v61, (v12 + a2) & v61);
  unint64_t v13 = (v12 & v61) + *(void *)(v10 + 64);
  unint64_t v14 = v13 + 7;
  uint64_t v60 = a1;
  uint64_t v15 = (void *)((v13 + 7 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v16 = (void *)((v13 + 7 + a2) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v15 = *v16;
  swift_retain();
  swift_release();
  v15[1] = v16[1];
  uint64_t v17 = *(unsigned __int8 *)(v8 + 80) | v11;
  unint64_t v18 = (*(unsigned char *)(v8 + 80) | v11) & 0xF8 ^ 0xFFFFFFFFFFFFFFF8;
  uint64_t v19 = ((unint64_t)v15 + v17 + 16) & v18;
  uint64_t v20 = ((unint64_t)v16 + v17 + 16) & v18;
  uint64_t v21 = *(unsigned int *)(v8 + 84);
  uint64_t v22 = *(unsigned int *)(v10 + 84);
  unint64_t v59 = (v13 + 7 + ((v13 + v17) & ~v17)) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v23 = v59 + 8;
  int v58 = v22 | v21;
  uint64_t v56 = v13 + v17;
  uint64_t v57 = ~v17;
  if (!(v22 | v21))
  {
    if (*(unsigned char *)(v19 + v23))
    {
      int v25 = *(unsigned __int8 *)(v19 + v23) - 1;
      if (v59 == -8)
      {
        int v26 = 0;
      }
      else
      {
        int v25 = 0;
        int v26 = *(_DWORD *)v19;
      }
      if ((v26 | v25) != 0xFFFFFFFF)
      {
        if (!*(unsigned char *)(v20 + v23)) {
          goto LABEL_18;
        }
        int v28 = *(unsigned __int8 *)(v20 + v23) - 1;
        int v29 = v59 + 8;
        if (v59 != -8)
        {
          int v28 = 0;
          int v29 = *(_DWORD *)v20;
        }
        if ((v29 | v28) == 0xFFFFFFFF) {
          goto LABEL_18;
        }
LABEL_25:
        unint64_t v34 = v59;
        int v37 = v58;
        unint64_t v36 = v59 + 8;
        if (v58) {
          size_t v42 = v59 + 8;
        }
        else {
          size_t v42 = v59 + 9;
        }
        memcpy((void *)v19, (const void *)v20, v42);
        uint64_t v35 = v60;
        goto LABEL_30;
      }
    }
    if (!*(unsigned char *)(v20 + v23)) {
      goto LABEL_29;
    }
    int v38 = *(unsigned __int8 *)(v20 + v23) - 1;
    int v39 = v59 + 8;
    if (v59 != -8)
    {
      int v38 = 0;
      int v39 = *(_DWORD *)v20;
    }
    if ((v39 | v38) == 0xFFFFFFFF)
    {
LABEL_29:
      ((void (*)(uint64_t, uint64_t, uint64_t))v54)(v19, v20, v62);
      ((void (*)(unint64_t, unint64_t, uint64_t))v52)((v12 + v19) & v61, (v12 + v20) & v61, v63);
      uint64_t v43 = (v56 + v19) & v57;
      uint64_t v44 = (v56 + v20) & v57;
      ((void (*)(uint64_t, uint64_t, uint64_t))v54)(v43, v44, v62);
      ((void (*)(unint64_t, unint64_t, uint64_t))v52)((v12 + v43) & v61, (v12 + v44) & v61, v63);
      *(void *)((v14 + v43) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v14 + v44) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v34 = v59;
      uint64_t v35 = v60;
      unint64_t v36 = v59 + 8;
      int v37 = v58;
      goto LABEL_30;
    }
LABEL_24:
    uint64_t v40 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
    v40(v19, v62);
    uint64_t v41 = *(void (**)(unint64_t, uint64_t))(v10 + 8);
    v41((v12 + v19) & v61, v63);
    v40((v56 + v19) & v57, v62);
    v41((v12 + ((v56 + v19) & v57)) & v61, v63);
    goto LABEL_25;
  }
  if (v21 < v22)
  {
    int v51 = _s7Weather24LocationCompositionStateOwet_0((v12 + v19) & v61, v22, v63);
    int v24 = _s7Weather24LocationCompositionStateOwet_0((v12 + v20) & v61, v22, v63);
    if (v51) {
      goto LABEL_4;
    }
LABEL_10:
    if (!v24) {
      goto LABEL_29;
    }
    goto LABEL_24;
  }
  int v27 = _s7Weather24LocationCompositionStateOwet_0(v19, v21, v62);
  int v24 = _s7Weather24LocationCompositionStateOwet_0(v20, v21, v62);
  if (!v27) {
    goto LABEL_10;
  }
LABEL_4:
  if (v24) {
    goto LABEL_25;
  }
LABEL_18:
  id v53 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16);
  v53(v19, v20, v62);
  unint64_t v30 = (v12 + v20) & v61;
  uint64_t v55 = v20;
  uint64_t v31 = *(void (**)(unint64_t, unint64_t, uint64_t))(v10 + 16);
  v31((v12 + v19) & v61, v30, v63);
  uint64_t v32 = (v56 + v19) & v57;
  uint64_t v33 = (v56 + v55) & v57;
  v53(v32, v33, v62);
  v31((v12 + v32) & v61, (v12 + v33) & v61, v63);
  uint64_t v20 = v55;
  *(void *)((v14 + v32) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v14 + v33) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v34 = v59;
  uint64_t v35 = v60;
  unint64_t v36 = v59 + 8;
  int v37 = v58;
  if (!v58) {
    *(unsigned char *)(v19 + v59 + 8) = 0;
  }
LABEL_30:
  unint64_t v45 = v34 + 9;
  if (v37) {
    unint64_t v45 = v36;
  }
  unint64_t v46 = ((v19 | 7) + v45) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v47 = ((v20 | 7) + v45) & 0xFFFFFFFFFFFFFFF8;
  *(unsigned char *)unint64_t v46 = *(unsigned char *)v47;
  *(void *)(v46 + 8) = *(void *)(v47 + 8);
  swift_retain();
  swift_release();
  uint64_t v48 = (void *)((v46 + 23) & 0xFFFFFFFFFFFFFFF8);
  double v49 = (void *)((v47 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v48 = *v49;
  swift_retain();
  swift_release();
  v48[1] = v49[1];
  swift_retain();
  swift_release();
  return v35;
}

uint64_t sub_10008DE24@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for MainViewModel(0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  sub_1001BFFC8();
  swift_release();
  uint64_t v5 = *((void *)v4 + 1);
  swift_bridgeObjectRetain();
  sub_10008DEE0((uint64_t)v4);
  uint64_t v6 = *(void *)(v5 + 16);
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v6 != 0;
  return result;
}

uint64_t sub_10008DEE0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for MainViewModel(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10008DF3C()
{
  if ((Transaction.disablesAnimations.getter() & 1) == 0)
  {
    sub_10017DF08(&qword_100E65950);
    State.wrappedValue.getter();
  }
  return Transaction.disablesAnimations.setter();
}

uint64_t sub_10008DFB0(char a1)
{
  uint64_t v2 = type metadata accessor for NSRunLoop.SchedulerTimeType.Stride();
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  NSRunLoop.SchedulerTimeType.Stride.init(floatLiteral:)();
  id v5 = [self mainRunLoop];
  sub_10017DF08(&qword_100E827F0);
  swift_allocObject();
  return sub_10008E084(a1, (uint64_t)v4, v5);
}

uint64_t sub_10008E084(char a1, uint64_t a2, void *a3)
{
  uint64_t v4 = v3;
  uint64_t v27 = a2;
  uint64_t v7 = sub_10017DF08(&qword_100E63440);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_10017DF08(&qword_100E827F8);
  uint64_t v10 = *(void *)(v24 - 8);
  __chkstk_darwin(v24);
  uint64_t v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_10017DF08(&qword_100E82800);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v25 = v13;
  uint64_t v26 = v14;
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v30 = a3;
  *(void *)(v4 + *(void *)(*(void *)v4 + 112)) = &_swiftEmptySetSingleton;
  swift_beginAccess();
  char v28 = a1;
  Published.init(initialValue:)();
  swift_endAccess();
  LOBYTE(v29) = a1;
  sub_10017DF08(&qword_100E82808);
  swift_allocObject();
  uint64_t v17 = CurrentValueSubject.init(_:)();
  *(void *)(v4 + *(void *)(*(void *)v4 + 104)) = v17;
  uint64_t v29 = v17;
  uint64_t v18 = type metadata accessor for NSRunLoop.SchedulerOptions();
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v9, 1, 1, v18);
  sub_1001ABC4C(0, (unint64_t *)&qword_100E63460);
  sub_10024D5E4((uint64_t)&unk_100E82810);
  sub_10008E51C();
  swift_retain();
  Publisher.debounce<A>(for:scheduler:options:)();
  sub_10017DF4C((uint64_t)v9, &qword_100E63440);
  swift_release();
  sub_10024D5E4((uint64_t)&unk_100E82818);
  uint64_t v19 = v24;
  Publisher.dropFirst(_:)();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v19);
  swift_allocObject();
  swift_weakInit();
  sub_10024D5E4((uint64_t)&unk_100E82820);
  swift_retain();
  uint64_t v20 = v25;
  Publisher<>.sink(receiveValue:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v26 + 8))(v16, v20);
  swift_release();
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  swift_release();

  uint64_t v21 = type metadata accessor for NSRunLoop.SchedulerTimeType.Stride();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v21 - 8) + 8))(v27, v21);
  return v4;
}

unint64_t sub_10008E51C()
{
  unint64_t result = qword_100E63470;
  if (!qword_100E63470)
  {
    sub_100215BF8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E63470);
  }
  return result;
}

uint64_t sub_10008E56C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v3 = type metadata accessor for Date();
  sub_100179C0C();
  uint64_t v5 = v4;
  __chkstk_darwin(v6);
  sub_1001626E0();
  uint64_t v9 = v8 - v7;
  uint64_t v10 = type metadata accessor for NotificationsOptInAction();
  __chkstk_darwin(v10);
  sub_1001626E0();
  uint64_t v13 = (char *)(v12 - v11);
  uint64_t v14 = sub_10017DF08(&qword_100E7F4F8);
  sub_100179C0C();
  uint64_t v16 = v15;
  __chkstk_darwin(v17);
  sub_1001626E0();
  uint64_t v20 = v19 - v18;
  sub_10008ECB8(v2, (uint64_t)v13);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      char v21 = *v13;
      sub_10017DF08(&qword_100E635E0);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_100C251B0;
      *(void *)(inited + 32) = 0x6E656D6563616C70;
      *(void *)(inited + 40) = 0xE900000000000074;
      *(void *)(inited + 72) = &type metadata for TipViewPlacement;
      *(unsigned char *)(inited + 48) = v21;
      Dictionary.init(dictionaryLiteral:)();
      sub_10017D9CC();
      goto LABEL_10;
    case 2u:
      unsigned __int8 v23 = v13[*(int *)(sub_10017DF08(&qword_100E6BBD8) + 48)];
      uint64_t v24 = type metadata accessor for Location();
      (*(void (**)(char *, uint64_t))(*(void *)(v24 - 8) + 8))(v13, v24);
      sub_10017DF08(&qword_100E635E0);
      uint64_t v25 = (__n128 *)swift_initStackObject();
      uint64_t v26 = sub_1001809C8(v25, (__n128)xmmword_100C251B0);
      v26[4].n128_u64[1] = (unint64_t)&type metadata for Bool;
      v26[3].n128_u8[0] = v23;
      Dictionary.init(dictionaryLiteral:)();
      sub_10017D9CC();
      sub_100188374();
      goto LABEL_10;
    case 3u:
      unsigned __int8 v27 = v13[8];
      swift_bridgeObjectRelease();
      sub_10017DF08(&qword_100E635E0);
      char v28 = (__n128 *)swift_initStackObject();
      uint64_t v29 = sub_1001809C8(v28, (__n128)xmmword_100C251B0);
      v29[4].n128_u64[1] = (unint64_t)&type metadata for Bool;
      v29[3].n128_u8[0] = v27;
      Dictionary.init(dictionaryLiteral:)();
      sub_10017D9CC();
      sub_100188374();
      goto LABEL_10;
    case 4u:
      (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v9, v13, v3);
      sub_10017DF08(&qword_100E635E0);
      uint64_t v30 = swift_initStackObject();
      *(_OWORD *)(v30 + 16) = xmmword_100C251B0;
      *(void *)(v30 + 32) = 1702125924;
      *(void *)(v30 + 40) = 0xE400000000000000;
      *(void *)(v30 + 72) = v3;
      uint64_t v31 = sub_100170694((uint64_t *)(v30 + 48));
      (*(void (**)(uint64_t *, uint64_t, uint64_t))(v5 + 16))(v31, v9, v3);
      Dictionary.init(dictionaryLiteral:)();
      type metadata accessor for MainAction();
      sub_100188374();
      sub_1001A11CC();
      ShortDescription.init(name:_:)();
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v9, v3);
      goto LABEL_12;
    case 5u:
      Dictionary.init(dictionaryLiteral:)();
      sub_10017D9CC();
      goto LABEL_11;
    case 9u:
      Dictionary.init(dictionaryLiteral:)();
      sub_10017D9CC();
      goto LABEL_10;
    default:
      Dictionary.init(dictionaryLiteral:)();
      sub_10017D9CC();
      sub_100188374();
LABEL_10:
      sub_1001A11CC();
LABEL_11:
      ShortDescription.init(name:_:)();
LABEL_12:
      a1[3] = v14;
      a1[4] = sub_1001706F8();
      uint64_t v32 = sub_100170694(a1);
      return (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v16 + 32))(v32, v20, v14);
  }
}

uint64_t sub_10008ECB8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for NotificationsOptInAction();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10008ED1C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for ContentStatusBanner();
  int v7 = _s7Weather24LocationCompositionStateOwet_0(a1, 1, v6);
  int v8 = _s7Weather24LocationCompositionStateOwet_0(a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      *(unsigned char *)a1 = *(unsigned char *)a2;
      if (*(void *)(a2 + 16) >= 2uLL)
      {
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
      }
      uint64_t v13 = *(int *)(v6 + 24);
      uint64_t v14 = (void *)(a1 + v13);
      uint64_t v15 = (const void *)(a2 + v13);
      uint64_t v16 = type metadata accessor for Date();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v15, 1, v16))
      {
        uint64_t v17 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
        memcpy(v14, v15, *(void *)(*(void *)(v17 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v14, 0, 1, v16);
      }
      uint64_t v18 = a1;
      uint64_t v19 = v6;
      goto LABEL_17;
    }
    goto LABEL_7;
  }
  if (v8)
  {
    sub_100151660();
LABEL_7:
    size_t v9 = *(void *)(*(void *)(sub_10017DF08(&qword_100E63A10) - 8) + 64);
    uint64_t v10 = (void *)a1;
    uint64_t v11 = (const void *)a2;
LABEL_8:
    memcpy(v10, v11, v9);
    goto LABEL_18;
  }
  *(unsigned char *)a1 = *(unsigned char *)a2;
  unint64_t v12 = *(void *)(a2 + 16);
  if (*(void *)(a1 + 16) < 2uLL)
  {
    if (v12 >= 2)
    {
      *(void *)(a1 + 8) = *(void *)(a2 + 8);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      swift_bridgeObjectRetain();
      goto LABEL_42;
    }
    goto LABEL_40;
  }
  if (v12 < 2)
  {
    sub_10027B4D4(a1 + 8);
LABEL_40:
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
    goto LABEL_42;
  }
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_42:
  uint64_t v56 = *(int *)(v6 + 24);
  uint64_t v57 = a1 + v56;
  uint64_t v58 = a2 + v56;
  uint64_t v59 = type metadata accessor for Date();
  int v60 = _s7Weather24LocationCompositionStateOwet_0(v57, 1, v59);
  int v61 = _s7Weather24LocationCompositionStateOwet_0(v58, 1, v59);
  if (v60)
  {
    if (!v61)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v59 - 8) + 16))(v57, v58, v59);
      uint64_t v18 = v57;
      uint64_t v19 = v59;
LABEL_17:
      _s7Weather24LocationCompositionStateOwst_0(v18, 0, 1, v19);
      goto LABEL_18;
    }
    goto LABEL_47;
  }
  uint64_t v62 = *(void *)(v59 - 8);
  if (v61)
  {
    (*(void (**)(uint64_t, uint64_t))(v62 + 8))(v57, v59);
LABEL_47:
    size_t v9 = *(void *)(*(void *)(sub_10017DF08((uint64_t *)&unk_100E73CA0) - 8) + 64);
    uint64_t v10 = (void *)v57;
    uint64_t v11 = (const void *)v58;
    goto LABEL_8;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v62 + 24))(v57, v58, v59);
LABEL_18:
  sub_1000C1E18((uint64_t *)(a1 + a3[5]), (uint64_t *)(a2 + a3[5]));
  uint64_t v20 = a3[6];
  uint64_t v21 = a1 + v20;
  uint64_t v22 = a2 + v20;
  uint64_t v23 = *(void *)v22;
  uint64_t v24 = *(void *)(v22 + 8);
  uint64_t v25 = *(void *)(v22 + 16);
  uint64_t v26 = *(void *)(v22 + 24);
  char v27 = *(unsigned char *)(v22 + 32);
  sub_100190CD4(*(void *)v22, v24, v25, v26, v27);
  uint64_t v28 = *(void *)v21;
  uint64_t v29 = *(void *)(v21 + 8);
  uint64_t v30 = *(void *)(v21 + 16);
  uint64_t v31 = *(void *)(v21 + 24);
  char v32 = *(unsigned char *)(v21 + 32);
  *(void *)uint64_t v21 = v23;
  *(void *)(v21 + 8) = v24;
  *(void *)(v21 + 16) = v25;
  *(void *)(v21 + 24) = v26;
  *(unsigned char *)(v21 + 32) = v27;
  sub_100191934(v28, v29, v30, v31, v32);
  if (a1 != a2)
  {
    uint64_t v33 = a3[7];
    uint64_t v34 = a1 + v33;
    uint64_t v35 = a2 + v33;
    sub_10017DF4C(a1 + v33, &qword_100E63BD0);
    sub_10017DF08(&qword_100E63BD0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(void *)uint64_t v34 = *(void *)v35;
      *(void *)(v34 + 8) = *(void *)(v35 + 8);
      *(unsigned char *)(v34 + 16) = *(unsigned char *)(v35 + 16);
      *(unsigned char *)(v34 + 17) = *(unsigned char *)(v35 + 17);
      *(unsigned char *)(v34 + 18) = *(unsigned char *)(v35 + 18);
      uint64_t v36 = *(int *)(type metadata accessor for DisplayMetrics() + 36);
      uint64_t v37 = v34 + v36;
      uint64_t v38 = v35 + v36;
      uint64_t v39 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 16))(v37, v38, v39);
    }
    else
    {
      *(void *)uint64_t v34 = *(void *)v35;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v40 = a3[8];
  uint64_t v41 = a1 + v40;
  uint64_t v42 = a2 + v40;
  *(unsigned char *)(a1 + v40) = *(unsigned char *)(a2 + v40);
  uint64_t v43 = (_OWORD *)(a1 + v40 + 8);
  unint64_t v44 = *(void *)(a1 + v40 + 16);
  unint64_t v45 = *(void *)(v42 + 16);
  if (v44 < 2)
  {
    if (v45 >= 2)
    {
      *(void *)(v41 + 8) = *(void *)(v42 + 8);
      *(void *)(v41 + 16) = *(void *)(v42 + 16);
      swift_bridgeObjectRetain();
      goto LABEL_30;
    }
    goto LABEL_28;
  }
  if (v45 < 2)
  {
    sub_10027B4D4((uint64_t)v43);
LABEL_28:
    *uint64_t v43 = *(_OWORD *)(v42 + 8);
    goto LABEL_30;
  }
  *(void *)(v41 + 8) = *(void *)(v42 + 8);
  *(void *)(v41 + 16) = *(void *)(v42 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_30:
  uint64_t v46 = *(int *)(v6 + 24);
  unint64_t v47 = (void *)(v41 + v46);
  uint64_t v48 = (const void *)(v42 + v46);
  uint64_t v49 = type metadata accessor for Date();
  int v50 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v47, 1, v49);
  int v51 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v48, 1, v49);
  if (!v50)
  {
    uint64_t v52 = *(void *)(v49 - 8);
    if (!v51)
    {
      (*(void (**)(void *, const void *, uint64_t))(v52 + 24))(v47, v48, v49);
      goto LABEL_36;
    }
    (*(void (**)(void *, uint64_t))(v52 + 8))(v47, v49);
    goto LABEL_35;
  }
  if (v51)
  {
LABEL_35:
    uint64_t v53 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    memcpy(v47, v48, *(void *)(*(void *)(v53 - 8) + 64));
    goto LABEL_36;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(void *)(v49 - 8) + 16))(v47, v48, v49);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v47, 0, 1, v49);
LABEL_36:
  uint64_t v54 = sub_10017DF08(&qword_100E8EAB0);
  *(void *)(v41 + *(int *)(v54 + 28)) = *(void *)(v42 + *(int *)(v54 + 28));
  swift_retain();
  swift_release();
  return a1;
}

Swift::Void __swiftcall NotificationsOptInMonitor.applicationWillEnterForeground()()
{
  uint64_t v1 = v0;
  uint64_t v111 = *v0;
  type metadata accessor for DispatchWorkItemFlags();
  sub_100179C0C();
  uint64_t v106 = v3;
  uint64_t v107 = v2;
  __chkstk_darwin(v2);
  sub_100109314();
  sub_100109328(v4);
  uint64_t v105 = type metadata accessor for DispatchQoS();
  sub_100179C0C();
  uint64_t v104 = v5;
  __chkstk_darwin(v6);
  sub_100109314();
  sub_100109328(v7);
  uint64_t v103 = type metadata accessor for DispatchTime();
  sub_100179C0C();
  uint64_t v102 = v8;
  __chkstk_darwin(v9);
  sub_100162EF8();
  uint64_t v100 = v10;
  sub_1001626D4();
  __chkstk_darwin(v11);
  sub_100109328((uint64_t)&v93 - v12);
  uint64_t v99 = type metadata accessor for NotificationsOptInState();
  sub_100162E4C();
  __chkstk_darwin(v13);
  sub_100109314();
  uint64_t v98 = v14;
  uint64_t v15 = sub_10017DF08(&qword_100E634B0);
  __chkstk_darwin(v15 - 8);
  sub_100109314();
  sub_100109328(v16);
  type metadata accessor for Date();
  sub_100179C0C();
  uint64_t v116 = v18;
  uint64_t v117 = v17;
  __chkstk_darwin(v17);
  sub_100109314();
  uint64_t v115 = v19;
  type metadata accessor for MainAction();
  sub_100179C0C();
  uint64_t v21 = v20;
  __chkstk_darwin(v22);
  sub_100162EF8();
  uint64_t v94 = v23;
  sub_1001626D4();
  __chkstk_darwin(v24);
  sub_100109770();
  uint64_t v96 = v25;
  sub_1001626D4();
  __chkstk_darwin(v26);
  sub_100109770();
  uint64_t v112 = v27;
  sub_1001626D4();
  __chkstk_darwin(v28);
  sub_100109770();
  uint64_t v110 = v29;
  sub_1001626D4();
  __chkstk_darwin(v30);
  sub_100109770();
  uint64_t v109 = v31;
  sub_1001626D4();
  __chkstk_darwin(v32);
  sub_100109770();
  uint64_t v95 = v33;
  sub_1001626D4();
  __chkstk_darwin(v34);
  sub_100109770();
  uint64_t v108 = v35;
  sub_1001626D4();
  uint64_t v37 = __chkstk_darwin(v36);
  uint64_t v39 = (char *)&v93 - v38;
  __chkstk_darwin(v37);
  uint64_t v41 = (char *)&v93 - v40;
  uint64_t v42 = v0[7];
  uint64_t v113 = v0 + 4;
  sub_1001B1E64(v0 + 4, v42);
  int v114 = dispatch thunk of NotificationsOptInManagerType.tipDismissalOverThreshold()();
  *uint64_t v41 = 0;
  type metadata accessor for NotificationsOptInAction();
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  uint64_t v43 = sub_1001A6D34(0, 1, 1, (uint64_t)&_swiftEmptyArrayStorage);
  unint64_t v45 = *(void *)(v43 + 16);
  unint64_t v44 = *(void *)(v43 + 24);
  if (v45 >= v44 >> 1) {
    uint64_t v43 = sub_10019FA1C(v44);
  }
  *(void *)(v43 + 16) = v45 + 1;
  unint64_t v46 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  uint64_t v118 = *(void (**)(void, void))(v21 + 72);
  sub_10008FF6C((uint64_t)v41, v43 + v46 + (void)v118 * v45);
  uint64_t v47 = v0[7];
  uint64_t v48 = v113;
  uint64_t v49 = sub_1001B1E64(v113, v47);
  if (dispatch thunk of NotificationsOptInManagerType.listViewTipDismissed()())
  {
    unsigned char *v39 = v114 & 1;
    swift_storeEnumTagMultiPayload();
    swift_storeEnumTagMultiPayload();
    sub_1001A4AF4();
    if (v51) {
      uint64_t v43 = sub_10019FA1C(v50);
    }
    uint64_t v52 = v118;
    *(void *)(v43 + 16) = v49;
    sub_10008FF6C((uint64_t)v39, v43 + v46 + v47 * (void)v52);
  }
  uint64_t v53 = v1[7];
  uint64_t v54 = sub_1001B1E64(v48, v53);
  if (dispatch thunk of NotificationsOptInManagerType.resubscriptionTipDismissed()())
  {
    uint64_t v53 = v108;
    swift_storeEnumTagMultiPayload();
    swift_storeEnumTagMultiPayload();
    sub_1001A4AF4();
    unint64_t v56 = v46;
    if (v51) {
      uint64_t v43 = sub_10019FA1C(v55);
    }
    uint64_t v57 = v118;
    *(void *)(v43 + 16) = v54;
    sub_10008FF6C(v108, v43 + v46 + v53 * (void)v57);
  }
  else
  {
    unint64_t v56 = v46;
    uint64_t v57 = v118;
  }
  sub_10017DDCC();
  if (dispatch thunk of NotificationsOptInManagerType.severeAcknowledged()())
  {
    uint64_t v59 = v95;
    sub_10019DD18();
    swift_storeEnumTagMultiPayload();
    sub_1001A2A84();
    sub_1001A4AF4();
    if (v51) {
      uint64_t v43 = sub_10019FA1C(v60);
    }
    *(void *)(v43 + 16) = v54;
    sub_10008FF6C(v59, v43 + v56 + v53 * (void)v57);
  }
  if (qword_100E622A0 != -1) {
    swift_once();
  }
  sub_10021C864(&qword_100EB8F10, v58, (void (*)(uint64_t))type metadata accessor for NotificationsOptInMonitor);
  Configurable.setting<A>(_:)();
  if (aBlock == 1)
  {
    uint64_t v61 = v109;
    swift_storeEnumTagMultiPayload();
    swift_storeEnumTagMultiPayload();
    sub_1001D23A8();
    if (v51) {
      uint64_t v43 = sub_100180D3C(v62);
    }
    *(void *)(v43 + 16) = v61;
    sub_10008FF6C(v109, v43 + v56 + (void)v1 * (void)v57);
  }
  sub_10017DDCC();
  uint64_t v63 = dispatch thunk of NotificationsOptInManagerType.dismissedLocationIds()();
  uint64_t v64 = v110;
  *uint64_t v110 = v63;
  *((unsigned char *)v64 + 8) = v114 & 1;
  sub_10019DD18();
  swift_storeEnumTagMultiPayload();
  sub_1001A2A84();
  sub_1001D23A8();
  if (v51) {
    uint64_t v43 = sub_100180D3C(v65);
  }
  sub_1001A1BB0();
  uint64_t v66 = v1[7];
  Swift::String v67 = sub_1001B1E64(v48, v66);
  uint64_t v68 = v115;
  uint64_t v69 = v67;
  dispatch thunk of NotificationsOptInManagerType.lastTipDismissalDate()();
  uint64_t v70 = v112;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v116 + 16))(v112, v68, v117);
  sub_10019DD18();
  swift_storeEnumTagMultiPayload();
  sub_1001A2A84();
  sub_1001D23A8();
  if (v51) {
    uint64_t v43 = sub_100180D3C(v71);
  }
  *(void *)(v43 + 16) = v66;
  sub_10008FF6C(v70, v43 + v56 + (void)v69 * (void)v118);
  sub_10017DDCC();
  if (dispatch thunk of NotificationsOptInManagerType.tappedAllowLocation()())
  {
    sub_10019DD18();
    swift_storeEnumTagMultiPayload();
    sub_1001A2A84();
    sub_1001D23A8();
    if (v51) {
      uint64_t v43 = sub_100180D3C(v72);
    }
    sub_1001A1BB0();
  }
  sub_10017DDCC();
  if (dispatch thunk of NotificationsOptInManagerType.tappedAllowNotifications()())
  {
    uint64_t v73 = v97;
    static TaskPriority.userInitiated.getter();
    uint64_t v74 = type metadata accessor for TaskPriority();
    _s7Weather24LocationCompositionStateOwst_0(v73, 0, 1, v74);
    unint64_t v75 = (void *)swift_allocObject();
    v75[2] = 0;
    v75[3] = 0;
    v75[4] = v1;
    swift_retain();
    sub_1001BCCF0(v73, (uint64_t)&unk_100EB8F20, (uint64_t)v75);
  }
  else
  {
    ((void (*)(long long *__return_ptr))v1[9])(&aBlock);
    uint64_t v76 = v98;
    sub_1001C6DA8(aBlock + OBJC_IVAR____TtCV7Weather9MainState8_Storage_notificationsOptIn, v98);
    swift_release();
    int v77 = *(unsigned __int8 *)(v76 + *(int *)(v99 + 60));
    sub_1001C6714(v76, (void (*)(void))type metadata accessor for NotificationsOptInState);
    if (v77 != 1) {
      goto LABEL_39;
    }
    if (qword_100E627D8 != -1) {
      swift_once();
    }
    uint64_t v78 = type metadata accessor for Logger();
    sub_1002102B0(v78, (uint64_t)qword_100F51EA0);
    uint64_t v79 = Logger.logObject.getter();
    os_log_type_t v80 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v79, v80))
    {
      uint64_t v81 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v81 = 0;
      _os_log_impl((void *)&_mh_execute_header, v79, v80, "Notification state says hasn't tapped allow notification but has requested notification permission, which are conflicting. Reset authorization flags", v81, 2u);
      swift_slowDealloc();
    }

    uint64_t v82 = (uint64_t (*)(uint64_t))v1[2];
    uint64_t v83 = v94;
    sub_10019DD18();
    swift_storeEnumTagMultiPayload();
    sub_1001A2A84();
    uint64_t v121 = 0;
    long long aBlock = 0u;
    long long v120 = 0u;
    swift_retain();
    sub_1001AAF58(v83, (uint64_t)&aBlock, v82);
    sub_100178110((uint64_t)&aBlock, (uint64_t *)&unk_100EA01F0);
    sub_1001C6714(v83, (void (*)(void))type metadata accessor for MainAction);
  }
  swift_release();
LABEL_39:
  uint64_t v84 = swift_allocObject();
  *(void *)(v84 + 16) = v1;
  *(void *)(v84 + 24) = v43;
  swift_retain();
  asyncMain(block:)();
  swift_release();
  sub_10017DDCC();
  if (dispatch thunk of NotificationsOptInManagerType.enteredSettingsApp()())
  {
    sub_10017DDCC();
    dispatch thunk of NotificationsOptInManagerType.resetEnteredSettingsApp()();
    sub_1001ABC4C(0, (unint64_t *)&qword_100E62D10);
    uint64_t v85 = (void *)static OS_dispatch_queue.main.getter();
    uint64_t v86 = v100;
    static DispatchTime.now()();
    uint64_t v87 = v101;
    + infix(_:_:)();
    uint64_t v118 = *(void (**)(void, void))(v102 + 8);
    uint64_t v88 = v103;
    v118(v86, v103);
    uint64_t v121 = sub_100C08B60;
    uint64_t v122 = v1;
    *(void *)&long long aBlock = _NSConcreteStackBlock;
    *((void *)&aBlock + 1) = 1107296256;
    *(void *)&long long v120 = sub_10010A4D4;
    *((void *)&v120 + 1) = &unk_100E3BE90;
    uint64_t v89 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    static DispatchQoS.unspecified.getter();
    *(void *)&long long aBlock = &_swiftEmptyArrayStorage;
    sub_10021C864((unint64_t *)&qword_100EA0200, 255, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_10017DF08(&qword_100E75530);
    sub_100115EDC();
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
    _Block_release(v89);

    sub_100162F0C();
    v90();
    sub_100162F0C();
    v91();
    v118(v87, v88);
  }
  sub_100162F0C();
  v92();
}

uint64_t sub_10008FF6C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MainAction();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10008FFD0(uint64_t a1)
{
  type metadata accessor for CallbackScope();
  sub_100179C0C();
  uint64_t v43 = v3;
  uint64_t v44 = v2;
  __chkstk_darwin(v2);
  sub_100109314();
  uint64_t v42 = v4;
  type metadata accessor for Container.TestSuite();
  sub_100179C0C();
  uint64_t v40 = v6;
  uint64_t v41 = v5;
  __chkstk_darwin(v5);
  sub_100109314();
  uint64_t v36 = v7;
  uint64_t v8 = type metadata accessor for Scope();
  sub_100179C0C();
  uint64_t v10 = v9;
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  ProxyContainer.public.getter();
  sub_10017DF08(&qword_100E75338);
  sub_100179D0C();
  swift_release();
  uint64_t v14 = *(void (**)(void))(v10 + 104);
  unsigned int v38 = enum case for Scope.singleton(_:);
  sub_10019F71C();
  v14();
  uint64_t v15 = v14;
  uint64_t v39 = v14;
  Definition.inScope(_:)();
  swift_release();
  swift_release();
  uint64_t v16 = *(void (**)(uint64_t))(v10 + 8);
  uint64_t v17 = sub_10017AE4C();
  v16(v17);
  v35[1] = v10 + 8;
  uint64_t v37 = v16;
  ProxyContainer.public.getter();
  sub_10017DF08(&qword_100EACEA8);
  sub_100179D0C();
  swift_release();
  sub_10019F71C();
  v15();
  Definition.inScope(_:)();
  swift_release();
  swift_release();
  uint64_t v18 = sub_10017AE4C();
  v16(v18);
  uint64_t v19 = a1;
  ProxyContainer.public.getter();
  sub_10017DF08(&qword_100E7CD28);
  sub_100179D0C();
  swift_release();
  uint64_t v21 = v40;
  uint64_t v20 = v41;
  uint64_t v22 = v36;
  (*(void (**)(uint64_t, void, void))(v40 + 104))(v36, enum case for Container.TestSuite.automation(_:), v41);
  Definition.whenTesting(_:_:)();
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, void (*)(void, void, void)))(v21 + 8))(v22, v20);
  ProxyContainer.public.getter();
  sub_10017DF08(&qword_100E7CD30);
  sub_100179D0C();
  swift_release();
  swift_release();
  ProxyContainer.public.getter();
  sub_10017DF08(&qword_100E75340);
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  uint64_t v23 = v39;
  ((void (*)(char *, void, uint64_t))v39)(v13, v38, v8);
  Definition.inScope(_:)();
  swift_release();
  swift_release();
  uint64_t v24 = v37;
  ((void (*)(char *, uint64_t))v37)(v13, v8);
  ProxyContainer.public.getter();
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  sub_10019F71C();
  v23();
  Definition.inScope(_:)();
  swift_release();
  swift_release();
  uint64_t v25 = sub_100180AB0();
  v24(v25);
  ProxyContainer.public.getter();
  sub_10017DF08(&qword_100E75348);
  sub_100179D0C();
  swift_release();
  sub_10019F71C();
  v23();
  Definition.inScope(_:)();
  swift_release();
  swift_release();
  uint64_t v26 = sub_100180AB0();
  v24(v26);
  v35[0] = v19;
  ProxyContainer.private.getter();
  RegistrationContainer.lazy(block:)();
  swift_release();
  ProxyContainer.callback.getter();
  sub_1001B1E64(v45, v46);
  sub_10017DF08((uint64_t *)&unk_100E74C08);
  uint64_t v27 = enum case for CallbackScope.any(_:);
  uint64_t v29 = v42;
  uint64_t v28 = v43;
  uint64_t v41 = *(void (**)(void, void, void))(v43 + 104);
  uint64_t v30 = v44;
  v41(v42, enum case for CallbackScope.any(_:), v44);
  dispatch thunk of CallbackRegistrationType.whenResolving<A>(_:scope:callback:)();
  uint64_t v31 = *(void (**)(uint64_t))(v28 + 8);
  uint64_t v32 = sub_1001A1260();
  v31(v32);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v45);
  ProxyContainer.callback.getter();
  sub_1001B1E64(v45, v46);
  sub_10017DF08(&qword_100E6F440);
  v41(v29, v27, v30);
  dispatch thunk of CallbackRegistrationType.whenResolving<A>(_:scope:callback:)();
  uint64_t v33 = sub_1001A1260();
  v31(v33);
  return _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v45);
}

uint64_t sub_1000905FC(uint64_t a1)
{
  uint64_t v22 = type metadata accessor for Container.TestSuite();
  uint64_t v20 = *(void *)(v22 - 8);
  __chkstk_darwin(v22);
  uint64_t v21 = (char *)&v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for Scope();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for AppStateMonitor();
  RegistrationContainer.register<A>(_:name:factory:)();
  uint64_t v7 = enum case for Scope.containerSingleton(_:);
  uint64_t v8 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 104);
  v8(v6, enum case for Scope.containerSingleton(_:), v3);
  Definition.inScope(_:)();
  swift_release();
  swift_release();
  uint64_t v9 = *(void (**)(char *, uint64_t))(v4 + 8);
  v9(v6, v3);
  type metadata accessor for AppConfigurationMonitor();
  RegistrationContainer.register<A>(_:name:factory:)();
  v8(v6, v7, v3);
  Definition.inScope(_:)();
  swift_release();
  swift_release();
  v9(v6, v3);
  type metadata accessor for AppLaunchCountMonitor();
  RegistrationContainer.register<A>(_:name:factory:)();
  v8(v6, v7, v3);
  Definition.inScope(_:)();
  swift_release();
  swift_release();
  v9(v6, v3);
  type metadata accessor for CountryCodeConfigurationMonitor();
  RegistrationContainer.register<A>(_:name:factory:)();
  v8(v6, v7, v3);
  Definition.inScope(_:)();
  swift_release();
  swift_release();
  v9(v6, v3);
  type metadata accessor for CurrentLocationMonitor();
  RegistrationContainer.register<A>(_:name:factory:)();
  v8(v6, v7, v3);
  Definition.inScope(_:)();
  swift_release();
  swift_release();
  v9(v6, v3);
  type metadata accessor for LocationOfInterestMonitor();
  RegistrationContainer.register<A>(_:name:factory:)();
  uint64_t v10 = enum case for Scope.singleton(_:);
  v8(v6, enum case for Scope.singleton(_:), v3);
  Definition.inScope(_:)();
  swift_release();
  swift_release();
  v9(v6, v3);
  type metadata accessor for LocaleMonitor();
  RegistrationContainer.register<A>(_:name:factory:)();
  v8(v6, v7, v3);
  Definition.inScope(_:)();
  swift_release();
  swift_release();
  v9(v6, v3);
  type metadata accessor for LocationAuthorizationMonitor();
  RegistrationContainer.register<A>(_:name:factory:)();
  v8(v6, v7, v3);
  Definition.inScope(_:)();
  swift_release();
  swift_release();
  v9(v6, v3);
  type metadata accessor for NetworkConnectivityMonitor();
  RegistrationContainer.register<A>(_:name:factory:)();
  v8(v6, v7, v3);
  Definition.inScope(_:)();
  swift_release();
  swift_release();
  v9(v6, v3);
  type metadata accessor for NotificationAuthorizationMonitor();
  RegistrationContainer.register<A>(_:name:factory:)();
  unsigned int v19 = v10;
  v8(v6, v10, v3);
  Definition.inScope(_:)();
  swift_release();
  swift_release();
  v9(v6, v3);
  type metadata accessor for NotificationsOptInMonitor();
  RegistrationContainer.register<A>(_:name:factory:)();
  v8(v6, v7, v3);
  Definition.inScope(_:)();
  swift_release();
  swift_release();
  v9(v6, v3);
  type metadata accessor for NotificationSubscriptionMonitor();
  RegistrationContainer.register<A>(_:name:factory:)();
  v8(v6, v10, v3);
  Definition.inScope(_:)();
  swift_release();
  swift_release();
  v9(v6, v3);
  type metadata accessor for AccessibilitySettingsMonitor();
  RegistrationContainer.register<A>(_:name:factory:)();
  v8(v6, v7, v3);
  Definition.inScope(_:)();
  swift_release();
  swift_release();
  v9(v6, v3);
  type metadata accessor for ReportWeatherMonitor();
  RegistrationContainer.register<A>(_:name:factory:)();
  v8(v6, v7, v3);
  Definition.inScope(_:)();
  swift_release();
  swift_release();
  v9(v6, v3);
  type metadata accessor for SavedLocationsMonitor();
  RegistrationContainer.register<A>(_:name:factory:)();
  v8(v6, v7, v3);
  Definition.inScope(_:)();
  swift_release();
  swift_release();
  v9(v6, v3);
  type metadata accessor for SettingsMonitor();
  RegistrationContainer.register<A>(_:name:factory:)();
  unsigned int v18 = v7;
  v8(v6, v7, v3);
  Definition.inScope(_:)();
  swift_release();
  swift_release();
  v9(v6, v3);
  uint64_t v17 = v9;
  type metadata accessor for SidebarVisibilityMonitor();
  uint64_t v16 = a1;
  RegistrationContainer.register<A>(_:name:factory:)();
  v8(v6, v7, v3);
  Definition.inScope(_:)();
  swift_release();
  swift_release();
  v9(v6, v3);
  sub_10017DF08(&qword_100EB3AA0);
  RegistrationContainer.register<A>(_:name:factory:)();
  uint64_t v11 = v20;
  uint64_t v12 = v21;
  uint64_t v13 = v22;
  (*(void (**)(char *, void, uint64_t))(v20 + 104))(v21, enum case for Container.TestSuite.performance(_:), v22);
  Definition.whenTesting(_:_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v12, v13);
  v8(v6, v18, v3);
  Definition.inScope(_:)();
  swift_release();
  swift_release();
  uint64_t v14 = (uint64_t (*)(char *, uint64_t))v17;
  v17(v6, v3);
  type metadata accessor for UserNotificationMonitor();
  RegistrationContainer.register<A>(_:name:factory:)();
  v8(v6, v19, v3);
  Definition.inScope(_:)();
  swift_release();
  swift_release();
  return v14(v6, v3);
}

uint64_t sub_1000910D4(uint64_t a1, unsigned int *a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v8 = type metadata accessor for Domain();
  sub_100179C0C();
  uint64_t v10 = v9;
  __chkstk_darwin(v11);
  uint64_t v13 = &v17[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  type metadata accessor for Access();
  sub_100179C0C();
  __chkstk_darwin(v14);
  sub_10011C760();
  (*(void (**)(uint64_t, void))(v15 + 104))(v5, *a2);
  (*(void (**)(unsigned char *, void, uint64_t))(v10 + 104))(v13, enum case for Domain.standard(_:), v8);
  v17[15] = 0;
  sub_10017DF08(&qword_100E70818);
  swift_allocObject();
  uint64_t result = Setting.init(_:defaultValue:domain:access:)();
  *a5 = result;
  return result;
}

uint64_t sub_10009122C(char *a1, uint64_t (*a2)(uint64_t, char *))
{
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = sub_10017DF08(&qword_100E6B790);
  return a2(v4, &a1[*(int *)(v5 + 48)]);
}

uint64_t sub_100091290@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void (**a3)(char *, uint64_t)@<X8>)
{
  uint64_t v7 = *(void *)(type metadata accessor for DailyComponentView(0) - 8);
  unint64_t v8 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  unint64_t v9 = (*(void *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v10 = (v9 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v11 = (v10 + 23) & 0xFFFFFFFFFFFFFFF8;
  double v12 = *(double *)(v3 + v9);
  double v13 = *(double *)(v3 + v9 + 8);
  double v14 = *(double *)(v3 + v10);
  double v15 = *(double *)(v3 + v10 + 8);
  double v16 = *(double *)(v3 + v11);
  uint64_t v17 = *(void *)(v3 + ((v10 + 39) & 0xFFFFFFFFFFFFFFF8));
  int v18 = *(unsigned __int8 *)(v3 + v11 + 8);

  return sub_100144A7C(a1, a2, v3 + v8, v18, v17, a3, v12, v13, v14, v15, v16);
}

uint64_t sub_100091378(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)a2;
  char v7 = *(unsigned char *)(a2 + 8);
  sub_100195B7C(*(void *)a2, v7);
  uint64_t v8 = *(void *)a1;
  char v9 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v6;
  *(unsigned char *)(a1 + 8) = v7;
  sub_10018F6D8(v8, v9);
  *(unsigned char *)(a1 + 9) = *(unsigned char *)(a2 + 9);
  uint64_t v10 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v11 = v10 + 24;
  uint64_t v12 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = (v12 + 10 + a1) & ~v12;
  uint64_t v14 = (v12 + 10 + a2) & ~v12;
  (*(void (**)(uint64_t, uint64_t))(v10 + 24))(v13, v14);
  uint64_t v15 = *(void *)(v11 + 40) + 7;
  double v16 = (void *)((v15 + v13) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v17 = (void *)((v15 + v14) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v18 = v17[1];
  *double v16 = *v17;
  v16[1] = v18;
  swift_retain();
  swift_release();
  unint64_t v19 = ((unint64_t)v16 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v20 = ((unint64_t)v17 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v21 = *(void *)v20;
  uint64_t v22 = *(void *)(v20 + 8);
  LOBYTE(v16) = *(unsigned char *)(v20 + 16);
  sub_100190CC4(*(void *)v20, v22, (char)v16);
  uint64_t v23 = *(void *)v19;
  uint64_t v24 = *(void *)(v19 + 8);
  char v25 = *(unsigned char *)(v19 + 16);
  *(void *)unint64_t v19 = v21;
  *(void *)(v19 + 8) = v22;
  *(unsigned char *)(v19 + 16) = (_BYTE)v16;
  sub_100191924(v23, v24, v25);
  *(void *)(v19 + 24) = *(void *)(v20 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  unint64_t v26 = (v19 + 39) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v27 = (v20 + 39) & 0xFFFFFFFFFFFFFFF8;
  *(unsigned char *)unint64_t v26 = *(unsigned char *)v27;
  *(void *)(v26 + 8) = *(void *)(v27 + 8);
  swift_retain();
  swift_release();
  uint64_t v28 = type metadata accessor for Date();
  uint64_t v29 = *(void *)(v28 - 8);
  uint64_t v30 = *(_DWORD *)(v29 + 80) & 0xF8;
  uint64_t v31 = v30 + 23;
  unint64_t v32 = v30 + 23 + v26;
  unint64_t v33 = ~v30 & 0xFFFFFFFFFFFFFFF8;
  uint64_t v34 = v32 & v33;
  uint64_t v35 = (v31 + v27) & v33;
  LODWORD(v20) = _s7Weather24LocationCompositionStateOwet_0(v32 & v33, 1, v28);
  int v36 = _s7Weather24LocationCompositionStateOwet_0(v35, 1, v28);
  if (v20)
  {
    if (!v36)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v29 + 16))(v34, v35, v28);
      _s7Weather24LocationCompositionStateOwst_0(v34, 0, 1, v28);
      goto LABEL_12;
    }
    int v37 = *(_DWORD *)(v29 + 84);
    size_t v38 = *(void *)(v29 + 64);
  }
  else
  {
    if (!v36)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v29 + 24))(v34, v35, v28);
      goto LABEL_12;
    }
    (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v34, v28);
    int v37 = *(_DWORD *)(v29 + 84);
    size_t v38 = *(void *)(v29 + 64);
  }
  if (v37) {
    size_t v39 = v38;
  }
  else {
    size_t v39 = v38 + 1;
  }
  memcpy((void *)v34, (const void *)v35, v39);
LABEL_12:
  if (*(_DWORD *)(v29 + 84)) {
    uint64_t v40 = *(void *)(v29 + 64);
  }
  else {
    uint64_t v40 = *(void *)(v29 + 64) + 1;
  }
  *(void *)(((v34 | 7) + v40) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((v35 | 7) + v40) & 0xFFFFFFFFFFFFFFF8);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t initializeWithCopy for LocationViewerView(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = a2 + 16;
  long long v6 = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 40) = v6;
  uint64_t v7 = v6;
  uint64_t v8 = **(void (***)(uint64_t, uint64_t, uint64_t))(v6 - 8);
  swift_retain();
  swift_retain();
  v8(a1 + 16, v5, v7);
  *(void *)(a1 + 56) = *(void *)(v2 + 56);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(v2 + 64);
  long long v9 = *(_OWORD *)(v2 + 104);
  *(_OWORD *)(a1 + 104) = v9;
  uint64_t v10 = v9;
  uint64_t v11 = **(void (***)(uint64_t, uint64_t, uint64_t))(v9 - 8);
  swift_unknownObjectRetain();
  v11(a1 + 80, v2 + 80, v10);
  long long v12 = *(_OWORD *)(v2 + 144);
  *(_OWORD *)(a1 + 144) = v12;
  (**(void (***)(uint64_t, uint64_t))(v12 - 8))(a1 + 120, v2 + 120);
  uint64_t v13 = *(void *)(v2 + 168);
  *(void *)(a1 + 160) = *(void *)(v2 + 160);
  LOBYTE(v2) = *(unsigned char *)(v2 + 176);
  swift_retain();
  sub_100195B7C(v13, v2);
  *(void *)(a1 + 168) = v13;
  *(unsigned char *)(a1 + 176) = v2;
  return a1;
}

uint64_t sub_1000917D4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t v2 = sub_10017DF08(&qword_100E94AE8);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for MainViewModel(0);
  uint64_t v6 = v5 - 8;
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for MainViewModel.ModalModule(0);
  uint64_t v10 = __chkstk_darwin(v9);
  long long v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v16 - v13;
  swift_retain();
  sub_1001BFFC8();
  swift_release();
  sub_10006DF38((uint64_t)&v8[*(int *)(v6 + 32)], (uint64_t)v4, &qword_100E94AE8);
  sub_1001BFF70((uint64_t)v8, (void (*)(void))type metadata accessor for MainViewModel);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v4, 1, v9) == 1)
  {
    uint64_t result = sub_1001781AC((uint64_t)v4, &qword_100E94AE8);
  }
  else
  {
    sub_1001BE1F4((uint64_t)v4, (uint64_t)v14, (void (*)(void))type metadata accessor for MainViewModel.ModalModule);
    sub_1001BE268((uint64_t)v14, (uint64_t)v12, (void (*)(void))type metadata accessor for MainViewModel.ModalModule);
    if (swift_getEnumCaseMultiPayload() == 1) {
      sub_1001BFF70((uint64_t)v12, (void (*)(void))type metadata accessor for MainViewModel.ModalModule);
    }
    uint64_t result = sub_1001BFF70((uint64_t)v14, (void (*)(void))type metadata accessor for MainViewModel.ModalModule);
  }
  *a1 = 0;
  return result;
}

void *sub_100091A24(uint64_t a1, uint64_t a2)
{
  uint64_t v72 = a2;
  uint64_t v4 = sub_10017DF08(&qword_100EAC4A0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)v58 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10017DF08(&qword_100E63508);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  uint64_t v10 = (char *)v58 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v74 = (uint64_t)v58 - v11;
  uint64_t v12 = sub_10017DF08(&qword_100E639E8);
  uint64_t v13 = __chkstk_darwin(v12 - 8);
  uint64_t v66 = (char *)v58 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  Swift::String v67 = (char *)v58 - v15;
  uint64_t v76 = type metadata accessor for Location();
  uint64_t v16 = *(void *)(v76 - 8);
  uint64_t v17 = __chkstk_darwin(v76);
  unint64_t v71 = (char *)v58 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v73 = (char *)v58 - v19;
  uint64_t v70 = type metadata accessor for NotificationSubscription.Location();
  uint64_t v20 = *(void *)(v70 - 8);
  uint64_t v21 = __chkstk_darwin(v70);
  uint64_t v69 = (char *)v58 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = __chkstk_darwin(v21);
  unint64_t v65 = (char *)v58 - v24;
  __chkstk_darwin(v23);
  uint64_t v64 = (char *)v58 - v25;
  uint64_t v26 = *(void *)(a1 + 16);
  if (v26)
  {
    v58[2] = v2;
    uint64_t v27 = *(void *)(type metadata accessor for SavedLocation() - 8);
    uint64_t v28 = v20;
    uint64_t v29 = a1 + ((*(unsigned __int8 *)(v27 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80));
    uint64_t v30 = *(void *)(v27 + 72);
    unint64_t v60 = (void (**)(char *, char *, uint64_t))(v16 + 16);
    uint64_t v61 = (void (**)(char *, uint64_t, uint64_t))(v16 + 32);
    uint64_t v59 = (void (**)(char *, uint64_t))(v16 + 8);
    uint64_t v63 = v28;
    uint64_t v68 = (void (**)(char *, char *, uint64_t))(v28 + 32);
    v58[1] = a1;
    swift_bridgeObjectRetain();
    unint64_t v75 = &_swiftEmptyArrayStorage;
    uint64_t v31 = (uint64_t)v67;
    uint64_t v62 = v30;
    do
    {
      SavedLocation.location.getter();
      uint64_t v32 = v76;
      if (_s7Weather24LocationCompositionStateOwet_0(v31, 1, v76) == 1)
      {
        sub_1001781AC(v31, &qword_100E639E8);
      }
      else
      {
        (*v61)(v73, v31, v32);
        SavedLocation.id.getter();
        if (*(void *)(v72 + 16) && (unint64_t v33 = sub_1001D23B8(), (v34 & 1) != 0))
        {
          unint64_t v35 = v33;
          int v36 = v10;
          int v37 = v6;
          uint64_t v38 = *(void *)(v72 + 56);
          uint64_t v39 = type metadata accessor for LocationModel();
          uint64_t v40 = *(void *)(v39 - 8);
          uint64_t v41 = v38 + *(void *)(v40 + 72) * v35;
          uint64_t v6 = v37;
          uint64_t v10 = v36;
          (*(void (**)(char *, uint64_t, uint64_t))(v40 + 16))(v6, v41, v39);
          uint64_t v42 = (uint64_t)v6;
          uint64_t v43 = 0;
        }
        else
        {
          uint64_t v39 = type metadata accessor for LocationModel();
          uint64_t v42 = (uint64_t)v6;
          uint64_t v43 = 1;
        }
        _s7Weather24LocationCompositionStateOwst_0(v42, v43, 1, v39);
        swift_bridgeObjectRelease();
        type metadata accessor for LocationModel();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v6, 1, v39) == 1)
        {
          sub_1001781AC((uint64_t)v6, &qword_100EAC4A0);
          uint64_t v44 = type metadata accessor for LocationOfInterest();
          _s7Weather24LocationCompositionStateOwst_0(v74, 1, 1, v44);
        }
        else
        {
          LocationModel.locationOfInterest.getter();
          (*(void (**)(char *, uint64_t))(*(void *)(v39 - 8) + 8))(v6, v39);
        }
        uint64_t v45 = (uint64_t)v66;
        uint64_t v46 = v76;
        (*v60)(v71, v73, v76);
        sub_10006DF38(v74, (uint64_t)v10, &qword_100E63508);
        uint64_t v47 = type metadata accessor for LocationOfInterest();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v10, 1, v47) == 1)
        {
          sub_1001781AC((uint64_t)v10, &qword_100E63508);
          uint64_t v48 = 1;
        }
        else
        {
          LocationOfInterest.location.getter();
          uint64_t v46 = v76;
          (*(void (**)(char *, uint64_t))(*(void *)(v47 - 8) + 8))(v10, v47);
          uint64_t v48 = 0;
        }
        _s7Weather24LocationCompositionStateOwst_0(v45, v48, 1, v46);
        uint64_t v49 = v65;
        NotificationSubscription.Location.init(location:locationOverride:)();
        sub_1001781AC(v74, &qword_100E63508);
        (*v59)(v73, v46);
        unint64_t v50 = *v68;
        char v51 = v64;
        uint64_t v52 = v70;
        (*v68)(v64, v49, v70);
        v50(v69, v51, v52);
        if (swift_isUniquelyReferenced_nonNull_native())
        {
          uint64_t v30 = v62;
          uint64_t v53 = v75;
        }
        else
        {
          uint64_t v53 = (void *)sub_100092180(0, v75[2] + 1, 1, (uint64_t)v75);
          uint64_t v30 = v62;
        }
        unint64_t v55 = v53[2];
        unint64_t v54 = v53[3];
        if (v55 >= v54 >> 1) {
          uint64_t v53 = (void *)sub_100092180(v54 > 1, v55 + 1, 1, (uint64_t)v53);
        }
        v53[2] = v55 + 1;
        unint64_t v56 = (*(unsigned __int8 *)(v63 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v63 + 80);
        unint64_t v75 = v53;
        v50((char *)v53 + v56 + *(void *)(v63 + 72) * v55, v69, v70);
        uint64_t v31 = (uint64_t)v67;
      }
      v29 += v30;
      --v26;
    }
    while (v26);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v75;
  }
  else
  {
    swift_bridgeObjectRelease();
    return &_swiftEmptyArrayStorage;
  }
}

uint64_t sub_100092180(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10018ACAC(a1, a2, a3, a4, (uint64_t)&unk_100E86DA0, (uint64_t (*)(void))&type metadata accessor for NotificationSubscription.Location, (void (*)(void))&type metadata accessor for NotificationSubscription.Location);
}

uint64_t *sub_1000921C8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(a3 + 24);
  uint64_t v7 = *(void *)(v6 - 8);
  int v8 = *(_DWORD *)(v7 + 80);
  uint64_t v9 = v8;
  uint64_t v10 = *(void *)(v5 + 64) + v8;
  int v11 = *(_DWORD *)(v5 + 80) | v8;
  uint64_t v12 = v11;
  int v13 = v11 & 0x100000;
  if (v12 > 7 || v13 != 0 || (v10 & (unint64_t)~v9) + *(void *)(v7 + 64) > 0x18)
  {
    uint64_t v16 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v16 + ((v12 + 16) & ~v12));
    swift_retain();
  }
  else
  {
    uint64_t v17 = ~v9;
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v7 + 16))(((unint64_t)v4 + v10) & v17, ((unint64_t)a2 + v10) & v17, v6);
  }
  return v4;
}

uint64_t sub_100092324(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v4 = a2;
  uint64_t v6 = *(void *)a2;
  char v7 = *(unsigned char *)(a2 + 8);
  sub_100195B7C(*(void *)a2, v7);
  uint64_t v8 = *(void *)a1;
  char v9 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v6;
  *(unsigned char *)(a1 + 8) = v7;
  sub_10018F6D8(v8, v9);
  uint64_t v10 = *(void *)(v4 + 16);
  char v11 = *(unsigned char *)(v4 + 24);
  sub_100195B7C(v10, v11);
  uint64_t v12 = *(void *)(a1 + 16);
  char v13 = *(unsigned char *)(a1 + 24);
  *(void *)(a1 + 16) = v10;
  *(unsigned char *)(a1 + 24) = v11;
  sub_10018F6D8(v12, v13);
  uint64_t v14 = a3[6];
  uint64_t v15 = (void *)(a1 + v14);
  uint64_t v16 = v4 + v14;
  v239 = a3;
  if (a1 != v4)
  {
    sub_1001F75CC();
    type metadata accessor for LocationComponentHeaderViewModel(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        *uint64_t v15 = *(void *)v16;
        v15[1] = *(void *)(v16 + 8);
        void v15[2] = *(void *)(v16 + 16);
        void v15[3] = *(void *)(v16 + 24);
        void v15[4] = *(void *)(v16 + 32);
        v15[5] = *(void *)(v16 + 40);
        v15[6] = *(void *)(v16 + 48);
        v15[7] = *(void *)(v16 + 56);
        *((unsigned char *)v15 + 64) = *(unsigned char *)(v16 + 64);
        v15[9] = *(void *)(v16 + 72);
        v15[10] = *(void *)(v16 + 80);
        *((unsigned char *)v15 + 88) = *(unsigned char *)(v16 + 88);
        swift_bridgeObjectRetain();
        goto LABEL_9;
      case 2u:
        *uint64_t v15 = *(void *)v16;
        v15[1] = *(void *)(v16 + 8);
        void v15[2] = *(void *)(v16 + 16);
        void v15[3] = *(void *)(v16 + 24);
        void v15[4] = *(void *)(v16 + 32);
        v15[5] = *(void *)(v16 + 40);
        v15[6] = *(void *)(v16 + 48);
        v15[7] = *(void *)(v16 + 56);
        v15[8] = *(void *)(v16 + 64);
        v15[9] = *(void *)(v16 + 72);
        v15[10] = *(void *)(v16 + 80);
        v15[11] = *(void *)(v16 + 88);
        *((unsigned char *)v15 + 96) = *(unsigned char *)(v16 + 96);
        v15[13] = *(void *)(v16 + 104);
        v15[14] = *(void *)(v16 + 112);
        *((unsigned char *)v15 + 120) = *(unsigned char *)(v16 + 120);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_8;
      case 3u:
        uint64_t v17 = type metadata accessor for WeatherDescription();
        (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
        uint64_t v18 = type metadata accessor for LocationComponentHeaderViewModel.Description(0);
        uint64_t v19 = *(int *)(v18 + 20);
        uint64_t v20 = (char *)v15 + v19;
        uint64_t v21 = v16 + v19;
        *(void *)uint64_t v20 = *(void *)v21;
        *((void *)v20 + 1) = *(void *)(v21 + 8);
        *((void *)v20 + 2) = *(void *)(v21 + 16);
        *((void *)v20 + 3) = *(void *)(v21 + 24);
        v20[32] = *(unsigned char *)(v21 + 32);
        *((void *)v20 + 5) = *(void *)(v21 + 40);
        *((void *)v20 + 6) = *(void *)(v21 + 48);
        *((unsigned char *)v15 + *(int *)(v18 + 24)) = *(unsigned char *)(v16 + *(int *)(v18 + 24));
        break;
      case 5u:
        *uint64_t v15 = *(void *)v16;
        v15[1] = *(void *)(v16 + 8);
        void v15[2] = *(void *)(v16 + 16);
        void v15[3] = *(void *)(v16 + 24);
        void v15[4] = *(void *)(v16 + 32);
        v15[5] = *(void *)(v16 + 40);
        v15[6] = *(void *)(v16 + 48);
        v15[7] = *(void *)(v16 + 56);
        v15[8] = *(void *)(v16 + 64);
        v15[9] = *(void *)(v16 + 72);
        v15[10] = *(void *)(v16 + 80);
        v15[11] = *(void *)(v16 + 88);
        v15[12] = *(void *)(v16 + 96);
        *((unsigned char *)v15 + 104) = *(unsigned char *)(v16 + 104);
        v15[14] = *(void *)(v16 + 112);
        v15[15] = *(void *)(v16 + 120);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
LABEL_8:
        swift_bridgeObjectRetain();
LABEL_9:
        swift_bridgeObjectRetain();
        break;
      default:
        *uint64_t v15 = *(void *)v16;
        v15[1] = *(void *)(v16 + 8);
        void v15[2] = *(void *)(v16 + 16);
        void v15[3] = *(void *)(v16 + 24);
        *((unsigned char *)v15 + 32) = *(unsigned char *)(v16 + 32);
        v15[5] = *(void *)(v16 + 40);
        v15[6] = *(void *)(v16 + 48);
        break;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v22 = type metadata accessor for LocationComponentContainerViewModel();
  uint64_t v23 = v22;
  if (a1 != v4)
  {
    uint64_t v24 = *(int *)(v22 + 20);
    uint64_t v25 = (void *)((char *)v15 + v24);
    uint64_t v26 = (void *)(v16 + v24);
    sub_1001F75CC();
    uint64_t v27 = type metadata accessor for LocationComponentViewModel();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        *uint64_t v25 = *v26;
        *(_OWORD *)(v25 + 1) = *(_OWORD *)(v26 + 1);
        v25[3] = v26[3];
        unsigned char v25[4] = v26[4];
        v25[5] = v26[5];
        v25[6] = v26[6];
        v25[7] = v26[7];
        v25[8] = v26[8];
        v25[9] = v26[9];
        v25[10] = v26[10];
        v25[11] = v26[11];
        *((unsigned char *)v25 + 96) = *((unsigned char *)v26 + 96);
        *((unsigned char *)v25 + 97) = *((unsigned char *)v26 + 97);
        v25[13] = v26[13];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_71;
      case 1u:
        *uint64_t v25 = *v26;
        uint64_t v28 = (int *)type metadata accessor for DailyForecastComponentViewModel(0);
        uint64_t v29 = v28[5];
        v217 = (char *)v25 + v29;
        uint64_t v30 = (char *)v26 + v29;
        swift_bridgeObjectRetain();
        uint64_t v31 = sub_10017DF08(&qword_100E65250);
        uint64_t v236 = v4;
        uint64_t v32 = *(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16);
        unint64_t v33 = v30;
        a3 = v239;
        v32(v217, v33, v31);
        v32((char *)v25 + v28[6], (char *)v26 + v28[6], v31);
        v32((char *)v25 + v28[7], (char *)v26 + v28[7], v31);
        uint64_t v4 = v236;
        uint64_t v34 = v28[8];
        unint64_t v35 = (void *)((char *)v25 + v34);
        int v36 = (void *)((char *)v26 + v34);
        void *v35 = *v36;
        v35[1] = v36[1];
        uint64_t v37 = v28[9];
        uint64_t v38 = (void *)((char *)v25 + v37);
        uint64_t v39 = (void *)((char *)v26 + v37);
        *uint64_t v38 = *v39;
        v38[1] = v39[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_71;
      case 2u:
        *uint64_t v25 = *v26;
        v25[1] = v26[1];
        v25[2] = v26[2];
        v25[3] = v26[3];
        uint64_t v40 = type metadata accessor for FeelsLikeComponentViewModel(0);
        uint64_t v41 = *(int *)(v40 + 24);
        __dst = (void *)((char *)v25 + v41);
        uint64_t v211 = v40;
        v218 = (void *)((char *)v26 + v41);
        uint64_t v42 = type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference(0);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v218, 1, v42))
        {
          uint64_t v43 = sub_10017DF08(&qword_100E63750);
          memcpy(__dst, v218, *(void *)(*(void *)(v43 - 8) + 64));
        }
        else
        {
          void *__dst = *v218;
          __dst[1] = v218[1];
          uint64_t v209 = v42;
          uint64_t v92 = *(int *)(v42 + 20);
          uint64_t v93 = (char *)__dst + v92;
          uint64_t v227 = v16;
          uint64_t v94 = (char *)v218 + v92;
          uint64_t v95 = type metadata accessor for TemperatureScaleConfiguration();
          v223 = *(void (**)(char *, char *, uint64_t))(*(void *)(v95 - 8) + 16);
          swift_bridgeObjectRetain();
          v223(v93, v94, v95);
          uint64_t v96 = (int *)type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
          *(void *)&v93[v96[5]] = *(void *)&v94[v96[5]];
          *(void *)&v93[v96[6]] = *(void *)&v94[v96[6]];
          *(void *)&v93[v96[7]] = *(void *)&v94[v96[7]];
          uint64_t v97 = v96[8];
          uint64_t v98 = &v93[v97];
          uint64_t v99 = &v94[v97];
          *(void *)uint64_t v98 = *(void *)v99;
          *((void *)v98 + 1) = *((void *)v99 + 1);
          uint64_t v100 = v96[9];
          char v101 = v94[v100];
          uint64_t v16 = v227;
          v93[v100] = v101;
          swift_bridgeObjectRetain();
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dst, 0, 1, v209);
        }
        a3 = v239;
        uint64_t v102 = *(int *)(v211 + 28);
        uint64_t v103 = (void *)((char *)v25 + v102);
        uint64_t v104 = (void *)((char *)v26 + v102);
        *uint64_t v103 = *v104;
        v103[1] = v104[1];
        swift_bridgeObjectRetain();
        goto LABEL_71;
      case 3u:
        *uint64_t v25 = *v26;
        swift_bridgeObjectRetain();
        goto LABEL_71;
      case 4u:
        *uint64_t v25 = *v26;
        v25[1] = v26[1];
        v25[2] = v26[2];
        swift_bridgeObjectRetain();
        goto LABEL_71;
      case 5u:
        uint64_t v44 = type metadata accessor for WeatherMapOverlayKind();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v44 - 8) + 16))(v25, v26, v44);
        uint64_t v45 = type metadata accessor for MapComponentViewModel();
        uint64_t v46 = *(int *)(v45 + 20);
        __dstc = (char *)v25 + v46;
        uint64_t v47 = (char *)v26 + v46;
        uint64_t v48 = type metadata accessor for Location();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v48 - 8) + 16))(__dstc, v47, v48);
        uint64_t v219 = v45;
        uint64_t v49 = *(int *)(v45 + 24);
        __dsta = (void *)((char *)v25 + v49);
        unint64_t v50 = (void *)((char *)v26 + v49);
        uint64_t v51 = type metadata accessor for WeatherData(0);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v50, 1, v51))
        {
          uint64_t v52 = sub_10017DF08(&qword_100E63850);
          memcpy(__dsta, v50, *(void *)(*(void *)(v52 - 8) + 64));
          goto LABEL_70;
        }
        uint64_t v228 = v16;
        void *__dsta = *v50;
        __dsta[1] = v50[1];
        v210 = (int *)v51;
        v214 = v50;
        uint64_t v105 = *(int *)(v51 + 20);
        uint64_t v106 = (char *)__dsta + v105;
        uint64_t v107 = (char *)v50 + v105;
        uint64_t v108 = type metadata accessor for Locale();
        swift_bridgeObjectRetain();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v107, 1, v108))
        {
          uint64_t v109 = sub_10017DF08(&qword_100E63730);
          memcpy(v106, v107, *(void *)(*(void *)(v109 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v108 - 8) + 16))(v106, v107, v108);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v106, 0, 1, v108);
        }
        uint64_t v125 = v210[6];
        uint64_t v126 = (char *)__dsta + v125;
        v204 = (char *)v214 + v125;
        uint64_t v127 = type metadata accessor for WeatherDataModel();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v127 - 8) + 16))(v126, v204, v127);
        uint64_t v128 = v210[7];
        uint64_t v129 = (char *)__dsta + v128;
        uint64_t v130 = (char *)v214 + v128;
        uint64_t v131 = sub_10017DF08(&qword_100E63738);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v130, 1, v131))
        {
          uint64_t v132 = type metadata accessor for WeatherData.CachingState(0);
          memcpy(v129, v130, *(void *)(*(void *)(v132 - 8) + 64));
        }
        else
        {
          uint64_t v133 = type metadata accessor for Date();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v133 - 8) + 16))(v129, v130, v133);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v129, 0, 1, v131);
        }
        uint64_t v134 = v210[8];
        v205 = (void *)((char *)__dsta + v134);
        uint64_t v135 = (void *)((char *)v214 + v134);
        uint64_t v136 = (char *)v214 + v134;
        uint64_t v201 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload == 1)
        {
          uint64_t v138 = type metadata accessor for WeatherStatisticsModel();
          (*(void (**)(void *, char *, uint64_t))(*(void *)(v138 - 8) + 16))(v205, v136, v138);
          goto LABEL_58;
        }
        if (!EnumCaseMultiPayload)
        {
          void *v205 = *v135;
          v205[1] = v135[1];
          swift_bridgeObjectRetain();
LABEL_58:
          swift_storeEnumTagMultiPayload();
          goto LABEL_60;
        }
        memcpy(v205, v136, *(void *)(*(void *)(v201 - 8) + 64));
LABEL_60:
        uint64_t v139 = v210[9];
        uint64_t v140 = (char *)__dsta + v139;
        uint64_t v141 = (char *)v214 + v139;
        uint64_t v142 = type metadata accessor for WeatherDataOverrides();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v141, 1, v142))
        {
          uint64_t v143 = sub_10017DF08(&qword_100E63740);
          memcpy(v140, v141, *(void *)(*(void *)(v143 - 8) + 64));
          a3 = v239;
          uint64_t v144 = (uint64_t)v210;
        }
        else
        {
          uint64_t v216 = v142;
          uint64_t v145 = v140;
          uint64_t v146 = type metadata accessor for Date();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v141, 1, v146))
          {
            uint64_t v147 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
            memcpy(v140, v141, *(void *)(*(void *)(v147 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v146 - 8) + 16))(v140, v141, v146);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v140, 0, 1, v146);
          }
          uint64_t v144 = (uint64_t)v210;
          uint64_t v148 = *(int *)(v216 + 20);
          uint64_t v206 = (uint64_t)v145;
          uint64_t v149 = &v145[v148];
          uint64_t v150 = &v141[v148];
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v150, 1, v146))
          {
            uint64_t v151 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
            memcpy(v149, v150, *(void *)(*(void *)(v151 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v146 - 8) + 16))(v149, v150, v146);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v149, 0, 1, v146);
          }
          _s7Weather24LocationCompositionStateOwst_0(v206, 0, 1, v216);
          a3 = v239;
        }
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dsta, 0, 1, v144);
        uint64_t v16 = v228;
LABEL_70:
        uint64_t v152 = *(int *)(v219 + 28);
        uint64_t v153 = (void *)((char *)v25 + v152);
        uint64_t v154 = (void *)((char *)v26 + v152);
        *uint64_t v153 = *v154;
        v153[1] = v154[1];
        swift_bridgeObjectRetain();
LABEL_71:
        swift_storeEnumTagMultiPayload();
        break;
      case 6u:
        *uint64_t v25 = *v26;
        v25[1] = v26[1];
        int v53 = *((unsigned __int8 *)v26 + 32);
        swift_bridgeObjectRetain();
        uint64_t v237 = v4;
        uint64_t v225 = v16;
        if (v53 == 255)
        {
          long long v110 = *((_OWORD *)v26 + 1);
          *((unsigned char *)v25 + 32) = *((unsigned char *)v26 + 32);
          *((_OWORD *)v25 + 1) = v110;
        }
        else
        {
          uint64_t v54 = v26[2];
          uint64_t v55 = v26[3];
          sub_1001F3C64(v54, v55, v53);
          v25[2] = v54;
          v25[3] = v55;
          *((unsigned char *)v25 + 32) = v53;
        }
        v25[5] = v26[5];
        uint64_t v111 = (int *)type metadata accessor for MoonComponentViewModel();
        uint64_t v112 = v111[7];
        __dstf = (char *)v25 + v112;
        v224 = (char *)v26 + v112;
        uint64_t v113 = type metadata accessor for Date();
        int v114 = *(void (**)(char *, char *, uint64_t))(*(void *)(v113 - 8) + 16);
        swift_bridgeObjectRetain();
        v114(__dstf, v224, v113);
        *((unsigned char *)v25 + v111[8]) = *((unsigned char *)v26 + v111[8]);
        *(void *)((char *)v25 + v111[9]) = *(void *)((char *)v26 + v111[9]);
        swift_storeEnumTagMultiPayload();
        uint64_t v4 = v237;
        a3 = v239;
        uint64_t v16 = v225;
        break;
      case 7u:
        uint64_t v56 = type metadata accessor for NewsArticleComponentViewModel(0);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          *uint64_t v25 = *v26;
          v25[1] = v26[1];
          __dstb = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
          uint64_t v57 = __dstb[5];
          v212 = (char *)v25 + v57;
          uint64_t v58 = (char *)v26 + v57;
          uint64_t v202 = type metadata accessor for URL();
          swift_bridgeObjectRetain();
          uint64_t v226 = v16;
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v58, 1, v202))
          {
            uint64_t v59 = sub_10017DF08(&qword_100E749B0);
            memcpy(v212, v58, *(void *)(*(void *)(v59 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v202 - 8) + 16))(v212, v58, v202);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v212, 0, 1, v202);
          }
          uint64_t v115 = __dstb[6];
          uint64_t v116 = (void *)((char *)v25 + v115);
          uint64_t v117 = (void *)((char *)v26 + v115);
          *uint64_t v116 = *v117;
          v116[1] = v117[1];
          uint64_t v118 = __dstb[7];
          v215 = (char *)v25 + v118;
          int v119 = (char *)v26 + v118;
          long long v120 = *(void (**)(char *, char *, uint64_t))(*(void *)(v202 - 8) + 16);
          swift_bridgeObjectRetain();
          v120(v215, v119, v202);
          uint64_t v121 = __dstb[8];
          uint64_t v122 = (char *)v25 + v121;
          uint64_t v123 = (char *)v26 + v121;
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v26 + v121, 1, v202))
          {
            uint64_t v124 = sub_10017DF08(&qword_100E749B0);
            memcpy(v122, v123, *(void *)(*(void *)(v124 - 8) + 64));
          }
          else
          {
            v120(v122, v123, v202);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v122, 0, 1, v202);
          }
          uint64_t v16 = v226;
          *((unsigned char *)v25 + __dstb[9]) = *((unsigned char *)v26 + __dstb[9]);
          swift_storeEnumTagMultiPayload();
          a3 = v239;
        }
        else
        {
          memcpy(v25, v26, *(void *)(*(void *)(v56 - 8) + 64));
        }
        goto LABEL_71;
      case 8u:
        *uint64_t v25 = *v26;
        v25[1] = v26[1];
        uint64_t v60 = *(int *)(type metadata accessor for NextHourPrecipitationComponentViewModel() + 20);
        __dstd = (char *)v25 + v60;
        v220 = (char *)v26 + v60;
        uint64_t v238 = v4;
        uint64_t HourPrecipitationChartViewModel = type metadata accessor for NextHourPrecipitationChartViewModel();
        uint64_t v62 = *(void (**)(char *, char *, uint64_t))(*(void *)(HourPrecipitationChartViewModel - 8) + 16);
        swift_bridgeObjectRetain();
        uint64_t v63 = HourPrecipitationChartViewModel;
        uint64_t v4 = v238;
        v62(__dstd, v220, v63);
        goto LABEL_71;
      case 9u:
        uint64_t v64 = type metadata accessor for Location();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v64 - 8) + 16))(v25, v26, v64);
        uint64_t v65 = type metadata accessor for NotificationsOptInComponentViewModel();
        *((unsigned char *)v25 + *(int *)(v65 + 20)) = *((unsigned char *)v26 + *(int *)(v65 + 20));
        goto LABEL_71;
      case 0xAu:
        *uint64_t v25 = *v26;
        v25[1] = v26[1];
        v25[2] = v26[2];
        v25[3] = v26[3];
        unsigned char v25[4] = v26[4];
        v25[5] = v26[5];
        v25[6] = v26[6];
        v25[7] = v26[7];
        v25[8] = v26[8];
        v25[9] = v26[9];
        v25[10] = v26[10];
        v25[11] = v26[11];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_71;
      case 0xBu:
        uint64_t v66 = type metadata accessor for PressureTrend();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v66 - 8) + 16))(v25, v26, v66);
        Swift::String v67 = (int *)type metadata accessor for PressureComponentViewModel();
        uint64_t v68 = v67[5];
        uint64_t v69 = (void *)((char *)v25 + v68);
        uint64_t v70 = (void *)((char *)v26 + v68);
        *uint64_t v69 = *v70;
        v69[1] = v70[1];
        uint64_t v71 = v67[6];
        uint64_t v72 = (void *)((char *)v25 + v71);
        uint64_t v73 = (void *)((char *)v26 + v71);
        *uint64_t v72 = *v73;
        v72[1] = v73[1];
        uint64_t v74 = v67[7];
        unint64_t v75 = (void *)((char *)v25 + v74);
        uint64_t v76 = (void *)((char *)v26 + v74);
        *unint64_t v75 = *v76;
        v75[1] = v76[1];
        *(void *)((char *)v25 + v67[8]) = *(void *)((char *)v26 + v67[8]);
        uint64_t v77 = v67[9];
        uint64_t v78 = (void *)((char *)v25 + v77);
        uint64_t v79 = (void *)((char *)v26 + v77);
        *uint64_t v78 = *v79;
        v78[1] = v79[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_71;
      case 0xDu:
        *uint64_t v25 = *v26;
        v25[1] = v26[1];
        v25[2] = v26[2];
        v25[3] = v26[3];
        unsigned char v25[4] = v26[4];
        v25[5] = v26[5];
        v25[6] = v26[6];
        v25[7] = v26[7];
        v25[8] = v26[8];
        uint64_t v221 = type metadata accessor for SevereAlertComponentViewModel();
        uint64_t v80 = *(int *)(v221 + 36);
        v203 = (char *)v26 + v80;
        v207 = (char *)v25 + v80;
        __dste = v15;
        uint64_t v81 = v16;
        uint64_t v82 = type metadata accessor for WeatherAlert.Prominence();
        v200 = *(void (**)(char *, char *, uint64_t))(*(void *)(v82 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v83 = v82;
        uint64_t v16 = v81;
        uint64_t v15 = __dste;
        v200(v207, v203, v83);
        *(void *)((char *)v25 + *(int *)(v221 + 40)) = *(void *)((char *)v26 + *(int *)(v221 + 40));
        goto LABEL_71;
      case 0xEu:
        uint64_t v84 = type metadata accessor for SunriseSunsetViewModel();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v84 - 8) + 16))(v25, v26, v84);
        goto LABEL_71;
      case 0xFu:
        *uint64_t v25 = *v26;
        v25[1] = v26[1];
        v25[2] = v26[2];
        v25[3] = v26[3];
        unsigned char v25[4] = v26[4];
        v25[5] = v26[5];
        v25[6] = v26[6];
        v25[7] = v26[7];
        v25[8] = v26[8];
        v25[9] = v26[9];
        v25[10] = v26[10];
        v25[11] = v26[11];
        v25[12] = v26[12];
        v25[13] = v26[13];
        v25[14] = v26[14];
        v25[15] = v26[15];
        v25[16] = v26[16];
        v25[17] = v26[17];
        v25[18] = v26[18];
        v25[19] = v26[19];
        v25[20] = v26[20];
        v25[21] = v26[21];
        v25[22] = v26[22];
        v25[23] = v26[23];
        unsigned char v25[24] = v26[24];
        v25[25] = v26[25];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_71;
      case 0x10u:
        *uint64_t v25 = *v26;
        v25[1] = v26[1];
        v25[2] = v26[2];
        v25[3] = v26[3];
        uint64_t v85 = type metadata accessor for UVIndexComponentViewModel();
        uint64_t v86 = *(int *)(v85 + 28);
        v213 = (char *)v26 + v86;
        v222 = (char *)v25 + v86;
        uint64_t v87 = type metadata accessor for WeatherDescription();
        v208 = *(void (**)(char *, char *, uint64_t))(*(void *)(v87 - 8) + 16);
        swift_bridgeObjectRetain();
        uint64_t v88 = v87;
        a3 = v239;
        v208(v222, v213, v88);
        *(void *)((char *)v25 + *(int *)(v85 + 32)) = *(void *)((char *)v26 + *(int *)(v85 + 32));
        swift_bridgeObjectRetain();
        goto LABEL_71;
      case 0x11u:
        *uint64_t v25 = *v26;
        v25[1] = v26[1];
        v25[2] = v26[2];
        v25[3] = v26[3];
        unsigned char v25[4] = v26[4];
        v25[5] = v26[5];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_71;
      case 0x12u:
        *uint64_t v25 = *v26;
        v25[1] = v26[1];
        v25[2] = v26[2];
        v25[3] = v26[3];
        unsigned char v25[4] = v26[4];
        v25[5] = v26[5];
        v25[6] = v26[6];
        v25[7] = v26[7];
        v25[8] = v26[8];
        v25[9] = v26[9];
        v25[10] = v26[10];
        v25[11] = v26[11];
        v25[12] = v26[12];
        v25[13] = v26[13];
        v25[14] = v26[14];
        v25[15] = v26[15];
        v25[16] = v26[16];
        v25[17] = v26[17];
        v25[18] = v26[18];
        v25[19] = v26[19];
        v25[20] = v26[20];
        v25[21] = v26[21];
        v25[22] = v26[22];
        v25[23] = v26[23];
        unsigned char v25[24] = v26[24];
        uint64_t v89 = type metadata accessor for WindComponentViewModel();
        uint64_t v90 = *(int *)(v89 + 68);
        v198 = (char *)v25 + v90;
        uint64_t v199 = v89;
        v197 = (char *)v26 + v90;
        uint64_t v91 = type metadata accessor for WindComponentCompassViewModel();
        v196 = *(void (**)(char *, char *, uint64_t))(*(void *)(v91 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v196(v198, v197, v91);
        *(void *)((char *)v25 + *(int *)(v199 + 72)) = *(void *)((char *)v26 + *(int *)(v199 + 72));
        swift_bridgeObjectRetain();
        goto LABEL_71;
      default:
        memcpy(v25, v26, *(void *)(*(void *)(v27 - 8) + 64));
        break;
    }
  }
  *(_WORD *)((char *)v15 + *(int *)(v23 + 24)) = *(_WORD *)(v16 + *(int *)(v23 + 24));
  uint64_t v155 = *(int *)(v23 + 28);
  uint64_t v156 = (char *)v15 + v155;
  uint64_t v157 = (unsigned char *)(v16 + v155);
  uint64_t v158 = type metadata accessor for LocationComponentAction(0);
  int v159 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v156, 1, v158);
  int v160 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v157, 1, v158);
  if (v159)
  {
    if (!v160)
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          uint64_t v161 = type metadata accessor for URL();
          (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v161 - 8) + 16))(v156, v157, v161);
          uint64_t v162 = sub_10017DF08(&qword_100E66478);
          v156[*(int *)(v162 + 48)] = v157[*(int *)(v162 + 48)];
          goto LABEL_87;
        case 1u:
          uint64_t v166 = type metadata accessor for WeatherMapOverlayKind();
          (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v166 - 8) + 16))(v156, v157, v166);
          goto LABEL_87;
        case 2u:
          uint64_t v167 = type metadata accessor for DetailCondition();
          (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v167 - 8) + 16))(v156, v157, v167);
          uint64_t v168 = sub_10017DF08(&qword_100E66488);
          v156[*(int *)(v168 + 48)] = v157[*(int *)(v168 + 48)];
          goto LABEL_87;
        case 4u:
          *uint64_t v156 = *v157;
          uint64_t v169 = *(int *)(sub_10017DF08(&qword_100E66480) + 48);
          uint64_t v170 = &v156[v169];
          uint64_t v171 = &v157[v169];
          uint64_t v172 = type metadata accessor for Location();
          (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v172 - 8) + 16))(v170, v171, v172);
LABEL_87:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v156, v157, *(void *)(*(void *)(v158 - 8) + 64));
          break;
      }
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v156, 0, 1, v158);
      goto LABEL_94;
    }
    goto LABEL_78;
  }
  if (v160)
  {
    sub_1001F75CC();
LABEL_78:
    size_t v163 = *(void *)(*(void *)(sub_10017DF08(&qword_100E7AF78) - 8) + 64);
LABEL_79:
    memcpy(v156, v157, v163);
    goto LABEL_94;
  }
  if (a1 != v4)
  {
    sub_1001F75CC();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v164 = type metadata accessor for URL();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v164 - 8) + 16))(v156, v157, v164);
        uint64_t v165 = sub_10017DF08(&qword_100E66478);
        v156[*(int *)(v165 + 48)] = v157[*(int *)(v165 + 48)];
        break;
      case 1u:
        uint64_t v173 = type metadata accessor for WeatherMapOverlayKind();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v173 - 8) + 16))(v156, v157, v173);
        break;
      case 2u:
        uint64_t v174 = type metadata accessor for DetailCondition();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v174 - 8) + 16))(v156, v157, v174);
        uint64_t v175 = sub_10017DF08(&qword_100E66488);
        v156[*(int *)(v175 + 48)] = v157[*(int *)(v175 + 48)];
        break;
      case 4u:
        *uint64_t v156 = *v157;
        uint64_t v176 = *(int *)(sub_10017DF08(&qword_100E66480) + 48);
        uint64_t v177 = &v156[v176];
        uint64_t v178 = &v157[v176];
        uint64_t v179 = type metadata accessor for Location();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v179 - 8) + 16))(v177, v178, v179);
        break;
      default:
        size_t v163 = *(void *)(*(void *)(v158 - 8) + 64);
        goto LABEL_79;
    }
    swift_storeEnumTagMultiPayload();
  }
LABEL_94:
  uint64_t v180 = a3[7];
  uint64_t v181 = (void *)(a1 + v180);
  uint64_t v182 = (void *)(v4 + v180);
  uint64_t v183 = v182[1];
  *uint64_t v181 = *v182;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  v181[1] = v183;
  uint64_t v184 = a3[8];
  v185 = (void *)(a1 + v184);
  v186 = (void *)(v4 + v184);
  uint64_t v187 = v186[1];
  void *v185 = *v186;
  v185[1] = v187;
  swift_retain();
  swift_release();
  uint64_t v188 = a3[9];
  v189 = (void *)(a1 + v188);
  uint64_t v190 = (void *)(v4 + v188);
  void *v189 = *v190;
  v189[1] = v190[1];
  swift_retain();
  swift_release();
  uint64_t v191 = a3[10];
  uint64_t v192 = a1 + v191;
  uint64_t v193 = v4 + v191;
  *(void *)(a1 + v191) = *(void *)(v4 + v191);
  swift_retain();
  swift_release();
  *(void *)(v192 + 8) = *(void *)(v193 + 8);
  swift_retain();
  swift_release();
  long long v194 = *(_OWORD *)(v193 + 16);
  *(unsigned char *)(v192 + 32) = *(unsigned char *)(v193 + 32);
  *(_OWORD *)(v192 + 16) = v194;
  return a1;
}

uint64_t sub_10009428C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v24 = a2;
  uint64_t v4 = type metadata accessor for TranslationModifier(0);
  uint64_t v5 = v4 - 8;
  uint64_t v6 = *(void *)(v4 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10017DF08(&qword_100E644D8);
  __chkstk_darwin(v9);
  char v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_10017DF08(&qword_100E644E0);
  __chkstk_darwin(v23);
  char v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v14 = 1.0;
  if (*(unsigned char *)(v2 + *(int *)(v5 + 32)) == 1)
  {
    sub_100094578();
    double v14 = v15;
  }
  uint64_t v16 = sub_10017DF08(&qword_100E644E8);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 16))(v11, a1, v16);
  uint64_t v17 = (double *)&v11[*(int *)(v9 + 36)];
  *uint64_t v17 = 0.0;
  v17[1] = v14;
  sub_10014D0EC(v2, (uint64_t)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), (void (*)(void))type metadata accessor for TranslationModifier);
  unint64_t v18 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v19 = swift_allocObject();
  sub_10014DEEC((uint64_t)v8, v19 + v18, (void (*)(void))type metadata accessor for TranslationModifier);
  sub_10014D0EC(v2, (uint64_t)v8, (void (*)(void))type metadata accessor for TranslationModifier);
  uint64_t v20 = swift_allocObject();
  sub_10014DEEC((uint64_t)v8, v20 + v18, (void (*)(void))type metadata accessor for TranslationModifier);
  sub_10006DF38((uint64_t)v11, (uint64_t)v13, &qword_100E644D8);
  uint64_t v21 = (uint64_t (**)(uint64_t))&v13[*(int *)(v23 + 36)];
  *uint64_t v21 = sub_100213768;
  v21[1] = (uint64_t (*)(uint64_t))v19;
  void v21[2] = (uint64_t (*)(uint64_t))sub_10002DCC4;
  v21[3] = (uint64_t (*)(uint64_t))v20;
  sub_100178110((uint64_t)v11, &qword_100E644D8);
  return sub_10024D364((uint64_t)v13, v24, &qword_100E644E0);
}

uint64_t sub_100094578()
{
  uint64_t v1 = type metadata accessor for LocationHeaderViewMeasurements(0);
  __chkstk_darwin(v1);
  uint64_t v3 = (char *)v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  sub_1000E71B8();
  swift_release();
  double v4 = sub_1000E7380();
  swift_release();
  uint64_t result = type metadata accessor for TranslationModifier(0);
  if (v4 - *(double *)(v0 + *(int *)(result + 28)) > 0.0)
  {
    uint64_t v6 = result;
    sub_1000E72AC();
    swift_retain();
    sub_1000E71B8();
    swift_release();
    sub_1000E7380();
    swift_release();
    sub_1000E71D0((uint64_t *)&v3[*(int *)(v1 + 32)]);
    sub_10014CC74((uint64_t)v3, (void (*)(void))type metadata accessor for LocationHeaderViewMeasurements);
    uint64_t v7 = (uint64_t *)(v0 + *(int *)(v6 + 32));
    uint64_t v8 = *v7;
    uint64_t v9 = v7[1];
    v10[1] = v8;
    _OWORD v10[2] = v9;
    sub_10017DF08(&qword_100E64490);
    return State.wrappedValue.getter();
  }
  return result;
}

uint64_t sub_100094740@<X0>(uint64_t a1@<X8>)
{
  uint64_t v95 = a1;
  uint64_t v82 = sub_10017DF08(&qword_100E84398);
  uint64_t v2 = __chkstk_darwin(v82);
  uint64_t v76 = (char *)&v73 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v77 = (uint64_t)&v73 - v4;
  uint64_t v79 = sub_10017DF08(&qword_100E843A0);
  __chkstk_darwin(v79);
  uint64_t v81 = (uint64_t)&v73 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v94 = sub_10017DF08(&qword_100E843A8);
  __chkstk_darwin(v94);
  uint64_t v83 = (char *)&v73 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v80 = sub_10017DF08(&qword_100E843B0);
  __chkstk_darwin(v80);
  uint64_t v74 = (uint64_t)&v73 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10017DF08(&qword_100E65FA8);
  __chkstk_darwin(v8 - 8);
  unint64_t v75 = (char *)&v73 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v88 = sub_10017DF08(&qword_100E843B8);
  __chkstk_darwin(v88);
  uint64_t v78 = (uint64_t *)((char *)&v73 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v96 = sub_10017DF08(&qword_100E843C0);
  __chkstk_darwin(v96);
  uint64_t v93 = (uint64_t)&v73 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v90 = sub_10017DF08(&qword_100E843C8);
  __chkstk_darwin(v90);
  uint64_t v91 = (uint64_t)&v73 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v97 = sub_10017DF08(&qword_100E843D0);
  __chkstk_darwin(v97);
  uint64_t v92 = (char *)&v73 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for Color.RGBColorSpace();
  uint64_t v85 = *(void *)(v14 - 8);
  uint64_t v86 = v14;
  __chkstk_darwin(v14);
  uint64_t v84 = (char *)&v73 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for RoundedRectangle();
  __chkstk_darwin(v16);
  unint64_t v18 = (uint64_t *)((char *)&v73 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v19 = type metadata accessor for LocationComponentCornerRadiusConfiguration(0);
  __chkstk_darwin(v19);
  uint64_t v21 = (uint64_t *)((char *)&v73 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v89 = sub_10017DF08(&qword_100E802C8);
  uint64_t v22 = __chkstk_darwin(v89);
  uint64_t v24 = (char *)&v73 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  uint64_t v87 = (uint64_t *)((char *)&v73 - v25);
  uint64_t v26 = (int *)type metadata accessor for LocationComponentBackground(0);
  uint64_t v27 = v1;
  uint64_t v28 = v1 + v26[9];
  uint64_t v29 = *(void *)v28;
  char v30 = *(unsigned char *)(v28 + 8);
  sub_100195B7C(*(void *)v28, v30);
  sub_100149AE8();
  char v32 = v31;
  sub_10018F6D8(v29, v30);
  if (v32)
  {
    sub_1005D284C();
    uint64_t v33 = *v21;
    uint64_t v34 = (char *)v21 + *(int *)(v19 + 20);
    unint64_t v35 = (char *)v18 + *(int *)(v16 + 20);
    uint64_t v36 = type metadata accessor for RoundedCornerStyle();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 16))(v35, v34, v36);
    *unint64_t v18 = v33;
    v18[1] = v33;
    sub_1001F75CC();
    (*(void (**)(char *, void, uint64_t))(v85 + 104))(v84, enum case for Color.RGBColorSpace.sRGB(_:), v86);
    uint64_t v37 = Color.init(_:white:opacity:)();
    sub_1001EC0BC();
    uint64_t v38 = v89;
    *(void *)&v24[*(int *)(v89 + 52)] = v37;
    *(_WORD *)&v24[*(int *)(v38 + 56)] = 256;
    sub_1001F75CC();
    uint64_t v39 = (uint64_t)v87;
    sub_10024D364((uint64_t)v24, (uint64_t)v87, &qword_100E802C8);
    sub_1005EFB58(v39, v91, &qword_100E802C8);
    swift_storeEnumTagMultiPayload();
    sub_10024D5E4((uint64_t)&unk_100E84420);
    sub_10024D5E4((uint64_t)&unk_100E84428);
    uint64_t v40 = (uint64_t)v92;
    _ConditionalContent<>.init(storage:)();
    sub_1005EFB58(v40, v93, &qword_100E843D0);
    swift_storeEnumTagMultiPayload();
    sub_1000955D0();
    sub_100095490();
    _ConditionalContent<>.init(storage:)();
    sub_10017DF4C(v40, &qword_100E843D0);
    uint64_t v41 = v39;
    uint64_t v42 = &qword_100E802C8;
    return sub_10017DF4C(v41, v42);
  }
  uint64_t v43 = v16;
  uint64_t v87 = v18;
  uint64_t v45 = v91;
  uint64_t v44 = (uint64_t)v92;
  if (*(unsigned char *)(v27 + v26[6]) == 1)
  {
    uint64_t v46 = static Alignment.center.getter();
    uint64_t v47 = (uint64_t)v78;
    *uint64_t v78 = v46;
    *(void *)(v47 + 8) = v48;
    uint64_t v49 = sub_10017DF08(&qword_100E84438);
    sub_1005CC6FC(v47 + *(int *)(v49 + 44));
    sub_1005EFB58(v47, v45, &qword_100E843B8);
    swift_storeEnumTagMultiPayload();
    sub_10024D5E4((uint64_t)&unk_100E84420);
    sub_10024D5E4((uint64_t)&unk_100E84428);
    _ConditionalContent<>.init(storage:)();
    sub_1005EFB58(v44, v93, &qword_100E843D0);
    swift_storeEnumTagMultiPayload();
    sub_1000955D0();
    sub_100095490();
    _ConditionalContent<>.init(storage:)();
    sub_10017DF4C(v44, &qword_100E843D0);
    uint64_t v41 = v47;
    uint64_t v42 = &qword_100E843B8;
    return sub_10017DF4C(v41, v42);
  }
  uint64_t v50 = v27 + v26[10];
  uint64_t v51 = *(void *)v50;
  char v52 = *(unsigned char *)(v50 + 8);
  sub_100195B7C(*(void *)v50, v52);
  sub_10014E71C();
  int v54 = v53;
  sub_10018F6D8(v51, v52);
  uint64_t v55 = v93;
  if ((v54 & 0x1000000) == 0) {
    goto LABEL_10;
  }
  if (*(void *)(v27 + v26[11]))
  {
    swift_retain();
    char v56 = WeatherVFXConditionBackground.foregroundEffectsAreAbleToRender.getter();
    swift_release();
    if (v56 & 1) != 0 && (sub_1005CCC64())
    {
      uint64_t v57 = (uint64_t)v75;
      sub_1005D1D30();
      uint64_t v58 = type metadata accessor for ForegroundEffect();
      int v59 = _s7Weather24LocationCompositionStateOwet_0(v57, 1, v58);
      sub_10017DF4C(v57, &qword_100E65FA8);
      if (v59 != 1)
      {
        uint64_t v70 = v74;
        sub_1005CD128(v74);
        uint64_t v69 = &qword_100E843B0;
        sub_1005EFB58(v70, v81, &qword_100E843B0);
        swift_storeEnumTagMultiPayload();
        sub_100095530();
        sub_10024D5E4((uint64_t)&unk_100E84410);
        uint64_t v71 = (uint64_t)v83;
LABEL_13:
        _ConditionalContent<>.init(storage:)();
        sub_1005EFB58(v71, v55, &qword_100E843A8);
        swift_storeEnumTagMultiPayload();
        sub_1000955D0();
        sub_100095490();
        _ConditionalContent<>.init(storage:)();
        sub_10017DF4C(v71, &qword_100E843A8);
        uint64_t v41 = v70;
        uint64_t v42 = v69;
        return sub_10017DF4C(v41, v42);
      }
    }
LABEL_10:
    sub_1005D284C();
    uint64_t v60 = *v21;
    uint64_t v61 = (char *)v21 + *(int *)(v19 + 20);
    uint64_t v62 = v87;
    uint64_t v63 = (char *)v87 + *(int *)(v43 + 20);
    uint64_t v64 = type metadata accessor for RoundedCornerStyle();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v64 - 8) + 16))(v63, v61, v64);
    *uint64_t v62 = v60;
    v62[1] = v60;
    sub_1001F75CC();
    if (qword_100E62580 != -1) {
      swift_once();
    }
    uint64_t v65 = type metadata accessor for Material();
    uint64_t v66 = sub_1002102B0(v65, (uint64_t)qword_100F51B10);
    uint64_t v67 = (uint64_t)v76;
    sub_1001EC0BC();
    uint64_t v68 = v82;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v65 - 8) + 16))(v67 + *(int *)(v82 + 52), v66, v65);
    *(_WORD *)(v67 + *(int *)(v68 + 56)) = 256;
    sub_1001F75CC();
    uint64_t v69 = &qword_100E84398;
    uint64_t v70 = v77;
    sub_10024D364(v67, v77, &qword_100E84398);
    sub_1005EFB58(v70, v81, &qword_100E84398);
    swift_storeEnumTagMultiPayload();
    sub_100095530();
    sub_10024D5E4((uint64_t)&unk_100E84410);
    uint64_t v71 = (uint64_t)v83;
    goto LABEL_13;
  }
  type metadata accessor for WeatherVFXConditionBackground();
  sub_10013509C((uint64_t)&unk_100E70F28);
  uint64_t result = EnvironmentObject.error()();
  __break(1u);
  return result;
}

unint64_t sub_100095490()
{
  unint64_t result = qword_100E84430;
  if (!qword_100E84430)
  {
    sub_10018C6DC(&qword_100E843A8);
    sub_100095530();
    sub_10024D5E4((uint64_t)&unk_100E84410);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E84430);
  }
  return result;
}

unint64_t sub_100095530()
{
  unint64_t result = qword_100E843D8;
  if (!qword_100E843D8)
  {
    sub_10018C6DC(&qword_100E843B0);
    sub_10024D5E4((uint64_t)&unk_100E843E0);
    sub_1000066AC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E843D8);
  }
  return result;
}

unint64_t sub_1000955D0()
{
  unint64_t result = qword_100E84418;
  if (!qword_100E84418)
  {
    sub_10018C6DC(&qword_100E843D0);
    sub_10024D5E4((uint64_t)&unk_100E84420);
    sub_10024D5E4((uint64_t)&unk_100E84428);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E84418);
  }
  return result;
}

uint64_t sub_100095694(uint64_t a1, uint64_t a2)
{
  swift_release();
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = type metadata accessor for URL();
  uint64_t result = _s7Weather24LocationCompositionStateOwet_0(v4, 1, v5);
  if (!result)
  {
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
    return v7(v4, v5);
  }
  return result;
}

uint64_t sub_100095738(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v4 = sub_10017DF08(&qword_100E63440);
  __chkstk_darwin(v4 - 8);
  sub_1001626E0();
  uint64_t v7 = v6 - v5;
  sub_10017DF08(&qword_100E80C78);
  sub_100179C0C();
  __chkstk_darwin(v8);
  sub_1001626E0();
  sub_10017DF08(&qword_100E80C80);
  sub_100179C0C();
  __chkstk_darwin(v9);
  sub_100109314();
  sub_10017DF08(&qword_100E80C88);
  sub_100179C0C();
  __chkstk_darwin(v10);
  sub_100109314();
  sub_10017DF08(&qword_100E80C90);
  sub_100179C0C();
  __chkstk_darwin(v11);
  sub_100109314();
  sub_10017DF08(&qword_100E80C98);
  sub_100179C0C();
  __chkstk_darwin(v12);
  sub_100109314();
  uint64_t v13 = type metadata accessor for OSSignpostID();
  sub_100179C0C();
  uint64_t v15 = v14;
  __chkstk_darwin(v16);
  sub_1001626E0();
  uint64_t v19 = v18 - v17;
  sub_10017DF08(&qword_100E80CA0);
  swift_allocObject();
  *(void *)(v2 + 32) = PassthroughSubject.init()();
  *(void *)(v2 + 40) = &_swiftEmptySetSingleton;
  static NSRunLoop.SchedulerTimeType.Stride.milliseconds(_:)();
  *(unsigned char *)(v2 + OBJC_IVAR____TtC7Weather29WeatherDataDebounceMiddleware_resetAccumulator) = 0;
  uint64_t v20 = OBJC_IVAR____TtC7Weather29WeatherDataDebounceMiddleware_logger;
  sub_1001ABC4C(0, (unint64_t *)&qword_100E62D68);
  uint64_t v21 = (void *)OS_os_log.init(subsystem:category:)();
  *(void *)(v3 + v20) = v21;
  *(void *)(v3 + 16) = a1;
  *(void *)(v3 + 24) = a2;
  swift_retain();
  id v22 = v21;
  OSSignpostID.init(log:)();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 32))(v3 + OBJC_IVAR____TtC7Weather29WeatherDataDebounceMiddleware_signpostID, v19, v13);
  char v32 = self;
  swift_retain();
  id v35 = [v32 mainRunLoop];
  type metadata accessor for NSRunLoop.SchedulerOptions();
  sub_10018141C();
  sub_1001ABC4C(0, (unint64_t *)&qword_100E63460);
  sub_1001246C8(&qword_100E80CA8, &qword_100E80CA0);
  sub_10008E51C();
  Publisher.receive<A>(on:options:)();
  sub_10017DF4C(v7, &qword_100E63440);

  swift_release();
  sub_1001A21C4();
  sub_10017E610();
  sub_10017DF08(&qword_100E80CB0);
  sub_1001246C8(&qword_100E80CB8, &qword_100E80C78);
  Publisher.scan<A>(_:_:)();
  swift_release();
  swift_bridgeObjectRelease();
  sub_100162F0C();
  v23();
  uint64_t v24 = sub_1001A21C4();
  sub_10017E610();
  sub_1001246C8(&qword_100E80CC0, &qword_100E80C80);
  sub_1001A0A84(0, 0, (uint64_t)sub_100097878, v24);
  swift_release();
  sub_100162F0C();
  v25();
  id v34 = [v32 mainRunLoop];
  sub_10018141C();
  sub_1001246C8(&qword_100E80CC8, &qword_100E80C88);
  Publisher.debounce<A>(for:scheduler:options:)();
  sub_10017DF4C(v7, &qword_100E63440);

  sub_100162F0C();
  v26();
  uint64_t v27 = sub_1001A21C4();
  sub_10017E610();
  sub_1001246C8(&qword_100E80CD0, &qword_100E80C90);
  sub_1001A0A84(0, 0, (uint64_t)sub_100225E54, v27);
  swift_release();
  sub_100162F0C();
  v28();
  swift_allocObject();
  sub_10017E610();
  sub_1001246C8(&qword_100E80CD8, &qword_100E80C98);
  Publisher<>.sink(receiveValue:)();
  swift_release();
  sub_100162F0C();
  v29();
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  swift_release();
  swift_release();
  return v3;
}

uint64_t sub_100095EC8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for MainAction();
  __chkstk_darwin(v3);
  uint64_t v5 = (uint64_t *)((char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t updated = type metadata accessor for WeatherDataUpdateRequestLog.Event(0);
  __chkstk_darwin(updated);
  uint64_t v8 = (char *)v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_storeEnumTagMultiPayload();
  sub_10015B128((uint64_t)v8);
  sub_1001BC5DC();
  uint64_t v9 = *(uint64_t (**)(uint64_t))(a2 + 48);
  swift_retain();
  *uint64_t v5 = Location.id.getter();
  v5[1] = v10;
  type metadata accessor for WeatherDataAction();
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  uint64_t v13 = 0;
  memset(v12, 0, sizeof(v12));
  sub_1001AAF58((uint64_t)v5, (uint64_t)v12, v9);
  sub_10017DF4C((uint64_t)v12, (uint64_t *)&unk_100EA01F0);
  sub_1001BC5DC();
  return swift_release();
}

uint64_t sub_100096064(void *a1)
{
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E98168);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v151)
  {
    __break(1u);
    goto LABEL_22;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E98058);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v149)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E98060);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v147)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E98068);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v145)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E98070);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v143)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E98090);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v141)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E98098);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v139)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E980A0);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v137)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E8DCC0);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v135)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E980B8);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v133)
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E88508);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v131)
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E980C0);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v129)
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E98078);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v127)
  {
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E98080);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v125)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E72898);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v123)
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E98170);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v121)
  {
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E6CEF8);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v119)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E98178);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v117)
  {
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E72A10);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v115)
  {
    uint64_t v3 = sub_1000DF0C4((uint64_t)v150, v151);
    uint64_t v113 = v87;
    __n128 v4 = __chkstk_darwin(v3);
    uint64_t v108 = (void *)((char *)v87 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(__n128))(v6 + 16))(v4);
    uint64_t v7 = sub_1000DF0C4((uint64_t)v148, v149);
    uint64_t v112 = v87;
    __n128 v8 = __chkstk_darwin(v7);
    uint64_t v106 = (void *)((char *)v87 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(__n128))(v10 + 16))(v8);
    uint64_t v11 = sub_1000DF0C4((uint64_t)v146, v147);
    uint64_t v111 = v87;
    __n128 v12 = __chkstk_darwin(v11);
    uint64_t v105 = (void *)((char *)v87 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(__n128))(v14 + 16))(v12);
    uint64_t v15 = sub_1000DF0C4((uint64_t)v144, v145);
    long long v110 = v87;
    __n128 v16 = __chkstk_darwin(v15);
    uint64_t v103 = (void *)((char *)v87 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(__n128))(v18 + 16))(v16);
    uint64_t v19 = sub_1000DF0C4((uint64_t)v142, v143);
    uint64_t v109 = v87;
    __n128 v20 = __chkstk_darwin(v19);
    char v101 = (void *)((char *)v87 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(__n128))(v22 + 16))(v20);
    uint64_t v23 = sub_1000DF0C4((uint64_t)v140, v141);
    uint64_t v107 = v87;
    __n128 v24 = __chkstk_darwin(v23);
    uint64_t v99 = (void *)((char *)v87 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(__n128))(v26 + 16))(v24);
    uint64_t v27 = sub_1000DF0C4((uint64_t)v138, v139);
    uint64_t v104 = v87;
    __n128 v28 = __chkstk_darwin(v27);
    uint64_t v97 = (void *)((char *)v87 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(__n128))(v30 + 16))(v28);
    uint64_t v31 = sub_1000DF0C4((uint64_t)v136, v137);
    uint64_t v102 = v87;
    __n128 v32 = __chkstk_darwin(v31);
    uint64_t v95 = (uint64_t **)((char *)v87 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(__n128))(v34 + 16))(v32);
    uint64_t v35 = sub_1000DF0C4((uint64_t)v134, v135);
    uint64_t v100 = v87;
    __n128 v36 = __chkstk_darwin(v35);
    uint64_t v94 = (uint64_t **)((char *)v87 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(__n128))(v38 + 16))(v36);
    uint64_t v39 = sub_1000DF0C4((uint64_t)v132, v133);
    uint64_t v98 = v87;
    __n128 v40 = __chkstk_darwin(v39);
    uint64_t v92 = (uint64_t **)((char *)v87 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(__n128))(v42 + 16))(v40);
    uint64_t v43 = sub_1000DF0C4((uint64_t)v130, v131);
    uint64_t v96 = v87;
    __n128 v44 = __chkstk_darwin(v43);
    uint64_t v90 = (uint64_t **)((char *)v87 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(__n128))(v46 + 16))(v44);
    uint64_t v47 = sub_1000DF0C4((uint64_t)v128, v129);
    uint64_t v93 = v87;
    __n128 v48 = __chkstk_darwin(v47);
    uint64_t v88 = (uint64_t **)((char *)v87 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(__n128))(v50 + 16))(v48);
    uint64_t v51 = sub_1000DF0C4((uint64_t)v126, v127);
    uint64_t v91 = v87;
    __n128 v52 = __chkstk_darwin(v51);
    int v54 = (uint64_t **)((char *)v87 - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t **, __n128))(v55 + 16))(v54, v52);
    uint64_t v56 = sub_1000DF0C4((uint64_t)v124, v125);
    uint64_t v89 = v87;
    __n128 v57 = __chkstk_darwin(v56);
    int v59 = (uint64_t **)((char *)v87 - ((v58 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t **, __n128))(v60 + 16))(v59, v57);
    uint64_t v61 = sub_1000DF0C4((uint64_t)v122, v123);
    v87[3] = v87;
    __n128 v62 = __chkstk_darwin(v61);
    uint64_t v64 = (uint64_t **)((char *)v87 - ((v63 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t **, __n128))(v65 + 16))(v64, v62);
    uint64_t v66 = sub_1000DF0C4((uint64_t)v120, v121);
    v87[2] = v87;
    __n128 v67 = __chkstk_darwin(v66);
    uint64_t v69 = (uint64_t **)((char *)v87 - ((v68 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t **, __n128))(v70 + 16))(v69, v67);
    uint64_t v71 = sub_1000DF0C4((uint64_t)v118, v119);
    v87[1] = v87;
    __n128 v72 = __chkstk_darwin(v71);
    uint64_t v74 = (uint64_t **)((char *)v87 - ((v73 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t **, __n128))(v75 + 16))(v74, v72);
    uint64_t v76 = sub_1000DF0C4((uint64_t)v116, v117);
    v87[0] = v87;
    __n128 v77 = __chkstk_darwin(v76);
    uint64_t v79 = (void **)((char *)v87 - ((v78 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(void **, __n128))(v80 + 16))(v79, v77);
    uint64_t v81 = sub_1000DF0C4((uint64_t)v114, v115);
    __n128 v82 = __chkstk_darwin(v81);
    uint64_t v84 = (uint64_t ***)((char *)v87 - ((v83 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t ***, __n128))(v85 + 16))(v84, v82);
    uint64_t v86 = sub_1000DBD20(*v108, *v106, *v105, *v103, *v101, *v99, *v97, *v95, *v94, *v92, *v90, *v88, *v54, *v59, *v64, *v69, *v74, *v79, *v84);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v114);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v116);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v118);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v120);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v122);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v124);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v126);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v128);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v130);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v132);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v134);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v136);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v138);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v140);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v142);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v144);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v146);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v148);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v150);
    return (uint64_t)v86;
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_10009731C()
{
  uint64_t v0 = type metadata accessor for PrimitiveButtonStyleConfiguration.Label();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10017DF08(&qword_100E8EBF0);
  uint64_t v5 = v4 - 8;
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  PrimitiveButtonStyleConfiguration.label.getter();
  char v8 = static Edge.Set.all.getter();
  (*(void (**)(char *, char *, uint64_t))(v1 + 16))(v7, v3, v0);
  uint64_t v9 = &v7[*(int *)(v5 + 44)];
  *uint64_t v9 = v8;
  *(_OWORD *)(v9 + 8) = xmmword_100C520F0;
  *(_OWORD *)(v9 + 24) = xmmword_100C520F0;
  unsigned char v9[40] = 0;
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  static Alignment.center.getter();
  sub_1000974EC();
  return sub_10017DF4C((uint64_t)v7, &qword_100E8EBF0);
}

uint64_t sub_1000974EC()
{
  sub_100180CF4();
  return sub_10017B180(v0, v1, v2, v3, v4, v5);
}

uint64_t sub_100097524(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (void *)(a1 + v6);
  char v8 = (const void *)(a2 + v6);
  uint64_t v9 = type metadata accessor for URL();
  int v10 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v7, 1, v9);
  int v11 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v9);
  if (!v10)
  {
    uint64_t v12 = *(void *)(v9 - 8);
    if (!v11)
    {
      (*(void (**)(void *, const void *, uint64_t))(v12 + 24))(v7, v8, v9);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v12 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    uint64_t v13 = sub_10017DF08(&qword_100E749B0);
    memcpy(v7, v8, *(void *)(*(void *)(v13 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v7, 0, 1, v9);
  return a1;
}

uint64_t sub_1000976BC(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = type metadata accessor for ContentStatusBannerPresentationMetrics(0);
  sub_100097814(v3, a2);
  uint64_t v4 = sub_100127A9C();
  uint64_t v6 = (void *)sub_1002102B0(v4, v5);
  type metadata accessor for ContentStatusBanner();
  uint64_t v7 = sub_100162B34();
  uint64_t result = _s7Weather24LocationCompositionStateOwst_0(v7, 1, 1, v8);
  *uint64_t v6 = 0;
  v6[1] = 0;
  return result;
}

uint64_t sub_100097720(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t (*a4)(void))
{
  uint64_t v6 = sub_10017DF08(a2);
  sub_100097814(v6, a3);
  uint64_t v7 = sub_1002102B0(v6, (uint64_t)a3);
  uint64_t v8 = a4(0);

  return _s7Weather24LocationCompositionStateOwst_0(v7, 1, 1, v8);
}

uint64_t sub_10009779C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = type metadata accessor for Logger();
  sub_100097814(v3, a2);
  sub_1002102B0(v3, (uint64_t)a2);
  return Logger.init(subsystem:category:)();
}

uint64_t *sub_100097814(uint64_t a1, uint64_t *a2)
{
  if ((*(_DWORD *)(*(void *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    uint64_t v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t sub_100097878(uint64_t a1)
{
  return sub_100097898(a1, v1, 0);
}

uint64_t sub_100097898(uint64_t a1, uint64_t a2, char a3)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    *(unsigned char *)(result + OBJC_IVAR____TtC7Weather29WeatherDataDebounceMiddleware_resetAccumulator) = a3;
    return swift_release();
  }
  return result;
}

uint64_t sub_1000978F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  v15[1] = a1;
  void v15[2] = a2;
  uint64_t v3 = type metadata accessor for PageControlDisplayStateModifier(0);
  uint64_t v4 = v3 - 8;
  __chkstk_darwin(v3);
  uint64_t v5 = sub_10017DF08(&qword_100E8EC00);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  LOBYTE(v16) = sub_100097C10() & 1;
  sub_10015176C();
  swift_allocObject();
  sub_1001516CC();
  uint64_t v9 = sub_10017DF08(&qword_100E8EC08);
  unint64_t v10 = sub_10024D5E4((uint64_t)&unk_100E8EC10);
  View.onChange<A>(of:initial:_:)();
  swift_release();
  int v11 = (uint64_t *)(v2 + *(int *)(v4 + 32));
  uint64_t v13 = *v11;
  uint64_t v12 = (void *)v11[1];
  uint64_t v16 = v13;
  uint64_t v17 = v12;
  sub_10017DF08(&qword_100E8EC18);
  State.wrappedValue.getter();
  type metadata accessor for PageControlDisplayState(0);
  uint64_t v16 = v9;
  uint64_t v17 = &type metadata for Bool;
  unint64_t v18 = v10;
  uint64_t v19 = &protocol witness table for Bool;
  swift_getOpaqueTypeConformance2();
  sub_10015180C((uint64_t)&unk_100E8E1B0);
  View.environment<A>(_:)();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_100097C10()
{
  uint64_t v1 = type metadata accessor for PageControlDisplayStateModifier(0);
  __chkstk_darwin(v1);
  uint64_t v35 = (char *)&v32 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for UserInterfaceSizeClass();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v33 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10017DF08(&qword_100E662F0);
  uint64_t v7 = v6 - 8;
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10017DF08(&qword_100E65ED8);
  uint64_t v11 = __chkstk_darwin(v10 - 8);
  uint64_t v13 = (char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v11);
  uint64_t v16 = (char *)&v32 - v15;
  __chkstk_darwin(v14);
  unint64_t v18 = (char *)&v32 - v17;
  uint64_t v34 = v0;
  sub_10019B2FC();
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v16, enum case for UserInterfaceSizeClass.compact(_:), v3);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v16, 0, 1, v3);
  uint64_t v19 = (uint64_t)&v9[*(int *)(v7 + 56)];
  sub_10006DF38((uint64_t)v18, (uint64_t)v9, &qword_100E65ED8);
  sub_10006DF38((uint64_t)v16, v19, &qword_100E65ED8);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v3) == 1)
  {
    sub_10017DF4C((uint64_t)v16, &qword_100E65ED8);
    sub_10017DF4C((uint64_t)v18, &qword_100E65ED8);
    if (_s7Weather24LocationCompositionStateOwet_0(v19, 1, v3) == 1)
    {
      sub_10017DF4C((uint64_t)v9, &qword_100E65ED8);
LABEL_8:
      sub_10015176C();
LABEL_11:
      char v30 = 0;
      goto LABEL_12;
    }
    goto LABEL_6;
  }
  sub_10006DF38((uint64_t)v9, (uint64_t)v13, &qword_100E65ED8);
  if (_s7Weather24LocationCompositionStateOwet_0(v19, 1, v3) == 1)
  {
    sub_10017DF4C((uint64_t)v16, &qword_100E65ED8);
    sub_10017DF4C((uint64_t)v18, &qword_100E65ED8);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v13, v3);
LABEL_6:
    sub_10017DF4C((uint64_t)v9, &qword_100E662F0);
    goto LABEL_9;
  }
  __n128 v20 = v33;
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 32))(v33, v19, v3);
  sub_10015180C((uint64_t)&unk_100E65F28);
  char v21 = dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t v22 = *(void (**)(char *, uint64_t))(v4 + 8);
  v22(v20, v3);
  sub_10017DF4C((uint64_t)v16, &qword_100E65ED8);
  sub_10017DF4C((uint64_t)v18, &qword_100E65ED8);
  v22(v13, v3);
  sub_10017DF4C((uint64_t)v9, &qword_100E65ED8);
  if (v21) {
    goto LABEL_8;
  }
LABEL_9:
  id v23 = [self currentDevice];
  id v24 = [v23 userInterfaceIdiom];

  uint64_t v25 = v35;
  sub_10015176C();
  if (v24 != (id)1) {
    goto LABEL_11;
  }
  uint64_t v26 = *(void *)v25;
  char v27 = v25[8];
  sub_100195B7C(*(void *)v25, v27);
  sub_100149AE8();
  char v29 = v28;
  sub_10018F6D8(v26, v27);
  char v30 = v29 ^ 1;
LABEL_12:
  sub_100151660();
  return v30 & 1;
}

uint64_t sub_1000980F4(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 9) = *(unsigned char *)(a2 + 9);
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_100098144(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_1000981EC(uint64_t a1, uint64_t *a2, uint64_t a3, void (*a4)(void, uint64_t, uint64_t))
{
  uint64_t v5 = *a2;
  uint64_t v6 = a2[1];
  uint64_t v7 = *((unsigned __int8 *)a2 + 16);
  a4(*a2, v6, v7);
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v6;
  *(unsigned char *)(a1 + 16) = v7;
  return a1;
}

uint64_t sub_10009823C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Location.Identifier();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = *(void *)v9;
  uint64_t v11 = *(void *)(v9 + 8);
  uint64_t v12 = *(void *)(v9 + 16);
  uint64_t v13 = *(void *)(v9 + 24);
  uint64_t v14 = *(void *)(v9 + 32);
  uint64_t v15 = *(void *)(v9 + 40);
  uint64_t v16 = *(void *)(v9 + 48);
  uint64_t v17 = *(void *)(v9 + 56);
  uint64_t v18 = *(void *)(v9 + 64);
  char v20 = *(unsigned char *)(v9 + 72);
  sub_1001910C8(*(void *)v9, v11, v12, v13, v14, v15, v16, v17, v18, v20);
  *(void *)uint64_t v8 = v10;
  *(void *)(v8 + 8) = v11;
  *(void *)(v8 + 16) = v12;
  *(void *)(v8 + 24) = v13;
  *(void *)(v8 + 32) = v14;
  *(void *)(v8 + 40) = v15;
  *(void *)(v8 + 48) = v16;
  *(void *)(v8 + 56) = v17;
  *(void *)(v8 + 64) = v18;
  *(unsigned char *)(v8 + 72) = v20;
  return a1;
}

uint64_t sub_100098340@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_1001855F8();
  uint64_t v9 = type metadata accessor for AnimatableTabView();
  sub_1001627C0(v9);
  uint64_t v11 = v2 + ((*(unsigned __int8 *)(v10 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));

  return sub_100120B6C(a1, v11, v3, v4, v5, v6, a2);
}

id sub_1000983C8()
{
  uint64_t v1 = type metadata accessor for Location.Identifier();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v62._object - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for WeatherActivity();
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v62._object - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100215DA4();
  id v8 = sub_10002AB3C();
  [v8 setEligibleForHandoff:1];
  sub_100224AA0(v0, (uint64_t)v7);
  int v9 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v7, 2, v1);
  if (v9)
  {
    if (v9 == 1)
    {
      sub_10001D048(0);
      uint64_t v10 = self;
      id v11 = [v10 mainBundle];
      sub_1001631D8();
      uint64_t v14 = sub_10017CBEC(v12, v13, (uint64_t)"Show my Weather location list");
      uint64_t v16 = v15;

      sub_10040BF9C(v14, v16, v8);
      sub_10017DF08(&qword_100E66F98);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_100C251B0;
      id v18 = [v10 mainBundle];
      v62._object = (void *)0x8000000100C9ED20;
      uint64_t v19 = sub_100187C74();
      uint64_t v21 = v20;

      *(void *)(inited + 32) = v19;
      *(void *)(inited + 40) = v21;
      sub_10003F2F8(inited);
      Class isa = Set._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      [v8 setKeywords:isa];
    }
    else
    {
      sub_10001D048(1);
      uint64_t v26 = self;
      id v27 = [v26 mainBundle];
      sub_1001631D8();
      uint64_t v30 = sub_10017CBEC(v28, v29, (uint64_t)"Show weather in My Location");
      uint64_t v32 = v31;

      sub_10040BF9C(v30, v32, v8);
      sub_10017DF08(&qword_100E66F98);
      uint64_t v33 = swift_initStackObject();
      *(_OWORD *)(v33 + 16) = xmmword_100C25ED0;
      id v34 = [v26 mainBundle];
      v62._object = (void *)0x8000000100C9ED20;
      v35._uint64_t countAndFlagsBits = 0x72656874616577;
      v35._object = (void *)0xE700000000000000;
      v36._uint64_t countAndFlagsBits = 0;
      v36._object = (void *)0xE000000000000000;
      v62._uint64_t countAndFlagsBits = 0xD000000000000036;
      Swift::String v37 = NSLocalizedString(_:tableName:bundle:value:comment:)(v35, (Swift::String_optional)0, (NSBundle)v34, v36, v62);

      *(Swift::String *)(v33 + 32) = v37;
      id v38 = [v26 mainBundle];
      sub_1001631D8();
      v39._uint64_t countAndFlagsBits = 1701995880;
      v39._object = (void *)0xE400000000000000;
      v40._uint64_t countAndFlagsBits = 0;
      v40._object = (void *)0xE000000000000000;
      Swift::String v41 = NSLocalizedString(_:tableName:bundle:value:comment:)(v39, (Swift::String_optional)0, (NSBundle)v38, v40, v63);

      *(Swift::String *)(v33 + 48) = v41;
      sub_10003F2F8(v33);
      Class v42 = Set._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      [v8 setKeywords:v42];

      if (qword_100E62998 != -1) {
        swift_once();
      }
      uint64_t v43 = static WeatherLocation.currentLocationID;
      uint64_t v44 = *(void *)algn_100F52218;
      swift_bridgeObjectRetain();
      sub_10017A218(v43, v44);
      swift_bridgeObjectRetain();
      sub_1001A0768(v43, v44);
    }
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v4, v7, v1);
    sub_10001D048(1);
    uint64_t v23 = sub_10003F064();
    if (v24)
    {
      NSString v25 = String._bridgeToObjectiveC()();
      uint64_t v23 = swift_bridgeObjectRelease();
    }
    else
    {
      NSString v25 = 0;
    }
    sub_100189094(v23, "setTitle:");

    sub_10017DF08(&qword_100E66F98);
    uint64_t v45 = swift_initStackObject();
    *(_OWORD *)(v45 + 16) = xmmword_100C25ED0;
    id v46 = [self mainBundle];
    sub_1001631D8();
    uint64_t v47 = sub_100187C74();
    uint64_t v49 = v48;

    *(void *)(v45 + 32) = v47;
    *(void *)(v45 + 40) = v49;
    *(void *)(v45 + 48) = Location.Identifier.name.getter();
    *(void *)(v45 + 56) = v50;
    sub_10003F2F8(v45);
    Class v51 = Set._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v8 setKeywords:v51];

    Location.Identifier.coordinate.getter();
    uint64_t v53 = v52;
    uint64_t v55 = v54;
    uint64_t v60 = 0;
    uint64_t v61 = 0xE000000000000000;
    Double.write<A>(to:)();
    v56._uint64_t countAndFlagsBits = 44;
    v56._object = (void *)0xE100000000000000;
    String.append(_:)(v56);
    Double.write<A>(to:)();
    sub_10017A218(v60, v61);
    uint64_t v57 = Location.Identifier.name.getter();
    sub_1001A0768(v57, v58);
    sub_100098A58(v53, 0, 7627116, 0xE300000000000000);
    sub_100098A58(v55, 0, 1735290732, 0xE400000000000000);
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  return v8;
}

void sub_100098A58(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v14 = sub_100098CC0(v4);
  if (v14)
  {
    *(void *)&long long v11 = a3;
    *((void *)&v11 + 1) = a4;
    AnyHashable.init<A>(_:)();
    if (a2)
    {
      long long v11 = 0u;
      long long v12 = 0u;
    }
    else
    {
      *((void *)&v12 + 1) = &type metadata for String;
      *(void *)&long long v11 = Double.description.getter();
      *((void *)&v11 + 1) = v8;
    }
    uint64_t v9 = sub_100098D2C((uint64_t)&v11, (uint64_t)v13);
    if (v14)
    {
      v10.super.Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
      uint64_t v9 = swift_bridgeObjectRelease();
    }
    else
    {
      v10.super.Class isa = 0;
    }
    sub_100189094(v9, "setUserInfo:");
  }
  else
  {
    [v4 setUserInfo:0];
  }
}

void sub_100098B8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = v4;
  uint64_t v15 = sub_100098CC0(v7);
  if (v15)
  {
    *(void *)&long long v12 = a3;
    *((void *)&v12 + 1) = a4;
    AnyHashable.init<A>(_:)();
    if (a2)
    {
      *((void *)&v13 + 1) = &type metadata for String;
      *(void *)&long long v12 = a1;
      *((void *)&v12 + 1) = a2;
    }
    else
    {
      long long v12 = 0u;
      long long v13 = 0u;
    }
    uint64_t v10 = sub_100098D2C((uint64_t)&v12, (uint64_t)v14);
    if (v15)
    {
      v11.super.Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
      uint64_t v10 = swift_bridgeObjectRelease();
    }
    else
    {
      v11.super.Class isa = 0;
    }
    sub_100189094(v10, "setUserInfo:");
  }
  else
  {
    swift_bridgeObjectRelease();
    [v7 setUserInfo:0];
  }
}

uint64_t sub_100098CC0(void *a1)
{
  id v1 = [a1 userInfo];
  if (!v1) {
    return 0;
  }
  uint64_t v2 = v1;
  uint64_t v3 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  return v3;
}

uint64_t sub_100098D2C(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 24))
  {
    sub_100098DB4((_OWORD *)a1, v4);
    sub_100098E18(v4, a2);
    return sub_100098DC4(a2);
  }
  else
  {
    sub_100178160(a1, &qword_100EAC3D0);
    sub_1002479B8(a2, v4);
    sub_100098DC4(a2);
    return sub_100178160((uint64_t)v4, &qword_100EAC3D0);
  }
}

_OWORD *sub_100098DB4(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t sub_100098DC4(uint64_t a1)
{
  return a1;
}

uint64_t sub_100098E18(_OWORD *a1, uint64_t a2)
{
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v7 = *v2;
  *long long v2 = 0x8000000000000000;
  sub_100098E98(a1, a2, isUniquelyReferenced_nonNull_native);
  *long long v2 = v7;

  return swift_bridgeObjectRelease();
}

_OWORD *sub_100098E98(_OWORD *a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v8 = (void *)*v3;
  unint64_t v9 = sub_100098FD0(a2);
  uint64_t v11 = v8[2];
  BOOL v12 = (v10 & 1) == 0;
  Swift::Int v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_11;
  }
  unint64_t v14 = v9;
  char v15 = v10;
  sub_10017DF08(&qword_100E63A88);
  if (!_NativeDictionary.ensureUnique(isUnique:capacity:)(a3 & 1, v13)) {
    goto LABEL_5;
  }
  unint64_t v16 = sub_100098FD0(a2);
  if ((v15 & 1) != (v17 & 1))
  {
LABEL_11:
    uint64_t result = (_OWORD *)KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return result;
  }
  unint64_t v14 = v16;
LABEL_5:
  id v18 = *v4;
  if (v15)
  {
    uint64_t v19 = (_OWORD *)(v18[7] + 32 * v14);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v19);
    return sub_100098DB4(a1, v19);
  }
  else
  {
    sub_1000990DC(a2, (uint64_t)v21);
    return sub_100099138(v14, (uint64_t)v21, a1, v18);
  }
}

unint64_t sub_100098FD0(uint64_t a1)
{
  uint64_t v2 = v1;
  Swift::Int v4 = AnyHashable._rawHashValue(seed:)(*(void *)(v2 + 40));

  return sub_100099014(a1, v4);
}

unint64_t sub_100099014(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v5 = ~v3;
    do
    {
      sub_1000990DC(*(void *)(v2 + 48) + 40 * v4, (uint64_t)v8);
      char v6 = static AnyHashable.== infix(_:_:)();
      sub_100098DC4((uint64_t)v8);
      if (v6) {
        break;
      }
      unint64_t v4 = (v4 + 1) & v5;
    }
    while (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

uint64_t sub_1000990DC(uint64_t a1, uint64_t a2)
{
  return a2;
}

_OWORD *sub_100099138(unint64_t a1, uint64_t a2, _OWORD *a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v5 = a4[6] + 40 * a1;
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)uint64_t v5 = *(_OWORD *)a2;
  *(_OWORD *)(v5 + 16) = v6;
  *(void *)(v5 + 32) = *(void *)(a2 + 32);
  uint64_t result = sub_100098DB4(a3, (_OWORD *)(a4[7] + 32 * a1));
  uint64_t v8 = a4[2];
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a4[2] = v10;
  }
  return result;
}

uint64_t sub_1000991B4(double *a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UserInterfaceSizeClass();
  uint64_t v36 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  id v34 = &v31[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = sub_10017DF08(&qword_100E662F0);
  __chkstk_darwin(v6);
  uint64_t v8 = &v31[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = sub_10017DF08(&qword_100E65ED8);
  uint64_t v10 = __chkstk_darwin(v9 - 8);
  Swift::String v35 = &v31[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = __chkstk_darwin(v10);
  unint64_t v14 = &v31[-v13];
  __chkstk_darwin(v12);
  unint64_t v16 = &v31[-v15];
  uint64_t v17 = sub_10017DF08(&qword_100E63A10);
  __chkstk_darwin(v17 - 8);
  uint64_t v19 = &v31[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  id v38 = a1;
  double v20 = *a1;
  uint64_t v21 = type metadata accessor for LocationViewPage(0);
  uint64_t v22 = a2 + *(int *)(v21 + 20);
  uint64_t v23 = *(int *)(type metadata accessor for ContentStatusBannerPresentationMetrics(0) + 20);
  uint64_t v37 = v22;
  sub_10006DF38(v22 + v23, (uint64_t)v19, &qword_100E63A10);
  uint64_t v24 = type metadata accessor for ContentStatusBanner();
  LODWORD(v22) = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v19, 1, v24);
  uint64_t result = sub_10017DF4C((uint64_t)v19, &qword_100E63A10);
  if (v22 != 1)
  {
    sub_10019B2FC();
    uint64_t v26 = v36;
    (*(void (**)(unsigned char *, void, uint64_t))(v36 + 104))(v14, enum case for UserInterfaceSizeClass.regular(_:), v4);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v14, 0, 1, v4);
    uint64_t v27 = (uint64_t)&v8[*(int *)(v6 + 48)];
    sub_10006DF38((uint64_t)v16, (uint64_t)v8, &qword_100E65ED8);
    sub_10006DF38((uint64_t)v14, v27, &qword_100E65ED8);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v4) == 1)
    {
      sub_10017DF4C((uint64_t)v14, &qword_100E65ED8);
      sub_10017DF4C((uint64_t)v16, &qword_100E65ED8);
      if (_s7Weather24LocationCompositionStateOwet_0(v27, 1, v4) == 1)
      {
        uint64_t result = sub_10017DF4C((uint64_t)v8, &qword_100E65ED8);
LABEL_9:
        double v20 = *(double *)(v37 + 8) - *(double *)(a2 + *(int *)(v21 + 32));
        goto LABEL_11;
      }
    }
    else
    {
      uint64_t v28 = v35;
      sub_10006DF38((uint64_t)v8, (uint64_t)v35, &qword_100E65ED8);
      if (_s7Weather24LocationCompositionStateOwet_0(v27, 1, v4) != 1)
      {
        uint64_t v29 = v34;
        (*(void (**)(unsigned char *, uint64_t, uint64_t))(v26 + 32))(v34, v27, v4);
        sub_10015180C((uint64_t)&qword_100E65F28);
        int v32 = dispatch thunk of static Equatable.== infix(_:_:)();
        uint64_t v33 = a2;
        uint64_t v30 = *(void (**)(unsigned char *, uint64_t))(v26 + 8);
        v30(v29, v4);
        sub_10017DF4C((uint64_t)v14, &qword_100E65ED8);
        sub_10017DF4C((uint64_t)v16, &qword_100E65ED8);
        a2 = v33;
        v30(v28, v4);
        uint64_t result = sub_10017DF4C((uint64_t)v8, &qword_100E65ED8);
        if (v32) {
          goto LABEL_9;
        }
LABEL_10:
        double v20 = *(double *)(v37 + 8) + -20.0;
        goto LABEL_11;
      }
      sub_10017DF4C((uint64_t)v14, &qword_100E65ED8);
      sub_10017DF4C((uint64_t)v16, &qword_100E65ED8);
      (*(void (**)(unsigned char *, uint64_t))(v26 + 8))(v28, v4);
    }
    uint64_t result = sub_10017DF4C((uint64_t)v8, &qword_100E662F0);
    goto LABEL_10;
  }
LABEL_11:
  *id v38 = v20;
  return result;
}

uint64_t sub_100099678()
{
  sub_10010977C();
  type metadata accessor for TranslationModifier(0);
  sub_100179CD4();
  swift_release();
  sub_10017DF08(&qword_100E63D98);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    type metadata accessor for LocationHeaderViewMeasurements(0);
    type metadata accessor for DisplayMetrics();
    sub_100162738();
    sub_100162E4C();
    sub_100162F0C();
    v0();
  }
  else
  {
    swift_release();
  }
  swift_release();
  sub_100162714();
  return swift_deallocObject();
}

void *sub_100099784(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1000F3400((uint64_t)a1, &qword_100E74A68);
    sub_10017DF08(&qword_100E74A68);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = type metadata accessor for ColorScheme();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for URL();
  int v11 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v10);
  int v12 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v10);
  if (!v11)
  {
    uint64_t v13 = *(void *)(v10 - 8);
    if (!v12)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v8, v9, v10);
      goto LABEL_12;
    }
    (*(void (**)(char *, uint64_t))(v13 + 8))(v8, v10);
    goto LABEL_11;
  }
  if (v12)
  {
LABEL_11:
    uint64_t v14 = sub_10017DF08(&qword_100E749B0);
    memcpy(v8, v9, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_12;
  }
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v8, 0, 1, v10);
LABEL_12:
  uint64_t v15 = *(int *)(a3 + 24);
  unint64_t v16 = (char *)a1 + v15;
  uint64_t v17 = (char *)a2 + v15;
  *(void *)((char *)a1 + v15) = *(void *)((char *)a2 + v15);
  swift_retain();
  swift_release();
  *((void *)v16 + 1) = *((void *)v17 + 1);
  swift_retain();
  swift_release();
  v16[16] = v17[16];
  return a1;
}

uint64_t sub_1000999D4(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_retain();
  swift_release();
  uint64_t v6 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(a1 + 32) = v6;
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_retain();
  swift_release();
  sub_1000C1E18((uint64_t *)(a1 + 56), (uint64_t *)(a2 + 56));
  sub_1000C1E18((uint64_t *)(a1 + 96), (uint64_t *)(a2 + 96));
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  swift_retain();
  swift_release();
  uint64_t v7 = *(void *)(a2 + 144);
  LOBYTE(v6) = *(unsigned char *)(a2 + 152);
  sub_100195B7C(v7, v6);
  uint64_t v8 = *(void *)(a1 + 144);
  char v9 = *(unsigned char *)(a1 + 152);
  *(void *)(a1 + 144) = v7;
  *(unsigned char *)(a1 + 152) = v6;
  sub_10018F6D8(v8, v9);
  if (a1 != a2)
  {
    uint64_t v10 = a3[13];
    uint64_t v11 = a1 + v10;
    uint64_t v12 = a2 + v10;
    sub_100178110(a1 + v10, &qword_100E63BD0);
    sub_10017DF08(&qword_100E63BD0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(void *)uint64_t v11 = *(void *)v12;
      *(void *)(v11 + 8) = *(void *)(v12 + 8);
      *(unsigned char *)(v11 + 16) = *(unsigned char *)(v12 + 16);
      *(unsigned char *)(v11 + 17) = *(unsigned char *)(v12 + 17);
      *(unsigned char *)(v11 + 18) = *(unsigned char *)(v12 + 18);
      uint64_t v13 = *(int *)(type metadata accessor for DisplayMetrics() + 36);
      uint64_t v14 = v11 + v13;
      uint64_t v15 = v12 + v13;
      uint64_t v16 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
    }
    else
    {
      *(void *)uint64_t v11 = *(void *)v12;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v17 = a3[14];
  uint64_t v18 = a1 + v17;
  uint64_t v19 = a2 + v17;
  uint64_t v20 = *(void *)v19;
  char v21 = *(unsigned char *)(v19 + 8);
  sub_100195B7C(*(void *)v19, v21);
  uint64_t v22 = *(void *)v18;
  char v23 = *(unsigned char *)(v18 + 8);
  *(void *)uint64_t v18 = v20;
  *(unsigned char *)(v18 + 8) = v21;
  sub_10018F6D8(v22, v23);
  if (a1 != a2)
  {
    uint64_t v24 = a3[15];
    NSString v25 = (void *)(a1 + v24);
    uint64_t v26 = (void *)(a2 + v24);
    sub_100178110(a1 + v24, &qword_100E63BC8);
    sub_10017DF08(&qword_100E63BC8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v27 = type metadata accessor for ContentSizeCategory();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
    }
    else
    {
      *NSString v25 = *v26;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v28 = a3[16];
  uint64_t v29 = a1 + v28;
  uint64_t v30 = a2 + v28;
  uint64_t v31 = *(void *)v30;
  uint64_t v32 = *(void *)(v30 + 8);
  uint64_t v33 = *(void *)(v30 + 16);
  uint64_t v34 = *(void *)(v30 + 24);
  char v35 = *(unsigned char *)(v30 + 32);
  sub_100190CD4(*(void *)v30, v32, v33, v34, v35);
  uint64_t v36 = *(void *)v29;
  uint64_t v37 = *(void *)(v29 + 8);
  uint64_t v38 = *(void *)(v29 + 16);
  uint64_t v39 = *(void *)(v29 + 24);
  char v40 = *(unsigned char *)(v29 + 32);
  *(void *)uint64_t v29 = v31;
  *(void *)(v29 + 8) = v32;
  *(void *)(v29 + 16) = v33;
  *(void *)(v29 + 24) = v34;
  *(unsigned char *)(v29 + 32) = v35;
  sub_100191934(v36, v37, v38, v39, v40);
  uint64_t v41 = a3[17];
  uint64_t v42 = a1 + v41;
  uint64_t v43 = a2 + v41;
  uint64_t v44 = *(void *)v43;
  LOBYTE(v32) = *(unsigned char *)(v43 + 8);
  sub_100195B7C(*(void *)v43, v32);
  uint64_t v45 = *(void *)v42;
  char v46 = *(unsigned char *)(v42 + 8);
  *(void *)uint64_t v42 = v44;
  *(unsigned char *)(v42 + 8) = v32;
  sub_10018F6D8(v45, v46);
  uint64_t v47 = a3[18];
  uint64_t v48 = a1 + v47;
  uint64_t v49 = a2 + v47;
  uint64_t v50 = *(void *)v49;
  LOBYTE(v32) = *(unsigned char *)(v49 + 8);
  sub_100195B7C(*(void *)v49, v32);
  uint64_t v51 = *(void *)v48;
  char v52 = *(unsigned char *)(v48 + 8);
  *(void *)uint64_t v48 = v50;
  *(unsigned char *)(v48 + 8) = v32;
  sub_10018F6D8(v51, v52);
  uint64_t v53 = a3[19];
  uint64_t v83 = a3;
  uint64_t v54 = a1 + v53;
  uint64_t v55 = a2 + v53;
  uint64_t v56 = *(void *)v55;
  uint64_t v57 = *(void *)(v55 + 8);
  uint64_t v58 = *(void *)(v55 + 16);
  uint64_t v59 = *(void *)(v55 + 24);
  uint64_t v60 = *(void *)(v55 + 32);
  uint64_t v61 = *(void *)(v55 + 40);
  char v62 = *(unsigned char *)(v55 + 48);
  sub_100193D54(*(void *)v55, v57, v58, v59, v60, v61, v62);
  uint64_t v63 = *(void *)v54;
  uint64_t v64 = *(void *)(v54 + 8);
  uint64_t v65 = *(void *)(v54 + 16);
  uint64_t v66 = *(void *)(v54 + 24);
  uint64_t v67 = *(void *)(v54 + 32);
  uint64_t v68 = *(void *)(v54 + 40);
  char v69 = *(unsigned char *)(v54 + 48);
  *(void *)uint64_t v54 = v56;
  *(void *)(v54 + 8) = v57;
  *(void *)(v54 + 16) = v58;
  *(void *)(v54 + 24) = v59;
  *(void *)(v54 + 32) = v60;
  *(void *)(v54 + 40) = v61;
  *(unsigned char *)(v54 + 48) = v62;
  sub_10014DC00(v63, v64, v65, v66, v67, v68, v69);
  uint64_t v70 = v83[20];
  uint64_t v71 = a1 + v70;
  __n128 v72 = (uint64_t *)(a2 + v70);
  uint64_t v73 = *v72;
  uint64_t v74 = v72[1];
  LOBYTE(v58) = *((unsigned char *)v72 + 16);
  sub_100195B88();
  *(void *)uint64_t v71 = v73;
  *(void *)(v71 + 8) = v74;
  *(unsigned char *)(v71 + 16) = v58;
  sub_10018F6E4();
  uint64_t v75 = v83[21];
  uint64_t v76 = a1 + v75;
  uint64_t v77 = a2 + v75;
  *(void *)(a1 + v75) = *(void *)(a2 + v75);
  swift_retain();
  swift_release();
  *(void *)(v76 + 8) = *(void *)(v77 + 8);
  uint64_t v78 = v83[22];
  uint64_t v79 = a1 + v78;
  uint64_t v80 = a2 + v78;
  uint64_t v81 = type metadata accessor for Text.Measurements();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v81 - 8) + 24))(v79, v80, v81);
  return a1;
}

int *sub_100099E7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v442 = (int *)a2;
  uint64_t v431 = a1;
  uint64_t v426 = type metadata accessor for Location.Identifier();
  sub_100179C0C();
  uint64_t v413 = v4;
  __chkstk_darwin(v5);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v6);
  sub_100128F8C();
  sub_100109338(v7);
  uint64_t v8 = sub_10017DF08(qword_100E66490);
  uint64_t v9 = sub_100109308(v8);
  __chkstk_darwin(v9);
  sub_100109314();
  sub_100109338(v10);
  uint64_t v11 = sub_10017DF08(&qword_100E65BC0);
  uint64_t v12 = sub_100109308(v11);
  __chkstk_darwin(v12);
  sub_100109314();
  uint64_t v14 = sub_100109328(v13);
  uint64_t v423 = type metadata accessor for WeatherMapPresentationState(v14);
  sub_100162E4C();
  __chkstk_darwin(v15);
  sub_100109314();
  sub_100109328(v16);
  uint64_t v429 = type metadata accessor for WeatherMapOverlayKind();
  sub_100179C0C();
  uint64_t v412 = v17;
  __chkstk_darwin(v18);
  sub_100109314();
  uint64_t v20 = sub_100109328(v19);
  uint64_t v432 = type metadata accessor for ViewState.SecondaryViewState(v20);
  sub_100162E4C();
  __chkstk_darwin(v21);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v22);
  sub_100128F8C();
  sub_100109328(v23);
  uint64_t v417 = type metadata accessor for DisplayMetrics();
  sub_100162E4C();
  __chkstk_darwin(v24);
  sub_100109314();
  uint64_t v26 = sub_100109328(v25);
  uint64_t v408 = type metadata accessor for WeatherMapTrackingState(v26);
  sub_100162E4C();
  __chkstk_darwin(v27);
  sub_100109314();
  sub_100109338(v28);
  uint64_t v29 = sub_10017DF08(&qword_100E663F8);
  uint64_t v30 = sub_100109308(v29);
  __chkstk_darwin(v30);
  sub_100109314();
  sub_100109338(v31);
  uint64_t v32 = sub_10017DF08(&qword_100E66400);
  uint64_t v33 = sub_100109308(v32);
  __chkstk_darwin(v33);
  sub_100109314();
  sub_100109338(v34);
  uint64_t v35 = sub_10017DF08(&qword_100E66408);
  uint64_t v36 = sub_100109308(v35);
  __chkstk_darwin(v36);
  sub_100109314();
  sub_100109338(v37);
  uint64_t v38 = sub_10017DF08(&qword_100E66410);
  uint64_t v39 = sub_100109308(v38);
  __chkstk_darwin(v39);
  sub_100109314();
  sub_100109328(v40);
  uint64_t active = type metadata accessor for LocationViewerActiveLocationState();
  sub_100162E4C();
  __chkstk_darwin(v41);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v42);
  sub_100179C90();
  __chkstk_darwin(v43);
  sub_100128F8C();
  uint64_t v45 = sub_100109328(v44);
  v440 = (int *)type metadata accessor for ViewState(v45);
  sub_100162E4C();
  __chkstk_darwin(v46);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v47);
  sub_100179C90();
  __chkstk_darwin(v48);
  sub_100128F8C();
  uint64_t v50 = sub_100109328(v49);
  uint64_t v441 = type metadata accessor for ModalViewState(v50);
  sub_100162E4C();
  __chkstk_darwin(v51);
  uint64_t v53 = &v399[-((v52 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v54);
  uint64_t v56 = &v399[-v55];
  uint64_t v57 = (int *)type metadata accessor for NotificationsOptInInput();
  sub_100162E4C();
  __chkstk_darwin(v58);
  sub_1001626E0();
  uint64_t v61 = v60 - v59;
  uint64_t v62 = sub_10017DF08(&qword_100E66418);
  uint64_t v63 = sub_100109308(v62);
  __chkstk_darwin(v63);
  sub_100109314();
  uint64_t v430 = v64;
  uint64_t v65 = sub_10017DF08(&qword_100E66420);
  uint64_t v66 = sub_100109308(v65);
  __chkstk_darwin(v66);
  sub_100109314();
  uint64_t v434 = v67;
  uint64_t v68 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  uint64_t v69 = sub_100109308(v68);
  __chkstk_darwin(v69);
  sub_100109314();
  sub_100109328(v70);
  v433 = (int *)type metadata accessor for NotificationsOptInState();
  sub_100162E4C();
  __chkstk_darwin(v71);
  sub_100109314();
  sub_100109338(v72);
  uint64_t v73 = sub_10017DF08(&qword_100E66428);
  uint64_t v74 = sub_100109308(v73);
  __chkstk_darwin(v74);
  sub_100109314();
  uint64_t v435 = v75;
  uint64_t v76 = sub_10017DF08(&qword_100E66430);
  uint64_t v77 = sub_100109308(v76);
  __chkstk_darwin(v77);
  sub_100109314();
  uint64_t v436 = v78;
  uint64_t v79 = sub_10017DF08(&qword_100E66438);
  uint64_t v80 = sub_100109308(v79);
  __chkstk_darwin(v80);
  sub_100109314();
  uint64_t v437 = v81;
  uint64_t v82 = sub_10017DF08(&qword_100E66440);
  uint64_t v83 = sub_100109308(v82);
  __chkstk_darwin(v83);
  sub_100109314();
  uint64_t v438 = v84;
  uint64_t v85 = sub_10017DF08(&qword_100E663F0);
  uint64_t v86 = sub_100109308(v85);
  __chkstk_darwin(v86);
  sub_100109314();
  uint64_t v439 = v87;
  uint64_t v88 = sub_10017DF08(&qword_100E663D0);
  uint64_t v89 = sub_100109308(v88);
  __chkstk_darwin(v89);
  sub_100109314();
  uint64_t v427 = v90;
  uint64_t v91 = type metadata accessor for LocationModel();
  sub_100179C0C();
  uint64_t v93 = v92;
  __chkstk_darwin(v94);
  sub_1001626E0();
  uint64_t v97 = v96 - v95;
  type metadata accessor for LocationViewerViewAction();
  sub_100162E4C();
  __chkstk_darwin(v98);
  sub_1001626E0();
  char v101 = (int *)(v100 - v99);
  sub_10021D380(a3, v100 - v99, (void (*)(void))type metadata accessor for LocationViewerViewAction);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v113 = v412;
      uint64_t v114 = v424;
      (*(void (**)(uint64_t, int *, uint64_t))(v412 + 32))(v424, v101, v429);
      uint64_t v115 = type metadata accessor for AppConfigurationState();
      uint64_t v118 = sub_10017E050(v438, v116, v117, v115);
      uint64_t v121 = sub_1001630C0(v437, v119, v120, v118);
      uint64_t v122 = sub_10017D384(v121);
      sub_100163050(v434, v123, v124, v122);
      uint64_t v125 = (uint64_t)v442 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_view;
      uint64_t v126 = v418;
      sub_10021D380((uint64_t)v442 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_view, v418, (void (*)(void))type metadata accessor for ViewState);
      uint64_t v127 = v422;
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v422, 1, 1, v432);
      type metadata accessor for SearchViewState(0);
      uint64_t v128 = sub_1001627F4((uint64_t)&v445);
      _s7Weather24LocationCompositionStateOwst_0(v128, v129, v130, v131);
      uint64_t v132 = v420;
      _s7Weather24LocationCompositionStateOwst_0(v420, 1, 1, v417);
      char v101 = v440;
      sub_1001651E0(v125 + v440[10], (void (*)(void))type metadata accessor for WeatherMapPresentationState, (uint64_t)&v439);
      uint64_t v133 = v410;
      uint64_t v134 = v429;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v113 + 16))(v410, v114, v429);
      _s7Weather24LocationCompositionStateOwst_0(v133, 0, 1, v134);
      uint64_t v135 = v411;
      _s7Weather24LocationCompositionStateOwst_0(v411, 1, 1, v408);
      uint64_t v136 = v419;
      sub_10006D9DC(6, 254, v133, 0, 0, v135, v419);
      sub_1001781AC(v135, qword_100E66490);
      sub_1001781AC(v133, &qword_100E65BC0);
      sub_10011E358(v97, (void (*)(void))type metadata accessor for WeatherMapPresentationState);
      sub_1001093B0();
      _s7Weather24LocationCompositionStateOwst_0(v137, v138, v139, v423);
      sub_100182B68();
      sub_10011D8AC();
      sub_1001781AC((uint64_t)v136, &qword_100E663F8);
      sub_1001781AC(v132, &qword_100E66400);
      sub_1001781AC(v93, &qword_100E66408);
      sub_1001781AC((uint64_t)v127, &qword_100E66410);
      sub_10011E358(v126, (void (*)(void))type metadata accessor for ViewState);
      sub_1001093B0();
      _s7Weather24LocationCompositionStateOwst_0(v140, v141, v142, (uint64_t)v101);
      uint64_t v143 = v439;
      _s7Weather24LocationCompositionStateOwst_0(v439, 1, 1, v441);
      uint64_t v398 = (uint64_t)v442;
      uint64_t v144 = sub_100183E90();
      uint64_t v146 = v437;
      uint64_t v145 = v438;
      uint64_t v147 = v436;
      sub_100163034(v144, v148, v438, v437, v436, v149, v150, v151, v395, v396, v397, v135, v143, 0, 0, 0, 0, 0, 0,
        0,
        v398);
      sub_100186B80();
      sub_1001781AC(v143, &qword_100E663F0);
      sub_1001781AC(v135, &qword_100E66418);
      sub_1001781AC(v133, &qword_100E66420);
      sub_1001781AC((uint64_t)v136, &qword_100E66428);
      sub_1001781AC(v147, &qword_100E66430);
      sub_1001781AC(v146, &qword_100E66438);
      sub_1001781AC(v145, &qword_100E66440);
      sub_100164F40();
      v152();
      return v101;
    case 2u:
      uint64_t v153 = v413;
      uint64_t v154 = *(void (**)(uint64_t, int *, uint64_t))(v413 + 32);
      uint64_t v155 = v426;
      v154(v414, v101, v426);
      char v101 = v442;
      uint64_t v156 = (uint64_t)v442 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_view;
      uint64_t v157 = v415;
      sub_10021D380((uint64_t)v442 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_view, v415, (void (*)(void))type metadata accessor for ViewState);
      uint64_t v158 = v440;
      int v159 = v407;
      sub_10021D380(v157 + v440[5], (uint64_t)v407, (void (*)(void))type metadata accessor for ViewState.SecondaryViewState);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        sub_10011E358((uint64_t)v159, (void (*)(void))type metadata accessor for ViewState.SecondaryViewState);
LABEL_47:
        sub_10011E358(v157, (void (*)(void))type metadata accessor for ViewState);
        sub_100164F40();
        v393();
        goto LABEL_50;
      }
      uint64_t v431 = v156;
      uint64_t v280 = *v159;
      if (*(void *)(v157 + v158[9] + 8) == 1)
      {
        id v281 = [self currentDevice];
        [v281 userInterfaceIdiom];

        uint64_t v157 = v415;
        if ((*(unsigned char *)(v415 + v158[7]) & 1) == 0)
        {
          swift_release();
          goto LABEL_47;
        }
      }
      sub_10011E358(v157, (void (*)(void))type metadata accessor for ViewState);
      uint64_t v282 = v280;
      uint64_t v283 = v404;
      sub_10021D380(v280 + OBJC_IVAR____TtCV7Weather23LocationViewerViewState8_Storage_activeLocationState, v404, (void (*)(void))type metadata accessor for LocationViewerActiveLocationState);
      uint64_t v284 = v400;
      sub_10021D380(v283, v400, (void (*)(void))type metadata accessor for LocationViewerActiveLocationState);
      int v285 = _s7Weather24LocationCompositionStateOwet_0(v284, 1, v155);
      uint64_t v286 = (uint64_t)v403;
      if (v285 == 1) {
        static CurrentLocation.placeholderIdentifier.getter();
      }
      else {
        v154((uint64_t)v403, (int *)v284, v155);
      }
      uint64_t v359 = v431;
      sub_10011E358(v404, (void (*)(void))type metadata accessor for LocationViewerActiveLocationState);
      if ((static Location.Identifier.== infix(_:_:)() & 1) == 0)
      {
        swift_release();
        v392 = *(void (**)(void))(v153 + 8);
        sub_100164F40();
        v392();
        sub_100164F40();
        v392();
        goto LABEL_50;
      }
      uint64_t v360 = type metadata accessor for AppConfigurationState();
      uint64_t v363 = sub_10017E050(v438, v361, v362, v360);
      uint64_t v366 = sub_1001630C0(v437, v364, v365, v363);
      uint64_t v367 = sub_10017D384(v366);
      uint64_t v368 = v434;
      sub_100163050(v434, v369, v370, v367);
      sub_1001651E0(v359, (void (*)(void))type metadata accessor for ViewState, (uint64_t)&v444);
      uint64_t v371 = v427;
      sub_100163050(v427, v372, v373, active);
      uint64_t v374 = sub_1001CCC58(v371, 3, 2, 4, 2, 2, v282);
      sub_1001781AC(v371, &qword_100E663D0);
      v375 = v422;
      uint64_t *v422 = v374;
      uint64_t v376 = v432;
      swift_storeEnumTagMultiPayload();
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v375, 0, 1, v376);
      uint64_t v377 = type metadata accessor for SearchViewState(0);
      sub_1001D1CE4(v377);
      uint64_t v379 = *(void *)(v378 - 256);
      uint64_t v380 = sub_1001A3370();
      _s7Weather24LocationCompositionStateOwst_0(v380, v381, v382, v423);
      sub_100182B68();
      sub_10011D8AC();
      sub_1001781AC(v379, &qword_100E663F8);
      sub_1001781AC(v371, &qword_100E66400);
      sub_1001781AC(v286, &qword_100E66408);
      sub_1001781AC((uint64_t)v375, &qword_100E66410);
      sub_10011E358(v359, (void (*)(void))type metadata accessor for ViewState);
      _s7Weather24LocationCompositionStateOwst_0(v376, 0, 1, (uint64_t)v440);
      uint64_t v383 = v439;
      _s7Weather24LocationCompositionStateOwst_0(v439, 1, 1, v441);
      sub_10017A7F0();
      uint64_t v384 = v435;
      uint64_t v386 = v437;
      uint64_t v385 = v438;
      uint64_t v387 = v436;
      char v101 = (int *)sub_100163034(0, 3, v438, v437, v436, v388, v389, v390, 0, v435, v368, v376, v383, v404, v405, (uint64_t)v406, (uint64_t)v407, v408, v409,
                      v410,
                      v411);
      swift_release();
      sub_1001781AC(v383, &qword_100E663F0);
      sub_1001781AC(v376, &qword_100E66418);
      sub_1001781AC(v368, &qword_100E66420);
      sub_1001781AC(v384, &qword_100E66428);
      sub_1001781AC(v387, &qword_100E66430);
      sub_1001781AC(v386, &qword_100E66438);
      sub_1001781AC(v385, &qword_100E66440);
      v391 = *(void (**)(void))(v153 + 8);
      sub_100164F40();
      v391();
      sub_100164F40();
      v391();
      return v101;
    case 3u:
      uint64_t v160 = type metadata accessor for AppConfigurationState();
      uint64_t v161 = v438;
      uint64_t v164 = sub_10017E050(v438, v162, v163, v160);
      uint64_t v165 = v437;
      uint64_t v168 = sub_1001630C0(v437, v166, v167, v164);
      uint64_t v169 = v436;
      sub_100163050(v436, v170, v171, v168);
      uint64_t v172 = (uint64_t)v442;
      sub_1001651E0((uint64_t)v442 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_notificationsOptIn, (void (*)(void))type metadata accessor for NotificationsOptInState, (uint64_t)&v443);
      uint64_t v173 = type metadata accessor for Date();
      uint64_t v174 = (uint64_t)v416;
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v416, 1, 1, v173);
      uint64_t v175 = v435;
      sub_1001C6768(2u, 0, 1, 2, 2, 2, v174, 2, v435, 3, 2, 2, 2, 2);
      sub_1001781AC(v174, (uint64_t *)&unk_100E73CA0);
      sub_10011E358(v97, (void (*)(void))type metadata accessor for NotificationsOptInState);
      sub_1001093B0();
      _s7Weather24LocationCompositionStateOwst_0(v176, v177, v178, (uint64_t)v433);
      uint64_t v179 = type metadata accessor for TimeState();
      sub_10019D7E8(v179);
      _s7Weather24LocationCompositionStateOwst_0(v91, 1, 1, v441);
      uint64_t v180 = sub_1001831F4();
      sub_100163034(v180, v181, v182, v165, v169, v183, v184, v185, v395, v175, v97, v174, v91, 0, 0, 0, 0, 0, 0,
        0,
        v172);
      sub_100186B80();
      sub_1001781AC(v91, &qword_100E663F0);
      sub_1001781AC(v174, &qword_100E66418);
      sub_1001781AC(v97, &qword_100E66420);
      sub_1001781AC(v175, &qword_100E66428);
      sub_1001781AC(v169, &qword_100E66430);
      uint64_t v186 = v165;
      goto LABEL_9;
    case 4u:
      sub_1001B1E64(v425 + 2, v425[5]);
      char v101 = v442;
      sub_10021D380((uint64_t)v442 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_view, v61, (void (*)(void))type metadata accessor for ViewState);
      uint64_t v187 = (char *)v101 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_environment;
      swift_beginAccess();
      char v188 = *((unsigned char *)v101 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_notifications);
      uint64_t v189 = (uint64_t)v101 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_notificationsOptIn;
      uint64_t v190 = v433;
      char v191 = *((unsigned char *)v101 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_notificationsOptIn + v433[13]);
      char v192 = *((unsigned char *)v101 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_notificationsOptIn + v433[16]);
      char v193 = *((unsigned char *)v101 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_notificationsOptIn + v433[14]);
      char v194 = *((unsigned char *)v101 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_notificationsOptIn + v433[15]);
      *(unsigned char *)(v61 + v57[5]) = v187[1];
      *(unsigned char *)(v61 + v57[6]) = v188;
      *(unsigned char *)(v61 + v57[7]) = v191;
      *(unsigned char *)(v61 + v57[8]) = v192;
      *(unsigned char *)(v61 + v57[9]) = v193;
      *(unsigned char *)(v61 + v57[10]) = v194;
      uint64_t v195 = sub_10087ACD0(v61);
      sub_10011E358(v61, (void (*)(void))type metadata accessor for NotificationsOptInInput);
      if (v195 > 1u) {
        goto LABEL_50;
      }
      type metadata accessor for NotificationsOptInViewState._Storage();
      uint64_t v196 = swift_allocObject();
      *(_WORD *)(v196 + 16) = v195;
      *(unsigned char *)(v196 + 18) = BYTE2(v195) & 1;
      *(unsigned char *)(v196 + 19) = BYTE3(v195);
      uint64_t v197 = type metadata accessor for AppConfigurationState();
      uint64_t v161 = v438;
      uint64_t v200 = sub_10017E050(v438, v198, v199, v197);
      uint64_t v201 = v437;
      uint64_t v204 = sub_1001630C0(v437, v202, v203, v200);
      uint64_t v205 = v436;
      sub_100163050(v436, v206, v207, v204);
      sub_1001651E0(v189, (void (*)(void))type metadata accessor for NotificationsOptInState, (uint64_t)&v443);
      uint64_t v208 = type metadata accessor for Date();
      uint64_t v209 = v416;
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v416, 1, 1, v208);
      uint64_t v210 = v435;
      sub_1001C6768(2u, 0, 0, 2, 2, 2, (uint64_t)v209, 2, v435, 3, 2, 2, 2, 0);
      sub_1001781AC((uint64_t)v209, (uint64_t *)&unk_100E73CA0);
      sub_10011E358(v195, (void (*)(void))type metadata accessor for NotificationsOptInState);
      sub_1001093B0();
      _s7Weather24LocationCompositionStateOwst_0(v211, v212, v213, (uint64_t)v190);
      uint64_t v214 = type metadata accessor for TimeState();
      sub_10019D7E8(v214);
      *uint64_t v209 = v196;
      swift_storeEnumTagMultiPayload();
      sub_10018207C();
      swift_retain();
      sub_10017A7F0();
      uint64_t v402 = (uint64_t)v190;
      v403 = v209;
      uint64_t v400 = v210;
      uint64_t v401 = v195;
      uint64_t v215 = sub_1001831F4();
      sub_100163034(v215, v216, v217, v201, v205, v218, v219, v220, v399[0], v400, v401, v402, (uint64_t)v403, v404, v405, (uint64_t)v406, (uint64_t)v407, v408, v409,
        v410,
        v411);
      sub_100186B80();
      swift_release();
      sub_1001781AC((uint64_t)v209, &qword_100E663F0);
      sub_1001781AC((uint64_t)v190, &qword_100E66418);
      sub_1001781AC(v195, &qword_100E66420);
      sub_1001781AC(v210, &qword_100E66428);
      sub_1001781AC(v205, &qword_100E66430);
      uint64_t v186 = v201;
LABEL_9:
      sub_1001781AC(v186, &qword_100E66438);
      uint64_t v221 = &qword_100E66440;
      uint64_t v222 = v161;
      goto LABEL_40;
    case 5u:
      char v101 = v442;
      sub_10021D380((uint64_t)v442 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_modalView, (uint64_t)v56, (void (*)(void))type metadata accessor for ModalViewState);
      uint64_t v223 = v441;
      swift_storeEnumTagMultiPayload();
      sub_10011990C();
      char v225 = v224;
      sub_10011E358((uint64_t)v53, (void (*)(void))type metadata accessor for ModalViewState);
      sub_10011E358((uint64_t)v56, (void (*)(void))type metadata accessor for ModalViewState);
      if ((v225 & 1) == 0)
      {
        if (qword_100E62798 != -1) {
          swift_once();
        }
        uint64_t v287 = type metadata accessor for Logger();
        sub_1002102B0(v287, (uint64_t)qword_100F51DE0);
        v288 = Logger.logObject.getter();
        os_log_type_t v289 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v288, v289))
        {
          v290 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v290 = 0;
          _os_log_impl((void *)&_mh_execute_header, v288, v289, "Trying to dismiss Location Viewer while modal view is presented, aborting dismissal.", v290, 2u);
          swift_slowDealloc();
        }

        goto LABEL_50;
      }
      uint64_t v226 = type metadata accessor for AppConfigurationState();
      uint64_t v229 = sub_10017E050(v438, v227, v228, v226);
      uint64_t v232 = sub_1001630C0(v437, v230, v231, v229);
      uint64_t v233 = sub_10017D384(v232);
      sub_100163050(v434, v234, v235, v233);
      uint64_t v236 = v418;
      sub_10021D380((uint64_t)v101 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_view, v418, (void (*)(void))type metadata accessor for ViewState);
      uint64_t v237 = v401;
      sub_10021D380(v431 + OBJC_IVAR____TtCV7Weather23LocationViewerViewState8_Storage_activeLocationState, v401, (void (*)(void))type metadata accessor for LocationViewerActiveLocationState);
      uint64_t v238 = sub_1001782AC();
      uint64_t v240 = v239;
      sub_10011E358(v237, (void (*)(void))type metadata accessor for LocationViewerActiveLocationState);
      type metadata accessor for ListViewState._Storage();
      swift_allocObject();
      sub_1001093B0();
      sub_1000EC58C(v241, v242, v243, 0, 0, 0, 0xE000000000000000, 0, 0, 0, v238, v240, 1, 0);
      uint64_t v244 = sub_1001627F4((uint64_t)&v446);
      _s7Weather24LocationCompositionStateOwst_0(v244, v245, v246, v432);
      uint64_t v247 = type metadata accessor for SearchViewState(0);
      uint64_t v248 = v421;
      _s7Weather24LocationCompositionStateOwst_0(v421, 1, 1, v247);
      uint64_t v249 = v420;
      uint64_t v250 = sub_1001A3370();
      _s7Weather24LocationCompositionStateOwst_0(v250, v251, v252, v417);
      v253 = v419;
      sub_100185434((uint64_t)v419);
      uint64_t v254 = v430;
      sub_10011D8AC();
      swift_release();
      sub_1001781AC((uint64_t)v253, &qword_100E663F8);
      sub_1001781AC(v249, &qword_100E66400);
      sub_1001781AC(v248, &qword_100E66408);
      sub_1001781AC(v237, &qword_100E66410);
      sub_10011E358(v236, (void (*)(void))type metadata accessor for ViewState);
      _s7Weather24LocationCompositionStateOwst_0(v254, 0, 1, (uint64_t)v440);
      uint64_t v255 = v439;
      _s7Weather24LocationCompositionStateOwst_0(v439, 1, 1, v223);
      sub_10017A7F0();
      uint64_t v402 = v254;
      v403 = (void *)v255;
      uint64_t v256 = sub_100183E90();
      uint64_t v258 = v437;
      uint64_t v257 = v438;
      uint64_t v259 = v436;
      sub_100163034(v256, v260, v438, v437, v436, v261, v262, v263, v399[0], v400, v401, v402, (uint64_t)v403, v404, v405, (uint64_t)v406, (uint64_t)v407, v408, v409,
        v410,
        v411);
      sub_100186B80();
      sub_1001781AC(v255, &qword_100E663F0);
      sub_1001781AC(v254, &qword_100E66418);
      sub_1001781AC(v236, &qword_100E66420);
      sub_1001781AC(v249, &qword_100E66428);
      sub_1001781AC(v259, &qword_100E66430);
      sub_1001781AC(v258, &qword_100E66438);
      uint64_t v221 = &qword_100E66440;
LABEL_15:
      uint64_t v222 = v257;
      goto LABEL_40;
    case 6u:
      sub_10017DF08(&qword_100E66460);
      uint64_t v264 = sub_100189F9C();
      _s7Weather24LocationCompositionStateOwst_0(v264, 1, 3, v265);
      uint64_t v266 = v97;
      uint64_t v267 = v431;
      v268 = v442;
      goto LABEL_13;
    case 7u:
      uint64_t v269 = v427;
      sub_100163050(v427, v102, v103, active);
      uint64_t v270 = sub_1001CCC58(v269, 0, 2, 4, 2, 3, v431);
      sub_1001781AC(v269, &qword_100E663D0);
      uint64_t v257 = v439;
      _s7Weather24LocationCompositionStateOwst_0(v439, 1, 1, v441);
      char v101 = (int *)sub_100728534(v270, v257, (uint64_t)v442);
      swift_release();
      uint64_t v221 = &qword_100E663F0;
      goto LABEL_15;
    case 8u:
      char v101 = v442;
      uint64_t v271 = (uint64_t)v442 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_view;
      uint64_t v272 = v405;
      sub_10021D380((uint64_t)v442 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_view, v405, (void (*)(void))type metadata accessor for ViewState);
      v273 = v440;
      v274 = v406;
      sub_10021D380(v272 + v440[5], (uint64_t)v406, (void (*)(void))type metadata accessor for ViewState.SecondaryViewState);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        sub_10011E358((uint64_t)v274, (void (*)(void))type metadata accessor for ViewState.SecondaryViewState);
LABEL_49:
        sub_10011E358(v272, (void (*)(void))type metadata accessor for ViewState);
        goto LABEL_50;
      }
      uint64_t v291 = *v274;
      if (*(void *)(v272 + v273[9] + 8) == 1)
      {
        uint64_t v57 = (int *)[self currentDevice];
        [v57 userInterfaceIdiom];

        if ((*(unsigned char *)(v272 + v273[7]) & 1) == 0)
        {
          swift_release();
          goto LABEL_49;
        }
      }
      sub_10011E358(v272, (void (*)(void))type metadata accessor for ViewState);
      if (*(unsigned char *)(v291 + OBJC_IVAR____TtCV7Weather23LocationViewerViewState8_Storage_addLocationAlertState) == 1)
      {
        uint64_t v292 = type metadata accessor for AppConfigurationState();
        uint64_t v295 = sub_10017E050(v438, v293, v294, v292);
        uint64_t v298 = sub_1001630C0(v437, v296, v297, v295);
        uint64_t v299 = sub_10017D384(v298);
        sub_100163050(v434, v300, v301, v299);
        uint64_t v302 = v418;
        sub_10021D380(v271, v418, (void (*)(void))type metadata accessor for ViewState);
        uint64_t v303 = v427;
        sub_100163050(v427, v304, v305, active);
        uint64_t v306 = sub_1001CCC58(v303, 3, 0, 4, 2, 3, v291);
        sub_1001781AC(v303, &qword_100E663D0);
        v307 = v422;
        uint64_t *v422 = v306;
        uint64_t v308 = v432;
        swift_storeEnumTagMultiPayload();
        sub_1001093B0();
        _s7Weather24LocationCompositionStateOwst_0(v309, v310, v311, v308);
        uint64_t v312 = type metadata accessor for SearchViewState(0);
        sub_1001D1CE4(v312);
        uint64_t v314 = *(void *)(v313 - 256);
        sub_100185434(v314);
        uint64_t v315 = v430;
        sub_10011D8AC();
        sub_1001781AC(v314, &qword_100E663F8);
        sub_1001781AC(v272, &qword_100E66400);
        sub_1001781AC((uint64_t)v57, &qword_100E66408);
        sub_1001781AC((uint64_t)v307, &qword_100E66410);
        sub_10011E358(v302, (void (*)(void))type metadata accessor for ViewState);
        sub_10018207C();
        uint64_t v316 = v439;
        _s7Weather24LocationCompositionStateOwst_0(v439, 1, 1, v441);
        sub_10017A7F0();
        uint64_t v402 = v315;
        v403 = (void *)v316;
        uint64_t v317 = sub_100183E90();
        uint64_t v319 = v437;
        uint64_t v318 = v438;
        uint64_t v320 = v436;
        char v101 = (int *)sub_100163034(v317, v321, v438, v437, v436, v322, v323, v324, v399[0], v400, v401, v402, (uint64_t)v403, v404, v405, (uint64_t)v406, (uint64_t)v407, v408, v409,
                        v410,
                        v411);
        swift_release();
        sub_1001781AC(v316, &qword_100E663F0);
        sub_1001781AC(v315, &qword_100E66418);
        sub_1001781AC(v314, &qword_100E66420);
        sub_1001781AC(v302, &qword_100E66428);
        sub_1001781AC(v320, &qword_100E66430);
        uint64_t v325 = v319;
        goto LABEL_39;
      }
      swift_release();
LABEL_50:
      swift_retain();
      return v101;
    case 9u:
      if (qword_100E62650 != -1) {
        swift_once();
      }
      char v101 = v442;
      v275 = v440;
      if ((byte_100F51C30 & 1) == 0) {
        goto LABEL_50;
      }
      uint64_t v276 = (uint64_t)v442 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_view;
      uint64_t v277 = v402;
      sub_10021D380((uint64_t)v442 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_view + v440[9], v402, (void (*)(void))type metadata accessor for DisplayMetrics);
      uint64_t v97 = sub_10058BCBC();
      sub_10011E358(v277, (void (*)(void))type metadata accessor for DisplayMetrics);
      if ((v97 & 1) != 0 || (*(unsigned char *)(v276 + v275[10] + 1) & 0xC0) != 0x40)
      {
        sub_10021D380((uint64_t)v101 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_modalView, (uint64_t)v56, (void (*)(void))type metadata accessor for ModalViewState);
        uint64_t v326 = type metadata accessor for ModalViewState.MapViewModal(0);
        sub_100163050((uint64_t)v53, v327, v328, v326);
        uint64_t v329 = v441;
        swift_storeEnumTagMultiPayload();
        sub_10011990C();
        char v331 = v330;
        sub_10011E358((uint64_t)v53, (void (*)(void))type metadata accessor for ModalViewState);
        sub_10011E358((uint64_t)v56, (void (*)(void))type metadata accessor for ModalViewState);
        if ((v331 & 1) == 0) {
          goto LABEL_50;
        }
        uint64_t v332 = type metadata accessor for AppConfigurationState();
        uint64_t v318 = v438;
        uint64_t v335 = sub_10017E050(v438, v333, v334, v332);
        uint64_t v336 = v437;
        uint64_t v339 = sub_1001630C0(v437, v337, v338, v335);
        uint64_t v340 = v436;
        sub_100163050(v436, v341, v342, v339);
        uint64_t v343 = v435;
        _s7Weather24LocationCompositionStateOwst_0(v435, 1, 1, (uint64_t)v433);
        uint64_t v344 = type metadata accessor for TimeState();
        uint64_t v345 = v434;
        sub_100163050(v434, v346, v347, v344);
        uint64_t v348 = v430;
        uint64_t v349 = sub_1001A3370();
        _s7Weather24LocationCompositionStateOwst_0(v349, v350, v351, (uint64_t)v275);
        uint64_t v352 = v439;
        swift_storeEnumTagMultiPayload();
        sub_1001093B0();
        _s7Weather24LocationCompositionStateOwst_0(v353, v354, v355, v329);
        sub_10017A7F0();
        sub_100163034(0, 3, v318, v336, v340, v356, v357, v358, 0, v343, v345, v348, v352, v404, v405, (uint64_t)v406, (uint64_t)v407, v408, v409,
          v410,
          v411);
        sub_100186B80();
        sub_1001781AC(v352, &qword_100E663F0);
        sub_1001781AC(v348, &qword_100E66418);
        sub_1001781AC(v345, &qword_100E66420);
        sub_1001781AC(v343, &qword_100E66428);
        sub_1001781AC(v340, &qword_100E66430);
        uint64_t v325 = v336;
LABEL_39:
        sub_1001781AC(v325, &qword_100E66438);
        uint64_t v221 = &qword_100E66440;
        uint64_t v222 = v318;
LABEL_40:
        sub_1001781AC(v222, v221);
      }
      else
      {
        sub_10017DF08(&qword_100E66460);
        uint64_t v278 = sub_100189F9C();
        _s7Weather24LocationCompositionStateOwst_0(v278, 2, 3, v279);
        uint64_t v266 = v97;
        uint64_t v267 = v431;
        v268 = v101;
LABEL_13:
        char v101 = (int *)sub_100728C8C(v266, v267, v268, v425, a3);
        sub_10011E358(v97, (void (*)(void))type metadata accessor for WeatherMapTrackingState);
      }
      return v101;
    default:
      (*(void (**)(uint64_t, int *, uint64_t))(v93 + 32))(v97, v101, v91);
      uint64_t v104 = v427;
      LocationModel.identifier.getter();
      sub_1001093B0();
      _s7Weather24LocationCompositionStateOwst_0(v105, v106, v107, v426);
      sub_1001093B0();
      _s7Weather24LocationCompositionStateOwst_0(v108, v109, v110, active);
      uint64_t v111 = sub_1001CCC58(v104, 3, 2, 1, 2, 3, v431);
      sub_1001781AC(v104, &qword_100E663D0);
      uint64_t v112 = v439;
      _s7Weather24LocationCompositionStateOwst_0(v439, 1, 1, v441);
      char v101 = (int *)sub_100728534(v111, v112, (uint64_t)v442);
      swift_release();
      sub_1001781AC(v112, &qword_100E663F0);
      (*(void (**)(uint64_t, uint64_t))(v93 + 8))(v97, v91);
      return v101;
  }
}

uint64_t sub_10009BFD8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for LocationModel();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(a1, v2);
}

uint64_t sub_10009C03C()
{
  sub_10018F6D8(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 48))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
  }

  return swift_deallocObject();
}

uint64_t sub_10009C09C()
{
  type metadata accessor for DetailChart(0);
  sub_100179CD4();
  uint64_t v4 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(unsigned __int8 *)(*(void *)(type metadata accessor for ChartProxy() - 8) + 80);
  uint64_t v6 = v1 + ((v4 + 16) & ~v4);
  sub_10017DF08(&qword_100E62CB8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    type metadata accessor for LayoutDirection();
    sub_100179DC0();
    sub_100162F0C();
    v7();
  }
  else
  {
    swift_release();
  }
  sub_10017DF08(&qword_100E66E50);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    type metadata accessor for ColorSchemeContrast();
    sub_100179DC0();
    sub_100162F0C();
    v8();
  }
  else
  {
    swift_release();
  }
  sub_10018F6D8(*(void *)(v6 + v0[6]), *(unsigned char *)(v6 + v0[6] + 8));
  uint64_t v9 = v6 + v0[7];
  type metadata accessor for ConditionDetailChartHeaderStringModel();
  sub_100179DC0();
  sub_100162F0C();
  v10();
  uint64_t v38 = type metadata accessor for DetailChartViewModel();
  uint64_t v11 = v9 + *(int *)(v38 + 20);
  swift_bridgeObjectRelease();
  uint64_t v12 = type metadata accessor for ChartViewModel(0);
  type metadata accessor for ChartKind();
  sub_100179DC0();
  sub_100162F0C();
  v13();
  swift_bridgeObjectRelease();
  type metadata accessor for DetailChartExtrema();
  sub_100179DC0();
  sub_100162F0C();
  v14();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_10027D954(*(void **)(v11 + *(int *)(v12 + 44)), *(void **)(v11 + *(int *)(v12 + 44) + 8), *(void *)(v11 + *(int *)(v12 + 44) + 16), *(unsigned char *)(v11 + *(int *)(v12 + 44) + 24));
  sub_10017DF08(&qword_100E6BF00);
  sub_1001816F0();
  uint64_t v15 = type metadata accessor for Date();
  if (!_s7Weather24LocationCompositionStateOwet_0(v5, 1, v15))
  {
    sub_100162880();
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v5, v15);
  }
  uint64_t v17 = v11 + *(int *)(v12 + 56);
  uint64_t v18 = sub_10017DF08(&qword_100E6BF10);
  if (!sub_100182B98(v18))
  {
    swift_release();
    v17 += *(int *)(v2 + 48);
    if (!_s7Weather24LocationCompositionStateOwet_0(v17, 1, v15))
    {
      sub_100162880();
      (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v17, v15);
    }
  }
  sub_1001816F0();
  type metadata accessor for ChartDarkeningScrim();
  sub_100179DC0();
  sub_100162F0C();
  v20();
  swift_bridgeObjectRelease();
  sub_100162880();
  uint64_t v22 = *(void (**)(void))(v21 + 8);
  sub_1001834A4();
  v22();
  sub_1001834A4();
  v22();
  sub_1001834A4();
  v22();
  sub_1001816F0();
  uint64_t v23 = type metadata accessor for DetailChartDataElement();
  if (!sub_100182B98(v23))
  {
    sub_100162880();
    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v17, v2);
  }
  swift_bridgeObjectRelease();
  sub_1001816F0();
  type metadata accessor for ChartPeakMarkStyle();
  sub_100179DC0();
  sub_100162F0C();
  v25();
  swift_bridgeObjectRelease();
  sub_1001816F0();
  type metadata accessor for ChartViewModelInterpolationMode();
  sub_100179DC0();
  sub_100162F0C();
  v26();
  sub_1001816F0();
  type metadata accessor for ChartPastDataTreatment();
  sub_100179DC0();
  sub_100162F0C();
  v27();
  sub_1001A46C4();
  sub_1001A46C4();
  sub_1001A46C4();
  sub_1001A46C4();
  sub_1001A46C4();
  swift_release();
  uint64_t v28 = v38;
  sub_10017E890();
  uint64_t v29 = type metadata accessor for LollipopViewModel();
  if (!sub_100188D64(v29))
  {
    swift_bridgeObjectRelease();
    type metadata accessor for DetailChartDataPoint();
    sub_100179DC0();
    sub_100162F0C();
    v30();
    type metadata accessor for LollipopDetailViewModel(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      swift_bridgeObjectRelease();
      type metadata accessor for TitleAndDetailLollipopDetailViewModel(0);
      type metadata accessor for AttributedString();
      sub_100179DC0();
      sub_100162F0C();
      v32();
      sub_100185B38();
      sub_100185B38();
      sub_100185B38();
      sub_100185B38();
      uint64_t v28 = v38;
    }
    else if (EnumCaseMultiPayload == 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      if (EnumCaseMultiPayload) {
        goto LABEL_22;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
  }
LABEL_22:
  uint64_t v33 = v9 + *(int *)(v28 + 28);
  type metadata accessor for ConditionDetailChartFooterViewModel();
  if (!sub_100182A28(v33))
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      type metadata accessor for TemperatureChartKind();
      sub_100179DC0();
      sub_100162F0C();
      v34();
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  uint64_t v35 = v6 + v0[9];
  if (!_s7Weather24LocationCompositionStateOwet_0(v35, 1, v15)) {
    ((void (*)(uint64_t, uint64_t))v22)(v35, v15);
  }
  sub_10017DF08(&qword_100E7DDF8);
  swift_release();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v6 + v0[10]);
  sub_100162F0C();
  v36();

  return swift_deallocObject();
}

uint64_t sub_10009C7E4()
{
  type metadata accessor for Location();
  sub_100179C0C();
  swift_release();
  uint64_t v0 = sub_100181AE0();
  v1(v0);
  sub_10012609C();

  return swift_deallocObject();
}

void sub_10009C870()
{
  sub_100162EA0();
  uint64_t v25 = v2;
  sub_10017DF08(&qword_100EB49A8);
  sub_100162E4C();
  __chkstk_darwin(v3);
  sub_10011C760();
  sub_10017DF08(&qword_100EB49B0);
  sub_100162E4C();
  __chkstk_darwin(v4);
  sub_1001626E0();
  uint64_t v7 = v6 - v5;
  uint64_t v8 = sub_10017DF08(&qword_100EB49B8);
  sub_100162E4C();
  __chkstk_darwin(v9);
  sub_1001626E0();
  uint64_t v12 = v11 - v10;
  uint64_t v13 = type metadata accessor for WeatherConditionBackgroundModifier(0);
  uint64_t v14 = v0 + *(int *)(v13 + 32);
  uint64_t v15 = *(void *)v14;
  char v16 = *(unsigned char *)(v14 + 8);
  sub_100195B7C(*(void *)v14, v16);
  sub_100149AE8();
  char v18 = v17;
  sub_10018F6D8(v15, v16);
  if (v18)
  {
    uint64_t v19 = *(void *)(v0 + *(int *)(v13 + 56));
    swift_retain();
    char v20 = static Edge.Set.all.getter();
    sub_10017DF08(&qword_100EB49D0);
    sub_100162E4C();
    (*(void (**)(uint64_t, uint64_t))(v21 + 16))(v12, v25);
    uint64_t v22 = v12 + *(int *)(v8 + 36);
    *(void *)uint64_t v22 = v19;
    *(unsigned char *)(v22 + 8) = v20;
    uint64_t v23 = &qword_100EB49B8;
    sub_10006DF38(v12, v7, &qword_100EB49B8);
    swift_storeEnumTagMultiPayload();
    sub_10009CADC();
    sub_1001246C8(&qword_100EB49D8, &qword_100EB49A8);
    sub_1001D0FF4();
    uint64_t v24 = v12;
  }
  else
  {
    sub_1001C8A6C(v25, v1);
    uint64_t v23 = &qword_100EB49A8;
    sub_10006DF38(v1, v7, &qword_100EB49A8);
    swift_storeEnumTagMultiPayload();
    sub_10009CADC();
    sub_1001246C8(&qword_100EB49D8, &qword_100EB49A8);
    sub_1001D0FF4();
    uint64_t v24 = v1;
  }
  sub_100178110(v24, v23);
  sub_100162694();
}

unint64_t sub_10009CADC()
{
  unint64_t result = qword_100EB49C0;
  if (!qword_100EB49C0)
  {
    sub_10018C6DC(&qword_100EB49B8);
    sub_1001246C8(&qword_100EB49C8, &qword_100EB49D0);
    sub_1001246C8(&qword_100E825E0, &qword_100E825E8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB49C0);
  }
  return result;
}

uint64_t sub_10009CBA0()
{
  return sub_10009CBCC();
}

uint64_t sub_10009CBCC()
{
  return EnvironmentValues.subscript.setter();
}

void sub_10009CC0C(uint64_t a1@<X8>)
{
  *(double *)a1 = sub_10009CC3C();
  *(void *)(a1 + 8) = v2;
  *(void *)(a1 + 16) = v3;
  *(void *)(a1 + 24) = v4;
}

double sub_10009CC3C()
{
  sub_10009CC7C();
  EnvironmentValues.subscript.getter();
  return v1;
}

unint64_t sub_10009CC7C()
{
  unint64_t result = qword_100E65F48;
  if (!qword_100E65F48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E65F48);
  }
  return result;
}

uint64_t sub_10009CCC8@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E6FC60);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v7)
  {
    uint64_t v4 = type metadata accessor for NewsArticleComponentFactory();
    uint64_t v5 = swift_allocObject();
    uint64_t result = sub_1001262E4(&v6, v5 + 16);
    a2[3] = v4;
    a2[4] = (uint64_t)&off_100E1D060;
    *a2 = v5;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10009CD6C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E8DD48);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v21)
  {
    uint64_t v4 = sub_1000DF0C4((uint64_t)v20, v21);
    __n128 v5 = __chkstk_darwin(v4);
    uint64_t v7 = (void *)((char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, __n128))(v8 + 16))(v7, v5);
    uint64_t v9 = *v7;
    uint64_t v10 = type metadata accessor for NewsArticleComponentFactory();
    void v19[3] = v10;
    uint64_t v19[4] = &off_100E1D060;
    v19[0] = v9;
    uint64_t v11 = type metadata accessor for LocationViewComponentFactory();
    uint64_t v12 = (void *)swift_allocObject();
    uint64_t v13 = sub_1000DF0C4((uint64_t)v19, v10);
    __n128 v14 = __chkstk_darwin(v13);
    char v16 = (void *)((char *)v19 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, __n128))(v17 + 16))(v16, v14);
    uint64_t v18 = *v16;
    void v12[5] = v10;
    v12[6] = &off_100E1D060;
    _OWORD v12[2] = v18;
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v19);
    uint64_t result = _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v20);
    a2[3] = v11;
    a2[4] = &off_100E35888;
    *a2 = v12;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t type metadata accessor for NewsArticleComponentFactory()
{
  return self;
}

uint64_t sub_10009CFAC@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E7C0D8);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v27)
  {
    __break(1u);
    goto LABEL_6;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E8DD68);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v25)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E7C0E0);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v23)
  {
    uint64_t v5 = sub_1000DF0C4((uint64_t)v26, v27);
    __n128 v6 = __chkstk_darwin(v5);
    uint64_t v8 = (uint64_t *)&v22[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
    (*(void (**)(uint64_t *, __n128))(v9 + 16))(v8, v6);
    uint64_t v10 = sub_1000DF0C4((uint64_t)v24, v25);
    __n128 v11 = __chkstk_darwin(v10);
    uint64_t v13 = (uint64_t *)&v22[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
    (*(void (**)(uint64_t *, __n128))(v14 + 16))(v13, v11);
    uint64_t v15 = sub_1000DF0C4((uint64_t)v22, v23);
    __n128 v16 = __chkstk_darwin(v15);
    uint64_t v18 = &v22[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
    (*(void (**)(unsigned char *, __n128))(v19 + 16))(v18, v16);
    char v20 = sub_10009D2D0(*v8, *v13, v18);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v22);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v24);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v26);
    uint64_t result = type metadata accessor for StandardLocationViewConfigurationFactory();
    a2[3] = result;
    a2[4] = &off_100E38CB8;
    *a2 = v20;
    return result;
  }
LABEL_7:
  __break(1u);
  return result;
}

void *sub_10009D2D0(uint64_t a1, uint64_t a2, const void *a3)
{
  uint64_t v6 = type metadata accessor for LocationViewDescriptor();
  void v35[3] = v6;
  v35[4] = &off_100E37020;
  v35[0] = a1;
  uint64_t v7 = type metadata accessor for LocationViewComponentFactory();
  uint64_t v33 = v7;
  uint64_t v34 = &off_100E35888;
  v32[0] = a2;
  uint64_t v30 = &type metadata for MapOverlayKindProvider;
  uint64_t v31 = &off_100E1D390;
  v29[0] = swift_allocObject();
  memcpy((void *)(v29[0] + 16), a3, 0x50uLL);
  type metadata accessor for StandardLocationViewConfigurationFactory();
  uint64_t v8 = (void *)swift_allocObject();
  uint64_t v9 = sub_1000DF0C4((uint64_t)v35, v6);
  __n128 v10 = __chkstk_darwin(v9);
  uint64_t v12 = (void *)((char *)&v29[-1] - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, __n128))(v13 + 16))(v12, v10);
  uint64_t v14 = sub_1000DF0C4((uint64_t)v32, v33);
  __n128 v15 = __chkstk_darwin(v14);
  uint64_t v17 = (void *)((char *)&v29[-1] - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, __n128))(v18 + 16))(v17, v15);
  uint64_t v19 = sub_1000DF0C4((uint64_t)v29, (uint64_t)v30);
  __n128 v20 = __chkstk_darwin(v19);
  uint64_t v22 = (char *)&v29[-1] - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, __n128))(v23 + 16))(v22, v20);
  uint64_t v24 = *v12;
  uint64_t v25 = *v17;
  void v8[5] = v6;
  void v8[6] = &off_100E37020;
  void v8[2] = v24;
  v8[10] = v7;
  v8[11] = &off_100E35888;
  v8[7] = v25;
  v8[15] = &type metadata for MapOverlayKindProvider;
  v8[16] = &off_100E1D390;
  uint64_t v26 = swift_allocObject();
  v8[12] = v26;
  memcpy((void *)(v26 + 16), v22, 0x50uLL);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v29);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v32);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v35);
  return v8;
}

uint64_t initializeWithCopy for MapOverlayKindProvider(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  long long v5 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 64) = v5;
  (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1 + 40, a2 + 40);
  return a1;
}

uint64_t type metadata accessor for LocationViewComponentFactory()
{
  return self;
}

uint64_t type metadata accessor for StandardLocationViewConfigurationFactory()
{
  return self;
}

uint64_t type metadata accessor for LocationViewDescriptor()
{
  return self;
}

uint64_t sub_10009D708@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v218 = a4;
  uint64_t v208 = a3;
  uint64_t v202 = a2;
  uint64_t v221 = a1;
  uint64_t v224 = a5;
  uint64_t v5 = type metadata accessor for MapsConfiguration.OverlayKind();
  uint64_t v6 = sub_100109308(v5);
  __chkstk_darwin(v6);
  sub_100109314();
  sub_100109328(v7);
  uint64_t v188 = type metadata accessor for WeatherDataModel();
  sub_100179C0C();
  uint64_t v187 = v8;
  __chkstk_darwin(v9);
  sub_100109314();
  sub_100109328(v10);
  uint64_t v211 = type metadata accessor for RainExpectation();
  sub_100179C0C();
  uint64_t v186 = v11;
  __chkstk_darwin(v12);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v13);
  sub_100128F8C();
  sub_100109328(v14);
  uint64_t v195 = type metadata accessor for WeatherAvailability.AvailabilityKind();
  sub_100179C0C();
  uint64_t v194 = v15;
  __chkstk_darwin(v16);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v17);
  sub_100128F8C();
  uint64_t v190 = v18;
  uint64_t v192 = type metadata accessor for WeatherAvailability();
  sub_100179C0C();
  uint64_t v191 = v19;
  __chkstk_darwin(v20);
  sub_100109314();
  sub_100109328(v21);
  uint64_t v215 = type metadata accessor for WeatherMapPrecipitationOverlayKind();
  sub_100179C0C();
  uint64_t v219 = v22;
  __chkstk_darwin(v23);
  sub_100162EF8();
  uint64_t v222 = v24;
  __chkstk_darwin(v25);
  sub_100128F8C();
  sub_100109338(v26);
  uint64_t v27 = sub_10017DF08(&qword_100E6ECB0);
  uint64_t v28 = sub_100109308(v27);
  __chkstk_darwin(v28);
  sub_100109314();
  sub_100109328(v29);
  uint64_t v204 = type metadata accessor for Wind();
  sub_100179C0C();
  uint64_t v203 = v30;
  __chkstk_darwin(v31);
  sub_100109314();
  sub_100109338(v32);
  uint64_t v205 = sub_10017DF08(&qword_100E6D0A8);
  sub_100179C0C();
  uint64_t v197 = v33;
  __chkstk_darwin(v34);
  sub_100109314();
  sub_100109338(v35);
  uint64_t v200 = sub_10017DF08(&qword_100E66CC8);
  sub_100179C0C();
  uint64_t v199 = v36;
  __chkstk_darwin(v37);
  sub_100109314();
  sub_100109328(v38);
  uint64_t v220 = type metadata accessor for WeatherMapOverlayKind();
  sub_100179C0C();
  uint64_t v226 = v39;
  __chkstk_darwin(v40);
  sub_100109314();
  sub_100109328(v41);
  uint64_t v214 = type metadata accessor for WeatherCondition();
  sub_100179C0C();
  uint64_t v213 = v42;
  __chkstk_darwin(v43);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v44);
  sub_100128F8C();
  sub_100109328(v45);
  int v216 = (void (*)(uint64_t, void, uint64_t))type metadata accessor for CurrentWeather();
  sub_100179C0C();
  char v225 = v46;
  __chkstk_darwin(v47);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v48);
  sub_100128F8C();
  sub_100109338(v49);
  uint64_t v50 = sub_10017DF08(&qword_100E65BC0);
  uint64_t v51 = sub_100109308(v50);
  __chkstk_darwin(v51);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v52);
  sub_100179C90();
  __chkstk_darwin(v53);
  sub_100179C90();
  __chkstk_darwin(v54);
  uint64_t v56 = (char *)&v175 - v55;
  __chkstk_darwin(v57);
  uint64_t v59 = (char *)&v175 - v58;
  __chkstk_darwin(v60);
  uint64_t v62 = (char *)&v175 - v61;
  __chkstk_darwin(v63);
  uint64_t v65 = (char *)&v175 - v64;
  __chkstk_darwin(v66);
  uint64_t v68 = (char *)&v175 - v67;
  __chkstk_darwin(v69);
  uint64_t v71 = (char *)&v175 - v70;
  __chkstk_darwin(v72);
  uint64_t v74 = (char *)&v175 - v73;
  __chkstk_darwin(v75);
  uint64_t v77 = (char *)&v175 - v76;
  static Settings.Maps.overrides.getter();
  char v78 = dispatch thunk of SettingGroup.isEnabled.getter();
  swift_release();
  if (v78)
  {
    type metadata accessor for SettingReader();
    static SettingReader.shared.getter();
    type metadata accessor for Settings.Maps.Overrides();
    static Settings.Maps.Overrides.defaultOverlayKind.getter();
    uint64_t v79 = (uint64_t)v217;
    SettingReader.read<A>(_:)();
    swift_release();
    swift_release();
    return sub_100632D94(v79, v224);
  }
  uint64_t v179 = v74;
  uint64_t v178 = v71;
  int v181 = v68;
  uint64_t v182 = v65;
  uint64_t v183 = v62;
  uint64_t v81 = v225;
  uint64_t v184 = v59;
  uint64_t v180 = v56;
  uint64_t v217 = v77;
  uint64_t v82 = v218;
  if ((sub_100031F8C((void *)v223 + 5) & 1) == 0)
  {
    uint64_t v87 = v82;
    uint64_t v88 = (uint64_t)v217;
    uint64_t v89 = v220;
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v217, 1, 1, v220);
    sub_100185470();
    sub_100162A74();
    uint64_t v90 = (void (*)(void, void))*((void *)v81 + 1);
    char v225 = v81 + 8;
    uint64_t v177 = v90;
    v90(v65, v216);
    uint64_t v91 = WeatherCondition.isPrecipitation.getter();
    uint64_t v176 = *(void (**)(void))(v213 + 8);
    ((void (*)(char *, uint64_t))v176)(v59, v214);
    if (v91)
    {
      sub_1001781AC(v88, &qword_100E65BC0);
      uint64_t v92 = sub_10019FE58();
      v93(v92);
      uint64_t v94 = sub_10019EE48();
      v95(v94);
      sub_1001A2264();
    }
    uint64_t v96 = (uint64_t)v179;
    sub_10009E9B4(v88, (uint64_t)v179);
    sub_1001636D4(v96);
    sub_1001781AC(v96, &qword_100E65BC0);
    uint64_t v97 = v222;
    uint64_t v98 = (uint64_t)v184;
    uint64_t v99 = (uint64_t)v183;
    uint64_t v100 = (uint64_t)v182;
    uint64_t v101 = (uint64_t)v181;
    if (v91 == 1)
    {
      uint64_t v91 = (uint64_t)v178;
      sub_100080B20(v202, v87, (uint64_t)v178);
      if (_s7Weather24LocationCompositionStateOwet_0(v91, 1, v89) == 1)
      {
        sub_1001781AC(v91, &qword_100E65BC0);
      }
      else
      {
        sub_1001781AC(v88, &qword_100E65BC0);
        uint64_t v102 = v91;
        uint64_t v91 = v226 + 32;
        uint64_t v103 = *(void (**)(uint64_t, uint64_t, uint64_t))(v226 + 32);
        uint64_t v104 = v196;
        v103(v196, v102, v89);
        uint64_t v101 = (uint64_t)v181;
        v103(v88, v104, v89);
        sub_1001A2264();
      }
      uint64_t v97 = v222;
    }
    sub_10009E9B4(v88, v101);
    sub_1001636D4(v101);
    sub_1001781AC(v101, &qword_100E65BC0);
    if (v91 == 1)
    {
      WeatherDataModel.hourlyForecast.getter();
      uint64_t v105 = Forecast<>.numberOfHoursWithPrecipitation(withinHoursFromNow:minimumChance:)();
      uint64_t v97 = v222;
      uint64_t v91 = v105;
      uint64_t v100 = (uint64_t)v182;
      sub_10017F874();
      v106();
      if (v91 >= 2)
      {
        sub_1001781AC(v88, &qword_100E65BC0);
        uint64_t v107 = sub_10019FE58();
        v108(v107);
        uint64_t v109 = sub_10019EE48();
        v110(v109);
        sub_1001A2264();
      }
    }
    sub_10009E9B4(v88, v100);
    sub_1001636D4(v100);
    sub_1001781AC(v100, &qword_100E65BC0);
    if (v91 == 1)
    {
      sub_100185470();
      sub_100162A74();
      uint64_t v111 = v222;
      v177(v91, v216);
      uint64_t v112 = v201;
      uint64_t v113 = v176;
      sub_1001631E8();
      v114();
      uint64_t v91 = sub_10088B240(v100, v112);
      sub_100164FC8();
      v113();
      uint64_t v99 = (uint64_t)v183;
      sub_100164FC8();
      v113();
      uint64_t v97 = v111;
      uint64_t v98 = (uint64_t)v184;
      if (v91)
      {
        sub_1001781AC(v88, &qword_100E65BC0);
        uint64_t v115 = sub_10019EE48();
        v116(v115);
        sub_1001A2264();
      }
    }
    sub_10009E9B4(v88, v99);
    sub_1001636D4(v99);
    sub_1001781AC(v99, &qword_100E65BC0);
    uint64_t v117 = v211;
    uint64_t v118 = (uint64_t)v223;
    uint64_t v119 = v212;
    if (v91 == 1)
    {
      sub_100185470();
      CurrentWeather.wind.getter();
      v177(v91, v216);
      uint64_t v91 = v207;
      Wind.gust.getter();
      sub_10017F874();
      v120();
      uint64_t v121 = v205;
      if (_s7Weather24LocationCompositionStateOwet_0(v91, 1, v205) == 1)
      {
        sub_1001781AC(v91, &qword_100E6ECB0);
        uint64_t v97 = v222;
        uint64_t v98 = (uint64_t)v184;
      }
      else
      {
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v197 + 32))(v198, v91, v121);
        LODWORD(v91) = v121;
        Measurement.value.getter();
        double v123 = v122;
        sub_10016285C();
        v124();
        uint64_t v97 = v222;
        uint64_t v98 = (uint64_t)v184;
        if (v123 > 24.14)
        {
          sub_1001781AC(v88, &qword_100E65BC0);
          uint64_t v125 = sub_10019EE48();
          v126(v125);
          sub_1001A2264();
        }
      }
    }
    sub_10009E9B4(v88, v98);
    sub_1001636D4(v98);
    sub_1001781AC(v98, &qword_100E65BC0);
    uint64_t v127 = v219;
    if (v91 == 1 && *(void *)(v208 + 16))
    {
      sub_1001781AC(v88, &qword_100E65BC0);
      uint64_t v128 = sub_10019FE58();
      v129(v128);
      uint64_t v130 = sub_10019EE48();
      v131(v130);
      sub_1001A2264();
    }
    uint64_t v132 = (uint64_t)v180;
    sub_10009E9B4(v88, (uint64_t)v180);
    sub_1001636D4(v132);
    sub_1001781AC(v132, &qword_100E65BC0);
    if (v91 == 1)
    {
      uint64_t v133 = v206;
      sub_100632BA0(v206);
      uint64_t v97 = v222;
      sub_1001781AC(v88, &qword_100E65BC0);
      _s7Weather24LocationCompositionStateOwst_0(v133, 0, 1, v89);
      sub_100295E40(v133, v88);
    }
    uint64_t v134 = v210;
    sub_10009E9B4(v88, v210);
    if (_s7Weather24LocationCompositionStateOwet_0(v134, 1, v89) == 1)
    {
      sub_1001781AC(v134, &qword_100E65BC0);
LABEL_38:
      uint64_t v167 = v224;
      goto LABEL_39;
    }
    uint64_t v135 = sub_100184A88();
    int v137 = v136(v135);
    if (v137 != enum case for WeatherMapOverlayKind.precipitation(_:))
    {
      uint64_t v165 = sub_100184A88();
      v166(v165);
      goto LABEL_38;
    }
    int v138 = v137;
    uint64_t v139 = sub_100184A88();
    v140(v139);
    uint64_t v141 = v134;
    uint64_t v142 = v215;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v127 + 32))(v119, v141, v215);
    uint64_t v143 = *(char **)(v127 + 104);
    ((void (*)(uint64_t, void, uint64_t))v143)(v97, enum case for WeatherMapPrecipitationOverlayKind.auto(_:), v142);
    char v144 = static WeatherMapPrecipitationOverlayKind.== infix(_:_:)();
    uint64_t v146 = *(void (**)(void))(v127 + 8);
    uint64_t v145 = v127 + 8;
    uint64_t v147 = v146;
    sub_10016285C();
    v148();
    if ((v144 & 1) == 0)
    {
      sub_10016285C();
      v147();
      uint64_t v118 = (uint64_t)v223;
      uint64_t v167 = v224;
LABEL_39:
      uint64_t v168 = (uint64_t)v217;
      uint64_t v169 = v209;
      sub_10009E9B4((uint64_t)v217, v209);
      sub_1000812EC(v118, (uint64_t)v227);
      if (_s7Weather24LocationCompositionStateOwet_0(v169, 1, v89) == 1)
      {
        sub_100632BA0(v167);
        sub_100081284((uint64_t)v227);
        sub_1001781AC(v168, &qword_100E65BC0);
        return sub_1001781AC(v169, &qword_100E65BC0);
      }
      else
      {
        sub_100081284((uint64_t)v227);
        sub_1001781AC(v168, &qword_100E65BC0);
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v226 + 32))(v167, v169, v89);
      }
    }
    uint64_t v223 = v147;
    char v225 = v143;
    LODWORD(v222) = v138;
    uint64_t v219 = v145;
    WeatherDataModel.availability.getter();
    uint64_t v149 = v190;
    WeatherAvailability.minuteAvailability.getter();
    sub_10017F874();
    v150();
    uint64_t v151 = v194;
    uint64_t v152 = v193;
    (*(void (**)(uint64_t, void, uint64_t))(v194 + 104))(v193, enum case for WeatherAvailability.AvailabilityKind.available(_:), v195);
    char v153 = sub_100214FFC(v149, v152);
    uint64_t v154 = *(void (**)(void))(v151 + 8);
    sub_100164FC8();
    v154();
    sub_100164FC8();
    v154();
    if (v153)
    {
      uint64_t v155 = v221;
      WeatherDataModel.rainExpectation.getter();
      uint64_t v156 = v186;
      uint64_t v157 = v185;
      int v216 = *(void (**)(uint64_t, void, uint64_t))(v186 + 104);
      v216(v185, enum case for RainExpectation.nextHour(_:), v117);
      LODWORD(v218) = static RainExpectation.== infix(_:_:)();
      uint64_t v158 = *(void (**)(void))(v156 + 8);
      sub_10016285C();
      v158();
      sub_10016285C();
      v158();
      uint64_t v159 = v187;
      uint64_t v160 = v189;
      uint64_t v161 = v188;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v187 + 16))(v189, v155, v188);
      if (v218)
      {
        (*(void (**)(uint64_t, uint64_t))(v159 + 8))(v160, v161);
        uint64_t v162 = sub_10018A96C();
        v163(v162);
        sub_1001781AC((uint64_t)v217, &qword_100E65BC0);
        uint64_t v164 = v225;
LABEL_45:
        uint64_t v173 = (unsigned int *)&enum case for WeatherMapPrecipitationOverlayKind.radar(_:);
LABEL_47:
        uint64_t v174 = v224;
        ((void (*)(uint64_t, void, uint64_t))v164)(v224, *v173, v215);
        return (*(uint64_t (**)(uint64_t, void, uint64_t))(v226 + 104))(v174, v222, v220);
      }
      WeatherDataModel.rainExpectation.getter();
      v216(v157, enum case for RainExpectation.now(_:), v211);
      char v170 = static RainExpectation.== infix(_:_:)();
      sub_10016285C();
      v158();
      sub_10016285C();
      v158();
      (*(void (**)(uint64_t, uint64_t))(v159 + 8))(v189, v161);
      uint64_t v171 = sub_10018A96C();
      v172(v171);
      sub_1001781AC((uint64_t)v217, &qword_100E65BC0);
      uint64_t v164 = v225;
      if (v170) {
        goto LABEL_45;
      }
    }
    else
    {
      ((void (*)(uint64_t, uint64_t))v223)(v212, v215);
      sub_1001781AC((uint64_t)v217, &qword_100E65BC0);
      uint64_t v164 = v225;
    }
    uint64_t v173 = (unsigned int *)&enum case for WeatherMapPrecipitationOverlayKind.forecast(_:);
    goto LABEL_47;
  }
  uint64_t v83 = enum case for WeatherMapOverlayKind.airQuality(_:);
  uint64_t v84 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v226 + 104);
  uint64_t v85 = v224;
  uint64_t v86 = v220;

  return v84(v85, v83, v86);
}

uint64_t sub_10009E9B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10017DF08(&qword_100E65BC0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10009EA1C@<X0>(_OWORD *a1@<X8>)
{
  *a1 = *(_OWORD *)(v1 + 24);
  uint64_t v2 = (uint64_t)a1 + *(int *)(sub_10017DF08(&qword_100E951D8) + 36);
  swift_unknownObjectRetain();
  return sub_10009EA7C((void *)v1, v2);
}

uint64_t sub_10009EA7C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = a1[2];
  uint64_t v5 = a1[3];
  uint64_t v6 = a1[4];
  uint64_t v7 = a1[5];
  uint64_t v8 = a1[6];
  sub_10020D948((uint64_t)(a1 + 7), (uint64_t)v11);
  sub_10020D948((uint64_t)(a1 + 12), (uint64_t)v10);
  swift_retain();
  swift_retain();
  swift_unknownObjectRetain();
  swift_retain();
  return sub_10009EB2C(v4, v5, v6, v7, v8, v11, v10, a2);
}

uint64_t sub_10009EB2C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, long long *a6@<X6>, long long *a7@<X7>, uint64_t a8@<X8>)
{
  *(void *)(a8 + 144) = swift_getKeyPath();
  *(unsigned char *)(a8 + 152) = 0;
  uint64_t v14 = (int *)type metadata accessor for LocationContentView(0);
  uint64_t v15 = (uint64_t *)(a8 + v14[13]);
  *uint64_t v15 = swift_getKeyPath();
  sub_10017DF08(&qword_100E63BD0);
  sub_10018C5D8();
  uint64_t v16 = a8 + v14[14];
  *(void *)uint64_t v16 = swift_getKeyPath();
  *(unsigned char *)(v16 + 8) = 0;
  uint64_t v17 = (uint64_t *)(a8 + v14[15]);
  *uint64_t v17 = swift_getKeyPath();
  sub_10017DF08(&qword_100E63BC8);
  sub_10018C5D8();
  uint64_t v18 = a8 + v14[16];
  *(void *)uint64_t v18 = swift_getKeyPath();
  *(void *)(v18 + 8) = 0;
  *(void *)(v18 + 16) = 0;
  *(void *)(v18 + 24) = 0;
  *(unsigned char *)(v18 + 32) = 0;
  uint64_t v19 = a8 + v14[17];
  *(void *)uint64_t v19 = swift_getKeyPath();
  *(unsigned char *)(v19 + 8) = 0;
  uint64_t v20 = a8 + v14[18];
  *(void *)uint64_t v20 = swift_getKeyPath();
  *(unsigned char *)(v20 + 8) = 0;
  uint64_t v21 = a8 + v14[19];
  *(void *)uint64_t v21 = swift_getKeyPath();
  *(_OWORD *)(v21 + 8) = 0u;
  *(_OWORD *)(v21 + 24) = 0u;
  *(_OWORD *)(v21 + 33) = 0u;
  uint64_t v22 = a8 + v14[20];
  *(void *)uint64_t v22 = sub_10021FF98;
  *(void *)(v22 + 8) = 0;
  *(unsigned char *)(v22 + 16) = 0;
  uint64_t v23 = (uint64_t *)(a8 + v14[21]);
  type metadata accessor for ObservableResolver();
  sub_100135128((uint64_t)&qword_100E70FD0);
  *uint64_t v23 = EnvironmentObject.init()();
  v23[1] = v24;
  Text.Measurements.init()();
  sub_10017DF08(&qword_100E64A38);
  sub_10024D5E4((uint64_t)&qword_100E64A40);
  *(void *)a8 = ObservedObject.init(wrappedValue:)();
  *(void *)(a8 + 8) = v25;
  *(void *)(a8 + 16) = a1;
  *(void *)(a8 + 24) = a2;
  *(void *)(a8 + 32) = a3;
  *(void *)(a8 + 40) = a4;
  *(void *)(a8 + 48) = a5;
  sub_1001E9994(a5 + 16, (uint64_t)v29);
  type metadata accessor for WireframeContentPrefetcher();
  swift_allocObject();
  *(void *)(a8 + 136) = sub_10009EDE4(v29);
  sub_1001262E4(a6, a8 + 56);
  return sub_1001262E4(a7, a8 + 96);
}

uint64_t type metadata accessor for WireframeContentPrefetcher()
{
  return self;
}

uint64_t sub_10009EDE4(long long *a1)
{
  sub_10017DF08(&qword_100EB71B0);
  uint64_t v3 = swift_allocObject();
  *(_DWORD *)(v3 + 24) = 0;
  *(void *)(v3 + 16) = &_swiftEmptyArrayStorage;
  *(void *)(v1 + 56) = v3;
  *(void *)(v1 + 64) = 0;
  *(unsigned char *)(v1 + 72) = 0;
  sub_1001262E4(a1, v1 + 16);
  return v1;
}

void *sub_10009EE44(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (uint64_t)a1 + v4;
  uint64_t v6 = (uint64_t)a2 + v4;
  uint64_t v7 = type metadata accessor for ContentStatusBanner();
  int v8 = _s7Weather24LocationCompositionStateOwet_0(v5, 1, v7);
  int v9 = _s7Weather24LocationCompositionStateOwet_0(v6, 1, v7);
  if (v8)
  {
    if (!v9)
    {
      *(unsigned char *)uint64_t v5 = *(unsigned char *)v6;
      if (*(void *)(v6 + 16) >= 2uLL)
      {
        *(void *)(v5 + 8) = *(void *)(v6 + 8);
        *(void *)(v5 + 16) = *(void *)(v6 + 16);
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(v5 + 8) = *(_OWORD *)(v6 + 8);
      }
      uint64_t v14 = *(int *)(v7 + 24);
      uint64_t v15 = (void *)(v5 + v14);
      uint64_t v16 = (const void *)(v6 + v14);
      uint64_t v17 = type metadata accessor for Date();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v16, 1, v17))
      {
        uint64_t v18 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
        memcpy(v15, v16, *(void *)(*(void *)(v18 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v15, 0, 1, v17);
      }
      uint64_t v19 = v5;
      uint64_t v20 = v7;
      goto LABEL_17;
    }
    goto LABEL_7;
  }
  if (v9)
  {
    sub_100151660();
LABEL_7:
    size_t v10 = *(void *)(*(void *)(sub_10017DF08(&qword_100E63A10) - 8) + 64);
    uint64_t v11 = (void *)v5;
    uint64_t v12 = (const void *)v6;
    goto LABEL_8;
  }
  *(unsigned char *)uint64_t v5 = *(unsigned char *)v6;
  unint64_t v13 = *(void *)(v6 + 16);
  if (*(void *)(v5 + 16) >= 2uLL)
  {
    if (v13 >= 2)
    {
      *(void *)(v5 + 8) = *(void *)(v6 + 8);
      *(void *)(v5 + 16) = *(void *)(v6 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_23;
    }
    sub_10027B4D4(v5 + 8);
    goto LABEL_21;
  }
  if (v13 < 2)
  {
LABEL_21:
    *(_OWORD *)(v5 + 8) = *(_OWORD *)(v6 + 8);
    goto LABEL_23;
  }
  *(void *)(v5 + 8) = *(void *)(v6 + 8);
  *(void *)(v5 + 16) = *(void *)(v6 + 16);
  swift_bridgeObjectRetain();
LABEL_23:
  uint64_t v22 = *(int *)(v7 + 24);
  uint64_t v23 = v5 + v22;
  uint64_t v24 = v6 + v22;
  uint64_t v25 = type metadata accessor for Date();
  int v26 = _s7Weather24LocationCompositionStateOwet_0(v23, 1, v25);
  int v27 = _s7Weather24LocationCompositionStateOwet_0(v24, 1, v25);
  if (v26)
  {
    if (!v27)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 16))(v23, v24, v25);
      uint64_t v19 = v23;
      uint64_t v20 = v25;
LABEL_17:
      _s7Weather24LocationCompositionStateOwst_0(v19, 0, 1, v20);
      return a1;
    }
  }
  else
  {
    uint64_t v28 = *(void *)(v25 - 8);
    if (!v27)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v28 + 24))(v23, v24, v25);
      return a1;
    }
    (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v23, v25);
  }
  size_t v10 = *(void *)(*(void *)(sub_10017DF08((uint64_t *)&unk_100E73CA0) - 8) + 64);
  uint64_t v11 = (void *)v23;
  uint64_t v12 = (const void *)v24;
LABEL_8:
  memcpy(v11, v12, v10);
  return a1;
}

uint64_t sub_10009F1B0@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = static HorizontalAlignment.center.getter();
  *(void *)(a2 + 8) = 0;
  *(unsigned char *)(a2 + 16) = 0;
  sub_10017DF08(&qword_100EA1630);
  return a1();
}

uint64_t sub_10009F208@<X0>(uint64_t a1@<X8>)
{
  sub_1001D2014();
  sub_10018B1B0();
  unint64_t v4 = (v3 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v5 = (v4 + 39) & 0xFFFFFFFFFFFFFFF8;
  return sub_10009F2BC(v1 + v6, *(void *)(v1 + v4), *(void *)(v1 + v4 + 8), *(unsigned char *)(v1 + v4 + 16), *(void *)(v1 + v4 + 24), *(void *)(v1 + v5), *(void *)(v1 + v5 + 8), *(unsigned __int8 *)(v1 + v5 + 16), a1, *(double *)(v1 + v3), *(void *)(v1 + v5 + 24), *(void *)(v1 + ((v5 + 39) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v1 + ((v5 + 39) & 0xFFFFFFFFFFFFFFF8) + 8), *(void *)(v1 + ((v5 + 39) & 0xFFFFFFFFFFFFFFF8) + 16), *(void *)(v1 + ((v5 + 39) & 0xFFFFFFFFFFFFFFF8) + 24));
}

uint64_t sub_10009F2BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, int a8@<W7>, uint64_t a9@<X8>, double a10@<D0>, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  LODWORD(v63) = a8;
  uint64_t v72 = a9;
  uint64_t v76 = a15;
  uint64_t v65 = a7;
  uint64_t v66 = a14;
  uint64_t v73 = a12;
  uint64_t v74 = a13;
  uint64_t v58 = a11;
  uint64_t v71 = type metadata accessor for LocationViewModel();
  __chkstk_darwin(v71);
  uint64_t v70 = (char *)v55 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_10017DF08(&qword_100EA1638);
  __chkstk_darwin(v23);
  uint64_t v25 = (char *)v55 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = sub_10017DF08(&qword_100EA1640);
  __chkstk_darwin(v64);
  uint64_t v68 = (uint64_t)v55 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v69 = sub_10017DF08(&qword_100EA1648);
  __chkstk_darwin(v69);
  uint64_t v67 = (uint64_t)v55 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v28 = sub_10009F7D0(a10);
  if (qword_100E62288 != -1) {
    swift_once();
  }
  int v57 = byte_100F51391;
  uint64_t v75 = a1;
  uint64_t v29 = *(void *)(a1 + 48);
  uint64_t v56 = *(int *)(v23 + 48);
  uint64_t v77 = 0;
  swift_retain();
  int v61 = a4 & 1;
  uint64_t v30 = a2;
  uint64_t v62 = a2;
  uint64_t v31 = a3;
  sub_100190CC4(v30, a3, a4 & 1);
  swift_bridgeObjectRetain();
  uint64_t v60 = a5;
  char v32 = v63 & 1;
  int v59 = v63 & 1;
  uint64_t v63 = a6;
  uint64_t v33 = v65;
  sub_100190CC4(a6, v65, v32);
  uint64_t v34 = v58;
  swift_bridgeObjectRetain();
  uint64_t v35 = v73;
  uint64_t v36 = v74;
  uint64_t v37 = v66;
  uint64_t v38 = v76;
  sub_100147E1C(v73, v74, v66, v76);
  sub_10017DF08(&qword_100E74130);
  State.init(wrappedValue:)();
  *(_OWORD *)&v25[v56] = v78;
  *(void *)uint64_t v25 = 0x6E6F697461636F6CLL;
  *((void *)v25 + 1) = 0xE800000000000000;
  v25[16] = v57;
  v55[1] = v29;
  *((void *)v25 + 3) = v29;
  uint64_t v39 = &v25[*(int *)(v23 + 44)];
  swift_retain();
  *((void *)&v54 + 1) = v37;
  *((void *)&v53 + 1) = v35;
  *(void *)&long long v54 = v36;
  *(void *)&long long v53 = v34;
  uint64_t v40 = (uint64_t)v39;
  uint64_t v41 = v62;
  char v42 = v61;
  uint64_t v43 = v63;
  LOBYTE(v36) = v59;
  sub_10012D84C(v75, v62, v31, v61, v60, v63, v33, v59, v40, v28, v53, v54, v38);
  sub_100191924(v41, v31, v42);
  swift_bridgeObjectRelease();
  sub_100191924(v43, v33, v36);
  swift_bridgeObjectRelease();
  sub_100147E60(v73, v74, v37, v76);
  swift_release();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v45 = v68;
  sub_10006DF38((uint64_t)v25, v68, &qword_100EA1638);
  uint64_t v46 = v45 + *(int *)(v64 + 36);
  *(void *)uint64_t v46 = KeyPath;
  *(double *)(v46 + 8) = a10;
  sub_100178110((uint64_t)v25, &qword_100EA1638);
  swift_retain();
  uint64_t v47 = (uint64_t)v70;
  sub_100133E68();
  swift_release();
  char v48 = *(unsigned char *)(v47 + *(int *)(v71 + 68));
  sub_1001338DC(v47, (void (*)(void))type metadata accessor for LocationViewModel);
  uint64_t v49 = swift_getKeyPath();
  uint64_t v50 = v67;
  sub_10006DF38(v45, v67, &qword_100EA1640);
  uint64_t v51 = v50 + *(int *)(v69 + 36);
  *(unsigned char *)uint64_t v51 = v48;
  *(double *)(v51 + 8) = v28;
  *(void *)(v51 + 16) = v49;
  *(unsigned char *)(v51 + 24) = 0;
  sub_100178110(v45, &qword_100EA1640);
  sub_10009FA14();
  View.setForegroundEffectContainer()();
  return sub_100178110(v50, &qword_100EA1648);
}

double sub_10009F7D0(double a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for LocationViewModel();
  uint64_t v5 = v4 - 8;
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  sub_100133E68();
  swift_release();
  int v8 = v7[*(int *)(v5 + 76)];
  sub_1001338DC((uint64_t)v7, (void (*)(void))type metadata accessor for LocationViewModel);
  uint64_t v9 = type metadata accessor for LocationContentView(0);
  size_t v10 = (long long *)(v2 + *(int *)(v9 + 64));
  if (v8 == 1)
  {
    long long v11 = v10[1];
    long long v22 = *v10;
    long long v23 = v11;
    LOBYTE(v24) = *((unsigned char *)v10 + 32);
    sub_10024D364((uint64_t)&v22, (uint64_t)v29, &qword_100E63F98);
    sub_1000FA648((uint64_t)v29, (void (*)(void, void, void, void, void))sub_100190CD4);
    sub_1000FA688();
    double v13 = v12;
    sub_1000FA648((uint64_t)&v22, (void (*)(void, void, void, void, void))sub_100191934);
  }
  else
  {
    uint64_t v14 = v9;
    long long v15 = v10[1];
    v26[0] = *v10;
    v26[1] = v15;
    char v27 = *((unsigned char *)v10 + 32);
    sub_10024D364((uint64_t)v26, (uint64_t)v28, &qword_100E63F98);
    sub_1000FA648((uint64_t)v28, (void (*)(void, void, void, void, void))sub_100190CD4);
    sub_1000FA688();
    double v17 = v16;
    sub_1000FA648((uint64_t)v26, (void (*)(void, void, void, void, void))sub_100191934);
    uint64_t v18 = (long long *)(v2 + *(int *)(v14 + 76));
    long long v19 = v18[1];
    long long v22 = *v18;
    long long v23 = v19;
    long long v24 = v18[2];
    char v25 = *((unsigned char *)v18 + 48);
    sub_10024D364((uint64_t)&v22, (uint64_t)v29, &qword_100E63DB0);
    sub_1000FDD1C((uint64_t)v29, (void (*)(void, void, void, void, void, void, void))sub_100193D54);
    sub_1000FDD60();
    sub_1000FDD1C((uint64_t)&v22, (void (*)(void, void, void, void, void, void, void))sub_10014DC00);
    double v13 = v17 - v21[2];
  }
  return v13 + a1;
}

unint64_t sub_10009FA14()
{
  unint64_t result = qword_100EA1650;
  if (!qword_100EA1650)
  {
    sub_10018C6DC(&qword_100EA1648);
    sub_10000790C();
    sub_100217280();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA1650);
  }
  return result;
}

uint64_t destroy for LocationViewerView(uint64_t a1)
{
  swift_release();
  swift_release();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1 + 16);
  swift_unknownObjectRelease();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1 + 80);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1 + 120);
  swift_release();
  uint64_t v2 = *(void *)(a1 + 168);
  char v3 = *(unsigned char *)(a1 + 176);

  return sub_10018F6D8(v2, v3);
}

uint64_t sub_10009FB00(uint64_t a1)
{
  uint64_t v42 = type metadata accessor for CallbackScope();
  sub_100179C0C();
  uint64_t v40 = v2;
  __chkstk_darwin(v3);
  uint64_t v38 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for Scope();
  sub_100179C0C();
  uint64_t v7 = v6;
  __chkstk_darwin(v8);
  size_t v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  ProxyContainer.public.getter();
  type metadata accessor for Client();
  sub_10017A54C();
  swift_release();
  uint64_t v11 = enum case for Scope.singleton(_:);
  double v12 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 104);
  v12(v10, enum case for Scope.singleton(_:), v5);
  char v32 = v12;
  uint64_t v37 = v7 + 104;
  Definition.inScope(_:)();
  swift_release();
  swift_release();
  double v13 = *(void (**)(uint64_t))(v7 + 8);
  uint64_t v14 = sub_10017A56C();
  v13(v14);
  uint64_t v33 = v13;
  uint64_t v34 = v7 + 8;
  ProxyContainer.public.getter();
  sub_10017DF08(&qword_100E80760);
  sub_100179D0C();
  swift_release();
  v12(v10, v11, v5);
  Definition.inScope(_:)();
  swift_release();
  swift_release();
  uint64_t v15 = sub_10017A56C();
  v13(v15);
  ProxyContainer.callback.getter();
  sub_1001B1E64(v43, v43[3]);
  sub_10017DF08(&qword_100E71B40);
  int v39 = enum case for CallbackScope.any(_:);
  uint64_t v16 = v40;
  uint64_t v41 = *(void (**)(void))(v40 + 104);
  uint64_t v36 = v40 + 104;
  double v17 = v38;
  uint64_t v18 = v42;
  ((void (*)(char *))v41)(v38);
  dispatch thunk of CallbackRegistrationType.whenResolving<A>(_:scope:callback:)();
  uint64_t v35 = *(void (**)(void))(v16 + 8);
  uint64_t v40 = v16 + 8;
  ((void (*)(char *, uint64_t))v35)(v17, v18);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v43);
  ProxyContainer.public.getter();
  type metadata accessor for SessionEventsAndDataCoordinator();
  sub_10017A54C();
  swift_release();
  uint64_t v19 = enum case for Scope.containerSingleton(_:);
  uint64_t v20 = v32;
  v32(v10, enum case for Scope.containerSingleton(_:), v5);
  Definition.inScope(_:)();
  swift_release();
  swift_release();
  uint64_t v21 = v33;
  ((void (*)(char *, uint64_t))v33)(v10, v5);
  ProxyContainer.public.getter();
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  unsigned int v31 = v19;
  v20(v10, v19, v5);
  Definition.inScope(_:)();
  swift_release();
  swift_release();
  uint64_t v22 = sub_10019ED2C();
  v21(v22);
  ProxyContainer.public.getter();
  sub_10017DF08(&qword_100E80768);
  sub_100179D0C();
  swift_release();
  v20(v10, v19, v5);
  Definition.inScope(_:)();
  swift_release();
  swift_release();
  uint64_t v23 = sub_10019ED2C();
  v21(v23);
  ProxyContainer.public.getter();
  sub_10017DF08(&qword_100E71B58);
  sub_100179D0C();
  swift_release();
  swift_release();
  ProxyContainer.public.getter();
  type metadata accessor for SessionScenePhaseObserver();
  sub_10017A54C();
  swift_release();
  v20(v10, v31, v5);
  Definition.inScope(_:)();
  swift_release();
  swift_release();
  uint64_t v24 = sub_10019ED2C();
  v21(v24);
  ProxyContainer.private.getter();
  RegistrationContainer.lazy(block:)();
  swift_release();
  uint64_t v30 = a1;
  ProxyContainer.callback.getter();
  uint64_t v37 = v44;
  sub_10017FF60();
  sub_10017DF08(&qword_100E80770);
  char v25 = v41;
  sub_1001D1A98();
  v25();
  sub_1001A0A5C();
  uint64_t v26 = v35;
  sub_1001629F8();
  v26();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v43);
  ProxyContainer.callback.getter();
  uint64_t v37 = v44;
  sub_10017FF60();
  sub_10017DF08((uint64_t *)&unk_100E74C08);
  sub_1001D1A98();
  v25();
  sub_1001A0A5C();
  sub_1001629F8();
  v26();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v43);
  ProxyContainer.callback.getter();
  sub_10017FF60();
  sub_10017DF08(&qword_100E80778);
  sub_1001D1A98();
  v27();
  sub_1001A21AC();
  dispatch thunk of CallbackRegistrationType.whenResolving<A>(_:scope:callback:)();
  sub_1001629F8();
  v26();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v43);
  ProxyContainer.private.getter();
  sub_10017DF08(&qword_100E80780);
  sub_100179D0C();
  swift_release();
  swift_release();
  ProxyContainer.callback.getter();
  sub_10017FF60();
  sub_10017DF08(&qword_100E7CD08);
  sub_1001D1A98();
  v28();
  sub_1001A21AC();
  dispatch thunk of CallbackRegistrationType.whenResolving<A>(_:scope:callback:)();
  sub_1001629F8();
  v26();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v43);
  ProxyContainer.public.getter();
  sub_10017DF08(&qword_100E80788);
  sub_100179D0C();
  swift_release();
  swift_release();
  ProxyContainer.public.getter();
  sub_10017DF08(&qword_100E80790);
  sub_100179D0C();
  swift_release();
  return swift_release();
}

uint64_t sub_1000A02F4@<X0>(void *a1@<X0>, uint64_t *a2@<X1>, uint64_t (*a3)(unsigned char *, uint64_t)@<X2>, uint64_t *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10 = v5 + *a1;
  swift_beginAccess();
  sub_1001262FC(v10, (uint64_t)v14, a2);
  if (v15) {
    return a3(v14, a5);
  }
  sub_1001781AC((uint64_t)v14, a2);
  sub_1000A0944((uint64_t)v14);
  sub_1001B1E64(v14, v15);
  sub_10017DF08(a4);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v13)
  {
    a3(v12, a5);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v14);
    sub_10020D948(a5, (uint64_t)v14);
    swift_beginAccess();
    sub_1001DF004((uint64_t)v14, v10, a2);
    return swift_endAccess();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1000A0428(void *a1, uint64_t a2)
{
  uint64_t v4 = v2;
  uint64_t v30 = a2;
  uint64_t v6 = type metadata accessor for StartupTaskExecutionPhase();
  sub_100179C0C();
  uint64_t v8 = v7;
  __chkstk_darwin(v9);
  sub_10012B938();
  uint64_t v10 = type metadata accessor for Container.Environment();
  sub_100179C0C();
  uint64_t v12 = v11;
  *(void *)&double v14 = __chkstk_darwin(v13).n128_u64[0];
  uint64_t v16 = (char *)&v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (objc_msgSend(a1, "launchedToTest", v14)) {
    [a1 _stopHangTracer];
  }
  [self setSuppressEngagement:1];
  if (DeviceRequiresProMotionOptOut())
  {
    id v17 = [self mainDisplay];
    if (v17)
    {
      uint64_t v18 = v17;
      [v17 overrideMinimumFrameDuration:4];
    }
  }
  sub_10017DF08(&qword_100E64020);
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_100C251B0;
  sub_10001F464();
  ContainerManager.containerEnvironment.getter();
  swift_release();
  sub_1000A382C(&qword_100E6F4B0, 255, (void (*)(uint64_t))&type metadata accessor for Container.Environment);
  uint64_t v20 = dispatch thunk of CustomStringConvertible.description.getter();
  uint64_t v22 = v21;
  (*(void (**)(char *, uint64_t))(v12 + 8))(v16, v10);
  *(void *)(v19 + 56) = &type metadata for String;
  *(void *)(v19 + 64) = sub_10012B7C0();
  *(void *)(v19 + 32) = v20;
  *(void *)(v19 + 40) = v22;
  sub_1001ABC4C(0, (unint64_t *)&qword_100E62D68);
  uint64_t v23 = (void *)static OS_os_log.default.getter();
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  swift_bridgeObjectRelease();

  if (qword_100E62280 != -1) {
    swift_once();
  }
  uint64_t v24 = qword_100F51388;
  swift_retain();
  *(unsigned char *)(v24 + 16) = TFSetupCrashDetector();
  swift_release();
  sub_10001E018();
  sub_10002A530();
  sub_1000A0944((uint64_t)v31);
  sub_1001B1E64(v31, v32);
  type metadata accessor for StartupTaskManager();
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!result)
  {
    __break(1u);
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v31);
  if (v30) {
    Dictionary<>.applicationStateLaunchOptions.getter();
  }
  uint64_t v26 = sub_10017FAE8();
  v27(v26);
  StartupTaskManager.startAllTasks(launchOptions:phase:)();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v3, v6);
  sub_10017A018();
  sub_1001B1E64(v31, v32);
  type metadata accessor for SessionManager();
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!result) {
    goto LABEL_20;
  }
  *(void *)(v4 + OBJC_IVAR____TtC7Weather11AppDelegate_sessionManager) = result;
  swift_release();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v31);
  sub_10017A018();
  sub_1001B1E64(v31, v32);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:name:)();
  if (!result)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  swift_release();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v31);
  sub_10017A018();
  sub_1001D1870(v31);
  type metadata accessor for AppSessionManager();
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!result)
  {
LABEL_22:
    __break(1u);
    return result;
  }
  uint64_t v28 = OBJC_IVAR____TtC7Weather11AppDelegate_appSessionManager;
  *(void *)(v4 + OBJC_IVAR____TtC7Weather11AppDelegate_appSessionManager) = result;
  swift_release();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v31);
  if (qword_100E62290 != -1) {
    swift_once();
  }
  sub_10017A018();
  swift_beginAccess();
  sub_1001DF004((uint64_t)v31, (uint64_t)&xmmword_100F51398, &qword_100E6F2A0);
  swift_endAccess();
  if (*(void *)(v4 + v28))
  {
    swift_retain();
    AppSessionManager.startAppSession()();
    swift_release();
  }
  swift_release();
  return 1;
}

uint64_t sub_1000A0944@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC7Weather11AppDelegate____lazy_storage___resolver;
  swift_beginAccess();
  sub_1001262FC(v3, (uint64_t)&v5, &qword_100E6F2A0);
  if (v6) {
    return sub_1001262E4(&v5, a1);
  }
  sub_1001781AC((uint64_t)&v5, &qword_100E6F2A0);
  sub_100025CB4();
  Container.resolver.getter();
  swift_release();
  sub_10020D948(a1, (uint64_t)&v5);
  swift_beginAccess();
  sub_1001DF004((uint64_t)&v5, v3, &qword_100E6F2A0);
  return swift_endAccess();
}

__n128 sub_1000A0A24@<Q0>(void (*a1)(unint64_t *__return_ptr)@<X0>, __n128 *a2@<X8>)
{
  uint64_t v4 = static HorizontalAlignment.center.getter();
  a1(&v9);
  unint64_t v5 = v9;
  unsigned __int8 v6 = v11;
  unint64_t v7 = v12;
  __n128 result = v10;
  a2->n128_u64[0] = v4;
  a2->n128_u64[1] = 0;
  a2[1].n128_u8[0] = 1;
  a2[1].n128_u64[1] = v5;
  a2[2] = result;
  a2[3].n128_u8[0] = v6;
  a2[3].n128_u64[1] = v7;
  return result;
}

uint64_t sub_1000A0A98@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = Image.init(systemName:)();
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v3 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v5 = v4;
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  char v7 = v6 & 1;
  *(void *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 24) = v6 & 1;
  *(void *)(a1 + 32) = v8;
  swift_retain();
  sub_100190CC4(v3, v5, v7);
  swift_bridgeObjectRetain();
  sub_100191924(v3, v5, v7);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1000A0BB0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = Image.init(systemName:)();
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v3 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v5 = v4;
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  char v7 = v6 & 1;
  *(void *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 24) = v6 & 1;
  *(void *)(a1 + 32) = v8;
  swift_retain();
  sub_100190CC4(v3, v5, v7);
  swift_bridgeObjectRetain();
  sub_100191924(v3, v5, v7);
  swift_release();

  return swift_bridgeObjectRelease();
}

void *sub_1000A0CAC(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  uint64_t v6 = *(int *)(a3 + 24);
  char v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for Font.Leading();
  int v10 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v7, 1, v9);
  int v11 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v9);
  if (!v10)
  {
    uint64_t v12 = *(void *)(v9 - 8);
    if (!v11)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    uint64_t v13 = sub_10017DF08(&qword_100E6D330);
    memcpy(v7, v8, *(void *)(*(void *)(v13 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v7, 0, 1, v9);
LABEL_7:
  *((unsigned char *)a1 + *(int *)(a3 + 28)) = *((unsigned char *)a2 + *(int *)(a3 + 28));
  return a1;
}

uint64_t sub_1000A0E50@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, double a3@<D0>)
{
  uint64_t v50 = a2;
  uint64_t v5 = sub_10017DF08(&qword_100E6DC18);
  __chkstk_darwin(v5 - 8);
  uint64_t v47 = (char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for LocationViewModel();
  uint64_t v8 = v7 - 8;
  __chkstk_darwin(v7);
  uint64_t v45 = (char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = type metadata accessor for LocationFooterViewModel();
  uint64_t v10 = __chkstk_darwin(v46);
  uint64_t v44 = (char *)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v43 = (char *)&v43 - v12;
  uint64_t v13 = sub_10017DF08(&qword_100EA1780);
  uint64_t v14 = __chkstk_darwin(v13 - 8);
  uint64_t v49 = (uint64_t)&v43 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v48 = (uint64_t)&v43 - v16;
  uint64_t v17 = type metadata accessor for LocationContentView(0);
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = *(void *)(v18 + 64);
  __chkstk_darwin(v17 - 8);
  uint64_t v20 = sub_10017DF08(&qword_100EA17D0);
  uint64_t v21 = (int *)(v20 - 8);
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v24 = (char **)((char *)&v43 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v22);
  uint64_t v26 = (char *)&v43 - v25;
  char v27 = sub_1000A1418();
  sub_1001300BC();
  unint64_t v28 = (v19 + ((*(unsigned __int8 *)(v18 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80)) + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v29 = swift_allocObject();
  sub_100130070();
  *(double *)(v29 + v28) = a3;
  *uint64_t v24 = v27;
  v24[1] = sub_1001312CC;
  void v24[2] = v29;
  uint64_t v30 = (void *)((char *)v24 + v21[12]);
  *uint64_t v30 = swift_getKeyPath();
  sub_10017DF08(&qword_100E63BD0);
  swift_storeEnumTagMultiPayload();
  unsigned int v31 = (char *)v24 + v21[13];
  *(void *)unsigned int v31 = swift_getKeyPath();
  *(_OWORD *)(v31 + 8) = 0u;
  *(_OWORD *)(v31 + 24) = 0u;
  *(_OWORD *)(v31 + 40) = 0u;
  *(_OWORD *)(v31 + 56) = 0u;
  v31[72] = 0;
  uint64_t v32 = (char *)v24 + v21[14];
  *(void *)uint64_t v32 = swift_getKeyPath();
  v32[8] = 0;
  sub_10024D364((uint64_t)v24, (uint64_t)v26, &qword_100EA17D0);
  swift_retain();
  uint64_t v33 = (uint64_t)v45;
  sub_100133E68();
  uint64_t v34 = (uint64_t)v47;
  swift_release();
  sub_10006DF38(v33 + *(int *)(v8 + 44), v34, &qword_100E6DC18);
  sub_1001338DC(v33, (void (*)(void))type metadata accessor for LocationViewModel);
  if (_s7Weather24LocationCompositionStateOwet_0(v34, 1, v46) == 1)
  {
    sub_100178110(v34, &qword_100E6DC18);
    uint64_t v35 = type metadata accessor for LocationFooterView(0);
    uint64_t v36 = v48;
    _s7Weather24LocationCompositionStateOwst_0(v48, 1, 1, v35);
  }
  else
  {
    sub_100130070();
    uint64_t v37 = (uint64_t)v44;
    sub_100130070();
    uint64_t v36 = v48;
    sub_1000190F8(v37, *(void *)(a1 + 24), *(void *)(a1 + 32), v48);
    uint64_t v38 = type metadata accessor for LocationFooterView(0);
    _s7Weather24LocationCompositionStateOwst_0(v36, 0, 1, v38);
    swift_unknownObjectRetain();
  }
  sub_10006DF38((uint64_t)v26, (uint64_t)v24, &qword_100EA17D0);
  uint64_t v39 = v49;
  sub_10006DF38(v36, v49, &qword_100EA1780);
  uint64_t v40 = v50;
  sub_10006DF38((uint64_t)v24, v50, &qword_100EA17D0);
  uint64_t v41 = sub_10017DF08(&qword_100EA17D8);
  sub_10006DF38(v39, v40 + *(int *)(v41 + 48), &qword_100EA1780);
  sub_100178110(v36, &qword_100EA1780);
  sub_100178110((uint64_t)v26, &qword_100EA17D0);
  sub_100178110(v39, &qword_100EA1780);
  return sub_100178110((uint64_t)v24, &qword_100EA17D0);
}

uint64_t type metadata accessor for LocationFooterView(uint64_t a1)
{
  return sub_10018678C(a1, qword_100E76320);
}

uint64_t sub_1000A1404(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100433810);
}

void *sub_1000A1418()
{
  uint64_t v0 = type metadata accessor for LocationViewModel();
  __chkstk_darwin(v0);
  uint64_t v2 = (char *)&v26 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for ContentSizeCategory();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v26 - v8;
  type metadata accessor for LocationContentView(0);
  sub_10014E6E8();
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v7, v9, v3);
  int v10 = (*(uint64_t (**)(char *, uint64_t))(v4 + 88))(v7, v3);
  if (v10 == enum case for ContentSizeCategory.extraSmall(_:)
    || v10 == enum case for ContentSizeCategory.small(_:)
    || v10 == enum case for ContentSizeCategory.medium(_:)
    || v10 == enum case for ContentSizeCategory.large(_:)
    || v10 == enum case for ContentSizeCategory.extraLarge(_:)
    || v10 == enum case for ContentSizeCategory.extraExtraLarge(_:)
    || v10 == enum case for ContentSizeCategory.extraExtraExtraLarge(_:))
  {
    (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v3);
  }
  else
  {
    uint64_t v17 = *(void (**)(char *, uint64_t))(v4 + 8);
    if (v10 == enum case for ContentSizeCategory.accessibilityMedium(_:)
      || v10 == enum case for ContentSizeCategory.accessibilityLarge(_:)
      || v10 == enum case for ContentSizeCategory.accessibilityExtraLarge(_:)
      || v10 == enum case for ContentSizeCategory.accessibilityExtraExtraLarge(_:)
      || v10 == enum case for ContentSizeCategory.accessibilityExtraExtraExtraLarge(_:))
    {
      v17(v9, v3);
      swift_retain();
      sub_100133E68();
      swift_release();
      uint64_t v22 = sub_10090FE34();
LABEL_42:
      sub_1001338DC((uint64_t)v2, (void (*)(void))type metadata accessor for LocationViewModel);
      return v22;
    }
    v17(v7, v3);
    v17(v9, v3);
  }
  if (qword_100E628F0 != -1) {
    swift_once();
  }
  int v23 = byte_100EA1308;
  swift_retain();
  sub_100133E68();
  swift_release();
  if (v23 != 1)
  {
    uint64_t v22 = *(void **)&v2[*(int *)(v0 + 28)];
    swift_bridgeObjectRetain();
    goto LABEL_42;
  }
  unint64_t v24 = *(void *)&v2[*(int *)(v0 + 32)];
  swift_retain();
  sub_1001338DC((uint64_t)v2, (void (*)(void))type metadata accessor for LocationViewModel);
  uint64_t v22 = sub_1005707D8(v24);
  swift_release();
  return v22;
}

uint64_t sub_1000A17B0(void *a1, void *a2)
{
  sub_1001B1E64(a2, a2[3]);
  type metadata accessor for AppStateMonitor();
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!result)
  {
    __break(1u);
    goto LABEL_25;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_1000A23E0(&qword_100EB3A20, (void (*)(uint64_t))type metadata accessor for AppStateMonitor);
  dispatch thunk of ApplicationStateManagerType.add(monitor:)();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)&v8);
  sub_1001B1E64(a2, a2[3]);
  type metadata accessor for AppConfigurationMonitor();
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!result)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  sub_1000A23E0(&qword_100EB3A28, (void (*)(uint64_t))type metadata accessor for AppConfigurationMonitor);
  dispatch thunk of ApplicationStateManagerType.add(monitor:)();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)&v8);
  sub_1001B1E64(a2, a2[3]);
  type metadata accessor for AppLaunchCountMonitor();
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!result)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  sub_1000A23E0(&qword_100EB3A30, (void (*)(uint64_t))type metadata accessor for AppLaunchCountMonitor);
  dispatch thunk of ApplicationStateManagerType.add(monitor:)();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)&v8);
  sub_1001B1E64(a2, a2[3]);
  sub_10017DF08(&qword_100E98148);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  uint64_t v5 = v8;
  if (!v8) {
    goto LABEL_7;
  }
  if (v8 != 1)
  {
    dispatch thunk of ApplicationStateManagerType.add(monitor:)();
    sub_1002312DC(v5);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)&v8);
LABEL_7:
    sub_1001B1E64(a2, a2[3]);
    type metadata accessor for CountryCodeConfigurationMonitor();
    uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
    if (result)
    {
      sub_1000A23E0(&qword_100EB3A38, (void (*)(uint64_t))type metadata accessor for CountryCodeConfigurationMonitor);
      dispatch thunk of ApplicationStateManagerType.add(monitor:)();
      _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)&v8);
      sub_1001B1E64(a2, a2[3]);
      type metadata accessor for CurrentLocationMonitor();
      uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
      if (result)
      {
        sub_1000A23E0(&qword_100EB3A40, (void (*)(uint64_t))type metadata accessor for CurrentLocationMonitor);
        dispatch thunk of ApplicationStateManagerType.add(monitor:)();
        _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)&v8);
        sub_1001B1E64(a2, a2[3]);
        type metadata accessor for LocaleMonitor();
        uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
        if (result)
        {
          sub_1000A23E0(&qword_100EB3A48, (void (*)(uint64_t))type metadata accessor for LocaleMonitor);
          dispatch thunk of ApplicationStateManagerType.add(monitor:)();
          _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)&v8);
          sub_1001B1E64(a2, a2[3]);
          type metadata accessor for LocationAuthorizationMonitor();
          uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
          if (result)
          {
            uint64_t v6 = (void *)result;
            sub_1000A23E0(&qword_100EB3A50, (void (*)(uint64_t))type metadata accessor for LocationAuthorizationMonitor);
            dispatch thunk of ApplicationStateManagerType.add(monitor:)();
            _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)&v8);
            sub_1001B1E64(a2, a2[3]);
            type metadata accessor for NotificationAuthorizationMonitor();
            uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
            if (result)
            {
              sub_1000A23E0(&qword_100EB3A58, (void (*)(uint64_t))type metadata accessor for NotificationAuthorizationMonitor);
              dispatch thunk of ApplicationStateManagerType.add(monitor:)();
              _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)&v8);
              sub_1001B1E64(a2, a2[3]);
              type metadata accessor for NotificationsOptInMonitor();
              uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
              if (result)
              {
                sub_1000A23E0(&qword_100EB3A60, (void (*)(uint64_t))type metadata accessor for NotificationsOptInMonitor);
                dispatch thunk of ApplicationStateManagerType.add(monitor:)();
                _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)&v8);
                sub_1001B1E64(a2, a2[3]);
                type metadata accessor for NotificationSubscriptionMonitor();
                uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
                if (result)
                {
                  sub_1000A23E0(&qword_100EB3A68, (void (*)(uint64_t))type metadata accessor for NotificationSubscriptionMonitor);
                  dispatch thunk of ApplicationStateManagerType.add(monitor:)();
                  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)&v8);
                  sub_1001B1E64(a2, a2[3]);
                  type metadata accessor for NetworkConnectivityMonitor();
                  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
                  if (result)
                  {
                    sub_1000A23E0(&qword_100EB3A70, (void (*)(uint64_t))type metadata accessor for NetworkConnectivityMonitor);
                    dispatch thunk of ApplicationStateManagerType.add(monitor:)();
                    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)&v8);
                    sub_1001B1E64(a2, a2[3]);
                    type metadata accessor for AccessibilitySettingsMonitor();
                    uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
                    if (result)
                    {
                      sub_1000A23E0(&qword_100EB3A78, (void (*)(uint64_t))type metadata accessor for AccessibilitySettingsMonitor);
                      dispatch thunk of ApplicationStateManagerType.add(monitor:)();
                      _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)&v8);
                      sub_1001B1E64(a2, a2[3]);
                      type metadata accessor for ReportWeatherMonitor();
                      uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
                      if (result)
                      {
                        sub_1000A23E0(&qword_100EB3A80, (void (*)(uint64_t))type metadata accessor for ReportWeatherMonitor);
                        dispatch thunk of ApplicationStateManagerType.add(monitor:)();
                        _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)&v8);
                        sub_1001B1E64(a2, a2[3]);
                        type metadata accessor for SavedLocationsMonitor();
                        uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
                        if (result)
                        {
                          sub_1000A23E0(&qword_100EB3A88, (void (*)(uint64_t))type metadata accessor for SavedLocationsMonitor);
                          dispatch thunk of ApplicationStateManagerType.add(monitor:)();
                          _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)&v8);
                          sub_1001B1E64(a2, a2[3]);
                          type metadata accessor for SettingsMonitor();
                          uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
                          if (result)
                          {
                            sub_1000A23E0(&qword_100EB3A90, (void (*)(uint64_t))type metadata accessor for SettingsMonitor);
                            dispatch thunk of ApplicationStateManagerType.add(monitor:)();
                            _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)&v8);
                            sub_1001B1E64(a2, a2[3]);
                            type metadata accessor for SidebarVisibilityMonitor();
                            uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
                            if (result)
                            {
                              sub_1000A23E0(&qword_100EB3A98, (void (*)(uint64_t))type metadata accessor for SidebarVisibilityMonitor);
                              dispatch thunk of ApplicationStateManagerType.add(monitor:)();
                              _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)&v8);
                              sub_1001B1E64(a2, a2[3]);
                              sub_10017DF08(&qword_100EB3AA0);
                              uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
                              if (v8)
                              {
                                dispatch thunk of ApplicationStateManagerType.add(monitor:)();
                                _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)&v8);
                                sub_1001B1E64(a2, a2[3]);
                                type metadata accessor for UserNotificationMonitor();
                                uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
                                if (result)
                                {
                                  uint64_t v7 = (void *)result;
                                  sub_1000A23E0(&qword_100EB3AA8, (void (*)(uint64_t))type metadata accessor for UserNotificationMonitor);
                                  dispatch thunk of ApplicationStateManagerType.add(monitor:)();
                                  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)&v8);
                                  sub_1001B1E64(a2, a2[3]);
                                  type metadata accessor for LocationOfInterestMonitor();
                                  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
                                  if (result)
                                  {
                                    sub_1000A23E0(&qword_100EB3AB0, (void (*)(uint64_t))type metadata accessor for LocationOfInterestMonitor);
                                    dispatch thunk of ApplicationStateManagerType.add(monitor:)();
                                    swift_release();
                                    swift_release();
                                    swift_release();
                                    swift_release();
                                    swift_release();
                                    swift_release();

                                    swift_release();
                                    swift_release();
                                    swift_release();
                                    swift_release();
                                    swift_release();
                                    swift_release();
                                    swift_release();
                                    swift_release();
                                    swift_release();

                                    swift_release();
                                    swift_unknownObjectRelease();
                                    return _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)&v8);
                                  }
                                  goto LABEL_42;
                                }
LABEL_41:
                                __break(1u);
LABEL_42:
                                __break(1u);
                                goto LABEL_43;
                              }
LABEL_40:
                              __break(1u);
                              goto LABEL_41;
                            }
LABEL_39:
                            __break(1u);
                            goto LABEL_40;
                          }
LABEL_38:
                          __break(1u);
                          goto LABEL_39;
                        }
LABEL_37:
                        __break(1u);
                        goto LABEL_38;
                      }
LABEL_36:
                      __break(1u);
                      goto LABEL_37;
                    }
LABEL_35:
                    __break(1u);
                    goto LABEL_36;
                  }
LABEL_34:
                  __break(1u);
                  goto LABEL_35;
                }
LABEL_33:
                __break(1u);
                goto LABEL_34;
              }
LABEL_32:
              __break(1u);
              goto LABEL_33;
            }
LABEL_31:
            __break(1u);
            goto LABEL_32;
          }
LABEL_30:
          __break(1u);
          goto LABEL_31;
        }
LABEL_29:
        __break(1u);
        goto LABEL_30;
      }
LABEL_28:
      __break(1u);
      goto LABEL_29;
    }
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
LABEL_43:
  __break(1u);
  return result;
}

uint64_t sub_1000A23E0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000A2428@<X0>(uint64_t (*a1)(unsigned char *)@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v4 = sub_10017DF08(&qword_100EABDF0);
  uint64_t result = a1(&a2[*(int *)(v4 + 48)]);
  *a2 = result & 1;
  return result;
}

uint64_t sub_1000A247C()
{
  return sub_1000A2484();
}

uint64_t sub_1000A2484()
{
  uint64_t v0 = type metadata accessor for Location.Identifier();
  __chkstk_darwin(v0 - 8);
  Location.identifier.getter();
  swift_beginAccess();
  sub_1001094A0();
  char v2 = v1;
  swift_endAccess();
  return v2 & 1;
}

uint64_t sub_1000A253C()
{
  sub_10017DF08(&qword_100E6F2A8);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_100C34240;
  char v1 = (objc_class *)type metadata accessor for FrameworkAssembly();
  id v2 = [objc_allocWithZone(v1) init];
  *(void *)(v0 + 56) = v1;
  *(void *)(v0 + 64) = &protocol witness table for FrameworkAssembly;
  *(void *)(v0 + 32) = v2;
  uint64_t v3 = (objc_class *)type metadata accessor for FrameworkAssembly();
  id v4 = [objc_allocWithZone(v3) init];
  *(void *)(v0 + 96) = v3;
  *(void *)(v0 + 104) = sub_1000A382C(&qword_100E6F2B0, 255, (void (*)(uint64_t))&type metadata accessor for FrameworkAssembly);
  *(void *)(v0 + 72) = v4;
  uint64_t v5 = type metadata accessor for Assembly();
  swift_allocObject();
  uint64_t v6 = Assembly.init()();
  *(void *)(v0 + 136) = v5;
  *(void *)(v0 + 144) = sub_1000A382C(&qword_100E6F2B8, 255, (void (*)(uint64_t))&type metadata accessor for Assembly);
  *(void *)(v0 + 112) = v6;
  uint64_t v7 = type metadata accessor for Assembly();
  swift_allocObject();
  uint64_t v8 = Assembly.init()();
  *(void *)(v0 + 176) = v7;
  *(void *)(v0 + 184) = sub_1000A382C(&qword_100E6F2C0, 255, (void (*)(uint64_t))&type metadata accessor for Assembly);
  *(void *)(v0 + 152) = v8;
  uint64_t v9 = type metadata accessor for Assembly();
  swift_allocObject();
  uint64_t v10 = Assembly.init()();
  *(void *)(v0 + 216) = v9;
  *(void *)(v0 + 224) = sub_1000A382C(&qword_100E6F2C8, 255, (void (*)(uint64_t))&type metadata accessor for Assembly);
  *(void *)(v0 + 192) = v10;
  uint64_t v11 = type metadata accessor for Assembly();
  swift_allocObject();
  uint64_t v12 = Assembly.init()();
  *(void *)(v0 + 256) = v11;
  *(void *)(v0 + 264) = sub_1000A382C(&qword_100E6F2D0, 255, (void (*)(uint64_t))&type metadata accessor for Assembly);
  *(void *)(v0 + 232) = v12;
  uint64_t v13 = type metadata accessor for Assembly();
  swift_allocObject();
  uint64_t v14 = Assembly.init()();
  *(void *)(v0 + 296) = v13;
  *(void *)(v0 + 304) = sub_1000A382C(&qword_100E6F2D8, 255, (void (*)(uint64_t))&type metadata accessor for Assembly);
  *(void *)(v0 + 272) = v14;
  uint64_t v15 = type metadata accessor for Assembly();
  swift_allocObject();
  uint64_t v16 = Assembly.init()();
  *(void *)(v0 + 336) = v15;
  *(void *)(v0 + 344) = sub_1000A382C(&qword_100E6F2E0, 255, (void (*)(uint64_t))&type metadata accessor for Assembly);
  *(void *)(v0 + 312) = v16;
  sub_10017DF08(&qword_100E6F2E8);
  uint64_t v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_100C34250;
  uint64_t v18 = type metadata accessor for AutomationAssembly();
  uint64_t v19 = swift_allocObject();
  *(void *)(v17 + 56) = v18;
  *(void *)(v17 + 64) = sub_1000A382C(&qword_100E6F2F0, 255, (void (*)(uint64_t))type metadata accessor for AutomationAssembly);
  *(void *)(v17 + 32) = v19;
  uint64_t v20 = type metadata accessor for AnalyticsAssembly();
  uint64_t v21 = swift_allocObject();
  *(void *)(v17 + 96) = v20;
  *(void *)(v17 + 104) = sub_1000A382C(&qword_100E6F2F8, 255, (void (*)(uint64_t))type metadata accessor for AnalyticsAssembly);
  *(void *)(v17 + 72) = v21;
  uint64_t v22 = type metadata accessor for DebugAssembly();
  uint64_t v23 = swift_allocObject();
  *(void *)(v17 + 136) = v22;
  *(void *)(v17 + 144) = sub_1000A382C(&qword_100E6F300, 255, (void (*)(uint64_t))type metadata accessor for DebugAssembly);
  *(void *)(v17 + 112) = v23;
  uint64_t v24 = type metadata accessor for DemoAssembly();
  uint64_t v25 = swift_allocObject();
  *(void *)(v17 + 176) = v24;
  *(void *)(v17 + 184) = sub_1000A382C(&qword_100E6F308, 255, (void (*)(uint64_t))type metadata accessor for DemoAssembly);
  *(void *)(v17 + 152) = v25;
  uint64_t v26 = type metadata accessor for HandlerAssembly();
  uint64_t v27 = swift_allocObject();
  *(void *)(v17 + 216) = v26;
  *(void *)(v17 + 224) = sub_1000A382C(&qword_100E6F310, 255, (void (*)(uint64_t))type metadata accessor for HandlerAssembly);
  *(void *)(v17 + 192) = v27;
  uint64_t v28 = type metadata accessor for ManagerAssembly();
  uint64_t v29 = swift_allocObject();
  *(void *)(v17 + 256) = v28;
  *(void *)(v17 + 264) = sub_1000A382C(&qword_100E6F318, 255, (void (*)(uint64_t))type metadata accessor for ManagerAssembly);
  *(void *)(v17 + 232) = v29;
  uint64_t v30 = type metadata accessor for PerformanceTestAssembly();
  uint64_t v31 = swift_allocObject();
  *(void *)(v17 + 296) = v30;
  *(void *)(v17 + 304) = sub_1000A382C(&qword_100E6F320, 255, (void (*)(uint64_t))type metadata accessor for PerformanceTestAssembly);
  *(void *)(v17 + 272) = v31;
  uint64_t v32 = type metadata accessor for ProviderAssembly();
  uint64_t v33 = swift_allocObject();
  *(void *)(v17 + 336) = v32;
  *(void *)(v17 + 344) = sub_1000A382C(&qword_100E6F328, 255, (void (*)(uint64_t))type metadata accessor for ProviderAssembly);
  *(void *)(v17 + 312) = v33;
  uint64_t v34 = type metadata accessor for SettingsAssembly();
  uint64_t v35 = swift_allocObject();
  *(void *)(v17 + 376) = v34;
  *(void *)(v17 + 384) = sub_1000A382C(&qword_100E6F330, 255, (void (*)(uint64_t))type metadata accessor for SettingsAssembly);
  *(void *)(v17 + 352) = v35;
  uint64_t v36 = type metadata accessor for StartupAssembly();
  uint64_t v37 = swift_allocObject();
  *(void *)(v17 + 416) = v36;
  *(void *)(v17 + 424) = sub_1000A382C(&qword_100E6F338, 255, (void (*)(uint64_t))type metadata accessor for StartupAssembly);
  *(void *)(v17 + 392) = v37;
  uint64_t v38 = type metadata accessor for ToolbarAssembly();
  uint64_t v39 = swift_allocObject();
  *(void *)(v17 + 456) = v38;
  *(void *)(v17 + 464) = sub_1000A382C(&qword_100E6F340, 255, (void (*)(uint64_t))type metadata accessor for ToolbarAssembly);
  *(void *)(v17 + 432) = v39;
  uint64_t v40 = type metadata accessor for MonitorsAssembly();
  uint64_t v41 = swift_allocObject();
  *(void *)(v17 + 496) = v40;
  *(void *)(v17 + 504) = sub_1000A382C(&qword_100E6F348, 255, (void (*)(uint64_t))type metadata accessor for MonitorsAssembly);
  *(void *)(v17 + 472) = v41;
  uint64_t v42 = type metadata accessor for WeatherConditionBackgroundAssembly();
  uint64_t v43 = swift_allocObject();
  *(void *)(v17 + 536) = v42;
  *(void *)(v17 + 544) = sub_1000A382C(&qword_100E6F350, 255, (void (*)(uint64_t))type metadata accessor for WeatherConditionBackgroundAssembly);
  *(void *)(v17 + 512) = v43;
  uint64_t v44 = type metadata accessor for InteractionsAssembly();
  uint64_t v45 = swift_allocObject();
  *(void *)(v17 + 576) = v44;
  *(void *)(v17 + 584) = sub_1000A382C(&qword_100E6F358, 255, (void (*)(uint64_t))type metadata accessor for InteractionsAssembly);
  *(void *)(v17 + 552) = v45;
  uint64_t v46 = type metadata accessor for AirQualityDetailAssembly();
  uint64_t v47 = swift_allocObject();
  *(void *)(v17 + 616) = v46;
  *(void *)(v17 + 624) = sub_1000A382C(&qword_100E6F360, 255, (void (*)(uint64_t))type metadata accessor for AirQualityDetailAssembly);
  *(void *)(v17 + 592) = v47;
  uint64_t v48 = type metadata accessor for ConditionDetailAssembly();
  uint64_t v49 = swift_allocObject();
  *(void *)(v17 + 656) = v48;
  *(void *)(v17 + 664) = sub_1000A382C(&qword_100E6F368, 255, (void (*)(uint64_t))type metadata accessor for ConditionDetailAssembly);
  *(void *)(v17 + 632) = v49;
  uint64_t v50 = type metadata accessor for DetailChartAssembly();
  uint64_t v51 = swift_allocObject();
  *(void *)(v17 + 696) = v50;
  *(void *)(v17 + 704) = sub_1000A382C(&qword_100E6F370, 255, (void (*)(uint64_t))type metadata accessor for DetailChartAssembly);
  *(void *)(v17 + 672) = v51;
  HourPrecipitationDetailAssemblCGFloat y = type metadata accessor for NextHourPrecipitationDetailAssembly();
  uint64_t v53 = swift_allocObject();
  *(void *)(v17 + 736) = HourPrecipitationDetailAssembly;
  *(void *)(v17 + 744) = sub_1000A382C(&qword_100E6F378, 255, (void (*)(uint64_t))type metadata accessor for NextHourPrecipitationDetailAssembly);
  *(void *)(v17 + 712) = v53;
  uint64_t v54 = type metadata accessor for SunriseSunsetDetailAssembly();
  uint64_t v55 = swift_allocObject();
  *(void *)(v17 + 776) = v54;
  *(void *)(v17 + 784) = sub_1000A382C(&qword_100E6F380, 255, (void (*)(uint64_t))type metadata accessor for SunriseSunsetDetailAssembly);
  *(void *)(v17 + 752) = v55;
  uint64_t v56 = type metadata accessor for MoonCalendarAssembly();
  uint64_t v57 = swift_allocObject();
  *(void *)(v17 + 816) = v56;
  *(void *)(v17 + 824) = sub_1000A382C(&qword_100E6F388, 255, (void (*)(uint64_t))type metadata accessor for MoonCalendarAssembly);
  *(void *)(v17 + 792) = v57;
  uint64_t v58 = type metadata accessor for MoonScrubberAssembly();
  uint64_t v59 = swift_allocObject();
  *(void *)(v17 + 856) = v58;
  *(void *)(v17 + 864) = sub_1000A382C(&qword_100E6F390, 255, (void (*)(uint64_t))type metadata accessor for MoonScrubberAssembly);
  *(void *)(v17 + 832) = v59;
  uint64_t v60 = type metadata accessor for MoonDetailAssembly();
  uint64_t v61 = swift_allocObject();
  *(void *)(v17 + 896) = v60;
  *(void *)(v17 + 904) = sub_1000A382C(&qword_100E6F398, 255, (void (*)(uint64_t))type metadata accessor for MoonDetailAssembly);
  *(void *)(v17 + 872) = v61;
  uint64_t v62 = type metadata accessor for MessageCoverAssembly();
  uint64_t v63 = swift_allocObject();
  *(void *)(v17 + 936) = v62;
  *(void *)(v17 + 944) = sub_1000A382C(&qword_100E6F3A0, 255, (void (*)(uint64_t))type metadata accessor for MessageCoverAssembly);
  *(void *)(v17 + 912) = v63;
  uint64_t v64 = type metadata accessor for MainAssembly();
  uint64_t v65 = swift_allocObject();
  *(void *)(v17 + 976) = v64;
  *(void *)(v17 + 984) = sub_1000A382C(&qword_100E6F3A8, 255, (void (*)(uint64_t))type metadata accessor for MainAssembly);
  *(void *)(v17 + 952) = v65;
  uint64_t v66 = type metadata accessor for NotificationSettingsAssembly();
  uint64_t v67 = swift_allocObject();
  *(void *)(v17 + 1016) = v66;
  *(void *)(v17 + 1024) = sub_1000A382C(&qword_100E6F3B0, 255, (void (*)(uint64_t))type metadata accessor for NotificationSettingsAssembly);
  *(void *)(v17 + 992) = v67;
  uint64_t v68 = type metadata accessor for NotificationsOptInAssembly();
  uint64_t v69 = swift_allocObject();
  *(void *)(v17 + 1056) = v68;
  *(void *)(v17 + 1064) = sub_1000A382C(&qword_100E6F3B8, 255, (void (*)(uint64_t))type metadata accessor for NotificationsOptInAssembly);
  *(void *)(v17 + 1032) = v69;
  uint64_t v70 = type metadata accessor for ListAssembly();
  uint64_t v71 = swift_allocObject();
  *(void *)(v17 + 1096) = v70;
  *(void *)(v17 + 1104) = sub_1000A382C(&qword_100E6F3C0, 255, (void (*)(uint64_t))type metadata accessor for ListAssembly);
  *(void *)(v17 + 1072) = v71;
  uint64_t v72 = type metadata accessor for ListMenuAssembly();
  uint64_t v73 = swift_allocObject();
  *(void *)(v17 + 1136) = v72;
  *(void *)(v17 + 1144) = sub_1000A382C(&qword_100E6F3C8, 255, (void (*)(uint64_t))type metadata accessor for ListMenuAssembly);
  *(void *)(v17 + 1112) = v73;
  uint64_t v74 = type metadata accessor for LocationAssembly();
  uint64_t v75 = swift_allocObject();
  *(void *)(v17 + 1176) = v74;
  *(void *)(v17 + 1184) = sub_1000A382C(&qword_100E6F3D0, 255, (void (*)(uint64_t))type metadata accessor for LocationAssembly);
  *(void *)(v17 + 1152) = v75;
  uint64_t v76 = type metadata accessor for LocationPreviewAssembly();
  uint64_t v77 = swift_allocObject();
  *(void *)(v17 + 1216) = v76;
  *(void *)(v17 + 1224) = sub_1000A382C(&qword_100E6F3D8, 255, (void (*)(uint64_t))type metadata accessor for LocationPreviewAssembly);
  *(void *)(v17 + 1192) = v77;
  uint64_t v78 = type metadata accessor for LocationViewerAssembly();
  uint64_t v79 = swift_allocObject();
  *(void *)(v17 + 1256) = v78;
  *(void *)(v17 + 1264) = sub_1000A382C(&qword_100E6F3E0, 255, (void (*)(uint64_t))type metadata accessor for LocationViewerAssembly);
  *(void *)(v17 + 1232) = v79;
  uint64_t v80 = type metadata accessor for ReportWeatherAssembly();
  uint64_t v81 = swift_allocObject();
  *(void *)(v17 + 1296) = v80;
  *(void *)(v17 + 1304) = sub_1000A382C(&qword_100E6F3E8, 255, (void (*)(uint64_t))type metadata accessor for ReportWeatherAssembly);
  *(void *)(v17 + 1272) = v81;
  uint64_t v82 = type metadata accessor for SharedSearchAssembly();
  uint64_t v83 = swift_allocObject();
  *(void *)(v17 + 1336) = v82;
  *(void *)(v17 + 1344) = sub_1000A382C(&qword_100E6F3F0, 255, (void (*)(uint64_t))type metadata accessor for SharedSearchAssembly);
  *(void *)(v17 + 1312) = v83;
  uint64_t v84 = type metadata accessor for SearchAssembly();
  uint64_t v85 = swift_allocObject();
  *(void *)(v17 + 1376) = v84;
  *(void *)(v17 + 1384) = sub_1000A382C(&qword_100E6F3F8, 255, (void (*)(uint64_t))type metadata accessor for SearchAssembly);
  *(void *)(v17 + 1352) = v85;
  uint64_t v86 = type metadata accessor for AveragesDetailAssembly();
  uint64_t v87 = swift_allocObject();
  *(void *)(v17 + 1416) = v86;
  *(void *)(v17 + 1424) = sub_1000A382C(&qword_100E6F400, 255, (void (*)(uint64_t))type metadata accessor for AveragesDetailAssembly);
  *(void *)(v17 + 1392) = v87;
  uint64_t v88 = type metadata accessor for VFXTestAssembly();
  uint64_t v89 = swift_allocObject();
  *(void *)(v17 + 1456) = v88;
  *(void *)(v17 + 1464) = sub_1000A382C(&qword_100E6F408, 255, (void (*)(uint64_t))type metadata accessor for VFXTestAssembly);
  *(void *)(v17 + 1432) = v89;
  uint64_t v90 = type metadata accessor for InteractiveMapAssembly();
  uint64_t v91 = swift_allocObject();
  *(void *)(v17 + 1496) = v90;
  *(void *)(v17 + 1504) = sub_1000A382C(&qword_100E6F410, 255, (void (*)(uint64_t))type metadata accessor for InteractiveMapAssembly);
  *(void *)(v17 + 1472) = v91;
  uint64_t v92 = type metadata accessor for DayPickerAssembly();
  uint64_t v93 = swift_allocObject();
  *(void *)(v17 + 1536) = v92;
  *(void *)(v17 + 1544) = sub_1000A382C(&qword_100E6F418, 255, (void (*)(uint64_t))type metadata accessor for DayPickerAssembly);
  *(void *)(v17 + 1512) = v93;
  *(void *)(v17 + 1576) = &type metadata for ContentStatusBannerAssembly;
  *(void *)(v17 + 1584) = sub_10021B33C();
  uint64_t v94 = type metadata accessor for UnitsConfigurationAssembly();
  uint64_t v95 = swift_allocObject();
  *(void *)(v17 + 1616) = v94;
  *(void *)(v17 + 1624) = sub_1000A382C(&qword_100E6F428, 255, (void (*)(uint64_t))type metadata accessor for UnitsConfigurationAssembly);
  *(void *)(v17 + 1592) = v95;
  uint64_t v96 = type metadata accessor for HomeAndWorkRefinementAssembly();
  uint64_t v97 = swift_allocObject();
  *(void *)(v17 + 1656) = v96;
  *(void *)(v17 + 1664) = sub_1000A382C(&qword_100E6F430, 255, (void (*)(uint64_t))type metadata accessor for HomeAndWorkRefinementAssembly);
  *(void *)(v17 + 1632) = v97;
  sub_100016968((uint64_t)&_swiftEmptyArrayStorage);
  type metadata accessor for SingletonPool();
  swift_allocObject();
  SingletonPool.init()();
  type metadata accessor for ContainerManager();
  swift_allocObject();
  return ContainerManager.init(singletonPool:bundleAssemblies:assemblies:)();
}

uint64_t sub_1000A382C(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000A3874()
{
  sub_10017DF08(&qword_100E8DD38);
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  sub_10017DF08(&qword_100E8DD40);
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  sub_10017DF08(&qword_100E8DCD8);
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  sub_10017DF08(&qword_100E8DD48);
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  type metadata accessor for LocationViewModelFactory();
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  sub_10017DF08(&qword_100E8DD50);
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  sub_10017DF08(&qword_100E64A38);
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  sub_10017DF08((uint64_t *)&unk_100EAAA90);
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  sub_10017DF08(&qword_100E8DD58);
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  sub_10017DF08(&qword_100E8DD60);
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  sub_10017DF08(&qword_100E8DD68);
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  sub_10017DF08(&qword_100E8DD70);
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  type metadata accessor for AirQualityComponentViewModelFactory();
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  sub_10017DF08(&qword_100E8DD78);
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  type metadata accessor for DailyForecastComponentViewModelFactory();
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  sub_10017DF08(&qword_100E8DD80);
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  type metadata accessor for FeelsLikeComponentViewModelFactory();
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  sub_10017DF08(&qword_100E8DD88);
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  type metadata accessor for HourlyForecastComponentViewModelFactory();
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  sub_10017DF08(&qword_100E8DD90);
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  sub_10017DF08(&qword_100E8DD98);
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  sub_10017DF08(&qword_100E8DDA0);
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  type metadata accessor for MoonComponentViewModelFactory();
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  sub_10017DF08(&qword_100E890A8);
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  sub_10017DF08(&qword_100E8DDA8);
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  type metadata accessor for NextHourPrecipitationStringBuilder();
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  sub_10017DF08(&qword_100E890B0);
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  sub_10017DF08(&qword_100E8DDB0);
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  sub_10017DF08(&qword_100E8DDB8);
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  sub_10017DF08(&qword_100E8DDC0);
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  type metadata accessor for PressureComponentViewModelFactory();
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  sub_10017DF08(&qword_100E8DDC8);
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  type metadata accessor for PrecipitationTotalComponentViewModelFactory();
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  sub_10017DF08(&qword_100E8DDD0);
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  sub_10017DF08(&qword_100E8DDD8);
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  sub_10017DF08(&qword_100E8DDE0);
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  sub_10017DF08(&qword_100E8DDE8);
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  sub_10017DF08(&qword_100E8DDF0);
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  type metadata accessor for AveragesComponentViewModelFactory();
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  sub_10017DF08(&qword_100E8DDF8);
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  sub_10017DF08(&qword_100E8DE00);
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  type metadata accessor for UVIndexComponentViewModelFactory();
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  sub_10017DF08(&qword_100E8DE08);
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  type metadata accessor for VisibilityComponentViewModelFactory();
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  sub_10017DF08(&qword_100E8DE10);
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  type metadata accessor for WindComponentViewModelFactory();
  RegistrationContainer.register<A>(_:name:factory:)();

  return swift_release();
}

uint64_t sub_1000A42D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for Location.Identifier();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 24);
  v7(a1, a2, v5);
  uint64_t v8 = (int *)type metadata accessor for LocationViewModel();
  uint64_t v9 = v8[5];
  uint64_t v10 = (void *)(a1 + v9);
  uint64_t v11 = (const void *)(a2 + v9);
  int v12 = _s7Weather24LocationCompositionStateOwet_0(a1 + v9, 1, v5);
  int v13 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v11, 1, v5);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, const void *, uint64_t))(v6 + 16))(v10, v11, v5);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v10, 0, 1, v5);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(void *, uint64_t))(v6 + 8))(v10, v5);
LABEL_6:
    uint64_t v14 = sub_10017DF08(&qword_100E6DC08);
    memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  v7((uint64_t)v10, (uint64_t)v11, v5);
LABEL_7:
  uint64_t v15 = v8[6];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  *(void *)uint64_t v16 = *(void *)(a2 + v15);
  *(void *)(v16 + 8) = *(void *)(a2 + v15 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v18 = *(void *)(v17 + 16);
  uint64_t v19 = *(void *)(v17 + 24);
  uint64_t v20 = *(void *)(v17 + 32);
  uint64_t v21 = *(void *)(v17 + 40);
  char v22 = *(unsigned char *)(v17 + 48);
  sub_100193004(v18, v19, v20, v21, v22);
  uint64_t v23 = *(void *)(v16 + 16);
  uint64_t v24 = *(void *)(v16 + 24);
  uint64_t v25 = *(void *)(v16 + 32);
  uint64_t v26 = *(void *)(v16 + 40);
  *(void *)(v16 + 16) = v18;
  *(void *)(v16 + 24) = v19;
  *(void *)(v16 + 32) = v20;
  *(void *)(v16 + 40) = v21;
  char v27 = *(unsigned char *)(v16 + 48);
  *(unsigned char *)(v16 + 48) = v22;
  sub_100191D78(v23, v24, v25, v26, v27);
  *(void *)(v16 + 56) = *(void *)(v17 + 56);
  *(void *)(v16 + 64) = *(void *)(v17 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v16 + 72) = *(void *)(v17 + 72);
  *(void *)(v16 + 80) = *(void *)(v17 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v16 + 88) = *(void *)(v17 + 88);
  *(void *)(v16 + 96) = *(void *)(v17 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v16 + 104) = *(void *)(v17 + 104);
  *(void *)(v16 + 112) = *(void *)(v17 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v16 + 120) = *(void *)(v17 + 120);
  *(void *)(v16 + 128) = *(void *)(v17 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v16 + 136) = *(unsigned char *)(v17 + 136);
  *(unsigned char *)(v16 + 137) = *(unsigned char *)(v17 + 137);
  *(unsigned char *)(v16 + 138) = *(unsigned char *)(v17 + 138);
  *(void *)(v16 + 144) = *(void *)(v17 + 144);
  *(void *)(v16 + 152) = *(void *)(v17 + 152);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v16 + 160) = *(unsigned char *)(v17 + 160);
  *(unsigned char *)(v16 + 161) = *(unsigned char *)(v17 + 161);
  *(void *)(a1 + v8[7]) = *(void *)(a2 + v8[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + v8[8]) = *(void *)(a2 + v8[8]);
  swift_retain();
  swift_release();
  uint64_t v28 = v8[9];
  uint64_t v29 = a1 + v28;
  uint64_t v30 = a2 + v28;
  uint64_t v31 = (int *)type metadata accessor for LocationFooterViewModel();
  LODWORD(v18) = _s7Weather24LocationCompositionStateOwet_0(v29, 1, (uint64_t)v31);
  int v32 = _s7Weather24LocationCompositionStateOwet_0(v30, 1, (uint64_t)v31);
  if (v18)
  {
    if (!v32)
    {
      *(unsigned char *)uint64_t v29 = *(unsigned char *)v30;
      *(unsigned char *)(v29 + 1) = *(unsigned char *)(v30 + 1);
      *(unsigned char *)(v29 + 2) = *(unsigned char *)(v30 + 2);
      *(void *)(v29 + 8) = *(void *)(v30 + 8);
      *(void *)(v29 + 16) = *(void *)(v30 + 16);
      uint64_t v33 = v31[8];
      uint64_t v34 = (void *)(v29 + v33);
      uint64_t v35 = (const void *)(v30 + v33);
      uint64_t v36 = type metadata accessor for URL();
      swift_bridgeObjectRetain();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v35, 1, v36))
      {
        uint64_t v37 = sub_10017DF08(&qword_100E749B0);
        memcpy(v34, v35, *(void *)(*(void *)(v37 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v36 - 8) + 16))(v34, v35, v36);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v34, 0, 1, v36);
      }
      uint64_t v137 = v29;
      uint64_t v139 = v31;
      uint64_t v47 = v31[9];
      uint64_t v48 = v29 + v47;
      uint64_t v49 = v30 + v47;
      *(unsigned char *)uint64_t v48 = *(unsigned char *)(v30 + v47);
      *(void *)(v48 + 8) = *(void *)(v30 + v47 + 8);
      uint64_t v50 = (int *)type metadata accessor for LearnMoreAttributorViewModel();
      uint64_t v51 = v50[6];
      __dst = (void *)(v48 + v51);
      uint64_t v52 = (const void *)(v49 + v51);
      swift_bridgeObjectRetain();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v52, 1, v36))
      {
        uint64_t v53 = sub_10017DF08(&qword_100E749B0);
        memcpy(__dst, v52, *(void *)(*(void *)(v53 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v36 - 8) + 16))(__dst, v52, v36);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dst, 0, 1, v36);
      }
      uint64_t v54 = v50[7];
      uint64_t v55 = (void *)(v48 + v54);
      uint64_t v56 = (void *)(v49 + v54);
      *uint64_t v55 = *v56;
      v55[1] = v56[1];
      *(void *)(v48 + v50[8]) = *(void *)(v49 + v50[8]);
      *(unsigned char *)(v137 + v31[10]) = *(unsigned char *)(v30 + v31[10]);
      uint64_t v57 = v31[11];
      uint64_t v58 = (void *)(v137 + v57);
      uint64_t v59 = (const void *)(v30 + v57);
      uint64_t v60 = type metadata accessor for LocationOfInterest();
      swift_bridgeObjectRetain();
      swift_retain();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v59, 1, v60))
      {
        uint64_t v61 = sub_10017DF08(&qword_100E63508);
        memcpy(v58, v59, *(void *)(*(void *)(v61 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v60 - 8) + 16))(v58, v59, v60);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v58, 0, 1, v60);
      }
      *(unsigned char *)(v137 + v31[12]) = *(unsigned char *)(v30 + v31[12]);
      *(unsigned char *)(v137 + v31[13]) = *(unsigned char *)(v30 + v31[13]);
      uint64_t v62 = v31[14];
      uint64_t v63 = (unsigned char *)(v137 + v62);
      uint64_t v64 = (unsigned char *)(v30 + v62);
      uint64_t v65 = (int *)type metadata accessor for HomeAndWorkRefinementRowViewModel();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v64, 1, (uint64_t)v65))
      {
        uint64_t v66 = sub_10017DF08(&qword_100E6DC10);
        memcpy(v63, v64, *(void *)(*(void *)(v66 - 8) + 64));
      }
      else
      {
        *uint64_t v63 = *v64;
        uint64_t v67 = v65[5];
        uint64_t v68 = &v63[v67];
        uint64_t v69 = &v64[v67];
        uint64_t v70 = type metadata accessor for Location();
        uint64_t v71 = v68;
        uint64_t v31 = v139;
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v70 - 8) + 16))(v71, v69, v70);
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v60 - 8) + 16))(&v63[v65[6]], &v64[v65[6]], v60);
        v63[v65[7]] = v64[v65[7]];
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v63, 0, 1, (uint64_t)v65);
      }
      uint64_t v72 = v137;
      uint64_t v73 = (uint64_t)v31;
      goto LABEL_30;
    }
    goto LABEL_13;
  }
  if (v32)
  {
    sub_1000B07E0(v29, (void (*)(void))type metadata accessor for LocationFooterViewModel);
LABEL_13:
    size_t v38 = *(void *)(*(void *)(sub_10017DF08(&qword_100E6DC18) - 8) + 64);
    uint64_t v39 = (void *)v29;
    uint64_t v40 = (const void *)v30;
LABEL_14:
    memcpy(v39, v40, v38);
    goto LABEL_31;
  }
  *(unsigned char *)uint64_t v29 = *(unsigned char *)v30;
  *(unsigned char *)(v29 + 1) = *(unsigned char *)(v30 + 1);
  *(unsigned char *)(v29 + 2) = *(unsigned char *)(v30 + 2);
  *(void *)(v29 + 8) = *(void *)(v30 + 8);
  *(void *)(v29 + 16) = *(void *)(v30 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v41 = v31[8];
  uint64_t v42 = (void *)(v29 + v41);
  uint64_t v43 = (const void *)(v30 + v41);
  uint64_t v44 = type metadata accessor for URL();
  int v45 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v42, 1, v44);
  int v46 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v43, 1, v44);
  if (v45)
  {
    if (!v46)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v44 - 8) + 16))(v42, v43, v44);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v42, 0, 1, v44);
      goto LABEL_42;
    }
    goto LABEL_41;
  }
  uint64_t v98 = *(void *)(v44 - 8);
  if (v46)
  {
    (*(void (**)(void *, uint64_t))(v98 + 8))(v42, v44);
LABEL_41:
    uint64_t v99 = sub_10017DF08(&qword_100E749B0);
    memcpy(v42, v43, *(void *)(*(void *)(v99 - 8) + 64));
    goto LABEL_42;
  }
  (*(void (**)(void *, const void *, uint64_t))(v98 + 24))(v42, v43, v44);
LABEL_42:
  uint64_t v140 = v31;
  uint64_t v100 = v31[9];
  uint64_t v101 = v29 + v100;
  uint64_t v102 = v30 + v100;
  *(unsigned char *)uint64_t v101 = *(unsigned char *)(v30 + v100);
  *(void *)(v101 + 8) = *(void *)(v30 + v100 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  int v138 = (int *)type metadata accessor for LearnMoreAttributorViewModel();
  uint64_t v103 = v138[6];
  uint64_t v104 = (const void *)(v102 + v103);
  uint64_t v135 = v101 + v103;
  int v105 = _s7Weather24LocationCompositionStateOwet_0(v101 + v103, 1, v44);
  int v106 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v104, 1, v44);
  if (v105)
  {
    if (v106)
    {
      size_t v107 = *(void *)(*(void *)(sub_10017DF08(&qword_100E749B0) - 8) + 64);
      uint64_t v108 = (void *)v135;
LABEL_47:
      memcpy(v108, v104, v107);
      goto LABEL_51;
    }
    (*(void (**)(uint64_t, const void *, uint64_t))(*(void *)(v44 - 8) + 16))(v135, v104, v44);
    _s7Weather24LocationCompositionStateOwst_0(v135, 0, 1, v44);
  }
  else
  {
    uint64_t v109 = *(void *)(v44 - 8);
    if (v106)
    {
      (*(void (**)(uint64_t, uint64_t))(v109 + 8))(v135, v44);
      size_t v107 = *(void *)(*(void *)(sub_10017DF08(&qword_100E749B0) - 8) + 64);
      uint64_t v108 = (void *)v135;
      goto LABEL_47;
    }
    (*(void (**)(uint64_t, const void *, uint64_t))(v109 + 24))(v135, v104, v44);
  }
LABEL_51:
  uint64_t v110 = v138[7];
  uint64_t v111 = (void *)(v101 + v110);
  uint64_t v112 = (void *)(v102 + v110);
  *uint64_t v111 = *v112;
  v111[1] = v112[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v101 + v138[8]) = *(void *)(v102 + v138[8]);
  swift_retain();
  swift_release();
  *(unsigned char *)(v29 + v140[10]) = *(unsigned char *)(v30 + v140[10]);
  uint64_t v113 = v140[11];
  uint64_t v114 = (void *)(v29 + v113);
  uint64_t v115 = (const void *)(v30 + v113);
  uint64_t v116 = type metadata accessor for LocationOfInterest();
  int v117 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v114, 1, v116);
  int v118 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v115, 1, v116);
  if (v117)
  {
    if (!v118)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v116 - 8) + 16))(v114, v115, v116);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v114, 0, 1, v116);
      goto LABEL_57;
    }
    goto LABEL_56;
  }
  uint64_t v119 = *(void *)(v116 - 8);
  if (v118)
  {
    (*(void (**)(void *, uint64_t))(v119 + 8))(v114, v116);
LABEL_56:
    uint64_t v120 = sub_10017DF08(&qword_100E63508);
    memcpy(v114, v115, *(void *)(*(void *)(v120 - 8) + 64));
    goto LABEL_57;
  }
  (*(void (**)(void *, const void *, uint64_t))(v119 + 24))(v114, v115, v116);
LABEL_57:
  *(unsigned char *)(v29 + v140[12]) = *(unsigned char *)(v30 + v140[12]);
  *(unsigned char *)(v29 + v140[13]) = *(unsigned char *)(v30 + v140[13]);
  uint64_t v121 = v140[14];
  double v122 = (unsigned char *)(v29 + v121);
  double v123 = (unsigned char *)(v30 + v121);
  uint64_t v124 = (int *)type metadata accessor for HomeAndWorkRefinementRowViewModel();
  int v125 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v122, 1, (uint64_t)v124);
  int v126 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v123, 1, (uint64_t)v124);
  if (v125)
  {
    if (!v126)
    {
      *double v122 = *v123;
      uint64_t v127 = v124[5];
      uint64_t v128 = &v122[v127];
      uint64_t v129 = &v123[v127];
      uint64_t v130 = type metadata accessor for Location();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v130 - 8) + 16))(v128, v129, v130);
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v116 - 8) + 16))(&v122[v124[6]], &v123[v124[6]], v116);
      v122[v124[7]] = v123[v124[7]];
      uint64_t v72 = (uint64_t)v122;
      uint64_t v73 = (uint64_t)v124;
LABEL_30:
      _s7Weather24LocationCompositionStateOwst_0(v72, 0, 1, v73);
      goto LABEL_31;
    }
    goto LABEL_62;
  }
  if (v126)
  {
    sub_1000B07E0((uint64_t)v122, (void (*)(void))type metadata accessor for HomeAndWorkRefinementRowViewModel);
LABEL_62:
    size_t v38 = *(void *)(*(void *)(sub_10017DF08(&qword_100E6DC10) - 8) + 64);
    uint64_t v39 = v122;
    uint64_t v40 = v123;
    goto LABEL_14;
  }
  *double v122 = *v123;
  uint64_t v131 = v124[5];
  uint64_t v132 = &v122[v131];
  uint64_t v133 = &v123[v131];
  uint64_t v134 = type metadata accessor for Location();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v134 - 8) + 24))(v132, v133, v134);
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v116 - 8) + 24))(&v122[v124[6]], &v123[v124[6]], v116);
  v122[v124[7]] = v123[v124[7]];
LABEL_31:
  *(unsigned char *)(a1 + v8[10]) = *(unsigned char *)(a2 + v8[10]);
  *(unsigned char *)(a1 + v8[11]) = *(unsigned char *)(a2 + v8[11]);
  *(unsigned char *)(a1 + v8[12]) = *(unsigned char *)(a2 + v8[12]);
  *(unsigned char *)(a1 + v8[13]) = *(unsigned char *)(a2 + v8[13]);
  *(unsigned char *)(a1 + v8[14]) = *(unsigned char *)(a2 + v8[14]);
  uint64_t v74 = v8[15];
  uint64_t v75 = *(void **)(a2 + v74);
  uint64_t v76 = *(void **)(a1 + v74);
  *(void *)(a1 + v74) = v75;
  id v77 = v75;

  *(unsigned char *)(a1 + v8[16]) = *(unsigned char *)(a2 + v8[16]);
  *(unsigned char *)(a1 + v8[17]) = *(unsigned char *)(a2 + v8[17]);
  *(unsigned char *)(a1 + v8[18]) = *(unsigned char *)(a2 + v8[18]);
  uint64_t v78 = v8[19];
  uint64_t v79 = a1 + v78;
  uint64_t v80 = a2 + v78;
  uint64_t v81 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v81 - 8) + 24))(v79, v80, v81);
  uint64_t v82 = v8[20];
  uint64_t v83 = (void *)(a1 + v82);
  uint64_t v84 = (const void *)(a2 + v82);
  uint64_t v85 = type metadata accessor for ForegroundEffect();
  int v86 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v83, 1, v85);
  int v87 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v84, 1, v85);
  if (!v86)
  {
    uint64_t v88 = *(void *)(v85 - 8);
    if (!v87)
    {
      (*(void (**)(void *, const void *, uint64_t))(v88 + 24))(v83, v84, v85);
      goto LABEL_37;
    }
    (*(void (**)(void *, uint64_t))(v88 + 8))(v83, v85);
    goto LABEL_36;
  }
  if (v87)
  {
LABEL_36:
    uint64_t v89 = sub_10017DF08(&qword_100E65FA8);
    memcpy(v83, v84, *(void *)(*(void *)(v89 - 8) + 64));
    goto LABEL_37;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(void *)(v85 - 8) + 16))(v83, v84, v85);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v83, 0, 1, v85);
LABEL_37:
  *(unsigned char *)(a1 + v8[21]) = *(unsigned char *)(a2 + v8[21]);
  *(void *)(a1 + v8[22]) = *(void *)(a2 + v8[22]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + v8[23]) = *(unsigned char *)(a2 + v8[23]);
  uint64_t v90 = v8[24];
  uint64_t v91 = a1 + v90;
  uint64_t v92 = a2 + v90;
  uint64_t v93 = type metadata accessor for LocationEntity();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v93 - 8) + 24))(v91, v92, v93);
  uint64_t v94 = *(int *)(a3 + 20);
  uint64_t v95 = (void *)(a1 + v94);
  uint64_t v96 = (void *)(a2 + v94);
  *uint64_t v95 = *v96;
  v95[1] = v96[1];
  swift_retain();
  swift_release();
  return a1;
}

void *sub_1000A533C(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) == 0)
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 2u:
        uint64_t v8 = a2[1];
        *a1 = *a2;
        a1[1] = v8;
        uint64_t v9 = a2 + 2;
        unint64_t v10 = a2[3];
        swift_bridgeObjectRetain();
        if (v10 >= 0xE)
        {
          a1[2] = *v9;
          a1[3] = v10;
          swift_bridgeObjectRetain();
        }
        else
        {
          *((_OWORD *)a1 + 1) = *(_OWORD *)v9;
        }
        uint64_t v42 = a2[5];
        a1[4] = a2[4];
        a1[5] = v42;
        swift_bridgeObjectRetain();
        goto LABEL_59;
      case 3u:
        uint64_t v11 = a2[1];
        *a1 = *a2;
        a1[1] = v11;
        uint64_t v12 = a2[2];
        uint64_t v13 = a2[3];
        a1[2] = v12;
        a1[3] = v13;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_59;
      case 4u:
        uint64_t v14 = a2[1];
        *a1 = *a2;
        a1[1] = v14;
        swift_bridgeObjectRetain();
        uint64_t v15 = sub_10017DF08(&qword_100E6BBC0);
        uint64_t v16 = *(int *)(v15 + 48);
        uint64_t v17 = (void *)((char *)a1 + v16);
        uint64_t v18 = (char *)a2 + v16;
        uint64_t v19 = *(void *)((char *)a2 + v16 + 8);
        *uint64_t v17 = *(void *)((char *)a2 + v16);
        v17[1] = v19;
        uint64_t v20 = (int *)type metadata accessor for WeatherData(0);
        uint64_t v21 = v20[5];
        char v22 = (char *)v17 + v21;
        uint64_t v23 = &v18[v21];
        uint64_t v24 = type metadata accessor for Locale();
        swift_bridgeObjectRetain();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v23, 1, v24))
        {
          uint64_t v25 = sub_10017DF08(&qword_100E63730);
          memcpy(v22, v23, *(void *)(*(void *)(v25 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16))(v22, v23, v24);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v22, 0, 1, v24);
        }
        uint64_t v44 = v20[6];
        int v45 = (char *)v17 + v44;
        int v46 = &v18[v44];
        uint64_t v47 = type metadata accessor for WeatherDataModel();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v47 - 8) + 16))(v45, v46, v47);
        uint64_t v48 = v20[7];
        uint64_t v49 = (char *)v17 + v48;
        uint64_t v50 = &v18[v48];
        uint64_t v51 = sub_10017DF08(&qword_100E63738);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v50, 1, v51))
        {
          uint64_t v52 = type metadata accessor for WeatherData.CachingState(0);
          memcpy(v49, v50, *(void *)(*(void *)(v52 - 8) + 64));
        }
        else
        {
          uint64_t v53 = type metadata accessor for Date();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v53 - 8) + 16))(v49, v50, v53);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v49, 0, 1, v51);
        }
        uint64_t v54 = v20[8];
        uint64_t v55 = (void *)((char *)v17 + v54);
        uint64_t v56 = &v18[v54];
        uint64_t v57 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload == 1)
        {
          uint64_t v60 = type metadata accessor for WeatherStatisticsModel();
          (*(void (**)(void *, char *, uint64_t))(*(void *)(v60 - 8) + 16))(v55, v56, v60);
        }
        else
        {
          if (EnumCaseMultiPayload)
          {
            memcpy(v55, v56, *(void *)(*(void *)(v57 - 8) + 64));
            goto LABEL_28;
          }
          uint64_t v59 = *((void *)v56 + 1);
          *uint64_t v55 = *(void *)v56;
          v55[1] = v59;
          swift_bridgeObjectRetain();
        }
        swift_storeEnumTagMultiPayload();
LABEL_28:
        uint64_t v61 = v20[9];
        uint64_t v62 = (char *)v17 + v61;
        uint64_t v63 = &v18[v61];
        uint64_t v64 = type metadata accessor for WeatherDataOverrides();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v63, 1, v64))
        {
          uint64_t v65 = sub_10017DF08(&qword_100E63740);
          memcpy(v62, v63, *(void *)(*(void *)(v65 - 8) + 64));
        }
        else
        {
          uint64_t v66 = type metadata accessor for Date();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v63, 1, v66))
          {
            uint64_t v67 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
            memcpy(v62, v63, *(void *)(*(void *)(v67 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v66 - 8) + 16))(v62, v63, v66);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v62, 0, 1, v66);
          }
          uint64_t v68 = *(int *)(v64 + 20);
          uint64_t v69 = &v62[v68];
          uint64_t v70 = &v63[v68];
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v70, 1, v66))
          {
            uint64_t v71 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
            memcpy(v69, v70, *(void *)(*(void *)(v71 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v66 - 8) + 16))(v69, v70, v66);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v69, 0, 1, v66);
          }
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v62, 0, 1, v64);
        }
        uint64_t v232 = v15;
        uint64_t v72 = *(int *)(v15 + 64);
        uint64_t v73 = (char *)a1 + v72;
        uint64_t v74 = (char *)a2 + v72;
        uint64_t v75 = type metadata accessor for UUID();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v75 - 8) + 16))(v73, v74, v75);
        uint64_t v76 = type metadata accessor for PreprocessedWeatherData();
        *(void *)&v73[*(int *)(v76 + 20)] = *(void *)&v74[*(int *)(v76 + 20)];
        uint64_t v233 = v73;
        uint64_t v234 = (int *)v76;
        uint64_t v77 = *(int *)(v76 + 24);
        uint64_t v78 = &v73[v77];
        uint64_t v235 = v74;
        uint64_t v79 = &v74[v77];
        uint64_t v80 = *(void *)&v74[v77 + 8];
        *(void *)uint64_t v78 = *(void *)&v74[v77];
        *((void *)v78 + 1) = v80;
        uint64_t v81 = *(void *)&v74[v77 + 24];
        *((void *)v78 + 2) = *(void *)&v74[v77 + 16];
        *((void *)v78 + 3) = v81;
        uint64_t v82 = *(void *)&v74[v77 + 32];
        uint64_t v83 = *((void *)v79 + 5);
        *((void *)v78 + 4) = v82;
        *((void *)v78 + 5) = v83;
        uint64_t v84 = type metadata accessor for FeelsLikeComponentPreprocessedDataModel();
        uint64_t v85 = *(int *)(v84 + 28);
        __dst = &v78[v85];
        uint64_t v230 = v84;
        int v86 = &v79[v85];
        uint64_t v87 = type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference(0);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v86, 1, v87))
        {
          uint64_t v88 = sub_10017DF08(&qword_100E63750);
          memcpy(__dst, v86, *(void *)(*(void *)(v88 - 8) + 64));
        }
        else
        {
          uint64_t v89 = *((void *)v86 + 1);
          *(void *)__dst = *(void *)v86;
          *((void *)__dst + 1) = v89;
          uint64_t v90 = *(int *)(v87 + 20);
          uint64_t v91 = &__dst[v90];
          uint64_t v92 = &v86[v90];
          uint64_t v93 = type metadata accessor for TemperatureScaleConfiguration();
          uint64_t v226 = *(void (**)(char *, char *, uint64_t))(*(void *)(v93 - 8) + 16);
          swift_bridgeObjectRetain();
          v226(v91, v92, v93);
          uint64_t v94 = (int *)type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
          *(void *)&v91[v94[5]] = *(void *)&v92[v94[5]];
          *(void *)&v91[v94[6]] = *(void *)&v92[v94[6]];
          *(void *)&v91[v94[7]] = *(void *)&v92[v94[7]];
          uint64_t v95 = v94[8];
          uint64_t v96 = &v91[v95];
          uint64_t v97 = &v92[v95];
          uint64_t v99 = *(void *)v97;
          uint64_t v98 = *((void *)v97 + 1);
          *(void *)uint64_t v96 = v99;
          *((void *)v96 + 1) = v98;
          v91[v94[9]] = v92[v94[9]];
          swift_bridgeObjectRetain();
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dst, 0, 1, v87);
        }
        uint64_t v100 = *(int *)(v230 + 32);
        uint64_t v101 = &v78[v100];
        uint64_t v102 = &v79[v100];
        uint64_t v103 = *((void *)v102 + 1);
        *(void *)uint64_t v101 = *(void *)v102;
        *((void *)v101 + 1) = v103;
        uint64_t v104 = v234[7];
        int v105 = &v233[v104];
        int v106 = &v235[v104];
        *(void *)&v233[v104] = *(void *)&v235[v104];
        uint64_t v107 = *(int *)(type metadata accessor for HourlyForecastComponentPreprocessedDataModel() + 20);
        uint64_t v108 = &v105[v107];
        uint64_t v109 = &v106[v107];
        uint64_t v110 = type metadata accessor for WeatherDescription();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v220 = a2;
        uint64_t v221 = v110;
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v109, 1, v110))
        {
          uint64_t v111 = sub_10017DF08(&qword_100E63758);
          memcpy(v108, v109, *(void *)(*(void *)(v111 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v110 - 8) + 16))(v108, v109, v110);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v108, 0, 1, v110);
        }
        uint64_t v112 = v234[8];
        uint64_t v113 = &v233[v112];
        uint64_t v114 = &v235[v112];
        uint64_t v115 = *(void *)&v235[v112 + 8];
        *(void *)uint64_t v113 = *(void *)&v235[v112];
        *((void *)v113 + 1) = v115;
        uint64_t v116 = *(void *)&v235[v112 + 24];
        *((void *)v113 + 2) = *(void *)&v235[v112 + 16];
        *((void *)v113 + 3) = v116;
        uint64_t v117 = *(void *)&v235[v112 + 40];
        *((void *)v113 + 4) = *(void *)&v235[v112 + 32];
        *((void *)v113 + 5) = v117;
        uint64_t v118 = *(void *)&v235[v112 + 56];
        *((void *)v113 + 6) = *(void *)&v235[v112 + 48];
        *((void *)v113 + 7) = v118;
        uint64_t v119 = *(int *)(type metadata accessor for ListPreprocessedDataModel() + 32);
        uint64_t v120 = &v113[v119];
        uint64_t v121 = &v114[v119];
        uint64_t v122 = type metadata accessor for Date();
        double v123 = *(void (**)(char *, char *, void *))(*(void *)(v122 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v227 = v123;
        __dsta = (void *)v122;
        v123(v120, v121, (void *)v122);
        uint64_t v124 = type metadata accessor for WeatherConditionBackgroundTimeData();
        uint64_t v125 = *(int *)(v124 + 20);
        int v126 = &v120[v125];
        uint64_t v127 = &v121[v125];
        uint64_t v128 = type metadata accessor for Elevation();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v127, 1, v128))
        {
          uint64_t v129 = sub_10017DF08(&qword_100E63760);
          memcpy(v126, v127, *(void *)(*(void *)(v129 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v128 - 8) + 16))(v126, v127, v128);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v126, 0, 1, v128);
        }
        uint64_t v130 = *(int *)(v124 + 24);
        uint64_t v131 = &v120[v130];
        uint64_t v132 = &v121[v130];
        uint64_t v133 = type metadata accessor for BackgroundMoonData();
        uint64_t v231 = v124;
        uint64_t v224 = v133;
        uint64_t v225 = v128;
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v132, 1, v133))
        {
          uint64_t v134 = sub_10017DF08(&qword_100E63768);
          memcpy(v131, v132, *(void *)(*(void *)(v134 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v133 - 8) + 16))(v131, v132, v133);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v131, 0, 1, v133);
        }
        uint64_t v135 = v234[9];
        uint64_t v136 = &v233[v135];
        uint64_t v137 = &v235[v135];
        uint64_t v138 = *((void *)v137 + 1);
        *(void *)uint64_t v136 = *(void *)v137;
        *((void *)v136 + 1) = v138;
        uint64_t v139 = *((void *)v137 + 3);
        *((void *)v136 + 2) = *((void *)v137 + 2);
        *((void *)v136 + 3) = v139;
        uint64_t v140 = *((void *)v137 + 5);
        *((void *)v136 + 4) = *((void *)v137 + 4);
        *((void *)v136 + 5) = v140;
        uint64_t v141 = *((void *)v137 + 7);
        *((void *)v136 + 6) = *((void *)v137 + 6);
        *((void *)v136 + 7) = v141;
        uint64_t v142 = *((void *)v137 + 9);
        *((void *)v136 + 8) = *((void *)v137 + 8);
        *((void *)v136 + 9) = v142;
        uint64_t v143 = *((void *)v137 + 11);
        *((void *)v136 + 10) = *((void *)v137 + 10);
        *((void *)v136 + 11) = v143;
        uint64_t v144 = *((void *)v137 + 13);
        *((void *)v136 + 12) = *((void *)v137 + 12);
        *((void *)v136 + 13) = v144;
        uint64_t v145 = v234[10];
        uint64_t v146 = &v233[v145];
        uint64_t v147 = &v235[v145];
        uint64_t v218 = *(void (**)(char *, char *, uint64_t))(*(void *)(v221 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v218(v146, v147, v221);
        uint64_t v148 = *(int *)(type metadata accessor for UVIndexComponentPreprocessedDataModel() + 20);
        uint64_t v149 = &v146[v148];
        uint64_t v150 = &v147[v148];
        uint64_t v151 = *((void *)v150 + 1);
        *(void *)uint64_t v149 = *(void *)v150;
        *((void *)v149 + 1) = v151;
        uint64_t v152 = v234[11];
        char v153 = &v233[v152];
        uint64_t v154 = &v235[v152];
        uint64_t v155 = *((void *)v154 + 1);
        *(void *)char v153 = *(void *)v154;
        *((void *)v153 + 1) = v155;
        uint64_t v156 = *((void *)v154 + 3);
        *((void *)v153 + 2) = *((void *)v154 + 2);
        *((void *)v153 + 3) = v156;
        uint64_t v157 = *((void *)v154 + 5);
        *((void *)v153 + 4) = *((void *)v154 + 4);
        *((void *)v153 + 5) = v157;
        uint64_t v158 = v234[12];
        uint64_t v159 = &v233[v158];
        uint64_t v160 = &v235[v158];
        uint64_t v161 = type metadata accessor for PressureTrend();
        uint64_t v222 = *(void (**)(char *, char *, uint64_t))(*(void *)(v161 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v222(v159, v160, v161);
        uint64_t v162 = (int *)type metadata accessor for PressureComponentPreprocessedDataModel();
        uint64_t v163 = v162[5];
        uint64_t v164 = &v159[v163];
        uint64_t v165 = &v160[v163];
        uint64_t v166 = *((void *)v165 + 1);
        *(void *)uint64_t v164 = *(void *)v165;
        *((void *)v164 + 1) = v166;
        uint64_t v167 = v162[6];
        uint64_t v168 = &v159[v167];
        uint64_t v169 = &v160[v167];
        uint64_t v223 = *((void *)v169 + 1);
        *(void *)uint64_t v168 = *(void *)v169;
        *((void *)v168 + 1) = v223;
        uint64_t v170 = v162[7];
        uint64_t v171 = &v159[v170];
        uint64_t v172 = &v160[v170];
        uint64_t v219 = *((void *)v172 + 1);
        *(void *)uint64_t v171 = *(void *)v172;
        *((void *)v171 + 1) = v219;
        *(void *)&v159[v162[8]] = *(void *)&v160[v162[8]];
        uint64_t v173 = v162[9];
        uint64_t v174 = &v159[v173];
        uint64_t v175 = &v160[v173];
        uint64_t v217 = *((void *)v175 + 1);
        *(void *)uint64_t v174 = *(void *)v175;
        *((void *)v174 + 1) = v217;
        uint64_t v176 = v234[13];
        uint64_t v177 = &v233[v176];
        uint64_t v178 = &v235[v176];
        uint64_t v179 = *((void *)v178 + 1);
        *(void *)uint64_t v177 = *(void *)v178;
        *((void *)v177 + 1) = v179;
        uint64_t v180 = *((void *)v178 + 3);
        *((void *)v177 + 2) = *((void *)v178 + 2);
        *((void *)v177 + 3) = v180;
        uint64_t v181 = *((void *)v178 + 5);
        *((void *)v177 + 4) = *((void *)v178 + 4);
        *((void *)v177 + 5) = v181;
        uint64_t v182 = *((void *)v178 + 7);
        *((void *)v177 + 6) = *((void *)v178 + 6);
        *((void *)v177 + 7) = v182;
        uint64_t v183 = *((void *)v178 + 9);
        *((void *)v177 + 8) = *((void *)v178 + 8);
        *((void *)v177 + 9) = v183;
        uint64_t v184 = *((void *)v178 + 11);
        *((void *)v177 + 10) = *((void *)v178 + 10);
        *((void *)v177 + 11) = v184;
        uint64_t v185 = *((void *)v178 + 13);
        *((void *)v177 + 12) = *((void *)v178 + 12);
        *((void *)v177 + 13) = v185;
        uint64_t v186 = *((void *)v178 + 15);
        *((void *)v177 + 14) = *((void *)v178 + 14);
        *((void *)v177 + 15) = v186;
        uint64_t v187 = *((void *)v178 + 17);
        *((void *)v177 + 16) = *((void *)v178 + 16);
        *((void *)v177 + 17) = v187;
        uint64_t v188 = *((void *)v178 + 19);
        *((void *)v177 + 18) = *((void *)v178 + 18);
        *((void *)v177 + 19) = v188;
        uint64_t v189 = *((void *)v178 + 21);
        *((void *)v177 + 20) = *((void *)v178 + 20);
        *((void *)v177 + 21) = v189;
        uint64_t v190 = *((void *)v178 + 23);
        *((void *)v177 + 22) = *((void *)v178 + 22);
        *((void *)v177 + 23) = v190;
        uint64_t v191 = *((void *)v178 + 25);
        *((void *)v177 + 24) = *((void *)v178 + 24);
        *((void *)v177 + 25) = v191;
        *((_OWORD *)v177 + 13) = *((_OWORD *)v178 + 13);
        *((void *)v177 + 28) = *((void *)v178 + 28);
        uint64_t v192 = v234[14];
        uint64_t v193 = &v233[v192];
        int v216 = &v235[v192];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v227(v193, v216, __dsta);
        uint64_t v194 = *(int *)(v231 + 20);
        uint64_t v195 = &v193[v194];
        uint64_t v196 = &v216[v194];
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v216[v194], 1, v225))
        {
          uint64_t v197 = sub_10017DF08(&qword_100E63760);
          memcpy(v195, v196, *(void *)(*(void *)(v197 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v225 - 8) + 16))(v195, v196, v225);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v195, 0, 1, v225);
        }
        uint64_t v198 = *(int *)(v231 + 24);
        uint64_t v199 = &v193[v198];
        uint64_t v200 = &v216[v198];
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v216[v198], 1, v224))
        {
          uint64_t v201 = sub_10017DF08(&qword_100E63768);
          memcpy(v199, v200, *(void *)(*(void *)(v201 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v224 - 8) + 16))(v199, v200, v224);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v199, 0, 1, v224);
        }
        uint64_t v202 = v234[15];
        uint64_t v203 = &v233[v202];
        uint64_t v204 = &v235[v202];
        uint64_t v205 = *((void *)v204 + 1);
        *(void *)uint64_t v203 = *(void *)v204;
        *((void *)v203 + 1) = v205;
        uint64_t v206 = *((void *)v204 + 3);
        *((void *)v203 + 2) = *((void *)v204 + 2);
        *((void *)v203 + 3) = v206;
        uint64_t v207 = *((void *)v204 + 5);
        *((void *)v203 + 4) = *((void *)v204 + 4);
        *((void *)v203 + 5) = v207;
        uint64_t v208 = *((void *)v204 + 7);
        *((void *)v203 + 6) = *((void *)v204 + 6);
        *((void *)v203 + 7) = v208;
        uint64_t v209 = *((void *)v204 + 9);
        *((void *)v203 + 8) = *((void *)v204 + 8);
        *((void *)v203 + 9) = v209;
        uint64_t v210 = *((void *)v204 + 11);
        *((void *)v203 + 10) = *((void *)v204 + 10);
        *((void *)v203 + 11) = v210;
        uint64_t v211 = *((void *)v204 + 13);
        *((void *)v203 + 12) = *((void *)v204 + 12);
        *((void *)v203 + 13) = v211;
        uint64_t v212 = *(int *)(v232 + 80);
        uint64_t v236 = (void *)((char *)a1 + v212);
        uint64_t v213 = (void *)((char *)v220 + v212);
        type metadata accessor for NewsDataModel();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          *uint64_t v236 = *v213;
          swift_bridgeObjectRetain();
        }
        else
        {
          uint64_t v214 = type metadata accessor for News();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v214 - 8) + 16))(v236, v213, v214);
        }
        goto LABEL_58;
      case 5u:
        uint64_t v26 = a2[1];
        *a1 = *a2;
        a1[1] = v26;
        swift_bridgeObjectRetain();
        uint64_t v27 = *(int *)(sub_10017DF08(&qword_100E6BBB0) + 48);
        uint64_t v28 = (void *)((char *)a1 + v27);
        uint64_t v29 = (void *)((char *)a2 + v27);
        type metadata accessor for NewsDataModel();
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          *uint64_t v28 = *v29;
          swift_bridgeObjectRetain();
        }
        else
        {
          uint64_t v43 = type metadata accessor for News();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v43 - 8) + 16))(v28, v29, v43);
        }
LABEL_58:
        swift_storeEnumTagMultiPayload();
        goto LABEL_59;
      case 6u:
        uint64_t v30 = a2[1];
        *a1 = *a2;
        a1[1] = v30;
        swift_bridgeObjectRetain();
        uint64_t v31 = *(int *)(sub_10017DF08(&qword_100E6BBB8) + 48);
        int v32 = (char *)a1 + v31;
        uint64_t v33 = (char *)a2 + v31;
        uint64_t v34 = type metadata accessor for AvailableDataSets();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 16))(v32, v33, v34);
        goto LABEL_59;
      case 8u:
        uint64_t v35 = a2[1];
        *a1 = *a2;
        a1[1] = v35;
        swift_bridgeObjectRetain();
        uint64_t v36 = *(int *)(sub_10017DF08(&qword_100E6BBA8) + 48);
        uint64_t v37 = (char *)a1 + v36;
        size_t v38 = (char *)a2 + v36;
        uint64_t v39 = type metadata accessor for WeatherStatisticsModel();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 16))(v37, v38, v39);
        goto LABEL_59;
      case 9u:
        uint64_t v40 = a2[1];
        *a1 = *a2;
        a1[1] = v40;
        uint64_t v41 = a2[3];
        a1[2] = a2[2];
        a1[3] = v41;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_59;
      default:
        uint64_t v6 = a2[1];
        *a1 = *a2;
        a1[1] = v6;
        swift_bridgeObjectRetain();
LABEL_59:
        swift_storeEnumTagMultiPayload();
        return a1;
    }
  }
  uint64_t v7 = *a2;
  *a1 = *a2;
  a1 = (void *)(v7 + ((v5 + 16) & ~(unint64_t)v5));
  swift_retain();
  return a1;
}

uint64_t sub_1000A65A8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v48 = a1;
  uint64_t v51 = sub_10017DF08(&qword_100E7EA58);
  __chkstk_darwin(v51);
  uint64_t v47 = (char *)&v40 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = sub_10017DF08(&qword_100E7EA60);
  __chkstk_darwin(v50);
  uint64_t v49 = (uint64_t)&v40 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = sub_10017DF08(&qword_100E7EA68);
  uint64_t v4 = __chkstk_darwin(v46);
  uint64_t v6 = (char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v40 - v7;
  uint64_t v9 = sub_10017DF08(&qword_100E7EA70);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10017DF08(&qword_100E79AA8);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_10017DF08(&qword_100E7EA78);
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v40 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = (int *)type metadata accessor for DailyComponentRowView(0);
  uint64_t v19 = v18;
  if (*(unsigned char *)(v1 + v18[12]) == 1)
  {
    uint64_t v40 = v14;
    uint64_t v41 = v6;
    uint64_t v42 = v8;
    uint64_t v43 = v9;
    uint64_t v44 = v12;
    int v45 = v11;
    uint64_t v47 = v17;
    uint64_t v20 = v49;
    id v21 = [self currentDevice];
    id v22 = [v21 userInterfaceIdiom];

    if (v22)
    {
      unsigned __int8 v23 = static Axis.Set.horizontal.getter();
      char v24 = static Axis.Set.vertical.getter();
      char v25 = Axis.Set.init(rawValue:)();
      Axis.Set.init(rawValue:)();
      if (Axis.Set.init(rawValue:)() != v23) {
        char v25 = Axis.Set.init(rawValue:)();
      }
      Axis.Set.init(rawValue:)();
      char v26 = Axis.Set.init(rawValue:)();
      uint64_t v27 = (uint64_t)v45;
      uint64_t v28 = v41;
      if (v26 != v24) {
        char v25 = Axis.Set.init(rawValue:)();
      }
      *uint64_t v28 = v25;
      uint64_t v29 = sub_10017DF08(&qword_100E7EAB8);
      sub_1005304B4(v1, (uint64_t)&v28[*(int *)(v29 + 44)]);
      uint64_t v30 = (uint64_t)v28;
      uint64_t v31 = &qword_100E7EA68;
      uint64_t v32 = (uint64_t)v42;
      sub_10024D364(v30, (uint64_t)v42, &qword_100E7EA68);
      sub_10006DF38(v32, v27, &qword_100E7EA68);
      swift_storeEnumTagMultiPayload();
      sub_10001735C();
      sub_1001246C8(&qword_100E7EA98, &qword_100E7EA68);
      uint64_t v33 = (uint64_t)v47;
      _ConditionalContent<>.init(storage:)();
      uint64_t v34 = v32;
    }
    else
    {
      uint64_t v38 = (uint64_t)v40;
      sub_10052FD84(*(void *)(v1 + v19[8]), v1 + v19[7], (uint64_t)v40);
      uint64_t v31 = &qword_100E79AA8;
      sub_10006DF38(v38, (uint64_t)v45, &qword_100E79AA8);
      swift_storeEnumTagMultiPayload();
      sub_10001735C();
      sub_1001246C8(&qword_100E7EA98, &qword_100E7EA68);
      uint64_t v33 = (uint64_t)v47;
      _ConditionalContent<>.init(storage:)();
      uint64_t v34 = v38;
    }
    sub_100178110(v34, v31);
    uint64_t v36 = &qword_100E7EA78;
    sub_10006DF38(v33, v20, &qword_100E7EA78);
    swift_storeEnumTagMultiPayload();
    sub_1000A6B1C();
    sub_1000A6BBC();
    _ConditionalContent<>.init(storage:)();
    uint64_t v37 = v33;
  }
  else
  {
    uint64_t v35 = (uint64_t)v47;
    sub_100143434(*(void *)(v1 + v18[8]), v1 + v18[7], (uint64_t)v47, *(double *)(v1 + v18[11]), *(double *)(v1 + v18[9]), *(double *)(v1 + v18[9] + 8), *(double *)(v1 + v18[10]), *(double *)(v1 + v18[10] + 8));
    uint64_t v36 = &qword_100E7EA58;
    sub_10006DF38(v35, v49, &qword_100E7EA58);
    swift_storeEnumTagMultiPayload();
    sub_1000A6B1C();
    sub_1000A6BBC();
    _ConditionalContent<>.init(storage:)();
    uint64_t v37 = v35;
  }
  return sub_100178110(v37, v36);
}

unint64_t sub_1000A6B1C()
{
  unint64_t result = qword_100E7EA80;
  if (!qword_100E7EA80)
  {
    sub_10018C6DC(&qword_100E7EA78);
    sub_10001735C();
    sub_1001246C8(&qword_100E7EA98, &qword_100E7EA68);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E7EA80);
  }
  return result;
}

unint64_t sub_1000A6BBC()
{
  unint64_t result = qword_100E7EAA0;
  if (!qword_100E7EAA0)
  {
    sub_10018C6DC(&qword_100E7EA58);
    sub_10014EF64();
    sub_100145810((unint64_t *)&qword_100EAACA0, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E7EAA0);
  }
  return result;
}

uint64_t sub_1000A6C68()
{
  uint64_t v161 = type metadata accessor for UnitConfiguration.WindSpeed();
  sub_100179C0C();
  uint64_t v151 = v0;
  __chkstk_darwin(v1);
  sub_100109314();
  sub_100109338(v2);
  uint64_t v159 = sub_10017DF08(&qword_100EA2430);
  sub_100162E4C();
  __chkstk_darwin(v3);
  sub_100109314();
  sub_100109338(v4);
  uint64_t v5 = sub_10017DF08(qword_100E77770);
  uint64_t v6 = sub_100109308(v5);
  __chkstk_darwin(v6);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v7);
  sub_100128F8C();
  sub_100109328(v8);
  uint64_t v158 = type metadata accessor for UnitConfiguration.Precipitation();
  sub_100179C0C();
  uint64_t v149 = v9;
  __chkstk_darwin(v10);
  sub_100109314();
  sub_100109338(v11);
  uint64_t v157 = sub_10017DF08(&qword_100EA2438);
  sub_100162E4C();
  __chkstk_darwin(v12);
  sub_100109314();
  sub_100109338(v13);
  uint64_t v14 = sub_10017DF08(&qword_100E77760);
  uint64_t v15 = sub_100109308(v14);
  __chkstk_darwin(v15);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v16);
  sub_100128F8C();
  sub_100109328(v17);
  uint64_t v156 = type metadata accessor for UnitConfiguration.Pressure();
  sub_100179C0C();
  uint64_t v147 = v18;
  __chkstk_darwin(v19);
  sub_100109314();
  sub_100109338(v20);
  uint64_t v155 = sub_10017DF08(&qword_100EA2440);
  sub_100162E4C();
  __chkstk_darwin(v21);
  sub_100109314();
  sub_100109338(v22);
  uint64_t v23 = sub_10017DF08(&qword_100E77768);
  uint64_t v24 = sub_100109308(v23);
  __chkstk_darwin(v24);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v25);
  sub_100128F8C();
  sub_100109328(v26);
  uint64_t v154 = type metadata accessor for UnitConfiguration.Distance();
  sub_100179C0C();
  uint64_t v145 = v27;
  __chkstk_darwin(v28);
  sub_100109314();
  sub_100109338(v29);
  uint64_t v152 = sub_10017DF08(&qword_100EA2448);
  sub_100162E4C();
  __chkstk_darwin(v30);
  sub_100109314();
  sub_100109338(v31);
  uint64_t v32 = sub_10017DF08(&qword_100E77758);
  uint64_t v33 = sub_100109308(v32);
  __chkstk_darwin(v33);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v34);
  sub_100128F8C();
  sub_100109328(v35);
  uint64_t v173 = type metadata accessor for ConfiguredUnit();
  sub_100179C0C();
  uint64_t v172 = v36;
  __chkstk_darwin(v37);
  sub_100109314();
  sub_100109328(v38);
  uint64_t v170 = type metadata accessor for MainAction();
  sub_100162E4C();
  __chkstk_darwin(v39);
  sub_1001626E0();
  uint64_t v42 = v41 - v40;
  uint64_t v43 = type metadata accessor for UnitConfiguration.Temperature();
  sub_100179C0C();
  uint64_t v143 = v44;
  __chkstk_darwin(v45);
  sub_1001626E0();
  uint64_t v46 = sub_10017DF08(&qword_100E80DB8);
  uint64_t v47 = v46 - 8;
  __chkstk_darwin(v46);
  sub_1001626E0();
  uint64_t v50 = v49 - v48;
  uint64_t v51 = sub_10017DF08(&qword_100E6F620);
  uint64_t v52 = sub_100109308(v51);
  __chkstk_darwin(v52);
  uint64_t v54 = (char *)v142 - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v55);
  uint64_t v57 = (char *)v142 - v56;
  uint64_t v58 = type metadata accessor for UnitManager();
  static UnitManager.standard.getter();
  UnitManager.refreshUnitsFromStorage()();
  swift_release();
  uint64_t v166 = v58;
  static UnitManager.standard.getter();
  UnitManager.preferredTemperatureUnit.getter();
  swift_release();
  uint64_t v59 = v174 + OBJC_IVAR____TtC7Weather15SettingsMonitor_lastTemperatureConfiguration;
  swift_beginAccess();
  uint64_t v60 = v50 + *(int *)(v47 + 56);
  uint64_t v163 = v57;
  sub_1001262FC((uint64_t)v57, v50, &qword_100E6F620);
  sub_1001262FC(v59, v60, &qword_100E6F620);
  sub_10012B520(v50, 1, v43);
  if (v78)
  {
    sub_10012B520(v60, 1, v43);
    if (v78)
    {
      sub_1001781AC(v50, &qword_100E6F620);
      sub_1001A2F0C();
      goto LABEL_11;
    }
  }
  else
  {
    sub_1001262FC(v50, (uint64_t)v54, &qword_100E6F620);
    int v61 = _s7Weather24LocationCompositionStateOwet_0(v60, 1, v43);
    if (v61 != 1)
    {
      uint64_t v62 = v143;
      sub_1001627D4();
      v63();
      sub_100128E24(qword_100E80DC0, (void (*)(uint64_t))&type metadata accessor for UnitConfiguration.Temperature);
      char v64 = dispatch thunk of static Equatable.== infix(_:_:)();
      uint64_t v65 = *(void (**)(void))(v62 + 8);
      uint64_t v47 = v62 + 8;
      sub_10016285C();
      v65();
      sub_10016285C();
      v65();
      sub_1001781AC(v50, &qword_100E6F620);
      sub_1001A2F0C();
      if (v64) {
        goto LABEL_11;
      }
      goto LABEL_10;
    }
    (*(void (**)(char *, uint64_t))(v143 + 8))(v54, v43);
  }
  sub_1001781AC(v50, &qword_100E80DB8);
  sub_1001A2F0C();
LABEL_10:
  swift_beginAccess();
  uint64_t v66 = (uint64_t)v163;
  sub_100931C98((uint64_t)v163, v59, &qword_100E6F620);
  swift_endAccess();
  uint64_t v67 = v66;
  uint64_t v68 = v171;
  sub_1001262FC(v67, v171, &qword_100E6F620);
  uint64_t v69 = v172;
  uint64_t v57 = (char *)v173;
  (*(void (**)(uint64_t, void, uint64_t))(v172 + 104))(v68, enum case for ConfiguredUnit.temperature(_:), v173);
  (*(void (**)(uint64_t, uint64_t, char *))(v69 + 16))(v42, v68, v57);
  type metadata accessor for ConfiguredUnitsAction();
  sub_1001092B4();
  type metadata accessor for EnvironmentAction();
  sub_10019DA7C();
  sub_1001821FC();
  sub_1001819A4();
  ((void (*)(void))qword_100E6F620)();
  sub_10017EB78();
  sub_1001807F8();
  sub_1001781AC((uint64_t)v175, (uint64_t *)&unk_100EA01F0);
  sub_1001ABE70(v42);
  swift_release();
LABEL_11:
  static UnitManager.standard.getter();
  uint64_t v70 = v167;
  UnitManager.preferredDistanceUnit.getter();
  swift_release();
  uint64_t v71 = (void (*)(void))(v47 + OBJC_IVAR____TtC7Weather15SettingsMonitor_lastDistanceConfiguration);
  sub_100185DF0();
  sub_1001653A0();
  uint64_t v72 = v153;
  uint64_t v74 = v153 + v73;
  sub_1001262FC(v70, v153, &qword_100E77758);
  sub_1001A3548();
  sub_10012B520(v72, 1, (uint64_t)v54);
  if (v78)
  {
    sub_10012B520(v74, 1, (uint64_t)v54);
    uint64_t v75 = v165;
    if (v78)
    {
      sub_1001781AC(v72, &qword_100E77758);
      uint64_t v76 = v162;
      goto LABEL_22;
    }
    goto LABEL_19;
  }
  uint64_t v77 = v144;
  sub_1001262FC(v72, v144, &qword_100E77758);
  sub_10012B520(v74, 1, (uint64_t)v54);
  uint64_t v75 = v165;
  if (v78)
  {
    (*(void (**)(uint64_t, char *))(v145 + 8))(v77, v54);
LABEL_19:
    sub_1001781AC(v72, &qword_100EA2448);
    uint64_t v76 = v162;
LABEL_21:
    sub_100163AEC();
    sub_100162C3C((uint64_t)&v177);
    swift_endAccess();
    sub_1001A19AC((uint64_t)v57);
    uint64_t v83 = sub_10019F4E0();
    v84(v83);
    uint64_t v85 = sub_10017ABC8();
    v86(v85);
    type metadata accessor for ConfiguredUnitsAction();
    sub_1001092B4();
    type metadata accessor for EnvironmentAction();
    sub_10019DA7C();
    sub_1001821FC();
    uint64_t v47 = v174;
    sub_1001819A4();
    v71();
    uint64_t v75 = v165;
    sub_10017EB78();
    sub_1001807F8();
    sub_1001781AC((uint64_t)v175, (uint64_t *)&unk_100EA01F0);
    sub_1001ABE70(v42);
    swift_release();
    goto LABEL_22;
  }
  uint64_t v79 = v145;
  uint64_t v80 = v142[0];
  sub_1001627D4();
  v81();
  sub_100128E24(&qword_100E9B150, (void (*)(uint64_t))&type metadata accessor for UnitConfiguration.Distance);
  LODWORD(v154) = dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t v82 = *(void (**)(uint64_t, char *))(v79 + 8);
  uint64_t v57 = (char *)(v79 + 8);
  v82(v80, v54);
  v82(v77, v54);
  sub_1001781AC(v72, &qword_100E77758);
  uint64_t v76 = v162;
  if ((v154 & 1) == 0) {
    goto LABEL_21;
  }
LABEL_22:
  static UnitManager.standard.getter();
  uint64_t v87 = v168;
  UnitManager.preferredPressureUnit.getter();
  swift_release();
  uint64_t v88 = (void (*)(void))(v47 + OBJC_IVAR____TtC7Weather15SettingsMonitor_lastPressureConfiguration);
  sub_100185DF0();
  sub_1001653A0();
  uint64_t v90 = v76 + v89;
  sub_1001262FC(v87, v76, &qword_100E77768);
  sub_1001A3548();
  uint64_t v91 = v156;
  sub_10012B520(v76, 1, v156);
  if (v78)
  {
    sub_10012B520(v90, 1, v91);
    if (v78)
    {
      sub_1001781AC(v76, &qword_100E77768);
      goto LABEL_32;
    }
  }
  else
  {
    uint64_t v92 = v146;
    sub_1001262FC(v76, v146, &qword_100E77768);
    int v93 = _s7Weather24LocationCompositionStateOwet_0(v90, 1, v91);
    if (v93 != 1)
    {
      uint64_t v94 = v147;
      sub_1001627D4();
      v95();
      sub_100128E24(&qword_100E9B140, (void (*)(uint64_t))&type metadata accessor for UnitConfiguration.Pressure);
      char v96 = dispatch thunk of static Equatable.== infix(_:_:)();
      uint64_t v97 = *(void (**)(void))(v94 + 8);
      sub_1001829C8();
      v97();
      sub_1001829C8();
      v97();
      sub_1001781AC(v162, &qword_100E77768);
      if (v96) {
        goto LABEL_32;
      }
      goto LABEL_31;
    }
    (*(void (**)(uint64_t, uint64_t))(v147 + 8))(v92, v91);
  }
  sub_1001781AC(v76, &qword_100EA2440);
LABEL_31:
  sub_100163AEC();
  sub_100162C3C((uint64_t)&v178);
  swift_endAccess();
  sub_1001A19AC(v91);
  uint64_t v98 = sub_10019F4E0();
  v99(v98);
  uint64_t v100 = sub_10017ABC8();
  v101(v100);
  type metadata accessor for ConfiguredUnitsAction();
  sub_1001092B4();
  type metadata accessor for EnvironmentAction();
  sub_10019DA7C();
  sub_1001821FC();
  uint64_t v47 = v174;
  sub_1001819A4();
  v88();
  uint64_t v75 = v165;
  sub_10017EB78();
  sub_1001807F8();
  sub_1001781AC((uint64_t)v175, (uint64_t *)&unk_100EA01F0);
  sub_1001ABE70(v42);
  swift_release();
LABEL_32:
  static UnitManager.standard.getter();
  uint64_t v102 = v169;
  UnitManager.preferredPrecipitationUnit.getter();
  swift_release();
  uint64_t v103 = (void (*)(void))(v47 + OBJC_IVAR____TtC7Weather15SettingsMonitor_lastPrecipitationConfiguration);
  sub_100185DF0();
  sub_1001653A0();
  uint64_t v105 = v75 + v104;
  sub_1001262FC(v102, v75, &qword_100E77760);
  sub_1001A3548();
  uint64_t v106 = v158;
  sub_10012B520(v75, 1, v158);
  if (v78)
  {
    sub_10012B520(v105, 1, v106);
    if (v78)
    {
      sub_1001781AC(v75, &qword_100E77760);
      uint64_t v107 = v174;
      goto LABEL_43;
    }
    goto LABEL_40;
  }
  uint64_t v108 = v148;
  sub_1001262FC(v75, v148, &qword_100E77760);
  sub_10012B520(v105, 1, v106);
  if (v109)
  {
    (*(void (**)(uint64_t, uint64_t))(v149 + 8))(v108, v106);
LABEL_40:
    sub_1001781AC(v75, &qword_100EA2438);
    uint64_t v107 = v174;
LABEL_42:
    sub_100163AEC();
    uint64_t v114 = v169;
    sub_100931C98(v169, (uint64_t)v103, &qword_100E77760);
    swift_endAccess();
    sub_1001A19AC(v114);
    uint64_t v115 = sub_10019F4E0();
    v116(v115);
    uint64_t v117 = sub_10017ABC8();
    v118(v117);
    type metadata accessor for ConfiguredUnitsAction();
    sub_1001092B4();
    type metadata accessor for EnvironmentAction();
    sub_10019DA7C();
    sub_1001821FC();
    sub_1001819A4();
    v103();
    sub_10017EB78();
    sub_1001807F8();
    sub_1001781AC((uint64_t)v175, (uint64_t *)&unk_100EA01F0);
    sub_1001ABE70(v42);
    swift_release();
    goto LABEL_43;
  }
  uint64_t v107 = v47;
  uint64_t v110 = v149;
  sub_1001627D4();
  v111();
  sub_100128E24(&qword_100E9B148, (void (*)(uint64_t))&type metadata accessor for UnitConfiguration.Precipitation);
  char v112 = dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t v113 = *(void (**)(void))(v110 + 8);
  sub_10016285C();
  v113();
  sub_10016285C();
  v113();
  sub_1001781AC(v75, &qword_100E77760);
  if ((v112 & 1) == 0) {
    goto LABEL_42;
  }
LABEL_43:
  static UnitManager.standard.getter();
  uint64_t v119 = v164;
  UnitManager.preferredWindUnit.getter();
  swift_release();
  uint64_t v120 = v107 + OBJC_IVAR____TtC7Weather15SettingsMonitor_lastWindSpeedConfiguration;
  sub_100185DF0();
  sub_1001653A0();
  uint64_t v121 = v160;
  uint64_t v123 = v160 + v122;
  sub_1001262FC(v119, v160, qword_100E77770);
  sub_1001A3548();
  uint64_t v124 = v161;
  sub_10012B520(v121, 1, v161);
  if (v78)
  {
    sub_10012B520(v123, 1, v124);
    if (!v78) {
      goto LABEL_50;
    }
    sub_1001781AC(v121, qword_100E77770);
  }
  else
  {
    uint64_t v125 = v150;
    sub_1001262FC(v121, v150, qword_100E77770);
    int v126 = _s7Weather24LocationCompositionStateOwet_0(v123, 1, v124);
    if (v126 == 1)
    {
      (*(void (**)(uint64_t, uint64_t))(v151 + 8))(v125, v124);
LABEL_50:
      sub_1001781AC(v121, &qword_100EA2430);
      uint64_t v127 = v174;
LABEL_53:
      sub_100163AEC();
      uint64_t v133 = v164;
      sub_100931C98(v164, v120, qword_100E77770);
      swift_endAccess();
      uint64_t v134 = *(uint64_t (**)(uint64_t))(v127 + 16);
      sub_1001262FC(v133, v171, qword_100E77770);
      uint64_t v135 = v172;
      uint64_t v136 = sub_10019F4E0();
      v137(v136);
      uint64_t v138 = sub_10017ABC8();
      v139(v138);
      type metadata accessor for ConfiguredUnitsAction();
      sub_1001092B4();
      type metadata accessor for EnvironmentAction();
      sub_10019DA7C();
      uint64_t v140 = *(void (**)(void))(v135 + 8);
      swift_retain();
      sub_1001829C8();
      v140();
      sub_10017EB78();
      uint64_t v176 = 0;
      memset(v175, 0, sizeof(v175));
      sub_1001AAF58(v42, (uint64_t)v175, v134);
      sub_1001781AC((uint64_t)v175, (uint64_t *)&unk_100EA01F0);
      sub_1001ABE70(v42);
      swift_release();
      uint64_t v132 = v133;
      goto LABEL_54;
    }
    uint64_t v128 = v151;
    sub_1001627D4();
    v129();
    sub_100128E24(&qword_100E9B138, (void (*)(uint64_t))&type metadata accessor for UnitConfiguration.WindSpeed);
    char v130 = dispatch thunk of static Equatable.== infix(_:_:)();
    uint64_t v131 = *(void (**)(void))(v128 + 8);
    sub_1001819A4();
    v131();
    sub_1001819A4();
    v131();
    sub_1001781AC(v121, qword_100E77770);
    uint64_t v127 = v174;
    if ((v130 & 1) == 0) {
      goto LABEL_53;
    }
  }
  uint64_t v132 = v164;
LABEL_54:
  sub_1001781AC(v132, qword_100E77770);
  sub_1001781AC(v169, &qword_100E77760);
  sub_1001781AC(v168, &qword_100E77768);
  sub_1001781AC(v167, &qword_100E77758);
  return sub_1001781AC((uint64_t)v163, &qword_100E6F620);
}

uint64_t initializeWithCopy for DetermineCompactGridLayoutModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 24);
  uint64_t v8 = *(void *)(a2 + 32);
  uint64_t v9 = *(void *)(a2 + 40);
  uint64_t v10 = *(void *)(a2 + 48);
  uint64_t v11 = *(void *)(a2 + 56);
  uint64_t v14 = *(void *)(a2 + 64);
  char v15 = *(unsigned char *)(a2 + 72);
  sub_1001910C8(*(void *)a2, v5, v6, v7, v8, v9, v10, v11, v14, v15);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(void *)(a1 + 32) = v8;
  *(void *)(a1 + 40) = v9;
  *(void *)(a1 + 48) = v10;
  *(void *)(a1 + 56) = v11;
  *(void *)(a1 + 64) = v14;
  *(unsigned char *)(a1 + 72) = v15;
  uint64_t v12 = *(void *)(v2 + 80);
  LOBYTE(v2) = *(unsigned char *)(v2 + 88);
  sub_100195B7C(v12, v2);
  *(void *)(a1 + 80) = v12;
  *(unsigned char *)(a1 + 88) = v2;
  return a1;
}

void sub_1000A8088()
{
  sub_10016314C();
  uint64_t v26 = v1;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v36 = v8(0);
  sub_100179C0C();
  uint64_t v10 = v9;
  __chkstk_darwin(v11);
  uint64_t v35 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001626D4();
  __chkstk_darwin(v13);
  char v15 = (char *)&v25 - v14;
  uint64_t v37 = (char *)_swiftEmptyArrayStorage;
  uint64_t v34 = *(void *)(v3 + 16);
  if (v34)
  {
    unint64_t v16 = 0;
    uint64_t v29 = v3;
    uint64_t v30 = (void (**)(char *, uint64_t))(v10 + 8);
    uint64_t v32 = (void (**)(char *, char *, uint64_t))(v10 + 32);
    uint64_t v33 = v10 + 16;
    uint64_t v27 = v7;
    uint64_t v28 = v5;
    while (v16 < *(void *)(v3 + 16))
    {
      unint64_t v17 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
      uint64_t v18 = *(void *)(v10 + 72);
      sub_10008B8B4();
      v19();
      sub_1001826B4();
      char v20 = v7();
      if (v0)
      {
        sub_100162F0C();
        v24();
        swift_bridgeObjectRelease();
        swift_release();
        goto LABEL_16;
      }
      if (v20)
      {
        uint64_t v31 = *v32;
        v31(v35, v15, v36);
        uint64_t v21 = v37;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          uint64_t v22 = sub_100185790();
          ((void (*)(uint64_t))v26)(v22);
          uint64_t v21 = v37;
        }
        unint64_t v23 = *((void *)v21 + 2);
        if (v23 >= *((void *)v21 + 3) >> 1)
        {
          sub_10019AF0C();
          v26();
          uint64_t v21 = v37;
        }
        *((void *)v21 + 2) = v23 + 1;
        v31(&v21[v17 + v23 * v18], v35, v36);
        uint64_t v37 = v21;
        uint64_t v3 = v29;
        uint64_t v7 = v27;
      }
      else
      {
        (*v30)(v15, v36);
      }
      if (v34 == ++v16) {
        goto LABEL_15;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_15:
    swift_bridgeObjectRelease();
LABEL_16:
    sub_100191138();
    sub_100163164();
  }
}

BOOL sub_1000A82E4()
{
  return sub_1000A8304();
}

BOOL sub_1000A8304()
{
  return (dispatch thunk of static Equatable.== infix(_:_:)() & 1) == 0;
}

void sub_1000A8368()
{
  sub_10018A6B4();
  *uint64_t v0 = v1;
}

void *sub_1000A83CC(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  uint64_t v6 = *(int *)(sub_10017DF08(&qword_100E8D8D0) + 32);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for Location.Identifier();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  *(void *)((char *)a1 + a3[5]) = *(void *)((char *)a2 + a3[5]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    uint64_t v10 = a3[6];
    uint64_t v11 = (void *)((char *)a1 + v10);
    uint64_t v12 = (void *)((char *)a2 + v10);
    sub_10017DF4C((uint64_t)a1 + v10, (uint64_t *)&unk_100EAA560);
    sub_10017DF08((uint64_t *)&unk_100EAA560);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v13 = type metadata accessor for UserInterfaceSizeClass();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v12, 1, v13))
      {
        uint64_t v14 = sub_10017DF08(&qword_100E65ED8);
        memcpy(v11, v12, *(void *)(*(void *)(v14 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v11, 0, 1, v13);
      }
    }
    else
    {
      *uint64_t v11 = *v12;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v15 = a3[7];
  unint64_t v16 = (char *)a1 + v15;
  unint64_t v17 = (char *)a2 + v15;
  uint64_t v18 = *(void *)v17;
  LOBYTE(v17) = v17[8];
  *(void *)unint64_t v16 = v18;
  v16[8] = (char)v17;
  swift_retain();
  swift_release();
  return a1;
}

char *sub_1000A85E8(uint64_t a1, uint64_t a2)
{
  uint64_t v38 = type metadata accessor for Location.Identifier();
  uint64_t v5 = *(void *)(v38 - 8);
  __chkstk_darwin(v38);
  uint64_t v7 = (char *)v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10017DF08((uint64_t *)&unk_100E667C0);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for LocationData();
  uint64_t v12 = __chkstk_darwin(v11);
  uint64_t v37 = (char *)v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v32 = (char *)v30 - v15;
  uint64_t v16 = *(void *)(a1 + 16);
  if (v16)
  {
    _OWORD v30[2] = v2;
    uint64_t v17 = v14;
    uint64_t v18 = *(void *)(type metadata accessor for SavedLocation() - 8);
    uint64_t v19 = a2;
    uint64_t v20 = a1 + ((*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80));
    uint64_t v39 = v19;
    uint64_t v35 = (void (**)(char *, uint64_t))(v5 + 8);
    uint64_t v36 = (void *)(v19 + 96);
    uint64_t v31 = v17;
    uint64_t v34 = (void (**)(char *, char *, uint64_t))(v17 + 32);
    uint64_t v33 = *(void *)(v18 + 72);
    v30[1] = a1;
    swift_bridgeObjectRetain();
    uint64_t v21 = (char *)_swiftEmptyArrayStorage;
    do
    {
      SavedLocation.identifier.getter();
      sub_1001B1E64(v36, *(void *)(v39 + 120));
      if (dispatch thunk of LocationPrivacySamplerType.canRecordLocation(_:)())
      {
        Location.Identifier.coordinate.getter();
        Location.Identifier.coordinate.getter();
        LocationData.init(latitudeDouble:longitudeDouble:)();
        uint64_t v22 = 0;
      }
      else
      {
        uint64_t v22 = 1;
      }
      (*v35)(v7, v38);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v10, v22, 1, v11);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v10, 1, v11) == 1)
      {
        sub_1000A8A08((uint64_t)v10);
      }
      else
      {
        unint64_t v23 = *v34;
        uint64_t v24 = v32;
        (*v34)(v32, v10, v11);
        v23(v37, v24, v11);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v21 = (char *)sub_1000A8A68(0, *((void *)v21 + 2) + 1, 1, (uint64_t)v21);
        }
        unint64_t v26 = *((void *)v21 + 2);
        unint64_t v25 = *((void *)v21 + 3);
        uint64_t v27 = v31;
        if (v26 >= v25 >> 1)
        {
          uint64_t v28 = sub_1000A8A68(v25 > 1, v26 + 1, 1, (uint64_t)v21);
          uint64_t v27 = v31;
          uint64_t v21 = (char *)v28;
        }
        *((void *)v21 + 2) = v26 + 1;
        v23(&v21[((*(unsigned __int8 *)(v27 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80))+ *(void *)(v27 + 72) * v26], v37, v11);
      }
      v20 += v33;
      --v16;
    }
    while (v16);
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_release();
    return (char *)_swiftEmptyArrayStorage;
  }
  return v21;
}

uint64_t sub_1000A8A08(uint64_t a1)
{
  uint64_t v2 = sub_10017DF08((uint64_t *)&unk_100E667C0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1000A8A68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10018ACAC(a1, a2, a3, a4, (uint64_t)&unk_100E96FD8, (uint64_t (*)(void))&type metadata accessor for LocationData, (void (*)(void))&type metadata accessor for LocationData);
}

uint64_t sub_1000A8AB0()
{
  type metadata accessor for Scope();
  sub_100179C0C();
  uint64_t v1 = v0;
  __chkstk_darwin(v2);
  ProxyContainer.public.getter();
  sub_10017DF08(&qword_100E8DCB8);
  sub_100179D0C();
  swift_release();
  swift_release();
  ProxyContainer.public.getter();
  sub_10017DF08(&qword_100E8DCC0);
  sub_100179D0C();
  swift_release();
  swift_release();
  ProxyContainer.public.getter();
  sub_10017DF08(&qword_100E8DCC8);
  sub_100179D0C();
  swift_release();
  swift_release();
  ProxyContainer.public.getter();
  sub_10017DF08(&qword_100E8DCD0);
  sub_100179D0C();
  swift_release();
  swift_release();
  ProxyContainer.public.getter();
  sub_10017DF08(&qword_100E8DCD8);
  sub_100179D0C();
  swift_release();
  swift_release();
  ProxyContainer.public.getter();
  sub_100162708();
  type metadata accessor for WeatherForecastDescriptionStringBuilder();
  sub_1001A0D00();
  swift_release();
  swift_release();
  ProxyContainer.public.getter();
  sub_10017DF08(&qword_100E8DCE0);
  sub_100179D0C();
  swift_release();
  swift_release();
  ProxyContainer.public.getter();
  sub_10017DF08(&qword_100E7C0D8);
  sub_100179D0C();
  swift_release();
  swift_release();
  ProxyContainer.public.getter();
  sub_10017DF08(&qword_100E8DCE8);
  sub_1001A0D00();
  swift_release();
  swift_release();
  ProxyContainer.public.getter();
  sub_10017DF08(&qword_100E8DCF0);
  sub_100179D0C();
  swift_release();
  swift_release();
  ProxyContainer.public.getter();
  sub_10017DF08(&qword_100E8DCF8);
  sub_100179D0C();
  swift_release();
  swift_release();
  ProxyContainer.public.getter();
  sub_10017DF08(&qword_100E8DD00);
  sub_100179D0C();
  swift_release();
  swift_release();
  ProxyContainer.public.getter();
  sub_10017DF08(&qword_100E647D0);
  sub_100179D0C();
  swift_release();
  swift_release();
  ProxyContainer.public.getter();
  sub_10017DF08(&qword_100E8DD08);
  sub_100179D0C();
  swift_release();
  swift_release();
  ProxyContainer.public.getter();
  sub_10017DF08(&qword_100E8DD10);
  sub_100179D0C();
  swift_release();
  swift_release();
  ProxyContainer.public.getter();
  sub_10017DF08(&qword_100E8DD18);
  sub_100179D0C();
  swift_release();
  swift_release();
  ProxyContainer.public.getter();
  sub_10017DF08(&qword_100E8DD20);
  sub_100179D0C();
  swift_release();
  swift_release();
  ProxyContainer.public.getter();
  sub_10017DF08(&qword_100E8DD28);
  sub_100179D0C();
  swift_release();
  swift_release();
  ProxyContainer.public.getter();
  sub_10017DF08(&qword_100E8DD30);
  sub_100179D0C();
  swift_release();
  swift_release();
  ProxyContainer.public.getter();
  sub_100162708();
  type metadata accessor for TipCoordinator();
  sub_1001A0D00();
  swift_release();
  uint64_t v3 = *(void (**)(uint64_t))(v1 + 104);
  uint64_t v4 = sub_1001800D0();
  v3(v4);
  Definition.inScope(_:)();
  swift_release();
  swift_release();
  uint64_t v5 = *(void (**)(uint64_t))(v1 + 8);
  uint64_t v6 = sub_10017D22C();
  v5(v6);
  ProxyContainer.public.getter();
  sub_100162708();
  type metadata accessor for Tracker();
  sub_1001A0D00();
  swift_release();
  uint64_t v7 = sub_1001800D0();
  v3(v7);
  Definition.inScope(_:)();
  swift_release();
  swift_release();
  uint64_t v8 = sub_10017D22C();
  v5(v8);
  ProxyContainer.private.getter();
  RegistrationContainer.lazy(block:)();
  return swift_release();
}

uint64_t sub_1000A9104()
{
  return sub_1000A911C();
}

uint64_t sub_1000A911C()
{
  uint64_t v1 = type metadata accessor for Location();
  sub_100164920(v1);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v5 = (*(void *)(v4 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v6 = type metadata accessor for TimeState();
  sub_100164920(v6);
  unint64_t v8 = (v5 + *(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v10 = *(void *)(v9 + 64);
  uint64_t v11 = type metadata accessor for AppConfiguration();
  sub_100164920(v11);
  unint64_t v13 = (v8 + v10 + *(unsigned __int8 *)(v12 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  return sub_1001B7C04(v0 + v3, *(void *)(v0 + v5), *(void *)(v0 + v5 + 8), *(void *)(v0 + v5 + 16), *(uint64_t (**)(uint64_t))(v0 + v5 + 24), v0 + v8, (uint64_t (*)())(v0 + v13), *(unsigned __int8 *)(v0 + v13 + *(void *)(v14 + 64)), *(unsigned char *)(v0 + v13 + *(void *)(v14 + 64) + 1), *(void *)(v0 + ((v13 + *(void *)(v14 + 64) + 9) & 0xFFFFFFFFFFFFFFF8)));
}

void *sub_1000A9244(void *a1, void *a2, uint64_t a3)
{
  unint64_t v6 = (unint64_t)a2 + 15;
  *a1 = *a2;
  unint64_t v7 = (unint64_t)a1 + 15;
  swift_retain();
  swift_release();
  unint64_t v8 = v7 & 0xFFFFFFFFFFFFFFF8;
  v6 &= 0xFFFFFFFFFFFFFFF8;
  *(void *)(v7 & 0xFFFFFFFFFFFFFFF8) = *(void *)v6;
  swift_retain();
  swift_release();
  uint64_t v9 = *(void *)(a3 + 24);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = v10;
  int v12 = *(_DWORD *)(v10 + 80);
  uint64_t v13 = v12;
  uint64_t v14 = v12 + 8;
  unint64_t v90 = ~(unint64_t)v12;
  unint64_t v15 = (v14 + v8) & v90;
  uint64_t v16 = *(void (**)(unint64_t, unint64_t, uint64_t))(v10 + 24);
  v16(v15, (v14 + v6) & v90, v9);
  uint64_t v17 = *(void *)(v10 + 64);
  uint64_t v18 = ((v13 + 16) & ~v13) + v17 + (v13 | 7);
  uint64_t v89 = a1;
  uint64_t v19 = ((unint64_t)a1 + v18) & ~(v12 | 7);
  uint64_t v20 = ((unint64_t)a2 + v18) & ~(v12 | 7);
  uint64_t v91 = v9;
  uint64_t v82 = v16;
  v16(v19, v20, v9);
  *(void *)((v17 + 7 + v19) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v17 + 7 + v20) & 0xFFFFFFFFFFFFFFF8);
  swift_retain();
  swift_release();
  unint64_t v21 = ((v17 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  uint64_t v22 = (void *)(v19 + v21);
  uint64_t v23 = v20 + v21 + 15;
  *uint64_t v22 = *(void *)(v20 + v21);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v24 = (void *)(((unint64_t)v22 + 15) & 0xFFFFFFFFFFFFFFF8);
  v23 &= 0xFFFFFFFFFFFFFFF8;
  *uint64_t v24 = *(void *)v23;
  swift_retain();
  swift_release();
  v24[1] = *(void *)(v23 + 8);
  unint64_t v25 = (void *)(((unint64_t)v24 + 23) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v26 = (void *)((v23 + 23) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v25 = *v26;
  swift_retain();
  swift_release();
  unint64_t v27 = ((unint64_t)v25 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v28 = ((unint64_t)v26 + 15) & 0xFFFFFFFFFFFFFFF8;
  *(unsigned char *)unint64_t v27 = *(unsigned char *)v28;
  *(void *)(v27 + 8) = *(void *)(v28 + 8);
  swift_retain();
  swift_release();
  unint64_t v29 = (v27 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v30 = (v28 + 23) & 0xFFFFFFFFFFFFFFF8;
  *(unsigned char *)unint64_t v29 = *(unsigned char *)v30;
  *(void *)(v29 + 8) = *(void *)(v30 + 8);
  swift_retain();
  swift_release();
  uint64_t v31 = *(void *)(a3 + 16);
  uint64_t v32 = *(void *)(v31 - 8);
  uint64_t v33 = *(unsigned __int8 *)(v32 + 80) | v12;
  unint64_t v34 = (*(unsigned char *)(v32 + 80) | v12) & 0xF8 ^ 0xFFFFFFFFFFFFFFF8;
  uint64_t v35 = (v33 + 16 + v29) & v34;
  uint64_t v36 = (v33 + 16 + v30) & v34;
  uint64_t v37 = *(unsigned int *)(v32 + 84);
  uint64_t v85 = v11;
  uint64_t v38 = *(unsigned int *)(v11 + 84);
  uint64_t v39 = *(void *)(v32 + 64) + v12;
  uint64_t v40 = (v39 & ~v13) + v17;
  uint64_t v41 = ~v33;
  uint64_t v42 = v40 + v33;
  uint64_t v43 = (v40 + v33) & ~v33;
  v40 += 7;
  unint64_t v94 = (v40 + v43) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v44 = v94 + 8;
  int v92 = v38 | v37;
  uint64_t v84 = v40;
  uint64_t v87 = v42;
  uint64_t v88 = v41;
  if (v38 | v37)
  {
    if (v37 >= v38)
    {
      int v49 = _s7Weather24LocationCompositionStateOwet_0(v35, v37, v31);
      int v46 = _s7Weather24LocationCompositionStateOwet_0(v36, v37, v31);
      if (v49)
      {
LABEL_4:
        if (!v46) {
          goto LABEL_30;
        }
LABEL_26:
        unint64_t v59 = v94;
        int v60 = v92;
        if (v92) {
          size_t v61 = v94 + 8;
        }
        else {
          size_t v61 = v94 + 9;
        }
        memcpy((void *)v35, (const void *)v36, v61);
        uint64_t v58 = v89;
        goto LABEL_32;
      }
    }
    else
    {
      int v45 = _s7Weather24LocationCompositionStateOwet_0((v39 + v35) & v90, v38, v91);
      int v46 = _s7Weather24LocationCompositionStateOwet_0((v39 + v36) & v90, v38, v91);
      if (v45) {
        goto LABEL_4;
      }
    }
    if (!v46)
    {
LABEL_23:
      int v86 = *(void (**)(uint64_t, uint64_t, uint64_t))(v32 + 24);
      v86(v35, v36, v31);
      v82((v39 + v35) & v90, (v39 + v36) & v90, v91);
      uint64_t v56 = (v87 + v35) & v88;
      uint64_t v57 = (v87 + v36) & v88;
      v86(v56, v57, v31);
      v82((v39 + v56) & v90, (v39 + v57) & v90, v91);
      *(void *)((v84 + v56) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v84 + v57) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v58 = v89;
      unint64_t v59 = v94;
      int v60 = v92;
      goto LABEL_32;
    }
LABEL_22:
    uint64_t v54 = *(void (**)(uint64_t, uint64_t))(v32 + 8);
    v54(v35, v31);
    uint64_t v55 = *(void (**)(unint64_t, uint64_t))(v85 + 8);
    v55((v39 + v35) & v90, v91);
    v54((v87 + v35) & v88, v31);
    v55((v39 + ((v87 + v35) & v88)) & v90, v91);
    goto LABEL_26;
  }
  if (!*(unsigned char *)(v35 + v44)
    || ((int v47 = *(unsigned __int8 *)(v35 + v44) - 1, v94 == -8) ? (v48 = 0) : (int v47 = 0, v48 = *(_DWORD *)v35),
        (v48 | v47) == 0xFFFFFFFF))
  {
    if (!*(unsigned char *)(v36 + v44)) {
      goto LABEL_23;
    }
    int v52 = *(unsigned __int8 *)(v36 + v44) - 1;
    if (v94 == -8)
    {
      int v53 = 0;
    }
    else
    {
      int v52 = 0;
      int v53 = *(_DWORD *)v36;
    }
    if ((v53 | v52) == 0xFFFFFFFF) {
      goto LABEL_23;
    }
    goto LABEL_22;
  }
  if (*(unsigned char *)(v36 + v44))
  {
    int v50 = *(unsigned __int8 *)(v36 + v44) - 1;
    if (v94 == -8)
    {
      int v51 = 0;
    }
    else
    {
      int v50 = 0;
      int v51 = *(_DWORD *)v36;
    }
    if ((v51 | v50) != 0xFFFFFFFF) {
      goto LABEL_26;
    }
  }
LABEL_30:
  uint64_t v83 = *(void (**)(uint64_t, uint64_t, uint64_t))(v32 + 16);
  v83(v35, v36, v31);
  uint64_t v62 = *(void (**)(unint64_t, unint64_t, uint64_t))(v85 + 16);
  v62((v39 + v35) & v90, (v39 + v36) & v90, v91);
  uint64_t v63 = (v87 + v35) & v88;
  uint64_t v64 = (v87 + v36) & v88;
  v83(v63, v64, v31);
  v62((v39 + v63) & v90, (v39 + v64) & v90, v91);
  *(void *)((v84 + v63) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v84 + v64) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v58 = v89;
  unint64_t v59 = v94;
  int v60 = v92;
  if (!v92) {
    *(unsigned char *)(v35 + v44) = 0;
  }
LABEL_32:
  if (v60) {
    unint64_t v65 = v94 + 8;
  }
  else {
    unint64_t v65 = v59 + 9;
  }
  *(void *)(((v35 | 7) + v65) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((v36 | 7) + v65) & 0xFFFFFFFFFFFFFFF8);
  swift_retain();
  swift_release();
  unint64_t v66 = ((v65 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  unint64_t v67 = v66 + v35;
  unint64_t v68 = v66 + v36;
  *(void *)unint64_t v67 = *(void *)v68;
  *(void *)(v67 + 8) = *(void *)(v68 + 8);
  swift_retain();
  swift_release();
  *(unsigned char *)(v67 + 16) = *(unsigned char *)(v68 + 16);
  uint64_t v69 = *(void *)(v68 + 24);
  char v70 = *(unsigned char *)(v68 + 32);
  sub_100195B7C(v69, v70);
  uint64_t v71 = *(void *)(v67 + 24);
  char v72 = *(unsigned char *)(v67 + 32);
  *(void *)(v67 + 24) = v69;
  *(unsigned char *)(v67 + 32) = v70;
  sub_10018F6D8(v71, v72);
  uint64_t v73 = *(void *)(v68 + 40);
  char v74 = *(unsigned char *)(v68 + 48);
  sub_100195B7C(v73, v74);
  uint64_t v75 = *(void *)(v67 + 40);
  char v76 = *(unsigned char *)(v67 + 48);
  *(void *)(v67 + 40) = v73;
  *(unsigned char *)(v67 + 48) = v74;
  sub_10018F6D8(v75, v76);
  uint64_t v77 = *(void *)(v68 + 56);
  char v78 = *(unsigned char *)(v68 + 64);
  sub_100195B7C(v77, v78);
  uint64_t v79 = *(void *)(v67 + 56);
  char v80 = *(unsigned char *)(v67 + 64);
  *(void *)(v67 + 56) = v77;
  *(unsigned char *)(v67 + 64) = v78;
  sub_10018F6D8(v79, v80);
  return v58;
}

void *sub_1000A99A4(void *a1, const void *a2)
{
  uint64_t v4 = type metadata accessor for Location.Identifier();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 2, v4))
  {
    uint64_t v5 = type metadata accessor for WeatherActivity();
    memcpy(a1, a2, *(void *)(*(void *)(v5 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 2, v4);
  }
  return a1;
}

void sub_1000A9A68()
{
  sub_100127598();
  uint64_t v2 = v0;
  if (v0 != v1)
  {
    uint64_t v3 = v1;
    sub_10017DF4C(v0, &qword_100E829F0);
    sub_10017DF08(&qword_100E829F0);
    if (sub_10012987C() == 1)
    {
      type metadata accessor for LocationComponentHeaderViewModel(0);
      switch(sub_1005EFEB8())
      {
        case 1u:
          sub_10018B07C();
          *(unsigned char *)(v2 + 64) = *(unsigned char *)(v3 + 64);
          *(void *)(v2 + 72) = *(void *)(v3 + 72);
          *(void *)(v2 + 80) = *(void *)(v3 + 80);
          *(unsigned char *)(v2 + 88) = *(unsigned char *)(v3 + 88);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_1005EFE3C();
          break;
        case 2u:
          sub_10018B07C();
          *(void *)(v2 + 64) = *(void *)(v3 + 64);
          *(void *)(v2 + 72) = *(void *)(v3 + 72);
          *(void *)(v2 + 80) = *(void *)(v3 + 80);
          *(void *)(v2 + 88) = *(void *)(v3 + 88);
          *(unsigned char *)(v2 + 96) = *(unsigned char *)(v3 + 96);
          *(void *)(v2 + 104) = *(void *)(v3 + 104);
          *(void *)(v2 + 112) = *(void *)(v3 + 112);
          *(unsigned char *)(v2 + 120) = *(unsigned char *)(v3 + 120);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_100119454();
          break;
        case 3u:
          type metadata accessor for WeatherDescription();
          sub_100162E4C();
          sub_100119108();
          v4();
          uint64_t v5 = type metadata accessor for LocationComponentHeaderViewModel.Description(0);
          uint64_t v6 = *(int *)(v5 + 20);
          uint64_t v7 = v2 + v6;
          *(void *)uint64_t v7 = *(void *)(v3 + v6);
          *(void *)(v7 + 8) = *(void *)(v3 + v6 + 8);
          *(void *)(v7 + 16) = *(void *)(v3 + v6 + 16);
          *(void *)(v7 + 24) = *(void *)(v3 + v6 + 24);
          *(unsigned char *)(v7 + 32) = *(unsigned char *)(v3 + v6 + 32);
          *(void *)(v7 + 40) = *(void *)(v3 + v6 + 40);
          *(void *)(v7 + 48) = *(void *)(v3 + v6 + 48);
          *(unsigned char *)(v2 + *(int *)(v5 + 24)) = *(unsigned char *)(v3 + *(int *)(v5 + 24));
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_1005EFE2C();
          break;
        case 4u:
          sub_1001834DC();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_1005EFE4C();
          break;
        case 5u:
          *(void *)uint64_t v2 = *(void *)v3;
          *(void *)(v2 + 8) = *(void *)(v3 + 8);
          *(void *)(v2 + 16) = *(void *)(v3 + 16);
          *(void *)(v2 + 24) = *(void *)(v3 + 24);
          *(void *)(v2 + 32) = *(void *)(v3 + 32);
          *(void *)(v2 + 40) = *(void *)(v3 + 40);
          *(void *)(v2 + 48) = *(void *)(v3 + 48);
          *(void *)(v2 + 56) = *(void *)(v3 + 56);
          *(void *)(v2 + 64) = *(void *)(v3 + 64);
          *(void *)(v2 + 72) = *(void *)(v3 + 72);
          *(void *)(v2 + 80) = *(void *)(v3 + 80);
          *(void *)(v2 + 88) = *(void *)(v3 + 88);
          *(void *)(v2 + 96) = *(void *)(v3 + 96);
          *(unsigned char *)(v2 + 104) = *(unsigned char *)(v3 + 104);
          *(void *)(v2 + 112) = *(void *)(v3 + 112);
          *(void *)(v2 + 120) = *(void *)(v3 + 120);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_1005EFE1C();
          break;
        default:
          sub_1001834DC();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_100214E90();
          break;
      }
      swift_storeEnumTagMultiPayload();
      unint64_t v8 = (int *)type metadata accessor for LocationComponentHeaderMetrics(0);
      *(void *)(v2 + v8[5]) = *(void *)(v3 + v8[5]);
      *(void *)(v2 + v8[6]) = *(void *)(v3 + v8[6]);
      uint64_t v9 = v8[7];
      uint64_t v10 = v2 + v9;
      uint64_t v11 = v3 + v9;
      char v12 = *(unsigned char *)(v11 + 8);
      *(void *)uint64_t v10 = *(void *)v11;
      *(unsigned char *)(v10 + 8) = v12;
      *(unsigned char *)(v2 + v8[8]) = *(unsigned char *)(v3 + v8[8]);
    }
    else
    {
      *(void *)uint64_t v2 = *(void *)v3;
      swift_retain();
      sub_100184EBC();
    }
    swift_storeEnumTagMultiPayload();
  }
  sub_100166A98();
}

uint64_t sub_1000A9E24()
{
  return type metadata accessor for Date();
}

uint64_t sub_1000A9E60(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 - 416);
  uint64_t v4 = *(void (**)(void))(v1 - 248);
  return sub_100178CEC(a1, v3, v4);
}

uint64_t sub_1000A9EAC()
{
  return Array<A>.write(to:)();
}

uint64_t sub_1000A9ED4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_release();
}

uint64_t sub_1000A9F3C(uint64_t result)
{
  uint64_t v2 = (uint64_t (*)(uint64_t))result;
  if ((*(double *)(v1 + 16) > 0.0 || *(double *)(v1 + 24) > 0.0) && *(unsigned char *)(v1 + 32) == 1)
  {
    uint64_t v3 = sub_1000AA278();
    return v2(v3);
  }
  return result;
}

uint64_t sub_1000A9FA4()
{
  type metadata accessor for DispatchPredicate();
  sub_100179C0C();
  __chkstk_darwin(v1);
  char v2 = sub_10017D324();
  *uint64_t v0 = static OS_dispatch_queue.main.getter();
  uint64_t v3 = sub_1001802D0();
  v4(v3);
  _dispatchPreconditionTest(_:)();
  uint64_t v5 = sub_10019F050();
  uint64_t result = v6(v5);
  if (v2)
  {
    if (sub_1000AA078()) {
      return sub_10071E4DC();
    }
    else {
      return sub_1000AA130(0);
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

BOOL sub_1000AA078()
{
  uint64_t v0 = type metadata accessor for DispatchTime();
  sub_10017C83C();
  uint64_t v2 = v1;
  __chkstk_darwin(v3);
  sub_1001626E0();
  uint64_t v6 = v5 - v4;
  static DispatchTime.now()();
  OS_dispatch_group.wait(timeout:)();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v6, v0);
  return (static DispatchTimeoutResult.== infix(_:_:)() & 1) == 0;
}

uint64_t sub_1000AA130(char a1)
{
  uint64_t v3 = type metadata accessor for OSSignpostID();
  sub_100179C0C();
  uint64_t v5 = v4;
  uint64_t result = __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v10 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(unsigned char *)(v1 + 16))
  {
    *(unsigned char *)(v1 + 16) = 2;
    if (a1) {
      [self setFrameStallSkipRequest:1];
    }
    sub_10071E388();
    sub_10007EBF4();
    static os_signpost_type_t.event.getter();
    if (qword_100E627F8 != -1) {
      swift_once();
    }
    static OSSignpostID.exclusive.getter();
    os_signpost(_:dso:log:name:signpostID:)();
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v9, v3);
  }
  return result;
}

uint64_t sub_1000AA278()
{
  return swift_release();
}

uint64_t sub_1000AA2E8(uint64_t a1)
{
  uint64_t result = sub_1000AA5CC();
  if ((result & 1) == 0)
  {
    *(unsigned char *)(v1 + 32) = 1;
    return sub_1000A9F3C(a1);
  }
  return result;
}

uint64_t sub_1000AA34C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  v29[0] = a6;
  uint64_t v11 = sub_10017DF08(&qword_100E7C700);
  uint64_t v12 = v11 - 8;
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_10017DF08(&qword_100E7C708);
  uint64_t v16 = v15 - 8;
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)v29 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = a2;
  *(void *)(v19 + 24) = a3;
  *(void *)(v19 + 32) = a4;
  *(void *)(v19 + 40) = a5;
  sub_10017DF08(&qword_100E7C710);
  sub_100162E4C();
  (*(void (**)(char *, uint64_t))(v20 + 16))(v14, a1);
  unint64_t v21 = (uint64_t (**)())&v14[*(int *)(v12 + 44)];
  *unint64_t v21 = sub_10021419C;
  v21[1] = (uint64_t (*)())v19;
  void v21[2] = 0;
  v21[3] = 0;
  v29[1] = a2;
  long long v29[2] = a3;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_10017DF08(&qword_100E7C718);
  State.wrappedValue.getter();
  LOBYTE(v19) = sub_1000AA5CC();
  swift_release();
  sub_1001262FC((uint64_t)v14, (uint64_t)v18, &qword_100E7C700);
  v18[*(int *)(v16 + 44)] = (v19 & 1) == 0;
  sub_1001781AC((uint64_t)v14, &qword_100E7C700);
  uint64_t v22 = (void *)swift_allocObject();
  v22[2] = a2;
  void v22[3] = a3;
  uint64_t v22[4] = a4;
  v22[5] = a5;
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v23 = static Alignment.center.getter();
  uint64_t v25 = v24;
  uint64_t v26 = v29[0];
  sub_1001262FC((uint64_t)v18, v29[0], &qword_100E7C708);
  unint64_t v27 = (void *)(v26 + *(int *)(sub_10017DF08(&qword_100E7C720) + 36));
  *unint64_t v27 = sub_1002137AC;
  v27[1] = v22;
  void v27[2] = v23;
  v27[3] = v25;
  return sub_1001781AC((uint64_t)v18, &qword_100E7C708);
}

uint64_t sub_1000AA5CC()
{
  swift_getKeyPath();
  sub_1000AA63C();
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  return *(unsigned __int8 *)(v0 + 33);
}

unint64_t sub_1000AA63C()
{
  unint64_t result = qword_100E7C6F8;
  if (!qword_100E7C6F8)
  {
    type metadata accessor for VisibilityState();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E7C6F8);
  }
  return result;
}

uint64_t sub_1000AA68C()
{
  return ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
}

uint64_t sub_1000AA718(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_WORD *)(a1 + 1) = *(_WORD *)(a2 + 1);
  uint64_t v6 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v6;
  uint64_t v7 = a3[8];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = type metadata accessor for URL();
  swift_bridgeObjectRetain();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v10))
  {
    uint64_t v11 = sub_10017DF08(&qword_100E749B0);
    memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v8, 0, 1, v10);
  }
  uint64_t v12 = a3[9];
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  *(unsigned char *)uint64_t v13 = *(unsigned char *)(a2 + v12);
  *(void *)(v13 + 8) = *(void *)(a2 + v12 + 8);
  uint64_t v15 = (int *)type metadata accessor for LearnMoreAttributorViewModel();
  uint64_t v16 = v15[6];
  uint64_t v17 = (void *)(v13 + v16);
  uint64_t v18 = (const void *)(v14 + v16);
  swift_bridgeObjectRetain();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v18, 1, v10))
  {
    uint64_t v19 = sub_10017DF08(&qword_100E749B0);
    memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 16))(v17, v18, v10);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v17, 0, 1, v10);
  }
  uint64_t v20 = v15[7];
  unint64_t v21 = (void *)(v13 + v20);
  uint64_t v22 = (void *)(v14 + v20);
  uint64_t v23 = v22[1];
  *unint64_t v21 = *v22;
  v21[1] = v23;
  *(void *)(v13 + v15[8]) = *(void *)(v14 + v15[8]);
  uint64_t v24 = a3[11];
  *(unsigned char *)(a1 + a3[10]) = *(unsigned char *)(a2 + a3[10]);
  uint64_t v25 = (void *)(a1 + v24);
  uint64_t v26 = (const void *)(a2 + v24);
  uint64_t v27 = type metadata accessor for LocationOfInterest();
  swift_bridgeObjectRetain();
  swift_retain();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v26, 1, v27))
  {
    uint64_t v28 = sub_10017DF08(&qword_100E63508);
    memcpy(v25, v26, *(void *)(*(void *)(v28 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v25, 0, 1, v27);
  }
  uint64_t v29 = a3[13];
  *(unsigned char *)(a1 + a3[12]) = *(unsigned char *)(a2 + a3[12]);
  *(unsigned char *)(a1 + v29) = *(unsigned char *)(a2 + v29);
  uint64_t v30 = a3[14];
  uint64_t v31 = (unsigned char *)(a1 + v30);
  uint64_t v32 = (unsigned char *)(a2 + v30);
  uint64_t v33 = (int *)type metadata accessor for HomeAndWorkRefinementRowViewModel();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v32, 1, (uint64_t)v33))
  {
    uint64_t v34 = sub_10017DF08(&qword_100E6DC10);
    memcpy(v31, v32, *(void *)(*(void *)(v34 - 8) + 64));
  }
  else
  {
    unsigned char *v31 = *v32;
    uint64_t v35 = v33[5];
    uint64_t v36 = &v31[v35];
    uint64_t v37 = &v32[v35];
    uint64_t v38 = type metadata accessor for Location();
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v38 - 8) + 16))(v36, v37, v38);
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v27 - 8) + 16))(&v31[v33[6]], &v32[v33[6]], v27);
    v31[v33[7]] = v32[v33[7]];
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v31, 0, 1, (uint64_t)v33);
  }
  return a1;
}

void sub_1000AAAE4()
{
  sub_100162EA0();
  uint64_t v49 = v0;
  uint64_t v52 = v4;
  uint64_t v53 = v5;
  uint64_t v6 = sub_10017DF08(&qword_100EADA98);
  sub_100179C0C();
  uint64_t v50 = v7;
  __chkstk_darwin(v8);
  sub_100162EB8();
  uint64_t v9 = sub_10017DF08(&qword_100EADAA0);
  sub_100162E4C();
  __chkstk_darwin(v10);
  sub_10012B938();
  uint64_t v11 = sub_10017DF08(&qword_100E94AE8);
  uint64_t v12 = sub_100109308(v11);
  __chkstk_darwin(v12);
  uint64_t v13 = sub_1001D2200();
  sub_100162E4C();
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)v43 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = (int *)type metadata accessor for ModalPresentationViewModifier(0);
  sub_100162E4C();
  __chkstk_darwin(v18);
  sub_100162F18();
  uint64_t v51 = sub_10017DF08(&qword_100EADAA8);
  sub_100162E4C();
  __chkstk_darwin(v19);
  sub_100163CD0();
  if (qword_100E62668 != -1)
  {
    uint64_t v48 = v20;
    swift_once();
    uint64_t v20 = v48;
  }
  if (byte_100F51C48 == 1)
  {
    uint64_t v48 = v20;
    swift_retain();
    sub_1001BFFC8();
    swift_release();
    sub_10006DF38((uint64_t)&v16[*(int *)(v13 + 24)], v2, &qword_100E94AE8);
    sub_1001BFF70((uint64_t)v16, (void (*)(void))type metadata accessor for MainViewModel);
    uint64_t v21 = sub_1000AB054();
    uint64_t v44 = v22;
    uint64_t v45 = v21;
    v43[3] = v23;
    uint64_t v24 = sub_1000AB054();
    uint64_t v49 = v9;
    uint64_t v25 = v50;
    uint64_t v27 = v26;
    uint64_t v47 = v1;
    char v29 = v28;
    char v54 = 0;
    static Binding.constant(_:)();
    uint64_t v46 = v6;
    uint64_t v30 = v55;
    uint64_t v31 = v56;
    char v32 = v57;
    sub_10024D364(v2, v3, &qword_100E94AE8);
    uint64_t v33 = (uint64_t *)(v3 + v17[5]);
    uint64_t v34 = v44;
    uint64_t *v33 = v45;
    v33[1] = v34;
    sub_1001A1AA4((uint64_t)v33);
    *(void *)uint64_t v35 = v24;
    *(void *)(v35 + 8) = v27;
    *(unsigned char *)(v35 + 16) = v29 & 1;
    uint64_t v36 = v3 + v17[7];
    *(void *)uint64_t v36 = v30;
    *(void *)(v36 + 8) = v31;
    *(unsigned char *)(v36 + 16) = v32;
    uint64_t v37 = (uint64_t *)(v3 + v17[8]);
    type metadata accessor for ObservableResolver();
    sub_10013516C((uint64_t)&qword_100E70FD0);
    *uint64_t v37 = EnvironmentObject.init()();
    v37[1] = v38;
    uint64_t v39 = v3 + v17[9];
    *(void *)uint64_t v39 = swift_getKeyPath();
    *(unsigned char *)(v39 + 8) = 0;
    uint64_t v40 = v48;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v25 + 16))(v48, v52, v46);
    sub_1001BE1F4(v3, v40 + *(int *)(v51 + 36), (void (*)(void))type metadata accessor for ModalPresentationViewModifier);
    sub_10006DF38(v40, v47, &qword_100EADAA8);
    swift_storeEnumTagMultiPayload();
    sub_1000AB214((uint64_t)&unk_100EADAB0);
    sub_10024D5E4((uint64_t)&unk_100EADAB8);
    _ConditionalContent<>.init(storage:)();
    sub_1001781AC(v40, &qword_100EADAA8);
  }
  else
  {
    uint64_t v41 = v50;
    uint64_t v42 = *(void (**)(void))(v50 + 16);
    sub_100163E30();
    v42();
    sub_100163E30();
    v42();
    swift_storeEnumTagMultiPayload();
    sub_1000AB214((uint64_t)&unk_100EADAB0);
    sub_10024D5E4((uint64_t)&unk_100EADAB8);
    _ConditionalContent<>.init(storage:)();
    (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v0, v6);
  }
  sub_100162694();
}

uint64_t sub_1000AB054()
{
  sub_1000AB13C(v0, (uint64_t)&v21);
  type metadata accessor for MainActor();
  uint64_t v1 = static MainActor.shared.getter();
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = v1;
  *(void *)(v2 + 24) = &protocol witness table for MainActor;
  sub_100185F50((_OWORD *)v2, v3, v4, v5, v6, v7, v8, v9, v21, v22, v10, v23);
  sub_1000AB13C(v0, (uint64_t)&v21);
  uint64_t v11 = static MainActor.shared.getter();
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = v11;
  *(void *)(v12 + 24) = &protocol witness table for MainActor;
  sub_100185F50((_OWORD *)v12, v13, v14, v12, v15, v16, v17, v18, v21, v22, v19, v23);
  Binding.init(get:set:)();
  return v21;
}

uint64_t sub_1000AB13C(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t initializeWithCopy for ConditionDetailView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = a2 + 16;
  long long v6 = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 40) = v6;
  uint64_t v7 = v6;
  uint64_t v8 = **(void (***)(uint64_t, uint64_t, uint64_t))(v6 - 8);
  swift_retain();
  v8(a1 + 16, v5, v7);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_retain();
  return a1;
}

unint64_t sub_1000AB214(uint64_t a1)
{
  unint64_t result = sub_10017DFE0(a1);
  if (!result)
  {
    uint64_t v5 = v4;
    sub_10018C6DC(v3);
    sub_10024D5E4(v5);
    sub_10013516C((uint64_t)&unk_100EAD6C0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, v1);
  }
  return result;
}

uint64_t initializeWithCopy for RecordLocationHeaderFrameViewModifier(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  char v3 = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  uint64_t v5 = *(void *)(a2 + 32);
  uint64_t v6 = *(void *)(a2 + 40);
  uint64_t v7 = *(void *)(a2 + 48);
  char v8 = *(unsigned char *)(a2 + 56);
  swift_retain();
  sub_100190CD4(v4, v5, v6, v7, v8);
  *(void *)(a1 + 24) = v4;
  *(void *)(a1 + 32) = v5;
  *(void *)(a1 + 40) = v6;
  *(void *)(a1 + 48) = v7;
  *(unsigned char *)(a1 + 56) = v8;
  return a1;
}

uint64_t initializeWithCopy for CalculateLocationComponentContainerBackgroundPinningOffsetViewModifier(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  char v4 = *(unsigned char *)(a2 + 24);
  sub_100195B7C(v3, v4);
  *(void *)(a1 + 16) = v3;
  *(unsigned char *)(a1 + 24) = v4;
  return a1;
}

uint64_t sub_1000AB3B0(uint64_t a1)
{
  uint64_t v40 = type metadata accessor for Container.TestSuite();
  sub_10017C83C();
  uint64_t v47 = v2;
  __chkstk_darwin(v3);
  uint64_t v39 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for Scope();
  sub_10017C83C();
  uint64_t v7 = v6;
  __chkstk_darwin(v8);
  __n128 v10 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  ProxyContainer.public.getter();
  sub_10017DF08(&qword_100E7CD10);
  sub_100179D0C();
  swift_release();
  swift_release();
  ProxyContainer.public.getter();
  sub_10017DF08(&qword_100E98118);
  sub_100179D0C();
  sub_1001D20C0();
  uint64_t v11 = enum case for Scope.singleton(_:);
  uint64_t v12 = *(void (**)(void))(v7 + 104);
  ((void (*)(char *, void, uint64_t))v12)(v10, enum case for Scope.singleton(_:), v5);
  sub_10017ECD4();
  swift_release();
  swift_release();
  uint64_t v13 = *(void (**)(uint64_t))(v7 + 8);
  uint64_t v14 = sub_10018092C();
  v13(v14);
  ProxyContainer.public.getter();
  sub_10017DF08(&qword_100EA7DC0);
  sub_100179D0C();
  sub_1001D20C0();
  uint64_t v15 = sub_10019F64C();
  v12(v15);
  sub_10017ECD4();
  swift_release();
  swift_release();
  uint64_t v16 = sub_10018092C();
  v13(v16);
  ProxyContainer.public.getter();
  sub_10017DF08(&qword_100E73F78);
  sub_100179D0C();
  sub_1001D20C0();
  uint64_t v17 = sub_10019F64C();
  v12(v17);
  uint64_t v43 = v7 + 104;
  sub_10017ECD4();
  swift_release();
  swift_release();
  uint64_t v18 = sub_10018092C();
  v13(v18);
  uint64_t v44 = v7 + 8;
  uint64_t v45 = v13;
  ProxyContainer.public.getter();
  sub_10017DF08(&qword_100E98190);
  sub_100179D0C();
  sub_1001D20C0();
  uint64_t v19 = sub_10019F64C();
  v12(v19);
  sub_10017ECD4();
  swift_release();
  swift_release();
  uint64_t v20 = sub_100179C64();
  v13(v20);
  type metadata accessor for NetworkActivityManager();
  swift_allocObject();
  uint64_t v42 = sub_1000B2DC8();
  ProxyContainer.public.getter();
  sub_10017DF08(&qword_100E7CD18);
  swift_retain();
  RegistrationContainer.register<A>(_:name:factory:)();
  sub_100181A40();
  swift_release();
  uint64_t v46 = (void (*)(void))v12;
  ((void (*)(char *, uint64_t, uint64_t))v12)(v10, v11, v5);
  sub_1001A1160();
  swift_release();
  swift_release();
  long long v21 = (void (*)(char *, uint64_t))v45;
  ((void (*)(char *, uint64_t))v45)(v10, v5);
  ProxyContainer.public.getter();
  sub_10017DF08(&qword_100E980F8);
  sub_100179D0C();
  sub_100181A40();
  ((void (*)(char *, uint64_t, uint64_t))v12)(v10, v11, v5);
  sub_1001A1160();
  swift_release();
  swift_release();
  v21(v10, v5);
  ProxyContainer.public.getter();
  sub_10017DF08(&qword_100E97090);
  swift_retain();
  sub_10017ACDC();
  swift_release();
  swift_release();
  swift_release();
  ProxyContainer.public.getter();
  sub_10017DF08(&qword_100EA7DC8);
  swift_retain();
  sub_10017ACDC();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v22 = a1;
  ProxyContainer.public.getter();
  sub_10017DF08(&qword_100E906A8);
  sub_100179D0C();
  sub_100181A40();
  int v41 = v11;
  long long v23 = v46;
  sub_100163BCC();
  v23();
  sub_1001A1160();
  swift_release();
  swift_release();
  uint64_t v24 = v45;
  ((void (*)(char *, uint64_t))v45)(v10, v5);
  uint64_t v36 = v22;
  ProxyContainer.public.getter();
  sub_10017DF08(&qword_100EA7DD0);
  sub_100179D0C();
  sub_100181A40();
  sub_100163BCC();
  v23();
  sub_1001A1160();
  swift_release();
  swift_release();
  uint64_t v25 = sub_100179C64();
  v24(v25);
  uint64_t v26 = v24;
  ProxyContainer.public.getter();
  sub_10017DF08(&qword_100E90C68);
  sub_100179D0C();
  swift_release();
  unsigned int v38 = enum case for Container.TestSuite.performance(_:);
  uint64_t v27 = v47;
  uint64_t v37 = *(void (**)(char *))(v47 + 104);
  char v29 = v39;
  uint64_t v28 = v40;
  v37(v39);
  Definition.whenTesting(_:_:)();
  swift_release();
  uint64_t v30 = *(void (**)(char *, uint64_t))(v27 + 8);
  uint64_t v47 = v27 + 8;
  v30(v29, v28);
  sub_100163BCC();
  v31();
  Definition.inScope(_:)();
  swift_release();
  swift_release();
  uint64_t v32 = sub_100179C64();
  v26(v32);
  ProxyContainer.public.getter();
  sub_10017DF08(&qword_100E7C0F0);
  sub_100179D0C();
  swift_release();
  swift_release();
  ProxyContainer.private.getter();
  RegistrationContainer.lazy(block:)();
  swift_release();
  ProxyContainer.public.getter();
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  ((void (*)(char *, void, uint64_t))v37)(v29, v38, v28);
  Definition.whenTesting(_:_:)();
  swift_release();
  swift_release();
  v30(v29, v28);
  ProxyContainer.public.getter();
  sub_10017DF08(&qword_100E6F440);
  sub_100179D0C();
  swift_release();
  sub_100163BCC();
  v33();
  Definition.inScope(_:)();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v34 = sub_100179C64();
  return ((uint64_t (*)(uint64_t))v45)(v34);
}

uint64_t sub_1000ABC10()
{
  sub_10010977C();
  uint64_t v2 = type metadata accessor for LocationViewPage(0);
  sub_100179EF0();
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  type metadata accessor for LocationModel();
  sub_100179DC0();
  sub_100162F0C();
  v5();
  uint64_t v6 = *(int *)(v2 + 20);
  unint64_t v7 = v0 + v4 + v6 + *(int *)(type metadata accessor for ContentStatusBannerPresentationMetrics(0) + 20);
  uint64_t v8 = type metadata accessor for ContentStatusBanner();
  if (!sub_1001632AC(v8))
  {
    if (*(void *)(v7 + 16) >= 2uLL) {
      swift_bridgeObjectRelease();
    }
    unint64_t v9 = v7 + *(int *)(v1 + 24);
    uint64_t v10 = type metadata accessor for Date();
    if (!sub_1001632AC(v10))
    {
      sub_100162880();
      (*(void (**)(unint64_t, uint64_t))(v11 + 8))(v9, v1);
    }
  }
  sub_10017DF08((uint64_t *)&unk_100EAA560);
  if (sub_100163380() == 1)
  {
    uint64_t v12 = type metadata accessor for UserInterfaceSizeClass();
    if (!sub_1001632AC(v12))
    {
      sub_100162880();
      sub_100162F0C();
      v13();
    }
  }
  else
  {
    swift_release();
  }
  swift_release();
  sub_100164ABC();
  sub_100162714();
  return swift_deallocObject();
}

uint64_t sub_1000ABDA4()
{
  uint64_t v1 = type metadata accessor for LocationViewerViewModel();
  uint64_t v2 = sub_100109308(v1);
  __chkstk_darwin(v2);
  sub_100162758();
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v8 - v4;
  type metadata accessor for MeasuredLocationViewerView(0);
  sub_10012B9AC();
  sub_1001520F8();
  char v6 = sub_1000ABE8C((uint64_t)v5, v0);
  sub_100151660();
  sub_100151660();
  return v6 & 1;
}

uint64_t sub_1000ABE8C(uint64_t a1, uint64_t a2)
{
  if ((static LocationModel.== infix(_:_:)() & 1) == 0) {
    goto LABEL_15;
  }
  uint64_t v4 = (int *)type metadata accessor for LocationViewerViewModel();
  sub_100126C70();
  if ((v5 & 1) == 0) {
    goto LABEL_15;
  }
  if ((sub_1000AC6E0((uint64_t *)(a1 + v4[6]), (void *)(a2 + v4[6])) & 1) != 0
    && (sub_10011C778(), v6)
    && sub_1000ACE54(*(unsigned char *)(a1 + v4[8]), *(unsigned char *)(a2 + v4[8]))
    && (sub_10011C778(), v6)
    && (sub_10011C778(), v6)
    && (sub_10011C778(), v6)
    && (sub_1000ABFA0(), (v7 & 1) != 0)
    && (sub_10011C778(), v6))
  {
    uint64_t v10 = v4[14];
    long long v11 = *(_OWORD *)(a1 + v10 + 16);
    v17[0] = *(_OWORD *)(a1 + v10);
    v17[1] = v11;
    long long v12 = *(_OWORD *)(a1 + v10 + 32);
    uint64_t v13 = (long long *)(a2 + v10);
    long long v14 = *v13;
    long long v15 = v13[1];
    void v17[2] = v12;
    v18[0] = v14;
    long long v16 = v13[2];
    v18[1] = v15;
    v18[2] = v16;
    char v8 = sub_1000AC610(v17, v18);
  }
  else
  {
LABEL_15:
    char v8 = 0;
  }
  return v8 & 1;
}

void sub_1000ABFA0()
{
  sub_100162EA0();
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  uint64_t v10 = type metadata accessor for Date();
  sub_100179C0C();
  __chkstk_darwin(v11);
  sub_1001648EC(v12, v52);
  uint64_t v13 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  uint64_t v14 = sub_100109308(v13);
  __chkstk_darwin(v14);
  sub_10011BFD8();
  uint64_t v61 = sub_10017DF08(&qword_100E64D60);
  sub_100162E4C();
  __chkstk_darwin(v15);
  uint64_t v60 = sub_1002EEE1C();
  sub_100179C0C();
  __chkstk_darwin(v16);
  sub_1001190EC();
  __chkstk_darwin(v17);
  sub_100152388();
  uint64_t v18 = sub_10017DF08(&qword_100E6A6B0);
  uint64_t v19 = sub_100109308(v18);
  __chkstk_darwin(v19);
  sub_100181E70();
  __chkstk_darwin(v20);
  sub_100188F80();
  if (v9 != v7 && *(void *)(v9 + 16) == *(void *)(v7 + 16))
  {
    uint64_t v59 = 0;
    uint64_t v54 = v9 + 64;
    sub_100199B8C();
    uint64_t v23 = v22 & v21;
    sub_1002EF44C();
    uint64_t v55 = v24;
    uint64_t v56 = v25;
    uint64_t v53 = v25 - 1;
    uint64_t v57 = v0;
    uint64_t v58 = v1;
    uint64_t v62 = (void *)v3;
    if (!v23) {
      goto LABEL_6;
    }
LABEL_4:
    sub_1002EF344();
LABEL_5:
    sub_1002EF338();
    uint64_t v28 = *v26;
    uint64_t v27 = v26[1];
    uint64_t v29 = sub_10017DF08(&qword_100E6A6B8);
    sub_10011818C();
    *uint64_t v62 = v28;
    v62[1] = v27;
    sub_1002EF0E0((uint64_t)v62, 0, 1, v29);
    uint64_t v1 = v58;
    while (1)
    {
      uint64_t v37 = sub_10011A5A0();
      sub_100127928(v37, v38, &qword_100E6A6B0);
      uint64_t v39 = sub_10017DF08(&qword_100E6A6B8);
      sub_10012B520(v2, 1, v39);
      if (v44) {
        goto LABEL_53;
      }
      sub_10016EAB0();
      sub_1001D23B8();
      char v41 = v40;
      swift_bridgeObjectRelease();
      if ((v41 & 1) == 0) {
        goto LABEL_52;
      }
      sub_1002EF488();
      sub_10011818C();
      if (*v5 != *v4) {
        goto LABEL_51;
      }
      uint64_t v42 = *((void *)v5 + 2);
      unint64_t v43 = *((void *)v4 + 2);
      if (v42)
      {
        if (v42 == 1)
        {
          if (v43 != 1) {
            goto LABEL_51;
          }
        }
        else
        {
          if (v43 < 2) {
            goto LABEL_51;
          }
          BOOL v44 = *((void *)v5 + 1) == *((void *)v4 + 1) && v42 == v43;
          if (!v44 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
            goto LABEL_51;
          }
        }
      }
      else if (v43)
      {
        goto LABEL_51;
      }
      uint64_t v45 = *(int *)(v60 + 24);
      uint64_t v46 = (uint64_t)&v4[v45];
      uint64_t v47 = v1 + *(int *)(v61 + 48);
      sub_1001B49E8((uint64_t)&v5[v45], v1, (uint64_t *)&unk_100E73CA0);
      sub_1001B49E8(v46, v47, (uint64_t *)&unk_100E73CA0);
      sub_10012B520(v1, 1, v10);
      if (v44)
      {
        sub_10012B520(v47, 1, v10);
        if (!v44) {
          goto LABEL_50;
        }
        sub_100178110(v1, (uint64_t *)&unk_100E73CA0);
      }
      else
      {
        sub_1001B49E8(v1, v57, (uint64_t *)&unk_100E73CA0);
        sub_10012B520(v47, 1, v10);
        if (v48)
        {
          ((void (*)(uint64_t, uint64_t))*v55)(v57, v10);
LABEL_50:
          sub_100178110(v1, &qword_100E64D60);
LABEL_51:
          sub_1001184F4((uint64_t)v5, (void (*)(void))type metadata accessor for ContentStatusBanner);
LABEL_52:
          sub_1001184F4((uint64_t)v4, (void (*)(void))type metadata accessor for ContentStatusBanner);
          goto LABEL_53;
        }
        sub_1001190D4();
        v49();
        sub_100127D40((unint64_t *)&qword_100E63980, 255, (void (*)(uint64_t))&type metadata accessor for Date);
        sub_1002EF108();
        char v50 = dispatch thunk of static Equatable.== infix(_:_:)();
        uint64_t v51 = *v55;
        sub_1001D0E38();
        v51();
        uint64_t v1 = v58;
        sub_1001D0E38();
        v51();
        sub_100178110(v58, (uint64_t *)&unk_100E73CA0);
        if ((v50 & 1) == 0) {
          goto LABEL_51;
        }
      }
      sub_1001184F4((uint64_t)v5, (void (*)(void))type metadata accessor for ContentStatusBanner);
      sub_1001184F4((uint64_t)v4, (void (*)(void))type metadata accessor for ContentStatusBanner);
      uint64_t v3 = (uint64_t)v62;
      if (v23) {
        goto LABEL_4;
      }
LABEL_6:
      if (__OFADD__(v59, 1)) {
        break;
      }
      sub_1002EF23C();
      if (v31 != v32)
      {
        if (*(void *)(v54 + 8 * v30)) {
          goto LABEL_10;
        }
        uint64_t v59 = v30;
        if (v30 + 1 < v56)
        {
          if (*(void *)(v54 + 8 * (v30 + 1))) {
            goto LABEL_10;
          }
          uint64_t v59 = v30 + 1;
          if (v30 + 2 < v56)
          {
            if (*(void *)(v54 + 8 * (v30 + 2))) {
              goto LABEL_10;
            }
            uint64_t v34 = v30 + 3;
            uint64_t v59 = v30 + 2;
            if (v30 + 3 < v56)
            {
              if (*(void *)(v54 + 8 * v34))
              {
LABEL_10:
                sub_1002EF01C();
                uint64_t v59 = v33;
                goto LABEL_5;
              }
              while (!__OFADD__(v34, 1))
              {
                sub_1002EF23C();
                if (v31 == v32)
                {
                  uint64_t v59 = v53;
                  goto LABEL_23;
                }
                sub_1001D40DC();
                if (v35) {
                  goto LABEL_10;
                }
              }
              goto LABEL_55;
            }
          }
        }
      }
LABEL_23:
      uint64_t v36 = sub_10017DF08(&qword_100E6A6B8);
      _s7Weather24LocationCompositionStateOwst_0(v3, 1, 1, v36);
      uint64_t v23 = 0;
    }
    __break(1u);
LABEL_55:
    __break(1u);
    return;
  }
LABEL_53:
  sub_100162694();
}

uint64_t sub_1000AC610(void *a1, void *a2)
{
  if (*a1 != *a2 || a1[1] != a2[1])
  {
    char v5 = _stringCompareWithSmolCheck(_:_:expecting:)();
    uint64_t result = 0;
    if ((v5 & 1) == 0) {
      return result;
    }
  }
  uint64_t v7 = a1[3];
  uint64_t v8 = a2[3];
  if (!v7)
  {
    if (!v8)
    {
LABEL_16:
      if (a1[4] == a2[4] && a1[5] == a2[5]) {
        return 1;
      }
      return _stringCompareWithSmolCheck(_:_:expecting:)();
    }
    return 0;
  }
  if (!v8) {
    return 0;
  }
  if (a1[2] == a2[2] && v7 == v8) {
    goto LABEL_16;
  }
  char v10 = _stringCompareWithSmolCheck(_:_:expecting:)();
  uint64_t result = 0;
  if (v10) {
    goto LABEL_16;
  }
  return result;
}

uint64_t sub_1000AC6E0(uint64_t *a1, void *a2)
{
  type metadata accessor for WeatherCondition();
  sub_10017CDCC();
  uint64_t v7 = v6;
  __chkstk_darwin(v8);
  sub_100162E88();
  uint64_t v9 = sub_10017DF08(&qword_100E790C8);
  sub_100162E4C();
  __chkstk_darwin(v10);
  sub_1001626E0();
  uint64_t v13 = v12 - v11;
  uint64_t v14 = sub_10017DF08(&qword_100E63A50);
  __chkstk_darwin(v14 - 8);
  sub_10016278C();
  uint64_t v17 = v15 - v16;
  uint64_t v19 = __chkstk_darwin(v18);
  uint64_t v21 = &v36[-v20];
  __chkstk_darwin(v19);
  uint64_t v23 = &v36[-v22];
  uint64_t v24 = *a1;
  uint64_t v25 = a1[1];
  uint64_t v26 = *a2;
  uint64_t v27 = a2[1];
  uint64_t v38 = a2;
  BOOL v28 = v24 == v26 && v25 == v27;
  if (v28 || (v29 = _stringCompareWithSmolCheck(_:_:expecting:)(), char v30 = 0, (v29 & 1) != 0))
  {
    uint64_t v31 = type metadata accessor for ConditionPickerMenuViewModel(0);
    sub_1000ACA10((uint64_t)a1 + *(int *)(v31 + 20), (uint64_t)v23);
    sub_1000ACA10((uint64_t)v38 + *(int *)(v31 + 20), (uint64_t)v21);
    uint64_t v32 = v13 + *(int *)(v9 + 48);
    sub_1000ACA10((uint64_t)v23, v13);
    sub_1000ACA10((uint64_t)v21, v32);
    sub_100162F8C(v13);
    if (v28)
    {
      sub_1001781AC((uint64_t)v21, &qword_100E63A50);
      sub_1001781AC((uint64_t)v23, &qword_100E63A50);
      sub_100162F8C(v32);
      if (v28)
      {
        sub_1001781AC(v13, &qword_100E63A50);
LABEL_16:
        sub_1000ACA78();
        return v30 & 1;
      }
    }
    else
    {
      sub_1000ACA10(v13, v17);
      sub_100162F8C(v32);
      if (!v33)
      {
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(v2, v32, v3);
        sub_1004851EC();
        int v37 = dispatch thunk of static Equatable.== infix(_:_:)();
        uint64_t v34 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
        v34(v2, v3);
        sub_1001781AC((uint64_t)v21, &qword_100E63A50);
        sub_1001781AC((uint64_t)v23, &qword_100E63A50);
        v34(v17, v3);
        sub_1001781AC(v13, &qword_100E63A50);
        if (v37) {
          goto LABEL_16;
        }
LABEL_17:
        char v30 = 0;
        return v30 & 1;
      }
      sub_1001781AC((uint64_t)v21, &qword_100E63A50);
      sub_1001781AC((uint64_t)v23, &qword_100E63A50);
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v17, v3);
    }
    sub_1001781AC(v13, &qword_100E790C8);
    goto LABEL_17;
  }
  return v30 & 1;
}

uint64_t sub_1000ACA10(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10017DF08(&qword_100E63A50);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1000ACA78()
{
  sub_100162EA0();
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  uint64_t v36 = type metadata accessor for WeatherCondition();
  sub_100179C0C();
  uint64_t v10 = v9;
  __chkstk_darwin(v11);
  sub_10012B938();
  uint64_t v12 = sub_10017DF08(&qword_100E63A50);
  uint64_t v13 = sub_100109308(v12);
  __chkstk_darwin(v13);
  sub_10016279C();
  uint64_t v14 = sub_10017DF08(&qword_100E790C8);
  sub_100162E4C();
  __chkstk_darwin(v15);
  uint64_t v16 = sub_10011BA28();
  type metadata accessor for ConditionPickerMenuViewModel.Row(v16);
  sub_10017DD84();
  __chkstk_darwin(v17);
  sub_1001CA99C();
  __chkstk_darwin(v18);
  sub_100184868();
  uint64_t v20 = *(void *)(v8 + 16);
  if (v20 == *(void *)(v6 + 16))
  {
    uint64_t v32 = v19;
    uint64_t v33 = v14;
    uint64_t v31 = v1;
    if (v20)
    {
      if (v8 != v6)
      {
        sub_1001A8844();
        uint64_t v35 = v21;
        char v30 = (void (**)(void))(v10 + 8);
        uint64_t v22 = v32;
        while (1)
        {
          sub_100126EC0();
          sub_100126EC0();
          BOOL v23 = *v4 == *v3 && v4[1] == v3[1];
          if (!v23 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
            break;
          }
          uint64_t v24 = *(int *)(v22 + 20);
          uint64_t v25 = (uint64_t)v3 + v24;
          uint64_t v26 = v2 + *(int *)(v14 + 48);
          sub_10006DF38((uint64_t)v4 + v24, v2, &qword_100E63A50);
          sub_10006DF38(v25, v26, &qword_100E63A50);
          sub_10012B520(v2, 1, v36);
          if (v23)
          {
            sub_10012B520(v26, 1, v36);
            if (!v23) {
              goto LABEL_20;
            }
            sub_100178110(v2, &qword_100E63A50);
          }
          else
          {
            sub_10006DF38(v2, v31, &qword_100E63A50);
            sub_10012B520(v26, 1, v36);
            if (v27)
            {
              ((void (*)(uint64_t, uint64_t))*v30)(v31, v36);
LABEL_20:
              sub_100178110(v2, &qword_100E790C8);
              break;
            }
            sub_1001190D4();
            v28();
            sub_100126C28((unint64_t *)&qword_100E6A458, (void (*)(uint64_t))&type metadata accessor for WeatherCondition);
            char v34 = dispatch thunk of static Equatable.== infix(_:_:)();
            char v29 = *v30;
            uint64_t v14 = v33;
            sub_10017F214();
            v29();
            uint64_t v22 = v32;
            sub_10017F214();
            v29();
            sub_100178110(v2, &qword_100E63A50);
            if ((v34 & 1) == 0) {
              break;
            }
          }
          sub_100126E18((uint64_t)v3, (void (*)(void))type metadata accessor for ConditionPickerMenuViewModel.Row);
          sub_100126E18((uint64_t)v4, (void (*)(void))type metadata accessor for ConditionPickerMenuViewModel.Row);
          v0 += v35;
          if (!--v20) {
            goto LABEL_22;
          }
        }
        sub_100126E18((uint64_t)v3, (void (*)(void))type metadata accessor for ConditionPickerMenuViewModel.Row);
        sub_10018B23C();
      }
    }
  }
LABEL_22:
  sub_100162694();
}

BOOL sub_1000ACE54(unsigned __int8 a1, unsigned __int8 a2)
{
  BOOL v3 = (a2 & 0x80u) == 0 && a1 == a2;
  BOOL v4 = (a2 & 0x80) != 0 && ((a2 ^ a1) & 1) == 0;
  if ((a1 & 0x80) != 0) {
    return v4;
  }
  else {
    return v3;
  }
}

uint64_t sub_1000ACE8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  unint64_t v6 = a2 & 0xFFFFFFFFFFFFFFF8;
  *(void *)((a1 & 0xFFFFFFFFFFFFFFF8) + 24) = *(void *)((a2 & 0xFFFFFFFFFFFFFFF8) + 24);
  swift_retain();
  swift_release();
  uint64_t v7 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v8 = v7 + 24;
  uint64_t v9 = *(unsigned __int8 *)(v7 + 80);
  unint64_t v10 = (v9 + 32 + (a1 & 0xFFFFFFFFFFFFFFF8)) & ~v9;
  unint64_t v11 = (v9 + 32 + (a2 & 0xFFFFFFFFFFFFFFF8)) & ~v9;
  (*(void (**)(unint64_t, unint64_t))(v7 + 24))(v10, (v9 + 32 + v6) & ~v9);
  uint64_t v12 = *(void *)(v8 + 40) + 7;
  uint64_t v13 = (void *)((v12 + v10) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v14 = (void *)((v12 + v11) & 0xFFFFFFFFFFFFFFF8);
  void *v13 = *v14;
  swift_retain();
  swift_release();
  v13[1] = v14[1];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t initializeWithCopy for WeatherComponentButtonAccessibilityLabelModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  char v6 = *(unsigned char *)(a2 + 16);
  sub_100190CC4(*(void *)a2, v5, v6);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(unsigned char *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  if (v7)
  {
    uint64_t v8 = *(void *)(a2 + 32);
    uint64_t v9 = *(void *)(a2 + 40);
    char v10 = *(unsigned char *)(a2 + 48);
    sub_100190CC4(v8, v9, v10);
    *(void *)(a1 + 32) = v8;
    *(void *)(a1 + 40) = v9;
    *(unsigned char *)(a1 + 48) = v10;
    *(void *)(a1 + 56) = v7;
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v11 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v11;
  }
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_retain();
  return a1;
}

uint64_t sub_1000AD05C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v29 = a2;
  sub_100179C0C();
  uint64_t v4 = v3;
  uint64_t v6 = *(void *)(v5 + 64);
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v9 = *(void *)(v8 + 24);
  uint64_t v32 = *(void *)(v8 + 16);
  uint64_t v27 = v32;
  uint64_t v10 = v9;
  uint64_t v26 = v9;
  swift_getOpaqueTypeMetadata2();
  type metadata accessor for ModifiedContent();
  uint64_t v33 = &type metadata for Bool;
  uint64_t v34 = v10;
  uint64_t v35 = &protocol witness table for Bool;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v31 = &protocol witness table for _AppearanceActionModifier;
  v25[1] = swift_getWitnessTable();
  uint64_t v11 = type metadata accessor for ScrollEventStateReader();
  sub_100179C0C();
  uint64_t v13 = v12;
  uint64_t v15 = __chkstk_darwin(v14);
  uint64_t v17 = (char *)v25 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v19 = (char *)v25 - v18;
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))((char *)v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v28, a1);
  unint64_t v20 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v21 = swift_allocObject();
  uint64_t v22 = v26;
  *(void *)(v21 + 16) = v27;
  *(void *)(v21 + 24) = v22;
  (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v21 + v20, (char *)v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  ScrollEventStateReader.init(content:)();
  swift_getWitnessTable();
  sub_100121584((uint64_t)v17, v11, (uint64_t)v19);
  BOOL v23 = *(void (**)(char *, uint64_t))(v13 + 8);
  v23(v17, v11);
  sub_100121584((uint64_t)v19, v11, v29);
  return ((uint64_t (*)(char *, uint64_t))v23)(v19, v11);
}

uint64_t sub_1000AD324@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v30 = a1;
  uint64_t v33 = a2;
  uint64_t v4 = type metadata accessor for ConditionModifier(0);
  uint64_t v32 = *(void *)(v4 - 8);
  uint64_t v5 = *(void *)(v32 + 64);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10017DF08(&qword_100E644F0);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10017DF08(&qword_100E644F8);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = sub_10017DF08(&qword_100E64500);
  __chkstk_darwin(v31);
  uint64_t v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v15 = *(unsigned __int8 *)(v3 + *(int *)(v4 + 24));
  uint64_t v16 = 0;
  if (v15 == 1)
  {
    uint64_t v17 = (uint64_t *)(v3 + *(int *)(v4 + 40));
    uint64_t v18 = *v17;
    uint64_t v19 = v17[1];
    uint64_t v34 = v18;
    uint64_t v35 = v19;
    sub_10017DF08(&qword_100E64490);
    State.wrappedValue.getter();
    uint64_t v16 = v36;
  }
  uint64_t v20 = sub_10017DF08(&qword_100E64508);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v20 - 8) + 16))(v9, v30, v20);
  uint64_t v21 = &v9[*(int *)(v7 + 36)];
  *(void *)uint64_t v21 = 0;
  *((void *)v21 + 1) = v16;
  double v22 = 1.0;
  if (v15)
  {
    sub_1000AD6D8();
    double v22 = v23;
  }
  sub_10006DF38((uint64_t)v9, (uint64_t)v12, &qword_100E644F0);
  *(double *)&v12[*(int *)(v10 + 36)] = v22;
  sub_100178110((uint64_t)v9, &qword_100E644F0);
  sub_10014D0EC(v3, (uint64_t)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), (void (*)(void))type metadata accessor for ConditionModifier);
  unint64_t v24 = (*(unsigned __int8 *)(v32 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80);
  uint64_t v25 = swift_allocObject();
  sub_10014DEEC((uint64_t)v6, v25 + v24, (void (*)(void))type metadata accessor for ConditionModifier);
  sub_10014D0EC(v3, (uint64_t)v6, (void (*)(void))type metadata accessor for ConditionModifier);
  uint64_t v26 = swift_allocObject();
  sub_10014DEEC((uint64_t)v6, v26 + v24, (void (*)(void))type metadata accessor for ConditionModifier);
  sub_10006DF38((uint64_t)v12, (uint64_t)v14, &qword_100E644F8);
  uint64_t v27 = (uint64_t (**)(uint64_t))&v14[*(int *)(v31 + 36)];
  *uint64_t v27 = sub_1002131A0;
  v27[1] = (uint64_t (*)(uint64_t))v25;
  void v27[2] = sub_1002141D4;
  v27[3] = (uint64_t (*)(uint64_t))v26;
  sub_100178110((uint64_t)v12, &qword_100E644F8);
  return sub_10024D364((uint64_t)v14, v33, &qword_100E64500);
}

uint64_t sub_1000AD6D8()
{
  uint64_t v0 = type metadata accessor for LocationHeaderViewMeasurements(0);
  uint64_t v1 = v0 - 8;
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  sub_1000E71B8();
  swift_release();
  sub_1000E72E0();
  swift_release();
  type metadata accessor for ConditionModifier(0);
  sub_1000E72AC();
  swift_retain();
  sub_1000E71B8();
  swift_release();
  sub_1000E7380();
  swift_release();
  sub_1000E71D0((uint64_t *)&v3[*(int *)(v1 + 40)]);
  sub_10014CC74((uint64_t)v3, (void (*)(void))type metadata accessor for LocationHeaderViewMeasurements);
  return CGFloat.clamp(min:max:)();
}

uint64_t sub_1000AD86C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)a2;
  char v7 = *(unsigned char *)(a2 + 8);
  sub_100195B7C(*(void *)a2, v7);
  uint64_t v8 = *(void *)a1;
  char v9 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v6;
  *(unsigned char *)(a1 + 8) = v7;
  sub_10018F6D8(v8, v9);
  uint64_t v10 = *(void *)(a2 + 16);
  char v11 = *(unsigned char *)(a2 + 24);
  sub_100195B7C(v10, v11);
  uint64_t v12 = *(void *)(a1 + 16);
  char v13 = *(unsigned char *)(a1 + 24);
  *(void *)(a1 + 16) = v10;
  *(unsigned char *)(a1 + 24) = v11;
  sub_10018F6D8(v12, v13);
  if (a1 != a2)
  {
    uint64_t v14 = a3[6];
    int v15 = (void *)(a1 + v14);
    uint64_t v16 = (void *)(a2 + v14);
    sub_100178110(a1 + v14, &qword_100E62CB8);
    sub_10017DF08(&qword_100E62CB8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v17 = type metadata accessor for LayoutDirection();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
    }
    else
    {
      *int v15 = *v16;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v18 = a3[7];
    uint64_t v19 = (void *)(a1 + v18);
    uint64_t v20 = (void *)(a2 + v18);
    sub_100178110(a1 + v18, &qword_100E63BC8);
    sub_10017DF08(&qword_100E63BC8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v21 = type metadata accessor for ContentSizeCategory();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v21 - 8) + 16))(v19, v20, v21);
    }
    else
    {
      void *v19 = *v20;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v22 = a3[8];
  uint64_t v23 = a1 + v22;
  uint64_t v24 = a2 + v22;
  uint64_t v25 = *(void *)v24;
  char v26 = *(unsigned char *)(v24 + 8);
  sub_100195B7C(*(void *)v24, v26);
  uint64_t v27 = *(void *)v23;
  char v28 = *(unsigned char *)(v23 + 8);
  *(void *)uint64_t v23 = v25;
  *(unsigned char *)(v23 + 8) = v26;
  sub_10018F6D8(v27, v28);
  uint64_t v29 = a3[9];
  uint64_t v30 = a1 + v29;
  uint64_t v31 = a2 + v29;
  uint64_t v32 = *(void *)v31;
  char v33 = *(unsigned char *)(v31 + 8);
  sub_100195B7C(*(void *)v31, v33);
  uint64_t v34 = *(void *)v30;
  char v35 = *(unsigned char *)(v30 + 8);
  *(void *)uint64_t v30 = v32;
  *(unsigned char *)(v30 + 8) = v33;
  sub_10018F6D8(v34, v35);
  if (a1 != a2)
  {
    uint64_t v36 = a3[10];
    uint64_t v37 = a1 + v36;
    uint64_t v38 = a2 + v36;
    sub_100178110(a1 + v36, &qword_100E63BD0);
    sub_10017DF08(&qword_100E63BD0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(void *)uint64_t v37 = *(void *)v38;
      *(void *)(v37 + 8) = *(void *)(v38 + 8);
      *(unsigned char *)(v37 + 16) = *(unsigned char *)(v38 + 16);
      *(unsigned char *)(v37 + 17) = *(unsigned char *)(v38 + 17);
      *(unsigned char *)(v37 + 18) = *(unsigned char *)(v38 + 18);
      uint64_t v39 = *(int *)(type metadata accessor for DisplayMetrics() + 36);
      uint64_t v40 = v37 + v39;
      uint64_t v41 = v38 + v39;
      uint64_t v42 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 16))(v40, v41, v42);
    }
    else
    {
      *(void *)uint64_t v37 = *(void *)v38;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v43 = a3[11];
  uint64_t v44 = a1 + v43;
  uint64_t v45 = a2 + v43;
  uint64_t v46 = *(void *)v45;
  char v47 = *(unsigned char *)(v45 + 8);
  sub_100195B7C(*(void *)v45, v47);
  uint64_t v48 = *(void *)v44;
  char v49 = *(unsigned char *)(v44 + 8);
  *(void *)uint64_t v44 = v46;
  *(unsigned char *)(v44 + 8) = v47;
  sub_10018F6D8(v48, v49);
  if (a1 != a2)
  {
    uint64_t v50 = a3[12];
    uint64_t v51 = (void *)(a1 + v50);
    uint64_t v52 = (void *)(a2 + v50);
    sub_100178110(a1 + v50, &qword_100E63BD8);
    sub_10017DF08(&qword_100E63BD8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v53 = type metadata accessor for Font.Context();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v53 - 8) + 16))(v51, v52, v53);
    }
    else
    {
      *uint64_t v51 = *v52;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v54 = a3[13];
  uint64_t v55 = a1 + v54;
  uint64_t v56 = a2 + v54;
  uint64_t v57 = *(void *)v56;
  char v58 = *(unsigned char *)(v56 + 8);
  sub_100195B7C(*(void *)v56, v58);
  uint64_t v59 = *(void *)v55;
  char v60 = *(unsigned char *)(v55 + 8);
  *(void *)uint64_t v55 = v57;
  *(unsigned char *)(v55 + 8) = v58;
  sub_10018F6D8(v59, v60);
  uint64_t v61 = a3[14];
  uint64_t v62 = a1 + v61;
  uint64_t v63 = a2 + v61;
  uint64_t v64 = *(void *)v63;
  uint64_t v65 = *(void *)(v63 + 8);
  uint64_t v66 = *(void *)(v63 + 16);
  uint64_t v67 = *(void *)(v63 + 24);
  char v68 = *(unsigned char *)(v63 + 32);
  sub_100190CD4(*(void *)v63, v65, v66, v67, v68);
  uint64_t v69 = *(void *)v62;
  uint64_t v70 = *(void *)(v62 + 8);
  uint64_t v71 = *(void *)(v62 + 16);
  uint64_t v72 = *(void *)(v62 + 24);
  char v73 = *(unsigned char *)(v62 + 32);
  *(void *)uint64_t v62 = v64;
  *(void *)(v62 + 8) = v65;
  *(void *)(v62 + 16) = v66;
  *(void *)(v62 + 24) = v67;
  *(unsigned char *)(v62 + 32) = v68;
  sub_100191934(v69, v70, v71, v72, v73);
  uint64_t v74 = a3[15];
  uint64_t v144 = a3;
  uint64_t v75 = a1 + v74;
  uint64_t v76 = a2 + v74;
  uint64_t v77 = *(void *)v76;
  uint64_t v78 = *(void *)(v76 + 8);
  uint64_t v79 = *(void *)(v76 + 16);
  uint64_t v80 = *(void *)(v76 + 24);
  uint64_t v81 = *(void *)(v76 + 32);
  uint64_t v82 = *(void *)(v76 + 40);
  char v83 = *(unsigned char *)(v76 + 48);
  sub_100193D54(*(void *)v76, v78, v79, v80, v81, v82, v83);
  uint64_t v84 = *(void *)v75;
  uint64_t v85 = *(void *)(v75 + 8);
  uint64_t v86 = *(void *)(v75 + 16);
  uint64_t v87 = *(void *)(v75 + 24);
  uint64_t v88 = *(void *)(v75 + 32);
  uint64_t v89 = *(void *)(v75 + 40);
  char v90 = *(unsigned char *)(v75 + 48);
  *(void *)uint64_t v75 = v77;
  *(void *)(v75 + 8) = v78;
  *(void *)(v75 + 16) = v79;
  *(void *)(v75 + 24) = v80;
  *(void *)(v75 + 32) = v81;
  *(void *)(v75 + 40) = v82;
  *(unsigned char *)(v75 + 48) = v83;
  sub_10014DC00(v84, v85, v86, v87, v88, v89, v90);
  uint64_t v91 = v144[16];
  uint64_t v92 = a1 + v91;
  uint64_t v93 = a2 + v91;
  *(void *)uint64_t v92 = *(void *)(a2 + v91);
  *(void *)(v92 + 8) = *(void *)(a2 + v91 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v94 = *(void *)(v93 + 16);
  uint64_t v95 = *(void *)(v93 + 24);
  uint64_t v96 = *(void *)(v93 + 32);
  uint64_t v97 = *(void *)(v93 + 40);
  LOBYTE(v81) = *(unsigned char *)(v93 + 48);
  sub_100193004(v94, v95, v96, v97, v81);
  uint64_t v98 = *(void *)(v92 + 16);
  uint64_t v99 = *(void *)(v92 + 24);
  uint64_t v100 = *(void *)(v92 + 32);
  uint64_t v101 = *(void *)(v92 + 40);
  *(void *)(v92 + 16) = v94;
  *(void *)(v92 + 24) = v95;
  *(void *)(v92 + 32) = v96;
  *(void *)(v92 + 40) = v97;
  char v102 = *(unsigned char *)(v92 + 48);
  *(unsigned char *)(v92 + 48) = v81;
  sub_100191D78(v98, v99, v100, v101, v102);
  *(void *)(v92 + 56) = *(void *)(v93 + 56);
  *(void *)(v92 + 64) = *(void *)(v93 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v92 + 72) = *(void *)(v93 + 72);
  *(void *)(v92 + 80) = *(void *)(v93 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v92 + 88) = *(void *)(v93 + 88);
  *(void *)(v92 + 96) = *(void *)(v93 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v92 + 104) = *(void *)(v93 + 104);
  *(void *)(v92 + 112) = *(void *)(v93 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v92 + 120) = *(void *)(v93 + 120);
  *(void *)(v92 + 128) = *(void *)(v93 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v92 + 136) = *(unsigned char *)(v93 + 136);
  *(unsigned char *)(v92 + 137) = *(unsigned char *)(v93 + 137);
  *(unsigned char *)(v92 + 138) = *(unsigned char *)(v93 + 138);
  *(void *)(v92 + 144) = *(void *)(v93 + 144);
  *(void *)(v92 + 152) = *(void *)(v93 + 152);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v92 + 160) = *(unsigned char *)(v93 + 160);
  *(unsigned char *)(v92 + 161) = *(unsigned char *)(v93 + 161);
  uint64_t v103 = v144[17];
  uint64_t v104 = a1 + v103;
  uint64_t v105 = a2 + v103;
  uint64_t v106 = *(void *)(a2 + v103);
  uint64_t v107 = *(void *)(a2 + v103 + 8);
  LOBYTE(v96) = *(unsigned char *)(a2 + v103 + 16);
  sub_100190CC4(v106, v107, v96);
  uint64_t v108 = *(void *)v104;
  uint64_t v109 = *(void *)(v104 + 8);
  char v110 = *(unsigned char *)(v104 + 16);
  *(void *)uint64_t v104 = v106;
  *(void *)(v104 + 8) = v107;
  *(unsigned char *)(v104 + 16) = v96;
  sub_100191924(v108, v109, v110);
  *(void *)(v104 + 24) = *(void *)(v105 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v111 = v144[18];
  uint64_t v112 = a1 + v111;
  uint64_t v113 = a2 + v111;
  uint64_t v114 = *(void *)(a2 + v111);
  uint64_t v115 = *(void *)(a2 + v111 + 8);
  LOBYTE(v96) = *(unsigned char *)(a2 + v111 + 16);
  sub_100190CC4(v114, v115, v96);
  uint64_t v116 = *(void *)v112;
  uint64_t v117 = *(void *)(v112 + 8);
  char v118 = *(unsigned char *)(v112 + 16);
  *(void *)uint64_t v112 = v114;
  *(void *)(v112 + 8) = v115;
  *(unsigned char *)(v112 + 16) = v96;
  sub_100191924(v116, v117, v118);
  *(void *)(v112 + 24) = *(void *)(v113 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v119 = v144[19];
  uint64_t v120 = a1 + v119;
  uint64_t v121 = a2 + v119;
  uint64_t v122 = *(void *)(a1 + v119 + 24);
  uint64_t v123 = *(void *)(a2 + v119 + 24);
  if (v122)
  {
    if (v123)
    {
      uint64_t v124 = *(void *)v121;
      uint64_t v125 = *(void *)(v121 + 8);
      char v126 = *(unsigned char *)(v121 + 16);
      sub_100190CC4(*(void *)v121, v125, v126);
      uint64_t v127 = *(void *)v120;
      uint64_t v128 = *(void *)(v120 + 8);
      char v129 = *(unsigned char *)(v120 + 16);
      *(void *)uint64_t v120 = v124;
      *(void *)(v120 + 8) = v125;
      *(unsigned char *)(v120 + 16) = v126;
      sub_100191924(v127, v128, v129);
      *(void *)(v120 + 24) = *(void *)(v121 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_10024ADC8(v120);
      long long v133 = *(_OWORD *)(v121 + 16);
      *(_OWORD *)uint64_t v120 = *(_OWORD *)v121;
      *(_OWORD *)(v120 + 16) = v133;
    }
  }
  else if (v123)
  {
    uint64_t v130 = *(void *)v121;
    uint64_t v131 = *(void *)(v121 + 8);
    char v132 = *(unsigned char *)(v121 + 16);
    sub_100190CC4(*(void *)v121, v131, v132);
    *(void *)uint64_t v120 = v130;
    *(void *)(v120 + 8) = v131;
    *(unsigned char *)(v120 + 16) = v132;
    *(void *)(v120 + 24) = *(void *)(v121 + 24);
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v134 = *(_OWORD *)(v121 + 16);
    *(_OWORD *)uint64_t v120 = *(_OWORD *)v121;
    *(_OWORD *)(v120 + 16) = v134;
  }
  *(void *)(a1 + v144[20]) = *(void *)(a2 + v144[20]);
  uint64_t v135 = v144[21];
  uint64_t v136 = a1 + v135;
  uint64_t v137 = a2 + v135;
  uint64_t v138 = type metadata accessor for Text.Measurements();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v138 - 8) + 24))(v136, v137, v138);
  *(void *)(a1 + v144[22]) = *(void *)(a2 + v144[22]);
  uint64_t v139 = v144[23];
  uint64_t v140 = a1 + v139;
  uint64_t v141 = a2 + v139;
  uint64_t v142 = sub_10017DF08(&qword_100E63BE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v142 - 8) + 24))(v140, v141, v142);
  return a1;
}

uint64_t sub_1000AE0C8@<X0>(void *a1@<X0>, BOOL *a2@<X8>)
{
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E981E8);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v7)
  {
    sub_1001B1E64(v6, v7);
    sub_1000AE7B8((uint64_t)v5);
    BOOL v4 = v5[3] != 0;
    sub_1000AE168((uint64_t)v5);
    uint64_t result = _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v6);
    *a2 = v4;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1000AE168(uint64_t a1)
{
  uint64_t v2 = sub_10017DF08(&qword_100EAA458);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1000AE1C8()
{
  uint64_t result = sub_1000AE218();
  if (!result)
  {
    uint64_t result = sub_1000AEB8C();
    if (!result)
    {
      return sub_1000E966C();
    }
  }
  return result;
}

uint64_t sub_1000AE218()
{
  uint64_t v1 = sub_10017DF08(&qword_100E663F0);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v48 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10017DF08(&qword_100E66418);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10017DF08(&qword_100E66420);
  __chkstk_darwin(v7 - 8);
  char v9 = (char *)&v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v48 - v11;
  uint64_t v13 = sub_10017DF08(&qword_100E66428);
  __chkstk_darwin(v13 - 8);
  int v15 = (char *)&v48 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_10017DF08(&qword_100E66430);
  __chkstk_darwin(v16 - 8);
  uint64_t v18 = (char *)&v48 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_10017DF08(&qword_100E66438);
  __chkstk_darwin(v19 - 8);
  uint64_t v21 = (char *)&v48 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_10017DF08(&qword_100E66440);
  __chkstk_darwin(v22 - 8);
  uint64_t v24 = (char *)&v48 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001B1E64((void *)(v0 + 24), *(void *)(v0 + 48));
  sub_1000AE7B8((uint64_t)&v54);
  if (v55)
  {
    sub_1001262E4(&v54, (uint64_t)v56);
    uint64_t v50 = sub_1000E966C();
    uint64_t v25 = type metadata accessor for AppConfigurationState();
    uint64_t v53 = v24;
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v24, 1, 1, v25);
    uint64_t v26 = type metadata accessor for EnvironmentState();
    uint64_t v51 = v21;
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v21, 1, 1, v26);
    uint64_t v27 = (uint64_t)v18;
    uint64_t v28 = v57;
    uint64_t v29 = v58;
    sub_1001B1E64(v56, v57);
    (*(void (**)(uint64_t, uint64_t))(v29 + 16))(v28, v29);
    uint64_t v30 = type metadata accessor for NotificationsOptInState();
    uint64_t v52 = v15;
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v15, 1, 1, v30);
    uint64_t v31 = v57;
    uint64_t v32 = v58;
    sub_1001B1E64(v56, v57);
    (*(void (**)(uint64_t, uint64_t))(v32 + 24))(v31, v32);
    uint64_t v33 = type metadata accessor for TimeState();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v33) == 1)
    {
      uint64_t v34 = sub_1000E966C();
      sub_10018D110(v34 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_time, (uint64_t)v12, (void (*)(void))type metadata accessor for TimeState);
      swift_release();
      sub_1001781AC((uint64_t)v9, &qword_100E66420);
    }
    else
    {
      sub_10017DE8C((uint64_t)v9, (uint64_t)v12, (void (*)(void))type metadata accessor for TimeState);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v12, 0, 1, v33);
    uint64_t v36 = type metadata accessor for ViewState(0);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v6, 1, 1, v36);
    uint64_t v37 = type metadata accessor for ModalViewState(0);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v3, 1, 1, v37);
    uint64_t v38 = v57;
    uint64_t v39 = v58;
    uint64_t v48 = v12;
    sub_1001B1E64(v56, v57);
    uint64_t v40 = (*(uint64_t (**)(uint64_t, uint64_t))(v39 + 32))(v38, v39);
    uint64_t v42 = v41;
    uint64_t v47 = (uint64_t)v12;
    uint64_t v43 = (uint64_t)v52;
    uint64_t v44 = (uint64_t)v51;
    uint64_t v49 = sub_1001659F0(0, 3, (uint64_t)v53, (uint64_t)v51, v27, 0, 0, 0, 0, (uint64_t)v52, v47, (uint64_t)v6, (uint64_t)v3, v40, v41, v45, v46, 0, 0,
            0,
            v50);
    sub_1007A3AC8(v40, v42);
    swift_release();
    sub_1001781AC((uint64_t)v3, &qword_100E663F0);
    sub_1001781AC((uint64_t)v6, &qword_100E66418);
    sub_1001781AC((uint64_t)v48, &qword_100E66420);
    sub_1001781AC(v43, &qword_100E66428);
    sub_1001781AC(v27, &qword_100E66430);
    sub_1001781AC(v44, &qword_100E66438);
    sub_1001781AC((uint64_t)v53, &qword_100E66440);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v56);
    return v49;
  }
  else
  {
    sub_1001781AC((uint64_t)&v54, &qword_100EAA458);
    return 0;
  }
}

double sub_1000AE7B8@<D0>(uint64_t a1@<X8>)
{
  if (qword_100E625A8 != -1) {
    swift_once();
  }
  sub_1000AE8F8();
  Configurable.setting<A>(_:)();
  swift_bridgeObjectRetain();
  char v2 = sub_1000AEB18(v6[0]);
  if (v2 == 2)
  {
    uint64_t v3 = type metadata accessor for LocalPreset();
    swift_allocObject();
    uint64_t v4 = sub_1000AE98C(v6[0]._countAndFlagsBits, (unint64_t)v6[0]._object);
    if (v4)
    {
      *(void *)(a1 + 24) = v3;
      *(void *)(a1 + 32) = &off_100E27C78;
      *(void *)a1 = v4;
    }
    else
    {
      *(void *)(a1 + 32) = 0;
      double result = 0.0;
      *(_OWORD *)a1 = 0u;
      *(_OWORD *)(a1 + 16) = 0u;
    }
  }
  else
  {
    sub_100A39674(v2 & 1, &v6[0]._countAndFlagsBits);
    swift_bridgeObjectRelease();
    sub_1001262E4((long long *)&v6[0]._countAndFlagsBits, a1);
  }
  return result;
}

unint64_t sub_1000AE8F8()
{
  unint64_t result = qword_100EADC80;
  if (!qword_100EADC80)
  {
    type metadata accessor for DemoPresetProvider();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EADC80);
  }
  return result;
}

uint64_t type metadata accessor for LocalPreset()
{
  uint64_t result = qword_100E95560;
  if (!qword_100E95560) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1000AE98C(uint64_t a1, unint64_t a2)
{
  sub_10017C924();
  uint64_t v5 = sub_10017DF08(&qword_100E66430);
  sub_10017E904(v5, v6, v7, v5);
  uint64_t v8 = sub_10017DF08(&qword_100E66420);
  sub_10017E904(v8, v9, v10, v8);
  uint64_t v11 = v2 + OBJC_IVAR____TtC7Weather11LocalPreset____lazy_storage___weatherDataState;
  *(_OWORD *)uint64_t v11 = xmmword_100C3E060;
  *(void *)(v11 + 16) = 0;
  *(void *)(v11 + 24) = 0;
  *(void *)(v2 + OBJC_IVAR____TtC7Weather11LocalPreset____lazy_storage___preset) = 1;
  uint64_t v12 = sub_10017DF08(&qword_100E72B30);
  sub_10017E904(v12, v13, v14, v12);
  uint64_t v15 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0) {
    uint64_t v15 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v15)
  {
    *(void *)(v2 + 16) = a1;
    *(void *)(v2 + 24) = a2;
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_1001781AC(v2 + OBJC_IVAR____TtC7Weather11LocalPreset____lazy_storage___locations, &qword_100E94A40);
    sub_1001781AC(v2 + OBJC_IVAR____TtC7Weather11LocalPreset____lazy_storage___timeState, &qword_100E94A38);
    sub_1000AEB6C(*(void *)(v2 + OBJC_IVAR____TtC7Weather11LocalPreset____lazy_storage___weatherDataState), *(void *)(v2 + OBJC_IVAR____TtC7Weather11LocalPreset____lazy_storage___weatherDataState + 8));
    sub_1000AEB7C(*(void *)(v2 + OBJC_IVAR____TtC7Weather11LocalPreset____lazy_storage___preset));
    sub_1001781AC(v2 + OBJC_IVAR____TtC7Weather11LocalPreset____lazy_storage___loadedData, &qword_100E95620);
    sub_10017C924();
    swift_deallocPartialClassInstance();
    return 0;
  }
  return v2;
}

uint64_t sub_1000AEB04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100630EE8);
}

uint64_t sub_1000AEB18(Swift::String string)
{
  object = string._object;
  v2._uint64_t countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  Swift::Int v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_100E07F38, v2);
  swift_bridgeObjectRelease();
  if (v3 == 1) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = 2;
  }
  if (v3) {
    return v4;
  }
  else {
    return 0;
  }
}

uint64_t sub_1000AEB6C(uint64_t a1, uint64_t a2)
{
  if (a2 != 1) {
    return sub_1007A3AC8(a1, a2);
  }
  return a1;
}

uint64_t sub_1000AEB7C(uint64_t result)
{
  if (result != 1) {
    return swift_release();
  }
  return result;
}

uint64_t sub_1000AEB8C()
{
  uint64_t v1 = sub_10017DF08(&qword_100E981C8);
  __chkstk_darwin(v1 - 8);
  Swift::Int v3 = (char *)&v43 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10017DF08(&qword_100EB7568);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10017DF08(&qword_100E981C0);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100E62B20 != -1) {
    swift_once();
  }
  sub_1001246C8(&qword_100EB7570, &qword_100E97FF0);
  Configurable.setting<A>(_:)();
  if (v50 != 1) {
    return 0;
  }
  if (*(unsigned char *)(v0 + 32) == 1)
  {
    type metadata accessor for SettingReader();
    static SettingReader.shared.getter();
    if (qword_100E624E0 != -1) {
      swift_once();
    }
    char v10 = SettingReader.isEnabled(_:with:)();
    swift_release();
    if (v10)
    {
      if (qword_100E627C8 != -1) {
        swift_once();
      }
      uint64_t v11 = type metadata accessor for Logger();
      sub_1002102B0(v11, (uint64_t)qword_100F51E70);
      uint64_t v12 = Logger.logObject.getter();
      os_log_type_t v13 = static os_log_type_t.default.getter();
      if (!os_log_type_enabled(v12, v13)) {
        goto LABEL_32;
      }
      uint64_t v14 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v14 = 0;
      uint64_t v15 = "Performance Test: Not restoring state.";
LABEL_30:
      _os_log_impl((void *)&_mh_execute_header, v12, v13, v15, v14, 2u);
LABEL_31:
      swift_slowDealloc();
      goto LABEL_32;
    }
  }
  uint64_t v16 = *(void *)(v0 + 16);
  uint64_t v48 = sub_100BCD004();
  if (!v17)
  {
    if (qword_100E627C8 != -1) {
      swift_once();
    }
    uint64_t v25 = type metadata accessor for Logger();
    sub_1002102B0(v25, (uint64_t)qword_100F51E70);
    goto LABEL_28;
  }
  unint64_t v18 = (unint64_t)v17;
  BOOL v19 = v48 == qword_100E6DFC0 && v17 == off_100E6DFC8;
  if (!v19 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
  {
    if (qword_100E627C8 != -1) {
      swift_once();
    }
    uint64_t v32 = type metadata accessor for Logger();
    sub_1002102B0(v32, (uint64_t)qword_100F51E70);
    swift_bridgeObjectRetain();
    uint64_t v12 = Logger.logObject.getter();
    os_log_type_t v33 = static os_log_type_t.default.getter();
    if (!os_log_type_enabled(v12, v33))
    {

      swift_bridgeObjectRelease_n();
      return 0;
    }
    uint64_t v34 = swift_slowAlloc();
    uint64_t v50 = swift_slowAlloc();
    *(_DWORD *)uint64_t v34 = 136315394;
    uint64_t v35 = qword_100E6DFC0;
    uint64_t v36 = off_100E6DFC8;
    swift_bridgeObjectRetain();
    uint64_t v49 = sub_10016414C(v35, (unint64_t)v36, &v50);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v34 + 12) = 2082;
    swift_bridgeObjectRetain();
    uint64_t v49 = sub_10016414C(v48, v18, &v50);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v12, v33, "App state schema hash doesn't match, dropped persisted state. app state schema hash [%s], persisted state schema hash [%{public}s]", (uint8_t *)v34, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    goto LABEL_31;
  }
  uint64_t v47 = v16;
  if (qword_100E627C8 != -1) {
    swift_once();
  }
  uint64_t v20 = type metadata accessor for Logger();
  uint64_t v21 = sub_1002102B0(v20, (uint64_t)qword_100F51E70);
  swift_bridgeObjectRetain();
  uint64_t v22 = Logger.logObject.getter();
  os_log_type_t v23 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v22, v23))
  {
    uint64_t v24 = (uint8_t *)swift_slowAlloc();
    uint64_t v45 = swift_slowAlloc();
    uint64_t v50 = v45;
    uint64_t v46 = v21;
    uint64_t v44 = v24;
    *(_DWORD *)uint64_t v24 = 136446210;
    uint64_t v43 = v24 + 4;
    swift_bridgeObjectRetain();
    uint64_t v49 = sub_10016414C(v48, v18, &v50);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v22, v23, "Persisted state data schema hash matches app schema hash: [%{public}s]", v44, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  sub_100BCDB2C((uint64_t)v6);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v6, 1, v7) == 1)
  {
    sub_1001781AC((uint64_t)v6, &qword_100EB7568);
LABEL_28:
    uint64_t v12 = Logger.logObject.getter();
    os_log_type_t v13 = static os_log_type_t.default.getter();
    if (!os_log_type_enabled(v12, v13))
    {
LABEL_32:

      return 0;
    }
    uint64_t v14 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v14 = 0;
    uint64_t v15 = "Persisted state not found";
    goto LABEL_30;
  }
  sub_10024D364((uint64_t)v6, (uint64_t)v9, &qword_100E981C0);
  sub_10018D110((uint64_t)&v9[*(int *)(v7 + 72)], (uint64_t)v3, (void (*)(void))type metadata accessor for MainStateProcessingContext);
  uint64_t v28 = type metadata accessor for MainStateProcessingContext();
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v3, 0, 1, v28);
  uint64_t v26 = sub_1007FAF94(*((void *)v9 + 2), (uint64_t)v3);
  sub_1001781AC((uint64_t)v3, &qword_100E981C8);
  if (!v26)
  {
    uint64_t v37 = Logger.logObject.getter();
    uint64_t v38 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v37, (os_log_type_t)v38))
    {
      uint64_t v39 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v39 = 0;
      _os_log_impl((void *)&_mh_execute_header, v37, (os_log_type_t)v38, "Drop persisted state", v39, 2u);
      swift_slowDealloc();
    }

    sub_1001781AC((uint64_t)v9, &qword_100E981C0);
    return 0;
  }
  if (v26 == 1)
  {
    uint64_t v29 = Logger.logObject.getter();
    os_log_type_t v30 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v29, v30))
    {
      uint64_t v31 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v31 = 0;
      _os_log_impl((void *)&_mh_execute_header, v29, v30, "Found persisted state for restoration", v31, 2u);
      swift_slowDealloc();
    }

    uint64_t v26 = *((void *)v9 + 2);
    swift_retain();
  }
  else
  {
    uint64_t v40 = Logger.logObject.getter();
    os_log_type_t v41 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v40, v41))
    {
      uint64_t v42 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v42 = 0;
      _os_log_impl((void *)&_mh_execute_header, v40, v41, "Found persisted state for restoration", v42, 2u);
      swift_slowDealloc();
    }
  }
  sub_1001781AC((uint64_t)v9, &qword_100E981C0);
  return v26;
}

uint64_t sub_1000AF4B8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for WeatherDataAction();
  __chkstk_darwin(v2 - 8);
  uint64_t v24 = (uint64_t)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = type metadata accessor for MainAction();
  uint64_t v4 = *(void *)(v26 - 8);
  __chkstk_darwin(v26);
  uint64_t v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v22 - v8;
  uint64_t v10 = *(void *)(a1 + 16);
  uint64_t v27 = _swiftEmptyArrayStorage;
  sub_1001EA6A0(0, v10, 0);
  uint64_t v22 = a1;
  if (v10)
  {
    uint64_t v11 = a1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    uint64_t v25 = *(void *)(v4 + 72);
    swift_bridgeObjectRetain();
    unint64_t v23 = (unint64_t)"actions %{private}s";
    do
    {
      sub_10015B0C4(v11, (uint64_t)v9);
      sub_10015B0C4((uint64_t)v9, (uint64_t)v6);
      if (swift_getEnumCaseMultiPayload() == 9)
      {
        uint64_t v12 = v24;
        sub_100164D60((uint64_t)v6, v24, (uint64_t (*)(void))type metadata accessor for WeatherDataAction);
        uint64_t v13 = sub_10016552C();
        unint64_t v15 = v14;
        sub_100158CCC(v12, (void (*)(void))type metadata accessor for WeatherDataAction);
      }
      else
      {
        sub_100158CCC((uint64_t)v6, (void (*)(void))type metadata accessor for MainAction);
        unint64_t v15 = v23 | 0x8000000000000000;
        uint64_t v13 = 0xD000000000000016;
      }
      sub_100158CCC((uint64_t)v9, (void (*)(void))type metadata accessor for MainAction);
      uint64_t v16 = v27;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1001EA6A0(0, v16[2] + 1, 1);
        uint64_t v16 = v27;
      }
      unint64_t v18 = v16[2];
      unint64_t v17 = v16[3];
      if (v18 >= v17 >> 1)
      {
        sub_1001EA6A0(v17 > 1, v18 + 1, 1);
        uint64_t v16 = v27;
      }
      void v16[2] = v18 + 1;
      BOOL v19 = &v16[2 * v18];
      uint64_t v19[4] = v13;
      void v19[5] = v15;
      v11 += v25;
      --v10;
    }
    while (v10);
  }
  else
  {
    uint64_t v16 = v27;
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  uint64_t v27 = v16;
  sub_10017DF08(&qword_100E91BC0);
  sub_1001246C8((unint64_t *)&qword_100E73CB0, &qword_100E91BC0);
  uint64_t v20 = BidirectionalCollection<>.joined(separator:)();
  swift_release();
  return v20;
}

uint64_t sub_1000AF7FC()
{
  uint64_t v0 = sub_10017DF08(&qword_100EA03A0);
  __chkstk_darwin(v0);
  uint64_t v2 = (uint64_t *)((char *)&v10 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v3 = sub_10017DF08(&qword_100EA03A8);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v7 = sub_1000AFA54();
  uint64_t v8 = static Color.clear.getter();
  if (v7)
  {
    uint64_t v10 = (void *)v8;
    type metadata accessor for LocationViewModel();
    View.setForegroundEffect(_:)();
    swift_release();
    (*(void (**)(uint64_t *, char *, uint64_t))(v4 + 16))(v2, v6, v3);
    swift_storeEnumTagMultiPayload();
    uint64_t v10 = &type metadata for Color;
    uint64_t v11 = &protocol witness table for Color;
    swift_getOpaqueTypeConformance2();
    _ConditionalContent<>.init(storage:)();
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  else
  {
    *uint64_t v2 = v8;
    swift_storeEnumTagMultiPayload();
    uint64_t v10 = &type metadata for Color;
    uint64_t v11 = &protocol witness table for Color;
    swift_getOpaqueTypeConformance2();
    return _ConditionalContent<>.init(storage:)();
  }
}

uint64_t sub_1000AFA54()
{
  uint64_t v1 = type metadata accessor for ForegroundEffectConfigurationView();
  __chkstk_darwin(v1);
  uint64_t v3 = (char *)&v26 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Location.Identifier();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v26 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10017DF08(&qword_100E6DD18);
  uint64_t v8 = v7 - 8;
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t active = type metadata accessor for ActiveLocationModel(0);
  __chkstk_darwin(active - 8);
  uint64_t v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_10017DF08(&qword_100E6DC08);
  uint64_t v15 = __chkstk_darwin(v14 - 8);
  unint64_t v17 = (char *)&v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  BOOL v19 = (char *)&v26 - v18;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)&v26 - v18, v0, v4);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v19, 0, 1, v4);
  uint64_t v27 = v0;
  swift_retain();
  sub_1001362A4();
  swift_release();
  uint64_t v20 = (uint64_t)&v10[*(int *)(v8 + 56)];
  sub_100111070((uint64_t)v19, (uint64_t)v10);
  sub_1001373E4((uint64_t)v13, v20);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v10, 1, v4) != 1)
  {
    sub_100111070((uint64_t)v10, (uint64_t)v17);
    if (_s7Weather24LocationCompositionStateOwet_0(v20, 1, v4) != 1)
    {
      uint64_t v21 = v26;
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v26, v20, v4);
      sub_1001CF7B8();
      char v22 = dispatch thunk of static Equatable.== infix(_:_:)();
      unint64_t v23 = *(void (**)(char *, uint64_t))(v5 + 8);
      v23(v21, v4);
      sub_1001AB060((uint64_t)v19, &qword_100E6DC08);
      v23(v17, v4);
      sub_1001AB060((uint64_t)v10, &qword_100E6DC08);
      sub_1000AFE78(v27, (uint64_t)v3);
      if (v22) {
        goto LABEL_8;
      }
LABEL_9:
      uint64_t v24 = v3[*(int *)(type metadata accessor for LocationViewModel() + 68)];
      goto LABEL_10;
    }
    sub_1001AB060((uint64_t)v19, &qword_100E6DC08);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v17, v4);
LABEL_6:
    sub_1001AB060((uint64_t)v10, &qword_100E6DD18);
    sub_1000AFE78(v27, (uint64_t)v3);
    goto LABEL_9;
  }
  sub_1001AB060((uint64_t)v19, &qword_100E6DC08);
  if (_s7Weather24LocationCompositionStateOwet_0(v20, 1, v4) != 1) {
    goto LABEL_6;
  }
  sub_1001AB060((uint64_t)v10, &qword_100E6DC08);
  sub_1000AFE78(v27, (uint64_t)v3);
LABEL_8:
  uint64_t v24 = 1;
LABEL_10:
  sub_1000B07E0((uint64_t)v3, (void (*)(void))type metadata accessor for ForegroundEffectConfigurationView);
  return v24;
}

uint64_t sub_1000AFE78(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ForegroundEffectConfigurationView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000AFEDC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v74 = a1;
  uint64_t v73 = sub_10017DF08(&qword_100EA9058);
  sub_100162E4C();
  __chkstk_darwin(v2);
  sub_100109314();
  uint64_t v71 = v3;
  type metadata accessor for AppEntityVisualState();
  sub_100179C0C();
  uint64_t v65 = v5;
  uint64_t v66 = v4;
  __chkstk_darwin(v4);
  sub_100109314();
  uint64_t v64 = v6;
  uint64_t v70 = sub_10017DF08(&qword_100EA9060);
  sub_100179C0C();
  uint64_t v68 = v7;
  __chkstk_darwin(v8);
  sub_100162EF8();
  uint64_t v63 = v9;
  __chkstk_darwin(v10);
  uint64_t v67 = &v58[-v11];
  uint64_t v12 = type metadata accessor for LocationViewAppEntityView();
  __chkstk_darwin(v12);
  sub_100162EF8();
  uint64_t v69 = v13;
  __chkstk_darwin(v14);
  uint64_t v16 = &v58[-v15];
  uint64_t v17 = type metadata accessor for Location.Identifier();
  sub_100179C0C();
  uint64_t v62 = v18;
  __chkstk_darwin(v19);
  sub_100109314();
  uint64_t v61 = v20;
  uint64_t v21 = sub_10017DF08(&qword_100E6DD18);
  uint64_t v22 = v21 - 8;
  __chkstk_darwin(v21);
  uint64_t v24 = &v58[-((v23 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t active = type metadata accessor for ActiveLocationModel(0);
  __chkstk_darwin(active - 8);
  uint64_t v27 = &v58[-((v26 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v28 = sub_10017DF08(&qword_100E6DC08);
  uint64_t v29 = __chkstk_darwin(v28 - 8);
  uint64_t v31 = &v58[-((v30 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v32 = __chkstk_darwin(v29);
  uint64_t v34 = &v58[-v33];
  __chkstk_darwin(v32);
  uint64_t v36 = &v58[-v35];
  swift_retain();
  sub_1001362A4();
  swift_release();
  sub_1001373E4((uint64_t)v27, (uint64_t)v36);
  uint64_t v37 = type metadata accessor for LocationViewModel();
  sub_100111070(v1 + *(int *)(v37 + 20), (uint64_t)v34);
  uint64_t v38 = (uint64_t)&v24[*(int *)(v22 + 56)];
  sub_100111070((uint64_t)v34, (uint64_t)v24);
  uint64_t v72 = v36;
  sub_100111070((uint64_t)v36, v38);
  sub_10017A344((uint64_t)v24);
  if (v41)
  {
    sub_1001781AC((uint64_t)v34, &qword_100E6DC08);
    sub_10017A344(v38);
    if (v41)
    {
      sub_1001781AC((uint64_t)v24, &qword_100E6DC08);
      sub_1000B0970(v1, (uint64_t)v16);
      uint64_t v39 = v69;
      uint64_t v40 = v70;
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  sub_100111070((uint64_t)v24, (uint64_t)v31);
  sub_10017A344(v38);
  if (v41)
  {
    sub_1001781AC((uint64_t)v34, &qword_100E6DC08);
    (*(void (**)(unsigned char *, uint64_t))(v62 + 8))(v31, v17);
LABEL_9:
    sub_1001781AC((uint64_t)v24, &qword_100E6DD18);
    sub_1000B0970(v1, (uint64_t)v16);
    uint64_t v39 = v69;
    uint64_t v40 = v70;
LABEL_10:
    sub_1000B0888((uint64_t)v16, (void (*)(void))type metadata accessor for LocationViewAppEntityView);
    sub_1000B0970(v1, v39);
    uint64_t v42 = v71;
    goto LABEL_13;
  }
  uint64_t v44 = v61;
  uint64_t v43 = v62;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v62 + 32))(v61, v38, v17);
  sub_1000B0928((unint64_t *)&qword_100E63A30, (void (*)(uint64_t))&type metadata accessor for Location.Identifier);
  uint64_t v60 = v1;
  int v59 = dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t v45 = *(void (**)(uint64_t, uint64_t))(v43 + 8);
  v45(v44, v17);
  sub_1001781AC((uint64_t)v34, &qword_100E6DC08);
  v45((uint64_t)v31, v17);
  uint64_t v1 = v60;
  sub_1001781AC((uint64_t)v24, &qword_100E6DC08);
  sub_1000B0970(v1, (uint64_t)v16);
  uint64_t v39 = v69;
  uint64_t v40 = v70;
  if ((v59 & 1) == 0) {
    goto LABEL_10;
  }
LABEL_12:
  char v46 = v16[*(int *)(v37 + 68)];
  sub_1000B0888((uint64_t)v16, (void (*)(void))type metadata accessor for LocationViewAppEntityView);
  sub_1000B0970(v1, v39);
  uint64_t v42 = v71;
  if ((v46 & 1) == 0)
  {
    sub_1000B0888(v39, (void (*)(void))type metadata accessor for LocationViewAppEntityView);
    goto LABEL_16;
  }
LABEL_13:
  int v47 = *(unsigned __int8 *)(v39 + *(int *)(v37 + 68));
  sub_1000B0888(v39, (void (*)(void))type metadata accessor for LocationViewAppEntityView);
  if (v47 == 1)
  {
LABEL_16:
    uint64_t v76 = (void *)static Color.clear.getter();
    uint64_t v75 = &_swiftEmptyArrayStorage;
    sub_1000B0928(&qword_100EA9070, (void (*)(uint64_t))&type metadata accessor for AppEntityVisualState);
    sub_10017DF08(&qword_100EA9078);
    sub_1000B09D4();
    uint64_t v50 = v64;
    uint64_t v51 = v66;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    uint64_t v52 = type metadata accessor for LocationEntity();
    uint64_t v53 = sub_1000B0928(&qword_100EA9068, (void (*)(uint64_t))&type metadata accessor for LocationEntity);
    uint64_t v54 = v63;
    View.appEntity<A>(_:state:)();
    (*(void (**)(uint64_t, uint64_t))(v65 + 8))(v50, v51);
    swift_release();
    uint64_t v56 = v67;
    uint64_t v55 = v68;
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v68 + 32))(v67, v54, v40);
    (*(void (**)(uint64_t *, unsigned char *, uint64_t))(v55 + 16))(v42, v56, v40);
    swift_storeEnumTagMultiPayload();
    uint64_t v76 = &type metadata for Color;
    uint64_t v77 = v52;
    uint64_t v78 = &protocol witness table for Color;
    uint64_t v79 = v53;
    swift_getOpaqueTypeConformance2();
    _ConditionalContent<>.init(storage:)();
    (*(void (**)(unsigned char *, uint64_t))(v55 + 8))(v56, v40);
    return sub_1001781AC((uint64_t)v72, &qword_100E6DC08);
  }
  *uint64_t v42 = static Color.clear.getter();
  swift_storeEnumTagMultiPayload();
  uint64_t v48 = type metadata accessor for LocationEntity();
  uint64_t v49 = sub_1000B0928(&qword_100EA9068, (void (*)(uint64_t))&type metadata accessor for LocationEntity);
  uint64_t v76 = &type metadata for Color;
  uint64_t v77 = v48;
  uint64_t v78 = &protocol witness table for Color;
  uint64_t v79 = v49;
  swift_getOpaqueTypeConformance2();
  _ConditionalContent<>.init(storage:)();
  return sub_1001781AC((uint64_t)v72, &qword_100E6DC08);
}

uint64_t sub_1000B073C(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  sub_100162F0C();
  v3();
  return a1;
}

uint64_t sub_1000B0790(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100179DC0();
  sub_100162F0C();
  v3();
  return a1;
}

uint64_t sub_1000B07E0(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100179DC0();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_1000B0834(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  sub_100162F0C();
  v3();
  return a1;
}

uint64_t sub_1000B0888(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t type metadata accessor for ForegroundEffectConfigurationView()
{
  uint64_t result = qword_100EA0368;
  if (!qword_100EA0368) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1000B0928(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000B0970(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for LocationViewAppEntityView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_1000B09D4()
{
  unint64_t result = qword_100EA9080;
  if (!qword_100EA9080)
  {
    sub_10018C6DC(&qword_100EA9078);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA9080);
  }
  return result;
}

void sub_1000B0A28()
{
  sub_100162EA0();
  uint64_t v6 = v5;
  uint64_t v36 = sub_10017DF08(&qword_100E6B790);
  sub_100179C0C();
  __chkstk_darwin(v7);
  char v41 = (char *)v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001626D4();
  __chkstk_darwin(v9);
  uint64_t v40 = (char *)v35 - v10;
  sub_1001626D4();
  __chkstk_darwin(v11);
  sub_10016317C();
  uint64_t v12 = &_swiftEmptyArrayStorage;
  uint64_t v39 = v0;
  v35[0] = v6;
  if (v0)
  {
    uint64_t v13 = sub_100185960();
    uint64_t v14 = type metadata accessor for DailyForecastComponentViewModel.DayForecastViewModel(v13);
    uint64_t v0 = 0;
    sub_100164920(v14);
    uint64_t v16 = v6 + ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80));
    uint64_t v18 = *(void *)(v17 + 72);
    uint64_t v37 = v1;
    uint64_t v38 = v18;
    sub_100184934();
    while (1)
    {
      uint64_t v19 = (uint64_t)&v41[*(int *)(v6 + 48)];
      sub_1000B0D44(v16, v19, (void (*)(void))type metadata accessor for DailyForecastComponentViewModel.DayForecastViewModel);
      sub_1001843F8();
      sub_1000B0C9C(v19, v20, (void (*)(void))type metadata accessor for DailyForecastComponentViewModel.DayForecastViewModel);
      sub_10024D364(v2, v1, &qword_100E6B790);
      if (v0)
      {
        uint64_t v12 = v3;
      }
      else
      {
        sub_100182920();
        if (v22) {
          goto LABEL_34;
        }
        int64_t v23 = v21 & 0xFFFFFFFFFFFFFFFELL;
        if (v23 <= 1) {
          uint64_t v2 = 1;
        }
        else {
          uint64_t v2 = v23;
        }
        sub_10017DF08(&qword_100E6B798);
        uint64_t v12 = (void *)sub_10018237C();
        size_t v24 = j__malloc_size(v12);
        if (!v6) {
          goto LABEL_35;
        }
        BOOL v25 = v24 - v4 == 0x8000000000000000 && v6 == -1;
        if (v25) {
          goto LABEL_36;
        }
        sub_10019D464(v24 - v4);
        if (v26)
        {
          sub_100188980();
          BOOL v28 = !v28 || v4 >= v27;
          if (v28)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v12 != v3)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          v3[2] = 0;
        }
        sub_10017F318();
        uint64_t v6 = v36;
      }
      BOOL v29 = __OFSUB__(v0--, 1);
      if (v29) {
        break;
      }
      uint64_t v30 = sub_100181E8C();
      sub_10024D364(v30, v31, &qword_100E6B790);
      sub_1001D17D8();
      if (v25) {
        goto LABEL_28;
      }
    }
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
LABEL_28:
  swift_bridgeObjectRelease();
  sub_1001870D4();
  if (!v28)
  {
LABEL_32:
    sub_100162694();
    return;
  }
  unint64_t v33 = v32 >> 1;
  BOOL v29 = __OFSUB__(v33, v0);
  uint64_t v34 = v33 - v0;
  if (!v29)
  {
    _OWORD v12[2] = v34;
    goto LABEL_32;
  }
LABEL_37:
  __break(1u);
}

uint64_t sub_1000B0C9C(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  uint64_t v4 = sub_100126010();
  v5(v4);
  return a2;
}

uint64_t sub_1000B0CF0(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  uint64_t v4 = sub_100126010();
  v5(v4);
  return a2;
}

uint64_t sub_1000B0D44(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(a2, a1);
  return a2;
}

uint64_t initializeBufferWithCopyOfBuffer for LocationViewCollisionOptions.PublishedValue(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1000B0DDC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for LocationModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = a2 + v7;
  *uint64_t v8 = *(void *)(a2 + v7);
  v8[1] = *(void *)(a2 + v7 + 8);
  uint64_t v10 = *(int *)(type metadata accessor for ContentStatusBannerPresentationMetrics(0) + 20);
  uint64_t v11 = (uint64_t)v8 + v10;
  uint64_t v12 = v9 + v10;
  uint64_t v13 = type metadata accessor for ContentStatusBanner();
  int v14 = _s7Weather24LocationCompositionStateOwet_0(v11, 1, v13);
  int v15 = _s7Weather24LocationCompositionStateOwet_0(v12, 1, v13);
  if (v14)
  {
    if (!v15)
    {
      *(unsigned char *)uint64_t v11 = *(unsigned char *)v12;
      if (*(void *)(v12 + 16) >= 2uLL)
      {
        *(void *)(v11 + 8) = *(void *)(v12 + 8);
        *(void *)(v11 + 16) = *(void *)(v12 + 16);
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(v11 + 8) = *(_OWORD *)(v12 + 8);
      }
      uint64_t v20 = *(int *)(v13 + 24);
      uint64_t v21 = (void *)(v11 + v20);
      char v22 = (const void *)(v12 + v20);
      uint64_t v23 = type metadata accessor for Date();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v22, 1, v23))
      {
        uint64_t v24 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
        memcpy(v21, v22, *(void *)(*(void *)(v24 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v21, 0, 1, v23);
      }
      uint64_t v25 = v11;
      uint64_t v26 = v13;
      goto LABEL_17;
    }
    goto LABEL_7;
  }
  if (v15)
  {
    sub_100151660();
LABEL_7:
    size_t v16 = *(void *)(*(void *)(sub_10017DF08(&qword_100E63A10) - 8) + 64);
    uint64_t v17 = (void *)v11;
    uint64_t v18 = (const void *)v12;
LABEL_8:
    memcpy(v17, v18, v16);
    goto LABEL_18;
  }
  *(unsigned char *)uint64_t v11 = *(unsigned char *)v12;
  unint64_t v19 = *(void *)(v12 + 16);
  if (*(void *)(v11 + 16) < 2uLL)
  {
    if (v19 >= 2)
    {
      *(void *)(v11 + 8) = *(void *)(v12 + 8);
      *(void *)(v11 + 16) = *(void *)(v12 + 16);
      swift_bridgeObjectRetain();
      goto LABEL_30;
    }
    goto LABEL_28;
  }
  if (v19 < 2)
  {
    sub_10027B4D4(v11 + 8);
LABEL_28:
    *(_OWORD *)(v11 + 8) = *(_OWORD *)(v12 + 8);
    goto LABEL_30;
  }
  *(void *)(v11 + 8) = *(void *)(v12 + 8);
  *(void *)(v11 + 16) = *(void *)(v12 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_30:
  uint64_t v37 = *(int *)(v13 + 24);
  uint64_t v38 = v11 + v37;
  uint64_t v39 = v12 + v37;
  uint64_t v40 = type metadata accessor for Date();
  int v41 = _s7Weather24LocationCompositionStateOwet_0(v38, 1, v40);
  int v42 = _s7Weather24LocationCompositionStateOwet_0(v39, 1, v40);
  if (v41)
  {
    if (!v42)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 16))(v38, v39, v40);
      uint64_t v25 = v38;
      uint64_t v26 = v40;
LABEL_17:
      _s7Weather24LocationCompositionStateOwst_0(v25, 0, 1, v26);
      goto LABEL_18;
    }
    goto LABEL_35;
  }
  uint64_t v43 = *(void *)(v40 - 8);
  if (v42)
  {
    (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v38, v40);
LABEL_35:
    size_t v16 = *(void *)(*(void *)(sub_10017DF08((uint64_t *)&unk_100E73CA0) - 8) + 64);
    uint64_t v17 = (void *)v38;
    uint64_t v18 = (const void *)v39;
    goto LABEL_8;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v43 + 24))(v38, v39, v40);
LABEL_18:
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  if (a1 != a2)
  {
    uint64_t v27 = a3[9];
    BOOL v28 = (void *)(a1 + v27);
    BOOL v29 = (void *)(a2 + v27);
    sub_10017DF4C(a1 + v27, (uint64_t *)&unk_100EAA560);
    sub_10017DF08((uint64_t *)&unk_100EAA560);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v30 = type metadata accessor for UserInterfaceSizeClass();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v29, 1, v30))
      {
        uint64_t v31 = sub_10017DF08(&qword_100E65ED8);
        memcpy(v28, v29, *(void *)(*(void *)(v31 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v30 - 8) + 16))(v28, v29, v30);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v28, 0, 1, v30);
      }
    }
    else
    {
      *BOOL v28 = *v29;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v32 = a3[10];
  uint64_t v33 = a1 + v32;
  uint64_t v34 = (uint64_t *)(a2 + v32);
  uint64_t v35 = *v34;
  LOBYTE(v34) = *((unsigned char *)v34 + 8);
  *(void *)uint64_t v33 = v35;
  *(unsigned char *)(v33 + 8) = (_BYTE)v34;
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *sub_1000B1304(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (uint64_t)a1 + v4;
  uint64_t v6 = (uint64_t)a2 + v4;
  uint64_t v7 = type metadata accessor for ContentStatusBanner();
  int v8 = _s7Weather24LocationCompositionStateOwet_0(v5, 1, v7);
  int v9 = _s7Weather24LocationCompositionStateOwet_0(v6, 1, v7);
  if (v8)
  {
    if (!v9)
    {
      *(unsigned char *)uint64_t v5 = *(unsigned char *)v6;
      *(_OWORD *)(v5 + 8) = *(_OWORD *)(v6 + 8);
      uint64_t v10 = *(int *)(v7 + 24);
      uint64_t v11 = (void *)(v5 + v10);
      uint64_t v12 = (const void *)(v6 + v10);
      uint64_t v13 = type metadata accessor for Date();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v12, 1, v13))
      {
        uint64_t v14 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
        memcpy(v11, v12, *(void *)(*(void *)(v14 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v11, 0, 1, v13);
      }
      uint64_t v20 = v5;
      uint64_t v21 = v7;
      goto LABEL_15;
    }
    goto LABEL_7;
  }
  if (v9)
  {
    sub_100151660();
LABEL_7:
    size_t v15 = *(void *)(*(void *)(sub_10017DF08(&qword_100E63A10) - 8) + 64);
    size_t v16 = (void *)v5;
    uint64_t v17 = (const void *)v6;
    goto LABEL_8;
  }
  *(unsigned char *)uint64_t v5 = *(unsigned char *)v6;
  uint64_t v18 = (void *)(v6 + 8);
  if (*(void *)(v5 + 16) >= 2uLL)
  {
    unint64_t v19 = *(void *)(v6 + 16);
    if (v19 >= 2)
    {
      *(void *)(v5 + 8) = *v18;
      *(void *)(v5 + 16) = v19;
      swift_bridgeObjectRelease();
      goto LABEL_18;
    }
    sub_10027B4D4(v5 + 8);
  }
  *(_OWORD *)(v5 + 8) = *(_OWORD *)v18;
LABEL_18:
  uint64_t v23 = *(int *)(v7 + 24);
  uint64_t v24 = v5 + v23;
  uint64_t v25 = v6 + v23;
  uint64_t v26 = type metadata accessor for Date();
  int v27 = _s7Weather24LocationCompositionStateOwet_0(v24, 1, v26);
  int v28 = _s7Weather24LocationCompositionStateOwet_0(v25, 1, v26);
  if (v27)
  {
    if (!v28)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 32))(v24, v25, v26);
      uint64_t v20 = v24;
      uint64_t v21 = v26;
LABEL_15:
      _s7Weather24LocationCompositionStateOwst_0(v20, 0, 1, v21);
      return a1;
    }
  }
  else
  {
    uint64_t v29 = *(void *)(v26 - 8);
    if (!v28)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v29 + 40))(v24, v25, v26);
      return a1;
    }
    (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v24, v26);
  }
  size_t v15 = *(void *)(*(void *)(sub_10017DF08((uint64_t *)&unk_100E73CA0) - 8) + 64);
  size_t v16 = (void *)v24;
  uint64_t v17 = (const void *)v25;
LABEL_8:
  memcpy(v16, v17, v15);
  return a1;
}

uint64_t sub_1000B1604(uint64_t a1, uint64_t a2)
{
  uint64_t v19 = a2;
  uint64_t v2 = type metadata accessor for Container.TestSuite();
  uint64_t v21 = *(void *)(v2 - 8);
  uint64_t v22 = v2;
  __chkstk_darwin(v2);
  uint64_t v20 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Scope();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10017DF08((uint64_t *)&unk_100EAAA90);
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  sub_10017DF08(&qword_100E8DD58);
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  sub_10017DF08(&qword_100E8DD60);
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  sub_10017DF08(&qword_100E98020);
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  sub_10017DF08(&qword_100E98028);
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  sub_10017DF08(&qword_100E64B58);
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  sub_10017DF08(&qword_100E98030);
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  type metadata accessor for MainReducer();
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  sub_10017DF08(&qword_100E98038);
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  sub_10017DF08(&qword_100E98040);
  RegistrationContainer.register<A>(_:name:factory:)();
  uint64_t v8 = enum case for Scope.singleton(_:);
  int v9 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 104);
  v9(v7, enum case for Scope.singleton(_:), v4);
  Definition.inScope(_:)();
  swift_release();
  swift_release();
  uint64_t v10 = *(void (**)(char *, uint64_t))(v5 + 8);
  v10(v7, v4);
  sub_10017DF08(&qword_100E98048);
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  sub_10017DF08(&qword_100E98050);
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  sub_10017DF08(&qword_100E98058);
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  sub_10017DF08(&qword_100E98060);
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  sub_10017DF08(&qword_100E98068);
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  type metadata accessor for LocationAuthorizationReducer();
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  sub_10017DF08(&qword_100E98070);
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  sub_10017DF08(&qword_100E98078);
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  sub_10017DF08(&qword_100E98080);
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  sub_10017DF08(&qword_100E98088);
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  sub_10017DF08(&qword_100E98090);
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  sub_10017DF08(&qword_100E98098);
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  sub_10017DF08(&qword_100E980A0);
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  sub_10017DF08(&qword_100E980A8);
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  sub_10017DF08(&qword_100E980B0);
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  sub_10017DF08(&qword_100E980B8);
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  sub_10017DF08(&qword_100E980C0);
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  type metadata accessor for WeatherService();
  RegistrationContainer.register<A>(_:name:factory:)();
  uint64_t v11 = enum case for Scope.containerSingleton(_:);
  v9(v7, enum case for Scope.containerSingleton(_:), v4);
  Definition.inScope(_:)();
  swift_release();
  swift_release();
  v10(v7, v4);
  sub_10017DF08(&qword_100E980C8);
  RegistrationContainer.register<A>(_:name:factory:)();
  v9(v7, v8, v4);
  Definition.inScope(_:)();
  swift_release();
  swift_release();
  v10(v7, v4);
  type metadata accessor for WDSEndpoint();
  RegistrationContainer.register<A>(_:name:factory:)();
  v9(v7, v11, v4);
  Definition.inScope(_:)();
  swift_release();
  swift_release();
  v10(v7, v4);
  sub_10017DF08(&qword_100E980D0);
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  sub_10017DF08(&qword_100E980D8);
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  sub_10017DF08(&qword_100E980E0);
  RegistrationContainer.register<A>(_:name:factory:)();
  v9(v7, v8, v4);
  Definition.inScope(_:)();
  swift_release();
  swift_release();
  v10(v7, v4);
  sub_10017DF08(&qword_100E980E8);
  RegistrationContainer.register<A>(_:name:factory:)();
  v9(v7, v8, v4);
  Definition.inScope(_:)();
  swift_release();
  swift_release();
  v10(v7, v4);
  type metadata accessor for NotificationsStoreObserver();
  RegistrationContainer.register<A>(_:name:factory:)();
  v9(v7, v11, v4);
  Definition.inScope(_:)();
  swift_release();
  swift_release();
  v10(v7, v4);
  type metadata accessor for NotificationsOptInStoreObserver();
  RegistrationContainer.register<A>(_:name:factory:)();
  v9(v7, v11, v4);
  Definition.inScope(_:)();
  swift_release();
  swift_release();
  v10(v7, v4);
  type metadata accessor for ReverseGeocodingStoreObserver();
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  type metadata accessor for SavedLocationsStoreObserver();
  RegistrationContainer.register<A>(_:name:factory:)();
  v9(v7, v11, v4);
  Definition.inScope(_:)();
  swift_release();
  swift_release();
  v10(v7, v4);
  type metadata accessor for WeatherDataStoreObserver();
  RegistrationContainer.register<A>(_:name:factory:)();
  v9(v7, v11, v4);
  Definition.inScope(_:)();
  swift_release();
  swift_release();
  v10(v7, v4);
  type metadata accessor for WeatherMapOverlayDataStoreObserver();
  RegistrationContainer.register<A>(_:name:factory:)();
  v9(v7, v11, v4);
  Definition.inScope(_:)();
  swift_release();
  swift_release();
  v10(v7, v4);
  type metadata accessor for WidgetReloadStoreObserver();
  RegistrationContainer.register<A>(_:name:factory:)();
  v9(v7, v11, v4);
  Definition.inScope(_:)();
  swift_release();
  swift_release();
  v10(v7, v4);
  type metadata accessor for LocationViewerStoreObserver();
  RegistrationContainer.register<A>(_:name:factory:)();
  v9(v7, v11, v4);
  Definition.inScope(_:)();
  swift_release();
  swift_release();
  v10(v7, v4);
  type metadata accessor for OpenL2HandlerObserver();
  RegistrationContainer.register<A>(_:name:factory:)();
  v9(v7, v11, v4);
  Definition.inScope(_:)();
  swift_release();
  swift_release();
  v10(v7, v4);
  type metadata accessor for InteractionDonationStoreObserver();
  RegistrationContainer.register<A>(_:name:factory:)();
  v9(v7, v11, v4);
  Definition.inScope(_:)();
  swift_release();
  swift_release();
  v10(v7, v4);
  type metadata accessor for WeatherConditionBackgroundStoreObserver();
  RegistrationContainer.register<A>(_:name:factory:)();
  v9(v7, v11, v4);
  Definition.inScope(_:)();
  swift_release();
  swift_release();
  v10(v7, v4);
  type metadata accessor for TimeStoreObserver();
  RegistrationContainer.register<A>(_:name:factory:)();
  v9(v7, v11, v4);
  Definition.inScope(_:)();
  swift_release();
  swift_release();
  v10(v7, v4);
  type metadata accessor for VisibleLocationWeatherLoadStoreObserver();
  RegistrationContainer.register<A>(_:name:factory:)();
  v9(v7, v11, v4);
  Definition.inScope(_:)();
  swift_release();
  swift_release();
  v10(v7, v4);
  swift_retain();
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  uint64_t v12 = enum case for Container.TestSuite.performance(_:);
  uint64_t v14 = v20;
  uint64_t v13 = v21;
  size_t v15 = *(void (**)(char *, uint64_t, uint64_t))(v21 + 104);
  uint64_t v16 = v22;
  v15(v20, enum case for Container.TestSuite.performance(_:), v22);
  Definition.whenTesting(_:_:)();
  swift_release();
  swift_release();
  uint64_t v17 = *(void (**)(char *, uint64_t))(v13 + 8);
  v17(v14, v16);
  RegistrationContainer.register<A>(_:name:factory:)();
  v15(v14, v12, v16);
  Definition.whenTesting(_:_:)();
  swift_release();
  swift_release();
  v17(v14, v16);
  type metadata accessor for WeatherDataDebounceMiddleware();
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  type metadata accessor for ShortcutItemMiddleware();
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  type metadata accessor for ShortcutItemUpdater();
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  type metadata accessor for UnitManagerMiddleware();
  RegistrationContainer.register<A>(_:name:factory:)();
  return swift_release();
}

uint64_t sub_1000B292C(uint64_t a1)
{
  uint64_t v2 = v1;
  sub_10017C924();
  uint64_t v5 = v4;
  uint64_t v6 = sub_10017DF08(&qword_100EAB1C8);
  uint64_t v7 = sub_100109308(v6);
  __chkstk_darwin(v7);
  int v42 = (char *)v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)v40 - v10;
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)v40 - v13;
  uint64_t v15 = type metadata accessor for WeatherNetworkActivity.Label();
  sub_100179C0C();
  uint64_t v17 = v16;
  __chkstk_darwin(v18);
  sub_1001A0E98(v19, v40[0]);
  __chkstk_darwin(v20);
  int v41 = (char *)v40 - v21;
  __chkstk_darwin(v22);
  uint64_t v24 = (char *)v40 - v23;
  uint64_t v25 = type metadata accessor for UnfairLock.Options();
  uint64_t v26 = sub_100109308(v25);
  __chkstk_darwin(v26);
  sub_1001626E0();
  uint64_t v27 = OBJC_IVAR____TtC7Weather33InteractiveMapNetworkActivityFlow_lock;
  static UnfairLock.Options.dataSynchronization.getter();
  type metadata accessor for UnfairLock();
  swift_allocObject();
  uint64_t v28 = UnfairLock.init(options:)();
  uint64_t v43 = v27;
  *(void *)(v1 + v27) = v28;
  *(void *)(v1 + OBJC_IVAR____TtC7Weather33InteractiveMapNetworkActivityFlow_rootActivity) = 0;
  *(void *)(v1 + OBJC_IVAR____TtC7Weather33InteractiveMapNetworkActivityFlow_tilesActivity) = 0;
  uint64_t v29 = (void *)(v1 + OBJC_IVAR____TtC7Weather33InteractiveMapNetworkActivityFlow_locationId);
  *uint64_t v29 = 0;
  v29[1] = 0;
  sub_1000B37A4((uint64_t)v14);
  sub_100163F10((uint64_t)v14);
  if (v31)
  {
    uint64_t v11 = v14;
  }
  else
  {
    v40[1] = v5;
    uint64_t v30 = *(void (**)(void))(v17 + 32);
    sub_10017D0F4();
    v30();
    sub_1000B37D4((uint64_t)v11);
    sub_100163F10((uint64_t)v11);
    if (v31)
    {
      (*(void (**)(char *, uint64_t))(v17 + 8))(v24, v15);
    }
    else
    {
      uint64_t v32 = v41;
      sub_10017D0F4();
      v30();
      uint64_t v11 = v42;
      sub_1000B3804((uint64_t)v42);
      sub_100163F10((uint64_t)v11);
      if (!v33)
      {
        sub_10017D0F4();
        v30();
        sub_10017D0F4();
        v30();
        sub_10017D0F4();
        v30();
        sub_10017D0F4();
        v30();
        sub_10017D0F4();
        v30();
        return v2;
      }
      uint64_t v34 = *(void (**)(char *, uint64_t))(v17 + 8);
      v34(v32, v15);
      v34(v24, v15);
    }
  }
  sub_100A331DC((uint64_t)v11);
  if (qword_100E62800 != -1) {
    swift_once();
  }
  uint64_t v35 = type metadata accessor for Logger();
  sub_1002102B0(v35, (uint64_t)qword_100F51F08);
  uint64_t v36 = Logger.logObject.getter();
  os_log_type_t v37 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v36, v37))
  {
    uint64_t v38 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v38 = 0;
    _os_log_impl((void *)&_mh_execute_header, v36, v37, "InteractiveMapNetworkActivityFlow couldn't be created", v38, 2u);
    swift_slowDealloc();
  }

  (*(void (**)(uint64_t, uint64_t))(v17 + 8))(a1, v15);
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_deallocPartialClassInstance();
  return 0;
}

void *sub_1000B2DC8()
{
  uint64_t v1 = type metadata accessor for WeatherNetworkActivity.Label();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *(void (**)(uint64_t))(v2 + 104);
  uint64_t v6 = sub_100187CB4();
  v5(v6);
  type metadata accessor for LocationNetworkActivityFlow();
  swift_allocObject();
  sub_1000B2F2C();
  v0[2] = v7;
  uint64_t v8 = sub_100187CB4();
  v5(v8);
  swift_allocObject();
  sub_1000B2F2C();
  v0[3] = v9;
  uint64_t v10 = sub_100187CB4();
  v5(v10);
  type metadata accessor for InteractiveMapNetworkActivityFlow();
  swift_allocObject();
  v0[4] = sub_1000B292C((uint64_t)v4);
  return v0;
}

void sub_1000B2F2C()
{
  sub_100162EA0();
  uint64_t v3 = v2;
  sub_10017C924();
  uint64_t v60 = v4;
  uint64_t v5 = sub_10017DF08(&qword_100EAB1C8);
  uint64_t v6 = sub_100109308(v5);
  __chkstk_darwin(v6);
  sub_100162EF8();
  uint64_t v55 = v7;
  sub_1001626D4();
  __chkstk_darwin(v8);
  sub_100109770();
  uint64_t v57 = v9;
  sub_1001626D4();
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v51 - v11;
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v51 - v14;
  __chkstk_darwin(v16);
  uint64_t v17 = sub_100185744();
  sub_100179C0C();
  uint64_t v19 = v18;
  __chkstk_darwin(v20);
  sub_100162EF8();
  uint64_t v53 = v21;
  sub_1001626D4();
  __chkstk_darwin(v22);
  sub_100109770();
  uint64_t v54 = v23;
  sub_1001626D4();
  __chkstk_darwin(v24);
  sub_100109770();
  uint64_t v56 = v25;
  sub_1001626D4();
  __chkstk_darwin(v26);
  sub_100109770();
  uint64_t v58 = v27;
  sub_1001626D4();
  __chkstk_darwin(v28);
  uint64_t v30 = (char *)&v51 - v29;
  uint64_t v31 = type metadata accessor for UnfairLock.Options();
  uint64_t v32 = sub_100109308(v31);
  __chkstk_darwin(v32);
  sub_100162EB8();
  uint64_t v33 = OBJC_IVAR____TtC7Weather27LocationNetworkActivityFlow_lock;
  static UnfairLock.Options.dataSynchronization.getter();
  type metadata accessor for UnfairLock();
  swift_allocObject();
  uint64_t v34 = UnfairLock.init(options:)();
  uint64_t v59 = v33;
  *(void *)(v0 + v33) = v34;
  *(void *)(v0 + OBJC_IVAR____TtC7Weather27LocationNetworkActivityFlow_rootActivity) = 0;
  *(void *)(v0 + OBJC_IVAR____TtC7Weather27LocationNetworkActivityFlow_mapActivity) = 0;
  *(void *)(v0 + OBJC_IVAR____TtC7Weather27LocationNetworkActivityFlow_mapTilesActivity) = 0;
  uint64_t v35 = (void *)(v0 + OBJC_IVAR____TtC7Weather27LocationNetworkActivityFlow_locationId);
  void *v35 = 0;
  v35[1] = 0;
  sub_1000B37C0(v1);
  sub_100163F10(v1);
  if (v39)
  {
    uint64_t v15 = (char *)v1;
    uint64_t v36 = v3;
  }
  else
  {
    uint64_t v37 = v1;
    uint64_t v38 = *(void (**)(void))(v19 + 32);
    ((void (*)(char *, uint64_t, uint64_t))v38)(v30, v37, v17);
    sub_1000B37F0((uint64_t)v15);
    sub_100163F10((uint64_t)v15);
    uint64_t v52 = v3;
    if (v39)
    {
      (*(void (**)(char *, uint64_t))(v19 + 8))(v30, v17);
    }
    else
    {
      sub_10017DA0C();
      v38();
      sub_1000B37A4((uint64_t)v12);
      sub_100163F10((uint64_t)v12);
      if (v40)
      {
        int v41 = *(void (**)(void))(v19 + 8);
        sub_1001A2818();
        v41();
        sub_1001A2818();
        v41();
        uint64_t v15 = v12;
      }
      else
      {
        sub_10017DA0C();
        v38();
        uint64_t v42 = v57;
        sub_1000B37D4(v57);
        sub_100163F10(v42);
        if (v43)
        {
          uint64_t v44 = *(void (**)(void))(v19 + 8);
          sub_1001841DC();
          v44();
          sub_1001841DC();
          v44();
          sub_1001841DC();
          v44();
        }
        else
        {
          sub_10017DA0C();
          v38();
          uint64_t v42 = v55;
          sub_1000B3804(v55);
          sub_100163F10(v42);
          if (!v45)
          {
            sub_10017DA0C();
            v38();
            sub_10017DA0C();
            v38();
            sub_10017DA0C();
            v38();
            sub_10017DA0C();
            v38();
            sub_10017DA0C();
            v38();
            sub_10017DA0C();
            v38();
            sub_10017DA0C();
            v38();
            goto LABEL_23;
          }
          char v46 = *(void (**)(void))(v19 + 8);
          sub_1001A2818();
          v46();
          sub_1001A2818();
          v46();
          sub_1001A2818();
          v46();
          ((void (*)(char *, uint64_t))v46)(v30, v17);
        }
        uint64_t v15 = (char *)v42;
      }
    }
    uint64_t v36 = v52;
  }
  sub_100A331DC((uint64_t)v15);
  if (qword_100E62800 != -1) {
    swift_once();
  }
  uint64_t v47 = type metadata accessor for Logger();
  sub_1002102B0(v47, (uint64_t)qword_100F51F08);
  uint64_t v48 = Logger.logObject.getter();
  os_log_type_t v49 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v48, v49))
  {
    uint64_t v50 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v50 = 0;
    _os_log_impl((void *)&_mh_execute_header, v48, v49, "LocationNetworkActivityFlow couldn't be created", v50, 2u);
    swift_slowDealloc();
  }

  (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v36, v17);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_deallocPartialClassInstance();
LABEL_23:
  sub_100162694();
}

uint64_t sub_1000B3534@<X0>(unsigned int *a1@<X0>, unsigned int *a2@<X1>, unsigned int *a3@<X2>, uint64_t a4@<X8>)
{
  type metadata accessor for WeatherNetworkActivity.Label();
  sub_10017CE00();
  uint64_t v10 = v9;
  __chkstk_darwin(v11);
  sub_1001626E0();
  uint64_t v14 = v13 - v12;
  sub_10017FDA4();
  v15();
  sub_1001A08F0();
  int v17 = v16();
  if (v17 == enum case for WeatherNetworkActivity.Label.appLaunchSnapshotMap(_:))
  {
    uint64_t v18 = *a1;
LABEL_7:
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 104))(a4, v18, v4);
    return sub_10017CE20();
  }
  if (v17 == enum case for WeatherNetworkActivity.Label.openInteractiveMap(_:))
  {
    uint64_t v18 = *a3;
    goto LABEL_7;
  }
  if (v17 == enum case for WeatherNetworkActivity.Label.openPreviewSnapshotMap(_:))
  {
    uint64_t v18 = *a2;
    goto LABEL_7;
  }
  sub_10019EB8C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 8))(v14, v4);
}

uint64_t sub_1000B367C@<X0>(unsigned int *a1@<X0>, unsigned int *a2@<X1>, uint64_t a3@<X8>)
{
  type metadata accessor for WeatherNetworkActivity.Label();
  sub_10017CE00();
  uint64_t v8 = v7;
  __chkstk_darwin(v9);
  sub_1001626E0();
  uint64_t v12 = v11 - v10;
  sub_10017FDA4();
  v13();
  sub_1001A08F0();
  int v15 = v14();
  if (v15 == enum case for WeatherNetworkActivity.Label.appLaunch(_:))
  {
    uint64_t v16 = *a1;
LABEL_5:
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 104))(a3, v16, v3);
    return sub_10017CE20();
  }
  if (v15 == enum case for WeatherNetworkActivity.Label.openPreview(_:))
  {
    uint64_t v16 = *a2;
    goto LABEL_5;
  }
  sub_10019EB8C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8))(v12, v3);
}

uint64_t sub_1000B37A4@<X0>(uint64_t a1@<X8>)
{
  return sub_1000B3534(&enum case for WeatherNetworkActivity.Label.appLaunchSnapshotMapMetadata(_:), &enum case for WeatherNetworkActivity.Label.openPreviewSnapshotMapMetadata(_:), &enum case for WeatherNetworkActivity.Label.openInteractiveMapMetadata(_:), a1);
}

uint64_t sub_1000B37C0@<X0>(uint64_t a1@<X8>)
{
  return sub_1000B367C(&enum case for WeatherNetworkActivity.Label.appLaunchWeather(_:), &enum case for WeatherNetworkActivity.Label.openPreviewWeather(_:), a1);
}

uint64_t sub_1000B37D4@<X0>(uint64_t a1@<X8>)
{
  return sub_1000B3534((unsigned int *)&enum case for WeatherNetworkActivity.Label.appLaunchSnapshotMapTiles(_:), (unsigned int *)&enum case for WeatherNetworkActivity.Label.openPreviewSnapshotMapTiles(_:), (unsigned int *)&enum case for WeatherNetworkActivity.Label.openInteractiveMapTiles(_:), a1);
}

uint64_t sub_1000B37F0@<X0>(uint64_t a1@<X8>)
{
  return sub_1000B367C((unsigned int *)&enum case for WeatherNetworkActivity.Label.appLaunchSnapshotMap(_:), (unsigned int *)&enum case for WeatherNetworkActivity.Label.openPreviewSnapshotMap(_:), a1);
}

uint64_t sub_1000B3804@<X0>(uint64_t a1@<X8>)
{
  type metadata accessor for WeatherNetworkActivity.Label();
  sub_10017CE00();
  uint64_t v4 = v3;
  __chkstk_darwin(v5);
  sub_1001626E0();
  uint64_t v8 = v7 - v6;
  sub_10017FDA4();
  v9();
  sub_1001A08F0();
  int v11 = v10();
  if (v11 == enum case for WeatherNetworkActivity.Label.appLaunchSnapshotMapTiles(_:))
  {
    uint64_t v12 = (unsigned int *)&enum case for WeatherNetworkActivity.Label.appLaunchSnapshotMapTilesOverlayTile(_:);
LABEL_7:
    (*(void (**)(uint64_t, void, uint64_t))(v4 + 104))(a1, *v12, v1);
    return sub_10017CE20();
  }
  if (v11 == enum case for WeatherNetworkActivity.Label.openInteractiveMapTiles(_:))
  {
    uint64_t v12 = (unsigned int *)&enum case for WeatherNetworkActivity.Label.openInteractiveMapTilesOverlayTile(_:);
    goto LABEL_7;
  }
  if (v11 == enum case for WeatherNetworkActivity.Label.openPreviewSnapshotMapTiles(_:))
  {
    uint64_t v12 = (unsigned int *)&enum case for WeatherNetworkActivity.Label.openPreviewSnapshotMapTilesOverlayTile(_:);
    goto LABEL_7;
  }
  sub_10019EB8C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v8, v1);
}

uint64_t sub_1000B3948(uint64_t a1, int *a2)
{
  type metadata accessor for LocationComponentHeaderViewModel(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 4u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_7;
    case 1u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_7;
    case 2u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_7;
    case 3u:
      uint64_t v4 = type metadata accessor for WeatherDescription();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
      type metadata accessor for LocationComponentHeaderViewModel.Description(0);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_7;
    case 5u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_7:
      swift_bridgeObjectRelease();
      break;
    default:
      break;
  }
  uint64_t v5 = type metadata accessor for LocationComponentContainerViewModel();
  uint64_t v6 = a1 + *(int *)(v5 + 20);
  type metadata accessor for LocationComponentViewModel();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_48;
    case 1u:
      swift_bridgeObjectRelease();
      uint64_t v7 = (int *)type metadata accessor for DailyForecastComponentViewModel(0);
      uint64_t v8 = v6 + v7[5];
      uint64_t v9 = sub_10017DF08(&qword_100E65250);
      uint64_t v10 = *(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8);
      v10(v8, v9);
      v10(v6 + v7[6], v9);
      v10(v6 + v7[7], v9);
      goto LABEL_33;
    case 2u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v11 = v6 + *(int *)(type metadata accessor for FeelsLikeComponentViewModel(0) + 24);
      uint64_t v12 = type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference(0);
      if (!_s7Weather24LocationCompositionStateOwet_0(v11, 1, v12))
      {
        swift_bridgeObjectRelease();
        uint64_t v13 = v11 + *(int *)(v12 + 20);
        uint64_t v14 = type metadata accessor for TemperatureScaleConfiguration();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
        type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
        swift_bridgeObjectRelease();
      }
      goto LABEL_48;
    case 3u:
    case 4u:
      goto LABEL_48;
    case 5u:
      uint64_t v15 = type metadata accessor for WeatherMapOverlayKind();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v6, v15);
      uint64_t v16 = type metadata accessor for MapComponentViewModel();
      uint64_t v17 = v6 + *(int *)(v16 + 20);
      uint64_t v18 = type metadata accessor for Location();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(v17, v18);
      uint64_t v19 = v6 + *(int *)(v16 + 24);
      uint64_t v20 = (int *)type metadata accessor for WeatherData(0);
      if (!_s7Weather24LocationCompositionStateOwet_0(v19, 1, (uint64_t)v20))
      {
        swift_bridgeObjectRelease();
        uint64_t v21 = v19 + v20[5];
        uint64_t v22 = type metadata accessor for Locale();
        if (!_s7Weather24LocationCompositionStateOwet_0(v21, 1, v22)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v22 - 8) + 8))(v21, v22);
        }
        uint64_t v23 = v19 + v20[6];
        uint64_t v24 = type metadata accessor for WeatherDataModel();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v24 - 8) + 8))(v23, v24);
        uint64_t v25 = v19 + v20[7];
        uint64_t v26 = sub_10017DF08(&qword_100E63738);
        if (!_s7Weather24LocationCompositionStateOwet_0(v25, 1, v26))
        {
          uint64_t v27 = type metadata accessor for Date();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v27 - 8) + 8))(v25, v27);
        }
        uint64_t v28 = v19 + v20[8];
        type metadata accessor for WeatherData.WeatherStatisticsState(0);
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload == 1)
        {
          uint64_t v42 = type metadata accessor for WeatherStatisticsModel();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v42 - 8) + 8))(v28, v42);
        }
        else if (!EnumCaseMultiPayload)
        {
          swift_bridgeObjectRelease();
        }
        uint64_t v43 = v19 + v20[9];
        uint64_t v44 = type metadata accessor for WeatherDataOverrides();
        if (!_s7Weather24LocationCompositionStateOwet_0(v43, 1, v44))
        {
          uint64_t v45 = type metadata accessor for Date();
          if (!_s7Weather24LocationCompositionStateOwet_0(v43, 1, v45)) {
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v45 - 8) + 8))(v43, v45);
          }
          uint64_t v46 = v43 + *(int *)(v44 + 20);
          if (!_s7Weather24LocationCompositionStateOwet_0(v46, 1, v45)) {
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v45 - 8) + 8))(v46, v45);
          }
        }
      }
      goto LABEL_48;
    case 6u:
      swift_bridgeObjectRelease();
      int v30 = *(unsigned __int8 *)(v6 + 32);
      if (v30 != 255) {
        sub_1001F3C7C(*(void *)(v6 + 16), *(void *)(v6 + 24), v30);
      }
      swift_bridgeObjectRelease();
      v6 += *(int *)(type metadata accessor for MoonComponentViewModel() + 28);
      uint64_t HourPrecipitationChartViewModel = type metadata accessor for Date();
      goto LABEL_36;
    case 7u:
      type metadata accessor for NewsArticleComponentViewModel(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        swift_bridgeObjectRelease();
        uint64_t v32 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
        uint64_t v33 = v6 + v32[5];
        uint64_t v34 = type metadata accessor for URL();
        if (!_s7Weather24LocationCompositionStateOwet_0(v33, 1, v34)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v34 - 8) + 8))(v33, v34);
        }
        swift_bridgeObjectRelease();
        uint64_t v35 = *(void (**)(uint64_t, uint64_t))(*(void *)(v34 - 8) + 8);
        v35(v6 + v32[7], v34);
        uint64_t v36 = v6 + v32[8];
        if (!_s7Weather24LocationCompositionStateOwet_0(v36, 1, v34)) {
          v35(v36, v34);
        }
      }
      break;
    case 8u:
      swift_bridgeObjectRelease();
      v6 += *(int *)(type metadata accessor for NextHourPrecipitationComponentViewModel() + 20);
      uint64_t HourPrecipitationChartViewModel = type metadata accessor for NextHourPrecipitationChartViewModel();
      goto LABEL_36;
    case 9u:
      uint64_t HourPrecipitationChartViewModel = type metadata accessor for Location();
      goto LABEL_36;
    case 0xAu:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_48;
    case 0xBu:
      uint64_t v37 = type metadata accessor for PressureTrend();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v37 - 8) + 8))(v6, v37);
      type metadata accessor for PressureComponentViewModel();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_33:
      swift_bridgeObjectRelease();
      goto LABEL_48;
    case 0xDu:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v6 += *(int *)(type metadata accessor for SevereAlertComponentViewModel() + 36);
      uint64_t HourPrecipitationChartViewModel = type metadata accessor for WeatherAlert.Prominence();
      goto LABEL_36;
    case 0xEu:
      uint64_t HourPrecipitationChartViewModel = type metadata accessor for SunriseSunsetViewModel();
LABEL_36:
      (*(void (**)(uint64_t, uint64_t))(*(void *)(HourPrecipitationChartViewModel - 8) + 8))(v6, HourPrecipitationChartViewModel);
      break;
    case 0xFu:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_48;
    case 0x10u:
      swift_bridgeObjectRelease();
      uint64_t v38 = v6 + *(int *)(type metadata accessor for UVIndexComponentViewModel() + 28);
      uint64_t v39 = type metadata accessor for WeatherDescription();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v39 - 8) + 8))(v38, v39);
      goto LABEL_48;
    case 0x11u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_48;
    case 0x12u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v40 = v6 + *(int *)(type metadata accessor for WindComponentViewModel() + 68);
      uint64_t v41 = type metadata accessor for WindComponentCompassViewModel();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v41 - 8) + 8))(v40, v41);
LABEL_48:
      swift_bridgeObjectRelease();
      break;
    default:
      break;
  }
  uint64_t v47 = a1 + *(int *)(v5 + 28);
  uint64_t v48 = type metadata accessor for LocationComponentAction(0);
  if (!_s7Weather24LocationCompositionStateOwet_0(v47, 1, v48))
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v49 = type metadata accessor for URL();
        goto LABEL_55;
      case 1u:
        uint64_t v49 = type metadata accessor for WeatherMapOverlayKind();
        goto LABEL_55;
      case 2u:
        uint64_t v49 = type metadata accessor for DetailCondition();
        goto LABEL_55;
      case 4u:
        v47 += *(int *)(sub_10017DF08(&qword_100E66480) + 48);
        uint64_t v49 = type metadata accessor for Location();
LABEL_55:
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v49 - 8) + 8))(v47, v49);
        break;
      default:
        break;
    }
  }
  uint64_t v50 = a1 + a2[5];
  uint64_t v51 = type metadata accessor for Text.Measurements();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v51 - 8) + 8))(v50, v51);
  uint64_t v52 = a1 + a2[6];
  sub_10017DF08(&qword_100E63BC8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v53 = type metadata accessor for ContentSizeCategory();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v53 - 8) + 8))(v52, v53);
  }
  else
  {
    swift_release();
  }
  sub_10018F6D8(*(void *)(a1 + a2[7]), *(unsigned char *)(a1 + a2[7] + 8));
  uint64_t v54 = a1 + a2[8];
  sub_10018CCC4(*(void *)v54, *(void *)(v54 + 8), *(void *)(v54 + 16), *(void *)(v54 + 24), *(void *)(v54 + 32), *(void *)(v54 + 40), *(void *)(v54 + 48), *(void *)(v54 + 56), *(void *)(v54 + 64), *(unsigned char *)(v54 + 72));
  sub_10014D82C(*(void *)(a1 + a2[9]), *(unsigned __int8 *)(a1 + a2[9] + 8), *(unsigned char *)(a1 + a2[9] + 9));
  sub_10018F6D8(*(void *)(a1 + a2[10]), *(unsigned char *)(a1 + a2[10] + 8));
  sub_10018F6D8(*(void *)(a1 + a2[11]), *(unsigned char *)(a1 + a2[11] + 8));
  uint64_t v55 = a1 + a2[12];
  sub_10017DF08(&qword_100E62CB8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v56 = type metadata accessor for LayoutDirection();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v56 - 8) + 8))(v55, v56);
  }
  else
  {
    swift_release();
  }
  uint64_t v57 = a1 + a2[13];
  uint64_t v58 = *(void *)v57;
  char v59 = *(unsigned char *)(v57 + 9);
  uint64_t v60 = *(unsigned __int8 *)(v57 + 8);

  return sub_10014D82C(v58, v60, v59);
}

uint64_t sub_1000B4660(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v5 = type metadata accessor for Location.Identifier();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 24);
  v7(a1, a2, v5);
  uint64_t v8 = (int *)type metadata accessor for LocationViewModel();
  uint64_t v9 = v8[5];
  uint64_t v10 = (void *)(a1 + v9);
  uint64_t v11 = (const void *)(a2 + v9);
  int v12 = _s7Weather24LocationCompositionStateOwet_0(a1 + v9, 1, v5);
  int v13 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v11, 1, v5);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, const void *, uint64_t))(v6 + 16))(v10, v11, v5);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v10, 0, 1, v5);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(void *, uint64_t))(v6 + 8))(v10, v5);
LABEL_6:
    uint64_t v14 = sub_10017DF08(&qword_100E6DC08);
    memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  v7((uint64_t)v10, (uint64_t)v11, v5);
LABEL_7:
  uint64_t v15 = v8[6];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  *(void *)uint64_t v16 = *(void *)(a2 + v15);
  *(void *)(v16 + 8) = *(void *)(a2 + v15 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v18 = *(void *)(v17 + 16);
  uint64_t v19 = *(void *)(v17 + 24);
  uint64_t v20 = *(void *)(v17 + 32);
  uint64_t v21 = *(void *)(v17 + 40);
  char v22 = *(unsigned char *)(v17 + 48);
  sub_100193004(v18, v19, v20, v21, v22);
  uint64_t v23 = *(void *)(v16 + 16);
  uint64_t v24 = *(void *)(v16 + 24);
  uint64_t v25 = *(void *)(v16 + 32);
  uint64_t v26 = *(void *)(v16 + 40);
  *(void *)(v16 + 16) = v18;
  *(void *)(v16 + 24) = v19;
  *(void *)(v16 + 32) = v20;
  *(void *)(v16 + 40) = v21;
  char v27 = *(unsigned char *)(v16 + 48);
  *(unsigned char *)(v16 + 48) = v22;
  sub_100191D78(v23, v24, v25, v26, v27);
  *(void *)(v16 + 56) = *(void *)(v17 + 56);
  *(void *)(v16 + 64) = *(void *)(v17 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v16 + 72) = *(void *)(v17 + 72);
  *(void *)(v16 + 80) = *(void *)(v17 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v16 + 88) = *(void *)(v17 + 88);
  *(void *)(v16 + 96) = *(void *)(v17 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v16 + 104) = *(void *)(v17 + 104);
  *(void *)(v16 + 112) = *(void *)(v17 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v16 + 120) = *(void *)(v17 + 120);
  *(void *)(v16 + 128) = *(void *)(v17 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v16 + 136) = *(unsigned char *)(v17 + 136);
  *(unsigned char *)(v16 + 137) = *(unsigned char *)(v17 + 137);
  *(unsigned char *)(v16 + 138) = *(unsigned char *)(v17 + 138);
  *(void *)(v16 + 144) = *(void *)(v17 + 144);
  *(void *)(v16 + 152) = *(void *)(v17 + 152);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v16 + 160) = *(unsigned char *)(v17 + 160);
  *(unsigned char *)(v16 + 161) = *(unsigned char *)(v17 + 161);
  *(void *)(a1 + v8[7]) = *(void *)(a2 + v8[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + v8[8]) = *(void *)(a2 + v8[8]);
  swift_retain();
  swift_release();
  uint64_t v28 = v8[9];
  uint64_t v29 = a1 + v28;
  uint64_t v30 = a2 + v28;
  uint64_t v31 = (int *)type metadata accessor for LocationFooterViewModel();
  LODWORD(v18) = _s7Weather24LocationCompositionStateOwet_0(v29, 1, (uint64_t)v31);
  int v32 = _s7Weather24LocationCompositionStateOwet_0(v30, 1, (uint64_t)v31);
  if (!v18)
  {
    if (v32)
    {
      sub_1001338DC(v29, (void (*)(void))type metadata accessor for LocationFooterViewModel);
      goto LABEL_13;
    }
    *(unsigned char *)uint64_t v29 = *(unsigned char *)v30;
    *(unsigned char *)(v29 + 1) = *(unsigned char *)(v30 + 1);
    *(unsigned char *)(v29 + 2) = *(unsigned char *)(v30 + 2);
    *(void *)(v29 + 8) = *(void *)(v30 + 8);
    *(void *)(v29 + 16) = *(void *)(v30 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v42 = v31[8];
    uint64_t v43 = (void *)(v29 + v42);
    uint64_t v44 = (const void *)(v30 + v42);
    uint64_t v45 = type metadata accessor for URL();
    int v46 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v43, 1, v45);
    int v47 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v44, 1, v45);
    if (v46)
    {
      if (!v47)
      {
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v45 - 8) + 16))(v43, v44, v45);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v43, 0, 1, v45);
        goto LABEL_59;
      }
    }
    else
    {
      uint64_t v178 = *(void *)(v45 - 8);
      if (!v47)
      {
        (*(void (**)(void *, const void *, uint64_t))(v178 + 24))(v43, v44, v45);
LABEL_59:
        uint64_t v224 = v31;
        uint64_t v180 = v31[9];
        uint64_t v181 = v29 + v180;
        uint64_t v182 = v30 + v180;
        *(unsigned char *)uint64_t v181 = *(unsigned char *)(v30 + v180);
        *(void *)(v181 + 8) = *(void *)(v30 + v180 + 8);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        uint64_t v221 = (int *)type metadata accessor for LearnMoreAttributorViewModel();
        uint64_t v183 = v221[6];
        uint64_t v184 = (const void *)(v182 + v183);
        uint64_t v215 = v181 + v183;
        int v185 = _s7Weather24LocationCompositionStateOwet_0(v181 + v183, 1, v45);
        int v186 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v184, 1, v45);
        if (v185)
        {
          if (v186)
          {
            size_t v187 = *(void *)(*(void *)(sub_10017DF08(&qword_100E749B0) - 8) + 64);
            uint64_t v188 = (void *)v215;
LABEL_64:
            memcpy(v188, v184, v187);
            goto LABEL_68;
          }
          (*(void (**)(uint64_t, const void *, uint64_t))(*(void *)(v45 - 8) + 16))(v215, v184, v45);
          _s7Weather24LocationCompositionStateOwst_0(v215, 0, 1, v45);
        }
        else
        {
          uint64_t v189 = *(void *)(v45 - 8);
          if (v186)
          {
            (*(void (**)(uint64_t, uint64_t))(v189 + 8))(v215, v45);
            size_t v187 = *(void *)(*(void *)(sub_10017DF08(&qword_100E749B0) - 8) + 64);
            uint64_t v188 = (void *)v215;
            goto LABEL_64;
          }
          (*(void (**)(uint64_t, const void *, uint64_t))(v189 + 24))(v215, v184, v45);
        }
LABEL_68:
        uint64_t v190 = v221[7];
        uint64_t v191 = (void *)(v181 + v190);
        uint64_t v192 = (void *)(v182 + v190);
        void *v191 = *v192;
        v191[1] = v192[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *(void *)(v181 + v221[8]) = *(void *)(v182 + v221[8]);
        swift_retain();
        swift_release();
        *(unsigned char *)(v29 + v224[10]) = *(unsigned char *)(v30 + v224[10]);
        uint64_t v193 = v224[11];
        uint64_t v194 = (void *)(v29 + v193);
        uint64_t v195 = (const void *)(v30 + v193);
        uint64_t v196 = type metadata accessor for LocationOfInterest();
        int v197 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v194, 1, v196);
        int v198 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v195, 1, v196);
        if (v197)
        {
          if (!v198)
          {
            (*(void (**)(void *, const void *, uint64_t))(*(void *)(v196 - 8) + 16))(v194, v195, v196);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v194, 0, 1, v196);
LABEL_74:
            *(unsigned char *)(v29 + v224[12]) = *(unsigned char *)(v30 + v224[12]);
            *(unsigned char *)(v29 + v224[13]) = *(unsigned char *)(v30 + v224[13]);
            uint64_t v201 = v224[14];
            uint64_t v202 = (unsigned char *)(v29 + v201);
            uint64_t v203 = (unsigned char *)(v30 + v201);
            uint64_t v204 = (int *)type metadata accessor for HomeAndWorkRefinementRowViewModel();
            int v205 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v202, 1, (uint64_t)v204);
            int v206 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v203, 1, (uint64_t)v204);
            if (v205)
            {
              if (!v206)
              {
                *uint64_t v202 = *v203;
                uint64_t v207 = v204[5];
                uint64_t v208 = &v202[v207];
                uint64_t v209 = &v203[v207];
                uint64_t v210 = type metadata accessor for Location();
                (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v210 - 8) + 16))(v208, v209, v210);
                (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v196 - 8) + 16))(&v202[v204[6]], &v203[v204[6]], v196);
                v202[v204[7]] = v203[v204[7]];
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v202, 0, 1, (uint64_t)v204);
                goto LABEL_15;
              }
            }
            else
            {
              if (!v206)
              {
                *uint64_t v202 = *v203;
                uint64_t v211 = v204[5];
                uint64_t v212 = &v202[v211];
                uint64_t v213 = &v203[v211];
                uint64_t v214 = type metadata accessor for Location();
                (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v214 - 8) + 24))(v212, v213, v214);
                (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v196 - 8) + 24))(&v202[v204[6]], &v203[v204[6]], v196);
                v202[v204[7]] = v203[v204[7]];
                goto LABEL_15;
              }
              sub_1001338DC((uint64_t)v202, (void (*)(void))type metadata accessor for HomeAndWorkRefinementRowViewModel);
            }
            size_t v38 = *(void *)(*(void *)(sub_10017DF08(&qword_100E6DC10) - 8) + 64);
            uint64_t v39 = v202;
            uint64_t v40 = v203;
LABEL_14:
            memcpy(v39, v40, v38);
LABEL_15:
            uint64_t v41 = a3;
            goto LABEL_31;
          }
        }
        else
        {
          uint64_t v199 = *(void *)(v196 - 8);
          if (!v198)
          {
            (*(void (**)(void *, const void *, uint64_t))(v199 + 24))(v194, v195, v196);
            goto LABEL_74;
          }
          (*(void (**)(void *, uint64_t))(v199 + 8))(v194, v196);
        }
        uint64_t v200 = sub_10017DF08(&qword_100E63508);
        memcpy(v194, v195, *(void *)(*(void *)(v200 - 8) + 64));
        goto LABEL_74;
      }
      (*(void (**)(void *, uint64_t))(v178 + 8))(v43, v45);
    }
    uint64_t v179 = sub_10017DF08(&qword_100E749B0);
    memcpy(v43, v44, *(void *)(*(void *)(v179 - 8) + 64));
    goto LABEL_59;
  }
  if (v32)
  {
LABEL_13:
    size_t v38 = *(void *)(*(void *)(sub_10017DF08(&qword_100E6DC18) - 8) + 64);
    uint64_t v39 = (void *)v29;
    uint64_t v40 = (const void *)v30;
    goto LABEL_14;
  }
  *(unsigned char *)uint64_t v29 = *(unsigned char *)v30;
  *(unsigned char *)(v29 + 1) = *(unsigned char *)(v30 + 1);
  *(unsigned char *)(v29 + 2) = *(unsigned char *)(v30 + 2);
  *(void *)(v29 + 8) = *(void *)(v30 + 8);
  *(void *)(v29 + 16) = *(void *)(v30 + 16);
  uint64_t v33 = v31[8];
  uint64_t v34 = (void *)(v29 + v33);
  uint64_t v35 = (const void *)(v30 + v33);
  uint64_t v36 = type metadata accessor for URL();
  swift_bridgeObjectRetain();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v35, 1, v36))
  {
    uint64_t v37 = sub_10017DF08(&qword_100E749B0);
    memcpy(v34, v35, *(void *)(*(void *)(v37 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v36 - 8) + 16))(v34, v35, v36);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v34, 0, 1, v36);
  }
  uint64_t v219 = v29;
  uint64_t v222 = v31;
  uint64_t v48 = v31[9];
  uint64_t v49 = v29 + v48;
  uint64_t v50 = v30 + v48;
  *(unsigned char *)uint64_t v49 = *(unsigned char *)(v30 + v48);
  *(void *)(v49 + 8) = *(void *)(v30 + v48 + 8);
  uint64_t v51 = (int *)type metadata accessor for LearnMoreAttributorViewModel();
  uint64_t v52 = v51[6];
  __dst = (void *)(v49 + v52);
  uint64_t v53 = (const void *)(v50 + v52);
  swift_bridgeObjectRetain();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v53, 1, v36))
  {
    uint64_t v54 = sub_10017DF08(&qword_100E749B0);
    memcpy(__dst, v53, *(void *)(*(void *)(v54 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v36 - 8) + 16))(__dst, v53, v36);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dst, 0, 1, v36);
  }
  uint64_t v55 = v51[7];
  uint64_t v56 = (void *)(v49 + v55);
  uint64_t v57 = (void *)(v50 + v55);
  *uint64_t v56 = *v57;
  v56[1] = v57[1];
  *(void *)(v49 + v51[8]) = *(void *)(v50 + v51[8]);
  *(unsigned char *)(v219 + v31[10]) = *(unsigned char *)(v30 + v31[10]);
  uint64_t v58 = v31[11];
  char v59 = (void *)(v219 + v58);
  uint64_t v60 = (const void *)(v30 + v58);
  uint64_t v61 = type metadata accessor for LocationOfInterest();
  swift_bridgeObjectRetain();
  swift_retain();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v60, 1, v61))
  {
    uint64_t v62 = sub_10017DF08(&qword_100E63508);
    memcpy(v59, v60, *(void *)(*(void *)(v62 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v61 - 8) + 16))(v59, v60, v61);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v59, 0, 1, v61);
  }
  uint64_t v63 = (uint64_t)v31;
  *(unsigned char *)(v219 + v31[12]) = *(unsigned char *)(v30 + v31[12]);
  *(unsigned char *)(v219 + v31[13]) = *(unsigned char *)(v30 + v31[13]);
  uint64_t v64 = v31[14];
  uint64_t v65 = (unsigned char *)(v219 + v64);
  uint64_t v66 = (unsigned char *)(v30 + v64);
  uint64_t v67 = (int *)type metadata accessor for HomeAndWorkRefinementRowViewModel();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v66, 1, (uint64_t)v67))
  {
    uint64_t v68 = sub_10017DF08(&qword_100E6DC10);
    memcpy(v65, v66, *(void *)(*(void *)(v68 - 8) + 64));
  }
  else
  {
    *uint64_t v65 = *v66;
    uint64_t v69 = v67[5];
    uint64_t v70 = &v65[v69];
    uint64_t v71 = &v66[v69];
    uint64_t v72 = type metadata accessor for Location();
    uint64_t v73 = v70;
    uint64_t v63 = (uint64_t)v222;
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v72 - 8) + 16))(v73, v71, v72);
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v61 - 8) + 16))(&v65[v67[6]], &v66[v67[6]], v61);
    v65[v67[7]] = v66[v67[7]];
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v65, 0, 1, (uint64_t)v67);
  }
  uint64_t v41 = a3;
  _s7Weather24LocationCompositionStateOwst_0(v219, 0, 1, v63);
LABEL_31:
  *(unsigned char *)(a1 + v8[10]) = *(unsigned char *)(a2 + v8[10]);
  *(unsigned char *)(a1 + v8[11]) = *(unsigned char *)(a2 + v8[11]);
  *(unsigned char *)(a1 + v8[12]) = *(unsigned char *)(a2 + v8[12]);
  *(unsigned char *)(a1 + v8[13]) = *(unsigned char *)(a2 + v8[13]);
  *(unsigned char *)(a1 + v8[14]) = *(unsigned char *)(a2 + v8[14]);
  uint64_t v74 = v8[15];
  uint64_t v75 = *(void **)(a2 + v74);
  uint64_t v76 = *(void **)(a1 + v74);
  *(void *)(a1 + v74) = v75;
  id v77 = v75;

  *(unsigned char *)(a1 + v8[16]) = *(unsigned char *)(a2 + v8[16]);
  *(unsigned char *)(a1 + v8[17]) = *(unsigned char *)(a2 + v8[17]);
  *(unsigned char *)(a1 + v8[18]) = *(unsigned char *)(a2 + v8[18]);
  uint64_t v78 = v8[19];
  uint64_t v79 = a1 + v78;
  uint64_t v80 = a2 + v78;
  uint64_t v81 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v81 - 8) + 24))(v79, v80, v81);
  uint64_t v82 = v8[20];
  char v83 = (void *)(a1 + v82);
  uint64_t v84 = (const void *)(a2 + v82);
  uint64_t v85 = type metadata accessor for ForegroundEffect();
  LODWORD(v79) = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v83, 1, v85);
  int v86 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v84, 1, v85);
  if (v79)
  {
    if (!v86)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v85 - 8) + 16))(v83, v84, v85);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v83, 0, 1, v85);
      goto LABEL_37;
    }
    goto LABEL_36;
  }
  uint64_t v87 = *(void *)(v85 - 8);
  if (v86)
  {
    (*(void (**)(void *, uint64_t))(v87 + 8))(v83, v85);
LABEL_36:
    uint64_t v88 = sub_10017DF08(&qword_100E65FA8);
    memcpy(v83, v84, *(void *)(*(void *)(v88 - 8) + 64));
    goto LABEL_37;
  }
  (*(void (**)(void *, const void *, uint64_t))(v87 + 24))(v83, v84, v85);
LABEL_37:
  *(unsigned char *)(a1 + v8[21]) = *(unsigned char *)(a2 + v8[21]);
  *(void *)(a1 + v8[22]) = *(void *)(a2 + v8[22]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + v8[23]) = *(unsigned char *)(a2 + v8[23]);
  uint64_t v89 = v8[24];
  uint64_t v90 = a1 + v89;
  uint64_t v91 = a2 + v89;
  uint64_t v92 = type metadata accessor for LocationEntity();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v92 - 8) + 24))(v90, v91, v92);
  uint64_t v93 = v41[5];
  uint64_t v94 = a1 + v93;
  uint64_t v95 = a2 + v93;
  uint64_t v96 = *(void *)(a2 + v93);
  uint64_t v97 = *(void *)(a2 + v93 + 8);
  char v98 = *(unsigned char *)(a2 + v93 + 16);
  sub_100190CC4(v96, v97, v98);
  uint64_t v99 = *(void *)v94;
  uint64_t v100 = *(void *)(v94 + 8);
  char v101 = *(unsigned char *)(v94 + 16);
  *(void *)uint64_t v94 = v96;
  *(void *)(v94 + 8) = v97;
  *(unsigned char *)(v94 + 16) = v98;
  sub_100191924(v99, v100, v101);
  *(void *)(v94 + 24) = *(void *)(v95 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v102 = v41[6];
  uint64_t v103 = a1 + v102;
  uint64_t v104 = a2 + v102;
  uint64_t v105 = *(void *)(a2 + v102);
  uint64_t v106 = *(void *)(a2 + v102 + 8);
  char v107 = *(unsigned char *)(a2 + v102 + 16);
  sub_100190CC4(v105, v106, v107);
  uint64_t v108 = *(void *)v103;
  uint64_t v109 = *(void *)(v103 + 8);
  char v110 = *(unsigned char *)(v103 + 16);
  *(void *)uint64_t v103 = v105;
  *(void *)(v103 + 8) = v106;
  *(unsigned char *)(v103 + 16) = v107;
  sub_100191924(v108, v109, v110);
  *(void *)(v103 + 24) = *(void *)(v104 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v111 = v41[7];
  uint64_t v112 = a1 + v111;
  uint64_t v113 = a2 + v111;
  uint64_t v114 = *(void *)(a1 + v111 + 24);
  uint64_t v115 = *(void *)(a2 + v111 + 24);
  if (v114)
  {
    if (v115)
    {
      uint64_t v116 = *(void *)v113;
      uint64_t v117 = *(void *)(v113 + 8);
      char v118 = *(unsigned char *)(v113 + 16);
      sub_100190CC4(*(void *)v113, v117, v118);
      uint64_t v119 = *(void *)v112;
      uint64_t v120 = *(void *)(v112 + 8);
      char v121 = *(unsigned char *)(v112 + 16);
      *(void *)uint64_t v112 = v116;
      *(void *)(v112 + 8) = v117;
      *(unsigned char *)(v112 + 16) = v118;
      sub_100191924(v119, v120, v121);
      *(void *)(v112 + 24) = *(void *)(v113 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_10024ADC8(v112);
      long long v125 = *(_OWORD *)(v113 + 16);
      *(_OWORD *)uint64_t v112 = *(_OWORD *)v113;
      *(_OWORD *)(v112 + 16) = v125;
    }
  }
  else if (v115)
  {
    uint64_t v122 = *(void *)v113;
    uint64_t v123 = *(void *)(v113 + 8);
    char v124 = *(unsigned char *)(v113 + 16);
    sub_100190CC4(*(void *)v113, v123, v124);
    *(void *)uint64_t v112 = v122;
    *(void *)(v112 + 8) = v123;
    *(unsigned char *)(v112 + 16) = v124;
    *(void *)(v112 + 24) = *(void *)(v113 + 24);
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v126 = *(_OWORD *)(v113 + 16);
    *(_OWORD *)uint64_t v112 = *(_OWORD *)v113;
    *(_OWORD *)(v112 + 16) = v126;
  }
  uint64_t v127 = v41[8];
  uint64_t v128 = a1 + v127;
  uint64_t v129 = a2 + v127;
  uint64_t v130 = type metadata accessor for Text.Measurements();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v130 - 8) + 24))(v128, v129, v130);
  if (a1 != a2)
  {
    uint64_t v131 = v41[9];
    uint64_t v132 = a1 + v131;
    uint64_t v133 = a2 + v131;
    sub_100178110(a1 + v131, &qword_100E63BD0);
    sub_10017DF08(&qword_100E63BD0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(void *)uint64_t v132 = *(void *)v133;
      *(void *)(v132 + 8) = *(void *)(v133 + 8);
      *(unsigned char *)(v132 + 16) = *(unsigned char *)(v133 + 16);
      *(unsigned char *)(v132 + 17) = *(unsigned char *)(v133 + 17);
      *(unsigned char *)(v132 + 18) = *(unsigned char *)(v133 + 18);
      uint64_t v134 = *(int *)(type metadata accessor for DisplayMetrics() + 36);
      uint64_t v135 = v132 + v134;
      uint64_t v136 = v133 + v134;
      uint64_t v137 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v137 - 8) + 16))(v135, v136, v137);
    }
    else
    {
      *(void *)uint64_t v132 = *(void *)v133;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v138 = v41[10];
  uint64_t v220 = a2;
  uint64_t v223 = a1;
  uint64_t v139 = a1 + v138;
  uint64_t v140 = v220 + v138;
  uint64_t v141 = *(void *)v140;
  uint64_t v142 = *(void *)(v140 + 8);
  uint64_t v143 = *(void *)(v140 + 16);
  uint64_t v144 = *(void *)(v140 + 24);
  uint64_t v145 = *(void *)(v140 + 32);
  uint64_t v146 = *(void *)(v140 + 40);
  uint64_t v147 = *(void *)(v140 + 48);
  uint64_t v148 = *(void *)(v140 + 56);
  uint64_t v149 = *(void *)(v140 + 64);
  char __dsta = *(unsigned char *)(v140 + 72);
  sub_1001910C8(*(void *)v140, v142, v143, v144, v145, v146, v147, v148, v149, __dsta);
  uint64_t v150 = *(void *)v139;
  uint64_t v151 = *(void *)(v139 + 8);
  uint64_t v152 = *(void *)(v139 + 16);
  uint64_t v153 = *(void *)(v139 + 24);
  uint64_t v154 = *(void *)(v139 + 32);
  uint64_t v155 = *(void *)(v139 + 40);
  uint64_t v156 = *(void *)(v139 + 48);
  uint64_t v157 = *(void *)(v139 + 56);
  uint64_t v158 = *(void *)(v139 + 64);
  char v159 = *(unsigned char *)(v139 + 72);
  *(void *)uint64_t v139 = v141;
  *(void *)(v139 + 8) = v142;
  *(void *)(v139 + 16) = v143;
  *(void *)(v139 + 24) = v144;
  *(void *)(v139 + 32) = v145;
  *(void *)(v139 + 40) = v146;
  *(void *)(v139 + 48) = v147;
  *(void *)(v139 + 56) = v148;
  *(void *)(v139 + 64) = v149;
  *(unsigned char *)(v139 + 72) = __dsta;
  sub_10018CCC4(v150, v151, v152, v153, v154, v155, v156, v157, v158, v159);
  uint64_t v160 = a3[11];
  uint64_t v161 = v223 + v160;
  uint64_t v162 = v220 + v160;
  uint64_t v163 = *(void *)v162;
  LOBYTE(v142) = *(unsigned char *)(v162 + 8);
  sub_100195B7C(*(void *)v162, v142);
  uint64_t v164 = *(void *)v161;
  char v165 = *(unsigned char *)(v161 + 8);
  *(void *)uint64_t v161 = v163;
  *(unsigned char *)(v161 + 8) = v142;
  sub_10018F6D8(v164, v165);
  if (v223 != v220)
  {
    uint64_t v166 = a3[12];
    uint64_t v167 = (void *)(v223 + v166);
    uint64_t v168 = (void *)(v220 + v166);
    sub_100178110(v223 + v166, &qword_100E63BC8);
    sub_10017DF08(&qword_100E63BC8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v169 = type metadata accessor for ContentSizeCategory();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v169 - 8) + 16))(v167, v168, v169);
    }
    else
    {
      *uint64_t v167 = *v168;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v170 = a3[13];
  uint64_t v171 = v223 + v170;
  uint64_t v172 = v220 + v170;
  uint64_t v173 = *(void *)v172;
  char v174 = *(unsigned char *)(v172 + 8);
  sub_100195B7C(*(void *)v172, v174);
  uint64_t v175 = *(void *)v171;
  char v176 = *(unsigned char *)(v171 + 8);
  *(void *)uint64_t v171 = v173;
  *(unsigned char *)(v171 + 8) = v174;
  sub_10018F6D8(v175, v176);
  return v223;
}

uint64_t initializeWithCopy for LocationTipOverlayModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 16);
  char v6 = *(unsigned char *)(a2 + 24);
  swift_retain();
  sub_100195B7C(v5, v6);
  *(void *)(a1 + 16) = v5;
  *(unsigned char *)(a1 + 24) = v6;
  uint64_t v7 = *(void *)(a2 + 32);
  char v8 = *(unsigned char *)(a2 + 40);
  sub_100195B7C(v7, v8);
  *(void *)(a1 + 32) = v7;
  *(unsigned char *)(a1 + 40) = v8;
  uint64_t v9 = *(void *)(a2 + 48);
  uint64_t v10 = *(void *)(a2 + 56);
  char v11 = *(unsigned char *)(a2 + 64);
  sub_100193DD4(v9, v10, v11);
  *(void *)(a1 + 48) = v9;
  *(void *)(a1 + 56) = v10;
  *(unsigned char *)(a1 + 64) = v11;
  uint64_t v12 = *(void *)(a2 + 72);
  LOBYTE(v10) = *(unsigned char *)(a2 + 80);
  sub_100195B7C(v12, v10);
  *(void *)(a1 + 72) = v12;
  *(unsigned char *)(a1 + 80) = v10;
  uint64_t v13 = *(void *)(a2 + 88);
  LOBYTE(v10) = *(unsigned char *)(a2 + 96);
  sub_100195B7C(v13, v10);
  *(void *)(a1 + 88) = v13;
  *(unsigned char *)(a1 + 96) = v10;
  *(unsigned char *)(a1 + 97) = *(unsigned char *)(a2 + 97);
  return a1;
}

uint64_t sub_1000B5BC0()
{
  type metadata accessor for CallbackScope();
  sub_10017C83C();
  uint64_t v35 = v2;
  uint64_t v36 = v1;
  __chkstk_darwin(v1);
  uint64_t v34 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Scope();
  sub_10017C83C();
  uint64_t v6 = v5;
  __chkstk_darwin(v7);
  sub_10016279C();
  uint64_t v8 = type metadata accessor for Container.TestSuite();
  sub_10017C83C();
  uint64_t v10 = v9;
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  ProxyContainer.public.getter();
  sub_10017DF08(&qword_100E97FC8);
  sub_100179D0C();
  swift_release();
  swift_release();
  ProxyContainer.public.getter();
  sub_10017DF08(&qword_100E97FD0);
  sub_100179D0C();
  swift_release();
  (*(void (**)(char *, void, uint64_t))(v10 + 104))(v13, enum case for Container.TestSuite.automation(_:), v8);
  Definition.whenTesting(_:_:)();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v8);
  ProxyContainer.public.getter();
  sub_10017DF08(&qword_100E97FD8);
  sub_100179D0C();
  swift_release();
  uint64_t v14 = enum case for Scope.containerSingleton(_:);
  uint64_t v15 = *(void (**)(void))(v6 + 104);
  uint64_t v38 = v6 + 104;
  uint64_t v16 = v4;
  ((void (*)(uint64_t, void, uint64_t))v15)(v0, enum case for Scope.containerSingleton(_:), v4);
  uint64_t v17 = v15;
  Definition.inScope(_:)();
  swift_release();
  swift_release();
  uint64_t v18 = *(void (**)(void))(v6 + 8);
  uint64_t v37 = v6 + 8;
  sub_100164944();
  v18();
  ProxyContainer.public.getter();
  uint64_t v31 = sub_10017DF08(&qword_100E81B08);
  sub_10017A54C();
  swift_release();
  unsigned int v40 = v14;
  uint64_t v39 = v17;
  ((void (*)(uint64_t, uint64_t, uint64_t))v17)(v0, v14, v16);
  Definition.inScope(_:)();
  swift_release();
  swift_release();
  uint64_t v33 = v18;
  sub_100164944();
  v18();
  ProxyContainer.public.getter();
  sub_100162708();
  type metadata accessor for WireframeLevelInterestManager();
  sub_10017A54C();
  swift_release();
  uint64_t v32 = v16;
  ((void (*)(uint64_t, uint64_t, uint64_t))v17)(v0, v14, v16);
  Definition.inScope(_:)();
  swift_release();
  swift_release();
  sub_100164944();
  v18();
  ProxyContainer.callback.getter();
  sub_1001B1E64(v41, v41[3]);
  uint64_t v20 = v34;
  uint64_t v19 = v35;
  uint64_t v21 = v36;
  (*(void (**)(char *, void, uint64_t))(v35 + 104))(v34, enum case for CallbackScope.any(_:), v36);
  dispatch thunk of CallbackRegistrationType.whenResolving<A>(_:scope:callback:)();
  (*(void (**)(char *, uint64_t))(v19 + 8))(v20, v21);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v41);
  ProxyContainer.private.getter();
  sub_10017DF08(&qword_100E97FE0);
  sub_100179D0C();
  swift_release();
  swift_release();
  ProxyContainer.public.getter();
  sub_10017DF08(&qword_100E64798);
  sub_100179D0C();
  swift_release();
  swift_release();
  ProxyContainer.public.getter();
  sub_10017DF08(&qword_100E647D8);
  sub_100179D0C();
  sub_1001A0E18();
  Definition.thenConfigure(_:)();
  swift_release();
  uint64_t v22 = v32;
  uint64_t v23 = v39;
  ((void (*)(uint64_t, void, uint64_t))v39)(v0, v40, v32);
  Definition.inScope(_:)();
  swift_release();
  swift_release();
  sub_100127C2C();
  uint64_t v24 = v33;
  sub_100164944();
  v24();
  ProxyContainer.public.getter();
  sub_10017DF08(&qword_100E97FE8);
  sub_10017A54C();
  sub_1001A0E18();
  Definition.thenConfigure(_:)();
  swift_release();
  sub_1001D1E08();
  v23();
  Definition.inScope(_:)();
  swift_release();
  swift_release();
  sub_100127C2C();
  sub_100164944();
  v24();
  ProxyContainer.public.getter();
  sub_10017DF08(&qword_100E97FF0);
  sub_10017A54C();
  swift_release();
  swift_release();
  ProxyContainer.public.getter();
  sub_10017DF08((uint64_t *)&unk_100E6F470);
  sub_10017A54C();
  sub_1001A0E18();
  uint64_t v25 = enum case for Scope.singleton(_:);
  LODWORD(v36) = enum case for Scope.singleton(_:);
  ((void (*)(uint64_t, void, uint64_t))v23)(v0, enum case for Scope.singleton(_:), v22);
  sub_100181778();
  swift_release();
  swift_release();
  uint64_t v26 = sub_10019D934();
  ((void (*)(uint64_t))v24)(v26);
  ProxyContainer.public.getter();
  sub_10017DF08(&qword_100E97FF8);
  sub_100179D0C();
  sub_1001A0E18();
  ((void (*)(uint64_t, uint64_t, uint64_t))v23)(v0, v25, v22);
  sub_100181778();
  swift_release();
  swift_release();
  uint64_t v27 = sub_10019D934();
  ((void (*)(uint64_t))v24)(v27);
  ProxyContainer.private.getter();
  sub_10017DF08(&qword_100E98000);
  sub_100179D0C();
  swift_release();
  swift_release();
  ProxyContainer.public.getter();
  sub_100162708();
  type metadata accessor for WeatherDataUpdater();
  sub_10017A54C();
  sub_1001A0E18();
  uint64_t v28 = v40;
  uint64_t v29 = v39;
  ((void (*)(uint64_t, void, uint64_t))v39)(v0, v40, v22);
  sub_100181778();
  swift_release();
  swift_release();
  sub_100127C2C();
  sub_100164944();
  v24();
  ProxyContainer.public.getter();
  sub_100162708();
  type metadata accessor for VisibleLocationWeatherLoadMonitor();
  sub_10017A54C();
  sub_1001A0E18();
  ((void (*)(uint64_t, uint64_t, uint64_t))v29)(v0, v28, v22);
  sub_100181778();
  swift_release();
  swift_release();
  sub_100127C2C();
  sub_100164944();
  v24();
  ProxyContainer.public.getter();
  sub_10017DF08(&qword_100E98008);
  sub_100179D0C();
  sub_1001A0E18();
  sub_1001D1E08();
  v29();
  sub_100181778();
  swift_release();
  swift_release();
  sub_100164F40();
  v24();
  ProxyContainer.public.getter();
  sub_10017DF08(&qword_100E7C0E8);
  sub_100179D0C();
  swift_release();
  swift_release();
  ProxyContainer.public.getter();
  sub_10017DF08(&qword_100E71B48);
  sub_100179D0C();
  swift_release();
  swift_release();
  ProxyContainer.public.getter();
  sub_10017DF08(&qword_100E71B50);
  sub_100179D0C();
  swift_release();
  swift_release();
  ProxyContainer.public.getter();
  sub_10017DF08(&qword_100E98010);
  sub_100179D0C();
  swift_release();
  swift_release();
  ProxyContainer.public.getter();
  sub_100162708();
  type metadata accessor for WeatherService();
  RegistrationContainer.register<A>(_:name:factory:)();
  sub_1001A0E18();
  sub_1001D1E08();
  v29();
  sub_100181778();
  swift_release();
  swift_release();
  sub_100164F40();
  v24();
  ProxyContainer.public.getter();
  sub_10017DF08(&qword_100E98018);
  sub_100179D0C();
  swift_release();
  swift_release();
  ProxyContainer.public.getter();
  sub_100162708();
  type metadata accessor for DebugOfflineViewController();
  sub_10017A54C();
  swift_release();
  swift_release();
  ProxyContainer.private.getter();
  swift_retain();
  RegistrationContainer.lazy(block:)();
  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for LocationViewerViewWeatherConditionBackground(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  uint64_t v4 = a2 + 24;
  long long v5 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 48) = v5;
  uint64_t v6 = v5;
  uint64_t v7 = **(void (***)(uint64_t, uint64_t, uint64_t))(v5 - 8);
  swift_retain();
  swift_unknownObjectRetain();
  v7(a1 + 24, v4, v6);
  uint64_t v8 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v8;
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_retain();
  return a1;
}

uint64_t sub_1000B6774(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  swift_release();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1 + 32);
  swift_release();
  uint64_t v4 = a1 + a2[8];
  sub_10017DF08(&qword_100E63BD0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = v4 + *(int *)(type metadata accessor for DisplayMetrics() + 36);
    uint64_t v6 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  }
  else
  {
    swift_release();
  }
  sub_10018F6D8(*(void *)(a1 + a2[9]), *(unsigned char *)(a1 + a2[9] + 8));
  sub_10014D82C(*(void *)(a1 + a2[10]), *(unsigned __int8 *)(a1 + a2[10] + 8), *(unsigned char *)(a1 + a2[10] + 9));
  swift_release();
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t sub_1000B68B0()
{
  return sub_1000B68C8();
}

uint64_t sub_1000B68C8()
{
  uint64_t v0 = type metadata accessor for Location();
  sub_1001627C0(v0);
  uint64_t v1 = sub_1001D4110();
  return sub_1000B694C(v1, v2);
}

uint64_t sub_1000B693C()
{
  return 255;
}

uint64_t sub_1000B694C(uint64_t a1, uint64_t a2)
{
  return sub_1001D4110();
}

uint64_t sub_1000B6990(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

void sub_1000B6A00()
{
  sub_10016314C();
  unint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v24 = v6;
  uint64_t v7 = type metadata accessor for DailyForecastComponentViewModel.DayForecastViewModel(0);
  uint64_t v8 = sub_100164920(v7);
  uint64_t v23 = v9;
  __chkstk_darwin(v8);
  sub_100162F18();
  uint64_t v25 = v5;
  uint64_t v10 = (v3 >> 1) - v5;
  if (__OFSUB__(v3 >> 1, v5))
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  if (!v10)
  {
LABEL_19:
    sub_100191138();
    sub_100163164();
    return;
  }
  uint64_t v11 = sub_1001791CC();
  sub_10021518C(v11, v12, v13);
  if ((v10 & 0x8000000000000000) == 0)
  {
    uint64_t v14 = 0;
    while (1)
    {
      uint64_t v15 = v14 + 1;
      if (__OFADD__(v14, 1)) {
        break;
      }
      if (v25 + v14 >= (uint64_t)(v3 >> 1) || v14 >= v10) {
        goto LABEL_21;
      }
      sub_10019DD78(v24 + *(void *)(v23 + 72) * (v25 + v14), v1, (void (*)(void))type metadata accessor for DailyForecastComponentViewModel.DayForecastViewModel);
      sub_10017AADC();
      v17();
      sub_10019E1D8(v1, (void (*)(void))type metadata accessor for DailyForecastComponentViewModel.DayForecastViewModel);
      if (v0)
      {
        swift_release();
        goto LABEL_19;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        uint64_t v18 = sub_100185790();
        sub_10021518C(v18, v19, v20);
      }
      unint64_t v22 = *((void *)&_swiftEmptyArrayStorage + 2);
      unint64_t v21 = *((void *)&_swiftEmptyArrayStorage + 3);
      if (v22 >= v21 >> 1) {
        sub_10021518C(v21 > 1, v22 + 1, 1);
      }
      *((void *)&_swiftEmptyArrayStorage + 2) = v22 + 1;
      *((_OWORD *)&_swiftEmptyArrayStorage + v22 + 2) = v26;
      ++v14;
      if (v15 == v10) {
        goto LABEL_19;
      }
    }
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
LABEL_23:
  __break(1u);
}

uint64_t sub_1000B6BD0@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_1000B6BF0(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_1000B6BF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  int v46 = a3;
  uint64_t v5 = sub_10017DF08(&qword_100E63DB8);
  __chkstk_darwin(v5 - 8);
  uint64_t v45 = (uint64_t)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = type metadata accessor for Font.TextStyle();
  uint64_t v7 = *(void *)(v41 - 8);
  __chkstk_darwin(v41);
  uint64_t v9 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for Text.Measurements();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v43 = v10;
  uint64_t v44 = v11;
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = v13;
  uint64_t v14 = type metadata accessor for DailyComponentView(0);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a2 + *(int *)(v14 + 44), v10);
  uint64_t v15 = (uint64_t *)(a1
                  + *(int *)(type metadata accessor for DailyForecastComponentViewModel.DayForecastViewModel(0) + 20));
  uint64_t v16 = v15[1];
  uint64_t v47 = *v15;
  uint64_t v48 = v16;
  sub_10014A85C();
  swift_bridgeObjectRetain();
  uint64_t v17 = Text.init<A>(_:)();
  uint64_t v19 = v18;
  char v21 = v20;
  uint64_t v22 = a2 + *(int *)(v14 + 36);
  uint64_t v23 = *(void *)v22;
  LOBYTE(a2) = *(unsigned char *)(v22 + 8);
  sub_100195B7C(*(void *)v22, a2);
  sub_100149AE8();
  LOBYTE(v11) = v24;
  sub_10018F6D8(v23, a2);
  uint64_t v25 = (unsigned int *)&enum case for Font.TextStyle.body(_:);
  if ((v11 & 1) == 0) {
    uint64_t v25 = (unsigned int *)&enum case for Font.TextStyle.title3(_:);
  }
  uint64_t v26 = v41;
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, *v25, v41);
  static Font.Weight.medium.getter();
  static Font.system(_:weight:)();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v26);
  uint64_t v27 = Text.font(_:)();
  uint64_t v29 = v28;
  char v31 = v30;
  swift_release();
  sub_100191924(v17, v19, v21 & 1);
  swift_bridgeObjectRelease();
  uint64_t v32 = type metadata accessor for Text.WritingMode();
  uint64_t v33 = v45;
  _s7Weather24LocationCompositionStateOwst_0(v45, 1, 1, v32);
  uint64_t v34 = v42;
  Text.Measurements.size(of:in:writingMode:)();
  uint64_t v36 = v35;
  uint64_t v38 = v37;
  sub_100191924(v27, v29, v31 & 1);
  swift_bridgeObjectRelease();
  sub_100178110(v33, &qword_100E63DB8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v44 + 8))(v34, v43);
  unsigned int v40 = v46;
  *int v46 = v36;
  v40[1] = v38;
  return result;
}

void *initializeBufferWithCopyOfBuffer for ExternalSearchQuery(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1000B6FBC(uint64_t a1, uint64_t a2, int *a3)
{
  type metadata accessor for LocationComponentHeaderViewModel(0);
  uint64_t v325 = a3;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v9 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v9;
      uint64_t v10 = *(void *)(a2 + 24);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = v10;
      uint64_t v11 = *(void *)(a2 + 40);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(void *)(a1 + 40) = v11;
      uint64_t v12 = *(void *)(a2 + 56);
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(void *)(a1 + 56) = v12;
      *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
      uint64_t v13 = *(void *)(a2 + 80);
      *(void *)(a1 + 72) = *(void *)(a2 + 72);
      *(void *)(a1 + 80) = v13;
      *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      break;
    case 2u:
      uint64_t v14 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v14;
      uint64_t v15 = *(void *)(a2 + 24);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = v15;
      uint64_t v16 = *(void *)(a2 + 40);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(void *)(a1 + 40) = v16;
      uint64_t v17 = *(void *)(a2 + 56);
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(void *)(a1 + 56) = v17;
      uint64_t v18 = *(void *)(a2 + 72);
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      *(void *)(a1 + 72) = v18;
      uint64_t v19 = *(void *)(a2 + 88);
      *(void *)(a1 + 80) = *(void *)(a2 + 80);
      *(void *)(a1 + 88) = v19;
      *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
      char v20 = a3;
      uint64_t v21 = *(void *)(a2 + 112);
      *(void *)(a1 + 104) = *(void *)(a2 + 104);
      *(void *)(a1 + 112) = v21;
      *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      a3 = v20;
      swift_bridgeObjectRetain();
      break;
    case 3u:
      uint64_t v22 = type metadata accessor for WeatherDescription();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16))(a1, a2, v22);
      uint64_t v23 = type metadata accessor for LocationComponentHeaderViewModel.Description(0);
      uint64_t v24 = *(int *)(v23 + 20);
      uint64_t v25 = a1 + v24;
      uint64_t v26 = a2 + v24;
      uint64_t v28 = *(void *)(a2 + v24);
      uint64_t v27 = *(void *)(a2 + v24 + 8);
      *(void *)uint64_t v25 = v28;
      *(void *)(v25 + 8) = v27;
      uint64_t v29 = *(void *)(v26 + 24);
      *(void *)(v25 + 16) = *(void *)(v26 + 16);
      *(void *)(v25 + 24) = v29;
      *(unsigned char *)(v25 + 32) = *(unsigned char *)(v26 + 32);
      uint64_t v30 = *(void *)(v26 + 48);
      *(void *)(v25 + 40) = *(void *)(v26 + 40);
      *(void *)(v25 + 48) = v30;
      *(unsigned char *)(a1 + *(int *)(v23 + 24)) = *(unsigned char *)(a2 + *(int *)(v23 + 24));
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      break;
    case 5u:
      uint64_t v31 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v31;
      uint64_t v32 = *(void *)(a2 + 24);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = v32;
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
      uint64_t v33 = *(void *)(a2 + 56);
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(void *)(a1 + 56) = v33;
      uint64_t v34 = *(void *)(a2 + 72);
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      *(void *)(a1 + 72) = v34;
      uint64_t v35 = *(void *)(a2 + 88);
      *(void *)(a1 + 80) = *(void *)(a2 + 80);
      *(void *)(a1 + 88) = v35;
      *(void *)(a1 + 96) = *(void *)(a2 + 96);
      *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
      uint64_t v36 = *(void *)(a2 + 120);
      *(void *)(a1 + 112) = *(void *)(a2 + 112);
      *(void *)(a1 + 120) = v36;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      break;
    default:
      uint64_t v6 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v6;
      uint64_t v7 = *(void *)(a2 + 24);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = v7;
      *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
      uint64_t v8 = *(void *)(a2 + 48);
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      *(void *)(a1 + 48) = v8;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      break;
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v37 = (int *)type metadata accessor for LocationComponentContainerViewModel();
  uint64_t v38 = v37[5];
  uint64_t v39 = (void *)(a1 + v38);
  unsigned int v40 = (void *)(a2 + v38);
  uint64_t v41 = type metadata accessor for LocationComponentViewModel();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      void *v39 = *v40;
      *(_OWORD *)(v39 + 1) = *(_OWORD *)(v40 + 1);
      *(_OWORD *)(v39 + 3) = *(_OWORD *)(v40 + 3);
      uint64_t v42 = v40[6];
      v39[5] = v40[5];
      v39[6] = v42;
      uint64_t v43 = v40[8];
      v39[7] = v40[7];
      v39[8] = v43;
      uint64_t v44 = v40[10];
      v39[9] = v40[9];
      v39[10] = v44;
      v39[11] = v40[11];
      *((_WORD *)v39 + 48) = *((_WORD *)v40 + 48);
      v39[13] = v40[13];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_64;
    case 1u:
      void *v39 = *v40;
      uint64_t v45 = (int *)type metadata accessor for DailyForecastComponentViewModel(0);
      uint64_t v46 = v45[5];
      uint64_t v47 = (char *)v39 + v46;
      uint64_t v48 = (char *)v40 + v46;
      swift_bridgeObjectRetain();
      uint64_t v49 = sub_10017DF08(&qword_100E65250);
      uint64_t v326 = v37;
      uint64_t v50 = *(void (**)(char *, char *, uint64_t))(*(void *)(v49 - 8) + 16);
      uint64_t v51 = v48;
      a3 = v325;
      v50(v47, v51, v49);
      v50((char *)v39 + v45[6], (char *)v40 + v45[6], v49);
      v50((char *)v39 + v45[7], (char *)v40 + v45[7], v49);
      uint64_t v37 = v326;
      uint64_t v52 = v45[8];
      uint64_t v53 = (void *)((char *)v39 + v52);
      uint64_t v54 = (void *)((char *)v40 + v52);
      uint64_t v55 = v54[1];
      *uint64_t v53 = *v54;
      v53[1] = v55;
      uint64_t v56 = v45[9];
      uint64_t v57 = (void *)((char *)v39 + v56);
      uint64_t v58 = (void *)((char *)v40 + v56);
      uint64_t v59 = v58[1];
      *uint64_t v57 = *v58;
      v57[1] = v59;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_64;
    case 2u:
      uint64_t v60 = v40[1];
      void *v39 = *v40;
      v39[1] = v60;
      uint64_t v61 = v40[3];
      void v39[2] = v40[2];
      v39[3] = v61;
      uint64_t v62 = type metadata accessor for FeelsLikeComponentViewModel(0);
      uint64_t v63 = *(int *)(v62 + 24);
      __dst = (void *)((char *)v39 + v63);
      uint64_t v317 = (int *)v62;
      uint64_t v64 = (void *)((char *)v40 + v63);
      uint64_t v65 = type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference(0);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v64, 1, v65))
      {
        uint64_t v66 = sub_10017DF08(&qword_100E63750);
        memcpy(__dst, v64, *(void *)(*(void *)(v66 - 8) + 64));
      }
      else
      {
        uint64_t v170 = v64[1];
        void *__dst = *v64;
        __dst[1] = v170;
        uint64_t v171 = *(int *)(v65 + 20);
        uint64_t v172 = (char *)__dst + v171;
        uint64_t v173 = (char *)v64 + v171;
        uint64_t v174 = type metadata accessor for TemperatureScaleConfiguration();
        uint64_t v308 = *(void (**)(char *, char *, uint64_t))(*(void *)(v174 - 8) + 16);
        swift_bridgeObjectRetain();
        uint64_t v175 = v174;
        a3 = v325;
        v308(v172, v173, v175);
        char v176 = (int *)type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
        *(void *)&v172[v176[5]] = *(void *)&v173[v176[5]];
        *(void *)&v172[v176[6]] = *(void *)&v173[v176[6]];
        *(void *)&v172[v176[7]] = *(void *)&v173[v176[7]];
        uint64_t v177 = v176[8];
        uint64_t v178 = &v172[v177];
        uint64_t v179 = &v173[v177];
        uint64_t v181 = *(void *)v179;
        uint64_t v180 = *((void *)v179 + 1);
        *(void *)uint64_t v178 = v181;
        *((void *)v178 + 1) = v180;
        v172[v176[9]] = v173[v176[9]];
        swift_bridgeObjectRetain();
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dst, 0, 1, v65);
      }
      goto LABEL_63;
    case 3u:
      void *v39 = *v40;
      swift_bridgeObjectRetain();
      goto LABEL_64;
    case 4u:
      *(_OWORD *)uint64_t v39 = *(_OWORD *)v40;
      void v39[2] = v40[2];
      swift_bridgeObjectRetain();
      goto LABEL_64;
    case 5u:
      uint64_t v67 = type metadata accessor for WeatherMapOverlayKind();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v67 - 8) + 16))(v39, v40, v67);
      uint64_t v68 = type metadata accessor for MapComponentViewModel();
      uint64_t v69 = *(int *)(v68 + 20);
      uint64_t v70 = (char *)v39 + v69;
      uint64_t v71 = (char *)v40 + v69;
      uint64_t v72 = type metadata accessor for Location();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v72 - 8) + 16))(v70, v71, v72);
      uint64_t v317 = (int *)v68;
      uint64_t v73 = *(int *)(v68 + 24);
      uint64_t v74 = (char *)v39 + v73;
      uint64_t v75 = (void *)((char *)v40 + v73);
      uint64_t v76 = type metadata accessor for WeatherData(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v75, 1, v76))
      {
        uint64_t v77 = sub_10017DF08(&qword_100E63850);
        memcpy(v74, v75, *(void *)(*(void *)(v77 - 8) + 64));
        goto LABEL_63;
      }
      uint64_t v332 = v37;
      uint64_t v182 = v74;
      uint64_t v183 = v75[1];
      *uint64_t v182 = *v75;
      v182[1] = v183;
      uint64_t v311 = v182;
      char __dsta = (int *)v76;
      uint64_t v184 = *(int *)(v76 + 20);
      int v185 = (char *)v182 + v184;
      int v186 = (char *)v75 + v184;
      uint64_t v187 = type metadata accessor for Locale();
      swift_bridgeObjectRetain();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v186, 1, v187))
      {
        uint64_t v188 = sub_10017DF08(&qword_100E63730);
        memcpy(v185, v186, *(void *)(*(void *)(v188 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v187 - 8) + 16))(v185, v186, v187);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v185, 0, 1, v187);
      }
      uint64_t v209 = __dsta[6];
      uint64_t v210 = (char *)v311 + v209;
      uint64_t v211 = (char *)v75 + v209;
      uint64_t v212 = type metadata accessor for WeatherDataModel();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v212 - 8) + 16))(v210, v211, v212);
      uint64_t v213 = __dsta[7];
      uint64_t v214 = (char *)v311 + v213;
      uint64_t v215 = (char *)v75 + v213;
      uint64_t v216 = sub_10017DF08(&qword_100E63738);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v215, 1, v216))
      {
        uint64_t v217 = type metadata accessor for WeatherData.CachingState(0);
        memcpy(v214, v215, *(void *)(*(void *)(v217 - 8) + 64));
      }
      else
      {
        uint64_t v218 = type metadata accessor for Date();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v218 - 8) + 16))(v214, v215, v218);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v214, 0, 1, v216);
      }
      uint64_t v219 = __dsta[8];
      uint64_t v220 = (void *)((char *)v311 + v219);
      uint64_t v221 = (void *)((char *)v75 + v219);
      uint64_t v222 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 1)
      {
        uint64_t v225 = type metadata accessor for WeatherStatisticsModel();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v225 - 8) + 16))(v220, v221, v225);
        goto LABEL_51;
      }
      if (!EnumCaseMultiPayload)
      {
        uint64_t v224 = v221[1];
        void *v220 = *v221;
        v220[1] = v224;
        swift_bridgeObjectRetain();
LABEL_51:
        swift_storeEnumTagMultiPayload();
        goto LABEL_53;
      }
      memcpy(v220, v221, *(void *)(*(void *)(v222 - 8) + 64));
LABEL_53:
      a3 = v325;
      uint64_t v37 = v332;
      uint64_t v226 = __dsta[9];
      uint64_t v227 = (char *)v311 + v226;
      uint64_t v228 = (char *)v75 + v226;
      uint64_t v229 = type metadata accessor for WeatherDataOverrides();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v228, 1, v229))
      {
        uint64_t v230 = sub_10017DF08(&qword_100E63740);
        memcpy(v227, v228, *(void *)(*(void *)(v230 - 8) + 64));
        uint64_t v231 = (uint64_t)v311;
      }
      else
      {
        uint64_t v306 = v229;
        uint64_t v309 = v227;
        uint64_t v232 = type metadata accessor for Date();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v228, 1, v232))
        {
          uint64_t v233 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
          memcpy(v227, v228, *(void *)(*(void *)(v233 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v232 - 8) + 16))(v227, v228, v232);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v227, 0, 1, v232);
        }
        uint64_t v234 = *(int *)(v306 + 20);
        uint64_t v235 = &v227[v234];
        uint64_t v236 = &v228[v234];
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v236, 1, v232))
        {
          uint64_t v237 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
          memcpy(v235, v236, *(void *)(*(void *)(v237 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v232 - 8) + 16))(v235, v236, v232);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v235, 0, 1, v232);
        }
        uint64_t v231 = (uint64_t)v311;
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v309, 0, 1, v306);
      }
      _s7Weather24LocationCompositionStateOwst_0(v231, 0, 1, (uint64_t)__dsta);
LABEL_63:
      uint64_t v238 = v317[7];
      uint64_t v239 = (void *)((char *)v39 + v238);
      uint64_t v240 = (void *)((char *)v40 + v238);
      uint64_t v241 = v240[1];
      void *v239 = *v240;
      v239[1] = v241;
      swift_bridgeObjectRetain();
LABEL_64:
      swift_storeEnumTagMultiPayload();
LABEL_65:
      *(_WORD *)(a1 + v37[6]) = *(_WORD *)(a2 + v37[6]);
      uint64_t v242 = v37[7];
      char v243 = (unsigned char *)(a1 + v242);
      uint64_t v244 = (unsigned char *)(a2 + v242);
      uint64_t v245 = type metadata accessor for LocationComponentAction(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v244, 1, v245))
      {
        uint64_t v246 = sub_10017DF08(&qword_100E7AF78);
        memcpy(v243, v244, *(void *)(*(void *)(v246 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            uint64_t v247 = type metadata accessor for URL();
            (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v247 - 8) + 16))(v243, v244, v247);
            uint64_t v248 = sub_10017DF08(&qword_100E66478);
            v243[*(int *)(v248 + 48)] = v244[*(int *)(v248 + 48)];
            goto LABEL_73;
          case 1u:
            uint64_t v249 = type metadata accessor for WeatherMapOverlayKind();
            (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v249 - 8) + 16))(v243, v244, v249);
            goto LABEL_73;
          case 2u:
            uint64_t v250 = type metadata accessor for DetailCondition();
            (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v250 - 8) + 16))(v243, v244, v250);
            uint64_t v251 = sub_10017DF08(&qword_100E66488);
            v243[*(int *)(v251 + 48)] = v244[*(int *)(v251 + 48)];
            goto LABEL_73;
          case 4u:
            *char v243 = *v244;
            uint64_t v252 = *(int *)(sub_10017DF08(&qword_100E66480) + 48);
            v253 = &v243[v252];
            uint64_t v254 = &v244[v252];
            uint64_t v255 = type metadata accessor for Location();
            (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v255 - 8) + 16))(v253, v254, v255);
LABEL_73:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v243, v244, *(void *)(*(void *)(v245 - 8) + 64));
            break;
        }
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v243, 0, 1, v245);
      }
      uint64_t v256 = a3[5];
      uint64_t v257 = a1 + v256;
      uint64_t v258 = a2 + v256;
      uint64_t v259 = type metadata accessor for Text.Measurements();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v259 - 8) + 16))(v257, v258, v259);
      uint64_t v260 = a3[6];
      uint64_t v261 = (void *)(a1 + v260);
      uint64_t v262 = (void *)(a2 + v260);
      sub_10017DF08(&qword_100E63BC8);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v263 = type metadata accessor for ContentSizeCategory();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v263 - 8) + 16))(v261, v262, v263);
      }
      else
      {
        *uint64_t v261 = *v262;
        swift_retain();
      }
      swift_storeEnumTagMultiPayload();
      uint64_t v264 = a3[7];
      uint64_t v265 = a1 + v264;
      uint64_t v266 = a2 + v264;
      uint64_t v267 = *(void *)v266;
      char v268 = *(unsigned char *)(v266 + 8);
      sub_100195B7C(*(void *)v266, v268);
      *(void *)uint64_t v265 = v267;
      *(unsigned char *)(v265 + 8) = v268;
      uint64_t v269 = a3[8];
      uint64_t v333 = a2;
      uint64_t v334 = a1;
      uint64_t v270 = a1 + v269;
      uint64_t v271 = v333 + v269;
      uint64_t v272 = *(void *)v271;
      uint64_t v273 = *(void *)(v271 + 8);
      uint64_t v274 = *(void *)(v271 + 16);
      uint64_t v275 = *(void *)(v271 + 24);
      uint64_t v276 = *(void *)(v271 + 32);
      uint64_t v277 = *(void *)(v271 + 40);
      uint64_t v278 = *(void *)(v271 + 48);
      uint64_t v279 = *(void *)(v271 + 56);
      uint64_t v280 = *(void *)(v271 + 64);
      char v324 = *(unsigned char *)(v271 + 72);
      sub_1001910C8(*(void *)v271, v273, v274, v275, v276, v277, v278, v279, v280, v324);
      *(void *)uint64_t v270 = v272;
      *(void *)(v270 + 8) = v273;
      *(void *)(v270 + 16) = v274;
      *(void *)(v270 + 24) = v275;
      *(void *)(v270 + 32) = v276;
      *(void *)(v270 + 40) = v277;
      *(void *)(v270 + 48) = v278;
      *(void *)(v270 + 56) = v279;
      *(void *)(v270 + 64) = v280;
      *(unsigned char *)(v270 + 72) = v324;
      uint64_t v281 = v325[9];
      uint64_t v282 = v334 + v281;
      uint64_t v283 = v333 + v281;
      uint64_t v284 = *(void *)v283;
      LOBYTE(v273) = *(unsigned char *)(v283 + 9);
      LOBYTE(v274) = *(unsigned char *)(v283 + 8);
      sub_100193DD4(*(void *)v283, v274, v273);
      *(void *)uint64_t v282 = v284;
      *(unsigned char *)(v282 + 8) = v274;
      *(unsigned char *)(v282 + 9) = v273;
      uint64_t v285 = v325[10];
      uint64_t v286 = v334 + v285;
      uint64_t v287 = v333 + v285;
      uint64_t v288 = *(void *)v287;
      LOBYTE(v273) = *(unsigned char *)(v287 + 8);
      sub_100195B7C(*(void *)v287, v273);
      *(void *)uint64_t v286 = v288;
      *(unsigned char *)(v286 + 8) = v273;
      uint64_t v289 = v325[11];
      uint64_t v290 = v334 + v289;
      uint64_t v291 = v333 + v289;
      uint64_t v292 = *(void *)v291;
      LOBYTE(v273) = *(unsigned char *)(v291 + 8);
      sub_100195B7C(*(void *)v291, v273);
      *(void *)uint64_t v290 = v292;
      *(unsigned char *)(v290 + 8) = v273;
      uint64_t v293 = v325[12];
      uint64_t v294 = (void *)(v334 + v293);
      uint64_t v295 = (void *)(v333 + v293);
      sub_10017DF08(&qword_100E62CB8);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v296 = type metadata accessor for LayoutDirection();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v296 - 8) + 16))(v294, v295, v296);
      }
      else
      {
        *uint64_t v294 = *v295;
        swift_retain();
      }
      swift_storeEnumTagMultiPayload();
      uint64_t v297 = v325[13];
      uint64_t v298 = v334 + v297;
      uint64_t v299 = v333 + v297;
      uint64_t v300 = *(void *)v299;
      char v301 = *(unsigned char *)(v299 + 9);
      unsigned __int8 v302 = *(unsigned char *)(v299 + 8);
      sub_100193DD4(*(void *)v299, v302, v301);
      *(void *)uint64_t v298 = v300;
      *(unsigned char *)(v298 + 8) = v302;
      *(unsigned char *)(v298 + 9) = v301;
      return v334;
    case 6u:
      uint64_t v78 = v40[1];
      void *v39 = *v40;
      v39[1] = v78;
      int v79 = *((unsigned __int8 *)v40 + 32);
      swift_bridgeObjectRetain();
      uint64_t v327 = v37;
      if (v79 == 255)
      {
        *((_OWORD *)v39 + 1) = *((_OWORD *)v40 + 1);
        *((unsigned char *)v39 + 32) = *((unsigned char *)v40 + 32);
      }
      else
      {
        uint64_t v80 = v40[2];
        uint64_t v81 = v40[3];
        sub_1001F3C64(v80, v81, v79);
        void v39[2] = v80;
        v39[3] = v81;
        *((unsigned char *)v39 + 32) = v79;
      }
      v39[5] = v40[5];
      uint64_t v189 = (int *)type metadata accessor for MoonComponentViewModel();
      uint64_t v190 = v189[7];
      uint64_t v323 = (char *)v39 + v190;
      uint64_t v191 = (char *)v40 + v190;
      uint64_t v192 = type metadata accessor for Date();
      uint64_t v193 = *(void (**)(char *, char *, uint64_t))(*(void *)(v192 - 8) + 16);
      swift_bridgeObjectRetain();
      v193(v323, v191, v192);
      *((unsigned char *)v39 + v189[8]) = *((unsigned char *)v40 + v189[8]);
      *(void *)((char *)v39 + v189[9]) = *(void *)((char *)v40 + v189[9]);
      swift_storeEnumTagMultiPayload();
      a3 = v325;
      uint64_t v37 = v327;
      goto LABEL_65;
    case 7u:
      uint64_t v82 = type metadata accessor for NewsArticleComponentViewModel(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v83 = v40[1];
        void *v39 = *v40;
        v39[1] = v83;
        uint64_t v84 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
        uint64_t v85 = v84[5];
        uint64_t v318 = (char *)v39 + v85;
        int v86 = (char *)v40 + v85;
        uint64_t v87 = type metadata accessor for URL();
        swift_bridgeObjectRetain();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v86, 1, v87))
        {
          uint64_t v88 = sub_10017DF08(&qword_100E749B0);
          memcpy(v318, v86, *(void *)(*(void *)(v88 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v87 - 8) + 16))(v318, v86, v87);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v318, 0, 1, v87);
        }
        uint64_t v194 = v84[6];
        uint64_t v195 = (void *)((char *)v39 + v194);
        uint64_t v196 = (void *)((char *)v40 + v194);
        uint64_t v197 = v196[1];
        *uint64_t v195 = *v196;
        v195[1] = v197;
        uint64_t v198 = v84[7];
        uint64_t v199 = (char *)v39 + v198;
        uint64_t v200 = v84;
        uint64_t v201 = (char *)v40 + v198;
        uint64_t v202 = *(void (**)(char *, char *, uint64_t))(*(void *)(v87 - 8) + 16);
        swift_bridgeObjectRetain();
        uint64_t v203 = v199;
        uint64_t v204 = v200;
        v202(v203, v201, v87);
        uint64_t v205 = v200[8];
        int v206 = (char *)v39 + v205;
        uint64_t v207 = (char *)v40 + v205;
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v40 + v205, 1, v87))
        {
          uint64_t v208 = sub_10017DF08(&qword_100E749B0);
          memcpy(v206, v207, *(void *)(*(void *)(v208 - 8) + 64));
        }
        else
        {
          v202(v206, v207, v87);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v206, 0, 1, v87);
        }
        a3 = v325;
        *((unsigned char *)v39 + v204[9]) = *((unsigned char *)v40 + v204[9]);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v39, v40, *(void *)(*(void *)(v82 - 8) + 64));
      }
      goto LABEL_64;
    case 8u:
      uint64_t v89 = v40[1];
      void *v39 = *v40;
      v39[1] = v89;
      uint64_t v90 = *(int *)(type metadata accessor for NextHourPrecipitationComponentViewModel() + 20);
      __dstb = (char *)v40 + v90;
      uint64_t v319 = (char *)v39 + v90;
      uint64_t HourPrecipitationChartViewModel = type metadata accessor for NextHourPrecipitationChartViewModel();
      uint64_t v92 = v37;
      uint64_t v93 = *(void (**)(char *, char *, uint64_t))(*(void *)(HourPrecipitationChartViewModel - 8) + 16);
      swift_bridgeObjectRetain();
      v93(v319, __dstb, HourPrecipitationChartViewModel);
      uint64_t v37 = v92;
      goto LABEL_64;
    case 9u:
      uint64_t v94 = type metadata accessor for Location();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v94 - 8) + 16))(v39, v40, v94);
      uint64_t v95 = type metadata accessor for NotificationsOptInComponentViewModel();
      *((unsigned char *)v39 + *(int *)(v95 + 20)) = *((unsigned char *)v40 + *(int *)(v95 + 20));
      goto LABEL_64;
    case 0xAu:
      uint64_t v96 = v40[1];
      void *v39 = *v40;
      v39[1] = v96;
      uint64_t v97 = v40[3];
      void v39[2] = v40[2];
      v39[3] = v97;
      uint64_t v98 = v40[5];
      v39[4] = v40[4];
      v39[5] = v98;
      uint64_t v99 = v40[7];
      v39[6] = v40[6];
      v39[7] = v99;
      uint64_t v100 = v40[9];
      v39[8] = v40[8];
      v39[9] = v100;
      uint64_t v101 = v40[10];
      uint64_t v102 = v40[11];
      v39[10] = v101;
      v39[11] = v102;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_64;
    case 0xBu:
      uint64_t v103 = type metadata accessor for PressureTrend();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v103 - 8) + 16))(v39, v40, v103);
      uint64_t v104 = (int *)type metadata accessor for PressureComponentViewModel();
      uint64_t v105 = v104[5];
      uint64_t v106 = (void *)((char *)v39 + v105);
      char v107 = (void *)((char *)v40 + v105);
      uint64_t v109 = *v107;
      uint64_t v108 = v107[1];
      *uint64_t v106 = v109;
      v106[1] = v108;
      uint64_t v110 = v104[6];
      uint64_t v111 = (void *)((char *)v39 + v110);
      uint64_t v112 = (void *)((char *)v40 + v110);
      uint64_t v113 = v112[1];
      *uint64_t v111 = *v112;
      v111[1] = v113;
      uint64_t v114 = v104[7];
      uint64_t v115 = (void *)((char *)v39 + v114);
      uint64_t v116 = (void *)((char *)v40 + v114);
      uint64_t v117 = v116[1];
      *uint64_t v115 = *v116;
      v115[1] = v117;
      *(void *)((char *)v39 + v104[8]) = *(void *)((char *)v40 + v104[8]);
      uint64_t v118 = v104[9];
      uint64_t v119 = (void *)((char *)v39 + v118);
      uint64_t v120 = (void *)((char *)v40 + v118);
      uint64_t v121 = v120[1];
      *uint64_t v119 = *v120;
      v119[1] = v121;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_64;
    case 0xDu:
      uint64_t v122 = v40[1];
      void *v39 = *v40;
      v39[1] = v122;
      uint64_t v123 = v40[3];
      void v39[2] = v40[2];
      v39[3] = v123;
      uint64_t v124 = v40[5];
      v39[4] = v40[4];
      v39[5] = v124;
      uint64_t v125 = v40[7];
      v39[6] = v40[6];
      v39[7] = v125;
      v39[8] = v40[8];
      uint64_t v126 = type metadata accessor for SevereAlertComponentViewModel();
      uint64_t v127 = *(int *)(v126 + 36);
      __dstc = (char *)v39 + v127;
      uint64_t v320 = (int *)v126;
      uint64_t v310 = (char *)v40 + v127;
      uint64_t v328 = v37;
      uint64_t v128 = type metadata accessor for WeatherAlert.Prominence();
      v307 = *(void (**)(char *, char *, uint64_t))(*(void *)(v128 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      a3 = v325;
      swift_bridgeObjectRetain();
      uint64_t v129 = v128;
      uint64_t v37 = v328;
      v307(__dstc, v310, v129);
      *(void *)((char *)v39 + v320[10]) = *(void *)((char *)v40 + v320[10]);
      goto LABEL_64;
    case 0xEu:
      uint64_t v130 = type metadata accessor for SunriseSunsetViewModel();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v130 - 8) + 16))(v39, v40, v130);
      goto LABEL_64;
    case 0xFu:
      uint64_t v131 = v40[1];
      void *v39 = *v40;
      v39[1] = v131;
      uint64_t v132 = v40[3];
      void v39[2] = v40[2];
      v39[3] = v132;
      uint64_t v329 = v37;
      uint64_t v133 = v40[5];
      v39[4] = v40[4];
      v39[5] = v133;
      uint64_t v134 = v40[7];
      v39[6] = v40[6];
      v39[7] = v134;
      uint64_t v135 = v40[9];
      v39[8] = v40[8];
      v39[9] = v135;
      uint64_t v136 = v40[11];
      v39[10] = v40[10];
      v39[11] = v136;
      uint64_t v137 = v40[13];
      unsigned char v39[12] = v40[12];
      v39[13] = v137;
      uint64_t v138 = v40[15];
      v39[14] = v40[14];
      v39[15] = v138;
      uint64_t v139 = v40[17];
      v39[16] = v40[16];
      v39[17] = v139;
      uint64_t v140 = v40[19];
      v39[18] = v40[18];
      v39[19] = v140;
      uint64_t v141 = v40[21];
      v39[20] = v40[20];
      v39[21] = v141;
      uint64_t v142 = v40[23];
      v39[22] = v40[22];
      v39[23] = v142;
      uint64_t v143 = v40[24];
      uint64_t v144 = v40[25];
      v39[24] = v143;
      v39[25] = v144;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v37 = v329;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      a3 = v325;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_64;
    case 0x10u:
      *(_OWORD *)uint64_t v39 = *(_OWORD *)v40;
      uint64_t v145 = v40[3];
      void v39[2] = v40[2];
      v39[3] = v145;
      char v330 = v37;
      uint64_t v146 = type metadata accessor for UVIndexComponentViewModel();
      uint64_t v147 = *(int *)(v146 + 28);
      __dstd = (char *)v40 + v147;
      int v321 = (char *)v39 + v147;
      uint64_t v148 = type metadata accessor for WeatherDescription();
      uint64_t v149 = a3;
      uint64_t v150 = *(void (**)(char *, char *, uint64_t))(*(void *)(v148 - 8) + 16);
      swift_bridgeObjectRetain();
      v150(v321, __dstd, v148);
      a3 = v149;
      uint64_t v151 = *(int *)(v146 + 32);
      uint64_t v37 = v330;
      *(void *)((char *)v39 + v151) = *(void *)((char *)v40 + v151);
      swift_bridgeObjectRetain();
      goto LABEL_64;
    case 0x11u:
      uint64_t v152 = v40[1];
      void *v39 = *v40;
      v39[1] = v152;
      uint64_t v153 = v40[3];
      void v39[2] = v40[2];
      v39[3] = v153;
      uint64_t v154 = v37;
      uint64_t v155 = v40[5];
      v39[4] = v40[4];
      v39[5] = v155;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v37 = v154;
      swift_bridgeObjectRetain();
      goto LABEL_64;
    case 0x12u:
      uint64_t v156 = v40[1];
      void *v39 = *v40;
      v39[1] = v156;
      uint64_t v157 = v40[3];
      void v39[2] = v40[2];
      v39[3] = v157;
      uint64_t v158 = v40[5];
      v39[4] = v40[4];
      v39[5] = v158;
      uint64_t v159 = v40[7];
      v39[6] = v40[6];
      v39[7] = v159;
      uint64_t v160 = v40[9];
      v39[8] = v40[8];
      v39[9] = v160;
      uint64_t v161 = v40[11];
      v39[10] = v40[10];
      v39[11] = v161;
      uint64_t v162 = v40[13];
      unsigned char v39[12] = v40[12];
      v39[13] = v162;
      uint64_t v163 = v40[15];
      v39[14] = v40[14];
      v39[15] = v163;
      uint64_t v164 = v40[17];
      v39[16] = v40[16];
      v39[17] = v164;
      uint64_t v165 = v40[19];
      v39[18] = v40[18];
      v39[19] = v165;
      uint64_t v166 = v40[21];
      v39[20] = v40[20];
      v39[21] = v166;
      *((_OWORD *)v39 + 11) = *((_OWORD *)v40 + 11);
      v39[24] = v40[24];
      uint64_t v322 = (int *)type metadata accessor for WindComponentViewModel();
      uint64_t v167 = v322[17];
      uint64_t v304 = (char *)v40 + v167;
      uint64_t v305 = (char *)v39 + v167;
      uint64_t v168 = type metadata accessor for WindComponentCompassViewModel();
      char v331 = v37;
      uint64_t v169 = *(void (**)(char *, char *, uint64_t))(*(void *)(v168 - 8) + 16);
      swift_bridgeObjectRetain();
      a3 = v325;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v169(v305, v304, v168);
      uint64_t v37 = v331;
      *(void *)((char *)v39 + v322[18]) = *(void *)((char *)v40 + v322[18]);
      swift_bridgeObjectRetain();
      goto LABEL_64;
    default:
      memcpy(v39, v40, *(void *)(*(void *)(v41 - 8) + 64));
      goto LABEL_65;
  }
}

void *sub_1000B8B60(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  if (a1 != a2)
  {
    uint64_t v6 = a3[5];
    uint64_t v7 = (void *)((char *)a1 + v6);
    uint64_t v8 = (void *)((char *)a2 + v6);
    sub_100178110((uint64_t)a1 + v6, &qword_100E62D60);
    sub_10017DF08(&qword_100E62D60);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v9 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
    }
    else
    {
      *uint64_t v7 = *v8;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v10 = a3[6];
    uint64_t v11 = (void *)((char *)a1 + v10);
    uint64_t v12 = (void *)((char *)a2 + v10);
    sub_100178110((uint64_t)a1 + v10, (uint64_t *)&unk_100EAA560);
    sub_10017DF08((uint64_t *)&unk_100EAA560);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v13 = type metadata accessor for UserInterfaceSizeClass();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v12, 1, v13))
      {
        uint64_t v14 = sub_10017DF08(&qword_100E65ED8);
        memcpy(v11, v12, *(void *)(*(void *)(v14 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v11, 0, 1, v13);
      }
    }
    else
    {
      *uint64_t v11 = *v12;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v15 = a3[7];
    uint64_t v16 = (void *)((char *)a1 + v15);
    uint64_t v17 = (void *)((char *)a2 + v15);
    sub_100178110((uint64_t)a1 + v15, &qword_100E83C68);
    sub_10017DF08(&qword_100E83C68);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v18 = type metadata accessor for TargetWindowSizeClass();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v17, 1, v18))
      {
        uint64_t v19 = sub_10017DF08(&qword_100EAA930);
        memcpy(v16, v17, *(void *)(*(void *)(v19 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v16, 0, 1, v18);
      }
    }
    else
    {
      *uint64_t v16 = *v17;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v20 = a3[8];
  uint64_t v21 = (char *)a1 + v20;
  uint64_t v22 = (char *)a2 + v20;
  uint64_t v23 = *(void *)v22;
  char v24 = v22[8];
  sub_100195B7C(*(void *)v22, v24);
  uint64_t v25 = *(void *)v21;
  char v26 = v21[8];
  *(void *)uint64_t v21 = v23;
  v21[8] = v24;
  sub_10018F6D8(v25, v26);
  uint64_t v27 = a3[9];
  uint64_t v28 = (char *)a1 + v27;
  uint64_t v29 = (char *)a2 + v27;
  uint64_t v30 = *(void *)v29;
  char v31 = v29[8];
  sub_100195B7C(*(void *)v29, v31);
  uint64_t v32 = *(void *)v28;
  char v33 = v28[8];
  *(void *)uint64_t v28 = v30;
  v28[8] = v31;
  sub_10018F6D8(v32, v33);
  uint64_t v34 = a3[10];
  uint64_t v35 = (char *)a1 + v34;
  uint64_t v36 = (char *)a2 + v34;
  uint64_t v37 = type metadata accessor for WeatherConditionBackgroundModel();
  uint64_t v38 = *(void *)(v37 - 8);
  uint64_t v39 = *(void (**)(char *, char *, uint64_t))(v38 + 24);
  v39(v35, v36, v37);
  uint64_t v40 = a3[11];
  uint64_t v41 = (void *)((char *)a1 + v40);
  uint64_t v42 = (void *)((char *)a2 + v40);
  uint64_t v43 = v42[1];
  *uint64_t v41 = *v42;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  v41[1] = v43;
  sub_1000C1E18((void *)((char *)a1 + a3[12]), (void *)((char *)a2 + a3[12]));
  uint64_t v44 = a3[13];
  uint64_t v45 = (void *)((char *)a1 + v44);
  uint64_t v46 = (void *)((char *)a2 + v44);
  void *v45 = *v46;
  v45[1] = v46[1];
  void v45[2] = v46[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[14]) = *(void *)((char *)a2 + a3[14]);
  swift_retain();
  swift_release();
  *(void *)((char *)a1 + a3[15]) = *(void *)((char *)a2 + a3[15]);
  *((unsigned char *)a1 + a3[16]) = *((unsigned char *)a2 + a3[16]);
  uint64_t v47 = a3[17];
  uint64_t v48 = (char *)a1 + v47;
  uint64_t v49 = (char *)a2 + v47;
  uint64_t v50 = type metadata accessor for AnimatedGradient();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v50 - 8) + 24))(v48, v49, v50);
  uint64_t v51 = sub_10017DF08(&qword_100EB4850);
  *(void *)&v48[*(int *)(v51 + 28)] = *(void *)&v49[*(int *)(v51 + 28)];
  swift_retain();
  swift_release();
  uint64_t v52 = a3[18];
  uint64_t v53 = (char *)a1 + v52;
  uint64_t v54 = (char *)a2 + v52;
  LODWORD(v43) = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a1 + v52, 1, v37);
  int v55 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v54, 1, v37);
  if (v43)
  {
    if (!v55)
    {
      (*(void (**)(char *, char *, uint64_t))(v38 + 16))(v53, v54, v37);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v53, 0, 1, v37);
      goto LABEL_22;
    }
    goto LABEL_21;
  }
  if (v55)
  {
    (*(void (**)(char *, uint64_t))(v38 + 8))(v53, v37);
LABEL_21:
    uint64_t v56 = sub_10017DF08(&qword_100E64A60);
    memcpy(v53, v54, *(void *)(*(void *)(v56 - 8) + 64));
    goto LABEL_22;
  }
  v39(v53, v54, v37);
LABEL_22:
  uint64_t v57 = sub_10017DF08(&qword_100EB4860);
  *(void *)&v53[*(int *)(v57 + 28)] = *(void *)&v54[*(int *)(v57 + 28)];
  swift_retain();
  swift_release();
  uint64_t v58 = a3[19];
  uint64_t v59 = (char *)a1 + v58;
  uint64_t v60 = (char *)a2 + v58;
  uint64_t v61 = type metadata accessor for TargetWindowSizeClass();
  int v62 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v59, 1, v61);
  int v63 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v60, 1, v61);
  if (v62)
  {
    if (!v63)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v61 - 8) + 16))(v59, v60, v61);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v59, 0, 1, v61);
      goto LABEL_28;
    }
    goto LABEL_27;
  }
  uint64_t v64 = *(void *)(v61 - 8);
  if (v63)
  {
    (*(void (**)(char *, uint64_t))(v64 + 8))(v59, v61);
LABEL_27:
    uint64_t v65 = sub_10017DF08(&qword_100EAA930);
    memcpy(v59, v60, *(void *)(*(void *)(v65 - 8) + 64));
    goto LABEL_28;
  }
  (*(void (**)(char *, char *, uint64_t))(v64 + 24))(v59, v60, v61);
LABEL_28:
  uint64_t v66 = sub_10017DF08(&qword_100EB4868);
  *(void *)&v59[*(int *)(v66 + 28)] = *(void *)&v60[*(int *)(v66 + 28)];
  swift_retain();
  swift_release();
  uint64_t v67 = a3[20];
  uint64_t v68 = (char *)a1 + v67;
  uint64_t v69 = (char *)a2 + v67;
  uint64_t v70 = type metadata accessor for CollisionViewMetrics();
  int v71 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v68, 1, v70);
  int v72 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v69, 1, v70);
  if (!v71)
  {
    uint64_t v73 = *(void *)(v70 - 8);
    if (!v72)
    {
      (*(void (**)(char *, char *, uint64_t))(v73 + 24))(v68, v69, v70);
      goto LABEL_34;
    }
    (*(void (**)(char *, uint64_t))(v73 + 8))(v68, v70);
    goto LABEL_33;
  }
  if (v72)
  {
LABEL_33:
    uint64_t v74 = sub_10017DF08(&qword_100EB4848);
    memcpy(v68, v69, *(void *)(*(void *)(v74 - 8) + 64));
    goto LABEL_34;
  }
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v70 - 8) + 16))(v68, v69, v70);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v68, 0, 1, v70);
LABEL_34:
  uint64_t v75 = sub_10017DF08(&qword_100EB4870);
  *(void *)&v68[*(int *)(v75 + 28)] = *(void *)&v69[*(int *)(v75 + 28)];
  swift_retain();
  swift_release();
  uint64_t v76 = a3[21];
  uint64_t v77 = (char *)a1 + v76;
  uint64_t v78 = (char *)a2 + v76;
  *(void *)((char *)a1 + v76) = *(void *)((char *)a2 + v76);
  swift_retain();
  swift_release();
  *((void *)v77 + 1) = *((void *)v78 + 1);
  swift_retain();
  swift_release();
  uint64_t v79 = a3[22];
  uint64_t v80 = (void *)((char *)a1 + v79);
  uint64_t v81 = (void *)((char *)a2 + v79);
  *uint64_t v80 = *v81;
  v80[1] = v81[1];
  swift_retain();
  swift_release();
  uint64_t v82 = a3[23];
  uint64_t v83 = (void *)((char *)a1 + v82);
  uint64_t v84 = (void *)((char *)a2 + v82);
  *uint64_t v83 = *v84;
  v83[1] = v84[1];
  swift_retain();
  swift_release();
  uint64_t v85 = a3[24];
  int v86 = (char *)a1 + v85;
  uint64_t v87 = (char *)a2 + v85;
  uint64_t v88 = *(void *)v87;
  uint64_t v89 = *((void *)v87 + 1);
  LOBYTE(v78) = v87[16];
  sub_100195B88();
  *(void *)int v86 = v88;
  *((void *)v86 + 1) = v89;
  v86[16] = (char)v78;
  sub_10018F6E4();
  uint64_t v90 = a3[25];
  uint64_t v91 = (char *)a1 + v90;
  uint64_t v92 = (char *)a2 + v90;
  uint64_t v93 = *(void *)v92;
  LOBYTE(v89) = v92[8];
  sub_100195B7C(*(void *)v92, v89);
  uint64_t v94 = *(void *)v91;
  char v95 = v91[8];
  *(void *)uint64_t v91 = v93;
  v91[8] = v89;
  sub_10018F6D8(v94, v95);
  uint64_t v96 = a3[26];
  uint64_t v97 = (void *)((char *)a1 + v96);
  uint64_t v98 = (void *)((char *)a2 + v96);
  *uint64_t v97 = *v98;
  v97[1] = v98[1];
  swift_retain();
  swift_release();
  uint64_t v99 = a3[27];
  uint64_t v100 = (char *)a1 + v99;
  uint64_t v101 = (char *)a2 + v99;
  uint64_t v102 = *(void *)v101;
  uint64_t v103 = *((void *)v101 + 1);
  LOBYTE(v91) = v101[16];
  sub_100195B88();
  *(void *)uint64_t v100 = v102;
  *((void *)v100 + 1) = v103;
  v100[16] = (char)v91;
  sub_10018F6E4();
  uint64_t v104 = a3[28];
  uint64_t v105 = (char *)a1 + v104;
  uint64_t v106 = (char *)a2 + v104;
  *(void *)((char *)a1 + v104) = *(void *)((char *)a2 + v104);
  swift_retain();
  swift_release();
  *((void *)v105 + 1) = *((void *)v106 + 1);
  swift_retain();
  swift_release();
  *(_DWORD *)((char *)a1 + a3[29]) = *(_DWORD *)((char *)a2 + a3[29]);
  return a1;
}