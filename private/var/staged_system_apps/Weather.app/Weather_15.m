uint64_t sub_100969264(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(uint64_t, uint64_t);
  uint64_t v30;
  int *v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  int *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void (*v64)(uint64_t, uint64_t);
  uint64_t v65;
  uint64_t v66;
  int *v67;
  uint64_t v68;
  uint64_t v69;
  void (*v70)(uint64_t, uint64_t);
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  int *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  int *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  void (**v87)(uint64_t, uint64_t);
  uint64_t v88;
  uint64_t v89;
  int v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  void (**v99)(uint64_t, uint64_t);
  uint64_t v100;
  uint64_t v101;
  int v102;
  uint64_t v103;
  uint64_t v104;
  int *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  int v115;
  uint64_t v116;
  uint64_t v117;
  int *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  int v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t (*v135)(uint64_t, uint64_t);
  uint64_t v136;
  int *v137;
  uint64_t v138;
  uint64_t v139;
  void (*v140)(uint64_t, uint64_t);
  uint64_t v141;
  uint64_t v142;
  int *v143;
  uint64_t v144;
  int *v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  int EnumCaseMultiPayload;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  int *v162;
  uint64_t v163;
  uint64_t v164;
  void (*v165)(uint64_t, uint64_t);
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  int *v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  int v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  void (*v190)(uint64_t, uint64_t);
  void (*v191)(uint64_t, uint64_t);
  uint64_t v192;
  int *v193;
  uint64_t v194;
  int *v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  void (*v200)(uint64_t, uint64_t);
  void (*v201)(uint64_t, uint64_t);
  void (*v202)(uint64_t, uint64_t);
  void (*v203)(uint64_t, uint64_t);
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  void (*v211)(uint64_t, uint64_t);
  void (*v212)(uint64_t, uint64_t);
  void (*v213)(uint64_t);
  void (*v214)(uint64_t, uint64_t);
  uint64_t v215;
  uint64_t vars8;

  swift_release();
  swift_release();
  v4 = a1 + *(int *)(a2 + 20);
  swift_release();
  swift_release();
  v5 = v4 + *(int *)(sub_10017DF08(&qword_100EA37A0) + 32);
  v6 = type metadata accessor for DetailChartDataElement();
  if (!_s7Weather24LocationCompositionStateOwet_0(v5, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  }
  v7 = a1 + *(int *)(a2 + 24);
  type metadata accessor for SunriseSunsetDetailViewModel();
  result = swift_getEnumCaseMultiPayload();
  if (result != 1)
  {
    if (result) {
      return result;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v9 = (int *)_s11NormalModelVMa();
    v10 = v7 + v9[7];
    v11 = type metadata accessor for Date();
    v12 = *(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8);
    v12(v10, v11);
    v12(v7 + v9[8], v11);
    v12(v7 + v9[9], v11);
    v13 = v7 + v9[10];
    v14 = type metadata accessor for TimeZone();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
    v15 = v7 + v9[11];
    v16 = type metadata accessor for AttributedString();
    v214 = *(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8);
    v214(v15, v16);
    swift_bridgeObjectRelease();
    v17 = v7 + v9[13];
    v18 = type metadata accessor for SunriseSunsetDetailChartViewModel();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(v17, v18);
    v19 = v7 + v9[14];
    v20 = type metadata accessor for Location();
    v212 = *(void (**)(uint64_t, uint64_t))(*(void *)(v20 - 8) + 8);
    v212(v19, v20);
    v21 = v7 + v9[15];
    v22 = type metadata accessor for SunEvents();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v22 - 8) + 8))(v21, v22);
    v23 = v7 + v9[16];
    v24 = type metadata accessor for OverviewTableViewModel();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v24 - 8) + 8))(v23, v24);
    v25 = v7 + v9[17];
    v26 = type metadata accessor for DaylightStringBuilder();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v26 - 8) + 8))(v25, v26);
    v27 = v7 + v9[18];
    v28 = type metadata accessor for DetailComponentContainerViewModel();
    if (!_s7Weather24LocationCompositionStateOwet_0(v27, 1, v28))
    {
      v208 = v20;
      v29 = v12;
      if (*(void *)(v27 + 8))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      v30 = v27 + *(int *)(v28 + 20);
      type metadata accessor for NewsArticleComponentViewModel(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        swift_bridgeObjectRelease();
        v31 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
        v32 = v30 + v31[5];
        v33 = type metadata accessor for URL();
        if (!_s7Weather24LocationCompositionStateOwet_0(v32, 1, v33)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v33 - 8) + 8))(v32, v33);
        }
        swift_bridgeObjectRelease();
        v34 = *(void (**)(uint64_t, uint64_t))(*(void *)(v33 - 8) + 8);
        v34(v30 + v31[7], v33);
        v35 = v30 + v31[8];
        if (!_s7Weather24LocationCompositionStateOwet_0(v35, 1, v33)) {
          v34(v35, v33);
        }
      }
      v36 = v27 + *(int *)(v28 + 24);
      v37 = type metadata accessor for DetailComponentAction();
      v12 = v29;
      v20 = v208;
      if (!_s7Weather24LocationCompositionStateOwet_0(v36, 1, v37))
      {
        v38 = type metadata accessor for URL();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v38 - 8) + 8))(v36, v38);
      }
    }
    v39 = v7 + *(int *)(sub_10017DF08(&qword_100E92128) + 48);
    v40 = (int *)type metadata accessor for ConditionDetailPlatterViewModel(0);
    result = _s7Weather24LocationCompositionStateOwet_0(v39, 1, (uint64_t)v40);
    if (result) {
      return result;
    }
    sub_10014D144(*(void *)v39, *(void *)(v39 + 8), *(unsigned char *)(v39 + 16));
    swift_bridgeObjectRelease();
    v41 = v39 + v40[6];
    v42 = type metadata accessor for WeatherDescription();
    if (!_s7Weather24LocationCompositionStateOwet_0(v41, 1, v42)) {
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v42 - 8) + 8))(v41, v42);
    }
    v43 = v39 + v40[7];
    v44 = type metadata accessor for ConditionDetailPlatterViewModel.Body(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v42 - 8) + 8))(v43, v42);
        goto LABEL_100;
      case 1u:
        goto LABEL_55;
      case 2u:
        v214(v43, v16);
        goto LABEL_100;
      case 3u:
        v80 = sub_10017DF08(&qword_100E73808);
        goto LABEL_50;
      case 4u:
        v206 = v11;
        v209 = v20;
        v196 = v16;
        v200 = v12;
        if (*(void *)(v43 + 8))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        v81 = v28;
        v82 = v43 + *(int *)(v28 + 20);
        type metadata accessor for NewsArticleComponentViewModel(0);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          swift_bridgeObjectRelease();
          v83 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
          v84 = v82 + v83[5];
          v85 = type metadata accessor for URL();
          if (!_s7Weather24LocationCompositionStateOwet_0(v84, 1, v85)) {
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v85 - 8) + 8))(v84, v85);
          }
          swift_bridgeObjectRelease();
          v86 = v85;
          v87 = (void (**)(uint64_t, uint64_t))(*(void *)(v85 - 8) + 8);
          v191 = *v87;
          (*v87)(v82 + v83[7], v86);
          v88 = v82 + v83[8];
          if (!_s7Weather24LocationCompositionStateOwet_0(v88, 1, v86)) {
            v191(v88, v86);
          }
        }
        v28 = v81;
        v43 += *(int *)(v81 + 24);
        v89 = type metadata accessor for DetailComponentAction();
        v16 = v196;
        v12 = v200;
        v11 = v206;
        v20 = v209;
        if (_s7Weather24LocationCompositionStateOwet_0(v43, 1, v89)) {
          goto LABEL_100;
        }
        v80 = type metadata accessor for URL();
LABEL_50:
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v80 - 8) + 8))(v43, v80);
LABEL_100:
        v132 = v39 + v40[8];
        result = _s7Weather24LocationCompositionStateOwet_0(v132, 1, v44);
        if (result) {
          return result;
        }
        result = swift_getEnumCaseMultiPayload();
        switch((int)result)
        {
          case 0:
            goto LABEL_130;
          case 1:
            goto LABEL_151;
          case 2:
            v133 = v132;
            v134 = v16;
            v135 = (uint64_t (*)(uint64_t, uint64_t))v214;
            goto LABEL_177;
          case 3:
            goto LABEL_131;
          case 4:
            if (*(void *)(v132 + 8))
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            v136 = v132 + *(int *)(v28 + 20);
            type metadata accessor for NewsArticleComponentViewModel(0);
            if (swift_getEnumCaseMultiPayload() == 1)
            {
              swift_bridgeObjectRelease();
              v137 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
              v138 = v136 + v137[5];
              v139 = type metadata accessor for URL();
              if (!_s7Weather24LocationCompositionStateOwet_0(v138, 1, v139)) {
                (*(void (**)(uint64_t, uint64_t))(*(void *)(v139 - 8) + 8))(v138, v139);
              }
              swift_bridgeObjectRelease();
              v140 = *(void (**)(uint64_t, uint64_t))(*(void *)(v139 - 8) + 8);
              v140(v136 + v137[7], v139);
              v141 = v136 + v137[8];
              if (!_s7Weather24LocationCompositionStateOwet_0(v141, 1, v139)) {
                v140(v141, v139);
              }
            }
            v142 = *(int *)(v28 + 24);
            goto LABEL_146;
          case 5:
            goto LABEL_132;
          case 6:
            goto LABEL_135;
          case 7:
            type metadata accessor for ConditionDetailDynamicContentIdentifier();
            result = swift_getEnumCaseMultiPayload();
            if (result != 1) {
              goto LABEL_149;
            }
            swift_bridgeObjectRelease();
            v143 = (int *)type metadata accessor for ConditionDetailMapViewModel();
            v212(v132 + v143[5], v20);
            v144 = v132 + v143[6];
            v145 = (int *)type metadata accessor for WeatherData(0);
            if (_s7Weather24LocationCompositionStateOwet_0(v144, 1, (uint64_t)v145)) {
              goto LABEL_175;
            }
            swift_bridgeObjectRelease();
            v146 = v144 + v145[5];
            v147 = type metadata accessor for Locale();
            if (!_s7Weather24LocationCompositionStateOwet_0(v146, 1, v147)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v147 - 8) + 8))(v146, v147);
            }
            v148 = v144 + v145[6];
            v149 = type metadata accessor for WeatherDataModel();
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v149 - 8) + 8))(v148, v149);
            v150 = v144 + v145[7];
            v151 = sub_10017DF08(&qword_100E63738);
            if (!_s7Weather24LocationCompositionStateOwet_0(v150, 1, v151)) {
              v12(v150, v11);
            }
            v152 = v144 + v145[8];
            type metadata accessor for WeatherData.WeatherStatisticsState(0);
            EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
            if (EnumCaseMultiPayload == 1)
            {
              v180 = type metadata accessor for WeatherStatisticsModel();
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v180 - 8) + 8))(v152, v180);
            }
            else if (!EnumCaseMultiPayload)
            {
              swift_bridgeObjectRelease();
            }
            v181 = v144 + v145[9];
            v182 = type metadata accessor for WeatherDataOverrides();
            if (_s7Weather24LocationCompositionStateOwet_0(v181, 1, v182)) {
              goto LABEL_175;
            }
            if (!_s7Weather24LocationCompositionStateOwet_0(v181, 1, v11)) {
              v12(v181, v11);
            }
            v183 = v181 + *(int *)(v182 + 20);
            if (_s7Weather24LocationCompositionStateOwet_0(v183, 1, v11)) {
              goto LABEL_175;
            }
            v184 = v183;
            v185 = v11;
            break;
          default:
            return result;
        }
        break;
      case 5u:
        if (*(void *)(v43 + 24))
        {
          sub_100191924(*(void *)v43, *(void *)(v43 + 8), *(unsigned char *)(v43 + 16));
          swift_bridgeObjectRelease();
        }
        sub_10033AB48(*(void *)(v43 + 32), *(void *)(v43 + 40), *(void *)(v43 + 48), *(void *)(v43 + 56), *(void *)(v43 + 64), *(void *)(v43 + 72), *(void *)(v43 + 80), *(unsigned __int8 *)(v43 + 88), *(unsigned char *)(v43 + 89));
        goto LABEL_100;
      case 6u:
        v80 = type metadata accessor for PrecipitationTotalPlatterViewModel();
        goto LABEL_50;
      case 7u:
        type metadata accessor for ConditionDetailDynamicContentIdentifier();
        v90 = swift_getEnumCaseMultiPayload();
        if (v90 == 1)
        {
          v202 = v12;
          v207 = v28;
          swift_bridgeObjectRelease();
          v210 = v20;
          v103 = type metadata accessor for ConditionDetailMapViewModel();
          v212(v43 + *(int *)(v103 + 20), v20);
          v198 = v103;
          v104 = v43 + *(int *)(v103 + 24);
          v105 = (int *)type metadata accessor for WeatherData(0);
          if (!_s7Weather24LocationCompositionStateOwet_0(v104, 1, (uint64_t)v105))
          {
            swift_bridgeObjectRelease();
            v106 = v104 + v105[5];
            v107 = type metadata accessor for Locale();
            v192 = v106;
            v108 = v106;
            v109 = v107;
            if (!_s7Weather24LocationCompositionStateOwet_0(v108, 1, v107)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v109 - 8) + 8))(v192, v109);
            }
            v110 = v104 + v105[6];
            v111 = type metadata accessor for WeatherDataModel();
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v111 - 8) + 8))(v110, v111);
            v112 = v104 + v105[7];
            v113 = sub_10017DF08(&qword_100E63738);
            if (!_s7Weather24LocationCompositionStateOwet_0(v112, 1, v113)) {
              v202(v112, v11);
            }
            v193 = v105;
            v114 = v104 + v105[8];
            type metadata accessor for WeatherData.WeatherStatisticsState(0);
            v115 = swift_getEnumCaseMultiPayload();
            if (v115 == 1)
            {
              v126 = type metadata accessor for WeatherStatisticsModel();
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v126 - 8) + 8))(v114, v126);
            }
            else if (!v115)
            {
              swift_bridgeObjectRelease();
            }
            v127 = v104 + v193[9];
            v128 = type metadata accessor for WeatherDataOverrides();
            if (!_s7Weather24LocationCompositionStateOwet_0(v127, 1, v128))
            {
              if (!_s7Weather24LocationCompositionStateOwet_0(v127, 1, v11)) {
                v202(v127, v11);
              }
              v129 = v127 + *(int *)(v128 + 20);
              if (!_s7Weather24LocationCompositionStateOwet_0(v129, 1, v11)) {
                v202(v129, v11);
              }
            }
          }
          swift_bridgeObjectRelease();
          v130 = v43 + *(int *)(v198 + 32);
          v131 = type metadata accessor for WeatherMapOverlayKind();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v131 - 8) + 8))(v130, v131);
          v12 = v202;
          v28 = v207;
          v20 = v210;
        }
        else if (!v90)
        {
          swift_bridgeObjectRelease();
LABEL_55:
          swift_bridgeObjectRelease();
        }
        goto LABEL_100;
      default:
        goto LABEL_100;
    }
LABEL_174:
    v12(v184, v185);
    goto LABEL_175;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v45 = (int *)_s10PolarModelVMa();
  v46 = v7 + v45[6];
  v47 = type metadata accessor for PolarType();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v47 - 8) + 8))(v46, v47);
  v48 = v7 + v45[7];
  v49 = type metadata accessor for Date();
  v12 = *(void (**)(uint64_t, uint64_t))(*(void *)(v49 - 8) + 8);
  v12(v48, v49);
  v50 = v7 + v45[8];
  v51 = type metadata accessor for TimeZone();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v51 - 8) + 8))(v50, v51);
  v52 = v7 + v45[9];
  v53 = type metadata accessor for AttributedString();
  v213 = *(void (**)(uint64_t))(*(void *)(v53 - 8) + 8);
  v215 = v53;
  v213(v52);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v54 = v7 + v45[12];
  v55 = type metadata accessor for SunriseSunsetDetailChartViewModel();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v55 - 8) + 8))(v54, v55);
  v56 = v7 + v45[13];
  v57 = type metadata accessor for Location();
  v211 = *(void (**)(uint64_t, uint64_t))(*(void *)(v57 - 8) + 8);
  v211(v56, v57);
  v58 = v7 + v45[14];
  v59 = type metadata accessor for DaylightStringBuilder();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v59 - 8) + 8))(v58, v59);
  v60 = v7 + v45[15];
  v61 = type metadata accessor for OverviewTableViewModel();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v61 - 8) + 8))(v60, v61);
  v62 = v7 + v45[16];
  v63 = type metadata accessor for DetailComponentContainerViewModel();
  if (!_s7Weather24LocationCompositionStateOwet_0(v62, 1, v63))
  {
    v64 = v12;
    if (*(void *)(v62 + 8))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    v65 = v62 + *(int *)(v63 + 20);
    type metadata accessor for NewsArticleComponentViewModel(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v204 = v57;
      v66 = v63;
      swift_bridgeObjectRelease();
      v67 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
      v68 = v65 + v67[5];
      v69 = type metadata accessor for URL();
      if (!_s7Weather24LocationCompositionStateOwet_0(v68, 1, v69)) {
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v69 - 8) + 8))(v68, v69);
      }
      swift_bridgeObjectRelease();
      v70 = *(void (**)(uint64_t, uint64_t))(*(void *)(v69 - 8) + 8);
      v70(v65 + v67[7], v69);
      v71 = v65 + v67[8];
      v63 = v66;
      v57 = v204;
      if (!_s7Weather24LocationCompositionStateOwet_0(v71, 1, v69)) {
        v70(v71, v69);
      }
    }
    v72 = v62 + *(int *)(v63 + 24);
    v73 = type metadata accessor for DetailComponentAction();
    v12 = v64;
    if (!_s7Weather24LocationCompositionStateOwet_0(v72, 1, v73))
    {
      v74 = type metadata accessor for URL();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v74 - 8) + 8))(v72, v74);
    }
  }
  v75 = v7 + *(int *)(sub_10017DF08(&qword_100E92130) + 48);
  v76 = (int *)type metadata accessor for ConditionDetailPlatterViewModel(0);
  result = _s7Weather24LocationCompositionStateOwet_0(v75, 1, (uint64_t)v76);
  if (!result)
  {
    v205 = v63;
    sub_10014D144(*(void *)v75, *(void *)(v75 + 8), *(unsigned char *)(v75 + 16));
    swift_bridgeObjectRelease();
    v77 = v75 + v76[6];
    v42 = type metadata accessor for WeatherDescription();
    if (!_s7Weather24LocationCompositionStateOwet_0(v77, 1, v42)) {
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v42 - 8) + 8))(v77, v42);
    }
    v78 = v75 + v76[7];
    v79 = type metadata accessor for ConditionDetailPlatterViewModel.Body(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v42 - 8) + 8))(v78, v42);
        goto LABEL_127;
      case 1u:
        goto LABEL_76;
      case 2u:
        ((void (*)(uint64_t, uint64_t))v213)(v78, v215);
        goto LABEL_127;
      case 3u:
        v91 = sub_10017DF08(&qword_100E73808);
        goto LABEL_71;
      case 4u:
        v197 = v49;
        v201 = v12;
        if (*(void *)(v78 + 8))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        v92 = v78 + *(int *)(v205 + 20);
        type metadata accessor for NewsArticleComponentViewModel(0);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          swift_bridgeObjectRelease();
          v93 = type metadata accessor for NewsArticleComponentContentViewModel(0);
          v94 = v92 + *(int *)(v93 + 20);
          v95 = type metadata accessor for URL();
          if (!_s7Weather24LocationCompositionStateOwet_0(v94, 1, v95)) {
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v95 - 8) + 8))(v94, v95);
          }
          swift_bridgeObjectRelease();
          v96 = v92 + *(int *)(v93 + 28);
          v97 = v93;
          v98 = v95;
          v99 = (void (**)(uint64_t, uint64_t))(*(void *)(v95 - 8) + 8);
          v190 = *v99;
          (*v99)(v96, v98);
          v100 = v92 + *(int *)(v97 + 32);
          if (!_s7Weather24LocationCompositionStateOwet_0(v100, 1, v98)) {
            v190(v100, v98);
          }
        }
        v78 += *(int *)(v205 + 24);
        v101 = type metadata accessor for DetailComponentAction();
        v49 = v197;
        v12 = v201;
        if (_s7Weather24LocationCompositionStateOwet_0(v78, 1, v101)) {
          goto LABEL_127;
        }
        v91 = type metadata accessor for URL();
LABEL_71:
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v91 - 8) + 8))(v78, v91);
LABEL_127:
        v132 = v75 + v76[8];
        result = _s7Weather24LocationCompositionStateOwet_0(v132, 1, v79);
        if (result) {
          return result;
        }
        result = swift_getEnumCaseMultiPayload();
        switch((int)result)
        {
          case 0:
LABEL_130:
            v135 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v42 - 8) + 8);
            v133 = v132;
            v134 = v42;
            goto LABEL_177;
          case 1:
            goto LABEL_151;
          case 2:
            v133 = v132;
            v135 = (uint64_t (*)(uint64_t, uint64_t))v213;
            v134 = v215;
            goto LABEL_177;
          case 3:
LABEL_131:
            v160 = sub_10017DF08(&qword_100E73808);
            goto LABEL_136;
          case 4:
            if (*(void *)(v132 + 8))
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            v161 = v132 + *(int *)(v205 + 20);
            type metadata accessor for NewsArticleComponentViewModel(0);
            if (swift_getEnumCaseMultiPayload() == 1)
            {
              swift_bridgeObjectRelease();
              v162 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
              v163 = v161 + v162[5];
              v164 = type metadata accessor for URL();
              if (!_s7Weather24LocationCompositionStateOwet_0(v163, 1, v164)) {
                (*(void (**)(uint64_t, uint64_t))(*(void *)(v164 - 8) + 8))(v163, v164);
              }
              swift_bridgeObjectRelease();
              v165 = *(void (**)(uint64_t, uint64_t))(*(void *)(v164 - 8) + 8);
              v165(v161 + v162[7], v164);
              v166 = v161 + v162[8];
              if (!_s7Weather24LocationCompositionStateOwet_0(v166, 1, v164)) {
                v165(v166, v164);
              }
            }
            v142 = *(int *)(v205 + 24);
LABEL_146:
            v167 = v132 + v142;
            v168 = type metadata accessor for DetailComponentAction();
            result = _s7Weather24LocationCompositionStateOwet_0(v167, 1, v168);
            if (result) {
              return result;
            }
            v169 = type metadata accessor for URL();
            goto LABEL_176;
          case 5:
LABEL_132:
            if (*(void *)(v132 + 24))
            {
              sub_100191924(*(void *)v132, *(void *)(v132 + 8), *(unsigned char *)(v132 + 16));
              swift_bridgeObjectRelease();
            }
            return sub_10033AB48(*(void *)(v132 + 32), *(void *)(v132 + 40), *(void *)(v132 + 48), *(void *)(v132 + 56), *(void *)(v132 + 64), *(void *)(v132 + 72), *(void *)(v132 + 80), *(unsigned __int8 *)(v132 + 88), *(unsigned char *)(v132 + 89));
          case 6:
LABEL_135:
            v160 = type metadata accessor for PrecipitationTotalPlatterViewModel();
LABEL_136:
            v135 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v160 - 8) + 8);
            v134 = v160;
            v133 = v132;
            goto LABEL_177;
          case 7:
            type metadata accessor for ConditionDetailDynamicContentIdentifier();
            result = swift_getEnumCaseMultiPayload();
            if (result != 1)
            {
LABEL_149:
              if (!result)
              {
                swift_bridgeObjectRelease();
LABEL_151:
                return swift_bridgeObjectRelease();
              }
              return result;
            }
            swift_bridgeObjectRelease();
            v143 = (int *)type metadata accessor for ConditionDetailMapViewModel();
            v211(v132 + v143[5], v57);
            v170 = v132 + v143[6];
            v171 = (int *)type metadata accessor for WeatherData(0);
            if (!_s7Weather24LocationCompositionStateOwet_0(v170, 1, (uint64_t)v171))
            {
              swift_bridgeObjectRelease();
              v172 = v170 + v171[5];
              v173 = type metadata accessor for Locale();
              if (!_s7Weather24LocationCompositionStateOwet_0(v172, 1, v173)) {
                (*(void (**)(uint64_t, uint64_t))(*(void *)(v173 - 8) + 8))(v172, v173);
              }
              v174 = v170 + v171[6];
              v175 = type metadata accessor for WeatherDataModel();
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v175 - 8) + 8))(v174, v175);
              v176 = v170 + v171[7];
              v177 = sub_10017DF08(&qword_100E63738);
              if (!_s7Weather24LocationCompositionStateOwet_0(v176, 1, v177)) {
                v12(v176, v49);
              }
              v178 = v170 + v171[8];
              type metadata accessor for WeatherData.WeatherStatisticsState(0);
              v179 = swift_getEnumCaseMultiPayload();
              if (v179 == 1)
              {
                v186 = type metadata accessor for WeatherStatisticsModel();
                (*(void (**)(uint64_t, uint64_t))(*(void *)(v186 - 8) + 8))(v178, v186);
              }
              else if (!v179)
              {
                swift_bridgeObjectRelease();
              }
              v187 = v170 + v171[9];
              v188 = type metadata accessor for WeatherDataOverrides();
              if (!_s7Weather24LocationCompositionStateOwet_0(v187, 1, v188))
              {
                if (!_s7Weather24LocationCompositionStateOwet_0(v187, 1, v49)) {
                  v12(v187, v49);
                }
                v189 = v187 + *(int *)(v188 + 20);
                if (!_s7Weather24LocationCompositionStateOwet_0(v189, 1, v49))
                {
                  v184 = v189;
                  v185 = v49;
                  goto LABEL_174;
                }
              }
            }
            break;
          default:
            return result;
        }
        break;
      case 5u:
        if (*(void *)(v78 + 24))
        {
          sub_100191924(*(void *)v78, *(void *)(v78 + 8), *(unsigned char *)(v78 + 16));
          swift_bridgeObjectRelease();
        }
        sub_10033AB48(*(void *)(v78 + 32), *(void *)(v78 + 40), *(void *)(v78 + 48), *(void *)(v78 + 56), *(void *)(v78 + 64), *(void *)(v78 + 72), *(void *)(v78 + 80), *(unsigned __int8 *)(v78 + 88), *(unsigned char *)(v78 + 89));
        goto LABEL_127;
      case 6u:
        v91 = type metadata accessor for PrecipitationTotalPlatterViewModel();
        goto LABEL_71;
      case 7u:
        type metadata accessor for ConditionDetailDynamicContentIdentifier();
        v102 = swift_getEnumCaseMultiPayload();
        if (v102 == 1)
        {
          v203 = v12;
          swift_bridgeObjectRelease();
          v116 = type metadata accessor for ConditionDetailMapViewModel();
          v211(v78 + *(int *)(v116 + 20), v57);
          v199 = v116;
          v117 = v78 + *(int *)(v116 + 24);
          v118 = (int *)type metadata accessor for WeatherData(0);
          if (!_s7Weather24LocationCompositionStateOwet_0(v117, 1, (uint64_t)v118))
          {
            swift_bridgeObjectRelease();
            v119 = v117 + v118[5];
            v194 = type metadata accessor for Locale();
            if (!_s7Weather24LocationCompositionStateOwet_0(v119, 1, v194)) {
              (*(void (**)(uint64_t))(*(void *)(v194 - 8) + 8))(v119);
            }
            v120 = v117 + v118[6];
            v121 = type metadata accessor for WeatherDataModel();
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v121 - 8) + 8))(v120, v121);
            v122 = v117 + v118[7];
            v123 = sub_10017DF08(&qword_100E63738);
            if (!_s7Weather24LocationCompositionStateOwet_0(v122, 1, v123)) {
              v203(v122, v49);
            }
            v195 = v118;
            v124 = v117 + v118[8];
            type metadata accessor for WeatherData.WeatherStatisticsState(0);
            v125 = swift_getEnumCaseMultiPayload();
            if (v125 == 1)
            {
              v154 = type metadata accessor for WeatherStatisticsModel();
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v154 - 8) + 8))(v124, v154);
            }
            else if (!v125)
            {
              swift_bridgeObjectRelease();
            }
            v155 = v117 + v195[9];
            v156 = type metadata accessor for WeatherDataOverrides();
            if (!_s7Weather24LocationCompositionStateOwet_0(v155, 1, v156))
            {
              if (!_s7Weather24LocationCompositionStateOwet_0(v155, 1, v49)) {
                v203(v155, v49);
              }
              v157 = v155 + *(int *)(v156 + 20);
              if (!_s7Weather24LocationCompositionStateOwet_0(v157, 1, v49)) {
                v203(v157, v49);
              }
            }
          }
          swift_bridgeObjectRelease();
          v158 = v78 + *(int *)(v199 + 32);
          v159 = type metadata accessor for WeatherMapOverlayKind();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v159 - 8) + 8))(v158, v159);
          v12 = v203;
        }
        else if (!v102)
        {
          swift_bridgeObjectRelease();
LABEL_76:
          swift_bridgeObjectRelease();
        }
        goto LABEL_127;
      default:
        goto LABEL_127;
    }
LABEL_175:
    swift_bridgeObjectRelease();
    v167 = v132 + v143[8];
    v169 = type metadata accessor for WeatherMapOverlayKind();
LABEL_176:
    v135 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v169 - 8) + 8);
    v134 = v169;
    v133 = v167;
LABEL_177:
    return v135(v133, v134);
  }
  return result;
}

uint64_t sub_10096B170(uint64_t a1, uint64_t a2, int *a3)
{
  v3 = a3;
  uint64_t v4 = a2;
  uint64_t v5 = a1;
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v7 = a3[5];
  v8 = (void *)(a1 + v7);
  uint64_t v9 = a2 + v7;
  uint64_t v10 = *(void *)(a2 + v7 + 8);
  void *v8 = *(void *)(a2 + v7);
  v8[1] = v10;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v11 = *(int *)(sub_10017DF08(&qword_100EA37A0) + 32);
  v12 = (char *)v8 + v11;
  v13 = (const void *)(v9 + v11);
  uint64_t v14 = type metadata accessor for DetailChartDataElement();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v13, 1, v14))
  {
    uint64_t v15 = sub_10017DF08(&qword_100E6B640);
    memcpy(v12, v13, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, const void *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v12, 0, 1, v14);
  }
  uint64_t v16 = v3[6];
  v17 = (void *)(v5 + v16);
  v18 = (void *)(v4 + v16);
  uint64_t v19 = type metadata accessor for SunriseSunsetDetailViewModel();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v725 = v4;
    v721 = v3;
    uint64_t v64 = v18[1];
    void *v17 = *v18;
    v17[1] = v64;
    uint64_t v65 = v18[3];
    v17[2] = v18[2];
    v17[3] = v65;
    v66 = (int *)_s10PolarModelVMa();
    uint64_t v67 = v66[6];
    v68 = (char *)v17 + v67;
    v69 = (char *)v18 + v67;
    uint64_t v70 = type metadata accessor for PolarType();
    v728 = v17;
    v71 = *(void (**)(char *, char *, uint64_t))(*(void *)(v70 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v71(v68, v69, v70);
    uint64_t v72 = v66[7];
    v73 = (char *)v728 + v72;
    v74 = (char *)v18 + v72;
    uint64_t v75 = type metadata accessor for Date();
    v693 = *(void (**)(char *, char *))(*(void *)(v75 - 8) + 16);
    uint64_t v695 = v75;
    v693(v73, v74);
    uint64_t v76 = v66[8];
    v77 = (char *)v728 + v76;
    v78 = (char *)v18 + v76;
    uint64_t v79 = type metadata accessor for TimeZone();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v79 - 8) + 16))(v77, v78, v79);
    uint64_t v80 = v66[9];
    v81 = (char *)v728 + v80;
    v82 = (char *)v18 + v80;
    uint64_t v705 = type metadata accessor for AttributedString();
    v701 = *(void (**)(char *, char *))(*(void *)(v705 - 8) + 16);
    v701(v81, v82);
    *(void *)((char *)v728 + v66[10]) = *(void *)((char *)v18 + v66[10]);
    uint64_t v83 = v66[11];
    v84 = (void *)((char *)v728 + v83);
    v85 = (void *)((char *)v18 + v83);
    uint64_t v86 = v85[1];
    void *v84 = *v85;
    v84[1] = v86;
    uint64_t v87 = v66[12];
    v88 = (char *)v728 + v87;
    v89 = (char *)v18 + v87;
    uint64_t v90 = type metadata accessor for SunriseSunsetDetailChartViewModel();
    v91 = *(void (**)(char *, char *, uint64_t))(*(void *)(v90 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v91(v88, v89, v90);
    v92 = v728;
    uint64_t v93 = v66[13];
    v94 = (char *)v728 + v93;
    v95 = (char *)v18 + v93;
    uint64_t v96 = type metadata accessor for Location();
    v697 = *(void (**)(char *, char *))(*(void *)(v96 - 8) + 16);
    uint64_t v699 = v96;
    v697(v94, v95);
    uint64_t v97 = v66[14];
    v98 = (char *)v728 + v97;
    v99 = (char *)v18 + v97;
    uint64_t v100 = type metadata accessor for DaylightStringBuilder();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v100 - 8) + 16))(v98, v99, v100);
    uint64_t v101 = v66[15];
    v102 = (char *)v728 + v101;
    v103 = (char *)v18 + v101;
    uint64_t v104 = type metadata accessor for OverviewTableViewModel();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v104 - 8) + 16))(v102, v103, v104);
    uint64_t v105 = v66[16];
    v106 = (void *)((char *)v728 + v105);
    v717 = v18;
    v107 = (void *)((char *)v18 + v105);
    uint64_t v108 = type metadata accessor for DetailComponentContainerViewModel();
    uint64_t v710 = v108;
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v107, 1, v108))
    {
      uint64_t v109 = sub_10017DF08(&qword_100E66E28);
      memcpy(v106, v107, *(void *)(*(void *)(v109 - 8) + 64));
      v3 = v721;
    }
    else
    {
      uint64_t v112 = v107[1];
      if (v112)
      {
        void *v106 = *v107;
        v106[1] = v112;
        uint64_t v113 = v107[3];
        v106[2] = v107[2];
        v106[3] = v113;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v125 = *((_OWORD *)v107 + 1);
        *(_OWORD *)v106 = *(_OWORD *)v107;
        *((_OWORD *)v106 + 1) = v125;
      }
      uint64_t v126 = *(int *)(v108 + 20);
      v127 = (void *)((char *)v106 + v126);
      v128 = (void *)((char *)v107 + v126);
      uint64_t v129 = type metadata accessor for NewsArticleComponentViewModel(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v130 = v128[1];
        void *v127 = *v128;
        v127[1] = v130;
        v689 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
        uint64_t v131 = v689[5];
        v132 = (char *)v127 + v131;
        v133 = (char *)v128 + v131;
        uint64_t v134 = type metadata accessor for URL();
        swift_bridgeObjectRetain();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v133, 1, v134))
        {
          uint64_t v135 = sub_10017DF08(&qword_100E749B0);
          memcpy(v132, v133, *(void *)(*(void *)(v135 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v134 - 8) + 16))(v132, v133, v134);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v132, 0, 1, v134);
        }
        uint64_t v147 = v689[6];
        v148 = (void *)((char *)v127 + v147);
        v149 = (void *)((char *)v128 + v147);
        uint64_t v150 = v149[1];
        void *v148 = *v149;
        v148[1] = v150;
        uint64_t v151 = v689[7];
        v675 = (char *)v127 + v151;
        v152 = (char *)v128 + v151;
        v153 = *(void (**)(char *, char *, uint64_t))(*(void *)(v134 - 8) + 16);
        swift_bridgeObjectRetain();
        v153(v675, v152, v134);
        uint64_t v154 = v689[8];
        v155 = (char *)v127 + v154;
        v156 = (char *)v128 + v154;
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v128 + v154, 1, v134))
        {
          uint64_t v157 = sub_10017DF08(&qword_100E749B0);
          memcpy(v155, v156, *(void *)(*(void *)(v157 - 8) + 64));
        }
        else
        {
          v153(v155, v156, v134);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v155, 0, 1, v134);
        }
        v92 = v728;
        *((unsigned char *)v127 + v689[9]) = *((unsigned char *)v128 + v689[9]);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v127, v128, *(void *)(*(void *)(v129 - 8) + 64));
      }
      uint64_t v185 = *(int *)(v108 + 24);
      v186 = (char *)v106 + v185;
      v187 = (char *)v107 + v185;
      uint64_t v188 = type metadata accessor for DetailComponentAction();
      uint64_t v4 = v725;
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v187, 1, v188))
      {
        uint64_t v189 = sub_10017DF08(&qword_100E73810);
        memcpy(v186, v187, *(void *)(*(void *)(v189 - 8) + 64));
      }
      else
      {
        uint64_t v190 = type metadata accessor for URL();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v190 - 8) + 16))(v186, v187, v190);
        uint64_t v191 = sub_10017DF08(&qword_100E66478);
        v186[*(int *)(v191 + 48)] = v187[*(int *)(v191 + 48)];
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v186, 0, 1, v188);
      }
      v3 = v721;
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v106, 0, 1, v108);
    }
    uint64_t v192 = *(int *)(sub_10017DF08(&qword_100E92130) + 48);
    v166 = (void *)((char *)v92 + v192);
    uint64_t v167 = (uint64_t)v717 + v192;
    uint64_t v193 = type metadata accessor for ConditionDetailPlatterViewModel(0);
    if (_s7Weather24LocationCompositionStateOwet_0(v167, 1, v193)) {
      goto LABEL_50;
    }
    uint64_t v195 = *(void *)v167;
    uint64_t v196 = *(void *)(v167 + 8);
    unsigned __int8 v197 = *(unsigned char *)(v167 + 16);
    sub_10018F6EC(*(void *)v167, v196, v197);
    uint64_t *v166 = v195;
    v166[1] = v196;
    *((unsigned char *)v166 + 16) = v197;
    uint64_t v198 = *(void *)(v167 + 32);
    v166[3] = *(void *)(v167 + 24);
    v166[4] = v198;
    v691 = (int *)v193;
    uint64_t v199 = *(int *)(v193 + 24);
    v200 = (char *)v166 + v199;
    v201 = (const void *)(v167 + v199);
    uint64_t v202 = type metadata accessor for WeatherDescription();
    swift_bridgeObjectRetain();
    uint64_t v687 = v202;
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v201, 1, v202))
    {
      uint64_t v203 = sub_10017DF08(&qword_100E63758);
      memcpy(v200, v201, *(void *)(*(void *)(v203 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, const void *, uint64_t))(*(void *)(v202 - 8) + 16))(v200, v201, v202);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v200, 0, 1, v202);
    }
    v178 = v691;
    uint64_t v204 = v691[7];
    v205 = (uint64_t *)((char *)v166 + v204);
    v206 = (uint64_t *)(v167 + v204);
    uint64_t v182 = type metadata accessor for ConditionDetailPlatterViewModel.Body(0);
    v719 = v206;
    uint64_t v715 = v5;
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v219 = v206[1];
        uint64_t *v205 = *v206;
        v205[1] = v219;
        swift_bridgeObjectRetain();
        goto LABEL_207;
      case 2u:
        ((void (*)(uint64_t *, uint64_t *, uint64_t))v701)(v205, v206, v705);
        goto LABEL_207;
      case 3u:
        uint64_t v220 = sub_10017DF08(&qword_100E73808);
        goto LABEL_78;
      case 4u:
        uint64_t v221 = v206[1];
        v678 = v166;
        if (v221)
        {
          uint64_t *v205 = *v206;
          v205[1] = v221;
          uint64_t v222 = v206[3];
          v205[2] = v719[2];
          v205[3] = v222;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v251 = *((_OWORD *)v206 + 1);
          *(_OWORD *)v205 = *(_OWORD *)v206;
          *((_OWORD *)v205 + 1) = v251;
        }
        uint64_t v252 = *(int *)(v710 + 20);
        v253 = (uint64_t *)((char *)v205 + v252);
        v254 = (uint64_t *)((char *)v719 + v252);
        uint64_t v255 = type metadata accessor for NewsArticleComponentViewModel(0);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          v662 = v205;
          uint64_t v256 = v254[1];
          void *v253 = *v254;
          v253[1] = v256;
          v650 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
          v658 = v253;
          uint64_t v257 = v650[5];
          v258 = (char *)v253 + v257;
          v259 = (char *)v254 + v257;
          uint64_t v260 = type metadata accessor for URL();
          swift_bridgeObjectRetain();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v259, 1, v260))
          {
            uint64_t v261 = sub_10017DF08(&qword_100E749B0);
            memcpy(v258, v259, *(void *)(*(void *)(v261 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v260 - 8) + 16))(v258, v259, v260);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v258, 0, 1, v260);
          }
          uint64_t v309 = v650[6];
          v310 = (void *)((char *)v658 + v309);
          v311 = (void *)((char *)v254 + v309);
          uint64_t v312 = v311[1];
          void *v310 = *v311;
          v310[1] = v312;
          uint64_t v313 = v650[7];
          v640 = (char *)v254 + v313;
          v643 = (char *)v658 + v313;
          uint64_t v314 = v260;
          v315 = *(void (**)(char *, char *, uint64_t))(*(void *)(v260 - 8) + 16);
          swift_bridgeObjectRetain();
          v316 = v643;
          v644 = v315;
          v315(v316, v640, v314);
          uint64_t v317 = v314;
          uint64_t v318 = v650[8];
          v319 = (char *)v658 + v318;
          v320 = (char *)v254 + v318;
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v254 + v318, 1, v317))
          {
            uint64_t v321 = sub_10017DF08(&qword_100E749B0);
            memcpy(v319, v320, *(void *)(*(void *)(v321 - 8) + 64));
          }
          else
          {
            v644(v319, v320, v317);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v319, 0, 1, v317);
          }
          *((unsigned char *)v658 + v650[9]) = *((unsigned char *)v254 + v650[9]);
          swift_storeEnumTagMultiPayload();
          v205 = v662;
        }
        else
        {
          memcpy(v253, v254, *(void *)(*(void *)(v255 - 8) + 64));
        }
        uint64_t v329 = *(int *)(v710 + 24);
        v330 = (char *)v205 + v329;
        v331 = (char *)v719 + v329;
        uint64_t v332 = type metadata accessor for DetailComponentAction();
        v166 = v678;
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v331, 1, v332))
        {
          uint64_t v333 = sub_10017DF08(&qword_100E73810);
          memcpy(v330, v331, *(void *)(*(void *)(v333 - 8) + 64));
        }
        else
        {
          uint64_t v334 = type metadata accessor for URL();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v334 - 8) + 16))(v330, v331, v334);
          uint64_t v335 = sub_10017DF08(&qword_100E66478);
          v330[*(int *)(v335 + 48)] = v331[*(int *)(v335 + 48)];
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v330, 0, 1, v332);
        }
        v178 = v691;
        goto LABEL_207;
      case 5u:
        v223 = v206;
        uint64_t v670 = v182;
        v679 = v166;
        uint64_t v660 = v167;
        if (v206[3])
        {
          uint64_t v224 = *v206;
          uint64_t v225 = v719[1];
          char v226 = *((unsigned char *)v719 + 16);
          sub_100190CC4(*v719, v225, v226);
          uint64_t *v205 = v224;
          v205[1] = v225;
          v223 = v719;
          *((unsigned char *)v205 + 16) = v226;
          v205[3] = v719[3];
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v262 = *((_OWORD *)v206 + 1);
          *(_OWORD *)v205 = *(_OWORD *)v206;
          *((_OWORD *)v205 + 1) = v262;
        }
        v263 = v223;
        uint64_t v264 = v223[4];
        uint64_t v265 = v223[5];
        uint64_t v267 = v263[6];
        uint64_t v266 = v263[7];
        uint64_t v268 = v263[8];
        uint64_t v269 = v263[9];
        uint64_t v270 = v263[10];
        char v271 = *((unsigned char *)v263 + 89);
        unsigned __int8 v272 = *((unsigned char *)v263 + 88);
        sub_10033A9E8(v264, v265, v267, v266, v268, v269, v270, v272, v271);
        v205[4] = v264;
        v205[5] = v265;
        v205[6] = v267;
        v205[7] = v266;
        v205[8] = v268;
        v205[9] = v269;
        v205[10] = v270;
        *((unsigned char *)v205 + 88) = v272;
        *((unsigned char *)v205 + 89) = v271;
        v3 = v721;
        uint64_t v4 = v725;
        uint64_t v182 = v670;
        v166 = v679;
        v178 = v691;
        uint64_t v167 = v660;
        goto LABEL_207;
      case 6u:
        uint64_t v220 = type metadata accessor for PrecipitationTotalPlatterViewModel();
LABEL_78:
        uint64_t v207 = v220;
        uint64_t v208 = v220;
        goto LABEL_79;
      case 7u:
        uint64_t v656 = type metadata accessor for ConditionDetailDynamicContentIdentifier();
        int v227 = swift_getEnumCaseMultiPayload();
        if (v227 != 1)
        {
          if (v227)
          {
            memcpy(v205, v206, *(void *)(*(void *)(v656 - 8) + 64));
          }
          else
          {
            uint64_t v228 = v206[1];
            uint64_t *v205 = *v206;
            v205[1] = v228;
            v205[2] = v206[2];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_storeEnumTagMultiPayload();
          }
LABEL_207:
          swift_storeEnumTagMultiPayload();
          uint64_t v494 = v178[8];
          uint64_t v414 = (uint64_t)v166 + v494;
          v415 = (uint64_t *)(v167 + v494);
          if (!_s7Weather24LocationCompositionStateOwet_0(v167 + v494, 1, v182))
          {
            switch(swift_getEnumCaseMultiPayload())
            {
              case 1u:
                uint64_t v498 = v415[1];
                *(void *)uint64_t v414 = *v415;
                *(void *)(v414 + 8) = v498;
                swift_bridgeObjectRetain();
                goto LABEL_221;
              case 2u:
                ((void (*)(uint64_t, uint64_t *, uint64_t))v701)(v414, v415, v705);
                goto LABEL_221;
              case 3u:
                uint64_t v499 = sub_10017DF08(&qword_100E73808);
                goto LABEL_219;
              case 4u:
                uint64_t v500 = v415[1];
                v684 = v166;
                if (v500)
                {
                  *(void *)uint64_t v414 = *v415;
                  *(void *)(v414 + 8) = v500;
                  uint64_t v501 = v415[3];
                  *(void *)(v414 + 16) = v415[2];
                  *(void *)(v414 + 24) = v501;
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                }
                else
                {
                  long long v507 = *((_OWORD *)v415 + 1);
                  *(_OWORD *)uint64_t v414 = *(_OWORD *)v415;
                  *(_OWORD *)(v414 + 16) = v507;
                }
                uint64_t v508 = *(int *)(v710 + 20);
                v509 = (void *)(v414 + v508);
                v510 = (uint64_t *)((char *)v415 + v508);
                uint64_t v511 = type metadata accessor for NewsArticleComponentViewModel(0);
                uint64_t v667 = v414;
                if (swift_getEnumCaseMultiPayload() == 1)
                {
                  uint64_t v512 = v510[1];
                  void *v509 = *v510;
                  v509[1] = v512;
                  v723 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
                  uint64_t v513 = v723[5];
                  v514 = (char *)v509 + v513;
                  v515 = (char *)v510 + v513;
                  uint64_t v516 = type metadata accessor for URL();
                  swift_bridgeObjectRetain();
                  uint64_t v673 = v182;
                  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v515, 1, v516))
                  {
                    uint64_t v517 = sub_10017DF08(&qword_100E749B0);
                    memcpy(v514, v515, *(void *)(*(void *)(v517 - 8) + 64));
                  }
                  else
                  {
                    (*(void (**)(char *, char *, uint64_t))(*(void *)(v516 - 8) + 16))(v514, v515, v516);
                    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v514, 0, 1, v516);
                  }
                  uint64_t v539 = v723[6];
                  v540 = (void *)((char *)v509 + v539);
                  v541 = (void *)((char *)v510 + v539);
                  uint64_t v542 = v541[1];
                  void *v540 = *v541;
                  v540[1] = v542;
                  uint64_t v543 = v723[7];
                  v703 = (char *)v509 + v543;
                  v544 = (char *)v510 + v543;
                  v545 = *(void (**)(char *, char *, uint64_t))(*(void *)(v516 - 8) + 16);
                  swift_bridgeObjectRetain();
                  v545(v703, v544, v516);
                  uint64_t v546 = v723[8];
                  v547 = (char *)v509 + v546;
                  v548 = (char *)v510 + v546;
                  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v510 + v546, 1, v516))
                  {
                    uint64_t v549 = sub_10017DF08(&qword_100E749B0);
                    memcpy(v547, v548, *(void *)(*(void *)(v549 - 8) + 64));
                  }
                  else
                  {
                    v545(v547, v548, v516);
                    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v547, 0, 1, v516);
                  }
                  uint64_t v182 = v673;
                  *((unsigned char *)v509 + v723[9]) = *((unsigned char *)v510 + v723[9]);
                  swift_storeEnumTagMultiPayload();
                  uint64_t v414 = v667;
                }
                else
                {
                  memcpy(v509, v510, *(void *)(*(void *)(v511 - 8) + 64));
                }
                uint64_t v550 = *(int *)(v710 + 24);
                v551 = (void *)(v414 + v550);
                v552 = (char *)v415 + v550;
                uint64_t v553 = type metadata accessor for DetailComponentAction();
                uint64_t v4 = v725;
                v166 = v684;
                if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v552, 1, v553))
                {
                  uint64_t v554 = sub_10017DF08(&qword_100E73810);
                  memcpy(v551, v552, *(void *)(*(void *)(v554 - 8) + 64));
                }
                else
                {
                  uint64_t v555 = type metadata accessor for URL();
                  (*(void (**)(void *, char *, uint64_t))(*(void *)(v555 - 8) + 16))(v551, v552, v555);
                  uint64_t v556 = sub_10017DF08(&qword_100E66478);
                  *((unsigned char *)v551 + *(int *)(v556 + 48)) = v552[*(int *)(v556 + 48)];
                  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v551, 0, 1, v553);
                }
                uint64_t v5 = v715;
                v178 = v691;
                uint64_t v414 = v667;
                goto LABEL_291;
              case 5u:
                uint64_t v672 = v182;
                v685 = v166;
                if (v415[3])
                {
                  uint64_t v502 = *v415;
                  uint64_t v503 = v415[1];
                  char v504 = *((unsigned char *)v415 + 16);
                  sub_100190CC4(*v415, v503, v504);
                  *(void *)uint64_t v414 = v502;
                  *(void *)(v414 + 8) = v503;
                  *(unsigned char *)(v414 + 16) = v504;
                  *(void *)(v414 + 24) = v415[3];
                  swift_bridgeObjectRetain();
                }
                else
                {
                  long long v518 = *((_OWORD *)v415 + 1);
                  *(_OWORD *)uint64_t v414 = *(_OWORD *)v415;
                  *(_OWORD *)(v414 + 16) = v518;
                }
                uint64_t v519 = v415[4];
                uint64_t v520 = v415[5];
                uint64_t v521 = v415[6];
                uint64_t v522 = v415[7];
                uint64_t v523 = v415[8];
                uint64_t v524 = v415[9];
                uint64_t v525 = v415[10];
                char v713 = *((unsigned char *)v415 + 89);
                uint64_t v526 = *((unsigned __int8 *)v415 + 88);
                sub_10033A9E8(v519, v520, v521, v522, v523, v524, v525, v526, v713);
                *(void *)(v414 + 32) = v519;
                *(void *)(v414 + 40) = v520;
                *(void *)(v414 + 48) = v521;
                *(void *)(v414 + 56) = v522;
                *(void *)(v414 + 64) = v523;
                *(void *)(v414 + 72) = v524;
                *(void *)(v414 + 80) = v525;
                *(unsigned char *)(v414 + 88) = v526;
                *(unsigned char *)(v414 + 89) = v713;
                uint64_t v5 = v715;
                v3 = v721;
                uint64_t v4 = v725;
                goto LABEL_290;
              case 6u:
                uint64_t v499 = type metadata accessor for PrecipitationTotalPlatterViewModel();
LABEL_219:
                uint64_t v496 = v499;
                uint64_t v497 = v499;
                goto LABEL_220;
              case 7u:
                uint64_t v722 = type metadata accessor for ConditionDetailDynamicContentIdentifier();
                int v505 = swift_getEnumCaseMultiPayload();
                if (v505 != 1)
                {
                  if (v505)
                  {
                    memcpy((void *)v414, v415, *(void *)(*(void *)(v722 - 8) + 64));
                  }
                  else
                  {
                    uint64_t v506 = v415[1];
                    *(void *)uint64_t v414 = *v415;
                    *(void *)(v414 + 8) = v506;
                    *(void *)(v414 + 16) = v415[2];
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    swift_storeEnumTagMultiPayload();
                  }
                  uint64_t v5 = v715;
                  uint64_t v4 = v725;
                  goto LABEL_291;
                }
                v685 = v166;
                uint64_t v527 = v415[1];
                *(void *)uint64_t v414 = *v415;
                *(void *)(v414 + 8) = v527;
                v528 = (int *)type metadata accessor for ConditionDetailMapViewModel();
                uint64_t v529 = v528[5];
                uint64_t v530 = v414 + v529;
                uint64_t v668 = v414;
                uint64_t v531 = (uint64_t)v415 + v529;
                swift_bridgeObjectRetain();
                uint64_t v532 = v530;
                uint64_t v533 = v668;
                ((void (*)(uint64_t, uint64_t, uint64_t))v697)(v532, v531, v699);
                uint64_t v534 = v528[6];
                v535 = (void *)(v668 + v534);
                v536 = (uint64_t *)((char *)v415 + v534);
                uint64_t v537 = type metadata accessor for WeatherData(0);
                uint64_t v672 = v182;
                if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v536, 1, v537))
                {
                  uint64_t v538 = sub_10017DF08(&qword_100E63850);
                  memcpy(v535, v536, *(void *)(*(void *)(v538 - 8) + 64));
                  goto LABEL_289;
                }
                v708 = v528;
                v714 = (int *)v537;
                uint64_t v557 = v536[1];
                void *v535 = *v536;
                v535[1] = v557;
                uint64_t v558 = *(int *)(v537 + 20);
                v559 = (char *)v535 + v558;
                v560 = v536;
                v561 = (char *)v536 + v558;
                uint64_t v562 = type metadata accessor for Locale();
                swift_bridgeObjectRetain();
                if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v561, 1, v562))
                {
                  uint64_t v563 = sub_10017DF08(&qword_100E63730);
                  memcpy(v559, v561, *(void *)(*(void *)(v563 - 8) + 64));
                }
                else
                {
                  (*(void (**)(char *, char *, uint64_t))(*(void *)(v562 - 8) + 16))(v559, v561, v562);
                  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v559, 0, 1, v562);
                }
                uint64_t v573 = v714[6];
                v574 = (char *)v535 + v573;
                v575 = (char *)v560 + v573;
                uint64_t v576 = type metadata accessor for WeatherDataModel();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v576 - 8) + 16))(v574, v575, v576);
                uint64_t v577 = v714[7];
                v578 = (char *)v535 + v577;
                v579 = (char *)v560 + v577;
                uint64_t v580 = sub_10017DF08(&qword_100E63738);
                if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v579, 1, v580))
                {
                  uint64_t v581 = type metadata accessor for WeatherData.CachingState(0);
                  memcpy(v578, v579, *(void *)(*(void *)(v581 - 8) + 64));
                }
                else
                {
                  ((void (*)(char *, char *, uint64_t))v693)(v578, v579, v695);
                  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v578, 0, 1, v580);
                }
                uint64_t v588 = v714[8];
                v589 = (void *)((char *)v535 + v588);
                v590 = (void *)((char *)v560 + v588);
                uint64_t v591 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
                int v592 = swift_getEnumCaseMultiPayload();
                if (v592 == 1)
                {
                  uint64_t v601 = type metadata accessor for WeatherStatisticsModel();
                  (*(void (**)(void *, void *, uint64_t))(*(void *)(v601 - 8) + 16))(v589, v590, v601);
                }
                else
                {
                  if (v592)
                  {
                    memcpy(v589, v590, *(void *)(*(void *)(v591 - 8) + 64));
LABEL_271:
                    uint64_t v602 = v714[9];
                    v603 = (char *)v535 + v602;
                    v604 = (char *)v560 + v602;
                    uint64_t v605 = type metadata accessor for WeatherDataOverrides();
                    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v604, 1, v605))
                    {
                      uint64_t v606 = sub_10017DF08(&qword_100E63740);
                      memcpy(v603, v604, *(void *)(*(void *)(v606 - 8) + 64));
                      v528 = v708;
                    }
                    else
                    {
                      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v604, 1, v695))
                      {
                        uint64_t v607 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
                        memcpy(v603, v604, *(void *)(*(void *)(v607 - 8) + 64));
                      }
                      else
                      {
                        ((void (*)(char *, char *, uint64_t))v693)(v603, v604, v695);
                        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v603, 0, 1, v695);
                      }
                      uint64_t v612 = *(int *)(v605 + 20);
                      v613 = &v603[v612];
                      v614 = &v604[v612];
                      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v614, 1, v695))
                      {
                        uint64_t v615 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
                        memcpy(v613, v614, *(void *)(*(void *)(v615 - 8) + 64));
                      }
                      else
                      {
                        ((void (*)(char *, char *, uint64_t))v693)(v613, v614, v695);
                        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v613, 0, 1, v695);
                      }
                      v528 = v708;
                      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v603, 0, 1, v605);
                    }
                    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v535, 0, 1, (uint64_t)v714);
                    uint64_t v533 = v668;
LABEL_289:
                    uint64_t v627 = v528[7];
                    v628 = (void *)(v533 + v627);
                    v629 = (uint64_t *)((char *)v415 + v627);
                    uint64_t v630 = v629[1];
                    void *v628 = *v629;
                    v628[1] = v630;
                    uint64_t v631 = v528[8];
                    uint64_t v632 = v533 + v631;
                    uint64_t v633 = (uint64_t)v415 + v631;
                    uint64_t v634 = type metadata accessor for WeatherMapOverlayKind();
                    v635 = v528;
                    v636 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v634 - 8) + 16);
                    swift_bridgeObjectRetain();
                    uint64_t v637 = v633;
                    uint64_t v414 = v668;
                    v636(v632, v637, v634);
                    *(unsigned char *)(v668 + v635[9]) = *((unsigned char *)v415 + v635[9]);
                    swift_storeEnumTagMultiPayload();
                    uint64_t v5 = v715;
                    uint64_t v4 = v725;
LABEL_290:
                    uint64_t v182 = v672;
                    v166 = v685;
                    v178 = v691;
LABEL_291:
                    swift_storeEnumTagMultiPayload();
                    _s7Weather24LocationCompositionStateOwst_0(v414, 0, 1, v182);
                    goto LABEL_292;
                  }
                  uint64_t v593 = v590[1];
                  void *v589 = *v590;
                  v589[1] = v593;
                  swift_bridgeObjectRetain();
                }
                swift_storeEnumTagMultiPayload();
                goto LABEL_271;
              default:
                uint64_t v496 = v687;
                uint64_t v497 = v687;
LABEL_220:
                (*(void (**)(uint64_t, uint64_t *, uint64_t))(*(void *)(v497 - 8) + 16))(v414, v415, v496);
LABEL_221:
                uint64_t v5 = v715;
                goto LABEL_291;
            }
          }
LABEL_208:
          uint64_t v495 = sub_10017DF08(&qword_100E73818);
          memcpy((void *)v414, v415, *(void *)(*(void *)(v495 - 8) + 64));
          uint64_t v5 = v715;
LABEL_292:
          *((unsigned char *)v166 + v178[9]) = *(unsigned char *)(v167 + v178[9]);
          *((unsigned char *)v166 + v178[10]) = *(unsigned char *)(v167 + v178[10]);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v166, 0, 1, (uint64_t)v178);
          goto LABEL_293;
        }
        v681 = v166;
        uint64_t v285 = v206[1];
        uint64_t *v205 = *v719;
        v205[1] = v285;
        v286 = (int *)type metadata accessor for ConditionDetailMapViewModel();
        uint64_t v287 = v286[5];
        v288 = (char *)v205 + v287;
        v664 = v205;
        v289 = (char *)v719 + v287;
        swift_bridgeObjectRetain();
        v290 = v288;
        v291 = v664;
        ((void (*)(char *, char *, uint64_t))v697)(v290, v289, v699);
        uint64_t v292 = v286[6];
        v293 = (uint64_t *)((char *)v664 + v292);
        v294 = (uint64_t *)((char *)v719 + v292);
        uint64_t v295 = type metadata accessor for WeatherData(0);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v294, 1, v295))
        {
          uint64_t v296 = sub_10017DF08(&qword_100E63850);
          memcpy(v293, v294, *(void *)(*(void *)(v296 - 8) + 64));
LABEL_206:
          uint64_t v485 = v286[7];
          v486 = (uint64_t *)((char *)v291 + v485);
          v487 = (uint64_t *)((char *)v719 + v485);
          uint64_t v488 = v487[1];
          void *v486 = *v487;
          v486[1] = v488;
          uint64_t v489 = v286[8];
          uint64_t v654 = (uint64_t)v291 + v489;
          v490 = (char *)v719 + v489;
          v491 = v286;
          uint64_t v492 = type metadata accessor for WeatherMapOverlayKind();
          v493 = *(void (**)(uint64_t, char *, uint64_t))(*(void *)(v492 - 8) + 16);
          swift_bridgeObjectRetain();
          v493(v654, v490, v492);
          *((unsigned char *)v664 + v491[9]) = *((unsigned char *)v719 + v491[9]);
          swift_storeEnumTagMultiPayload();
          v166 = v681;
          v178 = v691;
          goto LABEL_207;
        }
        v642 = v286;
        v646 = (int *)v295;
        uint64_t v342 = v294[1];
        void *v293 = *v294;
        v293[1] = v342;
        uint64_t v343 = *(int *)(v295 + 20);
        v648 = v294;
        v652 = v293;
        v344 = (char *)v293 + v343;
        v345 = (char *)v294 + v343;
        uint64_t v346 = type metadata accessor for Locale();
        swift_bridgeObjectRetain();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v345, 1, v346))
        {
          uint64_t v347 = sub_10017DF08(&qword_100E63730);
          memcpy(v344, v345, *(void *)(*(void *)(v347 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v346 - 8) + 16))(v344, v345, v346);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v344, 0, 1, v346);
        }
        uint64_t v358 = v646[6];
        v359 = (char *)v652 + v358;
        v360 = (char *)v294 + v358;
        uint64_t v361 = type metadata accessor for WeatherDataModel();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v361 - 8) + 16))(v359, v360, v361);
        uint64_t v362 = v646[7];
        v363 = (char *)v652 + v362;
        v364 = (char *)v294 + v362;
        uint64_t v365 = sub_10017DF08(&qword_100E63738);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v364, 1, v365))
        {
          uint64_t v366 = type metadata accessor for WeatherData.CachingState(0);
          memcpy(v363, v364, *(void *)(*(void *)(v366 - 8) + 64));
          uint64_t v367 = v695;
        }
        else
        {
          uint64_t v367 = v695;
          ((void (*)(char *, char *, uint64_t))v693)(v363, v364, v695);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v363, 0, 1, v365);
        }
        uint64_t v374 = v646[8];
        v375 = (void *)((char *)v652 + v374);
        v376 = (void *)((char *)v648 + v374);
        uint64_t v377 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
        int v378 = swift_getEnumCaseMultiPayload();
        if (v378 == 1)
        {
          uint64_t v388 = type metadata accessor for WeatherStatisticsModel();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v388 - 8) + 16))(v375, v376, v388);
        }
        else
        {
          if (v378)
          {
            memcpy(v375, v376, *(void *)(*(void *)(v377 - 8) + 64));
            goto LABEL_150;
          }
          uint64_t v379 = v376[1];
          void *v375 = *v376;
          v375[1] = v379;
          swift_bridgeObjectRetain();
        }
        swift_storeEnumTagMultiPayload();
LABEL_150:
        uint64_t v389 = v646[9];
        uint64_t v390 = (uint64_t)v652;
        v391 = (char *)v652 + v389;
        v392 = (char *)v648 + v389;
        uint64_t v393 = type metadata accessor for WeatherDataOverrides();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v392, 1, v393))
        {
          uint64_t v394 = sub_10017DF08(&qword_100E63740);
          memcpy(v391, v392, *(void *)(*(void *)(v394 - 8) + 64));
        }
        else
        {
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v392, 1, v367))
          {
            uint64_t v395 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
            memcpy(v391, v392, *(void *)(*(void *)(v395 - 8) + 64));
          }
          else
          {
            ((void (*)(char *, char *, uint64_t))v693)(v391, v392, v367);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v391, 0, 1, v367);
          }
          uint64_t v400 = *(int *)(v393 + 20);
          v401 = &v391[v400];
          v402 = &v392[v400];
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v402, 1, v367))
          {
            uint64_t v403 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
            memcpy(v401, v402, *(void *)(*(void *)(v403 - 8) + 64));
          }
          else
          {
            ((void (*)(char *, char *, uint64_t))v693)(v401, v402, v367);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v401, 0, 1, v367);
          }
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v391, 0, 1, v393);
          uint64_t v390 = (uint64_t)v652;
        }
        _s7Weather24LocationCompositionStateOwst_0(v390, 0, 1, (uint64_t)v646);
        v291 = v664;
        v286 = v642;
        goto LABEL_206;
      default:
        uint64_t v207 = v687;
        uint64_t v208 = v687;
LABEL_79:
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v208 - 8) + 16))(v205, v206, v207);
        goto LABEL_207;
    }
  }
  if (!EnumCaseMultiPayload)
  {
    uint64_t v715 = v5;
    uint64_t v724 = v4;
    v720 = v3;
    uint64_t v21 = v18[1];
    void *v17 = *v18;
    v17[1] = v21;
    uint64_t v22 = v18[3];
    v17[2] = v18[2];
    v17[3] = v22;
    uint64_t v23 = v18[5];
    v17[4] = v18[4];
    v17[5] = v23;
    v24 = (int *)_s11NormalModelVMa();
    uint64_t v25 = v24[7];
    v726 = (char *)v17 + v25;
    v26 = (char *)v18 + v25;
    uint64_t v27 = type metadata accessor for Date();
    v28 = *(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16);
    v29 = v18;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v28(v726, v26, v27);
    v28((char *)v17 + v24[8], (char *)v18 + v24[8], v27);
    v692 = v28;
    uint64_t v694 = v27;
    v28((char *)v17 + v24[9], (char *)v18 + v24[9], v27);
    uint64_t v30 = v24[10];
    v31 = (char *)v17 + v30;
    v32 = (char *)v18 + v30;
    uint64_t v33 = type metadata accessor for TimeZone();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 16))(v31, v32, v33);
    uint64_t v34 = v24[11];
    v35 = (char *)v17 + v34;
    v36 = (char *)v18 + v34;
    uint64_t v704 = type metadata accessor for AttributedString();
    v700 = *(void (**)(char *, char *))(*(void *)(v704 - 8) + 16);
    v700(v35, v36);
    *(void *)((char *)v17 + v24[12]) = *(void *)((char *)v18 + v24[12]);
    uint64_t v37 = v24[13];
    v38 = (char *)v17 + v37;
    v39 = (char *)v29 + v37;
    uint64_t v40 = type metadata accessor for SunriseSunsetDetailChartViewModel();
    v727 = v17;
    v41 = *(void (**)(char *, char *, uint64_t))(*(void *)(v40 - 8) + 16);
    swift_bridgeObjectRetain();
    v41(v38, v39, v40);
    v42 = v727;
    uint64_t v43 = v24[14];
    v44 = (char *)v727 + v43;
    v45 = (char *)v29 + v43;
    uint64_t v46 = type metadata accessor for Location();
    v696 = *(void (**)(char *, char *))(*(void *)(v46 - 8) + 16);
    uint64_t v698 = v46;
    v696(v44, v45);
    uint64_t v47 = v24[15];
    v48 = (char *)v727 + v47;
    v49 = (char *)v29 + v47;
    uint64_t v50 = type metadata accessor for SunEvents();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v50 - 8) + 16))(v48, v49, v50);
    uint64_t v51 = v24[16];
    v52 = (char *)v727 + v51;
    v53 = (char *)v29 + v51;
    uint64_t v54 = type metadata accessor for OverviewTableViewModel();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v54 - 8) + 16))(v52, v53, v54);
    uint64_t v55 = v24[17];
    v56 = (char *)v727 + v55;
    v57 = (char *)v29 + v55;
    uint64_t v58 = type metadata accessor for DaylightStringBuilder();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v58 - 8) + 16))(v56, v57, v58);
    uint64_t v59 = v24[18];
    v60 = (void *)((char *)v727 + v59);
    v716 = v29;
    v61 = (void *)((char *)v29 + v59);
    uint64_t v62 = type metadata accessor for DetailComponentContainerViewModel();
    uint64_t v709 = v62;
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v61, 1, v62))
    {
      uint64_t v63 = sub_10017DF08(&qword_100E66E28);
      memcpy(v60, v61, *(void *)(*(void *)(v63 - 8) + 64));
      v3 = v720;
      uint64_t v4 = v724;
      uint64_t v5 = v715;
    }
    else
    {
      uint64_t v110 = v61[1];
      if (v110)
      {
        void *v60 = *v61;
        v60[1] = v110;
        uint64_t v111 = v61[3];
        v60[2] = v61[2];
        v60[3] = v111;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v114 = *((_OWORD *)v61 + 1);
        *(_OWORD *)v60 = *(_OWORD *)v61;
        *((_OWORD *)v60 + 1) = v114;
      }
      uint64_t v115 = *(int *)(v62 + 20);
      v116 = (void *)((char *)v60 + v115);
      v117 = (void *)((char *)v61 + v115);
      uint64_t v118 = type metadata accessor for NewsArticleComponentViewModel(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v119 = v117[1];
        void *v116 = *v117;
        v116[1] = v119;
        v688 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
        uint64_t v120 = v688[5];
        v121 = (char *)v116 + v120;
        v122 = (char *)v117 + v120;
        uint64_t v123 = type metadata accessor for URL();
        swift_bridgeObjectRetain();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v122, 1, v123))
        {
          uint64_t v124 = sub_10017DF08(&qword_100E749B0);
          memcpy(v121, v122, *(void *)(*(void *)(v124 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v123 - 8) + 16))(v121, v122, v123);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v121, 0, 1, v123);
        }
        uint64_t v136 = v688[6];
        v137 = (void *)((char *)v116 + v136);
        v138 = (void *)((char *)v117 + v136);
        uint64_t v139 = v138[1];
        void *v137 = *v138;
        v137[1] = v139;
        uint64_t v140 = v688[7];
        v674 = (char *)v116 + v140;
        v141 = (char *)v117 + v140;
        v142 = *(void (**)(char *, char *, uint64_t))(*(void *)(v123 - 8) + 16);
        swift_bridgeObjectRetain();
        v142(v674, v141, v123);
        uint64_t v143 = v688[8];
        v144 = (char *)v116 + v143;
        v145 = (char *)v117 + v143;
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v117 + v143, 1, v123))
        {
          uint64_t v146 = sub_10017DF08(&qword_100E749B0);
          memcpy(v144, v145, *(void *)(*(void *)(v146 - 8) + 64));
        }
        else
        {
          v142(v144, v145, v123);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v144, 0, 1, v123);
        }
        v42 = v727;
        *((unsigned char *)v116 + v688[9]) = *((unsigned char *)v117 + v688[9]);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v116, v117, *(void *)(*(void *)(v118 - 8) + 64));
      }
      uint64_t v158 = *(int *)(v62 + 24);
      v159 = (char *)v60 + v158;
      v160 = (char *)v61 + v158;
      uint64_t v161 = type metadata accessor for DetailComponentAction();
      uint64_t v5 = v715;
      uint64_t v4 = v724;
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v160, 1, v161))
      {
        uint64_t v162 = sub_10017DF08(&qword_100E73810);
        memcpy(v159, v160, *(void *)(*(void *)(v162 - 8) + 64));
      }
      else
      {
        uint64_t v163 = type metadata accessor for URL();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v163 - 8) + 16))(v159, v160, v163);
        uint64_t v164 = sub_10017DF08(&qword_100E66478);
        v159[*(int *)(v164 + 48)] = v160[*(int *)(v164 + 48)];
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v159, 0, 1, v161);
      }
      v3 = v720;
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v60, 0, 1, v62);
    }
    uint64_t v165 = *(int *)(sub_10017DF08(&qword_100E92128) + 48);
    v166 = (void *)((char *)v42 + v165);
    uint64_t v167 = (uint64_t)v716 + v165;
    uint64_t v168 = type metadata accessor for ConditionDetailPlatterViewModel(0);
    if (!_s7Weather24LocationCompositionStateOwet_0(v167, 1, v168))
    {
      uint64_t v169 = *(void *)v167;
      uint64_t v170 = *(void *)(v167 + 8);
      unsigned __int8 v171 = *(unsigned char *)(v167 + 16);
      sub_10018F6EC(*(void *)v167, v170, v171);
      uint64_t *v166 = v169;
      v166[1] = v170;
      *((unsigned char *)v166 + 16) = v171;
      uint64_t v172 = *(void *)(v167 + 32);
      v166[3] = *(void *)(v167 + 24);
      v166[4] = v172;
      v690 = (int *)v168;
      uint64_t v173 = *(int *)(v168 + 24);
      v174 = (char *)v166 + v173;
      v175 = (const void *)(v167 + v173);
      uint64_t v176 = type metadata accessor for WeatherDescription();
      swift_bridgeObjectRetain();
      uint64_t v686 = v176;
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v175, 1, v176))
      {
        uint64_t v177 = sub_10017DF08(&qword_100E63758);
        memcpy(v174, v175, *(void *)(*(void *)(v177 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, const void *, uint64_t))(*(void *)(v176 - 8) + 16))(v174, v175, v176);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v174, 0, 1, v176);
      }
      v178 = v690;
      uint64_t v179 = v690[7];
      v180 = (uint64_t *)((char *)v166 + v179);
      v181 = (uint64_t *)(v167 + v179);
      uint64_t v182 = type metadata accessor for ConditionDetailPlatterViewModel.Body(0);
      v718 = v181;
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          uint64_t v209 = v181[1];
          uint64_t *v180 = *v181;
          v180[1] = v209;
          swift_bridgeObjectRetain();
          goto LABEL_164;
        case 2u:
          ((void (*)(uint64_t *, uint64_t *, uint64_t))v700)(v180, v181, v704);
          goto LABEL_164;
        case 3u:
          uint64_t v210 = sub_10017DF08(&qword_100E73808);
          goto LABEL_64;
        case 4u:
          uint64_t v211 = v181[1];
          v676 = v166;
          if (v211)
          {
            uint64_t *v180 = *v181;
            v180[1] = v211;
            uint64_t v212 = v181[3];
            v180[2] = v718[2];
            v180[3] = v212;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            long long v229 = *((_OWORD *)v181 + 1);
            *(_OWORD *)v180 = *(_OWORD *)v181;
            *((_OWORD *)v180 + 1) = v229;
          }
          uint64_t v230 = *(int *)(v709 + 20);
          v231 = (uint64_t *)((char *)v180 + v230);
          v232 = (uint64_t *)((char *)v718 + v230);
          uint64_t v233 = type metadata accessor for NewsArticleComponentViewModel(0);
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            v661 = v180;
            uint64_t v234 = v232[1];
            void *v231 = *v232;
            v231[1] = v234;
            v649 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
            v657 = v231;
            uint64_t v235 = v649[5];
            v236 = (char *)v231 + v235;
            v237 = (char *)v232 + v235;
            uint64_t v238 = type metadata accessor for URL();
            swift_bridgeObjectRetain();
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v237, 1, v238))
            {
              uint64_t v239 = sub_10017DF08(&qword_100E749B0);
              memcpy(v236, v237, *(void *)(*(void *)(v239 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v238 - 8) + 16))(v236, v237, v238);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v236, 0, 1, v238);
            }
            uint64_t v297 = v649[6];
            v298 = (void *)((char *)v657 + v297);
            v299 = (void *)((char *)v232 + v297);
            uint64_t v300 = v299[1];
            void *v298 = *v299;
            v298[1] = v300;
            uint64_t v301 = v649[7];
            v302 = (char *)v657 + v301;
            v303 = (char *)v232 + v301;
            v304 = *(void (**)(char *, char *, uint64_t))(*(void *)(v238 - 8) + 16);
            swift_bridgeObjectRetain();
            v304(v302, v303, v238);
            uint64_t v305 = v649[8];
            v306 = (char *)v657 + v305;
            v307 = (char *)v232 + v305;
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v232 + v305, 1, v238))
            {
              uint64_t v308 = sub_10017DF08(&qword_100E749B0);
              memcpy(v306, v307, *(void *)(*(void *)(v308 - 8) + 64));
            }
            else
            {
              v304(v306, v307, v238);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v306, 0, 1, v238);
            }
            *((unsigned char *)v657 + v649[9]) = *((unsigned char *)v232 + v649[9]);
            swift_storeEnumTagMultiPayload();
            v180 = v661;
          }
          else
          {
            memcpy(v231, v232, *(void *)(*(void *)(v233 - 8) + 64));
          }
          uint64_t v322 = *(int *)(v709 + 24);
          v323 = (char *)v180 + v322;
          v324 = (char *)v718 + v322;
          uint64_t v325 = type metadata accessor for DetailComponentAction();
          uint64_t v4 = v724;
          v166 = v676;
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v324, 1, v325))
          {
            uint64_t v326 = sub_10017DF08(&qword_100E73810);
            memcpy(v323, v324, *(void *)(*(void *)(v326 - 8) + 64));
          }
          else
          {
            uint64_t v327 = type metadata accessor for URL();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v327 - 8) + 16))(v323, v324, v327);
            uint64_t v328 = sub_10017DF08(&qword_100E66478);
            v323[*(int *)(v328 + 48)] = v324[*(int *)(v328 + 48)];
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v323, 0, 1, v325);
          }
          v3 = v720;
          v178 = v690;
          goto LABEL_164;
        case 5u:
          v213 = v181;
          uint64_t v669 = v182;
          v677 = v166;
          uint64_t v659 = v167;
          if (v181[3])
          {
            uint64_t v214 = *v181;
            uint64_t v215 = v718[1];
            char v216 = *((unsigned char *)v718 + 16);
            sub_100190CC4(*v718, v215, v216);
            uint64_t *v180 = v214;
            v180[1] = v215;
            v213 = v718;
            *((unsigned char *)v180 + 16) = v216;
            v180[3] = v718[3];
            swift_bridgeObjectRetain();
          }
          else
          {
            long long v240 = *((_OWORD *)v181 + 1);
            *(_OWORD *)v180 = *(_OWORD *)v181;
            *((_OWORD *)v180 + 1) = v240;
          }
          v241 = v213;
          uint64_t v242 = v213[4];
          uint64_t v243 = v213[5];
          uint64_t v245 = v241[6];
          uint64_t v244 = v241[7];
          uint64_t v246 = v241[8];
          uint64_t v247 = v241[9];
          uint64_t v248 = v241[10];
          char v249 = *((unsigned char *)v241 + 89);
          unsigned __int8 v250 = *((unsigned char *)v241 + 88);
          sub_10033A9E8(v242, v243, v245, v244, v246, v247, v248, v250, v249);
          v180[4] = v242;
          v180[5] = v243;
          v180[6] = v245;
          v180[7] = v244;
          v180[8] = v246;
          v180[9] = v247;
          v180[10] = v248;
          *((unsigned char *)v180 + 88) = v250;
          *((unsigned char *)v180 + 89) = v249;
          v3 = v720;
          uint64_t v4 = v724;
          uint64_t v182 = v669;
          v166 = v677;
          v178 = v690;
          uint64_t v167 = v659;
          goto LABEL_164;
        case 6u:
          uint64_t v210 = type metadata accessor for PrecipitationTotalPlatterViewModel();
LABEL_64:
          uint64_t v183 = v210;
          uint64_t v184 = v210;
          goto LABEL_65;
        case 7u:
          uint64_t v655 = type metadata accessor for ConditionDetailDynamicContentIdentifier();
          int v217 = swift_getEnumCaseMultiPayload();
          if (v217 != 1)
          {
            if (v217)
            {
              memcpy(v180, v181, *(void *)(*(void *)(v655 - 8) + 64));
            }
            else
            {
              uint64_t v218 = v181[1];
              uint64_t *v180 = *v181;
              v180[1] = v218;
              v180[2] = v181[2];
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_storeEnumTagMultiPayload();
            }
LABEL_164:
            swift_storeEnumTagMultiPayload();
            uint64_t v413 = v178[8];
            uint64_t v414 = (uint64_t)v166 + v413;
            v415 = (uint64_t *)(v167 + v413);
            if (!_s7Weather24LocationCompositionStateOwet_0(v167 + v413, 1, v182))
            {
              switch(swift_getEnumCaseMultiPayload())
              {
                case 1u:
                  uint64_t v418 = v415[1];
                  *(void *)uint64_t v414 = *v415;
                  *(void *)(v414 + 8) = v418;
                  swift_bridgeObjectRetain();
                  goto LABEL_177;
                case 2u:
                  ((void (*)(uint64_t, uint64_t *, uint64_t))v700)(v414, v415, v704);
                  goto LABEL_177;
                case 3u:
                  uint64_t v419 = sub_10017DF08(&qword_100E73808);
                  goto LABEL_175;
                case 4u:
                  uint64_t v420 = v415[1];
                  v682 = v166;
                  if (v420)
                  {
                    *(void *)uint64_t v414 = *v415;
                    *(void *)(v414 + 8) = v420;
                    uint64_t v421 = v415[3];
                    *(void *)(v414 + 16) = v415[2];
                    *(void *)(v414 + 24) = v421;
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                  }
                  else
                  {
                    long long v427 = *((_OWORD *)v415 + 1);
                    *(_OWORD *)uint64_t v414 = *(_OWORD *)v415;
                    *(_OWORD *)(v414 + 16) = v427;
                  }
                  uint64_t v428 = *(int *)(v709 + 20);
                  v429 = (void *)(v414 + v428);
                  v430 = (uint64_t *)((char *)v415 + v428);
                  uint64_t v431 = type metadata accessor for NewsArticleComponentViewModel(0);
                  uint64_t v665 = v414;
                  if (swift_getEnumCaseMultiPayload() == 1)
                  {
                    uint64_t v432 = v430[1];
                    void *v429 = *v430;
                    v429[1] = v432;
                    v706 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
                    uint64_t v433 = v706[5];
                    v434 = (char *)v429 + v433;
                    v435 = (char *)v430 + v433;
                    uint64_t v436 = type metadata accessor for URL();
                    swift_bridgeObjectRetain();
                    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v435, 1, v436))
                    {
                      uint64_t v437 = sub_10017DF08(&qword_100E749B0);
                      memcpy(v434, v435, *(void *)(*(void *)(v437 - 8) + 64));
                    }
                    else
                    {
                      (*(void (**)(char *, char *, uint64_t))(*(void *)(v436 - 8) + 16))(v434, v435, v436);
                      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v434, 0, 1, v436);
                    }
                    uint64_t v459 = v706[6];
                    v460 = (void *)((char *)v429 + v459);
                    v461 = (void *)((char *)v430 + v459);
                    uint64_t v462 = v461[1];
                    void *v460 = *v461;
                    v460[1] = v462;
                    uint64_t v463 = v706[7];
                    v464 = (char *)v429 + v463;
                    v465 = (char *)v430 + v463;
                    v466 = *(void (**)(char *, char *, uint64_t))(*(void *)(v436 - 8) + 16);
                    swift_bridgeObjectRetain();
                    v466(v464, v465, v436);
                    uint64_t v467 = v706[8];
                    v468 = (char *)v429 + v467;
                    v469 = (char *)v430 + v467;
                    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v430 + v467, 1, v436))
                    {
                      uint64_t v470 = sub_10017DF08(&qword_100E749B0);
                      memcpy(v468, v469, *(void *)(*(void *)(v470 - 8) + 64));
                    }
                    else
                    {
                      v466(v468, v469, v436);
                      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v468, 0, 1, v436);
                    }
                    *((unsigned char *)v429 + v706[9]) = *((unsigned char *)v430 + v706[9]);
                    swift_storeEnumTagMultiPayload();
                    uint64_t v414 = v665;
                  }
                  else
                  {
                    memcpy(v429, v430, *(void *)(*(void *)(v431 - 8) + 64));
                  }
                  uint64_t v471 = *(int *)(v709 + 24);
                  v472 = (void *)(v414 + v471);
                  v473 = (char *)v415 + v471;
                  uint64_t v474 = type metadata accessor for DetailComponentAction();
                  v3 = v720;
                  uint64_t v4 = v724;
                  v166 = v682;
                  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v473, 1, v474))
                  {
                    uint64_t v475 = sub_10017DF08(&qword_100E73810);
                    memcpy(v472, v473, *(void *)(*(void *)(v475 - 8) + 64));
                  }
                  else
                  {
                    uint64_t v476 = type metadata accessor for URL();
                    (*(void (**)(void *, char *, uint64_t))(*(void *)(v476 - 8) + 16))(v472, v473, v476);
                    uint64_t v477 = sub_10017DF08(&qword_100E66478);
                    *((unsigned char *)v472 + *(int *)(v477 + 48)) = v473[*(int *)(v477 + 48)];
                    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v472, 0, 1, v474);
                  }
                  uint64_t v5 = v715;
                  v178 = v690;
                  uint64_t v414 = v665;
                  goto LABEL_291;
                case 5u:
                  uint64_t v671 = v182;
                  v683 = v166;
                  if (v415[3])
                  {
                    uint64_t v422 = *v415;
                    uint64_t v423 = v415[1];
                    char v424 = *((unsigned char *)v415 + 16);
                    sub_100190CC4(*v415, v423, v424);
                    *(void *)uint64_t v414 = v422;
                    *(void *)(v414 + 8) = v423;
                    *(unsigned char *)(v414 + 16) = v424;
                    *(void *)(v414 + 24) = v415[3];
                    swift_bridgeObjectRetain();
                  }
                  else
                  {
                    long long v438 = *((_OWORD *)v415 + 1);
                    *(_OWORD *)uint64_t v414 = *(_OWORD *)v415;
                    *(_OWORD *)(v414 + 16) = v438;
                  }
                  uint64_t v439 = v415[4];
                  uint64_t v440 = v415[5];
                  uint64_t v441 = v415[6];
                  uint64_t v442 = v415[7];
                  uint64_t v443 = v415[8];
                  uint64_t v444 = v415[9];
                  uint64_t v445 = v415[10];
                  char v712 = *((unsigned char *)v415 + 89);
                  uint64_t v446 = *((unsigned __int8 *)v415 + 88);
                  sub_10033A9E8(v439, v440, v441, v442, v443, v444, v445, v446, v712);
                  *(void *)(v414 + 32) = v439;
                  *(void *)(v414 + 40) = v440;
                  *(void *)(v414 + 48) = v441;
                  *(void *)(v414 + 56) = v442;
                  *(void *)(v414 + 64) = v443;
                  *(void *)(v414 + 72) = v444;
                  *(void *)(v414 + 80) = v445;
                  *(unsigned char *)(v414 + 88) = v446;
                  *(unsigned char *)(v414 + 89) = v712;
                  uint64_t v5 = v715;
                  uint64_t v4 = v724;
                  goto LABEL_285;
                case 6u:
                  uint64_t v419 = type metadata accessor for PrecipitationTotalPlatterViewModel();
LABEL_175:
                  uint64_t v416 = v419;
                  uint64_t v417 = v419;
                  goto LABEL_176;
                case 7u:
                  uint64_t v711 = type metadata accessor for ConditionDetailDynamicContentIdentifier();
                  int v425 = swift_getEnumCaseMultiPayload();
                  if (v425 != 1)
                  {
                    if (v425)
                    {
                      memcpy((void *)v414, v415, *(void *)(*(void *)(v711 - 8) + 64));
                    }
                    else
                    {
                      uint64_t v426 = v415[1];
                      *(void *)uint64_t v414 = *v415;
                      *(void *)(v414 + 8) = v426;
                      *(void *)(v414 + 16) = v415[2];
                      swift_bridgeObjectRetain();
                      swift_bridgeObjectRetain();
                      swift_storeEnumTagMultiPayload();
                    }
                    uint64_t v5 = v715;
                    v3 = v720;
                    goto LABEL_291;
                  }
                  v683 = v166;
                  uint64_t v447 = v415[1];
                  *(void *)uint64_t v414 = *v415;
                  *(void *)(v414 + 8) = v447;
                  v448 = (int *)type metadata accessor for ConditionDetailMapViewModel();
                  uint64_t v449 = v448[5];
                  uint64_t v450 = v414 + v449;
                  uint64_t v666 = v414;
                  uint64_t v451 = (uint64_t)v415 + v449;
                  swift_bridgeObjectRetain();
                  uint64_t v452 = v450;
                  uint64_t v453 = v666;
                  ((void (*)(uint64_t, uint64_t, uint64_t))v696)(v452, v451, v698);
                  uint64_t v454 = v448[6];
                  v455 = (void *)(v666 + v454);
                  v456 = (uint64_t *)((char *)v415 + v454);
                  uint64_t v457 = type metadata accessor for WeatherData(0);
                  uint64_t v671 = v182;
                  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v456, 1, v457))
                  {
                    uint64_t v458 = sub_10017DF08(&qword_100E63850);
                    memcpy(v455, v456, *(void *)(*(void *)(v458 - 8) + 64));
                    goto LABEL_284;
                  }
                  v702 = v448;
                  uint64_t v478 = v456[1];
                  void *v455 = *v456;
                  v455[1] = v478;
                  v707 = (int *)v457;
                  uint64_t v479 = *(int *)(v457 + 20);
                  v480 = (char *)v455 + v479;
                  v481 = v456;
                  v482 = (char *)v456 + v479;
                  uint64_t v483 = type metadata accessor for Locale();
                  swift_bridgeObjectRetain();
                  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v482, 1, v483))
                  {
                    uint64_t v484 = sub_10017DF08(&qword_100E63730);
                    memcpy(v480, v482, *(void *)(*(void *)(v484 - 8) + 64));
                  }
                  else
                  {
                    (*(void (**)(char *, char *, uint64_t))(*(void *)(v483 - 8) + 16))(v480, v482, v483);
                    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v480, 0, 1, v483);
                  }
                  uint64_t v564 = v707[6];
                  v565 = (char *)v455 + v564;
                  v566 = (char *)v481 + v564;
                  uint64_t v567 = type metadata accessor for WeatherDataModel();
                  (*(void (**)(char *, char *, uint64_t))(*(void *)(v567 - 8) + 16))(v565, v566, v567);
                  uint64_t v568 = v707[7];
                  v569 = (char *)v455 + v568;
                  v570 = (char *)v481 + v568;
                  uint64_t v571 = sub_10017DF08(&qword_100E63738);
                  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v570, 1, v571))
                  {
                    uint64_t v572 = type metadata accessor for WeatherData.CachingState(0);
                    memcpy(v569, v570, *(void *)(*(void *)(v572 - 8) + 64));
                  }
                  else
                  {
                    v692(v569, v570, v694);
                    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v569, 0, 1, v571);
                  }
                  uint64_t v582 = v707[8];
                  v583 = (void *)((char *)v455 + v582);
                  v584 = (void *)((char *)v481 + v582);
                  uint64_t v585 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
                  int v586 = swift_getEnumCaseMultiPayload();
                  if (v586 == 1)
                  {
                    uint64_t v594 = type metadata accessor for WeatherStatisticsModel();
                    (*(void (**)(void *, void *, uint64_t))(*(void *)(v594 - 8) + 16))(v583, v584, v594);
                    goto LABEL_262;
                  }
                  if (!v586)
                  {
                    uint64_t v587 = v584[1];
                    void *v583 = *v584;
                    v583[1] = v587;
                    swift_bridgeObjectRetain();
LABEL_262:
                    swift_storeEnumTagMultiPayload();
                    goto LABEL_264;
                  }
                  memcpy(v583, v584, *(void *)(*(void *)(v585 - 8) + 64));
LABEL_264:
                  uint64_t v595 = v707[9];
                  v596 = (char *)v455 + v595;
                  v597 = (char *)v481 + v595;
                  uint64_t v598 = type metadata accessor for WeatherDataOverrides();
                  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v597, 1, v598))
                  {
                    uint64_t v599 = sub_10017DF08(&qword_100E63740);
                    memcpy(v596, v597, *(void *)(*(void *)(v599 - 8) + 64));
                    v448 = v702;
                  }
                  else
                  {
                    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v597, 1, v694))
                    {
                      uint64_t v600 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
                      memcpy(v596, v597, *(void *)(*(void *)(v600 - 8) + 64));
                    }
                    else
                    {
                      v692(v596, v597, v694);
                      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v596, 0, 1, v694);
                    }
                    uint64_t v608 = *(int *)(v598 + 20);
                    v609 = &v596[v608];
                    v610 = &v597[v608];
                    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v610, 1, v694))
                    {
                      uint64_t v611 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
                      memcpy(v609, v610, *(void *)(*(void *)(v611 - 8) + 64));
                    }
                    else
                    {
                      v692(v609, v610, v694);
                      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v609, 0, 1, v694);
                    }
                    v448 = v702;
                    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v596, 0, 1, v598);
                  }
                  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v455, 0, 1, (uint64_t)v707);
                  uint64_t v453 = v666;
LABEL_284:
                  uint64_t v616 = v448[7];
                  v617 = (void *)(v453 + v616);
                  v618 = (uint64_t *)((char *)v415 + v616);
                  uint64_t v619 = v618[1];
                  void *v617 = *v618;
                  v617[1] = v619;
                  uint64_t v620 = v448[8];
                  uint64_t v621 = v453 + v620;
                  uint64_t v622 = (uint64_t)v415 + v620;
                  uint64_t v623 = type metadata accessor for WeatherMapOverlayKind();
                  v624 = v448;
                  v625 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v623 - 8) + 16);
                  swift_bridgeObjectRetain();
                  uint64_t v626 = v622;
                  uint64_t v414 = v666;
                  v625(v621, v626, v623);
                  *(unsigned char *)(v666 + v624[9]) = *((unsigned char *)v415 + v624[9]);
                  swift_storeEnumTagMultiPayload();
                  uint64_t v5 = v715;
LABEL_285:
                  v3 = v720;
                  uint64_t v182 = v671;
                  v166 = v683;
                  v178 = v690;
                  break;
                default:
                  uint64_t v416 = v686;
                  uint64_t v417 = v686;
LABEL_176:
                  (*(void (**)(uint64_t, uint64_t *, uint64_t))(*(void *)(v417 - 8) + 16))(v414, v415, v416);
LABEL_177:
                  uint64_t v5 = v715;
                  goto LABEL_291;
              }
              goto LABEL_291;
            }
            goto LABEL_208;
          }
          v680 = v166;
          uint64_t v273 = v181[1];
          uint64_t *v180 = *v718;
          v180[1] = v273;
          v274 = (int *)type metadata accessor for ConditionDetailMapViewModel();
          uint64_t v275 = v274[5];
          v276 = (char *)v180 + v275;
          v663 = v180;
          v277 = (char *)v718 + v275;
          swift_bridgeObjectRetain();
          v278 = v276;
          v279 = v663;
          ((void (*)(char *, char *, uint64_t))v696)(v278, v277, v698);
          uint64_t v280 = v274[6];
          v281 = (uint64_t *)((char *)v663 + v280);
          v282 = (uint64_t *)((char *)v718 + v280);
          uint64_t v283 = type metadata accessor for WeatherData(0);
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v282, 1, v283))
          {
            uint64_t v284 = sub_10017DF08(&qword_100E63850);
            memcpy(v281, v282, *(void *)(*(void *)(v284 - 8) + 64));
LABEL_163:
            uint64_t v404 = v274[7];
            v405 = (uint64_t *)((char *)v279 + v404);
            v406 = (uint64_t *)((char *)v718 + v404);
            uint64_t v407 = v406[1];
            void *v405 = *v406;
            v405[1] = v407;
            uint64_t v408 = v274[8];
            uint64_t v653 = (uint64_t)v279 + v408;
            v409 = (char *)v718 + v408;
            v410 = v274;
            uint64_t v411 = type metadata accessor for WeatherMapOverlayKind();
            v412 = *(void (**)(uint64_t, char *, uint64_t))(*(void *)(v411 - 8) + 16);
            swift_bridgeObjectRetain();
            v412(v653, v409, v411);
            *((unsigned char *)v663 + v410[9]) = *((unsigned char *)v718 + v410[9]);
            swift_storeEnumTagMultiPayload();
            v166 = v680;
            v178 = v690;
            goto LABEL_164;
          }
          v641 = v274;
          v645 = (int *)v283;
          uint64_t v336 = v282[1];
          void *v281 = *v282;
          v281[1] = v336;
          uint64_t v337 = *(int *)(v283 + 20);
          v647 = v282;
          v651 = v281;
          v338 = (char *)v281 + v337;
          v339 = (char *)v282 + v337;
          uint64_t v340 = type metadata accessor for Locale();
          swift_bridgeObjectRetain();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v339, 1, v340))
          {
            uint64_t v341 = sub_10017DF08(&qword_100E63730);
            memcpy(v338, v339, *(void *)(*(void *)(v341 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v340 - 8) + 16))(v338, v339, v340);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v338, 0, 1, v340);
          }
          uint64_t v348 = v645[6];
          v349 = (char *)v651 + v348;
          v350 = (char *)v282 + v348;
          uint64_t v351 = type metadata accessor for WeatherDataModel();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v351 - 8) + 16))(v349, v350, v351);
          uint64_t v352 = v645[7];
          v353 = (char *)v651 + v352;
          v354 = (char *)v282 + v352;
          uint64_t v355 = sub_10017DF08(&qword_100E63738);
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v354, 1, v355))
          {
            uint64_t v356 = type metadata accessor for WeatherData.CachingState(0);
            memcpy(v353, v354, *(void *)(*(void *)(v356 - 8) + 64));
            uint64_t v357 = v694;
          }
          else
          {
            uint64_t v357 = v694;
            v692(v353, v354, v694);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v353, 0, 1, v355);
          }
          uint64_t v368 = v645[8];
          v369 = (void *)((char *)v651 + v368);
          v370 = (void *)((char *)v647 + v368);
          uint64_t v371 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
          int v372 = swift_getEnumCaseMultiPayload();
          if (v372 == 1)
          {
            uint64_t v380 = type metadata accessor for WeatherStatisticsModel();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v380 - 8) + 16))(v369, v370, v380);
          }
          else
          {
            if (v372)
            {
              memcpy(v369, v370, *(void *)(*(void *)(v371 - 8) + 64));
              goto LABEL_143;
            }
            uint64_t v373 = v370[1];
            void *v369 = *v370;
            v369[1] = v373;
            swift_bridgeObjectRetain();
          }
          swift_storeEnumTagMultiPayload();
LABEL_143:
          uint64_t v381 = v645[9];
          uint64_t v382 = (uint64_t)v651;
          v383 = (char *)v651 + v381;
          v384 = (char *)v647 + v381;
          uint64_t v385 = type metadata accessor for WeatherDataOverrides();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v384, 1, v385))
          {
            uint64_t v386 = sub_10017DF08(&qword_100E63740);
            memcpy(v383, v384, *(void *)(*(void *)(v386 - 8) + 64));
          }
          else
          {
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v384, 1, v357))
            {
              uint64_t v387 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
              memcpy(v383, v384, *(void *)(*(void *)(v387 - 8) + 64));
            }
            else
            {
              v692(v383, v384, v357);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v383, 0, 1, v357);
            }
            uint64_t v396 = *(int *)(v385 + 20);
            v397 = &v383[v396];
            v398 = &v384[v396];
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v398, 1, v357))
            {
              uint64_t v399 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
              memcpy(v397, v398, *(void *)(*(void *)(v399 - 8) + 64));
            }
            else
            {
              v692(v397, v398, v357);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v397, 0, 1, v357);
            }
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v383, 0, 1, v385);
            uint64_t v382 = (uint64_t)v651;
          }
          _s7Weather24LocationCompositionStateOwst_0(v382, 0, 1, (uint64_t)v645);
          v279 = v663;
          v274 = v641;
          goto LABEL_163;
        default:
          uint64_t v183 = v686;
          uint64_t v184 = v686;
LABEL_65:
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v184 - 8) + 16))(v180, v181, v183);
          goto LABEL_164;
      }
    }
LABEL_50:
    uint64_t v194 = sub_10017DF08(&qword_100E66E40);
    memcpy(v166, (const void *)v167, *(void *)(*(void *)(v194 - 8) + 64));
LABEL_293:
    swift_storeEnumTagMultiPayload();
    goto LABEL_294;
  }
  memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
LABEL_294:
  uint64_t v638 = v3[8];
  *(unsigned char *)(v5 + v3[7]) = *(unsigned char *)(v4 + v3[7]);
  *(void *)(v5 + v638) = *(void *)(v4 + v638);
  *(void *)(v5 + v3[9]) = *(void *)(v4 + v3[9]);
  return v5;
}

void *sub_10096EFA8(void *a1, void *a2, int *a3)
{
  uint64_t v4 = a2;
  uint64_t v5 = a1;
  *a1 = *a2;
  swift_retain();
  swift_release();
  v5[1] = v4[1];
  swift_retain();
  swift_release();
  long long v6 = *((_OWORD *)v4 + 1);
  *((unsigned char *)v5 + 32) = *((unsigned char *)v4 + 32);
  *((_OWORD *)v5 + 1) = v6;
  uint64_t v7 = a3[5];
  v8 = (char *)v5 + v7;
  uint64_t v9 = (char *)v4 + v7;
  *(void *)((char *)v5 + v7) = *(void *)((char *)v4 + v7);
  swift_retain();
  swift_release();
  *((void *)v8 + 1) = *((void *)v9 + 1);
  swift_retain();
  swift_release();
  uint64_t v10 = *(int *)(sub_10017DF08(&qword_100EA37A0) + 32);
  uint64_t v11 = &v8[v10];
  v12 = &v9[v10];
  uint64_t v13 = type metadata accessor for DetailChartDataElement();
  int v14 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v11, 1, v13);
  int v15 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v12, 1, v13);
  if (v14)
  {
    if (!v15)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v11, 0, 1, v13);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v16 = *(void *)(v13 - 8);
  if (v15)
  {
    (*(void (**)(char *, uint64_t))(v16 + 8))(v11, v13);
LABEL_6:
    uint64_t v17 = sub_10017DF08(&qword_100E6B640);
    memcpy(v11, v12, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v16 + 24))(v11, v12, v13);
LABEL_7:
  if (v5 == v4) {
    goto LABEL_232;
  }
  uint64_t v18 = a3[6];
  uint64_t v19 = (void *)((char *)v5 + v18);
  v20 = (char *)v4 + v18;
  sub_100964CC4((uint64_t)v5 + v18, (void (*)(void))type metadata accessor for SunriseSunsetDetailViewModel);
  uint64_t v21 = type metadata accessor for SunriseSunsetDetailViewModel();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v665 = a3;
    uint64_t v660 = v4;
    *uint64_t v19 = *(void *)v20;
    v19[1] = *((void *)v20 + 1);
    v19[2] = *((void *)v20 + 2);
    v19[3] = *((void *)v20 + 3);
    uint64_t v65 = (int *)_s10PolarModelVMa();
    uint64_t v66 = v65[6];
    uint64_t v67 = (char *)v19 + v66;
    v68 = &v20[v66];
    uint64_t v669 = v19;
    uint64_t v69 = type metadata accessor for PolarType();
    uint64_t v70 = *(void (**)(char *, char *, uint64_t))(*(void *)(v69 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v70(v67, v68, v69);
    uint64_t v71 = v65[7];
    uint64_t v72 = (char *)v669 + v71;
    v73 = &v20[v71];
    uint64_t v74 = type metadata accessor for Date();
    uint64_t v626 = *(void (**)(char *, char *))(*(void *)(v74 - 8) + 16);
    uint64_t v627 = v74;
    v626(v72, v73);
    uint64_t v75 = v65[8];
    uint64_t v76 = (char *)v669 + v75;
    v77 = &v20[v75];
    uint64_t v78 = type metadata accessor for TimeZone();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v78 - 8) + 16))(v76, v77, v78);
    uint64_t v79 = v65[9];
    uint64_t v80 = (char *)v669 + v79;
    v81 = &v20[v79];
    uint64_t v82 = type metadata accessor for AttributedString();
    v645 = *(void (**)(char *, char *))(*(void *)(v82 - 8) + 16);
    uint64_t v652 = v82;
    v645(v80, v81);
    *(void *)((char *)v669 + v65[10]) = *(void *)&v20[v65[10]];
    uint64_t v83 = v65[11];
    v84 = (void *)((char *)v669 + v83);
    v85 = &v20[v83];
    void *v84 = *v85;
    v84[1] = v85[1];
    uint64_t v86 = v65[12];
    uint64_t v87 = (char *)v669 + v86;
    v88 = &v20[v86];
    uint64_t v89 = type metadata accessor for SunriseSunsetDetailChartViewModel();
    uint64_t v90 = *(void (**)(char *, char *, uint64_t))(*(void *)(v89 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v91 = v89;
    v92 = v669;
    v90(v87, v88, v91);
    uint64_t v93 = v65[13];
    v94 = (char *)v669 + v93;
    v95 = &v20[v93];
    uint64_t v96 = type metadata accessor for Location();
    uint64_t v631 = *(void (**)(char *, char *))(*(void *)(v96 - 8) + 16);
    uint64_t v634 = (void *)v96;
    v631(v94, v95);
    uint64_t v97 = v65[14];
    v98 = (char *)v669 + v97;
    v99 = &v20[v97];
    uint64_t v100 = type metadata accessor for DaylightStringBuilder();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v100 - 8) + 16))(v98, v99, v100);
    uint64_t v101 = v65[15];
    v102 = (char *)v669 + v101;
    v103 = &v20[v101];
    uint64_t v104 = type metadata accessor for OverviewTableViewModel();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v104 - 8) + 16))(v102, v103, v104);
    uint64_t v105 = v65[16];
    v106 = (void *)((char *)v669 + v105);
    v107 = &v20[v105];
    uint64_t v108 = type metadata accessor for DetailComponentContainerViewModel();
    uint64_t v655 = v108;
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v107, 1, v108))
    {
      uint64_t v109 = sub_10017DF08(&qword_100E66E28);
      memcpy(v106, v107, *(void *)(*(void *)(v109 - 8) + 64));
      uint64_t v4 = v660;
      a3 = v665;
    }
    else
    {
      if (v107[1])
      {
        void *v106 = *v107;
        v106[1] = v107[1];
        v106[2] = v107[2];
        v106[3] = v107[3];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v120 = *((_OWORD *)v107 + 1);
        *(_OWORD *)v106 = *(_OWORD *)v107;
        *((_OWORD *)v106 + 1) = v120;
      }
      uint64_t v4 = v660;
      uint64_t v121 = *(int *)(v108 + 20);
      v122 = (void *)((char *)v106 + v121);
      uint64_t v123 = (void *)((char *)v107 + v121);
      uint64_t v124 = type metadata accessor for NewsArticleComponentViewModel(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        void *v122 = *v123;
        v122[1] = v123[1];
        __src = v122;
        uint64_t v622 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
        uint64_t v125 = v622[5];
        uint64_t v126 = (char *)v122 + v125;
        v127 = (char *)v123 + v125;
        uint64_t v128 = type metadata accessor for URL();
        swift_bridgeObjectRetain();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v127, 1, v128))
        {
          uint64_t v129 = sub_10017DF08(&qword_100E749B0);
          memcpy(v126, v127, *(void *)(*(void *)(v129 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v128 - 8) + 16))(v126, v127, v128);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v126, 0, 1, v128);
        }
        uint64_t v141 = v128;
        uint64_t v142 = v622[6];
        uint64_t v143 = &__src[v142];
        v144 = (void *)((char *)v123 + v142);
        *uint64_t v143 = *v144;
        v143[1] = v144[1];
        uint64_t v145 = v622[7];
        uint64_t v602 = (char *)v123 + v145;
        uint64_t v607 = &__src[v145];
        uint64_t v146 = *(void (**)(char *, char *, uint64_t))(*(void *)(v128 - 8) + 16);
        swift_bridgeObjectRetain();
        uint64_t v147 = v607;
        uint64_t v608 = v146;
        v146(v147, v602, v128);
        uint64_t v148 = v622[8];
        v149 = &__src[v148];
        uint64_t v150 = (char *)v123 + v148;
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v123 + v148, 1, v141))
        {
          uint64_t v151 = sub_10017DF08(&qword_100E749B0);
          memcpy(v149, v150, *(void *)(*(void *)(v151 - 8) + 64));
        }
        else
        {
          v608(v149, v150, v141);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v149, 0, 1, v141);
        }
        __src[v622[9]] = *((unsigned char *)v123 + v622[9]);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v122, v123, *(void *)(*(void *)(v124 - 8) + 64));
      }
      uint64_t v176 = *(int *)(v108 + 24);
      uint64_t v177 = (char *)v106 + v176;
      v178 = (char *)v107 + v176;
      uint64_t v179 = type metadata accessor for DetailComponentAction();
      v92 = v669;
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v178, 1, v179))
      {
        uint64_t v180 = sub_10017DF08(&qword_100E73810);
        memcpy(v177, v178, *(void *)(*(void *)(v180 - 8) + 64));
      }
      else
      {
        uint64_t v181 = type metadata accessor for URL();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v181 - 8) + 16))(v177, v178, v181);
        uint64_t v182 = sub_10017DF08(&qword_100E66478);
        v177[*(int *)(v182 + 48)] = v178[*(int *)(v182 + 48)];
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v177, 0, 1, v179);
      }
      a3 = v665;
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v106, 0, 1, v108);
    }
    uint64_t v183 = *(int *)(sub_10017DF08(&qword_100E92130) + 48);
    v160 = (void *)((char *)v92 + v183);
    uint64_t v161 = (uint64_t)&v20[v183];
    uint64_t v184 = type metadata accessor for ConditionDetailPlatterViewModel(0);
    if (_s7Weather24LocationCompositionStateOwet_0(v161, 1, v184)) {
      goto LABEL_55;
    }
    uint64_t v186 = *(void *)v161;
    uint64_t v187 = *(void *)(v161 + 8);
    unsigned __int8 v188 = *(unsigned char *)(v161 + 16);
    sub_10018F6EC(*(void *)v161, v187, v188);
    uint64_t *v160 = v186;
    v160[1] = v187;
    *((unsigned char *)v160 + 16) = v188;
    v160[3] = *(void *)(v161 + 24);
    v160[4] = *(void *)(v161 + 32);
    uint64_t v623 = (int *)v184;
    uint64_t v189 = *(int *)(v184 + 24);
    uint64_t v190 = (char *)v160 + v189;
    uint64_t v191 = (const void *)(v161 + v189);
    uint64_t v192 = type metadata accessor for WeatherDescription();
    swift_bridgeObjectRetain();
    uint64_t v616 = v192;
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v191, 1, v192))
    {
      uint64_t v193 = sub_10017DF08(&qword_100E63758);
      memcpy(v190, v191, *(void *)(*(void *)(v193 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, const void *, uint64_t))(*(void *)(v192 - 8) + 16))(v190, v191, v192);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v190, 0, 1, v192);
    }
    unsigned __int8 v171 = v623;
    uint64_t v194 = v623[7];
    uint64_t v195 = (uint64_t *)((char *)v160 + v194);
    uint64_t v196 = (char *)(v161 + v194);
    uint64_t v197 = type metadata accessor for ConditionDetailPlatterViewModel.Body(0);
    __srcb = v196;
    v618 = v160;
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        *uint64_t v195 = *(void *)v196;
        v195[1] = *((void *)v196 + 1);
        swift_bridgeObjectRetain();
        goto LABEL_214;
      case 2u:
        ((void (*)(void *, char *, uint64_t))v645)(v195, v196, v652);
        goto LABEL_214;
      case 3u:
        uint64_t v206 = sub_10017DF08(&qword_100E73808);
        goto LABEL_83;
      case 4u:
        uint64_t v207 = v196;
        uint64_t v609 = v197;
        if (*((void *)v196 + 1))
        {
          *uint64_t v195 = *(void *)v196;
          v195[1] = *((void *)v196 + 1);
          v195[2] = *((void *)v196 + 2);
          v195[3] = *((void *)v196 + 3);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v229 = *((_OWORD *)v196 + 1);
          *(_OWORD *)uint64_t v195 = *(_OWORD *)v196;
          *((_OWORD *)v195 + 1) = v229;
        }
        uint64_t v230 = *(int *)(v655 + 20);
        uint64_t v588 = (void *)((char *)v195 + v230);
        v231 = &v196[v230];
        uint64_t v232 = type metadata accessor for NewsArticleComponentViewModel(0);
        __dstb = v195;
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          *uint64_t v588 = *(void *)v231;
          v588[1] = *((void *)v231 + 1);
          uint64_t v580 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
          uint64_t v233 = v580[5];
          uint64_t v234 = (char *)v588 + v233;
          uint64_t v571 = v231;
          uint64_t v235 = &v231[v233];
          uint64_t v236 = type metadata accessor for URL();
          swift_bridgeObjectRetain();
          uint64_t v598 = v161;
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v235, 1, v236))
          {
            uint64_t v237 = sub_10017DF08(&qword_100E749B0);
            memcpy(v234, v235, *(void *)(*(void *)(v237 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v236 - 8) + 16))(v234, v235, v236);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v234, 0, 1, v236);
          }
          uint64_t v274 = v236;
          uint64_t v275 = v580[6];
          v276 = (void *)((char *)v588 + v275);
          v277 = (void *)((char *)v571 + v275);
          void *v276 = *v277;
          v276[1] = v277[1];
          uint64_t v278 = v580[7];
          v566 = (char *)v571 + v278;
          v569 = (char *)v588 + v278;
          v279 = *(void (**)(char *, char *, uint64_t))(*(void *)(v236 - 8) + 16);
          swift_bridgeObjectRetain();
          v279(v569, v566, v236);
          uint64_t v280 = v580[8];
          v281 = (char *)v588 + v280;
          v282 = (char *)v571 + v280;
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v571 + v280, 1, v274))
          {
            uint64_t v283 = sub_10017DF08(&qword_100E749B0);
            memcpy(v281, v282, *(void *)(*(void *)(v283 - 8) + 64));
          }
          else
          {
            v279(v281, v282, v274);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v281, 0, 1, v274);
          }
          uint64_t v161 = v598;
          unsigned __int8 v171 = v623;
          uint64_t v197 = v609;
          *((unsigned char *)v588 + v580[9]) = *((unsigned char *)v571 + v580[9]);
          swift_storeEnumTagMultiPayload();
          uint64_t v195 = __dstb;
          uint64_t v207 = __srcb;
        }
        else
        {
          memcpy(v588, v231, *(void *)(*(void *)(v232 - 8) + 64));
          uint64_t v197 = v609;
        }
        uint64_t v291 = *(int *)(v655 + 24);
        uint64_t v292 = (char *)v195 + v291;
        v293 = &v207[v291];
        uint64_t v294 = type metadata accessor for DetailComponentAction();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v293, 1, v294))
        {
          uint64_t v295 = sub_10017DF08(&qword_100E73810);
          memcpy(v292, v293, *(void *)(*(void *)(v295 - 8) + 64));
        }
        else
        {
          uint64_t v296 = type metadata accessor for URL();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v296 - 8) + 16))(v292, v293, v296);
          uint64_t v297 = sub_10017DF08(&qword_100E66478);
          v292[*(int *)(v297 + 48)] = v293[*(int *)(v297 + 48)];
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v292, 0, 1, v294);
        }
        goto LABEL_214;
      case 5u:
        uint64_t v596 = v161;
        uint64_t v610 = v197;
        if (*((void *)v196 + 3))
        {
          uint64_t v208 = *(void *)v196;
          uint64_t v209 = *((void *)v196 + 1);
          char v210 = v196[16];
          sub_100190CC4(*(void *)__srcb, *((void *)__srcb + 1), __srcb[16]);
          *uint64_t v195 = v208;
          v195[1] = v209;
          *((unsigned char *)v195 + 16) = v210;
          v195[3] = *((void *)__srcb + 3);
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v238 = *((_OWORD *)v196 + 1);
          *(_OWORD *)uint64_t v195 = *(_OWORD *)v196;
          *((_OWORD *)v195 + 1) = v238;
        }
        uint64_t v239 = *((void *)__srcb + 4);
        uint64_t v240 = *((void *)__srcb + 5);
        uint64_t v241 = *((void *)__srcb + 6);
        uint64_t v242 = *((void *)__srcb + 7);
        uint64_t v244 = *((void *)__srcb + 8);
        uint64_t v243 = *((void *)__srcb + 9);
        uint64_t v245 = *((void *)__srcb + 10);
        char v589 = __srcb[89];
        unsigned __int8 v246 = __srcb[88];
        sub_10033A9E8(v239, v240, v241, v242, v244, v243, v245, v246, v589);
        v195[4] = v239;
        v195[5] = v240;
        v195[6] = v241;
        v195[7] = v242;
        v195[8] = v244;
        v195[9] = v243;
        v195[10] = v245;
        *((unsigned char *)v195 + 88) = v246;
        *((unsigned char *)v195 + 89) = v589;
        uint64_t v4 = v660;
        a3 = v665;
        v160 = v618;
        goto LABEL_213;
      case 6u:
        uint64_t v206 = type metadata accessor for PrecipitationTotalPlatterViewModel();
LABEL_83:
        uint64_t v198 = v206;
        uint64_t v199 = v206;
        goto LABEL_84;
      case 7u:
        uint64_t v585 = (void *)type metadata accessor for ConditionDetailDynamicContentIdentifier();
        int v211 = swift_getEnumCaseMultiPayload();
        if (v211 != 1)
        {
          if (v211)
          {
            memcpy(v195, v196, *(void *)(*(v585 - 1) + 64));
          }
          else
          {
            *uint64_t v195 = *(void *)v196;
            v195[1] = *((void *)v196 + 1);
            v195[2] = *((void *)v196 + 2);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_storeEnumTagMultiPayload();
          }
          goto LABEL_214;
        }
        *uint64_t v195 = *(void *)v196;
        __dstc = v195;
        v195[1] = *((void *)v196 + 1);
        uint64_t v256 = type metadata accessor for ConditionDetailMapViewModel();
        uint64_t v257 = *(int *)(v256 + 20);
        uint64_t v581 = (char *)v195 + v257;
        v258 = &v196[v257];
        swift_bridgeObjectRetain();
        ((void (*)(char *, char *, void *))v631)(v581, v258, v634);
        uint64_t v582 = (int *)v256;
        uint64_t v259 = *(int *)(v256 + 24);
        uint64_t v260 = (void *)((char *)v195 + v259);
        uint64_t v261 = &__srcb[v259];
        uint64_t v262 = type metadata accessor for WeatherData(0);
        uint64_t v596 = v161;
        uint64_t v610 = v197;
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v261, 1, v262))
        {
          uint64_t v263 = sub_10017DF08(&qword_100E63850);
          memcpy(v260, v261, *(void *)(*(void *)(v263 - 8) + 64));
          goto LABEL_212;
        }
        *uint64_t v260 = *(void *)v261;
        v260[1] = *((void *)v261 + 1);
        v570 = (int *)v262;
        uint64_t v573 = v260;
        uint64_t v303 = *(int *)(v262 + 20);
        v304 = (char *)v260 + v303;
        uint64_t v576 = v261;
        uint64_t v305 = &v261[v303];
        uint64_t v306 = type metadata accessor for Locale();
        swift_bridgeObjectRetain();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v305, 1, v306))
        {
          uint64_t v307 = sub_10017DF08(&qword_100E63730);
          memcpy(v304, v305, *(void *)(*(void *)(v307 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v306 - 8) + 16))(v304, v305, v306);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v304, 0, 1, v306);
        }
        uint64_t v318 = v570[6];
        uint64_t v567 = (char *)v260 + v318;
        v319 = &v576[v318];
        uint64_t v320 = type metadata accessor for WeatherDataModel();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v320 - 8) + 16))(v567, v319, v320);
        uint64_t v321 = v570[7];
        uint64_t v322 = (char *)v573 + v321;
        v323 = &v576[v321];
        uint64_t v324 = sub_10017DF08(&qword_100E63738);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v323, 1, v324))
        {
          uint64_t v325 = type metadata accessor for WeatherData.CachingState(0);
          memcpy(v322, v323, *(void *)(*(void *)(v325 - 8) + 64));
        }
        else
        {
          ((void (*)(char *, char *, uint64_t))v626)(v322, v323, v627);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v322, 0, 1, v324);
        }
        uint64_t v331 = v570[8];
        uint64_t v332 = (void *)((char *)v573 + v331);
        uint64_t v333 = &v576[v331];
        uint64_t v334 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
        int v335 = swift_getEnumCaseMultiPayload();
        if (v335 == 1)
        {
          uint64_t v344 = type metadata accessor for WeatherStatisticsModel();
          (*(void (**)(void *, char *, uint64_t))(*(void *)(v344 - 8) + 16))(v332, v333, v344);
          goto LABEL_152;
        }
        if (!v335)
        {
          *uint64_t v332 = *(void *)v333;
          v332[1] = *((void *)v333 + 1);
          swift_bridgeObjectRetain();
LABEL_152:
          swift_storeEnumTagMultiPayload();
          goto LABEL_154;
        }
        memcpy(v332, v333, *(void *)(*(void *)(v334 - 8) + 64));
LABEL_154:
        uint64_t v345 = (uint64_t)v570;
        uint64_t v346 = v570[9];
        uint64_t v347 = (char *)v573 + v346;
        uint64_t v348 = &v576[v346];
        uint64_t v349 = type metadata accessor for WeatherDataOverrides();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v348, 1, v349))
        {
          uint64_t v350 = sub_10017DF08(&qword_100E63740);
          memcpy(v347, v348, *(void *)(*(void *)(v350 - 8) + 64));
          uint64_t v195 = __dstc;
          uint64_t v351 = (uint64_t)v573;
        }
        else
        {
          uint64_t v577 = v347;
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v348, 1, v627))
          {
            uint64_t v352 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
            v353 = v347;
            memcpy(v347, v348, *(void *)(*(void *)(v352 - 8) + 64));
          }
          else
          {
            ((void (*)(char *, char *, uint64_t))v626)(v347, v348, v627);
            v353 = v347;
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v347, 0, 1, v627);
          }
          uint64_t v351 = (uint64_t)v573;
          uint64_t v358 = *(int *)(v349 + 20);
          uint64_t v568 = &v353[v358];
          v359 = &v348[v358];
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v359, 1, v627))
          {
            uint64_t v360 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
            memcpy(v568, v359, *(void *)(*(void *)(v360 - 8) + 64));
          }
          else
          {
            ((void (*)(char *, char *, uint64_t))v626)(v568, v359, v627);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v568, 0, 1, v627);
          }
          uint64_t v345 = (uint64_t)v570;
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v577, 0, 1, v349);
          uint64_t v195 = __dstc;
        }
        _s7Weather24LocationCompositionStateOwst_0(v351, 0, 1, v345);
LABEL_212:
        uint64_t v431 = v582[7];
        uint64_t v432 = (void *)((char *)v195 + v431);
        uint64_t v433 = &__srcb[v431];
        *uint64_t v432 = *(void *)v433;
        v432[1] = *((void *)v433 + 1);
        uint64_t v434 = v582[8];
        v574 = &__srcb[v434];
        v579 = (char *)__dstc + v434;
        uint64_t v435 = type metadata accessor for WeatherMapOverlayKind();
        uint64_t v436 = *(void (**)(char *, char *, uint64_t))(*(void *)(v435 - 8) + 16);
        swift_bridgeObjectRetain();
        v436(v579, v574, v435);
        *((unsigned char *)__dstc + v582[9]) = __srcb[v582[9]];
        swift_storeEnumTagMultiPayload();
        uint64_t v4 = v660;
LABEL_213:
        uint64_t v161 = v596;
        unsigned __int8 v171 = v623;
        uint64_t v197 = v610;
LABEL_214:
        swift_storeEnumTagMultiPayload();
        uint64_t v437 = v171[8];
        uint64_t v368 = (uint64_t *)((char *)v160 + v437);
        long long v438 = (char *)(v161 + v437);
        if (_s7Weather24LocationCompositionStateOwet_0(v161 + v437, 1, v197))
        {
          uint64_t v439 = sub_10017DF08(&qword_100E73818);
          memcpy(v368, v438, *(void *)(*(void *)(v439 - 8) + 64));
          uint64_t v371 = (uint64_t)v618;
          goto LABEL_230;
        }
        break;
      default:
        uint64_t v198 = v616;
        uint64_t v199 = v616;
LABEL_84:
        (*(void (**)(void *, char *, uint64_t))(*(void *)(v199 - 8) + 16))(v195, v196, v198);
        goto LABEL_214;
    }
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        *uint64_t v368 = *(void *)v438;
        v368[1] = *((void *)v438 + 1);
        swift_bridgeObjectRetain();
        goto LABEL_228;
      case 2u:
        ((void (*)(void *, char *, uint64_t))v645)(v368, v438, v652);
        goto LABEL_228;
      case 3u:
        uint64_t v442 = sub_10017DF08(&qword_100E73808);
        goto LABEL_226;
      case 4u:
        if (*((void *)v438 + 1))
        {
          *uint64_t v368 = *(void *)v438;
          v368[1] = *((void *)v438 + 1);
          v368[2] = *((void *)v438 + 2);
          v368[3] = *((void *)v438 + 3);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v449 = *((_OWORD *)v438 + 1);
          *(_OWORD *)uint64_t v368 = *(_OWORD *)v438;
          *((_OWORD *)v368 + 1) = v449;
        }
        uint64_t v450 = *(int *)(v655 + 20);
        uint64_t v666 = v368;
        uint64_t v451 = (void *)((char *)v368 + v450);
        uint64_t v452 = &v438[v450];
        uint64_t v453 = type metadata accessor for NewsArticleComponentViewModel(0);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          *uint64_t v451 = *(void *)v452;
          v451[1] = *((void *)v452 + 1);
          v663 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
          uint64_t v454 = v663[5];
          v641 = (char *)v451 + v454;
          v649 = v451;
          v455 = &v452[v454];
          uint64_t v456 = type metadata accessor for URL();
          swift_bridgeObjectRetain();
          uint64_t v601 = v161;
          uint64_t v612 = v197;
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v455, 1, v456))
          {
            uint64_t v457 = sub_10017DF08(&qword_100E749B0);
            memcpy(v641, v455, *(void *)(*(void *)(v457 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v456 - 8) + 16))(v641, v455, v456);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v641, 0, 1, v456);
          }
          uint64_t v477 = v663[6];
          uint64_t v478 = (void *)((char *)v649 + v477);
          uint64_t v479 = &v452[v477];
          *uint64_t v478 = *(void *)v479;
          v478[1] = *((void *)v479 + 1);
          uint64_t v480 = v663[7];
          v642 = (char *)v649 + v480;
          v636 = &v452[v480];
          v481 = *(void (**)(char *, char *, uint64_t))(*(void *)(v456 - 8) + 16);
          swift_bridgeObjectRetain();
          v481(v642, v636, v456);
          uint64_t v482 = v663[8];
          uint64_t v483 = (char *)v649 + v482;
          uint64_t v484 = &v452[v482];
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v452[v482], 1, v456))
          {
            uint64_t v485 = sub_10017DF08(&qword_100E749B0);
            memcpy(v483, v484, *(void *)(*(void *)(v485 - 8) + 64));
          }
          else
          {
            v481(v483, v484, v456);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v483, 0, 1, v456);
          }
          uint64_t v161 = v601;
          unsigned __int8 v171 = v623;
          uint64_t v197 = v612;
          *((unsigned char *)v649 + v663[9]) = v452[v663[9]];
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(v451, v452, *(void *)(*(void *)(v453 - 8) + 64));
        }
        uint64_t v486 = *(int *)(v655 + 24);
        v487 = (char *)v666 + v486;
        uint64_t v488 = &v438[v486];
        uint64_t v489 = type metadata accessor for DetailComponentAction();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v488, 1, v489))
        {
          uint64_t v490 = sub_10017DF08(&qword_100E73810);
          memcpy(v487, v488, *(void *)(*(void *)(v490 - 8) + 64));
        }
        else
        {
          uint64_t v491 = type metadata accessor for URL();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v491 - 8) + 16))(v487, v488, v491);
          uint64_t v492 = sub_10017DF08(&qword_100E66478);
          v487[*(int *)(v492 + 48)] = v488[*(int *)(v492 + 48)];
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v487, 0, 1, v489);
        }
        uint64_t v371 = (uint64_t)v618;
        uint64_t v368 = v666;
        goto LABEL_229;
      case 5u:
        uint64_t v600 = v161;
        uint64_t v611 = v197;
        if (*((void *)v438 + 3))
        {
          uint64_t v443 = *(void *)v438;
          uint64_t v444 = *((void *)v438 + 1);
          char v445 = v438[16];
          sub_100190CC4(*(void *)v438, v444, v445);
          *uint64_t v368 = v443;
          v368[1] = v444;
          *((unsigned char *)v368 + 16) = v445;
          v368[3] = *((void *)v438 + 3);
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v458 = *((_OWORD *)v438 + 1);
          *(_OWORD *)uint64_t v368 = *(_OWORD *)v438;
          *((_OWORD *)v368 + 1) = v458;
        }
        uint64_t v459 = *((void *)v438 + 4);
        uint64_t v460 = *((void *)v438 + 5);
        uint64_t v461 = *((void *)v438 + 6);
        uint64_t v462 = *((void *)v438 + 7);
        uint64_t v463 = *((void *)v438 + 8);
        uint64_t v464 = *((void *)v438 + 9);
        uint64_t v465 = *((void *)v438 + 10);
        char v658 = v438[89];
        uint64_t v466 = v438[88];
        sub_10033A9E8(v459, v460, v461, v462, v463, v464, v465, v466, v658);
        v368[4] = v459;
        v368[5] = v460;
        v368[6] = v461;
        v368[7] = v462;
        v368[8] = v463;
        v368[9] = v464;
        v368[10] = v465;
        *((unsigned char *)v368 + 88) = v466;
        *((unsigned char *)v368 + 89) = v658;
        uint64_t v4 = v660;
        a3 = v665;
        goto LABEL_300;
      case 6u:
        uint64_t v442 = type metadata accessor for PrecipitationTotalPlatterViewModel();
LABEL_226:
        uint64_t v440 = v442;
        uint64_t v441 = v442;
        goto LABEL_227;
      case 7u:
        uint64_t v447 = type metadata accessor for ConditionDetailDynamicContentIdentifier();
        int v448 = swift_getEnumCaseMultiPayload();
        if (v448 != 1)
        {
          if (v448)
          {
            memcpy(v368, v438, *(void *)(*(void *)(v447 - 8) + 64));
          }
          else
          {
            *uint64_t v368 = *(void *)v438;
            v368[1] = *((void *)v438 + 1);
            v368[2] = *((void *)v438 + 2);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_storeEnumTagMultiPayload();
          }
LABEL_228:
          uint64_t v371 = (uint64_t)v618;
          goto LABEL_229;
        }
        *uint64_t v368 = *(void *)v438;
        v368[1] = *((void *)v438 + 1);
        uint64_t v467 = type metadata accessor for ConditionDetailMapViewModel();
        uint64_t v468 = *(int *)(v467 + 20);
        v469 = (char *)v368 + v468;
        uint64_t v667 = v368;
        uint64_t v470 = &v438[v468];
        swift_bridgeObjectRetain();
        uint64_t v471 = v667;
        ((void (*)(char *, char *, void *))v631)(v469, v470, v634);
        uint64_t v659 = (int *)v467;
        uint64_t v472 = *(int *)(v467 + 24);
        v473 = (void *)((char *)v667 + v472);
        uint64_t v474 = &v438[v472];
        uint64_t v475 = type metadata accessor for WeatherData(0);
        uint64_t v600 = v161;
        uint64_t v611 = v197;
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v474, 1, v475))
        {
          uint64_t v476 = sub_10017DF08(&qword_100E63850);
          memcpy(v473, v474, *(void *)(*(void *)(v476 - 8) + 64));
          goto LABEL_299;
        }
        void *v473 = *(void *)v474;
        v473[1] = *((void *)v474 + 1);
        v643 = (int *)v475;
        v650 = v474;
        uint64_t v493 = *(int *)(v475 + 20);
        uint64_t v494 = (char *)v473 + v493;
        uint64_t v495 = &v474[v493];
        uint64_t v496 = type metadata accessor for Locale();
        swift_bridgeObjectRetain();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v495, 1, v496))
        {
          uint64_t v497 = sub_10017DF08(&qword_100E63730);
          memcpy(v494, v495, *(void *)(*(void *)(v497 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v496 - 8) + 16))(v494, v495, v496);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v494, 0, 1, v496);
        }
        uint64_t v508 = v643[6];
        v509 = (char *)v473 + v508;
        v510 = (char *)v650 + v508;
        uint64_t v511 = type metadata accessor for WeatherDataModel();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v511 - 8) + 16))(v509, v510, v511);
        uint64_t v512 = v643[7];
        uint64_t v513 = (char *)v473 + v512;
        v514 = (char *)v650 + v512;
        uint64_t v515 = sub_10017DF08(&qword_100E63738);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v514, 1, v515))
        {
          uint64_t v516 = type metadata accessor for WeatherData.CachingState(0);
          memcpy(v513, v514, *(void *)(*(void *)(v516 - 8) + 64));
        }
        else
        {
          ((void (*)(char *, char *, uint64_t))v626)(v513, v514, v627);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v513, 0, 1, v515);
        }
        uint64_t v522 = v643[8];
        uint64_t v523 = (void *)((char *)v473 + v522);
        uint64_t v524 = (void *)((char *)v650 + v522);
        uint64_t v525 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
        int v526 = swift_getEnumCaseMultiPayload();
        if (v526 == 1)
        {
          uint64_t v534 = type metadata accessor for WeatherStatisticsModel();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v534 - 8) + 16))(v523, v524, v534);
        }
        else
        {
          if (v526)
          {
            memcpy(v523, v524, *(void *)(*(void *)(v525 - 8) + 64));
            goto LABEL_281;
          }
          *uint64_t v523 = *v524;
          v523[1] = v524[1];
          swift_bridgeObjectRetain();
        }
        swift_storeEnumTagMultiPayload();
LABEL_281:
        uint64_t v535 = v643[9];
        v536 = (char *)v473 + v535;
        uint64_t v537 = (char *)v650 + v535;
        uint64_t v538 = type metadata accessor for WeatherDataOverrides();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v537, 1, v538))
        {
          uint64_t v539 = sub_10017DF08(&qword_100E63740);
          memcpy(v536, v537, *(void *)(*(void *)(v539 - 8) + 64));
        }
        else
        {
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v537, 1, v627))
          {
            uint64_t v540 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
            memcpy(v536, v537, *(void *)(*(void *)(v540 - 8) + 64));
          }
          else
          {
            ((void (*)(char *, char *, uint64_t))v626)(v536, v537, v627);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v536, 0, 1, v627);
          }
          uint64_t v554 = *(int *)(v538 + 20);
          uint64_t v637 = &v536[v554];
          uint64_t v555 = &v537[v554];
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v555, 1, v627))
          {
            uint64_t v556 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
            memcpy(v637, v555, *(void *)(*(void *)(v556 - 8) + 64));
          }
          else
          {
            ((void (*)(char *, char *, uint64_t))v626)(v637, v555, v627);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v637, 0, 1, v627);
          }
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v536, 0, 1, v538);
        }
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v473, 0, 1, (uint64_t)v643);
        uint64_t v471 = v667;
LABEL_299:
        uint64_t v557 = v659[7];
        uint64_t v558 = (void *)((char *)v471 + v557);
        v559 = &v438[v557];
        *uint64_t v558 = *(void *)v559;
        v558[1] = *((void *)v559 + 1);
        uint64_t v560 = v659[8];
        uint64_t v561 = (uint64_t)v471 + v560;
        uint64_t v562 = &v438[v560];
        uint64_t v563 = type metadata accessor for WeatherMapOverlayKind();
        uint64_t v564 = *(void (**)(uint64_t, char *, uint64_t))(*(void *)(v563 - 8) + 16);
        swift_bridgeObjectRetain();
        v565 = v562;
        uint64_t v368 = v667;
        v564(v561, v565, v563);
        *((unsigned char *)v667 + v659[9]) = v438[v659[9]];
        swift_storeEnumTagMultiPayload();
        uint64_t v4 = v660;
LABEL_300:
        uint64_t v371 = (uint64_t)v618;
        uint64_t v161 = v600;
        unsigned __int8 v171 = v623;
        uint64_t v197 = v611;
        goto LABEL_229;
      default:
        uint64_t v440 = v616;
        uint64_t v441 = v616;
LABEL_227:
        (*(void (**)(void *, char *, uint64_t))(*(void *)(v441 - 8) + 16))(v368, v438, v440);
        goto LABEL_228;
    }
  }
  if (!EnumCaseMultiPayload)
  {
    uint64_t v654 = v5;
    v664 = a3;
    *uint64_t v19 = *(void *)v20;
    v19[1] = *((void *)v20 + 1);
    v19[2] = *((void *)v20 + 2);
    v19[3] = *((void *)v20 + 3);
    v19[4] = *((void *)v20 + 4);
    v19[5] = *((void *)v20 + 5);
    uint64_t v23 = (int *)_s11NormalModelVMa();
    uint64_t v24 = v23[7];
    uint64_t v668 = (char *)v19;
    uint64_t v25 = (char *)v19 + v24;
    v26 = &v20[v24];
    uint64_t v27 = type metadata accessor for Date();
    v28 = *(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v28(v25, v26, v27);
    v28(&v668[v23[8]], &v20[v23[8]], v27);
    v624 = (void (*)(void *, char *, uint64_t))v28;
    uint64_t v625 = v27;
    v28(&v668[v23[9]], &v20[v23[9]], v27);
    uint64_t v29 = v23[10];
    uint64_t v30 = &v668[v29];
    v31 = &v20[v29];
    uint64_t v32 = type metadata accessor for TimeZone();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 16))(v30, v31, v32);
    uint64_t v33 = v23[11];
    uint64_t v34 = &v668[v33];
    v35 = &v20[v33];
    uint64_t v36 = type metadata accessor for AttributedString();
    uint64_t v638 = *(void (**)(char *, char *))(*(void *)(v36 - 8) + 16);
    uint64_t v644 = v36;
    v638(v34, v35);
    *(void *)&v668[v23[12]] = *(void *)&v20[v23[12]];
    uint64_t v37 = v23[13];
    v38 = &v668[v37];
    v39 = &v20[v37];
    uint64_t v40 = type metadata accessor for SunriseSunsetDetailChartViewModel();
    v41 = *(void (**)(char *, char *, uint64_t))(*(void *)(v40 - 8) + 16);
    swift_bridgeObjectRetain();
    uint64_t v42 = v40;
    uint64_t v43 = v668;
    v41(v38, v39, v42);
    uint64_t v44 = v23[14];
    v45 = &v668[v44];
    uint64_t v46 = &v20[v44];
    uint64_t v47 = type metadata accessor for Location();
    v628 = *(void (**)(char *, char *))(*(void *)(v47 - 8) + 16);
    uint64_t v630 = (void *)v47;
    v628(v45, v46);
    uint64_t v48 = v23[15];
    v49 = &v668[v48];
    uint64_t v50 = &v20[v48];
    uint64_t v51 = type metadata accessor for SunEvents();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v51 - 8) + 16))(v49, v50, v51);
    uint64_t v52 = v23[16];
    v53 = &v668[v52];
    uint64_t v54 = &v20[v52];
    uint64_t v55 = type metadata accessor for OverviewTableViewModel();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v55 - 8) + 16))(v53, v54, v55);
    uint64_t v56 = v23[17];
    v57 = &v668[v56];
    uint64_t v58 = &v20[v56];
    uint64_t v59 = type metadata accessor for DaylightStringBuilder();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v59 - 8) + 16))(v57, v58, v59);
    uint64_t v60 = v23[18];
    v61 = &v668[v60];
    uint64_t v62 = &v20[v60];
    uint64_t v63 = type metadata accessor for DetailComponentContainerViewModel();
    uint64_t v651 = v63;
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v62, 1, v63))
    {
      uint64_t v64 = sub_10017DF08(&qword_100E66E28);
      memcpy(v61, v62, *(void *)(*(void *)(v64 - 8) + 64));
      a3 = v664;
      uint64_t v5 = v654;
    }
    else
    {
      if (v62[1])
      {
        char *v61 = *v62;
        v61[1] = v62[1];
        v61[2] = v62[2];
        v61[3] = v62[3];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v110 = *((_OWORD *)v62 + 1);
        *(_OWORD *)v61 = *(_OWORD *)v62;
        *((_OWORD *)v61 + 1) = v110;
      }
      uint64_t v5 = v654;
      uint64_t v111 = *(int *)(v63 + 20);
      uint64_t v112 = (void *)((char *)v61 + v111);
      uint64_t v113 = (void *)((char *)v62 + v111);
      uint64_t v114 = type metadata accessor for NewsArticleComponentViewModel(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        *uint64_t v112 = *v113;
        v112[1] = v113[1];
        uint64_t v656 = v112;
        v661 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
        uint64_t v115 = v661[5];
        v116 = (char *)v112 + v115;
        v117 = (char *)v113 + v115;
        uint64_t v118 = type metadata accessor for URL();
        swift_bridgeObjectRetain();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v117, 1, v118))
        {
          uint64_t v119 = sub_10017DF08(&qword_100E749B0);
          memcpy(v116, v117, *(void *)(*(void *)(v119 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v118 - 8) + 16))(v116, v117, v118);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v116, 0, 1, v118);
        }
        uint64_t v130 = v118;
        uint64_t v131 = v661[6];
        v132 = (void *)((char *)v656 + v131);
        v133 = (void *)((char *)v113 + v131);
        void *v132 = *v133;
        v132[1] = v133[1];
        uint64_t v134 = v661[7];
        uint64_t v606 = (char *)v113 + v134;
        v613 = (char *)v656 + v134;
        uint64_t v135 = *(void (**)(char *, char *, uint64_t))(*(void *)(v118 - 8) + 16);
        swift_bridgeObjectRetain();
        uint64_t v136 = v613;
        v614 = v135;
        v135(v136, v606, v118);
        uint64_t v137 = v661[8];
        v138 = (char *)v656 + v137;
        uint64_t v139 = (char *)v113 + v137;
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v113 + v137, 1, v130))
        {
          uint64_t v140 = sub_10017DF08(&qword_100E749B0);
          memcpy(v138, v139, *(void *)(*(void *)(v140 - 8) + 64));
        }
        else
        {
          v614(v138, v139, v130);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v138, 0, 1, v130);
        }
        *((unsigned char *)v656 + v661[9]) = *((unsigned char *)v113 + v661[9]);
        swift_storeEnumTagMultiPayload();
        uint64_t v43 = v668;
      }
      else
      {
        memcpy(v112, v113, *(void *)(*(void *)(v114 - 8) + 64));
      }
      uint64_t v152 = *(int *)(v63 + 24);
      v153 = (char *)v61 + v152;
      uint64_t v154 = (char *)v62 + v152;
      uint64_t v155 = type metadata accessor for DetailComponentAction();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v154, 1, v155))
      {
        uint64_t v156 = sub_10017DF08(&qword_100E73810);
        memcpy(v153, v154, *(void *)(*(void *)(v156 - 8) + 64));
      }
      else
      {
        uint64_t v157 = type metadata accessor for URL();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v157 - 8) + 16))(v153, v154, v157);
        uint64_t v158 = sub_10017DF08(&qword_100E66478);
        v153[*(int *)(v158 + 48)] = v154[*(int *)(v158 + 48)];
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v153, 0, 1, v155);
      }
      a3 = v664;
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v61, 0, 1, v63);
    }
    uint64_t v159 = *(int *)(sub_10017DF08(&qword_100E92128) + 48);
    v160 = (void *)((char *)v43 + v159);
    uint64_t v161 = (uint64_t)&v20[v159];
    uint64_t v162 = type metadata accessor for ConditionDetailPlatterViewModel(0);
    if (!_s7Weather24LocationCompositionStateOwet_0(v161, 1, v162))
    {
      uint64_t v163 = *(void *)v161;
      uint64_t v164 = *(void *)(v161 + 8);
      unsigned __int8 v165 = *(unsigned char *)(v161 + 16);
      sub_10018F6EC(*(void *)v161, v164, v165);
      uint64_t *v160 = v163;
      v160[1] = v164;
      *((unsigned char *)v160 + 16) = v165;
      v160[3] = *(void *)(v161 + 24);
      v160[4] = *(void *)(v161 + 32);
      v662 = (int *)v162;
      uint64_t v166 = *(int *)(v162 + 24);
      uint64_t v167 = (char *)v160 + v166;
      uint64_t v168 = (const void *)(v161 + v166);
      uint64_t v169 = type metadata accessor for WeatherDescription();
      swift_bridgeObjectRetain();
      uint64_t v615 = v169;
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v168, 1, v169))
      {
        uint64_t v170 = sub_10017DF08(&qword_100E63758);
        memcpy(v167, v168, *(void *)(*(void *)(v170 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, const void *, uint64_t))(*(void *)(v169 - 8) + 16))(v167, v168, v169);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v167, 0, 1, v169);
      }
      unsigned __int8 v171 = v662;
      uint64_t v172 = v662[7];
      uint64_t v173 = (uint64_t *)((char *)v160 + v172);
      v657 = (uint64_t *)(v161 + v172);
      uint64_t v617 = type metadata accessor for ConditionDetailPlatterViewModel.Body(0);
      __srca = v160;
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          *uint64_t v173 = *v657;
          v173[1] = v657[1];
          swift_bridgeObjectRetain();
          goto LABEL_71;
        case 2u:
          ((void (*)(uint64_t *, uint64_t *, uint64_t))v638)(v173, v657, v644);
          goto LABEL_71;
        case 3u:
          uint64_t v200 = sub_10017DF08(&qword_100E73808);
          goto LABEL_69;
        case 4u:
          v201 = v657;
          if (v657[1])
          {
            *uint64_t v173 = *v657;
            v173[1] = v657[1];
            v173[2] = v657[2];
            v173[3] = v657[3];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            long long v212 = *((_OWORD *)v657 + 1);
            *(_OWORD *)uint64_t v173 = *(_OWORD *)v657;
            *((_OWORD *)v173 + 1) = v212;
          }
          uint64_t v213 = *(int *)(v651 + 20);
          __dsta = (uint64_t *)((char *)v173 + v213);
          uint64_t v214 = (uint64_t *)((char *)v657 + v213);
          uint64_t v215 = type metadata accessor for NewsArticleComponentViewModel(0);
          v597 = v173;
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            void *__dsta = *v214;
            __dsta[1] = v214[1];
            int v586 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
            uint64_t v216 = v586[5];
            int v217 = (char *)__dsta + v216;
            uint64_t v218 = (char *)v214 + v216;
            uint64_t v219 = type metadata accessor for URL();
            swift_bridgeObjectRetain();
            uint64_t v604 = v161;
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v218, 1, v219))
            {
              uint64_t v220 = sub_10017DF08(&qword_100E749B0);
              memcpy(v217, v218, *(void *)(*(void *)(v220 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v219 - 8) + 16))(v217, v218, v219);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v217, 0, 1, v219);
            }
            uint64_t v264 = v586[6];
            uint64_t v265 = (void *)((char *)__dsta + v264);
            uint64_t v266 = (void *)((char *)v214 + v264);
            *uint64_t v265 = *v266;
            v265[1] = v266[1];
            uint64_t v267 = v586[7];
            uint64_t v572 = (char *)__dsta + v267;
            uint64_t v268 = (char *)v214 + v267;
            uint64_t v269 = *(void (**)(char *, char *, uint64_t))(*(void *)(v219 - 8) + 16);
            swift_bridgeObjectRetain();
            v269(v572, v268, v219);
            uint64_t v270 = v586[8];
            char v271 = (char *)__dsta + v270;
            unsigned __int8 v272 = (char *)v214 + v270;
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v214 + v270, 1, v219))
            {
              uint64_t v273 = sub_10017DF08(&qword_100E749B0);
              memcpy(v271, v272, *(void *)(*(void *)(v273 - 8) + 64));
            }
            else
            {
              v269(v271, v272, v219);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v271, 0, 1, v219);
            }
            uint64_t v173 = v597;
            uint64_t v161 = v604;
            unsigned __int8 v171 = v662;
            *((unsigned char *)__dsta + v586[9]) = *((unsigned char *)v214 + v586[9]);
            swift_storeEnumTagMultiPayload();
            v201 = v657;
          }
          else
          {
            memcpy(__dsta, v214, *(void *)(*(void *)(v215 - 8) + 64));
          }
          uint64_t v284 = *(int *)(v651 + 24);
          uint64_t v285 = (char *)v173 + v284;
          v286 = (char *)v201 + v284;
          uint64_t v287 = type metadata accessor for DetailComponentAction();
          uint64_t v197 = v617;
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v286, 1, v287))
          {
            uint64_t v288 = sub_10017DF08(&qword_100E73810);
            memcpy(v285, v286, *(void *)(*(void *)(v288 - 8) + 64));
          }
          else
          {
            uint64_t v289 = type metadata accessor for URL();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v289 - 8) + 16))(v285, v286, v289);
            uint64_t v290 = sub_10017DF08(&qword_100E66478);
            v285[*(int *)(v290 + 48)] = v286[*(int *)(v290 + 48)];
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v285, 0, 1, v287);
          }
          a3 = v664;
          goto LABEL_169;
        case 5u:
          uint64_t v603 = v161;
          if (v657[3])
          {
            uint64_t v203 = *v657;
            uint64_t v202 = v657[1];
            char v204 = *((unsigned char *)v657 + 16);
            sub_100190CC4(*v657, v202, v204);
            *uint64_t v173 = v203;
            v173[1] = v202;
            *((unsigned char *)v173 + 16) = v204;
            v173[3] = v657[3];
            swift_bridgeObjectRetain();
          }
          else
          {
            long long v221 = *((_OWORD *)v657 + 1);
            *(_OWORD *)uint64_t v173 = *(_OWORD *)v657;
            *((_OWORD *)v173 + 1) = v221;
          }
          uint64_t v222 = v657[5];
          uint64_t v587 = (void *)v657[4];
          uint64_t v223 = v657[6];
          uint64_t v224 = v657[7];
          uint64_t v226 = v657[8];
          uint64_t v225 = v657[9];
          uint64_t v227 = v657[10];
          char __dstd = *((unsigned char *)v657 + 89);
          unsigned __int8 v228 = *((unsigned char *)v657 + 88);
          sub_10033A9E8((uint64_t)v587, v222, v223, v224, v226, v225, v227, v228, __dstd);
          v173[4] = (uint64_t)v587;
          v173[5] = v222;
          v173[6] = v223;
          v173[7] = v224;
          v173[8] = v226;
          v173[9] = v225;
          v173[10] = v227;
          *((unsigned char *)v173 + 88) = v228;
          *((unsigned char *)v173 + 89) = __dstd;
          a3 = v664;
          v160 = __srca;
          goto LABEL_168;
        case 6u:
          uint64_t v200 = type metadata accessor for PrecipitationTotalPlatterViewModel();
LABEL_69:
          uint64_t v174 = v200;
          uint64_t v175 = v200;
          goto LABEL_70;
        case 7u:
          __dst = (void *)type metadata accessor for ConditionDetailDynamicContentIdentifier();
          int v205 = swift_getEnumCaseMultiPayload();
          if (v205 != 1)
          {
            if (v205)
            {
              memcpy(v173, v657, *(void *)(*(__dst - 1) + 64));
            }
            else
            {
              *uint64_t v173 = *v657;
              v173[1] = v657[1];
              v173[2] = v657[2];
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_storeEnumTagMultiPayload();
            }
LABEL_71:
            uint64_t v197 = v617;
LABEL_169:
            swift_storeEnumTagMultiPayload();
            uint64_t v367 = v171[8];
            uint64_t v368 = (uint64_t *)((char *)v160 + v367);
            v369 = (char *)(v161 + v367);
            if (_s7Weather24LocationCompositionStateOwet_0(v161 + v367, 1, v197))
            {
              uint64_t v370 = sub_10017DF08(&qword_100E73818);
              memcpy(v368, v369, *(void *)(*(void *)(v370 - 8) + 64));
              uint64_t v371 = (uint64_t)__srca;
LABEL_230:
              *(unsigned char *)(v371 + v171[9]) = *(unsigned char *)(v161 + v171[9]);
              *(unsigned char *)(v371 + v171[10]) = *(unsigned char *)(v161 + v171[10]);
              _s7Weather24LocationCompositionStateOwst_0(v371, 0, 1, (uint64_t)v171);
              goto LABEL_231;
            }
            switch(swift_getEnumCaseMultiPayload())
            {
              case 1u:
                *uint64_t v368 = *(void *)v369;
                v368[1] = *((void *)v369 + 1);
                swift_bridgeObjectRetain();
                goto LABEL_183;
              case 2u:
                ((void (*)(void *, char *, uint64_t))v638)(v368, v369, v644);
                goto LABEL_183;
              case 3u:
                uint64_t v374 = sub_10017DF08(&qword_100E73808);
                goto LABEL_181;
              case 4u:
                if (*((void *)v369 + 1))
                {
                  *uint64_t v368 = *(void *)v369;
                  v368[1] = *((void *)v369 + 1);
                  v368[2] = *((void *)v369 + 2);
                  v368[3] = *((void *)v369 + 3);
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                }
                else
                {
                  long long v380 = *((_OWORD *)v369 + 1);
                  *(_OWORD *)uint64_t v368 = *(_OWORD *)v369;
                  *((_OWORD *)v368 + 1) = v380;
                }
                uint64_t v381 = *(int *)(v651 + 20);
                v646 = v368;
                uint64_t v382 = (void *)((char *)v368 + v381);
                v383 = &v369[v381];
                uint64_t v384 = type metadata accessor for NewsArticleComponentViewModel(0);
                if (swift_getEnumCaseMultiPayload() == 1)
                {
                  *uint64_t v382 = *(void *)v383;
                  v382[1] = *((void *)v383 + 1);
                  v639 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
                  uint64_t v385 = v639[5];
                  uint64_t v632 = (char *)v382 + v385;
                  uint64_t v386 = &v383[v385];
                  uint64_t v387 = type metadata accessor for URL();
                  swift_bridgeObjectRetain();
                  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v386, 1, v387))
                  {
                    uint64_t v388 = sub_10017DF08(&qword_100E749B0);
                    memcpy(v632, v386, *(void *)(*(void *)(v388 - 8) + 64));
                  }
                  else
                  {
                    (*(void (**)(char *, char *, uint64_t))(*(void *)(v387 - 8) + 16))(v632, v386, v387);
                    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v632, 0, 1, v387);
                  }
                  uint64_t v408 = v639[6];
                  v409 = (void *)((char *)v382 + v408);
                  v410 = &v383[v408];
                  void *v409 = *(void *)v410;
                  v409[1] = *((void *)v410 + 1);
                  uint64_t v411 = v639[7];
                  v412 = (char *)v382 + v411;
                  uint64_t v633 = v382;
                  uint64_t v413 = &v383[v411];
                  uint64_t v414 = *(void (**)(char *, char *, uint64_t))(*(void *)(v387 - 8) + 16);
                  swift_bridgeObjectRetain();
                  v414(v412, v413, v387);
                  uint64_t v415 = v639[8];
                  uint64_t v416 = &v633[v415];
                  uint64_t v417 = &v383[v415];
                  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v383[v415], 1, v387))
                  {
                    uint64_t v418 = sub_10017DF08(&qword_100E749B0);
                    memcpy(v416, v417, *(void *)(*(void *)(v418 - 8) + 64));
                  }
                  else
                  {
                    v414(v416, v417, v387);
                    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v416, 0, 1, v387);
                  }
                  unsigned __int8 v171 = v662;
                  uint64_t v197 = v617;
                  v633[v639[9]] = v383[v639[9]];
                  swift_storeEnumTagMultiPayload();
                }
                else
                {
                  memcpy(v382, v383, *(void *)(*(void *)(v384 - 8) + 64));
                }
                uint64_t v419 = *(int *)(v651 + 24);
                uint64_t v420 = (char *)v646 + v419;
                uint64_t v421 = &v369[v419];
                uint64_t v422 = type metadata accessor for DetailComponentAction();
                if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v421, 1, v422))
                {
                  uint64_t v423 = sub_10017DF08(&qword_100E73810);
                  memcpy(v420, v421, *(void *)(*(void *)(v423 - 8) + 64));
                }
                else
                {
                  uint64_t v424 = type metadata accessor for URL();
                  (*(void (**)(char *, char *, uint64_t))(*(void *)(v424 - 8) + 16))(v420, v421, v424);
                  uint64_t v425 = sub_10017DF08(&qword_100E66478);
                  v420[*(int *)(v425 + 48)] = v421[*(int *)(v425 + 48)];
                  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v420, 0, 1, v422);
                }
                a3 = v664;
                uint64_t v371 = (uint64_t)__srca;
                uint64_t v368 = v646;
                goto LABEL_229;
              case 5u:
                uint64_t v605 = v161;
                if (*((void *)v369 + 3))
                {
                  uint64_t v375 = *(void *)v369;
                  uint64_t v376 = *((void *)v369 + 1);
                  char v377 = v369[16];
                  sub_100190CC4(*(void *)v369, v376, v377);
                  *uint64_t v368 = v375;
                  v368[1] = v376;
                  *((unsigned char *)v368 + 16) = v377;
                  v368[3] = *((void *)v369 + 3);
                  swift_bridgeObjectRetain();
                }
                else
                {
                  long long v389 = *((_OWORD *)v369 + 1);
                  *(_OWORD *)uint64_t v368 = *(_OWORD *)v369;
                  *((_OWORD *)v368 + 1) = v389;
                }
                uint64_t v390 = *((void *)v369 + 4);
                uint64_t v391 = *((void *)v369 + 5);
                uint64_t v392 = *((void *)v369 + 7);
                uint64_t v647 = *((void *)v369 + 6);
                uint64_t v393 = *((void *)v369 + 8);
                uint64_t v394 = *((void *)v369 + 9);
                uint64_t v395 = *((void *)v369 + 10);
                char v653 = v369[89];
                uint64_t v396 = v369[88];
                sub_10033A9E8(v390, v391, v647, v392, v393, v394, v395, v396, v653);
                v368[4] = v390;
                v368[5] = v391;
                v368[6] = v647;
                v368[7] = v392;
                v368[8] = v393;
                v368[9] = v394;
                v368[10] = v395;
                *((unsigned char *)v368 + 88) = v396;
                *((unsigned char *)v368 + 89) = v653;
                goto LABEL_292;
              case 6u:
                uint64_t v374 = type metadata accessor for PrecipitationTotalPlatterViewModel();
LABEL_181:
                uint64_t v372 = v374;
                uint64_t v373 = v374;
                goto LABEL_182;
              case 7u:
                uint64_t v378 = type metadata accessor for ConditionDetailDynamicContentIdentifier();
                int v379 = swift_getEnumCaseMultiPayload();
                if (v379 != 1)
                {
                  if (v379)
                  {
                    memcpy(v368, v369, *(void *)(*(void *)(v378 - 8) + 64));
                  }
                  else
                  {
                    *uint64_t v368 = *(void *)v369;
                    v368[1] = *((void *)v369 + 1);
                    v368[2] = *((void *)v369 + 2);
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    swift_storeEnumTagMultiPayload();
                  }
                  a3 = v664;
LABEL_183:
                  uint64_t v371 = (uint64_t)__srca;
LABEL_229:
                  swift_storeEnumTagMultiPayload();
                  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v368, 0, 1, v197);
                  goto LABEL_230;
                }
                *uint64_t v368 = *(void *)v369;
                v368[1] = *((void *)v369 + 1);
                v397 = (int *)type metadata accessor for ConditionDetailMapViewModel();
                uint64_t v398 = v397[5];
                uint64_t v399 = (char *)v368 + v398;
                v648 = v368;
                uint64_t v400 = &v369[v398];
                swift_bridgeObjectRetain();
                v401 = v399;
                v402 = v648;
                ((void (*)(char *, char *, void *))v628)(v401, v400, v630);
                uint64_t v403 = v397[6];
                uint64_t v404 = (void *)((char *)v648 + v403);
                v405 = &v369[v403];
                uint64_t v406 = type metadata accessor for WeatherData(0);
                uint64_t v605 = v161;
                if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v405, 1, v406))
                {
                  uint64_t v407 = sub_10017DF08(&qword_100E63850);
                  memcpy(v404, v405, *(void *)(*(void *)(v407 - 8) + 64));
                  goto LABEL_291;
                }
                v629 = v397;
                *uint64_t v404 = *(void *)v405;
                v404[1] = *((void *)v405 + 1);
                v635 = (int *)v406;
                uint64_t v426 = *(int *)(v406 + 20);
                uint64_t v640 = (uint64_t)v404;
                long long v427 = (char *)v404 + v426;
                uint64_t v428 = &v405[v426];
                uint64_t v429 = type metadata accessor for Locale();
                swift_bridgeObjectRetain();
                if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v428, 1, v429))
                {
                  uint64_t v430 = sub_10017DF08(&qword_100E63730);
                  memcpy(v427, v428, *(void *)(*(void *)(v430 - 8) + 64));
                }
                else
                {
                  (*(void (**)(char *, char *, uint64_t))(*(void *)(v429 - 8) + 16))(v427, v428, v429);
                  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v427, 0, 1, v429);
                }
                uint64_t v498 = v635[6];
                uint64_t v499 = v640 + v498;
                uint64_t v500 = &v405[v498];
                uint64_t v501 = type metadata accessor for WeatherDataModel();
                (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v501 - 8) + 16))(v499, v500, v501);
                uint64_t v502 = v635[7];
                uint64_t v503 = (void *)(v640 + v502);
                char v504 = &v405[v502];
                uint64_t v505 = sub_10017DF08(&qword_100E63738);
                if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v504, 1, v505))
                {
                  uint64_t v506 = type metadata accessor for WeatherData.CachingState(0);
                  memcpy(v503, v504, *(void *)(*(void *)(v506 - 8) + 64));
                  uint64_t v507 = v625;
                }
                else
                {
                  uint64_t v507 = v625;
                  v624(v503, v504, v625);
                  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v503, 0, 1, v505);
                }
                uint64_t v517 = v635[8];
                long long v518 = (void *)(v640 + v517);
                uint64_t v519 = &v405[v517];
                uint64_t v520 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
                int v521 = swift_getEnumCaseMultiPayload();
                if (v521 == 1)
                {
                  uint64_t v527 = type metadata accessor for WeatherStatisticsModel();
                  (*(void (**)(void *, char *, uint64_t))(*(void *)(v527 - 8) + 16))(v518, v519, v527);
                }
                else
                {
                  if (v521)
                  {
                    memcpy(v518, v519, *(void *)(*(void *)(v520 - 8) + 64));
                    goto LABEL_274;
                  }
                  *long long v518 = *(void *)v519;
                  v518[1] = *((void *)v519 + 1);
                  swift_bridgeObjectRetain();
                }
                swift_storeEnumTagMultiPayload();
LABEL_274:
                uint64_t v528 = v635[9];
                uint64_t v529 = (char *)(v640 + v528);
                uint64_t v530 = &v405[v528];
                uint64_t v531 = type metadata accessor for WeatherDataOverrides();
                if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v530, 1, v531))
                {
                  uint64_t v532 = sub_10017DF08(&qword_100E63740);
                  memcpy(v529, v530, *(void *)(*(void *)(v532 - 8) + 64));
                }
                else
                {
                  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v530, 1, v507))
                  {
                    uint64_t v533 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
                    memcpy(v529, v530, *(void *)(*(void *)(v533 - 8) + 64));
                  }
                  else
                  {
                    v624(v529, v530, v507);
                    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v529, 0, 1, v507);
                  }
                  uint64_t v541 = *(int *)(v531 + 20);
                  uint64_t v542 = &v529[v541];
                  uint64_t v543 = &v530[v541];
                  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v543, 1, v507))
                  {
                    uint64_t v544 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
                    memcpy(v542, v543, *(void *)(*(void *)(v544 - 8) + 64));
                  }
                  else
                  {
                    v624(v542, v543, v507);
                    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v542, 0, 1, v507);
                  }
                  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v529, 0, 1, v531);
                }
                v397 = v629;
                _s7Weather24LocationCompositionStateOwst_0(v640, 0, 1, (uint64_t)v635);
                v402 = v648;
LABEL_291:
                uint64_t v545 = v397[7];
                uint64_t v546 = (void *)((char *)v402 + v545);
                v547 = &v369[v545];
                *uint64_t v546 = *(void *)v547;
                v546[1] = *((void *)v547 + 1);
                uint64_t v548 = v397[8];
                uint64_t v549 = (uint64_t)v402 + v548;
                uint64_t v550 = &v369[v548];
                uint64_t v551 = type metadata accessor for WeatherMapOverlayKind();
                v552 = *(void (**)(uint64_t, char *, uint64_t))(*(void *)(v551 - 8) + 16);
                swift_bridgeObjectRetain();
                uint64_t v553 = v550;
                uint64_t v368 = v648;
                v552(v549, v553, v551);
                *((unsigned char *)v648 + v397[9]) = v369[v397[9]];
                swift_storeEnumTagMultiPayload();
LABEL_292:
                unsigned __int8 v171 = v662;
                a3 = v664;
                uint64_t v197 = v617;
                uint64_t v371 = (uint64_t)__srca;
                uint64_t v161 = v605;
                goto LABEL_229;
              default:
                uint64_t v372 = v615;
                uint64_t v373 = v615;
LABEL_182:
                (*(void (**)(void *, char *, uint64_t))(*(void *)(v373 - 8) + 16))(v368, v369, v372);
                goto LABEL_183;
            }
          }
          *uint64_t v173 = *v657;
          uint64_t v599 = v173;
          v173[1] = v657[1];
          uint64_t v247 = type metadata accessor for ConditionDetailMapViewModel();
          uint64_t v248 = *(int *)(v247 + 20);
          char v249 = (char *)v173 + v248;
          uint64_t v250 = (uint64_t)v657 + v248;
          swift_bridgeObjectRetain();
          ((void (*)(char *, uint64_t, void *))v628)(v249, v250, v630);
          v590 = (int *)v247;
          uint64_t v251 = *(int *)(v247 + 24);
          uint64_t v252 = (uint64_t *)((char *)v173 + v251);
          v253 = (uint64_t *)((char *)v657 + v251);
          uint64_t v254 = type metadata accessor for WeatherData(0);
          uint64_t v603 = v161;
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v253, 1, v254))
          {
            uint64_t v255 = sub_10017DF08(&qword_100E63850);
            memcpy(v252, v253, *(void *)(*(void *)(v255 - 8) + 64));
            goto LABEL_167;
          }
          *uint64_t v252 = *v253;
          v252[1] = v253[1];
          v575 = (int *)v254;
          uint64_t v583 = (uint64_t)v252;
          uint64_t v298 = *(int *)(v254 + 20);
          v299 = (char *)v252 + v298;
          uint64_t v300 = (char *)v253 + v298;
          uint64_t v301 = type metadata accessor for Locale();
          swift_bridgeObjectRetain();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v300, 1, v301))
          {
            uint64_t v302 = sub_10017DF08(&qword_100E63730);
            memcpy(v299, v300, *(void *)(*(void *)(v302 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v301 - 8) + 16))(v299, v300, v301);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v299, 0, 1, v301);
          }
          uint64_t v308 = *(int *)(v254 + 24);
          uint64_t v309 = v583 + v308;
          v310 = (char *)v253 + v308;
          uint64_t v311 = type metadata accessor for WeatherDataModel();
          (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v311 - 8) + 16))(v309, v310, v311);
          uint64_t v312 = v575[7];
          uint64_t v313 = (void *)(v583 + v312);
          uint64_t v314 = (char *)v253 + v312;
          uint64_t v315 = sub_10017DF08(&qword_100E63738);
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v314, 1, v315))
          {
            uint64_t v316 = type metadata accessor for WeatherData.CachingState(0);
            memcpy(v313, v314, *(void *)(*(void *)(v316 - 8) + 64));
            uint64_t v317 = v625;
          }
          else
          {
            uint64_t v317 = v625;
            v624(v313, v314, v625);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v313, 0, 1, v315);
          }
          uint64_t v326 = v575[8];
          uint64_t v327 = (void *)(v583 + v326);
          uint64_t v328 = (void *)((char *)v253 + v326);
          uint64_t v329 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
          int v330 = swift_getEnumCaseMultiPayload();
          if (v330 == 1)
          {
            uint64_t v336 = type metadata accessor for WeatherStatisticsModel();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v336 - 8) + 16))(v327, v328, v336);
          }
          else
          {
            if (v330)
            {
              memcpy(v327, v328, *(void *)(*(void *)(v329 - 8) + 64));
              goto LABEL_147;
            }
            *uint64_t v327 = *v328;
            v327[1] = v328[1];
            swift_bridgeObjectRetain();
          }
          swift_storeEnumTagMultiPayload();
LABEL_147:
          uint64_t v337 = v575[9];
          v338 = (char *)(v583 + v337);
          v339 = (char *)v253 + v337;
          uint64_t v340 = type metadata accessor for WeatherDataOverrides();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v339, 1, v340))
          {
            uint64_t v341 = sub_10017DF08(&qword_100E63740);
            memcpy(v338, v339, *(void *)(*(void *)(v341 - 8) + 64));
            uint64_t v342 = (uint64_t)v575;
          }
          else
          {
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v339, 1, v317))
            {
              uint64_t v343 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
              memcpy(v338, v339, *(void *)(*(void *)(v343 - 8) + 64));
            }
            else
            {
              v624(v338, v339, v317);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v338, 0, 1, v317);
            }
            uint64_t v354 = *(int *)(v340 + 20);
            uint64_t v355 = &v338[v354];
            uint64_t v356 = &v339[v354];
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v356, 1, v317))
            {
              uint64_t v357 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
              memcpy(v355, v356, *(void *)(*(void *)(v357 - 8) + 64));
            }
            else
            {
              v624(v355, v356, v317);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v355, 0, 1, v317);
            }
            uint64_t v342 = (uint64_t)v575;
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v338, 0, 1, v340);
          }
          _s7Weather24LocationCompositionStateOwst_0(v583, 0, 1, v342);
          uint64_t v173 = v599;
LABEL_167:
          uint64_t v361 = v590[7];
          uint64_t v362 = (uint64_t *)((char *)v173 + v361);
          v363 = (uint64_t *)((char *)v657 + v361);
          *uint64_t v362 = *v363;
          v362[1] = v363[1];
          uint64_t v364 = v590[8];
          v578 = (char *)v657 + v364;
          v584 = (char *)v599 + v364;
          uint64_t v365 = type metadata accessor for WeatherMapOverlayKind();
          uint64_t v366 = *(void (**)(char *, char *, uint64_t))(*(void *)(v365 - 8) + 16);
          swift_bridgeObjectRetain();
          v366(v584, v578, v365);
          *((unsigned char *)v599 + v590[9]) = *((unsigned char *)v657 + v590[9]);
          swift_storeEnumTagMultiPayload();
          a3 = v664;
LABEL_168:
          uint64_t v161 = v603;
          unsigned __int8 v171 = v662;
          uint64_t v197 = v617;
          goto LABEL_169;
        default:
          uint64_t v174 = v169;
          uint64_t v175 = v169;
LABEL_70:
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v175 - 8) + 16))(v173, v657, v174);
          goto LABEL_71;
      }
    }
LABEL_55:
    uint64_t v185 = sub_10017DF08(&qword_100E66E40);
    memcpy(v160, (const void *)v161, *(void *)(*(void *)(v185 - 8) + 64));
LABEL_231:
    swift_storeEnumTagMultiPayload();
    goto LABEL_232;
  }
  memcpy(v19, v20, *(void *)(*(void *)(v21 - 8) + 64));
LABEL_232:
  *((unsigned char *)v5 + a3[7]) = *((unsigned char *)v4 + a3[7]);
  *(void *)((char *)v5 + a3[8]) = *(void *)((char *)v4 + a3[8]);
  *(void *)((char *)v5 + a3[9]) = *(void *)((char *)v4 + a3[9]);
  return v5;
}

uint64_t sub_1009730CC(uint64_t a1, uint64_t a2, int *a3)
{
  v3 = a3;
  uint64_t v4 = a2;
  uint64_t v5 = a1;
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v7 = a3[5];
  v8 = (void *)(a1 + v7);
  uint64_t v9 = a2 + v7;
  uint64_t v10 = *(void *)(a2 + v7 + 8);
  void *v8 = *(void *)(a2 + v7);
  v8[1] = v10;
  uint64_t v11 = *(int *)(sub_10017DF08(&qword_100EA37A0) + 32);
  v12 = (char *)v8 + v11;
  uint64_t v13 = (const void *)(v9 + v11);
  uint64_t v14 = type metadata accessor for DetailChartDataElement();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v13, 1, v14))
  {
    uint64_t v15 = sub_10017DF08(&qword_100E6B640);
    memcpy(v12, v13, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, const void *, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v12, 0, 1, v14);
  }
  uint64_t v16 = v3[6];
  uint64_t v17 = (_OWORD *)(v5 + v16);
  uint64_t v18 = (char *)(v4 + v16);
  uint64_t v19 = type metadata accessor for SunriseSunsetDetailViewModel();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    long long v61 = *((_OWORD *)v18 + 1);
    _OWORD *v17 = *(_OWORD *)v18;
    v17[1] = v61;
    uint64_t v62 = (int *)_s10PolarModelVMa();
    uint64_t v63 = v62[6];
    uint64_t v64 = (char *)v17 + v63;
    uint64_t v65 = &v18[v63];
    uint64_t v66 = type metadata accessor for PolarType();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v66 - 8) + 32))(v64, v65, v66);
    uint64_t v67 = v62[7];
    v68 = (char *)v17 + v67;
    uint64_t v69 = &v18[v67];
    uint64_t v70 = type metadata accessor for Date();
    v487 = *(void (**)(char *, char *))(*(void *)(v70 - 8) + 32);
    uint64_t v489 = v70;
    v487(v68, v69);
    uint64_t v71 = v62[8];
    uint64_t v72 = (char *)v17 + v71;
    v73 = &v18[v71];
    uint64_t v74 = type metadata accessor for TimeZone();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v74 - 8) + 32))(v72, v73, v74);
    uint64_t v75 = v62[9];
    uint64_t v76 = (char *)v17 + v75;
    v77 = &v18[v75];
    uint64_t v78 = type metadata accessor for AttributedString();
    uint64_t v500 = *(void (**)(char *, char *))(*(void *)(v78 - 8) + 32);
    uint64_t v505 = (void *)v78;
    v500(v76, v77);
    *(void *)((char *)v17 + v62[10]) = *(void *)&v18[v62[10]];
    *(_OWORD *)((char *)v17 + v62[11]) = *(_OWORD *)&v18[v62[11]];
    uint64_t v79 = v62[12];
    uint64_t v80 = (char *)v17 + v79;
    v81 = &v18[v79];
    uint64_t v82 = type metadata accessor for SunriseSunsetDetailChartViewModel();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v82 - 8) + 32))(v80, v81, v82);
    uint64_t v83 = v62[13];
    v84 = (char *)v17 + v83;
    v85 = &v18[v83];
    uint64_t v86 = type metadata accessor for Location();
    uint64_t v491 = *(void (**)(char *, char *))(*(void *)(v86 - 8) + 32);
    uint64_t v494 = v86;
    v491(v84, v85);
    uint64_t v87 = v62[14];
    v88 = (char *)v17 + v87;
    uint64_t v89 = &v18[v87];
    uint64_t v90 = type metadata accessor for DaylightStringBuilder();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v90 - 8) + 32))(v88, v89, v90);
    uint64_t v91 = v62[15];
    v92 = (char *)v17 + v91;
    uint64_t v93 = &v18[v91];
    uint64_t v94 = type metadata accessor for OverviewTableViewModel();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v94 - 8) + 32))(v92, v93, v94);
    uint64_t v95 = v62[16];
    uint64_t v96 = (_OWORD *)((char *)v17 + v95);
    uint64_t v97 = &v18[v95];
    uint64_t v98 = type metadata accessor for DetailComponentContainerViewModel();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v97, 1, v98))
    {
      uint64_t v99 = sub_10017DF08(&qword_100E66E28);
      memcpy(v96, v97, *(void *)(*(void *)(v99 - 8) + 64));
    }
    else
    {
      uint64_t v524 = v3;
      uint64_t v512 = v4;
      long long v111 = *((_OWORD *)v97 + 1);
      *uint64_t v96 = *(_OWORD *)v97;
      v96[1] = v111;
      uint64_t v112 = *(int *)(v98 + 20);
      uint64_t v113 = (char *)v96 + v112;
      uint64_t v114 = &v97[v112];
      uint64_t v115 = type metadata accessor for NewsArticleComponentViewModel(0);
      uint64_t v522 = v17;
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v483 = v98;
        uint64_t v535 = v5;
        *(_OWORD *)uint64_t v113 = *(_OWORD *)v114;
        __srca = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
        uint64_t v116 = __srca[5];
        v117 = &v113[v116];
        uint64_t v118 = &v114[v116];
        uint64_t v119 = type metadata accessor for URL();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v118, 1, v119))
        {
          uint64_t v120 = sub_10017DF08(&qword_100E749B0);
          memcpy(v117, v118, *(void *)(*(void *)(v120 - 8) + 64));
          uint64_t v121 = *(void *)(v119 - 8);
        }
        else
        {
          uint64_t v126 = v117;
          __dstf = v117;
          uint64_t v121 = *(void *)(v119 - 8);
          (*(void (**)(char *, char *, uint64_t))(v121 + 32))(v126, v118, v119);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dstf, 0, 1, v119);
        }
        *(_OWORD *)&v113[__srca[6]] = *(_OWORD *)&v114[__srca[6]];
        v127 = *(void (**)(char *, char *, uint64_t))(v121 + 32);
        v127(&v113[__srca[7]], &v114[__srca[7]], v119);
        uint64_t v128 = __srca[8];
        __dsta = &v113[v128];
        uint64_t v129 = &v114[v128];
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v114[v128], 1, v119))
        {
          uint64_t v130 = sub_10017DF08(&qword_100E749B0);
          memcpy(__dsta, v129, *(void *)(*(void *)(v130 - 8) + 64));
        }
        else
        {
          v127(__dsta, v129, v119);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dsta, 0, 1, v119);
        }
        uint64_t v5 = v535;
        uint64_t v98 = v483;
        v113[__srca[9]] = v114[__srca[9]];
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v113, v114, *(void *)(*(void *)(v115 - 8) + 64));
      }
      uint64_t v152 = *(int *)(v98 + 24);
      v153 = (char *)v96 + v152;
      uint64_t v154 = &v97[v152];
      uint64_t v155 = type metadata accessor for DetailComponentAction();
      uint64_t v4 = v512;
      v3 = v524;
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v154, 1, v155))
      {
        uint64_t v156 = sub_10017DF08(&qword_100E73810);
        memcpy(v153, v154, *(void *)(*(void *)(v156 - 8) + 64));
      }
      else
      {
        uint64_t v157 = type metadata accessor for URL();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v157 - 8) + 32))(v153, v154, v157);
        uint64_t v158 = sub_10017DF08(&qword_100E66478);
        v153[*(int *)(v158 + 48)] = v154[*(int *)(v158 + 48)];
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v153, 0, 1, v155);
      }
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v96, 0, 1, v98);
      uint64_t v17 = v522;
    }
    uint64_t v159 = *(int *)(sub_10017DF08(&qword_100E92130) + 48);
    uint64_t v139 = (char *)v17 + v159;
    uint64_t v140 = (uint64_t)&v18[v159];
    v160 = (int *)type metadata accessor for ConditionDetailPlatterViewModel(0);
    if (_s7Weather24LocationCompositionStateOwet_0(v140, 1, (uint64_t)v160)) {
      goto LABEL_32;
    }
    uint64_t v485 = v98;
    *(_OWORD *)uint64_t v139 = *(_OWORD *)v140;
    v139[16] = *(unsigned char *)(v140 + 16);
    *(_OWORD *)(v139 + 24) = *(_OWORD *)(v140 + 24);
    uint64_t v161 = v160[6];
    uint64_t v162 = &v139[v161];
    uint64_t v163 = (const void *)(v140 + v161);
    uint64_t v164 = type metadata accessor for WeatherDescription();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v163, 1, v164))
    {
      uint64_t v165 = sub_10017DF08(&qword_100E63758);
      memcpy(v162, v163, *(void *)(*(void *)(v165 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, const void *, uint64_t))(*(void *)(v164 - 8) + 32))(v162, v163, v164);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v162, 0, 1, v164);
    }
    uint64_t v166 = v160[7];
    __dstc = v139;
    uint64_t v167 = &v139[v166];
    uint64_t v168 = (_OWORD *)(v140 + v166);
    uint64_t v151 = type metadata accessor for ConditionDetailPlatterViewModel.Body(0);
    __srcc = v168;
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        (*(void (**)(char *, _OWORD *, uint64_t))(*(void *)(v164 - 8) + 32))(v167, v168, v164);
        goto LABEL_160;
      case 2u:
        ((void (*)(char *, _OWORD *, void *))v500)(v167, v168, v505);
        goto LABEL_160;
      case 3u:
        uint64_t v188 = sub_10017DF08(&qword_100E73808);
        (*(void (**)(char *, _OWORD *, uint64_t))(*(void *)(v188 - 8) + 32))(v167, v168, v188);
        goto LABEL_160;
      case 4u:
        uint64_t v465 = v164;
        uint64_t v527 = v3;
        uint64_t v515 = v4;
        long long v189 = v168[1];
        *(_OWORD *)uint64_t v167 = *v168;
        *((_OWORD *)v167 + 1) = v189;
        uint64_t v190 = *(int *)(v485 + 20);
        uint64_t v191 = &v167[v190];
        uint64_t v192 = (char *)v168 + v190;
        uint64_t v193 = type metadata accessor for NewsArticleComponentViewModel(0);
        uint64_t v461 = v167;
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          uint64_t v453 = v151;
          uint64_t v536 = v5;
          *(_OWORD *)uint64_t v191 = *(_OWORD *)v192;
          uint64_t v450 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
          uint64_t v194 = v450[5];
          uint64_t v195 = &v191[v194];
          uint64_t v196 = &v192[v194];
          uint64_t v197 = type metadata accessor for URL();
          uint64_t v179 = (uint64_t)__dstc;
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v196, 1, v197))
          {
            uint64_t v198 = sub_10017DF08(&qword_100E749B0);
            memcpy(v195, v196, *(void *)(*(void *)(v198 - 8) + 64));
            uint64_t v199 = *(void *)(v197 - 8);
          }
          else
          {
            uint64_t v216 = v195;
            uint64_t v447 = v195;
            uint64_t v199 = *(void *)(v197 - 8);
            (*(void (**)(char *, char *, uint64_t))(v199 + 32))(v216, v196, v197);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v447, 0, 1, v197);
          }
          *(_OWORD *)&v191[v450[6]] = *(_OWORD *)&v192[v450[6]];
          int v217 = *(void (**)(char *, char *, uint64_t))(v199 + 32);
          v217(&v191[v450[7]], &v192[v450[7]], v197);
          uint64_t v218 = v450[8];
          int v448 = &v191[v218];
          uint64_t v219 = &v192[v218];
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v192[v218], 1, v197))
          {
            uint64_t v220 = sub_10017DF08(&qword_100E749B0);
            memcpy(v448, v219, *(void *)(*(void *)(v220 - 8) + 64));
          }
          else
          {
            v217(v448, v219, v197);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v448, 0, 1, v197);
          }
          uint64_t v5 = v536;
          uint64_t v151 = v453;
          uint64_t v167 = v461;
          v191[v450[9]] = v192[v450[9]];
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(v191, v192, *(void *)(*(void *)(v193 - 8) + 64));
          uint64_t v179 = (uint64_t)__dstc;
        }
        uint64_t v233 = *(int *)(v485 + 24);
        uint64_t v234 = &v167[v233];
        uint64_t v235 = (char *)__srcc + v233;
        uint64_t v236 = type metadata accessor for DetailComponentAction();
        uint64_t v4 = v515;
        v3 = v527;
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v235, 1, v236))
        {
          uint64_t v237 = sub_10017DF08(&qword_100E73810);
          memcpy(v234, v235, *(void *)(*(void *)(v237 - 8) + 64));
        }
        else
        {
          uint64_t v238 = type metadata accessor for URL();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v238 - 8) + 32))(v234, v235, v238);
          uint64_t v239 = sub_10017DF08(&qword_100E66478);
          v234[*(int *)(v239 + 48)] = v235[*(int *)(v239 + 48)];
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v234, 0, 1, v236);
        }
        uint64_t v164 = v465;
        swift_storeEnumTagMultiPayload();
        goto LABEL_162;
      case 6u:
        uint64_t v200 = type metadata accessor for PrecipitationTotalPlatterViewModel();
        (*(void (**)(char *, _OWORD *, uint64_t))(*(void *)(v200 - 8) + 32))(v167, v168, v200);
        goto LABEL_160;
      case 7u:
        uint64_t v466 = v164;
        uint64_t v201 = type metadata accessor for ConditionDetailDynamicContentIdentifier();
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          uint64_t v454 = v151;
          *(_OWORD *)uint64_t v167 = *v168;
          uint64_t v202 = (int *)type metadata accessor for ConditionDetailMapViewModel();
          ((void (*)(char *, char *, uint64_t))v491)(&v167[v202[5]], (char *)v168 + v202[5], v494);
          uint64_t v203 = v202[6];
          uint64_t v528 = &v167[v203];
          char v204 = (_OWORD *)((char *)v168 + v203);
          uint64_t v444 = (int *)type metadata accessor for WeatherData(0);
          uint64_t v462 = v167;
          uint64_t v516 = v202;
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v204, 1, (uint64_t)v444))
          {
            uint64_t v205 = sub_10017DF08(&qword_100E63850);
            memcpy(v528, v204, *(void *)(*(void *)(v205 - 8) + 64));
          }
          else
          {
            *(_OWORD *)uint64_t v528 = *v204;
            uint64_t v221 = v444[5];
            uint64_t v222 = &v528[v221];
            uint64_t v223 = (char *)v204 + v221;
            uint64_t v224 = type metadata accessor for Locale();
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v223, 1, v224))
            {
              uint64_t v225 = sub_10017DF08(&qword_100E63730);
              memcpy(v222, v223, *(void *)(*(void *)(v225 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v224 - 8) + 32))(v222, v223, v224);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v222, 0, 1, v224);
            }
            uint64_t v249 = v444[6];
            uint64_t v250 = &v528[v249];
            uint64_t v251 = (char *)v204 + v249;
            uint64_t v252 = type metadata accessor for WeatherDataModel();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v252 - 8) + 32))(v250, v251, v252);
            uint64_t v253 = v444[7];
            uint64_t v254 = &v528[v253];
            uint64_t v255 = (char *)v204 + v253;
            uint64_t v256 = sub_10017DF08(&qword_100E63738);
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v255, 1, v256))
            {
              uint64_t v257 = type metadata accessor for WeatherData.CachingState(0);
              memcpy(v254, v255, *(void *)(*(void *)(v257 - 8) + 64));
            }
            else
            {
              ((void (*)(char *, char *, uint64_t))v487)(v254, v255, v489);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v254, 0, 1, v256);
            }
            uint64_t v270 = v444[8];
            char v271 = &v528[v270];
            unsigned __int8 v272 = (char *)v204 + v270;
            uint64_t v273 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
            if (swift_getEnumCaseMultiPayload() == 1)
            {
              uint64_t v274 = type metadata accessor for WeatherStatisticsModel();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v274 - 8) + 32))(v271, v272, v274);
              swift_storeEnumTagMultiPayload();
            }
            else
            {
              memcpy(v271, v272, *(void *)(*(void *)(v273 - 8) + 64));
            }
            uint64_t v275 = v444[9];
            v276 = &v528[v275];
            v277 = (char *)v204 + v275;
            uint64_t v278 = type metadata accessor for WeatherDataOverrides();
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v277, 1, v278))
            {
              v279 = v276;
              uint64_t v280 = (uint64_t)v444;
              uint64_t v281 = sub_10017DF08(&qword_100E63740);
              memcpy(v279, v277, *(void *)(*(void *)(v281 - 8) + 64));
              uint64_t v167 = v462;
              uint64_t v202 = v516;
            }
            else
            {
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v277, 1, v489))
              {
                uint64_t v283 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
                memcpy(v276, v277, *(void *)(*(void *)(v283 - 8) + 64));
              }
              else
              {
                ((void (*)(char *, char *, uint64_t))v487)(v276, v277, v489);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v276, 0, 1, v489);
              }
              uint64_t v289 = v276;
              uint64_t v280 = (uint64_t)v444;
              uint64_t v290 = *(int *)(v278 + 20);
              uint64_t v442 = (uint64_t)v289;
              uint64_t v291 = &v289[v290];
              uint64_t v292 = &v277[v290];
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v292, 1, v489))
              {
                uint64_t v293 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
                memcpy(v291, v292, *(void *)(*(void *)(v293 - 8) + 64));
              }
              else
              {
                ((void (*)(char *, char *, uint64_t))v487)(v291, v292, v489);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v291, 0, 1, v489);
              }
              uint64_t v168 = __srcc;
              uint64_t v202 = v516;
              _s7Weather24LocationCompositionStateOwst_0(v442, 0, 1, v278);
              uint64_t v167 = v462;
            }
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v528, 0, 1, v280);
          }
          uint64_t v164 = v466;
          *(_OWORD *)&v167[v202[7]] = *(_OWORD *)((char *)v168 + v202[7]);
          uint64_t v338 = v202[8];
          v339 = &v167[v338];
          uint64_t v340 = (char *)v168 + v338;
          uint64_t v341 = type metadata accessor for WeatherMapOverlayKind();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v341 - 8) + 32))(v339, v340, v341);
          v462[v516[9]] = *((unsigned char *)v168 + v516[9]);
          swift_storeEnumTagMultiPayload();
          uint64_t v151 = v454;
        }
        else
        {
          memcpy(v167, v168, *(void *)(*(void *)(v201 - 8) + 64));
          uint64_t v164 = v466;
        }
LABEL_160:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v167, v168, *(void *)(*(void *)(v151 - 8) + 64));
        break;
    }
    uint64_t v179 = (uint64_t)__dstc;
LABEL_162:
    __srcd = v160;
    uint64_t v342 = v160[8];
    v299 = (_OWORD *)(v179 + v342);
    uint64_t v300 = (_OWORD *)(v140 + v342);
    if (!_s7Weather24LocationCompositionStateOwet_0(v140 + v342, 1, v151))
    {
      __dste = v300;
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v164 - 8) + 32))(v299, v300, v164);
          goto LABEL_173;
        case 2u:
          ((void (*)(_OWORD *, _OWORD *, void *))v500)(v299, v300, v505);
          goto LABEL_173;
        case 3u:
          uint64_t v344 = sub_10017DF08(&qword_100E73808);
          (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v344 - 8) + 32))(v299, v300, v344);
          goto LABEL_173;
        case 4u:
          uint64_t v531 = v3;
          uint64_t v519 = v4;
          long long v345 = v300[1];
          _OWORD *v299 = *v300;
          v299[1] = v345;
          uint64_t v346 = *(int *)(v485 + 20);
          uint64_t v347 = (char *)v299 + v346;
          uint64_t v348 = (char *)v300 + v346;
          uint64_t v349 = type metadata accessor for NewsArticleComponentViewModel(0);
          uint64_t v467 = v299;
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            uint64_t v457 = v151;
            uint64_t v537 = v5;
            *(_OWORD *)uint64_t v347 = *(_OWORD *)v348;
            uint64_t v350 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
            uint64_t v351 = v350[5];
            uint64_t v352 = &v347[v351];
            v353 = &v348[v351];
            uint64_t v354 = type metadata accessor for URL();
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v353, 1, v354))
            {
              uint64_t v355 = sub_10017DF08(&qword_100E749B0);
              memcpy(v352, v353, *(void *)(*(void *)(v355 - 8) + 64));
              uint64_t v356 = *(void *)(v354 - 8);
            }
            else
            {
              uint64_t v367 = v352;
              v509 = v352;
              uint64_t v356 = *(void *)(v354 - 8);
              (*(void (**)(char *, char *, uint64_t))(v356 + 32))(v367, v353, v354);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v509, 0, 1, v354);
            }
            *(_OWORD *)&v347[v350[6]] = *(_OWORD *)&v348[v350[6]];
            uint64_t v368 = *(void (**)(char *, char *, uint64_t))(v356 + 32);
            v368(&v347[v350[7]], &v348[v350[7]], v354);
            uint64_t v369 = v350[8];
            uint64_t v503 = v350;
            v510 = &v347[v369];
            uint64_t v370 = &v348[v369];
            uint64_t v315 = (uint64_t)__srcd;
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v348[v369], 1, v354))
            {
              uint64_t v371 = sub_10017DF08(&qword_100E749B0);
              memcpy(v510, v370, *(void *)(*(void *)(v371 - 8) + 64));
            }
            else
            {
              v368(v510, v370, v354);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v510, 0, 1, v354);
            }
            uint64_t v5 = v537;
            uint64_t v151 = v457;
            v299 = v467;
            v347[v503[9]] = v348[v503[9]];
            swift_storeEnumTagMultiPayload();
          }
          else
          {
            memcpy(v347, v348, *(void *)(*(void *)(v349 - 8) + 64));
            uint64_t v315 = (uint64_t)__srcd;
          }
          uint64_t v377 = *(int *)(v485 + 24);
          int v335 = (char *)v299 + v377;
          uint64_t v336 = &__dste[v377];
          uint64_t v337 = type metadata accessor for DetailComponentAction();
          uint64_t v4 = v519;
          v3 = v531;
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v336, 1, v337))
          {
LABEL_192:
            uint64_t v378 = sub_10017DF08(&qword_100E73810);
            memcpy(v335, v336, *(void *)(*(void *)(v378 - 8) + 64));
          }
          else
          {
LABEL_193:
            uint64_t v379 = type metadata accessor for URL();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v379 - 8) + 32))(v335, v336, v379);
            uint64_t v380 = sub_10017DF08(&qword_100E66478);
            v335[*(int *)(v380 + 48)] = v336[*(int *)(v380 + 48)];
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v335, 0, 1, v337);
          }
          v299 = v467;
          swift_storeEnumTagMultiPayload();
          goto LABEL_175;
        case 6u:
          uint64_t v357 = type metadata accessor for PrecipitationTotalPlatterViewModel();
          (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v357 - 8) + 32))(v299, v300, v357);
LABEL_173:
          swift_storeEnumTagMultiPayload();
          goto LABEL_174;
        case 7u:
          uint64_t v532 = v3;
          uint64_t v360 = type metadata accessor for ConditionDetailDynamicContentIdentifier();
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            uint64_t v458 = v151;
            uint64_t v520 = v4;
            _OWORD *v299 = *v300;
            uint64_t v361 = type metadata accessor for ConditionDetailMapViewModel();
            ((void (*)(char *, char *, uint64_t))v491)((char *)v299 + *(int *)(v361 + 20), (char *)v300 + *(int *)(v361 + 20), v494);
            uint64_t v502 = (int *)v361;
            uint64_t v362 = *(int *)(v361 + 24);
            v363 = (_OWORD *)((char *)v299 + v362);
            uint64_t v364 = (_OWORD *)((char *)v300 + v362);
            uint64_t v365 = (int *)type metadata accessor for WeatherData(0);
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v364, 1, (uint64_t)v365))
            {
              uint64_t v366 = sub_10017DF08(&qword_100E63850);
              memcpy(v363, v364, *(void *)(*(void *)(v366 - 8) + 64));
              uint64_t v4 = v520;
            }
            else
            {
              v469 = v299;
              _OWORD *v363 = *v364;
              uint64_t v495 = v365;
              uint64_t v497 = (uint64_t)v363;
              uint64_t v372 = v365[5];
              uint64_t v373 = (char *)v363 + v372;
              uint64_t v374 = (char *)v364 + v372;
              uint64_t v375 = type metadata accessor for Locale();
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v374, 1, v375))
              {
                uint64_t v376 = sub_10017DF08(&qword_100E63730);
                memcpy(v373, v374, *(void *)(*(void *)(v376 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v375 - 8) + 32))(v373, v374, v375);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v373, 0, 1, v375);
              }
              uint64_t v390 = v365[6];
              uint64_t v391 = v497 + v390;
              uint64_t v392 = (char *)v364 + v390;
              uint64_t v393 = type metadata accessor for WeatherDataModel();
              (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v393 - 8) + 32))(v391, v392, v393);
              uint64_t v394 = v365[7];
              uint64_t v395 = (void *)(v497 + v394);
              uint64_t v396 = (char *)v364 + v394;
              uint64_t v397 = sub_10017DF08(&qword_100E63738);
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v396, 1, v397))
              {
                uint64_t v398 = type metadata accessor for WeatherData.CachingState(0);
                memcpy(v395, v396, *(void *)(*(void *)(v398 - 8) + 64));
              }
              else
              {
                ((void (*)(void *, char *, uint64_t))v487)(v395, v396, v489);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v395, 0, 1, v397);
              }
              uint64_t v409 = v365[8];
              v410 = (void *)(v497 + v409);
              uint64_t v411 = (char *)v364 + v409;
              uint64_t v412 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
              if (swift_getEnumCaseMultiPayload() == 1)
              {
                uint64_t v413 = type metadata accessor for WeatherStatisticsModel();
                (*(void (**)(void *, char *, uint64_t))(*(void *)(v413 - 8) + 32))(v410, v411, v413);
                swift_storeEnumTagMultiPayload();
              }
              else
              {
                memcpy(v410, v411, *(void *)(*(void *)(v412 - 8) + 64));
              }
              uint64_t v414 = (uint64_t)v365;
              uint64_t v415 = v365[9];
              uint64_t v416 = (char *)(v497 + v415);
              uint64_t v417 = (char *)v364 + v415;
              uint64_t v418 = type metadata accessor for WeatherDataOverrides();
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v417, 1, v418))
              {
                uint64_t v419 = sub_10017DF08(&qword_100E63740);
                memcpy(v416, v417, *(void *)(*(void *)(v419 - 8) + 64));
                uint64_t v4 = v520;
              }
              else
              {
                uint64_t v4 = v520;
                if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v417, 1, v489))
                {
                  uint64_t v421 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
                  memcpy(v416, v417, *(void *)(*(void *)(v421 - 8) + 64));
                }
                else
                {
                  ((void (*)(char *, char *, uint64_t))v487)(v416, v417, v489);
                  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v416, 0, 1, v489);
                }
                uint64_t v425 = *(int *)(v418 + 20);
                uint64_t v492 = &v416[v425];
                uint64_t v426 = &v417[v425];
                if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v426, 1, v489))
                {
                  uint64_t v427 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
                  memcpy(v492, v426, *(void *)(*(void *)(v427 - 8) + 64));
                }
                else
                {
                  ((void (*)(char *, char *, uint64_t))v487)(v492, v426, v489);
                  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v492, 0, 1, v489);
                }
                uint64_t v414 = (uint64_t)v495;
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v416, 0, 1, v418);
              }
              v299 = v469;
              _s7Weather24LocationCompositionStateOwst_0(v497, 0, 1, v414);
            }
            *(_OWORD *)((char *)v299 + v502[7]) = *(_OWORD *)&__dste[v502[7]];
            uint64_t v435 = v502[8];
            uint64_t v436 = (char *)v299 + v435;
            uint64_t v437 = v299;
            long long v438 = &__dste[v435];
            uint64_t v439 = type metadata accessor for WeatherMapOverlayKind();
            uint64_t v440 = v438;
            v299 = v437;
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v439 - 8) + 32))(v436, v440, v439);
            *((unsigned char *)v437 + v502[9]) = __dste[v502[9]];
            swift_storeEnumTagMultiPayload();
            uint64_t v151 = v458;
          }
          else
          {
            memcpy(v299, v300, *(void *)(*(void *)(v360 - 8) + 64));
          }
          uint64_t v315 = (uint64_t)__srcd;
          swift_storeEnumTagMultiPayload();
          v3 = v532;
          goto LABEL_175;
        default:
          memcpy(v299, v300, *(void *)(*(void *)(v151 - 8) + 64));
LABEL_174:
          uint64_t v315 = (uint64_t)__srcd;
          break;
      }
      goto LABEL_175;
    }
LABEL_163:
    uint64_t v343 = sub_10017DF08(&qword_100E73818);
    memcpy(v299, v300, *(void *)(*(void *)(v343 - 8) + 64));
    uint64_t v315 = (uint64_t)__srcd;
LABEL_176:
    *(unsigned char *)(v179 + *(int *)(v315 + 36)) = *(unsigned char *)(v140 + *(int *)(v315 + 36));
    *(unsigned char *)(v179 + *(int *)(v315 + 40)) = *(unsigned char *)(v140 + *(int *)(v315 + 40));
    _s7Weather24LocationCompositionStateOwst_0(v179, 0, 1, v315);
    goto LABEL_177;
  }
  if (!EnumCaseMultiPayload)
  {
    uint64_t v534 = v5;
    long long v21 = *((_OWORD *)v18 + 1);
    _OWORD *v17 = *(_OWORD *)v18;
    v17[1] = v21;
    v17[2] = *((_OWORD *)v18 + 2);
    uint64_t v22 = (int *)_s11NormalModelVMa();
    uint64_t v23 = v22[7];
    uint64_t v24 = (char *)v17 + v23;
    uint64_t v25 = &v18[v23];
    uint64_t v26 = type metadata accessor for Date();
    uint64_t v27 = *(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 32);
    v27(v24, v25, v26);
    v27((char *)v17 + v22[8], &v18[v22[8]], v26);
    uint64_t v486 = v27;
    uint64_t v488 = v26;
    v27((char *)v17 + v22[9], &v18[v22[9]], v26);
    uint64_t v28 = v22[10];
    uint64_t v29 = (char *)v17 + v28;
    uint64_t v30 = &v18[v28];
    uint64_t v31 = type metadata accessor for TimeZone();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 32))(v29, v30, v31);
    uint64_t v32 = v22[11];
    uint64_t v33 = (char *)v17 + v32;
    uint64_t v34 = &v18[v32];
    uint64_t v35 = type metadata accessor for AttributedString();
    uint64_t v499 = *(void (**)(char *, char *))(*(void *)(v35 - 8) + 32);
    char v504 = (void *)v35;
    v499(v33, v34);
    *(void *)((char *)v17 + v22[12]) = *(void *)&v18[v22[12]];
    uint64_t v36 = v22[13];
    uint64_t v37 = (char *)v17 + v36;
    v38 = &v18[v36];
    uint64_t v39 = type metadata accessor for SunriseSunsetDetailChartViewModel();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 32))(v37, v38, v39);
    uint64_t v40 = v22[14];
    v41 = (char *)v17 + v40;
    uint64_t v42 = &v18[v40];
    uint64_t v43 = type metadata accessor for Location();
    uint64_t v490 = *(void (**)(char *, char *))(*(void *)(v43 - 8) + 32);
    uint64_t v493 = v43;
    v490(v41, v42);
    uint64_t v44 = v22[15];
    v45 = (char *)v17 + v44;
    uint64_t v46 = &v18[v44];
    uint64_t v47 = type metadata accessor for SunEvents();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v47 - 8) + 32))(v45, v46, v47);
    uint64_t v48 = v22[16];
    v49 = (char *)v17 + v48;
    uint64_t v50 = &v18[v48];
    uint64_t v51 = type metadata accessor for OverviewTableViewModel();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v51 - 8) + 32))(v49, v50, v51);
    uint64_t v52 = v22[17];
    v53 = (char *)v17 + v52;
    uint64_t v54 = &v18[v52];
    uint64_t v55 = type metadata accessor for DaylightStringBuilder();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v55 - 8) + 32))(v53, v54, v55);
    uint64_t v56 = v22[18];
    v57 = (_OWORD *)((char *)v17 + v56);
    uint64_t v58 = &v18[v56];
    uint64_t v59 = type metadata accessor for DetailComponentContainerViewModel();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v58, 1, v59))
    {
      uint64_t v60 = sub_10017DF08(&qword_100E66E28);
      memcpy(v57, v58, *(void *)(*(void *)(v60 - 8) + 64));
    }
    else
    {
      uint64_t v523 = v3;
      uint64_t v511 = v4;
      long long v100 = *((_OWORD *)v58 + 1);
      _OWORD *v57 = *(_OWORD *)v58;
      v57[1] = v100;
      uint64_t v101 = *(int *)(v59 + 20);
      v102 = (char *)v57 + v101;
      v103 = &v58[v101];
      uint64_t v104 = type metadata accessor for NewsArticleComponentViewModel(0);
      int v521 = v17;
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v482 = v59;
        *(_OWORD *)v102 = *(_OWORD *)v103;
        __src = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
        uint64_t v105 = __src[5];
        v106 = &v102[v105];
        v107 = &v103[v105];
        uint64_t v108 = type metadata accessor for URL();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v107, 1, v108))
        {
          uint64_t v109 = sub_10017DF08(&qword_100E749B0);
          memcpy(v106, v107, *(void *)(*(void *)(v109 - 8) + 64));
          uint64_t v110 = *(void *)(v108 - 8);
        }
        else
        {
          uint64_t v110 = *(void *)(v108 - 8);
          (*(void (**)(char *, char *, uint64_t))(v110 + 32))(v106, v107, v108);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v106, 0, 1, v108);
        }
        *(_OWORD *)&v102[__src[6]] = *(_OWORD *)&v103[__src[6]];
        v122 = *(void (**)(char *, char *, uint64_t))(v110 + 32);
        v122(&v102[__src[7]], &v103[__src[7]], v108);
        uint64_t v123 = __src[8];
        __dst = &v102[v123];
        uint64_t v124 = &v103[v123];
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v103[v123], 1, v108))
        {
          uint64_t v125 = sub_10017DF08(&qword_100E749B0);
          memcpy(__dst, v124, *(void *)(*(void *)(v125 - 8) + 64));
        }
        else
        {
          v122(__dst, v124, v108);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dst, 0, 1, v108);
        }
        uint64_t v5 = v534;
        uint64_t v59 = v482;
        v102[__src[9]] = v103[__src[9]];
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v102, v103, *(void *)(*(void *)(v104 - 8) + 64));
      }
      uint64_t v131 = *(int *)(v59 + 24);
      v132 = (char *)v57 + v131;
      v133 = &v58[v131];
      uint64_t v134 = type metadata accessor for DetailComponentAction();
      uint64_t v4 = v511;
      v3 = v523;
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v133, 1, v134))
      {
        uint64_t v135 = sub_10017DF08(&qword_100E73810);
        memcpy(v132, v133, *(void *)(*(void *)(v135 - 8) + 64));
      }
      else
      {
        uint64_t v136 = type metadata accessor for URL();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v136 - 8) + 32))(v132, v133, v136);
        uint64_t v137 = sub_10017DF08(&qword_100E66478);
        v132[*(int *)(v137 + 48)] = v133[*(int *)(v137 + 48)];
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v132, 0, 1, v134);
      }
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v57, 0, 1, v59);
      uint64_t v17 = v521;
    }
    uint64_t v138 = *(int *)(sub_10017DF08(&qword_100E92128) + 48);
    uint64_t v139 = (char *)v17 + v138;
    uint64_t v140 = (uint64_t)&v18[v138];
    uint64_t v141 = (int *)type metadata accessor for ConditionDetailPlatterViewModel(0);
    if (_s7Weather24LocationCompositionStateOwet_0(v140, 1, (uint64_t)v141))
    {
LABEL_32:
      uint64_t v142 = sub_10017DF08(&qword_100E66E40);
      memcpy(v139, (const void *)v140, *(void *)(*(void *)(v142 - 8) + 64));
LABEL_177:
      swift_storeEnumTagMultiPayload();
      goto LABEL_178;
    }
    uint64_t v484 = v59;
    *(_OWORD *)uint64_t v139 = *(_OWORD *)v140;
    v139[16] = *(unsigned char *)(v140 + 16);
    *(_OWORD *)(v139 + 24) = *(_OWORD *)(v140 + 24);
    uint64_t v143 = v141[6];
    v144 = &v139[v143];
    uint64_t v145 = (const void *)(v140 + v143);
    uint64_t v146 = type metadata accessor for WeatherDescription();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v145, 1, v146))
    {
      uint64_t v147 = sub_10017DF08(&qword_100E63758);
      memcpy(v144, v145, *(void *)(*(void *)(v147 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, const void *, uint64_t))(*(void *)(v146 - 8) + 32))(v144, v145, v146);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v144, 0, 1, v146);
    }
    uint64_t v148 = v141[7];
    __dstb = v139;
    v149 = &v139[v148];
    uint64_t v150 = (_OWORD *)(v140 + v148);
    uint64_t v151 = type metadata accessor for ConditionDetailPlatterViewModel.Body(0);
    __srcb = v150;
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        (*(void (**)(char *, _OWORD *, uint64_t))(*(void *)(v146 - 8) + 32))(v149, v150, v146);
        goto LABEL_128;
      case 2u:
        ((void (*)(char *, _OWORD *, void *))v499)(v149, v150, v504);
        goto LABEL_128;
      case 3u:
        uint64_t v169 = sub_10017DF08(&qword_100E73808);
        (*(void (**)(char *, _OWORD *, uint64_t))(*(void *)(v169 - 8) + 32))(v149, v150, v169);
        goto LABEL_128;
      case 4u:
        uint64_t v463 = v146;
        uint64_t v525 = v3;
        uint64_t v513 = v4;
        long long v170 = v150[1];
        *(_OWORD *)v149 = *v150;
        *((_OWORD *)v149 + 1) = v170;
        uint64_t v171 = *(int *)(v484 + 20);
        uint64_t v172 = &v149[v171];
        uint64_t v173 = (char *)v150 + v171;
        uint64_t v174 = type metadata accessor for NewsArticleComponentViewModel(0);
        uint64_t v459 = v149;
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          uint64_t v451 = v151;
          *(_OWORD *)uint64_t v172 = *(_OWORD *)v173;
          long long v449 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
          uint64_t v175 = v449[5];
          uint64_t v176 = &v172[v175];
          uint64_t v177 = &v173[v175];
          uint64_t v178 = type metadata accessor for URL();
          uint64_t v179 = (uint64_t)__dstb;
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v177, 1, v178))
          {
            uint64_t v180 = sub_10017DF08(&qword_100E749B0);
            memcpy(v176, v177, *(void *)(*(void *)(v180 - 8) + 64));
            uint64_t v181 = *(void *)(v178 - 8);
          }
          else
          {
            uint64_t v206 = v176;
            char v445 = v176;
            uint64_t v181 = *(void *)(v178 - 8);
            (*(void (**)(char *, char *, uint64_t))(v181 + 32))(v206, v177, v178);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v445, 0, 1, v178);
          }
          *(_OWORD *)&v172[v449[6]] = *(_OWORD *)&v173[v449[6]];
          uint64_t v207 = *(void (**)(char *, char *, uint64_t))(v181 + 32);
          v207(&v172[v449[7]], &v173[v449[7]], v178);
          uint64_t v208 = v449[8];
          uint64_t v446 = &v172[v208];
          uint64_t v209 = &v173[v208];
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v173[v208], 1, v178))
          {
            uint64_t v210 = sub_10017DF08(&qword_100E749B0);
            memcpy(v446, v209, *(void *)(*(void *)(v210 - 8) + 64));
          }
          else
          {
            v207(v446, v209, v178);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v446, 0, 1, v178);
          }
          uint64_t v5 = v534;
          uint64_t v151 = v451;
          v149 = v459;
          v172[v449[9]] = v173[v449[9]];
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(v172, v173, *(void *)(*(void *)(v174 - 8) + 64));
          uint64_t v179 = (uint64_t)__dstb;
        }
        uint64_t v226 = *(int *)(v484 + 24);
        uint64_t v227 = &v149[v226];
        unsigned __int8 v228 = (char *)__srcb + v226;
        uint64_t v229 = type metadata accessor for DetailComponentAction();
        uint64_t v4 = v513;
        v3 = v525;
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v228, 1, v229))
        {
          uint64_t v230 = sub_10017DF08(&qword_100E73810);
          memcpy(v227, v228, *(void *)(*(void *)(v230 - 8) + 64));
        }
        else
        {
          uint64_t v231 = type metadata accessor for URL();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v231 - 8) + 32))(v227, v228, v231);
          uint64_t v232 = sub_10017DF08(&qword_100E66478);
          v227[*(int *)(v232 + 48)] = v228[*(int *)(v232 + 48)];
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v227, 0, 1, v229);
        }
        uint64_t v146 = v463;
        swift_storeEnumTagMultiPayload();
        goto LABEL_130;
      case 6u:
        uint64_t v182 = type metadata accessor for PrecipitationTotalPlatterViewModel();
        (*(void (**)(char *, _OWORD *, uint64_t))(*(void *)(v182 - 8) + 32))(v149, v150, v182);
        goto LABEL_128;
      case 7u:
        uint64_t v464 = v146;
        uint64_t v183 = type metadata accessor for ConditionDetailDynamicContentIdentifier();
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          uint64_t v452 = v151;
          *(_OWORD *)v149 = *v150;
          uint64_t v184 = (int *)type metadata accessor for ConditionDetailMapViewModel();
          ((void (*)(char *, char *, uint64_t))v490)(&v149[v184[5]], (char *)v150 + v184[5], v493);
          uint64_t v185 = v184[6];
          int v526 = &v149[v185];
          uint64_t v186 = (_OWORD *)((char *)v150 + v185);
          uint64_t v443 = (int *)type metadata accessor for WeatherData(0);
          uint64_t v460 = v149;
          v514 = v184;
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v186, 1, (uint64_t)v443))
          {
            uint64_t v187 = sub_10017DF08(&qword_100E63850);
            memcpy(v526, v186, *(void *)(*(void *)(v187 - 8) + 64));
          }
          else
          {
            *(_OWORD *)int v526 = *v186;
            uint64_t v211 = v443[5];
            long long v212 = &v526[v211];
            uint64_t v213 = (char *)v186 + v211;
            uint64_t v214 = type metadata accessor for Locale();
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v213, 1, v214))
            {
              uint64_t v215 = sub_10017DF08(&qword_100E63730);
              memcpy(v212, v213, *(void *)(*(void *)(v215 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v214 - 8) + 32))(v212, v213, v214);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v212, 0, 1, v214);
            }
            uint64_t v240 = v443[6];
            uint64_t v241 = &v526[v240];
            uint64_t v242 = (char *)v186 + v240;
            uint64_t v243 = type metadata accessor for WeatherDataModel();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v243 - 8) + 32))(v241, v242, v243);
            uint64_t v244 = v443[7];
            uint64_t v245 = &v526[v244];
            unsigned __int8 v246 = (char *)v186 + v244;
            uint64_t v247 = sub_10017DF08(&qword_100E63738);
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v246, 1, v247))
            {
              uint64_t v248 = type metadata accessor for WeatherData.CachingState(0);
              memcpy(v245, v246, *(void *)(*(void *)(v248 - 8) + 64));
            }
            else
            {
              v486(v245, v246, v488);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v245, 0, 1, v247);
            }
            uint64_t v258 = v443[8];
            uint64_t v259 = &v526[v258];
            uint64_t v260 = (char *)v186 + v258;
            uint64_t v261 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
            if (swift_getEnumCaseMultiPayload() == 1)
            {
              uint64_t v262 = type metadata accessor for WeatherStatisticsModel();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v262 - 8) + 32))(v259, v260, v262);
              swift_storeEnumTagMultiPayload();
            }
            else
            {
              memcpy(v259, v260, *(void *)(*(void *)(v261 - 8) + 64));
            }
            uint64_t v263 = v443[9];
            uint64_t v264 = &v526[v263];
            uint64_t v265 = (char *)v186 + v263;
            uint64_t v266 = type metadata accessor for WeatherDataOverrides();
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v265, 1, v266))
            {
              uint64_t v267 = v264;
              uint64_t v268 = (uint64_t)v443;
              uint64_t v269 = sub_10017DF08(&qword_100E63740);
              memcpy(v267, v265, *(void *)(*(void *)(v269 - 8) + 64));
              v149 = v460;
              uint64_t v184 = v514;
            }
            else
            {
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v265, 1, v488))
              {
                uint64_t v282 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
                memcpy(v264, v265, *(void *)(*(void *)(v282 - 8) + 64));
              }
              else
              {
                v486(v264, v265, v488);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v264, 0, 1, v488);
              }
              uint64_t v284 = v264;
              uint64_t v268 = (uint64_t)v443;
              uint64_t v285 = *(int *)(v266 + 20);
              uint64_t v441 = (uint64_t)v284;
              v286 = &v284[v285];
              uint64_t v287 = &v265[v285];
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v287, 1, v488))
              {
                uint64_t v288 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
                memcpy(v286, v287, *(void *)(*(void *)(v288 - 8) + 64));
              }
              else
              {
                v486(v286, v287, v488);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v286, 0, 1, v488);
              }
              uint64_t v150 = __srcb;
              uint64_t v184 = v514;
              _s7Weather24LocationCompositionStateOwst_0(v441, 0, 1, v266);
              v149 = v460;
            }
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v526, 0, 1, v268);
          }
          uint64_t v146 = v464;
          *(_OWORD *)&v149[v184[7]] = *(_OWORD *)((char *)v150 + v184[7]);
          uint64_t v294 = v184[8];
          uint64_t v295 = &v149[v294];
          uint64_t v296 = (char *)v150 + v294;
          uint64_t v297 = type metadata accessor for WeatherMapOverlayKind();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v297 - 8) + 32))(v295, v296, v297);
          v460[v514[9]] = *((unsigned char *)v150 + v514[9]);
          swift_storeEnumTagMultiPayload();
          uint64_t v151 = v452;
        }
        else
        {
          memcpy(v149, v150, *(void *)(*(void *)(v183 - 8) + 64));
          uint64_t v146 = v464;
        }
LABEL_128:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v149, v150, *(void *)(*(void *)(v151 - 8) + 64));
        break;
    }
    uint64_t v179 = (uint64_t)__dstb;
LABEL_130:
    __srcd = v141;
    uint64_t v298 = v141[8];
    v299 = (_OWORD *)(v179 + v298);
    uint64_t v300 = (_OWORD *)(v140 + v298);
    if (!_s7Weather24LocationCompositionStateOwet_0(v140 + v298, 1, v151))
    {
      char __dstd = v300;
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v146 - 8) + 32))(v299, v300, v146);
          goto LABEL_140;
        case 2u:
          ((void (*)(_OWORD *, _OWORD *, void *))v499)(v299, v300, v504);
          goto LABEL_140;
        case 3u:
          uint64_t v301 = sub_10017DF08(&qword_100E73808);
          (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v301 - 8) + 32))(v299, v300, v301);
          goto LABEL_140;
        case 4u:
          uint64_t v529 = v3;
          uint64_t v517 = v4;
          long long v302 = v300[1];
          _OWORD *v299 = *v300;
          v299[1] = v302;
          uint64_t v303 = *(int *)(v484 + 20);
          v304 = (char *)v299 + v303;
          uint64_t v305 = (char *)v300 + v303;
          uint64_t v306 = type metadata accessor for NewsArticleComponentViewModel(0);
          uint64_t v467 = v299;
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            uint64_t v455 = v151;
            *(_OWORD *)v304 = *(_OWORD *)v305;
            uint64_t v307 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
            uint64_t v308 = v307[5];
            uint64_t v309 = &v304[v308];
            v310 = &v305[v308];
            uint64_t v311 = type metadata accessor for URL();
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v310, 1, v311))
            {
              uint64_t v312 = sub_10017DF08(&qword_100E749B0);
              memcpy(v309, v310, *(void *)(*(void *)(v312 - 8) + 64));
              uint64_t v313 = *(void *)(v311 - 8);
            }
            else
            {
              uint64_t v324 = v309;
              uint64_t v507 = v309;
              uint64_t v313 = *(void *)(v311 - 8);
              (*(void (**)(char *, char *, uint64_t))(v313 + 32))(v324, v310, v311);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v507, 0, 1, v311);
            }
            *(_OWORD *)&v304[v307[6]] = *(_OWORD *)&v305[v307[6]];
            uint64_t v325 = *(void (**)(char *, char *, uint64_t))(v313 + 32);
            v325(&v304[v307[7]], &v305[v307[7]], v311);
            uint64_t v326 = v307[8];
            uint64_t v501 = v307;
            uint64_t v508 = &v304[v326];
            uint64_t v327 = &v305[v326];
            uint64_t v315 = (uint64_t)__srcd;
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v305[v326], 1, v311))
            {
              uint64_t v328 = sub_10017DF08(&qword_100E749B0);
              memcpy(v508, v327, *(void *)(*(void *)(v328 - 8) + 64));
            }
            else
            {
              v325(v508, v327, v311);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v508, 0, 1, v311);
            }
            uint64_t v5 = v534;
            uint64_t v151 = v455;
            v299 = v467;
            v304[v501[9]] = v305[v501[9]];
            swift_storeEnumTagMultiPayload();
          }
          else
          {
            memcpy(v304, v305, *(void *)(*(void *)(v306 - 8) + 64));
            uint64_t v315 = (uint64_t)__srcd;
          }
          uint64_t v334 = *(int *)(v484 + 24);
          int v335 = (char *)v299 + v334;
          uint64_t v336 = (char *)__dstd + v334;
          uint64_t v337 = type metadata accessor for DetailComponentAction();
          uint64_t v4 = v517;
          v3 = v529;
          if (!_s7Weather24LocationCompositionStateOwet_0((uint64_t)v336, 1, v337)) {
            goto LABEL_193;
          }
          goto LABEL_192;
        case 6u:
          uint64_t v314 = type metadata accessor for PrecipitationTotalPlatterViewModel();
          (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v314 - 8) + 32))(v299, v300, v314);
LABEL_140:
          swift_storeEnumTagMultiPayload();
          goto LABEL_141;
        case 7u:
          uint64_t v316 = type metadata accessor for ConditionDetailDynamicContentIdentifier();
          uint64_t v317 = __dstd;
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            uint64_t v456 = v151;
            uint64_t v530 = v3;
            uint64_t v518 = v4;
            _OWORD *v299 = *__dstd;
            uint64_t v318 = (int *)type metadata accessor for ConditionDetailMapViewModel();
            ((void (*)(char *, char *, uint64_t))v490)((char *)v299 + v318[5], (char *)__dstd + v318[5], v493);
            uint64_t v319 = v318[6];
            uint64_t v320 = (_OWORD *)((char *)v299 + v319);
            uint64_t v321 = (_OWORD *)((char *)__dstd + v319);
            uint64_t v322 = (int *)type metadata accessor for WeatherData(0);
            uint64_t v506 = v318;
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v321, 1, (uint64_t)v322))
            {
              uint64_t v323 = sub_10017DF08(&qword_100E63850);
              memcpy(v320, v321, *(void *)(*(void *)(v323 - 8) + 64));
              uint64_t v4 = v518;
              v3 = v530;
            }
            else
            {
              uint64_t v468 = v299;
              _OWORD *v320 = *v321;
              uint64_t v329 = v322[5];
              int v330 = (char *)v320 + v329;
              uint64_t v331 = (char *)v321 + v329;
              uint64_t v332 = type metadata accessor for Locale();
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v331, 1, v332))
              {
                uint64_t v333 = sub_10017DF08(&qword_100E63730);
                memcpy(v330, v331, *(void *)(*(void *)(v333 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v332 - 8) + 32))(v330, v331, v332);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v330, 0, 1, v332);
              }
              uint64_t v381 = v322[6];
              uint64_t v382 = (char *)v320 + v381;
              v383 = (char *)v321 + v381;
              uint64_t v384 = type metadata accessor for WeatherDataModel();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v384 - 8) + 32))(v382, v383, v384);
              uint64_t v385 = v322[7];
              uint64_t v386 = (char *)v320 + v385;
              uint64_t v387 = (char *)v321 + v385;
              uint64_t v388 = sub_10017DF08(&qword_100E63738);
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v387, 1, v388))
              {
                uint64_t v389 = type metadata accessor for WeatherData.CachingState(0);
                memcpy(v386, v387, *(void *)(*(void *)(v389 - 8) + 64));
              }
              else
              {
                v486(v386, v387, v488);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v386, 0, 1, v388);
              }
              uint64_t v399 = v322[8];
              uint64_t v400 = (char *)v320 + v399;
              v401 = (char *)v321 + v399;
              uint64_t v402 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
              if (swift_getEnumCaseMultiPayload() == 1)
              {
                uint64_t v403 = type metadata accessor for WeatherStatisticsModel();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v403 - 8) + 32))(v400, v401, v403);
                swift_storeEnumTagMultiPayload();
              }
              else
              {
                memcpy(v400, v401, *(void *)(*(void *)(v402 - 8) + 64));
              }
              uint64_t v496 = (uint64_t)v322;
              uint64_t v498 = (uint64_t)v320;
              uint64_t v404 = v322[9];
              v405 = (char *)v320 + v404;
              uint64_t v406 = (char *)v321 + v404;
              uint64_t v407 = type metadata accessor for WeatherDataOverrides();
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v406, 1, v407))
              {
                uint64_t v408 = sub_10017DF08(&qword_100E63740);
                memcpy(v405, v406, *(void *)(*(void *)(v408 - 8) + 64));
                uint64_t v4 = v518;
                v3 = v530;
                v299 = v468;
                uint64_t v318 = v506;
              }
              else
              {
                uint64_t v4 = v518;
                if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v406, 1, v488))
                {
                  uint64_t v420 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
                  memcpy(v405, v406, *(void *)(*(void *)(v420 - 8) + 64));
                }
                else
                {
                  v486(v405, v406, v488);
                  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v405, 0, 1, v488);
                }
                v3 = v530;
                uint64_t v422 = *(int *)(v407 + 20);
                uint64_t v533 = &v405[v422];
                uint64_t v423 = &v406[v422];
                if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v423, 1, v488))
                {
                  uint64_t v424 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
                  memcpy(v533, v423, *(void *)(*(void *)(v424 - 8) + 64));
                }
                else
                {
                  v486(v533, v423, v488);
                  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v533, 0, 1, v488);
                }
                uint64_t v318 = v506;
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v405, 0, 1, v407);
                v299 = v468;
              }
              _s7Weather24LocationCompositionStateOwst_0(v498, 0, 1, v496);
              uint64_t v317 = __dstd;
            }
            *(_OWORD *)((char *)v299 + v318[7]) = *(_OWORD *)((char *)v317 + v318[7]);
            uint64_t v428 = v318[8];
            uint64_t v429 = (char *)v299 + v428;
            uint64_t v430 = v317;
            uint64_t v431 = v299;
            uint64_t v432 = (uint64_t)v430 + v428;
            uint64_t v433 = type metadata accessor for WeatherMapOverlayKind();
            uint64_t v434 = v432;
            v299 = v431;
            (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v433 - 8) + 32))(v429, v434, v433);
            *((unsigned char *)v431 + v506[9]) = *((unsigned char *)v430 + v506[9]);
            swift_storeEnumTagMultiPayload();
            uint64_t v151 = v456;
          }
          else
          {
            memcpy(v299, __dstd, *(void *)(*(void *)(v316 - 8) + 64));
          }
          uint64_t v315 = (uint64_t)__srcd;
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v299, v300, *(void *)(*(void *)(v151 - 8) + 64));
LABEL_141:
          uint64_t v315 = (uint64_t)__srcd;
          break;
      }
LABEL_175:
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v299, 0, 1, v151);
      goto LABEL_176;
    }
    goto LABEL_163;
  }
  memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
LABEL_178:
  uint64_t v358 = v3[8];
  *(unsigned char *)(v5 + v3[7]) = *(unsigned char *)(v4 + v3[7]);
  *(void *)(v5 + v358) = *(void *)(v4 + v358);
  *(void *)(v5 + v3[9]) = *(void *)(v4 + v3[9]);
  return v5;
}

uint64_t sub_100976A9C(uint64_t a1, void *a2, int *a3)
{
  uint64_t v4 = a2;
  *(void *)a1 = *a2;
  swift_release();
  *(void *)(a1 + 8) = v4[1];
  swift_release();
  *(_OWORD *)(a1 + 16) = *((_OWORD *)v4 + 1);
  *(unsigned char *)(a1 + 32) = *((unsigned char *)v4 + 32);
  uint64_t v6 = a3[5];
  uint64_t v7 = a1 + v6;
  v8 = (char *)v4 + v6;
  *(void *)(a1 + v6) = *(void *)((char *)v4 + v6);
  swift_release();
  *(void *)(v7 + 8) = *((void *)v8 + 1);
  swift_release();
  uint64_t v9 = *(int *)(sub_10017DF08(&qword_100EA37A0) + 32);
  uint64_t v10 = (void *)(v7 + v9);
  uint64_t v11 = &v8[v9];
  uint64_t v12 = type metadata accessor for DetailChartDataElement();
  int v13 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v10, 1, v12);
  int v14 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v11, 1, v12);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v10, v11, v12);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v10, 0, 1, v12);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v15 = *(void *)(v12 - 8);
  if (v14)
  {
    (*(void (**)(void *, uint64_t))(v15 + 8))(v10, v12);
LABEL_6:
    uint64_t v16 = sub_10017DF08(&qword_100E6B640);
    memcpy(v10, v11, *(void *)(*(void *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, char *, uint64_t))(v15 + 40))(v10, v11, v12);
LABEL_7:
  if ((void *)a1 != v4)
  {
    uint64_t v17 = a3[6];
    uint64_t v18 = (_OWORD *)(a1 + v17);
    uint64_t v19 = (char *)v4 + v17;
    sub_100964CC4(a1 + v17, (void (*)(void))type metadata accessor for SunriseSunsetDetailViewModel);
    uint64_t v20 = type metadata accessor for SunriseSunsetDetailViewModel();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      long long v62 = *((_OWORD *)v19 + 1);
      _OWORD *v18 = *(_OWORD *)v19;
      v18[1] = v62;
      uint64_t v63 = (int *)_s10PolarModelVMa();
      uint64_t v64 = v63[6];
      uint64_t v65 = (char *)v18 + v64;
      uint64_t v66 = &v19[v64];
      uint64_t v67 = type metadata accessor for PolarType();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v67 - 8) + 32))(v65, v66, v67);
      uint64_t v68 = v63[7];
      uint64_t v69 = (char *)v18 + v68;
      uint64_t v70 = &v19[v68];
      uint64_t v71 = type metadata accessor for Date();
      uint64_t v500 = *(void (**)(char *, char *))(*(void *)(v71 - 8) + 32);
      uint64_t v502 = v71;
      v500(v69, v70);
      uint64_t v72 = v63[8];
      v73 = (char *)v18 + v72;
      uint64_t v74 = &v19[v72];
      uint64_t v75 = type metadata accessor for TimeZone();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v75 - 8) + 32))(v73, v74, v75);
      uint64_t v76 = v63[9];
      v77 = (char *)v18 + v76;
      uint64_t v78 = &v19[v76];
      uint64_t v523 = type metadata accessor for AttributedString();
      uint64_t v518 = *(void (**)(char *, char *))(*(void *)(v523 - 8) + 32);
      v518(v77, v78);
      *(void *)((char *)v18 + v63[10]) = *(void *)&v19[v63[10]];
      *(_OWORD *)((char *)v18 + v63[11]) = *(_OWORD *)&v19[v63[11]];
      uint64_t v79 = v63[12];
      uint64_t v80 = (char *)v18 + v79;
      v81 = &v19[v79];
      uint64_t v82 = type metadata accessor for SunriseSunsetDetailChartViewModel();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v82 - 8) + 32))(v80, v81, v82);
      uint64_t v83 = v63[13];
      v84 = (char *)v18 + v83;
      v85 = &v19[v83];
      uint64_t v86 = type metadata accessor for Location();
      char v504 = *(void (**)(char *, char *))(*(void *)(v86 - 8) + 32);
      uint64_t v506 = v86;
      v504(v84, v85);
      uint64_t v87 = v63[14];
      v88 = (char *)v18 + v87;
      uint64_t v89 = &v19[v87];
      uint64_t v90 = type metadata accessor for DaylightStringBuilder();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v90 - 8) + 32))(v88, v89, v90);
      uint64_t v91 = v63[15];
      v92 = (char *)v18 + v91;
      uint64_t v93 = &v19[v91];
      uint64_t v94 = type metadata accessor for OverviewTableViewModel();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v94 - 8) + 32))(v92, v93, v94);
      uint64_t v95 = v63[16];
      uint64_t v96 = (_OWORD *)((char *)v18 + v95);
      uint64_t v97 = &v19[v95];
      uint64_t v98 = type metadata accessor for DetailComponentContainerViewModel();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v97, 1, v98))
      {
        uint64_t v99 = sub_10017DF08(&qword_100E66E28);
        memcpy(v96, v97, *(void *)(*(void *)(v99 - 8) + 64));
      }
      else
      {
        long long v111 = *((_OWORD *)v97 + 1);
        *uint64_t v96 = *(_OWORD *)v97;
        v96[1] = v111;
        uint64_t v112 = *(int *)(v98 + 20);
        uint64_t v539 = (uint64_t)v96;
        uint64_t v113 = (char *)v96 + v112;
        uint64_t v114 = &v97[v112];
        uint64_t v115 = type metadata accessor for NewsArticleComponentViewModel(0);
        uint64_t v543 = v98;
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          uint64_t v498 = v18;
          uint64_t v529 = a3;
          *(_OWORD *)uint64_t v113 = *(_OWORD *)v114;
          uint64_t v493 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
          uint64_t v116 = v493[5];
          v117 = &v113[v116];
          uint64_t v477 = v114;
          uint64_t v118 = &v114[v116];
          uint64_t v119 = type metadata accessor for URL();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v118, 1, v119))
          {
            uint64_t v120 = sub_10017DF08(&qword_100E749B0);
            memcpy(v117, v118, *(void *)(*(void *)(v120 - 8) + 64));
            uint64_t v121 = *(void *)(v119 - 8);
          }
          else
          {
            uint64_t v121 = *(void *)(v119 - 8);
            (*(void (**)(char *, char *, uint64_t))(v121 + 32))(v117, v118, v119);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v117, 0, 1, v119);
          }
          *(_OWORD *)&v113[v493[6]] = *(_OWORD *)&v477[v493[6]];
          uint64_t v472 = *(void (**)(char *, char *, uint64_t))(v121 + 32);
          v472(&v113[v493[7]], &v477[v493[7]], v119);
          uint64_t v125 = v493[8];
          uint64_t v126 = &v113[v125];
          v127 = &v477[v125];
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v477[v125], 1, v119))
          {
            uint64_t v128 = sub_10017DF08(&qword_100E749B0);
            memcpy(v126, v127, *(void *)(*(void *)(v128 - 8) + 64));
          }
          else
          {
            v472(v126, v127, v119);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v126, 0, 1, v119);
          }
          uint64_t v18 = v498;
          uint64_t v98 = v543;
          v113[v493[9]] = v477[v493[9]];
          swift_storeEnumTagMultiPayload();
          a3 = v529;
        }
        else
        {
          memcpy(v113, v114, *(void *)(*(void *)(v115 - 8) + 64));
        }
        uint64_t v149 = *(int *)(v98 + 24);
        uint64_t v150 = (void *)(v539 + v149);
        uint64_t v151 = &v97[v149];
        uint64_t v152 = type metadata accessor for DetailComponentAction();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v151, 1, v152))
        {
          uint64_t v153 = sub_10017DF08(&qword_100E73810);
          memcpy(v150, v151, *(void *)(*(void *)(v153 - 8) + 64));
        }
        else
        {
          uint64_t v154 = type metadata accessor for URL();
          (*(void (**)(void *, char *, uint64_t))(*(void *)(v154 - 8) + 32))(v150, v151, v154);
          uint64_t v155 = sub_10017DF08(&qword_100E66478);
          *((unsigned char *)v150 + *(int *)(v155 + 48)) = v151[*(int *)(v155 + 48)];
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v150, 0, 1, v152);
        }
        uint64_t v98 = v543;
        _s7Weather24LocationCompositionStateOwst_0(v539, 0, 1, v543);
      }
      uint64_t v156 = *(int *)(sub_10017DF08(&qword_100E92130) + 48);
      uint64_t v137 = (uint64_t)v18 + v156;
      uint64_t v138 = (uint64_t)&v19[v156];
      uint64_t v157 = type metadata accessor for ConditionDetailPlatterViewModel(0);
      if (_s7Weather24LocationCompositionStateOwet_0(v138, 1, v157)) {
        goto LABEL_37;
      }
      uint64_t v541 = v157;
      uint64_t v545 = v98;
      *(_OWORD *)uint64_t v137 = *(_OWORD *)v138;
      *(unsigned char *)(v137 + 16) = *(unsigned char *)(v138 + 16);
      *(_OWORD *)(v137 + 24) = *(_OWORD *)(v138 + 24);
      uint64_t v158 = *(int *)(v157 + 24);
      uint64_t v159 = (void *)(v137 + v158);
      v160 = (const void *)(v138 + v158);
      uint64_t v161 = type metadata accessor for WeatherDescription();
      __dsta = (void *)v161;
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v160, 1, v161))
      {
        uint64_t v162 = sub_10017DF08(&qword_100E63758);
        memcpy(v159, v160, *(void *)(*(void *)(v162 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v161 - 8) + 32))(v159, v160, v161);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v159, 0, 1, v161);
      }
      uint64_t v163 = v541;
      uint64_t v164 = *(int *)(v541 + 28);
      uint64_t v495 = (_OWORD *)(v137 + v164);
      uint64_t v165 = (char *)(v138 + v164);
      uint64_t v166 = type metadata accessor for ConditionDetailPlatterViewModel.Body(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          (*(void (**)(_OWORD *, char *))(*(__dsta - 1) + 32))(v495, v165);
          goto LABEL_72;
        case 2u:
          ((void (*)(_OWORD *, char *, uint64_t))v518)(v495, v165, v523);
          goto LABEL_72;
        case 3u:
          uint64_t v188 = sub_10017DF08(&qword_100E73808);
          (*(void (**)(_OWORD *, char *, uint64_t))(*(void *)(v188 - 8) + 32))(v495, v165, v188);
          goto LABEL_72;
        case 4u:
          long long v189 = *((_OWORD *)v165 + 1);
          *uint64_t v495 = *(_OWORD *)v165;
          v495[1] = v189;
          uint64_t v190 = *(int *)(v545 + 20);
          uint64_t v191 = (_OWORD *)((char *)v495 + v190);
          uint64_t v475 = v165;
          uint64_t v192 = &v165[v190];
          uint64_t v193 = type metadata accessor for NewsArticleComponentViewModel(0);
          uint64_t v531 = a3;
          uint64_t v480 = v166;
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            *uint64_t v191 = *(_OWORD *)v192;
            uint64_t v194 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
            uint64_t v195 = v194[5];
            uint64_t v196 = (char *)v191 + v195;
            uint64_t v197 = &v192[v195];
            uint64_t v198 = type metadata accessor for URL();
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v197, 1, v198))
            {
              uint64_t v199 = sub_10017DF08(&qword_100E749B0);
              memcpy(v196, v197, *(void *)(*(void *)(v199 - 8) + 64));
              uint64_t v200 = *(void (***)(void *, const void *, uint64_t))(v198 - 8);
            }
            else
            {
              uint64_t v466 = *(void (***)(void *, const void *, uint64_t))(v198 - 8);
              v466[4](v196, v197, v198);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v196, 0, 1, v198);
              uint64_t v200 = v466;
            }
            *(_OWORD *)((char *)v191 + v194[6]) = *(_OWORD *)&v192[v194[6]];
            uint64_t v461 = v200[4];
            v461((char *)v191 + v194[7], &v192[v194[7]], v198);
            uint64_t v467 = v194;
            uint64_t v220 = v194[8];
            uint64_t v221 = (char *)v191 + v220;
            uint64_t v222 = &v192[v220];
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v192[v220], 1, v198))
            {
              uint64_t v223 = sub_10017DF08(&qword_100E749B0);
              memcpy(v221, v222, *(void *)(*(void *)(v223 - 8) + 64));
            }
            else
            {
              v461(v221, v222, v198);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v221, 0, 1, v198);
            }
            uint64_t v210 = v545;
            *((unsigned char *)v191 + v467[9]) = v192[v467[9]];
            swift_storeEnumTagMultiPayload();
          }
          else
          {
            memcpy(v191, v192, *(void *)(*(void *)(v193 - 8) + 64));
            uint64_t v210 = v545;
          }
          uint64_t v237 = *(int *)(v210 + 24);
          uint64_t v238 = (char *)v495 + v237;
          uint64_t v239 = &v475[v237];
          uint64_t v240 = type metadata accessor for DetailComponentAction();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v239, 1, v240))
          {
            uint64_t v241 = sub_10017DF08(&qword_100E73810);
            memcpy(v238, v239, *(void *)(*(void *)(v241 - 8) + 64));
          }
          else
          {
            uint64_t v242 = type metadata accessor for URL();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v242 - 8) + 32))(v238, v239, v242);
            uint64_t v243 = sub_10017DF08(&qword_100E66478);
            v238[*(int *)(v243 + 48)] = v239[*(int *)(v243 + 48)];
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v238, 0, 1, v240);
          }
          a3 = v531;
          uint64_t v166 = v480;
          swift_storeEnumTagMultiPayload();
          uint64_t v163 = v541;
          break;
        case 6u:
          uint64_t v201 = type metadata accessor for PrecipitationTotalPlatterViewModel();
          (*(void (**)(_OWORD *, char *, uint64_t))(*(void *)(v201 - 8) + 32))(v495, v165, v201);
LABEL_72:
          swift_storeEnumTagMultiPayload();
          break;
        case 7u:
          uint64_t v470 = v137;
          uint64_t v202 = type metadata accessor for ConditionDetailDynamicContentIdentifier();
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            uint64_t v481 = v166;
            uint64_t v203 = v495;
            *uint64_t v495 = *(_OWORD *)v165;
            uint64_t v204 = type metadata accessor for ConditionDetailMapViewModel();
            ((void (*)(char *, char *, uint64_t))v504)((char *)v495 + *(int *)(v204 + 20), &v165[*(int *)(v204 + 20)], v506);
            uint64_t v205 = *(int *)(v204 + 24);
            uint64_t v460 = (_OWORD *)((char *)v495 + v205);
            uint64_t v463 = (int *)v204;
            uint64_t v206 = &v165[v205];
            uint64_t v207 = (int *)type metadata accessor for WeatherData(0);
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v206, 1, (uint64_t)v207))
            {
              uint64_t v208 = sub_10017DF08(&qword_100E63850);
              memcpy(v460, v206, *(void *)(*(void *)(v208 - 8) + 64));
            }
            else
            {
              uint64_t v476 = v165;
              uint64_t v533 = a3;
              _OWORD *v460 = *(_OWORD *)v206;
              uint64_t v224 = v207[5];
              uint64_t v225 = (char *)v460 + v224;
              uint64_t v226 = &v206[v224];
              uint64_t v227 = type metadata accessor for Locale();
              unsigned __int8 v228 = v206;
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v226, 1, v227))
              {
                uint64_t v229 = sub_10017DF08(&qword_100E63730);
                memcpy(v225, v226, *(void *)(*(void *)(v229 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v227 - 8) + 32))(v225, v226, v227);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v225, 0, 1, v227);
              }
              uint64_t v253 = v207[6];
              uint64_t v254 = (char *)v460 + v253;
              uint64_t v255 = (char *)v228 + v253;
              uint64_t v256 = type metadata accessor for WeatherDataModel();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v256 - 8) + 32))(v254, v255, v256);
              uint64_t v257 = v207[7];
              uint64_t v258 = (char *)v460 + v257;
              uint64_t v259 = (char *)v228 + v257;
              uint64_t v260 = sub_10017DF08(&qword_100E63738);
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v259, 1, v260))
              {
                uint64_t v261 = type metadata accessor for WeatherData.CachingState(0);
                memcpy(v258, v259, *(void *)(*(void *)(v261 - 8) + 64));
              }
              else
              {
                ((void (*)(char *, char *, uint64_t))v500)(v258, v259, v502);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v258, 0, 1, v260);
              }
              uint64_t v272 = v207[8];
              uint64_t v273 = (char *)v460 + v272;
              uint64_t v274 = (char *)v228 + v272;
              uint64_t v275 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
              if (swift_getEnumCaseMultiPayload() == 1)
              {
                uint64_t v276 = type metadata accessor for WeatherStatisticsModel();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v276 - 8) + 32))(v273, v274, v276);
                swift_storeEnumTagMultiPayload();
              }
              else
              {
                memcpy(v273, v274, *(void *)(*(void *)(v275 - 8) + 64));
              }
              uint64_t v277 = v207[9];
              uint64_t v278 = (char *)v460 + v277;
              v279 = (char *)v228 + v277;
              uint64_t v280 = type metadata accessor for WeatherDataOverrides();
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v279, 1, v280))
              {
                uint64_t v281 = sub_10017DF08(&qword_100E63740);
                memcpy(v278, v279, *(void *)(*(void *)(v281 - 8) + 64));
                a3 = v533;
              }
              else
              {
                if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v279, 1, v502))
                {
                  uint64_t v283 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
                  memcpy(v278, v279, *(void *)(*(void *)(v283 - 8) + 64));
                }
                else
                {
                  ((void (*)(char *, char *, uint64_t))v500)(v278, v279, v502);
                  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v278, 0, 1, v502);
                }
                uint64_t v288 = *(int *)(v280 + 20);
                uint64_t v289 = &v278[v288];
                uint64_t v290 = &v279[v288];
                if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v290, 1, v502))
                {
                  uint64_t v291 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
                  memcpy(v289, v290, *(void *)(*(void *)(v291 - 8) + 64));
                }
                else
                {
                  ((void (*)(char *, char *, uint64_t))v500)(v289, v290, v502);
                  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v289, 0, 1, v502);
                }
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v278, 0, 1, v280);
                a3 = v533;
              }
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v460, 0, 1, (uint64_t)v207);
              uint64_t v203 = v495;
              uint64_t v165 = v476;
            }
            *(_OWORD *)((char *)v203 + v463[7]) = *(_OWORD *)&v165[v463[7]];
            uint64_t v343 = v463[8];
            uint64_t v344 = (char *)v203 + v343;
            long long v345 = &v165[v343];
            uint64_t v346 = type metadata accessor for WeatherMapOverlayKind();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v346 - 8) + 32))(v344, v345, v346);
            *((unsigned char *)v203 + v463[9]) = v165[v463[9]];
            swift_storeEnumTagMultiPayload();
            uint64_t v166 = v481;
            uint64_t v163 = v541;
          }
          else
          {
            memcpy(v495, v165, *(void *)(*(void *)(v202 - 8) + 64));
          }
          swift_storeEnumTagMultiPayload();
          uint64_t v137 = v470;
          break;
        default:
          memcpy(v495, v165, *(void *)(*(void *)(v166 - 8) + 64));
          break;
      }
      uint64_t v347 = *(int *)(v163 + 32);
      uint64_t v348 = (_OWORD *)(v137 + v347);
      uint64_t v349 = (_OWORD *)(v138 + v347);
      if (_s7Weather24LocationCompositionStateOwet_0(v138 + v347, 1, v166))
      {
        uint64_t v350 = sub_10017DF08(&qword_100E73818);
        memcpy(v348, v349, *(void *)(*(void *)(v350 - 8) + 64));
        uint64_t v299 = v541;
      }
      else
      {
        uint64_t v496 = v348;
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            uint64_t v351 = (uint64_t)v348;
            (*(void (**)(void))(*(__dsta - 1) + 32))();
            goto LABEL_194;
          case 2u:
            v353 = v349;
            uint64_t v351 = (uint64_t)v348;
            ((void (*)(_OWORD *, _OWORD *, uint64_t))v518)(v348, v353, v523);
            goto LABEL_194;
          case 3u:
            uint64_t v354 = sub_10017DF08(&qword_100E73808);
            uint64_t v355 = v349;
            uint64_t v351 = (uint64_t)v348;
            (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v354 - 8) + 32))(v348, v355, v354);
            goto LABEL_194;
          case 4u:
            uint64_t v536 = a3;
            long long v356 = v349[1];
            *uint64_t v348 = *v349;
            v348[1] = v356;
            uint64_t v357 = *(int *)(v545 + 20);
            uint64_t v358 = (_OWORD *)((char *)v348 + v357);
            int v526 = v349;
            v359 = (_OWORD *)((char *)v349 + v357);
            uint64_t v360 = type metadata accessor for NewsArticleComponentViewModel(0);
            uint64_t v484 = v166;
            if (swift_getEnumCaseMultiPayload() == 1)
            {
              *uint64_t v358 = *v359;
              uint64_t v361 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
              uint64_t v362 = v361[5];
              v363 = (char *)v358 + v362;
              uint64_t v364 = (char *)v359 + v362;
              uint64_t v365 = type metadata accessor for URL();
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v364, 1, v365))
              {
                uint64_t v366 = sub_10017DF08(&qword_100E749B0);
                memcpy(v363, v364, *(void *)(*(void *)(v366 - 8) + 64));
                uint64_t v367 = *(void (***)(void *, const void *, uint64_t))(v365 - 8);
              }
              else
              {
                uint64_t v513 = *(void (***)(void *, const void *, uint64_t))(v365 - 8);
                v513[4](v363, v364, v365);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v363, 0, 1, v365);
                uint64_t v367 = v513;
              }
              *(_OWORD *)((char *)v358 + v361[6]) = *(_OWORD *)((char *)v359 + v361[6]);
              uint64_t v508 = v367[4];
              v508((char *)v358 + v361[7], (char *)v359 + v361[7], v365);
              v514 = v361;
              uint64_t v380 = v361[8];
              uint64_t v381 = (char *)v358 + v380;
              uint64_t v382 = (char *)v359 + v380;
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v359 + v380, 1, v365))
              {
                uint64_t v383 = sub_10017DF08(&qword_100E749B0);
                memcpy(v381, v382, *(void *)(*(void *)(v383 - 8) + 64));
              }
              else
              {
                v508(v381, v382, v365);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v381, 0, 1, v365);
              }
              uint64_t v378 = v545;
              *((unsigned char *)v358 + v514[9]) = *((unsigned char *)v359 + v514[9]);
              swift_storeEnumTagMultiPayload();
            }
            else
            {
              memcpy(v358, v359, *(void *)(*(void *)(v360 - 8) + 64));
              uint64_t v378 = v545;
            }
            uint64_t v389 = *(int *)(v378 + 24);
            uint64_t v390 = &v496[v389];
            uint64_t v391 = (char *)v526 + v389;
            uint64_t v392 = type metadata accessor for DetailComponentAction();
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v391, 1, v392))
            {
              uint64_t v393 = sub_10017DF08(&qword_100E73810);
              memcpy(v390, v391, *(void *)(*(void *)(v393 - 8) + 64));
            }
            else
            {
              uint64_t v394 = type metadata accessor for URL();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v394 - 8) + 32))(v390, v391, v394);
              uint64_t v395 = sub_10017DF08(&qword_100E66478);
              v390[*(int *)(v395 + 48)] = v391[*(int *)(v395 + 48)];
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v390, 0, 1, v392);
            }
            a3 = v536;
            uint64_t v351 = (uint64_t)v496;
            uint64_t v166 = v484;
            goto LABEL_194;
          case 6u:
            uint64_t v368 = type metadata accessor for PrecipitationTotalPlatterViewModel();
            uint64_t v369 = v349;
            uint64_t v351 = (uint64_t)v348;
            (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v368 - 8) + 32))(v348, v369, v368);
LABEL_194:
            swift_storeEnumTagMultiPayload();
            break;
          case 7u:
            uint64_t v537 = a3;
            uint64_t v370 = type metadata accessor for ConditionDetailDynamicContentIdentifier();
            if (swift_getEnumCaseMultiPayload() == 1)
            {
              uint64_t v485 = v166;
              uint64_t v371 = v348;
              *uint64_t v348 = *v349;
              uint64_t v372 = type metadata accessor for ConditionDetailMapViewModel();
              ((void (*)(char *, char *, uint64_t))v504)((char *)v348 + *(int *)(v372 + 20), (char *)v349 + *(int *)(v372 + 20), v506);
              int v521 = (int *)v372;
              uint64_t v373 = *(int *)(v372 + 24);
              uint64_t v374 = (_OWORD *)((char *)v348 + v373);
              uint64_t v375 = (_OWORD *)((char *)v349 + v373);
              uint64_t v376 = (int *)type metadata accessor for WeatherData(0);
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v375, 1, (uint64_t)v376))
              {
                uint64_t v377 = sub_10017DF08(&qword_100E63850);
                memcpy(v374, v375, *(void *)(*(void *)(v377 - 8) + 64));
              }
              else
              {
                uint64_t v527 = v349;
                *uint64_t v374 = *v375;
                uint64_t v509 = (uint64_t)v376;
                uint64_t v515 = (char *)v374;
                uint64_t v384 = v376[5];
                uint64_t v385 = (char *)v374 + v384;
                uint64_t v386 = (char *)v375 + v384;
                uint64_t v387 = type metadata accessor for Locale();
                if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v386, 1, v387))
                {
                  uint64_t v388 = sub_10017DF08(&qword_100E63730);
                  memcpy(v385, v386, *(void *)(*(void *)(v388 - 8) + 64));
                }
                else
                {
                  (*(void (**)(char *, char *, uint64_t))(*(void *)(v387 - 8) + 32))(v385, v386, v387);
                  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v385, 0, 1, v387);
                }
                uint64_t v406 = v376[6];
                uint64_t v407 = &v515[v406];
                uint64_t v408 = (char *)v375 + v406;
                uint64_t v409 = type metadata accessor for WeatherDataModel();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v409 - 8) + 32))(v407, v408, v409);
                uint64_t v410 = v376[7];
                uint64_t v411 = &v515[v410];
                uint64_t v412 = (char *)v375 + v410;
                uint64_t v413 = sub_10017DF08(&qword_100E63738);
                if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v412, 1, v413))
                {
                  uint64_t v414 = type metadata accessor for WeatherData.CachingState(0);
                  memcpy(v411, v412, *(void *)(*(void *)(v414 - 8) + 64));
                }
                else
                {
                  ((void (*)(char *, char *, uint64_t))v500)(v411, v412, v502);
                  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v411, 0, 1, v413);
                }
                uint64_t v425 = v376[8];
                uint64_t v426 = &v515[v425];
                uint64_t v427 = (char *)v375 + v425;
                uint64_t v428 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
                if (swift_getEnumCaseMultiPayload() == 1)
                {
                  uint64_t v429 = type metadata accessor for WeatherStatisticsModel();
                  (*(void (**)(char *, char *, uint64_t))(*(void *)(v429 - 8) + 32))(v426, v427, v429);
                  swift_storeEnumTagMultiPayload();
                }
                else
                {
                  memcpy(v426, v427, *(void *)(*(void *)(v428 - 8) + 64));
                }
                uint64_t v430 = v376[9];
                uint64_t v431 = (uint64_t)v515;
                uint64_t v432 = &v515[v430];
                uint64_t v433 = (char *)v375 + v430;
                uint64_t v434 = type metadata accessor for WeatherDataOverrides();
                if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v433, 1, v434))
                {
                  uint64_t v435 = sub_10017DF08(&qword_100E63740);
                  memcpy(v432, v433, *(void *)(*(void *)(v435 - 8) + 64));
                }
                else
                {
                  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v433, 1, v502))
                  {
                    uint64_t v437 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
                    memcpy(v432, v433, *(void *)(*(void *)(v437 - 8) + 64));
                  }
                  else
                  {
                    ((void (*)(char *, char *, uint64_t))v500)(v432, v433, v502);
                    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v432, 0, 1, v502);
                  }
                  uint64_t v447 = *(int *)(v434 + 20);
                  int v448 = &v432[v447];
                  long long v449 = &v433[v447];
                  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v449, 1, v502))
                  {
                    uint64_t v450 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
                    memcpy(v448, v449, *(void *)(*(void *)(v450 - 8) + 64));
                  }
                  else
                  {
                    ((void (*)(char *, char *, uint64_t))v500)(v448, v449, v502);
                    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v448, 0, 1, v502);
                  }
                  uint64_t v431 = (uint64_t)v515;
                  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v432, 0, 1, v434);
                }
                _s7Weather24LocationCompositionStateOwst_0(v431, 0, 1, v509);
                uint64_t v371 = v496;
                uint64_t v349 = v527;
              }
              *(_OWORD *)&v371[v521[7]] = *(_OWORD *)((char *)v349 + v521[7]);
              uint64_t v451 = v521[8];
              uint64_t v452 = &v371[v451];
              uint64_t v453 = v349;
              uint64_t v454 = (char *)v349 + v451;
              uint64_t v455 = type metadata accessor for WeatherMapOverlayKind();
              uint64_t v456 = v454;
              uint64_t v351 = (uint64_t)v496;
              (*(void (**)(unsigned char *, char *, uint64_t))(*(void *)(v455 - 8) + 32))(v452, v456, v455);
              v496[v521[9]] = *((unsigned char *)v453 + v521[9]);
              swift_storeEnumTagMultiPayload();
              uint64_t v166 = v485;
            }
            else
            {
              uint64_t v379 = v349;
              uint64_t v351 = (uint64_t)v348;
              memcpy(v348, v379, *(void *)(*(void *)(v370 - 8) + 64));
            }
            swift_storeEnumTagMultiPayload();
            a3 = v537;
            break;
          default:
            uint64_t v352 = v349;
            uint64_t v351 = (uint64_t)v348;
            memcpy(v348, v352, *(void *)(*(void *)(v166 - 8) + 64));
            break;
        }
        uint64_t v299 = v541;
        _s7Weather24LocationCompositionStateOwst_0(v351, 0, 1, v166);
      }
      goto LABEL_227;
    }
    if (!EnumCaseMultiPayload)
    {
      uint64_t v542 = v4;
      long long v22 = *((_OWORD *)v19 + 1);
      _OWORD *v18 = *(_OWORD *)v19;
      v18[1] = v22;
      v18[2] = *((_OWORD *)v19 + 2);
      uint64_t v23 = (int *)_s11NormalModelVMa();
      uint64_t v24 = v23[7];
      uint64_t v25 = (char *)v18 + v24;
      uint64_t v26 = &v19[v24];
      uint64_t v27 = type metadata accessor for Date();
      uint64_t v28 = *(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 32);
      v28(v25, v26, v27);
      v28((char *)v18 + v23[8], &v19[v23[8]], v27);
      uint64_t v499 = v28;
      uint64_t v501 = v27;
      v28((char *)v18 + v23[9], &v19[v23[9]], v27);
      uint64_t v29 = v23[10];
      uint64_t v30 = (char *)v18 + v29;
      uint64_t v31 = &v19[v29];
      uint64_t v32 = type metadata accessor for TimeZone();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 32))(v30, v31, v32);
      uint64_t v33 = v23[11];
      uint64_t v34 = (char *)v18 + v33;
      uint64_t v35 = &v19[v33];
      uint64_t v36 = type metadata accessor for AttributedString();
      uint64_t v517 = *(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 32);
      v517(v34, v35, v36);
      *(void *)((char *)v18 + v23[12]) = *(void *)&v19[v23[12]];
      uint64_t v37 = v23[13];
      v38 = (char *)v18 + v37;
      uint64_t v39 = &v19[v37];
      uint64_t v40 = type metadata accessor for SunriseSunsetDetailChartViewModel();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v40 - 8) + 32))(v38, v39, v40);
      uint64_t v41 = v23[14];
      uint64_t v42 = (char *)v18 + v41;
      uint64_t v43 = &v19[v41];
      uint64_t v44 = type metadata accessor for Location();
      uint64_t v503 = *(void (**)(char *, char *))(*(void *)(v44 - 8) + 32);
      uint64_t v505 = v44;
      v503(v42, v43);
      uint64_t v45 = v23[15];
      uint64_t v46 = (char *)v18 + v45;
      uint64_t v47 = &v19[v45];
      uint64_t v48 = type metadata accessor for SunEvents();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v48 - 8) + 32))(v46, v47, v48);
      uint64_t v49 = v23[16];
      uint64_t v50 = (char *)v18 + v49;
      uint64_t v51 = &v19[v49];
      uint64_t v52 = type metadata accessor for OverviewTableViewModel();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v52 - 8) + 32))(v50, v51, v52);
      uint64_t v53 = v23[17];
      uint64_t v54 = (char *)v18 + v53;
      uint64_t v55 = &v19[v53];
      uint64_t v56 = type metadata accessor for DaylightStringBuilder();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v56 - 8) + 32))(v54, v55, v56);
      uint64_t v57 = v23[18];
      uint64_t v58 = (_OWORD *)((char *)v18 + v57);
      uint64_t v59 = &v19[v57];
      uint64_t v60 = type metadata accessor for DetailComponentContainerViewModel();
      uint64_t v522 = v36;
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v59, 1, v60))
      {
        uint64_t v61 = sub_10017DF08(&qword_100E66E28);
        memcpy(v58, v59, *(void *)(*(void *)(v61 - 8) + 64));
        uint64_t v4 = v542;
      }
      else
      {
        long long v100 = *((_OWORD *)v59 + 1);
        *uint64_t v58 = *(_OWORD *)v59;
        v58[1] = v100;
        uint64_t v101 = *(int *)(v60 + 20);
        v102 = (_OWORD *)((char *)v58 + v101);
        v103 = &v59[v101];
        uint64_t v104 = type metadata accessor for NewsArticleComponentViewModel(0);
        uint64_t v538 = v60;
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          uint64_t v497 = v18;
          uint64_t v528 = a3;
          _OWORD *v102 = *(_OWORD *)v103;
          uint64_t v492 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
          uint64_t v105 = v492[5];
          v106 = (char *)v102 + v105;
          v107 = &v103[v105];
          uint64_t v108 = type metadata accessor for URL();
          uint64_t v4 = v542;
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v107, 1, v108))
          {
            uint64_t v109 = sub_10017DF08(&qword_100E749B0);
            memcpy(v106, v107, *(void *)(*(void *)(v109 - 8) + 64));
            uint64_t v110 = *(void (***)(void *, const void *, uint64_t))(v108 - 8);
          }
          else
          {
            __dste = *(void (***)(void *, const void *, uint64_t))(v108 - 8);
            __dste[4](v106, v107, v108);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v106, 0, 1, v108);
            uint64_t v110 = __dste;
          }
          *(_OWORD *)((char *)v102 + v492[6]) = *(_OWORD *)&v103[v492[6]];
          uint64_t v471 = v110[4];
          v471((char *)v102 + v492[7], &v103[v492[7]], v108);
          uint64_t v122 = v492[8];
          __dst = (char *)v102 + v122;
          uint64_t v123 = &v103[v122];
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v103[v122], 1, v108))
          {
            uint64_t v124 = sub_10017DF08(&qword_100E749B0);
            memcpy(__dst, v123, *(void *)(*(void *)(v124 - 8) + 64));
          }
          else
          {
            v471(__dst, v123, v108);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dst, 0, 1, v108);
          }
          uint64_t v18 = v497;
          uint64_t v60 = v538;
          *((unsigned char *)v102 + v492[9]) = v103[v492[9]];
          swift_storeEnumTagMultiPayload();
          a3 = v528;
        }
        else
        {
          memcpy(v102, v103, *(void *)(*(void *)(v104 - 8) + 64));
          uint64_t v4 = v542;
        }
        uint64_t v129 = *(int *)(v60 + 24);
        uint64_t v130 = (char *)v58 + v129;
        uint64_t v131 = &v59[v129];
        uint64_t v132 = type metadata accessor for DetailComponentAction();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v131, 1, v132))
        {
          uint64_t v133 = sub_10017DF08(&qword_100E73810);
          memcpy(v130, v131, *(void *)(*(void *)(v133 - 8) + 64));
        }
        else
        {
          uint64_t v134 = type metadata accessor for URL();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v134 - 8) + 32))(v130, v131, v134);
          uint64_t v135 = sub_10017DF08(&qword_100E66478);
          v130[*(int *)(v135 + 48)] = v131[*(int *)(v135 + 48)];
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v130, 0, 1, v132);
        }
        uint64_t v60 = v538;
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v58, 0, 1, v538);
      }
      uint64_t v136 = *(int *)(sub_10017DF08(&qword_100E92128) + 48);
      uint64_t v137 = (uint64_t)v18 + v136;
      uint64_t v138 = (uint64_t)&v19[v136];
      uint64_t v139 = (int *)type metadata accessor for ConditionDetailPlatterViewModel(0);
      if (_s7Weather24LocationCompositionStateOwet_0(v138, 1, (uint64_t)v139))
      {
LABEL_37:
        uint64_t v140 = sub_10017DF08(&qword_100E66E40);
        memcpy((void *)v137, (const void *)v138, *(void *)(*(void *)(v140 - 8) + 64));
LABEL_228:
        swift_storeEnumTagMultiPayload();
        goto LABEL_229;
      }
      uint64_t v540 = v60;
      *(_OWORD *)uint64_t v137 = *(_OWORD *)v138;
      *(unsigned char *)(v137 + 16) = *(unsigned char *)(v138 + 16);
      *(_OWORD *)(v137 + 24) = *(_OWORD *)(v138 + 24);
      uint64_t v141 = v139[6];
      uint64_t v142 = (void *)(v137 + v141);
      uint64_t v143 = (const void *)(v138 + v141);
      uint64_t v144 = type metadata accessor for WeatherDescription();
      uint64_t v494 = (void *)v144;
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v143, 1, v144))
      {
        uint64_t v145 = sub_10017DF08(&qword_100E63758);
        memcpy(v142, v143, *(void *)(*(void *)(v145 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v144 - 8) + 32))(v142, v143, v144);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v142, 0, 1, v144);
      }
      uint64_t v146 = v139[7];
      uint64_t v544 = (char *)(v137 + v146);
      uint64_t v147 = (char *)(v138 + v146);
      uint64_t v148 = type metadata accessor for ConditionDetailPlatterViewModel.Body(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          (*(void (**)(char *, char *))(*(v494 - 1) + 32))(v544, v147);
          goto LABEL_134;
        case 2u:
          v517(v544, v147, v522);
          goto LABEL_134;
        case 3u:
          uint64_t v167 = sub_10017DF08(&qword_100E73808);
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v167 - 8) + 32))(v544, v147, v167);
          goto LABEL_134;
        case 4u:
          long long v168 = *((_OWORD *)v147 + 1);
          *(_OWORD *)uint64_t v544 = *(_OWORD *)v147;
          *((_OWORD *)v544 + 1) = v168;
          uint64_t v169 = *(int *)(v540 + 20);
          v473 = &v544[v169];
          __dstb = v147;
          long long v170 = &v147[v169];
          uint64_t v171 = type metadata accessor for NewsArticleComponentViewModel(0);
          uint64_t v530 = a3;
          uint64_t v478 = v148;
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            *(_OWORD *)v473 = *(_OWORD *)v170;
            uint64_t v468 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
            uint64_t v172 = v468[5];
            uint64_t v173 = &v473[v172];
            uint64_t v174 = &v170[v172];
            uint64_t v175 = type metadata accessor for URL();
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v174, 1, v175))
            {
              uint64_t v176 = sub_10017DF08(&qword_100E749B0);
              memcpy(v173, v174, *(void *)(*(void *)(v176 - 8) + 64));
              uint64_t v177 = *(void (***)(void *, const void *, uint64_t))(v175 - 8);
            }
            else
            {
              uint64_t v464 = *(void (***)(void *, const void *, uint64_t))(v175 - 8);
              v464[4](v173, v174, v175);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v173, 0, 1, v175);
              uint64_t v177 = v464;
            }
            *(_OWORD *)&v473[v468[6]] = *(_OWORD *)&v170[v468[6]];
            uint64_t v457 = v177[4];
            v457(&v473[v468[7]], &v170[v468[7]], v175);
            uint64_t v211 = v468[8];
            uint64_t v465 = &v473[v211];
            long long v212 = &v170[v211];
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v170[v211], 1, v175))
            {
              uint64_t v213 = sub_10017DF08(&qword_100E749B0);
              memcpy(v465, v212, *(void *)(*(void *)(v213 - 8) + 64));
            }
            else
            {
              v457(v465, v212, v175);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v465, 0, 1, v175);
            }
            uint64_t v209 = v540;
            v473[v468[9]] = v170[v468[9]];
            swift_storeEnumTagMultiPayload();
          }
          else
          {
            memcpy(v473, v170, *(void *)(*(void *)(v171 - 8) + 64));
            uint64_t v209 = v540;
          }
          uint64_t v230 = *(int *)(v209 + 24);
          uint64_t v231 = &v544[v230];
          uint64_t v232 = &__dstb[v230];
          uint64_t v233 = type metadata accessor for DetailComponentAction();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v232, 1, v233))
          {
            uint64_t v234 = sub_10017DF08(&qword_100E73810);
            memcpy(v231, v232, *(void *)(*(void *)(v234 - 8) + 64));
          }
          else
          {
            uint64_t v235 = type metadata accessor for URL();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v235 - 8) + 32))(v231, v232, v235);
            uint64_t v236 = sub_10017DF08(&qword_100E66478);
            v231[*(int *)(v236 + 48)] = v232[*(int *)(v236 + 48)];
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v231, 0, 1, v233);
          }
          a3 = v530;
          uint64_t v148 = v478;
          swift_storeEnumTagMultiPayload();
          break;
        case 6u:
          uint64_t v178 = type metadata accessor for PrecipitationTotalPlatterViewModel();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v178 - 8) + 32))(v544, v147, v178);
          goto LABEL_134;
        case 7u:
          uint64_t v474 = (void *)v137;
          uint64_t v179 = type metadata accessor for ConditionDetailDynamicContentIdentifier();
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            uint64_t v479 = v148;
            long long v180 = *(_OWORD *)v147;
            uint64_t v181 = v147;
            uint64_t v182 = v544;
            *(_OWORD *)uint64_t v544 = v180;
            uint64_t v183 = (int *)type metadata accessor for ConditionDetailMapViewModel();
            ((void (*)(char *, char *, uint64_t))v503)(&v544[v183[5]], (char *)v181 + v183[5], v505);
            uint64_t v184 = v183[6];
            uint64_t v462 = &v544[v184];
            __dstc = v181;
            uint64_t v185 = (_OWORD *)((char *)v181 + v184);
            uint64_t v186 = type metadata accessor for WeatherData(0);
            v469 = v183;
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v185, 1, v186))
            {
              uint64_t v187 = sub_10017DF08(&qword_100E63850);
              memcpy(v462, v185, *(void *)(*(void *)(v187 - 8) + 64));
              uint64_t v137 = (uint64_t)v474;
            }
            else
            {
              uint64_t v532 = a3;
              uint64_t v214 = (uint64_t)v462;
              *(_OWORD *)uint64_t v462 = *v185;
              uint64_t v458 = v185;
              uint64_t v459 = (int *)v186;
              uint64_t v215 = *(int *)(v186 + 20);
              uint64_t v216 = &v462[v215];
              int v217 = (char *)v185 + v215;
              uint64_t v218 = type metadata accessor for Locale();
              uint64_t v137 = (uint64_t)v474;
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v217, 1, v218))
              {
                uint64_t v219 = sub_10017DF08(&qword_100E63730);
                memcpy(v216, v217, *(void *)(*(void *)(v219 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v218 - 8) + 32))(v216, v217, v218);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v216, 0, 1, v218);
              }
              uint64_t v244 = v459[6];
              uint64_t v245 = &v462[v244];
              unsigned __int8 v246 = (char *)v458 + v244;
              uint64_t v247 = type metadata accessor for WeatherDataModel();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v247 - 8) + 32))(v245, v246, v247);
              uint64_t v248 = v459[7];
              uint64_t v249 = &v462[v248];
              uint64_t v250 = (char *)v458 + v248;
              uint64_t v251 = sub_10017DF08(&qword_100E63738);
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v250, 1, v251))
              {
                uint64_t v252 = type metadata accessor for WeatherData.CachingState(0);
                memcpy(v249, v250, *(void *)(*(void *)(v252 - 8) + 64));
              }
              else
              {
                v499(v249, v250, v501);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v249, 0, 1, v251);
              }
              uint64_t v262 = v459[8];
              uint64_t v263 = &v462[v262];
              uint64_t v264 = (char *)v458 + v262;
              uint64_t v265 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
              if (swift_getEnumCaseMultiPayload() == 1)
              {
                uint64_t v266 = type metadata accessor for WeatherStatisticsModel();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v266 - 8) + 32))(v263, v264, v266);
                swift_storeEnumTagMultiPayload();
              }
              else
              {
                memcpy(v263, v264, *(void *)(*(void *)(v265 - 8) + 64));
              }
              uint64_t v267 = v459[9];
              uint64_t v268 = &v462[v267];
              uint64_t v269 = (char *)v458 + v267;
              uint64_t v270 = type metadata accessor for WeatherDataOverrides();
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v269, 1, v270))
              {
                uint64_t v271 = sub_10017DF08(&qword_100E63740);
                memcpy(v268, v269, *(void *)(*(void *)(v271 - 8) + 64));
                a3 = v532;
              }
              else
              {
                if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v269, 1, v501))
                {
                  uint64_t v282 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
                  memcpy(v268, v269, *(void *)(*(void *)(v282 - 8) + 64));
                }
                else
                {
                  v499(v268, v269, v501);
                  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v268, 0, 1, v501);
                }
                uint64_t v284 = *(int *)(v270 + 20);
                uint64_t v285 = &v268[v284];
                v286 = &v269[v284];
                if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v286, 1, v501))
                {
                  uint64_t v287 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
                  memcpy(v285, v286, *(void *)(*(void *)(v287 - 8) + 64));
                }
                else
                {
                  v499(v285, v286, v501);
                  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v285, 0, 1, v501);
                }
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v268, 0, 1, v270);
                a3 = v532;
                uint64_t v214 = (uint64_t)v462;
              }
              _s7Weather24LocationCompositionStateOwst_0(v214, 0, 1, (uint64_t)v459);
              uint64_t v182 = v544;
              uint64_t v183 = v469;
            }
            *(_OWORD *)((char *)v182 + v183[7]) = *(_OWORD *)&__dstc[v183[7]];
            uint64_t v292 = v183[8];
            uint64_t v546 = (char *)v182 + v292;
            uint64_t v293 = &__dstc[v292];
            uint64_t v294 = type metadata accessor for WeatherMapOverlayKind();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v294 - 8) + 32))(v546, v293, v294);
            *((unsigned char *)v182 + v469[9]) = __dstc[v469[9]];
            swift_storeEnumTagMultiPayload();
            uint64_t v148 = v479;
          }
          else
          {
            memcpy(v544, v147, *(void *)(*(void *)(v179 - 8) + 64));
            uint64_t v137 = (uint64_t)v474;
          }
LABEL_134:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v544, v147, *(void *)(*(void *)(v148 - 8) + 64));
          break;
      }
      v547 = v139;
      uint64_t v295 = v139[8];
      uint64_t v296 = (_OWORD *)(v137 + v295);
      uint64_t v297 = (_OWORD *)(v138 + v295);
      if (_s7Weather24LocationCompositionStateOwet_0(v138 + v295, 1, v148))
      {
        uint64_t v298 = sub_10017DF08(&qword_100E73818);
        memcpy(v296, v297, *(void *)(*(void *)(v298 - 8) + 64));
        uint64_t v299 = (uint64_t)v547;
      }
      else
      {
        char __dstd = v296;
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            uint64_t v300 = (uint64_t)v296;
            (*(void (**)(void))(*(v494 - 1) + 32))();
            goto LABEL_225;
          case 2u:
            long long v302 = (char *)v297;
            uint64_t v300 = (uint64_t)v296;
            v517((char *)v296, v302, v522);
            goto LABEL_225;
          case 3u:
            uint64_t v303 = sub_10017DF08(&qword_100E73808);
            v304 = v297;
            uint64_t v300 = (uint64_t)v296;
            (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v303 - 8) + 32))(v296, v304, v303);
            goto LABEL_225;
          case 4u:
            uint64_t v534 = a3;
            long long v305 = v297[1];
            *uint64_t v296 = *v297;
            v296[1] = v305;
            uint64_t v306 = *(int *)(v540 + 20);
            uint64_t v307 = (_OWORD *)((char *)v296 + v306);
            uint64_t v524 = v297;
            uint64_t v308 = (_OWORD *)((char *)v297 + v306);
            uint64_t v309 = type metadata accessor for NewsArticleComponentViewModel(0);
            uint64_t v482 = v148;
            if (swift_getEnumCaseMultiPayload() == 1)
            {
              _OWORD *v307 = *v308;
              uint64_t v519 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
              uint64_t v310 = v519[5];
              uint64_t v311 = (char *)v307 + v310;
              uint64_t v312 = (char *)v308 + v310;
              uint64_t v313 = type metadata accessor for URL();
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v312, 1, v313))
              {
                uint64_t v314 = sub_10017DF08(&qword_100E749B0);
                memcpy(v311, v312, *(void *)(*(void *)(v314 - 8) + 64));
                uint64_t v315 = *(void (***)(void *, const void *, uint64_t))(v313 - 8);
              }
              else
              {
                v510 = *(void (***)(void *, const void *, uint64_t))(v313 - 8);
                v510[4](v311, v312, v313);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v311, 0, 1, v313);
                uint64_t v315 = v510;
              }
              *(_OWORD *)((char *)v307 + v519[6]) = *(_OWORD *)((char *)v308 + v519[6]);
              uint64_t v507 = v315[4];
              v507((char *)v307 + v519[7], (char *)v308 + v519[7], v313);
              uint64_t v327 = v519[8];
              uint64_t v511 = (char *)v307 + v327;
              uint64_t v328 = (char *)v308 + v327;
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v308 + v327, 1, v313))
              {
                uint64_t v329 = sub_10017DF08(&qword_100E749B0);
                memcpy(v511, v328, *(void *)(*(void *)(v329 - 8) + 64));
              }
              else
              {
                v507(v511, v328, v313);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v511, 0, 1, v313);
              }
              uint64_t v325 = v540;
              *((unsigned char *)v307 + v519[9]) = *((unsigned char *)v308 + v519[9]);
              swift_storeEnumTagMultiPayload();
            }
            else
            {
              memcpy(v307, v308, *(void *)(*(void *)(v309 - 8) + 64));
              uint64_t v325 = v540;
            }
            uint64_t v336 = *(int *)(v325 + 24);
            uint64_t v337 = (char *)__dstd + v336;
            uint64_t v338 = (char *)v524 + v336;
            uint64_t v339 = type metadata accessor for DetailComponentAction();
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v338, 1, v339))
            {
              uint64_t v340 = sub_10017DF08(&qword_100E73810);
              memcpy(v337, v338, *(void *)(*(void *)(v340 - 8) + 64));
            }
            else
            {
              uint64_t v341 = type metadata accessor for URL();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v341 - 8) + 32))(v337, v338, v341);
              uint64_t v342 = sub_10017DF08(&qword_100E66478);
              v337[*(int *)(v342 + 48)] = v338[*(int *)(v342 + 48)];
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v337, 0, 1, v339);
            }
            a3 = v534;
            uint64_t v148 = v482;
            swift_storeEnumTagMultiPayload();
            uint64_t v300 = (uint64_t)__dstd;
            break;
          case 6u:
            uint64_t v316 = type metadata accessor for PrecipitationTotalPlatterViewModel();
            uint64_t v317 = v297;
            uint64_t v300 = (uint64_t)v296;
            (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v316 - 8) + 32))(v296, v317, v316);
            goto LABEL_225;
          case 7u:
            uint64_t v318 = type metadata accessor for ConditionDetailDynamicContentIdentifier();
            if (swift_getEnumCaseMultiPayload() == 1)
            {
              uint64_t v483 = v148;
              *char __dstd = *v297;
              uint64_t v319 = type metadata accessor for ConditionDetailMapViewModel();
              ((void (*)(char *, char *, uint64_t))v503)((char *)__dstd + *(int *)(v319 + 20), (char *)v297 + *(int *)(v319 + 20), v505);
              uint64_t v520 = (int *)v319;
              uint64_t v320 = *(int *)(v319 + 24);
              uint64_t v321 = (_OWORD *)((char *)__dstd + v320);
              uint64_t v525 = v297;
              uint64_t v322 = (_OWORD *)((char *)v297 + v320);
              uint64_t v323 = type metadata accessor for WeatherData(0);
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v322, 1, v323))
              {
                uint64_t v324 = sub_10017DF08(&qword_100E63850);
                memcpy(v321, v322, *(void *)(*(void *)(v324 - 8) + 64));
              }
              else
              {
                uint64_t v535 = a3;
                *uint64_t v321 = *v322;
                uint64_t v512 = (int *)v323;
                uint64_t v330 = *(int *)(v323 + 20);
                uint64_t v331 = (char *)v321 + v330;
                uint64_t v332 = (char *)v322 + v330;
                uint64_t v333 = type metadata accessor for Locale();
                uint64_t v334 = (uint64_t)v321;
                if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v332, 1, v333))
                {
                  uint64_t v335 = sub_10017DF08(&qword_100E63730);
                  memcpy(v331, v332, *(void *)(*(void *)(v335 - 8) + 64));
                }
                else
                {
                  (*(void (**)(char *, char *, uint64_t))(*(void *)(v333 - 8) + 32))(v331, v332, v333);
                  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v331, 0, 1, v333);
                }
                uint64_t v396 = (uint64_t)v512;
                uint64_t v397 = v512[6];
                uint64_t v398 = v334 + v397;
                uint64_t v399 = (char *)v322 + v397;
                uint64_t v400 = type metadata accessor for WeatherDataModel();
                (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v400 - 8) + 32))(v398, v399, v400);
                uint64_t v401 = v512[7];
                uint64_t v402 = (void *)(v334 + v401);
                uint64_t v403 = (char *)v322 + v401;
                uint64_t v404 = sub_10017DF08(&qword_100E63738);
                if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v403, 1, v404))
                {
                  uint64_t v405 = type metadata accessor for WeatherData.CachingState(0);
                  memcpy(v402, v403, *(void *)(*(void *)(v405 - 8) + 64));
                }
                else
                {
                  v499((char *)v402, v403, v501);
                  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v402, 0, 1, v404);
                }
                uint64_t v415 = v512[8];
                uint64_t v416 = (void *)(v334 + v415);
                uint64_t v417 = (char *)v322 + v415;
                uint64_t v418 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
                if (swift_getEnumCaseMultiPayload() == 1)
                {
                  uint64_t v419 = type metadata accessor for WeatherStatisticsModel();
                  (*(void (**)(void *, char *, uint64_t))(*(void *)(v419 - 8) + 32))(v416, v417, v419);
                  swift_storeEnumTagMultiPayload();
                }
                else
                {
                  memcpy(v416, v417, *(void *)(*(void *)(v418 - 8) + 64));
                }
                uint64_t v420 = v512[9];
                uint64_t v421 = (char *)(v334 + v420);
                uint64_t v422 = (char *)v322 + v420;
                uint64_t v423 = type metadata accessor for WeatherDataOverrides();
                if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v422, 1, v423))
                {
                  uint64_t v424 = sub_10017DF08(&qword_100E63740);
                  memcpy(v421, v422, *(void *)(*(void *)(v424 - 8) + 64));
                  a3 = v535;
                }
                else
                {
                  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v422, 1, v501))
                  {
                    uint64_t v436 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
                    memcpy(v421, v422, *(void *)(*(void *)(v436 - 8) + 64));
                  }
                  else
                  {
                    v499(v421, v422, v501);
                    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v421, 0, 1, v501);
                  }
                  uint64_t v438 = *(int *)(v423 + 20);
                  uint64_t v439 = &v421[v438];
                  uint64_t v440 = &v422[v438];
                  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v440, 1, v501))
                  {
                    uint64_t v441 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
                    memcpy(v439, v440, *(void *)(*(void *)(v441 - 8) + 64));
                  }
                  else
                  {
                    v499(v439, v440, v501);
                    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v439, 0, 1, v501);
                  }
                  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v421, 0, 1, v423);
                  a3 = v535;
                  uint64_t v396 = (uint64_t)v512;
                }
                _s7Weather24LocationCompositionStateOwst_0(v334, 0, 1, v396);
              }
              *(_OWORD *)((char *)__dstd + v520[7]) = *(_OWORD *)((char *)v525 + v520[7]);
              uint64_t v442 = v520[8];
              uint64_t v516 = (char *)__dstd + v442;
              uint64_t v443 = (char *)v525 + v442;
              uint64_t v444 = type metadata accessor for WeatherMapOverlayKind();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v444 - 8) + 32))(v516, v443, v444);
              *((unsigned char *)__dstd + v520[9]) = *((unsigned char *)v525 + v520[9]);
              swift_storeEnumTagMultiPayload();
              uint64_t v148 = v483;
              uint64_t v300 = (uint64_t)__dstd;
            }
            else
            {
              uint64_t v326 = v297;
              uint64_t v300 = (uint64_t)__dstd;
              memcpy(__dstd, v326, *(void *)(*(void *)(v318 - 8) + 64));
            }
LABEL_225:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            uint64_t v301 = v297;
            uint64_t v300 = (uint64_t)v296;
            memcpy(v296, v301, *(void *)(*(void *)(v148 - 8) + 64));
            break;
        }
        uint64_t v299 = (uint64_t)v547;
        _s7Weather24LocationCompositionStateOwst_0(v300, 0, 1, v148);
      }
LABEL_227:
      *(unsigned char *)(v137 + *(int *)(v299 + 36)) = *(unsigned char *)(v138 + *(int *)(v299 + 36));
      *(unsigned char *)(v137 + *(int *)(v299 + 40)) = *(unsigned char *)(v138 + *(int *)(v299 + 40));
      _s7Weather24LocationCompositionStateOwst_0(v137, 0, 1, v299);
      goto LABEL_228;
    }
    memcpy(v18, v19, *(void *)(*(void *)(v20 - 8) + 64));
  }
LABEL_229:
  uint64_t v445 = a3[8];
  *(unsigned char *)(a1 + a3[7]) = *((unsigned char *)v4 + a3[7]);
  *(void *)(a1 + v445) = *(void *)((char *)v4 + v445);
  *(void *)(a1 + a3[9]) = *(void *)((char *)v4 + a3[9]);
  return a1;
}

uint64_t sub_10097A5D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10097A5E4);
}

uint64_t sub_10097A5E4()
{
  sub_100181828();
  if (v2) {
    return sub_10017AC08();
  }
  uint64_t v4 = v1;
  int v5 = v0;
  sub_10017DF08(&qword_100EA37A0);
  sub_100162F30();
  if (*(_DWORD *)(v6 + 84) == v5)
  {
    uint64_t v7 = *(int *)(v4 + 20);
  }
  else
  {
    type metadata accessor for SunriseSunsetDetailViewModel();
    uint64_t v7 = *(int *)(v4 + 24);
  }
  uint64_t v8 = sub_10017F118(v7);

  return _s7Weather24LocationCompositionStateOwet_0(v8, v9, v10);
}

uint64_t sub_10097A678(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10097A68C);
}

void sub_10097A68C()
{
  sub_100163298();
  if (v2)
  {
    sub_100185E34();
  }
  else
  {
    uint64_t v3 = v1;
    int v4 = v0;
    sub_10017DF08(&qword_100EA37A0);
    sub_100162F30();
    if (*(_DWORD *)(v5 + 84) == v4)
    {
      uint64_t v6 = *(int *)(v3 + 20);
    }
    else
    {
      type metadata accessor for SunriseSunsetDetailViewModel();
      uint64_t v6 = *(int *)(v3 + 24);
    }
    uint64_t v7 = sub_1001A014C(v6);
    _s7Weather24LocationCompositionStateOwst_0(v7, v8, v9, v10);
  }
}

void sub_10097A720()
{
  sub_100227228(319, (unint64_t *)&unk_100EA3810, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Binding);
  if (v0 <= 0x3F)
  {
    type metadata accessor for SunriseSunsetDetailViewModel();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t *sub_10097A828(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *int v4 = *a2;
    int v4 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    uint64_t v9 = a3[6];
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = type metadata accessor for AttributedString();
    int v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v13(v10, v11, v12);
    uint64_t v14 = a3[8];
    *(uint64_t *)((char *)v4 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
    *(uint64_t *)((char *)v4 + v14) = *(uint64_t *)((char *)a2 + v14);
    uint64_t v15 = a3[10];
    *(uint64_t *)((char *)v4 + a3[9]) = *(uint64_t *)((char *)a2 + a3[9]);
    *(_OWORD *)((char *)v4 + v15) = *(_OWORD *)((char *)a2 + v15);
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_10097A95C(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = type metadata accessor for AttributedString();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);

  return swift_bridgeObjectRelease();
}

void *sub_10097A9F0(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  uint64_t v8 = a3[6];
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = type metadata accessor for AttributedString();
  uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v12(v9, v10, v11);
  uint64_t v13 = a3[8];
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  *(void *)((char *)a1 + v13) = *(void *)((char *)a2 + v13);
  uint64_t v14 = a3[10];
  *(void *)((char *)a1 + a3[9]) = *(void *)((char *)a2 + a3[9]);
  *(_OWORD *)((char *)a1 + v14) = *(_OWORD *)((char *)a2 + v14);
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_10097AAD4(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[6];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for AttributedString();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[8]) = *(void *)((char *)a2 + a3[8]);
  *(void *)((char *)a1 + a3[9]) = *(void *)((char *)a2 + a3[9]);
  uint64_t v10 = a3[10];
  uint64_t v11 = (void *)((char *)a1 + v10);
  uint64_t v12 = (void *)((char *)a2 + v10);
  *uint64_t v11 = *v12;
  v11[1] = v12[1];
  return a1;
}

_OWORD *sub_10097ABE8(_OWORD *a1, _OWORD *a2, int *a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[6];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for AttributedString();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[8];
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  *(void *)((char *)a1 + v11) = *(void *)((char *)a2 + v11);
  uint64_t v12 = a3[10];
  *(void *)((char *)a1 + a3[9]) = *(void *)((char *)a2 + a3[9]);
  *(_OWORD *)((char *)a1 + v12) = *(_OWORD *)((char *)a2 + v12);
  return a1;
}

void *sub_10097AC9C(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a3[6];
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = type metadata accessor for AttributedString();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 40))(v9, v10, v11);
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  swift_bridgeObjectRelease();
  uint64_t v12 = a3[9];
  *(void *)((char *)a1 + a3[8]) = *(void *)((char *)a2 + a3[8]);
  *(void *)((char *)a1 + v12) = *(void *)((char *)a2 + v12);
  *(_OWORD *)((char *)a1 + a3[10]) = *(_OWORD *)((char *)a2 + a3[10]);
  return a1;
}

uint64_t sub_10097AD74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10097AD88);
}

uint64_t sub_10097AD88()
{
  sub_100181828();
  if (v1) {
    return sub_10017AC08();
  }
  uint64_t v3 = v0;
  type metadata accessor for AttributedString();
  uint64_t v4 = sub_10017F118(*(int *)(v3 + 24));

  return _s7Weather24LocationCompositionStateOwet_0(v4, v5, v6);
}

uint64_t sub_10097ADF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10097AE08);
}

void sub_10097AE08()
{
  sub_100163298();
  if (v1)
  {
    sub_100185E34();
  }
  else
  {
    uint64_t v2 = v0;
    type metadata accessor for AttributedString();
    uint64_t v3 = sub_1001A014C(*(int *)(v2 + 24));
    _s7Weather24LocationCompositionStateOwst_0(v3, v4, v5, v6);
  }
}

uint64_t sub_10097AE70()
{
  uint64_t result = type metadata accessor for AttributedString();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_10097AF30(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for AttributedString();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    uint64_t v13 = a3[7];
    *(uint64_t *)((char *)v4 + a3[6]) = *(uint64_t *)((char *)a2 + a3[6]);
    *(uint64_t *)((char *)v4 + v13) = *(uint64_t *)((char *)a2 + v13);
    *(uint64_t *)((char *)v4 + a3[8]) = *(uint64_t *)((char *)a2 + a3[8]);
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_10097B04C(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = type metadata accessor for AttributedString();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);

  return swift_bridgeObjectRelease();
}

void *sub_10097B0D8(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for AttributedString();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  uint64_t v12 = a3[7];
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  *(void *)((char *)a1 + v12) = *(void *)((char *)a2 + v12);
  *(void *)((char *)a1 + a3[8]) = *(void *)((char *)a2 + a3[8]);
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_10097B1A4(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for AttributedString();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[8]) = *(void *)((char *)a2 + a3[8]);
  return a1;
}

_OWORD *sub_10097B27C(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for AttributedString();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[7];
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  *(void *)((char *)a1 + v10) = *(void *)((char *)a2 + v10);
  *(void *)((char *)a1 + a3[8]) = *(void *)((char *)a2 + a3[8]);
  return a1;
}

void *sub_10097B328(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for AttributedString();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[7];
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  *(void *)((char *)a1 + v11) = *(void *)((char *)a2 + v11);
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[8]) = *(void *)((char *)a2 + a3[8]);
  return a1;
}

uint64_t sub_10097B3E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10097B3F8);
}

uint64_t sub_10097B3F8()
{
  sub_100181828();
  if (v1) {
    return sub_10017AC08();
  }
  uint64_t v3 = v0;
  type metadata accessor for AttributedString();
  uint64_t v4 = sub_10017F118(*(int *)(v3 + 20));

  return _s7Weather24LocationCompositionStateOwet_0(v4, v5, v6);
}

uint64_t sub_10097B464(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10097B478);
}

void sub_10097B478()
{
  sub_100163298();
  if (v1)
  {
    sub_100185E34();
  }
  else
  {
    uint64_t v2 = v0;
    type metadata accessor for AttributedString();
    uint64_t v3 = sub_1001A014C(*(int *)(v2 + 20));
    _s7Weather24LocationCompositionStateOwst_0(v3, v4, v5, v6);
  }
}

uint64_t sub_10097B4E0()
{
  uint64_t result = type metadata accessor for AttributedString();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_10097B598()
{
  unint64_t result = qword_100EA3F50;
  if (!qword_100EA3F50)
  {
    sub_10018C6DC(&qword_100EA3C88);
    sub_1001246C8(&qword_100EA3F58, &qword_100EA3C70);
    sub_100965158(&qword_100EA3F60, (void (*)(uint64_t))&type metadata accessor for _TaskModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA3F50);
  }
  return result;
}

uint64_t sub_10097B668()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10097B684()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10097B6A0()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_10097B6CC()
{
  unint64_t result = qword_100EA3F98;
  if (!qword_100EA3F98)
  {
    sub_10018C6DC(&qword_100EA3F90);
    sub_10097B83C((unint64_t *)&qword_100E79FF8, &qword_100E7A000);
    sub_1001246C8((unint64_t *)&qword_100E64F80, (uint64_t *)&unk_100EAA770);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA3F98);
  }
  return result;
}

unint64_t sub_10097B784()
{
  unint64_t result = qword_100EA3FA8;
  if (!qword_100EA3FA8)
  {
    sub_10018C6DC(&qword_100EA3FA0);
    sub_10097B83C((unint64_t *)&qword_100E662A0, &qword_100E66298);
    sub_1001246C8((unint64_t *)&qword_100E64F80, (uint64_t *)&unk_100EAA770);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA3FA8);
  }
  return result;
}

uint64_t sub_10097B83C(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10018C6DC(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10097B8A8()
{
  return sub_1001246C8(&qword_100EA3FE0, &qword_100EA3FE8);
}

uint64_t sub_10097B8E4(uint64_t a1)
{
  return sub_10097B934(a1, &qword_100EA3F68, &qword_100EA3F78);
}

uint64_t sub_10097B90C(uint64_t a1)
{
  return sub_10097B934(a1, &qword_100EA3FB8, &qword_100EA3FC8);
}

uint64_t sub_10097B934(uint64_t a1, uint64_t *a2, unint64_t *a3)
{
  return swift_getOpaqueTypeConformance2();
}

ValueMetadata *type metadata accessor for DetailComponentHeaderViewModel()
{
  return &type metadata for DetailComponentHeaderViewModel;
}

uint64_t destroy for MessageCoverView(uint64_t a1)
{
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for MessageCoverView(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v5 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v5;
  uint64_t v6 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v6;
  uint64_t v7 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v7;
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  uint64_t v8 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v8;
  uint64_t v9 = *(void *)(a2 + 120);
  uint64_t v10 = *(void *)(a2 + 128);
  *(void *)(a1 + 120) = v9;
  *(void *)(a1 + 128) = v10;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for MessageCoverView(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for MessageCoverView(uint64_t a1, uint64_t a2)
{
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v5 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v7;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  uint64_t v8 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 128);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = v9;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for MessageCoverView(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 136))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 24);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MessageCoverView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 136) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 136) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MessageCoverView()
{
  return &type metadata for MessageCoverView;
}

uint64_t sub_10097BD0C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10097BD28@<X0>(uint64_t a1@<X8>)
{
  *(void *)a1 = static HorizontalAlignment.center.getter();
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 1;
  uint64_t v3 = sub_10017DF08(&qword_100EA4088);
  return sub_10097BD74(v1, a1 + *(int *)(v3 + 44));
}

uint64_t sub_10097BD74@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v134 = a2;
  uint64_t v131 = sub_10017DF08(&qword_100EA4090);
  __chkstk_darwin(v131);
  uint64_t v112 = (uint64_t *)((char *)&v107 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v4 = sub_10017DF08(&qword_100E65388);
  uint64_t v110 = *(void *)(v4 - 8);
  uint64_t v111 = v4;
  __chkstk_darwin(v4);
  uint64_t v108 = (char *)&v107 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v109 = (char *)&v107 - v7;
  uint64_t v128 = sub_10017DF08(&qword_100EA4098);
  __chkstk_darwin(v128);
  uint64_t v129 = (uint64_t)&v107 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10017DF08(qword_100E7B4D0);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v107 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v107 - v13;
  uint64_t v15 = type metadata accessor for Font.TextStyle();
  uint64_t v120 = *(void *)(v15 - 8);
  uint64_t v121 = v15;
  __chkstk_darwin(v15);
  uint64_t v119 = (char *)&v107 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_10017DF08(&qword_100EAADC0);
  __chkstk_darwin(v17);
  uint64_t v118 = (uint64_t *)((char *)&v107 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v19 = type metadata accessor for Image.Scale();
  uint64_t v116 = *(void *)(v19 - 8);
  unint64_t v117 = v19;
  __chkstk_darwin(v19);
  uint64_t v135 = (char *)&v107 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_10017DF08(&qword_100E63F80);
  __chkstk_darwin(v21 - 8);
  uint64_t v23 = (char *)&v107 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v136 = sub_10017DF08(&qword_100EA40A0);
  __chkstk_darwin(v136);
  uint64_t v25 = (uint64_t *)((char *)&v107 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v26 = sub_10017DF08(&qword_100E7B4C8);
  __chkstk_darwin(v26 - 8);
  uint64_t v130 = (uint64_t)&v107 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28);
  uint64_t v115 = (char *)&v107 - v29;
  __chkstk_darwin(v30);
  uint64_t v137 = (uint64_t)&v107 - v31;
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v127 = v179[21];
  int v126 = v180;
  uint64_t v125 = v181;
  int v124 = v182;
  uint64_t v122 = v184;
  uint64_t v123 = v183;
  swift_bridgeObjectRetain();
  uint64_t v32 = Image.init(systemName:)();
  uint64_t v138 = (void *)a1;
  char v33 = *(unsigned char *)(a1 + 40);
  uint64_t v132 = v14;
  uint64_t v133 = v11;
  uint64_t v114 = v32;
  if (v33) {
    uint64_t v34 = static Color.secondary.getter();
  }
  else {
    uint64_t v34 = static Color.green.getter();
  }
  uint64_t v113 = v34;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v36 = type metadata accessor for Font.Design();
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v23, 1, 1, v36);
  uint64_t v37 = static Font.system(size:weight:design:)();
  sub_1000F3400((uint64_t)v23, &qword_100E63F80);
  uint64_t v38 = swift_getKeyPath();
  uint64_t v39 = v116;
  unint64_t v40 = v117;
  uint64_t v41 = v135;
  (*(void (**)(char *, void, unint64_t))(v116 + 104))(v135, enum case for Image.Scale.large(_:), v117);
  uint64_t v42 = swift_getKeyPath();
  uint64_t v43 = *(int *)(v17 + 28);
  uint64_t v44 = v118;
  (*(void (**)(char *, char *, unint64_t))(v39 + 16))((char *)v118 + v43, v41, v40);
  uint64_t *v44 = v42;
  sub_1000F350C((uint64_t)v44, (uint64_t)v25 + *(int *)(v136 + 36), &qword_100EAADC0);
  uint64_t v45 = v113;
  *uint64_t v25 = v114;
  v25[1] = KeyPath;
  v25[2] = v45;
  v25[3] = v38;
  v25[4] = v37;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1000F3400((uint64_t)v44, &qword_100EAADC0);
  (*(void (**)(char *, unint64_t))(v39 + 8))(v135, v40);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_10097CD24();
  uint64_t v46 = (uint64_t)v115;
  View.accessibilityHidden(_:)();
  sub_1000F3400((uint64_t)v25, &qword_100EA40A0);
  sub_10097CE64(v46, v137);
  swift_beginAccess();
  id v47 = sub_10034384C();
  swift_endAccess();
  [v47 _scaledValueForValue:46.0];
  uint64_t v49 = v48;

  uint64_t v50 = v138[9];
  v179[0] = v138[8];
  v179[1] = v50;
  unint64_t v117 = sub_10014A85C();
  swift_bridgeObjectRetain();
  uint64_t v51 = Text.init<A>(_:)();
  uint64_t v53 = v52;
  LOBYTE(v45) = v54 & 1;
  uint64_t v56 = v119;
  uint64_t v55 = v120;
  uint64_t v57 = v121;
  (*(void (**)(char *, void, uint64_t))(v120 + 104))(v119, enum case for Font.TextStyle.title2(_:), v121);
  static Font.Weight.bold.getter();
  static Font.system(_:weight:)();
  (*(void (**)(char *, uint64_t))(v55 + 8))(v56, v57);
  uint64_t v58 = Text.font(_:)();
  uint64_t v60 = v59;
  LOBYTE(v57) = v61;
  swift_release();
  sub_100191924(v51, v53, v45);
  swift_bridgeObjectRelease();
  static Color.primary.getter();
  uint64_t v135 = (char *)Text.foregroundColor(_:)();
  uint64_t v136 = v62;
  uint64_t v121 = v63;
  LODWORD(v120) = v64;
  swift_release();
  sub_100191924(v58, v60, v57 & 1);
  swift_bridgeObjectRelease();
  uint64_t v119 = (char *)swift_getKeyPath();
  LODWORD(v118) = static Edge.Set.horizontal.getter();
  swift_beginAccess();
  id v65 = sub_10034384C();
  swift_endAccess();
  [v65 _scaledValueForValue:24.0];
  uint64_t v67 = v66;

  uint64_t v68 = v138[11];
  v179[0] = v138[10];
  v179[1] = v68;
  swift_bridgeObjectRetain();
  uint64_t v69 = Text.init<A>(_:)();
  uint64_t v71 = v70;
  LOBYTE(v51) = v72 & 1;
  static Font.subheadline.getter();
  uint64_t v73 = Text.font(_:)();
  uint64_t v75 = v74;
  LOBYTE(v45) = v76;
  swift_release();
  LOBYTE(v40) = v45 & 1;
  v77 = v138;
  sub_100191924(v69, v71, v51);
  swift_bridgeObjectRelease();
  static Color.secondary.getter();
  uint64_t v78 = Text.foregroundColor(_:)();
  uint64_t v115 = v79;
  uint64_t v116 = v78;
  LODWORD(v114) = v80;
  unint64_t v117 = v81;
  swift_release();
  sub_100191924(v73, v75, v40);
  swift_bridgeObjectRelease();
  uint64_t v113 = swift_getKeyPath();
  char v82 = static Edge.Set.horizontal.getter();
  uint64_t v83 = v77[14];
  if (v83)
  {
    uint64_t v84 = v77[12];
    uint64_t v85 = v77[13];
    swift_beginAccess();
    id v86 = sub_10034384C();
    swift_endAccess();
    [v86 _scaledValueForValue:40.0];
    uint64_t v88 = v87;

    sub_10097CED4((uint64_t)v77, (uint64_t)v179);
    uint64_t v89 = swift_allocObject();
    uint64_t v90 = memcpy((void *)(v89 + 16), v179, 0x88uLL);
    *(unsigned char *)(v89 + 152) = v84;
    __chkstk_darwin(v90);
    *(&v107 - 4) = v85;
    *(&v107 - 3) = v83;
    *(&v107 - 2) = (uint64_t)v77;
    uint64_t v91 = v109;
    Button.init(action:label:)();
    uint64_t v93 = v110;
    uint64_t v92 = v111;
    uint64_t v94 = *(void (**)(char *, char *, uint64_t))(v110 + 16);
    uint64_t v95 = v108;
    v94(v108, v91, v111);
    uint64_t v96 = (uint64_t)v112;
    *uint64_t v112 = v88;
    *(unsigned char *)(v96 + 8) = 0;
    *(_WORD *)(v96 + 9) = 257;
    uint64_t v97 = sub_10017DF08(&qword_100EA40C0);
    v94((char *)(v96 + *(int *)(v97 + 48)), v95, v92);
    uint64_t v98 = *(void (**)(char *, uint64_t))(v93 + 8);
    v98(v95, v92);
    sub_1000F350C(v96, v129, &qword_100EA4090);
    swift_storeEnumTagMultiPayload();
    sub_1001246C8(&qword_100EA40C8, &qword_100EA4090);
    uint64_t v99 = (uint64_t)v132;
    _ConditionalContent<>.init(storage:)();
    sub_1000F3400(v96, &qword_100EA4090);
    v98(v91, v92);
  }
  else
  {
    swift_storeEnumTagMultiPayload();
    sub_1001246C8(&qword_100EA40C8, &qword_100EA4090);
    uint64_t v99 = (uint64_t)v132;
    _ConditionalContent<>.init(storage:)();
  }
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v138 = v185;
  LODWORD(v131) = v186;
  uint64_t v129 = v187;
  char v100 = v188;
  uint64_t v101 = v189;
  uint64_t v102 = v190;
  uint64_t v163 = 0;
  char v164 = 1;
  uint64_t v165 = v127;
  char v166 = v126;
  uint64_t v167 = v125;
  char v168 = v124;
  uint64_t v169 = v123;
  uint64_t v170 = v122;
  uint64_t v171 = &v163;
  uint64_t v103 = v137;
  uint64_t v104 = v130;
  sub_1000F350C(v137, v130, &qword_100E7B4C8);
  uint64_t v160 = v49;
  char v161 = 0;
  __int16 v162 = 257;
  uint64_t v172 = v104;
  uint64_t v173 = &v160;
  v179[0] = (uint64_t)v135;
  v179[1] = v121;
  LOBYTE(v179[2]) = v120 & 1;
  v179[3] = v136;
  v179[4] = (uint64_t)v119;
  LOBYTE(v179[5]) = 1;
  LOBYTE(v179[6]) = (_BYTE)v118;
  memset(&v179[7], 0, 32);
  LOBYTE(v179[11]) = 1;
  uint64_t v157 = v67;
  char v158 = 0;
  __int16 v159 = 257;
  uint64_t v174 = v179;
  uint64_t v175 = &v157;
  uint64_t v147 = v116;
  uint64_t v148 = v115;
  char v149 = v114 & 1;
  unint64_t v150 = v117;
  uint64_t v151 = v113;
  char v152 = 1;
  char v153 = v82;
  long long v154 = 0u;
  long long v155 = 0u;
  char v156 = 1;
  uint64_t v176 = &v147;
  uint64_t v105 = (uint64_t)v133;
  sub_1000F350C(v99, (uint64_t)v133, qword_100E7B4D0);
  uint64_t v139 = 0;
  char v140 = 1;
  uint64_t v141 = v138;
  char v142 = v131;
  uint64_t v143 = v129;
  char v144 = v100;
  uint64_t v145 = v101;
  uint64_t v146 = v102;
  uint64_t v177 = v105;
  uint64_t v178 = &v139;
  sub_1004BA260();
  sub_1000F3400(v99, qword_100E7B4D0);
  sub_1000F3400(v103, &qword_100E7B4C8);
  sub_1000F3400(v105, qword_100E7B4D0);
  sub_100191924(v147, (uint64_t)v148, v149);
  swift_release();
  swift_bridgeObjectRelease();
  sub_100191924(v179[0], v179[1], v179[2]);
  swift_release();
  swift_bridgeObjectRelease();
  return sub_1000F3400(v104, &qword_100E7B4C8);
}

uint64_t sub_10097CBBC@<X0>(uint64_t a1@<X8>)
{
  sub_10014A85C();
  swift_bridgeObjectRetain();
  uint64_t v2 = Text.init<A>(_:)();
  uint64_t v4 = v3;
  char v6 = v5 & 1;
  static Font.subheadline.getter();
  uint64_t v7 = Text.font(_:)();
  uint64_t v9 = v8;
  char v11 = v10;
  swift_release();
  char v12 = v11 & 1;
  sub_100191924(v2, v4, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  Color.init(hex:)();
  uint64_t v13 = Text.foregroundColor(_:)();
  uint64_t v15 = v14;
  char v17 = v16;
  uint64_t v19 = v18;
  swift_release();
  sub_100191924(v7, v9, v12);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a1 = v13;
  *(void *)(a1 + 8) = v15;
  *(unsigned char *)(a1 + 16) = v17 & 1;
  *(void *)(a1 + 24) = v19;
  return result;
}

unint64_t sub_10097CD24()
{
  unint64_t result = qword_100EA40A8;
  if (!qword_100EA40A8)
  {
    sub_10018C6DC(&qword_100EA40A0);
    sub_10097CDC4();
    sub_1001246C8(&qword_100E6F778, &qword_100EAADC0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA40A8);
  }
  return result;
}

unint64_t sub_10097CDC4()
{
  unint64_t result = qword_100EA40B0;
  if (!qword_100EA40B0)
  {
    sub_10018C6DC(&qword_100EA40B8);
    sub_10033979C();
    sub_1001246C8(&qword_100E65218, &qword_100E65220);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA40B0);
  }
  return result;
}

uint64_t sub_10097CE64(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10017DF08(&qword_100E7B4C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10097CED4(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_10097CF0C()
{
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_10097CF6C()
{
  return sub_100A78058(*(unsigned char *)(v0 + 152));
}

uint64_t sub_10097CF74@<X0>(uint64_t a1@<X8>)
{
  return sub_10097CBBC(a1);
}

uint64_t sub_10097CF80()
{
  return sub_1001246C8(&qword_100EA40D0, &qword_100EA40D8);
}

uint64_t SearchLocation.init(searchCompletion:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v6 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  uint64_t v7 = sub_100109308(v6);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)v61 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10017DF08(&qword_100E639E8);
  uint64_t v11 = sub_100109308(v10);
  __chkstk_darwin(v11);
  sub_100109314();
  uint64_t v63 = v12;
  uint64_t v13 = sub_10017DF08(&qword_100E6D1D8);
  uint64_t v14 = sub_100109308(v13);
  __chkstk_darwin(v14);
  sub_100163E88();
  uint64_t v15 = type metadata accessor for TimeZone();
  sub_100179C0C();
  uint64_t v64 = v16;
  __chkstk_darwin(v17);
  sub_1001870B8();
  __chkstk_darwin(v18);
  uint64_t v20 = (char *)v61 - v19;
  *a2 = a1;
  id v21 = a1;
  id v22 = [v21 title];
  uint64_t v23 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v25 = v24;

  a2[1] = v23;
  a2[2] = v25;
  id v26 = [v21 subtitle];
  uint64_t v27 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v29 = v28;

  a2[3] = v27;
  a2[4] = v29;
  id v30 = [v21 w_calloutTitle];
  uint64_t v31 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v33 = v32;

  a2[5] = v31;
  a2[6] = v33;
  uint64_t v65 = 0;
  uint64_t v66 = 0;
  if (objc_msgSend(v21, "w_getCoordinate:", &v65))
  {
    uint64_t v34 = v65;
    uint64_t v35 = v66;
    uint64_t v62 = type metadata accessor for SearchLocation();
    uint64_t v36 = (char *)a2 + *(int *)(v62 + 36);
    *(void *)uint64_t v36 = v34;
    *((void *)v36 + 1) = v35;
    v36[16] = 0;
    id v37 = [v21 w_mapItem];
    id v38 = [v37 timeZone];

    if (v38)
    {
      static TimeZone._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v39 = *(void (**)(uint64_t, uint64_t, uint64_t))(v64 + 32);
      v39(v3, v2, v15);
      _s7Weather24LocationCompositionStateOwst_0(v3, 0, 1, v15);
      if (_s7Weather24LocationCompositionStateOwet_0(v3, 1, v15) != 1)
      {
        v39((uint64_t)v20, v3, v15);
        uint64_t v40 = sub_10097EBC8([v21 w_mapItem]);
        if (v41)
        {
          v61[6] = v41;
          v61[7] = v40;
          uint64_t v42 = sub_10097D67C(v21, v40, v41);
          v61[2] = v43;
          v61[3] = v42;
          uint64_t v44 = CLLocationCoordinate2D.id.getter();
          v61[4] = v45;
          v61[5] = v44;
          (*(void (**)(uint64_t, char *, uint64_t))(v64 + 16))(v2, v20, v15);
          Date.init()();
          uint64_t v46 = type metadata accessor for Date();
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v9, 0, 1, v46);
          id v47 = [v21 title];
          uint64_t v48 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          v61[0] = v49;
          v61[1] = v48;

          id v50 = [v21 subtitle];
          static String._unconditionallyBridgeFromObjectiveC(_:)();

          uint64_t v51 = v63;
          Location.init(id:name:timeZone:coordinate:lastRefreshDate:searchTitle:searchSubtitle:preciseName:secondaryName:)();

          uint64_t v52 = sub_10017E36C();
          v53(v52);
          uint64_t v54 = type metadata accessor for Location();
          _s7Weather24LocationCompositionStateOwst_0(v51, 0, 1, v54);
          return sub_100360330(v51, (uint64_t)a2 + *(int *)(v62 + 32));
        }

        (*(void (**)(char *, uint64_t))(v64 + 8))(v20, v15);
        goto LABEL_9;
      }
    }
    else
    {
      _s7Weather24LocationCompositionStateOwst_0(v3, 1, 1, v15);
    }

    sub_1001781AC(v3, &qword_100E6D1D8);
LABEL_9:
    uint64_t v58 = *(int *)(v62 + 32);
    goto LABEL_10;
  }

  uint64_t v56 = type metadata accessor for SearchLocation();
  uint64_t v57 = (char *)a2 + *(int *)(v56 + 36);
  *(void *)uint64_t v57 = 0;
  *((void *)v57 + 1) = 0;
  v57[16] = 1;
  uint64_t v58 = *(int *)(v56 + 32);
LABEL_10:
  uint64_t v59 = (uint64_t)a2 + v58;
  uint64_t v60 = type metadata accessor for Location();
  return _s7Weather24LocationCompositionStateOwst_0(v59, 1, 1, v60);
}

uint64_t SearchLocation.init(searchCompletion:title:subtitle:calloutTitle:location:coordinate:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>, uint64_t a10, uint64_t a11, char a12)
{
  *a9 = a1;
  a9[1] = a2;
  a9[2] = a3;
  a9[3] = a4;
  a9[4] = a5;
  a9[5] = a6;
  a9[6] = a7;
  uint64_t v14 = type metadata accessor for SearchLocation();
  uint64_t result = sub_100360330(a8, (uint64_t)a9 + *(int *)(v14 + 32));
  uint64_t v16 = (char *)a9 + *(int *)(v14 + 36);
  *(void *)uint64_t v16 = a10;
  *((void *)v16 + 1) = a11;
  v16[16] = a12 & 1;
  return result;
}

id SearchLocation.searchCompletion.getter()
{
  id v1 = *v0;
  id v2 = *v0;
  return v1;
}

void SearchLocation.searchCompletion.setter(void *a1)
{
  *id v1 = a1;
}

uint64_t SearchLocation.subtitle.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SearchLocation.calloutTitle.getter()
{
  uint64_t v1 = *(void *)(v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SearchLocation.location.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SearchLocation() + 32);

  return sub_1000EB4E0(v3, a1);
}

uint64_t SearchLocation.coordinate.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for SearchLocation() + 36));
}

uint64_t sub_10097D67C(void *a1, uint64_t a2, uint64_t a3)
{
  id v6 = [a1 w_mapItem];
  id v7 = [v6 wc_weatherDisplayName];

  uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v10 = v9;

  if (v8 == a2 && v10 == a3)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  char v12 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  if (v12) {
    return 0;
  }
  id v13 = [a1 w_mapItem];
  id v14 = [v13 wc_weatherDisplayName];

  uint64_t v15 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  return v15;
}

uint64_t SearchLocation.shortDescription.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = sub_10017DF08(&qword_100E639E8);
  uint64_t v4 = sub_100109308(v3);
  __chkstk_darwin(v4);
  sub_100125FF8();
  sub_10017DF08(&qword_100E635E0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100C31880;
  *(void *)(inited + 32) = 0xD000000000000010;
  *(void *)(inited + 40) = 0x8000000100CB7FC0;
  id v6 = *(void **)v1;
  uint64_t v7 = sub_10017DF08(&qword_100EA40E0);
  *(void *)(inited + 48) = v6;
  *(void *)(inited + 72) = v7;
  *(void *)(inited + 80) = 0x656C746974;
  *(void *)(inited + 88) = 0xE500000000000000;
  uint64_t v8 = *(void *)(v1 + 16);
  *(void *)(inited + 96) = *(void *)(v1 + 8);
  *(void *)(inited + 104) = v8;
  *(void *)(inited + 120) = &type metadata for String;
  *(void *)(inited + 128) = 0x656C746974627573;
  *(void *)(inited + 136) = 0xE800000000000000;
  uint64_t v9 = *(void *)(v1 + 32);
  *(void *)(inited + 144) = *(void *)(v1 + 24);
  *(void *)(inited + 152) = v9;
  *(void *)(inited + 168) = &type metadata for String;
  strcpy((char *)(inited + 176), "calloutTitle");
  *(unsigned char *)(inited + 189) = 0;
  *(_WORD *)(inited + 190) = -5120;
  uint64_t v10 = *(void *)(v1 + 48);
  *(void *)(inited + 192) = *(void *)(v1 + 40);
  *(void *)(inited + 200) = v10;
  *(void *)(inited + 216) = &type metadata for String;
  *(void *)(inited + 224) = 0x6E6F697461636F6CLL;
  *(void *)(inited + 232) = 0xE800000000000000;
  *(void *)(inited + 264) = sub_10017DF08(&qword_100E65F18);
  uint64_t v11 = type metadata accessor for SearchLocation();
  sub_1000EB4E0(v1 + *(int *)(v11 + 32), v2);
  uint64_t v12 = type metadata accessor for Location();
  sub_10017A6D8(v2);
  if (v13)
  {
    id v14 = v6;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1001781AC(v2, &qword_100E639E8);
    uint64_t v16 = 0;
    uint64_t v18 = 0;
  }
  else
  {
    sub_10097FA60(&qword_100EA40F8, (void (*)(uint64_t))&type metadata accessor for Location);
    id v15 = v6;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v16 = ShortDescribable.description.getter();
    uint64_t v18 = v17;
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v2, v12);
  }
  *(void *)(inited + 240) = v16;
  *(void *)(inited + 248) = v18;
  Dictionary.init(dictionaryLiteral:)();
  a1[3] = sub_10017DF08(&qword_100EA40E8);
  a1[4] = sub_10097EC38();
  sub_100170694(a1);
  return ShortDescription.init(name:_:)();
}

uint64_t sub_10097DA98()
{
  sub_10097FA60(&qword_100EA4200, (void (*)(uint64_t))type metadata accessor for SearchLocation);

  return ShortDescribable.description.getter();
}

uint64_t static SearchLocation.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v45 = type metadata accessor for Location();
  sub_100179C0C();
  uint64_t v7 = v6;
  __chkstk_darwin(v8);
  sub_100109314();
  uint64_t v44 = v9;
  uint64_t v10 = sub_10017DF08(&qword_100E6EEC0);
  sub_100162E4C();
  __chkstk_darwin(v11);
  sub_10016279C();
  uint64_t v12 = sub_10017DF08(&qword_100E639E8);
  uint64_t v13 = sub_100109308(v12);
  __chkstk_darwin(v13);
  sub_1001870B8();
  uint64_t v15 = __chkstk_darwin(v14);
  uint64_t v17 = &v40[-v16];
  __chkstk_darwin(v15);
  uint64_t v19 = &v40[-v18];
  uint64_t v20 = *(void **)a1;
  id v21 = *(void **)a2;
  if (*(void *)a1)
  {
    if (!v21) {
      return 0;
    }
    uint64_t v43 = v7;
    sub_100477D2C();
    id v22 = v21;
    id v23 = v20;
    char v24 = static NSObject.== infix(_:_:)();

    if ((v24 & 1) == 0) {
      return 0;
    }
  }
  else
  {
    uint64_t v43 = v7;
    if (v21) {
      return 0;
    }
  }
  BOOL v25 = *(void *)(a1 + 8) == *(void *)(a2 + 8) && *(void *)(a1 + 16) == *(void *)(a2 + 16);
  if (v25 || (char v26 = _stringCompareWithSmolCheck(_:_:expecting:)(), result = 0, (v26 & 1) != 0))
  {
    BOOL v28 = *(void *)(a1 + 24) == *(void *)(a2 + 24) && *(void *)(a1 + 32) == *(void *)(a2 + 32);
    if (v28 || (char v29 = _stringCompareWithSmolCheck(_:_:expecting:)(), result = 0, (v29 & 1) != 0))
    {
      BOOL v30 = *(void *)(a1 + 40) == *(void *)(a2 + 40) && *(void *)(a1 + 48) == *(void *)(a2 + 48);
      if (v30 || (char v31 = _stringCompareWithSmolCheck(_:_:expecting:)(), result = 0, (v31 & 1) != 0))
      {
        uint64_t v32 = type metadata accessor for SearchLocation();
        sub_1000EB4E0(a1 + *(int *)(v32 + 32), (uint64_t)v19);
        sub_1000EB4E0(a2 + *(int *)(v32 + 32), (uint64_t)v17);
        uint64_t v33 = v2 + *(int *)(v10 + 48);
        sub_1000EB4E0((uint64_t)v19, v2);
        sub_1000EB4E0((uint64_t)v17, v33);
        uint64_t v34 = v45;
        if (_s7Weather24LocationCompositionStateOwet_0(v2, 1, v45) == 1)
        {
          sub_1001781AC((uint64_t)v17, &qword_100E639E8);
          sub_1001781AC((uint64_t)v19, &qword_100E639E8);
          sub_10017A6D8(v33);
          if (!v25) {
            goto LABEL_28;
          }
          sub_1001781AC(v2, &qword_100E639E8);
        }
        else
        {
          sub_1000EB4E0(v2, v3);
          sub_10017A6D8(v33);
          if (v25)
          {
            sub_1001781AC((uint64_t)v17, &qword_100E639E8);
            sub_1001781AC((uint64_t)v19, &qword_100E639E8);
            (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v3, v34);
LABEL_28:
            sub_1001781AC(v2, &qword_100E6EEC0);
            return 0;
          }
          uint64_t v35 = v43;
          uint64_t v36 = *(void (**)(uint64_t, uint64_t, uint64_t))(v43 + 32);
          uint64_t v42 = v32;
          uint64_t v37 = v44;
          v36(v44, v33, v34);
          sub_10097FA60((unint64_t *)&qword_100E639A8, (void (*)(uint64_t))&type metadata accessor for Location);
          int v41 = dispatch thunk of static Equatable.== infix(_:_:)();
          id v38 = *(void (**)(uint64_t, uint64_t))(v35 + 8);
          v38(v37, v34);
          sub_1001781AC((uint64_t)v17, &qword_100E639E8);
          sub_1001781AC((uint64_t)v19, &qword_100E639E8);
          v38(v3, v34);
          uint64_t v32 = v42;
          sub_1001781AC(v2, &qword_100E639E8);
          if ((v41 & 1) == 0) {
            return 0;
          }
        }
        uint64_t v39 = *(int *)(v32 + 36);
        if (*(unsigned char *)(a1 + v39 + 16))
        {
          if ((*(unsigned char *)(a2 + v39 + 16) & 1) == 0) {
            return 0;
          }
        }
        else if ((*(unsigned char *)(a2 + v39 + 16) & 1) != 0 || (static CLLocationCoordinate2D.== infix(_:_:)() & 1) == 0)
        {
          return 0;
        }
        return 1;
      }
    }
  }
  return result;
}

void SearchLocation.hash(into:)()
{
  uint64_t v3 = v0;
  uint64_t v4 = type metadata accessor for Location();
  sub_100179C0C();
  uint64_t v6 = v5;
  __chkstk_darwin(v7);
  sub_10016279C();
  uint64_t v8 = sub_10017DF08(&qword_100E639E8);
  uint64_t v9 = sub_100109308(v8);
  __chkstk_darwin(v9);
  sub_100125FF8();
  uint64_t v10 = *v0;
  if (*v0)
  {
    Hasher._combine(_:)(1u);
    id v11 = v10;
    NSObject.hash(into:)();
  }
  else
  {
    Hasher._combine(_:)(0);
  }
  swift_bridgeObjectRetain();
  sub_10017EC00();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_10017EC00();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_10017EC00();
  swift_bridgeObjectRelease();
  uint64_t v12 = type metadata accessor for SearchLocation();
  sub_1000EB4E0((uint64_t)v3 + *(int *)(v12 + 32), v2);
  if (_s7Weather24LocationCompositionStateOwet_0(v2, 1, v4) == 1)
  {
    Hasher._combine(_:)(0);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(v1, v2, v4);
    Hasher._combine(_:)(1u);
    sub_10097FA60(&qword_100E639A0, (void (*)(uint64_t))&type metadata accessor for Location);
    dispatch thunk of Hashable.hash(into:)();
    uint64_t v13 = sub_10017E36C();
    v14(v13);
  }
  if (*((unsigned char *)v3 + *(int *)(v12 + 36) + 16) == 1)
  {
    Hasher._combine(_:)(0);
  }
  else
  {
    Hasher._combine(_:)(1u);
    CLLocationCoordinate2D.hash(into:)();
  }
}

Swift::Int SearchLocation.hashValue.getter()
{
  return Hasher._finalize()();
}

Swift::Int sub_10097E1C8()
{
  return Hasher._finalize()();
}

void SearchLocation.init(from:)(void *a1@<X0>, uint64_t a2@<X8>)
{
  v19[0] = a2;
  sub_10017DF08(&qword_100E639E8);
  sub_100162E4C();
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19[1] = sub_10017DF08(&qword_100EA4100);
  sub_100179C0C();
  __chkstk_darwin(v8);
  sub_100163E88();
  uint64_t v20 = type metadata accessor for SearchLocation();
  sub_100162E4C();
  __chkstk_darwin(v9);
  sub_10012B938();
  *(void *)uint64_t v3 = 0;
  uint64_t v10 = a1[3];
  id v21 = a1;
  sub_1001B1E64(a1, v10);
  sub_10097EC8C();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2)
  {
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v21);
  }
  else
  {
    *(void *)uint64_t v3 = 0;
    LOBYTE(v22) = 0;
    *(void *)(v3 + 8) = KeyedDecodingContainer.decode(_:forKey:)();
    *(void *)(v3 + 16) = v11;
    *(void *)(v3 + 24) = sub_1001A015C(1);
    *(void *)(v3 + 32) = v12;
    *(void *)(v3 + 40) = sub_1001A015C(2);
    *(void *)(v3 + 48) = v13;
    LOBYTE(v22) = 4;
    sub_10097ED34(&qword_100EA4110, &qword_100E6F9D0);
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    uint64_t v14 = v20;
    sub_100360330((uint64_t)v7, v3 + *(int *)(v20 + 32));
    sub_10017DF08(&qword_100E9D3B8);
    char v24 = 5;
    sub_10097EDB8(&qword_100EA4118, &qword_100E992F0);
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    uint64_t v15 = sub_1001840F8();
    v16(v15);
    char v17 = v23;
    uint64_t v18 = v3 + *(int *)(v14 + 36);
    *(_OWORD *)uint64_t v18 = v22;
    *(unsigned char *)(v18 + 16) = v17;
    sub_100774A28(v3, v19[0]);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v21);
    sub_10097ECD8(v3);
  }
}

uint64_t SearchLocation.encode(to:)(void *a1)
{
  uint64_t v4 = sub_10017DF08(&qword_100EA4120);
  sub_100179C0C();
  uint64_t v6 = v5;
  __chkstk_darwin(v7);
  sub_10012B938();
  sub_1001B1E64(a1, a1[3]);
  sub_10097EC8C();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  sub_100180894();
  if (!v1)
  {
    sub_100180894();
    sub_100180894();
    type metadata accessor for SearchLocation();
    sub_10017DF08(&qword_100E639E8);
    sub_10097ED34(&qword_100EA4128, &qword_100E6F9F8);
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    sub_10017DF08(&qword_100E9D3B8);
    sub_10097EDB8(&qword_100EA4130, &qword_100E99310);
    KeyedEncodingContainer.encode<A>(_:forKey:)();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v2, v4);
}

unint64_t sub_10097E840(Swift::String string)
{
  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_100E08418, v2);
  swift_bridgeObjectRelease();
  if (v3 >= 6) {
    return 6;
  }
  else {
    return v3;
  }
}

unint64_t sub_10097E890(char a1)
{
  unint64_t result = 0x656C746974;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x656C746974627573;
      break;
    case 2:
      unint64_t result = 0x5474756F6C6C6163;
      break;
    case 3:
      unint64_t result = 0xD000000000000014;
      break;
    case 4:
      unint64_t result = 0x6E6F697461636F6CLL;
      break;
    case 5:
      unint64_t result = 0x616E6964726F6F63;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_10097E968(char a1)
{
  unint64_t result = 0x656C746974;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x656C746974627573;
      break;
    case 2:
      unint64_t result = 0x5474756F6C6C6163;
      break;
    case 3:
      unint64_t result = 0xD000000000000014;
      break;
    case 4:
      unint64_t result = 0x6E6F697461636F6CLL;
      break;
    case 5:
      unint64_t result = 0x616E6964726F6F63;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_10097EA40(unsigned __int8 *a1, char *a2)
{
  return sub_10088B31C(*a1, *a2);
}

Swift::Int sub_10097EA4C()
{
  return sub_100652758(*v0);
}

uint64_t sub_10097EA54(uint64_t a1)
{
  return sub_1002C2EAC(a1, *v1);
}

Swift::Int sub_10097EA5C(uint64_t a1)
{
  return sub_1002C439C(a1, *v1);
}

unint64_t sub_10097EA64@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_10097E840(*a1);
  *a2 = result;
  return result;
}

unint64_t sub_10097EA94@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_10097E890(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_10097EAC0()
{
  return sub_10097E968(*v0);
}

uint64_t sub_10097EAC8@<X0>(Swift::String a1@<X1:X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_10097E88C(a1);
  *a2 = result;
  return result;
}

uint64_t sub_10097EAF0(uint64_t a1)
{
  unint64_t v2 = sub_10097EC8C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10097EB2C(uint64_t a1)
{
  unint64_t v2 = sub_10097EC8C();

  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_10097EB68(void *a1@<X0>, uint64_t a2@<X8>)
{
}

uint64_t sub_10097EB80(void *a1)
{
  return SearchLocation.encode(to:)(a1);
}

void sub_10097EB98()
{
}

uint64_t sub_10097EBB0()
{
  return SearchLocation.write(to:)();
}

uint64_t sub_10097EBC8(void *a1)
{
  id v2 = [a1 name];

  if (!v2) {
    return 0;
  }
  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  return v3;
}

unint64_t sub_10097EC38()
{
  unint64_t result = qword_100EA40F0;
  if (!qword_100EA40F0)
  {
    sub_10018C6DC(&qword_100EA40E8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA40F0);
  }
  return result;
}

unint64_t sub_10097EC8C()
{
  unint64_t result = qword_100EA4108;
  if (!qword_100EA4108)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA4108);
  }
  return result;
}

uint64_t sub_10097ECD8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SearchLocation();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10097ED34(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10018C6DC(&qword_100E639E8);
    sub_10097FA60(a2, (void (*)(uint64_t))&type metadata accessor for Location);
    uint64_t result = sub_10019DAB8();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10097EDB8(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10018C6DC(&qword_100E9D3B8);
    sub_10097FA60(a2, type metadata accessor for CLLocationCoordinate2D);
    uint64_t result = sub_10019DAB8();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10097EE3C()
{
  return sub_10097FA60(&qword_100EA4138, (void (*)(uint64_t))type metadata accessor for SearchLocation);
}

uint64_t sub_10097EE84()
{
  return sub_10097FA60(&qword_100EA4140, (void (*)(uint64_t))type metadata accessor for SearchLocation);
}

char *initializeBufferWithCopyOfBuffer for SearchLocation(char *a1, char **a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  unint64_t v4 = *a2;
  *(void *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = &v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain();
  }
  else
  {
    uint64_t v7 = a1;
    uint64_t v8 = a2[2];
    *((void *)a1 + 1) = a2[1];
    *((void *)a1 + 2) = v8;
    uint64_t v9 = a2[4];
    *((void *)a1 + 3) = a2[3];
    *((void *)a1 + 4) = v9;
    uint64_t v10 = a2[6];
    uint64_t v11 = *(int *)(a3 + 32);
    uint64_t v12 = &a1[v11];
    uint64_t v13 = (char *)a2 + v11;
    *((void *)a1 + 5) = a2[5];
    *((void *)a1 + 6) = v10;
    uint64_t v14 = type metadata accessor for Location();
    uint64_t v15 = v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v13, 1, v14))
    {
      uint64_t v16 = sub_10017DF08(&qword_100E639E8);
      memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v12, 0, 1, v14);
    }
    uint64_t v17 = *(int *)(a3 + 36);
    uint64_t v18 = &v7[v17];
    uint64_t v19 = (uint64_t)a2 + v17;
    *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
    v18[16] = *(unsigned char *)(v19 + 16);
  }
  return v7;
}

uint64_t destroy for SearchLocation(id *a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = (uint64_t)a1 + *(int *)(a2 + 32);
  uint64_t v5 = type metadata accessor for Location();
  uint64_t result = _s7Weather24LocationCompositionStateOwet_0(v4, 1, v5);
  if (!result)
  {
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
    return v7(v4, v5);
  }
  return result;
}

void *initializeWithCopy for SearchLocation(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *(void **)a2;
  uint64_t v6 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v6;
  uint64_t v8 = *(void *)(a2 + 24);
  a1[2] = *(void *)(a2 + 16);
  a1[3] = v8;
  uint64_t v9 = *(void *)(a2 + 40);
  a1[4] = *(void *)(a2 + 32);
  a1[5] = v9;
  uint64_t v10 = *(int *)(a3 + 32);
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (const void *)(a2 + v10);
  a1[6] = *(void *)(a2 + 48);
  uint64_t v13 = type metadata accessor for Location();
  id v14 = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v12, 1, v13))
  {
    uint64_t v15 = sub_10017DF08(&qword_100E639E8);
    memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, const void *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v11, 0, 1, v13);
  }
  uint64_t v16 = *(int *)(a3 + 36);
  uint64_t v17 = (char *)a1 + v16;
  uint64_t v18 = a2 + v16;
  *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
  v17[16] = *(unsigned char *)(v18 + 16);
  return a1;
}

uint64_t assignWithCopy for SearchLocation(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void **)a1;
  uint64_t v7 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  id v8 = v7;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v9 = *(int *)(a3 + 32);
  uint64_t v10 = (void *)(a1 + v9);
  uint64_t v11 = (const void *)(a2 + v9);
  uint64_t v12 = type metadata accessor for Location();
  int v13 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v10, 1, v12);
  int v14 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v11, 1, v12);
  if (!v13)
  {
    uint64_t v15 = *(void *)(v12 - 8);
    if (!v14)
    {
      (*(void (**)(void *, const void *, uint64_t))(v15 + 24))(v10, v11, v12);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v15 + 8))(v10, v12);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    uint64_t v16 = sub_10017DF08(&qword_100E639E8);
    memcpy(v10, v11, *(void *)(*(void *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v10, 0, 1, v12);
LABEL_7:
  uint64_t v17 = *(int *)(a3 + 36);
  uint64_t v18 = a1 + v17;
  uint64_t v19 = (long long *)(a2 + v17);
  long long v20 = *v19;
  *(unsigned char *)(v18 + 16) = *((unsigned char *)v19 + 16);
  *(_OWORD *)uint64_t v18 = v20;
  return a1;
}

uint64_t initializeWithTake for SearchLocation(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  uint64_t v6 = *(int *)(a3 + 32);
  uint64_t v7 = (void *)(a1 + v6);
  id v8 = (const void *)(a2 + v6);
  uint64_t v9 = type metadata accessor for Location();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v9))
  {
    uint64_t v10 = sub_10017DF08(&qword_100E639E8);
    memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v7, 0, 1, v9);
  }
  uint64_t v11 = *(int *)(a3 + 36);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
  *(unsigned char *)(v12 + 16) = *(unsigned char *)(v13 + 16);
  return a1;
}

uint64_t assignWithTake for SearchLocation(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v6 = *(void **)a1;
  *(void *)a1 = *a2;

  uint64_t v7 = a2[2];
  *(void *)(a1 + 8) = a2[1];
  *(void *)(a1 + 16) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a2[4];
  *(void *)(a1 + 24) = a2[3];
  *(void *)(a1 + 32) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = a2[6];
  *(void *)(a1 + 40) = a2[5];
  *(void *)(a1 + 48) = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = *(int *)(a3 + 32);
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = type metadata accessor for Location();
  int v14 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v11, 1, v13);
  int v15 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v12, 1, v13);
  if (!v14)
  {
    uint64_t v16 = *(void *)(v13 - 8);
    if (!v15)
    {
      (*(void (**)(void *, char *, uint64_t))(v16 + 40))(v11, v12, v13);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v16 + 8))(v11, v13);
    goto LABEL_6;
  }
  if (v15)
  {
LABEL_6:
    uint64_t v17 = sub_10017DF08(&qword_100E639E8);
    memcpy(v11, v12, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v11, 0, 1, v13);
LABEL_7:
  uint64_t v18 = *(int *)(a3 + 36);
  uint64_t v19 = a1 + v18;
  long long v20 = (char *)a2 + v18;
  *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
  *(unsigned char *)(v19 + 16) = v20[16];
  return a1;
}

uint64_t getEnumTagSinglePayload for SearchLocation(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10097F748);
}

uint64_t sub_10097F748(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 16);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_10017DF08(&qword_100E639E8);
    uint64_t v9 = a1 + *(int *)(a3 + 32);
    return _s7Weather24LocationCompositionStateOwet_0(v9, a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for SearchLocation(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10097F7E8);
}

uint64_t sub_10097F7E8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 16) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_10017DF08(&qword_100E639E8);
    uint64_t v8 = v5 + *(int *)(a4 + 32);
    return _s7Weather24LocationCompositionStateOwst_0(v8, a2, a2, v7);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for SearchLocation.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *uint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10097F938);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SearchLocation.CodingKeys()
{
  return &type metadata for SearchLocation.CodingKeys;
}

unint64_t sub_10097F974()
{
  unint64_t result = qword_100EA41E8;
  if (!qword_100EA41E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA41E8);
  }
  return result;
}

unint64_t sub_10097F9C4()
{
  unint64_t result = qword_100EA41F0;
  if (!qword_100EA41F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA41F0);
  }
  return result;
}

unint64_t sub_10097FA14()
{
  unint64_t result = qword_100EA41F8;
  if (!qword_100EA41F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA41F8);
  }
  return result;
}

uint64_t sub_10097FA60(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10097FAA8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Date();
  uint64_t v5 = **(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);

  return v5(a1, a2, v4);
}

uint64_t sub_10097FB14(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t sub_10097FB78(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t sub_10097FBDC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t sub_10097FC40(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t sub_10097FCA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10097FCB8);
}

uint64_t sub_10097FCB8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Date();

  return _s7Weather24LocationCompositionStateOwet_0(a1, a2, v4);
}

uint64_t sub_10097FD00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10097FD14);
}

uint64_t sub_10097FD14(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Date();

  return _s7Weather24LocationCompositionStateOwst_0(a1, a2, a2, v4);
}

uint64_t sub_10097FD64(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x54746E6572727563 && a2 == 0xEB00000000656D69)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_10097FE04()
{
  return 0x54746E6572727563;
}

uint64_t sub_10097FE24(void *a1)
{
  uint64_t v2 = sub_10017DF08(&qword_100EA42B0);
  sub_100179C0C();
  uint64_t v4 = v3;
  __chkstk_darwin(v5);
  sub_1001626E0();
  uint64_t v8 = v7 - v6;
  sub_1001B1E64(a1, a1[3]);
  sub_100980488();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  type metadata accessor for Date();
  sub_10098058C(&qword_100E63968, (void (*)(uint64_t))&type metadata accessor for Date);
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v8, v2);
}

uint64_t sub_10097FF68@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for Date();
  sub_100179C0C();
  uint64_t v20 = v5;
  __chkstk_darwin(v6);
  sub_1001626E0();
  uint64_t v23 = v8 - v7;
  uint64_t v9 = sub_10017DF08(&qword_100EA42A0);
  sub_100179C0C();
  uint64_t v22 = v10;
  __chkstk_darwin(v11);
  sub_1001626E0();
  uint64_t v14 = v13 - v12;
  uint64_t v15 = type metadata accessor for TimeState();
  __chkstk_darwin(v15 - 8);
  sub_1001626E0();
  uint64_t v18 = v17 - v16;
  sub_1001B1E64(a1, a1[3]);
  sub_100980488();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (!v2)
  {
    sub_10098058C(&qword_100E63948, (void (*)(uint64_t))&type metadata accessor for Date);
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v14, v9);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v20 + 32))(v18, v23, v4);
    sub_1009804D4(v18, a2);
  }
  return _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)a1);
}

uint64_t sub_100980184@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_10097FD64(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1009801B0(uint64_t a1)
{
  unint64_t v2 = sub_100980488();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1009801EC(uint64_t a1)
{
  unint64_t v2 = sub_100980488();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10098022C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10097FF68(a1, a2);
}

uint64_t sub_100980244(void *a1)
{
  return sub_10097FE24(a1);
}

uint64_t sub_10098025C@<X0>(uint64_t *a1@<X8>)
{
  sub_10017DF08(&qword_100E635E0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100C251B0;
  *(void *)(inited + 32) = 0x54746E6572727563;
  *(void *)(inited + 40) = 0xEB00000000656D69;
  uint64_t v4 = type metadata accessor for Date();
  *(void *)(inited + 72) = v4;
  uint64_t v5 = sub_100170694((uint64_t *)(inited + 48));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(v5, v1, v4);
  Dictionary.init(dictionaryLiteral:)();
  a1[3] = sub_10017DF08(&qword_100EA42B8);
  a1[4] = sub_100980538();
  sub_100170694(a1);
  type metadata accessor for TimeState();
  return ShortDescription.init(name:_:)();
}

uint64_t sub_1009803A4()
{
  sub_10098058C(&qword_100EA42C8, (void (*)(uint64_t))type metadata accessor for TimeState);

  return ShortDescribable.description.getter();
}

uint64_t sub_100980410()
{
  return sub_1008C1A98();
}

uint64_t sub_100980428()
{
  return sub_1008C1608();
}

uint64_t sub_100980440()
{
  return sub_10098058C(&qword_100EA4298, (void (*)(uint64_t))type metadata accessor for TimeState);
}

unint64_t sub_100980488()
{
  unint64_t result = qword_100EA42A8;
  if (!qword_100EA42A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA42A8);
  }
  return result;
}

uint64_t sub_1009804D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TimeState();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_100980538()
{
  unint64_t result = qword_100EA42C0;
  if (!qword_100EA42C0)
  {
    sub_10018C6DC(&qword_100EA42B8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA42C0);
  }
  return result;
}

uint64_t sub_10098058C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for TimeState.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x100980670);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for TimeState.CodingKeys()
{
  return &type metadata for TimeState.CodingKeys;
}

unint64_t sub_1009806AC()
{
  unint64_t result = qword_100EA42D0;
  if (!qword_100EA42D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA42D0);
  }
  return result;
}

unint64_t sub_1009806FC()
{
  unint64_t result = qword_100EA42D8;
  if (!qword_100EA42D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA42D8);
  }
  return result;
}

unint64_t sub_10098074C()
{
  unint64_t result = qword_100EA42E0;
  if (!qword_100EA42E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA42E0);
  }
  return result;
}

uint64_t sub_100980798@<X0>(uint64_t *a1@<X8>)
{
  a1[3] = sub_10017DF08(&qword_100EA42F0);
  a1[4] = sub_1009808C4();
  sub_100170694(a1);
  return ShortDescription.init(name:_:)();
}

uint64_t sub_100980830@<X0>(uint64_t *a1@<X8>)
{
  return sub_100980798(a1);
}

uint64_t sub_100980838()
{
  sub_100980918();

  return ShortDescribable.description.getter();
}

unint64_t sub_100980878()
{
  unint64_t result = qword_100EA42E8;
  if (!qword_100EA42E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA42E8);
  }
  return result;
}

unint64_t sub_1009808C4()
{
  unint64_t result = qword_100EA42F8;
  if (!qword_100EA42F8)
  {
    sub_10018C6DC(&qword_100EA42F0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA42F8);
  }
  return result;
}

unint64_t sub_100980918()
{
  unint64_t result = qword_100EA4300;
  if (!qword_100EA4300)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA4300);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for LocationViewState(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100980A30);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LocationViewState()
{
  return &type metadata for LocationViewState;
}

uint64_t sub_100980A68(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = type metadata accessor for WeatherMapOverlayKind();
  __chkstk_darwin(v4);
  swift_bridgeObjectRetain();
  switch(sub_1005A0E98())
  {
    case 1u:
      if (qword_100E62900 != -1) {
        swift_once();
      }
      uint64_t v5 = &byte_100F52128;
      goto LABEL_47;
    case 4u:
      if (qword_100E62908 != -1) {
        swift_once();
      }
      uint64_t v5 = &byte_100F52138;
      goto LABEL_47;
    case 5u:
      if (qword_100E62910 != -1) {
        swift_once();
      }
      uint64_t v5 = &byte_100F52148;
      goto LABEL_47;
    case 7u:
      if (qword_100E62918 != -1) {
        swift_once();
      }
      uint64_t v5 = &byte_100F52158;
      goto LABEL_47;
    case 8u:
      if (qword_100E62920 != -1) {
        swift_once();
      }
      uint64_t v5 = &byte_100F52168;
      goto LABEL_47;
    case 9u:
      if (qword_100E62928 != -1) {
        swift_once();
      }
      uint64_t v5 = &byte_100F52178;
      goto LABEL_47;
    case 0xAu:
    case 0x19u:
      sub_100187B7C();
      goto LABEL_55;
    case 0xBu:
      if (qword_100E62930 != -1) {
        swift_once();
      }
      uint64_t v5 = &byte_100F52188;
      goto LABEL_47;
    case 0xCu:
      if (qword_100E62938 != -1) {
        swift_once();
      }
      uint64_t v5 = &byte_100F52198;
      goto LABEL_47;
    case 0xDu:
      if (qword_100E62940 != -1) {
        swift_once();
      }
      uint64_t v5 = &byte_100F521A8;
      goto LABEL_47;
    case 0xEu:
      if (qword_100E62948 != -1) {
        swift_once();
      }
      uint64_t v5 = &byte_100F521B8;
      goto LABEL_47;
    case 0xFu:
      uint64_t v40 = sub_10017C7D0();
      v41(v40);
      sub_100180338();
      uint64_t v42 = sub_10017C7EC();
      v43(v42);
      return 15;
    case 0x10u:
      type metadata accessor for WeatherMapPrecipitationOverlayKind();
      sub_100162E4C();
      uint64_t v25 = sub_1001819EC();
      v26(v25);
      uint64_t v27 = sub_10017C7D0();
      v28(v27);
      sub_100180338();
      uint64_t v29 = sub_10017C7EC();
      v30(v29);
      return 16;
    case 0x11u:
      uint64_t v44 = sub_10017C7D0();
      v45(v44);
      sub_100180338();
      uint64_t v46 = sub_10017C7EC();
      v47(v46);
      return 17;
    case 0x12u:
      uint64_t v13 = sub_10017C7D0();
      v14(v13);
      sub_100180338();
      uint64_t v15 = sub_10017C7EC();
      v16(v15);
      return 18;
    case 0x13u:
      uint64_t v31 = sub_10017C7D0();
      v32(v31);
      sub_10017F7FC();
      uint64_t v33 = sub_10017C7EC();
      v34(v33);
      return 19;
    case 0x14u:
      type metadata accessor for WeatherMapPrecipitationOverlayKind();
      sub_100162E4C();
      uint64_t v6 = sub_1001819EC();
      v7(v6);
      uint64_t v8 = sub_10017C7D0();
      v9(v8);
      sub_10017F7FC();
      uint64_t v10 = sub_10017C7EC();
      v11(v10);
      return 20;
    case 0x15u:
      uint64_t v35 = sub_10017C7D0();
      v36(v35);
      sub_10017F7FC();
      uint64_t v37 = sub_10017C7EC();
      v38(v37);
      return 21;
    case 0x16u:
      uint64_t v17 = sub_10017C7D0();
      v18(v17);
      sub_10017F7FC();
      uint64_t v19 = sub_10017C7EC();
      v20(v19);
      return 22;
    case 0x17u:
      if (qword_100E62950 != -1) {
        swift_once();
      }
      uint64_t v5 = &byte_100F521C8;
LABEL_47:
      unsigned int v12 = *v5;
      swift_bridgeObjectRetain();
      break;
    case 0x1Au:
      sub_100B57B3C();
      unsigned int v12 = 26;
      break;
    case 0x1Bu:
      sub_100B57E4C();
      unsigned int v12 = 27;
      break;
    case 0x1Cu:
      if (qword_100E62870 != -1) {
        swift_once();
      }
      uint64_t v21 = type metadata accessor for Logger();
      sub_1002102B0(v21, (uint64_t)qword_100F52058);
      swift_bridgeObjectRetain_n();
      uint64_t v22 = Logger.logObject.getter();
      os_log_type_t v23 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v22, v23))
      {
        char v24 = (uint8_t *)swift_slowAlloc();
        uint64_t v48 = swift_slowAlloc();
        *(_DWORD *)char v24 = 136315138;
        swift_bridgeObjectRetain();
        sub_10016414C(a1, a2, &v48);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        _os_log_impl((void *)&_mh_execute_header, v22, v23, "Failed to find PerformanceTest with name: %s", v24, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      unsigned int v12 = 0;
      break;
    default:
      sub_10017EC1C();
      sub_100187B7C();
LABEL_55:
      _assertionFailure(_:_:file:line:flags:)();
      __break(1u);
      JUMPOUT(0x100981264);
  }
  return v12;
}

uint64_t type metadata accessor for PerformanceTestDefinitions_iPad()
{
  return self;
}

uint64_t sub_1009812FC(uint64_t a1, unint64_t a2)
{
  return sub_100980A68(a1, a2);
}

uint64_t sub_100981314()
{
  uint64_t result = sub_100981340();
  byte_100F52128 = 1;
  qword_100F52130 = result;
  return result;
}

uint64_t sub_100981340()
{
  uint64_t v0 = type metadata accessor for Navigate(0);
  __chkstk_darwin(v0);
  unint64_t v2 = &v8[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  type metadata accessor for SettingReader();
  static SettingReader.shared.getter();
  if (qword_100E624C8 != -1) {
    swift_once();
  }
  SettingReader.read<A>(_:)();
  swift_release();
  char v3 = v8[15];
  *unint64_t v2 = 2;
  type metadata accessor for Navigate.Destination(0);
  swift_storeEnumTagMultiPayload();
  *((unsigned char *)v2 + *(int *)(v0 + 20)) = 0;
  sub_10017DF08(&qword_100E65E98);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_100C251B0;
  *(void *)(v4 + 56) = &type metadata for Scroll;
  *(void *)(v4 + 64) = &off_100E15EF8;
  *(void *)(v4 + 32) = sub_1009815B4;
  *(void *)(v4 + 40) = 0;
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_100C28110;
  *(void *)(v5 + 56) = &type metadata for Mica;
  *(void *)(v5 + 64) = &off_100E26518;
  *(unsigned char *)(v5 + 32) = 0;
  *(void *)(v5 + 96) = &type metadata for Delay;
  *(void *)(v5 + 104) = &off_100E12AD8;
  *(void *)(v5 + 72) = 0x3FF0000000000000;
  *(void *)(v5 + 136) = &type metadata for UpdateWeather;
  *(void *)(v5 + 144) = &off_100E3B100;
  *(unsigned char *)(v5 + 112) = v3;
  *(void *)(v5 + 176) = &type metadata for Delay;
  *(void *)(v5 + 184) = &off_100E12AD8;
  *(void *)(v5 + 152) = 0x3FF0000000000000;
  *(void *)(v5 + 216) = v0;
  *(void *)(v5 + 224) = &off_100E22EC8;
  uint64_t v6 = sub_100170694((uint64_t *)(v5 + 192));
  sub_100765EC8((uint64_t)v2, (uint64_t)v6, (void (*)(void))type metadata accessor for Navigate);
  *(void *)(v5 + 256) = &type metadata for Delay;
  *(void *)(v5 + 264) = &off_100E12AD8;
  *(void *)(v5 + 232) = 0x3FF0000000000000;
  *(void *)(v5 + 296) = &type metadata for Sidebar;
  *(void *)(v5 + 304) = &off_100E31358;
  *(unsigned char *)(v5 + 272) = 0;
  *(void *)(v5 + 336) = &type metadata for Delay;
  *(void *)(v5 + 344) = &off_100E12AD8;
  *(void *)(v5 + 312) = 0x3FF0000000000000;
  *(void *)(v5 + 376) = &type metadata for Measure;
  *(void *)(v5 + 384) = &off_100E11158;
  *(void *)(v5 + 352) = v4;
  *(void *)(v5 + 416) = &type metadata for Mica;
  *(void *)(v5 + 424) = &off_100E26518;
  *(unsigned char *)(v5 + 392) = 1;
  sub_100765F28((uint64_t)v2, (void (*)(void))type metadata accessor for Navigate);
  return v5;
}

uint64_t sub_1009815B4(double a1, double a2, double a3, double a4)
{
  double v4 = a4 + -240.0;
  double v5 = (a4 + -240.0) * 3.0;
  sub_10017DF08(&qword_100E928F8);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_100C25ED0;
  *(void *)(v6 + 56) = &type metadata for Down;
  *(void *)(v6 + 64) = &off_100E11EA8;
  uint64_t v7 = swift_allocObject();
  *(void *)(v6 + 32) = v7;
  *(unsigned char *)(v7 + 16) = 1;
  *(_OWORD *)(v7 + 24) = xmmword_100C6BF90;
  *(void *)(v7 + 40) = 0x4072C00000000000;
  *(double *)(v7 + 48) = v4;
  *(double *)(v7 + 56) = v5;
  *(void *)(v6 + 96) = &type metadata for Up;
  *(void *)(v6 + 104) = &off_100E152C8;
  uint64_t v8 = swift_allocObject();
  *(void *)(v6 + 72) = v8;
  *(unsigned char *)(v8 + 16) = 0;
  *(_OWORD *)(v8 + 24) = xmmword_100C6BF90;
  *(void *)(v8 + 40) = 0x4072C00000000000;
  *(double *)(v8 + 48) = v4;
  *(double *)(v8 + 56) = v5;
  return v6;
}

uint64_t sub_1009816BC()
{
  uint64_t result = sub_1009816E8();
  byte_100F52138 = 4;
  qword_100F52140 = result;
  return result;
}

uint64_t sub_1009816E8()
{
  uint64_t v0 = type metadata accessor for Navigate(0);
  __chkstk_darwin(v0);
  unint64_t v2 = &v9[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  type metadata accessor for SettingReader();
  static SettingReader.shared.getter();
  if (qword_100E624C8 != -1) {
    swift_once();
  }
  SettingReader.read<A>(_:)();
  swift_release();
  char v3 = v9[15];
  *unint64_t v2 = 2;
  type metadata accessor for Navigate.Destination(0);
  swift_storeEnumTagMultiPayload();
  *((unsigned char *)v2 + *(int *)(v0 + 20)) = 0;
  sub_100981918();
  uint64_t v5 = v4;
  sub_10017DF08(&qword_100E65E98);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_100C28110;
  *(void *)(v6 + 56) = &type metadata for Mica;
  *(void *)(v6 + 64) = &off_100E26518;
  *(unsigned char *)(v6 + 32) = 0;
  *(void *)(v6 + 96) = &type metadata for Delay;
  *(void *)(v6 + 104) = &off_100E12AD8;
  *(void *)(v6 + 72) = 0x3FF0000000000000;
  *(void *)(v6 + 136) = &type metadata for UpdateWeather;
  *(void *)(v6 + 144) = &off_100E3B100;
  *(unsigned char *)(v6 + 112) = v3;
  *(void *)(v6 + 176) = &type metadata for Delay;
  *(void *)(v6 + 184) = &off_100E12AD8;
  *(void *)(v6 + 152) = 0x3FF0000000000000;
  *(void *)(v6 + 216) = v0;
  *(void *)(v6 + 224) = &off_100E22EC8;
  uint64_t v7 = sub_100170694((uint64_t *)(v6 + 192));
  sub_100765EC8((uint64_t)v2, (uint64_t)v7, (void (*)(void))type metadata accessor for Navigate);
  *(void *)(v6 + 256) = &type metadata for Delay;
  *(void *)(v6 + 264) = &off_100E12AD8;
  *(void *)(v6 + 232) = 0x3FF0000000000000;
  *(void *)(v6 + 296) = &type metadata for Sidebar;
  *(void *)(v6 + 304) = &off_100E31358;
  *(unsigned char *)(v6 + 272) = 1;
  *(void *)(v6 + 336) = &type metadata for Delay;
  *(void *)(v6 + 344) = &off_100E12AD8;
  *(void *)(v6 + 312) = 0x3FF0000000000000;
  *(void *)(v6 + 376) = &type metadata for Measure;
  *(void *)(v6 + 384) = &off_100E11158;
  *(void *)(v6 + 352) = v5;
  *(void *)(v6 + 416) = &type metadata for Mica;
  *(void *)(v6 + 424) = &off_100E26518;
  *(unsigned char *)(v6 + 392) = 1;
  sub_100765F28((uint64_t)v2, (void (*)(void))type metadata accessor for Navigate);
  return v6;
}

double sub_100981918()
{
  sub_10017DF08(&qword_100E65E98);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_100C25ED0;
  *(void *)(v0 + 56) = &type metadata for Swipe;
  *(void *)(v0 + 64) = &off_100E1E928;
  *(void *)(v0 + 32) = sub_100981A94;
  *(void *)(v0 + 40) = 0;
  *(void *)(v0 + 96) = &type metadata for Delay;
  *(void *)(v0 + 104) = &off_100E12AD8;
  *(void *)(v0 + 72) = 0x3FF0000000000000;
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_100C25ED0;
  *(void *)(v1 + 56) = &type metadata for Swipe;
  *(void *)(v1 + 64) = &off_100E1E928;
  *(void *)(v1 + 32) = sub_100981AAC;
  *(void *)(v1 + 40) = 0;
  *(void *)(v1 + 96) = &type metadata for Delay;
  *(void *)(v1 + 104) = &off_100E12AD8;
  *(void *)(v1 + 72) = 0x3FF0000000000000;
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_100C25ED0;
  *(void *)(v2 + 56) = &type metadata for Swipe;
  *(void *)(v2 + 64) = &off_100E1E928;
  *(void *)(v2 + 32) = sub_100981A94;
  *(void *)(v2 + 40) = 0;
  *(void *)(v2 + 96) = &type metadata for Delay;
  *(void *)(v2 + 104) = &off_100E12AD8;
  *(void *)(v2 + 72) = 0x3FF0000000000000;
  uint64_t v3 = swift_allocObject();
  *(void *)&double result = 3;
  *(_OWORD *)(v3 + 16) = xmmword_100C33BA0;
  *(void *)(v3 + 56) = &type metadata for Repeat;
  *(void *)(v3 + 64) = &off_100E2F8D8;
  *(void *)(v3 + 32) = 2;
  *(void *)(v3 + 40) = v0;
  *(void *)(v3 + 96) = &type metadata for Repeat;
  *(void *)(v3 + 104) = &off_100E2F8D8;
  *(void *)(v3 + 72) = 4;
  *(void *)(v3 + 80) = v1;
  *(void *)(v3 + 136) = &type metadata for Repeat;
  *(void *)(v3 + 144) = &off_100E2F8D8;
  *(void *)(v3 + 112) = 2;
  *(void *)(v3 + 120) = v2;
  return result;
}

uint64_t sub_100981A94(double a1, double a2, double a3, double a4)
{
  return sub_100981AC4((uint64_t)&type metadata for Next, (uint64_t)&off_100E2E3B0, 0, a1, a2, a3, a4);
}

uint64_t sub_100981AAC(double a1, double a2, double a3, double a4)
{
  return sub_100981AC4((uint64_t)&type metadata for Previous, (uint64_t)&off_100E1DE00, 1, a1, a2, a3, a4);
}

uint64_t sub_100981AC4(uint64_t a1, uint64_t a2, char a3, double a4, double a5, double a6, double a7)
{
  sub_10017DF08(&qword_100E92900);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_100C251B0;
  *(void *)(v12 + 56) = a1;
  *(void *)(v12 + 64) = a2;
  uint64_t v13 = swift_allocObject();
  *(void *)(v12 + 32) = v13;
  *(unsigned char *)(v13 + 16) = a3;
  *(void *)(v13 + 24) = 0;
  *(void *)(v13 + 32) = 0;
  *(double *)(v13 + 40) = a7;
  *(double *)(v13 + 48) = a6;
  *(void *)(v13 + 56) = 1;
  *(void *)(v13 + 64) = 0x3FF0000000000000;
  return v12;
}

uint64_t sub_100981B64()
{
  uint64_t result = sub_100981B90();
  byte_100F52148 = 5;
  qword_100F52150 = result;
  return result;
}

uint64_t sub_100981B90()
{
  uint64_t v0 = type metadata accessor for DispatchAction();
  __chkstk_darwin(v0);
  uint64_t v2 = &v8[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  type metadata accessor for SettingReader();
  static SettingReader.shared.getter();
  if (qword_100E624C8 != -1) {
    swift_once();
  }
  SettingReader.read<A>(_:)();
  swift_release();
  char v3 = v8[15];
  static Location.cupertino.getter();
  type metadata accessor for PerformanceTestAction();
  swift_storeEnumTagMultiPayload();
  type metadata accessor for MainAction();
  swift_storeEnumTagMultiPayload();
  v2[*(int *)(v0 + 20)] = 0;
  uint64_t v4 = sub_100981DDC();
  sub_10017DF08(&qword_100E65E98);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_100C28110;
  *(void *)(v5 + 56) = &type metadata for Mica;
  *(void *)(v5 + 64) = &off_100E26518;
  *(unsigned char *)(v5 + 32) = 0;
  *(void *)(v5 + 96) = &type metadata for Delay;
  *(void *)(v5 + 104) = &off_100E12AD8;
  *(void *)(v5 + 72) = 0x3FF0000000000000;
  *(void *)(v5 + 136) = &type metadata for UpdateWeather;
  *(void *)(v5 + 144) = &off_100E3B100;
  *(unsigned char *)(v5 + 112) = v3;
  *(void *)(v5 + 176) = &type metadata for Delay;
  *(void *)(v5 + 184) = &off_100E12AD8;
  *(void *)(v5 + 152) = 0x3FF0000000000000;
  *(void *)(v5 + 216) = v0;
  *(void *)(v5 + 224) = &off_100E39A90;
  uint64_t v6 = sub_100170694((uint64_t *)(v5 + 192));
  sub_100765EC8((uint64_t)v2, (uint64_t)v6, (void (*)(void))type metadata accessor for DispatchAction);
  *(void *)(v5 + 256) = &type metadata for Delay;
  *(void *)(v5 + 264) = &off_100E12AD8;
  *(void *)(v5 + 232) = 0x3FF0000000000000;
  *(void *)(v5 + 296) = &type metadata for Sidebar;
  *(void *)(v5 + 304) = &off_100E31358;
  *(unsigned char *)(v5 + 272) = 0;
  *(void *)(v5 + 336) = &type metadata for Delay;
  *(void *)(v5 + 344) = &off_100E12AD8;
  *(void *)(v5 + 312) = 0x4008000000000000;
  *(void *)(v5 + 376) = &type metadata for Measure;
  *(void *)(v5 + 384) = &off_100E11158;
  *(void *)(v5 + 352) = v4;
  *(void *)(v5 + 416) = &type metadata for Mica;
  *(void *)(v5 + 424) = &off_100E26518;
  *(unsigned char *)(v5 + 392) = 1;
  sub_100765F28((uint64_t)v2, (void (*)(void))type metadata accessor for DispatchAction);
  return v5;
}

uint64_t sub_100981DDC()
{
  uint64_t v0 = type metadata accessor for DispatchAction();
  __chkstk_darwin(v0);
  uint64_t v2 = (char *)&v6 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Location.newYork.getter();
  type metadata accessor for PerformanceTestAction();
  swift_storeEnumTagMultiPayload();
  type metadata accessor for MainAction();
  swift_storeEnumTagMultiPayload();
  v2[*(int *)(v0 + 20)] = 0;
  sub_10017DF08(&qword_100E65E98);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_100C25ED0;
  *(void *)(v3 + 56) = v0;
  *(void *)(v3 + 64) = &off_100E39A90;
  uint64_t v4 = sub_100170694((uint64_t *)(v3 + 32));
  sub_100765EC8((uint64_t)v2, (uint64_t)v4, (void (*)(void))type metadata accessor for DispatchAction);
  *(void *)(v3 + 96) = &type metadata for Delay;
  *(void *)(v3 + 104) = &off_100E12AD8;
  *(void *)(v3 + 72) = 0x4008000000000000;
  sub_100765F28((uint64_t)v2, (void (*)(void))type metadata accessor for DispatchAction);
  return v3;
}

void sub_100981F1C()
{
  sub_100981F48();
  byte_100F52158 = 7;
  qword_100F52160 = v0;
}

double sub_100981F48()
{
  type metadata accessor for SettingReader();
  static SettingReader.shared.getter();
  if (qword_100E624C8 != -1) {
    swift_once();
  }
  SettingReader.read<A>(_:)();
  swift_release();
  sub_10017DF08(&qword_100E65E98);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_100C25ED0;
  *(void *)(v0 + 56) = &type metadata for Rotate;
  *(void *)(v0 + 64) = &off_100E23518;
  *(void *)(v0 + 32) = 3;
  *(void *)(v0 + 96) = &type metadata for Delay;
  *(void *)(v0 + 104) = &off_100E12AD8;
  *(void *)(v0 + 72) = 0x3FF0000000000000;
  uint64_t v1 = swift_allocObject();
  *(void *)&double result = 8;
  *(_OWORD *)(v1 + 16) = xmmword_100C34240;
  *(void *)(v1 + 56) = &type metadata for Mica;
  *(void *)(v1 + 64) = &off_100E26518;
  *(unsigned char *)(v1 + 32) = 0;
  *(void *)(v1 + 96) = &type metadata for Delay;
  *(void *)(v1 + 104) = &off_100E12AD8;
  *(void *)(v1 + 72) = 0x3FF0000000000000;
  *(void *)(v1 + 136) = &type metadata for UpdateWeather;
  *(void *)(v1 + 144) = &off_100E3B100;
  *(unsigned char *)(v1 + 112) = v3;
  *(void *)(v1 + 176) = &type metadata for Delay;
  *(void *)(v1 + 184) = &off_100E12AD8;
  *(void *)(v1 + 152) = 0x3FF0000000000000;
  *(void *)(v1 + 216) = &type metadata for Sidebar;
  *(void *)(v1 + 224) = &off_100E31358;
  *(unsigned char *)(v1 + 192) = 1;
  *(void *)(v1 + 256) = &type metadata for Delay;
  *(void *)(v1 + 264) = &off_100E12AD8;
  *(void *)(v1 + 232) = 0x3FF0000000000000;
  *(void *)(v1 + 296) = &type metadata for Measure;
  *(void *)(v1 + 304) = &off_100E11158;
  *(void *)(v1 + 272) = v0;
  *(void *)(v1 + 336) = &type metadata for Mica;
  *(void *)(v1 + 344) = &off_100E26518;
  *(unsigned char *)(v1 + 312) = 1;
  return result;
}

uint64_t sub_1009820E0()
{
  uint64_t result = sub_10098210C();
  byte_100F52168 = 8;
  qword_100F52170 = result;
  return result;
}

uint64_t sub_10098210C()
{
  uint64_t v0 = type metadata accessor for Navigate(0);
  __chkstk_darwin(v0);
  uint64_t v2 = &v8[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  type metadata accessor for SettingReader();
  static SettingReader.shared.getter();
  if (qword_100E624C8 != -1) {
    swift_once();
  }
  SettingReader.read<A>(_:)();
  swift_release();
  char v3 = v8[15];
  *uint64_t v2 = 2;
  type metadata accessor for Navigate.Destination(0);
  swift_storeEnumTagMultiPayload();
  *((unsigned char *)v2 + *(int *)(v0 + 20)) = 0;
  sub_10017DF08(&qword_100E65E98);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_100C251B0;
  *(void *)(v4 + 56) = &type metadata for Scroll;
  *(void *)(v4 + 64) = &off_100E15EF8;
  *(void *)(v4 + 32) = sub_100982380;
  *(void *)(v4 + 40) = 0;
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_100C28110;
  *(void *)(v5 + 56) = &type metadata for Mica;
  *(void *)(v5 + 64) = &off_100E26518;
  *(unsigned char *)(v5 + 32) = 0;
  *(void *)(v5 + 96) = &type metadata for Delay;
  *(void *)(v5 + 104) = &off_100E12AD8;
  *(void *)(v5 + 72) = 0x3FF0000000000000;
  *(void *)(v5 + 136) = &type metadata for UpdateWeather;
  *(void *)(v5 + 144) = &off_100E3B100;
  *(unsigned char *)(v5 + 112) = v3;
  *(void *)(v5 + 176) = &type metadata for Delay;
  *(void *)(v5 + 184) = &off_100E12AD8;
  *(void *)(v5 + 152) = 0x3FF0000000000000;
  *(void *)(v5 + 216) = v0;
  *(void *)(v5 + 224) = &off_100E22EC8;
  uint64_t v6 = sub_100170694((uint64_t *)(v5 + 192));
  sub_100765EC8((uint64_t)v2, (uint64_t)v6, (void (*)(void))type metadata accessor for Navigate);
  *(void *)(v5 + 256) = &type metadata for Delay;
  *(void *)(v5 + 264) = &off_100E12AD8;
  *(void *)(v5 + 232) = 0x3FF0000000000000;
  *(void *)(v5 + 296) = &type metadata for Sidebar;
  *(void *)(v5 + 304) = &off_100E31358;
  *(unsigned char *)(v5 + 272) = 1;
  *(void *)(v5 + 336) = &type metadata for Delay;
  *(void *)(v5 + 344) = &off_100E12AD8;
  *(void *)(v5 + 312) = 0x3FF0000000000000;
  *(void *)(v5 + 376) = &type metadata for Measure;
  *(void *)(v5 + 384) = &off_100E11158;
  *(void *)(v5 + 352) = v4;
  *(void *)(v5 + 416) = &type metadata for Mica;
  *(void *)(v5 + 424) = &off_100E26518;
  *(unsigned char *)(v5 + 392) = 1;
  sub_100765F28((uint64_t)v2, (void (*)(void))type metadata accessor for Navigate);
  return v5;
}

uint64_t sub_100982380(double a1, double a2, double a3, double a4)
{
  CGRect v12 = CGRectInset(*(CGRect *)&a1, 10.0, 90.0);
  CGFloat x = v12.origin.x;
  CGFloat y = v12.origin.y;
  CGFloat width = v12.size.width;
  CGFloat height = v12.size.height;
  sub_10017DF08(&qword_100E928F8);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_100C25ED0;
  *(void *)(v8 + 56) = &type metadata for Down;
  *(void *)(v8 + 64) = &off_100E11EA8;
  uint64_t v9 = swift_allocObject();
  *(void *)(v8 + 32) = v9;
  *(unsigned char *)(v9 + 16) = 1;
  *(CGFloat *)(v9 + 24) = x;
  *(CGFloat *)(v9 + 32) = y;
  *(CGFloat *)(v9 + 40) = width;
  *(CGFloat *)(v9 + 48) = height;
  *(CGFloat *)(v9 + 56) = height;
  *(void *)(v8 + 96) = &type metadata for Up;
  *(void *)(v8 + 104) = &off_100E152C8;
  uint64_t v10 = swift_allocObject();
  *(void *)(v8 + 72) = v10;
  *(unsigned char *)(v10 + 16) = 0;
  *(CGFloat *)(v10 + 24) = x;
  *(CGFloat *)(v10 + 32) = y;
  *(CGFloat *)(v10 + 40) = width;
  *(CGFloat *)(v10 + 48) = height;
  *(CGFloat *)(v10 + 56) = height;
  return v8;
}

void sub_100982474()
{
  sub_1009824A0();
  byte_100F52178 = 9;
  qword_100F52180 = v0;
}

double sub_1009824A0()
{
  type metadata accessor for SettingReader();
  static SettingReader.shared.getter();
  if (qword_100E624C8 != -1) {
    swift_once();
  }
  SettingReader.read<A>(_:)();
  swift_release();
  sub_10017DF08(&qword_100E65E98);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_100C251B0;
  *(void *)(v0 + 56) = &type metadata for Scroll;
  *(void *)(v0 + 64) = &off_100E15EF8;
  *(void *)(v0 + 32) = sub_100982634;
  *(void *)(v0 + 40) = 0;
  uint64_t v1 = swift_allocObject();
  *(void *)&double result = 8;
  *(_OWORD *)(v1 + 16) = xmmword_100C34240;
  *(void *)(v1 + 56) = &type metadata for Mica;
  *(void *)(v1 + 64) = &off_100E26518;
  *(unsigned char *)(v1 + 32) = 0;
  *(void *)(v1 + 96) = &type metadata for Delay;
  *(void *)(v1 + 104) = &off_100E12AD8;
  *(void *)(v1 + 72) = 0x3FF0000000000000;
  *(void *)(v1 + 136) = &type metadata for UpdateWeather;
  *(void *)(v1 + 144) = &off_100E3B100;
  *(unsigned char *)(v1 + 112) = v3;
  *(void *)(v1 + 176) = &type metadata for Delay;
  *(void *)(v1 + 184) = &off_100E12AD8;
  *(void *)(v1 + 152) = 0x3FF0000000000000;
  *(void *)(v1 + 216) = &type metadata for Sidebar;
  *(void *)(v1 + 224) = &off_100E31358;
  *(unsigned char *)(v1 + 192) = 0;
  *(void *)(v1 + 256) = &type metadata for Delay;
  *(void *)(v1 + 264) = &off_100E12AD8;
  *(void *)(v1 + 232) = 0x3FF0000000000000;
  *(void *)(v1 + 296) = &type metadata for Measure;
  *(void *)(v1 + 304) = &off_100E11158;
  *(void *)(v1 + 272) = v0;
  *(void *)(v1 + 336) = &type metadata for Mica;
  *(void *)(v1 + 344) = &off_100E26518;
  *(unsigned char *)(v1 + 312) = 1;
  return result;
}

uint64_t sub_100982634(double a1, double a2, double a3, double a4)
{
  double v6 = a3 + -5.0;
  sub_10017DF08(&qword_100E928F8);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_100C25ED0;
  *(void *)(v7 + 56) = &type metadata for Down;
  *(void *)(v7 + 64) = &off_100E11EA8;
  uint64_t v8 = swift_allocObject();
  *(void *)(v7 + 32) = v8;
  *(unsigned char *)(v8 + 16) = 1;
  *(double *)(v8 + 24) = v6;
  *(double *)(v8 + 32) = a2;
  *(void *)(v8 + 40) = 0x4014000000000000;
  *(double *)(v8 + 48) = a4;
  *(void *)(v8 + 56) = 0x4072C00000000000;
  *(void *)(v7 + 96) = &type metadata for Up;
  *(void *)(v7 + 104) = &off_100E152C8;
  uint64_t v9 = swift_allocObject();
  *(void *)(v7 + 72) = v9;
  *(unsigned char *)(v9 + 16) = 0;
  *(double *)(v9 + 24) = v6;
  *(double *)(v9 + 32) = a2;
  *(void *)(v9 + 40) = 0x4014000000000000;
  *(double *)(v9 + 48) = a4;
  *(void *)(v9 + 56) = 0x4072C00000000000;
  return v7;
}

void sub_100982734()
{
  sub_100982B74((uint64_t (*)(uint64_t))sub_1009827BC, 0);
  byte_100F52188 = 11;
  qword_100F52190 = v0;
}

void sub_100982778()
{
  sub_100982B74((uint64_t (*)(uint64_t))sub_1009827BC, 0);
  byte_100F52198 = 12;
  qword_100F521A0 = v0;
}

double sub_1009827BC()
{
  sub_10017DF08(&qword_100E65E98);
  uint64_t v0 = swift_allocObject();
  *(void *)&double result = 4;
  *(_OWORD *)(v0 + 16) = xmmword_100C31870;
  *(void *)(v0 + 56) = &type metadata for Sidebar;
  *(void *)(v0 + 64) = &off_100E31358;
  *(unsigned char *)(v0 + 32) = 1;
  *(void *)(v0 + 96) = &type metadata for Delay;
  *(void *)(v0 + 104) = &off_100E12AD8;
  *(void *)(v0 + 72) = 0x4000000000000000;
  *(void *)(v0 + 136) = &type metadata for Sidebar;
  *(void *)(v0 + 144) = &off_100E31358;
  *(unsigned char *)(v0 + 112) = 0;
  *(void *)(v0 + 176) = &type metadata for Delay;
  *(void *)(v0 + 184) = &off_100E12AD8;
  *(void *)(v0 + 152) = 0x4000000000000000;
  return result;
}

void sub_10098283C()
{
  sub_100982B74((uint64_t (*)(uint64_t))sub_1009828C4, 1);
  byte_100F521A8 = 13;
  qword_100F521B0 = v0;
}

void sub_100982880()
{
  sub_100982B74((uint64_t (*)(uint64_t))sub_1009828C4, 1);
  byte_100F521B8 = 14;
  qword_100F521C0 = v0;
}

uint64_t sub_1009828C4()
{
  uint64_t v0 = type metadata accessor for DispatchAction();
  sub_100162E4C();
  __chkstk_darwin(v1);
  char v3 = (char *)&v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  double v6 = (char *)&v17 - v5;
  uint64_t v7 = sub_10017DF08(&qword_100E66458);
  uint64_t v8 = &v6[*(int *)(v7 + 48)];
  uint64_t v9 = (uint64_t)&v6[*(int *)(v7 + 64)];
  uint64_t v10 = enum case for WeatherMapOverlayKind.temperature(_:);
  type metadata accessor for WeatherMapOverlayKind();
  sub_100162E4C();
  (*(void (**)(char *, uint64_t))(v11 + 104))(v6, v10);
  type metadata accessor for LocationComponentAction(0);
  swift_storeEnumTagMultiPayload();
  *(_OWORD *)uint64_t v8 = 0u;
  *((_OWORD *)v8 + 1) = 0u;
  v8[32] = 1;
  uint64_t v12 = type metadata accessor for Date();
  _s7Weather24LocationCompositionStateOwst_0(v9, 1, 1, v12);
  type metadata accessor for LocationViewAction();
  swift_storeEnumTagMultiPayload();
  type metadata accessor for MainAction();
  swift_storeEnumTagMultiPayload();
  v6[*(int *)(v0 + 20)] = 1;
  type metadata accessor for ViewAction();
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  v3[*(int *)(v0 + 20)] = 1;
  sub_10017DF08(&qword_100E65E98);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_100C31870;
  *(void *)(v13 + 56) = v0;
  *(void *)(v13 + 64) = &off_100E39A90;
  uint64_t v14 = sub_100170694((uint64_t *)(v13 + 32));
  sub_100765EC8((uint64_t)v6, (uint64_t)v14, (void (*)(void))type metadata accessor for DispatchAction);
  *(void *)(v13 + 96) = &type metadata for Delay;
  *(void *)(v13 + 104) = &off_100E12AD8;
  *(void *)(v13 + 72) = 0x4000000000000000;
  *(void *)(v13 + 136) = v0;
  *(void *)(v13 + 144) = &off_100E39A90;
  uint64_t v15 = sub_100170694((uint64_t *)(v13 + 112));
  sub_100765EC8((uint64_t)v3, (uint64_t)v15, (void (*)(void))type metadata accessor for DispatchAction);
  *(void *)(v13 + 176) = &type metadata for Delay;
  *(void *)(v13 + 184) = &off_100E12AD8;
  *(void *)(v13 + 152) = 0x4000000000000000;
  sub_100765F28((uint64_t)v3, (void (*)(void))type metadata accessor for DispatchAction);
  sub_100765F28((uint64_t)v6, (void (*)(void))type metadata accessor for DispatchAction);
  return v13;
}

void sub_100982B30()
{
  sub_100982B74((uint64_t (*)(uint64_t))sub_100982D1C, 1);
  byte_100F521C8 = 23;
  qword_100F521D0 = v0;
}

double sub_100982B74(uint64_t (*a1)(uint64_t), char a2)
{
  type metadata accessor for SettingReader();
  static SettingReader.shared.getter();
  if (qword_100E624C8 != -1) {
    swift_once();
  }
  SettingReader.read<A>(_:)();
  uint64_t v4 = swift_release();
  uint64_t v5 = a1(v4);
  sub_10017DF08(&qword_100E65E98);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_100C251B0;
  *(void *)(v6 + 56) = &type metadata for Repeat;
  *(void *)(v6 + 64) = &off_100E2F8D8;
  *(void *)(v6 + 32) = 3;
  *(void *)(v6 + 40) = v5;
  uint64_t v7 = swift_allocObject();
  *(void *)&double result = 8;
  *(_OWORD *)(v7 + 16) = xmmword_100C34240;
  *(void *)(v7 + 56) = &type metadata for Mica;
  *(void *)(v7 + 64) = &off_100E26518;
  *(unsigned char *)(v7 + 32) = 0;
  *(void *)(v7 + 96) = &type metadata for Delay;
  *(void *)(v7 + 104) = &off_100E12AD8;
  *(void *)(v7 + 72) = 0x3FF0000000000000;
  *(void *)(v7 + 136) = &type metadata for UpdateWeather;
  *(void *)(v7 + 144) = &off_100E3B100;
  *(unsigned char *)(v7 + 112) = v9;
  *(void *)(v7 + 176) = &type metadata for Delay;
  *(void *)(v7 + 184) = &off_100E12AD8;
  *(void *)(v7 + 152) = 0x3FF0000000000000;
  *(void *)(v7 + 216) = &type metadata for Sidebar;
  *(void *)(v7 + 224) = &off_100E31358;
  *(unsigned char *)(v7 + 192) = a2;
  *(void *)(v7 + 256) = &type metadata for Delay;
  *(void *)(v7 + 264) = &off_100E12AD8;
  *(void *)(v7 + 232) = 0x4000000000000000;
  *(void *)(v7 + 296) = &type metadata for Measure;
  *(void *)(v7 + 304) = &off_100E11158;
  *(void *)(v7 + 272) = v6;
  *(void *)(v7 + 336) = &type metadata for Mica;
  *(void *)(v7 + 344) = &off_100E26518;
  *(unsigned char *)(v7 + 312) = 1;
  return result;
}

uint64_t sub_100982D1C()
{
  uint64_t v0 = type metadata accessor for DispatchAction();
  __chkstk_darwin(v0);
  uint64_t v2 = (char *)&v29 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v29 - v4;
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v29 - v7;
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v29 - v10;
  uint64_t v12 = sub_10017DF08(&qword_100E66458);
  uint64_t v13 = &v11[*(int *)(v12 + 48)];
  uint64_t v14 = (uint64_t)&v11[*(int *)(v12 + 64)];
  uint64_t v15 = enum case for WeatherMapPrecipitationOverlayKind.forecast(_:);
  uint64_t v16 = type metadata accessor for WeatherMapPrecipitationOverlayKind();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 104))(v11, v15, v16);
  uint64_t v17 = enum case for WeatherMapOverlayKind.precipitation(_:);
  uint64_t v18 = type metadata accessor for WeatherMapOverlayKind();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v18 - 8) + 104))(v11, v17, v18);
  type metadata accessor for LocationComponentAction(0);
  swift_storeEnumTagMultiPayload();
  *(_OWORD *)uint64_t v13 = 0u;
  *((_OWORD *)v13 + 1) = 0u;
  v13[32] = 1;
  uint64_t v19 = type metadata accessor for Date();
  _s7Weather24LocationCompositionStateOwst_0(v14, 1, 1, v19);
  type metadata accessor for LocationViewAction();
  swift_storeEnumTagMultiPayload();
  type metadata accessor for MainAction();
  swift_storeEnumTagMultiPayload();
  v11[*(int *)(v0 + 20)] = 1;
  type metadata accessor for ViewAction();
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  v8[*(int *)(v0 + 20)] = 0;
  uint64_t v29 = v5;
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  v5[*(int *)(v0 + 20)] = 0;
  BOOL v30 = v2;
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  v2[*(int *)(v0 + 20)] = 1;
  sub_10017DF08(&qword_100E65E98);
  uint64_t v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_100C34240;
  *(void *)(v20 + 56) = v0;
  *(void *)(v20 + 64) = &off_100E39A90;
  uint64_t v21 = sub_100170694((uint64_t *)(v20 + 32));
  sub_100765EC8((uint64_t)v11, (uint64_t)v21, (void (*)(void))type metadata accessor for DispatchAction);
  *(void *)(v20 + 96) = &type metadata for Delay;
  *(void *)(v20 + 104) = &off_100E12AD8;
  *(void *)(v20 + 72) = 0x4000000000000000;
  *(void *)(v20 + 136) = v0;
  *(void *)(v20 + 144) = &off_100E39A90;
  uint64_t v22 = sub_100170694((uint64_t *)(v20 + 112));
  uint64_t v23 = (uint64_t)v8;
  sub_100765EC8((uint64_t)v8, (uint64_t)v22, (void (*)(void))type metadata accessor for DispatchAction);
  *(void *)(v20 + 176) = &type metadata for Delay;
  *(void *)(v20 + 184) = &off_100E12AD8;
  *(void *)(v20 + 152) = 0x4000000000000000;
  *(void *)(v20 + 216) = v0;
  *(void *)(v20 + 224) = &off_100E39A90;
  char v24 = sub_100170694((uint64_t *)(v20 + 192));
  uint64_t v25 = (uint64_t)v29;
  sub_100765EC8((uint64_t)v29, (uint64_t)v24, (void (*)(void))type metadata accessor for DispatchAction);
  *(void *)(v20 + 256) = &type metadata for Delay;
  *(void *)(v20 + 264) = &off_100E12AD8;
  *(void *)(v20 + 232) = 0x4000000000000000;
  *(void *)(v20 + 296) = v0;
  *(void *)(v20 + 304) = &off_100E39A90;
  char v26 = sub_100170694((uint64_t *)(v20 + 272));
  uint64_t v27 = (uint64_t)v30;
  sub_100765EC8((uint64_t)v30, (uint64_t)v26, (void (*)(void))type metadata accessor for DispatchAction);
  *(void *)(v20 + 336) = &type metadata for Delay;
  *(void *)(v20 + 344) = &off_100E12AD8;
  *(void *)(v20 + 312) = 0x4000000000000000;
  sub_100765F28(v27, (void (*)(void))type metadata accessor for DispatchAction);
  sub_100765F28(v25, (void (*)(void))type metadata accessor for DispatchAction);
  sub_100765F28(v23, (void (*)(void))type metadata accessor for DispatchAction);
  sub_100765F28((uint64_t)v11, (void (*)(void))type metadata accessor for DispatchAction);
  return v20;
}

uint64_t sub_1009830EC()
{
  return sub_10017D164();
}

uint64_t sub_1009830F8()
{
  return sub_10017D164();
}

uint64_t sub_100983104@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E647D8);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  uint64_t v5 = v34;
  if (!v34)
  {
    __break(1u);
    goto LABEL_6;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E64798);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  uint64_t v6 = v30;
  if (!v30)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v25 = v33;
  uint64_t v26 = v35;
  uint64_t v23 = v31;
  uint64_t v24 = v32;
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E7CD18);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v29)
  {
    uint64_t v7 = sub_1000DF0C4((uint64_t)v28, v29);
    __chkstk_darwin(v7);
    uint64_t v9 = (uint64_t *)((char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v10 + 16))(v9);
    uint64_t v11 = *v9;
    uint64_t v12 = type metadata accessor for NetworkActivityManager();
    v27[3] = v12;
    v27[4] = &off_100E175C0;
    v27[0] = v11;
    uint64_t v13 = type metadata accessor for ToolbarAddButtonInteractor();
    uint64_t v14 = (void *)swift_allocObject();
    uint64_t v15 = sub_1000DF0C4((uint64_t)v27, v12);
    __chkstk_darwin(v15);
    uint64_t v17 = (uint64_t *)((char *)&v22 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v18 + 16))(v17);
    uint64_t v19 = *v17;
    v14[11] = v12;
    v14[12] = &off_100E175C0;
    uint64_t v20 = v26;
    v14[2] = v5;
    v14[3] = v20;
    uint64_t v21 = v23;
    v14[4] = v6;
    v14[5] = v21;
    v14[6] = v24;
    v14[7] = v25;
    v14[8] = v19;
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v27);
    uint64_t result = _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v28);
    a2[3] = v13;
    a2[4] = &off_100E23AE8;
    *a2 = v14;
    return result;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t destroy for ReportWeatherComponentView()
{
  swift_unknownObjectRelease();
  sub_100249EF8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_release();
}

uint64_t initializeWithCopy for ReportWeatherComponentView(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  uint64_t v4 = *(void *)(a2 + 24);
  uint64_t v5 = *(void *)(a2 + 32);
  char v6 = *(unsigned char *)(a2 + 40);
  swift_unknownObjectRetain();
  sub_100249E9C();
  *(void *)(a1 + 24) = v4;
  *(void *)(a1 + 32) = v5;
  *(unsigned char *)(a1 + 40) = v6;
  uint64_t v7 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v7;
  uint64_t v8 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v8;
  uint64_t v9 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v9;
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for ReportWeatherComponentView(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(a1 + 16) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  uint64_t v6 = *(void *)(a2 + 32);
  char v7 = *(unsigned char *)(a2 + 40);
  sub_100249E9C();
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = v6;
  *(unsigned char *)(a1 + 40) = v7;
  sub_100249EF8();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for ReportWeatherComponentView(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  swift_unknownObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  char v4 = *(unsigned char *)(a2 + 40);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(unsigned char *)(a1 + 40) = v4;
  sub_100249EF8();
  uint64_t v5 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v6;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  swift_release();
  return a1;
}

uint64_t sub_100983688()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1009836A4@<X0>(uint64_t a1@<X8>)
{
  memcpy(__dst, v1 + 24, sizeof(__dst));
  char v3 = *v1 & 1;
  uint64_t v4 = swift_allocObject();
  memcpy((void *)(v4 + 16), v1, 0x68uLL);
  sub_100983854((uint64_t)v1);
  sub_1006AAA38(__dst, v3, (uint64_t)LocationSearchEntityFromStringResolver.init(), 0, (uint64_t)sub_10098384C, v4, a1);

  return swift_release();
}

uint64_t sub_100983780()
{
  return sub_1008CF164();
}

uint64_t sub_1009837A4@<X0>(uint64_t a1@<X8>)
{
  memcpy(__dst, v1, sizeof(__dst));
  return sub_1009836A4(a1);
}

uint64_t sub_1009837E8()
{
  swift_unknownObjectRelease();
  sub_100249EF8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10098384C()
{
  return sub_100983780();
}

uint64_t sub_100983854(uint64_t a1)
{
  return a1;
}

void *sub_1009838E0(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v34 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v34 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    *(_WORD *)(a1 + 1) = *(_WORD *)((char *)a2 + 1);
    uint64_t v7 = a3[7];
    uint64_t v8 = a1 + v7;
    uint64_t v9 = (uint64_t)a2 + v7;
    uint64_t v10 = type metadata accessor for Locale();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    uint64_t v11 = a3[8];
    uint64_t v12 = a3[9];
    uint64_t v13 = (void *)((char *)v4 + v11);
    uint64_t v14 = (uint64_t *)((char *)a2 + v11);
    uint64_t v15 = v14[1];
    void *v13 = *v14;
    v13[1] = v15;
    *((unsigned char *)v4 + v12) = *((unsigned char *)a2 + v12);
    uint64_t v16 = a3[11];
    *((unsigned char *)v4 + a3[10]) = *((unsigned char *)a2 + a3[10]);
    *((unsigned char *)v4 + v16) = *((unsigned char *)a2 + v16);
    uint64_t v17 = a3[13];
    *((unsigned char *)v4 + a3[12]) = *((unsigned char *)a2 + a3[12]);
    *(void *)((char *)v4 + v17) = *(uint64_t *)((char *)a2 + v17);
    uint64_t v18 = a3[15];
    *((unsigned char *)v4 + a3[14]) = *((unsigned char *)a2 + a3[14]);
    *((unsigned char *)v4 + v18) = *((unsigned char *)a2 + v18);
    uint64_t v19 = a3[17];
    *((unsigned char *)v4 + a3[16]) = *((unsigned char *)a2 + a3[16]);
    uint64_t v20 = (void *)((char *)v4 + v19);
    uint64_t v21 = (uint64_t)a2 + v19;
    uint64_t v22 = *(void **)v21;
    uint64_t v23 = *(void **)(v21 + 8);
    void *v20 = *(void *)v21;
    v20[1] = v23;
    uint64_t v24 = *(void **)(v21 + 16);
    uint64_t v25 = *(void **)(v21 + 24);
    v20[2] = v24;
    v20[3] = v25;
    uint64_t v26 = *(void **)(v21 + 32);
    uint64_t v27 = *(void **)(v21 + 40);
    v20[4] = v26;
    v20[5] = v27;
    swift_bridgeObjectRetain();
    id v28 = v22;
    id v29 = v23;
    id v30 = v24;
    id v31 = v25;
    id v32 = v26;
    id v33 = v27;
  }
  return v4;
}

unsigned char *sub_100983A6C(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  uint64_t v6 = a3[7];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = type metadata accessor for Locale();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = a3[8];
  uint64_t v11 = &a1[v10];
  uint64_t v12 = &a2[v10];
  *uint64_t v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[a3[9]] = a2[a3[9]];
  a1[a3[10]] = a2[a3[10]];
  a1[a3[11]] = a2[a3[11]];
  a1[a3[12]] = a2[a3[12]];
  *(void *)&a1[a3[13]] = *(void *)&a2[a3[13]];
  a1[a3[14]] = a2[a3[14]];
  a1[a3[15]] = a2[a3[15]];
  a1[a3[16]] = a2[a3[16]];
  uint64_t v13 = a3[17];
  uint64_t v14 = &a1[v13];
  uint64_t v15 = &a2[v13];
  uint64_t v16 = *(void **)&a1[v13];
  uint64_t v17 = *(void **)v15;
  *uint64_t v14 = *(void *)v15;
  id v18 = v17;

  uint64_t v19 = (void *)v14[1];
  uint64_t v20 = (void *)*((void *)v15 + 1);
  v14[1] = v20;
  id v21 = v20;

  uint64_t v22 = (void *)v14[2];
  uint64_t v23 = (void *)*((void *)v15 + 2);
  v14[2] = v23;
  id v24 = v23;

  uint64_t v25 = (void *)v14[3];
  uint64_t v26 = (void *)*((void *)v15 + 3);
  v14[3] = v26;
  id v27 = v26;

  id v28 = (void *)v14[4];
  id v29 = (void *)*((void *)v15 + 4);
  v14[4] = v29;
  id v30 = v29;

  id v31 = (void *)v14[5];
  id v32 = (void *)*((void *)v15 + 5);
  v14[5] = v32;
  id v33 = v32;

  return a1;
}

uint64_t sub_100983C18(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_WORD *)(a1 + 1) = *(_WORD *)(a2 + 1);
  uint64_t v6 = a3[7];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = type metadata accessor for Locale();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[9];
  *(_OWORD *)(a1 + a3[8]) = *(_OWORD *)(a2 + a3[8]);
  *(unsigned char *)(a1 + v10) = *(unsigned char *)(a2 + v10);
  uint64_t v11 = a3[11];
  *(unsigned char *)(a1 + a3[10]) = *(unsigned char *)(a2 + a3[10]);
  *(unsigned char *)(a1 + v11) = *(unsigned char *)(a2 + v11);
  uint64_t v12 = a3[13];
  *(unsigned char *)(a1 + a3[12]) = *(unsigned char *)(a2 + a3[12]);
  *(void *)(a1 + v12) = *(void *)(a2 + v12);
  uint64_t v13 = a3[15];
  *(unsigned char *)(a1 + a3[14]) = *(unsigned char *)(a2 + a3[14]);
  *(unsigned char *)(a1 + v13) = *(unsigned char *)(a2 + v13);
  uint64_t v14 = a3[17];
  *(unsigned char *)(a1 + a3[16]) = *(unsigned char *)(a2 + a3[16]);
  uint64_t v15 = (_OWORD *)(a1 + v14);
  uint64_t v16 = (_OWORD *)(a2 + v14);
  long long v17 = v16[1];
  *uint64_t v15 = *v16;
  v15[1] = v17;
  v15[2] = v16[2];
  return a1;
}

uint64_t sub_100983D20(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_WORD *)(a1 + 1) = *(_WORD *)(a2 + 1);
  uint64_t v6 = a3[7];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = type metadata accessor for Locale();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  uint64_t v10 = a3[8];
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (uint64_t *)(a2 + v10);
  uint64_t v14 = *v12;
  uint64_t v13 = v12[1];
  *uint64_t v11 = v14;
  v11[1] = v13;
  swift_bridgeObjectRelease();
  uint64_t v15 = a3[10];
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  *(unsigned char *)(a1 + v15) = *(unsigned char *)(a2 + v15);
  uint64_t v16 = a3[12];
  *(unsigned char *)(a1 + a3[11]) = *(unsigned char *)(a2 + a3[11]);
  *(unsigned char *)(a1 + v16) = *(unsigned char *)(a2 + v16);
  uint64_t v17 = a3[14];
  *(void *)(a1 + a3[13]) = *(void *)(a2 + a3[13]);
  *(unsigned char *)(a1 + v17) = *(unsigned char *)(a2 + v17);
  uint64_t v18 = a3[16];
  *(unsigned char *)(a1 + a3[15]) = *(unsigned char *)(a2 + a3[15]);
  *(unsigned char *)(a1 + v18) = *(unsigned char *)(a2 + v18);
  uint64_t v19 = a3[17];
  uint64_t v20 = (void *)(a1 + v19);
  id v21 = (void *)(a2 + v19);
  uint64_t v22 = *(void **)(a1 + v19);
  void *v20 = *v21;

  uint64_t v23 = (void *)v20[1];
  v20[1] = v21[1];

  id v24 = (void *)v20[2];
  v20[2] = v21[2];

  uint64_t v25 = (void *)v20[3];
  v20[3] = v21[3];

  uint64_t v26 = (void *)v20[4];
  v20[4] = v21[4];

  id v27 = (void *)v20[5];
  v20[5] = v21[5];

  return a1;
}

uint64_t sub_100983E8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  type metadata accessor for Locale();
  sub_100162F30();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + *(int *)(a3 + 28);
    return _s7Weather24LocationCompositionStateOwet_0(v9, a2, v8);
  }
  else
  {
    unint64_t v11 = *(void *)(a1 + *(int *)(a3 + 32) + 8);
    if (v11 >= 0xFFFFFFFF) {
      LODWORD(v11) = -1;
    }
    return (v11 + 1);
  }
}

void sub_100983F20(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  type metadata accessor for Locale();
  sub_100162F30();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a4 + 28);
    _s7Weather24LocationCompositionStateOwst_0(v11, a2, a2, v10);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 32) + 8) = (a2 - 1);
  }
}

uint64_t sub_100983FB0(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD00000000000001CLL && a2 == 0x8000000100CB81B0
    || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x8000000100CADEE0 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    BOOL v5 = a1 == 0x6B726F7774656ELL && a2 == 0xE700000000000000;
    if (v5 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      BOOL v6 = a1 == 0x656C61636F6CLL && a2 == 0xE600000000000000;
      if (v6 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else if (a1 == 0xD000000000000015 && a2 == 0x8000000100CB81D0 {
             || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      }
      {
        swift_bridgeObjectRelease();
        return 4;
      }
      else if (a1 == 0xD000000000000015 && a2 == 0x8000000100CADEA0 {
             || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      }
      {
        swift_bridgeObjectRelease();
        return 5;
      }
      else if (a1 == 0xD000000000000016 && a2 == 0x8000000100CADE60 {
             || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      }
      {
        swift_bridgeObjectRelease();
        return 6;
      }
      else if (a1 == 0xD000000000000012 && a2 == 0x8000000100CADDE0 {
             || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      }
      {
        swift_bridgeObjectRelease();
        return 7;
      }
      else if (a1 == 0xD000000000000021 && a2 == 0x8000000100CB81F0 {
             || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      }
      {
        swift_bridgeObjectRelease();
        return 8;
      }
      else
      {
        BOOL v7 = a1 == 0x636E75614C707061 && a2 == 0xEE00746E756F4368;
        if (v7 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 9;
        }
        else if (a1 == 0xD00000000000001BLL && a2 == 0x8000000100CB8220 {
               || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
        }
        {
          swift_bridgeObjectRelease();
          return 10;
        }
        else if (a1 == 0xD000000000000014 && a2 == 0x8000000100CB8240 {
               || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
        }
        {
          swift_bridgeObjectRelease();
          return 11;
        }
        else if (a1 == 0xD000000000000013 && a2 == 0x8000000100CB8260 {
               || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
        }
        {
          swift_bridgeObjectRelease();
          return 12;
        }
        else if (a1 == 0x72756769666E6F63 && a2 == 0xEF7374696E556465)
        {
          swift_bridgeObjectRelease();
          return 13;
        }
        else
        {
          char v9 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          if (v9) {
            return 13;
          }
          else {
            return 14;
          }
        }
      }
    }
  }
}

uint64_t sub_100984514()
{
  return 14;
}

unint64_t sub_10098451C(char a1)
{
  unint64_t result = 0xD00000000000001CLL;
  switch(a1)
  {
    case 1:
    case 4:
    case 5:
      unint64_t result = 0xD000000000000015;
      break;
    case 2:
      unint64_t result = 0x6B726F7774656ELL;
      break;
    case 3:
      unint64_t result = 0x656C61636F6CLL;
      break;
    case 6:
      unint64_t result = 0xD000000000000016;
      break;
    case 7:
      unint64_t result = 0xD000000000000012;
      break;
    case 8:
      unint64_t result = 0xD000000000000021;
      break;
    case 9:
      unint64_t result = 0x636E75614C707061;
      break;
    case 10:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 11:
      unint64_t result = 0xD000000000000014;
      break;
    case 12:
      unint64_t result = 0xD000000000000013;
      break;
    case 13:
      unint64_t result = 0x72756769666E6F63;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1009846A8()
{
  return sub_10098451C(*v0);
}

uint64_t sub_1009846B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100983FB0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1009846D8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_100984514();
  *a1 = result;
  return result;
}

uint64_t sub_100984700(uint64_t a1)
{
  unint64_t v2 = sub_1009853E0();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10098473C(uint64_t a1)
{
  unint64_t v2 = sub_1009853E0();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100984778(void *a1)
{
  uint64_t v3 = sub_10017DF08(&qword_100EA4538);
  sub_100179C0C();
  uint64_t v5 = v4;
  __chkstk_darwin(v6);
  sub_1001626E0();
  uint64_t v9 = v8 - v7;
  sub_1001B1E64(a1, a1[3]);
  sub_1009853E0();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  KeyedEncodingContainer.encode(_:forKey:)();
  if (!v1)
  {
    sub_100985510();
    sub_1001D2058();
    sub_10098555C();
    sub_1001D2058();
    type metadata accessor for EnvironmentState();
    type metadata accessor for Locale();
    sub_1009855F4(&qword_100EA4550, (void (*)(uint64_t))&type metadata accessor for Locale);
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    KeyedEncodingContainer.encode(_:forKey:)();
    sub_10017D888(5);
    sub_10017D888(6);
    sub_10017D888(7);
    sub_10017D888(8);
    KeyedEncodingContainer.encode(_:forKey:)();
    sub_10017D888(10);
    sub_10017D888(11);
    sub_10017D888(12);
    sub_1009855A8();
    sub_1001D2058();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v9, v3);
}

uint64_t sub_100984A9C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  type metadata accessor for Locale();
  sub_100179C0C();
  uint64_t v24 = v6;
  uint64_t v25 = v5;
  __chkstk_darwin(v5);
  sub_1001626E0();
  uint64_t v9 = v8 - v7;
  sub_10017DF08(&qword_100EA4508);
  sub_100179C0C();
  __chkstk_darwin(v10);
  sub_1001626E0();
  id v27 = (int *)type metadata accessor for EnvironmentState();
  sub_100162E4C();
  __chkstk_darwin(v11);
  sub_100109314();
  uint64_t v26 = v12;
  sub_1001B1E64(a1, a1[3]);
  sub_1009853E0();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2) {
    return _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)a1);
  }
  unsigned char *v26 = KeyedDecodingContainer.decode(_:forKey:)() & 1;
  sub_10098542C();
  sub_100184110();
  v26[1] = 0;
  sub_100985478();
  sub_100184110();
  v26[2] = 0;
  LOBYTE(v28) = 3;
  sub_1009855F4(&qword_100EA4528, (void (*)(uint64_t))&type metadata accessor for Locale);
  sub_100184110();
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v24 + 32))(&v26[v27[7]], v9, v25);
  sub_10019DAD8(4);
  uint64_t v14 = KeyedDecodingContainer.decode(_:forKey:)();
  uint64_t v15 = (uint64_t *)&v26[v27[8]];
  *uint64_t v15 = v14;
  v15[1] = v16;
  uint64_t v17 = sub_1001A106C(5);
  sub_1001A19F8(v17, v27[9]);
  uint64_t v18 = sub_1001A106C(6);
  sub_1001A19F8(v18, v27[10]);
  uint64_t v19 = sub_1001A106C(7);
  sub_1001A19F8(v19, v27[11]);
  uint64_t v20 = sub_1001A106C(8);
  sub_1001A19F8(v20, v27[12]);
  sub_10019DAD8(9);
  *(void *)&v26[v27[13]] = KeyedDecodingContainer.decode(_:forKey:)();
  v26[v27[14]] = sub_100163B20(10) & 1;
  v26[v27[15]] = sub_100163B20(11) & 1;
  v26[v27[16]] = sub_100163B20(12) & 1;
  sub_1009854C4();
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  uint64_t v21 = sub_100181A00();
  v22(v21);
  uint64_t v23 = &v26[v27[17]];
  *uint64_t v23 = v28;
  v23[1] = v29;
  v23[2] = v30;
  sub_1000F1324((uint64_t)v26, a2);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)a1);
  return sub_1000F12C8((uint64_t)v26);
}

uint64_t sub_100984F84@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100984A9C(a1, a2);
}

uint64_t sub_100984F9C(void *a1)
{
  return sub_100984778(a1);
}

uint64_t sub_100984FB4@<X0>(uint64_t *a1@<X8>)
{
  sub_10017DF08(&qword_100E635E0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100C6C080;
  *(void *)(inited + 32) = 0xD00000000000001CLL;
  *(void *)(inited + 40) = 0x8000000100CB81B0;
  *(unsigned char *)(inited + 48) = *v1;
  *(void *)(inited + 72) = &type metadata for Bool;
  *(void *)(inited + 80) = 0xD000000000000015;
  sub_100162AD8();
  *(void *)(v4 + 88) = v5;
  *(unsigned char *)(v4 + 96) = v1[1];
  *(void *)(v4 + 120) = &type metadata for LocationAuthorizationState;
  *(void *)(v4 + 128) = 0x6B726F7774656ELL;
  *(void *)(v4 + 136) = 0xE700000000000000;
  *(unsigned char *)(v4 + 144) = v1[2];
  uint64_t v6 = (uint64_t *)(v4 + 192);
  *(void *)(v4 + 168) = &type metadata for NetworkState;
  *(void *)(v4 + 176) = 0x656C61636F6CLL;
  *(void *)(v4 + 184) = 0xE600000000000000;
  uint64_t v7 = (int *)type metadata accessor for EnvironmentState();
  uint64_t v8 = &v1[v7[7]];
  uint64_t v9 = type metadata accessor for Locale();
  *(void *)(inited + 216) = v9;
  uint64_t v10 = sub_10023C310(v6);
  (*(void (**)(uint64_t *, unsigned char *, uint64_t))(*(void *)(v9 - 8) + 16))(v10, v8, v9);
  sub_100162AD8();
  *(void *)(inited + 224) = 0xD000000000000015;
  *(void *)(inited + 232) = v11;
  uint64_t v12 = &v1[v7[8]];
  uint64_t v13 = v12[1];
  *(void *)(inited + 240) = *v12;
  *(void *)(inited + 248) = v13;
  *(void *)(inited + 264) = &type metadata for String;
  *(void *)(inited + 272) = 0xD000000000000015;
  sub_100162AD8();
  *(void *)(inited + 280) = v14;
  *(unsigned char *)(inited + 288) = v1[v7[9]];
  *(void *)(inited + 312) = &type metadata for Bool;
  *(void *)(inited + 320) = 0xD000000000000016;
  sub_100162AD8();
  *(void *)(inited + 328) = v15;
  *(unsigned char *)(inited + 336) = v1[v7[10]];
  *(void *)(inited + 360) = &type metadata for Bool;
  *(void *)(inited + 368) = 0xD000000000000012;
  sub_100162AD8();
  *(void *)(inited + 376) = v16;
  *(unsigned char *)(inited + 384) = v1[v7[11]];
  *(void *)(inited + 408) = &type metadata for Bool;
  *(void *)(inited + 416) = 0xD000000000000021;
  sub_100162AD8();
  *(void *)(inited + 424) = v17;
  *(unsigned char *)(inited + 432) = v1[v7[12]];
  *(void *)(inited + 456) = &type metadata for Bool;
  *(void *)(inited + 464) = 0xD00000000000001BLL;
  sub_100162AD8();
  *(void *)(inited + 472) = v18;
  *(unsigned char *)(inited + 480) = v1[v7[14]];
  *(void *)(inited + 504) = &type metadata for Bool;
  strcpy((char *)(inited + 512), "appLaunchCount");
  *(unsigned char *)(inited + 527) = -18;
  uint64_t v19 = *(void *)&v1[v7[13]];
  *(void *)(inited + 552) = &type metadata for Int;
  *(void *)(inited + 528) = v19;
  *(void *)(inited + 560) = 0xD000000000000014;
  sub_100162AD8();
  *(void *)(inited + 568) = v20;
  LOBYTE(v20) = v1[v7[15]];
  *(void *)(inited + 600) = &type metadata for Bool;
  *(unsigned char *)(inited + 576) = v20;
  *(void *)(inited + 608) = 0xD000000000000013;
  sub_100162AD8();
  *(void *)(inited + 616) = v21;
  LOBYTE(v21) = v1[v7[16]];
  *(void *)(inited + 648) = &type metadata for Bool;
  *(unsigned char *)(inited + 624) = v21;
  swift_bridgeObjectRetain();
  Dictionary.init(dictionaryLiteral:)();
  a1[3] = sub_10017DF08(&qword_100E7F4F8);
  a1[4] = sub_1001706F8();
  sub_10023C310(a1);
  type metadata accessor for MainAction();
  return ShortDescription.init(name:_:)();
}

uint64_t sub_1009852FC()
{
  sub_1009855F4(&qword_100EA4560, (void (*)(uint64_t))type metadata accessor for EnvironmentState);

  return ShortDescribable.description.getter();
}

void sub_100985368(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_1008BFF90(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8, SBYTE1(vars8), SBYTE2(vars8), SBYTE3(vars8), SBYTE4(vars8), SBYTE5(vars8), SBYTE6(vars8), SHIBYTE(vars8));
}

uint64_t sub_100985380()
{
  return sub_1008BFD94();
}

uint64_t sub_100985398()
{
  return sub_1009855F4(&qword_100EA44F8, (void (*)(uint64_t))type metadata accessor for EnvironmentState);
}

unint64_t sub_1009853E0()
{
  unint64_t result = qword_100EA4510;
  if (!qword_100EA4510)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA4510);
  }
  return result;
}

unint64_t sub_10098542C()
{
  unint64_t result = qword_100EA4518;
  if (!qword_100EA4518)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA4518);
  }
  return result;
}

unint64_t sub_100985478()
{
  unint64_t result = qword_100EA4520;
  if (!qword_100EA4520)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA4520);
  }
  return result;
}

unint64_t sub_1009854C4()
{
  unint64_t result = qword_100EA4530;
  if (!qword_100EA4530)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA4530);
  }
  return result;
}

unint64_t sub_100985510()
{
  unint64_t result = qword_100EA4540;
  if (!qword_100EA4540)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA4540);
  }
  return result;
}

unint64_t sub_10098555C()
{
  unint64_t result = qword_100EA4548;
  if (!qword_100EA4548)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA4548);
  }
  return result;
}

unint64_t sub_1009855A8()
{
  unint64_t result = qword_100EA4558;
  if (!qword_100EA4558)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA4558);
  }
  return result;
}

uint64_t sub_1009855F4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for EnvironmentState.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xF3)
  {
    if (a2 + 13 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 13) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 14;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xE;
  int v5 = v6 - 14;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for EnvironmentState.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 13 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 13) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF2)
  {
    unsigned int v6 = ((a2 - 243) >> 8) + 1;
    *uint64_t result = a2 + 13;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100985790);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 13;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EnvironmentState.CodingKeys()
{
  return &type metadata for EnvironmentState.CodingKeys;
}

unint64_t sub_1009857CC()
{
  unint64_t result = qword_100EA4568;
  if (!qword_100EA4568)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA4568);
  }
  return result;
}

unint64_t sub_10098581C()
{
  unint64_t result = qword_100EA4570;
  if (!qword_100EA4570)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA4570);
  }
  return result;
}

unint64_t sub_10098586C()
{
  unint64_t result = qword_100EA4578;
  if (!qword_100EA4578)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA4578);
  }
  return result;
}

uint64_t sub_1009858B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v23 = type metadata accessor for Location.Identifier();
  uint64_t v7 = *(void *)(v23 - 8);
  __chkstk_darwin(v23);
  uint64_t v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = *(void *)(a1 + 16);
  if (v22)
  {
    uint64_t v21 = v3;
    uint64_t v10 = 0;
    uint64_t v11 = *(void *)(type metadata accessor for SavedLocation() - 8);
    uint64_t v12 = a1 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
    uint64_t v13 = *(void *)(v11 + 72);
    uint64_t v14 = (void (**)(char *, uint64_t))(v7 + 8);
    while (1)
    {
      SavedLocation.identifier.getter();
      uint64_t v15 = Location.Identifier.id.getter();
      uint64_t v17 = v16;
      (*v14)(v9, v23);
      if (v15 == a2 && v17 == a3)
      {
        swift_bridgeObjectRelease_n();
        return v10;
      }
      char v19 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v19) {
        break;
      }
      ++v10;
      v12 += v13;
      if (v22 == v10) {
        goto LABEL_9;
      }
    }
    swift_bridgeObjectRelease();
  }
  else
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return 0;
  }
  return v10;
}

uint64_t sub_100985ADC(void *a1)
{
  uint64_t v2 = type metadata accessor for MainAction();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (uint64_t *)((char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for LocationsState();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_100126F0C();
  char v7 = v6;
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if ((v7 & 1) == 0)
  {
    uint64_t v9 = a1[5];
    uint64_t v10 = *(void *)(v9 + 16);
    if (!v10) {
      goto LABEL_13;
    }
    uint64_t v11 = v9 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    uint64_t result = swift_bridgeObjectRetain();
    LODWORD(v19) = 0;
    unint64_t v12 = 0;
    uint64_t v18 = v10 - 1;
    do
    {
      while (1)
      {
        if (v12 >= *(void *)(v9 + 16))
        {
          __break(1u);
          return result;
        }
        sub_100166724(v11 + *(void *)(v3 + 72) * v12, (uint64_t)v5, (void (*)(void))type metadata accessor for MainAction);
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        uint64_t v14 = type metadata accessor for MainAction;
        if (EnumCaseMultiPayload != 3) {
          break;
        }
        type metadata accessor for LocationsAction();
        int v15 = swift_getEnumCaseMultiPayload();
        uint64_t v14 = type metadata accessor for LocationsAction;
        if (v15 != 2) {
          break;
        }
        uint64_t v19 = *v5;
        swift_bridgeObjectRelease();
        uint64_t result = swift_bridgeObjectRelease();
        LODWORD(v19) = 1;
        if (v18 == v12++) {
          return swift_bridgeObjectRelease();
        }
      }
      ++v12;
      uint64_t result = sub_100159038((uint64_t)v5, (void (*)(void))v14);
    }
    while (v10 != v12);
    uint64_t result = swift_bridgeObjectRelease();
    if ((v19 & 1) == 0)
    {
LABEL_13:
      sub_1001B1E64((void *)(v20 + 72), *(void *)(v20 + 96));
      swift_bridgeObjectRetain();
      dispatch thunk of SavedLocationsManagerType.updatedSavedLocationsLegacy(_:)();
      swift_bridgeObjectRelease();
      return sub_10010F4BC(a1);
    }
  }
  return result;
}

uint64_t sub_100985D80(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  *(void *)(v7 + 48) = a6;
  *(void *)(v7 + 56) = a7;
  *(void *)(v7 + 40) = a5;
  *(unsigned char *)(v7 + 136) = a4;
  uint64_t v8 = type metadata accessor for Logger();
  *(void *)(v7 + 64) = v8;
  *(void *)(v7 + 72) = *(void *)(v8 - 8);
  *(void *)(v7 + 80) = swift_task_alloc();
  sub_10017DF08(&qword_100E63A18);
  *(void *)(v7 + 88) = swift_task_alloc();
  uint64_t v9 = type metadata accessor for LocationDisplayContext();
  *(void *)(v7 + 96) = v9;
  *(void *)(v7 + 104) = *(void *)(v9 - 8);
  *(void *)(v7 + 112) = swift_task_alloc();
  return _swift_task_switch(sub_100985ED4, 0, 0);
}

uint64_t sub_100985ED4()
{
  uint64_t v2 = v0[13];
  uint64_t v1 = v0[14];
  uint64_t v4 = v0[11];
  uint64_t v3 = v0[12];
  uint64_t v5 = (void *)v0[5];
  LocationDisplayContext.init(canActAsLocationOfInterest:)();
  char v6 = v5 + 9;
  uint64_t v7 = v5[12];
  uint64_t v8 = v5[13];
  sub_1001B1E64(v6, v7);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v4, v1, v3);
  _s7Weather24LocationCompositionStateOwst_0(v4, 0, 1, v3);
  uint64_t v9 = (void *)swift_task_alloc();
  v0[15] = v9;
  *uint64_t v9 = v0;
  v9[1] = sub_100985FF0;
  uint64_t v10 = v0[11];
  uint64_t v11 = v0[6];
  return dispatch thunk of SavedLocationsManagerType.addLocationWithChecks(_:locationDisplayContext:)(v11, v10, v7, v8);
}

uint64_t sub_100985FF0()
{
  sub_100119470();
  uint64_t v3 = *(void *)(v2 + 88);
  uint64_t v4 = *v1;
  sub_100179D88();
  *uint64_t v5 = v4;
  *(void *)(v6 + 128) = v0;
  swift_task_dealloc();
  sub_100178160(v3, &qword_100E63A18);
  if (v0) {
    uint64_t v7 = sub_1009861E4;
  }
  else {
    uint64_t v7 = sub_1009860FC;
  }
  return _swift_task_switch(v7, 0, 0);
}

uint64_t sub_1009860FC()
{
  uint64_t v2 = v0[13];
  uint64_t v1 = v0[14];
  uint64_t v3 = v0[12];
  uint64_t v4 = v0[7];
  sub_1001B1E64((void *)(v0[5] + 32), *(void *)(v0[5] + 56));
  uint64_t v5 = *(void *)(v4 + 64) + OBJC_IVAR____TtCV7Weather9MainState8_Storage_locations;
  uint64_t v6 = type metadata accessor for LocationsState();
  sub_10059F75C(*(void *)(*(void *)(v5 + *(int *)(v6 + 20)) + 16));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_1001627B4();
  return v7();
}

uint64_t sub_1009861E4()
{
  uint64_t v16 = v0;
  (*(void (**)(void, void))(v0[13] + 8))(v0[14], v0[12]);
  static Logger.savedLocations.getter();
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = v0[16];
    uint64_t v4 = v0[9];
    uint64_t v14 = v0[10];
    uint64_t v5 = v0[8];
    uint64_t v6 = swift_slowAlloc();
    uint64_t v15 = swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 141558275;
    v0[2] = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v6 + 12) = 2081;
    v0[3] = v3;
    swift_errorRetain();
    sub_10017DF08(&qword_100E77F30);
    uint64_t v7 = String.init<A>(describing:)();
    v0[4] = sub_10016414C(v7, v8, &v15);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "addLocation: Could not add location with error: %{private,mask.hash}s", (uint8_t *)v6, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v14, v5);
  }
  else
  {
    uint64_t v10 = v0[9];
    uint64_t v9 = v0[10];
    uint64_t v11 = v0[8];
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();

    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_1001627B4();
  return v12();
}

BOOL sub_100986468(uint64_t a1, uint64_t a2)
{
  uint64_t active = type metadata accessor for LocationViewerActiveLocationState();
  __chkstk_darwin(active - 8);
  uint64_t v6 = &v22[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = type metadata accessor for ViewState.SecondaryViewState(0);
  __chkstk_darwin(v7);
  uint64_t v9 = (uint64_t *)&v22[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = (int *)type metadata accessor for ViewState(0);
  __chkstk_darwin(v10);
  unint64_t v12 = &v22[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_100166724(*(void *)(a1 + 56) + OBJC_IVAR____TtCV7Weather9MainState8_Storage_view, (uint64_t)v12, (void (*)(void))type metadata accessor for ViewState);
  sub_100166724((uint64_t)&v12[v10[5]], (uint64_t)v9, (void (*)(void))type metadata accessor for ViewState.SecondaryViewState);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_100159038((uint64_t)v9, (void (*)(void))type metadata accessor for ViewState.SecondaryViewState);
LABEL_9:
    sub_100159038((uint64_t)v12, (void (*)(void))type metadata accessor for ViewState);
    return 0;
  }
  uint64_t v13 = *v9;
  if (*(void *)&v12[v10[9] + 8] == 1)
  {
    id v14 = [self currentDevice];
    [v14 userInterfaceIdiom];

    if ((v12[v10[7]] & 1) == 0)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  sub_100159038((uint64_t)v12, (void (*)(void))type metadata accessor for ViewState);
  sub_100166724(v13 + OBJC_IVAR____TtCV7Weather23LocationViewerViewState8_Storage_activeLocationState, (uint64_t)v6, (void (*)(void))type metadata accessor for LocationViewerActiveLocationState);
  swift_release();
  uint64_t v15 = sub_1001782AC();
  uint64_t v17 = v16;
  sub_100159038((uint64_t)v6, (void (*)(void))type metadata accessor for LocationViewerActiveLocationState);
  type metadata accessor for LocationsState();
  swift_bridgeObjectRetain();
  uint64_t v18 = swift_bridgeObjectRetain();
  uint64_t v19 = sub_1009858B8(v18, v15, v17);
  LOBYTE(v15) = v20;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return (v15 & 1) == 0 && v19 == a2;
}

uint64_t sub_100986774(uint64_t result, uint64_t a2, void (*a3)(uint64_t), uint64_t *a4, void (*a5)(void), unsigned int *a6)
{
  uint64_t v6 = *(uint64_t (**)(uint64_t))(result + 16);
  if (v6)
  {
    sub_10017DF08(&qword_100E63480);
    type metadata accessor for MainAction();
    sub_100179EF0();
    uint64_t v11 = *(void *)(v10 + 72);
    unint64_t v13 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
    uint64_t v14 = swift_allocObject();
    *(_OWORD *)(v14 + 16) = xmmword_100C25ED0;
    uint64_t v15 = swift_retain();
    a3(v15);
    type metadata accessor for ListViewAction();
    swift_storeEnumTagMultiPayload();
    type metadata accessor for ViewAction();
    swift_storeEnumTagMultiPayload();
    swift_storeEnumTagMultiPayload();
    uint64_t v16 = v14 + v13 + v11;
    uint64_t v17 = *(int *)(sub_10017DF08(&qword_100E6F640) + 48);
    uint64_t v18 = v16 + *(int *)(sub_10017DF08(a4) + 48);
    sub_100166724(a2, v16, a5);
    uint64_t v19 = type metadata accessor for LocationOfInterest();
    _s7Weather24LocationCompositionStateOwst_0(v18, 1, 1, v19);
    uint64_t v20 = *a6;
    type metadata accessor for LocationModel();
    sub_100162E4C();
    (*(void (**)(uint64_t, uint64_t))(v21 + 104))(v16, v20);
    *(unsigned char *)(v16 + v17) = 0;
    swift_storeEnumTagMultiPayload();
    swift_storeEnumTagMultiPayload();
    swift_storeEnumTagMultiPayload();
    uint64_t v28 = 0;
    memset(v27, 0, sizeof(v27));
    sub_10006DF38((uint64_t)v27, (uint64_t)v24, (uint64_t *)&unk_100EA01F0);
    uint64_t v25 = v14;
    char v26 = 0;
    swift_bridgeObjectRetain();
    sub_1001AB2DC((uint64_t)v24, v6);
    sub_100178160((uint64_t)v24, &qword_100E63488);
    swift_bridgeObjectRelease();
    sub_100178160((uint64_t)v27, (uint64_t *)&unk_100EA01F0);
    return sub_1001361AC((uint64_t)v6);
  }
  return result;
}

uint64_t sub_1009869D4()
{
  sub_1001361AC(*(void *)(v0 + 16));
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 32);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 72);
  return v0;
}

uint64_t sub_100986A04()
{
  sub_1009869D4();

  return swift_deallocClassInstance();
}

uint64_t sub_100986A38()
{
  uint64_t v1 = type metadata accessor for Location();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = (*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  if (*(void *)(v0 + v4 + 24)) {
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + v4);
  }
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100986B44(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for Location() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v1 + 16);
  uint64_t v7 = *(void *)(v1 + 24);
  char v8 = *(unsigned char *)(v1 + 32);
  uint64_t v9 = *(void *)(v1 + 40);
  uint64_t v10 = v1 + v5;
  uint64_t v11 = v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v12;
  void *v12 = v2;
  v12[1] = sub_100986C80;
  return sub_100985D80(a1, v6, v7, v8, v9, v10, v11);
}

uint64_t sub_100986C80()
{
  sub_100119470();
  uint64_t v1 = *v0;
  sub_100179D88();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  sub_1001627B4();
  return v3();
}

uint64_t sub_100986D44()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100986D7C()
{
  type metadata accessor for SavedLocation();
  sub_100179EF0();
  swift_release();
  if (swift_getEnumCaseMultiPayload() == 1) {
    type metadata accessor for SavedLocation.Placeholder();
  }
  else {
    type metadata accessor for Location();
  }
  sub_100162E4C();
  uint64_t v0 = sub_100162728();
  v1(v0);

  return swift_deallocObject();
}

uint64_t sub_100986E4C()
{
  uint64_t v0 = type metadata accessor for SavedLocation();
  sub_1001627C0(v0);
  uint64_t v1 = sub_100181A18();
  return sub_100986774(v1, v2, (void (*)(uint64_t))&SavedLocation.identifier.getter, &qword_100E63870, (void (*)(void))&type metadata accessor for SavedLocation, (unsigned int *)&enum case for LocationModel.saved(_:));
}

uint64_t sub_100986EB0()
{
  type metadata accessor for CurrentLocation();
  sub_100179EF0();
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  swift_release();
  if (swift_getEnumCaseMultiPayload() <= 2)
  {
    type metadata accessor for Location();
    sub_100162E4C();
    (*(void (**)(unint64_t))(v3 + 8))(v0 + v2);
  }

  return swift_deallocObject();
}

uint64_t sub_100986F7C()
{
  uint64_t v0 = type metadata accessor for CurrentLocation();
  sub_1001627C0(v0);
  uint64_t v1 = sub_100181A18();
  return sub_100986774(v1, v2, (void (*)(uint64_t))&CurrentLocation.identifier.getter, &qword_100E63878, (void (*)(void))&type metadata accessor for CurrentLocation, (unsigned int *)&enum case for LocationModel.current(_:));
}

uint64_t sub_100986FE8()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(uint64_t *)((char *)v0 + *(int *)(type metadata accessor for ViewState(0) + 36) + 8);
  swift_retain();
  if (v2 == 1 && sub_10001EE2C())
  {
    swift_release();
    return 0;
  }
  return v1;
}

uint64_t sub_100987050()
{
  type metadata accessor for ViewState.SecondaryViewState(0);
  sub_100162E4C();
  __chkstk_darwin(v2);
  uint64_t v3 = sub_10017FDD0();
  uint64_t v4 = type metadata accessor for ViewState(v3);
  sub_10011E568();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_10011E4B4((uint64_t)v0, (void (*)(void))type metadata accessor for ViewState.SecondaryViewState);
    return 0;
  }
  uint64_t v5 = *v0;
  if (*(void *)(v1 + *(int *)(v4 + 36) + 8) == 1 && !sub_10001EE2C())
  {
    swift_release();
    return 0;
  }
  return v5;
}

uint64_t sub_100987144@<X0>(uint64_t a1@<X8>)
{
  type metadata accessor for ViewState.SecondaryViewState(0);
  sub_100162E4C();
  __chkstk_darwin(v3);
  sub_10011BFD8();
  type metadata accessor for ViewState(0);
  sub_10011E568();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_10011E6CC();
    uint64_t v4 = 0;
  }
  else
  {
    sub_10011E4B4(v1, (void (*)(void))type metadata accessor for ViewState.SecondaryViewState);
    uint64_t v4 = 1;
  }
  uint64_t v5 = type metadata accessor for VFXTestViewState();
  return _s7Weather24LocationCompositionStateOwst_0(a1, v4, 1, v5);
}

void sub_100987248()
{
  sub_100162EA0();
  uint64_t v5 = sub_10017DF08(&qword_100E663F8);
  uint64_t v6 = sub_100109308(v5);
  __chkstk_darwin(v6);
  sub_10012B938();
  uint64_t v7 = sub_10017DF08(&qword_100E66400);
  uint64_t v8 = sub_100109308(v7);
  __chkstk_darwin(v8);
  sub_10011C760();
  uint64_t v9 = sub_10017DF08(&qword_100E66408);
  uint64_t v10 = sub_100109308(v9);
  __chkstk_darwin(v10);
  sub_100162F18();
  uint64_t v11 = sub_10017DF08(&qword_100E66410);
  uint64_t v12 = sub_100109308(v11);
  __chkstk_darwin(v12);
  sub_10008B8C0();
  uint64_t v13 = *v0;
  swift_retain();
  sub_1007210CC(0, 256, 2, 2, 3, 0, 0, 0, 1, 0, 0, 0, 2, 2, v13);
  uint64_t v14 = type metadata accessor for ViewState.SecondaryViewState(0);
  uint64_t v17 = sub_100179C70(v4, v15, v16, v14);
  uint64_t v18 = type metadata accessor for SearchViewState(v17);
  sub_100179C70(v3, v19, v20, v18);
  uint64_t v21 = type metadata accessor for DisplayMetrics();
  uint64_t v24 = sub_100179C70(v2, v22, v23, v21);
  type metadata accessor for WeatherMapPresentationState(v24);
  uint64_t v25 = sub_1001A1520();
  _s7Weather24LocationCompositionStateOwst_0(v25, v26, 1, v27);
  sub_10011D8AC();
  swift_release();
  swift_release();
  sub_100178110(v1, &qword_100E663F8);
  sub_100178110(v2, &qword_100E66400);
  sub_100178110(v3, &qword_100E66408);
  sub_100178110(v4, &qword_100E66410);
  sub_100162694();
}

uint64_t sub_100987468(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7972616D697270 && a2 == 0xE700000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7261646E6F636573 && a2 == 0xE900000000000079)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v7) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_100987564(char a1)
{
  if (a1) {
    return 0x7261646E6F636573;
  }
  else {
    return 0x7972616D697270;
  }
}

uint64_t sub_1009875A0()
{
  return sub_100987564(*v0);
}

uint64_t sub_1009875A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100987468(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1009875D0(uint64_t a1)
{
  unint64_t v2 = sub_10098E4BC();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10098760C(uint64_t a1)
{
  unint64_t v2 = sub_10098E4BC();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100987648(uint64_t a1)
{
  unint64_t v2 = sub_10098E554();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100987684(uint64_t a1)
{
  unint64_t v2 = sub_10098E554();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1009876C0(uint64_t a1)
{
  unint64_t v2 = sub_10098E508();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1009876FC(uint64_t a1)
{
  unint64_t v2 = sub_10098E508();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100987738()
{
  return sub_10011D5A0() & 1;
}

uint64_t sub_100987778()
{
  return sub_100987738();
}

void sub_100987788(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  sub_10016314C();
  uint64_t v13 = v12;
  type metadata accessor for WeatherMapPresentationState(0);
  sub_100162E4C();
  __chkstk_darwin(v14);
  sub_100109314();
  type metadata accessor for DisplayMetrics();
  sub_100162E4C();
  __chkstk_darwin(v15);
  sub_100109314();
  uint64_t v16 = sub_10017DF08(&qword_100E66408);
  uint64_t v17 = sub_100109308(v16);
  __chkstk_darwin(v17);
  sub_10019DFF8();
  sub_100162E4C();
  __chkstk_darwin(v18);
  sub_10011C760();
  sub_10017DF08(&qword_100EA4878);
  sub_100179C0C();
  __chkstk_darwin(v19);
  sub_10008B8C0();
  long long v30 = (int *)type metadata accessor for ViewState(0);
  sub_100162E4C();
  __chkstk_darwin(v20);
  sub_100109314();
  uint64_t v22 = v21;
  sub_1001B1E64(v13, v13[3]);
  sub_10098DE28();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v10)
  {
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v13);
  }
  else
  {
    sub_10098DE74();
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    *uint64_t v22 = a10;
    sub_10098DC08(&qword_100EA4890, (void (*)(uint64_t))type metadata accessor for ViewState.SecondaryViewState);
    sub_10018359C();
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    sub_10011E6CC();
    sub_10098DEC0();
    sub_10019D310();
    *((unsigned char *)v22 + v30[6]) = 1;
    sub_10098DF0C();
    sub_10019D310();
    *((unsigned char *)v22 + v30[7]) = 1;
    uint64_t v23 = type metadata accessor for SearchViewState(0);
    sub_10098DC08(&qword_100EA48A8, (void (*)(uint64_t))type metadata accessor for SearchViewState);
    sub_10018359C();
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    sub_1001093B0();
    _s7Weather24LocationCompositionStateOwst_0(v24, v25, v26, v23);
    sub_10011E908(v11, (uint64_t)v22 + v30[8]);
    sub_10098DC08(&qword_100EA48B0, (void (*)(uint64_t))type metadata accessor for DisplayMetrics);
    sub_10018359C();
    sub_100188E28();
    sub_10011E6CC();
    sub_10098DC08(&qword_100EA48B8, (void (*)(uint64_t))type metadata accessor for WeatherMapPresentationState);
    sub_10018359C();
    sub_100188E28();
    sub_10011E6CC();
    char v27 = KeyedDecodingContainer.decode(_:forKey:)();
    uint64_t v28 = sub_100184130();
    v29(v28);
    *((unsigned char *)v22 + v30[11]) = v27 & 1;
    sub_10011E568();
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v13);
    sub_10011E4B4((uint64_t)v22, (void (*)(void))type metadata accessor for ViewState);
  }
  sub_100163164();
}

void sub_100987E20()
{
  sub_10017F304();
  sub_10017DF08(&qword_100EA48C0);
  sub_100179C0C();
  __chkstk_darwin(v1);
  sub_1001889D8();
  sub_10098DE28();
  sub_100162840();
  sub_10098DF58();
  sub_10017EAE4();
  if (!v0)
  {
    type metadata accessor for ViewState(0);
    type metadata accessor for ViewState.SecondaryViewState(0);
    sub_10098DC08(&qword_100EA48D0, (void (*)(uint64_t))type metadata accessor for ViewState.SecondaryViewState);
    sub_1001A1090();
    sub_10098DFA4();
    sub_10017EAE4();
    sub_10001EE2C();
    sub_10098DFF0();
    sub_10017EAE4();
    sub_10017DF08(&qword_100E66408);
    sub_10098E03C();
    sub_1001A1090();
    type metadata accessor for DisplayMetrics();
    sub_10098DC08(&qword_100EA48F8, (void (*)(uint64_t))type metadata accessor for DisplayMetrics);
    sub_1001A1090();
    type metadata accessor for WeatherMapPresentationState(0);
    sub_10098DC08(&qword_100EA4900, (void (*)(uint64_t))type metadata accessor for WeatherMapPresentationState);
    sub_1001A1090();
    KeyedEncodingContainer.encode(_:forKey:)();
  }
  sub_100164F40();
  v2();
  sub_100182C7C();
  sub_100182EF8();
}

unint64_t sub_10098810C(Swift::String string)
{
  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_100E084C8, v2);
  swift_bridgeObjectRelease();
  if (v3 >= 8) {
    return 8;
  }
  else {
    return v3;
  }
}

unint64_t sub_10098815C(char a1)
{
  unint64_t result = 0x7972616D697270;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x7261646E6F636573;
      break;
    case 2:
    case 7:
      unint64_t result = 0xD000000000000010;
      break;
    case 3:
      unint64_t result = 0x6572726566657270;
      break;
    case 4:
      unint64_t result = 0x686372616573;
      break;
    case 5:
      unint64_t result = 0x4D79616C70736964;
      break;
    case 6:
      unint64_t result = 0xD000000000000014;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_100988274(char a1)
{
  unint64_t result = 0x7972616D697270;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x7261646E6F636573;
      break;
    case 2:
    case 7:
      unint64_t result = 0xD000000000000010;
      break;
    case 3:
      unint64_t result = 0x6572726566657270;
      break;
    case 4:
      unint64_t result = 0x686372616573;
      break;
    case 5:
      unint64_t result = 0x4D79616C70736964;
      break;
    case 6:
      unint64_t result = 0xD000000000000014;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_10098838C(unsigned __int8 *a1, char *a2)
{
  return sub_100889754(*a1, *a2);
}

Swift::Int sub_100988398()
{
  return sub_1006529C4(*v0);
}

uint64_t sub_1009883A0(uint64_t a1)
{
  return sub_1002C1ED4(a1, *v1);
}

Swift::Int sub_1009883A8(uint64_t a1)
{
  return sub_1002C4B48(a1, *v1);
}

unint64_t sub_1009883B0@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_10098810C(*a1);
  *a2 = result;
  return result;
}

unint64_t sub_1009883E0()
{
  char v1 = sub_100166C48();
  unint64_t result = sub_10098815C(v1);
  *uint64_t v0 = result;
  v0[1] = v3;
  return result;
}

unint64_t sub_100988408()
{
  return sub_100988274(*v0);
}

uint64_t sub_100988410@<X0>(Swift::String a1@<X1:X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_100988158(a1);
  *a2 = result;
  return result;
}

uint64_t sub_100988438(uint64_t a1)
{
  unint64_t v2 = sub_10098DE28();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100988474(uint64_t a1)
{
  unint64_t v2 = sub_10098DE28();

  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_1009884B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_100987788(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8);
}

void sub_1009884C8()
{
}

void sub_1009884E0()
{
  sub_10017F304();
  sub_10012B588();
  sub_10017DF08(&qword_100EA4908);
  sub_100179C0C();
  __chkstk_darwin(v1);
  sub_10018593C();
  sub_10098E0E0();
  sub_100163110();
  sub_10098E12C();
  sub_1001A0180();
  sub_10098E178();
  sub_1001A0180();
  uint64_t v2 = sub_10017D214();
  v3(v2);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0);
  sub_100182C7C();
  sub_100182EF8();
}

void sub_10098860C()
{
  sub_10017F304();
  sub_10017DF08(&qword_100EA4928);
  sub_100179C0C();
  __chkstk_darwin(v1);
  sub_10016279C();
  sub_1001889D8();
  sub_10098E0E0();
  sub_100162840();
  sub_10098E1C4();
  swift_retain();
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  if (!v0)
  {
    sub_10098E210();
    KeyedEncodingContainer.encode<A>(_:forKey:)();
  }
  sub_100164F40();
  v2();
  swift_release();
  sub_100182EF8();
}

uint64_t sub_100988744(Swift::String a1)
{
  v1._rawValue = &off_100E085A8;
  return sub_100989540(a1, v1);
}

uint64_t sub_100988764(char a1)
{
  if (a1) {
    return 1953720684;
  }
  else {
    return 1701869940;
  }
}

uint64_t sub_100988784()
{
  return 1953720684;
}

uint64_t sub_100988794(char *a1, char *a2)
{
  return sub_100889BEC(*a1, *a2);
}

Swift::Int sub_1009887A0()
{
  return sub_100652984();
}

uint64_t sub_1009887A8()
{
  return sub_1002C2190();
}

Swift::Int sub_1009887B0()
{
  return sub_1002C4960();
}

uint64_t sub_1009887B8@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  v3._rawValue = &off_100E085A8;
  uint64_t result = sub_100989540(*a1, v3);
  *a2 = result;
  return result;
}

uint64_t sub_1009887F0()
{
  char v1 = sub_100166C48();
  uint64_t result = sub_100988764(v1);
  *uint64_t v0 = result;
  v0[1] = v3;
  return result;
}

uint64_t sub_100988818()
{
  return sub_100988764(*v0);
}

uint64_t sub_100988820@<X0>(Swift::String a1@<X1:X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_100988744(a1);
  *a2 = result;
  return result;
}

uint64_t sub_100988848(uint64_t a1)
{
  unint64_t v2 = sub_10098E0E0();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100988884(uint64_t a1)
{
  unint64_t v2 = sub_10098E0E0();

  return CodingKey.debugDescription.getter(a1, v2);
}

BOOL sub_1009888CC@<W0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  v3._rawValue = &off_100E085F8;
  BOOL result = sub_10098A28C(*a1, v3);
  *a2 = result;
  return result;
}

uint64_t sub_100988908@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_100988784();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_100988930()
{
  return RawRepresentable<>.init(from:)();
}

uint64_t sub_100988990()
{
  return RawRepresentable<>.encode(to:)();
}

void sub_1009889E0(void *a1@<X8>)
{
  sub_1009884E0();
  if (!v1) {
    *a1 = v3;
  }
}

void sub_100988A0C()
{
}

void sub_100988A28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12, char a13)
{
  sub_10016314C();
  uint64_t v16 = v15;
  type metadata accessor for VFXTestViewState();
  sub_100162E4C();
  __chkstk_darwin(v17);
  sub_10011C760();
  sub_10017DF08(&qword_100EA4940);
  sub_100179C0C();
  __chkstk_darwin(v18);
  sub_100109370();
  type metadata accessor for ViewState.SecondaryViewState(0);
  sub_100162E4C();
  __chkstk_darwin(v19);
  sub_10012B938();
  sub_1001B1E64(v16, v16[3]);
  sub_10098E25C();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (!v13)
  {
    sub_10098E2A8();
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    if (a13)
    {
      sub_10098DC08(&qword_100EA4958, (void (*)(uint64_t))type metadata accessor for VFXTestViewState);
      KeyedDecodingContainer.decode<A>(_:forKey:)();
      uint64_t v20 = sub_1001D0F9C();
      v21(v20);
      sub_10011E6CC();
    }
    else
    {
      sub_10098E2F4();
      KeyedDecodingContainer.decode<A>(_:forKey:)();
      uint64_t v22 = sub_1001D0F9C();
      v23(v22);
      *uint64_t v14 = v24;
    }
    swift_storeEnumTagMultiPayload();
    sub_10011E6CC();
  }
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v16);
  sub_100163164();
}

void sub_100988CE4()
{
  sub_10016314C();
  type metadata accessor for VFXTestViewState();
  sub_100162E4C();
  __chkstk_darwin(v2);
  sub_10019DFF8();
  sub_100162E4C();
  __chkstk_darwin(v3);
  sub_100162F18();
  sub_10017DF08(&qword_100EA4968);
  sub_100179C0C();
  __chkstk_darwin(v4);
  sub_10012B938();
  sub_1001889D8();
  sub_10098E25C();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  sub_10011E568();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_10011E6CC();
    sub_10098E340();
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    if (!v0)
    {
      sub_10098DC08(&qword_100EA4978, (void (*)(uint64_t))type metadata accessor for VFXTestViewState);
      KeyedEncodingContainer.encode<A>(_:forKey:)();
    }
    sub_10011E4B4(v1, (void (*)(void))type metadata accessor for VFXTestViewState);
    sub_100162F0C();
    v5();
  }
  else
  {
    sub_10098E340();
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    if (!v0)
    {
      sub_10098E38C();
      KeyedEncodingContainer.encode<A>(_:forKey:)();
    }
    sub_100162F0C();
    v6();
    swift_release();
  }
  sub_100163164();
}

uint64_t sub_100988FB0(Swift::String a1)
{
  v1._rawValue = &off_100E08630;
  return sub_10098A2E4(a1, v1);
}

uint64_t sub_100988FD0(char a1)
{
  if (!a1) {
    return 1701869940;
  }
  if (a1 == 1) {
    return 0x6E6F697461636F6CLL;
  }
  return 0x74736554786676;
}

uint64_t sub_10098902C(char a1)
{
  if (a1) {
    return 0x74736554786676;
  }
  else {
    return 0x6E6F697461636F6CLL;
  }
}

uint64_t sub_100989070(unsigned __int8 *a1, char *a2)
{
  return sub_100889A50(*a1, *a2);
}

Swift::Int sub_10098907C()
{
  return sub_1006529AC();
}

uint64_t sub_100989084(uint64_t a1)
{
  return sub_1002C2088(a1, *v1);
}

Swift::Int sub_10098908C()
{
  return sub_1002C4A40();
}

uint64_t sub_100989094@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  v3._rawValue = &off_100E08630;
  uint64_t result = sub_10098A2E4(*a1, v3);
  *a2 = result;
  return result;
}

uint64_t sub_1009890CC()
{
  char v1 = sub_100166C48();
  uint64_t result = sub_100988FD0(v1);
  *uint64_t v0 = result;
  v0[1] = v3;
  return result;
}

uint64_t sub_1009890F4()
{
  return sub_100988FD0(*v0);
}

uint64_t sub_1009890FC@<X0>(Swift::String a1@<X1:X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_100988FB0(a1);
  *a2 = result;
  return result;
}

uint64_t sub_100989124(uint64_t a1)
{
  unint64_t v2 = sub_10098E25C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100989160(uint64_t a1)
{
  unint64_t v2 = sub_10098E25C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10098919C(char *a1, char *a2)
{
  return sub_1008899B0(*a1, *a2);
}

Swift::Int sub_1009891A8()
{
  return sub_1006529B8();
}

uint64_t sub_1009891B0()
{
  return sub_1002C2010();
}

Swift::Int sub_1009891B8()
{
  return sub_1002C4ACC();
}

uint64_t sub_1009891C0@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  v3._rawValue = &off_100E08698;
  uint64_t result = sub_100989540(*a1, v3);
  *a2 = result;
  return result;
}

uint64_t sub_1009891F8()
{
  char v1 = sub_100166C48();
  uint64_t result = sub_10098902C(v1);
  *uint64_t v0 = result;
  v0[1] = v3;
  return result;
}

uint64_t sub_100989220()
{
  return RawRepresentable<>.init(from:)();
}

uint64_t sub_100989280()
{
  return RawRepresentable<>.encode(to:)();
}

void sub_1009892D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_100988A28(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8, SWORD2(vars8), SBYTE6(vars8), SHIBYTE(vars8));
}

void sub_1009892E8()
{
}

void sub_100989300()
{
  sub_10017F304();
  sub_10012B588();
  sub_10017DF08(&qword_100EA4988);
  sub_100179C0C();
  __chkstk_darwin(v2);
  sub_10018593C();
  sub_10098E3D8();
  sub_100163110();
  if (!v1)
  {
    sub_10098E424();
    sub_1001A0180();
    uint64_t v3 = sub_10017D214();
    v4(v3);
  }
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0);
  sub_100182C7C();
  sub_100182EF8();
}

void sub_1009893F0()
{
  sub_10017F304();
  uint64_t v2 = v1;
  uint64_t v3 = sub_10017DF08(&qword_100EA49A0);
  sub_100179C0C();
  uint64_t v5 = v4;
  __chkstk_darwin(v6);
  sub_10016279C();
  sub_1001B1E64(v2, v2[3]);
  sub_10098E3D8();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  sub_10098E470();
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v0, v3);
  sub_100182EF8();
}

BOOL sub_10098951C(Swift::String a1)
{
  v1._rawValue = &off_100E086E8;
  return sub_10098A28C(a1, v1);
}

uint64_t sub_100989540(Swift::String a1, Swift::OpaquePointer a2)
{
  Swift::Int v2 = sub_100182654(a1, a2);
  swift_bridgeObjectRelease();
  if (v2 == 1) {
    unsigned int v3 = 1;
  }
  else {
    unsigned int v3 = 2;
  }
  if (v2) {
    return v3;
  }
  else {
    return 0;
  }
}

uint64_t sub_100989580(char a1)
{
  if (a1) {
    return 0x6552686372616573;
  }
  else {
    return 1701736302;
  }
}

BOOL sub_1009895BC@<W0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  v3._rawValue = &off_100E086E8;
  BOOL result = sub_10098A28C(*a1, v3);
  *a2 = result;
  return result;
}

BOOL sub_1009895F8@<W0>(Swift::String a1@<X1:X0>, unsigned char *a2@<X8>)
{
  BOOL result = sub_10098951C(a1);
  *a2 = result;
  return result;
}

uint64_t sub_100989624(uint64_t a1)
{
  unint64_t v2 = sub_10098E3D8();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100989660(uint64_t a1)
{
  unint64_t v2 = sub_10098E3D8();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10098969C(char *a1, char *a2)
{
  return sub_100889B54(*a1, *a2);
}

Swift::Int sub_1009896A8()
{
  return sub_1006529A0();
}

uint64_t sub_1009896B0()
{
  return sub_1002C2110();
}

Swift::Int sub_1009896B8()
{
  return sub_1002C49CC();
}

uint64_t sub_1009896C0@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  v3._rawValue = &off_100E08720;
  uint64_t result = sub_100989540(*a1, v3);
  *a2 = result;
  return result;
}

uint64_t sub_1009896F8()
{
  char v1 = sub_100166C48();
  uint64_t result = sub_100989580(v1);
  *uint64_t v0 = result;
  v0[1] = v3;
  return result;
}

uint64_t sub_100989720()
{
  return RawRepresentable<>.init(from:)();
}

uint64_t sub_100989780()
{
  return RawRepresentable<>.encode(to:)();
}

void sub_1009897D0(unsigned char *a1@<X8>)
{
  sub_100989300();
  if (!v1) {
    *a1 = v3 & 1;
  }
}

void sub_100989800()
{
}

void UIInterfaceOrientation.init(from:)()
{
  sub_10017F304();
  sub_10012B588();
  sub_10017DF08(&qword_100EA4650);
  sub_100179C0C();
  __chkstk_darwin(v2);
  sub_10018593C();
  sub_100989918();
  sub_100163110();
  if (!v1)
  {
    sub_100989964();
    sub_1001A0180();
    uint64_t v3 = sub_10017D214();
    v4(v3);
  }
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0);
  sub_100182C7C();
  sub_100182EF8();
}

unint64_t sub_100989918()
{
  unint64_t result = qword_100EA4658;
  if (!qword_100EA4658)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA4658);
  }
  return result;
}

unint64_t sub_100989964()
{
  unint64_t result = qword_100EA4660;
  if (!qword_100EA4660)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA4660);
  }
  return result;
}

void UIInterfaceOrientation.encode(to:)()
{
  sub_10017F304();
  sub_10017DF08(&qword_100EA4668);
  sub_100179C0C();
  __chkstk_darwin(v0);
  sub_1001889D8();
  sub_100989918();
  sub_100162840();
  sub_100989B80();
  sub_10017EAE4();
  sub_100164F40();
  v1();
  sub_100182EF8();
}

unint64_t sub_100989B80()
{
  unint64_t result = qword_100EA4670;
  if (!qword_100EA4670)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA4670);
  }
  return result;
}

BOOL sub_100989BCC(Swift::String a1)
{
  v1._rawValue = &off_100E08770;
  return sub_10098A28C(a1, v1);
}

unint64_t sub_100989BF0(Swift::String string)
{
  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_100E087A8, v2);
  swift_bridgeObjectRelease();
  if (v3 >= 5) {
    return 5;
  }
  else {
    return v3;
  }
}

unint64_t sub_100989C3C(char a1)
{
  unint64_t result = 0x6E776F6E6B6E75;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x7469617274726F70;
      break;
    case 2:
      unint64_t result = 0xD000000000000012;
      break;
    case 3:
    case 4:
      unint64_t result = 0x70616373646E616CLL;
      break;
    default:
      return result;
  }
  return result;
}

BOOL sub_100989CF8@<W0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  v3._rawValue = &off_100E08770;
  BOOL result = sub_10098A28C(*a1, v3);
  *a2 = result;
  return result;
}

BOOL sub_100989D34@<W0>(Swift::String a1@<X1:X0>, unsigned char *a2@<X8>)
{
  BOOL result = sub_100989BCC(a1);
  *a2 = result;
  return result;
}

uint64_t sub_100989D60(uint64_t a1)
{
  unint64_t v2 = sub_100989918();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100989D9C(uint64_t a1)
{
  unint64_t v2 = sub_100989918();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100989DD8()
{
  return sub_1008895C4();
}

Swift::Int sub_100989DE4()
{
  return sub_1006529DC(*v0);
}

uint64_t sub_100989DEC()
{
  return sub_1002C1E00();
}

Swift::Int sub_100989DF4(uint64_t a1)
{
  return sub_1002C4B60(a1, *v1);
}

unint64_t sub_100989DFC@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_100989BF0(*a1);
  *a2 = result;
  return result;
}

unint64_t sub_100989E2C()
{
  char v1 = sub_100166C48();
  unint64_t result = sub_100989C3C(v1);
  *uint64_t v0 = result;
  v0[1] = v3;
  return result;
}

uint64_t sub_100989E54()
{
  return RawRepresentable<>.init(from:)();
}

uint64_t sub_100989EB4()
{
  return RawRepresentable<>.encode(to:)();
}

void sub_100989F04(void *a1@<X8>)
{
  UIInterfaceOrientation.init(from:)();
  if (!v1) {
    *a1 = v3;
  }
}

void sub_100989F30()
{
}

void UIUserInterfaceSizeClass.init(from:)()
{
  sub_10017F304();
  sub_10012B588();
  sub_10017DF08(&qword_100EA4678);
  sub_100179C0C();
  __chkstk_darwin(v2);
  sub_10018593C();
  sub_10098A048();
  sub_100163110();
  if (!v1)
  {
    sub_10098A094();
    sub_1001A0180();
    uint64_t v3 = sub_10017D214();
    v4(v3);
  }
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0);
  sub_100182C7C();
  sub_100182EF8();
}

unint64_t sub_10098A048()
{
  unint64_t result = qword_100EA4680;
  if (!qword_100EA4680)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA4680);
  }
  return result;
}

unint64_t sub_10098A094()
{
  unint64_t result = qword_100EA4688;
  if (!qword_100EA4688)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA4688);
  }
  return result;
}

void UIUserInterfaceSizeClass.encode(to:)()
{
  sub_10017F304();
  sub_10017DF08(&qword_100EA4690);
  sub_100179C0C();
  __chkstk_darwin(v0);
  sub_1001889D8();
  sub_10098A048();
  sub_100162840();
  sub_10098A240();
  sub_10017EAE4();
  sub_100164F40();
  v1();
  sub_100182EF8();
}

unint64_t sub_10098A240()
{
  unint64_t result = qword_100EA4698;
  if (!qword_100EA4698)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA4698);
  }
  return result;
}

BOOL sub_10098A28C(Swift::String a1, Swift::OpaquePointer a2)
{
  Swift::Int v2 = sub_100182654(a1, a2);
  swift_bridgeObjectRelease();
  return v2 != 0;
}

BOOL sub_10098A2C0(Swift::String a1)
{
  v1._rawValue = &off_100E08840;
  return sub_10098A28C(a1, v1);
}

uint64_t sub_10098A2E4(Swift::String a1, Swift::OpaquePointer a2)
{
  unint64_t v2 = sub_100182654(a1, a2);
  swift_bridgeObjectRelease();
  if (v2 >= 3) {
    return 3;
  }
  else {
    return v2;
  }
}

uint64_t sub_10098A31C(char a1)
{
  if (!a1) {
    return 0x746361706D6F63;
  }
  if (a1 == 1) {
    return 0x72616C75676572;
  }
  return 0x6669636570736E75;
}

void sub_10098A37C()
{
  sub_10016314C();
  char v17 = v3;
  sub_10017DF08(&qword_100EA49E0);
  sub_100179C0C();
  uint64_t v15 = v5;
  uint64_t v16 = v4;
  __chkstk_darwin(v4);
  sub_100125FF8();
  uint64_t v14 = sub_10017DF08(&qword_100EA49E8);
  sub_100179C0C();
  uint64_t v7 = v6;
  __chkstk_darwin(v8);
  sub_10008B8C0();
  uint64_t v9 = sub_10017DF08(&qword_100EA49F0);
  sub_100179C0C();
  uint64_t v11 = v10;
  __chkstk_darwin(v12);
  sub_100162F18();
  sub_1001889D8();
  sub_10098E4BC();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  uint64_t v13 = (void (**)(uint64_t, uint64_t))(v11 + 8);
  if (v17)
  {
    sub_10098E508();
    KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v0, v16);
  }
  else
  {
    sub_10098E554();
    KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v2, v14);
  }
  (*v13)(v1, v9);
  sub_100163164();
}

void sub_10098A568()
{
  sub_10016314C();
  uint64_t v2 = v1;
  sub_10017DF08(&qword_100EA49B0);
  sub_100179C0C();
  __chkstk_darwin(v3);
  sub_10016279C();
  sub_10017DF08(&qword_100EA49B8);
  sub_100179C0C();
  __chkstk_darwin(v4);
  sub_100162E88();
  sub_10017DF08(&qword_100EA49C0);
  sub_100179C0C();
  __chkstk_darwin(v5);
  sub_10012B938();
  sub_1001B1E64(v2, v2[3]);
  sub_10098E4BC();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (!v0)
  {
    uint64_t v6 = KeyedDecodingContainer.allKeys.getter();
    uint64_t v7 = *(void *)(v6 + 16);
    if (v7
      && (sub_100723214(1, v7, v6, v6 + 32, 0, (2 * v7) | 1),
          uint64_t v9 = v8,
          unint64_t v11 = v10,
          swift_bridgeObjectRelease(),
          v9 == v11 >> 1))
    {
      sub_10098E508();
      sub_10017A110();
      sub_100162F0C();
      v13(v12);
      swift_unknownObjectRelease();
      uint64_t v14 = sub_10018124C();
      v15(v14);
    }
    else
    {
      type metadata accessor for DecodingError();
      swift_allocError();
      char v17 = v16;
      sub_10017DF08(&qword_100E67280);
      void *v17 = &unk_100E30F88;
      KeyedDecodingContainer.codingPath.getter();
      DecodingError.Context.init(codingPath:debugDescription:underlyingError:)();
      sub_100162880();
      (*(void (**)(void *))(v18 + 104))(v17);
      swift_willThrow();
      swift_unknownObjectRelease();
      sub_100162F0C();
      v20(v19);
    }
  }
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v2);
  sub_100163164();
}

BOOL sub_10098A8F8@<W0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  v3._rawValue = &off_100E08840;
  BOOL result = sub_10098A28C(*a1, v3);
  *a2 = result;
  return result;
}

BOOL sub_10098A934@<W0>(Swift::String a1@<X1:X0>, unsigned char *a2@<X8>)
{
  BOOL result = sub_10098A2C0(a1);
  *a2 = result;
  return result;
}

uint64_t sub_10098A960(uint64_t a1)
{
  unint64_t v2 = sub_10098A048();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10098A99C(uint64_t a1)
{
  unint64_t v2 = sub_10098A048();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10098A9D8(unsigned __int8 *a1, char *a2)
{
  return sub_100889440(*a1, *a2);
}

Swift::Int sub_10098A9E4()
{
  return sub_100652AA0();
}

uint64_t sub_10098A9EC(uint64_t a1)
{
  return sub_1002C1D78(a1, *v1);
}

Swift::Int sub_10098A9F4()
{
  return sub_1002C4C2C();
}

uint64_t sub_10098A9FC@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  v3._rawValue = &off_100E08878;
  uint64_t result = sub_10098A2E4(*a1, v3);
  *a2 = result;
  return result;
}

uint64_t sub_10098AA34()
{
  char v1 = sub_100166C48();
  uint64_t result = sub_10098A31C(v1);
  *uint64_t v0 = result;
  v0[1] = v3;
  return result;
}

uint64_t sub_10098AA5C()
{
  return RawRepresentable<>.init(from:)();
}

uint64_t sub_10098AABC()
{
  return RawRepresentable<>.encode(to:)();
}

void sub_10098AB0C(void *a1@<X8>)
{
  UIUserInterfaceSizeClass.init(from:)();
  if (!v1) {
    *a1 = v3;
  }
}

void sub_10098AB38()
{
}

uint64_t *sub_10098AB54(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v7 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v7 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = type metadata accessor for WeatherCondition();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_10098AC54(void *a1, void *a2)
{
  if (a1 != a2)
  {
    sub_10011E4B4((uint64_t)a1, (void (*)(void))type metadata accessor for ViewState.SecondaryViewState);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v4 = type metadata accessor for WeatherCondition();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_10098AD28(void *a1, const void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = type metadata accessor for WeatherCondition();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

void *sub_10098ADE0(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_10011E4B4((uint64_t)a1, (void (*)(void))type metadata accessor for ViewState.SecondaryViewState);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = type metadata accessor for WeatherCondition();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

void *sub_10098AEBC(void *a1, void *a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = (void *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
    return v7;
  }
  int v5 = a3;
  uint64_t v6 = a2;
  uint64_t v7 = a1;
  uint64_t v8 = a3[5];
  uint64_t v9 = (void *)((char *)a1 + v8);
  unint64_t v10 = (void *)((char *)a2 + v8);
  type metadata accessor for ViewState.SecondaryViewState(0);
  swift_retain();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v11 = type metadata accessor for WeatherCondition();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
  }
  else
  {
    *uint64_t v9 = *v10;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v12 = v5[7];
  *((unsigned char *)v7 + v5[6]) = *((unsigned char *)v6 + v5[6]);
  *((unsigned char *)v7 + v12) = *((unsigned char *)v6 + v12);
  uint64_t v13 = v5[8];
  uint64_t v14 = (void *)((char *)v7 + v13);
  uint64_t v15 = (void *)((char *)v6 + v13);
  uint64_t v16 = (int *)type metadata accessor for SearchViewState(0);
  if (!_s7Weather24LocationCompositionStateOwet_0((uint64_t)v15, 1, (uint64_t)v16))
  {
    uint64_t v18 = v5;
    uint64_t v19 = v6;
    uint64_t v20 = v15[1];
    *uint64_t v14 = *v15;
    v14[1] = v20;
    uint64_t v21 = v16[5];
    uint64_t v22 = (void *)((char *)v14 + v21);
    uint64_t v23 = (void *)((char *)v15 + v21);
    uint64_t v24 = type metadata accessor for SearchViewState.ViewState(0);
    swift_bridgeObjectRetain();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      *uint64_t v22 = *v23;
      swift_bridgeObjectRetain();
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(v22, v23, *(void *)(*(void *)(v24 - 8) + 64));
        goto LABEL_14;
      }
      uint64_t v26 = type metadata accessor for CodableError();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v26 - 8) + 16))(v22, v23, v26);
    }
    swift_storeEnumTagMultiPayload();
LABEL_14:
    uint64_t v6 = v19;
    int v5 = v18;
    *((unsigned char *)v14 + v16[6]) = *((unsigned char *)v15 + v16[6]);
    uint64_t v27 = v16[7];
    uint64_t v28 = (char *)v14 + v27;
    long long v29 = (char *)v15 + v27;
    uint64_t v30 = type metadata accessor for Location();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v29, 1, v30))
    {
      uint64_t v31 = sub_10017DF08(&qword_100E639E8);
      memcpy(v28, v29, *(void *)(*(void *)(v31 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 16))(v28, v29, v30);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v28, 0, 1, v30);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v14, 0, 1, (uint64_t)v16);
    goto LABEL_18;
  }
  uint64_t v17 = sub_10017DF08(&qword_100E66408);
  memcpy(v14, v15, *(void *)(*(void *)(v17 - 8) + 64));
LABEL_18:
  uint64_t v32 = v5[9];
  id v33 = (char *)v7 + v32;
  uint64_t v34 = (char *)v6 + v32;
  *(_OWORD *)id v33 = *(_OWORD *)((char *)v6 + v32);
  v33[16] = *((unsigned char *)v6 + v32 + 16);
  v33[17] = *((unsigned char *)v6 + v32 + 17);
  v33[18] = *((unsigned char *)v6 + v32 + 18);
  uint64_t v35 = *(int *)(type metadata accessor for DisplayMetrics() + 36);
  uint64_t v36 = &v33[v35];
  uint64_t v37 = &v34[v35];
  uint64_t v38 = type metadata accessor for DynamicTypeSize();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 16))(v36, v37, v38);
  uint64_t v58 = v5;
  uint64_t v59 = v6;
  uint64_t v39 = v5[10];
  uint64_t v40 = (char *)v7 + v39;
  int v41 = (_WORD *)((char *)v6 + v39);
  *(_WORD *)((char *)v7 + v39) = *v41;
  uint64_t v42 = (int *)type metadata accessor for WeatherMapPresentationState(0);
  uint64_t v43 = v42[6];
  uint64_t v44 = &v40[v43];
  uint64_t v45 = (char *)v41 + v43;
  uint64_t v46 = type metadata accessor for WeatherMapOverlayKind();
  id v47 = *(void (**)(char *, char *, uint64_t))(*(void *)(v46 - 8) + 16);
  v47(v44, v45, v46);
  uint64_t v48 = v42[7];
  uint64_t v49 = &v40[v48];
  id v50 = (void *)((char *)v41 + v48);
  uint64_t v51 = v50[1];
  *(void *)uint64_t v49 = *v50;
  *((void *)v49 + 1) = v51;
  uint64_t v52 = v42[8];
  uint64_t v53 = &v40[v52];
  uint64_t v54 = (char *)v41 + v52;
  swift_bridgeObjectRetain();
  uint64_t v55 = sub_10017DF08(&qword_100E66460);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v54, 3, v55))
  {
    uint64_t v56 = type metadata accessor for WeatherMapTrackingState(0);
    memcpy(v53, v54, *(void *)(*(void *)(v56 - 8) + 64));
  }
  else
  {
    char *v53 = *v54;
    v47(&v53[*(int *)(v55 + 48)], &v54[*(int *)(v55 + 48)], v46);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v53, 0, 3, v55);
  }
  v40[v42[9]] = *((unsigned char *)v41 + v42[9]);
  *((unsigned char *)v7 + v58[11]) = *((unsigned char *)v59 + v58[11]);
  return v7;
}

void *sub_10098B3BC(void *a1, void *a2, int *a3)
{
  uint64_t v4 = a2;
  *a1 = *a2;
  swift_retain();
  swift_release();
  if (a1 != v4)
  {
    uint64_t v6 = a3[5];
    uint64_t v7 = (void *)((char *)a1 + v6);
    uint64_t v8 = (void *)((char *)v4 + v6);
    sub_10011E4B4((uint64_t)a1 + v6, (void (*)(void))type metadata accessor for ViewState.SecondaryViewState);
    type metadata accessor for ViewState.SecondaryViewState(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v9 = type metadata accessor for WeatherCondition();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
    }
    else
    {
      *uint64_t v7 = *v8;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  *((unsigned char *)a1 + a3[6]) = *((unsigned char *)v4 + a3[6]);
  *((unsigned char *)a1 + a3[7]) = *((unsigned char *)v4 + a3[7]);
  uint64_t v10 = a3[8];
  uint64_t v11 = (void *)((char *)a1 + v10);
  uint64_t v12 = (void *)((char *)v4 + v10);
  uint64_t v13 = (int *)type metadata accessor for SearchViewState(0);
  int v14 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v11, 1, (uint64_t)v13);
  int v15 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v12, 1, (uint64_t)v13);
  if (v14)
  {
    if (!v15)
    {
      uint64_t v16 = v4;
      *uint64_t v11 = *v12;
      v11[1] = v12[1];
      uint64_t v17 = v13[5];
      uint64_t v18 = (void *)((char *)v11 + v17);
      uint64_t v19 = (void *)((char *)v12 + v17);
      uint64_t v20 = type metadata accessor for SearchViewState.ViewState(0);
      swift_bridgeObjectRetain();
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 1)
      {
        void *v18 = *v19;
        swift_bridgeObjectRetain();
      }
      else
      {
        if (EnumCaseMultiPayload)
        {
          memcpy(v18, v19, *(void *)(*(void *)(v20 - 8) + 64));
          goto LABEL_22;
        }
        uint64_t v22 = type metadata accessor for CodableError();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v22 - 8) + 16))(v18, v19, v22);
      }
      swift_storeEnumTagMultiPayload();
LABEL_22:
      uint64_t v4 = v16;
      *((unsigned char *)v11 + v13[6]) = *((unsigned char *)v12 + v13[6]);
      uint64_t v33 = v13[7];
      uint64_t v34 = (char *)v11 + v33;
      uint64_t v35 = (char *)v12 + v33;
      uint64_t v36 = type metadata accessor for Location();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v35, 1, v36))
      {
        uint64_t v37 = sub_10017DF08(&qword_100E639E8);
        memcpy(v34, v35, *(void *)(*(void *)(v37 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 16))(v34, v35, v36);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v34, 0, 1, v36);
      }
      uint64_t v38 = (uint64_t)v11;
      uint64_t v39 = (uint64_t)v13;
      goto LABEL_26;
    }
    goto LABEL_13;
  }
  if (v15)
  {
    sub_10011E4B4((uint64_t)v11, (void (*)(void))type metadata accessor for SearchViewState);
LABEL_13:
    size_t v23 = *(void *)(*(void *)(sub_10017DF08(&qword_100E66408) - 8) + 64);
    uint64_t v24 = v11;
    uint64_t v25 = v12;
LABEL_14:
    memcpy(v24, v25, v23);
    goto LABEL_27;
  }
  *uint64_t v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (a1 != v4)
  {
    uint64_t v26 = v4;
    uint64_t v27 = v13[5];
    uint64_t v28 = (void *)((char *)v11 + v27);
    long long v29 = (void *)((char *)v12 + v27);
    sub_10011E4B4((uint64_t)v11 + v27, (void (*)(void))type metadata accessor for SearchViewState.ViewState);
    uint64_t v30 = type metadata accessor for SearchViewState.ViewState(0);
    int v31 = swift_getEnumCaseMultiPayload();
    if (v31 == 1)
    {
      *uint64_t v28 = *v29;
      swift_bridgeObjectRetain();
    }
    else
    {
      if (v31)
      {
        memcpy(v28, v29, *(void *)(*(void *)(v30 - 8) + 64));
        goto LABEL_38;
      }
      uint64_t v32 = type metadata accessor for CodableError();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v32 - 8) + 16))(v28, v29, v32);
    }
    swift_storeEnumTagMultiPayload();
LABEL_38:
    uint64_t v4 = v26;
  }
  *((unsigned char *)v11 + v13[6]) = *((unsigned char *)v12 + v13[6]);
  uint64_t v68 = v13[7];
  uint64_t v69 = (uint64_t)v11 + v68;
  uint64_t v70 = (uint64_t)v12 + v68;
  uint64_t v71 = type metadata accessor for Location();
  int v72 = _s7Weather24LocationCompositionStateOwet_0(v69, 1, v71);
  int v73 = _s7Weather24LocationCompositionStateOwet_0(v70, 1, v71);
  if (v72)
  {
    if (!v73)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v71 - 8) + 16))(v69, v70, v71);
      uint64_t v38 = v69;
      uint64_t v39 = v71;
LABEL_26:
      _s7Weather24LocationCompositionStateOwst_0(v38, 0, 1, v39);
      goto LABEL_27;
    }
    goto LABEL_44;
  }
  uint64_t v74 = *(void *)(v71 - 8);
  if (v73)
  {
    (*(void (**)(uint64_t, uint64_t))(v74 + 8))(v69, v71);
LABEL_44:
    size_t v23 = *(void *)(*(void *)(sub_10017DF08(&qword_100E639E8) - 8) + 64);
    uint64_t v24 = (void *)v69;
    uint64_t v25 = (const void *)v70;
    goto LABEL_14;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v74 + 24))(v69, v70, v71);
LABEL_27:
  uint64_t v40 = a3[9];
  int v41 = (char *)a1 + v40;
  uint64_t v42 = (char *)v4 + v40;
  *(void *)int v41 = *(void *)((char *)v4 + v40);
  *((void *)v41 + 1) = *(void *)((char *)v4 + v40 + 8);
  v41[16] = *((unsigned char *)v4 + v40 + 16);
  v41[17] = *((unsigned char *)v4 + v40 + 17);
  v41[18] = *((unsigned char *)v4 + v40 + 18);
  uint64_t v43 = *(int *)(type metadata accessor for DisplayMetrics() + 36);
  uint64_t v44 = &v41[v43];
  uint64_t v45 = &v42[v43];
  uint64_t v46 = type metadata accessor for DynamicTypeSize();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v46 - 8) + 24))(v44, v45, v46);
  v77 = a3;
  uint64_t v78 = a1;
  uint64_t v47 = a3[10];
  uint64_t v48 = (char *)a1 + v47;
  char v76 = v4;
  uint64_t v49 = (char *)v4 + v47;
  unsigned char *v48 = *((unsigned char *)v4 + v47);
  v48[1] = *((unsigned char *)v4 + v47 + 1);
  id v50 = (int *)type metadata accessor for WeatherMapPresentationState(0);
  uint64_t v51 = v50[6];
  uint64_t v52 = &v48[v51];
  uint64_t v53 = &v49[v51];
  uint64_t v54 = type metadata accessor for WeatherMapOverlayKind();
  uint64_t v55 = *(void *)(v54 - 8);
  uint64_t v56 = *(void (**)(char *, char *, uint64_t))(v55 + 24);
  v56(v52, v53, v54);
  uint64_t v57 = v50[7];
  uint64_t v58 = &v48[v57];
  uint64_t v59 = &v49[v57];
  *uint64_t v58 = *(void *)v59;
  v58[1] = *((void *)v59 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v75 = v50;
  uint64_t v60 = v50[8];
  char v61 = &v48[v60];
  uint64_t v62 = &v49[v60];
  uint64_t v63 = sub_10017DF08(&qword_100E66460);
  int v64 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v61, 3, v63);
  int v65 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v62, 3, v63);
  if (!v64)
  {
    if (!v65)
    {
      char *v61 = *v62;
      v56(&v61[*(int *)(v63 + 48)], &v62[*(int *)(v63 + 48)], v54);
      goto LABEL_33;
    }
    sub_100178110((uint64_t)v61, &qword_100E66460);
    goto LABEL_32;
  }
  if (v65)
  {
LABEL_32:
    uint64_t v66 = type metadata accessor for WeatherMapTrackingState(0);
    memcpy(v61, v62, *(void *)(*(void *)(v66 - 8) + 64));
    goto LABEL_33;
  }
  char *v61 = *v62;
  (*(void (**)(char *, char *, uint64_t))(v55 + 16))(&v61[*(int *)(v63 + 48)], &v62[*(int *)(v63 + 48)], v54);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v61, 0, 3, v63);
LABEL_33:
  v48[v75[9]] = v49[v75[9]];
  uint64_t result = v78;
  *((unsigned char *)v78 + v77[11]) = *((unsigned char *)v76 + v77[11]);
  return result;
}

void *sub_10098BBB0(void *a1, void *a2, int *a3)
{
  int v3 = a3;
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for ViewState.SecondaryViewState(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = type metadata accessor for WeatherCondition();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v7, v8, v10);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
  }
  uint64_t v11 = v3[7];
  *((unsigned char *)a1 + v3[6]) = *((unsigned char *)a2 + v3[6]);
  *((unsigned char *)a1 + v11) = *((unsigned char *)a2 + v11);
  uint64_t v12 = v3[8];
  uint64_t v13 = (_OWORD *)((char *)a1 + v12);
  int v14 = (_OWORD *)((char *)a2 + v12);
  int v15 = (int *)type metadata accessor for SearchViewState(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v14, 1, (uint64_t)v15))
  {
    uint64_t v16 = sub_10017DF08(&qword_100E66408);
    memcpy(v13, v14, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    uint64_t v17 = v3;
    _OWORD *v13 = *v14;
    uint64_t v18 = v15[5];
    uint64_t v19 = (char *)v13 + v18;
    uint64_t v20 = (char *)v14 + v18;
    uint64_t v21 = type metadata accessor for SearchViewState.ViewState(0);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v19, v20, *(void *)(*(void *)(v21 - 8) + 64));
    }
    else
    {
      uint64_t v22 = type metadata accessor for CodableError();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 32))(v19, v20, v22);
      swift_storeEnumTagMultiPayload();
    }
    *((unsigned char *)v13 + v15[6]) = *((unsigned char *)v14 + v15[6]);
    uint64_t v23 = v15[7];
    uint64_t v24 = (char *)v13 + v23;
    uint64_t v25 = (char *)v14 + v23;
    uint64_t v26 = type metadata accessor for Location();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v25, 1, v26))
    {
      uint64_t v27 = sub_10017DF08(&qword_100E639E8);
      memcpy(v24, v25, *(void *)(*(void *)(v27 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 32))(v24, v25, v26);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v24, 0, 1, v26);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v13, 0, 1, (uint64_t)v15);
    int v3 = v17;
  }
  uint64_t v28 = v3[9];
  long long v29 = (char *)a1 + v28;
  uint64_t v30 = (char *)a2 + v28;
  *(_OWORD *)long long v29 = *(_OWORD *)((char *)a2 + v28);
  v29[16] = *((unsigned char *)a2 + v28 + 16);
  v29[17] = *((unsigned char *)a2 + v28 + 17);
  v29[18] = *((unsigned char *)a2 + v28 + 18);
  uint64_t v31 = *(int *)(type metadata accessor for DisplayMetrics() + 36);
  uint64_t v32 = &v29[v31];
  uint64_t v33 = &v30[v31];
  uint64_t v34 = type metadata accessor for DynamicTypeSize();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 32))(v32, v33, v34);
  id v50 = v3;
  uint64_t v51 = a2;
  uint64_t v35 = v3[10];
  uint64_t v36 = (char *)a1 + v35;
  uint64_t v37 = (_WORD *)((char *)a2 + v35);
  *(_WORD *)((char *)a1 + v35) = *v37;
  uint64_t v38 = (int *)type metadata accessor for WeatherMapPresentationState(0);
  uint64_t v39 = v38[6];
  uint64_t v40 = &v36[v39];
  int v41 = (char *)v37 + v39;
  uint64_t v42 = type metadata accessor for WeatherMapOverlayKind();
  uint64_t v43 = *(void (**)(char *, char *, uint64_t))(*(void *)(v42 - 8) + 32);
  v43(v40, v41, v42);
  *(_OWORD *)&v36[v38[7]] = *(_OWORD *)((char *)v37 + v38[7]);
  uint64_t v44 = v38[8];
  uint64_t v45 = &v36[v44];
  uint64_t v46 = (char *)v37 + v44;
  uint64_t v47 = sub_10017DF08(&qword_100E66460);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v46, 3, v47))
  {
    uint64_t v48 = type metadata accessor for WeatherMapTrackingState(0);
    memcpy(v45, v46, *(void *)(*(void *)(v48 - 8) + 64));
  }
  else
  {
    char *v45 = *v46;
    v43(&v45[*(int *)(v47 + 48)], &v46[*(int *)(v47 + 48)], v42);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v45, 0, 3, v47);
  }
  v36[v38[9]] = *((unsigned char *)v37 + v38[9]);
  *((unsigned char *)a1 + v50[11]) = *((unsigned char *)v51 + v50[11]);
  return a1;
}

void *sub_10098C02C(void *a1, void *a2, int *a3)
{
  uint64_t v4 = a2;
  *a1 = *a2;
  swift_release();
  if (a1 != v4)
  {
    uint64_t v6 = a3[5];
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)v4 + v6;
    sub_10011E4B4((uint64_t)a1 + v6, (void (*)(void))type metadata accessor for ViewState.SecondaryViewState);
    uint64_t v9 = type metadata accessor for ViewState.SecondaryViewState(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v10 = type metadata accessor for WeatherCondition();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v7, v8, v10);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
    }
  }
  uint64_t v11 = a3[7];
  *((unsigned char *)a1 + a3[6]) = *((unsigned char *)v4 + a3[6]);
  *((unsigned char *)a1 + v11) = *((unsigned char *)v4 + v11);
  uint64_t v12 = a3[8];
  uint64_t v13 = (uint64_t)a1 + v12;
  uint64_t v14 = (uint64_t)v4 + v12;
  int v15 = (int *)type metadata accessor for SearchViewState(0);
  int v16 = _s7Weather24LocationCompositionStateOwet_0(v13, 1, (uint64_t)v15);
  int v17 = _s7Weather24LocationCompositionStateOwet_0(v14, 1, (uint64_t)v15);
  if (v16)
  {
    if (!v17)
    {
      uint64_t v18 = v4;
      *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
      uint64_t v19 = v15[5];
      uint64_t v20 = (void *)(v13 + v19);
      uint64_t v21 = (const void *)(v14 + v19);
      uint64_t v22 = type metadata accessor for SearchViewState.ViewState(0);
      if (swift_getEnumCaseMultiPayload())
      {
        memcpy(v20, v21, *(void *)(*(void *)(v22 - 8) + 64));
      }
      else
      {
        uint64_t v32 = type metadata accessor for CodableError();
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v32 - 8) + 32))(v20, v21, v32);
        swift_storeEnumTagMultiPayload();
      }
      *(unsigned char *)(v13 + v15[6]) = *(unsigned char *)(v14 + v15[6]);
      uint64_t v33 = v15[7];
      uint64_t v34 = (void *)(v13 + v33);
      uint64_t v35 = (const void *)(v14 + v33);
      uint64_t v36 = type metadata accessor for Location();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v35, 1, v36))
      {
        uint64_t v37 = sub_10017DF08(&qword_100E639E8);
        memcpy(v34, v35, *(void *)(*(void *)(v37 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v36 - 8) + 32))(v34, v35, v36);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v34, 0, 1, v36);
      }
      uint64_t v4 = v18;
      uint64_t v38 = v13;
      uint64_t v39 = (uint64_t)v15;
      goto LABEL_21;
    }
    goto LABEL_11;
  }
  if (v17)
  {
    sub_10011E4B4(v13, (void (*)(void))type metadata accessor for SearchViewState);
LABEL_11:
    size_t v23 = *(void *)(*(void *)(sub_10017DF08(&qword_100E66408) - 8) + 64);
    uint64_t v24 = (void *)v13;
    uint64_t v25 = (const void *)v14;
LABEL_12:
    memcpy(v24, v25, v23);
    goto LABEL_22;
  }
  uint64_t v26 = *(void *)(v14 + 8);
  *(void *)uint64_t v13 = *(void *)v14;
  *(void *)(v13 + 8) = v26;
  swift_bridgeObjectRelease();
  if (a1 != v4)
  {
    uint64_t v27 = v4;
    uint64_t v28 = v15[5];
    long long v29 = (void *)(v13 + v28);
    uint64_t v30 = (const void *)(v14 + v28);
    sub_10011E4B4(v13 + v28, (void (*)(void))type metadata accessor for SearchViewState.ViewState);
    uint64_t v31 = type metadata accessor for SearchViewState.ViewState(0);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v29, v30, *(void *)(*(void *)(v31 - 8) + 64));
    }
    else
    {
      uint64_t v70 = type metadata accessor for CodableError();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v70 - 8) + 32))(v29, v30, v70);
      swift_storeEnumTagMultiPayload();
    }
    uint64_t v4 = v27;
  }
  *(unsigned char *)(v13 + v15[6]) = *(unsigned char *)(v14 + v15[6]);
  uint64_t v71 = v15[7];
  uint64_t v72 = v13 + v71;
  uint64_t v73 = v14 + v71;
  uint64_t v74 = type metadata accessor for Location();
  int v75 = _s7Weather24LocationCompositionStateOwet_0(v72, 1, v74);
  int v76 = _s7Weather24LocationCompositionStateOwet_0(v73, 1, v74);
  if (v75)
  {
    if (!v76)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v74 - 8) + 32))(v72, v73, v74);
      uint64_t v38 = v72;
      uint64_t v39 = v74;
LABEL_21:
      _s7Weather24LocationCompositionStateOwst_0(v38, 0, 1, v39);
      goto LABEL_22;
    }
    goto LABEL_37;
  }
  uint64_t v77 = *(void *)(v74 - 8);
  if (v76)
  {
    (*(void (**)(uint64_t, uint64_t))(v77 + 8))(v72, v74);
LABEL_37:
    size_t v23 = *(void *)(*(void *)(sub_10017DF08(&qword_100E639E8) - 8) + 64);
    uint64_t v24 = (void *)v72;
    uint64_t v25 = (const void *)v73;
    goto LABEL_12;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v77 + 40))(v72, v73, v74);
LABEL_22:
  uint64_t v40 = a3[9];
  int v41 = (char *)a1 + v40;
  uint64_t v42 = (char *)v4 + v40;
  *(_OWORD *)int v41 = *(_OWORD *)((char *)v4 + v40);
  v41[16] = *((unsigned char *)v4 + v40 + 16);
  v41[17] = *((unsigned char *)v4 + v40 + 17);
  v41[18] = *((unsigned char *)v4 + v40 + 18);
  uint64_t v43 = *(int *)(type metadata accessor for DisplayMetrics() + 36);
  uint64_t v44 = &v41[v43];
  uint64_t v45 = &v42[v43];
  uint64_t v46 = type metadata accessor for DynamicTypeSize();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v46 - 8) + 40))(v44, v45, v46);
  int v80 = a3;
  unint64_t v81 = a1;
  uint64_t v47 = a3[10];
  uint64_t v48 = (_WORD *)((char *)a1 + v47);
  uint64_t v79 = v4;
  uint64_t v49 = (char *)v4 + v47;
  _WORD *v48 = *(_WORD *)((char *)v4 + v47);
  id v50 = (int *)type metadata accessor for WeatherMapPresentationState(0);
  uint64_t v51 = v50[6];
  uint64_t v52 = (char *)v48 + v51;
  uint64_t v53 = &v49[v51];
  uint64_t v54 = type metadata accessor for WeatherMapOverlayKind();
  uint64_t v55 = *(void *)(v54 - 8);
  uint64_t v56 = *(void (**)(char *, char *, uint64_t))(v55 + 40);
  v56(v52, v53, v54);
  uint64_t v57 = v50[7];
  uint64_t v58 = (void *)((char *)v48 + v57);
  uint64_t v59 = &v49[v57];
  uint64_t v61 = *(void *)v59;
  uint64_t v60 = *((void *)v59 + 1);
  *uint64_t v58 = v61;
  v58[1] = v60;
  swift_bridgeObjectRelease();
  uint64_t v78 = v50;
  uint64_t v62 = v50[8];
  uint64_t v63 = (char *)v48 + v62;
  int v64 = &v49[v62];
  uint64_t v65 = sub_10017DF08(&qword_100E66460);
  int v66 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v63, 3, v65);
  int v67 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v64, 3, v65);
  if (!v66)
  {
    if (!v67)
    {
      *uint64_t v63 = *v64;
      v56(&v63[*(int *)(v65 + 48)], &v64[*(int *)(v65 + 48)], v54);
      goto LABEL_28;
    }
    sub_100178110((uint64_t)v63, &qword_100E66460);
    goto LABEL_27;
  }
  if (v67)
  {
LABEL_27:
    uint64_t v68 = type metadata accessor for WeatherMapTrackingState(0);
    memcpy(v63, v64, *(void *)(*(void *)(v68 - 8) + 64));
    goto LABEL_28;
  }
  *uint64_t v63 = *v64;
  (*(void (**)(char *, char *, uint64_t))(v55 + 32))(&v63[*(int *)(v65 + 48)], &v64[*(int *)(v65 + 48)], v54);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v63, 0, 3, v65);
LABEL_28:
  *((unsigned char *)v48 + v78[9]) = v49[v78[9]];
  uint64_t result = v81;
  *((unsigned char *)v81 + v80[11]) = *((unsigned char *)v79 + v80[11]);
  return result;
}

uint64_t sub_10098C794(uint64_t *a1, uint64_t a2, int *a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    type metadata accessor for ViewState.SecondaryViewState(0);
    sub_100162F30();
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a3[5];
    }
    else
    {
      sub_10017DF08(&qword_100E66408);
      sub_100162F30();
      if (*(_DWORD *)(v13 + 84) == a2)
      {
        uint64_t v10 = v12;
        uint64_t v11 = a3[8];
      }
      else
      {
        type metadata accessor for DisplayMetrics();
        sub_100162F30();
        if (*(_DWORD *)(v15 + 84) == a2)
        {
          uint64_t v10 = v14;
          uint64_t v11 = a3[9];
        }
        else
        {
          uint64_t v10 = type metadata accessor for WeatherMapPresentationState(0);
          uint64_t v11 = a3[10];
        }
      }
    }
    return _s7Weather24LocationCompositionStateOwet_0((uint64_t)a1 + v11, a2, v10);
  }
}

void *sub_10098C88C(void *result, uint64_t a2, int a3, int *a4)
{
  int v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    type metadata accessor for ViewState.SecondaryViewState(0);
    sub_100162F30();
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a4[5];
    }
    else
    {
      sub_10017DF08(&qword_100E66408);
      sub_100162F30();
      if (*(_DWORD *)(v13 + 84) == a3)
      {
        uint64_t v10 = v12;
        uint64_t v11 = a4[8];
      }
      else
      {
        type metadata accessor for DisplayMetrics();
        sub_100162F30();
        if (*(_DWORD *)(v15 + 84) == a3)
        {
          uint64_t v10 = v14;
          uint64_t v11 = a4[9];
        }
        else
        {
          uint64_t v10 = type metadata accessor for WeatherMapPresentationState(0);
          uint64_t v11 = a4[10];
        }
      }
    }
    return (void *)_s7Weather24LocationCompositionStateOwst_0((uint64_t)v5 + v11, a2, a2, v10);
  }
  return result;
}

ValueMetadata *_s10CodingTypeOMa_0()
{
  return &_s10CodingTypeON_0;
}

ValueMetadata *_s10CodingKeysOMa_0()
{
  return &_s10CodingKeysON_0;
}

unsigned char *_s10CodingTypeOwst_1(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10098CA74);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *_s10CodingTypeOMa_1()
{
  return &_s10CodingTypeON_1;
}

ValueMetadata *_s10CodingKeysOMa_1()
{
  return &_s10CodingKeysON_1;
}

unint64_t sub_10098CAC0()
{
  unint64_t result = qword_100EA47F8;
  if (!qword_100EA47F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA47F8);
  }
  return result;
}

unint64_t sub_10098CB10()
{
  unint64_t result = qword_100EA4800;
  if (!qword_100EA4800)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA4800);
  }
  return result;
}

unint64_t sub_10098CB60()
{
  unint64_t result = qword_100EA4808;
  if (!qword_100EA4808)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA4808);
  }
  return result;
}

unint64_t sub_10098CBB0()
{
  unint64_t result = qword_100EA4810;
  if (!qword_100EA4810)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA4810);
  }
  return result;
}

void sub_10098CBFC(unsigned char *a1@<X8>)
{
  sub_10098A568();
  if (!v1) {
    *a1 = v3 & 1;
  }
}

void sub_10098CC2C()
{
}

void sub_10098CC48()
{
  sub_100162EA0();
  unint64_t v2 = v0;
  unsigned int v4 = v3;
  uint64_t v5 = sub_10017DF08(&qword_100E66408);
  uint64_t v6 = sub_100109308(v5);
  __chkstk_darwin(v6);
  sub_10011C760();
  sub_10017DF08(&qword_100E635E0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100C34240;
  *(void *)(inited + 32) = 0x567972616D697270;
  *(void *)(inited + 40) = 0xEB00000000776569;
  sub_10098D190(*v0, v33);
  uint64_t v8 = v34;
  sub_1001B1E64(v33, v34);
  *(void *)(inited + 72) = v8;
  sub_10023C310((uint64_t *)(inited + 48));
  sub_100162880();
  sub_10008B8B4();
  v9();
  strcpy((char *)(inited + 80), "secondaryView");
  *(_WORD *)(inited + 94) = -4864;
  uint64_t v10 = (int *)type metadata accessor for ViewState(0);
  sub_10098D294();
  uint64_t v11 = v32;
  sub_1001B1E64(v31, v32);
  *(void *)(inited + 120) = v11;
  sub_10023C310((uint64_t *)(inited + 96));
  sub_100162880();
  sub_10008B8B4();
  v12();
  *(void *)(inited + 128) = 0xD000000000000014;
  *(void *)(inited + 136) = 0x8000000100CB8300;
  sub_10098D578(*((unsigned char *)v2 + v10[6]), v29);
  uint64_t v13 = v30;
  sub_1001B1E64(v29, v30);
  *(void *)(inited + 168) = v13;
  sub_10023C310((uint64_t *)(inited + 144));
  sub_100162880();
  sub_10008B8B4();
  v14();
  strcpy((char *)(inited + 176), "preferredView");
  *(_WORD *)(inited + 190) = -4864;
  char v15 = sub_10001EE2C();
  sub_10098D6EC(v15, v27);
  uint64_t v16 = v28;
  sub_1001B1E64(v27, v28);
  *(void *)(inited + 216) = v16;
  sub_10023C310((uint64_t *)(inited + 192));
  sub_100162880();
  sub_10008B8B4();
  v17();
  *(void *)(inited + 224) = 0x6956686372616573;
  *(void *)(inited + 232) = 0xEA00000000007765;
  sub_1001B7204((uint64_t)v2 + v10[8], v1, &qword_100E66408);
  uint64_t v18 = type metadata accessor for SearchViewState(0);
  sub_10012B520(v1, 1, v18);
  if (v19)
  {
    sub_100178110(v1, &qword_100E66408);
    long long v25 = 0u;
    long long v26 = 0u;
LABEL_6:
    *(void *)(inited + 264) = &type metadata for String;
    *(void *)(inited + 240) = 7104878;
    *(void *)(inited + 248) = 0xE300000000000000;
    sub_100178110((uint64_t)&v25, &qword_100EAC3D0);
    goto LABEL_7;
  }
  sub_10038E284();
  sub_10011E4B4(v1, (void (*)(void))type metadata accessor for SearchViewState);
  uint64_t v20 = v24;
  sub_1001B1E64(v23, v24);
  *((void *)&v26 + 1) = v20;
  sub_10023C310((uint64_t *)&v25);
  sub_100162880();
  sub_10008B8B4();
  v21();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v23);
  if (!*((void *)&v26 + 1)) {
    goto LABEL_6;
  }
  sub_100098DB4(&v25, (_OWORD *)(inited + 240));
LABEL_7:
  strcpy((char *)(inited + 272), "displayMetrics");
  *(unsigned char *)(inited + 287) = -18;
  *(void *)(inited + 312) = type metadata accessor for DisplayMetrics();
  sub_10023C310((uint64_t *)(inited + 288));
  sub_10011E568();
  *(void *)(inited + 320) = 0xD000000000000014;
  *(void *)(inited + 328) = 0x8000000100C96290;
  *(void *)(inited + 360) = type metadata accessor for WeatherMapPresentationState(0);
  sub_10023C310((uint64_t *)(inited + 336));
  sub_10011E568();
  *(void *)(inited + 368) = 0xD000000000000010;
  *(void *)(inited + 376) = 0x8000000100C962B0;
  char v22 = *((unsigned char *)v2 + v10[11]);
  *(void *)(inited + 408) = &type metadata for Bool;
  *(unsigned char *)(inited + 384) = v22;
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v27);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v29);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v31);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v33);
  Dictionary.init(dictionaryLiteral:)();
  v4[3] = sub_10017DF08(&qword_100EA49F8);
  v4[4] = sub_100047B30(&qword_100EA4A00, &qword_100EA49F8);
  sub_10023C310(v4);
  ShortDescription.init(name:_:)();
  sub_100162694();
}

uint64_t sub_10098D190@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  sub_10017DF08(&qword_100E635E0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100C251B0;
  *(void *)(inited + 32) = 1953720684;
  *(void *)(inited + 40) = 0xE400000000000000;
  *(void *)(inited + 72) = &unk_100E0EF60;
  *(void *)(inited + 48) = a1;
  swift_retain();
  Dictionary.init(dictionaryLiteral:)();
  a2[3] = sub_10017DF08(&qword_100EA4A38);
  a2[4] = sub_100047B30(&qword_100EA4A40, &qword_100EA4A38);
  sub_10023C310(a2);
  return ShortDescription.init(name:_:)();
}

void sub_10098D294()
{
  sub_100162EA0();
  char v3 = v2;
  uint64_t v4 = type metadata accessor for VFXTestViewState();
  sub_100162E4C();
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ViewState.SecondaryViewState(0);
  sub_100162E4C();
  __chkstk_darwin(v8);
  sub_100109370();
  uint64_t v9 = sub_10017DF08(&qword_100EA4A28);
  sub_100179C0C();
  uint64_t v11 = v10;
  __chkstk_darwin(v12);
  sub_10011BFD8();
  sub_10011E568();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_10011E6CC();
    sub_10017DF08(&qword_100E635E0);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_100C251B0;
    *(void *)(inited + 32) = 0x74736554786676;
    *(void *)(inited + 40) = 0xE700000000000000;
    *(void *)(inited + 72) = v4;
    sub_10023C310((uint64_t *)(inited + 48));
    sub_10011E568();
    Dictionary.init(dictionaryLiteral:)();
    sub_10017B4A8();
    sub_10011E4B4((uint64_t)v7, (void (*)(void))type metadata accessor for VFXTestViewState);
  }
  else
  {
    uint64_t v14 = *v1;
    sub_10017DF08(&qword_100E635E0);
    uint64_t v15 = swift_initStackObject();
    *(_OWORD *)(v15 + 16) = xmmword_100C251B0;
    strcpy((char *)(v15 + 32), "locationViewer");
    *(unsigned char *)(v15 + 47) = -18;
    *(void *)(v15 + 72) = &unk_100E0F618;
    *(void *)(v15 + 48) = v14;
    swift_retain();
    Dictionary.init(dictionaryLiteral:)();
    sub_10017B4A8();
    swift_release();
  }
  v3[3] = v9;
  v3[4] = sub_100047B30(&qword_100EA4A30, &qword_100EA4A28);
  uint64_t v16 = sub_10023C310(v3);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v11 + 32))(v16, v0, v9);
  sub_100162694();
}

uint64_t sub_10098D578@<X0>(char a1@<W0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = sub_10017DF08(&qword_100EA4A18);
  sub_100179C0C();
  __chkstk_darwin(v5);
  sub_10012B938();
  sub_10017DF08(&qword_100E635E0);
  BOOL v6 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v7 = 0x6552686372616573;
  }
  else {
    uint64_t v7 = 1701736302;
  }
  if (v6) {
    unint64_t v8 = 0xE400000000000000;
  }
  else {
    unint64_t v8 = 0xED000073746C7573;
  }
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100C251B0;
  *(void *)(inited + 32) = 1701869940;
  *(void *)(inited + 40) = 0xE400000000000000;
  *(void *)(inited + 72) = &type metadata for String;
  *(void *)(inited + 48) = v7;
  *(void *)(inited + 56) = v8;
  Dictionary.init(dictionaryLiteral:)();
  ShortDescription.init(name:_:)();
  a2[3] = v4;
  a2[4] = sub_100047B30(&qword_100EA4A20, &qword_100EA4A18);
  sub_10023C310(a2);
  sub_10019AECC();
  return v10();
}

uint64_t sub_10098D6EC@<X0>(char a1@<W0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = sub_10017DF08(&qword_100EA4A08);
  sub_100179C0C();
  __chkstk_darwin(v5);
  sub_10012B938();
  sub_10017DF08(&qword_100E635E0);
  BOOL v6 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v7 = 0x7261646E6F636573;
  }
  else {
    uint64_t v7 = 0x7972616D697270;
  }
  if (v6) {
    unint64_t v8 = 0xE700000000000000;
  }
  else {
    unint64_t v8 = 0xE900000000000079;
  }
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100C251B0;
  *(void *)(inited + 32) = 1701869940;
  *(void *)(inited + 40) = 0xE400000000000000;
  *(void *)(inited + 72) = &type metadata for String;
  *(void *)(inited + 48) = v7;
  *(void *)(inited + 56) = v8;
  Dictionary.init(dictionaryLiteral:)();
  ShortDescription.init(name:_:)();
  a2[3] = v4;
  a2[4] = sub_100047B30(&qword_100EA4A10, &qword_100EA4A08);
  sub_10023C310(a2);
  sub_10019AECC();
  return v10();
}

uint64_t sub_10098D868()
{
  sub_10098DC08(&qword_100EA4A48, (void (*)(uint64_t))type metadata accessor for ViewState);

  return ShortDescribable.description.getter();
}

uint64_t sub_10098D8D4@<X0>(uint64_t *a1@<X8>)
{
  return sub_10098D190(*v1, a1);
}

uint64_t sub_10098D8DC()
{
  sub_10098E5A0();

  return ShortDescribable.description.getter();
}

uint64_t sub_10098D91C()
{
  sub_10098DC08(&qword_100EA4A58, (void (*)(uint64_t))type metadata accessor for ViewState.SecondaryViewState);

  return ShortDescribable.description.getter();
}

uint64_t sub_10098D988@<X0>(uint64_t *a1@<X8>)
{
  return sub_10098D578(*v1, a1);
}

uint64_t sub_10098D990()
{
  sub_10098E5EC();

  return ShortDescribable.description.getter();
}

uint64_t sub_10098D9CC@<X0>(uint64_t *a1@<X8>)
{
  return sub_10098D6EC(*v1, a1);
}

uint64_t sub_10098D9D4()
{
  sub_10098E638();

  return ShortDescribable.description.getter();
}

uint64_t sub_10098DA10@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1008BCC98();
  if (!v1) {
    *a1 = result;
  }
  return result;
}

uint64_t sub_10098DA3C()
{
  return sub_1008BC9E8();
}

void sub_10098DA58()
{
}

void sub_10098DA70()
{
}

unint64_t sub_10098DA8C()
{
  unint64_t result = qword_100EA4818;
  if (!qword_100EA4818)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA4818);
  }
  return result;
}

unint64_t sub_10098DADC()
{
  unint64_t result = qword_100EA4820;
  if (!qword_100EA4820)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA4820);
  }
  return result;
}

uint64_t sub_10098DB28()
{
  return sub_10098DC08(&qword_100EA4828, (void (*)(uint64_t))type metadata accessor for ViewState.SecondaryViewState);
}

unint64_t sub_10098DB74()
{
  unint64_t result = qword_100EA4830;
  if (!qword_100EA4830)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA4830);
  }
  return result;
}

uint64_t sub_10098DBC0()
{
  return sub_10098DC08((unint64_t *)&qword_100E85748, (void (*)(uint64_t))type metadata accessor for ViewState);
}

uint64_t sub_10098DC08(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10098DC54()
{
  unint64_t result = qword_100EA4838;
  if (!qword_100EA4838)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA4838);
  }
  return result;
}

unint64_t sub_10098DCA4()
{
  unint64_t result = qword_100EA4840;
  if (!qword_100EA4840)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA4840);
  }
  return result;
}

unint64_t sub_10098DCF4()
{
  unint64_t result = qword_100EA4848;
  if (!qword_100EA4848)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA4848);
  }
  return result;
}

unint64_t sub_10098DD44()
{
  unint64_t result = qword_100EA4850;
  if (!qword_100EA4850)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA4850);
  }
  return result;
}

unint64_t sub_10098DD90()
{
  unint64_t result = qword_100EA4858;
  if (!qword_100EA4858)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA4858);
  }
  return result;
}

unint64_t sub_10098DDDC()
{
  unint64_t result = qword_100EA4860;
  if (!qword_100EA4860)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA4860);
  }
  return result;
}

unint64_t sub_10098DE28()
{
  unint64_t result = qword_100EA4880;
  if (!qword_100EA4880)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA4880);
  }
  return result;
}

unint64_t sub_10098DE74()
{
  unint64_t result = qword_100EA4888;
  if (!qword_100EA4888)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA4888);
  }
  return result;
}

unint64_t sub_10098DEC0()
{
  unint64_t result = qword_100EA4898;
  if (!qword_100EA4898)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA4898);
  }
  return result;
}

unint64_t sub_10098DF0C()
{
  unint64_t result = qword_100EA48A0;
  if (!qword_100EA48A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA48A0);
  }
  return result;
}

unint64_t sub_10098DF58()
{
  unint64_t result = qword_100EA48C8;
  if (!qword_100EA48C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA48C8);
  }
  return result;
}

unint64_t sub_10098DFA4()
{
  unint64_t result = qword_100EA48D8;
  if (!qword_100EA48D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA48D8);
  }
  return result;
}

unint64_t sub_10098DFF0()
{
  unint64_t result = qword_100EA48E0;
  if (!qword_100EA48E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA48E0);
  }
  return result;
}

unint64_t sub_10098E03C()
{
  unint64_t result = qword_100EA48E8;
  if (!qword_100EA48E8)
  {
    sub_10018C6DC(&qword_100E66408);
    sub_10098DC08(&qword_100EA48F0, (void (*)(uint64_t))type metadata accessor for SearchViewState);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA48E8);
  }
  return result;
}

unint64_t sub_10098E0E0()
{
  unint64_t result = qword_100EA4910;
  if (!qword_100EA4910)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA4910);
  }
  return result;
}

unint64_t sub_10098E12C()
{
  unint64_t result = qword_100EA4918;
  if (!qword_100EA4918)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA4918);
  }
  return result;
}

unint64_t sub_10098E178()
{
  unint64_t result = qword_100EA4920;
  if (!qword_100EA4920)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA4920);
  }
  return result;
}

unint64_t sub_10098E1C4()
{
  unint64_t result = qword_100EA4930;
  if (!qword_100EA4930)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA4930);
  }
  return result;
}

unint64_t sub_10098E210()
{
  unint64_t result = qword_100EA4938;
  if (!qword_100EA4938)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA4938);
  }
  return result;
}

unint64_t sub_10098E25C()
{
  unint64_t result = qword_100EA4948;
  if (!qword_100EA4948)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA4948);
  }
  return result;
}

unint64_t sub_10098E2A8()
{
  unint64_t result = qword_100EA4950;
  if (!qword_100EA4950)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA4950);
  }
  return result;
}

unint64_t sub_10098E2F4()
{
  unint64_t result = qword_100EA4960;
  if (!qword_100EA4960)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA4960);
  }
  return result;
}

unint64_t sub_10098E340()
{
  unint64_t result = qword_100EA4970;
  if (!qword_100EA4970)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA4970);
  }
  return result;
}

unint64_t sub_10098E38C()
{
  unint64_t result = qword_100EA4980;
  if (!qword_100EA4980)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA4980);
  }
  return result;
}

unint64_t sub_10098E3D8()
{
  unint64_t result = qword_100EA4990;
  if (!qword_100EA4990)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA4990);
  }
  return result;
}

unint64_t sub_10098E424()
{
  unint64_t result = qword_100EA4998;
  if (!qword_100EA4998)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA4998);
  }
  return result;
}

unint64_t sub_10098E470()
{
  unint64_t result = qword_100EA49A8;
  if (!qword_100EA49A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA49A8);
  }
  return result;
}

unint64_t sub_10098E4BC()
{
  unint64_t result = qword_100EA49C8;
  if (!qword_100EA49C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA49C8);
  }
  return result;
}

unint64_t sub_10098E508()
{
  unint64_t result = qword_100EA49D0;
  if (!qword_100EA49D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA49D0);
  }
  return result;
}

unint64_t sub_10098E554()
{
  unint64_t result = qword_100EA49D8;
  if (!qword_100EA49D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA49D8);
  }
  return result;
}

unint64_t sub_10098E5A0()
{
  unint64_t result = qword_100EA4A50;
  if (!qword_100EA4A50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA4A50);
  }
  return result;
}

unint64_t sub_10098E5EC()
{
  unint64_t result = qword_100EA4A60;
  if (!qword_100EA4A60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA4A60);
  }
  return result;
}

unint64_t sub_10098E638()
{
  unint64_t result = qword_100EA4A68;
  if (!qword_100EA4A68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA4A68);
  }
  return result;
}

ValueMetadata *type metadata accessor for ViewState.PreferredView.CodingKeys()
{
  return &type metadata for ViewState.PreferredView.CodingKeys;
}

ValueMetadata *type metadata accessor for ViewState.PreferredView.PrimaryCodingKeys()
{
  return &type metadata for ViewState.PreferredView.PrimaryCodingKeys;
}

ValueMetadata *type metadata accessor for ViewState.PreferredView.SecondaryCodingKeys()
{
  return &type metadata for ViewState.PreferredView.SecondaryCodingKeys;
}

ValueMetadata *type metadata accessor for ViewState.SecondaryViewOverlayState.CodingType()
{
  return &type metadata for ViewState.SecondaryViewOverlayState.CodingType;
}

ValueMetadata *type metadata accessor for ViewState.SecondaryViewOverlayState.CodingKeys()
{
  return &type metadata for ViewState.SecondaryViewOverlayState.CodingKeys;
}

ValueMetadata *type metadata accessor for ViewState.SecondaryViewState.CodingType()
{
  return &type metadata for ViewState.SecondaryViewState.CodingType;
}

unsigned char *_s10CodingTypeOwst_0_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10098E7B4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ViewState.SecondaryViewState.CodingKeys()
{
  return &type metadata for ViewState.SecondaryViewState.CodingKeys;
}

unsigned char *_s10CodingKeysOwst_0_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x10098E888);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for ViewState.PrimaryViewState.CodingType()
{
  return &type metadata for ViewState.PrimaryViewState.CodingType;
}

ValueMetadata *type metadata accessor for ViewState.PrimaryViewState.CodingKeys()
{
  return &type metadata for ViewState.PrimaryViewState.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for ViewState.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *unint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10098E99CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ViewState.CodingKeys()
{
  return &type metadata for ViewState.CodingKeys;
}

unsigned char *_s7Weather9ViewStateV13PreferredViewO10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10098EAA0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

void type metadata accessor for ViewState.SecondaryViewOverlayState()
{
}

void *sub_10098EAD4(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  return a1;
}

uint64_t sub_10098EB04()
{
  return swift_release();
}

void *sub_10098EB0C(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  return a1;
}

void *sub_10098EB48(void *a1, void *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

uint64_t sub_10098EB7C(uint64_t *a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *((unsigned char *)a1 + 8))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      uint64_t v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_10098EBBC(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 8) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

unint64_t sub_10098EBFC()
{
  unint64_t result = qword_100EA4A70;
  if (!qword_100EA4A70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA4A70);
  }
  return result;
}

unint64_t sub_10098EC4C()
{
  unint64_t result = qword_100EA4A78;
  if (!qword_100EA4A78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA4A78);
  }
  return result;
}

unint64_t sub_10098EC9C()
{
  unint64_t result = qword_100EA4A80;
  if (!qword_100EA4A80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA4A80);
  }
  return result;
}

unint64_t sub_10098ECEC()
{
  unint64_t result = qword_100EA4A88;
  if (!qword_100EA4A88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA4A88);
  }
  return result;
}

unint64_t sub_10098ED3C()
{
  unint64_t result = qword_100EA4A90;
  if (!qword_100EA4A90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA4A90);
  }
  return result;
}

unint64_t sub_10098ED8C()
{
  unint64_t result = qword_100EA4A98;
  if (!qword_100EA4A98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA4A98);
  }
  return result;
}

unint64_t sub_10098EDDC()
{
  unint64_t result = qword_100EA4AA0;
  if (!qword_100EA4AA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA4AA0);
  }
  return result;
}

unint64_t sub_10098EE2C()
{
  unint64_t result = qword_100EA4AA8;
  if (!qword_100EA4AA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA4AA8);
  }
  return result;
}

unint64_t sub_10098EE7C()
{
  unint64_t result = qword_100EA4AB0;
  if (!qword_100EA4AB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA4AB0);
  }
  return result;
}

unint64_t sub_10098EECC()
{
  unint64_t result = qword_100EA4AB8;
  if (!qword_100EA4AB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA4AB8);
  }
  return result;
}

unint64_t sub_10098EF1C()
{
  unint64_t result = qword_100EA4AC0;
  if (!qword_100EA4AC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA4AC0);
  }
  return result;
}

unint64_t sub_10098EF6C()
{
  unint64_t result = qword_100EA4AC8;
  if (!qword_100EA4AC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA4AC8);
  }
  return result;
}

unint64_t sub_10098EFBC()
{
  unint64_t result = qword_100EA4AD0;
  if (!qword_100EA4AD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA4AD0);
  }
  return result;
}

unint64_t sub_10098F00C()
{
  unint64_t result = qword_100EA4AD8;
  if (!qword_100EA4AD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA4AD8);
  }
  return result;
}

unint64_t sub_10098F05C()
{
  unint64_t result = qword_100EA4AE0;
  if (!qword_100EA4AE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA4AE0);
  }
  return result;
}

unint64_t sub_10098F0AC()
{
  unint64_t result = qword_100EA4AE8;
  if (!qword_100EA4AE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA4AE8);
  }
  return result;
}

unint64_t sub_10098F0FC()
{
  unint64_t result = qword_100EA4AF0;
  if (!qword_100EA4AF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA4AF0);
  }
  return result;
}

unint64_t sub_10098F14C()
{
  unint64_t result = qword_100EA4AF8;
  if (!qword_100EA4AF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA4AF8);
  }
  return result;
}

unint64_t sub_10098F19C()
{
  unint64_t result = qword_100EA4B00;
  if (!qword_100EA4B00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA4B00);
  }
  return result;
}

unint64_t sub_10098F1EC()
{
  unint64_t result = qword_100EA4B08;
  if (!qword_100EA4B08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA4B08);
  }
  return result;
}

unint64_t sub_10098F23C()
{
  unint64_t result = qword_100EA4B10;
  if (!qword_100EA4B10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA4B10);
  }
  return result;
}

unint64_t sub_10098F28C()
{
  unint64_t result = qword_100EA4B18;
  if (!qword_100EA4B18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA4B18);
  }
  return result;
}

unint64_t sub_10098F2DC()
{
  unint64_t result = qword_100EA4B20;
  if (!qword_100EA4B20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA4B20);
  }
  return result;
}

unint64_t sub_10098F32C()
{
  unint64_t result = qword_100EA4B28;
  if (!qword_100EA4B28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA4B28);
  }
  return result;
}

unint64_t sub_10098F378()
{
  unint64_t result = qword_100EA4B30;
  if (!qword_100EA4B30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA4B30);
  }
  return result;
}

unint64_t sub_10098F3C4()
{
  unint64_t result = qword_100EA4B38;
  if (!qword_100EA4B38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA4B38);
  }
  return result;
}

unint64_t sub_10098F410()
{
  unint64_t result = qword_100EA4B40;
  if (!qword_100EA4B40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA4B40);
  }
  return result;
}

char *sub_10098F460(uint64_t *a1, uint64_t *a2, int *a3)
{
  unsigned int v4 = (char *)a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v48 = *a2;
    *(void *)unsigned int v4 = *a2;
    unsigned int v4 = (char *)(v48 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    uint64_t v9 = a2[5];
    uint64_t v10 = a3[7];
    uint64_t v83 = (char *)a1 + v10;
    uint64_t v11 = (char *)a2 + v10;
    a1[4] = a2[4];
    a1[5] = v9;
    uint64_t v12 = type metadata accessor for Date();
    uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v13(v83, v11, v12);
    v13(&v4[a3[8]], (char *)a2 + a3[8], v12);
    v13(&v4[a3[9]], (char *)a2 + a3[9], v12);
    uint64_t v14 = a3[10];
    uint64_t v15 = &v4[v14];
    uint64_t v16 = (char *)a2 + v14;
    uint64_t v17 = type metadata accessor for TimeZone();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
    uint64_t v18 = a3[11];
    char v19 = &v4[v18];
    uint64_t v20 = (char *)a2 + v18;
    uint64_t v21 = type metadata accessor for AttributedString();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16))(v19, v20, v21);
    uint64_t v22 = a3[13];
    *(void *)&v4[a3[12]] = *(uint64_t *)((char *)a2 + a3[12]);
    size_t v23 = &v4[v22];
    uint64_t v24 = (char *)a2 + v22;
    uint64_t v25 = type metadata accessor for SunriseSunsetDetailChartViewModel();
    long long v26 = *(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 16);
    swift_bridgeObjectRetain();
    v26(v23, v24, v25);
    uint64_t v27 = a3[14];
    uint64_t v28 = &v4[v27];
    long long v29 = (char *)a2 + v27;
    uint64_t v30 = type metadata accessor for Location();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 16))(v28, v29, v30);
    uint64_t v31 = a3[15];
    uint64_t v32 = &v4[v31];
    uint64_t v33 = (char *)a2 + v31;
    uint64_t v34 = type metadata accessor for SunEvents();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 16))(v32, v33, v34);
    uint64_t v35 = a3[16];
    uint64_t v36 = &v4[v35];
    uint64_t v37 = (char *)a2 + v35;
    uint64_t v38 = type metadata accessor for OverviewTableViewModel();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 16))(v36, v37, v38);
    uint64_t v39 = a3[17];
    uint64_t v40 = &v4[v39];
    int v41 = (char *)a2 + v39;
    uint64_t v42 = type metadata accessor for DaylightStringBuilder();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v42 - 8) + 16))(v40, v41, v42);
    uint64_t v43 = a3[18];
    uint64_t v44 = &v4[v43];
    uint64_t v45 = (uint64_t *)((char *)a2 + v43);
    uint64_t v46 = type metadata accessor for DetailComponentContainerViewModel();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v45, 1, v46))
    {
      uint64_t v47 = sub_10017DF08(&qword_100E66E28);
      memcpy(v44, v45, *(void *)(*(void *)(v47 - 8) + 64));
    }
    else
    {
      uint64_t v49 = v45[1];
      if (v49)
      {
        *(void *)uint64_t v44 = *v45;
        *((void *)v44 + 1) = v49;
        uint64_t v50 = v45[3];
        *((void *)v44 + 2) = v45[2];
        *((void *)v44 + 3) = v50;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v51 = *((_OWORD *)v45 + 1);
        *(_OWORD *)uint64_t v44 = *(_OWORD *)v45;
        *((_OWORD *)v44 + 1) = v51;
      }
      uint64_t v52 = *(int *)(v46 + 20);
      uint64_t v53 = &v44[v52];
      uint64_t v54 = (void *)((char *)v45 + v52);
      uint64_t v55 = type metadata accessor for NewsArticleComponentViewModel(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v56 = v54[1];
        *(void *)uint64_t v53 = *v54;
        *((void *)v53 + 1) = v56;
        uint64_t v84 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
        uint64_t v57 = v84[5];
        __dst = &v53[v57];
        uint64_t v58 = (char *)v54 + v57;
        uint64_t v59 = type metadata accessor for URL();
        swift_bridgeObjectRetain();
        uint64_t v80 = v46;
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v58, 1, v59))
        {
          uint64_t v60 = sub_10017DF08(&qword_100E749B0);
          memcpy(__dst, v58, *(void *)(*(void *)(v60 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v59 - 8) + 16))(__dst, v58, v59);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dst, 0, 1, v59);
        }
        uint64_t v61 = v84[6];
        uint64_t v62 = &v53[v61];
        uint64_t v63 = (void *)((char *)v54 + v61);
        uint64_t v64 = v63[1];
        *(void *)uint64_t v62 = *v63;
        *((void *)v62 + 1) = v64;
        uint64_t v65 = v84[7];
        __dsta = &v53[v65];
        int v66 = (char *)v54 + v65;
        int v67 = *(void (**)(char *, char *, uint64_t))(*(void *)(v59 - 8) + 16);
        swift_bridgeObjectRetain();
        v67(__dsta, v66, v59);
        uint64_t v68 = v84[8];
        uint64_t v69 = &v53[v68];
        uint64_t v70 = (char *)v54 + v68;
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v54 + v68, 1, v59))
        {
          uint64_t v71 = sub_10017DF08(&qword_100E749B0);
          memcpy(v69, v70, *(void *)(*(void *)(v71 - 8) + 64));
        }
        else
        {
          v67(v69, v70, v59);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v69, 0, 1, v59);
        }
        uint64_t v46 = v80;
        v53[v84[9]] = *((unsigned char *)v54 + v84[9]);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v53, v54, *(void *)(*(void *)(v55 - 8) + 64));
      }
      uint64_t v72 = *(int *)(v46 + 24);
      uint64_t v73 = &v44[v72];
      uint64_t v74 = (char *)v45 + v72;
      uint64_t v75 = type metadata accessor for DetailComponentAction();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v74, 1, v75))
      {
        uint64_t v76 = sub_10017DF08(&qword_100E73810);
        memcpy(v73, v74, *(void *)(*(void *)(v76 - 8) + 64));
      }
      else
      {
        uint64_t v77 = type metadata accessor for URL();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v77 - 8) + 16))(v73, v74, v77);
        uint64_t v78 = sub_10017DF08(&qword_100E66478);
        v73[*(int *)(v78 + 48)] = v74[*(int *)(v78 + 48)];
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v73, 0, 1, v75);
      }
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v44, 0, 1, v46);
    }
  }
  return v4;
}

uint64_t sub_10098FB64(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[7];
  uint64_t v5 = type metadata accessor for Date();
  unsigned int v6 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  v6(v4, v5);
  v6(a1 + a2[8], v5);
  v6(a1 + a2[9], v5);
  uint64_t v7 = a1 + a2[10];
  uint64_t v8 = type metadata accessor for TimeZone();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = a1 + a2[11];
  uint64_t v10 = type metadata accessor for AttributedString();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  swift_bridgeObjectRelease();
  uint64_t v11 = a1 + a2[13];
  uint64_t v12 = type metadata accessor for SunriseSunsetDetailChartViewModel();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  uint64_t v13 = a1 + a2[14];
  uint64_t v14 = type metadata accessor for Location();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
  uint64_t v15 = a1 + a2[15];
  uint64_t v16 = type metadata accessor for SunEvents();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
  uint64_t v17 = a1 + a2[16];
  uint64_t v18 = type metadata accessor for OverviewTableViewModel();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(v17, v18);
  uint64_t v19 = a1 + a2[17];
  uint64_t v20 = type metadata accessor for DaylightStringBuilder();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v20 - 8) + 8))(v19, v20);
  uint64_t v21 = a1 + a2[18];
  uint64_t v22 = type metadata accessor for DetailComponentContainerViewModel();
  uint64_t result = _s7Weather24LocationCompositionStateOwet_0(v21, 1, v22);
  if (!result)
  {
    if (*(void *)(v21 + 8))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    uint64_t v24 = v21 + *(int *)(v22 + 20);
    type metadata accessor for NewsArticleComponentViewModel(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      swift_bridgeObjectRelease();
      uint64_t v25 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
      uint64_t v26 = v24 + v25[5];
      uint64_t v27 = type metadata accessor for URL();
      if (!_s7Weather24LocationCompositionStateOwet_0(v26, 1, v27)) {
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v27 - 8) + 8))(v26, v27);
      }
      swift_bridgeObjectRelease();
      uint64_t v28 = *(void (**)(uint64_t, uint64_t))(*(void *)(v27 - 8) + 8);
      v28(v24 + v25[7], v27);
      uint64_t v29 = v24 + v25[8];
      if (!_s7Weather24LocationCompositionStateOwet_0(v29, 1, v27)) {
        v28(v29, v27);
      }
    }
    uint64_t v30 = v21 + *(int *)(v22 + 24);
    uint64_t v31 = type metadata accessor for DetailComponentAction();
    uint64_t result = _s7Weather24LocationCompositionStateOwet_0(v30, 1, v31);
    if (!result)
    {
      uint64_t v32 = type metadata accessor for URL();
      uint64_t v33 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v32 - 8) + 8);
      return v33(v30, v32);
    }
  }
  return result;
}

char *sub_10098FFB8(char *a1, char *a2, int *a3)
{
  uint64_t v6 = *((void *)a2 + 1);
  *(void *)a1 = *(void *)a2;
  *((void *)a1 + 1) = v6;
  uint64_t v7 = *((void *)a2 + 3);
  *((void *)a1 + 2) = *((void *)a2 + 2);
  *((void *)a1 + 3) = v7;
  uint64_t v8 = *((void *)a2 + 5);
  uint64_t v9 = a3[7];
  unint64_t v81 = &a1[v9];
  uint64_t v10 = &a2[v9];
  *((void *)a1 + 4) = *((void *)a2 + 4);
  *((void *)a1 + 5) = v8;
  uint64_t v11 = type metadata accessor for Date();
  uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v12(v81, v10, v11);
  v12(&a1[a3[8]], &a2[a3[8]], v11);
  v12(&a1[a3[9]], &a2[a3[9]], v11);
  uint64_t v13 = a3[10];
  uint64_t v14 = &a1[v13];
  uint64_t v15 = &a2[v13];
  uint64_t v16 = type metadata accessor for TimeZone();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
  uint64_t v17 = a3[11];
  uint64_t v18 = &a1[v17];
  uint64_t v19 = &a2[v17];
  uint64_t v20 = type metadata accessor for AttributedString();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
  uint64_t v21 = a3[13];
  *(void *)&a1[a3[12]] = *(void *)&a2[a3[12]];
  uint64_t v22 = &a1[v21];
  size_t v23 = &a2[v21];
  uint64_t v24 = type metadata accessor for SunriseSunsetDetailChartViewModel();
  uint64_t v25 = *(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16);
  swift_bridgeObjectRetain();
  v25(v22, v23, v24);
  uint64_t v26 = a3[14];
  uint64_t v27 = &a1[v26];
  uint64_t v28 = &a2[v26];
  uint64_t v29 = type metadata accessor for Location();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 16))(v27, v28, v29);
  uint64_t v30 = a3[15];
  uint64_t v31 = &a1[v30];
  uint64_t v32 = &a2[v30];
  uint64_t v33 = type metadata accessor for SunEvents();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 16))(v31, v32, v33);
  uint64_t v34 = a3[16];
  uint64_t v35 = &a1[v34];
  uint64_t v36 = &a2[v34];
  uint64_t v37 = type metadata accessor for OverviewTableViewModel();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 16))(v35, v36, v37);
  uint64_t v38 = a3[17];
  uint64_t v39 = &a1[v38];
  uint64_t v40 = &a2[v38];
  uint64_t v41 = type metadata accessor for DaylightStringBuilder();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v41 - 8) + 16))(v39, v40, v41);
  uint64_t v42 = a3[18];
  uint64_t v43 = &a1[v42];
  uint64_t v44 = &a2[v42];
  uint64_t v45 = type metadata accessor for DetailComponentContainerViewModel();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v44, 1, v45))
  {
    uint64_t v46 = sub_10017DF08(&qword_100E66E28);
    memcpy(v43, v44, *(void *)(*(void *)(v46 - 8) + 64));
  }
  else
  {
    uint64_t v47 = *((void *)v44 + 1);
    if (v47)
    {
      *(void *)uint64_t v43 = *(void *)v44;
      *((void *)v43 + 1) = v47;
      uint64_t v48 = *((void *)v44 + 3);
      *((void *)v43 + 2) = *((void *)v44 + 2);
      *((void *)v43 + 3) = v48;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v49 = *((_OWORD *)v44 + 1);
      *(_OWORD *)uint64_t v43 = *(_OWORD *)v44;
      *((_OWORD *)v43 + 1) = v49;
    }
    uint64_t v50 = *(int *)(v45 + 20);
    long long v51 = &v43[v50];
    uint64_t v52 = &v44[v50];
    uint64_t v53 = type metadata accessor for NewsArticleComponentViewModel(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v54 = *((void *)v52 + 1);
      *(void *)long long v51 = *(void *)v52;
      *((void *)v51 + 1) = v54;
      char v82 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
      uint64_t v55 = v82[5];
      __dst = &v51[v55];
      uint64_t v56 = &v52[v55];
      uint64_t v57 = type metadata accessor for URL();
      swift_bridgeObjectRetain();
      uint64_t v78 = v45;
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v56, 1, v57))
      {
        uint64_t v58 = sub_10017DF08(&qword_100E749B0);
        memcpy(__dst, v56, *(void *)(*(void *)(v58 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v57 - 8) + 16))(__dst, v56, v57);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dst, 0, 1, v57);
      }
      uint64_t v59 = v82[6];
      uint64_t v60 = &v51[v59];
      uint64_t v61 = &v52[v59];
      uint64_t v62 = *((void *)v61 + 1);
      *(void *)uint64_t v60 = *(void *)v61;
      *((void *)v60 + 1) = v62;
      uint64_t v63 = v82[7];
      __dsta = &v51[v63];
      uint64_t v64 = &v52[v63];
      uint64_t v65 = *(void (**)(char *, char *, uint64_t))(*(void *)(v57 - 8) + 16);
      swift_bridgeObjectRetain();
      v65(__dsta, v64, v57);
      uint64_t v66 = v82[8];
      int v67 = &v51[v66];
      uint64_t v68 = &v52[v66];
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v52[v66], 1, v57))
      {
        uint64_t v69 = sub_10017DF08(&qword_100E749B0);
        memcpy(v67, v68, *(void *)(*(void *)(v69 - 8) + 64));
      }
      else
      {
        v65(v67, v68, v57);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v67, 0, 1, v57);
      }
      uint64_t v45 = v78;
      v51[v82[9]] = v52[v82[9]];
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v51, v52, *(void *)(*(void *)(v53 - 8) + 64));
    }
    uint64_t v70 = *(int *)(v45 + 24);
    uint64_t v71 = &v43[v70];
    uint64_t v72 = &v44[v70];
    uint64_t v73 = type metadata accessor for DetailComponentAction();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v72, 1, v73))
    {
      uint64_t v74 = sub_10017DF08(&qword_100E73810);
      memcpy(v71, v72, *(void *)(*(void *)(v74 - 8) + 64));
    }
    else
    {
      uint64_t v75 = type metadata accessor for URL();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v75 - 8) + 16))(v71, v72, v75);
      uint64_t v76 = sub_10017DF08(&qword_100E66478);
      v71[*(int *)(v76 + 48)] = v72[*(int *)(v76 + 48)];
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v71, 0, 1, v73);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v43, 0, 1, v45);
  }
  return a1;
}

char *sub_10099066C(char *a1, char *a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *((void *)a1 + 1) = *((void *)a2 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)a1 + 2) = *((void *)a2 + 2);
  *((void *)a1 + 3) = *((void *)a2 + 3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)a1 + 4) = *((void *)a2 + 4);
  *((void *)a1 + 5) = *((void *)a2 + 5);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[7];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = type metadata accessor for Date();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24);
  v10(v7, v8, v9);
  v10(&a1[a3[8]], &a2[a3[8]], v9);
  v10(&a1[a3[9]], &a2[a3[9]], v9);
  uint64_t v11 = a3[10];
  uint64_t v12 = &a1[v11];
  uint64_t v13 = &a2[v11];
  uint64_t v14 = type metadata accessor for TimeZone();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  uint64_t v15 = a3[11];
  uint64_t v16 = &a1[v15];
  uint64_t v17 = &a2[v15];
  uint64_t v18 = type metadata accessor for AttributedString();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 24))(v16, v17, v18);
  *(void *)&a1[a3[12]] = *(void *)&a2[a3[12]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v19 = a3[13];
  uint64_t v20 = &a1[v19];
  uint64_t v21 = &a2[v19];
  uint64_t v22 = type metadata accessor for SunriseSunsetDetailChartViewModel();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 24))(v20, v21, v22);
  uint64_t v23 = a3[14];
  uint64_t v24 = &a1[v23];
  uint64_t v25 = &a2[v23];
  uint64_t v26 = type metadata accessor for Location();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 24))(v24, v25, v26);
  uint64_t v27 = a3[15];
  uint64_t v28 = &a1[v27];
  uint64_t v29 = &a2[v27];
  uint64_t v30 = type metadata accessor for SunEvents();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 24))(v28, v29, v30);
  uint64_t v31 = a3[16];
  uint64_t v32 = &a1[v31];
  uint64_t v33 = &a2[v31];
  uint64_t v34 = type metadata accessor for OverviewTableViewModel();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 24))(v32, v33, v34);
  uint64_t v35 = a3[17];
  uint64_t v36 = &a1[v35];
  uint64_t v37 = &a2[v35];
  uint64_t v38 = type metadata accessor for DaylightStringBuilder();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 24))(v36, v37, v38);
  uint64_t v39 = a3[18];
  uint64_t v40 = &a1[v39];
  uint64_t v41 = &a2[v39];
  uint64_t v42 = type metadata accessor for DetailComponentContainerViewModel();
  LODWORD(v9) = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v40, 1, v42);
  int v43 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v41, 1, v42);
  if (v9)
  {
    if (!v43)
    {
      if (*((void *)v41 + 1))
      {
        *(void *)uint64_t v40 = *(void *)v41;
        *((void *)v40 + 1) = *((void *)v41 + 1);
        *((void *)v40 + 2) = *((void *)v41 + 2);
        *((void *)v40 + 3) = *((void *)v41 + 3);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v48 = *((_OWORD *)v41 + 1);
        *(_OWORD *)uint64_t v40 = *(_OWORD *)v41;
        *((_OWORD *)v40 + 1) = v48;
      }
      uint64_t v49 = *(int *)(v42 + 20);
      uint64_t v50 = &v40[v49];
      long long v51 = &v41[v49];
      uint64_t v52 = type metadata accessor for NewsArticleComponentViewModel(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        *(void *)uint64_t v50 = *(void *)v51;
        *((void *)v50 + 1) = *((void *)v51 + 1);
        uint64_t v122 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
        uint64_t v53 = v122[5];
        __dst = &v50[v53];
        uint64_t v54 = &v51[v53];
        uint64_t v55 = type metadata accessor for URL();
        swift_bridgeObjectRetain();
        uint64_t v115 = v42;
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v54, 1, v55))
        {
          uint64_t v56 = sub_10017DF08(&qword_100E749B0);
          memcpy(__dst, v54, *(void *)(*(void *)(v56 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v55 - 8) + 16))(__dst, v54, v55);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dst, 0, 1, v55);
        }
        uint64_t v57 = v122[6];
        uint64_t v58 = &v50[v57];
        uint64_t v59 = &v51[v57];
        *(void *)uint64_t v58 = *(void *)v59;
        *((void *)v58 + 1) = *((void *)v59 + 1);
        uint64_t v60 = v122[7];
        char __dstd = &v50[v60];
        uint64_t v61 = &v51[v60];
        uint64_t v62 = v50;
        uint64_t v63 = v55;
        uint64_t v64 = *(void (**)(char *, char *, uint64_t))(*(void *)(v55 - 8) + 16);
        swift_bridgeObjectRetain();
        uint64_t v65 = __dstd;
        __dsta = v64;
        v64(v65, v61, v63);
        uint64_t v66 = v63;
        int v67 = v62;
        uint64_t v68 = v122[8];
        uint64_t v69 = (char *)v62 + v68;
        uint64_t v70 = &v51[v68];
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v51[v68], 1, v66))
        {
          uint64_t v71 = sub_10017DF08(&qword_100E749B0);
          memcpy(v69, v70, *(void *)(*(void *)(v71 - 8) + 64));
        }
        else
        {
          __dsta(v69, v70, v66);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v69, 0, 1, v66);
        }
        uint64_t v42 = v115;
        *((unsigned char *)v67 + v122[9]) = v51[v122[9]];
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v50, v51, *(void *)(*(void *)(v52 - 8) + 64));
      }
      uint64_t v72 = *(int *)(v42 + 24);
      uint64_t v73 = &v40[v72];
      uint64_t v74 = &v41[v72];
      uint64_t v75 = type metadata accessor for DetailComponentAction();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v74, 1, v75))
      {
        uint64_t v76 = sub_10017DF08(&qword_100E73810);
        memcpy(v73, v74, *(void *)(*(void *)(v76 - 8) + 64));
      }
      else
      {
        uint64_t v77 = type metadata accessor for URL();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v77 - 8) + 16))(v73, v74, v77);
        uint64_t v78 = sub_10017DF08(&qword_100E66478);
        v73[*(int *)(v78 + 48)] = v74[*(int *)(v78 + 48)];
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v73, 0, 1, v75);
      }
      uint64_t v79 = (uint64_t)v40;
      uint64_t v80 = v42;
      goto LABEL_28;
    }
    goto LABEL_7;
  }
  if (v43)
  {
    sub_1007B8B9C((uint64_t)v40, (void (*)(void))type metadata accessor for DetailComponentContainerViewModel);
LABEL_7:
    size_t v44 = *(void *)(*(void *)(sub_10017DF08(&qword_100E66E28) - 8) + 64);
    uint64_t v45 = v40;
    uint64_t v46 = v41;
    goto LABEL_8;
  }
  uint64_t v47 = *((void *)v41 + 1);
  if (*((void *)v40 + 1))
  {
    if (v47)
    {
      *(void *)uint64_t v40 = *(void *)v41;
      *((void *)v40 + 1) = *((void *)v41 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *((void *)v40 + 2) = *((void *)v41 + 2);
      *((void *)v40 + 3) = *((void *)v41 + 3);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1004B70A8((uint64_t)v40);
      long long v82 = *((_OWORD *)v41 + 1);
      *(_OWORD *)uint64_t v40 = *(_OWORD *)v41;
      *((_OWORD *)v40 + 1) = v82;
    }
  }
  else if (v47)
  {
    *(void *)uint64_t v40 = *(void *)v41;
    *((void *)v40 + 1) = *((void *)v41 + 1);
    *((void *)v40 + 2) = *((void *)v41 + 2);
    *((void *)v40 + 3) = *((void *)v41 + 3);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v83 = *((_OWORD *)v41 + 1);
    *(_OWORD *)uint64_t v40 = *(_OWORD *)v41;
    *((_OWORD *)v40 + 1) = v83;
  }
  if (a1 != a2)
  {
    uint64_t v84 = *(int *)(v42 + 20);
    uint64_t v85 = &v40[v84];
    id v86 = &v41[v84];
    sub_1007B8B9C((uint64_t)&v40[v84], (void (*)(void))type metadata accessor for NewsArticleComponentViewModel);
    uint64_t v87 = type metadata accessor for NewsArticleComponentViewModel(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(void *)uint64_t v85 = *(void *)v86;
      *((void *)v85 + 1) = *((void *)v86 + 1);
      uint64_t v123 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
      uint64_t v88 = v123[5];
      __dstb = &v85[v88];
      uint64_t v89 = &v86[v88];
      uint64_t v90 = type metadata accessor for URL();
      swift_bridgeObjectRetain();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v89, 1, v90))
      {
        uint64_t v91 = sub_10017DF08(&qword_100E749B0);
        memcpy(__dstb, v89, *(void *)(*(void *)(v91 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v90 - 8) + 16))(__dstb, v89, v90);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dstb, 0, 1, v90);
      }
      uint64_t v92 = v123[6];
      uint64_t v93 = &v85[v92];
      uint64_t v94 = &v86[v92];
      *(void *)uint64_t v93 = *(void *)v94;
      *((void *)v93 + 1) = *((void *)v94 + 1);
      uint64_t v95 = v123[7];
      __dste = &v85[v95];
      uint64_t v114 = &v86[v95];
      uint64_t v96 = v90;
      uint64_t v97 = *(void (**)(char *, char *, uint64_t))(*(void *)(v90 - 8) + 16);
      swift_bridgeObjectRetain();
      uint64_t v98 = __dste;
      __dstc = v97;
      v97(v98, v114, v96);
      uint64_t v99 = v96;
      uint64_t v100 = v123[8];
      uint64_t v101 = &v85[v100];
      uint64_t v102 = &v86[v100];
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v86[v100], 1, v99))
      {
        uint64_t v103 = sub_10017DF08(&qword_100E749B0);
        memcpy(v101, v102, *(void *)(*(void *)(v103 - 8) + 64));
      }
      else
      {
        __dstc(v101, v102, v99);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v101, 0, 1, v99);
      }
      v85[v123[9]] = v86[v123[9]];
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v85, v86, *(void *)(*(void *)(v87 - 8) + 64));
    }
  }
  uint64_t v104 = *(int *)(v42 + 24);
  uint64_t v105 = (uint64_t)&v40[v104];
  uint64_t v106 = (uint64_t)&v41[v104];
  uint64_t v107 = type metadata accessor for DetailComponentAction();
  int v108 = _s7Weather24LocationCompositionStateOwet_0(v105, 1, v107);
  int v109 = _s7Weather24LocationCompositionStateOwet_0(v106, 1, v107);
  if (v108)
  {
    if (!v109)
    {
      uint64_t v110 = type metadata accessor for URL();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v110 - 8) + 16))(v105, v106, v110);
      uint64_t v111 = sub_10017DF08(&qword_100E66478);
      *(unsigned char *)(v105 + *(int *)(v111 + 48)) = *(unsigned char *)(v106 + *(int *)(v111 + 48));
      uint64_t v79 = v105;
      uint64_t v80 = v107;
LABEL_28:
      _s7Weather24LocationCompositionStateOwst_0(v79, 0, 1, v80);
      return a1;
    }
  }
  else
  {
    if (!v109)
    {
      uint64_t v112 = type metadata accessor for URL();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v112 - 8) + 24))(v105, v106, v112);
      uint64_t v113 = sub_10017DF08(&qword_100E66478);
      *(unsigned char *)(v105 + *(int *)(v113 + 48)) = *(unsigned char *)(v106 + *(int *)(v113 + 48));
      return a1;
    }
    sub_1007B8B9C(v105, (void (*)(void))type metadata accessor for DetailComponentAction);
  }
  size_t v44 = *(void *)(*(void *)(sub_10017DF08(&qword_100E73810) - 8) + 64);
  uint64_t v45 = (void *)v105;
  uint64_t v46 = (const void *)v106;
LABEL_8:
  memcpy(v45, v46, v44);
  return a1;
}

char *sub_100991204(char *a1, char *a2, int *a3)
{
  long long v6 = *((_OWORD *)a2 + 1);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *((_OWORD *)a1 + 1) = v6;
  *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
  uint64_t v7 = a3[7];
  uint64_t v8 = &a1[v7];
  uint64_t v9 = &a2[v7];
  uint64_t v10 = type metadata accessor for Date();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32);
  v11(v8, v9, v10);
  v11(&a1[a3[8]], &a2[a3[8]], v10);
  v11(&a1[a3[9]], &a2[a3[9]], v10);
  uint64_t v12 = a3[10];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  uint64_t v15 = type metadata accessor for TimeZone();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
  uint64_t v16 = a3[11];
  uint64_t v17 = &a1[v16];
  uint64_t v18 = &a2[v16];
  uint64_t v19 = type metadata accessor for AttributedString();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 32))(v17, v18, v19);
  uint64_t v20 = a3[13];
  *(void *)&a1[a3[12]] = *(void *)&a2[a3[12]];
  uint64_t v21 = &a1[v20];
  uint64_t v22 = &a2[v20];
  uint64_t v23 = type metadata accessor for SunriseSunsetDetailChartViewModel();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 32))(v21, v22, v23);
  uint64_t v24 = a3[14];
  uint64_t v25 = &a1[v24];
  uint64_t v26 = &a2[v24];
  uint64_t v27 = type metadata accessor for Location();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 32))(v25, v26, v27);
  uint64_t v28 = a3[15];
  uint64_t v29 = &a1[v28];
  uint64_t v30 = &a2[v28];
  uint64_t v31 = type metadata accessor for SunEvents();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 32))(v29, v30, v31);
  uint64_t v32 = a3[16];
  uint64_t v33 = &a1[v32];
  uint64_t v34 = &a2[v32];
  uint64_t v35 = type metadata accessor for OverviewTableViewModel();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 32))(v33, v34, v35);
  uint64_t v36 = a3[17];
  uint64_t v37 = &a1[v36];
  uint64_t v38 = &a2[v36];
  uint64_t v39 = type metadata accessor for DaylightStringBuilder();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 32))(v37, v38, v39);
  uint64_t v40 = a3[18];
  uint64_t v41 = &a1[v40];
  uint64_t v42 = &a2[v40];
  uint64_t v43 = type metadata accessor for DetailComponentContainerViewModel();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v42, 1, v43))
  {
    uint64_t v44 = sub_10017DF08(&qword_100E66E28);
    memcpy(v41, v42, *(void *)(*(void *)(v44 - 8) + 64));
  }
  else
  {
    long long v45 = *((_OWORD *)v42 + 1);
    *(_OWORD *)uint64_t v41 = *(_OWORD *)v42;
    *((_OWORD *)v41 + 1) = v45;
    uint64_t v46 = *(int *)(v43 + 20);
    uint64_t v47 = &v41[v46];
    long long v48 = &v42[v46];
    uint64_t v49 = type metadata accessor for NewsArticleComponentViewModel(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(_OWORD *)uint64_t v47 = *(_OWORD *)v48;
      uint64_t v71 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
      uint64_t v50 = v71[5];
      long long v51 = &v47[v50];
      uint64_t v52 = &v48[v50];
      uint64_t v53 = type metadata accessor for URL();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v52, 1, v53))
      {
        uint64_t v54 = sub_10017DF08(&qword_100E749B0);
        memcpy(v51, v52, *(void *)(*(void *)(v54 - 8) + 64));
        uint64_t v55 = *(void *)(v53 - 8);
      }
      else
      {
        uint64_t v56 = v51;
        __dsta = v51;
        uint64_t v55 = *(void *)(v53 - 8);
        (*(void (**)(char *, char *, uint64_t))(v55 + 32))(v56, v52, v53);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dsta, 0, 1, v53);
      }
      *(_OWORD *)&v47[v71[6]] = *(_OWORD *)&v48[v71[6]];
      uint64_t v57 = *(void (**)(char *, char *, uint64_t))(v55 + 32);
      v57(&v47[v71[7]], &v48[v71[7]], v53);
      uint64_t v58 = v71[8];
      __dst = &v47[v58];
      uint64_t v59 = &v48[v58];
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v48[v58], 1, v53))
      {
        uint64_t v60 = sub_10017DF08(&qword_100E749B0);
        memcpy(__dst, v59, *(void *)(*(void *)(v60 - 8) + 64));
      }
      else
      {
        v57(__dst, v59, v53);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dst, 0, 1, v53);
      }
      v47[v71[9]] = v48[v71[9]];
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v47, v48, *(void *)(*(void *)(v49 - 8) + 64));
    }
    uint64_t v61 = *(int *)(v43 + 24);
    uint64_t v62 = &v41[v61];
    uint64_t v63 = &v42[v61];
    uint64_t v64 = type metadata accessor for DetailComponentAction();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v63, 1, v64))
    {
      uint64_t v65 = sub_10017DF08(&qword_100E73810);
      memcpy(v62, v63, *(void *)(*(void *)(v65 - 8) + 64));
    }
    else
    {
      uint64_t v66 = type metadata accessor for URL();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v66 - 8) + 32))(v62, v63, v66);
      uint64_t v67 = sub_10017DF08(&qword_100E66478);
      v62[*(int *)(v67 + 48)] = v63[*(int *)(v67 + 48)];
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v62, 0, 1, v64);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v41, 0, 1, v43);
  }
  return a1;
}

char *sub_100991828(char *a1, char *a2, int *a3)
{
  uint64_t v6 = *((void *)a2 + 1);
  *(void *)a1 = *(void *)a2;
  *((void *)a1 + 1) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *((void *)a2 + 3);
  *((void *)a1 + 2) = *((void *)a2 + 2);
  *((void *)a1 + 3) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *((void *)a2 + 5);
  *((void *)a1 + 4) = *((void *)a2 + 4);
  *((void *)a1 + 5) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = a3[7];
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  uint64_t v12 = type metadata accessor for Date();
  uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 40);
  v13(v10, v11, v12);
  v13(&a1[a3[8]], &a2[a3[8]], v12);
  v13(&a1[a3[9]], &a2[a3[9]], v12);
  uint64_t v14 = a3[10];
  uint64_t v15 = &a1[v14];
  uint64_t v16 = &a2[v14];
  uint64_t v17 = type metadata accessor for TimeZone();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 40))(v15, v16, v17);
  uint64_t v18 = a3[11];
  uint64_t v19 = &a1[v18];
  uint64_t v20 = &a2[v18];
  uint64_t v21 = type metadata accessor for AttributedString();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 40))(v19, v20, v21);
  *(void *)&a1[a3[12]] = *(void *)&a2[a3[12]];
  swift_bridgeObjectRelease();
  uint64_t v22 = a3[13];
  uint64_t v23 = &a1[v22];
  uint64_t v24 = &a2[v22];
  uint64_t v25 = type metadata accessor for SunriseSunsetDetailChartViewModel();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 40))(v23, v24, v25);
  uint64_t v26 = a3[14];
  uint64_t v27 = &a1[v26];
  uint64_t v28 = &a2[v26];
  uint64_t v29 = type metadata accessor for Location();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 40))(v27, v28, v29);
  uint64_t v30 = a3[15];
  uint64_t v31 = &a1[v30];
  uint64_t v32 = &a2[v30];
  uint64_t v33 = type metadata accessor for SunEvents();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 40))(v31, v32, v33);
  uint64_t v34 = a3[16];
  uint64_t v35 = &a1[v34];
  uint64_t v36 = &a2[v34];
  uint64_t v37 = type metadata accessor for OverviewTableViewModel();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 40))(v35, v36, v37);
  uint64_t v38 = a3[17];
  uint64_t v39 = &a1[v38];
  uint64_t v40 = &a2[v38];
  uint64_t v41 = type metadata accessor for DaylightStringBuilder();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v41 - 8) + 40))(v39, v40, v41);
  uint64_t v42 = a3[18];
  uint64_t v43 = (uint64_t)&a1[v42];
  uint64_t v44 = (uint64_t)&a2[v42];
  uint64_t v45 = type metadata accessor for DetailComponentContainerViewModel();
  LODWORD(v12) = _s7Weather24LocationCompositionStateOwet_0(v43, 1, v45);
  int v46 = _s7Weather24LocationCompositionStateOwet_0(v44, 1, v45);
  if (v12)
  {
    if (!v46)
    {
      long long v47 = *(_OWORD *)(v44 + 16);
      *(_OWORD *)uint64_t v43 = *(_OWORD *)v44;
      *(_OWORD *)(v43 + 16) = v47;
      uint64_t v48 = *(int *)(v45 + 20);
      uint64_t v49 = (char *)(v43 + v48);
      uint64_t v50 = (char *)(v44 + v48);
      uint64_t v51 = type metadata accessor for NewsArticleComponentViewModel(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        *(_OWORD *)uint64_t v49 = *(_OWORD *)v50;
        int v108 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
        uint64_t v52 = v108[5];
        uint64_t v53 = &v49[v52];
        uint64_t v54 = &v50[v52];
        uint64_t v55 = type metadata accessor for URL();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v54, 1, v55))
        {
          uint64_t v56 = sub_10017DF08(&qword_100E749B0);
          memcpy(v53, v54, *(void *)(*(void *)(v56 - 8) + 64));
          uint64_t v57 = *(void *)(v55 - 8);
        }
        else
        {
          uint64_t v63 = v53;
          __dstb = v53;
          uint64_t v57 = *(void *)(v55 - 8);
          (*(void (**)(char *, char *, uint64_t))(v57 + 32))(v63, v54, v55);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dstb, 0, 1, v55);
        }
        *(_OWORD *)&v49[v108[6]] = *(_OWORD *)&v50[v108[6]];
        uint64_t v64 = *(void (**)(char *, char *, uint64_t))(v57 + 32);
        v64(&v49[v108[7]], &v50[v108[7]], v55);
        uint64_t v65 = v108[8];
        __dst = &v49[v65];
        uint64_t v66 = &v50[v65];
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v50[v65], 1, v55))
        {
          uint64_t v67 = sub_10017DF08(&qword_100E749B0);
          memcpy(__dst, v66, *(void *)(*(void *)(v67 - 8) + 64));
        }
        else
        {
          v64(__dst, v66, v55);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dst, 0, 1, v55);
        }
        v49[v108[9]] = v50[v108[9]];
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v49, v50, *(void *)(*(void *)(v51 - 8) + 64));
      }
      uint64_t v68 = *(int *)(v45 + 24);
      uint64_t v69 = (void *)(v43 + v68);
      uint64_t v70 = (const void *)(v44 + v68);
      uint64_t v71 = type metadata accessor for DetailComponentAction();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v70, 1, v71))
      {
        uint64_t v72 = sub_10017DF08(&qword_100E73810);
        memcpy(v69, v70, *(void *)(*(void *)(v72 - 8) + 64));
      }
      else
      {
        uint64_t v73 = type metadata accessor for URL();
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v73 - 8) + 32))(v69, v70, v73);
        uint64_t v74 = sub_10017DF08(&qword_100E66478);
        *((unsigned char *)v69 + *(int *)(v74 + 48)) = *((unsigned char *)v70 + *(int *)(v74 + 48));
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v69, 0, 1, v71);
      }
      uint64_t v75 = v43;
      uint64_t v76 = v45;
      goto LABEL_23;
    }
    goto LABEL_8;
  }
  if (v46)
  {
    sub_1007B8B9C(v43, (void (*)(void))type metadata accessor for DetailComponentContainerViewModel);
LABEL_8:
    size_t v58 = *(void *)(*(void *)(sub_10017DF08(&qword_100E66E28) - 8) + 64);
    uint64_t v59 = (void *)v43;
    uint64_t v60 = (const void *)v44;
    goto LABEL_9;
  }
  if (!*(void *)(v43 + 8)) {
    goto LABEL_26;
  }
  uint64_t v61 = *(void *)(v44 + 8);
  if (!v61)
  {
    sub_1004B70A8(v43);
LABEL_26:
    long long v78 = *(_OWORD *)(v44 + 16);
    *(_OWORD *)uint64_t v43 = *(_OWORD *)v44;
    *(_OWORD *)(v43 + 16) = v78;
    goto LABEL_27;
  }
  *(void *)uint64_t v43 = *(void *)v44;
  *(void *)(v43 + 8) = v61;
  swift_bridgeObjectRelease();
  uint64_t v62 = *(void *)(v44 + 24);
  *(void *)(v43 + 16) = *(void *)(v44 + 16);
  *(void *)(v43 + 24) = v62;
  swift_bridgeObjectRelease();
LABEL_27:
  if (a1 != a2)
  {
    uint64_t v79 = *(int *)(v45 + 20);
    uint64_t v80 = (char *)(v43 + v79);
    unint64_t v81 = (char *)(v44 + v79);
    sub_1007B8B9C(v43 + v79, (void (*)(void))type metadata accessor for NewsArticleComponentViewModel);
    uint64_t v82 = type metadata accessor for NewsArticleComponentViewModel(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(_OWORD *)uint64_t v80 = *(_OWORD *)v81;
      int v109 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
      uint64_t v83 = v109[5];
      uint64_t v84 = &v80[v83];
      uint64_t v85 = &v81[v83];
      uint64_t v86 = type metadata accessor for URL();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v85, 1, v86))
      {
        uint64_t v87 = sub_10017DF08(&qword_100E749B0);
        memcpy(v84, v85, *(void *)(*(void *)(v87 - 8) + 64));
        uint64_t v88 = *(void *)(v86 - 8);
      }
      else
      {
        uint64_t v89 = v84;
        __dstc = v84;
        uint64_t v88 = *(void *)(v86 - 8);
        (*(void (**)(char *, char *, uint64_t))(v88 + 32))(v89, v85, v86);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dstc, 0, 1, v86);
      }
      *(_OWORD *)&v80[v109[6]] = *(_OWORD *)&v81[v109[6]];
      uint64_t v90 = *(void (**)(char *, char *, uint64_t))(v88 + 32);
      v90(&v80[v109[7]], &v81[v109[7]], v86);
      uint64_t v91 = v109[8];
      __dsta = &v80[v91];
      uint64_t v92 = &v81[v91];
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v81[v91], 1, v86))
      {
        uint64_t v93 = sub_10017DF08(&qword_100E749B0);
        memcpy(__dsta, v92, *(void *)(*(void *)(v93 - 8) + 64));
      }
      else
      {
        v90(__dsta, v92, v86);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dsta, 0, 1, v86);
      }
      v80[v109[9]] = v81[v109[9]];
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v80, v81, *(void *)(*(void *)(v82 - 8) + 64));
    }
  }
  uint64_t v94 = *(int *)(v45 + 24);
  uint64_t v95 = v43 + v94;
  uint64_t v96 = v44 + v94;
  uint64_t v97 = type metadata accessor for DetailComponentAction();
  int v98 = _s7Weather24LocationCompositionStateOwet_0(v95, 1, v97);
  int v99 = _s7Weather24LocationCompositionStateOwet_0(v96, 1, v97);
  if (v98)
  {
    if (!v99)
    {
      uint64_t v100 = type metadata accessor for URL();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v100 - 8) + 32))(v95, v96, v100);
      uint64_t v101 = sub_10017DF08(&qword_100E66478);
      *(unsigned char *)(v95 + *(int *)(v101 + 48)) = *(unsigned char *)(v96 + *(int *)(v101 + 48));
      uint64_t v75 = v95;
      uint64_t v76 = v97;
LABEL_23:
      _s7Weather24LocationCompositionStateOwst_0(v75, 0, 1, v76);
      return a1;
    }
  }
  else
  {
    if (!v99)
    {
      uint64_t v102 = type metadata accessor for URL();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v102 - 8) + 40))(v95, v96, v102);
      uint64_t v103 = sub_10017DF08(&qword_100E66478);
      *(unsigned char *)(v95 + *(int *)(v103 + 48)) = *(unsigned char *)(v96 + *(int *)(v103 + 48));
      return a1;
    }
    sub_1007B8B9C(v95, (void (*)(void))type metadata accessor for DetailComponentAction);
  }
  size_t v58 = *(void *)(*(void *)(sub_10017DF08(&qword_100E73810) - 8) + 64);
  uint64_t v59 = (void *)v95;
  uint64_t v60 = (const void *)v96;
LABEL_9:
  memcpy(v59, v60, v58);
  return a1;
}

uint64_t sub_100992264(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100992278);
}

uint64_t sub_100992278(uint64_t a1, uint64_t a2, int *a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    type metadata accessor for Date();
    sub_10017C808();
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a3[7];
    }
    else
    {
      type metadata accessor for TimeZone();
      sub_10017C808();
      if (*(_DWORD *)(v13 + 84) == a2)
      {
        uint64_t v10 = v12;
        uint64_t v11 = a3[10];
      }
      else
      {
        type metadata accessor for AttributedString();
        sub_10017C808();
        if (*(_DWORD *)(v15 + 84) == a2)
        {
          uint64_t v10 = v14;
          uint64_t v11 = a3[11];
        }
        else
        {
          type metadata accessor for SunriseSunsetDetailChartViewModel();
          sub_10017C808();
          if (*(_DWORD *)(v17 + 84) == a2)
          {
            uint64_t v10 = v16;
            uint64_t v11 = a3[13];
          }
          else
          {
            type metadata accessor for Location();
            sub_10017C808();
            if (*(_DWORD *)(v19 + 84) == a2)
            {
              uint64_t v10 = v18;
              uint64_t v11 = a3[14];
            }
            else
            {
              type metadata accessor for SunEvents();
              sub_10017C808();
              if (*(_DWORD *)(v21 + 84) == a2)
              {
                uint64_t v10 = v20;
                uint64_t v11 = a3[15];
              }
              else
              {
                type metadata accessor for OverviewTableViewModel();
                sub_10017C808();
                if (*(_DWORD *)(v23 + 84) == a2)
                {
                  uint64_t v10 = v22;
                  uint64_t v11 = a3[16];
                }
                else
                {
                  type metadata accessor for DaylightStringBuilder();
                  sub_10017C808();
                  if (*(_DWORD *)(v25 + 84) == a2)
                  {
                    uint64_t v10 = v24;
                    uint64_t v11 = a3[17];
                  }
                  else
                  {
                    uint64_t v10 = sub_10017DF08(&qword_100E66E28);
                    uint64_t v11 = a3[18];
                  }
                }
              }
            }
          }
        }
      }
    }
    return _s7Weather24LocationCompositionStateOwet_0(a1 + v11, a2, v10);
  }
}

uint64_t sub_100992444(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100992458);
}

uint64_t sub_100992458(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    type metadata accessor for Date();
    sub_10017C808();
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a4[7];
    }
    else
    {
      type metadata accessor for TimeZone();
      sub_10017C808();
      if (*(_DWORD *)(v13 + 84) == a3)
      {
        uint64_t v10 = v12;
        uint64_t v11 = a4[10];
      }
      else
      {
        type metadata accessor for AttributedString();
        sub_10017C808();
        if (*(_DWORD *)(v15 + 84) == a3)
        {
          uint64_t v10 = v14;
          uint64_t v11 = a4[11];
        }
        else
        {
          type metadata accessor for SunriseSunsetDetailChartViewModel();
          sub_10017C808();
          if (*(_DWORD *)(v17 + 84) == a3)
          {
            uint64_t v10 = v16;
            uint64_t v11 = a4[13];
          }
          else
          {
            type metadata accessor for Location();
            sub_10017C808();
            if (*(_DWORD *)(v19 + 84) == a3)
            {
              uint64_t v10 = v18;
              uint64_t v11 = a4[14];
            }
            else
            {
              type metadata accessor for SunEvents();
              sub_10017C808();
              if (*(_DWORD *)(v21 + 84) == a3)
              {
                uint64_t v10 = v20;
                uint64_t v11 = a4[15];
              }
              else
              {
                type metadata accessor for OverviewTableViewModel();
                sub_10017C808();
                if (*(_DWORD *)(v23 + 84) == a3)
                {
                  uint64_t v10 = v22;
                  uint64_t v11 = a4[16];
                }
                else
                {
                  type metadata accessor for DaylightStringBuilder();
                  sub_10017C808();
                  if (*(_DWORD *)(v25 + 84) == a3)
                  {
                    uint64_t v10 = v24;
                    uint64_t v11 = a4[17];
                  }
                  else
                  {
                    uint64_t v10 = sub_10017DF08(&qword_100E66E28);
                    uint64_t v11 = a4[18];
                  }
                }
              }
            }
          }
        }
      }
    }
    return _s7Weather24LocationCompositionStateOwst_0(v5 + v11, a2, a2, v10);
  }
  return result;
}

uint64_t _s11NormalModelVMa()
{
  uint64_t result = qword_100EA4BA0;
  if (!qword_100EA4BA0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100992668()
{
  type metadata accessor for Date();
  if (v0 <= 0x3F)
  {
    type metadata accessor for TimeZone();
    if (v1 <= 0x3F)
    {
      type metadata accessor for AttributedString();
      if (v2 <= 0x3F)
      {
        type metadata accessor for SunriseSunsetDetailChartViewModel();
        if (v3 <= 0x3F)
        {
          type metadata accessor for Location();
          if (v4 <= 0x3F)
          {
            type metadata accessor for SunEvents();
            if (v5 <= 0x3F)
            {
              type metadata accessor for OverviewTableViewModel();
              if (v6 <= 0x3F)
              {
                type metadata accessor for DaylightStringBuilder();
                if (v7 <= 0x3F)
                {
                  sub_1007BA274();
                  if (v8 <= 0x3F) {
                    swift_initStructMetadata();
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

uint64_t sub_1009928F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char *a7@<X8>, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  uint64_t v21 = type metadata accessor for DaylightStringBuilder();
  uint64_t v50 = *(void *)(v21 - 8);
  uint64_t v51 = v21;
  __chkstk_darwin(v21);
  sub_1001626E0();
  uint64_t v52 = v23 - v22;
  *(void *)a7 = a1;
  *((void *)a7 + 1) = a2;
  *((void *)a7 + 2) = a3;
  *((void *)a7 + 3) = a4;
  uint64_t v24 = (int *)_s11NormalModelVMa();
  type metadata accessor for Date();
  sub_10017C808();
  uint64_t v47 = v25;
  uint64_t v26 = *(void (**)(void))(v25 + 16);
  sub_10017AC3C();
  v26();
  sub_10017AC3C();
  v26();
  sub_10017AC3C();
  v26();
  type metadata accessor for TimeZone();
  sub_10017C808();
  sub_100162808();
  v27();
  type metadata accessor for AttributedString();
  sub_10017C808();
  sub_100162808();
  v28();
  *(void *)&a7[v24[12]] = a11;
  type metadata accessor for Location();
  sub_10017C808();
  sub_100162808();
  v29();
  uint64_t v30 = type metadata accessor for SunriseSunsetDetailChartViewModel();
  sub_10017C808();
  uint64_t v32 = v31;
  sub_100162808();
  v33();
  uint64_t v34 = type metadata accessor for SunEvents();
  sub_10017C808();
  uint64_t v36 = v35;
  sub_100162808();
  v37();
  uint64_t v38 = type metadata accessor for OverviewTableViewModel();
  sub_10017C808();
  uint64_t v40 = v39;
  sub_100162808();
  v41();
  *((void *)a7 + 4) = a5;
  *((void *)a7 + 5) = a6;
  DaylightStringBuilder.init()();
  (*(void (**)(uint64_t, uint64_t))(v40 + 8))(a15, v38);
  (*(void (**)(uint64_t, uint64_t))(v32 + 8))(a14, v30);
  (*(void (**)(uint64_t, uint64_t))(v36 + 8))(a13, v34);
  sub_100162F0C();
  v42();
  sub_100162F0C();
  v43();
  sub_100162F0C();
  v44();
  uint64_t v45 = *(void (**)(void))(v47 + 8);
  sub_100183F94();
  v45();
  sub_100183F94();
  v45();
  sub_100183F94();
  v45();
  (*(void (**)(char *, uint64_t, uint64_t))(v50 + 32))(&a7[v24[17]], v52, v51);
  return sub_1007BAB00(a16, (uint64_t)&a7[v24[18]]);
}

BOOL sub_100992D04(void *a1, void *a2)
{
  type metadata accessor for DetailComponentContainerViewModel();
  sub_100162E4C();
  __chkstk_darwin(v4);
  sub_1001626E0();
  unint64_t v7 = (uint64_t *)(v6 - v5);
  uint64_t v8 = sub_10017DF08(&qword_100E6A5E8);
  sub_100162E4C();
  __chkstk_darwin(v9);
  sub_1001626E0();
  uint64_t v12 = v11 - v10;
  uint64_t v13 = sub_10017DF08(&qword_100E66E28);
  uint64_t v14 = __chkstk_darwin(v13 - 8);
  uint64_t v16 = (uint64_t *)((char *)&v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v17 = __chkstk_darwin(v14);
  uint64_t v19 = (char *)&v33 - v18;
  __chkstk_darwin(v17);
  uint64_t v21 = (char *)&v33 - v20;
  BOOL v22 = *a1 == *a2 && a1[1] == a2[1];
  if (v22 || (char v23 = _stringCompareWithSmolCheck(_:_:expecting:)(), result = 0, (v23 & 1) != 0))
  {
    BOOL v25 = a1[2] == a2[2] && a1[3] == a2[3];
    if (v25 || (char v26 = _stringCompareWithSmolCheck(_:_:expecting:)(), result = 0, (v26 & 1) != 0))
    {
      BOOL v27 = a1[4] == a2[4] && a1[5] == a2[5];
      if (v27 || (char v28 = _stringCompareWithSmolCheck(_:_:expecting:)(), result = 0, (v28 & 1) != 0))
      {
        uint64_t v29 = (int *)_s11NormalModelVMa();
        if ((static Date.== infix(_:_:)() & 1) != 0
          && (static Date.== infix(_:_:)() & 1) != 0
          && (static Date.== infix(_:_:)() & 1) != 0)
        {
          sub_10017D498(v29[10]);
          if (static TimeZone.== infix(_:_:)())
          {
            sub_10017D498(v29[11]);
            if ((static AttributedString.== infix(_:_:)() & 1) != 0
              && (sub_1001508B0(*(void **)((char *)a1 + v29[12]), *(void **)((char *)a2 + v29[12])) & 1) != 0)
            {
              sub_10017D498(v29[13]);
              if (static SunriseSunsetDetailChartViewModel.== infix(_:_:)())
              {
                sub_10017D498(v29[14]);
                if (static Location.== infix(_:_:)())
                {
                  sub_10017D498(v29[15]);
                  if (static SunEvents.== infix(_:_:)())
                  {
                    sub_10017D498(v29[16]);
                    if (static OverviewTableViewModel.== infix(_:_:)())
                    {
                      sub_10017D498(v29[17]);
                      if (static DaylightStringBuilder.== infix(_:_:)())
                      {
                        sub_1007BAA34((uint64_t)a1 + v29[18], (uint64_t)v21);
                        sub_1007BAA34((uint64_t)a2 + v29[18], (uint64_t)v19);
                        uint64_t v30 = v12 + *(int *)(v8 + 48);
                        sub_1007BAA34((uint64_t)v21, v12);
                        sub_1007BAA34((uint64_t)v19, v30);
                        sub_100162F8C(v12);
                        if (v22)
                        {
                          sub_100178110((uint64_t)v19, &qword_100E66E28);
                          sub_100178110((uint64_t)v21, &qword_100E66E28);
                          sub_100162F8C(v30);
                          if (v22)
                          {
                            sub_100178110(v12, &qword_100E66E28);
                            return 1;
                          }
                        }
                        else
                        {
                          sub_1007BAA34(v12, (uint64_t)v16);
                          sub_100162F8C(v30);
                          if (!v31)
                          {
                            sub_1007BAA9C(v30, (uint64_t)v7);
                            char v32 = sub_1004B7C2C(v16, v7);
                            sub_1007B8B9C((uint64_t)v7, (void (*)(void))type metadata accessor for DetailComponentContainerViewModel);
                            sub_100178110((uint64_t)v19, &qword_100E66E28);
                            sub_100178110((uint64_t)v21, &qword_100E66E28);
                            sub_1007B8B9C((uint64_t)v16, (void (*)(void))type metadata accessor for DetailComponentContainerViewModel);
                            sub_100178110(v12, &qword_100E66E28);
                            return (v32 & 1) != 0;
                          }
                          sub_100178110((uint64_t)v19, &qword_100E66E28);
                          sub_100178110((uint64_t)v21, &qword_100E66E28);
                          sub_1007B8B9C((uint64_t)v16, (void (*)(void))type metadata accessor for DetailComponentContainerViewModel);
                        }
                        sub_100178110(v12, &qword_100E6A5E8);
                      }
                    }
                  }
                }
              }
            }
          }
        }
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_100993110(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v20 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DispatchQoS();
  uint64_t v18 = *(void *)(v6 - 8);
  uint64_t v19 = v6;
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void *)(a1 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  __chkstk_darwin(v11);
  sub_1001AB3E0();
  uint64_t v12 = (void *)static OS_dispatch_queue.main.getter();
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v1, a1);
  unint64_t v13 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = *(_OWORD *)(a1 + 16);
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v14 + v13, (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  aBlock[4] = sub_1009949B4;
  aBlock[5] = v14;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10010A4D4;
  aBlock[3] = &unk_100E31138;
  uint64_t v15 = _Block_copy(aBlock);
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_100216874();
  sub_10017DF08(&qword_100E75530);
  sub_100115EDC();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v15);

  (*(void (**)(char *, uint64_t))(v20 + 8))(v5, v3);
  return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v8, v19);
}

uint64_t AnimatableValueObserverModifier.animatableData.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2 + *(int *)(a1 + 40));
}

uint64_t AnimatableValueObserverModifier.animatableData.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 16);
  sub_10017C83C();
  uint64_t v9 = v5;
  (*(void (**)(void))(v6 + 24))();
  sub_100993110(a2);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(v9 + 8);

  return v7(a1, v4);
}

uint64_t *(*AnimatableValueObserverModifier.animatableData.modify(void *a1, uint64_t a2))(uint64_t *result, char a2)
{
  *a1 = a2;
  a1[1] = v2;
  return sub_10099354C;
}

uint64_t *sub_10099354C(uint64_t *result, char a2)
{
  if ((a2 & 1) == 0) {
    return (uint64_t *)sub_100993110(*result);
  }
  return result;
}

uint64_t AnimatableValueObserverModifier.init(for:onChange:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  sub_10017C83C();
  uint64_t v18 = v10;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(a5, a1, v12);
  uint64_t v13 = type metadata accessor for AnimatableValueObserverModifier();
  uint64_t v14 = (void *)(a5 + *(int *)(v13 + 36));
  *uint64_t v14 = a2;
  v14[1] = a3;
  uint64_t v15 = a5 + *(int *)(v13 + 40);
  uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v18 + 32);

  return v16(v15, a1, a4);
}

uint64_t type metadata accessor for AnimatableValueObserverModifier()
{
  return sub_100109098();
}

uint64_t AnimatableValueObserverModifier.body(content:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  swift_getWitnessTable();
  uint64_t v4 = type metadata accessor for _ViewModifier_Content();
  sub_10017C83C();
  uint64_t v6 = v5;
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v11 - v8;
  swift_getWitnessTable();
  sub_100121584(a1, v4, (uint64_t)v9);
  sub_100121584((uint64_t)v9, v4, a2);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v4);
}

uint64_t sub_100993770(uint64_t a1)
{
  uint64_t result = type metadata accessor for AnimatableValueObserverModifier();
  uint64_t v3 = *(uint64_t (**)(uint64_t))(a1 + *(int *)(result + 36));
  if (v3) {
    return v3(a1 + *(int *)(result + 40));
  }
  return result;
}

void (*sub_1009937C4(void *a1, uint64_t a2))(void *a1)
{
  uint64_t v4 = malloc(0x28uLL);
  *a1 = v4;
  v4[4] = AnimatableValueObserverModifier.animatableData.modify(v4, a2);
  return sub_10024A528;
}

uint64_t sub_100993828(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return static AnimatableModifier._makeView(modifier:inputs:body:)(a1, a2, a3, a4, a5, WitnessTable);
}

uint64_t sub_1009938BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return static AnimatableModifier._makeViewList(modifier:inputs:body:)(a1, a2, a3, a4, a5, WitnessTable);
}

uint64_t sub_100993950@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return AnimatableValueObserverModifier.body(content:)(a1, a2);
}

uint64_t View.animatableValueObserver<A>(for:onChange:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  v24[2] = a6;
  v24[0] = a7;
  v24[1] = a4;
  sub_10017C83C();
  uint64_t v12 = v11;
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for AnimatableValueObserverModifier();
  sub_10017C83C();
  uint64_t v18 = v17;
  __n128 v20 = __chkstk_darwin(v19);
  BOOL v22 = (char *)v24 - v21;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v12 + 16))(v15, a1, a5, v20);
  AnimatableValueObserverModifier.init(for:onChange:)((uint64_t)v15, a2, a3, a5, (uint64_t)v22);
  sub_10005BEBC(a2);
  View.modifier<A>(_:)();
  return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v22, v16);
}

uint64_t sub_100993AD8()
{
  return swift_getWitnessTable();
}

uint64_t sub_100993AF4()
{
  return swift_getWitnessTable();
}

uint64_t sub_100993B10(uint64_t a1, uint64_t a2)
{
  return *(void *)(a2 + 24);
}

uint64_t sub_100993B18()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100993B5C()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_100993BF8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  uint64_t v8 = *(_DWORD *)(v6 + 80);
  if (v8 > 7
    || (*(_DWORD *)(v6 + 80) & 0x100000) != 0
    || ((v8 + 16 + ((v7 + 7) & 0xFFFFFFFFFFFFFFF8)) & ~v8) + v7 > 0x18)
  {
    uint64_t v11 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v11 + ((v8 & 0xF8 ^ 0x1F8) & (v8 + 16)));
    swift_retain();
  }
  else
  {
    uint64_t v12 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16);
    v12(a1, a2, v5);
    unint64_t v13 = ((unint64_t)v4 + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v14 = ((unint64_t)a2 + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
    if (*(void *)v14 < 0xFFFFFFFFuLL)
    {
      *(_OWORD *)unint64_t v13 = *(_OWORD *)v14;
    }
    else
    {
      uint64_t v15 = *(void *)(v14 + 8);
      *(void *)unint64_t v13 = *(void *)v14;
      *(void *)(v13 + 8) = v15;
      swift_retain();
    }
    v12((uint64_t *)((v13 + v8 + 16) & ~v8), (uint64_t *)((v14 + v8 + 16) & ~v8), v5);
  }
  return v4;
}

uint64_t sub_100993D64(unint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v8 = *(uint64_t (**)(unint64_t, uint64_t))(v4 + 8);
  v8(a1, v3);
  uint64_t v5 = (void *)((a1 + *(void *)(v4 + 64) + 7) & 0xFFFFFFFFFFFFFFF8);
  if (*v5 >= 0xFFFFFFFFuLL) {
    swift_release();
  }
  unint64_t v6 = ((unint64_t)v5 + *(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);

  return v8(v6, v3);
}

unint64_t sub_100993E64(unint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 16);
  v7(a1, a2, v5);
  uint64_t v8 = *(void *)(v6 + 64) + 7;
  unint64_t v9 = (v8 + a1) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v10 = (v8 + a2) & 0xFFFFFFFFFFFFFFF8;
  if (*(void *)v10 < 0xFFFFFFFFuLL)
  {
    *(_OWORD *)unint64_t v9 = *(_OWORD *)v10;
  }
  else
  {
    uint64_t v11 = *(void *)(v10 + 8);
    *(void *)unint64_t v9 = *(void *)v10;
    *(void *)(v9 + 8) = v11;
    swift_retain();
  }
  v7((v9 + *(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), (v10 + *(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), v5);
  return a1;
}

uint64_t sub_100993F7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 24);
  v7(a1, a2, v5);
  uint64_t v8 = *(void *)(v6 + 64) + 7;
  unint64_t v9 = (void *)((v8 + a1) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v10 = (unint64_t *)((v8 + a2) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v11 = *v10;
  if (*v9 < 0xFFFFFFFFuLL)
  {
    if (v11 >= 0xFFFFFFFF)
    {
      unint64_t v13 = v10[1];
      *unint64_t v9 = v11;
      v9[1] = v13;
      swift_retain();
      goto LABEL_8;
    }
LABEL_7:
    *(_OWORD *)unint64_t v9 = *(_OWORD *)v10;
    goto LABEL_8;
  }
  if (v11 < 0xFFFFFFFF)
  {
    swift_release();
    goto LABEL_7;
  }
  unint64_t v12 = v10[1];
  *unint64_t v9 = v11;
  v9[1] = v12;
  swift_retain();
  swift_release();
LABEL_8:
  v7(((unint64_t)v9 + *(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), ((unint64_t)v10 + *(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), v5);
  return a1;
}

unint64_t sub_1009940D4(unint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 32);
  v7(a1, a2, v5);
  uint64_t v8 = *(void *)(v6 + 64) + 7;
  unint64_t v9 = (v8 + a1) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v10 = (v8 + a2) & 0xFFFFFFFFFFFFFFF8;
  if (*(void *)v10 < 0xFFFFFFFFuLL)
  {
    *(_OWORD *)unint64_t v9 = *(_OWORD *)v10;
  }
  else
  {
    uint64_t v11 = *(void *)(v10 + 8);
    *(void *)unint64_t v9 = *(void *)v10;
    *(void *)(v9 + 8) = v11;
  }
  v7((v9 + *(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), (v10 + *(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), v5);
  return a1;
}

uint64_t sub_1009941E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 40);
  v7(a1, a2, v5);
  uint64_t v8 = *(void *)(v6 + 64) + 7;
  unint64_t v9 = (void *)((v8 + a1) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v10 = (unint64_t *)((v8 + a2) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v11 = *v10;
  if (*v9 < 0xFFFFFFFFuLL)
  {
    if (v11 >= 0xFFFFFFFF)
    {
      unint64_t v13 = v10[1];
      *unint64_t v9 = v11;
      v9[1] = v13;
      goto LABEL_8;
    }
LABEL_7:
    *(_OWORD *)unint64_t v9 = *(_OWORD *)v10;
    goto LABEL_8;
  }
  if (v11 < 0xFFFFFFFF)
  {
    swift_release();
    goto LABEL_7;
  }
  unint64_t v12 = v10[1];
  *unint64_t v9 = v11;
  v9[1] = v12;
  swift_release();
LABEL_8:
  v7(((unint64_t)v9 + *(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), ((unint64_t)v10 + *(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), v5);
  return a1;
}

uint64_t sub_100994334(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(unsigned int *)(v5 + 84);
  uint64_t v7 = *(void *)(v5 + 64);
  if (v6 <= 0x7FFFFFFE) {
    unsigned int v8 = 2147483646;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v5 + 84);
  }
  if (!a2) {
    return 0;
  }
  int v9 = a2 - v8;
  if (a2 <= v8) {
    goto LABEL_23;
  }
  uint64_t v10 = ((((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + *(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))
      + v7;
  char v11 = 8 * v10;
  if (v10 <= 3)
  {
    unsigned int v14 = ((v9 + ~(-1 << v11)) >> v11) + 1;
    if (HIWORD(v14))
    {
      int v12 = *(_DWORD *)((char *)a1 + v10);
      if (!v12) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v14 > 0xFF)
    {
      int v12 = *(unsigned __int16 *)((char *)a1 + v10);
      if (!*(unsigned __int16 *)((char *)a1 + v10)) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v14 < 2)
    {
LABEL_23:
      if (v6 >= 0x7FFFFFFE) {
        return _s7Weather24LocationCompositionStateOwet_0((uint64_t)a1, v6, v4);
      }
      unint64_t v16 = *(void *)(((unint64_t)a1 + v7 + 7) & 0xFFFFFFFFFFFFFFF8);
      if (v16 >= 0xFFFFFFFF) {
        LODWORD(v16) = -1;
      }
      if ((v16 + 1) >= 2) {
        return v16;
      }
      else {
        return 0;
      }
    }
  }
  int v12 = *((unsigned __int8 *)a1 + v10);
  if (!*((unsigned char *)a1 + v10)) {
    goto LABEL_23;
  }
LABEL_15:
  int v15 = (v12 - 1) << v11;
  if (v10 > 3) {
    int v15 = 0;
  }
  if (v10)
  {
    if (v10 > 3) {
      LODWORD(v10) = 4;
    }
    switch((int)v10)
    {
      case 2:
        LODWORD(v10) = *a1;
        break;
      case 3:
        LODWORD(v10) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v10) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v10) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v8 + (v10 | v15) + 1;
}

void sub_1009944E0(char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(a4 + 16);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned int *)(v7 + 84);
  if (v8 <= 0x7FFFFFFE) {
    unsigned int v9 = 2147483646;
  }
  else {
    unsigned int v9 = *(_DWORD *)(v7 + 84);
  }
  uint64_t v10 = *(void *)(*(void *)(v6 - 8) + 64);
  size_t v11 = ((((v10 + 7) & 0xFFFFFFFFFFFFFFF8) + *(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))
      + v10;
  char v12 = 8 * v11;
  BOOL v13 = a3 >= v9;
  unsigned int v14 = a3 - v9;
  if (v14 != 0 && v13)
  {
    if (v11 <= 3)
    {
      unsigned int v18 = ((v14 + ~(-1 << v12)) >> v12) + 1;
      if (HIWORD(v18))
      {
        int v15 = 4;
      }
      else if (v18 >= 0x100)
      {
        int v15 = 2;
      }
      else
      {
        int v15 = v18 > 1;
      }
    }
    else
    {
      int v15 = 1;
    }
  }
  else
  {
    int v15 = 0;
  }
  if (v9 < a2)
  {
    unsigned int v16 = ~v9 + a2;
    if (v11 < 4)
    {
      int v17 = (v16 >> v12) + 1;
      if (v11)
      {
        int v19 = v16 & ~(-1 << v12);
        bzero(a1, v11);
        if (v11 == 3)
        {
          *(_WORD *)a1 = v19;
          a1[2] = BYTE2(v19);
        }
        else if (v11 == 2)
        {
          *(_WORD *)a1 = v19;
        }
        else
        {
          *a1 = v19;
        }
      }
    }
    else
    {
      bzero(a1, v11);
      *(_DWORD *)a1 = v16;
      int v17 = 1;
    }
    switch(v15)
    {
      case 1:
        a1[v11] = v17;
        return;
      case 2:
        *(_WORD *)&a1[v11] = v17;
        return;
      case 3:
        goto LABEL_41;
      case 4:
        *(_DWORD *)&a1[v11] = v17;
        return;
      default:
        return;
    }
  }
  switch(v15)
  {
    case 1:
      a1[v11] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 2:
      *(_WORD *)&a1[v11] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 3:
LABEL_41:
      __break(1u);
      JUMPOUT(0x100994750);
    case 4:
      *(_DWORD *)&a1[v11] = 0;
      goto LABEL_23;
    default:
LABEL_23:
      if (a2)
      {
LABEL_24:
        if (v8 < 0x7FFFFFFE)
        {
          __n128 v20 = (void *)((unint64_t)&a1[v10 + 7] & 0xFFFFFFFFFFFFFFF8);
          if (a2 > 0x7FFFFFFE)
          {
            void *v20 = 0;
            v20[1] = 0;
            *(_DWORD *)__n128 v20 = a2 - 0x7FFFFFFF;
          }
          else
          {
            void *v20 = a2;
          }
        }
        else
        {
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, a2, v8, v6);
        }
      }
      return;
  }
}

uint64_t sub_100994778()
{
  type metadata accessor for AnimatableValueObserverModifier();
  swift_getWitnessTable();
  type metadata accessor for _ViewModifier_Content();

  return swift_getWitnessTable();
}

uint64_t sub_1009947F8()
{
  return swift_getWitnessTable();
}

uint64_t sub_10099488C()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = type metadata accessor for AnimatableValueObserverModifier();
  uint64_t v3 = v0
     + ((*(unsigned __int8 *)(*(void *)(v2 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v2 - 8) + 80));
  uint64_t v4 = *(void (**)(uint64_t, uint64_t))(*(void *)(v1 - 8) + 8);
  v4(v3, v1);
  if (*(void *)(v3 + *(int *)(v2 + 36))) {
    swift_release();
  }
  v4(v3 + *(int *)(v2 + 40), v1);

  return swift_deallocObject();
}

uint64_t sub_1009949B4()
{
  uint64_t v1 = *(void *)(type metadata accessor for AnimatableValueObserverModifier() - 8);
  uint64_t v2 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));

  return sub_100993770(v2);
}

uint64_t *sub_100994A38(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v10 = type metadata accessor for UnitConfiguration.Temperature();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v10))
      {
        uint64_t v11 = sub_10017DF08(&qword_100E6F620);
        memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v10 - 8) + 16))(a1, a2, v10);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v10);
      }
      goto LABEL_10;
    }
    if (!EnumCaseMultiPayload)
    {
      uint64_t v8 = type metadata accessor for ConfiguredUnit();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
LABEL_10:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    memcpy(a1, a2, *(void *)(v6 + 64));
  }
  return a1;
}

uint64_t sub_100994BE0(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 1)
  {
    uint64_t v3 = type metadata accessor for UnitConfiguration.Temperature();
    uint64_t result = _s7Weather24LocationCompositionStateOwet_0(a1, 1, v3);
    if (result) {
      return result;
    }
  }
  else
  {
    if (result) {
      return result;
    }
    uint64_t v3 = type metadata accessor for ConfiguredUnit();
  }
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);

  return v4(a1, v3);
}

void *sub_100994C88(void *a1, const void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v8 = type metadata accessor for UnitConfiguration.Temperature();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v8))
    {
      uint64_t v9 = sub_10017DF08(&qword_100E6F620);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v8);
    }
    goto LABEL_8;
  }
  if (!EnumCaseMultiPayload)
  {
    uint64_t v7 = type metadata accessor for ConfiguredUnit();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
LABEL_8:
    swift_storeEnumTagMultiPayload();
    return a1;
  }
  memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

void *sub_100994DEC(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_100994F60((uint64_t)a1);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v8 = type metadata accessor for UnitConfiguration.Temperature();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v8))
      {
        uint64_t v9 = sub_10017DF08(&qword_100E6F620);
        memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v8);
      }
      goto LABEL_9;
    }
    if (!EnumCaseMultiPayload)
    {
      uint64_t v7 = type metadata accessor for ConfiguredUnit();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
LABEL_9:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

uint64_t sub_100994F60(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ConfiguredUnitsAction();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void *sub_100994FBC(void *a1, const void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v8 = type metadata accessor for UnitConfiguration.Temperature();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v8))
    {
      uint64_t v9 = sub_10017DF08(&qword_100E6F620);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v8);
    }
    goto LABEL_8;
  }
  if (!EnumCaseMultiPayload)
  {
    uint64_t v7 = type metadata accessor for ConfiguredUnit();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
LABEL_8:
    swift_storeEnumTagMultiPayload();
    return a1;
  }
  memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

void *sub_100995120(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_100994F60((uint64_t)a1);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v8 = type metadata accessor for UnitConfiguration.Temperature();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v8))
      {
        uint64_t v9 = sub_10017DF08(&qword_100E6F620);
        memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v8);
      }
      goto LABEL_9;
    }
    if (!EnumCaseMultiPayload)
    {
      uint64_t v7 = type metadata accessor for ConfiguredUnit();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
LABEL_9:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

double sub_100995294@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  sub_1000EC078();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1);
  *a2 = v5;
  a2[1] = v6;
  double result = *(double *)&v7;
  a2[2] = v7;
  return result;
}

uint64_t sub_1009952F0(void *a1, void *a2)
{
  if (a1)
  {
    if (a2)
    {
      sub_10011CB48();
      id v4 = a2;
      id v5 = a1;
      char v6 = static NSObject.== infix(_:_:)();

      if (v6) {
        return 1;
      }
    }
  }
  else if (!a2)
  {
    return 1;
  }
  return 0;
}

void sub_10099536C()
{
  sub_100162EA0();
  uint64_t v53 = v0;
  uint64_t v2 = v1;
  uint64_t v52 = type metadata accessor for UnitConfiguration.Temperature();
  sub_100179C0C();
  uint64_t v48 = v3;
  __chkstk_darwin(v4);
  sub_100109314();
  uint64_t v47 = v5;
  uint64_t v6 = sub_10017DF08(&qword_100E80DB8);
  sub_100162880();
  __chkstk_darwin(v7);
  sub_100109314();
  uint64_t v51 = v8;
  uint64_t v9 = sub_10017DF08(&qword_100E6F620);
  uint64_t v10 = sub_100109308(v9);
  __chkstk_darwin(v10);
  sub_10016278C();
  uint64_t v49 = v11 - v12;
  __chkstk_darwin(v13);
  uint64_t v50 = (uint64_t)&v46 - v14;
  type metadata accessor for ConfiguredUnit();
  sub_100179C0C();
  uint64_t v16 = v15;
  __chkstk_darwin(v17);
  sub_10012B938();
  type metadata accessor for ConfiguredUnitsAction();
  sub_100162880();
  __chkstk_darwin(v18);
  sub_10016278C();
  uint64_t v21 = v19 - v20;
  __chkstk_darwin(v22);
  uint64_t v24 = (char *)&v46 - v23;
  uint64_t v25 = sub_10017DF08(&qword_100EA4D58);
  uint64_t v26 = sub_100109308(v25);
  __chkstk_darwin(v26);
  sub_1001626E0();
  uint64_t v29 = v28 - v27;
  uint64_t v31 = v28 - v27 + *(int *)(v30 + 56);
  sub_1009963E8(v2, v28 - v27);
  sub_1009963E8(v53, v31);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      sub_1009963E8(v29, v21);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v33 = v50;
        sub_10099644C(v31, v50);
        uint64_t v34 = v51;
        uint64_t v35 = v51 + *(int *)(v6 + 48);
        sub_10099644C(v21, v51);
        sub_1006A7A1C(v33, v35);
        uint64_t v36 = v52;
        sub_10012B520(v34, 1, v52);
        if (v41)
        {
          sub_100178254(v33, &qword_100E6F620);
          sub_10012B520(v35, 1, v36);
          if (v41)
          {
            sub_100178254(v34, &qword_100E6F620);
LABEL_21:
            sub_100994F60(v29);
            goto LABEL_15;
          }
        }
        else
        {
          uint64_t v40 = v49;
          sub_1006A7A1C(v34, v49);
          sub_10012B520(v35, 1, v36);
          if (!v41)
          {
            uint64_t v42 = v47;
            uint64_t v43 = v48;
            sub_1001627D4();
            v44();
            sub_100996508(qword_100E80DC0, (void (*)(uint64_t))&type metadata accessor for UnitConfiguration.Temperature);
            dispatch thunk of static Equatable.== infix(_:_:)();
            uint64_t v45 = *(void (**)(uint64_t, uint64_t))(v43 + 8);
            v45(v42, v36);
            sub_100178254(v33, &qword_100E6F620);
            v45(v40, v36);
            sub_100178254(v34, &qword_100E6F620);
            goto LABEL_21;
          }
          sub_100178254(v33, &qword_100E6F620);
          (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v40, v36);
        }
        sub_100178254(v34, &qword_100E80DB8);
        goto LABEL_21;
      }
      sub_100178254(v21, &qword_100E6F620);
    }
    else if (swift_getEnumCaseMultiPayload() == 2)
    {
      goto LABEL_21;
    }
  }
  else
  {
    sub_1009963E8(v29, (uint64_t)v24);
    if (!swift_getEnumCaseMultiPayload())
    {
      sub_1001627D4();
      v38();
      static ConfiguredUnit.== infix(_:_:)();
      uint64_t v39 = *(void (**)(void))(v16 + 8);
      sub_1001A494C();
      v39();
      sub_1001A494C();
      v39();
      sub_100994F60(v29);
      goto LABEL_15;
    }
    sub_1001A494C();
    v37();
  }
  sub_100178254(v29, &qword_100EA4D58);
LABEL_15:
  sub_100162694();
}

void sub_100995850(uint64_t a1, void *a2)
{
  if (a2)
  {
    Hasher._combine(_:)(1u);
    id v3 = a2;
    NSObject.hash(into:)();
  }
  else
  {
    Hasher._combine(_:)(0);
  }
}

Swift::Int sub_1009958CC(void *a1)
{
  Hasher.init(_seed:)();
  if (a1)
  {
    Hasher._combine(_:)(1u);
    id v2 = a1;
    NSObject.hash(into:)();
  }
  else
  {
    Hasher._combine(_:)(0);
  }
  return Hasher._finalize()();
}

void sub_100995938()
{
  uint64_t v1 = *(void **)v0;
  id v18 = v1;
  if (v1)
  {
    sub_1001639B4();
    id v2 = v1;
    sub_10017EC28();
    sub_10011CB1C(&v18);
  }
  else
  {
    sub_10016527C();
  }
  id v3 = *(void **)(v0 + 8);
  id v17 = v3;
  if (v3)
  {
    sub_1001639B4();
    id v4 = v3;
    sub_10017EC28();
    sub_10011CB1C(&v17);
  }
  else
  {
    sub_10016527C();
  }
  uint64_t v5 = *(void **)(v0 + 16);
  id v16 = v5;
  if (v5)
  {
    sub_1001639B4();
    id v6 = v5;
    sub_10017EC28();
    sub_10011CB1C(&v16);
  }
  else
  {
    sub_10016527C();
  }
  uint64_t v7 = *(void **)(v0 + 24);
  id v15 = v7;
  if (v7)
  {
    sub_1001639B4();
    id v8 = v7;
    sub_10017EC28();
    sub_10011CB1C(&v15);
  }
  else
  {
    sub_10016527C();
  }
  uint64_t v9 = *(void **)(v0 + 32);
  id v14 = v9;
  if (v9)
  {
    sub_1001639B4();
    id v10 = v9;
    sub_10017EC28();
    sub_10011CB1C(&v14);
  }
  else
  {
    sub_10016527C();
  }
  uint64_t v11 = *(void **)(v0 + 40);
  id v13 = v11;
  if (v11)
  {
    sub_1001639B4();
    id v12 = v11;
    sub_10017EC28();
    sub_10011CB1C(&v13);
  }
  else
  {
    sub_10016527C();
  }
}

Swift::Int sub_100995A5C()
{
  return Hasher._finalize()();
}

void sub_100995A9C()
{
  sub_100162EA0();
  uint64_t v2 = type metadata accessor for UnitConfiguration.Temperature();
  sub_100179C0C();
  uint64_t v29 = v3;
  __chkstk_darwin(v4);
  sub_100109314();
  uint64_t v28 = v5;
  uint64_t v6 = sub_10017DF08(&qword_100E6F620);
  uint64_t v7 = sub_100109308(v6);
  __chkstk_darwin(v7);
  sub_10016278C();
  uint64_t v10 = v8 - v9;
  __chkstk_darwin(v11);
  id v13 = (char *)&v28 - v12;
  uint64_t v14 = type metadata accessor for ConfiguredUnit();
  sub_100179C0C();
  uint64_t v16 = v15;
  __chkstk_darwin(v17);
  sub_100109370();
  type metadata accessor for ConfiguredUnitsAction();
  sub_100162880();
  __chkstk_darwin(v18);
  sub_1001626E0();
  uint64_t v21 = v20 - v19;
  sub_1009963E8(v0, v20 - v19);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      sub_10099644C(v21, (uint64_t)v13);
      Hasher._combine(_:)(2uLL);
      sub_1006A7A1C((uint64_t)v13, v10);
      sub_10012B520(v10, 1, v2);
      if (v23)
      {
        Hasher._combine(_:)(0);
      }
      else
      {
        uint64_t v26 = v28;
        uint64_t v25 = v29;
        sub_1001627D4();
        v27();
        Hasher._combine(_:)(1u);
        sub_100996508(&qword_100E8AA50, (void (*)(uint64_t))&type metadata accessor for UnitConfiguration.Temperature);
        dispatch thunk of Hashable.hash(into:)();
        (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v26, v2);
      }
      sub_100178254((uint64_t)v13, &qword_100E6F620);
    }
    else
    {
      Hasher._combine(_:)(1uLL);
    }
  }
  else
  {
    sub_1001627D4();
    v24();
    Hasher._combine(_:)(0);
    sub_100996508(&qword_100EA4D60, (void (*)(uint64_t))&type metadata accessor for ConfiguredUnit);
    dispatch thunk of Hashable.hash(into:)();
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v1, v14);
  }
  sub_100162694();
}

Swift::Int sub_100995D8C()
{
  return Hasher._finalize()();
}

double sub_100995DCC@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  double result = sub_100995294(a1, v6);
  if (!v2)
  {
    long long v5 = v6[1];
    *a2 = v6[0];
    a2[1] = v5;
    double result = *(double *)&v7;
    a2[2] = v7;
  }
  return result;
}

uint64_t sub_100995E10(void **a1, void **a2)
{
  return sub_1009952F0(*a1, *a2);
}

Swift::Int sub_100995E24()
{
  return sub_1009958CC(*v0);
}

void sub_100995E2C(uint64_t a1)
{
  sub_100995850(a1, *v1);
}

Swift::Int sub_100995E34()
{
  uint64_t v1 = *v0;
  Hasher.init(_seed:)();
  if (v1)
  {
    Hasher._combine(_:)(1u);
    id v2 = v1;
    NSObject.hash(into:)();
  }
  else
  {
    Hasher._combine(_:)(0);
  }
  return Hasher._finalize()();
}

Swift::Int sub_100995EA4()
{
  return Hasher._finalize()();
}

Swift::Int sub_100995EE8()
{
  return Hasher._finalize()();
}

void sub_100995F24()
{
  sub_100162EA0();
  long long v5 = v4;
  uint64_t v6 = sub_10017DF08(&qword_100E6F620);
  sub_100162880();
  __chkstk_darwin(v7);
  sub_10011BFD8();
  uint64_t v8 = type metadata accessor for ConfiguredUnit();
  sub_100179C0C();
  uint64_t v10 = v9;
  __chkstk_darwin(v11);
  sub_10011BA28();
  type metadata accessor for ConfiguredUnitsAction();
  sub_100162880();
  __chkstk_darwin(v12);
  sub_100109370();
  sub_1009963E8(v0, v3);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      sub_10099644C(v3, v1);
      sub_10017DF08(&qword_100E635E0);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_100C251B0;
      *(void *)(inited + 32) = 0xD000000000000015;
      *(void *)(inited + 40) = 0x8000000100CB83B0;
      *(void *)(inited + 72) = v6;
      uint64_t v15 = sub_100170694((uint64_t *)(inited + 48));
      sub_1006A7A1C(v1, (uint64_t)v15);
      Dictionary.init(dictionaryLiteral:)();
      sub_100178254(v1, &qword_100E6F620);
    }
    else
    {
      sub_10017DF08(&qword_100E635E0);
      uint64_t v19 = swift_initStackObject();
      *(_OWORD *)(v19 + 16) = xmmword_100C251B0;
      *(void *)(v19 + 32) = 0x6C6C417465736572;
      *(void *)(v19 + 40) = 0xE800000000000000;
      *(void *)(v19 + 72) = &type metadata for String;
      *(void *)(v19 + 48) = 1702195828;
      *(void *)(v19 + 56) = 0xE400000000000000;
      Dictionary.init(dictionaryLiteral:)();
    }
  }
  else
  {
    sub_1001627D4();
    v16();
    sub_10017DF08(&qword_100E635E0);
    uint64_t v17 = swift_initStackObject();
    *(_OWORD *)(v17 + 16) = xmmword_100C251B0;
    *(void *)(v17 + 32) = 1953066613;
    *(void *)(v17 + 40) = 0xE400000000000000;
    *(void *)(v17 + 72) = v8;
    uint64_t v18 = sub_100170694((uint64_t *)(v17 + 48));
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v10 + 16))(v18, v2, v8);
    Dictionary.init(dictionaryLiteral:)();
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v2, v8);
  }
  v5[3] = sub_10017DF08(&qword_100EA4D68);
  v5[4] = sub_1009964B4();
  sub_100170694(v5);
  ShortDescription.init(name:_:)();
  sub_100162694();
}

uint64_t sub_10099624C()
{
  sub_100996508(qword_100EA4D78, (void (*)(uint64_t))type metadata accessor for ConfiguredUnitsAction);

  return ShortDescribable.description.getter();
}

uint64_t sub_1009962B8()
{
  return sub_100996508(&qword_100EA4D38, (void (*)(uint64_t))type metadata accessor for ConfiguredUnitsAction);
}

uint64_t sub_100996300()
{
  return sub_100996508(&qword_100EA4D40, (void (*)(uint64_t))type metadata accessor for ConfiguredUnitsAction);
}

unint64_t sub_10099634C()
{
  unint64_t result = qword_100EA4D48;
  if (!qword_100EA4D48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA4D48);
  }
  return result;
}

unint64_t sub_10099639C()
{
  unint64_t result = qword_100EA4D50;
  if (!qword_100EA4D50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA4D50);
  }
  return result;
}

uint64_t sub_1009963E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ConfiguredUnitsAction();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10099644C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10017DF08(&qword_100E6F620);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1009964B4()
{
  unint64_t result = qword_100EA4D70;
  if (!qword_100EA4D70)
  {
    sub_10018C6DC(&qword_100EA4D68);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA4D70);
  }
  return result;
}

uint64_t sub_100996508(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void **initializeBufferWithCopyOfBuffer for ConfiguredUnitState(void **a1, void **a2)
{
  uint64_t v3 = *a2;
  *a1 = *a2;
  id v4 = v3;
  return a1;
}

void **assignWithCopy for ConfiguredUnitState(void **a1, void **a2)
{
  uint64_t v3 = *a1;
  id v4 = *a2;
  *a1 = *a2;
  id v5 = v4;

  return a1;
}

void **assignWithTake for ConfiguredUnitState(void **a1, void **a2)
{
  uint64_t v3 = *a1;
  *a1 = *a2;

  return a1;
}

uint64_t getEnumTagSinglePayload for ConfiguredUnitState(uint64_t *a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 8))
    {
      int v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      uint64_t v3 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF) {
        LODWORD(v3) = -1;
      }
      int v2 = v3 - 1;
      if (v2 < 0) {
        int v2 = -1;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ConfiguredUnitState(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2) {
      *(void *)uint64_t result = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ConfiguredUnitState()
{
  return &type metadata for ConfiguredUnitState;
}

void destroy for ConfiguredUnitsState(uint64_t a1)
{
  int v2 = *(void **)(a1 + 40);
}

void *initializeWithCopy for ConfiguredUnitsState(void *a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  id v4 = *(void **)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  id v5 = *(void **)(a2 + 16);
  uint64_t v6 = *(void **)(a2 + 24);
  a1[2] = v5;
  a1[3] = v6;
  uint64_t v7 = *(void **)(a2 + 32);
  uint64_t v8 = *(void **)(a2 + 40);
  a1[4] = v7;
  a1[5] = v8;
  id v9 = v3;
  id v10 = v4;
  id v11 = v5;
  id v12 = v6;
  id v13 = v7;
  id v14 = v8;
  return a1;
}

uint64_t assignWithCopy for ConfiguredUnitsState(uint64_t a1, uint64_t a2)
{
  id v4 = *(void **)a1;
  id v5 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  id v6 = v5;

  uint64_t v7 = *(void **)(a1 + 8);
  uint64_t v8 = *(void **)(a2 + 8);
  *(void *)(a1 + 8) = v8;
  id v9 = v8;

  id v10 = *(void **)(a1 + 16);
  id v11 = *(void **)(a2 + 16);
  *(void *)(a1 + 16) = v11;
  id v12 = v11;

  id v13 = *(void **)(a1 + 24);
  id v14 = *(void **)(a2 + 24);
  *(void *)(a1 + 24) = v14;
  id v15 = v14;

  uint64_t v16 = *(void **)(a1 + 32);
  uint64_t v17 = *(void **)(a2 + 32);
  *(void *)(a1 + 32) = v17;
  id v18 = v17;

  uint64_t v19 = *(void **)(a1 + 40);
  uint64_t v20 = *(void **)(a2 + 40);
  *(void *)(a1 + 40) = v20;
  id v21 = v20;

  return a1;
}

uint64_t assignWithTake for ConfiguredUnitsState(uint64_t a1, _OWORD *a2)
{
  id v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *a2;

  id v5 = *(void **)(a1 + 24);
  *(_OWORD *)(a1 + 16) = a2[1];

  id v6 = *(void **)(a1 + 40);
  *(_OWORD *)(a1 + 32) = a2[2];

  return a1;
}

uint64_t getEnumTagSinglePayload for ConfiguredUnitsState(uint64_t *a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 48))
    {
      int v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      uint64_t v3 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF) {
        LODWORD(v3) = -1;
      }
      int v2 = v3 - 1;
      if (v2 < 0) {
        int v2 = -1;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ConfiguredUnitsState(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 48) = 0;
    }
    if (a2) {
      *(void *)uint64_t result = a2;
    }
  }
  return result;
}

uint64_t type metadata accessor for NoAqiSevereNhpContentView()
{
  return sub_100109098();
}

uint64_t sub_100996948()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10099698C@<X0>(uint64_t a1@<X0>, __int16 a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v57 = a7;
  uint64_t v58 = a6;
  uint64_t v45 = a4;
  uint64_t v52 = a3;
  v70[2] = a5;
  v70[3] = a5;
  int v9 = a2;
  unsigned int v10 = a2 & 0x100;
  v70[4] = a5;
  v70[5] = a5;
  v70[6] = a5;
  v70[7] = a5;
  sub_100179D2C();
  uint64_t v50 = sub_10017F7C0();
  uint64_t v56 = type metadata accessor for Group();
  sub_100179C0C();
  uint64_t v53 = v11;
  __chkstk_darwin(v12);
  sub_100162EF8();
  uint64_t v55 = v13;
  __chkstk_darwin(v14);
  uint64_t v54 = (uint64_t)&v41 - v15;
  v70[0] = a5;
  v70[1] = a5;
  v70[2] = type metadata accessor for Optional();
  v70[3] = a5;
  v70[4] = a5;
  v70[5] = a5;
  v70[6] = a5;
  sub_100179D2C();
  sub_10017F7C0();
  uint64_t v51 = type metadata accessor for Group();
  sub_100179C0C();
  uint64_t v49 = v16;
  __chkstk_darwin(v17);
  sub_100162EF8();
  uint64_t v59 = v18;
  __chkstk_darwin(v19);
  uint64_t v60 = (uint64_t)&v41 - v20;
  if (v9)
  {
    if (v9 == 1)
    {
      if (v10)
      {
        id v21 = &unk_100EA8590;
        goto LABEL_11;
      }
    }
    else if (v10)
    {
      id v21 = &unk_100EA8960;
      goto LABEL_11;
    }
    id v21 = &unk_100EA8778;
    goto LABEL_11;
  }
  if (v10) {
    id v21 = &unk_100EA81C0;
  }
  else {
    id v21 = &unk_100EA83A8;
  }
LABEL_11:
  memcpy(v70, v21, sizeof(v70));
  uint64_t v22 = memcpy(v69, v70, sizeof(v69));
  __chkstk_darwin(v22);
  uint64_t v23 = v58;
  *(&v41 - 8) = a5;
  *(&v41 - 7) = v23;
  *(&v41 - 6) = a1;
  *((unsigned char *)&v41 - 40) = v9;
  uint64_t v44 = a1;
  int v42 = v9;
  unsigned int v43 = v10 >> 8;
  *((unsigned char *)&v41 - 39) = BYTE1(v10);
  uint64_t v24 = v45;
  *(&v41 - 4) = v52;
  *(&v41 - 3) = v24;
  *(&v41 - 2) = (uint64_t)v69;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v26 = v59;
  Group<A>.init(content:)();
  uint64_t v68 = WitnessTable;
  uint64_t v27 = v51;
  uint64_t v46 = swift_getWitnessTable();
  sub_100121584(v26, v27, v60);
  uint64_t v28 = v49;
  uint64_t v47 = *(uint64_t (**)(uint64_t, uint64_t))(v49 + 8);
  uint64_t v48 = v49 + 8;
  uint64_t v29 = v47(v26, v27);
  __chkstk_darwin(v29);
  uint64_t v30 = v58;
  *(&v41 - 8) = a5;
  *(&v41 - 7) = v30;
  *(&v41 - 6) = v44;
  *((unsigned char *)&v41 - 40) = v42;
  *((unsigned char *)&v41 - 39) = v43;
  *(&v41 - 4) = v31;
  *(&v41 - 3) = v24;
  *(&v41 - 2) = (uint64_t)v69;
  uint64_t v32 = swift_getWitnessTable();
  uint64_t v33 = v55;
  Group<A>.init(content:)();
  uint64_t v67 = v32;
  uint64_t v34 = v56;
  uint64_t v58 = swift_getWitnessTable();
  uint64_t v35 = v54;
  sub_100121584(v33, v34, v54);
  uint64_t v36 = v53;
  uint64_t v37 = *(void (**)(void))(v53 + 8);
  sub_10017C768();
  v37();
  uint64_t v38 = v59;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v28 + 16))(v59, v60, v27);
  uint64_t v65 = v38;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v36 + 16))(v33, v35, v34);
  uint64_t v66 = v33;
  uint64_t v63 = v27;
  uint64_t v64 = v34;
  uint64_t v61 = v46;
  uint64_t v62 = v58;
  sub_1006E9080();
  sub_10017C768();
  v37();
  uint64_t v39 = v47;
  v47(v60, v27);
  sub_10017C768();
  v37();
  return v39(v38, v27);
}

uint64_t sub_100996E58@<X0>(uint64_t a1@<X0>, void (*a2)(char *, void, void, void, void)@<X2>, void *a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X6>, uint64_t a6@<X8>)
{
  uint64_t v103 = a5;
  uint64_t v104 = a2;
  uint64_t v85 = a6;
  uint64_t v9 = sub_10017DF08(&qword_100E64E80);
  __chkstk_darwin(v9 - 8);
  uint64_t v82 = (uint64_t)&v79 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v99 = type metadata accessor for Optional();
  uint64_t v93 = *(void *)(v99 - 8);
  __chkstk_darwin(v99);
  int v98 = (char *)&v79 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v97 = (char *)&v79 - v13;
  uint64_t v81 = type metadata accessor for LocationComponentContainerViewModel();
  __chkstk_darwin(v81);
  uint64_t v80 = (uint64_t)&v79 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v79 - v16;
  uint64_t v18 = *(void *)(a4 - 8);
  __chkstk_darwin(v19);
  uint64_t v84 = (char *)&v79 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  uint64_t v92 = (char *)&v79 - v22;
  __chkstk_darwin(v23);
  uint64_t v91 = (char *)&v79 - v24;
  __chkstk_darwin(v25);
  uint64_t v90 = (char *)&v79 - v26;
  __chkstk_darwin(v27);
  uint64_t v89 = (char *)&v79 - v28;
  __chkstk_darwin(v29);
  uint64_t v88 = (char *)&v79 - v30;
  __chkstk_darwin(v31);
  uint64_t v87 = (char *)&v79 - v32;
  __chkstk_darwin(v33);
  uint64_t v94 = (char *)&v79 - v34;
  __chkstk_darwin(v35);
  uint64_t v102 = (char *)&v79 - v36;
  __chkstk_darwin(v37);
  uint64_t v95 = (char *)&v79 - v38;
  __chkstk_darwin(v39);
  uint64_t v41 = (char *)&v79 - v40;
  __chkstk_darwin(v42);
  uint64_t v44 = (char *)&v79 - v43;
  sub_1001F3734(a1 + OBJC_IVAR____TtCV7Weather21NoAqiSevereNhpContent8_Storage_severeAlert, (uint64_t)v17);
  v104(v17, a3[41], a3[42], a3[43], a3[44]);
  sub_1001F2B74((uint64_t)v17);
  uint64_t v86 = v44;
  sub_100121584((uint64_t)v41, a4, (uint64_t)v44);
  uint64_t v83 = v18;
  uint64_t v45 = *(void (**)(char *, uint64_t))(v18 + 8);
  v45(v41, a4);
  sub_1001F3734(a1 + OBJC_IVAR____TtCV7Weather21NoAqiSevereNhpContent8_Storage_nextHourPrecipitation, (uint64_t)v17);
  v104(v17, a3[29], a3[30], a3[31], a3[32]);
  sub_1001F2B74((uint64_t)v17);
  sub_100121584((uint64_t)v41, a4, (uint64_t)v95);
  uint64_t v100 = (void (*)(uint64_t, uint64_t))v45;
  uint64_t v101 = v41;
  v45(v41, a4);
  uint64_t v96 = a1;
  uint64_t v46 = a1 + OBJC_IVAR____TtCV7Weather21NoAqiSevereNhpContent8_Storage_map;
  swift_beginAccess();
  uint64_t v47 = v46;
  uint64_t v48 = v82;
  sub_10027A764(v47, v82);
  if (_s7Weather24LocationCompositionStateOwet_0(v48, 1, v81) == 1)
  {
    sub_10027A7CC(v48);
  }
  else
  {
    uint64_t v49 = v80;
    sub_10027A82C(v48, v80);
    sub_10027A890((uint64_t)(a3 + 20), (uint64_t)v127);
    sub_10027A890((uint64_t)v127, (uint64_t)v128);
    if (v129 != 1)
    {
      uint64_t v51 = (uint64_t)v102;
      v104((char *)v49, v128[0], v128[1], v128[2], v128[3]);
      sub_1001F2B74(v49);
      uint64_t v52 = (uint64_t)v101;
      sub_100121584(v51, a4, (uint64_t)v101);
      uint64_t v53 = v100;
      v100(v51, a4);
      uint64_t v50 = (uint64_t)v98;
      sub_100121584(v52, a4, (uint64_t)v98);
      v53(v52, a4);
      _s7Weather24LocationCompositionStateOwst_0(v50, 0, 1, a4);
      goto LABEL_7;
    }
    sub_1001F2B74(v49);
  }
  uint64_t v50 = (uint64_t)v98;
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v98, 1, 1, a4);
LABEL_7:
  sub_1000CA354();
  uint64_t v54 = *(void (**)(uint64_t, uint64_t))(v93 + 8);
  uint64_t v82 = (v93 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v54(v50, v99);
  sub_1001F3734(*(void *)(v96 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_hourlyForecast, (uint64_t)v17);
  uint64_t v55 = (uint64_t)v102;
  uint64_t v56 = v104;
  v104(v17, a3[12], a3[13], a3[14], a3[15]);
  sub_1001F2B74((uint64_t)v17);
  sub_100121584(v55, a4, (uint64_t)v101);
  v100(v55, a4);
  uint64_t v57 = v96;
  sub_1001F3734(*(void *)(v96 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_dailyForecast, (uint64_t)v17);
  uint64_t v58 = (uint64_t)v94;
  v56(v17, a3[4], a3[5], a3[6], a3[7]);
  sub_1001F2B74((uint64_t)v17);
  sub_100121584(v58, a4, v55);
  v100(v58, a4);
  sub_1001F3734(*(void *)(v57 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_uvIndex, (uint64_t)v17);
  uint64_t v59 = (uint64_t)v87;
  uint64_t v60 = v104;
  v104(v17, a3[49], a3[50], a3[51], a3[52]);
  sub_1001F2B74((uint64_t)v17);
  sub_100121584(v59, a4, v58);
  uint64_t v61 = (void (*)(char *, uint64_t))v100;
  v100(v59, a4);
  sub_1001F3734(*(void *)(v96 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_sunriseSunset, (uint64_t)v17);
  uint64_t v62 = (uint64_t)v88;
  v60(v17, a3[45], a3[46], a3[47], a3[48]);
  sub_1001F2B74((uint64_t)v17);
  uint64_t v63 = v103;
  sub_100121584(v62, a4, v59);
  uint64_t v64 = v61;
  v61((char *)v62, a4);
  uint64_t v65 = *(void (**)(uint64_t, char *, uint64_t))(v83 + 16);
  v65(v62, v86, a4);
  uint64_t v120 = v62;
  uint64_t v66 = v89;
  v65((uint64_t)v89, v95, a4);
  uint64_t v121 = v66;
  uint64_t v67 = v93 + 16;
  uint64_t v68 = (uint64_t)v98;
  (*(void (**)(char *, char *, uint64_t))(v93 + 16))(v98, v97, v99);
  uint64_t v122 = v68;
  uint64_t v69 = v90;
  v65((uint64_t)v90, v101, a4);
  uint64_t v123 = v69;
  uint64_t v70 = v63;
  uint64_t v71 = v91;
  v65((uint64_t)v91, v102, a4);
  int v124 = v71;
  uint64_t v72 = v92;
  v65((uint64_t)v92, v94, a4);
  uint64_t v125 = v72;
  uint64_t v73 = v84;
  uint64_t v74 = v87;
  v65((uint64_t)v84, v87, a4);
  int v126 = v73;
  uint64_t v75 = v73;
  uint64_t v113 = a4;
  uint64_t v114 = a4;
  uint64_t v76 = v99;
  uint64_t v115 = v99;
  uint64_t v116 = a4;
  uint64_t v117 = a4;
  uint64_t v118 = a4;
  uint64_t v119 = a4;
  uint64_t v106 = v70;
  uint64_t v107 = v70;
  uint64_t v105 = v70;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v109 = v70;
  uint64_t v110 = v70;
  uint64_t v111 = v70;
  uint64_t v112 = v70;
  sub_1006E9080();
  v64(v74, a4);
  v64(v94, a4);
  v64(v102, a4);
  v64(v101, a4);
  uint64_t v77 = *(void (**)(char *, uint64_t))(v67 - 8);
  v77(v97, v76);
  v64(v95, a4);
  v64(v86, a4);
  v64(v75, a4);
  v64(v92, a4);
  v64(v91, a4);
  v64(v90, a4);
  v77(v98, v76);
  v64(v89, a4);
  return ((uint64_t (*)(char *, uint64_t))v64)(v88, a4);
}

uint64_t sub_1009978C4@<X0>(uint64_t a1@<X0>, void (*a2)(char *, uint64_t, uint64_t, uint64_t, uint64_t)@<X2>, uint64_t *a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X6>, uint64_t a6@<X8>)
{
  uint64_t v102 = a5;
  uint64_t v84 = a6;
  uint64_t v10 = type metadata accessor for LocationComponentContainerViewModel();
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v82 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v82 = *(void *)(a4 - 8);
  uint64_t v13 = v82;
  __chkstk_darwin(v14);
  uint64_t v83 = (char *)&v82 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  int v98 = (char *)&v82 - v17;
  __chkstk_darwin(v18);
  uint64_t v97 = (char *)&v82 - v19;
  __chkstk_darwin(v20);
  uint64_t v96 = (char *)&v82 - v21;
  __chkstk_darwin(v22);
  uint64_t v95 = (char *)&v82 - v23;
  __chkstk_darwin(v24);
  uint64_t v93 = (char *)&v82 - v25;
  __chkstk_darwin(v26);
  uint64_t v92 = (char *)&v82 - v27;
  __chkstk_darwin(v28);
  uint64_t v90 = (char *)&v82 - v29;
  __chkstk_darwin(v30);
  uint64_t v89 = (char *)&v82 - v31;
  __chkstk_darwin(v32);
  uint64_t v101 = (char *)&v82 - v33;
  __chkstk_darwin(v34);
  uint64_t v87 = (char *)&v82 - v35;
  __chkstk_darwin(v36);
  uint64_t v86 = (char *)&v82 - v37;
  __chkstk_darwin(v38);
  uint64_t v100 = (char *)&v82 - v39;
  __chkstk_darwin(v40);
  uint64_t v42 = (char *)&v82 - v41;
  __chkstk_darwin(v43);
  uint64_t v45 = (char *)&v82 - v44;
  __chkstk_darwin(v46);
  uint64_t v48 = (char *)&v82 - v47;
  uint64_t v94 = (char *)&v82 - v47;
  sub_1001F3734(*(void *)(a1 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_wind, (uint64_t)v12);
  uint64_t v49 = a3[57];
  uint64_t v50 = a3[58];
  uint64_t v51 = a3[59];
  uint64_t v52 = a3[60];
  uint64_t v99 = a2;
  a2(v12, v49, v50, v51, v52);
  sub_1001F2B74((uint64_t)v12);
  sub_100121584((uint64_t)v45, a4, (uint64_t)v48);
  uint64_t v53 = *(void (**)(char *, uint64_t))(v13 + 8);
  uint64_t v91 = v45;
  v53(v45, a4);
  sub_1001F3734(*(void *)(a1 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_precipitationTotal, (uint64_t)v12);
  a2(v12, a3[37], a3[38], a3[39], a3[40]);
  sub_1001F2B74((uint64_t)v12);
  sub_100121584((uint64_t)v42, a4, (uint64_t)v45);
  uint64_t v88 = v42;
  v53(v42, a4);
  uint64_t v85 = a1;
  sub_1001F3734(*(void *)(a1 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_feelsLike, (uint64_t)v12);
  uint64_t v54 = (uint64_t)v100;
  v99(v12, a3[8], a3[9], a3[10], a3[11]);
  sub_1001F2B74((uint64_t)v12);
  sub_100121584(v54, a4, (uint64_t)v42);
  uint64_t v55 = v54;
  v53((char *)v54, a4);
  sub_1001F3734(*(void *)(a1 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_humidity, (uint64_t)v12);
  uint64_t v56 = (uint64_t)v86;
  uint64_t v57 = v99;
  v99(v12, a3[16], a3[17], a3[18], a3[19]);
  sub_1001F2B74((uint64_t)v12);
  sub_100121584(v56, a4, v55);
  v53((char *)v56, a4);
  sub_1001F3734(*(void *)(v85 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_visibility, (uint64_t)v12);
  uint64_t v58 = (uint64_t)v87;
  v57(v12, a3[53], a3[54], a3[55], a3[56]);
  sub_1001F2B74((uint64_t)v12);
  uint64_t v59 = v58;
  sub_100121584(v58, a4, v56);
  v53((char *)v58, a4);
  uint64_t v60 = v85;
  sub_1001F3734(*(void *)(v85 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_pressure, (uint64_t)v12);
  uint64_t v61 = (uint64_t)v101;
  uint64_t v62 = v99;
  v99(v12, a3[33], a3[34], a3[35], a3[36]);
  sub_1001F2B74((uint64_t)v12);
  sub_100121584(v61, a4, v59);
  v53((char *)v61, a4);
  sub_1001F3734(*(void *)(v60 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_moon, (uint64_t)v12);
  uint64_t v63 = (uint64_t)v89;
  v62(v12, a3[25], a3[26], a3[27], a3[28]);
  sub_1001F2B74((uint64_t)v12);
  sub_100121584(v63, a4, (uint64_t)v101);
  v53((char *)v63, a4);
  sub_1001F3734(*(void *)(v60 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_averages, (uint64_t)v12);
  uint64_t v64 = *a3;
  uint64_t v65 = a3[1];
  uint64_t v66 = a3[2];
  uint64_t v67 = a3[3];
  uint64_t v68 = (uint64_t)v90;
  v62(v12, v64, v65, v66, v67);
  sub_1001F2B74((uint64_t)v12);
  sub_100121584(v68, a4, v63);
  v53((char *)v68, a4);
  uint64_t v69 = *(void (**)(uint64_t, char *, uint64_t))(v82 + 16);
  v69(v68, v94, a4);
  uint64_t v119 = v68;
  uint64_t v70 = v92;
  v69((uint64_t)v92, v91, a4);
  uint64_t v120 = v70;
  uint64_t v71 = v93;
  v69((uint64_t)v93, v88, a4);
  uint64_t v121 = v71;
  uint64_t v72 = v95;
  v69((uint64_t)v95, v100, a4);
  uint64_t v122 = v72;
  uint64_t v73 = v96;
  uint64_t v74 = v86;
  v69((uint64_t)v96, v86, a4);
  uint64_t v123 = v73;
  uint64_t v75 = v97;
  uint64_t v76 = v87;
  v69((uint64_t)v97, v87, a4);
  int v124 = v75;
  uint64_t v77 = v98;
  uint64_t v78 = (uint64_t)v101;
  v69((uint64_t)v98, v101, a4);
  uint64_t v125 = v77;
  uint64_t v79 = v83;
  uint64_t v80 = v89;
  v69((uint64_t)v83, v89, a4);
  int v126 = v79;
  uint64_t v111 = a4;
  uint64_t v112 = a4;
  uint64_t v113 = a4;
  uint64_t v114 = a4;
  uint64_t v115 = a4;
  uint64_t v116 = a4;
  uint64_t v117 = a4;
  uint64_t v118 = a4;
  uint64_t v103 = v102;
  uint64_t v104 = v102;
  uint64_t v105 = v102;
  uint64_t v106 = v102;
  uint64_t v107 = v102;
  uint64_t v108 = v102;
  uint64_t v109 = v102;
  uint64_t v110 = v102;
  sub_1006E9080();
  v53(v80, a4);
  v53((char *)v78, a4);
  v53(v76, a4);
  v53(v74, a4);
  v53(v100, a4);
  v53(v88, a4);
  v53(v91, a4);
  v53(v94, a4);
  v53(v79, a4);
  v53(v98, a4);
  v53(v97, a4);
  v53(v96, a4);
  v53(v95, a4);
  v53(v93, a4);
  v53(v92, a4);
  return ((uint64_t (*)(char *, uint64_t))v53)(v90, a4);
}

uint64_t sub_10099830C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if (*(unsigned char *)(v2 + 9)) {
    __int16 v3 = 256;
  }
  else {
    __int16 v3 = 0;
  }
  return sub_10099698C(*(void *)v2, v3 | *(unsigned __int8 *)(v2 + 8), *(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(a1 + 16), *(void *)(a1 + 24), a2);
}

uint64_t sub_100998338()
{
  return sub_100998368((uint64_t (*)(void, void, void, void, void, void, void))sub_100996E58);
}

uint64_t sub_100998350()
{
  return sub_100998368((uint64_t (*)(void, void, void, void, void, void, void))sub_1009978C4);
}

uint64_t sub_100998368(uint64_t (*a1)(void, void, void, void, void, void, void))
{
  if (*(unsigned char *)(v1 + 41)) {
    int v2 = 256;
  }
  else {
    int v2 = 0;
  }
  return a1(*(void *)(v1 + 32), v2 | *(unsigned __int8 *)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56), *(void *)(v1 + 64), *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1009983EC()
{
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 16);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 56);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 96);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 136);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 176);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 216);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 256);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 296);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 336);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 376);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 416);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 456);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 496);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 536);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 576);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 616);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 656);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 696);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 736);
  return v0;
}

uint64_t sub_10099849C()
{
  sub_1009983EC();

  return swift_deallocClassInstance();
}

ValueMetadata *type metadata accessor for Sidebar()
{
  return &type metadata for Sidebar;
}

uint64_t sub_1009984E4(uint64_t a1, char a2)
{
  *(unsigned char *)(v2 + 66) = a2;
  *(void *)(v2 + 80) = a1;
  *(void *)(v2 + 88) = type metadata accessor for DispatchAction();
  *(void *)(v2 + 96) = swift_task_alloc();
  *(void *)(v2 + 104) = type metadata accessor for MainActor();
  *(void *)(v2 + 112) = static MainActor.shared.getter();
  uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
  *(void *)(v2 + 120) = v4;
  *(void *)(v2 + 128) = v3;
  return _swift_task_switch(sub_1009985B4, v4, v3);
}

uint64_t sub_1009985B4()
{
  uint64_t v15 = v0;
  if (qword_100E62870 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_1002102B0(v1, (uint64_t)qword_100F52058);
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    char v4 = *(unsigned char *)(v0 + 66) & 1;
    id v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    *(_DWORD *)id v5 = 136315138;
    *(unsigned char *)(v0 + 65) = v4;
    uint64_t v6 = String.init<A>(describing:)();
    *(void *)(v0 + 72) = sub_10016414C(v6, v7, &v14);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Adjusting sidebar state: %s", v5, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  uint64_t v8 = *(BOOL **)(v0 + 96);
  uint64_t v9 = *(void *)(v0 + 88);
  BOOL *v8 = (*(unsigned char *)(v0 + 66) & 1) == 0;
  type metadata accessor for ViewAction();
  swift_storeEnumTagMultiPayload();
  *(void *)(v0 + 136) = type metadata accessor for MainAction();
  swift_storeEnumTagMultiPayload();
  uint64_t v10 = *(int *)(v9 + 20);
  *(_DWORD *)(v0 + 68) = v10;
  v8[v10] = 0;
  *(void *)(v0 + 144) = static MainActor.shared.getter();
  uint64_t v12 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100998808, v12, v11);
}

uint64_t sub_100998808()
{
  uint64_t v1 = *(int *)(v0 + 68);
  uint64_t v2 = *(void *)(v0 + 96);
  swift_release();
  if (*(unsigned char *)(v2 + v1) == 1)
  {
    uint64_t v3 = *(void *)(v0 + 96);
    uint64_t v4 = *(void *)(v0 + 80);
    uint64_t v5 = swift_task_alloc();
    *(void *)(v5 + 16) = v4;
    *(void *)(v5 + 24) = v3;
    static Animation.default.getter();
    withAnimation<A>(_:_:)();
    swift_release();
    swift_task_dealloc();
  }
  else
  {
    uint64_t v6 = *(void *)(v0 + 136);
    uint64_t v7 = *(void *)(v0 + 96);
    uint64_t v8 = *(uint64_t (**)(uint64_t))(*(void *)(v0 + 80) + 16);
    sub_10017DF08(&qword_100E63480);
    unint64_t v9 = (*(unsigned __int8 *)(*(void *)(v6 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v6 - 8) + 80);
    uint64_t v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_100C251B0;
    sub_10015B0C4(v7, v10 + v9);
    *(_OWORD *)(v0 + 16) = 0u;
    *(_OWORD *)(v0 + 32) = 0u;
    *(void *)(v0 + 48) = 0;
    *(void *)(v0 + 56) = v10;
    *(unsigned char *)(v0 + 64) = 0;
    sub_1001AB2DC(v0 + 16, v8);
    sub_100998AC0(v0 + 16);
  }
  uint64_t v11 = *(void *)(v0 + 120);
  uint64_t v12 = *(void *)(v0 + 128);
  return _swift_task_switch(sub_1009989AC, v11, v12);
}

uint64_t sub_1009989AC()
{
  uint64_t v1 = *(void *)(v0 + 96);
  swift_release();
  sub_100998B20(v1);
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_100998A24(uint64_t a1)
{
  char v4 = *v1;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1002205C0;
  return sub_1009984E4(a1, v4);
}

uint64_t sub_100998AC0(uint64_t a1)
{
  uint64_t v2 = sub_10017DF08(&qword_100E63488);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100998B20(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DispatchAction();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100998B7C()
{
  return sub_100B92F7C(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

unsigned char *_s7Weather7SidebarV5StateOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100998C64);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Sidebar.State()
{
  return &type metadata for Sidebar.State;
}

unint64_t sub_100998CA0()
{
  unint64_t result = qword_100EA4F60;
  if (!qword_100EA4F60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA4F60);
  }
  return result;
}

unint64_t sub_100998CEC(unint64_t a1, uint64_t a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = v15 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v7 = *(void *)a2;
    char v8 = *(unsigned char *)(a2 + 8);
    sub_100195B7C(*(void *)a2, v8);
    *(void *)a1 = v7;
    *(unsigned char *)(a1 + 8) = v8;
    uint64_t v9 = *(void *)(a2 + 16);
    char v10 = *(unsigned char *)(a2 + 24);
    sub_100195B7C(v9, v10);
    *(void *)(a1 + 16) = v9;
    *(unsigned char *)(a1 + 24) = v10;
    uint64_t v11 = *(int *)(a3 + 24);
    uint64_t v12 = (void *)(a1 + v11);
    uint64_t v13 = (void *)(a2 + v11);
    sub_10017DF08(&qword_100E66E50);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v14 = type metadata accessor for ColorSchemeContrast();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
    }
    else
    {
      void *v12 = *v13;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_100998E48(uint64_t a1, uint64_t a2)
{
  sub_10018F6D8(*(void *)a1, *(unsigned char *)(a1 + 8));
  sub_10018F6D8(*(void *)(a1 + 16), *(unsigned char *)(a1 + 24));
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  sub_10017DF08(&qword_100E66E50);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = type metadata accessor for ColorSchemeContrast();
    unsigned int v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
    return v6(v4, v5);
  }
  else
  {
    return swift_release();
  }
}

uint64_t sub_100998F10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)a2;
  char v7 = *(unsigned char *)(a2 + 8);
  sub_100195B7C(*(void *)a2, v7);
  *(void *)a1 = v6;
  *(unsigned char *)(a1 + 8) = v7;
  uint64_t v8 = *(void *)(a2 + 16);
  char v9 = *(unsigned char *)(a2 + 24);
  sub_100195B7C(v8, v9);
  *(void *)(a1 + 16) = v8;
  *(unsigned char *)(a1 + 24) = v9;
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (void *)(a2 + v10);
  sub_10017DF08(&qword_100E66E50);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v13 = type metadata accessor for ColorSchemeContrast();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
  }
  else
  {
    *uint64_t v11 = *v12;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_100999014(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)a2;
  char v7 = *(unsigned char *)(a2 + 8);
  sub_100195B7C(*(void *)a2, v7);
  uint64_t v8 = *(void *)a1;
  char v9 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v6;
  *(unsigned char *)(a1 + 8) = v7;
  sub_10018F6D8(v8, v9);
  uint64_t v10 = *(void *)(a2 + 16);
  char v11 = *(unsigned char *)(a2 + 24);
  sub_100195B7C(v10, v11);
  uint64_t v12 = *(void *)(a1 + 16);
  char v13 = *(unsigned char *)(a1 + 24);
  *(void *)(a1 + 16) = v10;
  *(unsigned char *)(a1 + 24) = v11;
  sub_10018F6D8(v12, v13);
  if (a1 != a2)
  {
    uint64_t v14 = *(int *)(a3 + 24);
    uint64_t v15 = (void *)(a1 + v14);
    uint64_t v16 = (void *)(a2 + v14);
    sub_1001781AC(a1 + v14, &qword_100E66E50);
    sub_10017DF08(&qword_100E66E50);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v17 = type metadata accessor for ColorSchemeContrast();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
    }
    else
    {
      *uint64_t v15 = *v16;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_100999148(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = (void *)(a1 + v4);
  uint64_t v6 = (const void *)(a2 + v4);
  uint64_t v7 = sub_10017DF08(&qword_100E66E50);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = type metadata accessor for ColorSchemeContrast();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v8 - 8) + 32))(v5, v6, v8);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v5, v6, *(void *)(*(void *)(v7 - 8) + 64));
  }
  return a1;
}

uint64_t sub_100999234(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  char v7 = *((unsigned char *)a2 + 8);
  uint64_t v8 = *(void *)a1;
  char v9 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v6;
  *(unsigned char *)(a1 + 8) = v7;
  sub_10018F6D8(v8, v9);
  char v10 = *((unsigned char *)a2 + 24);
  uint64_t v11 = *(void *)(a1 + 16);
  char v12 = *(unsigned char *)(a1 + 24);
  *(void *)(a1 + 16) = a2[2];
  *(unsigned char *)(a1 + 24) = v10;
  sub_10018F6D8(v11, v12);
  if ((uint64_t *)a1 != a2)
  {
    uint64_t v13 = *(int *)(a3 + 24);
    uint64_t v14 = (void *)(a1 + v13);
    uint64_t v15 = (char *)a2 + v13;
    sub_1001781AC(a1 + v13, &qword_100E66E50);
    uint64_t v16 = sub_10017DF08(&qword_100E66E50);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v17 = type metadata accessor for ColorSchemeContrast();
      (*(void (**)(void *, char *, uint64_t))(*(void *)(v17 - 8) + 32))(v14, v15, v17);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_100999358(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10099936C);
}

uint64_t sub_10099936C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 254)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 8);
    if (v4 > 1) {
      return (v4 ^ 0xFF) + 1;
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v8 = sub_10017DF08(&qword_100E6D908);
    uint64_t v9 = a1 + *(int *)(a3 + 24);
    return _s7Weather24LocationCompositionStateOwet_0(v9, a2, v8);
  }
}

uint64_t sub_1009993F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100999404);
}

uint64_t sub_100999404(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 254)
  {
    *(unsigned char *)(result + 8) = -(char)a2;
  }
  else
  {
    uint64_t v7 = sub_10017DF08(&qword_100E6D908);
    uint64_t v8 = v5 + *(int *)(a4 + 24);
    return _s7Weather24LocationCompositionStateOwst_0(v8, a2, a2, v7);
  }
  return result;
}

uint64_t sub_100999484()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1009994A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v54 = a2;
  uint64_t v53 = type metadata accessor for BlendMode();
  sub_100179C0C();
  uint64_t v50 = v5;
  __chkstk_darwin(v6);
  sub_1001626E0();
  uint64_t v52 = v8 - v7;
  uint64_t v48 = type metadata accessor for ColorSchemeContrast();
  sub_100179C0C();
  uint64_t v10 = v9;
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v47 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v47 - v15;
  uint64_t v17 = sub_10017DF08(&qword_100EA5000);
  __chkstk_darwin(v17 - 8);
  sub_1001626E0();
  uint64_t v20 = v19 - v18;
  uint64_t v49 = sub_10017DF08(&qword_100EA5008);
  sub_100162E4C();
  __chkstk_darwin(v21);
  sub_1001626E0();
  uint64_t v24 = v23 - v22;
  uint64_t v51 = sub_10017DF08(&qword_100EA5010);
  sub_100162E4C();
  __chkstk_darwin(v25);
  sub_1001626E0();
  uint64_t v28 = v27 - v26;
  *(void *)uint64_t v20 = static VerticalAlignment.center.getter();
  *(void *)(v20 + 8) = 0;
  *(unsigned char *)(v20 + 16) = 1;
  uint64_t v29 = sub_10017DF08(&qword_100EA5018);
  sub_100999884(a1, v3, v20 + *(int *)(v29 + 44));
  uint64_t v30 = *(void *)(v3 + 16);
  char v31 = *(unsigned char *)(v3 + 24);
  sub_100195B7C(v30, v31);
  sub_100149AE8();
  char v33 = v32;
  sub_10018F6D8(v30, v31);
  if (v33)
  {
    int v34 = static HierarchicalShapeStyle.secondary.getter();
  }
  else
  {
    type metadata accessor for LocationFooterViewRowStyle();
    sub_10014BB38();
    uint64_t v35 = v48;
    (*(void (**)(char *, void, uint64_t))(v10 + 104))(v13, enum case for ColorSchemeContrast.increased(_:), v48);
    char v36 = static ColorSchemeContrast.== infix(_:_:)();
    uint64_t v37 = *(void (**)(char *, uint64_t))(v10 + 8);
    v37(v13, v35);
    v37(v16, v35);
    if (v36) {
      int v34 = static HierarchicalShapeStyle.primary.getter();
    }
    else {
      int v34 = static HierarchicalShapeStyle.tertiary.getter();
    }
  }
  int v38 = v34;
  sub_1001262FC(v20, v24, &qword_100EA5000);
  *(_DWORD *)(v24 + *(int *)(v49 + 36)) = v38;
  sub_1001781AC(v20, &qword_100EA5000);
  uint64_t v39 = *(void *)(v3 + 16);
  LOBYTE(v38) = *(unsigned char *)(v3 + 24);
  sub_100195B7C(v39, v38);
  sub_100149AE8();
  char v41 = v40;
  sub_10018F6D8(v39, v38);
  uint64_t v42 = v50;
  uint64_t v43 = (unsigned int *)&enum case for BlendMode.normal(_:);
  if ((v41 & 1) == 0) {
    uint64_t v43 = (unsigned int *)&enum case for BlendMode.plusLighter(_:);
  }
  uint64_t v45 = v52;
  uint64_t v44 = v53;
  (*(void (**)(uint64_t, void, uint64_t))(v50 + 104))(v52, *v43, v53);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v42 + 16))(v28 + *(int *)(v51 + 36), v45, v44);
  sub_1001262FC(v24, v28, &qword_100EA5008);
  (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v45, v44);
  sub_1001781AC(v24, &qword_100EA5008);
  return sub_10020E72C(v28, v54, &qword_100EA5010);
}

uint64_t sub_100999884@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v59 = a2;
  uint64_t v55 = a1;
  uint64_t v64 = a3;
  uint64_t v3 = type metadata accessor for LabelStyleConfiguration.Icon();
  uint64_t v62 = *(void *)(v3 - 8);
  uint64_t v63 = v3;
  __chkstk_darwin(v3);
  uint64_t v61 = (char *)&v52 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v60 = (char *)&v52 - v6;
  uint64_t v7 = sub_10017DF08(&qword_100E6D330);
  __chkstk_darwin(v7 - 8);
  uint64_t v56 = (char *)&v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for Font.TextStyle();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v52 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for LabelStyleConfiguration.Title();
  uint64_t v57 = *(void *)(v13 - 8);
  uint64_t v58 = v13;
  __chkstk_darwin(v13);
  uint64_t v53 = (char *)&v52 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_10017DF08(&qword_100EA5020);
  uint64_t v16 = v15 - 8;
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v52 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_10017DF08(&qword_100EA5028);
  uint64_t v20 = v19 - 8;
  __chkstk_darwin(v19);
  uint64_t v22 = (char *)&v52 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  uint64_t v54 = (uint64_t)&v52 - v24;
  LabelStyleConfiguration.title.getter();
  uint64_t v25 = *(void (**)(char *, void, uint64_t))(v10 + 104);
  v25(v12, enum case for Font.TextStyle.subheadline(_:), v9);
  static Font.Weight.semibold.getter();
  uint64_t v52 = static Font.system(_:weight:)();
  uint64_t v26 = *(void (**)(char *, uint64_t))(v10 + 8);
  v26(v12, v9);
  v25(v12, enum case for Font.TextStyle.footnote(_:), v9);
  static Font.Weight.bold.getter();
  uint64_t v27 = static Font.system(_:weight:)();
  v26(v12, v9);
  uint64_t v28 = *(void *)v59;
  LOBYTE(v12) = *(unsigned char *)(v59 + 8);
  sub_100195B7C(*(void *)v59, (char)v12);
  sub_100149AE8();
  LOBYTE(v10) = v29;
  sub_10018F6D8(v28, (char)v12);
  uint64_t v30 = enum case for Font.Leading.tight(_:);
  uint64_t v31 = type metadata accessor for Font.Leading();
  uint64_t v32 = (uint64_t)v56;
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v31 - 8) + 104))(v56, v30, v31);
  _s7Weather24LocationCompositionStateOwst_0(v32, 0, 1, v31);
  char v33 = (uint64_t *)&v18[*(int *)(v16 + 44)];
  uint64_t v34 = type metadata accessor for FontWithSmallVariantModifier();
  sub_1001262FC(v32, (uint64_t)v33 + *(int *)(v34 + 24), &qword_100E6D330);
  *char v33 = v52;
  v33[1] = v27;
  *((unsigned char *)v33 + *(int *)(v34 + 28)) = v10 & 1;
  uint64_t v36 = v57;
  uint64_t v35 = v58;
  uint64_t v37 = v53;
  (*(void (**)(char *, char *, uint64_t))(v57 + 16))(v18, v53, v58);
  sub_1001781AC(v32, &qword_100E6D330);
  (*(void (**)(char *, uint64_t))(v36 + 8))(v37, v35);
  uint64_t KeyPath = swift_getKeyPath();
  sub_1001262FC((uint64_t)v18, (uint64_t)v22, &qword_100EA5020);
  uint64_t v39 = &v22[*(int *)(v20 + 44)];
  *(void *)uint64_t v39 = KeyPath;
  v39[8] = 0;
  sub_1001781AC((uint64_t)v18, &qword_100EA5020);
  uint64_t v40 = v54;
  sub_10020E72C((uint64_t)v22, v54, &qword_100EA5028);
  char v41 = v60;
  LabelStyleConfiguration.icon.getter();
  sub_1001262FC(v40, (uint64_t)v22, &qword_100EA5028);
  char v65 = 1;
  uint64_t v43 = v61;
  uint64_t v42 = v62;
  uint64_t v44 = *(void (**)(char *, char *, uint64_t))(v62 + 16);
  uint64_t v45 = v63;
  v44(v61, v41, v63);
  uint64_t v46 = v64;
  sub_1001262FC((uint64_t)v22, v64, &qword_100EA5028);
  uint64_t v47 = sub_10017DF08(&qword_100EA5030);
  uint64_t v48 = v46 + *(int *)(v47 + 48);
  char v49 = v65;
  *(void *)uint64_t v48 = 0;
  *(unsigned char *)(v48 + 8) = v49;
  v44((char *)(v46 + *(int *)(v47 + 64)), v43, v45);
  uint64_t v50 = *(void (**)(char *, uint64_t))(v42 + 8);
  v50(v41, v45);
  sub_1001781AC(v40, &qword_100EA5028);
  v50(v43, v45);
  return sub_1001781AC((uint64_t)v22, &qword_100EA5028);
}

unint64_t sub_100999E88()
{
  unint64_t result = qword_100EA5038;
  if (!qword_100EA5038)
  {
    sub_10018C6DC(&qword_100EA5010);
    sub_100999F04();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA5038);
  }
  return result;
}

unint64_t sub_100999F04()
{
  unint64_t result = qword_100EA5040;
  if (!qword_100EA5040)
  {
    sub_10018C6DC(&qword_100EA5008);
    sub_1001246C8(&qword_100EA5048, &qword_100EA5000);
    sub_1001246C8(&qword_100E63EC8, &qword_100E63ED0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA5040);
  }
  return result;
}

void *sub_100999FC8(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v17 = *a2;
    *a1 = *a2;
    a1 = (void *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for LocationModel();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[6];
    *(void *)((char *)a1 + a3[5]) = *(void *)((char *)a2 + a3[5]);
    uint64_t v9 = (void *)((char *)a1 + v8);
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = *(void *)((char *)a2 + v8 + 8);
    *uint64_t v9 = *(void *)((char *)a2 + v8);
    v9[1] = v11;
    uint64_t v12 = type metadata accessor for ConditionPickerMenuViewModel(0);
    uint64_t v13 = *(int *)(v12 + 20);
    __dst = (char *)v9 + v13;
    uint64_t v14 = &v10[v13];
    uint64_t v15 = type metadata accessor for WeatherCondition();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v14, 1, v15))
    {
      uint64_t v16 = sub_10017DF08(&qword_100E63A50);
      memcpy(__dst, v14, *(void *)(*(void *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(__dst, v14, v15);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dst, 0, 1, v15);
    }
    *(void *)((char *)v9 + *(int *)(v12 + 24)) = *(void *)&v10[*(int *)(v12 + 24)];
    uint64_t v18 = a3[8];
    *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
    *((unsigned char *)a1 + v18) = *((unsigned char *)a2 + v18);
    uint64_t v19 = a3[10];
    *((unsigned char *)a1 + a3[9]) = *((unsigned char *)a2 + a3[9]);
    *((unsigned char *)a1 + v19) = *((unsigned char *)a2 + v19);
    uint64_t v20 = a3[12];
    *((unsigned char *)a1 + a3[11]) = *((unsigned char *)a2 + a3[11]);
    *(void *)((char *)a1 + v20) = *(void *)((char *)a2 + v20);
    uint64_t v21 = a3[14];
    *((unsigned char *)a1 + a3[13]) = *((unsigned char *)a2 + a3[13]);
    uint64_t v22 = (void *)((char *)a1 + v21);
    uint64_t v23 = (void *)((char *)a2 + v21);
    uint64_t v24 = v23[1];
    *uint64_t v22 = *v23;
    v22[1] = v24;
    uint64_t v25 = v23[3];
    v22[2] = v23[2];
    v22[3] = v25;
    uint64_t v26 = v23[5];
    v22[4] = v23[4];
    v22[5] = v26;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_10099A224(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for LocationModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[6];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = a2 + v7;
  void *v8 = *(void *)(a2 + v7);
  v8[1] = *(void *)(a2 + v7 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = type metadata accessor for ConditionPickerMenuViewModel(0);
  uint64_t v11 = *(int *)(v10 + 20);
  uint64_t v12 = (char *)v8 + v11;
  uint64_t v13 = (const void *)(v9 + v11);
  uint64_t v14 = type metadata accessor for WeatherCondition();
  int v15 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v12, 1, v14);
  int v16 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v13, 1, v14);
  if (!v15)
  {
    uint64_t v17 = *(void *)(v14 - 8);
    if (!v16)
    {
      (*(void (**)(char *, const void *, uint64_t))(v17 + 24))(v12, v13, v14);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v17 + 8))(v12, v14);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    uint64_t v18 = sub_10017DF08(&qword_100E63A50);
    memcpy(v12, v13, *(void *)(*(void *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, const void *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v12, 0, 1, v14);
LABEL_7:
  *(void *)((char *)v8 + *(int *)(v10 + 24)) = *(void *)(v9 + *(int *)(v10 + 24));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  *(unsigned char *)(a1 + a3[10]) = *(unsigned char *)(a2 + a3[10]);
  *(unsigned char *)(a1 + a3[11]) = *(unsigned char *)(a2 + a3[11]);
  *(void *)(a1 + a3[12]) = *(void *)(a2 + a3[12]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[13]) = *(unsigned char *)(a2 + a3[13]);
  uint64_t v19 = a3[14];
  uint64_t v20 = (void *)(a1 + v19);
  uint64_t v21 = (void *)(a2 + v19);
  void *v20 = *(void *)(a2 + v19);
  v20[1] = *(void *)(a2 + v19 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v20[2] = v21[2];
  v20[3] = v21[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v20[4] = v21[4];
  v20[5] = v21[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_10099A510(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for LocationModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  uint64_t v10 = type metadata accessor for ConditionPickerMenuViewModel(0);
  uint64_t v11 = *(int *)(v10 + 20);
  uint64_t v12 = (void *)(v8 + v11);
  uint64_t v13 = (const void *)(v9 + v11);
  uint64_t v14 = type metadata accessor for WeatherCondition();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v13, 1, v14))
  {
    uint64_t v15 = sub_10017DF08(&qword_100E63A50);
    memcpy(v12, v13, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v12, 0, 1, v14);
  }
  *(void *)(v8 + *(int *)(v10 + 24)) = *(void *)(v9 + *(int *)(v10 + 24));
  uint64_t v16 = a3[8];
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  *(unsigned char *)(a1 + v16) = *(unsigned char *)(a2 + v16);
  uint64_t v17 = a3[10];
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  *(unsigned char *)(a1 + v17) = *(unsigned char *)(a2 + v17);
  uint64_t v18 = a3[12];
  *(unsigned char *)(a1 + a3[11]) = *(unsigned char *)(a2 + a3[11]);
  *(void *)(a1 + v18) = *(void *)(a2 + v18);
  uint64_t v19 = a3[14];
  *(unsigned char *)(a1 + a3[13]) = *(unsigned char *)(a2 + a3[13]);
  uint64_t v20 = (_OWORD *)(a1 + v19);
  uint64_t v21 = (long long *)(a2 + v19);
  long long v22 = v21[2];
  long long v23 = *v21;
  v20[1] = v21[1];
  v20[2] = v22;
  _OWORD *v20 = v23;
  return a1;
}

uint64_t sub_10099A6D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  type metadata accessor for LocationModel();
  sub_100162F30();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1;
LABEL_8:
    return _s7Weather24LocationCompositionStateOwet_0(v9, a2, v8);
  }
  if (a2 != 0x7FFFFFFF)
  {
    uint64_t v8 = type metadata accessor for ConditionPickerMenuViewModel(0);
    uint64_t v9 = a1 + *(int *)(a3 + 24);
    goto LABEL_8;
  }
  unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
  if (v10 >= 0xFFFFFFFF) {
    LODWORD(v10) = -1;
  }
  return (v10 + 1);
}

void sub_10099A780(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  type metadata accessor for LocationModel();
  sub_100162F30();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = a1;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
      return;
    }
    uint64_t v10 = type metadata accessor for ConditionPickerMenuViewModel(0);
    uint64_t v11 = a1 + *(int *)(a4 + 24);
  }

  _s7Weather24LocationCompositionStateOwst_0(v11, a2, a2, v10);
}

ValueMetadata *type metadata accessor for LocationViewerActiveHeaderViewModel()
{
  return &type metadata for LocationViewerActiveHeaderViewModel;
}

uint64_t sub_10099A844@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v5 = type metadata accessor for TemperatureAveragesDetailInput();
  __chkstk_darwin(v5 - 8);
  sub_1001626E0();
  uint64_t v8 = v7 - v6;
  uint64_t v9 = type metadata accessor for PrecipitationAveragesDetailInput();
  __chkstk_darwin(v9 - 8);
  sub_1001626E0();
  uint64_t v12 = v11 - v10;
  uint64_t v13 = type metadata accessor for AveragesDetailInput.Content(0);
  __chkstk_darwin(v13);
  sub_1001626E0();
  uint64_t v16 = (char *)(v15 - v14);
  sub_10099AFAC(a1, v15 - v14);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_10099B010((uint64_t)v16, v12, (void (*)(void))type metadata accessor for PrecipitationAveragesDetailInput);
      sub_1001B1E64(v2 + 2, v2[5]);
      uint64_t v18 = type metadata accessor for AveragesDetailInput(0);
      uint64_t v19 = sub_1008D814C(v12, a1 + *(int *)(v18 + 24));
      sub_10099B06C(v12, (uint64_t (*)(void))type metadata accessor for PrecipitationAveragesDetailInput);
      sub_10017DF08(&qword_100E85438);
      *(void *)a2 = v19;
      goto LABEL_5;
    case 2u:
      sub_10099B010((uint64_t)v16, v8, (void (*)(void))type metadata accessor for TemperatureAveragesDetailInput);
      sub_1001B1E64(v2 + 7, v2[10]);
      uint64_t v20 = type metadata accessor for AveragesDetailInput(0);
      uint64_t v21 = sub_1005176EC(v8, a1 + *(int *)(v20 + 24));
      sub_10099B06C(v8, (uint64_t (*)(void))type metadata accessor for TemperatureAveragesDetailInput);
      sub_10017DF08(&qword_100E85438);
      *(void *)a2 = v21 | 0x8000000000000000;
LABEL_5:
      type metadata accessor for Location();
      sub_100187D24();
      sub_10017D8AC();
      v22();
      type metadata accessor for AveragesDetailViewModel();
      sub_10017AAFC();
      break;
    case 3u:
    case 4u:
      sub_10017DF08(&qword_100E85430);
      uint64_t v23 = type metadata accessor for AveragesDetailInput(0);
      sub_10019F584(v23);
      sub_100187D24();
      sub_10017D8AC();
      v24();
      type metadata accessor for AveragesDetailViewModel();
      sub_10017AAFC();
      break;
    default:
      sub_10099ABF8(*v16, (uint64_t)__src);
      sub_10017DF08(&qword_100E85440);
      memcpy(a2, __src, 0x60uLL);
      a2[96] = *(unsigned char *)(a1 + *(int *)(type metadata accessor for AveragesDetailInput(0) + 20));
      type metadata accessor for Location();
      sub_100187D24();
      sub_10017D8AC();
      v17();
      type metadata accessor for AveragesDetailViewModel();
      sub_10017AAFC();
      break;
  }
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_10099ABF8@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  if (a1)
  {
    if (a1 != 1)
    {
      uint64_t v25 = self;
      id v26 = [v25 mainBundle];
      v27._uint64_t countAndFlagsBits = 0xD000000000000018;
      v41._uint64_t countAndFlagsBits = 0xD000000000000053;
      v41._object = (void *)0x8000000100CB8710;
      v27._object = (void *)0x8000000100CB86F0;
      v28._uint64_t countAndFlagsBits = 0;
      v28._object = (void *)0xE000000000000000;
      Swift::String v29 = NSLocalizedString(_:tableName:bundle:value:comment:)(v27, (Swift::String_optional)0, (NSBundle)v26, v28, v41);
      uint64_t countAndFlagsBits = v29._countAndFlagsBits;
      object = v29._object;

      id v30 = [v25 mainBundle];
      v31._uint64_t countAndFlagsBits = 0xD00000000000004ALL;
      v42._uint64_t countAndFlagsBits = 0xD000000000000055;
      v42._object = (void *)0x8000000100CB87C0;
      v31._object = (void *)0x8000000100CB8770;
      v32._uint64_t countAndFlagsBits = 0;
      v32._object = (void *)0xE000000000000000;
      NSLocalizedString(_:tableName:bundle:value:comment:)(v31, (Swift::String_optional)0, (NSBundle)v30, v32, v42);

      uint64_t v21 = static String.localizedStringWithFormat(_:_:)();
      uint64_t v23 = v33;
      unint64_t v3 = 0xD00000000000001BLL;
      unint64_t v24 = 0x8000000100CB86D0;
      goto LABEL_7;
    }
    unint64_t v3 = 0x616C732E69666977;
    uint64_t v4 = self;
    id v5 = [v4 mainBundle];
    v6._uint64_t countAndFlagsBits = 0xD000000000000016;
    v39._uint64_t countAndFlagsBits = 0xD00000000000005DLL;
    v39._object = (void *)0x8000000100CB8840;
    v6._object = (void *)0x8000000100CB8820;
    v7._uint64_t countAndFlagsBits = 0;
    v7._object = (void *)0xE000000000000000;
    Swift::String v8 = NSLocalizedString(_:tableName:bundle:value:comment:)(v6, (Swift::String_optional)0, (NSBundle)v5, v7, v39);
    uint64_t countAndFlagsBits = v8._countAndFlagsBits;
    object = v8._object;

    id v11 = [v4 mainBundle];
    unint64_t v12 = 0xD00000000000005FLL;
    uint64_t v13 = "Message for error when weather averages are unavailable because there is no internet connection";
  }
  else
  {
    unint64_t v3 = 0x616C732E69666977;
    uint64_t v14 = self;
    id v15 = [v14 mainBundle];
    v16._uint64_t countAndFlagsBits = 0xD000000000000014;
    v40._uint64_t countAndFlagsBits = 0xD000000000000051;
    v40._object = (void *)0x8000000100CB8960;
    v16._object = (void *)0x8000000100CB8940;
    v17._uint64_t countAndFlagsBits = 0;
    v17._object = (void *)0xE000000000000000;
    Swift::String v18 = NSLocalizedString(_:tableName:bundle:value:comment:)(v16, (Swift::String_optional)0, (NSBundle)v15, v17, v40);
    uint64_t countAndFlagsBits = v18._countAndFlagsBits;
    object = v18._object;

    id v11 = [v14 mainBundle];
    unint64_t v12 = 0xD000000000000053;
    uint64_t v13 = "Message for error when weather averages are unavailable because airplane mode is on";
  }
  unint64_t v38 = (unint64_t)(v13 - 32) | 0x8000000000000000;
  v19._object = (void *)0x8000000100CB88A0;
  v19._uint64_t countAndFlagsBits = 0xD000000000000037;
  v20._uint64_t countAndFlagsBits = 0;
  v20._object = (void *)0xE000000000000000;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v19, (Swift::String_optional)0, (NSBundle)v11, v20, *(Swift::String *)&v12);

  uint64_t v21 = static String.localizedStringWithFormat(_:_:)();
  uint64_t v23 = v22;
  unint64_t v24 = 0xEA00000000006873;
LABEL_7:
  swift_bridgeObjectRelease();
  static Color.blue.getter();
  uint64_t v34 = Color.hex.getter();
  uint64_t v36 = v35;
  uint64_t result = swift_release();
  *(unsigned char *)a2 = 1;
  *(void *)(a2 + 8) = v3;
  *(void *)(a2 + 16) = v24;
  *(void *)(a2 + 24) = countAndFlagsBits;
  *(void *)(a2 + 32) = object;
  *(void *)(a2 + 40) = v21;
  *(void *)(a2 + 48) = v23;
  *(void *)(a2 + 56) = 0;
  *(void *)(a2 + 64) = 0;
  *(void *)(a2 + 72) = 0;
  *(void *)(a2 + 80) = v34;
  *(void *)(a2 + 88) = v36;
  return result;
}

uint64_t type metadata accessor for AveragesDetailViewModelFactory()
{
  return self;
}

uint64_t sub_10099AFAC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AveragesDetailInput.Content(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10099B010(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100187D24();
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(a2, a1);
  return a2;
}

uint64_t sub_10099B06C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_10099B0CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v96 = a5;
  uint64_t v92 = a3;
  uint64_t v74 = a2;
  uint64_t v85 = a1;
  uint64_t v81 = a6;
  sub_10017DF08(&qword_100E65250);
  sub_10017C83C();
  uint64_t v97 = v7;
  uint64_t v98 = v8;
  __chkstk_darwin(v7);
  sub_100109314();
  uint64_t v78 = v9;
  uint64_t v76 = sub_10017DF08(&qword_100E7DC28);
  sub_10017C83C();
  uint64_t v77 = v10;
  __chkstk_darwin(v11);
  sub_100109314();
  uint64_t v73 = v12;
  uint64_t v13 = type metadata accessor for WeatherFormatPlaceholder();
  sub_10017C83C();
  uint64_t v15 = v14;
  __chkstk_darwin(v16);
  Swift::String v18 = (char *)&v71 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for NSUnitTemperature.BaseWeatherFormatStyle();
  sub_10017C83C();
  uint64_t v100 = v19;
  uint64_t v101 = v20;
  __chkstk_darwin(v19);
  sub_100109314();
  id v21 = [self mainBundle];
  v102._uint64_t countAndFlagsBits = 0x1000000000000181;
  v102._object = (void *)0x8000000100CB8A90;
  v22._object = (void *)0x8000000100CB8A20;
  v22._uint64_t countAndFlagsBits = 0x100000000000006FLL;
  v23._uint64_t countAndFlagsBits = 0;
  v23._object = (void *)0xE000000000000000;
  Swift::String v24 = NSLocalizedString(_:tableName:bundle:value:comment:)(v22, (Swift::String_optional)0, (NSBundle)v21, v23, v102);
  uint64_t countAndFlagsBits = v24._countAndFlagsBits;
  object = v24._object;

  sub_10017DF08(&qword_100E6E908);
  uint64_t v25 = type metadata accessor for WeatherDescription.Argument();
  uint64_t v90 = v25;
  sub_10017C83C();
  uint64_t v27 = v26;
  unint64_t v29 = (*(unsigned __int8 *)(v26 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80);
  uint64_t v84 = *(void *)(v28 + 72);
  uint64_t v30 = v84;
  uint64_t v31 = swift_allocObject();
  uint64_t v75 = v31;
  *(_OWORD *)(v31 + 16) = xmmword_100C31880;
  Swift::String v32 = (void *)(v31 + v29);
  unint64_t v87 = v31 + v29;
  uint64_t v33 = v96;
  void *v32 = a4;
  v32[1] = v33;
  uint64_t v34 = *(void (**)(void, void, void))(v27 + 104);
  uint64_t v91 = v27 + 104;
  uint64_t v99 = v34;
  v34(v32, enum case for WeatherDescription.Argument.string(_:), v25);
  uint64_t v35 = (void *)((char *)v32 + v30);
  swift_bridgeObjectRetain();
  static WeatherFormatStyle<>.weather.getter();
  int v95 = enum case for WeatherFormatPlaceholder.none(_:);
  uint64_t v89 = *(void (**)(char *))(v15 + 104);
  uint64_t v96 = v15 + 104;
  v89(v18);
  uint64_t v94 = type metadata accessor for UnitManager();
  static UnitManager.standard.getter();
  unint64_t v93 = sub_10012BBE0();
  uint64_t v36 = Measurement.formatted<A>(_:placeholder:unitManager:)();
  uint64_t v38 = v37;
  swift_release();
  uint64_t v83 = *(void (**)(void))(v15 + 8);
  uint64_t v92 = v15 + 8;
  ((void (*)(char *, uint64_t))v83)(v18, v13);
  uint64_t v88 = *(void *)(v101 + 8);
  v101 += 8;
  sub_100127BA4();
  v39();
  uint64_t *v35 = v36;
  v35[1] = v38;
  int v86 = enum case for WeatherDescription.Argument.measurement(_:);
  sub_1001A2778();
  v40();
  uint64_t v41 = v84;
  Swift::String v42 = (uint64_t *)(v87 + 2 * v84);
  static WeatherFormatStyle<>.weather.getter();
  uint64_t v82 = v13;
  sub_1001808B4();
  v43();
  static UnitManager.standard.getter();
  uint64_t v71 = v18;
  uint64_t v44 = Measurement.formatted<A>(_:placeholder:unitManager:)();
  uint64_t v74 = v45;
  swift_release();
  uint64_t v46 = v83;
  sub_100127BA4();
  v46();
  sub_10017D8BC();
  v47();
  uint64_t v48 = v74;
  uint64_t *v42 = v44;
  v42[1] = v48;
  sub_1001A2778();
  v49();
  uint64_t v72 = (uint64_t *)(v87 + 3 * v41);
  uint64_t v74 = sub_10017DF08(&qword_100E6B7C8);
  uint64_t v50 = v73;
  Trend.baseline.getter();
  uint64_t v51 = v78;
  uint64_t v52 = v76;
  TrendBaseline.value.getter();
  (*((void (**)(uint64_t, uint64_t))v77 + 1))(v50, v52);
  static WeatherFormatStyle<>.weather.getter();
  sub_1001808B4();
  v53();
  static UnitManager.standard.getter();
  uint64_t v54 = v97;
  uint64_t v55 = Measurement.formatted<A>(_:placeholder:unitManager:)();
  uint64_t v57 = v56;
  swift_release();
  sub_100127BA4();
  v46();
  sub_10017D8BC();
  v58();
  uint64_t v59 = *(void (**)(uint64_t, uint64_t))(v98 + 8);
  v98 += 8;
  uint64_t v77 = v59;
  v59(v51, v54);
  uint64_t v60 = v72;
  *uint64_t v72 = v55;
  v60[1] = v57;
  sub_1001A10BC();
  v61();
  uint64_t v62 = (uint64_t *)(v87 + 4 * v84);
  Trend.currentValue.getter();
  static WeatherFormatStyle<>.weather.getter();
  sub_1001808B4();
  v63();
  static UnitManager.standard.getter();
  uint64_t v64 = Measurement.formatted<A>(_:placeholder:unitManager:)();
  uint64_t v66 = v65;
  swift_release();
  sub_100127BA4();
  v67();
  sub_10017D8BC();
  v68();
  v77(v51, v54);
  *uint64_t v62 = v64;
  v62[1] = v66;
  sub_1001A10BC();
  v69();
  return WeatherDescription.init(format:_:)();
}

ValueMetadata *type metadata accessor for TemperatureAveragesSummaryStringBuilder()
{
  return &type metadata for TemperatureAveragesSummaryStringBuilder;
}

uint64_t sub_10099B808()
{
  return EnvironmentValues.horizontalSizeClass.getter();
}

uint64_t sub_10099B82C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10099BA00(a1, a2, a3, a4, &qword_100E65ED8, (uint64_t (*)(uint64_t))&EnvironmentValues.horizontalSizeClass.setter);
}

uint64_t sub_10099B84C()
{
  return EnvironmentValues.sizeCategory.getter();
}

uint64_t sub_10099B870(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for ContentSizeCategory();
  __chkstk_darwin(v3);
  sub_10011BFD8();
  (*(void (**)(uint64_t, uint64_t))(v4 + 16))(v1, a1);
  return EnvironmentValues.sizeCategory.setter();
}

uint64_t sub_10099B928()
{
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 16);
  swift_release();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 64);
  swift_release();
  swift_release();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 120);
  swift_release();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 168);
  return v0;
}

uint64_t sub_10099B980()
{
  sub_10099B928();

  return swift_deallocClassInstance();
}

uint64_t sub_10099B9B4()
{
  return EnvironmentValues.sizeCategory.getter();
}

uint64_t sub_10099B9DC()
{
  return EnvironmentValues.legibilityWeight.getter();
}

uint64_t sub_10099BA00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t (*a6)(uint64_t))
{
  uint64_t v10 = sub_10017DF08(a5);
  uint64_t v11 = sub_100109308(v10);
  __chkstk_darwin(v11);
  sub_10016279C();
  sub_1000F350C(a1, v6, a5);
  return a6(v6);
}

uint64_t sub_10099BA90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10099BA00(a1, a2, a3, a4, &qword_100E827E0, (uint64_t (*)(uint64_t))&EnvironmentValues.legibilityWeight.setter);
}

uint64_t sub_10099BAC4()
{
  return EnvironmentValues.horizontalSizeClass.getter();
}

uint64_t sub_10099BAE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10099BA00(a1, a2, a3, a4, &qword_100E65ED8, (uint64_t (*)(uint64_t))&EnvironmentValues.horizontalSizeClass.setter);
}

uint64_t *sub_10099BB1C(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v20 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for Date();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[6];
    *(uint64_t *)((char *)a1 + a3[5]) = *(uint64_t *)((char *)a2 + a3[5]);
    uint64_t v9 = (uint64_t *)((char *)a1 + v8);
    uint64_t v10 = (uint64_t *)((char *)a2 + v8);
    uint64_t v11 = v10[1];
    *uint64_t v9 = *v10;
    v9[1] = v11;
    uint64_t v12 = a3[7];
    uint64_t v13 = a3[8];
    uint64_t v14 = (uint64_t *)((char *)a1 + v12);
    uint64_t v15 = (uint64_t *)((char *)a2 + v12);
    uint64_t v16 = v15[1];
    *uint64_t v14 = *v15;
    v14[1] = v16;
    uint64_t v17 = (uint64_t *)((char *)a1 + v13);
    Swift::String v18 = (uint64_t *)((char *)a2 + v13);
    uint64_t v19 = v18[1];
    void *v17 = *v18;
    v17[1] = v19;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_10099BC30(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_10099BCC8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = v9[1];
  void *v8 = *v9;
  v8[1] = v10;
  uint64_t v11 = a3[7];
  uint64_t v12 = a3[8];
  uint64_t v13 = (void *)(a1 + v11);
  uint64_t v14 = (void *)(a2 + v11);
  uint64_t v15 = v14[1];
  void *v13 = *v14;
  v13[1] = v15;
  uint64_t v16 = (void *)(a1 + v12);
  uint64_t v17 = (void *)(a2 + v12);
  uint64_t v18 = v17[1];
  *uint64_t v16 = *v17;
  v16[1] = v18;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_10099BD8C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  uint64_t v7 = a3[6];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  void *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = a3[7];
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (void *)(a2 + v10);
  *uint64_t v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v13 = a3[8];
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (void *)(a2 + v13);
  *uint64_t v14 = *v15;
  v14[1] = v15[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_10099BE8C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  uint64_t v8 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  *(_OWORD *)(a1 + v8) = *(_OWORD *)(a2 + v8);
  return a1;
}

uint64_t sub_10099BF24(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  void *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  uint64_t v12 = a3[7];
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (uint64_t *)(a2 + v12);
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  void *v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  uint64_t v17 = a3[8];
  uint64_t v18 = (void *)(a1 + v17);
  uint64_t v19 = (uint64_t *)(a2 + v17);
  uint64_t v21 = *v19;
  uint64_t v20 = v19[1];
  void *v18 = v21;
  v18[1] = v20;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_10099BFF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10099C004);
}

uint64_t sub_10099C004()
{
  sub_100181A2C();
  type metadata accessor for Date();
  sub_100162F30();
  if (*(_DWORD *)(v4 + 84) != v1) {
    return sub_100163020(*(void *)(v0 + *(int *)(v2 + 24) + 8));
  }

  return _s7Weather24LocationCompositionStateOwet_0(v0, v1, v3);
}

uint64_t sub_10099C07C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10099C090);
}

void sub_10099C090()
{
  sub_100183C30();
  type metadata accessor for Date();
  sub_100162F30();
  if (*(_DWORD *)(v4 + 84) == v3)
  {
    uint64_t v5 = sub_10016350C();
    _s7Weather24LocationCompositionStateOwst_0(v5, v6, v7, v8);
  }
  else
  {
    *(void *)(v1 + *(int *)(v2 + 24) + 8) = (v0 - 1);
  }
}

uint64_t type metadata accessor for PeakUpperMarkModel(uint64_t a1)
{
  return sub_10018678C(a1, qword_100EA52E8);
}

uint64_t sub_10099C120(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10099CBE4(a1, a2, a3, (uint64_t (*)(uint64_t))&type metadata accessor for Date);
}

uint64_t sub_10099C154(uint64_t a1, uint64_t a2)
{
  if ((static Date.== infix(_:_:)() & 1) == 0) {
    return 0;
  }
  uint64_t v4 = type metadata accessor for PeakUpperMarkModel(0);
  if (*(double *)(a1 + *(int *)(v4 + 20)) != *(double *)(a2 + *(int *)(v4 + 20))) {
    return 0;
  }
  uint64_t v5 = *(int *)(v4 + 24);
  uint64_t v6 = *(void *)(a1 + v5);
  uint64_t v7 = *(void *)(a1 + v5 + 8);
  uint64_t v8 = (void *)(a2 + v5);
  BOOL v9 = v6 == *v8 && v7 == v8[1];
  if (v9 || (char v10 = _stringCompareWithSmolCheck(_:_:expecting:)(), result = 0, (v10 & 1) != 0))
  {
    sub_10017CDEC();
    if (v12)
    {
      if (!v13) {
        return 0;
      }
      if (*v14 != *v15 || v12 != v13)
      {
        char v17 = _stringCompareWithSmolCheck(_:_:expecting:)();
        uint64_t result = 0;
        if ((v17 & 1) == 0) {
          return result;
        }
      }
    }
    else if (v13)
    {
      return 0;
    }
    sub_10017CDEC();
    if (v18)
    {
      if (v19)
      {
        BOOL v22 = *v20 == *v21 && v18 == v19;
        if (v22 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
          return 1;
        }
      }
    }
    else if (!v19)
    {
      return 1;
    }
    return 0;
  }
  return result;
}

uint64_t *sub_10099C260(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v31 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v31 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for Date();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = (int *)type metadata accessor for PeakUpperMarkModel(0);
    *(uint64_t *)((char *)a1 + v8[5]) = *(uint64_t *)((char *)a2 + v8[5]);
    uint64_t v9 = v8[6];
    char v10 = (uint64_t *)((char *)a1 + v9);
    uint64_t v11 = (uint64_t *)((char *)a2 + v9);
    uint64_t v13 = *v11;
    uint64_t v12 = v11[1];
    *char v10 = v13;
    v10[1] = v12;
    uint64_t v14 = v8[7];
    uint64_t v15 = (uint64_t *)((char *)a1 + v14);
    uint64_t v16 = (uint64_t *)((char *)a2 + v14);
    uint64_t v17 = v16[1];
    *uint64_t v15 = *v16;
    v15[1] = v17;
    uint64_t v18 = v8[8];
    uint64_t v19 = (uint64_t *)((char *)a1 + v18);
    uint64_t v20 = (uint64_t *)((char *)a2 + v18);
    uint64_t v21 = v20[1];
    *uint64_t v19 = *v20;
    v19[1] = v21;
    uint64_t v22 = a3[6];
    *(uint64_t *)((char *)a1 + a3[5]) = *(uint64_t *)((char *)a2 + a3[5]);
    *(uint64_t *)((char *)a1 + v22) = *(uint64_t *)((char *)a2 + v22);
    uint64_t v23 = a3[7];
    uint64_t v24 = a3[8];
    uint64_t v25 = (char *)a1 + v23;
    uint64_t v26 = (char *)a2 + v23;
    uint64_t v27 = *((void *)v26 + 1);
    *(void *)uint64_t v25 = *(void *)v26;
    *((void *)v25 + 1) = v27;
    v25[16] = v26[16];
    *((void *)v25 + 3) = *((void *)v26 + 3);
    uint64_t v28 = (char *)a1 + v24;
    unint64_t v29 = (char *)a2 + v24;
    uint64_t v30 = *((void *)v29 + 1);
    *(void *)uint64_t v28 = *(void *)v29;
    *((void *)v28 + 1) = v30;
    v28[16] = v29[16];
    *((void *)v28 + 3) = *((void *)v29 + 3);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_10099C418(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  type metadata accessor for PeakUpperMarkModel(0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_10099C500(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = (int *)type metadata accessor for PeakUpperMarkModel(0);
  *(void *)(a1 + v7[5]) = *(void *)(a2 + v7[5]);
  uint64_t v8 = v7[6];
  uint64_t v9 = (void *)(a1 + v8);
  char v10 = (uint64_t *)(a2 + v8);
  uint64_t v12 = *v10;
  uint64_t v11 = v10[1];
  *uint64_t v9 = v12;
  v9[1] = v11;
  uint64_t v13 = v7[7];
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (void *)(a2 + v13);
  uint64_t v16 = v15[1];
  *uint64_t v14 = *v15;
  v14[1] = v16;
  uint64_t v17 = v7[8];
  uint64_t v18 = (void *)(a1 + v17);
  uint64_t v19 = (void *)(a2 + v17);
  uint64_t v20 = v19[1];
  void *v18 = *v19;
  v18[1] = v20;
  uint64_t v21 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  *(void *)(a1 + v21) = *(void *)(a2 + v21);
  uint64_t v22 = a3[7];
  uint64_t v23 = a3[8];
  uint64_t v24 = a1 + v22;
  uint64_t v25 = a2 + v22;
  uint64_t v26 = *(void *)(v25 + 8);
  *(void *)uint64_t v24 = *(void *)v25;
  *(void *)(v24 + 8) = v26;
  *(unsigned char *)(v24 + 16) = *(unsigned char *)(v25 + 16);
  *(void *)(v24 + 24) = *(void *)(v25 + 24);
  uint64_t v27 = a1 + v23;
  uint64_t v28 = a2 + v23;
  uint64_t v29 = *(void *)(v28 + 8);
  *(void *)uint64_t v27 = *(void *)v28;
  *(void *)(v27 + 8) = v29;
  *(unsigned char *)(v27 + 16) = *(unsigned char *)(v28 + 16);
  *(void *)(v27 + 24) = *(void *)(v28 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_10099C668(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = (int *)type metadata accessor for PeakUpperMarkModel(0);
  *(void *)(a1 + v7[5]) = *(void *)(a2 + v7[5]);
  uint64_t v8 = v7[6];
  uint64_t v9 = (void *)(a1 + v8);
  char v10 = (void *)(a2 + v8);
  *uint64_t v9 = *v10;
  v9[1] = v10[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v11 = v7[7];
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (void *)(a2 + v11);
  void *v12 = *v13;
  v12[1] = v13[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v14 = v7[8];
  uint64_t v15 = (void *)(a1 + v14);
  uint64_t v16 = (void *)(a2 + v14);
  *uint64_t v15 = *v16;
  v15[1] = v16[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  swift_retain();
  swift_release();
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  uint64_t v17 = a3[7];
  uint64_t v18 = a1 + v17;
  uint64_t v19 = a2 + v17;
  *(void *)uint64_t v18 = *(void *)(a2 + v17);
  *(void *)(v18 + 8) = *(void *)(a2 + v17 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v18 + 16) = *(unsigned char *)(v19 + 16);
  *(void *)(v18 + 24) = *(void *)(v19 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v20 = a3[8];
  uint64_t v21 = a1 + v20;
  uint64_t v22 = a2 + v20;
  *(void *)uint64_t v21 = *(void *)(a2 + v20);
  *(void *)(v21 + 8) = *(void *)(a2 + v20 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v21 + 16) = *(unsigned char *)(v22 + 16);
  *(void *)(v21 + 24) = *(void *)(v22 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_10099C83C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = (int *)type metadata accessor for PeakUpperMarkModel(0);
  *(void *)(a1 + v7[5]) = *(void *)(a2 + v7[5]);
  *(_OWORD *)(a1 + v7[6]) = *(_OWORD *)(a2 + v7[6]);
  *(_OWORD *)(a1 + v7[7]) = *(_OWORD *)(a2 + v7[7]);
  *(_OWORD *)(a1 + v7[8]) = *(_OWORD *)(a2 + v7[8]);
  uint64_t v8 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  *(void *)(a1 + v8) = *(void *)(a2 + v8);
  uint64_t v9 = a3[7];
  uint64_t v10 = a3[8];
  uint64_t v11 = (_OWORD *)(a1 + v9);
  uint64_t v12 = (_OWORD *)(a2 + v9);
  long long v13 = v12[1];
  *uint64_t v11 = *v12;
  v11[1] = v13;
  uint64_t v14 = (_OWORD *)(a1 + v10);
  uint64_t v15 = (_OWORD *)(a2 + v10);
  long long v16 = v15[1];
  *uint64_t v14 = *v15;
  v14[1] = v16;
  return a1;
}

uint64_t sub_10099C91C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = (int *)type metadata accessor for PeakUpperMarkModel(0);
  *(void *)(a1 + v7[5]) = *(void *)(a2 + v7[5]);
  uint64_t v8 = v7[6];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (uint64_t *)(a2 + v8);
  uint64_t v12 = *v10;
  uint64_t v11 = v10[1];
  *uint64_t v9 = v12;
  v9[1] = v11;
  swift_bridgeObjectRelease();
  uint64_t v13 = v7[7];
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (uint64_t *)(a2 + v13);
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  *uint64_t v14 = v17;
  v14[1] = v16;
  swift_bridgeObjectRelease();
  uint64_t v18 = v7[8];
  uint64_t v19 = (void *)(a1 + v18);
  uint64_t v20 = (uint64_t *)(a2 + v18);
  uint64_t v22 = *v20;
  uint64_t v21 = v20[1];
  *uint64_t v19 = v22;
  v19[1] = v21;
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  swift_release();
  uint64_t v23 = a3[7];
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  uint64_t v26 = *(void *)(a2 + v23);
  uint64_t v27 = *(void *)(a2 + v23 + 8);
  *(void *)uint64_t v24 = v26;
  *(void *)(v24 + 8) = v27;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v24 + 16) = *(unsigned char *)(v25 + 16);
  *(void *)(v24 + 24) = *(void *)(v25 + 24);
  swift_bridgeObjectRelease();
  uint64_t v28 = a3[8];
  uint64_t v29 = a1 + v28;
  uint64_t v30 = a2 + v28;
  uint64_t v31 = *(void *)(v30 + 8);
  *(void *)uint64_t v29 = *(void *)v30;
  *(void *)(v29 + 8) = v31;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v29 + 16) = *(unsigned char *)(v30 + 16);
  *(void *)(v29 + 24) = *(void *)(v30 + 24);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_10099CA84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10099CA98);
}

uint64_t sub_10099CA98()
{
  uint64_t v3 = sub_100181A2C();
  type metadata accessor for PeakUpperMarkModel(v3);
  sub_100162F30();
  if (*(_DWORD *)(v5 + 84) != v1) {
    return sub_100163020(*(void *)(v0 + *(int *)(v2 + 20)));
  }

  return _s7Weather24LocationCompositionStateOwet_0(v0, v1, v4);
}

uint64_t sub_10099CB0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10099CB20);
}

void sub_10099CB20()
{
  uint64_t v4 = sub_100183C30();
  type metadata accessor for PeakUpperMarkModel(v4);
  sub_100162F30();
  if (*(_DWORD *)(v5 + 84) == v3)
  {
    uint64_t v6 = sub_10016350C();
    _s7Weather24LocationCompositionStateOwst_0(v6, v7, v8, v9);
  }
  else
  {
    *(void *)(v1 + *(int *)(v2 + 20)) = (v0 - 1);
  }
}

uint64_t type metadata accessor for PeakUpperMark(uint64_t a1)
{
  return sub_10018678C(a1, qword_100EA5388);
}

uint64_t sub_10099CBAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10099CBE4(a1, a2, a3, type metadata accessor for PeakUpperMarkModel);
}

uint64_t sub_10099CBE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  uint64_t result = a4(319);
  if (v5 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_10099CC90()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10099CCAC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v55 = a1;
  type metadata accessor for AnnotationOverflowResolution.Boundary();
  sub_100179C0C();
  uint64_t v49 = v3;
  uint64_t v50 = v2;
  __chkstk_darwin(v2);
  sub_100109314();
  uint64_t v47 = v4;
  sub_100129064();
  uint64_t v5 = type metadata accessor for AnnotationOverflowResolution.Strategy();
  __chkstk_darwin(v5 - 8);
  uint64_t v48 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v45 = (char *)&v37 - v8;
  sub_100129064();
  type metadata accessor for AnnotationOverflowResolution();
  sub_100179C0C();
  uint64_t v53 = v10;
  uint64_t v54 = v9;
  __chkstk_darwin(v9);
  sub_100109314();
  uint64_t v46 = v11;
  sub_100129064();
  type metadata accessor for AnnotationPosition();
  sub_100179C0C();
  uint64_t v51 = v13;
  uint64_t v52 = v12;
  __chkstk_darwin(v12);
  sub_100109314();
  uint64_t v42 = v14;
  uint64_t v15 = sub_10017DF08(&qword_100E77EF8);
  __chkstk_darwin(v15 - 8);
  sub_1001626E0();
  uint64_t v38 = type metadata accessor for PointMark();
  sub_100179C0C();
  uint64_t v39 = v16;
  __chkstk_darwin(v17);
  sub_1001626E0();
  uint64_t v40 = sub_10017DF08(&qword_100E92D40);
  sub_100179C0C();
  uint64_t v41 = v18;
  __chkstk_darwin(v19);
  sub_1001626E0();
  uint64_t v43 = sub_10017DF08(&qword_100E92D38);
  sub_100179C0C();
  uint64_t v44 = v20;
  __chkstk_darwin(v21);
  sub_100109314();
  uint64_t v56 = v22;
  uint64_t v23 = sub_100129064();
  type metadata accessor for PeakUpperMark(v23);
  type metadata accessor for Date();
  uint64_t v24 = v1;
  static PlottableValue.value(_:_:)();
  PointMark.init<A>(x:y:)();
  uint64_t v25 = v38;
  ChartContent.symbolSize(_:)();
  sub_100162F0C();
  v26();
  uint64_t v62 = static Color.clear.getter();
  uint64_t v58 = v25;
  uint64_t v59 = &protocol witness table for PointMark;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v28 = v40;
  ChartContent.foregroundStyle<A>(_:)();
  swift_release();
  sub_100162F0C();
  v29();
  static AnnotationPosition.bottomTrailing.getter();
  static AnnotationOverflowResolution.Boundary.plot.getter();
  static AnnotationOverflowResolution.Strategy.fit(to:)();
  uint64_t v30 = *(void (**)(uint64_t))(v49 + 8);
  uint64_t v31 = sub_10017EC5C();
  v30(v31);
  static AnnotationOverflowResolution.Boundary.plot.getter();
  static AnnotationOverflowResolution.Strategy.fit(to:)();
  uint64_t v32 = sub_10017EC5C();
  v30(v32);
  AnnotationOverflowResolution.init(x:y:)();
  uint64_t v57 = v24;
  static Alignment.center.getter();
  sub_10017DF08(&qword_100EA53D0);
  uint64_t v58 = v28;
  uint64_t v59 = &type metadata for Color;
  uint64_t v60 = OpaqueTypeConformance2;
  uint64_t v61 = &protocol witness table for Color;
  swift_getOpaqueTypeConformance2();
  sub_10099DA3C(&qword_100EA53D8, &qword_100EA53D0, (void (*)(void))sub_10099DA0C);
  ChartContent.annotation<A>(position:alignment:spacing:overflowResolution:content:)();
  sub_100162F0C();
  v33();
  sub_100162F0C();
  v34();
  sub_100162F0C();
  return v35();
}

double sub_10099D234@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = static HorizontalAlignment.leading.getter();
  sub_10099D2F8(a1, (uint64_t)v7);
  __src[144] = 0;
  memcpy(&__src[7], v7, 0x89uLL);
  uint64_t v5 = *(void *)(a1 + *(int *)(type metadata accessor for PeakUpperMark(0) + 24));
  LOBYTE(a1) = static Edge.Set.all.getter();
  *(void *)a2 = v4;
  *(void *)(a2 + 8) = 0;
  *(unsigned char *)(a2 + 16) = 0;
  memcpy((void *)(a2 + 17), __src, 0x90uLL);
  *(unsigned char *)(a2 + 168) = a1;
  *(void *)(a2 + 176) = 0x4020000000000000;
  *(void *)(a2 + 184) = v5;
  double result = 0.0;
  *(_OWORD *)(a2 + 192) = xmmword_100C490D0;
  *(unsigned char *)(a2 + 208) = 0;
  *(_WORD *)(a2 + 209) = 1;
  return result;
}

uint64_t sub_10099D2F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for Text.Scale();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v82 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (int *)type metadata accessor for PeakUpperMarkModel(0);
  uint64_t v9 = (uint64_t *)(a1 + v8[8]);
  uint64_t v10 = v9[1];
  if (v10)
  {
    uint64_t v104 = *v9;
    uint64_t v105 = v10;
    sub_10014A85C();
    swift_bridgeObjectRetain();
    uint64_t v11 = Text.init<A>(_:)();
    uint64_t v95 = v12;
    uint64_t v96 = v11;
    uint64_t v99 = v13 & 1;
    uint64_t v100 = v14;
    uint64_t KeyPath = swift_getKeyPath();
    static Font.caption.getter();
    static Font.Weight.medium.getter();
    uint64_t v97 = Font.weight(_:)();
    swift_release();
    uint64_t v94 = swift_getKeyPath();
    uint64_t v15 = *(void *)(a1 + *(int *)(type metadata accessor for PeakUpperMark(0) + 20));
    uint64_t v92 = swift_getKeyPath();
    uint64_t v89 = v15;
    swift_retain();
    uint64_t v93 = 1;
  }
  else
  {
    uint64_t v95 = 0;
    uint64_t v96 = 0;
    uint64_t v99 = 0;
    uint64_t v100 = 0;
    uint64_t v97 = 0;
    uint64_t KeyPath = 0;
    uint64_t v93 = 0;
    uint64_t v94 = 0;
    uint64_t v92 = 0;
    uint64_t v89 = 0;
  }
  uint64_t v16 = (uint64_t *)(a1 + v8[7]);
  uint64_t v17 = v16[1];
  if (v17)
  {
    uint64_t v18 = *v16;
    uint64_t v19 = (uint64_t *)(a1 + v8[6]);
    uint64_t v20 = v19[1];
    uint64_t v104 = *v19;
    uint64_t v105 = v20;
    sub_10014A85C();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v91 = v4;
    uint64_t v86 = Text.init<A>(_:)();
    uint64_t v85 = v21;
    uint64_t v87 = v22;
    LODWORD(v90) = v23 & 1;
    uint64_t v104 = v18;
    uint64_t v105 = v17;
    uint64_t v24 = Text.init<A>(_:)();
    uint64_t v26 = v25;
    char v28 = v27 & 1;
    static Text.Scale.secondary.getter();
    uint64_t v29 = Text.textScale(_:isEnabled:)();
    uint64_t v84 = v30;
    uint64_t v88 = a1;
    char v32 = v31 & 1;
    sub_100191924(v24, v26, v28);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v91);
    uint64_t v33 = v86;
    uint64_t v34 = v85;
    uint64_t v35 = v84;
    uint64_t v91 = static Text.+ infix(_:_:)();
    uint64_t v37 = v36;
    LODWORD(v83) = v38;
    uint64_t v40 = v39;
    sub_100191924(v29, v35, v32);
    swift_bridgeObjectRelease();
    sub_100191924(v33, v34, v90);
    swift_bridgeObjectRelease();
    char v41 = v83;
  }
  else
  {
    uint64_t v42 = (uint64_t *)(a1 + v8[6]);
    uint64_t v43 = v42[1];
    uint64_t v104 = *v42;
    uint64_t v105 = v43;
    sub_10014A85C();
    swift_bridgeObjectRetain();
    uint64_t v91 = Text.init<A>(_:)();
    uint64_t v37 = v44;
    uint64_t v40 = v45;
  }
  uint64_t v86 = v37;
  uint64_t v87 = v40;
  LODWORD(v88) = v41 & 1;
  static Font.title.getter();
  static Font.Weight.semibold.getter();
  Font.weight(_:)();
  swift_release();
  uint64_t v46 = Text.font(_:)();
  uint64_t v48 = v47;
  char v50 = v49;
  swift_release();
  char v51 = v50 & 1;
  type metadata accessor for PeakUpperMark(0);
  uint64_t v52 = Text.foregroundColor(_:)();
  uint64_t v54 = v53;
  uint64_t v56 = v55;
  uint64_t v90 = v55;
  int v58 = v57 & 1;
  sub_100191924(v46, v48, v51);
  swift_bridgeObjectRelease();
  uint64_t v59 = swift_getKeyPath();
  char v101 = v58;
  char v103 = v58;
  char v102 = 0;
  *(_DWORD *)(a2 + 105) = v104;
  *(_DWORD *)(a2 + 108) = *(_DWORD *)((char *)&v104 + 3);
  uint64_t v61 = v95;
  uint64_t v60 = v96;
  *(void *)a2 = v96;
  *(void *)(a2 + 8) = v61;
  uint64_t v62 = v60;
  uint64_t v96 = v60;
  uint64_t v63 = v99;
  *(void *)(a2 + 16) = v99;
  char v64 = v63;
  uint64_t v99 = v63;
  uint64_t v65 = v100;
  *(void *)(a2 + 24) = v100;
  uint64_t v66 = v65;
  uint64_t v100 = v65;
  uint64_t v67 = v93;
  *(void *)(a2 + 32) = KeyPath;
  *(void *)(a2 + 40) = v67;
  uint64_t v68 = v94;
  *(void *)(a2 + 48) = 0;
  *(void *)(a2 + 56) = v68;
  uint64_t v94 = v68;
  uint64_t v69 = v97;
  *(void *)(a2 + 64) = v97;
  uint64_t v70 = v69;
  uint64_t v71 = v92;
  *(void *)(a2 + 72) = v92;
  *(void *)(a2 + 80) = v89;
  *(void *)(a2 + 88) = v52;
  uint64_t v83 = v54;
  *(void *)(a2 + 96) = v54;
  *(unsigned char *)(a2 + 104) = v58;
  *(void *)(a2 + 112) = v56;
  *(void *)(a2 + 120) = v59;
  uint64_t v82 = v59;
  *(void *)(a2 + 128) = 1;
  *(unsigned char *)(a2 + 136) = 0;
  uint64_t v72 = v71;
  uint64_t v97 = v70;
  uint64_t v95 = v61;
  uint64_t v93 = v67;
  sub_10099DB14(v62, v61, v64, v66);
  uint64_t v84 = v52;
  LODWORD(v85) = v58;
  sub_100190CC4(v52, v54, v58);
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v92 = v72;
  uint64_t v73 = v96;
  uint64_t v74 = v61;
  LOBYTE(v61) = v99;
  uint64_t v75 = v100;
  sub_10099DB14(v96, v74, v99, v100);
  uint64_t v76 = v83;
  sub_100190CC4(v52, v83, v58);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_100191924(v91, v86, v88);
  swift_bridgeObjectRelease();
  uint64_t v77 = v73;
  uint64_t v78 = v73;
  uint64_t v79 = v95;
  sub_10099DBA0(v77, v95, v61, v75);
  uint64_t v80 = v84;
  sub_100191924(v84, v76, v85);
  swift_release();
  swift_bridgeObjectRelease();
  sub_100191924(v80, v76, v101);
  swift_release();
  swift_bridgeObjectRelease();
  return sub_10099DBA0(v78, v79, v99, v100);
}

double sub_10099DA04@<D0>(uint64_t a1@<X8>)
{
  return sub_10099D234(*(void *)(v1 + 16), a1);
}

uint64_t sub_10099DA0C()
{
  return sub_10099DA3C(&qword_100EA53E0, &qword_100EA53E8, (void (*)(void))sub_10099DAB8);
}

uint64_t sub_10099DA3C(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10018C6DC(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10099DAB8()
{
  unint64_t result = qword_100EA53F0;
  if (!qword_100EA53F0)
  {
    sub_10018C6DC(qword_100EA53F8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA53F0);
  }
  return result;
}

uint64_t sub_10099DB14(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    sub_100190CC4(result, a2, a3 & 1);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_retain();
    return swift_retain();
  }
  return result;
}

uint64_t sub_10099DBA0(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    sub_100191924(result, a2, a3 & 1);
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_10099DC3C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t *sub_10099DD60(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  int v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 18 > 0x18)
  {
    uint64_t v9 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    uint64_t v10 = (void *)(((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v11 = (void *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v10 = *v11;
    unint64_t v12 = ((unint64_t)v10 + 15) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v13 = ((unint64_t)v11 + 15) & 0xFFFFFFFFFFFFFFF8;
    long long v14 = *(_OWORD *)v13;
    *(unsigned char *)(v12 + 16) = *(unsigned char *)(v13 + 16);
    *(_OWORD *)unint64_t v12 = v14;
    *(unsigned char *)(v12 + 17) = *(unsigned char *)(v13 + 17);
  }
  return v4;
}

uint64_t sub_10099DE80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 48) + 7;
  unint64_t v7 = v6 + a1;
  uint64_t v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  v7 &= 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v7 = *v8;
  unint64_t v9 = (v7 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v10 = ((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFFFF8;
  char v11 = *(unsigned char *)(v10 + 16);
  *(_OWORD *)unint64_t v9 = *(_OWORD *)v10;
  *(unsigned char *)(v9 + 16) = v11;
  *(unsigned char *)(v9 + 17) = *(unsigned char *)(v10 + 17);
  return a1;
}

uint64_t sub_10099DF1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 40) + 7;
  unint64_t v7 = v6 + a1;
  uint64_t v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  v7 &= 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v7 = *v8;
  unint64_t v9 = (v7 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v10 = ((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFFFF8;
  char v11 = *(unsigned char *)(v10 + 16);
  *(_OWORD *)unint64_t v9 = *(_OWORD *)v10;
  *(unsigned char *)(v9 + 16) = v11;
  *(unsigned char *)(v9 + 17) = *(unsigned char *)(v10 + 17);
  return a1;
}

uint64_t sub_10099DFB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 32) + 7;
  unint64_t v7 = v6 + a1;
  uint64_t v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  v7 &= 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v7 = *v8;
  unint64_t v9 = (v7 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v10 = ((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFFFF8;
  char v11 = *(unsigned char *)(v10 + 16);
  *(_OWORD *)unint64_t v9 = *(_OWORD *)v10;
  *(unsigned char *)(v9 + 16) = v11;
  *(unsigned char *)(v9 + 17) = *(unsigned char *)(v10 + 17);
  return a1;
}

uint64_t sub_10099E054(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 24) + 7;
  unint64_t v7 = v6 + a1;
  uint64_t v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  v7 &= 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v7 = *v8;
  unint64_t v9 = (v7 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v10 = ((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFFFF8;
  char v11 = *(unsigned char *)(v10 + 16);
  *(_OWORD *)unint64_t v9 = *(_OWORD *)v10;
  *(unsigned char *)(v9 + 16) = v11;
  *(unsigned char *)(v9 + 17) = *(unsigned char *)(v10 + 17);
  return a1;
}

uint64_t sub_10099E0F0(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(unsigned int *)(*(void *)(v4 - 8) + 84);
  uint64_t v6 = *(void *)(*(void *)(v4 - 8) + 64);
  if (v5 <= 0xFE) {
    unsigned int v7 = 254;
  }
  else {
    unsigned int v7 = *(_DWORD *)(*(void *)(v4 - 8) + 84);
  }
  if (!a2) {
    return 0;
  }
  if (v7 < a2)
  {
    unint64_t v8 = ((((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 18;
    unsigned int v9 = (a2 - v7 + 0xFFFF) >> (8 * v8);
    if (v8 <= 3) {
      unsigned int v10 = v9 + 1;
    }
    else {
      unsigned int v10 = 2;
    }
    if (v10 >= 0x10000) {
      unsigned int v11 = 4;
    }
    else {
      unsigned int v11 = 2;
    }
    if (v10 < 0x100) {
      unsigned int v11 = 1;
    }
    if (v10 >= 2) {
      uint64_t v12 = v11;
    }
    else {
      uint64_t v12 = 0;
    }
    switch(v12)
    {
      case 1:
        int v13 = *((unsigned __int8 *)a1 + v8);
        if (!*((unsigned char *)a1 + v8)) {
          break;
        }
        goto LABEL_21;
      case 2:
        int v13 = *(unsigned __int16 *)((char *)a1 + v8);
        if (*(unsigned __int16 *)((char *)a1 + v8)) {
          goto LABEL_21;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x10099E258);
      case 4:
        int v13 = *(_DWORD *)((char *)a1 + v8);
        if (!v13) {
          break;
        }
LABEL_21:
        int v14 = (v13 - 1) << (8 * v8);
        if (v8 <= 3)
        {
          int v15 = *a1;
        }
        else
        {
          int v14 = 0;
          int v15 = *(_DWORD *)a1;
        }
        int v18 = v7 + (v15 | v14);
        return (v18 + 1);
      default:
        break;
    }
  }
  if (v5 >= 0xFE) {
    return _s7Weather24LocationCompositionStateOwet_0((uint64_t)a1, v5, v4);
  }
  unsigned int v17 = *(unsigned __int8 *)((((((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                           + 17);
  if (v17 < 2) {
    return 0;
  }
  int v18 = (v17 + 2147483646) & 0x7FFFFFFF;
  return (v18 + 1);
}

void sub_10099E26C(char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(a4 + 16);
  uint64_t v7 = *(unsigned int *)(*(void *)(v6 - 8) + 84);
  if (v7 <= 0xFE) {
    unsigned int v8 = 254;
  }
  else {
    unsigned int v8 = *(_DWORD *)(*(void *)(v6 - 8) + 84);
  }
  uint64_t v9 = *(void *)(*(void *)(v6 - 8) + 64);
  unint64_t v10 = ((((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 18;
  char v11 = 8 * v10;
  if (v8 >= a3)
  {
    int v15 = 0;
  }
  else
  {
    unsigned int v12 = (a3 - v8 + 0xFFFF) >> v11;
    if (v10 <= 3) {
      unsigned int v13 = v12 + 1;
    }
    else {
      unsigned int v13 = 2;
    }
    if (v13 >= 0x10000) {
      int v14 = 4;
    }
    else {
      int v14 = 2;
    }
    if (v13 < 0x100) {
      int v14 = 1;
    }
    if (v13 >= 2) {
      int v15 = v14;
    }
    else {
      int v15 = 0;
    }
  }
  if (v8 < a2)
  {
    unsigned int v16 = ~v8 + a2;
    unsigned int v17 = v16 >> v11;
    bzero(a1, ((((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 18);
    if (v10 <= 3) {
      int v18 = v17 + 1;
    }
    else {
      int v18 = 1;
    }
    if (v10 > 3) {
      *(_DWORD *)a1 = v16;
    }
    else {
      *(_WORD *)a1 = v16;
    }
    switch(v15)
    {
      case 1:
        a1[v10] = v18;
        return;
      case 2:
        *(_WORD *)&a1[v10] = v18;
        return;
      case 3:
        goto LABEL_40;
      case 4:
        *(_DWORD *)&a1[v10] = v18;
        return;
      default:
        return;
    }
  }
  switch(v15)
  {
    case 1:
      a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_31;
    case 2:
      *(_WORD *)&a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_31;
    case 3:
LABEL_40:
      __break(1u);
      JUMPOUT(0x10099E464);
    case 4:
      *(_DWORD *)&a1[v10] = 0;
      goto LABEL_30;
    default:
LABEL_30:
      if (a2)
      {
LABEL_31:
        if (v7 < 0xFE)
        {
          *(unsigned char *)(((((unint64_t)&a1[v9 + 7] & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 17) = a2 + 1;
        }
        else
        {
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, a2, v7, v6);
        }
      }
      return;
  }
}

uint64_t sub_10099E48C()
{
  return swift_getOpaqueTypeConformance2();
}

double sub_10099E4D4(uint64_t a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5)
{
  if (*(unsigned char *)(v5 + *(int *)(a1 + 40) + 16))
  {
    double Width = CGRectGetWidth(*(CGRect *)&a2);
LABEL_7:
    double v11 = 0.5;
    return Width * v11;
  }
  static Alignment.bottomLeading.getter();
  if (static Alignment.== infix(_:_:)())
  {
    v14.origin.CGFloat x = a2;
    v14.origin.CGFloat y = a3;
    v14.size.CGFloat width = a4;
    v14.size.CGFloat height = a5;
    double Width = CGRectGetWidth(v14);
    double v11 = 0.25;
  }
  else
  {
    static Alignment.bottomTrailing.getter();
    char v12 = static Alignment.== infix(_:_:)();
    v15.origin.CGFloat x = a2;
    v15.origin.CGFloat y = a3;
    v15.size.CGFloat width = a4;
    v15.size.CGFloat height = a5;
    double Width = CGRectGetWidth(v15);
    if ((v12 & 1) == 0) {
      goto LABEL_7;
    }
    double v11 = 0.75;
  }
  return Width * v11;
}

double sub_10099E5A8@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>, CGFloat a3@<D0>, CGFloat a4@<D1>, CGFloat a5@<D2>, CGFloat a6@<D3>)
{
  uint64_t v13 = type metadata accessor for RoundedCornerStyle();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  unsigned int v16 = (char *)&MinY - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v17 = sub_10099E4D4(a1, a3, a4, a5, a6);
  double MinY = *(double *)(v6 + *(int *)(a1 + 36));
  double v25 = v17;
  sub_10099F5C4(a3, a4, a5, a6, MinY * 3.0 * 0.5, 0.0);
  (*(void (**)(char *, void, uint64_t))(v14 + 104))(v16, enum case for RoundedCornerStyle.continuous(_:), v13);
  Path.init(roundedRect:cornerRadius:style:)();
  double v18 = v25;
  v29.origin.CGFloat x = a3;
  v29.origin.CGFloat y = a4;
  v29.size.CGFloat width = a5;
  v29.size.CGFloat height = a6;
  CGRectGetMinY(v29);
  Path.move(to:)();
  v30.origin.CGFloat x = a3;
  v30.origin.CGFloat y = a4;
  v30.size.CGFloat width = a5;
  v30.size.CGFloat height = a6;
  double MinY = CGRectGetMinY(v30);
  v31.origin.CGFloat x = a3;
  v31.origin.CGFloat y = a4;
  v31.size.CGFloat width = a5;
  v31.size.CGFloat height = a6;
  CGRectGetMinY(v31);
  v32.origin.CGFloat x = a3;
  v32.origin.CGFloat y = a4;
  v32.size.CGFloat width = a5;
  v32.size.CGFloat height = a6;
  CGRectGetMinY(v32);
  Path.addCurve(to:control1:control2:)();
  v33.origin.CGFloat x = a3;
  v33.origin.CGFloat y = a4;
  v33.size.CGFloat width = a5;
  v33.size.CGFloat height = a6;
  CGFloat v19 = CGRectGetMinY(v33);
  double v20 = *(double *)(v6 + *(int *)(a1 + 36)) * 3.0;
  double MinY = v19 + v20 * 0.5;
  double v25 = v18 - v20 / 6.0;
  v34.origin.CGFloat x = a3;
  v34.origin.CGFloat y = a4;
  v34.size.CGFloat width = a5;
  v34.size.CGFloat height = a6;
  CGRectGetMinY(v34);
  v35.origin.CGFloat x = a3;
  v35.origin.CGFloat y = a4;
  v35.size.CGFloat width = a5;
  v35.size.CGFloat height = a6;
  CGRectGetMinY(v35);
  Path.addCurve(to:control1:control2:)();
  Path.addLine(to:)();
  char v21 = v28;
  double result = *(double *)&v26;
  long long v23 = v27;
  *(_OWORD *)a2 = v26;
  *(_OWORD *)(a2 + 16) = v23;
  *(unsigned char *)(a2 + 32) = v21;
  return result;
}

uint64_t sub_10099E924@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v25 = a2;
  uint64_t v21 = *(void *)(a1 + 16);
  sub_10018C6DC(&qword_100EA5480);
  uint64_t v3 = type metadata accessor for ModifiedContent();
  sub_100179C0C();
  uint64_t v23 = v4;
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v21 - v6;
  uint64_t v8 = type metadata accessor for ModifiedContent();
  sub_100179C0C();
  uint64_t v24 = v9;
  __chkstk_darwin(v10);
  char v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v22 = (uint64_t)&v21 - v14;
  sub_10099EC34(a1, (uint64_t)v37);
  uint64_t v30 = v37[0];
  uint64_t v31 = v37[1];
  char v32 = v38;
  long long v33 = v39;
  long long v34 = v40;
  char v35 = v41;
  char v36 = v42;
  sub_10017DF08(&qword_100EA5488);
  uint64_t v15 = *(void *)(a1 + 24);
  sub_10099F338();
  static Alignment.center.getter();
  View.background<A>(_:alignment:)();
  swift_release();
  static Edge.Set.top.getter();
  uint64_t v16 = sub_1001246C8(&qword_100EA54B8, &qword_100EA5480);
  uint64_t v28 = v15;
  uint64_t v29 = v16;
  uint64_t WitnessTable = swift_getWitnessTable();
  View.padding(_:_:)();
  (*(void (**)(char *, uint64_t))(v23 + 8))(v7, v3);
  uint64_t v26 = WitnessTable;
  long long v27 = &protocol witness table for _PaddingLayout;
  swift_getWitnessTable();
  uint64_t v18 = v22;
  sub_100121584((uint64_t)v12, v8, v22);
  CGFloat v19 = *(void (**)(char *, uint64_t))(v24 + 8);
  v19(v12, v8);
  sub_100121584(v18, v8, v25);
  return ((uint64_t (*)(uint64_t, uint64_t))v19)(v18, v8);
}

uint64_t sub_10099EC34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_100179C0C();
  uint64_t v6 = v5;
  uint64_t v8 = *(void *)(v7 + 64);
  __n128 v10 = __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v6 + 16))(v11, v2, a1, v10);
  unint64_t v12 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = *(_OWORD *)(a1 + 16);
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v13 + v12, v11, a1);
  LOBYTE(v11) = static Edge.Set.top.getter();
  uint64_t result = EdgeInsets.init(_all:)();
  *(void *)a2 = sub_10099F528;
  *(void *)(a2 + 8) = v13;
  *(unsigned char *)(a2 + 16) = (_BYTE)v11;
  *(void *)(a2 + 24) = v15;
  *(void *)(a2 + 32) = v16;
  *(void *)(a2 + 40) = v17;
  *(void *)(a2 + 48) = v18;
  *(_WORD *)(a2 + 56) = 0;
  return result;
}

uint64_t sub_10099ED68@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v48 = a1;
  uint64_t v53 = a3;
  uint64_t v4 = type metadata accessor for Material();
  uint64_t v45 = *(void *)(v4 - 8);
  uint64_t v46 = v4;
  __chkstk_darwin(v4);
  uint64_t v44 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = sub_10017DF08(&qword_100EA54C0);
  __chkstk_darwin(v52);
  uint64_t v7 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v47 = (uint64_t)&v42 - v9;
  uint64_t v50 = sub_10017DF08(&qword_100EA54C8);
  __chkstk_darwin(v50);
  uint64_t v51 = (uint64_t)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = sub_10017DF08(&qword_100EA54D0);
  __chkstk_darwin(v42);
  unint64_t v12 = (char *)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for LocalCoordinateSpace();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v42 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = sub_10017DF08(&qword_100EA54D8);
  __chkstk_darwin(v49);
  uint64_t v18 = (char *)&v42 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v43 = (uint64_t)&v42 - v20;
  uint64_t v21 = type metadata accessor for UpArrowPopoverBackgroundView();
  LODWORD(a2) = *(unsigned __int8 *)(a2 + *(int *)(v21 + 44));
  static CoordinateSpaceProtocol<>.local.getter();
  GeometryProxy.frame<A>(in:)();
  CGFloat v23 = v22;
  CGFloat v25 = v24;
  CGFloat v27 = v26;
  CGFloat v29 = v28;
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  sub_10099E5A8(v21, (uint64_t)&v54, v23, v25, v27, v29);
  if (a2 == 1)
  {
    static Material.thick.getter();
    static Color.black.getter();
    Color.opacity(_:)();
    swift_release();
    static ShadowStyle.drop(color:radius:x:y:)();
    swift_release();
    uint64_t v30 = v49;
    sub_1001262FC((uint64_t)v12, (uint64_t)&v18[*(int *)(v49 + 52)], &qword_100EA54D0);
    long long v31 = v55;
    *(_OWORD *)uint64_t v18 = v54;
    *((_OWORD *)v18 + 1) = v31;
    v18[32] = v56;
    *(_WORD *)&v18[*(int *)(v30 + 56)] = 256;
    sub_1001781AC((uint64_t)v12, &qword_100EA54D0);
    uint64_t v32 = v43;
    sub_10020E72C((uint64_t)v18, v43, &qword_100EA54D8);
    sub_1001262FC(v32, v51, &qword_100EA54D8);
    swift_storeEnumTagMultiPayload();
    sub_1001246C8(&qword_100EA54E0, &qword_100EA54D8);
    sub_1001246C8(&qword_100EA54E8, &qword_100EA54C0);
    _ConditionalContent<>.init(storage:)();
    uint64_t v33 = v32;
    long long v34 = &qword_100EA54D8;
  }
  else
  {
    char v35 = v44;
    static Material.thick.getter();
    uint64_t v36 = v52;
    uint64_t v38 = v45;
    uint64_t v37 = v46;
    (*(void (**)(char *, char *, uint64_t))(v45 + 16))(&v7[*(int *)(v52 + 52)], v35, v46);
    long long v39 = v55;
    *(_OWORD *)uint64_t v7 = v54;
    *((_OWORD *)v7 + 1) = v39;
    v7[32] = v56;
    *(_WORD *)&v7[*(int *)(v36 + 56)] = 256;
    (*(void (**)(char *, uint64_t))(v38 + 8))(v35, v37);
    uint64_t v40 = v47;
    sub_10020E72C((uint64_t)v7, v47, &qword_100EA54C0);
    sub_1001262FC(v40, v51, &qword_100EA54C0);
    swift_storeEnumTagMultiPayload();
    sub_1001246C8(&qword_100EA54E0, &qword_100EA54D8);
    sub_1001246C8(&qword_100EA54E8, &qword_100EA54C0);
    _ConditionalContent<>.init(storage:)();
    uint64_t v33 = v40;
    long long v34 = &qword_100EA54C0;
  }
  return sub_1001781AC(v33, v34);
}

unint64_t sub_10099F338()
{
  unint64_t result = qword_100EA5490;
  if (!qword_100EA5490)
  {
    sub_10018C6DC(&qword_100EA5488);
    sub_10099F3B4();
    sub_10022764C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA5490);
  }
  return result;
}

unint64_t sub_10099F3B4()
{
  unint64_t result = qword_100EA5498;
  if (!qword_100EA5498)
  {
    sub_10018C6DC(&qword_100EA54A0);
    sub_1001246C8(&qword_100EA54A8, &qword_100EA54B0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA5498);
  }
  return result;
}

uint64_t sub_10099F454()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(type metadata accessor for UpArrowPopoverBackgroundView() - 8) + 80);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0 + ((v2 + 32) & ~v2), v1);

  return swift_deallocObject();
}

uint64_t sub_10099F528@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for UpArrowPopoverBackgroundView() - 8);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return sub_10099ED68(a1, v6, a2);
}

double sub_10099F5C4(double a1, double a2, double a3, double a4, double a5, double a6)
{
  return a1 + a6;
}

uint64_t sub_10099F5E0()
{
  return swift_getWitnessTable();
}

uint64_t sub_10099F6B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AppConfiguration();
  uint64_t v5 = **(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);

  return v5(a1, a2, v4);
}

uint64_t sub_10099F720(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AppConfiguration();

  return _s7Weather24LocationCompositionStateOwet_0(a1, a2, v4);
}

uint64_t sub_10099F768(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AppConfiguration();

  return _s7Weather24LocationCompositionStateOwst_0(a1, a2, a2, v4);
}

uint64_t sub_10099F7B8(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000010 && a2 == 0x8000000100C98BE0)
  {
    swift_bridgeObjectRelease();
    char v2 = 0;
  }
  else
  {
    char v3 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    char v2 = v3 ^ 1;
  }
  return v2 & 1;
}

unint64_t sub_10099F840()
{
  return 0xD000000000000010;
}

uint64_t sub_10099F860@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_10099F7B8(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_10099F88C(uint64_t a1)
{
  unint64_t v2 = sub_10099FEBC();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10099F8C8(uint64_t a1)
{
  unint64_t v2 = sub_10099FEBC();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10099F904(void *a1)
{
  uint64_t v2 = sub_10017DF08(&qword_100EA55A0);
  sub_100179C0C();
  uint64_t v4 = v3;
  __chkstk_darwin(v5);
  sub_1001626E0();
  uint64_t v8 = v7 - v6;
  sub_1001B1E64(a1, a1[3]);
  sub_10099FEBC();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  type metadata accessor for AppConfiguration();
  sub_10099FFC0(&qword_100E906F0, (void (*)(uint64_t))&type metadata accessor for AppConfiguration);
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v8, v2);
}

uint64_t sub_10099FA48@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for AppConfiguration();
  sub_100179C0C();
  uint64_t v20 = v5;
  __chkstk_darwin(v6);
  sub_1001626E0();
  uint64_t v23 = v8 - v7;
  uint64_t v9 = sub_10017DF08(&qword_100EA5588);
  sub_100179C0C();
  uint64_t v22 = v10;
  __chkstk_darwin(v11);
  sub_1001626E0();
  uint64_t v14 = v13 - v12;
  uint64_t v15 = type metadata accessor for AppConfigurationState();
  __chkstk_darwin(v15 - 8);
  sub_1001626E0();
  uint64_t v18 = v17 - v16;
  sub_1001B1E64(a1, a1[3]);
  sub_10099FEBC();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (!v2)
  {
    sub_10099FFC0(&qword_100EA5598, (void (*)(uint64_t))&type metadata accessor for AppConfiguration);
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v14, v9);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v20 + 32))(v18, v23, v4);
    sub_10099FF08(v18, a2);
  }
  return _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)a1);
}

uint64_t sub_10099FC64@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10099FA48(a1, a2);
}

uint64_t sub_10099FC7C(void *a1)
{
  return sub_10099F904(a1);
}

uint64_t sub_10099FC94@<X0>(uint64_t *a1@<X8>)
{
  sub_10017DF08(&qword_100E635E0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100C251B0;
  *(void *)(inited + 32) = 0xD000000000000010;
  *(void *)(inited + 40) = 0x8000000100C98BE0;
  uint64_t v4 = type metadata accessor for AppConfiguration();
  *(void *)(inited + 72) = v4;
  uint64_t v5 = sub_100170694((uint64_t *)(inited + 48));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(v5, v1, v4);
  Dictionary.init(dictionaryLiteral:)();
  a1[3] = sub_10017DF08(&qword_100EA55A8);
  a1[4] = sub_10099FF6C();
  sub_100170694(a1);
  type metadata accessor for AppConfigurationState();
  return ShortDescription.init(name:_:)();
}

uint64_t sub_10099FDD8()
{
  sub_10099FFC0(&qword_100EA55B8, (void (*)(uint64_t))type metadata accessor for AppConfigurationState);

  return ShortDescribable.description.getter();
}

uint64_t sub_10099FE44()
{
  return sub_1008BF624();
}

uint64_t sub_10099FE5C()
{
  return sub_1008BF60C();
}

uint64_t sub_10099FE74()
{
  return sub_10099FFC0(&qword_100EA5580, (void (*)(uint64_t))type metadata accessor for AppConfigurationState);
}

unint64_t sub_10099FEBC()
{
  unint64_t result = qword_100EA5590;
  if (!qword_100EA5590)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA5590);
  }
  return result;
}

uint64_t sub_10099FF08(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AppConfigurationState();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_10099FF6C()
{
  unint64_t result = qword_100EA55B0;
  if (!qword_100EA55B0)
  {
    sub_10018C6DC(&qword_100EA55A8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA55B0);
  }
  return result;
}

uint64_t sub_10099FFC0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for AppConfigurationState.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1009A00A4);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for AppConfigurationState.CodingKeys()
{
  return &type metadata for AppConfigurationState.CodingKeys;
}

unint64_t sub_1009A00E0()
{
  unint64_t result = qword_100EA55C0;
  if (!qword_100EA55C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA55C0);
  }
  return result;
}

unint64_t sub_1009A0130()
{
  unint64_t result = qword_100EA55C8;
  if (!qword_100EA55C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA55C8);
  }
  return result;
}

unint64_t sub_1009A0180()
{
  unint64_t result = qword_100EA55D0;
  if (!qword_100EA55D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA55D0);
  }
  return result;
}

ValueMetadata *type metadata accessor for SunriseSunsetDaylightCalculator()
{
  return &type metadata for SunriseSunsetDaylightCalculator;
}

uint64_t sub_1009A01DC(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = type metadata accessor for SunriseSunsetDaylightCalculator.SunActivity(0);
  uint64_t v53 = *(void *)(v4 - 8);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = sub_10017DF08(&qword_100E6CD98);
  __chkstk_darwin(v52);
  uint64_t v62 = (char *)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  char v64 = (char *)&v47 - v9;
  __chkstk_darwin(v10);
  uint64_t v61 = (uint64_t)&v47 - v11;
  __chkstk_darwin(v12);
  uint64_t v51 = (char *)&v47 - v13;
  sub_100215188(a1, v65);
  uint64_t v54 = v65[0];
  uint64_t v48 = v65[1];
  int64_t v55 = v65[3];
  unint64_t v14 = v65[4];
  int64_t v49 = (unint64_t)(v65[2] + 64) >> 6;
  swift_bridgeObjectRetain();
  uint64_t v63 = a2;
  uint64_t v50 = v6;
  if (!v14) {
    goto LABEL_3;
  }
LABEL_2:
  uint64_t v59 = (v14 - 1) & v14;
  unint64_t v15 = __clz(__rbit64(v14)) | (v55 << 6);
  while (1)
  {
    uint64_t v20 = *(void *)(v54 + 48);
    uint64_t v21 = type metadata accessor for Date();
    int v58 = *(void **)(v21 - 8);
    uint64_t v56 = v58[9];
    uint64_t v22 = (void (*)(void))v58[2];
    uint64_t v23 = v51;
    ((void (*)(char *, unint64_t, uint64_t))v22)(v51, v20 + v56 * v15, v21);
    uint64_t v24 = v52;
    uint64_t v60 = *(void *)(v53 + 72);
    sub_1009A8900();
    uint64_t v25 = (uint64_t)v23;
    uint64_t v26 = v61;
    sub_10024D364(v25, v61, &qword_100E6CD98);
    uint64_t v27 = (uint64_t)&v64[*(int *)(v24 + 48)];
    ((void (*)(char *, uint64_t, uint64_t))v22)(v64, v26, v21);
    uint64_t v57 = v27;
    sub_1009A8900();
    v22();
    sub_1009A8900();
    uint64_t v28 = (uint64_t)v50;
    sub_1009A8894();
    CGFloat v29 = v63;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v66 = *v29;
    uint64_t v31 = v66;
    uint64_t *v29 = 0x8000000000000000;
    unint64_t v32 = sub_100246B34();
    uint64_t v34 = *(void *)(v31 + 16);
    BOOL v35 = (v33 & 1) == 0;
    Swift::Int v36 = v34 + v35;
    if (__OFADD__(v34, v35)) {
      break;
    }
    unint64_t v37 = v32;
    char v38 = v33;
    sub_10017DF08(&qword_100E63AC0);
    if (_NativeDictionary.ensureUnique(isUnique:capacity:)(isUniquelyReferenced_nonNull_native, v36))
    {
      unint64_t v39 = sub_100246B34();
      if ((v38 & 1) != (v40 & 1)) {
        goto LABEL_33;
      }
      unint64_t v37 = v39;
    }
    uint64_t v41 = v66;
    if (v38)
    {
      sub_1009A89A4(v28, *(void *)(v66 + 56) + v37 * v60);
    }
    else
    {
      *(void *)(v66 + 8 * (v37 >> 6) + 64) |= 1 << v37;
      ((void (*)(unint64_t, char *, uint64_t))v22)(*(void *)(v41 + 48) + v37 * v56, v64, v21);
      sub_1009A8894();
      uint64_t v42 = *(void *)(v41 + 16);
      BOOL v43 = __OFADD__(v42, 1);
      uint64_t v44 = v42 + 1;
      if (v43) {
        goto LABEL_31;
      }
      *(void *)(v41 + 16) = v44;
      uint64_t v41 = v66;
    }
    *uint64_t v63 = v41;
    swift_bridgeObjectRelease();
    uint64_t v45 = (void (*)(char *, uint64_t))v58[1];
    v45(v64, v21);
    v45(v62, v21);
    sub_1009A894C(v57, (void (*)(void))type metadata accessor for SunriseSunsetDaylightCalculator.SunActivity);
    sub_1001781AC(v61, &qword_100E6CD98);
    unint64_t v14 = v59;
    if (v59) {
      goto LABEL_2;
    }
LABEL_3:
    int64_t v16 = v55 + 1;
    if (__OFADD__(v55, 1)) {
      goto LABEL_32;
    }
    if (v16 >= v49) {
      return swift_release();
    }
    unint64_t v17 = *(void *)(v48 + 8 * v16);
    int64_t v18 = v55 + 1;
    if (!v17)
    {
      int64_t v18 = v55 + 2;
      if (v55 + 2 >= v49) {
        return swift_release();
      }
      unint64_t v17 = *(void *)(v48 + 8 * v18);
      if (!v17)
      {
        int64_t v18 = v55 + 3;
        if (v55 + 3 >= v49) {
          return swift_release();
        }
        unint64_t v17 = *(void *)(v48 + 8 * v18);
        if (!v17)
        {
          int64_t v18 = v55 + 4;
          if (v55 + 4 >= v49) {
            return swift_release();
          }
          unint64_t v17 = *(void *)(v48 + 8 * v18);
          if (!v17)
          {
            int64_t v18 = v55 + 5;
            if (v55 + 5 >= v49) {
              return swift_release();
            }
            unint64_t v17 = *(void *)(v48 + 8 * v18);
            if (!v17)
            {
              int64_t v19 = v55 + 6;
              while (v19 < v49)
              {
                unint64_t v17 = *(void *)(v48 + 8 * v19++);
                if (v17)
                {
                  int64_t v18 = v19 - 1;
                  goto LABEL_18;
                }
              }
              return swift_release();
            }
          }
        }
      }
    }
LABEL_18:
    uint64_t v59 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v18 << 6);
    int64_t v55 = v18;
  }
  __break(1u);
LABEL_31:
  __break(1u);
LABEL_32:
  __break(1u);
LABEL_33:
  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

void sub_1009A07FC(uint64_t *a1)
{
  uint64_t v2 = *(void *)(sub_10017DF08(&qword_100E6CD98) - 8);
  uint64_t v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_1003152A8();
    uint64_t v3 = v4;
  }
  uint64_t v5 = *(void *)(v3 + 16);
  v6[0] = v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v6[1] = v5;
  sub_1009A7128(v6);
  *a1 = v3;
}

uint64_t sub_1009A08A8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v32 = type metadata accessor for DateComponents();
  sub_10017C83C();
  uint64_t v5 = v4;
  __chkstk_darwin(v6);
  sub_1001626E0();
  uint64_t v9 = v8 - v7;
  uint64_t v10 = type metadata accessor for TimeZone();
  sub_10017C83C();
  uint64_t v12 = v11;
  __chkstk_darwin(v13);
  sub_100163770();
  uint64_t v14 = type metadata accessor for Calendar();
  sub_10017C83C();
  uint64_t v16 = v15;
  __chkstk_darwin(v17);
  sub_1001626E0();
  uint64_t v20 = v19 - v18;
  uint64_t v31 = a1;
  Location.timeZone.getter();
  static Calendar.currentCalendar(with:)();
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v2, v10);
  sub_10017DF08(&qword_100E65238);
  uint64_t v21 = type metadata accessor for Calendar.Component();
  sub_10017C83C();
  uint64_t v23 = v22;
  unint64_t v24 = (*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
  uint64_t v25 = swift_allocObject();
  *(_OWORD *)(v25 + 16) = xmmword_100C251B0;
  (*(void (**)(unint64_t, void, uint64_t))(v23 + 104))(v25 + v24, enum case for Calendar.Component.year(_:), v21);
  sub_1000EEDB0(v25);
  Calendar.dateComponents(_:from:)();
  swift_bridgeObjectRelease();
  uint64_t v26 = (void (**)(char *, char *, uint64_t))DateComponents.year.getter();
  if (v27)
  {
    sub_1009A8124();
    swift_allocError();
    *uint64_t v28 = 0;
    swift_willThrow();
  }
  else
  {
    sub_1009A0B38(v31, v26, a2);
  }
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v9, v32);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 8))(v20, v14);
}

uint64_t sub_1009A0B38@<X0>(uint64_t a1@<X0>, void (**a2)(char *, char *, uint64_t)@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v7 = type metadata accessor for MaxDaylight(0);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for TimeZone();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v21 - v15;
  uint64_t result = sub_1009A0D7C(a1, a2);
  if (!v3)
  {
    uint64_t v18 = result;
    Location.timeZone.getter();
    uint64_t v23 = sub_1009A20D8(v18, (uint64_t)v16);
    uint64_t v22 = a3;
    uint64_t v19 = *(void (**)(char *, uint64_t))(v11 + 8);
    v19(v16, v10);
    Location.timeZone.getter();
    sub_1009A21B4(v18, (uint64_t)v13, v9);
    v19(v13, v10);
    swift_bridgeObjectRelease();
    type metadata accessor for DaylightData(0);
    uint64_t v20 = v22;
    uint64_t result = sub_1009A8894();
    uint64_t *v20 = v23;
  }
  return result;
}

uint64_t sub_1009A0D7C(uint64_t a1, void (**a2)(char *, char *, uint64_t))
{
  uint64_t v151 = a2;
  uint64_t v154 = sub_10017DF08(&qword_100EA55E8);
  __chkstk_darwin(v154);
  uint64_t v153 = (uint64_t)v121 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  char v152 = (char *)v121 - v5;
  uint64_t v6 = sub_10017DF08(&qword_100E6D1D8);
  __chkstk_darwin(v6 - 8);
  uint64_t v134 = (uint64_t)v121 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10017DF08(&qword_100E7D438);
  __chkstk_darwin(v8 - 8);
  uint64_t v144 = (uint64_t)v121 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v150 = (void *)type metadata accessor for Calendar.Component();
  uint64_t v147 = *(v150 - 1);
  __chkstk_darwin(v150);
  uint64_t v145 = (char *)v121 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v139 = (char *)v121 - v12;
  uint64_t v13 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  __chkstk_darwin(v13 - 8);
  char v129 = (char *)v121 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v133 = (char *)v121 - v16;
  __chkstk_darwin(v17);
  char v149 = (char *)v121 - v18;
  __chkstk_darwin(v19);
  uint64_t v21 = (char *)v121 - v20;
  uint64_t v22 = type metadata accessor for Date();
  uint64_t v155 = *(void *)(v22 - 8);
  __chkstk_darwin(v22);
  uint64_t v123 = (char *)v121 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  uint64_t v128 = (void (*)(unint64_t, char *, uint64_t))((char *)v121 - v25);
  __chkstk_darwin(v26);
  uint64_t v132 = (void (*)(unint64_t, char *, uint64_t))((char *)v121 - v27);
  __chkstk_darwin(v28);
  char v140 = (void (*)(unint64_t, char *, uint64_t))((char *)v121 - v29);
  __chkstk_darwin(v30);
  uint64_t v146 = (char *)v121 - v31;
  uint64_t v142 = type metadata accessor for DateComponents();
  uint64_t v127 = *(void *)(v142 - 8);
  __chkstk_darwin(v142);
  uint64_t v138 = (char *)v121 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v33);
  BOOL v35 = (char *)v121 - v34;
  uint64_t v36 = type metadata accessor for TimeZone();
  uint64_t v37 = *(void *)(v36 - 8);
  __chkstk_darwin(v36);
  unint64_t v39 = (char *)v121 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v148 = type metadata accessor for Calendar();
  uint64_t v126 = *(void *)(v148 - 8);
  __chkstk_darwin(v148);
  uint64_t v41 = (char *)v121 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  Location.timeZone.getter();
  static Calendar.currentCalendar(with:)();
  uint64_t v42 = *(void (**)(char *, uint64_t))(v37 + 8);
  v42(v39, v36);
  uint64_t v124 = a1;
  Location.timeZone.getter();
  sub_100BF14B8((uint64_t)v39, (uint64_t)v41, (uint64_t)v151);
  uint64_t v143 = v36;
  v42(v39, v36);
  uint64_t v43 = v22;
  Calendar.date(from:)();
  int v44 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v21, 1, v22);
  uint64_t v141 = v41;
  if (v44 == 1)
  {
    sub_1001781AC((uint64_t)v21, (uint64_t *)&unk_100E73CA0);
    sub_1009A8124();
    swift_allocError();
    unsigned char *v45 = 0;
    swift_willThrow();
    uint64_t v46 = v142;
    uint64_t v47 = v148;
    uint64_t v48 = v126;
LABEL_58:
    (*(void (**)(char *, uint64_t))(v127 + 8))(v35, v46);
    return (*(uint64_t (**)(char *, uint64_t))(v48 + 8))(v141, v47);
  }
  v121[0] = v35;
  uint64_t v49 = v155;
  uint64_t v50 = *(void (**)(void, uint64_t, uint64_t))(v155 + 32);
  uint64_t v137 = v155 + 32;
  uint64_t v136 = v50;
  v50(v146, (uint64_t)v21, v43);
  uint64_t v51 = v147;
  uint64_t v52 = *(void (**)(char *, void, void *))(v147 + 104);
  uint64_t v53 = v139;
  uint64_t v54 = v150;
  v52(v139, enum case for Calendar.Component.month(_:), v150);
  int64_t v55 = v145;
  v52(v145, enum case for Calendar.Component.year(_:), v54);
  uint64_t v151 = (void (**)(char *, char *, uint64_t))Calendar.range(of:in:for:)();
  uint64_t v57 = v56;
  char v59 = v58;
  uint64_t v60 = *(void *)(v51 + 8);
  ((void (*)(char *, void *))v60)(v55, v54);
  ((void (*)(char *, void *))v60)(v53, v54);
  if (v59)
  {
    sub_1009A8124();
    swift_allocError();
    *uint64_t v119 = 0;
    swift_willThrow();
    (*(void (**)(char *, uint64_t))(v49 + 8))(v146, v43);
    uint64_t v46 = v142;
    uint64_t v47 = v148;
    uint64_t v48 = v126;
    BOOL v35 = (char *)v121[0];
    goto LABEL_58;
  }
  BOOL v61 = __OFSUB__(v57, v151);
  uint64_t v62 = (char *)(v57 - (void)v151);
  if (!v61)
  {
    sub_10017DF08(&qword_100EA55F0);
    sub_1001457CC((unint64_t *)&qword_100E63978);
    uint64_t v147 = v43;
    uint64_t v63 = Dictionary.init(dictionaryLiteral:)();
    if (((unint64_t)v62 & 0x8000000000000000) != 0) {
      goto LABEL_63;
    }
    uint64_t v125 = (void *)v63;
    if (!v62)
    {
LABEL_59:
      (*(void (**)(char *, uint64_t))(v155 + 8))(v146, v147);
      (*(void (**)(void, uint64_t))(v127 + 8))(v121[0], v142);
      (*(void (**)(char *, uint64_t))(v126 + 8))(v141, v148);
      return (uint64_t)v125;
    }
    char v64 = 0;
    uint64_t v139 = (char *)(v127 + 8);
    uint64_t v151 = (void (**)(char *, char *, uint64_t))(v155 + 16);
    uint64_t v131 = (void (**)(void (*)(unint64_t, char *, uint64_t), uint64_t))(v155 + 8);
    uint64_t v60 = 1;
    uint64_t v65 = v134;
    uint64_t v66 = v143;
    uint64_t v135 = v62;
    while (v64 != v62)
    {
      _s7Weather24LocationCompositionStateOwst_0(v144, 1, 1, v148);
      _s7Weather24LocationCompositionStateOwst_0(v65, 1, 1, v66);
      uint64_t v67 = v138;
      uint64_t v68 = v147;
      uint64_t v145 = v64 + 1;
      DateComponents.init(calendar:timeZone:era:year:month:day:hour:minute:second:nanosecond:weekday:weekdayOrdinal:quarter:weekOfMonth:weekOfYear:yearForWeekOfYear:)();
      uint64_t v69 = (uint64_t)v141;
      Calendar.date(byAdding:to:wrappingComponents:)();
      uint64_t v70 = (uint64_t)v149;
      uint64_t v71 = v142;
      unint64_t v150 = *(void **)v139;
      ((void (*)(char *, uint64_t))v150)(v67, v142);
      if (_s7Weather24LocationCompositionStateOwet_0(v70, 1, v68) == 1)
      {
        sub_1001781AC(v70, (uint64_t *)&unk_100E73CA0);
        if (qword_100E627E8 != -1) {
          swift_once();
        }
        uint64_t v72 = type metadata accessor for Logger();
        sub_1002102B0(v72, (uint64_t)qword_100F51ED0);
        uint64_t v73 = Logger.logObject.getter();
        os_log_type_t v74 = static os_log_type_t.error.getter();
        BOOL v75 = os_log_type_enabled(v73, v74);
        uint64_t v66 = v143;
        uint64_t v60 = 1;
        uint64_t v76 = v145;
        if (v75)
        {
          uint64_t v77 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v77 = 0;
          _os_log_impl((void *)&_mh_execute_header, v73, v74, "Failed to create beginningOfTheNextMonth", v77, 2u);
          swift_slowDealloc();
        }
      }
      else
      {
        uint64_t v78 = v147;
        v136(v140, v70, v147);
        _s7Weather24LocationCompositionStateOwst_0(v144, 1, 1, v148);
        _s7Weather24LocationCompositionStateOwst_0(v65, 1, 1, v143);
        DateComponents.init(calendar:timeZone:era:year:month:day:hour:minute:second:nanosecond:weekday:weekdayOrdinal:quarter:weekOfMonth:weekOfYear:yearForWeekOfYear:)();
        uint64_t v79 = v78;
        uint64_t v80 = (uint64_t)v133;
        uint64_t v81 = v69;
        Calendar.date(byAdding:to:wrappingComponents:)();
        ((void (*)(char *, uint64_t))v150)(v67, v71);
        if (_s7Weather24LocationCompositionStateOwet_0(v80, 1, v79) == 1)
        {
          uint64_t v65 = v134;
          sub_1001781AC(v80, (uint64_t *)&unk_100E73CA0);
          if (qword_100E627E8 != -1) {
            swift_once();
          }
          uint64_t v82 = type metadata accessor for Logger();
          sub_1002102B0(v82, (uint64_t)qword_100F51ED0);
          uint64_t v83 = Logger.logObject.getter();
          os_log_type_t v84 = static os_log_type_t.error.getter();
          BOOL v85 = os_log_type_enabled(v83, v84);
          uint64_t v66 = v143;
          uint64_t v60 = 1;
          uint64_t v76 = v145;
          if (v85)
          {
            uint64_t v86 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)uint64_t v86 = 0;
            _os_log_impl((void *)&_mh_execute_header, v83, v84, "Failed to create beginningOfTheMonth", v86, 2u);
            swift_slowDealloc();
          }

          (*v131)(v140, v147);
        }
        else
        {
          uint64_t v87 = v71;
          uint64_t v60 = (uint64_t)v132;
          v136(v132, v80, v79);
          _s7Weather24LocationCompositionStateOwst_0(v144, 1, 1, v148);
          uint64_t v65 = v134;
          uint64_t v66 = v143;
          _s7Weather24LocationCompositionStateOwst_0(v134, 1, 1, v143);
          DateComponents.init(calendar:timeZone:era:year:month:day:hour:minute:second:nanosecond:weekday:weekdayOrdinal:quarter:weekOfMonth:weekOfYear:yearForWeekOfYear:)();
          uint64_t v88 = (uint64_t)v129;
          Calendar.date(byAdding:to:wrappingComponents:)();
          ((void (*)(char *, uint64_t))v150)(v67, v87);
          if (_s7Weather24LocationCompositionStateOwet_0(v88, 1, v79) != 1)
          {
            uint64_t v95 = (uint64_t)v128;
            uint64_t v96 = v79;
            v136(v128, v88, v79);
            uint64_t v97 = sub_1009A53F8(v124, v95, v140, v81);
            uint64_t v157 = &_swiftEmptyDictionarySingleton;
            sub_100215188(v97, v156);
            uint64_t v98 = v156[0];
            unint64_t v150 = (void *)v156[1];
            int64_t v99 = v156[3];
            unint64_t v100 = v156[4];
            int64_t v101 = (unint64_t)(v156[2] + 64) >> 6;
            v121[1] = v97;
            swift_bridgeObjectRetain();
            uint64_t v102 = v130;
            if (v100)
            {
LABEL_31:
              unint64_t v103 = __clz(__rbit64(v100));
              v100 &= v100 - 1;
              unint64_t v104 = v103 | (v99 << 6);
              goto LABEL_45;
            }
            while (1)
            {
              int64_t v105 = v99 + 1;
              if (__OFADD__(v99, 1)) {
                break;
              }
              if (v105 >= v101) {
                goto LABEL_54;
              }
              unint64_t v106 = v150[v105];
              if (!v106)
              {
                int64_t v107 = v99 + 2;
                if (v99 + 2 >= v101) {
                  goto LABEL_54;
                }
                unint64_t v106 = v150[v107];
                if (v106) {
                  goto LABEL_43;
                }
                int64_t v107 = v99 + 3;
                if (v99 + 3 >= v101) {
                  goto LABEL_54;
                }
                unint64_t v106 = v150[v107];
                if (v106) {
                  goto LABEL_43;
                }
                int64_t v107 = v99 + 4;
                if (v99 + 4 >= v101) {
                  goto LABEL_54;
                }
                unint64_t v106 = v150[v107];
                if (v106) {
                  goto LABEL_43;
                }
                int64_t v107 = v99 + 5;
                if (v99 + 5 >= v101) {
                  goto LABEL_54;
                }
                unint64_t v106 = v150[v107];
                if (v106)
                {
LABEL_43:
                  int64_t v105 = v107;
                }
                else
                {
                  int64_t v105 = v99 + 6;
                  if (v99 + 6 >= v101)
                  {
LABEL_54:
                    uint64_t v130 = v102;
                    uint64_t v66 = v143;
LABEL_55:
                    swift_bridgeObjectRelease();
                    swift_release();
                    uint64_t v112 = (uint64_t)v157;
                    uint64_t v113 = (uint64_t)v123;
                    uint64_t v114 = v132;
                    uint64_t v115 = v147;
                    (*v151)(v123, (char *)v132, v147);
                    uint64_t v116 = v125;
                    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                    uint64_t v157 = v116;
                    sub_100248580(v112, v113, isUniquelyReferenced_nonNull_native);
                    uint64_t v125 = v157;
                    swift_bridgeObjectRelease();
                    uint64_t v118 = *v131;
                    (*v131)((void (*)(unint64_t, char *, uint64_t))v113, v115);
                    v118(v128, v115);
                    v118(v114, v115);
                    v118(v140, v115);
                    uint64_t v62 = v135;
                    uint64_t v60 = 1;
                    uint64_t v76 = v145;
                    uint64_t v65 = v134;
                    goto LABEL_28;
                  }
                  unint64_t v106 = v150[v105];
                  if (!v106)
                  {
                    int64_t v111 = v99 + 7;
                    uint64_t v66 = v143;
                    while (v111 < v101)
                    {
                      unint64_t v106 = v150[v111++];
                      if (v106)
                      {
                        int64_t v105 = v111 - 1;
                        goto LABEL_44;
                      }
                    }
                    uint64_t v130 = v102;
                    goto LABEL_55;
                  }
                }
              }
LABEL_44:
              unint64_t v100 = (v106 - 1) & v106;
              unint64_t v104 = __clz(__rbit64(v106)) + (v105 << 6);
              int64_t v99 = v105;
LABEL_45:
              uint64_t v108 = (uint64_t)v152;
              (*(void (**)(char *, unint64_t, uint64_t))(v155 + 16))(v152, *(void *)(v98 + 48) + *(void *)(v155 + 72) * v104, v96);
              uint64_t v109 = *(void *)(v98 + 56);
              uint64_t v110 = type metadata accessor for CLLocationCoordinate2D.SolarEvents();
              (*(void (**)(uint64_t, unint64_t, uint64_t))(*(void *)(v110 - 8) + 16))(v108 + *(int *)(v154 + 48), v109 + *(void *)(*(void *)(v110 - 8) + 72) * v104, v110);
              uint64_t v60 = v153;
              sub_10024D364(v108, v153, &qword_100EA55E8);
              sub_1009A5A34((uint64_t)&v157, v60);
              if (v102) {
                goto LABEL_64;
              }
              uint64_t v102 = 0;
              sub_1001781AC(v60, &qword_100EA55E8);
              if (v100) {
                goto LABEL_31;
              }
            }
            __break(1u);
            break;
          }
          sub_1001781AC(v88, (uint64_t *)&unk_100E73CA0);
          uint64_t v76 = v145;
          if (qword_100E627E8 != -1) {
            swift_once();
          }
          uint64_t v89 = type metadata accessor for Logger();
          sub_1002102B0(v89, (uint64_t)qword_100F51ED0);
          uint64_t v90 = Logger.logObject.getter();
          os_log_type_t v91 = static os_log_type_t.error.getter();
          uint64_t v60 = 1;
          if (os_log_type_enabled(v90, v91))
          {
            uint64_t v92 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)uint64_t v92 = 0;
            _os_log_impl((void *)&_mh_execute_header, v90, v91, "Failed to create endingOfThePreviousMonth", v92, 2u);
            swift_slowDealloc();
          }

          uint64_t v93 = *v131;
          uint64_t v94 = v147;
          (*v131)(v132, v147);
          v93(v140, v94);
        }
      }
      uint64_t v62 = v135;
LABEL_28:
      char v64 = v76;
      if (v76 == v62) {
        goto LABEL_59;
      }
    }
    __break(1u);
  }
  __break(1u);
LABEL_63:
  __break(1u);
LABEL_64:
  sub_1001781AC(v60, &qword_100EA55E8);
  swift_release();
  uint64_t result = swift_bridgeObjectRelease();
  __break(1u);
  return result;
}

uint64_t sub_1009A20D8(uint64_t a1, uint64_t a2)
{
  type metadata accessor for Date();
  type metadata accessor for MonthSunAverage(0);
  sub_1001457CC((unint64_t *)&qword_100E63978);
  uint64_t v8 = Dictionary.init(dictionaryLiteral:)();
  v7[2] = a2;
  v7[3] = &v8;
  sub_10031F7B4((void (*)(char *))sub_1009A8A28, (uint64_t)v7, a1);
  uint64_t v5 = v8;
  if (v2) {
    swift_bridgeObjectRelease();
  }
  return v5;
}

uint64_t sub_1009A21B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v149 = a2;
  uint64_t v127 = a3;
  uint64_t v120 = type metadata accessor for EdgeSunEvents(0);
  __chkstk_darwin(v120);
  uint64_t v121 = (char *)&v118 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v140 = type metadata accessor for SunriseSunsetDaylightCalculator.TimeRange(0);
  __chkstk_darwin(v140);
  uint64_t v148 = (char *)&v118 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v155 = (char *)type metadata accessor for Date();
  uint64_t v6 = *((void *)v155 - 1);
  __chkstk_darwin(v155);
  uint64_t v119 = (char *)&v118 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v122 = (char *)&v118 - v9;
  __chkstk_darwin(v10);
  uint64_t v135 = (char *)&v118 - v11;
  __chkstk_darwin(v12);
  uint64_t v126 = (char *)&v118 - v13;
  __chkstk_darwin(v14);
  uint64_t v130 = (char *)&v118 - v15;
  uint64_t v16 = sub_10017DF08(&qword_100EA55E0);
  __chkstk_darwin(v16 - 8);
  uint64_t v131 = (char *)&v118 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v151 = (uint64_t)&v118 - v19;
  uint64_t v141 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  __chkstk_darwin(v141);
  uint64_t v138 = (char *)&v118 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  uint64_t v123 = (uint64_t)&v118 - v22;
  __chkstk_darwin(v23);
  uint64_t v128 = (uint64_t)&v118 - v24;
  __chkstk_darwin(v25);
  uint64_t v137 = (char *)&v118 - v26;
  __chkstk_darwin(v27);
  uint64_t v136 = (uint64_t)&v118 - v28;
  __chkstk_darwin(v29);
  uint64_t v147 = (uint64_t)&v118 - v30;
  __chkstk_darwin(v31);
  uint64_t v145 = (uint64_t)&v118 - v32;
  __chkstk_darwin(v33);
  uint64_t v146 = (uint64_t)&v118 - v34;
  uint64_t v134 = type metadata accessor for Calendar();
  uint64_t v133 = *(void *)(v134 - 8);
  __chkstk_darwin(v134);
  uint64_t v150 = (uint64_t)&v118 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = sub_10017DF08(&qword_100E6CD90);
  __chkstk_darwin(v36);
  uint64_t v38 = (char *)&v118 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v39);
  uint64_t v41 = (char *)&v118 - v40;
  char v156 = &_swiftEmptyDictionarySingleton;
  sub_100215188(a1, v157);
  uint64_t v42 = v157[0];
  uint64_t v43 = v157[3];
  unint64_t v44 = v157[4];
  uint64_t v152 = v157[1];
  uint64_t v153 = (unint64_t)(v157[2] + 64) >> 6;
  uint64_t v154 = v6;
  swift_bridgeObjectRetain();
  if (!v44) {
    goto LABEL_3;
  }
LABEL_2:
  unint64_t v45 = __clz(__rbit64(v44));
  v44 &= v44 - 1;
  unint64_t v46 = v45 | (v43 << 6);
  while (1)
  {
    (*(void (**)(char *, unint64_t, char *))(v154 + 16))(v41, *(void *)(v42 + 48) + *(void *)(v154 + 72) * v46, v155);
    *(void *)&v41[*(int *)(v36 + 48)] = *(void *)(*(void *)(v42 + 56) + 8 * v46);
    sub_10024D364((uint64_t)v41, (uint64_t)v38, &qword_100E6CD90);
    uint64_t v51 = *(void *)&v38[*(int *)(v36 + 48)];
    swift_bridgeObjectRetain();
    uint64_t v52 = v51;
    uint64_t v53 = v158;
    sub_1009A01DC(v52, (uint64_t *)&v156);
    uint64_t v158 = v53;
    sub_1001781AC((uint64_t)v38, &qword_100E6CD90);
    if (v44) {
      goto LABEL_2;
    }
LABEL_3:
    uint64_t v47 = v43 + 1;
    if (__OFADD__(v43, 1))
    {
      __break(1u);
LABEL_49:
      uint64_t result = swift_release();
      __break(1u);
      return result;
    }
    if (v47 >= v153)
    {
      uint64_t v49 = (uint64_t)v148;
      goto LABEL_25;
    }
    unint64_t v48 = *(void *)(v152 + 8 * v47);
    uint64_t v49 = (uint64_t)v148;
    if (!v48)
    {
      uint64_t v50 = v43 + 2;
      if (v43 + 2 >= v153) {
        goto LABEL_25;
      }
      unint64_t v48 = *(void *)(v152 + 8 * v50);
      if (v48) {
        goto LABEL_14;
      }
      uint64_t v50 = v43 + 3;
      if (v43 + 3 >= v153) {
        goto LABEL_25;
      }
      unint64_t v48 = *(void *)(v152 + 8 * v50);
      if (v48) {
        goto LABEL_14;
      }
      uint64_t v50 = v43 + 4;
      if (v43 + 4 >= v153) {
        goto LABEL_25;
      }
      unint64_t v48 = *(void *)(v152 + 8 * v50);
      if (v48) {
        goto LABEL_14;
      }
      uint64_t v50 = v43 + 5;
      if (v43 + 5 >= v153) {
        goto LABEL_25;
      }
      unint64_t v48 = *(void *)(v152 + 8 * v50);
      if (v48)
      {
LABEL_14:
        uint64_t v47 = v50;
        goto LABEL_15;
      }
      uint64_t v47 = v43 + 6;
      if (v43 + 6 >= v153) {
        goto LABEL_25;
      }
      unint64_t v48 = *(void *)(v152 + 8 * v47);
      if (!v48) {
        break;
      }
    }
LABEL_15:
    unint64_t v44 = (v48 - 1) & v48;
    unint64_t v46 = __clz(__rbit64(v48)) + (v47 << 6);
    uint64_t v43 = v47;
  }
  uint64_t v54 = v43 + 7;
  while (v54 < v153)
  {
    unint64_t v48 = *(void *)(v152 + 8 * v54++);
    if (v48)
    {
      uint64_t v47 = v54 - 1;
      goto LABEL_15;
    }
  }
LABEL_25:
  swift_release();
  uint64_t v55 = swift_bridgeObjectRetain();
  uint64_t v56 = sub_100903718(v55);
  swift_bridgeObjectRelease();
  char v156 = v56;
  uint64_t v57 = v158;
  sub_1009A07FC((uint64_t *)&v156);
  uint64_t v58 = v151;
  char v59 = v155;
  uint64_t v60 = v147;
  uint64_t v139 = v57;
  if (v57) {
    goto LABEL_49;
  }
  swift_bridgeObjectRelease();
  BOOL v61 = v156;
  static Calendar.currentCalendar(with:)();
  uint64_t v62 = swift_allocBox();
  _s7Weather24LocationCompositionStateOwst_0(v63, 1, 1, (uint64_t)v59);
  uint64_t v144 = swift_allocBox();
  _s7Weather24LocationCompositionStateOwst_0(v64, 1, 1, (uint64_t)v59);
  uint64_t v143 = swift_allocObject();
  *(void *)(v143 + 16) = 0;
  uint64_t v142 = swift_allocBox();
  uint64_t v132 = v65;
  _s7Weather24LocationCompositionStateOwst_0(v65, 1, 1, (uint64_t)v59);
  uint64_t v141 = swift_allocBox();
  uint64_t v129 = v66;
  _s7Weather24LocationCompositionStateOwst_0(v66, 1, 1, (uint64_t)v59);
  uint64_t v67 = swift_allocObject();
  *(void *)(v67 + 16) = 0;
  _s7Weather24LocationCompositionStateOwst_0(v146, 1, 1, (uint64_t)v59);
  _s7Weather24LocationCompositionStateOwst_0(v58, 1, 1, v140);
  _s7Weather24LocationCompositionStateOwst_0(v145, 1, 1, (uint64_t)v59);
  _s7Weather24LocationCompositionStateOwst_0(v60, 1, 1, (uint64_t)v59);
  uint64_t v69 = v61[2];
  uint64_t v158 = v62;
  uint64_t v153 = v67;
  if (v69)
  {
    uint64_t v124 = v68;
    uint64_t v70 = *(void *)(sub_10017DF08(&qword_100E6CD98) - 8);
    uint64_t v71 = (char *)v61 + ((*(unsigned __int8 *)(v70 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v70 + 80));
    uint64_t v152 = *(void *)(v70 + 72);
    uint64_t v125 = v61;
    swift_retain();
    uint64_t v73 = v146;
    uint64_t v72 = v147;
    uint64_t v74 = v145;
    BOOL v75 = (uint64_t (*)(uint64_t))v144;
    uint64_t v76 = v139;
    uint64_t v77 = (char *)v143;
    uint64_t v78 = v142;
    uint64_t v79 = v141;
    do
    {
      sub_1009A3510(v71, v158, v149, v75, v77, v153, v78, v79, v74, v150, v72, v151, v73);
      v71 += v152;
      --v69;
    }
    while (v69);
    uint64_t v139 = v76;
    swift_release();
    char v59 = v155;
    uint64_t v49 = (uint64_t)v148;
    uint64_t v67 = v153;
    uint64_t v68 = v124;
  }
  swift_release();
  sub_1009A32AC(v143, v67);
  id v80 = [objc_allocWithZone((Class)NSDateFormatter) init];
  [v80 setDateStyle:1];
  Class isa = TimeZone._bridgeToObjectiveC()().super.isa;
  uint64_t v155 = (char *)v80;
  [v80 setTimeZone:isa];

  uint64_t v82 = v132;
  swift_beginAccess();
  uint64_t v83 = v136;
  sub_10006DF38(v82, v136, (uint64_t *)&unk_100E73CA0);
  int v84 = _s7Weather24LocationCompositionStateOwet_0(v83, 1, (uint64_t)v59);
  uint64_t v85 = (uint64_t)v138;
  uint64_t v86 = (uint64_t)v137;
  if (v84 == 1)
  {
    uint64_t v86 = v83;
    uint64_t v87 = v151;
    uint64_t v88 = v147;
    uint64_t v89 = v135;
    uint64_t v90 = (uint64_t)v131;
    goto LABEL_34;
  }
  uint64_t v91 = v154;
  uint64_t v92 = *(void (**)(char *, uint64_t, id))(v154 + 32);
  uint64_t v93 = v130;
  v92(v130, v83, v59);
  uint64_t v94 = v129;
  swift_beginAccess();
  sub_10006DF38(v94, v86, (uint64_t *)&unk_100E73CA0);
  int v95 = _s7Weather24LocationCompositionStateOwet_0(v86, 1, (uint64_t)v59);
  uint64_t v89 = v135;
  if (v95 == 1)
  {
    (*(void (**)(char *, char *))(v91 + 8))(v93, v59);
    uint64_t v87 = v151;
    uint64_t v90 = (uint64_t)v131;
    uint64_t v88 = v147;
LABEL_34:
    sub_1001781AC(v86, (uint64_t *)&unk_100E73CA0);
    sub_10006DF38(v87, v90, &qword_100EA55E0);
    int v96 = _s7Weather24LocationCompositionStateOwet_0(v90, 1, v140);
    uint64_t v97 = v146;
    if (v96 == 1)
    {
      uint64_t v98 = &qword_100EA55E0;
      uint64_t v99 = v90;
      goto LABEL_38;
    }
    sub_1009A8894();
    uint64_t v100 = v128;
    sub_10006DF38(v97, v128, (uint64_t *)&unk_100E73CA0);
    if (_s7Weather24LocationCompositionStateOwet_0(v100, 1, (uint64_t)v59) == 1)
    {
      sub_1009A894C(v49, (void (*)(void))type metadata accessor for SunriseSunsetDaylightCalculator.TimeRange);
      uint64_t v98 = (uint64_t *)&unk_100E73CA0;
      uint64_t v99 = v100;
LABEL_38:
      sub_1001781AC(v99, v98);
LABEL_39:
      sub_1009A8124();
      swift_allocError();
      *int64_t v101 = 2;
      swift_willThrow();

      (*(void (**)(uint64_t, uint64_t))(v133 + 8))(v150, v134);
      sub_1001781AC(v88, (uint64_t *)&unk_100E73CA0);
      sub_1001781AC(v145, (uint64_t *)&unk_100E73CA0);
      sub_1001781AC(v87, &qword_100EA55E0);
      sub_1001781AC(v97, (uint64_t *)&unk_100E73CA0);
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      return swift_release();
    }
    uint64_t v106 = v154;
    uint64_t v107 = v100;
    uint64_t v108 = *(void (**)(char *, uint64_t, id))(v154 + 32);
    v108(v89, v107, v59);
    uint64_t v109 = v123;
    sub_10006DF38(v145, v123, (uint64_t *)&unk_100E73CA0);
    if (_s7Weather24LocationCompositionStateOwet_0(v109, 1, (uint64_t)v59) == 1)
    {
      (*(void (**)(char *, char *))(v106 + 8))(v89, v59);
LABEL_46:
      sub_1009A894C(v49, (void (*)(void))type metadata accessor for SunriseSunsetDaylightCalculator.TimeRange);
      sub_1001781AC(v109, (uint64_t *)&unk_100E73CA0);
      uint64_t v87 = v151;
      uint64_t v97 = v146;
      uint64_t v88 = v147;
      goto LABEL_39;
    }
    uint64_t v110 = v122;
    v108(v122, v109, v59);
    uint64_t v109 = v85;
    sub_10006DF38(v147, v85, (uint64_t *)&unk_100E73CA0);
    if (_s7Weather24LocationCompositionStateOwet_0(v85, 1, (uint64_t)v59) == 1)
    {
      int64_t v111 = *(void (**)(char *, id))(v154 + 8);
      v111(v110, v59);
      v111(v89, v59);
      goto LABEL_46;
    }

    uint64_t v112 = v110;
    uint64_t v113 = v119;
    v108(v119, v109, v59);
    uint64_t v114 = v121;
    v108(v121, (uint64_t)v112, v59);
    v108(&v114[*(int *)(v120 + 20)], (uint64_t)v113, v59);
    (*(void (**)(uint64_t, uint64_t))(v133 + 8))(v150, v134);
    uint64_t v115 = sub_10017DF08(&qword_100E96378);
    uint64_t v116 = v89;
    uint64_t v117 = &v127[*(int *)(v115 + 48)];
    uint64_t v155 = &v127[*(int *)(v115 + 64)];
    v108(v127, (uint64_t)v116, v59);
    v108(v117, v49, v59);
    v108(v155, v49 + *(int *)(v140 + 20), v59);
    sub_1009A8894();
  }
  else
  {

    (*(void (**)(uint64_t, uint64_t))(v133 + 8))(v150, v134);
    unint64_t v103 = v126;
    v92(v126, v86, v59);
    uint64_t v104 = sub_10017DF08(&qword_100E96358);
    int64_t v105 = &v127[*(int *)(v104 + 48)];
    v92(v127, (uint64_t)v93, v59);
    v92(v105, (uint64_t)v103, v59);
  }
  type metadata accessor for MaxDaylight(0);
  swift_storeEnumTagMultiPayload();
  sub_1001781AC(v147, (uint64_t *)&unk_100E73CA0);
  sub_1001781AC(v145, (uint64_t *)&unk_100E73CA0);
  sub_1001781AC(v151, &qword_100EA55E0);
  sub_1001781AC(v146, (uint64_t *)&unk_100E73CA0);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_1009A32AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = (uint64_t *)(a1 + 16);
  uint64_t v8 = swift_projectBox();
  uint64_t v9 = swift_projectBox();
  uint64_t v10 = swift_projectBox();
  uint64_t v11 = swift_projectBox();
  swift_beginAccess();
  uint64_t v12 = *(void *)(a1 + 16);
  swift_beginAccess();
  if (*(void *)(a2 + 16) < v12)
  {
    swift_beginAccess();
    sub_10006DF38(v9, (uint64_t)v6, (uint64_t *)&unk_100E73CA0);
    swift_beginAccess();
    sub_1001E75A0((uint64_t)v6, v8);
    swift_beginAccess();
    sub_10006DF38(v11, (uint64_t)v6, (uint64_t *)&unk_100E73CA0);
    swift_beginAccess();
    sub_1001E75A0((uint64_t)v6, v10);
    swift_beginAccess();
    uint64_t v13 = *v7;
    swift_beginAccess();
    *(void *)(a2 + 16) = v13;
  }
  uint64_t v14 = type metadata accessor for Date();
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v6, 1, 1, v14);
  swift_beginAccess();
  sub_1001E75A0((uint64_t)v6, v9);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v6, 1, 1, v14);
  swift_beginAccess();
  sub_1001E75A0((uint64_t)v6, v11);
  uint64_t result = swift_beginAccess();
  *uint64_t v7 = 0;
  return result;
}

uint64_t sub_1009A3510(char *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t a1), char *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v128 = a7;
  uint64_t v129 = a8;
  uint64_t v126 = a6;
  uint64_t v132 = a5;
  uint64_t v106 = a3;
  uint64_t v108 = a13;
  uint64_t v119 = a12;
  uint64_t v118 = a11;
  uint64_t v113 = a10;
  uint64_t v117 = a9;
  uint64_t v16 = sub_10017DF08(&qword_100EA55E0);
  __chkstk_darwin(v16 - 8);
  uint64_t v114 = (uint64_t)&v104 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v115 = type metadata accessor for SunriseSunsetDaylightCalculator.TimeRange(0);
  __chkstk_darwin(v115);
  uint64_t v107 = (char *)&v104 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v120 = (char *)&v104 - v20;
  uint64_t v21 = sub_10017DF08(&qword_100E6CD98);
  __chkstk_darwin(v21);
  uint64_t v116 = (char *)&v104 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  __chkstk_darwin(v23 - 8);
  uint64_t v111 = (uint64_t)&v104 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  uint64_t v110 = (uint64_t)&v104 - v26;
  __chkstk_darwin(v27);
  uint64_t v109 = (char *)&v104 - v28;
  __chkstk_darwin(v29);
  uint64_t v31 = (char *)&v104 - v30;
  uint64_t v125 = type metadata accessor for Date();
  uint64_t v131 = *(uint64_t (**)(uint64_t))(v125 - 8);
  __chkstk_darwin(v125);
  int64_t v105 = (char *)&v104 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v33);
  uint64_t v35 = (char *)&v104 - v34;
  __chkstk_darwin(v36);
  uint64_t v121 = (void (*)(char *, char *, uint64_t))((char *)&v104 - v37);
  __chkstk_darwin(v38);
  uint64_t v124 = (char *)&v104 - v39;
  __chkstk_darwin(v40);
  uint64_t v42 = (char *)&v104 - v41;
  uint64_t v43 = type metadata accessor for SunriseSunsetDaylightCalculator.SunActivity(0);
  __chkstk_darwin(v43);
  unint64_t v45 = (char *)&v104 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v127 = a2;
  uint64_t v46 = swift_projectBox();
  uint64_t v130 = a4;
  uint64_t v112 = swift_projectBox();
  uint64_t v47 = v132 + 16;
  uint64_t v123 = v21;
  uint64_t v48 = *(int *)(v21 + 48);
  uint64_t v122 = a1;
  uint64_t v49 = &a1[v48];
  sub_1009A8900();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v62 = sub_10017DF08(&qword_100E963A0);
      uint64_t v63 = (void (*)(char *, uint64_t))*((void *)v131 + 1);
      uint64_t v64 = v125;
      v63(&v45[*(int *)(v62 + 48)], v125);
      v63(v45, v64);
      return sub_1009A32AC((uint64_t)v132, v126);
    case 2u:
    case 3u:
      (*((void (**)(char *, uint64_t))v131 + 1))(v45, v125);
      return sub_1009A32AC((uint64_t)v132, v126);
    case 4u:
      return sub_1009A32AC((uint64_t)v132, v126);
    case 5u:
      uint64_t v124 = v47;
      uint64_t v104 = v49;
      uint64_t v66 = (void (*)(void, void, void))v132;
      uint64_t v67 = v46;
      swift_beginAccess();
      sub_10006DF38(v46, (uint64_t)v31, (uint64_t *)&unk_100E73CA0);
      uint64_t v68 = v125;
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v31, 1, v125) == 1)
      {
        sub_1001781AC((uint64_t)v31, (uint64_t *)&unk_100E73CA0);
        uint64_t v69 = v116;
        uint64_t v70 = (uint64_t)&v116[*(int *)(v123 + 48)];
        uint64_t v71 = v131;
        uint64_t v132 = (char *)*((void *)v131 + 2);
        ((void (*)(char *, char *, uint64_t))v132)(v116, v122, v68);
        uint64_t v130 = type metadata accessor for SunriseSunsetDaylightCalculator.SunActivity;
        sub_1009A8900();
        uint64_t v72 = (void (*)(char *, char *, uint64_t))*((void *)v71 + 4);
        uint64_t v73 = (uint64_t)v109;
        v72(v109, v69, v68);
        _s7Weather24LocationCompositionStateOwst_0(v73, 0, 1, v68);
        swift_beginAccess();
        sub_1001E75A0(v73, v46);
        sub_1009A894C(v70, (void (*)(void))type metadata accessor for SunriseSunsetDaylightCalculator.SunActivity);
        uint64_t v74 = (uint64_t)&v69[*(int *)(v123 + 48)];
        ((void (*)(char *, char *, uint64_t))v132)(v69, v122, v68);
        sub_1009A8900();
        v72((char *)v73, v69, v68);
      }
      else
      {
        uint64_t v79 = v123;
        id v80 = v131;
        uint64_t v121 = (void (*)(char *, char *, uint64_t))*((void *)v131 + 4);
        v121(v42, v31, v68);
        uint64_t v81 = v122;
        if (Date.isSameMonth(as:timeZone:)())
        {
          (*((void (**)(char *, uint64_t))v80 + 1))(v42, v68);
          uint64_t v82 = v116;
          uint64_t v74 = (uint64_t)&v116[*(int *)(v79 + 48)];
          (*((void (**)(char *, char *, uint64_t))v80 + 2))(v116, v81, v68);
          sub_1009A8900();
          uint64_t v73 = (uint64_t)v109;
          v121(v109, v82, v68);
          _s7Weather24LocationCompositionStateOwst_0(v73, 0, 1, v68);
          goto LABEL_25;
        }
        sub_1009A32AC((uint64_t)v66, v126);
        (*((void (**)(char *, uint64_t))v80 + 1))(v42, v68);
        uint64_t v98 = v116;
        uint64_t v99 = (uint64_t)&v116[*(int *)(v79 + 48)];
        uint64_t v132 = (char *)*((void *)v80 + 2);
        ((void (*)(char *, char *, uint64_t))v132)(v116, v81, v68);
        uint64_t v131 = type metadata accessor for SunriseSunsetDaylightCalculator.SunActivity;
        sub_1009A8900();
        uint64_t v100 = v67;
        uint64_t v73 = (uint64_t)v109;
        int64_t v101 = (void (*)(uint64_t, char *, uint64_t))v121;
        v121(v109, v98, v68);
        _s7Weather24LocationCompositionStateOwst_0(v73, 0, 1, v68);
        swift_beginAccess();
        sub_1001E75A0(v73, v100);
        sub_1009A894C(v99, (void (*)(void))type metadata accessor for SunriseSunsetDaylightCalculator.SunActivity);
        uint64_t v74 = (uint64_t)&v98[*(int *)(v123 + 48)];
        ((void (*)(char *, char *, uint64_t))v132)(v98, v81, v68);
        sub_1009A8900();
        v101(v73, v98, v68);
      }
      _s7Weather24LocationCompositionStateOwst_0(v73, 0, 1, v68);
LABEL_25:
      uint64_t v102 = v112;
      swift_beginAccess();
      sub_1001E75A0(v73, v102);
      sub_1009A894C(v74, (void (*)(void))type metadata accessor for SunriseSunsetDaylightCalculator.SunActivity);
      unint64_t v103 = v124;
      uint64_t result = swift_beginAccess();
      if (__OFADD__(*v103, 1))
      {
        __break(1u);
        JUMPOUT(0x1009A43CCLL);
      }
      ++*v103;
      return result;
    default:
      uint64_t v104 = v49;
      uint64_t v50 = &v45[*(int *)(sub_10017DF08(&qword_100E963A0) + 48)];
      uint64_t v51 = v131;
      uint64_t v52 = (void (*)(char *, char *, uint64_t))*((void *)v131 + 4);
      uint64_t v53 = v124;
      uint64_t v54 = v45;
      uint64_t v55 = (char *)v131 + 32;
      uint64_t v56 = v125;
      v52(v124, v54, v125);
      uint64_t v57 = (char *)v121;
      v52((char *)v121, v50, v56);
      uint64_t v58 = v110;
      sub_10006DF38(v117, v110, (uint64_t *)&unk_100E73CA0);
      int v59 = _s7Weather24LocationCompositionStateOwet_0(v58, 1, v56);
      uint64_t v112 = (uint64_t)v55;
      uint64_t v109 = (char *)v52;
      if (v59 == 1)
      {
        sub_1001781AC(v58, (uint64_t *)&unk_100E73CA0);
        uint64_t v60 = v51;
        uint64_t v61 = (uint64_t)v120;
      }
      else
      {
        v52(v35, (char *)v58, v56);
        char v75 = Date.hourAndMinuteIsLater(than:calendar:)();
        (*((void (**)(char *, uint64_t))v51 + 1))(v35, v56);
        uint64_t v60 = v51;
        uint64_t v61 = (uint64_t)v120;
        if (v75) {
          goto LABEL_11;
        }
      }
      uint64_t v76 = v117;
      sub_1001781AC(v117, (uint64_t *)&unk_100E73CA0);
      (*((void (**)(uint64_t, char *, uint64_t))v60 + 2))(v76, v53, v56);
      _s7Weather24LocationCompositionStateOwst_0(v76, 0, 1, v56);
LABEL_11:
      uint64_t v77 = v111;
      sub_10006DF38(v118, v111, (uint64_t *)&unk_100E73CA0);
      if (_s7Weather24LocationCompositionStateOwet_0(v77, 1, v56) == 1)
      {
        sub_1001781AC(v77, (uint64_t *)&unk_100E73CA0);
        uint64_t v78 = v115;
      }
      else
      {
        uint64_t v83 = v105;
        ((void (*)(char *, uint64_t, uint64_t))v109)(v105, v77, v56);
        char v84 = Date.hourAndMinuteIsLater(than:calendar:)();
        (*((void (**)(char *, uint64_t))v60 + 1))(v83, v56);
        uint64_t v78 = v115;
        if (v84)
        {
          uint64_t v85 = (void (*)(uint64_t, char *, uint64_t))*((void *)v60 + 2);
          v85(v61, v124, v56);
          goto LABEL_18;
        }
      }
      uint64_t v86 = v118;
      sub_1001781AC(v118, (uint64_t *)&unk_100E73CA0);
      uint64_t v85 = (void (*)(uint64_t, char *, uint64_t))*((void *)v60 + 2);
      v85(v86, v57, v56);
      _s7Weather24LocationCompositionStateOwst_0(v86, 0, 1, v56);
      v85(v61, v124, v56);
LABEL_18:
      v85(v61 + *(int *)(v78 + 20), v57, v56);
      uint64_t v87 = v114;
      sub_10006DF38(v119, v114, &qword_100EA55E0);
      if (_s7Weather24LocationCompositionStateOwet_0(v87, 1, v78) == 1)
      {
        sub_1001781AC(v87, &qword_100EA55E0);
      }
      else
      {
        uint64_t v88 = (uint64_t)v107;
        sub_1009A8894();
        Date.timeIntervalSince(_:)();
        double v90 = v89;
        Date.timeIntervalSince(_:)();
        uint64_t v78 = v115;
        double v92 = v91;
        sub_1009A894C(v88, (void (*)(void))type metadata accessor for SunriseSunsetDaylightCalculator.TimeRange);
        if (v92 < v90) {
          goto LABEL_22;
        }
      }
      uint64_t v93 = v119;
      sub_1001781AC(v119, &qword_100EA55E0);
      sub_1009A8900();
      _s7Weather24LocationCompositionStateOwst_0(v93, 0, 1, v78);
      uint64_t v94 = v108;
      sub_1001781AC(v108, (uint64_t *)&unk_100E73CA0);
      int v95 = v116;
      uint64_t v96 = (uint64_t)&v116[*(int *)(v123 + 48)];
      v85((uint64_t)v116, v122, v56);
      sub_1009A8900();
      ((void (*)(uint64_t, char *, uint64_t))v109)(v94, v95, v56);
      uint64_t v61 = (uint64_t)v120;
      _s7Weather24LocationCompositionStateOwst_0(v94, 0, 1, v56);
      sub_1009A894C(v96, (void (*)(void))type metadata accessor for SunriseSunsetDaylightCalculator.SunActivity);
LABEL_22:
      sub_1009A32AC((uint64_t)v132, v126);
      sub_1009A894C(v61, (void (*)(void))type metadata accessor for SunriseSunsetDaylightCalculator.TimeRange);
      uint64_t v97 = (void (*)(char *, uint64_t))*((void *)v131 + 1);
      v97((char *)v121, v56);
      return ((uint64_t (*)(char *, uint64_t))v97)(v124, v56);
  }
}

uint64_t sub_1009A43E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10017DF08(&qword_100E6CD90);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(int *)(v9 + 56);
  uint64_t v11 = type metadata accessor for Date();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16))(v8, a1, v11);
  *(void *)&v8[v10] = *(void *)(a1 + v10);
  swift_bridgeObjectRetain();
  sub_1009A44F4((uint64_t)v8, a2, a3);
  return sub_1001781AC((uint64_t)v8, &qword_100E6CD90);
}

uint64_t sub_1009A44F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v30 = a3;
  uint64_t v31 = a2;
  uint64_t v5 = sub_10017DF08(&qword_100E63AC8);
  __chkstk_darwin(v5 - 8);
  uint64_t v29 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = type metadata accessor for MonthSunAverage(0);
  __chkstk_darwin(v27);
  uint64_t v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10017DF08(&qword_100E6CD90);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = v12;
  uint64_t v13 = *(int *)(v12 + 48);
  uint64_t v14 = type metadata accessor for Date();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v24 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 16);
  v24(v11, a1, v14);
  uint64_t v16 = *(void *)(a1 + v13);
  uint64_t v25 = v13;
  *(void *)&v11[v13] = v16;
  uint64_t v17 = swift_bridgeObjectRetain();
  uint64_t v18 = sub_1009A81F0(v17);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v11, v14);
  uint64_t v28 = v8;
  sub_1009A479C(a1, v18, v31, (uint64_t)v8);
  uint64_t result = swift_release();
  if (!v3)
  {
    uint64_t v20 = *(int *)(v26 + 48);
    v24(v11, a1, v14);
    *(void *)&v11[v20] = *(void *)(a1 + v25);
    uint64_t v22 = (uint64_t)v28;
    uint64_t v21 = (uint64_t)v29;
    sub_1009A8900();
    _s7Weather24LocationCompositionStateOwst_0(v21, 0, 1, v27);
    sub_100245938(v21, (uint64_t)v11);
    return sub_1009A894C(v22, (void (*)(void))type metadata accessor for MonthSunAverage);
  }
  return result;
}

uint64_t sub_1009A479C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v63 = a1;
  uint64_t v8 = type metadata accessor for Date();
  uint64_t v61 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v57 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v57 - v12;
  uint64_t v14 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  __chkstk_darwin(v14 - 8);
  uint64_t v62 = (uint64_t)&v57 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v65 = (uint64_t)&v57 - v17;
  __chkstk_darwin(v18);
  uint64_t v68 = (char *)&v57 - v19;
  __chkstk_darwin(v20);
  uint64_t v69 = (char *)&v57 - v21;
  uint64_t v22 = sub_10017DF08(&qword_100E6D1D8);
  __chkstk_darwin(v22 - 8);
  uint64_t v24 = (char *)&v57 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = type metadata accessor for DateComponents();
  uint64_t v66 = *(void *)(v25 - 8);
  uint64_t v67 = v25;
  __chkstk_darwin(v25);
  uint64_t v70 = (char *)&v57 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = type metadata accessor for Calendar();
  uint64_t v71 = *(void *)(v27 - 8);
  uint64_t v72 = v27;
  __chkstk_darwin(v27);
  uint64_t v29 = (char *)&v57 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = a3;
  static Calendar.currentCalendar(with:)();
  uint64_t v84 = 0;
  uint64_t v82 = 0;
  uint64_t v83 = 0;
  id v80 = _swiftEmptyArrayStorage;
  uint64_t v81 = _swiftEmptyArrayStorage;
  uint64_t v74 = &v81;
  char v75 = v29;
  uint64_t v76 = &v80;
  uint64_t v77 = &v84;
  uint64_t v78 = &v83;
  uint64_t v79 = &v82;
  sub_10031FA34((void (*)(char *))sub_1009A8A44, (uint64_t)v73, a2);
  uint64_t v31 = v82;
  uint64_t v30 = v83;
  if (!v83 && !v82 && !v84)
  {
    sub_1009A8124();
    swift_allocError();
    unsigned char *v32 = 1;
    swift_willThrow();
LABEL_10:
    (*(void (**)(char *, uint64_t))(v71 + 8))(v29, v72);
    goto LABEL_16;
  }
  if (v84 >= 1)
  {
    uint64_t v57 = v4;
    uint64_t v60 = v13;
    uint64_t v58 = v10;
    uint64_t v59 = a4;
    sub_10017DF08(&qword_100E65238);
    uint64_t v33 = type metadata accessor for Calendar.Component();
    uint64_t v34 = *(void *)(v33 - 8);
    uint64_t v35 = *(void *)(v34 + 72);
    unint64_t v36 = (*(unsigned __int8 *)(v34 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80);
    uint64_t v37 = swift_allocObject();
    *(_OWORD *)(v37 + 16) = xmmword_100C33BA0;
    unint64_t v38 = v37 + v36;
    uint64_t v39 = v8;
    uint64_t v40 = *(void (**)(unint64_t, void, uint64_t))(v34 + 104);
    v40(v38, enum case for Calendar.Component.year(_:), v33);
    v40(v38 + v35, enum case for Calendar.Component.month(_:), v33);
    v40(v38 + 2 * v35, enum case for Calendar.Component.day(_:), v33);
    uint64_t v41 = v39;
    sub_1000EEDB0(v37);
    Calendar.dateComponents(_:from:)();
    swift_bridgeObjectRelease();
    uint64_t v42 = type metadata accessor for TimeZone();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v42 - 8) + 16))(v24, v64, v42);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v24, 0, 1, v42);
    DateComponents.timeZone.setter();
    sub_1009A53A4((uint64_t)v81);
    DateComponents.hour.setter();
    DateComponents.minute.setter();
    uint64_t v43 = (uint64_t)v69;
    Calendar.date(from:)();
    sub_1009A53A4((uint64_t)v80);
    DateComponents.hour.setter();
    DateComponents.minute.setter();
    uint64_t v44 = (uint64_t)v68;
    Calendar.date(from:)();
    uint64_t v45 = v65;
    sub_10006DF38(v43, v65, (uint64_t *)&unk_100E73CA0);
    if (_s7Weather24LocationCompositionStateOwet_0(v45, 1, v41) != 1)
    {
      uint64_t v46 = v61;
      uint64_t v47 = *(void (**)(char *, uint64_t, uint64_t))(v61 + 32);
      uint64_t v48 = v60;
      v47(v60, v45, v41);
      uint64_t v45 = v62;
      sub_10006DF38(v44, v62, (uint64_t *)&unk_100E73CA0);
      if (_s7Weather24LocationCompositionStateOwet_0(v45, 1, v41) != 1)
      {
        sub_1001781AC(v44, (uint64_t *)&unk_100E73CA0);
        sub_1001781AC(v43, (uint64_t *)&unk_100E73CA0);
        (*(void (**)(char *, uint64_t))(v66 + 8))(v70, v67);
        (*(void (**)(char *, uint64_t))(v71 + 8))(v29, v72);
        uint64_t v52 = v58;
        v47(v58, v45, v41);
        uint64_t v53 = sub_10017DF08(&qword_100E963A0);
        uint64_t v54 = v59;
        uint64_t v55 = v59 + *(int *)(v53 + 48);
        v47((char *)v59, (uint64_t)v48, v41);
        v47((char *)v55, (uint64_t)v52, v41);
        _s7Weather24LocationCompositionStateOwst_0(v54, 0, 2, v53);
        goto LABEL_16;
      }
      (*(void (**)(char *, uint64_t))(v46 + 8))(v48, v41);
    }
    sub_1001781AC(v45, (uint64_t *)&unk_100E73CA0);
    sub_1009A8124();
    swift_allocError();
    unsigned char *v49 = 1;
    swift_willThrow();
    sub_1001781AC(v44, (uint64_t *)&unk_100E73CA0);
    sub_1001781AC(v43, (uint64_t *)&unk_100E73CA0);
    (*(void (**)(char *, uint64_t))(v66 + 8))(v70, v67);
    goto LABEL_10;
  }
  (*(void (**)(char *, uint64_t))(v71 + 8))(v29, v72);
  uint64_t v50 = sub_10017DF08(&qword_100E963A0);
  if (v31 >= v30) {
    uint64_t v51 = 1;
  }
  else {
    uint64_t v51 = 2;
  }
  _s7Weather24LocationCompositionStateOwst_0(a4, v51, 2, v50);
LABEL_16:
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1009A4FE4(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t *a4, uint64_t *a5, uint64_t a6, void *a7)
{
  v38[0] = a6;
  v38[1] = a3;
  uint64_t v39 = a5;
  uint64_t v40 = a4;
  uint64_t v9 = type metadata accessor for Date();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)v38 - v14;
  uint64_t v16 = type metadata accessor for SunriseSunsetDaylightCalculator.SunActivity(0);
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)v38 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10017DF08(&qword_100E6CD98);
  sub_1009A8900();
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 1:
      goto LABEL_6;
    case 2:
    case 3:
      return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v18, v9);
    case 4:
      if (__OFADD__(*a7, 1))
      {
        __break(1u);
LABEL_13:
        __break(1u);
        JUMPOUT(0x1009A538CLL);
      }
      ++*a7;
      break;
    case 5:
      sub_10062E0D8();
      uint64_t v33 = *(void *)(*a2 + 16);
      sub_100289780(v33);
      uint64_t v34 = *a2;
      *(void *)(v34 + 16) = v33 + 1;
      *(void *)(v34 + 8 * v33 + 32) = 0;
      *a2 = v34;
      uint64_t v35 = v40;
      sub_10062E0D8();
      uint64_t v36 = *(void *)(*v35 + 16);
      uint64_t result = sub_100289780(v36);
      uint64_t v37 = *v35;
      *(void *)(v37 + 16) = v36 + 1;
      *(void *)(v37 + 8 * v36 + 32) = 86400;
      uint64_t *v35 = v37;
      uint64_t v29 = (uint64_t *)v38[0];
      uint64_t v30 = *(void *)v38[0] + 1;
      if (!__OFADD__(*(void *)v38[0], 1)) {
        goto LABEL_10;
      }
      goto LABEL_13;
    default:
      uint64_t v20 = &v18[*(int *)(sub_10017DF08(&qword_100E963A0) + 48)];
      uint64_t v21 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
      v21(v15, v18, v9);
      v21(v12, v20, v9);
      uint64_t v22 = Date.secondsSinceMidnight(calendar:)();
      sub_10062E0D8();
      uint64_t v23 = *(void *)(*a2 + 16);
      sub_100289780(v23);
      uint64_t v24 = *a2;
      *(void *)(v24 + 16) = v23 + 1;
      *(void *)(v24 + 8 * v23 + 32) = v22;
      *a2 = v24;
      uint64_t v18 = (char *)Date.secondsSinceMidnight(calendar:)();
      uint64_t v25 = v40;
      sub_10062E0D8();
      uint64_t v26 = *(void *)(*v25 + 16);
      sub_100289780(v26);
      uint64_t v27 = *v25;
      *(void *)(v27 + 16) = v26 + 1;
      *(void *)(v27 + 8 * v26 + 32) = v18;
      *uint64_t v25 = v27;
      uint64_t v28 = *(void (**)(char *, uint64_t))(v10 + 8);
      v10 += 8;
      v28(v12, v9);
      uint64_t result = ((uint64_t (*)(char *, uint64_t))v28)(v15, v9);
      uint64_t v29 = v39;
      uint64_t v30 = *v39 + 1;
      if (__OFADD__(*v39, 1))
      {
        __break(1u);
LABEL_6:
        uint64_t v31 = sub_10017DF08(&qword_100E963A0);
        uint64_t v32 = *(void (**)(char *, uint64_t))(v10 + 8);
        v32(&v18[*(int *)(v31 + 48)], v9);
        uint64_t result = ((uint64_t (*)(char *, uint64_t))v32)(v18, v9);
      }
      else
      {
LABEL_10:
        uint64_t *v29 = v30;
      }
      break;
  }
  return result;
}

uint64_t sub_1009A53A4(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 16);
  if (!v1) {
    return v1 / 3600;
  }
  uint64_t v2 = 0;
  uint64_t v3 = 0;
  while (1)
  {
    uint64_t v4 = *(void *)(result + 32 + 8 * v2);
    BOOL v5 = __OFADD__(v3, v4);
    v3 += v4;
    if (v5) {
      break;
    }
    if (v1 == ++v2)
    {
      uint64_t v1 = v3 / v1;
      return v1 / 3600;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1009A53F8(uint64_t a1, uint64_t a2, void (*a3)(unint64_t, char *, uint64_t), uint64_t a4)
{
  uint64_t v70 = a3;
  uint64_t v71 = a4;
  uint64_t v69 = a2;
  uint64_t v5 = type metadata accessor for CLLocationCoordinate2D.SolarEvents();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v73 = (char *)v56 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)v56 - v9;
  uint64_t v11 = type metadata accessor for Date();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v74 = (char *)v56 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v72 = (char *)v56 - v15;
  uint64_t v16 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  __chkstk_darwin(v16 - 8);
  uint64_t v18 = (char *)v56 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for TimeZone();
  uint64_t v20 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  uint64_t v22 = (char *)v56 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001457CC((unint64_t *)&qword_100E63978);
  uint64_t v68 = v11;
  uint64_t v23 = Dictionary.init(dictionaryLiteral:)();
  uint64_t v67 = a1;
  Location.timeZone.getter();
  uint64_t v24 = sub_1009A6C4C(v69, (uint64_t)v70, v71, (uint64_t)v22);
  uint64_t v25 = *(void (**)(char *, uint64_t))(v20 + 8);
  uint64_t v64 = v22;
  uint64_t v65 = v20 + 8;
  uint64_t v66 = v19;
  uint64_t v63 = v25;
  v25(v22, v19);
  uint64_t v26 = v24[2];
  v56[1] = v24;
  if (v26)
  {
    uint64_t v29 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
    uint64_t v27 = v12 + 16;
    uint64_t v28 = v29;
    uint64_t v30 = (char *)v24 + ((*(unsigned __int8 *)(v27 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v27 + 64));
    uint64_t v69 = *(void *)(v27 + 56);
    uint64_t v61 = (void (**)(char *, char *, uint64_t))(v6 + 16);
    uint64_t v62 = (void (**)(char *, char *, uint64_t))(v27 + 16);
    v56[3] = v6 + 32;
    v56[2] = v6 + 40;
    uint64_t v57 = (void (**)(char *, uint64_t))(v6 + 8);
    uint64_t v58 = (void (**)(char *, uint64_t))(v27 - 8);
    uint64_t v31 = v68;
    uint64_t v59 = v18;
    uint64_t v60 = v6;
    uint64_t v70 = (void (*)(unint64_t, char *, uint64_t))v29;
    while (1)
    {
      v28(v18, v30, v31);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v18, 0, 1, v31);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v18, 1, v31) == 1) {
        break;
      }
      uint64_t v71 = v26;
      uint64_t v32 = v72;
      (*v62)(v72, v18, v31);
      Location.coordinate.getter();
      uint64_t v33 = v64;
      Location.timeZone.getter();
      CLLocationCoordinate2D.solarEvents(referenceDate:timeZone:)();
      v63(v33, v66);
      uint64_t v34 = v27;
      v28(v74, v32, v31);
      uint64_t v35 = v10;
      uint64_t v36 = v10;
      uint64_t v37 = v5;
      (*v61)(v73, v36, v5);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      char v75 = (void *)v23;
      unint64_t v39 = sub_100246B34();
      uint64_t v41 = *(void *)(v23 + 16);
      BOOL v42 = (v40 & 1) == 0;
      Swift::Int v43 = v41 + v42;
      if (__OFADD__(v41, v42))
      {
        __break(1u);
LABEL_18:
        __break(1u);
LABEL_19:
        uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
        __break(1u);
        return result;
      }
      unint64_t v44 = v39;
      char v45 = v40;
      sub_10017DF08(&qword_100EA55F8);
      if (_NativeDictionary.ensureUnique(isUnique:capacity:)(isUniquelyReferenced_nonNull_native, v43))
      {
        unint64_t v46 = sub_100246B34();
        if ((v45 & 1) != (v47 & 1)) {
          goto LABEL_19;
        }
        unint64_t v44 = v46;
      }
      uint64_t v48 = v75;
      if (v45)
      {
        unint64_t v49 = v75[7] + *(void *)(v60 + 72) * v44;
        uint64_t v5 = v37;
        (*(void (**)(unint64_t, char *, uint64_t))(v60 + 40))(v49, v73, v37);
        uint64_t v31 = v68;
      }
      else
      {
        v75[(v44 >> 6) + 8] |= 1 << v44;
        uint64_t v31 = v68;
        v70(v48[6] + v44 * v69, v74, v68);
        unint64_t v50 = v48[7] + *(void *)(v60 + 72) * v44;
        uint64_t v5 = v37;
        (*(void (**)(unint64_t, char *, uint64_t))(v60 + 32))(v50, v73, v37);
        uint64_t v51 = v48[2];
        BOOL v52 = __OFADD__(v51, 1);
        uint64_t v53 = v51 + 1;
        if (v52) {
          goto LABEL_18;
        }
        v48[2] = v53;
      }
      uint64_t v23 = (uint64_t)v75;
      swift_bridgeObjectRelease();
      uint64_t v54 = *v58;
      (*v58)(v74, v31);
      uint64_t v10 = v35;
      (*v57)(v35, v5);
      v54(v72, v31);
      uint64_t v28 = (void (*)(char *, char *, uint64_t))v70;
      v30 += v69;
      uint64_t v26 = v71 - 1;
      uint64_t v27 = v34;
      uint64_t v18 = v59;
      if (v71 == 1) {
        goto LABEL_15;
      }
    }
  }
  else
  {
    uint64_t v31 = v68;
LABEL_15:
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v18, 1, 1, v31);
  }
  swift_bridgeObjectRelease();
  return v23;
}

uint64_t sub_1009A5A34(uint64_t a1, uint64_t a2)
{
  uint64_t v185 = a1;
  uint64_t v3 = sub_10017DF08(&qword_100E63AB8);
  __chkstk_darwin(v3 - 8);
  char v168 = (char *)&v163 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v179 = (char *)&v163 - v6;
  uint64_t v7 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  __chkstk_darwin(v7 - 8);
  uint64_t v172 = (char *)&v163 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v178 = (char *)&v163 - v10;
  __chkstk_darwin(v11);
  uint64_t v175 = (char *)&v163 - v12;
  __chkstk_darwin(v13);
  uint64_t v181 = (void (*)(char *, uint64_t, uint64_t))((char *)&v163 - v14);
  __chkstk_darwin(v15);
  uint64_t v176 = (char *)&v163 - v16;
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)&v163 - v18;
  uint64_t v20 = sub_10017DF08(&qword_100EA55E8);
  __chkstk_darwin(v20);
  uint64_t v173 = (uint64_t)&v163 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  uint64_t v171 = (char *)&v163 - v23;
  __chkstk_darwin(v24);
  uint64_t v177 = (char *)&v163 - v25;
  __chkstk_darwin(v26);
  uint64_t v174 = (char *)&v163 - v27;
  __chkstk_darwin(v28);
  unsigned __int8 v180 = (char *)&v163 - v29;
  __chkstk_darwin(v30);
  uint64_t v186 = (uint64_t)&v163 - v31;
  __chkstk_darwin(v32);
  uint64_t v183 = (char *)&v163 - v33;
  __chkstk_darwin(v34);
  uint64_t v36 = (char *)&v163 - v35;
  uint64_t v37 = type metadata accessor for Date();
  __chkstk_darwin(v37);
  uint64_t v167 = (char *)&v163 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v39);
  uint64_t v170 = (char *)&v163 - v40;
  __chkstk_darwin(v41);
  uint64_t v169 = (char *)&v163 - v42;
  __chkstk_darwin(v43);
  uint64_t v184 = (char *)&v163 - v44;
  __chkstk_darwin(v45);
  char v47 = (char *)&v163 - v46;
  __n128 v49 = __chkstk_darwin(v48);
  uint64_t v191 = v51;
  uint64_t v192 = (void (*)(char *, uint64_t))((char *)&v163 - v50);
  uint64_t v188 = v20;
  uint64_t v52 = *(int *)(v20 + 48);
  uint64_t v53 = &v36[v52];
  uint64_t v54 = a2 + v52;
  uint64_t v56 = v51 + 16;
  uint64_t v55 = *(void (**)(void))(v51 + 16);
  unsigned __int8 v182 = v36;
  uint64_t v195 = a2;
  uint64_t v198 = v55;
  ((void (*)(char *, uint64_t, uint64_t, __n128))v55)(v36, a2, v37, v49);
  uint64_t v57 = type metadata accessor for CLLocationCoordinate2D.SolarEvents();
  uint64_t v58 = *(void *)(v57 - 8);
  uint64_t v196 = *(void (**)(char *, uint64_t, uint64_t))(v58 + 16);
  v196(v53, v54, v57);
  CLLocationCoordinate2D.SolarEvents.sunrise.getter();
  int v59 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v19, 1, v37);
  uint64_t v197 = v54;
  uint64_t v199 = v37;
  uint64_t v189 = v57;
  uint64_t v190 = v56;
  uint64_t v194 = v58 + 16;
  uint64_t v187 = v58;
  if (v59 == 1)
  {
    sub_1001781AC((uint64_t)v19, (uint64_t *)&unk_100E73CA0);
    uint64_t v193 = *(void (**)(char *, uint64_t))(v58 + 8);
    v193(v53, v57);
    uint64_t v192 = *(void (**)(char *, uint64_t))(v191 + 8);
    v192(v182, v37);
    uint64_t v60 = v188;
    uint64_t v61 = v198;
    uint64_t v62 = v195;
    uint64_t v63 = v196;
  }
  else
  {
    uint64_t v165 = v47;
    uint64_t v64 = v191;
    char v164 = *(void (**)(char *, char *, uint64_t))(v191 + 32);
    uint64_t v163 = v191 + 32;
    v164((char *)v192, v19, v199);
    uint64_t v65 = *(void (**)(char *, uint64_t))(v58 + 8);
    uint64_t v166 = v58 + 8;
    v65(v53, v57);
    uint64_t v66 = *(void (**)(char *, uint64_t))(v64 + 8);
    uint64_t v67 = v182;
    unsigned __int8 v182 = (char *)(v64 + 8);
    v66(v67, v199);
    uint64_t v68 = &v183[*(int *)(v188 + 48)];
    uint64_t v69 = v199;
    v198();
    v196(v68, v54, v57);
    uint64_t v70 = (uint64_t)v176;
    CLLocationCoordinate2D.SolarEvents.sunset.getter();
    int v71 = _s7Weather24LocationCompositionStateOwet_0(v70, 1, v69);
    uint64_t v193 = v65;
    if (v71 == 1)
    {
      v66((char *)v192, v69);
      sub_1001781AC(v70, (uint64_t *)&unk_100E73CA0);
      v65(v68, v57);
      v66(v183, v69);
      uint64_t v62 = v195;
      uint64_t v192 = v66;
    }
    else
    {
      uint64_t v72 = v165;
      v164(v165, (char *)v70, v69);
      v65(v68, v57);
      v66(v183, v69);
      if (static Date.> infix(_:_:)())
      {
        uint64_t v73 = v186;
        uint64_t v191 = v186 + *(int *)(v188 + 48);
        uint64_t v74 = (char *)v191;
        char v75 = v198;
        ((void (*)(uint64_t, uint64_t, uint64_t))v198)(v186, v195, v69);
        v196(v74, v54, v57);
        uint64_t v76 = sub_10017DF08(&qword_100E963A0);
        uint64_t v77 = v72;
        uint64_t v78 = (uint64_t)v179;
        uint64_t v79 = &v179[*(int *)(v76 + 48)];
        id v80 = (char *)v192;
        ((void (*)(char *, void (*)(char *, uint64_t), uint64_t))v75)(v179, v192, v69);
        ((void (*)(char *, char *, uint64_t))v75)(v79, v77, v69);
        uint64_t v81 = type metadata accessor for SunriseSunsetDaylightCalculator.SunActivity(0);
        swift_storeEnumTagMultiPayload();
        _s7Weather24LocationCompositionStateOwst_0(v78, 0, 1, v81);
        sub_100245784(v78, v73);
        v66(v77, v69);
        v66(v80, v69);
        uint64_t v82 = v191;
        uint64_t v83 = v189;
        return ((uint64_t (*)(uint64_t, uint64_t))v193)(v82, v83);
      }
      v66(v72, v69);
      uint64_t v84 = (char *)v192;
      uint64_t v192 = v66;
      v66(v84, v69);
      uint64_t v62 = v195;
    }
    uint64_t v60 = v188;
    uint64_t v61 = v198;
    uint64_t v63 = v196;
  }
  uint64_t v85 = v180;
  uint64_t v86 = &v180[*(int *)(v60 + 48)];
  uint64_t v87 = v199;
  ((void (*)(char *, uint64_t, uint64_t))v61)(v180, v62, v199);
  v63(v86, v197, v189);
  uint64_t v88 = (uint64_t)v181;
  CLLocationCoordinate2D.SolarEvents.sunrise.getter();
  if (_s7Weather24LocationCompositionStateOwet_0(v88, 1, v87) == 1)
  {
    sub_1001781AC(v88, (uint64_t *)&unk_100E73CA0);
    uint64_t v89 = v189;
    v193(v86, v189);
    uint64_t v90 = v199;
    v192(v85, v199);
    double v91 = v198;
    uint64_t v92 = v60;
    uint64_t v93 = v90;
  }
  else
  {
    uint64_t v94 = v192;
    uint64_t v89 = v189;
    uint64_t v95 = v191 + 32;
    uint64_t v181 = *(void (**)(char *, uint64_t, uint64_t))(v191 + 32);
    v181(v184, v88, v199);
    uint64_t v96 = v193;
    unsigned __int8 v182 = (char *)(v187 + 8);
    v193(v86, v89);
    uint64_t v97 = v85;
    uint64_t v183 = (char *)(v95 - 24);
    uint64_t v98 = v94;
    v94(v97, v199);
    uint64_t v99 = v174;
    uint64_t v100 = &v174[*(int *)(v60 + 48)];
    uint64_t v93 = v199;
    ((void (*)(char *, uint64_t, uint64_t))v198)(v174, v62, v199);
    v196(v100, v197, v89);
    uint64_t v101 = (uint64_t)v175;
    CLLocationCoordinate2D.SolarEvents.sunset.getter();
    if (_s7Weather24LocationCompositionStateOwet_0(v101, 1, v93) == 1)
    {
      v98(v184, v93);
      sub_1001781AC(v101, (uint64_t *)&unk_100E73CA0);
      v96(v100, v89);
      v98(v99, v93);
    }
    else
    {
      uint64_t v102 = v169;
      v181(v169, v101, v93);
      v96(v100, v89);
      v98(v99, v93);
      sub_1001457CC((unint64_t *)&qword_100E66CC0);
      unint64_t v103 = v184;
      uint64_t v104 = v98;
      if ((dispatch thunk of static Comparable.< infix(_:_:)() & 1) == 0)
      {
        uint64_t v153 = *(int *)(v188 + 48);
        uint64_t v193 = v96;
        uint64_t v154 = (char *)(v186 + v153);
        uint64_t v191 = v186 + v153;
        uint64_t v155 = v198;
        v198();
        v196(v154, v197, v89);
        uint64_t v156 = sub_10017DF08(&qword_100E963A0);
        uint64_t v157 = v93;
        uint64_t v158 = v102;
        uint64_t v159 = (uint64_t)v179;
        uint64_t v160 = &v179[*(int *)(v156 + 48)];
        char v161 = v184;
        ((void (*)(char *, char *, uint64_t))v155)(v179, v184, v157);
        ((void (*)(char *, char *, uint64_t))v155)(v160, v158, v157);
        uint64_t v162 = type metadata accessor for SunriseSunsetDaylightCalculator.SunActivity(0);
        swift_storeEnumTagMultiPayload();
        _s7Weather24LocationCompositionStateOwst_0(v159, 0, 1, v162);
        sub_100245784(v159, v186);
        v104(v158, v157);
        v104(v161, v157);
        uint64_t v82 = v191;
        uint64_t v83 = v89;
        return ((uint64_t (*)(uint64_t, uint64_t))v193)(v82, v83);
      }
      v98(v102, v93);
      v98(v103, v93);
    }
    uint64_t v62 = v195;
    uint64_t v92 = v188;
    double v91 = v198;
  }
  int64_t v105 = v177;
  uint64_t v106 = &v177[*(int *)(v92 + 48)];
  ((void (*)(char *, uint64_t, uint64_t))v91)(v177, v62, v93);
  uint64_t v107 = v93;
  uint64_t v108 = (void (*)(uint64_t, uint64_t, uint64_t))v196;
  v196(v106, v197, v89);
  uint64_t v109 = (uint64_t)v178;
  CLLocationCoordinate2D.SolarEvents.sunrise.getter();
  if (_s7Weather24LocationCompositionStateOwet_0(v109, 1, v107) != 1)
  {
    uint64_t v135 = v170;
    uint64_t v136 = v199;
    (*(void (**)(char *, uint64_t, uint64_t))(v191 + 32))(v170, v109, v199);
    uint64_t v137 = v89;
    uint64_t v191 = v187 + 8;
    v193(v106, v89);
    v192(v105, v136);
    uint64_t v138 = *(int *)(v92 + 48);
    uint64_t v139 = v198;
    uint64_t v140 = v186;
    uint64_t v141 = v186 + v138;
    uint64_t v188 = v186 + v138;
    ((void (*)(uint64_t, uint64_t, uint64_t))v198)(v186, v195, v136);
    v108(v141, v197, v137);
    uint64_t v142 = (uint64_t)v179;
    ((void (*)(char *, char *, uint64_t))v139)(v179, v135, v136);
    uint64_t v143 = type metadata accessor for SunriseSunsetDaylightCalculator.SunActivity(0);
    swift_storeEnumTagMultiPayload();
    _s7Weather24LocationCompositionStateOwst_0(v142, 0, 1, v143);
    sub_100245784(v142, v140);
    v192(v135, v136);
    uint64_t v82 = v188;
    uint64_t v83 = v137;
    return ((uint64_t (*)(void, void))v193)(v82, v83);
  }
  sub_1001781AC(v109, (uint64_t *)&unk_100E73CA0);
  uint64_t v110 = v193;
  uint64_t v184 = (char *)(v187 + 8);
  v193(v106, v89);
  uint64_t v111 = v191;
  uint64_t v112 = v105;
  uint64_t v113 = v199;
  uint64_t v114 = v192;
  uint64_t v187 = v191 + 8;
  v192(v112, v199);
  uint64_t v115 = v171;
  uint64_t v116 = &v171[*(int *)(v92 + 48)];
  ((void (*)(char *, uint64_t, uint64_t))v198)(v171, v195, v113);
  v108((uint64_t)v116, v197, v89);
  uint64_t v117 = (uint64_t)v172;
  CLLocationCoordinate2D.SolarEvents.sunset.getter();
  int v118 = _s7Weather24LocationCompositionStateOwet_0(v117, 1, v113);
  uint64_t v192 = v114;
  if (v118 == 1)
  {
    sub_1001781AC(v117, (uint64_t *)&unk_100E73CA0);
    v110(v116, v89);
    uint64_t v119 = v199;
    v114(v115, v199);
    uint64_t v191 = v173 + *(int *)(v92 + 48);
    uint64_t v120 = (char *)v191;
    uint64_t v121 = v195;
    uint64_t v122 = v198;
    v198();
    uint64_t v123 = v120;
    uint64_t v124 = v197;
    uint64_t v125 = (void (*)(uint64_t, uint64_t))v110;
    uint64_t v126 = (void (*)(uint64_t, uint64_t, uint64_t))v196;
    v196(v123, v197, v89);
    uint64_t v127 = *(int *)(v92 + 48);
    uint64_t v128 = v122;
    uint64_t v129 = v186;
    uint64_t v130 = v186 + v127;
    ((void (*)(uint64_t, uint64_t, uint64_t))v128)(v186, v121, v119);
    uint64_t v131 = v189;
    v126(v130, v124, v189);
    CLLocationCoordinate2D.SolarEvents.isDaylight.getter();
    v125(v130, v131);
    v192((char *)v129, v119);
    uint64_t v132 = type metadata accessor for SunriseSunsetDaylightCalculator.SunActivity(0);
    uint64_t v133 = (uint64_t)v168;
    swift_storeEnumTagMultiPayload();
    _s7Weather24LocationCompositionStateOwst_0(v133, 0, 1, v132);
    sub_100245784(v133, v173);
    return ((uint64_t (*)(uint64_t, uint64_t))v125)(v191, v131);
  }
  else
  {
    uint64_t v144 = *(void (**)(char *, uint64_t, uint64_t))(v111 + 32);
    uint64_t v145 = v167;
    uint64_t v146 = v199;
    v144(v167, v117, v199);
    v110(v116, v89);
    v114(v115, v146);
    uint64_t v147 = *(int *)(v92 + 48);
    uint64_t v193 = v110;
    uint64_t v148 = v198;
    uint64_t v149 = v186;
    uint64_t v150 = (char *)(v186 + v147);
    ((void (*)(uint64_t, uint64_t, uint64_t))v198)(v186, v195, v146);
    v196(v150, v197, v89);
    uint64_t v151 = (uint64_t)v179;
    ((void (*)(char *, char *, uint64_t))v148)(v179, v145, v146);
    uint64_t v152 = type metadata accessor for SunriseSunsetDaylightCalculator.SunActivity(0);
    swift_storeEnumTagMultiPayload();
    _s7Weather24LocationCompositionStateOwst_0(v151, 0, 1, v152);
    sub_100245784(v151, v149);
    v192(v145, v146);
    return ((uint64_t (*)(char *, uint64_t))v193)(v150, v89);
  }
}

void *sub_1009A6C4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v31 = type metadata accessor for Calendar.SearchDirection();
  sub_10017C83C();
  uint64_t v6 = v5;
  __chkstk_darwin(v7);
  sub_1001626E0();
  uint64_t v10 = v9 - v8;
  uint64_t v27 = type metadata accessor for Calendar.RepeatedTimePolicy();
  sub_10017C83C();
  uint64_t v12 = v11;
  __chkstk_darwin(v13);
  sub_100163770();
  uint64_t v28 = type metadata accessor for Calendar.MatchingPolicy();
  sub_10017C83C();
  uint64_t v15 = v14;
  __chkstk_darwin(v16);
  sub_1001626E0();
  uint64_t v19 = v18 - v17;
  uint64_t v30 = type metadata accessor for DateComponents();
  sub_10017C83C();
  uint64_t v21 = v20;
  __chkstk_darwin(v22);
  sub_1001626E0();
  uint64_t v25 = v24 - v23;
  sub_100BF12D4(a4);
  (*(void (**)(uint64_t, void, uint64_t))(v15 + 104))(v19, enum case for Calendar.MatchingPolicy.strict(_:), v28);
  (*(void (**)(uint64_t, void, uint64_t))(v12 + 104))(v4, enum case for Calendar.RepeatedTimePolicy.first(_:), v27);
  (*(void (**)(uint64_t, void, uint64_t))(v6 + 104))(v10, enum case for Calendar.SearchDirection.forward(_:), v31);
  Calendar.enumerateDates(startingAfter:matching:matchingPolicy:repeatedTimePolicy:direction:using:)();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v10, v31);
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v4, v27);
  (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v19, v28);
  (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v25, v30);
  return _swiftEmptyArrayStorage;
}

uint64_t sub_1009A6F04(uint64_t a1, uint64_t a2, unsigned char *a3, uint64_t a4, uint64_t a5, uint64_t *a6)
{
  uint64_t v9 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for Date();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10006DF38(a1, (uint64_t)v11, (uint64_t *)&unk_100E73CA0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v11, 1, v12) == 1) {
    return sub_1001781AC((uint64_t)v11, (uint64_t *)&unk_100E73CA0);
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v15, v11, v12);
  if ((static Date.> infix(_:_:)() & 1) == 0) {
    return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  }
  if (static Date.< infix(_:_:)())
  {
    sub_10062E060();
    uint64_t v17 = *(void *)(*a6 + 16);
    sub_100289708(v17);
    uint64_t v18 = *a6;
    *(void *)(v18 + 16) = v17 + 1;
    (*(void (**)(unint64_t, char *, uint64_t))(v13 + 16))(v18+ ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80))+ *(void *)(v13 + 72) * v17, v15, v12);
    return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  }
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  *a3 = 1;
  return result;
}

void sub_1009A7128(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_10017DF08(&qword_100E6CD98);
  uint64_t v129 = *(void *)(v4 - 8);
  uint64_t v130 = v4;
  __chkstk_darwin(v4);
  uint64_t v126 = (uint64_t)&v119 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v136 = (uint64_t)&v119 - v7;
  __chkstk_darwin(v8);
  uint64_t v133 = (uint64_t)&v119 - v9;
  __chkstk_darwin(v10);
  uint64_t v132 = (uint64_t)&v119 - v11;
  Swift::Int v12 = a1[1];
  Swift::Int v13 = _minimumMergeRunLength(_:)(v12);
  if (v13 >= v12)
  {
    if ((v12 & 0x8000000000000000) == 0)
    {
      if (v12) {
        sub_1009A7AB8(0, v12, 1, a1);
      }
      return;
    }
LABEL_142:
    __break(1u);
LABEL_143:
    __break(1u);
LABEL_144:
    __break(1u);
LABEL_145:
    __break(1u);
    goto LABEL_146;
  }
  Swift::Int v14 = v13;
  uint64_t v122 = sub_100AD5324(v12 / 2);
  uint64_t v123 = v12;
  unint64_t v128 = v15;
  if (v12 <= 0)
  {
    uint64_t v17 = (char *)_swiftEmptyArrayStorage;
    unint64_t v60 = _swiftEmptyArrayStorage[2];
LABEL_104:
    if (v60 < 2) {
      goto LABEL_118;
    }
    uint64_t v111 = *a1;
    while (1)
    {
      unint64_t v112 = v60 - 2;
      if (v60 < 2) {
        break;
      }
      if (!v111) {
        goto LABEL_150;
      }
      uint64_t v113 = v17;
      uint64_t v114 = v17 + 32;
      uint64_t v115 = *(void *)&v17[16 * v112 + 32];
      uint64_t v116 = *(void *)&v17[16 * v60 + 24];
      sub_1009A7D2C(v111 + *(void *)(v129 + 72) * v115, v111 + *(void *)(v129 + 72) * *(void *)&v114[16 * v60 - 16], v111 + *(void *)(v129 + 72) * v116, v128);
      if (v2) {
        goto LABEL_116;
      }
      if (v116 < v115) {
        goto LABEL_137;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v113 = sub_10031515C();
      }
      if (v112 >= *((void *)v113 + 2)) {
        goto LABEL_138;
      }
      uint64_t v117 = &v113[16 * v112 + 32];
      *(void *)uint64_t v117 = v115;
      *((void *)v117 + 1) = v116;
      unint64_t v118 = *((void *)v113 + 2);
      if (v60 > v118) {
        goto LABEL_139;
      }
      uint64_t v17 = v113;
      memmove(&v113[16 * v60 + 16], &v113[16 * v60 + 32], 16 * (v118 - v60));
      *((void *)v113 + 2) = v118 - 1;
      unint64_t v60 = v118 - 1;
      if (v118 <= 2) {
        goto LABEL_118;
      }
    }
LABEL_136:
    __break(1u);
LABEL_137:
    __break(1u);
LABEL_138:
    __break(1u);
LABEL_139:
    __break(1u);
LABEL_140:
    __break(1u);
LABEL_141:
    __break(1u);
    goto LABEL_142;
  }
  Swift::Int v121 = v14;
  Swift::Int v16 = 0;
  uint64_t v17 = (char *)_swiftEmptyArrayStorage;
  Swift::Int v18 = v12;
  uint64_t v135 = a1;
  while (1)
  {
    Swift::Int v19 = v16;
    Swift::Int v20 = v16 + 1;
    Swift::Int v127 = v16;
    if (v16 + 1 >= v18)
    {
      Swift::Int v37 = v16 + 1;
    }
    else
    {
      uint64_t v124 = v2;
      uint64_t v21 = *a1;
      uint64_t v22 = *(void *)(v129 + 72);
      uint64_t v23 = v132;
      sub_10006DF38(*a1 + v22 * v20, v132, &qword_100E6CD98);
      uint64_t v24 = v21 + v22 * v19;
      uint64_t v25 = v133;
      sub_10006DF38(v24, v133, &qword_100E6CD98);
      LODWORD(v134) = static Date.< infix(_:_:)();
      uint64_t v26 = v25;
      Swift::Int v19 = v127;
      sub_1001781AC(v26, &qword_100E6CD98);
      sub_1001781AC(v23, &qword_100E6CD98);
      Swift::Int v27 = v19 + 2;
      uint64_t v137 = v22;
      uint64_t v131 = v21;
      if (v19 + 2 >= v18)
      {
        Swift::Int v30 = v19 + 2;
        uint64_t v36 = v22;
      }
      else
      {
        uint64_t v28 = v22 * v20;
        uint64_t v29 = v21;
        Swift::Int v30 = v27;
        uint64_t v31 = v22 * v27;
        while (1)
        {
          Swift::Int v32 = v18;
          uint64_t v33 = v132;
          sub_10006DF38(v29 + v31, v132, &qword_100E6CD98);
          uint64_t v34 = v133;
          sub_10006DF38(v29 + v28, v133, &qword_100E6CD98);
          int v35 = static Date.< infix(_:_:)();
          sub_1001781AC(v34, &qword_100E6CD98);
          sub_1001781AC(v33, &qword_100E6CD98);
          if ((v134 ^ v35)) {
            break;
          }
          uint64_t v36 = v137;
          v29 += v137;
          ++v30;
          Swift::Int v18 = v32;
          if (v30 >= v32)
          {
            Swift::Int v30 = v32;
            a1 = v135;
            Swift::Int v19 = v127;
            goto LABEL_13;
          }
        }
        a1 = v135;
        Swift::Int v19 = v127;
        Swift::Int v18 = v32;
        uint64_t v36 = v137;
      }
LABEL_13:
      if (v134)
      {
        if (v30 < v19) {
          goto LABEL_143;
        }
        Swift::Int v37 = v30;
        if (v19 < v30)
        {
          Swift::Int v134 = v18;
          uint64_t v120 = v17;
          uint64_t v38 = 0;
          uint64_t v39 = v36 * (v30 - 1);
          uint64_t v40 = v30 * v36;
          uint64_t v41 = v19 * v36;
          uint64_t v42 = v131;
          do
          {
            if (v19 != v37 + v38 - 1)
            {
              if (!v42) {
                goto LABEL_149;
              }
              sub_10024D364(v42 + v41, v126, &qword_100E6CD98);
              if (v41 < v39 || v42 + v41 >= (unint64_t)(v42 + v40))
              {
                swift_arrayInitWithTakeFrontToBack();
              }
              else if (v41 != v39)
              {
                swift_arrayInitWithTakeBackToFront();
              }
              sub_10024D364(v126, v42 + v39, &qword_100E6CD98);
              a1 = v135;
              Swift::Int v37 = v30;
              uint64_t v36 = v137;
            }
            ++v19;
            --v38;
            v39 -= v36;
            v40 -= v36;
            v41 += v36;
          }
          while (v19 < v37 + v38);
          uint64_t v17 = v120;
          uint64_t v2 = v124;
          Swift::Int v19 = v127;
          Swift::Int v18 = v134;
          goto LABEL_32;
        }
      }
      else
      {
        Swift::Int v37 = v30;
      }
      uint64_t v2 = v124;
    }
LABEL_32:
    if (v37 < v18)
    {
      if (__OFSUB__(v37, v19)) {
        goto LABEL_141;
      }
      if (v37 - v19 < v121)
      {
        if (__OFADD__(v19, v121)) {
          goto LABEL_144;
        }
        if (v19 + v121 >= v18) {
          Swift::Int v44 = v18;
        }
        else {
          Swift::Int v44 = v19 + v121;
        }
        if (v44 < v19) {
          goto LABEL_145;
        }
        if (v37 != v44)
        {
          uint64_t v120 = v17;
          uint64_t v124 = v2;
          Swift::Int v125 = v44;
          uint64_t v45 = *(void *)(v129 + 72);
          uint64_t v137 = v45 * (v37 - 1);
          uint64_t v131 = v45;
          Swift::Int v46 = v37 * v45;
          do
          {
            uint64_t v47 = 0;
            Swift::Int v134 = v37;
            while (1)
            {
              uint64_t v48 = *a1;
              Swift::Int v49 = v46;
              uint64_t v50 = v46 + v47 + *a1;
              uint64_t v51 = a1;
              uint64_t v52 = v132;
              sub_10006DF38(v50, v132, &qword_100E6CD98);
              uint64_t v53 = v133;
              sub_10006DF38(v137 + v47 + v48, v133, &qword_100E6CD98);
              LOBYTE(v48) = static Date.< infix(_:_:)();
              sub_1001781AC(v53, &qword_100E6CD98);
              sub_1001781AC(v52, &qword_100E6CD98);
              if ((v48 & 1) == 0) {
                break;
              }
              uint64_t v54 = *v51;
              if (!*v51) {
                goto LABEL_147;
              }
              Swift::Int v46 = v49;
              uint64_t v55 = v54 + v137 + v47;
              sub_10024D364(v54 + v49 + v47, v136, &qword_100E6CD98);
              swift_arrayInitWithTakeFrontToBack();
              sub_10024D364(v136, v55, &qword_100E6CD98);
              v47 -= v131;
              ++v19;
              Swift::Int v56 = v134;
              a1 = v135;
              if (v134 == v19) {
                goto LABEL_48;
              }
            }
            Swift::Int v56 = v134;
            a1 = v51;
            Swift::Int v46 = v49;
LABEL_48:
            Swift::Int v37 = v56 + 1;
            v137 += v131;
            v46 += v131;
            Swift::Int v19 = v127;
          }
          while (v37 != v125);
          Swift::Int v37 = v125;
          uint64_t v2 = v124;
          uint64_t v17 = v120;
        }
      }
    }
    if (v37 < v19) {
      goto LABEL_140;
    }
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    Swift::Int v134 = v37;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      uint64_t v17 = sub_1001AA1B0(0, *((void *)v17 + 2) + 1, 1, v17);
    }
    unint64_t v59 = *((void *)v17 + 2);
    unint64_t v58 = *((void *)v17 + 3);
    unint64_t v60 = v59 + 1;
    if (v59 >= v58 >> 1) {
      uint64_t v17 = sub_1001AA1B0((char *)(v58 > 1), v59 + 1, 1, v17);
    }
    *((void *)v17 + 2) = v60;
    uint64_t v61 = v17 + 32;
    uint64_t v62 = &v17[16 * v59 + 32];
    Swift::Int v63 = v134;
    *(void *)uint64_t v62 = v19;
    *((void *)v62 + 1) = v63;
    if (v59) {
      break;
    }
    unint64_t v60 = 1;
LABEL_98:
    Swift::Int v18 = a1[1];
    Swift::Int v16 = v134;
    if (v134 >= v18) {
      goto LABEL_104;
    }
  }
  while (1)
  {
    unint64_t v64 = v60 - 1;
    if (v60 >= 4)
    {
      uint64_t v69 = &v61[16 * v60];
      uint64_t v70 = *((void *)v69 - 8);
      uint64_t v71 = *((void *)v69 - 7);
      BOOL v75 = __OFSUB__(v71, v70);
      uint64_t v72 = v71 - v70;
      if (v75) {
        goto LABEL_125;
      }
      uint64_t v74 = *((void *)v69 - 6);
      uint64_t v73 = *((void *)v69 - 5);
      BOOL v75 = __OFSUB__(v73, v74);
      uint64_t v67 = v73 - v74;
      char v68 = v75;
      if (v75) {
        goto LABEL_126;
      }
      unint64_t v76 = v60 - 2;
      uint64_t v77 = &v61[16 * v60 - 32];
      uint64_t v79 = *(void *)v77;
      uint64_t v78 = *((void *)v77 + 1);
      BOOL v75 = __OFSUB__(v78, v79);
      uint64_t v80 = v78 - v79;
      if (v75) {
        goto LABEL_127;
      }
      BOOL v75 = __OFADD__(v67, v80);
      uint64_t v81 = v67 + v80;
      if (v75) {
        goto LABEL_129;
      }
      if (v81 >= v72)
      {
        uint64_t v99 = &v61[16 * v64];
        uint64_t v101 = *(void *)v99;
        uint64_t v100 = *((void *)v99 + 1);
        BOOL v75 = __OFSUB__(v100, v101);
        uint64_t v102 = v100 - v101;
        if (v75) {
          goto LABEL_135;
        }
        BOOL v92 = v67 < v102;
        goto LABEL_87;
      }
    }
    else
    {
      if (v60 != 3)
      {
        uint64_t v93 = *((void *)v17 + 4);
        uint64_t v94 = *((void *)v17 + 5);
        BOOL v75 = __OFSUB__(v94, v93);
        uint64_t v86 = v94 - v93;
        char v87 = v75;
        goto LABEL_81;
      }
      uint64_t v66 = *((void *)v17 + 4);
      uint64_t v65 = *((void *)v17 + 5);
      BOOL v75 = __OFSUB__(v65, v66);
      uint64_t v67 = v65 - v66;
      char v68 = v75;
    }
    if (v68) {
      goto LABEL_128;
    }
    unint64_t v76 = v60 - 2;
    uint64_t v82 = &v61[16 * v60 - 32];
    uint64_t v84 = *(void *)v82;
    uint64_t v83 = *((void *)v82 + 1);
    BOOL v85 = __OFSUB__(v83, v84);
    uint64_t v86 = v83 - v84;
    char v87 = v85;
    if (v85) {
      goto LABEL_130;
    }
    uint64_t v88 = &v61[16 * v64];
    uint64_t v90 = *(void *)v88;
    uint64_t v89 = *((void *)v88 + 1);
    BOOL v75 = __OFSUB__(v89, v90);
    uint64_t v91 = v89 - v90;
    if (v75) {
      goto LABEL_132;
    }
    if (__OFADD__(v86, v91)) {
      goto LABEL_134;
    }
    if (v86 + v91 >= v67)
    {
      BOOL v92 = v67 < v91;
LABEL_87:
      if (v92) {
        unint64_t v64 = v76;
      }
      goto LABEL_89;
    }
LABEL_81:
    if (v87) {
      goto LABEL_131;
    }
    uint64_t v95 = &v61[16 * v64];
    uint64_t v97 = *(void *)v95;
    uint64_t v96 = *((void *)v95 + 1);
    BOOL v75 = __OFSUB__(v96, v97);
    uint64_t v98 = v96 - v97;
    if (v75) {
      goto LABEL_133;
    }
    if (v98 < v86) {
      goto LABEL_98;
    }
LABEL_89:
    unint64_t v103 = v64 - 1;
    if (v64 - 1 >= v60)
    {
      __break(1u);
LABEL_122:
      __break(1u);
LABEL_123:
      __break(1u);
LABEL_124:
      __break(1u);
LABEL_125:
      __break(1u);
LABEL_126:
      __break(1u);
LABEL_127:
      __break(1u);
LABEL_128:
      __break(1u);
LABEL_129:
      __break(1u);
LABEL_130:
      __break(1u);
LABEL_131:
      __break(1u);
LABEL_132:
      __break(1u);
LABEL_133:
      __break(1u);
LABEL_134:
      __break(1u);
LABEL_135:
      __break(1u);
      goto LABEL_136;
    }
    uint64_t v104 = *a1;
    if (!*a1) {
      goto LABEL_148;
    }
    int64_t v105 = v17;
    uint64_t v106 = &v61[16 * v103];
    uint64_t v107 = *(void *)v106;
    uint64_t v108 = &v61[16 * v64];
    uint64_t v109 = *((void *)v108 + 1);
    sub_1009A7D2C(v104 + *(void *)(v129 + 72) * *(void *)v106, v104 + *(void *)(v129 + 72) * *(void *)v108, v104 + *(void *)(v129 + 72) * v109, v128);
    if (v2) {
      break;
    }
    if (v109 < v107) {
      goto LABEL_122;
    }
    if (v64 > *((void *)v105 + 2)) {
      goto LABEL_123;
    }
    *(void *)uint64_t v106 = v107;
    *(void *)&v61[16 * v103 + 8] = v109;
    unint64_t v110 = *((void *)v105 + 2);
    if (v64 >= v110) {
      goto LABEL_124;
    }
    uint64_t v17 = v105;
    unint64_t v60 = v110 - 1;
    memmove(&v61[16 * v64], v108 + 16, 16 * (v110 - 1 - v64));
    *((void *)v105 + 2) = v110 - 1;
    a1 = v135;
    if (v110 <= 2) {
      goto LABEL_98;
    }
  }
LABEL_116:
  swift_bridgeObjectRelease();
  if (v123 >= -1) {
    goto LABEL_119;
  }
  __break(1u);
LABEL_118:
  swift_bridgeObjectRelease();
  if (v123 >= -1)
  {
LABEL_119:
    *(void *)(v122 + 16) = 0;
    swift_bridgeObjectRelease();
    return;
  }
LABEL_146:
  __break(1u);
LABEL_147:
  __break(1u);
LABEL_148:
  __break(1u);
LABEL_149:
  __break(1u);
LABEL_150:
  __break(1u);
}

void sub_1009A7AB8(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v24 = a1;
  uint64_t v25 = sub_10017DF08(&qword_100E6CD98);
  __chkstk_darwin(v25);
  uint64_t v29 = (uint64_t)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v26 = (uint64_t)&v22 - v9;
  __chkstk_darwin(v10);
  Swift::Int v13 = (char *)&v22 - v12;
  uint64_t v28 = a3;
  uint64_t v23 = a2;
  if (a3 != a2)
  {
    uint64_t v14 = *(void *)(v11 + 72);
    uint64_t v31 = v14 * (v28 - 1);
    uint64_t v27 = v14;
    uint64_t v30 = v14 * v28;
    while (2)
    {
      uint64_t v15 = 0;
      uint64_t v16 = v24;
      do
      {
        uint64_t v17 = *a4;
        sub_10006DF38(v30 + v15 + *a4, (uint64_t)v13, &qword_100E6CD98);
        uint64_t v18 = v26;
        sub_10006DF38(v31 + v15 + v17, v26, &qword_100E6CD98);
        LOBYTE(v17) = static Date.< infix(_:_:)();
        sub_1001781AC(v18, &qword_100E6CD98);
        sub_1001781AC((uint64_t)v13, &qword_100E6CD98);
        if ((v17 & 1) == 0) {
          break;
        }
        uint64_t v19 = *a4;
        if (!*a4)
        {
          __break(1u);
          return;
        }
        Swift::Int v20 = a4;
        uint64_t v21 = v19 + v31 + v15;
        sub_10024D364(v19 + v30 + v15, v29, &qword_100E6CD98);
        swift_arrayInitWithTakeFrontToBack();
        sub_10024D364(v29, v21, &qword_100E6CD98);
        v15 -= v27;
        ++v16;
        a4 = v20;
      }
      while (v28 != v16);
      v31 += v27;
      v30 += v27;
      if (++v28 != v23) {
        continue;
      }
      break;
    }
  }
}

void sub_1009A7D2C(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v51 = sub_10017DF08(&qword_100E6CD98);
  __chkstk_darwin(v51);
  uint64_t v52 = (uint64_t)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v45 - v10;
  uint64_t v13 = *(void *)(v12 + 72);
  if (!v13)
  {
    __break(1u);
LABEL_75:
    __break(1u);
LABEL_76:
    __break(1u);
    goto LABEL_77;
  }
  int64_t v14 = a2 - a1;
  if (a2 - a1 == 0x8000000000000000 && v13 == -1) {
    goto LABEL_75;
  }
  int64_t v16 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v13 == -1) {
    goto LABEL_76;
  }
  uint64_t v18 = v14 / v13;
  uint64_t v19 = v16 / v13;
  uint64_t v46 = v13;
  if (v14 / v13 >= v16 / v13)
  {
    sub_1007EAF78(a2, v16 / v13);
    unint64_t v20 = a4 + v19 * v13;
    if (v19 * v13 < 1 || a1 >= a2) {
      goto LABEL_69;
    }
    unint64_t v48 = a1;
    uint64_t v49 = -v13;
    unint64_t v47 = a4;
    while (1)
    {
      unint64_t v30 = a3;
      uint64_t v31 = v49;
      a3 += v49;
      unint64_t v50 = v20 + v49;
      unint64_t v32 = v20;
      sub_10006DF38(v20 + v49, (uint64_t)v11, &qword_100E6CD98);
      unint64_t v33 = a2 + v31;
      uint64_t v34 = a2 + v31;
      uint64_t v35 = (uint64_t)v11;
      uint64_t v36 = v52;
      sub_10006DF38(v34, v52, &qword_100E6CD98);
      char v37 = static Date.< infix(_:_:)();
      uint64_t v38 = v36;
      uint64_t v11 = (char *)v35;
      sub_1001781AC(v38, &qword_100E6CD98);
      sub_1001781AC(v35, &qword_100E6CD98);
      if (v37)
      {
        unint64_t v20 = v32;
        if (v30 >= a2 && a3 < a2)
        {
          unint64_t v41 = v48;
          if (v30 != a2) {
            swift_arrayInitWithTakeBackToFront();
          }
          a2 = v33;
          a4 = v47;
          goto LABEL_64;
        }
        swift_arrayInitWithTakeFrontToBack();
        a2 = v33;
      }
      else if (v30 < v32 || a3 >= v32)
      {
        unint64_t v20 = v50;
        swift_arrayInitWithTakeFrontToBack();
      }
      else
      {
        unint64_t v20 = v50;
        if (v30 != v32) {
          swift_arrayInitWithTakeBackToFront();
        }
      }
      a4 = v47;
      unint64_t v41 = v48;
LABEL_64:
      if (v20 <= a4 || a2 <= v41)
      {
        uint64_t v13 = v46;
        goto LABEL_69;
      }
    }
  }
  sub_1007EAF78(a1, v14 / v13);
  unint64_t v20 = a4 + v18 * v13;
  unint64_t v50 = a3;
  if (v18 * v13 >= 1 && a2 < a3)
  {
    uint64_t v22 = v52;
    do
    {
      sub_10006DF38(a2, (uint64_t)v11, &qword_100E6CD98);
      sub_10006DF38(a4, v22, &qword_100E6CD98);
      char v23 = static Date.< infix(_:_:)();
      sub_1001781AC(v22, &qword_100E6CD98);
      sub_1001781AC((uint64_t)v11, &qword_100E6CD98);
      if (v23)
      {
        unint64_t v24 = a2 + v13;
        if (a1 < a2 || a1 >= v24)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (a1 != a2)
        {
          swift_arrayInitWithTakeBackToFront();
        }
      }
      else
      {
        unint64_t v26 = a4 + v13;
        if (a1 < a4 || a1 >= v26)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (a1 != a4)
        {
          swift_arrayInitWithTakeBackToFront();
        }
        unint64_t v24 = a2;
        a4 = v26;
        uint64_t v13 = v46;
      }
      a1 += v13;
      BOOL v28 = a4 >= v20 || v24 >= v50;
      a2 = v24;
    }
    while (!v28);
  }
LABEL_69:
  int64_t v43 = v20 - a4;
  if (v13 != -1 || v43 != 0x8000000000000000)
  {
    sub_1007EAF78(a4, v43 / v13);
    return;
  }
LABEL_77:
  __break(1u);
}

unint64_t sub_1009A8124()
{
  unint64_t result = qword_100EA55D8;
  if (!qword_100EA55D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA55D8);
  }
  return result;
}

uint64_t type metadata accessor for MaxDaylight(uint64_t a1)
{
  return sub_10018678C(a1, qword_100EA58B8);
}

uint64_t type metadata accessor for DaylightData(uint64_t a1)
{
  return sub_10018678C(a1, qword_100EA5810);
}

uint64_t type metadata accessor for EdgeSunEvents(uint64_t a1)
{
  return sub_10018678C(a1, qword_100EA5948);
}

uint64_t type metadata accessor for SunriseSunsetDaylightCalculator.TimeRange(uint64_t a1)
{
  return sub_10018678C(a1, qword_100EA5700);
}

uint64_t sub_1009A81F0(uint64_t isStackAllocationSafe)
{
  uint64_t v2 = isStackAllocationSafe;
  char v3 = *(unsigned char *)(isStackAllocationSafe + 32);
  unint64_t v4 = (unint64_t)((1 << v3) + 63) >> 6;
  if ((v3 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe);
    uint64_t v5 = (uint64_t *)((char *)&v10 - ((8 * v4 + 15) & 0x3FFFFFFFFFFFFFF0));
    sub_1007F3004(0, v4, v5);
    sub_1009A8354((uint64_t)v5, v4, v2);
    if (v1) {
      swift_willThrow();
    }
    else {
      return v6;
    }
  }
  else
  {
    uint64_t v7 = (void *)swift_slowAlloc();
    sub_1007F3004(0, v4, v7);
    sub_1009A8354((uint64_t)v7, v4, v2);
    uint64_t v2 = v8;
    swift_slowDealloc();
  }
  return v2;
}

void sub_1009A8354(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v36 = a2;
  uint64_t v37 = a1;
  uint64_t v48 = sub_10017DF08(&qword_100E6CD98);
  __chkstk_darwin(v48);
  unint64_t v47 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for SunriseSunsetDaylightCalculator.SunActivity(0);
  uint64_t v45 = *(void *)(v5 - 8);
  uint64_t v46 = v5;
  __chkstk_darwin(v5);
  Swift::Int v44 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v52 = (uint64_t)&v35 - v8;
  uint64_t v9 = type metadata accessor for Date();
  __n128 v11 = __chkstk_darwin(v9);
  uint64_t v51 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v13 = 0;
  uint64_t v49 = a3;
  uint64_t v14 = *(void *)(a3 + 64);
  uint64_t v38 = 0;
  uint64_t v39 = a3 + 64;
  uint64_t v15 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v16 = -1;
  if (v15 < 64) {
    uint64_t v16 = ~(-1 << v15);
  }
  unint64_t v17 = v16 & v14;
  uint64_t v42 = v10 + 16;
  uint64_t v43 = v10;
  int64_t v40 = (unint64_t)(v15 + 63) >> 6;
  unint64_t v41 = (void (**)(char *, uint64_t))(v10 + 8);
  uint64_t v18 = (uint64_t)v47;
  while (2)
  {
    if (v17)
    {
      unint64_t v19 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      int64_t v50 = v13;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_20;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v21 >= v40) {
      break;
    }
    unint64_t v22 = *(void *)(v39 + 8 * v21);
    int64_t v23 = v13 + 1;
    if (v22) {
      goto LABEL_19;
    }
    int64_t v23 = v13 + 2;
    if (v13 + 2 >= v40) {
      break;
    }
    unint64_t v22 = *(void *)(v39 + 8 * v23);
    if (v22) {
      goto LABEL_19;
    }
    int64_t v23 = v13 + 3;
    if (v13 + 3 >= v40) {
      break;
    }
    unint64_t v22 = *(void *)(v39 + 8 * v23);
    if (v22) {
      goto LABEL_19;
    }
    uint64_t v24 = v13 + 4;
    if (v13 + 4 >= v40) {
      break;
    }
    unint64_t v22 = *(void *)(v39 + 8 * v24);
    if (!v22)
    {
      while (1)
      {
        int64_t v23 = v24 + 1;
        if (__OFADD__(v24, 1)) {
          break;
        }
        if (v23 >= v40) {
          goto LABEL_28;
        }
        unint64_t v22 = *(void *)(v39 + 8 * v23);
        ++v24;
        if (v22) {
          goto LABEL_19;
        }
      }
LABEL_30:
      __break(1u);
      JUMPOUT(0x1009A886CLL);
    }
    int64_t v23 = v13 + 4;
LABEL_19:
    unint64_t v17 = (v22 - 1) & v22;
    int64_t v50 = v23;
    unint64_t v20 = __clz(__rbit64(v22)) + (v23 << 6);
LABEL_20:
    uint64_t v25 = *(void (**)(char *, unint64_t, uint64_t, __n128))(v43 + 16);
    unint64_t v26 = v51;
    v25(v51, *(void *)(v49 + 48) + *(void *)(v43 + 72) * v20, v9, v11);
    sub_1009A8900();
    ((void (*)(uint64_t, char *, uint64_t))v25)(v18, v26, v9);
    sub_1009A8900();
    uint64_t v27 = v44;
    sub_1009A8900();
    sub_1001781AC(v18, &qword_100E6CD98);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v29 = v41;
    switch(EnumCaseMultiPayload)
    {
      case 1:
        uint64_t v31 = sub_10017DF08(&qword_100E963A0);
        unint64_t v30 = *v29;
        (*v29)(&v27[*(int *)(v31 + 48)], v9);
        v30(v27, v9);
        goto LABEL_23;
      case 2:
      case 3:
        unint64_t v30 = *v41;
        (*v41)(v27, v9);
LABEL_23:
        int64_t v13 = v50;
        sub_1009A894C(v52, (void (*)(void))type metadata accessor for SunriseSunsetDaylightCalculator.SunActivity);
        v30(v51, v9);
        continue;
      case 4:
      case 5:
        goto LABEL_25;
      default:
        uint64_t v32 = sub_10017DF08(&qword_100E963A0);
        unint64_t v33 = *v29;
        (*v29)(&v27[*(int *)(v32 + 48)], v9);
        v33(v27, v9);
LABEL_25:
        sub_1009A894C(v52, (void (*)(void))type metadata accessor for SunriseSunsetDaylightCalculator.SunActivity);
        (*v29)(v51, v9);
        *(void *)(v37 + ((v20 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v20;
        BOOL v34 = __OFADD__(v38++, 1);
        int64_t v13 = v50;
        if (!v34) {
          continue;
        }
        __break(1u);
        break;
    }
    break;
  }
LABEL_28:
  sub_1007BF76C(v37, v36, v38, v49);
}

uint64_t sub_1009A8884()
{
  return swift_deallocObject();
}

uint64_t sub_1009A8894()
{
  uint64_t v1 = sub_100162814();
  v2(v1);
  sub_100162E4C();
  uint64_t v3 = sub_100126010();
  v4(v3);
  return v0;
}

uint64_t type metadata accessor for SunriseSunsetDaylightCalculator.SunActivity(uint64_t a1)
{
  return sub_10018678C(a1, qword_100EA5670);
}

uint64_t sub_1009A8900()
{
  uint64_t v1 = sub_100162814();
  v2(v1);
  sub_100162E4C();
  uint64_t v3 = sub_10011BFA4();
  v4(v3);
  return v0;
}

uint64_t sub_1009A894C(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_1009A89A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SunriseSunsetDaylightCalculator.SunActivity(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for MonthSunAverage(uint64_t a1)
{
  return sub_10018678C(a1, (uint64_t *)&unk_100EA57A8);
}

uint64_t sub_1009A8A28(uint64_t a1)
{
  return sub_1009A43E4(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1009A8A44(uint64_t a1)
{
  return sub_1009A4FE4(a1, *(uint64_t **)(v1 + 16), *(void *)(v1 + 24), *(uint64_t **)(v1 + 32), *(uint64_t **)(v1 + 40), *(void *)(v1 + 48), *(void **)(v1 + 56));
}

uint64_t sub_1009A8A68(uint64_t a1, uint64_t a2, unsigned char *a3)
{
  return sub_1009A6F04(a1, a2, a3, *(void *)(v3 + 16), *(void *)(v3 + 24), *(uint64_t **)(v3 + 32));
}

uint64_t *sub_1009A8A74(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
        uint64_t v7 = type metadata accessor for Date();
        uint64_t v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16);
        v8(a1, a2, v7);
        uint64_t v9 = sub_10017DF08(&qword_100E963A0);
        v8((uint64_t *)((char *)a1 + *(int *)(v9 + 48)), (uint64_t *)((char *)a2 + *(int *)(v9 + 48)), v7);
        goto LABEL_7;
      case 2u:
      case 3u:
        uint64_t v11 = type metadata accessor for Date();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
LABEL_7:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(v6 + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_1009A8CE8(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
    case 1:
      uint64_t v3 = type metadata accessor for Date();
      uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
      ((void (*)(void *__return_ptr, uint64_t, uint64_t))v8)((void *)(v3 - 8), a1, v3);
      uint64_t v4 = a1 + *(int *)(sub_10017DF08(&qword_100E963A0) + 48);
      uint64_t v5 = v3;
      uint64_t v6 = v8;
      goto LABEL_4;
    case 2:
    case 3:
      uint64_t v7 = type metadata accessor for Date();
      uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
      uint64_t v5 = v7;
      uint64_t v4 = a1;
LABEL_4:
      uint64_t result = v6(v4, v5);
      break;
    default:
      return result;
  }
  return result;
}

char *sub_1009A8E08(char *a1, char *a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 1u:
      uint64_t v6 = type metadata accessor for Date();
      uint64_t v7 = *(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 16);
      v7(a1, a2, v6);
      uint64_t v8 = sub_10017DF08(&qword_100E963A0);
      v7(&a1[*(int *)(v8 + 48)], &a2[*(int *)(v8 + 48)], v6);
      goto LABEL_5;
    case 2u:
    case 3u:
      uint64_t v9 = type metadata accessor for Date();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
LABEL_5:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

char *sub_1009A9038(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1009A894C((uint64_t)a1, (void (*)(void))type metadata accessor for SunriseSunsetDaylightCalculator.SunActivity);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
        uint64_t v6 = type metadata accessor for Date();
        uint64_t v7 = *(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 16);
        v7(a1, a2, v6);
        uint64_t v8 = sub_10017DF08(&qword_100E963A0);
        v7(&a1[*(int *)(v8 + 48)], &a2[*(int *)(v8 + 48)], v6);
        goto LABEL_6;
      case 2u:
      case 3u:
        uint64_t v9 = type metadata accessor for Date();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
LABEL_6:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

char *sub_1009A928C(char *a1, char *a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 1u:
      uint64_t v6 = type metadata accessor for Date();
      uint64_t v7 = *(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32);
      v7(a1, a2, v6);
      uint64_t v8 = sub_10017DF08(&qword_100E963A0);
      v7(&a1[*(int *)(v8 + 48)], &a2[*(int *)(v8 + 48)], v6);
      goto LABEL_5;
    case 2u:
    case 3u:
      uint64_t v9 = type metadata accessor for Date();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(a1, a2, v9);
LABEL_5:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

char *sub_1009A94BC(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1009A894C((uint64_t)a1, (void (*)(void))type metadata accessor for SunriseSunsetDaylightCalculator.SunActivity);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
        uint64_t v6 = type metadata accessor for Date();
        uint64_t v7 = *(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32);
        v7(a1, a2, v6);
        uint64_t v8 = sub_10017DF08(&qword_100E963A0);
        v7(&a1[*(int *)(v8 + 48)], &a2[*(int *)(v8 + 48)], v6);
        goto LABEL_6;
      case 2u:
      case 3u:
        uint64_t v9 = type metadata accessor for Date();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(a1, a2, v9);
LABEL_6:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_1009A9710()
{
  uint64_t result = type metadata accessor for Date();
  if (v1 <= 0x3F)
  {
    uint64_t v2 = *(void *)(result - 8) + 64;
    swift_getTupleTypeLayout2();
    uint64_t v5 = &v4;
    swift_getTupleTypeLayout2();
    uint64_t v6 = &v3;
    uint64_t v7 = v2;
    uint64_t v8 = v2;
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_1009A97E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1009A97FC);
}

uint64_t sub_1009A9800(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1009A9814);
}

unsigned char *storeEnumTagSinglePayload for CalculatorError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1009A98E8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CalculatorError()
{
  return &type metadata for CalculatorError;
}

uint64_t *sub_1009A9920(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    uint64_t v7 = sub_10017DF08(&qword_100E963A0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 2, v7))
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      uint64_t v9 = type metadata accessor for Date();
      uint64_t v10 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v9 - 8) + 16);
      v10(a1, a2, v9);
      v10((uint64_t *)((char *)a1 + *(int *)(v7 + 48)), (uint64_t *)((char *)a2 + *(int *)(v7 + 48)), v9);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 2, v7);
    }
  }
  return a1;
}

uint64_t sub_1009A9A50(uint64_t a1)
{
  uint64_t v2 = sub_10017DF08(&qword_100E963A0);
  uint64_t result = _s7Weather24LocationCompositionStateOwet_0(a1, 2, v2);
  if (!result)
  {
    uint64_t v4 = type metadata accessor for Date();
    uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
    ((void (*)(void *__return_ptr, uint64_t, uint64_t))v6)((void *)(v4 - 8), a1, v4);
    uint64_t v5 = a1 + *(int *)(v2 + 48);
    return v6(v5, v4);
  }
  return result;
}

char *sub_1009A9B24(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_10017DF08(&qword_100E963A0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 2, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v7 = type metadata accessor for Date();
    uint64_t v8 = *(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v8(&a1[*(int *)(v6 + 48)], &a2[*(int *)(v6 + 48)], v7);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 2, v6);
  }
  return a1;
}

char *sub_1009A9C18(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_10017DF08(&qword_100E963A0);
  int v7 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a1, 2, v6);
  int v8 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 2, v6);
  if (!v7)
  {
    if (!v8)
    {
      uint64_t v12 = type metadata accessor for Date();
      int64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 24);
      v13(a1, a2, v12);
      v13(&a1[*(int *)(v6 + 48)], &a2[*(int *)(v6 + 48)], v12);
      return a1;
    }
    sub_1001781AC((uint64_t)a1, &qword_100E963A0);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  uint64_t v9 = type metadata accessor for Date();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
  v10(a1, a2, v9);
  v10(&a1[*(int *)(v6 + 48)], &a2[*(int *)(v6 + 48)], v9);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 2, v6);
  return a1;
}

char *sub_1009A9D98(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_10017DF08(&qword_100E963A0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 2, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v7 = type metadata accessor for Date();
    int v8 = *(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32);
    v8(a1, a2, v7);
    v8(&a1[*(int *)(v6 + 48)], &a2[*(int *)(v6 + 48)], v7);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 2, v6);
  }
  return a1;
}

char *sub_1009A9E8C(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_10017DF08(&qword_100E963A0);
  int v7 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a1, 2, v6);
  int v8 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 2, v6);
  if (!v7)
  {
    if (!v8)
    {
      uint64_t v12 = type metadata accessor for Date();
      int64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 40);
      v13(a1, a2, v12);
      v13(&a1[*(int *)(v6 + 48)], &a2[*(int *)(v6 + 48)], v12);
      return a1;
    }
    sub_1001781AC((uint64_t)a1, &qword_100E963A0);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  uint64_t v9 = type metadata accessor for Date();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32);
  v10(a1, a2, v9);
  v10(&a1[*(int *)(v6 + 48)], &a2[*(int *)(v6 + 48)], v9);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 2, v6);
  return a1;
}

uint64_t sub_1009AA00C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1009AA020);
}

uint64_t sub_1009AA020(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10017DF08(&qword_100E963A0);
  unsigned int v5 = _s7Weather24LocationCompositionStateOwet_0(a1, a2, v4);
  if (v5 >= 3) {
    return v5 - 2;
  }
  else {
    return 0;
  }
}

uint64_t sub_1009AA06C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1009AA080);
}

uint64_t sub_1009AA080(uint64_t a1, int a2, uint64_t a3)
{
  if (a2) {
    uint64_t v5 = (a2 + 2);
  }
  else {
    uint64_t v5 = 0;
  }
  uint64_t v6 = sub_10017DF08(&qword_100E963A0);

  return _s7Weather24LocationCompositionStateOwst_0(a1, v5, a3, v6);
}

uint64_t sub_1009AA0E4(uint64_t a1)
{
  uint64_t v2 = sub_10017DF08(&qword_100E963A0);

  return _s7Weather24LocationCompositionStateOwet_0(a1, 2, v2);
}

uint64_t sub_1009AA12C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10017DF08(&qword_100E963A0);

  return _s7Weather24LocationCompositionStateOwst_0(a1, a2, 2, v4);
}

uint64_t sub_1009AA17C()
{
  uint64_t result = type metadata accessor for Date();
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

uint64_t *sub_1009AA20C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v5 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a1;
    uint64_t v6 = *(int *)(a3 + 20);
    int v7 = (char *)a1 + v6;
    int v8 = (char *)a2 + v6;
    type metadata accessor for MaxDaylight(0);
    swift_bridgeObjectRetain();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v10 = type metadata accessor for Date();
    uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
    v11(v7, v8, v10);
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v12 = sub_10017DF08(&qword_100E96358);
      v11(&v7[*(int *)(v12 + 48)], &v8[*(int *)(v12 + 48)], v10);
    }
    else
    {
      int64_t v13 = (int *)sub_10017DF08(&qword_100E96378);
      v11(&v7[v13[12]], &v8[v13[12]], v10);
      v11(&v7[v13[16]], &v8[v13[16]], v10);
      uint64_t v14 = v13[20];
      uint64_t v15 = &v7[v14];
      uint64_t v16 = &v8[v14];
      v11(&v7[v14], v16, v10);
      uint64_t v17 = type metadata accessor for EdgeSunEvents(0);
      v11(&v15[*(int *)(v17 + 20)], &v16[*(int *)(v17 + 20)], v10);
    }
    swift_storeEnumTagMultiPayload();
  }
  return v5;
}

uint64_t sub_1009AA3EC(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  type metadata accessor for MaxDaylight(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v11 = *(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
  v11(v4, v6);
  if (EnumCaseMultiPayload == 1)
  {
    int v7 = (int *)(sub_10017DF08(&qword_100E96358) + 48);
  }
  else
  {
    int v8 = (int *)sub_10017DF08(&qword_100E96378);
    v11(v4 + v8[12], v6);
    v11(v4 + v8[16], v6);
    v4 += v8[20];
    v11(v4, v6);
    int v7 = (int *)(type metadata accessor for EdgeSunEvents(0) + 20);
  }
  uint64_t v9 = v4 + *v7;

  return ((uint64_t (*)(uint64_t, uint64_t))v11)(v9, v6);
}

void *sub_1009AA540(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  type metadata accessor for MaxDaylight(0);
  swift_bridgeObjectRetain();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v8 = type metadata accessor for Date();
  uint64_t v9 = *(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16);
  v9(v5, v6, v8);
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v10 = sub_10017DF08(&qword_100E96358);
    v9(&v5[*(int *)(v10 + 48)], &v6[*(int *)(v10 + 48)], v8);
  }
  else
  {
    uint64_t v11 = (int *)sub_10017DF08(&qword_100E96378);
    v9(&v5[v11[12]], &v6[v11[12]], v8);
    v9(&v5[v11[16]], &v6[v11[16]], v8);
    uint64_t v12 = v11[20];
    int64_t v13 = &v5[v12];
    uint64_t v14 = &v6[v12];
    v9(&v5[v12], v14, v8);
    uint64_t v15 = type metadata accessor for EdgeSunEvents(0);
    v9(&v13[*(int *)(v15 + 20)], &v14[*(int *)(v15 + 20)], v8);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *sub_1009AA6CC(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    uint64_t v6 = *(int *)(a3 + 20);
    int v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    sub_1009A894C((uint64_t)a1 + v6, (void (*)(void))type metadata accessor for MaxDaylight);
    type metadata accessor for MaxDaylight(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v10 = type metadata accessor for Date();
    uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
    v11(v7, v8, v10);
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v12 = sub_10017DF08(&qword_100E96358);
      v11(&v7[*(int *)(v12 + 48)], &v8[*(int *)(v12 + 48)], v10);
    }
    else
    {
      int64_t v13 = (int *)sub_10017DF08(&qword_100E96378);
      v11(&v7[v13[12]], &v8[v13[12]], v10);
      v11(&v7[v13[16]], &v8[v13[16]], v10);
      uint64_t v14 = v13[20];
      uint64_t v15 = &v7[v14];
      uint64_t v16 = &v8[v14];
      v11(&v7[v14], v16, v10);
      uint64_t v17 = type metadata accessor for EdgeSunEvents(0);
      v11(&v15[*(int *)(v17 + 20)], &v16[*(int *)(v17 + 20)], v10);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_1009AA88C(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  type metadata accessor for MaxDaylight(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v8 = type metadata accessor for Date();
  uint64_t v9 = *(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 32);
  v9(v5, v6, v8);
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v10 = sub_10017DF08(&qword_100E96358);
    v9(&v5[*(int *)(v10 + 48)], &v6[*(int *)(v10 + 48)], v8);
  }
  else
  {
    uint64_t v11 = (int *)sub_10017DF08(&qword_100E96378);
    v9(&v5[v11[12]], &v6[v11[12]], v8);
    v9(&v5[v11[16]], &v6[v11[16]], v8);
    uint64_t v12 = v11[20];
    int64_t v13 = &v5[v12];
    uint64_t v14 = &v6[v12];
    v9(&v5[v12], v14, v8);
    uint64_t v15 = type metadata accessor for EdgeSunEvents(0);
    v9(&v13[*(int *)(v15 + 20)], &v14[*(int *)(v15 + 20)], v8);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *sub_1009AAA10(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    uint64_t v6 = *(int *)(a3 + 20);
    int v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    sub_1009A894C((uint64_t)a1 + v6, (void (*)(void))type metadata accessor for MaxDaylight);
    type metadata accessor for MaxDaylight(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v10 = type metadata accessor for Date();
    uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32);
    v11(v7, v8, v10);
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v12 = sub_10017DF08(&qword_100E96358);
      v11(&v7[*(int *)(v12 + 48)], &v8[*(int *)(v12 + 48)], v10);
    }
    else
    {
      int64_t v13 = (int *)sub_10017DF08(&qword_100E96378);
      v11(&v7[v13[12]], &v8[v13[12]], v10);
      v11(&v7[v13[16]], &v8[v13[16]], v10);
      uint64_t v14 = v13[20];
      uint64_t v15 = &v7[v14];
      uint64_t v16 = &v8[v14];
      v11(&v7[v14], v16, v10);
      uint64_t v17 = type metadata accessor for EdgeSunEvents(0);
      v11(&v15[*(int *)(v17 + 20)], &v16[*(int *)(v17 + 20)], v10);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1009AABC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1009AABDC);
}

uint64_t sub_1009AABDC(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for MaxDaylight(0);
    uint64_t v9 = (uint64_t)a1 + *(int *)(a3 + 20);
    return _s7Weather24LocationCompositionStateOwet_0(v9, a2, v8);
  }
}

uint64_t sub_1009AAC64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1009AAC78);
}

void *sub_1009AAC78(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for MaxDaylight(0);
    uint64_t v8 = (uint64_t)v5 + *(int *)(a4 + 20);
    return (void *)_s7Weather24LocationCompositionStateOwst_0(v8, a2, a2, v7);
  }
  return result;
}

uint64_t sub_1009AACF8()
{
  uint64_t result = type metadata accessor for MaxDaylight(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1009AAD94(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v7 = type metadata accessor for Date();
    uint64_t v8 = *(void (**)(uint64_t *, char *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(a1, (char *)a2, v7);
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v9 = sub_10017DF08(&qword_100E96358);
      v8((uint64_t *)((char *)a1 + *(int *)(v9 + 48)), (char *)a2 + *(int *)(v9 + 48), v7);
    }
    else
    {
      uint64_t v11 = (int *)sub_10017DF08(&qword_100E96378);
      v8((uint64_t *)((char *)a1 + v11[12]), (char *)a2 + v11[12], v7);
      v8((uint64_t *)((char *)a1 + v11[16]), (char *)a2 + v11[16], v7);
      uint64_t v12 = v11[20];
      int64_t v13 = (char *)a1 + v12;
      uint64_t v14 = (char *)a2 + v12;
      v8((uint64_t *)((char *)a1 + v12), v14, v7);
      uint64_t v15 = type metadata accessor for EdgeSunEvents(0);
      v8((uint64_t *)&v13[*(int *)(v15 + 20)], &v14[*(int *)(v15 + 20)], v7);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1009AAF58(uint64_t a1)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v3 = type metadata accessor for Date();
  uint64_t v8 = *(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
  v8(a1, v3);
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v4 = (int *)(sub_10017DF08(&qword_100E96358) + 48);
  }
  else
  {
    int v5 = (int *)sub_10017DF08(&qword_100E96378);
    v8(a1 + v5[12], v3);
    v8(a1 + v5[16], v3);
    a1 += v5[20];
    v8(a1, v3);
    uint64_t v4 = (int *)(type metadata accessor for EdgeSunEvents(0) + 20);
  }
  uint64_t v6 = a1 + *v4;

  return ((uint64_t (*)(uint64_t, uint64_t))v8)(v6, v3);
}

uint64_t sub_1009AB088(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v5 = type metadata accessor for Date();
  uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
  v6(a1, a2, v5);
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v7 = sub_10017DF08(&qword_100E96358);
    v6(a1 + *(int *)(v7 + 48), a2 + *(int *)(v7 + 48), v5);
  }
  else
  {
    uint64_t v8 = (int *)sub_10017DF08(&qword_100E96378);
    v6(a1 + v8[12], a2 + v8[12], v5);
    v6(a1 + v8[16], a2 + v8[16], v5);
    uint64_t v9 = v8[20];
    uint64_t v10 = a1 + v9;
    uint64_t v11 = a2 + v9;
    v6(a1 + v9, v11, v5);
    uint64_t v12 = type metadata accessor for EdgeSunEvents(0);
    v6(v10 + *(int *)(v12 + 20), v11 + *(int *)(v12 + 20), v5);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_1009AB1F4(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_1009A894C(a1, (void (*)(void))type metadata accessor for MaxDaylight);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v5 = type metadata accessor for Date();
    uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
    v6(a1, a2, v5);
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v7 = sub_10017DF08(&qword_100E96358);
      v6(a1 + *(int *)(v7 + 48), a2 + *(int *)(v7 + 48), v5);
    }
    else
    {
      uint64_t v8 = (int *)sub_10017DF08(&qword_100E96378);
      v6(a1 + v8[12], a2 + v8[12], v5);
      v6(a1 + v8[16], a2 + v8[16], v5);
      uint64_t v9 = v8[20];
      uint64_t v10 = a1 + v9;
      uint64_t v11 = a2 + v9;
      v6(a1 + v9, v11, v5);
      uint64_t v12 = type metadata accessor for EdgeSunEvents(0);
      v6(v10 + *(int *)(v12 + 20), v11 + *(int *)(v12 + 20), v5);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1009AB384(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v5 = type metadata accessor for Date();
  uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32);
  v6(a1, a2, v5);
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v7 = sub_10017DF08(&qword_100E96358);
    v6(a1 + *(int *)(v7 + 48), a2 + *(int *)(v7 + 48), v5);
  }
  else
  {
    uint64_t v8 = (int *)sub_10017DF08(&qword_100E96378);
    v6(a1 + v8[12], a2 + v8[12], v5);
    v6(a1 + v8[16], a2 + v8[16], v5);
    uint64_t v9 = v8[20];
    uint64_t v10 = a1 + v9;
    uint64_t v11 = a2 + v9;
    v6(a1 + v9, v11, v5);
    uint64_t v12 = type metadata accessor for EdgeSunEvents(0);
    v6(v10 + *(int *)(v12 + 20), v11 + *(int *)(v12 + 20), v5);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_1009AB4F0(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_1009A894C(a1, (void (*)(void))type metadata accessor for MaxDaylight);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v5 = type metadata accessor for Date();
    uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32);
    v6(a1, a2, v5);
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v7 = sub_10017DF08(&qword_100E96358);
      v6(a1 + *(int *)(v7 + 48), a2 + *(int *)(v7 + 48), v5);
    }
    else
    {
      uint64_t v8 = (int *)sub_10017DF08(&qword_100E96378);
      v6(a1 + v8[12], a2 + v8[12], v5);
      v6(a1 + v8[16], a2 + v8[16], v5);
      uint64_t v9 = v8[20];
      uint64_t v10 = a1 + v9;
      uint64_t v11 = a2 + v9;
      v6(a1 + v9, v11, v5);
      uint64_t v12 = type metadata accessor for EdgeSunEvents(0);
      v6(v10 + *(int *)(v12 + 20), v11 + *(int *)(v12 + 20), v5);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1009AB680()
{
  uint64_t result = type metadata accessor for Date();
  if (v1 <= 0x3F)
  {
    uint64_t v4 = *(void *)(result - 8) + 64;
    uint64_t v5 = v4;
    uint64_t v6 = v4;
    uint64_t result = type metadata accessor for EdgeSunEvents(319);
    if (v2 <= 0x3F)
    {
      uint64_t v7 = *(void *)(result - 8) + 64;
      swift_getTupleTypeLayout();
      uint64_t v9 = &v8;
      swift_getTupleTypeLayout2();
      uint64_t v10 = &v3;
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_1009AB784(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for Date();
    sub_100162E4C();
    uint64_t v9 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16);
    v9(a1, a2, v7);
    v9((uint64_t *)((char *)a1 + *(int *)(a3 + 20)), (uint64_t *)((char *)a2 + *(int *)(a3 + 20)), v7);
  }
  return a1;
}

uint64_t sub_1009AB864()
{
  sub_100162814();
  uint64_t v2 = type metadata accessor for Date();
  sub_100162E4C();
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v6(v1, v2);
  uint64_t v4 = v1 + *(int *)(v0 + 20);

  return ((uint64_t (*)(uint64_t, uint64_t))v6)(v4, v2);
}

uint64_t sub_1009AB8F4()
{
  sub_10017AC4C();
  sub_100162E4C();
  uint64_t v2 = *(void (**)(uint64_t))(v1 + 16);
  uint64_t v3 = sub_1001808C8();
  v2(v3);
  uint64_t v4 = sub_10019F5AC();
  v2(v4);
  return v0;
}

uint64_t sub_1009AB958()
{
  sub_10017AC4C();
  sub_100162E4C();
  uint64_t v2 = *(void (**)(uint64_t))(v1 + 24);
  uint64_t v3 = sub_1001808C8();
  v2(v3);
  uint64_t v4 = sub_10019F5AC();
  v2(v4);
  return v0;
}

uint64_t sub_1009AB9BC()
{
  sub_10017AC4C();
  sub_100162E4C();
  uint64_t v2 = *(void (**)(uint64_t))(v1 + 32);
  uint64_t v3 = sub_1001808C8();
  v2(v3);
  uint64_t v4 = sub_10019F5AC();
  v2(v4);
  return v0;
}

uint64_t sub_1009ABA20()
{
  sub_10017AC4C();
  sub_100162E4C();
  uint64_t v2 = *(void (**)(uint64_t))(v1 + 40);
  uint64_t v3 = sub_1001808C8();
  v2(v3);
  uint64_t v4 = sub_10019F5AC();
  v2(v4);
  return v0;
}

uint64_t sub_1009ABA84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1009ABA98);
}

uint64_t sub_1009ABA9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1009ABAB0);
}

uint64_t sub_1009ABAB4()
{
  uint64_t result = type metadata accessor for Date();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_1009ABB44()
{
  unint64_t result = qword_100EA5980;
  if (!qword_100EA5980)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA5980);
  }
  return result;
}

uint64_t sub_1009ABB90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t v19 = a2;
  unint64_t v20 = a4;
  uint64_t v7 = type metadata accessor for WeatherMapDisplayMode();
  __n128 v8 = __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = v4[2];
  uint64_t v12 = v4[3];
  uint64_t v13 = v4[5];
  uint64_t v14 = v4[6];
  uint64_t v15 = v4[7];
  uint64_t v18 = v4[8];
  (*(void (**)(char *, uint64_t, __n128))(v16 + 16))(v10, a1, v8);
  sub_10020D948((uint64_t)(v4 + 9), (uint64_t)v21);
  swift_unknownObjectRetain();
  swift_retain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  return sub_100A6CAC4(v11, v12, v13, v14, v15, v18, (uint64_t)v10, v20, v21, v19, a3);
}

uint64_t sub_1009ABCF8()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 72);
  return v0;
}

uint64_t sub_1009ABD38()
{
  sub_1009ABCF8();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for InteractiveMapModule()
{
  return self;
}

uint64_t sub_1009ABD90()
{
  uint64_t v0 = type metadata accessor for WeatherMapDisplayMode();
  sub_100097814(v0, qword_100F521D8);
  unint64_t v1 = (void *)sub_1002102B0(v0, (uint64_t)qword_100F521D8);
  if (qword_100E62348 != -1) {
    swift_once();
  }
  id v2 = [objc_allocWithZone((Class)UISpringTimingParameters) initWithMass:xmmword_100F514F0 stiffness:*(double *)&qword_100F51500 damping:unk_100F51508 initialVelocity:unk_100F51508];
  [v2 ts_settlingDuration];
  uint64_t v4 = v3;

  *unint64_t v1 = v4;
  uint64_t v5 = enum case for WeatherMapDisplayMode.SnapshotTransition.animated(_:);
  uint64_t v6 = type metadata accessor for WeatherMapDisplayMode.SnapshotTransition();
  (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 104))(v1, v5, v6);
  uint64_t v7 = enum case for WeatherMapDisplayMode.interactive(_:);
  __n128 v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)(v0 - 8) + 104);

  return v8(v1, v7, v0);
}

BOOL sub_1009ABF08(double a1, double a2, double a3, double a4, double a5, double a6, double a7, double a8)
{
  return CGRectEqualToRect(*(CGRect *)&a1, *(CGRect *)&a5);
}

BOOL sub_1009ABF20(double *a1, double *a2)
{
  return sub_1009ABF08(*a1, a1[1], a1[2], a1[3], *a2, a2[1], a2[2], a2[3]);
}

uint64_t sub_1009ABF34(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = type metadata accessor for WindComponentViewModel();
  int v5 = *(_DWORD *)(*(void *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v20 = *a2;
    *(void *)a1 = *a2;
    a1 = v20 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v6 = v4;
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    uint64_t v8 = a2[3];
    *(void *)(a1 + 16) = a2[2];
    *(void *)(a1 + 24) = v8;
    uint64_t v9 = a2[5];
    *(void *)(a1 + 32) = a2[4];
    *(void *)(a1 + 40) = v9;
    uint64_t v10 = a2[7];
    *(void *)(a1 + 48) = a2[6];
    *(void *)(a1 + 56) = v10;
    uint64_t v11 = a2[9];
    *(void *)(a1 + 64) = a2[8];
    *(void *)(a1 + 72) = v11;
    uint64_t v12 = a2[11];
    *(void *)(a1 + 80) = a2[10];
    *(void *)(a1 + 88) = v12;
    uint64_t v13 = a2[13];
    *(void *)(a1 + 96) = a2[12];
    *(void *)(a1 + 104) = v13;
    uint64_t v14 = a2[15];
    *(void *)(a1 + 112) = a2[14];
    *(void *)(a1 + 120) = v14;
    uint64_t v15 = a2[17];
    *(void *)(a1 + 128) = a2[16];
    *(void *)(a1 + 136) = v15;
    uint64_t v16 = a2[19];
    *(void *)(a1 + 144) = a2[18];
    *(void *)(a1 + 152) = v16;
    uint64_t v17 = a2[21];
    *(void *)(a1 + 160) = a2[20];
    *(void *)(a1 + 168) = v17;
    *(_OWORD *)(a1 + 176) = *((_OWORD *)a2 + 11);
    *(void *)(a1 + 192) = a2[24];
    uint64_t v18 = *(int *)(v4 + 68);
    uint64_t v23 = (uint64_t)a2 + v18;
    uint64_t v24 = a1 + v18;
    uint64_t v19 = type metadata accessor for WindComponentCompassViewModel();
    unint64_t v22 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v22(v24, v23, v19);
    *(void *)(a1 + *(int *)(v6 + 72)) = *(uint64_t *)((char *)a2 + *(int *)(v6 + 72));
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_1009AC11C(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v2 = a1 + *(int *)(type metadata accessor for WindComponentViewModel() + 68);
  uint64_t v3 = type metadata accessor for WindComponentCompassViewModel();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);

  return swift_bridgeObjectRelease();
}

uint64_t sub_1009AC208(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  uint64_t v7 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v7;
  uint64_t v8 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v8;
  uint64_t v9 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v9;
  uint64_t v10 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v10;
  uint64_t v11 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v11;
  uint64_t v12 = *(void *)(a2 + 136);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = v12;
  uint64_t v13 = *(void *)(a2 + 152);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = v13;
  uint64_t v14 = *(void *)(a2 + 168);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = v14;
  *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  uint64_t v21 = type metadata accessor for WindComponentViewModel();
  uint64_t v15 = *(int *)(v21 + 68);
  uint64_t v19 = a2 + v15;
  uint64_t v20 = a1 + v15;
  uint64_t v16 = type metadata accessor for WindComponentCompassViewModel();
  uint64_t v18 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v18(v20, v19, v16);
  *(void *)(a1 + *(int *)(v21 + 72)) = *(void *)(a2 + *(int *)(v21 + 72));
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_1009AC3A0(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[10] = a2[10];
  a1[11] = a2[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[12] = a2[12];
  a1[13] = a2[13];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[14] = a2[14];
  a1[15] = a2[15];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[16] = a2[16];
  a1[17] = a2[17];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[18] = a2[18];
  a1[19] = a2[19];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[20] = a2[20];
  a1[21] = a2[21];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[22] = a2[22];
  a1[23] = a2[23];
  a1[24] = a2[24];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = type metadata accessor for WindComponentViewModel();
  uint64_t v5 = *(int *)(v4 + 68);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = type metadata accessor for WindComponentCompassViewModel();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 24))(v6, v7, v8);
  *(void *)((char *)a1 + *(int *)(v4 + 72)) = *(void *)((char *)a2 + *(int *)(v4 + 72));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1009AC5D0(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  long long v5 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v5;
  long long v6 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v6;
  long long v7 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v7;
  long long v8 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v8;
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
  uint64_t v9 = type metadata accessor for WindComponentViewModel();
  uint64_t v10 = *(int *)(v9 + 68);
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  uint64_t v13 = type metadata accessor for WindComponentCompassViewModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
  *(void *)(a1 + *(int *)(v9 + 72)) = *(void *)(a2 + *(int *)(v9 + 72));
  return a1;
}

void *sub_1009AC6A8(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a2[9];
  a1[8] = a2[8];
  a1[9] = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = a2[11];
  a1[10] = a2[10];
  a1[11] = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = a2[13];
  a1[12] = a2[12];
  a1[13] = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = a2[15];
  a1[14] = a2[14];
  a1[15] = v11;
  swift_bridgeObjectRelease();
  uint64_t v12 = a2[17];
  a1[16] = a2[16];
  a1[17] = v12;
  swift_bridgeObjectRelease();
  uint64_t v13 = a2[19];
  a1[18] = a2[18];
  a1[19] = v13;
  swift_bridgeObjectRelease();
  uint64_t v14 = a2[21];
  a1[20] = a2[20];
  a1[21] = v14;
  swift_bridgeObjectRelease();
  a1[22] = a2[22];
  uint64_t v15 = a2[24];
  a1[23] = a2[23];
  a1[24] = v15;
  swift_bridgeObjectRelease();
  uint64_t v16 = type metadata accessor for WindComponentViewModel();
  uint64_t v17 = *(int *)(v16 + 68);
  uint64_t v18 = (char *)a1 + v17;
  uint64_t v19 = (char *)a2 + v17;
  uint64_t v20 = type metadata accessor for WindComponentCompassViewModel();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 40))(v18, v19, v20);
  *(void *)((char *)a1 + *(int *)(v16 + 72)) = *(void *)((char *)a2 + *(int *)(v16 + 72));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1009AC810(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1009AC824);
}

uint64_t sub_1009AC824(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for WindComponentViewModel();

  return _s7Weather24LocationCompositionStateOwet_0(a1, a2, v4);
}

uint64_t sub_1009AC86C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1009AC880);
}

uint64_t sub_1009AC880(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for WindComponentViewModel();

  return _s7Weather24LocationCompositionStateOwst_0(a1, a2, a2, v4);
}

uint64_t type metadata accessor for WindComponentContentView(uint64_t a1)
{
  return sub_10018678C(a1, qword_100EA5AA0);
}

uint64_t sub_1009AC8EC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1009AC908@<X0>(uint64_t a1@<X8>)
{
  *(void *)a1 = static HorizontalAlignment.center.getter();
  *(void *)(a1 + 8) = 0x4008000000000000;
  *(unsigned char *)(a1 + 16) = 0;
  uint64_t v3 = sub_10017DF08(&qword_100EA5AD8);
  return sub_1009AC954(v1, a1 + *(int *)(v3 + 44));
}

uint64_t sub_1009AC954@<X0>(char *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for WindComponentCompassViewModel();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for WeatherWindComponentCompassContainerView(0);
  uint64_t v9 = v8 - 8;
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v25 - v13;
  uint64_t v15 = type metadata accessor for WindComponentViewModel();
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v7, &a1[*(int *)(v15 + 68)], v4);
  *(void *)uint64_t v11 = swift_getKeyPath();
  v11[8] = 0;
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(&v11[*(int *)(v9 + 28)], v7, v4);
  sub_1009ACC24((uint64_t)v11, (uint64_t)v14);
  LOBYTE(v9) = static Axis.Set.horizontal.getter();
  unsigned __int8 v16 = static Axis.Set.vertical.getter();
  char v17 = Axis.Set.init(rawValue:)();
  Axis.Set.init(rawValue:)();
  if (Axis.Set.init(rawValue:)() != v9) {
    char v17 = Axis.Set.init(rawValue:)();
  }
  Axis.Set.init(rawValue:)();
  if (Axis.Set.init(rawValue:)() != v16) {
    char v17 = Axis.Set.init(rawValue:)();
  }
  uint64_t v19 = *((void *)a1 + 16);
  uint64_t v18 = *((void *)a1 + 17);
  uint64_t v21 = *((void *)a1 + 18);
  uint64_t v20 = *((void *)a1 + 19);
  uint64_t KeyPath = swift_getKeyPath();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1009AD148((uint64_t)v14, (uint64_t)v11);
  sub_1009AD148((uint64_t)v11, a2);
  uint64_t v23 = a2 + *(int *)(sub_10017DF08(&qword_100EA5AE0) + 48);
  *(unsigned char *)uint64_t v23 = v17;
  *(void *)(v23 + 8) = v19;
  *(void *)(v23 + 16) = v18;
  *(void *)(v23 + 24) = v21;
  *(void *)(v23 + 32) = v20;
  *(void *)(v23 + 40) = KeyPath;
  *(void *)(v23 + 48) = 0x3FE0000000000000;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1009AD1AC((uint64_t)v14);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return sub_1009AD1AC((uint64_t)v11);
}

uint64_t type metadata accessor for WeatherWindComponentCompassContainerView(uint64_t a1)
{
  return sub_10018678C(a1, qword_100EA5B40);
}

uint64_t sub_1009ACC24(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for WeatherWindComponentCompassContainerView(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void *sub_1009ACC88@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  HIDWORD(__dst[0]) = HIDWORD(a1);
  __dst[1] = a2;
  sub_10014A85C();
  swift_bridgeObjectRetain();
  uint64_t v4 = Text.init<A>(_:)();
  uint64_t v6 = v5;
  char v8 = v7 & 1;
  static Font.subheadline.getter();
  uint64_t v9 = Text.font(_:)();
  uint64_t v11 = v10;
  char v13 = v12;
  swift_release();
  sub_100191924(v4, v6, v8);
  swift_bridgeObjectRelease();
  LODWORD(__dst[0]) = static HierarchicalShapeStyle.primary.getter();
  uint64_t v14 = Text.foregroundStyle<A>(_:)();
  uint64_t v16 = v15;
  uint64_t v18 = v17;
  char v20 = v19 & 1;
  sub_100191924(v9, v11, v13 & 1);
  swift_bridgeObjectRelease();
  uint64_t KeyPath = swift_getKeyPath();
  LOBYTE(v4) = static Edge.Set.top.getter();
  EdgeInsets.init(_all:)();
  LOBYTE(v34) = v20;
  LOBYTE(v35) = 0;
  char v36 = v4;
  uint64_t v37 = v22;
  uint64_t v38 = v23;
  uint64_t v39 = v24;
  uint64_t v40 = v25;
  char v41 = 0;
  uint64_t v26 = static Alignment.leading.getter();
  LOBYTE(v30) = 1;
  LOBYTE(v29) = 1;
  sub_100BD8190(__src, 0, 1, 0, 1, 0, 0, 0, 1, 0, v29, 0, v30, v26, v27, v31, v32, __src[0], __src[1],
    __src[2],
    __src[3],
    __src[4],
    __src[5],
    __src[6],
    __src[7],
    __src[8],
    __src[9],
    __src[10],
    __src[11],
    __src[12],
    __src[13],
    __src[14],
    __src[15],
    __src[16],
    __src[17],
    __src[18],
    __src[19],
    __src[20],
    __src[21],
    __src[22],
    __src[23],
    __src[24],
    __src[25],
    __src[26],
    v14,
    v16,
    v34,
    v18,
    KeyPath,
    1,
    v35);
  sub_100191924(v14, v16, v20);
  swift_release();
  swift_bridgeObjectRelease();
  memcpy(__dst, __src, sizeof(__dst));
  return memcpy(a3, __dst, 0xD8uLL);
}

void *sub_1009ACE80@<X0>(void *a1@<X8>)
{
  return sub_1009ACC88(*v1, v1[1], a1);
}

uint64_t sub_1009ACE88()
{
  uint64_t v1 = sub_10017DF08(&qword_100E6D330);
  __chkstk_darwin(v1 - 8);
  sub_1001626E0();
  type metadata accessor for Font.TextStyle();
  sub_100179C0C();
  uint64_t v3 = v2;
  __chkstk_darwin(v4);
  sub_1001626E0();
  uint64_t v5 = type metadata accessor for WindComponentCompassViewModel();
  sub_100179C0C();
  uint64_t v7 = v6;
  __chkstk_darwin(v8);
  sub_1001626E0();
  uint64_t v11 = v10 - v9;
  uint64_t v12 = type metadata accessor for WeatherWindComponentCompassContainerView(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v11, v0 + *(int *)(v12 + 20), v5);
  uint64_t v13 = *(void *)v0;
  char v14 = *(unsigned char *)(v0 + 8);
  sub_100195B7C(*(void *)v0, v14);
  sub_100149AE8();
  sub_10018F6D8(v13, v14);
  uint64_t v15 = *(void (**)(uint64_t))(v3 + 104);
  uint64_t v16 = sub_1001A10D4();
  v15(v16);
  static Font.Weight.bold.getter();
  static Font.system(_:weight:)();
  uint64_t v17 = *(void (**)(uint64_t))(v3 + 8);
  uint64_t v18 = sub_10017A56C();
  v17(v18);
  uint64_t v19 = sub_1001A10D4();
  v15(v19);
  static Font.Weight.bold.getter();
  static Font.system(_:weight:)();
  uint64_t v20 = sub_10017A56C();
  v17(v20);
  uint64_t v21 = *(void *)v0;
  char v22 = *(unsigned char *)(v0 + 8);
  sub_100195B7C(v21, v22);
  sub_100149AE8();
  sub_10018F6D8(v21, v22);
  uint64_t v23 = *(void (**)(uint64_t))(*(void *)(type metadata accessor for Font.Leading() - 8) + 104);
  uint64_t v24 = sub_1001808DC();
  v23(v24);
  sub_10017D8D0();
  static Font.subheadline.getter();
  static Font.footnote.getter();
  sub_100195B7C(v21, v22);
  sub_100149AE8();
  sub_10018F6D8(v21, v22);
  uint64_t v25 = sub_1001808DC();
  v23(v25);
  sub_10017D8D0();
  return WindComponentCompassContainerView.init(model:showCircleOutline:primaryLabelFont:secondaryLabelFont:)();
}

uint64_t sub_1009AD148(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for WeatherWindComponentCompassContainerView(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1009AD1AC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for WeatherWindComponentCompassContainerView(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

ValueMetadata *type metadata accessor for WindComponentSubheadlineView()
{
  return &type metadata for WindComponentSubheadlineView;
}

unint64_t sub_1009AD218(unint64_t a1, uint64_t a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = v13 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v7 = *(void *)a2;
    char v8 = *(unsigned char *)(a2 + 8);
    sub_100195B7C(*(void *)a2, v8);
    *(void *)a1 = v7;
    *(unsigned char *)(a1 + 8) = v8;
    uint64_t v9 = *(int *)(a3 + 20);
    uint64_t v10 = a1 + v9;
    uint64_t v11 = a2 + v9;
    uint64_t v12 = type metadata accessor for WindComponentCompassViewModel();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
  }
  return a1;
}

uint64_t sub_1009AD308(uint64_t a1, uint64_t a2)
{
  sub_10018F6D8(*(void *)a1, *(unsigned char *)(a1 + 8));
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = type metadata accessor for WindComponentCompassViewModel();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

uint64_t sub_1009AD384(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)a2;
  char v7 = *(unsigned char *)(a2 + 8);
  sub_100195B7C(*(void *)a2, v7);
  *(void *)a1 = v6;
  *(unsigned char *)(a1 + 8) = v7;
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = type metadata accessor for WindComponentCompassViewModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
  return a1;
}

uint64_t sub_1009AD424(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)a2;
  char v7 = *(unsigned char *)(a2 + 8);
  sub_100195B7C(*(void *)a2, v7);
  uint64_t v8 = *(void *)a1;
  char v9 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v6;
  *(unsigned char *)(a1 + 8) = v7;
  sub_10018F6D8(v8, v9);
  uint64_t v10 = *(int *)(a3 + 20);
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  uint64_t v13 = type metadata accessor for WindComponentCompassViewModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 24))(v11, v12, v13);
  return a1;
}

uint64_t sub_1009AD4D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = type metadata accessor for WindComponentCompassViewModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t sub_1009AD554(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  char v7 = *((unsigned char *)a2 + 8);
  uint64_t v8 = *(void *)a1;
  char v9 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v6;
  *(unsigned char *)(a1 + 8) = v7;
  sub_10018F6D8(v8, v9);
  uint64_t v10 = *(int *)(a3 + 20);
  uint64_t v11 = a1 + v10;
  uint64_t v12 = (uint64_t)a2 + v10;
  uint64_t v13 = type metadata accessor for WindComponentCompassViewModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 40))(v11, v12, v13);
  return a1;
}

uint64_t sub_1009AD5EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1009AD600);
}

uint64_t sub_1009AD600(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 254)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 8);
    if (v4 > 1) {
      return (v4 ^ 0xFF) + 1;
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v8 = type metadata accessor for WindComponentCompassViewModel();
    uint64_t v9 = a1 + *(int *)(a3 + 20);
    return _s7Weather24LocationCompositionStateOwet_0(v9, a2, v8);
  }
}

uint64_t sub_1009AD680(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1009AD694);
}

uint64_t sub_1009AD694(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 254)
  {
    *(unsigned char *)(result + 8) = -(char)a2;
  }
  else
  {
    uint64_t v7 = type metadata accessor for WindComponentCompassViewModel();
    uint64_t v8 = v5 + *(int *)(a4 + 20);
    return _s7Weather24LocationCompositionStateOwst_0(v8, a2, a2, v7);
  }
  return result;
}

uint64_t sub_1009AD710()
{
  uint64_t result = type metadata accessor for WindComponentCompassViewModel();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1009AD7A8()
{
  return sub_1001246C8(&qword_100EA5B78, &qword_100EA5B80);
}

uint64_t sub_1009AD7E4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1009AD800()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1009AD824()
{
  return sub_1009AD868(&qword_100E7D420, &qword_100E7D418, (void (*)(void))sub_100501714);
}

uint64_t sub_1009AD868(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10018C6DC(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1009AD8E8()
{
  unint64_t result = qword_100EA5B88;
  if (!qword_100EA5B88)
  {
    type metadata accessor for WindComponentCompassContainerView();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA5B88);
  }
  return result;
}

uint64_t sub_1009AD938(void *a1, void *a2)
{
  BOOL v2 = *a1 == *a2 && a1[1] == a2[1];
  if (!v2 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
    return 0;
  }
  type metadata accessor for DetailChartConditionInfo();

  return static DetailCondition.== infix(_:_:)();
}

uint64_t sub_1009AD9B4()
{
  return dispatch thunk of Hashable.hash(into:)();
}

Swift::Int sub_1009ADA60()
{
  return Hasher._finalize()();
}

uint64_t type metadata accessor for DetailChartConditionInfo()
{
  uint64_t result = qword_100EA5BE8;
  if (!qword_100EA5BE8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t *sub_1009ADB70(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    uint64_t *v3 = *a2;
    uint64_t v3 = (uint64_t *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = type metadata accessor for DetailCondition();
    uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    v10(v7, v8, v9);
  }
  return v3;
}

uint64_t sub_1009ADC58(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = type metadata accessor for DetailCondition();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

void *sub_1009ADCD0(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(a3 + 20);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = type metadata accessor for DetailCondition();
  uint64_t v9 = *(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  v9(v6, v7, v8);
  return a1;
}

void *sub_1009ADD68(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for DetailCondition();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

_OWORD *sub_1009ADE04(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = type metadata accessor for DetailCondition();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

void *sub_1009ADE80(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for DetailCondition();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t sub_1009ADF0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1009ADF20);
}

uint64_t sub_1009ADF20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for DetailCondition();
    uint64_t v9 = a1 + *(int *)(a3 + 20);
    return _s7Weather24LocationCompositionStateOwet_0(v9, a2, v8);
  }
}

uint64_t sub_1009ADFA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1009ADFBC);
}

uint64_t sub_1009ADFBC(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for DetailCondition();
    uint64_t v8 = v5 + *(int *)(a4 + 20);
    return _s7Weather24LocationCompositionStateOwst_0(v8, a2, a2, v7);
  }
  return result;
}

uint64_t sub_1009AE03C()
{
  uint64_t result = type metadata accessor for DetailCondition();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1009AE0D4()
{
  return sub_1009AE1E0(&qword_100EA5C20, (void (*)(uint64_t))type metadata accessor for DetailChartConditionInfo);
}

Swift::Int sub_1009AE124()
{
  return Hasher._finalize()();
}

uint64_t sub_1009AE1E0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1009AE228()
{
  return URLHandlerManager.init()();
}

uint64_t sub_1009AE264@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  sub_1001B1E64(a1, a1[3]);
  type metadata accessor for NanoWeatherUserActivityHandler();
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!result)
  {
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v5 = result;
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100EA5CC8);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v27)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  sub_1001B1E64(a1, a1[3]);
  type metadata accessor for WeatherUserActivityHandler();
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!result)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v6 = result;
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100EA5CE0);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v25)
  {
    uint64_t v7 = sub_1000DF0C4((uint64_t)v24, v25);
    __n128 v8 = __chkstk_darwin(v7);
    uint64_t v10 = (void *)((char *)&v23[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, __n128))(v11 + 16))(v10, v8);
    uint64_t v12 = *v10;
    uint64_t v13 = type metadata accessor for WeatherStaticConfigurationActivityHandler();
    void v23[3] = v13;
    v23[4] = &off_100E2B878;
    v23[0] = v12;
    uint64_t v14 = type metadata accessor for ContinueUserActivityHandlerManager();
    uint64_t v15 = (void *)swift_allocObject();
    uint64_t v16 = sub_1000DF0C4((uint64_t)v23, v13);
    __n128 v17 = __chkstk_darwin(v16);
    uint64_t v19 = (void *)((char *)&v23[-1] - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, __n128))(v20 + 16))(v19, v17);
    uint64_t v21 = *v19;
    v15[12] = v13;
    v15[13] = &off_100E2B878;
    v15[9] = v21;
    v15[2] = v5;
    sub_1001262E4(&v26, (uint64_t)(v15 + 3));
    v15[8] = v6;
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v23);
    uint64_t result = _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v24);
    a2[3] = v14;
    a2[4] = &off_100E1E970;
    *a2 = v15;
    return result;
  }
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_1009AE550@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E98100);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v28)
  {
    __break(1u);
    goto LABEL_6;
  }
  sub_1001B1E64(a1, a1[3]);
  type metadata accessor for CoordinateActivityHandler();
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!result)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v5 = result;
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E647D8);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  uint64_t v6 = v25;
  if (v25)
  {
    uint64_t v7 = v26;
    uint64_t v8 = sub_1000DF0C4((uint64_t)v27, v28);
    v23[1] = v23;
    __n128 v9 = __chkstk_darwin(v8);
    uint64_t v11 = (void *)((char *)v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, __n128))(v12 + 16))(v11, v9);
    uint64_t v13 = *v11;
    uint64_t v14 = type metadata accessor for AppContinuationBridge();
    void v24[3] = v14;
    v24[4] = &off_100E12BD8;
    v24[0] = v13;
    uint64_t v15 = type metadata accessor for WeatherIntentUserActivityHandler();
    uint64_t v16 = (void *)swift_allocObject();
    uint64_t v17 = sub_1000DF0C4((uint64_t)v24, v14);
    __n128 v18 = __chkstk_darwin(v17);
    uint64_t v20 = (void *)((char *)v23 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, __n128))(v21 + 16))(v20, v18);
    uint64_t v22 = *v20;
    v16[5] = v14;
    v16[6] = &off_100E12BD8;
    v16[2] = v22;
    v16[7] = v5;
    v16[8] = v6;
    v16[9] = v7;
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v24);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v27);
    a2[3] = v15;
    uint64_t result = sub_1009B0E8C(&qword_100EA5D00, (void (*)(uint64_t))type metadata accessor for WeatherIntentUserActivityHandler);
    a2[4] = result;
    *a2 = v16;
    return result;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_1009AE838()
{
  uint64_t v0 = type metadata accessor for Scope();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = &v12[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  uint64_t v13 = &type metadata for WeatherFeatureFlags;
  unint64_t v14 = sub_100068B7C();
  v12[0] = 1;
  char v4 = isFeatureEnabled(_:)();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v12);
  uint64_t v5 = (void (**)(char *, uint64_t, uint64_t))(v1 + 104);
  uint64_t v6 = (void (**)(char *, uint64_t))(v1 + 8);
  if (v4) {
    type metadata accessor for LocationURLHandlerLink();
  }
  else {
    type metadata accessor for LocationURLHandler();
  }
  RegistrationContainer.register<A>(_:name:factory:)();
  uint64_t v7 = enum case for Scope.singleton(_:);
  uint64_t v8 = *v5;
  (*v5)(v3, enum case for Scope.singleton(_:), v0);
  Definition.inScope(_:)();
  swift_release();
  swift_release();
  __n128 v9 = *v6;
  (*v6)(v3, v0);
  type metadata accessor for NanoWeatherUserActivityHandler();
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  type metadata accessor for WeatherUserActivityHandler();
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  sub_10017DF08(&qword_100EA5CE0);
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  type metadata accessor for CoordinateActivityHandler();
  RegistrationContainer.register<A>(_:name:factory:)();
  v8(v3, v7, v0);
  Definition.inScope(_:)();
  swift_release();
  swift_release();
  v9(v3, v0);
  type metadata accessor for ShortcutItemHandler();
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  sub_10017DF08(&qword_100E7C0D0);
  RegistrationContainer.register<A>(_:name:factory:)();
  return swift_release();
}

uint64_t sub_1009AEB60(void *a1)
{
  return sub_1009AEC08(a1, (uint64_t)sub_1000F0A88, (uint64_t)sub_1000DA140, (void (*)(void))type metadata accessor for LocationURLHandlerLink, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t))sub_1009AFB98);
}

uint64_t sub_1009AEBB4(void *a1)
{
  return sub_1009AEC08(a1, (uint64_t)sub_1009B0ED4, (uint64_t)sub_1009B0ED8, (void (*)(void))type metadata accessor for LocationURLHandler, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t))sub_1009B0408);
}

uint64_t sub_1009AEC08(void *a1, uint64_t a2, uint64_t a3, void (*a4)(void), uint64_t (*a5)(uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t))
{
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E81B08);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!result)
  {
    __break(1u);
    goto LABEL_6;
  }
  uint64_t v11 = result;
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E98100);
  swift_retain();
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v21)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v12 = (void **)a1[3];
  sub_1001B1E64(a1, (uint64_t)v12);
  type metadata accessor for CoordinateActivityHandler();
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (result)
  {
    uint64_t v13 = result;
    sub_1000DF0C4((uint64_t)v20, v21);
    sub_10017C83C();
    __chkstk_darwin(v14);
    uint64_t v16 = sub_1001A10E8(v15, v19);
    v17(v16);
    uint64_t v18 = sub_1009B0958(a2, v11, a3, v11, *v12, v13, a4, a5);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v20);
    return v18;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_1009AEDB8(void *a1)
{
  return sub_1009AEDE8(a1, (void (*)(void))type metadata accessor for NanoWeatherUserActivityHandler);
}

uint64_t sub_1009AEDD0(void *a1)
{
  return sub_1009AEDE8(a1, (void (*)(void))type metadata accessor for WeatherUserActivityHandler);
}

uint64_t sub_1009AEDE8(void *a1, void (*a2)(void))
{
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E98100);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v21)
  {
    uint64_t v5 = (uint64_t **)a1[3];
    sub_1001B1E64(a1, (uint64_t)v5);
    type metadata accessor for CoordinateActivityHandler();
    uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
    if (result)
    {
      uint64_t v6 = result;
      sub_1000DF0C4((uint64_t)v20, v21);
      sub_10017C83C();
      __chkstk_darwin(v7);
      __n128 v9 = sub_1001808F4(v8, v19[0]);
      v10(v9);
      uint64_t v11 = *v5;
      uint64_t v12 = type metadata accessor for AppContinuationBridge();
      v19[3] = v12;
      v19[4] = (uint64_t)&off_100E12BD8;
      v19[0] = (uint64_t)v11;
      a2(0);
      uint64_t v13 = (void *)swift_allocObject();
      sub_1000DF0C4((uint64_t)v19, v12);
      sub_10017C83C();
      __chkstk_darwin(v14);
      uint64_t v16 = sub_1001808F4(v15, v19[0]);
      v17(v16);
      uint64_t v18 = *v11;
      v13[5] = v12;
      v13[6] = &off_100E12BD8;
      v13[2] = v18;
      v13[7] = v6;
      _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v19);
      _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v20);
      return (uint64_t)v13;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1009AEFAC@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E98100);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v21)
  {
    uint64_t v4 = sub_1000DF0C4((uint64_t)v20, v21);
    __n128 v5 = __chkstk_darwin(v4);
    uint64_t v7 = (void *)((char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, __n128))(v8 + 16))(v7, v5);
    uint64_t v9 = *v7;
    uint64_t v10 = type metadata accessor for AppContinuationBridge();
    v19[3] = v10;
    v19[4] = &off_100E12BD8;
    v19[0] = v9;
    uint64_t v11 = type metadata accessor for WeatherStaticConfigurationActivityHandler();
    uint64_t v12 = (void *)swift_allocObject();
    uint64_t v13 = sub_1000DF0C4((uint64_t)v19, v10);
    __n128 v14 = __chkstk_darwin(v13);
    uint64_t v16 = (void *)((char *)v19 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, __n128))(v17 + 16))(v16, v14);
    uint64_t v18 = *v16;
    v12[5] = v10;
    v12[6] = &off_100E12BD8;
    v12[2] = v18;
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v19);
    uint64_t result = _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v20);
    a2[3] = v11;
    a2[4] = &off_100E2B878;
    *a2 = v12;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1009AF1C8(void *a1)
{
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E647D8);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  uint64_t v3 = v34;
  if (!v34)
  {
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v4 = v35;
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E7C0E8);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v33)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E7CD08);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v31)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  sub_1001B1E64(a1, a1[3]);
  uint64_t v5 = type metadata accessor for WeatherDataUpdater();
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!result)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  uint64_t v29[3] = v5;
  v29[4] = &off_100E34EB0;
  v29[0] = result;
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E98100);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v28)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E81B08);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (result)
  {
    uint64_t v6 = result;
    uint64_t v7 = sub_1000DF0C4((uint64_t)v32, v33);
    __n128 v8 = __chkstk_darwin(v7);
    uint64_t v10 = (uint64_t *)&v27[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
    (*(void (**)(uint64_t *, __n128))(v11 + 16))(v10, v8);
    uint64_t v12 = sub_1000DF0C4((uint64_t)v29, v5);
    __n128 v13 = __chkstk_darwin(v12);
    uint64_t v15 = (uint64_t *)&v27[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
    (*(void (**)(uint64_t *, __n128))(v16 + 16))(v15, v13);
    uint64_t v17 = sub_1000DF0C4((uint64_t)v27, v28);
    __n128 v18 = __chkstk_darwin(v17);
    uint64_t v20 = (uint64_t *)&v27[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
    (*(void (**)(uint64_t *, __n128))(v21 + 16))(v20, v18);
    uint64_t v22 = *v10;
    uint64_t v23 = *v15;
    uint64_t v24 = *v20;
    swift_retain();
    uint64_t v25 = sub_1009B0A80(v3, v4, v22, &v30, v23, v24, (uint64_t)sub_1009B0ED4, v6, (uint64_t)sub_1009B0ED8, v6);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v27);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v29);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v32);
    return (uint64_t)v25;
  }
LABEL_13:
  __break(1u);
  return result;
}

uint64_t sub_1009AF5F0(void *a1)
{
  sub_1001B1E64(a1, a1[3]);
  type metadata accessor for CoordinateActivityHandler();
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (result)
  {
    uint64_t v3 = result;
    sub_1001B1E64(a1, a1[3]);
    sub_10017DF08(&qword_100E98100);
    uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
    if (v12)
    {
      uint64_t v4 = sub_1000DF0C4((uint64_t)v11, v12);
      __n128 v5 = __chkstk_darwin(v4);
      uint64_t v7 = (uint64_t **)&v11[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
      (*(void (**)(uint64_t **, __n128))(v8 + 16))(v7, v5);
      uint64_t v9 = sub_1009B0D5C(v3, *v7);
      _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v11);
      return v9;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1009AF754@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for RootViewControllerResolver();
  uint64_t result = swift_allocObject();
  a1[3] = v2;
  a1[4] = (uint64_t)&off_100E12BC8;
  *a1 = result;
  return result;
}

uint64_t sub_1009AF79C(uint64_t a1, void *a2)
{
  v7[3] = &type metadata for WeatherFeatureFlags;
  void v7[4] = sub_100068B7C();
  LOBYTE(v7[0]) = 1;
  char v3 = isFeatureEnabled(_:)();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v7);
  sub_1001B1E64(a2, a2[3]);
  if (v3)
  {
    type metadata accessor for LocationURLHandlerLink();
    uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
    if (result)
    {
      v7[0] = result;
      __n128 v5 = &qword_100E7EDC0;
      uint64_t v6 = type metadata accessor for LocationURLHandlerLink;
LABEL_6:
      sub_1009B0E8C((unint64_t *)v5, (void (*)(uint64_t))v6);
      URLHandlerManager.add<A>(handler:)();
      return swift_release();
    }
    __break(1u);
  }
  else
  {
    type metadata accessor for LocationURLHandler();
    uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
    if (result)
    {
      v7[0] = result;
      __n128 v5 = &qword_100EA5CD8;
      uint64_t v6 = type metadata accessor for LocationURLHandler;
      goto LABEL_6;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1009AF8F4(uint64_t a1, void *a2)
{
  sub_1001B1E64(a2, a2[3]);
  uint64_t v2 = type metadata accessor for ShortcutItemHandler();
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (result)
  {
    uint64_t v4 = result;
    v5[3] = v2;
    v5[4] = sub_1009B0E8C(&qword_100EA5CD0, (void (*)(uint64_t))type metadata accessor for ShortcutItemHandler);
    v5[0] = v4;
    ShortcutItemHandlerManager.add(_:)();
    return _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v5);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void *sub_1009AF9BC(uint64_t a1, uint64_t a2, uint64_t a3, long long *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11)
{
  a11[7] = type metadata accessor for LocationFinder();
  a11[8] = &off_100E1F478;
  a11[4] = a3;
  a11[17] = type metadata accessor for WeatherDataUpdater();
  a11[18] = &off_100E34EB0;
  a11[14] = a5;
  a11[22] = type metadata accessor for AppContinuationBridge();
  a11[23] = &off_100E12BD8;
  a11[19] = a6;
  a11[2] = a1;
  a11[3] = a2;
  sub_1001262E4(a4, (uint64_t)(a11 + 9));
  a11[24] = a7;
  a11[25] = a8;
  a11[26] = a9;
  a11[27] = a10;
  return a11;
}

uint64_t sub_1009AFA90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v9 = type metadata accessor for AppContinuationBridge();
  uint64_t v10 = &off_100E12BD8;
  *(void *)&long long v8 = a2;
  sub_10017DF08(&qword_100EA5CF8);
  type metadata accessor for ShortcutItemHandlerPattern();
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_100C251B0;
  ShortcutItemHandlerPattern.init(predicate:)();
  *(void *)(a3 + 16) = v6;
  *(void *)(a3 + 24) = a1;
  sub_1001262E4(&v8, a3 + 32);
  return a3;
}

void *sub_1009AFB98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7)
{
  uint64_t v121 = a6;
  uint64_t v120 = a4;
  uint64_t v119 = a3;
  uint64_t v118 = a2;
  uint64_t v117 = a1;
  uint64_t v116 = a7;
  uint64_t v115 = *a7;
  ParameterKeCGFloat y = type metadata accessor for WeatherQueryParameterKey();
  uint64_t v9 = *(void *)(ParameterKey - 8);
  __chkstk_darwin(ParameterKey);
  uint64_t v114 = (char *)&v104 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  unint64_t v112 = (char *)&v104 - v12;
  __chkstk_darwin(v13);
  unint64_t v110 = (char *)&v104 - v14;
  __chkstk_darwin(v15);
  uint64_t v108 = (char *)&v104 - v16;
  __chkstk_darwin(v17);
  uint64_t v107 = (char *)&v104 - v18;
  __chkstk_darwin(v19);
  uint64_t v106 = (char *)&v104 - v20;
  __chkstk_darwin(v21);
  int64_t v105 = (char *)&v104 - v22;
  __chkstk_darwin(v23);
  uint64_t v25 = (char *)&v104 - v24;
  uint64_t v133 = type metadata accessor for AppContinuationBridge();
  Swift::Int v134 = &off_100E12BD8;
  *(void *)&long long v132 = a5;
  sub_10017DF08(&qword_100E63D90);
  uint64_t inited = swift_initStackObject();
  uint64_t v113 = inited;
  *(_OWORD *)(inited + 16) = xmmword_100C25ED0;
  *(_OWORD *)(inited + 32) = xmmword_100C6ECA0;
  *(void *)(inited + 48) = 0;
  *(void *)(inited + 56) = 0;
  sub_10017DF08(&qword_100EA5CE8);
  uint64_t v127 = type metadata accessor for URLHandlerPattern.Param();
  uint64_t v27 = *(void *)(v127 - 8);
  uint64_t v129 = *(void *)(v27 + 72);
  unint64_t v28 = (*(unsigned __int8 *)(v27 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80);
  uint64_t v109 = 8 * v129;
  uint64_t v29 = swift_allocObject();
  uint64_t v111 = v29;
  *(_OWORD *)(v29 + 16) = xmmword_100C34240;
  long long v30 = (uint64_t *)(v29 + v28);
  uint64_t v31 = v9;
  uint64_t v32 = *(void (**)(char *, void, uint64_t))(v9 + 104);
  v32(v25, enum case for WeatherQueryParameterKey.lat(_:), ParameterKey);
  uint64_t v130 = v9 + 104;
  uint64_t v122 = v32;
  uint64_t Parameter = WeatherQueryParameterKey.rawValue.getter();
  uint64_t v35 = v34;
  char v36 = *(void (**)(char *, uint64_t))(v31 + 8);
  uint64_t v123 = v31 + 8;
  uint64_t v124 = v36;
  v36(v25, ParameterKey);
  uint64_t v37 = v30;
  Swift::Int v125 = v30;
  *long long v30 = Parameter;
  v30[1] = v35;
  unsigned int v126 = enum case for URLHandlerPattern.Param.optionalExists(_:);
  uint64_t v38 = *(void (**)(uint64_t *))(v27 + 104);
  uint64_t v128 = v27 + 104;
  uint64_t v39 = v127;
  v38(v30);
  uint64_t v40 = v38;
  uint64_t v131 = (void (*)(uint64_t *, uint64_t, uint64_t))v38;
  uint64_t v41 = v129;
  uint64_t v42 = (uint64_t *)((char *)v37 + v129);
  uint64_t v43 = v105;
  v32(v105, enum case for WeatherQueryParameterKey.long(_:), ParameterKey);
  uint64_t v44 = WeatherQueryParameterKey.rawValue.getter();
  uint64_t v46 = v45;
  unint64_t v47 = v43;
  uint64_t v48 = v124;
  v124(v47, ParameterKey);
  uint64_t *v42 = v44;
  v42[1] = v46;
  uint64_t v49 = v126;
  ((void (*)(uint64_t *, void, uint64_t))v40)(v42, v126, v39);
  int64_t v50 = (uint64_t *)((char *)v125 + 2 * v41);
  uint64_t v51 = v106;
  uint64_t v52 = v122;
  v122(v106, enum case for WeatherQueryParameterKey.lng(_:), ParameterKey);
  uint64_t v53 = WeatherQueryParameterKey.rawValue.getter();
  int64_t v105 = v54;
  uint64_t v55 = ParameterKey;
  v48(v51, ParameterKey);
  Swift::Int v56 = v105;
  *int64_t v50 = v53;
  v50[1] = (uint64_t)v56;
  v131(v50, v49, v127);
  uint64_t v57 = v129;
  unint64_t v58 = v125;
  unint64_t v59 = (uint64_t *)((char *)v125 + 3 * v129);
  unint64_t v60 = v107;
  v52(v107, enum case for WeatherQueryParameterKey.city(_:), ParameterKey);
  uint64_t v61 = v60;
  uint64_t v62 = WeatherQueryParameterKey.rawValue.getter();
  uint64_t v64 = v63;
  uint64_t v65 = v61;
  uint64_t v66 = v124;
  v124(v65, v55);
  *unint64_t v59 = v62;
  v59[1] = v64;
  uint64_t v67 = v127;
  v131((uint64_t *)((char *)v58 + 3 * v57), v126, v127);
  char v68 = (uint64_t *)((char *)v58 + 4 * v57);
  uint64_t v69 = v108;
  v52(v108, enum case for WeatherQueryParameterKey.isLocal(_:), v55);
  uint64_t v70 = v52;
  uint64_t v71 = v69;
  uint64_t v72 = WeatherQueryParameterKey.rawValue.getter();
  uint64_t v74 = v73;
  v66(v71, v55);
  uint64_t *v68 = v72;
  v68[1] = v74;
  uint64_t v75 = v126;
  uint64_t v76 = v67;
  uint64_t v77 = v131;
  v131(v68, v126, v67);
  uint64_t v78 = v125;
  uint64_t v79 = (uint64_t *)((char *)v125 + 5 * v129);
  uint64_t v80 = v110;
  v70(v110, enum case for WeatherQueryParameterKey.date(_:), v55);
  uint64_t v81 = WeatherQueryParameterKey.rawValue.getter();
  uint64_t v83 = v82;
  uint64_t v84 = v124;
  v124(v80, v55);
  *uint64_t v79 = v81;
  v79[1] = v83;
  v77(v79, v75, v76);
  uint64_t v85 = v129;
  uint64_t v86 = (uint64_t *)((char *)v78 + 6 * v129);
  char v87 = v112;
  uint64_t v88 = v122;
  v122(v112, enum case for WeatherQueryParameterKey.position(_:), v55);
  uint64_t v89 = WeatherQueryParameterKey.rawValue.getter();
  uint64_t v91 = v90;
  v84(v87, v55);
  *uint64_t v86 = v89;
  v86[1] = v91;
  uint64_t v92 = v126;
  uint64_t v93 = v127;
  v131(v86, v126, v127);
  uint64_t v94 = (uint64_t *)((char *)v125 + v109 - v85);
  uint64_t v95 = v114;
  v88(v114, enum case for WeatherQueryParameterKey.temperature(_:), v55);
  uint64_t v96 = WeatherQueryParameterKey.rawValue.getter();
  uint64_t v98 = v97;
  v124(v95, v55);
  uint64_t *v94 = v96;
  v94[1] = v98;
  v131(v94, v92, v93);
  sub_10017DF08(&qword_100EA5CF0);
  Dictionary.init(dictionaryLiteral:)();
  uint64_t v99 = sub_1005367C8(v113);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_setDeallocating();
  sub_1006BB148();
  uint64_t v100 = v116;
  v116[12] = v99;
  uint64_t v101 = v118;
  v100[2] = v117;
  v100[3] = v101;
  uint64_t v102 = v120;
  v100[4] = v119;
  v100[5] = v102;
  sub_1001262E4(&v132, (uint64_t)(v100 + 6));
  v100[11] = v121;
  return v100;
}

void *sub_1009B0408(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7)
{
  uint64_t v72 = a7;
  uint64_t v73 = a3;
  uint64_t v74 = a4;
  uint64_t v75 = a6;
  uint64_t v70 = a1;
  uint64_t v71 = a2;
  ParameterKeCGFloat y = type metadata accessor for WeatherQueryParameterKey();
  uint64_t v9 = *(void *)(ParameterKey - 8);
  __chkstk_darwin(ParameterKey);
  uint64_t v69 = (char *)&v65 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v67 = (char *)&v65 - v12;
  __chkstk_darwin(v13);
  uint64_t v66 = (char *)&v65 - v14;
  __chkstk_darwin(v15);
  uint64_t v65 = (char *)&v65 - v16;
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)&v65 - v18;
  uint64_t v86 = type metadata accessor for AppContinuationBridge();
  char v87 = &off_100E12BD8;
  *(void *)&long long v85 = a5;
  sub_10017DF08(&qword_100EA5CE8);
  uint64_t v84 = type metadata accessor for URLHandlerPattern.Param();
  uint64_t v20 = *(void *)(v84 - 8);
  uint64_t v77 = *(void *)(v20 + 72);
  unint64_t v21 = (*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
  uint64_t v22 = swift_allocObject();
  uint64_t v68 = v22;
  *(_OWORD *)(v22 + 16) = xmmword_100C31880;
  uint64_t v23 = (uint64_t *)(v22 + v21);
  uint64_t v83 = *(void (**)(char *, void, uint64_t))(v9 + 104);
  uint64_t v24 = ParameterKey;
  v83(v19, enum case for WeatherQueryParameterKey.lat(_:), ParameterKey);
  uint64_t v79 = v9 + 104;
  uint64_t Parameter = WeatherQueryParameterKey.rawValue.getter();
  uint64_t v27 = v26;
  unint64_t v28 = *(void (**)(char *, uint64_t))(v9 + 8);
  uint64_t v82 = v9 + 8;
  uint64_t v76 = v28;
  v28(v19, v24);
  *uint64_t v23 = Parameter;
  v23[1] = v27;
  unsigned int v81 = enum case for URLHandlerPattern.Param.optionalExists(_:);
  uint64_t v78 = *(void (**)(uint64_t *))(v20 + 104);
  uint64_t v80 = v20 + 104;
  v78(v23);
  uint64_t v29 = v77;
  long long v30 = (uint64_t *)((char *)v23 + v77);
  uint64_t v31 = v65;
  uint64_t v32 = v83;
  v83(v65, enum case for WeatherQueryParameterKey.long(_:), v24);
  uint64_t v33 = WeatherQueryParameterKey.rawValue.getter();
  uint64_t v35 = v34;
  char v36 = v76;
  v76(v31, v24);
  *long long v30 = v33;
  v30[1] = v35;
  uint64_t v37 = v81;
  uint64_t v38 = v84;
  ((void (*)(char *, void, uint64_t))v78)((char *)v23 + v29, v81, v84);
  uint64_t v39 = (uint64_t *)((char *)v23 + 2 * v29);
  uint64_t v40 = v66;
  v32(v66, enum case for WeatherQueryParameterKey.lng(_:), v24);
  uint64_t v41 = WeatherQueryParameterKey.rawValue.getter();
  uint64_t v43 = v42;
  v36(v40, v24);
  uint64_t *v39 = v41;
  v39[1] = v43;
  uint64_t v44 = v78;
  ((void (*)(uint64_t *, uint64_t, uint64_t))v78)(v39, v37, v38);
  uint64_t v45 = v77;
  uint64_t v46 = (uint64_t *)((char *)v23 + 3 * v77);
  unint64_t v47 = v67;
  uint64_t v48 = v24;
  v83(v67, enum case for WeatherQueryParameterKey.city(_:), v24);
  uint64_t v49 = WeatherQueryParameterKey.rawValue.getter();
  uint64_t v51 = v50;
  uint64_t v52 = v47;
  uint64_t v53 = v76;
  v76(v52, v24);
  *uint64_t v46 = v49;
  v46[1] = v51;
  ((void (*)(char *, void, uint64_t))v44)((char *)v23 + 3 * v45, v81, v84);
  uint64_t v54 = (uint64_t *)((char *)v23 + 4 * v45);
  uint64_t v55 = v69;
  v83(v69, enum case for WeatherQueryParameterKey.isLocal(_:), v24);
  Swift::Int v56 = v55;
  uint64_t v57 = WeatherQueryParameterKey.rawValue.getter();
  uint64_t v59 = v58;
  v53(v56, v48);
  *uint64_t v54 = v57;
  v54[1] = v59;
  ((void (*)(uint64_t *, void, uint64_t))v44)(v54, v81, v84);
  sub_10017DF08(&qword_100EA5CF0);
  Dictionary.init(dictionaryLiteral:)();
  uint64_t v60 = sub_1004ED2D8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v61 = v72;
  v72[12] = v60;
  uint64_t v62 = v71;
  v61[2] = v70;
  v61[3] = v62;
  uint64_t v63 = v74;
  v61[4] = v73;
  v61[5] = v63;
  sub_1001262E4(&v85, (uint64_t)(v61 + 6));
  v61[11] = v75;
  return v61;
}

uint64_t sub_1009B0958(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, void (*a7)(void), uint64_t (*a8)(uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t))
{
  uint64_t v25 = type metadata accessor for AppContinuationBridge();
  uint64_t v26 = &off_100E12BD8;
  v24[0] = a5;
  a7(0);
  uint64_t v16 = swift_allocObject();
  sub_1000DF0C4((uint64_t)v24, v25);
  sub_10017C83C();
  __chkstk_darwin(v17);
  uint64_t v19 = sub_1001A10E8(v18, v23);
  v20(v19);
  uint64_t v21 = a8(a1, a2, a3, a4, *a5, a6, v16);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v24);
  return v21;
}

void *sub_1009B0A80(uint64_t a1, uint64_t a2, uint64_t a3, long long *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v35 = a7;
  uint64_t v36 = a8;
  uint64_t v44 = type metadata accessor for LocationFinder();
  uint64_t v45 = &off_100E1F478;
  v43[0] = a3;
  uint64_t v41 = type metadata accessor for WeatherDataUpdater();
  uint64_t v42 = &off_100E34EB0;
  v40[0] = a5;
  uint64_t v38 = type metadata accessor for AppContinuationBridge();
  uint64_t v39 = &off_100E12BD8;
  v37[0] = a6;
  type metadata accessor for CoordinateActivityHandler();
  uint64_t v16 = (void *)swift_allocObject();
  uint64_t v17 = sub_1000DF0C4((uint64_t)v43, v44);
  __n128 v18 = __chkstk_darwin(v17);
  uint64_t v20 = (uint64_t *)((char *)&v34 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, __n128))(v21 + 16))(v20, v18);
  uint64_t v22 = sub_1000DF0C4((uint64_t)v40, v41);
  __n128 v23 = __chkstk_darwin(v22);
  uint64_t v25 = (uint64_t *)((char *)&v34 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, __n128))(v26 + 16))(v25, v23);
  uint64_t v27 = sub_1000DF0C4((uint64_t)v37, v38);
  __n128 v28 = __chkstk_darwin(v27);
  long long v30 = (uint64_t *)((char *)&v34 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, __n128))(v31 + 16))(v30, v28);
  uint64_t v32 = sub_1009AF9BC(a1, a2, *v20, a4, *v25, *v30, v35, v36, a9, a10, v16);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v37);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v40);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v43);
  return v32;
}

uint64_t sub_1009B0D5C(uint64_t a1, uint64_t *a2)
{
  uint64_t v13 = *a2;
  uint64_t v14 = &off_100E12BD8;
  v12[0] = a2;
  type metadata accessor for ShortcutItemHandler();
  uint64_t v3 = swift_allocObject();
  uint64_t v4 = sub_1000DF0C4((uint64_t)v12, v13);
  __n128 v5 = __chkstk_darwin(v4);
  uint64_t v7 = (void *)((char *)&v12[-1] - v6);
  (*(void (**)(char *, __n128))(v8 + 16))((char *)&v12[-1] - v6, v5);
  uint64_t v9 = sub_1009AFA90(a1, *v7, v3);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v12);
  return v9;
}

uint64_t sub_1009B0E8C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1009B0EDC@<X0>(char a1@<W0>, char a2@<W1>, uint64_t a3@<X2>, char a4@<W4>, char a5@<W5>, char a6@<W6>, char a7@<W7>, uint64_t a8@<X8>, char a9, char a10, uint64_t a11, char a12, long long a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, _OWORD *a18, uint64_t a19, uint64_t a20,char a21,uint64_t a22,char a23,uint64_t a24)
{
  *(unsigned char *)a8 = a1;
  *(unsigned char *)(a8 + 1) = a2;
  *(void *)(a8 + 8) = a3;
  uint64_t v25 = (int *)type metadata accessor for LocationInput();
  type metadata accessor for Date();
  sub_100162E4C();
  uint64_t v27 = *(void (**)(void))(v26 + 32);
  sub_10017EC88();
  v27();
  *(unsigned char *)(a8 + v25[8]) = a4;
  *(unsigned char *)(a8 + v25[9]) = a5;
  *(unsigned char *)(a8 + v25[10]) = a6;
  *(unsigned char *)(a8 + v25[11]) = a7;
  *(unsigned char *)(a8 + v25[12]) = a9;
  *(unsigned char *)(a8 + v25[13]) = a10;
  sub_10017EC88();
  v27();
  *(unsigned char *)(a8 + v25[15]) = a12;
  uint64_t v28 = a8 + v25[16];
  *(_OWORD *)uint64_t v28 = a13;
  *(void *)(v28 + 16) = a14;
  *(void *)(v28 + 24) = a15;
  sub_100141848(a16, a8 + v25[17]);
  *(void *)(a8 + v25[18]) = a17;
  uint64_t v29 = (_OWORD *)(a8 + v25[19]);
  long long v30 = a18[1];
  _OWORD *v29 = *a18;
  v29[1] = v30;
  v29[2] = a18[2];
  *(void *)(a8 + v25[20]) = a19;
  sub_10017EC88();
  uint64_t result = ((uint64_t (*)(void))v27)();
  uint64_t v32 = a8 + v25[22];
  *(unsigned char *)uint64_t v32 = a21;
  *(void *)(v32 + 8) = a22;
  *(unsigned char *)(a8 + v25[23]) = a23;
  *(void *)(a8 + v25[24]) = a24;
  return result;
}

void *sub_1009B1104(void *a1, void *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v25 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v25 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_WORD *)a1 = *(_WORD *)a2;
    a1[1] = a2[1];
    uint64_t v7 = a3[7];
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = type metadata accessor for Date();
    uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
    swift_bridgeObjectRetain();
    v11(v8, v9, v10);
    uint64_t v12 = a3[9];
    *((unsigned char *)v4 + a3[8]) = *((unsigned char *)a2 + a3[8]);
    *((unsigned char *)v4 + v12) = *((unsigned char *)a2 + v12);
    uint64_t v13 = a3[11];
    *((unsigned char *)v4 + a3[10]) = *((unsigned char *)a2 + a3[10]);
    *((unsigned char *)v4 + v13) = *((unsigned char *)a2 + v13);
    uint64_t v14 = a3[13];
    *((unsigned char *)v4 + a3[12]) = *((unsigned char *)a2 + a3[12]);
    *((unsigned char *)v4 + v14) = *((unsigned char *)a2 + v14);
    uint64_t v50 = v11;
    uint64_t v51 = v10;
    v11((char *)v4 + a3[14], (char *)a2 + a3[14], v10);
    uint64_t v15 = a3[16];
    *((unsigned char *)v4 + a3[15]) = *((unsigned char *)a2 + a3[15]);
    uint64_t v16 = (void *)((char *)v4 + v15);
    uint64_t v17 = (void *)((char *)a2 + v15);
    uint64_t v18 = v17[1];
    *uint64_t v16 = *v17;
    v16[1] = v18;
    uint64_t v19 = v17[3];
    v16[2] = v17[2];
    v16[3] = v19;
    uint64_t v20 = a3[17];
    uint64_t v21 = (char *)v4 + v20;
    uint64_t v22 = (char *)a2 + v20;
    uint64_t v23 = type metadata accessor for CurrentLocation();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v22, 1, v23))
    {
      uint64_t v24 = sub_10017DF08((uint64_t *)&unk_100EADD50);
      memcpy(v21, v22, *(void *)(*(void *)(v24 - 8) + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload() > 2)
      {
        memcpy(v21, v22, *(void *)(*(void *)(v23 - 8) + 64));
      }
      else
      {
        uint64_t v26 = type metadata accessor for Location();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 16))(v21, v22, v26);
        swift_storeEnumTagMultiPayload();
      }
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v21, 0, 1, v23);
    }
    uint64_t v27 = a3[19];
    *(void *)((char *)v4 + a3[18]) = *(void *)((char *)a2 + a3[18]);
    uint64_t v28 = (void *)((char *)v4 + v27);
    uint64_t v29 = (char *)a2 + v27;
    long long v30 = *(void **)v29;
    uint64_t v31 = (void *)*((void *)v29 + 1);
    *uint64_t v28 = *(void *)v29;
    v28[1] = v31;
    uint64_t v32 = (void *)*((void *)v29 + 2);
    uint64_t v33 = (void *)*((void *)v29 + 3);
    v28[2] = v32;
    v28[3] = v33;
    uint64_t v34 = (void *)*((void *)v29 + 4);
    uint64_t v35 = (void *)*((void *)v29 + 5);
    v28[4] = v34;
    v28[5] = v35;
    uint64_t v36 = a3[21];
    *(void *)((char *)v4 + a3[20]) = *(void *)((char *)a2 + a3[20]);
    uint64_t v49 = (char *)v4 + v36;
    uint64_t v37 = (char *)a2 + v36;
    id v38 = v30;
    id v39 = v31;
    id v40 = v32;
    id v41 = v33;
    id v42 = v34;
    id v43 = v35;
    swift_bridgeObjectRetain();
    v50(v49, v37, v51);
    uint64_t v44 = a3[22];
    uint64_t v45 = a3[23];
    uint64_t v46 = (char *)v4 + v44;
    unint64_t v47 = (char *)a2 + v44;
    *uint64_t v46 = *v47;
    *((void *)v46 + 1) = *((void *)v47 + 1);
    *((unsigned char *)v4 + v45) = *((unsigned char *)a2 + v45);
    *(void *)((char *)v4 + a3[24]) = *(void *)((char *)a2 + a3[24]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_1009B14FC(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[7];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = type metadata accessor for Date();
  uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 24);
  v10(v7, v8, v9);
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  *(unsigned char *)(a1 + a3[10]) = *(unsigned char *)(a2 + a3[10]);
  *(unsigned char *)(a1 + a3[11]) = *(unsigned char *)(a2 + a3[11]);
  *(unsigned char *)(a1 + a3[12]) = *(unsigned char *)(a2 + a3[12]);
  *(unsigned char *)(a1 + a3[13]) = *(unsigned char *)(a2 + a3[13]);
  v10(a1 + a3[14], a2 + a3[14], v9);
  *(unsigned char *)(a1 + a3[15]) = *(unsigned char *)(a2 + a3[15]);
  uint64_t v11 = a3[16];
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = a2 + v11;
  void *v12 = *(void *)(a2 + v11);
  v12[1] = *(void *)(a2 + v11 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v12[2] = *(void *)(v13 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  void v12[3] = *(void *)(v13 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v14 = a3[17];
  uint64_t v15 = (void *)(a1 + v14);
  uint64_t v16 = (const void *)(a2 + v14);
  uint64_t v17 = type metadata accessor for CurrentLocation();
  int v18 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v15, 1, v17);
  int v19 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v16, 1, v17);
  if (!v18)
  {
    if (!v19)
    {
      if (a1 == a2) {
        goto LABEL_14;
      }
      sub_1001D12EC((uint64_t)v15, (void (*)(void))&type metadata accessor for CurrentLocation);
      if (swift_getEnumCaseMultiPayload() <= 2)
      {
        uint64_t v22 = type metadata accessor for Location();
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v22 - 8) + 16))(v15, v16, v22);
        swift_storeEnumTagMultiPayload();
        goto LABEL_14;
      }
      size_t v20 = *(void *)(*(void *)(v17 - 8) + 64);
      goto LABEL_8;
    }
    sub_1001D12EC((uint64_t)v15, (void (*)(void))&type metadata accessor for CurrentLocation);
LABEL_7:
    size_t v20 = *(void *)(*(void *)(sub_10017DF08((uint64_t *)&unk_100EADD50) - 8) + 64);
LABEL_8:
    memcpy(v15, v16, v20);
    goto LABEL_14;
  }
  if (v19) {
    goto LABEL_7;
  }
  if (swift_getEnumCaseMultiPayload() > 2)
  {
    memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    uint64_t v21 = type metadata accessor for Location();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v21 - 8) + 16))(v15, v16, v21);
    swift_storeEnumTagMultiPayload();
  }
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v15, 0, 1, v17);
LABEL_14:
  *(void *)(a1 + a3[18]) = *(void *)(a2 + a3[18]);
  uint64_t v23 = a3[19];
  uint64_t v24 = (void *)(a1 + v23);
  uint64_t v25 = (void *)(a2 + v23);
  uint64_t v26 = *(void **)(a1 + v23);
  uint64_t v27 = *(void **)(a2 + v23);
  void *v24 = v27;
  id v28 = v27;

  uint64_t v29 = (void *)v24[1];
  long long v30 = (void *)v25[1];
  v24[1] = v30;
  id v31 = v30;

  uint64_t v32 = (void *)v24[2];
  uint64_t v33 = (void *)v25[2];
  v24[2] = v33;
  id v34 = v33;

  uint64_t v35 = (void *)v24[3];
  uint64_t v36 = (void *)v25[3];
  void v24[3] = v36;
  id v37 = v36;

  id v38 = (void *)v24[4];
  id v39 = (void *)v25[4];
  v24[4] = v39;
  id v40 = v39;

  id v41 = (void *)v24[5];
  id v42 = (void *)v25[5];
  void v24[5] = v42;
  id v43 = v42;

  *(void *)(a1 + a3[20]) = *(void *)(a2 + a3[20]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10(a1 + a3[21], a2 + a3[21], v9);
  uint64_t v44 = a3[22];
  uint64_t v45 = a1 + v44;
  uint64_t v46 = a2 + v44;
  *(unsigned char *)uint64_t v45 = *(unsigned char *)v46;
  *(void *)(v45 + 8) = *(void *)(v46 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[23]) = *(unsigned char *)(a2 + a3[23]);
  *(void *)(a1 + a3[24]) = *(void *)(a2 + a3[24]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1009B1ABC(uint64_t a1, uint64_t a2, int *a3)
{
  *(_WORD *)a1 = *(_WORD *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  uint64_t v6 = a3[7];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = type metadata accessor for Date();
  uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  uint64_t v11 = a3[9];
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  *(unsigned char *)(a1 + v11) = *(unsigned char *)(a2 + v11);
  uint64_t v12 = a3[11];
  *(unsigned char *)(a1 + a3[10]) = *(unsigned char *)(a2 + a3[10]);
  *(unsigned char *)(a1 + v12) = *(unsigned char *)(a2 + v12);
  uint64_t v13 = a3[13];
  *(unsigned char *)(a1 + a3[12]) = *(unsigned char *)(a2 + a3[12]);
  *(unsigned char *)(a1 + v13) = *(unsigned char *)(a2 + v13);
  v10(a1 + a3[14], a2 + a3[14], v9);
  uint64_t v14 = a3[16];
  *(unsigned char *)(a1 + a3[15]) = *(unsigned char *)(a2 + a3[15]);
  uint64_t v15 = (_OWORD *)(a1 + v14);
  uint64_t v16 = (_OWORD *)(a2 + v14);
  long long v17 = v16[1];
  *uint64_t v15 = *v16;
  v15[1] = v17;
  uint64_t v18 = a3[17];
  int v19 = (void *)(a1 + v18);
  size_t v20 = (const void *)(a2 + v18);
  uint64_t v21 = type metadata accessor for CurrentLocation();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v20, 1, v21))
  {
    uint64_t v22 = sub_10017DF08((uint64_t *)&unk_100EADD50);
    memcpy(v19, v20, *(void *)(*(void *)(v22 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() > 2)
    {
      memcpy(v19, v20, *(void *)(*(void *)(v21 - 8) + 64));
    }
    else
    {
      uint64_t v23 = type metadata accessor for Location();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v23 - 8) + 32))(v19, v20, v23);
      swift_storeEnumTagMultiPayload();
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v19, 0, 1, v21);
  }
  uint64_t v24 = a3[19];
  *(void *)(a1 + a3[18]) = *(void *)(a2 + a3[18]);
  uint64_t v25 = (_OWORD *)(a1 + v24);
  uint64_t v26 = (_OWORD *)(a2 + v24);
  long long v27 = v26[1];
  *uint64_t v25 = *v26;
  v25[1] = v27;
  v25[2] = v26[2];
  uint64_t v28 = a3[21];
  *(void *)(a1 + a3[20]) = *(void *)(a2 + a3[20]);
  v10(a1 + v28, a2 + v28, v9);
  uint64_t v29 = a3[23];
  *(_OWORD *)(a1 + a3[22]) = *(_OWORD *)(a2 + a3[22]);
  *(unsigned char *)(a1 + v29) = *(unsigned char *)(a2 + v29);
  *(void *)(a1 + a3[24]) = *(void *)(a2 + a3[24]);
  return a1;
}

uint64_t sub_1009B1DDC(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[7];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = type metadata accessor for Date();
  uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 40);
  v10(v7, v8, v9);
  uint64_t v11 = a3[9];
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  *(unsigned char *)(a1 + v11) = *(unsigned char *)(a2 + v11);
  uint64_t v12 = a3[11];
  *(unsigned char *)(a1 + a3[10]) = *(unsigned char *)(a2 + a3[10]);
  *(unsigned char *)(a1 + v12) = *(unsigned char *)(a2 + v12);
  uint64_t v13 = a3[13];
  *(unsigned char *)(a1 + a3[12]) = *(unsigned char *)(a2 + a3[12]);
  *(unsigned char *)(a1 + v13) = *(unsigned char *)(a2 + v13);
  v10(a1 + a3[14], a2 + a3[14], v9);
  uint64_t v14 = a3[16];
  *(unsigned char *)(a1 + a3[15]) = *(unsigned char *)(a2 + a3[15]);
  uint64_t v15 = (void *)(a1 + v14);
  uint64_t v16 = a2 + v14;
  uint64_t v17 = *(void *)(a2 + v14);
  uint64_t v18 = *(void *)(a2 + v14 + 8);
  *uint64_t v15 = v17;
  v15[1] = v18;
  swift_bridgeObjectRelease();
  v15[2] = *(void *)(v16 + 16);
  swift_bridgeObjectRelease();
  v15[3] = *(void *)(v16 + 24);
  swift_bridgeObjectRelease();
  uint64_t v19 = a3[17];
  size_t v20 = (void *)(a1 + v19);
  uint64_t v21 = (const void *)(a2 + v19);
  uint64_t v22 = type metadata accessor for CurrentLocation();
  int v23 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v20, 1, v22);
  int v24 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v21, 1, v22);
  if (!v23)
  {
    if (!v24)
    {
      if (a1 == a2) {
        goto LABEL_14;
      }
      sub_1001D12EC((uint64_t)v20, (void (*)(void))&type metadata accessor for CurrentLocation);
      if (swift_getEnumCaseMultiPayload() <= 2)
      {
        uint64_t v27 = type metadata accessor for Location();
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v27 - 8) + 32))(v20, v21, v27);
        swift_storeEnumTagMultiPayload();
        goto LABEL_14;
      }
      size_t v25 = *(void *)(*(void *)(v22 - 8) + 64);
      goto LABEL_8;
    }
    sub_1001D12EC((uint64_t)v20, (void (*)(void))&type metadata accessor for CurrentLocation);
LABEL_7:
    size_t v25 = *(void *)(*(void *)(sub_10017DF08((uint64_t *)&unk_100EADD50) - 8) + 64);
LABEL_8:
    memcpy(v20, v21, v25);
    goto LABEL_14;
  }
  if (v24) {
    goto LABEL_7;
  }
  if (swift_getEnumCaseMultiPayload() > 2)
  {
    memcpy(v20, v21, *(void *)(*(void *)(v22 - 8) + 64));
  }
  else
  {
    uint64_t v26 = type metadata accessor for Location();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v26 - 8) + 32))(v20, v21, v26);
    swift_storeEnumTagMultiPayload();
  }
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v20, 0, 1, v22);
LABEL_14:
  uint64_t v28 = a3[19];
  *(void *)(a1 + a3[18]) = *(void *)(a2 + a3[18]);
  uint64_t v29 = (void *)(a1 + v28);
  long long v30 = (void *)(a2 + v28);
  id v31 = *(void **)(a1 + v28);
  *(void *)(a1 + v28) = *(void *)(a2 + v28);

  uint64_t v32 = (void *)v29[1];
  v29[1] = v30[1];

  uint64_t v33 = (void *)v29[2];
  v29[2] = v30[2];

  id v34 = (void *)v29[3];
  uint64_t v29[3] = v30[3];

  uint64_t v35 = (void *)v29[4];
  v29[4] = v30[4];

  uint64_t v36 = (void *)v29[5];
  void v29[5] = v30[5];

  *(void *)(a1 + a3[20]) = *(void *)(a2 + a3[20]);
  swift_bridgeObjectRelease();
  v10(a1 + a3[21], a2 + a3[21], v9);
  uint64_t v37 = a3[22];
  uint64_t v38 = a1 + v37;
  uint64_t v39 = a2 + v37;
  *(unsigned char *)uint64_t v38 = *(unsigned char *)v39;
  *(void *)(v38 + 8) = *(void *)(v39 + 8);
  swift_bridgeObjectRelease();
  uint64_t v40 = a3[24];
  *(unsigned char *)(a1 + a3[23]) = *(unsigned char *)(a2 + a3[23]);
  *(void *)(a1 + v40) = *(void *)(a2 + v40);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1009B232C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    type metadata accessor for Date();
    sub_100162F30();
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = *(int *)(a3 + 28);
    }
    else
    {
      uint64_t v10 = sub_10017DF08((uint64_t *)&unk_100EADD50);
      uint64_t v11 = *(int *)(a3 + 68);
    }
    return _s7Weather24LocationCompositionStateOwet_0(a1 + v11, a2, v10);
  }
}

uint64_t sub_1009B23DC(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    type metadata accessor for Date();
    sub_100162F30();
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = *(int *)(a4 + 28);
    }
    else
    {
      uint64_t v10 = sub_10017DF08((uint64_t *)&unk_100EADD50);
      uint64_t v11 = *(int *)(a4 + 68);
    }
    return _s7Weather24LocationCompositionStateOwst_0(v5 + v11, a2, a2, v10);
  }
  return result;
}

uint64_t sub_1009B2488(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v5 = *a2;
  *(void *)a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = v5 + ((v4 + 16) & ~(unint64_t)v4);
    swift_retain();
  }
  else
  {
    uint64_t v8 = a2[1];
    char v9 = *((unsigned char *)a2 + 16);
    swift_bridgeObjectRetain();
    sub_100195B7C(v8, v9);
    *(void *)(a1 + 8) = v8;
    *(unsigned char *)(a1 + 16) = v9;
    uint64_t v10 = *(int *)(a3 + 24);
    uint64_t v11 = a1 + v10;
    uint64_t v12 = (uint64_t)a2 + v10;
    uint64_t v13 = type metadata accessor for Text.Measurements();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
    uint64_t v14 = *(int *)(a3 + 28);
    uint64_t v15 = (void *)(a1 + v14);
    uint64_t v16 = (uint64_t *)((char *)a2 + v14);
    sub_10017DF08(&qword_100E66E50);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v17 = type metadata accessor for ColorSchemeContrast();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
    }
    else
    {
      *uint64_t v15 = *v16;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1009B2614(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for Text.Measurements();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 28);
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (const void *)(a2 + v11);
  uint64_t v14 = sub_10017DF08(&qword_100E66E50);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v15 = type metadata accessor for ColorSchemeContrast();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v15 - 8) + 32))(v12, v13, v15);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v12, v13, *(void *)(*(void *)(v14 - 8) + 64));
  }
  return a1;
}

uint64_t sub_1009B2748(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  char v6 = *(unsigned char *)(a2 + 16);
  uint64_t v7 = *(void *)(a1 + 8);
  char v8 = *(unsigned char *)(a1 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = v6;
  sub_10018F6D8(v7, v8);
  uint64_t v9 = *(int *)(a3 + 24);
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  uint64_t v12 = type metadata accessor for Text.Measurements();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 40))(v10, v11, v12);
  if (a1 != a2)
  {
    uint64_t v13 = *(int *)(a3 + 28);
    uint64_t v14 = (void *)(a1 + v13);
    uint64_t v15 = (const void *)(a2 + v13);
    sub_100178110(a1 + v13, &qword_100E66E50);
    uint64_t v16 = sub_10017DF08(&qword_100E66E50);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v17 = type metadata accessor for ColorSchemeContrast();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v17 - 8) + 32))(v14, v15, v17);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1009B28B0(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    type metadata accessor for Text.Measurements();
    sub_100162F30();
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = *(int *)(a3 + 24);
    }
    else
    {
      uint64_t v10 = sub_10017DF08(&qword_100E6D908);
      uint64_t v11 = *(int *)(a3 + 28);
    }
    return _s7Weather24LocationCompositionStateOwet_0((uint64_t)a1 + v11, a2, v10);
  }
}

void *sub_1009B2960(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    type metadata accessor for Text.Measurements();
    sub_100162F30();
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = *(int *)(a4 + 24);
    }
    else
    {
      uint64_t v10 = sub_10017DF08(&qword_100E6D908);
      uint64_t v11 = *(int *)(a4 + 28);
    }
    return (void *)_s7Weather24LocationCompositionStateOwst_0((uint64_t)v5 + v11, a2, a2, v10);
  }
  return result;
}

uint64_t sub_1009B2A0C()
{
  uint64_t v1 = *(void *)(type metadata accessor for HourlyForecastComponentView() - 8);
  uint64_t v2 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));
  swift_bridgeObjectRelease();
  sub_10018F6D8(*(void *)(v2 + 8), *(unsigned char *)(v2 + 16));
  type metadata accessor for Text.Measurements();
  sub_100162E4C();
  sub_100162F0C();
  v3();
  sub_10017DF08(&qword_100E66E50);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    type metadata accessor for ColorSchemeContrast();
    sub_100162E4C();
    sub_100162F0C();
    v4();
  }
  else
  {
    swift_release();
  }

  return swift_deallocObject();
}

uint64_t sub_1009B2B78@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100EA6120);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v21)
  {
    sub_1001B1E64(a1, a1[3]);
    sub_10017DF08(&qword_100E64BF8);
    uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
    if (result)
    {
      uint64_t v5 = result;
      uint64_t v6 = sub_1000DF0C4((uint64_t)v20, v21);
      __chkstk_darwin(v6);
      uint64_t v8 = (void *)((char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *))(v9 + 16))(v8);
      uint64_t v10 = *v8;
      uint64_t v11 = type metadata accessor for SunriseSunsetDetailInteractor();
      v19[3] = v11;
      v19[4] = &off_100E110B8;
      v19[0] = v10;
      uint64_t v12 = type metadata accessor for SunriseSunsetDetailModule();
      uint64_t v13 = (void *)swift_allocObject();
      uint64_t v14 = sub_1000DF0C4((uint64_t)v19, v11);
      __chkstk_darwin(v14);
      uint64_t v16 = (void *)((char *)v19 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *))(v17 + 16))(v16);
      uint64_t v18 = *v16;
      v13[5] = v11;
      v13[6] = &off_100E110B8;
      v13[2] = v18;
      v13[7] = v5;
      _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v19);
      uint64_t result = _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v20);
      a2[3] = v12;
      a2[4] = &off_100E1DE58;
      *a2 = v13;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1009B2DE4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1009B3D30(a1, (uint64_t)&off_100E0C838, a2);
}

uint64_t sub_1009B2DF0()
{
  uint64_t v0 = type metadata accessor for Scope();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10017DF08(&qword_100EA6118);
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  sub_10017DF08(&qword_100EA6120);
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  sub_10017DF08(&qword_100EA6128);
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  sub_10017DF08(&qword_100EA6130);
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  sub_10017DF08(&qword_100EA6138);
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  sub_10017DF08(&qword_100EA6140);
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  type metadata accessor for SunriseSunsetDetailDataProcessor();
  RegistrationContainer.register<A>(_:name:factory:)();
  uint64_t v4 = enum case for Scope.singleton(_:);
  uint64_t v5 = *(void (**)(char *, uint64_t, uint64_t))(v1 + 104);
  v5(v3, enum case for Scope.singleton(_:), v0);
  Definition.inScope(_:)();
  swift_release();
  swift_release();
  uint64_t v6 = *(void (**)(char *, uint64_t))(v1 + 8);
  v6(v3, v0);
  sub_10017DF08(&qword_100EA6148);
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  sub_10017DF08(&qword_100EA6150);
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  sub_10017DF08(&qword_100EA6158);
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  sub_10017DF08(&qword_100EA6160);
  RegistrationContainer.register<A>(_:name:factory:)();
  v5(v3, v4, v0);
  Definition.inScope(_:)();
  swift_release();
  swift_release();
  v6(v3, v0);
  sub_10017DF08(&qword_100E64BF8);
  RegistrationContainer.register<A>(_:name:factory:)();
  return swift_release();
}

uint64_t sub_1009B31EC@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1001B1E64(a1, a1[3]);
  type metadata accessor for Tracker();
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:name:)();
  if (result)
  {
    uint64_t v5 = Tracker.chain(name:identifier:)();
    swift_release();
    sub_1001B1E64(a1, a1[3]);
    sub_10017DF08(&qword_100E647E0);
    uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
    if (v8)
    {
      a2[3] = (uint64_t)&type metadata for SunriseSunsetDetailTracker;
      a2[4] = (uint64_t)&off_100E35E90;
      uint64_t v6 = swift_allocObject();
      *a2 = v6;
      *(void *)(v6 + 16) = v5;
      return sub_1001262E4(&v7, v6 + 24);
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1009B3328@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E647D8);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v37)
  {
    __break(1u);
    goto LABEL_8;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100EA6118);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v36)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100EA6110);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v34)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100EA6140);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v32)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  uint64_t v24 = v38;
  uint64_t v25 = v37;
  uint64_t v26 = a2;
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E64798);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  uint64_t v5 = v27;
  if (v27)
  {
    uint64_t v7 = v29;
    uint64_t v6 = v30;
    uint64_t v8 = v28;
    uint64_t v9 = sub_1000DF0C4((uint64_t)v35, v36);
    uint64_t v23 = (uint64_t)&v23;
    __chkstk_darwin(v9);
    uint64_t v11 = (_OWORD *)((char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(_OWORD *))(v12 + 16))(v11);
    uint64_t v13 = sub_1000DF0C4((uint64_t)v33, v34);
    __chkstk_darwin(v13);
    uint64_t v15 = (uint64_t *)((char *)&v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v16 + 16))(v15);
    uint64_t v17 = sub_1000DF0C4((uint64_t)v31, v32);
    __chkstk_darwin(v17);
    uint64_t v19 = (uint64_t *)((char *)&v23 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v20 + 16))(v19);
    uint64_t v21 = sub_1009B4964(v25, v24, v11, *v15, *v19, v5, v8, v7, v6);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v31);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v33);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v35);
    uint64_t result = type metadata accessor for SunriseSunsetDetailInteractor();
    uint64_t v22 = v26;
    v26[3] = result;
    v22[4] = &off_100E110B8;
    *uint64_t v22 = v21;
    return result;
  }
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_1009B3734@<X0>(uint64_t *a1@<X8>)
{
  return sub_10021AB78((uint64_t (*)(void))type metadata accessor for SunriseSunsetDetailInputFactory, (uint64_t)&off_100E1A3C0, a1);
}

uint64_t sub_1009B3754@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = type metadata accessor for SunriseSunsetPolarSunEventStringBuilder();
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for SunriseSunsetEventCalculator();
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  SunriseSunsetEventCalculator.init()();
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100EA6148);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v43)
  {
    __break(1u);
    goto LABEL_11;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100EA6160);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v41)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100EA6140);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v39)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100EA6138);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v37)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100EA6168);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v35)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100EA6190);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v33)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  SunriseSunsetPolarSunEventStringBuilder.init()();
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E647D0);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v31)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v27 = v6;
  uint64_t v28 = a2;
  sub_1001B1E64(a1, a1[3]);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:name:)();
  char v11 = v29;
  if (v29 != 2)
  {
    uint64_t v12 = sub_1000DF0C4((uint64_t)v40, v41);
    __chkstk_darwin(v12);
    uint64_t v14 = (uint64_t *)((char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v15 + 16))(v14);
    uint64_t v16 = sub_1000DF0C4((uint64_t)v38, v39);
    __chkstk_darwin(v16);
    uint64_t v18 = (uint64_t *)((char *)&v26 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v19 + 16))(v18);
    uint64_t v20 = sub_1000DF0C4((uint64_t)v30, v31);
    __chkstk_darwin(v20);
    uint64_t v22 = (uint64_t *)((char *)&v26 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v23 + 16))(v22);
    uint64_t v24 = sub_1009B4E2C((uint64_t)v9, &v42, *v14, *v18, &v36, &v34, &v32, (uint64_t)v27, *v22, v11 & 1);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v30);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v38);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v40);
    uint64_t result = type metadata accessor for SunriseSunsetDetailViewModelFactory();
    uint64_t v25 = v28;
    v28[3] = result;
    v25[4] = (uint64_t)&off_100E32508;
    *uint64_t v25 = v24;
    return result;
  }
LABEL_17:
  __break(1u);
  return result;
}

uint64_t sub_1009B3CB0@<X0>(uint64_t *a1@<X8>)
{
  a1[3] = type metadata accessor for DaylightStringBuilder();
  a1[4] = sub_1009B5334(&qword_100EA6188, (void (*)(uint64_t))&type metadata accessor for DaylightStringBuilder);
  sub_100170694(a1);
  return DaylightStringBuilder.init()();
}

uint64_t sub_1009B3D24@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1009B3D30(a1, (uint64_t)&off_100E0C820, a2);
}

uint64_t sub_1009B3D30@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  sub_1001B1E64(a1, a1[3]);
  uint64_t v5 = type metadata accessor for SunriseSunsetDetailDataProcessor();
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (result)
  {
    a3[3] = v5;
    a3[4] = a2;
    *a3 = result;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1009B3DA0(void *a1)
{
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100EA6158);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v18)
  {
    __break(1u);
    goto LABEL_6;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100EA6168);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v16)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100EA6160);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v14)
  {
    uint64_t v3 = sub_1000DF0C4((uint64_t)v17, v18);
    __chkstk_darwin(v3);
    uint64_t v5 = &v13[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
    (*(void (**)(unsigned char *))(v6 + 16))(v5);
    uint64_t v7 = sub_1000DF0C4((uint64_t)v13, v14);
    __chkstk_darwin(v7);
    uint64_t v9 = (uint64_t **)&v13[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
    (*(void (**)(uint64_t **))(v10 + 16))(v9);
    uint64_t v11 = sub_1009B5114(v5, &v15, *v9);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v13);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v17);
    return v11;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_1009B3FFC@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100EA6168);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v7)
  {
    sub_1001B1E64(a1, a1[3]);
    sub_10017DF08(&qword_100EA6150);
    uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
    if (v6)
    {
      uint64_t v5 = type metadata accessor for SunriseSunsetDetailChartViewModelFactory();
      swift_allocObject();
      uint64_t result = SunriseSunsetDetailChartViewModelFactory.init(sunElevationCalculator:chartBackgroundFactory:)();
      a2[3] = v5;
      a2[4] = (uint64_t)&protocol witness table for SunriseSunsetDetailChartViewModelFactory;
      *a2 = result;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1009B40EC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for SunriseSunsetChartBackgroundModelFactory();
  uint64_t v3 = swift_allocObject();
  uint64_t v4 = v3 + OBJC_IVAR____TtC7Weather40SunriseSunsetChartBackgroundModelFactory____lazy_storage___listAnimationKind;
  uint64_t v5 = type metadata accessor for Settings.VFX.AnimatedBackgrounds.AnimationKind();
  _s7Weather24LocationCompositionStateOwst_0(v4, 1, 1, v5);
  a1[3] = v2;
  uint64_t result = sub_1009B5334(&qword_100EA6170, (void (*)(uint64_t))type metadata accessor for SunriseSunsetChartBackgroundModelFactory);
  a1[4] = result;
  *a1 = v3;
  return result;
}

uint64_t sub_1009B4198@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100EA6168);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v6)
  {
    a2[3] = (uint64_t)&type metadata for SunriseSunsetMonthlyViewModelFactory;
    a2[4] = (uint64_t)&off_100E27FE0;
    uint64_t v4 = swift_allocObject();
    *a2 = v4;
    *(void *)(v4 + 80) = &type metadata for SunriseSunsetDaylightCalculator;
    *(void *)(v4 + 88) = &off_100E31600;
    return sub_1001262E4(&v5, v4 + 16);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1009B4250@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for SunriseSunsetDetailViewDataCache();
  swift_allocObject();
  uint64_t result = sub_10068508C();
  a1[3] = v2;
  a1[4] = (uint64_t)&off_100E1EEA0;
  *a1 = result;
  return result;
}

uint64_t sub_1009B42A8(void *a1)
{
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E64798);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  uint64_t v3 = v18;
  if (!v18)
  {
    __break(1u);
    goto LABEL_6;
  }
  uint64_t v5 = v20;
  uint64_t v4 = v21;
  uint64_t v6 = v19;
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100EA6128);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v17)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v7 = *sub_1001B1E64(v16, v17);
  uint64_t v14 = type metadata accessor for SunriseSunsetDetailInputFactory();
  long long v15 = &off_100E1A3C0;
  v13[0] = v7;
  sub_10020D948((uint64_t)v13, (uint64_t)v12);
  uint64_t v8 = swift_allocObject();
  sub_1001262E4(v12, v8 + 16);
  swift_retain();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v13);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v16);
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = sub_1009B45FC;
  *(void *)(v9 + 24) = v8;
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100EA6130);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v17)
  {
    uint64_t v10 = *sub_1001B1E64(v16, v17);
    uint64_t v14 = type metadata accessor for SunriseSunsetDetailViewModelFactory();
    long long v15 = &off_100E32508;
    v13[0] = v10;
    sub_10020D948((uint64_t)v13, (uint64_t)v12);
    uint64_t v11 = swift_allocObject();
    sub_1001262E4(v12, v11 + 16);
    swift_retain();
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v13);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v16);
    sub_10017DF08(&qword_100E64BF8);
    swift_allocObject();
    return sub_10025B2A8(v3, v6, v5, v4, sub_10025969C, 0, sub_100137F50, v9, sub_1009B463C, v11);
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_1009B452C@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  return sub_10054A040(a1, a3);
}

uint64_t sub_1009B4578@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1009DF1A8(a1, a3);
}

uint64_t sub_1009B45C4()
{
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 16);

  return swift_deallocObject();
}

uint64_t sub_1009B45FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1009B452C(a1, (void *)(v2 + 16), a2);
}

uint64_t sub_1009B4604()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1009B463C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1009B4578(a1, (void *)(v2 + 16), a2);
}

uint64_t sub_1009B4644()
{
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 16);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 56);

  return swift_deallocObject();
}

uint64_t sub_1009B4684(const void *a1, long long *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v13 = &type metadata for SunriseSunsetMonthlyViewModelFactory;
  uint64_t v14 = &off_100E27FE0;
  *(void *)&long long v12 = swift_allocObject();
  memcpy((void *)(v12 + 16), a1, 0x50uLL);
  uint64_t v10 = type metadata accessor for SunriseSunsetDetailViewDataCache();
  uint64_t v11 = &off_100E1EEA0;
  *(void *)&long long v9 = a3;
  sub_1000DBCCC();
  *(void *)(a4 + 136) = OS_os_log.init(subsystem:category:)();
  type metadata accessor for SunriseSunsetDetailDataProcessor.ProcessingKey(0);
  type metadata accessor for SunriseSunsetDetailPreprocessedDataModel();
  sub_1009B5334(&qword_100EA6178, (void (*)(uint64_t))type metadata accessor for SunriseSunsetDetailDataProcessor.ProcessingKey);
  Dictionary.init(dictionaryLiteral:)();
  sub_10017DF08(&qword_100EA6180);
  swift_allocObject();
  *(void *)(a4 + 144) = Cache.init(_:)();
  sub_1001262E4(&v9, a4 + 96);
  sub_1001262E4(a2, a4 + 56);
  sub_1001262E4(&v12, a4 + 16);
  return a4;
}

void *sub_1009B481C(uint64_t a1, uint64_t a2, _OWORD *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  uint64_t v28 = &type metadata for SunriseSunsetDetailTracker;
  char v29 = &off_100E35E90;
  uint64_t v18 = (_OWORD *)swift_allocObject();
  *(void *)&long long v27 = v18;
  long long v19 = a3[1];
  v18[1] = *a3;
  v18[2] = v19;
  v18[3] = a3[2];
  uint64_t v25 = type metadata accessor for SunriseSunsetDetailDataProcessor();
  uint64_t v26 = &off_100E0C838;
  *(void *)&long long v24 = a4;
  uint64_t v22 = v25;
  uint64_t v23 = &off_100E0C820;
  *(void *)&long long v21 = a5;
  sub_1000DBCCC();
  a10[23] = OS_os_log.init(subsystem:category:)();
  a10[2] = a1;
  a10[3] = a2;
  sub_1001262E4(&v27, (uint64_t)(a10 + 4));
  sub_1001262E4(&v24, (uint64_t)(a10 + 9));
  sub_1001262E4(&v21, (uint64_t)(a10 + 14));
  a10[19] = a6;
  a10[20] = a7;
  a10[21] = a8;
  a10[22] = a9;
  return a10;
}

void *sub_1009B4964(uint64_t a1, uint64_t a2, _OWORD *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v34 = a8;
  v39[3] = &type metadata for SunriseSunsetDetailTracker;
  v39[4] = &off_100E35E90;
  uint64_t v16 = (_OWORD *)swift_allocObject();
  v39[0] = v16;
  long long v17 = a3[1];
  v16[1] = *a3;
  v16[2] = v17;
  void v16[3] = a3[2];
  uint64_t v18 = type metadata accessor for SunriseSunsetDetailDataProcessor();
  v38[3] = v18;
  v38[4] = &off_100E0C838;
  v38[0] = a4;
  uint64_t v36 = v18;
  uint64_t v37 = &off_100E0C820;
  v35[0] = a5;
  type metadata accessor for SunriseSunsetDetailInteractor();
  long long v19 = (void *)swift_allocObject();
  uint64_t v20 = sub_1000DF0C4((uint64_t)v39, (uint64_t)&type metadata for SunriseSunsetDetailTracker);
  __chkstk_darwin(v20);
  uint64_t v22 = (_OWORD *)((char *)&v35[-1] - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(_OWORD *))(v23 + 16))(v22);
  uint64_t v24 = sub_1000DF0C4((uint64_t)v38, v18);
  __chkstk_darwin(v24);
  uint64_t v26 = (void *)((char *)&v35[-1] - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v27 + 16))(v26);
  uint64_t v28 = sub_1000DF0C4((uint64_t)v35, v36);
  __chkstk_darwin(v28);
  uint64_t v30 = (void *)((char *)&v35[-1] - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v31 + 16))(v30);
  long long v32 = sub_1009B481C(a1, a2, v22, *v26, *v30, a6, a7, v34, a9, v19);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v35);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v38);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v39);
  return v32;
}

uint64_t sub_1009B4C58(uint64_t a1, long long *a2, uint64_t a3, uint64_t a4, long long *a5, long long *a6, long long *a7, uint64_t a8, uint64_t a9, char a10, uint64_t a11)
{
  uint64_t v18 = (void *)(a11 + OBJC_IVAR____TtC7Weather35SunriseSunsetDetailViewModelFactory_viewDataCache);
  v18[3] = type metadata accessor for SunriseSunsetDetailViewDataCache();
  v18[4] = &off_100E1EEA0;
  void *v18 = a3;
  long long v19 = (void *)(a11 + OBJC_IVAR____TtC7Weather35SunriseSunsetDetailViewModelFactory_preprocessedDataProvider);
  v19[3] = type metadata accessor for SunriseSunsetDetailDataProcessor();
  v19[4] = &off_100E0C820;
  *long long v19 = a4;
  uint64_t v20 = (void *)(a11
                 + OBJC_IVAR____TtC7Weather35SunriseSunsetDetailViewModelFactory_newsArticleComponentViewModelFactory);
  v20[3] = type metadata accessor for NewsArticleComponentViewModelFactory();
  v20[4] = &off_100E23878;
  void *v20 = a9;
  uint64_t v21 = a11 + OBJC_IVAR____TtC7Weather35SunriseSunsetDetailViewModelFactory_sunriseSunsetEventCalculator;
  uint64_t v22 = type metadata accessor for SunriseSunsetEventCalculator();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 32))(v21, a1, v22);
  sub_1001262E4(a2, a11 + OBJC_IVAR____TtC7Weather35SunriseSunsetDetailViewModelFactory_chartViewModelFactory);
  sub_1001262E4(a5, a11 + OBJC_IVAR____TtC7Weather35SunriseSunsetDetailViewModelFactory_daylightStringBuilder);
  sub_1001262E4(a6, a11 + OBJC_IVAR____TtC7Weather35SunriseSunsetDetailViewModelFactory_sunElevationCalculator);
  sub_1001262E4(a7, a11 + OBJC_IVAR____TtC7Weather35SunriseSunsetDetailViewModelFactory_sunriseSunsetTableViewModelFactory);
  uint64_t v23 = a11 + OBJC_IVAR____TtC7Weather35SunriseSunsetDetailViewModelFactory_sunriseSunsetPolarSunEventStringBuilder;
  uint64_t v24 = type metadata accessor for SunriseSunsetPolarSunEventStringBuilder();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 32))(v23, a8, v24);
  *(unsigned char *)(a11 + OBJC_IVAR____TtC7Weather35SunriseSunsetDetailViewModelFactory_isDemoPresetActive) = a10;
  return a11;
}

uint64_t sub_1009B4E2C(uint64_t a1, long long *a2, uint64_t a3, uint64_t a4, long long *a5, long long *a6, long long *a7, uint64_t a8, uint64_t a9, char a10)
{
  long long v32 = a7;
  uint64_t v33 = a8;
  uint64_t v41 = type metadata accessor for SunriseSunsetDetailViewDataCache();
  long long v42 = &off_100E1EEA0;
  v40[0] = a3;
  uint64_t v38 = type metadata accessor for SunriseSunsetDetailDataProcessor();
  uint64_t v39 = &off_100E0C820;
  v37[0] = a4;
  uint64_t v35 = type metadata accessor for NewsArticleComponentViewModelFactory();
  uint64_t v36 = &off_100E23878;
  v34[0] = a9;
  type metadata accessor for SunriseSunsetDetailViewModelFactory();
  uint64_t v16 = swift_allocObject();
  uint64_t v17 = sub_1000DF0C4((uint64_t)v40, v41);
  __chkstk_darwin(v17);
  long long v19 = (uint64_t *)((char *)&v31 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v20 + 16))(v19);
  uint64_t v21 = sub_1000DF0C4((uint64_t)v37, v38);
  __chkstk_darwin(v21);
  uint64_t v23 = (uint64_t *)((char *)&v31 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v24 + 16))(v23);
  uint64_t v25 = sub_1000DF0C4((uint64_t)v34, v35);
  __chkstk_darwin(v25);
  uint64_t v27 = (uint64_t *)((char *)&v31 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v28 + 16))(v27);
  uint64_t v29 = sub_1009B4C58(a1, a2, *v19, *v23, a5, a6, v32, v33, *v27, a10, v16);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v34);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v37);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v40);
  return v29;
}

uint64_t sub_1009B5114(const void *a1, long long *a2, uint64_t *a3)
{
  uint64_t v6 = *a3;
  v19[3] = &type metadata for SunriseSunsetMonthlyViewModelFactory;
  v19[4] = &off_100E27FE0;
  v19[0] = swift_allocObject();
  memcpy((void *)(v19[0] + 16), a1, 0x50uLL);
  v18[3] = v6;
  v18[4] = &off_100E1EEA0;
  v18[0] = a3;
  type metadata accessor for SunriseSunsetDetailDataProcessor();
  uint64_t v7 = swift_allocObject();
  uint64_t v8 = sub_1000DF0C4((uint64_t)v19, (uint64_t)&type metadata for SunriseSunsetMonthlyViewModelFactory);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v11 + 16))(v10);
  uint64_t v12 = sub_1000DF0C4((uint64_t)v18, v6);
  __chkstk_darwin(v12);
  uint64_t v14 = (void *)((char *)v18 - v13);
  (*(void (**)(char *))(v15 + 16))((char *)v18 - v13);
  uint64_t v16 = sub_1009B4684(v10, a2, *v14, v7);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v18);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v19);
  return v16;
}

uint64_t sub_1009B5334(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1009B537C()
{
  swift_release();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 24);

  return swift_deallocObject();
}

uint64_t sub_1009B53C0@<X0>(uint64_t *a1@<X8>)
{
  sub_10020D948(v1 + 16, (uint64_t)(a1 + 2));
  uint64_t v3 = *(void *)(v1 + 64);
  swift_retain();
  swift_retain();
  sub_10017DF08(&qword_100E64868);
  sub_1009B545C();
  uint64_t result = ObservedObject.init(wrappedValue:)();
  *a1 = result;
  a1[1] = v5;
  a1[7] = v3;
  return result;
}

uint64_t type metadata accessor for ConditionDetailModule()
{
  return self;
}

unint64_t sub_1009B545C()
{
  unint64_t result = qword_100E64870;
  if (!qword_100E64870)
  {
    sub_10018C6DC(&qword_100E64868);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E64870);
  }
  return result;
}

double sub_1009B54B0@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>, double a3@<D0>, double a4@<D1>, double a5@<D2>, double a6@<D3>, double a7@<D4>)
{
  id v8 = [self bezierPathWithRoundedRect:a1 byRoundingCorners:a3 cornerRadii:a4 a5 a6 a7 a7];
  id v9 = [v8 CGPath];
  Path.init(_:)();

  double result = *(double *)&v11;
  *(_OWORD *)a2 = v11;
  *(_OWORD *)(a2 + 16) = v12;
  *(unsigned char *)(a2 + 32) = v13;
  return result;
}

double sub_1009B557C@<D0>(uint64_t a1@<X8>, double a2@<D0>, double a3@<D1>, double a4@<D2>, double a5@<D3>)
{
  sub_1009B54B0(*(void *)(v5 + 8), (uint64_t)v9, a2, a3, a4, a5, *(double *)v5);
  double result = *(double *)v9;
  long long v8 = v9[1];
  *(_OWORD *)a1 = v9[0];
  *(_OWORD *)(a1 + 16) = v8;
  *(unsigned char *)(a1 + 32) = v10;
  return result;
}

void sub_1009B55D0()
{
}

uint64_t sub_1009B55DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_1009B6A88();

  return static Shape._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_1009B5640(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_1009B6A88();

  return static Shape._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_1009B56A4(uint64_t a1)
{
  unint64_t v2 = sub_1009B6A88();

  return Shape.body.getter(a1, v2);
}

uint64_t sub_1009B56F0@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v36 = a1;
  uint64_t v37 = a3;
  uint64_t v31 = a2[2];
  __chkstk_darwin(a1);
  uint64_t v7 = (char *)v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for EnvironmentValues();
  uint64_t v32 = *(void *)(v8 - 8);
  uint64_t v33 = v8;
  __chkstk_darwin(v8);
  char v10 = (char *)v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = a2[3];
  uint64_t v29 = a2[4];
  uint64_t v30 = v11;
  uint64_t v12 = type metadata accessor for OverlayValueViewModifier();
  uint64_t v35 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v28 = (char *)v27 - v13;
  swift_getWitnessTable();
  v27[1] = type metadata accessor for _ViewModifier_Content();
  uint64_t v14 = type metadata accessor for ModifiedContent();
  uint64_t v34 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  long long v19 = (char *)v27 - v18;
  uint64_t v20 = *v4;
  uint64_t v21 = v4[1];
  sub_1005D25EC();
  swift_getAtKeyPath();
  (*(void (**)(char *, uint64_t))(v32 + 8))(v10, v33);
  uint64_t v22 = v28;
  sub_1009B5AB0(v20, v21, (uint64_t)v7, v4[3], v4[4], v31, v28);
  swift_retain();
  uint64_t WitnessTable = swift_getWitnessTable();
  View.modifier<A>(_:)();
  (*(void (**)(char *, uint64_t))(v35 + 8))(v22, v12);
  uint64_t v24 = swift_getWitnessTable();
  uint64_t v38 = WitnessTable;
  uint64_t v39 = v24;
  swift_getWitnessTable();
  sub_100121584((uint64_t)v16, v14, (uint64_t)v19);
  uint64_t v25 = *(void (**)(char *, uint64_t))(v34 + 8);
  v25(v16, v14);
  sub_100121584((uint64_t)v19, v14, v37);
  return ((uint64_t (*)(char *, uint64_t))v25)(v19, v14);
}

uint64_t sub_1009B5AB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char *a7@<X8>)
{
  *(void *)a7 = a1;
  *((void *)a7 + 1) = a2;
  uint64_t v12 = type metadata accessor for OverlayValueViewModifier();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(a6 - 8) + 32))(&a7[*(int *)(v12 + 44)], a3, a6);
  uint64_t v14 = &a7[*(int *)(v12 + 48)];
  *(void *)uint64_t v14 = a4;
  *((void *)v14 + 1) = a5;
  return result;
}

uint64_t sub_1009B5B54@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  v18[2] = a1;
  uint64_t v19 = a3;
  swift_getWitnessTable();
  type metadata accessor for _ViewModifier_Content();
  uint64_t v5 = a2[3];
  uint64_t v6 = a2[4];
  v18[1] = type metadata accessor for _OverlayModifier();
  uint64_t v7 = type metadata accessor for ModifiedContent();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  char v10 = (char *)v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)v18 - v12;
  v18[0] = *v3;
  uint64_t v20 = a2[2];
  uint64_t v21 = v5;
  uint64_t v22 = v6;
  uint64_t v23 = v3;
  uint64_t WitnessTable = swift_getWitnessTable();
  View.overlay<A>(alignment:content:)();
  uint64_t v15 = swift_getWitnessTable();
  uint64_t v24 = WitnessTable;
  uint64_t v25 = v15;
  swift_getWitnessTable();
  sub_100121584((uint64_t)v10, v7, (uint64_t)v13);
  uint64_t v16 = *(void (**)(char *, uint64_t))(v8 + 8);
  v16(v10, v7);
  sub_100121584((uint64_t)v13, v7, v19);
  return ((uint64_t (*)(char *, uint64_t))v16)(v13, v7);
}

uint64_t sub_1009B5D8C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v6 = *(void *)(a2 - 8);
  __chkstk_darwin(a1);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v15 - v10;
  uint64_t v12 = type metadata accessor for OverlayValueViewModifier();
  (*(void (**)(uint64_t))(a1 + *(int *)(v12 + 48)))(a1 + *(int *)(v12 + 44));
  sub_100121584((uint64_t)v8, a2, (uint64_t)v11);
  uint64_t v13 = *(void (**)(char *, uint64_t))(v6 + 8);
  v13(v8, a2);
  sub_100121584((uint64_t)v11, a2, a3);
  return ((uint64_t (*)(char *, uint64_t))v13)(v11, a2);
}

uint64_t sub_1009B5EDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v19[1] = a5;
  uint64_t v7 = type metadata accessor for OverlayValueViewModifier();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)v19 - v12;
  char v14 = static Alignment.== infix(_:_:)();
  uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  v15(v13, a1, v7);
  v15(v10, a2, v7);
  if (v14) {
    char v16 = dispatch thunk of static Equatable.== infix(_:_:)();
  }
  else {
    char v16 = 0;
  }
  uint64_t v17 = *(void (**)(char *, uint64_t))(v8 + 8);
  v17(v10, v7);
  v17(v13, v7);
  return v16 & 1;
}

uint64_t sub_1009B6074(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1009B5EDC(a1, a2, *(void *)(a3 + 16), *(void *)(a3 + 24), *(void *)(a4 - 8));
}

uint64_t type metadata accessor for OverlayValueViewModifier()
{
  return sub_100109098();
}

uint64_t sub_1009B60A0()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1009B6148(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = *(_DWORD *)(v4 + 80);
  uint64_t v6 = *(void *)(v4 + 64) + 7;
  if (v5 > 7
    || (*(_DWORD *)(v4 + 80) & 0x100000) != 0
    || ((v6 + ((v5 + 16) & ~v5)) & 0xFFFFFFFFFFFFFFF8) + 16 > 0x18)
  {
    uint64_t v9 = *a2;
    uint64_t *v3 = *a2;
    uint64_t v3 = (uint64_t *)(v9 + ((v5 & 0xF8 ^ 0x1F8) & (v5 + 16)));
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    uint64_t v10 = ((unint64_t)a1 + v5 + 16) & ~v5;
    uint64_t v11 = ((unint64_t)a2 + v5 + 16) & ~v5;
    (*(void (**)(uint64_t, uint64_t))(v4 + 16))(v10, v11);
    uint64_t v12 = (void *)((v6 + v11) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v13 = v12[1];
    char v14 = (void *)((v6 + v10) & 0xFFFFFFFFFFFFFFF8);
    *char v14 = *v12;
    v14[1] = v13;
  }
  swift_retain();
  return v3;
}

uint64_t sub_1009B6264(uint64_t a1, uint64_t a2)
{
  (*(void (**)(unint64_t))(*(void *)(*(void *)(a2 + 16) - 8) + 8))((a1
                                                                                            + *(unsigned __int8 *)(*(void *)(*(void *)(a2 + 16) - 8) + 80)
                                                                                            + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(a2 + 16) - 8) + 80));

  return swift_release();
}

_OWORD *sub_1009B62E4(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = v4 + 16;
  uint64_t v6 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v7 = ((unint64_t)a1 + v6 + 16) & ~v6;
  uint64_t v8 = ((unint64_t)a2 + v6 + 16) & ~v6;
  (*(void (**)(uint64_t, uint64_t))(v4 + 16))(v7, v8);
  uint64_t v9 = *(void *)(v5 + 48) + 7;
  uint64_t v10 = (void *)((v9 + v7) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v11 = (void *)((v9 + v8) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v12 = v11[1];
  *uint64_t v10 = *v11;
  v10[1] = v12;
  swift_retain();
  return a1;
}

void *sub_1009B6388(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = v4 + 24;
  uint64_t v6 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v7 = ((unint64_t)a1 + v6 + 16) & ~v6;
  uint64_t v8 = ((unint64_t)a2 + v6 + 16) & ~v6;
  (*(void (**)(uint64_t, uint64_t))(v4 + 24))(v7, v8);
  uint64_t v9 = *(void *)(v5 + 40) + 7;
  uint64_t v10 = (void *)((v9 + v7) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v11 = (void *)((v9 + v8) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v12 = v11[1];
  *uint64_t v10 = *v11;
  v10[1] = v12;
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *sub_1009B6440(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = v4 + 32;
  uint64_t v6 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v7 = ((unint64_t)a1 + v6 + 16) & ~v6;
  uint64_t v8 = ((unint64_t)a2 + v6 + 16) & ~v6;
  (*(void (**)(uint64_t, uint64_t))(v4 + 32))(v7, v8);
  *(_OWORD *)((*(void *)(v5 + 32) + 7 + v7) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((*(void *)(v5 + 32) + 7 + v8) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

_OWORD *sub_1009B64E0(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = v4 + 40;
  uint64_t v6 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v7 = ((unint64_t)a1 + v6 + 16) & ~v6;
  uint64_t v8 = ((unint64_t)a2 + v6 + 16) & ~v6;
  (*(void (**)(uint64_t, uint64_t))(v4 + 40))(v7, v8);
  *(_OWORD *)((*(void *)(v5 + 24) + 7 + v7) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((*(void *)(v5 + 24) + 7 + v8) & 0xFFFFFFFFFFFFFFF8);
  swift_release();
  return a1;
}

uint64_t sub_1009B6588(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(unsigned int *)(v5 + 84);
  uint64_t v7 = *(unsigned __int8 *)(v5 + 80);
  if (v6 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v5 + 84);
  }
  if (!a2) {
    return 0;
  }
  uint64_t v9 = *(void *)(*(void *)(v4 - 8) + 64) + 7;
  if (v8 < a2)
  {
    unint64_t v10 = ((v9 + ((v7 + 16) & ~v7)) & 0xFFFFFFFFFFFFFFF8) + 16;
    unsigned int v11 = a2 - v8;
    uint64_t v12 = v10 & 0xFFFFFFF8;
    if ((v10 & 0xFFFFFFF8) != 0) {
      unsigned int v13 = 2;
    }
    else {
      unsigned int v13 = v11 + 1;
    }
    if (v13 >= 0x10000) {
      unsigned int v14 = 4;
    }
    else {
      unsigned int v14 = 2;
    }
    if (v13 < 0x100) {
      unsigned int v14 = 1;
    }
    if (v13 >= 2) {
      uint64_t v15 = v14;
    }
    else {
      uint64_t v15 = 0;
    }
    switch(v15)
    {
      case 1:
        int v16 = *((unsigned __int8 *)a1 + v10);
        if (!v16) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v16 = *(unsigned __int16 *)((char *)a1 + v10);
        if (v16) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x1009B66E0);
      case 4:
        int v16 = *(_DWORD *)((char *)a1 + v10);
        if (!v16) {
          break;
        }
LABEL_22:
        int v18 = v16 - 1;
        if (v12)
        {
          int v18 = 0;
          LODWORD(v12) = *a1;
        }
        return v8 + (v12 | v18) + 1;
      default:
        break;
    }
  }
  uint64_t v19 = ((unint64_t)a1 + v7 + 16) & ~v7;
  if (v6 >= 0x7FFFFFFF) {
    return _s7Weather24LocationCompositionStateOwet_0(v19, v6, v4);
  }
  unint64_t v20 = *(void *)((v9 + v19) & 0xFFFFFFFFFFFFFFF8);
  if (v20 >= 0xFFFFFFFF) {
    LODWORD(v20) = -1;
  }
  return (v20 + 1);
}

void sub_1009B66F4(char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(a4 + 16);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned int *)(v7 + 84);
  if (v8 <= 0x7FFFFFFF) {
    unsigned int v9 = 0x7FFFFFFF;
  }
  else {
    unsigned int v9 = *(_DWORD *)(v7 + 84);
  }
  uint64_t v10 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v11 = *(void *)(*(void *)(v6 - 8) + 64) + 7;
  unint64_t v12 = ((v11 + ((v10 + 16) & ~v10)) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v9 >= a3)
  {
    int v16 = 0;
  }
  else
  {
    unsigned int v13 = a3 - v9;
    if (((v11 + ((v10 + 16) & ~v10)) & 0xFFFFFFF8) == 0xFFFFFFF0) {
      unsigned int v14 = v13 + 1;
    }
    else {
      unsigned int v14 = 2;
    }
    if (v14 >= 0x10000) {
      int v15 = 4;
    }
    else {
      int v15 = 2;
    }
    if (v14 < 0x100) {
      int v15 = 1;
    }
    if (v14 >= 2) {
      int v16 = v15;
    }
    else {
      int v16 = 0;
    }
  }
  if (a2 > v9)
  {
    if (((v11 + ((v10 + 16) & ~v10)) & 0xFFFFFFF8) == 0xFFFFFFF0) {
      int v17 = a2 - v9;
    }
    else {
      int v17 = 1;
    }
    if (((v11 + ((v10 + 16) & ~v10)) & 0xFFFFFFF8) != 0xFFFFFFF0)
    {
      int v18 = ~v9 + a2;
      bzero(a1, ((v11 + ((v10 + 16) & ~v10)) & 0xFFFFFFFFFFFFFFF8) + 16);
      *(_DWORD *)a1 = v18;
    }
    switch(v16)
    {
      case 1:
        a1[v12] = v17;
        return;
      case 2:
        *(_WORD *)&a1[v12] = v17;
        return;
      case 3:
        goto LABEL_43;
      case 4:
        *(_DWORD *)&a1[v12] = v17;
        return;
      default:
        return;
    }
  }
  switch(v16)
  {
    case 1:
      a1[v12] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_32;
    case 2:
      *(_WORD *)&a1[v12] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_32;
    case 3:
LABEL_43:
      __break(1u);
      JUMPOUT(0x1009B68E4);
    case 4:
      *(_DWORD *)&a1[v12] = 0;
      goto LABEL_31;
    default:
LABEL_31:
      if (a2)
      {
LABEL_32:
        unint64_t v19 = (unint64_t)&a1[v10 + 16] & ~v10;
        if (v8 < 0x7FFFFFFF)
        {
          unint64_t v20 = (void *)((v11 + v19) & 0xFFFFFFFFFFFFFFF8);
          if ((a2 & 0x80000000) != 0)
          {
            uint64_t v21 = a2 ^ 0x80000000;
            v20[1] = 0;
          }
          else
          {
            uint64_t v21 = (a2 - 1);
          }
          void *v20 = v21;
        }
        else
        {
          _s7Weather24LocationCompositionStateOwst_0(v19, a2, v8, v6);
        }
      }
      return;
  }
}

uint64_t sub_1009B690C()
{
  return sub_1009B7374();
}

uint64_t sub_1009B6924@<X0>(uint64_t a1@<X8>)
{
  return sub_1009B5D8C(*(void *)(v1 + 40), *(void *)(v1 + 24), a1);
}

uint64_t sub_1009B6930()
{
  return swift_getWitnessTable();
}

unint64_t sub_1009B6A34()
{
  unint64_t result = qword_100EA62C8;
  if (!qword_100EA62C8)
  {
    sub_10018C6DC(&qword_100EA62D0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA62C8);
  }
  return result;
}

unint64_t sub_1009B6A88()
{
  unint64_t result = qword_100EA62E8;
  if (!qword_100EA62E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA62E8);
  }
  return result;
}

void sub_1009B6AD4()
{
  sub_1009B7304();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void *sub_1009B6B88(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = (void *)a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    void *v3 = *a2;
    uint64_t v3 = (void *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[4];
    long long v6 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v6;
    *(void *)(a1 + 32) = v5;
    uint64_t v7 = *(int *)(a3 + 52);
    uint64_t v8 = (void *)(a1 + v7);
    unsigned int v9 = (uint64_t *)((char *)a2 + v7);
    swift_retain();
    swift_retain();
    sub_10017DF08(&qword_100E845F8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v10 = type metadata accessor for EnvironmentValues();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    }
    else
    {
      void *v8 = *v9;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return v3;
}

uint64_t sub_1009B6CBC(uint64_t a1, uint64_t a2)
{
  swift_release();
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 52);
  sub_10017DF08(&qword_100E845F8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = type metadata accessor for EnvironmentValues();
    long long v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
    return v6(v4, v5);
  }
  else
  {
    return swift_release();
  }
}

uint64_t sub_1009B6D7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a2 + 32);
  long long v5 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v5;
  *(void *)(a1 + 32) = v4;
  uint64_t v6 = *(int *)(a3 + 52);
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (void *)(a2 + v6);
  swift_retain();
  swift_retain();
  sub_10017DF08(&qword_100E845F8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v9 = type metadata accessor for EnvironmentValues();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
  }
  else
  {
    *uint64_t v7 = *v8;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *sub_1009B6E58(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  uint64_t v6 = a2[4];
  a1[3] = a2[3];
  a1[4] = v6;
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    uint64_t v7 = *(int *)(a3 + 52);
    uint64_t v8 = (void *)((char *)a1 + v7);
    uint64_t v9 = (void *)((char *)a2 + v7);
    sub_1009B6F6C((uint64_t)a1 + v7);
    sub_10017DF08(&qword_100E845F8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v10 = type metadata accessor for EnvironmentValues();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    }
    else
    {
      void *v8 = *v9;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1009B6F6C(uint64_t a1)
{
  uint64_t v2 = sub_10017DF08(&qword_100E845F8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1009B6FCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a2 + 32);
  long long v5 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v5;
  *(void *)(a1 + 32) = v4;
  uint64_t v6 = *(int *)(a3 + 52);
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (const void *)(a2 + v6);
  uint64_t v9 = sub_10017DF08(&qword_100E845F8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = type metadata accessor for EnvironmentValues();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 32))(v7, v8, v10);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
  }
  return a1;
}

uint64_t sub_1009B70A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_release();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release();
  if (a1 != a2)
  {
    uint64_t v6 = *(int *)(a3 + 52);
    uint64_t v7 = (void *)(a1 + v6);
    uint64_t v8 = (const void *)(a2 + v6);
    sub_1009B6F6C(a1 + v6);
    uint64_t v9 = sub_10017DF08(&qword_100E845F8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v10 = type metadata accessor for EnvironmentValues();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 32))(v7, v8, v10);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1009B71B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1009B71C8);
}

uint64_t sub_1009B71C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 16);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_10017DF08(qword_100EA62F0);
    uint64_t v9 = a1 + *(int *)(a3 + 52);
    return _s7Weather24LocationCompositionStateOwet_0(v9, a2, v8);
  }
}

uint64_t sub_1009B7254(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1009B7268);
}

uint64_t sub_1009B7268(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 16) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_10017DF08(qword_100EA62F0);
    uint64_t v8 = v5 + *(int *)(a4 + 52);
    return _s7Weather24LocationCompositionStateOwst_0(v8, a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for OverlayEnvironmentValueViewModifier()
{
  return sub_100109098();
}

void sub_1009B7304()
{
  if (!qword_100EA6378)
  {
    type metadata accessor for EnvironmentValues();
    unint64_t v0 = type metadata accessor for Environment.Content();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100EA6378);
    }
  }
}

uint64_t sub_1009B735C()
{
  return sub_1009B7374();
}

uint64_t sub_1009B7374()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1009B73B0()
{
  return swift_getWitnessTable();
}

uint64_t sub_1009B74A0(uint64_t a1)
{
  uint64_t v2 = sub_10017DF08(&qword_100E663F0);
  uint64_t v3 = sub_100109308(v2);
  __chkstk_darwin(v3);
  sub_1001626E0();
  uint64_t v6 = v5 - v4;
  uint64_t v7 = sub_10017DF08(&qword_100E66418);
  uint64_t v8 = sub_100109308(v7);
  __chkstk_darwin(v8);
  sub_1001626E0();
  uint64_t v11 = v10 - v9;
  uint64_t v12 = sub_10017DF08(&qword_100E66420);
  uint64_t v13 = sub_100109308(v12);
  __chkstk_darwin(v13);
  sub_1001626E0();
  uint64_t v16 = v15 - v14;
  uint64_t v17 = sub_10017DF08(&qword_100E66428);
  uint64_t v18 = sub_100109308(v17);
  __chkstk_darwin(v18);
  sub_1001626E0();
  uint64_t v21 = v20 - v19;
  uint64_t v22 = sub_10017DF08(&qword_100E66430);
  uint64_t v23 = sub_100109308(v22);
  __chkstk_darwin(v23);
  sub_1001626E0();
  uint64_t v26 = v25 - v24;
  uint64_t v27 = sub_10017DF08(&qword_100E66438);
  uint64_t v28 = sub_100109308(v27);
  __chkstk_darwin(v28);
  sub_1001626E0();
  uint64_t v31 = v30 - v29;
  uint64_t v32 = sub_10017DF08(&qword_100E66440);
  uint64_t v33 = sub_100109308(v32);
  __chkstk_darwin(v33);
  sub_1001626E0();
  uint64_t v36 = v35 - v34;
  uint64_t v37 = type metadata accessor for AppConfigurationState();
  sub_100179C70(v36, v38, v39, v37);
  uint64_t v40 = type metadata accessor for EnvironmentState();
  sub_100179C70(v31, v41, v42, v40);
  uint64_t v43 = type metadata accessor for LocationsState();
  sub_100179C70(v26, v44, v45, v43);
  uint64_t v46 = type metadata accessor for NotificationsOptInState();
  _s7Weather24LocationCompositionStateOwst_0(v21, 1, 1, v46);
  Date.init()();
  uint64_t v47 = type metadata accessor for TimeState();
  _s7Weather24LocationCompositionStateOwst_0(v16, 0, 1, v47);
  uint64_t v48 = type metadata accessor for ViewState(0);
  uint64_t v51 = sub_100179C70(v11, v49, v50, v48);
  uint64_t v52 = type metadata accessor for ModalViewState(v51);
  _s7Weather24LocationCompositionStateOwst_0(v6, 1, 1, v52);
  uint64_t v53 = sub_1001659F0(0, 3, v36, v31, v26, 0, 0, 0, 0, v21, v16, v11, v6, 0, 0, 0, 0, 0, 0, 0, a1);
  sub_1000F3400(v6, &qword_100E663F0);
  sub_1000F3400(v11, &qword_100E66418);
  sub_1000F3400(v16, &qword_100E66420);
  sub_1000F3400(v21, &qword_100E66428);
  sub_1000F3400(v26, &qword_100E66430);
  sub_1000F3400(v31, &qword_100E66438);
  sub_1000F3400(v36, &qword_100E66440);
  return v53;
}

uint64_t sub_1009B77E8@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v38 = a2;
  uint64_t v39 = a3;
  uint64_t v37 = a1;
  uint64_t v41 = a4;
  uint64_t v40 = type metadata accessor for ConditionDetailChartHeaderStringModel();
  sub_100179C0C();
  uint64_t v42 = v4;
  __chkstk_darwin(v5);
  sub_100162EF8();
  uint64_t v36 = v6;
  __chkstk_darwin(v7);
  uint64_t v33 = (char *)&v32 - v8;
  uint64_t v9 = type metadata accessor for DetailChartCondition();
  sub_100179C0C();
  uint64_t v11 = v10;
  __chkstk_darwin(v12);
  sub_100162EF8();
  uint64_t v35 = v13;
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v32 - v15;
  ConditionDetailChartHeaderInput.condition.getter();
  sub_1009B7ABC((uint64_t)v16, (uint64_t)v44);
  uint64_t v17 = *(void (**)(uint64_t))(v11 + 8);
  uint64_t v18 = sub_10017D92C();
  v17(v18);
  ConditionDetailChartHeaderInput.condition.getter();
  int v19 = sub_1009B7CB4((uint64_t)v16);
  char v20 = v19;
  int v34 = v19;
  uint64_t v21 = sub_10017D92C();
  v17(v21);
  sub_1001B1E64(v44, v44[3]);
  sub_100ADE2A4(v20, v43);
  uint64_t v22 = v33;
  dispatch thunk of ConditionDetailChartHeaderStringBuilderType.makeModel(from:units:extrema:secondaryValueExtrema:style:)();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v43);
  uint64_t v23 = v36;
  uint64_t v24 = v40;
  (*(void (**)(uint64_t, char *, uint64_t))(v42 + 16))(v36, v22, v40);
  ConditionDetailChartHeaderInput.condition.getter();
  uint64_t v25 = v35;
  (*(void (**)(uint64_t, void, uint64_t))(v11 + 104))(v35, enum case for DetailChartCondition.chanceOfRain(_:), v9);
  sub_1009B7EE8();
  LOBYTE(v11) = dispatch thunk of static Equatable.== infix(_:_:)();
  ((void (*)(uint64_t, uint64_t))v17)(v25, v9);
  uint64_t v26 = sub_10017D92C();
  v17(v26);
  uint64_t v27 = v42;
  (*(void (**)(char *, uint64_t))(v42 + 8))(v22, v24);
  uint64_t v28 = *(void (**)(uint64_t, uint64_t, uint64_t))(v27 + 32);
  uint64_t v29 = v41;
  v28(v41, v23, v24);
  uint64_t v30 = type metadata accessor for ConditionDetailChartHeaderViewModel();
  *(unsigned char *)(v29 + *(int *)(v30 + 20)) = v34;
  *(unsigned char *)(v29 + *(int *)(v30 + 24)) = (v11 & 1) == 0;
  return _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v44);
}

uint64_t sub_1009B7ABC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = type metadata accessor for DetailChartCondition();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a1, v5);
  int v9 = (*(uint64_t (**)(char *, uint64_t))(v6 + 88))(v8, v5);
  if (v9 == enum case for DetailChartCondition.humidity(_:))
  {
    uint64_t v10 = v2 + 16;
    return sub_10020D948(v10, a2);
  }
  if (v9 == enum case for DetailChartCondition.pressure(_:))
  {
    uint64_t v10 = v2 + 96;
    return sub_10020D948(v10, a2);
  }
  if (v9 == enum case for DetailChartCondition.precipitationTotal(_:))
  {
    uint64_t v10 = v2 + 56;
    return sub_10020D948(v10, a2);
  }
  if (v9 == enum case for DetailChartCondition.temperature(_:))
  {
    uint64_t v10 = v2 + 136;
    return sub_10020D948(v10, a2);
  }
  if (v9 == enum case for DetailChartCondition.temperatureFeelsLike(_:))
  {
    uint64_t v10 = v2 + 176;
    return sub_10020D948(v10, a2);
  }
  if (v9 == enum case for DetailChartCondition.uvIndex(_:))
  {
    uint64_t v10 = v2 + 216;
    return sub_10020D948(v10, a2);
  }
  if (v9 == enum case for DetailChartCondition.visibility(_:))
  {
    uint64_t v10 = v2 + 256;
    return sub_10020D948(v10, a2);
  }
  if (v9 == enum case for DetailChartCondition.wind(_:))
  {
    uint64_t v10 = v2 + 296;
    return sub_10020D948(v10, a2);
  }
  if (v9 == enum case for DetailChartCondition.chanceOfRain(_:))
  {
    uint64_t v10 = v2 + 336;
    return sub_10020D948(v10, a2);
  }
  uint64_t result = _diagnoseUnexpectedEnumCase<A>(type:)();
  __break(1u);
  return result;
}

uint64_t sub_1009B7CB4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DetailChartCondition();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  int v6 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v5, v2);
  if (v6 == enum case for DetailChartCondition.temperature(_:)
    || v6 == enum case for DetailChartCondition.temperatureFeelsLike(_:))
  {
    return 2;
  }
  if (v6 == enum case for DetailChartCondition.uvIndex(_:)) {
    return 4;
  }
  if (v6 == enum case for DetailChartCondition.visibility(_:)) {
    return 3;
  }
  if (v6 == enum case for DetailChartCondition.chanceOfRain(_:)) {
    return 1;
  }
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return 0;
}

uint64_t sub_1009B7E30()
{
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 16);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 56);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 96);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 136);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 176);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 216);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 256);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 296);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 336);
  return v0;
}

uint64_t sub_1009B7E90()
{
  sub_1009B7E30();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ConditionDetailChartHeaderViewModelFactory()
{
  return self;
}

unint64_t sub_1009B7EE8()
{
  unint64_t result = qword_100E63990;
  if (!qword_100E63990)
  {
    type metadata accessor for DetailChartCondition();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E63990);
  }
  return result;
}

uint64_t sub_1009B7F38(uint64_t a1, uint64_t a2)
{
  uint64_t v182 = a2;
  uint64_t v3 = sub_10017DF08(&qword_100E663E0);
  uint64_t v4 = sub_100109308(v3);
  __chkstk_darwin(v4);
  sub_100109314();
  uint64_t v177 = v5;
  uint64_t v6 = sub_10017DF08(&qword_100E663D8);
  uint64_t v7 = sub_100109308(v6);
  __chkstk_darwin(v7);
  sub_100109314();
  uint64_t v176 = v8;
  uint64_t v181 = type metadata accessor for LocationPreviewModalViewState(0);
  sub_100162E4C();
  __chkstk_darwin(v9);
  sub_100162EF8();
  uint64_t v174 = v10;
  sub_1001626D4();
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v174 - v12;
  uint64_t v189 = type metadata accessor for LocationPreviewViewState(0);
  sub_100162E4C();
  __chkstk_darwin(v14);
  sub_100162EF8();
  uint64_t v175 = v15;
  sub_1001626D4();
  __chkstk_darwin(v16);
  uint64_t v180 = (uint64_t)&v174 - v17;
  uint64_t v18 = sub_10017DF08(&qword_100E663F0);
  uint64_t v19 = sub_100109308(v18);
  __chkstk_darwin(v19);
  sub_100109314();
  uint64_t v185 = v20;
  uint64_t v21 = sub_10017DF08(&qword_100E66418);
  uint64_t v22 = sub_100109308(v21);
  __chkstk_darwin(v22);
  sub_100109314();
  uint64_t v184 = v23;
  uint64_t v24 = sub_10017DF08(&qword_100E66420);
  uint64_t v25 = sub_100109308(v24);
  __chkstk_darwin(v25);
  sub_100109314();
  uint64_t v183 = v26;
  uint64_t v27 = sub_10017DF08(&qword_100E66428);
  uint64_t v28 = sub_100109308(v27);
  __chkstk_darwin(v28);
  sub_100109314();
  uint64_t v186 = v29;
  uint64_t v30 = sub_10017DF08(&qword_100E66430);
  uint64_t v31 = sub_100109308(v30);
  __chkstk_darwin(v31);
  sub_100109314();
  uint64_t v188 = v32;
  uint64_t v33 = sub_10017DF08(&qword_100E66438);
  uint64_t v34 = sub_100109308(v33);
  __chkstk_darwin(v34);
  sub_100109314();
  uint64_t v187 = v35;
  uint64_t v36 = sub_10017DF08(&qword_100E66440);
  uint64_t v37 = sub_100109308(v36);
  __chkstk_darwin(v37);
  sub_100109314();
  uint64_t v190 = v38;
  uint64_t v39 = type metadata accessor for AveragesDetailViewState();
  uint64_t v40 = sub_100109308(v39);
  __chkstk_darwin(v40);
  sub_100162EF8();
  uint64_t v178 = v41;
  sub_1001626D4();
  __chkstk_darwin(v42);
  uint64_t v179 = (uint64_t)&v174 - v43;
  sub_1001626D4();
  __chkstk_darwin(v44);
  uint64_t v46 = (char *)&v174 - v45;
  uint64_t v47 = type metadata accessor for ModalViewState(0);
  sub_100162E4C();
  __chkstk_darwin(v48);
  uint64_t v50 = (char *)&v174 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v51);
  uint64_t v53 = (char *)&v174 - v52;
  __chkstk_darwin(v54);
  Swift::Int v56 = (char *)&v174 - v55;
  type metadata accessor for ModalViewState.LocationDetailModal(0);
  sub_100162E4C();
  __chkstk_darwin(v57);
  uint64_t v59 = (char *)&v174 - ((v58 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v60);
  uint64_t v62 = (char *)&v174 - v61;
  uint64_t v191 = a1;
  uint64_t v63 = a1 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_modalView;
  sub_10011A440(v63, (uint64_t)v56, (void (*)(void))type metadata accessor for ModalViewState);
  if (swift_getEnumCaseMultiPayload() == 5)
  {
    sub_10016E2E8((uint64_t)v56, (uint64_t)v62, (void (*)(void))type metadata accessor for ModalViewState.LocationDetailModal);
    sub_10011A440((uint64_t)v62, (uint64_t)v59, (void (*)(void))type metadata accessor for ModalViewState.LocationDetailModal);
    if (swift_getEnumCaseMultiPayload() == 5)
    {
      sub_10016E2E8((uint64_t)v59, (uint64_t)v46, (void (*)(void))type metadata accessor for AveragesDetailViewState);
      uint64_t v64 = type metadata accessor for AppConfigurationState();
      uint64_t v65 = sub_10017AA2C(v64);
      uint64_t v66 = v187;
      uint64_t v69 = sub_1001630C0(v187, v67, v68, v65);
      uint64_t v70 = v188;
      uint64_t v73 = sub_10017A5E0(v188, v71, v72, v69);
      uint64_t v74 = v186;
      uint64_t v77 = sub_10017A0E0(v186, v75, v76, v73);
      uint64_t v78 = v183;
      uint64_t v81 = sub_100163398(v183, v79, v80, v77);
      uint64_t v82 = v184;
      _s7Weather24LocationCompositionStateOwst_0(v184, 1, 1, v81);
      uint64_t v83 = v185;
      sub_1009B8CB0(v182, v185);
      swift_storeEnumTagMultiPayload();
      swift_storeEnumTagMultiPayload();
      _s7Weather24LocationCompositionStateOwst_0(v83, 0, 1, v47);
      uint64_t v172 = v191;
      sub_100183844();
      uint64_t v84 = sub_10016356C();
      uint64_t v85 = v190;
      uint64_t v86 = v66;
      uint64_t v91 = sub_100163034(v84, v87, v190, v66, v70, v88, v89, v90, v164, v74, v78, v82, v83, v166, v167, v168, v169, v170, v171,
              0,
              v172);
      sub_1001781AC(v83, &qword_100E663F0);
      sub_1001781AC(v82, &qword_100E66418);
      sub_1001781AC(v78, &qword_100E66420);
      sub_1001781AC(v74, &qword_100E66428);
      sub_1001781AC(v70, &qword_100E66430);
      sub_1001781AC(v86, &qword_100E66438);
      sub_1001781AC(v85, &qword_100E66440);
      sub_1009B8F50((uint64_t)v46, (void (*)(void))type metadata accessor for AveragesDetailViewState);
      uint64_t v92 = type metadata accessor for ModalViewState.LocationDetailModal;
      uint64_t v93 = (uint64_t)v62;
LABEL_19:
      sub_1009B8F50(v93, (void (*)(void))v92);
      return v91;
    }
    sub_1009B8F50((uint64_t)v62, (void (*)(void))type metadata accessor for ModalViewState.LocationDetailModal);
    uint64_t v95 = (uint64_t)v59;
    uint64_t v94 = type metadata accessor for ModalViewState.LocationDetailModal;
  }
  else
  {
    uint64_t v94 = type metadata accessor for ModalViewState;
    uint64_t v95 = (uint64_t)v56;
  }
  sub_1009B8F50(v95, (void (*)(void))v94);
  sub_10011A440(v63, (uint64_t)v53, (void (*)(void))type metadata accessor for ModalViewState);
  if (swift_getEnumCaseMultiPayload())
  {
    sub_1009B8F50((uint64_t)v53, (void (*)(void))type metadata accessor for ModalViewState);
    uint64_t v96 = v189;
  }
  else
  {
    uint64_t v97 = v180;
    sub_10016E2E8((uint64_t)v53, v180, (void (*)(void))type metadata accessor for LocationPreviewViewState);
    uint64_t v96 = v189;
    sub_10011A440(v97 + *(int *)(v189 + 20), (uint64_t)v13, (void (*)(void))type metadata accessor for LocationPreviewModalViewState);
    uint64_t v98 = v181;
    if (swift_getEnumCaseMultiPayload() == 7)
    {
      sub_10016E2E8((uint64_t)v13, v179, (void (*)(void))type metadata accessor for AveragesDetailViewState);
      uint64_t v99 = type metadata accessor for AppConfigurationState();
      uint64_t v100 = sub_10017AA2C(v99);
      uint64_t v103 = sub_1001630C0(v187, v101, v102, v100);
      uint64_t v106 = sub_10017A5E0(v188, v104, v105, v103);
      uint64_t v107 = v186;
      uint64_t v110 = sub_10017A0E0(v186, v108, v109, v106);
      uint64_t v111 = v183;
      uint64_t v114 = sub_100163398(v183, v112, v113, v110);
      uint64_t v115 = v184;
      _s7Weather24LocationCompositionStateOwst_0(v184, 1, 1, v114);
      uint64_t v116 = type metadata accessor for PreviewLocation();
      uint64_t v117 = v176;
      _s7Weather24LocationCompositionStateOwst_0(v176, 1, 1, v116);
      uint64_t v118 = v177;
      sub_1009B8CB0(v182, v177);
      swift_storeEnumTagMultiPayload();
      _s7Weather24LocationCompositionStateOwst_0(v118, 0, 1, v98);
      uint64_t v119 = v185;
      uint64_t v120 = v97;
      sub_1004E4A98(v117, v118, v185);
      sub_1001781AC(v118, &qword_100E663E0);
      sub_1001781AC(v117, &qword_100E663D8);
      swift_storeEnumTagMultiPayload();
      _s7Weather24LocationCompositionStateOwst_0(v119, 0, 1, v47);
      uint64_t v173 = v191;
      sub_100183844();
      uint64_t v121 = sub_10016356C();
      uint64_t v122 = v190;
      uint64_t v123 = v187;
      uint64_t v124 = v188;
      uint64_t v91 = sub_100163034(v121, v125, v190, v187, v188, v126, v127, v128, v164, v107, v111, v115, v119, v166, v167, v168, v169, v170, v171,
              0,
              v173);
      sub_1001781AC(v119, &qword_100E663F0);
      sub_1001781AC(v115, &qword_100E66418);
      sub_1001781AC(v111, &qword_100E66420);
      sub_1001781AC(v107, &qword_100E66428);
      sub_1001781AC(v124, &qword_100E66430);
      sub_1001781AC(v123, &qword_100E66438);
      sub_1001781AC(v122, &qword_100E66440);
      sub_1009B8F50(v179, (void (*)(void))type metadata accessor for AveragesDetailViewState);
      uint64_t v92 = type metadata accessor for LocationPreviewViewState;
      uint64_t v93 = v120;
      goto LABEL_19;
    }
    sub_1009B8F50(v97, (void (*)(void))type metadata accessor for LocationPreviewViewState);
    sub_1009B8F50((uint64_t)v13, (void (*)(void))type metadata accessor for LocationPreviewModalViewState);
  }
  sub_10011A440(v63, (uint64_t)v50, (void (*)(void))type metadata accessor for ModalViewState);
  if (swift_getEnumCaseMultiPayload() != 4)
  {
    sub_1009B8F50((uint64_t)v50, (void (*)(void))type metadata accessor for ModalViewState);
    goto LABEL_15;
  }
  uint64_t v129 = type metadata accessor for ModalViewState.MapViewModal(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v50, 1, v129) == 1)
  {
    sub_1001781AC((uint64_t)v50, &qword_100E663E8);
LABEL_15:
    uint64_t v91 = v191;
    goto LABEL_16;
  }
  uint64_t v130 = v175;
  sub_10016E2E8((uint64_t)v50, v175, (void (*)(void))type metadata accessor for LocationPreviewViewState);
  uint64_t v131 = v174;
  sub_10011A440(v130 + *(int *)(v96 + 20), v174, (void (*)(void))type metadata accessor for LocationPreviewModalViewState);
  uint64_t v132 = v181;
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v91 = v191;
  if (EnumCaseMultiPayload == 7)
  {
    sub_10016E2E8(v131, v178, (void (*)(void))type metadata accessor for AveragesDetailViewState);
    uint64_t v134 = type metadata accessor for AppConfigurationState();
    uint64_t v135 = sub_10017AA2C(v134);
    uint64_t v138 = sub_1001630C0(v187, v136, v137, v135);
    uint64_t v141 = sub_10017A5E0(v188, v139, v140, v138);
    uint64_t v144 = sub_10017A0E0(v186, v142, v143, v141);
    uint64_t v145 = v183;
    uint64_t v148 = sub_100163398(v183, v146, v147, v144);
    uint64_t v149 = v184;
    _s7Weather24LocationCompositionStateOwst_0(v184, 1, 1, v148);
    uint64_t v150 = type metadata accessor for PreviewLocation();
    uint64_t v151 = v176;
    _s7Weather24LocationCompositionStateOwst_0(v176, 1, 1, v150);
    uint64_t v152 = v177;
    sub_1009B8CB0(v182, v177);
    swift_storeEnumTagMultiPayload();
    _s7Weather24LocationCompositionStateOwst_0(v152, 0, 1, v132);
    uint64_t v153 = v185;
    sub_1004E4A98(v151, v152, v185);
    sub_1001781AC(v152, &qword_100E663E0);
    sub_1001781AC(v151, &qword_100E663D8);
    _s7Weather24LocationCompositionStateOwst_0(v153, 0, 1, v129);
    swift_storeEnumTagMultiPayload();
    _s7Weather24LocationCompositionStateOwst_0(v153, 0, 1, v47);
    sub_100183844();
    uint64_t v154 = v186;
    uint64_t v165 = v186;
    uint64_t v155 = sub_10016356C();
    uint64_t v156 = v190;
    uint64_t v157 = v187;
    uint64_t v158 = v188;
    uint64_t v91 = sub_100163034(v155, v159, v190, v187, v188, v160, v161, v162, v164, v165, v145, v149, v153, v166, v167, v168, v169, v170, v171,
            0,
            v91);
    sub_1001781AC(v153, &qword_100E663F0);
    sub_1001781AC(v149, &qword_100E66418);
    sub_1001781AC(v145, &qword_100E66420);
    sub_1001781AC(v154, &qword_100E66428);
    sub_1001781AC(v158, &qword_100E66430);
    sub_1001781AC(v157, &qword_100E66438);
    sub_1001781AC(v156, &qword_100E66440);
    sub_1009B8F50(v178, (void (*)(void))type metadata accessor for AveragesDetailViewState);
    uint64_t v92 = type metadata accessor for LocationPreviewViewState;
    uint64_t v93 = v130;
    goto LABEL_19;
  }
  sub_1009B8F50(v130, (void (*)(void))type metadata accessor for LocationPreviewViewState);
  sub_1009B8F50(v131, (void (*)(void))type metadata accessor for LocationPreviewModalViewState);
LABEL_16:
  swift_retain();
  return v91;
}

uint64_t sub_1009B8CB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = type metadata accessor for AveragesDetailViewAction();
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10011A440(a1, (uint64_t)v7, (void (*)(void))type metadata accessor for AveragesDetailViewAction);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    char v21 = *v7;
    uint64_t v22 = type metadata accessor for Location();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16))(a2, v2, v22);
    uint64_t v23 = (int *)type metadata accessor for AveragesDetailViewState();
    uint64_t result = sub_1002F8E04(v2 + v23[6], a2 + v23[6]);
    uint64_t v24 = (uint64_t *)(v2 + v23[7]);
    uint64_t v16 = *v24;
    long long v17 = *(_OWORD *)(v24 + 1);
    uint64_t v18 = v24[3];
    char v19 = *((unsigned char *)v24 + 32);
    *(unsigned char *)(a2 + v23[5]) = v21;
LABEL_6:
    uint64_t v20 = v23[7];
    goto LABEL_7;
  }
  if (EnumCaseMultiPayload != 1)
  {
    uint64_t v25 = type metadata accessor for Location();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 16))(a2, v2, v25);
    uint64_t v23 = (int *)type metadata accessor for AveragesDetailViewState();
    char v26 = *(unsigned char *)(v2 + v23[5]);
    uint64_t v27 = a2 + v23[6];
    uint64_t v28 = type metadata accessor for DetailHeroChartLollipopPosition(0);
    uint64_t result = _s7Weather24LocationCompositionStateOwst_0(v27, 1, 1, v28);
    uint64_t v29 = (uint64_t *)(v2 + v23[7]);
    uint64_t v16 = *v29;
    long long v17 = *(_OWORD *)(v29 + 1);
    uint64_t v18 = v29[3];
    char v19 = *((unsigned char *)v29 + 32);
    *(unsigned char *)(a2 + v23[5]) = v26;
    goto LABEL_6;
  }
  uint64_t v9 = (int *)type metadata accessor for AveragesDetailViewState();
  uint64_t v10 = a2 + v9[6];
  sub_10016E2E8((uint64_t)v7, v10, (void (*)(void))type metadata accessor for DetailHeroChartLollipopPosition);
  uint64_t v11 = type metadata accessor for Location();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16))(a2, v2, v11);
  char v12 = *(unsigned char *)(v2 + v9[5]);
  uint64_t v13 = type metadata accessor for DetailHeroChartLollipopPosition(0);
  uint64_t result = _s7Weather24LocationCompositionStateOwst_0(v10, 0, 1, v13);
  uint64_t v15 = (uint64_t *)(v2 + v9[7]);
  uint64_t v16 = *v15;
  long long v17 = *(_OWORD *)(v15 + 1);
  uint64_t v18 = v15[3];
  char v19 = *((unsigned char *)v15 + 32);
  *(unsigned char *)(a2 + v9[5]) = v12;
  uint64_t v20 = v9[7];
LABEL_7:
  uint64_t v30 = a2 + v20;
  *(void *)uint64_t v30 = v16;
  *(_OWORD *)(v30 + 8) = v17;
  *(void *)(v30 + 24) = v18;
  *(unsigned char *)(v30 + 32) = v19;
  return result;
}

uint64_t sub_1009B8F50(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_1009B8FA8@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100EA6590);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v23)
  {
    sub_1001B1E64(a1, a1[3]);
    sub_10017DF08(&qword_100E64C08);
    uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
    if (result)
    {
      uint64_t v5 = result;
      uint64_t v6 = sub_1000DF0C4((uint64_t)v22, v23);
      __n128 v7 = __chkstk_darwin(v6);
      uint64_t v9 = (void *)((char *)v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *, __n128))(v10 + 16))(v9, v7);
      uint64_t v11 = *v9;
      uint64_t v12 = type metadata accessor for ListMenuInteractor();
      v21[3] = v12;
      v21[4] = &off_100E1ABA8;
      v21[0] = v11;
      uint64_t v13 = type metadata accessor for ListMenuModule();
      uint64_t v14 = (void *)swift_allocObject();
      uint64_t v15 = sub_1000DF0C4((uint64_t)v21, v12);
      __n128 v16 = __chkstk_darwin(v15);
      uint64_t v18 = (void *)((char *)v21 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *, __n128))(v19 + 16))(v18, v16);
      uint64_t v20 = *v18;
      v14[5] = v12;
      v14[6] = &off_100E1ABA8;
      v14[2] = v20;
      v14[7] = v5;
      _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v21);
      uint64_t result = _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v22);
      a2[3] = v13;
      a2[4] = &off_100E107D8;
      *a2 = v14;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1009B9214()
{
  sub_10017DF08(&qword_100EA6590);
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  sub_10017DF08(&qword_100EA6598);
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  sub_10017DF08(&qword_100EA65A0);
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  sub_10017DF08(&qword_100E64C08);
  RegistrationContainer.register<A>(_:name:factory:)();

  return swift_release();
}

uint64_t sub_1009B9320@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E647D8);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v5)
  {
    uint64_t v4 = type metadata accessor for ListMenuInteractor();
    uint64_t result = swift_allocObject();
    *(void *)(result + 16) = v5;
    *(void *)(result + 24) = v6;
    a2[3] = v4;
    a2[4] = (uint64_t)&off_100E1ABA8;
    *a2 = result;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1009B93BC@<X0>(uint64_t *a1@<X8>)
{
  return sub_1009B93FC((uint64_t (*)(void))type metadata accessor for ListMenuInputFactory, (uint64_t)&off_100E362D0, a1);
}

uint64_t sub_1009B93DC@<X0>(uint64_t *a1@<X8>)
{
  return sub_1009B93FC((uint64_t (*)(void))type metadata accessor for ListMenuViewModelFactory, (uint64_t)&off_100E2E3F8, a1);
}

uint64_t sub_1009B93FC@<X0>(uint64_t (*a1)(void)@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t v5 = a1(0);
  uint64_t result = swift_allocObject();
  a3[3] = v5;
  a3[4] = a2;
  *a3 = result;
  return result;
}

uint64_t sub_1009B944C(void *a1)
{
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E64798);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  uint64_t v3 = v19;
  if (!v19)
  {
    __break(1u);
    goto LABEL_6;
  }
  uint64_t v5 = v21;
  uint64_t v4 = v22;
  uint64_t v6 = v20;
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100EA6598);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v18)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v7 = *sub_1001B1E64(v17, v18);
  uint64_t v15 = type metadata accessor for ListMenuInputFactory();
  __n128 v16 = &off_100E362D0;
  v14[0] = v7;
  sub_10020D948((uint64_t)v14, (uint64_t)v13);
  uint64_t v8 = swift_allocObject();
  sub_1001262E4(v13, v8 + 16);
  swift_retain();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v14);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v17);
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = sub_1009B97F8;
  *(void *)(v9 + 24) = v8;
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100EA65A0);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v18)
  {
    uint64_t v10 = *sub_1001B1E64(v17, v18);
    uint64_t v15 = type metadata accessor for ListMenuViewModelFactory();
    __n128 v16 = &off_100E2E3F8;
    v14[0] = v10;
    sub_10020D948((uint64_t)v14, (uint64_t)v13);
    uint64_t v11 = swift_allocObject();
    sub_1001262E4(v13, v11 + 16);
    swift_retain();
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v14);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v17);
    uint64_t v12 = swift_allocObject();
    *(void *)(v12 + 16) = sub_1009B9870;
    *(void *)(v12 + 24) = v11;
    sub_10017DF08(&qword_100E64C08);
    swift_allocObject();
    return sub_10025B43C(v3, v6, v5, v4, sub_10025969C, 0, sub_1009B9838, v9, sub_1009B987C, v12);
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_1009B9700(uint64_t a1, void *a2)
{
  return sub_100A84404(a1);
}

void *sub_1009B973C(void *a1)
{
  id v2 = a1;
  return a1;
}

uint64_t sub_1009B977C@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(void, void, void)@<X1>, uint64_t a3@<X8>)
{
  uint64_t result = a2(*(void *)a1, *(void *)(a1 + 8), *(unsigned __int8 *)(a1 + 16));
  *(void *)a3 = result;
  *(void *)(a3 + 8) = v5;
  *(unsigned char *)(a3 + 16) = v6;
  return result;
}

uint64_t sub_1009B97C0()
{
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 16);

  return swift_deallocObject();
}

uint64_t sub_1009B97F8(uint64_t a1)
{
  return sub_1009B9700(a1, (void *)(v1 + 16));
}

uint64_t sub_1009B9800()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1009B9838@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v2 + 16))(*a1);
  *(void *)a2 = result;
  *(void *)(a2 + 8) = v5;
  *(unsigned char *)(a2 + 16) = v6;
  return result;
}

void *sub_1009B9870(void *a1)
{
  return sub_1009B973C(a1);
}

uint64_t sub_1009B987C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1009B977C(a1, *(uint64_t (**)(void, void, void))(v2 + 16), a2);
}

uint64_t sub_1009B988C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(_DWORD *)(v6 + 80);
  if (v7 > 7
    || (*(_DWORD *)(v6 + 80) & 0x100000) != 0
    || ((v7 + 9) & (unint64_t)~v7) + *(void *)(v6 + 64) > 0x18)
  {
    uint64_t v10 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = v10 + ((v7 & 0xF8 ^ 0x1F8) & (v7 + 16));
    swift_retain();
  }
  else
  {
    uint64_t v11 = *(void *)a2;
    char v12 = *(unsigned char *)(a2 + 8);
    sub_100195B7C(*(void *)a2, v12);
    *(void *)a1 = v11;
    *(unsigned char *)(a1 + 8) = v12;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))((a1 + v7 + 9) & ~v7, (a2 + v7 + 9) & ~v7, v5);
  }
  return a1;
}

uint64_t sub_1009B99AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v4 + 32))((*(unsigned __int8 *)(v4 + 80) + 9 + a1) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80), (*(unsigned __int8 *)(v4 + 80) + 9 + a2) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  return a1;
}

uint64_t sub_1009B9A24(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  char v7 = *((unsigned char *)a2 + 8);
  uint64_t v8 = *(void *)a1;
  char v9 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v6;
  *(unsigned char *)(a1 + 8) = v7;
  sub_10018F6D8(v8, v9);
  uint64_t v10 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v10 + 40))((*(unsigned __int8 *)(v10 + 80) + 9 + a1) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v10 + 80) + 9) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
  return a1;
}

uint64_t sub_1009B9AB8(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(unsigned int *)(v5 + 84);
  uint64_t v7 = *(unsigned __int8 *)(v5 + 80);
  if (v6 <= 0xFE) {
    unsigned int v8 = 254;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v5 + 84);
  }
  if (!a2) {
    return 0;
  }
  int v9 = a2 - v8;
  if (a2 <= v8) {
    goto LABEL_23;
  }
  uint64_t v10 = ((v7 + 9) & ~v7) + *(void *)(*(void *)(v4 - 8) + 64);
  char v11 = 8 * v10;
  if (v10 <= 3)
  {
    unsigned int v14 = ((v9 + ~(-1 << v11)) >> v11) + 1;
    if (HIWORD(v14))
    {
      int v12 = *(_DWORD *)((char *)a1 + v10);
      if (!v12) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v14 > 0xFF)
    {
      int v12 = *(unsigned __int16 *)((char *)a1 + v10);
      if (!*(unsigned __int16 *)((char *)a1 + v10)) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v14 < 2)
    {
LABEL_23:
      if (v6 > 0xFE) {
        return _s7Weather24LocationCompositionStateOwet_0(((unint64_t)a1 + v7 + 9) & ~v7, v6, v4);
      }
      unsigned int v16 = *((unsigned __int8 *)a1 + 8);
      if (v16 > 1) {
        return (v16 ^ 0xFF) + 1;
      }
      else {
        return 0;
      }
    }
  }
  int v12 = *((unsigned __int8 *)a1 + v10);
  if (!*((unsigned char *)a1 + v10)) {
    goto LABEL_23;
  }
LABEL_15:
  int v15 = (v12 - 1) << v11;
  if (v10 > 3) {
    int v15 = 0;
  }
  if (v10)
  {
    if (v10 > 3) {
      LODWORD(v10) = 4;
    }
    switch((int)v10)
    {
      case 2:
        LODWORD(v10) = *a1;
        break;
      case 3:
        LODWORD(v10) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v10) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v10) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v8 + (v10 | v15) + 1;
}

void sub_1009B9C48(char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(a4 + 16);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned int *)(v7 + 84);
  if (v8 <= 0xFE) {
    unsigned int v9 = 254;
  }
  else {
    unsigned int v9 = *(_DWORD *)(v7 + 84);
  }
  uint64_t v10 = *(unsigned __int8 *)(v7 + 80);
  size_t v11 = ((v10 + 9) & ~v10) + *(void *)(*(void *)(v6 - 8) + 64);
  char v12 = 8 * v11;
  BOOL v13 = a3 >= v9;
  unsigned int v14 = a3 - v9;
  if (v14 != 0 && v13)
  {
    if (v11 <= 3)
    {
      unsigned int v18 = ((v14 + ~(-1 << v12)) >> v12) + 1;
      if (HIWORD(v18))
      {
        int v15 = 4;
      }
      else if (v18 >= 0x100)
      {
        int v15 = 2;
      }
      else
      {
        int v15 = v18 > 1;
      }
    }
    else
    {
      int v15 = 1;
    }
  }
  else
  {
    int v15 = 0;
  }
  if (v9 < a2)
  {
    unsigned int v16 = ~v9 + a2;
    if (v11 < 4)
    {
      int v17 = (v16 >> v12) + 1;
      if (v11)
      {
        int v19 = v16 & ~(-1 << v12);
        bzero(a1, v11);
        if (v11 == 3)
        {
          *(_WORD *)a1 = v19;
          a1[2] = BYTE2(v19);
        }
        else if (v11 == 2)
        {
          *(_WORD *)a1 = v19;
        }
        else
        {
          *a1 = v19;
        }
      }
    }
    else
    {
      bzero(a1, v11);
      *(_DWORD *)a1 = v16;
      int v17 = 1;
    }
    switch(v15)
    {
      case 1:
        a1[v11] = v17;
        return;
      case 2:
        *(_WORD *)&a1[v11] = v17;
        return;
      case 3:
        goto LABEL_41;
      case 4:
        *(_DWORD *)&a1[v11] = v17;
        return;
      default:
        return;
    }
  }
  switch(v15)
  {
    case 1:
      a1[v11] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 2:
      *(_WORD *)&a1[v11] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 3:
LABEL_41:
      __break(1u);
      JUMPOUT(0x1009B9EA0);
    case 4:
      *(_DWORD *)&a1[v11] = 0;
      goto LABEL_23;
    default:
LABEL_23:
      if (a2)
      {
LABEL_24:
        if (v8 > 0xFE)
        {
          unint64_t v20 = (unint64_t)&a1[v10 + 9] & ~v10;
          _s7Weather24LocationCompositionStateOwst_0(v20, a2, v8, v6);
        }
        else if (a2 > 0xFE)
        {
          a1[8] = 0;
          *(void *)a1 = (a2 - 255);
        }
        else
        {
          a1[8] = -(char)a2;
        }
      }
      return;
  }
}

uint64_t sub_1009B9EF8()
{
  sub_10017AC90();
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  sub_10018F6D8(*(void *)(v0 + v2), *(unsigned char *)(v0 + v2 + 8));
  sub_100162880();
  sub_100162F0C();
  v3();

  return swift_deallocObject();
}

uint64_t sub_1009B9FCC()
{
  sub_10017AC90();
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  type metadata accessor for LocationViewGeometry(0);
  sub_10018F6D8(*(void *)(v0 + v2), *(unsigned char *)(v0 + v2 + 8));
  sub_100162880();
  sub_100162F0C();
  v3();
  type metadata accessor for TargetWindowSizeClass();
  sub_100162E4C();
  sub_100162F0C();
  v4();

  return swift_deallocObject();
}

__n128 sub_1009BA120()
{
  uint64_t v0 = type metadata accessor for LocationViewGeometry(0);
  sub_100097814(v0, qword_100EA65A8);
  uint64_t v1 = sub_1002102B0(v0, (uint64_t)qword_100EA65A8);
  if (qword_100E629A8 != -1) {
    swift_once();
  }
  uint64_t v2 = qword_100F52238;
  uint64_t v3 = v1 + *(int *)(v0 + 24);
  uint64_t v4 = enum case for TargetWindowSizeClass.compact(_:);
  uint64_t v5 = type metadata accessor for TargetWindowSizeClass();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(v3, v4, v5);
  if (qword_100E62748 != -1) {
    swift_once();
  }
  *(void *)(v1 + 64) = v2;
  long long v7 = xmmword_100F51D48;
  __n128 result = *(__n128 *)&qword_100F51D58;
  *(void *)(v1 + 16) = 0;
  *(void *)(v1 + 24) = 0;
  *(unsigned char *)(v1 + 32) = 0;
  *(void *)(v1 + 40) = 0x4030000000000000;
  *(_WORD *)(v1 + 48) = 768;
  *(void *)(v1 + 56) = 0x4034000000000000;
  *(unsigned char *)(v1 + 72) = 0x80;
  *(void *)uint64_t v1 = 0;
  *(void *)(v1 + 8) = 0x4062000000000000;
  uint64_t v8 = v1 + *(int *)(v0 + 28);
  *(_OWORD *)uint64_t v8 = v7;
  *(__n128 *)(v8 + 16) = result;
  return result;
}

uint64_t sub_1009BA27C()
{
  if (qword_100E62970 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for LocationViewGeometry(0);

  return sub_1002102B0(v0, (uint64_t)qword_100EA65A8);
}

uint64_t sub_1009BA2E0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_1009BA27C();
  return sub_1000E5BDC(v2, a1, (void (*)(void))type metadata accessor for LocationViewGeometry);
}

char *sub_1009BA324(char *__dst, char *__src, uint64_t a3)
{
  uint64_t v4 = __dst;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *(void *)__src;
    *(void *)uint64_t v4 = *(void *)__src;
    uint64_t v4 = (char *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    memcpy(__dst, __src, 0x48uLL);
    v4[72] = __src[72];
    uint64_t v7 = *(int *)(a3 + 24);
    uint64_t v8 = &v4[v7];
    unsigned int v9 = &__src[v7];
    uint64_t v10 = type metadata accessor for TargetWindowSizeClass();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    uint64_t v11 = *(int *)(a3 + 28);
    char v12 = &v4[v11];
    BOOL v13 = &__src[v11];
    long long v14 = *((_OWORD *)v13 + 1);
    *(_OWORD *)char v12 = *(_OWORD *)v13;
    *((_OWORD *)v12 + 1) = v14;
  }
  return v4;
}

uint64_t sub_1009BA424(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 24);
  uint64_t v3 = type metadata accessor for TargetWindowSizeClass();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);

  return v4(v2, v3);
}

unsigned char *sub_1009BA48C(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  memcpy(a1, a2, 0x48uLL);
  a1[72] = a2[72];
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = type metadata accessor for TargetWindowSizeClass();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
  uint64_t v10 = *(int *)(a3 + 28);
  uint64_t v11 = &a1[v10];
  char v12 = &a2[v10];
  long long v13 = v12[1];
  *uint64_t v11 = *v12;
  v11[1] = v13;
  return a1;
}

uint64_t sub_1009BA534(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  long long v6 = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 17) = *(_OWORD *)(a2 + 17);
  *(_OWORD *)(a1 + 8) = v6;
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(unsigned char *)(a1 + 49) = *(unsigned char *)(a2 + 49);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for TargetWindowSizeClass();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 28);
  char v12 = (void *)(a1 + v11);
  long long v13 = (void *)(a2 + v11);
  void *v12 = *v13;
  v12[1] = v13[1];
  long long v12[2] = v13[2];
  void v12[3] = v13[3];
  return a1;
}

unsigned char *sub_1009BA62C(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  memcpy(a1, a2, 0x48uLL);
  a1[72] = a2[72];
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = type metadata accessor for TargetWindowSizeClass();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = *(int *)(a3 + 28);
  uint64_t v11 = &a1[v10];
  char v12 = &a2[v10];
  long long v13 = v12[1];
  *uint64_t v11 = *v12;
  v11[1] = v13;
  return a1;
}

uint64_t sub_1009BA6D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 17) = *(_OWORD *)(a2 + 17);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(_WORD *)(a1 + 48) = *(_WORD *)(a2 + 48);
  long long v6 = *(_OWORD *)(a2 + 56);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(_OWORD *)(a1 + 56) = v6;
  uint64_t v10 = type metadata accessor for TargetWindowSizeClass();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 28);
  char v12 = (_OWORD *)(a1 + v11);
  long long v13 = (_OWORD *)(a2 + v11);
  long long v14 = v13[1];
  _OWORD *v12 = *v13;
  v12[1] = v14;
  return a1;
}

uint64_t sub_1009BA7A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 254)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 32);
    if (v4 > 1) {
      return (v4 ^ 0xFF) + 1;
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v8 = type metadata accessor for TargetWindowSizeClass();
    uint64_t v9 = a1 + *(int *)(a3 + 24);
    return _s7Weather24LocationCompositionStateOwet_0(v9, a2, v8);
  }
}

uint64_t sub_1009BA824(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 254)
  {
    *(unsigned char *)(result + 32) = -(char)a2;
  }
  else
  {
    uint64_t v7 = type metadata accessor for TargetWindowSizeClass();
    uint64_t v8 = v5 + *(int *)(a4 + 24);
    return _s7Weather24LocationCompositionStateOwst_0(v8, a2, a2, v7);
  }
  return result;
}

uint64_t sub_1009BA8A0(uint64_t a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *(void *)a1 = *a2;
    a1 = v11 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    sub_10017DF08(&qword_100E63BD0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
      *(unsigned char *)(a1 + 17) = *((unsigned char *)a2 + 17);
      *(unsigned char *)(a1 + 18) = *((unsigned char *)a2 + 18);
      uint64_t v7 = *(int *)(type metadata accessor for DisplayMetrics() + 36);
      uint64_t v8 = a1 + v7;
      uint64_t v9 = (uint64_t)a2 + v7;
      uint64_t v10 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    }
    else
    {
      *(void *)a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v12 = a3[5];
    long long v13 = (void *)(a1 + v12);
    long long v14 = (uint64_t *)((char *)a2 + v12);
    sub_10017DF08((uint64_t *)&unk_100EAA560);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v15 = type metadata accessor for UserInterfaceSizeClass();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v14, 1, v15))
      {
        uint64_t v16 = sub_10017DF08(&qword_100E65ED8);
        memcpy(v13, v14, *(void *)(*(void *)(v16 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v13, 0, 1, v15);
      }
    }
    else
    {
      void *v13 = *v14;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v17 = a3[6];
    uint64_t v18 = a1 + v17;
    uint64_t v19 = (uint64_t)a2 + v17;
    uint64_t v20 = *(void *)v19;
    char v21 = *(unsigned char *)(v19 + 8);
    sub_100195B7C(*(void *)v19, v21);
    *(void *)uint64_t v18 = v20;
    *(unsigned char *)(v18 + 8) = v21;
    uint64_t v22 = a3[7];
    uint64_t v23 = a1 + v22;
    uint64_t v24 = (uint64_t)a2 + v22;
    uint64_t v25 = *(void *)v24;
    char v26 = *(unsigned char *)(v24 + 8);
    sub_100195B7C(*(void *)v24, v26);
    *(void *)uint64_t v23 = v25;
    *(unsigned char *)(v23 + 8) = v26;
    uint64_t v27 = a3[8];
    uint64_t v28 = (void *)(a1 + v27);
    uint64_t v29 = (uint64_t *)((char *)a2 + v27);
    sub_10017DF08(&qword_100E63BC8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v30 = type metadata accessor for ContentSizeCategory();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v30 - 8) + 16))(v28, v29, v30);
    }
    else
    {
      *uint64_t v28 = *v29;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v31 = a3[9];
    uint64_t v32 = (void *)(a1 + v31);
    uint64_t v33 = (uint64_t *)((char *)a2 + v31);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v34 = type metadata accessor for UserInterfaceSizeClass();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v33, 1, v34))
      {
        uint64_t v35 = sub_10017DF08(&qword_100E65ED8);
        memcpy(v32, v33, *(void *)(*(void *)(v35 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v34 - 8) + 16))(v32, v33, v34);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v32, 0, 1, v34);
      }
    }
    else
    {
      void *v32 = *v33;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v36 = a3[10];
    uint64_t v37 = a1 + v36;
    uint64_t v38 = (uint64_t *)((char *)a2 + v36);
    uint64_t v39 = *v38;
    uint64_t v40 = v38[1];
    char v41 = *((unsigned char *)v38 + 16);
    sub_100195B88();
    *(void *)uint64_t v37 = v39;
    *(void *)(v37 + 8) = v40;
    *(unsigned char *)(v37 + 16) = v41;
  }
  return a1;
}

char *sub_1009BACD0(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_10017DF08(&qword_100E63BD0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    a1[16] = a2[16];
    a1[17] = a2[17];
    a1[18] = a2[18];
    uint64_t v7 = *(int *)(type metadata accessor for DisplayMetrics() + 36);
    uint64_t v8 = &a1[v7];
    uint64_t v9 = &a2[v7];
    uint64_t v10 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v11 = a3[5];
  uint64_t v12 = &a1[v11];
  long long v13 = &a2[v11];
  uint64_t v14 = sub_10017DF08((uint64_t *)&unk_100EAA560);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v15 = type metadata accessor for UserInterfaceSizeClass();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v13, 1, v15))
    {
      uint64_t v16 = sub_10017DF08(&qword_100E65ED8);
      memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(v12, v13, v15);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v12, 0, 1, v15);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v12, v13, *(void *)(*(void *)(v14 - 8) + 64));
  }
  uint64_t v17 = a3[6];
  uint64_t v18 = a3[7];
  uint64_t v19 = &a1[v17];
  uint64_t v20 = &a2[v17];
  *(void *)uint64_t v19 = *(void *)v20;
  v19[8] = v20[8];
  char v21 = &a1[v18];
  uint64_t v22 = &a2[v18];
  *(void *)char v21 = *(void *)v22;
  v21[8] = v22[8];
  uint64_t v23 = a3[8];
  uint64_t v24 = &a1[v23];
  uint64_t v25 = &a2[v23];
  uint64_t v26 = sub_10017DF08(&qword_100E63BC8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v27 = type metadata accessor for ContentSizeCategory();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 32))(v24, v25, v27);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v24, v25, *(void *)(*(void *)(v26 - 8) + 64));
  }
  uint64_t v28 = a3[9];
  uint64_t v29 = &a1[v28];
  uint64_t v30 = &a2[v28];
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v31 = type metadata accessor for UserInterfaceSizeClass();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v30, 1, v31))
    {
      uint64_t v32 = sub_10017DF08(&qword_100E65ED8);
      memcpy(v29, v30, *(void *)(*(void *)(v32 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 32))(v29, v30, v31);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v29, 0, 1, v31);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v29, v30, *(void *)(*(void *)(v14 - 8) + 64));
  }
  uint64_t v33 = a3[10];
  uint64_t v34 = &a1[v33];
  uint64_t v35 = &a2[v33];
  *(_OWORD *)uint64_t v34 = *(_OWORD *)v35;
  v34[16] = v35[16];
  return a1;
}

char *sub_1009BB0B8(char *a1, char *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_100178110((uint64_t)a1, &qword_100E63BD0);
    uint64_t v6 = sub_10017DF08(&qword_100E63BD0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
      a1[16] = a2[16];
      a1[17] = a2[17];
      a1[18] = a2[18];
      uint64_t v7 = *(int *)(type metadata accessor for DisplayMetrics() + 36);
      uint64_t v8 = &a1[v7];
      uint64_t v9 = &a2[v7];
      uint64_t v10 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
    uint64_t v11 = a3[5];
    uint64_t v12 = &a1[v11];
    long long v13 = &a2[v11];
    sub_100178110((uint64_t)&a1[v11], (uint64_t *)&unk_100EAA560);
    uint64_t v14 = sub_10017DF08((uint64_t *)&unk_100EAA560);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v15 = type metadata accessor for UserInterfaceSizeClass();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v13, 1, v15))
      {
        uint64_t v16 = sub_10017DF08(&qword_100E65ED8);
        memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(v12, v13, v15);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v12, 0, 1, v15);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v12, v13, *(void *)(*(void *)(v14 - 8) + 64));
    }
  }
  uint64_t v17 = a3[6];
  uint64_t v18 = &a1[v17];
  uint64_t v19 = &a2[v17];
  uint64_t v20 = *(void *)v19;
  LOBYTE(v19) = v19[8];
  uint64_t v21 = *(void *)v18;
  char v22 = v18[8];
  *(void *)uint64_t v18 = v20;
  v18[8] = (char)v19;
  sub_10018F6D8(v21, v22);
  uint64_t v23 = a3[7];
  uint64_t v24 = &a1[v23];
  uint64_t v25 = &a2[v23];
  uint64_t v26 = *(void *)v25;
  LOBYTE(v25) = v25[8];
  uint64_t v27 = *(void *)v24;
  char v28 = v24[8];
  *(void *)uint64_t v24 = v26;
  v24[8] = (char)v25;
  sub_10018F6D8(v27, v28);
  if (a1 != a2)
  {
    uint64_t v29 = a3[8];
    uint64_t v30 = &a1[v29];
    uint64_t v31 = &a2[v29];
    sub_100178110((uint64_t)&a1[v29], &qword_100E63BC8);
    uint64_t v32 = sub_10017DF08(&qword_100E63BC8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v33 = type metadata accessor for ContentSizeCategory();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 32))(v30, v31, v33);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v30, v31, *(void *)(*(void *)(v32 - 8) + 64));
    }
    uint64_t v34 = a3[9];
    uint64_t v35 = &a1[v34];
    uint64_t v36 = &a2[v34];
    sub_100178110((uint64_t)&a1[v34], (uint64_t *)&unk_100EAA560);
    uint64_t v37 = sub_10017DF08((uint64_t *)&unk_100EAA560);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v38 = type metadata accessor for UserInterfaceSizeClass();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v36, 1, v38))
      {
        uint64_t v39 = sub_10017DF08(&qword_100E65ED8);
        memcpy(v35, v36, *(void *)(*(void *)(v39 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 32))(v35, v36, v38);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v35, 0, 1, v38);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v35, v36, *(void *)(*(void *)(v37 - 8) + 64));
    }
  }
  uint64_t v40 = a3[10];
  char v41 = &a1[v40];
  uint64_t v42 = &a2[v40];
  char v43 = v42[16];
  *(_OWORD *)char v41 = *(_OWORD *)v42;
  v41[16] = v43;
  sub_10018F6E4();
  return a1;
}

uint64_t sub_1009BB524(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1009BB538);
}

uint64_t sub_1009BB538(uint64_t a1, uint64_t a2, int *a3)
{
  sub_10017DF08(&qword_100E63BF8);
  sub_100162F30();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1;
  }
  else
  {
    sub_10017DF08((uint64_t *)&unk_100EAA540);
    sub_100162F30();
    if (*(_DWORD *)(v11 + 84) == a2)
    {
      uint64_t v8 = v10;
      uint64_t v12 = a3[5];
    }
    else
    {
      if (a2 == 254)
      {
        unsigned int v13 = *(unsigned __int8 *)(a1 + a3[6] + 8);
        if (v13 > 1) {
          return (v13 ^ 0xFF) + 1;
        }
        else {
          return 0;
        }
      }
      uint64_t v8 = sub_10017DF08((uint64_t *)&unk_100EAA530);
      uint64_t v12 = a3[8];
    }
    uint64_t v9 = a1 + v12;
  }

  return _s7Weather24LocationCompositionStateOwet_0(v9, a2, v8);
}

uint64_t sub_1009BB614(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1009BB628);
}

void sub_1009BB628(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  sub_10017DF08(&qword_100E63BF8);
  sub_100162F30();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = a1;
  }
  else
  {
    sub_10017DF08((uint64_t *)&unk_100EAA540);
    sub_100162F30();
    if (*(_DWORD *)(v13 + 84) == a3)
    {
      uint64_t v10 = v12;
      uint64_t v14 = a4[5];
    }
    else
    {
      if (a3 == 254)
      {
        *(unsigned char *)(a1 + a4[6] + 8) = -(char)a2;
        return;
      }
      uint64_t v10 = sub_10017DF08((uint64_t *)&unk_100EAA530);
      uint64_t v14 = a4[8];
    }
    uint64_t v11 = a1 + v14;
  }

  _s7Weather24LocationCompositionStateOwst_0(v11, a2, a2, v10);
}

uint64_t sub_1009BB704()
{
  return swift_getWitnessTable();
}

uint64_t sub_1009BB988()
{
  return sub_1000C3E38(&qword_100EA67B8, (void (*)(uint64_t))type metadata accessor for LocationViewGeometry);
}

unint64_t sub_1009BB9D0(uint64_t a1)
{
  unint64_t result = sub_1000E56DC();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1009BB9F8()
{
  uint64_t v1 = (int *)type metadata accessor for GridGeometryComputerModifier(0);
  uint64_t v2 = v0
     + ((*(unsigned __int8 *)(*((void *)v1 - 1) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*((void *)v1 - 1) + 80));
  sub_10017DF08(&qword_100E63BD0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    type metadata accessor for DisplayMetrics();
    type metadata accessor for DynamicTypeSize();
    sub_100162E4C();
    sub_100162F0C();
    v3();
  }
  else
  {
    swift_release();
  }
  uint64_t v4 = v2 + v1[5];
  sub_10017DF08((uint64_t *)&unk_100EAA560);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = type metadata accessor for UserInterfaceSizeClass();
    if (!_s7Weather24LocationCompositionStateOwet_0(v4, 1, v5))
    {
      sub_100162880();
      sub_100162F0C();
      v6();
    }
  }
  else
  {
    swift_release();
  }
  sub_10018F6D8(*(void *)(v2 + v1[6]), *(unsigned char *)(v2 + v1[6] + 8));
  sub_10018F6D8(*(void *)(v2 + v1[7]), *(unsigned char *)(v2 + v1[7] + 8));
  sub_10017DF08(&qword_100E63BC8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    type metadata accessor for ContentSizeCategory();
    sub_100162E4C();
    sub_100162F0C();
    v7();
  }
  else
  {
    swift_release();
  }
  uint64_t v8 = v2 + v1[9];
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v9 = type metadata accessor for UserInterfaceSizeClass();
    if (!_s7Weather24LocationCompositionStateOwet_0(v8, 1, v9))
    {
      sub_100162880();
      sub_100162F0C();
      v10();
    }
  }
  else
  {
    swift_release();
  }
  sub_10018F6E4();

  return swift_deallocObject();
}

id sub_1009BBCB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5)
{
  uint64_t v88 = a4;
  uint64_t v82 = a3;
  uint64_t v92 = a1;
  ObjectType = (objc_class *)swift_getObjectType();
  type metadata accessor for WeatherDataModel();
  sub_100179C0C();
  uint64_t v80 = v8;
  uint64_t v81 = v7;
  __chkstk_darwin(v7);
  sub_100162EF8();
  uint64_t v79 = v9;
  sub_1001626D4();
  __chkstk_darwin(v10);
  sub_100128F8C();
  uint64_t v78 = v11;
  sub_100129064();
  uint64_t v93 = type metadata accessor for LocationModel();
  sub_100179C0C();
  uint64_t v91 = v12;
  __chkstk_darwin(v13);
  sub_1001626E0();
  uint64_t v90 = v15 - v14;
  sub_100129064();
  uint64_t v16 = type metadata accessor for WeatherEditorView();
  sub_100162E4C();
  __chkstk_darwin(v17);
  sub_1001626E0();
  uint64_t v20 = (uint64_t *)(v19 - v18);
  type metadata accessor for LocationWeatherDataState(0);
  sub_100162E4C();
  __chkstk_darwin(v21);
  sub_100162EF8();
  uint64_t v85 = v22;
  sub_1001626D4();
  __chkstk_darwin(v23);
  uint64_t v25 = (char *)&v69 - v24;
  uint64_t v26 = type metadata accessor for NewsDataModel();
  __chkstk_darwin(v26 - 8);
  sub_100162EF8();
  uint64_t v84 = v27;
  sub_1001626D4();
  __chkstk_darwin(v28);
  sub_100128F8C();
  uint64_t v86 = v29;
  sub_100129064();
  uint64_t v30 = type metadata accessor for PreprocessedWeatherData();
  __chkstk_darwin(v30 - 8);
  sub_100162EF8();
  uint64_t v83 = v31;
  sub_1001626D4();
  __chkstk_darwin(v32);
  sub_100128F8C();
  uint64_t v34 = v33;
  uint64_t v35 = sub_100129064();
  uint64_t v36 = type metadata accessor for WeatherData(v35);
  sub_100162E4C();
  __chkstk_darwin(v37);
  uint64_t v39 = (char *)&v69 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v40);
  sub_100128F8C();
  uint64_t v42 = v41;
  uint64_t v43 = a2;
  sub_1009CB1E4(a2, (uint64_t)v25, (void (*)(void))type metadata accessor for LocationWeatherDataState);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v44 = sub_10017DF08(&qword_100E63748);
    uint64_t v45 = (uint64_t)&v25[*(int *)(v44 + 48)];
    uint64_t v46 = *(int *)(v44 + 64);
    uint64_t v72 = v36;
    uint64_t v47 = (int *)v16;
    uint64_t v48 = (uint64_t)&v25[v46];
    uint64_t v77 = v42;
    sub_1001EFFFC((uint64_t)v25, v42, (void (*)(void))type metadata accessor for WeatherData);
    uint64_t v73 = type metadata accessor for PreprocessedWeatherData;
    uint64_t v75 = v34;
    sub_1001EFFFC(v45, v34, (void (*)(void))type metadata accessor for PreprocessedWeatherData);
    uint64_t v74 = type metadata accessor for NewsDataModel;
    uint64_t v49 = v86;
    sub_1001EFFFC(v48, v86, (void (*)(void))type metadata accessor for NewsDataModel);
    uint64_t v76 = v43;
    uint64_t v71 = *(void (**)(uint64_t, uint64_t, uint64_t))(v91 + 16);
    uint64_t v50 = v93;
    v71(v90, v92, v93);
    sub_1009CB1E4(v43, v85, (void (*)(void))type metadata accessor for LocationWeatherDataState);
    sub_1009CB1E4(v42, (uint64_t)v39, (void (*)(void))type metadata accessor for WeatherData);
    sub_1009CB1E4(v49, v84, (void (*)(void))type metadata accessor for NewsDataModel);
    sub_1009CB1E4(v34, v83, (void (*)(void))type metadata accessor for PreprocessedWeatherData);
    uint64_t *v20 = swift_getKeyPath();
    sub_10017DF08(&qword_100E65310);
    swift_storeEnumTagMultiPayload();
    v71((uint64_t)v20 + v47[5], v90, v50);
    *(double *)((char *)v20 + v47[6]) = a5;
    uint64_t v51 = v85;
    sub_1009CB1E4(v85, (uint64_t)v20 + v47[7], (void (*)(void))type metadata accessor for LocationWeatherDataState);
    uint64_t v52 = (uint64_t)v20 + v47[8];
    uint64_t v70 = v39;
    sub_1009CB1E4((uint64_t)v39, v52, (void (*)(void))type metadata accessor for WeatherData);
    uint64_t v53 = v80;
    uint64_t v54 = v81;
    uint64_t v55 = *(void (**)(uint64_t, char *, uint64_t))(v80 + 16);
    Swift::Int v56 = v78;
    v55((uint64_t)v78, &v39[*(int *)(v72 + 24)], v81);
    v55(v79, v56, v54);
    uint64_t v57 = v87;
    uint64_t v58 = v88;
    swift_retain();
    State.init(wrappedValue:)();
    (*(void (**)(char *, uint64_t))(v53 + 8))(v56, v54);
    int v87 = type metadata accessor for WeatherData;
    sub_10015695C((uint64_t)v70, (void (*)(void))type metadata accessor for WeatherData);
    sub_10015695C(v51, (void (*)(void))type metadata accessor for LocationWeatherDataState);
    uint64_t v59 = *(void (**)(uint64_t, uint64_t))(v91 + 8);
    uint64_t v60 = v93;
    v59(v90, v93);
    sub_1001EFFFC(v83, (uint64_t)v20 + v47[9], (void (*)(void))v73);
    sub_1001EFFFC(v84, (uint64_t)v20 + v47[10], (void (*)(void))v74);
    uint64_t v61 = (uint64_t *)((char *)v20 + v47[11]);
    void *v61 = v82;
    v61[1] = v58;
    id v62 = objc_allocWithZone((Class)sub_10017DF08(&qword_100EA69B0));
    *(void *)((char *)v57 + OBJC_IVAR____TtC7Weather31WeatherDataEditorViewController_hostingController) = UIHostingController.init(rootView:)();
    uint64_t v63 = v92;
    uint64_t v64 = LocationModel.name.getter();
    uint64_t v65 = (uint64_t *)((char *)v57 + OBJC_IVAR____TtC7Weather31WeatherDataEditorViewController_locationName);
    *uint64_t v65 = v64;
    v65[1] = v66;

    v94.receiver = v57;
    v94.super_class = ObjectType;
    id v67 = [super initWithNibName:0 bundle:0];
    swift_release();
    sub_10015695C(v76, (void (*)(void))type metadata accessor for LocationWeatherDataState);
    v59(v63, v60);
    sub_10015695C(v86, (void (*)(void))type metadata accessor for NewsDataModel);
    sub_10015695C(v75, (void (*)(void))type metadata accessor for PreprocessedWeatherData);
    sub_10015695C(v77, (void (*)(void))v87);
  }
  else
  {
    swift_release();
    sub_10015695C(a2, (void (*)(void))type metadata accessor for LocationWeatherDataState);
    (*(void (**)(uint64_t, uint64_t))(v91 + 8))(v92, v93);
    sub_10015695C((uint64_t)v25, (void (*)(void))type metadata accessor for LocationWeatherDataState);
    swift_deallocPartialClassInstance();
    return 0;
  }
  return v67;
}

void sub_1009BC404()
{
}

id sub_1009BC4B8()
{
  v17.receiver = v0;
  v17.super_class = (Class)swift_getObjectType();
  [super viewDidLoad];
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC7Weather31WeatherDataEditorViewController_hostingController];
  [v0 addChildViewController:v1];
  id result = [v0 view];
  if (!result)
  {
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v3 = result;
  id result = [v1 view];
  if (!result)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  uint64_t v4 = result;
  [v3 addSubview:result];

  id result = [v1 view];
  if (!result)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v5 = result;
  id result = [v0 view];
  if (result)
  {
    uint64_t v6 = result;
    [result bounds];
    double v8 = v7;
    double v10 = v9;
    double v12 = v11;
    double v14 = v13;

    [v5 setFrame:v8, v10, v12, v14];
    [v1 didMoveToParentViewController:v0];
    uint64_t v15 = *(void *)&v0[OBJC_IVAR____TtC7Weather31WeatherDataEditorViewController_locationName];
    uint64_t v16 = *(void *)&v0[OBJC_IVAR____TtC7Weather31WeatherDataEditorViewController_locationName + 8];
    swift_bridgeObjectRetain();
    sub_1009CB18C(v15, v16, v0);
    return (id)swift_bridgeObjectRelease();
  }
LABEL_9:
  __break(1u);
  return result;
}

void sub_1009BC6A8()
{
}

uint64_t type metadata accessor for WeatherDataEditorViewController()
{
  return self;
}

void *sub_1009BC774(void *a1, void *a2, int *a3)
{
  uint64_t v3 = a2;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    double v13 = (void *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    goto LABEL_105;
  }
  uint64_t v6 = a3;
  sub_10017DF08(&qword_100E65310);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  *a1 = *v3;
  if (EnumCaseMultiPayload == 1)
  {
    a1[1] = v3[1];
    swift_retain();
    swift_retain();
    uint64_t v8 = *(int *)(sub_10017DF08(&qword_100E669A0) + 32);
    double v9 = (char *)a1 + v8;
    double v10 = (char *)v3 + v8;
    uint64_t v11 = type metadata accessor for PresentationMode();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
  }
  else
  {
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v14 = v6[5];
  uint64_t v15 = (char *)a1 + v14;
  uint64_t v16 = (char *)v3 + v14;
  uint64_t v17 = type metadata accessor for LocationModel();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
  uint64_t v18 = v6[7];
  *(void *)((char *)a1 + v6[6]) = *(void *)((char *)v3 + v6[6]);
  uint64_t v19 = (void *)((char *)a1 + v18);
  uint64_t v20 = (void *)((char *)v3 + v18);
  uint64_t v21 = type metadata accessor for LocationWeatherDataState(0);
  int v22 = swift_getEnumCaseMultiPayload();
  uint64_t v427 = v3;
  uint64_t v428 = a1;
  uint64_t v426 = v6;
  if (v22 == 2)
  {
    uint64_t v23 = v20[1];
    *uint64_t v19 = *v20;
    v19[1] = v23;
    uint64_t v24 = v20 + 2;
    unint64_t v25 = v20[3];
    swift_bridgeObjectRetain();
    if (v25 >= 0xE)
    {
      void v19[2] = *v24;
      v19[3] = v25;
      swift_bridgeObjectRetain();
    }
    else
    {
      *((_OWORD *)v19 + 1) = *(_OWORD *)v24;
    }
    goto LABEL_61;
  }
  if (v22 == 1)
  {
    uint64_t v26 = v20[1];
    *uint64_t v19 = *v20;
    v19[1] = v26;
    uint64_t v27 = (int *)type metadata accessor for WeatherData(0);
    uint64_t v28 = v27[5];
    uint64_t v29 = (char *)v19 + v28;
    uint64_t v30 = (char *)v20 + v28;
    uint64_t v31 = type metadata accessor for Locale();
    swift_bridgeObjectRetain();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v30, 1, v31))
    {
      uint64_t v32 = sub_10017DF08(&qword_100E63730);
      memcpy(v29, v30, *(void *)(*(void *)(v32 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16))(v29, v30, v31);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v29, 0, 1, v31);
    }
    uint64_t v34 = v27[6];
    uint64_t v35 = (char *)v19 + v34;
    uint64_t v36 = (char *)v20 + v34;
    uint64_t v37 = type metadata accessor for WeatherDataModel();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 16))(v35, v36, v37);
    uint64_t v38 = v27[7];
    uint64_t v39 = (char *)v19 + v38;
    uint64_t v40 = (char *)v20 + v38;
    uint64_t v41 = sub_10017DF08(&qword_100E63738);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v40, 1, v41))
    {
      uint64_t v42 = type metadata accessor for WeatherData.CachingState(0);
      memcpy(v39, v40, *(void *)(*(void *)(v42 - 8) + 64));
    }
    else
    {
      uint64_t v43 = type metadata accessor for Date();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 16))(v39, v40, v43);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v39, 0, 1, v41);
    }
    uint64_t v44 = v27[8];
    uint64_t v45 = (void *)((char *)v19 + v44);
    uint64_t v46 = (void *)((char *)v20 + v44);
    uint64_t v47 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
    int v48 = swift_getEnumCaseMultiPayload();
    if (v48 == 1)
    {
      uint64_t v50 = type metadata accessor for WeatherStatisticsModel();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v50 - 8) + 16))(v45, v46, v50);
    }
    else
    {
      if (v48)
      {
        memcpy(v45, v46, *(void *)(*(void *)(v47 - 8) + 64));
        goto LABEL_30;
      }
      uint64_t v49 = v46[1];
      void *v45 = *v46;
      v45[1] = v49;
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
LABEL_30:
    uint64_t v51 = v27[9];
    uint64_t v52 = (char *)v19 + v51;
    uint64_t v53 = (char *)v20 + v51;
    uint64_t v54 = type metadata accessor for WeatherDataOverrides();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v53, 1, v54))
    {
      uint64_t v55 = sub_10017DF08(&qword_100E63740);
      memcpy(v52, v53, *(void *)(*(void *)(v55 - 8) + 64));
    }
    else
    {
      uint64_t v56 = type metadata accessor for Date();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v53, 1, v56))
      {
        uint64_t v57 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
        memcpy(v52, v53, *(void *)(*(void *)(v57 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v56 - 8) + 16))(v52, v53, v56);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v52, 0, 1, v56);
      }
      uint64_t v58 = *(int *)(v54 + 20);
      uint64_t v59 = &v52[v58];
      uint64_t v60 = &v53[v58];
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v60, 1, v56))
      {
        uint64_t v61 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
        memcpy(v59, v60, *(void *)(*(void *)(v61 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v56 - 8) + 16))(v59, v60, v56);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v59, 0, 1, v56);
      }
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v52, 0, 1, v54);
    }
    uint64_t v418 = sub_10017DF08(&qword_100E63748);
    uint64_t v420 = v20;
    uint64_t v62 = *(int *)(v418 + 48);
    uint64_t v424 = v19;
    uint64_t v63 = (char *)v19 + v62;
    uint64_t v64 = (char *)v20 + v62;
    uint64_t v65 = type metadata accessor for UUID();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v65 - 8) + 16))(v63, v64, v65);
    uint64_t v66 = type metadata accessor for PreprocessedWeatherData();
    *(void *)&v63[*(int *)(v66 + 20)] = *(void *)&v64[*(int *)(v66 + 20)];
    uint64_t v429 = v63;
    uint64_t v431 = (int *)v66;
    uint64_t v67 = *(int *)(v66 + 24);
    uint64_t v68 = &v63[v67];
    uint64_t v433 = v64;
    uint64_t v69 = &v64[v67];
    uint64_t v70 = *(void *)&v64[v67 + 8];
    *(void *)uint64_t v68 = *(void *)&v64[v67];
    *((void *)v68 + 1) = v70;
    uint64_t v71 = *(void *)&v64[v67 + 24];
    *((void *)v68 + 2) = *(void *)&v64[v67 + 16];
    *((void *)v68 + 3) = v71;
    uint64_t v72 = *(void *)&v64[v67 + 40];
    *((void *)v68 + 4) = *(void *)&v64[v67 + 32];
    *((void *)v68 + 5) = v72;
    uint64_t v73 = type metadata accessor for FeelsLikeComponentPreprocessedDataModel();
    uint64_t v74 = *(int *)(v73 + 28);
    uint64_t v75 = &v68[v74];
    uint64_t v76 = &v69[v74];
    uint64_t v77 = type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference(0);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v76, 1, v77))
    {
      uint64_t v78 = sub_10017DF08(&qword_100E63750);
      memcpy(v75, v76, *(void *)(*(void *)(v78 - 8) + 64));
    }
    else
    {
      uint64_t v79 = *((void *)v76 + 1);
      *(void *)uint64_t v75 = *(void *)v76;
      *((void *)v75 + 1) = v79;
      uint64_t v80 = *(int *)(v77 + 20);
      uint64_t v81 = &v75[v80];
      uint64_t v82 = &v76[v80];
      uint64_t v83 = type metadata accessor for TemperatureScaleConfiguration();
      uint64_t v416 = *(void (**)(char *, char *, uint64_t))(*(void *)(v83 - 8) + 16);
      swift_bridgeObjectRetain();
      v416(v81, v82, v83);
      uint64_t v84 = (int *)type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
      *(void *)&v81[v84[5]] = *(void *)&v82[v84[5]];
      *(void *)&v81[v84[6]] = *(void *)&v82[v84[6]];
      *(void *)&v81[v84[7]] = *(void *)&v82[v84[7]];
      uint64_t v85 = v84[8];
      uint64_t v86 = &v81[v85];
      int v87 = &v82[v85];
      uint64_t v89 = *(void *)v87;
      uint64_t v88 = *((void *)v87 + 1);
      *(void *)uint64_t v86 = v89;
      *((void *)v86 + 1) = v88;
      v81[v84[9]] = v82[v84[9]];
      swift_bridgeObjectRetain();
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v75, 0, 1, v77);
    }
    uint64_t v90 = *(int *)(v73 + 32);
    uint64_t v91 = &v68[v90];
    uint64_t v92 = &v69[v90];
    uint64_t v93 = *((void *)v92 + 1);
    *(void *)uint64_t v91 = *(void *)v92;
    *((void *)v91 + 1) = v93;
    uint64_t v94 = v431[7];
    uint64_t v95 = &v429[v94];
    uint64_t v96 = &v433[v94];
    *(void *)&v429[v94] = *(void *)&v433[v94];
    uint64_t v97 = *(int *)(type metadata accessor for HourlyForecastComponentPreprocessedDataModel() + 20);
    uint64_t v98 = &v95[v97];
    uint64_t v99 = &v96[v97];
    uint64_t v100 = type metadata accessor for WeatherDescription();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v99, 1, v100))
    {
      uint64_t v101 = sub_10017DF08(&qword_100E63758);
      memcpy(v98, v99, *(void *)(*(void *)(v101 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v100 - 8) + 16))(v98, v99, v100);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v98, 0, 1, v100);
    }
    uint64_t v102 = v431[8];
    uint64_t v103 = &v429[v102];
    uint64_t v104 = &v433[v102];
    uint64_t v105 = *(void *)&v433[v102 + 8];
    *(void *)uint64_t v103 = *(void *)&v433[v102];
    *((void *)v103 + 1) = v105;
    uint64_t v106 = *(void *)&v433[v102 + 24];
    *((void *)v103 + 2) = *(void *)&v433[v102 + 16];
    *((void *)v103 + 3) = v106;
    uint64_t v107 = *(void *)&v433[v102 + 40];
    *((void *)v103 + 4) = *(void *)&v433[v102 + 32];
    *((void *)v103 + 5) = v107;
    uint64_t v108 = *(void *)&v433[v102 + 56];
    *((void *)v103 + 6) = *(void *)&v433[v102 + 48];
    *((void *)v103 + 7) = v108;
    uint64_t v109 = *(int *)(type metadata accessor for ListPreprocessedDataModel() + 32);
    uint64_t v110 = &v103[v109];
    uint64_t v111 = &v104[v109];
    uint64_t v112 = type metadata accessor for Date();
    uint64_t v113 = *(void (**)(char *, char *, uint64_t))(*(void *)(v112 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v412 = v113;
    uint64_t v414 = v112;
    v113(v110, v111, v112);
    uint64_t v114 = type metadata accessor for WeatherConditionBackgroundTimeData();
    uint64_t v115 = *(int *)(v114 + 20);
    uint64_t v116 = &v110[v115];
    uint64_t v117 = &v111[v115];
    uint64_t v118 = type metadata accessor for Elevation();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v117, 1, v118))
    {
      uint64_t v119 = sub_10017DF08(&qword_100E63760);
      memcpy(v116, v117, *(void *)(*(void *)(v119 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v118 - 8) + 16))(v116, v117, v118);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v116, 0, 1, v118);
    }
    uint64_t v120 = *(int *)(v114 + 24);
    uint64_t v121 = &v110[v120];
    uint64_t v122 = &v111[v120];
    uint64_t v123 = type metadata accessor for BackgroundMoonData();
    uint64_t v417 = v114;
    uint64_t v406 = v123;
    uint64_t v408 = v118;
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v122, 1, v123))
    {
      uint64_t v124 = sub_10017DF08(&qword_100E63768);
      memcpy(v121, v122, *(void *)(*(void *)(v124 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v123 - 8) + 16))(v121, v122, v123);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v121, 0, 1, v123);
    }
    uint64_t v125 = v431[9];
    uint64_t v126 = &v429[v125];
    uint64_t v127 = &v433[v125];
    uint64_t v128 = *((void *)v127 + 1);
    *(void *)uint64_t v126 = *(void *)v127;
    *((void *)v126 + 1) = v128;
    uint64_t v129 = *((void *)v127 + 3);
    *((void *)v126 + 2) = *((void *)v127 + 2);
    *((void *)v126 + 3) = v129;
    uint64_t v130 = *((void *)v127 + 5);
    *((void *)v126 + 4) = *((void *)v127 + 4);
    *((void *)v126 + 5) = v130;
    uint64_t v131 = *((void *)v127 + 7);
    *((void *)v126 + 6) = *((void *)v127 + 6);
    *((void *)v126 + 7) = v131;
    uint64_t v132 = *((void *)v127 + 9);
    *((void *)v126 + 8) = *((void *)v127 + 8);
    *((void *)v126 + 9) = v132;
    uint64_t v133 = *((void *)v127 + 11);
    *((void *)v126 + 10) = *((void *)v127 + 10);
    *((void *)v126 + 11) = v133;
    uint64_t v134 = *((void *)v127 + 13);
    *((void *)v126 + 12) = *((void *)v127 + 12);
    *((void *)v126 + 13) = v134;
    uint64_t v135 = v431[10];
    uint64_t v136 = &v429[v135];
    uint64_t v137 = &v433[v135];
    uint64_t v404 = *(void (**)(char *, char *, uint64_t))(*(void *)(v100 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v404(v136, v137, v100);
    uint64_t v138 = *(int *)(type metadata accessor for UVIndexComponentPreprocessedDataModel() + 20);
    uint64_t v139 = &v136[v138];
    uint64_t v140 = &v137[v138];
    uint64_t v141 = *((void *)v140 + 1);
    *(void *)uint64_t v139 = *(void *)v140;
    *((void *)v139 + 1) = v141;
    uint64_t v142 = v431[11];
    uint64_t v143 = &v429[v142];
    uint64_t v144 = &v433[v142];
    uint64_t v145 = *((void *)v144 + 1);
    *(void *)uint64_t v143 = *(void *)v144;
    *((void *)v143 + 1) = v145;
    uint64_t v146 = *((void *)v144 + 3);
    *((void *)v143 + 2) = *((void *)v144 + 2);
    *((void *)v143 + 3) = v146;
    uint64_t v147 = *((void *)v144 + 5);
    *((void *)v143 + 4) = *((void *)v144 + 4);
    *((void *)v143 + 5) = v147;
    uint64_t v148 = v431[12];
    uint64_t v149 = &v429[v148];
    uint64_t v150 = &v433[v148];
    uint64_t v151 = type metadata accessor for PressureTrend();
    uint64_t v152 = *(void (**)(char *, char *, uint64_t))(*(void *)(v151 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v152(v149, v150, v151);
    uint64_t v153 = (int *)type metadata accessor for PressureComponentPreprocessedDataModel();
    uint64_t v154 = v153[5];
    uint64_t v155 = &v149[v154];
    uint64_t v156 = &v150[v154];
    uint64_t v157 = *((void *)v156 + 1);
    *(void *)uint64_t v155 = *(void *)v156;
    *((void *)v155 + 1) = v157;
    uint64_t v158 = v153[6];
    int v159 = &v149[v158];
    uint64_t v160 = &v150[v158];
    uint64_t v405 = *((void *)v160 + 1);
    *(void *)int v159 = *(void *)v160;
    *((void *)v159 + 1) = v405;
    uint64_t v161 = v153[7];
    uint64_t v162 = &v149[v161];
    uint64_t v163 = &v150[v161];
    uint64_t v403 = *((void *)v163 + 1);
    *(void *)uint64_t v162 = *(void *)v163;
    *((void *)v162 + 1) = v403;
    *(void *)&v149[v153[8]] = *(void *)&v150[v153[8]];
    uint64_t v164 = v153[9];
    uint64_t v165 = &v149[v164];
    uint64_t v166 = &v150[v164];
    uint64_t v402 = *((void *)v166 + 1);
    *(void *)uint64_t v165 = *(void *)v166;
    *((void *)v165 + 1) = v402;
    uint64_t v167 = v431[13];
    uint64_t v168 = &v429[v167];
    uint64_t v169 = &v433[v167];
    uint64_t v170 = *((void *)v169 + 1);
    *(void *)uint64_t v168 = *(void *)v169;
    *((void *)v168 + 1) = v170;
    uint64_t v171 = *((void *)v169 + 3);
    *((void *)v168 + 2) = *((void *)v169 + 2);
    *((void *)v168 + 3) = v171;
    uint64_t v172 = *((void *)v169 + 5);
    *((void *)v168 + 4) = *((void *)v169 + 4);
    *((void *)v168 + 5) = v172;
    uint64_t v173 = *((void *)v169 + 7);
    *((void *)v168 + 6) = *((void *)v169 + 6);
    *((void *)v168 + 7) = v173;
    uint64_t v174 = *((void *)v169 + 9);
    *((void *)v168 + 8) = *((void *)v169 + 8);
    *((void *)v168 + 9) = v174;
    uint64_t v175 = *((void *)v169 + 11);
    *((void *)v168 + 10) = *((void *)v169 + 10);
    *((void *)v168 + 11) = v175;
    uint64_t v176 = *((void *)v169 + 13);
    *((void *)v168 + 12) = *((void *)v169 + 12);
    *((void *)v168 + 13) = v176;
    uint64_t v177 = *((void *)v169 + 15);
    *((void *)v168 + 14) = *((void *)v169 + 14);
    *((void *)v168 + 15) = v177;
    uint64_t v178 = *((void *)v169 + 17);
    *((void *)v168 + 16) = *((void *)v169 + 16);
    *((void *)v168 + 17) = v178;
    uint64_t v179 = *((void *)v169 + 19);
    *((void *)v168 + 18) = *((void *)v169 + 18);
    *((void *)v168 + 19) = v179;
    uint64_t v180 = *((void *)v169 + 21);
    *((void *)v168 + 20) = *((void *)v169 + 20);
    *((void *)v168 + 21) = v180;
    uint64_t v181 = *((void *)v169 + 23);
    *((void *)v168 + 22) = *((void *)v169 + 22);
    *((void *)v168 + 23) = v181;
    uint64_t v182 = *((void *)v169 + 25);
    *((void *)v168 + 24) = *((void *)v169 + 24);
    *((void *)v168 + 25) = v182;
    *((_OWORD *)v168 + 13) = *((_OWORD *)v169 + 13);
    *((void *)v168 + 28) = *((void *)v169 + 28);
    uint64_t v183 = v431[14];
    uint64_t v184 = &v429[v183];
    uint64_t v400 = &v433[v183];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v412(v184, v400, v414);
    uint64_t v185 = *(int *)(v417 + 20);
    uint64_t v186 = &v184[v185];
    uint64_t v187 = &v400[v185];
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v400[v185], 1, v408))
    {
      uint64_t v188 = sub_10017DF08(&qword_100E63760);
      memcpy(v186, v187, *(void *)(*(void *)(v188 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v408 - 8) + 16))(v186, v187, v408);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v186, 0, 1, v408);
    }
    uint64_t v189 = *(int *)(v417 + 24);
    uint64_t v190 = &v184[v189];
    uint64_t v191 = &v400[v189];
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v400[v189], 1, v406))
    {
      uint64_t v192 = sub_10017DF08(&qword_100E63768);
      memcpy(v190, v191, *(void *)(*(void *)(v192 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v406 - 8) + 16))(v190, v191, v406);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v190, 0, 1, v406);
    }
    uint64_t v193 = v431[15];
    uint64_t v194 = &v429[v193];
    uint64_t v195 = &v433[v193];
    uint64_t v196 = *((void *)v195 + 1);
    *(void *)uint64_t v194 = *(void *)v195;
    *((void *)v194 + 1) = v196;
    uint64_t v197 = *((void *)v195 + 3);
    *((void *)v194 + 2) = *((void *)v195 + 2);
    *((void *)v194 + 3) = v197;
    uint64_t v198 = *((void *)v195 + 5);
    *((void *)v194 + 4) = *((void *)v195 + 4);
    *((void *)v194 + 5) = v198;
    uint64_t v199 = *((void *)v195 + 7);
    *((void *)v194 + 6) = *((void *)v195 + 6);
    *((void *)v194 + 7) = v199;
    uint64_t v200 = *((void *)v195 + 9);
    *((void *)v194 + 8) = *((void *)v195 + 8);
    *((void *)v194 + 9) = v200;
    uint64_t v201 = *((void *)v195 + 11);
    *((void *)v194 + 10) = *((void *)v195 + 10);
    *((void *)v194 + 11) = v201;
    uint64_t v202 = *((void *)v195 + 13);
    *((void *)v194 + 12) = *((void *)v195 + 12);
    *((void *)v194 + 13) = v202;
    uint64_t v203 = *(int *)(v418 + 64);
    uint64_t v204 = (void *)((char *)v424 + v203);
    uint64_t v205 = (void *)((char *)v420 + v203);
    type metadata accessor for NewsDataModel();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *uint64_t v204 = *v205;
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v206 = type metadata accessor for News();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v206 - 8) + 16))(v204, v205, v206);
    }
    uint64_t v3 = v427;
    a1 = v428;
    uint64_t v6 = v426;
    swift_storeEnumTagMultiPayload();
    goto LABEL_61;
  }
  if (v22)
  {
    memcpy(v19, v20, *(void *)(*(void *)(v21 - 8) + 64));
    goto LABEL_62;
  }
  type metadata accessor for NewsDataModel();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *uint64_t v19 = *v20;
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v33 = type metadata accessor for News();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v33 - 8) + 16))(v19, v20, v33);
  }
  swift_storeEnumTagMultiPayload();
LABEL_61:
  swift_storeEnumTagMultiPayload();
LABEL_62:
  uint64_t v207 = v6[8];
  uint64_t v208 = (void *)((char *)a1 + v207);
  uint64_t v209 = (char *)v3 + v207;
  uint64_t v210 = *(void *)((char *)v3 + v207 + 8);
  *uint64_t v208 = *(void *)((char *)v3 + v207);
  v208[1] = v210;
  uint64_t v211 = (int *)type metadata accessor for WeatherData(0);
  uint64_t v212 = v211[5];
  uint64_t v213 = (char *)v208 + v212;
  uint64_t v214 = &v209[v212];
  uint64_t v215 = type metadata accessor for Locale();
  swift_bridgeObjectRetain();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v214, 1, v215))
  {
    uint64_t v216 = sub_10017DF08(&qword_100E63730);
    memcpy(v213, v214, *(void *)(*(void *)(v216 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v215 - 8) + 16))(v213, v214, v215);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v213, 0, 1, v215);
  }
  uint64_t v217 = v211[6];
  uint64_t v218 = (char *)v208 + v217;
  uint64_t v219 = &v209[v217];
  uint64_t v220 = type metadata accessor for WeatherDataModel();
  uint64_t v401 = *(void (**)(char *, char *, uint64_t))(*(void *)(v220 - 8) + 16);
  v401(v218, v219, v220);
  uint64_t v221 = v211[7];
  uint64_t v222 = (char *)v208 + v221;
  uint64_t v223 = &v209[v221];
  uint64_t v224 = sub_10017DF08(&qword_100E63738);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v223, 1, v224))
  {
    uint64_t v225 = type metadata accessor for WeatherData.CachingState(0);
    memcpy(v222, v223, *(void *)(*(void *)(v225 - 8) + 64));
  }
  else
  {
    uint64_t v226 = type metadata accessor for Date();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v226 - 8) + 16))(v222, v223, v226);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v222, 0, 1, v224);
  }
  uint64_t v227 = v211[8];
  unsigned __int8 v228 = (void *)((char *)v208 + v227);
  uint64_t v229 = &v209[v227];
  uint64_t v230 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
  int v231 = swift_getEnumCaseMultiPayload();
  if (v231 == 1)
  {
    uint64_t v233 = type metadata accessor for WeatherStatisticsModel();
    (*(void (**)(void *, char *, uint64_t))(*(void *)(v233 - 8) + 16))(v228, v229, v233);
  }
  else
  {
    if (v231)
    {
      memcpy(v228, v229, *(void *)(*(void *)(v230 - 8) + 64));
      goto LABEL_74;
    }
    uint64_t v232 = *((void *)v229 + 1);
    *unsigned __int8 v228 = *(void *)v229;
    v228[1] = v232;
    swift_bridgeObjectRetain();
  }
  swift_storeEnumTagMultiPayload();
LABEL_74:
  uint64_t v234 = v211[9];
  uint64_t v235 = (char *)v208 + v234;
  uint64_t v236 = &v209[v234];
  uint64_t v237 = type metadata accessor for WeatherDataOverrides();
  uint64_t v425 = v220;
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v236, 1, v237))
  {
    uint64_t v238 = sub_10017DF08(&qword_100E63740);
    memcpy(v235, v236, *(void *)(*(void *)(v238 - 8) + 64));
  }
  else
  {
    uint64_t v239 = type metadata accessor for Date();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v236, 1, v239))
    {
      uint64_t v240 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
      memcpy(v235, v236, *(void *)(*(void *)(v240 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v239 - 8) + 16))(v235, v236, v239);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v235, 0, 1, v239);
    }
    uint64_t v241 = *(int *)(v237 + 20);
    uint64_t v242 = &v235[v241];
    uint64_t v243 = &v236[v241];
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v243, 1, v239))
    {
      uint64_t v244 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
      memcpy(v242, v243, *(void *)(*(void *)(v244 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v239 - 8) + 16))(v242, v243, v239);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v242, 0, 1, v239);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v235, 0, 1, v237);
  }
  uint64_t v245 = v6[9];
  unsigned __int8 v246 = (char *)a1 + v245;
  uint64_t v247 = (char *)v3 + v245;
  uint64_t v248 = type metadata accessor for UUID();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v248 - 8) + 16))(v246, v247, v248);
  uint64_t v249 = type metadata accessor for PreprocessedWeatherData();
  *(void *)&v246[*(int *)(v249 + 20)] = *(void *)&v247[*(int *)(v249 + 20)];
  uint64_t v430 = v246;
  uint64_t v432 = (int *)v249;
  uint64_t v250 = *(int *)(v249 + 24);
  uint64_t v251 = &v246[v250];
  uint64_t v434 = v247;
  uint64_t v252 = &v247[v250];
  uint64_t v253 = *(void *)&v247[v250 + 8];
  *(void *)uint64_t v251 = *(void *)&v247[v250];
  *((void *)v251 + 1) = v253;
  uint64_t v254 = *(void *)&v247[v250 + 24];
  *((void *)v251 + 2) = *(void *)&v247[v250 + 16];
  *((void *)v251 + 3) = v254;
  uint64_t v255 = *(void *)&v247[v250 + 40];
  *((void *)v251 + 4) = *(void *)&v247[v250 + 32];
  *((void *)v251 + 5) = v255;
  uint64_t v256 = type metadata accessor for FeelsLikeComponentPreprocessedDataModel();
  uint64_t v257 = *(int *)(v256 + 28);
  uint64_t v258 = &v251[v257];
  uint64_t v259 = &v252[v257];
  uint64_t v260 = type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference(0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v259, 1, v260))
  {
    uint64_t v261 = sub_10017DF08(&qword_100E63750);
    memcpy(v258, v259, *(void *)(*(void *)(v261 - 8) + 64));
  }
  else
  {
    uint64_t v262 = *((void *)v259 + 1);
    *(void *)uint64_t v258 = *(void *)v259;
    *((void *)v258 + 1) = v262;
    uint64_t v263 = *(int *)(v260 + 20);
    uint64_t v264 = &v258[v263];
    uint64_t v265 = &v259[v263];
    uint64_t v266 = type metadata accessor for TemperatureScaleConfiguration();
    uint64_t v422 = *(void (**)(char *, char *, uint64_t))(*(void *)(v266 - 8) + 16);
    swift_bridgeObjectRetain();
    v422(v264, v265, v266);
    uint64_t v267 = (int *)type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
    *(void *)&v264[v267[5]] = *(void *)&v265[v267[5]];
    *(void *)&v264[v267[6]] = *(void *)&v265[v267[6]];
    *(void *)&v264[v267[7]] = *(void *)&v265[v267[7]];
    uint64_t v268 = v267[8];
    uint64_t v269 = &v264[v268];
    uint64_t v270 = &v265[v268];
    uint64_t v272 = *(void *)v270;
    uint64_t v271 = *((void *)v270 + 1);
    *(void *)uint64_t v269 = v272;
    *((void *)v269 + 1) = v271;
    v264[v267[9]] = v265[v267[9]];
    swift_bridgeObjectRetain();
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v258, 0, 1, v260);
  }
  uint64_t v273 = *(int *)(v256 + 32);
  uint64_t v274 = &v251[v273];
  uint64_t v275 = &v252[v273];
  uint64_t v276 = *((void *)v275 + 1);
  *(void *)uint64_t v274 = *(void *)v275;
  *((void *)v274 + 1) = v276;
  uint64_t v277 = v432[7];
  uint64_t v278 = &v430[v277];
  v279 = &v434[v277];
  *(void *)&v430[v277] = *(void *)&v434[v277];
  uint64_t v280 = *(int *)(type metadata accessor for HourlyForecastComponentPreprocessedDataModel() + 20);
  uint64_t v281 = &v278[v280];
  uint64_t v282 = &v279[v280];
  uint64_t v283 = type metadata accessor for WeatherDescription();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v282, 1, v283))
  {
    uint64_t v284 = sub_10017DF08(&qword_100E63758);
    memcpy(v281, v282, *(void *)(*(void *)(v284 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v283 - 8) + 16))(v281, v282, v283);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v281, 0, 1, v283);
  }
  uint64_t v285 = v432[8];
  v286 = &v430[v285];
  uint64_t v287 = &v434[v285];
  uint64_t v288 = *(void *)&v434[v285 + 8];
  *(void *)v286 = *(void *)&v434[v285];
  *((void *)v286 + 1) = v288;
  uint64_t v289 = *(void *)&v434[v285 + 24];
  *((void *)v286 + 2) = *(void *)&v434[v285 + 16];
  *((void *)v286 + 3) = v289;
  uint64_t v290 = *(void *)&v434[v285 + 40];
  *((void *)v286 + 4) = *(void *)&v434[v285 + 32];
  *((void *)v286 + 5) = v290;
  uint64_t v291 = *(void *)&v434[v285 + 56];
  *((void *)v286 + 6) = *(void *)&v434[v285 + 48];
  *((void *)v286 + 7) = v291;
  uint64_t v292 = *(int *)(type metadata accessor for ListPreprocessedDataModel() + 32);
  uint64_t v293 = &v286[v292];
  uint64_t v294 = &v287[v292];
  uint64_t v295 = type metadata accessor for Date();
  uint64_t v296 = *(void (**)(char *, char *, uint64_t))(*(void *)(v295 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v419 = v296;
  uint64_t v421 = v295;
  v296(v293, v294, v295);
  uint64_t v297 = type metadata accessor for WeatherConditionBackgroundTimeData();
  uint64_t v298 = *(int *)(v297 + 20);
  uint64_t v299 = &v293[v298];
  uint64_t v300 = &v294[v298];
  uint64_t v301 = type metadata accessor for Elevation();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v300, 1, v301))
  {
    uint64_t v302 = sub_10017DF08(&qword_100E63760);
    memcpy(v299, v300, *(void *)(*(void *)(v302 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v301 - 8) + 16))(v299, v300, v301);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v299, 0, 1, v301);
  }
  uint64_t v303 = *(int *)(v297 + 24);
  v304 = &v293[v303];
  long long v305 = &v294[v303];
  uint64_t v306 = type metadata accessor for BackgroundMoonData();
  uint64_t v423 = v297;
  uint64_t v413 = v306;
  uint64_t v415 = v301;
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v305, 1, v306))
  {
    uint64_t v307 = sub_10017DF08(&qword_100E63768);
    memcpy(v304, v305, *(void *)(*(void *)(v307 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v306 - 8) + 16))(v304, v305, v306);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v304, 0, 1, v306);
  }
  uint64_t v308 = v432[9];
  uint64_t v309 = &v430[v308];
  uint64_t v310 = &v434[v308];
  uint64_t v311 = *((void *)v310 + 1);
  *(void *)uint64_t v309 = *(void *)v310;
  *((void *)v309 + 1) = v311;
  uint64_t v312 = *((void *)v310 + 3);
  *((void *)v309 + 2) = *((void *)v310 + 2);
  *((void *)v309 + 3) = v312;
  uint64_t v313 = *((void *)v310 + 5);
  *((void *)v309 + 4) = *((void *)v310 + 4);
  *((void *)v309 + 5) = v313;
  uint64_t v314 = *((void *)v310 + 7);
  *((void *)v309 + 6) = *((void *)v310 + 6);
  *((void *)v309 + 7) = v314;
  uint64_t v315 = *((void *)v310 + 9);
  *((void *)v309 + 8) = *((void *)v310 + 8);
  *((void *)v309 + 9) = v315;
  uint64_t v316 = *((void *)v310 + 11);
  *((void *)v309 + 10) = *((void *)v310 + 10);
  *((void *)v309 + 11) = v316;
  uint64_t v317 = *((void *)v310 + 13);
  *((void *)v309 + 12) = *((void *)v310 + 12);
  *((void *)v309 + 13) = v317;
  uint64_t v318 = v432[10];
  uint64_t v319 = &v430[v318];
  uint64_t v320 = &v434[v318];
  uint64_t v410 = *(void (**)(char *, char *, uint64_t))(*(void *)(v283 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v410(v319, v320, v283);
  uint64_t v321 = *(int *)(type metadata accessor for UVIndexComponentPreprocessedDataModel() + 20);
  uint64_t v322 = &v319[v321];
  uint64_t v323 = &v320[v321];
  uint64_t v324 = *((void *)v323 + 1);
  *(void *)uint64_t v322 = *(void *)v323;
  *((void *)v322 + 1) = v324;
  uint64_t v325 = v432[11];
  uint64_t v326 = &v430[v325];
  uint64_t v327 = &v434[v325];
  uint64_t v328 = *((void *)v327 + 1);
  *(void *)uint64_t v326 = *(void *)v327;
  *((void *)v326 + 1) = v328;
  uint64_t v329 = *((void *)v327 + 3);
  *((void *)v326 + 2) = *((void *)v327 + 2);
  *((void *)v326 + 3) = v329;
  uint64_t v330 = *((void *)v327 + 5);
  *((void *)v326 + 4) = *((void *)v327 + 4);
  *((void *)v326 + 5) = v330;
  uint64_t v331 = v432[12];
  uint64_t v332 = &v430[v331];
  uint64_t v333 = &v434[v331];
  uint64_t v334 = type metadata accessor for PressureTrend();
  uint64_t v335 = *(void (**)(char *, char *, uint64_t))(*(void *)(v334 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v335(v332, v333, v334);
  uint64_t v336 = (int *)type metadata accessor for PressureComponentPreprocessedDataModel();
  uint64_t v337 = v336[5];
  uint64_t v338 = &v332[v337];
  uint64_t v339 = &v333[v337];
  uint64_t v340 = *((void *)v339 + 1);
  *(void *)uint64_t v338 = *(void *)v339;
  *((void *)v338 + 1) = v340;
  uint64_t v341 = v336[6];
  uint64_t v342 = &v332[v341];
  uint64_t v343 = &v333[v341];
  uint64_t v411 = *((void *)v343 + 1);
  *(void *)uint64_t v342 = *(void *)v343;
  *((void *)v342 + 1) = v411;
  uint64_t v344 = v336[7];
  long long v345 = &v332[v344];
  uint64_t v346 = &v333[v344];
  uint64_t v409 = *((void *)v346 + 1);
  *(void *)long long v345 = *(void *)v346;
  *((void *)v345 + 1) = v409;
  *(void *)&v332[v336[8]] = *(void *)&v333[v336[8]];
  uint64_t v347 = v336[9];
  uint64_t v348 = &v332[v347];
  uint64_t v349 = &v333[v347];
  uint64_t v407 = *((void *)v349 + 1);
  *(void *)uint64_t v348 = *(void *)v349;
  *((void *)v348 + 1) = v407;
  uint64_t v350 = v432[13];
  uint64_t v351 = &v430[v350];
  uint64_t v352 = &v434[v350];
  uint64_t v353 = *((void *)v352 + 1);
  *(void *)uint64_t v351 = *(void *)v352;
  *((void *)v351 + 1) = v353;
  uint64_t v354 = *((void *)v352 + 3);
  *((void *)v351 + 2) = *((void *)v352 + 2);
  *((void *)v351 + 3) = v354;
  uint64_t v355 = *((void *)v352 + 5);
  *((void *)v351 + 4) = *((void *)v352 + 4);
  *((void *)v351 + 5) = v355;
  uint64_t v356 = *((void *)v352 + 7);
  *((void *)v351 + 6) = *((void *)v352 + 6);
  *((void *)v351 + 7) = v356;
  uint64_t v357 = *((void *)v352 + 9);
  *((void *)v351 + 8) = *((void *)v352 + 8);
  *((void *)v351 + 9) = v357;
  uint64_t v358 = *((void *)v352 + 11);
  *((void *)v351 + 10) = *((void *)v352 + 10);
  *((void *)v351 + 11) = v358;
  uint64_t v359 = *((void *)v352 + 13);
  *((void *)v351 + 12) = *((void *)v352 + 12);
  *((void *)v351 + 13) = v359;
  uint64_t v360 = *((void *)v352 + 15);
  *((void *)v351 + 14) = *((void *)v352 + 14);
  *((void *)v351 + 15) = v360;
  uint64_t v361 = *((void *)v352 + 17);
  *((void *)v351 + 16) = *((void *)v352 + 16);
  *((void *)v351 + 17) = v361;
  uint64_t v362 = *((void *)v352 + 19);
  *((void *)v351 + 18) = *((void *)v352 + 18);
  *((void *)v351 + 19) = v362;
  uint64_t v363 = *((void *)v352 + 21);
  *((void *)v351 + 20) = *((void *)v352 + 20);
  *((void *)v351 + 21) = v363;
  uint64_t v364 = *((void *)v352 + 23);
  *((void *)v351 + 22) = *((void *)v352 + 22);
  *((void *)v351 + 23) = v364;
  uint64_t v365 = *((void *)v352 + 25);
  *((void *)v351 + 24) = *((void *)v352 + 24);
  *((void *)v351 + 25) = v365;
  *((_OWORD *)v351 + 13) = *((_OWORD *)v352 + 13);
  *((void *)v351 + 28) = *((void *)v352 + 28);
  uint64_t v366 = v432[14];
  uint64_t v367 = &v430[v366];
  uint64_t v368 = &v434[v366];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v419(v367, v368, v421);
  uint64_t v369 = *(int *)(v423 + 20);
  uint64_t v370 = &v367[v369];
  uint64_t v371 = &v368[v369];
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v368[v369], 1, v415))
  {
    uint64_t v372 = sub_10017DF08(&qword_100E63760);
    memcpy(v370, v371, *(void *)(*(void *)(v372 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v415 - 8) + 16))(v370, v371, v415);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v370, 0, 1, v415);
  }
  uint64_t v373 = *(int *)(v423 + 24);
  uint64_t v374 = &v367[v373];
  uint64_t v375 = &v368[v373];
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v368[v373], 1, v413))
  {
    uint64_t v376 = sub_10017DF08(&qword_100E63768);
    memcpy(v374, v375, *(void *)(*(void *)(v376 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v413 - 8) + 16))(v374, v375, v413);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v374, 0, 1, v413);
  }
  uint64_t v377 = v432[15];
  uint64_t v378 = &v430[v377];
  uint64_t v379 = &v434[v377];
  uint64_t v380 = *((void *)v379 + 1);
  *(void *)uint64_t v378 = *(void *)v379;
  *((void *)v378 + 1) = v380;
  uint64_t v381 = *((void *)v379 + 3);
  *((void *)v378 + 2) = *((void *)v379 + 2);
  *((void *)v378 + 3) = v381;
  uint64_t v382 = *((void *)v379 + 5);
  *((void *)v378 + 4) = *((void *)v379 + 4);
  *((void *)v378 + 5) = v382;
  uint64_t v383 = *((void *)v379 + 7);
  *((void *)v378 + 6) = *((void *)v379 + 6);
  *((void *)v378 + 7) = v383;
  uint64_t v384 = *((void *)v379 + 9);
  *((void *)v378 + 8) = *((void *)v379 + 8);
  *((void *)v378 + 9) = v384;
  uint64_t v385 = *((void *)v379 + 11);
  *((void *)v378 + 10) = *((void *)v379 + 10);
  *((void *)v378 + 11) = v385;
  uint64_t v386 = *((void *)v379 + 13);
  *((void *)v378 + 12) = *((void *)v379 + 12);
  *((void *)v378 + 13) = v386;
  uint64_t v387 = v426[10];
  uint64_t v388 = (void *)((char *)v428 + v387);
  uint64_t v389 = (void *)((char *)v427 + v387);
  type metadata accessor for NewsDataModel();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *uint64_t v388 = *v389;
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v390 = type metadata accessor for News();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v390 - 8) + 16))(v388, v389, v390);
  }
  double v13 = v428;
  swift_storeEnumTagMultiPayload();
  uint64_t v391 = v426[11];
  uint64_t v392 = v426[12];
  uint64_t v393 = (void *)((char *)v428 + v391);
  uint64_t v394 = (void *)((char *)v427 + v391);
  uint64_t v395 = v394[1];
  *uint64_t v393 = *v394;
  v393[1] = v395;
  uint64_t v396 = (char *)v428 + v392;
  uint64_t v397 = (char *)v427 + v392;
  swift_retain();
  v401(v396, v397, v425);
  uint64_t v398 = sub_10017DF08(&qword_100EA6858);
  *(void *)&v396[*(int *)(v398 + 28)] = *(void *)&v397[*(int *)(v398 + 28)];
LABEL_105:
  swift_retain();
  return v13;
}

uint64_t sub_1009BE834(uint64_t a1, int *a2)
{
  sub_10017DF08(&qword_100E65310);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  swift_release();
  if (EnumCaseMultiPayload == 1)
  {
    swift_release();
    uint64_t v5 = a1 + *(int *)(sub_10017DF08(&qword_100E669A0) + 32);
    uint64_t v6 = type metadata accessor for PresentationMode();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  }
  uint64_t v7 = a1 + a2[5];
  uint64_t v8 = type metadata accessor for LocationModel();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = a1 + a2[7];
  type metadata accessor for LocationWeatherDataState(0);
  int v10 = swift_getEnumCaseMultiPayload();
  uint64_t v100 = a2;
  uint64_t v101 = a1;
  if (v10 == 2)
  {
    swift_bridgeObjectRelease();
    if (*(void *)(v9 + 24) < 0xEuLL) {
      goto LABEL_37;
    }
    goto LABEL_9;
  }
  if (v10 == 1)
  {
    swift_bridgeObjectRelease();
    uint64_t v11 = (int *)type metadata accessor for WeatherData(0);
    uint64_t v12 = v9 + v11[5];
    uint64_t v13 = type metadata accessor for Locale();
    if (!_s7Weather24LocationCompositionStateOwet_0(v12, 1, v13)) {
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
    }
    uint64_t v14 = v9 + v11[6];
    uint64_t v15 = type metadata accessor for WeatherDataModel();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v14, v15);
    uint64_t v16 = v9 + v11[7];
    uint64_t v17 = sub_10017DF08(&qword_100E63738);
    if (!_s7Weather24LocationCompositionStateOwet_0(v16, 1, v17))
    {
      uint64_t v18 = type metadata accessor for Date();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(v16, v18);
    }
    uint64_t v19 = v9 + v11[8];
    type metadata accessor for WeatherData.WeatherStatisticsState(0);
    int v20 = swift_getEnumCaseMultiPayload();
    if (v20 == 1)
    {
      uint64_t v21 = type metadata accessor for WeatherStatisticsModel();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v21 - 8) + 8))(v19, v21);
    }
    else if (!v20)
    {
      swift_bridgeObjectRelease();
    }
    uint64_t v22 = v9 + v11[9];
    uint64_t v23 = type metadata accessor for WeatherDataOverrides();
    if (!_s7Weather24LocationCompositionStateOwet_0(v22, 1, v23))
    {
      uint64_t v24 = type metadata accessor for Date();
      if (!_s7Weather24LocationCompositionStateOwet_0(v22, 1, v24)) {
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v24 - 8) + 8))(v22, v24);
      }
      uint64_t v25 = v22 + *(int *)(v23 + 20);
      if (!_s7Weather24LocationCompositionStateOwet_0(v25, 1, v24)) {
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v24 - 8) + 8))(v25, v24);
      }
    }
    uint64_t v98 = sub_10017DF08(&qword_100E63748);
    uint64_t v26 = v9 + *(int *)(v98 + 48);
    uint64_t v27 = type metadata accessor for UUID();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v27 - 8) + 8))(v26, v27);
    uint64_t v28 = (int *)type metadata accessor for PreprocessedWeatherData();
    swift_bridgeObjectRelease();
    uint64_t v29 = v26 + v28[6];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v30 = v29 + *(int *)(type metadata accessor for FeelsLikeComponentPreprocessedDataModel() + 28);
    uint64_t v31 = type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference(0);
    if (!_s7Weather24LocationCompositionStateOwet_0(v30, 1, v31))
    {
      swift_bridgeObjectRelease();
      uint64_t v32 = v30 + *(int *)(v31 + 20);
      uint64_t v33 = type metadata accessor for TemperatureScaleConfiguration();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v33 - 8) + 8))(v32, v33);
      type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    uint64_t v34 = v26 + v28[7];
    swift_bridgeObjectRelease();
    uint64_t v35 = v34 + *(int *)(type metadata accessor for HourlyForecastComponentPreprocessedDataModel() + 20);
    uint64_t v36 = type metadata accessor for WeatherDescription();
    if (!_s7Weather24LocationCompositionStateOwet_0(v35, 1, v36)) {
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v36 - 8) + 8))(v35, v36);
    }
    uint64_t v37 = v26 + v28[8];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v38 = v37 + *(int *)(type metadata accessor for ListPreprocessedDataModel() + 32);
    uint64_t v39 = type metadata accessor for Date();
    uint64_t v95 = *(void (**)(uint64_t))(*(void *)(v39 - 8) + 8);
    uint64_t v96 = v39;
    v95(v38);
    uint64_t v40 = type metadata accessor for WeatherConditionBackgroundTimeData();
    uint64_t v41 = v38 + *(int *)(v40 + 20);
    uint64_t v42 = type metadata accessor for Elevation();
    if (!_s7Weather24LocationCompositionStateOwet_0(v41, 1, v42)) {
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v42 - 8) + 8))(v41, v42);
    }
    uint64_t v43 = v38 + *(int *)(v40 + 24);
    uint64_t v44 = type metadata accessor for BackgroundMoonData();
    if (!_s7Weather24LocationCompositionStateOwet_0(v43, 1, v44)) {
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v44 - 8) + 8))(v43, v44);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v36 - 8) + 8))(v26 + v28[10], v36);
    type metadata accessor for UVIndexComponentPreprocessedDataModel();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v45 = v26 + v28[12];
    uint64_t v46 = type metadata accessor for PressureTrend();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v46 - 8) + 8))(v45, v46);
    type metadata accessor for PressureComponentPreprocessedDataModel();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v47 = v26 + v28[14];
    ((void (*)(uint64_t, uint64_t))v95)(v47, v96);
    uint64_t v48 = v47 + *(int *)(v40 + 20);
    if (!_s7Weather24LocationCompositionStateOwet_0(v48, 1, v42)) {
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v42 - 8) + 8))(v48, v42);
    }
    uint64_t v49 = v47 + *(int *)(v40 + 24);
    if (!_s7Weather24LocationCompositionStateOwet_0(v49, 1, v44)) {
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v44 - 8) + 8))(v49, v44);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v9 += *(int *)(v98 + 64);
    type metadata accessor for NewsDataModel();
    a2 = v100;
    a1 = v101;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
LABEL_9:
      swift_bridgeObjectRelease();
      goto LABEL_37;
    }
  }
  else
  {
    if (v10) {
      goto LABEL_37;
    }
    type metadata accessor for NewsDataModel();
    if (swift_getEnumCaseMultiPayload() == 1) {
      goto LABEL_9;
    }
  }
  uint64_t v50 = type metadata accessor for News();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v50 - 8) + 8))(v9, v50);
LABEL_37:
  uint64_t v51 = a1 + a2[8];
  swift_bridgeObjectRelease();
  uint64_t v52 = (int *)type metadata accessor for WeatherData(0);
  uint64_t v53 = v51 + v52[5];
  uint64_t v54 = type metadata accessor for Locale();
  if (!_s7Weather24LocationCompositionStateOwet_0(v53, 1, v54)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v54 - 8) + 8))(v53, v54);
  }
  uint64_t v55 = v51 + v52[6];
  uint64_t v56 = type metadata accessor for WeatherDataModel();
  uint64_t v97 = *(void (**)(uint64_t))(*(void *)(v56 - 8) + 8);
  uint64_t v99 = v56;
  v97(v55);
  uint64_t v57 = v51 + v52[7];
  uint64_t v58 = sub_10017DF08(&qword_100E63738);
  if (!_s7Weather24LocationCompositionStateOwet_0(v57, 1, v58))
  {
    uint64_t v59 = type metadata accessor for Date();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v59 - 8) + 8))(v57, v59);
  }
  uint64_t v60 = v51 + v52[8];
  type metadata accessor for WeatherData.WeatherStatisticsState(0);
  int v61 = swift_getEnumCaseMultiPayload();
  if (v61 == 1)
  {
    uint64_t v62 = type metadata accessor for WeatherStatisticsModel();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v62 - 8) + 8))(v60, v62);
  }
  else if (!v61)
  {
    swift_bridgeObjectRelease();
  }
  uint64_t v63 = v51 + v52[9];
  uint64_t v64 = type metadata accessor for WeatherDataOverrides();
  if (!_s7Weather24LocationCompositionStateOwet_0(v63, 1, v64))
  {
    uint64_t v65 = type metadata accessor for Date();
    if (!_s7Weather24LocationCompositionStateOwet_0(v63, 1, v65)) {
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v65 - 8) + 8))(v63, v65);
    }
    uint64_t v66 = v63 + *(int *)(v64 + 20);
    if (!_s7Weather24LocationCompositionStateOwet_0(v66, 1, v65)) {
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v65 - 8) + 8))(v66, v65);
    }
  }
  uint64_t v67 = a1 + a2[9];
  uint64_t v68 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v68 - 8) + 8))(v67, v68);
  uint64_t v69 = (int *)type metadata accessor for PreprocessedWeatherData();
  swift_bridgeObjectRelease();
  uint64_t v70 = v67 + v69[6];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v71 = v70 + *(int *)(type metadata accessor for FeelsLikeComponentPreprocessedDataModel() + 28);
  uint64_t v72 = type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference(0);
  if (!_s7Weather24LocationCompositionStateOwet_0(v71, 1, v72))
  {
    swift_bridgeObjectRelease();
    uint64_t v73 = v71 + *(int *)(v72 + 20);
    uint64_t v74 = type metadata accessor for TemperatureScaleConfiguration();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v74 - 8) + 8))(v73, v74);
    type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  uint64_t v75 = v67 + v69[7];
  swift_bridgeObjectRelease();
  uint64_t v76 = v75 + *(int *)(type metadata accessor for HourlyForecastComponentPreprocessedDataModel() + 20);
  uint64_t v77 = type metadata accessor for WeatherDescription();
  if (!_s7Weather24LocationCompositionStateOwet_0(v76, 1, v77)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v77 - 8) + 8))(v76, v77);
  }
  uint64_t v78 = v67 + v69[8];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v79 = v78 + *(int *)(type metadata accessor for ListPreprocessedDataModel() + 32);
  uint64_t v80 = type metadata accessor for Date();
  uint64_t v81 = *(void (**)(uint64_t, uint64_t))(*(void *)(v80 - 8) + 8);
  v81(v79, v80);
  uint64_t v82 = type metadata accessor for WeatherConditionBackgroundTimeData();
  uint64_t v83 = v79 + *(int *)(v82 + 20);
  uint64_t v84 = type metadata accessor for Elevation();
  if (!_s7Weather24LocationCompositionStateOwet_0(v83, 1, v84)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v84 - 8) + 8))(v83, v84);
  }
  uint64_t v85 = v79 + *(int *)(v82 + 24);
  uint64_t v86 = type metadata accessor for BackgroundMoonData();
  if (!_s7Weather24LocationCompositionStateOwet_0(v85, 1, v86)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v86 - 8) + 8))(v85, v86);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v77 - 8) + 8))(v67 + v69[10], v77);
  type metadata accessor for UVIndexComponentPreprocessedDataModel();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v87 = v67 + v69[12];
  uint64_t v88 = type metadata accessor for PressureTrend();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v88 - 8) + 8))(v87, v88);
  type metadata accessor for PressureComponentPreprocessedDataModel();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v89 = v67 + v69[14];
  v81(v89, v80);
  uint64_t v90 = v89 + *(int *)(v82 + 20);
  if (!_s7Weather24LocationCompositionStateOwet_0(v90, 1, v84)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v84 - 8) + 8))(v90, v84);
  }
  uint64_t v91 = v89 + *(int *)(v82 + 24);
  if (!_s7Weather24LocationCompositionStateOwet_0(v91, 1, v86)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v86 - 8) + 8))(v91, v86);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v92 = v101 + v100[10];
  type metadata accessor for NewsDataModel();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v93 = type metadata accessor for News();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v93 - 8) + 8))(v92, v93);
  }
  swift_release();
  ((void (*)(uint64_t, uint64_t))v97)(v101 + v100[12], v99);
  sub_10017DF08(&qword_100EA6858);

  return swift_release();
}

void *sub_1009BFA48(void *a1, void *a2, int *a3)
{
  sub_10017DF08(&qword_100E65310);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  *a1 = *a2;
  if (EnumCaseMultiPayload == 1)
  {
    a1[1] = a2[1];
    swift_retain();
    swift_retain();
    uint64_t v7 = *(int *)(sub_10017DF08(&qword_100E669A0) + 32);
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = type metadata accessor for PresentationMode();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  }
  else
  {
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v11 = a3[5];
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = type metadata accessor for LocationModel();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  uint64_t v15 = a3[7];
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  uint64_t v16 = (void *)((char *)a1 + v15);
  uint64_t v17 = (void *)((char *)a2 + v15);
  uint64_t v18 = type metadata accessor for LocationWeatherDataState(0);
  int v19 = swift_getEnumCaseMultiPayload();
  uint64_t v424 = a2;
  uint64_t v425 = a1;
  uint64_t v423 = a3;
  if (v19 == 2)
  {
    uint64_t v20 = v17[1];
    *uint64_t v16 = *v17;
    v16[1] = v20;
    uint64_t v21 = v17 + 2;
    unint64_t v22 = v17[3];
    swift_bridgeObjectRetain();
    if (v22 >= 0xE)
    {
      v16[2] = *v21;
      void v16[3] = v22;
      swift_bridgeObjectRetain();
    }
    else
    {
      *((_OWORD *)v16 + 1) = *(_OWORD *)v21;
    }
    goto LABEL_59;
  }
  if (v19 == 1)
  {
    uint64_t v23 = v17[1];
    *uint64_t v16 = *v17;
    v16[1] = v23;
    uint64_t v24 = (int *)type metadata accessor for WeatherData(0);
    uint64_t v25 = v24[5];
    uint64_t v26 = (char *)v16 + v25;
    uint64_t v27 = (char *)v17 + v25;
    uint64_t v28 = type metadata accessor for Locale();
    swift_bridgeObjectRetain();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v27, 1, v28))
    {
      uint64_t v29 = sub_10017DF08(&qword_100E63730);
      memcpy(v26, v27, *(void *)(*(void *)(v29 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 16))(v26, v27, v28);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v26, 0, 1, v28);
    }
    uint64_t v31 = v24[6];
    uint64_t v32 = (char *)v16 + v31;
    uint64_t v33 = (char *)v17 + v31;
    uint64_t v34 = type metadata accessor for WeatherDataModel();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 16))(v32, v33, v34);
    uint64_t v35 = v24[7];
    uint64_t v36 = (char *)v16 + v35;
    uint64_t v37 = (char *)v17 + v35;
    uint64_t v38 = sub_10017DF08(&qword_100E63738);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v37, 1, v38))
    {
      uint64_t v39 = type metadata accessor for WeatherData.CachingState(0);
      memcpy(v36, v37, *(void *)(*(void *)(v39 - 8) + 64));
    }
    else
    {
      uint64_t v40 = type metadata accessor for Date();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v40 - 8) + 16))(v36, v37, v40);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v36, 0, 1, v38);
    }
    uint64_t v41 = v24[8];
    uint64_t v42 = (void *)((char *)v16 + v41);
    uint64_t v43 = (void *)((char *)v17 + v41);
    uint64_t v44 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
    int v45 = swift_getEnumCaseMultiPayload();
    if (v45 == 1)
    {
      uint64_t v47 = type metadata accessor for WeatherStatisticsModel();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v47 - 8) + 16))(v42, v43, v47);
    }
    else
    {
      if (v45)
      {
        memcpy(v42, v43, *(void *)(*(void *)(v44 - 8) + 64));
        goto LABEL_28;
      }
      uint64_t v46 = v43[1];
      void *v42 = *v43;
      v42[1] = v46;
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
LABEL_28:
    uint64_t v48 = v24[9];
    uint64_t v49 = (char *)v16 + v48;
    uint64_t v50 = (char *)v17 + v48;
    uint64_t v51 = type metadata accessor for WeatherDataOverrides();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v50, 1, v51))
    {
      uint64_t v52 = sub_10017DF08(&qword_100E63740);
      memcpy(v49, v50, *(void *)(*(void *)(v52 - 8) + 64));
    }
    else
    {
      uint64_t v53 = type metadata accessor for Date();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v50, 1, v53))
      {
        uint64_t v54 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
        memcpy(v49, v50, *(void *)(*(void *)(v54 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v53 - 8) + 16))(v49, v50, v53);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v49, 0, 1, v53);
      }
      uint64_t v55 = *(int *)(v51 + 20);
      uint64_t v56 = &v49[v55];
      uint64_t v57 = &v50[v55];
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v57, 1, v53))
      {
        uint64_t v58 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
        memcpy(v56, v57, *(void *)(*(void *)(v58 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v53 - 8) + 16))(v56, v57, v53);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v56, 0, 1, v53);
      }
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v49, 0, 1, v51);
    }
    uint64_t v415 = sub_10017DF08(&qword_100E63748);
    uint64_t v417 = v17;
    uint64_t v59 = *(int *)(v415 + 48);
    uint64_t v421 = v16;
    uint64_t v60 = (char *)v16 + v59;
    int v61 = (char *)v17 + v59;
    uint64_t v62 = type metadata accessor for UUID();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v62 - 8) + 16))(v60, v61, v62);
    uint64_t v63 = type metadata accessor for PreprocessedWeatherData();
    *(void *)&v60[*(int *)(v63 + 20)] = *(void *)&v61[*(int *)(v63 + 20)];
    uint64_t v426 = v60;
    uint64_t v428 = (int *)v63;
    uint64_t v64 = *(int *)(v63 + 24);
    uint64_t v65 = &v60[v64];
    uint64_t v430 = v61;
    uint64_t v66 = &v61[v64];
    uint64_t v67 = *(void *)&v61[v64 + 8];
    *(void *)uint64_t v65 = *(void *)&v61[v64];
    *((void *)v65 + 1) = v67;
    uint64_t v68 = *(void *)&v61[v64 + 24];
    *((void *)v65 + 2) = *(void *)&v61[v64 + 16];
    *((void *)v65 + 3) = v68;
    uint64_t v69 = *(void *)&v61[v64 + 40];
    *((void *)v65 + 4) = *(void *)&v61[v64 + 32];
    *((void *)v65 + 5) = v69;
    uint64_t v70 = type metadata accessor for FeelsLikeComponentPreprocessedDataModel();
    uint64_t v71 = *(int *)(v70 + 28);
    uint64_t v72 = &v65[v71];
    uint64_t v73 = &v66[v71];
    uint64_t v74 = type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference(0);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v73, 1, v74))
    {
      uint64_t v75 = sub_10017DF08(&qword_100E63750);
      memcpy(v72, v73, *(void *)(*(void *)(v75 - 8) + 64));
    }
    else
    {
      uint64_t v76 = *((void *)v73 + 1);
      *(void *)uint64_t v72 = *(void *)v73;
      *((void *)v72 + 1) = v76;
      uint64_t v77 = *(int *)(v74 + 20);
      uint64_t v78 = &v72[v77];
      uint64_t v79 = &v73[v77];
      uint64_t v80 = type metadata accessor for TemperatureScaleConfiguration();
      uint64_t v413 = *(void (**)(char *, char *, uint64_t))(*(void *)(v80 - 8) + 16);
      swift_bridgeObjectRetain();
      v413(v78, v79, v80);
      uint64_t v81 = (int *)type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
      *(void *)&v78[v81[5]] = *(void *)&v79[v81[5]];
      *(void *)&v78[v81[6]] = *(void *)&v79[v81[6]];
      *(void *)&v78[v81[7]] = *(void *)&v79[v81[7]];
      uint64_t v82 = v81[8];
      uint64_t v83 = &v78[v82];
      uint64_t v84 = &v79[v82];
      uint64_t v86 = *(void *)v84;
      uint64_t v85 = *((void *)v84 + 1);
      *(void *)uint64_t v83 = v86;
      *((void *)v83 + 1) = v85;
      v78[v81[9]] = v79[v81[9]];
      swift_bridgeObjectRetain();
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v72, 0, 1, v74);
    }
    uint64_t v87 = *(int *)(v70 + 32);
    uint64_t v88 = &v65[v87];
    uint64_t v89 = &v66[v87];
    uint64_t v90 = *((void *)v89 + 1);
    *(void *)uint64_t v88 = *(void *)v89;
    *((void *)v88 + 1) = v90;
    uint64_t v91 = v428[7];
    uint64_t v92 = &v426[v91];
    uint64_t v93 = &v430[v91];
    *(void *)&v426[v91] = *(void *)&v430[v91];
    uint64_t v94 = *(int *)(type metadata accessor for HourlyForecastComponentPreprocessedDataModel() + 20);
    uint64_t v95 = &v92[v94];
    uint64_t v96 = &v93[v94];
    uint64_t v97 = type metadata accessor for WeatherDescription();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v96, 1, v97))
    {
      uint64_t v98 = sub_10017DF08(&qword_100E63758);
      memcpy(v95, v96, *(void *)(*(void *)(v98 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v97 - 8) + 16))(v95, v96, v97);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v95, 0, 1, v97);
    }
    uint64_t v99 = v428[8];
    uint64_t v100 = &v426[v99];
    uint64_t v101 = &v430[v99];
    uint64_t v102 = *(void *)&v430[v99 + 8];
    *(void *)uint64_t v100 = *(void *)&v430[v99];
    *((void *)v100 + 1) = v102;
    uint64_t v103 = *(void *)&v430[v99 + 24];
    *((void *)v100 + 2) = *(void *)&v430[v99 + 16];
    *((void *)v100 + 3) = v103;
    uint64_t v104 = *(void *)&v430[v99 + 40];
    *((void *)v100 + 4) = *(void *)&v430[v99 + 32];
    *((void *)v100 + 5) = v104;
    uint64_t v105 = *(void *)&v430[v99 + 56];
    *((void *)v100 + 6) = *(void *)&v430[v99 + 48];
    *((void *)v100 + 7) = v105;
    uint64_t v106 = *(int *)(type metadata accessor for ListPreprocessedDataModel() + 32);
    uint64_t v107 = &v100[v106];
    uint64_t v108 = &v101[v106];
    uint64_t v109 = type metadata accessor for Date();
    uint64_t v110 = *(void (**)(char *, char *, uint64_t))(*(void *)(v109 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v409 = v110;
    uint64_t v411 = v109;
    v110(v107, v108, v109);
    uint64_t v111 = type metadata accessor for WeatherConditionBackgroundTimeData();
    uint64_t v112 = *(int *)(v111 + 20);
    uint64_t v113 = &v107[v112];
    uint64_t v114 = &v108[v112];
    uint64_t v115 = type metadata accessor for Elevation();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v114, 1, v115))
    {
      uint64_t v116 = sub_10017DF08(&qword_100E63760);
      memcpy(v113, v114, *(void *)(*(void *)(v116 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v115 - 8) + 16))(v113, v114, v115);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v113, 0, 1, v115);
    }
    uint64_t v117 = *(int *)(v111 + 24);
    uint64_t v118 = &v107[v117];
    uint64_t v119 = &v108[v117];
    uint64_t v120 = type metadata accessor for BackgroundMoonData();
    uint64_t v414 = v111;
    uint64_t v403 = v120;
    uint64_t v405 = v115;
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v119, 1, v120))
    {
      uint64_t v121 = sub_10017DF08(&qword_100E63768);
      memcpy(v118, v119, *(void *)(*(void *)(v121 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v120 - 8) + 16))(v118, v119, v120);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v118, 0, 1, v120);
    }
    uint64_t v122 = v428[9];
    uint64_t v123 = &v426[v122];
    uint64_t v124 = &v430[v122];
    uint64_t v125 = *((void *)v124 + 1);
    *(void *)uint64_t v123 = *(void *)v124;
    *((void *)v123 + 1) = v125;
    uint64_t v126 = *((void *)v124 + 3);
    *((void *)v123 + 2) = *((void *)v124 + 2);
    *((void *)v123 + 3) = v126;
    uint64_t v127 = *((void *)v124 + 5);
    *((void *)v123 + 4) = *((void *)v124 + 4);
    *((void *)v123 + 5) = v127;
    uint64_t v128 = *((void *)v124 + 7);
    *((void *)v123 + 6) = *((void *)v124 + 6);
    *((void *)v123 + 7) = v128;
    uint64_t v129 = *((void *)v124 + 9);
    *((void *)v123 + 8) = *((void *)v124 + 8);
    *((void *)v123 + 9) = v129;
    uint64_t v130 = *((void *)v124 + 11);
    *((void *)v123 + 10) = *((void *)v124 + 10);
    *((void *)v123 + 11) = v130;
    uint64_t v131 = *((void *)v124 + 13);
    *((void *)v123 + 12) = *((void *)v124 + 12);
    *((void *)v123 + 13) = v131;
    uint64_t v132 = v428[10];
    uint64_t v133 = &v426[v132];
    uint64_t v134 = &v430[v132];
    uint64_t v401 = *(void (**)(char *, char *, uint64_t))(*(void *)(v97 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v401(v133, v134, v97);
    uint64_t v135 = *(int *)(type metadata accessor for UVIndexComponentPreprocessedDataModel() + 20);
    uint64_t v136 = &v133[v135];
    uint64_t v137 = &v134[v135];
    uint64_t v138 = *((void *)v137 + 1);
    *(void *)uint64_t v136 = *(void *)v137;
    *((void *)v136 + 1) = v138;
    uint64_t v139 = v428[11];
    uint64_t v140 = &v426[v139];
    uint64_t v141 = &v430[v139];
    uint64_t v142 = *((void *)v141 + 1);
    *(void *)uint64_t v140 = *(void *)v141;
    *((void *)v140 + 1) = v142;
    uint64_t v143 = *((void *)v141 + 3);
    *((void *)v140 + 2) = *((void *)v141 + 2);
    *((void *)v140 + 3) = v143;
    uint64_t v144 = *((void *)v141 + 5);
    *((void *)v140 + 4) = *((void *)v141 + 4);
    *((void *)v140 + 5) = v144;
    uint64_t v145 = v428[12];
    uint64_t v146 = &v426[v145];
    uint64_t v147 = &v430[v145];
    uint64_t v148 = type metadata accessor for PressureTrend();
    uint64_t v149 = *(void (**)(char *, char *, uint64_t))(*(void *)(v148 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v149(v146, v147, v148);
    uint64_t v150 = (int *)type metadata accessor for PressureComponentPreprocessedDataModel();
    uint64_t v151 = v150[5];
    uint64_t v152 = &v146[v151];
    uint64_t v153 = &v147[v151];
    uint64_t v154 = *((void *)v153 + 1);
    *(void *)uint64_t v152 = *(void *)v153;
    *((void *)v152 + 1) = v154;
    uint64_t v155 = v150[6];
    uint64_t v156 = &v146[v155];
    uint64_t v157 = &v147[v155];
    uint64_t v402 = *((void *)v157 + 1);
    *(void *)uint64_t v156 = *(void *)v157;
    *((void *)v156 + 1) = v402;
    uint64_t v158 = v150[7];
    int v159 = &v146[v158];
    uint64_t v160 = &v147[v158];
    uint64_t v400 = *((void *)v160 + 1);
    *(void *)int v159 = *(void *)v160;
    *((void *)v159 + 1) = v400;
    *(void *)&v146[v150[8]] = *(void *)&v147[v150[8]];
    uint64_t v161 = v150[9];
    uint64_t v162 = &v146[v161];
    uint64_t v163 = &v147[v161];
    uint64_t v399 = *((void *)v163 + 1);
    *(void *)uint64_t v162 = *(void *)v163;
    *((void *)v162 + 1) = v399;
    uint64_t v164 = v428[13];
    uint64_t v165 = &v426[v164];
    uint64_t v166 = &v430[v164];
    uint64_t v167 = *((void *)v166 + 1);
    *(void *)uint64_t v165 = *(void *)v166;
    *((void *)v165 + 1) = v167;
    uint64_t v168 = *((void *)v166 + 3);
    *((void *)v165 + 2) = *((void *)v166 + 2);
    *((void *)v165 + 3) = v168;
    uint64_t v169 = *((void *)v166 + 5);
    *((void *)v165 + 4) = *((void *)v166 + 4);
    *((void *)v165 + 5) = v169;
    uint64_t v170 = *((void *)v166 + 7);
    *((void *)v165 + 6) = *((void *)v166 + 6);
    *((void *)v165 + 7) = v170;
    uint64_t v171 = *((void *)v166 + 9);
    *((void *)v165 + 8) = *((void *)v166 + 8);
    *((void *)v165 + 9) = v171;
    uint64_t v172 = *((void *)v166 + 11);
    *((void *)v165 + 10) = *((void *)v166 + 10);
    *((void *)v165 + 11) = v172;
    uint64_t v173 = *((void *)v166 + 13);
    *((void *)v165 + 12) = *((void *)v166 + 12);
    *((void *)v165 + 13) = v173;
    uint64_t v174 = *((void *)v166 + 15);
    *((void *)v165 + 14) = *((void *)v166 + 14);
    *((void *)v165 + 15) = v174;
    uint64_t v175 = *((void *)v166 + 17);
    *((void *)v165 + 16) = *((void *)v166 + 16);
    *((void *)v165 + 17) = v175;
    uint64_t v176 = *((void *)v166 + 19);
    *((void *)v165 + 18) = *((void *)v166 + 18);
    *((void *)v165 + 19) = v176;
    uint64_t v177 = *((void *)v166 + 21);
    *((void *)v165 + 20) = *((void *)v166 + 20);
    *((void *)v165 + 21) = v177;
    uint64_t v178 = *((void *)v166 + 23);
    *((void *)v165 + 22) = *((void *)v166 + 22);
    *((void *)v165 + 23) = v178;
    uint64_t v179 = *((void *)v166 + 25);
    *((void *)v165 + 24) = *((void *)v166 + 24);
    *((void *)v165 + 25) = v179;
    *((_OWORD *)v165 + 13) = *((_OWORD *)v166 + 13);
    *((void *)v165 + 28) = *((void *)v166 + 28);
    uint64_t v180 = v428[14];
    uint64_t v181 = &v426[v180];
    uint64_t v397 = &v430[v180];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v409(v181, v397, v411);
    uint64_t v182 = *(int *)(v414 + 20);
    uint64_t v183 = &v181[v182];
    uint64_t v184 = &v397[v182];
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v397[v182], 1, v405))
    {
      uint64_t v185 = sub_10017DF08(&qword_100E63760);
      memcpy(v183, v184, *(void *)(*(void *)(v185 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v405 - 8) + 16))(v183, v184, v405);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v183, 0, 1, v405);
    }
    uint64_t v186 = *(int *)(v414 + 24);
    uint64_t v187 = &v181[v186];
    uint64_t v188 = &v397[v186];
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v397[v186], 1, v403))
    {
      uint64_t v189 = sub_10017DF08(&qword_100E63768);
      memcpy(v187, v188, *(void *)(*(void *)(v189 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v403 - 8) + 16))(v187, v188, v403);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v187, 0, 1, v403);
    }
    uint64_t v190 = v428[15];
    uint64_t v191 = &v426[v190];
    uint64_t v192 = &v430[v190];
    uint64_t v193 = *((void *)v192 + 1);
    *(void *)uint64_t v191 = *(void *)v192;
    *((void *)v191 + 1) = v193;
    uint64_t v194 = *((void *)v192 + 3);
    *((void *)v191 + 2) = *((void *)v192 + 2);
    *((void *)v191 + 3) = v194;
    uint64_t v195 = *((void *)v192 + 5);
    *((void *)v191 + 4) = *((void *)v192 + 4);
    *((void *)v191 + 5) = v195;
    uint64_t v196 = *((void *)v192 + 7);
    *((void *)v191 + 6) = *((void *)v192 + 6);
    *((void *)v191 + 7) = v196;
    uint64_t v197 = *((void *)v192 + 9);
    *((void *)v191 + 8) = *((void *)v192 + 8);
    *((void *)v191 + 9) = v197;
    uint64_t v198 = *((void *)v192 + 11);
    *((void *)v191 + 10) = *((void *)v192 + 10);
    *((void *)v191 + 11) = v198;
    uint64_t v199 = *((void *)v192 + 13);
    *((void *)v191 + 12) = *((void *)v192 + 12);
    *((void *)v191 + 13) = v199;
    uint64_t v200 = *(int *)(v415 + 64);
    uint64_t v201 = (void *)((char *)v421 + v200);
    uint64_t v202 = (void *)((char *)v417 + v200);
    type metadata accessor for NewsDataModel();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      void *v201 = *v202;
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v203 = type metadata accessor for News();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v203 - 8) + 16))(v201, v202, v203);
    }
    a2 = v424;
    a1 = v425;
    a3 = v423;
    swift_storeEnumTagMultiPayload();
    goto LABEL_59;
  }
  if (v19)
  {
    memcpy(v16, v17, *(void *)(*(void *)(v18 - 8) + 64));
    goto LABEL_60;
  }
  type metadata accessor for NewsDataModel();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *uint64_t v16 = *v17;
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v30 = type metadata accessor for News();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v30 - 8) + 16))(v16, v17, v30);
  }
  swift_storeEnumTagMultiPayload();
LABEL_59:
  swift_storeEnumTagMultiPayload();
LABEL_60:
  uint64_t v204 = a3[8];
  uint64_t v205 = (void *)((char *)a1 + v204);
  uint64_t v206 = (char *)a2 + v204;
  uint64_t v207 = *(void *)((char *)a2 + v204 + 8);
  void *v205 = *(void *)((char *)a2 + v204);
  v205[1] = v207;
  uint64_t v208 = (int *)type metadata accessor for WeatherData(0);
  uint64_t v209 = v208[5];
  uint64_t v210 = (char *)v205 + v209;
  uint64_t v211 = &v206[v209];
  uint64_t v212 = type metadata accessor for Locale();
  swift_bridgeObjectRetain();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v211, 1, v212))
  {
    uint64_t v213 = sub_10017DF08(&qword_100E63730);
    memcpy(v210, v211, *(void *)(*(void *)(v213 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v212 - 8) + 16))(v210, v211, v212);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v210, 0, 1, v212);
  }
  uint64_t v214 = v208[6];
  uint64_t v215 = (char *)v205 + v214;
  uint64_t v216 = &v206[v214];
  uint64_t v217 = type metadata accessor for WeatherDataModel();
  uint64_t v398 = *(void (**)(char *, char *, uint64_t))(*(void *)(v217 - 8) + 16);
  v398(v215, v216, v217);
  uint64_t v218 = v208[7];
  uint64_t v219 = (char *)v205 + v218;
  uint64_t v220 = &v206[v218];
  uint64_t v221 = sub_10017DF08(&qword_100E63738);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v220, 1, v221))
  {
    uint64_t v222 = type metadata accessor for WeatherData.CachingState(0);
    memcpy(v219, v220, *(void *)(*(void *)(v222 - 8) + 64));
  }
  else
  {
    uint64_t v223 = type metadata accessor for Date();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v223 - 8) + 16))(v219, v220, v223);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v219, 0, 1, v221);
  }
  uint64_t v224 = v208[8];
  uint64_t v225 = (void *)((char *)v205 + v224);
  uint64_t v226 = &v206[v224];
  uint64_t v227 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
  int v228 = swift_getEnumCaseMultiPayload();
  if (v228 == 1)
  {
    uint64_t v230 = type metadata accessor for WeatherStatisticsModel();
    (*(void (**)(void *, char *, uint64_t))(*(void *)(v230 - 8) + 16))(v225, v226, v230);
    goto LABEL_70;
  }
  if (!v228)
  {
    uint64_t v229 = *((void *)v226 + 1);
    *uint64_t v225 = *(void *)v226;
    v225[1] = v229;
    swift_bridgeObjectRetain();
LABEL_70:
    swift_storeEnumTagMultiPayload();
    goto LABEL_72;
  }
  memcpy(v225, v226, *(void *)(*(void *)(v227 - 8) + 64));
LABEL_72:
  uint64_t v231 = v208[9];
  uint64_t v232 = (char *)v205 + v231;
  uint64_t v233 = &v206[v231];
  uint64_t v234 = type metadata accessor for WeatherDataOverrides();
  uint64_t v422 = v217;
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v233, 1, v234))
  {
    uint64_t v235 = sub_10017DF08(&qword_100E63740);
    memcpy(v232, v233, *(void *)(*(void *)(v235 - 8) + 64));
  }
  else
  {
    uint64_t v236 = type metadata accessor for Date();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v233, 1, v236))
    {
      uint64_t v237 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
      memcpy(v232, v233, *(void *)(*(void *)(v237 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v236 - 8) + 16))(v232, v233, v236);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v232, 0, 1, v236);
    }
    uint64_t v238 = *(int *)(v234 + 20);
    uint64_t v239 = &v232[v238];
    uint64_t v240 = &v233[v238];
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v240, 1, v236))
    {
      uint64_t v241 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
      memcpy(v239, v240, *(void *)(*(void *)(v241 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v236 - 8) + 16))(v239, v240, v236);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v239, 0, 1, v236);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v232, 0, 1, v234);
  }
  uint64_t v242 = a3[9];
  uint64_t v243 = (char *)a1 + v242;
  uint64_t v244 = (char *)a2 + v242;
  uint64_t v245 = type metadata accessor for UUID();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v245 - 8) + 16))(v243, v244, v245);
  uint64_t v246 = type metadata accessor for PreprocessedWeatherData();
  *(void *)&v243[*(int *)(v246 + 20)] = *(void *)&v244[*(int *)(v246 + 20)];
  uint64_t v427 = v243;
  uint64_t v429 = (int *)v246;
  uint64_t v247 = *(int *)(v246 + 24);
  uint64_t v248 = &v243[v247];
  uint64_t v431 = v244;
  uint64_t v249 = &v244[v247];
  uint64_t v250 = *(void *)&v244[v247 + 8];
  *(void *)uint64_t v248 = *(void *)&v244[v247];
  *((void *)v248 + 1) = v250;
  uint64_t v251 = *(void *)&v244[v247 + 24];
  *((void *)v248 + 2) = *(void *)&v244[v247 + 16];
  *((void *)v248 + 3) = v251;
  uint64_t v252 = *(void *)&v244[v247 + 40];
  *((void *)v248 + 4) = *(void *)&v244[v247 + 32];
  *((void *)v248 + 5) = v252;
  uint64_t v253 = type metadata accessor for FeelsLikeComponentPreprocessedDataModel();
  uint64_t v254 = *(int *)(v253 + 28);
  uint64_t v255 = &v248[v254];
  uint64_t v256 = &v249[v254];
  uint64_t v257 = type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference(0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v256, 1, v257))
  {
    uint64_t v258 = sub_10017DF08(&qword_100E63750);
    memcpy(v255, v256, *(void *)(*(void *)(v258 - 8) + 64));
  }
  else
  {
    uint64_t v259 = *((void *)v256 + 1);
    *(void *)uint64_t v255 = *(void *)v256;
    *((void *)v255 + 1) = v259;
    uint64_t v260 = *(int *)(v257 + 20);
    uint64_t v261 = &v255[v260];
    uint64_t v262 = &v256[v260];
    uint64_t v263 = type metadata accessor for TemperatureScaleConfiguration();
    uint64_t v419 = *(void (**)(char *, char *, uint64_t))(*(void *)(v263 - 8) + 16);
    swift_bridgeObjectRetain();
    v419(v261, v262, v263);
    uint64_t v264 = (int *)type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
    *(void *)&v261[v264[5]] = *(void *)&v262[v264[5]];
    *(void *)&v261[v264[6]] = *(void *)&v262[v264[6]];
    *(void *)&v261[v264[7]] = *(void *)&v262[v264[7]];
    uint64_t v265 = v264[8];
    uint64_t v266 = &v261[v265];
    uint64_t v267 = &v262[v265];
    uint64_t v269 = *(void *)v267;
    uint64_t v268 = *((void *)v267 + 1);
    *(void *)uint64_t v266 = v269;
    *((void *)v266 + 1) = v268;
    v261[v264[9]] = v262[v264[9]];
    swift_bridgeObjectRetain();
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v255, 0, 1, v257);
  }
  uint64_t v270 = *(int *)(v253 + 32);
  uint64_t v271 = &v248[v270];
  uint64_t v272 = &v249[v270];
  uint64_t v273 = *((void *)v272 + 1);
  *(void *)uint64_t v271 = *(void *)v272;
  *((void *)v271 + 1) = v273;
  uint64_t v274 = v429[7];
  uint64_t v275 = &v427[v274];
  uint64_t v276 = &v431[v274];
  *(void *)&v427[v274] = *(void *)&v431[v274];
  uint64_t v277 = *(int *)(type metadata accessor for HourlyForecastComponentPreprocessedDataModel() + 20);
  uint64_t v278 = &v275[v277];
  v279 = &v276[v277];
  uint64_t v280 = type metadata accessor for WeatherDescription();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v279, 1, v280))
  {
    uint64_t v281 = sub_10017DF08(&qword_100E63758);
    memcpy(v278, v279, *(void *)(*(void *)(v281 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v280 - 8) + 16))(v278, v279, v280);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v278, 0, 1, v280);
  }
  uint64_t v282 = v429[8];
  uint64_t v283 = &v427[v282];
  uint64_t v284 = &v431[v282];
  uint64_t v285 = *(void *)&v431[v282 + 8];
  *(void *)uint64_t v283 = *(void *)&v431[v282];
  *((void *)v283 + 1) = v285;
  uint64_t v286 = *(void *)&v431[v282 + 24];
  *((void *)v283 + 2) = *(void *)&v431[v282 + 16];
  *((void *)v283 + 3) = v286;
  uint64_t v287 = *(void *)&v431[v282 + 40];
  *((void *)v283 + 4) = *(void *)&v431[v282 + 32];
  *((void *)v283 + 5) = v287;
  uint64_t v288 = *(void *)&v431[v282 + 56];
  *((void *)v283 + 6) = *(void *)&v431[v282 + 48];
  *((void *)v283 + 7) = v288;
  uint64_t v289 = *(int *)(type metadata accessor for ListPreprocessedDataModel() + 32);
  uint64_t v290 = &v283[v289];
  uint64_t v291 = &v284[v289];
  uint64_t v292 = type metadata accessor for Date();
  uint64_t v293 = *(void (**)(char *, char *, uint64_t))(*(void *)(v292 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v416 = v293;
  uint64_t v418 = v292;
  v293(v290, v291, v292);
  uint64_t v294 = type metadata accessor for WeatherConditionBackgroundTimeData();
  uint64_t v295 = *(int *)(v294 + 20);
  uint64_t v296 = &v290[v295];
  uint64_t v297 = &v291[v295];
  uint64_t v298 = type metadata accessor for Elevation();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v297, 1, v298))
  {
    uint64_t v299 = sub_10017DF08(&qword_100E63760);
    memcpy(v296, v297, *(void *)(*(void *)(v299 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v298 - 8) + 16))(v296, v297, v298);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v296, 0, 1, v298);
  }
  uint64_t v300 = *(int *)(v294 + 24);
  uint64_t v301 = &v290[v300];
  uint64_t v302 = &v291[v300];
  uint64_t v303 = type metadata accessor for BackgroundMoonData();
  uint64_t v420 = v294;
  uint64_t v410 = v303;
  uint64_t v412 = v298;
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v302, 1, v303))
  {
    uint64_t v304 = sub_10017DF08(&qword_100E63768);
    memcpy(v301, v302, *(void *)(*(void *)(v304 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v303 - 8) + 16))(v301, v302, v303);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v301, 0, 1, v303);
  }
  uint64_t v305 = v429[9];
  uint64_t v306 = &v427[v305];
  uint64_t v307 = &v431[v305];
  uint64_t v308 = *((void *)v307 + 1);
  *(void *)uint64_t v306 = *(void *)v307;
  *((void *)v306 + 1) = v308;
  uint64_t v309 = *((void *)v307 + 3);
  *((void *)v306 + 2) = *((void *)v307 + 2);
  *((void *)v306 + 3) = v309;
  uint64_t v310 = *((void *)v307 + 5);
  *((void *)v306 + 4) = *((void *)v307 + 4);
  *((void *)v306 + 5) = v310;
  uint64_t v311 = *((void *)v307 + 7);
  *((void *)v306 + 6) = *((void *)v307 + 6);
  *((void *)v306 + 7) = v311;
  uint64_t v312 = *((void *)v307 + 9);
  *((void *)v306 + 8) = *((void *)v307 + 8);
  *((void *)v306 + 9) = v312;
  uint64_t v313 = *((void *)v307 + 11);
  *((void *)v306 + 10) = *((void *)v307 + 10);
  *((void *)v306 + 11) = v313;
  uint64_t v314 = *((void *)v307 + 13);
  *((void *)v306 + 12) = *((void *)v307 + 12);
  *((void *)v306 + 13) = v314;
  uint64_t v315 = v429[10];
  uint64_t v316 = &v427[v315];
  uint64_t v317 = &v431[v315];
  uint64_t v407 = *(void (**)(char *, char *, uint64_t))(*(void *)(v280 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v407(v316, v317, v280);
  uint64_t v318 = *(int *)(type metadata accessor for UVIndexComponentPreprocessedDataModel() + 20);
  uint64_t v319 = &v316[v318];
  uint64_t v320 = &v317[v318];
  uint64_t v321 = *((void *)v320 + 1);
  *(void *)uint64_t v319 = *(void *)v320;
  *((void *)v319 + 1) = v321;
  uint64_t v322 = v429[11];
  uint64_t v323 = &v427[v322];
  uint64_t v324 = &v431[v322];
  uint64_t v325 = *((void *)v324 + 1);
  *(void *)uint64_t v323 = *(void *)v324;
  *((void *)v323 + 1) = v325;
  uint64_t v326 = *((void *)v324 + 3);
  *((void *)v323 + 2) = *((void *)v324 + 2);
  *((void *)v323 + 3) = v326;
  uint64_t v327 = *((void *)v324 + 5);
  *((void *)v323 + 4) = *((void *)v324 + 4);
  *((void *)v323 + 5) = v327;
  uint64_t v328 = v429[12];
  uint64_t v329 = &v427[v328];
  uint64_t v330 = &v431[v328];
  uint64_t v331 = type metadata accessor for PressureTrend();
  uint64_t v332 = *(void (**)(char *, char *, uint64_t))(*(void *)(v331 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v332(v329, v330, v331);
  uint64_t v333 = (int *)type metadata accessor for PressureComponentPreprocessedDataModel();
  uint64_t v334 = v333[5];
  uint64_t v335 = &v329[v334];
  uint64_t v336 = &v330[v334];
  uint64_t v337 = *((void *)v336 + 1);
  *(void *)uint64_t v335 = *(void *)v336;
  *((void *)v335 + 1) = v337;
  uint64_t v338 = v333[6];
  uint64_t v339 = &v329[v338];
  uint64_t v340 = &v330[v338];
  uint64_t v408 = *((void *)v340 + 1);
  *(void *)uint64_t v339 = *(void *)v340;
  *((void *)v339 + 1) = v408;
  uint64_t v341 = v333[7];
  uint64_t v342 = &v329[v341];
  uint64_t v343 = &v330[v341];
  uint64_t v406 = *((void *)v343 + 1);
  *(void *)uint64_t v342 = *(void *)v343;
  *((void *)v342 + 1) = v406;
  *(void *)&v329[v333[8]] = *(void *)&v330[v333[8]];
  uint64_t v344 = v333[9];
  long long v345 = &v329[v344];
  uint64_t v346 = &v330[v344];
  uint64_t v404 = *((void *)v346 + 1);
  *(void *)long long v345 = *(void *)v346;
  *((void *)v345 + 1) = v404;
  uint64_t v347 = v429[13];
  uint64_t v348 = &v427[v347];
  uint64_t v349 = &v431[v347];
  uint64_t v350 = *((void *)v349 + 1);
  *(void *)uint64_t v348 = *(void *)v349;
  *((void *)v348 + 1) = v350;
  uint64_t v351 = *((void *)v349 + 3);
  *((void *)v348 + 2) = *((void *)v349 + 2);
  *((void *)v348 + 3) = v351;
  uint64_t v352 = *((void *)v349 + 5);
  *((void *)v348 + 4) = *((void *)v349 + 4);
  *((void *)v348 + 5) = v352;
  uint64_t v353 = *((void *)v349 + 7);
  *((void *)v348 + 6) = *((void *)v349 + 6);
  *((void *)v348 + 7) = v353;
  uint64_t v354 = *((void *)v349 + 9);
  *((void *)v348 + 8) = *((void *)v349 + 8);
  *((void *)v348 + 9) = v354;
  uint64_t v355 = *((void *)v349 + 11);
  *((void *)v348 + 10) = *((void *)v349 + 10);
  *((void *)v348 + 11) = v355;
  uint64_t v356 = *((void *)v349 + 13);
  *((void *)v348 + 12) = *((void *)v349 + 12);
  *((void *)v348 + 13) = v356;
  uint64_t v357 = *((void *)v349 + 15);
  *((void *)v348 + 14) = *((void *)v349 + 14);
  *((void *)v348 + 15) = v357;
  uint64_t v358 = *((void *)v349 + 17);
  *((void *)v348 + 16) = *((void *)v349 + 16);
  *((void *)v348 + 17) = v358;
  uint64_t v359 = *((void *)v349 + 19);
  *((void *)v348 + 18) = *((void *)v349 + 18);
  *((void *)v348 + 19) = v359;
  uint64_t v360 = *((void *)v349 + 21);
  *((void *)v348 + 20) = *((void *)v349 + 20);
  *((void *)v348 + 21) = v360;
  uint64_t v361 = *((void *)v349 + 23);
  *((void *)v348 + 22) = *((void *)v349 + 22);
  *((void *)v348 + 23) = v361;
  uint64_t v362 = *((void *)v349 + 25);
  *((void *)v348 + 24) = *((void *)v349 + 24);
  *((void *)v348 + 25) = v362;
  *((_OWORD *)v348 + 13) = *((_OWORD *)v349 + 13);
  *((void *)v348 + 28) = *((void *)v349 + 28);
  uint64_t v363 = v429[14];
  uint64_t v364 = &v427[v363];
  uint64_t v365 = &v431[v363];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v416(v364, v365, v418);
  uint64_t v366 = *(int *)(v420 + 20);
  uint64_t v367 = &v364[v366];
  uint64_t v368 = &v365[v366];
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v365[v366], 1, v412))
  {
    uint64_t v369 = sub_10017DF08(&qword_100E63760);
    memcpy(v367, v368, *(void *)(*(void *)(v369 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v412 - 8) + 16))(v367, v368, v412);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v367, 0, 1, v412);
  }
  uint64_t v370 = *(int *)(v420 + 24);
  uint64_t v371 = &v364[v370];
  uint64_t v372 = &v365[v370];
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v365[v370], 1, v410))
  {
    uint64_t v373 = sub_10017DF08(&qword_100E63768);
    memcpy(v371, v372, *(void *)(*(void *)(v373 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v410 - 8) + 16))(v371, v372, v410);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v371, 0, 1, v410);
  }
  uint64_t v374 = v429[15];
  uint64_t v375 = &v427[v374];
  uint64_t v376 = &v431[v374];
  uint64_t v377 = *((void *)v376 + 1);
  *(void *)uint64_t v375 = *(void *)v376;
  *((void *)v375 + 1) = v377;
  uint64_t v378 = *((void *)v376 + 3);
  *((void *)v375 + 2) = *((void *)v376 + 2);
  *((void *)v375 + 3) = v378;
  uint64_t v379 = *((void *)v376 + 5);
  *((void *)v375 + 4) = *((void *)v376 + 4);
  *((void *)v375 + 5) = v379;
  uint64_t v380 = *((void *)v376 + 7);
  *((void *)v375 + 6) = *((void *)v376 + 6);
  *((void *)v375 + 7) = v380;
  uint64_t v381 = *((void *)v376 + 9);
  *((void *)v375 + 8) = *((void *)v376 + 8);
  *((void *)v375 + 9) = v381;
  uint64_t v382 = *((void *)v376 + 11);
  *((void *)v375 + 10) = *((void *)v376 + 10);
  *((void *)v375 + 11) = v382;
  uint64_t v383 = *((void *)v376 + 13);
  *((void *)v375 + 12) = *((void *)v376 + 12);
  *((void *)v375 + 13) = v383;
  uint64_t v384 = v423[10];
  uint64_t v385 = (void *)((char *)v425 + v384);
  uint64_t v386 = (void *)((char *)v424 + v384);
  type metadata accessor for NewsDataModel();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *uint64_t v385 = *v386;
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v387 = type metadata accessor for News();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v387 - 8) + 16))(v385, v386, v387);
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v388 = v423[11];
  uint64_t v389 = v423[12];
  uint64_t v390 = (void *)((char *)v425 + v388);
  uint64_t v391 = (void *)((char *)v424 + v388);
  uint64_t v392 = v391[1];
  *uint64_t v390 = *v391;
  v390[1] = v392;
  uint64_t v393 = (char *)v425 + v389;
  uint64_t v394 = (char *)v424 + v389;
  swift_retain();
  v398(v393, v394, v422);
  uint64_t v395 = sub_10017DF08(&qword_100EA6858);
  *(void *)&v393[*(int *)(v395 + 28)] = *(void *)&v394[*(int *)(v395 + 28)];
  swift_retain();
  return v425;
}

void *sub_1009C1ABC(uint64_t a1, void *a2, int *a3)
{
  uint64_t v4 = a2;
  uint64_t v5 = (void *)a1;
  if ((void *)a1 != a2)
  {
    sub_1009CAF70(a1, &qword_100E65310);
    sub_10017DF08(&qword_100E65310);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *uint64_t v5 = *v4;
    if (EnumCaseMultiPayload == 1)
    {
      v5[1] = v4[1];
      swift_retain();
      swift_retain();
      uint64_t v7 = *(int *)(sub_10017DF08(&qword_100E669A0) + 32);
      uint64_t v8 = (char *)v5 + v7;
      uint64_t v9 = (char *)v4 + v7;
      uint64_t v10 = type metadata accessor for PresentationMode();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    }
    else
    {
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v11 = a3[5];
  uint64_t v12 = (char *)v5 + v11;
  uint64_t v13 = (char *)v4 + v11;
  uint64_t v14 = type metadata accessor for LocationModel();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  *(void *)((char *)v5 + a3[6]) = *(void *)((char *)v4 + a3[6]);
  uint64_t v367 = a3;
  uint64_t v368 = v4;
  uint64_t v369 = v5;
  if (v5 != v4)
  {
    uint64_t v15 = a3[7];
    uint64_t v16 = (void *)((char *)v5 + v15);
    uint64_t v17 = (void *)((char *)v4 + v15);
    sub_10015695C((uint64_t)v5 + v15, (void (*)(void))type metadata accessor for LocationWeatherDataState);
    uint64_t v18 = type metadata accessor for LocationWeatherDataState(0);
    int v19 = swift_getEnumCaseMultiPayload();
    if (v19 == 2)
    {
      *uint64_t v16 = *v17;
      v16[1] = v17[1];
      unint64_t v20 = v17[3];
      swift_bridgeObjectRetain();
      if (v20 >= 0xE)
      {
        v16[2] = v17[2];
        void v16[3] = v17[3];
        swift_bridgeObjectRetain();
      }
      else
      {
        *((_OWORD *)v16 + 1) = *((_OWORD *)v17 + 1);
      }
LABEL_62:
      swift_storeEnumTagMultiPayload();
      goto LABEL_63;
    }
    if (v19 != 1)
    {
      if (v19)
      {
        memcpy(v16, v17, *(void *)(*(void *)(v18 - 8) + 64));
        goto LABEL_63;
      }
      type metadata accessor for NewsDataModel();
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        *uint64_t v16 = *v17;
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v27 = type metadata accessor for News();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v27 - 8) + 16))(v16, v17, v27);
      }
      swift_storeEnumTagMultiPayload();
      goto LABEL_62;
    }
    *uint64_t v16 = *v17;
    v16[1] = v17[1];
    uint64_t v21 = (int *)type metadata accessor for WeatherData(0);
    uint64_t v22 = v21[5];
    uint64_t v23 = (char *)v16 + v22;
    uint64_t v364 = v17;
    uint64_t v24 = (char *)v17 + v22;
    uint64_t v25 = type metadata accessor for Locale();
    swift_bridgeObjectRetain();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v24, 1, v25))
    {
      uint64_t v26 = sub_10017DF08(&qword_100E63730);
      memcpy(v23, v24, *(void *)(*(void *)(v26 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 16))(v23, v24, v25);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v23, 0, 1, v25);
    }
    uint64_t v28 = v21[6];
    uint64_t v29 = (char *)v16 + v28;
    uint64_t v30 = (char *)v364 + v28;
    uint64_t v31 = type metadata accessor for WeatherDataModel();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16))(v29, v30, v31);
    uint64_t v32 = v21[7];
    uint64_t v33 = (char *)v16 + v32;
    uint64_t v34 = (char *)v364 + v32;
    uint64_t v35 = sub_10017DF08(&qword_100E63738);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v34, 1, v35))
    {
      uint64_t v36 = type metadata accessor for WeatherData.CachingState(0);
      memcpy(v33, v34, *(void *)(*(void *)(v36 - 8) + 64));
    }
    else
    {
      uint64_t v37 = type metadata accessor for Date();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 16))(v33, v34, v37);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v33, 0, 1, v35);
    }
    uint64_t v38 = v21[8];
    uint64_t v39 = (void *)((char *)v16 + v38);
    uint64_t v40 = (void *)((char *)v364 + v38);
    uint64_t v41 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
    int v42 = swift_getEnumCaseMultiPayload();
    if (v42 == 1)
    {
      uint64_t v43 = type metadata accessor for WeatherStatisticsModel();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v43 - 8) + 16))(v39, v40, v43);
    }
    else
    {
      if (v42)
      {
        memcpy(v39, v40, *(void *)(*(void *)(v41 - 8) + 64));
        goto LABEL_31;
      }
      void *v39 = *v40;
      v39[1] = v40[1];
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
LABEL_31:
    uint64_t v44 = v21[9];
    int v45 = (char *)v16 + v44;
    uint64_t v46 = (char *)v364 + v44;
    uint64_t v47 = type metadata accessor for WeatherDataOverrides();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v46, 1, v47))
    {
      uint64_t v48 = sub_10017DF08(&qword_100E63740);
      memcpy(v45, v46, *(void *)(*(void *)(v48 - 8) + 64));
      uint64_t v49 = v364;
    }
    else
    {
      uint64_t v50 = type metadata accessor for Date();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v46, 1, v50))
      {
        uint64_t v51 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
        memcpy(v45, v46, *(void *)(*(void *)(v51 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v50 - 8) + 16))(v45, v46, v50);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v45, 0, 1, v50);
      }
      uint64_t v52 = *(int *)(v47 + 20);
      uint64_t v53 = &v45[v52];
      uint64_t v54 = &v46[v52];
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v54, 1, v50))
      {
        uint64_t v55 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
        memcpy(v53, v54, *(void *)(*(void *)(v55 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v50 - 8) + 16))(v53, v54, v50);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v53, 0, 1, v50);
      }
      uint64_t v49 = v364;
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v45, 0, 1, v47);
    }
    uint64_t v56 = sub_10017DF08(&qword_100E63748);
    uint64_t v57 = *(int *)(v56 + 48);
    uint64_t v362 = v16;
    uint64_t v58 = (char *)v16 + v57;
    uint64_t v59 = (uint64_t)v49 + v57;
    uint64_t v60 = type metadata accessor for UUID();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v60 - 8) + 16))(v58, v59, v60);
    uint64_t v61 = type metadata accessor for PreprocessedWeatherData();
    *(void *)&v58[*(int *)(v61 + 20)] = *(void *)(v59 + *(int *)(v61 + 20));
    uint64_t v372 = v58;
    uint64_t v374 = (int *)v61;
    uint64_t v62 = *(int *)(v61 + 24);
    uint64_t v63 = &v58[v62];
    uint64_t v370 = v59;
    uint64_t v64 = v59 + v62;
    *(void *)uint64_t v63 = *(void *)(v59 + v62);
    *((void *)v63 + 1) = *(void *)(v59 + v62 + 8);
    *((void *)v63 + 2) = *(void *)(v59 + v62 + 16);
    *((void *)v63 + 3) = *(void *)(v59 + v62 + 24);
    *((void *)v63 + 4) = *(void *)(v59 + v62 + 32);
    *((void *)v63 + 5) = *(void *)(v59 + v62 + 40);
    uint64_t v361 = type metadata accessor for FeelsLikeComponentPreprocessedDataModel();
    uint64_t v65 = *(int *)(v361 + 28);
    uint64_t v66 = &v63[v65];
    uint64_t v67 = (void *)(v64 + v65);
    uint64_t v68 = type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference(0);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v354 = v56;
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v67, 1, v68))
    {
      uint64_t v69 = sub_10017DF08(&qword_100E63750);
      memcpy(v66, v67, *(void *)(*(void *)(v69 - 8) + 64));
    }
    else
    {
      *(void *)uint64_t v66 = *v67;
      *((void *)v66 + 1) = v67[1];
      uint64_t v70 = *(int *)(v68 + 20);
      uint64_t v71 = &v66[v70];
      uint64_t v72 = (char *)v67 + v70;
      uint64_t v73 = type metadata accessor for TemperatureScaleConfiguration();
      uint64_t v74 = *(void (**)(char *, char *, uint64_t))(*(void *)(v73 - 8) + 16);
      swift_bridgeObjectRetain();
      v74(v71, v72, v73);
      uint64_t v75 = (int *)type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
      *(void *)&v71[v75[5]] = *(void *)&v72[v75[5]];
      *(void *)&v71[v75[6]] = *(void *)&v72[v75[6]];
      *(void *)&v71[v75[7]] = *(void *)&v72[v75[7]];
      uint64_t v76 = v75[8];
      uint64_t v77 = &v71[v76];
      uint64_t v78 = &v72[v76];
      *(void *)uint64_t v77 = *(void *)v78;
      *((void *)v77 + 1) = *((void *)v78 + 1);
      v71[v75[9]] = v72[v75[9]];
      swift_bridgeObjectRetain();
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v66, 0, 1, v68);
    }
    uint64_t v79 = *(int *)(v361 + 32);
    uint64_t v80 = &v63[v79];
    uint64_t v81 = (void *)(v64 + v79);
    *(void *)uint64_t v80 = *v81;
    *((void *)v80 + 1) = v81[1];
    uint64_t v82 = v374[7];
    uint64_t v83 = &v372[v82];
    uint64_t v84 = v370 + v82;
    *(void *)&v372[v82] = *(void *)(v370 + v82);
    uint64_t v85 = *(int *)(type metadata accessor for HourlyForecastComponentPreprocessedDataModel() + 20);
    uint64_t v86 = &v83[v85];
    uint64_t v87 = (const void *)(v84 + v85);
    uint64_t v88 = type metadata accessor for WeatherDescription();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v356 = v88;
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v87, 1, v88))
    {
      uint64_t v89 = sub_10017DF08(&qword_100E63758);
      memcpy(v86, v87, *(void *)(*(void *)(v89 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, const void *, uint64_t))(*(void *)(v88 - 8) + 16))(v86, v87, v88);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v86, 0, 1, v88);
    }
    uint64_t v90 = v374[8];
    uint64_t v91 = &v372[v90];
    uint64_t v92 = v370 + v90;
    *(void *)uint64_t v91 = *(void *)(v370 + v90);
    *((void *)v91 + 1) = *(void *)(v370 + v90 + 8);
    *((void *)v91 + 2) = *(void *)(v370 + v90 + 16);
    *((void *)v91 + 3) = *(void *)(v370 + v90 + 24);
    *((void *)v91 + 4) = *(void *)(v370 + v90 + 32);
    *((void *)v91 + 5) = *(void *)(v370 + v90 + 40);
    *((void *)v91 + 6) = *(void *)(v370 + v90 + 48);
    *((void *)v91 + 7) = *(void *)(v370 + v90 + 56);
    uint64_t v93 = *(int *)(type metadata accessor for ListPreprocessedDataModel() + 32);
    uint64_t v94 = &v91[v93];
    uint64_t v95 = v92 + v93;
    uint64_t v96 = type metadata accessor for Date();
    uint64_t v97 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v96 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v357 = v97;
    v97(v94, v95, v96);
    uint64_t v98 = type metadata accessor for WeatherConditionBackgroundTimeData();
    uint64_t v99 = *(int *)(v98 + 20);
    uint64_t v100 = &v94[v99];
    uint64_t v101 = (const void *)(v95 + v99);
    uint64_t v102 = type metadata accessor for Elevation();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v101, 1, v102))
    {
      uint64_t v103 = sub_10017DF08(&qword_100E63760);
      memcpy(v100, v101, *(void *)(*(void *)(v103 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, const void *, uint64_t))(*(void *)(v102 - 8) + 16))(v100, v101, v102);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v100, 0, 1, v102);
    }
    uint64_t v104 = *(int *)(v98 + 24);
    uint64_t v105 = &v94[v104];
    uint64_t v106 = (const void *)(v95 + v104);
    uint64_t v107 = type metadata accessor for BackgroundMoonData();
    uint64_t v359 = v96;
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v106, 1, v107))
    {
      uint64_t v108 = sub_10017DF08(&qword_100E63768);
      memcpy(v105, v106, *(void *)(*(void *)(v108 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, const void *, uint64_t))(*(void *)(v107 - 8) + 16))(v105, v106, v107);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v105, 0, 1, v107);
    }
    uint64_t v109 = v374[9];
    uint64_t v110 = &v372[v109];
    uint64_t v111 = (void *)(v370 + v109);
    *(void *)uint64_t v110 = *v111;
    *((void *)v110 + 1) = v111[1];
    *((void *)v110 + 2) = v111[2];
    *((void *)v110 + 3) = v111[3];
    *((void *)v110 + 4) = v111[4];
    *((void *)v110 + 5) = v111[5];
    *((void *)v110 + 6) = v111[6];
    *((void *)v110 + 7) = v111[7];
    *((void *)v110 + 8) = v111[8];
    *((void *)v110 + 9) = v111[9];
    *((void *)v110 + 10) = v111[10];
    *((void *)v110 + 11) = v111[11];
    *((void *)v110 + 12) = v111[12];
    *((void *)v110 + 13) = v111[13];
    uint64_t v112 = v374[10];
    uint64_t v113 = &v372[v112];
    uint64_t v114 = v370 + v112;
    uint64_t v355 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v356 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v355(v113, v114, v356);
    uint64_t v115 = *(int *)(type metadata accessor for UVIndexComponentPreprocessedDataModel() + 20);
    uint64_t v116 = &v113[v115];
    uint64_t v117 = (void *)(v114 + v115);
    *(void *)uint64_t v116 = *v117;
    *((void *)v116 + 1) = v117[1];
    uint64_t v118 = v374[11];
    uint64_t v119 = &v372[v118];
    uint64_t v120 = (void *)(v370 + v118);
    *(void *)uint64_t v119 = *v120;
    *((void *)v119 + 1) = v120[1];
    *((void *)v119 + 2) = v120[2];
    *((void *)v119 + 3) = v120[3];
    *((void *)v119 + 4) = v120[4];
    *((void *)v119 + 5) = v120[5];
    uint64_t v121 = v374[12];
    uint64_t v122 = &v372[v121];
    uint64_t v123 = v370 + v121;
    uint64_t v124 = type metadata accessor for PressureTrend();
    uint64_t v125 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v124 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v125(v122, v123, v124);
    uint64_t v126 = (int *)type metadata accessor for PressureComponentPreprocessedDataModel();
    uint64_t v127 = v126[5];
    uint64_t v128 = &v122[v127];
    uint64_t v129 = (void *)(v123 + v127);
    *(void *)uint64_t v128 = *v129;
    *((void *)v128 + 1) = v129[1];
    uint64_t v130 = v126[6];
    uint64_t v131 = &v122[v130];
    uint64_t v132 = (void *)(v123 + v130);
    *(void *)uint64_t v131 = *v132;
    *((void *)v131 + 1) = v132[1];
    uint64_t v133 = v126[7];
    uint64_t v134 = &v122[v133];
    uint64_t v135 = (void *)(v123 + v133);
    *(void *)uint64_t v134 = *v135;
    *((void *)v134 + 1) = v135[1];
    *(void *)&v122[v126[8]] = *(void *)(v123 + v126[8]);
    uint64_t v136 = v126[9];
    uint64_t v137 = &v122[v136];
    uint64_t v138 = (void *)(v123 + v136);
    *(void *)uint64_t v137 = *v138;
    *((void *)v137 + 1) = v138[1];
    uint64_t v139 = v374[13];
    uint64_t v140 = &v372[v139];
    uint64_t v141 = (void *)(v370 + v139);
    *(void *)uint64_t v140 = *v141;
    *((void *)v140 + 1) = v141[1];
    *((void *)v140 + 2) = v141[2];
    *((void *)v140 + 3) = v141[3];
    *((void *)v140 + 4) = v141[4];
    *((void *)v140 + 5) = v141[5];
    *((void *)v140 + 6) = v141[6];
    *((void *)v140 + 7) = v141[7];
    *((void *)v140 + 8) = v141[8];
    *((void *)v140 + 9) = v141[9];
    *((void *)v140 + 10) = v141[10];
    *((void *)v140 + 11) = v141[11];
    *((void *)v140 + 12) = v141[12];
    *((void *)v140 + 13) = v141[13];
    *((void *)v140 + 14) = v141[14];
    *((void *)v140 + 15) = v141[15];
    *((void *)v140 + 16) = v141[16];
    *((void *)v140 + 17) = v141[17];
    *((void *)v140 + 18) = v141[18];
    *((void *)v140 + 19) = v141[19];
    *((void *)v140 + 20) = v141[20];
    *((void *)v140 + 21) = v141[21];
    *((void *)v140 + 22) = v141[22];
    *((void *)v140 + 23) = v141[23];
    *((void *)v140 + 24) = v141[24];
    *((void *)v140 + 25) = v141[25];
    *((void *)v140 + 26) = v141[26];
    *((void *)v140 + 27) = v141[27];
    *((void *)v140 + 28) = v141[28];
    uint64_t v142 = v374[14];
    uint64_t v143 = &v372[v142];
    uint64_t v144 = v370 + v142;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v357(v143, v144, v359);
    uint64_t v145 = *(int *)(v98 + 20);
    uint64_t v146 = &v143[v145];
    uint64_t v147 = (const void *)(v144 + v145);
    if (_s7Weather24LocationCompositionStateOwet_0(v144 + v145, 1, v102))
    {
      uint64_t v148 = sub_10017DF08(&qword_100E63760);
      memcpy(v146, v147, *(void *)(*(void *)(v148 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, const void *, uint64_t))(*(void *)(v102 - 8) + 16))(v146, v147, v102);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v146, 0, 1, v102);
    }
    uint64_t v149 = *(int *)(v98 + 24);
    uint64_t v150 = &v143[v149];
    uint64_t v151 = (const void *)(v144 + v149);
    if (_s7Weather24LocationCompositionStateOwet_0(v144 + v149, 1, v107))
    {
      uint64_t v152 = sub_10017DF08(&qword_100E63768);
      memcpy(v150, v151, *(void *)(*(void *)(v152 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, const void *, uint64_t))(*(void *)(v107 - 8) + 16))(v150, v151, v107);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v150, 0, 1, v107);
    }
    uint64_t v153 = v374[15];
    uint64_t v154 = &v372[v153];
    uint64_t v155 = (void *)(v370 + v153);
    *(void *)uint64_t v154 = *v155;
    *((void *)v154 + 1) = v155[1];
    *((void *)v154 + 2) = v155[2];
    *((void *)v154 + 3) = v155[3];
    *((void *)v154 + 4) = v155[4];
    *((void *)v154 + 5) = v155[5];
    *((void *)v154 + 6) = v155[6];
    *((void *)v154 + 7) = v155[7];
    *((void *)v154 + 8) = v155[8];
    *((void *)v154 + 9) = v155[9];
    *((void *)v154 + 10) = v155[10];
    *((void *)v154 + 11) = v155[11];
    *((void *)v154 + 12) = v155[12];
    *((void *)v154 + 13) = v155[13];
    uint64_t v156 = *(int *)(v354 + 64);
    uint64_t v157 = (void *)((char *)v362 + v156);
    uint64_t v158 = (void *)((char *)v364 + v156);
    type metadata accessor for NewsDataModel();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *uint64_t v157 = *v158;
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v159 = type metadata accessor for News();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v159 - 8) + 16))(v157, v158, v159);
    }
    uint64_t v4 = v368;
    uint64_t v5 = v369;
    a3 = v367;
    swift_storeEnumTagMultiPayload();
    goto LABEL_62;
  }
LABEL_63:
  uint64_t v160 = a3[8];
  uint64_t v161 = (void *)((char *)v5 + v160);
  uint64_t v162 = (char *)v4 + v160;
  *uint64_t v161 = *(void *)((char *)v4 + v160);
  v161[1] = *(void *)((char *)v4 + v160 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v163 = (int *)type metadata accessor for WeatherData(0);
  uint64_t v164 = v163[5];
  uint64_t v165 = (char *)v161 + v164;
  uint64_t v166 = &v162[v164];
  uint64_t v167 = type metadata accessor for Locale();
  int v168 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v165, 1, v167);
  int v169 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v166, 1, v167);
  if (v168)
  {
    if (!v169)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v167 - 8) + 16))(v165, v166, v167);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v165, 0, 1, v167);
      goto LABEL_69;
    }
    goto LABEL_68;
  }
  uint64_t v170 = *(void *)(v167 - 8);
  if (v169)
  {
    (*(void (**)(char *, uint64_t))(v170 + 8))(v165, v167);
LABEL_68:
    uint64_t v171 = sub_10017DF08(&qword_100E63730);
    memcpy(v165, v166, *(void *)(*(void *)(v171 - 8) + 64));
    goto LABEL_69;
  }
  (*(void (**)(char *, char *, uint64_t))(v170 + 24))(v165, v166, v167);
LABEL_69:
  uint64_t v172 = v163[6];
  uint64_t v173 = (char *)v161 + v172;
  uint64_t v174 = &v162[v172];
  uint64_t v175 = type metadata accessor for WeatherDataModel();
  uint64_t v358 = *(void (**)(char *, char *))(*(void *)(v175 - 8) + 24);
  uint64_t v360 = v175;
  v358(v173, v174);
  uint64_t v176 = v163[7];
  uint64_t v177 = (char *)v161 + v176;
  uint64_t v178 = &v162[v176];
  uint64_t v179 = sub_10017DF08(&qword_100E63738);
  int v180 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v177, 1, v179);
  int v181 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v178, 1, v179);
  if (v180)
  {
    if (!v181)
    {
      uint64_t v182 = type metadata accessor for Date();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v182 - 8) + 16))(v177, v178, v182);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v177, 0, 1, v179);
      goto LABEL_75;
    }
    goto LABEL_74;
  }
  if (v181)
  {
    sub_1009CAF70((uint64_t)v177, &qword_100E63738);
LABEL_74:
    uint64_t v183 = type metadata accessor for WeatherData.CachingState(0);
    memcpy(v177, v178, *(void *)(*(void *)(v183 - 8) + 64));
    goto LABEL_75;
  }
  uint64_t v201 = type metadata accessor for Date();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v201 - 8) + 24))(v177, v178, v201);
LABEL_75:
  if (v5 == v4) {
    goto LABEL_82;
  }
  uint64_t v184 = v163[8];
  uint64_t v185 = (void *)((char *)v161 + v184);
  uint64_t v186 = &v162[v184];
  sub_10015695C((uint64_t)v161 + v184, (void (*)(void))type metadata accessor for WeatherData.WeatherStatisticsState);
  uint64_t v187 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
  int v188 = swift_getEnumCaseMultiPayload();
  if (v188 == 1)
  {
    uint64_t v189 = type metadata accessor for WeatherStatisticsModel();
    (*(void (**)(void *, char *, uint64_t))(*(void *)(v189 - 8) + 16))(v185, v186, v189);
    goto LABEL_80;
  }
  if (!v188)
  {
    *uint64_t v185 = *(void *)v186;
    v185[1] = *((void *)v186 + 1);
    swift_bridgeObjectRetain();
LABEL_80:
    swift_storeEnumTagMultiPayload();
    goto LABEL_82;
  }
  memcpy(v185, v186, *(void *)(*(void *)(v187 - 8) + 64));
LABEL_82:
  uint64_t v190 = v163[9];
  uint64_t v191 = (char *)v161 + v190;
  uint64_t v192 = &v162[v190];
  uint64_t v193 = type metadata accessor for WeatherDataOverrides();
  int v194 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v191, 1, v193);
  int v195 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v192, 1, v193);
  if (v194)
  {
    if (!v195)
    {
      uint64_t v196 = type metadata accessor for Date();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v192, 1, v196))
      {
        uint64_t v197 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
        memcpy(v191, v192, *(void *)(*(void *)(v197 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v196 - 8) + 16))(v191, v192, v196);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v191, 0, 1, v196);
      }
      uint64_t v205 = *(int *)(v193 + 20);
      uint64_t v206 = &v191[v205];
      uint64_t v207 = &v192[v205];
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v207, 1, v196))
      {
        uint64_t v208 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
        memcpy(v206, v207, *(void *)(*(void *)(v208 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v196 - 8) + 16))(v206, v207, v196);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v206, 0, 1, v196);
      }
      uint64_t v209 = (uint64_t)v191;
      uint64_t v210 = v193;
      goto LABEL_100;
    }
    goto LABEL_88;
  }
  if (v195)
  {
    sub_10015695C((uint64_t)v191, (void (*)(void))type metadata accessor for WeatherDataOverrides);
LABEL_88:
    size_t v198 = *(void *)(*(void *)(sub_10017DF08(&qword_100E63740) - 8) + 64);
    uint64_t v199 = v191;
    uint64_t v200 = v192;
LABEL_89:
    memcpy(v199, v200, v198);
    goto LABEL_101;
  }
  uint64_t v202 = type metadata accessor for Date();
  int v203 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v191, 1, v202);
  int v204 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v192, 1, v202);
  if (v203)
  {
    if (!v204)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v202 - 8) + 16))(v191, v192, v202);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v191, 0, 1, v202);
      goto LABEL_152;
    }
    goto LABEL_151;
  }
  uint64_t v346 = *(void *)(v202 - 8);
  if (v204)
  {
    (*(void (**)(char *, uint64_t))(v346 + 8))(v191, v202);
LABEL_151:
    uint64_t v347 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    memcpy(v191, v192, *(void *)(*(void *)(v347 - 8) + 64));
    goto LABEL_152;
  }
  (*(void (**)(char *, char *, uint64_t))(v346 + 24))(v191, v192, v202);
LABEL_152:
  uint64_t v348 = *(int *)(v193 + 20);
  uint64_t v349 = &v191[v348];
  uint64_t v350 = (uint64_t)&v192[v348];
  int v351 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)&v191[v348], 1, v202);
  int v352 = _s7Weather24LocationCompositionStateOwet_0(v350, 1, v202);
  if (v351)
  {
    if (!v352)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v202 - 8) + 16))(v349, v350, v202);
      uint64_t v209 = (uint64_t)v349;
      uint64_t v210 = v202;
LABEL_100:
      _s7Weather24LocationCompositionStateOwst_0(v209, 0, 1, v210);
      goto LABEL_101;
    }
    goto LABEL_157;
  }
  uint64_t v353 = *(void *)(v202 - 8);
  if (v352)
  {
    (*(void (**)(char *, uint64_t))(v353 + 8))(v349, v202);
LABEL_157:
    size_t v198 = *(void *)(*(void *)(sub_10017DF08((uint64_t *)&unk_100E73CA0) - 8) + 64);
    uint64_t v199 = v349;
    uint64_t v200 = (const void *)v350;
    goto LABEL_89;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v353 + 24))(v349, v350, v202);
LABEL_101:
  uint64_t v211 = a3[9];
  uint64_t v212 = (char *)v5 + v211;
  uint64_t v213 = (char *)v4 + v211;
  uint64_t v214 = type metadata accessor for UUID();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v214 - 8) + 24))(v212, v213, v214);
  uint64_t v215 = type metadata accessor for PreprocessedWeatherData();
  *(void *)&v212[*(int *)(v215 + 20)] = *(void *)&v213[*(int *)(v215 + 20)];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v373 = (int *)v215;
  uint64_t v375 = v213;
  uint64_t v216 = *(int *)(v215 + 24);
  uint64_t v217 = &v212[v216];
  uint64_t v218 = &v213[v216];
  *(void *)uint64_t v217 = *(void *)&v213[v216];
  *((void *)v217 + 1) = *(void *)&v213[v216 + 8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v217 + 2) = *((void *)v218 + 2);
  *((void *)v217 + 3) = *((void *)v218 + 3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v217 + 4) = *((void *)v218 + 4);
  *((void *)v217 + 5) = *((void *)v218 + 5);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v219 = type metadata accessor for FeelsLikeComponentPreprocessedDataModel();
  uint64_t v220 = *(int *)(v219 + 28);
  uint64_t v221 = &v217[v220];
  uint64_t v222 = &v218[v220];
  uint64_t v223 = type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference(0);
  int v224 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v221, 1, v223);
  int v225 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v222, 1, v223);
  if (v224)
  {
    if (!v225)
    {
      *(void *)uint64_t v221 = *(void *)v222;
      *((void *)v221 + 1) = *((void *)v222 + 1);
      uint64_t v226 = *(int *)(v223 + 20);
      uint64_t v227 = &v221[v226];
      int v228 = &v222[v226];
      uint64_t v229 = type metadata accessor for TemperatureScaleConfiguration();
      uint64_t v365 = *(void (**)(char *, char *, uint64_t))(*(void *)(v229 - 8) + 16);
      swift_bridgeObjectRetain();
      v365(v227, v228, v229);
      uint64_t v230 = (int *)type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
      *(void *)&v227[v230[5]] = *(void *)&v228[v230[5]];
      *(void *)&v227[v230[6]] = *(void *)&v228[v230[6]];
      *(void *)&v227[v230[7]] = *(void *)&v228[v230[7]];
      uint64_t v231 = v230[8];
      uint64_t v232 = &v227[v231];
      uint64_t v233 = &v228[v231];
      *(void *)uint64_t v232 = *(void *)v233;
      *((void *)v232 + 1) = *((void *)v233 + 1);
      v227[v230[9]] = v228[v230[9]];
      swift_bridgeObjectRetain();
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v221, 0, 1, v223);
      goto LABEL_107;
    }
    goto LABEL_106;
  }
  if (v225)
  {
    sub_10015695C((uint64_t)v221, (void (*)(void))type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference);
LABEL_106:
    uint64_t v234 = sub_10017DF08(&qword_100E63750);
    memcpy(v221, v222, *(void *)(*(void *)(v234 - 8) + 64));
    goto LABEL_107;
  }
  *(void *)uint64_t v221 = *(void *)v222;
  *((void *)v221 + 1) = *((void *)v222 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v338 = *(int *)(v223 + 20);
  uint64_t v339 = &v221[v338];
  uint64_t v340 = &v222[v338];
  uint64_t v341 = type metadata accessor for TemperatureScaleConfiguration();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v341 - 8) + 24))(v339, v340, v341);
  uint64_t v342 = (int *)type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
  *(void *)&v339[v342[5]] = *(void *)&v340[v342[5]];
  *(void *)&v339[v342[6]] = *(void *)&v340[v342[6]];
  *(void *)&v339[v342[7]] = *(void *)&v340[v342[7]];
  uint64_t v343 = v342[8];
  uint64_t v344 = &v339[v343];
  long long v345 = &v340[v343];
  *(void *)uint64_t v344 = *(void *)v345;
  *((void *)v344 + 1) = *((void *)v345 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v339[v342[9]] = v340[v342[9]];
LABEL_107:
  uint64_t v235 = *(int *)(v219 + 32);
  uint64_t v236 = &v217[v235];
  uint64_t v237 = &v218[v235];
  *(void *)uint64_t v236 = *(void *)v237;
  *((void *)v236 + 1) = *((void *)v237 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v238 = v373[7];
  uint64_t v239 = &v212[v238];
  uint64_t v240 = &v375[v238];
  *(void *)&v212[v238] = *(void *)&v375[v238];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v241 = *(int *)(type metadata accessor for HourlyForecastComponentPreprocessedDataModel() + 20);
  uint64_t v242 = &v239[v241];
  uint64_t v243 = &v240[v241];
  uint64_t v244 = type metadata accessor for WeatherDescription();
  int v245 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v242, 1, v244);
  int v246 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v243, 1, v244);
  if (v245)
  {
    if (!v246)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v244 - 8) + 16))(v242, v243, v244);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v242, 0, 1, v244);
      goto LABEL_113;
    }
    goto LABEL_112;
  }
  uint64_t v247 = *(void *)(v244 - 8);
  if (v246)
  {
    (*(void (**)(char *, uint64_t))(v247 + 8))(v242, v244);
LABEL_112:
    uint64_t v248 = sub_10017DF08(&qword_100E63758);
    memcpy(v242, v243, *(void *)(*(void *)(v248 - 8) + 64));
    goto LABEL_113;
  }
  (*(void (**)(char *, char *, uint64_t))(v247 + 24))(v242, v243, v244);
LABEL_113:
  uint64_t v249 = v373[8];
  uint64_t v250 = &v212[v249];
  uint64_t v251 = &v375[v249];
  *(void *)uint64_t v250 = *(void *)&v375[v249];
  *((void *)v250 + 1) = *(void *)&v375[v249 + 8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v250 + 2) = *((void *)v251 + 2);
  *((void *)v250 + 3) = *((void *)v251 + 3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v250 + 4) = *((void *)v251 + 4);
  *((void *)v250 + 5) = *((void *)v251 + 5);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v250 + 6) = *((void *)v251 + 6);
  *((void *)v250 + 7) = *((void *)v251 + 7);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v252 = *(int *)(type metadata accessor for ListPreprocessedDataModel() + 32);
  uint64_t v253 = &v250[v252];
  uint64_t v254 = &v251[v252];
  uint64_t v255 = type metadata accessor for Date();
  uint64_t v363 = *(void (**)(char *, char *))(*(void *)(v255 - 8) + 24);
  uint64_t v366 = v255;
  v363(v253, v254);
  uint64_t v371 = type metadata accessor for WeatherConditionBackgroundTimeData();
  uint64_t v256 = *(int *)(v371 + 20);
  uint64_t v257 = &v253[v256];
  uint64_t v258 = &v254[v256];
  uint64_t v259 = type metadata accessor for Elevation();
  int v260 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v257, 1, v259);
  int v261 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v258, 1, v259);
  if (v260)
  {
    if (!v261)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v259 - 8) + 16))(v257, v258, v259);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v257, 0, 1, v259);
      goto LABEL_119;
    }
    goto LABEL_118;
  }
  uint64_t v262 = *(void *)(v259 - 8);
  if (v261)
  {
    (*(void (**)(char *, uint64_t))(v262 + 8))(v257, v259);
LABEL_118:
    uint64_t v263 = sub_10017DF08(&qword_100E63760);
    memcpy(v257, v258, *(void *)(*(void *)(v263 - 8) + 64));
    goto LABEL_119;
  }
  (*(void (**)(char *, char *, uint64_t))(v262 + 24))(v257, v258, v259);
LABEL_119:
  uint64_t v264 = *(int *)(v371 + 24);
  uint64_t v265 = &v253[v264];
  uint64_t v266 = &v254[v264];
  uint64_t v267 = type metadata accessor for BackgroundMoonData();
  int v268 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v265, 1, v267);
  int v269 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v266, 1, v267);
  if (v268)
  {
    if (!v269)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v267 - 8) + 16))(v265, v266, v267);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v265, 0, 1, v267);
      goto LABEL_125;
    }
    goto LABEL_124;
  }
  uint64_t v270 = *(void *)(v267 - 8);
  if (v269)
  {
    (*(void (**)(char *, uint64_t))(v270 + 8))(v265, v267);
LABEL_124:
    uint64_t v271 = sub_10017DF08(&qword_100E63768);
    memcpy(v265, v266, *(void *)(*(void *)(v271 - 8) + 64));
    goto LABEL_125;
  }
  (*(void (**)(char *, char *, uint64_t))(v270 + 24))(v265, v266, v267);
LABEL_125:
  uint64_t v272 = v373[9];
  uint64_t v273 = &v212[v272];
  uint64_t v274 = &v375[v272];
  *(void *)uint64_t v273 = *(void *)&v375[v272];
  *((void *)v273 + 1) = *(void *)&v375[v272 + 8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v273 + 2) = *((void *)v274 + 2);
  *((void *)v273 + 3) = *((void *)v274 + 3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v273 + 4) = *((void *)v274 + 4);
  *((void *)v273 + 5) = *((void *)v274 + 5);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v273 + 6) = *((void *)v274 + 6);
  *((void *)v273 + 7) = *((void *)v274 + 7);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v273 + 8) = *((void *)v274 + 8);
  *((void *)v273 + 9) = *((void *)v274 + 9);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v273 + 10) = *((void *)v274 + 10);
  *((void *)v273 + 11) = *((void *)v274 + 11);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v273 + 12) = *((void *)v274 + 12);
  *((void *)v273 + 13) = *((void *)v274 + 13);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v275 = v373[10];
  uint64_t v276 = &v212[v275];
  uint64_t v277 = &v375[v275];
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v244 - 8) + 24))(&v212[v275], &v375[v275], v244);
  uint64_t v278 = *(int *)(type metadata accessor for UVIndexComponentPreprocessedDataModel() + 20);
  v279 = &v276[v278];
  uint64_t v280 = &v277[v278];
  *(void *)v279 = *(void *)v280;
  *((void *)v279 + 1) = *((void *)v280 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v281 = v373[11];
  uint64_t v282 = &v212[v281];
  uint64_t v283 = &v375[v281];
  *(void *)uint64_t v282 = *(void *)&v375[v281];
  *((void *)v282 + 1) = *(void *)&v375[v281 + 8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v282 + 2) = *((void *)v283 + 2);
  *((void *)v282 + 3) = *((void *)v283 + 3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v282 + 4) = *((void *)v283 + 4);
  *((void *)v282 + 5) = *((void *)v283 + 5);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v284 = v373[12];
  uint64_t v285 = &v212[v284];
  uint64_t v286 = &v375[v284];
  uint64_t v287 = type metadata accessor for PressureTrend();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v287 - 8) + 24))(v285, v286, v287);
  uint64_t v288 = (int *)type metadata accessor for PressureComponentPreprocessedDataModel();
  uint64_t v289 = v288[5];
  uint64_t v290 = &v285[v289];
  uint64_t v291 = &v286[v289];
  *(void *)uint64_t v290 = *(void *)v291;
  *((void *)v290 + 1) = *((void *)v291 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v292 = v288[6];
  uint64_t v293 = &v285[v292];
  uint64_t v294 = &v286[v292];
  *(void *)uint64_t v293 = *(void *)v294;
  *((void *)v293 + 1) = *((void *)v294 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v295 = v288[7];
  uint64_t v296 = &v285[v295];
  uint64_t v297 = &v286[v295];
  *(void *)uint64_t v296 = *(void *)v297;
  *((void *)v296 + 1) = *((void *)v297 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&v285[v288[8]] = *(void *)&v286[v288[8]];
  uint64_t v298 = v288[9];
  uint64_t v299 = &v285[v298];
  uint64_t v300 = &v286[v298];
  *(void *)uint64_t v299 = *(void *)v300;
  *((void *)v299 + 1) = *((void *)v300 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v301 = v373[13];
  uint64_t v302 = &v212[v301];
  uint64_t v303 = &v375[v301];
  *(void *)uint64_t v302 = *(void *)&v375[v301];
  *((void *)v302 + 1) = *(void *)&v375[v301 + 8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v302 + 2) = *((void *)v303 + 2);
  *((void *)v302 + 3) = *((void *)v303 + 3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v302 + 4) = *((void *)v303 + 4);
  *((void *)v302 + 5) = *((void *)v303 + 5);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v302 + 6) = *((void *)v303 + 6);
  *((void *)v302 + 7) = *((void *)v303 + 7);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v302 + 8) = *((void *)v303 + 8);
  *((void *)v302 + 9) = *((void *)v303 + 9);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v302 + 10) = *((void *)v303 + 10);
  *((void *)v302 + 11) = *((void *)v303 + 11);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v302 + 12) = *((void *)v303 + 12);
  *((void *)v302 + 13) = *((void *)v303 + 13);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v302 + 14) = *((void *)v303 + 14);
  *((void *)v302 + 15) = *((void *)v303 + 15);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v302 + 16) = *((void *)v303 + 16);
  *((void *)v302 + 17) = *((void *)v303 + 17);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v302 + 18) = *((void *)v303 + 18);
  *((void *)v302 + 19) = *((void *)v303 + 19);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v302 + 20) = *((void *)v303 + 20);
  *((void *)v302 + 21) = *((void *)v303 + 21);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v302 + 22) = *((void *)v303 + 22);
  *((void *)v302 + 23) = *((void *)v303 + 23);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v302 + 24) = *((void *)v303 + 24);
  *((void *)v302 + 25) = *((void *)v303 + 25);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v302 + 26) = *((void *)v303 + 26);
  *((void *)v302 + 27) = *((void *)v303 + 27);
  *((void *)v302 + 28) = *((void *)v303 + 28);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v304 = v373[14];
  uint64_t v305 = &v212[v304];
  uint64_t v306 = &v375[v304];
  ((void (*)(char *, char *, uint64_t))v363)(&v212[v304], &v375[v304], v366);
  uint64_t v307 = *(int *)(v371 + 20);
  uint64_t v308 = &v305[v307];
  uint64_t v309 = &v306[v307];
  int v310 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)&v305[v307], 1, v259);
  int v311 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v309, 1, v259);
  if (v310)
  {
    uint64_t v312 = v212;
    if (!v311)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v259 - 8) + 16))(v308, v309, v259);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v308, 0, 1, v259);
      goto LABEL_131;
    }
    goto LABEL_130;
  }
  uint64_t v313 = *(void *)(v259 - 8);
  uint64_t v312 = v212;
  if (v311)
  {
    (*(void (**)(char *, uint64_t))(v313 + 8))(v308, v259);
LABEL_130:
    uint64_t v314 = sub_10017DF08(&qword_100E63760);
    memcpy(v308, v309, *(void *)(*(void *)(v314 - 8) + 64));
    goto LABEL_131;
  }
  (*(void (**)(char *, char *, uint64_t))(v313 + 24))(v308, v309, v259);
LABEL_131:
  uint64_t v315 = *(int *)(v371 + 24);
  uint64_t v316 = &v305[v315];
  uint64_t v317 = &v306[v315];
  int v318 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)&v305[v315], 1, v267);
  int v319 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v317, 1, v267);
  if (v318)
  {
    if (!v319)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v267 - 8) + 16))(v316, v317, v267);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v316, 0, 1, v267);
      goto LABEL_137;
    }
    goto LABEL_136;
  }
  uint64_t v320 = *(void *)(v267 - 8);
  if (v319)
  {
    (*(void (**)(char *, uint64_t))(v320 + 8))(v316, v267);
LABEL_136:
    uint64_t v321 = sub_10017DF08(&qword_100E63768);
    memcpy(v316, v317, *(void *)(*(void *)(v321 - 8) + 64));
    goto LABEL_137;
  }
  (*(void (**)(char *, char *, uint64_t))(v320 + 24))(v316, v317, v267);
LABEL_137:
  uint64_t v322 = v373[15];
  uint64_t v323 = &v312[v322];
  uint64_t v324 = &v375[v322];
  *(void *)uint64_t v323 = *(void *)&v375[v322];
  *((void *)v323 + 1) = *(void *)&v375[v322 + 8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v323 + 2) = *((void *)v324 + 2);
  *((void *)v323 + 3) = *((void *)v324 + 3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v323 + 4) = *((void *)v324 + 4);
  *((void *)v323 + 5) = *((void *)v324 + 5);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v323 + 6) = *((void *)v324 + 6);
  *((void *)v323 + 7) = *((void *)v324 + 7);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v323 + 8) = *((void *)v324 + 8);
  *((void *)v323 + 9) = *((void *)v324 + 9);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v323 + 10) = *((void *)v324 + 10);
  *((void *)v323 + 11) = *((void *)v324 + 11);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v323 + 12) = *((void *)v324 + 12);
  *((void *)v323 + 13) = *((void *)v324 + 13);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (v369 != v368)
  {
    uint64_t v325 = v367[10];
    uint64_t v326 = (void *)((char *)v369 + v325);
    uint64_t v327 = (void *)((char *)v368 + v325);
    sub_10015695C((uint64_t)v369 + v325, (void (*)(void))type metadata accessor for NewsDataModel);
    type metadata accessor for NewsDataModel();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *uint64_t v326 = *v327;
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v328 = type metadata accessor for News();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v328 - 8) + 16))(v326, v327, v328);
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v329 = v367[11];
  uint64_t v330 = (void *)((char *)v369 + v329);
  uint64_t v331 = (void *)((char *)v368 + v329);
  uint64_t v332 = v331[1];
  void *v330 = *v331;
  v330[1] = v332;
  swift_retain();
  swift_release();
  uint64_t v333 = v367[12];
  uint64_t v334 = (char *)v369 + v333;
  uint64_t v335 = (char *)v368 + v333;
  ((void (*)(char *, char *, uint64_t))v358)((char *)v369 + v333, (char *)v368 + v333, v360);
  uint64_t v336 = sub_10017DF08(&qword_100EA6858);
  *(void *)&v334[*(int *)(v336 + 28)] = *(void *)&v335[*(int *)(v336 + 28)];
  swift_retain();
  swift_release();
  return v369;
}

void *sub_1009C46D4(void *a1, void *a2, int *a3)
{
  uint64_t v6 = sub_10017DF08(&qword_100E65310);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = *(int *)(sub_10017DF08(&qword_100E669A0) + 32);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for PresentationMode();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v12 = a3[5];
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  uint64_t v15 = type metadata accessor for LocationModel();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
  uint64_t v16 = a3[7];
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  uint64_t v17 = (_OWORD *)((char *)a1 + v16);
  uint64_t v18 = (_OWORD *)((char *)a2 + v16);
  uint64_t v19 = type metadata accessor for LocationWeatherDataState(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  int v260 = a2;
  int v261 = a1;
  uint64_t v259 = a3;
  if (EnumCaseMultiPayload == 1)
  {
    _OWORD *v17 = *v18;
    uint64_t v22 = (int *)type metadata accessor for WeatherData(0);
    uint64_t v23 = v22[5];
    uint64_t v24 = (char *)v17 + v23;
    uint64_t v25 = (char *)v18 + v23;
    uint64_t v26 = type metadata accessor for Locale();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v25, 1, v26))
    {
      uint64_t v27 = sub_10017DF08(&qword_100E63730);
      memcpy(v24, v25, *(void *)(*(void *)(v27 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 32))(v24, v25, v26);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v24, 0, 1, v26);
    }
    uint64_t v29 = v22[6];
    uint64_t v30 = (char *)v17 + v29;
    uint64_t v31 = (char *)v18 + v29;
    uint64_t v32 = type metadata accessor for WeatherDataModel();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 32))(v30, v31, v32);
    uint64_t v33 = v22[7];
    uint64_t v34 = (char *)v17 + v33;
    uint64_t v35 = (char *)v18 + v33;
    uint64_t v36 = sub_10017DF08(&qword_100E63738);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v35, 1, v36))
    {
      uint64_t v37 = type metadata accessor for WeatherData.CachingState(0);
      memcpy(v34, v35, *(void *)(*(void *)(v37 - 8) + 64));
    }
    else
    {
      uint64_t v38 = type metadata accessor for Date();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 32))(v34, v35, v38);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v34, 0, 1, v36);
    }
    uint64_t v39 = v22[8];
    uint64_t v40 = (char *)v17 + v39;
    uint64_t v41 = (char *)v18 + v39;
    uint64_t v42 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v43 = type metadata accessor for WeatherStatisticsModel();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 32))(v40, v41, v43);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v40, v41, *(void *)(*(void *)(v42 - 8) + 64));
    }
    uint64_t v44 = v22[9];
    int v45 = (char *)v17 + v44;
    uint64_t v46 = (char *)v18 + v44;
    uint64_t v47 = type metadata accessor for WeatherDataOverrides();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v46, 1, v47))
    {
      uint64_t v48 = sub_10017DF08(&qword_100E63740);
      memcpy(v45, v46, *(void *)(*(void *)(v48 - 8) + 64));
    }
    else
    {
      uint64_t v49 = type metadata accessor for Date();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v46, 1, v49))
      {
        uint64_t v50 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
        memcpy(v45, v46, *(void *)(*(void *)(v50 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v49 - 8) + 32))(v45, v46, v49);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v45, 0, 1, v49);
      }
      uint64_t v51 = *(int *)(v47 + 20);
      uint64_t v52 = &v45[v51];
      uint64_t v53 = &v46[v51];
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v53, 1, v49))
      {
        uint64_t v54 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
        memcpy(v52, v53, *(void *)(*(void *)(v54 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v49 - 8) + 32))(v52, v53, v49);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v52, 0, 1, v49);
      }
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v45, 0, 1, v47);
    }
    uint64_t v253 = sub_10017DF08(&qword_100E63748);
    uint64_t v255 = v18;
    uint64_t v55 = *(int *)(v253 + 48);
    uint64_t v257 = v17;
    uint64_t v56 = (char *)v17 + v55;
    uint64_t v57 = (char *)v18 + v55;
    uint64_t v58 = type metadata accessor for UUID();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v58 - 8) + 32))(v56, v57, v58);
    uint64_t v59 = (int *)type metadata accessor for PreprocessedWeatherData();
    *(void *)&v56[v59[5]] = *(void *)&v57[v59[5]];
    uint64_t v60 = v59[6];
    uint64_t v61 = &v56[v60];
    uint64_t v62 = &v57[v60];
    long long v63 = *(_OWORD *)&v57[v60 + 16];
    *(_OWORD *)uint64_t v61 = *(_OWORD *)&v57[v60];
    *((_OWORD *)v61 + 1) = v63;
    *((_OWORD *)v61 + 2) = *(_OWORD *)&v57[v60 + 32];
    uint64_t v64 = type metadata accessor for FeelsLikeComponentPreprocessedDataModel();
    uint64_t v65 = *(int *)(v64 + 28);
    uint64_t v66 = &v61[v65];
    uint64_t v67 = &v62[v65];
    uint64_t v68 = type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v67, 1, v68))
    {
      uint64_t v69 = sub_10017DF08(&qword_100E63750);
      memcpy(v66, v67, *(void *)(*(void *)(v69 - 8) + 64));
    }
    else
    {
      *(_OWORD *)uint64_t v66 = *(_OWORD *)v67;
      uint64_t v70 = *(int *)(v68 + 20);
      uint64_t v71 = &v66[v70];
      uint64_t v72 = &v67[v70];
      uint64_t v73 = type metadata accessor for TemperatureScaleConfiguration();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v73 - 8) + 32))(v71, v72, v73);
      uint64_t v74 = (int *)type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
      *(void *)&v71[v74[5]] = *(void *)&v72[v74[5]];
      *(void *)&v71[v74[6]] = *(void *)&v72[v74[6]];
      *(void *)&v71[v74[7]] = *(void *)&v72[v74[7]];
      *(_OWORD *)&v71[v74[8]] = *(_OWORD *)&v72[v74[8]];
      v71[v74[9]] = v72[v74[9]];
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v66, 0, 1, v68);
    }
    *(_OWORD *)&v61[*(int *)(v64 + 32)] = *(_OWORD *)&v62[*(int *)(v64 + 32)];
    uint64_t v75 = v59[7];
    uint64_t v76 = &v56[v75];
    uint64_t v77 = &v57[v75];
    *(void *)&v56[v75] = *(void *)&v57[v75];
    uint64_t v78 = *(int *)(type metadata accessor for HourlyForecastComponentPreprocessedDataModel() + 20);
    uint64_t v79 = &v76[v78];
    uint64_t v80 = &v77[v78];
    uint64_t v81 = type metadata accessor for WeatherDescription();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v80, 1, v81))
    {
      uint64_t v82 = sub_10017DF08(&qword_100E63758);
      memcpy(v79, v80, *(void *)(*(void *)(v82 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v81 - 8) + 32))(v79, v80, v81);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v79, 0, 1, v81);
    }
    uint64_t v83 = v59[8];
    uint64_t v84 = &v56[v83];
    uint64_t v85 = &v57[v83];
    long long v86 = *(_OWORD *)&v57[v83 + 16];
    *(_OWORD *)uint64_t v84 = *(_OWORD *)&v57[v83];
    *((_OWORD *)v84 + 1) = v86;
    long long v87 = *(_OWORD *)&v57[v83 + 48];
    *((_OWORD *)v84 + 2) = *(_OWORD *)&v57[v83 + 32];
    *((_OWORD *)v84 + 3) = v87;
    uint64_t v88 = *(int *)(type metadata accessor for ListPreprocessedDataModel() + 32);
    uint64_t v89 = &v84[v88];
    uint64_t v90 = &v85[v88];
    uint64_t v91 = type metadata accessor for Date();
    uint64_t v250 = *(void (**)(char *, char *))(*(void *)(v91 - 8) + 32);
    uint64_t v252 = v91;
    v250(v89, v90);
    uint64_t v92 = type metadata accessor for WeatherConditionBackgroundTimeData();
    uint64_t v93 = *(int *)(v92 + 20);
    uint64_t v94 = &v89[v93];
    uint64_t v95 = &v90[v93];
    uint64_t v96 = type metadata accessor for Elevation();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v95, 1, v96))
    {
      uint64_t v97 = sub_10017DF08(&qword_100E63760);
      memcpy(v94, v95, *(void *)(*(void *)(v97 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v96 - 8) + 32))(v94, v95, v96);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v94, 0, 1, v96);
    }
    uint64_t v98 = *(int *)(v92 + 24);
    uint64_t v99 = &v89[v98];
    uint64_t v100 = &v90[v98];
    uint64_t v101 = type metadata accessor for BackgroundMoonData();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v100, 1, v101))
    {
      uint64_t v102 = sub_10017DF08(&qword_100E63768);
      memcpy(v99, v100, *(void *)(*(void *)(v102 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v101 - 8) + 32))(v99, v100, v101);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v99, 0, 1, v101);
    }
    memcpy(&v56[v59[9]], &v57[v59[9]], 0x70uLL);
    uint64_t v103 = v59[10];
    uint64_t v104 = &v56[v103];
    uint64_t v105 = &v57[v103];
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v81 - 8) + 32))(&v56[v103], &v57[v103], v81);
    uint64_t v106 = type metadata accessor for UVIndexComponentPreprocessedDataModel();
    *(_OWORD *)&v104[*(int *)(v106 + 20)] = *(_OWORD *)&v105[*(int *)(v106 + 20)];
    uint64_t v107 = v59[11];
    uint64_t v108 = &v56[v107];
    uint64_t v109 = &v57[v107];
    long long v110 = *((_OWORD *)v109 + 1);
    *(_OWORD *)uint64_t v108 = *(_OWORD *)v109;
    *((_OWORD *)v108 + 1) = v110;
    *((_OWORD *)v108 + 2) = *((_OWORD *)v109 + 2);
    uint64_t v111 = v59[12];
    uint64_t v112 = &v56[v111];
    uint64_t v113 = &v57[v111];
    uint64_t v114 = type metadata accessor for PressureTrend();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v114 - 8) + 32))(v112, v113, v114);
    uint64_t v115 = (int *)type metadata accessor for PressureComponentPreprocessedDataModel();
    *(_OWORD *)&v112[v115[5]] = *(_OWORD *)&v113[v115[5]];
    *(_OWORD *)&v112[v115[6]] = *(_OWORD *)&v113[v115[6]];
    *(_OWORD *)&v112[v115[7]] = *(_OWORD *)&v113[v115[7]];
    *(void *)&v112[v115[8]] = *(void *)&v113[v115[8]];
    *(_OWORD *)&v112[v115[9]] = *(_OWORD *)&v113[v115[9]];
    memcpy(&v56[v59[13]], &v57[v59[13]], 0xE8uLL);
    uint64_t v116 = v59[14];
    uint64_t v117 = &v56[v116];
    uint64_t v118 = &v57[v116];
    ((void (*)(char *, char *, uint64_t))v250)(&v56[v116], &v57[v116], v252);
    uint64_t v119 = *(int *)(v92 + 20);
    uint64_t v120 = &v117[v119];
    uint64_t v121 = &v118[v119];
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v118[v119], 1, v96))
    {
      uint64_t v122 = sub_10017DF08(&qword_100E63760);
      memcpy(v120, v121, *(void *)(*(void *)(v122 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v96 - 8) + 32))(v120, v121, v96);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v120, 0, 1, v96);
    }
    uint64_t v123 = *(int *)(v92 + 24);
    uint64_t v124 = &v117[v123];
    uint64_t v125 = &v118[v123];
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v125, 1, v101))
    {
      uint64_t v126 = sub_10017DF08(&qword_100E63768);
      memcpy(v124, v125, *(void *)(*(void *)(v126 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v101 - 8) + 32))(v124, v125, v101);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v124, 0, 1, v101);
    }
    memcpy(&v56[v59[15]], &v57[v59[15]], 0x70uLL);
    uint64_t v127 = *(int *)(v253 + 64);
    uint64_t v128 = (char *)v257 + v127;
    uint64_t v129 = (char *)v255 + v127;
    uint64_t v130 = type metadata accessor for NewsDataModel();
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v128, v129, *(void *)(*(void *)(v130 - 8) + 64));
    }
    else
    {
      uint64_t v131 = type metadata accessor for News();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v131 - 8) + 32))(v128, v129, v131);
      swift_storeEnumTagMultiPayload();
    }
    a2 = v260;
    a1 = v261;
    a3 = v259;
  }
  else
  {
    if (EnumCaseMultiPayload)
    {
      memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
      goto LABEL_52;
    }
    uint64_t v21 = type metadata accessor for NewsDataModel();
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
    }
    else
    {
      uint64_t v28 = type metadata accessor for News();
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v28 - 8) + 32))(v17, v18, v28);
      swift_storeEnumTagMultiPayload();
    }
  }
  swift_storeEnumTagMultiPayload();
LABEL_52:
  uint64_t v132 = a3[8];
  uint64_t v133 = (char *)a1 + v132;
  uint64_t v134 = (char *)a2 + v132;
  *(_OWORD *)((char *)a1 + v132) = *(_OWORD *)((char *)a2 + v132);
  uint64_t v135 = (int *)type metadata accessor for WeatherData(0);
  uint64_t v136 = v135[5];
  uint64_t v137 = &v133[v136];
  uint64_t v138 = &v134[v136];
  uint64_t v139 = type metadata accessor for Locale();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v138, 1, v139))
  {
    uint64_t v140 = sub_10017DF08(&qword_100E63730);
    memcpy(v137, v138, *(void *)(*(void *)(v140 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v139 - 8) + 32))(v137, v138, v139);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v137, 0, 1, v139);
  }
  uint64_t v141 = v135[6];
  uint64_t v142 = &v133[v141];
  uint64_t v143 = &v134[v141];
  uint64_t v144 = type metadata accessor for WeatherDataModel();
  uint64_t v254 = *(void (**)(char *, char *, uint64_t))(*(void *)(v144 - 8) + 32);
  v254(v142, v143, v144);
  uint64_t v145 = v135[7];
  uint64_t v146 = &v133[v145];
  uint64_t v147 = &v134[v145];
  uint64_t v148 = sub_10017DF08(&qword_100E63738);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v147, 1, v148))
  {
    uint64_t v149 = type metadata accessor for WeatherData.CachingState(0);
    memcpy(v146, v147, *(void *)(*(void *)(v149 - 8) + 64));
  }
  else
  {
    uint64_t v150 = type metadata accessor for Date();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v150 - 8) + 32))(v146, v147, v150);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v146, 0, 1, v148);
  }
  uint64_t v151 = v135[8];
  uint64_t v152 = &v133[v151];
  uint64_t v153 = &v134[v151];
  uint64_t v154 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v155 = type metadata accessor for WeatherStatisticsModel();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v155 - 8) + 32))(v152, v153, v155);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v152, v153, *(void *)(*(void *)(v154 - 8) + 64));
  }
  uint64_t v156 = v135[9];
  uint64_t v157 = &v133[v156];
  uint64_t v158 = &v134[v156];
  uint64_t v159 = type metadata accessor for WeatherDataOverrides();
  uint64_t v256 = v144;
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v158, 1, v159))
  {
    uint64_t v160 = sub_10017DF08(&qword_100E63740);
    memcpy(v157, v158, *(void *)(*(void *)(v160 - 8) + 64));
  }
  else
  {
    uint64_t v161 = type metadata accessor for Date();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v158, 1, v161))
    {
      uint64_t v162 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
      memcpy(v157, v158, *(void *)(*(void *)(v162 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v161 - 8) + 32))(v157, v158, v161);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v157, 0, 1, v161);
    }
    uint64_t v163 = *(int *)(v159 + 20);
    uint64_t v164 = &v157[v163];
    uint64_t v165 = &v158[v163];
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v165, 1, v161))
    {
      uint64_t v166 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
      memcpy(v164, v165, *(void *)(*(void *)(v166 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v161 - 8) + 32))(v164, v165, v161);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v164, 0, 1, v161);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v157, 0, 1, v159);
  }
  uint64_t v167 = a3[9];
  int v168 = (char *)a1 + v167;
  int v169 = (char *)a2 + v167;
  uint64_t v170 = type metadata accessor for UUID();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v170 - 8) + 32))(v168, v169, v170);
  uint64_t v171 = (int *)type metadata accessor for PreprocessedWeatherData();
  *(void *)&v168[v171[5]] = *(void *)&v169[v171[5]];
  uint64_t v172 = v171[6];
  uint64_t v173 = &v168[v172];
  uint64_t v174 = &v169[v172];
  long long v175 = *(_OWORD *)&v169[v172 + 16];
  *(_OWORD *)uint64_t v173 = *(_OWORD *)&v169[v172];
  *((_OWORD *)v173 + 1) = v175;
  *((_OWORD *)v173 + 2) = *(_OWORD *)&v169[v172 + 32];
  uint64_t v176 = type metadata accessor for FeelsLikeComponentPreprocessedDataModel();
  uint64_t v177 = *(int *)(v176 + 28);
  uint64_t v178 = &v173[v177];
  uint64_t v179 = &v174[v177];
  uint64_t v180 = type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v179, 1, v180))
  {
    uint64_t v181 = sub_10017DF08(&qword_100E63750);
    memcpy(v178, v179, *(void *)(*(void *)(v181 - 8) + 64));
  }
  else
  {
    *(_OWORD *)uint64_t v178 = *(_OWORD *)v179;
    uint64_t v182 = *(int *)(v180 + 20);
    uint64_t v183 = &v178[v182];
    uint64_t v184 = &v179[v182];
    uint64_t v185 = type metadata accessor for TemperatureScaleConfiguration();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v185 - 8) + 32))(v183, v184, v185);
    uint64_t v186 = (int *)type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
    *(void *)&v183[v186[5]] = *(void *)&v184[v186[5]];
    *(void *)&v183[v186[6]] = *(void *)&v184[v186[6]];
    *(void *)&v183[v186[7]] = *(void *)&v184[v186[7]];
    *(_OWORD *)&v183[v186[8]] = *(_OWORD *)&v184[v186[8]];
    v183[v186[9]] = v184[v186[9]];
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v178, 0, 1, v180);
  }
  *(_OWORD *)&v173[*(int *)(v176 + 32)] = *(_OWORD *)&v174[*(int *)(v176 + 32)];
  uint64_t v187 = v171[7];
  int v188 = &v168[v187];
  uint64_t v189 = &v169[v187];
  *(void *)&v168[v187] = *(void *)&v169[v187];
  uint64_t v190 = *(int *)(type metadata accessor for HourlyForecastComponentPreprocessedDataModel() + 20);
  uint64_t v191 = &v188[v190];
  uint64_t v192 = &v189[v190];
  uint64_t v193 = type metadata accessor for WeatherDescription();
  uint64_t v249 = v193;
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v192, 1, v193))
  {
    uint64_t v194 = sub_10017DF08(&qword_100E63758);
    memcpy(v191, v192, *(void *)(*(void *)(v194 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v193 - 8) + 32))(v191, v192, v193);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v191, 0, 1, v193);
  }
  uint64_t v195 = v171[8];
  uint64_t v196 = &v168[v195];
  uint64_t v197 = &v169[v195];
  long long v198 = *(_OWORD *)&v169[v195 + 16];
  *(_OWORD *)uint64_t v196 = *(_OWORD *)&v169[v195];
  *((_OWORD *)v196 + 1) = v198;
  long long v199 = *(_OWORD *)&v169[v195 + 48];
  *((_OWORD *)v196 + 2) = *(_OWORD *)&v169[v195 + 32];
  *((_OWORD *)v196 + 3) = v199;
  uint64_t v200 = *(int *)(type metadata accessor for ListPreprocessedDataModel() + 32);
  uint64_t v201 = &v196[v200];
  uint64_t v202 = &v197[v200];
  uint64_t v203 = type metadata accessor for Date();
  uint64_t v258 = *(void (**)(char *, char *))(*(void *)(v203 - 8) + 32);
  v258(v201, v202);
  uint64_t v204 = type metadata accessor for WeatherConditionBackgroundTimeData();
  uint64_t v205 = *(int *)(v204 + 20);
  uint64_t v206 = &v201[v205];
  uint64_t v207 = &v202[v205];
  uint64_t v208 = type metadata accessor for Elevation();
  uint64_t v251 = v208;
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v207, 1, v208))
  {
    uint64_t v209 = sub_10017DF08(&qword_100E63760);
    memcpy(v206, v207, *(void *)(*(void *)(v209 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v208 - 8) + 32))(v206, v207, v208);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v206, 0, 1, v208);
  }
  uint64_t v210 = *(int *)(v204 + 24);
  uint64_t v211 = &v201[v210];
  uint64_t v212 = &v202[v210];
  uint64_t v213 = type metadata accessor for BackgroundMoonData();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v212, 1, v213))
  {
    uint64_t v214 = sub_10017DF08(&qword_100E63768);
    memcpy(v211, v212, *(void *)(*(void *)(v214 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v213 - 8) + 32))(v211, v212, v213);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v211, 0, 1, v213);
  }
  memcpy(&v168[v171[9]], &v169[v171[9]], 0x70uLL);
  uint64_t v215 = v171[10];
  uint64_t v216 = &v168[v215];
  uint64_t v217 = &v169[v215];
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v249 - 8) + 32))(&v168[v215], &v169[v215], v249);
  uint64_t v218 = type metadata accessor for UVIndexComponentPreprocessedDataModel();
  *(_OWORD *)&v216[*(int *)(v218 + 20)] = *(_OWORD *)&v217[*(int *)(v218 + 20)];
  uint64_t v219 = v171[11];
  uint64_t v220 = &v168[v219];
  uint64_t v221 = &v169[v219];
  long long v222 = *((_OWORD *)v221 + 1);
  *(_OWORD *)uint64_t v220 = *(_OWORD *)v221;
  *((_OWORD *)v220 + 1) = v222;
  *((_OWORD *)v220 + 2) = *((_OWORD *)v221 + 2);
  uint64_t v223 = v171[12];
  int v224 = &v168[v223];
  int v225 = &v169[v223];
  uint64_t v226 = type metadata accessor for PressureTrend();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v226 - 8) + 32))(v224, v225, v226);
  uint64_t v227 = (int *)type metadata accessor for PressureComponentPreprocessedDataModel();
  *(_OWORD *)&v224[v227[5]] = *(_OWORD *)&v225[v227[5]];
  *(_OWORD *)&v224[v227[6]] = *(_OWORD *)&v225[v227[6]];
  *(_OWORD *)&v224[v227[7]] = *(_OWORD *)&v225[v227[7]];
  *(void *)&v224[v227[8]] = *(void *)&v225[v227[8]];
  *(_OWORD *)&v224[v227[9]] = *(_OWORD *)&v225[v227[9]];
  memcpy(&v168[v171[13]], &v169[v171[13]], 0xE8uLL);
  uint64_t v228 = v171[14];
  uint64_t v229 = &v168[v228];
  uint64_t v230 = &v169[v228];
  ((void (*)(char *, char *, uint64_t))v258)(&v168[v228], &v169[v228], v203);
  uint64_t v231 = *(int *)(v204 + 20);
  uint64_t v232 = &v229[v231];
  uint64_t v233 = &v230[v231];
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v230[v231], 1, v251))
  {
    uint64_t v234 = sub_10017DF08(&qword_100E63760);
    memcpy(v232, v233, *(void *)(*(void *)(v234 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v251 - 8) + 32))(v232, v233, v251);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v232, 0, 1, v251);
  }
  uint64_t v235 = *(int *)(v204 + 24);
  uint64_t v236 = &v229[v235];
  uint64_t v237 = &v230[v235];
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v237, 1, v213))
  {
    uint64_t v238 = sub_10017DF08(&qword_100E63768);
    memcpy(v236, v237, *(void *)(*(void *)(v238 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v213 - 8) + 32))(v236, v237, v213);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v236, 0, 1, v213);
  }
  memcpy(&v168[v171[15]], &v169[v171[15]], 0x70uLL);
  uint64_t v239 = v259[10];
  uint64_t v240 = (char *)v261 + v239;
  uint64_t v241 = (char *)v260 + v239;
  uint64_t v242 = type metadata accessor for NewsDataModel();
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(v240, v241, *(void *)(*(void *)(v242 - 8) + 64));
  }
  else
  {
    uint64_t v243 = type metadata accessor for News();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v243 - 8) + 32))(v240, v241, v243);
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v244 = v259[12];
  *(_OWORD *)((char *)v261 + v259[11]) = *(_OWORD *)((char *)v260 + v259[11]);
  int v245 = (char *)v261 + v244;
  int v246 = (char *)v260 + v244;
  v254((char *)v261 + v244, (char *)v260 + v244, v256);
  uint64_t v247 = sub_10017DF08(&qword_100EA6858);
  *(void *)&v245[*(int *)(v247 + 28)] = *(void *)&v246[*(int *)(v247 + 28)];
  return v261;
}

void *sub_1009C603C(uint64_t a1, void *a2, int *a3)
{
  uint64_t v4 = a2;
  uint64_t v5 = (void *)a1;
  if ((void *)a1 != a2)
  {
    sub_1009CAF70(a1, &qword_100E65310);
    uint64_t v6 = sub_10017DF08(&qword_100E65310);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = v4[1];
      *uint64_t v5 = *v4;
      v5[1] = v7;
      uint64_t v8 = *(int *)(sub_10017DF08(&qword_100E669A0) + 32);
      uint64_t v9 = (char *)v5 + v8;
      uint64_t v10 = (char *)v4 + v8;
      uint64_t v11 = type metadata accessor for PresentationMode();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v5, v4, *(void *)(*(void *)(v6 - 8) + 64));
    }
  }
  uint64_t v12 = a3[5];
  uint64_t v13 = (char *)v5 + v12;
  uint64_t v14 = (char *)v4 + v12;
  uint64_t v15 = type metadata accessor for LocationModel();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 40))(v13, v14, v15);
  *(void *)((char *)v5 + a3[6]) = *(void *)((char *)v4 + a3[6]);
  uint64_t v381 = v4;
  uint64_t v382 = v5;
  uint64_t v380 = a3;
  if (v5 != v4)
  {
    uint64_t v16 = a3[7];
    uint64_t v17 = (_OWORD *)((char *)v5 + v16);
    uint64_t v18 = (_OWORD *)((char *)v4 + v16);
    sub_10015695C((uint64_t)v5 + v16, (void (*)(void))type metadata accessor for LocationWeatherDataState);
    uint64_t v19 = type metadata accessor for LocationWeatherDataState(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      _OWORD *v17 = *v18;
      uint64_t v22 = (int *)type metadata accessor for WeatherData(0);
      uint64_t v23 = v22[5];
      uint64_t v24 = (char *)v17 + v23;
      uint64_t v25 = (char *)v18 + v23;
      uint64_t v26 = type metadata accessor for Locale();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v25, 1, v26))
      {
        uint64_t v27 = sub_10017DF08(&qword_100E63730);
        memcpy(v24, v25, *(void *)(*(void *)(v27 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 32))(v24, v25, v26);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v24, 0, 1, v26);
      }
      uint64_t v29 = v22[6];
      uint64_t v30 = (char *)v17 + v29;
      uint64_t v31 = (char *)v18 + v29;
      uint64_t v32 = type metadata accessor for WeatherDataModel();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 32))(v30, v31, v32);
      uint64_t v33 = v22[7];
      uint64_t v34 = (char *)v17 + v33;
      uint64_t v35 = (char *)v18 + v33;
      uint64_t v36 = sub_10017DF08(&qword_100E63738);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v35, 1, v36))
      {
        uint64_t v37 = type metadata accessor for WeatherData.CachingState(0);
        memcpy(v34, v35, *(void *)(*(void *)(v37 - 8) + 64));
      }
      else
      {
        uint64_t v38 = type metadata accessor for Date();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 32))(v34, v35, v38);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v34, 0, 1, v36);
      }
      uint64_t v39 = v22[8];
      uint64_t v40 = (char *)v17 + v39;
      uint64_t v41 = (char *)v18 + v39;
      uint64_t v42 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v43 = type metadata accessor for WeatherStatisticsModel();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 32))(v40, v41, v43);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v40, v41, *(void *)(*(void *)(v42 - 8) + 64));
      }
      uint64_t v44 = v22[9];
      int v45 = (char *)v17 + v44;
      uint64_t v383 = v18;
      uint64_t v46 = (char *)v18 + v44;
      uint64_t v47 = type metadata accessor for WeatherDataOverrides();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v46, 1, v47))
      {
        uint64_t v48 = sub_10017DF08(&qword_100E63740);
        memcpy(v45, v46, *(void *)(*(void *)(v48 - 8) + 64));
        uint64_t v49 = v383;
      }
      else
      {
        uint64_t v50 = type metadata accessor for Date();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v46, 1, v50))
        {
          uint64_t v51 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
          memcpy(v45, v46, *(void *)(*(void *)(v51 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v50 - 8) + 32))(v45, v46, v50);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v45, 0, 1, v50);
        }
        uint64_t v52 = *(int *)(v47 + 20);
        uint64_t v53 = &v45[v52];
        uint64_t v54 = &v46[v52];
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v46[v52], 1, v50))
        {
          uint64_t v55 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
          memcpy(v53, v54, *(void *)(*(void *)(v55 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v50 - 8) + 32))(v53, v54, v50);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v53, 0, 1, v50);
        }
        uint64_t v49 = v383;
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v45, 0, 1, v47);
      }
      uint64_t v374 = sub_10017DF08(&qword_100E63748);
      uint64_t v56 = *(int *)(v374 + 48);
      uint64_t v376 = v17;
      uint64_t v57 = (char *)v17 + v56;
      uint64_t v58 = (uint64_t)v49 + v56;
      uint64_t v59 = type metadata accessor for UUID();
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v59 - 8) + 32))(v57, v58, v59);
      uint64_t v60 = (int *)type metadata accessor for PreprocessedWeatherData();
      *(void *)&v57[v60[5]] = *(void *)(v58 + v60[5]);
      uint64_t v61 = v60[6];
      uint64_t v62 = &v57[v61];
      uint64_t v63 = v58 + v61;
      long long v64 = *(_OWORD *)(v58 + v61 + 16);
      *(_OWORD *)uint64_t v62 = *(_OWORD *)(v58 + v61);
      *((_OWORD *)v62 + 1) = v64;
      *((_OWORD *)v62 + 2) = *(_OWORD *)(v58 + v61 + 32);
      uint64_t v65 = type metadata accessor for FeelsLikeComponentPreprocessedDataModel();
      uint64_t v66 = *(int *)(v65 + 28);
      uint64_t v67 = &v62[v66];
      uint64_t v68 = (_OWORD *)(v63 + v66);
      uint64_t v69 = type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v68, 1, v69))
      {
        uint64_t v70 = sub_10017DF08(&qword_100E63750);
        memcpy(v67, v68, *(void *)(*(void *)(v70 - 8) + 64));
      }
      else
      {
        *(_OWORD *)uint64_t v67 = *v68;
        uint64_t v71 = *(int *)(v69 + 20);
        uint64_t v72 = &v67[v71];
        uint64_t v73 = (char *)v68 + v71;
        uint64_t v74 = type metadata accessor for TemperatureScaleConfiguration();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v74 - 8) + 32))(v72, v73, v74);
        uint64_t v75 = (int *)type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
        *(void *)&v72[v75[5]] = *(void *)&v73[v75[5]];
        *(void *)&v72[v75[6]] = *(void *)&v73[v75[6]];
        *(void *)&v72[v75[7]] = *(void *)&v73[v75[7]];
        *(_OWORD *)&v72[v75[8]] = *(_OWORD *)&v73[v75[8]];
        v72[v75[9]] = v73[v75[9]];
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v67, 0, 1, v69);
      }
      *(_OWORD *)&v62[*(int *)(v65 + 32)] = *(_OWORD *)(v63 + *(int *)(v65 + 32));
      uint64_t v76 = v60[7];
      uint64_t v77 = &v57[v76];
      uint64_t v78 = v58 + v76;
      *(void *)&v57[v76] = *(void *)(v58 + v76);
      uint64_t v79 = *(int *)(type metadata accessor for HourlyForecastComponentPreprocessedDataModel() + 20);
      uint64_t v80 = &v77[v79];
      uint64_t v81 = (const void *)(v78 + v79);
      uint64_t v82 = type metadata accessor for WeatherDescription();
      uint64_t v371 = v82;
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v81, 1, v82))
      {
        uint64_t v83 = sub_10017DF08(&qword_100E63758);
        memcpy(v80, v81, *(void *)(*(void *)(v83 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, const void *, uint64_t))(*(void *)(v82 - 8) + 32))(v80, v81, v82);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v80, 0, 1, v82);
      }
      uint64_t v84 = v60[8];
      uint64_t v85 = &v57[v84];
      uint64_t v86 = v58 + v84;
      long long v87 = *(_OWORD *)(v58 + v84 + 16);
      *(_OWORD *)uint64_t v85 = *(_OWORD *)(v58 + v84);
      *((_OWORD *)v85 + 1) = v87;
      long long v88 = *(_OWORD *)(v58 + v84 + 48);
      *((_OWORD *)v85 + 2) = *(_OWORD *)(v58 + v84 + 32);
      *((_OWORD *)v85 + 3) = v88;
      uint64_t v89 = *(int *)(type metadata accessor for ListPreprocessedDataModel() + 32);
      uint64_t v90 = &v85[v89];
      uint64_t v91 = v86 + v89;
      uint64_t v92 = type metadata accessor for Date();
      uint64_t v378 = *(void (**)(char *, uint64_t))(*(void *)(v92 - 8) + 32);
      v378(v90, v91);
      uint64_t v93 = type metadata accessor for WeatherConditionBackgroundTimeData();
      uint64_t v94 = *(int *)(v93 + 20);
      uint64_t v95 = &v90[v94];
      uint64_t v96 = (const void *)(v91 + v94);
      uint64_t v97 = type metadata accessor for Elevation();
      uint64_t v372 = v97;
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v96, 1, v97))
      {
        uint64_t v98 = sub_10017DF08(&qword_100E63760);
        memcpy(v95, v96, *(void *)(*(void *)(v98 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, const void *, uint64_t))(*(void *)(v97 - 8) + 32))(v95, v96, v97);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v95, 0, 1, v97);
      }
      uint64_t v99 = *(int *)(v93 + 24);
      uint64_t v100 = &v90[v99];
      uint64_t v101 = (const void *)(v91 + v99);
      uint64_t v102 = type metadata accessor for BackgroundMoonData();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v101, 1, v102))
      {
        uint64_t v103 = sub_10017DF08(&qword_100E63768);
        memcpy(v100, v101, *(void *)(*(void *)(v103 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, const void *, uint64_t))(*(void *)(v102 - 8) + 32))(v100, v101, v102);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v100, 0, 1, v102);
      }
      memcpy(&v57[v60[9]], (const void *)(v58 + v60[9]), 0x70uLL);
      uint64_t v104 = v60[10];
      uint64_t v105 = &v57[v104];
      uint64_t v106 = v58 + v104;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v371 - 8) + 32))(&v57[v104], v58 + v104, v371);
      uint64_t v107 = type metadata accessor for UVIndexComponentPreprocessedDataModel();
      *(_OWORD *)&v105[*(int *)(v107 + 20)] = *(_OWORD *)(v106 + *(int *)(v107 + 20));
      uint64_t v108 = v60[11];
      uint64_t v109 = &v57[v108];
      long long v110 = (_OWORD *)(v58 + v108);
      long long v111 = v110[1];
      *(_OWORD *)uint64_t v109 = *v110;
      *((_OWORD *)v109 + 1) = v111;
      *((_OWORD *)v109 + 2) = v110[2];
      uint64_t v112 = v60[12];
      uint64_t v113 = &v57[v112];
      uint64_t v114 = v58 + v112;
      uint64_t v115 = type metadata accessor for PressureTrend();
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v115 - 8) + 32))(v113, v114, v115);
      uint64_t v116 = (int *)type metadata accessor for PressureComponentPreprocessedDataModel();
      *(_OWORD *)&v113[v116[5]] = *(_OWORD *)(v114 + v116[5]);
      *(_OWORD *)&v113[v116[6]] = *(_OWORD *)(v114 + v116[6]);
      *(_OWORD *)&v113[v116[7]] = *(_OWORD *)(v114 + v116[7]);
      *(void *)&v113[v116[8]] = *(void *)(v114 + v116[8]);
      *(_OWORD *)&v113[v116[9]] = *(_OWORD *)(v114 + v116[9]);
      memcpy(&v57[v60[13]], (const void *)(v58 + v60[13]), 0xE8uLL);
      uint64_t v117 = v60[14];
      uint64_t v118 = &v57[v117];
      uint64_t v119 = v58 + v117;
      ((void (*)(char *, uint64_t, uint64_t))v378)(&v57[v117], v58 + v117, v92);
      uint64_t v120 = *(int *)(v93 + 20);
      uint64_t v121 = &v118[v120];
      uint64_t v122 = (const void *)(v119 + v120);
      if (_s7Weather24LocationCompositionStateOwet_0(v119 + v120, 1, v372))
      {
        uint64_t v123 = sub_10017DF08(&qword_100E63760);
        memcpy(v121, v122, *(void *)(*(void *)(v123 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, const void *, uint64_t))(*(void *)(v372 - 8) + 32))(v121, v122, v372);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v121, 0, 1, v372);
      }
      uint64_t v124 = *(int *)(v93 + 24);
      uint64_t v125 = &v118[v124];
      uint64_t v126 = (const void *)(v119 + v124);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v126, 1, v102))
      {
        uint64_t v127 = sub_10017DF08(&qword_100E63768);
        memcpy(v125, v126, *(void *)(*(void *)(v127 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, const void *, uint64_t))(*(void *)(v102 - 8) + 32))(v125, v126, v102);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v125, 0, 1, v102);
      }
      memcpy(&v57[v60[15]], (const void *)(v58 + v60[15]), 0x70uLL);
      uint64_t v128 = *(int *)(v374 + 64);
      uint64_t v129 = (char *)v376 + v128;
      uint64_t v130 = (char *)v383 + v128;
      uint64_t v131 = type metadata accessor for NewsDataModel();
      if (swift_getEnumCaseMultiPayload())
      {
        memcpy(v129, v130, *(void *)(*(void *)(v131 - 8) + 64));
      }
      else
      {
        uint64_t v132 = type metadata accessor for News();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v132 - 8) + 32))(v129, v130, v132);
        swift_storeEnumTagMultiPayload();
      }
      uint64_t v4 = v381;
      uint64_t v5 = v382;
      a3 = v380;
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
        goto LABEL_54;
      }
      uint64_t v21 = type metadata accessor for NewsDataModel();
      if (swift_getEnumCaseMultiPayload())
      {
        memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
      }
      else
      {
        uint64_t v28 = type metadata accessor for News();
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v28 - 8) + 32))(v17, v18, v28);
        swift_storeEnumTagMultiPayload();
      }
    }
    swift_storeEnumTagMultiPayload();
  }
LABEL_54:
  uint64_t v133 = a3[8];
  uint64_t v134 = (void *)((char *)v5 + v133);
  uint64_t v135 = (char *)v4 + v133;
  uint64_t v136 = *(void *)((char *)v4 + v133 + 8);
  *uint64_t v134 = *(void *)((char *)v4 + v133);
  v134[1] = v136;
  swift_bridgeObjectRelease();
  uint64_t v137 = (int *)type metadata accessor for WeatherData(0);
  uint64_t v138 = v137[5];
  uint64_t v139 = (char *)v134 + v138;
  uint64_t v140 = &v135[v138];
  uint64_t v141 = type metadata accessor for Locale();
  int v142 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v139, 1, v141);
  int v143 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v140, 1, v141);
  if (v142)
  {
    if (!v143)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v141 - 8) + 32))(v139, v140, v141);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v139, 0, 1, v141);
      goto LABEL_60;
    }
    goto LABEL_59;
  }
  uint64_t v144 = *(void *)(v141 - 8);
  if (v143)
  {
    (*(void (**)(char *, uint64_t))(v144 + 8))(v139, v141);
LABEL_59:
    uint64_t v145 = sub_10017DF08(&qword_100E63730);
    memcpy(v139, v140, *(void *)(*(void *)(v145 - 8) + 64));
    goto LABEL_60;
  }
  (*(void (**)(char *, char *, uint64_t))(v144 + 40))(v139, v140, v141);
LABEL_60:
  uint64_t v146 = v137[6];
  uint64_t v147 = (char *)v134 + v146;
  uint64_t v148 = &v135[v146];
  uint64_t v375 = type metadata accessor for WeatherDataModel();
  uint64_t v379 = *(void (**)(char *, char *))(*(void *)(v375 - 8) + 40);
  v379(v147, v148);
  uint64_t v149 = v137[7];
  uint64_t v150 = (char *)v134 + v149;
  uint64_t v151 = &v135[v149];
  uint64_t v152 = sub_10017DF08(&qword_100E63738);
  int v153 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v150, 1, v152);
  int v154 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v151, 1, v152);
  if (v153)
  {
    if (!v154)
    {
      uint64_t v155 = type metadata accessor for Date();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v155 - 8) + 32))(v150, v151, v155);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v150, 0, 1, v152);
      goto LABEL_66;
    }
    goto LABEL_65;
  }
  if (v154)
  {
    sub_1009CAF70((uint64_t)v150, &qword_100E63738);
LABEL_65:
    uint64_t v156 = type metadata accessor for WeatherData.CachingState(0);
    memcpy(v150, v151, *(void *)(*(void *)(v156 - 8) + 64));
    goto LABEL_66;
  }
  uint64_t v173 = type metadata accessor for Date();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v173 - 8) + 40))(v150, v151, v173);
LABEL_66:
  if (v5 != v4)
  {
    uint64_t v157 = v137[8];
    uint64_t v158 = (char *)v134 + v157;
    uint64_t v159 = &v135[v157];
    sub_10015695C((uint64_t)v134 + v157, (void (*)(void))type metadata accessor for WeatherData.WeatherStatisticsState);
    uint64_t v160 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v161 = type metadata accessor for WeatherStatisticsModel();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v161 - 8) + 32))(v158, v159, v161);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v158, v159, *(void *)(*(void *)(v160 - 8) + 64));
    }
  }
  uint64_t v162 = v137[9];
  uint64_t v163 = (char *)v134 + v162;
  uint64_t v164 = &v135[v162];
  uint64_t v165 = type metadata accessor for WeatherDataOverrides();
  int v166 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v163, 1, v165);
  int v167 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v164, 1, v165);
  if (v166)
  {
    if (!v167)
    {
      uint64_t v168 = type metadata accessor for Date();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v164, 1, v168))
      {
        uint64_t v169 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
        memcpy(v163, v164, *(void *)(*(void *)(v169 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v168 - 8) + 32))(v163, v164, v168);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v163, 0, 1, v168);
      }
      uint64_t v177 = *(int *)(v165 + 20);
      uint64_t v178 = &v163[v177];
      uint64_t v179 = &v164[v177];
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v179, 1, v168))
      {
        uint64_t v180 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
        memcpy(v178, v179, *(void *)(*(void *)(v180 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v168 - 8) + 32))(v178, v179, v168);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v178, 0, 1, v168);
      }
      uint64_t v181 = (uint64_t)v163;
      uint64_t v182 = v165;
      goto LABEL_88;
    }
    goto LABEL_76;
  }
  if (v167)
  {
    sub_10015695C((uint64_t)v163, (void (*)(void))type metadata accessor for WeatherDataOverrides);
LABEL_76:
    size_t v170 = *(void *)(*(void *)(sub_10017DF08(&qword_100E63740) - 8) + 64);
    uint64_t v171 = v163;
    uint64_t v172 = v164;
LABEL_77:
    memcpy(v171, v172, v170);
    goto LABEL_89;
  }
  uint64_t v174 = type metadata accessor for Date();
  int v175 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v163, 1, v174);
  int v176 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v164, 1, v174);
  if (v175)
  {
    if (!v176)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v174 - 8) + 32))(v163, v164, v174);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v163, 0, 1, v174);
      goto LABEL_139;
    }
    goto LABEL_138;
  }
  uint64_t v363 = *(void *)(v174 - 8);
  if (v176)
  {
    (*(void (**)(char *, uint64_t))(v363 + 8))(v163, v174);
LABEL_138:
    uint64_t v364 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    memcpy(v163, v164, *(void *)(*(void *)(v364 - 8) + 64));
    goto LABEL_139;
  }
  (*(void (**)(char *, char *, uint64_t))(v363 + 40))(v163, v164, v174);
LABEL_139:
  uint64_t v365 = *(int *)(v165 + 20);
  uint64_t v366 = &v163[v365];
  uint64_t v367 = (uint64_t)&v164[v365];
  int v368 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)&v163[v365], 1, v174);
  int v369 = _s7Weather24LocationCompositionStateOwet_0(v367, 1, v174);
  if (v368)
  {
    if (!v369)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v174 - 8) + 32))(v366, v367, v174);
      uint64_t v181 = (uint64_t)v366;
      uint64_t v182 = v174;
LABEL_88:
      _s7Weather24LocationCompositionStateOwst_0(v181, 0, 1, v182);
      goto LABEL_89;
    }
    goto LABEL_144;
  }
  uint64_t v370 = *(void *)(v174 - 8);
  if (v369)
  {
    (*(void (**)(char *, uint64_t))(v370 + 8))(v366, v174);
LABEL_144:
    size_t v170 = *(void *)(*(void *)(sub_10017DF08((uint64_t *)&unk_100E73CA0) - 8) + 64);
    uint64_t v171 = v366;
    uint64_t v172 = (const void *)v367;
    goto LABEL_77;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v370 + 40))(v366, v367, v174);
LABEL_89:
  uint64_t v183 = a3[9];
  uint64_t v184 = (char *)v5 + v183;
  uint64_t v185 = (char *)v4 + v183;
  uint64_t v186 = type metadata accessor for UUID();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v186 - 8) + 40))(v184, v185, v186);
  uint64_t v187 = (int *)type metadata accessor for PreprocessedWeatherData();
  *(void *)&v184[v187[5]] = *(void *)&v185[v187[5]];
  swift_bridgeObjectRelease();
  uint64_t v188 = v187[6];
  uint64_t v189 = &v184[v188];
  uint64_t v190 = &v185[v188];
  uint64_t v191 = *(void *)&v185[v188 + 8];
  *(void *)uint64_t v189 = *(void *)&v185[v188];
  *((void *)v189 + 1) = v191;
  swift_bridgeObjectRelease();
  uint64_t v192 = *((void *)v190 + 3);
  *((void *)v189 + 2) = *((void *)v190 + 2);
  *((void *)v189 + 3) = v192;
  swift_bridgeObjectRelease();
  uint64_t v193 = *((void *)v190 + 5);
  *((void *)v189 + 4) = *((void *)v190 + 4);
  *((void *)v189 + 5) = v193;
  swift_bridgeObjectRelease();
  uint64_t v194 = type metadata accessor for FeelsLikeComponentPreprocessedDataModel();
  uint64_t v195 = *(int *)(v194 + 28);
  uint64_t v196 = &v189[v195];
  uint64_t v197 = &v190[v195];
  uint64_t v198 = type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference(0);
  int v199 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v196, 1, v198);
  int v200 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v197, 1, v198);
  if (v199)
  {
    if (!v200)
    {
      *(_OWORD *)uint64_t v196 = *(_OWORD *)v197;
      uint64_t v201 = *(int *)(v198 + 20);
      uint64_t v202 = &v196[v201];
      uint64_t v203 = &v197[v201];
      uint64_t v204 = type metadata accessor for TemperatureScaleConfiguration();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v204 - 8) + 32))(v202, v203, v204);
      uint64_t v205 = (int *)type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
      *(void *)&v202[v205[5]] = *(void *)&v203[v205[5]];
      *(void *)&v202[v205[6]] = *(void *)&v203[v205[6]];
      *(void *)&v202[v205[7]] = *(void *)&v203[v205[7]];
      *(_OWORD *)&v202[v205[8]] = *(_OWORD *)&v203[v205[8]];
      v202[v205[9]] = v203[v205[9]];
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v196, 0, 1, v198);
      goto LABEL_95;
    }
    goto LABEL_94;
  }
  if (v200)
  {
    sub_10015695C((uint64_t)v196, (void (*)(void))type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference);
LABEL_94:
    uint64_t v206 = sub_10017DF08(&qword_100E63750);
    memcpy(v196, v197, *(void *)(*(void *)(v206 - 8) + 64));
    goto LABEL_95;
  }
  uint64_t v352 = *((void *)v197 + 1);
  *(void *)uint64_t v196 = *(void *)v197;
  *((void *)v196 + 1) = v352;
  swift_bridgeObjectRelease();
  uint64_t v353 = *(int *)(v198 + 20);
  uint64_t v354 = &v196[v353];
  uint64_t v355 = &v197[v353];
  uint64_t v356 = type metadata accessor for TemperatureScaleConfiguration();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v356 - 8) + 40))(v354, v355, v356);
  uint64_t v357 = (int *)type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
  *(void *)&v354[v357[5]] = *(void *)&v355[v357[5]];
  *(void *)&v354[v357[6]] = *(void *)&v355[v357[6]];
  *(void *)&v354[v357[7]] = *(void *)&v355[v357[7]];
  uint64_t v358 = v357[8];
  uint64_t v359 = &v354[v358];
  uint64_t v360 = &v355[v358];
  uint64_t v362 = *(void *)v360;
  uint64_t v361 = *((void *)v360 + 1);
  *(void *)uint64_t v359 = v362;
  *((void *)v359 + 1) = v361;
  swift_bridgeObjectRelease();
  v354[v357[9]] = v355[v357[9]];
LABEL_95:
  uint64_t v207 = *(int *)(v194 + 32);
  uint64_t v208 = &v189[v207];
  uint64_t v209 = &v190[v207];
  uint64_t v211 = *(void *)v209;
  uint64_t v210 = *((void *)v209 + 1);
  *(void *)uint64_t v208 = v211;
  *((void *)v208 + 1) = v210;
  swift_bridgeObjectRelease();
  uint64_t v212 = v187[7];
  uint64_t v213 = &v184[v212];
  uint64_t v214 = &v185[v212];
  *(void *)&v184[v212] = *(void *)&v185[v212];
  swift_bridgeObjectRelease();
  uint64_t v215 = *(int *)(type metadata accessor for HourlyForecastComponentPreprocessedDataModel() + 20);
  uint64_t v216 = &v213[v215];
  uint64_t v217 = &v214[v215];
  uint64_t v218 = type metadata accessor for WeatherDescription();
  int v219 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v216, 1, v218);
  int v220 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v217, 1, v218);
  if (v219)
  {
    if (!v220)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v218 - 8) + 32))(v216, v217, v218);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v216, 0, 1, v218);
      goto LABEL_101;
    }
    goto LABEL_100;
  }
  uint64_t v221 = *(void *)(v218 - 8);
  if (v220)
  {
    (*(void (**)(char *, uint64_t))(v221 + 8))(v216, v218);
LABEL_100:
    uint64_t v222 = sub_10017DF08(&qword_100E63758);
    memcpy(v216, v217, *(void *)(*(void *)(v222 - 8) + 64));
    goto LABEL_101;
  }
  (*(void (**)(char *, char *, uint64_t))(v221 + 40))(v216, v217, v218);
LABEL_101:
  uint64_t v223 = v187[8];
  int v224 = &v184[v223];
  int v225 = &v185[v223];
  uint64_t v226 = *(void *)&v185[v223 + 8];
  *(void *)int v224 = *(void *)&v185[v223];
  *((void *)v224 + 1) = v226;
  swift_bridgeObjectRelease();
  uint64_t v227 = *((void *)v225 + 3);
  *((void *)v224 + 2) = *((void *)v225 + 2);
  *((void *)v224 + 3) = v227;
  swift_bridgeObjectRelease();
  uint64_t v228 = *((void *)v225 + 5);
  *((void *)v224 + 4) = *((void *)v225 + 4);
  *((void *)v224 + 5) = v228;
  swift_bridgeObjectRelease();
  uint64_t v229 = *((void *)v225 + 7);
  *((void *)v224 + 6) = *((void *)v225 + 6);
  *((void *)v224 + 7) = v229;
  swift_bridgeObjectRelease();
  uint64_t v230 = *(int *)(type metadata accessor for ListPreprocessedDataModel() + 32);
  uint64_t v231 = &v224[v230];
  uint64_t v232 = &v225[v230];
  uint64_t v373 = type metadata accessor for Date();
  uint64_t v377 = *(void (**)(char *, char *))(*(void *)(v373 - 8) + 40);
  v377(v231, v232);
  uint64_t v384 = type metadata accessor for WeatherConditionBackgroundTimeData();
  uint64_t v233 = *(int *)(v384 + 20);
  uint64_t v234 = &v231[v233];
  uint64_t v235 = &v232[v233];
  uint64_t v236 = type metadata accessor for Elevation();
  int v237 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v234, 1, v236);
  int v238 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v235, 1, v236);
  if (v237)
  {
    if (!v238)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v236 - 8) + 32))(v234, v235, v236);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v234, 0, 1, v236);
      goto LABEL_107;
    }
    goto LABEL_106;
  }
  uint64_t v239 = *(void *)(v236 - 8);
  if (v238)
  {
    (*(void (**)(char *, uint64_t))(v239 + 8))(v234, v236);
LABEL_106:
    uint64_t v240 = sub_10017DF08(&qword_100E63760);
    memcpy(v234, v235, *(void *)(*(void *)(v240 - 8) + 64));
    goto LABEL_107;
  }
  (*(void (**)(char *, char *, uint64_t))(v239 + 40))(v234, v235, v236);
LABEL_107:
  uint64_t v241 = *(int *)(v384 + 24);
  uint64_t v242 = &v231[v241];
  uint64_t v243 = &v232[v241];
  uint64_t v244 = type metadata accessor for BackgroundMoonData();
  int v245 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v242, 1, v244);
  int v246 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v243, 1, v244);
  if (v245)
  {
    if (!v246)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v244 - 8) + 32))(v242, v243, v244);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v242, 0, 1, v244);
      goto LABEL_113;
    }
    goto LABEL_112;
  }
  uint64_t v247 = *(void *)(v244 - 8);
  if (v246)
  {
    (*(void (**)(char *, uint64_t))(v247 + 8))(v242, v244);
LABEL_112:
    uint64_t v248 = sub_10017DF08(&qword_100E63768);
    memcpy(v242, v243, *(void *)(*(void *)(v248 - 8) + 64));
    goto LABEL_113;
  }
  (*(void (**)(char *, char *, uint64_t))(v247 + 40))(v242, v243, v244);
LABEL_113:
  uint64_t v249 = v187[9];
  uint64_t v250 = &v184[v249];
  uint64_t v251 = &v185[v249];
  uint64_t v252 = *(void *)&v185[v249 + 8];
  *(void *)uint64_t v250 = *(void *)&v185[v249];
  *((void *)v250 + 1) = v252;
  swift_bridgeObjectRelease();
  uint64_t v253 = *((void *)v251 + 3);
  *((void *)v250 + 2) = *((void *)v251 + 2);
  *((void *)v250 + 3) = v253;
  swift_bridgeObjectRelease();
  uint64_t v254 = *((void *)v251 + 5);
  *((void *)v250 + 4) = *((void *)v251 + 4);
  *((void *)v250 + 5) = v254;
  swift_bridgeObjectRelease();
  uint64_t v255 = *((void *)v251 + 7);
  *((void *)v250 + 6) = *((void *)v251 + 6);
  *((void *)v250 + 7) = v255;
  swift_bridgeObjectRelease();
  uint64_t v256 = *((void *)v251 + 9);
  *((void *)v250 + 8) = *((void *)v251 + 8);
  *((void *)v250 + 9) = v256;
  swift_bridgeObjectRelease();
  uint64_t v257 = *((void *)v251 + 11);
  *((void *)v250 + 10) = *((void *)v251 + 10);
  *((void *)v250 + 11) = v257;
  swift_bridgeObjectRelease();
  uint64_t v258 = *((void *)v251 + 13);
  *((void *)v250 + 12) = *((void *)v251 + 12);
  *((void *)v250 + 13) = v258;
  swift_bridgeObjectRelease();
  uint64_t v259 = v187[10];
  int v260 = &v184[v259];
  int v261 = &v185[v259];
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v218 - 8) + 40))(&v184[v259], &v185[v259], v218);
  uint64_t v262 = *(int *)(type metadata accessor for UVIndexComponentPreprocessedDataModel() + 20);
  uint64_t v263 = &v260[v262];
  uint64_t v264 = &v261[v262];
  uint64_t v266 = *(void *)v264;
  uint64_t v265 = *((void *)v264 + 1);
  *(void *)uint64_t v263 = v266;
  *((void *)v263 + 1) = v265;
  swift_bridgeObjectRelease();
  uint64_t v267 = v187[11];
  int v268 = &v184[v267];
  int v269 = &v185[v267];
  uint64_t v270 = *(void *)&v185[v267 + 8];
  *(void *)int v268 = *(void *)&v185[v267];
  *((void *)v268 + 1) = v270;
  swift_bridgeObjectRelease();
  uint64_t v271 = *((void *)v269 + 3);
  *((void *)v268 + 2) = *((void *)v269 + 2);
  *((void *)v268 + 3) = v271;
  swift_bridgeObjectRelease();
  uint64_t v272 = *((void *)v269 + 5);
  *((void *)v268 + 4) = *((void *)v269 + 4);
  *((void *)v268 + 5) = v272;
  swift_bridgeObjectRelease();
  uint64_t v273 = v187[12];
  uint64_t v274 = &v184[v273];
  uint64_t v275 = &v185[v273];
  uint64_t v276 = type metadata accessor for PressureTrend();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v276 - 8) + 40))(v274, v275, v276);
  uint64_t v277 = (int *)type metadata accessor for PressureComponentPreprocessedDataModel();
  uint64_t v278 = v277[5];
  v279 = &v274[v278];
  uint64_t v280 = &v275[v278];
  uint64_t v282 = *(void *)v280;
  uint64_t v281 = *((void *)v280 + 1);
  *(void *)v279 = v282;
  *((void *)v279 + 1) = v281;
  swift_bridgeObjectRelease();
  uint64_t v283 = v277[6];
  uint64_t v284 = &v274[v283];
  uint64_t v285 = &v275[v283];
  uint64_t v287 = *(void *)v285;
  uint64_t v286 = *((void *)v285 + 1);
  *(void *)uint64_t v284 = v287;
  *((void *)v284 + 1) = v286;
  swift_bridgeObjectRelease();
  uint64_t v288 = v277[7];
  uint64_t v289 = &v274[v288];
  uint64_t v290 = &v275[v288];
  uint64_t v292 = *(void *)v290;
  uint64_t v291 = *((void *)v290 + 1);
  *(void *)uint64_t v289 = v292;
  *((void *)v289 + 1) = v291;
  swift_bridgeObjectRelease();
  *(void *)&v274[v277[8]] = *(void *)&v275[v277[8]];
  uint64_t v293 = v277[9];
  uint64_t v294 = &v274[v293];
  uint64_t v295 = &v275[v293];
  uint64_t v297 = *(void *)v295;
  uint64_t v296 = *((void *)v295 + 1);
  *(void *)uint64_t v294 = v297;
  *((void *)v294 + 1) = v296;
  swift_bridgeObjectRelease();
  uint64_t v298 = v187[13];
  uint64_t v299 = &v184[v298];
  uint64_t v300 = &v185[v298];
  uint64_t v301 = *(void *)&v185[v298 + 8];
  *(void *)uint64_t v299 = *(void *)&v185[v298];
  *((void *)v299 + 1) = v301;
  swift_bridgeObjectRelease();
  uint64_t v302 = *((void *)v300 + 3);
  *((void *)v299 + 2) = *((void *)v300 + 2);
  *((void *)v299 + 3) = v302;
  swift_bridgeObjectRelease();
  uint64_t v303 = *((void *)v300 + 5);
  *((void *)v299 + 4) = *((void *)v300 + 4);
  *((void *)v299 + 5) = v303;
  swift_bridgeObjectRelease();
  uint64_t v304 = *((void *)v300 + 7);
  *((void *)v299 + 6) = *((void *)v300 + 6);
  *((void *)v299 + 7) = v304;
  swift_bridgeObjectRelease();
  uint64_t v305 = *((void *)v300 + 9);
  *((void *)v299 + 8) = *((void *)v300 + 8);
  *((void *)v299 + 9) = v305;
  swift_bridgeObjectRelease();
  uint64_t v306 = *((void *)v300 + 11);
  *((void *)v299 + 10) = *((void *)v300 + 10);
  *((void *)v299 + 11) = v306;
  swift_bridgeObjectRelease();
  uint64_t v307 = *((void *)v300 + 13);
  *((void *)v299 + 12) = *((void *)v300 + 12);
  *((void *)v299 + 13) = v307;
  swift_bridgeObjectRelease();
  uint64_t v308 = *((void *)v300 + 15);
  *((void *)v299 + 14) = *((void *)v300 + 14);
  *((void *)v299 + 15) = v308;
  swift_bridgeObjectRelease();
  uint64_t v309 = *((void *)v300 + 17);
  *((void *)v299 + 16) = *((void *)v300 + 16);
  *((void *)v299 + 17) = v309;
  swift_bridgeObjectRelease();
  uint64_t v310 = *((void *)v300 + 19);
  *((void *)v299 + 18) = *((void *)v300 + 18);
  *((void *)v299 + 19) = v310;
  swift_bridgeObjectRelease();
  uint64_t v311 = *((void *)v300 + 21);
  *((void *)v299 + 20) = *((void *)v300 + 20);
  *((void *)v299 + 21) = v311;
  swift_bridgeObjectRelease();
  uint64_t v312 = *((void *)v300 + 23);
  *((void *)v299 + 22) = *((void *)v300 + 22);
  *((void *)v299 + 23) = v312;
  swift_bridgeObjectRelease();
  uint64_t v313 = *((void *)v300 + 25);
  *((void *)v299 + 24) = *((void *)v300 + 24);
  *((void *)v299 + 25) = v313;
  swift_bridgeObjectRelease();
  *((void *)v299 + 26) = *((void *)v300 + 26);
  uint64_t v314 = *((void *)v300 + 28);
  *((void *)v299 + 27) = *((void *)v300 + 27);
  *((void *)v299 + 28) = v314;
  swift_bridgeObjectRelease();
  uint64_t v315 = v187[14];
  uint64_t v316 = &v184[v315];
  uint64_t v317 = &v185[v315];
  ((void (*)(char *, char *, uint64_t))v377)(&v184[v315], &v185[v315], v373);
  uint64_t v318 = *(int *)(v384 + 20);
  int v319 = &v316[v318];
  uint64_t v320 = &v317[v318];
  int v321 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)&v316[v318], 1, v236);
  int v322 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v320, 1, v236);
  if (v321)
  {
    if (!v322)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v236 - 8) + 32))(v319, v320, v236);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v319, 0, 1, v236);
      goto LABEL_119;
    }
    goto LABEL_118;
  }
  uint64_t v323 = *(void *)(v236 - 8);
  if (v322)
  {
    (*(void (**)(char *, uint64_t))(v323 + 8))(v319, v236);
LABEL_118:
    uint64_t v324 = sub_10017DF08(&qword_100E63760);
    memcpy(v319, v320, *(void *)(*(void *)(v324 - 8) + 64));
    goto LABEL_119;
  }
  (*(void (**)(char *, char *, uint64_t))(v323 + 40))(v319, v320, v236);
LABEL_119:
  uint64_t v325 = *(int *)(v384 + 24);
  uint64_t v326 = &v316[v325];
  uint64_t v327 = &v317[v325];
  int v328 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)&v316[v325], 1, v244);
  int v329 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v327, 1, v244);
  if (v328)
  {
    if (!v329)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v244 - 8) + 32))(v326, v327, v244);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v326, 0, 1, v244);
      goto LABEL_125;
    }
    goto LABEL_124;
  }
  uint64_t v330 = *(void *)(v244 - 8);
  if (v329)
  {
    (*(void (**)(char *, uint64_t))(v330 + 8))(v326, v244);
LABEL_124:
    uint64_t v331 = sub_10017DF08(&qword_100E63768);
    memcpy(v326, v327, *(void *)(*(void *)(v331 - 8) + 64));
    goto LABEL_125;
  }
  (*(void (**)(char *, char *, uint64_t))(v330 + 40))(v326, v327, v244);
LABEL_125:
  uint64_t v332 = v187[15];
  uint64_t v333 = &v184[v332];
  uint64_t v334 = &v185[v332];
  uint64_t v335 = *(void *)&v185[v332 + 8];
  *(void *)uint64_t v333 = *(void *)&v185[v332];
  *((void *)v333 + 1) = v335;
  swift_bridgeObjectRelease();
  uint64_t v336 = *((void *)v334 + 3);
  *((void *)v333 + 2) = *((void *)v334 + 2);
  *((void *)v333 + 3) = v336;
  swift_bridgeObjectRelease();
  uint64_t v337 = *((void *)v334 + 5);
  *((void *)v333 + 4) = *((void *)v334 + 4);
  *((void *)v333 + 5) = v337;
  swift_bridgeObjectRelease();
  uint64_t v338 = *((void *)v334 + 7);
  *((void *)v333 + 6) = *((void *)v334 + 6);
  *((void *)v333 + 7) = v338;
  swift_bridgeObjectRelease();
  uint64_t v339 = *((void *)v334 + 9);
  *((void *)v333 + 8) = *((void *)v334 + 8);
  *((void *)v333 + 9) = v339;
  swift_bridgeObjectRelease();
  uint64_t v340 = *((void *)v334 + 11);
  *((void *)v333 + 10) = *((void *)v334 + 10);
  *((void *)v333 + 11) = v340;
  swift_bridgeObjectRelease();
  uint64_t v341 = *((void *)v334 + 13);
  *((void *)v333 + 12) = *((void *)v334 + 12);
  *((void *)v333 + 13) = v341;
  swift_bridgeObjectRelease();
  if (v382 != v381)
  {
    uint64_t v342 = v380[10];
    uint64_t v343 = (char *)v382 + v342;
    uint64_t v344 = (char *)v381 + v342;
    sub_10015695C((uint64_t)v382 + v342, (void (*)(void))type metadata accessor for NewsDataModel);
    uint64_t v345 = type metadata accessor for NewsDataModel();
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v343, v344, *(void *)(*(void *)(v345 - 8) + 64));
    }
    else
    {
      uint64_t v346 = type metadata accessor for News();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v346 - 8) + 32))(v343, v344, v346);
      swift_storeEnumTagMultiPayload();
    }
  }
  *(_OWORD *)((char *)v382 + v380[11]) = *(_OWORD *)((char *)v381 + v380[11]);
  swift_release();
  uint64_t v347 = v380[12];
  uint64_t v348 = (char *)v382 + v347;
  uint64_t v349 = (char *)v381 + v347;
  ((void (*)(char *, char *, uint64_t))v379)((char *)v382 + v347, (char *)v381 + v347, v375);
  uint64_t v350 = sub_10017DF08(&qword_100EA6858);
  *(void *)&v348[*(int *)(v350 + 28)] = *(void *)&v349[*(int *)(v350 + 28)];
  swift_release();
  return v382;
}

uint64_t sub_1009C83B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1009C83C8);
}

uint64_t sub_1009C83C8(uint64_t a1, uint64_t a2, int *a3)
{
  sub_10017DF08(&qword_100E669A8);
  sub_100162F30();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1;
LABEL_19:
    return _s7Weather24LocationCompositionStateOwet_0(v9, a2, v8);
  }
  type metadata accessor for LocationModel();
  sub_100162F30();
  if (*(_DWORD *)(v11 + 84) == a2)
  {
    uint64_t v8 = v10;
    uint64_t v12 = a3[5];
LABEL_18:
    uint64_t v9 = a1 + v12;
    goto LABEL_19;
  }
  type metadata accessor for LocationWeatherDataState(0);
  sub_100162F30();
  if (*(_DWORD *)(v14 + 84) == a2)
  {
    uint64_t v8 = v13;
    uint64_t v12 = a3[7];
    goto LABEL_18;
  }
  type metadata accessor for WeatherData(0);
  sub_100162F30();
  if (*(_DWORD *)(v16 + 84) == a2)
  {
    uint64_t v8 = v15;
    uint64_t v12 = a3[8];
    goto LABEL_18;
  }
  type metadata accessor for PreprocessedWeatherData();
  sub_100162F30();
  if (*(_DWORD *)(v18 + 84) == a2)
  {
    uint64_t v8 = v17;
    uint64_t v12 = a3[9];
    goto LABEL_18;
  }
  type metadata accessor for NewsDataModel();
  sub_100162F30();
  if (*(_DWORD *)(v20 + 84) == a2)
  {
    uint64_t v8 = v19;
    uint64_t v12 = a3[10];
    goto LABEL_18;
  }
  if (a2 != 0x7FFFFFFF)
  {
    uint64_t v8 = sub_10017DF08(&qword_100EA6858);
    uint64_t v12 = a3[12];
    goto LABEL_18;
  }
  unint64_t v21 = *(void *)(a1 + a3[11]);
  if (v21 >= 0xFFFFFFFF) {
    LODWORD(v21) = -1;
  }
  return (v21 + 1);
}

uint64_t sub_1009C8534(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1009C8548);
}

void sub_1009C8548(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  sub_10017DF08(&qword_100E669A8);
  sub_100162F30();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = a1;
  }
  else
  {
    type metadata accessor for LocationModel();
    sub_100162F30();
    if (*(_DWORD *)(v13 + 84) == a3)
    {
      uint64_t v10 = v12;
      uint64_t v14 = a4[5];
    }
    else
    {
      type metadata accessor for LocationWeatherDataState(0);
      sub_100162F30();
      if (*(_DWORD *)(v16 + 84) == a3)
      {
        uint64_t v10 = v15;
        uint64_t v14 = a4[7];
      }
      else
      {
        type metadata accessor for WeatherData(0);
        sub_100162F30();
        if (*(_DWORD *)(v18 + 84) == a3)
        {
          uint64_t v10 = v17;
          uint64_t v14 = a4[8];
        }
        else
        {
          type metadata accessor for PreprocessedWeatherData();
          sub_100162F30();
          if (*(_DWORD *)(v20 + 84) == a3)
          {
            uint64_t v10 = v19;
            uint64_t v14 = a4[9];
          }
          else
          {
            type metadata accessor for NewsDataModel();
            sub_100162F30();
            if (*(_DWORD *)(v22 + 84) == a3)
            {
              uint64_t v10 = v21;
              uint64_t v14 = a4[10];
            }
            else
            {
              if (a3 == 0x7FFFFFFF)
              {
                *(void *)(a1 + a4[11]) = (a2 - 1);
                return;
              }
              uint64_t v10 = sub_10017DF08(&qword_100EA6858);
              uint64_t v14 = a4[12];
            }
          }
        }
      }
    }
    uint64_t v11 = a1 + v14;
  }

  _s7Weather24LocationCompositionStateOwst_0(v11, a2, a2, v10);
}

uint64_t type metadata accessor for WeatherEditorView()
{
  uint64_t result = qword_100EA68B8;
  if (!qword_100EA68B8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1009C86F8()
{
  sub_1002307EC();
  if (v0 <= 0x3F)
  {
    type metadata accessor for LocationModel();
    if (v1 <= 0x3F)
    {
      type metadata accessor for LocationWeatherDataState(319);
      if (v2 <= 0x3F)
      {
        type metadata accessor for WeatherData(319);
        if (v3 <= 0x3F)
        {
          type metadata accessor for PreprocessedWeatherData();
          if (v4 <= 0x3F)
          {
            type metadata accessor for NewsDataModel();
            if (v5 <= 0x3F)
            {
              sub_1009C8904();
              if (v6 <= 0x3F) {
                swift_initStructMetadata();
              }
            }
          }
        }
      }
    }
  }
}

void sub_1009C8904()
{
  if (!qword_100EA68C8)
  {
    type metadata accessor for WeatherDataModel();
    unint64_t v0 = type metadata accessor for State();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100EA68C8);
    }
  }
}

uint64_t sub_1009C895C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1009C8978()
{
  uint64_t v0 = type metadata accessor for InsetGroupedListStyle();
  sub_100179C0C();
  uint64_t v2 = v1;
  __chkstk_darwin(v3);
  sub_1001626E0();
  uint64_t v6 = v5 - v4;
  uint64_t v7 = sub_10017DF08(&qword_100EA6918);
  sub_100179C0C();
  uint64_t v9 = v8;
  __chkstk_darwin(v10);
  sub_1001626E0();
  uint64_t v13 = v12 - v11;
  sub_10017DF08(&qword_100EA6920);
  sub_1001246C8(&qword_100EA6928, &qword_100EA6920);
  List<>.init(content:)();
  InsetGroupedListStyle.init()();
  sub_1001246C8(&qword_100EA6930, &qword_100EA6918);
  View.listStyle<A>(_:)();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v6, v0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8))(v13, v7);
}

uint64_t sub_1009C8B3C@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v41 = a2;
  uint64_t v40 = sub_10017DF08(&qword_100EA6938);
  uint64_t v43 = *(void *)(v40 - 8);
  __chkstk_darwin(v40);
  uint64_t v39 = (char *)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v38 = (char *)&v32 - v5;
  __chkstk_darwin(v6);
  uint64_t v42 = (char *)&v32 - v7;
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v32 - v9;
  uint64_t v37 = sub_10017DF08(&qword_100EA6940);
  uint64_t v35 = *(void *)(v37 - 8);
  uint64_t v11 = v35;
  __chkstk_darwin(v37);
  uint64_t v36 = (char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v32 - v14;
  uint64_t v46 = a1;
  unint64_t v47 = 0xD00000000000003ELL;
  unint64_t v48 = 0x8000000100CB9100;
  char v49 = 0;
  uint64_t v50 = _swiftEmptyArrayStorage;
  sub_10017DF08(&qword_100EA6948);
  sub_1001246C8(&qword_100EA6950, &qword_100EA6948);
  uint64_t v34 = v15;
  Section<>.init(footer:content:)();
  uint64_t v45 = a1;
  unint64_t v47 = 0xD000000000000039;
  unint64_t v48 = 0x8000000100CB9140;
  char v49 = 0;
  uint64_t v50 = _swiftEmptyArrayStorage;
  sub_10017DF08(&qword_100EA6958);
  sub_1009CAE18();
  uint64_t v33 = v10;
  Section<>.init(footer:content:)();
  uint64_t v44 = a1;
  unint64_t v47 = 0xD000000000000037;
  unint64_t v48 = 0x8000000100CB9180;
  char v49 = 0;
  uint64_t v50 = _swiftEmptyArrayStorage;
  uint64_t v16 = v42;
  Section<>.init(footer:content:)();
  uint64_t v17 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
  uint64_t v18 = v36;
  uint64_t v19 = v15;
  uint64_t v20 = v37;
  v17(v36, v19, v37);
  uint64_t v21 = *(void (**)(char *, char *, uint64_t))(v43 + 16);
  uint64_t v22 = v38;
  uint64_t v23 = v40;
  v21(v38, v10, v40);
  uint64_t v24 = v39;
  uint64_t v25 = v16;
  uint64_t v26 = v23;
  v21(v39, v25, v23);
  uint64_t v27 = v41;
  v17(v41, v18, v20);
  uint64_t v28 = sub_10017DF08(&qword_100EA6968);
  v21(&v27[*(int *)(v28 + 48)], v22, v26);
  v21(&v27[*(int *)(v28 + 64)], v24, v26);
  uint64_t v29 = *(void (**)(char *, uint64_t))(v43 + 8);
  v29(v42, v26);
  v29(v33, v26);
  uint64_t v30 = *(void (**)(char *, uint64_t))(v35 + 8);
  v30(v34, v20);
  v29(v24, v26);
  v29(v22, v26);
  return ((uint64_t (*)(char *, uint64_t))v30)(v18, v20);
}

uint64_t sub_1009C902C@<X0>(char *a1@<X8>)
{
  uint64_t v28 = a1;
  uint64_t v1 = sub_10017DF08(&qword_100EA6970);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v25 = v1;
  uint64_t v26 = v2;
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v25 - v6;
  uint64_t v8 = sub_10017DF08(&qword_100EA6978);
  uint64_t v27 = *(void *)(v8 - 8);
  uint64_t v9 = v27;
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v25 - v13;
  sub_1009C92B8((uint64_t)&v25 - v13);
  sub_1009C9718((uint64_t)v7);
  uint64_t v15 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
  v15(v11, v14, v8);
  uint64_t v16 = *(void (**)(char *, char *, uint64_t))(v2 + 16);
  v16(v4, v7, v1);
  uint64_t v17 = v28;
  v15(v28, v11, v8);
  uint64_t v18 = sub_10017DF08(&qword_100EA6980);
  uint64_t v19 = v25;
  v16(&v17[*(int *)(v18 + 48)], v4, v25);
  uint64_t v20 = *(void (**)(char *, uint64_t))(v26 + 8);
  uint64_t v21 = v7;
  uint64_t v22 = v19;
  v20(v21, v19);
  uint64_t v23 = *(void (**)(char *, uint64_t))(v27 + 8);
  v23(v14, v8);
  v20(v4, v22);
  return ((uint64_t (*)(char *, uint64_t))v23)(v11, v8);
}

uint64_t sub_1009C92B8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v34 = a1;
  uint64_t v2 = type metadata accessor for WeatherEditorView();
  uint64_t v30 = *(void *)(v2 - 8);
  uint64_t v29 = *(void *)(v30 + 64);
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for CurrentWeather();
  uint64_t v31 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v33 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v32 = (char *)&v27 - v8;
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v27 - v10;
  uint64_t v12 = type metadata accessor for WeatherDataModel();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for CurrentWeatherEditorView();
  __chkstk_darwin(v16);
  uint64_t v18 = (uint64_t *)((char *)&v27 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v28 = v1;
  sub_10017DF08(&qword_100EA6858);
  State.wrappedValue.getter();
  WeatherDataModel.currentWeather.getter();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  sub_1009CB1E4(v1, (uint64_t)v4, (void (*)(void))type metadata accessor for WeatherEditorView);
  unint64_t v19 = (*(unsigned __int8 *)(v30 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80);
  uint64_t v30 = swift_allocObject();
  sub_1001EFFFC((uint64_t)v4, v30 + v19, (void (*)(void))type metadata accessor for WeatherEditorView);
  uint64_t *v18 = swift_getKeyPath();
  sub_10017DF08(&qword_100E65310);
  swift_storeEnumTagMultiPayload();
  uint64_t v20 = v31;
  uint64_t v21 = *(void (**)(char *, char *, uint64_t))(v31 + 16);
  v21((char *)v18 + *(int *)(v16 + 20), v11, v5);
  uint64_t v22 = v32;
  v21(v32, v11, v5);
  v21(v33, v22, v5);
  State.init(wrappedValue:)();
  uint64_t v23 = *(void (**)(char *, uint64_t))(v20 + 8);
  v23(v22, v5);
  v23(v11, v5);
  uint64_t v24 = (uint64_t (**)(uint64_t))((char *)v18 + *(int *)(v16 + 24));
  uint64_t v25 = v30;
  char *v24 = sub_1009CB074;
  v24[1] = (uint64_t (*)(uint64_t))v25;
  uint64_t v35 = v28;
  sub_1009CB144(&qword_100EA69A0, (void (*)(uint64_t))type metadata accessor for CurrentWeatherEditorView);
  return NavigationLink.init(destination:label:)();
}

uint64_t sub_1009C9718@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v43 = a1;
  uint64_t v3 = type metadata accessor for WeatherEditorView();
  uint64_t v4 = v3 - 8;
  uint64_t v38 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v39 = v5;
  uint64_t v40 = (uint64_t)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10017DF08(&qword_100E6D1D8);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = type metadata accessor for TimeZone();
  uint64_t v36 = *(void *)(v45 - 8);
  __chkstk_darwin(v45);
  uint64_t v44 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10017DF08(&qword_100E66CA0);
  uint64_t v41 = *(void *)(v10 - 8);
  uint64_t v42 = v10;
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for WeatherDataModel();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = (int *)type metadata accessor for DailyForecastEditorView();
  __chkstk_darwin(v17);
  unint64_t v19 = (uint64_t *)((char *)&v35 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10017DF08(&qword_100EA6858);
  State.wrappedValue.getter();
  uint64_t v37 = v12;
  WeatherDataModel.dailyForecast.getter();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  uint64_t v20 = *(void *)(v1 + *(int *)(v4 + 32));
  LocationModel.timeZone.getter();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v45) == 1)
  {
    static TimeZone.current.getter();
    sub_1009CAF70((uint64_t)v8, &qword_100E6D1D8);
    uint64_t v21 = v36;
  }
  else
  {
    uint64_t v21 = v36;
    (*(void (**)(char *, char *, uint64_t))(v36 + 32))(v44, v8, v45);
  }
  uint64_t v22 = v40;
  sub_1009CB1E4(v1, v40, (void (*)(void))type metadata accessor for WeatherEditorView);
  unint64_t v23 = (*(unsigned __int8 *)(v38 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80);
  uint64_t v39 = swift_allocObject();
  sub_1001EFFFC(v22, v39 + v23, (void (*)(void))type metadata accessor for WeatherEditorView);
  *unint64_t v19 = swift_getKeyPath();
  sub_10017DF08(&qword_100E65310);
  swift_storeEnumTagMultiPayload();
  uint64_t v24 = v41;
  uint64_t v25 = v42;
  uint64_t v26 = v37;
  (*(void (**)(char *, char *, uint64_t))(v41 + 16))((char *)v19 + v17[5], v37, v42);
  uint64_t v27 = Forecast.forecast.getter();
  uint64_t v28 = (uint64_t *)((char *)v19 + v17[9]);
  uint64_t v46 = v27;
  sub_10017DF08(&qword_100EA6988);
  State.init(wrappedValue:)();
  uint64_t v29 = v47;
  uint64_t v30 = v48;
  (*(void (**)(char *, uint64_t))(v24 + 8))(v26, v25);
  *uint64_t v28 = v29;
  v28[1] = v30;
  *(uint64_t *)((char *)v19 + v17[6]) = v20;
  uint64_t v31 = (*(uint64_t (**)(char *, char *, uint64_t))(v21 + 32))((char *)v19 + v17[7], v44, v45);
  uint64_t v32 = (uint64_t (**)(uint64_t))((char *)v19 + v17[8]);
  uint64_t v33 = v39;
  char *v32 = sub_1009CAFBC;
  v32[1] = (uint64_t (*)(uint64_t))v33;
  __chkstk_darwin(v31);
  *(&v35 - 2) = v2;
  sub_1009CB144(&qword_100EA6990, (void (*)(uint64_t))type metadata accessor for DailyForecastEditorView);
  return NavigationLink.init(destination:label:)();
}

uint64_t sub_1009C9C90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v17 = a2;
  uint64_t v3 = type metadata accessor for WeatherEditorView();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  __chkstk_darwin(v3 - 8);
  uint64_t v6 = sub_10017DF08(&qword_100E65388);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v16 = v10;
  sub_1009CB1E4(a1, (uint64_t)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), (void (*)(void))type metadata accessor for WeatherEditorView);
  unint64_t v11 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v12 = swift_allocObject();
  sub_1001EFFFC((uint64_t)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v12 + v11, (void (*)(void))type metadata accessor for WeatherEditorView);
  Button<>.init(_:action:)();
  uint64_t v13 = static Color.red.getter();
  uint64_t v14 = v17;
  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 16))(v17, v9, v6);
  *(void *)(v14 + *(int *)(sub_10017DF08(&qword_100EA6958) + 36)) = v13;
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1009C9ED8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v17 = a2;
  uint64_t v3 = type metadata accessor for WeatherEditorView();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  __chkstk_darwin(v3 - 8);
  uint64_t v6 = sub_10017DF08(&qword_100E65388);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v16 = v10;
  sub_1009CB1E4(a1, (uint64_t)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), (void (*)(void))type metadata accessor for WeatherEditorView);
  unint64_t v11 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v12 = swift_allocObject();
  sub_1001EFFFC((uint64_t)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v12 + v11, (void (*)(void))type metadata accessor for WeatherEditorView);
  Button<>.init(_:action:)();
  uint64_t v13 = static Color.green.getter();
  uint64_t v14 = v17;
  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 16))(v17, v9, v6);
  *(void *)(v14 + *(int *)(sub_10017DF08(&qword_100EA6958) + 36)) = v13;
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1009CA11C()
{
  uint64_t v0 = type metadata accessor for CurrentWeather();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v14 - v5;
  uint64_t v7 = type metadata accessor for WeatherDataModel();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for WeatherEditorView();
  sub_10017DF08(&qword_100EA6858);
  State.wrappedValue.getter();
  WeatherDataModel.currentWeather.getter();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  type metadata accessor for WeatherData(0);
  WeatherDataModel.currentWeather.getter();
  sub_1009CB144(&qword_100EA69A8, (void (*)(uint64_t))&type metadata accessor for CurrentWeather);
  char v11 = dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t v12 = *(void (**)(char *, uint64_t))(v1 + 8);
  v12(v3, v0);
  v12(v6, v0);
  if (v11) {
    return 0;
  }
  else {
    return 42;
  }
}

uint64_t sub_1009CA370(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for WeatherDataModel();
  __chkstk_darwin(v2 - 8);
  uint64_t v3 = type metadata accessor for CurrentWeather();
  __n128 v4 = __chkstk_darwin(v3);
  (*(void (**)(char *, uint64_t, __n128))(v6 + 16))((char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
  type metadata accessor for WeatherEditorView();
  sub_10017DF08(&qword_100EA6858);
  State.wrappedValue.getter();
  WeatherDataModel.currentWeather.setter();
  return State.wrappedValue.setter();
}

uint64_t sub_1009CA4C4()
{
  uint64_t v0 = sub_10017DF08(&qword_100E66CA0);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v14 - v5;
  uint64_t v7 = type metadata accessor for WeatherDataModel();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for WeatherEditorView();
  sub_10017DF08(&qword_100EA6858);
  State.wrappedValue.getter();
  WeatherDataModel.dailyForecast.getter();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  type metadata accessor for WeatherData(0);
  WeatherDataModel.dailyForecast.getter();
  sub_1001246C8(&qword_100EA6998, &qword_100E66CA0);
  char v11 = dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t v12 = *(void (**)(char *, uint64_t))(v1 + 8);
  v12(v3, v0);
  v12(v6, v0);
  if (v11) {
    return 0;
  }
  else {
    return 42;
  }
}

uint64_t sub_1009CA710(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for WeatherDataModel();
  __chkstk_darwin(v2 - 8);
  uint64_t v3 = sub_10017DF08(&qword_100E66CA0);
  __n128 v4 = __chkstk_darwin(v3);
  (*(void (**)(char *, uint64_t, __n128))(v6 + 16))((char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
  type metadata accessor for WeatherEditorView();
  sub_10017DF08(&qword_100EA6858);
  State.wrappedValue.getter();
  WeatherDataModel.dailyForecast.setter();
  return State.wrappedValue.setter();
}

void sub_1009CA868(Swift::Int a1@<X1>, uint64_t (*a2)(uint64_t, uint64_t)@<X2>, uint64_t a3@<X3>, void *a4@<X4>, uint64_t a5@<X8>)
{
  _StringGuts.grow(_:)(a1);
  uint64_t v11 = a2(v9, v10);
  uint64_t v13 = v12;
  swift_bridgeObjectRelease();
  v14._uint64_t countAndFlagsBits = a3;
  v14._object = a4;
  String.append(_:)(v14);
  *(void *)a5 = v11;
  *(void *)(a5 + 8) = v13;
  *(unsigned char *)(a5 + 16) = 0;
  *(void *)(a5 + 24) = _swiftEmptyArrayStorage;
}

uint64_t sub_1009CA918(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for WeatherDataModel();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v13 - v7;
  uint64_t v9 = a1 + *(int *)(type metadata accessor for WeatherEditorView() + 32);
  uint64_t v10 = v9 + *(int *)(type metadata accessor for WeatherData(0) + 24);
  uint64_t v11 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  v11(v8, v10, v2);
  v11(v5, (uint64_t)v8, v2);
  sub_10017DF08(&qword_100EA6858);
  State.wrappedValue.setter();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v8, v2);
}

uint64_t sub_1009CAA7C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for PresentationMode();
  __chkstk_darwin(v2 - 8);
  uint64_t v24 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_10017DF08(&qword_100E669A0);
  __chkstk_darwin(v23);
  uint64_t v22 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = type metadata accessor for LocationWeatherDataState(0);
  __chkstk_darwin(v21);
  uint64_t v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for WeatherDataModel();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for WeatherData(0);
  uint64_t v12 = v11 - 8;
  __chkstk_darwin(v11);
  Swift::String v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = (int *)type metadata accessor for WeatherEditorView();
  sub_1009CB1E4(a1 + v15[8], (uint64_t)v14, (void (*)(void))type metadata accessor for WeatherData);
  sub_10017DF08(&qword_100EA6858);
  State.wrappedValue.getter();
  (*(void (**)(char *, char *, uint64_t))(v8 + 40))(&v14[*(int *)(v12 + 32)], v10, v7);
  uint64_t v16 = sub_10017DF08(&qword_100E63748);
  uint64_t v17 = (uint64_t)&v6[*(int *)(v16 + 48)];
  uint64_t v18 = (uint64_t)&v6[*(int *)(v16 + 64)];
  sub_1009CB1E4((uint64_t)v14, (uint64_t)v6, (void (*)(void))type metadata accessor for WeatherData);
  sub_1009CB1E4(a1 + v15[9], v17, (void (*)(void))type metadata accessor for PreprocessedWeatherData);
  sub_1009CB1E4(a1 + v15[10], v18, (void (*)(void))type metadata accessor for NewsDataModel);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(char *))(a1 + v15[11]))(v6);
  uint64_t v19 = (uint64_t)v22;
  sub_1005D1E94();
  Binding.wrappedValue.getter();
  PresentationMode.dismiss()();
  Binding.wrappedValue.setter();
  sub_1009CAF70(v19, &qword_100E669A0);
  sub_10015695C((uint64_t)v6, (void (*)(void))type metadata accessor for LocationWeatherDataState);
  return sub_10015695C((uint64_t)v14, (void (*)(void))type metadata accessor for WeatherData);
}

uint64_t sub_1009CAE00@<X0>(char *a1@<X8>)
{
  return sub_1009C8B3C(*(void *)(v1 + 16), a1);
}

uint64_t sub_1009CAE08@<X0>(char *a1@<X8>)
{
  return sub_1009C902C(a1);
}

uint64_t sub_1009CAE10@<X0>(uint64_t a1@<X8>)
{
  return sub_1009C9C90(*(void *)(v1 + 16), a1);
}

unint64_t sub_1009CAE18()
{
  unint64_t result = qword_100EA6960;
  if (!qword_100EA6960)
  {
    sub_10018C6DC(&qword_100EA6958);
    sub_1001246C8(&qword_100E653A8, &qword_100E65388);
    sub_1001246C8(&qword_100E76A08, &qword_100E76A10);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA6960);
  }
  return result;
}

uint64_t sub_1009CAEDC@<X0>(uint64_t a1@<X8>)
{
  return sub_1009C9ED8(*(void *)(v1 + 16), a1);
}

uint64_t sub_1009CAEE8()
{
  return sub_1009CAF1C(sub_1009CAA7C);
}

uint64_t sub_1009CAF04()
{
  return sub_1009CAF1C(sub_1009CA918);
}

uint64_t sub_1009CAF1C(uint64_t (*a1)(uint64_t))
{
  uint64_t v2 = type metadata accessor for WeatherEditorView();
  sub_1001627C0(v2);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return a1(v4);
}

uint64_t sub_1009CAF70(uint64_t a1, uint64_t *a2)
{
  sub_10017DF08(a2);
  sub_100179DC0();
  uint64_t v3 = sub_100162728();
  v4(v3);
  return a1;
}

uint64_t sub_1009CAFBC(uint64_t a1)
{
  return sub_1009CB08C(a1, (uint64_t (*)(uint64_t, uint64_t))sub_1009CA710);
}

uint64_t sub_1009CAFD4()
{
  return EnvironmentValues.presentationMode.getter();
}

uint64_t sub_1009CAFF8()
{
  return EnvironmentValues.presentationMode.getter();
}

void sub_1009CB01C(uint64_t a1@<X8>)
{
}

uint64_t sub_1009CB074(uint64_t a1)
{
  return sub_1009CB08C(a1, (uint64_t (*)(uint64_t, uint64_t))sub_1009CA370);
}

uint64_t sub_1009CB08C(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t))
{
  uint64_t v4 = type metadata accessor for WeatherEditorView();
  sub_1001627C0(v4);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return a2(a1, v6);
}

void sub_1009CB0F0(uint64_t a1@<X8>)
{
}

uint64_t sub_1009CB144(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1009CB18C(uint64_t a1, uint64_t a2, void *a3)
{
  NSString v4 = String._bridgeToObjectiveC()();
  [a3 setTitle:v4];
}

uint64_t sub_1009CB1E4(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  uint64_t v4 = sub_10016518C();
  v5(v4);
  return a2;
}

uint64_t sub_1009CB23C()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_1009CB2DC(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t v482 = a2;
  uint64_t v407 = a1;
  uint64_t v470 = a3;
  uint64_t v408 = type metadata accessor for DetailCondition();
  sub_100179C0C();
  uint64_t v406 = v4;
  __chkstk_darwin(v5);
  sub_100109314();
  sub_100109328(v6);
  uint64_t v422 = type metadata accessor for WeatherFormatScaling();
  sub_100179C0C();
  uint64_t v421 = v7;
  __chkstk_darwin(v8);
  sub_100109314();
  sub_100109328(v9);
  uint64_t v420 = type metadata accessor for NSUnitLength.WeatherFormatUsage();
  sub_100179C0C();
  uint64_t v419 = v10;
  __chkstk_darwin(v11);
  sub_100109314();
  sub_100109328(v12);
  uint64_t v426 = type metadata accessor for NSUnitLength.BaseWeatherFormatStyle();
  sub_100179C0C();
  uint64_t v425 = v13;
  __chkstk_darwin(v14);
  sub_100109314();
  sub_100109338(v15);
  uint64_t v424 = sub_10017DF08(&qword_100E6B648);
  sub_100179C0C();
  uint64_t v423 = v16;
  __chkstk_darwin(v17);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v18);
  sub_100128F8C();
  sub_100109328(v19);
  uint64_t v431 = type metadata accessor for UVIndex();
  sub_100179C0C();
  uint64_t v430 = v20;
  __chkstk_darwin(v21);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v22);
  sub_100128F8C();
  sub_100109328(v23);
  uint64_t v440 = type metadata accessor for WeatherCondition();
  sub_100179C0C();
  uint64_t v439 = v24;
  __chkstk_darwin(v25);
  sub_100109314();
  sub_100109328(v26);
  uint64_t v442 = type metadata accessor for WeatherConditionIcon();
  sub_100179C0C();
  uint64_t v441 = v27;
  __chkstk_darwin(v28);
  sub_100109314();
  sub_100109328(v29);
  uint64_t countAndFlagsBits = type metadata accessor for Locale.Language();
  sub_100179C0C();
  uint64_t v438 = v30;
  __chkstk_darwin(v31);
  sub_100109314();
  sub_100109328(v32);
  uint64_t v463 = type metadata accessor for Locale();
  sub_100179C0C();
  uint64_t v437 = v33;
  __chkstk_darwin(v34);
  sub_100109314();
  sub_100109338(v35);
  uint64_t v36 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  uint64_t v37 = sub_100109308(v36);
  __chkstk_darwin(v37);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v38);
  sub_100128F8C();
  sub_100109328(v39);
  uint64_t v449 = type metadata accessor for Date();
  sub_100179C0C();
  uint64_t v448 = v40;
  __chkstk_darwin(v41);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v42);
  sub_100128F8C();
  sub_100109328(v43);
  uint64_t v436 = type metadata accessor for Precipitation();
  sub_100179C0C();
  uint64_t v435 = v44;
  __chkstk_darwin(v45);
  sub_100109314();
  sub_100109328(v46);
  uint64_t v445 = type metadata accessor for ApparentPrecipitationIntensity();
  sub_100179C0C();
  uint64_t v444 = v47;
  __chkstk_darwin(v48);
  sub_100109314();
  sub_100109328(v49);
  uint64_t v452 = type metadata accessor for NSUnitPressure.BaseWeatherFormatStyle();
  sub_100179C0C();
  uint64_t v451 = v50;
  __chkstk_darwin(v51);
  sub_100109314();
  sub_100109338(v52);
  uint64_t v450 = (void (*)(void, char *, uint64_t))sub_10017DF08(&qword_100E6BED0);
  sub_100179C0C();
  uint64_t object = v53;
  __chkstk_darwin(v54);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v55);
  sub_100128F8C();
  sub_100109328(v56);
  uint64_t v460 = type metadata accessor for NSUnitTemperature.BaseWeatherFormatStyle();
  sub_100179C0C();
  uint64_t v459 = v57;
  __chkstk_darwin(v58);
  sub_100109314();
  sub_100109338(v59);
  uint64_t v462 = sub_10017DF08(&qword_100E65250);
  sub_100179C0C();
  uint64_t v461 = v60;
  __chkstk_darwin(v61);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v62);
  sub_100179C90();
  __chkstk_darwin(v63);
  sub_100128F8C();
  sub_100109338(v64);
  uint64_t v416 = sub_10017DF08(&qword_100E6D0A8);
  sub_100179C0C();
  uint64_t v415 = v65;
  __chkstk_darwin(v66);
  sub_100109314();
  sub_100109328(v67);
  uint64_t v465 = type metadata accessor for WeatherFormatPlaceholder();
  sub_100179C0C();
  uint64_t v478 = v68;
  __chkstk_darwin(v69);
  sub_100109314();
  sub_100109338(v70);
  uint64_t v71 = sub_10017DF08(&qword_100E63730);
  uint64_t v72 = sub_100109308(v71);
  __chkstk_darwin(v72);
  sub_100109314();
  sub_100109328(v73);
  uint64_t v412 = type metadata accessor for NSUnitSpeed.WeatherFormatUsage();
  sub_100179C0C();
  uint64_t v411 = v74;
  __chkstk_darwin(v75);
  sub_100109314();
  sub_100109328(v76);
  uint64_t v414 = type metadata accessor for NSUnitSpeed.BaseWeatherFormatStyle();
  sub_100179C0C();
  uint64_t v413 = v77;
  __chkstk_darwin(v78);
  sub_100109314();
  sub_100109328(v79);
  uint64_t v427 = type metadata accessor for Wind();
  sub_100179C0C();
  uint64_t v428 = v80;
  __chkstk_darwin(v81);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v82);
  sub_100128F8C();
  sub_100109338(v83);
  uint64_t v84 = sub_10017DF08(&qword_100E6ECB0);
  uint64_t v85 = sub_100109308(v84);
  __chkstk_darwin(v85);
  sub_100109314();
  sub_100109338(v86);
  uint64_t v87 = sub_10017DF08(&qword_100EA69B8);
  uint64_t v88 = sub_100109308(v87);
  __chkstk_darwin(v88);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v89);
  sub_100179C90();
  __chkstk_darwin(v90);
  uint64_t v92 = (char *)&v494._object - v91;
  uint64_t v466 = type metadata accessor for TimeZone();
  sub_100179C0C();
  uint64_t v467 = v93;
  __chkstk_darwin(v94);
  sub_10012B938();
  uint64_t v468 = type metadata accessor for ConditionUnits();
  sub_100179C0C();
  uint64_t v469 = v95;
  __chkstk_darwin(v96);
  uint64_t v98 = (char *)&v494._object - ((v97 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v484 = type metadata accessor for DetailChartCondition();
  sub_100179C0C();
  uint64_t v480 = v99;
  uint64_t v101 = __chkstk_darwin(v100);
  uint64_t v103 = (char *)&v494._object - ((v102 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v101);
  uint64_t v105 = (char *)&v494._object - v104;
  type metadata accessor for HourWeather();
  sub_100179C0C();
  uint64_t v472 = v107;
  uint64_t v473 = v106;
  uint64_t v108 = __chkstk_darwin(v106);
  long long v110 = (char *)&v494._object - ((v109 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v111 = __chkstk_darwin(v108);
  uint64_t v112 = __chkstk_darwin(v111);
  __chkstk_darwin(v112);
  sub_100128F8C();
  uint64_t v481 = v113;
  WeatherValueCalculationContext.hourWeather.getter();
  uint64_t v483 = v105;
  WeatherValueCalculationContext.chartCondition.getter();
  uint64_t v475 = v98;
  WeatherValueCalculationContext.units.getter();
  uint64_t v477 = v3;
  WeatherValueCalculationContext.timeZone.getter();
  uint64_t v114 = swift_allocObject();
  *(void *)(v114 + 16) = 0;
  *(void *)(v114 + 24) = 0;
  uint64_t v476 = (void *)v114;
  sub_1009CE40C(v482, (uint64_t)v92);
  uint64_t v115 = type metadata accessor for DetailChartDataPoint();
  sub_100163F10((uint64_t)v92);
  if (v116)
  {
    sub_1001B36E0((uint64_t)v92, &qword_100EA69B8);
    uint64_t v117 = 0;
    int v121 = 1;
  }
  else
  {
    uint64_t v117 = DetailChartDataPoint.value.getter();
    sub_100184D78();
    uint64_t v119 = v92;
    int v121 = v120;
    (*(void (**)(char *, uint64_t))(v118 + 8))(v119, v115);
  }
  uint64_t v122 = v480;
  uint64_t v123 = v484;
  sub_100162808();
  v124();
  int v125 = (*(uint64_t (**)(char *, uint64_t))(v122 + 88))(v103, v123);
  if (v125 == enum case for DetailChartCondition.humidity(_:))
  {
    if (v121) {
      HourWeather.humidity.getter();
    }
    id v127 = [self mainBundle];
    sub_1001631D8();
    v128._uint64_t object = (void *)0x8000000100CB9320;
    v128._uint64_t countAndFlagsBits = 0xD000000000000022;
    v129._uint64_t countAndFlagsBits = 0x6E696F7020776544;
    v129._uint64_t object = (void *)0xED00004025203A74;
    Swift::String v130 = NSLocalizedString(_:tableName:bundle:value:comment:)(v128, (Swift::String_optional)0, (NSBundle)v127, v129, v491);
    uint64_t countAndFlagsBits = v130._countAndFlagsBits;
    uint64_t object = (uint64_t)v130._object;

    sub_10017DF08(&qword_100E64020);
    uint64_t v131 = swift_allocObject();
    *(_OWORD *)(v131 + 16) = xmmword_100C251B0;
    sub_10017B4D0();
    HourWeather.dewPoint.getter();
    sub_100162868();
    static WeatherFormatStyle<>.weather.getter();
    sub_100182214();
    sub_1001649D0();
    v132();
    type metadata accessor for UnitManager();
    static UnitManager.standard.getter();
    sub_1009CF278((unint64_t *)&qword_100E6BF60, (void (*)(uint64_t))&type metadata accessor for NSUnitTemperature.BaseWeatherFormatStyle);
    uint64_t v133 = Measurement.formatted<A>(_:placeholder:unitManager:)();
    uint64_t v463 = v134;
    swift_release();
    sub_100164944();
    v135();
    sub_100162F0C();
    v136();
    sub_100162F0C();
    v137();
    *(void *)(v131 + 56) = &type metadata for String;
    *(void *)(v131 + 64) = sub_10012B7C0();
    uint64_t v138 = v463;
    *(void *)(v131 + 32) = v133;
    *(void *)(v131 + 40) = v138;
    uint64_t v139 = static String.localizedStringWithFormat(_:_:)();
    uint64_t v141 = v140;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v142 = sub_1001ABC4C(0, (unint64_t *)&qword_100E66F90);
    int v143 = (void *)static NSNumberFormatter.percent.getter();
    Class isa = Double._bridgeToObjectiveC()().super.super.isa;
    id v145 = [v143 stringFromNumber:isa];

    if (!v145)
    {
      uint64_t v115 = 0;
      uint64_t v146 = 0;
      uint64_t countAndFlagsBits = 0;
      goto LABEL_20;
    }
    uint64_t v146 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v148 = v147;

    uint64_t countAndFlagsBits = v148;
    swift_bridgeObjectRetain();
    uint64_t v149 = (void *)static NSNumberFormatter.percent.getter();
    uint64_t v150 = sub_1009CF208(v149);
    if (v151)
    {
      uint64_t v115 = countAndFlagsBits;
      Swift::Bool v152 = String.hasSuffix(_:)(*(Swift::String *)&v150);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (!v152)
      {
        uint64_t v115 = 0;
        id v145 = 0;
        goto LABEL_20;
      }
      uint64_t v489 = v146;
      uint64_t v490 = countAndFlagsBits;
      swift_bridgeObjectRetain();
      int v153 = (void *)static NSNumberFormatter.percent.getter();
      uint64_t v154 = sub_1009CF208(v153);
      if (v155)
      {
        uint64_t v487 = v154;
        uint64_t v488 = v155;
        uint64_t v485 = 0;
        unint64_t v486 = 0xE000000000000000;
        v494._uint64_t object = (void *)sub_10014A85C();
        uint64_t v403 = v494._object;
        uint64_t v146 = StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)();
        uint64_t v157 = v156;
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        id v145 = (id)v142;
        uint64_t v158 = (void *)static NSNumberFormatter.percent.getter();
        sub_1009CF208(v158);
        sub_100188830();
        uint64_t countAndFlagsBits = v157;
LABEL_20:
        id v163 = v476;
        uint64_t v164 = v477;
        uint64_t v168 = sub_1009CE474((uint64_t)v476, (uint64_t)v474, v482, v481, v477);
        size_t v170 = v169;
        sub_10017F874();
        v171();
        sub_10017F874();
        v172();
        sub_100162F0C();
        v173();
        sub_100162F0C();
        v174();
        swift_release();
LABEL_21:
        sub_10018B1E0();
LABEL_48:
        uint64_t v288 = v470;
        *uint64_t v470 = v168;
        v288[1] = (uint64_t)v170;
        uint64_t v289 = countAndFlagsBits;
        v288[2] = v146;
        v288[3] = v289;
        v288[4] = (uint64_t)v163;
        v288[5] = v164;
        *((_OWORD *)v288 + 3) = 0u;
        *((_OWORD *)v288 + 4) = 0u;
        v288[10] = v115;
        v288[11] = (uint64_t)v145;
        v288[12] = 0;
        v288[13] = 0;
        v288[14] = v139;
        v288[15] = v141;
        v288[16] = 0;
        v288[17] = 0;
        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_91;
  }
  if (v125 == enum case for DetailChartCondition.pressure(_:))
  {
    if (v121)
    {
      sub_100162868();
      uint64_t v126 = v481;
      HourWeather.pressure.getter();
    }
    else
    {
      ConditionUnits.pressure.getter();
      sub_1001ABC4C(0, &qword_100E6BF30);
      long long v110 = (char *)v455;
      sub_1001A4988();
      uint64_t v126 = v481;
    }
    sub_100183300();
    uint64_t v179 = sub_1009CE474(v175, v176, v177, v126, v178);
    sub_1001912D8(v179, v180);
    sub_10017B4DC();
    uint64_t v181 = (void (*)(void, void))v450;
    sub_100162808();
    v182();
    static Set<>.value.getter();
    uint64_t v183 = v454;
    sub_100163B78(v454);
    sub_100162868();
    static WeatherFormatStyle<>.weather(_:locale:)();
    swift_bridgeObjectRelease();
    sub_1001B36E0(v183, &qword_100E63730);
    LODWORD(v462) = enum case for WeatherFormatPlaceholder.none(_:);
    uint64_t v184 = *(void (***)(void, char *, uint64_t))(v478 + 104);
    uint64_t v458 = v478 + 104;
    uint64_t v461 = v184;
    sub_100182674();
    uint64_t v185 = v465;
    sub_1001631E8();
    v186();
    uint64_t v460 = type metadata accessor for UnitManager();
    static UnitManager.standard.getter();
    uint64_t v459 = sub_1009CF278((unint64_t *)&qword_100E6BF58, (void (*)(uint64_t))&type metadata accessor for NSUnitPressure.BaseWeatherFormatStyle);
    uint64_t v139 = v452;
    uint64_t v187 = Measurement.formatted<A>(_:placeholder:unitManager:)();
    sub_1001A3574(v187, v188);
    swift_release();
    uint64_t v453 = *(void *)(v478 + 8);
    v478 += 8;
    uint64_t v141 = v185;
    sub_100127BA4();
    v189();
    uint64_t v451 = *(void *)(v451 + 8);
    ((void (*)(char *, uint64_t))v451)(v110, v139);
    sub_10017B4DC();
    uint64_t v449 = *(void *)(v190 + 8);
    uint64_t object = v190 + 8;
    sub_100127BA4();
    v191();
    HourWeather.pressure.getter();
    static Set<>.unit.getter();
    sub_100163B78(v183);
    static WeatherFormatStyle<>.weather(_:locale:)();
    swift_bridgeObjectRelease();
    sub_1001B36E0(v183, &qword_100E63730);
    sub_1001631E8();
    v192();
    static UnitManager.standard.getter();
    uint64_t v193 = v181;
    uint64_t v146 = Measurement.formatted<A>(_:placeholder:unitManager:)();
    id v145 = v194;
    swift_release();
    sub_100127BA4();
    v195();
    uint64_t v196 = v474;
    ((void (*)(char *, uint64_t))v451)(v110, v139);
    uint64_t v168 = v482;
    size_t v170 = v196;
    id v163 = v193;
    uint64_t v115 = v146;
    sub_10018C5F4();
    uint64_t v164 = v449;
    sub_1001629F8();
    ((void (*)(void))v164)();
    sub_1001629F8();
    ((void (*)(void))v164)();
    sub_10019DAF0();
LABEL_24:
    sub_10017F874();
    v197();
    sub_10017F874();
    v198();
    sub_100162F0C();
    v199();
    sub_100162F0C();
    v200();
LABEL_25:
    swift_release();
    sub_100164C08();
    goto LABEL_48;
  }
  uint64_t v159 = v463;
  if (v125 == enum case for DetailChartCondition.precipitationTotal(_:))
  {
    sub_1001B1E64(v474, v474[3]);
    sub_10017B4D0();
    dispatch thunk of PrecipitationCalculatorType.apparentPrecipitationIntensityForDisplay(from:)();
    uint64_t v160 = ApparentPrecipitationIntensity.standaloneDescription.getter();
    sub_1001A3574(v160, v161);
    ApparentPrecipitationIntensity.value.getter();
    if (v162 <= 0.0)
    {
      id v163 = [self mainBundle];
      sub_1001631D8();
      v202._uint64_t object = (void *)0x8000000100CB9270;
      v203._uint64_t object = (void *)0x8000000100CB92B0;
      Swift::String v204 = NSLocalizedString(_:tableName:bundle:value:comment:)(v202, (Swift::String_optional)0, (NSBundle)v163, v203, v492);
      uint64_t v164 = v204._countAndFlagsBits;
      uint64_t v461 = (void (**)(void, char *, uint64_t))v204._object;
    }
    else
    {
      id v163 = v434;
      HourWeather.precipitation.getter();
      uint64_t v164 = Precipitation.standaloneDescription.getter();
      uint64_t v461 = v165;
      sub_10012BF98();
      sub_10017F874();
      v166();
    }
    uint64_t v167 = v473;
    uint64_t v205 = v447;
    uint64_t v206 = v443;
    sub_1009CE40C(v482, v443);
    sub_100163F10(v206);
    if (v116)
    {
      sub_1001B36E0(v206, &qword_100EA69B8);
      uint64_t v240 = 1;
    }
    else
    {
      DetailChartDataPoint.date.getter();
      sub_100184D78();
      sub_100162F0C();
      v239();
      uint64_t v240 = 0;
    }
    uint64_t v241 = v449;
    uint64_t object = v164;
    _s7Weather24LocationCompositionStateOwst_0(v205, v240, 1, v449);
    sub_100162808();
    v242();
    if (_s7Weather24LocationCompositionStateOwet_0(v205, 1, v241) == 1)
    {
      HourWeather.date.getter();
      uint64_t v243 = sub_1001A1A10();
      ((void (*)(uint64_t))v163)(v243);
      sub_1001B36E0(v205, (uint64_t *)&unk_100E73CA0);
    }
    else
    {
      uint64_t v244 = sub_1001A1A10();
      ((void (*)(uint64_t))v163)(v244);
      uint64_t v245 = sub_100182674();
      v246(v245, v205, v241);
    }
    uint64_t v247 = sub_1009CE8DC();
    uint64_t v146 = v248;
    sub_100164944();
    v249();
    size_t v170 = (void *)v146;
    sub_10012BF98();
    sub_10017F874();
    v250();
    sub_10017F874();
    v251();
    sub_10017F874();
    v252();
    (*(void (**)(char *, uint64_t))(v122 + 8))(v483, v484);
    uint64_t v253 = v167;
    uint64_t v168 = v247;
    ((void (*)(uint64_t, uint64_t))v163)(v481, v253);
    swift_release();
    sub_10018B1E0();
    uint64_t v115 = 0;
    id v145 = 0;
    sub_10018C5F4();
LABEL_39:
    uint64_t v139 = object;
    uint64_t v141 = (uint64_t)v461;
    goto LABEL_48;
  }
  if (v125 == enum case for DetailChartCondition.temperature(_:))
  {
    uint64_t v201 = v481;
    if (v121)
    {
      sub_100162868();
      HourWeather.temperature.getter();
    }
    else
    {
      ConditionUnits.temperature.getter();
      sub_1001ABC4C(0, (unint64_t *)&qword_100E659A0);
      long long v110 = v433;
      sub_1001A4988();
    }
    v461[4](v446, v110, v462);
    static Locale.current.getter();
    sub_100162868();
    Locale.language.getter();
    sub_10012BF98();
    sub_100162F0C();
    v254();
    char v255 = Locale.Language.prefersFullTemperatureScale.getter();
    sub_100162F0C();
    v256();
    if (v255)
    {
      static Set<>.value.getter();
      uint64_t v257 = v454;
      _s7Weather24LocationCompositionStateOwst_0(v454, 1, 1, v159);
      static WeatherFormatStyle<>.weather(_:locale:)();
      swift_bridgeObjectRelease();
      sub_1001B36E0(v257, &qword_100E63730);
      LODWORD(object) = enum case for WeatherFormatPlaceholder.none(_:);
      uint64_t v258 = v478;
      uint64_t v456 = *(void (**)(uint64_t))(v478 + 104);
      uint64_t v259 = v464;
      uint64_t v260 = v465;
      v456(v464);
      uint64_t v455 = type metadata accessor for UnitManager();
      static UnitManager.standard.getter();
      uint64_t v453 = sub_1009CF278((unint64_t *)&qword_100E6BF60, (void (*)(uint64_t))&type metadata accessor for NSUnitTemperature.BaseWeatherFormatStyle);
      uint64_t v261 = Measurement.formatted<A>(_:placeholder:unitManager:)();
      sub_1001A3574(v261, v262);
      swift_release();
      uint64_t v452 = *(void *)(v258 + 8);
      uint64_t v478 = v258 + 8;
      sub_100127BA4();
      v263();
      uint64_t v459 = *(void *)(v459 + 8);
      sub_100164944();
      v264();
      static Set<>.unit.getter();
      sub_100163B78(v257);
      static WeatherFormatStyle<>.weather(_:locale:)();
      swift_bridgeObjectRelease();
      sub_1001B36E0(v257, &qword_100E63730);
      ((void (*)(uint64_t, void, uint64_t))v456)(v259, object, v260);
      static UnitManager.standard.getter();
      id v163 = (id)Measurement.formatted<A>(_:placeholder:unitManager:)();
      uint64_t v164 = v265;
      swift_release();
      sub_100127BA4();
      v266();
      sub_100164944();
      v267();
      uint64_t v201 = v481;
    }
    else
    {
      static WeatherFormatStyle<>.weather.getter();
      uint64_t v268 = v478;
      sub_100182214();
      sub_1001649D0();
      v269();
      type metadata accessor for UnitManager();
      id v163 = (id)static UnitManager.standard.getter();
      sub_1009CF278((unint64_t *)&qword_100E6BF60, (void (*)(uint64_t))&type metadata accessor for NSUnitTemperature.BaseWeatherFormatStyle);
      uint64_t v270 = sub_10019B730();
      sub_10017F1A0(v270, v271);
      uint64_t v164 = v268 + 8;
      sub_100183838();
      v272();
      sub_100162F0C();
      v273();
      sub_10018B1E0();
    }
    sub_100183300();
    uint64_t v274 = v201;
    uint64_t v146 = v477;
    uint64_t v278 = sub_1009CE474(v275, v276, v277, v274, v477);
    sub_1001912D8(v278, v279);
    HourWeather.condition.getter();
    HourWeather.isDaylight.getter();
    sub_100185E60();
    sub_10017F874();
    v280();
    uint64_t v115 = WeatherConditionIcon.name.getter();
    id v145 = v281;
    sub_10017F874();
    v282();
    sub_10012BF98();
    sub_10017F874();
    v283();
    sub_10018A0C8();
    sub_10017F874();
    v284();
    sub_10017F874();
    v285();
    sub_100162F0C();
    v286();
    size_t v170 = v474;
    sub_100164944();
    v287();
    uint64_t v168 = v482;
    swift_release();
    uint64_t v139 = 0;
    uint64_t v141 = 0;
    sub_10018C5F4();
    goto LABEL_48;
  }
  uint64_t v207 = v481;
  if (v125 == enum case for DetailChartCondition.temperatureFeelsLike(_:))
  {
    id v208 = [self mainBundle];
    sub_1001631D8();
    sub_10017F38C();
    v209._uint64_t countAndFlagsBits = 0x203A6C6175746341;
    v209._uint64_t object = (void *)0xEA00000000004025;
    Swift::String v212 = NSLocalizedString(_:tableName:bundle:value:comment:)(v210, v211, (NSBundle)v208, v209, v493);
    uint64_t countAndFlagsBits = v212._countAndFlagsBits;
    uint64_t v463 = (uint64_t)v212._object;

    sub_10017DF08(&qword_100E64020);
    uint64_t v213 = swift_allocObject();
    *(_OWORD *)(v213 + 16) = xmmword_100C251B0;
    uint64_t v214 = v457;
    HourWeather.temperature.getter();
    static WeatherFormatStyle<>.weather.getter();
    LODWORD(v456) = enum case for WeatherFormatPlaceholder.none(_:);
    uint64_t v215 = v478;
    uint64_t v216 = *(void *)(v478 + 104);
    uint64_t v454 = v478 + 104;
    uint64_t v455 = v216;
    sub_1001631E8();
    v217();
    uint64_t v453 = type metadata accessor for UnitManager();
    static UnitManager.standard.getter();
    uint64_t v452 = sub_1009CF278((unint64_t *)&qword_100E6BF60, (void (*)(uint64_t))&type metadata accessor for NSUnitTemperature.BaseWeatherFormatStyle);
    uint64_t v218 = v462;
    uint64_t v219 = sub_10019B730();
    uint64_t object = v220;
    swift_release();
    uint64_t v221 = *(void *)(v215 + 8);
    uint64_t v478 = v215 + 8;
    uint64_t v451 = v221;
    sub_1001629F8();
    v222();
    uint64_t v459 = *(void *)(v459 + 8);
    sub_1001629F8();
    v223();
    uint64_t v450 = v461[1];
    ((void (*)(uint64_t, uint64_t))v450)(v214, v218);
    *(void *)(v213 + 56) = &type metadata for String;
    *(void *)(v213 + 64) = sub_10012B7C0();
    sub_10017B4DC();
    *(void *)(v213 + 32) = v219;
    *(void *)(v213 + 40) = v224;
    uint64_t v225 = static String.localizedStringWithFormat(_:_:)();
    sub_10019E020(v225, v226);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    HourWeather.apparentTemperature.getter();
    static WeatherFormatStyle<>.weather.getter();
    sub_1001631E8();
    v227();
    static UnitManager.standard.getter();
    uint64_t v146 = Measurement.formatted<A>(_:placeholder:unitManager:)();
    uint64_t countAndFlagsBits = v228;
    swift_release();
    sub_100162F0C();
    v229();
    sub_1001629F8();
    v230();
    ((void (*)(uint64_t, uint64_t))v450)(v214, v462);
    uint64_t v139 = object;
    id v163 = v476;
    uint64_t v164 = v477;
    uint64_t v168 = sub_1009CE474((uint64_t)v476, (uint64_t)v474, v482, v481, v477);
    size_t v170 = v231;
    sub_100172504();
    HourWeather.condition.getter();
    HourWeather.isDaylight.getter();
    sub_100185E60();
    sub_10017F874();
    v232();
    uint64_t v115 = WeatherConditionIcon.name.getter();
    id v145 = v233;
    sub_10017F874();
    v234();
    sub_10017F874();
    v235();
    sub_10017F874();
    v236();
    sub_100162F0C();
    v237();
    sub_100162F0C();
    v238();
    swift_release();
    uint64_t v141 = (uint64_t)v461;
    goto LABEL_21;
  }
  if (v125 == enum case for DetailChartCondition.uvIndex(_:))
  {
    if (v121)
    {
      uint64_t v115 = v429;
      HourWeather.uvIndex.getter();
    }
    else
    {
      sub_100172504();
      sub_10073269C(v290);
    }
    sub_1001ABC4C(0, (unint64_t *)&qword_100E66F90);
    uint64_t v291 = (void *)static NSNumberFormatter.digits.getter();
    id v292 = [objc_allocWithZone((Class)NSNumber) initWithInteger:UVIndex.value.getter()];
    id v293 = [v291 stringFromNumber:v292];

    uint64_t v139 = v207;
    if (v293)
    {
      uint64_t v294 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t countAndFlagsBits = v295;
    }
    else
    {
      uint64_t v294 = 0;
      uint64_t countAndFlagsBits = 0;
    }
    uint64_t v164 = v431;
    uint64_t v300 = v430;
    sub_100182674();
    sub_100162808();
    v301();
    if (!countAndFlagsBits)
    {
      uint64_t v489 = UVIndex.value.getter();
      uint64_t v294 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t countAndFlagsBits = v302;
    }
    uint64_t v303 = *(void (**)(uint64_t, uint64_t))(v300 + 8);
    id v163 = (id)(v300 + 8);
    v303(v122, v164);
    uint64_t v141 = (uint64_t)v476;
    uint64_t v304 = v477;
    sub_100183300();
    uint64_t v305 = v294;
    uint64_t v482 = sub_1009CE474(v306, v307, v308, v207, v304);
    uint64_t v310 = v309;
    UVIndex.category.getter();
    uint64_t v311 = UVIndex.ExposureCategory.localizedString.getter();
    uint64_t v312 = v115;
    uint64_t v115 = v311;
    id v145 = v313;
    v303(v312, v164);
    sub_10018A0C8();
    uint64_t v146 = v305;
    sub_10017F874();
    v314();
    sub_10017F874();
    v315();
    (*(void (**)(char *, uint64_t))(v480 + 8))(v483, v484);
    size_t v170 = v310;
    sub_100162F0C();
    v316();
    uint64_t v168 = v482;
    goto LABEL_25;
  }
  LODWORD(countAndFlagsBits) = v121;
  uint64_t v141 = v473;
  if (v125 == enum case for DetailChartCondition.visibility(_:))
  {
    if (countAndFlagsBits)
    {
      HourWeather.visibility.getter();
    }
    else
    {
      ConditionUnits.visibility.getter();
      sub_1001ABC4C(0, (unint64_t *)&qword_100E6B678);
      sub_1001A4988();
    }
    sub_100183300();
    uint64_t v321 = sub_1009CE474(v317, v318, v319, v207, v320);
    sub_1001912D8(v321, v322);
    uint64_t v323 = Measurement<>.formattedAndClampedVisibility.getter();
    sub_1001A3574(v323, v324);
    uint64_t v325 = v207;
    HourWeather.visibility.getter();
    static Set<>.unit.getter();
    uint64_t v326 = v419;
    uint64_t v327 = v417;
    uint64_t v328 = v420;
    sub_1001649D0();
    v329();
    sub_100186D24();
    sub_10017B4D0();
    uint64_t v330 = v418;
    uint64_t v115 = v422;
    sub_1001649D0();
    v331();
    static WeatherFormatStyle<>.weather(_:usage:scaling:trimLeadingZeroes:locale:)();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v159 + 8))(v330, v115);
    sub_1001B36E0(v325, &qword_100E63730);
    (*(void (**)(uint64_t, uint64_t))(v326 + 8))(v327, v328);
    uint64_t v332 = v478;
    sub_100182214();
    uint64_t v334 = *(void *)(v333 - 256);
    uint64_t v141 = v465;
    sub_1001649D0();
    v335();
    type metadata accessor for UnitManager();
    static UnitManager.standard.getter();
    sub_1009CF278((unint64_t *)&qword_100E6B658, (void (*)(uint64_t))&type metadata accessor for NSUnitLength.BaseWeatherFormatStyle);
    uint64_t v139 = v424;
    id v145 = v432;
    Measurement.formatted<A>(_:placeholder:unitManager:)();
    sub_100188830();
    swift_release();
    uint64_t v336 = *(void (**)(uint64_t, uint64_t))(v332 + 8);
    uint64_t v146 = v332 + 8;
    uint64_t v337 = v334;
    uint64_t v168 = v482;
    v336(v337, v141);
    sub_10018C5F4();
    sub_100162F0C();
    v338();
    uint64_t v164 = v423 + 8;
    id v163 = *(id *)(v423 + 8);
    sub_100183838();
    ((void (*)(void))v163)();
    sub_100183838();
    ((void (*)(void))v163)();
    sub_10019DAF0();
    size_t v170 = v474;
    goto LABEL_24;
  }
  if (v125 == enum case for DetailChartCondition.wind(_:))
  {
    uint64_t v460 = v117;
    HourWeather.wind.getter();
    uint64_t v296 = v409;
    Wind.gust.getter();
    uint64_t v297 = v428;
    uint64_t v298 = *(void (**)(void))(v428 + 8);
    sub_100164944();
    v298();
    int v299 = _s7Weather24LocationCompositionStateOwet_0(v296, 1, v416);
    uint64_t v428 = v297 + 8;
    uint64_t v462 = (uint64_t)v298;
    if (v299 == 1)
    {
      sub_1001B36E0(v296, &qword_100E6ECB0);
      uint64_t object = 0;
      uint64_t v461 = 0;
    }
    else
    {
      sub_1001649D0();
      v340();
      sub_100186D24();
      static Set<>.full.getter();
      static WeatherFormatStyle<>.weather(_:usage:locale:)();
      swift_bridgeObjectRelease();
      sub_1001B36E0((uint64_t)v298, &qword_100E63730);
      sub_100127BA4();
      v341();
      sub_100182214();
      sub_1001649D0();
      v342();
      type metadata accessor for UnitManager();
      static UnitManager.standard.getter();
      sub_1009CF278(&qword_100E6ECD0, (void (*)(uint64_t))&type metadata accessor for NSUnitSpeed.BaseWeatherFormatStyle);
      uint64_t v343 = Measurement.formatted<A>(_:placeholder:unitManager:)();
      uint64_t object = v344;
      swift_release();
      sub_100127BA4();
      v345();
      sub_100127BA4();
      v346();
      sub_100127BA4();
      v347();
      id v348 = [self mainBundle];
      sub_1001631D8();
      sub_10017F38C();
      v349._uint64_t countAndFlagsBits = 0x25203A7374737547;
      v349._uint64_t object = (void *)0xE900000000000040;
      v494._uint64_t countAndFlagsBits = 0xD000000000000022;
      uint64_t v115 = (uint64_t)NSLocalizedString(_:tableName:bundle:value:comment:)(v350, v351, (NSBundle)v348, v349, v494)._object;

      sub_10017DF08(&qword_100E64020);
      uint64_t v352 = swift_allocObject();
      *(_OWORD *)(v352 + 16) = xmmword_100C251B0;
      *(void *)(v352 + 56) = &type metadata for String;
      *(void *)(v352 + 64) = sub_10012B7C0();
      sub_10017B4DC();
      *(void *)(v352 + 32) = v343;
      *(void *)(v352 + 40) = v353;
      uint64_t v354 = static String.localizedStringWithFormat(_:_:)();
      sub_10019E020(v354, v355);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    if (countAndFlagsBits)
    {
      HourWeather.wind.getter();
      Wind.speed.getter();
      sub_100127BA4();
      v356();
    }
    else
    {
      ConditionUnits.windSpeed.getter();
      sub_1001ABC4C(0, (unint64_t *)&qword_100E6BF18);
      sub_1001A4988();
    }
    static Set<>.value.getter();
    sub_100172504();
    uint64_t v357 = v410;
    uint64_t v358 = v412;
    sub_1001649D0();
    v359();
    uint64_t v360 = v454;
    sub_100163B78(v454);
    sub_10017B4D0();
    static WeatherFormatStyle<>.weather(_:usage:locale:)();
    swift_bridgeObjectRelease();
    sub_1001B36E0(v360, &qword_100E63730);
    (*(void (**)(uint64_t, uint64_t))(v115 + 8))(v357, v358);
    sub_100182214();
    uint64_t v115 = v465;
    sub_1001649D0();
    v361();
    type metadata accessor for UnitManager();
    static UnitManager.standard.getter();
    sub_1009CF278(&qword_100E6ECD0, (void (*)(uint64_t))&type metadata accessor for NSUnitSpeed.BaseWeatherFormatStyle);
    uint64_t v362 = Measurement.formatted<A>(_:placeholder:unitManager:)();
    sub_10017F1A0(v362, v363);
    sub_100183838();
    v364();
    sub_100162F0C();
    v365();
    sub_10018A0C8();
    sub_100162F0C();
    v366();
    uint64_t v164 = (uint64_t)v476;
    uint64_t v367 = v477;
    sub_100183300();
    uint64_t v168 = sub_1009CE474(v368, v369, v370, v207, v367);
    size_t v170 = v371;
    sub_100172504();
    HourWeather.wind.getter();
    id v145 = (id)v115;
    id v163 = (id)Wind.compassDirection.getter();
    sub_100127BA4();
    v372();
    Wind.CompassDirection.abbreviation.getter();
    sub_100188830();
    sub_10012BF98();
    sub_10017F874();
    v373();
    uint64_t v146 = v457;
    sub_10017F874();
    v374();
    sub_100162F0C();
    v375();
    sub_100162F0C();
    v376();
    swift_release();
    sub_10018B1E0();
    goto LABEL_39;
  }
  if (v125 == enum case for DetailChartCondition.chanceOfRain(_:))
  {
    uint64_t v339 = *(void (**)(void))(v472 + 16);
    sub_10019D334();
    v339();
    if (countAndFlagsBits) {
      HourWeather.chanceOfRain.getter();
    }
    uint64_t v139 = v472 + 8;
    uint64_t v377 = *(void (**)(void))(v472 + 8);
    sub_100164944();
    v377();
    uint64_t v378 = v404;
    sub_1009CE40C(v482, v404);
    sub_100163F10(v378);
    if (v116)
    {
      sub_1001B36E0(v378, &qword_100EA69B8);
      sub_100188C44();
      uint64_t v379 = v405;
    }
    else
    {
      uint64_t v379 = v405;
      DetailChartDataPoint.date.getter();
      sub_100184D78();
      sub_100162F0C();
      v380();
      sub_100188C44();
    }
    _s7Weather24LocationCompositionStateOwst_0(v379, v381, 1, v378);
    sub_10019D334();
    v339();
    if (_s7Weather24LocationCompositionStateOwet_0(v379, 1, v378) == 1)
    {
      HourWeather.date.getter();
      sub_100164944();
      v377();
      sub_1001B36E0(v379, (uint64_t *)&unk_100E73CA0);
    }
    else
    {
      sub_100164944();
      v377();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v448 + 32))(v115, v379, v378);
    }
    sub_100162868();
    sub_100182674();
    sub_1001649D0();
    v382();
    char v383 = static DetailCondition.== infix(_:_:)();
    sub_100183838();
    v384();
    if (v383) {
      uint64_t v385 = sub_1009CE8DC();
    }
    else {
      uint64_t v385 = sub_1009CE80C();
    }
    sub_1001912D8(v385, v386);
    id v163 = (id)sub_1001ABC4C(0, (unint64_t *)&qword_100E66F90);
    uint64_t v164 = static NSNumberFormatter.percent.getter();
    Class v387 = Double._bridgeToObjectiveC()().super.super.isa;
    id v145 = [(id)v164 stringFromNumber:v387];

    if (v145)
    {
      uint64_t v146 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v389 = v388;

      uint64_t countAndFlagsBits = v389;
      swift_bridgeObjectRetain();
      uint64_t v390 = (void *)static NSNumberFormatter.percent.getter();
      uint64_t v391 = sub_1009CF208(v390);
      if (!v392)
      {
LABEL_91:
        __break(1u);
        goto LABEL_92;
      }
      uint64_t v164 = String.hasSuffix(_:)(*(Swift::String *)&v391);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v164)
      {
        uint64_t v489 = v146;
        uint64_t v490 = countAndFlagsBits;
        swift_bridgeObjectRetain();
        uint64_t v393 = (void *)static NSNumberFormatter.percent.getter();
        uint64_t v394 = sub_1009CF208(v393);
        if (!v395)
        {
LABEL_92:
          __break(1u);
          goto LABEL_93;
        }
        uint64_t v164 = v395;
        uint64_t v487 = v394;
        uint64_t v488 = v395;
        uint64_t v485 = 0;
        unint64_t v486 = 0xE000000000000000;
        sub_10014A85C();
        uint64_t v146 = sub_10018ABA4();
        uint64_t v397 = v396;
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        id v145 = v163;
        uint64_t v398 = (void *)static NSNumberFormatter.percent.getter();
        sub_1009CF208(v398);
        sub_100188830();
        uint64_t countAndFlagsBits = v397;
      }
      else
      {
        uint64_t v115 = 0;
        id v145 = 0;
      }
    }
    else
    {
      uint64_t v115 = 0;
      uint64_t v146 = 0;
      uint64_t countAndFlagsBits = 0;
    }
    sub_10012BF98();
    sub_10017F874();
    v399();
    sub_10019DAF0();
    sub_10017F874();
    v400();
    sub_10017F874();
    v401();
    sub_100162F0C();
    v402();
    sub_100164944();
    v377();
    swift_release();
    sub_100164C08();
    uint64_t v168 = v482;
    size_t v170 = v474;
    goto LABEL_48;
  }
LABEL_93:
  _diagnoseUnexpectedEnumCase<A>(type:)();
  __break(1u);
}

uint64_t sub_1009CE3D4()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1009CE40C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10017DF08(&qword_100EA69B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1009CE474(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v29 = a4;
  uint64_t v30 = a5;
  uint64_t v28 = a3;
  uint64_t v7 = type metadata accessor for HourWeather();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10017DF08(&qword_100EA69B8);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  __chkstk_darwin(v14 - 8);
  uint64_t v16 = (char *)v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for Date();
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v20 = (char *)v27 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(a1 + 24))
  {
    uint64_t v21 = *(void *)(a1 + 16);
  }
  else
  {
    v27[0] = a1 + 16;
    v27[1] = a2;
    sub_1009CE40C(v28, (uint64_t)v13);
    uint64_t v22 = type metadata accessor for DetailChartDataPoint();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v13, 1, v22) == 1)
    {
      sub_1001B36E0((uint64_t)v13, &qword_100EA69B8);
      uint64_t v23 = 1;
    }
    else
    {
      DetailChartDataPoint.date.getter();
      (*(void (**)(char *, uint64_t))(*(void *)(v22 - 8) + 8))(v13, v22);
      uint64_t v23 = 0;
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v16, v23, 1, v17);
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v29, v7);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v16, 1, v17) == 1)
    {
      HourWeather.date.getter();
      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
      sub_1001B36E0((uint64_t)v16, (uint64_t *)&unk_100E73CA0);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
      (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v20, v16, v17);
    }
    uint64_t v21 = sub_1009CE80C();
    uint64_t v25 = v24;
    (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
    swift_beginAccess();
    *(void *)(a1 + 16) = v21;
    *(void *)(a1 + 24) = v25;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return v21;
}

uint64_t sub_1009CE80C()
{
  if (qword_100E62210 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)qword_100F512E8;
  Class isa = TimeZone._bridgeToObjectiveC()().super.isa;
  [v0 setTimeZone:isa];

  Class v2 = Date._bridgeToObjectiveC()().super.isa;
  id v3 = [v0 stringFromDate:v2];

  uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  return v4;
}

uint64_t sub_1009CE8DC()
{
  uint64_t v29 = type metadata accessor for Date.FormatStyle();
  uint64_t v0 = *(void *)(v29 - 8);
  __chkstk_darwin(v29);
  Class v2 = (char *)v27 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for Calendar();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for Date();
  uint64_t v30 = *(void *)(v7 - 8);
  uint64_t v31 = v7;
  __chkstk_darwin(v7);
  uint64_t v28 = (char *)v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Calendar.currentCalendar(with:)();
  Date.wc_addHours(_:calendar:)();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  id v9 = [self mainBundle];
  v32._uint64_t countAndFlagsBits = 0xD000000000000034;
  v32._uint64_t object = (void *)0x8000000100CB9400;
  v10._uint64_t object = (void *)0x8000000100CB93D0;
  v10._uint64_t countAndFlagsBits = 0xD000000000000028;
  v11._uint64_t countAndFlagsBits = 0x25209380E2204025;
  v11._uint64_t object = (void *)0xA900000000000040;
  Swift::String v12 = NSLocalizedString(_:tableName:bundle:value:comment:)(v10, (Swift::String_optional)0, (NSBundle)v9, v11, v32);
  v27[0] = v12._object;
  v27[1] = v12._countAndFlagsBits;

  sub_10017DF08(&qword_100E64020);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_100C31870;
  sub_1009CEFB4();
  uint64_t v14 = Date.hour(timeZone:formatStyle:)();
  uint64_t v15 = *(void (**)(char *, uint64_t))(v0 + 8);
  uint64_t v16 = v29;
  v15(v2, v29);
  *(void *)(v13 + 56) = &type metadata for Int;
  *(void *)(v13 + 64) = &protocol witness table for Int;
  *(void *)(v13 + 32) = v14;
  sub_1009CEFB4();
  uint64_t v17 = v28;
  uint64_t v18 = Date.hour(timeZone:formatStyle:)();
  v15(v2, v16);
  *(void *)(v13 + 96) = &type metadata for Int;
  *(void *)(v13 + 104) = &protocol witness table for Int;
  *(void *)(v13 + 72) = v18;
  uint64_t v19 = Date.formattedHoursForText(timeZone:)();
  uint64_t v21 = v20;
  *(void *)(v13 + 136) = &type metadata for String;
  unint64_t v22 = sub_10012B7C0();
  *(void *)(v13 + 144) = v22;
  *(void *)(v13 + 112) = v19;
  *(void *)(v13 + 120) = v21;
  uint64_t v23 = Date.formattedHoursForText(timeZone:)();
  *(void *)(v13 + 176) = &type metadata for String;
  *(void *)(v13 + 184) = v22;
  *(void *)(v13 + 152) = v23;
  *(void *)(v13 + 160) = v24;
  uint64_t v25 = static String.localizedStringWithFormat(_:_:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v30 + 8))(v17, v31);
  return v25;
}

uint64_t sub_1009CECA0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for DetailCondition();
  sub_100179C0C();
  uint64_t v4 = v3;
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33[1] = type metadata accessor for Date();
  sub_100179C0C();
  __chkstk_darwin(v8);
  sub_10012B938();
  InterpolationElement.value.getter();
  InterpolationElement.date.getter();
  sub_1001649D0();
  v9();
  char v10 = static DetailCondition.== infix(_:_:)();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v2);
  if (v10) {
    uint64_t v11 = sub_1009CE8DC();
  }
  else {
    uint64_t v11 = sub_1009CE80C();
  }
  uint64_t v13 = v11;
  uint64_t v14 = v12;
  sub_1001ABC4C(0, (unint64_t *)&qword_100E66F90);
  uint64_t v15 = (void *)static NSNumberFormatter.percent.getter();
  Class isa = Double._bridgeToObjectiveC()().super.super.isa;
  id v17 = [v15 stringFromNumber:isa];

  if (!v17)
  {
    uint64_t v31 = 0;
    uint64_t v18 = 0;
    uint64_t v20 = 0;
    goto LABEL_11;
  }
  uint64_t v18 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v20 = v19;

  swift_bridgeObjectRetain();
  uint64_t v21 = (void *)static NSNumberFormatter.percent.getter();
  uint64_t result = sub_1009CF208(v21);
  if (v23)
  {
    Swift::Bool v24 = String.hasSuffix(_:)(*(Swift::String *)&result);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (!v24)
    {
      id v17 = 0;
      uint64_t v31 = 0;
      goto LABEL_11;
    }
    v33[0] = v13;
    v33[6] = v18;
    v33[7] = v20;
    swift_bridgeObjectRetain();
    uint64_t v25 = (void *)static NSNumberFormatter.percent.getter();
    uint64_t result = sub_1009CF208(v25);
    if (v26)
    {
      v33[4] = result;
      v33[5] = v26;
      v33[2] = 0;
      uint64_t v33[3] = 0xE000000000000000;
      sub_10014A85C();
      uint64_t v18 = sub_10018ABA4();
      uint64_t v28 = v27;
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      uint64_t v29 = (void *)static NSNumberFormatter.percent.getter();
      id v17 = (id)sub_1009CF208(v29);
      uint64_t v31 = v30;
      uint64_t v20 = v28;
      uint64_t v13 = v33[0];
LABEL_11:
      sub_100183838();
      uint64_t result = v32();
      *(void *)a1 = v13;
      *(void *)(a1 + 8) = v14;
      *(void *)(a1 + 16) = v18;
      *(void *)(a1 + 24) = v20;
      *(_OWORD *)(a1 + 32) = 0u;
      *(_OWORD *)(a1 + 48) = 0u;
      *(_OWORD *)(a1 + 64) = 0u;
      *(void *)(a1 + 80) = v17;
      *(void *)(a1 + 88) = v31;
      *(_OWORD *)(a1 + 96) = 0u;
      *(_OWORD *)(a1 + 112) = 0u;
      *(_OWORD *)(a1 + 128) = 0u;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1009CEFB4()
{
  uint64_t v0 = type metadata accessor for FormatStyleCapitalizationContext();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = type metadata accessor for TimeZone();
  __chkstk_darwin(v1 - 8);
  uint64_t v2 = type metadata accessor for Calendar();
  __chkstk_darwin(v2 - 8);
  uint64_t v3 = type metadata accessor for Locale();
  __chkstk_darwin(v3 - 8);
  uint64_t v4 = sub_10017DF08(&qword_100E7FA38);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10017DF08(&qword_100E7FA40);
  __chkstk_darwin(v7 - 8);
  id v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for Date.FormatStyle.DateStyle();
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v9, 1, 1, v10);
  uint64_t v11 = type metadata accessor for Date.FormatStyle.TimeStyle();
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v6, 1, 1, v11);
  static Locale.autoupdatingCurrent.getter();
  static Calendar.autoupdatingCurrent.getter();
  static TimeZone.autoupdatingCurrent.getter();
  static FormatStyleCapitalizationContext.unknown.getter();
  return Date.FormatStyle.init(date:time:locale:calendar:timeZone:capitalizationContext:)();
}

uint64_t sub_1009CF208(void *a1)
{
  id v2 = [a1 percentSymbol];

  if (!v2) {
    return 0;
  }
  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  return v3;
}

uint64_t sub_1009CF278(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

ValueMetadata *type metadata accessor for LollipopDataFactory()
{
  return &type metadata for LollipopDataFactory;
}

uint64_t sub_1009CF2D0@<X0>(uint64_t *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v63 = a2;
  uint64_t v3 = type metadata accessor for LocationComponentHeaderViewModel(0);
  __chkstk_darwin(v3 - 8);
  sub_100109314();
  uint64_t v62 = v4;
  uint64_t v60 = type metadata accessor for SevereAlertComponentViewModel();
  sub_100162E4C();
  __chkstk_darwin(v5);
  sub_100109314();
  uint64_t v54 = v6;
  uint64_t v7 = sub_10017DF08(&qword_100EA6A78);
  __chkstk_darwin(v7 - 8);
  id v9 = (char *)&v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = type metadata accessor for WeatherAlert.Prominence();
  sub_100179C0C();
  uint64_t v64 = v10;
  uint64_t v12 = __chkstk_darwin(v11);
  uint64_t v51 = (char *)&v48 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v65 = (char *)&v48 - v14;
  type metadata accessor for SevereAlertComponentStringsBuilder.SevereAlertSummary();
  sub_100179C0C();
  uint64_t v57 = v16;
  uint64_t v58 = v15;
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v48 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_10017DF08(&qword_100E7AF78);
  __chkstk_darwin(v19 - 8);
  sub_100109314();
  uint64_t v59 = v20;
  sub_1009CF824(a1, v20);
  uint64_t v21 = *a1;
  Swift::String v22 = SevereAlertComponentStringsBuilder.title(for:characterLimit:)(*(Swift::OpaquePointer *)a1, 25);
  uint64_t object = v22._object;
  uint64_t countAndFlagsBits = v22._countAndFlagsBits;
  uint64_t v67 = v21;
  swift_bridgeObjectRetain();
  sub_10017DF08(&qword_100E755E0);
  sub_1009D03F4();
  Sequence.unique<A>(by:)();
  swift_bridgeObjectRelease();
  type metadata accessor for SevereAlertComponent();
  uint64_t v61 = a1;
  SevereAlertComponentStringsBuilder.descriptions(for:location:currentDate:bulletString:)();
  uint64_t v52 = SevereAlertComponentStringsBuilder.descriptions(for:location:currentDate:bulletString:)();
  uint64_t v53 = v18;
  SevereAlertComponentStringsBuilder.summary(alertDescriptions:events:location:currentDate:)();
  swift_bridgeObjectRelease();
  sub_10043F89C(v21, (uint64_t)v9);
  uint64_t v23 = type metadata accessor for WeatherAlert();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v23) == 1)
  {
    sub_100178110((uint64_t)v9, &qword_100EA6A78);
    ((void (**)(char *, void, uint64_t))v64)[13](v65, enum case for WeatherAlert.Prominence.high(_:), v66);
  }
  else
  {
    Swift::Bool v24 = v51;
    WeatherAlert.prominence.getter();
    sub_100162F0C();
    v25();
    ((void (**)(char *, char *, uint64_t))v64)[4](v65, v24, v66);
  }
  uint64_t v26 = SevereAlertComponentStringsBuilder.longAlertDescription(for:location:)();
  uint64_t v50 = v27;
  uint64_t v51 = (char *)v26;
  uint64_t v28 = SevereAlertComponentStringsBuilder.SevereAlertSummary.description.getter();
  uint64_t v30 = v29;
  uint64_t v49 = SevereAlertComponentStringsBuilder.SevereAlertSummary.footer.getter();
  uint64_t v32 = v31;
  uint64_t v33 = v60;
  uint64_t v34 = v54;
  uint64_t v35 = v64;
  uint64_t v36 = (uint64_t)v65;
  uint64_t v37 = v66;
  ((void (**)(char *, char *, uint64_t))v64)[2]((char *)v54 + *(int *)(v60 + 36), v65, v66);
  uint64_t v38 = (uint64_t)v61;
  uint64_t v39 = v61[1];
  *uint64_t v34 = v28;
  v34[1] = v30;
  uint64_t v40 = v50;
  v34[2] = (uint64_t)v51;
  void v34[3] = v40;
  uint64_t v41 = countAndFlagsBits;
  v34[4] = v52;
  v34[5] = v41;
  uint64_t v42 = v49;
  v34[6] = (uint64_t)object;
  v34[7] = v42;
  v34[8] = v32;
  *(uint64_t *)((char *)v34 + *(int *)(v33 + 40)) = v39;
  uint64_t v43 = v62;
  sub_1009CFB0C(v36, v38, (uint64_t)v34, v62);
  swift_bridgeObjectRelease();
  ((void (*)(uint64_t, uint64_t))v35[1])(v36, v37);
  sub_100162F0C();
  v44();
  uint64_t v45 = (int *)type metadata accessor for LocationComponentContainerViewModel();
  uint64_t v46 = v63;
  sub_1009D0448((uint64_t)v34, v63 + v45[5], (void (*)(void))type metadata accessor for SevereAlertComponentViewModel);
  type metadata accessor for LocationComponentViewModel();
  swift_storeEnumTagMultiPayload();
  sub_1009D0448(v43, v46, (void (*)(void))type metadata accessor for LocationComponentHeaderViewModel);
  *(_WORD *)(v46 + v45[6]) = 256;
  return sub_1006BB160(v59, v46 + v45[7]);
}

uint64_t sub_1009CF824@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_10017DF08(&qword_100EA6A78);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10017DF08(&qword_100E749B0);
  __chkstk_darwin(v7 - 8);
  id v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for URL();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10043F89C(*a1, (uint64_t)v6);
  uint64_t v14 = type metadata accessor for WeatherAlert();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v6, 1, v14) == 1)
  {
    sub_100178110((uint64_t)v6, &qword_100EA6A78);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v9, 1, 1, v10);
  }
  else
  {
    WeatherAlert.detailsURL.getter();
    (*(void (**)(char *, uint64_t))(*(void *)(v14 - 8) + 8))(v6, v14);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v9, 0, 1, v10);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v10) != 1)
    {
      uint64_t v18 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
      v18(v13, v9, v10);
      uint64_t v19 = *(int *)(sub_10017DF08(&qword_100E66478) + 48);
      v18((char *)a2, v13, v10);
      *(unsigned char *)(a2 + v19) = 1;
      uint64_t v20 = type metadata accessor for LocationComponentAction(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v16 = a2;
      uint64_t v17 = 0;
      uint64_t v15 = v20;
      return _s7Weather24LocationCompositionStateOwst_0(v16, v17, 1, v15);
    }
  }
  sub_100178110((uint64_t)v9, &qword_100E749B0);
  uint64_t v15 = type metadata accessor for LocationComponentAction(0);
  uint64_t v16 = a2;
  uint64_t v17 = 1;
  return _s7Weather24LocationCompositionStateOwst_0(v16, v17, 1, v15);
}

uint64_t sub_1009CFAD0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = WeatherAlert.summary.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1009CFB0C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = type metadata accessor for WeatherAlert.Prominence();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1009CFD20(a1, a2);
  uint64_t v14 = v13;
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1, v8);
  int v15 = (*(uint64_t (**)(char *, uint64_t))(v9 + 88))(v11, v8);
  if (v15 == enum case for WeatherAlert.Prominence.high(_:))
  {
    sub_1009D005C(v12, v14, a3, 0xD00000000000001DLL, 0x8000000100C97430, a4);
    return swift_bridgeObjectRelease();
  }
  else if (v15 == enum case for WeatherAlert.Prominence.low(_:))
  {
    *(void *)a4 = v12;
    *(void *)(a4 + 8) = v14;
    *(void *)(a4 + 16) = 0xD00000000000001DLL;
    *(void *)(a4 + 24) = 0x8000000100C97430;
    *(unsigned char *)(a4 + 32) = 0;
    type metadata accessor for LocationComponentHeaderViewModel(0);
    *(void *)(a4 + 40) = 0;
    *(void *)(a4 + 48) = 0;
    return swift_storeEnumTagMultiPayload();
  }
  else
  {
    sub_1009D005C(v12, v14, a3, 0xD00000000000001DLL, 0x8000000100C97430, a4);
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
}

uint64_t sub_1009CFD20(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for WeatherAlert.Prominence();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  int v8 = (*(uint64_t (**)(char *, uint64_t))(v5 + 88))(v7, v4);
  if (v8 == enum case for WeatherAlert.Prominence.high(_:))
  {
    id v9 = [self mainBundle];
    v24._uint64_t object = (void *)0x8000000100CB94B0;
    v10._uint64_t countAndFlagsBits = 0x5720657265766553;
    v10._uint64_t object = (void *)0xEE00726568746165;
    v11._uint64_t countAndFlagsBits = 0;
    v11._uint64_t object = (void *)0xE000000000000000;
    v24._uint64_t countAndFlagsBits = 0xD000000000000028;
    uint64_t countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v10, (Swift::String_optional)0, (NSBundle)v9, v11, v24)._countAndFlagsBits;
  }
  else
  {
    int v13 = v8;
    int v14 = enum case for WeatherAlert.Prominence.low(_:);
    id v15 = [self mainBundle];
    if (v13 == v14)
    {
      v16._uint64_t countAndFlagsBits = 0xD000000000000016;
      v25._uint64_t countAndFlagsBits = 0xD00000000000005ELL;
      v25._uint64_t object = (void *)0x8000000100CB9500;
      v16._uint64_t object = (void *)0x8000000100CB94E0;
      v17._uint64_t countAndFlagsBits = 0x2072656874616557;
      v17._uint64_t object = (void *)0xEE00737472656C41;
      NSLocalizedString(_:tableName:bundle:value:comment:)(v16, (Swift::String_optional)0, (NSBundle)v15, v17, v25);

      sub_10017DF08(&qword_100E64020);
      uint64_t v18 = swift_allocObject();
      *(_OWORD *)(v18 + 16) = xmmword_100C251B0;
      uint64_t v19 = *(void *)(*(void *)a2 + 16);
      *(void *)(v18 + 56) = &type metadata for Int;
      *(void *)(v18 + 64) = &protocol witness table for Int;
      *(void *)(v18 + 32) = v19;
      uint64_t countAndFlagsBits = static String.localizedStringWithFormat(_:_:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      v26._uint64_t object = (void *)0x8000000100CB94B0;
      v20._uint64_t countAndFlagsBits = 0x5720657265766553;
      v20._uint64_t object = (void *)0xEE00726568746165;
      v21._uint64_t countAndFlagsBits = 0;
      v21._uint64_t object = (void *)0xE000000000000000;
      v26._uint64_t countAndFlagsBits = 0xD000000000000028;
      uint64_t countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v20, (Swift::String_optional)0, (NSBundle)v15, v21, v26)._countAndFlagsBits;

      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    }
  }
  return countAndFlagsBits;
}

uint64_t sub_1009D005C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X8>)
{
  uint64_t v12 = type metadata accessor for SevereAlertComponentViewModel();
  __chkstk_darwin(v12 - 8);
  int v14 = (char *)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for WeatherAlert();
  uint64_t v16 = __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v40 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v22 = *(void *)(a3 + 48);
  uint64_t v23 = *(void *)(v20 + 16);
  uint64_t v50 = *(void *)(a3 + 40);
  uint64_t v51 = a3;
  uint64_t v49 = v22;
  if (v23)
  {
    uint64_t v40 = (char *)&v40 - v19;
    uint64_t v41 = v21;
    uint64_t v43 = v14;
    uint64_t v44 = a1;
    uint64_t v45 = a4;
    uint64_t v46 = a6;
    uint64_t v47 = a5;
    uint64_t v48 = a2;
    Swift::String v24 = *(void (**)(char *, uint64_t, uint64_t))(v21 + 16);
    uint64_t v25 = v20 + ((*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80));
    Swift::String v26 = (void (**)(char *, uint64_t))(v21 + 8);
    uint64_t v27 = *(void *)(v21 + 72);
    uint64_t v28 = v20;
    swift_bridgeObjectRetain();
    uint64_t v42 = v28;
    swift_bridgeObjectRetain();
    while (1)
    {
      v24(v18, v25, v15);
      uint64_t v29 = WeatherAlert.source.getter();
      unint64_t v31 = v30;
      swift_bridgeObjectRelease();
      uint64_t v32 = HIBYTE(v31) & 0xF;
      if ((v31 & 0x2000000000000000) == 0) {
        uint64_t v32 = v29 & 0xFFFFFFFFFFFFLL;
      }
      if (v32) {
        break;
      }
      (*v26)(v18, v15);
      v25 += v27;
      if (!--v23)
      {
        swift_bridgeObjectRelease();
        uint64_t v33 = 0;
        uint64_t v34 = 0;
        goto LABEL_10;
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v35 = v40;
    uint64_t v36 = v41 + 32;
    (*(void (**)(char *, char *, uint64_t))(v41 + 32))(v40, v18, v15);
    uint64_t v33 = WeatherAlert.source.getter();
    uint64_t v34 = v37;
    (*(void (**)(char *, uint64_t))(v36 - 24))(v35, v15);
LABEL_10:
    a5 = v47;
    a2 = v48;
    a4 = v45;
    a6 = v46;
    int v14 = v43;
    a1 = v44;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v33 = 0;
    uint64_t v34 = 0;
  }
  sub_1009D04A8(v51, (uint64_t)v14);
  if (!v34)
  {
    uint64_t v33 = *((void *)v14 + 5);
    uint64_t v34 = *((void *)v14 + 6);
    swift_bridgeObjectRetain();
  }
  sub_1009D050C((uint64_t)v14);
  *(void *)a6 = a1;
  *(void *)(a6 + 8) = a2;
  uint64_t v38 = v49;
  *(void *)(a6 + 16) = v50;
  *(void *)(a6 + 24) = v38;
  *(void *)(a6 + 32) = v33;
  *(void *)(a6 + 40) = v34;
  *(void *)(a6 + 48) = a4;
  *(void *)(a6 + 56) = a5;
  *(void *)(a6 + 64) = a1;
  *(void *)(a6 + 72) = a2;
  *(void *)(a6 + 80) = a4;
  *(void *)(a6 + 88) = a5;
  *(unsigned char *)(a6 + 96) = 0;
  type metadata accessor for LocationComponentHeaderViewModel(0);
  *(void *)(a6 + 104) = 0;
  *(void *)(a6 + 112) = 0;
  *(unsigned char *)(a6 + 120) = 0;
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRetain_n();
  return swift_bridgeObjectRetain_n();
}

uint64_t sub_1009D0358()
{
  type metadata accessor for SevereAlertComponentStringsBuilder();
  sub_100162E4C();
  sub_100162F0C();
  v0();

  return swift_deallocClassInstance();
}

uint64_t sub_1009D03EC()
{
  return type metadata accessor for SevereAlertComponentViewModelFactory();
}

unint64_t sub_1009D03F4()
{
  unint64_t result = qword_100EA6A80;
  if (!qword_100EA6A80)
  {
    sub_10018C6DC(&qword_100E755E0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA6A80);
  }
  return result;
}

uint64_t sub_1009D0448(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(a2, a1);
  return a2;
}

uint64_t sub_1009D04A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SevereAlertComponentViewModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1009D050C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SevereAlertComponentViewModel();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void *sub_1009D0568(char a1, char a2, uint64_t a3)
{
  uint64_t v94 = a3;
  uint64_t v6 = type metadata accessor for TipPriorityQueue.GridEntry();
  sub_100162E4C();
  __chkstk_darwin(v7);
  sub_100162EF8();
  uint64_t v93 = v8;
  __chkstk_darwin(v9);
  uint64_t v92 = (uint64_t)&v71 - v10;
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v71 - v12;
  uint64_t v14 = sub_10017DF08(&qword_100E64E80);
  uint64_t v15 = sub_100109308(v14);
  __chkstk_darwin(v15);
  sub_10008B8C0();
  uint64_t v16 = type metadata accessor for LocationComponentViewModel();
  uint64_t v17 = sub_100109308(v16);
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)&v71 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  uint64_t v22 = (char *)&v71 - v21;
  uint64_t v23 = sub_10017DF08(&qword_100E6CCD8);
  uint64_t v24 = sub_100109308(v23);
  __chkstk_darwin(v24);
  sub_100162EF8();
  uint64_t v91 = v25;
  __chkstk_darwin(v26);
  uint64_t v28 = (char *)&v71 - v27;
  __chkstk_darwin(v29);
  unint64_t v31 = (char *)&v71 - v30;
  __chkstk_darwin(v32);
  uint64_t v34 = (char *)&v71 - v33;
  if (a1)
  {
    if (a1 == 1)
    {
      if (a2)
      {
        uint64_t v35 = &qword_100EA6E58;
        goto LABEL_11;
      }
    }
    else if (a2)
    {
      uint64_t v35 = &qword_100EA7228;
      goto LABEL_11;
    }
    uint64_t v35 = &qword_100EA7040;
  }
  else if (a2)
  {
    uint64_t v35 = &qword_100EA6A88;
  }
  else
  {
    uint64_t v35 = &qword_100EA6C70;
  }
LABEL_11:
  char v36 = *((unsigned char *)v35 + 224);
  uint64_t v37 = *v35;
  uint64_t v77 = v35[1];
  uint64_t v78 = v37;
  uint64_t v76 = v35[2];
  uint64_t v75 = v35[3];
  uint64_t v38 = v35[8];
  uint64_t v81 = v35[9];
  uint64_t v82 = v38;
  uint64_t v39 = v35[10];
  uint64_t v79 = v35[11];
  uint64_t v80 = v39;
  uint64_t v74 = v35[24];
  uint64_t v73 = v35[25];
  uint64_t v72 = v35[26];
  uint64_t v71 = v35[27];
  uint64_t v40 = v35[49];
  uint64_t v85 = v35[50];
  uint64_t v86 = v40;
  uint64_t v41 = v35[51];
  uint64_t v83 = v35[52];
  uint64_t v84 = v41;
  uint64_t v42 = v35[57];
  uint64_t v89 = v35[58];
  uint64_t v90 = v42;
  uint64_t v43 = v94 + OBJC_IVAR____TtCV7Weather23DefaultTrendNewsContent8_Storage_map;
  uint64_t v45 = v35[59];
  uint64_t v44 = v35[60];
  uint64_t v87 = v45;
  uint64_t v88 = v44;
  swift_beginAccess();
  sub_10006DF38(v43, v3, &qword_100E64E80);
  uint64_t v46 = type metadata accessor for LocationComponentContainerViewModel();
  if (_s7Weather24LocationCompositionStateOwet_0(v3, 1, v46) == 1)
  {
    sub_1001781AC(v3, &qword_100E64E80);
LABEL_16:
    uint64_t v47 = 1;
    goto LABEL_17;
  }
  sub_10031F6A8(v3 + *(int *)(v46 + 20), (uint64_t)v19, (void (*)(void))type metadata accessor for LocationComponentViewModel);
  sub_10031F75C(v3, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
  sub_10031F6FC((uint64_t)v19, (uint64_t)v22, (void (*)(void))type metadata accessor for LocationComponentViewModel);
  if (v36)
  {
    sub_10031F75C((uint64_t)v22, (void (*)(void))type metadata accessor for LocationComponentViewModel);
    goto LABEL_16;
  }
  sub_10031F6FC((uint64_t)v22, (uint64_t)v31, (void (*)(void))type metadata accessor for LocationComponentViewModel);
  uint64_t v47 = 0;
  uint64_t v48 = &v31[*(int *)(v6 + 20)];
  uint64_t v49 = v73;
  *(void *)uint64_t v48 = v74;
  *((void *)v48 + 1) = v49;
  uint64_t v50 = v71;
  *((void *)v48 + 2) = v72;
  *((void *)v48 + 3) = v50;
LABEL_17:
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v31, v47, 1, v6);
  sub_10031F640((uint64_t)v31, (uint64_t)v34);
  sub_10031F6A8(v94 + *(int *)(v46 + 20) + OBJC_IVAR____TtCV7Weather23DefaultTrendNewsContent8_Storage_airQuality, (uint64_t)v28, (void (*)(void))type metadata accessor for LocationComponentViewModel);
  uint64_t v51 = &v28[*(int *)(v6 + 20)];
  uint64_t v52 = v77;
  *(void *)uint64_t v51 = v78;
  *((void *)v51 + 1) = v52;
  uint64_t v53 = v75;
  *((void *)v51 + 2) = v76;
  *((void *)v51 + 3) = v53;
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v28, 0, 1, v6);
  uint64_t v54 = sub_100163220(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_dailyForecast);
  sub_10031F6A8(v54, (uint64_t)v13, (void (*)(void))type metadata accessor for LocationComponentViewModel);
  uint64_t v55 = &v13[*(int *)(v6 + 20)];
  uint64_t v56 = v81;
  *(void *)uint64_t v55 = v82;
  *((void *)v55 + 1) = v56;
  uint64_t v57 = v79;
  *((void *)v55 + 2) = v80;
  *((void *)v55 + 3) = v57;
  uint64_t v58 = v91;
  sub_10006DF38((uint64_t)v34, v91, &qword_100E6CCD8);
  uint64_t v59 = sub_100163220(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_uvIndex);
  uint64_t v60 = v92;
  sub_10031F6A8(v59, v92, (void (*)(void))type metadata accessor for LocationComponentViewModel);
  uint64_t v61 = (uint64_t *)(v60 + *(int *)(v6 + 20));
  uint64_t v62 = v85;
  uint64_t *v61 = v86;
  v61[1] = v62;
  uint64_t v63 = v83;
  v61[2] = v84;
  v61[3] = v63;
  uint64_t v64 = sub_100163220(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_wind);
  uint64_t v65 = v93;
  sub_10031F6A8(v64, v93, (void (*)(void))type metadata accessor for LocationComponentViewModel);
  uint64_t v66 = (uint64_t *)(v65 + *(int *)(v6 + 20));
  uint64_t v67 = v89;
  uint64_t *v66 = v90;
  v66[1] = v67;
  uint64_t v68 = v88;
  v66[2] = v87;
  v66[3] = v68;
  uint64_t v69 = sub_100AD6D18((uint64_t)v28, (uint64_t)v13, v58, v60, v65);
  sub_1001781AC((uint64_t)v34, &qword_100E6CCD8);
  return v69;
}

uint64_t sub_1009D0B44(uint64_t a1)
{
  uint64_t v3 = sub_10017DF08(&qword_100E64E80);
  uint64_t v4 = sub_100109308(v3);
  __chkstk_darwin(v4);
  sub_1001626E0();
  uint64_t v7 = v6 - v5;
  uint64_t v8 = type metadata accessor for LocationComponentContainerViewModel();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  sub_10008B8C0();
  uint64_t v10 = a1 + OBJC_IVAR____TtCV7Weather23DefaultTrendNewsContent8_Storage_map;
  swift_beginAccess();
  sub_10006DF38(v10, v7, &qword_100E64E80);
  uint64_t v105 = a1;
  if (_s7Weather24LocationCompositionStateOwet_0(v7, 1, v8) == 1)
  {
    sub_1001781AC(v7, &qword_100E64E80);
    sub_10017DF08(&qword_100E6CCC8);
    uint64_t v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_100C367B0;
    sub_10017DF08(&qword_100E6CCD0);
    unint64_t v12 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
    uint64_t v13 = *(void *)(v9 + 72);
    uint64_t v14 = (__n128 *)swift_allocObject();
    uint64_t v15 = sub_100183900(v14, (__n128)xmmword_100C251B0);
    sub_10031F6A8(*(void *)(a1 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_hourlyForecast, (uint64_t)v15 + v12, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 32) = sub_1001F24CC((uint64_t)v14);
    *(void *)(v11 + 40) = v16;
    *(void *)(v11 + 48) = v17;
    uint64_t v18 = (__n128 *)swift_allocObject();
    sub_100181608(v18);
    sub_10031F6A8(*(void *)(a1 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_dailyForecast, v19, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 56) = sub_1001F24CC((uint64_t)v18);
    *(void *)(v11 + 64) = v20;
    *(void *)(v11 + 72) = v21;
    uint64_t v22 = (__n128 *)sub_100163204();
    sub_100181608(v22);
    sub_10031F6A8(a1 + OBJC_IVAR____TtCV7Weather23DefaultTrendNewsContent8_Storage_newsArticle, v23, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 80) = sub_1001F24CC((uint64_t)v22);
    *(void *)(v11 + 88) = v24;
    *(void *)(v11 + 96) = v25;
    uint64_t v26 = (__n128 *)sub_100163204();
    sub_100181608(v26);
    sub_10031F6A8(a1 + OBJC_IVAR____TtCV7Weather23DefaultTrendNewsContent8_Storage_airQuality, v27, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 104) = sub_1001F24CC((uint64_t)v26);
    *(void *)(v11 + 112) = v28;
    *(void *)(v11 + 120) = v29;
    uint64_t v30 = v13;
    unint64_t v31 = (__n128 *)swift_allocObject();
    uint64_t v32 = (char *)sub_100183900(v31, (__n128)xmmword_100C25ED0) + v12;
    sub_10017C9A0(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_uvIndex);
    sub_1001859A8((uint64_t)&v32[v30], OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_sunriseSunset);
    *(void *)(v11 + 128) = sub_1001F24CC((uint64_t)v31);
    *(void *)(v11 + 136) = v33;
    *(void *)(v11 + 144) = v34;
    uint64_t v35 = (__n128 *)swift_allocObject();
    sub_10016324C(v35);
    sub_10017C9A0(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_wind);
    sub_1001859A8((uint64_t)&v32[v30], OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_precipitationTotal);
    *(void *)(v11 + 152) = sub_1001F24CC((uint64_t)v31);
    *(void *)(v11 + 160) = v36;
    *(void *)(v11 + 168) = v37;
    uint64_t v38 = (__n128 *)swift_allocObject();
    sub_10016324C(v38);
    sub_10017C9A0(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_feelsLike);
    sub_1001859A8((uint64_t)&v32[v30], OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_humidity);
    *(void *)(v11 + 176) = sub_1001F24CC((uint64_t)v31);
    *(void *)(v11 + 184) = v39;
    *(void *)(v11 + 192) = v40;
    uint64_t v41 = sub_100163204();
    *(_OWORD *)(v41 + 16) = v106;
    sub_10017C9A0(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_visibility);
    sub_1001859A8(v41 + v12 + v30, OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_pressure);
    *(void *)(v11 + 200) = sub_1001F24CC(v41);
    *(void *)(v11 + 208) = v42;
    *(void *)(v11 + 216) = v43;
    uint64_t v44 = (__n128 *)swift_allocObject();
    sub_100179F48(v44);
    uint64_t v46 = v45 + v12;
    uint64_t v47 = *(void *)(a1 + 16);
    sub_10031F6A8(v47 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_moon, v45 + v12, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    sub_10031F6A8(v47 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_averages, v46 + v30, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 224) = sub_1001F24CC((uint64_t)v44);
    *(void *)(v11 + 232) = v48;
    *(void *)(v11 + 240) = v49;
  }
  else
  {
    sub_10031F6FC(v7, v1, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    sub_10017DF08(&qword_100E6CCC8);
    uint64_t v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_100C28110;
    sub_10017DF08(&qword_100E6CCD0);
    uint64_t v104 = *(void *)(v9 + 72);
    uint64_t v103 = v1;
    unint64_t v50 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
    uint64_t v51 = (__n128 *)swift_allocObject();
    uint64_t v52 = sub_100183900(v51, (__n128)xmmword_100C251B0);
    sub_10031F6A8(*(void *)(a1 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_hourlyForecast, (uint64_t)v52 + v50, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 32) = sub_1001F24CC((uint64_t)v51);
    *(void *)(v11 + 40) = v53;
    *(void *)(v11 + 48) = v54;
    uint64_t v55 = (__n128 *)sub_10017C984();
    sub_100179F54(v55);
    sub_10031F6A8(*(void *)(a1 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_dailyForecast, v56, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 56) = sub_1001F24CC((uint64_t)v55);
    *(void *)(v11 + 64) = v57;
    *(void *)(v11 + 72) = v58;
    uint64_t v59 = (__n128 *)sub_10017C984();
    sub_100179F54(v59);
    sub_10031F6A8(a1 + OBJC_IVAR____TtCV7Weather23DefaultTrendNewsContent8_Storage_newsArticle, v60, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 80) = sub_1001F24CC((uint64_t)v59);
    *(void *)(v11 + 88) = v61;
    *(void *)(v11 + 96) = v62;
    uint64_t v63 = (__n128 *)sub_10017C984();
    sub_100179F54(v63);
    sub_10031F6A8(a1 + OBJC_IVAR____TtCV7Weather23DefaultTrendNewsContent8_Storage_airQuality, v64, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 104) = sub_1001F24CC((uint64_t)v63);
    *(void *)(v11 + 112) = v65;
    *(void *)(v11 + 120) = v66;
    uint64_t v67 = (__n128 *)sub_10017C984();
    sub_100179F54(v67);
    sub_10031F6A8(v1, v68, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 128) = sub_1001F24CC((uint64_t)v67);
    *(void *)(v11 + 136) = v69;
    *(void *)(v11 + 144) = v70;
    uint64_t v71 = (__n128 *)swift_allocObject();
    uint64_t v72 = (char *)sub_100183900(v71, (__n128)xmmword_100C25ED0) + v50;
    uint64_t v73 = a1;
    uint64_t v74 = *(void *)(a1 + 16);
    uint64_t v75 = v73;
    sub_10031F6A8(v74 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_uvIndex, (uint64_t)v72, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    sub_10031F6A8(v74 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_sunriseSunset, (uint64_t)&v72[v104], (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 152) = sub_1001F24CC((uint64_t)v71);
    *(void *)(v11 + 160) = v76;
    *(void *)(v11 + 168) = v77;
    uint64_t v78 = (__n128 *)swift_allocObject();
    sub_100179F48(v78);
    uint64_t v80 = v79 + v50;
    uint64_t v81 = *(void *)(v75 + 16);
    sub_100163230(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_wind);
    sub_10031F6A8(v81 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_precipitationTotal, v80 + v104, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 176) = sub_1001F24CC((uint64_t)v78);
    *(void *)(v11 + 184) = v82;
    *(void *)(v11 + 192) = v83;
    uint64_t v84 = (__n128 *)swift_allocObject();
    sub_100179F48(v84);
    uint64_t v86 = v85 + v50;
    uint64_t v87 = *(void *)(v105 + 16);
    sub_100163230(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_feelsLike);
    sub_10031F6A8(v87 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_humidity, v86 + v104, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 200) = sub_1001F24CC((uint64_t)v84);
    *(void *)(v11 + 208) = v88;
    *(void *)(v11 + 216) = v89;
    uint64_t v90 = (__n128 *)swift_allocObject();
    sub_100179F48(v90);
    uint64_t v92 = v91 + v50;
    uint64_t v93 = *(void *)(v105 + 16);
    sub_100163230(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_visibility);
    sub_10031F6A8(v93 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_pressure, v92 + v104, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 224) = sub_1001F24CC((uint64_t)v90);
    *(void *)(v11 + 232) = v94;
    *(void *)(v11 + 240) = v95;
    uint64_t v96 = (__n128 *)swift_allocObject();
    sub_100179F48(v96);
    uint64_t v98 = v97 + v50;
    uint64_t v99 = *(void *)(v105 + 16);
    sub_10031F6A8(v99 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_moon, v97 + v50, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    sub_10031F6A8(v99 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_averages, v98 + v104, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 248) = sub_1001F24CC((uint64_t)v96);
    *(void *)(v11 + 256) = v100;
    *(void *)(v11 + 264) = v101;
    sub_10031F75C(v103, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
  }
  return v11;
}

void sub_1009D13B8(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v4 = type metadata accessor for LocationComponentContainerViewModel();
  sub_100162E4C();
  uint64_t v6 = __chkstk_darwin(v5);
  __chkstk_darwin(v6);
  uint64_t v7 = type metadata accessor for LocationViewComponent();
  uint64_t v8 = sub_100109308(v7);
  __chkstk_darwin(v8);
  sub_1001626E0();
  uint64_t v11 = v10 - v9;
  uint64_t v12 = sub_10017DF08(&qword_100E64E80);
  uint64_t v13 = sub_100109308(v12);
  __chkstk_darwin(v13);
  sub_1001626E0();
  uint64_t v16 = v15 - v14;
  uint64_t v17 = swift_retain();
  sub_1006E2E94(v17, a2);
  swift_release();
  sub_10031F6A8(a1 + OBJC_IVAR____TtCV7Weather37LocationDefaultTrendNewsConfiguration8_Storage_map, v11, (void (*)(void))type metadata accessor for LocationViewComponent);
  a2(v11);
  sub_10031F75C(v11, (void (*)(void))type metadata accessor for LocationViewComponent);
  _s7Weather24LocationCompositionStateOwst_0(v16, 0, 1, v4);
  sub_10031F6A8(a1 + OBJC_IVAR____TtCV7Weather37LocationDefaultTrendNewsConfiguration8_Storage_airQuality, v11, (void (*)(void))type metadata accessor for LocationViewComponent);
  a2(v11);
  sub_10031F75C(v11, (void (*)(void))type metadata accessor for LocationViewComponent);
  sub_10031F6A8(a1 + OBJC_IVAR____TtCV7Weather37LocationDefaultTrendNewsConfiguration8_Storage_newsArticle, v11, (void (*)(void))type metadata accessor for LocationViewComponent);
  a2(v11);
  sub_10031F75C(v11, (void (*)(void))type metadata accessor for LocationViewComponent);
  sub_1002C52C4();
}

uint64_t *sub_1009D15E4(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    sub_10017DF08(&qword_100E65310);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *a1 = *a2;
    if (EnumCaseMultiPayload == 1)
    {
      a1[1] = a2[1];
      swift_retain();
      swift_retain();
      uint64_t v8 = *(int *)(sub_10017DF08(&qword_100E669A0) + 32);
      uint64_t v9 = (char *)a1 + v8;
      uint64_t v10 = (char *)a2 + v8;
      uint64_t v11 = type metadata accessor for PresentationMode();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    }
    else
    {
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v13 = a3[5];
    uint64_t v14 = (char *)a1 + v13;
    uint64_t v15 = (char *)a2 + v13;
    uint64_t v16 = type metadata accessor for CurrentWeather();
    uint64_t v17 = *(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16);
    v17(v14, v15, v16);
    uint64_t v18 = a3[6];
    uint64_t v19 = a3[7];
    uint64_t v20 = (uint64_t *)((char *)a1 + v18);
    uint64_t v21 = (uint64_t *)((char *)a2 + v18);
    uint64_t v22 = v21[1];
    void *v20 = *v21;
    v20[1] = v22;
    uint64_t v23 = (char *)a1 + v19;
    uint64_t v24 = (char *)a2 + v19;
    swift_retain();
    v17(v23, v24, v16);
    uint64_t v25 = sub_10017DF08(&qword_100EA7410);
    *(void *)&v23[*(int *)(v25 + 28)] = *(void *)&v24[*(int *)(v25 + 28)];
  }
  swift_retain();
  return a1;
}

uint64_t sub_1009D17C8(uint64_t a1, uint64_t a2)
{
  sub_10017DF08(&qword_100E65310);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  swift_release();
  if (EnumCaseMultiPayload == 1)
  {
    swift_release();
    uint64_t v5 = a1 + *(int *)(sub_10017DF08(&qword_100E669A0) + 32);
    uint64_t v6 = type metadata accessor for PresentationMode();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  }
  uint64_t v7 = a1 + *(int *)(a2 + 20);
  uint64_t v8 = type metadata accessor for CurrentWeather();
  uint64_t v9 = *(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);
  v9(v7, v8);
  swift_release();
  v9(a1 + *(int *)(a2 + 28), v8);
  sub_10017DF08(&qword_100EA7410);

  return swift_release();
}

void *sub_1009D1910(void *a1, void *a2, int *a3)
{
  sub_10017DF08(&qword_100E65310);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  *a1 = *a2;
  if (EnumCaseMultiPayload == 1)
  {
    a1[1] = a2[1];
    swift_retain();
    swift_retain();
    uint64_t v7 = *(int *)(sub_10017DF08(&qword_100E669A0) + 32);
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = type metadata accessor for PresentationMode();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  }
  else
  {
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v11 = a3[5];
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = type metadata accessor for CurrentWeather();
  uint64_t v15 = *(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16);
  v15(v12, v13, v14);
  uint64_t v16 = a3[6];
  uint64_t v17 = a3[7];
  uint64_t v18 = (void *)((char *)a1 + v16);
  uint64_t v19 = (void *)((char *)a2 + v16);
  uint64_t v20 = v19[1];
  void *v18 = *v19;
  v18[1] = v20;
  uint64_t v21 = (char *)a1 + v17;
  uint64_t v22 = (char *)a2 + v17;
  swift_retain();
  v15(v21, v22, v14);
  uint64_t v23 = sub_10017DF08(&qword_100EA7410);
  *(void *)&v21[*(int *)(v23 + 28)] = *(void *)&v22[*(int *)(v23 + 28)];
  swift_retain();
  return a1;
}

char *sub_1009D1AA8(char *a1, char *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_100178110((uint64_t)a1, &qword_100E65310);
    sub_10017DF08(&qword_100E65310);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *(void *)a1 = *(void *)a2;
    if (EnumCaseMultiPayload == 1)
    {
      *((void *)a1 + 1) = *((void *)a2 + 1);
      swift_retain();
      swift_retain();
      uint64_t v7 = *(int *)(sub_10017DF08(&qword_100E669A0) + 32);
      uint64_t v8 = &a1[v7];
      uint64_t v9 = &a2[v7];
      uint64_t v10 = type metadata accessor for PresentationMode();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    }
    else
    {
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v11 = a3[5];
  uint64_t v12 = &a1[v11];
  uint64_t v13 = &a2[v11];
  uint64_t v14 = type metadata accessor for CurrentWeather();
  uint64_t v15 = *(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 24);
  v15(v12, v13, v14);
  uint64_t v16 = a3[6];
  uint64_t v17 = &a1[v16];
  uint64_t v18 = &a2[v16];
  uint64_t v19 = *((void *)v18 + 1);
  *(void *)uint64_t v17 = *(void *)v18;
  *((void *)v17 + 1) = v19;
  swift_retain();
  swift_release();
  uint64_t v20 = a3[7];
  uint64_t v21 = &a1[v20];
  uint64_t v22 = &a2[v20];
  v15(&a1[v20], v22, v14);
  uint64_t v23 = sub_10017DF08(&qword_100EA7410);
  *(void *)&v21[*(int *)(v23 + 28)] = *(void *)&v22[*(int *)(v23 + 28)];
  swift_retain();
  swift_release();
  return a1;
}

void *sub_1009D1C74(void *a1, void *a2, int *a3)
{
  uint64_t v6 = sub_10017DF08(&qword_100E65310);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = *(int *)(sub_10017DF08(&qword_100E669A0) + 32);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for PresentationMode();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v12 = a3[5];
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  uint64_t v15 = type metadata accessor for CurrentWeather();
  uint64_t v16 = *(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32);
  v16(v13, v14, v15);
  uint64_t v17 = a3[7];
  *(_OWORD *)((char *)a1 + a3[6]) = *(_OWORD *)((char *)a2 + a3[6]);
  uint64_t v18 = (char *)a1 + v17;
  uint64_t v19 = (char *)a2 + v17;
  v16((char *)a1 + v17, v19, v15);
  uint64_t v20 = sub_10017DF08(&qword_100EA7410);
  *(void *)&v18[*(int *)(v20 + 28)] = *(void *)&v19[*(int *)(v20 + 28)];
  return a1;
}

void *sub_1009D1DFC(void *a1, void *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_100178110((uint64_t)a1, &qword_100E65310);
    uint64_t v6 = sub_10017DF08(&qword_100E65310);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = a2[1];
      *a1 = *a2;
      a1[1] = v7;
      uint64_t v8 = *(int *)(sub_10017DF08(&qword_100E669A0) + 32);
      uint64_t v9 = (char *)a1 + v8;
      uint64_t v10 = (char *)a2 + v8;
      uint64_t v11 = type metadata accessor for PresentationMode();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
  }
  uint64_t v12 = a3[5];
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  uint64_t v15 = type metadata accessor for CurrentWeather();
  uint64_t v16 = *(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 40);
  v16(v13, v14, v15);
  *(_OWORD *)((char *)a1 + a3[6]) = *(_OWORD *)((char *)a2 + a3[6]);
  swift_release();
  uint64_t v17 = a3[7];
  uint64_t v18 = (char *)a1 + v17;
  uint64_t v19 = (char *)a2 + v17;
  v16((char *)a1 + v17, v19, v15);
  uint64_t v20 = sub_10017DF08(&qword_100EA7410);
  *(void *)&v18[*(int *)(v20 + 28)] = *(void *)&v19[*(int *)(v20 + 28)];
  swift_release();
  return a1;
}

uint64_t sub_1009D1FB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1009D1FC8);
}

uint64_t sub_1009D1FC8(uint64_t a1, uint64_t a2, int *a3)
{
  sub_10017DF08(&qword_100E669A8);
  sub_100162F30();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1;
LABEL_11:
    return _s7Weather24LocationCompositionStateOwet_0(v9, a2, v8);
  }
  type metadata accessor for CurrentWeather();
  sub_100162F30();
  if (*(_DWORD *)(v11 + 84) == a2)
  {
    uint64_t v8 = v10;
    uint64_t v12 = a3[5];
LABEL_10:
    uint64_t v9 = a1 + v12;
    goto LABEL_11;
  }
  if (a2 != 0x7FFFFFFF)
  {
    uint64_t v8 = sub_10017DF08(&qword_100EA7410);
    uint64_t v12 = a3[7];
    goto LABEL_10;
  }
  unint64_t v13 = *(void *)(a1 + a3[6]);
  if (v13 >= 0xFFFFFFFF) {
    LODWORD(v13) = -1;
  }
  return (v13 + 1);
}

uint64_t sub_1009D20A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1009D20B8);
}

void sub_1009D20B8(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  sub_10017DF08(&qword_100E669A8);
  sub_100162F30();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = a1;
  }
  else
  {
    type metadata accessor for CurrentWeather();
    sub_100162F30();
    if (*(_DWORD *)(v13 + 84) == a3)
    {
      uint64_t v10 = v12;
      uint64_t v14 = a4[5];
    }
    else
    {
      if (a3 == 0x7FFFFFFF)
      {
        *(void *)(a1 + a4[6]) = (a2 - 1);
        return;
      }
      uint64_t v10 = sub_10017DF08(&qword_100EA7410);
      uint64_t v14 = a4[7];
    }
    uint64_t v11 = a1 + v14;
  }

  _s7Weather24LocationCompositionStateOwst_0(v11, a2, a2, v10);
}

uint64_t type metadata accessor for CurrentWeatherEditorView()
{
  uint64_t result = qword_100EA7470;
  if (!qword_100EA7470) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1009D21D8()
{
  sub_1002307EC();
  if (v0 <= 0x3F)
  {
    type metadata accessor for CurrentWeather();
    if (v1 <= 0x3F)
    {
      sub_1009D22E8();
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

void sub_1009D22E8()
{
  if (!qword_100EA7480)
  {
    type metadata accessor for CurrentWeather();
    unint64_t v0 = type metadata accessor for State();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100EA7480);
    }
  }
}

uint64_t sub_1009D2340()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1009D235C()
{
  sub_1001A27A4();
  uint64_t v6 = sub_10017DF08(&qword_100E7DDD8);
  uint64_t v7 = v4 + *(int *)(v6 + 40);
  uint64_t v8 = sub_10017DF08(&qword_100E6B648);
  sub_1001A1108(v8);
  sub_10006DF38(v5, v9, &qword_100E7DDE8);
  uint64_t v10 = sub_100931C98(v2, v7, &qword_100E7DDE8);
  sub_100181A6C(v10, v11, v12, v13, v14, v15, v16, v17, v24, v25);
  if (v1 != 3)
  {
    uint64_t v18 = sub_1009FB1EC(v0);
    uint64_t v19 = sub_1009D4B00(v18, (void (*)(uint64_t))sub_1007F387C, &qword_100E97288, (void (*)(void, void, void))sub_1009D4E20);
    swift_bridgeObjectRelease();
    if (v19) {
      goto LABEL_4;
    }
  }
  sub_1001ABC4C(0, (unint64_t *)&qword_100E6B678);
  sub_10017DF08(&qword_100EA7520);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100C25ED0;
  uint64_t v21 = self;
  *(void *)(inited + 32) = [v21 inches];
  *(void *)(inited + 40) = 0x736568636E69;
  *(void *)(inited + 48) = 0xE600000000000000;
  *(void *)(inited + 56) = [v21 millimeters];
  *(void *)(inited + 64) = 0x74656D696C6C696DLL;
  *(void *)(inited + 72) = 0xEB00000000737265;
  uint64_t v19 = sub_1009D4B00(inited, (void (*)(uint64_t))sub_1007F387C, &qword_100E97288, (void (*)(void, void, void))sub_1009D4E20);
  swift_setDeallocating();
  sub_1006BB228();
  if (v19)
  {
LABEL_4:
    uint64_t v22 = sub_1009D4C78((uint64_t)v19, (uint64_t)sub_1007F384C, &qword_100E97288, &qword_100E97278);
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_release();
    uint64_t v22 = _swiftEmptyArrayStorage;
  }
  sub_100178110(v2, &qword_100E7DDE8);
  uint64_t result = sub_100178110(v5, &qword_100E7DDE8);
  *(void *)(v3 + *(int *)(v6 + 36)) = v22;
  return result;
}

uint64_t sub_1009D25C8()
{
  sub_1001A27A4();
  uint64_t v6 = sub_10017DF08(&qword_100E86250);
  uint64_t v7 = v4 + *(int *)(v6 + 40);
  uint64_t v8 = sub_10017DF08(&qword_100E65250);
  sub_1001A1108(v8);
  sub_10006DF38(v5, v9, qword_100E65268);
  uint64_t v10 = sub_100931C98(v2, v7, qword_100E65268);
  sub_100181A6C(v10, v11, v12, v13, v14, v15, v16, v17, v24, v25);
  if (v1 != 3)
  {
    uint64_t v18 = sub_1009FB1EC(v0);
    uint64_t v19 = sub_1009D4B00(v18, (void (*)(uint64_t))sub_1007F39A4, &qword_100E972A8, (void (*)(void, void, void))sub_1009D51E4);
    swift_bridgeObjectRelease();
    if (v19) {
      goto LABEL_4;
    }
  }
  sub_1001ABC4C(0, (unint64_t *)&qword_100E659A0);
  sub_10017DF08(&qword_100EA7520);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100C25ED0;
  uint64_t v21 = self;
  *(void *)(inited + 32) = [v21 celsius];
  *(void *)(inited + 40) = 0x737569736C6563;
  *(void *)(inited + 48) = 0xE700000000000000;
  *(void *)(inited + 56) = [v21 fahrenheit];
  *(void *)(inited + 64) = 0x65686E6572686166;
  *(void *)(inited + 72) = 0xEA00000000007469;
  uint64_t v19 = sub_1009D4B00(inited, (void (*)(uint64_t))sub_1007F39A4, &qword_100E972A8, (void (*)(void, void, void))sub_1009D51E4);
  swift_setDeallocating();
  sub_1006BB228();
  if (v19)
  {
LABEL_4:
    uint64_t v22 = sub_1009D4C78((uint64_t)v19, (uint64_t)sub_1007F3974, &qword_100E972A8, &qword_100E97298);
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_release();
    uint64_t v22 = _swiftEmptyArrayStorage;
  }
  sub_100178110(v2, qword_100E65268);
  uint64_t result = sub_100178110(v5, qword_100E65268);
  *(void *)(v3 + *(int *)(v6 + 36)) = v22;
  return result;
}

uint64_t sub_1009D2834@<X0>(uint64_t a1@<X8>)
{
  uint64_t v48 = a1;
  uint64_t v2 = type metadata accessor for CurrentWeatherEditorView();
  uint64_t v45 = *(void *)(v2 - 8);
  uint64_t v44 = *(void *)(v45 + 64);
  __chkstk_darwin(v2 - 8);
  uint64_t v42 = (uint64_t)v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10017DF08(&qword_100E65388);
  sub_100179C0C();
  uint64_t v46 = v4;
  uint64_t v47 = v5;
  __chkstk_darwin(v4);
  sub_100109314();
  uint64_t v43 = v6;
  uint64_t v7 = type metadata accessor for InsetGroupedListStyle();
  sub_100179C0C();
  uint64_t v9 = v8;
  __chkstk_darwin(v10);
  sub_1001626E0();
  uint64_t v13 = v12 - v11;
  uint64_t v14 = sub_10017DF08(&qword_100EA74B8);
  sub_100179C0C();
  uint64_t v16 = v15;
  __chkstk_darwin(v17);
  sub_1001626E0();
  uint64_t v20 = v19 - v18;
  sub_10017DF08(&qword_100EA74C0);
  sub_100179C0C();
  uint64_t v38 = v21;
  uint64_t v39 = v22;
  __chkstk_darwin(v21);
  sub_1001626E0();
  sub_10017DF08(&qword_100EA74C8);
  sub_100179C0C();
  uint64_t v40 = v23;
  uint64_t v41 = v24;
  __chkstk_darwin(v23);
  sub_100109314();
  v37[1] = v25;
  uint64_t v49 = v1;
  sub_10017DF08(&qword_100EA74D0);
  sub_1001246C8(&qword_100EA74D8, &qword_100EA74D0);
  List<>.init(content:)();
  InsetGroupedListStyle.init()();
  uint64_t v26 = sub_1001246C8(&qword_100EA74E0, &qword_100EA74B8);
  View.listStyle<A>(_:)();
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v13, v7);
  (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v20, v14);
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v50 = v14;
  uint64_t v51 = v7;
  uint64_t v52 = v26;
  uint64_t v53 = &protocol witness table for InsetGroupedListStyle;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v28 = v38;
  View.navigationTitle(_:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v29 = v28;
  sub_100162F0C();
  v30();
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v31 = v42;
  sub_1009D4EEC(v37[2], v42, (void (*)(void))type metadata accessor for CurrentWeatherEditorView);
  unint64_t v32 = (*(unsigned __int8 *)(v45 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v45 + 80);
  uint64_t v33 = swift_allocObject();
  sub_1009D4A5C(v31, v33 + v32);
  Button<>.init(_:action:)();
  uint64_t v50 = v29;
  uint64_t v51 = OpaqueTypeConformance2;
  swift_getOpaqueTypeConformance2();
  sub_1001246C8(&qword_100E653A8, &qword_100E65388);
  View.navigationBarItems<A>(trailing:)();
  sub_100162F0C();
  v34();
  sub_100162F0C();
  return v35();
}

uint64_t sub_1009D2D68@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v47 = a2;
  uint64_t v3 = sub_10017DF08(&qword_100E7DDD8);
  __chkstk_darwin(v3 - 8);
  uint64_t v46 = (uint64_t)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v44 = (uint64_t)&v38 - v6;
  uint64_t v45 = sub_10017DF08(&qword_100EA74E8);
  uint64_t v39 = *(void *)(v45 - 8);
  uint64_t v7 = v39;
  __chkstk_darwin(v45);
  uint64_t v43 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v48 = (char *)&v38 - v10;
  uint64_t v49 = sub_10017DF08(&qword_100EA74F0);
  uint64_t v42 = *(void *)(v49 - 8);
  uint64_t v11 = v42;
  __chkstk_darwin(v49);
  uint64_t v13 = (char *)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v38 - v15;
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v52 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v53 = v17;
  char v54 = v18 & 1;
  uint64_t v55 = v19;
  uint64_t v51 = a1;
  sub_10017DF08(&qword_100EA74F8);
  sub_1001246C8(&qword_100EA7500, &qword_100EA74F8);
  uint64_t v41 = v16;
  Section<>.init(header:content:)();
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v52 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v53 = v20;
  char v54 = v21 & 1;
  uint64_t v55 = v22;
  uint64_t v50 = a1;
  sub_10017DF08(&qword_100EA7508);
  sub_1001246C8(&qword_100EA7510, &qword_100EA7508);
  uint64_t v23 = v48;
  Section<>.init(header:content:)();
  uint64_t v24 = v44;
  sub_1009D4260(v44);
  uint64_t v25 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
  uint64_t v40 = v13;
  uint64_t v26 = v16;
  uint64_t v27 = v49;
  v25(v13, v26, v49);
  uint64_t v38 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
  uint64_t v28 = v43;
  uint64_t v29 = v45;
  v38(v43, v23, v45);
  uint64_t v30 = v46;
  sub_10006DF38(v24, v46, &qword_100E7DDD8);
  uint64_t v31 = v47;
  v25(v47, v13, v27);
  uint64_t v32 = sub_10017DF08(&qword_100EA7518);
  uint64_t v33 = v29;
  v38(&v31[*(int *)(v32 + 48)], v28, v29);
  sub_10006DF38(v30, (uint64_t)&v31[*(int *)(v32 + 64)], &qword_100E7DDD8);
  sub_100178110(v24, &qword_100E7DDD8);
  uint64_t v34 = *(void (**)(char *, uint64_t))(v39 + 8);
  v34(v48, v29);
  uint64_t v35 = *(void (**)(char *, uint64_t))(v42 + 8);
  uint64_t v36 = v49;
  v35(v41, v49);
  sub_100178110(v30, &qword_100E7DDD8);
  v34(v28, v33);
  return ((uint64_t (*)(char *, uint64_t))v35)(v40, v36);
}

uint64_t sub_1009D32A0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_10017DF08(&qword_100E86250);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v22 - v6;
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v22 - v9;
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v22 - v12;
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v22 - v15;
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)&v22 - v18;
  sub_1009D34AC((uint64_t)&v22 - v18);
  sub_1009D3778((uint64_t)v16);
  sub_1009D3A40((uint64_t)v13);
  sub_10006DF38((uint64_t)v19, (uint64_t)v10, &qword_100E86250);
  sub_10006DF38((uint64_t)v16, (uint64_t)v7, &qword_100E86250);
  sub_10006DF38((uint64_t)v13, (uint64_t)v4, &qword_100E86250);
  sub_10006DF38((uint64_t)v10, a1, &qword_100E86250);
  uint64_t v20 = sub_10017DF08(&qword_100EA7530);
  sub_10006DF38((uint64_t)v7, a1 + *(int *)(v20 + 48), &qword_100E86250);
  sub_10006DF38((uint64_t)v4, a1 + *(int *)(v20 + 64), &qword_100E86250);
  sub_100178110((uint64_t)v13, &qword_100E86250);
  sub_100178110((uint64_t)v16, &qword_100E86250);
  sub_100178110((uint64_t)v19, &qword_100E86250);
  sub_100178110((uint64_t)v4, &qword_100E86250);
  sub_100178110((uint64_t)v7, &qword_100E86250);
  return sub_100178110((uint64_t)v10, &qword_100E86250);
}

uint64_t sub_1009D34AC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v22 = a1;
  uint64_t v2 = type metadata accessor for CurrentWeatherEditorView();
  uint64_t v21 = *(void *)(v2 - 8);
  uint64_t v3 = *(void *)(v21 + 64);
  __chkstk_darwin(v2);
  uint64_t v20 = (uint64_t)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for CurrentWeather();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10017DF08(qword_100E65268);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v19 - v12;
  CurrentWeather.temperature.getter();
  uint64_t v14 = sub_10017DF08(&qword_100E65250);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v13, 0, 1, v14);
  sub_10017DF08(&qword_100EA7410);
  State.wrappedValue.getter();
  CurrentWeather.temperature.getter();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v10, 0, 1, v14);
  uint64_t v15 = v20;
  sub_1009D4EEC(v1, v20, (void (*)(void))type metadata accessor for CurrentWeatherEditorView);
  unint64_t v16 = (*(unsigned __int8 *)(v21 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  uint64_t v17 = swift_allocObject();
  sub_1009D4A5C(v15, v17 + v16);
  return sub_1009D25C8();
}

uint64_t sub_1009D3778@<X0>(uint64_t a1@<X8>)
{
  uint64_t v22 = a1;
  uint64_t v2 = type metadata accessor for CurrentWeatherEditorView();
  uint64_t v21 = *(void *)(v2 - 8);
  uint64_t v3 = *(void *)(v21 + 64);
  __chkstk_darwin(v2);
  uint64_t v20 = (uint64_t)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for CurrentWeather();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10017DF08(qword_100E65268);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v19 - v12;
  CurrentWeather.apparentTemperature.getter();
  uint64_t v14 = sub_10017DF08(&qword_100E65250);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v13, 0, 1, v14);
  sub_10017DF08(&qword_100EA7410);
  State.wrappedValue.getter();
  CurrentWeather.apparentTemperature.getter();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v10, 0, 1, v14);
  uint64_t v15 = v20;
  sub_1009D4EEC(v1, v20, (void (*)(void))type metadata accessor for CurrentWeatherEditorView);
  unint64_t v16 = (*(unsigned __int8 *)(v21 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  uint64_t v17 = swift_allocObject();
  sub_1009D4A5C(v15, v17 + v16);
  return sub_1009D25C8();
}

uint64_t sub_1009D3A40@<X0>(uint64_t a1@<X8>)
{
  uint64_t v22 = a1;
  uint64_t v2 = type metadata accessor for CurrentWeatherEditorView();
  uint64_t v21 = *(void *)(v2 - 8);
  uint64_t v3 = *(void *)(v21 + 64);
  __chkstk_darwin(v2);
  uint64_t v20 = (uint64_t)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for CurrentWeather();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10017DF08(qword_100E65268);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v19 - v12;
  CurrentWeather.dewPoint.getter();
  uint64_t v14 = sub_10017DF08(&qword_100E65250);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v13, 0, 1, v14);
  sub_10017DF08(&qword_100EA7410);
  State.wrappedValue.getter();
  CurrentWeather.dewPoint.getter();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v10, 0, 1, v14);
  uint64_t v15 = v20;
  sub_1009D4EEC(v1, v20, (void (*)(void))type metadata accessor for CurrentWeatherEditorView);
  unint64_t v16 = (*(unsigned __int8 *)(v21 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  uint64_t v17 = swift_allocObject();
  sub_1009D4A5C(v15, v17 + v16);
  return sub_1009D25C8();
}

uint64_t sub_1009D3D08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v58 = a2;
  uint64_t v3 = type metadata accessor for CurrentWeatherEditorView();
  uint64_t v4 = v3 - 8;
  uint64_t v55 = *(void *)(v3 - 8);
  uint64_t v54 = *(void *)(v55 + 64);
  __chkstk_darwin(v3);
  uint64_t v60 = (uint64_t)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = type metadata accessor for CurrentWeather();
  uint64_t v6 = *(void *)(v59 - 8);
  __chkstk_darwin(v59);
  uint64_t v8 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for PrecipitationAmount();
  uint64_t v52 = *(void *)(v9 - 8);
  uint64_t v53 = v9;
  __chkstk_darwin(v9);
  uint64_t v42 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v43 = (char *)&v42 - v12;
  uint64_t v13 = type metadata accessor for PrecipitationAmountsEditorRowView(0);
  uint64_t v14 = (int *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v57 = (uint64_t)&v42 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v56 = (uint64_t)&v42 - v17;
  __chkstk_darwin(v18);
  uint64_t v20 = (char *)&v42 - v19;
  __chkstk_darwin(v21);
  uint64_t v23 = (char *)&v42 - v22;
  uint64_t v51 = a1 + *(int *)(v4 + 28);
  CurrentWeather.precipitationAmount.getter();
  uint64_t v50 = a1 + *(int *)(v4 + 36);
  uint64_t v46 = a1;
  uint64_t v49 = sub_10017DF08(&qword_100EA7410);
  State.wrappedValue.getter();
  CurrentWeather.precipitationAmount.getter();
  uint64_t v24 = *(void (**)(char *, uint64_t))(v6 + 8);
  uint64_t v47 = v6 + 8;
  uint64_t v48 = v24;
  v24(v8, v59);
  uint64_t v45 = type metadata accessor for CurrentWeatherEditorView;
  uint64_t v25 = v60;
  sub_1009D4EEC(a1, v60, (void (*)(void))type metadata accessor for CurrentWeatherEditorView);
  uint64_t v26 = *(unsigned __int8 *)(v55 + 80);
  v54 += (v26 + 16) & ~v26;
  uint64_t v55 = (v26 + 16) & ~v26;
  uint64_t v27 = v55;
  uint64_t v44 = v26 | 7;
  uint64_t v28 = swift_allocObject();
  sub_1009D4A5C(v25, v28 + v27);
  *(void *)uint64_t v23 = 0xD000000000000014;
  *((void *)v23 + 1) = 0x8000000100CAC3B0;
  uint64_t v29 = v53;
  uint64_t v30 = *(void (**)(char *, char *, uint64_t))(v52 + 32);
  uint64_t v31 = v43;
  v30(&v23[v14[7]], v43, v53);
  uint64_t v32 = v42;
  v30(&v23[v14[8]], v42, v29);
  uint64_t v33 = (uint64_t (**)(uint64_t))&v23[v14[9]];
  *uint64_t v33 = sub_1009D4E64;
  v33[1] = (uint64_t (*)(uint64_t))v28;
  CurrentWeather.snowfallAmount.getter();
  State.wrappedValue.getter();
  CurrentWeather.snowfallAmount.getter();
  v48(v8, v59);
  uint64_t v34 = v60;
  sub_1009D4EEC(v46, v60, (void (*)(void))v45);
  uint64_t v35 = swift_allocObject();
  sub_1009D4A5C(v34, v35 + v55);
  *(void *)uint64_t v20 = 0x6C6C6166776F6E73;
  *((void *)v20 + 1) = 0xEF746E756F6D6120;
  v30(&v20[v14[7]], v31, v29);
  v30(&v20[v14[8]], v32, v29);
  uint64_t v36 = (uint64_t (**)(uint64_t))&v20[v14[9]];
  char *v36 = sub_1009D4ED4;
  v36[1] = (uint64_t (*)(uint64_t))v35;
  uint64_t v37 = v56;
  sub_1009D4EEC((uint64_t)v23, v56, (void (*)(void))type metadata accessor for PrecipitationAmountsEditorRowView);
  uint64_t v38 = v57;
  sub_1009D4EEC((uint64_t)v20, v57, (void (*)(void))type metadata accessor for PrecipitationAmountsEditorRowView);
  uint64_t v39 = v58;
  sub_1009D4EEC(v37, v58, (void (*)(void))type metadata accessor for PrecipitationAmountsEditorRowView);
  uint64_t v40 = sub_10017DF08(&qword_100EA7528);
  sub_1009D4EEC(v38, v39 + *(int *)(v40 + 48), (void (*)(void))type metadata accessor for PrecipitationAmountsEditorRowView);
  sub_1009D4F40((uint64_t)v20);
  sub_1009D4F40((uint64_t)v23);
  sub_1009D4F40(v38);
  return sub_1009D4F40(v37);
}

uint64_t sub_1009D4260@<X0>(uint64_t a1@<X8>)
{
  uint64_t v22 = a1;
  uint64_t v2 = type metadata accessor for CurrentWeatherEditorView();
  uint64_t v21 = *(void *)(v2 - 8);
  uint64_t v3 = *(void *)(v21 + 64);
  __chkstk_darwin(v2);
  uint64_t v20 = (uint64_t)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for CurrentWeather();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10017DF08(&qword_100E7DDE8);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v19 - v12;
  CurrentWeather.visibility.getter();
  uint64_t v14 = sub_10017DF08(&qword_100E6B648);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v13, 0, 1, v14);
  sub_10017DF08(&qword_100EA7410);
  State.wrappedValue.getter();
  CurrentWeather.visibility.getter();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v10, 0, 1, v14);
  uint64_t v15 = v20;
  sub_1009D4EEC(v1, v20, (void (*)(void))type metadata accessor for CurrentWeatherEditorView);
  unint64_t v16 = (*(unsigned __int8 *)(v21 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  uint64_t v17 = swift_allocObject();
  sub_1009D4A5C(v15, v17 + v16);
  return sub_1009D235C();
}

uint64_t sub_1009D4528(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for PresentationMode();
  __chkstk_darwin(v2 - 8);
  uint64_t v3 = sub_10017DF08(&qword_100E669A0);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for CurrentWeather();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void (**)(char *))(a1 + *(int *)(type metadata accessor for CurrentWeatherEditorView() + 24));
  sub_10017DF08(&qword_100EA7410);
  State.wrappedValue.getter();
  v10(v9);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  sub_1005D1E94();
  Binding.wrappedValue.getter();
  PresentationMode.dismiss()();
  Binding.wrappedValue.setter();
  return sub_100178110((uint64_t)v5, &qword_100E669A0);
}

uint64_t sub_1009D4710(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t *a4, void (*a5)(char *))
{
  uint64_t v9 = type metadata accessor for CurrentWeather();
  __chkstk_darwin(v9 - 8);
  sub_1001626E0();
  uint64_t v10 = sub_10017DF08(a3);
  __chkstk_darwin(v10 - 8);
  sub_1001626E0();
  uint64_t v13 = v12 - v11;
  uint64_t v14 = sub_10017DF08(a4);
  sub_100179C0C();
  uint64_t v16 = v15;
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)&v24 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  uint64_t v22 = (char *)&v24 - v21;
  sub_10006DF38(a1, v13, a3);
  if (_s7Weather24LocationCompositionStateOwet_0(v13, 1, v14) == 1) {
    return sub_100178110(v13, a3);
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 32))(v22, v13, v14);
  (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v19, v22, v14);
  type metadata accessor for CurrentWeatherEditorView();
  sub_10017DF08(&qword_100EA7410);
  State.wrappedValue.getter();
  a5(v19);
  State.wrappedValue.setter();
  return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v22, v14);
}

uint64_t sub_1009D4928(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t v5 = type metadata accessor for CurrentWeather();
  __chkstk_darwin(v5 - 8);
  sub_1001626E0();
  type metadata accessor for PrecipitationAmount();
  sub_100179C0C();
  __chkstk_darwin(v6);
  sub_1001626E0();
  uint64_t v9 = v8 - v7;
  (*(void (**)(uint64_t, uint64_t))(v10 + 16))(v8 - v7, a1);
  type metadata accessor for CurrentWeatherEditorView();
  sub_10017DF08(&qword_100EA7410);
  State.wrappedValue.getter();
  a3(v9);
  return State.wrappedValue.setter();
}

uint64_t sub_1009D4A50@<X0>(char *a1@<X8>)
{
  return sub_1009D2D68(*(void *)(v1 + 16), a1);
}

uint64_t sub_1009D4A5C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CurrentWeatherEditorView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1009D4AC0()
{
  uint64_t v1 = type metadata accessor for CurrentWeatherEditorView();
  sub_1001627C0(v1);
  uint64_t v3 = v0 + ((*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));

  return sub_1009D4528(v3);
}

void *sub_1009D4B00(uint64_t a1, void (*a2)(uint64_t), uint64_t *a3, void (*a4)(void, void, void))
{
  uint64_t v8 = *(void *)(a1 + 16);
  uint64_t v9 = sub_100163B98();
  a2(v9);
  uint64_t v10 = _swiftEmptyArrayStorage;
  if (v8)
  {
    uint64_t v11 = a1 + 48;
    while (1)
    {
      id v12 = *(id *)(v11 - 16);
      swift_bridgeObjectRetain();
      sub_10017DF08(&qword_100E8C1C0);
      sub_10017DF08(a3);
      if (!swift_dynamicCast()) {
        break;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        uint64_t v13 = sub_10017EC98();
        a2(v13);
        uint64_t v10 = _swiftEmptyArrayStorage;
      }
      unint64_t v15 = _swiftEmptyArrayStorage[2];
      unint64_t v14 = _swiftEmptyArrayStorage[3];
      if (v15 >= v14 >> 1)
      {
        ((void (*)(BOOL, unint64_t, uint64_t))a2)(v14 > 1, v15 + 1, 1);
        uint64_t v10 = _swiftEmptyArrayStorage;
      }
      v11 += 24;
      _swiftEmptyArrayStorage[2] = v15 + 1;
      uint64_t v16 = &_swiftEmptyArrayStorage[3 * v15];
      v16[4] = v18;
      v16[5] = v19;
      v16[6] = v20;
      if (!--v8) {
        return v10;
      }
    }
    swift_release();
    a4(0, 0, 0);
    return 0;
  }
  return v10;
}

void *sub_1009D4C78(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t *a4)
{
  uint64_t v4 = *(void *)(a1 + 16);
  if (v4)
  {
    uint64_t v8 = sub_100163B98();
    uint64_t v18 = v9;
    v9(v8);
    uint64_t v10 = a1 + 48;
    do
    {
      id v11 = *(id *)(v10 - 16);
      swift_bridgeObjectRetain_n();
      id v12 = v11;
      sub_10017DF08(a3);
      sub_10017DF08(a4);
      swift_dynamicCast();
      swift_bridgeObjectRelease();

      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        uint64_t v13 = sub_10017EC98();
        v18(v13);
      }
      unint64_t v15 = _swiftEmptyArrayStorage[2];
      unint64_t v14 = _swiftEmptyArrayStorage[3];
      if (v15 >= v14 >> 1) {
        ((void (*)(BOOL, unint64_t, uint64_t))v18)(v14 > 1, v15 + 1, 1);
      }
      v10 += 24;
      _swiftEmptyArrayStorage[2] = v15 + 1;
      uint64_t v16 = &_swiftEmptyArrayStorage[3 * v15];
      v16[4] = v19;
      v16[5] = v20;
      v16[6] = v21;
      --v4;
    }
    while (v4);
  }
  return _swiftEmptyArrayStorage;
}

uint64_t sub_1009D4DE4@<X0>(uint64_t a1@<X8>)
{
  return sub_1009D32A0(a1);
}

uint64_t sub_1009D4DEC@<X0>(uint64_t a1@<X8>)
{
  return sub_1009D3D08(*(void *)(v1 + 16), a1);
}

uint64_t sub_1009D4DF8(uint64_t a1)
{
  return sub_1009D5020(a1, &qword_100E7DDE8, &qword_100E6B648, (void (*)(char *))&CurrentWeather.visibility.setter);
}

void *sub_1009D4E20(void *result)
{
  if (result)
  {

    return (void *)swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1009D4E64(uint64_t a1)
{
  return sub_1009D4E7C(a1, (void (*)(uint64_t))&CurrentWeather.rainfallAmount.setter);
}

uint64_t sub_1009D4E7C(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v5 = type metadata accessor for CurrentWeatherEditorView();
  sub_1001627C0(v5);
  return sub_1009D4928(a1, v2 + ((*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80)), a2);
}

uint64_t sub_1009D4ED4(uint64_t a1)
{
  return sub_1009D4E7C(a1, (void (*)(uint64_t))&CurrentWeather.snowfallAmount.setter);
}

uint64_t sub_1009D4EEC(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  uint64_t v4 = sub_10011BFA4();
  v5(v4);
  return a2;
}

uint64_t sub_1009D4F40(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for PrecipitationAmountsEditorRowView(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1009D4FA0(uint64_t a1)
{
  return sub_1009D5020(a1, qword_100E65268, &qword_100E65250, (void (*)(char *))&CurrentWeather.dewPoint.setter);
}

uint64_t sub_1009D4FCC(uint64_t a1)
{
  return sub_1009D5020(a1, qword_100E65268, &qword_100E65250, (void (*)(char *))&CurrentWeather.apparentTemperature.setter);
}

uint64_t sub_1009D4FF8(uint64_t a1)
{
  return sub_1009D5020(a1, qword_100E65268, &qword_100E65250, (void (*)(char *))&CurrentWeather.temperature.setter);
}

uint64_t sub_1009D5020(uint64_t a1, uint64_t *a2, uint64_t *a3, void (*a4)(char *))
{
  uint64_t v9 = type metadata accessor for CurrentWeatherEditorView();
  sub_1001627C0(v9);
  return sub_1009D4710(a1, v4 + ((*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80)), a2, a3, a4);
}

uint64_t sub_1009D508C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1009D5204(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v57 = type metadata accessor for WeatherFormatPlaceholder();
  sub_100179C0C();
  uint64_t v58 = v4;
  __chkstk_darwin(v5);
  sub_100109314();
  uint64_t v56 = v6;
  uint64_t v7 = sub_10017DF08(&qword_100E63730);
  __chkstk_darwin(v7 - 8);
  sub_100109314();
  uint64_t v55 = v8;
  type metadata accessor for WeatherFormatScaling();
  sub_100179C0C();
  __chkstk_darwin(v9);
  sub_100109314();
  type metadata accessor for NSUnitLength.WeatherFormatUsage();
  sub_100179C0C();
  __chkstk_darwin(v10);
  sub_100109314();
  type metadata accessor for NSUnitLength.BaseWeatherFormatStyle();
  sub_100179C0C();
  __chkstk_darwin(v11);
  sub_100109314();
  id v12 = [self mainBundle];
  v59._uint64_t countAndFlagsBits = 0xD000000000000120;
  v59._uint64_t object = (void *)0x8000000100CB95E0;
  v13._uint64_t object = (void *)0x8000000100CB95B0;
  v13._uint64_t countAndFlagsBits = 0xD000000000000024;
  v14._uint64_t countAndFlagsBits = 0;
  v14._uint64_t object = (void *)0xE000000000000000;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v13, (Swift::String_optional)0, (NSBundle)v12, v14, v59);

  sub_10017DF08(&qword_100E6E908);
  uint64_t v15 = type metadata accessor for WeatherDescription.Argument();
  sub_100179C0C();
  uint64_t v17 = v16;
  uint64_t v19 = *(void *)(v18 + 72);
  unint64_t v20 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  uint64_t v54 = swift_allocObject();
  *(_OWORD *)(v54 + 16) = xmmword_100C34ED0;
  uint64_t v21 = (uint64_t *)(v54 + v20);
  sub_10017DF08(&qword_100E6B648);
  Measurement.value.getter();
  *uint64_t v21 = Double.pluralRuleInteger.getter();
  uint64_t v22 = enum case for WeatherDescription.Argument.pluralRule(_:);
  uint64_t v23 = *(void (**)(void))(v17 + 104);
  sub_10019F5D8();
  v23();
  Measurement.value.getter();
  *(void *)(v54 + v20 + v19) = Double.pluralRuleInteger.getter();
  ((void (*)(unint64_t, uint64_t, uint64_t))v23)(v54 + v20 + v19, v22, v15);
  uint64_t v24 = (void *)(v54 + v20 + 2 * v19);
  void *v24 = a1;
  v24[1] = a2;
  sub_10019F5D8();
  v23();
  uint64_t v25 = (void *)(v54 + v20 + 3 * v19);
  *uint64_t v25 = a3;
  v25[1] = a4;
  sub_10019F5D8();
  v23();
  uint64_t v48 = (uint64_t *)(v54 + v20 + 4 * v19);
  sub_1001631E8();
  v26();
  sub_1001631E8();
  v27();
  uint64_t v49 = type metadata accessor for Locale();
  _s7Weather24LocationCompositionStateOwst_0(v55, 1, 1, v49);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  static Set<>.full.getter();
  static WeatherFormatStyle<>.weather(_:usage:scaling:trimLeadingZeroes:locale:)();
  swift_bridgeObjectRelease();
  sub_10012B8A0(v55);
  sub_100162F0C();
  v28();
  sub_100162F0C();
  v29();
  unsigned int v47 = enum case for WeatherFormatPlaceholder.none(_:);
  uint64_t v46 = *(void (**)(uint64_t))(v58 + 104);
  v46(v56);
  type metadata accessor for UnitManager();
  static UnitManager.standard.getter();
  sub_1001D482C();
  uint64_t v30 = Measurement.formatted<A>(_:placeholder:unitManager:)();
  uint64_t v32 = v31;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v58 + 8))(v56, v57);
  sub_100162F0C();
  v33();
  uint64_t *v48 = v30;
  v48[1] = v32;
  v23();
  *(uint64_t *)((char *)v21 + 5 * v19) = 30;
  v23();
  uint64_t v34 = (uint64_t *)((char *)v21 + 6 * v19);
  sub_1001631E8();
  v35();
  sub_1001631E8();
  v36();
  _s7Weather24LocationCompositionStateOwst_0(v55, 1, 1, v49);
  static Set<>.full.getter();
  static WeatherFormatStyle<>.weather(_:usage:scaling:trimLeadingZeroes:locale:)();
  swift_bridgeObjectRelease();
  sub_10012B8A0(v55);
  sub_100162F0C();
  v37();
  sub_100162F0C();
  v38();
  ((void (*)(uint64_t, void, uint64_t))v46)(v56, v47, v57);
  static UnitManager.standard.getter();
  uint64_t v39 = Measurement.formatted<A>(_:placeholder:unitManager:)();
  uint64_t v41 = v40;
  swift_release();
  sub_100162F0C();
  v42();
  sub_100162F0C();
  v43();
  *uint64_t v34 = v39;
  v34[1] = v41;
  sub_1001631E8();
  v44();
  return WeatherDescription.init(format:_:)();
}

ValueMetadata *type metadata accessor for PrecipitationAveragesSummaryStringBuilder()
{
  return &type metadata for PrecipitationAveragesSummaryStringBuilder;
}

uint64_t sub_1009D5A1C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x73656C6369747261 && a2 == 0xE800000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E6F697461636F6CLL && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v7) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1009D5B14(char a1)
{
  if (a1) {
    return 0x6E6F697461636F6CLL;
  }
  else {
    return 0x73656C6369747261;
  }
}

uint64_t sub_1009D5B44(void *a1)
{
  uint64_t v3 = sub_10017DF08(&qword_100EA7600);
  sub_100179C0C();
  uint64_t v5 = v4;
  __chkstk_darwin(v6);
  sub_1001626E0();
  uint64_t v9 = v8 - v7;
  sub_1001B1E64(a1, a1[3]);
  sub_1009D6184();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  sub_10017DF08(&qword_100EA75E8);
  sub_1009D6290(&qword_100EA7608, &qword_100E7C320);
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  if (!v1)
  {
    type metadata accessor for NewsArticlePlacement();
    type metadata accessor for ArticlePlacementLocation();
    sub_1009D6324(&qword_100EA7610, (void (*)(uint64_t))&type metadata accessor for ArticlePlacementLocation);
    KeyedEncodingContainer.encode<A>(_:forKey:)();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v9, v3);
}

uint64_t sub_1009D5D28@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v19 = type metadata accessor for ArticlePlacementLocation();
  sub_100179C0C();
  uint64_t v17 = v4;
  __chkstk_darwin(v5);
  sub_1001626E0();
  uint64_t v8 = v7 - v6;
  sub_10017DF08(&qword_100EA75D8);
  sub_100179C0C();
  __chkstk_darwin(v9);
  sub_1001626E0();
  uint64_t v10 = type metadata accessor for NewsArticlePlacement();
  __chkstk_darwin(v10);
  sub_1001626E0();
  Swift::String v13 = (char *)(v12 - v11);
  sub_1001B1E64(a1, a1[3]);
  sub_1009D6184();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2) {
    return _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)a1);
  }
  sub_10017DF08(&qword_100EA75E8);
  sub_1009D6290(&qword_100EA75F0, &qword_100E7C2C8);
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  *(void *)Swift::String v13 = v20;
  sub_1009D6324(&qword_100EA75F8, (void (*)(uint64_t))&type metadata accessor for ArticlePlacementLocation);
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  uint64_t v14 = sub_10019F5EC();
  v15(v14);
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 32))(&v13[*(int *)(v10 + 20)], v8, v19);
  sub_1009D61D0((uint64_t)v13, a2);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)a1);
  return sub_1009D6234((uint64_t)v13);
}

uint64_t sub_1009D6010(uint64_t a1, uint64_t a2)
{
  sub_100BDC73C();
  if ((v4 & 1) == 0) {
    return 0;
  }
  uint64_t v5 = *(int *)(type metadata accessor for NewsArticlePlacement() + 20);

  return sub_10088A634(a1 + v5, a2 + v5);
}

uint64_t sub_1009D6078()
{
  return sub_1009D5B14(*v0);
}

uint64_t sub_1009D6080@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1009D5A1C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1009D60A8(uint64_t a1)
{
  unint64_t v2 = sub_1009D6184();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1009D60E4(uint64_t a1)
{
  unint64_t v2 = sub_1009D6184();

  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_1009D6120()
{
}

void sub_1009D6138()
{
}

uint64_t sub_1009D6150@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1009D5D28(a1, a2);
}

uint64_t sub_1009D6168(void *a1)
{
  return sub_1009D5B44(a1);
}

unint64_t sub_1009D6184()
{
  unint64_t result = qword_100EA75E0;
  if (!qword_100EA75E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA75E0);
  }
  return result;
}

uint64_t sub_1009D61D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for NewsArticlePlacement();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1009D6234(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for NewsArticlePlacement();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1009D6290(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10018C6DC(&qword_100EA75E8);
    sub_1009D6324(a2, (void (*)(uint64_t))type metadata accessor for NewsArticle);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1009D6324(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for NewsArticlePlacement.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1009D6438);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NewsArticlePlacement.CodingKeys()
{
  return &type metadata for NewsArticlePlacement.CodingKeys;
}

uint64_t *sub_1009D6470(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v5 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a1;
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = type metadata accessor for ArticlePlacementLocation();
    uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    v10(v7, v8, v9);
  }
  return v5;
}

uint64_t sub_1009D6554(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = type metadata accessor for ArticlePlacementLocation();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

void *sub_1009D65CC(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = type metadata accessor for ArticlePlacementLocation();
  uint64_t v8 = *(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16);
  swift_bridgeObjectRetain();
  v8(v5, v6, v7);
  return a1;
}

void *sub_1009D6664(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for ArticlePlacementLocation();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

void *sub_1009D66F8(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = type metadata accessor for ArticlePlacementLocation();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

void *sub_1009D6774(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for ArticlePlacementLocation();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  return a1;
}

uint64_t sub_1009D6800(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1009D6814);
}

uint64_t sub_1009D6814(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for ArticlePlacementLocation();
    uint64_t v9 = (uint64_t)a1 + *(int *)(a3 + 20);
    return _s7Weather24LocationCompositionStateOwet_0(v9, a2, v8);
  }
}

uint64_t sub_1009D689C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1009D68B0);
}

void *sub_1009D68B0(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for ArticlePlacementLocation();
    uint64_t v8 = (uint64_t)v5 + *(int *)(a4 + 20);
    return (void *)_s7Weather24LocationCompositionStateOwst_0(v8, a2, a2, v7);
  }
  return result;
}

unint64_t sub_1009D6934()
{
  unint64_t result = qword_100EA76A8;
  if (!qword_100EA76A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA76A8);
  }
  return result;
}

unint64_t sub_1009D6984()
{
  unint64_t result = qword_100EA76B0;
  if (!qword_100EA76B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA76B0);
  }
  return result;
}

unint64_t sub_1009D69D4()
{
  unint64_t result = qword_100EA76B8;
  if (!qword_100EA76B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA76B8);
  }
  return result;
}

uint64_t *sub_1009D6A20(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v18 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
    return a1;
  }
  uint64_t v7 = type metadata accessor for WeatherMapOverlayKind();
  (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = (uint64_t *)((char *)a1 + v8);
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = *(uint64_t *)((char *)a2 + v8 + 8);
  *uint64_t v9 = *(uint64_t *)((char *)a2 + v8);
  v9[1] = v11;
  uint64_t v12 = (int *)type metadata accessor for WeatherData(0);
  uint64_t v13 = v12[5];
  uint64_t v14 = (char *)v9 + v13;
  uint64_t v15 = &v10[v13];
  uint64_t v16 = type metadata accessor for Locale();
  swift_bridgeObjectRetain();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v15, 1, v16))
  {
    uint64_t v17 = sub_10017DF08(&qword_100E63730);
    memcpy(v14, v15, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v14, 0, 1, v16);
  }
  uint64_t v19 = v12[6];
  uint64_t v20 = (char *)v9 + v19;
  uint64_t v21 = &v10[v19];
  uint64_t v22 = type metadata accessor for WeatherDataModel();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
  uint64_t v23 = v12[7];
  uint64_t v24 = (char *)v9 + v23;
  uint64_t v25 = &v10[v23];
  uint64_t v26 = sub_10017DF08(&qword_100E63738);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v25, 1, v26))
  {
    uint64_t v27 = type metadata accessor for WeatherData.CachingState(0);
    memcpy(v24, v25, *(void *)(*(void *)(v27 - 8) + 64));
  }
  else
  {
    uint64_t v28 = type metadata accessor for Date();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 16))(v24, v25, v28);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v24, 0, 1, v26);
  }
  uint64_t v29 = v12[8];
  uint64_t v30 = (void *)((char *)v9 + v29);
  uint64_t v31 = &v10[v29];
  uint64_t v32 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v35 = type metadata accessor for WeatherStatisticsModel();
    (*(void (**)(void *, char *, uint64_t))(*(void *)(v35 - 8) + 16))(v30, v31, v35);
    goto LABEL_13;
  }
  if (!EnumCaseMultiPayload)
  {
    uint64_t v34 = *((void *)v31 + 1);
    *uint64_t v30 = *(void *)v31;
    v30[1] = v34;
    swift_bridgeObjectRetain();
LABEL_13:
    swift_storeEnumTagMultiPayload();
    goto LABEL_15;
  }
  memcpy(v30, v31, *(void *)(*(void *)(v32 - 8) + 64));
LABEL_15:
  uint64_t v36 = v12[9];
  uint64_t v37 = (char *)v9 + v36;
  uint64_t v38 = &v10[v36];
  uint64_t v39 = type metadata accessor for WeatherDataOverrides();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v38, 1, v39))
  {
    uint64_t v40 = sub_10017DF08(&qword_100E63740);
    memcpy(v37, v38, *(void *)(*(void *)(v40 - 8) + 64));
  }
  else
  {
    uint64_t v41 = type metadata accessor for Date();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v38, 1, v41))
    {
      uint64_t v42 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
      memcpy(v37, v38, *(void *)(*(void *)(v42 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v41 - 8) + 16))(v37, v38, v41);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v37, 0, 1, v41);
    }
    uint64_t v43 = *(int *)(v39 + 20);
    uint64_t v44 = &v37[v43];
    uint64_t v45 = &v38[v43];
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v45, 1, v41))
    {
      uint64_t v46 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
      memcpy(v44, v45, *(void *)(*(void *)(v46 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v41 - 8) + 16))(v44, v45, v41);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v44, 0, 1, v41);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v37, 0, 1, v39);
  }
  return a1;
}

uint64_t sub_1009D6F0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for WeatherMapOverlayKind();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = a2 + v7;
  uint64_t v10 = *(void *)(a2 + v7 + 8);
  void *v8 = *(void *)(a2 + v7);
  v8[1] = v10;
  uint64_t v11 = (int *)type metadata accessor for WeatherData(0);
  uint64_t v12 = v11[5];
  uint64_t v13 = (char *)v8 + v12;
  uint64_t v14 = (const void *)(v9 + v12);
  uint64_t v15 = type metadata accessor for Locale();
  swift_bridgeObjectRetain();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v14, 1, v15))
  {
    uint64_t v16 = sub_10017DF08(&qword_100E63730);
    memcpy(v13, v14, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, const void *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v13, 0, 1, v15);
  }
  uint64_t v17 = v11[6];
  uint64_t v18 = (char *)v8 + v17;
  uint64_t v19 = v9 + v17;
  uint64_t v20 = type metadata accessor for WeatherDataModel();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
  uint64_t v21 = v11[7];
  uint64_t v22 = (char *)v8 + v21;
  uint64_t v23 = (const void *)(v9 + v21);
  uint64_t v24 = sub_10017DF08(&qword_100E63738);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v23, 1, v24))
  {
    uint64_t v25 = type metadata accessor for WeatherData.CachingState(0);
    memcpy(v22, v23, *(void *)(*(void *)(v25 - 8) + 64));
  }
  else
  {
    uint64_t v26 = type metadata accessor for Date();
    (*(void (**)(char *, const void *, uint64_t))(*(void *)(v26 - 8) + 16))(v22, v23, v26);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v22, 0, 1, v24);
  }
  uint64_t v27 = v11[8];
  uint64_t v28 = (void *)((char *)v8 + v27);
  uint64_t v29 = (void *)(v9 + v27);
  uint64_t v30 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v33 = type metadata accessor for WeatherStatisticsModel();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v33 - 8) + 16))(v28, v29, v33);
    goto LABEL_11;
  }
  if (!EnumCaseMultiPayload)
  {
    uint64_t v32 = v29[1];
    *uint64_t v28 = *v29;
    v28[1] = v32;
    swift_bridgeObjectRetain();
LABEL_11:
    swift_storeEnumTagMultiPayload();
    goto LABEL_13;
  }
  memcpy(v28, v29, *(void *)(*(void *)(v30 - 8) + 64));
LABEL_13:
  uint64_t v34 = v11[9];
  uint64_t v35 = (char *)v8 + v34;
  uint64_t v36 = (char *)(v9 + v34);
  uint64_t v37 = type metadata accessor for WeatherDataOverrides();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v36, 1, v37))
  {
    uint64_t v38 = sub_10017DF08(&qword_100E63740);
    memcpy(v35, v36, *(void *)(*(void *)(v38 - 8) + 64));
  }
  else
  {
    uint64_t v39 = type metadata accessor for Date();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v36, 1, v39))
    {
      uint64_t v40 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
      memcpy(v35, v36, *(void *)(*(void *)(v40 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 16))(v35, v36, v39);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v35, 0, 1, v39);
    }
    uint64_t v41 = *(int *)(v37 + 20);
    uint64_t v42 = &v35[v41];
    uint64_t v43 = &v36[v41];
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v43, 1, v39))
    {
      uint64_t v44 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
      memcpy(v42, v43, *(void *)(*(void *)(v44 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 16))(v42, v43, v39);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v42, 0, 1, v39);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v35, 0, 1, v37);
  }
  return a1;
}

uint64_t sub_1009D73A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for WeatherMapOverlayKind();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = a2 + v7;
  void *v8 = *(void *)(a2 + v7);
  v8[1] = *(void *)(a2 + v7 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = (int *)type metadata accessor for WeatherData(0);
  uint64_t v11 = v10[5];
  uint64_t v12 = (char *)v8 + v11;
  uint64_t v13 = (const void *)(v9 + v11);
  uint64_t v14 = type metadata accessor for Locale();
  int v15 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v12, 1, v14);
  int v16 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v13, 1, v14);
  if (v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, const void *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v12, 0, 1, v14);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v17 = *(void *)(v14 - 8);
  if (v16)
  {
    (*(void (**)(char *, uint64_t))(v17 + 8))(v12, v14);
LABEL_6:
    uint64_t v18 = sub_10017DF08(&qword_100E63730);
    memcpy(v12, v13, *(void *)(*(void *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, const void *, uint64_t))(v17 + 24))(v12, v13, v14);
LABEL_7:
  uint64_t v19 = v10[6];
  uint64_t v20 = (char *)v8 + v19;
  uint64_t v21 = v9 + v19;
  uint64_t v22 = type metadata accessor for WeatherDataModel();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v22 - 8) + 24))(v20, v21, v22);
  uint64_t v23 = v10[7];
  uint64_t v24 = (char *)v8 + v23;
  uint64_t v25 = (const void *)(v9 + v23);
  uint64_t v26 = sub_10017DF08(&qword_100E63738);
  int v27 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v24, 1, v26);
  int v28 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v25, 1, v26);
  if (v27)
  {
    if (!v28)
    {
      uint64_t v29 = type metadata accessor for Date();
      (*(void (**)(char *, const void *, uint64_t))(*(void *)(v29 - 8) + 16))(v24, v25, v29);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v24, 0, 1, v26);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v28)
  {
    sub_10037DA34((uint64_t)v24);
LABEL_12:
    uint64_t v30 = type metadata accessor for WeatherData.CachingState(0);
    memcpy(v24, v25, *(void *)(*(void *)(v30 - 8) + 64));
    goto LABEL_13;
  }
  uint64_t v48 = type metadata accessor for Date();
  (*(void (**)(char *, const void *, uint64_t))(*(void *)(v48 - 8) + 24))(v24, v25, v48);
LABEL_13:
  if (a1 == a2) {
    goto LABEL_20;
  }
  uint64_t v31 = v10[8];
  uint64_t v32 = (void *)((char *)v8 + v31);
  uint64_t v33 = (void *)(v9 + v31);
  sub_1001BC230((uint64_t)v8 + v31, (void (*)(void))type metadata accessor for WeatherData.WeatherStatisticsState);
  uint64_t v34 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v36 = type metadata accessor for WeatherStatisticsModel();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v36 - 8) + 16))(v32, v33, v36);
    goto LABEL_18;
  }
  if (!EnumCaseMultiPayload)
  {
    void *v32 = *v33;
    v32[1] = v33[1];
    swift_bridgeObjectRetain();
LABEL_18:
    swift_storeEnumTagMultiPayload();
    goto LABEL_20;
  }
  memcpy(v32, v33, *(void *)(*(void *)(v34 - 8) + 64));
LABEL_20:
  uint64_t v37 = v10[9];
  uint64_t v38 = (char *)v8 + v37;
  uint64_t v39 = (char *)(v9 + v37);
  uint64_t v40 = type metadata accessor for WeatherDataOverrides();
  int v41 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v38, 1, v40);
  int v42 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v39, 1, v40);
  if (v41)
  {
    if (!v42)
    {
      uint64_t v43 = type metadata accessor for Date();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v39, 1, v43))
      {
        uint64_t v44 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
        memcpy(v38, v39, *(void *)(*(void *)(v44 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 16))(v38, v39, v43);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v38, 0, 1, v43);
      }
      uint64_t v52 = *(int *)(v40 + 20);
      uint64_t v53 = &v38[v52];
      uint64_t v54 = &v39[v52];
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v54, 1, v43))
      {
        uint64_t v55 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
        memcpy(v53, v54, *(void *)(*(void *)(v55 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 16))(v53, v54, v43);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v53, 0, 1, v43);
      }
      uint64_t v56 = (uint64_t)v38;
      uint64_t v57 = v40;
      goto LABEL_38;
    }
    goto LABEL_26;
  }
  if (v42)
  {
    sub_1001BC230((uint64_t)v38, (void (*)(void))type metadata accessor for WeatherDataOverrides);
LABEL_26:
    size_t v45 = *(void *)(*(void *)(sub_10017DF08(&qword_100E63740) - 8) + 64);
    uint64_t v46 = v38;
    unsigned int v47 = v39;
    goto LABEL_27;
  }
  uint64_t v49 = type metadata accessor for Date();
  int v50 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v38, 1, v49);
  int v51 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v39, 1, v49);
  if (!v50)
  {
    uint64_t v59 = *(void *)(v49 - 8);
    if (!v51)
    {
      (*(void (**)(char *, char *, uint64_t))(v59 + 24))(v38, v39, v49);
      goto LABEL_43;
    }
    (*(void (**)(char *, uint64_t))(v59 + 8))(v38, v49);
    goto LABEL_42;
  }
  if (v51)
  {
LABEL_42:
    uint64_t v60 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    memcpy(v38, v39, *(void *)(*(void *)(v60 - 8) + 64));
    goto LABEL_43;
  }
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v49 - 8) + 16))(v38, v39, v49);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v38, 0, 1, v49);
LABEL_43:
  uint64_t v61 = *(int *)(v40 + 20);
  uint64_t v62 = (uint64_t)&v38[v61];
  uint64_t v63 = (uint64_t)&v39[v61];
  int v64 = _s7Weather24LocationCompositionStateOwet_0(v62, 1, v49);
  int v65 = _s7Weather24LocationCompositionStateOwet_0(v63, 1, v49);
  if (v64)
  {
    if (!v65)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v49 - 8) + 16))(v62, v63, v49);
      uint64_t v56 = v62;
      uint64_t v57 = v49;
LABEL_38:
      _s7Weather24LocationCompositionStateOwst_0(v56, 0, 1, v57);
      return a1;
    }
  }
  else
  {
    uint64_t v66 = *(void *)(v49 - 8);
    if (!v65)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v66 + 24))(v62, v63, v49);
      return a1;
    }
    (*(void (**)(uint64_t, uint64_t))(v66 + 8))(v62, v49);
  }
  size_t v45 = *(void *)(*(void *)(sub_10017DF08((uint64_t *)&unk_100E73CA0) - 8) + 64);
  uint64_t v46 = (void *)v62;
  unsigned int v47 = (const void *)v63;
LABEL_27:
  memcpy(v46, v47, v45);
  return a1;
}

uint64_t sub_1009D7BD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for WeatherMapOverlayKind();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  uint64_t v10 = (int *)type metadata accessor for WeatherData(0);
  uint64_t v11 = v10[5];
  uint64_t v12 = (void *)(v8 + v11);
  uint64_t v13 = (const void *)(v9 + v11);
  uint64_t v14 = type metadata accessor for Locale();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v13, 1, v14))
  {
    uint64_t v15 = sub_10017DF08(&qword_100E63730);
    memcpy(v12, v13, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v12, 0, 1, v14);
  }
  uint64_t v16 = v10[6];
  uint64_t v17 = v8 + v16;
  uint64_t v18 = v9 + v16;
  uint64_t v19 = type metadata accessor for WeatherDataModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 32))(v17, v18, v19);
  uint64_t v20 = v10[7];
  uint64_t v21 = (void *)(v8 + v20);
  uint64_t v22 = (const void *)(v9 + v20);
  uint64_t v23 = sub_10017DF08(&qword_100E63738);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v22, 1, v23))
  {
    uint64_t v24 = type metadata accessor for WeatherData.CachingState(0);
    memcpy(v21, v22, *(void *)(*(void *)(v24 - 8) + 64));
  }
  else
  {
    uint64_t v25 = type metadata accessor for Date();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v25 - 8) + 32))(v21, v22, v25);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v21, 0, 1, v23);
  }
  uint64_t v26 = v10[8];
  int v27 = (void *)(v8 + v26);
  int v28 = (const void *)(v9 + v26);
  uint64_t v29 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v30 = type metadata accessor for WeatherStatisticsModel();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v30 - 8) + 32))(v27, v28, v30);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v27, v28, *(void *)(*(void *)(v29 - 8) + 64));
  }
  uint64_t v31 = v10[9];
  uint64_t v32 = (char *)(v8 + v31);
  uint64_t v33 = (char *)(v9 + v31);
  uint64_t v34 = type metadata accessor for WeatherDataOverrides();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v33, 1, v34))
  {
    uint64_t v35 = sub_10017DF08(&qword_100E63740);
    memcpy(v32, v33, *(void *)(*(void *)(v35 - 8) + 64));
  }
  else
  {
    uint64_t v36 = type metadata accessor for Date();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v33, 1, v36))
    {
      uint64_t v37 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
      memcpy(v32, v33, *(void *)(*(void *)(v37 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 32))(v32, v33, v36);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v32, 0, 1, v36);
    }
    uint64_t v38 = *(int *)(v34 + 20);
    uint64_t v39 = &v32[v38];
    uint64_t v40 = &v33[v38];
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v40, 1, v36))
    {
      uint64_t v41 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
      memcpy(v39, v40, *(void *)(*(void *)(v41 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 32))(v39, v40, v36);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v39, 0, 1, v36);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v32, 0, 1, v34);
  }
  return a1;
}

uint64_t sub_1009D8044(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for WeatherMapOverlayKind();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = a2 + v7;
  uint64_t v10 = *(void *)(a2 + v7 + 8);
  void *v8 = *(void *)(a2 + v7);
  v8[1] = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = (int *)type metadata accessor for WeatherData(0);
  uint64_t v12 = v11[5];
  uint64_t v13 = (char *)v8 + v12;
  uint64_t v14 = (const void *)(v9 + v12);
  uint64_t v15 = type metadata accessor for Locale();
  int v16 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v13, 1, v15);
  int v17 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v14, 1, v15);
  if (v16)
  {
    if (!v17)
    {
      (*(void (**)(char *, const void *, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v13, 0, 1, v15);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v18 = *(void *)(v15 - 8);
  if (v17)
  {
    (*(void (**)(char *, uint64_t))(v18 + 8))(v13, v15);
LABEL_6:
    uint64_t v19 = sub_10017DF08(&qword_100E63730);
    memcpy(v13, v14, *(void *)(*(void *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, const void *, uint64_t))(v18 + 40))(v13, v14, v15);
LABEL_7:
  uint64_t v20 = v11[6];
  uint64_t v21 = (char *)v8 + v20;
  uint64_t v22 = v9 + v20;
  uint64_t v23 = type metadata accessor for WeatherDataModel();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v23 - 8) + 40))(v21, v22, v23);
  uint64_t v24 = v11[7];
  uint64_t v25 = (char *)v8 + v24;
  uint64_t v26 = (const void *)(v9 + v24);
  uint64_t v27 = sub_10017DF08(&qword_100E63738);
  int v28 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v25, 1, v27);
  int v29 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v26, 1, v27);
  if (v28)
  {
    if (!v29)
    {
      uint64_t v30 = type metadata accessor for Date();
      (*(void (**)(char *, const void *, uint64_t))(*(void *)(v30 - 8) + 32))(v25, v26, v30);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v25, 0, 1, v27);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v29)
  {
    sub_10037DA34((uint64_t)v25);
LABEL_12:
    uint64_t v31 = type metadata accessor for WeatherData.CachingState(0);
    memcpy(v25, v26, *(void *)(*(void *)(v31 - 8) + 64));
    goto LABEL_13;
  }
  uint64_t v48 = type metadata accessor for Date();
  (*(void (**)(char *, const void *, uint64_t))(*(void *)(v48 - 8) + 40))(v25, v26, v48);
LABEL_13:
  if (a1 != a2)
  {
    uint64_t v32 = v11[8];
    uint64_t v33 = (char *)v8 + v32;
    uint64_t v34 = (const void *)(v9 + v32);
    sub_1001BC230((uint64_t)v8 + v32, (void (*)(void))type metadata accessor for WeatherData.WeatherStatisticsState);
    uint64_t v35 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v36 = type metadata accessor for WeatherStatisticsModel();
      (*(void (**)(char *, const void *, uint64_t))(*(void *)(v36 - 8) + 32))(v33, v34, v36);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v33, v34, *(void *)(*(void *)(v35 - 8) + 64));
    }
  }
  uint64_t v37 = v11[9];
  uint64_t v38 = (char *)v8 + v37;
  uint64_t v39 = (char *)(v9 + v37);
  uint64_t v40 = type metadata accessor for WeatherDataOverrides();
  int v41 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v38, 1, v40);
  int v42 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v39, 1, v40);
  if (v41)
  {
    if (!v42)
    {
      uint64_t v43 = type metadata accessor for Date();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v39, 1, v43))
      {
        uint64_t v44 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
        memcpy(v38, v39, *(void *)(*(void *)(v44 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 32))(v38, v39, v43);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v38, 0, 1, v43);
      }
      uint64_t v52 = *(int *)(v40 + 20);
      uint64_t v53 = &v38[v52];
      uint64_t v54 = &v39[v52];
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v54, 1, v43))
      {
        uint64_t v55 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
        memcpy(v53, v54, *(void *)(*(void *)(v55 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 32))(v53, v54, v43);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v53, 0, 1, v43);
      }
      uint64_t v56 = (uint64_t)v38;
      uint64_t v57 = v40;
      goto LABEL_35;
    }
    goto LABEL_23;
  }
  if (v42)
  {
    sub_1001BC230((uint64_t)v38, (void (*)(void))type metadata accessor for WeatherDataOverrides);
LABEL_23:
    size_t v45 = *(void *)(*(void *)(sub_10017DF08(&qword_100E63740) - 8) + 64);
    uint64_t v46 = v38;
    unsigned int v47 = v39;
    goto LABEL_24;
  }
  uint64_t v49 = type metadata accessor for Date();
  int v50 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v38, 1, v49);
  int v51 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v39, 1, v49);
  if (!v50)
  {
    uint64_t v59 = *(void *)(v49 - 8);
    if (!v51)
    {
      (*(void (**)(char *, char *, uint64_t))(v59 + 40))(v38, v39, v49);
      goto LABEL_40;
    }
    (*(void (**)(char *, uint64_t))(v59 + 8))(v38, v49);
    goto LABEL_39;
  }
  if (v51)
  {
LABEL_39:
    uint64_t v60 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    memcpy(v38, v39, *(void *)(*(void *)(v60 - 8) + 64));
    goto LABEL_40;
  }
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v49 - 8) + 32))(v38, v39, v49);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v38, 0, 1, v49);
LABEL_40:
  uint64_t v61 = *(int *)(v40 + 20);
  uint64_t v62 = (uint64_t)&v38[v61];
  uint64_t v63 = (uint64_t)&v39[v61];
  int v64 = _s7Weather24LocationCompositionStateOwet_0(v62, 1, v49);
  int v65 = _s7Weather24LocationCompositionStateOwet_0(v63, 1, v49);
  if (v64)
  {
    if (!v65)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v49 - 8) + 32))(v62, v63, v49);
      uint64_t v56 = v62;
      uint64_t v57 = v49;
LABEL_35:
      _s7Weather24LocationCompositionStateOwst_0(v56, 0, 1, v57);
      return a1;
    }
  }
  else
  {
    uint64_t v66 = *(void *)(v49 - 8);
    if (!v65)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v66 + 40))(v62, v63, v49);
      return a1;
    }
    (*(void (**)(uint64_t, uint64_t))(v66 + 8))(v62, v49);
  }
  size_t v45 = *(void *)(*(void *)(sub_10017DF08((uint64_t *)&unk_100E73CA0) - 8) + 64);
  uint64_t v46 = (void *)v62;
  unsigned int v47 = (const void *)v63;
LABEL_24:
  memcpy(v46, v47, v45);
  return a1;
}

uint64_t sub_1009D8834(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1009D8848);
}

uint64_t sub_1009D8848(uint64_t a1, uint64_t a2, uint64_t a3)
{
  type metadata accessor for WeatherMapOverlayKind();
  sub_100162F30();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1;
  }
  else
  {
    uint64_t v8 = type metadata accessor for WeatherData(0);
    uint64_t v9 = a1 + *(int *)(a3 + 20);
  }

  return _s7Weather24LocationCompositionStateOwet_0(v9, a2, v8);
}

uint64_t sub_1009D88C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1009D88D8);
}

uint64_t sub_1009D88D8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  type metadata accessor for WeatherMapOverlayKind();
  sub_100162F30();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = a1;
  }
  else
  {
    uint64_t v10 = type metadata accessor for WeatherData(0);
    uint64_t v11 = a1 + *(int *)(a4 + 20);
  }

  return _s7Weather24LocationCompositionStateOwst_0(v11, a2, a2, v10);
}

uint64_t sub_1009D895C(uint64_t a1, uint64_t a2)
{
  if ((static WeatherMapOverlayKind.== infix(_:_:)() & 1) == 0) {
    return 0;
  }
  uint64_t v4 = *(int *)(type metadata accessor for MapComponent() + 20);

  return sub_100A205E8((void *)(a1 + v4), (void *)(a2 + v4));
}

uint64_t sub_1009D89BC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  type metadata accessor for WeatherData(0);
  sub_100162E4C();
  __chkstk_darwin(v4);
  sub_1001626E0();
  uint64_t v7 = v6 - v5;
  uint64_t v24 = type metadata accessor for WeatherMapOverlayKind();
  sub_100179C0C();
  uint64_t v22 = v8;
  __chkstk_darwin(v9);
  sub_1001626E0();
  uint64_t v23 = v11 - v10;
  sub_10017DF08(&qword_100EA7750);
  sub_100179C0C();
  __chkstk_darwin(v12);
  sub_10012B938();
  uint64_t v13 = type metadata accessor for MapComponent();
  sub_100162E4C();
  __chkstk_darwin(v14);
  sub_1001626E0();
  uint64_t v17 = v16 - v15;
  sub_1001B1E64(a1, a1[3]);
  sub_1009D9100();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2) {
    return _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)a1);
  }
  sub_1009D91B0(&qword_100E72CB8, (void (*)(uint64_t))&type metadata accessor for WeatherMapOverlayKind);
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 32))(v17, v23, v24);
  sub_1009D91B0(&qword_100E6F810, (void (*)(uint64_t))type metadata accessor for WeatherData);
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  uint64_t v18 = sub_10019F158();
  v19(v18);
  sub_100408768(v7, v17 + *(int *)(v13 + 20));
  sub_1009D914C(v17, a2);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)a1);
  return sub_1001BC230(v17, (void (*)(void))type metadata accessor for MapComponent);
}

uint64_t sub_1009D8CF4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x4B79616C7265766FLL && a2 == 0xEB00000000646E69;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x4472656874616577 && a2 == 0xEB00000000617461)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v7) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1009D8E14(char a1)
{
  if (a1) {
    return 0x4472656874616577;
  }
  else {
    return 0x4B79616C7265766FLL;
  }
}

uint64_t sub_1009D8E5C(void *a1)
{
  uint64_t v4 = sub_10017DF08(&qword_100EA7760);
  sub_100179C0C();
  uint64_t v6 = v5;
  __chkstk_darwin(v7);
  sub_10012B938();
  sub_1001B1E64(a1, a1[3]);
  sub_1009D9100();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  type metadata accessor for WeatherMapOverlayKind();
  sub_1009D91B0(&qword_100E72CE0, (void (*)(uint64_t))&type metadata accessor for WeatherMapOverlayKind);
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  if (!v1)
  {
    type metadata accessor for MapComponent();
    type metadata accessor for WeatherData(0);
    sub_1009D91B0(&qword_100E6F820, (void (*)(uint64_t))type metadata accessor for WeatherData);
    KeyedEncodingContainer.encode<A>(_:forKey:)();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v2, v4);
}

uint64_t sub_1009D9024()
{
  return sub_1009D8E14(*v0);
}

uint64_t sub_1009D902C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1009D8CF4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1009D9054(uint64_t a1)
{
  unint64_t v2 = sub_1009D9100();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1009D9090(uint64_t a1)
{
  unint64_t v2 = sub_1009D9100();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1009D90CC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1009D89BC(a1, a2);
}

uint64_t sub_1009D90E4(void *a1)
{
  return sub_1009D8E5C(a1);
}

unint64_t sub_1009D9100()
{
  unint64_t result = qword_100EA7758;
  if (!qword_100EA7758)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA7758);
  }
  return result;
}

uint64_t sub_1009D914C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MapComponent();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1009D91B0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for MapComponent.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1009D92C4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MapComponent.CodingKeys()
{
  return &type metadata for MapComponent.CodingKeys;
}

unint64_t sub_1009D9300()
{
  unint64_t result = qword_100EA7768;
  if (!qword_100EA7768)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA7768);
  }
  return result;
}

unint64_t sub_1009D9350()
{
  unint64_t result = qword_100EA7770;
  if (!qword_100EA7770)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA7770);
  }
  return result;
}

unint64_t sub_1009D93A0()
{
  unint64_t result = qword_100EA7778;
  if (!qword_100EA7778)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA7778);
  }
  return result;
}

uint64_t sub_1009D93EC()
{
  sub_10017DF08(&qword_100E646B0);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_100C31880;
  *(void *)(v0 + 32) = static Color.green.getter();
  *(void *)(v0 + 40) = static Color.yellow.getter();
  *(void *)(v0 + 48) = static Color.orange.getter();
  *(void *)(v0 + 56) = static Color.pink.getter();
  *(void *)(v0 + 64) = static Color.purple.getter();
  specialized Array._endMutation()();

  return Gradient.init(colors:)();
}

uint64_t sub_1009D9480()
{
  uint64_t result = sub_1009D93EC();
  qword_100F521F0 = result;
  return result;
}

uint64_t sub_1009D94A0()
{
  if (*(void *)(v0 + 400))
  {
    uint64_t v1 = *(void *)(v0 + 400);
  }
  else
  {
    uint64_t v1 = static Color.black.getter();
    *(void *)(v0 + 400) = v1;
    swift_retain();
  }
  swift_retain();
  return v1;
}

double sub_1009D94E8()
{
  if ((*(unsigned char *)(v0 + 24) & 1) == 0) {
    return *(double *)(v0 + 16);
  }
  *(void *)(v0 + 16) = 0x4034000000000000;
  *(unsigned char *)(v0 + 24) = 0;
  return 20.0;
}

uint64_t sub_1009D950C()
{
  if (*(unsigned char *)(v0 + 576) != 1) {
    return *(void *)(v0 + 568);
  }
  uint64_t result = 2;
  *(void *)(v0 + 568) = 2;
  *(unsigned char *)(v0 + 576) = 0;
  return result;
}

double sub_1009D9534()
{
  if ((*(unsigned char *)(v0 + 152) & 1) == 0) {
    return *(double *)(v0 + 144);
  }
  double result = 40.0 - sub_1009D9624();
  *(double *)(v0 + 144) = result;
  *(unsigned char *)(v0 + 152) = 0;
  return result;
}

double sub_1009D9570()
{
  if ((*(unsigned char *)(v0 + 168) & 1) == 0) {
    return *(double *)(v0 + 160);
  }
  double result = 32.0 - sub_1009D9624();
  *(double *)(v0 + 160) = result;
  *(unsigned char *)(v0 + 168) = 0;
  return result;
}

double sub_1009D95AC()
{
  if ((*(unsigned char *)(v0 + 376) & 1) == 0) {
    return *(double *)(v0 + 368);
  }
  *(void *)(v0 + 368) = 0x4061800000000000;
  *(unsigned char *)(v0 + 376) = 0;
  return 140.0;
}

double sub_1009D95DC()
{
  if ((*(unsigned char *)(v0 + 200) & 1) == 0) {
    return *(double *)(v0 + 192);
  }
  *(void *)(v0 + 192) = 0x4030000000000000;
  *(unsigned char *)(v0 + 200) = 0;
  return sub_100188328();
}

void sub_1009D95FC()
{
  if (*(unsigned char *)(v0 + 121))
  {
    *(void *)(v0 + 112) = 0x4024000000000000;
    *(_WORD *)(v0 + 120) = 0;
  }
  else
  {
    sub_10019F604();
  }
}

double sub_1009D9624()
{
  if ((*(unsigned char *)(v0 + 104) & 1) == 0) {
    return *(double *)(v0 + 96);
  }
  *(void *)(v0 + 96) = 0x4020000000000000;
  *(unsigned char *)(v0 + 104) = 0;
  return 8.0;
}

double sub_1009D9648()
{
  if ((*(unsigned char *)(v0 + 328) & 1) == 0) {
    return *(double *)(v0 + 320);
  }
  *(void *)(v0 + 320) = 0x4024000000000000;
  return sub_100180920((unsigned char *)(v0 + 328));
}

double sub_1009D9668()
{
  if ((*(unsigned char *)(v0 + 248) & 1) == 0) {
    return *(double *)(v0 + 240);
  }
  *(void *)(v0 + 240) = 0x4024000000000000;
  *(unsigned char *)(v0 + 248) = 0;
  return 10.0;
}

double sub_1009D968C()
{
  if ((*(unsigned char *)(v0 + 216) & 1) == 0) {
    return *(double *)(v0 + 208);
  }
  *(void *)(v0 + 208) = 0x4028000000000000;
  *(unsigned char *)(v0 + 216) = 0;
  return 12.0;
}

double sub_1009D96B0()
{
  if ((*(unsigned char *)(v0 + 232) & 1) == 0) {
    return *(double *)(v0 + 224);
  }
  *(void *)(v0 + 224) = 0x4030000000000000;
  *(unsigned char *)(v0 + 232) = 0;
  return sub_100188328();
}

double sub_1009D96D0()
{
  if ((*(unsigned char *)(v0 + 264) & 1) == 0) {
    return *(double *)(v0 + 256);
  }
  *(void *)(v0 + 256) = 0x4030000000000000;
  *(unsigned char *)(v0 + 264) = 0;
  return sub_100188328();
}

double sub_1009D96F4()
{
  if ((*(unsigned char *)(v0 + 56) & 1) == 0) {
    return *(double *)(v0 + 48);
  }
  *(void *)(v0 + 48) = 0x4030000000000000;
  *(unsigned char *)(v0 + 56) = 0;
  return sub_100188328();
}

double sub_1009D9714()
{
  if ((*(unsigned char *)(v0 + 296) & 1) == 0) {
    return *(double *)(v0 + 288);
  }
  *(void *)(v0 + 288) = 0x4028000000000000;
  *(unsigned char *)(v0 + 296) = 0;
  return 12.0;
}

double sub_1009D973C()
{
  if ((*(unsigned char *)(v0 + 312) & 1) == 0) {
    return *(double *)(v0 + 304);
  }
  *(void *)(v0 + 304) = 0x4030000000000000;
  *(unsigned char *)(v0 + 312) = 0;
  return sub_100188328();
}

double sub_1009D9760()
{
  if ((*(unsigned char *)(v0 + 184) & 1) == 0) {
    return *(double *)(v0 + 176);
  }
  *(void *)(v0 + 176) = 0x4040000000000000;
  *(unsigned char *)(v0 + 184) = 0;
  return 32.0;
}

void sub_1009D9784()
{
  if (*(unsigned char *)(v0 + 137))
  {
    *(void *)(v0 + 128) = 0x403C000000000000;
    *(_WORD *)(v0 + 136) = 0;
  }
  else
  {
    sub_10019F604();
  }
}

void sub_1009D97AC()
{
  if (*(unsigned char *)(v0 + 393))
  {
    *(void *)(v0 + 384) = 0;
    *(unsigned char *)(v0 + 392) = 1;
    *(unsigned char *)(v0 + 393) = 0;
  }
  else
  {
    sub_10019F604();
  }
}

double sub_1009D97DC()
{
  if ((*(unsigned char *)(v0 + 40) & 1) == 0) {
    return *(double *)(v0 + 32);
  }
  *(void *)(v0 + 32) = 0x4020000000000000;
  *(unsigned char *)(v0 + 40) = 0;
  return 8.0;
}

double sub_1009D9800()
{
  if ((*(unsigned char *)(v0 + 88) & 1) == 0) {
    return *(double *)(v0 + 80);
  }
  *(void *)(v0 + 80) = 0x4030000000000000;
  *(unsigned char *)(v0 + 88) = 0;
  return sub_100188328();
}

double sub_1009D9820()
{
  if ((*(unsigned char *)(v0 + 280) & 1) == 0) {
    return *(double *)(v0 + 272);
  }
  *(void *)(v0 + 272) = 0x4034000000000000;
  *(unsigned char *)(v0 + 280) = 0;
  return 20.0;
}

double sub_1009D9848()
{
  if ((*(unsigned char *)(v0 + 360) & 1) == 0) {
    return *(double *)(v0 + 352);
  }
  *(void *)(v0 + 352) = 0x406D000000000000;
  *(unsigned char *)(v0 + 360) = 0;
  return 232.0;
}

double sub_1009D9870()
{
  if ((*(unsigned char *)(v0 + 344) & 1) == 0) {
    return *(double *)(v0 + 336);
  }
  *(void *)(v0 + 336) = 0x406DC00000000000;
  *(unsigned char *)(v0 + 344) = 0;
  return 238.0;
}

double sub_1009D98A0()
{
  if ((*(unsigned char *)(v0 + 464) & 1) == 0) {
    return *(double *)(v0 + 456);
  }
  *(void *)(v0 + 456) = 0x4010000000000000;
  return sub_10017D940((unsigned char *)(v0 + 464));
}

double sub_1009D98C0()
{
  if ((*(unsigned char *)(v0 + 480) & 1) == 0) {
    return *(double *)(v0 + 472);
  }
  *(void *)(v0 + 472) = 0x4024000000000000;
  return sub_100180920((unsigned char *)(v0 + 480));
}

double sub_1009D98E0()
{
  if ((*(unsigned char *)(v0 + 496) & 1) == 0) {
    return *(double *)(v0 + 488);
  }
  *(void *)(v0 + 488) = 0x4010000000000000;
  return sub_10017D940((unsigned char *)(v0 + 496));
}

double sub_1009D9900()
{
  if ((*(unsigned char *)(v0 + 512) & 1) == 0) {
    return *(double *)(v0 + 504);
  }
  *(void *)(v0 + 504) = 0x3FF999999999999ALL;
  *(unsigned char *)(v0 + 512) = 0;
  return 1.6;
}

double sub_1009D9934()
{
  if ((*(unsigned char *)(v0 + 544) & 1) == 0) {
    return *(double *)(v0 + 536);
  }
  *(void *)(v0 + 536) = 0x4010000000000000;
  return sub_10017D940((unsigned char *)(v0 + 544));
}

void sub_1009D9954(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_1009D9960(uint64_t a1)
{
  unint64_t v2 = sub_1009DE8AC();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1009D999C(uint64_t a1)
{
  unint64_t v2 = sub_1009DE8AC();

  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_1009D99D8()
{
  sub_10016314C();
  unint64_t v2 = v1;
  unint64_t v4 = v3;
  unsigned int v6 = v5;
  uint64_t v7 = sub_10017DF08(&qword_100EA7CF0);
  sub_100179C0C();
  uint64_t v9 = v8;
  __chkstk_darwin(v10);
  uint64_t v12 = &v15[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1001B1E64(v6, v6[3]);
  sub_1009DE8AC();
  sub_100182680();
  sub_10018A8D4();
  KeyedEncodingContainer.encode(_:forKey:)();
  if (!v0)
  {
    sub_10017DF08(&qword_100EA7A28);
    uint64_t inited = (__n128 *)swift_initStackObject();
    uint64_t v14 = sub_10019B750(inited, (__n128)xmmword_100C251B0);
    v14[3].n128_u64[0] = v4;
    v14[3].n128_u64[1] = v2;
    swift_bridgeObjectRetain();
    Dictionary.init(dictionaryLiteral:)();
    v15[15] = 1;
    sub_10017DF08(&qword_100EA7A30);
    sub_1009DBF50();
    sub_10017EAE4();
    swift_bridgeObjectRelease();
  }
  (*(void (**)(unsigned char *, uint64_t))(v9 + 8))(v12, v7);
  sub_10018B184();
  sub_100163164();
}

uint64_t sub_1009D9B68(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701869940 && a2 == 0xE400000000000000;
  if (v2 || (sub_100163BAC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 1635017060 && a2 == 0xE400000000000000;
    if (v6 || (sub_100163BAC() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x696669746E656469 && a2 == 0xEA00000000007265)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      char v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v8) {
        return 2;
      }
      else {
        return 3;
      }
    }
  }
}

uint64_t sub_1009D9C8C(char a1)
{
  if (!a1) {
    return 1701869940;
  }
  if (a1 == 1) {
    return 1635017060;
  }
  return 0x696669746E656469;
}

void sub_1009D9CD8()
{
}

uint64_t sub_1009D9CF4()
{
  return sub_1009D9C8C(*v0);
}

uint64_t sub_1009D9CFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1009D9B68(a1, a2);
  *a3 = result;
  return result;
}

void sub_1009D9D24(unsigned char *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_1009D9D30(uint64_t a1)
{
  unint64_t v2 = sub_1009DBC18();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1009D9D6C(uint64_t a1)
{
  unint64_t v2 = sub_1009DBC18();

  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_1009D9DA8()
{
  sub_10016314C();
  uint64_t v2 = v0;
  unint64_t v4 = v3;
  type metadata accessor for AutomationCellInfo(0);
  sub_100162E4C();
  __chkstk_darwin(v5);
  sub_100109314();
  uint64_t v25 = v6;
  type metadata accessor for AutomationViewInfo(0);
  sub_100162E4C();
  __chkstk_darwin(v7);
  sub_100109314();
  uint64_t v24 = v8;
  type metadata accessor for AutomationInfo(0);
  sub_100162E4C();
  __chkstk_darwin(v9);
  sub_1001626E0();
  uint64_t v12 = v11 - v10;
  sub_10017DF08(&qword_100EA79C8);
  sub_100179C0C();
  __chkstk_darwin(v13);
  sub_1001B1E64(v4, v4[3]);
  sub_1009DBC18();
  sub_100182680();
  sub_1009DBDF8(v2, v12, (void (*)(void))type metadata accessor for AutomationInfo);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    sub_1009DBCB0(v12, v24, (void (*)(void))type metadata accessor for AutomationViewInfo);
    sub_100182220();
    if (!v1)
    {
      sub_1009DBD64(&qword_100EA79E8, (void (*)(uint64_t))type metadata accessor for AutomationViewInfo);
      sub_10017EAE4();
      sub_10019F60C();
    }
    uint64_t v15 = type metadata accessor for AutomationViewInfo;
    uint64_t v16 = v24;
    goto LABEL_11;
  }
  if (EnumCaseMultiPayload == 1)
  {
    sub_1009DBCB0(v12, v25, (void (*)(void))type metadata accessor for AutomationCellInfo);
    sub_100182220();
    if (!v1)
    {
      sub_1009DBD64(&qword_100EA79E0, (void (*)(uint64_t))type metadata accessor for AutomationCellInfo);
      sub_10017EAE4();
      sub_10019F60C();
    }
    uint64_t v15 = type metadata accessor for AutomationCellInfo;
    uint64_t v16 = v25;
LABEL_11:
    sub_1009DBD10(v16, (void (*)(void))v15);
    goto LABEL_12;
  }
  uint64_t v19 = *(void *)v12;
  uint64_t v20 = *(void *)(v12 + 8);
  unsigned __int8 v21 = *(unsigned char *)(v12 + 16);
  sub_100182220();
  if (v1)
  {
    sub_100162F0C();
    v23(v22);
    sub_10014D144(v19, v20, v21);
    goto LABEL_16;
  }
  sub_1001D20B4();
  sub_1009DBC64();
  sub_10017EAE4();
  sub_10014D144(v19, v20, v21);
  sub_10019F60C();
LABEL_12:
  sub_100162F0C();
  v18(v17);
LABEL_16:
  sub_10018B184();
  sub_100163164();
}

void sub_1009DA1A0()
{
}

uint64_t sub_1009DA1B8(uint64_t a1)
{
  unint64_t v2 = sub_1009DBDAC();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1009DA1F4(uint64_t a1)
{
  unint64_t v2 = sub_1009DBDAC();

  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_1009DA230()
{
  sub_10016314C();
  uint64_t v3 = v0;
  uint64_t v5 = v4;
  uint64_t v25 = type metadata accessor for WeatherMapOverlayKind();
  sub_100179C0C();
  uint64_t v27 = v6;
  __chkstk_darwin(v7);
  sub_100109314();
  uint64_t v26 = v8;
  type metadata accessor for AutomationViewInfo(0);
  sub_100162E4C();
  __chkstk_darwin(v9);
  sub_100162F18();
  uint64_t v10 = sub_10017DF08(&qword_100EA79F0);
  sub_100179C0C();
  uint64_t v28 = v11;
  __chkstk_darwin(v12);
  sub_1001626E0();
  uint64_t v13 = sub_1001B1E64(v5, v5[3]);
  sub_1009DBDAC();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  sub_1009DBDF8(v3, (uint64_t)v2, (void (*)(void))type metadata accessor for AutomationViewInfo);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_10017F678();
      sub_1001A01A0();
      if (!v1)
      {
        sub_1001D20B4();
        sub_1009DBF04();
        sub_100162C78();
        KeyedEncodingContainer.encode<A>(_:forKey:)();
      }
      goto LABEL_11;
    case 2u:
      (*(void (**)(uint64_t, unint64_t *, uint64_t))(v27 + 32))(v26, v2, v25);
      sub_1001A49A4();
      sub_1001A01A0();
      if (!v1)
      {
        sub_10017DF08(&qword_100EA7A00);
        uint64_t v21 = *(void *)(sub_10017DF08(&qword_100EA7A08) - 8);
        unint64_t v22 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
        uint64_t v23 = swift_allocObject();
        *(_OWORD *)(v23 + 16) = xmmword_100C251B0;
        uint64_t v24 = sub_10019DB04((void *)(v23 + v22));
        (*(void (**)(char *, uint64_t, uint64_t))(v27 + 16))(v24, v26, v25);
        Dictionary.init(dictionaryLiteral:)();
        sub_1001D20B4();
        sub_10017DF08(&qword_100EA7A10);
        sub_1009DBE58();
        sub_100162C78();
        KeyedEncodingContainer.encode<A>(_:forKey:)();
        swift_bridgeObjectRelease();
      }
      (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v26, v25);
      goto LABEL_16;
    case 3u:
      sub_1001A49A4();
      sub_1001A01A0();
      sub_1001873C0();
      goto LABEL_11;
    case 4u:
    case 6u:
    case 7u:
    case 8u:
    case 9u:
      sub_1001A49A4();
      goto LABEL_14;
    case 5u:
      sub_10017F678();
      goto LABEL_14;
    case 0xAu:
LABEL_14:
      sub_1001A01A0();
      uint64_t v19 = sub_1001873C0();
      v20(v19, v10);
      break;
    default:
      unint64_t v14 = *v2;
      unint64_t v15 = v2[1];
      sub_1001A49A4();
      sub_10018A8D4();
      sub_1001A01A0();
      if (v1)
      {
LABEL_11:
        sub_100162F0C();
        v18();
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_10017DF08(&qword_100EA7A28);
        uint64_t inited = (__n128 *)swift_initStackObject();
        uint64_t v17 = sub_10019B750(inited, (__n128)xmmword_100C251B0);
        v17[3].n128_u64[0] = v14;
        v17[3].n128_u64[1] = v15;
        Dictionary.init(dictionaryLiteral:)();
        sub_1001D20B4();
        sub_10017DF08(&qword_100EA7A30);
        sub_1009DBF50();
        sub_100162C78();
        KeyedEncodingContainer.encode<A>(_:forKey:)();
        swift_bridgeObjectRelease();
LABEL_16:
        (*(void (**)(void *, uint64_t))(v28 + 8))(v13, v10);
      }
      break;
  }
  sub_10018B184();
  sub_100163164();
}

unint64_t sub_1009DA798(Swift::String string)
{
  uint64_t object = string._object;
  v2._uint64_t countAndFlagsBits = string._countAndFlagsBits;
  v2._uint64_t object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_100E088E0, v2);
  swift_bridgeObjectRelease();
  if (v3 >= 3) {
    return 3;
  }
  else {
    return v3;
  }
}

uint64_t sub_1009DA7E4(char a1)
{
  if (!a1) {
    return sub_10016362C();
  }
  if (a1 == 1) {
    return 0x697472417377656ELL;
  }
  return 0xD000000000000016;
}

void sub_1009DA844()
{
}

uint64_t sub_1009DA85C(uint64_t a1)
{
  unint64_t v2 = sub_1009DBFBC();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1009DA898(uint64_t a1)
{
  unint64_t v2 = sub_1009DBFBC();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1009DA8D4()
{
  return sub_10088A118();
}

Swift::Int sub_1009DA8E0()
{
  return sub_1006528D0();
}

uint64_t sub_1009DA8E8(uint64_t a1)
{
  return sub_1002C2414(a1, *v1);
}

Swift::Int sub_1009DA8F0()
{
  return sub_1002C4814();
}

unint64_t sub_1009DA8F8@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_1009DA798(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_1009DA928@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1009DA7E4(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1009DA954()
{
  return RawRepresentable<>.encode(to:)();
}

void sub_1009DA9A4()
{
  sub_10016314C();
  char v1 = v0;
  uint64_t v3 = v2;
  uint64_t v14 = v4;
  uint64_t v6 = v5;
  sub_10017DF08(&qword_100EA7A40);
  sub_100179C0C();
  __chkstk_darwin(v7);
  sub_1001B1E64(v6, v6[3]);
  sub_1009DBFBC();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  if (!v1)
  {
    KeyedEncodingContainer.encode(_:forKey:)();
LABEL_8:
    uint64_t v12 = sub_10017F1C0();
    v13(v12);
    goto LABEL_9;
  }
  if (v1 != 1)
  {
    sub_1009DC008();
    sub_100188C58();
    sub_10017EAE4();
    goto LABEL_8;
  }
  unint64_t v8 = sub_1009DC008();
  swift_bridgeObjectRetain();
  sub_100188C58();
  sub_10017EAE4();
  if (!v8)
  {
    sub_10017DF08(&qword_100EA7A28);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_100C251B0;
    *(void *)(inited + 32) = 0x656C746974;
    *(void *)(inited + 40) = 0xE500000000000000;
    *(void *)(inited + 48) = v14;
    *(void *)(inited + 56) = v3;
    Dictionary.init(dictionaryLiteral:)();
    sub_1001D20B4();
    sub_10017DF08(&qword_100EA7A30);
    sub_1009DBF50();
    sub_100188C58();
    sub_10017EAE4();
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  uint64_t v9 = sub_10017F1C0();
  v10(v9);
  sub_10014D144(v14, v3, 1u);
LABEL_9:
  sub_10018B184();
  sub_100163164();
}

uint64_t sub_1009DABE0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701869940 && a2 == 0xE400000000000000;
  if (v2 || (sub_100163BAC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1635017060 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v7 = sub_100163BAC();
    swift_bridgeObjectRelease();
    if (v7) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1009DAC98(char a1)
{
  if (a1) {
    return 1635017060;
  }
  else {
    return 1701869940;
  }
}

uint64_t sub_1009DACB8()
{
  unint64_t v0 = _findStringSwitchCaseWithCache(cases:string:cache:)();
  swift_bridgeObjectRelease();
  if (v0 >= 0x19) {
    return 25;
  }
  else {
    return v0;
  }
}

uint64_t sub_1009DAD0C(char a1)
{
  uint64_t result = 0x6E6F697461636F6CLL;
  switch(a1)
  {
    case 1:
      uint64_t result = 1684957559;
      break;
    case 2:
      uint64_t result = 0x726F46796C696164;
      break;
    case 3:
      uint64_t result = 0x6F46796C72756F68;
      break;
    case 4:
      uint64_t result = 0x79746964696D7568;
      break;
    case 5:
      uint64_t result = 0x6572757373657270;
      break;
    case 6:
      uint64_t result = 0x7865646E497675;
      break;
    case 7:
      uint64_t v3 = 0x696269736976;
      goto LABEL_11;
    case 8:
      uint64_t result = 0x6557657265766573;
      break;
    case 9:
      uint64_t v3 = 0x617551726961;
LABEL_11:
      uint64_t result = v3 & 0xFFFFFFFFFFFFLL | 0x696C000000000000;
      break;
    case 10:
      uint64_t result = 0x6B694C736C656566;
      break;
    case 11:
      uint64_t result = sub_10017ECB0();
      break;
    case 12:
      uint64_t result = 0xD000000000000012;
      break;
    case 13:
      uint64_t result = 0xD000000000000015;
      break;
    case 14:
      uint64_t result = sub_10018A0D8();
      break;
    case 15:
      uint64_t result = 0x6F697469646E6F63;
      break;
    case 16:
      uint64_t result = 0x74617265706D6574;
      break;
    case 17:
    case 24:
      uint64_t result = 0xD000000000000016;
      break;
    case 18:
      uint64_t result = 0x6E6F43726568746FLL;
      break;
    case 19:
      uint64_t result = 0x7470697263736564;
      break;
    case 20:
      uint64_t result = 0x656C6369747261;
      break;
    case 21:
      uint64_t result = 0x68436C6961746564;
      break;
    case 22:
      uint64_t result = 0xD000000000000011;
      break;
    case 23:
      uint64_t result = 0xD000000000000014;
      break;
    default:
      return result;
  }
  return result;
}

void sub_1009DB004()
{
}

uint64_t sub_1009DB024()
{
  return sub_1009DAC98(*v0);
}

uint64_t sub_1009DB044@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1009DABE0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1009DB06C(uint64_t a1)
{
  unint64_t v2 = sub_1009DC054();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1009DB0A8(uint64_t a1)
{
  unint64_t v2 = sub_1009DC054();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1009DB0E4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_10088A838(*a1, *a2);
}

Swift::Int sub_1009DB0F0()
{
  return sub_100652824(*v0);
}

uint64_t sub_1009DB0F8(uint64_t a1)
{
  return sub_1002C2830(a1, *v1);
}

Swift::Int sub_1009DB100(uint64_t a1)
{
  return sub_1002C469C(a1, *v1);
}

uint64_t sub_1009DB108@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1009DACB8();
  *a1 = result;
  return result;
}

uint64_t sub_1009DB138@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1009DAD0C(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1009DB164()
{
  return RawRepresentable<>.encode(to:)();
}

void sub_1009DB1B4()
{
  sub_10016314C();
  uint64_t v3 = v0;
  uint64_t v5 = v4;
  type metadata accessor for WeatherMapOverlayKind();
  sub_100179C0C();
  uint64_t v60 = v6;
  uint64_t v61 = v7;
  __chkstk_darwin(v6);
  sub_100109314();
  uint64_t v9 = v8;
  type metadata accessor for AutomationCellInfo(0);
  sub_100162E4C();
  __chkstk_darwin(v10);
  sub_100162F18();
  uint64_t v65 = sub_10017DF08(&qword_100EA7A58);
  sub_100179C0C();
  uint64_t v63 = v11;
  __chkstk_darwin(v12);
  sub_1001626E0();
  uint64_t v15 = v14 - v13;
  uint64_t v16 = sub_1001B1E64(v5, v5[3]);
  sub_1009DC054();
  uint64_t v64 = v15;
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  sub_1009DBDF8(v3, (uint64_t)v2, (void (*)(void))type metadata accessor for AutomationCellInfo);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v18 = *v2;
      uint64_t v17 = v2[1];
      sub_1001A1148(8);
      sub_10017D94C();
      if (v1) {
        goto LABEL_31;
      }
      if (!v17) {
        goto LABEL_61;
      }
      goto LABEL_12;
    case 2u:
      uint64_t v18 = *v2;
      uint64_t v17 = v2[1];
      sub_1001A1148(12);
      sub_10017D94C();
      if (v1) {
        goto LABEL_31;
      }
      if (v17) {
        goto LABEL_12;
      }
      goto LABEL_61;
    case 3u:
      uint64_t v18 = *v2;
      uint64_t v17 = v2[1];
      sub_1001A1148(13);
      sub_10017D94C();
      if (v1) {
        goto LABEL_31;
      }
      if (!v17) {
        goto LABEL_61;
      }
LABEL_12:
      sub_10017DF08(&qword_100EA7A28);
      *(_OWORD *)(swift_initStackObject() + 16) = xmmword_100C251B0;
      sub_10018C600();
      goto LABEL_60;
    case 4u:
      uint64_t v18 = *v2;
      uint64_t v17 = v2[1];
      sub_1001A1148(3);
      sub_10017D94C();
      if (!v1) {
        goto LABEL_16;
      }
      goto LABEL_31;
    case 5u:
      uint64_t v18 = *v2;
      uint64_t v17 = v2[1];
      sub_1001A1148(2);
      sub_10017D94C();
      if (!v1) {
        goto LABEL_16;
      }
      goto LABEL_31;
    case 6u:
      (*(void (**)(uint64_t, uint64_t *, uint64_t))(v61 + 32))(v9, v2, v60);
      sub_1001A1148(14);
      sub_100184D88();
      if (v1)
      {
        (*(void (**)(uint64_t, uint64_t))(v61 + 8))(v9, v60);
        goto LABEL_57;
      }
      sub_10017DF08(&qword_100EA7A00);
      uint64_t v42 = *(void *)(sub_10017DF08(&qword_100EA7A08) - 8);
      unint64_t v43 = (*(unsigned __int8 *)(v42 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v42 + 80);
      uint64_t v44 = swift_allocObject();
      *(_OWORD *)(v44 + 16) = xmmword_100C251B0;
      size_t v45 = sub_10019DB04((void *)(v44 + v43));
      (*(void (**)(char *, uint64_t, uint64_t))(v61 + 16))(v45, v9, v60);
      uint64_t v46 = Dictionary.init(dictionaryLiteral:)();
      sub_10017ACC8(v46);
      sub_10017DF08(&qword_100EA7A10);
      sub_1009DBE58();
      sub_100186D4C();
      swift_bridgeObjectRelease();
      sub_100162F0C();
      v47();
      goto LABEL_61;
    case 7u:
      uint64_t v22 = v2[1];
      if (v22)
      {
        BOOL v23 = *v2 == 11565 && v22 == 0xE200000000000000;
        if (v23 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          char v24 = 17;
LABEL_47:
          sub_1001A1148(v24);
          KeyedEncodingContainer.encode<A>(_:forKey:)();
          uint64_t v37 = *(void (**)(uint64_t, uint64_t))(v63 + 8);
          uint64_t v38 = v64;
          uint64_t v39 = v65;
          goto LABEL_48;
        }
      }
      sub_1001A1148(16);
      sub_100184D88();
      if (!v1)
      {
        if (!v22) {
          goto LABEL_57;
        }
        KeyedEncodingContainer.encode(_:forKey:)();
      }
      uint64_t v40 = sub_1001845DC();
      v41(v40);
      goto LABEL_32;
    case 8u:
      uint64_t v25 = v2[1];
      uint64_t v62 = *v2;
      uint64_t v27 = v2[2];
      uint64_t v26 = v2[3];
      uint64_t v29 = v2[4];
      uint64_t v28 = v2[5];
      sub_1001A1148(20);
      sub_1001895C0();
      if (v1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_64;
      }
      if (!v25)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        (*(void (**)(uint64_t, uint64_t))(v63 + 8))(v64, v65);
        break;
      }
      sub_10017DF08(&qword_100EA7A70);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_100C33BA0;
      *(void *)(inited + 32) = 0x696669746E656469;
      *(void *)(inited + 40) = 0xEA00000000007265;
      *(void *)(inited + 48) = v62;
      *(void *)(inited + 56) = v25;
      sub_10018C600();
      v49[8] = v50;
      v49[9] = v51;
      v49[10] = v27;
      v49[11] = v26;
      v49[12] = 0x4E6C656E6E616863;
      v49[13] = 0xEB00000000656D61;
      v49[14] = v29;
      v49[15] = v28;
      sub_10017DF08(&qword_100E65F18);
      uint64_t v52 = Dictionary.init(dictionaryLiteral:)();
      sub_10017ACC8(v52);
      sub_10017DF08(&qword_100EA7A78);
      sub_1009DC0EC();
      KeyedEncodingContainer.encode<A>(_:forKey:)();
      swift_bridgeObjectRelease();
LABEL_57:
      uint64_t v38 = sub_1001845DC();
      goto LABEL_48;
    case 9u:
      unint64_t v31 = v2[2];
      unint64_t v30 = v2[3];
      sub_1001A1148(22);
      sub_1001895C0();
      if (v1) {
        goto LABEL_29;
      }
      sub_10017DF08(&qword_100EA7A70);
      uint64_t v53 = (__n128 *)swift_initStackObject();
      uint64_t v54 = sub_100185E8C(v53, (__n128)xmmword_100C25ED0);
      v54[4].n128_u64[0] = 0x656C746974627573;
      v54[4].n128_u64[1] = 0xE800000000000000;
      v54[5].n128_u64[0] = v31;
      v54[5].n128_u64[1] = v30;
      sub_10017DF08(&qword_100E65F18);
      uint64_t v55 = Dictionary.init(dictionaryLiteral:)();
      sub_10017ACC8(v55);
      sub_10017DF08(&qword_100EA7A78);
      sub_1009DC0EC();
      goto LABEL_63;
    case 0xAu:
      uint64_t v18 = *v2;
      uint64_t v17 = v2[1];
      sub_1001A1148(23);
      sub_10017D94C();
      if (v1) {
        goto LABEL_31;
      }
      sub_10017DF08(&qword_100EA7A28);
      uint64_t v19 = swift_initStackObject();
      *(_OWORD *)(v19 + 16) = xmmword_100C251B0;
      uint64_t v20 = 0x64657463656C6573;
      unint64_t v21 = 0xEC00000065746144;
      goto LABEL_60;
    case 0xBu:
      unint64_t v36 = v2[2];
      unint64_t v35 = v2[3];
      sub_1001A1148(24);
      sub_1001895C0();
      if (v1)
      {
LABEL_29:
        sub_100162F0C();
        v32();
        swift_bridgeObjectRelease();
        goto LABEL_32;
      }
      sub_10017DF08(&qword_100EA7A28);
      uint64_t v57 = (__n128 *)swift_initStackObject();
      uint64_t v58 = sub_100185E8C(v57, (__n128)xmmword_100C25ED0);
      v58[4].n128_u64[0] = 1954047348;
      v58[4].n128_u64[1] = 0xE400000000000000;
      v58[5].n128_u64[0] = v36;
      v58[5].n128_u64[1] = v35;
      uint64_t v59 = Dictionary.init(dictionaryLiteral:)();
      sub_10017ACC8(v59);
      sub_10017DF08(&qword_100EA7A30);
      sub_1009DBF50();
LABEL_63:
      KeyedEncodingContainer.encode<A>(_:forKey:)();
LABEL_64:
      swift_bridgeObjectRelease();
      (*(void (**)(void *, uint64_t *))(v63 + 8))(v16, v2);
      break;
    case 0xCu:
      char v24 = 1;
      goto LABEL_47;
    case 0xDu:
      char v24 = 4;
      goto LABEL_47;
    case 0xEu:
      char v24 = 5;
      goto LABEL_47;
    case 0xFu:
      char v24 = 6;
      goto LABEL_47;
    case 0x10u:
      char v24 = 7;
      goto LABEL_47;
    case 0x11u:
      char v24 = 9;
      goto LABEL_47;
    case 0x12u:
      char v24 = 10;
      goto LABEL_47;
    case 0x13u:
      char v24 = 11;
      goto LABEL_47;
    case 0x14u:
      char v24 = 15;
      goto LABEL_47;
    case 0x15u:
      char v24 = 18;
      goto LABEL_47;
    case 0x16u:
      char v24 = 19;
      goto LABEL_47;
    case 0x17u:
      char v24 = 21;
      goto LABEL_47;
    default:
      uint64_t v18 = *v2;
      uint64_t v17 = v2[1];
      sub_1009DC0A0();
      sub_10017D94C();
      if (v1)
      {
LABEL_31:
        uint64_t v33 = sub_1001D0FB8();
        v34(v33);
LABEL_32:
        swift_bridgeObjectRelease();
      }
      else
      {
LABEL_16:
        sub_10017DF08(&qword_100EA7A28);
        uint64_t v19 = swift_initStackObject();
        *(_OWORD *)(v19 + 16) = xmmword_100C251B0;
        uint64_t v20 = 1701667182;
        unint64_t v21 = 0xE400000000000000;
LABEL_60:
        *(void *)(v19 + 32) = v20;
        *(void *)(v19 + 40) = v21;
        *(void *)(v19 + 48) = v18;
        *(void *)(v19 + 56) = v17;
        uint64_t v56 = Dictionary.init(dictionaryLiteral:)();
        sub_10017ACC8(v56);
        sub_10017DF08(&qword_100EA7A30);
        sub_1009DBF50();
        sub_100186D4C();
        swift_bridgeObjectRelease();
LABEL_61:
        uint64_t v38 = sub_1001D0FB8();
LABEL_48:
        v37(v38, v39);
      }
      break;
  }
  sub_100163164();
}

void sub_1009DBC00()
{
}

unint64_t sub_1009DBC18()
{
  unint64_t result = qword_100EA79D0;
  if (!qword_100EA79D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA79D0);
  }
  return result;
}

unint64_t sub_1009DBC64()
{
  unint64_t result = qword_100EA79D8;
  if (!qword_100EA79D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA79D8);
  }
  return result;
}

uint64_t sub_1009DBCB0(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(a2, a1);
  return a2;
}

uint64_t sub_1009DBD10(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  sub_100162F0C();
  v3();
  return a1;
}

uint64_t sub_1009DBD64(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1009DBDAC()
{
  unint64_t result = qword_100EA79F8;
  if (!qword_100EA79F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA79F8);
  }
  return result;
}

uint64_t sub_1009DBDF8(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(a2, a1);
  return a2;
}

unint64_t sub_1009DBE58()
{
  unint64_t result = qword_100EA7A18;
  if (!qword_100EA7A18)
  {
    sub_10018C6DC(&qword_100EA7A10);
    sub_1009DBD64(&qword_100E72CE0, (void (*)(uint64_t))&type metadata accessor for WeatherMapOverlayKind);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA7A18);
  }
  return result;
}

unint64_t sub_1009DBF04()
{
  unint64_t result = qword_100EA7A20;
  if (!qword_100EA7A20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA7A20);
  }
  return result;
}

unint64_t sub_1009DBF50()
{
  unint64_t result = qword_100EA7A38;
  if (!qword_100EA7A38)
  {
    sub_10018C6DC(&qword_100EA7A30);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA7A38);
  }
  return result;
}

unint64_t sub_1009DBFBC()
{
  unint64_t result = qword_100EA7A48;
  if (!qword_100EA7A48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA7A48);
  }
  return result;
}

unint64_t sub_1009DC008()
{
  unint64_t result = qword_100EA7A50;
  if (!qword_100EA7A50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA7A50);
  }
  return result;
}

unint64_t sub_1009DC054()
{
  unint64_t result = qword_100EA7A60;
  if (!qword_100EA7A60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA7A60);
  }
  return result;
}

unint64_t sub_1009DC0A0()
{
  unint64_t result = qword_100EA7A68;
  if (!qword_100EA7A68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA7A68);
  }
  return result;
}

unint64_t sub_1009DC0EC()
{
  unint64_t result = qword_100EA7A80;
  if (!qword_100EA7A80)
  {
    sub_10018C6DC(&qword_100EA7A78);
    sub_1009DC168();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA7A80);
  }
  return result;
}

unint64_t sub_1009DC168()
{
  unint64_t result = qword_100E99318;
  if (!qword_100E99318)
  {
    sub_10018C6DC(&qword_100E65F18);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E99318);
  }
  return result;
}

uint64_t sub_1009DC1D4(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xE8)
  {
    if (a2 + 24 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 24) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 25;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x19;
  int v5 = v6 - 25;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *sub_1009DC25C(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 24 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 24) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xE8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xE7)
  {
    unsigned int v6 = ((a2 - 232) >> 8) + 1;
    *unint64_t result = a2 + 24;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1009DC328);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 24;
        break;
    }
  }
  return result;
}

void type metadata accessor for AutomationCellInfo.AutomationInfoKind()
{
}

void type metadata accessor for AutomationCellInfo.Key()
{
}

void type metadata accessor for AutomationComponentInfo.AutomationInfoKind()
{
}

void type metadata accessor for AutomationComponentInfo.Key()
{
}

void type metadata accessor for AutomationViewInfo.Key()
{
}

unsigned char *sub_1009DC394(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1009DC460);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

void type metadata accessor for AutomationInfo.Key()
{
}

uint64_t *sub_1009DC494(uint64_t *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v10 = *a2;
      uint64_t v11 = a2[1];
      unsigned __int8 v12 = *((unsigned char *)a2 + 16);
      sub_10018F6EC(v10, v11, v12);
      *a1 = v10;
      a1[1] = v11;
      *((unsigned char *)a1 + 16) = v12;
    }
    else if (EnumCaseMultiPayload == 1)
    {
      uint64_t v7 = type metadata accessor for AutomationCellInfo(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
        case 1u:
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 7u:
        case 0xAu:
          uint64_t v8 = a2[1];
          *a1 = *a2;
          a1[1] = v8;
          swift_bridgeObjectRetain();
          goto LABEL_17;
        case 6u:
          uint64_t v16 = type metadata accessor for WeatherMapOverlayKind();
          (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v16 - 8) + 16))(a1, a2, v16);
          goto LABEL_17;
        case 8u:
          uint64_t v17 = a2[1];
          *a1 = *a2;
          a1[1] = v17;
          uint64_t v18 = a2[3];
          a1[2] = a2[2];
          a1[3] = v18;
          uint64_t v19 = a2[4];
          uint64_t v20 = a2[5];
          a1[4] = v19;
          a1[5] = v20;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_17;
        case 9u:
        case 0xBu:
          uint64_t v21 = a2[1];
          *a1 = *a2;
          a1[1] = v21;
          uint64_t v22 = a2[2];
          uint64_t v23 = a2[3];
          a1[2] = v22;
          a1[3] = v23;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
LABEL_17:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
          break;
      }
    }
    else
    {
      uint64_t v13 = type metadata accessor for AutomationViewInfo(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
        case 1u:
        case 3u:
          uint64_t v15 = a2[1];
          *a1 = *a2;
          a1[1] = v15;
          swift_bridgeObjectRetain();
          goto LABEL_12;
        case 2u:
          uint64_t v14 = type metadata accessor for WeatherMapOverlayKind();
          (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v14 - 8) + 16))(a1, a2, v14);
LABEL_12:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(a1, a2, *(void *)(*(void *)(v13 - 8) + 64));
          break;
      }
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t *sub_1009DC97C(uint64_t *a1, uint64_t *a2)
{
  if (a1 != a2)
  {
    sub_1009DBD10((uint64_t)a1, (void (*)(void))type metadata accessor for AutomationInfo);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v6 = *a2;
      uint64_t v7 = a2[1];
      unsigned __int8 v8 = *((unsigned char *)a2 + 16);
      sub_10018F6EC(v6, v7, v8);
      *a1 = v6;
      a1[1] = v7;
      *((unsigned char *)a1 + 16) = v8;
    }
    else
    {
      if (EnumCaseMultiPayload == 1)
      {
        uint64_t v5 = type metadata accessor for AutomationCellInfo(0);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
          case 1u:
          case 3u:
          case 4u:
          case 5u:
          case 7u:
          case 0xAu:
            goto LABEL_8;
          case 2u:
            *a1 = *a2;
            a1[1] = a2[1];
            swift_bridgeObjectRetain();
            goto LABEL_15;
          case 6u:
            uint64_t v10 = type metadata accessor for WeatherMapOverlayKind();
            (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v10 - 8) + 16))(a1, a2, v10);
            goto LABEL_15;
          case 8u:
            *a1 = *a2;
            a1[1] = a2[1];
            a1[2] = a2[2];
            a1[3] = a2[3];
            a1[4] = a2[4];
            a1[5] = a2[5];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            goto LABEL_15;
          case 9u:
          case 0xBu:
            *a1 = *a2;
            a1[1] = a2[1];
            a1[2] = a2[2];
            a1[3] = a2[3];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            goto LABEL_15;
          default:
            goto LABEL_9;
        }
      }
      uint64_t v5 = type metadata accessor for AutomationViewInfo(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
        case 1u:
        case 3u:
LABEL_8:
          *a1 = *a2;
          a1[1] = a2[1];
          swift_bridgeObjectRetain();
          goto LABEL_15;
        case 2u:
          uint64_t v9 = type metadata accessor for WeatherMapOverlayKind();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
LABEL_15:
          swift_storeEnumTagMultiPayload();
          break;
        default:
LABEL_9:
          memcpy(a1, a2, *(void *)(*(void *)(v5 - 8) + 64));
          break;
      }
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_1009DCD94(void *a1, const void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v7 = type metadata accessor for AutomationCellInfo(0);
    if (swift_getEnumCaseMultiPayload() == 6)
    {
LABEL_6:
      uint64_t v8 = type metadata accessor for WeatherMapOverlayKind();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
      swift_storeEnumTagMultiPayload();
LABEL_9:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
LABEL_8:
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
    goto LABEL_9;
  }
  if (!EnumCaseMultiPayload)
  {
    uint64_t v7 = type metadata accessor for AutomationViewInfo(0);
    if (swift_getEnumCaseMultiPayload() == 2) {
      goto LABEL_6;
    }
    goto LABEL_8;
  }
  memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

void *sub_1009DCF44(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1009DBD10((uint64_t)a1, (void (*)(void))type metadata accessor for AutomationInfo);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v7 = type metadata accessor for AutomationCellInfo(0);
      if (swift_getEnumCaseMultiPayload() == 6)
      {
LABEL_7:
        uint64_t v8 = type metadata accessor for WeatherMapOverlayKind();
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
        swift_storeEnumTagMultiPayload();
LABEL_10:
        swift_storeEnumTagMultiPayload();
        return a1;
      }
LABEL_9:
      memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
      goto LABEL_10;
    }
    if (!EnumCaseMultiPayload)
    {
      uint64_t v7 = type metadata accessor for AutomationViewInfo(0);
      if (swift_getEnumCaseMultiPayload() == 2) {
        goto LABEL_7;
      }
      goto LABEL_9;
    }
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

uint64_t *sub_1009DD118(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v7 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v7 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 3u:
        uint64_t v9 = a2[1];
        *a1 = *a2;
        a1[1] = v9;
        swift_bridgeObjectRetain();
        goto LABEL_7;
      case 2u:
        uint64_t v8 = type metadata accessor for WeatherMapOverlayKind();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
LABEL_7:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(v6 + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_1009DD29C(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
    case 1:
    case 3:
      uint64_t result = swift_bridgeObjectRelease();
      break;
    case 2:
      uint64_t v3 = type metadata accessor for WeatherMapOverlayKind();
      unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
      uint64_t result = v4(a1, v3);
      break;
    default:
      return result;
  }
  return result;
}

void *sub_1009DD36C(void *a1, void *a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 1u:
    case 3u:
      uint64_t v7 = a2[1];
      *a1 = *a2;
      a1[1] = v7;
      swift_bridgeObjectRetain();
      goto LABEL_5;
    case 2u:
      uint64_t v6 = type metadata accessor for WeatherMapOverlayKind();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
LABEL_5:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

void *sub_1009DD4AC(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1009DBD10((uint64_t)a1, (void (*)(void))type metadata accessor for AutomationViewInfo);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 3u:
        *a1 = *a2;
        a1[1] = a2[1];
        swift_bridgeObjectRetain();
        goto LABEL_6;
      case 2u:
        uint64_t v6 = type metadata accessor for WeatherMapOverlayKind();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
LABEL_6:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

void *sub_1009DD628(void *a1, const void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    uint64_t v6 = type metadata accessor for WeatherMapOverlayKind();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

void *sub_1009DD6E0(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1009DBD10((uint64_t)a1, (void (*)(void))type metadata accessor for AutomationViewInfo);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      uint64_t v6 = type metadata accessor for WeatherMapOverlayKind();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t destroy for ConditionDetailPlatterViewModel.PlatterIdentifier(uint64_t a1)
{
  return sub_10014D144(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t _s7Weather31ConditionDetailPlatterViewModelV17PlatterIdentifierOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_10018F6EC(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for ConditionDetailPlatterViewModel.PlatterIdentifier(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_10018F6EC(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  unsigned __int8 v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_10014D144(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for ConditionDetailPlatterViewModel.PlatterIdentifier(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  unsigned __int8 v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_10014D144(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for ConditionDetailPlatterViewModel.PlatterIdentifier(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xFE && *(unsigned char *)(a1 + 17))
    {
      int v2 = *(_DWORD *)a1 + 253;
    }
    else
    {
      unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
      if (v3 <= 2) {
        int v2 = -1;
      }
      else {
        int v2 = v3 ^ 0xFF;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ConditionDetailPlatterViewModel.PlatterIdentifier(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)uint64_t result = a2 - 254;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t *sub_1009DD940(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 2u:
      case 3u:
      case 4u:
      case 5u:
      case 7u:
      case 0xAu:
        uint64_t v7 = a2[1];
        *a1 = *a2;
        a1[1] = v7;
        swift_bridgeObjectRetain();
        goto LABEL_9;
      case 6u:
        uint64_t v9 = type metadata accessor for WeatherMapOverlayKind();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
        goto LABEL_9;
      case 8u:
        uint64_t v10 = a2[1];
        *a1 = *a2;
        a1[1] = v10;
        uint64_t v11 = a2[3];
        a1[2] = a2[2];
        a1[3] = v11;
        uint64_t v12 = a2[4];
        uint64_t v13 = a2[5];
        a1[4] = v12;
        a1[5] = v13;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_9;
      case 9u:
      case 0xBu:
        uint64_t v14 = a2[1];
        *a1 = *a2;
        a1[1] = v14;
        uint64_t v15 = a2[2];
        uint64_t v16 = a2[3];
        a1[2] = v15;
        a1[3] = v16;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
LABEL_9:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(v6 + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_1009DDC04(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 7:
    case 10:
      goto LABEL_7;
    case 6:
      uint64_t v3 = type metadata accessor for WeatherMapOverlayKind();
      uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
      return v4(a1, v3);
    case 8:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_7;
    case 9:
    case 11:
      swift_bridgeObjectRelease();
LABEL_7:
      uint64_t result = swift_bridgeObjectRelease();
      break;
    default:
      return result;
  }
  return result;
}

void *sub_1009DDD1C(void *a1, void *a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 1u:
    case 2u:
    case 3u:
    case 4u:
    case 5u:
    case 7u:
    case 0xAu:
      uint64_t v6 = a2[1];
      *a1 = *a2;
      a1[1] = v6;
      swift_bridgeObjectRetain();
      goto LABEL_6;
    case 6u:
      uint64_t v7 = type metadata accessor for WeatherMapOverlayKind();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
      goto LABEL_6;
    case 8u:
      uint64_t v8 = a2[1];
      *a1 = *a2;
      a1[1] = v8;
      uint64_t v9 = a2[3];
      a1[2] = a2[2];
      a1[3] = v9;
      uint64_t v10 = a2[4];
      uint64_t v11 = a2[5];
      a1[4] = v10;
      a1[5] = v11;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_6;
    case 9u:
    case 0xBu:
      uint64_t v12 = a2[1];
      *a1 = *a2;
      a1[1] = v12;
      uint64_t v13 = a2[2];
      uint64_t v14 = a2[3];
      a1[2] = v13;
      a1[3] = v14;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
LABEL_6:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

void *sub_1009DDF9C(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1009DBD10((uint64_t)a1, (void (*)(void))type metadata accessor for AutomationCellInfo);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 2u:
      case 3u:
      case 4u:
      case 5u:
      case 7u:
      case 0xAu:
        *a1 = *a2;
        a1[1] = a2[1];
        swift_bridgeObjectRetain();
        goto LABEL_8;
      case 6u:
        uint64_t v6 = type metadata accessor for WeatherMapOverlayKind();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
        goto LABEL_8;
      case 8u:
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        a1[3] = a2[3];
        a1[4] = a2[4];
        a1[5] = a2[5];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_8;
      case 9u:
      case 0xBu:
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        a1[3] = a2[3];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
LABEL_8:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

void *sub_1009DE2B8(void *a1, const void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 6)
  {
    uint64_t v6 = type metadata accessor for WeatherMapOverlayKind();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

void *sub_1009DE370(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1009DBD10((uint64_t)a1, (void (*)(void))type metadata accessor for AutomationCellInfo);
    if (swift_getEnumCaseMultiPayload() == 6)
    {
      uint64_t v6 = type metadata accessor for WeatherMapOverlayKind();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

unint64_t sub_1009DE450()
{
  unint64_t result = qword_100EA7C80;
  if (!qword_100EA7C80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA7C80);
  }
  return result;
}

unint64_t sub_1009DE4A0()
{
  unint64_t result = qword_100EA7C88;
  if (!qword_100EA7C88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA7C88);
  }
  return result;
}

unint64_t sub_1009DE4F0()
{
  unint64_t result = qword_100EA7C90;
  if (!qword_100EA7C90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA7C90);
  }
  return result;
}

unint64_t sub_1009DE540()
{
  unint64_t result = qword_100EA7C98;
  if (!qword_100EA7C98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA7C98);
  }
  return result;
}

unint64_t sub_1009DE590()
{
  unint64_t result = qword_100EA7CA0;
  if (!qword_100EA7CA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA7CA0);
  }
  return result;
}

unint64_t sub_1009DE5E0()
{
  unint64_t result = qword_100EA7CA8;
  if (!qword_100EA7CA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA7CA8);
  }
  return result;
}

unint64_t sub_1009DE630()
{
  unint64_t result = qword_100EA7CB0;
  if (!qword_100EA7CB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA7CB0);
  }
  return result;
}

unint64_t sub_1009DE680()
{
  unint64_t result = qword_100EA7CB8;
  if (!qword_100EA7CB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA7CB8);
  }
  return result;
}

unint64_t sub_1009DE6D0()
{
  unint64_t result = qword_100EA7CC0;
  if (!qword_100EA7CC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA7CC0);
  }
  return result;
}

unint64_t sub_1009DE720()
{
  unint64_t result = qword_100EA7CC8;
  if (!qword_100EA7CC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA7CC8);
  }
  return result;
}

unint64_t sub_1009DE770()
{
  unint64_t result = qword_100EA7CD0;
  if (!qword_100EA7CD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA7CD0);
  }
  return result;
}

unint64_t sub_1009DE7C0()
{
  unint64_t result = qword_100EA7CD8;
  if (!qword_100EA7CD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA7CD8);
  }
  return result;
}

unint64_t sub_1009DE810()
{
  unint64_t result = qword_100EA7CE0;
  if (!qword_100EA7CE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA7CE0);
  }
  return result;
}

unint64_t sub_1009DE860()
{
  unint64_t result = qword_100EA7CE8;
  if (!qword_100EA7CE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA7CE8);
  }
  return result;
}

unint64_t sub_1009DE8AC()
{
  unint64_t result = qword_100EA7CF8;
  if (!qword_100EA7CF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA7CF8);
  }
  return result;
}

unint64_t sub_1009DE8F8()
{
  unint64_t result = qword_100EA7D00;
  if (!qword_100EA7D00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA7D00);
  }
  return result;
}

unint64_t sub_1009DE944()
{
  unint64_t result = qword_100EA7D08;
  if (!qword_100EA7D08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA7D08);
  }
  return result;
}

unsigned char *sub_1009DE990(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1009DEA5CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

void type metadata accessor for AutomationSearchInfo.Key()
{
}

unint64_t sub_1009DEA94()
{
  unint64_t result = qword_100EA7D10;
  if (!qword_100EA7D10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA7D10);
  }
  return result;
}

unint64_t sub_1009DEAE4()
{
  unint64_t result = qword_100EA7D18;
  if (!qword_100EA7D18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA7D18);
  }
  return result;
}

unint64_t sub_1009DEB34()
{
  unint64_t result = qword_100EA7D20;
  if (!qword_100EA7D20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA7D20);
  }
  return result;
}

id sub_1009DEB88@<X0>(void *a1@<X8>)
{
  int v2 = (objc_class *)type metadata accessor for LocalSearchCompleterManager();
  id result = [objc_allocWithZone(v2) init];
  a1[3] = v2;
  a1[4] = &protocol witness table for LocalSearchCompleterManager;
  *a1 = result;
  return result;
}

uint64_t sub_1009DEBD4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100EA7DD8);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v10)
  {
    __break(1u);
    goto LABEL_6;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100EA7E00);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v8)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E6FC60);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v7)
  {
    uint64_t v5 = type metadata accessor for LocalSearchRequestManager();
    swift_allocObject();
    uint64_t result = LocalSearchRequestManager.init(service:store:appConfigurationManager:queue:)(v10, v11, v8, v9, (uint64_t)v6, 0);
    a2[3] = v5;
    a2[4] = (uint64_t)&off_100E2E138;
    *a2 = result;
    return result;
  }
LABEL_7:
  __break(1u);
  return result;
}

void sub_1009DED2C(void *a1@<X0>, void *a2@<X8>)
{
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E647D8);
  dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v9)
  {
    __break(1u);
    goto LABEL_7;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E8DE58);
  dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v8)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E98128);
  dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v7)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E7CD20);
  dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v6)
  {
    uint64_t v4 = type metadata accessor for ListViewTipManager(0);
    swift_allocObject();
    sub_1002360D8();
    a2[3] = v4;
    a2[4] = &off_100E09440;
    *a2 = v5;
    return;
  }
LABEL_9:
  __break(1u);
}

uint64_t sub_1009DEEB4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E7CD20);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v6)
  {
    a2[3] = (uint64_t)&type metadata for AddLocationContextHelper;
    a2[4] = (uint64_t)&off_100E1A6F8;
    uint64_t v4 = swift_allocObject();
    *a2 = v4;
    return sub_1001262E4(&v5, v4 + 16);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1009DEF58@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E6FC60);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v6)
  {
    type metadata accessor for LocalSearchRequestService();
    uint64_t v4 = swift_allocObject();
    uint64_t result = sub_1001262E4(&v5, v4 + 16);
    *a2 = v4;
    a2[1] = (uint64_t)&protocol witness table for LocalSearchRequestService;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1009DEFF4()
{
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 16);

  return swift_deallocObject();
}

uint64_t sub_1009DF02C(uint64_t a1)
{
  uint64_t v4 = sub_10017DF08(&qword_100E66CA0);
  sub_100179C0C();
  __chkstk_darwin(v5);
  sub_10016279C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v2, a1, v4);
  sub_1009E6344();
  uint64_t v9 = dispatch thunk of Sequence._copyToContiguousArray()();
  sub_1009DF100(&v9);
  uint64_t v7 = v9;
  if (v1) {
    swift_release();
  }
  return v7;
}

void sub_1009DF100(uint64_t *a1)
{
  uint64_t v2 = *(void *)(type metadata accessor for DayWeather() - 8);
  uint64_t v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_100315358();
    uint64_t v3 = v4;
  }
  uint64_t v5 = *(void *)(v3 + 16);
  v6[0] = v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v6[1] = v5;
  sub_1009E4EA0(v6);
  *a1 = v3;
}

uint64_t sub_1009DF1A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_10017DF08(&qword_100E656C0);
  uint64_t v5 = sub_100109308(v4);
  __chkstk_darwin(v5);
  sub_100109314();
  uint64_t v46 = v6;
  uint64_t v45 = type metadata accessor for SunriseSunsetDetailPreprocessedDataModel();
  sub_100162E4C();
  __chkstk_darwin(v7);
  sub_100109314();
  uint64_t v43 = v8;
  uint64_t v9 = type metadata accessor for Location();
  sub_100179C0C();
  uint64_t v48 = v10;
  __chkstk_darwin(v11);
  sub_1001626E0();
  uint64_t v14 = v13 - v12;
  type metadata accessor for CurrentWeather();
  sub_100179C0C();
  __chkstk_darwin(v15);
  sub_1001626E0();
  type metadata accessor for Date();
  sub_100179C0C();
  __chkstk_darwin(v16);
  sub_1001626E0();
  uint64_t v19 = v18 - v17;
  uint64_t v20 = type metadata accessor for SunriseSunsetDetailInput(0);
  uint64_t v21 = sub_100109308(v20);
  __chkstk_darwin(v21);
  uint64_t v22 = sub_100163E88();
  uint64_t v23 = type metadata accessor for SunriseSunsetDetailInput.Input(v22);
  sub_100162E4C();
  __chkstk_darwin(v24);
  sub_1001626E0();
  uint64_t v27 = v26 - v25;
  sub_1009E4CD8(a1, v2);
  if (_s7Weather24LocationCompositionStateOwet_0(v2, 1, v23) == 1)
  {
    sub_1009E4D3C(v2, (void (*)(void))type metadata accessor for SunriseSunsetDetailInput);
    uint64_t v28 = type metadata accessor for SunriseSunsetDetailViewModel();
LABEL_12:
    swift_storeEnumTagMultiPayload();
    return _s7Weather24LocationCompositionStateOwst_0(a2, 0, 1, v28);
  }
  uint64_t v44 = a2;
  sub_1009E4DD8(v2, v27, (void (*)(void))type metadata accessor for SunriseSunsetDetailInput.Input);
  type metadata accessor for WeatherData(0);
  WeatherDataModel.currentWeather.getter();
  CurrentWeather.date.getter();
  sub_1001629F8();
  v29();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v48 + 16))(v14, v27, v9);
  if (*(unsigned char *)(v27 + *(int *)(v23 + 28)) != 1)
  {
    uint64_t v36 = sub_100163BD8();
    v37(v36);
LABEL_11:
    sub_100162F0C();
    v38();
    sub_1009E4D3C(v27, (void (*)(void))type metadata accessor for SunriseSunsetDetailInput.Input);
    uint64_t v28 = type metadata accessor for SunriseSunsetDetailViewModel();
    a2 = v44;
    goto LABEL_12;
  }
  sub_1001B1E64((void *)(v47 + OBJC_IVAR____TtC7Weather35SunriseSunsetDetailViewModelFactory_preprocessedDataProvider), *(void *)(v47 + OBJC_IVAR____TtC7Weather35SunriseSunsetDetailViewModelFactory_preprocessedDataProvider + 24));
  sub_100289E00();
  if (_s7Weather24LocationCompositionStateOwet_0(v46, 1, v45) == 1)
  {
    sub_100178110(v46, &qword_100E656C0);
    if (qword_100E627E8 != -1) {
      swift_once();
    }
    uint64_t v30 = type metadata accessor for Logger();
    sub_1002102B0(v30, (uint64_t)qword_100F51ED0);
    unint64_t v31 = Logger.logObject.getter();
    os_log_type_t v32 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v31, v32))
    {
      uint64_t v33 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v33 = 0;
      _os_log_impl((void *)&_mh_execute_header, v31, v32, "Preprocessed data isn't available", v33, 2u);
      swift_slowDealloc();
    }

    uint64_t v34 = sub_100163BD8();
    v35(v34);
    goto LABEL_11;
  }
  sub_1009E4DD8(v46, v43, (void (*)(void))type metadata accessor for SunriseSunsetDetailPreprocessedDataModel);
  sub_1009DF6EC(v14, v43, v19, v27 + *(int *)(v23 + 24), *(unsigned __int8 *)(v47 + OBJC_IVAR____TtC7Weather35SunriseSunsetDetailViewModelFactory_isDemoPresetActive), a2);
  sub_1009E4D3C(v43, (void (*)(void))type metadata accessor for SunriseSunsetDetailPreprocessedDataModel);
  uint64_t v40 = sub_100163BD8();
  v41(v40);
  sub_100162F0C();
  v42();
  return sub_1009E4D3C(v27, (void (*)(void))type metadata accessor for SunriseSunsetDetailInput.Input);
}

uint64_t sub_1009DF6EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, int a5@<W5>, uint64_t a6@<X8>)
{
  LODWORD(v203) = a5;
  uint64_t v197 = a4;
  uint64_t v219 = a3;
  uint64_t v201 = a2;
  uint64_t v220 = a1;
  Swift::String v212 = (char *)a6;
  uint64_t v6 = type metadata accessor for OverviewTableViewModel();
  __chkstk_darwin(v6 - 8);
  id v163 = (char *)&v151 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v200 = type metadata accessor for Location();
  uint64_t v199 = *(void *)(v200 - 8);
  uint64_t v8 = __chkstk_darwin(v200);
  uint64_t v198 = (uint64_t)&v151 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v172 = (uint64_t)&v151 - v10;
  uint64_t v211 = type metadata accessor for SunriseSunsetDetailViewModel();
  __chkstk_darwin(v211);
  uint64_t v174 = (char *)&v151 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v173 = type metadata accessor for AttributedString();
  uint64_t v162 = *(void *)(v173 - 8);
  uint64_t v12 = __chkstk_darwin(v173);
  uint64_t v170 = (uint64_t)&v151 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v181 = (uint64_t)&v151 - v14;
  uint64_t v15 = sub_10017DF08(&qword_100E921E8);
  __chkstk_darwin(v15 - 8);
  uint64_t v156 = (char *)&v151 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v171 = type metadata accessor for SunriseSunsetDetailChartViewModel();
  uint64_t v161 = *(void *)(v171 - 8);
  uint64_t v17 = __chkstk_darwin(v171);
  uint64_t v158 = (char *)&v151 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v180 = (uint64_t)&v151 - v19;
  uint64_t v160 = type metadata accessor for SunriseSunsetEvent();
  uint64_t v159 = *(void *)(v160 - 8);
  __chkstk_darwin(v160);
  uint64_t v179 = (uint64_t)&v151 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  uint64_t v22 = __chkstk_darwin(v21 - 8);
  uint64_t v165 = (char *)&v151 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  uint64_t v183 = (char *)&v151 - v24;
  uint64_t v189 = type metadata accessor for SunEvents();
  uint64_t v188 = *(void *)(v189 - 8);
  uint64_t v25 = __chkstk_darwin(v189);
  uint64_t v157 = (char *)&v151 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = __chkstk_darwin(v25);
  uint64_t v169 = (uint64_t)&v151 - v28;
  uint64_t v29 = __chkstk_darwin(v27);
  uint64_t v164 = (char *)&v151 - v30;
  __chkstk_darwin(v29);
  uint64_t v182 = (char *)&v151 - v31;
  uint64_t v187 = type metadata accessor for Date();
  uint64_t v186 = *(void **)(v187 - 8);
  uint64_t v32 = __chkstk_darwin(v187);
  uint64_t v167 = (char *)&v151 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = __chkstk_darwin(v32);
  uint64_t v168 = (char *)&v151 - v35;
  uint64_t v36 = __chkstk_darwin(v34);
  int v166 = (char *)&v151 - v37;
  uint64_t v38 = __chkstk_darwin(v36);
  uint64_t v178 = (char *)&v151 - v39;
  __chkstk_darwin(v38);
  uint64_t v185 = (char *)&v151 - v40;
  uint64_t v41 = sub_10017DF08(&qword_100E66E28);
  uint64_t v42 = __chkstk_darwin(v41 - 8);
  uint64_t v155 = (uint64_t)&v151 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v42);
  uint64_t v206 = (uint64_t)&v151 - v44;
  uint64_t v195 = type metadata accessor for ArticlePlacementLocation();
  uint64_t v194 = *(void *)(v195 - 8);
  __chkstk_darwin(v195);
  uint64_t v193 = (char *)&v151 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = sub_10017DF08(&qword_100E7B2B8);
  uint64_t v47 = __chkstk_darwin(v46 - 8);
  uint64_t v192 = (uint64_t)&v151 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v47);
  uint64_t v205 = (char **)((char *)&v151 - v49);
  uint64_t v50 = sub_10017DF08(&qword_100E6B6C8);
  uint64_t v51 = __chkstk_darwin(v50 - 8);
  uint64_t v196 = (uint64_t)&v151 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v51);
  Swift::String v202 = (char **)((char *)&v151 - v53);
  uint64_t v214 = type metadata accessor for DayWeather();
  uint64_t v204 = *(void *)(v214 - 8);
  uint64_t v54 = __chkstk_darwin(v214);
  uint64_t v184 = (char *)&v151 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v54);
  uint64_t v217 = (char *)&v151 - v56;
  uint64_t v215 = type metadata accessor for TimeZone();
  uint64_t v57 = *(void *)(v215 - 8);
  uint64_t v58 = __chkstk_darwin(v215);
  uint64_t v154 = (char *)&v151 - ((v59 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v58);
  uint64_t v61 = (char *)&v151 - v60;
  uint64_t v210 = type metadata accessor for Calendar();
  uint64_t v209 = *(void *)(v210 - 8);
  __chkstk_darwin(v210);
  uint64_t v63 = (char *)&v151 - ((v62 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = sub_10017DF08(&qword_100E66CA0);
  uint64_t v65 = *(void *)(v64 - 8);
  uint64_t v66 = __chkstk_darwin(v64);
  uint64_t v190 = (char *)&v151 - ((v67 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = __chkstk_darwin(v66);
  uint64_t v70 = (char *)&v151 - v69;
  __chkstk_darwin(v68);
  uint64_t v153 = type metadata accessor for CurrentWeather();
  uint64_t v152 = *(void *)(v153 - 8);
  __chkstk_darwin(v153);
  uint64_t v72 = (char *)&v151 - ((v71 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v208 = type metadata accessor for SunriseSunsetModel();
  uint64_t v207 = *(void *)(v208 - 8);
  __chkstk_darwin(v208);
  uint64_t v74 = (char *)&v151 - ((v73 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for WeatherData(0);
  WeatherDataModel.currentWeather.getter();
  WeatherDataModel.dailyForecast.getter();
  uint64_t v151 = v72;
  SunriseSunsetModel.init(currentWeather:dailyForecast:)();
  Location.timeZone.getter();
  static Calendar.currentCalendar(with:)();
  uint64_t v75 = *(void (**)(uint64_t, uint64_t))(v57 + 8);
  uint64_t v177 = v61;
  uint64_t v176 = v57 + 8;
  uint64_t v175 = v75;
  v75((uint64_t)v61, v215);
  SunriseSunsetModel.dailyForecast.getter();
  uint64_t v218 = v63;
  uint64_t v221 = v63;
  char v222 = (char)v203;
  uint64_t v223 = v219;
  uint64_t v76 = (void (*)(void, void, void))v202;
  sub_10019AB54();
  uint64_t v77 = *(void (**)(char *, uint64_t))(v65 + 8);
  Swift::String v203 = (void (*)(char *, uint64_t, uint64_t))v64;
  uint64_t v191 = v65 + 8;
  v77(v70, v64);
  uint64_t v78 = v214;
  int v79 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v76, 1, v214);
  uint64_t v213 = v74;
  if (v79 != 1)
  {
    Swift::String v202 = *(char ***)(v204 + 32);
    ((void (*)(char *, void, uint64_t))v202)(v217, v76, v78);
    sub_1001B1E64((void *)(v216+ OBJC_IVAR____TtC7Weather35SunriseSunsetDetailViewModelFactory_newsArticleComponentViewModelFactory), *(void *)(v216+ OBJC_IVAR____TtC7Weather35SunriseSunsetDetailViewModelFactory_newsArticleComponentViewModelFactory+ 24));
    uint64_t v90 = v194;
    uint64_t v91 = v193;
    uint64_t v92 = v195;
    (*(void (**)(char *, void, uint64_t))(v194 + 104))(v193, enum case for ArticlePlacementLocation.sunriseSunsetDetail(_:), v195);
    uint64_t v93 = v205;
    sub_1006BAAF0((uint64_t)v91, v205);
    (*(void (**)(char *, uint64_t))(v90 + 8))(v91, v92);
    uint64_t v94 = v192;
    sub_1001262FC((uint64_t)v93, v192, &qword_100E7B2B8);
    sub_1004B80E0(v94, v206);
    uint64_t v95 = v190;
    uint64_t v96 = SunriseSunsetModel.dailyForecast.getter();
    __chkstk_darwin(v96);
    uint64_t v97 = v218;
    uint64_t v98 = v196;
    sub_10019AB54();
    v77(v95, (uint64_t)v203);
    int v99 = _s7Weather24LocationCompositionStateOwet_0(v98, 1, v78);
    uint64_t v100 = v216;
    if (v99 == 1)
    {
      sub_100178110(v98, &qword_100E6B6C8);
      uint64_t v101 = v211;
      uint64_t v102 = v212;
      uint64_t v103 = (uint64_t)v213;
      uint64_t v104 = v206;
      uint64_t v105 = v205;
      uint64_t v106 = v204;
    }
    else
    {
      uint64_t v108 = v184;
      ((void (*)(char *, uint64_t, uint64_t))v202)(v184, v98, v78);
      uint64_t v109 = v182;
      DayWeather.sun.getter();
      uint64_t v110 = (uint64_t)v183;
      SunEvents.sunrise.getter();
      uint64_t v112 = v188 + 8;
      uint64_t v111 = *(void (**)(char *, uint64_t))(v188 + 8);
      uint64_t v113 = v189;
      v111(v109, v189);
      uint64_t v114 = v187;
      if (_s7Weather24LocationCompositionStateOwet_0(v110, 1, v187) == 1)
      {
        uint64_t v106 = v204;
        (*(void (**)(char *, uint64_t))(v204 + 8))(v108, v78);
        sub_100178110(v110, (uint64_t *)&unk_100E73CA0);
        uint64_t v101 = v211;
        uint64_t v102 = v212;
        uint64_t v103 = (uint64_t)v213;
        uint64_t v104 = v206;
        uint64_t v105 = v205;
      }
      else
      {
        Swift::String v203 = (void (*)(char *, uint64_t, uint64_t))v186[4];
        v203(v185, v110, v114);
        uint64_t v115 = v164;
        DayWeather.sun.getter();
        uint64_t v116 = (uint64_t)v165;
        SunEvents.sunset.getter();
        v111(v115, v113);
        if (_s7Weather24LocationCompositionStateOwet_0(v116, 1, v114) != 1)
        {
          v203(v178, v116, v114);
          Location.coordinate.getter();
          uint64_t v118 = (uint64_t)v177;
          Location.timeZone.getter();
          SunriseSunsetEventCalculator.nextEvent(coordinate:date:timeZone:)();
          v175(v118, v215);
          Swift::String v202 = (char **)SunriseSunsetEvent.headerDescription.getter();
          uint64_t v198 = v119;
          uint64_t v197 = SunriseSunsetEvent.symbolIconName.getter();
          uint64_t v196 = v120;
          uint64_t v121 = *(void *)(v100
                           + OBJC_IVAR____TtC7Weather35SunriseSunsetDetailViewModelFactory_chartViewModelFactory
                           + 24);
          uint64_t v122 = *(void *)(v100
                           + OBJC_IVAR____TtC7Weather35SunriseSunsetDetailViewModelFactory_chartViewModelFactory
                           + 32);
          Swift::String v203 = (void (*)(char *, uint64_t, uint64_t))v111;
          sub_1001B1E64((void *)(v100 + OBJC_IVAR____TtC7Weather35SunriseSunsetDetailViewModelFactory_chartViewModelFactory), v121);
          uint64_t v188 = v112;
          uint64_t v123 = v151;
          SunriseSunsetModel.currentWeather.getter();
          uint64_t v124 = (uint64_t)v156;
          DayWeather.sun.getter();
          _s7Weather24LocationCompositionStateOwst_0(v124, 0, 1, v189);
          sub_1003BD5F4(v124, v201, v121, v122, v180);
          sub_100178110(v124, &qword_100E921E8);
          (*(void (**)(char *, uint64_t))(v152 + 8))(v123, v153);
          Location.timeZone.getter();
          uint64_t v125 = v179;
          uint64_t v126 = (uint64_t)v218;
          uint64_t v127 = v219;
          uint64_t v195 = sub_1009E1AD8(v179, v219, v118);
          uint64_t v194 = v128;
          uint64_t v129 = v215;
          Swift::String v130 = v175;
          v175(v118, v215);
          uint64_t v131 = v169;
          DayWeather.sun.getter();
          Location.timeZone.getter();
          sub_1009E1E74(v125, v131, v127, v118, v126, v181);
          v130(v118, v129);
          ((void (*)(uint64_t, uint64_t))v203)(v131, v189);
          uint64_t v132 = sub_10017DF08(&qword_100E92128);
          uint64_t v193 = &v174[*(int *)(v132 + 48)];
          uint64_t v133 = (void (*)(char *, uint64_t, uint64_t))v186[2];
          uint64_t v134 = v187;
          v133(v166, v127, v187);
          v133(v168, (uint64_t)v185, v134);
          v133(v167, (uint64_t)v178, v134);
          uint64_t v135 = v220;
          Location.timeZone.getter();
          uint64_t v136 = v162;
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v162 + 16))(v170, v181, v173);
          sub_10017BAF4();
          uint64_t v219 = static NSDateFormatter.timeSymbols.getter();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v199 + 16))(v172, v135, v200);
          DayWeather.sun.getter();
          uint64_t v137 = v161;
          uint64_t v138 = v158;
          (*(void (**)(char *, uint64_t, uint64_t))(v161 + 16))(v158, v180, v171);
          sub_1001B1E64((void *)(v216+ OBJC_IVAR____TtC7Weather35SunriseSunsetDetailViewModelFactory_sunriseSunsetTableViewModelFactory), *(void *)(v216+ OBJC_IVAR____TtC7Weather35SunriseSunsetDetailViewModelFactory_sunriseSunsetTableViewModelFactory+ 24));
          uint64_t v139 = v157;
          DayWeather.sun.getter();
          uint64_t v140 = v154;
          Location.timeZone.getter();
          uint64_t v141 = (uint64_t)v163;
          dispatch thunk of SunriseSunsetTableViewModelFactoryType.makeViewModel(from:timeZone:calendar:)();
          v175((uint64_t)v140, v215);
          ((void (*)(char *, uint64_t))v203)(v139, v189);
          uint64_t v142 = v206;
          uint64_t v143 = v155;
          sub_1001262FC(v206, v155, &qword_100E66E28);
          uint64_t v150 = (uint64_t)v138;
          uint64_t v144 = v174;
          sub_1009928F4((uint64_t)v202, v198, v197, v196, v195, v194, v174, (uint64_t)v167, (uint64_t)v177, v170, v219, v172, v169, v150, v141, v143);
          uint64_t v145 = type metadata accessor for SunriseSunsetDetailPreprocessedDataModel();
          sub_1009E3290((uint64_t *)(v201 + *(int *)(v145 + 24)), (uint64_t)v193);
          (*(void (**)(uint64_t, uint64_t))(v136 + 8))(v181, v173);
          (*(void (**)(uint64_t, uint64_t))(v137 + 8))(v180, v171);
          (*(void (**)(uint64_t, uint64_t))(v159 + 8))(v179, v160);
          uint64_t v146 = (void (*)(char *, uint64_t))v186[1];
          uint64_t v147 = v187;
          v146(v178, v187);
          v146(v185, v147);
          uint64_t v148 = *(void (**)(char *, uint64_t))(v204 + 8);
          uint64_t v149 = v214;
          v148(v184, v214);
          sub_100178110(v142, &qword_100E66E28);
          sub_100178110((uint64_t)v205, &qword_100E7B2B8);
          v148(v217, v149);
          (*(void (**)(char *, uint64_t))(v207 + 8))(v213, v208);
          (*(void (**)(char *, uint64_t))(v209 + 8))(v218, v210);
          uint64_t v101 = v211;
          swift_storeEnumTagMultiPayload();
          uint64_t v102 = v212;
          sub_1009E4DD8((uint64_t)v144, (uint64_t)v212, (void (*)(void))type metadata accessor for SunriseSunsetDetailViewModel);
          goto LABEL_15;
        }
        ((void (*)(char *, uint64_t))v186[1])(v185, v114);
        uint64_t v106 = v204;
        uint64_t v78 = v214;
        (*(void (**)(char *, uint64_t))(v204 + 8))(v108, v214);
        sub_100178110(v116, (uint64_t *)&unk_100E73CA0);
        uint64_t v101 = v211;
        uint64_t v102 = v212;
        uint64_t v103 = (uint64_t)v213;
        uint64_t v104 = v206;
        uint64_t v105 = v205;
        uint64_t v97 = v218;
      }
    }
    sub_1009E174C(v220, v103, v219, v201, v104, v102);
    sub_100178110(v104, &qword_100E66E28);
    sub_100178110((uint64_t)v105, &qword_100E7B2B8);
    (*(void (**)(char *, uint64_t))(v106 + 8))(v217, v78);
    (*(void (**)(uint64_t, uint64_t))(v207 + 8))(v103, v208);
    (*(void (**)(char *, uint64_t))(v209 + 8))(v97, v210);
LABEL_15:
    uint64_t v107 = 0;
    return _s7Weather24LocationCompositionStateOwst_0((uint64_t)v102, v107, 1, v101);
  }
  sub_100178110((uint64_t)v76, &qword_100E6B6C8);
  if (qword_100E627A0 != -1) {
    swift_once();
  }
  uint64_t v80 = type metadata accessor for Logger();
  sub_1002102B0(v80, (uint64_t)qword_100F51DF8);
  uint64_t v81 = v199;
  uint64_t v82 = v198;
  uint64_t v83 = v200;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v199 + 16))(v198, v220, v200);
  uint64_t v84 = Logger.logObject.getter();
  os_log_type_t v85 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v84, v85))
  {
    uint64_t v86 = swift_slowAlloc();
    uint64_t v87 = swift_slowAlloc();
    *(_DWORD *)uint64_t v86 = 141558275;
    uint64_t v224 = 1752392040;
    uint64_t v225 = v87;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v86 + 12) = 2081;
    sub_100231074((unint64_t *)&qword_100E66470, (void (*)(uint64_t))&type metadata accessor for Location);
    uint64_t v88 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v224 = sub_10016414C(v88, v89, &v225);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v81 + 8))(v82, v83);
    _os_log_impl((void *)&_mh_execute_header, v84, v85, "Missing sunset L2 daily forecast for location:%{private,mask.hash}s", (uint8_t *)v86, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    (*(void (**)(uint64_t, uint64_t))(v81 + 8))(v82, v83);
  }
  (*(void (**)(char *, uint64_t))(v207 + 8))(v213, v208);
  (*(void (**)(char *, uint64_t))(v209 + 8))(v218, v210);
  uint64_t v107 = 1;
  uint64_t v101 = v211;
  uint64_t v102 = v212;
  return _s7Weather24LocationCompositionStateOwst_0((uint64_t)v102, v107, 1, v101);
}

uint64_t sub_1009E1218(char *a1, char *a2, int a3, uint64_t a4)
{
  uint64_t v47 = a4;
  int v44 = a3;
  uint64_t v50 = a1;
  uint64_t v5 = type metadata accessor for DayWeather();
  uint64_t v52 = *(void *)(v5 - 8);
  uint64_t v53 = v5;
  uint64_t v6 = __chkstk_darwin(v5);
  uint64_t v45 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v54 = (char *)&v40 - v8;
  uint64_t v55 = type metadata accessor for Calendar();
  uint64_t v9 = *(void *)(v55 - 8);
  uint64_t v10 = __chkstk_darwin(v55);
  uint64_t v49 = (char *)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v40 - v12;
  uint64_t v14 = type metadata accessor for Date();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v43 = (char *)&v40 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v40 - v19;
  __chkstk_darwin(v18);
  uint64_t v22 = (char *)&v40 - v21;
  DayWeather.date.getter();
  LODWORD(v46) = Calendar.isDateInToday(_:)();
  uint64_t v23 = *(void (**)(char *, uint64_t))(v15 + 8);
  v23(v22, v14);
  uint64_t v48 = v9;
  uint64_t v24 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
  uint64_t v51 = v13;
  uint64_t v42 = v24;
  v24(v13, a2, v55);
  uint64_t v41 = *(void (**)(char *, char *, uint64_t))(v52 + 16);
  v41(v54, v50, v53);
  uint64_t v25 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 16);
  uint64_t v50 = v20;
  uint64_t v26 = v47;
  uint64_t v47 = v14;
  v25(v20, v26, v14);
  if (v46)
  {
    v23(v50, v47);
    (*(void (**)(char *, uint64_t))(v52 + 8))(v54, v53);
    (*(void (**)(char *, uint64_t))(v48 + 8))(v51, v55);
    char v27 = 1;
  }
  else
  {
    uint64_t v40 = v23;
    uint64_t v46 = v15 + 8;
    v42(v49, v51, v55);
    uint64_t v28 = v45;
    uint64_t v29 = v53;
    v41(v45, v54, v53);
    uint64_t v30 = v43;
    uint64_t v31 = v47;
    v25(v43, (uint64_t)v50, v47);
    if (v44)
    {
      DayWeather.date.getter();
      char v27 = Calendar.isDate(_:inSameDayAs:)();
      uint64_t v32 = v40;
      v40(v22, v31);
      v32(v30, v31);
      uint64_t v52 = *(void *)(v52 + 8);
      ((void (*)(char *, uint64_t))v52)(v28, v29);
      uint64_t v33 = *(void (**)(char *, uint64_t))(v48 + 8);
      uint64_t v34 = v55;
      v33(v49, v55);
      v32(v50, v31);
      ((void (*)(char *, uint64_t))v52)(v54, v29);
      v33(v51, v34);
    }
    else
    {
      uint64_t v35 = v40;
      v40(v30, v31);
      uint64_t v36 = *(void (**)(char *, uint64_t))(v52 + 8);
      v36(v28, v29);
      uint64_t v37 = *(void (**)(char *, uint64_t))(v48 + 8);
      uint64_t v38 = v55;
      v37(v49, v55);
      v35(v50, v31);
      v36(v54, v29);
      v37(v51, v38);
      char v27 = 0;
    }
  }
  return v27 & 1;
}

uint64_t sub_1009E174C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char *a6@<X8>)
{
  uint64_t v23 = a3;
  uint64_t v30 = a4;
  uint64_t v31 = a5;
  uint64_t v25 = a2;
  char v27 = a6;
  uint64_t v8 = sub_10017DF08(&qword_100E66CA0);
  uint64_t v28 = *(void *)(v8 - 8);
  uint64_t v29 = v8;
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = type metadata accessor for CurrentWeather();
  uint64_t v11 = *(void *)(v26 - 8);
  __chkstk_darwin(v26);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = type metadata accessor for Elevation();
  uint64_t v14 = *(void *)(v24 - 8);
  __chkstk_darwin(v24);
  uint64_t v16 = (char *)&v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001B1E64((void *)(v6 + OBJC_IVAR____TtC7Weather35SunriseSunsetDetailViewModelFactory_sunElevationCalculator), *(void *)(v6 + OBJC_IVAR____TtC7Weather35SunriseSunsetDetailViewModelFactory_sunElevationCalculator + 24));
  uint64_t v17 = v23;
  dispatch thunk of SunElevationCalculatorType.getElevation(for:on:)();
  Elevation.degrees.getter();
  double v19 = v18;
  SunriseSunsetModel.currentWeather.getter();
  SunriseSunsetModel.dailyForecast.getter();
  if (v19 >= 0.0) {
    uint64_t v20 = &enum case for PolarType.day(_:);
  }
  else {
    uint64_t v20 = &enum case for PolarType.night(_:);
  }
  sub_1009E3B38(a1, v17, (uint64_t)v13, (uint64_t)v10, v30, v31, v20, v27);
  (*(void (**)(char *, uint64_t))(v28 + 8))(v10, v29);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v26);
  return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v24);
}

uint64_t sub_1009E19EC()
{
  uint64_t v0 = type metadata accessor for Date();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  DayWeather.date.getter();
  char v4 = Calendar.isDateInToday(_:)();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v4 & 1;
}

uint64_t sub_1009E1AD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v14 = a3;
  uint64_t v3 = type metadata accessor for Locale();
  __chkstk_darwin(v3 - 8);
  uint64_t v4 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v4 - 8);
  uint64_t v5 = type metadata accessor for Date();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  SunriseSunsetEvent.date.getter();
  uint64_t v9 = sub_1009E36D8();
  uint64_t v10 = *(void (**)(char *, uint64_t))(v6 + 8);
  v10(v8, v5);
  if ((unint64_t)(v9 - 49) >= 0xFFFFFFFFFFFFFFE7) {
    goto LABEL_7;
  }
  SunriseSunsetEvent.date.getter();
  uint64_t v9 = sub_1009E3908();
  v10(v8, v5);
  if (v9 >= 8)
  {
    String.LocalizationValue.init(stringLiteral:)();
    static Locale.current.getter();
    String.init(localized:table:bundle:locale:comment:)();
    sub_10017DF08(&qword_100E64020);
    uint64_t v9 = 7;
LABEL_8:
    uint64_t v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_100C251B0;
    *(void *)(v12 + 56) = &type metadata for Int;
    *(void *)(v12 + 64) = &protocol witness table for Int;
    *(void *)(v12 + 32) = v9;
    uint64_t v11 = static String.localizedStringWithFormat(_:_:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v11;
  }
  if (v9 >= 2)
  {
LABEL_7:
    String.LocalizationValue.init(stringLiteral:)();
    static Locale.current.getter();
    String.init(localized:table:bundle:locale:comment:)();
    sub_10017DF08(&qword_100E64020);
    goto LABEL_8;
  }
  SunriseSunsetEvent.date.getter();
  uint64_t v11 = Date.formattedTime(timeZone:)();
  v10(v8, v5);
  return v11;
}

uint64_t sub_1009E1E74@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v145 = a2;
  uint64_t v147 = a4;
  uint64_t v148 = a5;
  uint64_t v146 = a6;
  uint64_t v8 = type metadata accessor for TimeZone();
  uint64_t v135 = *(void *)(v8 - 8);
  uint64_t v136 = v8;
  uint64_t v9 = __chkstk_darwin(v8);
  uint64_t v127 = (char *)&v117 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v128 = (char *)&v117 - v11;
  uint64_t v12 = type metadata accessor for AttributeContainer();
  __chkstk_darwin(v12 - 8);
  uint64_t v134 = ((char *)&v117 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v14 = type metadata accessor for Locale();
  __chkstk_darwin(v14 - 8);
  uint64_t v133 = (char *)&v117 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v16 - 8);
  uint64_t v132 = (char *)&v117 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for SunriseSunsetEvent();
  uint64_t v142 = *(void *)(v18 - 8);
  uint64_t v143 = v18;
  uint64_t v19 = __chkstk_darwin(v18);
  Swift::String v130 = (char *)&v117 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v126 = (char *)&v117 - v22;
  uint64_t v23 = __chkstk_darwin(v21);
  uint64_t v125 = (char *)&v117 - v24;
  __chkstk_darwin(v23);
  uint64_t v140 = (char *)&v117 - v25;
  uint64_t v138 = (void *)type metadata accessor for Calendar.Component();
  uint64_t v26 = *(v138 - 1);
  __chkstk_darwin(v138);
  uint64_t v28 = (char *)&v117 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  __chkstk_darwin(v29 - 8);
  uint64_t v139 = (uint64_t (*)(char *, uint64_t))((char *)&v117 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v31 = type metadata accessor for Date();
  uint64_t v32 = *(void *)(v31 - 8);
  uint64_t v33 = __chkstk_darwin(v31);
  uint64_t v131 = (char *)&v117 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = __chkstk_darwin(v33);
  uint64_t v129 = (char *)&v117 - v36;
  uint64_t v37 = __chkstk_darwin(v35);
  uint64_t v39 = (char *)&v117 - v38;
  uint64_t v40 = __chkstk_darwin(v37);
  uint64_t v141 = (char *)&v117 - v41;
  __chkstk_darwin(v40);
  uint64_t v43 = (char *)&v117 - v42;
  SunriseSunsetEvent.date.getter();
  char v44 = static Date.> infix(_:_:)();
  uint64_t v137 = v32;
  uint64_t v47 = *(char **)(v32 + 8);
  uint64_t v45 = v32 + 8;
  uint64_t v46 = v47;
  ((void (*)(char *, uint64_t))v47)(v43, v31);
  if ((v44 & 1) == 0
    || (SunriseSunsetEvent.date.getter(),
        char v48 = Calendar.isDate(_:inSameDayAs:)(),
        ((void (*)(char *, uint64_t))v46)(v43, v31),
        (v48 & 1) != 0))
  {
    sub_1001B1E64((void *)(v144 + OBJC_IVAR____TtC7Weather35SunriseSunsetDetailViewModelFactory_daylightStringBuilder), *(void *)(v144 + OBJC_IVAR____TtC7Weather35SunriseSunsetDetailViewModelFactory_daylightStringBuilder + 24));
    return dispatch thunk of DaylightStringBuilderType.makeDaylightString(for:sunEvents:timeZone:calendar:)();
  }
  SunriseSunsetEvent.date.getter();
  uint64_t v124 = a3;
  uint64_t v120 = sub_1009E3908();
  ((void (*)(char *, uint64_t))v46)(v43, v31);
  uint64_t v123 = a1;
  SunriseSunsetEvent.date.getter();
  uint64_t v119 = Date.formattedMonthAndDay(timeZone:)();
  uint64_t v121 = v50;
  ((void (*)(char *, uint64_t))v46)(v43, v31);
  uint64_t v51 = v138;
  (*(void (**)(char *, void, void *))(v26 + 104))(v28, enum case for Calendar.Component.day(_:), v138);
  uint64_t v122 = (void (*)(void, void))v39;
  uint64_t v52 = v28;
  uint64_t v53 = v124;
  uint64_t v54 = (uint64_t)v139;
  Calendar.date(byAdding:value:to:wrappingComponents:)();
  uint64_t v55 = v122;
  (*(void (**)(char *, void *))(v26 + 8))(v52, v51);
  uint64_t v56 = v137;
  uint64_t v138 = *(void **)(v137 + 16);
  ((void (*)(void (*)(void, void), uint64_t, uint64_t))v138)(v55, v53, v31);
  if (_s7Weather24LocationCompositionStateOwet_0(v54, 1, v31) == 1)
  {
    uint64_t v57 = v141;
    Date.addingTimeInterval(_:)();
    ((void (*)(void, uint64_t))v46)(v55, v31);
    sub_100178110(v54, (uint64_t *)&unk_100E73CA0);
  }
  else
  {
    ((void (*)(void, uint64_t))v46)(v55, v31);
    uint64_t v57 = v141;
    (*(void (**)(char *, uint64_t, uint64_t))(v56 + 32))(v141, v54, v31);
  }
  uint64_t v58 = (uint64_t (*)(char *, uint64_t))v46;
  uint64_t v59 = v45;
  uint64_t v60 = v123;
  SunriseSunsetEvent.date.getter();
  char v61 = Calendar.isDate(_:inSameDayAs:)();
  uint64_t v139 = v58;
  v58(v43, v31);
  uint64_t v63 = v142;
  uint64_t v62 = v143;
  uint64_t v64 = v140;
  uint64_t v137 = *(void *)(v142 + 16);
  ((void (*)(char *, uint64_t, uint64_t))v137)(v140, v60, v143);
  int v65 = (*(uint64_t (**)(char *, uint64_t))(v63 + 88))(v64, v62);
  if (v65 == enum case for SunriseSunsetEvent.sunrise(_:))
  {
    (*(void (**)(char *, uint64_t))(v63 + 96))(v64, v62);
    if ((v61 & 1) != 0 || v120 >= 8)
    {
LABEL_20:
      swift_bridgeObjectRelease();
      String.LocalizationValue.init(stringLiteral:)();
      static Locale.current.getter();
      String.init(localized:table:bundle:locale:comment:)();
      AttributeContainer.init()();
      AttributedString.init(_:attributes:)();
      uint64_t v91 = v139;
      v139(v57, v31);
      return v91(v64, v31);
    }
    if (v120 >= 1) {
      goto LABEL_32;
    }
    swift_bridgeObjectRelease();
    v139(v64, v31);
    uint64_t v70 = v124;
    uint64_t v66 = v130;
  }
  else if (v65 == enum case for SunriseSunsetEvent.sunset(_:))
  {
    (*(void (**)(char *, uint64_t))(v142 + 96))(v64, v62);
    uint64_t v66 = v130;
    if ((v61 & 1) != 0 || v120 >= 8) {
      goto LABEL_20;
    }
    if (v120 >= 1)
    {
LABEL_32:
      String.LocalizationValue.init(stringLiteral:)();
      static Locale.current.getter();
      String.init(localized:table:bundle:locale:comment:)();
      sub_10017DF08(&qword_100E64020);
      uint64_t v112 = swift_allocObject();
      *(_OWORD *)(v112 + 16) = xmmword_100C251B0;
      *(void *)(v112 + 56) = &type metadata for String;
      *(void *)(v112 + 64) = sub_10012B7C0();
      uint64_t v113 = v121;
      *(void *)(v112 + 32) = v119;
      *(void *)(v112 + 40) = v113;
      static String.localizedStringWithFormat(_:_:)();
      uint64_t v114 = v64;
      uint64_t v115 = v57;
      uint64_t v116 = (void (*)(char *, uint64_t))v139;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      AttributeContainer.init()();
      AttributedString.init(_:attributes:)();
      v116(v115, v31);
      return ((uint64_t (*)(char *, uint64_t))v116)(v114, v31);
    }
    swift_bridgeObjectRelease();
    v139(v64, v31);
    uint64_t v70 = v124;
  }
  else
  {
    swift_bridgeObjectRelease();
    if (qword_100E627A0 != -1) {
      swift_once();
    }
    uint64_t v67 = type metadata accessor for Logger();
    sub_1002102B0(v67, (uint64_t)qword_100F51DF8);
    uint64_t v68 = v125;
    uint64_t v69 = (void (*)(char *, char *, uint64_t))v137;
    ((void (*)(char *, uint64_t, uint64_t))v137)(v125, v123, v143);
    uint64_t v70 = v124;
    ((void (*)(char *, uint64_t, uint64_t))v138)(v129, v124, v31);
    uint64_t v71 = v128;
    (*(void (**)(char *, uint64_t, uint64_t))(v135 + 16))(v128, v147, v136);
    uint64_t v72 = Logger.logObject.getter();
    os_log_type_t v73 = static os_log_type_t.error.getter();
    uint64_t v134 = v72;
    LODWORD(v133) = v73;
    BOOL v74 = os_log_type_enabled(v72, v73);
    uint64_t v75 = v142;
    if (v74)
    {
      uint64_t v76 = swift_slowAlloc();
      uint64_t v132 = (char *)swift_slowAlloc();
      uint64_t v150 = v132;
      *(_DWORD *)uint64_t v76 = 136315650;
      uint64_t v122 = (void (*)(void, void))(v76 + 4);
      uint64_t v77 = v143;
      v69(v126, v68, v143);
      uint64_t v78 = String.init<A>(describing:)();
      uint64_t v118 = v59;
      uint64_t v149 = sub_10016414C(v78, v79, (uint64_t *)&v150);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      uint64_t v122 = *(void (**)(void, void))(v75 + 8);
      v122(v68, v77);
      *(_WORD *)(v76 + 12) = 2080;
      sub_100231074(&qword_100E656D8, (void (*)(uint64_t))&type metadata accessor for Date);
      uint64_t v80 = v129;
      uint64_t v81 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v149 = sub_10016414C(v81, v82, (uint64_t *)&v150);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      v139(v80, v31);
      *(_WORD *)(v76 + 22) = 2080;
      sub_100231074(&qword_100E91AA8, (void (*)(uint64_t))&type metadata accessor for TimeZone);
      uint64_t v83 = v128;
      uint64_t v84 = v136;
      uint64_t v85 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v149 = sub_10016414C(v85, v86, (uint64_t *)&v150);
      uint64_t v59 = v118;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      uint64_t v87 = v83;
      uint64_t v88 = (void (*)(char *, uint64_t))v122;
      (*(void (**)(char *, uint64_t))(v135 + 8))(v87, v84);
      unint64_t v89 = v134;
      _os_log_impl((void *)&_mh_execute_header, v134, (os_log_type_t)v133, "Unexpected sun event encountered. event: %s, date:%s, timeZone:%s", (uint8_t *)v76, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      uint64_t v70 = v124;
      swift_slowDealloc();

      uint64_t v90 = v143;
    }
    else
    {
      uint64_t v88 = *(void (**)(char *, uint64_t))(v142 + 8);
      uint64_t v92 = v143;
      v88(v68, v143);
      v139(v129, v31);
      (*(void (**)(char *, uint64_t))(v135 + 8))(v71, v136);

      uint64_t v90 = v92;
    }
    uint64_t v66 = v130;
    v88(v140, v90);
    uint64_t v57 = v141;
  }
  uint64_t v118 = v59;
  uint64_t v93 = v135;
  if (qword_100E627A0 != -1) {
    swift_once();
  }
  uint64_t v94 = type metadata accessor for Logger();
  sub_1002102B0(v94, (uint64_t)qword_100F51DF8);
  uint64_t v95 = v143;
  uint64_t v96 = (void (*)(char *, char *, uint64_t))v137;
  ((void (*)(char *, uint64_t, uint64_t))v137)(v66, v123, v143);
  ((void (*)(char *, uint64_t, uint64_t))v138)(v131, v70, v31);
  uint64_t v97 = v127;
  uint64_t v98 = v136;
  (*(void (**)(char *, uint64_t, uint64_t))(v93 + 16))(v127, v147, v136);
  int v99 = Logger.logObject.getter();
  os_log_type_t v100 = static os_log_type_t.error.getter();
  LODWORD(v140) = v100;
  if (os_log_type_enabled(v99, v100))
  {
    uint64_t v101 = swift_slowAlloc();
    uint64_t v138 = (void *)swift_slowAlloc();
    uint64_t v150 = (char *)v138;
    *(_DWORD *)uint64_t v101 = 136315650;
    uint64_t v134 = v99;
    v96(v126, v66, v95);
    uint64_t v102 = String.init<A>(describing:)();
    uint64_t v149 = sub_10016414C(v102, v103, (uint64_t *)&v150);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v142 + 8))(v66, v95);
    *(_WORD *)(v101 + 12) = 2080;
    sub_100231074(&qword_100E656D8, (void (*)(uint64_t))&type metadata accessor for Date);
    uint64_t v104 = v131;
    uint64_t v105 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v149 = sub_10016414C(v105, v106, (uint64_t *)&v150);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    v139(v104, v31);
    *(_WORD *)(v101 + 22) = 2080;
    uint64_t v57 = v141;
    sub_100231074(&qword_100E91AA8, (void (*)(uint64_t))&type metadata accessor for TimeZone);
    uint64_t v107 = v136;
    uint64_t v108 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v149 = sub_10016414C(v108, v109, (uint64_t *)&v150);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v93 + 8))(v97, v107);
    uint64_t v110 = v134;
    _os_log_impl((void *)&_mh_execute_header, v134, (os_log_type_t)v140, "It should not be possible to get here. event: %s, date:%s, timeZone:%s", (uint8_t *)v101, 0x20u);
    swift_arrayDestroy();
    uint64_t v111 = v139;
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v142 + 8))(v66, v95);
    uint64_t v111 = v139;
    v139(v131, v31);
    (*(void (**)(char *, uint64_t))(v93 + 8))(v97, v98);
  }
  sub_1001B1E64((void *)(v144 + OBJC_IVAR____TtC7Weather35SunriseSunsetDetailViewModelFactory_daylightStringBuilder), *(void *)(v144 + OBJC_IVAR____TtC7Weather35SunriseSunsetDetailViewModelFactory_daylightStringBuilder + 24));
  dispatch thunk of DaylightStringBuilderType.makeDaylightString(for:sunEvents:timeZone:calendar:)();
  return v111(v57, v31);
}

uint64_t sub_1009E3290@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for ComparisonCapsuleViewModel.Row(0);
  uint64_t v46 = *(void *)(v4 - 8);
  uint64_t v47 = v4;
  __chkstk_darwin(v4);
  uint64_t v6 = (uint64_t **)((char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = *a1;
  uint64_t v8 = *(void *)(*a1 + 16);
  uint64_t v9 = _swiftEmptyArrayStorage;
  if (v8)
  {
    uint64_t v42 = a1;
    uint64_t v43 = a2;
    uint64_t v50 = _swiftEmptyArrayStorage;
    swift_bridgeObjectRetain();
    sub_1007F3C38();
    uint64_t v9 = v50;
    uint64_t v44 = type metadata accessor for ComparisonCapsuleViewModel.Row.Body(0);
    uint64_t v45 = v7;
    uint64_t v10 = 0;
    do
    {
      *(void *)&long long v48 = v8;
      uint64_t v11 = (int8x16_t *)(v7 + v10);
      uint64_t v12 = *(void *)(v7 + v10 + 32);
      uint64_t v13 = *(void *)(v7 + v10 + 40);
      uint64_t v14 = *(void *)(v7 + v10 + 48);
      uint64_t v15 = v11[3].i64[1];
      uint64_t v16 = v11[4].i64[0];
      uint64_t v17 = v11[4].i64[1];
      uint64_t v18 = v11[5].i64[0];
      uint64_t v19 = v11[5].i64[1];
      uint64_t v20 = v47;
      uint64_t v21 = (int8x16_t *)((char *)v6 + *(int *)(v47 + 20));
      *uint64_t v21 = vextq_s8(v11[6], v11[6], 8uLL);
      v21[1].i64[0] = v16;
      v21[1].i64[1] = v17;
      v21[2].i64[0] = v18;
      v21[2].i64[1] = v19;
      swift_storeEnumTagMultiPayload();
      *uint64_t v6 = v14;
      v6[1] = v15;
      uint64_t v6[2] = v12;
      v6[3] = v13;
      v6[4] = v12;
      v6[5] = v13;
      *((unsigned char *)v6 + *(int *)(v20 + 24)) = 3;
      uint64_t v50 = v9;
      unint64_t v23 = v9[2];
      unint64_t v22 = v9[3];
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v23 >= v22 >> 1)
      {
        sub_1007F3C38();
        uint64_t v9 = v50;
      }
      _OWORD v9[2] = v23 + 1;
      sub_1009E4DD8((uint64_t)v6, (uint64_t)v9+ ((*(unsigned __int8 *)(v46 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v46 + 80))+ *(void *)(v46 + 72) * v23, (void (*)(void))type metadata accessor for ComparisonCapsuleViewModel.Row);
      v10 += 80;
      uint64_t v8 = v48 - 1;
      uint64_t v7 = v45;
    }
    while ((void)v48 != 1);
    swift_bridgeObjectRelease();
    a1 = v42;
    a2 = v43;
  }
  if (qword_100E628F8 != -1) {
    swift_once();
  }
  uint64_t v24 = qword_100F52120;
  swift_bridgeObjectRetain();
  sub_100786C7C(3, (uint64_t)v9, v24, v49);
  sub_1009E4E38((uint64_t)v49, (uint64_t)&v50);
  uint64_t v25 = v51;
  if (v51)
  {
    uint64_t v26 = v50;
    long long v48 = v52;
    uint64_t v27 = v53;
    id v28 = [self mainBundle];
    v54._uint64_t countAndFlagsBits = 0xD000000000000029;
    v54._uint64_t object = (void *)0x8000000100CB9840;
    v29._uint64_t object = (void *)0x8000000100CB9820;
    v29._uint64_t countAndFlagsBits = 0xD00000000000001BLL;
    v30._uint64_t countAndFlagsBits = 0;
    v30._uint64_t object = (void *)0xE000000000000000;
    Swift::String v31 = NSLocalizedString(_:tableName:bundle:value:comment:)(v29, (Swift::String_optional)0, (NSBundle)v28, v30, v54);

    uint64_t v32 = (int *)type metadata accessor for ConditionDetailPlatterViewModel(0);
    uint64_t v33 = a2 + v32[6];
    uint64_t v34 = (uint64_t)a1 + *(int *)(type metadata accessor for SunriseSunsetMonthlyViewModel() + 20);
    uint64_t v35 = type metadata accessor for WeatherDescription();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 16))(v33, v34, v35);
    _s7Weather24LocationCompositionStateOwst_0(v33, 0, 1, v35);
    uint64_t v36 = a2 + v32[7];
    *(_OWORD *)uint64_t v36 = 0u;
    *(_OWORD *)(v36 + 16) = 0u;
    *(void *)(v36 + 32) = v26;
    *(void *)(v36 + 40) = v25;
    *(_OWORD *)(v36 + 48) = v48;
    *(void *)(v36 + 64) = v27;
    uint64_t v37 = type metadata accessor for ConditionDetailPlatterViewModel.Body(0);
    *(void *)(v36 + 72) = 0;
    *(void *)(v36 + 80) = 0;
    *(_WORD *)(v36 + 88) = 0;
    swift_storeEnumTagMultiPayload();
    _s7Weather24LocationCompositionStateOwst_0(a2 + v32[8], 1, 1, v37);
    *(_OWORD *)a2 = xmmword_100C27710;
    *(unsigned char *)(a2 + 16) = 2;
    *(Swift::String *)(a2 + 24) = v31;
    *(unsigned char *)(a2 + v32[9]) = 0;
    *(unsigned char *)(a2 + v32[10]) = 0;
    uint64_t v38 = a2;
    uint64_t v39 = 0;
    uint64_t v40 = (uint64_t)v32;
  }
  else
  {
    uint64_t v40 = type metadata accessor for ConditionDetailPlatterViewModel(0);
    uint64_t v38 = a2;
    uint64_t v39 = 1;
  }
  return _s7Weather24LocationCompositionStateOwst_0(v38, v39, 1, v40);
}

uint64_t sub_1009E36D8()
{
  uint64_t v0 = type metadata accessor for DateComponents();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10017DF08(&qword_100E65238);
  uint64_t v4 = type metadata accessor for Calendar.Component();
  uint64_t v5 = *(void *)(v4 - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_100C251B0;
  (*(void (**)(unint64_t, void, uint64_t))(v5 + 104))(v7 + v6, enum case for Calendar.Component.hour(_:), v4);
  sub_1000EEDB0(v7);
  Calendar.dateComponents(_:from:to:)();
  swift_bridgeObjectRelease();
  uint64_t v8 = DateComponents.hour.getter();
  LOBYTE(v7) = v9;
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  if ((v7 & 1) == 0) {
    return v8;
  }
  Date.timeIntervalSince1970.getter();
  double v11 = v10;
  uint64_t result = Date.timeIntervalSince1970.getter();
  double v14 = (v11 - v13) / 3600.0;
  if ((~*(void *)&v14 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_8;
  }
  if (v14 <= -9.22337204e18)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  if (v14 < 9.22337204e18) {
    return (uint64_t)v14;
  }
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_1009E3908()
{
  uint64_t v0 = type metadata accessor for DateComponents();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10017DF08(&qword_100E65238);
  uint64_t v4 = type metadata accessor for Calendar.Component();
  uint64_t v5 = *(void *)(v4 - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_100C251B0;
  (*(void (**)(unint64_t, void, uint64_t))(v5 + 104))(v7 + v6, enum case for Calendar.Component.day(_:), v4);
  sub_1000EEDB0(v7);
  Calendar.dateComponents(_:from:to:)();
  swift_bridgeObjectRelease();
  uint64_t v8 = DateComponents.day.getter();
  LOBYTE(v7) = v9;
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  if ((v7 & 1) == 0) {
    return v8;
  }
  Date.timeIntervalSince1970.getter();
  double v11 = v10;
  uint64_t result = Date.timeIntervalSince1970.getter();
  double v14 = (v11 - v13) / 7200.0;
  if ((~*(void *)&v14 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_8;
  }
  if (v14 <= -9.22337204e18)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  if (v14 < 9.22337204e18) {
    return (uint64_t)v14;
  }
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_1009E3B38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, _DWORD *a7@<X6>, char *a8@<X8>)
{
  uint64_t v177 = a7;
  uint64_t v11 = v8;
  uint64_t v188 = a6;
  uint64_t v198 = a5;
  uint64_t v178 = a3;
  uint64_t v223 = a2;
  uint64_t v199 = a8;
  uint64_t v14 = sub_10017DF08(&qword_100E66E28);
  uint64_t v15 = sub_100109308(v14);
  __chkstk_darwin(v15);
  sub_100109314();
  sub_100109328(v16);
  uint64_t v17 = type metadata accessor for OverviewTableViewModel();
  uint64_t v18 = sub_100109308(v17);
  __chkstk_darwin(v18);
  sub_100109314();
  sub_100109328(v19);
  uint64_t v184 = type metadata accessor for Location();
  sub_100179C0C();
  uint64_t v183 = v20;
  __chkstk_darwin(v21);
  sub_100109314();
  sub_100109328(v22);
  uint64_t v23 = type metadata accessor for AttributeContainer();
  uint64_t v24 = sub_100109308(v23);
  __chkstk_darwin(v24);
  sub_100109314();
  sub_100109328(v25);
  uint64_t v26 = type metadata accessor for AttributedString();
  uint64_t v27 = sub_100109308(v26);
  __chkstk_darwin(v27);
  sub_100163E88();
  uint64_t v208 = type metadata accessor for PolarType();
  sub_100179C0C();
  uint64_t v207 = v28;
  __chkstk_darwin(v29);
  sub_100162EF8();
  uint64_t v181 = v30;
  sub_1001626D4();
  __chkstk_darwin(v31);
  sub_100128F8C();
  uint64_t v195 = v32;
  uint64_t v33 = sub_10017DF08(&qword_100E921E8);
  uint64_t v34 = sub_100109308(v33);
  __chkstk_darwin(v34);
  sub_100109314();
  sub_100109328(v35);
  uint64_t v194 = type metadata accessor for SunriseSunsetDetailChartViewModel();
  sub_100179C0C();
  uint64_t v182 = v36;
  __chkstk_darwin(v37);
  sub_100162EF8();
  uint64_t v193 = v38;
  sub_1001626D4();
  __chkstk_darwin(v39);
  sub_100128F8C();
  sub_100109328(v40);
  uint64_t v180 = type metadata accessor for SunriseSunsetEvent();
  sub_100179C0C();
  uint64_t v179 = v41;
  __chkstk_darwin(v42);
  sub_100109314();
  sub_100109328(v43);
  uint64_t v211 = type metadata accessor for Date();
  sub_100179C0C();
  uint64_t v45 = v44;
  __chkstk_darwin(v46);
  sub_100162EF8();
  uint64_t v210 = v47;
  sub_1001626D4();
  __chkstk_darwin(v48);
  sub_100128F8C();
  uint64_t v220 = (void (*)(uint64_t))v49;
  char v222 = (char *)type metadata accessor for SunEvents();
  sub_100179C0C();
  uint64_t v215 = v50;
  __chkstk_darwin(v51);
  sub_100109314();
  uint64_t v219 = v52;
  uint64_t v224 = type metadata accessor for DayWeather();
  sub_100179C0C();
  uint64_t v54 = v53;
  __chkstk_darwin(v55);
  sub_100162EF8();
  uint64_t v209 = v56;
  sub_1001626D4();
  __chkstk_darwin(v57);
  sub_100128F8C();
  uint64_t v225 = v58;
  uint64_t v59 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  uint64_t v60 = sub_100109308(v59);
  __chkstk_darwin(v60);
  sub_100162EF8();
  uint64_t v218 = v61;
  sub_1001626D4();
  __chkstk_darwin(v62);
  sub_100128F8C();
  sub_100109328(v63);
  uint64_t v191 = type metadata accessor for SunriseSunsetPolarSunEventStringBuilder();
  sub_100179C0C();
  uint64_t v190 = v64;
  __chkstk_darwin(v65);
  sub_100109314();
  uint64_t v189 = v66;
  uint64_t v67 = sub_10017DF08(&qword_100E6B6C8);
  uint64_t v68 = sub_100109308(v67);
  __chkstk_darwin(v68);
  sub_100162EF8();
  uint64_t v169 = v69;
  sub_1001626D4();
  __chkstk_darwin(v70);
  sub_100128F8C();
  sub_100109328(v71);
  uint64_t v72 = type metadata accessor for TimeZone();
  sub_100179C0C();
  uint64_t v74 = v73;
  __chkstk_darwin(v75);
  sub_100162EF8();
  uint64_t v171 = v76;
  sub_1001626D4();
  __chkstk_darwin(v77);
  unint64_t v79 = (char *)&v168 - v78;
  uint64_t v175 = type metadata accessor for Calendar();
  sub_100179C0C();
  uint64_t v174 = v80;
  __chkstk_darwin(v81);
  sub_10016279C();
  Location.timeZone.getter();
  uint64_t v192 = v9;
  static Calendar.currentCalendar(with:)();
  unint64_t v82 = *(void (**)(void))(v74 + 8);
  uint64_t v172 = v79;
  uint64_t v205 = v72;
  uint64_t v204 = v74 + 8;
  Swift::String v203 = v82;
  sub_1001629F8();
  v83();
  uint64_t v186 = a4;
  uint64_t v84 = sub_1009DF02C(a4);
  uint64_t result = sub_1002B422C(7, v84);
  uint64_t v168 = result;
  uint64_t v217 = v88;
  uint64_t v202 = v11;
  uint64_t v201 = a1;
  uint64_t v196 = v10;
  uint64_t v173 = v45;
  uint64_t v221 = v54;
  if (v86 == v87 >> 1)
  {
    uint64_t v89 = 1;
    uint64_t v90 = v211;
LABEL_13:
    uint64_t v117 = v200;
    uint64_t v118 = v224;
    _s7Weather24LocationCompositionStateOwst_0(v200, v89, 1, v224);
    swift_unknownObjectRelease();
    uint64_t v119 = *(void (**)(uint64_t))(v190 + 16);
    uint64_t v216 = (void (*)(void, void))(v11
                                               + OBJC_IVAR____TtC7Weather35SunriseSunsetDetailViewModelFactory_sunriseSunsetPolarSunEventStringBuilder);
    v119(v189);
    uint64_t v120 = v117;
    uint64_t v121 = v118;
    uint64_t v122 = v169;
    sub_1001262FC(v120, v169, &qword_100E6B6C8);
    if (_s7Weather24LocationCompositionStateOwet_0(v122, 1, v121) == 1)
    {
      sub_100178110(v122, &qword_100E6B6C8);
      uint64_t v123 = 1;
      uint64_t v124 = v170;
    }
    else
    {
      uint64_t v124 = v170;
      DayWeather.date.getter();
      sub_100162F0C();
      v126(v125);
      uint64_t v123 = 0;
    }
    _s7Weather24LocationCompositionStateOwst_0(v124, v123, 1, v90);
    Location.timeZone.getter();
    uint64_t v224 = SunriseSunsetPolarSunEventStringBuilder.makeTitle(currentDate:nextEvent:timeZone:)();
    uint64_t v221 = v127;
    uint64_t v128 = v203;
    sub_1001629F8();
    v128(v129);
    sub_100178110(v124, (uint64_t *)&unk_100E73CA0);
    sub_100162F0C();
    v131(v130);
    uint64_t v132 = v11;
    Location.coordinate.getter();
    Location.timeZone.getter();
    SunriseSunsetEventCalculator.nextEvent(coordinate:date:timeZone:)();
    sub_1001629F8();
    v128(v133);
    uint64_t v134 = SunriseSunsetEvent.headerDescription.getter();
    uint64_t v219 = v135;
    uint64_t v220 = (void (*)(uint64_t))v134;
    uint64_t v136 = SunriseSunsetEvent.symbolIconName.getter();
    uint64_t v217 = v137;
    uint64_t v218 = v136;
    uint64_t v138 = *(void *)(v11 + OBJC_IVAR____TtC7Weather35SunriseSunsetDetailViewModelFactory_chartViewModelFactory + 24);
    uint64_t v139 = *(void *)(v132 + OBJC_IVAR____TtC7Weather35SunriseSunsetDetailViewModelFactory_chartViewModelFactory + 32);
    sub_1001B1E64((void *)(v132 + OBJC_IVAR____TtC7Weather35SunriseSunsetDetailViewModelFactory_chartViewModelFactory), *(void *)(v132 + OBJC_IVAR____TtC7Weather35SunriseSunsetDetailViewModelFactory_chartViewModelFactory + 24));
    uint64_t v140 = v176;
    _s7Weather24LocationCompositionStateOwst_0(v176, 1, 1, (uint64_t)v222);
    uint64_t v141 = v201;
    sub_1003BD5F4(v140, v198, v138, v139, v206);
    sub_100178110(v140, &qword_100E921E8);
    LODWORD(v225) = *v177;
    uint64_t v142 = v207;
    uint64_t v143 = (void (**)(uint64_t, uint64_t, uint64_t))(v207 + 104);
    uint64_t v144 = *(void (**)(uint64_t))(v207 + 104);
    uint64_t v145 = v195;
    v144(v195);
    uint64_t v213 = v144;
    uint64_t v214 = v143;
    uint64_t v146 = v210;
    CurrentWeather.date.getter();
    Location.timeZone.getter();
    uint64_t v215 = SunriseSunsetPolarSunEventStringBuilder.makeString(for:currentDate:nextEvent:timeZone:)();
    unint64_t v212 = v147;
    sub_100162F0C();
    v149(v148);
    (*(void (**)(uint64_t, uint64_t))(v173 + 8))(v146, v211);
    uint64_t v150 = v141;
    uint64_t v151 = *(void (**)(void, void))(v142 + 8);
    uint64_t v207 = v142 + 8;
    uint64_t v216 = v151;
    uint64_t v152 = v208;
    v151(v145, v208);
    uint64_t v153 = sub_10017DF08(&qword_100E92130);
    char v222 = &v199[*(int *)(v153 + 48)];
    ((void (*)(uint64_t, void, uint64_t))v144)(v145, v225, v152);
    sub_10019FBD8();
    v155(v154);
    Location.timeZone.getter();
    AttributeContainer.init()();
    AttributedString.init(_:attributes:)();
    sub_10017BAF4();
    uint64_t v215 = static NSDateFormatter.prevailingPeriodSymbols.getter();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v183 + 16))(v197, v150, v184);
    uint64_t v156 = v182;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v182 + 16))(v193, v206, v194);
    sub_1001B1E64((void *)(v202 + OBJC_IVAR____TtC7Weather35SunriseSunsetDetailViewModelFactory_sunriseSunsetTableViewModelFactory), *(void *)(v202+ OBJC_IVAR____TtC7Weather35SunriseSunsetDetailViewModelFactory_sunriseSunsetTableViewModelFactory+ 24));
    Location.timeZone.getter();
    ((void (*)(uint64_t, void, uint64_t))v213)(v181, v225, v208);
    uint64_t v157 = v185;
    dispatch thunk of SunriseSunsetTableViewModelFactoryType.makePolarViewModel(from:forecast:timeZone:calendar:type:)();
    sub_100162F0C();
    v159(v158);
    sub_100162F0C();
    v161(v160);
    uint64_t v162 = v187;
    sub_1001262FC(v188, v187, &qword_100E66E28);
    sub_1007BA2CC((uint64_t)v220, v219, v218, v217, v224, v199, v221, v196, v215, v197, v193, v157, v162);
    uint64_t v163 = type metadata accessor for SunriseSunsetDetailPreprocessedDataModel();
    sub_1009E3290((uint64_t *)(v198 + *(int *)(v163 + 24)), (uint64_t)v222);
    (*(void (**)(uint64_t, uint64_t))(v156 + 8))(v206, v194);
    sub_100162F0C();
    v165(v164);
    sub_100178110(v200, &qword_100E6B6C8);
    sub_100162F0C();
    v167(v166);
    type metadata accessor for SunriseSunsetDetailViewModel();
    return swift_storeEnumTagMultiPayload();
  }
  else
  {
    uint64_t v91 = v86;
    int64_t v92 = v87 >> 1;
    v215 += 8;
    uint64_t v216 = (void (*)(void, void))(v54 + 16);
    uint64_t v213 = (void (*)(uint64_t))(v45 + 8);
    uint64_t v214 = (void (**)(uint64_t, uint64_t, uint64_t))(v45 + 16);
    uint64_t v93 = v54 + 8;
    uint64_t v90 = v211;
    uint64_t v94 = v209;
    unint64_t v212 = v87 >> 1;
    while (v91 < v92)
    {
      uint64_t v95 = *(void (**)(uint64_t))(v54 + 16);
      sub_1001A3584();
      v95(v96);
      DayWeather.sun.getter();
      uint64_t v97 = v94;
      uint64_t v98 = v93;
      uint64_t v99 = v90;
      uint64_t v100 = v218;
      SunEvents.sunset.getter();
      sub_100162F0C();
      v102(v101);
      int v103 = _s7Weather24LocationCompositionStateOwet_0(v100, 1, v99);
      uint64_t v104 = v100;
      uint64_t v90 = v99;
      uint64_t v93 = v98;
      uint64_t v94 = v97;
      uint64_t v105 = v224;
      sub_100178110(v104, (uint64_t *)&unk_100E73CA0);
      sub_1001A3584();
      v95(v106);
      uint64_t v107 = v220;
      (*v214)((uint64_t)v220, v223, v90);
      if (v103 == 1)
      {
        sub_100162F0C();
        v109(v108);
        uint64_t v110 = sub_100185714();
        v107(v110);
      }
      else
      {
        DayWeather.date.getter();
        char v111 = static Date.> infix(_:_:)();
        uint64_t v107 = *(void (**)(uint64_t))v213;
        uint64_t v90 = v211;
        sub_1001629F8();
        v107(v112);
        uint64_t v94 = v209;
        sub_1001629F8();
        v107(v113);
        uint64_t v114 = sub_100185714();
        v107(v114);
        if (v111)
        {
          sub_1001627D4();
          v116(v115);
          uint64_t v89 = 0;
          goto LABEL_12;
        }
        uint64_t v105 = v224;
      }
      ++v91;
      uint64_t result = ((uint64_t (*)(uint64_t, uint64_t))v107)(v225, v105);
      int64_t v92 = v212;
      uint64_t v54 = v221;
      if (v212 == v91)
      {
        uint64_t v89 = 1;
LABEL_12:
        uint64_t v11 = v202;
        goto LABEL_13;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1009E4A44()
{
  type metadata accessor for SunriseSunsetEventCalculator();
  sub_100162E4C();
  sub_100162F0C();
  v1();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + OBJC_IVAR____TtC7Weather35SunriseSunsetDetailViewModelFactory_chartViewModelFactory);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + OBJC_IVAR____TtC7Weather35SunriseSunsetDetailViewModelFactory_viewDataCache);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + OBJC_IVAR____TtC7Weather35SunriseSunsetDetailViewModelFactory_preprocessedDataProvider);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + OBJC_IVAR____TtC7Weather35SunriseSunsetDetailViewModelFactory_daylightStringBuilder);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + OBJC_IVAR____TtC7Weather35SunriseSunsetDetailViewModelFactory_sunElevationCalculator);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + OBJC_IVAR____TtC7Weather35SunriseSunsetDetailViewModelFactory_sunriseSunsetTableViewModelFactory);
  type metadata accessor for SunriseSunsetPolarSunEventStringBuilder();
  sub_100162E4C();
  sub_100162F0C();
  v2();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + OBJC_IVAR____TtC7Weather35SunriseSunsetDetailViewModelFactory_newsArticleComponentViewModelFactory);
  return v0;
}

uint64_t sub_1009E4B44()
{
  sub_1009E4A44();

  return swift_deallocClassInstance();
}

uint64_t sub_1009E4B9C()
{
  return type metadata accessor for SunriseSunsetDetailViewModelFactory();
}

uint64_t type metadata accessor for SunriseSunsetDetailViewModelFactory()
{
  uint64_t result = qword_100EA7E88;
  if (!qword_100EA7E88) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1009E4BEC()
{
  uint64_t result = type metadata accessor for SunriseSunsetEventCalculator();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for SunriseSunsetPolarSunEventStringBuilder();
    if (v2 <= 0x3F)
    {
      uint64_t result = swift_updateClassMetadata2();
      if (!result) {
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_1009E4CD8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SunriseSunsetDetailInput(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1009E4D3C(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  sub_100162F0C();
  v3();
  return a1;
}

uint64_t sub_1009E4D90(char *a1)
{
  return sub_1009E1218(a1, *(char **)(v1 + 16), *(unsigned __int8 *)(v1 + 24), *(void *)(v1 + 32)) & 1;
}

uint64_t sub_1009E4DB8()
{
  return sub_1009E19EC() & 1;
}

uint64_t sub_1009E4DD8(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(a2, a1);
  return a2;
}

uint64_t sub_1009E4E38(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10017DF08(&qword_100E65248);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1009E4EA0(uint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t v148 = type metadata accessor for Date();
  sub_100179C0C();
  uint64_t v5 = v4;
  __chkstk_darwin(v6);
  unint64_t v147 = (char *)&v126 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001626D4();
  uint64_t v9 = __chkstk_darwin(v8);
  uint64_t v17 = sub_100185EAC(v9, v10, v11, v12, v13, v14, v15, v16, v126);
  sub_100179C0C();
  uint64_t v137 = v18;
  __chkstk_darwin(v19);
  sub_100162EF8();
  uint64_t v134 = v20;
  sub_1001626D4();
  __chkstk_darwin(v21);
  uint64_t v153 = (char *)&v126 - v22;
  sub_1001626D4();
  __chkstk_darwin(v23);
  uint64_t v145 = (char *)&v126 - v24;
  sub_1001626D4();
  __chkstk_darwin(v25);
  sub_100128F8C();
  uint64_t v149 = v26;
  Swift::Int v27 = a1[1];
  Swift::Int v28 = _minimumMergeRunLength(_:)(v27);
  if (v28 >= v27)
  {
    if ((v27 & 0x8000000000000000) == 0)
    {
      if (v27) {
        sub_1009E5A7C(0, v27, 1, a1);
      }
      return;
    }
    goto LABEL_145;
  }
  Swift::Int v29 = v28;
  uint64_t v128 = sub_100AD5494(v27 / 2);
  unint64_t v136 = v30;
  Swift::Int v129 = v27;
  if (v27 <= 0)
  {
LABEL_106:
    uint64_t v32 = (char *)_swiftEmptyArrayStorage;
    unint64_t v69 = _swiftEmptyArrayStorage[2];
LABEL_107:
    if (v69 < 2)
    {
      uint64_t v119 = v129;
LABEL_120:
      swift_bridgeObjectRelease();
      if (v119 >= -1) {
        goto LABEL_121;
      }
      goto LABEL_149;
    }
    uint64_t v120 = *a1;
    uint64_t v119 = v129;
    while (1)
    {
      unint64_t v121 = v69 - 2;
      if (v69 < 2) {
        break;
      }
      if (!v120) {
        goto LABEL_153;
      }
      uint64_t v122 = v32;
      uint64_t v123 = *(void *)&v32[16 * v121 + 32];
      a1 = *(uint64_t **)&v32[16 * v69 + 24];
      sub_1009E5DA8(v120 + v137[9] * v123, v120 + v137[9] * *(void *)&v32[16 * v69 + 16], v120 + v137[9] * (void)a1, v136);
      if (v2) {
        goto LABEL_104;
      }
      if ((uint64_t)a1 < v123) {
        goto LABEL_140;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v122 = sub_10031515C();
      }
      if (v121 >= *((void *)v122 + 2)) {
        goto LABEL_141;
      }
      uint64_t v124 = &v122[16 * v121 + 32];
      *(void *)uint64_t v124 = v123;
      *((void *)v124 + 1) = a1;
      unint64_t v125 = *((void *)v122 + 2);
      if (v69 > v125) {
        goto LABEL_142;
      }
      memmove(&v122[16 * v69 + 16], &v122[16 * v69 + 32], 16 * (v125 - v69));
      uint64_t v32 = v122;
      *((void *)v122 + 2) = v125 - 1;
      unint64_t v69 = v125 - 1;
      if (v125 <= 2) {
        goto LABEL_120;
      }
    }
LABEL_139:
    __break(1u);
LABEL_140:
    __break(1u);
LABEL_141:
    __break(1u);
LABEL_142:
    __break(1u);
LABEL_143:
    __break(1u);
LABEL_144:
    __break(1u);
LABEL_145:
    __break(1u);
LABEL_146:
    __break(1u);
LABEL_147:
    __break(1u);
LABEL_148:
    __break(1u);
LABEL_149:
    __break(1u);
LABEL_150:
    __break(1u);
LABEL_151:
    __break(1u);
LABEL_152:
    __break(1u);
LABEL_153:
    __break(1u);
    return;
  }
  Swift::Int v130 = v29;
  uint64_t v31 = 0;
  uint64_t v143 = (void (**)(void))(v5 + 8);
  uint64_t v144 = v137 + 2;
  uint64_t v142 = (void (**)(void))(v137 + 1);
  uint64_t v157 = (void (**)(void))(v137 + 4);
  uint64_t v32 = (char *)_swiftEmptyArrayStorage;
  uint64_t v150 = a1;
  uint64_t v152 = v17;
  while (1)
  {
    uint64_t v33 = v31 + 1;
    uint64_t v133 = v32;
    uint64_t v135 = v31;
    if (v31 + 1 >= v27)
    {
      uint64_t v34 = v31;
      uint64_t v44 = v130;
    }
    else
    {
      uint64_t v34 = *a1;
      uint64_t v155 = v137[9];
      uint64_t v35 = v155;
      uint64_t v156 = (void (*)(void))(v31 + 1);
      uint64_t v36 = (void (*)(void))v137[2];
      v36();
      Swift::Int v154 = v27;
      uint64_t v151 = v36;
      ((void (*)(char *, uint64_t, uint64_t))v36)(v145, v34 + v35 * v31, v17);
      DayWeather.date.getter();
      DayWeather.date.getter();
      LODWORD(v141) = static Date.< infix(_:_:)();
      uint64_t v37 = *v143;
      sub_100163348();
      v37();
      uint64_t v140 = v37;
      sub_100163348();
      v37();
      uint64_t v38 = (void (*)(void))v137[1];
      Swift::Int v27 = v154;
      uint64_t v17 = (uint64_t)v142;
      sub_100163348();
      v38();
      uint64_t v139 = v38;
      sub_100163348();
      v38();
      uint64_t v33 = v31 + 2;
      uint64_t v131 = v34;
      if (v31 + 2 >= v27)
      {
        a1 = v150;
      }
      else
      {
        uint64_t v127 = v2;
        uint64_t v138 = v155 * (void)v156;
        uint64_t v39 = v34;
        Swift::Int v132 = v155 * v33;
        while (1)
        {
          uint64_t v40 = v33;
          uint64_t v17 = v149;
          uint64_t v41 = v151;
          sub_10019FBD8();
          v41();
          sub_10019FBD8();
          v41();
          uint64_t v34 = v146;
          DayWeather.date.getter();
          DayWeather.date.getter();
          LODWORD(v156) = static Date.< infix(_:_:)();
          uint64_t v42 = v140;
          sub_1001629F8();
          v42();
          sub_1001629F8();
          v42();
          uint64_t v43 = v139;
          sub_1001629F8();
          v43();
          sub_1001629F8();
          v43();
          if ((v141 ^ v156)) {
            break;
          }
          uint64_t v33 = v40 + 1;
          Swift::Int v27 = v154;
          v39 += v155;
          if (v40 + 1 >= v154)
          {
            uint64_t v33 = v154;
            a1 = v150;
            uint64_t v2 = v127;
            goto LABEL_13;
          }
        }
        a1 = v150;
        uint64_t v2 = v127;
        uint64_t v33 = v40;
        Swift::Int v27 = v154;
      }
LABEL_13:
      sub_10018ABC8();
      if (v141)
      {
        if (v33 < v34) {
          goto LABEL_146;
        }
        if (v34 < v33)
        {
          uint64_t v17 = 0;
          uint64_t v45 = v155;
          uint64_t v46 = v155 * (v33 - 1);
          uint64_t v47 = v33 * v155;
          uint64_t v48 = v34 * v155;
          uint64_t v151 = (void (*)(void))v33;
          do
          {
            if (v34 != v33 + v17 - 1)
            {
              uint64_t v49 = v131;
              if (!v131) {
                goto LABEL_152;
              }
              unint64_t v50 = v131 + v48;
              uint64_t v141 = v131 + v46;
              uint64_t v156 = *v157;
              sub_1001627D4();
              v51();
              if (v48 < v46 || v50 >= v49 + v47)
              {
                swift_arrayInitWithTakeFrontToBack();
              }
              else if (v48 != v46)
              {
                swift_arrayInitWithTakeBackToFront();
              }
              sub_1001627D4();
              v53();
              a1 = v150;
              uint64_t v33 = (uint64_t)v151;
              uint64_t v45 = v155;
            }
            ++v34;
            --v17;
            v46 -= v45;
            v47 -= v45;
            v48 += v45;
          }
          while (v34 < v33 + v17);
          sub_10018ABC8();
          Swift::Int v27 = v154;
        }
      }
    }
    if (v33 < v27)
    {
      if (__OFSUB__(v33, v34)) {
        goto LABEL_144;
      }
      if (v33 - v34 < v44)
      {
        if (__OFADD__(v34, v44)) {
          goto LABEL_147;
        }
        if (v34 + v44 >= v27) {
          Swift::Int v54 = v27;
        }
        else {
          Swift::Int v54 = v34 + v44;
        }
        if (v54 < v34) {
          goto LABEL_148;
        }
        if (v33 != v54)
        {
          uint64_t v127 = v2;
          uint64_t v55 = (void (*)(void))v137[9];
          uint64_t v138 = v137[2];
          uint64_t v139 = v55;
          uint64_t v56 = (void)v55 * (v33 - 1);
          uint64_t v57 = (void (*)(void))(v33 * (void)v55);
          Swift::Int v132 = v54;
          do
          {
            uint64_t v58 = 0;
            uint64_t v151 = (void (*)(void))v33;
            uint64_t v140 = v57;
            uint64_t v141 = v56;
            while (1)
            {
              uint64_t v59 = *a1;
              Swift::Int v154 = (Swift::Int)v57 + v58;
              uint64_t v155 = v34;
              uint64_t v60 = (uint64_t)v57 + v58 + v59;
              uint64_t v61 = (void (*)(char *, uint64_t, uint64_t))v138;
              ((void (*)(uint64_t, uint64_t, uint64_t))v138)(v149, v60, v17);
              v61(v145, v56 + v58 + v59, v17);
              DayWeather.date.getter();
              DayWeather.date.getter();
              LODWORD(v156) = static Date.< infix(_:_:)();
              uint64_t v62 = *v143;
              sub_1001629EC();
              v62();
              uint64_t v17 = v152;
              sub_1001629EC();
              v62();
              uint64_t v63 = *v142;
              sub_1001629EC();
              v63();
              sub_1001629EC();
              v63();
              if ((v156 & 1) == 0) {
                break;
              }
              if (!*a1) {
                goto LABEL_150;
              }
              uint64_t v57 = v140;
              uint64_t v56 = v141;
              uint64_t v64 = *v157;
              sub_1001627D4();
              v64();
              swift_arrayInitWithTakeFrontToBack();
              sub_1001627D4();
              v64();
              v58 -= (uint64_t)v139;
              uint64_t v34 = v155 + 1;
              a1 = v150;
              uint64_t v65 = v151;
              if (v151 == (void (*)(void))(v155 + 1)) {
                goto LABEL_46;
              }
            }
            uint64_t v65 = v151;
            uint64_t v57 = v140;
            uint64_t v56 = v141;
LABEL_46:
            uint64_t v33 = (uint64_t)v65 + 1;
            v56 += (uint64_t)v139;
            uint64_t v57 = (void (*)(void))((char *)v139 + (void)v57);
            uint64_t v34 = v135;
          }
          while (v33 != v132);
          uint64_t v33 = v132;
          uint64_t v2 = v127;
        }
      }
    }
    if (v33 < v34) {
      goto LABEL_143;
    }
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v151 = (void (*)(void))v33;
    if (isUniquelyReferenced_nonNull_native) {
      uint64_t v32 = v133;
    }
    else {
      uint64_t v32 = sub_1001AA1B0(0, *((void *)v133 + 2) + 1, 1, v133);
    }
    unint64_t v68 = *((void *)v32 + 2);
    unint64_t v67 = *((void *)v32 + 3);
    unint64_t v69 = v68 + 1;
    if (v68 >= v67 >> 1) {
      uint64_t v32 = sub_1001AA1B0((char *)(v67 > 1), v68 + 1, 1, v32);
    }
    *((void *)v32 + 2) = v69;
    uint64_t v70 = v32 + 32;
    uint64_t v71 = (uint64_t *)&v32[16 * v68 + 32];
    uint64_t v72 = v151;
    *uint64_t v71 = v34;
    v71[1] = (uint64_t)v72;
    if (v68) {
      break;
    }
    unint64_t v69 = 1;
    uint64_t v17 = v152;
LABEL_97:
    Swift::Int v27 = a1[1];
    uint64_t v31 = (uint64_t)v151;
    if ((uint64_t)v151 >= v27) {
      goto LABEL_107;
    }
  }
  uint64_t v17 = v152;
  while (1)
  {
    unint64_t v73 = v69 - 1;
    if (v69 >= 4)
    {
      uint64_t v78 = &v70[16 * v69];
      uint64_t v79 = *((void *)v78 - 8);
      uint64_t v80 = *((void *)v78 - 7);
      BOOL v84 = __OFSUB__(v80, v79);
      uint64_t v81 = v80 - v79;
      if (v84) {
        goto LABEL_128;
      }
      uint64_t v83 = *((void *)v78 - 6);
      uint64_t v82 = *((void *)v78 - 5);
      BOOL v84 = __OFSUB__(v82, v83);
      uint64_t v76 = v82 - v83;
      char v77 = v84;
      if (v84) {
        goto LABEL_129;
      }
      unint64_t v85 = v69 - 2;
      uint64_t v86 = &v70[16 * v69 - 32];
      uint64_t v88 = *(void *)v86;
      uint64_t v87 = *((void *)v86 + 1);
      BOOL v84 = __OFSUB__(v87, v88);
      uint64_t v89 = v87 - v88;
      if (v84) {
        goto LABEL_130;
      }
      BOOL v84 = __OFADD__(v76, v89);
      uint64_t v90 = v76 + v89;
      if (v84) {
        goto LABEL_132;
      }
      if (v90 >= v81)
      {
        uint64_t v108 = &v70[16 * v73];
        uint64_t v110 = *(void *)v108;
        uint64_t v109 = *((void *)v108 + 1);
        BOOL v84 = __OFSUB__(v109, v110);
        uint64_t v111 = v109 - v110;
        if (v84) {
          goto LABEL_138;
        }
        BOOL v101 = v76 < v111;
        goto LABEL_86;
      }
    }
    else
    {
      if (v69 != 3)
      {
        uint64_t v102 = *((void *)v32 + 4);
        uint64_t v103 = *((void *)v32 + 5);
        BOOL v84 = __OFSUB__(v103, v102);
        uint64_t v95 = v103 - v102;
        char v96 = v84;
        goto LABEL_80;
      }
      uint64_t v75 = *((void *)v32 + 4);
      uint64_t v74 = *((void *)v32 + 5);
      BOOL v84 = __OFSUB__(v74, v75);
      uint64_t v76 = v74 - v75;
      char v77 = v84;
    }
    if (v77) {
      goto LABEL_131;
    }
    unint64_t v85 = v69 - 2;
    uint64_t v91 = &v70[16 * v69 - 32];
    uint64_t v93 = *(void *)v91;
    uint64_t v92 = *((void *)v91 + 1);
    BOOL v94 = __OFSUB__(v92, v93);
    uint64_t v95 = v92 - v93;
    char v96 = v94;
    if (v94) {
      goto LABEL_133;
    }
    uint64_t v97 = &v70[16 * v73];
    uint64_t v99 = *(void *)v97;
    uint64_t v98 = *((void *)v97 + 1);
    BOOL v84 = __OFSUB__(v98, v99);
    uint64_t v100 = v98 - v99;
    if (v84) {
      goto LABEL_135;
    }
    if (__OFADD__(v95, v100)) {
      goto LABEL_137;
    }
    if (v95 + v100 >= v76)
    {
      BOOL v101 = v76 < v100;
LABEL_86:
      if (v101) {
        unint64_t v73 = v85;
      }
      goto LABEL_88;
    }
LABEL_80:
    if (v96) {
      goto LABEL_134;
    }
    uint64_t v104 = &v70[16 * v73];
    uint64_t v106 = *(void *)v104;
    uint64_t v105 = *((void *)v104 + 1);
    BOOL v84 = __OFSUB__(v105, v106);
    uint64_t v107 = v105 - v106;
    if (v84) {
      goto LABEL_136;
    }
    if (v107 < v95) {
      goto LABEL_97;
    }
LABEL_88:
    unint64_t v112 = v73 - 1;
    if (v73 - 1 >= v69)
    {
      __break(1u);
LABEL_125:
      __break(1u);
LABEL_126:
      __break(1u);
LABEL_127:
      __break(1u);
LABEL_128:
      __break(1u);
LABEL_129:
      __break(1u);
LABEL_130:
      __break(1u);
LABEL_131:
      __break(1u);
LABEL_132:
      __break(1u);
LABEL_133:
      __break(1u);
LABEL_134:
      __break(1u);
LABEL_135:
      __break(1u);
LABEL_136:
      __break(1u);
LABEL_137:
      __break(1u);
LABEL_138:
      __break(1u);
      goto LABEL_139;
    }
    uint64_t v113 = *a1;
    if (!*a1) {
      goto LABEL_151;
    }
    uint64_t v114 = v32;
    uint64_t v115 = (uint64_t *)&v70[16 * v112];
    uint64_t v116 = *v115;
    a1 = (uint64_t *)&v70[16 * v73];
    uint64_t v117 = a1[1];
    sub_1009E5DA8(v113 + v137[9] * *v115, v113 + v137[9] * *a1, v113 + v137[9] * v117, v136);
    if (v2) {
      break;
    }
    if (v117 < v116) {
      goto LABEL_125;
    }
    if (v73 > *((void *)v114 + 2)) {
      goto LABEL_126;
    }
    *uint64_t v115 = v116;
    *(void *)&v70[16 * v112 + 8] = v117;
    unint64_t v118 = *((void *)v114 + 2);
    if (v73 >= v118) {
      goto LABEL_127;
    }
    unint64_t v69 = v118 - 1;
    memmove(&v70[16 * v73], a1 + 2, 16 * (v118 - 1 - v73));
    uint64_t v32 = v114;
    *((void *)v114 + 2) = v118 - 1;
    BOOL v101 = v118 > 2;
    a1 = v150;
    uint64_t v17 = v152;
    if (!v101) {
      goto LABEL_97;
    }
  }
  uint64_t v119 = v129;
LABEL_104:
  swift_bridgeObjectRelease();
  if (v119 < -1)
  {
    __break(1u);
    goto LABEL_106;
  }
LABEL_121:
  *(void *)(v128 + 16) = 0;
  swift_bridgeObjectRelease();
}

void sub_1009E5A7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v42 = a1;
  uint64_t v51 = type metadata accessor for Date();
  sub_100179C0C();
  uint64_t v8 = v7;
  __chkstk_darwin(v9);
  unint64_t v50 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001626D4();
  uint64_t v12 = __chkstk_darwin(v11);
  uint64_t v20 = sub_100185EAC(v12, v13, v14, v15, v16, v17, v18, v19, v40);
  sub_100179C0C();
  __chkstk_darwin(v21);
  sub_100162EF8();
  uint64_t v57 = v22;
  sub_1001626D4();
  __chkstk_darwin(v23);
  uint64_t v49 = (char *)&v40 - v24;
  sub_1001626D4();
  __chkstk_darwin(v25);
  sub_100128F8C();
  uint64_t v48 = v27;
  uint64_t v55 = a3;
  uint64_t v41 = a2;
  if (a3 != a2)
  {
    Swift::Int v29 = *(void (**)(void))(v26 + 16);
    uint64_t v28 = v26 + 16;
    uint64_t v30 = *(void *)(v28 + 56);
    uint64_t v44 = (void (**)(void))(v8 + 8);
    uint64_t v45 = v29;
    uint64_t v43 = (void (**)(void))(v28 - 8);
    uint64_t v46 = v28;
    uint64_t v47 = v20;
    uint64_t v56 = (void (**)(void))(v28 + 16);
    uint64_t v31 = v30 * (v55 - 1);
    uint64_t v52 = v30;
    uint64_t v32 = v30 * v55;
    while (2)
    {
      uint64_t v33 = 0;
      uint64_t v59 = v42;
      uint64_t v53 = v32;
      uint64_t v54 = v31;
      do
      {
        uint64_t v34 = *a4;
        uint64_t v58 = v32 + v33;
        uint64_t v35 = v45;
        ((void (*)(uint64_t, uint64_t, uint64_t))v45)(v48, v32 + v33 + v34, v20);
        sub_1001A3584();
        v35();
        DayWeather.date.getter();
        DayWeather.date.getter();
        int v60 = static Date.< infix(_:_:)();
        uint64_t v36 = *v44;
        sub_1001629EC();
        v36();
        uint64_t v20 = v47;
        sub_1001629EC();
        v36();
        uint64_t v37 = *v43;
        uint64_t v38 = v54;
        sub_1001629EC();
        v37();
        uint64_t v32 = v53;
        sub_1001629EC();
        v37();
        if ((v60 & 1) == 0) {
          break;
        }
        if (!*a4)
        {
          __break(1u);
          return;
        }
        uint64_t v39 = *v56;
        sub_1001627D4();
        v39();
        swift_arrayInitWithTakeFrontToBack();
        sub_1001627D4();
        v39();
        v33 -= v52;
        ++v59;
      }
      while (v55 != v59);
      uint64_t v31 = v38 + v52;
      v32 += v52;
      if (++v55 != v41) {
        continue;
      }
      break;
    }
  }
}

void sub_1009E5DA8(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v68 = type metadata accessor for Date();
  sub_100179C0C();
  uint64_t v9 = v8;
  __chkstk_darwin(v10);
  sub_100162EF8();
  uint64_t v67 = v11;
  sub_1001626D4();
  __chkstk_darwin(v12);
  sub_100128F8C();
  uint64_t v66 = v13;
  uint64_t v72 = type metadata accessor for DayWeather();
  uint64_t v14 = *(void *)(v72 - 8);
  uint64_t v15 = __chkstk_darwin(v72);
  uint64_t v65 = (char *)&v53 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v64 = (char *)&v53 - v17;
  uint64_t v19 = *(void *)(v18 + 72);
  if (!v19)
  {
    __break(1u);
LABEL_77:
    __break(1u);
LABEL_78:
    __break(1u);
    goto LABEL_79;
  }
  int64_t v20 = a2 - a1;
  if (a2 - a1 == 0x8000000000000000 && v19 == -1) {
    goto LABEL_77;
  }
  int64_t v22 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v19 == -1) {
    goto LABEL_78;
  }
  unint64_t v71 = a1;
  uint64_t v24 = v20 / v19;
  uint64_t v25 = v22 / v19;
  uint64_t v63 = v19;
  if (v20 / v19 >= v22 / v19)
  {
    sub_1007EB02C(a2, v22 / v19);
    unint64_t v26 = a4 + v25 * v19;
    if (v25 * v19 >= 1 && v71 < a2)
    {
      uint64_t v58 = (void (**)(void))-v19;
      Swift::Int v29 = *(void (**)(void))(v14 + 16);
      uint64_t v56 = (void (**)(void))(v9 + 8);
      uint64_t v57 = v29;
      uint64_t v62 = v14 + 16;
      unint64_t v54 = a4;
      uint64_t v55 = (void (**)(void))(v14 + 8);
      do
      {
        uint64_t v30 = v58;
        unint64_t v69 = v26;
        uint64_t v70 = (char *)v58 + a3;
        int v60 = (void (*)(void))((char *)v58 + v26);
        unint64_t v61 = a3;
        uint64_t v31 = v57;
        sub_10019FBD8();
        v31();
        uint64_t v59 = (void (**)(void))((char *)v30 + a2);
        sub_10019FBD8();
        v31();
        unint64_t v32 = a2;
        DayWeather.date.getter();
        DayWeather.date.getter();
        uint64_t v33 = static Date.< infix(_:_:)();
        uint64_t v34 = *v56;
        sub_100164FC8();
        v34();
        sub_100164FC8();
        v34();
        a2 = (unint64_t)v55;
        uint64_t v35 = *v55;
        sub_100163348();
        v35();
        sub_100163348();
        v35();
        if (v33)
        {
          unint64_t v36 = v69;
          a3 = (unint64_t)v70;
          if (v61 < v32 || (unint64_t)v70 >= v32)
          {
            sub_1001A2F38();
            swift_arrayInitWithTakeFrontToBack();
            a4 = v54;
            unint64_t v38 = v71;
            uint64_t v19 = v63;
          }
          else
          {
            unint64_t v38 = v71;
            uint64_t v19 = v63;
            if (v61 == v32)
            {
              a2 = (unint64_t)v59;
            }
            else
            {
              sub_1001A2F38();
              swift_arrayInitWithTakeBackToFront();
            }
            a4 = v54;
          }
          unint64_t v26 = v36;
        }
        else
        {
          a3 = (unint64_t)v70;
          BOOL v39 = v61 < v69 || (unint64_t)v70 >= v69;
          a2 = v32;
          if (v39)
          {
            sub_100182D04();
            swift_arrayInitWithTakeFrontToBack();
            unint64_t v26 = v33;
            a4 = v54;
            unint64_t v38 = v71;
            uint64_t v19 = v63;
          }
          else
          {
            uint64_t v19 = v63;
            if (v61 == v69)
            {
              unint64_t v26 = (unint64_t)v60;
            }
            else
            {
              sub_100182D04();
              swift_arrayInitWithTakeBackToFront();
              unint64_t v26 = v33;
            }
            a4 = v54;
            unint64_t v38 = v71;
          }
        }
      }
      while (v26 > a4 && a2 > v38);
    }
  }
  else
  {
    sub_1007EB02C(v71, v20 / v19);
    unint64_t v26 = a4 + v24 * v19;
    if (v24 * v19 >= 1 && a2 < a3)
    {
      unint64_t v69 = a4 + v24 * v19;
      uint64_t v70 = (char *)a3;
      uint64_t v41 = *(void (**)(void))(v14 + 16);
      uint64_t v59 = (void (**)(void))(v9 + 8);
      int v60 = v41;
      uint64_t v62 = v14 + 16;
      uint64_t v58 = (void (**)(void))(v14 + 8);
      do
      {
        unint64_t v61 = a2;
        uint64_t v42 = v60;
        sub_10019FBD8();
        v42();
        sub_10019FBD8();
        v42();
        DayWeather.date.getter();
        DayWeather.date.getter();
        char v43 = static Date.< infix(_:_:)();
        unint64_t v44 = a4;
        uint64_t v45 = *v59;
        sub_100164FC8();
        v45();
        sub_100164FC8();
        v45();
        uint64_t v46 = *v58;
        sub_1001629F8();
        v46();
        sub_1001629F8();
        v46();
        if (v43)
        {
          uint64_t v19 = v63;
          a2 = v61 + v63;
          unint64_t v47 = v71;
          if (v71 < v61 || v71 >= a2) {
            goto LABEL_61;
          }
          if (v71 != v61) {
            goto LABEL_65;
          }
        }
        else
        {
          a2 = v61;
          uint64_t v19 = v63;
          a4 += v63;
          unint64_t v47 = v71;
          if (v71 < v44 || v71 >= a4)
          {
LABEL_61:
            swift_arrayInitWithTakeFrontToBack();
            goto LABEL_66;
          }
          if (v71 != v44) {
LABEL_65:
          }
            swift_arrayInitWithTakeBackToFront();
        }
LABEL_66:
        unint64_t v26 = v69;
        unint64_t v71 = v47 + v19;
      }
      while (a4 < v69 && a2 < (unint64_t)v70);
    }
  }
  int64_t v51 = v26 - a4;
  if (v19 != -1 || v51 != 0x8000000000000000)
  {
    sub_1007EB02C(a4, v51 / v19);
    return;
  }
LABEL_79:
  __break(1u);
}

unint64_t sub_1009E6344()
{
  unint64_t result = qword_100E66CB0;
  if (!qword_100E66CB0)
  {
    sub_10018C6DC(&qword_100E66CA0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E66CB0);
  }
  return result;
}

ValueMetadata *type metadata accessor for ConditionDetailTracker()
{
  return &type metadata for ConditionDetailTracker;
}

uint64_t sub_1009E63A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for TemperatureChartKind();
  sub_100179C0C();
  uint64_t v6 = v5;
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for DetailCondition();
  sub_100179C0C();
  uint64_t v12 = v11;
  __n128 v14 = __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v41 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v12 + 16))(v16, a1, v10, v14);
  int v17 = (*(uint64_t (**)(char *, uint64_t))(v12 + 88))(v16, v10);
  if (v17 == enum case for DetailCondition.conditions(_:))
  {
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(a1, v10);
    (*(void (**)(char *, uint64_t))(v12 + 96))(v16, v10);
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v9, v16, v4);
    int v18 = (*(uint64_t (**)(char *, uint64_t))(v6 + 88))(v9, v4);
    if (v18 != enum case for TemperatureChartKind.actual(_:))
    {
      int v22 = v18;
      int v23 = enum case for TemperatureChartKind.feelsLike(_:);
      type metadata accessor for DetailType();
      sub_100187D24();
      uint64_t v25 = *(uint64_t (**)(uint64_t, uint64_t))(v24 + 104);
      if (v22 != v23)
      {
        v25(a2, enum case for DetailType.temperature(_:));
        return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v4);
      }
      uint64_t v26 = enum case for DetailType.feelsLike(_:);
      uint64_t v27 = a2;
      return v25(v27, v26);
    }
    uint64_t v19 = (unsigned int *)&enum case for DetailType.temperature(_:);
  }
  else if (v17 == enum case for DetailCondition.humidity(_:))
  {
    uint64_t v20 = sub_100188330();
    v21(v20);
    uint64_t v19 = (unsigned int *)&enum case for DetailType.humidity(_:);
  }
  else if (v17 == enum case for DetailCondition.pressure(_:))
  {
    uint64_t v28 = sub_100188330();
    v29(v28);
    uint64_t v19 = (unsigned int *)&enum case for DetailType.pressure(_:);
  }
  else if (v17 == enum case for DetailCondition.precipitationTotal(_:))
  {
    uint64_t v31 = sub_100188330();
    v32(v31);
    uint64_t v19 = (unsigned int *)&enum case for DetailType.precipitationTotals(_:);
  }
  else if (v17 == enum case for DetailCondition.uvIndex(_:))
  {
    uint64_t v33 = sub_100188330();
    v34(v33);
    uint64_t v19 = (unsigned int *)&enum case for DetailType.uvIndex(_:);
  }
  else if (v17 == enum case for DetailCondition.visibility(_:))
  {
    uint64_t v35 = sub_100188330();
    v36(v35);
    uint64_t v19 = (unsigned int *)&enum case for DetailType.visibility(_:);
  }
  else
  {
    if (v17 != enum case for DetailCondition.wind(_:))
    {
      uint64_t result = _diagnoseUnexpectedEnumCase<A>(type:)();
      __break(1u);
      return result;
    }
    uint64_t v37 = sub_100188330();
    v38(v37);
    uint64_t v19 = (unsigned int *)&enum case for DetailType.wind(_:);
  }
  uint64_t v39 = *v19;
  type metadata accessor for DetailType();
  sub_100187D24();
  uint64_t v25 = *(uint64_t (**)(uint64_t, uint64_t))(v40 + 104);
  uint64_t v27 = a2;
  uint64_t v26 = v39;
  return v25(v27, v26);
}

uint64_t sub_1009E6718()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for GeneralConfigurationStyle()
{
  return self;
}

void sub_1009E674C(uint64_t *a1)
{
  uint64_t v2 = *(void *)(type metadata accessor for DebugLocationManager.DebugLocation() - 8);
  uint64_t v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_100315368();
    uint64_t v3 = v4;
  }
  uint64_t v5 = *(void *)(v3 + 16);
  v6[0] = v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v6[1] = v5;
  sub_1009E7838(v6);
  *a1 = v3;
}

void sub_1009E67F4()
{
  uint64_t v1 = OBJC_IVAR____TtC7Weather27DebugLocationViewController_tableView;
  *(void *)&v0[v1] = [objc_allocWithZone((Class)UITableView) init];
  *(void *)&v0[OBJC_IVAR____TtC7Weather27DebugLocationViewController_locations] = _swiftEmptyArrayStorage;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

id sub_1009E68B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v11 = OBJC_IVAR____TtC7Weather27DebugLocationViewController_tableView;
  id v12 = objc_allocWithZone((Class)UITableView);
  uint64_t v13 = v5;
  *(void *)&v5[v11] = [v12 init];
  *(void *)&v13[OBJC_IVAR____TtC7Weather27DebugLocationViewController_locations] = _swiftEmptyArrayStorage;
  *(void *)&v13[OBJC_IVAR____TtC7Weather27DebugLocationViewController_locationManager] = a1;
  *(void *)&v13[OBJC_IVAR____TtC7Weather27DebugLocationViewController_weatherDataUpdater] = a2;
  __n128 v14 = &v13[OBJC_IVAR____TtC7Weather27DebugLocationViewController_dispatcher];
  *(void *)__n128 v14 = a3;
  *((void *)v14 + 1) = a4;
  swift_retain();
  swift_retain();
  swift_retain();

  v17.receiver = v13;
  v17.super_class = ObjectType;
  id v15 = [super initWithNibName:0 bundle:0];
  swift_release();
  swift_release();
  swift_release();
  return v15;
}

id sub_1009E69E0()
{
  uint64_t v1 = v0;
  v18.receiver = v0;
  v18.super_class = (Class)swift_getObjectType();
  [super viewDidLoad];
  uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC7Weather27DebugLocationViewController_tableView];
  [v2 setDelegate:v1];
  [v2 setDataSource:v1];
  id result = [v1 view];
  if (result)
  {
    uint64_t v4 = result;
    [result bounds];
    double v6 = v5;
    double v8 = v7;
    double v10 = v9;
    double v12 = v11;

    [v2 setFrame:v6, v8, v10, v12];
    type metadata accessor for DebugLocationViewCell();
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    NSString v14 = sub_10017D970();
    [v2 registerClass:ObjCClassFromMetadata forCellReuseIdentifier:v14];

    id result = [v1 view];
    if (result)
    {
      id v15 = result;
      [result addSubview:v2];

      [v2 reloadData];
      sub_1001AB3E0();
      swift_retain();
      uint64_t v16 = (void *)static OS_dispatch_queue.main.getter();
      swift_allocObject();
      swift_unknownObjectWeakInit();
      AsyncObservable.onNext(on:eager:block:)();
      swift_release();

      swift_release();
      return (id)_s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v17);
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_1009E6BEC(uint64_t *a1)
{
  uint64_t v1 = *a1;
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v3 = (char *)Strong;
    v7[0] = v1;
    swift_bridgeObjectRetain();
    sub_1009E674C(v7);
    *(void *)&v3[OBJC_IVAR____TtC7Weather27DebugLocationViewController_locations] = v7[0];

    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  uint64_t v4 = swift_unknownObjectWeakLoadStrong();
  if (v4)
  {
    double v5 = (void *)v4;
    id v6 = *(id *)(v4 + OBJC_IVAR____TtC7Weather27DebugLocationViewController_tableView);

    [v6 reloadData];
  }
}

void sub_1009E6D20()
{
}

uint64_t type metadata accessor for DebugLocationViewController()
{
  return self;
}

unint64_t sub_1009E6E1C()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for DebugLocationManager.DebugLocation();
  sub_100179C0C();
  uint64_t v4 = v3;
  uint64_t v6 = *(void *)(v5 + 64);
  __chkstk_darwin(v7);
  double v8 = (char *)&aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  double v11 = (char *)&aBlock - v10;
  unint64_t result = IndexPath.item.getter();
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_8;
  }
  uint64_t v13 = *(void *)&v0[OBJC_IVAR____TtC7Weather27DebugLocationViewController_locations];
  if (result >= *(void *)(v13 + 16))
  {
LABEL_8:
    __break(1u);
    return result;
  }
  uint64_t v14 = *(unsigned __int8 *)(v4 + 80);
  sub_1009E77D4(v13 + ((v14 + 32) & ~v14) + *(void *)(v4 + 72) * result, (uint64_t)v11);
  sub_100A41D0C((uint64_t)&v11[*(int *)(v2 + 20)], 0, v15, v16, v17, v18, v19, v20, (uint64_t)aBlock, v28, (uint64_t)v29, (uint64_t)v30, (uint64_t)v31, v32, v33, v34, v35, v36, v37,
    v38);
  id v21 = [v0 navigationController];
  if (v21)
  {
    int v22 = v21;
    id v23 = [v21 presentingViewController];

    if (v23)
    {
      sub_1009E77D4((uint64_t)v11, (uint64_t)v8);
      uint64_t v24 = swift_allocObject();
      *(void *)(v24 + 16) = v1;
      sub_1007D81A0((uint64_t)v8, v24 + ((v14 + 24) & ~v14));
      uint64_t v31 = sub_1009E88C8;
      uint64_t v32 = v24;
      aBlock = _NSConcreteStackBlock;
      uint64_t v28 = 1107296256;
      Swift::Int v29 = sub_10010A4D4;
      uint64_t v30 = &unk_100E325F8;
      uint64_t v25 = _Block_copy(&aBlock);
      id v26 = v1;
      swift_release();
      [v23 dismissViewControllerAnimated:1 completion:v25];
      _Block_release(v25);
    }
  }
  return sub_1009E892C((uint64_t)v11, (void (*)(void))type metadata accessor for DebugLocationManager.DebugLocation);
}

uint64_t sub_1009E7068(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MainAction();
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(uint64_t (**)(uint64_t))(a1 + OBJC_IVAR____TtC7Weather27DebugLocationViewController_dispatcher);
  uint64_t v8 = a2 + *(int *)(type metadata accessor for DebugLocationManager.DebugLocation() + 20);
  uint64_t v9 = type metadata accessor for Location();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16))(v6, v8, v9);
  type metadata accessor for DebugAction();
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  uint64_t v12 = 0;
  memset(v11, 0, sizeof(v11));
  swift_retain();
  sub_1001AAF58((uint64_t)v6, (uint64_t)v11, v7);
  sub_100016E7C((uint64_t)v11);
  sub_1009E892C((uint64_t)v6, (void (*)(void))type metadata accessor for MainAction);
  return swift_release();
}

uint64_t sub_1009E72C8()
{
  return *(void *)(*(void *)(v0 + OBJC_IVAR____TtC7Weather27DebugLocationViewController_locations) + 16);
}

unint64_t sub_1009E7300(void *a1)
{
  type metadata accessor for DebugLocationManager.DebugLocation();
  sub_100179C0C();
  uint64_t v4 = v3;
  __chkstk_darwin(v5);
  uint64_t v7 = (uint64_t *)((char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t result = IndexPath.item.getter();
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v9 = *(void *)(v1 + OBJC_IVAR____TtC7Weather27DebugLocationViewController_locations);
  if (result >= *(void *)(v9 + 16))
  {
LABEL_9:
    __break(1u);
    return result;
  }
  sub_1009E77D4(v9+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(void *)(v4 + 72) * result, (uint64_t)v7);
  NSString v10 = sub_10017D970();
  Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
  id v12 = [a1 dequeueReusableCellWithIdentifier:v10 forIndexPath:isa];

  type metadata accessor for DebugLocationViewCell();
  uint64_t v13 = (void *)swift_dynamicCastClassUnconditional();
  [v13 setAccessoryType:0];
  id v14 = [v13 textLabel];
  if (v14)
  {
    uint64_t v15 = v14;
    uint64_t v16 = Location.name.getter();
    sub_100318518(v16, v17, v15);
  }
  id v18 = [v13 detailTextLabel];
  if (v18)
  {
    uint64_t v19 = v18;
    sub_10017DF08(&qword_100E64020);
    uint64_t v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_100C251B0;
    uint64_t v21 = *v7;
    *(void *)(v20 + 56) = &type metadata for Double;
    *(void *)(v20 + 64) = &protocol witness table for Double;
    *(void *)(v20 + 32) = v21;
    uint64_t v22 = String.init(format:_:)();
    sub_100318518(v22, v23, v19);
  }
  sub_1009E892C((uint64_t)v7, (void (*)(void))type metadata accessor for DebugLocationManager.DebugLocation);
  return (unint64_t)v13;
}

id sub_1009E7644(uint64_t a1, uint64_t a2, uint64_t a3)
{
  ObjectType = (objc_class *)swift_getObjectType();
  if (a3)
  {
    NSString v6 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v6 = 0;
  }
  v9.receiver = v3;
  v9.super_class = ObjectType;
  [super initWithStyle:1 reuseIdentifier:v6];

  return v7;
}

void sub_1009E771C()
{
}

uint64_t sub_1009E7798(uint64_t a1)
{
  id v3 = v1;
  return a1;
}

uint64_t type metadata accessor for DebugLocationViewCell()
{
  return self;
}

uint64_t sub_1009E77D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DebugLocationManager.DebugLocation();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1009E7838(uint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for DebugLocationManager.DebugLocation();
  uint64_t v127 = *(void *)(v4 - 8);
  uint64_t v128 = v4;
  __chkstk_darwin(v4);
  uint64_t v124 = (uint64_t)&v117 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v134 = (uint64_t)&v117 - v7;
  __chkstk_darwin(v8);
  uint64_t v131 = (double *)((char *)&v117 - v9);
  __chkstk_darwin(v10);
  Swift::Int v130 = (double *)((char *)&v117 - v11);
  Swift::Int v12 = a1[1];
  Swift::Int v13 = _minimumMergeRunLength(_:)(v12);
  if (v13 >= v12)
  {
    if (v12 < 0) {
      goto LABEL_138;
    }
    if (v12) {
      sub_1009E819C(0, v12, 1, a1);
    }
    return;
  }
  Swift::Int v14 = v13;
  uint64_t v133 = a1;
  uint64_t v121 = sub_100AD55C4(v12 / 2);
  uint64_t v122 = v12;
  unint64_t v126 = v15;
  if (v12 <= 0) {
    goto LABEL_102;
  }
  uint64_t v120 = v14;
  uint64_t v16 = 0;
  uint64_t v17 = (char *)_swiftEmptyArrayStorage;
  uint64_t v18 = v12;
  while (1)
  {
    uint64_t v19 = v16 + 1;
    uint64_t v125 = v16;
    if (v16 + 1 >= v18)
    {
      uint64_t v31 = v16 + 1;
      uint64_t v20 = v133;
    }
    else
    {
      uint64_t v20 = v133;
      uint64_t v21 = *v133;
      uint64_t v123 = v21;
      uint64_t v22 = *(void *)(v127 + 72);
      uint64_t v23 = v130;
      sub_1009E77D4(v21 + v22 * v19, (uint64_t)v130);
      uint64_t v129 = v18;
      uint64_t v24 = v131;
      sub_1009E77D4(v21 + v22 * v16, (uint64_t)v131);
      double v25 = *v23;
      double v26 = *v24;
      uint64_t v27 = (uint64_t)v24;
      uint64_t v18 = v129;
      sub_1009E892C(v27, (void (*)(void))type metadata accessor for DebugLocationManager.DebugLocation);
      uint64_t v28 = (uint64_t)v23;
      uint64_t v29 = v123;
      uint64_t v30 = v22;
      sub_1009E892C(v28, (void (*)(void))type metadata accessor for DebugLocationManager.DebugLocation);
      uint64_t v31 = v16 + 2;
      uint64_t v135 = v30;
      if (v16 + 2 < v18)
      {
        uint64_t v119 = v2;
        uint64_t v132 = v30 * v19;
        uint64_t v32 = v16 + 2;
        uint64_t v33 = v30 * v31;
        while (1)
        {
          uint64_t v34 = v130;
          sub_1009E77D4(v29 + v33, (uint64_t)v130);
          uint64_t v35 = v131;
          sub_1009E77D4(v29 + v132, (uint64_t)v131);
          BOOL v36 = *v35 >= *v34;
          sub_1009E892C((uint64_t)v35, (void (*)(void))type metadata accessor for DebugLocationManager.DebugLocation);
          sub_1009E892C((uint64_t)v34, (void (*)(void))type metadata accessor for DebugLocationManager.DebugLocation);
          if (v26 < v25 == v36) {
            break;
          }
          uint64_t v30 = v135;
          v29 += v135;
          ++v32;
          uint64_t v18 = v129;
          if (v32 >= v129)
          {
            uint64_t v31 = v129;
            uint64_t v20 = v133;
            uint64_t v2 = v119;
            uint64_t v16 = v125;
            goto LABEL_12;
          }
        }
        uint64_t v20 = v133;
        uint64_t v31 = v32;
        uint64_t v2 = v119;
        uint64_t v16 = v125;
        uint64_t v18 = v129;
        uint64_t v30 = v135;
      }
LABEL_12:
      if (v26 < v25)
      {
        if (v31 < v16) {
          goto LABEL_139;
        }
        if (v16 < v31)
        {
          unint64_t v118 = v17;
          uint64_t v37 = 0;
          uint64_t v38 = v31;
          uint64_t v39 = v30 * (v31 - 1);
          uint64_t v40 = v38 * v30;
          uint64_t v41 = v16 * v30;
          do
          {
            uint64_t v42 = v38;
            if (v16 != v38 + v37 - 1)
            {
              uint64_t v43 = v123;
              if (!v123) {
                goto LABEL_145;
              }
              unint64_t v44 = v123 + v41;
              uint64_t v132 = v123 + v39;
              sub_1007D81A0(v123 + v41, v124);
              if (v41 < v39 || v44 >= v43 + v40)
              {
                swift_arrayInitWithTakeFrontToBack();
                uint64_t v30 = v135;
              }
              else
              {
                uint64_t v30 = v135;
                if (v41 != v39) {
                  swift_arrayInitWithTakeBackToFront();
                }
              }
              sub_1007D81A0(v124, v132);
              uint64_t v20 = v133;
            }
            ++v16;
            --v37;
            uint64_t v38 = v42;
            v39 -= v30;
            v40 -= v30;
            v41 += v30;
          }
          while (v16 < v42 + v37);
          uint64_t v17 = v118;
          uint64_t v31 = v42;
          uint64_t v16 = v125;
          uint64_t v18 = v129;
        }
      }
    }
    if (v31 < v18)
    {
      if (__OFSUB__(v31, v16)) {
        goto LABEL_137;
      }
      if (v31 - v16 < v120)
      {
        if (__OFADD__(v16, v120)) {
          goto LABEL_140;
        }
        if (v16 + v120 >= v18) {
          uint64_t v46 = v18;
        }
        else {
          uint64_t v46 = v16 + v120;
        }
        if (v46 < v16)
        {
LABEL_141:
          __break(1u);
          goto LABEL_142;
        }
        if (v31 != v46)
        {
          unint64_t v118 = v17;
          uint64_t v119 = v2;
          uint64_t v47 = *(void *)(v127 + 72);
          uint64_t v135 = v47 * (v31 - 1);
          uint64_t v129 = v47;
          uint64_t v48 = v31 * v47;
          uint64_t v123 = v46;
          do
          {
            uint64_t v49 = 0;
            uint64_t v132 = v31;
            while (1)
            {
              uint64_t v50 = *v20;
              uint64_t v51 = v48;
              uint64_t v52 = v48 + v49 + *v20;
              uint64_t v53 = v130;
              sub_1009E77D4(v52, (uint64_t)v130);
              unint64_t v54 = v131;
              sub_1009E77D4(v135 + v49 + v50, (uint64_t)v131);
              double v55 = *v53;
              double v56 = *v54;
              sub_1009E892C((uint64_t)v54, (void (*)(void))type metadata accessor for DebugLocationManager.DebugLocation);
              sub_1009E892C((uint64_t)v53, (void (*)(void))type metadata accessor for DebugLocationManager.DebugLocation);
              if (v56 >= v55) {
                break;
              }
              uint64_t v57 = *v20;
              if (!*v20) {
                goto LABEL_143;
              }
              uint64_t v48 = v51;
              uint64_t v58 = v57 + v135 + v49;
              sub_1007D81A0(v57 + v51 + v49, v134);
              uint64_t v59 = v132;
              swift_arrayInitWithTakeFrontToBack();
              sub_1007D81A0(v134, v58);
              v49 -= v129;
              ++v16;
              uint64_t v20 = v133;
              if (v59 == v16) {
                goto LABEL_45;
              }
            }
            uint64_t v59 = v132;
            uint64_t v48 = v51;
LABEL_45:
            uint64_t v31 = v59 + 1;
            v135 += v129;
            v48 += v129;
            uint64_t v16 = v125;
          }
          while (v31 != v123);
          uint64_t v31 = v123;
          uint64_t v17 = v118;
          uint64_t v2 = v119;
        }
      }
    }
    if (v31 < v16) {
      goto LABEL_136;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v17 = sub_1001AA1B0(0, *((void *)v17 + 2) + 1, 1, v17);
    }
    unint64_t v61 = *((void *)v17 + 2);
    unint64_t v60 = *((void *)v17 + 3);
    unint64_t v62 = v61 + 1;
    if (v61 >= v60 >> 1) {
      uint64_t v17 = sub_1001AA1B0((char *)(v60 > 1), v61 + 1, 1, v17);
    }
    *((void *)v17 + 2) = v62;
    uint64_t v63 = v17 + 32;
    uint64_t v64 = (uint64_t *)&v17[16 * v61 + 32];
    *uint64_t v64 = v16;
    v64[1] = v31;
    uint64_t v132 = v31;
    if (v61) {
      break;
    }
    unint64_t v62 = 1;
LABEL_95:
    uint64_t v16 = v132;
    uint64_t v18 = v133[1];
    if (v132 >= v18) {
      goto LABEL_103;
    }
  }
  while (1)
  {
    unint64_t v65 = v62 - 1;
    if (v62 >= 4)
    {
      uint64_t v70 = &v63[16 * v62];
      uint64_t v71 = *((void *)v70 - 8);
      uint64_t v72 = *((void *)v70 - 7);
      BOOL v76 = __OFSUB__(v72, v71);
      uint64_t v73 = v72 - v71;
      if (v76) {
        goto LABEL_121;
      }
      uint64_t v75 = *((void *)v70 - 6);
      uint64_t v74 = *((void *)v70 - 5);
      BOOL v76 = __OFSUB__(v74, v75);
      uint64_t v68 = v74 - v75;
      char v69 = v76;
      if (v76) {
        goto LABEL_122;
      }
      unint64_t v77 = v62 - 2;
      uint64_t v78 = &v63[16 * v62 - 32];
      uint64_t v80 = *(void *)v78;
      uint64_t v79 = *((void *)v78 + 1);
      BOOL v76 = __OFSUB__(v79, v80);
      uint64_t v81 = v79 - v80;
      if (v76) {
        goto LABEL_123;
      }
      BOOL v76 = __OFADD__(v68, v81);
      uint64_t v82 = v68 + v81;
      if (v76) {
        goto LABEL_125;
      }
      if (v82 >= v73)
      {
        uint64_t v100 = &v63[16 * v65];
        uint64_t v102 = *(void *)v100;
        uint64_t v101 = *((void *)v100 + 1);
        BOOL v76 = __OFSUB__(v101, v102);
        uint64_t v103 = v101 - v102;
        if (v76) {
          goto LABEL_131;
        }
        BOOL v93 = v68 < v103;
        goto LABEL_84;
      }
    }
    else
    {
      if (v62 != 3)
      {
        uint64_t v94 = *((void *)v17 + 4);
        uint64_t v95 = *((void *)v17 + 5);
        BOOL v76 = __OFSUB__(v95, v94);
        uint64_t v87 = v95 - v94;
        char v88 = v76;
        goto LABEL_78;
      }
      uint64_t v67 = *((void *)v17 + 4);
      uint64_t v66 = *((void *)v17 + 5);
      BOOL v76 = __OFSUB__(v66, v67);
      uint64_t v68 = v66 - v67;
      char v69 = v76;
    }
    if (v69) {
      goto LABEL_124;
    }
    unint64_t v77 = v62 - 2;
    uint64_t v83 = &v63[16 * v62 - 32];
    uint64_t v85 = *(void *)v83;
    uint64_t v84 = *((void *)v83 + 1);
    BOOL v86 = __OFSUB__(v84, v85);
    uint64_t v87 = v84 - v85;
    char v88 = v86;
    if (v86) {
      goto LABEL_126;
    }
    uint64_t v89 = &v63[16 * v65];
    uint64_t v91 = *(void *)v89;
    uint64_t v90 = *((void *)v89 + 1);
    BOOL v76 = __OFSUB__(v90, v91);
    uint64_t v92 = v90 - v91;
    if (v76) {
      goto LABEL_128;
    }
    if (__OFADD__(v87, v92)) {
      goto LABEL_130;
    }
    if (v87 + v92 >= v68)
    {
      BOOL v93 = v68 < v92;
LABEL_84:
      if (v93) {
        unint64_t v65 = v77;
      }
      goto LABEL_86;
    }
LABEL_78:
    if (v88) {
      goto LABEL_127;
    }
    char v96 = &v63[16 * v65];
    uint64_t v98 = *(void *)v96;
    uint64_t v97 = *((void *)v96 + 1);
    BOOL v76 = __OFSUB__(v97, v98);
    uint64_t v99 = v97 - v98;
    if (v76) {
      goto LABEL_129;
    }
    if (v99 < v87) {
      goto LABEL_95;
    }
LABEL_86:
    unint64_t v104 = v65 - 1;
    if (v65 - 1 >= v62)
    {
      __break(1u);
LABEL_118:
      __break(1u);
LABEL_119:
      __break(1u);
LABEL_120:
      __break(1u);
LABEL_121:
      __break(1u);
LABEL_122:
      __break(1u);
LABEL_123:
      __break(1u);
LABEL_124:
      __break(1u);
LABEL_125:
      __break(1u);
LABEL_126:
      __break(1u);
LABEL_127:
      __break(1u);
LABEL_128:
      __break(1u);
LABEL_129:
      __break(1u);
LABEL_130:
      __break(1u);
LABEL_131:
      __break(1u);
      goto LABEL_132;
    }
    if (!*v133) {
      goto LABEL_144;
    }
    uint64_t v105 = v17;
    uint64_t v106 = &v63[16 * v104];
    uint64_t v107 = *(void *)v106;
    uint64_t v108 = &v63[16 * v65];
    uint64_t v109 = *((void *)v108 + 1);
    sub_1009E83FC(*v133 + *(void *)(v127 + 72) * *(void *)v106, *v133 + *(void *)(v127 + 72) * *(void *)v108, *v133 + *(void *)(v127 + 72) * v109, v126);
    if (v2) {
      break;
    }
    if (v109 < v107) {
      goto LABEL_118;
    }
    if (v65 > *((void *)v105 + 2)) {
      goto LABEL_119;
    }
    *(void *)uint64_t v106 = v107;
    *(void *)&v63[16 * v104 + 8] = v109;
    unint64_t v110 = *((void *)v105 + 2);
    if (v65 >= v110) {
      goto LABEL_120;
    }
    uint64_t v17 = v105;
    unint64_t v62 = v110 - 1;
    memmove(&v63[16 * v65], v108 + 16, 16 * (v110 - 1 - v65));
    *((void *)v105 + 2) = v110 - 1;
    if (v110 <= 2) {
      goto LABEL_95;
    }
  }
LABEL_100:
  swift_bridgeObjectRelease();
  if (v122 >= -1) {
    goto LABEL_115;
  }
  __break(1u);
LABEL_102:
  uint64_t v17 = (char *)_swiftEmptyArrayStorage;
  unint64_t v62 = _swiftEmptyArrayStorage[2];
LABEL_103:
  if (v62 >= 2)
  {
    uint64_t v111 = *v133;
    while (1)
    {
      unint64_t v112 = v62 - 2;
      if (v62 < 2) {
        break;
      }
      if (!v111) {
        goto LABEL_146;
      }
      uint64_t v113 = *(void *)&v17[16 * v112 + 32];
      uint64_t v114 = *(void *)&v17[16 * v62 + 24];
      sub_1009E83FC(v111 + *(void *)(v127 + 72) * v113, v111 + *(void *)(v127 + 72) * *(void *)&v17[16 * v62 + 16], v111 + *(void *)(v127 + 72) * v114, v126);
      if (v2) {
        goto LABEL_100;
      }
      if (v114 < v113) {
        goto LABEL_133;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v17 = sub_10031515C();
      }
      if (v112 >= *((void *)v17 + 2)) {
        goto LABEL_134;
      }
      uint64_t v115 = &v17[16 * v112 + 32];
      *(void *)uint64_t v115 = v113;
      *((void *)v115 + 1) = v114;
      unint64_t v116 = *((void *)v17 + 2);
      if (v62 > v116) {
        goto LABEL_135;
      }
      memmove(&v17[16 * v62 + 16], &v17[16 * v62 + 32], 16 * (v116 - v62));
      *((void *)v17 + 2) = v116 - 1;
      unint64_t v62 = v116 - 1;
      if (v116 <= 2) {
        goto LABEL_114;
      }
    }
LABEL_132:
    __break(1u);
LABEL_133:
    __break(1u);
LABEL_134:
    __break(1u);
LABEL_135:
    __break(1u);
LABEL_136:
    __break(1u);
LABEL_137:
    __break(1u);
LABEL_138:
    __break(1u);
LABEL_139:
    __break(1u);
LABEL_140:
    __break(1u);
    goto LABEL_141;
  }
LABEL_114:
  swift_bridgeObjectRelease();
  if (v122 >= -1)
  {
LABEL_115:
    *(void *)(v121 + 16) = 0;
    swift_bridgeObjectRelease();
    return;
  }
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  __break(1u);
}

void sub_1009E819C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v25 = a1;
  uint64_t v26 = type metadata accessor for DebugLocationManager.DebugLocation();
  __chkstk_darwin(v26);
  uint64_t v29 = (uint64_t)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v10 = (double *)((char *)&v23 - v9);
  __chkstk_darwin(v11);
  Swift::Int v14 = (double *)((char *)&v23 - v13);
  uint64_t v28 = a3;
  uint64_t v24 = a2;
  if (a3 != a2)
  {
    uint64_t v15 = *(void *)(v12 + 72);
    uint64_t v31 = v15 * (v28 - 1);
    uint64_t v27 = v15;
    uint64_t v30 = v15 * v28;
    while (2)
    {
      uint64_t v16 = 0;
      uint64_t v17 = v25;
      do
      {
        uint64_t v18 = *a4;
        sub_1009E77D4(v30 + v16 + *a4, (uint64_t)v14);
        sub_1009E77D4(v31 + v16 + v18, (uint64_t)v10);
        double v19 = *v14;
        double v20 = *v10;
        sub_1009E892C((uint64_t)v10, (void (*)(void))type metadata accessor for DebugLocationManager.DebugLocation);
        sub_1009E892C((uint64_t)v14, (void (*)(void))type metadata accessor for DebugLocationManager.DebugLocation);
        if (v20 >= v19) {
          break;
        }
        uint64_t v21 = *a4;
        if (!*a4)
        {
          __break(1u);
          return;
        }
        uint64_t v22 = v21 + v31 + v16;
        sub_1007D81A0(v21 + v30 + v16, v29);
        swift_arrayInitWithTakeFrontToBack();
        sub_1007D81A0(v29, v22);
        v16 -= v27;
        ++v17;
      }
      while (v28 != v17);
      v31 += v27;
      v30 += v27;
      if (++v28 != v24) {
        continue;
      }
      break;
    }
  }
}

void sub_1009E83FC(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v51 = type metadata accessor for DebugLocationManager.DebugLocation();
  __chkstk_darwin(v51);
  uint64_t v53 = (double *)((char *)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v9);
  uint64_t v52 = (double *)((char *)&v46 - v10);
  uint64_t v12 = *(void *)(v11 + 72);
  if (!v12)
  {
    __break(1u);
LABEL_75:
    __break(1u);
LABEL_76:
    __break(1u);
    goto LABEL_77;
  }
  int64_t v13 = a2 - a1;
  if (a2 - a1 == 0x8000000000000000 && v12 == -1) {
    goto LABEL_75;
  }
  int64_t v15 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v12 == -1) {
    goto LABEL_76;
  }
  uint64_t v17 = v13 / v12;
  uint64_t v18 = v15 / v12;
  if (v13 / v12 >= v15 / v12)
  {
    sub_1007EB58C(a2, v15 / v12);
    uint64_t v29 = v18 * v12;
    unint64_t v19 = a4 + v18 * v12;
    if (v29 < 1 || a1 >= a2) {
      goto LABEL_69;
    }
    unint64_t v49 = a4;
    uint64_t v50 = -v12;
    uint64_t v47 = v12;
    unint64_t v48 = a1;
    while (1)
    {
      unint64_t v31 = a3;
      uint64_t v32 = v50;
      a3 += v50;
      unint64_t v33 = v19 + v50;
      uint64_t v34 = v52;
      sub_1009E77D4(v19 + v50, (uint64_t)v52);
      unint64_t v35 = a2 + v32;
      uint64_t v36 = a2 + v32;
      uint64_t v37 = v53;
      sub_1009E77D4(v36, (uint64_t)v53);
      double v38 = *v34;
      double v39 = *v37;
      sub_1009E892C((uint64_t)v37, (void (*)(void))type metadata accessor for DebugLocationManager.DebugLocation);
      sub_1009E892C((uint64_t)v34, (void (*)(void))type metadata accessor for DebugLocationManager.DebugLocation);
      if (v39 >= v38)
      {
        if (v31 >= v19 && a3 < v19)
        {
          a4 = v49;
          if (v31 != v19) {
            swift_arrayInitWithTakeBackToFront();
          }
          unint64_t v19 = v33;
          goto LABEL_64;
        }
        swift_arrayInitWithTakeFrontToBack();
        unint64_t v19 = v33;
      }
      else
      {
        if (v31 >= a2 && a3 < a2)
        {
          unint64_t v42 = v48;
          a4 = v49;
          if (v31 != a2) {
            swift_arrayInitWithTakeBackToFront();
          }
          a2 = v35;
          uint64_t v12 = v47;
          goto LABEL_65;
        }
        swift_arrayInitWithTakeFrontToBack();
        a2 = v35;
      }
      a4 = v49;
LABEL_64:
      uint64_t v12 = v47;
      unint64_t v42 = v48;
LABEL_65:
      if (v19 <= a4 || a2 <= v42) {
        goto LABEL_69;
      }
    }
  }
  sub_1007EB58C(a1, v13 / v12);
  unint64_t v19 = a4 + v17 * v12;
  if (v17 * v12 >= 1 && a2 < a3)
  {
    do
    {
      uint64_t v21 = v52;
      sub_1009E77D4(a2, (uint64_t)v52);
      uint64_t v22 = v53;
      sub_1009E77D4(a4, (uint64_t)v53);
      double v23 = *v21;
      double v24 = *v22;
      sub_1009E892C((uint64_t)v22, (void (*)(void))type metadata accessor for DebugLocationManager.DebugLocation);
      sub_1009E892C((uint64_t)v21, (void (*)(void))type metadata accessor for DebugLocationManager.DebugLocation);
      if (v24 >= v23)
      {
        if (a1 < a4 || a1 >= a4 + v12)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (a1 != a4)
        {
          swift_arrayInitWithTakeBackToFront();
        }
        unint64_t v25 = a2;
        a4 += v12;
      }
      else
      {
        unint64_t v25 = a2 + v12;
        if (a1 < a2 || a1 >= v25)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (a1 != a2)
        {
          swift_arrayInitWithTakeBackToFront();
        }
      }
      a1 += v12;
      BOOL v28 = a4 >= v19 || v25 >= a3;
      a2 = v25;
    }
    while (!v28);
  }
LABEL_69:
  int64_t v44 = v19 - a4;
  if (v12 != -1 || v44 != 0x8000000000000000)
  {
    sub_1007EB58C(a4, v44 / v12);
    return;
  }
LABEL_77:
  __break(1u);
}

uint64_t sub_1009E87E0()
{
  uint64_t v1 = (int *)(type metadata accessor for DebugLocationManager.DebugLocation() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);

  unint64_t v3 = v0 + v1[7] + v2;
  type metadata accessor for Location();
  sub_100179DC0();
  (*(void (**)(unint64_t))(v4 + 8))(v3);

  return swift_deallocObject();
}

uint64_t sub_1009E88C8()
{
  uint64_t v1 = *(void *)(type metadata accessor for DebugLocationManager.DebugLocation() - 8);
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));

  return sub_1009E7068(v2, v3);
}

uint64_t sub_1009E892C(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100179DC0();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_1009E8980()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

void sub_1009E89B8(uint64_t *a1)
{
}

void *sub_1009E89C0(char a1, char a2, uint64_t a3)
{
  uint64_t v90 = a3;
  uint64_t v6 = type metadata accessor for TipPriorityQueue.GridEntry();
  sub_100162E4C();
  __chkstk_darwin(v7);
  sub_100162EF8();
  uint64_t v87 = v8;
  sub_1001626D4();
  __chkstk_darwin(v9);
  uint64_t v86 = (uint64_t)&v71 - v10;
  sub_1001626D4();
  __chkstk_darwin(v11);
  uint64_t v85 = (uint64_t)&v71 - v12;
  uint64_t v13 = sub_10017DF08(&qword_100E64E80);
  uint64_t v14 = sub_100109308(v13);
  __chkstk_darwin(v14);
  sub_10017F948();
  uint64_t v15 = type metadata accessor for LocationComponentViewModel();
  uint64_t v16 = sub_100109308(v15);
  __chkstk_darwin(v16);
  sub_100162EF8();
  uint64_t v18 = v17;
  sub_1001626D4();
  __chkstk_darwin(v19);
  uint64_t v71 = (uint64_t)&v71 - v20;
  uint64_t v21 = sub_10017DF08(&qword_100E6CCD8);
  uint64_t v22 = sub_100109308(v21);
  __chkstk_darwin(v22);
  sub_100162EF8();
  uint64_t v84 = v23;
  sub_1001626D4();
  __chkstk_darwin(v24);
  uint64_t v83 = (uint64_t)&v71 - v25;
  sub_1001626D4();
  __chkstk_darwin(v26);
  uint64_t v89 = (uint64_t)&v71 - v27;
  sub_1001626D4();
  __chkstk_darwin(v28);
  uint64_t v82 = (uint64_t)&v71 - v29;
  uint64_t v88 = v6;
  if (a1)
  {
    if (a1 == 1)
    {
      if (a2)
      {
        uint64_t v30 = &qword_100EA85B0;
        goto LABEL_11;
      }
    }
    else if (a2)
    {
      uint64_t v30 = &qword_100EA8980;
      goto LABEL_11;
    }
    uint64_t v30 = &qword_100EA8798;
  }
  else if (a2)
  {
    uint64_t v30 = &qword_100EA81E0;
  }
  else
  {
    uint64_t v30 = &qword_100EA83C8;
  }
LABEL_11:
  char v31 = *((unsigned char *)v30 + 160);
  uint64_t v32 = *v30;
  uint64_t v73 = v30[1];
  uint64_t v72 = v30[2];
  uint64_t v33 = v30[3];
  uint64_t v34 = v30[16];
  uint64_t v35 = v30[17];
  uint64_t v36 = v30[18];
  uint64_t v37 = v30[19];
  uint64_t v38 = v30[45];
  uint64_t v76 = v30[46];
  uint64_t v77 = v38;
  uint64_t v39 = v30[47];
  uint64_t v74 = v30[48];
  uint64_t v75 = v39;
  uint64_t v40 = v30[53];
  uint64_t v80 = v30[54];
  uint64_t v81 = v40;
  uint64_t v41 = v30[55];
  uint64_t v78 = v30[56];
  uint64_t v79 = v41;
  uint64_t v42 = v90 + OBJC_IVAR____TtCV7Weather21NoAqiSevereNhpContent8_Storage_map;
  swift_beginAccess();
  sub_10006DF38(v42, v3, &qword_100E64E80);
  uint64_t v43 = type metadata accessor for LocationComponentContainerViewModel();
  if (_s7Weather24LocationCompositionStateOwet_0(v3, 1, v43) == 1)
  {
    sub_1001781AC(v3, &qword_100E64E80);
LABEL_16:
    uint64_t v48 = 1;
    uint64_t v49 = v88;
    goto LABEL_17;
  }
  sub_10031F6A8(v3 + *(int *)(v43 + 20), v18, (void (*)(void))type metadata accessor for LocationComponentViewModel);
  sub_10031F75C(v3, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
  uint64_t v44 = v18;
  uint64_t v45 = v71;
  sub_10031F6FC(v44, v71, (void (*)(void))type metadata accessor for LocationComponentViewModel);
  if (v31)
  {
    sub_10031F75C(v45, (void (*)(void))type metadata accessor for LocationComponentViewModel);
    goto LABEL_16;
  }
  uint64_t v46 = v45;
  uint64_t v47 = v89;
  sub_10031F6FC(v46, v89, (void (*)(void))type metadata accessor for LocationComponentViewModel);
  uint64_t v48 = 0;
  uint64_t v49 = v88;
  uint64_t v50 = (uint64_t *)(v47 + *(int *)(v88 + 20));
  *uint64_t v50 = v34;
  v50[1] = v35;
  v50[2] = v36;
  v50[3] = v37;
LABEL_17:
  uint64_t v51 = v89;
  _s7Weather24LocationCompositionStateOwst_0(v89, v48, 1, v49);
  uint64_t v52 = v82;
  sub_10031F640(v51, v82);
  uint64_t v53 = v83;
  _s7Weather24LocationCompositionStateOwst_0(v83, 1, 1, v49);
  uint64_t v54 = sub_100163354(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_dailyForecast);
  uint64_t v55 = v85;
  sub_10031F6A8(v54, v85, (void (*)(void))type metadata accessor for LocationComponentViewModel);
  double v56 = (uint64_t *)(v55 + *(int *)(v49 + 20));
  uint64_t v57 = v73;
  uint64_t *v56 = v32;
  v56[1] = v57;
  v56[2] = v72;
  v56[3] = v33;
  uint64_t v58 = v84;
  sub_10006DF38(v52, v84, &qword_100E6CCD8);
  uint64_t v59 = sub_100163354(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_uvIndex);
  uint64_t v60 = v86;
  sub_10031F6A8(v59, v86, (void (*)(void))type metadata accessor for LocationComponentViewModel);
  unint64_t v61 = (uint64_t *)(v60 + *(int *)(v49 + 20));
  uint64_t v62 = v76;
  uint64_t *v61 = v77;
  v61[1] = v62;
  uint64_t v63 = v74;
  v61[2] = v75;
  v61[3] = v63;
  uint64_t v64 = sub_100163354(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_wind);
  uint64_t v65 = v87;
  sub_10031F6A8(v64, v87, (void (*)(void))type metadata accessor for LocationComponentViewModel);
  uint64_t v66 = (uint64_t *)(v65 + *(int *)(v49 + 20));
  uint64_t v67 = v80;
  uint64_t *v66 = v81;
  v66[1] = v67;
  uint64_t v68 = v78;
  v66[2] = v79;
  v66[3] = v68;
  char v69 = sub_100AD6D18(v53, v55, v58, v60, v65);
  sub_1001781AC(v52, &qword_100E6CCD8);
  return v69;
}

uint64_t sub_1009E8F4C(uint64_t a1)
{
  uint64_t v3 = sub_10017DF08(&qword_100E64E80);
  uint64_t v4 = sub_100109308(v3);
  __chkstk_darwin(v4);
  sub_10017F948();
  uint64_t v5 = type metadata accessor for LocationComponentContainerViewModel();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  sub_1001626E0();
  uint64_t v9 = v8 - v7;
  uint64_t v10 = a1 + OBJC_IVAR____TtCV7Weather21NoAqiSevereNhpContent8_Storage_map;
  swift_beginAccess();
  sub_10006DF38(v10, v1, &qword_100E64E80);
  uint64_t v104 = a1;
  if (_s7Weather24LocationCompositionStateOwet_0(v1, 1, v5) == 1)
  {
    sub_1001781AC(v1, &qword_100E64E80);
    sub_10017DF08(&qword_100E6CCC8);
    uint64_t v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_100C367B0;
    sub_10017DF08(&qword_100E6CCD0);
    unint64_t v12 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    uint64_t v13 = *(void *)(v6 + 72);
    uint64_t v14 = (__n128 *)swift_allocObject();
    uint64_t v15 = sub_100183900(v14, (__n128)xmmword_100C251B0);
    sub_10031F6A8(a1 + OBJC_IVAR____TtCV7Weather21NoAqiSevereNhpContent8_Storage_severeAlert, (uint64_t)v15 + v12, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 32) = sub_1001F24CC((uint64_t)v14);
    *(void *)(v11 + 40) = v16;
    *(void *)(v11 + 48) = v17;
    uint64_t v18 = (__n128 *)swift_allocObject();
    sub_10017FBA8(v18);
    sub_10031F6A8(a1 + OBJC_IVAR____TtCV7Weather21NoAqiSevereNhpContent8_Storage_nextHourPrecipitation, v19, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 56) = sub_1001F24CC((uint64_t)v14);
    *(void *)(v11 + 64) = v20;
    *(void *)(v11 + 72) = v21;
    uint64_t v22 = (__n128 *)sub_100181354();
    sub_10017FBA8(v22);
    sub_10031F6A8(*(void *)(a1 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_hourlyForecast, v23, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 80) = sub_1001F24CC((uint64_t)v14);
    *(void *)(v11 + 88) = v24;
    *(void *)(v11 + 96) = v25;
    uint64_t v26 = sub_100181354();
    *(_OWORD *)(v26 + 16) = v105;
    sub_10031F6A8(*(void *)(a1 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_dailyForecast, v26 + v12, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 104) = sub_1001F24CC(v26);
    *(void *)(v11 + 112) = v27;
    *(void *)(v11 + 120) = v28;
    uint64_t v29 = v13;
    uint64_t v30 = (__n128 *)swift_allocObject();
    char v31 = (char *)sub_100183900(v30, (__n128)xmmword_100C25ED0) + v12;
    sub_10017C9A0(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_uvIndex);
    sub_1001859A8((uint64_t)&v31[v29], OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_sunriseSunset);
    *(void *)(v11 + 128) = sub_1001F24CC((uint64_t)v30);
    *(void *)(v11 + 136) = v32;
    *(void *)(v11 + 144) = v33;
    uint64_t v34 = (__n128 *)swift_allocObject();
    sub_10016324C(v34);
    sub_10017C9A0(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_wind);
    sub_1001859A8((uint64_t)&v31[v29], OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_precipitationTotal);
    *(void *)(v11 + 152) = sub_1001F24CC((uint64_t)v30);
    *(void *)(v11 + 160) = v35;
    *(void *)(v11 + 168) = v36;
    uint64_t v37 = (__n128 *)sub_100181354();
    sub_10016324C(v37);
    sub_10017C9A0(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_feelsLike);
    sub_1001859A8((uint64_t)&v31[v29], OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_humidity);
    *(void *)(v11 + 176) = sub_1001F24CC((uint64_t)v30);
    *(void *)(v11 + 184) = v38;
    *(void *)(v11 + 192) = v39;
    uint64_t v40 = sub_100181354();
    *(_OWORD *)(v40 + 16) = v105;
    sub_10017C9A0(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_visibility);
    sub_1001859A8(v40 + v12 + v29, OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_pressure);
    *(void *)(v11 + 200) = sub_1001F24CC(v40);
    *(void *)(v11 + 208) = v41;
    *(void *)(v11 + 216) = v42;
    uint64_t v43 = (__n128 *)sub_100181354();
    sub_100179F48(v43);
    uint64_t v45 = v44 + v12;
    uint64_t v46 = *(void *)(a1 + 16);
    sub_10031F6A8(v46 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_moon, v44 + v12, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    sub_10031F6A8(v46 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_averages, v45 + v29, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 224) = sub_1001F24CC((uint64_t)v43);
    *(void *)(v11 + 232) = v47;
    *(void *)(v11 + 240) = v48;
  }
  else
  {
    sub_10031F6FC(v1, v9, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    sub_10017DF08(&qword_100E6CCC8);
    uint64_t v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_100C28110;
    sub_10017DF08(&qword_100E6CCD0);
    uint64_t v103 = *(void *)(v6 + 72);
    uint64_t v102 = v9;
    unint64_t v49 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    uint64_t v50 = (__n128 *)swift_allocObject();
    uint64_t v51 = sub_100183900(v50, (__n128)xmmword_100C251B0);
    sub_10031F6A8(a1 + OBJC_IVAR____TtCV7Weather21NoAqiSevereNhpContent8_Storage_severeAlert, (uint64_t)v51 + v49, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 32) = sub_1001F24CC((uint64_t)v50);
    *(void *)(v11 + 40) = v52;
    *(void *)(v11 + 48) = v53;
    uint64_t v54 = sub_10017C984();
    *(_OWORD *)(v54 + 16) = v105;
    sub_10031F6A8(a1 + OBJC_IVAR____TtCV7Weather21NoAqiSevereNhpContent8_Storage_nextHourPrecipitation, v54 + v49, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 56) = sub_1001F24CC(v54);
    *(void *)(v11 + 64) = v55;
    *(void *)(v11 + 72) = v56;
    uint64_t v57 = (__n128 *)sub_10017C984();
    sub_10017E198(v57);
    sub_10031F6A8(v58 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_hourlyForecast, v59, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 80) = sub_1001F24CC(v54);
    *(void *)(v11 + 88) = v60;
    *(void *)(v11 + 96) = v61;
    uint64_t v62 = (__n128 *)sub_10017C984();
    sub_10017E198(v62);
    sub_10031F6A8(v63 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_dailyForecast, v64, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 104) = sub_1001F24CC(v54);
    *(void *)(v11 + 112) = v65;
    *(void *)(v11 + 120) = v66;
    uint64_t v67 = sub_10017C984();
    *(_OWORD *)(v67 + 16) = v105;
    sub_10031F6A8(v9, v67 + v49, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 128) = sub_1001F24CC(v67);
    *(void *)(v11 + 136) = v68;
    *(void *)(v11 + 144) = v69;
    uint64_t v70 = (__n128 *)swift_allocObject();
    uint64_t v71 = (char *)sub_100183900(v70, (__n128)xmmword_100C25ED0) + v49;
    uint64_t v72 = a1;
    uint64_t v73 = *(void *)(a1 + 16);
    uint64_t v74 = v72;
    sub_10031F6A8(v73 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_uvIndex, (uint64_t)v71, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    sub_10031F6A8(v73 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_sunriseSunset, (uint64_t)&v71[v103], (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 152) = sub_1001F24CC((uint64_t)v70);
    *(void *)(v11 + 160) = v75;
    *(void *)(v11 + 168) = v76;
    uint64_t v77 = (__n128 *)swift_allocObject();
    sub_100179F48(v77);
    uint64_t v79 = v78 + v49;
    uint64_t v80 = *(void *)(v74 + 16);
    sub_100163230(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_wind);
    sub_10031F6A8(v80 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_precipitationTotal, v79 + v103, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 176) = sub_1001F24CC((uint64_t)v77);
    *(void *)(v11 + 184) = v81;
    *(void *)(v11 + 192) = v82;
    uint64_t v83 = (__n128 *)swift_allocObject();
    sub_100179F48(v83);
    uint64_t v85 = v84 + v49;
    uint64_t v86 = *(void *)(v104 + 16);
    sub_100163230(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_feelsLike);
    sub_10031F6A8(v86 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_humidity, v85 + v103, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 200) = sub_1001F24CC((uint64_t)v83);
    *(void *)(v11 + 208) = v87;
    *(void *)(v11 + 216) = v88;
    uint64_t v89 = (__n128 *)swift_allocObject();
    sub_100179F48(v89);
    uint64_t v91 = v90 + v49;
    uint64_t v92 = *(void *)(v104 + 16);
    sub_100163230(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_visibility);
    sub_10031F6A8(v92 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_pressure, v91 + v103, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 224) = sub_1001F24CC((uint64_t)v89);
    *(void *)(v11 + 232) = v93;
    *(void *)(v11 + 240) = v94;
    uint64_t v95 = (__n128 *)swift_allocObject();
    sub_100179F48(v95);
    uint64_t v97 = v96 + v49;
    uint64_t v98 = *(void *)(v104 + 16);
    sub_10031F6A8(v98 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_moon, v96 + v49, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    sub_10031F6A8(v98 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_averages, v97 + v103, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 248) = sub_1001F24CC((uint64_t)v95);
    *(void *)(v11 + 256) = v99;
    *(void *)(v11 + 264) = v100;
    sub_10031F75C(v102, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
  }
  return v11;
}

void sub_1009E97B8(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v4 = type metadata accessor for LocationComponentContainerViewModel();
  sub_100162E4C();
  uint64_t v6 = __chkstk_darwin(v5);
  __chkstk_darwin(v6);
  uint64_t v7 = type metadata accessor for LocationViewComponent();
  uint64_t v8 = sub_100109308(v7);
  __chkstk_darwin(v8);
  sub_1001626E0();
  uint64_t v11 = v10 - v9;
  uint64_t v12 = sub_10017DF08(&qword_100E64E80);
  uint64_t v13 = sub_100109308(v12);
  __chkstk_darwin(v13);
  sub_1001626E0();
  uint64_t v16 = v15 - v14;
  uint64_t v17 = swift_retain();
  sub_1006E2E94(v17, a2);
  swift_release();
  sub_10031F6A8(a1 + OBJC_IVAR____TtCV7Weather35LocationNoAqiSevereNhpConfiguration8_Storage_map, v11, (void (*)(void))type metadata accessor for LocationViewComponent);
  a2(v11);
  sub_10031F75C(v11, (void (*)(void))type metadata accessor for LocationViewComponent);
  _s7Weather24LocationCompositionStateOwst_0(v16, 0, 1, v4);
  sub_10031F6A8(a1 + OBJC_IVAR____TtCV7Weather35LocationNoAqiSevereNhpConfiguration8_Storage_nextHourPrecipitation, v11, (void (*)(void))type metadata accessor for LocationViewComponent);
  a2(v11);
  sub_10031F75C(v11, (void (*)(void))type metadata accessor for LocationViewComponent);
  sub_10031F6A8(a1 + OBJC_IVAR____TtCV7Weather35LocationNoAqiSevereNhpConfiguration8_Storage_severeAlert, v11, (void (*)(void))type metadata accessor for LocationViewComponent);
  a2(v11);
  sub_10031F75C(v11, (void (*)(void))type metadata accessor for LocationViewComponent);
  sub_1002DCC1C();
}

uint64_t sub_1009E99E4(char a1, uint64_t a2, uint64_t a3)
{
  if (a1) {
    return sub_1007D44E4(a2, a3);
  }
  uint64_t v6 = v3[5];
  uint64_t v7 = v3[6];
  sub_1001B1E64(v3 + 2, v6);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 16))(a2, a3, v6, v7);
}

uint64_t sub_1009E9A6C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for FeelsLikeComponentPreprocessedDataModel();
  __chkstk_darwin(v4);
  sub_1001626E0();
  uint64_t v20 = v6 - v5;
  uint64_t v7 = sub_10017DF08(&qword_100EA8C08);
  sub_100179C0C();
  uint64_t v19 = v8;
  __chkstk_darwin(v9);
  sub_1001626E0();
  uint64_t v12 = v11 - v10;
  uint64_t v13 = type metadata accessor for FeelsLikeComponent();
  __chkstk_darwin(v13 - 8);
  sub_1001626E0();
  uint64_t v16 = v15 - v14;
  sub_1001B1E64(a1, a1[3]);
  sub_1009E9C80();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (!v2)
  {
    sub_1009EAC64(&qword_100EA8C18);
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v12, v7);
    sub_1001E7180(v20, v16, (uint64_t (*)(void))type metadata accessor for FeelsLikeComponentPreprocessedDataModel);
    sub_1001E7180(v16, a2, (uint64_t (*)(void))type metadata accessor for FeelsLikeComponent);
  }
  return _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)a1);
}

unint64_t sub_1009E9C80()
{
  unint64_t result = qword_100EA8C10;
  if (!qword_100EA8C10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA8C10);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for FeelsLikeComponent.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1009E9D68);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for FeelsLikeComponent.CodingKeys()
{
  return &type metadata for FeelsLikeComponent.CodingKeys;
}

uint64_t *sub_1009E9DA0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = type metadata accessor for FeelsLikeComponentPreprocessedDataModel();
  int v5 = *(_DWORD *)(*(void *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = v4;
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    uint64_t v9 = a2[5];
    a1[4] = a2[4];
    a1[5] = v9;
    uint64_t v10 = *(int *)(v4 + 28);
    uint64_t v11 = (uint64_t *)((char *)a1 + v10);
    uint64_t v12 = (uint64_t *)((char *)a2 + v10);
    uint64_t v13 = type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference(0);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v12, 1, v13))
    {
      uint64_t v14 = sub_10017DF08(&qword_100E63750);
      memcpy(v11, v12, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      uint64_t v16 = v12[1];
      *uint64_t v11 = *v12;
      v11[1] = v16;
      uint64_t v17 = *(int *)(v13 + 20);
      uint64_t v18 = (char *)v11 + v17;
      uint64_t v19 = (char *)v12 + v17;
      uint64_t v20 = type metadata accessor for TemperatureScaleConfiguration();
      uint64_t v32 = *(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16);
      swift_bridgeObjectRetain();
      v32(v18, v19, v20);
      uint64_t v21 = (int *)type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
      *(void *)&v18[v21[5]] = *(void *)&v19[v21[5]];
      *(void *)&v18[v21[6]] = *(void *)&v19[v21[6]];
      *(void *)&v18[v21[7]] = *(void *)&v19[v21[7]];
      uint64_t v22 = v21[8];
      uint64_t v23 = &v18[v22];
      uint64_t v24 = &v19[v22];
      uint64_t v26 = *(void *)v24;
      uint64_t v25 = *((void *)v24 + 1);
      *(void *)uint64_t v23 = v26;
      *((void *)v23 + 1) = v25;
      v18[v21[9]] = v19[v21[9]];
      swift_bridgeObjectRetain();
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v11, 0, 1, v13);
    }
    uint64_t v27 = *(int *)(v6 + 32);
    uint64_t v28 = (uint64_t *)((char *)a1 + v27);
    uint64_t v29 = (uint64_t *)((char *)a2 + v27);
    uint64_t v30 = v29[1];
    *uint64_t v28 = *v29;
    v28[1] = v30;
    swift_bridgeObjectRetain();
  }
  return a1;
}

void *sub_1009E9FBC(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  uint64_t v7 = type metadata accessor for FeelsLikeComponentPreprocessedDataModel();
  uint64_t v8 = *(int *)(v7 + 28);
  uint64_t v9 = (void *)((char *)a1 + v8);
  uint64_t v10 = (void *)((char *)a2 + v8);
  uint64_t v11 = type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference(0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v10, 1, v11))
  {
    uint64_t v12 = sub_10017DF08(&qword_100E63750);
    memcpy(v9, v10, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    uint64_t v13 = v10[1];
    *uint64_t v9 = *v10;
    v9[1] = v13;
    uint64_t v14 = *(int *)(v11 + 20);
    uint64_t v15 = (char *)v9 + v14;
    uint64_t v16 = (char *)v10 + v14;
    uint64_t v17 = type metadata accessor for TemperatureScaleConfiguration();
    uint64_t v29 = *(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16);
    swift_bridgeObjectRetain();
    v29(v15, v16, v17);
    uint64_t v18 = (int *)type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
    *(void *)&v15[v18[5]] = *(void *)&v16[v18[5]];
    *(void *)&v15[v18[6]] = *(void *)&v16[v18[6]];
    *(void *)&v15[v18[7]] = *(void *)&v16[v18[7]];
    uint64_t v19 = v18[8];
    uint64_t v20 = &v15[v19];
    uint64_t v21 = &v16[v19];
    uint64_t v23 = *(void *)v21;
    uint64_t v22 = *((void *)v21 + 1);
    *(void *)uint64_t v20 = v23;
    *((void *)v20 + 1) = v22;
    v15[v18[9]] = v16[v18[9]];
    swift_bridgeObjectRetain();
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v9, 0, 1, v11);
  }
  uint64_t v24 = *(int *)(v7 + 32);
  uint64_t v25 = (void *)((char *)a1 + v24);
  uint64_t v26 = (void *)((char *)a2 + v24);
  uint64_t v27 = v26[1];
  *uint64_t v25 = *v26;
  v25[1] = v27;
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_1009EA188(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = type metadata accessor for FeelsLikeComponentPreprocessedDataModel();
  uint64_t v5 = *(int *)(v4 + 28);
  uint64_t v6 = (void *)((char *)a1 + v5);
  uint64_t v7 = (void *)((char *)a2 + v5);
  uint64_t v8 = type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference(0);
  int v9 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v6, 1, v8);
  int v10 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v7, 1, v8);
  if (!v9)
  {
    if (!v10)
    {
      *uint64_t v6 = *v7;
      v6[1] = v7[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v24 = *(int *)(v8 + 20);
      uint64_t v25 = (char *)v6 + v24;
      uint64_t v26 = (char *)v7 + v24;
      uint64_t v27 = type metadata accessor for TemperatureScaleConfiguration();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 24))(v25, v26, v27);
      uint64_t v28 = (int *)type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
      *(void *)&v25[v28[5]] = *(void *)&v26[v28[5]];
      *(void *)&v25[v28[6]] = *(void *)&v26[v28[6]];
      *(void *)&v25[v28[7]] = *(void *)&v26[v28[7]];
      uint64_t v29 = v28[8];
      uint64_t v30 = &v25[v29];
      char v31 = &v26[v29];
      *(void *)uint64_t v30 = *(void *)v31;
      *((void *)v30 + 1) = *((void *)v31 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v25[v28[9]] = v26[v28[9]];
      goto LABEL_7;
    }
    sub_1009EA4A0((uint64_t)v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    uint64_t v19 = sub_10017DF08(&qword_100E63750);
    memcpy(v6, v7, *(void *)(*(void *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  *uint64_t v6 = *v7;
  v6[1] = v7[1];
  uint64_t v11 = *(int *)(v8 + 20);
  uint64_t v12 = (char *)v6 + v11;
  uint64_t v13 = (char *)v7 + v11;
  uint64_t v14 = type metadata accessor for TemperatureScaleConfiguration();
  uint64_t v32 = *(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16);
  swift_bridgeObjectRetain();
  v32(v12, v13, v14);
  uint64_t v15 = (int *)type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
  *(void *)&v12[v15[5]] = *(void *)&v13[v15[5]];
  *(void *)&v12[v15[6]] = *(void *)&v13[v15[6]];
  *(void *)&v12[v15[7]] = *(void *)&v13[v15[7]];
  uint64_t v16 = v15[8];
  uint64_t v17 = &v12[v16];
  uint64_t v18 = &v13[v16];
  *(void *)uint64_t v17 = *(void *)v18;
  *((void *)v17 + 1) = *((void *)v18 + 1);
  v12[v15[9]] = v13[v15[9]];
  swift_bridgeObjectRetain();
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v6, 0, 1, v8);
LABEL_7:
  uint64_t v20 = *(int *)(v4 + 32);
  uint64_t v21 = (void *)((char *)a1 + v20);
  uint64_t v22 = (void *)((char *)a2 + v20);
  *uint64_t v21 = *v22;
  v21[1] = v22[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1009EA4A0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

_OWORD *sub_1009EA4FC(_OWORD *a1, _OWORD *a2)
{
  long long v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  a1[2] = a2[2];
  uint64_t v5 = type metadata accessor for FeelsLikeComponentPreprocessedDataModel();
  uint64_t v6 = *(int *)(v5 + 28);
  uint64_t v7 = (_OWORD *)((char *)a1 + v6);
  uint64_t v8 = (_OWORD *)((char *)a2 + v6);
  uint64_t v9 = type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v9))
  {
    uint64_t v10 = sub_10017DF08(&qword_100E63750);
    memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    *uint64_t v7 = *v8;
    uint64_t v11 = *(int *)(v9 + 20);
    uint64_t v12 = (char *)v7 + v11;
    uint64_t v13 = (char *)v8 + v11;
    uint64_t v14 = type metadata accessor for TemperatureScaleConfiguration();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
    uint64_t v15 = (int *)type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
    *(void *)&v12[v15[5]] = *(void *)&v13[v15[5]];
    *(void *)&v12[v15[6]] = *(void *)&v13[v15[6]];
    *(void *)&v12[v15[7]] = *(void *)&v13[v15[7]];
    *(_OWORD *)&v12[v15[8]] = *(_OWORD *)&v13[v15[8]];
    v12[v15[9]] = v13[v15[9]];
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v7, 0, 1, v9);
  }
  *(_OWORD *)((char *)a1 + *(int *)(v5 + 32)) = *(_OWORD *)((char *)a2 + *(int *)(v5 + 32));
  return a1;
}

void *sub_1009EA668(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = type metadata accessor for FeelsLikeComponentPreprocessedDataModel();
  uint64_t v8 = *(int *)(v7 + 28);
  uint64_t v9 = (void *)((char *)a1 + v8);
  uint64_t v10 = (void *)((char *)a2 + v8);
  uint64_t v11 = type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference(0);
  int v12 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v11);
  int v13 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v10, 1, v11);
  if (!v12)
  {
    if (!v13)
    {
      uint64_t v26 = v10[1];
      *uint64_t v9 = *v10;
      v9[1] = v26;
      swift_bridgeObjectRelease();
      uint64_t v27 = *(int *)(v11 + 20);
      uint64_t v28 = (char *)v9 + v27;
      uint64_t v29 = (char *)v10 + v27;
      uint64_t v30 = type metadata accessor for TemperatureScaleConfiguration();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 40))(v28, v29, v30);
      char v31 = (int *)type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
      *(void *)&v28[v31[5]] = *(void *)&v29[v31[5]];
      *(void *)&v28[v31[6]] = *(void *)&v29[v31[6]];
      *(void *)&v28[v31[7]] = *(void *)&v29[v31[7]];
      uint64_t v32 = v31[8];
      uint64_t v33 = &v28[v32];
      uint64_t v34 = &v29[v32];
      uint64_t v36 = *(void *)v34;
      uint64_t v35 = *((void *)v34 + 1);
      *(void *)uint64_t v33 = v36;
      *((void *)v33 + 1) = v35;
      swift_bridgeObjectRelease();
      v28[v31[9]] = v29[v31[9]];
      goto LABEL_7;
    }
    sub_1009EA4A0((uint64_t)v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    uint64_t v19 = sub_10017DF08(&qword_100E63750);
    memcpy(v9, v10, *(void *)(*(void *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
  uint64_t v14 = *(int *)(v11 + 20);
  uint64_t v15 = (char *)v9 + v14;
  uint64_t v16 = (char *)v10 + v14;
  uint64_t v17 = type metadata accessor for TemperatureScaleConfiguration();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32))(v15, v16, v17);
  uint64_t v18 = (int *)type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
  *(void *)&v15[v18[5]] = *(void *)&v16[v18[5]];
  *(void *)&v15[v18[6]] = *(void *)&v16[v18[6]];
  *(void *)&v15[v18[7]] = *(void *)&v16[v18[7]];
  *(_OWORD *)&v15[v18[8]] = *(_OWORD *)&v16[v18[8]];
  v15[v18[9]] = v16[v18[9]];
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v9, 0, 1, v11);
LABEL_7:
  uint64_t v20 = *(int *)(v7 + 32);
  uint64_t v21 = (void *)((char *)a1 + v20);
  uint64_t v22 = (void *)((char *)a2 + v20);
  uint64_t v24 = *v22;
  uint64_t v23 = v22[1];
  *uint64_t v21 = v24;
  v21[1] = v23;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1009EA8DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1009EA8F0);
}

uint64_t sub_1009EA8F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FeelsLikeComponentPreprocessedDataModel();

  return _s7Weather24LocationCompositionStateOwet_0(a1, a2, v4);
}

uint64_t sub_1009EA938(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1009EA94C);
}

uint64_t sub_1009EA94C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FeelsLikeComponentPreprocessedDataModel();

  return _s7Weather24LocationCompositionStateOwst_0(a1, a2, a2, v4);
}

uint64_t sub_1009EA998(void *a1)
{
  uint64_t v2 = sub_10017DF08(&qword_100EA8CC8);
  sub_100179C0C();
  uint64_t v4 = v3;
  __chkstk_darwin(v5);
  sub_1001626E0();
  uint64_t v8 = v7 - v6;
  sub_1001B1E64(a1, a1[3]);
  sub_1009E9C80();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  type metadata accessor for FeelsLikeComponentPreprocessedDataModel();
  sub_1009EAC64(&qword_100EA8CD0);
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v8, v2);
}

uint64_t sub_1009EAAC8(uint64_t a1)
{
  unint64_t v2 = sub_1009E9C80();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1009EAB04(uint64_t a1)
{
  unint64_t v2 = sub_1009E9C80();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1009EAB40@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1009E9A6C(a1, a2);
}

uint64_t sub_1009EAB58(void *a1)
{
  return sub_1009EA998(a1);
}

unint64_t sub_1009EAB78()
{
  unint64_t result = qword_100EA8CB0;
  if (!qword_100EA8CB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA8CB0);
  }
  return result;
}

unint64_t sub_1009EABC8()
{
  unint64_t result = qword_100EA8CB8;
  if (!qword_100EA8CB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA8CB8);
  }
  return result;
}

unint64_t sub_1009EAC18()
{
  unint64_t result = qword_100EA8CC0;
  if (!qword_100EA8CC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA8CC0);
  }
  return result;
}

uint64_t sub_1009EAC64(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for FeelsLikeComponentPreprocessedDataModel();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1009EACA8()
{
  uint64_t v2 = type metadata accessor for Font.TextStyle();
  sub_100179C0C();
  uint64_t v4 = v3;
  __chkstk_darwin(v5);
  sub_10011BFD8();
  if (*(void *)(v0 + 32))
  {
    uint64_t v6 = *(void *)(v0 + 32);
  }
  else
  {
    uint64_t v7 = sub_10017CE84();
    v8(v7);
    static Font.Weight.medium.getter();
    uint64_t v6 = static Font.system(_:weight:)();
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v1, v2);
    *(void *)(v0 + 32) = v6;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v6;
}

uint64_t sub_1009EAD8C()
{
  uint64_t v2 = type metadata accessor for Font.Leading();
  sub_100179C0C();
  uint64_t v4 = v3;
  __chkstk_darwin(v5);
  sub_10011BFD8();
  uint64_t v6 = type metadata accessor for Font.TextStyle();
  sub_100179C0C();
  uint64_t v8 = v7;
  __n128 v10 = __chkstk_darwin(v9);
  int v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(v0 + 48))
  {
    uint64_t v13 = *(void *)(v0 + 48);
  }
  else
  {
    (*(void (**)(char *, void, uint64_t, __n128))(v8 + 104))(v12, enum case for Font.TextStyle.largeTitle(_:), v6, v10);
    static Font.Weight.medium.getter();
    static Font.system(_:weight:)();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v12, v6);
    uint64_t v14 = sub_10017CE84();
    v15(v14);
    uint64_t v13 = Font.leading(_:)();
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v1, v2);
    *(void *)(v0 + 48) = v13;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v13;
}

uint64_t sub_1009EAF20()
{
  if (*(void *)(v0 + 80))
  {
    uint64_t v1 = *(void *)(v0 + 80);
  }
  else
  {
    uint64_t v1 = sub_1009EACA8();
    *(void *)(v0 + 80) = v1;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v1;
}

double sub_1009EAF7C()
{
  if ((*(unsigned char *)(v0 + 104) & 1) == 0) {
    return *(double *)(v0 + 96);
  }
  *(void *)(v0 + 96) = 0x3FF0000000000000;
  *(unsigned char *)(v0 + 104) = 0;
  return 1.0;
}

uint64_t type metadata accessor for VisibilityChartHeaderStyle()
{
  return self;
}

uint64_t sub_1009EAFC4()
{
  return sub_1009EACA8();
}

uint64_t sub_1009EAFE8()
{
  return sub_1009EAD8C();
}

uint64_t sub_1009EB00C()
{
  return sub_1009EAF20();
}

double sub_1009EB030()
{
  return sub_1009EAF7C();
}

void sub_1009EB054()
{
  type metadata accessor for VisibilityChartHeaderStyle();
  uint64_t v0 = swift_allocObject();
  sub_1005243E4();
  qword_100F52200 = v0;
}

void *sub_1009EB090(_OWORD *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v18 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    long long v7 = *((_OWORD *)a2 + 1);
    *a1 = *(_OWORD *)a2;
    a1[1] = v7;
    uint64_t v8 = a3[8];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (uint64_t)a2 + v8;
    uint64_t v11 = type metadata accessor for Date();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[9];
    uint64_t v13 = a3[10];
    uint64_t v14 = (char *)v4 + v12;
    uint64_t v15 = (uint64_t)a2 + v12;
    *(void *)uint64_t v14 = *(void *)v15;
    v14[8] = *(unsigned char *)(v15 + 8);
    uint64_t v16 = (char *)v4 + v13;
    uint64_t v17 = (uint64_t)a2 + v13;
    *(void *)uint64_t v16 = *(void *)v17;
    v16[8] = *(unsigned char *)(v17 + 8);
  }
  return v4;
}

uint64_t sub_1009EB1A0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 32);
  uint64_t v3 = type metadata accessor for Date();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);

  return v4(v2, v3);
}

_OWORD *sub_1009EB208(_OWORD *a1, _OWORD *a2, int *a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[8];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for Date();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[9];
  uint64_t v12 = a3[10];
  uint64_t v13 = (char *)a1 + v11;
  uint64_t v14 = (char *)a2 + v11;
  *(void *)uint64_t v13 = *(void *)v14;
  v13[8] = v14[8];
  uint64_t v15 = (char *)a1 + v12;
  uint64_t v16 = (char *)a2 + v12;
  *(void *)uint64_t v15 = *(void *)v16;
  v15[8] = v16[8];
  return a1;
}

void *sub_1009EB2C8(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  uint64_t v6 = a3[8];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for Date();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = a3[9];
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  char v13 = v12[8];
  *(void *)uint64_t v11 = *(void *)v12;
  v11[8] = v13;
  uint64_t v14 = a3[10];
  uint64_t v15 = (char *)a1 + v14;
  uint64_t v16 = (char *)a2 + v14;
  char v17 = v16[8];
  *(void *)uint64_t v15 = *(void *)v16;
  v15[8] = v17;
  return a1;
}

_OWORD *sub_1009EB3A4(_OWORD *a1, _OWORD *a2, int *a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[8];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for Date();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[9];
  uint64_t v12 = a3[10];
  char v13 = (char *)a1 + v11;
  uint64_t v14 = (char *)a2 + v11;
  *(void *)char v13 = *(void *)v14;
  v13[8] = v14[8];
  uint64_t v15 = (char *)a1 + v12;
  uint64_t v16 = (char *)a2 + v12;
  *(void *)uint64_t v15 = *(void *)v16;
  v15[8] = v16[8];
  return a1;
}

_OWORD *sub_1009EB464(_OWORD *a1, _OWORD *a2, int *a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[8];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for Date();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[9];
  uint64_t v12 = a3[10];
  char v13 = (char *)a1 + v11;
  uint64_t v14 = (char *)a2 + v11;
  *(void *)char v13 = *(void *)v14;
  v13[8] = v14[8];
  uint64_t v15 = (char *)a1 + v12;
  uint64_t v16 = (char *)a2 + v12;
  *(void *)uint64_t v15 = *(void *)v16;
  v15[8] = v16[8];
  return a1;
}

uint64_t sub_1009EB524(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1009EB538);
}

uint64_t sub_1009EB538(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a1 + *(int *)(a3 + 32);
  uint64_t v5 = type metadata accessor for Date();

  return _s7Weather24LocationCompositionStateOwet_0(v4, a2, v5);
}

uint64_t sub_1009EB584(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1009EB598);
}

uint64_t sub_1009EB598(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = a1 + *(int *)(a4 + 32);
  uint64_t v6 = type metadata accessor for Date();

  return _s7Weather24LocationCompositionStateOwst_0(v5, a2, a2, v6);
}

uint64_t *sub_1009EB5E8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    uint64_t *v3 = *a2;
    uint64_t v3 = (uint64_t *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    uint64_t HourPrecipitationChartViewModel = type metadata accessor for NextHourPrecipitationChartViewModel();
    uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(HourPrecipitationChartViewModel - 8) + 16);
    swift_bridgeObjectRetain();
    v10(v7, v8, HourPrecipitationChartViewModel);
  }
  return v3;
}

uint64_t sub_1009EB6D0(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t HourPrecipitationChartViewModel = type metadata accessor for NextHourPrecipitationChartViewModel();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(HourPrecipitationChartViewModel - 8) + 8);

  return v6(v4, HourPrecipitationChartViewModel);
}

void *sub_1009EB748(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(a3 + 20);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t HourPrecipitationChartViewModel = type metadata accessor for NextHourPrecipitationChartViewModel();
  uint64_t v9 = *(void (**)(char *, char *, uint64_t))(*(void *)(HourPrecipitationChartViewModel - 8) + 16);
  swift_bridgeObjectRetain();
  v9(v6, v7, HourPrecipitationChartViewModel);
  return a1;
}

void *sub_1009EB7E0(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t HourPrecipitationChartViewModel = type metadata accessor for NextHourPrecipitationChartViewModel();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(HourPrecipitationChartViewModel - 8) + 24))(v7, v8, HourPrecipitationChartViewModel);
  return a1;
}

_OWORD *sub_1009EB87C(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t HourPrecipitationChartViewModel = type metadata accessor for NextHourPrecipitationChartViewModel();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(HourPrecipitationChartViewModel - 8) + 32))(v5, v6, HourPrecipitationChartViewModel);
  return a1;
}

void *sub_1009EB8F8(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t HourPrecipitationChartViewModel = type metadata accessor for NextHourPrecipitationChartViewModel();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(HourPrecipitationChartViewModel - 8) + 40))(v8, v9, HourPrecipitationChartViewModel);
  return a1;
}

uint64_t sub_1009EB984(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1009EB998);
}

uint64_t sub_1009EB998(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t HourPrecipitationChartViewModel = type metadata accessor for NextHourPrecipitationChartViewModel();
    uint64_t v9 = a1 + *(int *)(a3 + 20);
    return _s7Weather24LocationCompositionStateOwet_0(v9, a2, HourPrecipitationChartViewModel);
  }
}

uint64_t sub_1009EBA20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1009EBA34);
}

uint64_t sub_1009EBA34(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t HourPrecipitationChartViewModel = type metadata accessor for NextHourPrecipitationChartViewModel();
    uint64_t v8 = v5 + *(int *)(a4 + 20);
    return _s7Weather24LocationCompositionStateOwst_0(v8, a2, a2, HourPrecipitationChartViewModel);
  }
  return result;
}

uint64_t sub_1009EBAB4(void *a1, void *a2)
{
  BOOL v2 = *a1 == *a2 && a1[1] == a2[1];
  if (!v2 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
    return 0;
  }
  type metadata accessor for NextHourPrecipitationComponentViewModel();

  return static NextHourPrecipitationChartViewModel.== infix(_:_:)();
}

uint64_t *sub_1009EBB34(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    type metadata accessor for ConditionDetailChartFooterViewModel();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = type metadata accessor for TemperatureChartKind();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      uint64_t v9 = a2[1];
      *a1 = *a2;
      a1[1] = v9;
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v10 = *(int *)(a3 + 20);
    long long v11 = *(_OWORD *)((char *)a2 + v10 + 24);
    *(_OWORD *)((char *)a1 + v10 + 24) = v11;
    (**(void (***)(void))(v11 - 8))();
  }
  return a1;
}

uint64_t sub_1009EBC80(uint64_t a1, uint64_t a2)
{
  type metadata accessor for ConditionDetailChartFooterViewModel();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = type metadata accessor for TemperatureChartKind();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  uint64_t v5 = a1 + *(int *)(a2 + 20);

  return _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v5);
}

void *sub_1009EBD1C(void *a1, void *a2, uint64_t a3)
{
  type metadata accessor for ConditionDetailChartFooterViewModel();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = type metadata accessor for TemperatureChartKind();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    swift_bridgeObjectRetain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v8 = *(int *)(a3 + 20);
  long long v9 = *(_OWORD *)((char *)a2 + v8 + 24);
  *(_OWORD *)((char *)a1 + v8 + 24) = v9;
  (**(void (***)(void))(v9 - 8))();
  return a1;
}

void *sub_1009EBE18(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1009EC9EC((uint64_t)a1, (void (*)(void))type metadata accessor for ConditionDetailChartFooterViewModel);
    type metadata accessor for ConditionDetailChartFooterViewModel();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = type metadata accessor for TemperatureChartKind();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  sub_1000C1E18((void *)((char *)a1 + *(int *)(a3 + 20)), (void *)((char *)a2 + *(int *)(a3 + 20)));
  return a1;
}

char *sub_1009EBF10(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for ConditionDetailChartFooterViewModel();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = type metadata accessor for TemperatureChartKind();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v8 = *(int *)(a3 + 20);
  long long v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  long long v11 = *((_OWORD *)v10 + 1);
  *(_OWORD *)long long v9 = *(_OWORD *)v10;
  *((_OWORD *)v9 + 1) = v11;
  *((void *)v9 + 4) = *((void *)v10 + 4);
  return a1;
}

char *sub_1009EBFF0(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1009EC9EC((uint64_t)a1, (void (*)(void))type metadata accessor for ConditionDetailChartFooterViewModel);
    uint64_t v6 = type metadata accessor for ConditionDetailChartFooterViewModel();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = type metadata accessor for TemperatureChartKind();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
  }
  uint64_t v8 = *(int *)(a3 + 20);
  long long v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)&a1[v8]);
  long long v11 = *((_OWORD *)v10 + 1);
  *(_OWORD *)long long v9 = *(_OWORD *)v10;
  *((_OWORD *)v9 + 1) = v11;
  *((void *)v9 + 4) = *((void *)v10 + 4);
  return a1;
}

uint64_t sub_1009EC0FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1009EC110);
}

uint64_t sub_1009EC110(uint64_t a1, uint64_t a2, uint64_t a3)
{
  type metadata accessor for ConditionDetailChartFooterViewModel();
  sub_100162F30();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    return _s7Weather24LocationCompositionStateOwet_0(a1, a2, v6);
  }
  else
  {
    unint64_t v9 = *(void *)(a1 + *(int *)(a3 + 20) + 24);
    if (v9 >= 0xFFFFFFFF) {
      LODWORD(v9) = -1;
    }
    return (v9 + 1);
  }
}

uint64_t sub_1009EC1A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1009EC1B4);
}

void sub_1009EC1B4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  type metadata accessor for ConditionDetailChartFooterViewModel();
  sub_100162F30();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    _s7Weather24LocationCompositionStateOwst_0(a1, a2, a2, v8);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 24) = (a2 - 1);
  }
}

uint64_t type metadata accessor for ConditionDetailChartFooterView()
{
  uint64_t result = qword_100EA8F68;
  if (!qword_100EA8F68) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1009EC288()
{
  uint64_t result = type metadata accessor for ConditionDetailChartFooterViewModel();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1009EC31C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1009EC338@<X0>(uint64_t a1@<X8>)
{
  uint64_t v56 = a1;
  uint64_t v53 = sub_10017DF08(&qword_100EA8FA0);
  sub_100162E4C();
  __chkstk_darwin(v2);
  uint64_t v52 = (uint64_t)&v51 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v51 - v5;
  uint64_t v55 = type metadata accessor for TemperatureChartPickerView(0);
  sub_100162E4C();
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v51 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v51 - v11;
  uint64_t v13 = type metadata accessor for TemperatureChartKind();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  sub_1001626E0();
  uint64_t v17 = v16 - v15;
  uint64_t v54 = sub_10017DF08(&qword_100EA8FA8);
  sub_100162E4C();
  __chkstk_darwin(v18);
  sub_1001626E0();
  uint64_t v21 = v20 - v19;
  type metadata accessor for ConditionDetailChartFooterViewModel();
  sub_100162E4C();
  __chkstk_darwin(v22);
  sub_1001626E0();
  uint64_t v25 = (uint64_t *)(v24 - v23);
  sub_1009EC93C(v1, v24 - v23, (void (*)(void))type metadata accessor for ConditionDetailChartFooterViewModel);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*(void (**)(uint64_t, uint64_t *, uint64_t))(v14 + 32))(v17, v25, v13);
    (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v9, v17, v13);
    uint64_t v26 = type metadata accessor for ConditionDetailChartFooterView();
    sub_10020D948(v1 + *(int *)(v26 + 20), (uint64_t)&v9[*(int *)(v55 + 20)]);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v6, 1, 1, v13);
    sub_1009EC810((uint64_t)v6, v52);
    State.init(wrappedValue:)();
    sub_1009EC878((uint64_t)v6);
    sub_1009EC8D8((uint64_t)v9, (uint64_t)v12);
    sub_1009EC93C((uint64_t)v12, v21, (void (*)(void))type metadata accessor for TemperatureChartPickerView);
    swift_storeEnumTagMultiPayload();
    sub_10017DF08(&qword_100E66298);
    sub_10029F298();
    sub_1009EC99C();
    _ConditionalContent<>.init(storage:)();
    sub_1009EC9EC((uint64_t)v12, (void (*)(void))type metadata accessor for TemperatureChartPickerView);
    return (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 8))(v17, v13);
  }
  else
  {
    uint64_t v28 = v25[1];
    uint64_t v57 = *v25;
    uint64_t v58 = v28;
    sub_10014A85C();
    uint64_t v29 = Text.init<A>(_:)();
    uint64_t v31 = v30;
    char v33 = v32 & 1;
    static Font.footnote.getter();
    uint64_t v34 = Text.font(_:)();
    uint64_t v36 = v35;
    char v38 = v37;
    swift_release();
    char v39 = v38 & 1;
    sub_100191924(v29, v31, v33);
    swift_bridgeObjectRelease();
    uint64_t v57 = static Color.secondary.getter();
    uint64_t v40 = Text.foregroundStyle<A>(_:)();
    uint64_t v42 = v41;
    char v44 = v43;
    uint64_t v46 = v45;
    sub_100191924(v34, v36, v39);
    swift_release();
    swift_bridgeObjectRelease();
    LOBYTE(v29) = static Edge.Set.top.getter();
    EdgeInsets.init(_all:)();
    *(void *)uint64_t v21 = v40;
    *(void *)(v21 + 8) = v42;
    *(unsigned char *)(v21 + 16) = v44 & 1;
    *(void *)(v21 + 24) = v46;
    *(unsigned char *)(v21 + 32) = v29;
    *(void *)(v21 + 40) = v47;
    *(void *)(v21 + 48) = v48;
    *(void *)(v21 + 56) = v49;
    *(void *)(v21 + 64) = v50;
    *(unsigned char *)(v21 + 72) = 0;
    swift_storeEnumTagMultiPayload();
    sub_10017DF08(&qword_100E66298);
    sub_10029F298();
    sub_1009EC99C();
    return _ConditionalContent<>.init(storage:)();
  }
}

uint64_t sub_1009EC810(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10017DF08(&qword_100EA8FA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1009EC878(uint64_t a1)
{
  uint64_t v2 = sub_10017DF08(&qword_100EA8FA0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1009EC8D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TemperatureChartPickerView(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1009EC93C(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(a2, a1);
  return a2;
}

unint64_t sub_1009EC99C()
{
  unint64_t result = qword_100EA8FB0;
  if (!qword_100EA8FB0)
  {
    type metadata accessor for TemperatureChartPickerView(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA8FB0);
  }
  return result;
}

uint64_t sub_1009EC9EC(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

unint64_t sub_1009ECA48()
{
  unint64_t result = qword_100EA8FB8;
  if (!qword_100EA8FB8)
  {
    sub_10018C6DC(&qword_100EA8FC0);
    sub_10029F298();
    sub_1009EC99C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA8FB8);
  }
  return result;
}

uint64_t sub_1009ECAC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for Location.Identifier();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 40);
  v7(a1, a2, v5);
  uint64_t v8 = (int *)type metadata accessor for LocationViewModel();
  uint64_t v9 = v8[5];
  uint64_t v10 = (void *)(a1 + v9);
  uint64_t v11 = (const void *)(a2 + v9);
  int v12 = _s7Weather24LocationCompositionStateOwet_0(a1 + v9, 1, v5);
  int v13 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v11, 1, v5);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, const void *, uint64_t))(v6 + 32))(v10, v11, v5);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v10, 0, 1, v5);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(void *, uint64_t))(v6 + 8))(v10, v5);
LABEL_6:
    uint64_t v14 = sub_10017DF08(&qword_100E6DC08);
    memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  v7((uint64_t)v10, (uint64_t)v11, v5);
LABEL_7:
  uint64_t v15 = v8[6];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = *(void *)(a2 + v15 + 8);
  *(void *)uint64_t v16 = *(void *)(a2 + v15);
  *(void *)(v16 + 8) = v18;
  swift_bridgeObjectRelease();
  char v19 = *(unsigned char *)(v17 + 48);
  uint64_t v20 = *(void *)(v16 + 16);
  uint64_t v21 = *(void *)(v16 + 24);
  uint64_t v22 = *(void *)(v16 + 32);
  uint64_t v23 = *(void *)(v16 + 40);
  long long v24 = *(_OWORD *)(v17 + 32);
  *(_OWORD *)(v16 + 16) = *(_OWORD *)(v17 + 16);
  *(_OWORD *)(v16 + 32) = v24;
  char v25 = *(unsigned char *)(v16 + 48);
  *(unsigned char *)(v16 + 48) = v19;
  sub_100191D78(v20, v21, v22, v23, v25);
  uint64_t v26 = *(void *)(v17 + 64);
  *(void *)(v16 + 56) = *(void *)(v17 + 56);
  *(void *)(v16 + 64) = v26;
  swift_bridgeObjectRelease();
  uint64_t v27 = *(void *)(v17 + 80);
  *(void *)(v16 + 72) = *(void *)(v17 + 72);
  *(void *)(v16 + 80) = v27;
  swift_bridgeObjectRelease();
  uint64_t v28 = *(void *)(v17 + 96);
  *(void *)(v16 + 88) = *(void *)(v17 + 88);
  *(void *)(v16 + 96) = v28;
  swift_bridgeObjectRelease();
  uint64_t v29 = *(void *)(v17 + 112);
  *(void *)(v16 + 104) = *(void *)(v17 + 104);
  *(void *)(v16 + 112) = v29;
  swift_bridgeObjectRelease();
  uint64_t v30 = *(void *)(v17 + 128);
  *(void *)(v16 + 120) = *(void *)(v17 + 120);
  *(void *)(v16 + 128) = v30;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v16 + 136) = *(unsigned char *)(v17 + 136);
  *(unsigned char *)(v16 + 137) = *(unsigned char *)(v17 + 137);
  *(unsigned char *)(v16 + 138) = *(unsigned char *)(v17 + 138);
  uint64_t v31 = *(void *)(v17 + 152);
  *(void *)(v16 + 144) = *(void *)(v17 + 144);
  *(void *)(v16 + 152) = v31;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v16 + 160) = *(unsigned char *)(v17 + 160);
  *(unsigned char *)(v16 + 161) = *(unsigned char *)(v17 + 161);
  *(void *)(a1 + v8[7]) = *(void *)(a2 + v8[7]);
  swift_bridgeObjectRelease();
  *(void *)(a1 + v8[8]) = *(void *)(a2 + v8[8]);
  swift_release();
  uint64_t v32 = v8[9];
  uint64_t v33 = a1 + v32;
  uint64_t v34 = a2 + v32;
  uint64_t v35 = (int *)type metadata accessor for LocationFooterViewModel();
  LODWORD(v16) = _s7Weather24LocationCompositionStateOwet_0(v33, 1, (uint64_t)v35);
  int v36 = _s7Weather24LocationCompositionStateOwet_0(v34, 1, (uint64_t)v35);
  if (v16)
  {
    if (!v36)
    {
      *(unsigned char *)uint64_t v33 = *(unsigned char *)v34;
      *(_WORD *)(v33 + 1) = *(_WORD *)(v34 + 1);
      *(_OWORD *)(v33 + 8) = *(_OWORD *)(v34 + 8);
      uint64_t v37 = v35[8];
      char v38 = (void *)(v33 + v37);
      char v39 = (const void *)(v34 + v37);
      uint64_t v40 = type metadata accessor for URL();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v39, 1, v40))
      {
        uint64_t v41 = sub_10017DF08(&qword_100E749B0);
        memcpy(v38, v39, *(void *)(*(void *)(v41 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v40 - 8) + 32))(v38, v39, v40);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v38, 0, 1, v40);
      }
      uint64_t v137 = v35;
      uint64_t v52 = v35[9];
      uint64_t v53 = v33 + v52;
      uint64_t v54 = v34 + v52;
      *(unsigned char *)uint64_t v53 = *(unsigned char *)(v34 + v52);
      *(void *)(v53 + 8) = *(void *)(v34 + v52 + 8);
      uint64_t v55 = (int *)type metadata accessor for LearnMoreAttributorViewModel();
      uint64_t v56 = v55[6];
      __dst = (void *)(v53 + v56);
      uint64_t v57 = (const void *)(v54 + v56);
      if (_s7Weather24LocationCompositionStateOwet_0(v54 + v56, 1, v40))
      {
        uint64_t v58 = sub_10017DF08(&qword_100E749B0);
        memcpy(__dst, v57, *(void *)(*(void *)(v58 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v40 - 8) + 32))(__dst, v57, v40);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dst, 0, 1, v40);
      }
      *(_OWORD *)(v53 + v55[7]) = *(_OWORD *)(v54 + v55[7]);
      *(void *)(v53 + v55[8]) = *(void *)(v54 + v55[8]);
      *(unsigned char *)(v33 + v137[10]) = *(unsigned char *)(v34 + v137[10]);
      uint64_t v59 = v137[11];
      uint64_t v60 = (void *)(v33 + v59);
      uint64_t v61 = (const void *)(v34 + v59);
      uint64_t v62 = type metadata accessor for LocationOfInterest();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v61, 1, v62))
      {
        uint64_t v63 = sub_10017DF08(&qword_100E63508);
        memcpy(v60, v61, *(void *)(*(void *)(v63 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v62 - 8) + 32))(v60, v61, v62);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v60, 0, 1, v62);
      }
      *(unsigned char *)(v33 + v137[12]) = *(unsigned char *)(v34 + v137[12]);
      *(unsigned char *)(v33 + v137[13]) = *(unsigned char *)(v34 + v137[13]);
      uint64_t v64 = v137[14];
      uint64_t v65 = (unsigned char *)(v33 + v64);
      uint64_t v66 = (unsigned char *)(v34 + v64);
      uint64_t v67 = (int *)type metadata accessor for HomeAndWorkRefinementRowViewModel();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v66, 1, (uint64_t)v67))
      {
        uint64_t v68 = sub_10017DF08(&qword_100E6DC10);
        memcpy(v65, v66, *(void *)(*(void *)(v68 - 8) + 64));
      }
      else
      {
        *uint64_t v65 = *v66;
        uint64_t v69 = v67[5];
        uint64_t v70 = &v65[v69];
        __dstb = &v66[v69];
        uint64_t v71 = type metadata accessor for Location();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v71 - 8) + 32))(v70, __dstb, v71);
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v62 - 8) + 32))(&v65[v67[6]], &v66[v67[6]], v62);
        v65[v67[7]] = v66[v67[7]];
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v65, 0, 1, (uint64_t)v67);
      }
      uint64_t v72 = v33;
      uint64_t v73 = (uint64_t)v137;
      goto LABEL_30;
    }
    goto LABEL_13;
  }
  if (v36)
  {
    sub_1000B0888(v33, (void (*)(void))type metadata accessor for LocationFooterViewModel);
LABEL_13:
    size_t v42 = *(void *)(*(void *)(sub_10017DF08(&qword_100E6DC18) - 8) + 64);
    char v43 = (void *)v33;
    char v44 = (const void *)v34;
LABEL_14:
    memcpy(v43, v44, v42);
    goto LABEL_31;
  }
  *(unsigned char *)uint64_t v33 = *(unsigned char *)v34;
  *(unsigned char *)(v33 + 1) = *(unsigned char *)(v34 + 1);
  *(unsigned char *)(v33 + 2) = *(unsigned char *)(v34 + 2);
  uint64_t v45 = *(void *)(v34 + 16);
  *(void *)(v33 + 8) = *(void *)(v34 + 8);
  *(void *)(v33 + 16) = v45;
  swift_bridgeObjectRelease();
  uint64_t v46 = v35[8];
  uint64_t v47 = (void *)(v33 + v46);
  uint64_t v48 = (const void *)(v34 + v46);
  uint64_t v49 = type metadata accessor for URL();
  int v50 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v47, 1, v49);
  int v51 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v48, 1, v49);
  if (v50)
  {
    if (!v51)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v49 - 8) + 32))(v47, v48, v49);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v47, 0, 1, v49);
      goto LABEL_42;
    }
    goto LABEL_41;
  }
  uint64_t v98 = *(void *)(v49 - 8);
  if (v51)
  {
    (*(void (**)(void *, uint64_t))(v98 + 8))(v47, v49);
LABEL_41:
    uint64_t v99 = sub_10017DF08(&qword_100E749B0);
    memcpy(v47, v48, *(void *)(*(void *)(v99 - 8) + 64));
    goto LABEL_42;
  }
  (*(void (**)(void *, const void *, uint64_t))(v98 + 40))(v47, v48, v49);
LABEL_42:
  uint64_t v100 = v35[9];
  uint64_t v101 = v33 + v100;
  uint64_t v102 = v34 + v100;
  *(unsigned char *)uint64_t v101 = *(unsigned char *)(v34 + v100);
  *(void *)(v101 + 8) = *(void *)(v34 + v100 + 8);
  swift_bridgeObjectRelease();
  uint64_t v138 = v102;
  __dsta = (int *)type metadata accessor for LearnMoreAttributorViewModel();
  uint64_t v103 = __dsta[6];
  uint64_t v104 = (const void *)(v102 + v103);
  uint64_t v136 = v101 + v103;
  LODWORD(v102) = _s7Weather24LocationCompositionStateOwet_0(v101 + v103, 1, v49);
  int v105 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v104, 1, v49);
  if (v102)
  {
    if (v105)
    {
      size_t v106 = *(void *)(*(void *)(sub_10017DF08(&qword_100E749B0) - 8) + 64);
      uint64_t v107 = (void *)v136;
LABEL_47:
      memcpy(v107, v104, v106);
      goto LABEL_51;
    }
    (*(void (**)(uint64_t, const void *, uint64_t))(*(void *)(v49 - 8) + 32))(v136, v104, v49);
    _s7Weather24LocationCompositionStateOwst_0(v136, 0, 1, v49);
  }
  else
  {
    uint64_t v108 = *(void *)(v49 - 8);
    if (v105)
    {
      (*(void (**)(uint64_t, uint64_t))(v108 + 8))(v136, v49);
      size_t v106 = *(void *)(*(void *)(sub_10017DF08(&qword_100E749B0) - 8) + 64);
      uint64_t v107 = (void *)v136;
      goto LABEL_47;
    }
    (*(void (**)(uint64_t, const void *, uint64_t))(v108 + 40))(v136, v104, v49);
  }
LABEL_51:
  uint64_t v109 = __dsta[7];
  unint64_t v110 = (void *)(v101 + v109);
  uint64_t v111 = (uint64_t *)(v138 + v109);
  uint64_t v113 = *v111;
  uint64_t v112 = v111[1];
  *unint64_t v110 = v113;
  v110[1] = v112;
  swift_bridgeObjectRelease();
  *(void *)(v101 + __dsta[8]) = *(void *)(v138 + __dsta[8]);
  swift_release();
  *(unsigned char *)(v33 + v35[10]) = *(unsigned char *)(v34 + v35[10]);
  uint64_t v114 = v35[11];
  uint64_t v115 = (void *)(v33 + v114);
  unint64_t v116 = (const void *)(v34 + v114);
  uint64_t v117 = type metadata accessor for LocationOfInterest();
  int v118 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v115, 1, v117);
  int v119 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v116, 1, v117);
  if (v118)
  {
    if (!v119)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v117 - 8) + 32))(v115, v116, v117);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v115, 0, 1, v117);
      goto LABEL_57;
    }
    goto LABEL_56;
  }
  uint64_t v120 = *(void *)(v117 - 8);
  if (v119)
  {
    (*(void (**)(void *, uint64_t))(v120 + 8))(v115, v117);
LABEL_56:
    uint64_t v121 = sub_10017DF08(&qword_100E63508);
    memcpy(v115, v116, *(void *)(*(void *)(v121 - 8) + 64));
    goto LABEL_57;
  }
  (*(void (**)(void *, const void *, uint64_t))(v120 + 40))(v115, v116, v117);
LABEL_57:
  *(unsigned char *)(v33 + v35[12]) = *(unsigned char *)(v34 + v35[12]);
  *(unsigned char *)(v33 + v35[13]) = *(unsigned char *)(v34 + v35[13]);
  uint64_t v122 = v35[14];
  uint64_t v123 = (unsigned char *)(v33 + v122);
  uint64_t v124 = (unsigned char *)(v34 + v122);
  uint64_t v125 = (int *)type metadata accessor for HomeAndWorkRefinementRowViewModel();
  int v126 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v123, 1, (uint64_t)v125);
  int v127 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v124, 1, (uint64_t)v125);
  if (v126)
  {
    if (!v127)
    {
      *uint64_t v123 = *v124;
      uint64_t v128 = v125[5];
      uint64_t v129 = &v123[v128];
      Swift::Int v130 = &v124[v128];
      uint64_t v131 = type metadata accessor for Location();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v131 - 8) + 32))(v129, v130, v131);
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v117 - 8) + 32))(&v123[v125[6]], &v124[v125[6]], v117);
      v123[v125[7]] = v124[v125[7]];
      uint64_t v72 = (uint64_t)v123;
      uint64_t v73 = (uint64_t)v125;
LABEL_30:
      _s7Weather24LocationCompositionStateOwst_0(v72, 0, 1, v73);
      goto LABEL_31;
    }
    goto LABEL_62;
  }
  if (v127)
  {
    sub_1000B0888((uint64_t)v123, (void (*)(void))type metadata accessor for HomeAndWorkRefinementRowViewModel);
LABEL_62:
    size_t v42 = *(void *)(*(void *)(sub_10017DF08(&qword_100E6DC10) - 8) + 64);
    char v43 = v123;
    char v44 = v124;
    goto LABEL_14;
  }
  *uint64_t v123 = *v124;
  uint64_t v132 = v125[5];
  uint64_t v133 = &v123[v132];
  uint64_t v134 = &v124[v132];
  uint64_t v135 = type metadata accessor for Location();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v135 - 8) + 40))(v133, v134, v135);
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v117 - 8) + 40))(&v123[v125[6]], &v124[v125[6]], v117);
  v123[v125[7]] = v124[v125[7]];
LABEL_31:
  *(unsigned char *)(a1 + v8[10]) = *(unsigned char *)(a2 + v8[10]);
  *(unsigned char *)(a1 + v8[11]) = *(unsigned char *)(a2 + v8[11]);
  *(unsigned char *)(a1 + v8[12]) = *(unsigned char *)(a2 + v8[12]);
  *(unsigned char *)(a1 + v8[13]) = *(unsigned char *)(a2 + v8[13]);
  *(unsigned char *)(a1 + v8[14]) = *(unsigned char *)(a2 + v8[14]);
  uint64_t v74 = v8[15];
  uint64_t v75 = *(void **)(a1 + v74);
  *(void *)(a1 + v74) = *(void *)(a2 + v74);

  *(unsigned char *)(a1 + v8[16]) = *(unsigned char *)(a2 + v8[16]);
  *(unsigned char *)(a1 + v8[17]) = *(unsigned char *)(a2 + v8[17]);
  *(unsigned char *)(a1 + v8[18]) = *(unsigned char *)(a2 + v8[18]);
  uint64_t v76 = v8[19];
  uint64_t v77 = a1 + v76;
  uint64_t v78 = a2 + v76;
  uint64_t v79 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v79 - 8) + 40))(v77, v78, v79);
  uint64_t v80 = v8[20];
  uint64_t v81 = (void *)(a1 + v80);
  uint64_t v82 = (const void *)(a2 + v80);
  uint64_t v83 = type metadata accessor for ForegroundEffect();
  int v84 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v81, 1, v83);
  int v85 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v82, 1, v83);
  if (!v84)
  {
    uint64_t v86 = *(void *)(v83 - 8);
    if (!v85)
    {
      (*(void (**)(void *, const void *, uint64_t))(v86 + 40))(v81, v82, v83);
      goto LABEL_37;
    }
    (*(void (**)(void *, uint64_t))(v86 + 8))(v81, v83);
    goto LABEL_36;
  }
  if (v85)
  {
LABEL_36:
    uint64_t v87 = sub_10017DF08(&qword_100E65FA8);
    memcpy(v81, v82, *(void *)(*(void *)(v87 - 8) + 64));
    goto LABEL_37;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(void *)(v83 - 8) + 32))(v81, v82, v83);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v81, 0, 1, v83);
LABEL_37:
  *(unsigned char *)(a1 + v8[21]) = *(unsigned char *)(a2 + v8[21]);
  *(void *)(a1 + v8[22]) = *(void *)(a2 + v8[22]);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + v8[23]) = *(unsigned char *)(a2 + v8[23]);
  uint64_t v88 = v8[24];
  uint64_t v89 = a1 + v88;
  uint64_t v90 = a2 + v88;
  uint64_t v91 = type metadata accessor for LocationEntity();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v91 - 8) + 40))(v89, v90, v91);
  uint64_t v92 = *(int *)(a3 + 20);
  uint64_t v93 = (void *)(a1 + v92);
  uint64_t v94 = (uint64_t *)(a2 + v92);
  uint64_t v96 = *v94;
  uint64_t v95 = v94[1];
  *uint64_t v93 = v96;
  v93[1] = v95;
  swift_release();
  return a1;
}

uint64_t sub_1009ED9EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1009EDA00);
}

uint64_t sub_1009EDA00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  type metadata accessor for LocationViewModel();
  sub_100162F30();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    return _s7Weather24LocationCompositionStateOwet_0(a1, a2, v6);
  }
  else
  {
    unint64_t v9 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v9 >= 0xFFFFFFFF) {
      LODWORD(v9) = -1;
    }
    return (v9 + 1);
  }
}

uint64_t sub_1009EDA90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1009EDAA4);
}

void sub_1009EDAA4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  type metadata accessor for LocationViewModel();
  sub_100162F30();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    _s7Weather24LocationCompositionStateOwst_0(a1, a2, a2, v8);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
}

void *sub_1009EDB34(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (void *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        *a1 = *a2;
        *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 1);
        *(_OWORD *)(a1 + 3) = *(_OWORD *)(a2 + 3);
        uint64_t v7 = a2[6];
        a1[5] = a2[5];
        a1[6] = v7;
        uint64_t v8 = a2[8];
        a1[7] = a2[7];
        a1[8] = v8;
        uint64_t v9 = a2[10];
        a1[9] = a2[9];
        a1[10] = v9;
        a1[11] = a2[11];
        *((_WORD *)a1 + 48) = *((_WORD *)a2 + 48);
        a1[13] = a2[13];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_60;
      case 1u:
        *a1 = *a2;
        uint64_t v11 = (int *)type metadata accessor for DailyForecastComponentViewModel(0);
        uint64_t v12 = v11[5];
        int v13 = (char *)a1 + v12;
        uint64_t v14 = (char *)a2 + v12;
        swift_bridgeObjectRetain();
        uint64_t v15 = sub_10017DF08(&qword_100E65250);
        uint64_t v16 = *(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16);
        v16(v13, v14, v15);
        v16((char *)a1 + v11[6], (char *)a2 + v11[6], v15);
        v16((char *)a1 + v11[7], (char *)a2 + v11[7], v15);
        uint64_t v17 = v11[8];
        uint64_t v18 = (void *)((char *)a1 + v17);
        char v19 = (void *)((char *)a2 + v17);
        uint64_t v20 = v19[1];
        void *v18 = *v19;
        v18[1] = v20;
        uint64_t v21 = v11[9];
        uint64_t v22 = (void *)((char *)a1 + v21);
        uint64_t v23 = (void *)((char *)a2 + v21);
        uint64_t v24 = v23[1];
        *uint64_t v22 = *v23;
        v22[1] = v24;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_60;
      case 2u:
        uint64_t v25 = a2[1];
        *a1 = *a2;
        a1[1] = v25;
        uint64_t v26 = a2[3];
        a1[2] = a2[2];
        a1[3] = v26;
        uint64_t v27 = (int *)type metadata accessor for FeelsLikeComponentViewModel(0);
        uint64_t v28 = v27[6];
        uint64_t v29 = (void *)((char *)a1 + v28);
        uint64_t v30 = (void *)((char *)a2 + v28);
        uint64_t v31 = type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference(0);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v30, 1, v31))
        {
          uint64_t v32 = sub_10017DF08(&qword_100E63750);
          memcpy(v29, v30, *(void *)(*(void *)(v32 - 8) + 64));
        }
        else
        {
          uint64_t v135 = v30[1];
          void *v29 = *v30;
          v29[1] = v135;
          uint64_t v136 = *(int *)(v31 + 20);
          uint64_t v137 = (char *)v29 + v136;
          uint64_t v138 = (char *)v30 + v136;
          uint64_t v139 = type metadata accessor for TemperatureScaleConfiguration();
          uint64_t v207 = *(void (**)(char *, char *, uint64_t))(*(void *)(v139 - 8) + 16);
          swift_bridgeObjectRetain();
          v207(v137, v138, v139);
          uint64_t v140 = (int *)type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
          *(void *)&v137[v140[5]] = *(void *)&v138[v140[5]];
          *(void *)&v137[v140[6]] = *(void *)&v138[v140[6]];
          *(void *)&v137[v140[7]] = *(void *)&v138[v140[7]];
          uint64_t v141 = v140[8];
          uint64_t v142 = &v137[v141];
          uint64_t v143 = &v138[v141];
          uint64_t v145 = *(void *)v143;
          uint64_t v144 = *((void *)v143 + 1);
          *(void *)uint64_t v142 = v145;
          *((void *)v142 + 1) = v144;
          v137[v140[9]] = v138[v140[9]];
          swift_bridgeObjectRetain();
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v29, 0, 1, v31);
        }
        goto LABEL_59;
      case 3u:
        *a1 = *a2;
        swift_bridgeObjectRetain();
        goto LABEL_60;
      case 4u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        a1[2] = a2[2];
        swift_bridgeObjectRetain();
        goto LABEL_60;
      case 5u:
        uint64_t v33 = type metadata accessor for WeatherMapOverlayKind();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v33 - 8) + 16))(a1, a2, v33);
        uint64_t v27 = (int *)type metadata accessor for MapComponentViewModel();
        uint64_t v34 = v27[5];
        uint64_t v35 = (char *)a1 + v34;
        int v36 = (char *)a2 + v34;
        uint64_t v37 = type metadata accessor for Location();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 16))(v35, v36, v37);
        uint64_t v38 = v27[6];
        char v39 = (void *)((char *)a1 + v38);
        uint64_t v40 = (void *)((char *)a2 + v38);
        uint64_t v41 = (int *)type metadata accessor for WeatherData(0);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v40, 1, (uint64_t)v41))
        {
          uint64_t v42 = sub_10017DF08(&qword_100E63850);
          memcpy(v39, v40, *(void *)(*(void *)(v42 - 8) + 64));
          goto LABEL_59;
        }
        __dst = v27;
        uint64_t v146 = v40[1];
        void *v39 = *v40;
        v39[1] = v146;
        uint64_t v147 = v41[5];
        uint64_t v148 = (char *)v39 + v147;
        uint64_t v149 = (char *)v40 + v147;
        uint64_t v150 = type metadata accessor for Locale();
        swift_bridgeObjectRetain();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v149, 1, v150))
        {
          uint64_t v151 = sub_10017DF08(&qword_100E63730);
          memcpy(v148, v149, *(void *)(*(void *)(v151 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v150 - 8) + 16))(v148, v149, v150);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v148, 0, 1, v150);
        }
        uint64_t v170 = v41[6];
        uint64_t v171 = (char *)v39 + v170;
        uint64_t v172 = (char *)v40 + v170;
        uint64_t v173 = type metadata accessor for WeatherDataModel();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v173 - 8) + 16))(v171, v172, v173);
        uint64_t v174 = v41[7];
        uint64_t v175 = (char *)v39 + v174;
        uint64_t v176 = (char *)v40 + v174;
        uint64_t v177 = sub_10017DF08(&qword_100E63738);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v176, 1, v177))
        {
          uint64_t v178 = type metadata accessor for WeatherData.CachingState(0);
          memcpy(v175, v176, *(void *)(*(void *)(v178 - 8) + 64));
        }
        else
        {
          uint64_t v179 = type metadata accessor for Date();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v179 - 8) + 16))(v175, v176, v179);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v175, 0, 1, v177);
        }
        uint64_t v27 = __dst;
        uint64_t v180 = v41[8];
        uint64_t v181 = (void *)((char *)v39 + v180);
        uint64_t v182 = (void *)((char *)v40 + v180);
        uint64_t v183 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload == 1)
        {
          uint64_t v186 = type metadata accessor for WeatherStatisticsModel();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v186 - 8) + 16))(v181, v182, v186);
          goto LABEL_47;
        }
        if (!EnumCaseMultiPayload)
        {
          uint64_t v185 = v182[1];
          void *v181 = *v182;
          v181[1] = v185;
          swift_bridgeObjectRetain();
LABEL_47:
          swift_storeEnumTagMultiPayload();
          goto LABEL_49;
        }
        memcpy(v181, v182, *(void *)(*(void *)(v183 - 8) + 64));
LABEL_49:
        uint64_t v187 = v41[9];
        uint64_t v188 = (char *)v39 + v187;
        uint64_t v189 = (char *)v40 + v187;
        uint64_t v190 = type metadata accessor for WeatherDataOverrides();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v189, 1, v190))
        {
          uint64_t v191 = sub_10017DF08(&qword_100E63740);
          memcpy(v188, v189, *(void *)(*(void *)(v191 - 8) + 64));
        }
        else
        {
          uint64_t v192 = type metadata accessor for Date();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v189, 1, v192))
          {
            uint64_t v193 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
            memcpy(v188, v189, *(void *)(*(void *)(v193 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v192 - 8) + 16))(v188, v189, v192);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v188, 0, 1, v192);
          }
          uint64_t v194 = *(int *)(v190 + 20);
          __dsta = &v188[v194];
          uint64_t v195 = &v189[v194];
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v195, 1, v192))
          {
            uint64_t v196 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
            memcpy(__dsta, v195, *(void *)(*(void *)(v196 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v192 - 8) + 16))(__dsta, v195, v192);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dsta, 0, 1, v192);
          }
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v188, 0, 1, v190);
        }
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v39, 0, 1, (uint64_t)v41);
LABEL_59:
        uint64_t v197 = v27[7];
        uint64_t v198 = (void *)((char *)a1 + v197);
        uint64_t v199 = (void *)((char *)a2 + v197);
        uint64_t v200 = v199[1];
        *uint64_t v198 = *v199;
        v198[1] = v200;
        swift_bridgeObjectRetain();
LABEL_60:
        swift_storeEnumTagMultiPayload();
        break;
      case 6u:
        uint64_t v43 = a2[1];
        *a1 = *a2;
        a1[1] = v43;
        int v44 = *((unsigned __int8 *)a2 + 32);
        swift_bridgeObjectRetain();
        if (v44 == 255)
        {
          *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
          *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
        }
        else
        {
          uint64_t v45 = a2[2];
          uint64_t v46 = a2[3];
          sub_1001F3C64(v45, v46, v44);
          a1[2] = v45;
          a1[3] = v46;
          *((unsigned char *)a1 + 32) = v44;
        }
        a1[5] = a2[5];
        uint64_t v152 = (int *)type metadata accessor for MoonComponentViewModel();
        uint64_t v153 = v152[7];
        Swift::Int v154 = (char *)a1 + v153;
        uint64_t v155 = (char *)a2 + v153;
        uint64_t v156 = type metadata accessor for Date();
        uint64_t v157 = *(void (**)(char *, char *, uint64_t))(*(void *)(v156 - 8) + 16);
        swift_bridgeObjectRetain();
        v157(v154, v155, v156);
        *((unsigned char *)a1 + v152[8]) = *((unsigned char *)a2 + v152[8]);
        *(void *)((char *)a1 + v152[9]) = *(void *)((char *)a2 + v152[9]);
        goto LABEL_60;
      case 7u:
        uint64_t v47 = type metadata accessor for NewsArticleComponentViewModel(0);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          uint64_t v48 = a2[1];
          *a1 = *a2;
          a1[1] = v48;
          uint64_t v49 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
          uint64_t v50 = v49[5];
          int v51 = (char *)a1 + v50;
          uint64_t v52 = (char *)a2 + v50;
          uint64_t v53 = type metadata accessor for URL();
          swift_bridgeObjectRetain();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v52, 1, v53))
          {
            uint64_t v54 = sub_10017DF08(&qword_100E749B0);
            memcpy(v51, v52, *(void *)(*(void *)(v54 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v53 - 8) + 16))(v51, v52, v53);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v51, 0, 1, v53);
          }
          uint64_t v158 = v49[6];
          uint64_t v159 = (void *)((char *)a1 + v158);
          uint64_t v160 = (void *)((char *)a2 + v158);
          uint64_t v161 = v160[1];
          void *v159 = *v160;
          v159[1] = v161;
          uint64_t v162 = v49[7];
          uint64_t v163 = (char *)a1 + v162;
          uint64_t v164 = (char *)a2 + v162;
          uint64_t v165 = *(void (**)(char *, char *, uint64_t))(*(void *)(v53 - 8) + 16);
          swift_bridgeObjectRetain();
          v165(v163, v164, v53);
          uint64_t v166 = v49[8];
          uint64_t v167 = (char *)a1 + v166;
          uint64_t v168 = (char *)a2 + v166;
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2 + v166, 1, v53))
          {
            uint64_t v169 = sub_10017DF08(&qword_100E749B0);
            memcpy(v167, v168, *(void *)(*(void *)(v169 - 8) + 64));
          }
          else
          {
            v165(v167, v168, v53);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v167, 0, 1, v53);
          }
          *((unsigned char *)a1 + v49[9]) = *((unsigned char *)a2 + v49[9]);
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(a1, a2, *(void *)(*(void *)(v47 - 8) + 64));
        }
        goto LABEL_60;
      case 8u:
        uint64_t v55 = a2[1];
        *a1 = *a2;
        a1[1] = v55;
        uint64_t v56 = *(int *)(type metadata accessor for NextHourPrecipitationComponentViewModel() + 20);
        uint64_t v57 = (char *)a1 + v56;
        uint64_t v58 = (char *)a2 + v56;
        uint64_t HourPrecipitationChartViewModel = type metadata accessor for NextHourPrecipitationChartViewModel();
        uint64_t v60 = *(void (**)(char *, char *, uint64_t))(*(void *)(HourPrecipitationChartViewModel - 8) + 16);
        swift_bridgeObjectRetain();
        v60(v57, v58, HourPrecipitationChartViewModel);
        goto LABEL_60;
      case 9u:
        uint64_t v61 = type metadata accessor for Location();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v61 - 8) + 16))(a1, a2, v61);
        uint64_t v62 = type metadata accessor for NotificationsOptInComponentViewModel();
        *((unsigned char *)a1 + *(int *)(v62 + 20)) = *((unsigned char *)a2 + *(int *)(v62 + 20));
        goto LABEL_60;
      case 0xAu:
        uint64_t v63 = a2[1];
        *a1 = *a2;
        a1[1] = v63;
        uint64_t v64 = a2[3];
        a1[2] = a2[2];
        a1[3] = v64;
        uint64_t v65 = a2[5];
        a1[4] = a2[4];
        a1[5] = v65;
        uint64_t v66 = a2[7];
        a1[6] = a2[6];
        a1[7] = v66;
        uint64_t v67 = a2[9];
        a1[8] = a2[8];
        a1[9] = v67;
        uint64_t v68 = a2[10];
        uint64_t v69 = a2[11];
        a1[10] = v68;
        a1[11] = v69;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_60;
      case 0xBu:
        uint64_t v70 = type metadata accessor for PressureTrend();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v70 - 8) + 16))(a1, a2, v70);
        uint64_t v71 = (int *)type metadata accessor for PressureComponentViewModel();
        uint64_t v72 = v71[5];
        uint64_t v73 = (void *)((char *)a1 + v72);
        uint64_t v74 = (void *)((char *)a2 + v72);
        uint64_t v76 = *v74;
        uint64_t v75 = v74[1];
        void *v73 = v76;
        v73[1] = v75;
        uint64_t v77 = v71[6];
        uint64_t v78 = (void *)((char *)a1 + v77);
        uint64_t v79 = (void *)((char *)a2 + v77);
        uint64_t v80 = v79[1];
        void *v78 = *v79;
        v78[1] = v80;
        uint64_t v81 = v71[7];
        uint64_t v82 = (void *)((char *)a1 + v81);
        uint64_t v83 = (void *)((char *)a2 + v81);
        uint64_t v84 = v83[1];
        void *v82 = *v83;
        v82[1] = v84;
        *(void *)((char *)a1 + v71[8]) = *(void *)((char *)a2 + v71[8]);
        uint64_t v85 = v71[9];
        uint64_t v86 = (void *)((char *)a1 + v85);
        uint64_t v87 = (void *)((char *)a2 + v85);
        uint64_t v88 = v87[1];
        *uint64_t v86 = *v87;
        v86[1] = v88;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_60;
      case 0xDu:
        uint64_t v89 = a2[1];
        *a1 = *a2;
        a1[1] = v89;
        uint64_t v90 = a2[3];
        a1[2] = a2[2];
        a1[3] = v90;
        uint64_t v91 = a2[5];
        a1[4] = a2[4];
        a1[5] = v91;
        uint64_t v92 = a2[7];
        a1[6] = a2[6];
        a1[7] = v92;
        a1[8] = a2[8];
        uint64_t v93 = type metadata accessor for SevereAlertComponentViewModel();
        uint64_t v94 = *(int *)(v93 + 36);
        uint64_t v206 = (char *)a2 + v94;
        __dstb = (char *)a1 + v94;
        uint64_t v95 = type metadata accessor for WeatherAlert.Prominence();
        uint64_t v205 = *(void (**)(char *, char *, uint64_t))(*(void *)(v95 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v205(__dstb, v206, v95);
        *(void *)((char *)a1 + *(int *)(v93 + 40)) = *(void *)((char *)a2 + *(int *)(v93 + 40));
        goto LABEL_60;
      case 0xEu:
        uint64_t v96 = type metadata accessor for SunriseSunsetViewModel();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v96 - 8) + 16))(a1, a2, v96);
        goto LABEL_60;
      case 0xFu:
        uint64_t v97 = a2[1];
        *a1 = *a2;
        a1[1] = v97;
        uint64_t v98 = a2[3];
        a1[2] = a2[2];
        a1[3] = v98;
        uint64_t v99 = a2[5];
        a1[4] = a2[4];
        a1[5] = v99;
        uint64_t v100 = a2[7];
        a1[6] = a2[6];
        a1[7] = v100;
        uint64_t v101 = a2[9];
        a1[8] = a2[8];
        a1[9] = v101;
        uint64_t v102 = a2[11];
        a1[10] = a2[10];
        a1[11] = v102;
        uint64_t v103 = a2[13];
        a1[12] = a2[12];
        a1[13] = v103;
        uint64_t v104 = a2[15];
        a1[14] = a2[14];
        a1[15] = v104;
        uint64_t v105 = a2[17];
        a1[16] = a2[16];
        a1[17] = v105;
        uint64_t v106 = a2[19];
        a1[18] = a2[18];
        a1[19] = v106;
        uint64_t v107 = a2[21];
        a1[20] = a2[20];
        a1[21] = v107;
        uint64_t v108 = a2[23];
        a1[22] = a2[22];
        a1[23] = v108;
        uint64_t v109 = a2[24];
        uint64_t v110 = a2[25];
        a1[24] = v109;
        a1[25] = v110;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_60;
      case 0x10u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        uint64_t v111 = a2[3];
        a1[2] = a2[2];
        a1[3] = v111;
        uint64_t v112 = type metadata accessor for UVIndexComponentViewModel();
        uint64_t v113 = *(int *)(v112 + 28);
        uint64_t v114 = (char *)a1 + v113;
        uint64_t v115 = (char *)a2 + v113;
        uint64_t v116 = type metadata accessor for WeatherDescription();
        uint64_t v117 = *(void (**)(char *, char *, uint64_t))(*(void *)(v116 - 8) + 16);
        swift_bridgeObjectRetain();
        v117(v114, v115, v116);
        *(void *)((char *)a1 + *(int *)(v112 + 32)) = *(void *)((char *)a2 + *(int *)(v112 + 32));
        swift_bridgeObjectRetain();
        goto LABEL_60;
      case 0x11u:
        uint64_t v118 = a2[1];
        *a1 = *a2;
        a1[1] = v118;
        uint64_t v119 = a2[3];
        a1[2] = a2[2];
        a1[3] = v119;
        uint64_t v120 = a2[4];
        uint64_t v121 = a2[5];
        a1[4] = v120;
        a1[5] = v121;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_60;
      case 0x12u:
        uint64_t v122 = a2[1];
        *a1 = *a2;
        a1[1] = v122;
        uint64_t v123 = a2[3];
        a1[2] = a2[2];
        a1[3] = v123;
        uint64_t v124 = a2[5];
        a1[4] = a2[4];
        a1[5] = v124;
        uint64_t v125 = a2[7];
        a1[6] = a2[6];
        a1[7] = v125;
        uint64_t v126 = a2[9];
        a1[8] = a2[8];
        a1[9] = v126;
        uint64_t v127 = a2[11];
        a1[10] = a2[10];
        a1[11] = v127;
        uint64_t v128 = a2[13];
        a1[12] = a2[12];
        a1[13] = v128;
        uint64_t v129 = a2[15];
        a1[14] = a2[14];
        a1[15] = v129;
        uint64_t v130 = a2[17];
        a1[16] = a2[16];
        a1[17] = v130;
        uint64_t v131 = a2[19];
        a1[18] = a2[18];
        a1[19] = v131;
        uint64_t v132 = a2[21];
        a1[20] = a2[20];
        a1[21] = v132;
        *((_OWORD *)a1 + 11) = *((_OWORD *)a2 + 11);
        a1[24] = a2[24];
        __dstc = (int *)type metadata accessor for WindComponentViewModel();
        uint64_t v133 = __dstc[17];
        Swift::String v203 = (char *)a2 + v133;
        uint64_t v204 = (char *)a1 + v133;
        uint64_t v134 = type metadata accessor for WindComponentCompassViewModel();
        uint64_t v202 = *(void (**)(char *, char *, uint64_t))(*(void *)(v134 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v202(v204, v203, v134);
        *(void *)((char *)a1 + __dstc[18]) = *(void *)((char *)a2 + __dstc[18]);
        swift_bridgeObjectRetain();
        goto LABEL_60;
      default:
        memcpy(a1, a2, *(void *)(v6 + 64));
        return a1;
    }
  }
  return a1;
}

void *sub_1009EEE84(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1001EC534((uint64_t)a1, (void (*)(void))type metadata accessor for LocationComponentViewModel);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        *a1 = *a2;
        *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 1);
        a1[3] = a2[3];
        a1[4] = a2[4];
        a1[5] = a2[5];
        a1[6] = a2[6];
        a1[7] = a2[7];
        a1[8] = a2[8];
        a1[9] = a2[9];
        a1[10] = a2[10];
        a1[11] = a2[11];
        *((unsigned char *)a1 + 96) = *((unsigned char *)a2 + 96);
        *((unsigned char *)a1 + 97) = *((unsigned char *)a2 + 97);
        a1[13] = a2[13];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_59;
      case 1u:
        *a1 = *a2;
        uint64_t v6 = (int *)type metadata accessor for DailyForecastComponentViewModel(0);
        uint64_t v7 = v6[5];
        uint64_t v8 = (char *)a1 + v7;
        uint64_t v9 = (char *)a2 + v7;
        swift_bridgeObjectRetain();
        uint64_t v10 = sub_10017DF08(&qword_100E65250);
        uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
        v11(v8, v9, v10);
        v11((char *)a1 + v6[6], (char *)a2 + v6[6], v10);
        v11((char *)a1 + v6[7], (char *)a2 + v6[7], v10);
        uint64_t v12 = v6[8];
        int v13 = (void *)((char *)a1 + v12);
        uint64_t v14 = (void *)((char *)a2 + v12);
        void *v13 = *v14;
        v13[1] = v14[1];
        uint64_t v15 = v6[9];
        uint64_t v16 = (void *)((char *)a1 + v15);
        uint64_t v17 = (void *)((char *)a2 + v15);
        *uint64_t v16 = *v17;
        v16[1] = v17[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_59;
      case 2u:
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        a1[3] = a2[3];
        uint64_t v18 = (int *)type metadata accessor for FeelsLikeComponentViewModel(0);
        uint64_t v19 = v18[6];
        uint64_t v20 = (void *)((char *)a1 + v19);
        uint64_t v21 = (void *)((char *)a2 + v19);
        uint64_t v22 = type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference(0);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v21, 1, v22))
        {
          uint64_t v23 = sub_10017DF08(&qword_100E63750);
          memcpy(v20, v21, *(void *)(*(void *)(v23 - 8) + 64));
        }
        else
        {
          void *v20 = *v21;
          v20[1] = v21[1];
          uint64_t v78 = *(int *)(v22 + 20);
          uint64_t v79 = (char *)v20 + v78;
          uint64_t v80 = (char *)v21 + v78;
          uint64_t v81 = type metadata accessor for TemperatureScaleConfiguration();
          uint64_t v145 = *(void (**)(char *, char *, uint64_t))(*(void *)(v81 - 8) + 16);
          swift_bridgeObjectRetain();
          v145(v79, v80, v81);
          uint64_t v82 = (int *)type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
          *(void *)&v79[v82[5]] = *(void *)&v80[v82[5]];
          *(void *)&v79[v82[6]] = *(void *)&v80[v82[6]];
          *(void *)&v79[v82[7]] = *(void *)&v80[v82[7]];
          uint64_t v83 = v82[8];
          uint64_t v84 = &v79[v83];
          uint64_t v85 = &v80[v83];
          *(void *)uint64_t v84 = *(void *)v85;
          *((void *)v84 + 1) = *((void *)v85 + 1);
          v79[v82[9]] = v80[v82[9]];
          swift_bridgeObjectRetain();
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v20, 0, 1, v22);
        }
        goto LABEL_58;
      case 3u:
        *a1 = *a2;
        swift_bridgeObjectRetain();
        goto LABEL_59;
      case 4u:
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        swift_bridgeObjectRetain();
        goto LABEL_59;
      case 5u:
        uint64_t v24 = type metadata accessor for WeatherMapOverlayKind();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v24 - 8) + 16))(a1, a2, v24);
        uint64_t v18 = (int *)type metadata accessor for MapComponentViewModel();
        uint64_t v25 = v18[5];
        uint64_t v26 = (char *)a1 + v25;
        uint64_t v27 = (char *)a2 + v25;
        uint64_t v28 = type metadata accessor for Location();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 16))(v26, v27, v28);
        uint64_t v29 = v18[6];
        uint64_t v30 = (void *)((char *)a1 + v29);
        uint64_t v31 = (void *)((char *)a2 + v29);
        uint64_t v32 = (int *)type metadata accessor for WeatherData(0);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v31, 1, (uint64_t)v32))
        {
          uint64_t v33 = sub_10017DF08(&qword_100E63850);
          memcpy(v30, v31, *(void *)(*(void *)(v33 - 8) + 64));
          goto LABEL_58;
        }
        __dst = v18;
        *uint64_t v30 = *v31;
        v30[1] = v31[1];
        uint64_t v86 = v32[5];
        uint64_t v87 = (char *)v30 + v86;
        uint64_t v88 = (char *)v31 + v86;
        uint64_t v89 = type metadata accessor for Locale();
        swift_bridgeObjectRetain();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v88, 1, v89))
        {
          uint64_t v90 = sub_10017DF08(&qword_100E63730);
          memcpy(v87, v88, *(void *)(*(void *)(v90 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v89 - 8) + 16))(v87, v88, v89);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v87, 0, 1, v89);
        }
        uint64_t v109 = v32[6];
        uint64_t v110 = (char *)v30 + v109;
        uint64_t v111 = (char *)v31 + v109;
        uint64_t v112 = type metadata accessor for WeatherDataModel();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v112 - 8) + 16))(v110, v111, v112);
        uint64_t v113 = v32[7];
        uint64_t v114 = (char *)v30 + v113;
        uint64_t v115 = (char *)v31 + v113;
        uint64_t v116 = sub_10017DF08(&qword_100E63738);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v115, 1, v116))
        {
          uint64_t v117 = type metadata accessor for WeatherData.CachingState(0);
          memcpy(v114, v115, *(void *)(*(void *)(v117 - 8) + 64));
        }
        else
        {
          uint64_t v118 = type metadata accessor for Date();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v118 - 8) + 16))(v114, v115, v118);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v114, 0, 1, v116);
        }
        uint64_t v18 = __dst;
        uint64_t v119 = v32[8];
        uint64_t v120 = (void *)((char *)v30 + v119);
        uint64_t v121 = (void *)((char *)v31 + v119);
        uint64_t v122 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload == 1)
        {
          uint64_t v124 = type metadata accessor for WeatherStatisticsModel();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v124 - 8) + 16))(v120, v121, v124);
          goto LABEL_46;
        }
        if (!EnumCaseMultiPayload)
        {
          *uint64_t v120 = *v121;
          v120[1] = v121[1];
          swift_bridgeObjectRetain();
LABEL_46:
          swift_storeEnumTagMultiPayload();
          goto LABEL_48;
        }
        memcpy(v120, v121, *(void *)(*(void *)(v122 - 8) + 64));
LABEL_48:
        uint64_t v125 = v32[9];
        uint64_t v126 = (char *)v30 + v125;
        uint64_t v127 = (char *)v31 + v125;
        uint64_t v128 = type metadata accessor for WeatherDataOverrides();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v127, 1, v128))
        {
          uint64_t v129 = sub_10017DF08(&qword_100E63740);
          memcpy(v126, v127, *(void *)(*(void *)(v129 - 8) + 64));
        }
        else
        {
          uint64_t v130 = type metadata accessor for Date();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v127, 1, v130))
          {
            uint64_t v131 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
            memcpy(v126, v127, *(void *)(*(void *)(v131 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v130 - 8) + 16))(v126, v127, v130);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v126, 0, 1, v130);
          }
          uint64_t v132 = *(int *)(v128 + 20);
          __dsta = &v126[v132];
          uint64_t v133 = &v127[v132];
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v133, 1, v130))
          {
            uint64_t v134 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
            memcpy(__dsta, v133, *(void *)(*(void *)(v134 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v130 - 8) + 16))(__dsta, v133, v130);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dsta, 0, 1, v130);
          }
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v126, 0, 1, v128);
        }
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v30, 0, 1, (uint64_t)v32);
LABEL_58:
        uint64_t v135 = v18[7];
        uint64_t v136 = (void *)((char *)a1 + v135);
        uint64_t v137 = (void *)((char *)a2 + v135);
        *uint64_t v136 = *v137;
        v136[1] = v137[1];
        swift_bridgeObjectRetain();
LABEL_59:
        swift_storeEnumTagMultiPayload();
        break;
      case 6u:
        *a1 = *a2;
        a1[1] = a2[1];
        int v34 = *((unsigned __int8 *)a2 + 32);
        swift_bridgeObjectRetain();
        if (v34 == 255)
        {
          long long v91 = *((_OWORD *)a2 + 1);
          *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
          *((_OWORD *)a1 + 1) = v91;
        }
        else
        {
          uint64_t v35 = a2[2];
          uint64_t v36 = a2[3];
          sub_1001F3C64(v35, v36, v34);
          a1[2] = v35;
          a1[3] = v36;
          *((unsigned char *)a1 + 32) = v34;
        }
        a1[5] = a2[5];
        uint64_t v92 = (int *)type metadata accessor for MoonComponentViewModel();
        uint64_t v93 = v92[7];
        uint64_t v94 = (char *)a1 + v93;
        uint64_t v95 = (char *)a2 + v93;
        uint64_t v96 = type metadata accessor for Date();
        uint64_t v97 = *(void (**)(char *, char *, uint64_t))(*(void *)(v96 - 8) + 16);
        swift_bridgeObjectRetain();
        v97(v94, v95, v96);
        *((unsigned char *)a1 + v92[8]) = *((unsigned char *)a2 + v92[8]);
        *(void *)((char *)a1 + v92[9]) = *(void *)((char *)a2 + v92[9]);
        goto LABEL_59;
      case 7u:
        uint64_t v37 = type metadata accessor for NewsArticleComponentViewModel(0);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          *a1 = *a2;
          a1[1] = a2[1];
          uint64_t v38 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
          uint64_t v39 = v38[5];
          uint64_t v40 = (char *)a1 + v39;
          uint64_t v41 = (char *)a2 + v39;
          uint64_t v42 = type metadata accessor for URL();
          swift_bridgeObjectRetain();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v41, 1, v42))
          {
            uint64_t v43 = sub_10017DF08(&qword_100E749B0);
            memcpy(v40, v41, *(void *)(*(void *)(v43 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v42 - 8) + 16))(v40, v41, v42);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v40, 0, 1, v42);
          }
          uint64_t v98 = v38[6];
          uint64_t v99 = (void *)((char *)a1 + v98);
          uint64_t v100 = (void *)((char *)a2 + v98);
          void *v99 = *v100;
          v99[1] = v100[1];
          uint64_t v101 = v38[7];
          uint64_t v102 = (char *)a1 + v101;
          uint64_t v103 = (char *)a2 + v101;
          uint64_t v104 = *(void (**)(char *, char *, uint64_t))(*(void *)(v42 - 8) + 16);
          swift_bridgeObjectRetain();
          v104(v102, v103, v42);
          uint64_t v105 = v38[8];
          uint64_t v106 = (char *)a1 + v105;
          uint64_t v107 = (char *)a2 + v105;
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2 + v105, 1, v42))
          {
            uint64_t v108 = sub_10017DF08(&qword_100E749B0);
            memcpy(v106, v107, *(void *)(*(void *)(v108 - 8) + 64));
          }
          else
          {
            v104(v106, v107, v42);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v106, 0, 1, v42);
          }
          *((unsigned char *)a1 + v38[9]) = *((unsigned char *)a2 + v38[9]);
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(a1, a2, *(void *)(*(void *)(v37 - 8) + 64));
        }
        goto LABEL_59;
      case 8u:
        *a1 = *a2;
        a1[1] = a2[1];
        uint64_t v44 = *(int *)(type metadata accessor for NextHourPrecipitationComponentViewModel() + 20);
        uint64_t v45 = (char *)a1 + v44;
        uint64_t v46 = (char *)a2 + v44;
        uint64_t HourPrecipitationChartViewModel = type metadata accessor for NextHourPrecipitationChartViewModel();
        uint64_t v48 = *(void (**)(char *, char *, uint64_t))(*(void *)(HourPrecipitationChartViewModel - 8) + 16);
        swift_bridgeObjectRetain();
        v48(v45, v46, HourPrecipitationChartViewModel);
        goto LABEL_59;
      case 9u:
        uint64_t v49 = type metadata accessor for Location();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v49 - 8) + 16))(a1, a2, v49);
        uint64_t v50 = type metadata accessor for NotificationsOptInComponentViewModel();
        *((unsigned char *)a1 + *(int *)(v50 + 20)) = *((unsigned char *)a2 + *(int *)(v50 + 20));
        goto LABEL_59;
      case 0xAu:
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        a1[3] = a2[3];
        a1[4] = a2[4];
        a1[5] = a2[5];
        a1[6] = a2[6];
        a1[7] = a2[7];
        a1[8] = a2[8];
        a1[9] = a2[9];
        a1[10] = a2[10];
        a1[11] = a2[11];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_59;
      case 0xBu:
        uint64_t v51 = type metadata accessor for PressureTrend();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v51 - 8) + 16))(a1, a2, v51);
        uint64_t v52 = (int *)type metadata accessor for PressureComponentViewModel();
        uint64_t v53 = v52[5];
        uint64_t v54 = (void *)((char *)a1 + v53);
        uint64_t v55 = (void *)((char *)a2 + v53);
        *uint64_t v54 = *v55;
        v54[1] = v55[1];
        uint64_t v56 = v52[6];
        uint64_t v57 = (void *)((char *)a1 + v56);
        uint64_t v58 = (void *)((char *)a2 + v56);
        void *v57 = *v58;
        v57[1] = v58[1];
        uint64_t v59 = v52[7];
        uint64_t v60 = (void *)((char *)a1 + v59);
        uint64_t v61 = (void *)((char *)a2 + v59);
        void *v60 = *v61;
        v60[1] = v61[1];
        *(void *)((char *)a1 + v52[8]) = *(void *)((char *)a2 + v52[8]);
        uint64_t v62 = v52[9];
        uint64_t v63 = (void *)((char *)a1 + v62);
        uint64_t v64 = (void *)((char *)a2 + v62);
        *uint64_t v63 = *v64;
        v63[1] = v64[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_59;
      case 0xDu:
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        a1[3] = a2[3];
        a1[4] = a2[4];
        a1[5] = a2[5];
        a1[6] = a2[6];
        a1[7] = a2[7];
        a1[8] = a2[8];
        uint64_t v65 = type metadata accessor for SevereAlertComponentViewModel();
        uint64_t v66 = *(int *)(v65 + 36);
        uint64_t v144 = (char *)a2 + v66;
        __dstb = (char *)a1 + v66;
        uint64_t v67 = type metadata accessor for WeatherAlert.Prominence();
        uint64_t v143 = *(void (**)(char *, char *, uint64_t))(*(void *)(v67 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v143(__dstb, v144, v67);
        *(void *)((char *)a1 + *(int *)(v65 + 40)) = *(void *)((char *)a2 + *(int *)(v65 + 40));
        goto LABEL_59;
      case 0xEu:
        uint64_t v68 = type metadata accessor for SunriseSunsetViewModel();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v68 - 8) + 16))(a1, a2, v68);
        goto LABEL_59;
      case 0xFu:
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        a1[3] = a2[3];
        a1[4] = a2[4];
        a1[5] = a2[5];
        a1[6] = a2[6];
        a1[7] = a2[7];
        a1[8] = a2[8];
        a1[9] = a2[9];
        a1[10] = a2[10];
        a1[11] = a2[11];
        a1[12] = a2[12];
        a1[13] = a2[13];
        a1[14] = a2[14];
        a1[15] = a2[15];
        a1[16] = a2[16];
        a1[17] = a2[17];
        a1[18] = a2[18];
        a1[19] = a2[19];
        a1[20] = a2[20];
        a1[21] = a2[21];
        a1[22] = a2[22];
        a1[23] = a2[23];
        a1[24] = a2[24];
        a1[25] = a2[25];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_59;
      case 0x10u:
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        a1[3] = a2[3];
        uint64_t v69 = type metadata accessor for UVIndexComponentViewModel();
        uint64_t v70 = *(int *)(v69 + 28);
        uint64_t v71 = (char *)a1 + v70;
        uint64_t v72 = (char *)a2 + v70;
        uint64_t v73 = type metadata accessor for WeatherDescription();
        uint64_t v74 = *(void (**)(char *, char *, uint64_t))(*(void *)(v73 - 8) + 16);
        swift_bridgeObjectRetain();
        v74(v71, v72, v73);
        *(void *)((char *)a1 + *(int *)(v69 + 32)) = *(void *)((char *)a2 + *(int *)(v69 + 32));
        swift_bridgeObjectRetain();
        goto LABEL_59;
      case 0x11u:
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        a1[3] = a2[3];
        a1[4] = a2[4];
        a1[5] = a2[5];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_59;
      case 0x12u:
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        a1[3] = a2[3];
        a1[4] = a2[4];
        a1[5] = a2[5];
        a1[6] = a2[6];
        a1[7] = a2[7];
        a1[8] = a2[8];
        a1[9] = a2[9];
        a1[10] = a2[10];
        a1[11] = a2[11];
        a1[12] = a2[12];
        a1[13] = a2[13];
        a1[14] = a2[14];
        a1[15] = a2[15];
        a1[16] = a2[16];
        a1[17] = a2[17];
        a1[18] = a2[18];
        a1[19] = a2[19];
        a1[20] = a2[20];
        a1[21] = a2[21];
        a1[22] = a2[22];
        a1[23] = a2[23];
        a1[24] = a2[24];
        uint64_t v75 = type metadata accessor for WindComponentViewModel();
        uint64_t v76 = *(int *)(v75 + 68);
        uint64_t v141 = (char *)a1 + v76;
        uint64_t v142 = v75;
        uint64_t v140 = (char *)a2 + v76;
        uint64_t v77 = type metadata accessor for WindComponentCompassViewModel();
        uint64_t v139 = *(void (**)(char *, char *, uint64_t))(*(void *)(v77 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v139(v141, v140, v77);
        *(void *)((char *)a1 + *(int *)(v142 + 72)) = *(void *)((char *)a2 + *(int *)(v142 + 72));
        swift_bridgeObjectRetain();
        goto LABEL_59;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        return a1;
    }
  }
  return a1;
}

uint64_t sub_1009F0320(uint64_t a1, uint64_t a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      *(void *)a1 = *(void *)a2;
      uint64_t v6 = (int *)type metadata accessor for DailyForecastComponentViewModel(0);
      uint64_t v7 = v6[5];
      uint64_t v8 = a1 + v7;
      uint64_t v9 = a2 + v7;
      uint64_t v10 = sub_10017DF08(&qword_100E65250);
      uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32);
      v11(v8, v9, v10);
      v11(a1 + v6[6], a2 + v6[6], v10);
      v11(a1 + v6[7], a2 + v6[7], v10);
      *(_OWORD *)(a1 + v6[8]) = *(_OWORD *)(a2 + v6[8]);
      *(_OWORD *)(a1 + v6[9]) = *(_OWORD *)(a2 + v6[9]);
      goto LABEL_48;
    case 2u:
      long long v12 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v12;
      uint64_t v13 = type metadata accessor for FeelsLikeComponentViewModel(0);
      uint64_t v14 = *(int *)(v13 + 24);
      uint64_t v15 = (_OWORD *)(a1 + v14);
      uint64_t v16 = (_OWORD *)(a2 + v14);
      uint64_t v17 = type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v16, 1, v17))
      {
        uint64_t v18 = sub_10017DF08(&qword_100E63750);
        memcpy(v15, v16, *(void *)(*(void *)(v18 - 8) + 64));
      }
      else
      {
        *uint64_t v15 = *v16;
        uint64_t v75 = *(int *)(v17 + 20);
        uint64_t v76 = (char *)v15 + v75;
        uint64_t v77 = (char *)v16 + v75;
        uint64_t v78 = type metadata accessor for TemperatureScaleConfiguration();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v78 - 8) + 32))(v76, v77, v78);
        uint64_t v79 = (int *)type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
        *(void *)&v76[v79[5]] = *(void *)&v77[v79[5]];
        *(void *)&v76[v79[6]] = *(void *)&v77[v79[6]];
        *(void *)&v76[v79[7]] = *(void *)&v77[v79[7]];
        *(_OWORD *)&v76[v79[8]] = *(_OWORD *)&v77[v79[8]];
        v76[v79[9]] = v77[v79[9]];
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v15, 0, 1, v17);
      }
      *(_OWORD *)(a1 + *(int *)(v13 + 28)) = *(_OWORD *)(a2 + *(int *)(v13 + 28));
      goto LABEL_48;
    case 5u:
      uint64_t v19 = type metadata accessor for WeatherMapOverlayKind();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 32))(a1, a2, v19);
      uint64_t v20 = (int *)type metadata accessor for MapComponentViewModel();
      uint64_t v21 = v20[5];
      uint64_t v22 = a1 + v21;
      uint64_t v23 = a2 + v21;
      uint64_t v24 = type metadata accessor for Location();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 32))(v22, v23, v24);
      uint64_t v25 = v20[6];
      uint64_t v26 = (_OWORD *)(a1 + v25);
      uint64_t v27 = (_OWORD *)(a2 + v25);
      uint64_t v28 = (int *)type metadata accessor for WeatherData(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v27, 1, (uint64_t)v28))
      {
        uint64_t v29 = sub_10017DF08(&qword_100E63850);
        memcpy(v26, v27, *(void *)(*(void *)(v29 - 8) + 64));
      }
      else
      {
        _OWORD *v26 = *v27;
        uint64_t v80 = v28[5];
        uint64_t v81 = (char *)v26 + v80;
        uint64_t v82 = (char *)v27 + v80;
        uint64_t v83 = type metadata accessor for Locale();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v82, 1, v83))
        {
          uint64_t v84 = sub_10017DF08(&qword_100E63730);
          memcpy(v81, v82, *(void *)(*(void *)(v84 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v83 - 8) + 32))(v81, v82, v83);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v81, 0, 1, v83);
        }
        uint64_t v90 = v28[6];
        long long v91 = (char *)v26 + v90;
        uint64_t v92 = (char *)v27 + v90;
        uint64_t v93 = type metadata accessor for WeatherDataModel();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v93 - 8) + 32))(v91, v92, v93);
        uint64_t v94 = v28[7];
        uint64_t v95 = (char *)v26 + v94;
        uint64_t v96 = (char *)v27 + v94;
        uint64_t v97 = sub_10017DF08(&qword_100E63738);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v96, 1, v97))
        {
          uint64_t v98 = type metadata accessor for WeatherData.CachingState(0);
          memcpy(v95, v96, *(void *)(*(void *)(v98 - 8) + 64));
        }
        else
        {
          uint64_t v99 = type metadata accessor for Date();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v99 - 8) + 32))(v95, v96, v99);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v95, 0, 1, v97);
        }
        uint64_t v100 = v28[8];
        uint64_t v101 = (char *)v26 + v100;
        uint64_t v102 = (char *)v27 + v100;
        uint64_t v103 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          uint64_t v104 = type metadata accessor for WeatherStatisticsModel();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v104 - 8) + 32))(v101, v102, v104);
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(v101, v102, *(void *)(*(void *)(v103 - 8) + 64));
        }
        uint64_t v105 = v28[9];
        uint64_t v106 = (char *)v26 + v105;
        uint64_t v107 = (char *)v27 + v105;
        uint64_t v108 = type metadata accessor for WeatherDataOverrides();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v107, 1, v108))
        {
          uint64_t v109 = sub_10017DF08(&qword_100E63740);
          memcpy(v106, v107, *(void *)(*(void *)(v109 - 8) + 64));
        }
        else
        {
          uint64_t v110 = type metadata accessor for Date();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v107, 1, v110))
          {
            uint64_t v111 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
            memcpy(v106, v107, *(void *)(*(void *)(v111 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v110 - 8) + 32))(v106, v107, v110);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v106, 0, 1, v110);
          }
          uint64_t v112 = *(int *)(v108 + 20);
          __dst = &v106[v112];
          uint64_t v113 = &v107[v112];
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v113, 1, v110))
          {
            uint64_t v114 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
            memcpy(__dst, v113, *(void *)(*(void *)(v114 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v110 - 8) + 32))(__dst, v113, v110);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dst, 0, 1, v110);
          }
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v106, 0, 1, v108);
        }
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v26, 0, 1, (uint64_t)v28);
      }
      *(_OWORD *)(a1 + v20[7]) = *(_OWORD *)(a2 + v20[7]);
      goto LABEL_48;
    case 6u:
      long long v30 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v30;
      *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      uint64_t v31 = (int *)type metadata accessor for MoonComponentViewModel();
      uint64_t v32 = v31[7];
      uint64_t v33 = a1 + v32;
      uint64_t v34 = a2 + v32;
      uint64_t v35 = type metadata accessor for Date();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 32))(v33, v34, v35);
      *(unsigned char *)(a1 + v31[8]) = *(unsigned char *)(a2 + v31[8]);
      *(void *)(a1 + v31[9]) = *(void *)(a2 + v31[9]);
      goto LABEL_48;
    case 7u:
      uint64_t v36 = type metadata accessor for NewsArticleComponentViewModel(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        *(_OWORD *)a1 = *(_OWORD *)a2;
        uint64_t v37 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
        uint64_t v38 = v37[5];
        uint64_t v39 = (void *)(a1 + v38);
        uint64_t v40 = (const void *)(a2 + v38);
        uint64_t v41 = type metadata accessor for URL();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v40, 1, v41))
        {
          uint64_t v42 = sub_10017DF08(&qword_100E749B0);
          memcpy(v39, v40, *(void *)(*(void *)(v42 - 8) + 64));
          uint64_t v43 = *(void *)(v41 - 8);
        }
        else
        {
          uint64_t v43 = *(void *)(v41 - 8);
          (*(void (**)(void *, const void *, uint64_t))(v43 + 32))(v39, v40, v41);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v39, 0, 1, v41);
        }
        *(_OWORD *)(a1 + v37[6]) = *(_OWORD *)(a2 + v37[6]);
        uint64_t v85 = *(void (**)(uint64_t, uint64_t, uint64_t))(v43 + 32);
        v85(a1 + v37[7], a2 + v37[7], v41);
        uint64_t v86 = v37[8];
        uint64_t v87 = (void *)(a1 + v86);
        uint64_t v88 = (const void *)(a2 + v86);
        if (_s7Weather24LocationCompositionStateOwet_0(a2 + v86, 1, v41))
        {
          uint64_t v89 = sub_10017DF08(&qword_100E749B0);
          memcpy(v87, v88, *(void *)(*(void *)(v89 - 8) + 64));
        }
        else
        {
          v85((uint64_t)v87, (uint64_t)v88, v41);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v87, 0, 1, v41);
        }
        *(unsigned char *)(a1 + v37[9]) = *(unsigned char *)(a2 + v37[9]);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v36 - 8) + 64));
      }
      goto LABEL_48;
    case 8u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      uint64_t v44 = *(int *)(type metadata accessor for NextHourPrecipitationComponentViewModel() + 20);
      uint64_t v45 = a1 + v44;
      uint64_t v46 = a2 + v44;
      uint64_t HourPrecipitationChartViewModel = type metadata accessor for NextHourPrecipitationChartViewModel();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(HourPrecipitationChartViewModel - 8) + 32))(v45, v46, HourPrecipitationChartViewModel);
      goto LABEL_48;
    case 9u:
      uint64_t v48 = type metadata accessor for Location();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v48 - 8) + 32))(a1, a2, v48);
      uint64_t v49 = type metadata accessor for NotificationsOptInComponentViewModel();
      *(unsigned char *)(a1 + *(int *)(v49 + 20)) = *(unsigned char *)(a2 + *(int *)(v49 + 20));
      goto LABEL_48;
    case 0xBu:
      uint64_t v50 = type metadata accessor for PressureTrend();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 32))(a1, a2, v50);
      uint64_t v51 = (int *)type metadata accessor for PressureComponentViewModel();
      *(_OWORD *)(a1 + v51[5]) = *(_OWORD *)(a2 + v51[5]);
      *(_OWORD *)(a1 + v51[6]) = *(_OWORD *)(a2 + v51[6]);
      *(_OWORD *)(a1 + v51[7]) = *(_OWORD *)(a2 + v51[7]);
      *(void *)(a1 + v51[8]) = *(void *)(a2 + v51[8]);
      *(_OWORD *)(a1 + v51[9]) = *(_OWORD *)(a2 + v51[9]);
      goto LABEL_48;
    case 0xDu:
      long long v52 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v52;
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
      *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
      uint64_t v53 = type metadata accessor for SevereAlertComponentViewModel();
      uint64_t v54 = *(int *)(v53 + 36);
      uint64_t v55 = a1 + v54;
      uint64_t v56 = a2 + v54;
      uint64_t v57 = type metadata accessor for WeatherAlert.Prominence();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v57 - 8) + 32))(v55, v56, v57);
      *(void *)(a1 + *(int *)(v53 + 40)) = *(void *)(a2 + *(int *)(v53 + 40));
      goto LABEL_48;
    case 0xEu:
      uint64_t v58 = type metadata accessor for SunriseSunsetViewModel();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v58 - 8) + 32))(a1, a2, v58);
      goto LABEL_48;
    case 0x10u:
      long long v59 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v59;
      uint64_t v60 = type metadata accessor for UVIndexComponentViewModel();
      uint64_t v61 = *(int *)(v60 + 28);
      uint64_t v62 = a1 + v61;
      uint64_t v63 = a2 + v61;
      uint64_t v64 = type metadata accessor for WeatherDescription();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v64 - 8) + 32))(v62, v63, v64);
      *(void *)(a1 + *(int *)(v60 + 32)) = *(void *)(a2 + *(int *)(v60 + 32));
      goto LABEL_48;
    case 0x12u:
      long long v65 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v65;
      long long v66 = *(_OWORD *)(a2 + 48);
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
      *(_OWORD *)(a1 + 48) = v66;
      long long v67 = *(_OWORD *)(a2 + 80);
      *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
      *(_OWORD *)(a1 + 80) = v67;
      long long v68 = *(_OWORD *)(a2 + 112);
      *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
      *(_OWORD *)(a1 + 112) = v68;
      long long v69 = *(_OWORD *)(a2 + 144);
      *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
      *(_OWORD *)(a1 + 144) = v69;
      *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
      *(void *)(a1 + 176) = *(void *)(a2 + 176);
      *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
      uint64_t v70 = type metadata accessor for WindComponentViewModel();
      uint64_t v71 = *(int *)(v70 + 68);
      uint64_t v72 = a1 + v71;
      uint64_t v73 = a2 + v71;
      uint64_t v74 = type metadata accessor for WindComponentCompassViewModel();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v74 - 8) + 32))(v72, v73, v74);
      *(void *)(a1 + *(int *)(v70 + 72)) = *(void *)(a2 + *(int *)(v70 + 72));
LABEL_48:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

uint64_t sub_1009F10EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1001EC534(a1, (void (*)(void))type metadata accessor for LocationComponentViewModel);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        *(void *)a1 = *(void *)a2;
        uint64_t v6 = (int *)type metadata accessor for DailyForecastComponentViewModel(0);
        uint64_t v7 = v6[5];
        uint64_t v8 = a1 + v7;
        uint64_t v9 = a2 + v7;
        uint64_t v10 = sub_10017DF08(&qword_100E65250);
        uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32);
        v11(v8, v9, v10);
        v11(a1 + v6[6], a2 + v6[6], v10);
        v11(a1 + v6[7], a2 + v6[7], v10);
        *(_OWORD *)(a1 + v6[8]) = *(_OWORD *)(a2 + v6[8]);
        *(_OWORD *)(a1 + v6[9]) = *(_OWORD *)(a2 + v6[9]);
        goto LABEL_49;
      case 2u:
        long long v12 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v12;
        uint64_t v13 = type metadata accessor for FeelsLikeComponentViewModel(0);
        uint64_t v14 = *(int *)(v13 + 24);
        uint64_t v15 = (_OWORD *)(a1 + v14);
        uint64_t v16 = (_OWORD *)(a2 + v14);
        uint64_t v17 = type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference(0);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v16, 1, v17))
        {
          uint64_t v18 = sub_10017DF08(&qword_100E63750);
          memcpy(v15, v16, *(void *)(*(void *)(v18 - 8) + 64));
        }
        else
        {
          *uint64_t v15 = *v16;
          uint64_t v75 = *(int *)(v17 + 20);
          uint64_t v76 = (char *)v15 + v75;
          uint64_t v77 = (char *)v16 + v75;
          uint64_t v78 = type metadata accessor for TemperatureScaleConfiguration();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v78 - 8) + 32))(v76, v77, v78);
          uint64_t v79 = (int *)type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
          *(void *)&v76[v79[5]] = *(void *)&v77[v79[5]];
          *(void *)&v76[v79[6]] = *(void *)&v77[v79[6]];
          *(void *)&v76[v79[7]] = *(void *)&v77[v79[7]];
          *(_OWORD *)&v76[v79[8]] = *(_OWORD *)&v77[v79[8]];
          v76[v79[9]] = v77[v79[9]];
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v15, 0, 1, v17);
        }
        *(_OWORD *)(a1 + *(int *)(v13 + 28)) = *(_OWORD *)(a2 + *(int *)(v13 + 28));
        goto LABEL_49;
      case 5u:
        uint64_t v19 = type metadata accessor for WeatherMapOverlayKind();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 32))(a1, a2, v19);
        uint64_t v20 = (int *)type metadata accessor for MapComponentViewModel();
        uint64_t v21 = v20[5];
        uint64_t v22 = a1 + v21;
        uint64_t v23 = a2 + v21;
        uint64_t v24 = type metadata accessor for Location();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 32))(v22, v23, v24);
        uint64_t v25 = v20[6];
        uint64_t v26 = (_OWORD *)(a1 + v25);
        uint64_t v27 = (_OWORD *)(a2 + v25);
        uint64_t v28 = (int *)type metadata accessor for WeatherData(0);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v27, 1, (uint64_t)v28))
        {
          uint64_t v29 = sub_10017DF08(&qword_100E63850);
          memcpy(v26, v27, *(void *)(*(void *)(v29 - 8) + 64));
        }
        else
        {
          _OWORD *v26 = *v27;
          uint64_t v80 = v28[5];
          uint64_t v81 = (char *)v26 + v80;
          uint64_t v82 = (char *)v27 + v80;
          uint64_t v83 = type metadata accessor for Locale();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v82, 1, v83))
          {
            uint64_t v84 = sub_10017DF08(&qword_100E63730);
            memcpy(v81, v82, *(void *)(*(void *)(v84 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v83 - 8) + 32))(v81, v82, v83);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v81, 0, 1, v83);
          }
          uint64_t v90 = v28[6];
          long long v91 = (char *)v26 + v90;
          uint64_t v92 = (char *)v27 + v90;
          uint64_t v93 = type metadata accessor for WeatherDataModel();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v93 - 8) + 32))(v91, v92, v93);
          uint64_t v94 = v28[7];
          uint64_t v95 = (char *)v26 + v94;
          uint64_t v96 = (char *)v27 + v94;
          uint64_t v97 = sub_10017DF08(&qword_100E63738);
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v96, 1, v97))
          {
            uint64_t v98 = type metadata accessor for WeatherData.CachingState(0);
            memcpy(v95, v96, *(void *)(*(void *)(v98 - 8) + 64));
          }
          else
          {
            uint64_t v99 = type metadata accessor for Date();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v99 - 8) + 32))(v95, v96, v99);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v95, 0, 1, v97);
          }
          uint64_t v100 = v28[8];
          uint64_t v101 = (char *)v26 + v100;
          uint64_t v102 = (char *)v27 + v100;
          uint64_t v103 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            uint64_t v104 = type metadata accessor for WeatherStatisticsModel();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v104 - 8) + 32))(v101, v102, v104);
            swift_storeEnumTagMultiPayload();
          }
          else
          {
            memcpy(v101, v102, *(void *)(*(void *)(v103 - 8) + 64));
          }
          uint64_t v105 = v28[9];
          uint64_t v106 = (char *)v26 + v105;
          uint64_t v107 = (char *)v27 + v105;
          uint64_t v108 = type metadata accessor for WeatherDataOverrides();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v107, 1, v108))
          {
            uint64_t v109 = sub_10017DF08(&qword_100E63740);
            memcpy(v106, v107, *(void *)(*(void *)(v109 - 8) + 64));
          }
          else
          {
            uint64_t v110 = type metadata accessor for Date();
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v107, 1, v110))
            {
              uint64_t v111 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
              memcpy(v106, v107, *(void *)(*(void *)(v111 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v110 - 8) + 32))(v106, v107, v110);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v106, 0, 1, v110);
            }
            uint64_t v112 = *(int *)(v108 + 20);
            __dst = &v106[v112];
            uint64_t v113 = &v107[v112];
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v113, 1, v110))
            {
              uint64_t v114 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
              memcpy(__dst, v113, *(void *)(*(void *)(v114 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v110 - 8) + 32))(__dst, v113, v110);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dst, 0, 1, v110);
            }
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v106, 0, 1, v108);
          }
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v26, 0, 1, (uint64_t)v28);
        }
        *(_OWORD *)(a1 + v20[7]) = *(_OWORD *)(a2 + v20[7]);
        goto LABEL_49;
      case 6u:
        long long v30 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v30;
        *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
        *(void *)(a1 + 40) = *(void *)(a2 + 40);
        uint64_t v31 = (int *)type metadata accessor for MoonComponentViewModel();
        uint64_t v32 = v31[7];
        uint64_t v33 = a1 + v32;
        uint64_t v34 = a2 + v32;
        uint64_t v35 = type metadata accessor for Date();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 32))(v33, v34, v35);
        *(unsigned char *)(a1 + v31[8]) = *(unsigned char *)(a2 + v31[8]);
        *(void *)(a1 + v31[9]) = *(void *)(a2 + v31[9]);
        goto LABEL_49;
      case 7u:
        uint64_t v36 = type metadata accessor for NewsArticleComponentViewModel(0);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          *(_OWORD *)a1 = *(_OWORD *)a2;
          uint64_t v37 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
          uint64_t v38 = v37[5];
          uint64_t v39 = (void *)(a1 + v38);
          uint64_t v40 = (const void *)(a2 + v38);
          uint64_t v41 = type metadata accessor for URL();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v40, 1, v41))
          {
            uint64_t v42 = sub_10017DF08(&qword_100E749B0);
            memcpy(v39, v40, *(void *)(*(void *)(v42 - 8) + 64));
            uint64_t v43 = *(void *)(v41 - 8);
          }
          else
          {
            uint64_t v43 = *(void *)(v41 - 8);
            (*(void (**)(void *, const void *, uint64_t))(v43 + 32))(v39, v40, v41);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v39, 0, 1, v41);
          }
          *(_OWORD *)(a1 + v37[6]) = *(_OWORD *)(a2 + v37[6]);
          uint64_t v85 = *(void (**)(uint64_t, uint64_t, uint64_t))(v43 + 32);
          v85(a1 + v37[7], a2 + v37[7], v41);
          uint64_t v86 = v37[8];
          uint64_t v87 = (void *)(a1 + v86);
          uint64_t v88 = (const void *)(a2 + v86);
          if (_s7Weather24LocationCompositionStateOwet_0(a2 + v86, 1, v41))
          {
            uint64_t v89 = sub_10017DF08(&qword_100E749B0);
            memcpy(v87, v88, *(void *)(*(void *)(v89 - 8) + 64));
          }
          else
          {
            v85((uint64_t)v87, (uint64_t)v88, v41);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v87, 0, 1, v41);
          }
          *(unsigned char *)(a1 + v37[9]) = *(unsigned char *)(a2 + v37[9]);
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v36 - 8) + 64));
        }
        goto LABEL_49;
      case 8u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        uint64_t v44 = *(int *)(type metadata accessor for NextHourPrecipitationComponentViewModel() + 20);
        uint64_t v45 = a1 + v44;
        uint64_t v46 = a2 + v44;
        uint64_t HourPrecipitationChartViewModel = type metadata accessor for NextHourPrecipitationChartViewModel();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(HourPrecipitationChartViewModel - 8) + 32))(v45, v46, HourPrecipitationChartViewModel);
        goto LABEL_49;
      case 9u:
        uint64_t v48 = type metadata accessor for Location();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v48 - 8) + 32))(a1, a2, v48);
        uint64_t v49 = type metadata accessor for NotificationsOptInComponentViewModel();
        *(unsigned char *)(a1 + *(int *)(v49 + 20)) = *(unsigned char *)(a2 + *(int *)(v49 + 20));
        goto LABEL_49;
      case 0xBu:
        uint64_t v50 = type metadata accessor for PressureTrend();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 32))(a1, a2, v50);
        uint64_t v51 = (int *)type metadata accessor for PressureComponentViewModel();
        *(_OWORD *)(a1 + v51[5]) = *(_OWORD *)(a2 + v51[5]);
        *(_OWORD *)(a1 + v51[6]) = *(_OWORD *)(a2 + v51[6]);
        *(_OWORD *)(a1 + v51[7]) = *(_OWORD *)(a2 + v51[7]);
        *(void *)(a1 + v51[8]) = *(void *)(a2 + v51[8]);
        *(_OWORD *)(a1 + v51[9]) = *(_OWORD *)(a2 + v51[9]);
        goto LABEL_49;
      case 0xDu:
        long long v52 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v52;
        *(void *)(a1 + 32) = *(void *)(a2 + 32);
        *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
        *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
        uint64_t v53 = type metadata accessor for SevereAlertComponentViewModel();
        uint64_t v54 = *(int *)(v53 + 36);
        uint64_t v55 = a1 + v54;
        uint64_t v56 = a2 + v54;
        uint64_t v57 = type metadata accessor for WeatherAlert.Prominence();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v57 - 8) + 32))(v55, v56, v57);
        *(void *)(a1 + *(int *)(v53 + 40)) = *(void *)(a2 + *(int *)(v53 + 40));
        goto LABEL_49;
      case 0xEu:
        uint64_t v58 = type metadata accessor for SunriseSunsetViewModel();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v58 - 8) + 32))(a1, a2, v58);
        goto LABEL_49;
      case 0x10u:
        long long v59 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v59;
        uint64_t v60 = type metadata accessor for UVIndexComponentViewModel();
        uint64_t v61 = *(int *)(v60 + 28);
        uint64_t v62 = a1 + v61;
        uint64_t v63 = a2 + v61;
        uint64_t v64 = type metadata accessor for WeatherDescription();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v64 - 8) + 32))(v62, v63, v64);
        *(void *)(a1 + *(int *)(v60 + 32)) = *(void *)(a2 + *(int *)(v60 + 32));
        goto LABEL_49;
      case 0x12u:
        long long v65 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v65;
        long long v66 = *(_OWORD *)(a2 + 48);
        *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
        *(_OWORD *)(a1 + 48) = v66;
        long long v67 = *(_OWORD *)(a2 + 80);
        *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
        *(_OWORD *)(a1 + 80) = v67;
        long long v68 = *(_OWORD *)(a2 + 112);
        *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
        *(_OWORD *)(a1 + 112) = v68;
        long long v69 = *(_OWORD *)(a2 + 144);
        *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
        *(_OWORD *)(a1 + 144) = v69;
        *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
        *(void *)(a1 + 176) = *(void *)(a2 + 176);
        *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
        uint64_t v70 = type metadata accessor for WindComponentViewModel();
        uint64_t v71 = *(int *)(v70 + 68);
        uint64_t v72 = a1 + v71;
        uint64_t v73 = a2 + v71;
        uint64_t v74 = type metadata accessor for WindComponentCompassViewModel();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v74 - 8) + 32))(v72, v73, v74);
        *(void *)(a1 + *(int *)(v70 + 72)) = *(void *)(a2 + *(int *)(v70 + 72));
LABEL_49:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_1009F1F2C(uint64_t a1, double *a2)
{
  uint64_t v201 = a1;
  uint64_t v202 = a2;
  uint64_t v2 = type metadata accessor for WindComponentViewModel();
  uint64_t v3 = sub_100109308(v2);
  __chkstk_darwin(v3);
  sub_100109314();
  uint64_t v183 = v4;
  sub_100129064();
  uint64_t v169 = type metadata accessor for UVIndexComponentViewModel();
  sub_100162E4C();
  __chkstk_darwin(v5);
  sub_100109314();
  uint64_t v184 = (double *)v6;
  sub_100129064();
  uint64_t v7 = type metadata accessor for SunriseSunsetViewModel();
  uint64_t v199 = *(void *)(v7 - 8);
  uint64_t v200 = v7;
  __chkstk_darwin(v7);
  sub_100109314();
  uint64_t v182 = v8;
  sub_100129064();
  uint64_t v9 = type metadata accessor for SevereAlertComponentViewModel();
  uint64_t v10 = sub_100109308(v9);
  __chkstk_darwin(v10);
  sub_100109314();
  uint64_t v181 = v11;
  sub_100129064();
  uint64_t v12 = type metadata accessor for PressureComponentViewModel();
  uint64_t v13 = sub_100109308(v12);
  __chkstk_darwin(v13);
  sub_100109314();
  uint64_t v179 = v14;
  sub_100129064();
  uint64_t v170 = type metadata accessor for NotificationsOptInComponentViewModel();
  sub_100162E4C();
  __chkstk_darwin(v15);
  sub_100109314();
  uint64_t v180 = (double *)v16;
  sub_100129064();
  uint64_t HourPrecipitationComponentViewModel = type metadata accessor for NextHourPrecipitationComponentViewModel();
  sub_100162E4C();
  __chkstk_darwin(v17);
  sub_100109314();
  uint64_t v178 = (double *)v18;
  uint64_t v19 = sub_100129064();
  uint64_t v20 = type metadata accessor for NewsArticleComponentViewModel(v19);
  uint64_t v21 = sub_100109308(v20);
  __chkstk_darwin(v21);
  sub_100109314();
  uint64_t v176 = v22;
  sub_100129064();
  uint64_t v23 = type metadata accessor for MoonComponentViewModel();
  uint64_t v24 = sub_100109308(v23);
  __chkstk_darwin(v24);
  sub_100109314();
  uint64_t v175 = v25;
  sub_100129064();
  uint64_t v26 = type metadata accessor for MapComponentViewModel();
  uint64_t v27 = sub_100109308(v26);
  __chkstk_darwin(v27);
  sub_100109314();
  uint64_t v174 = v28;
  uint64_t v29 = sub_100129064();
  uint64_t v30 = type metadata accessor for FeelsLikeComponentViewModel(v29);
  uint64_t v31 = sub_100109308(v30);
  __chkstk_darwin(v31);
  sub_100109314();
  uint64_t v173 = (void *)v32;
  uint64_t v33 = sub_100129064();
  uint64_t v172 = type metadata accessor for DailyForecastComponentViewModel(v33);
  sub_100162E4C();
  __chkstk_darwin(v34);
  sub_100109314();
  uint64_t v177 = v35;
  sub_100129064();
  type metadata accessor for LocationComponentViewModel();
  sub_100162E4C();
  __chkstk_darwin(v36);
  uint64_t v197 = (char *)&v168 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001626D4();
  __chkstk_darwin(v38);
  sub_100109770();
  uint64_t v193 = (uint64_t *)v39;
  sub_1001626D4();
  __chkstk_darwin(v40);
  sub_100109770();
  uint64_t v198 = (double *)v41;
  sub_1001626D4();
  __chkstk_darwin(v42);
  sub_100109770();
  uint64_t v189 = (const void *)v43;
  sub_1001626D4();
  __chkstk_darwin(v44);
  sub_100109770();
  uint64_t v194 = v45;
  sub_1001626D4();
  __chkstk_darwin(v46);
  sub_100109770();
  uint64_t v191 = (char *)v47;
  sub_1001626D4();
  __chkstk_darwin(v48);
  sub_100109770();
  uint64_t v188 = (unsigned char *)v49;
  sub_1001626D4();
  __chkstk_darwin(v50);
  sub_100109770();
  uint64_t v190 = (char *)v51;
  sub_1001626D4();
  __chkstk_darwin(v52);
  sub_100109770();
  uint64_t v185 = (const void *)v53;
  sub_1001626D4();
  __chkstk_darwin(v54);
  sub_100109770();
  uint64_t v195 = (double *)v55;
  sub_1001626D4();
  __chkstk_darwin(v56);
  sub_100109770();
  uint64_t v192 = (double *)v57;
  sub_1001626D4();
  __chkstk_darwin(v58);
  sub_100109770();
  uint64_t v187 = (char *)v59;
  sub_1001626D4();
  __chkstk_darwin(v60);
  sub_100109770();
  uint64_t v186 = (char *)v61;
  sub_1001626D4();
  uint64_t v63 = __chkstk_darwin(v62);
  long long v65 = (char *)&v168 - v64;
  uint64_t v66 = __chkstk_darwin(v63);
  long long v68 = (char *)&v168 - v67;
  uint64_t v69 = __chkstk_darwin(v66);
  uint64_t v71 = (char *)&v168 - v70;
  uint64_t v72 = __chkstk_darwin(v69);
  uint64_t v74 = (uint64_t *)((char *)&v168 - v73);
  __chkstk_darwin(v72);
  sub_100109770();
  uint64_t v196 = v75;
  sub_1001626D4();
  __chkstk_darwin(v76);
  uint64_t v78 = (char *)&v168 - v77;
  uint64_t v79 = sub_10017DF08(&qword_100EA9140);
  uint64_t v80 = sub_100109308(v79);
  __chkstk_darwin(v80);
  sub_1001626E0();
  uint64_t v83 = v82 - v81;
  uint64_t v85 = v82 - v81 + *(int *)(v84 + 56);
  sub_1001F3A64(v201, v82 - v81, (void (*)(void))type metadata accessor for LocationComponentViewModel);
  uint64_t v86 = (uint64_t)v202;
  uint64_t v202 = (double *)v85;
  sub_1001F3A64(v86, v85, (void (*)(void))type metadata accessor for LocationComponentViewModel);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v87 = v196;
      sub_1001F3A64(v83, v196, (void (*)(void))type metadata accessor for LocationComponentViewModel);
      if (sub_10017D994() != 1)
      {
        uint64_t v158 = type metadata accessor for DailyForecastComponentViewModel;
        uint64_t v159 = v87;
        goto LABEL_118;
      }
      uint64_t v88 = v177;
      sub_1009F346C((uint64_t)v78, v177, (void (*)(void))type metadata accessor for DailyForecastComponentViewModel);
      sub_100BDC6A0();
      if (v89)
      {
        sub_1001433AC();
        if ((static Measurement.== infix<A, B>(_:_:)() & 1) != 0
          && (sub_100163BF0() & 1) != 0
          && (sub_100163BF0() & 1) != 0)
        {
          sub_1001D20D8(*(int *)(v172 + 32));
          BOOL v92 = v92 && v90 == v91;
          if (v92 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
          {
            sub_1001D20D8(*(int *)(v172 + 36));
            BOOL v95 = v92 && v93 == v94;
            if (v95 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
            {
              uint64_t v96 = type metadata accessor for DailyForecastComponentViewModel;
              sub_1001EC534(v88, (void (*)(void))type metadata accessor for DailyForecastComponentViewModel);
              uint64_t v97 = v87;
              goto LABEL_138;
            }
          }
        }
      }
      uint64_t v163 = type metadata accessor for DailyForecastComponentViewModel;
      sub_1001EC534(v88, (void (*)(void))type metadata accessor for DailyForecastComponentViewModel);
      uint64_t v164 = v87;
      goto LABEL_143;
    case 2u:
      sub_1001F3A64(v83, (uint64_t)v74, (void (*)(void))type metadata accessor for LocationComponentViewModel);
      if (sub_10017D994() == 2)
      {
        uint64_t v98 = v173;
        sub_1009F346C((uint64_t)v78, (uint64_t)v173, (void (*)(void))type metadata accessor for FeelsLikeComponentViewModel);
        char v99 = sub_10042C530(v74, v98);
        uint64_t v100 = type metadata accessor for FeelsLikeComponentViewModel;
        sub_1001EC534((uint64_t)v98, (void (*)(void))type metadata accessor for FeelsLikeComponentViewModel);
        uint64_t v101 = (uint64_t)v74;
        goto LABEL_95;
      }
      uint64_t v158 = type metadata accessor for FeelsLikeComponentViewModel;
      uint64_t v159 = (uint64_t)v74;
      goto LABEL_118;
    case 3u:
      sub_1001F3A64(v83, (uint64_t)v71, (void (*)(void))type metadata accessor for LocationComponentViewModel);
      if (sub_10017D994() != 3) {
        goto LABEL_102;
      }
      sub_100BDBED8();
      char v99 = v102;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_97;
    case 4u:
      sub_1001F3A64(v83, (uint64_t)v68, (void (*)(void))type metadata accessor for LocationComponentViewModel);
      uint64_t v104 = *((void *)v68 + 1);
      uint64_t v103 = *((void *)v68 + 2);
      uint64_t v105 = v202;
      if (swift_getEnumCaseMultiPayload() != 4)
      {
LABEL_102:
        swift_bridgeObjectRelease();
        goto LABEL_119;
      }
      if (*(double *)v68 != *v105)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_144;
      }
      if (v104 == *((void *)v105 + 1) && v103 == *((void *)v105 + 2))
      {
        swift_bridgeObjectRelease_n();
        goto LABEL_139;
      }
      char v107 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v107) {
        goto LABEL_139;
      }
      goto LABEL_144;
    case 5u:
      sub_1001F3A64(v83, (uint64_t)v65, (void (*)(void))type metadata accessor for LocationComponentViewModel);
      if (sub_10017D994() == 5)
      {
        uint64_t v108 = v174;
        sub_1009F346C((uint64_t)v78, v174, (void (*)(void))type metadata accessor for MapComponentViewModel);
        uint64_t v109 = sub_100127C2C();
        char v99 = sub_100418590(v109, v110);
        uint64_t v111 = type metadata accessor for MapComponentViewModel;
        goto LABEL_94;
      }
      uint64_t v160 = (uint64_t (*)(uint64_t))type metadata accessor for MapComponentViewModel;
      goto LABEL_117;
    case 6u:
      long long v65 = v186;
      sub_1001F3A64(v83, (uint64_t)v186, (void (*)(void))type metadata accessor for LocationComponentViewModel);
      if (sub_10017D994() == 6)
      {
        uint64_t v108 = v175;
        sub_1009F346C((uint64_t)v78, v175, (void (*)(void))type metadata accessor for MoonComponentViewModel);
        uint64_t v112 = sub_100127C2C();
        char v99 = sub_1003FCD4C(v112, v113);
        uint64_t v111 = type metadata accessor for MoonComponentViewModel;
        goto LABEL_94;
      }
      uint64_t v160 = (uint64_t (*)(uint64_t))type metadata accessor for MoonComponentViewModel;
      goto LABEL_117;
    case 7u:
      long long v65 = v187;
      sub_1001F3A64(v83, (uint64_t)v187, (void (*)(void))type metadata accessor for LocationComponentViewModel);
      if (sub_10017D994() == 7)
      {
        uint64_t v114 = v176;
        sub_1009F346C((uint64_t)v78, v176, (void (*)(void))type metadata accessor for NewsArticleComponentViewModel);
        char v99 = sub_100362288((uint64_t)v65, v114);
        sub_1001EC534(v114, (void (*)(void))type metadata accessor for NewsArticleComponentViewModel);
        uint64_t v101 = sub_100127C2C();
        goto LABEL_96;
      }
      uint64_t v160 = type metadata accessor for NewsArticleComponentViewModel;
      goto LABEL_117;
    case 8u:
      uint64_t v116 = v192;
      sub_1001F3A64(v83, (uint64_t)v192, (void (*)(void))type metadata accessor for LocationComponentViewModel);
      if (sub_10017D994() != 8)
      {
        uint64_t v161 = type metadata accessor for NextHourPrecipitationComponentViewModel;
        goto LABEL_114;
      }
      uint64_t v117 = v178;
      sub_1009F346C((uint64_t)v78, (uint64_t)v178, (void (*)(void))type metadata accessor for NextHourPrecipitationComponentViewModel);
      BOOL v118 = *(void *)v116 == *(void *)v117 && *((void *)v116 + 1) == *((void *)v117 + 1);
      if (v118 || (_stringCompareWithSmolCheck(_:_:expecting:)())
        && (static NextHourPrecipitationChartViewModel.== infix(_:_:)() & 1) != 0)
      {
        uint64_t v119 = type metadata accessor for NextHourPrecipitationComponentViewModel;
        goto LABEL_137;
      }
      uint64_t v165 = type metadata accessor for NextHourPrecipitationComponentViewModel;
      goto LABEL_142;
    case 9u:
      uint64_t v116 = v195;
      sub_1001F3A64(v83, (uint64_t)v195, (void (*)(void))type metadata accessor for LocationComponentViewModel);
      if (sub_10017D994() != 9)
      {
        uint64_t v161 = type metadata accessor for NotificationsOptInComponentViewModel;
        goto LABEL_114;
      }
      uint64_t v117 = v180;
      sub_1009F346C((uint64_t)v78, (uint64_t)v180, (void (*)(void))type metadata accessor for NotificationsOptInComponentViewModel);
      if ((static Location.== infix(_:_:)() & 1) == 0) {
        goto LABEL_141;
      }
      uint64_t v120 = *(int *)(v170 + 20);
      int v121 = *((unsigned __int8 *)v116 + v120);
      int v122 = *((unsigned __int8 *)v117 + v120);
      if (v121 == 2)
      {
        if (v122 == 2) {
          goto LABEL_136;
        }
      }
      else
      {
        if (v121 == 3)
        {
          if (v122 != 3) {
            goto LABEL_141;
          }
LABEL_136:
          uint64_t v119 = type metadata accessor for NotificationsOptInComponentViewModel;
          goto LABEL_137;
        }
        if (v122 & 0xFE) != 2 && ((((v121 & 1) == 0) ^ v122)) {
          goto LABEL_136;
        }
      }
LABEL_141:
      uint64_t v165 = type metadata accessor for NotificationsOptInComponentViewModel;
LABEL_142:
      uint64_t v163 = (uint64_t (*)(uint64_t))v165;
      sub_1001EC534((uint64_t)v117, (void (*)(void))v165);
      uint64_t v164 = (uint64_t)v116;
LABEL_143:
      sub_1001EC534(v164, (void (*)(void))v163);
LABEL_144:
      uint64_t v166 = v83;
LABEL_145:
      sub_1001EC534(v166, (void (*)(void))type metadata accessor for LocationComponentViewModel);
LABEL_120:
      char v99 = 0;
      return v99 & 1;
    case 0xAu:
      uint64_t v123 = v185;
      sub_1001F3A64(v83, (uint64_t)v185, (void (*)(void))type metadata accessor for LocationComponentViewModel);
      memcpy(v203, v123, 0x60uLL);
      if (sub_10017D994() == 10)
      {
        memcpy(v204, v123, 0x60uLL);
        char v99 = sub_10062E858(v203, v204);
        sub_1007CC480((uint64_t)v203);
        sub_1007CC480((uint64_t)v204);
        goto LABEL_97;
      }
      sub_1007CC480((uint64_t)v203);
      goto LABEL_119;
    case 0xBu:
      long long v65 = v190;
      sub_1001F3A64(v83, (uint64_t)v190, (void (*)(void))type metadata accessor for LocationComponentViewModel);
      if (sub_10017D994() == 11)
      {
        uint64_t v108 = v179;
        sub_1009F346C((uint64_t)v78, v179, (void (*)(void))type metadata accessor for PressureComponentViewModel);
        uint64_t v124 = sub_100127C2C();
        char v99 = sub_100A60824(v124, v125);
        uint64_t v111 = type metadata accessor for PressureComponentViewModel;
        goto LABEL_94;
      }
      uint64_t v160 = (uint64_t (*)(uint64_t))type metadata accessor for PressureComponentViewModel;
      goto LABEL_117;
    case 0xCu:
      uint64_t v126 = v188;
      sub_1001F3A64(v83, (uint64_t)v188, (void (*)(void))type metadata accessor for LocationComponentViewModel);
      if (sub_10017D994() != 12) {
        goto LABEL_119;
      }
      char v127 = *v126 ^ *v78;
      sub_1001EC534(v83, (void (*)(void))type metadata accessor for LocationComponentViewModel);
      char v99 = v127 ^ 1;
      return v99 & 1;
    case 0xDu:
      long long v65 = v191;
      sub_1001F3A64(v83, (uint64_t)v191, (void (*)(void))type metadata accessor for LocationComponentViewModel);
      if (sub_10017D994() == 13)
      {
        uint64_t v108 = v181;
        sub_1009F346C((uint64_t)v78, v181, (void (*)(void))type metadata accessor for SevereAlertComponentViewModel);
        uint64_t v128 = sub_100127C2C();
        char v99 = sub_1005F0B60(v128, v129);
        uint64_t v111 = type metadata accessor for SevereAlertComponentViewModel;
        goto LABEL_94;
      }
      uint64_t v160 = (uint64_t (*)(uint64_t))type metadata accessor for SevereAlertComponentViewModel;
      goto LABEL_117;
    case 0xEu:
      uint64_t v130 = v194;
      sub_1001F3A64(v83, v194, (void (*)(void))type metadata accessor for LocationComponentViewModel);
      if (sub_10017D994() == 14)
      {
        uint64_t v132 = v199;
        uint64_t v131 = v200;
        uint64_t v133 = v182;
        (*(void (**)(uint64_t, unsigned char *, uint64_t))(v199 + 32))(v182, v78, v200);
        char v99 = static SunriseSunsetViewModel.== infix(_:_:)();
        uint64_t v134 = *(void (**)(uint64_t, uint64_t))(v132 + 8);
        v134(v133, v131);
        v134(v130, v131);
        goto LABEL_97;
      }
      (*(void (**)(uint64_t, uint64_t))(v199 + 8))(v130, v200);
      goto LABEL_119;
    case 0xFu:
      uint64_t v135 = v189;
      sub_1001F3A64(v83, (uint64_t)v189, (void (*)(void))type metadata accessor for LocationComponentViewModel);
      memcpy(v203, v135, sizeof(v203));
      if (sub_10017D994() == 15)
      {
        memcpy(v204, v135, 0xD0uLL);
        char v99 = sub_10058EA0C(v203, v204);
        sub_10052D0A0((uint64_t)v203);
        sub_10052D0A0((uint64_t)v204);
        goto LABEL_97;
      }
      sub_10052D0A0((uint64_t)v203);
      goto LABEL_119;
    case 0x10u:
      uint64_t v116 = v198;
      sub_1001F3A64(v83, (uint64_t)v198, (void (*)(void))type metadata accessor for LocationComponentViewModel);
      if (sub_10017D994() != 16)
      {
        uint64_t v161 = type metadata accessor for UVIndexComponentViewModel;
LABEL_114:
        uint64_t v158 = (uint64_t (*)(uint64_t))v161;
        uint64_t v159 = (uint64_t)v116;
        goto LABEL_118;
      }
      uint64_t v117 = v184;
      sub_1009F346C((uint64_t)v78, (uint64_t)v184, (void (*)(void))type metadata accessor for UVIndexComponentViewModel);
      if (*(void *)v116 != *(void *)v117
        || v116[1] != v117[1]
        || (*((void *)v116 + 2) == *((void *)v117 + 2)
          ? (BOOL v136 = *((void *)v116 + 3) == *((void *)v117 + 3))
          : (BOOL v136 = 0),
            !v136 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0
         || (static WeatherDescription.== infix(_:_:)() & 1) == 0
         || (sub_1001508B0(*(void **)((char *)v116 + *(int *)(v169 + 32)), *(void **)((char *)v117 + *(int *)(v169 + 32))) & 1) == 0))
      {
        uint64_t v165 = type metadata accessor for UVIndexComponentViewModel;
        goto LABEL_142;
      }
      uint64_t v119 = type metadata accessor for UVIndexComponentViewModel;
LABEL_137:
      uint64_t v96 = (uint64_t (*)(uint64_t))v119;
      sub_1001EC534((uint64_t)v117, (void (*)(void))v119);
      uint64_t v97 = (uint64_t)v116;
LABEL_138:
      sub_1001EC534(v97, (void (*)(void))v96);
LABEL_139:
      uint64_t v167 = v83;
      goto LABEL_140;
    case 0x11u:
      uint64_t v201 = v83;
      uint64_t v137 = v193;
      sub_1001F3A64(v83, (uint64_t)v193, (void (*)(void))type metadata accessor for LocationComponentViewModel);
      uint64_t v139 = *v137;
      uint64_t v138 = v137[1];
      uint64_t v141 = v137[2];
      uint64_t v140 = v137[3];
      uint64_t v143 = v137[4];
      uint64_t v142 = (double *)v137[5];
      uint64_t v144 = v202;
      if (swift_getEnumCaseMultiPayload() != 17)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v83 = v201;
        goto LABEL_119;
      }
      uint64_t v145 = *(void *)v144;
      uint64_t v146 = *((void *)v144 + 1);
      uint64_t v147 = v144;
      uint64_t v149 = *((void *)v144 + 2);
      uint64_t v148 = *((void *)v144 + 3);
      uint64_t v151 = *((void *)v147 + 4);
      uint64_t v150 = (double *)*((void *)v147 + 5);
      uint64_t v200 = v151;
      uint64_t v202 = v150;
      BOOL v152 = v139 == v145 && v138 == v146;
      if (v152 || (_stringCompareWithSmolCheck(_:_:expecting:)())
        && (v141 == v149 ? (BOOL v153 = v140 == v148) : (BOOL v153 = 0),
            v153 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0))
      {
        if (v143 == v200 && v142 == v202)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_131;
        }
        char v155 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v155)
        {
LABEL_131:
          uint64_t v167 = v201;
LABEL_140:
          sub_1001EC534(v167, (void (*)(void))type metadata accessor for LocationComponentViewModel);
          char v99 = 1;
          return v99 & 1;
        }
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      uint64_t v166 = v201;
      goto LABEL_145;
    case 0x12u:
      long long v65 = v197;
      sub_1001F3A64(v83, (uint64_t)v197, (void (*)(void))type metadata accessor for LocationComponentViewModel);
      if (sub_10017D994() == 18)
      {
        uint64_t v108 = v183;
        sub_1009F346C((uint64_t)v78, v183, (void (*)(void))type metadata accessor for WindComponentViewModel);
        uint64_t v156 = sub_100127C2C();
        char v99 = sub_1005920B0(v156, v157);
        uint64_t v111 = type metadata accessor for WindComponentViewModel;
LABEL_94:
        uint64_t v100 = (uint64_t (*)(uint64_t))v111;
        sub_1001EC534(v108, (void (*)(void))v111);
        uint64_t v101 = (uint64_t)v65;
LABEL_95:
        uint64_t v115 = v100;
LABEL_96:
        sub_1001EC534(v101, (void (*)(void))v115);
        goto LABEL_97;
      }
      uint64_t v160 = (uint64_t (*)(uint64_t))type metadata accessor for WindComponentViewModel;
LABEL_117:
      uint64_t v158 = v160;
      uint64_t v159 = (uint64_t)v65;
LABEL_118:
      sub_1001EC534(v159, (void (*)(void))v158);
      goto LABEL_119;
    case 0x13u:
      if (swift_getEnumCaseMultiPayload() == 19) {
        goto LABEL_139;
      }
      goto LABEL_119;
    default:
      sub_1001F3A64(v83, (uint64_t)v78, (void (*)(void))type metadata accessor for LocationComponentViewModel);
      memcpy(v203, v78, 0x70uLL);
      if (!sub_10017D994())
      {
        memcpy(v204, v78, 0x70uLL);
        char v99 = sub_10079FDE0((uint64_t)v203, (uint64_t)v204);
        sub_1009F34CC((uint64_t)v203);
        sub_1009F34CC((uint64_t)v204);
LABEL_97:
        sub_1001EC534(v83, (void (*)(void))type metadata accessor for LocationComponentViewModel);
        return v99 & 1;
      }
      sub_1009F34CC((uint64_t)v203);
LABEL_119:
      sub_1009F340C(v83);
      goto LABEL_120;
  }
}

uint64_t sub_1009F33E4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1001F26C0();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1009F340C(uint64_t a1)
{
  uint64_t v2 = sub_10017DF08(&qword_100EA9140);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1009F346C(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(a2, a1);
  return a2;
}

uint64_t sub_1009F34CC(uint64_t a1)
{
  return a1;
}

double sub_1009F3538(uint64_t a1)
{
  uint64_t v4 = type metadata accessor for DisplayMetrics();
  __chkstk_darwin(v4 - 8);
  sub_10011BFD8();
  uint64_t v5 = *(void *)a1;
  if (sub_1005A73C4(*(void *)a1)) {
    return dbl_100C70F20[*(unsigned __int8 *)(a1 + 18) < 2u];
  }
  BOOL v7 = sub_10058C0A8(v5);
  sub_1001CB2DC(a1, v2);
  if (v7)
  {
    int v8 = *(unsigned __int8 *)(v2 + 16);
    sub_1001CB340(v2);
    if (v8) {
      return 385.0;
    }
  }
  else
  {
    sub_1001CB340(v2);
  }
  return sub_10004D56C() * 2.5 + *(double *)(v1 + 40);
}

void sub_1009F3618(uint64_t a1)
{
  if (a1 != 1)
  {
    id v2 = [self mainScreen];
    [v2 bounds];
    CGFloat v4 = v3;
    CGFloat v6 = v5;
    CGFloat v8 = v7;
    CGFloat v10 = v9;

    sub_1009F36BC(v4, v6, v8, v10);
  }
}

void sub_1009F36BC(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4)
{
  double Width = CGRectGetWidth(*(CGRect *)&a1);
  v14.origin.CGFloat x = a1;
  v14.origin.CGFloat y = a2;
  v14.size.CGFloat width = a3;
  v14.size.CGFloat height = a4;
  double Height = CGRectGetHeight(v14);
  if (Width > Height) {
    double v10 = Width;
  }
  else {
    double v10 = Height;
  }
  if (v10 != 1024.0)
  {
    v15.origin.CGFloat x = a1;
    v15.origin.CGFloat y = a2;
    v15.size.CGFloat width = a3;
    v15.size.CGFloat height = a4;
    double v11 = CGRectGetWidth(v15);
    v16.origin.CGFloat x = a1;
    v16.origin.CGFloat y = a2;
    v16.size.CGFloat width = a3;
    v16.size.CGFloat height = a4;
    double v12 = CGRectGetHeight(v16);
    if (v11 > v12) {
      double v13 = v11;
    }
    else {
      double v13 = v12;
    }
    if (v13 != 1112.0)
    {
      v17.origin.CGFloat x = a1;
      v17.origin.CGFloat y = a2;
      v17.size.CGFloat width = a3;
      v17.size.CGFloat height = a4;
      CGRectGetWidth(v17);
      v18.origin.CGFloat x = a1;
      v18.origin.CGFloat y = a2;
      v18.size.CGFloat width = a3;
      v18.size.CGFloat height = a4;
      CGRectGetHeight(v18);
    }
  }
}

void sub_1009F37BC()
{
  qword_100F52208 = 0x4038000000000000;
}

uint64_t sub_1009F37CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for HistoricalFactsCategory();
  __chkstk_darwin(v4);
  sub_1001626E0();
  double v7 = (uint64_t *)(v6 - v5);
  uint64_t v38 = type metadata accessor for ConditionDetailPlatterViewModel.Body(0);
  uint64_t v8 = __chkstk_darwin(v38);
  double v10 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v37 = (uint64_t)&v37 - v11;
  uint64_t v12 = sub_10017DF08(&qword_100EA9148);
  __chkstk_darwin(v12 - 8);
  sub_1001626E0();
  uint64_t v15 = v14 - v13;
  uint64_t v16 = sub_10017DF08(&qword_100EA9150);
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  sub_1001626E0();
  uint64_t v20 = v19 - v18;
  uint64_t v39 = a1;
  swift_bridgeObjectRetain();
  sub_10017DF08(&qword_100EA9158);
  sub_1001246C8(&qword_100EA9160, &qword_100EA9158);
  NonEmpty.init(_:)();
  if (_s7Weather24LocationCompositionStateOwet_0(v15, 1, v16) == 1)
  {
    sub_1009F3C0C(v15);
    uint64_t v21 = type metadata accessor for ConditionDetailPlatterViewModel(0);
    uint64_t v22 = a2;
    uint64_t v23 = 1;
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 32))(v20, v15, v16);
    if (NonEmpty.count.getter() < 2)
    {
      NonEmpty.first.getter();
      uint64_t countAndFlagsBits = *v7;
      uint64_t object = (void *)v7[1];
      uint64_t v30 = (uint64_t)v7 + *(int *)(v4 + 20);
      swift_bridgeObjectRetain();
      sub_1009F3CE8(v30, 0, (uint64_t)v10);
      sub_1009F4170((uint64_t)v7);
    }
    else
    {
      id v24 = [self mainBundle];
      v40._uint64_t object = (void *)0x8000000100CB9FB0;
      v25._uint64_t countAndFlagsBits = 0x6369726F74736948;
      v25._uint64_t object = (void *)0xEA00000000006C61;
      v26._uint64_t countAndFlagsBits = 0;
      v26._uint64_t object = (void *)0xE000000000000000;
      v40._uint64_t countAndFlagsBits = 0xD00000000000003DLL;
      Swift::String v27 = NSLocalizedString(_:tableName:bundle:value:comment:)(v25, (Swift::String_optional)0, (NSBundle)v24, v26, v40);
      uint64_t countAndFlagsBits = v27._countAndFlagsBits;
      uint64_t object = v27._object;

      type metadata accessor for ConditionDetailPlatterViewModel.TextSection(0);
      NonEmpty.map<A>(_:)();
    }
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v20, v16);
    uint64_t v31 = v38;
    swift_storeEnumTagMultiPayload();
    uint64_t v32 = v37;
    sub_100519D98((uint64_t)v10, v37);
    uint64_t v33 = (int *)type metadata accessor for ConditionDetailPlatterViewModel(0);
    uint64_t v34 = a2 + v33[6];
    uint64_t v35 = type metadata accessor for WeatherDescription();
    _s7Weather24LocationCompositionStateOwst_0(v34, 1, 1, v35);
    _s7Weather24LocationCompositionStateOwst_0(a2 + v33[8], 1, 1, v31);
    *(_OWORD *)a2 = xmmword_100C70F30;
    *(unsigned char *)(a2 + 16) = 2;
    *(void *)(a2 + 24) = countAndFlagsBits;
    *(void *)(a2 + 32) = object;
    sub_100519D98(v32, a2 + v33[7]);
    *(unsigned char *)(a2 + v33[9]) = 0;
    *(unsigned char *)(a2 + v33[10]) = 0;
    uint64_t v22 = a2;
    uint64_t v23 = 0;
    uint64_t v21 = (uint64_t)v33;
  }
  return _s7Weather24LocationCompositionStateOwst_0(v22, v23, 1, v21);
}

uint64_t sub_1009F3C0C(uint64_t a1)
{
  uint64_t v2 = sub_10017DF08(&qword_100EA9148);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1009F3C6C@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v5 = (uint64_t)a1 + *(int *)(type metadata accessor for HistoricalFactsCategory() + 20);
  uint64_t v6 = (uint64_t)a2 + *(int *)(type metadata accessor for ConditionDetailPlatterViewModel.TextSection(0) + 20);
  swift_bridgeObjectRetain();
  uint64_t result = sub_1009F3CE8(v5, 1, v6);
  *a2 = v4;
  a2[1] = v3;
  return result;
}

uint64_t sub_1009F3CE8@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v6 = type metadata accessor for AttributedString();
  uint64_t v41 = *(void *)(v6 - 8);
  uint64_t v42 = v6;
  uint64_t v7 = __chkstk_darwin(v6);
  Swift::String v40 = (char *)v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v39 = (char *)v33 - v10;
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)v33 - v11;
  uint64_t v44 = type metadata accessor for WeatherDescription();
  uint64_t v13 = *(void *)(v44 - 8);
  __chkstk_darwin(v44);
  uint64_t v43 = (char *)v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_10017DF08(&qword_100E7EBE0);
  if (NonEmpty.count.getter() == 1 && (a2 & 1) == 0)
  {
    uint64_t v16 = v43;
    NonEmpty.first.getter();
    static Font.body.getter();
    WeatherDescription.formatted(font:color:)();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v16, v44);
  }
  uint64_t v18 = sub_1001246C8(&qword_100EA9168, &qword_100E7EBE0);
  uint64_t v19 = dispatch thunk of Collection.count.getter();
  if (!v19) {
    goto LABEL_12;
  }
  uint64_t v20 = v19;
  uint64_t v46 = _swiftEmptyArrayStorage;
  sub_1007F37E8();
  uint64_t result = dispatch thunk of Collection.startIndex.getter();
  if ((v20 & 0x8000000000000000) == 0)
  {
    uint64_t v21 = v42;
    uint64_t v35 = (void (**)(char *, uint64_t))(v41 + 8);
    uint64_t v36 = (void (**)(char *))(v13 + 16);
    uint64_t v34 = (void (**)(char *, uint64_t))(v13 + 8);
    v33[0] = a3;
    v33[1] = v41 + 32;
    uint64_t v22 = v12;
    uint64_t v37 = v15;
    uint64_t v38 = a1;
    uint64_t v23 = v43;
    do
    {
      uint64_t v24 = v18;
      Swift::String v25 = (void (*)(char *, void))dispatch thunk of Collection.subscript.read();
      uint64_t v26 = v44;
      (*v36)(v23);
      v25(v45, 0);
      static Font.body.getter();
      Swift::String v27 = v39;
      WeatherDescription.formatted(font:color:)();
      swift_release();
      uint64_t v28 = v40;
      AttributedString.init(stringLiteral:)();
      static AttributedString.+ infix(_:_:)();
      uint64_t v29 = *v35;
      (*v35)(v28, v21);
      v29(v27, v21);
      (*v34)(v23, v26);
      uint64_t v30 = v46;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1007F37E8();
        uint64_t v30 = v46;
      }
      unint64_t v31 = v30[2];
      uint64_t v18 = v24;
      if (v31 >= v30[3] >> 1)
      {
        sub_1007F37E8();
        uint64_t v30 = v46;
      }
      v30[2] = v31 + 1;
      unint64_t v32 = (unint64_t)v30
          + ((*(unsigned __int8 *)(v41 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80))
          + *(void *)(v41 + 72) * v31;
      uint64_t v21 = v42;
      (*(void (**)(unint64_t, char *, uint64_t))(v41 + 32))(v32, v22, v42);
      uint64_t v46 = v30;
      dispatch thunk of Collection.formIndex(after:)();
      --v20;
    }
    while (v20);
LABEL_12:
    Array<A>.joined(separator:)();
    return swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_1009F4170(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for HistoricalFactsCategory();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1009F41CC@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_1009F3C6C(a1, a2);
}

ValueMetadata *type metadata accessor for HistoricalFactsPlatterViewModelFactory()
{
  return &type metadata for HistoricalFactsPlatterViewModelFactory;
}

uint64_t *WeatherLocation.currentLocationID.unsafeMutableAddressor()
{
  if (qword_100E62998 != -1) {
    swift_once();
  }
  return &static WeatherLocation.currentLocationID;
}

const char *WeatherLocation.alternateCurrentLocationID.unsafeMutableAddressor()
{
  return "_localCity_";
}

uint64_t sub_1009F424C()
{
  uint64_t result = static Location.currentLocationIntentID.getter();
  static WeatherLocation.currentLocationID = result;
  *(void *)algn_100F52218 = v1;
  return result;
}

uint64_t static WeatherLocation.currentLocationID.getter()
{
  if (qword_100E62998 != -1) {
    swift_once();
  }
  uint64_t v0 = static WeatherLocation.currentLocationID;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t static WeatherLocation.alternateCurrentLocationID.getter()
{
  return 0x69436C61636F6C5FLL;
}

uint64_t sub_1009F42F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v289 = a3;
  uint64_t v291 = a2;
  uint64_t v282 = a1;
  uint64_t v3 = sub_10017DF08(&qword_100E663F8);
  uint64_t v4 = sub_100109308(v3);
  __chkstk_darwin(v4);
  sub_100109314();
  uint64_t v273 = v5;
  uint64_t v6 = sub_10017DF08(&qword_100E66400);
  uint64_t v7 = sub_100109308(v6);
  __chkstk_darwin(v7);
  sub_100109314();
  uint64_t v276 = v8;
  uint64_t v9 = sub_10017DF08(&qword_100E66408);
  uint64_t v10 = sub_100109308(v9);
  __chkstk_darwin(v10);
  sub_100109314();
  uint64_t v275 = v11;
  uint64_t v12 = sub_10017DF08(&qword_100E663D0);
  uint64_t v13 = sub_100109308(v12);
  __chkstk_darwin(v13);
  sub_100109314();
  uint64_t v267 = v14;
  sub_100129064();
  uint64_t v266 = type metadata accessor for Location.Identifier();
  sub_100179C0C();
  uint64_t v264 = v15;
  __chkstk_darwin(v16);
  sub_100162EF8();
  uint64_t v263 = v17;
  __chkstk_darwin(v18);
  sub_100128F8C();
  uint64_t v265 = v19;
  uint64_t v20 = sub_100129064();
  uint64_t v272 = type metadata accessor for ViewState.SecondaryViewState(v20);
  sub_100162E4C();
  __chkstk_darwin(v21);
  sub_100109314();
  uint64_t v271 = (uint64_t *)v22;
  uint64_t v23 = sub_100129064();
  uint64_t v287 = type metadata accessor for ViewState(v23);
  sub_100162E4C();
  __chkstk_darwin(v24);
  sub_100162EF8();
  uint64_t v274 = v25;
  __chkstk_darwin(v26);
  sub_100128F8C();
  uint64_t v270 = v27;
  uint64_t v28 = sub_10017DF08((uint64_t *)&unk_100EADD50);
  uint64_t v29 = sub_100109308(v28);
  __chkstk_darwin(v29);
  sub_100109314();
  uint64_t v280 = v30;
  sub_100129064();
  uint64_t v269 = type metadata accessor for WeatherCoalescedLocationResult();
  sub_100179C0C();
  uint64_t v268 = v31;
  __chkstk_darwin(v32);
  sub_1001626E0();
  uint64_t v35 = v34 - v33;
  uint64_t v36 = sub_10017DF08(&qword_100E63A18);
  uint64_t v37 = sub_100109308(v36);
  __chkstk_darwin(v37);
  sub_1001626E0();
  uint64_t v40 = v39 - v38;
  uint64_t v41 = (int *)type metadata accessor for LocationsState();
  sub_100162E4C();
  __chkstk_darwin(v42);
  sub_100109314();
  uint64_t v279 = v43;
  uint64_t v44 = sub_10017DF08(&qword_100E66410);
  uint64_t v45 = sub_100109308(v44);
  __chkstk_darwin(v45);
  sub_100162EF8();
  uint64_t v262 = v46;
  __chkstk_darwin(v47);
  sub_100128F8C();
  uint64_t v278 = v48;
  uint64_t v49 = sub_10017DF08(&qword_100E639E8);
  uint64_t v50 = sub_100109308(v49);
  __chkstk_darwin(v50);
  sub_1001626E0();
  uint64_t v53 = v52 - v51;
  uint64_t v283 = type metadata accessor for Location();
  sub_100179C0C();
  uint64_t v281 = v54;
  __chkstk_darwin(v55);
  uint64_t v57 = &v259[-((v56 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v58);
  sub_100128F8C();
  uint64_t v60 = v59;
  uint64_t v61 = sub_10017DF08(&qword_100E663E0);
  uint64_t v62 = sub_100109308(v61);
  __chkstk_darwin(v62);
  sub_1001626E0();
  uint64_t v65 = v64 - v63;
  uint64_t v66 = sub_10017DF08(&qword_100E663D8);
  uint64_t v67 = sub_100109308(v66);
  __chkstk_darwin(v67);
  sub_1001626E0();
  uint64_t v70 = v69 - v68;
  uint64_t v71 = sub_10017DF08(&qword_100E663F0);
  uint64_t v72 = sub_100109308(v71);
  __chkstk_darwin(v72);
  sub_100109314();
  uint64_t v285 = v73;
  uint64_t v74 = sub_10017DF08(&qword_100E66418);
  uint64_t v75 = sub_100109308(v74);
  __chkstk_darwin(v75);
  sub_100109314();
  uint64_t v284 = v76;
  uint64_t v77 = sub_10017DF08(&qword_100E66420);
  uint64_t v78 = sub_100109308(v77);
  __chkstk_darwin(v78);
  sub_100109314();
  uint64_t v286 = (uint64_t *)v79;
  uint64_t v80 = sub_10017DF08(&qword_100E66428);
  uint64_t v81 = sub_100109308(v80);
  __chkstk_darwin(v81);
  sub_100109314();
  uint64_t v288 = v82;
  uint64_t v83 = sub_10017DF08(&qword_100E66430);
  uint64_t v84 = sub_100109308(v83);
  __chkstk_darwin(v84);
  sub_100109314();
  uint64_t v290 = v85;
  uint64_t v86 = sub_10017DF08(&qword_100E66438);
  uint64_t v87 = sub_100109308(v86);
  __chkstk_darwin(v87);
  sub_100109314();
  uint64_t v292 = v88;
  uint64_t v89 = sub_10017DF08(&qword_100E66440);
  uint64_t v90 = sub_100109308(v89);
  __chkstk_darwin(v90);
  sub_100109314();
  uint64_t v293 = v91;
  sub_100129064();
  type metadata accessor for LocationPreviewViewAction();
  sub_100162E4C();
  __chkstk_darwin(v92);
  sub_1001626E0();
  BOOL v95 = (unsigned __int8 *)(v94 - v93);
  sub_1009F677C(v289, v94 - v93, (void (*)(void))type metadata accessor for LocationPreviewViewAction);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v145 = v281;
      uint64_t v146 = v283;
      (*(void (**)(char *, unsigned __int8 *, uint64_t))(v281 + 32))(v57, v95, v283);
      uint64_t v147 = type metadata accessor for AppConfigurationState();
      uint64_t v148 = sub_1001A27CC(v147);
      sub_100163050(v292, v149, v150, v148);
      uint64_t v151 = sub_10017ECEC(v290, 1);
      uint64_t v152 = v288;
      uint64_t v155 = sub_10017A0E0(v288, v153, v154, v151);
      uint64_t v156 = v286;
      sub_1001895E4((uint64_t)v286, v157, v158, v155);
      (*(void (**)(uint64_t, char *, uint64_t))(v145 + 16))(v70, v57, v146);
      uint64_t v159 = type metadata accessor for PreviewLocation();
      swift_storeEnumTagMultiPayload();
      _s7Weather24LocationCompositionStateOwst_0(v70, 0, 1, v159);
      uint64_t v160 = type metadata accessor for LocationPreviewModalViewState(0);
      sub_100163050(v65, v161, v162, v160);
      uint64_t v163 = v285;
      sub_1004E4A98(v70, v65, v285);
      sub_1001781AC(v65, &qword_100E663E0);
      sub_1001781AC(v70, &qword_100E663D8);
      uint64_t v98 = type metadata accessor for ModalViewState(0);
      swift_storeEnumTagMultiPayload();
      _s7Weather24LocationCompositionStateOwst_0(v163, 0, 1, v98);
      sub_10019F664();
      uint64_t v263 = v60;
      uint64_t v264 = v163;
      uint64_t v261 = v152;
      uint64_t v262 = v156;
      uint64_t v164 = sub_10016356C();
      uint64_t v166 = v292;
      uint64_t v165 = v293;
      uint64_t v167 = v290;
      sub_100163034(v164, v168, v293, v292, v290, v169, v170, v171, v259[0], v261, (uint64_t)v262, v263, v264, v265, v266, v267, v268, v269, v270,
        (uint64_t)v271,
        v272);
      sub_100185A74();
      sub_1001781AC(v163, &qword_100E663F0);
      sub_1001781AC(v60, &qword_100E66418);
      sub_1001781AC((uint64_t)v156, &qword_100E66420);
      sub_1001781AC(v152, &qword_100E66428);
      sub_1001781AC(v167, &qword_100E66430);
      sub_1001781AC(v166, &qword_100E66438);
      sub_1001781AC(v165, &qword_100E66440);
      (*(void (**)(char *, uint64_t))(v145 + 8))(v57, v283);
      break;
    case 2u:
      uint64_t v99 = type metadata accessor for AppConfigurationState();
      uint64_t v100 = sub_1001A27CC(v99);
      uint64_t v101 = v292;
      sub_100163050(v292, v102, v103, v100);
      uint64_t v104 = v290;
      uint64_t v105 = sub_10017ECEC(v290, 1);
      uint64_t v106 = v288;
      uint64_t v109 = sub_10017A0E0(v288, v107, v108, v105);
      uint64_t v110 = v286;
      sub_1001895E4((uint64_t)v286, v111, v112, v109);
      uint64_t v113 = type metadata accessor for PreviewLocation();
      uint64_t v116 = sub_100179C70(v70, v114, v115, v113);
      uint64_t v117 = type metadata accessor for LocationPreviewModalViewState(v116);
      swift_storeEnumTagMultiPayload();
      _s7Weather24LocationCompositionStateOwst_0(v65, 0, 1, v117);
      uint64_t v118 = v285;
      sub_1004E4A98(v70, v65, v285);
      sub_1001781AC(v65, &qword_100E663E0);
      sub_1001781AC(v70, &qword_100E663D8);
      uint64_t v98 = type metadata accessor for ModalViewState(0);
      swift_storeEnumTagMultiPayload();
      _s7Weather24LocationCompositionStateOwst_0(v118, 0, 1, v98);
      sub_10019F664();
      uint64_t v263 = v60;
      uint64_t v264 = v118;
      uint64_t v261 = v106;
      uint64_t v262 = v110;
      uint64_t v119 = sub_10016356C();
      uint64_t v120 = v293;
      sub_100163034(v119, v121, v293, v101, v104, v122, v123, v124, v259[0], v261, (uint64_t)v262, v263, v264, v265, v266, v267, v268, v269, v270,
        (uint64_t)v271,
        v272);
      sub_100185A74();
      sub_1001781AC(v118, &qword_100E663F0);
      sub_1001781AC(v60, &qword_100E66418);
      sub_1001781AC((uint64_t)v110, &qword_100E66420);
      sub_1001781AC(v106, &qword_100E66428);
      sub_1001781AC(v104, &qword_100E66430);
      uint64_t v125 = v101;
      goto LABEL_6;
    case 3u:
      uint64_t v126 = type metadata accessor for AppConfigurationState();
      uint64_t v120 = v293;
      _s7Weather24LocationCompositionStateOwst_0(v293, 1, 1, v126);
      uint64_t v127 = type metadata accessor for EnvironmentState();
      uint64_t v128 = v292;
      sub_100163050(v292, v129, v130, v127);
      uint64_t v131 = v290;
      uint64_t v132 = sub_10017ECEC(v290, 1);
      uint64_t v133 = v288;
      uint64_t v136 = sub_10017A0E0(v288, v134, v135, v132);
      uint64_t v137 = v286;
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v286, 1, 1, v136);
      uint64_t v138 = v284;
      _s7Weather24LocationCompositionStateOwst_0(v284, 1, 1, v287);
      uint64_t v98 = type metadata accessor for ModalViewState(0);
      uint64_t v139 = v285;
      swift_storeEnumTagMultiPayload();
      _s7Weather24LocationCompositionStateOwst_0(v139, 0, 1, v98);
      sub_10019F664();
      uint64_t v263 = v138;
      uint64_t v264 = v139;
      uint64_t v261 = v133;
      uint64_t v262 = v137;
      uint64_t v140 = sub_10016356C();
      sub_100163034(v140, v141, v120, v128, v131, v142, v143, v144, v259[0], v261, (uint64_t)v262, v263, v264, v265, v266, v267, v268, v269, v270,
        (uint64_t)v271,
        v272);
      sub_100185A74();
      sub_1001781AC(v139, &qword_100E663F0);
      sub_1001781AC(v138, &qword_100E66418);
      sub_1001781AC((uint64_t)v137, &qword_100E66420);
      sub_1001781AC(v133, &qword_100E66428);
      sub_1001781AC(v131, &qword_100E66430);
      uint64_t v125 = v128;
LABEL_6:
      sub_1001781AC(v125, &qword_100E66438);
      sub_1001781AC(v120, &qword_100E66440);
      break;
    default:
      int v96 = *v95;
      sub_10081B708(v53);
      uint64_t v97 = v283;
      if (_s7Weather24LocationCompositionStateOwet_0(v53, 1, v283) == 1)
      {
        sub_1001781AC(v53, &qword_100E639E8);
        uint64_t v98 = v291;
        swift_retain();
      }
      else
      {
        int v260 = v96;
        uint64_t v172 = v281;
        uint64_t v173 = v60;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v281 + 32))(v60, v53, v97);
        uint64_t v174 = v291 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_locations;
        uint64_t v175 = v279;
        sub_1009F677C(v291 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_locations, v279, (void (*)(void))type metadata accessor for LocationsState);
        sub_1009024E8();
        char v177 = v176;
        sub_1001CEEE8(v175, (void (*)(void))type metadata accessor for LocationsState);
        uint64_t v178 = v41[5];
        uint64_t v289 = v174;
        uint64_t v179 = *(void *)(v174 + v178);
        if (v177)
        {
          uint64_t v180 = v179;
          swift_bridgeObjectRetain();
        }
        else
        {
          uint64_t v282 = v179;
          sub_10017DF08(&qword_100E94A48);
          uint64_t v181 = *(void *)(type metadata accessor for SavedLocation() - 8);
          uint64_t v182 = v97;
          unint64_t v183 = (*(unsigned __int8 *)(v181 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v181 + 80);
          uint64_t v184 = swift_allocObject();
          *(_OWORD *)(v184 + 16) = xmmword_100C251B0;
          uint64_t v185 = v182;
          uint64_t v173 = v60;
          (*(void (**)(unint64_t, uint64_t, uint64_t))(v172 + 16))(v184 + v183, v60, v185);
          swift_storeEnumTagMultiPayload();
          uint64_t v294 = v282;
          swift_bridgeObjectRetain();
          sub_10037FDD8(v184);
          uint64_t v180 = v294;
        }
        uint64_t v186 = v277;
        uint64_t v261 = v173;
        uint64_t v187 = v289;
        uint64_t v294 = *(void *)(v289 + v41[13]);
        swift_bridgeObjectRetain();
        Location.id.getter();
        LocationDisplayContext.init(canActAsLocationOfInterest:)();
        uint64_t v188 = type metadata accessor for LocationDisplayContext();
        _s7Weather24LocationCompositionStateOwst_0(v40, 0, 1, v188);
        sub_1002454E0();
        sub_1001B1E64((void *)(v186 + 16), *(void *)(v186 + 40));
        uint64_t v189 = v280;
        sub_10006DF38(v187, v280, (uint64_t *)&unk_100EADD50);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v282 = v180;
        dispatch thunk of WeatherLocationCoalescenceManagerType.coalesceLocations(currentLocation:locationList:locationsOfInterest:displayContextByLocation:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1001781AC(v189, (uint64_t *)&unk_100EADD50);
        uint64_t v190 = WeatherCoalescedLocationResult.coalescedLocations.getter();
        (*(void (**)(uint64_t, uint64_t))(v268 + 8))(v35, v269);
        uint64_t v191 = v291 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_view;
        uint64_t v192 = v270;
        sub_1009F677C(v291 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_view, v270, (void (*)(void))type metadata accessor for ViewState);
        uint64_t v193 = v271;
        sub_1009F677C(v192 + *(int *)(v287 + 20), (uint64_t)v271, (void (*)(void))type metadata accessor for ViewState.SecondaryViewState);
        sub_1001CEEE8(v192, (void (*)(void))type metadata accessor for ViewState);
        uint64_t v194 = v272;
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        uint64_t v269 = v191;
        if (EnumCaseMultiPayload == 1)
        {
          sub_1001CEEE8((uint64_t)v193, (void (*)(void))type metadata accessor for ViewState.SecondaryViewState);
          _s7Weather24LocationCompositionStateOwst_0(v278, 1, 1, v194);
        }
        else
        {
          uint64_t v196 = *v193;
          uint64_t v197 = v263;
          Location.identifier.getter();
          uint64_t v198 = v265;
          sub_1009F5764(v197, v190, v265);
          uint64_t v199 = v264;
          uint64_t v200 = *(void (**)(uint64_t, uint64_t))(v264 + 8);
          uint64_t v201 = v266;
          v200(v197, v266);
          uint64_t v202 = v267;
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v199 + 16))(v267, v198, v201);
          sub_1001093B0();
          _s7Weather24LocationCompositionStateOwst_0(v203, v204, v205, v201);
          uint64_t active = type metadata accessor for LocationViewerActiveLocationState();
          _s7Weather24LocationCompositionStateOwst_0(v202, 0, 1, active);
          uint64_t v207 = sub_1001CCC58(v202, 3, 2, 4, 2, 3, v196);
          swift_release();
          sub_1001781AC(v202, &qword_100E663D0);
          v200(v198, v201);
          uint64_t v208 = v262;
          *uint64_t v262 = v207;
          swift_storeEnumTagMultiPayload();
          sub_1001093B0();
          _s7Weather24LocationCompositionStateOwst_0(v209, v210, v211, v194);
          sub_1009F67D0((uint64_t)v208, v278);
        }
        uint64_t v212 = type metadata accessor for AppConfigurationState();
        uint64_t v213 = sub_1001A27CC(v212);
        sub_100163050(v292, v214, v215, v213);
        uint64_t v216 = v279;
        sub_1009F677C(v289, v279, (void (*)(void))type metadata accessor for LocationsState);
        sub_10006DF38(v216, v280, (uint64_t *)&unk_100EADD50);
        uint64_t v217 = v216 + v41[12];
        uint64_t v218 = *(void *)v217;
        uint64_t v219 = *(void *)(v217 + 8);
        unsigned __int8 v220 = *(unsigned char *)(v217 + 16);
        swift_bridgeObjectRetain();
        sub_10015458C(v218, v219, v220);
        uint64_t v221 = v290;
        sub_1001CF8D0();
        sub_1001CEEE8(v216, (void (*)(void))type metadata accessor for LocationsState);
        uint64_t v222 = sub_10017ECEC(v221, 0);
        uint64_t v225 = sub_10017A0E0(v288, v223, v224, v222);
        uint64_t v226 = v286;
        sub_100163050((uint64_t)v286, v227, v228, v225);
        uint64_t v229 = v274;
        sub_1009F677C(v269, v274, (void (*)(void))type metadata accessor for ViewState);
        type metadata accessor for ListViewState._Storage();
        swift_allocObject();
        sub_1001093B0();
        sub_1000EC58C(v230, v231, v232, 0, 0, 0, 0xE000000000000000, 0, 0, 0, 0, 0, 1, 0);
        uint64_t v233 = type metadata accessor for SearchViewState(0);
        uint64_t v234 = v275;
        sub_100179C70(v275, v235, v236, v233);
        uint64_t v237 = type metadata accessor for DisplayMetrics();
        uint64_t v238 = v276;
        uint64_t v241 = sub_100179C70(v276, v239, v240, v237);
        uint64_t v242 = type metadata accessor for WeatherMapPresentationState(v241);
        uint64_t v243 = v273;
        _s7Weather24LocationCompositionStateOwst_0(v273, 1, 1, v242);
        uint64_t v244 = v284;
        uint64_t v245 = v278;
        sub_10011D8AC();
        swift_release();
        sub_1001781AC(v243, &qword_100E663F8);
        sub_1001781AC(v238, &qword_100E66400);
        sub_1001781AC(v234, &qword_100E66408);
        sub_1001CEEE8(v229, (void (*)(void))type metadata accessor for ViewState);
        sub_1001093B0();
        _s7Weather24LocationCompositionStateOwst_0(v246, v247, v248, v287);
        uint64_t v98 = type metadata accessor for ModalViewState(0);
        uint64_t v249 = v285;
        swift_storeEnumTagMultiPayload();
        _s7Weather24LocationCompositionStateOwst_0(v249, 0, 1, v98);
        sub_10019F664();
        uint64_t v263 = v244;
        uint64_t v264 = v249;
        uint64_t v262 = v226;
        uint64_t v250 = v288;
        uint64_t v261 = v288;
        uint64_t v251 = sub_10016356C();
        uint64_t v253 = v292;
        uint64_t v252 = v293;
        sub_100163034(v251, v254, v293, v292, v221, v255, v256, v257, v259[0], v261, (uint64_t)v262, v263, v264, v265, v266, v267, v268, v269, v270,
          (uint64_t)v271,
          v272);
        sub_100185A74();
        sub_1001781AC(v249, &qword_100E663F0);
        sub_1001781AC(v244, &qword_100E66418);
        sub_1001781AC((uint64_t)v226, &qword_100E66420);
        sub_1001781AC(v250, &qword_100E66428);
        sub_1001781AC(v221, &qword_100E66430);
        sub_1001781AC(v253, &qword_100E66438);
        sub_1001781AC(v252, &qword_100E66440);
        sub_1001781AC(v245, &qword_100E66410);
        (*(void (**)(uint64_t, uint64_t))(v281 + 8))(v261, v283);
      }
      break;
  }
  return v98;
}

uint64_t sub_1009F5764@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v92 = a3;
  uint64_t v5 = sub_10017DF08(&qword_100EAC4A0);
  __chkstk_darwin(v5 - 8);
  uint64_t v89 = (uint64_t)&v83 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10017DF08(&qword_100E639E8);
  __chkstk_darwin(v7 - 8);
  uint64_t v86 = (char *)&v83 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v83 - v10;
  uint64_t v12 = sub_10017DF08(&qword_100E6DC08);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v83 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for Location.Identifier();
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v87 = (char *)&v83 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v88 = (char *)&v83 - v19;
  __chkstk_darwin(v20);
  uint64_t v83 = (char *)&v83 - v21;
  __chkstk_darwin(v22);
  uint64_t v103 = (char *)&v83 - v23;
  __chkstk_darwin(v24);
  int v96 = (char *)&v83 - v25;
  uint64_t v104 = type metadata accessor for LocationModel();
  __chkstk_darwin(v104);
  uint64_t v27 = (char *)&v83 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28);
  uint64_t v84 = (char *)&v83 - v29;
  __chkstk_darwin(v30);
  uint64_t v85 = (char *)&v83 - v31;
  __chkstk_darwin(v32);
  uint64_t v35 = (char *)&v83 - v34;
  uint64_t v36 = *(void *)(a2 + 16);
  uint64_t v97 = v15;
  uint64_t v98 = v16;
  uint64_t v94 = v27;
  uint64_t v95 = a1;
  uint64_t v93 = a2;
  uint64_t v90 = v36;
  uint64_t v91 = v33;
  if (v36)
  {
    uint64_t v38 = *(void (**)(char *, unint64_t, uint64_t))(v33 + 16);
    uint64_t v37 = v33 + 16;
    unint64_t v39 = a2 + ((*(unsigned __int8 *)(v37 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v37 + 64));
    uint64_t v100 = *(void *)(v37 + 56);
    uint64_t v101 = v38;
    uint64_t v102 = v37;
    uint64_t v99 = (void (**)(char *, uint64_t))(v37 - 8);
    uint64_t v40 = (void (**)(char *, char *, uint64_t))(v16 + 32);
    swift_bridgeObjectRetain();
    uint64_t v41 = _swiftEmptyArrayStorage;
    uint64_t v42 = v36;
    do
    {
      v101(v35, v39, v104);
      LocationModel.location.getter();
      uint64_t v43 = type metadata accessor for Location();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v11, 1, v43) == 1)
      {
        sub_1001781AC((uint64_t)v11, &qword_100E639E8);
        uint64_t v44 = 1;
      }
      else
      {
        Location.identifier.getter();
        (*(void (**)(char *, uint64_t))(*(void *)(v43 - 8) + 8))(v11, v43);
        uint64_t v44 = 0;
      }
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v14, v44, 1, v15);
      (*v99)(v35, v104);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v14, 1, v15) == 1)
      {
        sub_1001781AC((uint64_t)v14, &qword_100E6DC08);
      }
      else
      {
        uint64_t v45 = *v40;
        uint64_t v46 = v96;
        (*v40)(v96, v14, v15);
        v45(v103, v46, v15);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v41 = (void *)sub_1001D2674(0, v41[2] + 1, 1, (uint64_t)v41);
        }
        unint64_t v48 = v41[2];
        unint64_t v47 = v41[3];
        if (v48 >= v47 >> 1) {
          uint64_t v41 = (void *)sub_1001D2674(v47 > 1, v48 + 1, 1, (uint64_t)v41);
        }
        v41[2] = v48 + 1;
        unint64_t v49 = (unint64_t)v41
            + ((*(unsigned __int8 *)(v98 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v98 + 80))
            + *(void *)(v98 + 72) * v48;
        uint64_t v15 = v97;
        v45((char *)v49, v103, v97);
      }
      v39 += v100;
      --v42;
    }
    while (v42);
    swift_bridgeObjectRelease();
    uint64_t v27 = v94;
    a1 = v95;
    uint64_t v16 = v98;
  }
  else
  {
    uint64_t v41 = _swiftEmptyArrayStorage;
  }
  uint64_t v50 = v41[2];
  uint64_t v51 = v104;
  if (v50)
  {
    uint64_t v52 = (char *)v41 + ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80));
    uint64_t v53 = *(void *)(v16 + 72);
    sub_10023114C((unint64_t *)&qword_100E63A30);
    swift_bridgeObjectRetain();
    while ((dispatch thunk of static Equatable.== infix(_:_:)() & 1) == 0)
    {
      v52 += v53;
      if (!--v50)
      {
        swift_bridgeObjectRelease_n();
        uint64_t v16 = v98;
        uint64_t v27 = v94;
        goto LABEL_22;
      }
    }
    swift_bridgeObjectRelease_n();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v98 + 16))(v92, a1, v15);
  }
  else
  {
    swift_bridgeObjectRelease();
LABEL_22:
    uint64_t v54 = v93;
    uint64_t v55 = v90;
    if (v90)
    {
      uint64_t v56 = *(void (**)(uint64_t, unint64_t, uint64_t))(v91 + 16);
      uint64_t v57 = (uint64_t)v27;
      unint64_t v58 = v93 + ((*(unsigned __int8 *)(v91 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v91 + 80));
      uint64_t v59 = (void (**)(char *, uint64_t))(v91 + 8);
      uint64_t v60 = *(void *)(v91 + 72);
      swift_bridgeObjectRetain();
      while (1)
      {
        v56(v57, v58, v51);
        if (sub_1009F6264(v57, v95)) {
          break;
        }
        uint64_t v57 = (uint64_t)v94;
        (*v59)(v94, v51);
        v58 += v60;
        if (!--v55)
        {
          uint64_t v54 = v93;
          swift_bridgeObjectRelease();
LABEL_30:
          uint64_t v16 = v98;
          goto LABEL_31;
        }
      }
      uint64_t v54 = v93;
      swift_bridgeObjectRelease();
      uint64_t v62 = *(void (**)(char *, char *, uint64_t))(v91 + 32);
      uint64_t v63 = v84;
      v62(v84, v94, v51);
      uint64_t v64 = v85;
      v62(v85, v63, v51);
      uint64_t v65 = (uint64_t)v86;
      LocationModel.location.getter();
      uint64_t v66 = type metadata accessor for Location();
      if (_s7Weather24LocationCompositionStateOwet_0(v65, 1, v66) == 1)
      {
        (*v59)(v64, v51);
        sub_1001781AC(v65, &qword_100E639E8);
        goto LABEL_30;
      }
      uint64_t v82 = v83;
      Location.identifier.getter();
      (*v59)(v64, v51);
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v66 - 8) + 8))(v65, v66);
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v98 + 32))(v92, v82, v15);
    }
    else
    {
LABEL_31:
      if (qword_100E627A8 != -1) {
        swift_once();
      }
      uint64_t v67 = type metadata accessor for Logger();
      sub_1002102B0(v67, (uint64_t)qword_100F51E10);
      uint64_t v68 = *(void (**)(char *, uint64_t, uint64_t))(v16 + 16);
      uint64_t v69 = v88;
      uint64_t v70 = v95;
      uint64_t v71 = v97;
      v68(v88, v95, v97);
      uint64_t v72 = Logger.logObject.getter();
      os_log_type_t v73 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v72, v73))
      {
        uint64_t v74 = v69;
        uint64_t v75 = swift_slowAlloc();
        uint64_t v76 = swift_slowAlloc();
        uint64_t v102 = v76;
        uint64_t v103 = (char *)v68;
        *(_DWORD *)uint64_t v75 = 141558275;
        uint64_t v105 = 1752392040;
        v106[0] = v76;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v75 + 12) = 2081;
        sub_10023114C((unint64_t *)&qword_100E63880);
        uint64_t v77 = dispatch thunk of CustomStringConvertible.description.getter();
        uint64_t v105 = sub_10016414C(v77, v78, v106);
        uint64_t v54 = v93;
        uint64_t v16 = v98;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v16 + 8))(v74, v71);
        _os_log_impl((void *)&_mh_execute_header, v72, v73, "Failed to find location identifier %{private,mask.hash}s from list", (uint8_t *)v75, 0x16u);
        swift_arrayDestroy();
        uint64_t v68 = (void (*)(char *, uint64_t, uint64_t))v103;
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v16 + 8))(v69, v71);
      }

      uint64_t v79 = v89;
      sub_10013C9C4(v54, v89);
      uint64_t v80 = v104;
      if (_s7Weather24LocationCompositionStateOwet_0(v79, 1, v104) == 1)
      {
        sub_1001781AC(v79, &qword_100EAC4A0);
        return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v68)(v92, v70, v97);
      }
      else
      {
        uint64_t v81 = v87;
        LocationModel.identifier.getter();
        (*(void (**)(uint64_t, uint64_t))(v91 + 8))(v79, v80);
        return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v16 + 32))(v92, v81, v97);
      }
    }
  }
}

uint64_t sub_1009F6264(uint64_t a1, uint64_t a2)
{
  uint64_t v34 = a2;
  uint64_t v2 = type metadata accessor for Location.Identifier();
  uint64_t v35 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v30 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = sub_10017DF08(&qword_100E6DD18);
  __chkstk_darwin(v33);
  uint64_t v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = type metadata accessor for Location();
  uint64_t v6 = *(void *)(v31 - 8);
  __chkstk_darwin(v31);
  uint64_t v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10017DF08(&qword_100E63508);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10017DF08(&qword_100E6DC08);
  __chkstk_darwin(v12 - 8);
  uint64_t v32 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v30 - v15;
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)&v30 - v18;
  LocationModel.locationOfInterest.getter();
  uint64_t v20 = type metadata accessor for LocationOfInterest();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v11, 1, v20) == 1)
  {
    sub_1001781AC((uint64_t)v11, &qword_100E63508);
    uint64_t v21 = 1;
  }
  else
  {
    LocationOfInterest.location.getter();
    (*(void (**)(char *, uint64_t))(*(void *)(v20 - 8) + 8))(v11, v20);
    Location.identifier.getter();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v31);
    uint64_t v21 = 0;
  }
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v19, v21, 1, v2);
  uint64_t v22 = v35;
  (*(void (**)(char *, uint64_t, uint64_t))(v35 + 16))(v16, v34, v2);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v16, 0, 1, v2);
  uint64_t v23 = (uint64_t)&v5[*(int *)(v33 + 48)];
  uint64_t v24 = &qword_100E6DC08;
  sub_10006DF38((uint64_t)v19, (uint64_t)v5, &qword_100E6DC08);
  sub_10006DF38((uint64_t)v16, v23, &qword_100E6DC08);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v5, 1, v2) == 1)
  {
    sub_1001781AC((uint64_t)v16, &qword_100E6DC08);
    sub_1001781AC((uint64_t)v19, &qword_100E6DC08);
    if (_s7Weather24LocationCompositionStateOwet_0(v23, 1, v2) == 1)
    {
      char v25 = -1;
    }
    else
    {
      uint64_t v24 = &qword_100E6DD18;
      char v25 = 0;
    }
  }
  else
  {
    uint64_t v26 = (uint64_t)v32;
    sub_10006DF38((uint64_t)v5, (uint64_t)v32, &qword_100E6DC08);
    if (_s7Weather24LocationCompositionStateOwet_0(v23, 1, v2) == 1)
    {
      sub_1001781AC((uint64_t)v16, &qword_100E6DC08);
      sub_1001781AC((uint64_t)v19, &qword_100E6DC08);
      (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v26, v2);
      char v25 = 0;
      uint64_t v24 = &qword_100E6DD18;
    }
    else
    {
      uint64_t v27 = v30;
      (*(void (**)(char *, uint64_t, uint64_t))(v22 + 32))(v30, v23, v2);
      sub_10023114C((unint64_t *)&qword_100E63A30);
      char v25 = dispatch thunk of static Equatable.== infix(_:_:)();
      uint64_t v28 = *(void (**)(char *, uint64_t))(v22 + 8);
      v28(v27, v2);
      uint64_t v24 = &qword_100E6DC08;
      sub_1001781AC((uint64_t)v16, &qword_100E6DC08);
      sub_1001781AC((uint64_t)v19, &qword_100E6DC08);
      v28(v32, v2);
    }
  }
  sub_1001781AC((uint64_t)v5, v24);
  return v25 & 1;
}

uint64_t sub_1009F677C(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  uint64_t v4 = sub_10011BFA4();
  v5(v4);
  return a2;
}

uint64_t sub_1009F67D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10017DF08(&qword_100E66410);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t *sub_1009F6838(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    a1[1] = a2[1];
    uint64_t v7 = (int *)type metadata accessor for LearnMoreAttributorViewModel();
    uint64_t v8 = v7[6];
    uint64_t v9 = (char *)v4 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for URL();
    swift_bridgeObjectRetain();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v10, 1, v11))
    {
      uint64_t v12 = sub_10017DF08(&qword_100E749B0);
      memcpy(v9, v10, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v9, 0, 1, v11);
    }
    uint64_t v14 = v7[7];
    uint64_t v15 = (uint64_t *)((char *)v4 + v14);
    uint64_t v16 = (uint64_t *)((char *)a2 + v14);
    uint64_t v17 = v16[1];
    *uint64_t v15 = *v16;
    v15[1] = v17;
    *(uint64_t *)((char *)v4 + v7[8]) = *(uint64_t *)((char *)a2 + v7[8]);
    uint64_t v18 = *(int *)(a3 + 20);
    uint64_t v19 = (char *)v4 + v18;
    uint64_t v20 = (char *)a2 + v18;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_unknownObjectWeakCopyInit();
    *((void *)v19 + 1) = *((void *)v20 + 1);
    uint64_t v21 = *(int *)(a3 + 24);
    uint64_t v22 = (char *)v4 + v21;
    uint64_t v23 = (char *)a2 + v21;
    uint64_t v24 = *(uint64_t *)((char *)a2 + v21);
    uint64_t v25 = *((void *)v23 + 1);
    char v26 = v23[16];
    sub_100190CC4(v24, v25, v26);
    *(void *)uint64_t v22 = v24;
    *((void *)v22 + 1) = v25;
    unsigned char v22[16] = v26;
    *((void *)v22 + 3) = *((void *)v23 + 3);
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_1009F6A18(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(type metadata accessor for LearnMoreAttributorViewModel() + 24);
  uint64_t v5 = type metadata accessor for URL();
  if (!_s7Weather24LocationCompositionStateOwet_0(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  swift_bridgeObjectRelease();
  swift_release();
  swift_unknownObjectWeakDestroy();
  sub_100191924(*(void *)(a1 + *(int *)(a2 + 24)), *(void *)(a1 + *(int *)(a2 + 24) + 8), *(unsigned char *)(a1 + *(int *)(a2 + 24) + 16));

  return swift_bridgeObjectRelease();
}

uint64_t sub_1009F6B08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  uint64_t v6 = (int *)type metadata accessor for LearnMoreAttributorViewModel();
  uint64_t v7 = v6[6];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = type metadata accessor for URL();
  swift_bridgeObjectRetain();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v10))
  {
    uint64_t v11 = sub_10017DF08(&qword_100E749B0);
    memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v8, 0, 1, v10);
  }
  uint64_t v12 = v6[7];
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (void *)(a2 + v12);
  uint64_t v15 = v14[1];
  void *v13 = *v14;
  v13[1] = v15;
  *(void *)(a1 + v6[8]) = *(void *)(a2 + v6[8]);
  uint64_t v16 = *(int *)(a3 + 20);
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_unknownObjectWeakCopyInit();
  *(void *)(v17 + 8) = *(void *)(v18 + 8);
  uint64_t v19 = *(int *)(a3 + 24);
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = *(void *)(a2 + v19);
  uint64_t v23 = *(void *)(v21 + 8);
  char v24 = *(unsigned char *)(v21 + 16);
  sub_100190CC4(v22, v23, v24);
  *(void *)uint64_t v20 = v22;
  *(void *)(v20 + 8) = v23;
  *(unsigned char *)(v20 + 16) = v24;
  *(void *)(v20 + 24) = *(void *)(v21 + 24);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1009F6C98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = (int *)type metadata accessor for LearnMoreAttributorViewModel();
  uint64_t v7 = v6[6];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = type metadata accessor for URL();
  int v11 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v10);
  int v12 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v10);
  if (!v11)
  {
    uint64_t v13 = *(void *)(v10 - 8);
    if (!v12)
    {
      (*(void (**)(void *, const void *, uint64_t))(v13 + 24))(v8, v9, v10);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v13 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v12)
  {
LABEL_6:
    uint64_t v14 = sub_10017DF08(&qword_100E749B0);
    memcpy(v8, v9, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v8, 0, 1, v10);
LABEL_7:
  uint64_t v15 = v6[7];
  uint64_t v16 = (void *)(a1 + v15);
  uint64_t v17 = (void *)(a2 + v15);
  *uint64_t v16 = *v17;
  v16[1] = v17[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + v6[8]) = *(void *)(a2 + v6[8]);
  swift_retain();
  swift_release();
  uint64_t v18 = a2 + *(int *)(a3 + 20);
  *(void *)(swift_unknownObjectWeakCopyAssign() + 8) = *(void *)(v18 + 8);
  uint64_t v19 = *(int *)(a3 + 24);
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = *(void *)(a2 + v19);
  uint64_t v23 = *(void *)(v21 + 8);
  LOBYTE(v18) = *(unsigned char *)(v21 + 16);
  sub_100190CC4(v22, v23, v18);
  uint64_t v24 = *(void *)v20;
  uint64_t v25 = *(void *)(v20 + 8);
  char v26 = *(unsigned char *)(v20 + 16);
  *(void *)uint64_t v20 = v22;
  *(void *)(v20 + 8) = v23;
  *(unsigned char *)(v20 + 16) = v18;
  sub_100191924(v24, v25, v26);
  *(void *)(v20 + 24) = *(void *)(v21 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1009F6EE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  uint64_t v6 = (int *)type metadata accessor for LearnMoreAttributorViewModel();
  uint64_t v7 = v6[6];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = type metadata accessor for URL();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v10))
  {
    uint64_t v11 = sub_10017DF08(&qword_100E749B0);
    memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v8, 0, 1, v10);
  }
  *(_OWORD *)(a1 + v6[7]) = *(_OWORD *)(a2 + v6[7]);
  *(void *)(a1 + v6[8]) = *(void *)(a2 + v6[8]);
  uint64_t v12 = a2 + *(int *)(a3 + 20);
  *(void *)(swift_unknownObjectWeakTakeInit() + 8) = *(void *)(v12 + 8);
  uint64_t v13 = *(int *)(a3 + 24);
  uint64_t v14 = (_OWORD *)(a1 + v13);
  uint64_t v15 = (_OWORD *)(a2 + v13);
  long long v16 = v15[1];
  *uint64_t v14 = *v15;
  v14[1] = v16;
  return a1;
}

uint64_t sub_1009F702C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  uint64_t v6 = (int *)type metadata accessor for LearnMoreAttributorViewModel();
  uint64_t v7 = v6[6];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = type metadata accessor for URL();
  int v11 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v10);
  int v12 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v10);
  if (!v11)
  {
    uint64_t v13 = *(void *)(v10 - 8);
    if (!v12)
    {
      (*(void (**)(void *, const void *, uint64_t))(v13 + 40))(v8, v9, v10);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v13 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v12)
  {
LABEL_6:
    uint64_t v14 = sub_10017DF08(&qword_100E749B0);
    memcpy(v8, v9, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v8, 0, 1, v10);
LABEL_7:
  uint64_t v15 = v6[7];
  long long v16 = (void *)(a1 + v15);
  uint64_t v17 = (uint64_t *)(a2 + v15);
  uint64_t v19 = *v17;
  uint64_t v18 = v17[1];
  *long long v16 = v19;
  v16[1] = v18;
  swift_bridgeObjectRelease();
  *(void *)(a1 + v6[8]) = *(void *)(a2 + v6[8]);
  swift_release();
  uint64_t v20 = a2 + *(int *)(a3 + 20);
  *(void *)(swift_unknownObjectWeakTakeAssign() + 8) = *(void *)(v20 + 8);
  uint64_t v21 = *(int *)(a3 + 24);
  uint64_t v22 = a1 + v21;
  uint64_t v23 = a2 + v21;
  LOBYTE(v21) = *(unsigned char *)(v23 + 16);
  uint64_t v24 = *(void *)v22;
  uint64_t v25 = *(void *)(v22 + 8);
  char v26 = *(unsigned char *)(v22 + 16);
  *(_OWORD *)uint64_t v22 = *(_OWORD *)v23;
  *(unsigned char *)(v22 + 16) = v21;
  sub_100191924(v24, v25, v26);
  *(void *)(v22 + 24) = *(void *)(v23 + 24);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1009F723C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1009F7250);
}

uint64_t sub_1009F7250(uint64_t a1, uint64_t a2, uint64_t a3)
{
  type metadata accessor for LearnMoreAttributorViewModel();
  sub_100162F30();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    return _s7Weather24LocationCompositionStateOwet_0(a1, a2, v6);
  }
  else
  {
    uint64_t v9 = a1 + *(int *)(a3 + 20);
    uint64_t v10 = *(void *)(v9 + 8);
    int v11 = *(_DWORD *)v9 & 0x7FFFFFFF;
    if ((v10 & 0xF000000000000007) != 0) {
      return (v11 + 1);
    }
    else {
      return 0;
    }
  }
}

uint64_t sub_1009F72E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1009F72F4);
}

void sub_1009F72F4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  type metadata accessor for LearnMoreAttributorViewModel();
  sub_100162F30();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    _s7Weather24LocationCompositionStateOwst_0(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v10 = (void *)(a1 + *(int *)(a4 + 20));
    *uint64_t v10 = (a2 - 1);
    v10[1] = 1;
  }
}

uint64_t sub_1009F7384()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_1009F73A0(uint64_t a1@<X8>)
{
  uint64_t v88 = a1;
  uint64_t v2 = sub_10017DF08(&qword_100EA9360);
  uint64_t v3 = sub_100109308(v2);
  __chkstk_darwin(v3);
  sub_100109314();
  uint64_t v87 = v4;
  uint64_t v86 = sub_10017DF08(&qword_100E7B450);
  sub_100162E4C();
  __chkstk_darwin(v5);
  sub_100109314();
  uint64_t v85 = v6;
  uint64_t v7 = sub_10017DF08(&qword_100E749B0);
  uint64_t v8 = sub_100109308(v7);
  __chkstk_darwin(v8);
  sub_100109314();
  uint64_t v93 = v9;
  sub_100129064();
  uint64_t v94 = type metadata accessor for AttributeContainer();
  sub_100179C0C();
  uint64_t v90 = v10;
  __chkstk_darwin(v11);
  sub_100109314();
  uint64_t v92 = v12;
  sub_100129064();
  uint64_t v112 = type metadata accessor for AttributedString.Runs.Run();
  uint64_t v89 = *(void *)(v112 - 8);
  __chkstk_darwin(v112 - 8);
  sub_100109314();
  uint64_t v111 = v13;
  uint64_t v14 = sub_10017DF08(&qword_100E847D8);
  uint64_t v15 = sub_100109308(v14);
  __chkstk_darwin(v15);
  sub_100109314();
  uint64_t v99 = v16;
  sub_100129064();
  uint64_t v108 = type metadata accessor for AttributedString.Runs.Index();
  sub_100179C0C();
  uint64_t v110 = v17;
  __chkstk_darwin(v18);
  sub_100162EF8();
  uint64_t v105 = v19;
  __chkstk_darwin(v20);
  uint64_t v107 = (char *)&v84 - v21;
  sub_100129064();
  uint64_t v22 = type metadata accessor for AttributedString.Runs();
  sub_100179C0C();
  uint64_t v109 = v23;
  __chkstk_darwin(v24);
  sub_100109314();
  uint64_t v106 = v25;
  sub_100129064();
  uint64_t v104 = type metadata accessor for AttributedString();
  sub_100179C0C();
  uint64_t v27 = v26;
  __chkstk_darwin(v28);
  sub_100109314();
  uint64_t v30 = v29;
  uint64_t v101 = sub_10017DF08(&qword_100E847E0);
  __chkstk_darwin(v101);
  sub_100162EF8();
  uint64_t v32 = v31;
  __chkstk_darwin(v33);
  uint64_t v103 = (uint64_t)&v84 - v34;
  sub_100129064();
  uint64_t v35 = type metadata accessor for String.LocalizationValue();
  uint64_t v36 = sub_100109308(v35);
  __chkstk_darwin(v36);
  String.LocalizationValue.init(stringLiteral:)();
  if (*(void *)(v1 + *(int *)(type metadata accessor for LearnMoreAttributorViewModel() + 32)))
  {
    swift_bridgeObjectRetain();
    dispatch thunk of Lazy.value.getter();
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  AttributedString.init(localized:bundle:linkA:linkB:)();
  id v37 = [objc_allocWithZone((Class)NSMutableParagraphStyle) init];
  [v37 setAlignment:1];
  swift_getKeyPath();
  sub_1001A01BC();
  __chkstk_darwin(v38);
  sub_10019EDAC();
  swift_getKeyPath();
  id v113 = sub_1007D544C();
  sub_1005F2E48();
  AttributedString.subscript.setter();
  uint64_t KeyPath = swift_getKeyPath();
  __chkstk_darwin(KeyPath);
  sub_10019EDAC();
  swift_getKeyPath();
  id v113 = v37;
  sub_1009F9614();
  id v84 = v37;
  AttributedString.subscript.setter();
  swift_getKeyPath();
  sub_1001A01BC();
  __chkstk_darwin(v40);
  sub_10019EDAC();
  swift_getKeyPath();
  id v113 = sub_1007D5524();
  sub_100624A48();
  AttributedString.subscript.setter();
  uint64_t v41 = v104;
  sub_100162808();
  v42();
  uint64_t v43 = v106;
  AttributedString.runs.getter();
  (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v30, v41);
  uint64_t v44 = v109;
  uint64_t v45 = v32;
  uint64_t v97 = *(void *)(v109 + 16);
  uint64_t v98 = v109 + 16;
  sub_100162808();
  v46();
  uint64_t v47 = sub_1009F96C4(&qword_100E847F0, (void (*)(uint64_t))&type metadata accessor for AttributedString.Runs);
  unint64_t v48 = v107;
  uint64_t v102 = v47;
  dispatch thunk of Collection.startIndex.getter();
  unint64_t v49 = *(void (**)(uint64_t, uint64_t))(v44 + 8);
  uint64_t v104 = v22;
  uint64_t v109 = v44 + 8;
  int v96 = v49;
  v49(v43, v22);
  uint64_t v50 = v32 + *(int *)(v101 + 36);
  uint64_t v51 = v110;
  (*(void (**)(uint64_t, char *, uint64_t))(v110 + 32))(v50, v48, v108);
  uint64_t v52 = v103;
  sub_10020E72C(v45, v103, &qword_100E847E0);
  uint64_t v53 = *(void *)(v51 + 16);
  uint64_t v110 = v51 + 16;
  uint64_t v100 = (void (**)(uint64_t, uint64_t))(v51 + 8);
  uint64_t v101 = v53;
  uint64_t v95 = v89 + 16;
  uint64_t v91 = v89 + 32;
  v90 += 8;
  v89 += 8;
  uint64_t v54 = v104;
  while (1)
  {
    uint64_t v56 = v107;
    uint64_t v55 = v108;
    sub_100162808();
    v57();
    uint64_t v58 = v105;
    dispatch thunk of Collection.endIndex.getter();
    sub_1009F96C4(&qword_100E847F8, (void (*)(uint64_t))&type metadata accessor for AttributedString.Runs.Index);
    char v59 = dispatch thunk of static Equatable.== infix(_:_:)();
    uint64_t v60 = *v100;
    (*v100)(v58, v55);
    v60((uint64_t)v56, v55);
    if (v59) {
      break;
    }
    uint64_t v61 = (void (*)(uint64_t))dispatch thunk of Collection.subscript.read();
    sub_100183C70();
    uint64_t v62 = v99;
    uint64_t v63 = v112;
    v64(v99);
    uint64_t v65 = sub_1001891F0();
    v61(v65);
    uint64_t v66 = v106;
    sub_100162808();
    v67();
    dispatch thunk of Collection.formIndex(after:)();
    v96(v66, v54);
    _s7Weather24LocationCompositionStateOwst_0(v62, 0, 1, v63);
    if (_s7Weather24LocationCompositionStateOwet_0(v62, 1, v63) == 1) {
      goto LABEL_11;
    }
    sub_100183C70();
    uint64_t v68 = v111;
    v69(v111, v62, v63);
    uint64_t v70 = v92;
    AttributedString.Runs.Run.attributes.getter();
    swift_getKeyPath();
    sub_1001A01BC();
    __chkstk_darwin(v71);
    sub_10019EDAC();
    swift_getKeyPath();
    sub_1005F2FD0();
    uint64_t v72 = v93;
    AttributeContainer.subscript.getter();
    swift_release();
    sub_100183C70();
    v73(v70, v94);
    uint64_t v74 = type metadata accessor for URL();
    int v75 = _s7Weather24LocationCompositionStateOwet_0(v72, 1, v74);
    sub_1001781AC(v72, &qword_100E749B0);
    if (v75 != 1)
    {
      uint64_t v76 = v85;
      AttributedString.Runs.Run.range.getter();
      swift_getKeyPath();
      sub_1001A01BC();
      __chkstk_darwin(v77);
      sub_10019EDAC();
      swift_getKeyPath();
      uint64_t v78 = v87;
      static Text.LineStyle.single.getter();
      uint64_t v79 = type metadata accessor for Text.LineStyle();
      _s7Weather24LocationCompositionStateOwst_0(v78, 0, 1, v79);
      sub_1001246C8((unint64_t *)&qword_100E7B460, &qword_100E7B450);
      uint64_t v80 = (void (*)(uint64_t))AttributedString.subscript.modify();
      sub_1009F9744();
      AttributedSubstring.subscript.setter();
      uint64_t v81 = sub_1001891F0();
      v80(v81);
      uint64_t v82 = v76;
      uint64_t v68 = v111;
      uint64_t v63 = v112;
      sub_1001781AC(v82, &qword_100E7B450);
    }
    sub_100183C70();
    v83(v68, v63);
    uint64_t v52 = v103;
  }
  _s7Weather24LocationCompositionStateOwst_0(v99, 1, 1, v112);
LABEL_11:
  sub_1001781AC(v52, &qword_100E847E0);
}

void sub_1009F7E5C()
{
}

void sub_1009F7E84()
{
}

uint64_t sub_1009F7EAC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_10017DF08(&qword_100EA92A8);
  uint64_t v4 = sub_100109308(v3);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v6 = static HorizontalAlignment.center.getter();
  *((void *)v6 + 1) = 0;
  v6[16] = 0;
  uint64_t v7 = sub_10017DF08(&qword_100EA92B0);
  sub_1009F7FA0(v1, (uint64_t)&v6[*(int *)(v7 + 44)]);
  sub_1007D544C();
  uint64_t v8 = Color.init(_:)();
  uint64_t KeyPath = swift_getKeyPath();
  sub_1001262FC((uint64_t)v6, a1, &qword_100EA92A8);
  uint64_t v10 = (uint64_t *)(a1 + *(int *)(sub_10017DF08(&qword_100EA92B8) + 36));
  *uint64_t v10 = KeyPath;
  v10[1] = v8;
  return sub_1001781AC((uint64_t)v6, &qword_100EA92A8);
}

uint64_t sub_1009F7FA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_10017DF08(&qword_100EA92C0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v26 - v8;
  uint64_t v10 = type metadata accessor for AttributedString();
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v13 = [self currentDevice];
  id v14 = [v13 userInterfaceIdiom];

  uint64_t v15 = 0;
  uint64_t v16 = 0;
  uint64_t v17 = 0;
  uint64_t v18 = 0;
  if (v14 != (id)5)
  {
    sub_1009F73A0((uint64_t)v12);
    uint64_t v15 = Text.init(_:)();
    uint64_t v16 = v19;
    uint64_t v18 = v20;
    uint64_t v17 = v21 & 1;
  }
  if (*(void *)(*(void *)(a1 + 8) + 16))
  {
    *(void *)uint64_t v9 = static VerticalAlignment.center.getter();
    *((void *)v9 + 1) = 0x4034000000000000;
    unsigned char v9[16] = 0;
    sub_10017DF08(&qword_100EA92C8);
    sub_1009F81F4(a1);
    uint64_t v22 = 0;
  }
  else
  {
    uint64_t v22 = 1;
  }
  uint64_t v23 = sub_10017DF08(&qword_100EA92D0);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v9, v22, 1, v23);
  sub_1001262FC((uint64_t)v9, (uint64_t)v6, &qword_100EA92C0);
  *(void *)a2 = v15;
  *(void *)(a2 + 8) = v16;
  *(void *)(a2 + 16) = v17;
  *(void *)(a2 + 24) = v18;
  *(void *)(a2 + 32) = 0x4030000000000000;
  *(unsigned char *)(a2 + 40) = 0;
  uint64_t v24 = sub_10017DF08(&qword_100EA92D8);
  sub_1001262FC((uint64_t)v6, a2 + *(int *)(v24 + 64), &qword_100EA92C0);
  sub_100147E1C(v15, v16, v17, v18);
  sub_1001781AC((uint64_t)v9, &qword_100EA92C0);
  sub_1001781AC((uint64_t)v6, &qword_100EA92C0);
  return sub_100147E60(v15, v16, v17, v18);
}

uint64_t sub_1009F81F4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for LearnMoreAttributorView();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  __chkstk_darwin(v2 - 8);
  v8[1] = *(void *)(a1 + 8);
  swift_getKeyPath();
  sub_1009F903C(a1, (uint64_t)v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v5 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v6 = swift_allocObject();
  sub_1009F90A4((uint64_t)v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v6 + v5);
  swift_bridgeObjectRetain();
  sub_10017DF08(&qword_100EA92E0);
  sub_10017DF08(&qword_100EA92E8);
  sub_1001246C8(&qword_100EA92F0, &qword_100EA92E0);
  sub_1009F96C4(&qword_100EA92F8, (void (*)(uint64_t))&type metadata accessor for WeatherProviderAttribution);
  sub_1009F9120();
  return ForEach<>.init(_:id:content:)();
}

uint64_t sub_1009F83CC@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v68 = a2;
  uint64_t v69 = a1;
  uint64_t v2 = type metadata accessor for LearnMoreAttributorView();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v61 = v2 - 8;
  uint64_t v65 = v3;
  uint64_t v64 = *(void *)(v3 + 64);
  __chkstk_darwin(v2 - 8);
  uint64_t v62 = (uint64_t)&v46 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for OpenURLAction();
  uint64_t v66 = *(void *)(v5 - 8);
  uint64_t v67 = v5;
  __chkstk_darwin(v5);
  uint64_t v63 = (char *)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for AccessibilityTraits();
  uint64_t v59 = *(void *)(v7 - 8);
  uint64_t v60 = v7;
  __chkstk_darwin(v7);
  uint64_t v58 = (char *)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = type metadata accessor for PlainButtonStyle();
  uint64_t v56 = *(void *)(v54 - 8);
  __chkstk_darwin(v54);
  uint64_t v47 = (char *)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for URL();
  __chkstk_darwin(v10 - 8);
  uint64_t v11 = sub_10017DF08(&qword_100EA9318);
  uint64_t v49 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  id v13 = (char *)&v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = sub_10017DF08(&qword_100EA9328);
  uint64_t v52 = *(void *)(v50 - 8);
  __chkstk_darwin(v50);
  uint64_t v15 = (char *)&v46 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = sub_10017DF08(&qword_100EA9310);
  __chkstk_darwin(v51);
  uint64_t v46 = (char *)&v46 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  unint64_t v48 = (char *)&v46 - v18;
  uint64_t v57 = sub_10017DF08(&qword_100EA92E8) - 8;
  __chkstk_darwin(v57);
  uint64_t v55 = (char *)&v46 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_10017DF08(&qword_100EA9330);
  __chkstk_darwin(v20);
  uint64_t v22 = (char *)&v46 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = (void *)WeatherProviderAttribution.logo.getter();
  uint64_t v24 = WeatherProviderAttribution.name.getter();
  uint64_t v53 = v22;
  sub_1009F8BF0(v23, v24, v25, (uint64_t)v22);

  swift_bridgeObjectRelease();
  WeatherProviderAttribution.source.getter();
  uint64_t v70 = v22;
  sub_1009F933C();
  Link.init(destination:label:)();
  uint64_t v26 = v47;
  PlainButtonStyle.init()();
  uint64_t v27 = sub_1001246C8(&qword_100EA9320, &qword_100EA9318);
  uint64_t v28 = sub_1009F96C4((unint64_t *)&qword_100E70FB8, (void (*)(uint64_t))&type metadata accessor for PlainButtonStyle);
  uint64_t v29 = v54;
  View.buttonStyle<A>(_:)();
  (*(void (**)(char *, uint64_t))(v56 + 8))(v26, v29);
  (*(void (**)(char *, uint64_t))(v49 + 8))(v13, v11);
  uint64_t v30 = v58;
  static AccessibilityTraits.isButton.getter();
  uint64_t v71 = v11;
  uint64_t v72 = v29;
  uint64_t v73 = v27;
  uint64_t v74 = v28;
  swift_getOpaqueTypeConformance2();
  uint64_t v31 = (uint64_t)v46;
  uint64_t v32 = v50;
  View.accessibility(removeTraits:)();
  (*(void (**)(char *, uint64_t))(v59 + 8))(v30, v60);
  (*(void (**)(char *, uint64_t))(v52 + 8))(v15, v32);
  uint64_t v33 = v69;
  uint64_t v34 = (uint64_t)v48;
  ModifiedContent<>.accessibilityHint(_:)();
  sub_1001781AC(v31, &qword_100EA9310);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v36 = v62;
  sub_1009F903C(v33, v62);
  unint64_t v37 = (*(unsigned __int8 *)(v65 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v65 + 80);
  uint64_t v38 = swift_allocObject();
  sub_1009F90A4(v36, v38 + v37);
  unint64_t v39 = v63;
  OpenURLAction.init(handler:)();
  uint64_t v40 = (uint64_t)v55;
  uint64_t v41 = (uint64_t *)&v55[*(int *)(v57 + 44)];
  uint64_t v42 = sub_10017DF08(&qword_100E65360);
  uint64_t v44 = v66;
  uint64_t v43 = v67;
  (*(void (**)(char *, char *, uint64_t))(v66 + 16))((char *)v41 + *(int *)(v42 + 28), v39, v67);
  uint64_t *v41 = KeyPath;
  sub_1001262FC(v34, v40, &qword_100EA9310);
  (*(void (**)(char *, uint64_t))(v44 + 8))(v39, v43);
  sub_1001781AC(v34, &qword_100EA9310);
  sub_10020E72C(v40, v68, &qword_100EA92E8);
  return sub_1001781AC((uint64_t)v53, &qword_100EA9330);
}

uint64_t sub_1009F8BF0@<X0>(void *a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  v31._uint64_t countAndFlagsBits = a2;
  v31._uint64_t object = a3;
  uint64_t v32 = a4;
  uint64_t v5 = type metadata accessor for LocalizedStringKey.StringInterpolation();
  __chkstk_darwin(v5 - 8);
  uint64_t v6 = type metadata accessor for Image.ResizingMode();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10017DF08(&qword_100E7DFA0);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v13 = a1;
  Image.init(uiImage:)();
  uint64_t v14 = enum case for Image.TemplateRenderingMode.template(_:);
  uint64_t v15 = type metadata accessor for Image.TemplateRenderingMode();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v15 - 8) + 104))(v12, v14, v15);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v12, 0, 1, v15);
  Image.renderingMode(_:)();
  swift_release();
  sub_1001781AC((uint64_t)v12, &qword_100E7DFA0);
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, enum case for Image.ResizingMode.stretch(_:), v6);
  uint64_t v16 = Image.resizable(capInsets:resizingMode:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v17 = v42;
  LOBYTE(v15) = v43;
  uint64_t v18 = v44;
  LOBYTE(a1) = v45;
  uint64_t v20 = v46;
  uint64_t v19 = v47;
  sub_1007D544C();
  uint64_t v21 = Color.init(_:)();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v33 = v16;
  uint64_t v34 = v17;
  char v35 = v15;
  uint64_t v36 = v18;
  char v37 = (char)a1;
  uint64_t v38 = v20;
  uint64_t v39 = v19;
  uint64_t v40 = KeyPath;
  uint64_t v41 = v21;
  LocalizedStringKey.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v23._uint64_t countAndFlagsBits = 0;
  v23._uint64_t object = (void *)0xE000000000000000;
  LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v23);
  LocalizedStringKey.StringInterpolation.appendInterpolation(_:)(v31);
  v24._uint64_t countAndFlagsBits = 0;
  v24._uint64_t object = (void *)0xE000000000000000;
  LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v24);
  LocalizedStringKey.init(stringInterpolation:)();
  uint64_t v25 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v27 = v26;
  char v29 = v28 & 1;
  sub_10017DF08(&qword_100EA9348);
  sub_1009F93E8();
  View.accessibilityLabel(_:)();
  sub_100191924(v25, v27, v29);
  swift_release();
  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1009F8F98(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a2 + *(int *)(type metadata accessor for LearnMoreAttributorView() + 20);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v5 = *(void *)(v3 + 8);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 8))(a1, ObjectType, v5);
    uint64_t Strong = swift_unknownObjectRelease();
  }

  return static OpenURLAction.Result.systemAction.getter(Strong);
}

uint64_t sub_1009F903C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for LearnMoreAttributorView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1009F90A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for LearnMoreAttributorView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1009F9108(uint64_t a1)
{
  return sub_1009F9520(a1, (uint64_t (*)(uint64_t, uint64_t))sub_1009F83CC);
}

unint64_t sub_1009F9120()
{
  unint64_t result = qword_100EA9300;
  if (!qword_100EA9300)
  {
    sub_10018C6DC(&qword_100EA92E8);
    sub_1009F91C0();
    sub_1001246C8(&qword_100E65358, &qword_100E65360);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA9300);
  }
  return result;
}

unint64_t sub_1009F91C0()
{
  unint64_t result = qword_100EA9308;
  if (!qword_100EA9308)
  {
    sub_10018C6DC(&qword_100EA9310);
    sub_10018C6DC(&qword_100EA9318);
    type metadata accessor for PlainButtonStyle();
    sub_1001246C8(&qword_100EA9320, &qword_100EA9318);
    sub_1009F96C4((unint64_t *)&qword_100E70FB8, (void (*)(uint64_t))&type metadata accessor for PlainButtonStyle);
    swift_getOpaqueTypeConformance2();
    sub_1009F96C4((unint64_t *)&qword_100EAACA0, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA9308);
  }
  return result;
}

uint64_t sub_1009F9314@<X0>(uint64_t a1@<X8>)
{
  return sub_1001262FC(*(void *)(v1 + 16), a1, &qword_100EA9330);
}

unint64_t sub_1009F933C()
{
  unint64_t result = qword_100EA9338;
  if (!qword_100EA9338)
  {
    sub_10018C6DC(&qword_100EA9330);
    sub_1009F93E8();
    sub_1009F96C4((unint64_t *)&qword_100EAACA0, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA9338);
  }
  return result;
}

unint64_t sub_1009F93E8()
{
  unint64_t result = qword_100EA9340;
  if (!qword_100EA9340)
  {
    sub_10018C6DC(&qword_100EA9348);
    sub_1009F9488();
    sub_1001246C8((unint64_t *)&qword_100E64F80, (uint64_t *)&unk_100EAA770);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA9340);
  }
  return result;
}

unint64_t sub_1009F9488()
{
  unint64_t result = qword_100EA9350;
  if (!qword_100EA9350)
  {
    sub_10018C6DC(&qword_100EA9358);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA9350);
  }
  return result;
}

uint64_t sub_1009F9508(uint64_t a1)
{
  return sub_1009F9520(a1, sub_1009F8F98);
}

uint64_t sub_1009F9520(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t))
{
  uint64_t v4 = *(void *)(type metadata accessor for LearnMoreAttributorView() - 8);
  uint64_t v5 = v2 + ((*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));

  return a2(a1, v5);
}

uint64_t sub_1009F95CC()
{
  return swift_release();
}

uint64_t sub_1009F95D4(void *a1, void *a2)
{
  *a2 = *a1;
  return swift_retain();
}

void *sub_1009F95E8(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

void sub_1009F95F4()
{
}

unint64_t sub_1009F9614()
{
  unint64_t result = qword_100EA9368;
  if (!qword_100EA9368)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA9368);
  }
  return result;
}

uint64_t sub_1009F9668(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1005F2764(a1, a2, a3, &qword_100EA9380) & 1;
}

uint64_t sub_1009F968C(uint64_t a1, uint64_t a2)
{
  return sub_1005F27C8(a1, a2, &qword_100EA9380);
}

uint64_t sub_1009F96C4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1009F9724()
{
}

unint64_t sub_1009F9744()
{
  unint64_t result = qword_100EA9370;
  if (!qword_100EA9370)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA9370);
  }
  return result;
}

uint64_t sub_1009F9798(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1005F2764(a1, a2, a3, &qword_100EA9378) & 1;
}

uint64_t sub_1009F97BC(uint64_t a1, uint64_t a2)
{
  return sub_1005F27C8(a1, a2, &qword_100EA9378);
}

unint64_t sub_1009F97E0()
{
  unint64_t result = qword_100EA9388;
  if (!qword_100EA9388)
  {
    sub_10018C6DC(&qword_100EA92B8);
    sub_1001246C8(&qword_100EA9390, &qword_100EA92A8);
    sub_1001246C8((unint64_t *)&qword_100E64F80, (uint64_t *)&unk_100EAA770);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA9388);
  }
  return result;
}

void *sub_1009F98D4(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v4 = v3;
  int v30 = a3;
  uint64_t v7 = type metadata accessor for Location();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = v4[10];
  uint64_t v12 = v4[11];
  sub_1001B1E64(v4 + 7, v11);
  uint64_t v13 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 8))(a1, v11, v12);
  if (qword_100E627A0 != -1) {
    swift_once();
  }
  uint64_t v14 = type metadata accessor for Logger();
  sub_1002102B0(v14, (uint64_t)qword_100F51DF8);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a2, v7);
  swift_bridgeObjectRetain_n();
  uint64_t v15 = Logger.logObject.getter();
  os_log_type_t v16 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v17 = swift_slowAlloc();
    uint64_t v28 = a2;
    uint64_t v18 = v17;
    uint64_t v27 = swift_slowAlloc();
    uint64_t v31 = v13;
    v32[0] = v27;
    *(_DWORD *)uint64_t v18 = 136446723;
    char v29 = v4;
    sub_10021CDB4();
    uint64_t v19 = ShortDescribable.description.getter();
    uint64_t v31 = sub_10016414C(v19, v20, v32);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v18 + 12) = 2160;
    uint64_t v31 = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v18 + 22) = 2081;
    uint64_t v21 = Location.name.getter();
    uint64_t v31 = sub_10016414C(v21, v22, v32);
    uint64_t v4 = v29;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    _os_log_impl((void *)&_mh_execute_header, v15, v16, "Made row configuration: %{public}s for location=%{private,mask.hash}s", (uint8_t *)v18, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    a2 = v28;
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }

  __chkstk_darwin(v23);
  *((unsigned char *)&v26 - 32) = v30 & 1;
  *(&v26 - 3) = (uint64_t)v4;
  *(&v26 - 2) = a2;
  Swift::String v24 = sub_1000D5E44((void (*)(void *__return_ptr, uint64_t *))sub_1009FA010, (uint64_t)(&v26 - 6), v13);
  swift_bridgeObjectRelease();
  return v24;
}

BOOL sub_1009F9C80()
{
  id v0 = [self currentDevice];
  id v1 = [v0 userInterfaceIdiom];

  return v1 == 0;
}

uint64_t sub_1009F9CDC@<X0>(uint64_t *a1@<X8>)
{
  swift_bridgeObjectRetain();
  sub_1001D9898();
  uint64_t v3 = v2;
  swift_bridgeObjectRelease();
  if (*(void *)(v3 + 16))
  {
    uint64_t result = sub_1001F24CC(v3);
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t result = 0;
    uint64_t v5 = 0;
    uint64_t v6 = 0;
  }
  *a1 = result;
  a1[1] = v5;
  a1[2] = v6;
  return result;
}

uint64_t sub_1009F9D84@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = type metadata accessor for LocationViewComponent();
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001D9BA8(a1, (uint64_t)v10, (void (*)(void))type metadata accessor for LocationViewComponent);
  if swift_getEnumCaseMultiPayload() != 9 || (a2)
  {
    sub_1001B1E64((void *)(a3 + 16), *(void *)(a3 + 40));
    sub_1001D9C10(a1, a4);
    uint64_t v11 = 0;
  }
  else
  {
    uint64_t v11 = 1;
  }
  uint64_t v12 = type metadata accessor for LocationComponentContainerViewModel();
  _s7Weather24LocationCompositionStateOwst_0(a4, v11, 1, v12);
  return sub_1001569A8((uint64_t)v10, (void (*)(void))type metadata accessor for LocationViewComponent);
}

uint64_t sub_1009F9EC8()
{
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 16);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 56);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 96);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 136);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 176);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 216);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 256);
  sub_100178110(v0 + OBJC_IVAR____TtC7Weather24LocationViewModelFactory_lastWeatherData, &qword_100E63850);
  sub_100178110(v0 + OBJC_IVAR____TtC7Weather24LocationViewModelFactory_lastNewsData, &qword_100E670F0);
  sub_100178110(v0 + OBJC_IVAR____TtC7Weather24LocationViewModelFactory_lastViewModel, &qword_100E64A18);
  sub_100178110(v0 + OBJC_IVAR____TtC7Weather24LocationViewModelFactory_lastPreprocessedDataUuid, &qword_100E855D0);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1009F9FB0()
{
  sub_1009F9EC8();

  return swift_deallocClassInstance();
}

uint64_t sub_1009FA008()
{
  return type metadata accessor for LocationViewModelFactory();
}

uint64_t sub_1009FA010@<X0>(uint64_t *a1@<X8>)
{
  return sub_1009F9CDC(a1);
}

uint64_t sub_1009FA030@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1009F9D84(a1, *(unsigned char *)(v2 + 16), *(void *)(v2 + 24), a2);
}

BOOL sub_1009FA050(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a2 + 16);
  BOOL result = (v2 | v3) == 0;
  if (v2)
  {
    if (v3)
    {
      swift_retain();
      swift_retain();
      char v5 = static Image.== infix(_:_:)();
      swift_release();
      swift_release();
      return v5 & 1;
    }
  }
  return result;
}

uint64_t type metadata accessor for WeatherMenuTipMutableAttributes()
{
  return self;
}

ValueMetadata *type metadata accessor for AddWeatherMenuListTip()
{
  return &type metadata for AddWeatherMenuListTip;
}

BOOL sub_1009FA0F4(uint64_t *a1, uint64_t *a2)
{
  return sub_1009FA050(*a1, *a2);
}

uint64_t sub_1009FA100()
{
  return Text.init(_:tableName:bundle:comment:)();
}

uint64_t sub_1009FA168()
{
  return Text.init(_:tableName:bundle:comment:)();
}

uint64_t sub_1009FA1D0()
{
  return swift_retain();
}

void *sub_1009FA1D8()
{
  uint64_t v1 = type metadata accessor for Tips.Action();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  sub_10011BFD8();
  Tips.Action.init(id:perform:_:)();
  sub_10017DF08(&qword_100E65410);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_100C251B0;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v2 + 32))(v4 + v3, v0, v1);
  char v5 = sub_1003B5BD4(v4);
  swift_setDeallocating();
  sub_1006BB0D4();
  return v5;
}

uint64_t sub_1009FA354()
{
  uint64_t v0 = type metadata accessor for Font.TextStyle();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  unint64_t v3 = (char *)&v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v4 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v6 = v5;
  char v8 = v7 & 1;
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for Font.TextStyle.body(_:), v0);
  static Font.Weight.medium.getter();
  static Font.system(_:weight:)();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  uint64_t v9 = Text.font(_:)();
  uint64_t v11 = v10;
  LOBYTE(v3) = v12;
  swift_release();
  sub_100191924(v4, v6, v8);
  swift_bridgeObjectRelease();
  swift_beginAccess();
  sub_10056DF2C();
  swift_endAccess();
  uint64_t v13 = Text.foregroundColor(_:)();
  swift_release();
  sub_100191924(v9, v11, v3 & 1);
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t sub_1009FA590()
{
  sub_10017DF08(&qword_100E653D0);
  sub_100179C0C();
  __chkstk_darwin(v0);
  sub_100109314();
  sub_10017DF08(&qword_100E653D8);
  sub_100179C0C();
  __chkstk_darwin(v1);
  sub_100109314();
  uint64_t v2 = type metadata accessor for Tips.IgnoresDisplayFrequency();
  sub_100179C0C();
  uint64_t v4 = v3;
  __chkstk_darwin(v5);
  sub_1001626E0();
  uint64_t v8 = v7 - v6;
  sub_10017DF08(&qword_100E653E0);
  sub_100179C0C();
  __chkstk_darwin(v9);
  sub_1001626E0();
  uint64_t v10 = type metadata accessor for Tips.MaxDisplayCount();
  sub_100179C0C();
  uint64_t v12 = v11;
  __chkstk_darwin(v13);
  sub_1001626E0();
  uint64_t v16 = v15 - v14;
  sub_10017DF08(&qword_100E653E8);
  sub_100179C0C();
  __chkstk_darwin(v17);
  sub_1001626E0();
  Tips.MaxDisplayCount.init(_:)();
  static Tips.OptionsBuilder.buildExpression<A>(_:)();
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v16, v10);
  Tips.IgnoresDisplayFrequency.init(_:)();
  static Tips.OptionsBuilder.buildExpression<A>(_:)();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v8, v2);
  swift_getOpaqueTypeConformance2();
  static Tips.OptionsBuilder.buildPartialBlock<A>(first:)();
  swift_getOpaqueTypeConformance2();
  swift_getOpaqueTypeConformance2();
  static Tips.OptionsBuilder.buildPartialBlock<A, B>(accumulated:next:)();
  swift_getOpaqueTypeConformance2();
  uint64_t v18 = static Tips.OptionsBuilder.buildFinalResult<A>(_:)();
  sub_100162F0C();
  v19();
  sub_100162F0C();
  v20();
  sub_100162F0C();
  v21();
  sub_100162F0C();
  v22();
  return v18;
}

uint64_t sub_1009FA968()
{
  uint64_t v0 = sub_10017DF08(&qword_100E63520);
  sub_100097814(v0, qword_100F52220);
  sub_1002102B0(v0, (uint64_t)qword_100F52220);
  sub_10017DF08(&qword_100E65408);
  type metadata accessor for Tips.ParameterOption();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_100C251B0;
  static Tips.ParameterOption.transient.getter();
  return Tips.Parameter.init<A>(_:_:_:_:)();
}

uint64_t sub_1009FAAA8()
{
  uint64_t v1 = sub_10017DF08(&qword_100E63520);
  sub_100179C0C();
  uint64_t v3 = v2;
  __chkstk_darwin(v4);
  sub_10011BFD8();
  uint64_t v5 = type metadata accessor for Tips.Rule();
  sub_100179C0C();
  uint64_t v7 = v6;
  __chkstk_darwin(v8);
  sub_1001626E0();
  uint64_t v11 = v10 - v9;
  if (qword_100E629A0 != -1) {
    swift_once();
  }
  uint64_t v12 = sub_1002102B0(v1, (uint64_t)qword_100F52220);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v0, v12, v1);
  Tips.Rule.init<A>(_:_:)();
  static Tips.RuleBuilder.buildExpression(_:)();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v11, v5);
  uint64_t v13 = static Tips.RuleBuilder.buildPartialBlock(first:)();
  swift_bridgeObjectRelease();
  return v13;
}

BOOL sub_1009FAC38(uint64_t a1, uint64_t a2)
{
  return sub_1009FA050(a1, a2);
}

uint64_t sub_1009FAC7C()
{
  return sub_1009FA100();
}

uint64_t sub_1009FACA4()
{
  return sub_1009FA1D0();
}

BOOL sub_1009FACB8(uint64_t *a1, uint64_t *a2)
{
  return sub_1009FAC38(*a1, *a2);
}

uint64_t sub_1009FACC4@<X0>(uint64_t *a1@<X8>)
{
  sub_10023AAD0();
  uint64_t result = Tip.id.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unint64_t sub_1009FAD08()
{
  unint64_t result = qword_100EA95C0;
  if (!qword_100EA95C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA95C0);
  }
  return result;
}

double sub_1009FAD54@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = v2[5];
  uint64_t v6 = v2[11];
  uint64_t v7 = v2[2];
  uint64_t v8 = v2[3];
  sub_10020D948((uint64_t)(v2 + 6), (uint64_t)v13);
  uint64_t v9 = v2[12];
  uint64_t v10 = v2[13];
  sub_10020D948((uint64_t)(v2 + 14), (uint64_t)v12);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  return sub_100AE2E60(v5, v6, v7, v8, a1, v13, v9, a2, v10, v12);
}

uint64_t sub_1009FAE20()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 48);
  swift_release();
  swift_unknownObjectRelease();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 112);
  return v0;
}

uint64_t sub_1009FAE70()
{
  sub_1009FAE20();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ListModule()
{
  return self;
}

void *sub_1009FAEC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, long long *a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v29 = a11;
  uint64_t v30 = a13;
  uint64_t v19 = sub_100170694(v28);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a11 - 8) + 32))(v19, a5, a11);
  unint64_t v20 = (void *)swift_allocObject();
  uint64_t v21 = sub_1000DF0C4((uint64_t)v28, v29);
  __n128 v22 = __chkstk_darwin(v21);
  (*(void (**)(__n128))(v23 + 16))(v22);
  Swift::String v24 = sub_1009FB050(a1, a2, a3, a4, a6, a7, a8, v20, a10, a12);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v28);
  return v24;
}

void *sub_1009FB050(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, long long *a7, void *a8, uint64_t a9, uint64_t a10)
{
  Swift::String v24 = &type metadata for ContentStatusBannerViewFactory;
  uint64_t v25 = &off_100E38A68;
  if (qword_100E62788 != -1) {
    swift_once();
  }
  uint64_t v18 = type metadata accessor for Logger();
  sub_1002102B0(v18, (uint64_t)qword_100F51DB0);
  uint64_t v19 = Logger.logObject.getter();
  os_log_type_t v20 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v19, v20))
  {
    uint64_t v21 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v21 = 0;
    _os_log_impl((void *)&_mh_execute_header, v19, v20, "Initializing List module", v21, 2u);
    swift_slowDealloc();
  }

  a8[2] = a1;
  a8[3] = a2;
  a8[4] = a3;
  a8[5] = a4;
  sub_1001262E4(&v23, (uint64_t)(a8 + 6));
  a8[11] = a5;
  a8[12] = a6;
  a8[13] = a10;
  sub_1001262E4(a7, (uint64_t)(a8 + 14));
  return a8;
}

uint64_t sub_1009FB1EC(char a1)
{
  if (a1)
  {
    if (a1 == 1)
    {
      sub_10017DF08(&qword_100EA7520);
      uint64_t v1 = swift_allocObject();
      *(_OWORD *)(v1 + 16) = xmmword_100C25ED0;
      uint64_t v2 = self;
      *(void *)(v1 + 32) = [v2 inches];
      *(void *)(v1 + 40) = 0x736568636E69;
      unint64_t v3 = 0xEB00000000737265;
      uint64_t v4 = 0x74656D696C6C696DLL;
      uint64_t v5 = &selRef_millimeters;
      unint64_t v6 = 0xE600000000000000;
    }
    else
    {
      sub_10017DF08(&qword_100EA7520);
      uint64_t v1 = swift_allocObject();
      *(_OWORD *)(v1 + 16) = xmmword_100C25ED0;
      uint64_t v2 = self;
      *(void *)(v1 + 32) = [v2 kilometers];
      *(void *)(v1 + 40) = 0x6574656D6F6C696BLL;
      unint64_t v3 = 0xE500000000000000;
      uint64_t v4 = 0x73656C696DLL;
      uint64_t v5 = &selRef_miles;
      unint64_t v6 = 0xEA00000000007372;
    }
  }
  else
  {
    sub_10017DF08(&qword_100EA7520);
    uint64_t v1 = swift_allocObject();
    *(_OWORD *)(v1 + 16) = xmmword_100C25ED0;
    uint64_t v2 = self;
    *(void *)(v1 + 32) = [v2 celsius];
    *(void *)(v1 + 40) = 0x737569736C6563;
    unint64_t v3 = 0xEA00000000007469;
    uint64_t v4 = 0x65686E6572686166;
    uint64_t v5 = &selRef_fahrenheit;
    unint64_t v6 = 0xE700000000000000;
  }
  *(void *)(v1 + 48) = v6;
  *(void *)(v1 + 56) = [v2 *v5];
  *(void *)(v1 + 64) = v4;
  *(void *)(v1 + 72) = v3;
  return v1;
}

uint64_t sub_1009FB3D0()
{
  type metadata accessor for Measurement();
  uint64_t result = type metadata accessor for Optional();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1009FB494(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a3[7];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for Measurement();
    swift_bridgeObjectRetain();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v10, 1, v11))
    {
      uint64_t v12 = type metadata accessor for Optional();
      memcpy(v9, v10, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v9, 0, 1, v11);
    }
    uint64_t v14 = a3[8];
    uint64_t v15 = a3[9];
    uint64_t v16 = (uint64_t *)((char *)v4 + v14);
    uint64_t v17 = (uint64_t *)((char *)a2 + v14);
    uint64_t v18 = v17[1];
    uint64_t v19 = *(uint64_t *)((char *)a2 + v15);
    *uint64_t v16 = *v17;
    v16[1] = v18;
    *(uint64_t *)((char *)v4 + v15) = v19;
    uint64_t v20 = a3[10];
    uint64_t v21 = (char *)v4 + v20;
    __n128 v22 = (char *)a2 + v20;
    swift_retain();
    swift_bridgeObjectRetain();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v22, 1, v11))
    {
      uint64_t v23 = type metadata accessor for Optional();
      memcpy(v21, v22, *(void *)(*(void *)(v23 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v21, v22, v11);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v21, 0, 1, v11);
    }
  }
  return v4;
}

uint64_t sub_1009FB6A0(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 28);
  uint64_t v5 = type metadata accessor for Measurement();
  if (!_s7Weather24LocationCompositionStateOwet_0(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v6 = a1 + *(int *)(a2 + 40);
  uint64_t result = _s7Weather24LocationCompositionStateOwet_0(v6, 1, v5);
  if (!result)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
    return v8(v6, v5);
  }
  return result;
}

void *sub_1009FB7B4(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[7];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for Measurement();
  swift_bridgeObjectRetain();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v10))
  {
    uint64_t v11 = type metadata accessor for Optional();
    memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v8, 0, 1, v10);
  }
  uint64_t v12 = a3[8];
  uint64_t v13 = a3[9];
  uint64_t v14 = (void *)((char *)a1 + v12);
  uint64_t v15 = (void *)((char *)a2 + v12);
  uint64_t v16 = v15[1];
  uint64_t v17 = *(void *)((char *)a2 + v13);
  *uint64_t v14 = *v15;
  v14[1] = v16;
  *(void *)((char *)a1 + v13) = v17;
  uint64_t v18 = a3[10];
  uint64_t v19 = (char *)a1 + v18;
  uint64_t v20 = (char *)a2 + v18;
  swift_retain();
  swift_bridgeObjectRetain();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v20, 1, v10))
  {
    uint64_t v21 = type metadata accessor for Optional();
    memcpy(v19, v20, *(void *)(*(void *)(v21 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v19, v20, v10);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v19, 0, 1, v10);
  }
  return a1;
}

void *sub_1009FB970(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[7];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for Measurement();
  int v10 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v7, 1, v9);
  int v11 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v9);
  if (v10)
  {
    if (!v11)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v12 = *(void *)(v9 - 8);
  if (v11)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v7, v9);
LABEL_6:
    uint64_t v13 = type metadata accessor for Optional();
    memcpy(v7, v8, *(void *)(*(void *)(v13 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 24))(v7, v8, v9);
LABEL_7:
  uint64_t v14 = a3[8];
  uint64_t v15 = (void *)((char *)a1 + v14);
  uint64_t v16 = (void *)((char *)a2 + v14);
  uint64_t v17 = v16[1];
  *uint64_t v15 = *v16;
  v15[1] = v17;
  swift_retain();
  swift_release();
  *(void *)((char *)a1 + a3[9]) = *(void *)((char *)a2 + a3[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v18 = a3[10];
  uint64_t v19 = (char *)a1 + v18;
  uint64_t v20 = (char *)a2 + v18;
  int v21 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a1 + v18, 1, v9);
  int v22 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v20, 1, v9);
  if (!v21)
  {
    uint64_t v23 = *(void *)(v9 - 8);
    if (!v22)
    {
      (*(void (**)(char *, char *, uint64_t))(v23 + 24))(v19, v20, v9);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v23 + 8))(v19, v9);
    goto LABEL_12;
  }
  if (v22)
  {
LABEL_12:
    uint64_t v24 = type metadata accessor for Optional();
    memcpy(v19, v20, *(void *)(*(void *)(v24 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v19, v20, v9);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v19, 0, 1, v9);
  return a1;
}

_OWORD *sub_1009FBC54(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[7];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for Measurement();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v9))
  {
    uint64_t v10 = type metadata accessor for Optional();
    memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v7, 0, 1, v9);
  }
  uint64_t v11 = a3[9];
  *(_OWORD *)((char *)a1 + a3[8]) = *(_OWORD *)((char *)a2 + a3[8]);
  *(void *)((char *)a1 + v11) = *(void *)((char *)a2 + v11);
  uint64_t v12 = a3[10];
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v14, 1, v9))
  {
    uint64_t v15 = type metadata accessor for Optional();
    memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v13, v14, v9);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v13, 0, 1, v9);
  }
  return a1;
}

void *sub_1009FBDEC(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[7];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for Measurement();
  int v11 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v10);
  int v12 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v10);
  if (v11)
  {
    if (!v12)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v13 = *(void *)(v10 - 8);
  if (v12)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v8, v10);
LABEL_6:
    uint64_t v14 = type metadata accessor for Optional();
    memcpy(v8, v9, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 40))(v8, v9, v10);
LABEL_7:
  *(_OWORD *)((char *)a1 + a3[8]) = *(_OWORD *)((char *)a2 + a3[8]);
  swift_release();
  *(void *)((char *)a1 + a3[9]) = *(void *)((char *)a2 + a3[9]);
  swift_bridgeObjectRelease();
  uint64_t v15 = a3[10];
  uint64_t v16 = (char *)a1 + v15;
  uint64_t v17 = (char *)a2 + v15;
  int v18 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a1 + v15, 1, v10);
  int v19 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v17, 1, v10);
  if (!v18)
  {
    uint64_t v20 = *(void *)(v10 - 8);
    if (!v19)
    {
      (*(void (**)(char *, char *, uint64_t))(v20 + 40))(v16, v17, v10);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v20 + 8))(v16, v10);
    goto LABEL_12;
  }
  if (v19)
  {
LABEL_12:
    uint64_t v21 = type metadata accessor for Optional();
    memcpy(v16, v17, *(void *)(*(void *)(v21 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v16, v17, v10);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v16, 0, 1, v10);
  return a1;
}

uint64_t sub_1009FC0AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1009FC0C0);
}

uint64_t sub_1009FC0C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF) {
    return sub_100163020(*(void *)(a1 + 8));
  }
  type metadata accessor for Measurement();
  uint64_t v7 = sub_1001A49B0();
  uint64_t v8 = a1 + *(int *)(a3 + 28);

  return _s7Weather24LocationCompositionStateOwet_0(v8, a2, v7);
}

uint64_t sub_1009FC144(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1009FC158);
}

uint64_t sub_1009FC158(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    type metadata accessor for Measurement();
    uint64_t v7 = sub_1001A49B0();
    uint64_t v8 = v5 + *(int *)(a4 + 28);
    return _s7Weather24LocationCompositionStateOwst_0(v8, a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for MeasurementEditorRowView()
{
  return sub_100109098();
}

uint64_t sub_1009FC1F8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1009FC23C(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for Measurement();
  uint64_t v42 = *(void *)(v3 - 8);
  uint64_t v43 = v3;
  __chkstk_darwin(v3);
  uint64_t v40 = (char *)&v38 - v4;
  uint64_t v5 = type metadata accessor for Optional();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v41 = *(void *)(TupleTypeMetadata2 - 8);
  __chkstk_darwin(TupleTypeMetadata2);
  uint64_t v8 = (char *)&v38 - v7;
  uint64_t v9 = *(void *)(v5 - 8);
  __chkstk_darwin(v10);
  uint64_t v44 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v38 - v13;
  __n128 v16 = __chkstk_darwin(v15);
  int v18 = (char *)&v38 - v17;
  int v19 = *(void (**)(char *, char *, uint64_t, __n128))(v9 + 16);
  v19((char *)&v38 - v17, (char *)v1 + *(int *)(a1 + 28), v5, v16);
  uint64_t v20 = *(int *)(a1 + 40);
  char v45 = v1;
  uint64_t v21 = (char *)v1 + v20;
  uint64_t v22 = v43;
  uint64_t v23 = TupleTypeMetadata2;
  ((void (*)(char *, char *, uint64_t))v19)(v14, v21, v5);
  uint64_t v24 = (uint64_t)&v8[*(int *)(TupleTypeMetadata2 + 48)];
  ((void (*)(char *, char *, uint64_t))v19)(v8, v18, v5);
  ((void (*)(uint64_t, char *, uint64_t))v19)(v24, v14, v5);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v22) != 1)
  {
    uint64_t v39 = v18;
    ((void (*)(char *, char *, uint64_t))v19)(v44, v8, v5);
    if (_s7Weather24LocationCompositionStateOwet_0(v24, 1, v22) != 1)
    {
      uint64_t v28 = v42;
      uint64_t v29 = v40;
      (*(void (**)(char *, uint64_t, uint64_t))(v42 + 32))(v40, v24, v22);
      swift_getWitnessTable();
      uint64_t v30 = v44;
      LODWORD(v41) = dispatch thunk of static Equatable.== infix(_:_:)();
      uint64_t v31 = *(void (**)(char *, uint64_t))(v28 + 8);
      v31(v29, v22);
      uint64_t v32 = *(void (**)(char *, uint64_t))(v9 + 8);
      v32(v14, v5);
      v32(v39, v5);
      v31(v30, v22);
      v32(v8, v5);
      if (v41) {
        goto LABEL_8;
      }
LABEL_9:
      uint64_t v46 = 42;
      unint64_t v47 = 0xE100000000000000;
      uint64_t v35 = *v45;
      uint64_t v34 = (void *)v45[1];
      swift_bridgeObjectRetain();
      v36._uint64_t countAndFlagsBits = v35;
      v36._uint64_t object = v34;
      String.append(_:)(v36);
      swift_bridgeObjectRelease();
      return v46;
    }
    uint64_t v27 = *(void (**)(char *, uint64_t))(v9 + 8);
    v27(v14, v5);
    v27(v39, v5);
    (*(void (**)(char *, uint64_t))(v42 + 8))(v44, v22);
LABEL_6:
    (*(void (**)(char *, uint64_t))(v41 + 8))(v8, v23);
    goto LABEL_9;
  }
  uint64_t v25 = v18;
  uint64_t v26 = *(void (**)(char *, uint64_t))(v9 + 8);
  v26(v14, v5);
  v26(v25, v5);
  if (_s7Weather24LocationCompositionStateOwet_0(v24, 1, v22) != 1) {
    goto LABEL_6;
  }
  v26(v8, v5);
LABEL_8:
  uint64_t v33 = *v45;
  swift_bridgeObjectRetain();
  return v33;
}

uint64_t sub_1009FC704(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for Measurement();
  uint64_t v4 = type metadata accessor for Optional();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v24 - v6;
  uint64_t v8 = *(void *)(v3 - 8);
  __n128 v10 = __chkstk_darwin(v9);
  uint64_t v12 = (char *)v24 - v11;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v5 + 16))(v7, v1 + *(int *)(a1 + 40), v4, v10);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v7, 1, v3) == 1)
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return 63;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v12, v7, v3);
    Measurement.value.getter();
    v24[0] = Double.description.getter();
    v24[1] = v14;
    v15._uint64_t countAndFlagsBits = 10272;
    v15._uint64_t object = (void *)0xE200000000000000;
    String.append(_:)(v15);
    __n128 v16 = (void *)Measurement.unit.getter();
    id v17 = [v16 symbol];

    uint64_t v18 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v20 = v19;

    v21._uint64_t countAndFlagsBits = v18;
    v21._uint64_t object = v20;
    String.append(_:)(v21);
    swift_bridgeObjectRelease();
    v22._uint64_t countAndFlagsBits = 41;
    v22._uint64_t object = (void *)0xE100000000000000;
    String.append(_:)(v22);
    uint64_t v13 = v24[0];
    (*(void (**)(char *, uint64_t))(v8 + 8))(v12, v3);
  }
  return v13;
}

void sub_1009FC960()
{
  sub_100162EA0();
  uint64_t v2 = v1;
  uint64_t v33 = *(void *)(v1 + 16);
  uint64_t v34 = v3;
  type metadata accessor for Measurement();
  uint64_t v32 = sub_1001A49B0();
  sub_10017C83C();
  uint64_t v5 = v4;
  sub_100165058();
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v25 - v7;
  uint64_t v9 = type metadata accessor for MeasurementEditorView();
  uint64_t v28 = v9;
  sub_100162880();
  sub_100165058();
  __chkstk_darwin(v10);
  uint64_t v30 = (char *)&v25 - v11;
  uint64_t v12 = sub_10018C6DC(&qword_100EA9718);
  uint64_t v29 = v12;
  uint64_t v13 = sub_1001246C8(qword_100EA9720, &qword_100EA9718);
  uint64_t v27 = v13;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v37 = v12;
  uint64_t v38 = v9;
  uint64_t v39 = v13;
  uint64_t v40 = WitnessTable;
  uint64_t v14 = type metadata accessor for NavigationLink();
  sub_10017C83C();
  uint64_t v31 = v15;
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v25 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v20 = __chkstk_darwin(v19);
  Swift::String v22 = (char *)&v25 - v21;
  uint64_t v25 = *(void *)v0;
  (*(void (**)(char *, char *, uint64_t, __n128))(v5 + 16))(v8, &v0[*(int *)(v2 + 40)], v32, v20);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v23 = v33;
  sub_1009FCC48();
  uint64_t v35 = v23;
  Swift::String v36 = v0;
  NavigationLink.init(destination:label:)();
  swift_getWitnessTable();
  sub_100121584((uint64_t)v18, v14, (uint64_t)v22);
  uint64_t v24 = *(void (**)(char *, uint64_t))(v31 + 8);
  v24(v18, v14);
  sub_100121584((uint64_t)v22, v14, v34);
  v24(v22, v14);
  sub_100162694();
}

void sub_1009FCC48()
{
  sub_100162EA0();
  uint64_t v27 = v0;
  uint64_t v28 = v1;
  uint64_t v25 = v2;
  uint64_t v26 = v3;
  uint64_t v5 = v4;
  uint64_t v24 = v6;
  uint64_t v8 = v7;
  uint64_t v9 = type metadata accessor for Measurement();
  uint64_t v10 = type metadata accessor for Optional();
  sub_10017C83C();
  uint64_t v12 = v11;
  sub_100165058();
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v23 - v14;
  uint64_t *v8 = swift_getKeyPath();
  sub_10017DF08(&qword_100E65310);
  swift_storeEnumTagMultiPayload();
  uint64_t v16 = (int *)type metadata accessor for MeasurementEditorView();
  uint64_t v17 = (uint64_t)v8 + v16[8];
  _s7Weather24LocationCompositionStateOwst_0(v17, 1, 1, v9);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v15, 1, 1, v9);
  sub_1009FD038((uint64_t)v15);
  uint64_t v18 = (uint64_t *)((char *)v8 + v16[7]);
  uint64_t v19 = v25;
  void *v18 = v24;
  v18[1] = v19;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 24))(v17, v5, v10);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v15, v5, v10);
  type metadata accessor for State();
  sub_100179DC0();
  sub_100162F0C();
  v20();
  sub_1009FD038((uint64_t)v15);
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v5, v10);
  *(uint64_t *)((char *)v8 + v16[9]) = v26;
  uint64_t v21 = (uint64_t *)((char *)v8 + v16[10]);
  uint64_t v22 = v28;
  *uint64_t v21 = v27;
  v21[1] = v22;
  sub_100162694();
}

__n128 sub_1009FCE40@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v2 = static VerticalAlignment.center.getter();
  sub_1009FCED4((uint64_t)&v11);
  char v3 = v12;
  uint64_t v4 = v13;
  uint64_t v5 = v14;
  char v6 = v15;
  char v7 = v17;
  uint64_t v8 = v18;
  __n128 result = v11;
  long long v10 = v16;
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 1;
  *(__n128 *)(a1 + 24) = result;
  *(unsigned char *)(a1 + 40) = v3;
  *(void *)(a1 + 48) = v4;
  *(void *)(a1 + 56) = v5;
  *(unsigned char *)(a1 + 64) = v6;
  *(_OWORD *)(a1 + 72) = v10;
  *(unsigned char *)(a1 + 88) = v7;
  *(void *)(a1 + 96) = v8;
  return result;
}

uint64_t sub_1009FCED4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for MeasurementEditorRowView();
  sub_1009FC23C(v2);
  sub_10014A85C();
  uint64_t v3 = Text.init<A>(_:)();
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  char v9 = v8 & 1;
  sub_1009FC704(v2);
  uint64_t v10 = Text.init<A>(_:)();
  uint64_t v12 = v11;
  char v14 = v13 & 1;
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v5;
  *(unsigned char *)(a1 + 16) = v9;
  *(void *)(a1 + 24) = v7;
  *(void *)(a1 + 32) = 0;
  *(unsigned char *)(a1 + 40) = 1;
  *(void *)(a1 + 48) = v10;
  *(void *)(a1 + 56) = v11;
  *(unsigned char *)(a1 + 64) = v13 & 1;
  *(void *)(a1 + 72) = v15;
  sub_100190CC4(v3, v5, v9);
  swift_bridgeObjectRetain();
  sub_100190CC4(v10, v12, v14);
  swift_bridgeObjectRetain();
  sub_100191924(v10, v12, v14);
  swift_bridgeObjectRelease();
  sub_100191924(v3, v5, v9);
  return swift_bridgeObjectRelease();
}

uint64_t type metadata accessor for MeasurementEditorView()
{
  return sub_100109098();
}

double sub_1009FD030@<D0>(uint64_t a1@<X8>)
{
  *(void *)&double result = sub_1009FCE40(a1).n128_u64[0];
  return result;
}

uint64_t sub_1009FD038(uint64_t a1)
{
  type metadata accessor for Measurement();
  uint64_t v2 = sub_1001A49B0();
  sub_10017C83C();
  uint64_t v4 = v3;
  sub_100165058();
  __n128 v6 = __chkstk_darwin(v5);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v4 + 16))((char *)&v9 - v7, a1, v2, v6);
  State.init(wrappedValue:)();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(a1, v2);
}

uint64_t sub_1009FD108@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for Measurement();
  uint64_t v3 = type metadata accessor for Optional();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  __n128 v6 = (char *)&v15 - v5;
  uint64_t v7 = *(void *)(v2 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v15 - v9;
  type metadata accessor for MeasurementEditorView();
  type metadata accessor for State();
  State.wrappedValue.getter();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v6, 1, v2) == 1)
  {
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    uint64_t v12 = 0;
    unint64_t v13 = 0xE000000000000000;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v10, v6, v2);
    Measurement.value.getter();
    uint64_t v12 = Double.description.getter();
    unint64_t v13 = v14;
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v2);
  }
  *a1 = v12;
  a1[1] = v13;
  return result;
}

uint64_t sub_1009FD2FC(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8 = type metadata accessor for MeasurementEditorView();
  uint64_t v44 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v43 = (char *)&v36 - v9;
  uint64_t v45 = a5;
  uint64_t v10 = type metadata accessor for Measurement();
  uint64_t v42 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v36 - v11;
  uint64_t v13 = type metadata accessor for Optional();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  long long v16 = (char *)&v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  __chkstk_darwin(v18);
  __n128 v20 = (char *)&v36 - v19;
  __chkstk_darwin(v21);
  uint64_t v25 = *a1;
  unint64_t v24 = a1[1];
  uint64_t v26 = HIBYTE(v24) & 0xF;
  if ((v24 & 0x2000000000000000) == 0) {
    uint64_t v26 = v25 & 0xFFFFFFFFFFFFLL;
  }
  if (!v26)
  {
    uint64_t v31 = (char *)&v36 - v22;
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)&v36 - v22, 1, 1, v10);
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v20, v31, v13);
    type metadata accessor for State();
    State.wrappedValue.setter();
    return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v31, v13);
  }
  uint64_t v40 = (char *)&v36 - v22;
  uint64_t v41 = v23;
  swift_bridgeObjectRetain();
  uint64_t result = sub_100234F68(v25, v24);
  if ((v28 & 1) == 0)
  {
    uint64_t v38 = result;
    uint64_t v29 = v8;
    uint64_t v39 = type metadata accessor for State();
    State.wrappedValue.getter();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v16, 1, v10))
    {
      uint64_t v37 = *(void (**)(char *, uint64_t))(v14 + 8);
      v37(v16, v13);
      uint64_t v30 = 0;
    }
    else
    {
      uint64_t v32 = v42;
      (*(void (**)(char *, char *, uint64_t))(v42 + 16))(v12, v16, v10);
      uint64_t v37 = *(void (**)(char *, uint64_t))(v14 + 8);
      v37(v16, v13);
      uint64_t v30 = Measurement.unit.getter();
      (*(void (**)(char *, uint64_t))(v32 + 8))(v12, v10);
    }
    uint64_t v33 = v44;
    uint64_t v34 = v43;
    (*(void (**)(char *, uint64_t, uint64_t))(v44 + 16))(v43, a4, v29);
    if (v30)
    {
      (*(void (**)(char *, uint64_t))(v33 + 8))(v34, v29);
    }
    else
    {
      uint64_t v46 = *(void *)&v34[*(int *)(v29 + 36)];
      swift_getTupleTypeMetadata2();
      type metadata accessor for Array();
      swift_getWitnessTable();
      uint64_t result = Collection.first.getter();
      if (!v47)
      {
        __break(1u);
        return result;
      }
      (*(void (**)(char *, uint64_t))(v33 + 8))(v34, v29);
      swift_bridgeObjectRelease();
    }
    uint64_t v35 = v41;
    Measurement.init(value:unit:)();
    _s7Weather24LocationCompositionStateOwst_0(v35, 0, 1, v10);
    (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v40, v35, v13);
    State.wrappedValue.setter();
    return ((uint64_t (*)(uint64_t, uint64_t))v37)(v35, v13);
  }
  return result;
}

void sub_1009FD800()
{
  sub_100162EA0();
  uint64_t v22 = v1;
  uint64_t v23 = v2;
  uint64_t v20 = v0;
  uint64_t v21 = v3;
  uint64_t v5 = v4;
  sub_10017C83C();
  uint64_t v7 = v6;
  uint64_t v9 = *(void *)(v8 + 64);
  __n128 v11 = __chkstk_darwin(v10);
  uint64_t v19 = *(void (**)(char *, __n128))(v7 + 16);
  v19((char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v11);
  type metadata accessor for MainActor();
  uint64_t v12 = static MainActor.shared.getter();
  uint64_t v18 = ((*(unsigned __int8 *)(v7 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80)) + v9;
  uint64_t v13 = (void *)swift_allocObject();
  long long v13[2] = v12;
  void v13[3] = &protocol witness table for MainActor;
  uint64_t v14 = *(void *)(v5 + 16);
  v13[4] = v14;
  uint64_t v15 = *(void (**)(void))(v7 + 32);
  sub_100189624();
  v15();
  ((void (*)(char *, uint64_t, uint64_t))v19)((char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v20, v5);
  uint64_t v16 = static MainActor.shared.getter();
  uint64_t v17 = (void *)swift_allocObject();
  v17[2] = v16;
  void v17[3] = &protocol witness table for MainActor;
  v17[4] = v14;
  sub_100189624();
  v15();
  Binding.init(get:set:)();
  sub_100162694();
}

void sub_1009FD984(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  v18[0] = a3;
  uint64_t v5 = type metadata accessor for Measurement();
  uint64_t v6 = type metadata accessor for Optional();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v18 - v8;
  uint64_t v10 = *(void *)(v5 - 8);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)v18 - v12;
  uint64_t v14 = type metadata accessor for MeasurementEditorView();
  type metadata accessor for State();
  State.wrappedValue.getter();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v5) == 1)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
LABEL_5:
    unint64_t v15 = 0xE700000000000000;
    uint64_t v16 = 0x6E776F6E6B6E55;
    goto LABEL_6;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v13, v9, v5);
  uint64_t v19 = *(void *)(a1 + *(int *)(v14 + 36));
  __chkstk_darwin(v19);
  v18[-2] = a2;
  v18[-1] = v13;
  swift_bridgeObjectRetain();
  swift_getTupleTypeMetadata2();
  type metadata accessor for Array();
  swift_getWitnessTable();
  Sequence.first(where:)();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v5);
  if (!v20) {
    goto LABEL_5;
  }
  uint64_t v16 = v21;
  unint64_t v15 = v22;

LABEL_6:
  uint64_t v17 = v18[0];
  *(void *)v18[0] = v16;
  *(void *)(v17 + 8) = v15;
}

uint64_t sub_1009FDC4C()
{
  sub_1000C83A0();
  type metadata accessor for Measurement();
  uint64_t v0 = (void *)Measurement.unit.getter();
  char v1 = static NSObject.== infix(_:_:)();

  return v1 & 1;
}

uint64_t sub_1009FDCCC(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8 = type metadata accessor for Measurement();
  uint64_t v9 = type metadata accessor for Optional();
  uint64_t v29 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  char v28 = (char *)v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)v27 - v12;
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)v27 - v15;
  uint64_t v18 = *a1;
  uint64_t v17 = a1[1];
  uint64_t v19 = type metadata accessor for MeasurementEditorView();
  uint64_t v33 = *(void *)(a4 + *(int *)(v19 + 36));
  uint64_t v30 = a5;
  uint64_t v31 = v18;
  uint64_t v32 = v17;
  swift_bridgeObjectRetain();
  swift_getTupleTypeMetadata2();
  type metadata accessor for Array();
  swift_getWitnessTable();
  Sequence.first(where:)();
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v21 = v34;
  if (v34)
  {
    swift_bridgeObjectRelease();
    uint64_t v22 = a4 + *(int *)(v19 + 44);
    type metadata accessor for State();
    v27[1] = v22;
    State.wrappedValue.getter();
    if (!_s7Weather24LocationCompositionStateOwet_0((uint64_t)v13, 1, v8)) {
      Measurement.value.getter();
    }
    uint64_t v23 = v29;
    uint64_t v24 = v8;
    uint64_t v25 = *(void (**)(char *, uint64_t))(v29 + 8);
    v25(v13, v9);
    id v26 = v21;
    Measurement.init(value:unit:)();
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v16, 0, 1, v24);
    (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v28, v16, v9);
    State.wrappedValue.setter();

    return ((uint64_t (*)(char *, uint64_t))v25)(v16, v9);
  }
  return result;
}

uint64_t sub_1009FDF98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a1 + 8) == a2 && *(void *)(a1 + 16) == a3) {
    return 1;
  }
  else {
    return _stringCompareWithSmolCheck(_:_:expecting:)() & 1;
  }
}

void sub_1009FDFF0()
{
  sub_100162EA0();
  uint64_t v73 = v1;
  uint64_t v74 = v0;
  uint64_t v80 = v2;
  uint64_t v3 = v1;
  sub_10017C83C();
  uint64_t v76 = v4;
  uint64_t v78 = *(void *)(v5 + 64);
  __chkstk_darwin(v6);
  int v75 = (char *)&v59 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10017DF08(&qword_100E65388);
  uint64_t v67 = v8;
  sub_10017C83C();
  uint64_t v79 = v9;
  __chkstk_darwin(v10);
  uint64_t v77 = (char *)&v59 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10018C6DC(&qword_100EA97A8);
  uint64_t v60 = *(void *)(v3 + 16);
  uint64_t v12 = v60;
  swift_getTupleTypeMetadata2();
  uint64_t v13 = type metadata accessor for Array();
  uint64_t v14 = sub_10018C6DC(&qword_100EA97B0);
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v83 = (void *)v13;
  id v84 = &type metadata for String;
  uint64_t v85 = (void *)v14;
  uint64_t v86 = (void *)WitnessTable;
  uint64_t v87 = &protocol witness table for String;
  uint64_t v16 = type metadata accessor for ForEach();
  unint64_t v89 = sub_100A00ECC();
  uint64_t v17 = swift_getWitnessTable();
  uint64_t v83 = &type metadata for Text;
  id v84 = &type metadata for String;
  uint64_t v85 = (void *)v16;
  uint64_t v86 = &protocol witness table for Text;
  uint64_t v87 = &protocol witness table for String;
  uint64_t v88 = v17;
  type metadata accessor for Picker();
  swift_getTupleTypeMetadata2();
  uint64_t v18 = type metadata accessor for TupleView();
  uint64_t v19 = swift_getWitnessTable();
  uint64_t v83 = &type metadata for Never;
  id v84 = (void *)v18;
  uint64_t v85 = &protocol witness table for Never;
  uint64_t v86 = (void *)v19;
  uint64_t v20 = type metadata accessor for List();
  uint64_t v21 = type metadata accessor for InlinePickerStyle();
  uint64_t v22 = swift_getWitnessTable();
  uint64_t v83 = (void *)v20;
  id v84 = (void *)v21;
  uint64_t v85 = (void *)v22;
  uint64_t v86 = &protocol witness table for InlinePickerStyle;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v83 = (void *)v20;
  id v84 = (void *)v21;
  uint64_t v85 = (void *)v22;
  uint64_t v86 = &protocol witness table for InlinePickerStyle;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v23 = type metadata accessor for VStack();
  sub_10017C83C();
  uint64_t v69 = v24;
  sub_100165058();
  __chkstk_darwin(v25);
  uint64_t v26 = swift_getWitnessTable();
  unint64_t v27 = sub_10014A85C();
  uint64_t v83 = (void *)v23;
  id v84 = &type metadata for String;
  uint64_t v85 = (void *)v26;
  uint64_t v86 = (void *)v27;
  uint64_t v28 = swift_getOpaqueTypeMetadata2();
  uint64_t v68 = v28;
  sub_10017C83C();
  uint64_t v72 = v29;
  sub_100165058();
  __chkstk_darwin(v30);
  uint64_t v59 = (char *)&v59 - v31;
  uint64_t v83 = (void *)v23;
  id v84 = &type metadata for String;
  uint64_t v85 = (void *)v26;
  uint64_t v86 = (void *)v27;
  uint64_t v32 = swift_getOpaqueTypeConformance2();
  uint64_t v66 = v32;
  uint64_t v65 = sub_1001246C8(&qword_100E653A8, &qword_100E65388);
  uint64_t v83 = (void *)v28;
  id v84 = (void *)v8;
  uint64_t v85 = (void *)v32;
  uint64_t v86 = (void *)v65;
  uint64_t v70 = &opaque type descriptor for <<opaque return type of View.navigationBarItems<A>(trailing:)>>;
  uint64_t v33 = swift_getOpaqueTypeMetadata2();
  sub_10017C83C();
  uint64_t v71 = v34;
  __chkstk_darwin(v35);
  uint64_t v61 = (char *)&v59 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v37);
  uint64_t v64 = (uint64_t)&v59 - v38;
  uint64_t v81 = v12;
  uint64_t v39 = v74;
  uint64_t v82 = v74;
  j___s7SwiftUI19HorizontalAlignmentV6centerACvgZ();
  VStack.init(alignment:spacing:content:)();
  uint64_t v40 = v73;
  uint64_t v41 = (void *)(v39 + *(int *)(v73 + 28));
  uint64_t v43 = (void *)*v41;
  uint64_t v42 = (void *)v41[1];
  uint64_t v83 = v43;
  id v84 = v42;
  View.navigationTitle<A>(_:)();
  sub_100162F0C();
  v44();
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v45 = v75;
  uint64_t v46 = v76;
  (*(void (**)(char *, uint64_t, uint64_t))(v76 + 16))(v75, v39, v40);
  uint64_t v47 = v46;
  unint64_t v48 = (*(unsigned __int8 *)(v46 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v46 + 80);
  uint64_t v49 = swift_allocObject();
  *(void *)(v49 + 16) = v60;
  (*(void (**)(unint64_t, char *, uint64_t))(v47 + 32))(v49 + v48, v45, v40);
  Button<>.init(_:action:)();
  uint64_t v50 = (uint64_t)v61;
  uint64_t v51 = (void *)v68;
  uint64_t v52 = (void *)v67;
  uint64_t v53 = (void *)v66;
  uint64_t v54 = (void *)v65;
  View.navigationBarItems<A>(trailing:)();
  sub_100162F0C();
  v55();
  sub_10017E3CC();
  v56();
  uint64_t v83 = v51;
  id v84 = v52;
  uint64_t v85 = v53;
  uint64_t v86 = v54;
  swift_getOpaqueTypeConformance2();
  uint64_t v57 = v64;
  sub_100121584(v50, v33, v64);
  uint64_t v58 = *(void (**)(uint64_t, uint64_t))(v71 + 8);
  v58(v50, v33);
  sub_100121584(v57, v33, v80);
  v58(v57, v33);
  sub_100162694();
}

uint64_t sub_1009FE750@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v31 = a2;
  uint64_t v32 = a1;
  uint64_t v34 = a3;
  uint64_t v3 = type metadata accessor for InlinePickerStyle();
  uint64_t v28 = v3;
  uint64_t v33 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10018C6DC(&qword_100EA97A8);
  swift_getTupleTypeMetadata2();
  uint64_t v6 = type metadata accessor for Array();
  uint64_t v7 = sub_10018C6DC(&qword_100EA97B0);
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v37 = (void *)v6;
  uint64_t v38 = &type metadata for String;
  uint64_t v39 = (void *)v7;
  uint64_t v40 = (void *)WitnessTable;
  uint64_t v41 = &protocol witness table for String;
  uint64_t v9 = type metadata accessor for ForEach();
  unint64_t v43 = sub_100A00ECC();
  uint64_t v10 = swift_getWitnessTable();
  uint64_t v37 = &type metadata for Text;
  uint64_t v38 = &type metadata for String;
  uint64_t v39 = (void *)v9;
  uint64_t v40 = &protocol witness table for Text;
  uint64_t v41 = &protocol witness table for String;
  uint64_t v42 = v10;
  type metadata accessor for Picker();
  swift_getTupleTypeMetadata2();
  uint64_t v11 = type metadata accessor for TupleView();
  uint64_t v12 = swift_getWitnessTable();
  uint64_t v37 = &type metadata for Never;
  uint64_t v38 = (void *)v11;
  uint64_t v39 = &protocol witness table for Never;
  uint64_t v40 = (void *)v12;
  uint64_t v13 = type metadata accessor for List();
  uint64_t v30 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v27 - v14;
  uint64_t v16 = swift_getWitnessTable();
  uint64_t v37 = (void *)v13;
  uint64_t v38 = (void *)v3;
  uint64_t v39 = (void *)v16;
  uint64_t v40 = &protocol witness table for InlinePickerStyle;
  uint64_t v29 = &opaque type descriptor for <<opaque return type of View.pickerStyle<A>(_:)>>;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v18 = *(void *)(OpaqueTypeMetadata2 - 8);
  __chkstk_darwin(OpaqueTypeMetadata2);
  uint64_t v20 = (char *)&v27 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  uint64_t v23 = (char *)&v27 - v22;
  uint64_t v35 = v31;
  uint64_t v36 = v32;
  List<>.init(content:)();
  InlinePickerStyle.init()();
  uint64_t v24 = (void *)v28;
  View.pickerStyle<A>(_:)();
  (*(void (**)(char *, void *))(v33 + 8))(v5, v24);
  (*(void (**)(char *, uint64_t))(v30 + 8))(v15, v13);
  uint64_t v37 = (void *)v13;
  uint64_t v38 = v24;
  uint64_t v39 = (void *)v16;
  uint64_t v40 = &protocol witness table for InlinePickerStyle;
  swift_getOpaqueTypeConformance2();
  sub_100121584((uint64_t)v20, OpaqueTypeMetadata2, (uint64_t)v23);
  uint64_t v25 = *(void (**)(char *, uint64_t))(v18 + 8);
  v25(v20, OpaqueTypeMetadata2);
  sub_100121584((uint64_t)v23, OpaqueTypeMetadata2, v34);
  return ((uint64_t (*)(char *, uint64_t))v25)(v23, OpaqueTypeMetadata2);
}

uint64_t sub_1009FEBD8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v33 = a1;
  uint64_t v39 = a3;
  swift_getTupleTypeMetadata2();
  type metadata accessor for Array();
  sub_10018C6DC(&qword_100EA97B0);
  swift_getWitnessTable();
  uint64_t v37 = type metadata accessor for ForEach();
  unint64_t v55 = sub_100A00ECC();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v49 = &type metadata for Text;
  uint64_t v50 = (char *)&type metadata for String;
  uint64_t v51 = v37;
  uint64_t v52 = &protocol witness table for Text;
  uint64_t v53 = &protocol witness table for String;
  uint64_t v54 = WitnessTable;
  uint64_t v5 = type metadata accessor for Picker();
  uint64_t v38 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v35 = (uint64_t)&v33 - v9;
  uint64_t v10 = sub_10017DF08(&qword_100EA97A8);
  uint64_t v40 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v34 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v33 - v13;
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v49 = (void *)Text.init(_:tableName:bundle:comment:)();
  uint64_t v50 = v15;
  LOBYTE(v51) = v16 & 1;
  uint64_t v52 = v17;
  uint64_t v43 = a2;
  uint64_t v44 = a1;
  sub_10017DF08(&qword_100EA97F0);
  uint64_t v18 = sub_10018C6DC(&qword_100EA97F8);
  uint64_t v19 = sub_1001246C8(&qword_100EA9800, &qword_100EA97F8);
  uint64_t v47 = v18;
  uint64_t v48 = v19;
  swift_getOpaqueTypeConformance2();
  uint64_t v20 = v14;
  Section<>.init(header:content:)();
  LocalizedStringKey.init(stringLiteral:)();
  type metadata accessor for MeasurementEditorView();
  uint64_t v21 = v33;
  sub_1009FD800();
  uint64_t v49 = v22;
  uint64_t v50 = v23;
  uint64_t v51 = v24;
  uint64_t v52 = v25;
  uint64_t v41 = a2;
  uint64_t v42 = v21;
  Picker<>.init(_:selection:content:)();
  uint64_t v26 = swift_getWitnessTable();
  uint64_t v27 = v35;
  sub_100121584((uint64_t)v7, v5, v35);
  uint64_t v28 = v38;
  uint64_t v29 = *(void (**)(char *, uint64_t))(v38 + 8);
  v29(v7, v5);
  uint64_t v30 = v34;
  (*(void (**)(char *, char *, uint64_t))(v40 + 16))(v34, v20, v10);
  uint64_t v49 = v30;
  (*(void (**)(char *, uint64_t, uint64_t))(v28 + 16))(v7, v27, v5);
  uint64_t v50 = v7;
  uint64_t v47 = v10;
  uint64_t v48 = v5;
  unint64_t v45 = sub_100A01218();
  uint64_t v46 = v26;
  sub_1006E9080();
  v29((char *)v27, v5);
  uint64_t v31 = *(void (**)(char *, uint64_t))(v40 + 8);
  v31(v20, v10);
  v29(v7, v5);
  return ((uint64_t (*)(char *, uint64_t))v31)(v30, v10);
}

uint64_t sub_1009FF188()
{
  uint64_t v0 = sub_10017DF08(&qword_100EA97F8);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  LocalizedStringKey.init(stringLiteral:)();
  type metadata accessor for MeasurementEditorView();
  sub_1009FD800();
  TextField<>.init(_:text:onEditingChanged:onCommit:)();
  sub_1001246C8(&qword_100EA9800, &qword_100EA97F8);
  View.keyboardType(_:)();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_1009FF370@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v17 = a3;
  swift_getTupleTypeMetadata2();
  uint64_t v5 = type metadata accessor for Array();
  uint64_t v16 = sub_10018C6DC(&qword_100EA97B0);
  uint64_t v20 = v5;
  uint64_t v21 = &type metadata for String;
  uint64_t v22 = v16;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v24 = &protocol witness table for String;
  uint64_t v6 = type metadata accessor for ForEach();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v16 - v11;
  uint64_t v20 = *(void *)(a1 + *(int *)(type metadata accessor for MeasurementEditorView() + 36));
  uint64_t v18 = a2;
  swift_getKeyPath();
  *(void *)(swift_allocObject() + 16) = a2;
  unint64_t v13 = sub_100A00ECC();
  swift_bridgeObjectRetain();
  ForEach<>.init(_:id:content:)();
  unint64_t v19 = v13;
  swift_getWitnessTable();
  sub_100121584((uint64_t)v9, v6, (uint64_t)v12);
  uint64_t v14 = *(void (**)(char *, uint64_t))(v7 + 8);
  v14(v9, v6);
  sub_100121584((uint64_t)v12, v6, v17);
  return ((uint64_t (*)(char *, uint64_t))v14)(v12, v6);
}

uint64_t sub_1009FF5F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for LocalizedStringKey.StringInterpolation();
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v5 = *(void **)(a1 + 16);
  LocalizedStringKey.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v7._uint64_t countAndFlagsBits = 0;
  v7._uint64_t object = (void *)0xE000000000000000;
  LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v7);
  v8._uint64_t countAndFlagsBits = v6;
  v8._uint64_t object = v5;
  LocalizedStringKey.StringInterpolation.appendInterpolation(_:)(v8);
  v9._uint64_t countAndFlagsBits = 0;
  v9._uint64_t object = (void *)0xE000000000000000;
  LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v9);
  LocalizedStringKey.init(stringInterpolation:)();
  *(void *)a2 = Text.init(_:tableName:bundle:comment:)();
  *(void *)(a2 + 8) = v10;
  *(unsigned char *)(a2 + 16) = v11 & 1;
  *(void *)(a2 + 24) = v12;
  *(void *)(a2 + 32) = v6;
  *(void *)(a2 + 40) = v5;
  *(void *)(a2 + 48) = v6;
  *(void *)(a2 + 56) = v5;
  return swift_bridgeObjectRetain_n();
}

uint64_t sub_1009FF6F8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for PresentationMode();
  __chkstk_darwin(v2 - 8);
  uint64_t v3 = sub_10017DF08(&qword_100E669A0);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for Measurement();
  uint64_t v6 = type metadata accessor for Optional();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  Swift::String v9 = (char *)&v12 - v8;
  uint64_t v10 = *(void (**)(char *))(a1 + *(int *)(type metadata accessor for MeasurementEditorView() + 40));
  type metadata accessor for State();
  State.wrappedValue.getter();
  v10(v9);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  sub_1005D1E94();
  Binding.wrappedValue.getter();
  PresentationMode.dismiss()();
  Binding.wrappedValue.setter();
  return sub_10017DF4C((uint64_t)v5, &qword_100E669A0);
}

uint64_t sub_1009FF8FC()
{
  sub_1002307EC();
  uint64_t v1 = v0;
  if (v2 <= 0x3F)
  {
    type metadata accessor for Measurement();
    uint64_t v1 = type metadata accessor for Optional();
    if (v3 <= 0x3F)
    {
      uint64_t v1 = type metadata accessor for State();
      if (v4 <= 0x3F)
      {
        swift_initStructMetadata();
        return 0;
      }
    }
  }
  return v1;
}

uint64_t *sub_1009FFA4C(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    sub_10017DF08(&qword_100E65310);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *a1 = *a2;
    if (EnumCaseMultiPayload == 1)
    {
      a1[1] = a2[1];
      swift_retain();
      swift_retain();
      uint64_t v8 = *(int *)(sub_10017DF08(&qword_100E669A0) + 32);
      Swift::String v9 = (char *)a1 + v8;
      uint64_t v10 = (char *)a2 + v8;
      uint64_t v11 = type metadata accessor for PresentationMode();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    }
    else
    {
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v13 = a3[7];
    uint64_t v14 = a3[8];
    uint64_t v15 = (uint64_t *)((char *)a1 + v13);
    uint64_t v16 = (uint64_t *)((char *)a2 + v13);
    uint64_t v17 = v16[1];
    *uint64_t v15 = *v16;
    v15[1] = v17;
    uint64_t v18 = (char *)a1 + v14;
    unint64_t v19 = (char *)a2 + v14;
    uint64_t v20 = type metadata accessor for Measurement();
    swift_bridgeObjectRetain();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v19, 1, v20))
    {
      uint64_t v21 = type metadata accessor for Optional();
      memcpy(v18, v19, *(void *)(*(void *)(v21 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v18, 0, 1, v20);
    }
    uint64_t v22 = a3[10];
    *(uint64_t *)((char *)a1 + a3[9]) = *(uint64_t *)((char *)a2 + a3[9]);
    uint64_t v23 = (uint64_t *)((char *)a1 + v22);
    uint64_t v24 = (uint64_t *)((char *)a2 + v22);
    uint64_t v25 = v24[1];
    *uint64_t v23 = *v24;
    v23[1] = v25;
    uint64_t v26 = a3[11];
    uint64_t v27 = (char *)a1 + v26;
    uint64_t v28 = (char *)a2 + v26;
    swift_bridgeObjectRetain();
    swift_retain();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v28, 1, v20))
    {
      uint64_t v29 = type metadata accessor for Optional();
      memcpy(v27, v28, *(void *)(*(void *)(v29 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16))(v27, v28, v20);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v27, 0, 1, v20);
    }
    type metadata accessor for Optional();
    uint64_t v30 = type metadata accessor for State();
    *(void *)&v27[*(int *)(v30 + 28)] = *(void *)&v28[*(int *)(v30 + 28)];
  }
  swift_retain();
  return a1;
}

uint64_t sub_1009FFD38(uint64_t a1, uint64_t a2)
{
  sub_10017DF08(&qword_100E65310);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  swift_release();
  if (EnumCaseMultiPayload == 1)
  {
    swift_release();
    uint64_t v5 = a1 + *(int *)(sub_10017DF08(&qword_100E669A0) + 32);
    uint64_t v6 = type metadata accessor for PresentationMode();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  }
  swift_bridgeObjectRelease();
  uint64_t v7 = a1 + *(int *)(a2 + 32);
  uint64_t v8 = type metadata accessor for Measurement();
  if (!_s7Weather24LocationCompositionStateOwet_0(v7, 1, v8)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  }
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v9 = a1 + *(int *)(a2 + 44);
  if (!_s7Weather24LocationCompositionStateOwet_0(v9, 1, v8)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v9, v8);
  }
  type metadata accessor for Optional();
  type metadata accessor for State();

  return swift_release();
}

void *sub_1009FFEE8(void *a1, void *a2, int *a3)
{
  sub_10017DF08(&qword_100E65310);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  *a1 = *a2;
  if (EnumCaseMultiPayload == 1)
  {
    a1[1] = a2[1];
    swift_retain();
    swift_retain();
    uint64_t v7 = *(int *)(sub_10017DF08(&qword_100E669A0) + 32);
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = type metadata accessor for PresentationMode();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  }
  else
  {
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v11 = a3[7];
  uint64_t v12 = a3[8];
  uint64_t v13 = (void *)((char *)a1 + v11);
  uint64_t v14 = (void *)((char *)a2 + v11);
  uint64_t v15 = v14[1];
  void *v13 = *v14;
  v13[1] = v15;
  uint64_t v16 = (char *)a1 + v12;
  uint64_t v17 = (char *)a2 + v12;
  uint64_t v18 = type metadata accessor for Measurement();
  swift_bridgeObjectRetain();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v17, 1, v18))
  {
    uint64_t v19 = type metadata accessor for Optional();
    memcpy(v16, v17, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v16, 0, 1, v18);
  }
  uint64_t v20 = a3[10];
  *(void *)((char *)a1 + a3[9]) = *(void *)((char *)a2 + a3[9]);
  uint64_t v21 = (void *)((char *)a1 + v20);
  uint64_t v22 = (void *)((char *)a2 + v20);
  uint64_t v23 = v22[1];
  *uint64_t v21 = *v22;
  v21[1] = v23;
  uint64_t v24 = a3[11];
  uint64_t v25 = (char *)a1 + v24;
  uint64_t v26 = (char *)a2 + v24;
  swift_bridgeObjectRetain();
  swift_retain();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v26, 1, v18))
  {
    uint64_t v27 = type metadata accessor for Optional();
    memcpy(v25, v26, *(void *)(*(void *)(v27 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16))(v25, v26, v18);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v25, 0, 1, v18);
  }
  type metadata accessor for Optional();
  uint64_t v28 = type metadata accessor for State();
  *(void *)&v25[*(int *)(v28 + 28)] = *(void *)&v26[*(int *)(v28 + 28)];
  swift_retain();
  return a1;
}

void *sub_100A00188(void *a1, void *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_10017DF4C((uint64_t)a1, &qword_100E65310);
    sub_10017DF08(&qword_100E65310);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *a1 = *a2;
    if (EnumCaseMultiPayload == 1)
    {
      a1[1] = a2[1];
      swift_retain();
      swift_retain();
      uint64_t v7 = *(int *)(sub_10017DF08(&qword_100E669A0) + 32);
      uint64_t v8 = (char *)a1 + v7;
      uint64_t v9 = (char *)a2 + v7;
      uint64_t v10 = type metadata accessor for PresentationMode();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    }
    else
    {
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v11 = a3[7];
  uint64_t v12 = (void *)((char *)a1 + v11);
  uint64_t v13 = (void *)((char *)a2 + v11);
  void *v12 = *v13;
  v12[1] = v13[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v14 = a3[8];
  uint64_t v15 = (char *)a1 + v14;
  uint64_t v16 = (char *)a2 + v14;
  uint64_t v17 = type metadata accessor for Measurement();
  int v18 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v15, 1, v17);
  int v19 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v16, 1, v17);
  if (v18)
  {
    if (!v19)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v15, 0, 1, v17);
      goto LABEL_12;
    }
    goto LABEL_11;
  }
  uint64_t v20 = *(void *)(v17 - 8);
  if (v19)
  {
    (*(void (**)(char *, uint64_t))(v20 + 8))(v15, v17);
LABEL_11:
    uint64_t v21 = type metadata accessor for Optional();
    memcpy(v15, v16, *(void *)(*(void *)(v21 - 8) + 64));
    goto LABEL_12;
  }
  (*(void (**)(char *, char *, uint64_t))(v20 + 24))(v15, v16, v17);
LABEL_12:
  *(void *)((char *)a1 + a3[9]) = *(void *)((char *)a2 + a3[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v22 = a3[10];
  uint64_t v23 = (void *)((char *)a1 + v22);
  uint64_t v24 = (void *)((char *)a2 + v22);
  uint64_t v25 = v24[1];
  *uint64_t v23 = *v24;
  v23[1] = v25;
  swift_retain();
  swift_release();
  uint64_t v26 = a3[11];
  uint64_t v27 = (char *)a1 + v26;
  uint64_t v28 = (char *)a2 + v26;
  int v29 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a1 + v26, 1, v17);
  int v30 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v28, 1, v17);
  if (!v29)
  {
    uint64_t v31 = *(void *)(v17 - 8);
    if (!v30)
    {
      (*(void (**)(char *, char *, uint64_t))(v31 + 24))(v27, v28, v17);
      goto LABEL_18;
    }
    (*(void (**)(char *, uint64_t))(v31 + 8))(v27, v17);
    goto LABEL_17;
  }
  if (v30)
  {
LABEL_17:
    uint64_t v32 = type metadata accessor for Optional();
    memcpy(v27, v28, *(void *)(*(void *)(v32 - 8) + 64));
    goto LABEL_18;
  }
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16))(v27, v28, v17);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v27, 0, 1, v17);
LABEL_18:
  type metadata accessor for Optional();
  uint64_t v33 = type metadata accessor for State();
  *(void *)&v27[*(int *)(v33 + 28)] = *(void *)&v28[*(int *)(v33 + 28)];
  swift_retain();
  swift_release();
  return a1;
}

void *sub_100A00578(void *a1, void *a2, int *a3)
{
  uint64_t v6 = sub_10017DF08(&qword_100E65310);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = *(int *)(sub_10017DF08(&qword_100E669A0) + 32);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for PresentationMode();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v12 = a3[8];
  *(_OWORD *)((char *)a1 + a3[7]) = *(_OWORD *)((char *)a2 + a3[7]);
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  uint64_t v15 = type metadata accessor for Measurement();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v14, 1, v15))
  {
    uint64_t v16 = type metadata accessor for Optional();
    memcpy(v13, v14, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v13, 0, 1, v15);
  }
  uint64_t v17 = a3[10];
  *(void *)((char *)a1 + a3[9]) = *(void *)((char *)a2 + a3[9]);
  *(_OWORD *)((char *)a1 + v17) = *(_OWORD *)((char *)a2 + v17);
  uint64_t v18 = a3[11];
  int v19 = (char *)a1 + v18;
  uint64_t v20 = (char *)a2 + v18;
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v20, 1, v15))
  {
    uint64_t v21 = type metadata accessor for Optional();
    memcpy(v19, v20, *(void *)(*(void *)(v21 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(v19, v20, v15);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v19, 0, 1, v15);
  }
  type metadata accessor for Optional();
  uint64_t v22 = type metadata accessor for State();
  *(void *)&v19[*(int *)(v22 + 28)] = *(void *)&v20[*(int *)(v22 + 28)];
  return a1;
}

void *sub_100A007E8(void *a1, void *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_10017DF4C((uint64_t)a1, &qword_100E65310);
    uint64_t v6 = sub_10017DF08(&qword_100E65310);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = a2[1];
      *a1 = *a2;
      a1[1] = v7;
      uint64_t v8 = *(int *)(sub_10017DF08(&qword_100E669A0) + 32);
      uint64_t v9 = (char *)a1 + v8;
      uint64_t v10 = (char *)a2 + v8;
      uint64_t v11 = type metadata accessor for PresentationMode();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
  }
  uint64_t v12 = a3[7];
  uint64_t v13 = (void *)((char *)a1 + v12);
  uint64_t v14 = (void *)((char *)a2 + v12);
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  void *v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  uint64_t v17 = a3[8];
  uint64_t v18 = (char *)a1 + v17;
  int v19 = (char *)a2 + v17;
  uint64_t v20 = type metadata accessor for Measurement();
  int v21 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v18, 1, v20);
  int v22 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v19, 1, v20);
  if (v21)
  {
    if (!v22)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 32))(v18, v19, v20);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v18, 0, 1, v20);
      goto LABEL_11;
    }
    goto LABEL_10;
  }
  uint64_t v23 = *(void *)(v20 - 8);
  if (v22)
  {
    (*(void (**)(char *, uint64_t))(v23 + 8))(v18, v20);
LABEL_10:
    uint64_t v24 = type metadata accessor for Optional();
    memcpy(v18, v19, *(void *)(*(void *)(v24 - 8) + 64));
    goto LABEL_11;
  }
  (*(void (**)(char *, char *, uint64_t))(v23 + 40))(v18, v19, v20);
LABEL_11:
  *(void *)((char *)a1 + a3[9]) = *(void *)((char *)a2 + a3[9]);
  swift_bridgeObjectRelease();
  *(_OWORD *)((char *)a1 + a3[10]) = *(_OWORD *)((char *)a2 + a3[10]);
  swift_release();
  uint64_t v25 = a3[11];
  uint64_t v26 = (char *)a1 + v25;
  uint64_t v27 = (char *)a2 + v25;
  int v28 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a1 + v25, 1, v20);
  int v29 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v27, 1, v20);
  if (!v28)
  {
    uint64_t v30 = *(void *)(v20 - 8);
    if (!v29)
    {
      (*(void (**)(char *, char *, uint64_t))(v30 + 40))(v26, v27, v20);
      goto LABEL_17;
    }
    (*(void (**)(char *, uint64_t))(v30 + 8))(v26, v20);
    goto LABEL_16;
  }
  if (v29)
  {
LABEL_16:
    uint64_t v31 = type metadata accessor for Optional();
    memcpy(v26, v27, *(void *)(*(void *)(v31 - 8) + 64));
    goto LABEL_17;
  }
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 32))(v26, v27, v20);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v26, 0, 1, v20);
LABEL_17:
  type metadata accessor for Optional();
  uint64_t v32 = type metadata accessor for State();
  *(void *)&v26[*(int *)(v32 + 28)] = *(void *)&v27[*(int *)(v32 + 28)];
  swift_release();
  return a1;
}

uint64_t sub_100A00BAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100A00BC0);
}

uint64_t sub_100A00BC0(uint64_t a1, uint64_t a2, int *a3)
{
  sub_10017DF08(&qword_100E669A8);
  sub_100162F30();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1;
  }
  else
  {
    if (a2 == 0x7FFFFFFF) {
      return sub_100163020(*(void *)(a1 + a3[7] + 8));
    }
    type metadata accessor for Measurement();
    type metadata accessor for Optional();
    sub_100162F30();
    if (*(_DWORD *)(v12 + 84) == a2)
    {
      uint64_t v8 = v11;
      uint64_t v13 = a3[8];
    }
    else
    {
      type metadata accessor for Optional();
      uint64_t v8 = sub_1001A1A30();
      uint64_t v13 = a3[11];
    }
    uint64_t v9 = a1 + v13;
  }

  return _s7Weather24LocationCompositionStateOwet_0(v9, a2, v8);
}

uint64_t sub_100A00CAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100A00CC0);
}

void sub_100A00CC0(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  sub_10017DF08(&qword_100E669A8);
  sub_100162F30();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = a1;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(void *)(a1 + a4[7] + 8) = (a2 - 1);
      return;
    }
    type metadata accessor for Measurement();
    type metadata accessor for Optional();
    sub_100162F30();
    if (*(_DWORD *)(v13 + 84) == a3)
    {
      uint64_t v10 = v12;
      uint64_t v14 = a4[8];
    }
    else
    {
      type metadata accessor for Optional();
      uint64_t v10 = sub_1001A1A30();
      uint64_t v14 = a4[11];
    }
    uint64_t v11 = a1 + v14;
  }

  _s7Weather24LocationCompositionStateOwst_0(v11, a2, a2, v10);
}

uint64_t sub_100A00DC0()
{
  return swift_getWitnessTable();
}

uint64_t sub_100A00E88()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_100A00ECC()
{
  unint64_t result = qword_100EA97B8;
  if (!qword_100EA97B8)
  {
    sub_10018C6DC(&qword_100EA97B0);
    sub_100A00F6C();
    sub_1001246C8(&qword_100EA97E0, &qword_100EA97E8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA97B8);
  }
  return result;
}

unint64_t sub_100A00F6C()
{
  unint64_t result = qword_100EA97C0;
  if (!qword_100EA97C0)
  {
    sub_10018C6DC(&qword_100EA97C8);
    sub_1001246C8(&qword_100EA97D0, &qword_100EA97D8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA97C0);
  }
  return result;
}

uint64_t sub_100A0100C@<X0>(uint64_t a1@<X8>)
{
  return sub_1009FE750(*(void *)(v1 + 24), *(void *)(v1 + 16), a1);
}

uint64_t sub_100A01014()
{
  sub_100180940();
  uint64_t v2 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));
  sub_10017DF08(&qword_100E65310);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  swift_release();
  if (EnumCaseMultiPayload == 1)
  {
    swift_release();
    uint64_t v4 = v2 + *(int *)(sub_10017DF08(&qword_100E669A0) + 32);
    type metadata accessor for PresentationMode();
    sub_100179DC0();
    (*(void (**)(uint64_t))(v5 + 8))(v4);
  }
  swift_bridgeObjectRelease();
  uint64_t v6 = sub_1001A01C8();
  if (!sub_100181294(v6))
  {
    sub_100162880();
    sub_10017E3CC();
    v7();
  }
  swift_bridgeObjectRelease();
  swift_release();
  if (!sub_100184174())
  {
    sub_100162880();
    sub_10017E3CC();
    v8();
  }
  sub_100185EF4();
  sub_1001A1A30();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100A011AC()
{
  uint64_t v1 = type metadata accessor for MeasurementEditorView();
  sub_1001627C0(v1);
  uint64_t v3 = v0 + ((*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));

  return sub_1009FF6F8(v3);
}

uint64_t sub_100A01200@<X0>(uint64_t a1@<X8>)
{
  return sub_1009FEBD8(*(void *)(v1 + 24), *(void *)(v1 + 16), a1);
}

uint64_t sub_100A01208()
{
  return sub_1009FF188();
}

uint64_t sub_100A01210@<X0>(uint64_t a1@<X8>)
{
  return sub_1009FF370(*(void *)(v1 + 24), *(void *)(v1 + 16), a1);
}

unint64_t sub_100A01218()
{
  unint64_t result = qword_100EA9808;
  if (!qword_100EA9808)
  {
    sub_10018C6DC(&qword_100EA97A8);
    sub_10018C6DC(&qword_100EA97F8);
    sub_1001246C8(&qword_100EA9800, &qword_100EA97F8);
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA9808);
  }
  return result;
}

uint64_t sub_100A01300()
{
  return swift_deallocObject();
}

uint64_t sub_100A01310@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1009FF5F0(a1, a2);
}

uint64_t sub_100A0131C()
{
  return sub_100A013B0((uint64_t (*)(uint64_t, uint64_t, char *, uint64_t))sub_1009FD984);
}

uint64_t sub_100A01338(uint64_t a1)
{
  return sub_100A015E8(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, char *, uint64_t))sub_1009FDCCC);
}

uint64_t sub_100A01350(uint64_t a1)
{
  return sub_1009FDF98(a1, *(void *)(v1 + 24), *(void *)(v1 + 32)) & 1;
}

uint64_t sub_100A01374()
{
  return sub_1009FDC4C() & 1;
}

uint64_t sub_100A01398()
{
  return sub_100A013B0((uint64_t (*)(uint64_t, uint64_t, char *, uint64_t))sub_1009FD108);
}

uint64_t sub_100A013B0(uint64_t (*a1)(uint64_t, uint64_t, char *, uint64_t))
{
  uint64_t v2 = v1[4];
  uint64_t v3 = type metadata accessor for MeasurementEditorView();
  sub_1001627C0(v3);
  uint64_t v5 = v1[2];
  uint64_t v6 = v1[3];
  uint64_t v7 = (char *)v1 + ((*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));

  return a1(v5, v6, v7, v2);
}

uint64_t sub_100A01430()
{
  sub_100180940();
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  swift_unknownObjectRelease();
  sub_10017DF08(&qword_100E65310);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  swift_release();
  if (EnumCaseMultiPayload == 1)
  {
    swift_release();
    uint64_t v4 = v0 + ((v2 + 40) & ~v2) + *(int *)(sub_10017DF08(&qword_100E669A0) + 32);
    type metadata accessor for PresentationMode();
    sub_100179DC0();
    (*(void (**)(uint64_t))(v5 + 8))(v4);
  }
  swift_bridgeObjectRelease();
  uint64_t v6 = sub_1001A01C8();
  if (!sub_100181294(v6))
  {
    sub_100162880();
    sub_10017E3CC();
    v7();
  }
  swift_bridgeObjectRelease();
  swift_release();
  if (!sub_100184174())
  {
    sub_100162880();
    sub_10017E3CC();
    v8();
  }
  sub_100185EF4();
  sub_1001A1A30();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100A015D0(uint64_t a1)
{
  return sub_100A015E8(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, char *, uint64_t))sub_1009FD2FC);
}

uint64_t sub_100A015E8(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t, uint64_t, char *, uint64_t))
{
  uint64_t v4 = v2[4];
  uint64_t v5 = type metadata accessor for MeasurementEditorView();
  sub_1001627C0(v5);
  uint64_t v7 = v2[2];
  uint64_t v8 = v2[3];
  uint64_t v9 = (char *)v2 + ((*(unsigned __int8 *)(v6 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));

  return a2(a1, v7, v8, v9, v4);
}

uint64_t sub_100A01664()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100A01960(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    return dispatch thunk of CustomStringConvertible.description.getter();
  }
  _StringGuts.grow(_:)(16);
  swift_bridgeObjectRelease();
  return 0xD000000000000011;
}

uint64_t sub_100A019DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v69 = a6;
  uint64_t v70 = a7;
  uint64_t v67 = a2;
  uint64_t v68 = type metadata accessor for Date();
  uint64_t v11 = *(void *)(v68 - 8);
  __chkstk_darwin(v68);
  uint64_t v13 = (char *)&v59 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for SevereMessage();
  __chkstk_darwin(v14);
  uint64_t v16 = (uint64_t *)((char *)&v59 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (!a4)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (qword_100E627D8 != -1) {
      swift_once();
    }
    uint64_t v19 = type metadata accessor for Logger();
    sub_1002102B0(v19, (uint64_t)qword_100F51EA0);
    uint64_t v20 = Logger.logObject.getter();
    os_log_type_t v21 = static os_log_type_t.error.getter();
    if (!os_log_type_enabled(v20, v21)) {
      goto LABEL_38;
    }
    int v22 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)int v22 = 0;
    uint64_t v23 = "Attempted to parse APSMessage without channel identifier";
LABEL_37:
    _os_log_impl((void *)&_mh_execute_header, v20, v21, v23, v22, 2u);
    sub_100162EE0();
LABEL_38:

    goto LABEL_39;
  }
  uint64_t v65 = v13;
  uint64_t v66 = a1;
  uint64_t v71 = 0x6E6F6973726576;
  unint64_t v72 = 0xE700000000000000;
  AnyHashable.init<A>(_:)();
  sub_100180978();
  sub_100098DC4((uint64_t)v73);
  if (!v75)
  {
    sub_10040B8CC((uint64_t)v74);
    goto LABEL_11;
  }
  if ((sub_10017D9B0() & 1) == 0)
  {
LABEL_11:
    uint64_t v17 = 0;
    char v18 = 1;
    goto LABEL_12;
  }
  uint64_t v17 = v71;
  if ((unint64_t)(v71 - 1) > 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (qword_100E627D8 != -1) {
      swift_once();
    }
    uint64_t v47 = type metadata accessor for Logger();
    sub_1002102B0(v47, (uint64_t)qword_100F51EA0);
    uint64_t v20 = Logger.logObject.getter();
    os_log_type_t v48 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v20, v48))
    {
      uint64_t v49 = v17;
      uint64_t v50 = (uint8_t *)swift_slowAlloc();
      uint64_t v51 = swift_slowAlloc();
      uint64_t v62 = v14;
      v73[0] = v51;
      *(_DWORD *)uint64_t v50 = 136446210;
      v74[0] = v49;
      uint64_t v52 = dispatch thunk of CustomStringConvertible.description.getter();
      v74[0] = sub_10016414C(v52, v53, v73);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v20, v48, "Attempted to parse APSMessage with unsupported version %{public}s", v50, 0xCu);
      uint64_t v46 = 1;
      swift_arrayDestroy();
      uint64_t v14 = v62;
      sub_100162EE0();
      sub_100162EE0();

      uint64_t v54 = sub_100188348();
      v55(v54);
      return _s7Weather24LocationCompositionStateOwst_0(v70, v46, 1, v14);
    }
    goto LABEL_38;
  }
  char v18 = 0;
LABEL_12:
  uint64_t v24 = v17;
  uint64_t v63 = a3;
  if (qword_100E627D8 != -1) {
    swift_once();
  }
  uint64_t v25 = type metadata accessor for Logger();
  uint64_t v64 = sub_1002102B0(v25, (uint64_t)qword_100F51EA0);
  uint64_t v26 = Logger.logObject.getter();
  os_log_type_t v27 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v26, v27))
  {
    uint64_t v59 = a5;
    uint64_t v28 = swift_slowAlloc();
    uint64_t v61 = a4;
    int v29 = (uint8_t *)v28;
    uint64_t v30 = swift_slowAlloc();
    uint64_t v60 = v16;
    v73[0] = v30;
    uint64_t v62 = v14;
    *(_DWORD *)int v29 = 136446210;
    uint64_t v31 = sub_100A01960(v24, v18);
    v74[0] = sub_10016414C(v31, v32, v73);
    uint64_t v14 = v62;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v26, v27, "Parse APSMessage with version %{public}s", v29, 0xCu);
    swift_arrayDestroy();
    uint64_t v16 = v60;
    sub_100162EE0();
    a4 = v61;
    sub_100162EE0();
  }

  uint64_t v33 = v66;
  if (v24 == 2) {
    char v34 = v18;
  }
  else {
    char v34 = 1;
  }
  if ((v34 & 1) == 0)
  {
    uint64_t v71 = 0x737472656C61;
    unint64_t v72 = 0xE600000000000000;
    AnyHashable.init<A>(_:)();
    sub_100180978();
    swift_bridgeObjectRelease();
    sub_100098DC4((uint64_t)v73);
    if (v75)
    {
      if (sub_10017D9B0())
      {
        uint64_t v38 = a4;
        uint64_t v39 = v71;
        unint64_t v40 = v72;
        uint64_t v41 = v16;
        uint64_t v42 = (uint64_t)v65;
        (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v65, v69, v68);
        uint64_t v43 = v42;
        uint64_t v16 = v41;
        sub_100A0219C(v33, v67, v63, v38, v39, v40, v43, v41);
        goto LABEL_26;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_10040B8CC((uint64_t)v74);
    }
    uint64_t v20 = Logger.logObject.getter();
    os_log_type_t v21 = static os_log_type_t.error.getter();
    if (!os_log_type_enabled(v20, v21)) {
      goto LABEL_38;
    }
    int v22 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)int v22 = 0;
    uint64_t v23 = "Attempted to parse APSMessage with version 2, without binary alert payload";
    goto LABEL_37;
  }
  uint64_t v71 = 0x73746E657665;
  unint64_t v72 = 0xE600000000000000;
  AnyHashable.init<A>(_:)();
  sub_100180978();
  swift_bridgeObjectRelease();
  sub_100098DC4((uint64_t)v73);
  if (!v75)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_10040B8CC((uint64_t)v74);
LABEL_39:
    uint64_t v56 = sub_100188348();
    v57(v56);
    uint64_t v46 = 1;
    return _s7Weather24LocationCompositionStateOwst_0(v70, v46, 1, v14);
  }
  sub_10017DF08(&qword_100EA9810);
  if ((sub_10017D9B0() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_39;
  }
  uint64_t v35 = a4;
  uint64_t v36 = v71;
  uint64_t v37 = (uint64_t)v65;
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v65, v69, v68);
  sub_100A02A80(v33, v67, v63, v35, v36, v37, v16);
LABEL_26:
  uint64_t v44 = sub_100188348();
  v45(v44);
  sub_1003FC0A4((uint64_t)v16, v70);
  uint64_t v46 = 0;
  return _s7Weather24LocationCompositionStateOwst_0(v70, v46, 1, v14);
}

uint64_t sub_100A0219C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, unint64_t a6@<X5>, uint64_t a7@<X6>, void *a8@<X8>)
{
  unint64_t v55 = a8;
  uint64_t v56 = a7;
  uint64_t v53 = a3;
  uint64_t v54 = a4;
  uint64_t v64 = a1;
  uint64_t v11 = type metadata accessor for UUID();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v63 = (char *)&v50 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = a5;
  unint64_t v68 = a6;
  sub_1007FD228(a5, a6);
  uint64_t v14 = _swiftEmptyArrayStorage;
  uint64_t v62 = (void (**)(char *, uint64_t))(v12 + 8);
  uint64_t v15 = 0;
  *((void *)&v16 + 1) = 8;
  long long v61 = xmmword_100C31870;
  *(void *)&long long v16 = 136315394;
  long long v58 = v16;
  uint64_t v57 = (char *)&type metadata for Any + 8;
  unint64_t v52 = a6;
  uint64_t v51 = a5;
  uint64_t v60 = v11;
  while (2)
  {
    switch(a6 >> 62)
    {
      case 1uLL:
        uint64_t v17 = (int)a5;
        uint64_t v18 = a5 >> 32;
        goto LABEL_7;
      case 2uLL:
        uint64_t v17 = *(void *)(a5 + 16);
        uint64_t v18 = *(void *)(a5 + 24);
LABEL_7:
        if (v17 != v18) {
          goto LABEL_8;
        }
        goto LABEL_20;
      case 3uLL:
        goto LABEL_20;
      default:
        if ((a6 & 0xFF000000000000) == 0)
        {
LABEL_20:
          sub_100318440(v51, v52);
          uint64_t v44 = a5;
          unint64_t v45 = a6;
          goto LABEL_19;
        }
LABEL_8:
        if (v15 != 500)
        {
          uint64_t v19 = v63;
          static FixedSizeTypeBinaryCodable.read(from:)();
          uint64_t v20 = UUID.uuidString.getter();
          unint64_t v22 = v21;
          (*v62)(v19, v11);
          sub_10017DF08(&qword_100E6B6D0);
          uint64_t v23 = swift_allocObject();
          *(_OWORD *)(v23 + 16) = v61;
          static FixedSizeTypeBinaryCodable.read(from:)();
          *(double *)(v23 + 32) = (double)((int)bswap32(LOWORD(v66[0])) >> 16) / 100.0;
          static FixedSizeTypeBinaryCodable.read(from:)();
          *(double *)(v23 + 40) = (double)((int)bswap32(LOWORD(v66[0])) >> 16) / 100.0;
          static FixedSizeTypeBinaryCodable.read(from:)();
          *(double *)(v23 + 48) = (double)((int)bswap32(LOWORD(v66[0])) >> 16) / 100.0;
          static FixedSizeTypeBinaryCodable.read(from:)();
          *(double *)(v23 + 56) = (double)((int)bswap32(LOWORD(v66[0])) >> 16) / 100.0;
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1007E9CC0();
            uint64_t v14 = v35;
          }
          unint64_t v24 = v14[2];
          if (v24 >= v14[3] >> 1)
          {
            sub_1007E9CC0();
            uint64_t v14 = v36;
          }
          v14[2] = v24 + 1;
          uint64_t v65 = v14;
          uint64_t v25 = &v14[5 * v24];
          v25[4] = v20;
          v25[5] = v22;
          v25[6] = v64;
          v25[7] = a2;
          v25[8] = v23;
          if (qword_100E627D8 != -1) {
            swift_once();
          }
          uint64_t v26 = type metadata accessor for Logger();
          sub_1002102B0(v26, (uint64_t)qword_100F51EA0);
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain_n();
          os_log_type_t v27 = Logger.logObject.getter();
          os_log_type_t v28 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v27, v28))
          {
            uint64_t v29 = swift_slowAlloc();
            uint64_t v59 = swift_slowAlloc();
            v66[0] = v59;
            *(_DWORD *)uint64_t v29 = v58;
            swift_bridgeObjectRetain();
            *(void *)(v29 + 4) = sub_10016414C(v20, v22, v66);
            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease_n();
            *(_WORD *)(v29 + 12) = 2080;
            swift_bridgeObjectRetain();
            uint64_t v30 = Array.description.getter();
            uint64_t v31 = v15;
            uint64_t v32 = a2;
            unint64_t v34 = v33;
            swift_bridgeObjectRelease();
            *(void *)(v29 + 14) = sub_10016414C(v30, v34, v66);
            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease_n();
            a2 = v32;
            uint64_t v15 = v31;
            swift_bridgeObjectRelease();
            _os_log_impl((void *)&_mh_execute_header, v27, v28, "Received weather alert: %s - %s", (uint8_t *)v29, 0x16u);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();
          }
          else
          {

            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease_n();
          }
          uint64_t v11 = v60;
          ++v15;
          a5 = v67;
          a6 = v68;
          uint64_t v14 = v65;
          continue;
        }
        if (qword_100E627D8 != -1) {
          swift_once();
        }
        uint64_t v46 = type metadata accessor for Logger();
        sub_1002102B0(v46, (uint64_t)qword_100F51EA0);
        uint64_t v47 = Logger.logObject.getter();
        os_log_type_t v48 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v47, v48))
        {
          uint64_t v49 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v49 = 0;
          _os_log_impl((void *)&_mh_execute_header, v47, v48, "Breaking out of SevereMessage parsing", v49, 2u);
          swift_slowDealloc();
        }
        sub_100318440(v51, v52);

        uint64_t v44 = v67;
        unint64_t v45 = v68;
LABEL_19:
        sub_100318440(v44, v45);
        uint64_t v37 = v55;
        uint64_t v38 = v56;
        uint64_t v40 = v53;
        uint64_t v39 = v54;
        *unint64_t v55 = v64;
        v37[1] = a2;
        void v37[2] = v40;
        void v37[3] = v39;
        v37[4] = v14;
        uint64_t v41 = (char *)v37 + *(int *)(type metadata accessor for SevereMessage() + 28);
        uint64_t v42 = type metadata accessor for Date();
        return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v42 - 8) + 32))(v41, v38, v42);
    }
  }
}

uint64_t sub_100A02A80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, void *a7@<X8>)
{
  *a7 = a1;
  a7[1] = a2;
  a7[2] = a3;
  a7[3] = a4;
  uint64_t v7 = *(void *)(a5 + 16);
  if (v7)
  {
    uint64_t v8 = (uint64_t *)(a5 + 32);
    uint64_t v9 = _swiftEmptyArrayStorage;
    do
    {
      uint64_t v28 = *v8;
      sub_100A02C10(&v28, &v24);
      uint64_t v10 = v25;
      if (v25)
      {
        uint64_t v11 = v24;
        uint64_t v12 = v26;
        long long v23 = v27;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1007E9CC0();
          uint64_t v9 = v15;
        }
        unint64_t v13 = v9[2];
        if (v13 >= v9[3] >> 1)
        {
          sub_1007E9CC0();
          uint64_t v9 = v16;
        }
        _OWORD v9[2] = v13 + 1;
        uint64_t v14 = &v9[5 * v13];
        v14[4] = v11;
        v14[5] = v10;
        v14[6] = v12;
        *(_OWORD *)(v14 + 7) = v23;
      }
      ++v8;
      --v7;
    }
    while (v7);
  }
  else
  {
    uint64_t v9 = _swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRelease();
  a7[4] = v9;
  uint64_t v17 = (char *)a7 + *(int *)(type metadata accessor for SevereMessage() + 28);
  uint64_t v18 = type metadata accessor for Date();
  uint64_t v19 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32);

  return v19(v17, a6, v18);
}

double sub_100A02C10@<D0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t v4 = sub_100A037A0(0x696669746E656469, 0xEA00000000007265, *a1);
  if (!v4 || (uint64_t v14 = v4, (swift_dynamicCast() & 1) == 0))
  {
    if (qword_100E627D8 != -1) {
      swift_once();
    }
    uint64_t v6 = type metadata accessor for Logger();
    sub_1002102B0(v6, (uint64_t)qword_100F51EA0);
    uint64_t v7 = Logger.logObject.getter();
    os_log_type_t v8 = static os_log_type_t.error.getter();
    if (!os_log_type_enabled(v7, v8)) {
      goto LABEL_15;
    }
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v9 = 0;
    uint64_t v10 = "Message event payload did not include identifier";
    goto LABEL_14;
  }
  if (sub_100A037A0(2020565602, 0xE400000000000000, v3))
  {
    sub_10017DF08(&qword_100E94D60);
    if (swift_dynamicCast())
    {
      *a2 = v12;
      a2[1] = v13;
      a2[2] = v12;
      a2[3] = v13;
      a2[4] = v14;
      swift_bridgeObjectRetain();
      return result;
    }
  }
  swift_bridgeObjectRelease();
  if (qword_100E627D8 != -1) {
    swift_once();
  }
  uint64_t v11 = type metadata accessor for Logger();
  sub_1002102B0(v11, (uint64_t)qword_100F51EA0);
  uint64_t v7 = Logger.logObject.getter();
  os_log_type_t v8 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v9 = 0;
    uint64_t v10 = "Message event payload did not include bounding box";
LABEL_14:
    _os_log_impl((void *)&_mh_execute_header, v7, v8, v10, v9, 2u);
    swift_slowDealloc();
  }
LABEL_15:

  a2[4] = 0;
  double result = 0.0;
  *(_OWORD *)a2 = 0u;
  *((_OWORD *)a2 + 1) = 0u;
  return result;
}

uint64_t sub_100A02E60()
{
  _StringGuts.grow(_:)(25);
  swift_bridgeObjectRelease();
  strcpy((char *)v18, "Identifier: ");
  BYTE5(v18[1]) = 0;
  HIWORD(v18[1]) = -5120;
  uint64_t v1 = *v0;
  uint64_t v2 = (void *)v0[1];
  swift_bridgeObjectRetain();
  v3._uint64_t countAndFlagsBits = v1;
  v3._uint64_t object = v2;
  String.append(_:)(v3);
  swift_bridgeObjectRelease();
  v4._uint64_t countAndFlagsBits = 0x3A737472656C410ALL;
  v4._uint64_t object = (void *)0xE900000000000020;
  String.append(_:)(v4);
  uint64_t v5 = v0[4];
  uint64_t v6 = *(void *)(v5 + 16);
  if (v6)
  {
    swift_bridgeObjectRetain();
    sub_1001EA6A0(0, v6, 0);
    uint64_t v7 = (uint64_t *)(v5 + 40);
    do
    {
      uint64_t v9 = *(v7 - 1);
      uint64_t v8 = *v7;
      unint64_t v11 = _swiftEmptyArrayStorage[2];
      unint64_t v10 = _swiftEmptyArrayStorage[3];
      swift_bridgeObjectRetain();
      if (v11 >= v10 >> 1) {
        sub_1001EA6A0(v10 > 1, v11 + 1, 1);
      }
      v7 += 5;
      _swiftEmptyArrayStorage[2] = v11 + 1;
      uint64_t v12 = &_swiftEmptyArrayStorage[2 * v11];
      v12[4] = v9;
      v12[5] = v8;
      --v6;
    }
    while (v6);
    swift_bridgeObjectRelease();
  }
  sub_10017DF08(&qword_100E91BC0);
  sub_10012BB8C();
  uint64_t v13 = BidirectionalCollection<>.joined(separator:)();
  uint64_t v15 = v14;
  swift_bridgeObjectRelease();
  v16._uint64_t countAndFlagsBits = v13;
  v16._uint64_t object = v15;
  String.append(_:)(v16);
  swift_bridgeObjectRelease();
  return v18[0];
}

uint64_t type metadata accessor for SevereMessage()
{
  uint64_t result = qword_100EA9870;
  if (!qword_100EA9870) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t *sub_100A03070(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  Swift::String v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    uint64_t *v3 = *a2;
    Swift::String v3 = (uint64_t *)(v12 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    uint64_t v6 = a2[3];
    a1[2] = a2[2];
    a1[3] = v6;
    uint64_t v7 = *(int *)(a3 + 28);
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    a1[4] = a2[4];
    uint64_t v10 = type metadata accessor for Date();
    unint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v11(v8, v9, v10);
  }
  return v3;
}

uint64_t sub_100A03180(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 28);
  uint64_t v5 = type metadata accessor for Date();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

void *sub_100A03208(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  a1[4] = a2[4];
  uint64_t v6 = *(int *)(a3 + 28);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for Date();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v10(v7, v8, v9);
  return a1;
}

void *sub_100A032C8(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 28);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for Date();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

uint64_t sub_100A0339C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v5 = *(int *)(a3 + 28);
  uint64_t v6 = a1 + v5;
  uint64_t v7 = a2 + v5;
  uint64_t v8 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(v6, v7, v8);
  return a1;
}

void *sub_100A03420(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRelease();
  uint64_t v8 = *(int *)(a3 + 28);
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = type metadata accessor for Date();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 40))(v9, v10, v11);
  return a1;
}

uint64_t sub_100A034CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100A034E0);
}

uint64_t sub_100A034E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for Date();
    uint64_t v9 = a1 + *(int *)(a3 + 28);
    return _s7Weather24LocationCompositionStateOwet_0(v9, a2, v8);
  }
}

uint64_t sub_100A03568(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100A0357C);
}

uint64_t sub_100A0357C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for Date();
    uint64_t v8 = v5 + *(int *)(a4 + 28);
    return _s7Weather24LocationCompositionStateOwst_0(v8, a2, a2, v7);
  }
  return result;
}

uint64_t sub_100A035FC()
{
  uint64_t result = type metadata accessor for Date();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_100A036A4()
{
  sub_1001A01E8();
  if (v1 && (sub_100246CB0(v0), (v2 & 1) != 0))
  {
    type metadata accessor for Tips.Status();
    sub_100162E4C();
    sub_10008B8B4();
    v3();
    uint64_t v4 = sub_100180994();
  }
  else
  {
    type metadata accessor for Tips.Status();
    uint64_t v4 = sub_100162E38();
  }

  return _s7Weather24LocationCompositionStateOwst_0(v4, v5, v6, v7);
}

double sub_100A03740()
{
  sub_100189638();
  if (v2 && (v3 = v1, unint64_t v4 = sub_1001D23B8(), (v5 & 1) != 0))
  {
    uint64_t v6 = *(void *)(v3 + 56) + 32 * v4;
    sub_1001643C8(v6, (uint64_t)v0);
  }
  else
  {
    double result = 0.0;
    *uint64_t v0 = 0u;
    v0[1] = 0u;
  }
  return result;
}

uint64_t sub_100A037A4()
{
  sub_1001A01E8();
  if (v2 && (v3 = v1, unint64_t v4 = sub_100246B34(), (v5 & 1) != 0))
  {
    unint64_t v6 = v4;
    uint64_t v7 = *(void *)(v3 + 56);
    type metadata accessor for CalendarMoonPhaseData(0);
    sub_100162E4C();
    sub_1001BCC70(v7 + *(void *)(v8 + 72) * v6, v0, (void (*)(void))type metadata accessor for CalendarMoonPhaseData);
    uint64_t v9 = sub_100180994();
  }
  else
  {
    type metadata accessor for CalendarMoonPhaseData(0);
    uint64_t v9 = sub_100162E38();
  }

  return _s7Weather24LocationCompositionStateOwst_0(v9, v10, v11, v12);
}

uint64_t sub_100A03844(uint64_t a1)
{
  if (!*(void *)(a1 + 16)) {
    return 0;
  }
  uint64_t v2 = sub_100246D9C();
  if ((v3 & 1) == 0) {
    return 0;
  }
  uint64_t v4 = *(void *)(*(void *)(a1 + 56) + 16 * v2);
  swift_bridgeObjectRetain();
  return v4;
}

uint64_t sub_100A0389C()
{
  sub_1001A01E8();
  if (v2 && (sub_1002109DC(v1), (v3 & 1) != 0))
  {
    uint64_t v4 = type metadata accessor for HourTemperatureStatistics();
    sub_100162E4C();
    sub_10008B8B4();
    v5();
    uint64_t v6 = v0;
    uint64_t v7 = 0;
    uint64_t v8 = 1;
    uint64_t v9 = v4;
  }
  else
  {
    type metadata accessor for HourTemperatureStatistics();
    uint64_t v6 = sub_100162E38();
  }

  return _s7Weather24LocationCompositionStateOwst_0(v6, v7, v8, v9);
}

double sub_100A03948()
{
  sub_1001A01E8();
  if (v3 && (uint64_t v4 = v2, v5 = sub_100098FD0(v1), (v6 & 1) != 0))
  {
    uint64_t v7 = *(void *)(v4 + 56) + 32 * v5;
    sub_1001643C8(v7, (uint64_t)v0);
  }
  else
  {
    double result = 0.0;
    *uint64_t v0 = 0u;
    v0[1] = 0u;
  }
  return result;
}

uint64_t sub_100A039A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a3 + 16) && (unint64_t v3 = sub_1001D23B8(), (v4 & 1) != 0)) {
    return sub_1001A49C8(v3);
  }
  else {
    return 0;
  }
}

uint64_t sub_100A039EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001416B0(a1, a2, a3, (void (*)(void))&type metadata accessor for LocationModel);
}

uint64_t sub_100A03A04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001BBDD4(a1, a2, a3, (void (*)(void))type metadata accessor for ListLocationViewModel.CacheEntry);
}

void sub_100A03A30()
{
  sub_100189638();
  long long v2 = 0uLL;
  if (v3)
  {
    uint64_t v4 = v1;
    unint64_t v5 = sub_1001D23B8();
    if (v6)
    {
      char v7 = 0;
      uint64_t v8 = (long long *)(*(void *)(v4 + 56) + 32 * v5);
      long long v2 = *v8;
      long long v9 = v8[1];
    }
    else
    {
      char v7 = 1;
      long long v9 = 0uLL;
      long long v2 = 0uLL;
    }
  }
  else
  {
    char v7 = 1;
    long long v9 = 0uLL;
  }
  *(_OWORD *)uint64_t v0 = v2;
  *(_OWORD *)(v0 + 16) = v9;
  *(unsigned char *)(v0 + 32) = v7;
}

uint64_t sub_100A03A98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!*(void *)(a3 + 16)) {
    return 0;
  }
  unint64_t v3 = sub_1001D23B8();
  if ((v4 & 1) == 0) {
    return 0;
  }
  sub_1001A49C8(v3);
  return swift_unknownObjectRetain();
}

uint64_t sub_100A03AD8(uint64_t a1, uint64_t a2)
{
  if (!*(void *)(a2 + 16)) {
    return 0;
  }
  unint64_t v2 = sub_100246EAC();
  if ((v3 & 1) == 0) {
    return 0;
  }
  sub_1001A49C8(v2);
  return swift_retain();
}

uint64_t sub_100A03B18(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16) && (unint64_t v2 = sub_1002109DC(a1), (v3 & 1) != 0)) {
    return sub_1001A49C8(v2);
  }
  else {
    return 0;
  }
}

uint64_t StubLocalSearchRequestService.__allocating_init(locations:)(uint64_t a1)
{
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = a1;
  return result;
}

uint64_t StubLocalSearchRequestService.init(locations:)(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return v1;
}

uint64_t StubLocalSearchRequestService.performLocalSearch(with:)()
{
  uint64_t v2 = sub_10017DF08(&qword_100E639E8);
  __chkstk_darwin(v2 - 8);
  sub_10017ED1C();
  sub_10017CE00();
  __chkstk_darwin(v3);
  sub_1001870B8();
  __chkstk_darwin(v4);
  uint64_t v5 = sub_1001D20F0();
  sub_100184198(v5, v6, v7, (void (*)(void))&type metadata accessor for Location);
  swift_bridgeObjectRelease();
  if (_s7Weather24LocationCompositionStateOwet_0(v1, 1, v0) == 1)
  {
    sub_10085EB44(v1);
    sub_100A03D1C();
    swift_allocError();
    sub_10017DF08(&qword_100E965D0);
    sub_100181044();
    return Promise.init(error:)();
  }
  else
  {
    uint64_t v9 = sub_1001A1178();
    v10(v9);
    uint64_t v11 = sub_10017AD00();
    v12(v11);
    sub_10017DF08(&qword_100E965D0);
    uint64_t v8 = sub_100181044();
    Promise.init(value:)();
    uint64_t v13 = sub_100181A90();
    v14(v13);
  }
  return v8;
}

unint64_t sub_100A03D1C()
{
  unint64_t result = qword_100EA98B0;
  if (!qword_100EA98B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA98B0);
  }
  return result;
}

uint64_t StubLocalSearchRequestService.performLocalSearch(with:calloutTitle:)()
{
  uint64_t v2 = sub_10017DF08(&qword_100E639E8);
  __chkstk_darwin(v2 - 8);
  sub_10017ED1C();
  sub_10017CE00();
  __chkstk_darwin(v3);
  sub_1001870B8();
  __chkstk_darwin(v4);
  uint64_t v5 = sub_1001D20F0();
  sub_100184198(v5, v6, v7, (void (*)(void))&type metadata accessor for Location);
  swift_bridgeObjectRelease();
  if (_s7Weather24LocationCompositionStateOwet_0(v1, 1, v0) == 1)
  {
    sub_10085EB44(v1);
    sub_100A03D1C();
    swift_allocError();
    sub_10017DF08(&qword_100E965D0);
    sub_100181044();
    return Promise.init(error:)();
  }
  else
  {
    uint64_t v9 = sub_1001A1178();
    v10(v9);
    uint64_t v11 = sub_10017AD00();
    v12(v11);
    sub_10017DF08(&qword_100E965D0);
    uint64_t v8 = sub_100181044();
    Promise.init(value:)();
    uint64_t v13 = sub_100181A90();
    v14(v13);
  }
  return v8;
}