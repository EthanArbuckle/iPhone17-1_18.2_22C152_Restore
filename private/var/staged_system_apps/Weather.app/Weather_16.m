unint64_t sub_100A03EEC()
{
  unint64_t result;

  result = qword_100EA98B8;
  if (!qword_100EA98B8)
  {
    result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA98B8);
  }
  return result;
}

uint64_t type metadata accessor for StubLocalSearchRequestService()
{
  return self;
}

unsigned char *storeEnumTagSinglePayload for StubLocalSearchRequestService.Errors(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *result = a2;
        return result;
      case 2:
        *(_WORD *)result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *result = 0;
      break;
    case 2:
      *(_WORD *)result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x100A04000);
    case 4:
      *(_DWORD *)result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for StubLocalSearchRequestService.Errors()
{
  return &type metadata for StubLocalSearchRequestService.Errors;
}

uint64_t sub_100A04038(uint64_t a1, uint64_t a2)
{
  BOOL v4 = *(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8);
  if (v4 || (_stringCompareWithSmolCheck(_:_:expecting:)(), uint64_t result = sub_1001190E0(), (v6 & 1) != 0))
  {
    BOOL v7 = *(void *)(a1 + 16) == *(void *)(a2 + 16) && *(void *)(a1 + 24) == *(void *)(a2 + 24);
    if (v7 || (_stringCompareWithSmolCheck(_:_:expecting:)(), uint64_t result = sub_1001190E0(), (v8 & 1) != 0))
    {
      BOOL v9 = *(void *)(a1 + 32) == *(void *)(a2 + 32) && *(void *)(a1 + 40) == *(void *)(a2 + 40);
      if (v9 || (_stringCompareWithSmolCheck(_:_:expecting:)(), uint64_t result = sub_1001190E0(), (v10 & 1) != 0))
      {
        if (*(void *)(a1 + 48) == *(void *)(a2 + 48) && *(void *)(a1 + 56) == *(void *)(a2 + 56)) {
          return *(double *)(a1 + 64) == *(double *)(a2 + 64) && *(double *)(a1 + 72) == *(double *)(a2 + 72);
        }
        _stringCompareWithSmolCheck(_:_:expecting:)();
        uint64_t result = sub_1001190E0();
        if (v12) {
          return *(double *)(a1 + 64) == *(double *)(a2 + 64) && *(double *)(a1 + 72) == *(double *)(a2 + 72);
        }
      }
    }
  }
  return result;
}

uint64_t sub_100A04118(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6D614E68746E6F6DLL && a2 == 0xED0000676E6F4C65;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x6D614E68746E6F6DLL && a2 == 0xEE0074726F685365;
    if (v6 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 0x54657369726E7573 && a2 == 0xEB00000000656D69;
      if (v7 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        BOOL v8 = a1 == 0x69547465736E7573 && a2 == 0xEA0000000000656DLL;
        if (v8 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else
        {
          BOOL v9 = a1 == 0x6874646957726162 && a2 == 0xE800000000000000;
          if (v9 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 4;
          }
          else if (a1 == 0xD000000000000010 && a2 == 0x8000000100CBA850)
          {
            swift_bridgeObjectRelease();
            return 5;
          }
          else
          {
            char v10 = _stringCompareWithSmolCheck(_:_:expecting:)();
            swift_bridgeObjectRelease();
            if (v10) {
              return 5;
            }
            else {
              return 6;
            }
          }
        }
      }
    }
  }
}

unint64_t sub_100A043EC(char a1)
{
  unint64_t result = 0x6D614E68746E6F6DLL;
  switch(a1)
  {
    case 2:
      unint64_t result = 0x54657369726E7573;
      break;
    case 3:
      unint64_t result = 0x69547465736E7573;
      break;
    case 4:
      unint64_t result = 0x6874646957726162;
      break;
    case 5:
      unint64_t result = 0xD000000000000010;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_100A044D0(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_10017DF08(&qword_100EA9970);
  sub_100179C0C();
  uint64_t v7 = v6;
  __chkstk_darwin(v8);
  char v10 = (char *)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001B1E64(a1, a1[3]);
  sub_100A04CF4();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  LOBYTE(v13) = 0;
  sub_10019DB54();
  if (!v2)
  {
    LOBYTE(v13) = 1;
    sub_10019DB54();
    LOBYTE(v13) = 2;
    sub_10019DB54();
    LOBYTE(v13) = 3;
    sub_10019DB54();
    uint64_t v13 = *(void *)(v3 + 64);
    HIBYTE(v12) = 4;
    sub_1005671FC();
    sub_10017AD20();
    uint64_t v13 = *(void *)(v3 + 72);
    HIBYTE(v12) = 5;
    sub_10017AD20();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v5);
}

uint64_t sub_100A04668@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_10017DF08(&qword_100EA9960);
  sub_100179C0C();
  __chkstk_darwin(v5);
  uint64_t v6 = a1[3];
  sub_1001B1E64(a1, v6);
  sub_100A04CF4();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2) {
    return _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)a1);
  }
  LOBYTE(v21) = 0;
  uint64_t v7 = sub_1001809A8();
  sub_1001A1198(1);
  uint64_t v20 = v6;
  uint64_t v17 = sub_1001809A8();
  sub_1001A1198(2);
  uint64_t v8 = sub_1001809A8();
  uint64_t v18 = v9;
  uint64_t v19 = v6;
  uint64_t v16 = v8;
  sub_1001A1198(3);
  uint64_t v15 = sub_1001809A8();
  uint64_t v11 = v10;
  sub_100567158();
  swift_bridgeObjectRetain();
  sub_1001A2804();
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  sub_1001A2804();
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  uint64_t v12 = sub_10018835C();
  v13(v12);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v7;
  a2[1] = v20;
  a2[2] = v17;
  a2[3] = v19;
  a2[4] = v16;
  a2[5] = v18;
  a2[6] = v15;
  a2[7] = v11;
  a2[8] = v21;
  a2[9] = v21;
  return result;
}

unint64_t sub_100A049A0()
{
  return sub_100A043EC(*v0);
}

uint64_t sub_100A049A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100A04118(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100A049D0(uint64_t a1)
{
  unint64_t v2 = sub_100A04CF4();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100A04A0C(uint64_t a1)
{
  unint64_t v2 = sub_100A04CF4();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t initializeWithCopy for SunriseSunsetMonthlyAverageRowViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  uint64_t v6 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v6;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for SunriseSunsetMonthlyAverageRowViewModel(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  a1[9] = a2[9];
  return a1;
}

uint64_t assignWithTake for SunriseSunsetMonthlyAverageRowViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v7;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  return a1;
}

uint64_t getEnumTagSinglePayload for SunriseSunsetMonthlyAverageRowViewModel(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 80))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SunriseSunsetMonthlyAverageRowViewModel(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 80) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 80) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SunriseSunsetMonthlyAverageRowViewModel()
{
  return &type metadata for SunriseSunsetMonthlyAverageRowViewModel;
}

void *sub_100A04C90@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = (void *)sub_100A04668(a1, v5);
  if (!v2) {
    return memcpy(a2, v5, 0x50uLL);
  }
  return result;
}

uint64_t sub_100A04CDC(void *a1)
{
  return sub_100A044D0(a1);
}

unint64_t sub_100A04CF4()
{
  unint64_t result = qword_100EA9968;
  if (!qword_100EA9968)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA9968);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for SunriseSunsetMonthlyAverageRowViewModel.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100A04E0CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SunriseSunsetMonthlyAverageRowViewModel.CodingKeys()
{
  return &type metadata for SunriseSunsetMonthlyAverageRowViewModel.CodingKeys;
}

unint64_t sub_100A04E48()
{
  unint64_t result = qword_100EA9978;
  if (!qword_100EA9978)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA9978);
  }
  return result;
}

unint64_t sub_100A04E98()
{
  unint64_t result = qword_100EA9980;
  if (!qword_100EA9980)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA9980);
  }
  return result;
}

unint64_t sub_100A04EE8()
{
  unint64_t result = qword_100EA9988;
  if (!qword_100EA9988)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA9988);
  }
  return result;
}

void *sub_100A04F34(uint64_t a1)
{
  uint64_t v2 = sub_10017DF08(&qword_100E63850);
  __chkstk_darwin(v2 - 8);
  unsigned int v4 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for WeatherData(0);
  uint64_t v37 = *(void *)(v5 - 8);
  uint64_t v6 = __chkstk_darwin(v5);
  uint64_t v38 = (uint64_t)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v36 = (uint64_t)&v35 - v8;
  uint64_t v9 = type metadata accessor for LocationWeatherDataState(0);
  uint64_t v42 = *(void *)(v9 - 8);
  uint64_t v43 = v9;
  uint64_t v10 = __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v10);
  uint64_t v15 = (char *)&v35 - v14;
  __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v35 - v16;
  sub_100215188(a1, v44);
  uint64_t v45 = v44[0];
  int64_t v18 = v44[3];
  unint64_t v19 = v44[4];
  uint64_t v40 = v44[1];
  int64_t v41 = (unint64_t)(v44[2] + 64) >> 6;
  swift_bridgeObjectRetain();
  v39 = _swiftEmptyArrayStorage;
  while (1)
  {
    if (v19)
    {
      unint64_t v20 = __clz(__rbit64(v19));
      v19 &= v19 - 1;
      unint64_t v21 = v20 | (v18 << 6);
      goto LABEL_20;
    }
    int64_t v22 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
      __break(1u);
      JUMPOUT(0x100A054DCLL);
    }
    if (v22 >= v41) {
      goto LABEL_31;
    }
    unint64_t v23 = *(void *)(v40 + 8 * v22);
    int64_t v24 = v18 + 1;
    if (!v23)
    {
      int64_t v24 = v18 + 2;
      if (v18 + 2 >= v41) {
        goto LABEL_31;
      }
      unint64_t v23 = *(void *)(v40 + 8 * v24);
      if (!v23)
      {
        int64_t v24 = v18 + 3;
        if (v18 + 3 >= v41) {
          goto LABEL_31;
        }
        unint64_t v23 = *(void *)(v40 + 8 * v24);
        if (!v23)
        {
          int64_t v24 = v18 + 4;
          if (v18 + 4 >= v41) {
            goto LABEL_31;
          }
          unint64_t v23 = *(void *)(v40 + 8 * v24);
          if (!v23)
          {
            int64_t v24 = v18 + 5;
            if (v18 + 5 >= v41) {
              goto LABEL_31;
            }
            unint64_t v23 = *(void *)(v40 + 8 * v24);
            if (!v23) {
              break;
            }
          }
        }
      }
    }
LABEL_19:
    unint64_t v19 = (v23 - 1) & v23;
    unint64_t v21 = __clz(__rbit64(v23)) + (v24 << 6);
    int64_t v18 = v24;
LABEL_20:
    sub_100166838(*(void *)(v45 + 56) + *(void *)(v42 + 72) * v21, (uint64_t)v17, (void (*)(void))type metadata accessor for LocationWeatherDataState);
    sub_10017487C((uint64_t)v17, (uint64_t)v15, (void (*)(void))type metadata accessor for LocationWeatherDataState);
    sub_100166838((uint64_t)v15, (uint64_t)v12, (void (*)(void))type metadata accessor for LocationWeatherDataState);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v26 = sub_10017DF08(&qword_100E63748);
        uint64_t v27 = (uint64_t)&v12[*(int *)(v26 + 48)];
        uint64_t v28 = (uint64_t)&v12[*(int *)(v26 + 64)];
        sub_10017487C((uint64_t)v12, (uint64_t)v4, (void (*)(void))type metadata accessor for WeatherData);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v4, 0, 1, v5);
        sub_100173018(v28, (void (*)(void))type metadata accessor for NewsDataModel);
        sub_100173018(v27, (void (*)(void))type metadata accessor for PreprocessedWeatherData);
        break;
      case 3u:
        goto LABEL_22;
      default:
        sub_100173018((uint64_t)v12, (void (*)(void))type metadata accessor for LocationWeatherDataState);
LABEL_22:
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v4, 1, 1, v5);
        break;
    }
    sub_100173018((uint64_t)v15, (void (*)(void))type metadata accessor for LocationWeatherDataState);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v4, 1, v5) == 1)
    {
      sub_1001781AC((uint64_t)v4, &qword_100E63850);
    }
    else
    {
      uint64_t v29 = v36;
      sub_10017487C((uint64_t)v4, v36, (void (*)(void))type metadata accessor for WeatherData);
      sub_10017487C(v29, v38, (void (*)(void))type metadata accessor for WeatherData);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        v39 = (void *)sub_1007EA01C(0, v39[2] + 1, 1, (uint64_t)v39);
      }
      unint64_t v31 = v39[2];
      unint64_t v30 = v39[3];
      if (v31 >= v30 >> 1) {
        v39 = (void *)sub_1007EA01C(v30 > 1, v31 + 1, 1, (uint64_t)v39);
      }
      uint64_t v32 = v38;
      v33 = v39;
      v39[2] = v31 + 1;
      sub_10017487C(v32, (uint64_t)v33+ ((*(unsigned __int8 *)(v37 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80))+ *(void *)(v37 + 72) * v31, (void (*)(void))type metadata accessor for WeatherData);
    }
  }
  int64_t v25 = v18 + 6;
  while (v25 < v41)
  {
    unint64_t v23 = *(void *)(v40 + 8 * v25++);
    if (v23)
    {
      int64_t v24 = v25 - 1;
      goto LABEL_19;
    }
  }
LABEL_31:
  swift_release();
  return v39;
}

void *sub_100A054EC(uint64_t a1)
{
  uint64_t v19 = type metadata accessor for CurrentWeather();
  uint64_t v3 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  uint64_t v5 = (char *)v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for Date();
  uint64_t v6 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void *)(a1 + 16);
  uint64_t v10 = _swiftEmptyArrayStorage;
  if (v9)
  {
    v15[0] = v1;
    unint64_t v20 = _swiftEmptyArrayStorage;
    sub_1007F32E8();
    uint64_t v17 = type metadata accessor for WeatherData(0);
    uint64_t v11 = a1
        + ((*(unsigned __int8 *)(*(void *)(v17 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v17 - 8) + 80));
    uint64_t v16 = *(void *)(*(void *)(v17 - 8) + 72);
    uint64_t v12 = (void (**)(char *, uint64_t))(v3 + 8);
    v15[1] = v6 + 32;
    do
    {
      WeatherDataModel.currentWeather.getter();
      CurrentWeather.date.getter();
      (*v12)(v5, v19);
      uint64_t v10 = v20;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1007F32E8();
        uint64_t v10 = v20;
      }
      unint64_t v13 = v10[2];
      if (v13 >= v10[3] >> 1)
      {
        sub_1007F32E8();
        uint64_t v10 = v20;
      }
      v10[2] = v13 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))((unint64_t)v10+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(void *)(v6 + 72) * v13, v8, v18);
      unint64_t v20 = v10;
      v11 += v16;
      --v9;
    }
    while (v9);
  }
  return v10;
}

uint64_t sub_100A057F0(uint64_t a1)
{
  uint64_t v3 = sub_10017DF08(&qword_100E63A10);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for LocationComponentAction(0);
  uint64_t v7 = __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v26 - v10;
  uint64_t v12 = type metadata accessor for LocationViewAction();
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100166838(a1, (uint64_t)v14, (void (*)(void))type metadata accessor for LocationViewAction);
  if (swift_getEnumCaseMultiPayload() != 1) {
    return sub_100173018((uint64_t)v14, (void (*)(void))type metadata accessor for LocationViewAction);
  }
  sub_10017487C((uint64_t)v14, (uint64_t)v11, (void (*)(void))type metadata accessor for LocationComponentAction);
  sub_100166838((uint64_t)v11, (uint64_t)v9, (void (*)(void))type metadata accessor for LocationComponentAction);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v15 = type metadata accessor for BannerStateComputer();
    if (*(unsigned char *)(v1 + *(int *)(v15 + 28)) == 1)
    {
      uint64_t v16 = *(void *)(v1 + *(int *)(v15 + 20));
      uint64_t v17 = OBJC_IVAR____TtCV7Weather9MainState8_Storage_view;
      if ((*(unsigned char *)(v16 + v17 + *(int *)(type metadata accessor for ViewState(0) + 40) + 1) & 0xC0) == 0x40)
      {
        uint64_t v18 = v16 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_environment;
        swift_beginAccess();
        if (*(unsigned char *)(v18 + *(int *)(type metadata accessor for EnvironmentState() + 64))) {
          char v19 = 2;
        }
        else {
          char v19 = 1;
        }
        uint64_t v20 = type metadata accessor for ContentStatusBanner();
        uint64_t v21 = (uint64_t)&v5[*(int *)(v20 + 24)];
        uint64_t v22 = type metadata accessor for Date();
        _s7Weather24LocationCompositionStateOwst_0(v21, 1, 1, v22);
        *uint64_t v5 = v19;
        *(_OWORD *)(v5 + 8) = xmmword_100C3E060;
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v5, 0, 1, v20);
        sub_1001EB4CC();
      }
    }
    sub_100173018((uint64_t)v11, (void (*)(void))type metadata accessor for LocationComponentAction);
    uint64_t v23 = type metadata accessor for WeatherMapOverlayKind();
    (*(void (**)(char *, uint64_t))(*(void *)(v23 - 8) + 8))(v9, v23);
  }
  else
  {
    sub_100173018((uint64_t)v11, (void (*)(void))type metadata accessor for LocationComponentAction);
    sub_100173018((uint64_t)v9, (void (*)(void))type metadata accessor for LocationComponentAction);
  }
  uint64_t v25 = sub_10017DF08(&qword_100E66458);
  return sub_1001781AC((uint64_t)&v14[*(int *)(v25 + 64)], (uint64_t *)&unk_100E73CA0);
}

uint64_t sub_100A05B84(uint64_t a1, unint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10017DF08(&qword_100E63A10);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10017DF08(&qword_100E63770);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_10017DF08(&qword_100E63850);
  __chkstk_darwin(v15 - 8);
  uint64_t v17 = (char *)v47 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_10017DF08(&qword_100EA9998);
  uint64_t v19 = __chkstk_darwin(v18 - 8);
  uint64_t v21 = (char *)v47 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v23 = (char *)v47 - v22;
  uint64_t v51 = type metadata accessor for BannerStateComputer();
  uint64_t v24 = *(void *)(*(void *)(v3 + *(int *)(v51 + 20)) + OBJC_IVAR____TtCV7Weather9MainState8_Storage_weatherData + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1001BBE9C(a1, a2, v24);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v25 = type metadata accessor for LocationWeatherDataState(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v14, 1, v25) == 1)
  {
    uint64_t v26 = &qword_100E63770;
    uint64_t v27 = (uint64_t)v14;
LABEL_5:
    sub_1001781AC(v27, v26);
    uint64_t v29 = type metadata accessor for CurrentWeather();
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v23, 1, 1, v29);
    if (qword_100E62878 != -1) {
      swift_once();
    }
    uint64_t v30 = type metadata accessor for Logger();
    sub_1002102B0(v30, (uint64_t)qword_100F52070);
    swift_bridgeObjectRetain_n();
    unint64_t v31 = Logger.logObject.getter();
    os_log_type_t v32 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v31, v32))
    {
      uint64_t v33 = a1;
      uint64_t v34 = swift_slowAlloc();
      uint64_t v35 = swift_slowAlloc();
      *(_DWORD *)uint64_t v34 = 141558275;
      uint64_t v52 = 1752392040;
      uint64_t v53 = v35;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v34 + 12) = 2081;
      swift_bridgeObjectRetain();
      uint64_t v52 = sub_10016414C(v33, a2, &v53);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v31, v32, "Not displaying slow connection banner - location has no data. ID=%{private,mask.hash}s", (uint8_t *)v34, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    return sub_1001781AC((uint64_t)v23, &qword_100EA9998);
  }
  sub_1001177B0((uint64_t)v17);
  sub_100173018((uint64_t)v14, (void (*)(void))type metadata accessor for LocationWeatherDataState);
  uint64_t v28 = type metadata accessor for WeatherData(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v17, 1, v28) == 1)
  {
    uint64_t v26 = &qword_100E63850;
    uint64_t v27 = (uint64_t)v17;
    goto LABEL_5;
  }
  uint64_t v50 = a1;
  WeatherDataModel.currentWeather.getter();
  sub_100173018((uint64_t)v17, (void (*)(void))type metadata accessor for WeatherData);
  uint64_t v36 = type metadata accessor for CurrentWeather();
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v23, 0, 1, v36);
  if (qword_100E62878 != -1) {
    swift_once();
  }
  uint64_t v37 = type metadata accessor for Logger();
  sub_1002102B0(v37, (uint64_t)qword_100F52070);
  swift_bridgeObjectRetain_n();
  uint64_t v38 = Logger.logObject.getter();
  os_log_type_t v39 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v38, v39))
  {
    uint64_t v40 = swift_slowAlloc();
    uint64_t v41 = swift_slowAlloc();
    v47[1] = v41;
    *(_DWORD *)uint64_t v40 = 141558275;
    uint64_t v52 = 1752392040;
    uint64_t v53 = v41;
    uint64_t v48 = v36;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v40 + 12) = 2081;
    v49 = v8;
    swift_bridgeObjectRetain();
    uint64_t v52 = sub_10016414C(v50, a2, &v53);
    uint64_t v36 = v48;
    uint64_t v8 = v49;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v38, v39, "Displaying slow connection banner. ID=%{private,mask.hash}s", (uint8_t *)v40, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  sub_10006DF38((uint64_t)v23, (uint64_t)v21, &qword_100EA9998);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v21, 1, v36) == 1)
  {
    sub_1001781AC((uint64_t)v21, &qword_100EA9998);
    uint64_t v42 = 1;
  }
  else
  {
    CurrentWeather.date.getter();
    (*(void (**)(char *, uint64_t))(*(void *)(v36 - 8) + 8))(v21, v36);
    uint64_t v42 = 0;
  }
  uint64_t v43 = v50;
  uint64_t v44 = type metadata accessor for Date();
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v8, v42, 1, v44);
  *uint64_t v11 = 3;
  *((void *)v11 + 1) = v43;
  *((void *)v11 + 2) = a2;
  uint64_t v45 = type metadata accessor for ContentStatusBanner();
  sub_10024D364((uint64_t)v8, (uint64_t)&v11[*(int *)(v45 + 24)], (uint64_t *)&unk_100E73CA0);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v11, 0, 1, v45);
  swift_bridgeObjectRetain_n();
  sub_1001EB4CC();
  return sub_1001781AC((uint64_t)v23, &qword_100EA9998);
}

uint64_t sub_100A062F4(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v74 = a3;
  uint64_t v7 = sub_10017DF08(&qword_100E63A10);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  uint64_t v81 = (uint64_t)&v73 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v73 - v10;
  uint64_t v79 = type metadata accessor for Date();
  uint64_t v75 = *(void *)(v79 - 8);
  __chkstk_darwin(v79);
  v78 = (char *)&v73 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_10017DF08(&qword_100E63770);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)&v73 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_10017DF08(&qword_100E63850);
  __chkstk_darwin(v16 - 8);
  uint64_t v18 = (char *)&v73 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v77 = type metadata accessor for CurrentWeather();
  uint64_t v80 = *(void *)(v77 - 8);
  uint64_t v19 = __chkstk_darwin(v77);
  uint64_t v21 = (char *)&v73 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v23 = (char *)&v73 - v22;
  uint64_t v24 = type metadata accessor for BannerStateComputer();
  uint64_t v76 = *(int *)(v24 + 20);
  uint64_t v25 = *(void *)(*(void *)(v4 + v76) + OBJC_IVAR____TtCV7Weather9MainState8_Storage_weatherData + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v82 = a1;
  sub_1001BBE9C(a1, a2, v25);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v26 = type metadata accessor for LocationWeatherDataState(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v15, 1, v26) == 1)
  {
    uint64_t v27 = &qword_100E63770;
    uint64_t v28 = (uint64_t)v15;
    goto LABEL_5;
  }
  sub_1001177B0((uint64_t)v18);
  sub_100173018((uint64_t)v15, (void (*)(void))type metadata accessor for LocationWeatherDataState);
  uint64_t v29 = type metadata accessor for WeatherData(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v18, 1, v29) == 1)
  {
    uint64_t v27 = &qword_100E63850;
    uint64_t v28 = (uint64_t)v18;
LABEL_5:
    uint64_t result = sub_1001781AC(v28, v27);
    if (*(unsigned char *)(v4 + *(int *)(v24 + 28)) == 1)
    {
      if (qword_100E62878 != -1) {
        swift_once();
      }
      uint64_t v31 = type metadata accessor for Logger();
      sub_1002102B0(v31, (uint64_t)qword_100F52070);
      swift_bridgeObjectRetain_n();
      os_log_type_t v32 = Logger.logObject.getter();
      os_log_type_t v33 = static os_log_type_t.info.getter();
      if (os_log_type_enabled(v32, v33))
      {
        uint64_t v34 = swift_slowAlloc();
        v83[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v34 = 141558275;
        uint64_t v84 = 1752392040;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v34 + 12) = 2081;
        swift_bridgeObjectRetain();
        uint64_t v84 = sub_10016414C(v82, a2, v83);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        _os_log_impl((void *)&_mh_execute_header, v32, v33, "Removing banner (failed loading new data, no data in cache - modal takes precedence). ID=%{private,mask.hash}s", (uint8_t *)v34, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      uint64_t v46 = type metadata accessor for ContentStatusBanner();
      _s7Weather24LocationCompositionStateOwst_0(v81, 1, 1, v46);
      swift_bridgeObjectRetain();
      uint64_t result = sub_1001EB4CC();
    }
    goto LABEL_36;
  }
  WeatherDataModel.currentWeather.getter();
  sub_100173018((uint64_t)v18, (void (*)(void))type metadata accessor for WeatherData);
  uint64_t v35 = v77;
  (*(void (**)(char *, char *, uint64_t))(v80 + 32))(v23, v21, v77);
  uint64_t v36 = v78;
  CurrentWeather.date.getter();
  uint64_t v37 = static Location.currentLocationID.getter();
  uint64_t v39 = v82;
  if (v37 == v82 && v38 == a2)
  {
    swift_bridgeObjectRelease();
    goto LABEL_23;
  }
  char v41 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  if (v41)
  {
LABEL_23:
    sub_100A06F68(v74);
    (*(void (**)(char *, uint64_t))(v75 + 8))(v36, v79);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v80 + 8))(v23, v35);
    goto LABEL_36;
  }
  if (*(unsigned char *)(v4 + *(int *)(v24 + 28)) == 1)
  {
    if (qword_100E62878 != -1) {
      swift_once();
    }
    uint64_t v42 = type metadata accessor for Logger();
    sub_1002102B0(v42, (uint64_t)qword_100F52070);
    swift_bridgeObjectRetain_n();
    uint64_t v43 = Logger.logObject.getter();
    os_log_type_t v44 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v43, v44))
    {
      uint64_t v45 = swift_slowAlloc();
      uint64_t v74 = swift_slowAlloc();
      v83[0] = v74;
      *(_DWORD *)uint64_t v45 = 141558275;
      uint64_t v84 = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v45 + 12) = 2081;
      swift_bridgeObjectRetain();
      uint64_t v84 = sub_10016414C(v82, a2, v83);
      uint64_t v39 = v82;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v43, v44, "Showing no connection banner (failed loading new data while offline). ID=%{private,mask.hash}s", (uint8_t *)v45, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    uint64_t v51 = *(void *)(v4 + v76) + OBJC_IVAR____TtCV7Weather9MainState8_Storage_environment;
    swift_beginAccess();
    if (*(unsigned char *)(v51 + *(int *)(type metadata accessor for EnvironmentState() + 64))) {
      int v52 = 2;
    }
    else {
      int v52 = 1;
    }
    LODWORD(v82) = v52;
    uint64_t v53 = type metadata accessor for ContentStatusBanner();
    uint64_t v54 = (uint64_t)&v11[*(int *)(v53 + 24)];
    uint64_t v55 = v75;
    uint64_t v56 = v79;
    (*(void (**)(uint64_t, char *, uint64_t))(v75 + 16))(v54, v78, v79);
    _s7Weather24LocationCompositionStateOwst_0(v54, 0, 1, v56);
    *uint64_t v11 = v82;
    *((void *)v11 + 1) = v39;
    *((void *)v11 + 2) = a2;
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v11, 0, 1, v53);
    swift_bridgeObjectRetain_n();
    sub_1001EB4CC();
    (*(void (**)(char *, uint64_t))(v55 + 8))(v78, v56);
  }
  else
  {
    if (qword_100E62878 != -1) {
      swift_once();
    }
    uint64_t v47 = type metadata accessor for Logger();
    sub_1002102B0(v47, (uint64_t)qword_100F52070);
    swift_bridgeObjectRetain_n();
    uint64_t v48 = Logger.logObject.getter();
    os_log_type_t v49 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v48, v49))
    {
      uint64_t v50 = swift_slowAlloc();
      v83[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v50 = 141558275;
      uint64_t v84 = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v50 + 12) = 2081;
      swift_bridgeObjectRetain();
      uint64_t v84 = sub_10016414C(v82, a2, v83);
      uint64_t v39 = v82;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v48, v49, "Showing weather unavailable banner (failed loading new data while presenting data). ID=%{private,mask.hash}s", (uint8_t *)v50, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    uint64_t v57 = type metadata accessor for ContentStatusBanner();
    uint64_t v58 = v81;
    uint64_t v59 = v81 + *(int *)(v57 + 24);
    uint64_t v60 = v75;
    uint64_t v61 = v79;
    (*(void (**)(uint64_t, char *, uint64_t))(v75 + 16))(v59, v78, v79);
    _s7Weather24LocationCompositionStateOwst_0(v59, 0, 1, v61);
    *(unsigned char *)uint64_t v58 = 0;
    *(void *)(v58 + 8) = v39;
    *(void *)(v58 + 16) = a2;
    _s7Weather24LocationCompositionStateOwst_0(v58, 0, 1, v57);
    swift_bridgeObjectRetain_n();
    sub_1001EB4CC();
    (*(void (**)(char *, uint64_t))(v60 + 8))(v78, v61);
  }
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v80 + 8))(v23, v77);
LABEL_36:
  if ((*(unsigned char *)(v4 + *(int *)(v24 + 28)) & 1) == 0)
  {
    uint64_t result = sub_10007DC94();
    if (result)
    {
      uint64_t v62 = v76;
      uint64_t v63 = *(void *)(v4 + v76);
      uint64_t v64 = OBJC_IVAR____TtCV7Weather9MainState8_Storage_view;
      uint64_t result = type metadata accessor for ViewState(0);
      uint64_t v65 = result;
      if (*(void *)(v63 + v64 + *(int *)(result + 36) + 8) == 1)
      {
        uint64_t v66 = swift_bridgeObjectRetain();
        v67 = sub_100A04F34(v66);
        swift_bridgeObjectRelease();
        v68 = sub_100A054EC((uint64_t)v67);
        swift_bridgeObjectRelease();
        uint64_t v69 = type metadata accessor for ContentStatusBanner();
        uint64_t v70 = v81;
        sub_100A07FF0((uint64_t)v68, v81 + *(int *)(v69 + 24));
        swift_bridgeObjectRelease();
        *(unsigned char *)uint64_t v70 = 0;
        *(void *)(v70 + 8) = 0;
        *(void *)(v70 + 16) = 0;
        _s7Weather24LocationCompositionStateOwst_0(v70, 0, 1, v69);
        uint64_t result = sub_1001EB4CC();
        uint64_t v63 = *(void *)(v4 + v62);
        uint64_t v64 = OBJC_IVAR____TtCV7Weather9MainState8_Storage_view;
      }
      if ((*(unsigned char *)(v63 + v64 + *(int *)(v65 + 40) + 1) & 0xC0) == 0x40)
      {
        uint64_t v71 = type metadata accessor for ContentStatusBanner();
        uint64_t v72 = v81;
        _s7Weather24LocationCompositionStateOwst_0(v81 + *(int *)(v71 + 24), 1, 1, v79);
        *(unsigned char *)uint64_t v72 = 0;
        *(_OWORD *)(v72 + 8) = xmmword_100C3E060;
        _s7Weather24LocationCompositionStateOwst_0(v72, 0, 1, v71);
        return sub_1001EB4CC();
      }
    }
  }
  return result;
}

uint64_t sub_100A06F68(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v83 = a1;
  uint64_t v84 = type metadata accessor for WeatherDataAction();
  __chkstk_darwin(v84);
  uint64_t v85 = (uint64_t)&v81 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10017DF08(&qword_100E63A10);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  v86 = (char *)&v81 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v90 = (uint64_t)&v81 - v7;
  uint64_t v8 = type metadata accessor for CurrentWeather();
  uint64_t v87 = *(void *)(v8 - 8);
  uint64_t v88 = v8;
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v81 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  __chkstk_darwin(v11 - 8);
  v91 = (char *)&v81 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_10017DF08(&qword_100E63770);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)&v81 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_10017DF08(&qword_100E63850);
  uint64_t v17 = __chkstk_darwin(v16 - 8);
  uint64_t v19 = (char *)&v81 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v92 = (uint64_t)&v81 - v20;
  uint64_t v21 = sub_10017DF08((uint64_t *)&unk_100EADD50);
  __chkstk_darwin(v21 - 8);
  uint64_t v23 = (char *)&v81 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = type metadata accessor for LocationsState();
  __chkstk_darwin(v24 - 8);
  uint64_t v26 = (char *)&v81 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = type metadata accessor for CurrentLocation();
  uint64_t v28 = __chkstk_darwin(v27);
  uint64_t v94 = (uint64_t)&v81 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28);
  uint64_t v31 = (char *)&v81 - v30;
  uint64_t v93 = type metadata accessor for BannerStateComputer();
  uint64_t v32 = *(int *)(v93 + 20);
  sub_100166838(*(void *)(v2 + v32) + OBJC_IVAR____TtCV7Weather9MainState8_Storage_locations, (uint64_t)v26, (void (*)(void))type metadata accessor for LocationsState);
  sub_10006DF38((uint64_t)v26, (uint64_t)v23, (uint64_t *)&unk_100EADD50);
  sub_100173018((uint64_t)v26, (void (*)(void))type metadata accessor for LocationsState);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v23, 1, v27) == 1) {
    return sub_1001781AC((uint64_t)v23, (uint64_t *)&unk_100EADD50);
  }
  v89 = v31;
  sub_10017487C((uint64_t)v23, (uint64_t)v31, (void (*)(void))&type metadata accessor for CurrentLocation);
  uint64_t v34 = static Location.currentLocationID.getter();
  unint64_t v36 = v35;
  uint64_t v82 = v32;
  uint64_t v37 = *(void *)(*(void *)(v2 + v32) + OBJC_IVAR____TtCV7Weather9MainState8_Storage_weatherData + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1001BBE9C(v34, v36, v37);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v38 = type metadata accessor for LocationWeatherDataState(0);
  uint64_t v39 = v2;
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v15, 1, v38) == 1)
  {
    sub_1001781AC((uint64_t)v15, &qword_100E63770);
    uint64_t v40 = type metadata accessor for WeatherData(0);
    uint64_t v41 = v92;
    _s7Weather24LocationCompositionStateOwst_0(v92, 1, 1, v40);
  }
  else
  {
    uint64_t v41 = v92;
    sub_1001177B0(v92);
    sub_100173018((uint64_t)v15, (void (*)(void))type metadata accessor for LocationWeatherDataState);
  }
  uint64_t v42 = (uint64_t)v91;
  sub_10006DF38(v41, (uint64_t)v19, &qword_100E63850);
  uint64_t v43 = type metadata accessor for WeatherData(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v19, 1, v43) == 1)
  {
    sub_1001781AC((uint64_t)v19, &qword_100E63850);
    uint64_t v44 = 1;
  }
  else
  {
    WeatherDataModel.currentWeather.getter();
    sub_100173018((uint64_t)v19, (void (*)(void))type metadata accessor for WeatherData);
    CurrentWeather.date.getter();
    (*(void (**)(char *, uint64_t))(v87 + 8))(v10, v88);
    uint64_t v44 = 0;
  }
  uint64_t v45 = type metadata accessor for Date();
  _s7Weather24LocationCompositionStateOwst_0(v42, v44, 1, v45);
  uint64_t v46 = (uint64_t)v89;
  sub_100166838((uint64_t)v89, v94, (void (*)(void))&type metadata accessor for CurrentLocation);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v92 = v39;
    uint64_t v48 = v34;
    if (qword_100E62878 != -1) {
      swift_once();
    }
    uint64_t v53 = type metadata accessor for Logger();
    sub_1002102B0(v53, (uint64_t)qword_100F52070);
    swift_bridgeObjectRetain_n();
    uint64_t v54 = Logger.logObject.getter();
    os_log_type_t v55 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v54, v55))
    {
      uint64_t v56 = swift_slowAlloc();
      v95[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v56 = 141558275;
      uint64_t v96 = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v56 + 12) = 2081;
      swift_bridgeObjectRetain();
      uint64_t v96 = sub_10016414C(v48, v36, v95);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v54, v55, "Restoring uncertain location banner (loaded from cache). ID=%{private,mask.hash}s", (uint8_t *)v56, 0x16u);
      swift_arrayDestroy();
      uint64_t v46 = (uint64_t)v89;
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    uint64_t v61 = type metadata accessor for ContentStatusBanner();
    uint64_t v62 = v90;
    sub_10006DF38(v42, v90 + *(int *)(v61 + 24), (uint64_t *)&unk_100E73CA0);
    char v63 = 4;
    goto LABEL_28;
  }
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v92 = v39;
    uint64_t v48 = v34;
    if (qword_100E62878 != -1) {
      swift_once();
    }
    uint64_t v49 = type metadata accessor for Logger();
    sub_1002102B0(v49, (uint64_t)qword_100F52070);
    swift_bridgeObjectRetain_n();
    uint64_t v50 = Logger.logObject.getter();
    os_log_type_t v51 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v50, v51))
    {
      uint64_t v52 = swift_slowAlloc();
      v95[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v52 = 141558275;
      uint64_t v96 = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v52 + 12) = 2081;
      swift_bridgeObjectRetain();
      uint64_t v96 = sub_10016414C(v48, v36, v95);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v50, v51, "Restoring old location banner (loaded from cache). ID=%{private,mask.hash}s", (uint8_t *)v52, 0x16u);
      swift_arrayDestroy();
      uint64_t v46 = (uint64_t)v89;
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    uint64_t v61 = type metadata accessor for ContentStatusBanner();
    uint64_t v62 = v90;
    sub_10006DF38(v42, v90 + *(int *)(v61 + 24), (uint64_t *)&unk_100E73CA0);
    char v63 = 5;
LABEL_28:
    *(unsigned char *)uint64_t v62 = v63;
    goto LABEL_29;
  }
  if (*(unsigned char *)(v39 + *(int *)(v93 + 28)) == 1)
  {
    if (qword_100E62878 != -1) {
      swift_once();
    }
    uint64_t v57 = type metadata accessor for Logger();
    sub_1002102B0(v57, (uint64_t)qword_100F52070);
    swift_bridgeObjectRetain_n();
    uint64_t v58 = Logger.logObject.getter();
    os_log_type_t v59 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v58, v59))
    {
      uint64_t v60 = swift_slowAlloc();
      v95[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v60 = 141558275;
      uint64_t v96 = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v60 + 12) = 2081;
      swift_bridgeObjectRetain();
      uint64_t v96 = sub_10016414C(v34, v36, v95);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v58, v59, "Showing no connection banner. ID=%{private,mask.hash}s", (uint8_t *)v60, 0x16u);
      swift_arrayDestroy();
      uint64_t v46 = (uint64_t)v89;
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    uint64_t v71 = v34;
    uint64_t v72 = *(void *)(v39 + v82) + OBJC_IVAR____TtCV7Weather9MainState8_Storage_environment;
    swift_beginAccess();
    if (*(unsigned char *)(v72 + *(int *)(type metadata accessor for EnvironmentState() + 64))) {
      char v73 = 2;
    }
    else {
      char v73 = 1;
    }
    uint64_t v74 = type metadata accessor for ContentStatusBanner();
    uint64_t v75 = (uint64_t)v86;
    sub_10006DF38(v42, (uint64_t)&v86[*(int *)(v74 + 24)], (uint64_t *)&unk_100E73CA0);
    *(unsigned char *)uint64_t v75 = v73;
    *(void *)(v75 + 8) = v71;
    *(void *)(v75 + 16) = v36;
    _s7Weather24LocationCompositionStateOwst_0(v75, 0, 1, v74);
    swift_bridgeObjectRetain();
    sub_1001EB4CC();
    uint64_t v41 = v92;
    goto LABEL_31;
  }
  uint64_t v92 = v39;
  uint64_t v64 = v85;
  sub_100166838(v83, v85, (void (*)(void))type metadata accessor for WeatherDataAction);
  uint64_t v48 = v34;
  if (swift_getEnumCaseMultiPayload() != 2)
  {
    sub_100173018(v64, (void (*)(void))type metadata accessor for WeatherDataAction);
    if (qword_100E62878 != -1) {
      swift_once();
    }
    uint64_t v76 = type metadata accessor for Logger();
    sub_1002102B0(v76, (uint64_t)qword_100F52070);
    swift_bridgeObjectRetain_n();
    uint64_t v77 = Logger.logObject.getter();
    os_log_type_t v78 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v77, v78))
    {
      uint64_t v79 = swift_slowAlloc();
      v95[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v79 = 141558275;
      uint64_t v96 = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v79 + 12) = 2081;
      swift_bridgeObjectRetain();
      uint64_t v96 = sub_10016414C(v48, v36, v95);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v77, v78, "Removing banner (successfully loaded new data). ID=%{private,mask.hash}s", (uint8_t *)v79, 0x16u);
      swift_arrayDestroy();
      uint64_t v46 = (uint64_t)v89;
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    uint64_t v80 = type metadata accessor for ContentStatusBanner();
    _s7Weather24LocationCompositionStateOwst_0(v90, 1, 1, v80);
    goto LABEL_30;
  }
  uint64_t v65 = *(void *)(v64 + 16);
  unint64_t v66 = *(void *)(v64 + 24);
  swift_bridgeObjectRelease();
  sub_100303D6C(v65, v66);
  swift_bridgeObjectRelease();
  if (qword_100E62878 != -1) {
    swift_once();
  }
  uint64_t v67 = type metadata accessor for Logger();
  sub_1002102B0(v67, (uint64_t)qword_100F52070);
  swift_bridgeObjectRetain_n();
  v68 = Logger.logObject.getter();
  os_log_type_t v69 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v68, v69))
  {
    uint64_t v70 = swift_slowAlloc();
    v95[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v70 = 141558275;
    uint64_t v96 = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v70 + 12) = 2081;
    swift_bridgeObjectRetain();
    uint64_t v96 = sub_10016414C(v48, v36, v95);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v68, v69, "Showing weather unavailable banner (failed loading new data). ID=%{private,mask.hash}s", (uint8_t *)v70, 0x16u);
    swift_arrayDestroy();
    uint64_t v46 = (uint64_t)v89;
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v61 = type metadata accessor for ContentStatusBanner();
  uint64_t v62 = v90;
  sub_10006DF38(v42, v90 + *(int *)(v61 + 24), (uint64_t *)&unk_100E73CA0);
  *(unsigned char *)uint64_t v62 = 0;
LABEL_29:
  *(void *)(v62 + 8) = v48;
  *(void *)(v62 + 16) = v36;
  _s7Weather24LocationCompositionStateOwst_0(v62, 0, 1, v61);
  swift_bridgeObjectRetain();
LABEL_30:
  sub_1001EB4CC();
LABEL_31:
  sub_1001781AC(v42, (uint64_t *)&unk_100E73CA0);
  sub_1001781AC(v41, &qword_100E63850);
  sub_100173018(v46, (void (*)(void))&type metadata accessor for CurrentLocation);
  return sub_100173018(v94, (void (*)(void))&type metadata accessor for CurrentLocation);
}

uint64_t sub_100A07FF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v29 - v8;
  uint64_t v10 = type metadata accessor for Date();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v29 - v15;
  uint64_t v17 = *(void *)(a1 + 16);
  if (!v17)
  {
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v9, 1, 1, v10);
    goto LABEL_13;
  }
  uint64_t v18 = *(void (**)(char *, unint64_t, uint64_t))(v11 + 16);
  unint64_t v31 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v34 = v18;
  v18(v9, a1 + v31, v10);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v9, 0, 1, v10);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v10) == 1)
  {
LABEL_13:
    sub_1001781AC((uint64_t)v9, (uint64_t *)&unk_100E73CA0);
    uint64_t v26 = a2;
    uint64_t v27 = 1;
    return _s7Weather24LocationCompositionStateOwst_0(v26, v27, 1, v10);
  }
  uint64_t v30 = a2;
  uint64_t v33 = v11;
  uint64_t v19 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
  v19(v16, v9, v10);
  uint64_t v32 = a1;
  swift_bridgeObjectRetain();
  uint64_t v20 = v17 - 1;
  if (v20)
  {
    uint64_t v21 = (void (**)(char *, uint64_t))(v33 + 8);
    uint64_t v33 = *(void *)(v33 + 72);
    unint64_t v22 = v32 + v33 + v31;
    while (1)
    {
      v34(v7, v22, v10);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v7, 0, 1, v10);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v7, 1, v10) == 1) {
        break;
      }
      v19(v14, v7, v10);
      sub_1001B35F8();
      char v23 = dispatch thunk of static Comparable.< infix(_:_:)();
      uint64_t v24 = *v21;
      if (v23)
      {
        v24(v16, v10);
        v19(v16, v14, v10);
      }
      else
      {
        v24(v14, v10);
      }
      v22 += v33;
      if (!--v20) {
        goto LABEL_10;
      }
    }
  }
  else
  {
LABEL_10:
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v7, 1, 1, v10);
  }
  swift_bridgeObjectRelease();
  sub_1001781AC((uint64_t)v7, (uint64_t *)&unk_100E73CA0);
  uint64_t v25 = v30;
  v19((char *)v30, v16, v10);
  uint64_t v26 = v25;
  uint64_t v27 = 0;
  return _s7Weather24LocationCompositionStateOwst_0(v26, v27, 1, v10);
}

uint64_t sub_100A0835C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return 0;
  }
  double v2 = *(double *)(a1 + 32);
  uint64_t v3 = v1 - 1;
  if (v1 != 1)
  {
    uint64_t v4 = (double *)(a1 + 40);
    do
    {
      double v5 = *v4++;
      double v6 = v5;
      if (v2 < v5) {
        double v2 = v6;
      }
      --v3;
    }
    while (v3);
  }
  return *(void *)&v2;
}

uint64_t sub_100A083A0(uint64_t a1)
{
  uint64_t v2 = sub_10017DF08(&qword_100E63A10);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = &v39[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = type metadata accessor for CurrentWeather();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v39[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = sub_10017DF08(&qword_100E63770);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = &v39[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = sub_10017DF08(&qword_100E63850);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = &v39[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v15 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  __chkstk_darwin(v15 - 8);
  uint64_t v17 = &v39[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v18 = type metadata accessor for CurrentLocation();
  __chkstk_darwin(v18);
  uint64_t v20 = &v39[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_100166838(a1, (uint64_t)v20, (void (*)(void))&type metadata accessor for CurrentLocation);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  int v22 = 5;
  switch(EnumCaseMultiPayload)
  {
    case 1:
      goto LABEL_8;
    case 2:
      int v22 = 4;
      goto LABEL_8;
    case 3:
      goto LABEL_6;
    default:
      uint64_t v23 = *(void *)(v41 + *(int *)(type metadata accessor for BannerStateComputer() + 20))
          + OBJC_IVAR____TtCV7Weather9MainState8_Storage_environment;
      swift_beginAccess();
      if (*(unsigned char *)(v23 + 2) != 4)
      {
LABEL_6:
        sub_100173018((uint64_t)v20, (void (*)(void))&type metadata accessor for CurrentLocation);
        static Location.currentLocationID.getter();
        uint64_t v24 = type metadata accessor for ContentStatusBanner();
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v4, 1, 1, v24);
        type metadata accessor for BannerStateComputer();
        return sub_1001EB4CC();
      }
      if (*(unsigned char *)(v23 + *(int *)(type metadata accessor for EnvironmentState() + 64))) {
        int v22 = 2;
      }
      else {
        int v22 = 1;
      }
LABEL_8:
      int v40 = v22;
      sub_100173018((uint64_t)v20, (void (*)(void))&type metadata accessor for CurrentLocation);
      uint64_t v26 = *(void *)(*(void *)(v41 + *(int *)(type metadata accessor for BannerStateComputer() + 20))
                      + OBJC_IVAR____TtCV7Weather9MainState8_Storage_weatherData
                      + 16);
      swift_bridgeObjectRetain();
      uint64_t v27 = static Location.currentLocationID.getter();
      sub_1001BBE9C(v27, v28, v26);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v29 = type metadata accessor for LocationWeatherDataState(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v11, 1, v29) == 1)
      {
        uint64_t v30 = &qword_100E63770;
        uint64_t v31 = (uint64_t)v11;
LABEL_12:
        sub_1001781AC(v31, v30);
        uint64_t v33 = 1;
        goto LABEL_14;
      }
      sub_1001177B0((uint64_t)v14);
      sub_100173018((uint64_t)v11, (void (*)(void))type metadata accessor for LocationWeatherDataState);
      uint64_t v32 = type metadata accessor for WeatherData(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v14, 1, v32) == 1)
      {
        uint64_t v30 = &qword_100E63850;
        uint64_t v31 = (uint64_t)v14;
        goto LABEL_12;
      }
      WeatherDataModel.currentWeather.getter();
      sub_100173018((uint64_t)v14, (void (*)(void))type metadata accessor for WeatherData);
      CurrentWeather.date.getter();
      (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
      uint64_t v33 = 0;
LABEL_14:
      uint64_t v34 = type metadata accessor for Date();
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v17, v33, 1, v34);
      static Location.currentLocationID.getter();
      uint64_t v35 = static Location.currentLocationID.getter();
      uint64_t v37 = v36;
      uint64_t v38 = type metadata accessor for ContentStatusBanner();
      sub_10006DF38((uint64_t)v17, (uint64_t)&v4[*(int *)(v38 + 24)], (uint64_t *)&unk_100E73CA0);
      *uint64_t v4 = v40;
      *((void *)v4 + 1) = v35;
      *((void *)v4 + 2) = v37;
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v4, 0, 1, v38);
      sub_1001EB4CC();
      return sub_1001781AC((uint64_t)v17, (uint64_t *)&unk_100E73CA0);
  }
}

uint64_t *sub_100A08908(uint64_t *a1, unsigned __int8 *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *(char **)a2;
    *a1 = *(void *)a2;
    a1 = (uint64_t *)&v9[(v5 + 16) & ~(unint64_t)v5];
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for MainAction();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v8 = type metadata accessor for AppConfiguration();
        (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
        goto LABEL_216;
      case 2u:
        uint64_t v17 = type metadata accessor for EnvironmentAction();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 2u:
            uint64_t v28 = type metadata accessor for Locale();
            (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v28 - 8) + 16))(a1, a2, v28);
            goto LABEL_215;
          case 3u:
            uint64_t v36 = type metadata accessor for ActivityAction();
            int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
            if (EnumCaseMultiPayload == 1)
            {
              type metadata accessor for PreviewLocation();
              switch(swift_getEnumCaseMultiPayload())
              {
                case 1u:
                  uint64_t v207 = type metadata accessor for LocationOfInterest();
                  (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v207 - 8) + 16))(a1, a2, v207);
                  break;
                case 2u:
                  uint64_t v208 = *((void *)a2 + 1);
                  v399 = *(void **)a2;
                  *a1 = *(void *)a2;
                  a1[1] = v208;
                  uint64_t v209 = *((void *)a2 + 3);
                  a1[2] = *((void *)a2 + 2);
                  a1[3] = v209;
                  uint64_t v210 = *((void *)a2 + 5);
                  a1[4] = *((void *)a2 + 4);
                  a1[5] = v210;
                  a1[6] = *((void *)a2 + 6);
                  uint64_t v211 = type metadata accessor for SearchLocation();
                  uint64_t v212 = *(int *)(v211 + 32);
                  v405 = (char *)a1 + v212;
                  uint64_t v410 = v211;
                  v388 = &a2[v212];
                  uint64_t v213 = type metadata accessor for Location();
                  id v214 = v399;
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v388, 1, v213))
                  {
                    uint64_t v215 = sub_10017DF08(&qword_100E639E8);
                    memcpy(v405, v388, *(void *)(*(void *)(v215 - 8) + 64));
                  }
                  else
                  {
                    (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v213 - 8) + 16))(v405, v388, v213);
                    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v405, 0, 1, v213);
                  }
                  uint64_t v362 = *(int *)(v410 + 36);
                  v363 = (char *)a1 + v362;
                  v364 = &a2[v362];
                  *(_OWORD *)v363 = *(_OWORD *)v364;
                  v363[16] = v364[16];
                  break;
                case 3u:
                  *(_OWORD *)a1 = *(_OWORD *)a2;
                  uint64_t v216 = *((void *)a2 + 3);
                  a1[2] = *((void *)a2 + 2);
                  a1[3] = v216;
                  swift_bridgeObjectRetain();
                  break;
                default:
                  uint64_t v146 = type metadata accessor for Location();
                  (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v146 - 8) + 16))(a1, a2, v146);
                  break;
              }
              swift_storeEnumTagMultiPayload();
            }
            else
            {
              if (EnumCaseMultiPayload) {
                goto LABEL_101;
              }
              type metadata accessor for SavedLocation();
              if (swift_getEnumCaseMultiPayload() == 1) {
                uint64_t v94 = type metadata accessor for SavedLocation.Placeholder();
              }
              else {
                uint64_t v94 = type metadata accessor for Location();
              }
              (*(void (**)(uint64_t *, unsigned __int8 *))(*(void *)(v94 - 8) + 16))(a1, a2);
              swift_storeEnumTagMultiPayload();
            }
            goto LABEL_214;
          case 4u:
            uint64_t v84 = *((void *)a2 + 1);
            *a1 = *(void *)a2;
            a1[1] = v84;
            swift_bridgeObjectRetain();
            goto LABEL_215;
          case 9u:
            unint64_t v95 = *((void *)a2 + 1);
            if (v95 >= 2)
            {
              *a1 = *(void *)a2;
              a1[1] = v95;
              swift_bridgeObjectRetain();
            }
            else
            {
              *(_OWORD *)a1 = *(_OWORD *)a2;
            }
            goto LABEL_215;
          case 0xBu:
            uint64_t v36 = type metadata accessor for ConfiguredUnitsAction();
            int v96 = swift_getEnumCaseMultiPayload();
            if (v96 == 1)
            {
              uint64_t v147 = type metadata accessor for UnitConfiguration.Temperature();
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v147))
              {
                uint64_t v148 = sub_10017DF08(&qword_100E6F620);
                memcpy(a1, a2, *(void *)(*(void *)(v148 - 8) + 64));
              }
              else
              {
                (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v147 - 8) + 16))(a1, a2, v147);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v147);
              }
            }
            else
            {
              if (v96) {
                goto LABEL_101;
              }
              uint64_t v97 = type metadata accessor for ConfiguredUnit();
              (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v97 - 8) + 16))(a1, a2, v97);
            }
            break;
          default:
            goto LABEL_61;
        }
        goto LABEL_214;
      case 3u:
        uint64_t v10 = type metadata accessor for LocationsAction();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            uint64_t v11 = type metadata accessor for CurrentLocation();
            if (swift_getEnumCaseMultiPayload() > 2)
            {
              memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
            }
            else
            {
              uint64_t v168 = type metadata accessor for Location();
              (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v168 - 8) + 16))(a1, a2, v168);
              swift_storeEnumTagMultiPayload();
            }
            goto LABEL_142;
          case 1u:
            uint64_t v78 = type metadata accessor for Location();
            (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v78 - 8) + 16))(a1, a2, v78);
            uint64_t v79 = sub_10017DF08(&qword_100E6F628);
            *((unsigned char *)a1 + *(int *)(v79 + 48)) = a2[*(int *)(v79 + 48)];
            goto LABEL_142;
          case 2u:
            uint64_t v80 = *((void *)a2 + 1);
            *a1 = *(void *)a2;
            a1[1] = v80;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            goto LABEL_142;
          case 5u:
            *a1 = *(void *)a2;
            swift_bridgeObjectRetain();
            goto LABEL_142;
          case 6u:
            uint64_t v85 = *(void *)a2;
            uint64_t v86 = *((void *)a2 + 1);
            unsigned __int8 v87 = a2[16];
            sub_10015458C(*(void *)a2, v86, v87);
            *a1 = v85;
            a1[1] = v86;
            *((unsigned char *)a1 + 16) = v87;
LABEL_142:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
            break;
        }
        goto LABEL_216;
      case 4u:
        uint64_t v29 = type metadata accessor for NotificationsAction();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            uint64_t v30 = type metadata accessor for LocationModel();
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v30))
            {
              uint64_t v31 = type metadata accessor for NotificationLocation();
              memcpy(a1, a2, *(void *)(*(void *)(v31 - 8) + 64));
            }
            else
            {
              (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v30 - 8) + 16))(a1, a2, v30);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v30);
            }
            uint64_t v140 = *(int *)(sub_10017DF08((uint64_t *)&unk_100EAC3E0) + 48);
            v141 = (char *)a1 + v140;
            v142 = &a2[v140];
            uint64_t v143 = type metadata accessor for URL();
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v142, 1, v143))
            {
              uint64_t v144 = sub_10017DF08(&qword_100E749B0);
              memcpy(v141, v142, *(void *)(*(void *)(v144 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v143 - 8) + 16))(v141, v142, v143);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v141, 0, 1, v143);
            }
            goto LABEL_119;
          case 2u:
            uint64_t v98 = type metadata accessor for NotificationSubscription.Location();
            (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v98 - 8) + 16))(a1, a2, v98);
            uint64_t v99 = *(int *)(sub_10017DF08(&qword_100E6F630) + 48);
            v100 = (char *)a1 + v99;
            v101 = &a2[v99];
            uint64_t v102 = type metadata accessor for NotificationSubscription.Kind();
            (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v102 - 8) + 16))(v100, v101, v102);
            goto LABEL_119;
          case 3u:
          case 4u:
            *a1 = *(void *)a2;
            swift_bridgeObjectRetain();
            goto LABEL_119;
          case 5u:
            uint64_t v103 = type metadata accessor for Location();
            (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v103 - 8) + 16))(a1, a2, v103);
            uint64_t v104 = *(int *)(sub_10017DF08(&qword_100E6F638) + 48);
            v105 = (char *)a1 + v104;
            v106 = &a2[v104];
            uint64_t v107 = type metadata accessor for NotificationSubscription.Kind();
            (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v107 - 8) + 16))(v105, v106, v107);
LABEL_119:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(a1, a2, *(void *)(*(void *)(v29 - 8) + 64));
            break;
        }
        goto LABEL_216;
      case 5u:
        uint64_t v17 = type metadata accessor for NotificationsOptInAction();
        int v32 = swift_getEnumCaseMultiPayload();
        switch(v32)
        {
          case 4:
            goto LABEL_15;
          case 3:
            *a1 = *(void *)a2;
            *((unsigned char *)a1 + 8) = a2[8];
            swift_bridgeObjectRetain();
            break;
          case 2:
            uint64_t v33 = type metadata accessor for Location();
            (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v33 - 8) + 16))(a1, a2, v33);
            uint64_t v34 = sub_10017DF08(&qword_100E6BBD8);
            *((unsigned char *)a1 + *(int *)(v34 + 48)) = a2[*(int *)(v34 + 48)];
            break;
          default:
            goto LABEL_61;
        }
        goto LABEL_215;
      case 6u:
        uint64_t v12 = type metadata accessor for ViewAction();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            uint64_t v13 = type metadata accessor for ListViewAction();
            int v14 = swift_getEnumCaseMultiPayload();
            if (v14 == 2) {
              goto LABEL_121;
            }
            if (v14) {
              goto LABEL_168;
            }
            uint64_t v15 = type metadata accessor for LocationModel();
            (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v15 - 8) + 16))(a1, a2, v15);
            uint64_t v16 = sub_10017DF08(&qword_100E6F640);
            *((unsigned char *)a1 + *(int *)(v16 + 48)) = a2[*(int *)(v16 + 48)];
            goto LABEL_208;
          case 1u:
            uint64_t v13 = type metadata accessor for LocationViewerViewAction();
            int v81 = swift_getEnumCaseMultiPayload();
            if (v81 == 2)
            {
LABEL_121:
              uint64_t v145 = type metadata accessor for Location.Identifier();
              (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v145 - 8) + 16))(a1, a2, v145);
            }
            else if (v81 == 1)
            {
              uint64_t v169 = type metadata accessor for WeatherMapOverlayKind();
              (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v169 - 8) + 16))(a1, a2, v169);
            }
            else
            {
              if (v81)
              {
LABEL_168:
                memcpy(a1, a2, *(void *)(*(void *)(v13 - 8) + 64));
                goto LABEL_209;
              }
              uint64_t v82 = type metadata accessor for LocationModel();
              (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v82 - 8) + 16))(a1, a2, v82);
            }
LABEL_208:
            swift_storeEnumTagMultiPayload();
LABEL_209:
            swift_storeEnumTagMultiPayload();
            break;
          case 3u:
            uint64_t v13 = type metadata accessor for SearchViewAction();
            switch(swift_getEnumCaseMultiPayload())
            {
              case 0u:
                uint64_t v83 = type metadata accessor for CodableError();
                (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v83 - 8) + 16))(a1, a2, v83);
                goto LABEL_208;
              case 1u:
                *a1 = *(void *)a2;
                swift_bridgeObjectRetain();
                goto LABEL_208;
              case 2u:
                uint64_t v196 = *((void *)a2 + 1);
                *a1 = *(void *)a2;
                a1[1] = v196;
                swift_bridgeObjectRetain();
                goto LABEL_208;
              case 3u:
              case 6u:
                uint64_t v197 = type metadata accessor for Location();
                (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v197 - 8) + 16))(a1, a2, v197);
                goto LABEL_208;
              case 4u:
                uint64_t v198 = type metadata accessor for LocationOfInterest();
                (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v198 - 8) + 16))(a1, a2, v198);
                goto LABEL_208;
              case 5u:
                uint64_t v199 = *((void *)a2 + 1);
                v398 = *(void **)a2;
                *a1 = *(void *)a2;
                a1[1] = v199;
                uint64_t v200 = *((void *)a2 + 3);
                a1[2] = *((void *)a2 + 2);
                a1[3] = v200;
                uint64_t v201 = *((void *)a2 + 5);
                a1[4] = *((void *)a2 + 4);
                a1[5] = v201;
                a1[6] = *((void *)a2 + 6);
                uint64_t v202 = type metadata accessor for SearchLocation();
                uint64_t v203 = *(int *)(v202 + 32);
                v404 = (char *)a1 + v203;
                uint64_t v409 = v202;
                v204 = &a2[v203];
                uint64_t v395 = type metadata accessor for Location();
                id v205 = v398;
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v204, 1, v395))
                {
                  uint64_t v206 = sub_10017DF08(&qword_100E639E8);
                  memcpy(v404, v204, *(void *)(*(void *)(v206 - 8) + 64));
                }
                else
                {
                  (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v395 - 8) + 16))(v404, v204, v395);
                  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v404, 0, 1, v395);
                }
                uint64_t v359 = *(int *)(v409 + 36);
                v360 = (char *)a1 + v359;
                v361 = &a2[v359];
                *(_OWORD *)v360 = *(_OWORD *)v361;
                v360[16] = v361[16];
                goto LABEL_208;
              default:
                goto LABEL_168;
            }
          case 4u:
            uint64_t v88 = type metadata accessor for InteractiveMapViewAction();
            switch(swift_getEnumCaseMultiPayload())
            {
              case 0u:
              case 1u:
              case 2u:
              case 4u:
                uint64_t v195 = type metadata accessor for Location();
                (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v195 - 8) + 16))(a1, a2, v195);
                goto LABEL_164;
              case 3u:
                uint64_t v194 = type metadata accessor for WeatherMapOverlayKind();
                (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v194 - 8) + 16))(a1, a2, v194);
LABEL_164:
                swift_storeEnumTagMultiPayload();
                break;
              default:
                memcpy(a1, a2, *(void *)(*(void *)(v88 - 8) + 64));
                break;
            }
            goto LABEL_209;
          case 5u:
            *(_OWORD *)a1 = *(_OWORD *)a2;
            *((unsigned char *)a1 + 16) = a2[16];
            *((unsigned char *)a1 + 17) = a2[17];
            *((unsigned char *)a1 + 18) = a2[18];
            uint64_t v89 = *(int *)(type metadata accessor for DisplayMetrics() + 36);
            uint64_t v90 = (char *)a1 + v89;
            v91 = &a2[v89];
            uint64_t v92 = type metadata accessor for DynamicTypeSize();
            (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v92 - 8) + 16))(v90, v91, v92);
            goto LABEL_209;
          default:
            memcpy(a1, a2, *(void *)(*(void *)(v12 - 8) + 64));
            goto LABEL_216;
        }
        goto LABEL_216;
      case 7u:
        uint64_t v17 = type metadata accessor for ModalViewAction();
        int v35 = swift_getEnumCaseMultiPayload();
        if (v35 == 3)
        {
          uint64_t v46 = *(void *)a2;
          if ((~*(void *)a2 & 0xF000000000000006) != 0)
          {
            uint64_t v108 = *((void *)a2 + 1);
            uint64_t v109 = *((void *)a2 + 2);
            uint64_t v110 = *((void *)a2 + 3);
            uint64_t v111 = *((void *)a2 + 5);
            uint64_t v383 = *((void *)a2 + 6);
            uint64_t v387 = *((void *)a2 + 4);
            uint64_t v379 = *((void *)a2 + 7);
            uint64_t v393 = *((void *)a2 + 8);
            uint64_t v397 = *((void *)a2 + 9);
            uint64_t v403 = *((void *)a2 + 10);
            uint64_t v407 = *((void *)a2 + 11);
            sub_100274EDC(v46);
            *a1 = v46;
            a1[1] = v108;
            a1[2] = v109;
            a1[3] = v110;
            a1[4] = v387;
            a1[5] = v111;
            a1[6] = v383;
            a1[7] = v379;
            a1[8] = v393;
            a1[9] = v397;
            a1[10] = v403;
            a1[11] = v407;
          }
          else
          {
            memcpy(a1, a2, 0x60uLL);
          }
        }
        else
        {
          if (v35) {
            goto LABEL_61;
          }
          uint64_t v36 = type metadata accessor for LocationPreviewViewAction();
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            uint64_t v37 = type metadata accessor for Location();
            (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v37 - 8) + 16))(a1, a2, v37);
            swift_storeEnumTagMultiPayload();
          }
          else
          {
LABEL_101:
            memcpy(a1, a2, *(void *)(*(void *)(v36 - 8) + 64));
          }
        }
        goto LABEL_215;
      case 8u:
        uint64_t v17 = type metadata accessor for LocationViewAction();
        int v38 = swift_getEnumCaseMultiPayload();
        if (v38 == 2)
        {
          uint64_t v57 = type metadata accessor for Location();
          (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v57 - 8) + 16))(a1, a2, v57);
          uint64_t v58 = *(int *)(sub_10017DF08(&qword_100E66450) + 48);
          os_log_type_t v59 = (char *)a1 + v58;
          uint64_t v60 = &a2[v58];
          uint64_t v61 = type metadata accessor for LocationOfInterest();
          (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v61 - 8) + 16))(v59, v60, v61);
          uint64_t v62 = *(int *)(sub_10017DF08(&qword_100E66448) + 48);
          char v63 = (char *)a1 + v62;
          uint64_t v64 = &a2[v62];
          long long v65 = *((_OWORD *)v64 + 1);
          *(_OWORD *)char v63 = *(_OWORD *)v64;
          *((_OWORD *)v63 + 1) = v65;
          v63[32] = v64[32];
        }
        else if (v38 == 1)
        {
          uint64_t v66 = type metadata accessor for LocationComponentAction(0);
          switch(swift_getEnumCaseMultiPayload())
          {
            case 0u:
              uint64_t v67 = type metadata accessor for URL();
              (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v67 - 8) + 16))(a1, a2, v67);
              uint64_t v68 = sub_10017DF08(&qword_100E66478);
              *((unsigned char *)a1 + *(int *)(v68 + 48)) = a2[*(int *)(v68 + 48)];
              goto LABEL_133;
            case 1u:
              uint64_t v149 = type metadata accessor for WeatherMapOverlayKind();
              (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v149 - 8) + 16))(a1, a2, v149);
              goto LABEL_133;
            case 2u:
              uint64_t v150 = type metadata accessor for DetailCondition();
              (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v150 - 8) + 16))(a1, a2, v150);
              uint64_t v151 = sub_10017DF08(&qword_100E66488);
              *((unsigned char *)a1 + *(int *)(v151 + 48)) = a2[*(int *)(v151 + 48)];
              goto LABEL_133;
            case 4u:
              *(unsigned char *)a1 = *a2;
              uint64_t v152 = *(int *)(sub_10017DF08(&qword_100E66480) + 48);
              v153 = (char *)a1 + v152;
              v154 = &a2[v152];
              uint64_t v155 = type metadata accessor for Location();
              (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v155 - 8) + 16))(v153, v154, v155);
LABEL_133:
              swift_storeEnumTagMultiPayload();
              break;
            default:
              memcpy(a1, a2, *(void *)(*(void *)(v66 - 8) + 64));
              break;
          }
          uint64_t v156 = sub_10017DF08(&qword_100E66458);
          uint64_t v157 = *(int *)(v156 + 48);
          v158 = (char *)a1 + v157;
          v159 = &a2[v157];
          long long v160 = *((_OWORD *)v159 + 1);
          *(_OWORD *)v158 = *(_OWORD *)v159;
          *((_OWORD *)v158 + 1) = v160;
          v158[32] = v159[32];
          uint64_t v161 = *(int *)(v156 + 64);
          v162 = (char *)a1 + v161;
          v163 = &a2[v161];
          uint64_t v164 = type metadata accessor for Date();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v163, 1, v164))
          {
            uint64_t v165 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
            memcpy(v162, v163, *(void *)(*(void *)(v165 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v164 - 8) + 16))(v162, v163, v164);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v162, 0, 1, v164);
          }
        }
        else
        {
          if (v38) {
            goto LABEL_61;
          }
LABEL_38:
          uint64_t v39 = type metadata accessor for Location();
          (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v39 - 8) + 16))(a1, a2, v39);
        }
        goto LABEL_215;
      case 9u:
        type metadata accessor for WeatherDataAction();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 2u:
            uint64_t v116 = *((void *)a2 + 1);
            *a1 = *(void *)a2;
            a1[1] = v116;
            v117 = (uint64_t *)(a2 + 16);
            unint64_t v118 = *((void *)a2 + 3);
            swift_bridgeObjectRetain();
            if (v118 >= 0xE)
            {
              a1[2] = *v117;
              a1[3] = v118;
              swift_bridgeObjectRetain();
            }
            else
            {
              *((_OWORD *)a1 + 1) = *(_OWORD *)v117;
            }
            uint64_t v166 = *((void *)a2 + 5);
            a1[4] = *((void *)a2 + 4);
            a1[5] = v166;
            goto LABEL_139;
          case 3u:
          case 9u:
            uint64_t v69 = *((void *)a2 + 1);
            *a1 = *(void *)a2;
            a1[1] = v69;
            uint64_t v70 = *((void *)a2 + 3);
            a1[2] = *((void *)a2 + 2);
            a1[3] = v70;
            swift_bridgeObjectRetain();
            goto LABEL_139;
          case 4u:
            uint64_t v119 = *((void *)a2 + 1);
            *a1 = *(void *)a2;
            a1[1] = v119;
            swift_bridgeObjectRetain();
            v394 = (int *)sub_10017DF08(&qword_100E6BBC0);
            uint64_t v120 = v394[12];
            v121 = (uint64_t *)((char *)a1 + v120);
            v122 = &a2[v120];
            uint64_t v123 = *(void *)&a2[v120 + 8];
            void *v121 = *(void *)&a2[v120];
            v121[1] = v123;
            v408 = (int *)type metadata accessor for WeatherData(0);
            uint64_t v124 = v408[5];
            v125 = (char *)v121 + v124;
            v126 = (char *)&v122[v124];
            uint64_t v127 = type metadata accessor for Locale();
            swift_bridgeObjectRetain();
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v126, 1, v127))
            {
              uint64_t v128 = sub_10017DF08(&qword_100E63730);
              memcpy(v125, v126, *(void *)(*(void *)(v128 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v127 - 8) + 16))(v125, v126, v127);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v125, 0, 1, v127);
            }
            uint64_t v170 = v408[6];
            v171 = (char *)v121 + v170;
            v172 = (char *)&v122[v170];
            uint64_t v173 = type metadata accessor for WeatherDataModel();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v173 - 8) + 16))(v171, v172, v173);
            uint64_t v174 = v408[7];
            v175 = (char *)v121 + v174;
            v176 = (char *)&v122[v174];
            uint64_t v177 = sub_10017DF08(&qword_100E63738);
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v176, 1, v177))
            {
              uint64_t v178 = type metadata accessor for WeatherData.CachingState(0);
              memcpy(v175, v176, *(void *)(*(void *)(v178 - 8) + 64));
            }
            else
            {
              uint64_t v179 = type metadata accessor for Date();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v179 - 8) + 16))(v175, v176, v179);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v175, 0, 1, v177);
            }
            uint64_t v180 = v408[8];
            v181 = (void *)((char *)v121 + v180);
            v182 = (char *)&v122[v180];
            uint64_t v183 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
            int v184 = swift_getEnumCaseMultiPayload();
            if (v184 == 1)
            {
              uint64_t v186 = type metadata accessor for WeatherStatisticsModel();
              (*(void (**)(void *, char *, uint64_t))(*(void *)(v186 - 8) + 16))(v181, v182, v186);
              goto LABEL_155;
            }
            if (!v184)
            {
              uint64_t v185 = *((void *)v182 + 1);
              void *v181 = *(void *)v182;
              v181[1] = v185;
              swift_bridgeObjectRetain();
LABEL_155:
              swift_storeEnumTagMultiPayload();
              goto LABEL_157;
            }
            memcpy(v181, v182, *(void *)(*(void *)(v183 - 8) + 64));
LABEL_157:
            uint64_t v187 = v408[9];
            v188 = (char *)v121 + v187;
            v189 = (char *)&v122[v187];
            uint64_t v190 = type metadata accessor for WeatherDataOverrides();
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v189, 1, v190))
            {
              uint64_t v191 = sub_10017DF08(&qword_100E63740);
              memcpy(v188, v189, *(void *)(*(void *)(v191 - 8) + 64));
            }
            else
            {
              uint64_t v192 = type metadata accessor for Date();
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v189, 1, v192))
              {
                uint64_t v193 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
                memcpy(v188, v189, *(void *)(*(void *)(v193 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v192 - 8) + 16))(v188, v189, v192);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v188, 0, 1, v192);
              }
              uint64_t v217 = *(int *)(v190 + 20);
              v218 = &v188[v217];
              v219 = &v189[v217];
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v189[v217], 1, v192))
              {
                uint64_t v220 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
                memcpy(v218, v219, *(void *)(*(void *)(v220 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v192 - 8) + 16))(v218, v219, v192);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v218, 0, 1, v192);
              }
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v188, 0, 1, v190);
            }
            uint64_t v221 = v394[16];
            v222 = (char *)a1 + v221;
            v223 = &a2[v221];
            uint64_t v224 = type metadata accessor for UUID();
            (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v224 - 8) + 16))(v222, v223, v224);
            uint64_t v225 = type metadata accessor for PreprocessedWeatherData();
            *(void *)&v222[*(int *)(v225 + 20)] = *(void *)&v223[*(int *)(v225 + 20)];
            v400 = (int *)v225;
            v406 = v223;
            uint64_t v226 = *(int *)(v225 + 24);
            v411 = v222;
            v227 = &v222[v226];
            v228 = (char *)&v223[v226];
            uint64_t v229 = *(void *)&v223[v226 + 8];
            *(void *)v227 = *(void *)&v223[v226];
            *((void *)v227 + 1) = v229;
            uint64_t v230 = *(void *)&v223[v226 + 16];
            uint64_t v231 = *((void *)v228 + 3);
            *((void *)v227 + 2) = v230;
            *((void *)v227 + 3) = v231;
            uint64_t v232 = *((void *)v228 + 5);
            *((void *)v227 + 4) = *((void *)v228 + 4);
            *((void *)v227 + 5) = v232;
            v384 = v228;
            uint64_t v389 = type metadata accessor for FeelsLikeComponentPreprocessedDataModel();
            uint64_t v233 = *(int *)(v389 + 28);
            v377 = &v227[v233];
            v234 = &v228[v233];
            uint64_t v235 = type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference(0);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            uint64_t v236 = v235;
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v234, 1, v235))
            {
              uint64_t v237 = sub_10017DF08(&qword_100E63750);
              memcpy(v377, v234, *(void *)(*(void *)(v237 - 8) + 64));
            }
            else
            {
              uint64_t v238 = *((void *)v234 + 1);
              *(void *)v377 = *(void *)v234;
              *((void *)v377 + 1) = v238;
              uint64_t v376 = v236;
              uint64_t v239 = *(int *)(v236 + 20);
              v240 = &v377[v239];
              v241 = &v234[v239];
              uint64_t v242 = type metadata accessor for TemperatureScaleConfiguration();
              v380 = *(void (**)(char *, char *, uint64_t))(*(void *)(v242 - 8) + 16);
              swift_bridgeObjectRetain();
              v380(v240, v241, v242);
              v243 = (int *)type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
              *(void *)&v240[v243[5]] = *(void *)&v241[v243[5]];
              *(void *)&v240[v243[6]] = *(void *)&v241[v243[6]];
              *(void *)&v240[v243[7]] = *(void *)&v241[v243[7]];
              uint64_t v244 = v243[8];
              v245 = &v240[v244];
              v246 = &v241[v244];
              uint64_t v248 = *(void *)v246;
              uint64_t v247 = *((void *)v246 + 1);
              *(void *)v245 = v248;
              *((void *)v245 + 1) = v247;
              v240[v243[9]] = v241[v243[9]];
              swift_bridgeObjectRetain();
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v377, 0, 1, v376);
            }
            uint64_t v249 = *(int *)(v389 + 32);
            v250 = &v227[v249];
            v251 = (void *)((char *)v384 + v249);
            uint64_t v252 = v251[1];
            *(void *)v250 = *v251;
            *((void *)v250 + 1) = v252;
            uint64_t v253 = v400[7];
            v254 = &v411[v253];
            v255 = &v406[v253];
            *(void *)&v411[v253] = *(void *)&v406[v253];
            uint64_t v256 = *(int *)(type metadata accessor for HourlyForecastComponentPreprocessedDataModel() + 20);
            v257 = &v254[v256];
            v258 = &v255[v256];
            uint64_t v259 = type metadata accessor for WeatherDescription();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            uint64_t v390 = v259;
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v258, 1, v259))
            {
              uint64_t v260 = sub_10017DF08(&qword_100E63758);
              memcpy(v257, v258, *(void *)(*(void *)(v260 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v259 - 8) + 16))(v257, v258, v259);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v257, 0, 1, v259);
            }
            uint64_t v261 = v400[8];
            v262 = &v411[v261];
            v263 = &v406[v261];
            uint64_t v385 = *(void *)&v406[v261 + 8];
            *(void *)v262 = *(void *)&v406[v261];
            *((void *)v262 + 1) = v385;
            uint64_t v381 = *(void *)&v406[v261 + 24];
            *((void *)v262 + 2) = *(void *)&v406[v261 + 16];
            *((void *)v262 + 3) = v381;
            uint64_t v264 = *(void *)&v406[v261 + 40];
            *((void *)v262 + 4) = *(void *)&v406[v261 + 32];
            *((void *)v262 + 5) = v264;
            uint64_t v265 = *(void *)&v406[v261 + 56];
            *((void *)v262 + 6) = *(void *)&v406[v261 + 48];
            *((void *)v262 + 7) = v265;
            uint64_t v266 = *(int *)(type metadata accessor for ListPreprocessedDataModel() + 32);
            v267 = &v262[v266];
            v371 = &v263[v266];
            uint64_t v268 = type metadata accessor for Date();
            v269 = *(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v268 - 8) + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v378 = v269;
            uint64_t v382 = v268;
            uint64_t v270 = v268;
            v271 = v267;
            v269(v267, v371, v270);
            uint64_t v272 = type metadata accessor for WeatherConditionBackgroundTimeData();
            uint64_t v273 = *(int *)(v272 + 20);
            v274 = &v267[v273];
            v275 = &v371[v273];
            uint64_t v276 = type metadata accessor for Elevation();
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v275, 1, v276))
            {
              uint64_t v277 = sub_10017DF08(&qword_100E63760);
              memcpy(v274, v275, *(void *)(*(void *)(v277 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v276 - 8) + 16))(v274, v275, v276);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v274, 0, 1, v276);
            }
            uint64_t v278 = *(int *)(v272 + 24);
            v279 = &v271[v278];
            v280 = &v371[v278];
            uint64_t v281 = type metadata accessor for BackgroundMoonData();
            uint64_t v386 = v272;
            uint64_t v375 = v276;
            uint64_t v367 = v281;
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v280, 1, v281))
            {
              uint64_t v282 = sub_10017DF08(&qword_100E63768);
              memcpy(v279, v280, *(void *)(*(void *)(v282 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v281 - 8) + 16))(v279, v280, v281);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v279, 0, 1, v281);
            }
            uint64_t v283 = v400[9];
            v284 = &v411[v283];
            v285 = &v406[v283];
            uint64_t v286 = *((void *)v285 + 1);
            *(void *)v284 = *(void *)v285;
            *((void *)v284 + 1) = v286;
            uint64_t v287 = *((void *)v285 + 3);
            *((void *)v284 + 2) = *((void *)v285 + 2);
            *((void *)v284 + 3) = v287;
            uint64_t v288 = *((void *)v285 + 5);
            *((void *)v284 + 4) = *((void *)v285 + 4);
            *((void *)v284 + 5) = v288;
            uint64_t v289 = *((void *)v285 + 7);
            *((void *)v284 + 6) = *((void *)v285 + 6);
            *((void *)v284 + 7) = v289;
            uint64_t v290 = *((void *)v285 + 9);
            *((void *)v284 + 8) = *((void *)v285 + 8);
            *((void *)v284 + 9) = v290;
            uint64_t v291 = *((void *)v285 + 11);
            *((void *)v284 + 10) = *((void *)v285 + 10);
            *((void *)v284 + 11) = v291;
            uint64_t v292 = *((void *)v285 + 13);
            *((void *)v284 + 12) = *((void *)v285 + 12);
            *((void *)v284 + 13) = v292;
            uint64_t v293 = v400[10];
            v369 = &v406[v293];
            v372 = &v411[v293];
            v368 = *(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v390 - 8) + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v368(v372, v369, v390);
            uint64_t v294 = *(int *)(type metadata accessor for UVIndexComponentPreprocessedDataModel() + 20);
            v295 = &v372[v294];
            v296 = &v369[v294];
            uint64_t v391 = *((void *)v296 + 1);
            *(void *)v295 = *(void *)v296;
            *((void *)v295 + 1) = v391;
            uint64_t v297 = v400[11];
            v298 = &v411[v297];
            v299 = &v406[v297];
            uint64_t v300 = *((void *)v299 + 1);
            *(void *)v298 = *(void *)v299;
            *((void *)v298 + 1) = v300;
            uint64_t v301 = *((void *)v299 + 3);
            *((void *)v298 + 2) = *((void *)v299 + 2);
            *((void *)v298 + 3) = v301;
            uint64_t v302 = *((void *)v299 + 5);
            *((void *)v298 + 4) = *((void *)v299 + 4);
            *((void *)v298 + 5) = v302;
            uint64_t v303 = v400[12];
            v304 = &v411[v303];
            v305 = &v406[v303];
            uint64_t v306 = type metadata accessor for PressureTrend();
            v373 = *(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v306 - 8) + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v373(v304, v305, v306);
            v307 = (int *)type metadata accessor for PressureComponentPreprocessedDataModel();
            uint64_t v308 = v307[5];
            v309 = &v304[v308];
            v310 = &v305[v308];
            uint64_t v311 = *((void *)v310 + 1);
            *(void *)v309 = *(void *)v310;
            *((void *)v309 + 1) = v311;
            uint64_t v312 = v307[6];
            v313 = &v304[v312];
            v314 = &v305[v312];
            uint64_t v392 = *((void *)v314 + 1);
            *(void *)v313 = *(void *)v314;
            *((void *)v313 + 1) = v392;
            uint64_t v315 = v307[7];
            v316 = &v304[v315];
            v317 = &v305[v315];
            uint64_t v374 = *((void *)v317 + 1);
            *(void *)v316 = *(void *)v317;
            *((void *)v316 + 1) = v374;
            *(void *)&v304[v307[8]] = *(void *)&v305[v307[8]];
            uint64_t v318 = v307[9];
            v319 = &v304[v318];
            v320 = &v305[v318];
            uint64_t v370 = *((void *)v320 + 1);
            *(void *)v319 = *(void *)v320;
            *((void *)v319 + 1) = v370;
            uint64_t v321 = v400[13];
            v322 = &v411[v321];
            v323 = &v406[v321];
            uint64_t v324 = *((void *)v323 + 1);
            *(void *)v322 = *(void *)v323;
            *((void *)v322 + 1) = v324;
            uint64_t v325 = *((void *)v323 + 3);
            *((void *)v322 + 2) = *((void *)v323 + 2);
            *((void *)v322 + 3) = v325;
            uint64_t v326 = *((void *)v323 + 5);
            *((void *)v322 + 4) = *((void *)v323 + 4);
            *((void *)v322 + 5) = v326;
            uint64_t v327 = *((void *)v323 + 7);
            *((void *)v322 + 6) = *((void *)v323 + 6);
            *((void *)v322 + 7) = v327;
            uint64_t v328 = *((void *)v323 + 9);
            *((void *)v322 + 8) = *((void *)v323 + 8);
            *((void *)v322 + 9) = v328;
            uint64_t v329 = *((void *)v323 + 11);
            *((void *)v322 + 10) = *((void *)v323 + 10);
            *((void *)v322 + 11) = v329;
            uint64_t v330 = *((void *)v323 + 13);
            *((void *)v322 + 12) = *((void *)v323 + 12);
            *((void *)v322 + 13) = v330;
            uint64_t v331 = *((void *)v323 + 15);
            *((void *)v322 + 14) = *((void *)v323 + 14);
            *((void *)v322 + 15) = v331;
            uint64_t v332 = *((void *)v323 + 17);
            *((void *)v322 + 16) = *((void *)v323 + 16);
            *((void *)v322 + 17) = v332;
            uint64_t v333 = *((void *)v323 + 19);
            *((void *)v322 + 18) = *((void *)v323 + 18);
            *((void *)v322 + 19) = v333;
            uint64_t v334 = *((void *)v323 + 21);
            *((void *)v322 + 20) = *((void *)v323 + 20);
            *((void *)v322 + 21) = v334;
            uint64_t v335 = *((void *)v323 + 23);
            *((void *)v322 + 22) = *((void *)v323 + 22);
            *((void *)v322 + 23) = v335;
            uint64_t v336 = *((void *)v323 + 25);
            *((void *)v322 + 24) = *((void *)v323 + 24);
            *((void *)v322 + 25) = v336;
            *((_OWORD *)v322 + 13) = *((_OWORD *)v323 + 13);
            *((void *)v322 + 28) = *((void *)v323 + 28);
            uint64_t v337 = v400[14];
            v338 = &v411[v337];
            v339 = &v406[v337];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v378(v338, v339, v382);
            uint64_t v340 = *(int *)(v386 + 20);
            v341 = &v338[v340];
            v342 = &v339[v340];
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v339[v340], 1, v375))
            {
              uint64_t v343 = sub_10017DF08(&qword_100E63760);
              memcpy(v341, v342, *(void *)(*(void *)(v343 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v375 - 8) + 16))(v341, v342, v375);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v341, 0, 1, v375);
            }
            uint64_t v344 = *(int *)(v386 + 24);
            v345 = &v338[v344];
            v346 = &v339[v344];
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v339[v344], 1, v367))
            {
              uint64_t v347 = sub_10017DF08(&qword_100E63768);
              memcpy(v345, v346, *(void *)(*(void *)(v347 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v367 - 8) + 16))(v345, v346, v367);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v345, 0, 1, v367);
            }
            uint64_t v348 = v400[15];
            v349 = &v411[v348];
            v350 = &v406[v348];
            uint64_t v351 = *((void *)v350 + 1);
            *(void *)v349 = *(void *)v350;
            *((void *)v349 + 1) = v351;
            uint64_t v352 = *((void *)v350 + 3);
            *((void *)v349 + 2) = *((void *)v350 + 2);
            *((void *)v349 + 3) = v352;
            uint64_t v353 = *((void *)v350 + 5);
            *((void *)v349 + 4) = *((void *)v350 + 4);
            *((void *)v349 + 5) = v353;
            uint64_t v354 = *((void *)v350 + 7);
            *((void *)v349 + 6) = *((void *)v350 + 6);
            *((void *)v349 + 7) = v354;
            uint64_t v355 = *((void *)v350 + 9);
            *((void *)v349 + 8) = *((void *)v350 + 8);
            *((void *)v349 + 9) = v355;
            uint64_t v356 = *((void *)v350 + 11);
            *((void *)v349 + 10) = *((void *)v350 + 10);
            *((void *)v349 + 11) = v356;
            uint64_t v412 = *((void *)v350 + 13);
            *((void *)v349 + 12) = *((void *)v350 + 12);
            *((void *)v349 + 13) = v412;
            uint64_t v357 = v394[20];
            v396 = (uint64_t *)((char *)a1 + v357);
            v401 = &a2[v357];
            type metadata accessor for NewsDataModel();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (swift_getEnumCaseMultiPayload() == 1)
            {
              void *v396 = *(void *)v401;
              swift_bridgeObjectRetain();
            }
            else
            {
              uint64_t v358 = type metadata accessor for News();
              (*(void (**)(void *, unsigned __int8 *, uint64_t))(*(void *)(v358 - 8) + 16))(v396, v401, v358);
            }
LABEL_214:
            swift_storeEnumTagMultiPayload();
LABEL_215:
            swift_storeEnumTagMultiPayload();
LABEL_216:
            swift_storeEnumTagMultiPayload();
LABEL_217:
            uint64_t v365 = a3[6];
            *(uint64_t *)((char *)a1 + a3[5]) = *(void *)&a2[a3[5]];
            *(uint64_t *)((char *)a1 + v365) = *(void *)&a2[v365];
            *((unsigned char *)a1 + a3[7]) = a2[a3[7]];
            swift_retain();
            swift_bridgeObjectRetain();
            break;
          case 5u:
            uint64_t v129 = *((void *)a2 + 1);
            *a1 = *(void *)a2;
            a1[1] = v129;
            swift_bridgeObjectRetain();
            uint64_t v130 = *(int *)(sub_10017DF08(&qword_100E6BBB0) + 48);
            v131 = (uint64_t *)((char *)a1 + v130);
            v132 = &a2[v130];
            type metadata accessor for NewsDataModel();
            if (swift_getEnumCaseMultiPayload() == 1)
            {
              void *v131 = *(void *)v132;
              swift_bridgeObjectRetain();
            }
            else
            {
              uint64_t v167 = type metadata accessor for News();
              (*(void (**)(void *, unsigned __int8 *, uint64_t))(*(void *)(v167 - 8) + 16))(v131, v132, v167);
            }
            goto LABEL_214;
          case 6u:
            uint64_t v133 = *((void *)a2 + 1);
            *a1 = *(void *)a2;
            a1[1] = v133;
            swift_bridgeObjectRetain();
            uint64_t v134 = *(int *)(sub_10017DF08(&qword_100E6BBB8) + 48);
            v135 = (char *)a1 + v134;
            v136 = &a2[v134];
            uint64_t v137 = type metadata accessor for AvailableDataSets();
            goto LABEL_113;
          case 8u:
            uint64_t v138 = *((void *)a2 + 1);
            *a1 = *(void *)a2;
            a1[1] = v138;
            swift_bridgeObjectRetain();
            uint64_t v139 = *(int *)(sub_10017DF08(&qword_100E6BBA8) + 48);
            v135 = (char *)a1 + v139;
            v136 = &a2[v139];
            uint64_t v137 = type metadata accessor for WeatherStatisticsModel();
LABEL_113:
            (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v137 - 8) + 16))(v135, v136, v137);
            goto LABEL_215;
          default:
            uint64_t v40 = *((void *)a2 + 1);
            *a1 = *(void *)a2;
            a1[1] = v40;
LABEL_139:
            swift_bridgeObjectRetain();
            goto LABEL_215;
        }
        break;
      case 0xAu:
        uint64_t v17 = type metadata accessor for DebugAction();
        int v41 = swift_getEnumCaseMultiPayload();
        if (v41 == 1) {
          goto LABEL_38;
        }
        if (v41) {
          goto LABEL_61;
        }
        uint64_t v42 = type metadata accessor for WeatherCondition();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v42))
        {
          uint64_t v43 = sub_10017DF08(&qword_100E63A50);
          memcpy(a1, a2, *(void *)(*(void *)(v43 - 8) + 64));
        }
        else
        {
          (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v42 - 8) + 16))(a1, a2, v42);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v42);
        }
        uint64_t v112 = *(int *)(sub_10017DF08(&qword_100E6F648) + 48);
        v113 = (uint64_t *)((char *)a1 + v112);
        v114 = &a2[v112];
        uint64_t v115 = *((void *)v114 + 1);
        void *v113 = *(void *)v114;
        v113[1] = v115;
        swift_bridgeObjectRetain();
        goto LABEL_215;
      case 0xBu:
        uint64_t v17 = type metadata accessor for ConditionDetailViewAction();
        int v18 = swift_getEnumCaseMultiPayload();
        switch(v18)
        {
          case 2:
            uint64_t v47 = *((void *)a2 + 1);
            *a1 = *(void *)a2;
            a1[1] = v47;
            uint64_t v48 = (int *)type metadata accessor for DetailChartSelection();
            uint64_t v49 = v48[5];
            v402 = (char *)a1 + v49;
            uint64_t v50 = &a2[v49];
            uint64_t v51 = type metadata accessor for Date();
            uint64_t v52 = *(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v51 - 8) + 16);
            swift_bridgeObjectRetain();
            v52(v402, v50, v51);
            v52((char *)a1 + v48[6], &a2[v48[6]], v51);
            v52((char *)a1 + v48[7], &a2[v48[7]], v51);
            *(uint64_t *)((char *)a1 + v48[8]) = *(void *)&a2[v48[8]];
            uint64_t v53 = v48[9];
            uint64_t v54 = (char *)a1 + v53;
            os_log_type_t v55 = &a2[v53];
            v54[8] = v55[8];
            *(void *)uint64_t v54 = *(void *)v55;
            goto LABEL_215;
          case 1:
            uint64_t v56 = type metadata accessor for DetailCondition();
            (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v56 - 8) + 16))(a1, a2, v56);
            goto LABEL_215;
          case 0:
LABEL_15:
            uint64_t v19 = type metadata accessor for Date();
            (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v19 - 8) + 16))(a1, a2, v19);
            goto LABEL_215;
        }
LABEL_61:
        memcpy(a1, a2, *(void *)(*(void *)(v17 - 8) + 64));
        goto LABEL_216;
      case 0xDu:
        uint64_t v17 = type metadata accessor for MoonDetailViewAction();
        int v20 = swift_getEnumCaseMultiPayload();
        if (v20 == 1) {
          goto LABEL_15;
        }
        if (v20) {
          goto LABEL_61;
        }
        type metadata accessor for MoonDetailSelectedDate();
        swift_getEnumCaseMultiPayload();
        uint64_t v21 = type metadata accessor for Date();
        (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v21 - 8) + 16))(a1, a2, v21);
        swift_storeEnumTagMultiPayload();
        goto LABEL_215;
      case 0xEu:
        uint64_t v17 = type metadata accessor for AveragesDetailViewAction();
        if (swift_getEnumCaseMultiPayload() != 1) {
          goto LABEL_61;
        }
        *a1 = *(void *)a2;
        int v22 = (int *)type metadata accessor for DetailHeroChartLollipopPosition(0);
        uint64_t v23 = v22[5];
        uint64_t v24 = (char *)a1 + v23;
        uint64_t v25 = &a2[v23];
        uint64_t v26 = type metadata accessor for Date();
        (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v26 - 8) + 16))(v24, v25, v26);
        *(uint64_t *)((char *)a1 + v22[6]) = *(void *)&a2[v22[6]];
        *(uint64_t *)((char *)a1 + v22[7]) = *(void *)&a2[v22[7]];
        swift_storeEnumTagMultiPayload();
        goto LABEL_216;
      case 0x10u:
        uint64_t v27 = *((void *)a2 + 1);
        *a1 = *(void *)a2;
        a1[1] = v27;
        swift_bridgeObjectRetain();
        goto LABEL_216;
      case 0x11u:
        uint64_t v44 = type metadata accessor for PerformanceTestAction();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            uint64_t v45 = type metadata accessor for DetailCondition();
            (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v45 - 8) + 16))(a1, a2, v45);
            goto LABEL_71;
          case 2u:
            uint64_t v71 = type metadata accessor for Location();
            (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v71 - 8) + 16))(a1, a2, v71);
            goto LABEL_71;
          case 3u:
            *a1 = *(void *)a2;
            uint64_t v72 = sub_10017DF08((uint64_t *)&unk_100EA0250);
            uint64_t v73 = *(int *)(v72 + 48);
            uint64_t v74 = (char *)a1 + v73;
            uint64_t v75 = &a2[v73];
            uint64_t v76 = type metadata accessor for WeatherMapOverlayKind();
            (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v76 - 8) + 16))(v74, v75, v76);
            *((unsigned char *)a1 + *(int *)(v72 + 64)) = a2[*(int *)(v72 + 64)];
            goto LABEL_71;
          case 4u:
            uint64_t v77 = type metadata accessor for WeatherCondition();
            (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v77 - 8) + 16))(a1, a2, v77);
LABEL_71:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(a1, a2, *(void *)(*(void *)(v44 - 8) + 64));
            break;
        }
        goto LABEL_216;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
        goto LABEL_217;
    }
  }
  return a1;
}

uint64_t *sub_100A0C058(uint64_t *a1, unsigned __int8 *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for MainAction();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v7 = type metadata accessor for AppConfiguration();
      (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
      goto LABEL_214;
    case 2u:
      uint64_t v15 = type metadata accessor for EnvironmentAction();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 2u:
          uint64_t v26 = type metadata accessor for Locale();
          (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v26 - 8) + 16))(a1, a2, v26);
          goto LABEL_213;
        case 3u:
          uint64_t v34 = type metadata accessor for ActivityAction();
          int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          if (EnumCaseMultiPayload == 1)
          {
            type metadata accessor for PreviewLocation();
            switch(swift_getEnumCaseMultiPayload())
            {
              case 1u:
                uint64_t v205 = type metadata accessor for LocationOfInterest();
                (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v205 - 8) + 16))(a1, a2, v205);
                break;
              case 2u:
                uint64_t v206 = *((void *)a2 + 1);
                uint64_t v397 = *(void **)a2;
                *a1 = *(void *)a2;
                a1[1] = v206;
                uint64_t v207 = *((void *)a2 + 3);
                a1[2] = *((void *)a2 + 2);
                a1[3] = v207;
                uint64_t v208 = *((void *)a2 + 5);
                a1[4] = *((void *)a2 + 4);
                a1[5] = v208;
                a1[6] = *((void *)a2 + 6);
                uint64_t v209 = type metadata accessor for SearchLocation();
                uint64_t v210 = *(int *)(v209 + 32);
                uint64_t v403 = (char *)a1 + v210;
                uint64_t v408 = v209;
                uint64_t v386 = &a2[v210];
                uint64_t v211 = type metadata accessor for Location();
                id v212 = v397;
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v386, 1, v211))
                {
                  uint64_t v213 = sub_10017DF08(&qword_100E639E8);
                  memcpy(v403, v386, *(void *)(*(void *)(v213 - 8) + 64));
                }
                else
                {
                  (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v211 - 8) + 16))(v403, v386, v211);
                  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v403, 0, 1, v211);
                }
                uint64_t v360 = *(int *)(v408 + 36);
                v361 = (char *)a1 + v360;
                uint64_t v362 = &a2[v360];
                *(_OWORD *)v361 = *(_OWORD *)v362;
                v361[16] = v362[16];
                break;
              case 3u:
                *(_OWORD *)a1 = *(_OWORD *)a2;
                uint64_t v214 = *((void *)a2 + 3);
                a1[2] = *((void *)a2 + 2);
                a1[3] = v214;
                swift_bridgeObjectRetain();
                break;
              default:
                uint64_t v144 = type metadata accessor for Location();
                (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v144 - 8) + 16))(a1, a2, v144);
                break;
            }
            swift_storeEnumTagMultiPayload();
          }
          else
          {
            if (EnumCaseMultiPayload) {
              goto LABEL_99;
            }
            type metadata accessor for SavedLocation();
            if (swift_getEnumCaseMultiPayload() == 1) {
              uint64_t v92 = type metadata accessor for SavedLocation.Placeholder();
            }
            else {
              uint64_t v92 = type metadata accessor for Location();
            }
            (*(void (**)(uint64_t *, unsigned __int8 *))(*(void *)(v92 - 8) + 16))(a1, a2);
            swift_storeEnumTagMultiPayload();
          }
          goto LABEL_212;
        case 4u:
          uint64_t v82 = *((void *)a2 + 1);
          *a1 = *(void *)a2;
          a1[1] = v82;
          swift_bridgeObjectRetain();
          goto LABEL_213;
        case 9u:
          unint64_t v93 = *((void *)a2 + 1);
          if (v93 >= 2)
          {
            *a1 = *(void *)a2;
            a1[1] = v93;
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)a1 = *(_OWORD *)a2;
          }
          goto LABEL_213;
        case 0xBu:
          uint64_t v34 = type metadata accessor for ConfiguredUnitsAction();
          int v94 = swift_getEnumCaseMultiPayload();
          if (v94 == 1)
          {
            uint64_t v145 = type metadata accessor for UnitConfiguration.Temperature();
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v145))
            {
              uint64_t v146 = sub_10017DF08(&qword_100E6F620);
              memcpy(a1, a2, *(void *)(*(void *)(v146 - 8) + 64));
            }
            else
            {
              (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v145 - 8) + 16))(a1, a2, v145);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v145);
            }
          }
          else
          {
            if (v94) {
              goto LABEL_99;
            }
            uint64_t v95 = type metadata accessor for ConfiguredUnit();
            (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v95 - 8) + 16))(a1, a2, v95);
          }
          break;
        default:
          goto LABEL_59;
      }
      goto LABEL_212;
    case 3u:
      uint64_t v8 = type metadata accessor for LocationsAction();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          uint64_t v9 = type metadata accessor for CurrentLocation();
          if (swift_getEnumCaseMultiPayload() > 2)
          {
            memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
          }
          else
          {
            uint64_t v166 = type metadata accessor for Location();
            (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v166 - 8) + 16))(a1, a2, v166);
            swift_storeEnumTagMultiPayload();
          }
          goto LABEL_140;
        case 1u:
          uint64_t v76 = type metadata accessor for Location();
          (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v76 - 8) + 16))(a1, a2, v76);
          uint64_t v77 = sub_10017DF08(&qword_100E6F628);
          *((unsigned char *)a1 + *(int *)(v77 + 48)) = a2[*(int *)(v77 + 48)];
          goto LABEL_140;
        case 2u:
          uint64_t v78 = *((void *)a2 + 1);
          *a1 = *(void *)a2;
          a1[1] = v78;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_140;
        case 5u:
          *a1 = *(void *)a2;
          swift_bridgeObjectRetain();
          goto LABEL_140;
        case 6u:
          uint64_t v83 = *(void *)a2;
          uint64_t v84 = *((void *)a2 + 1);
          unsigned __int8 v85 = a2[16];
          sub_10015458C(*(void *)a2, v84, v85);
          *a1 = v83;
          a1[1] = v84;
          *((unsigned char *)a1 + 16) = v85;
LABEL_140:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
          break;
      }
      goto LABEL_214;
    case 4u:
      uint64_t v27 = type metadata accessor for NotificationsAction();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          uint64_t v28 = type metadata accessor for LocationModel();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v28))
          {
            uint64_t v29 = type metadata accessor for NotificationLocation();
            memcpy(a1, a2, *(void *)(*(void *)(v29 - 8) + 64));
          }
          else
          {
            (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v28 - 8) + 16))(a1, a2, v28);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v28);
          }
          uint64_t v138 = *(int *)(sub_10017DF08((uint64_t *)&unk_100EAC3E0) + 48);
          uint64_t v139 = (char *)a1 + v138;
          uint64_t v140 = &a2[v138];
          uint64_t v141 = type metadata accessor for URL();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v140, 1, v141))
          {
            uint64_t v142 = sub_10017DF08(&qword_100E749B0);
            memcpy(v139, v140, *(void *)(*(void *)(v142 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v141 - 8) + 16))(v139, v140, v141);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v139, 0, 1, v141);
          }
          goto LABEL_117;
        case 2u:
          uint64_t v96 = type metadata accessor for NotificationSubscription.Location();
          (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v96 - 8) + 16))(a1, a2, v96);
          uint64_t v97 = *(int *)(sub_10017DF08(&qword_100E6F630) + 48);
          uint64_t v98 = (char *)a1 + v97;
          uint64_t v99 = &a2[v97];
          uint64_t v100 = type metadata accessor for NotificationSubscription.Kind();
          (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v100 - 8) + 16))(v98, v99, v100);
          goto LABEL_117;
        case 3u:
        case 4u:
          *a1 = *(void *)a2;
          swift_bridgeObjectRetain();
          goto LABEL_117;
        case 5u:
          uint64_t v101 = type metadata accessor for Location();
          (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v101 - 8) + 16))(a1, a2, v101);
          uint64_t v102 = *(int *)(sub_10017DF08(&qword_100E6F638) + 48);
          uint64_t v103 = (char *)a1 + v102;
          uint64_t v104 = &a2[v102];
          uint64_t v105 = type metadata accessor for NotificationSubscription.Kind();
          (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v105 - 8) + 16))(v103, v104, v105);
LABEL_117:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(a1, a2, *(void *)(*(void *)(v27 - 8) + 64));
          break;
      }
      goto LABEL_214;
    case 5u:
      uint64_t v15 = type metadata accessor for NotificationsOptInAction();
      int v30 = swift_getEnumCaseMultiPayload();
      switch(v30)
      {
        case 4:
          goto LABEL_13;
        case 3:
          *a1 = *(void *)a2;
          *((unsigned char *)a1 + 8) = a2[8];
          swift_bridgeObjectRetain();
          break;
        case 2:
          uint64_t v31 = type metadata accessor for Location();
          (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v31 - 8) + 16))(a1, a2, v31);
          uint64_t v32 = sub_10017DF08(&qword_100E6BBD8);
          *((unsigned char *)a1 + *(int *)(v32 + 48)) = a2[*(int *)(v32 + 48)];
          break;
        default:
          goto LABEL_59;
      }
      goto LABEL_213;
    case 6u:
      uint64_t v10 = type metadata accessor for ViewAction();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          uint64_t v11 = type metadata accessor for ListViewAction();
          int v12 = swift_getEnumCaseMultiPayload();
          if (v12 == 2) {
            goto LABEL_119;
          }
          if (v12) {
            goto LABEL_166;
          }
          uint64_t v13 = type metadata accessor for LocationModel();
          (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v13 - 8) + 16))(a1, a2, v13);
          uint64_t v14 = sub_10017DF08(&qword_100E6F640);
          *((unsigned char *)a1 + *(int *)(v14 + 48)) = a2[*(int *)(v14 + 48)];
          goto LABEL_206;
        case 1u:
          uint64_t v11 = type metadata accessor for LocationViewerViewAction();
          int v79 = swift_getEnumCaseMultiPayload();
          if (v79 == 2)
          {
LABEL_119:
            uint64_t v143 = type metadata accessor for Location.Identifier();
            (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v143 - 8) + 16))(a1, a2, v143);
          }
          else if (v79 == 1)
          {
            uint64_t v167 = type metadata accessor for WeatherMapOverlayKind();
            (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v167 - 8) + 16))(a1, a2, v167);
          }
          else
          {
            if (v79)
            {
LABEL_166:
              memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
              goto LABEL_207;
            }
            uint64_t v80 = type metadata accessor for LocationModel();
            (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v80 - 8) + 16))(a1, a2, v80);
          }
LABEL_206:
          swift_storeEnumTagMultiPayload();
LABEL_207:
          swift_storeEnumTagMultiPayload();
          break;
        case 3u:
          uint64_t v11 = type metadata accessor for SearchViewAction();
          switch(swift_getEnumCaseMultiPayload())
          {
            case 0u:
              uint64_t v81 = type metadata accessor for CodableError();
              (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v81 - 8) + 16))(a1, a2, v81);
              goto LABEL_206;
            case 1u:
              *a1 = *(void *)a2;
              swift_bridgeObjectRetain();
              goto LABEL_206;
            case 2u:
              uint64_t v194 = *((void *)a2 + 1);
              *a1 = *(void *)a2;
              a1[1] = v194;
              swift_bridgeObjectRetain();
              goto LABEL_206;
            case 3u:
            case 6u:
              uint64_t v195 = type metadata accessor for Location();
              (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v195 - 8) + 16))(a1, a2, v195);
              goto LABEL_206;
            case 4u:
              uint64_t v196 = type metadata accessor for LocationOfInterest();
              (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v196 - 8) + 16))(a1, a2, v196);
              goto LABEL_206;
            case 5u:
              uint64_t v197 = *((void *)a2 + 1);
              v396 = *(void **)a2;
              *a1 = *(void *)a2;
              a1[1] = v197;
              uint64_t v198 = *((void *)a2 + 3);
              a1[2] = *((void *)a2 + 2);
              a1[3] = v198;
              uint64_t v199 = *((void *)a2 + 5);
              a1[4] = *((void *)a2 + 4);
              a1[5] = v199;
              a1[6] = *((void *)a2 + 6);
              uint64_t v200 = type metadata accessor for SearchLocation();
              uint64_t v201 = *(int *)(v200 + 32);
              v402 = (char *)a1 + v201;
              uint64_t v407 = v200;
              uint64_t v202 = &a2[v201];
              uint64_t v393 = type metadata accessor for Location();
              id v203 = v396;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v202, 1, v393))
              {
                uint64_t v204 = sub_10017DF08(&qword_100E639E8);
                memcpy(v402, v202, *(void *)(*(void *)(v204 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v393 - 8) + 16))(v402, v202, v393);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v402, 0, 1, v393);
              }
              uint64_t v357 = *(int *)(v407 + 36);
              uint64_t v358 = (char *)a1 + v357;
              uint64_t v359 = &a2[v357];
              *(_OWORD *)uint64_t v358 = *(_OWORD *)v359;
              v358[16] = v359[16];
              goto LABEL_206;
            default:
              goto LABEL_166;
          }
        case 4u:
          uint64_t v86 = type metadata accessor for InteractiveMapViewAction();
          switch(swift_getEnumCaseMultiPayload())
          {
            case 0u:
            case 1u:
            case 2u:
            case 4u:
              uint64_t v193 = type metadata accessor for Location();
              (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v193 - 8) + 16))(a1, a2, v193);
              goto LABEL_162;
            case 3u:
              uint64_t v192 = type metadata accessor for WeatherMapOverlayKind();
              (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v192 - 8) + 16))(a1, a2, v192);
LABEL_162:
              swift_storeEnumTagMultiPayload();
              break;
            default:
              memcpy(a1, a2, *(void *)(*(void *)(v86 - 8) + 64));
              break;
          }
          goto LABEL_207;
        case 5u:
          *(_OWORD *)a1 = *(_OWORD *)a2;
          *((unsigned char *)a1 + 16) = a2[16];
          *((unsigned char *)a1 + 17) = a2[17];
          *((unsigned char *)a1 + 18) = a2[18];
          uint64_t v87 = *(int *)(type metadata accessor for DisplayMetrics() + 36);
          uint64_t v88 = (char *)a1 + v87;
          uint64_t v89 = &a2[v87];
          uint64_t v90 = type metadata accessor for DynamicTypeSize();
          (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v90 - 8) + 16))(v88, v89, v90);
          goto LABEL_207;
        default:
          memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
          goto LABEL_214;
      }
      goto LABEL_214;
    case 7u:
      uint64_t v15 = type metadata accessor for ModalViewAction();
      int v33 = swift_getEnumCaseMultiPayload();
      if (v33 == 3)
      {
        uint64_t v44 = *(void *)a2;
        if ((~*(void *)a2 & 0xF000000000000006) != 0)
        {
          uint64_t v106 = *((void *)a2 + 1);
          uint64_t v107 = *((void *)a2 + 2);
          uint64_t v108 = *((void *)a2 + 3);
          uint64_t v109 = *((void *)a2 + 5);
          uint64_t v381 = *((void *)a2 + 6);
          uint64_t v385 = *((void *)a2 + 4);
          uint64_t v377 = *((void *)a2 + 7);
          uint64_t v391 = *((void *)a2 + 8);
          uint64_t v395 = *((void *)a2 + 9);
          uint64_t v401 = *((void *)a2 + 10);
          uint64_t v405 = *((void *)a2 + 11);
          sub_100274EDC(v44);
          *a1 = v44;
          a1[1] = v106;
          a1[2] = v107;
          a1[3] = v108;
          a1[4] = v385;
          a1[5] = v109;
          a1[6] = v381;
          a1[7] = v377;
          a1[8] = v391;
          a1[9] = v395;
          a1[10] = v401;
          a1[11] = v405;
        }
        else
        {
          memcpy(a1, a2, 0x60uLL);
        }
      }
      else
      {
        if (v33) {
          goto LABEL_59;
        }
        uint64_t v34 = type metadata accessor for LocationPreviewViewAction();
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          uint64_t v35 = type metadata accessor for Location();
          (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v35 - 8) + 16))(a1, a2, v35);
          swift_storeEnumTagMultiPayload();
        }
        else
        {
LABEL_99:
          memcpy(a1, a2, *(void *)(*(void *)(v34 - 8) + 64));
        }
      }
      goto LABEL_213;
    case 8u:
      uint64_t v15 = type metadata accessor for LocationViewAction();
      int v36 = swift_getEnumCaseMultiPayload();
      if (v36 == 2)
      {
        uint64_t v55 = type metadata accessor for Location();
        (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v55 - 8) + 16))(a1, a2, v55);
        uint64_t v56 = *(int *)(sub_10017DF08(&qword_100E66450) + 48);
        uint64_t v57 = (char *)a1 + v56;
        uint64_t v58 = &a2[v56];
        uint64_t v59 = type metadata accessor for LocationOfInterest();
        (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v59 - 8) + 16))(v57, v58, v59);
        uint64_t v60 = *(int *)(sub_10017DF08(&qword_100E66448) + 48);
        uint64_t v61 = (char *)a1 + v60;
        uint64_t v62 = &a2[v60];
        long long v63 = *((_OWORD *)v62 + 1);
        *(_OWORD *)uint64_t v61 = *(_OWORD *)v62;
        *((_OWORD *)v61 + 1) = v63;
        v61[32] = v62[32];
      }
      else if (v36 == 1)
      {
        uint64_t v64 = type metadata accessor for LocationComponentAction(0);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            uint64_t v65 = type metadata accessor for URL();
            (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v65 - 8) + 16))(a1, a2, v65);
            uint64_t v66 = sub_10017DF08(&qword_100E66478);
            *((unsigned char *)a1 + *(int *)(v66 + 48)) = a2[*(int *)(v66 + 48)];
            goto LABEL_131;
          case 1u:
            uint64_t v147 = type metadata accessor for WeatherMapOverlayKind();
            (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v147 - 8) + 16))(a1, a2, v147);
            goto LABEL_131;
          case 2u:
            uint64_t v148 = type metadata accessor for DetailCondition();
            (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v148 - 8) + 16))(a1, a2, v148);
            uint64_t v149 = sub_10017DF08(&qword_100E66488);
            *((unsigned char *)a1 + *(int *)(v149 + 48)) = a2[*(int *)(v149 + 48)];
            goto LABEL_131;
          case 4u:
            *(unsigned char *)a1 = *a2;
            uint64_t v150 = *(int *)(sub_10017DF08(&qword_100E66480) + 48);
            uint64_t v151 = (char *)a1 + v150;
            uint64_t v152 = &a2[v150];
            uint64_t v153 = type metadata accessor for Location();
            (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v153 - 8) + 16))(v151, v152, v153);
LABEL_131:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(a1, a2, *(void *)(*(void *)(v64 - 8) + 64));
            break;
        }
        uint64_t v154 = sub_10017DF08(&qword_100E66458);
        uint64_t v155 = *(int *)(v154 + 48);
        uint64_t v156 = (char *)a1 + v155;
        uint64_t v157 = &a2[v155];
        long long v158 = *((_OWORD *)v157 + 1);
        *(_OWORD *)uint64_t v156 = *(_OWORD *)v157;
        *((_OWORD *)v156 + 1) = v158;
        v156[32] = v157[32];
        uint64_t v159 = *(int *)(v154 + 64);
        long long v160 = (char *)a1 + v159;
        uint64_t v161 = &a2[v159];
        uint64_t v162 = type metadata accessor for Date();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v161, 1, v162))
        {
          uint64_t v163 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
          memcpy(v160, v161, *(void *)(*(void *)(v163 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v162 - 8) + 16))(v160, v161, v162);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v160, 0, 1, v162);
        }
      }
      else
      {
        if (v36) {
          goto LABEL_59;
        }
LABEL_36:
        uint64_t v37 = type metadata accessor for Location();
        (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v37 - 8) + 16))(a1, a2, v37);
      }
      goto LABEL_213;
    case 9u:
      type metadata accessor for WeatherDataAction();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 2u:
          uint64_t v114 = *((void *)a2 + 1);
          *a1 = *(void *)a2;
          a1[1] = v114;
          uint64_t v115 = (uint64_t *)(a2 + 16);
          unint64_t v116 = *((void *)a2 + 3);
          swift_bridgeObjectRetain();
          if (v116 >= 0xE)
          {
            a1[2] = *v115;
            a1[3] = v116;
            swift_bridgeObjectRetain();
          }
          else
          {
            *((_OWORD *)a1 + 1) = *(_OWORD *)v115;
          }
          uint64_t v164 = *((void *)a2 + 5);
          a1[4] = *((void *)a2 + 4);
          a1[5] = v164;
          goto LABEL_137;
        case 3u:
        case 9u:
          uint64_t v67 = *((void *)a2 + 1);
          *a1 = *(void *)a2;
          a1[1] = v67;
          uint64_t v68 = *((void *)a2 + 3);
          a1[2] = *((void *)a2 + 2);
          a1[3] = v68;
          swift_bridgeObjectRetain();
          goto LABEL_137;
        case 4u:
          uint64_t v117 = *((void *)a2 + 1);
          *a1 = *(void *)a2;
          a1[1] = v117;
          swift_bridgeObjectRetain();
          uint64_t v392 = (int *)sub_10017DF08(&qword_100E6BBC0);
          uint64_t v118 = v392[12];
          uint64_t v119 = (uint64_t *)((char *)a1 + v118);
          uint64_t v120 = &a2[v118];
          uint64_t v121 = *(void *)&a2[v118 + 8];
          *uint64_t v119 = *(void *)&a2[v118];
          v119[1] = v121;
          v406 = (int *)type metadata accessor for WeatherData(0);
          uint64_t v122 = v406[5];
          uint64_t v123 = (char *)v119 + v122;
          uint64_t v124 = (char *)&v120[v122];
          uint64_t v125 = type metadata accessor for Locale();
          swift_bridgeObjectRetain();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v124, 1, v125))
          {
            uint64_t v126 = sub_10017DF08(&qword_100E63730);
            memcpy(v123, v124, *(void *)(*(void *)(v126 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v125 - 8) + 16))(v123, v124, v125);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v123, 0, 1, v125);
          }
          uint64_t v168 = v406[6];
          uint64_t v169 = (char *)v119 + v168;
          uint64_t v170 = (char *)&v120[v168];
          uint64_t v171 = type metadata accessor for WeatherDataModel();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v171 - 8) + 16))(v169, v170, v171);
          uint64_t v172 = v406[7];
          uint64_t v173 = (char *)v119 + v172;
          uint64_t v174 = (char *)&v120[v172];
          uint64_t v175 = sub_10017DF08(&qword_100E63738);
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v174, 1, v175))
          {
            uint64_t v176 = type metadata accessor for WeatherData.CachingState(0);
            memcpy(v173, v174, *(void *)(*(void *)(v176 - 8) + 64));
          }
          else
          {
            uint64_t v177 = type metadata accessor for Date();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v177 - 8) + 16))(v173, v174, v177);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v173, 0, 1, v175);
          }
          uint64_t v178 = v406[8];
          uint64_t v179 = (void *)((char *)v119 + v178);
          uint64_t v180 = (char *)&v120[v178];
          uint64_t v181 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
          int v182 = swift_getEnumCaseMultiPayload();
          if (v182 == 1)
          {
            uint64_t v184 = type metadata accessor for WeatherStatisticsModel();
            (*(void (**)(void *, char *, uint64_t))(*(void *)(v184 - 8) + 16))(v179, v180, v184);
            goto LABEL_153;
          }
          if (!v182)
          {
            uint64_t v183 = *((void *)v180 + 1);
            *uint64_t v179 = *(void *)v180;
            v179[1] = v183;
            swift_bridgeObjectRetain();
LABEL_153:
            swift_storeEnumTagMultiPayload();
            goto LABEL_155;
          }
          memcpy(v179, v180, *(void *)(*(void *)(v181 - 8) + 64));
LABEL_155:
          uint64_t v185 = v406[9];
          uint64_t v186 = (char *)v119 + v185;
          uint64_t v187 = (char *)&v120[v185];
          uint64_t v188 = type metadata accessor for WeatherDataOverrides();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v187, 1, v188))
          {
            uint64_t v189 = sub_10017DF08(&qword_100E63740);
            memcpy(v186, v187, *(void *)(*(void *)(v189 - 8) + 64));
          }
          else
          {
            uint64_t v190 = type metadata accessor for Date();
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v187, 1, v190))
            {
              uint64_t v191 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
              memcpy(v186, v187, *(void *)(*(void *)(v191 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v190 - 8) + 16))(v186, v187, v190);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v186, 0, 1, v190);
            }
            uint64_t v215 = *(int *)(v188 + 20);
            uint64_t v216 = &v186[v215];
            uint64_t v217 = &v187[v215];
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v187[v215], 1, v190))
            {
              uint64_t v218 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
              memcpy(v216, v217, *(void *)(*(void *)(v218 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v190 - 8) + 16))(v216, v217, v190);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v216, 0, 1, v190);
            }
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v186, 0, 1, v188);
          }
          uint64_t v219 = v392[16];
          uint64_t v220 = (char *)a1 + v219;
          uint64_t v221 = &a2[v219];
          uint64_t v222 = type metadata accessor for UUID();
          (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v222 - 8) + 16))(v220, v221, v222);
          uint64_t v223 = type metadata accessor for PreprocessedWeatherData();
          *(void *)&v220[*(int *)(v223 + 20)] = *(void *)&v221[*(int *)(v223 + 20)];
          v398 = (int *)v223;
          v404 = v221;
          uint64_t v224 = *(int *)(v223 + 24);
          uint64_t v409 = v220;
          uint64_t v225 = &v220[v224];
          uint64_t v226 = (char *)&v221[v224];
          uint64_t v227 = *(void *)&v221[v224 + 8];
          *(void *)uint64_t v225 = *(void *)&v221[v224];
          *((void *)v225 + 1) = v227;
          uint64_t v228 = *(void *)&v221[v224 + 16];
          uint64_t v229 = *((void *)v226 + 3);
          *((void *)v225 + 2) = v228;
          *((void *)v225 + 3) = v229;
          uint64_t v230 = *((void *)v226 + 5);
          *((void *)v225 + 4) = *((void *)v226 + 4);
          *((void *)v225 + 5) = v230;
          uint64_t v382 = v226;
          uint64_t v387 = type metadata accessor for FeelsLikeComponentPreprocessedDataModel();
          uint64_t v231 = *(int *)(v387 + 28);
          uint64_t v375 = &v225[v231];
          uint64_t v232 = &v226[v231];
          uint64_t v233 = type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference(0);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v234 = v233;
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v232, 1, v233))
          {
            uint64_t v235 = sub_10017DF08(&qword_100E63750);
            memcpy(v375, v232, *(void *)(*(void *)(v235 - 8) + 64));
          }
          else
          {
            uint64_t v236 = *((void *)v232 + 1);
            *(void *)uint64_t v375 = *(void *)v232;
            *((void *)v375 + 1) = v236;
            uint64_t v374 = v234;
            uint64_t v237 = *(int *)(v234 + 20);
            uint64_t v238 = &v375[v237];
            uint64_t v239 = &v232[v237];
            uint64_t v240 = type metadata accessor for TemperatureScaleConfiguration();
            v378 = *(void (**)(char *, char *, uint64_t))(*(void *)(v240 - 8) + 16);
            swift_bridgeObjectRetain();
            v378(v238, v239, v240);
            v241 = (int *)type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
            *(void *)&v238[v241[5]] = *(void *)&v239[v241[5]];
            *(void *)&v238[v241[6]] = *(void *)&v239[v241[6]];
            *(void *)&v238[v241[7]] = *(void *)&v239[v241[7]];
            uint64_t v242 = v241[8];
            v243 = &v238[v242];
            uint64_t v244 = &v239[v242];
            uint64_t v246 = *(void *)v244;
            uint64_t v245 = *((void *)v244 + 1);
            *(void *)v243 = v246;
            *((void *)v243 + 1) = v245;
            v238[v241[9]] = v239[v241[9]];
            swift_bridgeObjectRetain();
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v375, 0, 1, v374);
          }
          uint64_t v247 = *(int *)(v387 + 32);
          uint64_t v248 = &v225[v247];
          uint64_t v249 = (void *)((char *)v382 + v247);
          uint64_t v250 = v249[1];
          *(void *)uint64_t v248 = *v249;
          *((void *)v248 + 1) = v250;
          uint64_t v251 = v398[7];
          uint64_t v252 = &v409[v251];
          uint64_t v253 = &v404[v251];
          *(void *)&v409[v251] = *(void *)&v404[v251];
          uint64_t v254 = *(int *)(type metadata accessor for HourlyForecastComponentPreprocessedDataModel() + 20);
          v255 = &v252[v254];
          uint64_t v256 = &v253[v254];
          uint64_t v257 = type metadata accessor for WeatherDescription();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v388 = v257;
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v256, 1, v257))
          {
            uint64_t v258 = sub_10017DF08(&qword_100E63758);
            memcpy(v255, v256, *(void *)(*(void *)(v258 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v257 - 8) + 16))(v255, v256, v257);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v255, 0, 1, v257);
          }
          uint64_t v259 = v398[8];
          uint64_t v260 = &v409[v259];
          uint64_t v261 = &v404[v259];
          uint64_t v383 = *(void *)&v404[v259 + 8];
          *(void *)uint64_t v260 = *(void *)&v404[v259];
          *((void *)v260 + 1) = v383;
          uint64_t v379 = *(void *)&v404[v259 + 24];
          *((void *)v260 + 2) = *(void *)&v404[v259 + 16];
          *((void *)v260 + 3) = v379;
          uint64_t v262 = *(void *)&v404[v259 + 40];
          *((void *)v260 + 4) = *(void *)&v404[v259 + 32];
          *((void *)v260 + 5) = v262;
          uint64_t v263 = *(void *)&v404[v259 + 56];
          *((void *)v260 + 6) = *(void *)&v404[v259 + 48];
          *((void *)v260 + 7) = v263;
          uint64_t v264 = *(int *)(type metadata accessor for ListPreprocessedDataModel() + 32);
          uint64_t v265 = &v260[v264];
          v369 = &v261[v264];
          uint64_t v266 = type metadata accessor for Date();
          v267 = *(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v266 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v376 = v267;
          uint64_t v380 = v266;
          uint64_t v268 = v266;
          v269 = v265;
          v267(v265, v369, v268);
          uint64_t v270 = type metadata accessor for WeatherConditionBackgroundTimeData();
          uint64_t v271 = *(int *)(v270 + 20);
          uint64_t v272 = &v265[v271];
          uint64_t v273 = &v369[v271];
          uint64_t v274 = type metadata accessor for Elevation();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v273, 1, v274))
          {
            uint64_t v275 = sub_10017DF08(&qword_100E63760);
            memcpy(v272, v273, *(void *)(*(void *)(v275 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v274 - 8) + 16))(v272, v273, v274);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v272, 0, 1, v274);
          }
          uint64_t v276 = *(int *)(v270 + 24);
          uint64_t v277 = &v269[v276];
          uint64_t v278 = &v369[v276];
          uint64_t v279 = type metadata accessor for BackgroundMoonData();
          uint64_t v384 = v270;
          uint64_t v373 = v274;
          uint64_t v365 = v279;
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v278, 1, v279))
          {
            uint64_t v280 = sub_10017DF08(&qword_100E63768);
            memcpy(v277, v278, *(void *)(*(void *)(v280 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v279 - 8) + 16))(v277, v278, v279);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v277, 0, 1, v279);
          }
          uint64_t v281 = v398[9];
          uint64_t v282 = &v409[v281];
          uint64_t v283 = &v404[v281];
          uint64_t v284 = *((void *)v283 + 1);
          *(void *)uint64_t v282 = *(void *)v283;
          *((void *)v282 + 1) = v284;
          uint64_t v285 = *((void *)v283 + 3);
          *((void *)v282 + 2) = *((void *)v283 + 2);
          *((void *)v282 + 3) = v285;
          uint64_t v286 = *((void *)v283 + 5);
          *((void *)v282 + 4) = *((void *)v283 + 4);
          *((void *)v282 + 5) = v286;
          uint64_t v287 = *((void *)v283 + 7);
          *((void *)v282 + 6) = *((void *)v283 + 6);
          *((void *)v282 + 7) = v287;
          uint64_t v288 = *((void *)v283 + 9);
          *((void *)v282 + 8) = *((void *)v283 + 8);
          *((void *)v282 + 9) = v288;
          uint64_t v289 = *((void *)v283 + 11);
          *((void *)v282 + 10) = *((void *)v283 + 10);
          *((void *)v282 + 11) = v289;
          uint64_t v290 = *((void *)v283 + 13);
          *((void *)v282 + 12) = *((void *)v283 + 12);
          *((void *)v282 + 13) = v290;
          uint64_t v291 = v398[10];
          uint64_t v367 = &v404[v291];
          uint64_t v370 = &v409[v291];
          v366 = *(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v388 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v366(v370, v367, v388);
          uint64_t v292 = *(int *)(type metadata accessor for UVIndexComponentPreprocessedDataModel() + 20);
          uint64_t v293 = &v370[v292];
          uint64_t v294 = &v367[v292];
          uint64_t v389 = *((void *)v294 + 1);
          *(void *)uint64_t v293 = *(void *)v294;
          *((void *)v293 + 1) = v389;
          uint64_t v295 = v398[11];
          v296 = &v409[v295];
          uint64_t v297 = &v404[v295];
          uint64_t v298 = *((void *)v297 + 1);
          *(void *)v296 = *(void *)v297;
          *((void *)v296 + 1) = v298;
          uint64_t v299 = *((void *)v297 + 3);
          *((void *)v296 + 2) = *((void *)v297 + 2);
          *((void *)v296 + 3) = v299;
          uint64_t v300 = *((void *)v297 + 5);
          *((void *)v296 + 4) = *((void *)v297 + 4);
          *((void *)v296 + 5) = v300;
          uint64_t v301 = v398[12];
          uint64_t v302 = &v409[v301];
          uint64_t v303 = &v404[v301];
          uint64_t v304 = type metadata accessor for PressureTrend();
          v371 = *(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v304 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v371(v302, v303, v304);
          v305 = (int *)type metadata accessor for PressureComponentPreprocessedDataModel();
          uint64_t v306 = v305[5];
          v307 = &v302[v306];
          uint64_t v308 = &v303[v306];
          uint64_t v309 = *((void *)v308 + 1);
          *(void *)v307 = *(void *)v308;
          *((void *)v307 + 1) = v309;
          uint64_t v310 = v305[6];
          uint64_t v311 = &v302[v310];
          uint64_t v312 = &v303[v310];
          uint64_t v390 = *((void *)v312 + 1);
          *(void *)uint64_t v311 = *(void *)v312;
          *((void *)v311 + 1) = v390;
          uint64_t v313 = v305[7];
          v314 = &v302[v313];
          uint64_t v315 = &v303[v313];
          uint64_t v372 = *((void *)v315 + 1);
          *(void *)v314 = *(void *)v315;
          *((void *)v314 + 1) = v372;
          *(void *)&v302[v305[8]] = *(void *)&v303[v305[8]];
          uint64_t v316 = v305[9];
          v317 = &v302[v316];
          uint64_t v318 = &v303[v316];
          uint64_t v368 = *((void *)v318 + 1);
          *(void *)v317 = *(void *)v318;
          *((void *)v317 + 1) = v368;
          uint64_t v319 = v398[13];
          v320 = &v409[v319];
          uint64_t v321 = &v404[v319];
          uint64_t v322 = *((void *)v321 + 1);
          *(void *)v320 = *(void *)v321;
          *((void *)v320 + 1) = v322;
          uint64_t v323 = *((void *)v321 + 3);
          *((void *)v320 + 2) = *((void *)v321 + 2);
          *((void *)v320 + 3) = v323;
          uint64_t v324 = *((void *)v321 + 5);
          *((void *)v320 + 4) = *((void *)v321 + 4);
          *((void *)v320 + 5) = v324;
          uint64_t v325 = *((void *)v321 + 7);
          *((void *)v320 + 6) = *((void *)v321 + 6);
          *((void *)v320 + 7) = v325;
          uint64_t v326 = *((void *)v321 + 9);
          *((void *)v320 + 8) = *((void *)v321 + 8);
          *((void *)v320 + 9) = v326;
          uint64_t v327 = *((void *)v321 + 11);
          *((void *)v320 + 10) = *((void *)v321 + 10);
          *((void *)v320 + 11) = v327;
          uint64_t v328 = *((void *)v321 + 13);
          *((void *)v320 + 12) = *((void *)v321 + 12);
          *((void *)v320 + 13) = v328;
          uint64_t v329 = *((void *)v321 + 15);
          *((void *)v320 + 14) = *((void *)v321 + 14);
          *((void *)v320 + 15) = v329;
          uint64_t v330 = *((void *)v321 + 17);
          *((void *)v320 + 16) = *((void *)v321 + 16);
          *((void *)v320 + 17) = v330;
          uint64_t v331 = *((void *)v321 + 19);
          *((void *)v320 + 18) = *((void *)v321 + 18);
          *((void *)v320 + 19) = v331;
          uint64_t v332 = *((void *)v321 + 21);
          *((void *)v320 + 20) = *((void *)v321 + 20);
          *((void *)v320 + 21) = v332;
          uint64_t v333 = *((void *)v321 + 23);
          *((void *)v320 + 22) = *((void *)v321 + 22);
          *((void *)v320 + 23) = v333;
          uint64_t v334 = *((void *)v321 + 25);
          *((void *)v320 + 24) = *((void *)v321 + 24);
          *((void *)v320 + 25) = v334;
          *((_OWORD *)v320 + 13) = *((_OWORD *)v321 + 13);
          *((void *)v320 + 28) = *((void *)v321 + 28);
          uint64_t v335 = v398[14];
          uint64_t v336 = &v409[v335];
          uint64_t v337 = &v404[v335];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v376(v336, v337, v380);
          uint64_t v338 = *(int *)(v384 + 20);
          v339 = &v336[v338];
          uint64_t v340 = &v337[v338];
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v337[v338], 1, v373))
          {
            uint64_t v341 = sub_10017DF08(&qword_100E63760);
            memcpy(v339, v340, *(void *)(*(void *)(v341 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v373 - 8) + 16))(v339, v340, v373);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v339, 0, 1, v373);
          }
          uint64_t v342 = *(int *)(v384 + 24);
          uint64_t v343 = &v336[v342];
          uint64_t v344 = &v337[v342];
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v337[v342], 1, v365))
          {
            uint64_t v345 = sub_10017DF08(&qword_100E63768);
            memcpy(v343, v344, *(void *)(*(void *)(v345 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v365 - 8) + 16))(v343, v344, v365);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v343, 0, 1, v365);
          }
          uint64_t v346 = v398[15];
          uint64_t v347 = &v409[v346];
          uint64_t v348 = &v404[v346];
          uint64_t v349 = *((void *)v348 + 1);
          *(void *)uint64_t v347 = *(void *)v348;
          *((void *)v347 + 1) = v349;
          uint64_t v350 = *((void *)v348 + 3);
          *((void *)v347 + 2) = *((void *)v348 + 2);
          *((void *)v347 + 3) = v350;
          uint64_t v351 = *((void *)v348 + 5);
          *((void *)v347 + 4) = *((void *)v348 + 4);
          *((void *)v347 + 5) = v351;
          uint64_t v352 = *((void *)v348 + 7);
          *((void *)v347 + 6) = *((void *)v348 + 6);
          *((void *)v347 + 7) = v352;
          uint64_t v353 = *((void *)v348 + 9);
          *((void *)v347 + 8) = *((void *)v348 + 8);
          *((void *)v347 + 9) = v353;
          uint64_t v354 = *((void *)v348 + 11);
          *((void *)v347 + 10) = *((void *)v348 + 10);
          *((void *)v347 + 11) = v354;
          uint64_t v410 = *((void *)v348 + 13);
          *((void *)v347 + 12) = *((void *)v348 + 12);
          *((void *)v347 + 13) = v410;
          uint64_t v355 = v392[20];
          v394 = (uint64_t *)((char *)a1 + v355);
          v399 = &a2[v355];
          type metadata accessor for NewsDataModel();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            void *v394 = *(void *)v399;
            swift_bridgeObjectRetain();
          }
          else
          {
            uint64_t v356 = type metadata accessor for News();
            (*(void (**)(void *, unsigned __int8 *, uint64_t))(*(void *)(v356 - 8) + 16))(v394, v399, v356);
          }
LABEL_212:
          swift_storeEnumTagMultiPayload();
LABEL_213:
          swift_storeEnumTagMultiPayload();
LABEL_214:
          swift_storeEnumTagMultiPayload();
LABEL_215:
          uint64_t v363 = a3[6];
          *(uint64_t *)((char *)a1 + a3[5]) = *(void *)&a2[a3[5]];
          *(uint64_t *)((char *)a1 + v363) = *(void *)&a2[v363];
          *((unsigned char *)a1 + a3[7]) = a2[a3[7]];
          swift_retain();
          swift_bridgeObjectRetain();
          return a1;
        case 5u:
          uint64_t v127 = *((void *)a2 + 1);
          *a1 = *(void *)a2;
          a1[1] = v127;
          swift_bridgeObjectRetain();
          uint64_t v128 = *(int *)(sub_10017DF08(&qword_100E6BBB0) + 48);
          uint64_t v129 = (uint64_t *)((char *)a1 + v128);
          uint64_t v130 = &a2[v128];
          type metadata accessor for NewsDataModel();
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            *uint64_t v129 = *(void *)v130;
            swift_bridgeObjectRetain();
          }
          else
          {
            uint64_t v165 = type metadata accessor for News();
            (*(void (**)(void *, unsigned __int8 *, uint64_t))(*(void *)(v165 - 8) + 16))(v129, v130, v165);
          }
          goto LABEL_212;
        case 6u:
          uint64_t v131 = *((void *)a2 + 1);
          *a1 = *(void *)a2;
          a1[1] = v131;
          swift_bridgeObjectRetain();
          uint64_t v132 = *(int *)(sub_10017DF08(&qword_100E6BBB8) + 48);
          uint64_t v133 = (char *)a1 + v132;
          uint64_t v134 = &a2[v132];
          uint64_t v135 = type metadata accessor for AvailableDataSets();
          goto LABEL_111;
        case 8u:
          uint64_t v136 = *((void *)a2 + 1);
          *a1 = *(void *)a2;
          a1[1] = v136;
          swift_bridgeObjectRetain();
          uint64_t v137 = *(int *)(sub_10017DF08(&qword_100E6BBA8) + 48);
          uint64_t v133 = (char *)a1 + v137;
          uint64_t v134 = &a2[v137];
          uint64_t v135 = type metadata accessor for WeatherStatisticsModel();
LABEL_111:
          (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v135 - 8) + 16))(v133, v134, v135);
          goto LABEL_213;
        default:
          uint64_t v38 = *((void *)a2 + 1);
          *a1 = *(void *)a2;
          a1[1] = v38;
LABEL_137:
          swift_bridgeObjectRetain();
          goto LABEL_213;
      }
    case 0xAu:
      uint64_t v15 = type metadata accessor for DebugAction();
      int v39 = swift_getEnumCaseMultiPayload();
      if (v39 == 1) {
        goto LABEL_36;
      }
      if (v39) {
        goto LABEL_59;
      }
      uint64_t v40 = type metadata accessor for WeatherCondition();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v40))
      {
        uint64_t v41 = sub_10017DF08(&qword_100E63A50);
        memcpy(a1, a2, *(void *)(*(void *)(v41 - 8) + 64));
      }
      else
      {
        (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v40 - 8) + 16))(a1, a2, v40);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v40);
      }
      uint64_t v110 = *(int *)(sub_10017DF08(&qword_100E6F648) + 48);
      uint64_t v111 = (uint64_t *)((char *)a1 + v110);
      uint64_t v112 = &a2[v110];
      uint64_t v113 = *((void *)v112 + 1);
      *uint64_t v111 = *(void *)v112;
      v111[1] = v113;
      swift_bridgeObjectRetain();
      goto LABEL_213;
    case 0xBu:
      uint64_t v15 = type metadata accessor for ConditionDetailViewAction();
      int v16 = swift_getEnumCaseMultiPayload();
      switch(v16)
      {
        case 2:
          uint64_t v45 = *((void *)a2 + 1);
          *a1 = *(void *)a2;
          a1[1] = v45;
          uint64_t v46 = (int *)type metadata accessor for DetailChartSelection();
          uint64_t v47 = v46[5];
          v400 = (char *)a1 + v47;
          uint64_t v48 = &a2[v47];
          uint64_t v49 = type metadata accessor for Date();
          uint64_t v50 = *(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v49 - 8) + 16);
          swift_bridgeObjectRetain();
          v50(v400, v48, v49);
          v50((char *)a1 + v46[6], &a2[v46[6]], v49);
          v50((char *)a1 + v46[7], &a2[v46[7]], v49);
          *(uint64_t *)((char *)a1 + v46[8]) = *(void *)&a2[v46[8]];
          uint64_t v51 = v46[9];
          uint64_t v52 = (char *)a1 + v51;
          uint64_t v53 = &a2[v51];
          v52[8] = v53[8];
          *(void *)uint64_t v52 = *(void *)v53;
          goto LABEL_213;
        case 1:
          uint64_t v54 = type metadata accessor for DetailCondition();
          (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v54 - 8) + 16))(a1, a2, v54);
          goto LABEL_213;
        case 0:
LABEL_13:
          uint64_t v17 = type metadata accessor for Date();
          (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v17 - 8) + 16))(a1, a2, v17);
          goto LABEL_213;
      }
LABEL_59:
      memcpy(a1, a2, *(void *)(*(void *)(v15 - 8) + 64));
      goto LABEL_214;
    case 0xDu:
      uint64_t v15 = type metadata accessor for MoonDetailViewAction();
      int v18 = swift_getEnumCaseMultiPayload();
      if (v18 == 1) {
        goto LABEL_13;
      }
      if (v18) {
        goto LABEL_59;
      }
      type metadata accessor for MoonDetailSelectedDate();
      swift_getEnumCaseMultiPayload();
      uint64_t v19 = type metadata accessor for Date();
      (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v19 - 8) + 16))(a1, a2, v19);
      swift_storeEnumTagMultiPayload();
      goto LABEL_213;
    case 0xEu:
      uint64_t v15 = type metadata accessor for AveragesDetailViewAction();
      if (swift_getEnumCaseMultiPayload() != 1) {
        goto LABEL_59;
      }
      *a1 = *(void *)a2;
      int v20 = (int *)type metadata accessor for DetailHeroChartLollipopPosition(0);
      uint64_t v21 = v20[5];
      int v22 = (char *)a1 + v21;
      uint64_t v23 = &a2[v21];
      uint64_t v24 = type metadata accessor for Date();
      (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v24 - 8) + 16))(v22, v23, v24);
      *(uint64_t *)((char *)a1 + v20[6]) = *(void *)&a2[v20[6]];
      *(uint64_t *)((char *)a1 + v20[7]) = *(void *)&a2[v20[7]];
      swift_storeEnumTagMultiPayload();
      goto LABEL_214;
    case 0x10u:
      uint64_t v25 = *((void *)a2 + 1);
      *a1 = *(void *)a2;
      a1[1] = v25;
      swift_bridgeObjectRetain();
      goto LABEL_214;
    case 0x11u:
      uint64_t v42 = type metadata accessor for PerformanceTestAction();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          uint64_t v43 = type metadata accessor for DetailCondition();
          (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v43 - 8) + 16))(a1, a2, v43);
          goto LABEL_69;
        case 2u:
          uint64_t v69 = type metadata accessor for Location();
          (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v69 - 8) + 16))(a1, a2, v69);
          goto LABEL_69;
        case 3u:
          *a1 = *(void *)a2;
          uint64_t v70 = sub_10017DF08((uint64_t *)&unk_100EA0250);
          uint64_t v71 = *(int *)(v70 + 48);
          uint64_t v72 = (char *)a1 + v71;
          uint64_t v73 = &a2[v71];
          uint64_t v74 = type metadata accessor for WeatherMapOverlayKind();
          (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v74 - 8) + 16))(v72, v73, v74);
          *((unsigned char *)a1 + *(int *)(v70 + 64)) = a2[*(int *)(v70 + 64)];
          goto LABEL_69;
        case 4u:
          uint64_t v75 = type metadata accessor for WeatherCondition();
          (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v75 - 8) + 16))(a1, a2, v75);
LABEL_69:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(a1, a2, *(void *)(*(void *)(v42 - 8) + 64));
          break;
      }
      goto LABEL_214;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
      goto LABEL_215;
  }
}

uint64_t *sub_100A0F614(uint64_t *a1, unsigned __int8 *a2, int *a3)
{
  if (a1 != (uint64_t *)a2)
  {
    sub_100173018((uint64_t)a1, (void (*)(void))type metadata accessor for MainAction);
    uint64_t v6 = type metadata accessor for MainAction();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v7 = type metadata accessor for AppConfiguration();
        (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
        goto LABEL_215;
      case 2u:
        uint64_t v15 = type metadata accessor for EnvironmentAction();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 2u:
            uint64_t v25 = type metadata accessor for Locale();
            (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v25 - 8) + 16))(a1, a2, v25);
            goto LABEL_214;
          case 3u:
            uint64_t v33 = type metadata accessor for ActivityAction();
            int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
            if (EnumCaseMultiPayload == 1)
            {
              type metadata accessor for PreviewLocation();
              switch(swift_getEnumCaseMultiPayload())
              {
                case 1u:
                  uint64_t v186 = type metadata accessor for LocationOfInterest();
                  (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v186 - 8) + 16))(a1, a2, v186);
                  break;
                case 2u:
                  uint64_t v325 = *(void **)a2;
                  *a1 = *(void *)a2;
                  a1[1] = *((void *)a2 + 1);
                  a1[2] = *((void *)a2 + 2);
                  a1[3] = *((void *)a2 + 3);
                  a1[4] = *((void *)a2 + 4);
                  a1[5] = *((void *)a2 + 5);
                  a1[6] = *((void *)a2 + 6);
                  uint64_t v187 = type metadata accessor for SearchLocation();
                  uint64_t v188 = *(int *)(v187 + 32);
                  uint64_t v331 = (char *)a1 + v188;
                  uint64_t v336 = v187;
                  uint64_t v316 = &a2[v188];
                  uint64_t v189 = type metadata accessor for Location();
                  id v190 = v325;
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v316, 1, v189))
                  {
                    uint64_t v191 = sub_10017DF08(&qword_100E639E8);
                    memcpy(v331, v316, *(void *)(*(void *)(v191 - 8) + 64));
                  }
                  else
                  {
                    (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v189 - 8) + 16))(v331, v316, v189);
                    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v331, 0, 1, v189);
                  }
                  uint64_t v296 = *(int *)(v336 + 36);
                  uint64_t v297 = (char *)a1 + v296;
                  uint64_t v298 = &a2[v296];
                  long long v299 = *(_OWORD *)v298;
                  v297[16] = v298[16];
                  *(_OWORD *)uint64_t v297 = v299;
                  break;
                case 3u:
                  *(_OWORD *)a1 = *(_OWORD *)a2;
                  a1[2] = *((void *)a2 + 2);
                  a1[3] = *((void *)a2 + 3);
                  swift_bridgeObjectRetain();
                  break;
                default:
                  uint64_t v130 = type metadata accessor for Location();
                  (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v130 - 8) + 16))(a1, a2, v130);
                  break;
              }
              swift_storeEnumTagMultiPayload();
            }
            else
            {
              if (EnumCaseMultiPayload) {
                goto LABEL_100;
              }
              type metadata accessor for SavedLocation();
              if (swift_getEnumCaseMultiPayload() == 1) {
                uint64_t v87 = type metadata accessor for SavedLocation.Placeholder();
              }
              else {
                uint64_t v87 = type metadata accessor for Location();
              }
              (*(void (**)(uint64_t *, unsigned __int8 *))(*(void *)(v87 - 8) + 16))(a1, a2);
              swift_storeEnumTagMultiPayload();
            }
            goto LABEL_213;
          case 4u:
            goto LABEL_82;
          case 9u:
            if (*((void *)a2 + 1) >= 2uLL)
            {
LABEL_82:
              *a1 = *(void *)a2;
              a1[1] = *((void *)a2 + 1);
              swift_bridgeObjectRetain();
            }
            else
            {
              *(_OWORD *)a1 = *(_OWORD *)a2;
            }
            goto LABEL_214;
          case 0xBu:
            uint64_t v33 = type metadata accessor for ConfiguredUnitsAction();
            int v88 = swift_getEnumCaseMultiPayload();
            if (v88 == 1)
            {
              uint64_t v131 = type metadata accessor for UnitConfiguration.Temperature();
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v131))
              {
                uint64_t v132 = sub_10017DF08(&qword_100E6F620);
                memcpy(a1, a2, *(void *)(*(void *)(v132 - 8) + 64));
              }
              else
              {
                (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v131 - 8) + 16))(a1, a2, v131);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v131);
              }
            }
            else
            {
              if (v88) {
                goto LABEL_100;
              }
              uint64_t v89 = type metadata accessor for ConfiguredUnit();
              (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v89 - 8) + 16))(a1, a2, v89);
            }
            break;
          default:
            goto LABEL_60;
        }
        goto LABEL_213;
      case 3u:
        uint64_t v8 = type metadata accessor for LocationsAction();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            uint64_t v9 = type metadata accessor for CurrentLocation();
            if (swift_getEnumCaseMultiPayload() > 2)
            {
              memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
            }
            else
            {
              uint64_t v152 = type metadata accessor for Location();
              (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v152 - 8) + 16))(a1, a2, v152);
              swift_storeEnumTagMultiPayload();
            }
            goto LABEL_141;
          case 1u:
            uint64_t v73 = type metadata accessor for Location();
            (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v73 - 8) + 16))(a1, a2, v73);
            uint64_t v74 = sub_10017DF08(&qword_100E6F628);
            *((unsigned char *)a1 + *(int *)(v74 + 48)) = a2[*(int *)(v74 + 48)];
            goto LABEL_141;
          case 2u:
            *a1 = *(void *)a2;
            a1[1] = *((void *)a2 + 1);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            goto LABEL_141;
          case 5u:
            *a1 = *(void *)a2;
            swift_bridgeObjectRetain();
            goto LABEL_141;
          case 6u:
            uint64_t v78 = *(void *)a2;
            uint64_t v79 = *((void *)a2 + 1);
            unsigned __int8 v80 = a2[16];
            sub_10015458C(*(void *)a2, v79, v80);
            *a1 = v78;
            a1[1] = v79;
            *((unsigned char *)a1 + 16) = v80;
LABEL_141:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
            break;
        }
        goto LABEL_215;
      case 4u:
        uint64_t v26 = type metadata accessor for NotificationsAction();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            uint64_t v27 = type metadata accessor for LocationModel();
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v27))
            {
              uint64_t v28 = type metadata accessor for NotificationLocation();
              memcpy(a1, a2, *(void *)(*(void *)(v28 - 8) + 64));
            }
            else
            {
              (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v27 - 8) + 16))(a1, a2, v27);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v27);
            }
            uint64_t v124 = *(int *)(sub_10017DF08((uint64_t *)&unk_100EAC3E0) + 48);
            uint64_t v125 = (char *)a1 + v124;
            uint64_t v126 = &a2[v124];
            uint64_t v127 = type metadata accessor for URL();
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v126, 1, v127))
            {
              uint64_t v128 = sub_10017DF08(&qword_100E749B0);
              memcpy(v125, v126, *(void *)(*(void *)(v128 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v127 - 8) + 16))(v125, v126, v127);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v125, 0, 1, v127);
            }
            goto LABEL_118;
          case 2u:
            uint64_t v90 = type metadata accessor for NotificationSubscription.Location();
            (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v90 - 8) + 16))(a1, a2, v90);
            uint64_t v91 = *(int *)(sub_10017DF08(&qword_100E6F630) + 48);
            uint64_t v92 = (char *)a1 + v91;
            unint64_t v93 = &a2[v91];
            uint64_t v94 = type metadata accessor for NotificationSubscription.Kind();
            (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v94 - 8) + 16))(v92, v93, v94);
            goto LABEL_118;
          case 3u:
          case 4u:
            *a1 = *(void *)a2;
            swift_bridgeObjectRetain();
            goto LABEL_118;
          case 5u:
            uint64_t v95 = type metadata accessor for Location();
            (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v95 - 8) + 16))(a1, a2, v95);
            uint64_t v96 = *(int *)(sub_10017DF08(&qword_100E6F638) + 48);
            uint64_t v97 = (char *)a1 + v96;
            uint64_t v98 = &a2[v96];
            uint64_t v99 = type metadata accessor for NotificationSubscription.Kind();
            (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v99 - 8) + 16))(v97, v98, v99);
LABEL_118:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(a1, a2, *(void *)(*(void *)(v26 - 8) + 64));
            break;
        }
        goto LABEL_215;
      case 5u:
        uint64_t v15 = type metadata accessor for NotificationsOptInAction();
        int v29 = swift_getEnumCaseMultiPayload();
        switch(v29)
        {
          case 4:
            goto LABEL_14;
          case 3:
            *a1 = *(void *)a2;
            *((unsigned char *)a1 + 8) = a2[8];
            swift_bridgeObjectRetain();
            break;
          case 2:
            uint64_t v30 = type metadata accessor for Location();
            (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v30 - 8) + 16))(a1, a2, v30);
            uint64_t v31 = sub_10017DF08(&qword_100E6BBD8);
            *((unsigned char *)a1 + *(int *)(v31 + 48)) = a2[*(int *)(v31 + 48)];
            break;
          default:
            goto LABEL_60;
        }
        goto LABEL_214;
      case 6u:
        uint64_t v10 = type metadata accessor for ViewAction();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            uint64_t v11 = type metadata accessor for ListViewAction();
            int v12 = swift_getEnumCaseMultiPayload();
            if (v12 == 2) {
              goto LABEL_120;
            }
            if (v12) {
              goto LABEL_167;
            }
            uint64_t v13 = type metadata accessor for LocationModel();
            (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v13 - 8) + 16))(a1, a2, v13);
            uint64_t v14 = sub_10017DF08(&qword_100E6F640);
            *((unsigned char *)a1 + *(int *)(v14 + 48)) = a2[*(int *)(v14 + 48)];
            goto LABEL_207;
          case 1u:
            uint64_t v11 = type metadata accessor for LocationViewerViewAction();
            int v75 = swift_getEnumCaseMultiPayload();
            if (v75 == 2)
            {
LABEL_120:
              uint64_t v129 = type metadata accessor for Location.Identifier();
              (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v129 - 8) + 16))(a1, a2, v129);
            }
            else if (v75 == 1)
            {
              uint64_t v153 = type metadata accessor for WeatherMapOverlayKind();
              (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v153 - 8) + 16))(a1, a2, v153);
            }
            else
            {
              if (v75)
              {
LABEL_167:
                memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
                goto LABEL_208;
              }
              uint64_t v76 = type metadata accessor for LocationModel();
              (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v76 - 8) + 16))(a1, a2, v76);
            }
LABEL_207:
            swift_storeEnumTagMultiPayload();
LABEL_208:
            swift_storeEnumTagMultiPayload();
            break;
          case 3u:
            uint64_t v11 = type metadata accessor for SearchViewAction();
            switch(swift_getEnumCaseMultiPayload())
            {
              case 0u:
                uint64_t v77 = type metadata accessor for CodableError();
                (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v77 - 8) + 16))(a1, a2, v77);
                goto LABEL_207;
              case 1u:
                *a1 = *(void *)a2;
                swift_bridgeObjectRetain();
                goto LABEL_207;
              case 2u:
                *a1 = *(void *)a2;
                a1[1] = *((void *)a2 + 1);
                swift_bridgeObjectRetain();
                goto LABEL_207;
              case 3u:
              case 6u:
                uint64_t v179 = type metadata accessor for Location();
                (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v179 - 8) + 16))(a1, a2, v179);
                goto LABEL_207;
              case 4u:
                uint64_t v180 = type metadata accessor for LocationOfInterest();
                (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v180 - 8) + 16))(a1, a2, v180);
                goto LABEL_207;
              case 5u:
                uint64_t v324 = *(void **)a2;
                *a1 = *(void *)a2;
                a1[1] = *((void *)a2 + 1);
                a1[2] = *((void *)a2 + 2);
                a1[3] = *((void *)a2 + 3);
                a1[4] = *((void *)a2 + 4);
                a1[5] = *((void *)a2 + 5);
                a1[6] = *((void *)a2 + 6);
                uint64_t v181 = type metadata accessor for SearchLocation();
                uint64_t v182 = *(int *)(v181 + 32);
                uint64_t v330 = v181;
                uint64_t v335 = (char *)a1 + v182;
                uint64_t v183 = &a2[v182];
                uint64_t v321 = type metadata accessor for Location();
                id v184 = v324;
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v183, 1, v321))
                {
                  uint64_t v185 = sub_10017DF08(&qword_100E639E8);
                  memcpy(v335, v183, *(void *)(*(void *)(v185 - 8) + 64));
                }
                else
                {
                  (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v321 - 8) + 16))(v335, v183, v321);
                  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v335, 0, 1, v321);
                }
                uint64_t v292 = *(int *)(v330 + 36);
                uint64_t v293 = (char *)a1 + v292;
                uint64_t v294 = &a2[v292];
                long long v295 = *(_OWORD *)v294;
                v293[16] = v294[16];
                *(_OWORD *)uint64_t v293 = v295;
                goto LABEL_207;
              default:
                goto LABEL_167;
            }
          case 4u:
            uint64_t v81 = type metadata accessor for InteractiveMapViewAction();
            switch(swift_getEnumCaseMultiPayload())
            {
              case 0u:
              case 1u:
              case 2u:
              case 4u:
                uint64_t v178 = type metadata accessor for Location();
                (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v178 - 8) + 16))(a1, a2, v178);
                goto LABEL_163;
              case 3u:
                uint64_t v177 = type metadata accessor for WeatherMapOverlayKind();
                (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v177 - 8) + 16))(a1, a2, v177);
LABEL_163:
                swift_storeEnumTagMultiPayload();
                break;
              default:
                memcpy(a1, a2, *(void *)(*(void *)(v81 - 8) + 64));
                break;
            }
            goto LABEL_208;
          case 5u:
            *a1 = *(void *)a2;
            a1[1] = *((void *)a2 + 1);
            *((unsigned char *)a1 + 16) = a2[16];
            *((unsigned char *)a1 + 17) = a2[17];
            *((unsigned char *)a1 + 18) = a2[18];
            uint64_t v82 = *(int *)(type metadata accessor for DisplayMetrics() + 36);
            uint64_t v83 = (char *)a1 + v82;
            uint64_t v84 = &a2[v82];
            uint64_t v85 = type metadata accessor for DynamicTypeSize();
            (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v85 - 8) + 16))(v83, v84, v85);
            goto LABEL_208;
          default:
            memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
            goto LABEL_215;
        }
        goto LABEL_215;
      case 7u:
        uint64_t v15 = type metadata accessor for ModalViewAction();
        int v32 = swift_getEnumCaseMultiPayload();
        if (v32 == 3)
        {
          uint64_t v42 = *(void *)a2;
          if ((~*(void *)a2 & 0xF000000000000006) != 0)
          {
            uint64_t v100 = *((void *)a2 + 1);
            uint64_t v101 = *((void *)a2 + 2);
            uint64_t v102 = *((void *)a2 + 3);
            uint64_t v103 = *((void *)a2 + 5);
            uint64_t v312 = *((void *)a2 + 6);
            uint64_t v315 = *((void *)a2 + 4);
            uint64_t v309 = *((void *)a2 + 7);
            uint64_t v319 = *((void *)a2 + 8);
            uint64_t v323 = *((void *)a2 + 9);
            uint64_t v329 = *((void *)a2 + 10);
            uint64_t v333 = *((void *)a2 + 11);
            sub_100274EDC(v42);
            *a1 = v42;
            a1[1] = v100;
            a1[2] = v101;
            a1[3] = v102;
            a1[4] = v315;
            a1[5] = v103;
            a1[6] = v312;
            a1[7] = v309;
            a1[8] = v319;
            a1[9] = v323;
            a1[10] = v329;
            a1[11] = v333;
          }
          else
          {
            memcpy(a1, a2, 0x60uLL);
          }
        }
        else
        {
          if (v32) {
            goto LABEL_60;
          }
          uint64_t v33 = type metadata accessor for LocationPreviewViewAction();
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            uint64_t v34 = type metadata accessor for Location();
            (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v34 - 8) + 16))(a1, a2, v34);
            swift_storeEnumTagMultiPayload();
          }
          else
          {
LABEL_100:
            memcpy(a1, a2, *(void *)(*(void *)(v33 - 8) + 64));
          }
        }
        goto LABEL_214;
      case 8u:
        uint64_t v15 = type metadata accessor for LocationViewAction();
        int v35 = swift_getEnumCaseMultiPayload();
        if (v35 == 2)
        {
          uint64_t v53 = type metadata accessor for Location();
          (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v53 - 8) + 16))(a1, a2, v53);
          uint64_t v54 = *(int *)(sub_10017DF08(&qword_100E66450) + 48);
          uint64_t v55 = (char *)a1 + v54;
          uint64_t v56 = &a2[v54];
          uint64_t v57 = type metadata accessor for LocationOfInterest();
          (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v57 - 8) + 16))(v55, v56, v57);
          uint64_t v58 = *(int *)(sub_10017DF08(&qword_100E66448) + 48);
          uint64_t v59 = (char *)a1 + v58;
          uint64_t v60 = &a2[v58];
          long long v61 = *(_OWORD *)v60;
          long long v62 = *((_OWORD *)v60 + 1);
          v59[32] = v60[32];
          *(_OWORD *)uint64_t v59 = v61;
          *((_OWORD *)v59 + 1) = v62;
        }
        else if (v35 == 1)
        {
          uint64_t v63 = type metadata accessor for LocationComponentAction(0);
          switch(swift_getEnumCaseMultiPayload())
          {
            case 0u:
              uint64_t v64 = type metadata accessor for URL();
              (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v64 - 8) + 16))(a1, a2, v64);
              uint64_t v65 = sub_10017DF08(&qword_100E66478);
              *((unsigned char *)a1 + *(int *)(v65 + 48)) = a2[*(int *)(v65 + 48)];
              goto LABEL_132;
            case 1u:
              uint64_t v133 = type metadata accessor for WeatherMapOverlayKind();
              (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v133 - 8) + 16))(a1, a2, v133);
              goto LABEL_132;
            case 2u:
              uint64_t v134 = type metadata accessor for DetailCondition();
              (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v134 - 8) + 16))(a1, a2, v134);
              uint64_t v135 = sub_10017DF08(&qword_100E66488);
              *((unsigned char *)a1 + *(int *)(v135 + 48)) = a2[*(int *)(v135 + 48)];
              goto LABEL_132;
            case 4u:
              *(unsigned char *)a1 = *a2;
              uint64_t v136 = *(int *)(sub_10017DF08(&qword_100E66480) + 48);
              uint64_t v137 = (char *)a1 + v136;
              uint64_t v138 = &a2[v136];
              uint64_t v139 = type metadata accessor for Location();
              (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v139 - 8) + 16))(v137, v138, v139);
LABEL_132:
              swift_storeEnumTagMultiPayload();
              break;
            default:
              memcpy(a1, a2, *(void *)(*(void *)(v63 - 8) + 64));
              break;
          }
          uint64_t v140 = sub_10017DF08(&qword_100E66458);
          uint64_t v141 = *(int *)(v140 + 48);
          uint64_t v142 = (char *)a1 + v141;
          uint64_t v143 = &a2[v141];
          long long v144 = *(_OWORD *)v143;
          long long v145 = *((_OWORD *)v143 + 1);
          v142[32] = v143[32];
          *(_OWORD *)uint64_t v142 = v144;
          *((_OWORD *)v142 + 1) = v145;
          uint64_t v146 = *(int *)(v140 + 64);
          uint64_t v147 = (char *)a1 + v146;
          uint64_t v148 = &a2[v146];
          uint64_t v149 = type metadata accessor for Date();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v148, 1, v149))
          {
            uint64_t v150 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
            memcpy(v147, v148, *(void *)(*(void *)(v150 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v149 - 8) + 16))(v147, v148, v149);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v147, 0, 1, v149);
          }
        }
        else
        {
          if (v35) {
            goto LABEL_60;
          }
LABEL_37:
          uint64_t v36 = type metadata accessor for Location();
          (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v36 - 8) + 16))(a1, a2, v36);
        }
        goto LABEL_214;
      case 9u:
        type metadata accessor for WeatherDataAction();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 2u:
            *a1 = *(void *)a2;
            a1[1] = *((void *)a2 + 1);
            unint64_t v107 = *((void *)a2 + 3);
            swift_bridgeObjectRetain();
            if (v107 >= 0xE)
            {
              a1[2] = *((void *)a2 + 2);
              a1[3] = *((void *)a2 + 3);
              swift_bridgeObjectRetain();
            }
            else
            {
              *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
            }
            a1[4] = *((void *)a2 + 4);
            a1[5] = *((void *)a2 + 5);
            goto LABEL_138;
          case 3u:
          case 9u:
            *a1 = *(void *)a2;
            a1[1] = *((void *)a2 + 1);
            a1[2] = *((void *)a2 + 2);
            a1[3] = *((void *)a2 + 3);
            swift_bridgeObjectRetain();
            goto LABEL_138;
          case 4u:
            *a1 = *(void *)a2;
            a1[1] = *((void *)a2 + 1);
            swift_bridgeObjectRetain();
            v320 = (int *)sub_10017DF08(&qword_100E6BBC0);
            uint64_t v108 = v320[12];
            uint64_t v109 = (uint64_t *)((char *)a1 + v108);
            uint64_t v110 = &a2[v108];
            *uint64_t v109 = *(void *)&a2[v108];
            v109[1] = *(void *)&a2[v108 + 8];
            uint64_t v334 = (int *)type metadata accessor for WeatherData(0);
            uint64_t v111 = v334[5];
            uint64_t v112 = (char *)v109 + v111;
            uint64_t v113 = (char *)&v110[v111];
            uint64_t v114 = type metadata accessor for Locale();
            swift_bridgeObjectRetain();
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v113, 1, v114))
            {
              uint64_t v115 = sub_10017DF08(&qword_100E63730);
              memcpy(v112, v113, *(void *)(*(void *)(v115 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v114 - 8) + 16))(v112, v113, v114);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v112, 0, 1, v114);
            }
            uint64_t v154 = v334[6];
            uint64_t v155 = (char *)v109 + v154;
            uint64_t v156 = (char *)&v110[v154];
            uint64_t v157 = type metadata accessor for WeatherDataModel();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v157 - 8) + 16))(v155, v156, v157);
            uint64_t v158 = v334[7];
            uint64_t v159 = (char *)v109 + v158;
            long long v160 = (char *)&v110[v158];
            uint64_t v161 = sub_10017DF08(&qword_100E63738);
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v160, 1, v161))
            {
              uint64_t v162 = type metadata accessor for WeatherData.CachingState(0);
              memcpy(v159, v160, *(void *)(*(void *)(v162 - 8) + 64));
            }
            else
            {
              uint64_t v163 = type metadata accessor for Date();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v163 - 8) + 16))(v159, v160, v163);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v159, 0, 1, v161);
            }
            uint64_t v164 = v334[8];
            uint64_t v165 = (void *)((char *)v109 + v164);
            uint64_t v166 = (char *)&v110[v164];
            uint64_t v167 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
            int v168 = swift_getEnumCaseMultiPayload();
            if (v168 == 1)
            {
              uint64_t v169 = type metadata accessor for WeatherStatisticsModel();
              (*(void (**)(void *, char *, uint64_t))(*(void *)(v169 - 8) + 16))(v165, v166, v169);
              goto LABEL_154;
            }
            if (!v168)
            {
              *uint64_t v165 = *(void *)v166;
              v165[1] = *((void *)v166 + 1);
              swift_bridgeObjectRetain();
LABEL_154:
              swift_storeEnumTagMultiPayload();
              goto LABEL_156;
            }
            memcpy(v165, v166, *(void *)(*(void *)(v167 - 8) + 64));
LABEL_156:
            uint64_t v170 = v334[9];
            uint64_t v171 = (char *)v109 + v170;
            uint64_t v172 = (char *)&v110[v170];
            uint64_t v173 = type metadata accessor for WeatherDataOverrides();
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v172, 1, v173))
            {
              uint64_t v174 = sub_10017DF08(&qword_100E63740);
              memcpy(v171, v172, *(void *)(*(void *)(v174 - 8) + 64));
            }
            else
            {
              uint64_t v175 = type metadata accessor for Date();
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v172, 1, v175))
              {
                uint64_t v176 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
                memcpy(v171, v172, *(void *)(*(void *)(v176 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v175 - 8) + 16))(v171, v172, v175);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v171, 0, 1, v175);
              }
              uint64_t v192 = *(int *)(v173 + 20);
              uint64_t v193 = &v171[v192];
              uint64_t v194 = &v172[v192];
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v172[v192], 1, v175))
              {
                uint64_t v195 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
                memcpy(v193, v194, *(void *)(*(void *)(v195 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v175 - 8) + 16))(v193, v194, v175);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v193, 0, 1, v175);
              }
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v171, 0, 1, v173);
            }
            uint64_t v196 = v320[16];
            uint64_t v197 = (char *)a1 + v196;
            uint64_t v198 = &a2[v196];
            uint64_t v199 = type metadata accessor for UUID();
            (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v199 - 8) + 16))(v197, v198, v199);
            uint64_t v200 = type metadata accessor for PreprocessedWeatherData();
            *(void *)&v197[*(int *)(v200 + 20)] = *(void *)&v198[*(int *)(v200 + 20)];
            uint64_t v326 = (int *)v200;
            uint64_t v332 = v198;
            uint64_t v201 = *(int *)(v200 + 24);
            uint64_t v337 = v197;
            uint64_t v202 = &v197[v201];
            *(void *)uint64_t v202 = *(void *)&v198[v201];
            *((void *)v202 + 1) = *(void *)&v198[v201 + 8];
            *((void *)v202 + 2) = *(void *)&v198[v201 + 16];
            *((void *)v202 + 3) = *(void *)&v198[v201 + 24];
            *((void *)v202 + 4) = *(void *)&v198[v201 + 32];
            *((void *)v202 + 5) = *(void *)&v198[v201 + 40];
            uint64_t v313 = (char *)&v198[v201];
            uint64_t v317 = type metadata accessor for FeelsLikeComponentPreprocessedDataModel();
            uint64_t v203 = *(int *)(v317 + 28);
            v307 = &v202[v203];
            uint64_t v204 = &v313[v203];
            uint64_t v205 = type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference(0);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v204, 1, v205))
            {
              uint64_t v206 = sub_10017DF08(&qword_100E63750);
              memcpy(v307, v204, *(void *)(*(void *)(v206 - 8) + 64));
            }
            else
            {
              *(void *)v307 = *(void *)v204;
              *((void *)v307 + 1) = *((void *)v204 + 1);
              uint64_t v207 = *(int *)(v205 + 20);
              uint64_t v208 = &v307[v207];
              uint64_t v209 = &v204[v207];
              uint64_t v210 = type metadata accessor for TemperatureScaleConfiguration();
              uint64_t v310 = *(void (**)(char *, char *, uint64_t))(*(void *)(v210 - 8) + 16);
              swift_bridgeObjectRetain();
              v310(v208, v209, v210);
              uint64_t v211 = (int *)type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
              *(void *)&v208[v211[5]] = *(void *)&v209[v211[5]];
              *(void *)&v208[v211[6]] = *(void *)&v209[v211[6]];
              *(void *)&v208[v211[7]] = *(void *)&v209[v211[7]];
              uint64_t v212 = v211[8];
              uint64_t v213 = &v208[v212];
              uint64_t v214 = &v209[v212];
              *(void *)uint64_t v213 = *(void *)v214;
              *((void *)v213 + 1) = *((void *)v214 + 1);
              v208[v211[9]] = v209[v211[9]];
              swift_bridgeObjectRetain();
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v307, 0, 1, v205);
            }
            uint64_t v215 = *(int *)(v317 + 32);
            uint64_t v216 = &v202[v215];
            uint64_t v217 = &v313[v215];
            *(void *)uint64_t v216 = *(void *)v217;
            *((void *)v216 + 1) = *((void *)v217 + 1);
            uint64_t v218 = v326[7];
            uint64_t v219 = &v337[v218];
            uint64_t v220 = &v332[v218];
            *(void *)&v337[v218] = *(void *)&v332[v218];
            uint64_t v221 = *(int *)(type metadata accessor for HourlyForecastComponentPreprocessedDataModel() + 20);
            uint64_t v222 = &v219[v221];
            uint64_t v223 = &v220[v221];
            uint64_t v224 = type metadata accessor for WeatherDescription();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            uint64_t v318 = v224;
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v223, 1, v224))
            {
              uint64_t v225 = sub_10017DF08(&qword_100E63758);
              memcpy(v222, v223, *(void *)(*(void *)(v225 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v224 - 8) + 16))(v222, v223, v224);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v222, 0, 1, v224);
            }
            uint64_t v226 = v326[8];
            uint64_t v227 = &v337[v226];
            uint64_t v228 = &v332[v226];
            *(void *)uint64_t v227 = *(void *)&v332[v226];
            *((void *)v227 + 1) = *(void *)&v332[v226 + 8];
            *((void *)v227 + 2) = *(void *)&v332[v226 + 16];
            *((void *)v227 + 3) = *(void *)&v332[v226 + 24];
            *((void *)v227 + 4) = *(void *)&v332[v226 + 32];
            *((void *)v227 + 5) = *(void *)&v332[v226 + 40];
            *((void *)v227 + 6) = *(void *)&v332[v226 + 48];
            *((void *)v227 + 7) = *(void *)&v332[v226 + 56];
            uint64_t v229 = *(int *)(type metadata accessor for ListPreprocessedDataModel() + 32);
            uint64_t v230 = &v227[v229];
            uint64_t v304 = &v228[v229];
            uint64_t v231 = type metadata accessor for Date();
            uint64_t v232 = *(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v231 - 8) + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            uint64_t v308 = v232;
            uint64_t v311 = v231;
            uint64_t v233 = v231;
            uint64_t v234 = v230;
            v232(v230, v304, v233);
            uint64_t v235 = type metadata accessor for WeatherConditionBackgroundTimeData();
            uint64_t v236 = *(int *)(v235 + 20);
            uint64_t v237 = &v230[v236];
            uint64_t v238 = &v304[v236];
            uint64_t v239 = type metadata accessor for Elevation();
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v238, 1, v239))
            {
              uint64_t v240 = sub_10017DF08(&qword_100E63760);
              memcpy(v237, v238, *(void *)(*(void *)(v240 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v239 - 8) + 16))(v237, v238, v239);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v237, 0, 1, v239);
            }
            uint64_t v241 = *(int *)(v235 + 24);
            uint64_t v242 = &v234[v241];
            v243 = &v304[v241];
            uint64_t v244 = type metadata accessor for BackgroundMoonData();
            uint64_t v314 = v235;
            uint64_t v301 = v244;
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v243, 1, v244))
            {
              uint64_t v245 = sub_10017DF08(&qword_100E63768);
              memcpy(v242, v243, *(void *)(*(void *)(v245 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v244 - 8) + 16))(v242, v243, v244);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v242, 0, 1, v244);
            }
            uint64_t v246 = v326[9];
            uint64_t v247 = &v337[v246];
            uint64_t v248 = &v332[v246];
            *(void *)uint64_t v247 = *(void *)v248;
            *((void *)v247 + 1) = *((void *)v248 + 1);
            *((void *)v247 + 2) = *((void *)v248 + 2);
            *((void *)v247 + 3) = *((void *)v248 + 3);
            *((void *)v247 + 4) = *((void *)v248 + 4);
            *((void *)v247 + 5) = *((void *)v248 + 5);
            *((void *)v247 + 6) = *((void *)v248 + 6);
            *((void *)v247 + 7) = *((void *)v248 + 7);
            *((void *)v247 + 8) = *((void *)v248 + 8);
            *((void *)v247 + 9) = *((void *)v248 + 9);
            *((void *)v247 + 10) = *((void *)v248 + 10);
            *((void *)v247 + 11) = *((void *)v248 + 11);
            *((void *)v247 + 12) = *((void *)v248 + 12);
            *((void *)v247 + 13) = *((void *)v248 + 13);
            uint64_t v249 = v326[10];
            uint64_t v303 = &v332[v249];
            v305 = &v337[v249];
            uint64_t v302 = *(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v318 - 8) + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v302(v305, v303, v318);
            uint64_t v250 = *(int *)(type metadata accessor for UVIndexComponentPreprocessedDataModel() + 20);
            uint64_t v251 = &v305[v250];
            uint64_t v252 = &v303[v250];
            *(void *)uint64_t v251 = *(void *)v252;
            *((void *)v251 + 1) = *((void *)v252 + 1);
            uint64_t v253 = v326[11];
            uint64_t v254 = &v337[v253];
            v255 = &v332[v253];
            *(void *)uint64_t v254 = *(void *)v255;
            *((void *)v254 + 1) = *((void *)v255 + 1);
            *((void *)v254 + 2) = *((void *)v255 + 2);
            *((void *)v254 + 3) = *((void *)v255 + 3);
            *((void *)v254 + 4) = *((void *)v255 + 4);
            *((void *)v254 + 5) = *((void *)v255 + 5);
            uint64_t v256 = v326[12];
            uint64_t v257 = &v337[v256];
            uint64_t v258 = &v332[v256];
            uint64_t v259 = type metadata accessor for PressureTrend();
            uint64_t v306 = *(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v259 - 8) + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v306(v257, v258, v259);
            uint64_t v260 = (int *)type metadata accessor for PressureComponentPreprocessedDataModel();
            uint64_t v261 = v260[5];
            uint64_t v262 = &v257[v261];
            uint64_t v263 = &v258[v261];
            *(void *)uint64_t v262 = *(void *)v263;
            *((void *)v262 + 1) = *((void *)v263 + 1);
            uint64_t v264 = v260[6];
            uint64_t v265 = &v257[v264];
            uint64_t v266 = &v258[v264];
            *(void *)uint64_t v265 = *(void *)v266;
            *((void *)v265 + 1) = *((void *)v266 + 1);
            uint64_t v267 = v260[7];
            uint64_t v268 = &v257[v267];
            v269 = &v258[v267];
            *(void *)uint64_t v268 = *(void *)v269;
            *((void *)v268 + 1) = *((void *)v269 + 1);
            *(void *)&v257[v260[8]] = *(void *)&v258[v260[8]];
            uint64_t v270 = v260[9];
            uint64_t v271 = &v257[v270];
            uint64_t v272 = &v258[v270];
            *(void *)uint64_t v271 = *(void *)v272;
            *((void *)v271 + 1) = *((void *)v272 + 1);
            uint64_t v273 = v326[13];
            uint64_t v274 = &v337[v273];
            uint64_t v275 = &v332[v273];
            *(void *)uint64_t v274 = *(void *)v275;
            *((void *)v274 + 1) = *((void *)v275 + 1);
            *((void *)v274 + 2) = *((void *)v275 + 2);
            *((void *)v274 + 3) = *((void *)v275 + 3);
            *((void *)v274 + 4) = *((void *)v275 + 4);
            *((void *)v274 + 5) = *((void *)v275 + 5);
            *((void *)v274 + 6) = *((void *)v275 + 6);
            *((void *)v274 + 7) = *((void *)v275 + 7);
            *((void *)v274 + 8) = *((void *)v275 + 8);
            *((void *)v274 + 9) = *((void *)v275 + 9);
            *((void *)v274 + 10) = *((void *)v275 + 10);
            *((void *)v274 + 11) = *((void *)v275 + 11);
            *((void *)v274 + 12) = *((void *)v275 + 12);
            *((void *)v274 + 13) = *((void *)v275 + 13);
            *((void *)v274 + 14) = *((void *)v275 + 14);
            *((void *)v274 + 15) = *((void *)v275 + 15);
            *((void *)v274 + 16) = *((void *)v275 + 16);
            *((void *)v274 + 17) = *((void *)v275 + 17);
            *((void *)v274 + 18) = *((void *)v275 + 18);
            *((void *)v274 + 19) = *((void *)v275 + 19);
            *((void *)v274 + 20) = *((void *)v275 + 20);
            *((void *)v274 + 21) = *((void *)v275 + 21);
            *((void *)v274 + 22) = *((void *)v275 + 22);
            *((void *)v274 + 23) = *((void *)v275 + 23);
            *((void *)v274 + 24) = *((void *)v275 + 24);
            *((void *)v274 + 25) = *((void *)v275 + 25);
            *((void *)v274 + 26) = *((void *)v275 + 26);
            *((void *)v274 + 27) = *((void *)v275 + 27);
            *((void *)v274 + 28) = *((void *)v275 + 28);
            uint64_t v276 = v326[14];
            uint64_t v277 = &v337[v276];
            uint64_t v278 = &v332[v276];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v308(v277, v278, v311);
            uint64_t v279 = *(int *)(v314 + 20);
            uint64_t v280 = &v277[v279];
            uint64_t v281 = &v278[v279];
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v278[v279], 1, v239))
            {
              uint64_t v282 = sub_10017DF08(&qword_100E63760);
              memcpy(v280, v281, *(void *)(*(void *)(v282 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v239 - 8) + 16))(v280, v281, v239);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v280, 0, 1, v239);
            }
            uint64_t v283 = *(int *)(v314 + 24);
            uint64_t v284 = &v277[v283];
            uint64_t v285 = &v278[v283];
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v278[v283], 1, v301))
            {
              uint64_t v286 = sub_10017DF08(&qword_100E63768);
              memcpy(v284, v285, *(void *)(*(void *)(v286 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v301 - 8) + 16))(v284, v285, v301);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v284, 0, 1, v301);
            }
            uint64_t v287 = v326[15];
            uint64_t v288 = &v337[v287];
            uint64_t v289 = &v332[v287];
            *(void *)uint64_t v288 = *(void *)v289;
            *((void *)v288 + 1) = *((void *)v289 + 1);
            *((void *)v288 + 2) = *((void *)v289 + 2);
            *((void *)v288 + 3) = *((void *)v289 + 3);
            *((void *)v288 + 4) = *((void *)v289 + 4);
            *((void *)v288 + 5) = *((void *)v289 + 5);
            *((void *)v288 + 6) = *((void *)v289 + 6);
            *((void *)v288 + 7) = *((void *)v289 + 7);
            *((void *)v288 + 8) = *((void *)v289 + 8);
            *((void *)v288 + 9) = *((void *)v289 + 9);
            *((void *)v288 + 10) = *((void *)v289 + 10);
            *((void *)v288 + 11) = *((void *)v289 + 11);
            *((void *)v288 + 12) = *((void *)v289 + 12);
            *((void *)v288 + 13) = *((void *)v289 + 13);
            uint64_t v290 = v320[20];
            uint64_t v322 = (uint64_t *)((char *)a1 + v290);
            uint64_t v327 = &a2[v290];
            type metadata accessor for NewsDataModel();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (swift_getEnumCaseMultiPayload() == 1)
            {
              void *v322 = *(void *)v327;
              swift_bridgeObjectRetain();
            }
            else
            {
              uint64_t v291 = type metadata accessor for News();
              (*(void (**)(void *, unsigned __int8 *, uint64_t))(*(void *)(v291 - 8) + 16))(v322, v327, v291);
            }
LABEL_213:
            swift_storeEnumTagMultiPayload();
LABEL_214:
            swift_storeEnumTagMultiPayload();
LABEL_215:
            swift_storeEnumTagMultiPayload();
            break;
          case 5u:
            *a1 = *(void *)a2;
            a1[1] = *((void *)a2 + 1);
            swift_bridgeObjectRetain();
            uint64_t v116 = *(int *)(sub_10017DF08(&qword_100E6BBB0) + 48);
            uint64_t v117 = (uint64_t *)((char *)a1 + v116);
            uint64_t v118 = &a2[v116];
            type metadata accessor for NewsDataModel();
            if (swift_getEnumCaseMultiPayload() == 1)
            {
              void *v117 = *(void *)v118;
              swift_bridgeObjectRetain();
            }
            else
            {
              uint64_t v151 = type metadata accessor for News();
              (*(void (**)(void *, unsigned __int8 *, uint64_t))(*(void *)(v151 - 8) + 16))(v117, v118, v151);
            }
            goto LABEL_213;
          case 6u:
            *a1 = *(void *)a2;
            a1[1] = *((void *)a2 + 1);
            swift_bridgeObjectRetain();
            uint64_t v119 = *(int *)(sub_10017DF08(&qword_100E6BBB8) + 48);
            uint64_t v120 = (char *)a1 + v119;
            uint64_t v121 = &a2[v119];
            uint64_t v122 = type metadata accessor for AvailableDataSets();
            goto LABEL_112;
          case 8u:
            *a1 = *(void *)a2;
            a1[1] = *((void *)a2 + 1);
            swift_bridgeObjectRetain();
            uint64_t v123 = *(int *)(sub_10017DF08(&qword_100E6BBA8) + 48);
            uint64_t v120 = (char *)a1 + v123;
            uint64_t v121 = &a2[v123];
            uint64_t v122 = type metadata accessor for WeatherStatisticsModel();
LABEL_112:
            (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v122 - 8) + 16))(v120, v121, v122);
            goto LABEL_214;
          default:
            *a1 = *(void *)a2;
            a1[1] = *((void *)a2 + 1);
LABEL_138:
            swift_bridgeObjectRetain();
            goto LABEL_214;
        }
        break;
      case 0xAu:
        uint64_t v15 = type metadata accessor for DebugAction();
        int v37 = swift_getEnumCaseMultiPayload();
        if (v37 == 1) {
          goto LABEL_37;
        }
        if (v37) {
          goto LABEL_60;
        }
        uint64_t v38 = type metadata accessor for WeatherCondition();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v38))
        {
          uint64_t v39 = sub_10017DF08(&qword_100E63A50);
          memcpy(a1, a2, *(void *)(*(void *)(v39 - 8) + 64));
        }
        else
        {
          (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v38 - 8) + 16))(a1, a2, v38);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v38);
        }
        uint64_t v104 = *(int *)(sub_10017DF08(&qword_100E6F648) + 48);
        uint64_t v105 = (uint64_t *)((char *)a1 + v104);
        uint64_t v106 = &a2[v104];
        void *v105 = *(void *)v106;
        v105[1] = *((void *)v106 + 1);
        swift_bridgeObjectRetain();
        goto LABEL_214;
      case 0xBu:
        uint64_t v15 = type metadata accessor for ConditionDetailViewAction();
        int v16 = swift_getEnumCaseMultiPayload();
        switch(v16)
        {
          case 2:
            *a1 = *(void *)a2;
            a1[1] = *((void *)a2 + 1);
            uint64_t v43 = (int *)type metadata accessor for DetailChartSelection();
            uint64_t v44 = v43[5];
            uint64_t v328 = (char *)a1 + v44;
            uint64_t v45 = &a2[v44];
            uint64_t v46 = type metadata accessor for Date();
            uint64_t v47 = *(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v46 - 8) + 16);
            swift_bridgeObjectRetain();
            v47(v328, v45, v46);
            v47((char *)a1 + v43[6], &a2[v43[6]], v46);
            v47((char *)a1 + v43[7], &a2[v43[7]], v46);
            *(uint64_t *)((char *)a1 + v43[8]) = *(void *)&a2[v43[8]];
            uint64_t v48 = v43[9];
            uint64_t v49 = (char *)a1 + v48;
            uint64_t v50 = &a2[v48];
            char v51 = v50[8];
            *(void *)uint64_t v49 = *(void *)v50;
            v49[8] = v51;
            goto LABEL_214;
          case 1:
            uint64_t v52 = type metadata accessor for DetailCondition();
            (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v52 - 8) + 16))(a1, a2, v52);
            goto LABEL_214;
          case 0:
LABEL_14:
            uint64_t v17 = type metadata accessor for Date();
            (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v17 - 8) + 16))(a1, a2, v17);
            goto LABEL_214;
        }
LABEL_60:
        memcpy(a1, a2, *(void *)(*(void *)(v15 - 8) + 64));
        goto LABEL_215;
      case 0xDu:
        uint64_t v15 = type metadata accessor for MoonDetailViewAction();
        int v18 = swift_getEnumCaseMultiPayload();
        if (v18 == 1) {
          goto LABEL_14;
        }
        if (v18) {
          goto LABEL_60;
        }
        type metadata accessor for MoonDetailSelectedDate();
        swift_getEnumCaseMultiPayload();
        uint64_t v19 = type metadata accessor for Date();
        (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v19 - 8) + 16))(a1, a2, v19);
        swift_storeEnumTagMultiPayload();
        goto LABEL_214;
      case 0xEu:
        uint64_t v15 = type metadata accessor for AveragesDetailViewAction();
        if (swift_getEnumCaseMultiPayload() != 1) {
          goto LABEL_60;
        }
        *a1 = *(void *)a2;
        int v20 = (int *)type metadata accessor for DetailHeroChartLollipopPosition(0);
        uint64_t v21 = v20[5];
        int v22 = (char *)a1 + v21;
        uint64_t v23 = &a2[v21];
        uint64_t v24 = type metadata accessor for Date();
        (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v24 - 8) + 16))(v22, v23, v24);
        *(uint64_t *)((char *)a1 + v20[6]) = *(void *)&a2[v20[6]];
        *(uint64_t *)((char *)a1 + v20[7]) = *(void *)&a2[v20[7]];
        swift_storeEnumTagMultiPayload();
        goto LABEL_215;
      case 0x10u:
        *a1 = *(void *)a2;
        a1[1] = *((void *)a2 + 1);
        swift_bridgeObjectRetain();
        goto LABEL_215;
      case 0x11u:
        uint64_t v40 = type metadata accessor for PerformanceTestAction();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            uint64_t v41 = type metadata accessor for DetailCondition();
            (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v41 - 8) + 16))(a1, a2, v41);
            goto LABEL_70;
          case 2u:
            uint64_t v66 = type metadata accessor for Location();
            (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v66 - 8) + 16))(a1, a2, v66);
            goto LABEL_70;
          case 3u:
            *a1 = *(void *)a2;
            uint64_t v67 = sub_10017DF08((uint64_t *)&unk_100EA0250);
            uint64_t v68 = *(int *)(v67 + 48);
            uint64_t v69 = (char *)a1 + v68;
            uint64_t v70 = &a2[v68];
            uint64_t v71 = type metadata accessor for WeatherMapOverlayKind();
            (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v71 - 8) + 16))(v69, v70, v71);
            *((unsigned char *)a1 + *(int *)(v67 + 64)) = a2[*(int *)(v67 + 64)];
            goto LABEL_70;
          case 4u:
            uint64_t v72 = type metadata accessor for WeatherCondition();
            (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v72 - 8) + 16))(a1, a2, v72);
LABEL_70:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(a1, a2, *(void *)(*(void *)(v40 - 8) + 64));
            break;
        }
        goto LABEL_215;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
        break;
    }
  }
  *(uint64_t *)((char *)a1 + a3[5]) = *(void *)&a2[a3[5]];
  swift_retain();
  swift_release();
  *(uint64_t *)((char *)a1 + a3[6]) = *(void *)&a2[a3[6]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((unsigned char *)a1 + a3[7]) = a2[a3[7]];
  return a1;
}

void *sub_100A12E50(void *a1, void *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for MainAction();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v7 = type metadata accessor for AppConfiguration();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      goto LABEL_193;
    case 2u:
      uint64_t v8 = type metadata accessor for EnvironmentAction();
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 11)
      {
        uint64_t v31 = type metadata accessor for ConfiguredUnitsAction();
        int v67 = swift_getEnumCaseMultiPayload();
        if (v67 == 1)
        {
          uint64_t v122 = type metadata accessor for UnitConfiguration.Temperature();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v122))
          {
            uint64_t v123 = sub_10017DF08(&qword_100E6F620);
            memcpy(a1, a2, *(void *)(*(void *)(v123 - 8) + 64));
          }
          else
          {
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v122 - 8) + 32))(a1, a2, v122);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v122);
          }
        }
        else
        {
          if (v67) {
            goto LABEL_104;
          }
          uint64_t v68 = type metadata accessor for ConfiguredUnit();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v68 - 8) + 32))(a1, a2, v68);
        }
        goto LABEL_191;
      }
      if (EnumCaseMultiPayload == 3)
      {
        uint64_t v31 = type metadata accessor for ActivityAction();
        int v69 = swift_getEnumCaseMultiPayload();
        if (v69 != 1)
        {
          if (v69) {
            goto LABEL_104;
          }
          type metadata accessor for SavedLocation();
          if (swift_getEnumCaseMultiPayload() == 1) {
            uint64_t v70 = type metadata accessor for SavedLocation.Placeholder();
          }
          else {
            uint64_t v70 = type metadata accessor for Location();
          }
          (*(void (**)(void *, void *))(*(void *)(v70 - 8) + 32))(a1, a2);
          swift_storeEnumTagMultiPayload();
          goto LABEL_191;
        }
        uint64_t v124 = type metadata accessor for PreviewLocation();
        int v125 = swift_getEnumCaseMultiPayload();
        if (v125 == 2)
        {
          *a1 = *a2;
          *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 1);
          *(_OWORD *)(a1 + 3) = *(_OWORD *)(a2 + 3);
          *(_OWORD *)(a1 + 5) = *(_OWORD *)(a2 + 5);
          uint64_t v252 = type metadata accessor for SearchLocation();
          uint64_t v253 = *(int *)(v252 + 32);
          __dsta = (char *)a1 + v253;
          uint64_t v254 = (char *)a2 + v253;
          uint64_t v255 = type metadata accessor for Location();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v254, 1, v255))
          {
            uint64_t v256 = sub_10017DF08(&qword_100E639E8);
            memcpy(__dsta, v254, *(void *)(*(void *)(v256 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v255 - 8) + 32))(__dsta, v254, v255);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dsta, 0, 1, v255);
          }
          uint64_t v261 = *(int *)(v252 + 36);
          uint64_t v262 = (char *)a1 + v261;
          uint64_t v263 = (char *)a2 + v261;
          *(_OWORD *)uint64_t v262 = *(_OWORD *)v263;
          v262[16] = v263[16];
        }
        else if (v125 == 1)
        {
          uint64_t v257 = type metadata accessor for LocationOfInterest();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v257 - 8) + 32))(a1, a2, v257);
        }
        else
        {
          if (v125)
          {
            memcpy(a1, a2, *(void *)(*(void *)(v124 - 8) + 64));
LABEL_191:
            swift_storeEnumTagMultiPayload();
            goto LABEL_192;
          }
          uint64_t v126 = type metadata accessor for Location();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v126 - 8) + 32))(a1, a2, v126);
        }
        swift_storeEnumTagMultiPayload();
        goto LABEL_191;
      }
      if (EnumCaseMultiPayload != 2) {
        goto LABEL_35;
      }
      uint64_t v29 = type metadata accessor for Locale();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v29 - 8) + 32))(a1, a2, v29);
LABEL_192:
      swift_storeEnumTagMultiPayload();
LABEL_193:
      swift_storeEnumTagMultiPayload();
LABEL_194:
      uint64_t v264 = a3[6];
      *(void *)((char *)a1 + a3[5]) = *(void *)((char *)a2 + a3[5]);
      *(void *)((char *)a1 + v264) = *(void *)((char *)a2 + v264);
      *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
      return a1;
    case 3u:
      uint64_t v8 = type metadata accessor for LocationsAction();
      int v30 = swift_getEnumCaseMultiPayload();
      if (v30 == 1)
      {
        uint64_t v50 = type metadata accessor for Location();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v50 - 8) + 32))(a1, a2, v50);
        uint64_t v51 = sub_10017DF08(&qword_100E6F628);
        *((unsigned char *)a1 + *(int *)(v51 + 48)) = *((unsigned char *)a2 + *(int *)(v51 + 48));
      }
      else
      {
        if (v30) {
          goto LABEL_35;
        }
        uint64_t v31 = type metadata accessor for CurrentLocation();
        if (swift_getEnumCaseMultiPayload() > 2)
        {
LABEL_104:
          memcpy(a1, a2, *(void *)(*(void *)(v31 - 8) + 64));
        }
        else
        {
LABEL_28:
          uint64_t v121 = type metadata accessor for Location();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v121 - 8) + 32))(a1, a2, v121);
          swift_storeEnumTagMultiPayload();
        }
      }
      goto LABEL_192;
    case 4u:
      uint64_t v8 = type metadata accessor for NotificationsAction();
      int v32 = swift_getEnumCaseMultiPayload();
      if (v32 == 5)
      {
        uint64_t v71 = type metadata accessor for Location();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v71 - 8) + 32))(a1, a2, v71);
        uint64_t v72 = *(int *)(sub_10017DF08(&qword_100E6F638) + 48);
        uint64_t v73 = (char *)a1 + v72;
        uint64_t v74 = (char *)a2 + v72;
        uint64_t v75 = type metadata accessor for NotificationSubscription.Kind();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v75 - 8) + 32))(v73, v74, v75);
        goto LABEL_192;
      }
      if (v32 == 2)
      {
        uint64_t v62 = type metadata accessor for NotificationSubscription.Location();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v62 - 8) + 32))(a1, a2, v62);
        uint64_t v63 = *(int *)(sub_10017DF08(&qword_100E6F630) + 48);
        uint64_t v64 = (char *)a1 + v63;
        uint64_t v65 = (char *)a2 + v63;
        uint64_t v66 = type metadata accessor for NotificationSubscription.Kind();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v66 - 8) + 32))(v64, v65, v66);
        goto LABEL_192;
      }
      if (v32 != 1) {
        goto LABEL_35;
      }
      uint64_t v33 = type metadata accessor for LocationModel();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v33))
      {
        uint64_t v34 = type metadata accessor for NotificationLocation();
        memcpy(a1, a2, *(void *)(*(void *)(v34 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v33 - 8) + 32))(a1, a2, v33);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v33);
      }
      uint64_t v116 = *(int *)(sub_10017DF08((uint64_t *)&unk_100EAC3E0) + 48);
      uint64_t v117 = (char *)a1 + v116;
      uint64_t v118 = (char *)a2 + v116;
      uint64_t v119 = type metadata accessor for URL();
      if (!_s7Weather24LocationCompositionStateOwet_0((uint64_t)v118, 1, v119)) {
        goto LABEL_134;
      }
      uint64_t v120 = sub_10017DF08(&qword_100E749B0);
      memcpy(v117, v118, *(void *)(*(void *)(v120 - 8) + 64));
      goto LABEL_192;
    case 5u:
      uint64_t v8 = type metadata accessor for NotificationsOptInAction();
      int v9 = swift_getEnumCaseMultiPayload();
      if (v9 == 4) {
        goto LABEL_13;
      }
      if (v9 != 2) {
        goto LABEL_35;
      }
      uint64_t v10 = type metadata accessor for Location();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 32))(a1, a2, v10);
      uint64_t v11 = sub_10017DF08(&qword_100E6BBD8);
      *((unsigned char *)a1 + *(int *)(v11 + 48)) = *((unsigned char *)a2 + *(int *)(v11 + 48));
      goto LABEL_192;
    case 6u:
      uint64_t v12 = type metadata accessor for ViewAction();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          uint64_t v13 = type metadata accessor for ListViewAction();
          int v14 = swift_getEnumCaseMultiPayload();
          if (v14 == 2) {
            goto LABEL_125;
          }
          if (v14) {
            goto LABEL_141;
          }
          uint64_t v15 = type metadata accessor for LocationModel();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v15 - 8) + 32))(a1, a2, v15);
          uint64_t v16 = sub_10017DF08(&qword_100E6F640);
          *((unsigned char *)a1 + *(int *)(v16 + 48)) = *((unsigned char *)a2 + *(int *)(v16 + 48));
          goto LABEL_185;
        case 1u:
          uint64_t v13 = type metadata accessor for LocationViewerViewAction();
          int v107 = swift_getEnumCaseMultiPayload();
          if (v107 == 2)
          {
LABEL_125:
            uint64_t v149 = type metadata accessor for Location.Identifier();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v149 - 8) + 32))(a1, a2, v149);
          }
          else if (v107 == 1)
          {
            uint64_t v164 = type metadata accessor for WeatherMapOverlayKind();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v164 - 8) + 32))(a1, a2, v164);
          }
          else
          {
            if (v107)
            {
LABEL_141:
              memcpy(a1, a2, *(void *)(*(void *)(v13 - 8) + 64));
              goto LABEL_186;
            }
            uint64_t v108 = type metadata accessor for LocationModel();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v108 - 8) + 32))(a1, a2, v108);
          }
LABEL_185:
          swift_storeEnumTagMultiPayload();
LABEL_186:
          swift_storeEnumTagMultiPayload();
          break;
        case 3u:
          uint64_t v13 = type metadata accessor for SearchViewAction();
          switch(swift_getEnumCaseMultiPayload())
          {
            case 0u:
              uint64_t v109 = type metadata accessor for CodableError();
              (*(void (**)(void *, void *, uint64_t))(*(void *)(v109 - 8) + 32))(a1, a2, v109);
              goto LABEL_185;
            case 3u:
            case 6u:
              uint64_t v165 = type metadata accessor for Location();
              (*(void (**)(void *, void *, uint64_t))(*(void *)(v165 - 8) + 32))(a1, a2, v165);
              goto LABEL_185;
            case 4u:
              uint64_t v166 = type metadata accessor for LocationOfInterest();
              (*(void (**)(void *, void *, uint64_t))(*(void *)(v166 - 8) + 32))(a1, a2, v166);
              goto LABEL_185;
            case 5u:
              *a1 = *a2;
              *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 1);
              *(_OWORD *)(a1 + 3) = *(_OWORD *)(a2 + 3);
              *(_OWORD *)(a1 + 5) = *(_OWORD *)(a2 + 5);
              uint64_t v167 = type metadata accessor for SearchLocation();
              uint64_t v168 = *(int *)(v167 + 32);
              uint64_t v169 = (char *)a1 + v168;
              uint64_t v170 = (char *)a2 + v168;
              uint64_t v171 = type metadata accessor for Location();
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v170, 1, v171))
              {
                uint64_t v172 = sub_10017DF08(&qword_100E639E8);
                memcpy(v169, v170, *(void *)(*(void *)(v172 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v171 - 8) + 32))(v169, v170, v171);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v169, 0, 1, v171);
              }
              uint64_t v258 = *(int *)(v167 + 36);
              uint64_t v259 = (char *)a1 + v258;
              uint64_t v260 = (char *)a2 + v258;
              *(_OWORD *)uint64_t v259 = *(_OWORD *)v260;
              v259[16] = v260[16];
              goto LABEL_185;
            default:
              goto LABEL_141;
          }
        case 4u:
          uint64_t v110 = type metadata accessor for InteractiveMapViewAction();
          switch(swift_getEnumCaseMultiPayload())
          {
            case 0u:
            case 1u:
            case 2u:
            case 4u:
              uint64_t v174 = type metadata accessor for Location();
              (*(void (**)(void *, void *, uint64_t))(*(void *)(v174 - 8) + 32))(a1, a2, v174);
              goto LABEL_149;
            case 3u:
              uint64_t v173 = type metadata accessor for WeatherMapOverlayKind();
              (*(void (**)(void *, void *, uint64_t))(*(void *)(v173 - 8) + 32))(a1, a2, v173);
LABEL_149:
              swift_storeEnumTagMultiPayload();
              break;
            default:
              memcpy(a1, a2, *(void *)(*(void *)(v110 - 8) + 64));
              break;
          }
          goto LABEL_186;
        case 5u:
          *(_OWORD *)a1 = *(_OWORD *)a2;
          *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
          *((unsigned char *)a1 + 17) = *((unsigned char *)a2 + 17);
          *((unsigned char *)a1 + 18) = *((unsigned char *)a2 + 18);
          uint64_t v111 = *(int *)(type metadata accessor for DisplayMetrics() + 36);
          uint64_t v112 = (char *)a1 + v111;
          uint64_t v113 = (char *)a2 + v111;
          uint64_t v114 = type metadata accessor for DynamicTypeSize();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v114 - 8) + 32))(v112, v113, v114);
          goto LABEL_186;
        default:
          memcpy(a1, a2, *(void *)(*(void *)(v12 - 8) + 64));
          goto LABEL_193;
      }
      goto LABEL_193;
    case 7u:
      uint64_t v8 = type metadata accessor for ModalViewAction();
      if (swift_getEnumCaseMultiPayload()) {
        goto LABEL_35;
      }
      uint64_t v31 = type metadata accessor for LocationPreviewViewAction();
      if (swift_getEnumCaseMultiPayload() == 1) {
        goto LABEL_28;
      }
      goto LABEL_104;
    case 8u:
      uint64_t v8 = type metadata accessor for LocationViewAction();
      int v35 = swift_getEnumCaseMultiPayload();
      if (v35 == 2)
      {
        uint64_t v76 = type metadata accessor for Location();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v76 - 8) + 32))(a1, a2, v76);
        uint64_t v77 = *(int *)(sub_10017DF08(&qword_100E66450) + 48);
        uint64_t v78 = (char *)a1 + v77;
        uint64_t v79 = (char *)a2 + v77;
        uint64_t v80 = type metadata accessor for LocationOfInterest();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v80 - 8) + 32))(v78, v79, v80);
        uint64_t v81 = *(int *)(sub_10017DF08(&qword_100E66448) + 48);
        uint64_t v82 = (char *)a1 + v81;
        uint64_t v83 = (char *)a2 + v81;
        long long v84 = *((_OWORD *)v83 + 1);
        *(_OWORD *)uint64_t v82 = *(_OWORD *)v83;
        *((_OWORD *)v82 + 1) = v84;
        v82[32] = v83[32];
      }
      else if (v35 == 1)
      {
        uint64_t v85 = type metadata accessor for LocationComponentAction(0);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            uint64_t v86 = type metadata accessor for URL();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v86 - 8) + 32))(a1, a2, v86);
            uint64_t v87 = sub_10017DF08(&qword_100E66478);
            *((unsigned char *)a1 + *(int *)(v87 + 48)) = *((unsigned char *)a2 + *(int *)(v87 + 48));
            goto LABEL_131;
          case 1u:
            uint64_t v150 = type metadata accessor for WeatherMapOverlayKind();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v150 - 8) + 32))(a1, a2, v150);
            goto LABEL_131;
          case 2u:
            uint64_t v151 = type metadata accessor for DetailCondition();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v151 - 8) + 32))(a1, a2, v151);
            uint64_t v152 = sub_10017DF08(&qword_100E66488);
            *((unsigned char *)a1 + *(int *)(v152 + 48)) = *((unsigned char *)a2 + *(int *)(v152 + 48));
            goto LABEL_131;
          case 4u:
            *(unsigned char *)a1 = *(unsigned char *)a2;
            uint64_t v153 = *(int *)(sub_10017DF08(&qword_100E66480) + 48);
            uint64_t v154 = (char *)a1 + v153;
            uint64_t v155 = (char *)a2 + v153;
            uint64_t v156 = type metadata accessor for Location();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v156 - 8) + 32))(v154, v155, v156);
LABEL_131:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(a1, a2, *(void *)(*(void *)(v85 - 8) + 64));
            break;
        }
        uint64_t v157 = sub_10017DF08(&qword_100E66458);
        uint64_t v158 = *(int *)(v157 + 48);
        uint64_t v159 = (char *)a1 + v158;
        long long v160 = (char *)a2 + v158;
        long long v161 = *((_OWORD *)v160 + 1);
        *(_OWORD *)uint64_t v159 = *(_OWORD *)v160;
        *((_OWORD *)v159 + 1) = v161;
        v159[32] = v160[32];
        uint64_t v162 = *(int *)(v157 + 64);
        uint64_t v117 = (char *)a1 + v162;
        uint64_t v118 = (char *)a2 + v162;
        uint64_t v119 = type metadata accessor for Date();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v118, 1, v119))
        {
          uint64_t v163 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
          memcpy(v117, v118, *(void *)(*(void *)(v163 - 8) + 64));
        }
        else
        {
LABEL_134:
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v119 - 8) + 32))(v117, v118, v119);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v117, 0, 1, v119);
        }
      }
      else
      {
        if (v35) {
          goto LABEL_35;
        }
LABEL_39:
        uint64_t v36 = type metadata accessor for Location();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v36 - 8) + 32))(a1, a2, v36);
      }
      goto LABEL_192;
    case 9u:
      uint64_t v37 = type metadata accessor for WeatherDataAction();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 4u:
          *(_OWORD *)a1 = *(_OWORD *)a2;
          uint64_t v271 = (int *)sub_10017DF08(&qword_100E6BBC0);
          uint64_t v38 = v271[12];
          uint64_t v39 = (char *)a1 + v38;
          uint64_t v40 = (char *)a2 + v38;
          *(_OWORD *)((char *)a1 + v38) = *(_OWORD *)((char *)a2 + v38);
          uint64_t v41 = (int *)type metadata accessor for WeatherData(0);
          uint64_t v42 = v41[5];
          uint64_t v43 = &v39[v42];
          uint64_t v44 = &v40[v42];
          uint64_t v45 = type metadata accessor for Locale();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v44, 1, v45))
          {
            uint64_t v46 = sub_10017DF08(&qword_100E63730);
            memcpy(v43, v44, *(void *)(*(void *)(v46 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v45 - 8) + 32))(v43, v44, v45);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v43, 0, 1, v45);
          }
          uint64_t v127 = v41[6];
          uint64_t v128 = &v39[v127];
          uint64_t v129 = &v40[v127];
          uint64_t v130 = type metadata accessor for WeatherDataModel();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v130 - 8) + 32))(v128, v129, v130);
          uint64_t v131 = v41[7];
          uint64_t v132 = &v39[v131];
          uint64_t v133 = &v40[v131];
          uint64_t v134 = sub_10017DF08(&qword_100E63738);
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v133, 1, v134))
          {
            uint64_t v135 = type metadata accessor for WeatherData.CachingState(0);
            memcpy(v132, v133, *(void *)(*(void *)(v135 - 8) + 64));
          }
          else
          {
            uint64_t v136 = type metadata accessor for Date();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v136 - 8) + 32))(v132, v133, v136);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v132, 0, 1, v134);
          }
          uint64_t v137 = v41[8];
          uint64_t v138 = &v39[v137];
          uint64_t v139 = &v40[v137];
          uint64_t v140 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            uint64_t v141 = type metadata accessor for WeatherStatisticsModel();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v141 - 8) + 32))(v138, v139, v141);
            swift_storeEnumTagMultiPayload();
          }
          else
          {
            memcpy(v138, v139, *(void *)(*(void *)(v140 - 8) + 64));
          }
          uint64_t v142 = v41[9];
          uint64_t v143 = &v39[v142];
          long long v144 = &v40[v142];
          uint64_t v145 = type metadata accessor for WeatherDataOverrides();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v144, 1, v145))
          {
            uint64_t v146 = sub_10017DF08(&qword_100E63740);
            memcpy(v143, v144, *(void *)(*(void *)(v146 - 8) + 64));
          }
          else
          {
            uint64_t v147 = type metadata accessor for Date();
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v144, 1, v147))
            {
              uint64_t v148 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
              memcpy(v143, v144, *(void *)(*(void *)(v148 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v147 - 8) + 32))(v143, v144, v147);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v143, 0, 1, v147);
            }
            uint64_t v175 = *(int *)(v145 + 20);
            uint64_t v176 = &v143[v175];
            uint64_t v177 = &v144[v175];
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v177, 1, v147))
            {
              uint64_t v178 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
              memcpy(v176, v177, *(void *)(*(void *)(v178 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v147 - 8) + 32))(v176, v177, v147);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v176, 0, 1, v147);
            }
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v143, 0, 1, v145);
          }
          uint64_t v179 = v271[16];
          uint64_t v180 = (char *)a1 + v179;
          uint64_t v181 = (char *)a2 + v179;
          uint64_t v182 = type metadata accessor for UUID();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v182 - 8) + 32))(v180, v181, v182);
          uint64_t v183 = type metadata accessor for PreprocessedWeatherData();
          *(void *)&v180[*(int *)(v183 + 20)] = *(void *)&v181[*(int *)(v183 + 20)];
          uint64_t v272 = (int *)v183;
          uint64_t v273 = v181;
          uint64_t v184 = *(int *)(v183 + 24);
          __dst = v180;
          uint64_t v185 = &v180[v184];
          uint64_t v186 = &v181[v184];
          long long v187 = *(_OWORD *)&v181[v184 + 16];
          *(_OWORD *)uint64_t v185 = *(_OWORD *)&v181[v184];
          *((_OWORD *)v185 + 1) = v187;
          *((_OWORD *)v185 + 2) = *(_OWORD *)&v181[v184 + 32];
          uint64_t v188 = type metadata accessor for FeelsLikeComponentPreprocessedDataModel();
          uint64_t v189 = *(int *)(v188 + 28);
          id v190 = &v185[v189];
          uint64_t v191 = &v186[v189];
          uint64_t v192 = type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference(0);
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v191, 1, v192))
          {
            uint64_t v193 = sub_10017DF08(&qword_100E63750);
            memcpy(v190, v191, *(void *)(*(void *)(v193 - 8) + 64));
          }
          else
          {
            *(_OWORD *)id v190 = *(_OWORD *)v191;
            uint64_t v194 = *(int *)(v192 + 20);
            uint64_t v269 = v188;
            uint64_t v195 = &v190[v194];
            uint64_t v196 = &v191[v194];
            uint64_t v197 = type metadata accessor for TemperatureScaleConfiguration();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v197 - 8) + 32))(v195, v196, v197);
            uint64_t v198 = (int *)type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
            *(void *)&v195[v198[5]] = *(void *)&v196[v198[5]];
            *(void *)&v195[v198[6]] = *(void *)&v196[v198[6]];
            *(void *)&v195[v198[7]] = *(void *)&v196[v198[7]];
            *(_OWORD *)&v195[v198[8]] = *(_OWORD *)&v196[v198[8]];
            v195[v198[9]] = v196[v198[9]];
            uint64_t v188 = v269;
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v190, 0, 1, v192);
          }
          *(_OWORD *)&v185[*(int *)(v188 + 32)] = *(_OWORD *)&v186[*(int *)(v188 + 32)];
          uint64_t v199 = v272[7];
          uint64_t v200 = &__dst[v199];
          uint64_t v201 = &v273[v199];
          *(void *)&__dst[v199] = *(void *)&v273[v199];
          uint64_t v202 = *(int *)(type metadata accessor for HourlyForecastComponentPreprocessedDataModel() + 20);
          uint64_t v203 = &v200[v202];
          uint64_t v204 = &v201[v202];
          uint64_t v205 = type metadata accessor for WeatherDescription();
          uint64_t v267 = v205;
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v204, 1, v205))
          {
            uint64_t v206 = sub_10017DF08(&qword_100E63758);
            memcpy(v203, v204, *(void *)(*(void *)(v206 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v205 - 8) + 32))(v203, v204, v205);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v203, 0, 1, v205);
          }
          uint64_t v207 = v272[8];
          uint64_t v208 = &__dst[v207];
          uint64_t v209 = &v273[v207];
          long long v210 = *(_OWORD *)&v273[v207 + 16];
          *(_OWORD *)uint64_t v208 = *(_OWORD *)&v273[v207];
          *((_OWORD *)v208 + 1) = v210;
          long long v211 = *(_OWORD *)&v273[v207 + 48];
          *((_OWORD *)v208 + 2) = *(_OWORD *)&v273[v207 + 32];
          *((_OWORD *)v208 + 3) = v211;
          uint64_t v212 = *(int *)(type metadata accessor for ListPreprocessedDataModel() + 32);
          uint64_t v213 = &v208[v212];
          uint64_t v214 = &v209[v212];
          uint64_t v268 = type metadata accessor for Date();
          uint64_t v266 = *(void (**)(char *, char *))(*(void *)(v268 - 8) + 32);
          v266(v213, v214);
          uint64_t v215 = type metadata accessor for WeatherConditionBackgroundTimeData();
          uint64_t v216 = *(int *)(v215 + 20);
          uint64_t v217 = &v213[v216];
          uint64_t v218 = &v214[v216];
          uint64_t v219 = type metadata accessor for Elevation();
          uint64_t v270 = v219;
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v218, 1, v219))
          {
            uint64_t v220 = sub_10017DF08(&qword_100E63760);
            memcpy(v217, v218, *(void *)(*(void *)(v220 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v219 - 8) + 32))(v217, v218, v219);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v217, 0, 1, v219);
          }
          uint64_t v221 = *(int *)(v215 + 24);
          uint64_t v222 = &v213[v221];
          uint64_t v223 = &v214[v221];
          uint64_t v224 = type metadata accessor for BackgroundMoonData();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v223, 1, v224))
          {
            uint64_t v225 = sub_10017DF08(&qword_100E63768);
            memcpy(v222, v223, *(void *)(*(void *)(v225 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v224 - 8) + 32))(v222, v223, v224);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v222, 0, 1, v224);
          }
          memcpy(&__dst[v272[9]], &v273[v272[9]], 0x70uLL);
          uint64_t v226 = v272[10];
          uint64_t v227 = &__dst[v226];
          uint64_t v228 = &v273[v226];
          (*(void (**)(char *, char *))(*(void *)(v267 - 8) + 32))(&__dst[v226], &v273[v226]);
          uint64_t v229 = type metadata accessor for UVIndexComponentPreprocessedDataModel();
          *(_OWORD *)&v227[*(int *)(v229 + 20)] = *(_OWORD *)&v228[*(int *)(v229 + 20)];
          uint64_t v230 = v272[11];
          uint64_t v231 = &__dst[v230];
          uint64_t v232 = &v273[v230];
          long long v233 = *((_OWORD *)v232 + 1);
          *(_OWORD *)uint64_t v231 = *(_OWORD *)v232;
          *((_OWORD *)v231 + 1) = v233;
          *((_OWORD *)v231 + 2) = *((_OWORD *)v232 + 2);
          uint64_t v234 = v272[12];
          uint64_t v235 = &__dst[v234];
          uint64_t v236 = &v273[v234];
          uint64_t v237 = type metadata accessor for PressureTrend();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v237 - 8) + 32))(v235, v236, v237);
          uint64_t v238 = (int *)type metadata accessor for PressureComponentPreprocessedDataModel();
          *(_OWORD *)&v235[v238[5]] = *(_OWORD *)&v236[v238[5]];
          *(_OWORD *)&v235[v238[6]] = *(_OWORD *)&v236[v238[6]];
          *(_OWORD *)&v235[v238[7]] = *(_OWORD *)&v236[v238[7]];
          *(void *)&v235[v238[8]] = *(void *)&v236[v238[8]];
          *(_OWORD *)&v235[v238[9]] = *(_OWORD *)&v236[v238[9]];
          memcpy(&__dst[v272[13]], &v273[v272[13]], 0xE8uLL);
          uint64_t v239 = v272[14];
          uint64_t v240 = &__dst[v239];
          uint64_t v241 = &v273[v239];
          ((void (*)(char *, char *, uint64_t))v266)(&__dst[v239], &v273[v239], v268);
          uint64_t v242 = *(int *)(v215 + 20);
          v243 = &v240[v242];
          uint64_t v244 = &v241[v242];
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v241[v242], 1, v270))
          {
            uint64_t v245 = sub_10017DF08(&qword_100E63760);
            memcpy(v243, v244, *(void *)(*(void *)(v245 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v270 - 8) + 32))(v243, v244, v270);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v243, 0, 1, v270);
          }
          uint64_t v246 = *(int *)(v215 + 24);
          uint64_t v247 = &v240[v246];
          uint64_t v248 = &v241[v246];
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v248, 1, v224))
          {
            uint64_t v249 = sub_10017DF08(&qword_100E63768);
            memcpy(v247, v248, *(void *)(*(void *)(v249 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v224 - 8) + 32))(v247, v248, v224);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v247, 0, 1, v224);
          }
          memcpy(&__dst[v272[15]], &v273[v272[15]], 0x70uLL);
          uint64_t v250 = v271[20];
          uint64_t v96 = (char *)a1 + v250;
          uint64_t v97 = (char *)a2 + v250;
          uint64_t v98 = type metadata accessor for NewsDataModel();
          if (!swift_getEnumCaseMultiPayload()) {
            goto LABEL_176;
          }
          goto LABEL_175;
        case 5u:
          *(_OWORD *)a1 = *(_OWORD *)a2;
          uint64_t v95 = *(int *)(sub_10017DF08(&qword_100E6BBB0) + 48);
          uint64_t v96 = (char *)a1 + v95;
          uint64_t v97 = (char *)a2 + v95;
          uint64_t v98 = type metadata accessor for NewsDataModel();
          if (swift_getEnumCaseMultiPayload())
          {
LABEL_175:
            memcpy(v96, v97, *(void *)(*(void *)(v98 - 8) + 64));
          }
          else
          {
LABEL_176:
            uint64_t v251 = type metadata accessor for News();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v251 - 8) + 32))(v96, v97, v251);
            swift_storeEnumTagMultiPayload();
          }
          goto LABEL_177;
        case 6u:
          *(_OWORD *)a1 = *(_OWORD *)a2;
          uint64_t v99 = *(int *)(sub_10017DF08(&qword_100E6BBB8) + 48);
          uint64_t v100 = (char *)a1 + v99;
          uint64_t v101 = (char *)a2 + v99;
          uint64_t v102 = type metadata accessor for AvailableDataSets();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v102 - 8) + 32))(v100, v101, v102);
          goto LABEL_177;
        case 8u:
          *(_OWORD *)a1 = *(_OWORD *)a2;
          uint64_t v103 = *(int *)(sub_10017DF08(&qword_100E6BBA8) + 48);
          uint64_t v104 = (char *)a1 + v103;
          uint64_t v105 = (char *)a2 + v103;
          uint64_t v106 = type metadata accessor for WeatherStatisticsModel();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v106 - 8) + 32))(v104, v105, v106);
LABEL_177:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(a1, a2, *(void *)(*(void *)(v37 - 8) + 64));
          break;
      }
      goto LABEL_193;
    case 0xAu:
      uint64_t v8 = type metadata accessor for DebugAction();
      int v47 = swift_getEnumCaseMultiPayload();
      if (v47 == 1) {
        goto LABEL_39;
      }
      if (v47) {
        goto LABEL_35;
      }
      uint64_t v48 = type metadata accessor for WeatherCondition();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v48))
      {
        uint64_t v49 = sub_10017DF08(&qword_100E63A50);
        memcpy(a1, a2, *(void *)(*(void *)(v49 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v48 - 8) + 32))(a1, a2, v48);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v48);
      }
      uint64_t v115 = sub_10017DF08(&qword_100E6F648);
      *(_OWORD *)((char *)a1 + *(int *)(v115 + 48)) = *(_OWORD *)((char *)a2 + *(int *)(v115 + 48));
      goto LABEL_192;
    case 0xBu:
      uint64_t v8 = type metadata accessor for ConditionDetailViewAction();
      int v17 = swift_getEnumCaseMultiPayload();
      switch(v17)
      {
        case 2:
          *(_OWORD *)a1 = *(_OWORD *)a2;
          uint64_t v52 = (int *)type metadata accessor for DetailChartSelection();
          uint64_t v53 = v52[5];
          uint64_t v54 = (char *)a1 + v53;
          uint64_t v55 = (char *)a2 + v53;
          uint64_t v56 = type metadata accessor for Date();
          uint64_t v57 = *(void (**)(char *, char *, uint64_t))(*(void *)(v56 - 8) + 32);
          v57(v54, v55, v56);
          v57((char *)a1 + v52[6], (char *)a2 + v52[6], v56);
          v57((char *)a1 + v52[7], (char *)a2 + v52[7], v56);
          *(void *)((char *)a1 + v52[8]) = *(void *)((char *)a2 + v52[8]);
          uint64_t v58 = v52[9];
          uint64_t v59 = (char *)a1 + v58;
          uint64_t v60 = (char *)a2 + v58;
          v59[8] = v60[8];
          *(void *)uint64_t v59 = *(void *)v60;
          goto LABEL_192;
        case 1:
          uint64_t v61 = type metadata accessor for DetailCondition();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v61 - 8) + 32))(a1, a2, v61);
          goto LABEL_192;
        case 0:
LABEL_13:
          uint64_t v18 = type metadata accessor for Date();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v18 - 8) + 32))(a1, a2, v18);
          goto LABEL_192;
      }
LABEL_35:
      memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
      goto LABEL_193;
    case 0xDu:
      uint64_t v8 = type metadata accessor for MoonDetailViewAction();
      int v19 = swift_getEnumCaseMultiPayload();
      if (v19 == 1) {
        goto LABEL_13;
      }
      if (v19) {
        goto LABEL_35;
      }
      type metadata accessor for MoonDetailSelectedDate();
      swift_getEnumCaseMultiPayload();
      uint64_t v20 = type metadata accessor for Date();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v20 - 8) + 32))(a1, a2, v20);
      swift_storeEnumTagMultiPayload();
      goto LABEL_192;
    case 0xEu:
      uint64_t v8 = type metadata accessor for AveragesDetailViewAction();
      if (swift_getEnumCaseMultiPayload() != 1) {
        goto LABEL_35;
      }
      *a1 = *a2;
      uint64_t v21 = (int *)type metadata accessor for DetailHeroChartLollipopPosition(0);
      uint64_t v22 = v21[5];
      uint64_t v23 = (char *)a1 + v22;
      uint64_t v24 = (char *)a2 + v22;
      uint64_t v25 = type metadata accessor for Date();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 32))(v23, v24, v25);
      *(void *)((char *)a1 + v21[6]) = *(void *)((char *)a2 + v21[6]);
      *(void *)((char *)a1 + v21[7]) = *(void *)((char *)a2 + v21[7]);
      swift_storeEnumTagMultiPayload();
      goto LABEL_193;
    case 0x11u:
      uint64_t v26 = type metadata accessor for PerformanceTestAction();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          uint64_t v27 = type metadata accessor for DetailCondition();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v27 - 8) + 32))(a1, a2, v27);
          goto LABEL_81;
        case 2u:
          uint64_t v88 = type metadata accessor for Location();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v88 - 8) + 32))(a1, a2, v88);
          goto LABEL_81;
        case 3u:
          *a1 = *a2;
          uint64_t v89 = sub_10017DF08((uint64_t *)&unk_100EA0250);
          uint64_t v90 = *(int *)(v89 + 48);
          uint64_t v91 = (char *)a1 + v90;
          uint64_t v92 = (char *)a2 + v90;
          uint64_t v93 = type metadata accessor for WeatherMapOverlayKind();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v93 - 8) + 32))(v91, v92, v93);
          *((unsigned char *)a1 + *(int *)(v89 + 64)) = *((unsigned char *)a2 + *(int *)(v89 + 64));
          goto LABEL_81;
        case 4u:
          uint64_t v94 = type metadata accessor for WeatherCondition();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v94 - 8) + 32))(a1, a2, v94);
LABEL_81:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(a1, a2, *(void *)(*(void *)(v26 - 8) + 64));
          break;
      }
      goto LABEL_193;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
      goto LABEL_194;
  }
}

void *sub_100A15D00(void *a1, void *a2, int *a3)
{
  if (a1 == a2) {
    goto LABEL_195;
  }
  sub_100173018((uint64_t)a1, (void (*)(void))type metadata accessor for MainAction);
  uint64_t v6 = type metadata accessor for MainAction();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v7 = type metadata accessor for AppConfiguration();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      goto LABEL_194;
    case 2u:
      uint64_t v8 = type metadata accessor for EnvironmentAction();
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 11)
      {
        uint64_t v31 = type metadata accessor for ConfiguredUnitsAction();
        int v67 = swift_getEnumCaseMultiPayload();
        if (v67 == 1)
        {
          uint64_t v122 = type metadata accessor for UnitConfiguration.Temperature();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v122))
          {
            uint64_t v123 = sub_10017DF08(&qword_100E6F620);
            memcpy(a1, a2, *(void *)(*(void *)(v123 - 8) + 64));
          }
          else
          {
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v122 - 8) + 32))(a1, a2, v122);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v122);
          }
        }
        else
        {
          if (v67) {
            goto LABEL_105;
          }
          uint64_t v68 = type metadata accessor for ConfiguredUnit();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v68 - 8) + 32))(a1, a2, v68);
        }
        goto LABEL_192;
      }
      if (EnumCaseMultiPayload == 3)
      {
        uint64_t v31 = type metadata accessor for ActivityAction();
        int v69 = swift_getEnumCaseMultiPayload();
        if (v69 != 1)
        {
          if (v69) {
            goto LABEL_105;
          }
          type metadata accessor for SavedLocation();
          if (swift_getEnumCaseMultiPayload() == 1) {
            uint64_t v70 = type metadata accessor for SavedLocation.Placeholder();
          }
          else {
            uint64_t v70 = type metadata accessor for Location();
          }
          (*(void (**)(void *, void *))(*(void *)(v70 - 8) + 32))(a1, a2);
          swift_storeEnumTagMultiPayload();
          goto LABEL_192;
        }
        uint64_t v124 = type metadata accessor for PreviewLocation();
        int v125 = swift_getEnumCaseMultiPayload();
        if (v125 == 2)
        {
          *a1 = *a2;
          *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 1);
          *(_OWORD *)(a1 + 3) = *(_OWORD *)(a2 + 3);
          *(_OWORD *)(a1 + 5) = *(_OWORD *)(a2 + 5);
          uint64_t v252 = type metadata accessor for SearchLocation();
          uint64_t v253 = *(int *)(v252 + 32);
          __dsta = (char *)a1 + v253;
          uint64_t v254 = (char *)a2 + v253;
          uint64_t v255 = type metadata accessor for Location();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v254, 1, v255))
          {
            uint64_t v256 = sub_10017DF08(&qword_100E639E8);
            memcpy(__dsta, v254, *(void *)(*(void *)(v256 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v255 - 8) + 32))(__dsta, v254, v255);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dsta, 0, 1, v255);
          }
          uint64_t v261 = *(int *)(v252 + 36);
          uint64_t v262 = (char *)a1 + v261;
          uint64_t v263 = (char *)a2 + v261;
          *(_OWORD *)uint64_t v262 = *(_OWORD *)v263;
          v262[16] = v263[16];
        }
        else if (v125 == 1)
        {
          uint64_t v257 = type metadata accessor for LocationOfInterest();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v257 - 8) + 32))(a1, a2, v257);
        }
        else
        {
          if (v125)
          {
            memcpy(a1, a2, *(void *)(*(void *)(v124 - 8) + 64));
LABEL_192:
            swift_storeEnumTagMultiPayload();
            goto LABEL_193;
          }
          uint64_t v126 = type metadata accessor for Location();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v126 - 8) + 32))(a1, a2, v126);
        }
        swift_storeEnumTagMultiPayload();
        goto LABEL_192;
      }
      if (EnumCaseMultiPayload != 2) {
        goto LABEL_36;
      }
      uint64_t v29 = type metadata accessor for Locale();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v29 - 8) + 32))(a1, a2, v29);
LABEL_193:
      swift_storeEnumTagMultiPayload();
LABEL_194:
      swift_storeEnumTagMultiPayload();
LABEL_195:
      *(void *)((char *)a1 + a3[5]) = *(void *)((char *)a2 + a3[5]);
      swift_release();
      *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
      swift_bridgeObjectRelease();
      *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
      return a1;
    case 3u:
      uint64_t v8 = type metadata accessor for LocationsAction();
      int v30 = swift_getEnumCaseMultiPayload();
      if (v30 == 1)
      {
        uint64_t v50 = type metadata accessor for Location();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v50 - 8) + 32))(a1, a2, v50);
        uint64_t v51 = sub_10017DF08(&qword_100E6F628);
        *((unsigned char *)a1 + *(int *)(v51 + 48)) = *((unsigned char *)a2 + *(int *)(v51 + 48));
      }
      else
      {
        if (v30) {
          goto LABEL_36;
        }
        uint64_t v31 = type metadata accessor for CurrentLocation();
        if (swift_getEnumCaseMultiPayload() > 2)
        {
LABEL_105:
          memcpy(a1, a2, *(void *)(*(void *)(v31 - 8) + 64));
        }
        else
        {
LABEL_29:
          uint64_t v121 = type metadata accessor for Location();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v121 - 8) + 32))(a1, a2, v121);
          swift_storeEnumTagMultiPayload();
        }
      }
      goto LABEL_193;
    case 4u:
      uint64_t v8 = type metadata accessor for NotificationsAction();
      int v32 = swift_getEnumCaseMultiPayload();
      if (v32 == 5)
      {
        uint64_t v71 = type metadata accessor for Location();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v71 - 8) + 32))(a1, a2, v71);
        uint64_t v72 = *(int *)(sub_10017DF08(&qword_100E6F638) + 48);
        uint64_t v73 = (char *)a1 + v72;
        uint64_t v74 = (char *)a2 + v72;
        uint64_t v75 = type metadata accessor for NotificationSubscription.Kind();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v75 - 8) + 32))(v73, v74, v75);
        goto LABEL_193;
      }
      if (v32 == 2)
      {
        uint64_t v62 = type metadata accessor for NotificationSubscription.Location();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v62 - 8) + 32))(a1, a2, v62);
        uint64_t v63 = *(int *)(sub_10017DF08(&qword_100E6F630) + 48);
        uint64_t v64 = (char *)a1 + v63;
        uint64_t v65 = (char *)a2 + v63;
        uint64_t v66 = type metadata accessor for NotificationSubscription.Kind();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v66 - 8) + 32))(v64, v65, v66);
        goto LABEL_193;
      }
      if (v32 != 1) {
        goto LABEL_36;
      }
      uint64_t v33 = type metadata accessor for LocationModel();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v33))
      {
        uint64_t v34 = type metadata accessor for NotificationLocation();
        memcpy(a1, a2, *(void *)(*(void *)(v34 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v33 - 8) + 32))(a1, a2, v33);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v33);
      }
      uint64_t v116 = *(int *)(sub_10017DF08((uint64_t *)&unk_100EAC3E0) + 48);
      uint64_t v117 = (char *)a1 + v116;
      uint64_t v118 = (char *)a2 + v116;
      uint64_t v119 = type metadata accessor for URL();
      if (!_s7Weather24LocationCompositionStateOwet_0((uint64_t)v118, 1, v119)) {
        goto LABEL_135;
      }
      uint64_t v120 = sub_10017DF08(&qword_100E749B0);
      memcpy(v117, v118, *(void *)(*(void *)(v120 - 8) + 64));
      goto LABEL_193;
    case 5u:
      uint64_t v8 = type metadata accessor for NotificationsOptInAction();
      int v9 = swift_getEnumCaseMultiPayload();
      if (v9 == 4) {
        goto LABEL_14;
      }
      if (v9 != 2) {
        goto LABEL_36;
      }
      uint64_t v10 = type metadata accessor for Location();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 32))(a1, a2, v10);
      uint64_t v11 = sub_10017DF08(&qword_100E6BBD8);
      *((unsigned char *)a1 + *(int *)(v11 + 48)) = *((unsigned char *)a2 + *(int *)(v11 + 48));
      goto LABEL_193;
    case 6u:
      uint64_t v12 = type metadata accessor for ViewAction();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          uint64_t v13 = type metadata accessor for ListViewAction();
          int v14 = swift_getEnumCaseMultiPayload();
          if (v14 == 2) {
            goto LABEL_126;
          }
          if (v14) {
            goto LABEL_142;
          }
          uint64_t v15 = type metadata accessor for LocationModel();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v15 - 8) + 32))(a1, a2, v15);
          uint64_t v16 = sub_10017DF08(&qword_100E6F640);
          *((unsigned char *)a1 + *(int *)(v16 + 48)) = *((unsigned char *)a2 + *(int *)(v16 + 48));
          goto LABEL_186;
        case 1u:
          uint64_t v13 = type metadata accessor for LocationViewerViewAction();
          int v107 = swift_getEnumCaseMultiPayload();
          if (v107 == 2)
          {
LABEL_126:
            uint64_t v149 = type metadata accessor for Location.Identifier();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v149 - 8) + 32))(a1, a2, v149);
          }
          else if (v107 == 1)
          {
            uint64_t v164 = type metadata accessor for WeatherMapOverlayKind();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v164 - 8) + 32))(a1, a2, v164);
          }
          else
          {
            if (v107)
            {
LABEL_142:
              memcpy(a1, a2, *(void *)(*(void *)(v13 - 8) + 64));
              goto LABEL_187;
            }
            uint64_t v108 = type metadata accessor for LocationModel();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v108 - 8) + 32))(a1, a2, v108);
          }
LABEL_186:
          swift_storeEnumTagMultiPayload();
LABEL_187:
          swift_storeEnumTagMultiPayload();
          break;
        case 3u:
          uint64_t v13 = type metadata accessor for SearchViewAction();
          switch(swift_getEnumCaseMultiPayload())
          {
            case 0u:
              uint64_t v109 = type metadata accessor for CodableError();
              (*(void (**)(void *, void *, uint64_t))(*(void *)(v109 - 8) + 32))(a1, a2, v109);
              goto LABEL_186;
            case 3u:
            case 6u:
              uint64_t v165 = type metadata accessor for Location();
              (*(void (**)(void *, void *, uint64_t))(*(void *)(v165 - 8) + 32))(a1, a2, v165);
              goto LABEL_186;
            case 4u:
              uint64_t v166 = type metadata accessor for LocationOfInterest();
              (*(void (**)(void *, void *, uint64_t))(*(void *)(v166 - 8) + 32))(a1, a2, v166);
              goto LABEL_186;
            case 5u:
              *a1 = *a2;
              *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 1);
              *(_OWORD *)(a1 + 3) = *(_OWORD *)(a2 + 3);
              *(_OWORD *)(a1 + 5) = *(_OWORD *)(a2 + 5);
              uint64_t v167 = type metadata accessor for SearchLocation();
              uint64_t v168 = *(int *)(v167 + 32);
              uint64_t v169 = (char *)a1 + v168;
              uint64_t v170 = (char *)a2 + v168;
              uint64_t v171 = type metadata accessor for Location();
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v170, 1, v171))
              {
                uint64_t v172 = sub_10017DF08(&qword_100E639E8);
                memcpy(v169, v170, *(void *)(*(void *)(v172 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v171 - 8) + 32))(v169, v170, v171);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v169, 0, 1, v171);
              }
              uint64_t v258 = *(int *)(v167 + 36);
              uint64_t v259 = (char *)a1 + v258;
              uint64_t v260 = (char *)a2 + v258;
              *(_OWORD *)uint64_t v259 = *(_OWORD *)v260;
              v259[16] = v260[16];
              goto LABEL_186;
            default:
              goto LABEL_142;
          }
        case 4u:
          uint64_t v110 = type metadata accessor for InteractiveMapViewAction();
          switch(swift_getEnumCaseMultiPayload())
          {
            case 0u:
            case 1u:
            case 2u:
            case 4u:
              uint64_t v174 = type metadata accessor for Location();
              (*(void (**)(void *, void *, uint64_t))(*(void *)(v174 - 8) + 32))(a1, a2, v174);
              goto LABEL_150;
            case 3u:
              uint64_t v173 = type metadata accessor for WeatherMapOverlayKind();
              (*(void (**)(void *, void *, uint64_t))(*(void *)(v173 - 8) + 32))(a1, a2, v173);
LABEL_150:
              swift_storeEnumTagMultiPayload();
              break;
            default:
              memcpy(a1, a2, *(void *)(*(void *)(v110 - 8) + 64));
              break;
          }
          goto LABEL_187;
        case 5u:
          *(_OWORD *)a1 = *(_OWORD *)a2;
          *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
          *((unsigned char *)a1 + 17) = *((unsigned char *)a2 + 17);
          *((unsigned char *)a1 + 18) = *((unsigned char *)a2 + 18);
          uint64_t v111 = *(int *)(type metadata accessor for DisplayMetrics() + 36);
          uint64_t v112 = (char *)a1 + v111;
          uint64_t v113 = (char *)a2 + v111;
          uint64_t v114 = type metadata accessor for DynamicTypeSize();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v114 - 8) + 32))(v112, v113, v114);
          goto LABEL_187;
        default:
          memcpy(a1, a2, *(void *)(*(void *)(v12 - 8) + 64));
          goto LABEL_194;
      }
      goto LABEL_194;
    case 7u:
      uint64_t v8 = type metadata accessor for ModalViewAction();
      if (swift_getEnumCaseMultiPayload()) {
        goto LABEL_36;
      }
      uint64_t v31 = type metadata accessor for LocationPreviewViewAction();
      if (swift_getEnumCaseMultiPayload() == 1) {
        goto LABEL_29;
      }
      goto LABEL_105;
    case 8u:
      uint64_t v8 = type metadata accessor for LocationViewAction();
      int v35 = swift_getEnumCaseMultiPayload();
      if (v35 == 2)
      {
        uint64_t v76 = type metadata accessor for Location();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v76 - 8) + 32))(a1, a2, v76);
        uint64_t v77 = *(int *)(sub_10017DF08(&qword_100E66450) + 48);
        uint64_t v78 = (char *)a1 + v77;
        uint64_t v79 = (char *)a2 + v77;
        uint64_t v80 = type metadata accessor for LocationOfInterest();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v80 - 8) + 32))(v78, v79, v80);
        uint64_t v81 = *(int *)(sub_10017DF08(&qword_100E66448) + 48);
        uint64_t v82 = (char *)a1 + v81;
        uint64_t v83 = (char *)a2 + v81;
        long long v84 = *((_OWORD *)v83 + 1);
        *(_OWORD *)uint64_t v82 = *(_OWORD *)v83;
        *((_OWORD *)v82 + 1) = v84;
        v82[32] = v83[32];
      }
      else if (v35 == 1)
      {
        uint64_t v85 = type metadata accessor for LocationComponentAction(0);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            uint64_t v86 = type metadata accessor for URL();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v86 - 8) + 32))(a1, a2, v86);
            uint64_t v87 = sub_10017DF08(&qword_100E66478);
            *((unsigned char *)a1 + *(int *)(v87 + 48)) = *((unsigned char *)a2 + *(int *)(v87 + 48));
            goto LABEL_132;
          case 1u:
            uint64_t v150 = type metadata accessor for WeatherMapOverlayKind();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v150 - 8) + 32))(a1, a2, v150);
            goto LABEL_132;
          case 2u:
            uint64_t v151 = type metadata accessor for DetailCondition();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v151 - 8) + 32))(a1, a2, v151);
            uint64_t v152 = sub_10017DF08(&qword_100E66488);
            *((unsigned char *)a1 + *(int *)(v152 + 48)) = *((unsigned char *)a2 + *(int *)(v152 + 48));
            goto LABEL_132;
          case 4u:
            *(unsigned char *)a1 = *(unsigned char *)a2;
            uint64_t v153 = *(int *)(sub_10017DF08(&qword_100E66480) + 48);
            uint64_t v154 = (char *)a1 + v153;
            uint64_t v155 = (char *)a2 + v153;
            uint64_t v156 = type metadata accessor for Location();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v156 - 8) + 32))(v154, v155, v156);
LABEL_132:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(a1, a2, *(void *)(*(void *)(v85 - 8) + 64));
            break;
        }
        uint64_t v157 = sub_10017DF08(&qword_100E66458);
        uint64_t v158 = *(int *)(v157 + 48);
        uint64_t v159 = (char *)a1 + v158;
        long long v160 = (char *)a2 + v158;
        long long v161 = *((_OWORD *)v160 + 1);
        *(_OWORD *)uint64_t v159 = *(_OWORD *)v160;
        *((_OWORD *)v159 + 1) = v161;
        v159[32] = v160[32];
        uint64_t v162 = *(int *)(v157 + 64);
        uint64_t v117 = (char *)a1 + v162;
        uint64_t v118 = (char *)a2 + v162;
        uint64_t v119 = type metadata accessor for Date();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v118, 1, v119))
        {
          uint64_t v163 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
          memcpy(v117, v118, *(void *)(*(void *)(v163 - 8) + 64));
        }
        else
        {
LABEL_135:
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v119 - 8) + 32))(v117, v118, v119);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v117, 0, 1, v119);
        }
      }
      else
      {
        if (v35) {
          goto LABEL_36;
        }
LABEL_40:
        uint64_t v36 = type metadata accessor for Location();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v36 - 8) + 32))(a1, a2, v36);
      }
      goto LABEL_193;
    case 9u:
      uint64_t v37 = type metadata accessor for WeatherDataAction();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 4u:
          *(_OWORD *)a1 = *(_OWORD *)a2;
          uint64_t v270 = (int *)sub_10017DF08(&qword_100E6BBC0);
          uint64_t v38 = v270[12];
          uint64_t v39 = (char *)a1 + v38;
          uint64_t v40 = (char *)a2 + v38;
          *(_OWORD *)((char *)a1 + v38) = *(_OWORD *)((char *)a2 + v38);
          uint64_t v41 = (int *)type metadata accessor for WeatherData(0);
          uint64_t v42 = v41[5];
          uint64_t v43 = &v39[v42];
          uint64_t v44 = &v40[v42];
          uint64_t v45 = type metadata accessor for Locale();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v44, 1, v45))
          {
            uint64_t v46 = sub_10017DF08(&qword_100E63730);
            memcpy(v43, v44, *(void *)(*(void *)(v46 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v45 - 8) + 32))(v43, v44, v45);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v43, 0, 1, v45);
          }
          uint64_t v127 = v41[6];
          uint64_t v128 = &v39[v127];
          uint64_t v129 = &v40[v127];
          uint64_t v130 = type metadata accessor for WeatherDataModel();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v130 - 8) + 32))(v128, v129, v130);
          uint64_t v131 = v41[7];
          uint64_t v132 = &v39[v131];
          uint64_t v133 = &v40[v131];
          uint64_t v134 = sub_10017DF08(&qword_100E63738);
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v133, 1, v134))
          {
            uint64_t v135 = type metadata accessor for WeatherData.CachingState(0);
            memcpy(v132, v133, *(void *)(*(void *)(v135 - 8) + 64));
          }
          else
          {
            uint64_t v136 = type metadata accessor for Date();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v136 - 8) + 32))(v132, v133, v136);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v132, 0, 1, v134);
          }
          uint64_t v137 = v41[8];
          uint64_t v138 = &v39[v137];
          uint64_t v139 = &v40[v137];
          uint64_t v140 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            uint64_t v141 = type metadata accessor for WeatherStatisticsModel();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v141 - 8) + 32))(v138, v139, v141);
            swift_storeEnumTagMultiPayload();
          }
          else
          {
            memcpy(v138, v139, *(void *)(*(void *)(v140 - 8) + 64));
          }
          uint64_t v142 = v41[9];
          uint64_t v143 = &v39[v142];
          long long v144 = &v40[v142];
          uint64_t v145 = type metadata accessor for WeatherDataOverrides();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v144, 1, v145))
          {
            uint64_t v146 = sub_10017DF08(&qword_100E63740);
            memcpy(v143, v144, *(void *)(*(void *)(v146 - 8) + 64));
          }
          else
          {
            uint64_t v147 = type metadata accessor for Date();
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v144, 1, v147))
            {
              uint64_t v148 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
              memcpy(v143, v144, *(void *)(*(void *)(v148 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v147 - 8) + 32))(v143, v144, v147);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v143, 0, 1, v147);
            }
            uint64_t v175 = *(int *)(v145 + 20);
            uint64_t v176 = &v143[v175];
            uint64_t v177 = &v144[v175];
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v177, 1, v147))
            {
              uint64_t v178 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
              memcpy(v176, v177, *(void *)(*(void *)(v178 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v147 - 8) + 32))(v176, v177, v147);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v176, 0, 1, v147);
            }
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v143, 0, 1, v145);
          }
          uint64_t v179 = v270[16];
          uint64_t v180 = (char *)a1 + v179;
          uint64_t v181 = (char *)a2 + v179;
          uint64_t v182 = type metadata accessor for UUID();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v182 - 8) + 32))(v180, v181, v182);
          uint64_t v183 = type metadata accessor for PreprocessedWeatherData();
          *(void *)&v180[*(int *)(v183 + 20)] = *(void *)&v181[*(int *)(v183 + 20)];
          uint64_t v271 = (int *)v183;
          uint64_t v272 = v181;
          uint64_t v184 = *(int *)(v183 + 24);
          __dst = v180;
          uint64_t v185 = &v180[v184];
          uint64_t v186 = &v181[v184];
          long long v187 = *(_OWORD *)&v181[v184 + 16];
          *(_OWORD *)uint64_t v185 = *(_OWORD *)&v181[v184];
          *((_OWORD *)v185 + 1) = v187;
          *((_OWORD *)v185 + 2) = *(_OWORD *)&v181[v184 + 32];
          uint64_t v188 = type metadata accessor for FeelsLikeComponentPreprocessedDataModel();
          uint64_t v189 = *(int *)(v188 + 28);
          id v190 = &v185[v189];
          uint64_t v191 = &v186[v189];
          uint64_t v192 = type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference(0);
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v191, 1, v192))
          {
            uint64_t v193 = sub_10017DF08(&qword_100E63750);
            memcpy(v190, v191, *(void *)(*(void *)(v193 - 8) + 64));
          }
          else
          {
            *(_OWORD *)id v190 = *(_OWORD *)v191;
            uint64_t v194 = *(int *)(v192 + 20);
            uint64_t v268 = v188;
            uint64_t v195 = &v190[v194];
            uint64_t v196 = &v191[v194];
            uint64_t v197 = type metadata accessor for TemperatureScaleConfiguration();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v197 - 8) + 32))(v195, v196, v197);
            uint64_t v198 = (int *)type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
            *(void *)&v195[v198[5]] = *(void *)&v196[v198[5]];
            *(void *)&v195[v198[6]] = *(void *)&v196[v198[6]];
            *(void *)&v195[v198[7]] = *(void *)&v196[v198[7]];
            *(_OWORD *)&v195[v198[8]] = *(_OWORD *)&v196[v198[8]];
            v195[v198[9]] = v196[v198[9]];
            uint64_t v188 = v268;
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v190, 0, 1, v192);
          }
          *(_OWORD *)&v185[*(int *)(v188 + 32)] = *(_OWORD *)&v186[*(int *)(v188 + 32)];
          uint64_t v199 = v271[7];
          uint64_t v200 = &__dst[v199];
          uint64_t v201 = &v272[v199];
          *(void *)&__dst[v199] = *(void *)&v272[v199];
          uint64_t v202 = *(int *)(type metadata accessor for HourlyForecastComponentPreprocessedDataModel() + 20);
          uint64_t v203 = &v200[v202];
          uint64_t v204 = &v201[v202];
          uint64_t v205 = type metadata accessor for WeatherDescription();
          uint64_t v266 = v205;
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v204, 1, v205))
          {
            uint64_t v206 = sub_10017DF08(&qword_100E63758);
            memcpy(v203, v204, *(void *)(*(void *)(v206 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v205 - 8) + 32))(v203, v204, v205);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v203, 0, 1, v205);
          }
          uint64_t v207 = v271[8];
          uint64_t v208 = &__dst[v207];
          uint64_t v209 = &v272[v207];
          long long v210 = *(_OWORD *)&v272[v207 + 16];
          *(_OWORD *)uint64_t v208 = *(_OWORD *)&v272[v207];
          *((_OWORD *)v208 + 1) = v210;
          long long v211 = *(_OWORD *)&v272[v207 + 48];
          *((_OWORD *)v208 + 2) = *(_OWORD *)&v272[v207 + 32];
          *((_OWORD *)v208 + 3) = v211;
          uint64_t v212 = *(int *)(type metadata accessor for ListPreprocessedDataModel() + 32);
          uint64_t v213 = &v208[v212];
          uint64_t v214 = &v209[v212];
          uint64_t v267 = type metadata accessor for Date();
          uint64_t v265 = *(void (**)(char *, char *))(*(void *)(v267 - 8) + 32);
          v265(v213, v214);
          uint64_t v215 = type metadata accessor for WeatherConditionBackgroundTimeData();
          uint64_t v216 = *(int *)(v215 + 20);
          uint64_t v217 = &v213[v216];
          uint64_t v218 = &v214[v216];
          uint64_t v219 = type metadata accessor for Elevation();
          uint64_t v269 = v219;
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v218, 1, v219))
          {
            uint64_t v220 = sub_10017DF08(&qword_100E63760);
            memcpy(v217, v218, *(void *)(*(void *)(v220 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v219 - 8) + 32))(v217, v218, v219);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v217, 0, 1, v219);
          }
          uint64_t v221 = *(int *)(v215 + 24);
          uint64_t v222 = &v213[v221];
          uint64_t v223 = &v214[v221];
          uint64_t v224 = type metadata accessor for BackgroundMoonData();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v223, 1, v224))
          {
            uint64_t v225 = sub_10017DF08(&qword_100E63768);
            memcpy(v222, v223, *(void *)(*(void *)(v225 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v224 - 8) + 32))(v222, v223, v224);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v222, 0, 1, v224);
          }
          memcpy(&__dst[v271[9]], &v272[v271[9]], 0x70uLL);
          uint64_t v226 = v271[10];
          uint64_t v227 = &__dst[v226];
          uint64_t v228 = &v272[v226];
          (*(void (**)(char *, char *))(*(void *)(v266 - 8) + 32))(&__dst[v226], &v272[v226]);
          uint64_t v229 = type metadata accessor for UVIndexComponentPreprocessedDataModel();
          *(_OWORD *)&v227[*(int *)(v229 + 20)] = *(_OWORD *)&v228[*(int *)(v229 + 20)];
          uint64_t v230 = v271[11];
          uint64_t v231 = &__dst[v230];
          uint64_t v232 = &v272[v230];
          long long v233 = *((_OWORD *)v232 + 1);
          *(_OWORD *)uint64_t v231 = *(_OWORD *)v232;
          *((_OWORD *)v231 + 1) = v233;
          *((_OWORD *)v231 + 2) = *((_OWORD *)v232 + 2);
          uint64_t v234 = v271[12];
          uint64_t v235 = &__dst[v234];
          uint64_t v236 = &v272[v234];
          uint64_t v237 = type metadata accessor for PressureTrend();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v237 - 8) + 32))(v235, v236, v237);
          uint64_t v238 = (int *)type metadata accessor for PressureComponentPreprocessedDataModel();
          *(_OWORD *)&v235[v238[5]] = *(_OWORD *)&v236[v238[5]];
          *(_OWORD *)&v235[v238[6]] = *(_OWORD *)&v236[v238[6]];
          *(_OWORD *)&v235[v238[7]] = *(_OWORD *)&v236[v238[7]];
          *(void *)&v235[v238[8]] = *(void *)&v236[v238[8]];
          *(_OWORD *)&v235[v238[9]] = *(_OWORD *)&v236[v238[9]];
          memcpy(&__dst[v271[13]], &v272[v271[13]], 0xE8uLL);
          uint64_t v239 = v271[14];
          uint64_t v240 = &__dst[v239];
          uint64_t v241 = &v272[v239];
          ((void (*)(char *, char *, uint64_t))v265)(&__dst[v239], &v272[v239], v267);
          uint64_t v242 = *(int *)(v215 + 20);
          v243 = &v240[v242];
          uint64_t v244 = &v241[v242];
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v241[v242], 1, v269))
          {
            uint64_t v245 = sub_10017DF08(&qword_100E63760);
            memcpy(v243, v244, *(void *)(*(void *)(v245 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v269 - 8) + 32))(v243, v244, v269);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v243, 0, 1, v269);
          }
          uint64_t v246 = *(int *)(v215 + 24);
          uint64_t v247 = &v240[v246];
          uint64_t v248 = &v241[v246];
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v248, 1, v224))
          {
            uint64_t v249 = sub_10017DF08(&qword_100E63768);
            memcpy(v247, v248, *(void *)(*(void *)(v249 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v224 - 8) + 32))(v247, v248, v224);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v247, 0, 1, v224);
          }
          memcpy(&__dst[v271[15]], &v272[v271[15]], 0x70uLL);
          uint64_t v250 = v270[20];
          uint64_t v96 = (char *)a1 + v250;
          uint64_t v97 = (char *)a2 + v250;
          uint64_t v98 = type metadata accessor for NewsDataModel();
          if (!swift_getEnumCaseMultiPayload()) {
            goto LABEL_177;
          }
          goto LABEL_176;
        case 5u:
          *(_OWORD *)a1 = *(_OWORD *)a2;
          uint64_t v95 = *(int *)(sub_10017DF08(&qword_100E6BBB0) + 48);
          uint64_t v96 = (char *)a1 + v95;
          uint64_t v97 = (char *)a2 + v95;
          uint64_t v98 = type metadata accessor for NewsDataModel();
          if (swift_getEnumCaseMultiPayload())
          {
LABEL_176:
            memcpy(v96, v97, *(void *)(*(void *)(v98 - 8) + 64));
          }
          else
          {
LABEL_177:
            uint64_t v251 = type metadata accessor for News();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v251 - 8) + 32))(v96, v97, v251);
            swift_storeEnumTagMultiPayload();
          }
          goto LABEL_178;
        case 6u:
          *(_OWORD *)a1 = *(_OWORD *)a2;
          uint64_t v99 = *(int *)(sub_10017DF08(&qword_100E6BBB8) + 48);
          uint64_t v100 = (char *)a1 + v99;
          uint64_t v101 = (char *)a2 + v99;
          uint64_t v102 = type metadata accessor for AvailableDataSets();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v102 - 8) + 32))(v100, v101, v102);
          goto LABEL_178;
        case 8u:
          *(_OWORD *)a1 = *(_OWORD *)a2;
          uint64_t v103 = *(int *)(sub_10017DF08(&qword_100E6BBA8) + 48);
          uint64_t v104 = (char *)a1 + v103;
          uint64_t v105 = (char *)a2 + v103;
          uint64_t v106 = type metadata accessor for WeatherStatisticsModel();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v106 - 8) + 32))(v104, v105, v106);
LABEL_178:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(a1, a2, *(void *)(*(void *)(v37 - 8) + 64));
          break;
      }
      goto LABEL_194;
    case 0xAu:
      uint64_t v8 = type metadata accessor for DebugAction();
      int v47 = swift_getEnumCaseMultiPayload();
      if (v47 == 1) {
        goto LABEL_40;
      }
      if (v47) {
        goto LABEL_36;
      }
      uint64_t v48 = type metadata accessor for WeatherCondition();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v48))
      {
        uint64_t v49 = sub_10017DF08(&qword_100E63A50);
        memcpy(a1, a2, *(void *)(*(void *)(v49 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v48 - 8) + 32))(a1, a2, v48);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v48);
      }
      uint64_t v115 = sub_10017DF08(&qword_100E6F648);
      *(_OWORD *)((char *)a1 + *(int *)(v115 + 48)) = *(_OWORD *)((char *)a2 + *(int *)(v115 + 48));
      goto LABEL_193;
    case 0xBu:
      uint64_t v8 = type metadata accessor for ConditionDetailViewAction();
      int v17 = swift_getEnumCaseMultiPayload();
      switch(v17)
      {
        case 2:
          *(_OWORD *)a1 = *(_OWORD *)a2;
          uint64_t v52 = (int *)type metadata accessor for DetailChartSelection();
          uint64_t v53 = v52[5];
          uint64_t v54 = (char *)a1 + v53;
          uint64_t v55 = (char *)a2 + v53;
          uint64_t v56 = type metadata accessor for Date();
          uint64_t v57 = *(void (**)(char *, char *, uint64_t))(*(void *)(v56 - 8) + 32);
          v57(v54, v55, v56);
          v57((char *)a1 + v52[6], (char *)a2 + v52[6], v56);
          v57((char *)a1 + v52[7], (char *)a2 + v52[7], v56);
          *(void *)((char *)a1 + v52[8]) = *(void *)((char *)a2 + v52[8]);
          uint64_t v58 = v52[9];
          uint64_t v59 = (char *)a1 + v58;
          uint64_t v60 = (char *)a2 + v58;
          v59[8] = v60[8];
          *(void *)uint64_t v59 = *(void *)v60;
          goto LABEL_193;
        case 1:
          uint64_t v61 = type metadata accessor for DetailCondition();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v61 - 8) + 32))(a1, a2, v61);
          goto LABEL_193;
        case 0:
LABEL_14:
          uint64_t v18 = type metadata accessor for Date();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v18 - 8) + 32))(a1, a2, v18);
          goto LABEL_193;
      }
LABEL_36:
      memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
      goto LABEL_194;
    case 0xDu:
      uint64_t v8 = type metadata accessor for MoonDetailViewAction();
      int v19 = swift_getEnumCaseMultiPayload();
      if (v19 == 1) {
        goto LABEL_14;
      }
      if (v19) {
        goto LABEL_36;
      }
      type metadata accessor for MoonDetailSelectedDate();
      swift_getEnumCaseMultiPayload();
      uint64_t v20 = type metadata accessor for Date();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v20 - 8) + 32))(a1, a2, v20);
      swift_storeEnumTagMultiPayload();
      goto LABEL_193;
    case 0xEu:
      uint64_t v8 = type metadata accessor for AveragesDetailViewAction();
      if (swift_getEnumCaseMultiPayload() != 1) {
        goto LABEL_36;
      }
      *a1 = *a2;
      uint64_t v21 = (int *)type metadata accessor for DetailHeroChartLollipopPosition(0);
      uint64_t v22 = v21[5];
      uint64_t v23 = (char *)a1 + v22;
      uint64_t v24 = (char *)a2 + v22;
      uint64_t v25 = type metadata accessor for Date();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 32))(v23, v24, v25);
      *(void *)((char *)a1 + v21[6]) = *(void *)((char *)a2 + v21[6]);
      *(void *)((char *)a1 + v21[7]) = *(void *)((char *)a2 + v21[7]);
      swift_storeEnumTagMultiPayload();
      goto LABEL_194;
    case 0x11u:
      uint64_t v26 = type metadata accessor for PerformanceTestAction();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          uint64_t v27 = type metadata accessor for DetailCondition();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v27 - 8) + 32))(a1, a2, v27);
          goto LABEL_82;
        case 2u:
          uint64_t v88 = type metadata accessor for Location();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v88 - 8) + 32))(a1, a2, v88);
          goto LABEL_82;
        case 3u:
          *a1 = *a2;
          uint64_t v89 = sub_10017DF08((uint64_t *)&unk_100EA0250);
          uint64_t v90 = *(int *)(v89 + 48);
          uint64_t v91 = (char *)a1 + v90;
          uint64_t v92 = (char *)a2 + v90;
          uint64_t v93 = type metadata accessor for WeatherMapOverlayKind();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v93 - 8) + 32))(v91, v92, v93);
          *((unsigned char *)a1 + *(int *)(v89 + 64)) = *((unsigned char *)a2 + *(int *)(v89 + 64));
          goto LABEL_82;
        case 4u:
          uint64_t v94 = type metadata accessor for WeatherCondition();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v94 - 8) + 32))(a1, a2, v94);
LABEL_82:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(a1, a2, *(void *)(*(void *)(v26 - 8) + 64));
          break;
      }
      goto LABEL_194;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
      goto LABEL_195;
  }
}

uint64_t sub_100A18BE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100A18BFC);
}

uint64_t sub_100A18BFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  type metadata accessor for MainAction();
  sub_100162F30();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    return _s7Weather24LocationCompositionStateOwet_0(a1, a2, v6);
  }
  else
  {
    unint64_t v9 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v9 >= 0xFFFFFFFF) {
      LODWORD(v9) = -1;
    }
    return (v9 + 1);
  }
}

uint64_t sub_100A18C88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100A18C9C);
}

void sub_100A18C9C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  type metadata accessor for MainAction();
  sub_100162F30();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    _s7Weather24LocationCompositionStateOwst_0(a1, a2, a2, v8);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
}

ValueMetadata *type metadata accessor for ContentStatusBannerReducer()
{
  return &type metadata for ContentStatusBannerReducer;
}

uint64_t sub_100A18D38@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for CurrentWeather();
  sub_100179C0C();
  uint64_t v20 = v5;
  __chkstk_darwin(v6);
  sub_1001626E0();
  uint64_t v23 = v8 - v7;
  uint64_t v9 = sub_10017DF08(&qword_100EA9A58);
  sub_100179C0C();
  uint64_t v22 = v10;
  __chkstk_darwin(v11);
  sub_1001626E0();
  uint64_t v14 = v13 - v12;
  uint64_t v15 = type metadata accessor for HumidityComponent();
  __chkstk_darwin(v15 - 8);
  sub_1001626E0();
  uint64_t v18 = v17 - v16;
  sub_1001B1E64(a1, a1[3]);
  sub_100A18F3C();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (!v2)
  {
    sub_1004EFF30(&qword_100E7CDD8);
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v14, v9);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v20 + 32))(v18, v23, v4);
    sub_100A18F88(v18, a2);
  }
  return _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)a1);
}

unint64_t sub_100A18F3C()
{
  unint64_t result = qword_100EA9A60;
  if (!qword_100EA9A60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA9A60);
  }
  return result;
}

uint64_t sub_100A18F88(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for HumidityComponent();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unsigned char *storeEnumTagSinglePayload for HumidityComponent.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x100A19088);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for HumidityComponent.CodingKeys()
{
  return &type metadata for HumidityComponent.CodingKeys;
}

uint64_t sub_100A190C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CurrentWeather();
  uint64_t v5 = **(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);

  return v5(a1, a2, v4);
}

uint64_t sub_100A1912C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CurrentWeather();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t sub_100A19190(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CurrentWeather();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t sub_100A191F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CurrentWeather();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t sub_100A19258(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CurrentWeather();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t sub_100A192BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100A192D0);
}

uint64_t sub_100A192D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CurrentWeather();

  return _s7Weather24LocationCompositionStateOwet_0(a1, a2, v4);
}

uint64_t sub_100A19318(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100A1932C);
}

uint64_t sub_100A1932C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CurrentWeather();

  return _s7Weather24LocationCompositionStateOwst_0(a1, a2, a2, v4);
}

uint64_t sub_100A19378(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x57746E6572727563 && a2 == 0xEE00726568746165)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_100A19424()
{
  return 0x57746E6572727563;
}

uint64_t sub_100A19448(void *a1)
{
  uint64_t v2 = sub_10017DF08(&qword_100EA9B10);
  sub_100179C0C();
  uint64_t v4 = v3;
  __chkstk_darwin(v5);
  sub_1001626E0();
  uint64_t v8 = v7 - v6;
  sub_1001B1E64(a1, a1[3]);
  sub_100A18F3C();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  type metadata accessor for CurrentWeather();
  sub_1004EFF30(&qword_100E7CDF0);
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v8, v2);
}

uint64_t sub_100A1957C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100A19378(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_100A195A8(uint64_t a1)
{
  unint64_t v2 = sub_100A18F3C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100A195E4(uint64_t a1)
{
  unint64_t v2 = sub_100A18F3C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100A19620@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100A18D38(a1, a2);
}

uint64_t sub_100A19638(void *a1)
{
  return sub_100A19448(a1);
}

unint64_t sub_100A19658()
{
  unint64_t result = qword_100EA9AF8;
  if (!qword_100EA9AF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA9AF8);
  }
  return result;
}

unint64_t sub_100A196A8()
{
  unint64_t result = qword_100EA9B00;
  if (!qword_100EA9B00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA9B00);
  }
  return result;
}

unint64_t sub_100A196F8()
{
  unint64_t result = qword_100EA9B08;
  if (!qword_100EA9B08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA9B08);
  }
  return result;
}

void *sub_100A19744(void *a1, void *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    a1[1] = a2[1];
    uint64_t v7 = a3[6];
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = type metadata accessor for MainViewModel.ModalModule(0);
    swift_bridgeObjectRetain();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v10))
    {
      uint64_t v11 = sub_10017DF08(&qword_100E94AE8);
      memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v13 = type metadata accessor for MainViewModel.ModalModule.LocationDetailModule(0);
        if (swift_getEnumCaseMultiPayload() == 6)
        {
          uint64_t v14 = type metadata accessor for URL();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v8, v9, v14);
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
        }
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
      }
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v8, 0, 1, v10);
    }
    uint64_t v15 = a3[8];
    *((unsigned char *)v4 + a3[7]) = *((unsigned char *)a2 + a3[7]);
    *((unsigned char *)v4 + v15) = *((unsigned char *)a2 + v15);
    uint64_t v16 = a3[9];
    uint64_t v17 = (char *)v4 + v16;
    uint64_t v18 = (char *)a2 + v16;
    *(_WORD *)((char *)v4 + v16) = *(_WORD *)((char *)a2 + v16);
    int v19 = (int *)type metadata accessor for WeatherMapPresentationState(0);
    uint64_t v20 = v19[6];
    uint64_t v21 = &v17[v20];
    uint64_t v22 = &v18[v20];
    uint64_t v23 = type metadata accessor for WeatherMapOverlayKind();
    uint64_t v41 = *(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16);
    v41(v21, v22, v23);
    uint64_t v24 = v19[7];
    uint64_t v25 = &v17[v24];
    uint64_t v26 = &v18[v24];
    uint64_t v27 = *((void *)v26 + 1);
    *(void *)uint64_t v25 = *(void *)v26;
    *((void *)v25 + 1) = v27;
    uint64_t v28 = v19[8];
    uint64_t v29 = &v17[v28];
    int v30 = &v18[v28];
    swift_bridgeObjectRetain();
    uint64_t v31 = sub_10017DF08(&qword_100E66460);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v30, 3, v31))
    {
      uint64_t v32 = type metadata accessor for WeatherMapTrackingState(0);
      memcpy(v29, v30, *(void *)(*(void *)(v32 - 8) + 64));
    }
    else
    {
      *uint64_t v29 = *v30;
      v41(&v29[*(int *)(v31 + 48)], &v30[*(int *)(v31 + 48)], v23);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v29, 0, 3, v31);
    }
    v17[v19[9]] = v18[v19[9]];
    uint64_t v33 = a3[10];
    uint64_t v34 = (char *)v4 + v33;
    int v35 = (char *)a2 + v33;
    *(_OWORD *)uint64_t v34 = *(_OWORD *)((char *)a2 + v33);
    v34[16] = *((unsigned char *)a2 + v33 + 16);
    v34[17] = *((unsigned char *)a2 + v33 + 17);
    v34[18] = *((unsigned char *)a2 + v33 + 18);
    uint64_t v36 = *(int *)(type metadata accessor for DisplayMetrics() + 36);
    uint64_t v37 = &v34[v36];
    uint64_t v38 = &v35[v36];
    uint64_t v39 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 16))(v37, v38, v39);
  }
  return v4;
}

uint64_t sub_100A19B08(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[6];
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (const void *)(a2 + v6);
  uint64_t v9 = type metadata accessor for MainViewModel.ModalModule(0);
  int v10 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v7, 1, v9);
  int v11 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v9);
  if (!v10)
  {
    if (!v11)
    {
      if (a1 == a2) {
        goto LABEL_18;
      }
      sub_100A1AD84((uint64_t)v7, (void (*)(void))type metadata accessor for MainViewModel.ModalModule);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v15 = type metadata accessor for MainViewModel.ModalModule.LocationDetailModule(0);
        if (swift_getEnumCaseMultiPayload() == 6)
        {
          uint64_t v16 = type metadata accessor for URL();
          (*(void (**)(void *, const void *, uint64_t))(*(void *)(v16 - 8) + 16))(v7, v8, v16);
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(v7, v8, *(void *)(*(void *)(v15 - 8) + 64));
        }
        swift_storeEnumTagMultiPayload();
        goto LABEL_18;
      }
      size_t v14 = *(void *)(*(void *)(v9 - 8) + 64);
LABEL_9:
      memcpy(v7, v8, v14);
      goto LABEL_18;
    }
    sub_100A1AD84((uint64_t)v7, (void (*)(void))type metadata accessor for MainViewModel.ModalModule);
LABEL_8:
    size_t v14 = *(void *)(*(void *)(sub_10017DF08(&qword_100E94AE8) - 8) + 64);
    goto LABEL_9;
  }
  if (v11) {
    goto LABEL_8;
  }
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v12 = type metadata accessor for MainViewModel.ModalModule.LocationDetailModule(0);
    if (swift_getEnumCaseMultiPayload() == 6)
    {
      uint64_t v13 = type metadata accessor for URL();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v13 - 8) + 16))(v7, v8, v13);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
  }
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v7, 0, 1, v9);
LABEL_18:
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  uint64_t v46 = a3;
  uint64_t v17 = a3[9];
  uint64_t v47 = a1;
  uint64_t v18 = (unsigned char *)(a1 + v17);
  uint64_t v19 = a2 + v17;
  *uint64_t v18 = *(unsigned char *)(a2 + v17);
  v18[1] = *(unsigned char *)(a2 + v17 + 1);
  uint64_t v20 = (int *)type metadata accessor for WeatherMapPresentationState(0);
  uint64_t v21 = v20[6];
  uint64_t v22 = &v18[v21];
  uint64_t v23 = v19 + v21;
  uint64_t v24 = type metadata accessor for WeatherMapOverlayKind();
  uint64_t v25 = *(void *)(v24 - 8);
  uint64_t v26 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v25 + 24);
  v26(v22, v23, v24);
  uint64_t v27 = v20[7];
  uint64_t v28 = &v18[v27];
  uint64_t v29 = (void *)(v19 + v27);
  *uint64_t v28 = *v29;
  v28[1] = v29[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v45 = v20;
  uint64_t v30 = v20[8];
  uint64_t v31 = &v18[v30];
  uint64_t v32 = (unsigned char *)(v19 + v30);
  uint64_t v33 = sub_10017DF08(&qword_100E66460);
  int v34 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v31, 3, v33);
  int v35 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v32, 3, v33);
  if (!v34)
  {
    if (!v35)
    {
      *uint64_t v31 = *v32;
      v26(&v31[*(int *)(v33 + 48)], (uint64_t)&v32[*(int *)(v33 + 48)], v24);
      goto LABEL_24;
    }
    sub_1001781AC((uint64_t)v31, &qword_100E66460);
    goto LABEL_23;
  }
  if (v35)
  {
LABEL_23:
    uint64_t v36 = type metadata accessor for WeatherMapTrackingState(0);
    memcpy(v31, v32, *(void *)(*(void *)(v36 - 8) + 64));
    goto LABEL_24;
  }
  *uint64_t v31 = *v32;
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v25 + 16))(&v31[*(int *)(v33 + 48)], &v32[*(int *)(v33 + 48)], v24);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v31, 0, 3, v33);
LABEL_24:
  v18[v45[9]] = *(unsigned char *)(v19 + v45[9]);
  uint64_t v37 = v46[10];
  uint64_t v38 = v47 + v37;
  uint64_t v39 = a2 + v37;
  *(void *)uint64_t v38 = *(void *)(a2 + v37);
  *(void *)(v38 + 8) = *(void *)(a2 + v37 + 8);
  *(unsigned char *)(v38 + 16) = *(unsigned char *)(a2 + v37 + 16);
  *(unsigned char *)(v38 + 17) = *(unsigned char *)(a2 + v37 + 17);
  *(unsigned char *)(v38 + 18) = *(unsigned char *)(a2 + v37 + 18);
  uint64_t v40 = *(int *)(type metadata accessor for DisplayMetrics() + 36);
  uint64_t v41 = v38 + v40;
  uint64_t v42 = v39 + v40;
  uint64_t v43 = type metadata accessor for DynamicTypeSize();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v43 - 8) + 24))(v41, v42, v43);
  return v47;
}

uint64_t sub_100A1A054(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  uint64_t v6 = a3[6];
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (const void *)(a2 + v6);
  uint64_t v9 = type metadata accessor for MainViewModel.ModalModule(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v9))
  {
    uint64_t v10 = sub_10017DF08(&qword_100E94AE8);
    memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v11 = type metadata accessor for MainViewModel.ModalModule.LocationDetailModule(0);
      if (swift_getEnumCaseMultiPayload() == 6)
      {
        uint64_t v12 = type metadata accessor for URL();
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v12 - 8) + 32))(v7, v8, v12);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v7, 0, 1, v9);
  }
  uint64_t v13 = a3[8];
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  *(unsigned char *)(a1 + v13) = *(unsigned char *)(a2 + v13);
  uint64_t v36 = a3;
  uint64_t v37 = a2;
  uint64_t v14 = a3[9];
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  *(_WORD *)(a1 + v14) = *(_WORD *)(a2 + v14);
  uint64_t v17 = (int *)type metadata accessor for WeatherMapPresentationState(0);
  uint64_t v18 = v17[6];
  uint64_t v19 = v15 + v18;
  uint64_t v20 = v16 + v18;
  uint64_t v21 = type metadata accessor for WeatherMapOverlayKind();
  uint64_t v22 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 32);
  v22(v19, v20, v21);
  *(_OWORD *)(v15 + v17[7]) = *(_OWORD *)(v16 + v17[7]);
  uint64_t v23 = v17[8];
  uint64_t v24 = (unsigned char *)(v15 + v23);
  uint64_t v25 = (unsigned char *)(v16 + v23);
  uint64_t v26 = sub_10017DF08(&qword_100E66460);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v25, 3, v26))
  {
    uint64_t v27 = type metadata accessor for WeatherMapTrackingState(0);
    memcpy(v24, v25, *(void *)(*(void *)(v27 - 8) + 64));
  }
  else
  {
    *uint64_t v24 = *v25;
    v22((uint64_t)&v24[*(int *)(v26 + 48)], (uint64_t)&v25[*(int *)(v26 + 48)], v21);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v24, 0, 3, v26);
  }
  *(unsigned char *)(v15 + v17[9]) = *(unsigned char *)(v16 + v17[9]);
  uint64_t v28 = v36[10];
  uint64_t v29 = a1 + v28;
  uint64_t v30 = v37 + v28;
  *(_OWORD *)uint64_t v29 = *(_OWORD *)(v37 + v28);
  *(unsigned char *)(v29 + 16) = *(unsigned char *)(v37 + v28 + 16);
  *(unsigned char *)(v29 + 17) = *(unsigned char *)(v37 + v28 + 17);
  *(unsigned char *)(v29 + 18) = *(unsigned char *)(v37 + v28 + 18);
  uint64_t v31 = *(int *)(type metadata accessor for DisplayMetrics() + 36);
  uint64_t v32 = v29 + v31;
  uint64_t v33 = v30 + v31;
  uint64_t v34 = type metadata accessor for DynamicTypeSize();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 32))(v32, v33, v34);
  return a1;
}

uint64_t sub_100A1A3B4(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[6];
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (const void *)(a2 + v6);
  uint64_t v9 = type metadata accessor for MainViewModel.ModalModule(0);
  int v10 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v7, 1, v9);
  int v11 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v9);
  if (!v10)
  {
    if (!v11)
    {
      if (a1 == a2) {
        goto LABEL_18;
      }
      sub_100A1AD84((uint64_t)v7, (void (*)(void))type metadata accessor for MainViewModel.ModalModule);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v15 = type metadata accessor for MainViewModel.ModalModule.LocationDetailModule(0);
        if (swift_getEnumCaseMultiPayload() == 6)
        {
          uint64_t v16 = type metadata accessor for URL();
          (*(void (**)(void *, const void *, uint64_t))(*(void *)(v16 - 8) + 32))(v7, v8, v16);
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(v7, v8, *(void *)(*(void *)(v15 - 8) + 64));
        }
        swift_storeEnumTagMultiPayload();
        goto LABEL_18;
      }
      size_t v14 = *(void *)(*(void *)(v9 - 8) + 64);
LABEL_9:
      memcpy(v7, v8, v14);
      goto LABEL_18;
    }
    sub_100A1AD84((uint64_t)v7, (void (*)(void))type metadata accessor for MainViewModel.ModalModule);
LABEL_8:
    size_t v14 = *(void *)(*(void *)(sub_10017DF08(&qword_100E94AE8) - 8) + 64);
    goto LABEL_9;
  }
  if (v11) {
    goto LABEL_8;
  }
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v12 = type metadata accessor for MainViewModel.ModalModule.LocationDetailModule(0);
    if (swift_getEnumCaseMultiPayload() == 6)
    {
      uint64_t v13 = type metadata accessor for URL();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v13 - 8) + 32))(v7, v8, v13);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
  }
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v7, 0, 1, v9);
LABEL_18:
  uint64_t v17 = a3[8];
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  *(unsigned char *)(a1 + v17) = *(unsigned char *)(a2 + v17);
  uint64_t v49 = a3;
  uint64_t v18 = a3[9];
  uint64_t v50 = a1;
  uint64_t v19 = a1 + v18;
  uint64_t v20 = a2 + v18;
  *(_WORD *)(a1 + v18) = *(_WORD *)(a2 + v18);
  uint64_t v21 = (int *)type metadata accessor for WeatherMapPresentationState(0);
  uint64_t v22 = v21[6];
  uint64_t v23 = v19 + v22;
  uint64_t v24 = v20 + v22;
  uint64_t v25 = type metadata accessor for WeatherMapOverlayKind();
  uint64_t v26 = *(void *)(v25 - 8);
  uint64_t v27 = *(void (**)(uint64_t, uint64_t, uint64_t))(v26 + 40);
  v27(v23, v24, v25);
  uint64_t v28 = v21[7];
  uint64_t v29 = (void *)(v19 + v28);
  uint64_t v30 = (uint64_t *)(v20 + v28);
  uint64_t v32 = *v30;
  uint64_t v31 = v30[1];
  *uint64_t v29 = v32;
  v29[1] = v31;
  swift_bridgeObjectRelease();
  uint64_t v48 = v21;
  uint64_t v33 = v21[8];
  uint64_t v34 = (unsigned char *)(v19 + v33);
  int v35 = (unsigned char *)(v20 + v33);
  uint64_t v36 = sub_10017DF08(&qword_100E66460);
  int v37 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v34, 3, v36);
  int v38 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v35, 3, v36);
  if (!v37)
  {
    if (!v38)
    {
      *uint64_t v34 = *v35;
      v27((uint64_t)&v34[*(int *)(v36 + 48)], (uint64_t)&v35[*(int *)(v36 + 48)], v25);
      goto LABEL_24;
    }
    sub_1001781AC((uint64_t)v34, &qword_100E66460);
    goto LABEL_23;
  }
  if (v38)
  {
LABEL_23:
    uint64_t v39 = type metadata accessor for WeatherMapTrackingState(0);
    memcpy(v34, v35, *(void *)(*(void *)(v39 - 8) + 64));
    goto LABEL_24;
  }
  *uint64_t v34 = *v35;
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v26 + 32))(&v34[*(int *)(v36 + 48)], &v35[*(int *)(v36 + 48)], v25);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v34, 0, 3, v36);
LABEL_24:
  *(unsigned char *)(v19 + v48[9]) = *(unsigned char *)(v20 + v48[9]);
  uint64_t v40 = v49[10];
  uint64_t v41 = v50 + v40;
  uint64_t v42 = a2 + v40;
  *(_OWORD *)uint64_t v41 = *(_OWORD *)(a2 + v40);
  *(unsigned char *)(v41 + 16) = *(unsigned char *)(a2 + v40 + 16);
  *(unsigned char *)(v41 + 17) = *(unsigned char *)(a2 + v40 + 17);
  *(unsigned char *)(v41 + 18) = *(unsigned char *)(a2 + v40 + 18);
  uint64_t v43 = *(int *)(type metadata accessor for DisplayMetrics() + 36);
  uint64_t v44 = v41 + v43;
  uint64_t v45 = v42 + v43;
  uint64_t v46 = type metadata accessor for DynamicTypeSize();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 40))(v44, v45, v46);
  return v50;
}

uint64_t sub_100A1A8D4(uint64_t a1, uint64_t a2, int *a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    sub_10017DF08(&qword_100E94AE8);
    sub_100162F30();
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a3[6];
    }
    else
    {
      type metadata accessor for WeatherMapPresentationState(0);
      sub_100162F30();
      if (*(_DWORD *)(v13 + 84) == a2)
      {
        uint64_t v10 = v12;
        uint64_t v11 = a3[9];
      }
      else
      {
        uint64_t v10 = type metadata accessor for DisplayMetrics();
        uint64_t v11 = a3[10];
      }
    }
    return _s7Weather24LocationCompositionStateOwet_0(a1 + v11, a2, v10);
  }
}

uint64_t sub_100A1A9A8(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    sub_10017DF08(&qword_100E94AE8);
    sub_100162F30();
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a4[6];
    }
    else
    {
      type metadata accessor for WeatherMapPresentationState(0);
      sub_100162F30();
      if (*(_DWORD *)(v13 + 84) == a3)
      {
        uint64_t v10 = v12;
        uint64_t v11 = a4[9];
      }
      else
      {
        uint64_t v10 = type metadata accessor for DisplayMetrics();
        uint64_t v11 = a4[10];
      }
    }
    return _s7Weather24LocationCompositionStateOwst_0(v5 + v11, a2, a2, v10);
  }
  return result;
}

uint64_t *sub_100A1AA78(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    if (swift_getEnumCaseMultiPayload() == 6)
    {
      uint64_t v7 = type metadata accessor for URL();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
  }
  return a1;
}

uint64_t sub_100A1AB74(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 6)
  {
    uint64_t v3 = type metadata accessor for URL();
    unint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
    return v4(a1, v3);
  }
  return result;
}

void *sub_100A1ABF0(void *a1, const void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 6)
  {
    uint64_t v6 = type metadata accessor for URL();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

void *sub_100A1ACA8(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_100A1AD84((uint64_t)a1, (void (*)(void))type metadata accessor for MainViewModel.ModalModule.LocationDetailModule);
    if (swift_getEnumCaseMultiPayload() == 6)
    {
      uint64_t v6 = type metadata accessor for URL();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_100A1AD84(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

void *sub_100A1ADDC(void *a1, const void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 6)
  {
    uint64_t v6 = type metadata accessor for URL();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

void *sub_100A1AE94(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_100A1AD84((uint64_t)a1, (void (*)(void))type metadata accessor for MainViewModel.ModalModule.LocationDetailModule);
    if (swift_getEnumCaseMultiPayload() == 6)
    {
      uint64_t v6 = type metadata accessor for URL();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t *sub_100A1AF70(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = type metadata accessor for MainViewModel.ModalModule.LocationDetailModule(0);
      if (swift_getEnumCaseMultiPayload() == 6)
      {
        uint64_t v8 = type metadata accessor for URL();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
  }
  return a1;
}

uint64_t sub_100A1B0C0(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 1)
  {
    type metadata accessor for MainViewModel.ModalModule.LocationDetailModule(0);
    uint64_t result = swift_getEnumCaseMultiPayload();
    if (result == 6)
    {
      uint64_t v3 = type metadata accessor for URL();
      unint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
      return v4(a1, v3);
    }
  }
  return result;
}

void *sub_100A1B158(void *a1, const void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = type metadata accessor for MainViewModel.ModalModule.LocationDetailModule(0);
    if (swift_getEnumCaseMultiPayload() == 6)
    {
      uint64_t v7 = type metadata accessor for URL();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

void *sub_100A1B264(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_100A1AD84((uint64_t)a1, (void (*)(void))type metadata accessor for MainViewModel.ModalModule);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = type metadata accessor for MainViewModel.ModalModule.LocationDetailModule(0);
      if (swift_getEnumCaseMultiPayload() == 6)
      {
        uint64_t v7 = type metadata accessor for URL();
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

void *sub_100A1B394(void *a1, const void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = type metadata accessor for MainViewModel.ModalModule.LocationDetailModule(0);
    if (swift_getEnumCaseMultiPayload() == 6)
    {
      uint64_t v7 = type metadata accessor for URL();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

void *sub_100A1B4A0(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_100A1AD84((uint64_t)a1, (void (*)(void))type metadata accessor for MainViewModel.ModalModule);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = type metadata accessor for MainViewModel.ModalModule.LocationDetailModule(0);
      if (swift_getEnumCaseMultiPayload() == 6)
      {
        uint64_t v7 = type metadata accessor for URL();
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_100A1B5D0()
{
  type metadata accessor for MainViewModel.ModalModule(0);
  sub_100162E4C();
  __chkstk_darwin(v0);
  unint64_t v2 = (char *)&v7 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for MainViewModel.ModalModule;
  sub_100A1C8B8();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if ((EnumCaseMultiPayload - 2) < 5) {
    return 1;
  }
  if (EnumCaseMultiPayload)
  {
    type metadata accessor for MainViewModel.ModalModule.LocationDetailModule(0);
    BOOL v5 = swift_getEnumCaseMultiPayload() != 6;
    uint64_t v3 = type metadata accessor for MainViewModel.ModalModule.LocationDetailModule;
  }
  else
  {
    BOOL v5 = 0;
  }
  sub_100A1AD84((uint64_t)v2, (void (*)(void))v3);
  return v5;
}

BOOL sub_100A1B6D0()
{
  type metadata accessor for MainViewModel.ModalModule(0);
  sub_100162E4C();
  __chkstk_darwin(v0);
  sub_10016278C();
  uint64_t v3 = (unsigned char *)(v1 - v2);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v9 - v5;
  sub_100A1C8B8();
  BOOL v7 = 0;
  if (!swift_getEnumCaseMultiPayload())
  {
    sub_100A1C8B8();
    if (*v3 != 1) {
      BOOL v7 = 1;
    }
  }
  sub_100A1AD84((uint64_t)v6, (void (*)(void))type metadata accessor for MainViewModel.ModalModule);
  return v7;
}

void sub_100A1B7E0()
{
  sub_100162EA0();
  char v4 = v3;
  type metadata accessor for MainViewModel.ModalModule.LocationDetailModule(0);
  sub_100162E4C();
  __chkstk_darwin(v5);
  sub_1001626E0();
  uint64_t v8 = v7 - v6;
  type metadata accessor for MainViewModel.ModalModule(0);
  sub_100162E4C();
  __chkstk_darwin(v9);
  sub_10016278C();
  uint64_t v12 = v10 - v11;
  __chkstk_darwin(v13);
  sub_100182D40();
  __chkstk_darwin(v14);
  sub_1001841B8();
  __chkstk_darwin(v15);
  sub_10018105C();
  sub_100A1C8B8();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if ((EnumCaseMultiPayload - 2) < 5) {
    goto LABEL_2;
  }
  if (!EnumCaseMultiPayload)
  {
    char v18 = *v2;
    sub_100A1C8B8();
    if ((v18 & 1) == 0) {
      goto LABEL_3;
    }
LABEL_13:
    sub_100A1AD84(v0, (void (*)(void))type metadata accessor for MainViewModel.ModalModule);
    sub_100A1C8B8();
    goto LABEL_14;
  }
  sub_100A1C864();
  if (swift_getEnumCaseMultiPayload() == 6)
  {
    sub_100A1AD84(v8, (void (*)(void))type metadata accessor for MainViewModel.ModalModule.LocationDetailModule);
    sub_100A1C8B8();
    goto LABEL_13;
  }
LABEL_2:
  sub_100A1C8B8();
LABEL_3:
  sub_100A1C8B8();
  if (v4)
  {
    char v17 = sub_100A1B5D0();
    sub_100A1AD84(v1, (void (*)(void))type metadata accessor for MainViewModel.ModalModule);
    sub_100A1AD84(v0, (void (*)(void))type metadata accessor for MainViewModel.ModalModule);
    sub_100A1C8B8();
    if (v17) {
      goto LABEL_14;
    }
  }
  else
  {
    sub_100A1AD84(v1, (void (*)(void))type metadata accessor for MainViewModel.ModalModule);
    sub_100A1AD84(v0, (void (*)(void))type metadata accessor for MainViewModel.ModalModule);
    sub_100A1C8B8();
  }
  sub_100A1B6D0();
LABEL_14:
  sub_100A1AD84(v12, (void (*)(void))type metadata accessor for MainViewModel.ModalModule);
  sub_100162694();
}

uint64_t sub_100A1BAE0()
{
  type metadata accessor for MainViewModel.ModalModule.LocationDetailModule(0);
  sub_100162E4C();
  __chkstk_darwin(v1);
  char v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for MainViewModel.ModalModule(0);
  sub_100162E4C();
  __chkstk_darwin(v4);
  sub_10011BFD8();
  sub_100A1C8B8();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if ((EnumCaseMultiPayload - 2) >= 5)
  {
    if (!EnumCaseMultiPayload)
    {
      char v6 = *v0 ^ 1;
      return v6 & 1;
    }
    sub_100A1C864();
    if (swift_getEnumCaseMultiPayload() == 6)
    {
      sub_100A1AD84((uint64_t)v3, (void (*)(void))type metadata accessor for MainViewModel.ModalModule.LocationDetailModule);
      char v6 = 0;
      return v6 & 1;
    }
  }
  char v6 = 1;
  return v6 & 1;
}

uint64_t sub_100A1BC34()
{
  type metadata accessor for MainViewModel.ModalModule.LocationDetailModule(0);
  sub_100162E4C();
  __chkstk_darwin(v0);
  uint64_t v2 = (char *)&v5 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for MainViewModel.ModalModule(0);
  sub_100162E4C();
  __chkstk_darwin(v3);
  sub_10011BFD8();
  sub_100A1C8B8();
  if (swift_getEnumCaseMultiPayload() != 1) {
    return 0;
  }
  sub_100A1C864();
  if (swift_getEnumCaseMultiPayload() != 6) {
    return 0;
  }
  sub_100A1AD84((uint64_t)v2, (void (*)(void))type metadata accessor for MainViewModel.ModalModule.LocationDetailModule);
  return 1;
}

void sub_100A1BD70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_100162EA0();
  a19 = v22;
  a20 = v23;
  uint64_t v24 = type metadata accessor for MainViewModel.ModalModule.LocationDetailModule(0);
  uint64_t v25 = sub_100109308(v24);
  __chkstk_darwin(v25);
  uint64_t v27 = (char *)&a9 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for MainViewModel.ModalModule(0);
  sub_100162E4C();
  __chkstk_darwin(v28);
  sub_10016278C();
  sub_1001841B8();
  __chkstk_darwin(v29);
  sub_10018105C();
  uint64_t v30 = sub_10017DF08(&qword_100EA9D28);
  uint64_t v31 = sub_100109308(v30);
  __chkstk_darwin(v31);
  sub_10017A790();
  sub_100A1C8B8();
  sub_100A1C8B8();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_100A1C8B8();
      if (sub_1001A11B4() != 1)
      {
        sub_100A1AD84(v21, (void (*)(void))type metadata accessor for MainViewModel.ModalModule.LocationDetailModule);
        goto LABEL_17;
      }
      sub_100A1C864();
      sub_100A1C088();
      sub_100A1AD84((uint64_t)v27, (void (*)(void))type metadata accessor for MainViewModel.ModalModule.LocationDetailModule);
      sub_100A1AD84(v21, (void (*)(void))type metadata accessor for MainViewModel.ModalModule.LocationDetailModule);
      sub_100A1AD84(v20, (void (*)(void))type metadata accessor for MainViewModel.ModalModule);
      goto LABEL_18;
    case 2u:
      if (sub_1001A11B4() == 2) {
        goto LABEL_19;
      }
      goto LABEL_17;
    case 3u:
      if (sub_1001A11B4() != 3) {
        goto LABEL_17;
      }
      goto LABEL_19;
    case 4u:
      if (sub_1001A11B4() != 4) {
        goto LABEL_17;
      }
      goto LABEL_19;
    case 5u:
      if (sub_1001A11B4() != 5) {
        goto LABEL_17;
      }
      goto LABEL_19;
    case 6u:
      if (sub_1001A11B4() == 6) {
        goto LABEL_19;
      }
      goto LABEL_17;
    default:
      sub_100A1C8B8();
      if (sub_1001A11B4()) {
LABEL_17:
      }
        sub_1001781AC(v20, &qword_100EA9D28);
      else {
LABEL_19:
      }
        sub_100A1AD84(v20, (void (*)(void))type metadata accessor for MainViewModel.ModalModule);
LABEL_18:
      sub_100162694();
      return;
  }
}

void sub_100A1C088()
{
  sub_100162EA0();
  uint64_t v45 = v4;
  uint64_t v46 = v5;
  uint64_t v6 = type metadata accessor for URL();
  uint64_t v41 = *(void *)(v6 - 8);
  uint64_t v42 = v6;
  __chkstk_darwin(v6);
  sub_1001626E0();
  uint64_t v40 = v8 - v7;
  type metadata accessor for MainViewModel.ModalModule.LocationDetailModule(0);
  sub_100162E4C();
  __chkstk_darwin(v9);
  sub_10016278C();
  uint64_t v43 = (uint64_t *)(v10 - v11);
  __chkstk_darwin(v12);
  uint64_t v44 = (char *)&v39 - v13;
  __chkstk_darwin(v14);
  uint64_t v16 = (uint64_t *)((char *)&v39 - v15);
  __chkstk_darwin(v17);
  sub_1001841B8();
  __chkstk_darwin(v18);
  sub_100182D40();
  __chkstk_darwin(v19);
  uint64_t v21 = (uint64_t *)((char *)&v39 - v20);
  __chkstk_darwin(v22);
  sub_100164AF0();
  __chkstk_darwin(v23);
  uint64_t v25 = (uint64_t *)((char *)&v39 - v24);
  uint64_t v26 = sub_10017DF08(&qword_100EA9D30);
  uint64_t v27 = sub_100109308(v26);
  __chkstk_darwin(v27);
  sub_10017A790();
  uint64_t v29 = (CGRect *)(v0 + v28);
  sub_100A1C8B8();
  sub_100A1C8B8();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_100A1C8B8();
      if (sub_10017AD48() != 1) {
        goto LABEL_21;
      }
      uint64_t v30 = v3[2];
      uint64_t v31 = v3[3];
      uint64_t v32 = *v3;
      uint64_t v33 = v3[1];
      goto LABEL_18;
    case 2u:
      sub_100A1C8B8();
      if (sub_10017AD48() != 2) {
        goto LABEL_21;
      }
      uint64_t v30 = v21[2];
      uint64_t v31 = v21[3];
      uint64_t v32 = *v21;
      uint64_t v33 = v21[1];
      goto LABEL_18;
    case 3u:
      sub_100A1C8B8();
      if (sub_10017AD48() != 3) {
        goto LABEL_21;
      }
      uint64_t v30 = v2[2];
      uint64_t v31 = v2[3];
      uint64_t v32 = *v2;
      uint64_t v33 = v2[1];
      goto LABEL_18;
    case 4u:
      sub_100A1C8B8();
      if (sub_10017AD48() != 4) {
        goto LABEL_21;
      }
      goto LABEL_17;
    case 5u:
      sub_100A1C8B8();
      if (sub_10017AD48() != 5) {
        goto LABEL_21;
      }
      uint64_t v30 = v16[2];
      uint64_t v31 = v16[3];
      uint64_t v32 = *v16;
      uint64_t v33 = v16[1];
      goto LABEL_18;
    case 6u:
      uint64_t v34 = v44;
      sub_100A1C8B8();
      if (sub_10017AD48() == 6)
      {
        uint64_t v36 = v40;
        uint64_t v35 = v41;
        uint64_t v37 = v42;
        (*(void (**)(uint64_t, CGRect *, uint64_t))(v41 + 32))(v40, v29, v42);
        static URL.== infix(_:_:)();
        int v38 = *(void (**)(uint64_t, uint64_t))(v35 + 8);
        v38(v36, v37);
        v38((uint64_t)v34, v37);
LABEL_19:
        sub_100A1AD84(v0, (void (*)(void))type metadata accessor for MainViewModel.ModalModule.LocationDetailModule);
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v41 + 8))(v34, v42);
LABEL_21:
        sub_1001781AC(v0, &qword_100EA9D30);
      }
      sub_100162694();
      return;
    case 7u:
      uint64_t v1 = v43;
      sub_100A1C8B8();
      if (sub_10017AD48() != 7) {
        goto LABEL_21;
      }
LABEL_17:
      uint64_t v30 = v1[2];
      uint64_t v31 = v1[3];
      uint64_t v32 = *v1;
      uint64_t v33 = v1[1];
      goto LABEL_18;
    default:
      sub_100A1C8B8();
      if (sub_10017AD48()) {
        goto LABEL_21;
      }
      uint64_t v30 = v25[2];
      uint64_t v31 = v25[3];
      uint64_t v32 = *v25;
      uint64_t v33 = v25[1];
LABEL_18:
      CGRectEqualToRect(*(CGRect *)&v32, *v29);
      goto LABEL_19;
  }
}

uint64_t sub_100A1C570@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = sub_10017DF08(&qword_100E94AE8);
  uint64_t v4 = sub_100109308(v3);
  __chkstk_darwin(v4);
  sub_1001626E0();
  uint64_t v7 = v6 - v5;
  sub_10017DF08(&qword_100E635E0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100C33BA0;
  strcpy((char *)(inited + 32), "primaryModule");
  *(_WORD *)(inited + 46) = -4864;
  *(unsigned char *)(inited + 48) = *(unsigned char *)v1;
  *(void *)(inited + 72) = &unk_100E32E18;
  strcpy((char *)(inited + 80), "stackModules");
  *(unsigned char *)(inited + 93) = 0;
  *(_WORD *)(inited + 94) = -5120;
  uint64_t v9 = *(void *)(v1 + 8);
  uint64_t v10 = sub_10017DF08(&qword_100EA9D38);
  *(void *)(inited + 96) = v9;
  *(void *)(inited + 120) = v10;
  *(void *)(inited + 128) = 0x646F4D6C61646F6DLL;
  *(void *)(inited + 136) = 0xEB00000000656C75;
  uint64_t v11 = type metadata accessor for MainViewModel(0);
  sub_100047940(v1 + *(int *)(v11 + 24), v7);
  uint64_t v12 = type metadata accessor for MainViewModel.ModalModule(0);
  if (_s7Weather24LocationCompositionStateOwet_0(v7, 1, v12) == 1)
  {
    swift_bridgeObjectRetain();
    sub_1001781AC(v7, &qword_100E94AE8);
    *(void *)(inited + 168) = &type metadata for String;
    *(void *)(inited + 144) = 7104878;
    *(void *)(inited + 152) = 0xE300000000000000;
  }
  else
  {
    uint64_t v15 = v12;
    sub_10023C310(v14);
    sub_100A1C864();
    sub_100098DB4(v14, (_OWORD *)(inited + 144));
    swift_bridgeObjectRetain();
  }
  Dictionary.init(dictionaryLiteral:)();
  a1[3] = sub_10017DF08(&qword_100EA9D40);
  a1[4] = sub_100A1C90C();
  sub_10023C310(a1);
  return ShortDescription.init(name:_:)();
}

uint64_t sub_100A1C7D8()
{
  sub_100A1C960(&qword_100EA9D50);

  return ShortDescribable.description.getter();
}

uint64_t sub_100A1C830()
{
  return sub_100A1C960(&qword_100EA9D18);
}

uint64_t sub_100A1C864()
{
  uint64_t v2 = sub_1001A3594();
  v3(v2);
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v4 + 32))(v0, v1);
  return v0;
}

uint64_t sub_100A1C8B8()
{
  uint64_t v2 = sub_1001A3594();
  v3(v2);
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v4 + 16))(v0, v1);
  return v0;
}

unint64_t sub_100A1C90C()
{
  unint64_t result = qword_100EA9D48;
  if (!qword_100EA9D48)
  {
    sub_10018C6DC(&qword_100EA9D40);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA9D48);
  }
  return result;
}

uint64_t sub_100A1C960(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for MainViewModel(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void type metadata accessor for MainViewModel.SecondaryViewOverlayModule()
{
}

void type metadata accessor for MainViewModel.StackModule()
{
}

unsigned char *sub_100A1C9C0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100A1CA8CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

void type metadata accessor for MainViewModel.PrimaryModule()
{
}

unsigned char *sub_100A1CAC0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x100A1CB5CLL);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

void type metadata accessor for MainViewModel.ModalModule.SecondaryModalModule()
{
}

unint64_t sub_100A1CB94()
{
  unint64_t result = qword_100EA9D58;
  if (!qword_100EA9D58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA9D58);
  }
  return result;
}

unint64_t sub_100A1CBE4()
{
  unint64_t result = qword_100EA9D60;
  if (!qword_100EA9D60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA9D60);
  }
  return result;
}

unint64_t sub_100A1CC34()
{
  unint64_t result = qword_100EA9D68;
  if (!qword_100EA9D68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA9D68);
  }
  return result;
}

unint64_t sub_100A1CC84()
{
  unint64_t result = qword_100EA9D70;
  if (!qword_100EA9D70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA9D70);
  }
  return result;
}

unint64_t sub_100A1CCD4()
{
  unint64_t result = qword_100EA9D78;
  if (!qword_100EA9D78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA9D78);
  }
  return result;
}

ValueMetadata *type metadata accessor for ReportWeatherEntrySource()
{
  return &type metadata for ReportWeatherEntrySource;
}

unint64_t sub_100A1CD38()
{
  unint64_t result = qword_100EA9D80;
  if (!qword_100EA9D80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA9D80);
  }
  return result;
}

uint64_t sub_100A1CD84(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6E656E6F706D6F63 && a2 == 0xE900000000000074;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1970169197 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v7) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_100A1CE70(char a1)
{
  if (a1) {
    return 1970169197;
  }
  else {
    return 0x6E656E6F706D6F63;
  }
}

uint64_t sub_100A1CEA4(void *a1, char a2)
{
  sub_10017DF08(&qword_100EA9DC0);
  sub_100179C0C();
  uint64_t v24 = v4;
  uint64_t v25 = v3;
  __chkstk_darwin(v3);
  sub_1001626E0();
  uint64_t v7 = v6 - v5;
  uint64_t v23 = sub_10017DF08(&qword_100EA9DC8);
  sub_100179C0C();
  uint64_t v9 = v8;
  __chkstk_darwin(v10);
  sub_1001626E0();
  uint64_t v13 = v12 - v11;
  uint64_t v14 = sub_10017DF08(&qword_100EA9DD0);
  sub_100179C0C();
  uint64_t v16 = v15;
  __chkstk_darwin(v17);
  sub_1001626E0();
  uint64_t v20 = v19 - v18;
  sub_1001B1E64(a1, a1[3]);
  sub_100A1D824();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  uint64_t v21 = (uint64_t (**)(uint64_t, uint64_t))(v16 + 8);
  if (a2)
  {
    sub_100A1D870();
    KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v7, v25);
  }
  else
  {
    sub_100A1D8BC();
    KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v13, v23);
  }
  return (*v21)(v20, v14);
}

uint64_t sub_100A1D0C4(uint64_t a1)
{
  uint64_t v37 = sub_10017DF08(&qword_100EA9D90);
  sub_100179C0C();
  uint64_t v35 = v2;
  __chkstk_darwin(v3);
  sub_1001626E0();
  uint64_t v6 = v5 - v4;
  uint64_t v7 = sub_10017DF08(&qword_100EA9D98);
  sub_100179C0C();
  uint64_t v34 = v8;
  __chkstk_darwin(v9);
  sub_1001626E0();
  uint64_t v12 = v11 - v10;
  uint64_t v13 = sub_10017DF08(&qword_100EA9DA0);
  sub_100179C0C();
  uint64_t v36 = v14;
  __chkstk_darwin(v15);
  sub_1001626E0();
  uint64_t v18 = v17 - v16;
  sub_1001B1E64((void *)a1, *(void *)(a1 + 24));
  sub_100A1D824();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v38) {
    goto LABEL_8;
  }
  uint64_t v39 = a1;
  uint64_t v19 = KeyedDecodingContainer.allKeys.getter();
  uint64_t v20 = *(void *)(v19 + 16);
  if (!v20
    || (a1 = *(unsigned __int8 *)(v19 + 32),
        sub_100723214(1, v20, v19, v19 + 32, 0, (2 * v20) | 1),
        uint64_t v22 = v21,
        unint64_t v24 = v23,
        swift_bridgeObjectRelease(),
        v22 != v24 >> 1))
  {
    uint64_t v27 = v18;
    uint64_t v28 = type metadata accessor for DecodingError();
    swift_allocError();
    uint64_t v30 = v29;
    sub_10017DF08(&qword_100E67280);
    *uint64_t v30 = &type metadata for ReportWeatherEntrySource;
    KeyedDecodingContainer.codingPath.getter();
    DecodingError.Context.init(codingPath:debugDescription:underlyingError:)();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v28 - 8) + 104))(v30, enum case for DecodingError.typeMismatch(_:), v28);
    swift_willThrow();
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v27, v13);
    a1 = v39;
LABEL_8:
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1);
    return a1;
  }
  if (a1)
  {
    sub_100A1D870();
    sub_10017A110();
    (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v6, v37);
    swift_unknownObjectRelease();
    uint64_t v25 = sub_10018124C();
    v26(v25);
    a1 = a1;
  }
  else
  {
    sub_100A1D8BC();
    sub_10017A110();
    (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v12, v7);
    swift_unknownObjectRelease();
    uint64_t v32 = sub_10018124C();
    v33(v32);
  }
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v39);
  return a1;
}

uint64_t sub_100A1D48C()
{
  return sub_100A1CE70(*v0);
}

uint64_t sub_100A1D494@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100A1CD84(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100A1D4BC(uint64_t a1)
{
  unint64_t v2 = sub_100A1D824();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100A1D4F8(uint64_t a1)
{
  unint64_t v2 = sub_100A1D824();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100A1D534(uint64_t a1)
{
  unint64_t v2 = sub_100A1D8BC();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100A1D570(uint64_t a1)
{
  unint64_t v2 = sub_100A1D8BC();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100A1D5AC(uint64_t a1)
{
  unint64_t v2 = sub_100A1D870();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100A1D5E8(uint64_t a1)
{
  unint64_t v2 = sub_100A1D870();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100A1D624@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_100A1D0C4(a1);
  if (!v2) {
    *a2 = result & 1;
  }
  return result;
}

uint64_t sub_100A1D654(void *a1)
{
  return sub_100A1CEA4(a1, *v1);
}

uint64_t sub_100A1D670@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_10017DF08(&qword_100E79218);
  sub_100179C0C();
  uint64_t v4 = v3;
  __chkstk_darwin(v5);
  sub_1001626E0();
  uint64_t v8 = v7 - v6;
  Dictionary.init(dictionaryLiteral:)();
  type metadata accessor for LocationViewAction();
  ShortDescription.init(name:_:)();
  a1[3] = v2;
  a1[4] = sub_1004878B0();
  uint64_t v9 = sub_100170694(a1);
  return (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v4 + 32))(v9, v8, v2);
}

uint64_t sub_100A1D790@<X0>(uint64_t *a1@<X8>)
{
  return sub_100A1D670(a1);
}

uint64_t sub_100A1D798()
{
  sub_100A1D908();

  return ShortDescribable.description.getter();
}

unint64_t sub_100A1D7D8()
{
  unint64_t result = qword_100EA9D88;
  if (!qword_100EA9D88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA9D88);
  }
  return result;
}

unint64_t sub_100A1D824()
{
  unint64_t result = qword_100EA9DA8;
  if (!qword_100EA9DA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA9DA8);
  }
  return result;
}

unint64_t sub_100A1D870()
{
  unint64_t result = qword_100EA9DB0;
  if (!qword_100EA9DB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA9DB0);
  }
  return result;
}

unint64_t sub_100A1D8BC()
{
  unint64_t result = qword_100EA9DB8;
  if (!qword_100EA9DB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA9DB8);
  }
  return result;
}

unint64_t sub_100A1D908()
{
  unint64_t result = qword_100EA9DD8;
  if (!qword_100EA9DD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA9DD8);
  }
  return result;
}

unsigned char *_s7Weather24ReportWeatherEntrySourceOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100A1DA20);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ReportWeatherEntrySource.CodingKeys()
{
  return &type metadata for ReportWeatherEntrySource.CodingKeys;
}

ValueMetadata *type metadata accessor for ReportWeatherEntrySource.ComponentCodingKeys()
{
  return &type metadata for ReportWeatherEntrySource.ComponentCodingKeys;
}

ValueMetadata *type metadata accessor for ReportWeatherEntrySource.MenuCodingKeys()
{
  return &type metadata for ReportWeatherEntrySource.MenuCodingKeys;
}

unint64_t sub_100A1DA7C()
{
  unint64_t result = qword_100EA9DE0;
  if (!qword_100EA9DE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA9DE0);
  }
  return result;
}

unint64_t sub_100A1DACC()
{
  unint64_t result = qword_100EA9DE8;
  if (!qword_100EA9DE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA9DE8);
  }
  return result;
}

unint64_t sub_100A1DB1C()
{
  unint64_t result = qword_100EA9DF0;
  if (!qword_100EA9DF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA9DF0);
  }
  return result;
}

unint64_t sub_100A1DB6C()
{
  unint64_t result = qword_100EA9DF8;
  if (!qword_100EA9DF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA9DF8);
  }
  return result;
}

unint64_t sub_100A1DBBC()
{
  unint64_t result = qword_100EA9E00;
  if (!qword_100EA9E00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA9E00);
  }
  return result;
}

unint64_t sub_100A1DC0C()
{
  unint64_t result = qword_100EA9E08;
  if (!qword_100EA9E08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA9E08);
  }
  return result;
}

unint64_t sub_100A1DC5C()
{
  unint64_t result = qword_100EA9E10;
  if (!qword_100EA9E10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA9E10);
  }
  return result;
}

uint64_t *sub_100A1DCA8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v10 = type metadata accessor for WeatherStatisticsModel();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v10 - 8) + 16))(a1, a2, v10);
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(void *)(v6 + 64));
        return a1;
      }
      uint64_t v8 = a2[1];
      *a1 = *a2;
      a1[1] = v8;
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_100A1DDC4(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 1)
  {
    uint64_t v3 = type metadata accessor for WeatherStatisticsModel();
    unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
    return v4(a1, v3);
  }
  else if (!result)
  {
    return swift_bridgeObjectRelease();
  }
  return result;
}

void *sub_100A1DE64(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1001BC288((uint64_t)a1, (void (*)(void))type metadata accessor for WeatherData.WeatherStatisticsState);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v7 = type metadata accessor for WeatherStatisticsModel();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        return a1;
      }
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_100A1DF68(void *a1, const void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = type metadata accessor for WeatherStatisticsModel();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

void *sub_100A1E020(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1001BC288((uint64_t)a1, (void (*)(void))type metadata accessor for WeatherData.WeatherStatisticsState);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = type metadata accessor for WeatherStatisticsModel();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t *sub_100A1E0FC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    uint64_t v7 = sub_10017DF08(&qword_100E63738);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v7))
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      uint64_t v9 = type metadata accessor for Date();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v7);
    }
  }
  return a1;
}

uint64_t sub_100A1E204(uint64_t a1)
{
  uint64_t v2 = sub_10017DF08(&qword_100E63738);
  uint64_t result = _s7Weather24LocationCompositionStateOwet_0(a1, 1, v2);
  if (!result)
  {
    uint64_t v4 = type metadata accessor for Date();
    int v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
    return v5(a1, v4);
  }
  return result;
}

void *sub_100A1E294(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = sub_10017DF08(&qword_100E63738);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v7 = type metadata accessor for Date();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v6);
  }
  return a1;
}

void *sub_100A1E360(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = sub_10017DF08(&qword_100E63738);
  int v7 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a1, 1, v6);
  int v8 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v6);
  if (!v7)
  {
    if (!v8)
    {
      uint64_t v11 = type metadata accessor for Date();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v11 - 8) + 24))(a1, a2, v11);
      return a1;
    }
    sub_100178110((uint64_t)a1, &qword_100E63738);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  uint64_t v9 = type metadata accessor for Date();
  (*(void (**)(void *, const void *, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v6);
  return a1;
}

void *sub_100A1E4A0(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = sub_10017DF08(&qword_100E63738);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v7 = type metadata accessor for Date();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v6);
  }
  return a1;
}

void *sub_100A1E56C(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = sub_10017DF08(&qword_100E63738);
  int v7 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a1, 1, v6);
  int v8 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v6);
  if (!v7)
  {
    if (!v8)
    {
      uint64_t v11 = type metadata accessor for Date();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v11 - 8) + 40))(a1, a2, v11);
      return a1;
    }
    sub_100178110((uint64_t)a1, &qword_100E63738);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  uint64_t v9 = type metadata accessor for Date();
  (*(void (**)(void *, const void *, uint64_t))(*(void *)(v9 - 8) + 32))(a1, a2, v9);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v6);
  return a1;
}

uint64_t sub_100A1E6AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100A1E6C0);
}

uint64_t sub_100A1E6C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10017DF08(&qword_100E63738);
  unsigned int v5 = _s7Weather24LocationCompositionStateOwet_0(a1, a2, v4);
  if (v5 >= 2) {
    return v5 - 1;
  }
  else {
    return 0;
  }
}

uint64_t sub_100A1E70C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100A1E720);
}

uint64_t sub_100A1E720(uint64_t a1, int a2, uint64_t a3)
{
  if (a2) {
    uint64_t v5 = (a2 + 1);
  }
  else {
    uint64_t v5 = 0;
  }
  uint64_t v6 = sub_10017DF08(&qword_100E63738);

  return _s7Weather24LocationCompositionStateOwst_0(a1, v5, a3, v6);
}

uint64_t sub_100A1E780(uint64_t a1)
{
  uint64_t v2 = sub_10017DF08(&qword_100E63738);

  return _s7Weather24LocationCompositionStateOwet_0(a1, 1, v2);
}

uint64_t sub_100A1E7C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10017DF08(&qword_100E63738);

  return _s7Weather24LocationCompositionStateOwst_0(a1, a2, 1, v4);
}

uint64_t *sub_100A1E818(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
    return v4;
  }
  uint64_t v7 = a2[1];
  *a1 = *a2;
  a1[1] = v7;
  uint64_t v8 = a3[5];
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = type metadata accessor for Locale();
  swift_bridgeObjectRetain();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v10, 1, v11))
  {
    uint64_t v12 = sub_10017DF08(&qword_100E63730);
    memcpy(v9, v10, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v9, 0, 1, v11);
  }
  uint64_t v14 = a3[6];
  uint64_t v15 = (char *)v4 + v14;
  uint64_t v16 = (char *)a2 + v14;
  uint64_t v17 = type metadata accessor for WeatherDataModel();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
  uint64_t v18 = a3[7];
  uint64_t v19 = (char *)v4 + v18;
  uint64_t v20 = (char *)a2 + v18;
  uint64_t v21 = sub_10017DF08(&qword_100E63738);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v20, 1, v21))
  {
    uint64_t v22 = type metadata accessor for WeatherData.CachingState(0);
    memcpy(v19, v20, *(void *)(*(void *)(v22 - 8) + 64));
  }
  else
  {
    uint64_t v23 = type metadata accessor for Date();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v19, v20, v23);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v19, 0, 1, v21);
  }
  uint64_t v24 = a3[8];
  uint64_t v25 = (uint64_t *)((char *)v4 + v24);
  uint64_t v26 = (uint64_t *)((char *)a2 + v24);
  uint64_t v27 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v30 = type metadata accessor for WeatherStatisticsModel();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v30 - 8) + 16))(v25, v26, v30);
    goto LABEL_13;
  }
  if (!EnumCaseMultiPayload)
  {
    uint64_t v29 = v26[1];
    *uint64_t v25 = *v26;
    v25[1] = v29;
    swift_bridgeObjectRetain();
LABEL_13:
    swift_storeEnumTagMultiPayload();
    goto LABEL_15;
  }
  memcpy(v25, v26, *(void *)(*(void *)(v27 - 8) + 64));
LABEL_15:
  uint64_t v31 = a3[9];
  uint64_t v32 = (char *)v4 + v31;
  uint64_t v33 = (char *)a2 + v31;
  uint64_t v34 = type metadata accessor for WeatherDataOverrides();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v33, 1, v34))
  {
    uint64_t v35 = sub_10017DF08(&qword_100E63740);
    memcpy(v32, v33, *(void *)(*(void *)(v35 - 8) + 64));
  }
  else
  {
    uint64_t v36 = type metadata accessor for Date();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v33, 1, v36))
    {
      uint64_t v37 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
      memcpy(v32, v33, *(void *)(*(void *)(v37 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 16))(v32, v33, v36);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v32, 0, 1, v36);
    }
    uint64_t v38 = *(int *)(v34 + 20);
    uint64_t v39 = &v32[v38];
    uint64_t v40 = &v33[v38];
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v40, 1, v36))
    {
      uint64_t v41 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
      memcpy(v39, v40, *(void *)(*(void *)(v41 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 16))(v39, v40, v36);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v39, 0, 1, v36);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v32, 0, 1, v34);
  }
  return v4;
}

void *sub_100A1ECB0(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for Locale();
  int v10 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v7, 1, v9);
  int v11 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v9);
  if (v10)
  {
    if (!v11)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v12 = *(void *)(v9 - 8);
  if (v11)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v7, v9);
LABEL_6:
    uint64_t v13 = sub_10017DF08(&qword_100E63730);
    memcpy(v7, v8, *(void *)(*(void *)(v13 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 24))(v7, v8, v9);
LABEL_7:
  uint64_t v14 = a3[6];
  uint64_t v15 = (char *)a1 + v14;
  uint64_t v16 = (char *)a2 + v14;
  uint64_t v17 = type metadata accessor for WeatherDataModel();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 24))(v15, v16, v17);
  uint64_t v18 = a3[7];
  uint64_t v19 = (char *)a1 + v18;
  uint64_t v20 = (char *)a2 + v18;
  uint64_t v21 = sub_10017DF08(&qword_100E63738);
  int v22 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v19, 1, v21);
  int v23 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v20, 1, v21);
  if (v22)
  {
    if (!v23)
    {
      uint64_t v24 = type metadata accessor for Date();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16))(v19, v20, v24);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v19, 0, 1, v21);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v23)
  {
    sub_100178110((uint64_t)v19, &qword_100E63738);
LABEL_12:
    uint64_t v25 = type metadata accessor for WeatherData.CachingState(0);
    memcpy(v19, v20, *(void *)(*(void *)(v25 - 8) + 64));
    goto LABEL_13;
  }
  uint64_t v43 = type metadata accessor for Date();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 24))(v19, v20, v43);
LABEL_13:
  if (a1 == a2) {
    goto LABEL_20;
  }
  uint64_t v26 = a3[8];
  uint64_t v27 = (void *)((char *)a1 + v26);
  uint64_t v28 = (void *)((char *)a2 + v26);
  sub_1001BC288((uint64_t)a1 + v26, (void (*)(void))type metadata accessor for WeatherData.WeatherStatisticsState);
  uint64_t v29 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v31 = type metadata accessor for WeatherStatisticsModel();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v31 - 8) + 16))(v27, v28, v31);
    goto LABEL_18;
  }
  if (!EnumCaseMultiPayload)
  {
    *uint64_t v27 = *v28;
    v27[1] = v28[1];
    swift_bridgeObjectRetain();
LABEL_18:
    swift_storeEnumTagMultiPayload();
    goto LABEL_20;
  }
  memcpy(v27, v28, *(void *)(*(void *)(v29 - 8) + 64));
LABEL_20:
  uint64_t v32 = a3[9];
  uint64_t v33 = (char *)a1 + v32;
  uint64_t v34 = (char *)a2 + v32;
  uint64_t v35 = type metadata accessor for WeatherDataOverrides();
  int v36 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v33, 1, v35);
  int v37 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v34, 1, v35);
  if (v36)
  {
    if (!v37)
    {
      uint64_t v38 = type metadata accessor for Date();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v34, 1, v38))
      {
        uint64_t v39 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
        memcpy(v33, v34, *(void *)(*(void *)(v39 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 16))(v33, v34, v38);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v33, 0, 1, v38);
      }
      uint64_t v47 = *(int *)(v35 + 20);
      uint64_t v48 = &v33[v47];
      uint64_t v49 = &v34[v47];
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v49, 1, v38))
      {
        uint64_t v50 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
        memcpy(v48, v49, *(void *)(*(void *)(v50 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 16))(v48, v49, v38);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v48, 0, 1, v38);
      }
      uint64_t v51 = (uint64_t)v33;
      uint64_t v52 = v35;
      goto LABEL_38;
    }
    goto LABEL_26;
  }
  if (v37)
  {
    sub_1001BC288((uint64_t)v33, (void (*)(void))type metadata accessor for WeatherDataOverrides);
LABEL_26:
    size_t v40 = *(void *)(*(void *)(sub_10017DF08(&qword_100E63740) - 8) + 64);
    uint64_t v41 = v33;
    uint64_t v42 = v34;
    goto LABEL_27;
  }
  uint64_t v44 = type metadata accessor for Date();
  int v45 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v33, 1, v44);
  int v46 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v34, 1, v44);
  if (!v45)
  {
    uint64_t v54 = *(void *)(v44 - 8);
    if (!v46)
    {
      (*(void (**)(char *, char *, uint64_t))(v54 + 24))(v33, v34, v44);
      goto LABEL_43;
    }
    (*(void (**)(char *, uint64_t))(v54 + 8))(v33, v44);
    goto LABEL_42;
  }
  if (v46)
  {
LABEL_42:
    uint64_t v55 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    memcpy(v33, v34, *(void *)(*(void *)(v55 - 8) + 64));
    goto LABEL_43;
  }
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v44 - 8) + 16))(v33, v34, v44);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v33, 0, 1, v44);
LABEL_43:
  uint64_t v56 = *(int *)(v35 + 20);
  uint64_t v57 = (uint64_t)&v33[v56];
  uint64_t v58 = (uint64_t)&v34[v56];
  int v59 = _s7Weather24LocationCompositionStateOwet_0(v57, 1, v44);
  int v60 = _s7Weather24LocationCompositionStateOwet_0(v58, 1, v44);
  if (v59)
  {
    if (!v60)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v44 - 8) + 16))(v57, v58, v44);
      uint64_t v51 = v57;
      uint64_t v52 = v44;
LABEL_38:
      _s7Weather24LocationCompositionStateOwst_0(v51, 0, 1, v52);
      return a1;
    }
  }
  else
  {
    uint64_t v61 = *(void *)(v44 - 8);
    if (!v60)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v61 + 24))(v57, v58, v44);
      return a1;
    }
    (*(void (**)(uint64_t, uint64_t))(v61 + 8))(v57, v44);
  }
  size_t v40 = *(void *)(*(void *)(sub_10017DF08((uint64_t *)&unk_100E73CA0) - 8) + 64);
  uint64_t v41 = (void *)v57;
  uint64_t v42 = (const void *)v58;
LABEL_27:
  memcpy(v41, v42, v40);
  return a1;
}

_OWORD *sub_100A1F484(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for Locale();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v9))
  {
    uint64_t v10 = sub_10017DF08(&qword_100E63730);
    memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v7, 0, 1, v9);
  }
  uint64_t v11 = a3[6];
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = type metadata accessor for WeatherDataModel();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = (char *)a1 + v15;
  uint64_t v17 = (char *)a2 + v15;
  uint64_t v18 = sub_10017DF08(&qword_100E63738);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v17, 1, v18))
  {
    uint64_t v19 = type metadata accessor for WeatherData.CachingState(0);
    memcpy(v16, v17, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    uint64_t v20 = type metadata accessor for Date();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 32))(v16, v17, v20);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v16, 0, 1, v18);
  }
  uint64_t v21 = a3[8];
  int v22 = (char *)a1 + v21;
  int v23 = (char *)a2 + v21;
  uint64_t v24 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v25 = type metadata accessor for WeatherStatisticsModel();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 32))(v22, v23, v25);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v22, v23, *(void *)(*(void *)(v24 - 8) + 64));
  }
  uint64_t v26 = a3[9];
  uint64_t v27 = (char *)a1 + v26;
  uint64_t v28 = (char *)a2 + v26;
  uint64_t v29 = type metadata accessor for WeatherDataOverrides();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v28, 1, v29))
  {
    uint64_t v30 = sub_10017DF08(&qword_100E63740);
    memcpy(v27, v28, *(void *)(*(void *)(v30 - 8) + 64));
  }
  else
  {
    uint64_t v31 = type metadata accessor for Date();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v28, 1, v31))
    {
      uint64_t v32 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
      memcpy(v27, v28, *(void *)(*(void *)(v32 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 32))(v27, v28, v31);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v27, 0, 1, v31);
    }
    uint64_t v33 = *(int *)(v29 + 20);
    uint64_t v34 = &v27[v33];
    uint64_t v35 = &v28[v33];
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v35, 1, v31))
    {
      uint64_t v36 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
      memcpy(v34, v35, *(void *)(*(void *)(v36 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 32))(v34, v35, v31);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v34, 0, 1, v31);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v27, 0, 1, v29);
  }
  return a1;
}

void *sub_100A1F89C(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for Locale();
  int v11 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v10);
  int v12 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v10);
  if (v11)
  {
    if (!v12)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v13 = *(void *)(v10 - 8);
  if (v12)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v8, v10);
LABEL_6:
    uint64_t v14 = sub_10017DF08(&qword_100E63730);
    memcpy(v8, v9, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 40))(v8, v9, v10);
LABEL_7:
  uint64_t v15 = a3[6];
  uint64_t v16 = (char *)a1 + v15;
  uint64_t v17 = (char *)a2 + v15;
  uint64_t v18 = type metadata accessor for WeatherDataModel();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 40))(v16, v17, v18);
  uint64_t v19 = a3[7];
  uint64_t v20 = (char *)a1 + v19;
  uint64_t v21 = (char *)a2 + v19;
  uint64_t v22 = sub_10017DF08(&qword_100E63738);
  int v23 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v20, 1, v22);
  int v24 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v21, 1, v22);
  if (v23)
  {
    if (!v24)
    {
      uint64_t v25 = type metadata accessor for Date();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 32))(v20, v21, v25);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v20, 0, 1, v22);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v24)
  {
    sub_100178110((uint64_t)v20, &qword_100E63738);
LABEL_12:
    uint64_t v26 = type metadata accessor for WeatherData.CachingState(0);
    memcpy(v20, v21, *(void *)(*(void *)(v26 - 8) + 64));
    goto LABEL_13;
  }
  uint64_t v43 = type metadata accessor for Date();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 40))(v20, v21, v43);
LABEL_13:
  if (a1 != a2)
  {
    uint64_t v27 = a3[8];
    uint64_t v28 = (char *)a1 + v27;
    uint64_t v29 = (char *)a2 + v27;
    sub_1001BC288((uint64_t)a1 + v27, (void (*)(void))type metadata accessor for WeatherData.WeatherStatisticsState);
    uint64_t v30 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v31 = type metadata accessor for WeatherStatisticsModel();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 32))(v28, v29, v31);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v28, v29, *(void *)(*(void *)(v30 - 8) + 64));
    }
  }
  uint64_t v32 = a3[9];
  uint64_t v33 = (char *)a1 + v32;
  uint64_t v34 = (char *)a2 + v32;
  uint64_t v35 = type metadata accessor for WeatherDataOverrides();
  int v36 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v33, 1, v35);
  int v37 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v34, 1, v35);
  if (v36)
  {
    if (!v37)
    {
      uint64_t v38 = type metadata accessor for Date();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v34, 1, v38))
      {
        uint64_t v39 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
        memcpy(v33, v34, *(void *)(*(void *)(v39 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 32))(v33, v34, v38);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v33, 0, 1, v38);
      }
      uint64_t v47 = *(int *)(v35 + 20);
      uint64_t v48 = &v33[v47];
      uint64_t v49 = &v34[v47];
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v49, 1, v38))
      {
        uint64_t v50 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
        memcpy(v48, v49, *(void *)(*(void *)(v50 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 32))(v48, v49, v38);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v48, 0, 1, v38);
      }
      uint64_t v51 = (uint64_t)v33;
      uint64_t v52 = v35;
      goto LABEL_35;
    }
    goto LABEL_23;
  }
  if (v37)
  {
    sub_1001BC288((uint64_t)v33, (void (*)(void))type metadata accessor for WeatherDataOverrides);
LABEL_23:
    size_t v40 = *(void *)(*(void *)(sub_10017DF08(&qword_100E63740) - 8) + 64);
    uint64_t v41 = v33;
    uint64_t v42 = v34;
    goto LABEL_24;
  }
  uint64_t v44 = type metadata accessor for Date();
  int v45 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v33, 1, v44);
  int v46 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v34, 1, v44);
  if (!v45)
  {
    uint64_t v54 = *(void *)(v44 - 8);
    if (!v46)
    {
      (*(void (**)(char *, char *, uint64_t))(v54 + 40))(v33, v34, v44);
      goto LABEL_40;
    }
    (*(void (**)(char *, uint64_t))(v54 + 8))(v33, v44);
    goto LABEL_39;
  }
  if (v46)
  {
LABEL_39:
    uint64_t v55 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    memcpy(v33, v34, *(void *)(*(void *)(v55 - 8) + 64));
    goto LABEL_40;
  }
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v44 - 8) + 32))(v33, v34, v44);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v33, 0, 1, v44);
LABEL_40:
  uint64_t v56 = *(int *)(v35 + 20);
  uint64_t v57 = (uint64_t)&v33[v56];
  uint64_t v58 = (uint64_t)&v34[v56];
  int v59 = _s7Weather24LocationCompositionStateOwet_0(v57, 1, v44);
  int v60 = _s7Weather24LocationCompositionStateOwet_0(v58, 1, v44);
  if (v59)
  {
    if (!v60)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v44 - 8) + 32))(v57, v58, v44);
      uint64_t v51 = v57;
      uint64_t v52 = v44;
LABEL_35:
      _s7Weather24LocationCompositionStateOwst_0(v51, 0, 1, v52);
      return a1;
    }
  }
  else
  {
    uint64_t v61 = *(void *)(v44 - 8);
    if (!v60)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v61 + 40))(v57, v58, v44);
      return a1;
    }
    (*(void (**)(uint64_t, uint64_t))(v61 + 8))(v57, v44);
  }
  size_t v40 = *(void *)(*(void *)(sub_10017DF08((uint64_t *)&unk_100E73CA0) - 8) + 64);
  uint64_t v41 = (void *)v57;
  uint64_t v42 = (const void *)v58;
LABEL_24:
  memcpy(v41, v42, v40);
  return a1;
}

uint64_t sub_100A20038(uint64_t a1, uint64_t a2, int *a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    sub_10017DF08(&qword_100E63730);
    sub_100162F30();
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a3[5];
    }
    else
    {
      type metadata accessor for WeatherDataModel();
      sub_100162F30();
      if (*(_DWORD *)(v13 + 84) == a2)
      {
        uint64_t v10 = v12;
        uint64_t v11 = a3[6];
      }
      else
      {
        type metadata accessor for WeatherData.CachingState(0);
        sub_100162F30();
        if (*(_DWORD *)(v15 + 84) == a2)
        {
          uint64_t v10 = v14;
          uint64_t v11 = a3[7];
        }
        else
        {
          type metadata accessor for WeatherData.WeatherStatisticsState(0);
          sub_100162F30();
          if (*(_DWORD *)(v17 + 84) == a2)
          {
            uint64_t v10 = v16;
            uint64_t v11 = a3[8];
          }
          else
          {
            uint64_t v10 = sub_10017DF08(&qword_100E63740);
            uint64_t v11 = a3[9];
          }
        }
      }
    }
    return _s7Weather24LocationCompositionStateOwet_0(a1 + v11, a2, v10);
  }
}

uint64_t sub_100A20158(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    sub_10017DF08(&qword_100E63730);
    sub_100162F30();
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a4[5];
    }
    else
    {
      type metadata accessor for WeatherDataModel();
      sub_100162F30();
      if (*(_DWORD *)(v13 + 84) == a3)
      {
        uint64_t v10 = v12;
        uint64_t v11 = a4[6];
      }
      else
      {
        type metadata accessor for WeatherData.CachingState(0);
        sub_100162F30();
        if (*(_DWORD *)(v15 + 84) == a3)
        {
          uint64_t v10 = v14;
          uint64_t v11 = a4[7];
        }
        else
        {
          type metadata accessor for WeatherData.WeatherStatisticsState(0);
          sub_100162F30();
          if (*(_DWORD *)(v17 + 84) == a3)
          {
            uint64_t v10 = v16;
            uint64_t v11 = a4[8];
          }
          else
          {
            uint64_t v10 = sub_10017DF08(&qword_100E63740);
            uint64_t v11 = a4[9];
          }
        }
      }
    }
    return _s7Weather24LocationCompositionStateOwst_0(v5 + v11, a2, a2, v10);
  }
  return result;
}

void sub_100A20274()
{
  String.write(to:)();
  if (!v0)
  {
    type metadata accessor for WeatherData(0);
    sub_10018223C();
    WeatherDataModel.write(to:)();
    sub_10018223C();
    sub_1008C63D0();
    sub_10018223C();
    sub_1008C60D0();
  }
}

void sub_100A20300()
{
  sub_10016314C();
  uint64_t v5 = v4;
  uint64_t v32 = v6;
  uint64_t v7 = type metadata accessor for WeatherData.CachingState(0);
  uint64_t v8 = sub_100109308(v7);
  __chkstk_darwin(v8);
  sub_10008B8C0();
  uint64_t v9 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
  uint64_t v10 = sub_100109308(v9);
  __chkstk_darwin(v10);
  sub_100162EB8();
  type metadata accessor for WeatherDataModel();
  sub_100179C0C();
  __chkstk_darwin(v11);
  sub_10011C760();
  uint64_t v12 = sub_10017DF08(&qword_100E63730);
  uint64_t v13 = sub_100109308(v12);
  __chkstk_darwin(v13);
  sub_100109370();
  uint64_t v14 = static String.read(from:)();
  if (!v1)
  {
    uint64_t v16 = v15;
    uint64_t v30 = v14;
    uint64_t v17 = type metadata accessor for Locale();
    _s7Weather24LocationCompositionStateOwst_0(v2, 1, 1, v17);
    static WeatherDataModel.read(from:)();
    sub_1008C6574();
    sub_1008C6248(v5, v18, v19, v20, v21, v22, v23, v24, v29, v30, SWORD2(v30), SBYTE6(v30), HIBYTE(v30));
    uint64_t v25 = (int *)type metadata accessor for WeatherData(0);
    uint64_t v26 = (uint64_t)v32 + v25[9];
    uint64_t v27 = type metadata accessor for WeatherDataOverrides();
    _s7Weather24LocationCompositionStateOwst_0(v26, 1, 1, v27);
    *uint64_t v32 = v31;
    v32[1] = v16;
    sub_1001278D0(v2, (uint64_t)v32 + v25[5], &qword_100E63730);
    sub_1001190D4();
    v28();
    sub_100A23964(v0, (uint64_t)v32 + v25[8], (void (*)(void))type metadata accessor for WeatherData.WeatherStatisticsState);
    sub_100A23964(v3, (uint64_t)v32 + v25[7], (void (*)(void))type metadata accessor for WeatherData.CachingState);
  }
  sub_100163164();
}

uint64_t sub_100A205E8(void *a1, void *a2)
{
  uint64_t v6 = type metadata accessor for WeatherData(0);
  sub_100162E4C();
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v38 - v11;
  uint64_t v13 = type metadata accessor for Locale();
  sub_100179C0C();
  uint64_t v45 = v14;
  __chkstk_darwin(v15);
  sub_10011C760();
  uint64_t v16 = sub_10017DF08(&qword_100E6A680);
  sub_100162E4C();
  __chkstk_darwin(v17);
  sub_10008B8C0();
  uint64_t v18 = sub_10017DF08(&qword_100E63730);
  uint64_t v19 = sub_100109308(v18);
  uint64_t v20 = __chkstk_darwin(v19);
  uint64_t v21 = __chkstk_darwin(v20);
  uint64_t v23 = (char *)&v38 - v22;
  __chkstk_darwin(v21);
  BOOL v26 = *a1 == *a2 && a1[1] == a2[1];
  if (!v26)
  {
    uint64_t v43 = v10;
    uint64_t v44 = (uint64_t)&v38 - v24;
    uint64_t v40 = v2;
    uint64_t v41 = v25;
    uint64_t v42 = v12;
    if ((_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
    {
      uint64_t v28 = *(int *)(v6 + 20);
      uint64_t v39 = a1;
      uint64_t v29 = v44;
      sub_1000F1540((uint64_t)a1 + v28, v44);
      uint64_t v30 = (uint64_t)a2;
      sub_1000F1540((uint64_t)a2 + *(int *)(v6 + 20), (uint64_t)v23);
      uint64_t v31 = (void (*)(void))(v3 + *(int *)(v16 + 48));
      sub_1000F1540(v29, v3);
      sub_1000F1540((uint64_t)v23, (uint64_t)v31);
      if (_s7Weather24LocationCompositionStateOwet_0(v3, 1, v13) == 1)
      {
        sub_100178110((uint64_t)v23, &qword_100E63730);
        sub_100178110(v29, &qword_100E63730);
        sub_100163F10((uint64_t)v31);
        if (!v26) {
          goto LABEL_14;
        }
        sub_100178110(v3, &qword_100E63730);
        uint64_t v32 = (uint64_t)v42;
        sub_10014FE48((uint64_t)v39, (uint64_t)v42, (void (*)(void))type metadata accessor for WeatherData);
        sub_100186D94(v30);
      }
      else
      {
        uint64_t v38 = a2;
        sub_1000F1540(v3, v41);
        sub_100163F10((uint64_t)v31);
        if (v26)
        {
          uint64_t v31 = (void (*)(void))&qword_100E63730;
          sub_100178110((uint64_t)v23, &qword_100E63730);
          sub_100178110(v44, &qword_100E63730);
          sub_100162F0C();
          v33();
          uint64_t v30 = (uint64_t)v38;
LABEL_14:
          sub_100178110(v3, &qword_100E6A680);
          uint64_t v32 = (uint64_t)v42;
          sub_10014FE48((uint64_t)v39, (uint64_t)v42, (void (*)(void))type metadata accessor for WeatherData);
          sub_100186D94(v30);
LABEL_17:
          char v27 = 0;
          goto LABEL_18;
        }
        uint64_t v34 = v45;
        sub_1001627D4();
        v35();
        sub_100A2391C(&qword_100E6A698, (void (*)(uint64_t))&type metadata accessor for Locale);
        char v36 = dispatch thunk of static Equatable.== infix(_:_:)();
        uint64_t v31 = *(void (**)(void))(v34 + 8);
        sub_100164F40();
        v31();
        sub_100178110((uint64_t)v23, &qword_100E63730);
        sub_100178110(v44, &qword_100E63730);
        sub_100164F40();
        v31();
        sub_100178110(v3, &qword_100E63730);
        uint64_t v32 = (uint64_t)v42;
        sub_10014FE48((uint64_t)v39, (uint64_t)v42, (void (*)(void))type metadata accessor for WeatherData);
        sub_100186D94((uint64_t)v38);
        if ((v36 & 1) == 0) {
          goto LABEL_17;
        }
      }
      char v27 = static WeatherDataModel.== infix(_:_:)();
LABEL_18:
      sub_1001BC288((uint64_t)v31, (void (*)(void))type metadata accessor for WeatherData);
      sub_1001BC288(v32, (void (*)(void))type metadata accessor for WeatherData);
      return v27 & 1;
    }
  }
  char v27 = 1;
  return v27 & 1;
}

uint64_t sub_100A20A94(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = type metadata accessor for Date();
  sub_100179C0C();
  uint64_t v8 = v7;
  __chkstk_darwin(v9);
  sub_1001626E0();
  uint64_t v10 = type metadata accessor for WeatherData.CachingState(0);
  uint64_t v11 = sub_100109308(v10);
  __chkstk_darwin(v11);
  sub_10012B938();
  uint64_t v12 = sub_10017DF08(&qword_100EA9990);
  uint64_t v13 = sub_100109308(v12);
  __chkstk_darwin(v13);
  sub_100162EB8();
  uint64_t v15 = v2 + *(int *)(v14 + 56);
  sub_10014FE48(a1, v2, (void (*)(void))type metadata accessor for WeatherData.CachingState);
  sub_10014FE48(a2, v15, (void (*)(void))type metadata accessor for WeatherData.CachingState);
  sub_10017DF08(&qword_100E63738);
  sub_100163F10(v2);
  if (!v17)
  {
    sub_10014FE48(v2, v3, (void (*)(void))type metadata accessor for WeatherData.CachingState);
    sub_100163F10(v15);
    if (!v17)
    {
      sub_1001627D4();
      v18();
      char v16 = static Date.== infix(_:_:)();
      uint64_t v19 = *(void (**)(void))(v8 + 8);
      sub_100164F40();
      v19();
      sub_100164F40();
      v19();
      sub_1001BC288(v2, (void (*)(void))type metadata accessor for WeatherData.CachingState);
      return v16 & 1;
    }
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v3, v6);
LABEL_9:
    sub_100178110(v2, &qword_100EA9990);
    char v16 = 0;
    return v16 & 1;
  }
  sub_100163F10(v15);
  if (!v17) {
    goto LABEL_9;
  }
  sub_1001BC288(v2, (void (*)(void))type metadata accessor for WeatherData.CachingState);
  char v16 = 1;
  return v16 & 1;
}

uint64_t sub_100A20CDC(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000015 && a2 == 0x8000000100CBA870)
  {
    swift_bridgeObjectRelease();
    char v2 = 0;
  }
  else
  {
    char v3 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    char v2 = v3 ^ 1;
  }
  return v2 & 1;
}

unint64_t sub_100A20D64()
{
  return 0xD000000000000015;
}

uint64_t sub_100A20D80(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6873657266 && a2 == 0xE500000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x646568636163 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v7) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_100A20E60(char a1)
{
  if (a1) {
    return 0x646568636163;
  }
  else {
    return 0x6873657266;
  }
}

uint64_t sub_100A20E90(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x64656C696166 && a2 == 0xE600000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x676E6964616F6CLL && a2 == 0xE700000000000000;
    if (v6 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x646564616F6CLL && a2 == 0xE600000000000000)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      char v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v8) {
        return 2;
      }
      else {
        return 3;
      }
    }
  }
}

uint64_t sub_100A20FD0(char a1)
{
  if (!a1) {
    return 0x64656C696166;
  }
  if (a1 == 1) {
    return 0x676E6964616F6CLL;
  }
  return 0x646564616F6CLL;
}

uint64_t sub_100A21024@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100A20CDC(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_100A21050(uint64_t a1)
{
  unint64_t v2 = sub_100A23A58();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100A2108C(uint64_t a1)
{
  unint64_t v2 = sub_100A23A58();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100A210C8()
{
  return sub_100A20E60(*v0);
}

uint64_t sub_100A210D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100A20D80(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100A210F8(uint64_t a1)
{
  unint64_t v2 = sub_100A23A0C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100A21134(uint64_t a1)
{
  unint64_t v2 = sub_100A23A0C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100A21170(uint64_t a1)
{
  unint64_t v2 = sub_100A23AA4();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100A211AC(uint64_t a1)
{
  unint64_t v2 = sub_100A23AA4();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100A211E8()
{
  return sub_100A20FD0(*v0);
}

uint64_t sub_100A211F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100A20E90(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100A21218(uint64_t a1)
{
  unint64_t v2 = sub_100A23AF0();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100A21254(uint64_t a1)
{
  unint64_t v2 = sub_100A23AF0();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100A21290(uint64_t a1)
{
  unint64_t v2 = sub_100A23BD4();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100A212CC(uint64_t a1)
{
  unint64_t v2 = sub_100A23BD4();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100A21308(uint64_t a1)
{
  unint64_t v2 = sub_100A23B3C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100A21344(uint64_t a1)
{
  unint64_t v2 = sub_100A23B3C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100A21380(uint64_t a1)
{
  unint64_t v2 = sub_100A23B88();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100A213BC(uint64_t a1)
{
  unint64_t v2 = sub_100A23B88();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100A213F8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x656C61636F6CLL && a2 == 0xE600000000000000;
    if (v6 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 1635017060 && a2 == 0xE400000000000000;
      if (v7 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        BOOL v8 = a1 == 0x53676E6968636163 && a2 == 0xEC00000065746174;
        if (v8 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else
        {
          BOOL v9 = a1 == 0x6974736974617473 && a2 == 0xEA00000000007363;
          if (v9 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 4;
          }
          else if (a1 == 0x656469727265766FLL && a2 == 0xE900000000000073)
          {
            swift_bridgeObjectRelease();
            return 5;
          }
          else
          {
            char v11 = _stringCompareWithSmolCheck(_:_:expecting:)();
            swift_bridgeObjectRelease();
            if (v11) {
              return 5;
            }
            else {
              return 6;
            }
          }
        }
      }
    }
  }
}

uint64_t sub_100A21684(char a1)
{
  uint64_t result = 0x696669746E656469;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x656C61636F6CLL;
      break;
    case 2:
      uint64_t result = 1635017060;
      break;
    case 3:
      uint64_t result = 0x53676E6968636163;
      break;
    case 4:
      uint64_t result = 0x6974736974617473;
      break;
    case 5:
      uint64_t result = 0x656469727265766FLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_100A21754()
{
  return sub_100A21684(*v0);
}

uint64_t sub_100A2175C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100A213F8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100A21784(uint64_t a1)
{
  unint64_t v2 = sub_100A239C0();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100A217C0(uint64_t a1)
{
  unint64_t v2 = sub_100A239C0();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100A21800(void *a1)
{
  sub_10017DF08(&qword_100EAA020);
  sub_100179C0C();
  __chkstk_darwin(v3);
  sub_10012B938();
  sub_1001B1E64(a1, a1[3]);
  sub_100A239C0();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  KeyedEncodingContainer.encode(_:forKey:)();
  if (!v1)
  {
    type metadata accessor for WeatherData(0);
    type metadata accessor for Locale();
    sub_100A2391C(&qword_100EA4550, (void (*)(uint64_t))&type metadata accessor for Locale);
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
    type metadata accessor for WeatherDataModel();
    sub_100A2391C((unint64_t *)&qword_100E89310, (void (*)(uint64_t))&type metadata accessor for WeatherDataModel);
    sub_10018A370();
    type metadata accessor for WeatherData.CachingState(0);
    sub_100A2391C(&qword_100EAA028, (void (*)(uint64_t))type metadata accessor for WeatherData.CachingState);
    sub_10018A370();
    type metadata accessor for WeatherData.WeatherStatisticsState(0);
    sub_100A2391C(&qword_100EAA030, (void (*)(uint64_t))type metadata accessor for WeatherData.WeatherStatisticsState);
    sub_10018A370();
    type metadata accessor for WeatherDataOverrides();
    sub_100A2391C(&qword_100EAA038, (void (*)(uint64_t))type metadata accessor for WeatherDataOverrides);
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
  }
  sub_100164F40();
  return v4();
}

void sub_100A21B24()
{
  sub_10016314C();
  uint64_t v4 = v3;
  uint64_t v23 = v5;
  uint64_t v6 = sub_10017DF08(&qword_100E63740);
  uint64_t v7 = sub_100109308(v6);
  __chkstk_darwin(v7);
  sub_100109314();
  uint64_t v24 = v8;
  type metadata accessor for WeatherData.WeatherStatisticsState(0);
  sub_100162E4C();
  __chkstk_darwin(v9);
  uint64_t v11 = sub_100181024(v10, v22);
  type metadata accessor for WeatherData.CachingState(v11);
  sub_100162E4C();
  __chkstk_darwin(v12);
  sub_100152344();
  type metadata accessor for WeatherDataModel();
  sub_100179C0C();
  __chkstk_darwin(v13);
  sub_10008B8C0();
  uint64_t v14 = sub_10017DF08(&qword_100E63730);
  uint64_t v15 = sub_100109308(v14);
  __chkstk_darwin(v15);
  sub_10011C760();
  sub_10017DF08(&qword_100EA9FF0);
  sub_100179C0C();
  __chkstk_darwin(v16);
  sub_100109370();
  BOOL v26 = (int *)type metadata accessor for WeatherData(0);
  sub_100162E4C();
  __chkstk_darwin(v17);
  sub_100109314();
  char v27 = v18;
  sub_1001B1E64(v4, v4[3]);
  sub_100A239C0();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v0)
  {
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v4);
  }
  else
  {
    *char v27 = KeyedDecodingContainer.decode(_:forKey:)();
    v27[1] = v19;
    type metadata accessor for Locale();
    sub_100A2391C(&qword_100EA4528, (void (*)(uint64_t))&type metadata accessor for Locale);
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    sub_1001278D0(v2, (uint64_t)v27 + v26[5], &qword_100E63730);
    sub_100A2391C(&qword_100EAA000, (void (*)(uint64_t))&type metadata accessor for WeatherDataModel);
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    sub_1001627D4();
    v20();
    sub_100A2391C(&qword_100EAA008, (void (*)(uint64_t))type metadata accessor for WeatherData.CachingState);
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    sub_100A23964(v1, (uint64_t)v27 + v26[7], (void (*)(void))type metadata accessor for WeatherData.CachingState);
    sub_100A2391C(&qword_100EAA010, (void (*)(uint64_t))type metadata accessor for WeatherData.WeatherStatisticsState);
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    sub_100A23964(v25, (uint64_t)v27 + v26[8], (void (*)(void))type metadata accessor for WeatherData.WeatherStatisticsState);
    type metadata accessor for WeatherDataOverrides();
    sub_100A2391C(&qword_100EAA018, (void (*)(uint64_t))type metadata accessor for WeatherDataOverrides);
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    sub_100163348();
    v21();
    sub_1001278D0(v24, (uint64_t)v27 + v26[9], &qword_100E63740);
    sub_10014FE48((uint64_t)v27, v23, (void (*)(void))type metadata accessor for WeatherData);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v4);
    sub_1001BC288((uint64_t)v27, (void (*)(void))type metadata accessor for WeatherData);
  }
  sub_100163164();
}

void sub_100A221E0()
{
  sub_10016314C();
  uint64_t v22 = v0;
  uint64_t v3 = v2;
  sub_10017DF08(&qword_100EAA070);
  sub_100179C0C();
  __chkstk_darwin(v4);
  sub_100109314();
  type metadata accessor for Date();
  sub_100179C0C();
  uint64_t v20 = v6;
  uint64_t v21 = v5;
  __chkstk_darwin(v5);
  sub_10017E32C(v7, v19);
  sub_10017DF08(&qword_100EAA078);
  sub_100179C0C();
  __chkstk_darwin(v8);
  uint64_t v9 = sub_100152344();
  uint64_t v10 = type metadata accessor for WeatherData.CachingState(v9);
  uint64_t v11 = sub_100109308(v10);
  __chkstk_darwin(v11);
  sub_10008B8C0();
  sub_10017DF08(&qword_100EAA080);
  sub_100179C0C();
  __chkstk_darwin(v12);
  sub_100162F18();
  sub_1001B1E64(v3, v3[3]);
  sub_100A23A0C();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  sub_10014FE48(v22, v1, (void (*)(void))type metadata accessor for WeatherData.CachingState);
  uint64_t v13 = sub_10017DF08(&qword_100E63738);
  if (_s7Weather24LocationCompositionStateOwet_0(v1, 1, v13) == 1)
  {
    sub_100A23AA4();
    KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
    sub_100163348();
    v14();
  }
  else
  {
    sub_1001627D4();
    v17();
    sub_100A23A58();
    KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
    sub_100A2391C(&qword_100E63968, (void (*)(uint64_t))&type metadata accessor for Date);
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    sub_100162F0C();
    v18();
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v23, v21);
  }
  uint64_t v15 = sub_100188C68();
  v16(v15);
  sub_100163164();
}

void sub_100A22518()
{
  sub_10016314C();
  uint64_t v50 = v0;
  uint64_t v4 = v3;
  uint64_t v47 = v5;
  sub_10017DF08(&qword_100EAA040);
  sub_100179C0C();
  uint64_t v45 = v7;
  uint64_t v46 = v6;
  __chkstk_darwin(v6);
  sub_10017E32C(v8, v40);
  sub_10017DF08(&qword_100EAA048);
  sub_100179C0C();
  uint64_t v43 = v10;
  uint64_t v44 = v9;
  __chkstk_darwin(v9);
  sub_100109314();
  uint64_t v48 = v11;
  uint64_t v12 = sub_10017DF08(&qword_100EAA050);
  sub_100179C0C();
  uint64_t v49 = v13;
  __chkstk_darwin(v14);
  sub_10011C760();
  uint64_t v15 = type metadata accessor for WeatherData.CachingState(0);
  sub_100162E4C();
  __chkstk_darwin(v16);
  sub_100162824();
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)&v40 - v18;
  sub_1001B1E64(v4, v4[3]);
  sub_100A23A0C();
  uint64_t v20 = v50;
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v20) {
    goto LABEL_8;
  }
  uint64_t v41 = v1;
  uint64_t v42 = v19;
  uint64_t v50 = v4;
  uint64_t v21 = KeyedDecodingContainer.allKeys.getter();
  uint64_t v22 = *(void *)(v21 + 16);
  if (!v22
    || (char v51 = *(unsigned char *)(v21 + 32),
        sub_100723214(1, v22, v21, v21 + 32, 0, (2 * v22) | 1),
        uint64_t v24 = v23,
        unint64_t v26 = v25,
        swift_bridgeObjectRelease(),
        v24 != v26 >> 1))
  {
    uint64_t v27 = v49;
    uint64_t v28 = type metadata accessor for DecodingError();
    swift_allocError();
    uint64_t v30 = v29;
    sub_10017DF08(&qword_100E67280);
    *uint64_t v30 = v15;
    KeyedDecodingContainer.codingPath.getter();
    DecodingError.Context.init(codingPath:debugDescription:underlyingError:)();
    (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v28 - 8) + 104))(v30, enum case for DecodingError.typeMismatch(_:), v28);
    swift_willThrow();
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v2, v12);
    uint64_t v4 = v50;
LABEL_8:
    uint64_t v31 = (uint64_t)v4;
    goto LABEL_9;
  }
  if (v51)
  {
    sub_100A23A58();
    sub_10017F690();
    type metadata accessor for Date();
    sub_100A2391C(&qword_100E63948, (void (*)(uint64_t))&type metadata accessor for Date);
    uint64_t v32 = v41;
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    sub_100162F0C();
    v36();
    swift_unknownObjectRelease();
    sub_100163348();
    v37();
    uint64_t v38 = sub_10017DF08(&qword_100E63738);
    _s7Weather24LocationCompositionStateOwst_0(v32, 0, 1, v38);
    uint64_t v39 = (uint64_t)v42;
    sub_100A23964(v32, (uint64_t)v42, (void (*)(void))type metadata accessor for WeatherData.CachingState);
  }
  else
  {
    sub_100A23AA4();
    sub_10017F690();
    sub_100162F0C();
    v33();
    swift_unknownObjectRelease();
    sub_100162F0C();
    v34();
    uint64_t v35 = sub_10017DF08(&qword_100E63738);
    uint64_t v39 = (uint64_t)v42;
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v42, 1, 1, v35);
  }
  sub_100A23964(v39, v47, (void (*)(void))type metadata accessor for WeatherData.CachingState);
  uint64_t v31 = (uint64_t)v50;
LABEL_9:
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v31);
  sub_100163164();
}

void sub_100A22A5C()
{
  sub_10016314C();
  uint64_t v20 = v0;
  uint64_t v3 = v2;
  sub_10017DF08(&qword_100EAA0D0);
  sub_100179C0C();
  __chkstk_darwin(v4);
  sub_100181024(v5, v19);
  type metadata accessor for WeatherStatisticsModel();
  sub_100179C0C();
  __chkstk_darwin(v6);
  sub_100109314();
  sub_10017DF08(&qword_100EAA0D8);
  sub_100179C0C();
  __chkstk_darwin(v7);
  sub_10008B8C0();
  sub_10017DF08(&qword_100EAA0E0);
  sub_100179C0C();
  __chkstk_darwin(v8);
  sub_1001626E0();
  type metadata accessor for WeatherData.WeatherStatisticsState(0);
  sub_100162E4C();
  __chkstk_darwin(v9);
  sub_100109370();
  sub_10017DF08(&qword_100EAA0E8);
  sub_100179C0C();
  __chkstk_darwin(v10);
  sub_10011C760();
  sub_1001B1E64(v3, v3[3]);
  sub_100A23AF0();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  sub_10014FE48(v20, v1, (void (*)(void))type metadata accessor for WeatherData.WeatherStatisticsState);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      sub_1001627D4();
      v12();
      sub_100A23B3C();
      KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      sub_100A2391C(&qword_100EAA0F0, (void (*)(uint64_t))&type metadata accessor for WeatherStatisticsModel);
      KeyedEncodingContainer.encode<A>(_:forKey:)();
      sub_100162F0C();
      v13();
      sub_100164F40();
      v14();
      sub_10018711C();
    }
    else
    {
      sub_100A23B88();
      KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      sub_100162F0C();
      v18();
    }
    sub_100162F0C();
    v15();
  }
  else
  {
    sub_100A23BD4();
    KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
    KeyedEncodingContainer.encode(_:forKey:)();
    swift_bridgeObjectRelease();
    sub_100162F0C();
    v16();
    sub_10018711C();
    sub_100162F0C();
    v17();
  }
  sub_100163164();
}

void sub_100A22E78()
{
  sub_10016314C();
  uint64_t v74 = v0;
  uint64_t v4 = v3;
  uint64_t v69 = v5;
  uint64_t v68 = sub_10017DF08(&qword_100EAA088);
  sub_100179C0C();
  uint64_t v64 = v6;
  __chkstk_darwin(v7);
  sub_10017E32C(v8, v58);
  uint64_t v67 = sub_10017DF08(&qword_100EAA090);
  sub_100179C0C();
  uint64_t v65 = v9;
  __chkstk_darwin(v10);
  sub_100109314();
  uint64_t v71 = v11;
  uint64_t v66 = sub_10017DF08(&qword_100EAA098);
  sub_100179C0C();
  uint64_t v63 = v12;
  __chkstk_darwin(v13);
  sub_100109314();
  uint64_t v70 = v14;
  sub_10017DF08(&qword_100EAA0A0);
  sub_100179C0C();
  uint64_t v72 = v16;
  uint64_t v73 = v15;
  __chkstk_darwin(v15);
  sub_100162F18();
  uint64_t v17 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
  sub_100162E4C();
  __chkstk_darwin(v18);
  sub_100162824();
  __chkstk_darwin(v19);
  uint64_t v21 = (uint64_t *)((char *)&v58 - v20);
  __chkstk_darwin(v22);
  uint64_t v24 = (char *)&v58 - v23;
  sub_1001B1E64(v4, v4[3]);
  sub_100A23AF0();
  unint64_t v25 = v74;
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (!v25)
  {
    int v59 = v21;
    uint64_t v60 = v1;
    uint64_t v26 = v73;
    uint64_t v61 = v24;
    uint64_t v62 = v17;
    uint64_t v74 = v4;
    uint64_t v27 = v2;
    uint64_t v28 = KeyedDecodingContainer.allKeys.getter();
    uint64_t v29 = *(void *)(v28 + 16);
    if (v29)
    {
      uint64_t v30 = v2;
      uint64_t v31 = v26;
      int v32 = *(unsigned __int8 *)(v28 + 32);
      sub_100723214(1, v29, v28, v28 + 32, 0, (2 * v29) | 1);
      uint64_t v34 = v33;
      unint64_t v36 = v35;
      swift_bridgeObjectRelease();
      if (v34 == v36 >> 1)
      {
        if (v32)
        {
          if (v32 == 1)
          {
            sub_100A23B88();
            sub_10019B768();
            sub_100162F0C();
            v43();
            swift_unknownObjectRelease();
            sub_10018330C();
            sub_100162F0C();
            v44();
            uint64_t v45 = (uint64_t)v61;
            swift_storeEnumTagMultiPayload();
LABEL_15:
            sub_100A23964(v45, v69, (void (*)(void))type metadata accessor for WeatherData.WeatherStatisticsState);
            uint64_t v42 = (uint64_t)v74;
            goto LABEL_13;
          }
          sub_100A23B3C();
          sub_10019B768();
          type metadata accessor for WeatherStatisticsModel();
          sub_100A2391C(&qword_100EAA0B8, (void (*)(uint64_t))&type metadata accessor for WeatherStatisticsModel);
          uint64_t v47 = v60;
          KeyedDecodingContainer.decode<A>(_:forKey:)();
          sub_100162F0C();
          v55();
          swift_unknownObjectRelease();
          uint64_t v56 = sub_1001A2F50();
          v57(v56);
          swift_storeEnumTagMultiPayload();
          uint64_t v54 = v47;
        }
        else
        {
          sub_100A23BD4();
          KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
          uint64_t v46 = KeyedDecodingContainer.decode(_:forKey:)();
          uint64_t v49 = v48;
          sub_100162F0C();
          v50();
          swift_unknownObjectRelease();
          uint64_t v51 = sub_10018A108();
          v52(v51);
          uint64_t v53 = v59;
          *int v59 = v46;
          v53[1] = v49;
          swift_storeEnumTagMultiPayload();
          uint64_t v54 = (uint64_t)v53;
        }
        uint64_t v45 = (uint64_t)v61;
        sub_100A23964(v54, (uint64_t)v61, (void (*)(void))type metadata accessor for WeatherData.WeatherStatisticsState);
        goto LABEL_15;
      }
      uint64_t v37 = v72;
      uint64_t v26 = v31;
      uint64_t v27 = v30;
    }
    else
    {
      uint64_t v37 = v72;
    }
    uint64_t v38 = v62;
    uint64_t v39 = type metadata accessor for DecodingError();
    swift_allocError();
    uint64_t v41 = v40;
    sub_10017DF08(&qword_100E67280);
    *uint64_t v41 = v38;
    KeyedDecodingContainer.codingPath.getter();
    DecodingError.Context.init(codingPath:debugDescription:underlyingError:)();
    (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v39 - 8) + 104))(v41, enum case for DecodingError.typeMismatch(_:), v39);
    swift_willThrow();
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v27, v26);
    uint64_t v4 = v74;
  }
  uint64_t v42 = (uint64_t)v4;
LABEL_13:
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v42);
  sub_100163164();
}

void sub_100A23510()
{
}

uint64_t sub_100A23528(void *a1)
{
  return sub_100A21800(a1);
}

void sub_100A23540()
{
}

void sub_100A23558()
{
}

void sub_100A23570()
{
}

void sub_100A23588()
{
}

void sub_100A235A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_1008C6248(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8, SWORD2(vars8), SBYTE6(vars8), HIBYTE(vars8));
}

void sub_100A235B8()
{
}

void sub_100A235D0()
{
}

void sub_100A235E8()
{
}

void sub_100A23600()
{
}

void sub_100A23618()
{
}

uint64_t sub_100A23630@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = v1;
  type metadata accessor for WeatherData.WeatherStatisticsState(0);
  sub_100162E4C();
  __chkstk_darwin(v5);
  sub_1001626E0();
  uint64_t v8 = (uint64_t *)(v7 - v6);
  uint64_t v9 = sub_10017DF08(&qword_100EAA0F8);
  sub_100179C0C();
  uint64_t v11 = v10;
  __chkstk_darwin(v12);
  sub_10012B938();
  sub_10014FE48(v3, (uint64_t)v8, (void (*)(void))type metadata accessor for WeatherData.WeatherStatisticsState);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    uint64_t v15 = *v8;
    uint64_t v14 = v8[1];
    sub_10017DF08(&qword_100E635E0);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_100C251B0;
    *(void *)(inited + 32) = 0x726F727265;
    *(void *)(inited + 40) = 0xE500000000000000;
    *(void *)(inited + 72) = &type metadata for String;
    *(void *)(inited + 48) = v15;
    *(void *)(inited + 56) = v14;
    Dictionary.init(dictionaryLiteral:)();
LABEL_6:
    ShortDescription.init(name:_:)();
    goto LABEL_7;
  }
  if (EnumCaseMultiPayload != 1)
  {
    Dictionary.init(dictionaryLiteral:)();
    sub_100166DD8();
    goto LABEL_6;
  }
  Dictionary.init(dictionaryLiteral:)();
  sub_100166DD8();
  ShortDescription.init(name:_:)();
  sub_1001BC288((uint64_t)v8, (void (*)(void))type metadata accessor for WeatherData.WeatherStatisticsState);
LABEL_7:
  a1[3] = v9;
  a1[4] = sub_100A23C20();
  uint64_t v17 = sub_100170694(a1);
  return (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v11 + 32))(v17, v2, v9);
}

uint64_t sub_100A23868()
{
  sub_100A2391C(&qword_100EAA108, (void (*)(uint64_t))type metadata accessor for WeatherData.WeatherStatisticsState);

  return ShortDescribable.description.getter();
}

uint64_t sub_100A238D4()
{
  return sub_100A2391C(&qword_100EA9FE8, (void (*)(uint64_t))type metadata accessor for WeatherData.WeatherStatisticsState);
}

uint64_t sub_100A2391C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100A23964(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  sub_1001190D4();
  v4();
  return a2;
}

unint64_t sub_100A239C0()
{
  unint64_t result = qword_100EA9FF8;
  if (!qword_100EA9FF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA9FF8);
  }
  return result;
}

unint64_t sub_100A23A0C()
{
  unint64_t result = qword_100EAA058;
  if (!qword_100EAA058)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAA058);
  }
  return result;
}

unint64_t sub_100A23A58()
{
  unint64_t result = qword_100EAA060;
  if (!qword_100EAA060)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAA060);
  }
  return result;
}

unint64_t sub_100A23AA4()
{
  unint64_t result = qword_100EAA068;
  if (!qword_100EAA068)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAA068);
  }
  return result;
}

unint64_t sub_100A23AF0()
{
  unint64_t result = qword_100EAA0A8;
  if (!qword_100EAA0A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAA0A8);
  }
  return result;
}

unint64_t sub_100A23B3C()
{
  unint64_t result = qword_100EAA0B0;
  if (!qword_100EAA0B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAA0B0);
  }
  return result;
}

unint64_t sub_100A23B88()
{
  unint64_t result = qword_100EAA0C0;
  if (!qword_100EAA0C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAA0C0);
  }
  return result;
}

unint64_t sub_100A23BD4()
{
  unint64_t result = qword_100EAA0C8;
  if (!qword_100EAA0C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAA0C8);
  }
  return result;
}

unint64_t sub_100A23C20()
{
  unint64_t result = qword_100EAA100;
  if (!qword_100EAA100)
  {
    sub_10018C6DC(&qword_100EAA0F8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAA100);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for WeatherData.WeatherStatisticsState.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100A23D40);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WeatherData.WeatherStatisticsState.CodingKeys()
{
  return &type metadata for WeatherData.WeatherStatisticsState.CodingKeys;
}

ValueMetadata *type metadata accessor for WeatherData.WeatherStatisticsState.FailedCodingKeys()
{
  return &type metadata for WeatherData.WeatherStatisticsState.FailedCodingKeys;
}

ValueMetadata *type metadata accessor for WeatherData.WeatherStatisticsState.LoadingCodingKeys()
{
  return &type metadata for WeatherData.WeatherStatisticsState.LoadingCodingKeys;
}

ValueMetadata *type metadata accessor for WeatherData.WeatherStatisticsState.LoadedCodingKeys()
{
  return &type metadata for WeatherData.WeatherStatisticsState.LoadedCodingKeys;
}

unsigned char *storeEnumTagSinglePayload for WeatherData.CachingState.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100A23E78);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WeatherData.CachingState.CodingKeys()
{
  return &type metadata for WeatherData.CachingState.CodingKeys;
}

ValueMetadata *type metadata accessor for WeatherData.CachingState.FreshCodingKeys()
{
  return &type metadata for WeatherData.CachingState.FreshCodingKeys;
}

unsigned char *_s7Weather11WeatherDataV22WeatherStatisticsStateO16FailedCodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x100A23F5CLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for WeatherData.CachingState.CachedCodingKeys()
{
  return &type metadata for WeatherData.CachingState.CachedCodingKeys;
}

unsigned char *storeEnumTagSinglePayload for WeatherData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100A24060);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WeatherData.CodingKeys()
{
  return &type metadata for WeatherData.CodingKeys;
}

unint64_t sub_100A2409C()
{
  unint64_t result = qword_100EAA110;
  if (!qword_100EAA110)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAA110);
  }
  return result;
}

unint64_t sub_100A240EC()
{
  unint64_t result = qword_100EAA118;
  if (!qword_100EAA118)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAA118);
  }
  return result;
}

unint64_t sub_100A2413C()
{
  unint64_t result = qword_100EAA120;
  if (!qword_100EAA120)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAA120);
  }
  return result;
}

unint64_t sub_100A2418C()
{
  unint64_t result = qword_100EAA128;
  if (!qword_100EAA128)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAA128);
  }
  return result;
}

unint64_t sub_100A241DC()
{
  unint64_t result = qword_100EAA130;
  if (!qword_100EAA130)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAA130);
  }
  return result;
}

unint64_t sub_100A2422C()
{
  unint64_t result = qword_100EAA138;
  if (!qword_100EAA138)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAA138);
  }
  return result;
}

unint64_t sub_100A2427C()
{
  unint64_t result = qword_100EAA140;
  if (!qword_100EAA140)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAA140);
  }
  return result;
}

unint64_t sub_100A242CC()
{
  unint64_t result = qword_100EAA148;
  if (!qword_100EAA148)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAA148);
  }
  return result;
}

unint64_t sub_100A2431C()
{
  unint64_t result = qword_100EAA150;
  if (!qword_100EAA150)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAA150);
  }
  return result;
}

unint64_t sub_100A2436C()
{
  unint64_t result = qword_100EAA158;
  if (!qword_100EAA158)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAA158);
  }
  return result;
}

unint64_t sub_100A243BC()
{
  unint64_t result = qword_100EAA160;
  if (!qword_100EAA160)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAA160);
  }
  return result;
}

unint64_t sub_100A2440C()
{
  unint64_t result = qword_100EAA168;
  if (!qword_100EAA168)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAA168);
  }
  return result;
}

unint64_t sub_100A2445C()
{
  unint64_t result = qword_100EAA170;
  if (!qword_100EAA170)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAA170);
  }
  return result;
}

unint64_t sub_100A244AC()
{
  unint64_t result = qword_100EAA178;
  if (!qword_100EAA178)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAA178);
  }
  return result;
}

unint64_t sub_100A244FC()
{
  unint64_t result = qword_100EAA180;
  if (!qword_100EAA180)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAA180);
  }
  return result;
}

unint64_t sub_100A2454C()
{
  unint64_t result = qword_100EAA188;
  if (!qword_100EAA188)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAA188);
  }
  return result;
}

unint64_t sub_100A2459C()
{
  unint64_t result = qword_100EAA190;
  if (!qword_100EAA190)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAA190);
  }
  return result;
}

unint64_t sub_100A245EC()
{
  unint64_t result = qword_100EAA198;
  if (!qword_100EAA198)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAA198);
  }
  return result;
}

unint64_t sub_100A2463C()
{
  unint64_t result = qword_100EAA1A0;
  if (!qword_100EAA1A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAA1A0);
  }
  return result;
}

unint64_t sub_100A2468C()
{
  unint64_t result = qword_100EAA1A8;
  if (!qword_100EAA1A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAA1A8);
  }
  return result;
}

unint64_t sub_100A246DC()
{
  unint64_t result = qword_100EAA1B0;
  if (!qword_100EAA1B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAA1B0);
  }
  return result;
}

unint64_t sub_100A2472C()
{
  unint64_t result = qword_100EAA1B8[0];
  if (!qword_100EAA1B8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_100EAA1B8);
  }
  return result;
}

uint64_t sub_100A24778(uint64_t a1, uint64_t a2)
{
  char v4 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v4;
  swift_release();
  *(unsigned char *)(a1 + 9) = *(unsigned char *)(a2 + 9);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_release();
  return a1;
}

unsigned char *storeEnumTagSinglePayload for WireframedContentStyle(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100A2489CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

uint64_t sub_100A248C4()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_100A249F4()
{
  unint64_t result = qword_100EAA240;
  if (!qword_100EAA240)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAA240);
  }
  return result;
}

unsigned char *sub_100A24A40(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_100A24BA0((uint64_t)a1);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 4:
        uint64_t v9 = type metadata accessor for Date();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
        break;
      case 3:
        *(void *)a1 = *(void *)a2;
        a1[8] = a2[8];
        swift_bridgeObjectRetain();
        break;
      case 2:
        uint64_t v7 = type metadata accessor for Location();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
        uint64_t v8 = sub_10017DF08(&qword_100E6BBD8);
        a1[*(int *)(v8 + 48)] = a2[*(int *)(v8 + 48)];
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        return a1;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_100A24BA0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for NotificationsOptInAction();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void *sub_100A24BFC(void *a1, const void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 4)
  {
    uint64_t v9 = type metadata accessor for Date();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v9 - 8) + 32))(a1, a2, v9);
  }
  else
  {
    if (EnumCaseMultiPayload != 2)
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      return a1;
    }
    uint64_t v7 = type metadata accessor for Location();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    uint64_t v8 = sub_10017DF08(&qword_100E6BBD8);
    *((unsigned char *)a1 + *(int *)(v8 + 48)) = *((unsigned char *)a2 + *(int *)(v8 + 48));
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *sub_100A24D20(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_100A24BA0((uint64_t)a1);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 4)
    {
      uint64_t v9 = type metadata accessor for Date();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v9 - 8) + 32))(a1, a2, v9);
    }
    else
    {
      if (EnumCaseMultiPayload != 2)
      {
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        return a1;
      }
      uint64_t v7 = type metadata accessor for Location();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      uint64_t v8 = sub_10017DF08(&qword_100E6BBD8);
      *((unsigned char *)a1 + *(int *)(v8 + 48)) = *((unsigned char *)a2 + *(int *)(v8 + 48));
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_100A24E94()
{
  sub_10021D008(qword_100EAA2F8);

  return ShortDescribable.description.getter();
}

uint64_t sub_100A24EEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char *a7@<X8>)
{
  *(void *)a7 = a1;
  *((void *)a7 + 1) = a2;
  uint64_t v12 = type metadata accessor for StatePersistenceData();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(a5 - 8) + 32))(&a7[*(int *)(v12 + 68)], a3, a5);
  return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(a6 - 8) + 32))(&a7[*(int *)(v12 + 72)], a4, a6);
}

void sub_100A24FC8()
{
}

uint64_t sub_100A24FF0()
{
  return sub_1008C3374();
}

uint64_t *sub_100A25008(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v4 = *(void *)(a3 + 24);
  uint64_t v6 = *(void *)(v5 - 8);
  unint64_t v7 = *(_DWORD *)(v6 + 80);
  uint64_t v8 = *(void *)(v6 + 64);
  uint64_t v9 = *(void *)(v4 - 8);
  int v10 = *(_DWORD *)(v9 + 80);
  uint64_t v11 = v10;
  if ((v10 | v7) > 7
    || ((v10 | *(_DWORD *)(v6 + 80)) & 0x100000) != 0
    || ((v8 + v10 + ((v7 + 16) & ~v7)) & ~(unint64_t)v10)
     + *(void *)(*(void *)(v4 - 8) + 64) > 0x18)
  {
    uint64_t v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14
                   + (((v10 | v7) & 0xF8 ^ 0x1F8) & ((v10 | v7) + 16)));
    swift_retain();
  }
  else
  {
    uint64_t v15 = a2[1];
    *a1 = *a2;
    a1[1] = v15;
    uint64_t v16 = ((unint64_t)a1 + v7 + 16) & ~v7;
    uint64_t v17 = ((unint64_t)a2 + v7 + 16) & ~v7;
    uint64_t v18 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
    uint64_t v20 = v4;
    swift_bridgeObjectRetain();
    v18(v16, v17, v5);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))((v16 + v8 + v11) & ~v11, (v17 + v8 + v11) & ~v11, v20);
  }
  return a1;
}

uint64_t sub_100A251BC(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v5 = v4 + 8;
  unint64_t v6 = (a1 + *(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  (*(void (**)(unint64_t))(v4 + 8))(v6);
  uint64_t v7 = *(void *)(*(void *)(a2 + 24) - 8);
  uint64_t v8 = *(uint64_t (**)(unint64_t))(v7 + 8);
  unint64_t v9 = (v6 + *(void *)(v5 + 56) + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);

  return v8(v9);
}

void *sub_100A2527C(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  uint64_t v6 = *(void *)(a3 + 16);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  uint64_t v8 = *(void *)(v6 - 8) + 16;
  uint64_t v9 = *(unsigned __int8 *)(*(void *)(v6 - 8) + 80);
  uint64_t v10 = ((unint64_t)a1 + v9 + 16) & ~v9;
  uint64_t v11 = ((unint64_t)a2 + v9 + 16) & ~v9;
  swift_bridgeObjectRetain();
  v7(v10, v11, v6);
  uint64_t v12 = *(void *)(*(void *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v12 + 16))((*(void *)(v8 + 48) + *(unsigned __int8 *)(v12 + 80) + v10) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80), (*(void *)(v8 + 48) + *(unsigned __int8 *)(v12 + 80) + v11) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
  return a1;
}

void *sub_100A25360(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v7 = v6 + 24;
  uint64_t v8 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v9 = ((unint64_t)a1 + v8 + 16) & ~v8;
  uint64_t v10 = ((unint64_t)a2 + v8 + 16) & ~v8;
  (*(void (**)(uint64_t, uint64_t))(v6 + 24))(v9, v10);
  uint64_t v11 = *(void *)(*(void *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v11 + 24))((*(void *)(v7 + 40) + *(unsigned __int8 *)(v11 + 80) + v9) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80), (*(void *)(v7 + 40) + *(unsigned __int8 *)(v11 + 80) + v10) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
  return a1;
}

_OWORD *sub_100A25450(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = v5 + 32;
  uint64_t v7 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v8 = ((unint64_t)a1 + v7 + 16) & ~v7;
  uint64_t v9 = ((unint64_t)a2 + v7 + 16) & ~v7;
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(v8, v9);
  uint64_t v10 = *(void *)(*(void *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v10 + 32))((*(void *)(v6 + 32) + *(unsigned __int8 *)(v10 + 80) + v8) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80), (*(void *)(v6 + 32) + *(unsigned __int8 *)(v10 + 80) + v9) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
  return a1;
}

void *sub_100A25524(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v8 = v7 + 40;
  uint64_t v9 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v10 = ((unint64_t)a1 + v9 + 16) & ~v9;
  uint64_t v11 = ((unint64_t)a2 + v9 + 16) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v7 + 40))(v10, v11);
  uint64_t v12 = *(void *)(*(void *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v12 + 40))((*(void *)(v8 + 24) + *(unsigned __int8 *)(v12 + 80) + v10) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80), (*(void *)(v8 + 24) + *(unsigned __int8 *)(v12 + 80) + v11) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
  return a1;
}

uint64_t sub_100A25604(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned int *)(v6 + 84);
  uint64_t v8 = *(void *)(a3 + 24);
  uint64_t v9 = *(void *)(v8 - 8);
  if (v7 <= *(_DWORD *)(v9 + 84)) {
    unsigned int v10 = *(_DWORD *)(v9 + 84);
  }
  else {
    unsigned int v10 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v11 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v12 = *(void *)(*(void *)(v5 - 8) + 64);
  uint64_t v13 = *(unsigned __int8 *)(v9 + 80);
  if (v10 <= 0x7FFFFFFF) {
    unsigned int v14 = 0x7FFFFFFF;
  }
  else {
    unsigned int v14 = v10;
  }
  if (!a2) {
    return 0;
  }
  int v15 = a2 - v14;
  if (a2 <= v14) {
    goto LABEL_28;
  }
  uint64_t v16 = ((v12 + v13 + ((v11 + 16) & ~v11)) & ~v13) + *(void *)(*(void *)(v8 - 8) + 64);
  char v17 = 8 * v16;
  if (v16 <= 3)
  {
    unsigned int v20 = ((v15 + ~(-1 << v17)) >> v17) + 1;
    if (HIWORD(v20))
    {
      int v18 = *(_DWORD *)((char *)a1 + v16);
      if (!v18) {
        goto LABEL_28;
      }
      goto LABEL_18;
    }
    if (v20 > 0xFF)
    {
      int v18 = *(unsigned __int16 *)((char *)a1 + v16);
      if (!*(unsigned __int16 *)((char *)a1 + v16)) {
        goto LABEL_28;
      }
      goto LABEL_18;
    }
    if (v20 < 2)
    {
LABEL_28:
      if ((v10 & 0x80000000) != 0)
      {
        uint64_t v25 = ((unint64_t)a1 + v11 + 16) & ~v11;
        if (v7 != v14)
        {
          uint64_t v25 = (v25 + v12 + v13) & ~v13;
          uint64_t v7 = *(unsigned int *)(v9 + 84);
          uint64_t v5 = v8;
        }
        return _s7Weather24LocationCompositionStateOwet_0(v25, v7, v5);
      }
      else
      {
        unint64_t v24 = *((void *)a1 + 1);
        if (v24 >= 0xFFFFFFFF) {
          LODWORD(v24) = -1;
        }
        return (v24 + 1);
      }
    }
  }
  int v18 = *((unsigned __int8 *)a1 + v16);
  if (!*((unsigned char *)a1 + v16)) {
    goto LABEL_28;
  }
LABEL_18:
  int v21 = (v18 - 1) << v17;
  if (v16 > 3) {
    int v21 = 0;
  }
  if (v16)
  {
    if (v16 <= 3) {
      int v22 = v16;
    }
    else {
      int v22 = 4;
    }
    switch(v22)
    {
      case 2:
        int v23 = *a1;
        break;
      case 3:
        int v23 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        int v23 = *(_DWORD *)a1;
        break;
      default:
        int v23 = *(unsigned __int8 *)a1;
        break;
    }
  }
  else
  {
    int v23 = 0;
  }
  return v14 + (v23 | v21) + 1;
}

void sub_100A25828(char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v7 = *(void *)(a4 + 16);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(a4 + 24);
  uint64_t v10 = *(unsigned int *)(v8 + 84);
  uint64_t v11 = *(void *)(v9 - 8);
  uint64_t v12 = *(unsigned int *)(v11 + 84);
  if (v10 <= v12) {
    unsigned int v13 = *(_DWORD *)(v11 + 84);
  }
  else {
    unsigned int v13 = *(_DWORD *)(v8 + 84);
  }
  if (v13 <= 0x7FFFFFFF) {
    unsigned int v14 = 0x7FFFFFFF;
  }
  else {
    unsigned int v14 = v13;
  }
  uint64_t v15 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v16 = *(void *)(*(void *)(v7 - 8) + 64);
  uint64_t v17 = *(unsigned __int8 *)(v11 + 80);
  size_t v18 = ((v16 + v17 + ((v15 + 16) & ~v15)) & ~v17) + *(void *)(*(void *)(v9 - 8) + 64);
  char v19 = 8 * v18;
  BOOL v20 = a3 >= v14;
  unsigned int v21 = a3 - v14;
  if (v21 != 0 && v20)
  {
    if (v18 <= 3)
    {
      unsigned int v25 = ((v21 + ~(-1 << v19)) >> v19) + 1;
      if (HIWORD(v25))
      {
        int v22 = 4;
      }
      else if (v25 >= 0x100)
      {
        int v22 = 2;
      }
      else
      {
        int v22 = v25 > 1;
      }
    }
    else
    {
      int v22 = 1;
    }
  }
  else
  {
    int v22 = 0;
  }
  if (v14 < a2)
  {
    unsigned int v23 = ~v14 + a2;
    if (v18 < 4)
    {
      int v24 = (v23 >> v19) + 1;
      if (v18)
      {
        int v26 = v23 & ~(-1 << v19);
        bzero(a1, v18);
        if (v18 == 3)
        {
          *(_WORD *)a1 = v26;
          a1[2] = BYTE2(v26);
        }
        else if (v18 == 2)
        {
          *(_WORD *)a1 = v26;
        }
        else
        {
          *a1 = v26;
        }
      }
    }
    else
    {
      bzero(a1, v18);
      *(_DWORD *)a1 = v23;
      int v24 = 1;
    }
    switch(v22)
    {
      case 1:
        a1[v18] = v24;
        return;
      case 2:
        *(_WORD *)&a1[v18] = v24;
        return;
      case 3:
        goto LABEL_46;
      case 4:
        *(_DWORD *)&a1[v18] = v24;
        return;
      default:
        return;
    }
  }
  switch(v22)
  {
    case 1:
      a1[v18] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_27;
    case 2:
      *(_WORD *)&a1[v18] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_27;
    case 3:
LABEL_46:
      __break(1u);
      JUMPOUT(0x100A25B00);
    case 4:
      *(_DWORD *)&a1[v18] = 0;
      goto LABEL_26;
    default:
LABEL_26:
      if (a2)
      {
LABEL_27:
        if ((v13 & 0x80000000) != 0)
        {
          unint64_t v27 = (unint64_t)&a1[v15 + 16] & ~v15;
          if (v10 != v14)
          {
            unint64_t v27 = (v27 + v16 + v17) & ~v17;
            uint64_t v10 = v12;
            uint64_t v7 = v9;
          }
          _s7Weather24LocationCompositionStateOwst_0(v27, a2, v10, v7);
        }
        else if ((a2 & 0x80000000) != 0)
        {
          *(void *)a1 = a2 ^ 0x80000000;
          *((void *)a1 + 1) = 0;
        }
        else
        {
          *((void *)a1 + 1) = (a2 - 1);
        }
      }
      return;
  }
}

uint64_t sub_100A25B2C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for CalendarWeekdayViewModel(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

uint64_t assignWithTake for CalendarWeekdayViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

ValueMetadata *type metadata accessor for CalendarWeekdayViewModel()
{
  return &type metadata for CalendarWeekdayViewModel;
}

void *initializeBufferWithCopyOfBuffer for CalendarWeekdayView(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for CalendarWeekdayView()
{
  return swift_bridgeObjectRelease();
}

void *assignWithCopy for CalendarWeekdayView(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for CalendarWeekdayView(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for CalendarWeekdayView()
{
  return &type metadata for CalendarWeekdayView;
}

unint64_t sub_100A25CC8()
{
  unint64_t result = qword_100EAA380;
  if (!qword_100EAA380)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAA380);
  }
  return result;
}

uint64_t sub_100A25D14(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6)
{
  BOOL v8 = a1 == a4 && a2 == a5;
  if (v8 || (char v9 = _stringCompareWithSmolCheck(_:_:expecting:)(), v10 = 0, (v9 & 1) != 0)) {
    char v10 = a3 ^ a6 ^ 1;
  }
  return v10 & 1;
}

void sub_100A25D68(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
}

Swift::Int sub_100A25DC8(uint64_t a1, uint64_t a2, char a3)
{
  return Hasher._finalize()();
}

uint64_t sub_100A25E40(uint64_t a1, uint64_t a2)
{
  return sub_100A25D14(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16), *(void *)a2, *(void *)(a2 + 8), *(unsigned char *)(a2 + 16));
}

Swift::Int sub_100A25E5C()
{
  return sub_100A25DC8(*(void *)v0, *(void *)(v0 + 8), *(unsigned char *)(v0 + 16));
}

void sub_100A25E68(uint64_t a1)
{
  sub_100A25D68(a1, *(void *)v1, *(void *)(v1 + 8), *(unsigned char *)(v1 + 16));
}

Swift::Int sub_100A25E74()
{
  Swift::UInt8 v1 = *(unsigned char *)(v0 + 16);
  Hasher.init(_seed:)();
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

uint64_t sub_100A25EE4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100A25F00@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if (a1)
  {
    *(void *)a2 = 0;
    *(unsigned char *)(a2 + 8) = 1;
    uint64_t v3 = sub_10017DF08(&qword_100EAA388);
    swift_getKeyPath();
    swift_bridgeObjectRetain();
    sub_10017DF08(&qword_100EAA390);
    sub_1001246C8(&qword_100EAA398, &qword_100EAA390);
    sub_100A26280();
    ForEach<>.init(_:id:content:)();
    return _s7Weather24LocationCompositionStateOwst_0(a2, 0, 1, v3);
  }
  else
  {
    uint64_t v5 = sub_10017DF08(&qword_100EAA388);
    return _s7Weather24LocationCompositionStateOwst_0(a2, 1, 1, v5);
  }
}

uint64_t sub_100A26060@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v29 = a2;
  uint64_t v3 = type metadata accessor for Font.TextStyle();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *a1;
  uint64_t v8 = a1[1];
  HIDWORD(v28) = *((unsigned __int8 *)a1 + 16);
  uint64_t v30 = v7;
  uint64_t v31 = v8;
  sub_10014A85C();
  swift_bridgeObjectRetain();
  uint64_t v9 = Text.init<A>(_:)();
  uint64_t v11 = v10;
  char v13 = v12 & 1;
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, enum case for Font.TextStyle.caption2(_:), v3);
  static Font.Weight.semibold.getter();
  static Font.system(_:weight:)();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  uint64_t v14 = Text.font(_:)();
  uint64_t v16 = v15;
  char v18 = v17;
  swift_release();
  sub_100191924(v9, v11, v13);
  swift_bridgeObjectRelease();
  if (HIDWORD(v28) == 1) {
    static Color.secondary.getter();
  }
  else {
    static Color.primary.getter();
  }
  uint64_t v19 = Text.foregroundColor(_:)();
  uint64_t v21 = v20;
  char v23 = v22;
  uint64_t v25 = v24;
  swift_release();
  sub_100191924(v14, v16, v18 & 1);
  uint64_t result = swift_bridgeObjectRelease();
  unint64_t v27 = v29;
  *uint64_t v29 = v19;
  v27[1] = v21;
  *((unsigned char *)v27 + 16) = v23 & 1;
  v27[3] = v25;
  return result;
}

uint64_t sub_100A26278@<X0>(uint64_t a1@<X8>)
{
  return sub_100A25F00(*v1, a1);
}

unint64_t sub_100A26280()
{
  unint64_t result = qword_100EAA3A0;
  if (!qword_100EAA3A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAA3A0);
  }
  return result;
}

unint64_t sub_100A262D0()
{
  unint64_t result = qword_100EAA3A8;
  if (!qword_100EAA3A8)
  {
    sub_10018C6DC(&qword_100EAA3B0);
    sub_1001246C8(&qword_100EAA3B8, &qword_100EAA388);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAA3A8);
  }
  return result;
}

uint64_t sub_100A2636C()
{
  type metadata accessor for DemoPresetMiddleware();

  return swift_allocObject();
}

uint64_t sub_100A263A0()
{
  uint64_t v0 = EnvironmentValues.accessibilityInvertColors.getter();
  return sub_100182AB8(v0);
}

uint64_t sub_100A263CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v7 = v6;
  uint64_t v14 = sub_10017DF08((uint64_t *)&unk_100EAAD40);
  __chkstk_darwin(v14 - 8);
  uint64_t v16 = (uint64_t *)((char *)&v21 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  *uint64_t v16 = a1;
  v16[1] = a2;
  v16[2] = a3;
  v16[3] = a4;
  v16[4] = a5;
  char v18 = (void *)((char *)v16 + *(int *)(v17 + 60));
  *char v18 = swift_getKeyPath();
  sub_10017DF08(&qword_100E845F8);
  swift_storeEnumTagMultiPayload();
  sub_10006DF38(v7, a6, &qword_100EAAD20);
  uint64_t v19 = sub_10017DF08(&qword_100EAAD28);
  sub_10024D364((uint64_t)v16, a6 + *(int *)(v19 + 36), (uint64_t *)&unk_100EAAD40);
  swift_retain();
  return swift_retain();
}

uint64_t sub_100A264F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10017DF08(&qword_100EAA7C8);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v13 - v8;
  uint64_t v10 = type metadata accessor for ContentSizeCategory();
  uint64_t v11 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16);
  v11(v9, a1, v10);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v9, 0, 1, v10);
  v11(v7, a2, v10);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v7, 0, 1, v10);
  sub_100A26654((uint64_t)v9, (uint64_t)v7);
  sub_100178110((uint64_t)v7, &qword_100EAA7C8);
  return sub_100178110((uint64_t)v9, &qword_100EAA7C8);
}

uint64_t sub_100A26654(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ContentSizeCategory();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = &v19[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = sub_10017DF08(&qword_100EAA7C8);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = &v19[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = sub_10017DF08(&qword_100EAA7D0);
  uint64_t v12 = __chkstk_darwin(v11 - 8);
  uint64_t v14 = &v19[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v15 = (uint64_t)&v14[*(int *)(v12 + 56)];
  sub_10006DF38(a1, (uint64_t)v14, &qword_100EAA7C8);
  sub_10006DF38(a2, v15, &qword_100EAA7C8);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v14, 1, v4) == 1)
  {
    if (_s7Weather24LocationCompositionStateOwet_0(v15, 1, v4) == 1) {
      return sub_100178110((uint64_t)v14, &qword_100EAA7C8);
    }
  }
  else
  {
    sub_10006DF38((uint64_t)v14, (uint64_t)v10, &qword_100EAA7C8);
    if (_s7Weather24LocationCompositionStateOwet_0(v15, 1, v4) != 1)
    {
      (*(void (**)(unsigned char *, uint64_t, uint64_t))(v5 + 32))(v7, v15, v4);
      sub_1000F6744(&qword_100EAA788, (void (*)(uint64_t))&type metadata accessor for ContentSizeCategory);
      char v17 = dispatch thunk of static Equatable.== infix(_:_:)();
      char v18 = *(void (**)(unsigned char *, uint64_t))(v5 + 8);
      v18(v7, v4);
      v18(v10, v4);
      uint64_t result = sub_100178110((uint64_t)v14, &qword_100EAA7C8);
      if (v17) {
        return result;
      }
      goto LABEL_8;
    }
    (*(void (**)(unsigned char *, uint64_t))(v5 + 8))(v10, v4);
  }
  sub_100178110((uint64_t)v14, &qword_100EAA7D0);
LABEL_8:
  char v28 = 1;
  char v27 = 1;
  char v26 = 1;
  char v25 = 1;
  char v24 = 1;
  char v23 = 1;
  char v22 = 1;
  char v21 = 1;
  char v20 = 1;
  swift_beginAccess();
  memcpy(v29, &xmmword_100E9EEE0, 0xC1uLL);
  xmmword_100E9EEE0 = 0u;
  *(_OWORD *)algn_100E9EEF0 = 0u;
  xmmword_100E9EF00 = 0u;
  unk_100E9EF10 = 0u;
  byte_100E9EF20 = v28;
  qword_100E9EF28 = 0;
  byte_100E9EF30 = v27;
  qword_100E9EF38 = 0;
  byte_100E9EF40 = v26;
  qword_100E9EF48 = 0;
  byte_100E9EF50 = v25;
  qword_100E9EF58 = 0;
  byte_100E9EF60 = v24;
  qword_100E9EF68 = 0;
  byte_100E9EF70 = v23;
  qword_100E9EF78 = 0;
  byte_100E9EF80 = v22;
  qword_100E9EF88 = 0;
  byte_100E9EF90 = v21;
  qword_100E9EF98 = 0;
  byte_100E9EFA0 = v20;
  return sub_1008E5908((uint64_t)v29);
}

uint64_t sub_100A269F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for LegibilityWeight();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = &v19[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = sub_10017DF08(&qword_100E827E0);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = &v19[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = sub_10017DF08(&qword_100EAA7C0);
  uint64_t v12 = __chkstk_darwin(v11 - 8);
  uint64_t v14 = &v19[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v15 = (uint64_t)&v14[*(int *)(v12 + 56)];
  sub_10006DF38(a1, (uint64_t)v14, &qword_100E827E0);
  sub_10006DF38(a2, v15, &qword_100E827E0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v14, 1, v4) == 1)
  {
    if (_s7Weather24LocationCompositionStateOwet_0(v15, 1, v4) == 1) {
      return sub_100178110((uint64_t)v14, &qword_100E827E0);
    }
  }
  else
  {
    sub_10006DF38((uint64_t)v14, (uint64_t)v10, &qword_100E827E0);
    if (_s7Weather24LocationCompositionStateOwet_0(v15, 1, v4) != 1)
    {
      (*(void (**)(unsigned char *, uint64_t, uint64_t))(v5 + 32))(v7, v15, v4);
      sub_1000F6744(&qword_100EAA798, (void (*)(uint64_t))&type metadata accessor for LegibilityWeight);
      char v17 = dispatch thunk of static Equatable.== infix(_:_:)();
      char v18 = *(void (**)(unsigned char *, uint64_t))(v5 + 8);
      v18(v7, v4);
      v18(v10, v4);
      uint64_t result = sub_100178110((uint64_t)v14, &qword_100E827E0);
      if (v17) {
        return result;
      }
      goto LABEL_8;
    }
    (*(void (**)(unsigned char *, uint64_t))(v5 + 8))(v10, v4);
  }
  sub_100178110((uint64_t)v14, &qword_100EAA7C0);
LABEL_8:
  char v28 = 1;
  char v27 = 1;
  char v26 = 1;
  char v25 = 1;
  char v24 = 1;
  char v23 = 1;
  char v22 = 1;
  char v21 = 1;
  char v20 = 1;
  swift_beginAccess();
  memcpy(v29, &xmmword_100E9EEE0, 0xC1uLL);
  xmmword_100E9EEE0 = 0u;
  *(_OWORD *)algn_100E9EEF0 = 0u;
  xmmword_100E9EF00 = 0u;
  unk_100E9EF10 = 0u;
  byte_100E9EF20 = v28;
  qword_100E9EF28 = 0;
  byte_100E9EF30 = v27;
  qword_100E9EF38 = 0;
  byte_100E9EF40 = v26;
  qword_100E9EF48 = 0;
  byte_100E9EF50 = v25;
  qword_100E9EF58 = 0;
  byte_100E9EF60 = v24;
  qword_100E9EF68 = 0;
  byte_100E9EF70 = v23;
  qword_100E9EF78 = 0;
  byte_100E9EF80 = v22;
  qword_100E9EF88 = 0;
  byte_100E9EF90 = v21;
  qword_100E9EF98 = 0;
  byte_100E9EFA0 = v20;
  return sub_1008E5908((uint64_t)v29);
}

uint64_t sub_100A26D8C()
{
  return Transaction.disablesAnimations.setter();
}

uint64_t sub_100A26DB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100664EC4();
}

uint64_t sub_100A26DE4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v50 = a1;
  uint64_t v3 = sub_10017DF08(&qword_100EAA9D0);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10017DF08(&qword_100EAAA18);
  uint64_t v42 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = sub_10017DF08(&qword_100EAAA08);
  uint64_t v10 = __chkstk_darwin(v45);
  uint64_t v12 = (char *)v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v43 = (uint64_t)v41 - v13;
  uint64_t v47 = sub_10017DF08(&qword_100EAAAC8);
  __chkstk_darwin(v47);
  uint64_t v49 = (uint64_t)v41 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = sub_10017DF08((uint64_t *)&unk_100EAAAD0);
  __chkstk_darwin(v44);
  uint64_t v16 = (char *)v41 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = sub_10017DF08(&qword_100EAA9E8);
  __chkstk_darwin(v48);
  uint64_t v46 = (char *)v41 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for MainViewModel(0);
  __chkstk_darwin(v18 - 8);
  char v20 = (unsigned __int8 *)v41 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  sub_1001BFFC8();
  swift_release();
  int v21 = *v20;
  uint64_t v22 = sub_10008DEE0((uint64_t)v20);
  if (v21)
  {
    if (v21 == 1)
    {
      v41[1] = v41;
      __chkstk_darwin(v22);
      v41[-2] = v2;
      v41[0] = sub_10017DF08(&qword_100EAAA40);
      uint64_t v23 = sub_10018C6DC(&qword_100EAAA48);
      uint64_t v24 = sub_10018C6DC(&qword_100EAAA50);
      uint64_t v25 = sub_1001246C8(&qword_100EAAA58, &qword_100EAAA48);
      uint64_t v26 = sub_10018C6DC(&qword_100EAAA60);
      v41[2] = v3;
      uint64_t v27 = v26;
      uint64_t v28 = sub_1001246C8((unint64_t *)&unk_100EAAA68, &qword_100EAAA60);
      *(void *)__src = v27;
      *(void *)&__src[8] = v28;
      uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
      *(void *)__src = v23;
      *(void *)&__src[8] = v24;
      *(void *)&__src[16] = v25;
      *(void *)&__src[24] = OpaqueTypeConformance2;
      swift_getOpaqueTypeConformance2();
      NavigationView.init(content:)();
      uint64_t v30 = v42;
      (*(void (**)(char *, char *, uint64_t))(v42 + 16))(v12, v9, v7);
      v12[*(int *)(v45 + 36)] = 0;
      (*(void (**)(char *, uint64_t))(v30 + 8))(v9, v7);
      uint64_t v31 = &qword_100EAAA08;
      uint64_t v32 = (uint64_t)v12;
      uint64_t v33 = v43;
      sub_10024D364(v32, v43, &qword_100EAAA08);
      sub_10006DF38(v33, (uint64_t)v16, &qword_100EAAA08);
      swift_storeEnumTagMultiPayload();
      sub_10017DF08(&qword_100E7CF80);
      sub_1001246C8((unint64_t *)&unk_100EAA9F0, &qword_100E7CF80);
      sub_10022F604();
      uint64_t v34 = (uint64_t)v46;
      _ConditionalContent<>.init(storage:)();
      sub_10006DF38(v34, v49, &qword_100EAA9E8);
      swift_storeEnumTagMultiPayload();
      sub_100229504();
      sub_1001246C8(&qword_100EAA9C8, &qword_100EAA9D0);
      _ConditionalContent<>.init(storage:)();
      sub_100178110(v34, &qword_100EAA9E8);
      unint64_t v35 = (unsigned char *)v33;
      return sub_100178110((uint64_t)v35, v31);
    }
    sub_10017DF08(&qword_100EAAA30);
    sub_1001246C8(&qword_100EAAA38, &qword_100EAAA30);
    NavigationView.init(content:)();
    (*(void (**)(uint64_t, char *, uint64_t))(v4 + 16))(v49, v6, v3);
    swift_storeEnumTagMultiPayload();
    sub_100229504();
    sub_1001246C8(&qword_100EAA9C8, &qword_100EAA9D0);
    _ConditionalContent<>.init(storage:)();
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  else
  {
    sub_1000F8BF0(v2, (uint64_t)__src);
    uint64_t v36 = swift_allocObject();
    memcpy((void *)(v36 + 16), __src, 0x48uLL);
    uint64_t v37 = sub_10017DF08(&qword_100E7CF78);
    v51[10] = sub_100224A28;
    v51[11] = 0;
    LOBYTE(v51[12]) = 0;
    v51[0] = v37;
    if (qword_100E62290 != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t result = sub_10006DF38((uint64_t)&xmmword_100F51398, (uint64_t)__src, &qword_100E6F2A0);
    if (*(void *)&__src[24])
    {
      sub_1001262E4((long long *)__src, (uint64_t)&v51[3]);
      v51[1] = sub_100A2E1DC;
      v51[2] = v36;
      uint64_t v39 = Dictionary.init(dictionaryLiteral:)();
      v51[8] = &_swiftEmptyArrayStorage;
      v51[9] = v39;
      memcpy(__src, v51, sizeof(__src));
      uint64_t v31 = &qword_100E7CF80;
      sub_10006DF38((uint64_t)__src, (uint64_t)v16, &qword_100E7CF80);
      swift_storeEnumTagMultiPayload();
      sub_10017DF08(&qword_100E7CF80);
      sub_1001246C8((unint64_t *)&unk_100EAA9F0, &qword_100E7CF80);
      sub_10022F604();
      uint64_t v40 = (uint64_t)v46;
      _ConditionalContent<>.init(storage:)();
      sub_10006DF38(v40, v49, &qword_100EAA9E8);
      swift_storeEnumTagMultiPayload();
      sub_100229504();
      sub_1001246C8(&qword_100EAA9C8, &qword_100EAA9D0);
      _ConditionalContent<>.init(storage:)();
      sub_100178110(v40, &qword_100EAA9E8);
      unint64_t v35 = __src;
      return sub_100178110((uint64_t)v35, v31);
    }
    __break(1u);
  }
  return result;
}

void *sub_100A27790@<X0>(uint64_t a1@<X8>)
{
  *(void *)a1 = static HorizontalAlignment.center.getter();
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 1;
  __src[10] = sub_100874AA0;
  __src[11] = 0;
  LOBYTE(__src[12]) = 0;
  __src[0] = sub_10017DF08(&qword_100E75310);
  if (qword_100E62290 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t result = (void *)sub_10006DF38((uint64_t)&xmmword_100F51398, (uint64_t)&v4, &qword_100E6F2A0);
  if (v5)
  {
    sub_1001262E4(&v4, (uint64_t)&__src[3]);
    __src[1] = sub_100A278C0;
    __src[2] = 0;
    uint64_t v3 = Dictionary.init(dictionaryLiteral:)();
    __src[8] = &_swiftEmptyArrayStorage;
    __src[9] = v3;
    return memcpy((void *)(a1 + 24), __src, 0x61uLL);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100A278C0(void *a1)
{
  return sub_100A2D078(a1, (uint64_t (*)(void))sub_10084F340);
}

uint64_t sub_100A278D8(void *a1)
{
  return sub_1000F3E84();
}

uint64_t sub_100A27920(uint64_t a1)
{
  v11[0] = static HorizontalAlignment.center.getter();
  v11[1] = 0;
  char v12 = 1;
  sub_1000F8BF0(a1, (uint64_t)__src);
  uint64_t v2 = swift_allocObject();
  memcpy((void *)(v2 + 16), __src, 0x48uLL);
  uint64_t v3 = sub_10017DF08(&qword_100E90C28);
  __src[10] = sub_100874A88;
  __src[11] = 0;
  LOBYTE(__src[12]) = 0;
  __src[0] = v3;
  if (qword_100E62290 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t result = sub_10006DF38((uint64_t)&xmmword_100F51398, (uint64_t)&v8, &qword_100E6F2A0);
  if (v9)
  {
    sub_1001262E4(&v8, (uint64_t)&__src[3]);
    __src[1] = sub_100A2FFE4;
    __src[2] = v2;
    uint64_t v5 = Dictionary.init(dictionaryLiteral:)();
    __src[8] = &_swiftEmptyArrayStorage;
    __src[9] = v5;
    memcpy(v13, __src, sizeof(v13));
    sub_10017DF08(&qword_100EAAA48);
    sub_10017DF08(&qword_100EAAA50);
    sub_1001246C8(&qword_100EAAA58, &qword_100EAAA48);
    uint64_t v6 = sub_10018C6DC(&qword_100EAAA60);
    uint64_t v7 = sub_1001246C8((unint64_t *)&unk_100EAAA68, &qword_100EAAA60);
    __src[0] = v6;
    __src[1] = v7;
    swift_getOpaqueTypeConformance2();
    View.toolbar<A>(content:)();
    return sub_100178110((uint64_t)v11, &qword_100EAAA48);
  }
  else
  {
    __break(1u);
  }
  return result;
}

double sub_100A27B8C@<D0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1009FAD54(*(void *)(a2 + 16), a3);
}

uint64_t sub_100A27BD4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = static Color.clear.getter();
  swift_retain();
  sub_10017DF08(&qword_100E64B58);
  sub_1001246C8(&qword_100EAA6D0, &qword_100E64B58);
  uint64_t v5 = ObservedObject.init(wrappedValue:)();
  uint64_t v7 = v6;
  sub_100A2D324(v2, (uint64_t)v11);
  uint64_t v8 = swift_allocObject();
  memcpy((void *)(v8 + 16), v11, 0x60uLL);
  uint64_t result = static Alignment.center.getter();
  *a1 = v4;
  a1[1] = v5;
  a1[2] = v7;
  a1[3] = (uint64_t)sub_100A2DC14;
  a1[4] = v8;
  a1[5] = result;
  a1[6] = v10;
  return result;
}

uint64_t sub_100A27CCC(unsigned char *a1, uint64_t *a2)
{
  if (*a1 == 2)
  {
    sub_100A2D324((uint64_t)a2, (uint64_t)v14);
    uint64_t v3 = swift_allocObject();
    memcpy((void *)(v3 + 16), v14, 0x60uLL);
    *(void *)&v14[0] = sub_100A2DFC0;
    *((void *)&v14[0] + 1) = v3;
    char v15 = 0;
    sub_10017DF08(&qword_100EAA8E8);
    sub_1001246C8(&qword_100EAA8F0, &qword_100EAA8E8);
    sub_100A2DEF8();
    return _ConditionalContent<>.init(storage:)();
  }
  else
  {
    uint64_t v5 = *a2;
    uint64_t v6 = a2[1];
    sub_10020D948((uint64_t)(a2 + 2), (uint64_t)v14);
    sub_10020D948((uint64_t)(a2 + 7), (uint64_t)v16);
    sub_10020D948((uint64_t)(a2 + 2), (uint64_t)v17);
    uint64_t v7 = sub_1000DF0C4((uint64_t)v17, v18[1]);
    __n128 v8 = __chkstk_darwin(v7);
    uint64_t v10 = (uint64_t *)((char *)v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, __n128))(v11 + 16))(v10, v8);
    uint64_t v12 = *v10;
    swift_retain_n();
    uint64_t v13 = sub_100A2DDA4(v12, v5);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v17);
    v17[0] = v5;
    v17[1] = v6;
    sub_1001262E4(v14, (uint64_t)v18);
    sub_1001262E4(v16, (uint64_t)v19);
    v19[5] = v13;
    sub_100A2DEC0((uint64_t)v17, (uint64_t)v14);
    char v15 = 1;
    sub_10017DF08(&qword_100EAA8E8);
    sub_1001246C8(&qword_100EAA8F0, &qword_100EAA8E8);
    sub_100A2DEF8();
    _ConditionalContent<>.init(storage:)();
    return sub_100A2DF44((uint64_t)v17);
  }
}

uint64_t sub_100A27F6C()
{
  return NavigationView.init(content:)();
}

uint64_t sub_100A27FD4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_10017DF08(&qword_100EAA930);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)__src - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0) + 16;
  uint64_t v5 = sub_10017DF08(&qword_100EAA900);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)__src - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0) + 16;
  uint64_t v8 = sub_10017DF08(&qword_100E75310);
  __src[10] = sub_100874AA0;
  __src[11] = 0;
  LOBYTE(__src[12]) = 0;
  __src[0] = v8;
  if (qword_100E62290 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t result = sub_10006DF38((uint64_t)&xmmword_100F51398, (uint64_t)__dst, &qword_100E6F2A0);
  if (*(void *)&__dst[24])
  {
    sub_1001262E4((long long *)__dst, (uint64_t)&__src[3]);
    __src[1] = sub_100A278C0;
    __src[2] = 0;
    uint64_t v10 = Dictionary.init(dictionaryLiteral:)();
    __src[8] = _swiftEmptyArrayStorage;
    __src[9] = v10;
    memcpy(__dst, __src, sizeof(__dst));
    uint64_t KeyPath = swift_getKeyPath();
    sub_100A28264((uint64_t)v4);
    uint64_t v12 = type metadata accessor for TargetWindowSizeClass();
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v4, 0, 1, v12);
    uint64_t v13 = (uint64_t *)&v7[*(int *)(v5 + 36)];
    uint64_t v14 = sub_10017DF08(&qword_100EA6650);
    sub_10006DF38((uint64_t)v4, (uint64_t)v13 + *(int *)(v14 + 28), &qword_100EAA930);
    *uint64_t v13 = KeyPath;
    sub_10006DF38((uint64_t)__dst, (uint64_t)v7, &qword_100EAA918);
    sub_100178110((uint64_t)v4, &qword_100EAA930);
    sub_100178110((uint64_t)__dst, &qword_100EAA918);
    return sub_10024D364((uint64_t)v7, a1, &qword_100EAA900);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100A28264@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for Settings.VFX.AnimatedBackgrounds.AnimationKind();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100E62530 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_1002102B0(v2, (uint64_t)qword_100E8DE78);
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, enum case for Settings.VFX.AnimatedBackgrounds.AnimationKind.vfx(_:), v2);
  LOBYTE(v6) = sub_10012F990(v6, (uint64_t)v5);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  if (v6)
  {
    GeometryProxy.size.getter();
    GeometryProxy.safeAreaInsets.getter();
    GeometryProxy.safeAreaInsets.getter();
    GeometryProxy.size.getter();
    GeometryProxy.safeAreaInsets.getter();
    GeometryProxy.safeAreaInsets.getter();
    char v7 = CGSize.isLandscape.getter();
    uint64_t v8 = type metadata accessor for TargetWindowSizeClass();
    if (v7) {
      uint64_t v9 = (unsigned int *)&enum case for TargetWindowSizeClass.landscapeRegular(_:);
    }
    else {
      uint64_t v9 = (unsigned int *)&enum case for TargetWindowSizeClass.portraitRegular(_:);
    }
    return (*(uint64_t (**)(uint64_t, void, uint64_t))(*(void *)(v8 - 8) + 104))(a1, *v9, v8);
  }
  else
  {
    uint64_t v10 = enum case for TargetWindowSizeClass.compact(_:);
    uint64_t v11 = type metadata accessor for TargetWindowSizeClass();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 104))(a1, v10, v11);
  }
}

uint64_t sub_100A28488@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for MainViewModel(0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  sub_1001BFFC8();
  swift_release();
  char v7 = *v6;
  sub_10008DEE0((uint64_t)v6);
  uint64_t v8 = sub_10017DF08(&qword_100EAABF8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16))(a2, a1, v8);
  uint64_t result = sub_10017DF08(&qword_100EAAC00);
  *(unsigned char *)(a2 + *(int *)(result + 36)) = v7;
  return result;
}

uint64_t sub_100A28578@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100A28488(a1, a2);
}

uint64_t sub_100A28580@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v41 = a1;
  uint64_t v3 = type metadata accessor for BalancedNavigationSplitViewStyle();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v39 = v3;
  uint64_t v40 = v4;
  __chkstk_darwin(v3);
  uint64_t v38 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for NavigationSplitViewVisibility();
  __chkstk_darwin(v6 - 8);
  uint64_t v7 = sub_10017DF08(&qword_100EAAB50);
  uint64_t v8 = v7 - 8;
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10017DF08(&qword_100EAAB58);
  uint64_t v12 = v11 - 8;
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = sub_10017DF08(&qword_100EAAB60);
  __chkstk_darwin(v36);
  uint64_t v16 = (char *)&v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = sub_10017DF08(&qword_100EAAB68);
  uint64_t v17 = *(void *)(v37 - 8);
  __chkstk_darwin(v37);
  uint64_t v19 = (char *)&v36 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100A28C18();
  uint64_t v43 = v1;
  uint64_t v42 = v1;
  sub_100A2E7E0();
  sub_100A2E82C();
  NavigationSplitView.init<>(columnVisibility:sidebar:detail:)();
  char v20 = (uint64_t *)&v10[*(int *)(v8 + 44)];
  *char v20 = swift_getKeyPath();
  sub_10017DF08(&qword_100EAA740);
  swift_storeEnumTagMultiPayload();
  uint64_t v21 = type metadata accessor for RecordPinnedMapAnimatingViewModifier();
  uint64_t v22 = (char *)v20 + *(int *)(v21 + 20);
  *(void *)uint64_t v22 = swift_getKeyPath();
  v22[8] = 0;
  uint64_t v23 = (char *)v20 + *(int *)(v21 + 24);
  char v44 = -2;
  sub_10017DF08(&qword_100EAAB80);
  State.init(wrappedValue:)();
  uint64_t v24 = v46;
  *uint64_t v23 = v45;
  *((void *)v23 + 1) = v24;
  uint64_t v25 = *(void *)(v2 + 96);
  swift_retain();
  swift_retain();
  sub_10017DF08(&qword_100E64B58);
  sub_1001246C8(&qword_100EAA6D0, &qword_100E64B58);
  uint64_t v26 = ObservedObject.init(wrappedValue:)();
  uint64_t v28 = v27;
  sub_10006DF38((uint64_t)v10, (uint64_t)v14, &qword_100EAAB50);
  uint64_t v29 = (uint64_t *)&v14[*(int *)(v12 + 44)];
  *uint64_t v29 = v26;
  v29[1] = v28;
  v29[2] = v25;
  sub_100178110((uint64_t)v10, &qword_100EAAB50);
  sub_10006DF38((uint64_t)v14, (uint64_t)v16, &qword_100EAAB58);
  uint64_t v30 = (void (**)())&v16[*(int *)(v36 + 36)];
  *uint64_t v30 = sub_100A28B00;
  v30[1] = 0;
  v30[2] = 0;
  v30[3] = 0;
  sub_100178110((uint64_t)v14, &qword_100EAAB58);
  uint64_t v31 = v38;
  static NavigationSplitViewStyle<>.balanced.getter();
  sub_10010A458(&qword_100EAAB88, &qword_100EAAB60, (void (*)(void))sub_100A2E880);
  sub_1000F6744(&qword_100EAABC0, (void (*)(uint64_t))&type metadata accessor for BalancedNavigationSplitViewStyle);
  uint64_t v32 = v39;
  View.navigationSplitViewStyle<A>(_:)();
  (*(void (**)(char *, uint64_t))(v40 + 8))(v31, v32);
  sub_100178110((uint64_t)v16, &qword_100EAAB60);
  LOBYTE(v25) = static Edge.Set.all.getter();
  uint64_t v33 = v41;
  uint64_t v34 = v37;
  (*(void (**)(uint64_t, char *, uint64_t))(v17 + 16))(v41, v19, v37);
  *(unsigned char *)(v33 + *(int *)(sub_10017DF08(&qword_100EAABC8) + 36)) = v25;
  return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v19, v34);
}

void sub_100A28B00()
{
  if (DeviceIsSlow())
  {
    sub_1001ABC4C(0, &qword_100EAABD0);
    ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
    sub_10017DF08(&qword_100EAABD8);
    uint64_t v1 = swift_allocObject();
    *(_OWORD *)(v1 + 16) = xmmword_100C251B0;
    *(void *)(v1 + 32) = sub_1001ABC4C(0, &qword_100EAABE0);
    sub_10017DF08(&qword_100EAABE8);
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    id v3 = [ObjCClassFromMetadata appearanceWhenContainedInInstancesOfClasses:isa];

    sub_100A2DC1C((uint64_t)_swiftEmptyArrayStorage, v3);
  }
}

uint64_t sub_100A28C18()
{
  if (sub_100A29158())
  {
    return static NavigationSplitViewVisibility.doubleColumn.getter();
  }
  else
  {
    return static NavigationSplitViewVisibility.detailOnly.getter();
  }
}

uint64_t sub_100A28C70@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = *(void *)(a1 + 8);
  sub_10020D948(a1 + 16, (uint64_t)(a2 + 1));
  uint64_t result = sub_10020D948(a1 + 56, (uint64_t)(a2 + 6));
  *a2 = v4;
  return result;
}

uint64_t sub_100A28CBC@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 8);
  uint64_t result = sub_10020D948(a1 + 16, (uint64_t)(a2 + 1));
  *a2 = v3;
  return result;
}

uint64_t sub_100A28CF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v34 = a2;
  uint64_t v35 = a4;
  uint64_t v33 = a1;
  uint64_t v38 = a5;
  uint64_t v6 = type metadata accessor for MainViewModel(0);
  uint64_t v7 = v6 - 8;
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10017DF08(&qword_100EAADF0);
  uint64_t v11 = v10 - 8;
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_10017DF08(&qword_100EAADF8);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_10017DF08(&qword_100EAAE00);
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v36 = v17;
  uint64_t v37 = v18;
  __chkstk_darwin(v17);
  char v20 = (char *)&v33 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t KeyPath = swift_getKeyPath();
  swift_retain();
  sub_1001BFFC8();
  swift_release();
  char v22 = v9[*(int *)(v7 + 40)];
  sub_10008DEE0((uint64_t)v9);
  uint64_t v23 = sub_10017DF08(&qword_100EAAE08);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v23 - 8) + 16))(v13, v33, v23);
  uint64_t v24 = &v13[*(int *)(v11 + 44)];
  *(void *)uint64_t v24 = KeyPath;
  v24[8] = v22;
  uint64_t v25 = swift_getKeyPath();
  swift_retain();
  sub_1001BFFC8();
  swift_release();
  char v26 = v9[*(int *)(v7 + 36)];
  sub_10008DEE0((uint64_t)v9);
  sub_10006DF38((uint64_t)v13, (uint64_t)v16, &qword_100EAADF0);
  uint64_t v27 = &v16[*(int *)(v14 + 36)];
  *(void *)uint64_t v27 = v25;
  v27[8] = (v26 & 1) == 0;
  sub_100178110((uint64_t)v13, &qword_100EAADF0);
  swift_retain();
  sub_1001BFFC8();
  swift_release();
  LOBYTE(v25) = v9[*(int *)(v7 + 40)];
  sub_10008DEE0((uint64_t)v9);
  LOBYTE(v39) = v25;
  uint64_t v28 = (void *)swift_allocObject();
  uint64_t v29 = v35;
  v28[2] = v34;
  v28[3] = a3;
  v28[4] = v29;
  unint64_t v30 = sub_100A2F8C8();
  swift_retain();
  swift_retain();
  View.onChange<A>(of:initial:_:)();
  swift_release();
  sub_100178110((uint64_t)v16, &qword_100EAADF8);
  type metadata accessor for WeatherSplitViewBindingModel(0);
  uint64_t v39 = v14;
  uint64_t v40 = &type metadata for Bool;
  unint64_t v41 = v30;
  uint64_t v42 = &protocol witness table for Bool;
  swift_getOpaqueTypeConformance2();
  sub_1000F6744(&qword_100EAA938, (void (*)(uint64_t))type metadata accessor for WeatherSplitViewBindingModel);
  uint64_t v31 = v36;
  View.environment<A>(_:)();
  return (*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v20, v31);
}

uint64_t sub_100A2911C(uint64_t a1, unsigned __int8 *a2)
{
  int v2 = *a2;
  uint64_t result = sub_100A29158();
  if (v2 != (result & 1)) {
    return sub_100A291F8();
  }
  return result;
}

uint64_t sub_100A29158()
{
  swift_getKeyPath();
  sub_1000F6744(&qword_100EAA938, (void (*)(uint64_t))type metadata accessor for WeatherSplitViewBindingModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  return *(unsigned __int8 *)(v0 + 64);
}

uint64_t sub_100A291F8()
{
  return swift_release();
}

uint64_t sub_100A29268@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100A28CF4(a1, *v2, v2[1], v2[2], a2);
}

uint64_t sub_100A29274()
{
  return ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
}

uint64_t sub_100A29330()
{
  swift_release();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 24);
  uint64_t v1 = v0
     + OBJC_IVAR____TtC7WeatherP33_EFFDD3539328A3DC265CB51F3C3EB9E828WeatherSplitViewBindingModel___observationRegistrar;
  uint64_t v2 = type metadata accessor for ObservationRegistrar();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t sub_100A293A4()
{
  sub_100A29330();

  return swift_deallocClassInstance();
}

uint64_t sub_100A293F8()
{
  return type metadata accessor for WeatherSplitViewBindingModel(0);
}

uint64_t type metadata accessor for WeatherSplitViewBindingModel(uint64_t a1)
{
  return sub_10018678C(a1, qword_100EAA490);
}

uint64_t sub_100A29420()
{
  uint64_t result = type metadata accessor for ObservationRegistrar();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_100A294D4()
{
  uint64_t v0 = EnvironmentValues.accessibilityInvertColors.getter();
  return sub_100182AB8(v0);
}

uint64_t sub_100A29500(uint64_t a1, uint64_t *a2, int *a3)
{
  int v4 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v5 = *a2;
  *(void *)a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = v5 + ((v4 + 16) & ~(unint64_t)v4);
    swift_retain();
  }
  else
  {
    uint64_t v8 = a2 + 1;
    long long v9 = *((_OWORD *)a2 + 2);
    *(_OWORD *)(a1 + 32) = v9;
    uint64_t v10 = v9;
    uint64_t v11 = **(void (***)(uint64_t, uint64_t *, uint64_t))(v9 - 8);
    swift_retain();
    v11(a1 + 8, v8, v10);
    long long v12 = *(_OWORD *)(a2 + 9);
    *(_OWORD *)(a1 + 72) = v12;
    (**(void (***)(uint64_t, uint64_t))(v12 - 8))(a1 + 48, (uint64_t)(a2 + 6));
    long long v13 = *((_OWORD *)a2 + 7);
    *(_OWORD *)(a1 + 112) = v13;
    (**(void (***)(uint64_t, uint64_t))(v13 - 8))(a1 + 88, (uint64_t)(a2 + 11));
    uint64_t v14 = a3[8];
    uint64_t v15 = (void *)(a1 + v14);
    uint64_t v16 = (uint64_t *)((char *)a2 + v14);
    sub_10017DF08(&qword_100E63BC8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v17 = type metadata accessor for ContentSizeCategory();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
    }
    else
    {
      *uint64_t v15 = *v16;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v18 = a3[9];
    uint64_t v19 = (void *)(a1 + v18);
    char v20 = (uint64_t *)((char *)a2 + v18);
    sub_10017DF08((uint64_t *)&unk_100EAA550);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v21 = type metadata accessor for LegibilityWeight();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v20, 1, v21))
      {
        uint64_t v22 = sub_10017DF08(&qword_100E827E0);
        memcpy(v19, v20, *(void *)(*(void *)(v22 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v21 - 8) + 16))(v19, v20, v21);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v19, 0, 1, v21);
      }
    }
    else
    {
      *uint64_t v19 = *v20;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v23 = a3[10];
    uint64_t v24 = (void *)(a1 + v23);
    uint64_t v25 = (uint64_t *)((char *)a2 + v23);
    sub_10017DF08((uint64_t *)&unk_100EAA560);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v26 = type metadata accessor for UserInterfaceSizeClass();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v25, 1, v26))
      {
        uint64_t v27 = sub_10017DF08(&qword_100E65ED8);
        memcpy(v24, v25, *(void *)(*(void *)(v27 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v26 - 8) + 16))(v24, v25, v26);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v24, 0, 1, v26);
      }
    }
    else
    {
      *uint64_t v24 = *v25;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v28 = a3[11];
    uint64_t v29 = a1 + v28;
    uint64_t v30 = (uint64_t)a2 + v28;
    uint64_t v31 = *(void *)v30;
    char v32 = *(unsigned char *)(v30 + 8);
    sub_100195B7C(*(void *)v30, v32);
    *(void *)uint64_t v29 = v31;
    *(unsigned char *)(v29 + 8) = v32;
    uint64_t v33 = a3[13];
    *(void *)(a1 + a3[12]) = *(uint64_t *)((char *)a2 + a3[12]);
    *(void *)(a1 + v33) = *(uint64_t *)((char *)a2 + v33);
    uint64_t v34 = a3[15];
    *(void *)(a1 + a3[14]) = *(uint64_t *)((char *)a2 + a3[14]);
    uint64_t v35 = a1 + v34;
    uint64_t v36 = (uint64_t)a2 + v34;
    long long v37 = *(_OWORD *)(v36 + 24);
    *(_OWORD *)(a1 + v34 + 24) = v37;
    uint64_t v38 = v37;
    uint64_t v39 = **(void (***)(uint64_t, uint64_t, uint64_t))(v37 - 8);
    swift_retain();
    v39(v35, v36, v38);
  }
  return a1;
}

uint64_t sub_100A299A0(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  long long v6 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v6;
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  uint64_t v7 = a3[8];
  uint64_t v8 = (void *)(a1 + v7);
  long long v9 = (const void *)(a2 + v7);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  uint64_t v10 = sub_10017DF08(&qword_100E63BC8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v11 = type metadata accessor for ContentSizeCategory();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v11 - 8) + 32))(v8, v9, v11);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
  }
  uint64_t v12 = a3[9];
  long long v13 = (void *)(a1 + v12);
  uint64_t v14 = (const void *)(a2 + v12);
  uint64_t v15 = sub_10017DF08((uint64_t *)&unk_100EAA550);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v16 = type metadata accessor for LegibilityWeight();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v14, 1, v16))
    {
      uint64_t v17 = sub_10017DF08(&qword_100E827E0);
      memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v16 - 8) + 32))(v13, v14, v16);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v13, 0, 1, v16);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64));
  }
  uint64_t v18 = a3[10];
  uint64_t v19 = (void *)(a1 + v18);
  char v20 = (const void *)(a2 + v18);
  uint64_t v21 = sub_10017DF08((uint64_t *)&unk_100EAA560);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v22 = type metadata accessor for UserInterfaceSizeClass();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v20, 1, v22))
    {
      uint64_t v23 = sub_10017DF08(&qword_100E65ED8);
      memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v22 - 8) + 32))(v19, v20, v22);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v19, 0, 1, v22);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v19, v20, *(void *)(*(void *)(v21 - 8) + 64));
  }
  uint64_t v24 = a3[11];
  uint64_t v25 = a3[12];
  uint64_t v26 = a1 + v24;
  uint64_t v27 = a2 + v24;
  *(void *)uint64_t v26 = *(void *)v27;
  *(unsigned char *)(v26 + 8) = *(unsigned char *)(v27 + 8);
  *(void *)(a1 + v25) = *(void *)(a2 + v25);
  uint64_t v28 = a3[14];
  *(void *)(a1 + a3[13]) = *(void *)(a2 + a3[13]);
  *(void *)(a1 + v28) = *(void *)(a2 + v28);
  uint64_t v29 = a3[15];
  uint64_t v30 = a1 + v29;
  uint64_t v31 = a2 + v29;
  long long v32 = *(_OWORD *)(v31 + 16);
  *(_OWORD *)uint64_t v30 = *(_OWORD *)v31;
  *(_OWORD *)(v30 + 16) = v32;
  *(void *)(v30 + 32) = *(void *)(v31 + 32);
  return a1;
}

uint64_t sub_100A29D18(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1 + 8);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1 + 48);
  long long v6 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v6;
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1 + 88);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  if (a1 != a2)
  {
    uint64_t v7 = a3[8];
    uint64_t v8 = (void *)(a1 + v7);
    long long v9 = (const void *)(a2 + v7);
    sub_100178110(a1 + v7, &qword_100E63BC8);
    uint64_t v10 = sub_10017DF08(&qword_100E63BC8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v11 = type metadata accessor for ContentSizeCategory();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v11 - 8) + 32))(v8, v9, v11);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
    }
    uint64_t v12 = a3[9];
    long long v13 = (void *)(a1 + v12);
    uint64_t v14 = (const void *)(a2 + v12);
    sub_100178110(a1 + v12, (uint64_t *)&unk_100EAA550);
    uint64_t v15 = sub_10017DF08((uint64_t *)&unk_100EAA550);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v16 = type metadata accessor for LegibilityWeight();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v14, 1, v16))
      {
        uint64_t v17 = sub_10017DF08(&qword_100E827E0);
        memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v16 - 8) + 32))(v13, v14, v16);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v13, 0, 1, v16);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64));
    }
    uint64_t v18 = a3[10];
    uint64_t v19 = (void *)(a1 + v18);
    char v20 = (const void *)(a2 + v18);
    sub_100178110(a1 + v18, (uint64_t *)&unk_100EAA560);
    uint64_t v21 = sub_10017DF08((uint64_t *)&unk_100EAA560);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v22 = type metadata accessor for UserInterfaceSizeClass();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v20, 1, v22))
      {
        uint64_t v23 = sub_10017DF08(&qword_100E65ED8);
        memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v22 - 8) + 32))(v19, v20, v22);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v19, 0, 1, v22);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v19, v20, *(void *)(*(void *)(v21 - 8) + 64));
    }
  }
  uint64_t v24 = a3[11];
  uint64_t v25 = a1 + v24;
  uint64_t v26 = (uint64_t *)(a2 + v24);
  uint64_t v27 = *v26;
  LOBYTE(v26) = *((unsigned char *)v26 + 8);
  uint64_t v28 = *(void *)v25;
  char v29 = *(unsigned char *)(v25 + 8);
  *(void *)uint64_t v25 = v27;
  *(unsigned char *)(v25 + 8) = (_BYTE)v26;
  sub_10018F6D8(v28, v29);
  uint64_t v30 = a3[13];
  *(void *)(a1 + a3[12]) = *(void *)(a2 + a3[12]);
  *(void *)(a1 + v30) = *(void *)(a2 + v30);
  *(void *)(a1 + a3[14]) = *(void *)(a2 + a3[14]);
  swift_release();
  uint64_t v31 = a3[15];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1 + v31);
  long long v34 = *(_OWORD *)(v33 + 16);
  *(_OWORD *)uint64_t v32 = *(_OWORD *)v33;
  *(_OWORD *)(v32 + 16) = v34;
  *(void *)(v32 + 32) = *(void *)(v33 + 32);
  return a1;
}

uint64_t sub_100A2A108(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100A2A11C);
}

uint64_t sub_100A2A11C(unint64_t *a1, uint64_t a2, int *a3)
{
  if (a2 == 0x7FFFFFFF) {
    return sub_100163020(*a1);
  }
  sub_10017DF08((uint64_t *)&unk_100EAA530);
  sub_100162F30();
  if (*(_DWORD *)(v8 + 84) == a2)
  {
    uint64_t v9 = v7;
    uint64_t v10 = a3[8];
  }
  else
  {
    sub_10017DF08(&qword_100EA5288);
    sub_100162F30();
    if (*(_DWORD *)(v12 + 84) == a2)
    {
      uint64_t v9 = v11;
      uint64_t v10 = a3[9];
    }
    else
    {
      uint64_t v9 = sub_10017DF08((uint64_t *)&unk_100EAA540);
      uint64_t v10 = a3[10];
    }
  }

  return _s7Weather24LocationCompositionStateOwet_0((uint64_t)a1 + v10, a2, v9);
}

uint64_t sub_100A2A1EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100A2A200);
}

void sub_100A2A200()
{
  sub_100163298();
  if (v4)
  {
    *unint64_t v1 = (v0 - 1);
  }
  else
  {
    uint64_t v5 = v3;
    int v6 = v2;
    sub_10017DF08((uint64_t *)&unk_100EAA530);
    sub_100162F30();
    if (*(_DWORD *)(v8 + 84) == v6)
    {
      uint64_t v9 = v7;
      uint64_t v10 = v5[8];
    }
    else
    {
      sub_10017DF08(&qword_100EA5288);
      sub_100162F30();
      if (*(_DWORD *)(v12 + 84) == v6)
      {
        uint64_t v9 = v11;
        uint64_t v10 = v5[9];
      }
      else
      {
        uint64_t v9 = sub_10017DF08((uint64_t *)&unk_100EAA540);
        uint64_t v10 = v5[10];
      }
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v1 + v10, v0, v0, v9);
  }
}

uint64_t sub_100A2A2D4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_10017DF08(&qword_100EAAC30);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10017DF08(&qword_100EAAC38);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100A2F13C(v1, (uint64_t)__src);
  uint64_t v12 = swift_allocObject();
  memcpy((void *)(v12 + 16), __src, 0x58uLL);
  uint64_t v13 = sub_10017DF08(&qword_100E90C28);
  v27[10] = sub_100874A88;
  v27[11] = 0;
  LOBYTE(v27[12]) = 0;
  v27[0] = v13;
  if (qword_100E62290 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t result = sub_10006DF38((uint64_t)&xmmword_100F51398, (uint64_t)__src, &qword_100E6F2A0);
  if (*(void *)&__src[24])
  {
    uint64_t v21 = v2;
    uint64_t v22 = v9;
    uint64_t v23 = v8;
    uint64_t v24 = v5;
    uint64_t v25 = v4;
    uint64_t v26 = a1;
    sub_1001262E4((long long *)__src, (uint64_t)&v27[3]);
    v27[1] = sub_100A2F178;
    v27[2] = v12;
    uint64_t v15 = Dictionary.init(dictionaryLiteral:)();
    v27[8] = _swiftEmptyArrayStorage;
    v27[9] = v15;
    memcpy(__src, v27, sizeof(__src));
    if (qword_100E62580 != -1) {
      swift_once();
    }
    uint64_t v16 = type metadata accessor for Material();
    sub_1002102B0(v16, (uint64_t)qword_100F51B10);
    sub_10017DF08(&qword_100EAAC40);
    type metadata accessor for ToolbarPlacement();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_100C251B0;
    static ToolbarPlacement.navigationBar.getter();
    uint64_t v17 = sub_10017DF08(&qword_100EAAC48);
    uint64_t v18 = sub_1001246C8(&qword_100EAAC50, &qword_100EAAC48);
    View.toolbarBackground<A>(_:for:)();
    swift_bridgeObjectRelease();
    uint64_t v19 = sub_100178110((uint64_t)__src, &qword_100EAAC48);
    __chkstk_darwin(v19);
    *(&v21 - 2) = v21;
    sub_10017DF08(&qword_100EAAC58);
    *(void *)__src = v17;
    *(void *)&__src[8] = v16;
    *(void *)&__src[16] = v18;
    *(void *)&__src[24] = &protocol witness table for Material;
    swift_getOpaqueTypeConformance2();
    sub_1001246C8(&qword_100EAAC60, &qword_100EAAC58);
    uint64_t v20 = v25;
    View.toolbar<A>(content:)();
    (*(void (**)(char *, uint64_t))(v24 + 8))(v7, v20);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v22 + 32))(v26, v11, v23);
  }
  else
  {
    __break(1u);
  }
  return result;
}

double sub_100A2A7F4@<D0>(void *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1009FAD54(*a2, a3);
}

uint64_t sub_100A2A83C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  v16[1] = a2;
  v16[0] = sub_10017DF08(&qword_100EAAC68);
  __chkstk_darwin(v16[0]);
  uint64_t v4 = (char *)v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10017DF08(&qword_100EAAA60);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for ToolbarItemPlacement();
  __chkstk_darwin(v9 - 8);
  uint64_t v10 = sub_10017DF08(&qword_100EAAC70);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  static ToolbarItemPlacement.navigationBarLeading.getter();
  v16[4] = a1;
  sub_10017DF08(&qword_100EAAC78);
  sub_100A2F190();
  ToolbarItem<>.init(placement:content:)();
  static ToolbarItemPlacement.confirmationAction.getter();
  sub_10017DF08(&qword_100EAAAB0);
  sub_1001246C8(&qword_100EAAAB8, &qword_100EAAAB0);
  ToolbarItem<>.init(placement:content:)();
  uint64_t v14 = &v4[*(int *)(v16[0] + 48)];
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v4, v13, v10);
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v14, v8, v5);
  TupleToolbarContent.init(_:)();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
}

uint64_t sub_100A2AB58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v25 = a2;
  uint64_t v3 = type metadata accessor for AutomaticHoverEffect();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10017DF08(&qword_100E8E4B8);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_10017DF08(&qword_100EAACA8);
  uint64_t v11 = *(void *)(v24 - 8);
  __chkstk_darwin(v24);
  uint64_t v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100A2F13C(a1, (uint64_t)__src);
  uint64_t v14 = swift_allocObject();
  memcpy((void *)(v14 + 16), __src, 0x58uLL);
  Button.init(action:label:)();
  static CustomHoverEffect<>.automatic.getter();
  uint64_t v15 = sub_1001246C8(&qword_100EAAC90, &qword_100E8E4B8);
  uint64_t v16 = sub_1000F6744(&qword_100EAAC98, (void (*)(uint64_t))&type metadata accessor for AutomaticHoverEffect);
  View.hoverEffect<A>(_:isEnabled:)();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  id v17 = [self mainBundle];
  v28._object = (void *)0x8000000100CBAAC0;
  v18._countAndFlagsBits = 0x6469732065646948;
  v18._object = (void *)0xEC00000072616265;
  v19._countAndFlagsBits = 0;
  v19._object = (void *)0xE000000000000000;
  v28._countAndFlagsBits = 0xD00000000000002DLL;
  Swift::String v20 = NSLocalizedString(_:tableName:bundle:value:comment:)(v18, (Swift::String_optional)0, (NSBundle)v17, v19, v28);

  Swift::String v26 = v20;
  __src[0] = v7;
  __src[1] = v3;
  __src[2] = v15;
  __src[3] = v16;
  swift_getOpaqueTypeConformance2();
  sub_10014A85C();
  uint64_t v21 = v24;
  View.accessibilityLabel<A>(_:)();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v21);
}

uint64_t sub_100A2AF48(uint64_t a1)
{
  return sub_100665660();
}

uint64_t sub_100A2AF7C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = Image.init(systemName:)();
  *a1 = result;
  return result;
}

uint64_t sub_100A2AFC4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1002EF4F8(a2);
}

uint64_t sub_100A2AFFC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v34 = a1;
  uint64_t v32 = type metadata accessor for ColorScheme();
  uint64_t v3 = *(void *)(v32 - 8);
  __chkstk_darwin(v32);
  uint64_t v5 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10017DF08(&qword_100EAACB8);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (uint64_t *)((char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = sub_10017DF08(&qword_100EAACC0);
  uint64_t v10 = v9 - 8;
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_10017DF08(&qword_100EAACC8);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = sub_10017DF08(&qword_100EAACD0);
  uint64_t v16 = *(void *)(v33 - 8);
  __chkstk_darwin(v33);
  Swift::String v18 = (char *)&v31 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  *uint64_t v8 = static Alignment.topTrailing.getter();
  v8[1] = v19;
  uint64_t v20 = sub_10017DF08(&qword_100EAACD8);
  sub_100A2B3F0(v2, (uint64_t)v8 + *(int *)(v20 + 44));
  sub_10006DF38((uint64_t)v8, (uint64_t)v12, &qword_100EAACB8);
  v12[*(int *)(v10 + 44)] = 1;
  sub_100178110((uint64_t)v8, &qword_100EAACB8);
  uint64_t v21 = v32;
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, enum case for ColorScheme.dark(_:), v32);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v23 = (uint64_t *)&v15[*(int *)(v13 + 36)];
  uint64_t v24 = sub_10017DF08(&qword_100EAACE0);
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))((char *)v23 + *(int *)(v24 + 28), v5, v21);
  *uint64_t v23 = KeyPath;
  sub_10006DF38((uint64_t)v12, (uint64_t)v15, &qword_100EAACC0);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v21);
  sub_100178110((uint64_t)v12, &qword_100EAACC0);
  sub_100A2F338();
  View.navigationBarHidden(_:)();
  sub_100178110((uint64_t)v15, &qword_100EAACC8);
  sub_100A2F478(v31, (uint64_t)v35);
  uint64_t v25 = (uint64_t (*)())swift_allocObject();
  long long v26 = v35[1];
  *((_OWORD *)v25 + 1) = v35[0];
  *((_OWORD *)v25 + 2) = v26;
  *((_OWORD *)v25 + 3) = v35[2];
  uint64_t v28 = v33;
  uint64_t v27 = v34;
  (*(void (**)(uint64_t, char *, uint64_t))(v16 + 16))(v34, v18, v33);
  char v29 = (uint64_t (**)())(v27 + *(int *)(sub_10017DF08(&qword_100EAAD08) + 36));
  *char v29 = sub_100A2F4E8;
  v29[1] = v25;
  v29[2] = 0;
  v29[3] = 0;
  return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v18, v28);
}

uint64_t sub_100A2B3F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v34 = a2;
  uint64_t v3 = type metadata accessor for NavigationBarItem.TitleDisplayMode();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10017DF08(&qword_100EAAD18);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = sub_10017DF08(&qword_100EAAD20);
  __chkstk_darwin(v31);
  uint64_t v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_10017DF08(&qword_100EAAD28);
  __chkstk_darwin(v13 - 8);
  uint64_t v32 = (uint64_t)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = a1;
  sub_100A2F478(a1, (uint64_t)__src);
  uint64_t v15 = (_OWORD *)swift_allocObject();
  long long v16 = *(_OWORD *)&__src[16];
  v15[1] = *(_OWORD *)__src;
  void v15[2] = v16;
  v15[3] = *(_OWORD *)&__src[32];
  uint64_t v17 = sub_10017DF08(&qword_100E7CF78);
  *(void *)&__src[80] = sub_100224A28;
  *(void *)&__src[88] = 0;
  __src[96] = 0;
  *(void *)__src = v17;
  if (qword_100E62290 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t result = sub_10006DF38((uint64_t)&xmmword_100F51398, (uint64_t)__dst, &qword_100E6F2A0);
  if (*(void *)&__dst[24])
  {
    sub_1001262E4((long long *)__dst, (uint64_t)&__src[24]);
    *(void *)&__src[8] = sub_100A2F4F8;
    *(void *)&__src[16] = v15;
    uint64_t v19 = Dictionary.init(dictionaryLiteral:)();
    *(void *)&__src[64] = _swiftEmptyArrayStorage;
    *(void *)&__src[72] = v19;
    memcpy(__dst, __src, sizeof(__dst));
    char v20 = static Edge.Set.bottom.getter();
    uint64_t v21 = static SafeAreaRegions.all.getter();
    sub_10006DF38((uint64_t)__dst, (uint64_t)__src, &qword_100E7CF80);
    uint64_t v37 = v21;
    char v38 = v20;
    sub_100178110((uint64_t)__dst, &qword_100E7CF80);
    (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, enum case for NavigationBarItem.TitleDisplayMode.inline(_:), v3);
    sub_10017DF08(&qword_100EAAD30);
    sub_100A2F500();
    View.navigationBarTitleDisplayMode(_:)();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    sub_100178110((uint64_t)__src, &qword_100EAAD30);
    uint64_t KeyPath = swift_getKeyPath();
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v12, v10, v7);
    uint64_t v23 = &v12[*(int *)(v31 + 36)];
    *(void *)uint64_t v23 = KeyPath;
    v23[8] = 0;
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    uint64_t v24 = static Alignment.topLeading.getter();
    uint64_t v26 = v25;
    uint64_t v27 = swift_getKeyPath();
    sub_100A2F478(v33, (uint64_t)__src);
    uint64_t v28 = (_OWORD *)swift_allocObject();
    long long v29 = *(_OWORD *)&__src[16];
    v28[1] = *(_OWORD *)__src;
    v28[2] = v29;
    v28[3] = *(_OWORD *)&__src[32];
    uint64_t v30 = v32;
    sub_100A263CC(v24, v26, v27, (uint64_t)sub_100A2F5FC, (uint64_t)v28, v32);
    swift_release();
    swift_release();
    sub_100178110((uint64_t)v12, &qword_100EAAD20);
    return sub_10024D364(v30, v34, &qword_100EAAD28);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100A2B8E8(void *a1)
{
  return sub_1000F3E84();
}

uint64_t sub_100A2B930@<X0>(unsigned char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v56 = a2;
  uint64_t v61 = type metadata accessor for AutomaticHoverEffect();
  uint64_t v59 = *(void *)(v61 - 8);
  __chkstk_darwin(v61);
  uint64_t v6 = (char *)&v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10017DF08(&qword_100EAAD50);
  uint64_t v58 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v53 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = sub_10017DF08(&qword_100EAAD58);
  uint64_t v10 = *(void *)(v60 - 8);
  __chkstk_darwin(v60);
  uint64_t v12 = (char *)&v53 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = sub_10017DF08(&qword_100EAAD60);
  __chkstk_darwin(v57);
  uint64_t v14 = (char *)&v53 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_10017DF08(&qword_100EAAD68);
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v53 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_10017DF08(&qword_100EAAD70);
  __chkstk_darwin(v18);
  if (*a1)
  {
    return _s7Weather24LocationCompositionStateOwst_0(a3, 1, 1, v19);
  }
  else
  {
    uint64_t v22 = v56;
    uint64_t v55 = (char *)&v53 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v56 = v19;
    sub_100A2F478(v22, (uint64_t)v62);
    uint64_t v23 = (_OWORD *)swift_allocObject();
    long long v24 = v62[1];
    v23[1] = v62[0];
    v23[2] = v24;
    v23[3] = v62[2];
    uint64_t v54 = a3;
    sub_10017DF08(&qword_100EAAD78);
    uint64_t v53 = v15;
    sub_10010A458(&qword_100EAAD80, &qword_100EAAD78, (void (*)(void))sub_100A2F60C);
    Button.init(action:label:)();
    static CustomHoverEffect<>.automatic.getter();
    sub_1001246C8(&qword_100EAADC8, &qword_100EAAD50);
    sub_1000F6744(&qword_100EAAC98, (void (*)(uint64_t))&type metadata accessor for AutomaticHoverEffect);
    uint64_t v25 = v61;
    View.hoverEffect<A>(_:isEnabled:)();
    (*(void (**)(char *, uint64_t))(v59 + 8))(v6, v25);
    (*(void (**)(char *, uint64_t))(v58 + 8))(v9, v7);
    char v26 = static Edge.Set.leading.getter();
    EdgeInsets.init(_all:)();
    uint64_t v28 = v27;
    uint64_t v30 = v29;
    uint64_t v32 = v31;
    uint64_t v34 = v33;
    uint64_t v35 = v60;
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v14, v12, v60);
    uint64_t v36 = &v14[*(int *)(v57 + 36)];
    *uint64_t v36 = v26;
    *((void *)v36 + 1) = v28;
    *((void *)v36 + 2) = v30;
    *((void *)v36 + 3) = v32;
    *((void *)v36 + 4) = v34;
    v36[40] = 0;
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v35);
    char v37 = static Edge.Set.top.getter();
    EdgeInsets.init(_all:)();
    uint64_t v39 = v38;
    uint64_t v41 = v40;
    uint64_t v43 = v42;
    uint64_t v45 = v44;
    sub_10006DF38((uint64_t)v14, (uint64_t)v17, &qword_100EAAD60);
    uint64_t v46 = &v17[*(int *)(v53 + 36)];
    *uint64_t v46 = v37;
    *((void *)v46 + 1) = v39;
    *((void *)v46 + 2) = v41;
    *((void *)v46 + 3) = v43;
    *((void *)v46 + 4) = v45;
    v46[40] = 0;
    sub_100178110((uint64_t)v14, &qword_100EAAD60);
    id v47 = [self mainBundle];
    v64._object = (void *)0x8000000100CBAAF0;
    v48._countAndFlagsBits = 0x64697320776F6853;
    v48._object = (void *)0xEC00000072616265;
    v49._countAndFlagsBits = 0;
    v49._object = (void *)0xE000000000000000;
    v64._countAndFlagsBits = 0xD00000000000002DLL;
    Swift::String v50 = NSLocalizedString(_:tableName:bundle:value:comment:)(v48, (Swift::String_optional)0, (NSBundle)v47, v49, v64);

    v62[0] = v50;
    sub_10010A458(&qword_100EAADD0, &qword_100EAAD68, (void (*)(void))sub_100A2F750);
    sub_10014A85C();
    uint64_t v51 = (uint64_t)v55;
    View.accessibilityLabel<A>(_:)();
    swift_bridgeObjectRelease();
    sub_100178110((uint64_t)v17, &qword_100EAAD68);
    uint64_t v52 = v54;
    sub_10024D364(v51, v54, &qword_100EAAD70);
    return _s7Weather24LocationCompositionStateOwst_0(v52, 0, 1, v56);
  }
}

uint64_t sub_100A2BFC8(uint64_t a1)
{
  return sub_100665658();
}

uint64_t sub_100A2BFFC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v44 = a1;
  uint64_t v1 = type metadata accessor for Image.Scale();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v40 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = sub_10017DF08(&qword_100E651D0);
  __chkstk_darwin(v41);
  uint64_t v6 = (char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = sub_10017DF08((uint64_t *)&unk_100EAADE0);
  uint64_t v7 = *(void *)(v43 - 8);
  __chkstk_darwin(v43);
  uint64_t v9 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = sub_10017DF08((uint64_t *)&unk_100EAADA0);
  __chkstk_darwin(v40);
  uint64_t v11 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = sub_10017DF08(&qword_100EAAD90);
  __chkstk_darwin(v42);
  uint64_t v13 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = Image.init(systemName:)();
  uint64_t v14 = enum case for DynamicTypeSize.xxLarge(_:);
  uint64_t v15 = type metadata accessor for DynamicTypeSize();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v15 - 8) + 104))(v6, v14, v15);
  sub_1000F6744(&qword_100E651F0, (void (*)(uint64_t))&type metadata accessor for DynamicTypeSize);
  uint64_t result = dispatch thunk of static Equatable.== infix(_:_:)();
  if (result)
  {
    sub_1001246C8((unint64_t *)&unk_100EAADB0, &qword_100E651D0);
    View.dynamicTypeSize<A>(_:)();
    sub_100178110((uint64_t)v6, &qword_100E651D0);
    swift_release();
    (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, enum case for Image.Scale.large(_:), v1);
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v18 = (uint64_t *)&v11[*(int *)(v40 + 36)];
    uint64_t v19 = sub_10017DF08(&qword_100EAADC0);
    (*(void (**)(char *, char *, uint64_t))(v2 + 16))((char *)v18 + *(int *)(v19 + 28), v4, v1);
    *uint64_t v18 = KeyPath;
    uint64_t v20 = v43;
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v11, v9, v43);
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v20);
    LOBYTE(v20) = static Edge.Set.vertical.getter();
    EdgeInsets.init(_all:)();
    uint64_t v22 = v21;
    uint64_t v24 = v23;
    uint64_t v26 = v25;
    uint64_t v28 = v27;
    sub_10006DF38((uint64_t)v11, (uint64_t)v13, (uint64_t *)&unk_100EAADA0);
    uint64_t v29 = &v13[*(int *)(v42 + 36)];
    *uint64_t v29 = v20;
    *((void *)v29 + 1) = v22;
    *((void *)v29 + 2) = v24;
    *((void *)v29 + 3) = v26;
    *((void *)v29 + 4) = v28;
    v29[40] = 0;
    sub_100178110((uint64_t)v11, (uint64_t *)&unk_100EAADA0);
    LOBYTE(v20) = static Edge.Set.horizontal.getter();
    EdgeInsets.init(_all:)();
    uint64_t v31 = v30;
    uint64_t v33 = v32;
    uint64_t v35 = v34;
    uint64_t v37 = v36;
    uint64_t v38 = v44;
    sub_10006DF38((uint64_t)v13, v44, &qword_100EAAD90);
    uint64_t v39 = v38 + *(int *)(sub_10017DF08(&qword_100EAAD78) + 36);
    *(unsigned char *)uint64_t v39 = v20;
    *(void *)(v39 + 8) = v31;
    *(void *)(v39 + 16) = v33;
    *(void *)(v39 + 24) = v35;
    *(void *)(v39 + 32) = v37;
    *(unsigned char *)(v39 + 40) = 0;
    return sub_100178110((uint64_t)v13, &qword_100EAAD90);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100A2C4FC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for DispatchQoS();
  uint64_t v6 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001ABC4C(0, (unint64_t *)&qword_100E62D10);
  uint64_t v9 = (void *)static OS_dispatch_queue.main.getter();
  sub_100A2F478(a1, (uint64_t)v17);
  uint64_t v10 = (_OWORD *)swift_allocObject();
  long long v11 = v17[1];
  v10[1] = v17[0];
  v10[2] = v11;
  v10[3] = v17[2];
  aBlock[4] = sub_100A2F4F0;
  aBlock[5] = v10;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10010A4D4;
  aBlock[3] = &unk_100E33CB0;
  uint64_t v12 = _Block_copy(aBlock);
  swift_release();
  static DispatchQoS.unspecified.getter();
  *(void *)&v17[0] = _swiftEmptyArrayStorage;
  sub_1000F6744((unint64_t *)&qword_100EA0200, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10017DF08(&qword_100E75530);
  sub_1001246C8((unint64_t *)&qword_100EA0210, &qword_100E75530);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v12);

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v15);
}

void sub_100A2C7EC()
{
  uint64_t v0 = (void *)sub_100A2C868();
  if (v0)
  {
    id v1 = v0;
    [v0 setPresentsWithGesture:0];
    [v1 setDisplayModeButtonVisibility:1];
  }
}

uint64_t sub_100A2C868()
{
  id v0 = [self sharedApplication];
  id v1 = (void *)UIApplication.maybeWindow.getter();

  if (!v1) {
    return 0;
  }
  id v2 = [v1 rootViewController];

  if (!v2) {
    return 0;
  }
  uint64_t v3 = sub_100A2C8F8(v2);

  return v3;
}

uint64_t sub_100A2C8F8(void *a1)
{
  self;
  uint64_t v2 = swift_dynamicCastObjCClass();
  if (v2)
  {
    uint64_t v3 = v2;
    id v4 = a1;
  }
  else
  {
    id v5 = [a1 childViewControllers];
    sub_1001ABC4C(0, &qword_100EAAD10);
    unint64_t v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (v6 >> 62) {
      goto LABEL_16;
    }
    uint64_t v7 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
    while (v7)
    {
      uint64_t v8 = 4;
      while (1)
      {
        id v9 = (v6 & 0xC000000000000001) != 0
           ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)()
           : *(id *)(v6 + 8 * v8);
        uint64_t v10 = v9;
        uint64_t v11 = v8 - 3;
        if (__OFADD__(v8 - 4, 1)) {
          break;
        }
        uint64_t v3 = sub_100A2C8F8(v9);

        if (v3)
        {
          swift_bridgeObjectRelease();
          return v3;
        }
        ++v8;
        if (v11 == v7) {
          goto LABEL_12;
        }
      }
      __break(1u);
LABEL_16:
      swift_bridgeObjectRetain();
      uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
LABEL_12:
    swift_bridgeObjectRelease();
    return 0;
  }
  return v3;
}

uint64_t sub_100A2CA5C@<X0>(uint64_t a1@<X1>, char a2@<W2>, uint64_t a3@<X8>)
{
  char v5 = a2 & 1;
  sub_100195B7C(a1, a2 & 1);
  sub_100149AE8();
  sub_10018F6D8(a1, v5);
  sub_10017DF08(&qword_100EAAE40);
  sub_1001246C8(&qword_100EAAE48, &qword_100EAAE40);
  View.accessibilityHidden(_:)();
  uint64_t v6 = static Alignment.center.getter();
  uint64_t v8 = v7;
  uint64_t v9 = a3 + *(int *)(sub_10017DF08(&qword_100EAAE50) + 36);
  sub_100A2CB5C(a1, v5, v9);
  uint64_t result = sub_10017DF08(&qword_100EAAE58);
  uint64_t v11 = (uint64_t *)(v9 + *(int *)(result + 36));
  *uint64_t v11 = v6;
  v11[1] = v8;
  return result;
}

uint64_t sub_100A2CB5C@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v6 = type metadata accessor for AccessibilityTraits();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10017DF08((uint64_t *)&unk_100EAAE60);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v43 = (uint64_t)&v36 - v14;
  a2 &= 1u;
  sub_100195B7C(a1, a2);
  sub_100149AE8();
  char v16 = v15;
  sub_10018F6D8(a1, a2);
  if (v16)
  {
    uint64_t v17 = sub_10017DF08(&qword_100E947A8);
    v44[10] = sub_100874AAC;
    v44[11] = 0;
    LOBYTE(v44[12]) = 0;
    v44[0] = v17;
    if (qword_100E62290 != -1) {
      swift_once();
    }
    uint64_t v37 = v12;
    uint64_t v38 = v9;
    uint64_t v39 = v7;
    uint64_t v40 = v6;
    uint64_t v41 = v10;
    uint64_t v42 = a3;
    swift_beginAccess();
    uint64_t result = sub_10006DF38((uint64_t)&xmmword_100F51398, (uint64_t)v45, &qword_100E6F2A0);
    if (*((void *)&v45[1] + 1))
    {
      sub_1001262E4(v45, (uint64_t)&v44[3]);
      v44[1] = sub_100A2D060;
      v44[2] = 0;
      uint64_t v19 = Dictionary.init(dictionaryLiteral:)();
      v44[8] = _swiftEmptyArrayStorage;
      v44[9] = v19;
      memcpy(v45, v44, 0x61uLL);
      sub_10006DF38((uint64_t)v45, (uint64_t)v44, &qword_100EAAE70);
      v44[13] = 0x4000000000000000;
      sub_100178110((uint64_t)v45, &qword_100EAAE70);
      uint64_t v36 = static HorizontalAlignment.center.getter();
      static Alignment.center.getter();
      _FrameLayout.init(width:height:alignment:)();
      uint64_t v20 = v57;
      char v21 = v58;
      uint64_t v22 = v59;
      char v23 = v60;
      uint64_t v25 = v61;
      uint64_t v24 = v62;
      VerticalEdge.rawValue.getter();
      char v26 = Edge.init(rawValue:)();
      uint64_t v27 = static SafeAreaRegions.container.getter();
      sub_10006DF38((uint64_t)v44, (uint64_t)v45, &qword_100EAAE78);
      uint64_t v46 = v20;
      char v47 = v21;
      uint64_t v48 = v22;
      char v49 = v23;
      uint64_t v50 = v25;
      uint64_t v51 = v24;
      uint64_t v52 = v27;
      uint64_t v53 = 0;
      char v54 = 1;
      char v55 = v26;
      uint64_t v56 = v36;
      sub_100178110((uint64_t)v44, &qword_100EAAE78);
      sub_10017DF08((uint64_t *)&unk_100EAAE80);
      uint64_t v28 = v39;
      uint64_t v29 = swift_allocObject();
      *(_OWORD *)(v29 + 16) = xmmword_100C251B0;
      static AccessibilityTraits.isModal.getter();
      v44[0] = v29;
      sub_1000F6744(&qword_100E742F8, (void (*)(uint64_t))&type metadata accessor for AccessibilityTraits);
      sub_10017DF08((uint64_t *)&unk_100EAAE90);
      sub_1001246C8(&qword_100E74300, (uint64_t *)&unk_100EAAE90);
      uint64_t v30 = v38;
      uint64_t v31 = v40;
      dispatch thunk of SetAlgebra.init<A>(_:)();
      sub_10017DF08(&qword_100EAAEA0);
      sub_100A2FCFC();
      uint64_t v32 = (uint64_t)v37;
      View.accessibilityAddTraits(_:)();
      (*(void (**)(char *, uint64_t))(v28 + 8))(v30, v31);
      sub_100178110((uint64_t)v45, &qword_100EAAEA0);
      uint64_t v33 = v43;
      sub_10024D364(v32, v43, (uint64_t *)&unk_100EAAE60);
      uint64_t v34 = v33;
      uint64_t v35 = v42;
      sub_10024D364(v34, v42, (uint64_t *)&unk_100EAAE60);
      return _s7Weather24LocationCompositionStateOwst_0(v35, 0, 1, v41);
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    return _s7Weather24LocationCompositionStateOwst_0(a3, 1, 1, v10);
  }
  return result;
}

uint64_t sub_100A2D060(void *a1)
{
  return sub_100A2D078(a1, (uint64_t (*)(void))sub_1003FF548);
}

uint64_t sub_100A2D078(void *a1, uint64_t (*a2)(void))
{
  return a2();
}

uint64_t sub_100A2D0BC@<X0>(uint64_t a1@<X8>)
{
  return sub_100A2CA5C(*(void *)v1, *(unsigned char *)(v1 + 8), a1);
}

uint64_t sub_100A2D0C8()
{
  return EnvironmentValues.scenePhase.getter();
}

uint64_t sub_100A2D0EC(uint64_t a1)
{
  type metadata accessor for ScenePhase();
  sub_100179C0C();
  __n128 v3 = __chkstk_darwin(v2);
  (*(void (**)(char *, uint64_t, __n128))(v5 + 16))((char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v3);
  return EnvironmentValues.scenePhase.setter();
}

uint64_t sub_100A2D194@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = EnvironmentValues.accentColor.getter();
  *a1 = result;
  return result;
}

uint64_t sub_100A2D1C0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = EnvironmentValues.accentColor.getter();
  *a1 = result;
  return result;
}

uint64_t sub_100A2D1EC()
{
  return EnvironmentValues.accentColor.setter();
}

uint64_t sub_100A2D224()
{
  return EnvironmentValues.scenePhase.getter();
}

uint64_t sub_100A2D250(uint64_t a1, uint64_t a2)
{
  return sub_1000237FC(a1, a2, type metadata accessor for MainView, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100A264F8);
}

uint64_t sub_100A2D280(uint64_t a1, uint64_t a2)
{
  return sub_100A269F0(a1, a2);
}

uint64_t sub_100A2D300()
{
  return EnvironmentValues.finishLaunchTest.getter();
}

uint64_t sub_100A2D324(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_100A2D35C(uint64_t a1)
{
  return a1;
}

void *sub_100A2D38C(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    long long v7 = *(_OWORD *)(a2 + 3);
    *(_OWORD *)(a1 + 24) = v7;
    (**(void (***)(uint64_t, uint64_t *))(v7 - 8))(a1, a2);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (void *)((char *)v4 + v8);
    uint64_t v10 = (uint64_t *)((char *)a2 + v8);
    sub_10017DF08(&qword_100EAA740);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v11 = type metadata accessor for ScenePhase();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    }
    else
    {
      *uint64_t v9 = *v10;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return v4;
}

uint64_t sub_100A2D4E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v5 = *(int *)(a3 + 20);
  uint64_t v6 = (void *)(a1 + v5);
  long long v7 = (const void *)(a2 + v5);
  uint64_t v8 = sub_10017DF08(&qword_100EAA740);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v9 = type metadata accessor for ScenePhase();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v9 - 8) + 32))(v6, v7, v9);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v6, v7, *(void *)(*(void *)(v8 - 8) + 64));
  }
  return a1;
}

uint64_t sub_100A2D5C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1);
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  if (a1 != a2)
  {
    uint64_t v7 = *(int *)(a3 + 20);
    uint64_t v8 = (void *)(a1 + v7);
    uint64_t v9 = (const void *)(a2 + v7);
    sub_100178110(a1 + v7, &qword_100EAA740);
    uint64_t v10 = sub_10017DF08(&qword_100EAA740);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v11 = type metadata accessor for ScenePhase();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v11 - 8) + 32))(v8, v9, v11);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_100A2D6C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100A2D6D4);
}

uint64_t sub_100A2D6D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF) {
    return sub_100163020(*(void *)(a1 + 24));
  }
  uint64_t v7 = sub_10017DF08(&qword_100E6DC20);
  uint64_t v8 = a1 + *(int *)(a3 + 20);

  return _s7Weather24LocationCompositionStateOwet_0(v8, a2, v7);
}

uint64_t sub_100A2D754(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100A2D768);
}

void sub_100A2D768()
{
  sub_100163298();
  if (v3)
  {
    *(void *)(v1 + 24) = (v0 - 1);
  }
  else
  {
    uint64_t v4 = v2;
    uint64_t v5 = sub_10017DF08(&qword_100E6DC20);
    uint64_t v6 = v1 + *(int *)(v4 + 20);
    _s7Weather24LocationCompositionStateOwst_0(v6, v0, v0, v5);
  }
}

uint64_t assignWithTake for CompactContent(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_release();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_release();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1 + 32);
  long long v6 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v6;
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  return a1;
}

uint64_t destroy for RegularContent(uint64_t a1)
{
  uint64_t v2 = a1 + 56;
  swift_release();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1 + 16);

  return _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v2);
}

uint64_t initializeWithCopy for RegularContent(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = a2 + 16;
  long long v6 = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 40) = v6;
  uint64_t v7 = v6;
  uint64_t v8 = **(void (***)(uint64_t, uint64_t, uint64_t))(v6 - 8);
  swift_retain();
  v8(a1 + 16, v5, v7);
  long long v9 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 80) = v9;
  (**(void (***)(uint64_t, uint64_t))(v9 - 8))(a1 + 56, a2 + 56);
  return a1;
}

void *assignWithCopy for RegularContent(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  sub_1000C1E18(a1 + 2, a2 + 2);
  sub_1000C1E18(a1 + 7, a2 + 7);
  return a1;
}

uint64_t assignWithTake for RegularContent(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v4;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1 + 56);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  return a1;
}

uint64_t getEnumTagSinglePayload for RegularContent(uint64_t *a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *((unsigned char *)a1 + 96))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      uint64_t v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for RegularContent(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 96) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 96) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t sub_100A2DAE8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100A2DB04()
{
  uint64_t v1 = *(void *)(type metadata accessor for MainViewScenePhaseObservationViewModifier(0) - 8);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + ((*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80)));
  sub_10017DF08(&qword_100EAA740);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    type metadata accessor for ScenePhase();
    sub_100162E4C();
    sub_100162F0C();
    v2();
  }
  else
  {
    swift_release();
  }

  return swift_deallocObject();
}

uint64_t sub_100A2DC14(unsigned char *a1)
{
  return sub_100A27CCC(a1, (uint64_t *)(v1 + 16));
}

void sub_100A2DC1C(uint64_t a1, void *a2)
{
  sub_1001ABC4C(0, &qword_100EAABF0);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [a2 setBackgroundEffects:isa];
}

uint64_t sub_100A2DCA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for MainViewModel(0);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v11[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11[3] = type metadata accessor for MainInteractor();
  v11[4] = &off_100E1EA00;
  v11[0] = a1;
  *(unsigned char *)(a3 + 64) = 0;
  ObservationRegistrar.init()();
  sub_10020D948((uint64_t)v11, a3 + 24);
  *(void *)(a3 + 16) = a2;
  swift_retain();
  sub_1001BFFC8();
  sub_100A291F8();
  swift_release();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v11);
  sub_10008DEE0((uint64_t)v8);
  return a3;
}

uint64_t sub_100A2DDA4(uint64_t a1, uint64_t a2)
{
  uint64_t v14 = type metadata accessor for MainInteractor();
  char v15 = &off_100E1EA00;
  v13[0] = a1;
  type metadata accessor for WeatherSplitViewBindingModel(0);
  uint64_t v4 = swift_allocObject();
  uint64_t v5 = sub_1000DF0C4((uint64_t)v13, v14);
  __n128 v6 = __chkstk_darwin(v5);
  uint64_t v8 = (void *)((char *)&v13[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, __n128))(v9 + 16))(v8, v6);
  uint64_t v10 = sub_100A2DCA0(*v8, a2, v4);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v13);
  return v10;
}

uint64_t sub_100A2DEC0(uint64_t a1, uint64_t a2)
{
  return a2;
}

unint64_t sub_100A2DEF8()
{
  unint64_t result = qword_100EAA8F8;
  if (!qword_100EAA8F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAA8F8);
  }
  return result;
}

uint64_t sub_100A2DF44(uint64_t a1)
{
  return a1;
}

uint64_t sub_100A2DF78()
{
  swift_release();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 32);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 72);

  return swift_deallocObject();
}

uint64_t sub_100A2DFC0()
{
  return sub_100A27F6C();
}

uint64_t sub_100A2DFC8@<X0>(uint64_t a1@<X8>)
{
  return sub_100A27FD4(a1);
}

unint64_t sub_100A2DFD0()
{
  unint64_t result = qword_100EAA908;
  if (!qword_100EAA908)
  {
    sub_10018C6DC(&qword_100EAA900);
    sub_1001246C8(&qword_100EAA910, &qword_100EAA918);
    sub_1001246C8((unint64_t *)&unk_100EAA920, &qword_100EA6650);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAA908);
  }
  return result;
}

uint64_t sub_100A2E094()
{
  return sub_1000F3594();
}

uint64_t sub_100A2E0BC()
{
  uint64_t v0 = sub_100A29158();
  return sub_100182AB8(v0);
}

uint64_t sub_100A2E0E8()
{
  return sub_100A291F8();
}

void sub_100A2E110()
{
  *(unsigned char *)(*(void *)(v0 + 16) + 64) = *(unsigned char *)(v0 + 24);
}

uint64_t sub_100A2E124()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100A2E15C()
{
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100A2E1A4(uint64_t a1)
{
  return sub_100A26DB4(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), v1 + 32);
}

double sub_100A2E1B4@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100A27B8C(a1, v2 + 16, a2);
}

uint64_t sub_100A2E1D0()
{
  return sub_100A27920(*(void *)(v0 + 16));
}

uint64_t sub_100A2E1DC(void *a1)
{
  return sub_100A278D8(a1);
}

uint64_t destroy for WeatherSplitView(uint64_t a1)
{
  swift_release();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1 + 16);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1 + 56);

  return swift_release();
}

uint64_t initializeWithCopy for WeatherSplitView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = a2 + 16;
  long long v6 = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 40) = v6;
  uint64_t v7 = v6;
  uint64_t v8 = **(void (***)(uint64_t, uint64_t, uint64_t))(v6 - 8);
  swift_retain();
  v8(a1 + 16, v5, v7);
  long long v9 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 80) = v9;
  (**(void (***)(uint64_t, uint64_t))(v9 - 8))(a1 + 56, a2 + 56);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_retain();
  return a1;
}

void *assignWithCopy for WeatherSplitView(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  sub_1000C1E18(a1 + 2, a2 + 2);
  sub_1000C1E18(a1 + 7, a2 + 7);
  a1[12] = a2[12];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for WeatherSplitView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v4;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1 + 56);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  uint64_t v5 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v5;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for WeatherSplitView(uint64_t *a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *((unsigned char *)a1 + 104))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      uint64_t v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for WeatherSplitView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 104) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 104) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WeatherSplitView()
{
  return &type metadata for WeatherSplitView;
}

ValueMetadata *type metadata accessor for MainViewPrimaryModuleModulePreferenceKey()
{
  return &type metadata for MainViewPrimaryModuleModulePreferenceKey;
}

ValueMetadata *type metadata accessor for RecordMainViewPrimaryModuleModifier()
{
  return &type metadata for RecordMainViewPrimaryModuleModifier;
}

uint64_t sub_100A2E4EC()
{
  return sub_100126084();
}

unint64_t sub_100A2E5B8()
{
  unint64_t result = qword_100EAAAE0;
  if (!qword_100EAAAE0)
  {
    sub_10018C6DC(&qword_100EAAAE8);
    sub_100A2E658();
    sub_1001246C8(&qword_100EAAB08, &qword_100EAAB10);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAAAE0);
  }
  return result;
}

unint64_t sub_100A2E658()
{
  unint64_t result = qword_100EAAAF0;
  if (!qword_100EAAAF0)
  {
    sub_10018C6DC(&qword_100EAAAF8);
    sub_100A2E6D4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAAAF0);
  }
  return result;
}

unint64_t sub_100A2E6D4()
{
  unint64_t result = qword_100EAAB00;
  if (!qword_100EAAB00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAAB00);
  }
  return result;
}

uint64_t sub_100A2E724()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_100A2E740(uint64_t a1)
{
  unint64_t result = sub_100A2E768();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_100A2E768()
{
  unint64_t result = qword_100EAAB48;
  if (!qword_100EAAB48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAAB48);
  }
  return result;
}

uint64_t sub_100A2E7B4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100A2E7D0@<X0>(void *a1@<X8>)
{
  return sub_100A28C70(*(void *)(v1 + 16), a1);
}

uint64_t sub_100A2E7D8@<X0>(void *a1@<X8>)
{
  return sub_100A28CBC(*(void *)(v1 + 16), a1);
}

unint64_t sub_100A2E7E0()
{
  unint64_t result = qword_100EAAB70;
  if (!qword_100EAAB70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAAB70);
  }
  return result;
}

unint64_t sub_100A2E82C()
{
  unint64_t result = qword_100EAAB78;
  if (!qword_100EAAB78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAAB78);
  }
  return result;
}

unint64_t sub_100A2E880()
{
  unint64_t result = qword_100EAAB90;
  if (!qword_100EAAB90)
  {
    sub_10018C6DC(&qword_100EAAB58);
    sub_100A2E8FC();
    sub_100A2E9CC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAAB90);
  }
  return result;
}

unint64_t sub_100A2E8FC()
{
  unint64_t result = qword_100EAAB98;
  if (!qword_100EAAB98)
  {
    sub_10018C6DC(&qword_100EAAB50);
    sub_1001246C8(&qword_100EAABA0, &qword_100EAABA8);
    sub_1000F6744(&qword_100EAABB0, (void (*)(uint64_t))type metadata accessor for RecordPinnedMapAnimatingViewModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAAB98);
  }
  return result;
}

unint64_t sub_100A2E9CC()
{
  unint64_t result = qword_100EAABB8;
  if (!qword_100EAABB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAABB8);
  }
  return result;
}

void *sub_100A2EA1C(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_retain();
  swift_retain();
  return a1;
}

void *assignWithCopy for RecordMainStateChangesIntoEnvironmentState(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for RecordMainStateChangesIntoEnvironmentState(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for RecordMainStateChangesIntoEnvironmentState()
{
  return &type metadata for RecordMainStateChangesIntoEnvironmentState;
}

uint64_t destroy for SplitViewDetailPane(uint64_t a1)
{
  return _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1 + 8);
}

uint64_t initializeWithCopy for SplitViewDetailPane(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  long long v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 32) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a1 + 8, a2 + 8);
  return a1;
}

void *assignWithCopy for SplitViewDetailPane(void *a1, void *a2)
{
  *a1 = *a2;
  sub_1000C1E18(a1 + 1, a2 + 1);
  return a1;
}

uint64_t assignWithTake for SplitViewDetailPane(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1 + 8);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  return a1;
}

uint64_t getEnumTagSinglePayload for SplitViewDetailPane(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 48))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 32);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SplitViewDetailPane(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 32) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SplitViewDetailPane()
{
  return &type metadata for SplitViewDetailPane;
}

uint64_t destroy for SplitViewSidebarPane(uint64_t a1)
{
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1 + 8);

  return _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1 + 48);
}

uint64_t initializeWithCopy for SplitViewSidebarPane(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 32) = v4;
  (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1 + 8, a2 + 8);
  long long v5 = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 72) = v5;
  (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1 + 48, a2 + 48);
  return a1;
}

void *assignWithCopy for SplitViewSidebarPane(void *a1, void *a2)
{
  *a1 = *a2;
  long long v4 = a1 + 6;
  sub_1000C1E18(a1 + 1, a2 + 1);
  sub_1000C1E18(v4, a2 + 6);
  return a1;
}

uint64_t assignWithTake for SplitViewSidebarPane(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1 + 8);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1 + 48);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  return a1;
}

uint64_t getEnumTagSinglePayload for SplitViewSidebarPane(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 88))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 32);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SplitViewSidebarPane(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 88) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 32) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 88) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SplitViewSidebarPane()
{
  return &type metadata for SplitViewSidebarPane;
}

unint64_t sub_100A2EEF4()
{
  unint64_t result = qword_100EAAC08;
  if (!qword_100EAAC08)
  {
    sub_10018C6DC(&qword_100EAABC8);
    sub_10018C6DC(&qword_100EAAB60);
    type metadata accessor for BalancedNavigationSplitViewStyle();
    sub_10010A458(&qword_100EAAB88, &qword_100EAAB60, (void (*)(void))sub_100A2E880);
    sub_1000F6744(&qword_100EAABC0, (void (*)(uint64_t))&type metadata accessor for BalancedNavigationSplitViewStyle);
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAAC08);
  }
  return result;
}

unint64_t sub_100A2F024()
{
  unint64_t result = qword_100EAAC10;
  if (!qword_100EAAC10)
  {
    sub_10018C6DC(&qword_100EAAC00);
    sub_1001246C8(&qword_100EAAC18, &qword_100EAABF8);
    sub_1001246C8(&qword_100EAAC20, &qword_100EAAC28);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAAC10);
  }
  return result;
}

uint64_t sub_100A2F0E8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100A2F104()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100A2F120()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100A2F13C(uint64_t a1, uint64_t a2)
{
  return a2;
}

double sub_100A2F178@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100A2A7F4(a1, (uint64_t *)(v2 + 16), a2);
}

uint64_t sub_100A2F180@<X0>(uint64_t a1@<X8>)
{
  return sub_100A2A83C(*(void *)(v1 + 16), a1);
}

uint64_t sub_100A2F188@<X0>(uint64_t a1@<X8>)
{
  return sub_100A2AB58(*(void *)(v1 + 16), a1);
}

unint64_t sub_100A2F190()
{
  unint64_t result = qword_100EAAC80;
  if (!qword_100EAAC80)
  {
    sub_10018C6DC(&qword_100EAAC78);
    sub_10018C6DC(&qword_100E8E4B8);
    type metadata accessor for AutomaticHoverEffect();
    sub_1001246C8(&qword_100EAAC90, &qword_100E8E4B8);
    sub_1000F6744(&qword_100EAAC98, (void (*)(uint64_t))&type metadata accessor for AutomaticHoverEffect);
    swift_getOpaqueTypeConformance2();
    sub_1000F6744((unint64_t *)&qword_100EAACA0, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAAC80);
  }
  return result;
}

uint64_t sub_100A2F2E8()
{
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 24);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 64);

  return swift_deallocObject();
}

uint64_t sub_100A2F328()
{
  return sub_100A2AF48(v0 + 16);
}

unint64_t sub_100A2F338()
{
  unint64_t result = qword_100EAACE8;
  if (!qword_100EAACE8)
  {
    sub_10018C6DC(&qword_100EAACC8);
    sub_100A2F3D8();
    sub_1001246C8(&qword_100EAAD00, &qword_100EAACE0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAACE8);
  }
  return result;
}

unint64_t sub_100A2F3D8()
{
  unint64_t result = qword_100EAACF0;
  if (!qword_100EAACF0)
  {
    sub_10018C6DC(&qword_100EAACC0);
    sub_1001246C8(&qword_100EAACF8, &qword_100EAACB8);
    sub_10022736C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAACF0);
  }
  return result;
}

uint64_t sub_100A2F478(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_100A2F4B0()
{
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 24);

  return swift_deallocObject();
}

uint64_t sub_100A2F4E8()
{
  return sub_100A2C4FC(v0 + 16);
}

void sub_100A2F4F0()
{
}

uint64_t sub_100A2F4F8(void *a1)
{
  return sub_100A2B8E8(a1);
}

unint64_t sub_100A2F500()
{
  unint64_t result = qword_100EAAD38;
  if (!qword_100EAAD38)
  {
    sub_10018C6DC(&qword_100EAAD30);
    sub_1001246C8((unint64_t *)&unk_100EAA9F0, &qword_100E7CF80);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAAD38);
  }
  return result;
}

uint64_t sub_100A2F5A0()
{
  uint64_t v0 = sub_10029A170();
  return sub_100182AB8(v0);
}

uint64_t sub_100A2F5CC(unsigned __int8 *a1)
{
  return sub_10029A190(*a1);
}

uint64_t sub_100A2F5FC@<X0>(unsigned char *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100A2B930(a1, v2 + 16, a2);
}

uint64_t sub_100A2F604()
{
  return sub_100A2BFC8(v0 + 16);
}

uint64_t sub_100A2F60C()
{
  return sub_10010A458(&qword_100EAAD88, &qword_100EAAD90, (void (*)(void))sub_100A2F63C);
}

unint64_t sub_100A2F63C()
{
  unint64_t result = qword_100EAAD98;
  if (!qword_100EAAD98)
  {
    sub_10018C6DC((uint64_t *)&unk_100EAADA0);
    sub_10018C6DC(&qword_100E651D0);
    sub_1001246C8((unint64_t *)&unk_100EAADB0, &qword_100E651D0);
    swift_getOpaqueTypeConformance2();
    sub_1001246C8(&qword_100E6F778, &qword_100EAADC0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAAD98);
  }
  return result;
}

unint64_t sub_100A2F750()
{
  unint64_t result = qword_100EAADD8;
  if (!qword_100EAADD8)
  {
    sub_10018C6DC(&qword_100EAAD60);
    sub_10018C6DC(&qword_100EAAD50);
    type metadata accessor for AutomaticHoverEffect();
    sub_1001246C8(&qword_100EAADC8, &qword_100EAAD50);
    sub_1000F6744(&qword_100EAAC98, (void (*)(uint64_t))&type metadata accessor for AutomaticHoverEffect);
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAADD8);
  }
  return result;
}

uint64_t sub_100A2F87C()
{
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100A2F8BC(uint64_t a1, unsigned __int8 *a2)
{
  return sub_100A2911C(a1, a2);
}

unint64_t sub_100A2F8C8()
{
  unint64_t result = qword_100EAAE10;
  if (!qword_100EAAE10)
  {
    sub_10018C6DC(&qword_100EAADF8);
    sub_100A2F968();
    sub_1001246C8(&qword_100E70D10, &qword_100EAAE30);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAAE10);
  }
  return result;
}

unint64_t sub_100A2F968()
{
  unint64_t result = qword_100EAAE18;
  if (!qword_100EAAE18)
  {
    sub_10018C6DC(&qword_100EAADF0);
    sub_1001246C8((unint64_t *)&unk_100EAAE20, &qword_100EAAE08);
    sub_1001246C8(&qword_100E70D10, &qword_100EAAE30);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAAE18);
  }
  return result;
}

ValueMetadata *type metadata accessor for DetailViewSearchOverlayViewModifier()
{
  return &type metadata for DetailViewSearchOverlayViewModifier;
}

uint64_t sub_100A2FA3C()
{
  return sub_100126084();
}

unint64_t sub_100A2FB4C()
{
  unint64_t result = qword_100EAAE38;
  if (!qword_100EAAE38)
  {
    sub_10018C6DC(&qword_100EAAD08);
    sub_10018C6DC(&qword_100EAACC8);
    sub_100A2F338();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAAE38);
  }
  return result;
}

uint64_t sub_100A2FBFC()
{
  return sub_100126084();
}

uint64_t sub_100A2FCE0()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_100A2FCFC()
{
  unint64_t result = qword_100EAAEA8;
  if (!qword_100EAAEA8)
  {
    sub_10018C6DC(&qword_100EAAEA0);
    sub_100A2FD9C();
    sub_1001246C8(&qword_100EAAED0, &qword_100EAAED8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAAEA8);
  }
  return result;
}

unint64_t sub_100A2FD9C()
{
  unint64_t result = qword_100EAAEB0;
  if (!qword_100EAAEB0)
  {
    sub_10018C6DC(&qword_100EAAE78);
    sub_1001246C8(&qword_100EAAEB8, &qword_100EAAE70);
    sub_1001246C8((unint64_t *)&unk_100EAAEC0, &qword_100E745B8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAAEB0);
  }
  return result;
}

unint64_t sub_100A2FE64()
{
  unint64_t result = qword_100EAAEE0;
  if (!qword_100EAAEE0)
  {
    sub_10018C6DC(&qword_100EAAE50);
    sub_100A2FF04();
    sub_1001246C8(&qword_100EAAEF8, &qword_100EAAE58);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAAEE0);
  }
  return result;
}

unint64_t sub_100A2FF04()
{
  unint64_t result = qword_100EAAEE8;
  if (!qword_100EAAEE8)
  {
    sub_10018C6DC(&qword_100EAAEF0);
    sub_1001246C8(&qword_100EAAE48, &qword_100EAAE40);
    sub_1000F6744((unint64_t *)&qword_100EAACA0, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAAEE8);
  }
  return result;
}

uint64_t *sub_100A2FFE8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = type metadata accessor for Location();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
  }
  return a1;
}

uint64_t sub_100A300E4(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 1)
  {
    uint64_t v3 = type metadata accessor for Location();
    long long v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
    return v4(a1, v3);
  }
  return result;
}

void *sub_100A30160(void *a1, const void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = type metadata accessor for Location();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

void *sub_100A30218(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_100A302E0((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = type metadata accessor for Location();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_100A302E0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for LocationPreviewViewAction();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void *sub_100A3033C(void *a1, const void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = type metadata accessor for Location();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

void *sub_100A303F4(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_100A302E0((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = type metadata accessor for Location();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_100A304BC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for LocationPreviewViewAction();
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10017DF08(&qword_100EAAFB0);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100A30814(v2, (uint64_t)v6);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      Dictionary.init(dictionaryLiteral:)();
      ShortDescription.init(name:_:)();
      sub_100A302E0((uint64_t)v6);
      break;
    default:
      Dictionary.init(dictionaryLiteral:)();
      ShortDescription.init(name:_:)();
      break;
  }
  a1[3] = v7;
  a1[4] = sub_100A30878();
  uint64_t v11 = sub_100170694(a1);
  return (*(uint64_t (**)(uint64_t *, char *, uint64_t))(v8 + 32))(v11, v10, v7);
}

uint64_t sub_100A30788()
{
  sub_100A308CC(&qword_100EAAFC0);

  return ShortDescribable.description.getter();
}

uint64_t sub_100A307E0()
{
  return sub_100A308CC(&qword_100EAAFA8);
}

uint64_t sub_100A30814(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for LocationPreviewViewAction();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_100A30878()
{
  unint64_t result = qword_100EAAFB8;
  if (!qword_100EAAFB8)
  {
    sub_10018C6DC(&qword_100EAAFB0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAAFB8);
  }
  return result;
}

uint64_t sub_100A308CC(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for LocationPreviewViewAction();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

BOOL sub_100A30910(unsigned __int8 a1, unsigned __int8 a2)
{
  if (a1 == 4) {
    return a2 == 4;
  }
  if (a1 == 3) {
    return a2 == 3;
  }
  if (a2 - 3 < 2) {
    return 0;
  }
  return a1 == a2;
}

double sub_100A30964()
{
  double v1 = *(double *)(v0 + 40);
  sub_1000E0E14(v0 + 8, (uint64_t)v11);
  sub_1000E0E14((uint64_t)v11, (uint64_t)v12);
  double v2 = v12[0];
  if (v13 == 1)
  {
    sub_1000E0E84();
    sub_1000E0DAC(v0 + 49, (uint64_t)&v10);
    sub_1000E0DAC((uint64_t)&v10, (uint64_t)&v14);
    sub_1001809F4();
    unsigned __int8 v3 = sub_1001D2114();
    double v4 = sub_10017D9F8(v3);
    if (v6) {
      double v2 = v5;
    }
    else {
      double v2 = v4;
    }
  }
  double v7 = sub_10017ED44();
  return v1 * v7 + v2 * (double)v8;
}

uint64_t sub_100A30A24(unsigned __int8 a1)
{
  return 2 * a1 + 2;
}

BOOL sub_100A30A34(unsigned __int8 a1, unsigned __int8 a2)
{
  return a1 < a2;
}

uint64_t sub_100A30A44(unint64_t a1)
{
  if (a1 >= 7) {
    return 3;
  }
  else {
    return (0x2030103000303uLL >> (8 * a1));
  }
}

BOOL sub_100A30A6C(double a1, double a2, double a3, double a4)
{
  return a2 == a4 && a1 == a3;
}

BOOL sub_100A30A80(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  BOOL v8 = *(double *)&a2 == *(double *)&a6;
  if (*(double *)&a3 != *(double *)&a7) {
    BOOL v8 = 0;
  }
  if (*(double *)&a1 != *(double *)&a5) {
    BOOL v8 = 0;
  }
  if ((a8 & 1) == 0) {
    BOOL v8 = 0;
  }
  BOOL v9 = *(double *)&a1 == *(double *)&a5;
  if (a8) {
    BOOL v9 = 0;
  }
  if (a4) {
    return v8;
  }
  else {
    return v9;
  }
}

Swift::Int sub_100A30AD8()
{
  return sub_1006526C8(*v0);
}

void sub_100A30AE0(uint64_t a1)
{
  sub_1002C321C(a1, *v1);
}

Swift::Int sub_100A30AE8(uint64_t a1)
{
  return sub_1002C41AC(a1, *v1);
}

uint64_t sub_100A30AF0@<X0>(unint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_100A30A44(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_100A30B1C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_100A30A24(*v1);
  *a1 = result;
  return result;
}

BOOL sub_100A30B48(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_100A30A34(*a1, *a2);
}

BOOL sub_100A30B54(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1005703B4(*a1, *a2);
}

BOOL sub_100A30B60(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_100570030(*a1, *a2);
}

BOOL sub_100A30B6C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1005700C8(*a1, *a2);
}

BOOL sub_100A30B78(double *a1, double *a2)
{
  return sub_100A30A6C(*a1, a1[1], *a2, a2[1]);
}

BOOL sub_100A30B84(uint64_t a1, uint64_t a2)
{
  return sub_100A30A80(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(unsigned char *)(a1 + 24), *(void *)a2, *(void *)(a2 + 8), *(void *)(a2 + 16), *(unsigned char *)(a2 + 24));
}

BOOL sub_100A30BA8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_100A30910(*a1, *a2);
}

uint64_t sub_100A30BB4(double a1)
{
  sub_1000E0DAC(v1 + 49, (uint64_t)&v14);
  sub_1000E0DAC((uint64_t)&v14, (uint64_t)&v15);
  if (v15 == 3) {
    return 0;
  }
  if (v15 == 4)
  {
    double v3 = *(double *)(v1 + 56) * 0.0;
    sub_1000C4E58();
    double v5 = v4 + v3 + sub_1000E0E84();
  }
  else
  {
    uint64_t v7 = 2 * *(unsigned __int8 *)(v1 + 48) + 2;
    double v8 = *(double *)(v1 + 40) * (double)((2 * *(unsigned __int8 *)(v1 + 48)) | 1);
    double v9 = *(double *)(v1 + 56) + *(double *)(v1 + 56);
    sub_1000E0E14(v1 + 8, (uint64_t)v13);
    sub_1000E0E14((uint64_t)v13, (uint64_t)v16);
    double v10 = v16[0];
    if (v17 == 1)
    {
      double v11 = v16[0] - v9;
      double v12 = v11 - sub_1000E0E84() + -20.0;
      double v10 = v12 / dbl_100C73FC8[sub_1000E0EF0()];
      if (*(double *)(v1 + 64) < v10) {
        double v10 = *(double *)(v1 + 64);
      }
    }
    double v5 = a1 - (v8 + v9 + v10 * (double)v7) + -20.0;
  }
  return *(void *)&v5;
}

uint64_t sub_100A30CF4@<X0>(uint64_t *a1@<X8>)
{
  sub_10017DF08(&qword_100E635E0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100C34240;
  strcpy((char *)(inited + 32), "sizingBehavior");
  *(unsigned char *)(inited + 47) = -18;
  sub_1000E0E14(v1 + 8, (uint64_t)v10);
  *(void *)(inited + 72) = &unk_100E340D8;
  uint64_t v4 = swift_allocObject();
  *(void *)(inited + 48) = v4;
  sub_1000E0E14((uint64_t)v10, v4 + 16);
  *(void *)(inited + 80) = 0x6957726574747567;
  *(void *)(inited + 88) = 0xEB00000000687464;
  *(void *)(inited + 96) = *(void *)(v1 + 56);
  *(void *)(inited + 120) = &type metadata for CGFloat;
  *(void *)(inited + 128) = 0x69576E696772616DLL;
  *(void *)(inited + 136) = 0xEB00000000687464;
  *(void *)(inited + 144) = *(void *)(v1 + 40);
  *(void *)(inited + 168) = &type metadata for CGFloat;
  *(void *)(inited + 176) = 0xD000000000000017;
  *(void *)(inited + 184) = 0x8000000100CBABB0;
  *(unsigned char *)(inited + 192) = *(unsigned char *)(v1 + 48);
  *(void *)(inited + 216) = &unk_100E34048;
  strcpy((char *)(inited + 224), "mapPlacement");
  *(unsigned char *)(inited + 237) = 0;
  *(_WORD *)(inited + 238) = -5120;
  sub_1000E0DAC(v1 + 49, (uint64_t)&v9);
  *(void *)(inited + 264) = &unk_100E33FB8;
  sub_1000E0DAC((uint64_t)&v9, inited + 240);
  strcpy((char *)(inited + 272), "mapColumnCount");
  *(unsigned char *)(inited + 287) = -18;
  sub_1000E0DAC((uint64_t)&v9, (uint64_t)&v11);
  if (v11 - 3 >= 2)
  {
    double v8 = &unk_100E34048;
    LOBYTE(v7) = v11;
    sub_100098DB4(&v7, (_OWORD *)(inited + 288));
  }
  else
  {
    *(void *)(inited + 312) = &type metadata for String;
    *(void *)(inited + 288) = 0x3E6C696E3CLL;
    *(void *)(inited + 296) = 0xE500000000000000;
  }
  *(void *)(inited + 320) = 0x69576E6D756C6F63;
  *(void *)(inited + 328) = 0xEB00000000687464;
  *(double *)(inited + 336) = sub_10004D56C();
  *(void *)(inited + 360) = &type metadata for CGFloat;
  *(void *)(inited + 368) = 0xD000000000000011;
  *(void *)(inited + 376) = 0x8000000100CBABD0;
  double v5 = sub_1000E0B50();
  *(void *)(inited + 408) = &type metadata for CGFloat;
  *(double *)(inited + 384) = v5;
  Dictionary.init(dictionaryLiteral:)();
  a1[3] = sub_10017DF08(&qword_100EAAFE8);
  a1[4] = sub_100047B30(&qword_100EAAFF0, &qword_100EAAFE8);
  sub_100170694(a1);
  return ShortDescription.init(name:_:)();
}

uint64_t sub_100A30FD0@<X0>(uint64_t *a1@<X8>)
{
  memcpy(__dst, v1, sizeof(__dst));
  return sub_100A30CF4(a1);
}

uint64_t sub_100A31014()
{
  sub_100A31710();

  return ShortDescribable.description.getter();
}

uint64_t sub_100A31050@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t *a5@<X8>)
{
  sub_10017DF08(&qword_100EAB018);
  sub_10017CE00();
  uint64_t v13 = v12;
  __chkstk_darwin(v14);
  sub_10011BFD8();
  sub_10017DF08(&qword_100E635E0);
  uint64_t inited = swift_initStackObject();
  if (a4)
  {
    *(_OWORD *)(inited + 16) = xmmword_100C25ED0;
    *(void *)(inited + 32) = 0x6874646977;
    *(void *)(inited + 40) = 0xE500000000000000;
    *(void *)(inited + 48) = a1;
    *(void *)(inited + 72) = &type metadata for CGFloat;
    *(void *)(inited + 80) = 0x696F706B61657262;
    *(void *)(inited + 120) = &unk_100E33F20;
    *(void *)(inited + 88) = 0xEB0000000073746ELL;
    *(void *)(inited + 96) = a2;
    *(void *)(inited + 104) = a3;
  }
  else
  {
    char v16 = sub_1001841C8((__n128 *)inited, (__n128)xmmword_100C251B0);
    v16[2].n128_u64[0] = v17 & 0xFFFFFFFFFFFFLL | 0x6957000000000000;
    v16[2].n128_u64[1] = 0xEC0000003A687464;
    v16[4].n128_u64[1] = (unint64_t)&type metadata for CGFloat;
    v16[3].n128_u64[0] = a1;
  }
  Dictionary.init(dictionaryLiteral:)();
  ShortDescription.init(name:_:)();
  a5[3] = v5;
  a5[4] = sub_100047B30(&qword_100EAB020, &qword_100EAB018);
  uint64_t v18 = sub_100170694(a5);
  return (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v13 + 32))(v18, v6, v5);
}

uint64_t sub_100A3122C@<X0>(uint64_t *a1@<X8>)
{
  return sub_100A31050(*(void *)v1, *(void *)(v1 + 8), *(void *)(v1 + 16), *(unsigned char *)(v1 + 24), a1);
}

uint64_t sub_100A3123C()
{
  sub_100A3175C();

  return ShortDescribable.description.getter();
}

uint64_t sub_100A31278@<X0>(uint64_t *a1@<X8>, double a2@<D0>, double a3@<D1>)
{
  sub_10017DF08(&qword_100E635E0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100C25ED0;
  *(void *)(inited + 32) = 0x756F466F546F7774;
  *(void *)(inited + 40) = 0xE900000000000072;
  *(double *)(inited + 48) = a2;
  *(void *)(inited + 72) = &type metadata for CGFloat;
  *(void *)(inited + 80) = 0x69536F5472756F66;
  *(void *)(inited + 88) = 0xE900000000000078;
  *(void *)(inited + 120) = &type metadata for CGFloat;
  *(double *)(inited + 96) = a3;
  Dictionary.init(dictionaryLiteral:)();
  a1[3] = sub_10017DF08(&qword_100EAB030);
  a1[4] = sub_100047B30(&qword_100EAB038, &qword_100EAB030);
  sub_100170694(a1);
  return ShortDescription.init(name:_:)();
}

uint64_t sub_100A313A8@<X0>(uint64_t *a1@<X8>)
{
  return sub_100A31278(a1, *v1, v1[1]);
}

uint64_t sub_100A313B0()
{
  sub_100A317A8();

  return ShortDescribable.description.getter();
}

uint64_t sub_100A313EC@<X0>(unsigned __int8 a1@<W0>, uint64_t *a2@<X8>)
{
  sub_10017DF08(&qword_100EAB048);
  sub_10017CE00();
  __chkstk_darwin(v5);
  sub_10011BFD8();
  if (a1 == 4)
  {
    Dictionary.init(dictionaryLiteral:)();
    sub_10019DB74();
  }
  else if (a1 == 3)
  {
    Dictionary.init(dictionaryLiteral:)();
  }
  else
  {
    sub_10017DF08(&qword_100E635E0);
    uint64_t inited = (__n128 *)swift_initStackObject();
    long long v7 = sub_1001841C8(inited, (__n128)xmmword_100C251B0);
    v7[2].n128_u64[0] = v8 & 0xFFFFFFFFFFFFLL | 0x6F43000000000000;
    v7[2].n128_u64[1] = 0xEB00000000746E75;
    v7[4].n128_u64[1] = (unint64_t)&unk_100E34048;
    v7[3].n128_u8[0] = a1;
    Dictionary.init(dictionaryLiteral:)();
    sub_10019DB74();
  }
  ShortDescription.init(name:_:)();
  a2[3] = v2;
  a2[4] = sub_100047B30(&qword_100EAB050, &qword_100EAB048);
  sub_100170694(a2);
  sub_100181AC8();
  return v9();
}

uint64_t sub_100A315C8@<X0>(uint64_t *a1@<X8>)
{
  return sub_100A313EC(*v1, a1);
}

uint64_t sub_100A315D0()
{
  sub_100A317F4();

  return ShortDescribable.description.getter();
}

unint64_t sub_100A31614()
{
  unint64_t result = qword_100EAAFC8;
  if (!qword_100EAAFC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAAFC8);
  }
  return result;
}

unint64_t sub_100A31664()
{
  unint64_t result = qword_100EAAFD0;
  if (!qword_100EAAFD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAAFD0);
  }
  return result;
}

unint64_t sub_100A316B4()
{
  unint64_t result = qword_100EAAFE0;
  if (!qword_100EAAFE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAAFE0);
  }
  return result;
}

uint64_t sub_100A31700()
{
  return swift_deallocObject();
}

unint64_t sub_100A31710()
{
  unint64_t result = qword_100EAAFF8;
  if (!qword_100EAAFF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAAFF8);
  }
  return result;
}

unint64_t sub_100A3175C()
{
  unint64_t result = qword_100EAB028;
  if (!qword_100EAB028)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAB028);
  }
  return result;
}

unint64_t sub_100A317A8()
{
  unint64_t result = qword_100EAB040;
  if (!qword_100EAB040)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAB040);
  }
  return result;
}

unint64_t sub_100A317F4()
{
  unint64_t result = qword_100EAB058;
  if (!qword_100EAB058)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAB058);
  }
  return result;
}

uint64_t sub_100A31840(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFC)
  {
    unsigned int v2 = a2 + 4;
    if (a2 + 4 >= 0xFFFF00) {
      unsigned int v3 = 4;
    }
    else {
      unsigned int v3 = 2;
    }
    if (v2 >> 8 < 0xFF) {
      unsigned int v3 = 1;
    }
    if (v2 >= 0x100) {
      uint64_t v4 = v3;
    }
    else {
      uint64_t v4 = 0;
    }
    switch(v4)
    {
      case 1:
        int v5 = a1[1];
        if (!a1[1]) {
          break;
        }
        return (*a1 | (v5 << 8)) - 4;
      case 2:
        int v5 = *(unsigned __int16 *)(a1 + 1);
        if (*(_WORD *)(a1 + 1)) {
          return (*a1 | (v5 << 8)) - 4;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x100A318F0);
      case 4:
        int v5 = *(_DWORD *)(a1 + 1);
        if (!v5) {
          break;
        }
        return (*a1 | (v5 << 8)) - 4;
      default:
        break;
    }
  }
  unsigned int v7 = *a1;
  if (v7 >= 3) {
    unsigned int v8 = v7 - 2;
  }
  else {
    unsigned int v8 = 0;
  }
  if (v8 >= 3) {
    return v8 - 2;
  }
  else {
    return 0;
  }
}

unsigned char *sub_100A31904(unsigned char *result, unsigned int a2, unsigned int a3)
{
  unsigned int v3 = a3 + 4;
  if (a3 + 4 >= 0xFFFF00) {
    int v4 = 4;
  }
  else {
    int v4 = 2;
  }
  if (v3 >> 8 < 0xFF) {
    int v4 = 1;
  }
  if (v3 >= 0x100) {
    unsigned int v5 = v4;
  }
  else {
    unsigned int v5 = 0;
  }
  if (a3 >= 0xFC) {
    uint64_t v6 = v5;
  }
  else {
    uint64_t v6 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v7 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v6)
    {
      case 1:
        result[1] = v7;
        break;
      case 2:
        *(_WORD *)(result + 1) = v7;
        break;
      case 3:
LABEL_25:
        __break(1u);
        JUMPOUT(0x100A319D8);
      case 4:
        *(_DWORD *)(result + 1) = v7;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v6)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_19;
      case 3:
        goto LABEL_25;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      default:
LABEL_19:
        if (a2) {
LABEL_20:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

unsigned char *sub_100A31A00(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100A31ACCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

unint64_t sub_100A31AF8()
{
  unint64_t result = qword_100EAB060;
  if (!qword_100EAB060)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAB060);
  }
  return result;
}

uint64_t sub_100A31B44()
{
  return swift_release();
}

uint64_t sub_100A31BD8()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC7Weather27LocationNetworkActivityFlow_label;
  uint64_t v2 = type metadata accessor for WeatherNetworkActivity.Label();
  sub_100162E4C();
  unsigned int v4 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v4(v1, v2);
  uint64_t v5 = sub_10017AD80(OBJC_IVAR____TtC7Weather27LocationNetworkActivityFlow_weatherLabel);
  ((void (*)(uint64_t))v4)(v5);
  uint64_t v6 = sub_10017AD80(OBJC_IVAR____TtC7Weather27LocationNetworkActivityFlow_mapLabel);
  ((void (*)(uint64_t))v4)(v6);
  uint64_t v7 = sub_10017AD80(OBJC_IVAR____TtC7Weather27LocationNetworkActivityFlow_mapMetadataLabel);
  ((void (*)(uint64_t))v4)(v7);
  uint64_t v8 = sub_10017AD80(OBJC_IVAR____TtC7Weather27LocationNetworkActivityFlow_mapTilesLabel);
  ((void (*)(uint64_t))v4)(v8);
  uint64_t v9 = sub_10017AD80(OBJC_IVAR____TtC7Weather27LocationNetworkActivityFlow_overlayTileLabel);
  ((void (*)(uint64_t))v4)(v9);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_100A31CEC()
{
  sub_100A31BD8();
  sub_10017C924();

  return swift_deallocClassInstance();
}

uint64_t sub_100A31D24()
{
  return type metadata accessor for LocationNetworkActivityFlow();
}

uint64_t sub_100A31D2C(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = (void *)(result + OBJC_IVAR____TtC7Weather27LocationNetworkActivityFlow_locationId);
  if (!*(void *)(result + OBJC_IVAR____TtC7Weather27LocationNetworkActivityFlow_locationId + 8))
  {
    *uint64_t v3 = a2;
    v3[1] = a3;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_100A31D8C()
{
  type metadata accessor for NetworkActivityCompletion();
  sub_100162E4C();
  __chkstk_darwin(v1);
  sub_10016279C();
  type metadata accessor for UnfairLock();
  swift_retain();
  Lock.sync<A>(_:)();
  swift_release();
  sub_100089EEC();
  return sub_100089DA4(v0);
}

uint64_t sub_100A31E70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, void *a4@<X8>)
{
  uint64_t v116 = a3;
  uint64_t v119 = a4;
  uint64_t v118 = type metadata accessor for NWActivity.CompletionReason();
  uint64_t v115 = *(void *)(v118 - 8);
  __chkstk_darwin(v118);
  uint64_t v114 = (char *)v102 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v102[0] = (char *)v102 - v8;
  uint64_t v9 = sub_10017DF08(&qword_100E855D0);
  __chkstk_darwin(v9 - 8);
  uint64_t v113 = (uint64_t)v102 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v112 = (uint64_t)v102 - v12;
  uint64_t v13 = type metadata accessor for WeatherNetworkActivity.Label();
  uint64_t v105 = *(void *)(v13 - 8);
  uint64_t v106 = v13;
  __chkstk_darwin(v13);
  uint64_t v110 = (char *)v102 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for WeatherNetworkActivity.Domain();
  uint64_t v103 = *(void *)(v15 - 8);
  uint64_t v104 = v15;
  __chkstk_darwin(v15);
  int v107 = (char *)v102 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v111 = type metadata accessor for WeatherNetworkActivity();
  uint64_t v109 = *(void *)(v111 - 8);
  __chkstk_darwin(v111);
  uint64_t v108 = (char *)v102 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for WeatherMap.Event();
  uint64_t v19 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  char v21 = (char *)v102 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  uint64_t v24 = (char *)v102 - v23;
  __chkstk_darwin(v25);
  uint64_t v27 = (char *)v102 - v26;
  uint64_t v28 = type metadata accessor for WeatherMapPurpose();
  uint64_t v29 = *(void *)(v28 - 8);
  __n128 v30 = __chkstk_darwin(v28);
  uint64_t v32 = (void *)((char *)v102 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0));
  *(void *)&long long v117 = a1;
  if (!*(void *)(a1 + OBJC_IVAR____TtC7Weather27LocationNetworkActivityFlow_rootActivity)) {
    goto LABEL_12;
  }
  v102[1] = *(void *)(a1 + OBJC_IVAR____TtC7Weather27LocationNetworkActivityFlow_rootActivity);
  (*(void (**)(void *, uint64_t, uint64_t, __n128))(v29 + 16))(v32, a2, v28, v30);
  if ((*(unsigned int (**)(void *, uint64_t))(v29 + 88))(v32, v28) != enum case for WeatherMapPurpose.snapshot(_:))
  {
    (*(void (**)(void *, uint64_t))(v29 + 8))(v32, v28);
    goto LABEL_12;
  }
  (*(void (**)(void *, uint64_t))(v29 + 96))(v32, v28);
  uint64_t v33 = *(void *)(v117 + OBJC_IVAR____TtC7Weather27LocationNetworkActivityFlow_locationId + 8);
  if (!v33)
  {
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  if (*v32 == *(void *)(v117 + OBJC_IVAR____TtC7Weather27LocationNetworkActivityFlow_locationId) && v33 == v32[1])
  {
    swift_retain();
    swift_bridgeObjectRelease();
    uint64_t v36 = v27;
  }
  else
  {
    char v35 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_retain();
    swift_bridgeObjectRelease();
    uint64_t v36 = v27;
    if ((v35 & 1) == 0)
    {
      swift_release();
LABEL_12:
      uint64_t v37 = type metadata accessor for NetworkActivityCompletion();
      uint64_t v38 = v119;
      uint64_t result = _s7Weather24LocationCompositionStateOwst_0((uint64_t)v119 + *(int *)(v37 + 24), 1, 1, v118);
      *uint64_t v38 = _swiftEmptyArrayStorage;
      v38[1] = _swiftEmptyArrayStorage;
      return result;
    }
  }
  uint64_t v40 = v19;
  uint64_t v41 = *(void (**)(char *, char *, uint64_t))(v19 + 16);
  uint64_t v42 = (char *)v18;
  v41(v36, v116, v18);
  int v43 = (*(uint64_t (**)(char *, uint64_t))(v40 + 88))(v36, v18);
  if (v43 == enum case for WeatherMap.Event.didFinishLoading(_:))
  {
    v41(v21, v36, v18);
    (*(void (**)(char *, uint64_t))(v40 + 96))(v21, v18);
    uint64_t v44 = *(void *)(v117 + OBJC_IVAR____TtC7Weather27LocationNetworkActivityFlow_mapActivity);
    if (v44)
    {
      *(void *)(v117 + OBJC_IVAR____TtC7Weather27LocationNetworkActivityFlow_mapActivity) = 0;
      uint64_t v46 = v114;
      uint64_t v45 = v115;
      char v47 = (unsigned int *)&enum case for NWActivity.CompletionReason.success(_:);
      if (!*v21) {
        char v47 = (unsigned int *)&enum case for NWActivity.CompletionReason.failure(_:);
      }
      uint64_t v48 = v118;
      (*(void (**)(char *, void, uint64_t))(v115 + 104))(v114, *v47, v118);
      sub_10031FD98(v44, v119);
      swift_release();
      swift_release();
      (*(void (**)(char *, uint64_t))(v45 + 8))(v46, v48);
      goto LABEL_52;
    }
    if (qword_100E62800 != -1) {
      swift_once();
    }
    uint64_t v70 = type metadata accessor for Logger();
    sub_1002102B0(v70, (uint64_t)qword_100F51F08);
    uint64_t v71 = Logger.logObject.getter();
    os_log_type_t v72 = static os_log_type_t.error.getter();
    if (!os_log_type_enabled(v71, v72)) {
      goto LABEL_50;
    }
    uint64_t v73 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v73 = 0;
    uint64_t v74 = "Map indicated it had finished loading for location activity that wasn't tracked";
    goto LABEL_49;
  }
  if (v43 == enum case for WeatherMap.Event.overlay(_:))
  {
    v41(v24, v36, v18);
    (*(void (**)(char *, uint64_t))(v40 + 96))(v24, v18);
    uint64_t v49 = type metadata accessor for WeatherMap.Event.Overlay();
    uint64_t v50 = *(void *)(v49 - 8);
    int v51 = (*(uint64_t (**)(char *, uint64_t))(v50 + 88))(v24, v49);
    if (v51 == enum case for WeatherMap.Event.Overlay.didFinishLoadingTiles(_:))
    {
      (*(void (**)(char *, uint64_t))(v50 + 96))(v24, v49);
      uint64_t v52 = *(void *)(v117 + OBJC_IVAR____TtC7Weather27LocationNetworkActivityFlow_mapTilesActivity);
      if (v52)
      {
        *(void *)(v117 + OBJC_IVAR____TtC7Weather27LocationNetworkActivityFlow_mapTilesActivity) = 0;
        uint64_t v53 = v115;
        char v54 = (unsigned int *)&enum case for NWActivity.CompletionReason.success(_:);
        if (!*v24) {
          char v54 = (unsigned int *)&enum case for NWActivity.CompletionReason.failure(_:);
        }
        uint64_t v55 = v102[0];
        uint64_t v56 = v118;
        (*(void (**)(void, void, uint64_t))(v115 + 104))(v102[0], *v54, v118);
        sub_10031FD98(v52, v119);
        swift_release();
        swift_release();
        (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v55, v56);
        goto LABEL_52;
      }
      if (qword_100E62800 != -1) {
        swift_once();
      }
      uint64_t v89 = type metadata accessor for Logger();
      sub_1002102B0(v89, (uint64_t)qword_100F51F08);
      uint64_t v71 = Logger.logObject.getter();
      os_log_type_t v72 = static os_log_type_t.error.getter();
      if (!os_log_type_enabled(v71, v72)) {
        goto LABEL_50;
      }
      uint64_t v73 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v73 = 0;
      uint64_t v74 = "Map indicated tiles had finished loading for location activity that wasn't tracked";
LABEL_49:
      _os_log_impl((void *)&_mh_execute_header, v71, v72, v74, v73, 2u);
      swift_slowDealloc();
LABEL_50:

      goto LABEL_51;
    }
    if (v51 != enum case for WeatherMap.Event.Overlay.willStartLoadingTiles(_:))
    {
      (*(void (**)(char *, uint64_t))(v50 + 8))(v24, v49);
LABEL_51:
      uint64_t v90 = type metadata accessor for NetworkActivityCompletion();
      uint64_t v91 = v119;
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v119 + *(int *)(v90 + 24), 1, 1, v118);
      swift_release();
      void *v91 = _swiftEmptyArrayStorage;
      v91[1] = _swiftEmptyArrayStorage;
      goto LABEL_52;
    }
    uint64_t v116 = v36;
    uint64_t v114 = (char *)OBJC_IVAR____TtC7Weather27LocationNetworkActivityFlow_mapTilesActivity;
    uint64_t v75 = v117;
    uint64_t v76 = *(void *)(v117 + OBJC_IVAR____TtC7Weather27LocationNetworkActivityFlow_mapTilesActivity);
    (*(void (**)(char *, void, uint64_t))(v103 + 104))(v107, enum case for WeatherNetworkActivity.Domain.weather(_:), v104);
    (*(void (**)(char *, uint64_t, uint64_t))(v105 + 16))(v110, v75 + OBJC_IVAR____TtC7Weather27LocationNetworkActivityFlow_mapTilesLabel, v106);
    uint64_t v77 = type metadata accessor for UUID();
    _s7Weather24LocationCompositionStateOwst_0(v112, 1, 1, v77);
    _s7Weather24LocationCompositionStateOwst_0(v113, 1, 1, v77);
    swift_retain();
    uint64_t v78 = v108;
    uint64_t v62 = v76;
    WeatherNetworkActivity.init(domain:label:token:parentToken:)();
    uint64_t v63 = WeatherNetworkActivity.createNWActivity()();
    (*(void (**)(char *, uint64_t))(v109 + 8))(v78, v111);
    swift_retain();
    NWActivity.parentActivity.setter();
    *(void *)&v114[v75] = v63;
    swift_retain();
    swift_release();
    if (!v76)
    {
      sub_10017DF08(&qword_100E6BBD0);
      uint64_t v98 = swift_allocObject();
      *(_OWORD *)(v98 + 16) = xmmword_100C31F30;
      *(void *)(v98 + 32) = v63;
      uint64_t v120 = v98;
      specialized Array._endMutation()();
      uint64_t v99 = v120;
      uint64_t v100 = type metadata accessor for NetworkActivityCompletion();
      uint64_t v101 = v119;
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v119 + *(int *)(v100 + 24), 1, 1, v118);
      swift_release();
      uint64_t *v101 = v99;
      v101[1] = (uint64_t)_swiftEmptyArrayStorage;
      uint64_t v92 = *(uint64_t (**)(char *, char *))(v40 + 8);
      uint64_t v93 = v116;
      return v92(v93, v42);
    }
    uint64_t v79 = qword_100E62800;
    swift_retain();
    uint64_t v36 = v116;
    if (v79 != -1) {
      swift_once();
    }
    uint64_t v80 = type metadata accessor for Logger();
    sub_1002102B0(v80, (uint64_t)qword_100F51F08);
    uint64_t v66 = Logger.logObject.getter();
    os_log_type_t v67 = static os_log_type_t.error.getter();
    if (!os_log_type_enabled(v66, v67))
    {
LABEL_42:

      sub_10017DF08(&qword_100E6BBD0);
      uint64_t v81 = swift_allocObject();
      long long v117 = xmmword_100C31F30;
      *(_OWORD *)(v81 + 16) = xmmword_100C31F30;
      *(void *)(v81 + 32) = v63;
      uint64_t v120 = v81;
      specialized Array._endMutation()();
      uint64_t v82 = v120;
      uint64_t v83 = swift_allocObject();
      *(_OWORD *)(v83 + 16) = v117;
      *(void *)(v83 + 32) = v62;
      uint64_t v120 = v83;
      specialized Array._endMutation()();
      uint64_t v84 = v120;
      swift_release();
      swift_release();
      uint64_t v85 = type metadata accessor for NetworkActivityCompletion();
      uint64_t v87 = v118;
      uint64_t v86 = v119;
      uint64_t v88 = (char *)v119 + *(int *)(v85 + 24);
      (*(void (**)(char *, void, uint64_t))(v115 + 104))(v88, enum case for NWActivity.CompletionReason.cancelled(_:), v118);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v88, 0, 1, v87);
      uint64_t *v86 = v82;
      v86[1] = v84;
LABEL_52:
      uint64_t v92 = *(uint64_t (**)(char *, char *))(v40 + 8);
      uint64_t v93 = v36;
      return v92(v93, v42);
    }
    uint64_t v68 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v68 = 0;
    uint64_t v69 = "Map indicated snapshot map overlay started loading again while loading";
LABEL_41:
    _os_log_impl((void *)&_mh_execute_header, v66, v67, v69, v68, 2u);
    swift_slowDealloc();
    goto LABEL_42;
  }
  if (v43 != enum case for WeatherMap.Event.willStartLoading(_:)) {
    goto LABEL_51;
  }
  uint64_t v114 = (char *)v18;
  uint64_t v116 = v36;
  uint64_t v57 = OBJC_IVAR____TtC7Weather27LocationNetworkActivityFlow_mapActivity;
  uint64_t v58 = v117;
  uint64_t v59 = *(void *)(v117 + OBJC_IVAR____TtC7Weather27LocationNetworkActivityFlow_mapActivity);
  (*(void (**)(char *, void, uint64_t))(v103 + 104))(v107, enum case for WeatherNetworkActivity.Domain.weather(_:), v104);
  (*(void (**)(char *, uint64_t, uint64_t))(v105 + 16))(v110, v58 + OBJC_IVAR____TtC7Weather27LocationNetworkActivityFlow_mapLabel, v106);
  uint64_t v60 = type metadata accessor for UUID();
  _s7Weather24LocationCompositionStateOwst_0(v112, 1, 1, v60);
  _s7Weather24LocationCompositionStateOwst_0(v113, 1, 1, v60);
  swift_retain();
  uint64_t v61 = v108;
  uint64_t v62 = v59;
  WeatherNetworkActivity.init(domain:label:token:parentToken:)();
  uint64_t v63 = WeatherNetworkActivity.createNWActivity()();
  (*(void (**)(char *, uint64_t))(v109 + 8))(v61, v111);
  swift_retain();
  NWActivity.parentActivity.setter();
  *(void *)(v58 + v57) = v63;
  swift_retain();
  swift_release();
  if (v59)
  {
    uint64_t v64 = qword_100E62800;
    swift_retain();
    uint64_t v36 = v116;
    uint64_t v42 = v114;
    if (v64 != -1) {
      swift_once();
    }
    uint64_t v65 = type metadata accessor for Logger();
    sub_1002102B0(v65, (uint64_t)qword_100F51F08);
    uint64_t v66 = Logger.logObject.getter();
    os_log_type_t v67 = static os_log_type_t.error.getter();
    if (!os_log_type_enabled(v66, v67)) {
      goto LABEL_42;
    }
    uint64_t v68 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v68 = 0;
    uint64_t v69 = "Map indicated snapshot map started loading again while loading";
    goto LABEL_41;
  }
  sub_10017DF08(&qword_100E6BBD0);
  uint64_t v94 = swift_allocObject();
  *(_OWORD *)(v94 + 16) = xmmword_100C31F30;
  *(void *)(v94 + 32) = v63;
  uint64_t v120 = v94;
  specialized Array._endMutation()();
  uint64_t v95 = v120;
  uint64_t v96 = type metadata accessor for NetworkActivityCompletion();
  uint64_t v97 = v119;
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v119 + *(int *)(v96 + 24), 1, 1, v118);
  swift_release();
  *uint64_t v97 = v95;
  v97[1] = (uint64_t)_swiftEmptyArrayStorage;
  return (*(uint64_t (**)(char *, char *))(v40 + 8))(v116, v114);
}

uint64_t sub_100A32D9C()
{
  return sub_100A31D8C();
}

void sub_100A32DC0()
{
  sub_100162EA0();
  uint64_t v34 = v4;
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  uint64_t v37 = v9;
  uint64_t v10 = sub_10017DF08(&qword_100E855D0);
  uint64_t v11 = sub_100109308(v10);
  __chkstk_darwin(v11);
  sub_100162EF8();
  uint64_t v36 = v12;
  sub_1001626D4();
  __chkstk_darwin(v13);
  uint64_t v35 = (uint64_t)&v32 - v14;
  uint64_t v15 = type metadata accessor for WeatherNetworkActivity.Label();
  sub_100179C0C();
  uint64_t v33 = v16;
  __chkstk_darwin(v17);
  sub_100125FF8();
  uint64_t v18 = type metadata accessor for WeatherNetworkActivity.Domain();
  sub_100179C0C();
  uint64_t v32 = v19;
  __chkstk_darwin(v20);
  sub_100163770();
  uint64_t v21 = type metadata accessor for WeatherMapPurpose();
  sub_100179C0C();
  uint64_t v23 = v22;
  __chkstk_darwin(v24);
  sub_10012B938();
  if (!*(void *)(v0 + *v6)) {
    goto LABEL_12;
  }
  (*(void (**)(void *, uint64_t, uint64_t))(v23 + 16))(v1, v8, v21);
  if ((*(unsigned int (**)(void *, uint64_t))(v23 + 88))(v1, v21) != enum case for WeatherMapPurpose.snapshot(_:))
  {
    (*(void (**)(void *, uint64_t))(v23 + 8))(v1, v21);
LABEL_12:
    uint64_t v29 = 1;
    uint64_t v28 = v37;
    goto LABEL_13;
  }
  (*(void (**)(void *, uint64_t))(v23 + 96))(v1, v21);
  uint64_t v25 = *(void *)(v0 + OBJC_IVAR____TtC7Weather27LocationNetworkActivityFlow_locationId + 8);
  if (!v25)
  {
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  if (*v1 == *(void *)(v0 + OBJC_IVAR____TtC7Weather27LocationNetworkActivityFlow_locationId) && v25 == v1[1])
  {
    swift_retain();
    swift_bridgeObjectRelease();
    uint64_t v28 = v37;
    goto LABEL_15;
  }
  char v27 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_retain();
  swift_bridgeObjectRelease();
  uint64_t v28 = v37;
  if (v27)
  {
LABEL_15:
    (*(void (**)(uint64_t, void, uint64_t))(v32 + 104))(v3, enum case for WeatherNetworkActivity.Domain.weather(_:), v18);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v33 + 16))(v2, v0 + *v34, v15);
    type metadata accessor for UUID();
    sub_100185F14(v35, 1);
    uint64_t v31 = v36;
    NWActivity.token.getter();
    sub_100185F14(v31, 0);
    WeatherNetworkActivity.init(domain:label:token:parentToken:)();
    swift_release();
    uint64_t v29 = 0;
    goto LABEL_13;
  }
  swift_release();
  uint64_t v29 = 1;
LABEL_13:
  uint64_t v30 = type metadata accessor for WeatherNetworkActivity();
  _s7Weather24LocationCompositionStateOwst_0(v28, v29, 1, v30);
  sub_100162694();
}

void sub_100A330FC()
{
}

void sub_100A33130()
{
}

unint64_t sub_100A33164(uint64_t a1)
{
  unint64_t result = sub_100A3318C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_100A3318C()
{
  unint64_t result = qword_100EAB1C0;
  if (!qword_100EAB1C0)
  {
    type metadata accessor for LocationNetworkActivityFlow();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAB1C0);
  }
  return result;
}

uint64_t sub_100A331DC(uint64_t a1)
{
  uint64_t v2 = sub_10017DF08(&qword_100EAB1C8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100A3323C@<X0>(void *a1@<X8>)
{
  return sub_100A31E70(*(void *)(v1 + 16), *(void *)(v1 + 24), *(char **)(v1 + 32), a1);
}

uint64_t sub_100A33248()
{
  return sub_100A31D2C(v0[2], v0[3], v0[4]);
}

BOOL sub_100A33254(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for HistoricalComparisons();
  sub_100179C0C();
  uint64_t v6 = v5;
  __chkstk_darwin(v7);
  sub_1001626E0();
  uint64_t v10 = v9 - v8;
  uint64_t v11 = sub_10017DF08(&qword_100EAB1D0);
  uint64_t v12 = v11 - 8;
  __chkstk_darwin(v11);
  sub_1001626E0();
  uint64_t v15 = v14 - v13;
  uint64_t v16 = sub_10017DF08(&qword_100E6B8B8);
  __chkstk_darwin(v16 - 8);
  uint64_t v18 = (char *)&v30 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v21 = (char *)&v30 - v20;
  __chkstk_darwin(v22);
  uint64_t v24 = (char *)&v30 - v23;
  sub_1002318AC(a1, (uint64_t)&v30 - v23);
  sub_1002318AC(a2, (uint64_t)v21);
  uint64_t v25 = v15 + *(int *)(v12 + 56);
  sub_1002318AC((uint64_t)v24, v15);
  sub_1002318AC((uint64_t)v21, v25);
  sub_100162F8C(v15);
  if (v26)
  {
    sub_1000F3400((uint64_t)v21, &qword_100E6B8B8);
    sub_1000F3400((uint64_t)v24, &qword_100E6B8B8);
    sub_100162F8C(v25);
    if (v26)
    {
      sub_1000F3400(v15, &qword_100E6B8B8);
      return 1;
    }
    goto LABEL_9;
  }
  sub_1002318AC(v15, (uint64_t)v18);
  sub_100162F8C(v25);
  if (v26)
  {
    sub_1000F3400((uint64_t)v21, &qword_100E6B8B8);
    sub_1000F3400((uint64_t)v24, &qword_100E6B8B8);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v18, v4);
LABEL_9:
    sub_1000F3400(v15, &qword_100EAB1D0);
    return 0;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(v10, v25, v4);
  sub_100A33AC4(&qword_100EAB1D8);
  char v27 = dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t v28 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  v28(v10, v4);
  sub_1000F3400((uint64_t)v21, &qword_100E6B8B8);
  sub_1000F3400((uint64_t)v24, &qword_100E6B8B8);
  v28((uint64_t)v18, v4);
  sub_1000F3400(v15, &qword_100E6B8B8);
  return (v27 & 1) != 0;
}

uint64_t sub_100A33558@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_10017DF08(&qword_100E6B8B8);
  __chkstk_darwin(v4 - 8);
  sub_1001626E0();
  uint64_t v7 = v6 - v5;
  uint64_t v8 = sub_10017DF08(&qword_100EAB1E0);
  sub_100179C0C();
  uint64_t v20 = v9;
  __chkstk_darwin(v10);
  sub_1001626E0();
  uint64_t v13 = v12 - v11;
  uint64_t v14 = type metadata accessor for AveragesComponent();
  __chkstk_darwin(v14 - 8);
  sub_1001626E0();
  uint64_t v17 = v16 - v15;
  sub_1001B1E64(a1, a1[3]);
  sub_100A33A14();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (!v2)
  {
    type metadata accessor for HistoricalComparisons();
    sub_100A33AC4(&qword_100EAB1F0);
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v13, v8);
    sub_100350F14(v7, v17);
    sub_100A33A60(v17, a2);
  }
  return _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)a1);
}

uint64_t sub_100A33748(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x73697261706D6F63 && a2 == 0xEB00000000736E6FLL)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_100A337E8()
{
  return 0x73697261706D6F63;
}

uint64_t sub_100A33808(void *a1)
{
  uint64_t v2 = sub_10017DF08(&qword_100EAB1F8);
  sub_100179C0C();
  uint64_t v4 = v3;
  __chkstk_darwin(v5);
  sub_1001626E0();
  uint64_t v8 = v7 - v6;
  sub_1001B1E64(a1, a1[3]);
  sub_100A33A14();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  type metadata accessor for HistoricalComparisons();
  sub_100A33AC4(&qword_100EAB200);
  KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v8, v2);
}

uint64_t sub_100A3393C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100A33748(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_100A33968(uint64_t a1)
{
  unint64_t v2 = sub_100A33A14();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100A339A4(uint64_t a1)
{
  unint64_t v2 = sub_100A33A14();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100A339E0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100A33558(a1, a2);
}

uint64_t sub_100A339F8(void *a1)
{
  return sub_100A33808(a1);
}

unint64_t sub_100A33A14()
{
  unint64_t result = qword_100EAB1E8;
  if (!qword_100EAB1E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAB1E8);
  }
  return result;
}

uint64_t sub_100A33A60(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AveragesComponent();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100A33AC4(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for HistoricalComparisons();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for AveragesComponent.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x100A33BA4);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for AveragesComponent.CodingKeys()
{
  return &type metadata for AveragesComponent.CodingKeys;
}

uint64_t *sub_100A33BDC(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *(void *)(sub_10017DF08(&qword_100E6B8B8) - 8);
  int v5 = *(_DWORD *)(v4 + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = v4;
    uint64_t v7 = type metadata accessor for HistoricalComparisons();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v7))
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v7);
    }
  }
  return a1;
}

void *sub_100A33CE4(void *a1, const void *a2)
{
  uint64_t v4 = type metadata accessor for HistoricalComparisons();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v4))
  {
    uint64_t v5 = sub_10017DF08(&qword_100E6B8B8);
    memcpy(a1, a2, *(void *)(*(void *)(v5 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v4);
  }
  return a1;
}

void *sub_100A33DAC(void *a1, const void *a2)
{
  uint64_t v4 = type metadata accessor for HistoricalComparisons();
  int v5 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a1, 1, v4);
  int v6 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v4);
  if (!v5)
  {
    uint64_t v7 = *(void *)(v4 - 8);
    if (!v6)
    {
      (*(void (**)(void *, const void *, uint64_t))(v7 + 24))(a1, a2, v4);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v7 + 8))(a1, v4);
    goto LABEL_6;
  }
  if (v6)
  {
LABEL_6:
    uint64_t v8 = sub_10017DF08(&qword_100E6B8B8);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v4);
  return a1;
}

void *sub_100A33EF4(void *a1, const void *a2)
{
  uint64_t v4 = type metadata accessor for HistoricalComparisons();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v4))
  {
    uint64_t v5 = sub_10017DF08(&qword_100E6B8B8);
    memcpy(a1, a2, *(void *)(*(void *)(v5 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v4);
  }
  return a1;
}

void *sub_100A33FBC(void *a1, const void *a2)
{
  uint64_t v4 = type metadata accessor for HistoricalComparisons();
  int v5 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a1, 1, v4);
  int v6 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v4);
  if (!v5)
  {
    uint64_t v7 = *(void *)(v4 - 8);
    if (!v6)
    {
      (*(void (**)(void *, const void *, uint64_t))(v7 + 40))(a1, a2, v4);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v7 + 8))(a1, v4);
    goto LABEL_6;
  }
  if (v6)
  {
LABEL_6:
    uint64_t v8 = sub_10017DF08(&qword_100E6B8B8);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v4);
  return a1;
}

uint64_t sub_100A34104(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100A34118);
}

uint64_t sub_100A34118(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10017DF08(&qword_100E6B8B8);

  return _s7Weather24LocationCompositionStateOwet_0(a1, a2, v4);
}

uint64_t sub_100A34164(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100A34178);
}

uint64_t sub_100A34178(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10017DF08(&qword_100E6B8B8);

  return _s7Weather24LocationCompositionStateOwst_0(a1, a2, a2, v4);
}

unint64_t sub_100A341CC()
{
  unint64_t result = qword_100EAB298;
  if (!qword_100EAB298)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAB298);
  }
  return result;
}

unint64_t sub_100A3421C()
{
  unint64_t result = qword_100EAB2A0;
  if (!qword_100EAB2A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAB2A0);
  }
  return result;
}

unint64_t sub_100A3426C()
{
  unint64_t result = qword_100EAB2A8;
  if (!qword_100EAB2A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAB2A8);
  }
  return result;
}

uint64_t sub_100A342B8(uint64_t a1)
{
  uint64_t v7 = a1;
  swift_errorRetain();
  sub_10017DF08(&qword_100E77F30);
  sub_10017DF08(&qword_100EAB2B0);
  if (swift_dynamicCast())
  {
    sub_1001262E4(v5, (uint64_t)v8);
    uint64_t v1 = v9;
    uint64_t v2 = v10;
    sub_1001B1E64(v8, v9);
    uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v2);
    swift_errorRelease();
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v8);
  }
  else
  {
    uint64_t v6 = 0;
    memset(v5, 0, sizeof(v5));
    sub_100A371B4((uint64_t)v5);
    swift_getErrorValue();
    uint64_t v3 = Error.domainAndCode.getter();
    swift_errorRelease();
  }
  return v3;
}

uint64_t sub_100A343C8(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  switch(a2)
  {
    case 0:
      return !a4;
    case 1:
      return a4 == 1;
    case 2:
      return a4 == 2;
    case 3:
      return a4 == 3;
    case 4:
      return a4 == 4;
    case 5:
      return a4 == 5;
    case 6:
      return a4 == 6;
    case 7:
      return a4 == 7;
    case 8:
      return a4 == 8;
    case 9:
      return a4 == 9;
    case 10:
      return a4 == 10;
    case 11:
      return a4 == 11;
    case 12:
      return a4 == 12;
    case 13:
      return a4 == 13;
    default:
      if (a4 < 0xE) {
        return 0;
      }
      if (a1 == a3 && a2 == a4) {
        return 1;
      }
      else {
        return _stringCompareWithSmolCheck(_:_:expecting:)();
      }
  }
}

uint64_t sub_100A344FC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x43676E697373696DLL && a2 == 0xEE00746E65727275;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x44676E697373696DLL && a2 == 0xEC000000796C6961;
    if (v6 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 0x48676E697373696DLL && a2 == 0xED0000796C72756FLL;
      if (v7 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 0xD000000000000010 && a2 == 0x8000000100CBACB0 {
             || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      }
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else if (a1 == 0xD000000000000011 && a2 == 0x8000000100CBACD0 {
             || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      }
      {
        swift_bridgeObjectRelease();
        return 4;
      }
      else if (a1 == 0xD000000000000014 && a2 == 0x8000000100CBACF0 {
             || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      }
      {
        swift_bridgeObjectRelease();
        return 5;
      }
      else
      {
        BOOL v8 = a1 == 0x52676E697373696DLL && a2 == 0xEF65736E6F707365;
        if (v8 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 6;
        }
        else if (a1 == 0xD00000000000001BLL && a2 == 0x8000000100CBAD10 {
               || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
        }
        {
          swift_bridgeObjectRelease();
          return 7;
        }
        else if (a1 == 0xD000000000000014 && a2 == 0x8000000100CBAD30 {
               || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
        }
        {
          swift_bridgeObjectRelease();
          return 8;
        }
        else
        {
          BOOL v9 = a1 == 0x65736E6F70736572 && a2 == 0xEE0064656C696146;
          if (v9 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 9;
          }
          else if (a1 == 0xD000000000000012 && a2 == 0x8000000100CBAD50 {
                 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
          }
          {
            swift_bridgeObjectRelease();
            return 10;
          }
          else if (a1 == 0xD000000000000017 && a2 == 0x8000000100CBAD70 {
                 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
          }
          {
            swift_bridgeObjectRelease();
            return 11;
          }
          else if (a1 == 0xD000000000000022 && a2 == 0x8000000100CBAD90 {
                 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
          }
          {
            swift_bridgeObjectRelease();
            return 12;
          }
          else if (a1 == 0xD000000000000020 && a2 == 0x8000000100CBADC0 {
                 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
          }
          {
            swift_bridgeObjectRelease();
            return 13;
          }
          else if (a1 == 0x6C616E7265747865 && a2 == 0xE800000000000000)
          {
            swift_bridgeObjectRelease();
            return 14;
          }
          else
          {
            char v11 = _stringCompareWithSmolCheck(_:_:expecting:)();
            swift_bridgeObjectRelease();
            if (v11) {
              return 14;
            }
            else {
              return 15;
            }
          }
        }
      }
    }
  }
}

uint64_t sub_100A34B34()
{
  return 15;
}

unint64_t sub_100A34B3C(char a1)
{
  unint64_t result = 0x43676E697373696DLL;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x44676E697373696DLL;
      break;
    case 2:
      unint64_t result = 0x48676E697373696DLL;
      break;
    case 3:
      unint64_t result = 0xD000000000000010;
      break;
    case 4:
      unint64_t result = 0xD000000000000011;
      break;
    case 5:
    case 8:
      unint64_t result = 0xD000000000000014;
      break;
    case 6:
      unint64_t result = 0x52676E697373696DLL;
      break;
    case 7:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 9:
      unint64_t result = 0x65736E6F70736572;
      break;
    case 10:
      unint64_t result = 0xD000000000000012;
      break;
    case 11:
      unint64_t result = 0xD000000000000017;
      break;
    case 12:
      unint64_t result = 0xD000000000000022;
      break;
    case 13:
      unint64_t result = 0xD000000000000020;
      break;
    case 14:
      unint64_t result = 0x6C616E7265747865;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_100A34D3C(void *a1, uint64_t a2, uint64_t a3)
{
  sub_10017DF08(&qword_100EAB3D8);
  sub_100179C0C();
  __chkstk_darwin(v4);
  sub_10017225C(v5, v52);
  sub_10017DF08(&qword_100EAB3E0);
  sub_100179C0C();
  __chkstk_darwin(v6);
  sub_100164B64(v7, v53);
  sub_10017DF08(&qword_100EAB3E8);
  sub_100179C0C();
  __chkstk_darwin(v8);
  sub_10011BA64(v9, v54);
  sub_10017DF08(&qword_100EAB3F0);
  sub_100179C0C();
  __chkstk_darwin(v10);
  sub_100109314();
  sub_10017DF08(&qword_100EAB3F8);
  sub_100179C0C();
  __chkstk_darwin(v11);
  sub_100109314();
  sub_100109338(v12);
  sub_10017DF08(&qword_100EAB400);
  sub_100179C0C();
  __chkstk_darwin(v13);
  sub_100109314();
  sub_100109338(v14);
  sub_10017DF08(&qword_100EAB408);
  sub_100179C0C();
  __chkstk_darwin(v15);
  sub_100109314();
  sub_100109338(v16);
  sub_10017DF08(&qword_100EAB410);
  sub_100179C0C();
  __chkstk_darwin(v17);
  sub_100109314();
  sub_100109338(v18);
  sub_10017DF08(&qword_100EAB418);
  sub_100179C0C();
  __chkstk_darwin(v19);
  sub_100109314();
  sub_100109338(v20);
  sub_10017DF08(&qword_100EAB420);
  sub_100179C0C();
  __chkstk_darwin(v21);
  sub_100109314();
  sub_100109338(v22);
  sub_10017DF08(&qword_100EAB428);
  sub_100179C0C();
  __chkstk_darwin(v23);
  sub_100109314();
  sub_100109338(v24);
  sub_10017DF08(&qword_100EAB430);
  sub_100179C0C();
  __chkstk_darwin(v25);
  sub_100109314();
  sub_100109338(v26);
  sub_10017DF08(&qword_100EAB438);
  sub_100179C0C();
  __chkstk_darwin(v27);
  sub_10011C760();
  sub_10017DF08(&qword_100EAB440);
  sub_100179C0C();
  __chkstk_darwin(v28);
  sub_1001626E0();
  sub_10017DF08(&qword_100EAB448);
  sub_100179C0C();
  __chkstk_darwin(v29);
  sub_1001626E0();
  sub_10017DF08(&qword_100EAB450);
  sub_100179C0C();
  __chkstk_darwin(v30);
  sub_1001626E0();
  sub_1001B1E64(a1, a1[3]);
  sub_100A37314();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  switch(a3)
  {
    case 0:
      sub_100A37788();
      sub_10017ED5C();
      sub_10012BF98();
      goto LABEL_18;
    case 1:
      sub_100A3773C();
      sub_10017ED5C();
      sub_10012BF98();
      goto LABEL_18;
    case 2:
      sub_100A376F0();
      sub_10017ED5C();
      sub_10012BF98();
      goto LABEL_18;
    case 3:
      sub_100A376A4();
      sub_10017E57C();
      sub_100185764();
      goto LABEL_18;
    case 4:
      sub_100A37658();
      sub_10017E57C();
      sub_1001A35A8();
      goto LABEL_18;
    case 5:
      sub_100A3760C();
      sub_10017E57C();
      sub_10018138C();
      goto LABEL_18;
    case 6:
      sub_100A375C0();
      sub_10017E57C();
      sub_10018A120();
      goto LABEL_18;
    case 7:
      sub_100A37574();
      sub_10017E57C();
      sub_10018ABF4();
      goto LABEL_18;
    case 8:
      sub_100A37528();
      sub_10017E57C();
      sub_10018138C();
      goto LABEL_18;
    case 9:
      sub_100A374DC();
      sub_10017E57C();
      sub_100186DB0();
      goto LABEL_18;
    case 10:
      sub_100A37490();
      sub_10017E57C();
      goto LABEL_18;
    case 11:
      sub_100A37444();
      sub_10017E57C();
      goto LABEL_18;
    case 12:
      sub_100A373F8();
      sub_10017E57C();
      goto LABEL_18;
    case 13:
      sub_100A373AC();
      sub_10017E57C();
LABEL_18:
      sub_100162F0C();
      v46(v42, v43, v44, v45);
      sub_100162F0C();
      uint64_t result = v51(v47, v48, v49, v50);
      break;
    default:
      sub_100A37360();
      KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      KeyedEncodingContainer.encode(_:forKey:)();
      sub_100162F0C();
      v35(v31, v32, v33, v34);
      sub_100162F0C();
      uint64_t result = v40(v36, v37, v38, v39);
      break;
  }
  return result;
}

uint64_t sub_100A35678(void *a1)
{
  sub_10017DF08(&qword_100EAB2D8);
  sub_100179C0C();
  __chkstk_darwin(v3);
  sub_100109314();
  sub_10017DF08(&qword_100EAB2E0);
  sub_100179C0C();
  __chkstk_darwin(v4);
  sub_100109314();
  sub_10017DF08(&qword_100EAB2E8);
  sub_100179C0C();
  __chkstk_darwin(v5);
  sub_10017225C(v6, v86);
  sub_10017DF08(&qword_100EAB2F0);
  sub_100179C0C();
  __chkstk_darwin(v7);
  sub_100109314();
  sub_10017DF08(&qword_100EAB2F8);
  sub_100179C0C();
  __chkstk_darwin(v8);
  sub_100109314();
  sub_10017DF08(&qword_100EAB300);
  sub_100179C0C();
  __chkstk_darwin(v9);
  sub_100164B64(v10, v87);
  sub_10017DF08(&qword_100EAB308);
  sub_100179C0C();
  __chkstk_darwin(v11);
  sub_100109314();
  sub_10017DF08(&qword_100EAB310);
  sub_100179C0C();
  __chkstk_darwin(v12);
  sub_100109314();
  sub_10017DF08(&qword_100EAB318);
  sub_100179C0C();
  __chkstk_darwin(v13);
  sub_100109314();
  sub_10017DF08(&qword_100EAB320);
  sub_100179C0C();
  __chkstk_darwin(v14);
  sub_100109314();
  sub_10017DF08(&qword_100EAB328);
  sub_100179C0C();
  __chkstk_darwin(v15);
  sub_10011BA64(v16, v88);
  sub_10017DF08(&qword_100EAB330);
  sub_100179C0C();
  __chkstk_darwin(v17);
  sub_100109314();
  sub_10017DF08(&qword_100EAB338);
  sub_100179C0C();
  __chkstk_darwin(v18);
  sub_100109314();
  sub_10017DF08(&qword_100EAB340);
  sub_100179C0C();
  __chkstk_darwin(v19);
  sub_1001626E0();
  uint64_t v22 = v21 - v20;
  sub_10017DF08(&qword_100EAB348);
  sub_100179C0C();
  __chkstk_darwin(v23);
  sub_1001626E0();
  uint64_t v24 = sub_10017DF08(&qword_100EAB350);
  sub_100179C0C();
  uint64_t v26 = v25;
  __chkstk_darwin(v27);
  sub_10011C760();
  uint64_t v90 = a1;
  sub_1001B1E64(a1, a1[3]);
  sub_100A37314();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v91)
  {
    uint64_t v28 = (uint64_t)a1;
    goto LABEL_10;
  }
  uint64_t v92 = v26;
  uint64_t v29 = v1;
  uint64_t v30 = KeyedDecodingContainer.allKeys.getter();
  uint64_t v31 = *(void *)(v30 + 16);
  if (!v31)
  {
    uint64_t v28 = (uint64_t)v90;
    uint64_t v41 = v92;
LABEL_9:
    uint64_t v22 = type metadata accessor for DecodingError();
    swift_allocError();
    uint64_t v43 = v42;
    sub_10017DF08(&qword_100E67280);
    *uint64_t v43 = &type metadata for WeatherFetchErrorKind;
    KeyedDecodingContainer.codingPath.getter();
    DecodingError.Context.init(codingPath:debugDescription:underlyingError:)();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v22 - 8) + 104))(v43, enum case for DecodingError.typeMismatch(_:), v22);
    swift_willThrow();
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v29, v24);
    goto LABEL_10;
  }
  uint64_t v89 = v24;
  uint64_t v32 = v1;
  uint64_t v33 = *(unsigned __int8 *)(v30 + 32);
  sub_100723214(1, v31, v30, v30 + 32, 0, (2 * v31) | 1);
  uint64_t v35 = v34;
  unint64_t v37 = v36;
  swift_bridgeObjectRelease();
  if (v35 != v37 >> 1)
  {
    uint64_t v28 = (uint64_t)v90;
    uint64_t v41 = v92;
    uint64_t v29 = v32;
    uint64_t v24 = v89;
    goto LABEL_9;
  }
  switch(v33)
  {
    case 1:
      sub_100A3773C();
      sub_10017DA1C();
      sub_10018138C();
      sub_100162F0C();
      v45();
      swift_unknownObjectRelease();
      uint64_t v46 = sub_10019F684();
      v47(v46);
      uint64_t v22 = 0;
      goto LABEL_25;
    case 2:
      sub_100A376F0();
      sub_10017DA1C();
      sub_100185764();
      sub_100162F0C();
      v48();
      swift_unknownObjectRelease();
      uint64_t v49 = sub_10019F684();
      v50(v49);
      uint64_t v22 = 0;
      goto LABEL_25;
    case 3:
      sub_100A376A4();
      sub_1001A2828();
      sub_1001A35A8();
      sub_100162F0C();
      v51();
      swift_unknownObjectRelease();
      uint64_t v52 = sub_10019F684();
      v53(v52);
      uint64_t v22 = 0;
      goto LABEL_25;
    case 4:
      sub_100A37658();
      sub_10017DA1C();
      sub_10018138C();
      sub_100162F0C();
      v54();
      swift_unknownObjectRelease();
      uint64_t v55 = sub_10019F684();
      v56(v55);
      uint64_t v22 = 0;
      goto LABEL_25;
    case 5:
      sub_100A3760C();
      sub_10017DA1C();
      sub_10018138C();
      sub_100162F0C();
      v57();
      swift_unknownObjectRelease();
      uint64_t v58 = sub_10019F684();
      v59(v58);
      uint64_t v22 = 0;
      goto LABEL_25;
    case 6:
      sub_100A375C0();
      sub_10017DA1C();
      sub_10018A120();
      sub_100162F0C();
      v60();
      swift_unknownObjectRelease();
      uint64_t v61 = sub_10019F684();
      v62(v61);
      uint64_t v22 = 0;
      goto LABEL_25;
    case 7:
      sub_100A37574();
      sub_1001A2828();
      sub_10012BF98();
      sub_100162F0C();
      v78();
      swift_unknownObjectRelease();
      sub_1001653EC();
      sub_100162F0C();
      v79();
      uint64_t v22 = 0;
      goto LABEL_25;
    case 8:
      sub_100A37528();
      sub_10017DA1C();
      sub_10018ABF4();
      sub_100162F0C();
      v63();
      swift_unknownObjectRelease();
      uint64_t v64 = sub_10019F684();
      v65(v64);
      uint64_t v22 = 0;
      goto LABEL_25;
    case 9:
      sub_100A374DC();
      sub_10017DA1C();
      sub_10018138C();
      sub_100162F0C();
      v66();
      swift_unknownObjectRelease();
      uint64_t v67 = sub_10019F684();
      v68(v67);
      uint64_t v22 = 0;
      goto LABEL_25;
    case 10:
      sub_100A37490();
      sub_10017DA1C();
      sub_10018138C();
      sub_100162F0C();
      v69();
      swift_unknownObjectRelease();
      uint64_t v70 = sub_10019F684();
      v71(v70);
      uint64_t v22 = 0;
      goto LABEL_25;
    case 11:
      sub_100A37444();
      sub_10017DA1C();
      sub_100186DB0();
      sub_100162F0C();
      v72();
      swift_unknownObjectRelease();
      uint64_t v73 = sub_10019F684();
      v74(v73);
      uint64_t v22 = 0;
      goto LABEL_25;
    case 12:
      sub_100A373F8();
      sub_10017DA1C();
      sub_10018138C();
      sub_100162F0C();
      v75();
      swift_unknownObjectRelease();
      uint64_t v76 = sub_10019F684();
      v77(v76);
      uint64_t v22 = 0;
      goto LABEL_25;
    case 13:
      sub_100A373AC();
      sub_10017DA1C();
      sub_100162F0C();
      v80();
      swift_unknownObjectRelease();
      uint64_t v81 = sub_10019F684();
      v82(v81);
      uint64_t v22 = 0;
      goto LABEL_25;
    case 14:
      sub_100A37360();
      sub_1001A2828();
      uint64_t v28 = (uint64_t)v90;
      uint64_t v22 = KeyedDecodingContainer.decode(_:forKey:)();
      sub_100162F0C();
      v83();
      swift_unknownObjectRelease();
      uint64_t v84 = sub_1001A2F68();
      v85(v84);
      break;
    default:
      sub_100A37788();
      sub_10017DA1C();
      sub_10018138C();
      sub_100162F0C();
      v38();
      swift_unknownObjectRelease();
      uint64_t v39 = sub_10019F684();
      v40(v39);
      uint64_t v22 = 0;
LABEL_25:
      uint64_t v28 = (uint64_t)v90;
      break;
  }
LABEL_10:
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v28);
  return v22;
}

unint64_t sub_100A36474()
{
  return sub_100A34B3C(*v0);
}

uint64_t sub_100A3647C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100A344FC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100A364A4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_100A34B34();
  *a1 = result;
  return result;
}

uint64_t sub_100A364CC(uint64_t a1)
{
  unint64_t v2 = sub_100A37314();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100A36508(uint64_t a1)
{
  unint64_t v2 = sub_100A37314();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100A36544(uint64_t a1)
{
  unint64_t v2 = sub_100A37360();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100A36580(uint64_t a1)
{
  unint64_t v2 = sub_100A37360();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100A365BC(uint64_t a1)
{
  unint64_t v2 = sub_100A37574();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100A365F8(uint64_t a1)
{
  unint64_t v2 = sub_100A37574();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100A36634(uint64_t a1)
{
  unint64_t v2 = sub_100A373F8();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100A36670(uint64_t a1)
{
  unint64_t v2 = sub_100A373F8();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100A366AC(uint64_t a1)
{
  unint64_t v2 = sub_100A376A4();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100A366E8(uint64_t a1)
{
  unint64_t v2 = sub_100A376A4();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100A36724(uint64_t a1)
{
  unint64_t v2 = sub_100A37658();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100A36760(uint64_t a1)
{
  unint64_t v2 = sub_100A37658();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100A3679C(uint64_t a1)
{
  unint64_t v2 = sub_100A37528();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100A367D8(uint64_t a1)
{
  unint64_t v2 = sub_100A37528();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100A36814(uint64_t a1)
{
  unint64_t v2 = sub_100A37444();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100A36850(uint64_t a1)
{
  unint64_t v2 = sub_100A37444();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100A3688C(uint64_t a1)
{
  unint64_t v2 = sub_100A37490();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100A368C8(uint64_t a1)
{
  unint64_t v2 = sub_100A37490();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100A36904(uint64_t a1)
{
  unint64_t v2 = sub_100A373AC();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100A36940(uint64_t a1)
{
  unint64_t v2 = sub_100A373AC();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100A3697C(uint64_t a1)
{
  unint64_t v2 = sub_100A37788();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100A369B8(uint64_t a1)
{
  unint64_t v2 = sub_100A37788();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100A369F4(uint64_t a1)
{
  unint64_t v2 = sub_100A3773C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100A36A30(uint64_t a1)
{
  unint64_t v2 = sub_100A3773C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100A36A6C(uint64_t a1)
{
  unint64_t v2 = sub_100A376F0();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100A36AA8(uint64_t a1)
{
  unint64_t v2 = sub_100A376F0();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100A36AE4(uint64_t a1)
{
  unint64_t v2 = sub_100A375C0();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100A36B20(uint64_t a1)
{
  unint64_t v2 = sub_100A375C0();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100A36B5C(uint64_t a1)
{
  unint64_t v2 = sub_100A374DC();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100A36B98(uint64_t a1)
{
  unint64_t v2 = sub_100A374DC();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100A36BD4(uint64_t a1)
{
  unint64_t v2 = sub_100A3760C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100A36C10(uint64_t a1)
{
  unint64_t v2 = sub_100A3760C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100A36C4C(uint64_t *a1, uint64_t a2)
{
  return sub_100A343C8(*a1, a1[1], *(void *)a2, *(void *)(a2 + 8));
}

uint64_t sub_100A36C60@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_100A35678(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
  }
  return result;
}

uint64_t sub_100A36C8C(void *a1)
{
  return sub_100A34D3C(a1, *v1, v1[1]);
}

uint64_t sub_100A36CA8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1008C3BA0();
  if (!v1)
  {
    *a1 = result;
    a1[1] = v4;
  }
  return result;
}

uint64_t sub_100A36CD4(uint64_t a1)
{
  return sub_1008C3918(a1, *v1, v1[1]);
}

uint64_t sub_100A36CF0()
{
  type metadata accessor for WDSClientErrors();
  sub_100179C0C();
  __chkstk_darwin(v0);
  uint64_t v2 = sub_1001D2138(v1, v15);
  v3(v2);
  uint64_t v4 = sub_1001841EC();
  int v6 = v5(v4);
  if (v6 == enum case for WDSClientErrors.networkError(_:))
  {
    uint64_t v7 = sub_100182D54();
    v8(v7);
    swift_getErrorValue();
    uint64_t v9 = Error.domainAndCode.getter();
    swift_errorRelease();
  }
  else if (v6 == enum case for WDSClientErrors.responseFailed(_:) {
         || v6 == enum case for WDSClientErrors.failedToCreateResponseModel(_:)
  }
         || v6 == enum case for WDSClientErrors.invalidAuthorization(_:))
  {
    uint64_t v10 = sub_100163C48();
    v11(v10);
    return 0;
  }
  else if (v6 == enum case for WDSClientErrors.unexpectedDateFormat(_:))
  {
    return 0;
  }
  else if (v6 == enum case for WDSClientErrors.missingResponse(_:))
  {
    return 0;
  }
  else
  {
    sub_100A37214(&qword_100EAB2D0, (void (*)(uint64_t))&type metadata accessor for WDSClientErrors);
    uint64_t v9 = Error.domainAndCode.getter();
    uint64_t v12 = sub_100182D54();
    v13(v12);
  }
  return v9;
}

uint64_t sub_100A36EE8()
{
  type metadata accessor for WDSJWTAuthenticatorService.Errors();
  sub_100179C0C();
  __chkstk_darwin(v0);
  uint64_t v2 = sub_1001D2138(v1, v11);
  v3(v2);
  uint64_t v4 = sub_1001841EC();
  int v6 = v5(v4);
  if (v6 == enum case for WDSJWTAuthenticatorService.Errors.invalidBundleIdentifier(_:))
  {
    uint64_t v7 = 0;
LABEL_10:
    uint64_t v8 = sub_100182D54();
    v9(v8);
    return v7;
  }
  if (v6 == enum case for WDSJWTAuthenticatorService.Errors.invalidJWTResponse(_:))
  {
    uint64_t v7 = 0;
    goto LABEL_10;
  }
  if (v6 == enum case for WDSJWTAuthenticatorService.Errors.failedToGenerateSigningRequestData(_:)) {
    return 0;
  }
  if (v6 != enum case for WDSJWTAuthenticatorService.Errors.invalidServerResponse(_:))
  {
    sub_100A37214(&qword_100EAB2C8, (void (*)(uint64_t))&type metadata accessor for WDSJWTAuthenticatorService.Errors);
    uint64_t v7 = Error.domainAndCode.getter();
    goto LABEL_10;
  }
  return 0;
}

uint64_t sub_100A3704C()
{
  uint64_t v0 = type metadata accessor for WeatherProduct();
  sub_100179C0C();
  uint64_t v2 = v1;
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  WeatherModel.MissingProductError.product.getter();
  uint64_t v6 = sub_1001841EC();
  int v8 = v7(v6);
  uint64_t v9 = 0;
  if (v8 != enum case for WeatherProduct.currentWeather(_:))
  {
    if (v8 == enum case for WeatherProduct.forecastDaily(_:))
    {
      return 0;
    }
    else if (v8 == enum case for WeatherProduct.forecastHourly(_:))
    {
      return 0;
    }
    else
    {
      type metadata accessor for WeatherModel.MissingProductError();
      sub_100A37214(&qword_100EAB2C0, (void (*)(uint64_t))&type metadata accessor for WeatherModel.MissingProductError);
      uint64_t v9 = Error.domainAndCode.getter();
      (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v0);
    }
  }
  return v9;
}

uint64_t sub_100A371B4(uint64_t a1)
{
  uint64_t v2 = sub_10017DF08(&qword_100EAB2B8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100A37214(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for WeatherFetchErrorKind(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 > 0x7FFFFFF1 && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 2147483634);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 13;
  if (v4 >= 0xF) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for WeatherFetchErrorKind(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFF2)
  {
    *(void *)uint64_t result = 0;
    *(void *)(result + 8) = 0;
    *(_DWORD *)uint64_t result = a2 - 2147483634;
    if (a3 >= 0x7FFFFFF2) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFF2) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2 + 13;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WeatherFetchErrorKind()
{
  return &type metadata for WeatherFetchErrorKind;
}

unint64_t sub_100A37314()
{
  unint64_t result = qword_100EAB358;
  if (!qword_100EAB358)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAB358);
  }
  return result;
}

unint64_t sub_100A37360()
{
  unint64_t result = qword_100EAB360;
  if (!qword_100EAB360)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAB360);
  }
  return result;
}

unint64_t sub_100A373AC()
{
  unint64_t result = qword_100EAB368;
  if (!qword_100EAB368)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAB368);
  }
  return result;
}

unint64_t sub_100A373F8()
{
  unint64_t result = qword_100EAB370;
  if (!qword_100EAB370)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAB370);
  }
  return result;
}

unint64_t sub_100A37444()
{
  unint64_t result = qword_100EAB378;
  if (!qword_100EAB378)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAB378);
  }
  return result;
}

unint64_t sub_100A37490()
{
  unint64_t result = qword_100EAB380;
  if (!qword_100EAB380)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAB380);
  }
  return result;
}

unint64_t sub_100A374DC()
{
  unint64_t result = qword_100EAB388;
  if (!qword_100EAB388)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAB388);
  }
  return result;
}

unint64_t sub_100A37528()
{
  unint64_t result = qword_100EAB390;
  if (!qword_100EAB390)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAB390);
  }
  return result;
}

unint64_t sub_100A37574()
{
  unint64_t result = qword_100EAB398;
  if (!qword_100EAB398)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAB398);
  }
  return result;
}

unint64_t sub_100A375C0()
{
  unint64_t result = qword_100EAB3A0;
  if (!qword_100EAB3A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAB3A0);
  }
  return result;
}

unint64_t sub_100A3760C()
{
  unint64_t result = qword_100EAB3A8;
  if (!qword_100EAB3A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAB3A8);
  }
  return result;
}

unint64_t sub_100A37658()
{
  unint64_t result = qword_100EAB3B0;
  if (!qword_100EAB3B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAB3B0);
  }
  return result;
}

unint64_t sub_100A376A4()
{
  unint64_t result = qword_100EAB3B8;
  if (!qword_100EAB3B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAB3B8);
  }
  return result;
}

unint64_t sub_100A376F0()
{
  unint64_t result = qword_100EAB3C0;
  if (!qword_100EAB3C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAB3C0);
  }
  return result;
}

unint64_t sub_100A3773C()
{
  unint64_t result = qword_100EAB3C8;
  if (!qword_100EAB3C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAB3C8);
  }
  return result;
}

unint64_t sub_100A37788()
{
  unint64_t result = qword_100EAB3D0;
  if (!qword_100EAB3D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAB3D0);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for WeatherFetchErrorKind.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xF2)
  {
    if (a2 + 14 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 14) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 15;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xF;
  int v5 = v6 - 15;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for WeatherFetchErrorKind.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 14 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 14) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF2) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF1)
  {
    unsigned int v6 = ((a2 - 242) >> 8) + 1;
    *unint64_t result = a2 + 14;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100A37928);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 14;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WeatherFetchErrorKind.CodingKeys()
{
  return &type metadata for WeatherFetchErrorKind.CodingKeys;
}

ValueMetadata *type metadata accessor for WeatherFetchErrorKind.MissingCurrentCodingKeys()
{
  return &type metadata for WeatherFetchErrorKind.MissingCurrentCodingKeys;
}

ValueMetadata *type metadata accessor for WeatherFetchErrorKind.MissingDailyCodingKeys()
{
  return &type metadata for WeatherFetchErrorKind.MissingDailyCodingKeys;
}

ValueMetadata *type metadata accessor for WeatherFetchErrorKind.MissingHourlyCodingKeys()
{
  return &type metadata for WeatherFetchErrorKind.MissingHourlyCodingKeys;
}

ValueMetadata *type metadata accessor for WeatherFetchErrorKind.InsufficientDaysCodingKeys()
{
  return &type metadata for WeatherFetchErrorKind.InsufficientDaysCodingKeys;
}

ValueMetadata *type metadata accessor for WeatherFetchErrorKind.InsufficientHoursCodingKeys()
{
  return &type metadata for WeatherFetchErrorKind.InsufficientHoursCodingKeys;
}

ValueMetadata *type metadata accessor for WeatherFetchErrorKind.UnexpectedDateFormatCodingKeys()
{
  return &type metadata for WeatherFetchErrorKind.UnexpectedDateFormatCodingKeys;
}

ValueMetadata *type metadata accessor for WeatherFetchErrorKind.MissingResponseCodingKeys()
{
  return &type metadata for WeatherFetchErrorKind.MissingResponseCodingKeys;
}

ValueMetadata *type metadata accessor for WeatherFetchErrorKind.FailedToCreateResponseModelCodingKeys()
{
  return &type metadata for WeatherFetchErrorKind.FailedToCreateResponseModelCodingKeys;
}

ValueMetadata *type metadata accessor for WeatherFetchErrorKind.InvalidAuthorizationCodingKeys()
{
  return &type metadata for WeatherFetchErrorKind.InvalidAuthorizationCodingKeys;
}

ValueMetadata *type metadata accessor for WeatherFetchErrorKind.ResponseFailedCodingKeys()
{
  return &type metadata for WeatherFetchErrorKind.ResponseFailedCodingKeys;
}

ValueMetadata *type metadata accessor for WeatherFetchErrorKind.InvalidJWTResponseCodingKeys()
{
  return &type metadata for WeatherFetchErrorKind.InvalidJWTResponseCodingKeys;
}

ValueMetadata *type metadata accessor for WeatherFetchErrorKind.InvalidBundleIdentifierCodingKeys()
{
  return &type metadata for WeatherFetchErrorKind.InvalidBundleIdentifierCodingKeys;
}

ValueMetadata *type metadata accessor for WeatherFetchErrorKind.FailedToGenerateSigningRequestDataCodingKeys()
{
  return &type metadata for WeatherFetchErrorKind.FailedToGenerateSigningRequestDataCodingKeys;
}

ValueMetadata *type metadata accessor for WeatherFetchErrorKind.InvalidServerResponseForJWTTokenCodingKeys()
{
  return &type metadata for WeatherFetchErrorKind.InvalidServerResponseForJWTTokenCodingKeys;
}

unsigned char *storeEnumTagSinglePayload for WeatherFetchErrorKind.ExternalCodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x100A37ADCLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for WeatherFetchErrorKind.ExternalCodingKeys()
{
  return &type metadata for WeatherFetchErrorKind.ExternalCodingKeys;
}

unint64_t sub_100A37B18()
{
  unint64_t result = qword_100EAB458;
  if (!qword_100EAB458)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAB458);
  }
  return result;
}

unint64_t sub_100A37B68()
{
  unint64_t result = qword_100EAB460;
  if (!qword_100EAB460)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAB460);
  }
  return result;
}

unint64_t sub_100A37BB8()
{
  unint64_t result = qword_100EAB468;
  if (!qword_100EAB468)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAB468);
  }
  return result;
}

unint64_t sub_100A37C08()
{
  unint64_t result = qword_100EAB470;
  if (!qword_100EAB470)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAB470);
  }
  return result;
}

unint64_t sub_100A37C58()
{
  unint64_t result = qword_100EAB478;
  if (!qword_100EAB478)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAB478);
  }
  return result;
}

unint64_t sub_100A37CA8()
{
  unint64_t result = qword_100EAB480;
  if (!qword_100EAB480)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAB480);
  }
  return result;
}

unint64_t sub_100A37CF8()
{
  unint64_t result = qword_100EAB488;
  if (!qword_100EAB488)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAB488);
  }
  return result;
}

unint64_t sub_100A37D48()
{
  unint64_t result = qword_100EAB490;
  if (!qword_100EAB490)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAB490);
  }
  return result;
}

unint64_t sub_100A37D98()
{
  unint64_t result = qword_100EAB498;
  if (!qword_100EAB498)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAB498);
  }
  return result;
}

unint64_t sub_100A37DE8()
{
  unint64_t result = qword_100EAB4A0;
  if (!qword_100EAB4A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAB4A0);
  }
  return result;
}

unint64_t sub_100A37E38()
{
  unint64_t result = qword_100EAB4A8;
  if (!qword_100EAB4A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAB4A8);
  }
  return result;
}

unint64_t sub_100A37E88()
{
  unint64_t result = qword_100EAB4B0;
  if (!qword_100EAB4B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAB4B0);
  }
  return result;
}

unint64_t sub_100A37ED8()
{
  unint64_t result = qword_100EAB4B8;
  if (!qword_100EAB4B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAB4B8);
  }
  return result;
}

unint64_t sub_100A37F28()
{
  unint64_t result = qword_100EAB4C0;
  if (!qword_100EAB4C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAB4C0);
  }
  return result;
}

unint64_t sub_100A37F78()
{
  unint64_t result = qword_100EAB4C8;
  if (!qword_100EAB4C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAB4C8);
  }
  return result;
}

unint64_t sub_100A37FC8()
{
  unint64_t result = qword_100EAB4D0;
  if (!qword_100EAB4D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAB4D0);
  }
  return result;
}

unint64_t sub_100A38018()
{
  unint64_t result = qword_100EAB4D8;
  if (!qword_100EAB4D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAB4D8);
  }
  return result;
}

unint64_t sub_100A38068()
{
  unint64_t result = qword_100EAB4E0;
  if (!qword_100EAB4E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAB4E0);
  }
  return result;
}

unint64_t sub_100A380B8()
{
  unint64_t result = qword_100EAB4E8;
  if (!qword_100EAB4E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAB4E8);
  }
  return result;
}

unint64_t sub_100A38108()
{
  unint64_t result = qword_100EAB4F0;
  if (!qword_100EAB4F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAB4F0);
  }
  return result;
}

unint64_t sub_100A38158()
{
  unint64_t result = qword_100EAB4F8;
  if (!qword_100EAB4F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAB4F8);
  }
  return result;
}

unint64_t sub_100A381A8()
{
  unint64_t result = qword_100EAB500;
  if (!qword_100EAB500)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAB500);
  }
  return result;
}

unint64_t sub_100A381F8()
{
  unint64_t result = qword_100EAB508;
  if (!qword_100EAB508)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAB508);
  }
  return result;
}

unint64_t sub_100A38248()
{
  unint64_t result = qword_100EAB510;
  if (!qword_100EAB510)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAB510);
  }
  return result;
}

unint64_t sub_100A38298()
{
  unint64_t result = qword_100EAB518;
  if (!qword_100EAB518)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAB518);
  }
  return result;
}

unint64_t sub_100A382E8()
{
  unint64_t result = qword_100EAB520;
  if (!qword_100EAB520)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAB520);
  }
  return result;
}

unint64_t sub_100A38338()
{
  unint64_t result = qword_100EAB528;
  if (!qword_100EAB528)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAB528);
  }
  return result;
}

unint64_t sub_100A38388()
{
  unint64_t result = qword_100EAB530;
  if (!qword_100EAB530)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAB530);
  }
  return result;
}

unint64_t sub_100A383D8()
{
  unint64_t result = qword_100EAB538;
  if (!qword_100EAB538)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAB538);
  }
  return result;
}

unint64_t sub_100A38428()
{
  unint64_t result = qword_100EAB540;
  if (!qword_100EAB540)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAB540);
  }
  return result;
}

unint64_t sub_100A38478()
{
  unint64_t result = qword_100EAB548;
  if (!qword_100EAB548)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAB548);
  }
  return result;
}

unint64_t sub_100A384C8()
{
  unint64_t result = qword_100EAB550;
  if (!qword_100EAB550)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAB550);
  }
  return result;
}

unint64_t sub_100A38518()
{
  unint64_t result = qword_100EAB558;
  if (!qword_100EAB558)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAB558);
  }
  return result;
}

unint64_t sub_100A38568()
{
  unint64_t result = qword_100EAB560;
  if (!qword_100EAB560)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAB560);
  }
  return result;
}

ValueMetadata *type metadata accessor for TransitionState()
{
  return &type metadata for TransitionState;
}

uint64_t sub_100A385C8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701736302 && a2 == 0xE400000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x6E69676562 && a2 == 0xE500000000000000;
    if (v6 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 6581861 && a2 == 0xE300000000000000)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      char v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v8) {
        return 2;
      }
      else {
        return 3;
      }
    }
  }
}

uint64_t sub_100A386F0(char a1)
{
  if (!a1) {
    return 1701736302;
  }
  if (a1 == 1) {
    return 0x6E69676562;
  }
  return 6581861;
}

uint64_t sub_100A38734(void *a1, char a2)
{
  sub_10017DF08(&qword_100EAB5B0);
  sub_100179C0C();
  uint64_t v27 = v5;
  uint64_t v28 = v4;
  __chkstk_darwin(v4);
  sub_100109314();
  uint64_t v26 = v6;
  sub_10017DF08(&qword_100EAB5B8);
  sub_100179C0C();
  uint64_t v24 = v8;
  uint64_t v25 = v7;
  __chkstk_darwin(v7);
  sub_1001626E0();
  uint64_t v11 = v10 - v9;
  uint64_t v12 = sub_10017DF08(&qword_100EAB5C0);
  sub_100179C0C();
  uint64_t v23 = v13;
  __chkstk_darwin(v14);
  sub_1001626E0();
  uint64_t v17 = v16 - v15;
  uint64_t v18 = sub_10017DF08(&qword_100EAB5C8);
  sub_100179C0C();
  uint64_t v20 = v19;
  __chkstk_darwin(v21);
  sub_100125FF8();
  sub_1001B1E64(a1, a1[3]);
  sub_100A39104();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  if (a2)
  {
    if (a2 == 1)
    {
      sub_100A3919C();
      sub_100178FC0();
      (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v11, v25);
    }
    else
    {
      sub_100A39150();
      sub_100178FC0();
      (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v26, v28);
    }
  }
  else
  {
    sub_100A391E8();
    sub_100178FC0();
    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v17, v12);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v20 + 8))(v2, v18);
}

char *sub_100A389B0(void *a1)
{
  uint64_t v36 = sub_10017DF08(&qword_100EAB570);
  sub_100179C0C();
  uint64_t v39 = v3;
  __chkstk_darwin(v4);
  sub_100109314();
  uint64_t v41 = v5;
  sub_10017DF08(&qword_100EAB578);
  sub_100179C0C();
  uint64_t v37 = v7;
  uint64_t v38 = v6;
  __chkstk_darwin(v6);
  sub_1001626E0();
  uint64_t v10 = v9 - v8;
  uint64_t v11 = sub_10017DF08(&qword_100EAB580);
  sub_100179C0C();
  uint64_t v35 = v12;
  __chkstk_darwin(v13);
  sub_100125FF8();
  uint64_t v14 = sub_10017DF08(&qword_100EAB588);
  sub_100179C0C();
  uint64_t v40 = v15;
  __chkstk_darwin(v16);
  sub_1001626E0();
  uint64_t v19 = (char *)(v18 - v17);
  sub_1001B1E64(a1, a1[3]);
  sub_100A39104();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v42) {
    goto LABEL_9;
  }
  uint64_t v43 = (uint64_t)a1;
  uint64_t v20 = KeyedDecodingContainer.allKeys.getter();
  uint64_t v21 = *(void *)(v20 + 16);
  if (!v21
    || (uint64_t v22 = v19,
        uint64_t v19 = (char *)*(unsigned __int8 *)(v20 + 32),
        sub_100723214(1, v21, v20, v20 + 32, 0, (2 * v21) | 1),
        uint64_t v24 = v23,
        unint64_t v26 = v25,
        swift_bridgeObjectRelease(),
        v24 != v26 >> 1))
  {
    uint64_t v27 = type metadata accessor for DecodingError();
    swift_allocError();
    uint64_t v29 = v28;
    uint64_t v19 = (char *)v28 + *(int *)(sub_10017DF08(&qword_100E67280) + 48);
    *uint64_t v29 = &type metadata for TransitionState;
    KeyedDecodingContainer.codingPath.getter();
    DecodingError.Context.init(codingPath:debugDescription:underlyingError:)();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v27 - 8) + 104))(v29, enum case for DecodingError.typeMismatch(_:), v27);
    swift_willThrow();
    swift_unknownObjectRelease();
    uint64_t v30 = sub_100179EA4();
    v31(v30);
    a1 = (void *)v43;
LABEL_9:
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)a1);
    return v19;
  }
  if (v19)
  {
    if (v19 == 1)
    {
      sub_100A3919C();
      sub_10018519C();
      (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v10, v38);
    }
    else
    {
      sub_100A39150();
      sub_10018519C();
      (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v41, v36);
    }
    swift_unknownObjectRelease();
    (*(void (**)(char *, uint64_t))(v40 + 8))(v22, v14);
  }
  else
  {
    sub_100A391E8();
    sub_10018519C();
    (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v1, v11);
    swift_unknownObjectRelease();
    uint64_t v33 = sub_100179EA4();
    v34(v33);
  }
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v43);
  return v19;
}

uint64_t sub_100A38E5C(uint64_t a1)
{
  unint64_t v2 = sub_100A3919C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100A38E98(uint64_t a1)
{
  unint64_t v2 = sub_100A3919C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100A38ED4()
{
  return sub_100A386F0(*v0);
}

uint64_t sub_100A38EDC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100A385C8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100A38F04(uint64_t a1)
{
  unint64_t v2 = sub_100A39104();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100A38F40(uint64_t a1)
{
  unint64_t v2 = sub_100A39104();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100A38F7C(uint64_t a1)
{
  unint64_t v2 = sub_100A39150();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100A38FB8(uint64_t a1)
{
  unint64_t v2 = sub_100A39150();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100A38FF4(uint64_t a1)
{
  unint64_t v2 = sub_100A391E8();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100A39030(uint64_t a1)
{
  unint64_t v2 = sub_100A391E8();

  return CodingKey.debugDescription.getter(a1, v2);
}

char *sub_100A3906C@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_100A389B0(a1);
  if (!v2) {
    *a2 = (_BYTE)result;
  }
  return result;
}

uint64_t sub_100A39098(void *a1)
{
  return sub_100A38734(a1, *v1);
}

unint64_t sub_100A390B8()
{
  unint64_t result = qword_100EAB568;
  if (!qword_100EAB568)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAB568);
  }
  return result;
}

unint64_t sub_100A39104()
{
  unint64_t result = qword_100EAB590;
  if (!qword_100EAB590)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAB590);
  }
  return result;
}

unint64_t sub_100A39150()
{
  unint64_t result = qword_100EAB598;
  if (!qword_100EAB598)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAB598);
  }
  return result;
}

unint64_t sub_100A3919C()
{
  unint64_t result = qword_100EAB5A0;
  if (!qword_100EAB5A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAB5A0);
  }
  return result;
}

unint64_t sub_100A391E8()
{
  unint64_t result = qword_100EAB5A8;
  if (!qword_100EAB5A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAB5A8);
  }
  return result;
}

unsigned char *_s7Weather15TransitionStateOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100A39300);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TransitionState.CodingKeys()
{
  return &type metadata for TransitionState.CodingKeys;
}

ValueMetadata *type metadata accessor for TransitionState.NoneCodingKeys()
{
  return &type metadata for TransitionState.NoneCodingKeys;
}

ValueMetadata *type metadata accessor for TransitionState.BeginCodingKeys()
{
  return &type metadata for TransitionState.BeginCodingKeys;
}

ValueMetadata *type metadata accessor for TransitionState.EndCodingKeys()
{
  return &type metadata for TransitionState.EndCodingKeys;
}

unint64_t sub_100A3936C()
{
  unint64_t result = qword_100EAB5D0;
  if (!qword_100EAB5D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAB5D0);
  }
  return result;
}

unint64_t sub_100A393BC()
{
  unint64_t result = qword_100EAB5D8;
  if (!qword_100EAB5D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAB5D8);
  }
  return result;
}

unint64_t sub_100A3940C()
{
  unint64_t result = qword_100EAB5E0;
  if (!qword_100EAB5E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAB5E0);
  }
  return result;
}

unint64_t sub_100A3945C()
{
  unint64_t result = qword_100EAB5E8;
  if (!qword_100EAB5E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAB5E8);
  }
  return result;
}

unint64_t sub_100A394AC()
{
  unint64_t result = qword_100EAB5F0;
  if (!qword_100EAB5F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAB5F0);
  }
  return result;
}

unint64_t sub_100A394FC()
{
  unint64_t result = qword_100EAB5F8;
  if (!qword_100EAB5F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAB5F8);
  }
  return result;
}

unint64_t sub_100A3954C()
{
  unint64_t result = qword_100EAB600;
  if (!qword_100EAB600)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAB600);
  }
  return result;
}

unint64_t sub_100A3959C()
{
  unint64_t result = qword_100EAB608;
  if (!qword_100EAB608)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAB608);
  }
  return result;
}

unint64_t sub_100A395EC()
{
  unint64_t result = qword_100EAB610;
  if (!qword_100EAB610)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAB610);
  }
  return result;
}

uint64_t sub_100A39638(char a1)
{
  if (a1) {
    return 0x30327265746E6977;
  }
  else {
    return 0x343230326C6C6166;
  }
}

uint64_t sub_100A39674@<X0>(char a1@<W0>, uint64_t *a2@<X8>)
{
  if (a1)
  {
    uint64_t v3 = _s5DemosO10Winter2024CMa(0);
    swift_allocObject();
    uint64_t result = sub_1007A38EC();
    uint64_t v5 = &off_100E276E0;
  }
  else
  {
    uint64_t v3 = _s5DemosO8Fall2024CMa(0);
    swift_allocObject();
    uint64_t result = sub_100043608();
    uint64_t v5 = &off_100E27710;
  }
  a2[3] = v3;
  a2[4] = (uint64_t)v5;
  *a2 = result;
  return result;
}

unsigned char *storeEnumTagSinglePayload for DemoPreset(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100A397C8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DemoPreset()
{
  return &type metadata for DemoPreset;
}

unint64_t sub_100A39804()
{
  unint64_t result = qword_100EAB618;
  if (!qword_100EAB618)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAB618);
  }
  return result;
}

uint64_t sub_100A39850(char *a1, char *a2)
{
  return sub_10088B98C(*a1, *a2);
}

Swift::Int sub_100A3985C()
{
  return sub_1006526A4();
}

uint64_t sub_100A39864()
{
  return sub_1002C32BC();
}

Swift::Int sub_100A3986C()
{
  return sub_1002C4120();
}

uint64_t sub_100A39874@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_1000AEB18(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_100A398A4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_100A39638(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

void sub_100A398D0(void *a1@<X8>)
{
  *a1 = &off_100E07288;
}

uint64_t sub_100A398E0(uint64_t a1)
{
  unint64_t v2 = sub_100A39A3C();

  return static RawRepresentable<>.dataType.getter(a1, v2, &protocol witness table for String);
}

uint64_t sub_100A39934(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_100A39A3C();

  return static RawRepresentable<>.convert(from:)(a1, a2, v4, &protocol witness table for String);
}

uint64_t sub_100A39990(uint64_t a1)
{
  unint64_t v2 = sub_100A39A3C();

  return RawRepresentable<>.toData()(a1, v2, &protocol witness table for String);
}

unint64_t sub_100A399E8()
{
  unint64_t result = qword_100EAB620;
  if (!qword_100EAB620)
  {
    sub_10018C6DC(&qword_100EAB628);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAB620);
  }
  return result;
}

unint64_t sub_100A39A3C()
{
  unint64_t result = qword_100EAB630;
  if (!qword_100EAB630)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAB630);
  }
  return result;
}

uint64_t sub_100A39A88(uint64_t a1, uint64_t a2)
{
  if ((static Date.== infix(_:_:)() & 1) == 0) {
    return 0;
  }
  uint64_t v4 = type metadata accessor for TemperatureAveragesHeroChartPeakMarkerModel();
  if (*(double *)(a1 + *(int *)(v4 + 20)) != *(double *)(a2 + *(int *)(v4 + 20))) {
    return 0;
  }
  uint64_t v5 = *(int *)(v4 + 24);
  uint64_t v6 = *(void *)(a1 + v5);
  uint64_t v7 = *(void *)(a1 + v5 + 8);
  uint64_t v8 = (void *)(a2 + v5);
  if (v6 == *v8 && v7 == v8[1]) {
    return 1;
  }

  return _stringCompareWithSmolCheck(_:_:expecting:)();
}

uint64_t type metadata accessor for TemperatureAveragesHeroChartPeakMarkerModel()
{
  uint64_t result = qword_100EAB690;
  if (!qword_100EAB690) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t *sub_100A39B68(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for Date();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 24);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    uint64_t v9 = (uint64_t *)((char *)a1 + v8);
    uint64_t v10 = (uint64_t *)((char *)a2 + v8);
    uint64_t v11 = v10[1];
    *uint64_t v9 = *v10;
    v9[1] = v11;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_100A39C48(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);

  return swift_bridgeObjectRelease();
}

uint64_t sub_100A39CC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = v9[1];
  *uint64_t v8 = *v9;
  v8[1] = v10;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_100A39D50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100A39DF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  return a1;
}

uint64_t sub_100A39E7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  *uint64_t v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100A39F10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100A39F24);
}

uint64_t sub_100A39F24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  type metadata accessor for Date();
  sub_100162F30();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    return _s7Weather24LocationCompositionStateOwet_0(a1, a2, v6);
  }
  else
  {
    unint64_t v9 = *(void *)(a1 + *(int *)(a3 + 24) + 8);
    if (v9 >= 0xFFFFFFFF) {
      LODWORD(v9) = -1;
    }
    return (v9 + 1);
  }
}

uint64_t sub_100A39FB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100A39FC8);
}

void sub_100A39FC8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  type metadata accessor for Date();
  sub_100162F30();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    _s7Weather24LocationCompositionStateOwst_0(a1, a2, a2, v8);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
  }
}

uint64_t sub_100A3A054()
{
  uint64_t result = type metadata accessor for Date();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_100A3A0F8(void *a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v39 = a4;
  uint64_t v37 = type metadata accessor for MainAction();
  __chkstk_darwin(v37);
  uint64_t v38 = (uint64_t *)((char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = type metadata accessor for Date();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100E62880 != -1) {
    swift_once();
  }
  uint64_t v12 = type metadata accessor for Logger();
  sub_1002102B0(v12, (uint64_t)qword_100F52088);
  swift_bridgeObjectRetain_n();
  uint64_t v13 = Logger.logObject.getter();
  os_log_type_t v14 = static os_log_type_t.info.getter();
  int v15 = v14;
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v16 = swift_slowAlloc();
    uint64_t v36 = a1;
    uint64_t v17 = v16;
    uint64_t v18 = swift_slowAlloc();
    uint64_t v35 = v18;
    *(_DWORD *)uint64_t v17 = 141558531;
    uint64_t v40 = 1752392040;
    *(void *)&v41[0] = v18;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v17 + 12) = 2081;
    int v34 = v15;
    swift_bridgeObjectRetain();
    uint64_t v40 = sub_10016414C(a2, a3, (uint64_t *)v41);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v17 + 22) = 2080;
    uint64_t v33 = v17 + 24;
    Date.init()();
    sub_1000EF168(&qword_100E656D8, (void (*)(uint64_t))&type metadata accessor for Date);
    uint64_t v19 = dispatch thunk of CustomStringConvertible.description.getter();
    unint64_t v21 = v20;
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    uint64_t v40 = sub_10016414C(v19, v21, (uint64_t *)v41);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v13, (os_log_type_t)v34, "Location loading interval elapsed - location is loading too slowly. ID=%{private,mask.hash}s, Now=%s", (uint8_t *)v17, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    a1 = v36;
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v22 = v39;
  UnfairLock.lock()();
  swift_beginAccess();
  uint64_t v23 = *(void *)(v22 + 48);
  swift_bridgeObjectRetain();
  uint64_t v24 = sub_1001BA1DC(a2, a3, v23);
  swift_endAccess();
  swift_bridgeObjectRelease();
  uint64_t v25 = a2;
  if (v24)
  {
    sub_1001E5CA4();
    id v26 = a1;
    id v27 = v24;
    char v28 = static NSObject.== infix(_:_:)();

    if (v28)
    {
      swift_beginAccess();
      swift_bridgeObjectRetain();
      uint64_t v29 = (void *)sub_1001E5BC4(v25, a3);
      swift_endAccess();
      swift_bridgeObjectRelease();
    }
  }
  UnfairLock.unlock()();
  uint64_t v30 = *(uint64_t (**)(uint64_t))(v22 + 24);
  uint64_t v31 = (uint64_t)v38;
  *uint64_t v38 = v25;
  *(void *)(v31 + 8) = a3;
  swift_storeEnumTagMultiPayload();
  uint64_t v42 = 0;
  memset(v41, 0, sizeof(v41));
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1001AAF58(v31, (uint64_t)v41, v30);
  sub_100016E7C((uint64_t)v41);
  sub_1001ABE70(v31);
  return swift_release();
}

uint64_t sub_100A3A59C()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_100A3A5CC()
{
  sub_100A3A59C();

  return swift_deallocClassInstance();
}

uint64_t sub_100A3A600()
{
  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100A3A640(void *a1)
{
  return sub_100A3A0F8(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32));
}

uint64_t destroy for AppStateTransitionModifier()
{
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t initializeWithCopy for AppStateTransitionModifier(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for AppStateTransitionModifier(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_retain();
  swift_release();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for AppStateTransitionModifier(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  swift_release();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_release();
  return a1;
}

uint64_t sub_100A3A7C0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100A3A7DC()
{
  id v0 = [self sharedApplication];
  [v0 applicationState];

  State.init(wrappedValue:)();
  return v2;
}

uint64_t sub_100A3A878@<X0>(void *a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  id v46 = a1;
  uint64_t v50 = a6;
  uint64_t v47 = type metadata accessor for NSNotificationCenter.Publisher();
  uint64_t v51 = *(void *)(v47 - 8);
  __chkstk_darwin(v47);
  uint64_t v11 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10017DF08(&qword_100EAB788);
  uint64_t v13 = v12 - 8;
  __chkstk_darwin(v12);
  sub_100109314();
  uint64_t v15 = v14;
  uint64_t v16 = sub_10017DF08(&qword_100EAB790) - 8;
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v39 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = sub_10017DF08(&qword_100EAB798) - 8;
  __chkstk_darwin(v49);
  sub_100109314();
  uint64_t v48 = v19;
  char v52 = a2;
  int v45 = a2;
  uint64_t v53 = a3;
  sub_10017DF08(&qword_100E65950);
  State.wrappedValue.getter();
  if (v54) {
    uint64_t v20 = a4;
  }
  else {
    uint64_t v20 = a5;
  }
  sub_10017DF08(&qword_100EAB7A0);
  sub_100162E4C();
  (*(void (**)(uint64_t, id))(v21 + 16))(v15, v46);
  *(void *)(v15 + *(int *)(v13 + 44)) = v20;
  uint64_t v41 = v15;
  uint64_t v22 = self;
  id v46 = v22;
  swift_retain();
  id v23 = [v22 defaultCenter];
  uint64_t v40 = v11;
  NSNotificationCenter.publisher(for:object:)();

  uint64_t v24 = swift_allocObject();
  *(unsigned char *)(v24 + 16) = a2;
  *(void *)(v24 + 24) = a3;
  *(void *)(v24 + 32) = a4;
  *(void *)(v24 + 40) = a5;
  sub_1001262FC(v15, (uint64_t)v18, &qword_100EAB788);
  uint64_t v25 = &v18[*(int *)(v16 + 60)];
  uint64_t v42 = v18;
  uint64_t v26 = v51;
  uint64_t v44 = *(void (**)(char *, char *, uint64_t))(v51 + 16);
  id v27 = v11;
  uint64_t v28 = v47;
  v44(v25, v27, v47);
  uint64_t v29 = (uint64_t (**)())&v18[*(int *)(v16 + 64)];
  *uint64_t v29 = sub_100A3AD90;
  v29[1] = (uint64_t (*)())v24;
  uint64_t v30 = *(void (**)(char *, uint64_t))(v26 + 8);
  uint64_t v51 = v26 + 8;
  uint64_t v43 = v30;
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v31 = v40;
  v30(v40, v28);
  sub_1001781AC(v41, &qword_100EAB788);
  id v32 = [v46 defaultCenter];
  NSNotificationCenter.publisher(for:object:)();

  uint64_t v33 = swift_allocObject();
  *(unsigned char *)(v33 + 16) = v45;
  *(void *)(v33 + 24) = a3;
  *(void *)(v33 + 32) = a4;
  *(void *)(v33 + 40) = a5;
  uint64_t v34 = (uint64_t)v42;
  uint64_t v35 = v48;
  sub_1001262FC((uint64_t)v42, v48, &qword_100EAB790);
  uint64_t v36 = v49;
  v44((char *)(v35 + *(int *)(v49 + 60)), v31, v28);
  uint64_t v37 = (uint64_t (**)())(v35 + *(int *)(v36 + 64));
  *uint64_t v37 = sub_100A3ADA4;
  v37[1] = (uint64_t (*)())v33;
  swift_retain();
  swift_retain();
  swift_retain();
  v43(v31, v28);
  sub_1001781AC(v34, &qword_100EAB790);
  return sub_100A3ADB4(v35, v50);
}

uint64_t sub_100A3ACE0()
{
  return State.wrappedValue.setter();
}

uint64_t sub_100A3AD2C()
{
  return State.wrappedValue.setter();
}

uint64_t sub_100A3AD7C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100A3A878(a1, *(unsigned __int8 *)v2, v2[1], v2[2], v2[3], a2);
}

uint64_t sub_100A3AD90()
{
  return sub_100A3ACE0();
}

uint64_t sub_100A3ADA4()
{
  return sub_100A3AD2C();
}

uint64_t sub_100A3ADB4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10017DF08(&qword_100EAB798);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_100A3AE20()
{
  unint64_t result = qword_100EAB7A8;
  if (!qword_100EAB7A8)
  {
    sub_10018C6DC(&qword_100EAB798);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAB7A8);
  }
  return result;
}

uint64_t sub_100A3AE74(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6E776F6E6B6E75 && a2 == 0xE700000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x6570697773 && a2 == 0xE500000000000000;
    if (v6 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 0x636E75614C707061 && a2 == 0xE900000000000068;
      if (v7 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 0x6E6F697461636F6CLL && a2 == 0xEB00000000706154)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else
      {
        char v9 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        if (v9) {
          return 3;
        }
        else {
          return 4;
        }
      }
    }
  }
}

uint64_t sub_100A3B044(char a1)
{
  uint64_t result = 0x6E776F6E6B6E75;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x6570697773;
      break;
    case 2:
      uint64_t result = 0x636E75614C707061;
      break;
    case 3:
      uint64_t result = 0x6E6F697461636F6CLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_100A3B0E0(uint64_t a1)
{
  unint64_t v2 = sub_100A3B708();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100A3B11C(uint64_t a1)
{
  unint64_t v2 = sub_100A3B708();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100A3B158()
{
  return sub_100A3B044(*v0);
}

uint64_t sub_100A3B160@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100A3AE74(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100A3B188(uint64_t a1)
{
  unint64_t v2 = sub_100A3B670();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100A3B1C4(uint64_t a1)
{
  unint64_t v2 = sub_100A3B670();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100A3B200(uint64_t a1)
{
  unint64_t v2 = sub_100A3B6BC();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100A3B23C(uint64_t a1)
{
  unint64_t v2 = sub_100A3B6BC();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100A3B278(uint64_t a1)
{
  unint64_t v2 = sub_100A3B754();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100A3B2B4(uint64_t a1)
{
  unint64_t v2 = sub_100A3B754();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100A3B2F0(uint64_t a1)
{
  unint64_t v2 = sub_100A3B7A0();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100A3B32C(uint64_t a1)
{
  unint64_t v2 = sub_100A3B7A0();

  return CodingKey.debugDescription.getter(a1, v2);
}

void LocationSessionTrigger.encode(to:)()
{
  sub_10016314C();
  uint64_t v35 = v2;
  uint64_t v4 = v3;
  sub_10017DF08(&qword_100EAB7B0);
  sub_100179C0C();
  uint64_t v33 = v6;
  uint64_t v34 = v5;
  __chkstk_darwin(v5);
  sub_100109314();
  uint64_t v32 = v7;
  sub_10017DF08(&qword_100EAB7B8);
  sub_100179C0C();
  uint64_t v30 = v9;
  uint64_t v31 = v8;
  __chkstk_darwin(v8);
  sub_100109314();
  uint64_t v29 = v10;
  sub_10017DF08(&qword_100EAB7C0);
  sub_100179C0C();
  uint64_t v27 = v12;
  uint64_t v28 = v11;
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_10017DF08(&qword_100EAB7C8);
  sub_100179C0C();
  uint64_t v26 = v16;
  __chkstk_darwin(v17);
  sub_100162F18();
  uint64_t v18 = sub_10017DF08(&qword_100EAB7D0);
  sub_100179C0C();
  uint64_t v20 = v19;
  __chkstk_darwin(v21);
  sub_100109370();
  sub_1001B1E64(v4, v4[3]);
  sub_100A3B670();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  switch((char)v35)
  {
    case 1:
      sub_100A3B754();
      sub_10017F3AC();
      (*(void (**)(char *, uint64_t))(v27 + 8))(v14, v28);
      break;
    case 2:
      sub_100A3B708();
      uint64_t v22 = v29;
      sub_10017F3AC();
      uint64_t v24 = v30;
      uint64_t v23 = v31;
      goto LABEL_5;
    case 3:
      sub_100A3B6BC();
      uint64_t v22 = v32;
      sub_10017F3AC();
      uint64_t v24 = v33;
      uint64_t v23 = v34;
LABEL_5:
      (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v22, v23);
      break;
    default:
      sub_100A3B7A0();
      sub_10017F3AC();
      (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v1, v15);
      break;
  }
  (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v0, v18);
  sub_100163164();
}

unint64_t sub_100A3B670()
{
  unint64_t result = qword_100EAB7D8;
  if (!qword_100EAB7D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAB7D8);
  }
  return result;
}

unint64_t sub_100A3B6BC()
{
  unint64_t result = qword_100EAB7E0;
  if (!qword_100EAB7E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAB7E0);
  }
  return result;
}

unint64_t sub_100A3B708()
{
  unint64_t result = qword_100EAB7E8;
  if (!qword_100EAB7E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAB7E8);
  }
  return result;
}

unint64_t sub_100A3B754()
{
  unint64_t result = qword_100EAB7F0;
  if (!qword_100EAB7F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAB7F0);
  }
  return result;
}

unint64_t sub_100A3B7A0()
{
  unint64_t result = qword_100EAB7F8;
  if (!qword_100EAB7F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAB7F8);
  }
  return result;
}

void LocationSessionTrigger.init(from:)()
{
  sub_10016314C();
  uint64_t v3 = v2;
  uint64_t v35 = sub_10017DF08(&qword_100EAB800);
  sub_100179C0C();
  uint64_t v32 = v4;
  __chkstk_darwin(v5);
  sub_100109314();
  uint64_t v34 = v6;
  sub_10017DF08(&qword_100EAB808);
  sub_100179C0C();
  __chkstk_darwin(v7);
  sub_10011BA80(v8, v31);
  sub_10017DF08(&qword_100EAB810);
  sub_100179C0C();
  __chkstk_darwin(v9);
  sub_100109370();
  sub_10017DF08(&qword_100EAB818);
  sub_100179C0C();
  __chkstk_darwin(v10);
  sub_10016279C();
  uint64_t v11 = sub_10017DF08(&qword_100EAB820);
  sub_100179C0C();
  uint64_t v33 = v12;
  __chkstk_darwin(v13);
  sub_10008B8C0();
  sub_1001B1E64(v3, v3[3]);
  sub_100A3B670();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v0) {
    goto LABEL_7;
  }
  uint64_t v36 = v3;
  uint64_t v14 = v1;
  uint64_t v15 = KeyedDecodingContainer.allKeys.getter();
  uint64_t v16 = *(void *)(v15 + 16);
  if (!v16
    || (uint64_t v17 = *(unsigned __int8 *)(v15 + 32),
        sub_100723214(1, v16, v15, v15 + 32, 0, (2 * v16) | 1),
        uint64_t v19 = v18,
        unint64_t v21 = v20,
        swift_bridgeObjectRelease(),
        v19 != v21 >> 1))
  {
    type metadata accessor for DecodingError();
    swift_allocError();
    uint64_t v23 = v22;
    sub_10017DF08(&qword_100E67280);
    *uint64_t v23 = &type metadata for LocationSessionTrigger;
    KeyedDecodingContainer.codingPath.getter();
    DecodingError.Context.init(codingPath:debugDescription:underlyingError:)();
    sub_100162880();
    (*(void (**)(void *))(v24 + 104))(v23);
    swift_willThrow();
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v14, v11);
    uint64_t v3 = v36;
LABEL_7:
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v3);
    goto LABEL_8;
  }
  switch(v17)
  {
    case 1:
      sub_100A3B754();
      sub_10017ED78();
      goto LABEL_12;
    case 2:
      sub_100A3B708();
      sub_10017ED78();
      goto LABEL_12;
    case 3:
      sub_100A3B6BC();
      sub_10017ED78();
      (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v34, v35);
      swift_unknownObjectRelease();
      uint64_t v28 = sub_100183A5C();
      v29(v28);
      uint64_t v30 = (uint64_t)v36;
      goto LABEL_13;
    default:
      sub_100A3B7A0();
      sub_10017ED78();
LABEL_12:
      sub_100162F0C();
      v25();
      swift_unknownObjectRelease();
      uint64_t v26 = sub_100183A5C();
      v27(v26);
      uint64_t v30 = (uint64_t)v36;
LABEL_13:
      _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v30);
      break;
  }
LABEL_8:
  sub_100163164();
}

uint64_t sub_100A3BCC4()
{
  return LocationSessionTrigger.hashValue.getter(*v0);
}

void sub_100A3BCCC(unsigned char *a1@<X8>)
{
  LocationSessionTrigger.init(from:)();
  if (!v1) {
    *a1 = v3;
  }
}

void sub_100A3BCF8()
{
}

uint64_t sub_100A3BD14@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  sub_10017DF08(&qword_100E635E0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100C33BA0;
  *(void *)(inited + 32) = 0xD00000000000001CLL;
  *(void *)(inited + 40) = 0x8000000100C98350;
  unint64_t v5 = 0xE600000000000000;
  if (*(unsigned char *)(a1 + OBJC_IVAR____TtCV7Weather23LocationViewerViewState8_Storage_notificationsOptInAlertState))
  {
    if (*(unsigned char *)(a1 + OBJC_IVAR____TtCV7Weather23LocationViewerViewState8_Storage_notificationsOptInAlertState) == 1)
    {
      unint64_t v6 = 0xEE006465696E6544;
      unint64_t v7 = 0x6E6F697461636F6CLL;
    }
    else
    {
      unint64_t v6 = 0x8000000100CACFA0;
      unint64_t v7 = 0xD000000000000013;
    }
  }
  else
  {
    unint64_t v7 = 0x6E6564646968;
    unint64_t v6 = 0xE600000000000000;
  }
  *(void *)(inited + 48) = v7;
  *(void *)(inited + 56) = v6;
  *(void *)(inited + 72) = &type metadata for String;
  *(void *)(inited + 80) = 0xD000000000000015;
  *(void *)(inited + 88) = 0x8000000100C98B30;
  if (*(unsigned char *)(a1 + OBJC_IVAR____TtCV7Weather23LocationViewerViewState8_Storage_addLocationAlertState)) {
    unint64_t v8 = 0xD000000000000013;
  }
  else {
    unint64_t v8 = 0x6E6564646968;
  }
  if (*(unsigned char *)(a1 + OBJC_IVAR____TtCV7Weather23LocationViewerViewState8_Storage_addLocationAlertState)) {
    unint64_t v5 = 0x8000000100CBAE60;
  }
  *(void *)(inited + 96) = v8;
  *(void *)(inited + 104) = v5;
  *(void *)(inited + 120) = &type metadata for String;
  *(void *)(inited + 128) = 0x72656767697274;
  *(void *)(inited + 136) = 0xE700000000000000;
  char v9 = *(unsigned char *)(a1 + OBJC_IVAR____TtCV7Weather23LocationViewerViewState8_Storage_trigger);
  *(void *)(inited + 168) = &type metadata for LocationSessionTrigger;
  *(unsigned char *)(inited + 144) = v9;
  Dictionary.init(dictionaryLiteral:)();
  a2[3] = sub_10017DF08(&qword_100EAB918);
  a2[4] = sub_100A3D748();
  sub_100170694(a2);
  return ShortDescription.init(name:_:)();
}

uint64_t sub_100A3BF00@<X0>(uint64_t *a1@<X8>)
{
  return sub_100A3BD14(*v1, a1);
}

uint64_t sub_100A3BF08()
{
  sub_100A3D79C();

  return ShortDescribable.description.getter();
}

uint64_t sub_100A3BF44()
{
  uint64_t v2 = v0;
  uint64_t v3 = type metadata accessor for Location.Identifier();
  sub_100179C0C();
  uint64_t v5 = v4;
  __chkstk_darwin(v6);
  sub_10011BFD8();
  uint64_t active = type metadata accessor for LocationViewerActiveLocationState();
  uint64_t v8 = sub_100109308(active);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10016ECAC(v2, (uint64_t)v10);
  sub_10017A364((uint64_t)v10);
  if (v11) {
    return 0x6C616974696E69;
  }
  sub_100181630();
  v12();
  v16[0] = 0x6E6F697461636F6CLL;
  v16[1] = 0xE90000000000002DLL;
  v13._countAndFlagsBits = Location.Identifier.id.getter();
  String.append(_:)(v13);
  swift_bridgeObjectRelease();
  uint64_t v14 = v16[0];
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v1, v3);
  return v14;
}

uint64_t sub_100A3C0A0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6C616974696E69 && a2 == 0xE700000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E6F697461636F6CLL && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v7) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_100A3C190(char a1)
{
  if (a1) {
    return 0x6E6F697461636F6CLL;
  }
  else {
    return 0x6C616974696E69;
  }
}

void sub_100A3C1C8()
{
  sub_10016314C();
  uint64_t v21 = v0;
  uint64_t v3 = v2;
  sub_10017DF08(&qword_100EAB960);
  sub_100179C0C();
  __chkstk_darwin(v4);
  sub_10011BA80(v5, v18);
  uint64_t v6 = type metadata accessor for Location.Identifier();
  sub_100179C0C();
  uint64_t v20 = v7;
  __chkstk_darwin(v8);
  sub_100109314();
  uint64_t v19 = v9;
  sub_10017DF08(&qword_100EAB968);
  sub_100179C0C();
  __chkstk_darwin(v10);
  sub_10008B8C0();
  uint64_t active = type metadata accessor for LocationViewerActiveLocationState();
  uint64_t v12 = sub_100109308(active);
  __chkstk_darwin(v12);
  sub_10012B938();
  sub_10017DF08(&qword_100EAB970);
  sub_100179C0C();
  __chkstk_darwin(v13);
  sub_100162F18();
  sub_1001B1E64(v3, v3[3]);
  sub_100A3D7E8();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  sub_10016ECAC(v21, v1);
  if (_s7Weather24LocationCompositionStateOwet_0(v1, 1, v6) == 1)
  {
    sub_100A3D880();
    KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
    sub_100162F0C();
    v14();
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v20 + 32))(v19, v1, v6);
    sub_100A3D834();
    KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
    sub_10023114C(&qword_100E7E548);
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    sub_100162F0C();
    v17();
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v19, v6);
  }
  uint64_t v15 = sub_100182CF0();
  v16(v15);
  sub_100163164();
}

void sub_100A3C4D0()
{
  sub_10016314C();
  char v54 = (void *)v0;
  uint64_t v3 = v2;
  uint64_t v50 = v4;
  uint64_t v46 = sub_10017DF08(&qword_100EAB930);
  sub_100179C0C();
  uint64_t v49 = v5;
  __chkstk_darwin(v6);
  sub_100109314();
  uint64_t v53 = v7;
  sub_10017DF08(&qword_100EAB938);
  sub_100179C0C();
  uint64_t v47 = v9;
  uint64_t v48 = v8;
  __chkstk_darwin(v8);
  sub_100109314();
  uint64_t v51 = v10;
  uint64_t v11 = sub_10017DF08(&qword_100EAB940);
  sub_100179C0C();
  uint64_t v52 = v12;
  __chkstk_darwin(v13);
  sub_10016279C();
  uint64_t active = type metadata accessor for LocationViewerActiveLocationState();
  sub_100162880();
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v20 = (char *)&v43 - v19;
  sub_1001B1E64(v3, v3[3]);
  sub_100A3D7E8();
  uint64_t v21 = (uint64_t)v54;
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v21) {
    goto LABEL_9;
  }
  uint64_t v43 = v17;
  uint64_t v44 = v20;
  char v54 = v3;
  uint64_t v22 = KeyedDecodingContainer.allKeys.getter();
  uint64_t v23 = *(void *)(v22 + 16);
  uint64_t v24 = v11;
  uint64_t v45 = v1;
  if (!v23)
  {
    uint64_t v29 = v52;
LABEL_8:
    type metadata accessor for DecodingError();
    swift_allocError();
    uint64_t v31 = v30;
    sub_10017DF08(&qword_100E67280);
    *uint64_t v31 = active;
    uint64_t v32 = v45;
    KeyedDecodingContainer.codingPath.getter();
    DecodingError.Context.init(codingPath:debugDescription:underlyingError:)();
    sub_100162880();
    (*(void (**)(uint64_t *))(v33 + 104))(v31);
    swift_willThrow();
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v32, v24);
    uint64_t v3 = v54;
LABEL_9:
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v3);
    goto LABEL_10;
  }
  char v55 = *(unsigned char *)(v22 + 32);
  sub_100723214(1, v23, v22, v22 + 32, 0, (2 * v23) | 1);
  uint64_t v26 = v25;
  unint64_t v28 = v27;
  swift_bridgeObjectRelease();
  if (v26 != v28 >> 1)
  {
    uint64_t v29 = v52;
    uint64_t v24 = v11;
    goto LABEL_8;
  }
  if (v55)
  {
    sub_100A3D834();
    KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
    uint64_t v34 = type metadata accessor for Location.Identifier();
    sub_10023114C(&qword_100E7E448);
    uint64_t v35 = (uint64_t)v43;
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    sub_100162F0C();
    v39();
    swift_unknownObjectRelease();
    uint64_t v40 = sub_1001A2714();
    v41(v40);
    _s7Weather24LocationCompositionStateOwst_0(v35, 0, 1, v34);
    uint64_t v42 = (uint64_t)v44;
    sub_1001CCE94(v35, (uint64_t)v44);
  }
  else
  {
    sub_100A3D880();
    KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
    sub_100162F0C();
    v36();
    swift_unknownObjectRelease();
    sub_100162F0C();
    v37();
    uint64_t v38 = type metadata accessor for Location.Identifier();
    uint64_t v42 = (uint64_t)v44;
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v44, 1, 1, v38);
  }
  sub_1001CCE94(v42, v50);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v54);
LABEL_10:
  sub_100163164();
}

uint64_t sub_100A3CA38()
{
  return sub_100A3C190(*v0);
}

uint64_t sub_100A3CA40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100A3C0A0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100A3CA68(uint64_t a1)
{
  unint64_t v2 = sub_100A3D7E8();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100A3CAA4(uint64_t a1)
{
  unint64_t v2 = sub_100A3D7E8();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100A3CAE0(uint64_t a1)
{
  unint64_t v2 = sub_100A3D880();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100A3CB1C(uint64_t a1)
{
  unint64_t v2 = sub_100A3D880();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100A3CB58(uint64_t a1)
{
  unint64_t v2 = sub_100A3D834();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100A3CB94(uint64_t a1)
{
  unint64_t v2 = sub_100A3D834();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100A3CBD4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1001782AC();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void sub_100A3CC00()
{
}

void sub_100A3CC18()
{
}

void sub_100A3CC30()
{
}

void sub_100A3CC48()
{
}

unint64_t sub_100A3CC64()
{
  unint64_t result = qword_100EAB828;
  if (!qword_100EAB828)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAB828);
  }
  return result;
}

ValueMetadata *type metadata accessor for LocationSessionTrigger()
{
  return &type metadata for LocationSessionTrigger;
}

uint64_t *sub_100A3CCC4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    uint64_t v7 = type metadata accessor for Location.Identifier();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v7))
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v7);
    }
  }
  return a1;
}

void *sub_100A3CDC0(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Location.Identifier();
  int v7 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a1, 1, v6);
  int v8 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v6);
  if (!v7)
  {
    uint64_t v9 = *(void *)(v6 - 8);
    if (!v8)
    {
      (*(void (**)(void *, const void *, uint64_t))(v9 + 24))(a1, a2, v6);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v9 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v6);
  return a1;
}

void *sub_100A3CF08(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Location.Identifier();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v6);
  }
  return a1;
}

void *sub_100A3CFC8(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Location.Identifier();
  int v7 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a1, 1, v6);
  int v8 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v6);
  if (!v7)
  {
    uint64_t v9 = *(void *)(v6 - 8);
    if (!v8)
    {
      (*(void (**)(void *, const void *, uint64_t))(v9 + 40))(a1, a2, v6);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v9 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v6);
  return a1;
}

uint64_t sub_100A3D110(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Location.Identifier();
  unsigned int v5 = _s7Weather24LocationCompositionStateOwet_0(a1, a2, v4);
  if (v5 >= 2) {
    return v5 - 1;
  }
  else {
    return 0;
  }
}

uint64_t sub_100A3D158(uint64_t a1, int a2, uint64_t a3)
{
  if (a2) {
    uint64_t v5 = (a2 + 1);
  }
  else {
    uint64_t v5 = 0;
  }
  uint64_t v6 = type metadata accessor for Location.Identifier();

  return _s7Weather24LocationCompositionStateOwst_0(a1, v5, a3, v6);
}

uint64_t sub_100A3D1B4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Location.Identifier();

  return _s7Weather24LocationCompositionStateOwet_0(a1, 1, v2);
}

uint64_t sub_100A3D1F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Location.Identifier();

  return _s7Weather24LocationCompositionStateOwst_0(a1, a2, 1, v4);
}

unsigned char *_s7Weather22LocationSessionTriggerOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100A3D310);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LocationSessionTrigger.CodingKeys()
{
  return &type metadata for LocationSessionTrigger.CodingKeys;
}

ValueMetadata *type metadata accessor for LocationSessionTrigger.UnknownCodingKeys()
{
  return &type metadata for LocationSessionTrigger.UnknownCodingKeys;
}

ValueMetadata *type metadata accessor for LocationSessionTrigger.SwipeCodingKeys()
{
  return &type metadata for LocationSessionTrigger.SwipeCodingKeys;
}

ValueMetadata *type metadata accessor for LocationSessionTrigger.AppLaunchCodingKeys()
{
  return &type metadata for LocationSessionTrigger.AppLaunchCodingKeys;
}

ValueMetadata *type metadata accessor for LocationSessionTrigger.LocationTapCodingKeys()
{
  return &type metadata for LocationSessionTrigger.LocationTapCodingKeys;
}

unint64_t sub_100A3D38C()
{
  unint64_t result = qword_100EAB8B0;
  if (!qword_100EAB8B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAB8B0);
  }
  return result;
}

unint64_t sub_100A3D3DC()
{
  unint64_t result = qword_100EAB8B8;
  if (!qword_100EAB8B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAB8B8);
  }
  return result;
}

unint64_t sub_100A3D42C()
{
  unint64_t result = qword_100EAB8C0;
  if (!qword_100EAB8C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAB8C0);
  }
  return result;
}

unint64_t sub_100A3D47C()
{
  unint64_t result = qword_100EAB8C8;
  if (!qword_100EAB8C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAB8C8);
  }
  return result;
}

unint64_t sub_100A3D4CC()
{
  unint64_t result = qword_100EAB8D0;
  if (!qword_100EAB8D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAB8D0);
  }
  return result;
}

unint64_t sub_100A3D51C()
{
  unint64_t result = qword_100EAB8D8;
  if (!qword_100EAB8D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAB8D8);
  }
  return result;
}

unint64_t sub_100A3D56C()
{
  unint64_t result = qword_100EAB8E0;
  if (!qword_100EAB8E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAB8E0);
  }
  return result;
}

unint64_t sub_100A3D5BC()
{
  unint64_t result = qword_100EAB8E8;
  if (!qword_100EAB8E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAB8E8);
  }
  return result;
}

unint64_t sub_100A3D60C()
{
  unint64_t result = qword_100EAB8F0;
  if (!qword_100EAB8F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAB8F0);
  }
  return result;
}

unint64_t sub_100A3D65C()
{
  unint64_t result = qword_100EAB8F8;
  if (!qword_100EAB8F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAB8F8);
  }
  return result;
}

unint64_t sub_100A3D6AC()
{
  unint64_t result = qword_100EAB900;
  if (!qword_100EAB900)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAB900);
  }
  return result;
}

unint64_t sub_100A3D6FC()
{
  unint64_t result = qword_100EAB908;
  if (!qword_100EAB908)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAB908);
  }
  return result;
}

unint64_t sub_100A3D748()
{
  unint64_t result = qword_100EAB920;
  if (!qword_100EAB920)
  {
    sub_10018C6DC(&qword_100EAB918);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAB920);
  }
  return result;
}

unint64_t sub_100A3D79C()
{
  unint64_t result = qword_100EAB928;
  if (!qword_100EAB928)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAB928);
  }
  return result;
}

unint64_t sub_100A3D7E8()
{
  unint64_t result = qword_100EAB948;
  if (!qword_100EAB948)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAB948);
  }
  return result;
}

unint64_t sub_100A3D834()
{
  unint64_t result = qword_100EAB950;
  if (!qword_100EAB950)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAB950);
  }
  return result;
}

unint64_t sub_100A3D880()
{
  unint64_t result = qword_100EAB958;
  if (!qword_100EAB958)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAB958);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for LocationViewerActiveLocationState.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100A3D998);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LocationViewerActiveLocationState.CodingKeys()
{
  return &type metadata for LocationViewerActiveLocationState.CodingKeys;
}

ValueMetadata *type metadata accessor for LocationViewerActiveLocationState.InitialCodingKeys()
{
  return &type metadata for LocationViewerActiveLocationState.InitialCodingKeys;
}

unsigned char *storeEnumTagSinglePayload for LocationViewerActiveLocationState.LocationCodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x100A3DA7CLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for LocationViewerActiveLocationState.LocationCodingKeys()
{
  return &type metadata for LocationViewerActiveLocationState.LocationCodingKeys;
}

unint64_t sub_100A3DAB8()
{
  unint64_t result = qword_100EAB978;
  if (!qword_100EAB978)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAB978);
  }
  return result;
}

unint64_t sub_100A3DB08()
{
  unint64_t result = qword_100EAB980;
  if (!qword_100EAB980)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAB980);
  }
  return result;
}

unint64_t sub_100A3DB58()
{
  unint64_t result = qword_100EAB988;
  if (!qword_100EAB988)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAB988);
  }
  return result;
}

unint64_t sub_100A3DBA8()
{
  unint64_t result = qword_100EAB990;
  if (!qword_100EAB990)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAB990);
  }
  return result;
}

unint64_t sub_100A3DBF8()
{
  unint64_t result = qword_100EAB998;
  if (!qword_100EAB998)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAB998);
  }
  return result;
}

unint64_t sub_100A3DC48()
{
  unint64_t result = qword_100EAB9A0;
  if (!qword_100EAB9A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAB9A0);
  }
  return result;
}

unint64_t sub_100A3DC98()
{
  unint64_t result = qword_100EAB9A8;
  if (!qword_100EAB9A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAB9A8);
  }
  return result;
}

unint64_t sub_100A3DCE8()
{
  unint64_t result = qword_100EAB9B0;
  if (!qword_100EAB9B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAB9B0);
  }
  return result;
}

uint64_t sub_100A3DD38(uint64_t a1, uint64_t a2)
{
  BOOL v4 = *(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8);
  if (v4 || (_stringCompareWithSmolCheck(_:_:expecting:)(), uint64_t result = sub_1001190E0(), (v6 & 1) != 0))
  {
    BOOL v7 = *(void *)(a1 + 16) == *(void *)(a2 + 16) && *(void *)(a1 + 24) == *(void *)(a2 + 24);
    if (v7 || (_stringCompareWithSmolCheck(_:_:expecting:)(), uint64_t result = sub_1001190E0(), (v8 & 1) != 0))
    {
      BOOL v9 = *(void *)(a1 + 32) == *(void *)(a2 + 32) && *(void *)(a1 + 40) == *(void *)(a2 + 40);
      if (v9 || (_stringCompareWithSmolCheck(_:_:expecting:)(), uint64_t result = sub_1001190E0(), (v10 & 1) != 0))
      {
        BOOL v11 = *(void *)(a1 + 48) == *(void *)(a2 + 48) && *(void *)(a1 + 56) == *(void *)(a2 + 56);
        if (v11 || (_stringCompareWithSmolCheck(_:_:expecting:)(), uint64_t result = sub_1001190E0(), (v12 & 1) != 0))
        {
          BOOL v13 = *(void *)(a1 + 64) == *(void *)(a2 + 64) && *(void *)(a1 + 72) == *(void *)(a2 + 72);
          if (v13 || (_stringCompareWithSmolCheck(_:_:expecting:)(), uint64_t result = sub_1001190E0(), (v14 & 1) != 0))
          {
            BOOL v15 = *(void *)(a1 + 80) == *(void *)(a2 + 80) && *(void *)(a1 + 88) == *(void *)(a2 + 88);
            if (v15 || (_stringCompareWithSmolCheck(_:_:expecting:)(), uint64_t result = sub_1001190E0(), (v16 & 1) != 0))
            {
              BOOL v17 = *(void *)(a1 + 96) == *(void *)(a2 + 96) && *(void *)(a1 + 104) == *(void *)(a2 + 104);
              if (v17 || (_stringCompareWithSmolCheck(_:_:expecting:)(), uint64_t result = sub_1001190E0(), (v18 & 1) != 0))
              {
                BOOL v19 = *(void *)(a1 + 112) == *(void *)(a2 + 112) && *(void *)(a1 + 120) == *(void *)(a2 + 120);
                if (v19 || (_stringCompareWithSmolCheck(_:_:expecting:)(), uint64_t result = sub_1001190E0(), (v20 & 1) != 0))
                {
                  BOOL v21 = *(void *)(a1 + 128) == *(void *)(a2 + 128) && *(void *)(a1 + 136) == *(void *)(a2 + 136);
                  if (v21 || (_stringCompareWithSmolCheck(_:_:expecting:)(), uint64_t result = sub_1001190E0(), (v22 & 1) != 0))
                  {
                    BOOL v23 = *(void *)(a1 + 144) == *(void *)(a2 + 144)
                       && *(void *)(a1 + 152) == *(void *)(a2 + 152);
                    if (v23
                      || (_stringCompareWithSmolCheck(_:_:expecting:)(), uint64_t result = sub_1001190E0(), (v24 & 1) != 0))
                    {
                      BOOL v25 = *(void *)(a1 + 160) == *(void *)(a2 + 160)
                         && *(void *)(a1 + 168) == *(void *)(a2 + 168);
                      if (v25
                        || (_stringCompareWithSmolCheck(_:_:expecting:)(), uint64_t result = sub_1001190E0(), (v26 & 1) != 0))
                      {
                        BOOL v27 = *(void *)(a1 + 176) == *(void *)(a2 + 176)
                           && *(void *)(a1 + 184) == *(void *)(a2 + 184);
                        if (v27
                          || (_stringCompareWithSmolCheck(_:_:expecting:)(), uint64_t result = sub_1001190E0(), (v28 & 1) != 0))
                        {
                          BOOL v29 = *(void *)(a1 + 192) == *(void *)(a2 + 192)
                             && *(void *)(a1 + 200) == *(void *)(a2 + 200);
                          if (v29
                            || (_stringCompareWithSmolCheck(_:_:expecting:)(), uint64_t result = sub_1001190E0(), (v30 & 1) != 0))
                          {
                            if (*(double *)(a1 + 208) == *(double *)(a2 + 208))
                            {
                              if (*(void *)(a1 + 216) == *(void *)(a2 + 216)
                                && *(void *)(a1 + 224) == *(void *)(a2 + 224))
                              {
                                return 1;
                              }
                              else
                              {
                                return _stringCompareWithSmolCheck(_:_:expecting:)();
                              }
                            }
                            else
                            {
                              return 0;
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t destroy for WindComponentPreprocessedDataModel()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for WindComponentPreprocessedDataModel(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  uint64_t v6 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v6;
  uint64_t v7 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v7;
  uint64_t v8 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v8;
  uint64_t v9 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v9;
  uint64_t v10 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v10;
  uint64_t v11 = *(void *)(a2 + 136);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = v11;
  uint64_t v12 = *(void *)(a2 + 152);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = v12;
  uint64_t v13 = *(void *)(a2 + 168);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = v13;
  uint64_t v14 = *(void *)(a2 + 184);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(void *)(a1 + 184) = v14;
  uint64_t v15 = *(void *)(a2 + 200);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  *(void *)(a1 + 200) = v15;
  *(_OWORD *)(a1 + 208) = *(_OWORD *)(a2 + 208);
  *(void *)(a1 + 224) = *(void *)(a2 + 224);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for WindComponentPreprocessedDataModel(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[10] = a2[10];
  a1[11] = a2[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[12] = a2[12];
  a1[13] = a2[13];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[14] = a2[14];
  a1[15] = a2[15];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[16] = a2[16];
  a1[17] = a2[17];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[18] = a2[18];
  a1[19] = a2[19];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[20] = a2[20];
  a1[21] = a2[21];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[22] = a2[22];
  a1[23] = a2[23];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[24] = a2[24];
  a1[25] = a2[25];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[26] = a2[26];
  a1[27] = a2[27];
  a1[28] = a2[28];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *initializeWithTake for WindComponentPreprocessedDataModel(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0xE8uLL);
}

void *assignWithTake for WindComponentPreprocessedDataModel(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a2[9];
  a1[8] = a2[8];
  a1[9] = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = a2[11];
  a1[10] = a2[10];
  a1[11] = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = a2[13];
  a1[12] = a2[12];
  a1[13] = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = a2[15];
  a1[14] = a2[14];
  a1[15] = v11;
  swift_bridgeObjectRelease();
  uint64_t v12 = a2[17];
  a1[16] = a2[16];
  a1[17] = v12;
  swift_bridgeObjectRelease();
  uint64_t v13 = a2[19];
  a1[18] = a2[18];
  a1[19] = v13;
  swift_bridgeObjectRelease();
  uint64_t v14 = a2[21];
  a1[20] = a2[20];
  a1[21] = v14;
  swift_bridgeObjectRelease();
  uint64_t v15 = a2[23];
  a1[22] = a2[22];
  a1[23] = v15;
  swift_bridgeObjectRelease();
  uint64_t v16 = a2[25];
  a1[24] = a2[24];
  a1[25] = v16;
  swift_bridgeObjectRelease();
  a1[26] = a2[26];
  uint64_t v17 = a2[28];
  a1[27] = a2[27];
  a1[28] = v17;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for WindComponentPreprocessedDataModel(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 232))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for WindComponentPreprocessedDataModel(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 232) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 232) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WindComponentPreprocessedDataModel()
{
  return &type metadata for WindComponentPreprocessedDataModel;
}

uint64_t sub_100A3E534(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7274536465657073 && a2 == 0xEB00000000676E69;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000100CBAEA0 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    BOOL v6 = a1 == 0x696E556465657073 && a2 == 0xEF676E6972745374;
    if (v6 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else if (a1 == 0xD000000000000010 && a2 == 0x8000000100CBAEC0 {
           || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    }
    {
      swift_bridgeObjectRelease();
      return 3;
    }
    else
    {
      BOOL v7 = a1 == 0x6972745374737567 && a2 == 0xEA0000000000676ELL;
      if (v7 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 4;
      }
      else
      {
        BOOL v8 = a1 == 0x756C615674737567 && a2 == 0xEF676E6972745365;
        if (v8 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 5;
        }
        else
        {
          BOOL v9 = a1 == 0x74696E5574737567 && a2 == 0xEE00676E69727453;
          if (v9 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 6;
          }
          else
          {
            BOOL v10 = a1 == 0x6562614C74737567 && a2 == 0xEF676E697274536CLL;
            if (v10 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 7;
            }
            else
            {
              BOOL v11 = a1 == 0x6F69746365726964 && a2 == 0xEF676E697274536ELL;
              if (v11 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
              {
                swift_bridgeObjectRelease();
                return 8;
              }
              else if (a1 == 0xD000000000000014 && a2 == 0x8000000100CBAEE0 {
                     || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
              }
              {
                swift_bridgeObjectRelease();
                return 9;
              }
              else if (a1 == 0xD000000000000021 && a2 == 0x8000000100CBAF00 {
                     || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
              }
              {
                swift_bridgeObjectRelease();
                return 10;
              }
              else if (a1 == 0xD000000000000015 && a2 == 0x8000000100CBAF30 {
                     || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
              }
              {
                swift_bridgeObjectRelease();
                return 11;
              }
              else if (a1 == 0xD000000000000010 && a2 == 0x8000000100CBAF50 {
                     || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
              }
              {
                swift_bridgeObjectRelease();
                return 12;
              }
              else
              {
                BOOL v12 = a1 == 0x656C676E61 && a2 == 0xE500000000000000;
                if (v12 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
                {
                  swift_bridgeObjectRelease();
                  return 13;
                }
                else if (a1 == 0xD000000000000018 && a2 == 0x8000000100C9EA60)
                {
                  swift_bridgeObjectRelease();
                  return 14;
                }
                else
                {
                  char v13 = _stringCompareWithSmolCheck(_:_:expecting:)();
                  swift_bridgeObjectRelease();
                  if (v13) {
                    return 14;
                  }
                  else {
                    return 15;
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

unint64_t sub_100A3EB28(char a1)
{
  unint64_t result = 0x7274536465657073;
  switch(a1)
  {
    case 1:
    case 3:
    case 12:
      unint64_t result = 0xD000000000000010;
      break;
    case 2:
      unint64_t result = 0x696E556465657073;
      break;
    case 4:
      unint64_t result = 0x6972745374737567;
      break;
    case 5:
      unint64_t result = 0x756C615674737567;
      break;
    case 6:
      unint64_t result = 0x74696E5574737567;
      break;
    case 7:
      unint64_t result = 0x6562614C74737567;
      break;
    case 8:
      unint64_t result = 0x6F69746365726964;
      break;
    case 9:
      unint64_t result = 0xD000000000000014;
      break;
    case 10:
      unint64_t result = 0xD000000000000021;
      break;
    case 11:
      unint64_t result = 0xD000000000000015;
      break;
    case 13:
      unint64_t result = 0x656C676E61;
      break;
    case 14:
      unint64_t result = 0xD000000000000018;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_100A3ED38(void *a1)
{
  uint64_t v4 = sub_10017DF08(&qword_100EAB9C8);
  sub_100179C0C();
  uint64_t v6 = v5;
  __chkstk_darwin(v7);
  sub_10016279C();
  sub_1001B1E64(a1, a1[3]);
  sub_100A3FB4C();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  sub_10017DA48();
  if (!v1)
  {
    sub_10017DA48();
    sub_10017DA48();
    sub_10017DA48();
    sub_10017DA48();
    sub_10017DA48();
    sub_10017DA48();
    sub_10017DA48();
    sub_10017DA48();
    sub_10017DA48();
    sub_10017DA48();
    sub_10017DA48();
    sub_10017DA48();
    KeyedEncodingContainer.encode(_:forKey:)();
    sub_10017DA48();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v2, v4);
}

void *sub_100A3EFC0@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  sub_10017DF08(&qword_100EAB9B8);
  sub_100179C0C();
  __chkstk_darwin(v5);
  sub_10016279C();
  uint64_t v73 = (uint64_t)a1;
  sub_1001B1E64(a1, a1[3]);
  sub_100A3FB4C();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2) {
    return (void *)_s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)a1);
  }
  os_log_type_t v72 = a2;
  uint64_t v6 = sub_10019F6A0();
  uint64_t v8 = v7;
  sub_1001A1204(1);
  uint64_t v69 = v8;
  uint64_t v9 = sub_10019F6A0();
  uint64_t v11 = v10;
  uint64_t v71 = v9;
  sub_1001A1204(2);
  uint64_t v68 = v11;
  uint64_t v12 = sub_10019F6A0();
  uint64_t v14 = v13;
  uint64_t v57 = v12;
  sub_1001A1204(3);
  uint64_t v67 = v14;
  uint64_t v15 = sub_10019F6A0();
  uint64_t v17 = v16;
  uint64_t v56 = v15;
  sub_1001A1204(4);
  uint64_t v66 = v17;
  uint64_t v18 = sub_10019F6A0();
  uint64_t v20 = v19;
  uint64_t v55 = v18;
  sub_1001A1204(5);
  uint64_t v65 = v20;
  uint64_t v21 = sub_10019F6A0();
  uint64_t v23 = v22;
  uint64_t v54 = v21;
  sub_1001A1204(6);
  uint64_t v64 = v23;
  uint64_t v24 = sub_10019F6A0();
  uint64_t v26 = v25;
  uint64_t v53 = v24;
  sub_1001A1204(7);
  uint64_t v63 = v26;
  uint64_t v27 = sub_10019F6A0();
  uint64_t v29 = v28;
  uint64_t v52 = v27;
  sub_1001A1204(8);
  uint64_t v51 = sub_10019F6A0();
  uint64_t v62 = v29;
  uint64_t v61 = v30;
  swift_bridgeObjectRetain();
  uint64_t v31 = sub_10019F6A0();
  uint64_t v70 = v32;
  uint64_t v33 = v31;
  swift_bridgeObjectRetain();
  uint64_t v34 = sub_1001A2844();
  uint64_t v60 = v35;
  uint64_t v36 = v34;
  swift_bridgeObjectRetain();
  uint64_t v37 = sub_1001A2844();
  uint64_t v59 = v38;
  uint64_t v39 = v37;
  swift_bridgeObjectRetain();
  uint64_t v50 = sub_1001A2844();
  uint64_t v58 = v40;
  LOBYTE(v75[0]) = 13;
  swift_bridgeObjectRetain();
  KeyedDecodingContainer.decode(_:forKey:)();
  uint64_t v42 = v41;
  char v76 = 14;
  uint64_t v43 = sub_1001A2844();
  uint64_t v49 = v44;
  uint64_t v45 = v43;
  uint64_t v46 = sub_10018839C();
  v47(v46);
  v74[0] = v6;
  v74[1] = v69;
  v74[2] = v71;
  v74[3] = v68;
  v74[4] = v57;
  v74[5] = v67;
  v74[6] = v56;
  v74[7] = v66;
  v74[8] = v55;
  v74[9] = v65;
  v74[10] = v54;
  v74[11] = v64;
  v74[12] = v53;
  v74[13] = v63;
  v74[14] = v52;
  v74[15] = v62;
  v74[16] = v51;
  v74[17] = v61;
  v74[18] = v33;
  v74[19] = v70;
  v74[20] = v36;
  v74[21] = v60;
  v74[22] = v39;
  v74[23] = v59;
  v74[24] = v50;
  v74[25] = v58;
  v74[26] = v42;
  v74[27] = v45;
  v74[28] = v49;
  sub_100049160((uint64_t)v74);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v73);
  v75[0] = v6;
  v75[1] = v69;
  v75[2] = v71;
  v75[3] = v68;
  v75[4] = v57;
  v75[5] = v67;
  v75[6] = v56;
  v75[7] = v66;
  v75[8] = v55;
  v75[9] = v65;
  v75[10] = v54;
  v75[11] = v64;
  v75[12] = v53;
  v75[13] = v63;
  v75[14] = v52;
  v75[15] = v62;
  v75[16] = v51;
  v75[17] = v61;
  v75[18] = v33;
  v75[19] = v70;
  v75[20] = v36;
  v75[21] = v60;
  v75[22] = v39;
  v75[23] = v59;
  v75[24] = v50;
  v75[25] = v58;
  v75[26] = v42;
  v75[27] = v45;
  v75[28] = v49;
  sub_1007CC4F8((uint64_t)v75);
  return memcpy(v72, v74, 0xE8uLL);
}

unint64_t sub_100A3FA34()
{
  return sub_100A3EB28(*v0);
}

uint64_t sub_100A3FA3C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100A3E534(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100A3FA64(uint64_t a1)
{
  unint64_t v2 = sub_100A3FB4C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100A3FAA0(uint64_t a1)
{
  unint64_t v2 = sub_100A3FB4C();

  return CodingKey.debugDescription.getter(a1, v2);
}

void *sub_100A3FADC@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = sub_100A3EFC0(a1, __src);
  if (!v2) {
    return memcpy(a2, __src, 0xE8uLL);
  }
  return result;
}

uint64_t sub_100A3FB30(void *a1)
{
  return sub_100A3ED38(a1);
}

unint64_t sub_100A3FB4C()
{
  unint64_t result = qword_100EAB9C0;
  if (!qword_100EAB9C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAB9C0);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for WindComponentPreprocessedDataModel.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 14 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 14) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF2) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF1)
  {
    unsigned int v6 = ((a2 - 242) >> 8) + 1;
    *unint64_t result = a2 + 14;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100A3FC64);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 14;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WindComponentPreprocessedDataModel.CodingKeys()
{
  return &type metadata for WindComponentPreprocessedDataModel.CodingKeys;
}

unint64_t sub_100A3FCA0()
{
  unint64_t result = qword_100EAB9D0;
  if (!qword_100EAB9D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAB9D0);
  }
  return result;
}

unint64_t sub_100A3FCF0()
{
  unint64_t result = qword_100EAB9D8;
  if (!qword_100EAB9D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAB9D8);
  }
  return result;
}

unint64_t sub_100A3FD40()
{
  unint64_t result = qword_100EAB9E0;
  if (!qword_100EAB9E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAB9E0);
  }
  return result;
}

uint64_t sub_100A3FD8C()
{
  uint64_t v0 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  int v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Locale();
  __chkstk_darwin(v4 - 8);
  uint64_t v5 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v5 - 8);
  uint64_t v6 = type metadata accessor for LocalizedStringResource();
  sub_100097814(v6, static OpenMoonIntent.title);
  sub_1002102B0(v6, (uint64_t)static OpenMoonIntent.title);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for LocalizedStringResource.BundleDescription.main(_:), v0);
  return LocalizedStringResource.init(_:table:locale:bundle:comment:)();
}

uint64_t OpenMoonIntent.title.unsafeMutableAddressor()
{
  return sub_10034090C(&qword_100E629B0, (uint64_t (*)(void))&type metadata accessor for LocalizedStringResource, (uint64_t)static OpenMoonIntent.title);
}

uint64_t static OpenMoonIntent.title.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_10056E598(&qword_100E629B0, (uint64_t (*)(void))&type metadata accessor for LocalizedStringResource, (uint64_t)static OpenMoonIntent.title, a1);
}

uint64_t static OpenMoonIntent.title.setter(uint64_t a1)
{
  return sub_10056E67C(a1, &qword_100E629B0, (uint64_t (*)(void))&type metadata accessor for LocalizedStringResource, (uint64_t)static OpenMoonIntent.title);
}

uint64_t (*static OpenMoonIntent.title.modify())()
{
  if (qword_100E629B0 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for LocalizedStringResource();
  sub_1002102B0(v0, (uint64_t)static OpenMoonIntent.title);
  sub_10017FEE0();
  return j_j__swift_endAccess_0;
}

uint64_t sub_100A40098()
{
  uint64_t v0 = sub_10017DF08(&qword_100E62CC8);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = &v12[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v3 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = &v12[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = type metadata accessor for Locale();
  __chkstk_darwin(v7 - 8);
  uint64_t v8 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = type metadata accessor for LocalizedStringResource();
  __chkstk_darwin(v9);
  uint64_t v10 = type metadata accessor for IntentDescription();
  sub_100097814(v10, static OpenMoonIntent.description);
  sub_1002102B0(v10, (uint64_t)static OpenMoonIntent.description);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  (*(void (**)(unsigned char *, void, uint64_t))(v4 + 104))(v6, enum case for LocalizedStringResource.BundleDescription.main(_:), v3);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v2, 1, 1, v9);
  return IntentDescription.init(_:categoryName:searchKeywords:)();
}

uint64_t OpenMoonIntent.description.unsafeMutableAddressor()
{
  return sub_10034090C(&qword_100E629B8, (uint64_t (*)(void))&type metadata accessor for IntentDescription, (uint64_t)static OpenMoonIntent.description);
}

uint64_t static OpenMoonIntent.description.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_10056E598(&qword_100E629B8, (uint64_t (*)(void))&type metadata accessor for IntentDescription, (uint64_t)static OpenMoonIntent.description, a1);
}

uint64_t static OpenMoonIntent.description.setter(uint64_t a1)
{
  return sub_10056E67C(a1, &qword_100E629B8, (uint64_t (*)(void))&type metadata accessor for IntentDescription, (uint64_t)static OpenMoonIntent.description);
}

uint64_t (*static OpenMoonIntent.description.modify())()
{
  if (qword_100E629B8 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for IntentDescription();
  sub_1002102B0(v0, (uint64_t)static OpenMoonIntent.description);
  sub_10017FEE0();
  return j__swift_endAccess_0;
}

void *OpenMoonIntent.isDiscoverable.unsafeMutableAddressor()
{
  return &static OpenMoonIntent.isDiscoverable;
}

uint64_t static OpenMoonIntent.parameterSummary.getter()
{
  uint64_t v0 = sub_10017DF08(&qword_100EAB9E8);
  uint64_t v1 = sub_100109308(v0);
  __chkstk_darwin(v1);
  sub_10011BFD8();
  sub_10017DF08(&qword_100EAB9F0);
  sub_100162880();
  __chkstk_darwin(v2);
  sub_1001626E0();
  sub_100A40600();
  ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v3._object = (void *)0x8000000100CBAF70;
  v3._countAndFlagsBits = 0xD000000000000016;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v3);
  swift_getKeyPath();
  sub_10017DF08(&qword_100EABA00);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)();
  swift_release();
  v4._countAndFlagsBits = 46;
  v4._object = (void *)0xE100000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v4);
  ParameterSummaryString.init(stringInterpolation:)();
  return IntentParameterSummary.init(_:table:_:)();
}

unint64_t sub_100A40600()
{
  unint64_t result = qword_100EAB9F8;
  if (!qword_100EAB9F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAB9F8);
  }
  return result;
}

uint64_t sub_100A40650()
{
  swift_getKeyPath();
  sub_100A40600();
  uint64_t v0 = static IntentParameterSummary.ParameterKeyPathsBuilder.buildExpression<A>(_:)();
  swift_release();
  sub_10017DF08(&qword_100E6BBD0);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_100C31F30;
  *(void *)(v1 + 32) = v0;
  specialized Array._endMutation()();
  swift_retain();
  uint64_t v2 = static IntentParameterSummary.ParameterKeyPathsBuilder.buildBlock(_:)();
  swift_release();
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_100A40718()
{
  uint64_t v1 = sub_10017DF08(&qword_100E7F270);
  sub_100179C0C();
  uint64_t v3 = v2;
  __chkstk_darwin(v4);
  sub_10011BFD8();
  sub_10054963C();
  static ResolverSpecificationBuilder.buildExpression<A>(_:)();
  sub_100549688();
  static ResolverSpecificationBuilder.buildExpression<A>(_:)();
  sub_1002F0EBC();
  static ResolverSpecificationBuilder.buildPartialBlock<A>(first:)();
  static ResolverSpecificationBuilder.buildPartialBlock<A, each B>(accumulated:next:)();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(v0, v1);
}

uint64_t sub_100A40854()
{
  uint64_t v0 = sub_10017DF08(&qword_100EABA40);
  __chkstk_darwin(v0);
  uint64_t v1 = sub_10017DF08(&qword_100EABA08);
  sub_100097814(v1, static OpenMoonIntent.urlRepresentation);
  sub_1002102B0(v1, (uint64_t)static OpenMoonIntent.urlRepresentation);
  sub_100A40600();
  IntentURLRepresentation.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v2._object = (void *)0x8000000100CBAF90;
  v2._countAndFlagsBits = 0xD000000000000026;
  IntentURLRepresentation.StringInterpolation.appendLiteral(_:)(v2);
  swift_getKeyPath();
  sub_10017DF08(&qword_100EABA00);
  IntentURLRepresentation.StringInterpolation.appendInterpolation<A, B>(_:)();
  swift_release();
  v3._countAndFlagsBits = 0x3D6574616426;
  v3._object = (void *)0xE600000000000000;
  IntentURLRepresentation.StringInterpolation.appendLiteral(_:)(v3);
  swift_getKeyPath();
  sub_10017DF08(&qword_100EABA48);
  IntentURLRepresentation.StringInterpolation.appendInterpolation<A, B>(_:)();
  swift_release();
  v4._countAndFlagsBits = 0;
  v4._object = (void *)0xE000000000000000;
  IntentURLRepresentation.StringInterpolation.appendLiteral(_:)(v4);
  return IntentURLRepresentation.init(stringInterpolation:)();
}

uint64_t OpenMoonIntent.urlRepresentation.unsafeMutableAddressor()
{
  if (qword_100E629C0 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_10017DF08(&qword_100EABA08);

  return sub_1002102B0(v0, (uint64_t)static OpenMoonIntent.urlRepresentation);
}

uint64_t static OpenMoonIntent.urlRepresentation.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_100E629C0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_10017DF08(&qword_100EABA08);
  uint64_t v3 = sub_1002102B0(v2, (uint64_t)static OpenMoonIntent.urlRepresentation);
  swift_beginAccess();
  sub_100162880();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(a1, v3, v2);
}

uint64_t static OpenMoonIntent.urlRepresentation.setter(uint64_t a1)
{
  if (qword_100E629C0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_10017DF08(&qword_100EABA08);
  uint64_t v3 = sub_1002102B0(v2, (uint64_t)static OpenMoonIntent.urlRepresentation);
  swift_beginAccess();
  sub_10017C808();
  uint64_t v5 = v4;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 24))(v3, a1, v2);
  swift_endAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(a1, v2);
}

uint64_t (*static OpenMoonIntent.urlRepresentation.modify())()
{
  if (qword_100E629C0 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_10017DF08(&qword_100EABA08);
  sub_1002102B0(v0, (uint64_t)static OpenMoonIntent.urlRepresentation);
  sub_10017FEE0();
  return j_j__swift_endAccess_0;
}

uint64_t OpenMoonIntent.init()()
{
  sub_10017DF08(&qword_100E62D50);
  sub_100179C0C();
  uint64_t v54 = v1;
  uint64_t v55 = v0;
  __chkstk_darwin(v0);
  sub_100109314();
  uint64_t v53 = v2;
  uint64_t v56 = type metadata accessor for InputConnectionBehavior();
  sub_100179C0C();
  uint64_t v58 = v3;
  __chkstk_darwin(v4);
  sub_100109314();
  uint64_t v57 = v5;
  uint64_t v6 = sub_10017DF08(&qword_100E62CC0);
  uint64_t v7 = sub_100109308(v6);
  __chkstk_darwin(v7);
  uint64_t v52 = (uint64_t)v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v51 = (uint64_t)v41 - v10;
  uint64_t v11 = sub_10017DF08(&qword_100E62CC8);
  uint64_t v12 = sub_100109308(v11);
  __chkstk_darwin(v12);
  sub_100109314();
  uint64_t v14 = v13;
  uint64_t v15 = type metadata accessor for LocalizedStringResource.BundleDescription();
  sub_100179C0C();
  uint64_t v17 = v16;
  __chkstk_darwin(v18);
  sub_1001626E0();
  uint64_t v21 = v20 - v19;
  uint64_t v22 = type metadata accessor for Locale();
  uint64_t v23 = sub_100109308(v22);
  __chkstk_darwin(v23);
  sub_1001626E0();
  uint64_t v24 = type metadata accessor for String.LocalizationValue();
  uint64_t v25 = sub_100109308(v24);
  __chkstk_darwin(v25);
  sub_1001626E0();
  uint64_t v26 = type metadata accessor for LocalizedStringResource();
  uint64_t v50 = v26;
  sub_100162880();
  __chkstk_darwin(v27);
  sub_1001626E0();
  v41[1] = v29 - v28;
  uint64_t v49 = sub_10017DF08(&qword_100E62CD0);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v30 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v31 = *(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 104);
  unsigned int v42 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v43 = v15;
  v31(v21, enum case for LocalizedStringResource.BundleDescription.main(_:), v15);
  uint64_t v44 = v17 + 104;
  uint64_t v45 = v31;
  sub_10017DA64();
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v31(v21, v30, v15);
  uint64_t v32 = v14;
  sub_10017DA64();
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  _s7Weather24LocationCompositionStateOwst_0(v14, 0, 1, v26);
  uint64_t v33 = type metadata accessor for IntentDialog();
  uint64_t v46 = v33;
  long long v59 = 0u;
  long long v60 = 0u;
  char v61 = 0;
  uint64_t v34 = v51;
  _s7Weather24LocationCompositionStateOwst_0(v51, 1, 1, v33);
  _s7Weather24LocationCompositionStateOwst_0(v52, 1, 1, v33);
  unsigned int v47 = enum case for InputConnectionBehavior.default(_:);
  uint64_t v35 = *(void (**)(void))(v58 + 104);
  v58 += 104;
  uint64_t v48 = (void (*)(uint64_t, void, uint64_t))v35;
  v35(v57);
  sub_10017DF08(&qword_100E62CD8);
  sub_1001246C8(&qword_100E62CE0, &qword_100E62CD8);
  sub_100232310();
  uint64_t v36 = v34;
  uint64_t v52 = IntentParameter<>.init<A>(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:resolvers:)();
  uint64_t v49 = sub_10017DF08(&qword_100E62D58);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v37 = v42;
  uint64_t v38 = v43;
  uint64_t v39 = v45;
  v45(v21, v42, v43);
  sub_10017DA64();
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v39(v21, v37, v38);
  sub_10017DA64();
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  _s7Weather24LocationCompositionStateOwst_0(v32, 0, 1, v50);
  _s7Weather24LocationCompositionStateOwst_0(v36, 1, 1, v46);
  (*(void (**)(uint64_t, void, uint64_t))(v54 + 104))(v53, enum case for IntentParameter.DateKind.dateTime<A>(_:), v55);
  v48(v57, v47, v56);
  IntentParameter<>.init(title:description:kind:requestValueDialog:inputConnectionBehavior:)();
  return v52;
}

uint64_t sub_100A41280@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = OpenMoonIntent.urlRepresentation.unsafeMutableAddressor();
  swift_beginAccess();
  uint64_t v3 = sub_10017DF08(&qword_100EABA08);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16))(a1, v2, v3);
}

unint64_t sub_100A41304()
{
  unint64_t result = qword_100EABA10;
  if (!qword_100EABA10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EABA10);
  }
  return result;
}

unint64_t sub_100A41354()
{
  unint64_t result = qword_100EABA18;
  if (!qword_100EABA18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EABA18);
  }
  return result;
}

uint64_t sub_100A413A0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100A413BC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = OpenMoonIntent.title.unsafeMutableAddressor();
  swift_beginAccess();
  uint64_t v3 = type metadata accessor for LocalizedStringResource();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16))(a1, v2, v3);
}

uint64_t sub_100A4143C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  unint64_t v5 = sub_100A41598();
  *uint64_t v4 = v2;
  v4[1] = sub_100547E08;
  return URLRepresentableIntent.perform()(a2, v5);
}

uint64_t sub_100A414E8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = OpenMoonIntent.init()();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_100A41510(uint64_t a1)
{
  unint64_t v2 = sub_100A40600();

  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

ValueMetadata *type metadata accessor for OpenMoonIntent()
{
  return &type metadata for OpenMoonIntent;
}

uint64_t sub_100A4155C()
{
  return sub_1001246C8(&qword_100EABA28, &qword_100EABA30);
}

unint64_t sub_100A41598()
{
  unint64_t result = qword_100EABA38;
  if (!qword_100EABA38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EABA38);
  }
  return result;
}

uint64_t sub_100A415E8()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC7Weather28LocationViewCollisionOptions__value;
  uint64_t v2 = sub_10017DF08(&qword_100EABBF8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_100A4168C()
{
  return type metadata accessor for LocationViewCollisionOptions();
}

uint64_t assignWithTake for LocationViewCollisionOptions.PublishedValue(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100A416D0()
{
  return 0;
}

uint64_t sub_100A4173C()
{
  return sub_100A416D0();
}

uint64_t sub_100A41760@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = sub_1000C965C();
  *(_DWORD *)a1 = v3;
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_100A41790()
{
  return sub_10001BA50();
}

void sub_100A417D0()
{
  id v0 = [objc_allocWithZone((Class)LSApplicationWorkspace) init];
  URL._bridgeToObjectiveC()(v1);
  id v4 = v2;
  uint64_t v3 = Dictionary.init(dictionaryLiteral:)();
  sub_100A78614((uint64_t)v4, v3, v0);
}

uint64_t type metadata accessor for HomeAndWorkRefinementInteractor()
{
  return self;
}

ValueMetadata *type metadata accessor for ComponentHeaderGradient()
{
  return &type metadata for ComponentHeaderGradient;
}

uint64_t sub_100A418A0()
{
  return swift_getOpaqueTypeConformance2();
}

double sub_100A418BC@<D0>(uint64_t a1@<X8>)
{
  sub_10017DF08(&qword_100E6BEE8);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_100C33BA0;
  static Color.black.getter();
  Color.opacity(_:)();
  swift_release();
  *(void *)(v2 + 32) = Gradient.Stop.init(color:location:)();
  *(void *)(v2 + 40) = v3;
  static Color.black.getter();
  Color.opacity(_:)();
  swift_release();
  *(void *)(v2 + 48) = Gradient.Stop.init(color:location:)();
  *(void *)(v2 + 56) = v4;
  static Color.black.getter();
  Color.opacity(_:)();
  swift_release();
  *(void *)(v2 + 64) = Gradient.Stop.init(color:location:)();
  *(void *)(v2 + 72) = v5;
  Gradient.init(stops:)();
  static UnitPoint.leading.getter();
  static UnitPoint.trailing.getter();
  LinearGradient.init(gradient:startPoint:endPoint:)();
  double result = *(double *)&v7;
  *(_OWORD *)a1 = v7;
  *(_OWORD *)(a1 + 16) = v8;
  *(void *)(a1 + 32) = v9;
  return result;
}

unint64_t sub_100A41A08()
{
  unint64_t result = qword_100EABCA0;
  if (!qword_100EABCA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EABCA0);
  }
  return result;
}

void sub_100A41A54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_100162EA0();
  a19 = v20;
  a20 = v21;
  sub_10017C924();
  char v23 = v22 & 1;
  uint64_t v24 = type metadata accessor for Location();
  sub_100179C0C();
  uint64_t v26 = v25;
  uint64_t v28 = *(void *)(v27 + 64);
  __chkstk_darwin(v29);
  sub_1001AB3E0();
  uint64_t v30 = (void *)static OS_dispatch_queue.main.getter();
  firstly<A, B>(on:disposeOn:closure:)();

  uint64_t v31 = swift_allocObject();
  swift_weakInit();
  sub_100162808();
  v32();
  unint64_t v33 = (*(unsigned __int8 *)(v26 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80);
  uint64_t v34 = swift_allocObject();
  *(void *)(v34 + 16) = v31;
  (*(void (**)(unint64_t, char *, uint64_t))(v26 + 32))(v34 + v33, (char *)&a9 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0), v24);
  *(unsigned char *)(v34 + v33 + v28) = v23;
  uint64_t v35 = (void *)zalgo.getter();
  sub_10017DF08(&qword_100EABEE0);
  Promise.then<A>(on:closure:)();
  swift_release();
  swift_release();
  swift_release();

  sub_100162694();
}

void sub_100A41C0C()
{
  sub_10017C924();
  char v1 = v0 & 1;
  sub_1001AB3E0();
  uint64_t v2 = (void *)static OS_dispatch_queue.main.getter();
  sub_100214DF0();

  *(unsigned char *)(swift_allocObject() + 16) = v1;
  id v3 = (id)zalgo.getter();
  Promise.then<A, B>(on:disposeOn:closure:)();
  swift_release();
  swift_release();
  swift_release();
}

void sub_100A41D0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_100162EA0();
  a19 = v20;
  a20 = v21;
  sub_10017C924();
  char v23 = v22 & 1;
  uint64_t v24 = type metadata accessor for Location();
  sub_100179C0C();
  uint64_t v26 = v25;
  uint64_t v28 = *(void *)(v27 + 64);
  __chkstk_darwin(v29);
  sub_1001AB3E0();
  uint64_t v30 = (void *)static OS_dispatch_queue.main.getter();
  sub_10017DF08(&qword_100EABDE8);
  sub_100214DF0();

  id v31 = sub_10020F9AC(v23);
  sub_100162808();
  v32();
  unint64_t v33 = (*(unsigned __int8 *)(v26 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80);
  uint64_t v34 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v26 + 32))(v34 + v33, (char *)&a9 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0), v24);
  Promise.then<A, B>(on:disposeOn:closure:)();
  swift_release();
  swift_release();

  swift_release();
  sub_100162694();
}

uint64_t sub_100A41EA4()
{
  sub_10010977C();
  char v1 = v0;
  sub_10017C924();
  char v3 = v2 & 1;
  sub_1001AB3E0();
  uint64_t v4 = (void *)static OS_dispatch_queue.main.getter();
  sub_100214DF0();

  id v5 = sub_10020F9AC(v3);
  *(unsigned char *)(swift_allocObject() + 16) = v1;
  Promise.then<A, B>(on:disposeOn:closure:)();
  swift_release();
  swift_release();

  sub_100162714();
  return swift_release();
}

uint64_t sub_100A41FA8(uint64_t a1)
{
  void (*v10)(uint64_t *__return_ptr, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;

  uint64_t v2 = sub_10017DF08(&qword_100EABDE8);
  uint64_t v3 = v2 - 8;
  __chkstk_darwin(v2);
  id v5 = (uint64_t *)((char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = type metadata accessor for TimeState();
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void (**)(uint64_t *__return_ptr, uint64_t))(a1 + 16);
  v10(&v19, v7);
  uint64_t v11 = *(void *)(v19 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_weatherData);
  uint64_t v12 = *(void *)(v19 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_weatherData + 8);
  uint64_t v13 = *(void *)(v19 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_weatherData + 16);
  uint64_t v14 = *(void *)(v19 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_weatherData + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v15 = swift_release();
  v10(&v19, v15);
  sub_1001B9A30(v19 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_time, (uint64_t)v9, (void (*)(void))type metadata accessor for TimeState);
  swift_release();
  uint64_t v16 = (uint64_t)v5 + *(int *)(v3 + 56);
  *id v5 = v11;
  v5[1] = v12;
  long long v5[2] = v13;
  v5[3] = v14;
  sub_1001B9AF4((uint64_t)v9, v16, (void (*)(void))type metadata accessor for TimeState);
  sub_10017DF08(&qword_100EABED8);
  swift_allocObject();
  return Promise.init(value:)();
}

uint64_t sub_100A42168(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_10017DF08(&qword_100EABDE8);
  uint64_t v6 = v5 - 8;
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for TimeState();
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *(int *)(v6 + 56);
  uint64_t v13 = (uint64_t)&v8[v12];
  uint64_t v14 = (uint64_t)a1 + v12;
  uint64_t v15 = *a1;
  uint64_t v16 = a1[1];
  uint64_t v18 = a1[2];
  uint64_t v17 = a1[3];
  sub_1001B9A30(v14, v13, (void (*)(void))type metadata accessor for TimeState);
  sub_1001B9AF4(v13, (uint64_t)v11, (void (*)(void))type metadata accessor for TimeState);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_100A42308(a3, v15, v16, v18, v17, (uint64_t)v11, 0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return sub_1001BC5DC();
}

void sub_100A42308(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  uint64_t v38 = a2;
  int v40 = a7;
  uint64_t v35 = a6;
  uint64_t v31 = a5;
  uint64_t v10 = type metadata accessor for TimeState();
  uint64_t v34 = *(void *)(v10 - 8);
  uint64_t v33 = *(void *)(v34 + 64);
  __chkstk_darwin(v10 - 8);
  uint64_t v37 = (uint64_t)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = type metadata accessor for Location();
  uint64_t v12 = *(void *)(*(void *)(v36 - 8) + 64);
  __chkstk_darwin(v36);
  uint64_t v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = v14;
  uint64_t v27 = v14;
  uint64_t v16 = *(void (**)(char *, uint64_t))(v14 + 16);
  v16(v13, a1);
  type metadata accessor for WeatherDataUpdateRequestLog(0);
  swift_allocObject();
  uint64_t v28 = a3;
  swift_bridgeObjectRetain();
  uint64_t v29 = a4;
  swift_bridgeObjectRetain();
  uint64_t v17 = v31;
  swift_bridgeObjectRetain();
  uint64_t v30 = sub_10020FD50(0, (uint64_t)v13, v40);
  uint64_t v41 = v39;
  uint64_t v42 = a1;
  sub_10017DF08(&qword_100E65F18);
  uint64_t v32 = firstly<A>(closure:)();
  ((void (*)(char *, uint64_t, uint64_t))v16)(v13, a1, v36);
  sub_1001B9A30(v35, v37, (void (*)(void))type metadata accessor for TimeState);
  unint64_t v18 = (*(unsigned __int8 *)(v15 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  unint64_t v19 = (v12 + v18 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v20 = (v19 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v21 = (*(unsigned __int8 *)(v34 + 80) + v20 + 8) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80);
  uint64_t v22 = v21 + v33;
  char v23 = (char *)swift_allocObject();
  uint64_t v24 = v28;
  uint64_t v25 = v29;
  *((void *)v23 + 2) = v38;
  *((void *)v23 + 3) = v24;
  *((void *)v23 + 4) = v25;
  *((void *)v23 + 5) = v17;
  (*(void (**)(char *, char *, uint64_t))(v27 + 32))(&v23[v18], v13, v36);
  *(void *)&v23[v19] = v30;
  *(void *)&v23[v20] = v39;
  sub_1001B9AF4(v37, (uint64_t)&v23[v21], (void (*)(void))type metadata accessor for TimeState);
  v23[v22] = v40;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  uint64_t v26 = (void *)zalgo.getter();
  Promise.then<A>(on:closure:)();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
}

uint64_t sub_100A4269C(uint64_t a1)
{
  return sub_100A42B34(a1);
}

uint64_t sub_100A426B4(uint64_t *a1, uint64_t a2, int a3)
{
  int v29 = a3;
  uint64_t v5 = type metadata accessor for TimeState();
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for Location();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v38 = (uint64_t)v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *a1;
  uint64_t v12 = *a1 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_locations;
  uint64_t result = *(void *)(v12 + *(int *)(type metadata accessor for LocationsState() + 32));
  uint64_t v14 = *(void *)(result + 16);
  if (v14)
  {
    v28[2] = v3;
    uint64_t v32 = (uint64_t *)(v11 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_weatherData);
    uint64_t v36 = v11 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_time;
    uint64_t v16 = *(void (**)(uint64_t, unint64_t, uint64_t))(v9 + 16);
    uint64_t v15 = v9 + 16;
    uint64_t v34 = v8;
    uint64_t v35 = v16;
    unint64_t v17 = (*(unsigned __int8 *)(v15 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 64);
    uint64_t v33 = v7;
    unint64_t v18 = result + v17;
    uint64_t v19 = *(void *)(v15 + 56);
    uint64_t v37 = v15;
    uint64_t v30 = (void (**)(uint64_t, uint64_t))(v15 - 8);
    uint64_t v31 = v19;
    v28[1] = result;
    swift_bridgeObjectRetain();
    v29 &= 1u;
    uint64_t v20 = v38;
    uint64_t v21 = (uint64_t)v33;
    uint64_t v22 = v34;
    do
    {
      v35(v20, v18, v22);
      uint64_t v23 = *v32;
      uint64_t v24 = v32[1];
      uint64_t v25 = v32[2];
      uint64_t v26 = v32[3];
      sub_1001B9A30(v36, v21, (void (*)(void))type metadata accessor for TimeState);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v27 = v23;
      uint64_t v20 = v38;
      sub_100A42308(v38, v27, v24, v25, v26, v21, v29);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1001BC5DC();
      (*v30)(v20, v22);
      v18 += v31;
      --v14;
    }
    while (v14);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_100A42960()
{
  return swift_bridgeObjectRelease();
}

void sub_100A42A3C()
{
  sub_1001837E8();
  uint64_t v1 = v0;
  sub_10017DF08(&qword_100E81490);
  uint64_t v2 = type metadata accessor for Location();
  sub_100179C0C();
  uint64_t v4 = v3;
  unint64_t v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_100C251B0;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v4 + 16))(v6 + v5, v1, v2);
  sub_10005EC80();
  swift_setDeallocating();
  sub_1006BB24C();
  sub_100166A98();
}

uint64_t sub_100A42B34(uint64_t a1)
{
  (*(void (**)(uint64_t *__return_ptr))(a1 + 16))(&v2);
  sub_10017DF08(&qword_100EABEF0);
  swift_allocObject();
  return Promise.init(value:)();
}

uint64_t sub_100A42B94@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X2>, char a3@<W3>, BOOL *a4@<X8>)
{
  uint64_t v7 = *a1;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  uint64_t v9 = result;
  if (result)
  {
    sub_100A42C30(a2, a3 & 1, v7);
    uint64_t result = swift_release();
  }
  *a4 = v9 == 0;
  return result;
}

uint64_t sub_100A42C30(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v4 = v3;
  int v106 = a2;
  uint64_t v113 = (void (*)(char *, char *, uint64_t))*v3;
  uint64_t v112 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v111 = *(void *)(v112 - 8);
  __chkstk_darwin(v112);
  uint64_t v109 = (char *)v93 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v110 = type metadata accessor for DispatchQoS();
  uint64_t v108 = *(void *)(v110 - 8);
  __chkstk_darwin(v110);
  int v107 = (char *)v93 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v126 = type metadata accessor for OSSignpostID();
  uint64_t v117 = *(void *)(v126 - 8);
  __chkstk_darwin(v126);
  uint64_t v121 = (char *)v93 - ((unint64_t)(v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v114 = v9;
  __chkstk_darwin(v10);
  uint64_t v127 = (char *)v93 - v11;
  uint64_t v118 = type metadata accessor for AppConfiguration();
  uint64_t v116 = *(void *)(v118 - 8);
  __chkstk_darwin(v118);
  int v125 = (char *)v93 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v115 = v12;
  __chkstk_darwin(v13);
  uint64_t v128 = (char *)v93 - v14;
  uint64_t v15 = type metadata accessor for TimeState();
  __chkstk_darwin(v15 - 8);
  unint64_t v17 = (char *)v93 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for Location();
  __n128 v19 = __chkstk_darwin(v18);
  uint64_t v122 = v20;
  uint64_t v21 = (char *)v93 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = *(void *)(a3 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_weatherData);
  uint64_t v23 = *(void *)(a3 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_weatherData + 8);
  uint64_t v24 = *(void *)(a3 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_weatherData + 16);
  uint64_t v25 = *(void *)(a3 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_weatherData + 24);
  uint64_t v129 = v26;
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t))(v26 + 16);
  uint64_t v124 = v28;
  uint64_t v119 = v27;
  uint64_t v120 = v26 + 16;
  ((void (*)(char *, uint64_t, __n128))v27)(v21, a1, v19);
  type metadata accessor for WeatherDataUpdateRequestLog(0);
  swift_allocObject();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v123 = v21;
  uint64_t v29 = sub_10020FD50(2, (uint64_t)v21, 0);
  sub_1001B9A30(a3 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_time, (uint64_t)v17, (void (*)(void))type metadata accessor for TimeState);
  uint64_t v30 = a1;
  uint64_t v31 = a1;
  uint64_t v32 = v29;
  uint64_t v33 = v4;
  LOBYTE(v29) = sub_100A4CC90(v31, v29, v22, v23, v24, v25, (uint64_t)v17);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v34 = type metadata accessor for Date();
  uint64_t v35 = (*(uint64_t (**)(char *, uint64_t))(*(void *)(v34 - 8) + 8))(v17, v34);
  if (v29)
  {
    v106 &= 1u;
    char v36 = v106;
    __chkstk_darwin(v35);
    v93[-4] = v4;
    v93[-3] = v30;
    uint64_t v101 = v30;
    v93[-2] = v32;
    uint64_t v37 = v32;
    syncOnMain(_:)();
    sub_1001B1E64(v4 + 15, (uint64_t)v4[18]);
    dispatch thunk of AppConfigurationManagerType.appConfiguration.getter();
    uint64_t v99 = v4[56];
    uint64_t v38 = v127;
    OSSignpostID.init(log:)();
    uint64_t v102 = v33;
    id v104 = sub_10020F9AC(v36);
    uint64_t v39 = swift_allocObject();
    swift_weakInit();
    uint64_t v40 = v117;
    uint64_t v41 = *(void (**)(char *, char *, uint64_t))(v117 + 16);
    v93[1] = v117 + 16;
    uint64_t v94 = v41;
    uint64_t v42 = v121;
    uint64_t v43 = v38;
    uint64_t v44 = v126;
    v41(v121, v43, v126);
    uint64_t v45 = v30;
    uint64_t v46 = v124;
    v119(v123, v45, v124);
    uint64_t v47 = *(unsigned __int8 *)(v40 + 80);
    uint64_t v48 = v40;
    uint64_t v49 = (v47 + 32) & ~v47;
    v93[0] = v47;
    uint64_t v100 = *(unsigned __int8 *)(v129 + 80);
    uint64_t v50 = v129;
    uint64_t v95 = &v114[v100];
    unint64_t v51 = (unint64_t)&v114[v100 + v49] & ~v100;
    uint64_t v105 = v100 | 7;
    uint64_t v96 = v100 | 7 | v47;
    uint64_t v52 = swift_allocObject();
    *(void *)(v52 + 16) = v39;
    *(void *)(v52 + 24) = v37;
    uint64_t v103 = v37;
    uint64_t v53 = *(void (**)(uint64_t, char *, uint64_t))(v48 + 32);
    uint64_t v97 = v48 + 32;
    uint64_t v98 = v53;
    v53(v52 + v49, v42, v44);
    uint64_t v54 = *(char **)(v50 + 32);
    uint64_t v129 = v50 + 32;
    uint64_t v114 = v54;
    uint64_t v55 = v123;
    ((void (*)(unint64_t, char *, uint64_t))v54)(v52 + v51, v123, v46);
    aBlock[4] = sub_10010A714;
    aBlock[5] = v52;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10010A4D4;
    aBlock[3] = &unk_100E35470;
    uint64_t v56 = _Block_copy(aBlock);
    swift_retain();
    swift_retain();
    uint64_t v57 = v107;
    static DispatchQoS.unspecified.getter();
    uint64_t v130 = _swiftEmptyArrayStorage;
    sub_100128EB4((unint64_t *)&qword_100EA0200, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_10017DF08(&qword_100E75530);
    sub_1001246C8((unint64_t *)&qword_100EA0210, &qword_100E75530);
    uint64_t v58 = v109;
    uint64_t v59 = v112;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v56);
    (*(void (**)(char *, uint64_t))(v111 + 8))(v58, v59);
    (*(void (**)(char *, uint64_t))(v108 + 8))(v57, v110);
    swift_release();
    swift_release();
    long long v60 = v55;
    uint64_t v61 = v101;
    uint64_t v62 = v119;
    v119(v55, v101, v46);
    uint64_t v63 = v100;
    uint64_t v64 = v122;
    uint64_t v65 = swift_allocObject();
    ((void (*)(uint64_t, char *, uint64_t))v114)(v65 + ((v63 + 16) & ~v63), v60, v46);
    sub_10017DF08(&qword_100EABDF8);
    uint64_t v111 = firstly<A, B>(on:disposeOn:closure:)();
    swift_release();
    uint64_t v110 = swift_allocObject();
    swift_weakInit();
    uint64_t v66 = v126;
    v94(v121, v127, v126);
    v62(v60, v61, v46);
    uint64_t v67 = v116;
    uint64_t v68 = *(void (**)(char *, char *, uint64_t))(v116 + 16);
    uint64_t v112 = v116 + 16;
    uint64_t v113 = v68;
    v68(v125, v128, v118);
    uint64_t v69 = (v93[0] + 24) & ~v93[0];
    uint64_t v70 = (unint64_t)&v95[v69] & ~v63;
    unint64_t v71 = (v64 + v70 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v72 = (v71 + 15) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v73 = *(unsigned __int8 *)(v67 + 80);
    uint64_t v74 = (v72 + v73 + 8) & ~v73;
    uint64_t v109 = (char *)(v74 + v115);
    uint64_t v75 = swift_allocObject();
    char v76 = v99;
    *(void *)(v75 + 16) = v99;
    v98(v75 + v69, v121, v66);
    uint64_t v77 = v123;
    ((void (*)(uint64_t, char *, uint64_t))v114)(v75 + v70, v123, v124);
    *(void *)(v75 + v71) = v103;
    *(void *)(v75 + v72) = v110;
    uint64_t v78 = v75 + v74;
    uint64_t v121 = *(char **)(v67 + 32);
    uint64_t v79 = v125;
    uint64_t v80 = v118;
    ((void (*)(uint64_t, char *, uint64_t))v121)(v78, v125, v118);
    v109[v75] = v106;
    id v81 = v76;
    swift_retain();
    uint64_t v82 = (void *)zalgo.getter();
    uint64_t v110 = Promise.then<A>(on:closure:)();
    swift_release();
    swift_release();

    uint64_t v83 = swift_allocObject();
    swift_weakInit();
    uint64_t v84 = v77;
    uint64_t v85 = v77;
    uint64_t v86 = v124;
    v119(v85, v101, v124);
    v113(v79, v128, v80);
    uint64_t v87 = (v100 + 32) & ~v100;
    uint64_t v88 = (v87 + v122 + v73) & ~v73;
    uint64_t v89 = v88 + v115;
    uint64_t v90 = swift_allocObject();
    *(void *)(v90 + 16) = v103;
    *(void *)(v90 + 24) = v83;
    ((void (*)(uint64_t, char *, uint64_t))v114)(v90 + v87, v84, v86);
    ((void (*)(uint64_t, char *, uint64_t))v121)(v90 + v88, v125, v80);
    *(unsigned char *)(v90 + v89) = v106;
    swift_retain();
    swift_retain();
    uint64_t v91 = (void *)zalgo.getter();
    Promise.error(on:closure:)();
    swift_release();

    swift_release();
    swift_release();
    swift_release();

    (*(void (**)(char *, uint64_t))(v117 + 8))(v127, v126);
    (*(void (**)(char *, uint64_t))(v116 + 8))(v128, v80);
  }
  return swift_release();
}

void sub_100A439C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unsigned __int8 a10)
{
  uint64_t v50 = a8;
  uint64_t v52 = a7;
  uint64_t v45 = a2;
  uint64_t v46 = a3;
  HIDWORD(v44) = a10;
  uint64_t v48 = a9;
  uint64_t v49 = a5;
  uint64_t v59 = type metadata accessor for Location();
  uint64_t v12 = *(void *)(v59 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  __chkstk_darwin(v59);
  uint64_t v14 = (char *)&v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t updated = type metadata accessor for WeatherDataUpdateRequestLog.Event(0);
  __chkstk_darwin(updated);
  unint64_t v17 = (uint64_t *)((char *)&v41 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v18 = sub_10017DF08(&qword_100E63770);
  __chkstk_darwin(v18 - 8);
  uint64_t v20 = (uint64_t *)((char *)&v41 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v21 = (void *)a6;
  uint64_t v22 = Location.id.getter();
  uint64_t v47 = a4;
  sub_1001BBE9C(v22, v23, a4);
  swift_bridgeObjectRelease();
  uint64_t v24 = type metadata accessor for LocationWeatherDataState(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v20, 1, v24) == 1)
  {
    swift_storeEnumTagMultiPayload();
    sub_10015B128((uint64_t)v17);
    sub_1001BC5DC();
    sub_1001AB3E0();
    uint64_t v25 = static OS_dispatch_queue.main.getter();
    unint64_t v17 = v21;
    uint64_t v26 = v21;
    uint64_t v27 = v59;
    (*(void (**)(char *, void *, uint64_t))(v12 + 16))((char *)&v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v26, v59);
    unint64_t v28 = (*(unsigned __int8 *)(v12 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
    uint64_t v29 = swift_allocObject();
    *(void *)(v29 + 16) = v50;
    (*(void (**)(unint64_t, char *, uint64_t))(v12 + 32))(v29 + v28, v14, v27);
    uint64_t v30 = swift_allocObject();
    *(void *)(v30 + 16) = sub_10021259C;
    *(void *)(v30 + 24) = v29;
    uint64_t v57 = sub_10021E384;
    uint64_t v58 = v30;
    aBlock = _NSConcreteStackBlock;
    uint64_t v54 = 1107296256;
    uint64_t v55 = sub_100A4409C;
    uint64_t v56 = &unk_100E34F70;
    uint64_t v31 = _Block_copy(&aBlock);
    swift_retain();
    swift_retain();
    swift_release();
    dispatch_sync(v25, v31);

    _Block_release(v31);
    LOBYTE(v31) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    if (v31)
    {
      __break(1u);
      JUMPOUT(0x100A4408CLL);
    }
LABEL_3:
    sub_10005FF78((uint64_t)v17, v45, v46, v47, v49, v48, BYTE4(v44) & 1, 0, 0, 0, v41, (uint64_t)v42, v43, v44, v45, v46, v47, v48, v49,
      v50,
      v51,
      v52);
    swift_release();
  }
  else
  {
    uint64_t v42 = (void *)a6;
    uint64_t v43 = updated;
    uint64_t v32 = v59;
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        sub_10017DF08(&qword_100E63748);
        sub_1001BC5DC();
        sub_1001BC5DC();
        goto LABEL_6;
      case 2u:
        uint64_t v33 = v32;
        uint64_t v34 = *v20;
        uint64_t v35 = v20[1];
        sub_100303D6C(v20[2], v20[3]);
        *unint64_t v17 = v34;
        v17[1] = v35;
        swift_storeEnumTagMultiPayload();
        sub_10015B128((uint64_t)v17);
        sub_1001BC5DC();
        sub_1001AB3E0();
        uint64_t v36 = static OS_dispatch_queue.main.getter();
        unint64_t v17 = v42;
        (*(void (**)(char *, void *, uint64_t))(v12 + 16))((char *)&v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v42, v33);
        unint64_t v37 = (*(unsigned __int8 *)(v12 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
        uint64_t v38 = swift_allocObject();
        *(void *)(v38 + 16) = v50;
        (*(void (**)(unint64_t, char *, uint64_t))(v12 + 32))(v38 + v37, v14, v33);
        uint64_t v39 = swift_allocObject();
        *(void *)(v39 + 16) = sub_10021259C;
        *(void *)(v39 + 24) = v38;
        uint64_t v57 = sub_1003DE624;
        uint64_t v58 = v39;
        aBlock = _NSConcreteStackBlock;
        uint64_t v54 = 1107296256;
        uint64_t v55 = sub_100A4409C;
        uint64_t v56 = &unk_100E34FE8;
        uint64_t v40 = _Block_copy(&aBlock);
        swift_retain();
        swift_retain();
        swift_release();
        dispatch_sync((dispatch_queue_t)v36, v40);

        _Block_release(v40);
        LOBYTE(v36) = swift_isEscapingClosureAtFileLocation();
        swift_release();
        if ((v36 & 1) == 0) {
          goto LABEL_3;
        }
        __break(1u);
        goto LABEL_9;
      case 3u:
LABEL_9:
        swift_storeEnumTagMultiPayload();
        sub_10015B128((uint64_t)v17);
        sub_1001BC5DC();
        break;
      default:
LABEL_6:
        sub_1001BC5DC();
        swift_storeEnumTagMultiPayload();
        sub_10015B128((uint64_t)v17);
        sub_1001BC5DC();
        sub_10005FF78((uint64_t)v42, v45, v46, v47, v49, v48, BYTE4(v44) & 1, 0, 0, 0, v41, (uint64_t)v42, v43, v44, v45, v46, v47, v48, v49,
          v50,
          v51,
          v52);
        break;
    }
  }
}

uint64_t sub_100A4409C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 32))();
}

void sub_100A440C4(uint64_t a1, uint64_t a2, char *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v43 = a5;
  uint64_t v44 = a4;
  uint64_t v41 = a3;
  uint64_t v51 = a2;
  uint64_t v6 = type metadata accessor for Location();
  uint64_t v46 = *(void *)(v6 - 8);
  uint64_t v47 = v6;
  uint64_t v7 = *(void *)(v46 + 64);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for NewsDataModel();
  uint64_t v42 = *(void *)(v9 - 8);
  uint64_t v10 = *(void *)(v42 + 64);
  __chkstk_darwin(v9 - 8);
  uint64_t v50 = (uint64_t)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for WeatherData(0);
  uint64_t v40 = *(void *)(v11 - 8);
  uint64_t v12 = *(void *)(v40 + 64);
  __chkstk_darwin(v11 - 8);
  uint64_t v49 = (uint64_t)&v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for PreprocessedWeatherData();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(void *)(v14 + 64);
  uint64_t v16 = __chkstk_darwin(v13 - 8);
  uint64_t v48 = (uint64_t)&v37 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v37 - v17;
  uint64_t updated = type metadata accessor for WeatherDataUpdateRequestLog.Event(0);
  __chkstk_darwin(updated);
  uint64_t v21 = (char *)&v37 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = a1;
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v23 = Strong;
    swift_storeEnumTagMultiPayload();
    uint64_t v38 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_10015B128((uint64_t)v21);
    sub_1001BC5DC();
    sub_1001B1E64((void *)(v23 + 160), *(void *)(v23 + 184));
    uint64_t v24 = (uint64_t)v18;
    uint64_t v37 = v7;
    uint64_t v25 = v14;
    uint64_t v26 = (uint64_t)v18;
    uint64_t v39 = v18;
    uint64_t v27 = v41;
    uint64_t v28 = v44;
    sub_1001BD128(v41, v44, v24);
    sub_1001B9A30((uint64_t)v27, v49, (void (*)(void))type metadata accessor for WeatherData);
    sub_1001B9A30(v26, v48, (void (*)(void))type metadata accessor for PreprocessedWeatherData);
    sub_1001B9A30(v43, v50, (void (*)(void))type metadata accessor for NewsDataModel);
    uint64_t v29 = v46;
    (*(void (**)(char *, uint64_t, uint64_t))(v46 + 16))(v8, v28, v47);
    unint64_t v30 = (*(unsigned __int8 *)(v40 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80);
    unint64_t v31 = (v12 + *(unsigned __int8 *)(v25 + 80) + v30) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80);
    unint64_t v32 = (v15 + *(unsigned __int8 *)(v42 + 80) + v31) & ~(unint64_t)*(unsigned __int8 *)(v42 + 80);
    unint64_t v33 = (v10 + *(unsigned __int8 *)(v29 + 80) + v32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80);
    unint64_t v34 = (v37 + v33 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v35 = v51;
    uint64_t v36 = swift_allocObject();
    *(void *)(v36 + 16) = v23;
    sub_1001B9AF4(v49, v36 + v30, (void (*)(void))type metadata accessor for WeatherData);
    sub_1001B9AF4(v48, v36 + v31, (void (*)(void))type metadata accessor for PreprocessedWeatherData);
    sub_1001B9AF4(v50, v36 + v32, (void (*)(void))type metadata accessor for NewsDataModel);
    (*(void (**)(unint64_t, char *, uint64_t))(v29 + 32))(v36 + v33, v38, v47);
    *(void *)(v36 + v34) = v35;
    *(void *)(v36 + ((v34 + 15) & 0xFFFFFFFFFFFFFFF8)) = v45;
    swift_retain();
    swift_retain();
    swift_retain();
    asyncMain(block:)();
    swift_release();
    swift_release();
    sub_1001BC5DC();
  }
  else
  {
    sub_1006A7CD8(0xD000000000000022, 0x8000000100CBB2F0);
  }
}

uint64_t sub_100A4460C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  sub_1000CABB0(a2, a3, a4, a5, a6);
  sub_1000CA914();
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1000CBE94(a5);
    return swift_release();
  }
  return result;
}

uint64_t sub_100A446A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13)
{
  uint64_t v57 = a7;
  uint64_t v58 = a8;
  uint64_t v59 = a6;
  uint64_t v60 = a3;
  uint64_t v47 = a5;
  uint64_t v44 = a2;
  uint64_t v45 = a4;
  uint64_t v55 = a10;
  uint64_t v56 = a9;
  uint64_t v54 = a11;
  uint64_t v52 = a13;
  int v53 = a12 & 1;
  uint64_t v14 = type metadata accessor for WeatherServiceCaching.Options();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v50 = v14;
  uint64_t v51 = v15;
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = type metadata accessor for WeatherDataServiceConfiguration();
  uint64_t v18 = *(void *)(v46 - 8);
  __chkstk_darwin(v46);
  uint64_t v20 = (char *)&v43 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_10017DF08(&qword_100EABE00);
  __chkstk_darwin(v21 - 8);
  uint64_t v23 = (char *)&v43 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_10017DF08(&qword_100EABE08);
  __chkstk_darwin(v24 - 8);
  uint64_t v26 = (char *)&v43 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = sub_10017DF08(&qword_100E6D1D8);
  __chkstk_darwin(v27 - 8);
  uint64_t v29 = (char *)&v43 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t Options = type metadata accessor for WeatherServiceFetchOptions();
  uint64_t v48 = *(void *)(Options - 8);
  uint64_t v49 = Options;
  __chkstk_darwin(Options);
  unint64_t v32 = (char *)&v43 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t updated = type metadata accessor for WeatherDataUpdateRequestLog.Event(0);
  __chkstk_darwin(updated);
  uint64_t v35 = (uint64_t *)((char *)&v43 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0));
  *uint64_t v35 = a1;
  swift_storeEnumTagMultiPayload();
  swift_errorRetain();
  sub_10015B128((uint64_t)v35);
  sub_1001BC5DC();
  Location.timeZone.getter();
  uint64_t v36 = type metadata accessor for TimeZone();
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v29, 0, 1, v36);
  uint64_t v37 = type metadata accessor for WeatherServiceLocationOptions();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v37 - 8) + 16))(v26, v45, v37);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v26, 0, 1, v37);
  uint64_t v38 = AppConfiguration.treatmentIDs.getter();
  uint64_t v39 = type metadata accessor for WeatherNetworkActivity();
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v23, 1, 1, v39);
  AppConfiguration.weatherDataService.getter();
  char v40 = WeatherDataServiceConfiguration.needsTwilightData.getter();
  (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v46);
  uint64_t v61 = _swiftEmptyArrayStorage;
  sub_100128EB4((unint64_t *)&qword_100EABE10, (void (*)(uint64_t))&type metadata accessor for WeatherServiceCaching.Options);
  sub_10017DF08(&qword_100EABE18);
  sub_1001246C8((unint64_t *)&qword_100EABE20, &qword_100EABE18);
  uint64_t v41 = v50;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  sub_10012475C(0, 0, (uint64_t)v29, (uint64_t)v26, (uint64_t)v17, v38, (uint64_t)v23, 0, (uint64_t)v32, v40 & 1);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v51 + 8))(v17, v41);
  sub_10017DF4C((uint64_t)v23, &qword_100EABE00);
  sub_10017DF4C((uint64_t)v26, &qword_100EABE08);
  sub_10017DF4C((uint64_t)v29, &qword_100E6D1D8);
  sub_100124C80(v60, v57, v58, v56, v55, v54, (unint64_t)v32, v53, v44);
  return (*(uint64_t (**)(char *, uint64_t))(v48 + 8))(v32, v49);
}

uint64_t sub_100A44C28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v42 = a6;
  uint64_t v44 = a5;
  uint64_t v62 = a4;
  uint64_t v63 = a2;
  uint64_t v65 = a1;
  uint64_t v66 = sub_10017DF08(&qword_100EABE30);
  uint64_t v64 = *(void *)(v66 - 8);
  __chkstk_darwin(v66);
  uint64_t v34 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10017DF08(&qword_100EABE38);
  uint64_t v60 = *(void *)(v7 - 8);
  uint64_t v61 = v7;
  __chkstk_darwin(v7);
  uint64_t v35 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10017DF08(&qword_100EABE40);
  uint64_t v58 = *(void *)(v9 - 8);
  uint64_t v59 = v9;
  __chkstk_darwin(v9);
  uint64_t v36 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10017DF08(&qword_100EABE48);
  uint64_t v56 = *(void *)(v11 - 8);
  uint64_t v57 = v11;
  __chkstk_darwin(v11);
  uint64_t v37 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_10017DF08(&qword_100EABE50);
  uint64_t v54 = *(void *)(v13 - 8);
  uint64_t v55 = v13;
  __chkstk_darwin(v13);
  uint64_t v38 = (char *)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_10017DF08(&qword_100EABE58);
  uint64_t v52 = *(void *)(v15 - 8);
  uint64_t v53 = v15;
  __chkstk_darwin(v15);
  uint64_t v39 = (char *)&v34 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_10017DF08(&qword_100EABE60);
  uint64_t v50 = *(void *)(v17 - 8);
  uint64_t v51 = v17;
  __chkstk_darwin(v17);
  char v40 = (char *)&v34 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_10017DF08(&qword_100EABE68);
  uint64_t v48 = *(void *)(v19 - 8);
  uint64_t v49 = v19;
  __chkstk_darwin(v19);
  uint64_t v41 = (char *)&v34 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = sub_10017DF08(&qword_100EABE70);
  uint64_t v46 = *(void *)(v47 - 8);
  __chkstk_darwin(v47);
  uint64_t v67 = (char *)&v34 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = sub_10017DF08(&qword_100EABE78);
  uint64_t v43 = *(void *)(v45 - 8);
  __chkstk_darwin(v45);
  uint64_t v68 = (char *)&v34 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  ProductRequirementsFactory.AppRequiredProducts.current.getter();
  ProductRequirementsFactory.AppRequiredProducts.minutely.getter();
  ProductRequirementsFactory.AppRequiredProducts.hourly.getter();
  ProductRequirementsFactory.AppRequiredProducts.daily.getter();
  ProductRequirementsFactory.AppRequiredProducts.airQuality.getter();
  ProductRequirementsFactory.AppRequiredProducts.changes.getter();
  ProductRequirementsFactory.AppRequiredProducts.alerts.getter();
  ProductRequirementsFactory.AppRequiredProducts.availability.getter();
  ProductRequirementsFactory.AppRequiredProducts.news.getter();
  ProductRequirementsFactory.AppRequiredProducts.historicalComparisons.getter();
  uint64_t v23 = swift_allocObject();
  uint64_t v24 = v42;
  *(void *)(v23 + 16) = v44;
  *(void *)(v23 + 24) = v24;
  type metadata accessor for CurrentWeather();
  swift_retain();
  sub_10017DF08(&qword_100E6E8F8);
  sub_10017DF08(&qword_100E66CC8);
  sub_10017DF08(&qword_100E66CA0);
  sub_10017DF08(&qword_100E885C0);
  sub_10017DF08(&qword_100E6D1C8);
  sub_10017DF08(&qword_100E957B8);
  type metadata accessor for WeatherAvailability();
  sub_10017DF08(&qword_100EABE80);
  sub_10017DF08(&qword_100E6B8B8);
  uint64_t v25 = v34;
  uint64_t v26 = v35;
  uint64_t v27 = v36;
  uint64_t v28 = v41;
  uint64_t v29 = v40;
  unint64_t v30 = v39;
  uint64_t v31 = v38;
  unint64_t v32 = v37;
  WeatherService.fetchWeather<A, B, C, D, E, F, G, H, I, J>(for:including:_:_:_:_:_:_:_:_:_:options:completion:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v64 + 8))(v25, v66);
  (*(void (**)(char *, uint64_t))(v60 + 8))(v26, v61);
  (*(void (**)(char *, uint64_t))(v58 + 8))(v27, v59);
  (*(void (**)(char *, uint64_t))(v56 + 8))(v32, v57);
  (*(void (**)(char *, uint64_t))(v54 + 8))(v31, v55);
  (*(void (**)(char *, uint64_t))(v52 + 8))(v30, v53);
  (*(void (**)(char *, uint64_t))(v50 + 8))(v29, v51);
  (*(void (**)(char *, uint64_t))(v48 + 8))(v28, v49);
  (*(void (**)(char *, uint64_t))(v46 + 8))(v67, v47);
  return (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v68, v45);
}

uint64_t sub_100A4546C(uint64_t a1, void (*a2)(void *), uint64_t a3)
{
  uint64_t v283 = a3;
  uint64_t v285 = a2;
  uint64_t v4 = sub_10017DF08(&qword_100EABE88);
  __chkstk_darwin(v4);
  uint64_t v6 = (uint64_t *)((char *)&v181 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v269 = type metadata accessor for WeatherDataUpdater.Response();
  __chkstk_darwin(v269);
  uint64_t v274 = (char *)&v181 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (int *)sub_10017DF08(&qword_100EABE90);
  uint64_t v9 = __chkstk_darwin(v8);
  uint64_t v271 = (char *)&v181 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v276 = (char *)&v181 - v12;
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v277 = (char *)&v181 - v14;
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v278 = (char *)&v181 - v16;
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v279 = (char *)&v181 - v18;
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v280 = (char *)&v181 - v20;
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v281 = (char *)&v181 - v22;
  uint64_t v23 = __chkstk_darwin(v21);
  uint64_t v282 = (char *)&v181 - v24;
  uint64_t v25 = __chkstk_darwin(v23);
  uint64_t v284 = (char *)&v181 - v26;
  uint64_t v27 = __chkstk_darwin(v25);
  uint64_t v275 = (char *)&v181 - v28;
  __chkstk_darwin(v27);
  unint64_t v30 = (char *)&v181 - v29;
  uint64_t v31 = sub_10017DF08(&qword_100EABE98);
  __chkstk_darwin(v31);
  unint64_t v33 = (uint64_t *)((char *)&v181 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1001B7204(a1, (uint64_t)v33, &qword_100EABE98);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *uint64_t v6 = *v33;
    swift_storeEnumTagMultiPayload();
    swift_errorRetain();
    v285(v6);
    swift_errorRelease();
    uint64_t v34 = &qword_100EABE88;
    uint64_t v35 = (uint64_t)v6;
  }
  else
  {
    uint64_t v36 = v8[12];
    uint64_t v37 = v30;
    uint64_t v38 = (uint64_t)&v30[v36];
    uint64_t v39 = v8[16];
    char v40 = &v30[v39];
    uint64_t v41 = v8[20];
    long long v295 = &v30[v39];
    uint64_t v296 = &v30[v41];
    uint64_t v42 = v8[24];
    uint64_t v309 = &v30[v42];
    uint64_t v43 = v8[28];
    uint64_t v310 = &v30[v43];
    uint64_t v44 = v8[36];
    uint64_t v293 = &v30[v44];
    uint64_t v45 = v8[40];
    uint64_t v304 = &v30[v36];
    v305 = &v30[v45];
    uint64_t v46 = v8[44];
    uint64_t v301 = &v30[v46];
    uint64_t v47 = (uint64_t)v33 + v36;
    uint64_t v48 = (char *)v33 + v39;
    uint64_t v254 = v4;
    uint64_t v49 = (char *)v33 + v41;
    uint64_t v253 = v6;
    uint64_t v50 = (uint64_t)v33 + v42;
    uint64_t v51 = v8[32];
    v307 = (void (*)(char *, uint64_t))((char *)v33 + v43);
    uint64_t v298 = (char *)v33 + v44;
    long long v299 = (void *)((char *)v33 + v45);
    uint64_t v300 = (void (*)(void))((char *)v33 + v46);
    uint64_t v306 = type metadata accessor for CurrentWeather();
    uint64_t v288 = *(void **)(v306 - 8);
    uint64_t v232 = (void (*)(char *, char *, uint64_t))v288[4];
    long long v233 = v288 + 4;
    v232(v37, (char *)v33, v306);
    sub_1001278D0(v47, v38, &qword_100E6E8F8);
    uint64_t v302 = sub_10017DF08(&qword_100E66CC8);
    uint64_t v287 = *(void **)(v302 - 8);
    uint64_t v52 = (void (*)(uint64_t, char *, uint64_t))v287[4];
    uint64_t v230 = v287 + 4;
    uint64_t v231 = v52;
    v52((uint64_t)v40, v48, v302);
    uint64_t v311 = sub_10017DF08(&qword_100E66CA0);
    uint64_t v286 = *(void **)(v311 - 8);
    uint64_t v53 = (void (*)(uint64_t, char *, uint64_t))v286[4];
    uint64_t v227 = v286 + 4;
    uint64_t v228 = v53;
    v53((uint64_t)v296, v49, v311);
    sub_1001278D0(v50, (uint64_t)v309, &qword_100E885C0);
    sub_1001278D0((uint64_t)v307, (uint64_t)v310, &qword_100E6D1C8);
    v307 = *(void (**)(char *, uint64_t))((char *)v33 + v51);
    uint64_t v308 = (uint64_t)v37;
    *(void *)&v37[v51] = v307;
    uint64_t v303 = type metadata accessor for WeatherAvailability();
    uint64_t v289 = *(void **)(v303 - 8);
    uint64_t v54 = (void (*)(uint64_t, char *, uint64_t))v289[4];
    uint64_t v224 = v289 + 4;
    uint64_t v225 = v54;
    uint64_t v55 = v293;
    v54((uint64_t)v293, v298, v303);
    sub_1001278D0((uint64_t)v299, (uint64_t)v305, &qword_100EABE80);
    uint64_t v56 = (uint64_t)v301;
    sub_1001278D0((uint64_t)v300, (uint64_t)v301, &qword_100E6B8B8);
    uint64_t v57 = v275;
    uint64_t v252 = &v275[v8[12]];
    uint64_t v58 = (uint64_t)v252;
    uint64_t v251 = &v275[v8[16]];
    uint64_t v59 = v251;
    uint64_t v250 = &v275[v8[20]];
    uint64_t v60 = v250;
    uint64_t v249 = &v275[v8[24]];
    uint64_t v61 = (uint64_t)v249;
    uint64_t v248 = &v275[v8[28]];
    uint64_t v62 = (uint64_t)v248;
    uint64_t v297 = (void *)v8[32];
    uint64_t v273 = &v275[v8[36]];
    uint64_t v272 = &v275[v8[40]];
    uint64_t v270 = &v275[v8[44]];
    uint64_t v300 = (void (*)(void))v288[2];
    uint64_t v298 = (char *)(v288 + 2);
    ((void (*)(char *, char *, uint64_t))v300)(v275, v37, v306);
    sub_1001B7204((uint64_t)v304, v58, &qword_100E6E8F8);
    uint64_t v290 = (void (*)(char *, char *, uint64_t))v287[2];
    long long v299 = v287 + 2;
    v290(v59, v295, v302);
    uint64_t v291 = (void (*)(char *, char *, uint64_t))v286[2];
    uint64_t v292 = v286 + 2;
    v291(v60, v296, v311);
    sub_1001B7204((uint64_t)v309, v61, &qword_100E885C0);
    sub_1001B7204((uint64_t)v310, v62, &qword_100E6D1C8);
    *(void *)((char *)v297 + (void)v57) = v307;
    uint64_t v294 = (void (*)(char *, char *, uint64_t))v289[2];
    uint64_t v297 = v289 + 2;
    uint64_t v63 = v303;
    v294(v273, v55, v303);
    sub_1001B7204((uint64_t)v305, (uint64_t)v272, &qword_100EABE80);
    sub_1001B7204(v56, (uint64_t)v270, &qword_100E6B8B8);
    uint64_t v217 = &v284[v8[12]];
    uint64_t v64 = (uint64_t)v217;
    uint64_t v247 = &v284[v8[16]];
    uint64_t v65 = v247;
    uint64_t v246 = &v284[v8[20]];
    uint64_t v66 = v246;
    uint64_t v245 = &v284[v8[24]];
    uint64_t v67 = (uint64_t)v245;
    uint64_t v244 = &v284[v8[28]];
    uint64_t v68 = (uint64_t)v244;
    uint64_t v267 = v8[32];
    v243 = &v284[v8[36]];
    uint64_t v69 = v243;
    uint64_t v242 = &v284[v8[40]];
    uint64_t v70 = (uint64_t)v242;
    uint64_t v268 = &v284[v8[44]];
    unint64_t v71 = v284;
    v300();
    sub_1001B7204((uint64_t)v304, v64, &qword_100E6E8F8);
    v290(v65, v295, v302);
    unint64_t v72 = v66;
    uint64_t v73 = v311;
    v291(v72, v296, v311);
    sub_1001B7204((uint64_t)v309, v67, &qword_100E885C0);
    sub_1001B7204((uint64_t)v310, v68, &qword_100E6D1C8);
    *(void *)&v71[v267] = v307;
    v294(v69, v293, v63);
    sub_1001B7204((uint64_t)v305, v70, &qword_100EABE80);
    sub_1001B7204((uint64_t)v301, (uint64_t)v268, &qword_100E6B8B8);
    uint64_t v241 = &v282[v8[12]];
    uint64_t v74 = (uint64_t)v241;
    long long v211 = &v282[v8[16]];
    uint64_t v75 = v211;
    uint64_t v240 = &v282[v8[20]];
    char v76 = v240;
    uint64_t v239 = &v282[v8[24]];
    uint64_t v77 = (uint64_t)v239;
    uint64_t v238 = &v282[v8[28]];
    uint64_t v78 = (uint64_t)v238;
    uint64_t v266 = v8[32];
    uint64_t v237 = &v282[v8[36]];
    uint64_t v79 = v237;
    uint64_t v236 = &v282[v8[40]];
    uint64_t v80 = (uint64_t)v236;
    uint64_t v267 = (uint64_t)&v282[v8[44]];
    id v81 = v282;
    v300();
    sub_1001B7204((uint64_t)v304, v74, &qword_100E6E8F8);
    uint64_t v82 = v295;
    v290(v75, v295, v302);
    v291(v76, v296, v73);
    sub_1001B7204((uint64_t)v309, v77, &qword_100E885C0);
    sub_1001B7204((uint64_t)v310, v78, &qword_100E6D1C8);
    *(void *)&v81[v266] = v307;
    uint64_t v83 = v293;
    v294(v79, v293, v303);
    sub_1001B7204((uint64_t)v305, v80, &qword_100EABE80);
    sub_1001B7204((uint64_t)v301, v267, &qword_100E6B8B8);
    uint64_t v235 = &v281[v8[12]];
    uint64_t v84 = (uint64_t)v235;
    uint64_t v234 = &v281[v8[16]];
    uint64_t v85 = v234;
    uint64_t v209 = &v281[v8[20]];
    uint64_t v86 = v209;
    uint64_t v229 = &v281[v8[24]];
    uint64_t v87 = (uint64_t)v229;
    uint64_t v226 = &v281[v8[28]];
    uint64_t v88 = (uint64_t)v226;
    uint64_t v264 = v8[32];
    uint64_t v223 = &v281[v8[36]];
    uint64_t v89 = v223;
    uint64_t v266 = (uint64_t)&v281[v8[40]];
    uint64_t v265 = &v281[v8[44]];
    uint64_t v90 = v281;
    v300();
    sub_1001B7204((uint64_t)v304, v84, &qword_100E6E8F8);
    uint64_t v91 = v85;
    uint64_t v92 = v302;
    v290(v91, v82, v302);
    v291(v86, v296, v311);
    sub_1001B7204((uint64_t)v309, v87, &qword_100E885C0);
    sub_1001B7204((uint64_t)v310, v88, &qword_100E6D1C8);
    *(void *)&v90[v264] = v307;
    v294(v89, v83, v303);
    uint64_t v93 = v305;
    sub_1001B7204((uint64_t)v305, v266, &qword_100EABE80);
    sub_1001B7204((uint64_t)v301, (uint64_t)v265, &qword_100E6B8B8);
    uint64_t v222 = &v280[v8[12]];
    uint64_t v94 = (uint64_t)v222;
    uint64_t v221 = &v280[v8[16]];
    uint64_t v95 = v221;
    uint64_t v220 = &v280[v8[20]];
    uint64_t v96 = v220;
    uint64_t v203 = &v280[v8[24]];
    uint64_t v97 = (uint64_t)v203;
    uint64_t v219 = &v280[v8[28]];
    uint64_t v98 = (uint64_t)v219;
    uint64_t v262 = v8[32];
    uint64_t v218 = &v280[v8[36]];
    uint64_t v99 = v218;
    uint64_t v264 = (uint64_t)&v280[v8[40]];
    uint64_t v263 = &v280[v8[44]];
    uint64_t v100 = v280;
    v300();
    sub_1001B7204((uint64_t)v304, v94, &qword_100E6E8F8);
    uint64_t v101 = v92;
    uint64_t v102 = v290;
    v290(v95, v295, v101);
    uint64_t v103 = v296;
    v291(v96, v296, v311);
    sub_1001B7204((uint64_t)v309, v97, &qword_100E885C0);
    sub_1001B7204((uint64_t)v310, v98, &qword_100E6D1C8);
    *(void *)&v100[v262] = v307;
    v294(v99, v293, v303);
    sub_1001B7204((uint64_t)v93, v264, &qword_100EABE80);
    sub_1001B7204((uint64_t)v301, (uint64_t)v263, &qword_100E6B8B8);
    id v104 = v279;
    uint64_t v216 = &v279[v8[12]];
    uint64_t v105 = (uint64_t)v216;
    uint64_t v215 = &v279[v8[16]];
    int v106 = v215;
    uint64_t v214 = &v279[v8[20]];
    int v107 = v214;
    uint64_t v213 = &v279[v8[24]];
    uint64_t v108 = (uint64_t)v213;
    uint64_t v198 = &v279[v8[28]];
    uint64_t v109 = (uint64_t)v198;
    uint64_t v260 = v8[32];
    uint64_t v212 = &v279[v8[36]];
    uint64_t v110 = v212;
    uint64_t v262 = (uint64_t)&v279[v8[40]];
    uint64_t v261 = &v279[v8[44]];
    ((void (*)(char *, uint64_t, uint64_t))v300)(v279, v308, v306);
    sub_1001B7204((uint64_t)v304, v105, &qword_100E6E8F8);
    v102(v106, v295, v302);
    uint64_t v111 = v103;
    uint64_t v112 = v291;
    v291(v107, v111, v311);
    sub_1001B7204((uint64_t)v309, v108, &qword_100E885C0);
    sub_1001B7204((uint64_t)v310, v109, &qword_100E6D1C8);
    *(void *)&v104[v260] = v307;
    v294(v110, v293, v303);
    sub_1001B7204((uint64_t)v305, v262, &qword_100EABE80);
    sub_1001B7204((uint64_t)v301, (uint64_t)v261, &qword_100E6B8B8);
    uint64_t v113 = v278;
    long long v210 = &v278[v8[12]];
    uint64_t v114 = (uint64_t)v210;
    uint64_t v208 = &v278[v8[16]];
    uint64_t v115 = v208;
    uint64_t v207 = &v278[v8[20]];
    uint64_t v116 = v207;
    uint64_t v206 = &v278[v8[24]];
    uint64_t v117 = (uint64_t)v206;
    uint64_t v205 = &v278[v8[28]];
    uint64_t v118 = (uint64_t)v205;
    uint64_t v258 = v8[32];
    uint64_t v204 = &v278[v8[36]];
    uint64_t v119 = v204;
    uint64_t v260 = (uint64_t)&v278[v8[40]];
    uint64_t v259 = &v278[v8[44]];
    ((void (*)(char *, uint64_t, uint64_t))v300)(v278, v308, v306);
    sub_1001B7204((uint64_t)v304, v114, &qword_100E6E8F8);
    v290(v115, v295, v302);
    v112(v116, v296, v311);
    sub_1001B7204((uint64_t)v309, v117, &qword_100E885C0);
    sub_1001B7204((uint64_t)v310, v118, &qword_100E6D1C8);
    *(void *)&v113[v258] = v307;
    v294(v119, v293, v303);
    sub_1001B7204((uint64_t)v305, v260, &qword_100EABE80);
    sub_1001B7204((uint64_t)v301, (uint64_t)v259, &qword_100E6B8B8);
    uint64_t v120 = v277;
    uint64_t v202 = &v277[v8[12]];
    uint64_t v121 = (uint64_t)v202;
    uint64_t v201 = &v277[v8[16]];
    uint64_t v122 = v201;
    uint64_t v200 = &v277[v8[20]];
    uint64_t v123 = v200;
    uint64_t v199 = &v277[v8[24]];
    uint64_t v124 = (uint64_t)v199;
    uint64_t v197 = &v277[v8[28]];
    uint64_t v125 = (uint64_t)v197;
    uint64_t v126 = v8[32];
    id v190 = &v277[v8[36]];
    uint64_t v127 = v190;
    uint64_t v258 = (uint64_t)&v277[v8[40]];
    uint64_t v257 = &v277[v8[44]];
    uint64_t v128 = v306;
    ((void (*)(char *, uint64_t, uint64_t))v300)(v277, v308, v306);
    sub_1001B7204((uint64_t)v304, v121, &qword_100E6E8F8);
    v290(v122, v295, v302);
    uint64_t v129 = v123;
    uint64_t v130 = v296;
    ((void (*)(char *))v291)(v129);
    sub_1001B7204((uint64_t)v309, v124, &qword_100E885C0);
    sub_1001B7204((uint64_t)v310, v125, &qword_100E6D1C8);
    *(void *)&v120[v126] = v307;
    v294(v127, v293, v303);
    sub_1001B7204((uint64_t)v305, v258, &qword_100EABE80);
    sub_1001B7204((uint64_t)v301, (uint64_t)v257, &qword_100E6B8B8);
    uint64_t v131 = v276;
    uint64_t v196 = &v276[v8[12]];
    uint64_t v132 = (uint64_t)v196;
    uint64_t v195 = &v276[v8[16]];
    uint64_t v133 = v195;
    uint64_t v194 = &v276[v8[20]];
    uint64_t v134 = v194;
    uint64_t v193 = &v276[v8[24]];
    uint64_t v135 = (uint64_t)v193;
    uint64_t v192 = &v276[v8[28]];
    uint64_t v136 = (uint64_t)v192;
    uint64_t v189 = v8[32];
    uint64_t v191 = &v276[v8[36]];
    uint64_t v137 = v191;
    uint64_t v255 = &v276[v8[40]];
    uint64_t v256 = &v276[v8[44]];
    ((void (*)(char *, uint64_t, uint64_t))v300)(v276, v308, v128);
    sub_1001B7204((uint64_t)v304, v132, &qword_100E6E8F8);
    uint64_t v138 = v302;
    v290(v133, v295, v302);
    v291(v134, v130, v311);
    sub_1001B7204((uint64_t)v309, v135, &qword_100E885C0);
    sub_1001B7204((uint64_t)v310, v136, &qword_100E6D1C8);
    *(void *)&v131[v189] = v307;
    v294(v137, v293, v303);
    sub_1001B7204((uint64_t)v305, (uint64_t)v255, &qword_100EABE80);
    sub_1001B7204((uint64_t)v301, (uint64_t)v256, &qword_100E6B8B8);
    uint64_t v139 = v271;
    uint64_t v189 = (uint64_t)&v271[v8[12]];
    uint64_t v140 = v189;
    uint64_t v188 = &v271[v8[16]];
    uint64_t v141 = v188;
    long long v187 = &v271[v8[20]];
    uint64_t v142 = v187;
    uint64_t v186 = &v271[v8[24]];
    uint64_t v143 = (uint64_t)v186;
    uint64_t v185 = &v271[v8[28]];
    uint64_t v144 = (uint64_t)v185;
    uint64_t v181 = v8[32];
    uint64_t v184 = &v271[v8[36]];
    uint64_t v145 = v184;
    uint64_t v182 = &v271[v8[40]];
    uint64_t v183 = &v271[v8[44]];
    ((void (*)(char *, uint64_t, uint64_t))v300)(v271, v308, v128);
    sub_1001B7204((uint64_t)v304, v140, &qword_100E6E8F8);
    uint64_t v146 = v138;
    v290(v141, v295, v138);
    uint64_t v147 = v311;
    v291(v142, v296, v311);
    sub_1001B7204((uint64_t)v309, v143, &qword_100E885C0);
    sub_1001B7204((uint64_t)v310, v144, &qword_100E6D1C8);
    uint64_t v148 = v307;
    *(void *)&v139[v181] = v307;
    uint64_t v149 = v303;
    v294(v145, v293, v303);
    uint64_t v150 = (uint64_t)v182;
    sub_1001B7204((uint64_t)v305, (uint64_t)v182, &qword_100EABE80);
    uint64_t v151 = (uint64_t)v183;
    sub_1001B7204((uint64_t)v301, (uint64_t)v183, &qword_100E6B8B8);
    uint64_t v152 = (uint64_t)v274;
    v232(v274, v275, v128);
    uint64_t v153 = (int *)v269;
    sub_1001278D0((uint64_t)v217, v152 + *(int *)(v269 + 20), &qword_100E6E8F8);
    v231(v152 + v153[6], v211, v146);
    uint64_t v154 = v147;
    v228(v152 + v153[7], v209, v147);
    sub_1001278D0((uint64_t)v203, v152 + v153[8], &qword_100E885C0);
    sub_1001278D0((uint64_t)v198, v152 + v153[9], &qword_100E6D1C8);
    *(void *)(v152 + v153[10]) = v148;
    uint64_t v155 = v149;
    v225(v152 + v153[11], v190, v149);
    sub_1001278D0((uint64_t)v255, v152 + v153[12], &qword_100EABE80);
    sub_1001278D0(v151, v152 + v153[13], &qword_100E6B8B8);
    swift_bridgeObjectRetain();
    sub_10017DF4C(v150, &qword_100EABE80);
    uint64_t v156 = v289 + 1;
    uint64_t v157 = (char *)v289[1];
    ((void (*)(char *, uint64_t))v157)(v184, v149);
    uint64_t v309 = v157;
    uint64_t v289 = v156;
    sub_10017DF4C((uint64_t)v185, &qword_100E6D1C8);
    sub_10017DF4C((uint64_t)v186, &qword_100E885C0);
    uint64_t v158 = (char *)v286[1];
    ++v286;
    ((void (*)(char *, uint64_t))v158)(v187, v154);
    uint64_t v159 = (void (*)(char *, uint64_t))v287[1];
    ++v287;
    uint64_t v160 = v302;
    v159(v188, v302);
    sub_10017DF4C(v189, &qword_100E6E8F8);
    long long v161 = v288 + 1;
    v305 = (char *)v288[1];
    uint64_t v162 = v306;
    ((void (*)(char *, uint64_t))v305)(v139, v306);
    sub_10017DF4C((uint64_t)v256, &qword_100E6B8B8);
    ((void (*)(char *, uint64_t))v157)(v191, v155);
    sub_10017DF4C((uint64_t)v192, &qword_100E6D1C8);
    sub_10017DF4C((uint64_t)v193, &qword_100E885C0);
    uint64_t v163 = v311;
    uint64_t v310 = v158;
    ((void (*)(char *, uint64_t))v158)(v194, v311);
    v307 = v159;
    v159(v195, v160);
    sub_10017DF4C((uint64_t)v196, &qword_100E6E8F8);
    uint64_t v164 = v305;
    ((void (*)(char *, uint64_t))v305)(v276, v162);
    sub_10017DF4C((uint64_t)v257, &qword_100E6B8B8);
    sub_10017DF4C(v258, &qword_100EABE80);
    sub_10017DF4C((uint64_t)v197, &qword_100E6D1C8);
    sub_10017DF4C((uint64_t)v199, &qword_100E885C0);
    ((void (*)(char *, uint64_t))v158)(v200, v163);
    uint64_t v165 = v160;
    v159(v201, v160);
    sub_10017DF4C((uint64_t)v202, &qword_100E6E8F8);
    ((void (*)(char *, uint64_t))v164)(v277, v162);
    uint64_t v288 = v161;
    sub_10017DF4C((uint64_t)v259, &qword_100E6B8B8);
    sub_10017DF4C(v260, &qword_100EABE80);
    uint64_t v166 = v303;
    ((void (*)(char *, uint64_t))v309)(v204, v303);
    sub_10017DF4C((uint64_t)v205, &qword_100E6D1C8);
    sub_10017DF4C((uint64_t)v206, &qword_100E885C0);
    uint64_t v167 = v163;
    uint64_t v168 = v310;
    ((void (*)(char *, uint64_t))v310)(v207, v167);
    uint64_t v169 = v307;
    v307(v208, v160);
    sub_10017DF4C((uint64_t)v210, &qword_100E6E8F8);
    ((void (*)(char *, uint64_t))v164)(v278, v162);
    sub_10017DF4C((uint64_t)v261, &qword_100E6B8B8);
    sub_10017DF4C(v262, &qword_100EABE80);
    ((void (*)(char *, uint64_t))v309)(v212, v166);
    sub_10017DF4C((uint64_t)v213, &qword_100E885C0);
    uint64_t v170 = v311;
    ((void (*)(char *, uint64_t))v168)(v214, v311);
    v169(v215, v160);
    sub_10017DF4C((uint64_t)v216, &qword_100E6E8F8);
    uint64_t v171 = v162;
    uint64_t v172 = v305;
    ((void (*)(char *, uint64_t))v305)(v279, v162);
    sub_10017DF4C((uint64_t)v263, &qword_100E6B8B8);
    sub_10017DF4C(v264, &qword_100EABE80);
    uint64_t v173 = v309;
    ((void (*)(char *, uint64_t))v309)(v218, v166);
    sub_10017DF4C((uint64_t)v219, &qword_100E6D1C8);
    ((void (*)(char *, uint64_t))v310)(v220, v170);
    v169(v221, v165);
    sub_10017DF4C((uint64_t)v222, &qword_100E6E8F8);
    ((void (*)(char *, uint64_t))v172)(v280, v171);
    sub_10017DF4C((uint64_t)v265, &qword_100E6B8B8);
    sub_10017DF4C(v266, &qword_100EABE80);
    ((void (*)(char *, uint64_t))v173)(v223, v166);
    sub_10017DF4C((uint64_t)v226, &qword_100E6D1C8);
    sub_10017DF4C((uint64_t)v229, &qword_100E885C0);
    v169(v234, v165);
    sub_10017DF4C((uint64_t)v235, &qword_100E6E8F8);
    uint64_t v174 = v171;
    ((void (*)(char *, uint64_t))v172)(v281, v171);
    sub_10017DF4C(v267, &qword_100E6B8B8);
    sub_10017DF4C((uint64_t)v236, &qword_100EABE80);
    ((void (*)(char *, uint64_t))v173)(v237, v166);
    sub_10017DF4C((uint64_t)v238, &qword_100E6D1C8);
    sub_10017DF4C((uint64_t)v239, &qword_100E885C0);
    uint64_t v176 = v310;
    uint64_t v175 = v311;
    ((void (*)(char *, uint64_t))v310)(v240, v311);
    sub_10017DF4C((uint64_t)v241, &qword_100E6E8F8);
    ((void (*)(char *, uint64_t))v172)(v282, v174);
    sub_10017DF4C((uint64_t)v268, &qword_100E6B8B8);
    sub_10017DF4C((uint64_t)v242, &qword_100EABE80);
    ((void (*)(char *, uint64_t))v173)(v243, v166);
    sub_10017DF4C((uint64_t)v244, &qword_100E6D1C8);
    sub_10017DF4C((uint64_t)v245, &qword_100E885C0);
    ((void (*)(char *, uint64_t))v176)(v246, v175);
    uint64_t v177 = v302;
    uint64_t v178 = v307;
    v307(v247, v302);
    ((void (*)(char *, uint64_t))v172)(v284, v306);
    sub_10017DF4C((uint64_t)v270, &qword_100E6B8B8);
    sub_10017DF4C((uint64_t)v272, &qword_100EABE80);
    ((void (*)(char *, uint64_t))v173)(v273, v166);
    sub_10017DF4C((uint64_t)v248, &qword_100E6D1C8);
    sub_10017DF4C((uint64_t)v249, &qword_100E885C0);
    ((void (*)(char *, uint64_t))v176)(v250, v175);
    v178(v251, v177);
    sub_10017DF4C((uint64_t)v252, &qword_100E6E8F8);
    uint64_t v179 = (uint64_t)v253;
    sub_1001B9A30((uint64_t)v274, (uint64_t)v253, (void (*)(void))type metadata accessor for WeatherDataUpdater.Response);
    swift_storeEnumTagMultiPayload();
    v285((void *)v179);
    sub_10017DF4C(v179, &qword_100EABE88);
    sub_1001BC5DC();
    uint64_t v34 = &qword_100EABE90;
    uint64_t v35 = v308;
  }
  return sub_10017DF4C(v35, v34);
}

uint64_t sub_100A474B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8, char *a9, char *a10, uint64_t a11, uint64_t a12, uint64_t a13, void (*a14)(void, void), uint64_t a15)
{
  uint64_t v431 = a8;
  uint64_t v426 = a7;
  uint64_t v425 = a6;
  uint64_t v424 = a1;
  uint64_t v360 = (int *)sub_10017DF08(&qword_100EABE90);
  uint64_t v19 = __chkstk_darwin(v360);
  v361 = (char *)&v288 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v376 = (char *)&v288 - v22;
  uint64_t v23 = __chkstk_darwin(v21);
  v364 = (char *)&v288 - v24;
  uint64_t v25 = __chkstk_darwin(v23);
  uint64_t v365 = (char *)&v288 - v26;
  uint64_t v27 = __chkstk_darwin(v25);
  v366 = (char *)&v288 - v28;
  uint64_t v29 = __chkstk_darwin(v27);
  uint64_t v367 = (char *)&v288 - v30;
  uint64_t v31 = __chkstk_darwin(v29);
  uint64_t v368 = (char *)&v288 - v32;
  uint64_t v33 = __chkstk_darwin(v31);
  v369 = (char *)&v288 - v34;
  uint64_t v35 = __chkstk_darwin(v33);
  uint64_t v370 = (char *)&v288 - v36;
  uint64_t v37 = __chkstk_darwin(v35);
  uint64_t v363 = (char *)&v288 - v38;
  __chkstk_darwin(v37);
  uint64_t v427 = (uint64_t)&v288 - v39;
  uint64_t v406 = sub_10017DF08(&qword_100EABE30);
  uint64_t v405 = *(void *)(v406 - 8);
  __chkstk_darwin(v406);
  v404 = (char *)&v288 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v403 = sub_10017DF08(&qword_100EABE38);
  uint64_t v402 = *(void *)(v403 - 8);
  __chkstk_darwin(v403);
  uint64_t v401 = (uint64_t)&v288 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v400 = sub_10017DF08(&qword_100EABE40);
  uint64_t v399 = *(void *)(v400 - 8);
  __chkstk_darwin(v400);
  v398 = (uint64_t *)((char *)&v288 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v397 = (void *)sub_10017DF08(&qword_100EABE48);
  uint64_t v396 = *(v397 - 1);
  __chkstk_darwin(v397);
  v420 = (uint64_t *)((char *)&v288 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v395 = (void *)sub_10017DF08(&qword_100EABE50);
  v394 = (char *)*(v395 - 1);
  __chkstk_darwin(v395);
  v419 = (char *)&v288 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v393 = (char *)sub_10017DF08(&qword_100EABE58);
  uint64_t v392 = (char *)*((void *)v393 - 1);
  __chkstk_darwin(v393);
  v418 = (uint64_t *)((char *)&v288 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v391 = (char *)sub_10017DF08(&qword_100EABE60);
  uint64_t v390 = *((void *)v391 - 1);
  __chkstk_darwin(v391);
  uint64_t v417 = (uint64_t)&v288 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v389 = sub_10017DF08(&qword_100EABE68);
  uint64_t v388 = *(void *)(v389 - 8);
  __chkstk_darwin(v389);
  v415 = (uint64_t *)((char *)&v288 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v387 = (char *)sub_10017DF08(&qword_100EABE70);
  uint64_t v386 = *((void *)v387 - 1);
  __chkstk_darwin(v387);
  v413 = (uint64_t *)((char *)&v288 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v385 = (char *)sub_10017DF08(&qword_100EABE78);
  uint64_t v384 = *((void *)v385 - 1);
  __chkstk_darwin(v385);
  v429 = (uint64_t *)((char *)&v288 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v50 = sub_10017DF08(&qword_100EABEA0);
  uint64_t v51 = __chkstk_darwin(v50 - 8);
  uint64_t v362 = (char *)&v288 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = __chkstk_darwin(v51);
  uint64_t v421 = (uint64_t)&v288 - v54;
  __chkstk_darwin(v53);
  uint64_t v428 = (uint64_t)&v288 - v55;
  uint64_t Fetched = type metadata accessor for WeatherServiceLastFetched();
  uint64_t v383 = *(char **)(Fetched - 8);
  __chkstk_darwin(Fetched);
  uint64_t v382 = (uint64_t)&v288 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  uint64_t v58 = __chkstk_darwin(v57 - 8);
  uint64_t v381 = (char *)&v288 - ((v59 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v58);
  uint64_t v412 = (char *)&v288 - v60;
  uint64_t v380 = type metadata accessor for WeatherServiceCaching.Options();
  uint64_t v377 = *(void (**)(uint64_t, uint64_t))(v380 - 8);
  __chkstk_darwin(v380);
  uint64_t v379 = (char *)&v288 - ((v61 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v359 = type metadata accessor for WeatherDataUpdater.Response();
  __chkstk_darwin(v359);
  uint64_t v409 = (uint64_t)&v288 - ((v62 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v422 = sub_10017DF08(&qword_100EABE88);
  __chkstk_darwin(v422);
  v423 = (uint64_t *)((char *)&v288 - ((v63 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v443 = type metadata accessor for OSSignpostID();
  uint64_t v439 = *(void *)(v443 - 8);
  uint64_t v64 = __chkstk_darwin(v443);
  v416 = (uint64_t *)((char *)&v288 - ((v65 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v64);
  uint64_t v433 = (uint64_t)&v288 - v66;
  uint64_t v445 = type metadata accessor for Location();
  uint64_t v440 = *(void *)(v445 - 8);
  uint64_t v67 = __chkstk_darwin(v445);
  uint64_t v414 = (uint64_t)&v288 - ((v68 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v67);
  uint64_t v434 = (uint64_t)&v288 - v69;
  uint64_t Options = type metadata accessor for WeatherServiceFetchOptions();
  uint64_t v441 = *(void *)(Options - 8);
  uint64_t v442 = Options;
  uint64_t v71 = __chkstk_darwin(Options);
  v430 = (char *)&v288 - ((v72 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v71);
  uint64_t v435 = (uint64_t)&v288 - v73;
  uint64_t v74 = type metadata accessor for ProductRequirementsFactory.AppRequiredProducts();
  uint64_t v437 = *(void *)(v74 - 8);
  uint64_t v438 = v74;
  __chkstk_darwin(v74);
  v436 = (void (*)(char *, char *, uint64_t))((char *)&v288 - ((v75 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v378 = sub_10017DF08(&qword_100EABE80);
  uint64_t v76 = __chkstk_darwin(v378);
  uint64_t v78 = (char *)&v288 - ((v77 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v76);
  uint64_t v80 = (char *)&v288 - v79;
  uint64_t updated = type metadata accessor for WeatherDataUpdateRequestLog.Event(0);
  __chkstk_darwin(updated);
  uint64_t v83 = (char *)&v288 - ((v82 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_storeEnumTagMultiPayload();
  uint64_t v444 = a4;
  sub_10015B128((uint64_t)v83);
  sub_1001BC5DC();
  sub_1001B1E64(a5, a5[3]);
  uint64_t v84 = Location.id.getter();
  sub_1001E5838(v84, v85);
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v407 = a2 + 16;
  uint64_t Strong = (char *)swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v374 = a2;
    uint64_t v375 = a14;
    uint64_t v373 = a13;
    uint64_t v372 = a12;
    uint64_t v410 = a11;
    v411 = v78;
    uint64_t v86 = v444;
    uint64_t v87 = v445;
    uint64_t v88 = *(char **)(v440 + 16);
    ((void (*)(char *, uint64_t, uint64_t))v88)(v83, a3, v445);
    swift_storeEnumTagMultiPayload();
    sub_10015B128((uint64_t)v83);
    sub_1001BC5DC();
    uint64_t v89 = v424;
    sub_100A4B378((uint64_t)Strong, v424, v86, a3, (uint64_t)v80);
    uint64_t v90 = *(void (**)(void, char *, uint64_t))(v437 + 16);
    uint64_t v358 = a9;
    v90(v436, a9, v438);
    uint64_t v91 = *(void (**)(void))(v441 + 16);
    uint64_t v357 = a10;
    uint64_t v92 = v375;
    ((void (*)(uint64_t, char *, uint64_t))v91)(v435, a10, v442);
    sub_100125F9C(v410, (uint64_t)&v447);
    uint64_t v410 = a3;
    uint64_t v356 = v88;
    ((void (*)(uint64_t, uint64_t, uint64_t))v88)(v434, a3, v87);
    uint64_t v93 = *(void (**)(uint64_t, void (*)(void, void), uint64_t))(v439 + 16);
    v93(v433, v92, v443);
    v371 = v80;
    uint64_t v94 = (uint64_t)v411;
    sub_1001B7204((uint64_t)v80, (uint64_t)v411, &qword_100EABE80);
    uint64_t v95 = v89;
    uint64_t v96 = v423;
    sub_1001B7204(v95, (uint64_t)v423, &qword_100EABE88);
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      uint64_t v121 = v409;
      sub_1001B9AF4((uint64_t)v96, v409, (void (*)(void))type metadata accessor for WeatherDataUpdater.Response);
      uint64_t v122 = sub_1001B1E64(&v447, v448);
      uint64_t v123 = v433;
      uint64_t v124 = v434;
      uint64_t v125 = v436;
      uint64_t v126 = v435;
      sub_100A538E4(v121, 0, v444, v425, v426, v431, v436, v435, v374, *v122, v434, v372, v373, Strong, v433, v94);
      swift_release();
      sub_1001BC5DC();
      sub_10017DF4C(v94, &qword_100EABE80);
      (*(void (**)(uint64_t, uint64_t))(v439 + 8))(v123, v443);
      (*(void (**)(uint64_t, uint64_t))(v440 + 8))(v124, v445);
      _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)&v447);
      (*(void (**)(uint64_t, uint64_t))(v441 + 8))(v126, v442);
      (*(void (**)(void (*)(char *, char *, uint64_t), uint64_t))(v437 + 8))(v125, v438);
      uint64_t v127 = (uint64_t)v371;
LABEL_15:
      sub_10017DF4C(v127, &qword_100EABE80);
      return sub_100A4B140();
    }
    uint64_t v354 = (char *)a15;
    uint64_t v355 = *v96;
    ((void (*)(uint64_t, uint64_t, uint64_t))v356)(v414, v410, v445);
    v93((uint64_t)v416, v92, v443);
    uint64_t v97 = v91;
    uint64_t v98 = (uint64_t)v357;
    v97();
    sub_10017DF08(&qword_100EABEA8);
    uint64_t v99 = swift_allocObject();
    *(_OWORD *)(v99 + 16) = xmmword_100C251B0;
    static WeatherServiceCaching.Options.allowsExpiredData.getter();
    uint64_t v446 = v99;
    sub_100128EB4((unint64_t *)&qword_100EABE10, (void (*)(uint64_t))&type metadata accessor for WeatherServiceCaching.Options);
    sub_10017DF08(&qword_100EABE18);
    sub_1001246C8((unint64_t *)&qword_100EABE20, &qword_100EABE18);
    dispatch thunk of SetAlgebra.init<A>(_:)();
    WeatherServiceFetchOptions.cachingOptions.setter();
    uint64_t v100 = v382;
    sub_1001BD2A8(v426, v431, v98, v382);
    uint64_t v101 = (uint64_t)v412;
    WeatherServiceLastFetched.date.getter();
    (*((void (**)(uint64_t, uint64_t))v383 + 1))(v100, Fetched);
    sub_1001B7204(v101, (uint64_t)v381, (uint64_t *)&unk_100E73CA0);
    WeatherServiceFetchOptions.now.setter();
    ProductRequirementsFactory.AppRequiredProducts.current.getter();
    ProductRequirementsFactory.AppRequiredProducts.minutely.getter();
    ProductRequirementsFactory.AppRequiredProducts.hourly.getter();
    ProductRequirementsFactory.AppRequiredProducts.daily.getter();
    ProductRequirementsFactory.AppRequiredProducts.airQuality.getter();
    ProductRequirementsFactory.AppRequiredProducts.changes.getter();
    ProductRequirementsFactory.AppRequiredProducts.alerts.getter();
    uint64_t v102 = v398;
    ProductRequirementsFactory.AppRequiredProducts.availability.getter();
    uint64_t v103 = v401;
    ProductRequirementsFactory.AppRequiredProducts.news.getter();
    id v104 = v404;
    ProductRequirementsFactory.AppRequiredProducts.historicalComparisons.getter();
    uint64_t v424 = type metadata accessor for CurrentWeather();
    sub_10017DF08(&qword_100E6E8F8);
    uint64_t v105 = sub_10017DF08(&qword_100E66CC8);
    uint64_t v106 = sub_10017DF08(&qword_100E66CA0);
    sub_10017DF08(&qword_100E885C0);
    sub_10017DF08(&qword_100E6D1C8);
    sub_10017DF08(&qword_100E957B8);
    uint64_t v107 = type metadata accessor for WeatherAvailability();
    sub_10017DF08(&qword_100E6B8B8);
    v423 = (uint64_t *)v107;
    uint64_t Fetched = v106;
    uint64_t v422 = v105;
    uint64_t v108 = (void (*)(void, void, void))v413;
    uint64_t v109 = (uint64_t)v415;
    uint64_t v110 = v417;
    uint64_t v111 = (void (*)(void, void))v418;
    uint64_t v112 = v419;
    uint64_t v113 = (void (*)(void, void))v420;
    WeatherService.cachedWeather<A, B, C, D, E, F, G, H, I, J>(for:including:_:_:_:_:_:_:_:_:_:options:)();
    (*(void (**)(char *, uint64_t))(v405 + 8))(v104, v406);
    (*(void (**)(uint64_t, uint64_t))(v402 + 8))(v103, v403);
    (*(void (**)(void *, uint64_t))(v399 + 8))(v102, v400);
    (*(void (**)(void, void *))(v396 + 8))(v113, v397);
    (*((void (**)(char *, void *))v394 + 1))(v112, v395);
    (*((void (**)(void, char *))v392 + 1))(v111, v393);
    (*(void (**)(uint64_t, char *))(v390 + 8))(v110, v391);
    (*(void (**)(uint64_t, uint64_t))(v388 + 8))(v109, v389);
    uint64_t v114 = v428;
    (*(void (**)(void (*)(void, void, void), char *))(v386 + 8))(v108, v387);
    (*(void (**)(uint64_t *, char *))(v384 + 8))(v429, v385);
    uint64_t v115 = v421;
    sub_1001B7204(v114, v421, &qword_100EABEA0);
    uint64_t v116 = sub_10017DF08(&qword_100EABE98);
    if (_s7Weather24LocationCompositionStateOwet_0(v115, 1, v116) == 1)
    {
      sub_10017DF4C((uint64_t)v411, &qword_100EABE80);
      uint64_t v117 = v443;
      uint64_t v439 = *(void *)(v439 + 8);
      ((void (*)(uint64_t, uint64_t))v439)(v433, v443);
      uint64_t v118 = *(void (**)(uint64_t, uint64_t))(v440 + 8);
      v118(v434, v445);
      _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)&v447);
      uint64_t v119 = v442;
      uint64_t v120 = *(void (**)(uint64_t, uint64_t))(v441 + 8);
      v120(v435, v442);
      (*(void (**)(void (*)(char *, char *, uint64_t), uint64_t))(v437 + 8))(v436, v438);
    }
    else
    {
      uint64_t v117 = v443;
      uint64_t v128 = (uint64_t)v362;
      sub_1001B7204(v115, (uint64_t)v362, &qword_100EABEA0);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      uint64_t v130 = v445;
      uint64_t v132 = v439;
      uint64_t v131 = v440;
      if (EnumCaseMultiPayload != 1)
      {
        uint64_t v137 = *(void (**)(void, void))(v439 + 8);
        v439 += 8;
        uint64_t v377 = v137;
        v137(v416, v117);
        uint64_t v138 = *(void (**)(void, void))(v131 + 8);
        uint64_t v440 = v131 + 8;
        uint64_t v375 = v138;
        v138(v414, v130);
        uint64_t v139 = v360;
        uint64_t v140 = v360[12];
        uint64_t v141 = v427 + v140;
        v420 = (uint64_t *)(v427 + v140);
        uint64_t v142 = v360[16];
        uint64_t v143 = v427 + v142;
        v419 = (char *)(v427 + v142);
        uint64_t v144 = v360[20];
        uint64_t v145 = v427 + v144;
        uint64_t v405 = v427 + v144;
        uint64_t v146 = v360[24];
        uint64_t v147 = v427 + v146;
        uint64_t v401 = v427 + v146;
        uint64_t v148 = v360[28];
        v429 = (uint64_t *)(v427 + v148);
        uint64_t v149 = v360[32];
        uint64_t v150 = v360[36];
        uint64_t v406 = v427 + v150;
        uint64_t v151 = v360[40];
        uint64_t v403 = v427 + v151;
        uint64_t v152 = v360[44];
        uint64_t v417 = v427 + v152;
        uint64_t v153 = v128 + v140;
        uint64_t v154 = v128 + v142;
        v404 = (char *)(v128 + v144);
        v413 = (void *)(v128 + v146);
        v418 = (uint64_t *)(v128 + v148);
        uint64_t v414 = v128 + v150;
        v415 = (void *)(v128 + v151);
        v416 = (void *)(v128 + v152);
        v398 = *(void **)(v424 - 8);
        uint64_t v337 = (void (*)(void))v398[4];
        uint64_t v338 = v398 + 4;
        uint64_t v155 = v427;
        v337();
        sub_1001278D0(v153, v141, &qword_100E6E8F8);
        uint64_t v397 = *(void **)(v422 - 8);
        uint64_t v156 = (void (*)(void, void, void))v397[4];
        uint64_t v335 = v397 + 4;
        uint64_t v336 = (void (*)(uint64_t, char *, uint64_t))v156;
        v156(v143, v154, v422);
        uint64_t v396 = *(void *)(Fetched - 8);
        uint64_t v157 = *(void (**)(void, void))(v396 + 32);
        uint64_t v333 = v396 + 32;
        uint64_t v334 = (void (*)(uint64_t, char *, uint64_t))v157;
        v157(v145, v404);
        sub_1001278D0((uint64_t)v413, v147, &qword_100E885C0);
        sub_1001278D0((uint64_t)v418, (uint64_t)v429, &qword_100E6D1C8);
        v418 = *(uint64_t **)(v128 + v149);
        *(void *)(v155 + v149) = v418;
        uint64_t v395 = (void *)*(v423 - 1);
        uint64_t v158 = (void (*)(void, void, void))v395[4];
        uint64_t v330 = v395 + 4;
        uint64_t v331 = (void (*)(uint64_t, char *, uint64_t *))v158;
        v158(v406, v414, v423);
        uint64_t v159 = v403;
        sub_1001278D0((uint64_t)v415, v403, &qword_100EABE80);
        uint64_t v160 = v417;
        sub_1001278D0((uint64_t)v416, v417, &qword_100E6B8B8);
        long long v161 = v363;
        uint64_t v362 = &v363[v139[12]];
        uint64_t v162 = (uint64_t)v362;
        uint64_t v358 = &v363[v139[16]];
        uint64_t v163 = v358;
        uint64_t v357 = &v363[v139[20]];
        uint64_t v164 = v357;
        uint64_t v356 = &v363[v139[24]];
        uint64_t v165 = v356;
        uint64_t v354 = &v363[v139[28]];
        uint64_t v166 = (uint64_t)v354;
        uint64_t v414 = v139[32];
        v394 = &v363[v139[36]];
        uint64_t v393 = &v363[v139[40]];
        uint64_t v392 = &v363[v139[44]];
        uint64_t v402 = v398[2];
        v416 = v398 + 2;
        ((void (*)(char *, uint64_t, uint64_t))v402)(v363, v155, v424);
        sub_1001B7204((uint64_t)v420, v162, &qword_100E6E8F8);
        uint64_t v399 = v397[2];
        v415 = v397 + 2;
        ((void (*)(char *, char *, uint64_t))v399)(v163, v419, v422);
        uint64_t v167 = *(char **)(v396 + 16);
        uint64_t v400 = v396 + 16;
        v404 = v167;
        ((void (*)(char *, uint64_t, uint64_t))v167)(v164, v405, Fetched);
        sub_1001B7204(v401, (uint64_t)v165, &qword_100E885C0);
        sub_1001B7204((uint64_t)v429, v166, &qword_100E6D1C8);
        *(void *)&v161[v414] = v418;
        v413 = (void *)v395[2];
        uint64_t v414 = (uint64_t)(v395 + 2);
        ((void (*)(char *, uint64_t, uint64_t *))v413)(v394, v406, v423);
        sub_1001B7204(v159, (uint64_t)v393, &qword_100EABE80);
        sub_1001B7204(v160, (uint64_t)v392, &qword_100E6B8B8);
        uint64_t v322 = &v370[v139[12]];
        uint64_t v168 = (uint64_t)v322;
        uint64_t v353 = &v370[v139[16]];
        uint64_t v169 = v353;
        uint64_t v352 = &v370[v139[20]];
        uint64_t v170 = v352;
        uint64_t v351 = &v370[v139[24]];
        uint64_t v171 = (uint64_t)v351;
        uint64_t v350 = &v370[v139[28]];
        uint64_t v172 = (uint64_t)v350;
        uint64_t v390 = v139[32];
        uint64_t v349 = &v370[v139[36]];
        uint64_t v173 = v349;
        uint64_t v348 = &v370[v139[40]];
        uint64_t v174 = (uint64_t)v348;
        uint64_t v391 = &v370[v139[44]];
        uint64_t v175 = v370;
        ((void (*)(void))v402)();
        sub_1001B7204((uint64_t)v420, v168, &qword_100E6E8F8);
        uint64_t v176 = (void (*)(char *, char *, uint64_t))v399;
        ((void (*)(char *, char *, uint64_t))v399)(v169, v419, v422);
        ((void (*)(char *, uint64_t, uint64_t))v404)(v170, v405, Fetched);
        sub_1001B7204(v401, v171, &qword_100E885C0);
        sub_1001B7204((uint64_t)v429, v172, &qword_100E6D1C8);
        *(void *)&v175[v390] = v418;
        ((void (*)(char *, uint64_t, uint64_t *))v413)(v173, v406, v423);
        sub_1001B7204(v159, v174, &qword_100EABE80);
        sub_1001B7204(v417, (uint64_t)v391, &qword_100E6B8B8);
        uint64_t v347 = &v369[v139[12]];
        uint64_t v177 = (uint64_t)v347;
        uint64_t v316 = &v369[v139[16]];
        uint64_t v178 = v316;
        uint64_t v346 = &v369[v139[20]];
        uint64_t v179 = v346;
        uint64_t v345 = &v369[v139[24]];
        uint64_t v180 = (uint64_t)v345;
        uint64_t v344 = &v369[v139[28]];
        uint64_t v181 = (uint64_t)v344;
        uint64_t v389 = v139[32];
        uint64_t v343 = &v369[v139[36]];
        uint64_t v182 = v343;
        uint64_t v342 = &v369[v139[40]];
        uint64_t v183 = (uint64_t)v342;
        uint64_t v390 = (uint64_t)&v369[v139[44]];
        uint64_t v184 = v369;
        ((void (*)(void))v402)();
        sub_1001B7204((uint64_t)v420, v177, &qword_100E6E8F8);
        v176(v178, v419, v422);
        ((void (*)(char *, uint64_t, uint64_t))v404)(v179, v405, Fetched);
        sub_1001B7204(v401, v180, &qword_100E885C0);
        sub_1001B7204((uint64_t)v429, v181, &qword_100E6D1C8);
        *(void *)&v184[v389] = v418;
        ((void (*)(char *, uint64_t, uint64_t *))v413)(v182, v406, v423);
        sub_1001B7204(v403, v183, &qword_100EABE80);
        sub_1001B7204(v417, v390, &qword_100E6B8B8);
        uint64_t v341 = &v368[v139[12]];
        uint64_t v185 = (uint64_t)v341;
        uint64_t v340 = &v368[v139[16]];
        uint64_t v186 = v340;
        uint64_t v314 = &v368[v139[20]];
        long long v187 = v314;
        v339 = &v368[v139[24]];
        uint64_t v188 = (uint64_t)v339;
        uint64_t v332 = &v368[v139[28]];
        uint64_t v189 = (uint64_t)v332;
        uint64_t v388 = v139[32];
        uint64_t v329 = &v368[v139[36]];
        id v190 = v329;
        uint64_t v328 = &v368[v139[40]];
        uint64_t v191 = (uint64_t)v328;
        uint64_t v389 = (uint64_t)&v368[v139[44]];
        uint64_t v192 = v368;
        uint64_t v193 = v424;
        ((void (*)(void))v402)();
        sub_1001B7204((uint64_t)v420, v185, &qword_100E6E8F8);
        ((void (*)(char *, char *, uint64_t))v399)(v186, v419, v422);
        ((void (*)(char *, uint64_t, uint64_t))v404)(v187, v405, Fetched);
        sub_1001B7204(v401, v188, &qword_100E885C0);
        sub_1001B7204((uint64_t)v429, v189, &qword_100E6D1C8);
        *(void *)&v192[v388] = v418;
        uint64_t v194 = v406;
        ((void (*)(char *, uint64_t, uint64_t *))v413)(v190, v406, v423);
        sub_1001B7204(v403, v191, &qword_100EABE80);
        sub_1001B7204(v417, v389, &qword_100E6B8B8);
        uint64_t v195 = v367;
        uint64_t v327 = &v367[v139[12]];
        uint64_t v196 = (uint64_t)v327;
        uint64_t v326 = &v367[v139[16]];
        uint64_t v197 = v326;
        uint64_t v325 = &v367[v139[20]];
        uint64_t v198 = v325;
        uint64_t v308 = &v367[v139[24]];
        uint64_t v199 = (uint64_t)v308;
        uint64_t v324 = &v367[v139[28]];
        uint64_t v200 = (uint64_t)v324;
        uint64_t v386 = v139[32];
        uint64_t v323 = &v367[v139[36]];
        uint64_t v201 = v323;
        uint64_t v388 = (uint64_t)&v367[v139[40]];
        uint64_t v387 = &v367[v139[44]];
        ((void (*)(char *, uint64_t, uint64_t))v402)(v367, v427, v193);
        sub_1001B7204((uint64_t)v420, v196, &qword_100E6E8F8);
        ((void (*)(char *, char *, uint64_t))v399)(v197, v419, v422);
        uint64_t v202 = v405;
        ((void (*)(char *, uint64_t, uint64_t))v404)(v198, v405, Fetched);
        uint64_t v203 = v401;
        sub_1001B7204(v401, v199, &qword_100E885C0);
        sub_1001B7204((uint64_t)v429, v200, &qword_100E6D1C8);
        *(void *)&v195[v386] = v418;
        ((void (*)(char *, uint64_t, uint64_t *))v413)(v201, v194, v423);
        sub_1001B7204(v403, v388, &qword_100EABE80);
        sub_1001B7204(v417, (uint64_t)v387, &qword_100E6B8B8);
        uint64_t v204 = v366;
        uint64_t v321 = &v366[v139[12]];
        uint64_t v205 = (uint64_t)v321;
        v320 = &v366[v139[16]];
        uint64_t v206 = v320;
        uint64_t v319 = &v366[v139[20]];
        uint64_t v207 = v319;
        uint64_t v318 = &v366[v139[24]];
        uint64_t v208 = (uint64_t)v318;
        uint64_t v303 = &v366[v139[28]];
        uint64_t v209 = (uint64_t)v303;
        uint64_t v384 = v139[32];
        uint64_t v317 = &v366[v139[36]];
        long long v210 = v317;
        uint64_t v386 = (uint64_t)&v366[v139[40]];
        uint64_t v385 = &v366[v139[44]];
        ((void (*)(char *, uint64_t, uint64_t))v402)(v366, v427, v424);
        sub_1001B7204((uint64_t)v420, v205, &qword_100E6E8F8);
        ((void (*)(char *, char *, uint64_t))v399)(v206, v419, v422);
        uint64_t v211 = Fetched;
        ((void (*)(char *, uint64_t, uint64_t))v404)(v207, v202, Fetched);
        sub_1001B7204(v203, v208, &qword_100E885C0);
        sub_1001B7204((uint64_t)v429, v209, &qword_100E6D1C8);
        *(void *)&v204[v384] = v418;
        ((void (*)(char *, uint64_t, uint64_t *))v413)(v210, v406, v423);
        sub_1001B7204(v403, v386, &qword_100EABE80);
        sub_1001B7204(v417, (uint64_t)v385, &qword_100E6B8B8);
        uint64_t v212 = v365;
        uint64_t v315 = &v365[v139[12]];
        uint64_t v213 = (uint64_t)v315;
        uint64_t v313 = &v365[v139[16]];
        uint64_t v214 = v313;
        uint64_t v312 = &v365[v139[20]];
        uint64_t v215 = v312;
        uint64_t v311 = &v365[v139[24]];
        uint64_t v216 = (uint64_t)v311;
        uint64_t v310 = &v365[v139[28]];
        uint64_t v217 = (uint64_t)v310;
        uint64_t v382 = v139[32];
        uint64_t v309 = &v365[v139[36]];
        uint64_t v218 = v309;
        uint64_t v384 = (uint64_t)&v365[v139[40]];
        uint64_t v383 = &v365[v139[44]];
        ((void (*)(char *, uint64_t, uint64_t))v402)(v365, v427, v424);
        sub_1001B7204((uint64_t)v420, v213, &qword_100E6E8F8);
        ((void (*)(char *, char *, uint64_t))v399)(v214, v419, v422);
        ((void (*)(char *, uint64_t, uint64_t))v404)(v215, v405, v211);
        sub_1001B7204(v401, v216, &qword_100E885C0);
        sub_1001B7204((uint64_t)v429, v217, &qword_100E6D1C8);
        *(void *)&v212[v382] = v418;
        ((void (*)(char *, uint64_t, uint64_t *))v413)(v218, v406, v423);
        sub_1001B7204(v403, v384, &qword_100EABE80);
        sub_1001B7204(v417, (uint64_t)v383, &qword_100E6B8B8);
        uint64_t v219 = v364;
        v307 = &v364[v139[12]];
        uint64_t v220 = (uint64_t)v307;
        uint64_t v306 = &v364[v139[16]];
        uint64_t v221 = v306;
        v305 = &v364[v139[20]];
        uint64_t v222 = v305;
        uint64_t v304 = &v364[v139[24]];
        uint64_t v223 = (uint64_t)v304;
        uint64_t v302 = &v364[v139[28]];
        uint64_t v224 = (uint64_t)v302;
        uint64_t v380 = v139[32];
        long long v295 = &v364[v139[36]];
        uint64_t v225 = v295;
        uint64_t v382 = (uint64_t)&v364[v139[40]];
        uint64_t v381 = &v364[v139[44]];
        uint64_t v226 = (void (*)(void))v402;
        ((void (*)(char *, uint64_t, uint64_t))v402)(v364, v427, v424);
        sub_1001B7204((uint64_t)v420, v220, &qword_100E6E8F8);
        uint64_t v227 = (void (*)(char *, char *, uint64_t))v399;
        ((void (*)(char *, char *, uint64_t))v399)(v221, v419, v422);
        ((void (*)(char *, uint64_t, uint64_t))v404)(v222, v405, Fetched);
        sub_1001B7204(v401, v223, &qword_100E885C0);
        sub_1001B7204((uint64_t)v429, v224, &qword_100E6D1C8);
        *(void *)&v219[v380] = v418;
        uint64_t v228 = v225;
        uint64_t v229 = v406;
        ((void (*)(char *))v413)(v228);
        sub_1001B7204(v403, v382, &qword_100EABE80);
        sub_1001B7204(v417, (uint64_t)v381, &qword_100E6B8B8);
        uint64_t v301 = &v376[v139[12]];
        uint64_t v230 = (uint64_t)v301;
        uint64_t v300 = &v376[v139[16]];
        uint64_t v231 = v300;
        long long v299 = &v376[v139[20]];
        uint64_t v232 = v299;
        uint64_t v298 = &v376[v139[24]];
        uint64_t v233 = (uint64_t)v298;
        uint64_t v297 = &v376[v139[28]];
        uint64_t v234 = (uint64_t)v297;
        uint64_t v378 = v139[32];
        uint64_t v296 = &v376[v139[36]];
        uint64_t v235 = v296;
        uint64_t v379 = &v376[v139[40]];
        uint64_t v380 = (uint64_t)&v376[v139[44]];
        v226();
        sub_1001B7204((uint64_t)v420, v230, &qword_100E6E8F8);
        v227(v231, v419, v422);
        ((void (*)(char *, uint64_t, uint64_t))v404)(v232, v405, Fetched);
        uint64_t v236 = v401;
        sub_1001B7204(v401, v233, &qword_100E885C0);
        sub_1001B7204((uint64_t)v429, v234, &qword_100E6D1C8);
        *(void *)&v376[v378] = v418;
        uint64_t v237 = (uint64_t)v423;
        ((void (*)(char *, uint64_t, uint64_t *))v413)(v235, v229, v423);
        sub_1001B7204(v403, (uint64_t)v379, &qword_100EABE80);
        sub_1001B7204(v417, v380, &qword_100E6B8B8);
        uint64_t v238 = v361;
        uint64_t v294 = &v361[v139[12]];
        uint64_t v239 = (uint64_t)v294;
        uint64_t v293 = &v361[v139[16]];
        uint64_t v240 = v293;
        uint64_t v292 = &v361[v139[20]];
        uint64_t v241 = v292;
        uint64_t v291 = &v361[v139[24]];
        uint64_t v242 = (uint64_t)v291;
        uint64_t v290 = &v361[v139[28]];
        uint64_t v243 = (uint64_t)v290;
        uint64_t v288 = v139[32];
        uint64_t v378 = (uint64_t)&v361[v139[36]];
        uint64_t v289 = &v361[v139[40]];
        uint64_t v360 = (int *)&v361[v139[44]];
        uint64_t v244 = v424;
        ((void (*)(char *, uint64_t, uint64_t))v402)(v361, v427, v424);
        sub_1001B7204((uint64_t)v420, v239, &qword_100E6E8F8);
        uint64_t v245 = v422;
        ((void (*)(char *, char *, uint64_t))v399)(v240, v419, v422);
        uint64_t v246 = Fetched;
        ((void (*)(char *, uint64_t, uint64_t))v404)(v241, v405, Fetched);
        sub_1001B7204(v236, v242, &qword_100E885C0);
        sub_1001B7204((uint64_t)v429, v243, &qword_100E6D1C8);
        uint64_t v247 = (void (*)(void, void))v418;
        *(void *)&v238[v288] = v418;
        ((void (*)(uint64_t, uint64_t, uint64_t))v413)(v378, v406, v237);
        uint64_t v248 = (uint64_t)v289;
        sub_1001B7204(v403, (uint64_t)v289, &qword_100EABE80);
        uint64_t v249 = v360;
        sub_1001B7204(v417, (uint64_t)v360, &qword_100E6B8B8);
        uint64_t v250 = v409;
        ((void (*)(uint64_t, char *, uint64_t))v337)(v409, v363, v244);
        uint64_t v251 = (int *)v359;
        sub_1001278D0((uint64_t)v322, v250 + *(int *)(v359 + 20), &qword_100E6E8F8);
        v336(v250 + v251[6], v316, v245);
        v334(v250 + v251[7], v314, v246);
        sub_1001278D0((uint64_t)v308, v250 + v251[8], &qword_100E885C0);
        sub_1001278D0((uint64_t)v303, v250 + v251[9], &qword_100E6D1C8);
        *(void *)(v250 + v251[10]) = v247;
        uint64_t v252 = (uint64_t)v423;
        v331(v250 + v251[11], v295, v423);
        sub_1001278D0((uint64_t)v379, v250 + v251[12], &qword_100EABE80);
        sub_1001278D0((uint64_t)v249, v250 + v251[13], &qword_100E6B8B8);
        swift_bridgeObjectRetain();
        sub_10017DF4C(v248, &qword_100EABE80);
        uint64_t v254 = v395 + 1;
        uint64_t v253 = (void (*)(uint64_t, uint64_t))v395[1];
        v253(v378, v252);
        v418 = (uint64_t *)v253;
        uint64_t v395 = v254;
        sub_10017DF4C((uint64_t)v290, &qword_100E6D1C8);
        sub_10017DF4C((uint64_t)v291, &qword_100E885C0);
        v420 = *(uint64_t **)(v396 + 8);
        v396 += 8;
        uint64_t v255 = Fetched;
        ((void (*)(char *, uint64_t))v420)(v292, Fetched);
        uint64_t v256 = v397 + 1;
        v429 = (uint64_t *)v397[1];
        uint64_t v257 = v422;
        ((void (*)(char *, uint64_t))v429)(v293, v422);
        sub_10017DF4C((uint64_t)v294, &qword_100E6E8F8);
        uint64_t v259 = v398 + 1;
        uint64_t v258 = (void (*)(char *, uint64_t))v398[1];
        uint64_t v260 = v424;
        v258(v238, v424);
        uint64_t v261 = v258;
        uint64_t v262 = v259;
        sub_10017DF4C(v380, &qword_100E6B8B8);
        v253((uint64_t)v296, (uint64_t)v423);
        sub_10017DF4C((uint64_t)v297, &qword_100E6D1C8);
        sub_10017DF4C((uint64_t)v298, &qword_100E885C0);
        uint64_t v263 = (void (*)(char *, uint64_t))v420;
        ((void (*)(char *, uint64_t))v420)(v299, v255);
        uint64_t v264 = v257;
        uint64_t v265 = v257;
        uint64_t v266 = v429;
        uint64_t v397 = v256;
        ((void (*)(char *, uint64_t))v429)(v300, v265);
        sub_10017DF4C((uint64_t)v301, &qword_100E6E8F8);
        uint64_t v267 = v260;
        v398 = v262;
        v261(v376, v260);
        sub_10017DF4C((uint64_t)v381, &qword_100E6B8B8);
        sub_10017DF4C(v382, &qword_100EABE80);
        sub_10017DF4C((uint64_t)v302, &qword_100E6D1C8);
        sub_10017DF4C((uint64_t)v304, &qword_100E885C0);
        v263(v305, v255);
        ((void (*)(char *, uint64_t))v266)(v306, v264);
        uint64_t v268 = v266;
        sub_10017DF4C((uint64_t)v307, &qword_100E6E8F8);
        v419 = (char *)v261;
        v261(v364, v267);
        sub_10017DF4C((uint64_t)v383, &qword_100E6B8B8);
        sub_10017DF4C(v384, &qword_100EABE80);
        uint64_t v269 = (uint64_t)v423;
        uint64_t v270 = (void (*)(char *, uint64_t))v418;
        ((void (*)(char *, uint64_t *))v418)(v309, v423);
        sub_10017DF4C((uint64_t)v310, &qword_100E6D1C8);
        sub_10017DF4C((uint64_t)v311, &qword_100E885C0);
        uint64_t v271 = Fetched;
        v263(v312, Fetched);
        ((void (*)(char *, uint64_t))v268)(v313, v264);
        sub_10017DF4C((uint64_t)v315, &qword_100E6E8F8);
        v261(v365, v267);
        sub_10017DF4C((uint64_t)v385, &qword_100E6B8B8);
        sub_10017DF4C(v386, &qword_100EABE80);
        v270(v317, v269);
        sub_10017DF4C((uint64_t)v318, &qword_100E885C0);
        v263(v319, v271);
        ((void (*)(char *, uint64_t))v268)(v320, v264);
        sub_10017DF4C((uint64_t)v321, &qword_100E6E8F8);
        ((void (*)(char *, uint64_t))v419)(v366, v424);
        sub_10017DF4C((uint64_t)v387, &qword_100E6B8B8);
        sub_10017DF4C(v388, &qword_100EABE80);
        v270(v323, v269);
        sub_10017DF4C((uint64_t)v324, &qword_100E6D1C8);
        v263(v325, v271);
        ((void (*)(char *, uint64_t))v268)(v326, v264);
        sub_10017DF4C((uint64_t)v327, &qword_100E6E8F8);
        uint64_t v272 = v424;
        uint64_t v273 = (void (*)(char *, uint64_t))v419;
        ((void (*)(char *, uint64_t))v419)(v367, v424);
        sub_10017DF4C(v389, &qword_100E6B8B8);
        sub_10017DF4C((uint64_t)v328, &qword_100EABE80);
        uint64_t v274 = (uint64_t)v423;
        v270(v329, (uint64_t)v423);
        sub_10017DF4C((uint64_t)v332, &qword_100E6D1C8);
        sub_10017DF4C((uint64_t)v339, &qword_100E885C0);
        ((void (*)(char *, uint64_t))v268)(v340, v264);
        sub_10017DF4C((uint64_t)v341, &qword_100E6E8F8);
        uint64_t v275 = v272;
        v273(v368, v272);
        sub_10017DF4C(v390, &qword_100E6B8B8);
        sub_10017DF4C((uint64_t)v342, &qword_100EABE80);
        v270(v343, v274);
        sub_10017DF4C((uint64_t)v344, &qword_100E6D1C8);
        sub_10017DF4C((uint64_t)v345, &qword_100E885C0);
        uint64_t v276 = Fetched;
        uint64_t v277 = (void (*)(char *, uint64_t))v420;
        ((void (*)(char *, uint64_t))v420)(v346, Fetched);
        sub_10017DF4C((uint64_t)v347, &qword_100E6E8F8);
        v273(v369, v272);
        sub_10017DF4C((uint64_t)v391, &qword_100E6B8B8);
        sub_10017DF4C((uint64_t)v348, &qword_100EABE80);
        v270(v349, v274);
        sub_10017DF4C((uint64_t)v350, &qword_100E6D1C8);
        sub_10017DF4C((uint64_t)v351, &qword_100E885C0);
        v277(v352, v276);
        uint64_t v278 = v422;
        uint64_t v279 = v429;
        ((void (*)(char *, uint64_t))v429)(v353, v422);
        v273(v370, v275);
        sub_10017DF4C((uint64_t)v392, &qword_100E6B8B8);
        sub_10017DF4C((uint64_t)v393, &qword_100EABE80);
        v270(v394, (uint64_t)v423);
        sub_10017DF4C((uint64_t)v354, &qword_100E6D1C8);
        sub_10017DF4C((uint64_t)v356, &qword_100E885C0);
        v277(v357, v276);
        ((void (*)(char *, uint64_t))v279)(v358, v278);
        sub_10017DF4C((uint64_t)v362, &qword_100E6E8F8);
        uint64_t v280 = sub_1001B1E64(&v447, v448);
        uint64_t v281 = (uint64_t)v411;
        uint64_t v282 = v433;
        uint64_t v283 = v434;
        uint64_t v284 = v436;
        uint64_t v285 = v435;
        sub_100A538E4(v409, 1, v444, v425, v426, v431, v436, v435, v374, *v280, v434, v372, v373, Strong, v433, (uint64_t)v411);
        sub_1001BC5DC();
        sub_10017DF4C(v427, &qword_100EABE90);
        sub_10017DF4C(v281, &qword_100EABE80);
        v377(v282, v443);
        v375(v283, v445);
        _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)&v447);
        uint64_t v136 = v442;
        uint64_t v120 = *(void (**)(uint64_t, uint64_t))(v441 + 8);
        v120(v285, v442);
        (*(void (**)(void (*)(char *, char *, uint64_t), uint64_t))(v437 + 8))(v284, v438);
        uint64_t v135 = v410;
        goto LABEL_11;
      }
      sub_10017DF4C((uint64_t)v411, &qword_100EABE80);
      uint64_t v439 = *(void *)(v132 + 8);
      ((void (*)(uint64_t, uint64_t))v439)(v433, v117);
      uint64_t v118 = *(void (**)(uint64_t, uint64_t))(v131 + 8);
      v118(v434, v130);
      _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)&v447);
      uint64_t v119 = v442;
      uint64_t v120 = *(void (**)(uint64_t, uint64_t))(v441 + 8);
      ((void (*)(uint64_t))v120)(v435);
      (*(void (**)(void (*)(char *, char *, uint64_t), uint64_t))(v437 + 8))(v436, v438);
      sub_10017DF4C(v128, &qword_100EABE98);
    }
    uint64_t v133 = v414;
    uint64_t v134 = (uint64_t)v416;
    sub_100A4C7CC(v444, v372, v373, v414, v355, (uint64_t)Strong, (uint64_t)v416);
    ((void (*)(uint64_t, uint64_t))v439)(v134, v117);
    v118(v133, v445);
    uint64_t v135 = v410;
    uint64_t v136 = v119;
LABEL_11:
    sub_10017DF4C(v421, &qword_100EABEA0);
    swift_beginAccess();
    if (swift_weakLoadStrong())
    {
      sub_1000CBE94(v135);
      swift_release();
      swift_errorRelease();
      swift_release();
    }
    else
    {
      swift_release();
      swift_errorRelease();
    }
    uint64_t v127 = (uint64_t)v371;
    uint64_t v286 = (uint64_t)v412;
    sub_10017DF4C(v428, &qword_100EABEA0);
    sub_10017DF4C(v286, (uint64_t *)&unk_100E73CA0);
    v120((uint64_t)v430, v136);
    goto LABEL_15;
  }
  sub_1006A7CD8(0xD000000000000022, 0x8000000100CBB2F0);
  return sub_100A4B140();
}

uint64_t sub_100A4B140()
{
  uint64_t v0 = type metadata accessor for Location.Identifier();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10017DF08(&qword_100E6DC08);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    swift_retain();
    swift_release();
    UnfairLock.lock()();
    swift_release();
  }
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    Location.identifier.getter();
    swift_beginAccess();
    sub_1001E5CE4((uint64_t)v3, (uint64_t)v6);
    swift_endAccess();
    swift_release();
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  }
  else
  {
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v6, 1, 1, v0);
  }
  sub_10017DF4C((uint64_t)v6, &qword_100E6DC08);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    swift_retain();
    swift_release();
    UnfairLock.unlock()();
    return swift_release();
  }
  return result;
}

uint64_t sub_100A4B378@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v40 = a4;
  uint64_t v43 = a3;
  uint64_t v48 = a2;
  uint64_t v51 = a5;
  uint64_t updated = type metadata accessor for WeatherDataUpdateRequestLog.Event(0);
  __chkstk_darwin(updated);
  uint64_t v42 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10017DF08(&qword_100EABE80);
  __chkstk_darwin(v7 - 8);
  uint64_t v46 = (uint64_t)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for News();
  uint64_t v49 = *(void *)(v9 - 8);
  uint64_t v50 = v9;
  __chkstk_darwin(v9);
  uint64_t v39 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = sub_10017DF08(&qword_100EABE88);
  __chkstk_darwin(v47);
  uint64_t v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = type metadata accessor for WeatherDataUpdater.Response();
  __chkstk_darwin(v44);
  uint64_t v45 = (uint64_t)&v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for NewsConfiguration();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v38 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for AppConfiguration();
  uint64_t v19 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v21 = (char *)&v38 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001B1E64((void *)(a1 + 120), *(void *)(a1 + 144));
  dispatch thunk of AppConfigurationManagerType.appConfiguration.getter();
  AppConfiguration.news.getter();
  (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
  LOBYTE(a1) = NewsConfiguration.enabled.getter();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  if (a1)
  {
    if (qword_100E62718 != -1) {
      swift_once();
    }
    char v22 = dispatch thunk of SettingGroup.isEnabled.getter();
    uint64_t v24 = v50;
    uint64_t v23 = v51;
    if (v22)
    {
      if (qword_100E624C0 != -1) {
        swift_once();
      }
      uint64_t v25 = sub_1002102B0(v24, (uint64_t)qword_100F51A10);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v49 + 16))(v23, v25, v24);
      goto LABEL_15;
    }
    sub_1001B7204(v48, (uint64_t)v12, &qword_100EABE88);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v27 = &qword_100EABE88;
      uint64_t v28 = (uint64_t)v12;
    }
    else
    {
      uint64_t v29 = v45;
      sub_1001B9AF4((uint64_t)v12, v45, (void (*)(void))type metadata accessor for WeatherDataUpdater.Response);
      uint64_t v30 = v46;
      sub_1001B7204(v29 + *(int *)(v44 + 48), v46, &qword_100EABE80);
      if (_s7Weather24LocationCompositionStateOwet_0(v30, 1, v24) != 1)
      {
        uint64_t v31 = *(void (**)(char *, uint64_t, uint64_t))(v49 + 32);
        uint64_t v32 = v39;
        v31(v39, v30, v24);
        uint64_t v33 = *(int *)(sub_10017DF08(&qword_100E8AC28) + 48);
        uint64_t v34 = type metadata accessor for Location();
        uint64_t v35 = (uint64_t)v42;
        (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v34 - 8) + 16))(v42, v40, v34);
        uint64_t v36 = *(void *)(News.placements.getter() + 16);
        swift_bridgeObjectRelease();
        *(void *)(v35 + v33) = v36;
        swift_storeEnumTagMultiPayload();
        sub_10015B128(v35);
        sub_1001BC5DC();
        sub_1001BC5DC();
        v31((char *)v23, (uint64_t)v32, v24);
LABEL_15:
        uint64_t v26 = 0;
        return _s7Weather24LocationCompositionStateOwst_0(v23, v26, 1, v24);
      }
      sub_1001BC5DC();
      uint64_t v27 = &qword_100EABE80;
      uint64_t v28 = v30;
    }
    sub_10017DF4C(v28, v27);
    uint64_t v26 = 1;
  }
  else
  {
    uint64_t v26 = 1;
    uint64_t v24 = v50;
    uint64_t v23 = v51;
  }
  return _s7Weather24LocationCompositionStateOwst_0(v23, v26, 1, v24);
}

uint64_t sub_100A4B968(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[6] = a5;
  v6[7] = a6;
  v6[5] = a4;
  sub_10017DF08(&qword_100E885C0);
  v6[8] = swift_task_alloc();
  sub_10017DF08(&qword_100EABEC8);
  v6[9] = swift_task_alloc();
  sub_10017DF08(&qword_100EABED0);
  v6[10] = swift_task_alloc();
  sub_10017DF08(&qword_100E6E8F8);
  v6[11] = swift_task_alloc();
  sub_10017DF08(&qword_100EA9998);
  v6[12] = swift_task_alloc();
  return _swift_task_switch(sub_100A4BAC0, 0, 0);
}

uint64_t sub_100A4BAC0()
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  v0[13] = Strong;
  if (Strong)
  {
    uint64_t v2 = v0[12];
    uint64_t v3 = v0[9];
    uint64_t v4 = v0[10];
    uint64_t v5 = *(void *)(Strong + 392);
    sub_1001B1E64((void *)(Strong + 368), v5);
    WeatherDataModel.currentWeather.getter();
    uint64_t v6 = type metadata accessor for CurrentWeather();
    _s7Weather24LocationCompositionStateOwst_0(v2, 0, 1, v6);
    WeatherDataModel.minuteForecast.getter();
    WeatherDataModel.hourlyForecast.getter();
    uint64_t v7 = sub_10017DF08(&qword_100E66CC8);
    _s7Weather24LocationCompositionStateOwst_0(v4, 0, 1, v7);
    WeatherDataModel.dailyForecast.getter();
    uint64_t v8 = sub_10017DF08(&qword_100E66CA0);
    _s7Weather24LocationCompositionStateOwst_0(v3, 0, 1, v8);
    WeatherDataModel.airQuality.getter();
    uint64_t v9 = WeatherDataModel.weatherAlerts.getter();
    v0[14] = v9;
    uint64_t v10 = (void *)swift_task_alloc();
    v0[15] = v10;
    *uint64_t v10 = v0;
    v10[1] = sub_100A4BD94;
    uint64_t v12 = v0[11];
    uint64_t v11 = v0[12];
    uint64_t v14 = v0[9];
    uint64_t v13 = v0[10];
    uint64_t v15 = v0[8];
    uint64_t v16 = v0[6];
    return dispatch thunk of WeatherProviderAttributionCacheManagerType.updateAttributions(for:with:minuteForecast:hourlyForecast:dailyForecast:airQuality:weatherAlerts:)(v16, v11, v12, v13, v14, v15, v9, v5);
  }
  else
  {
    if (qword_100E62818 != -1) {
      swift_once();
    }
    uint64_t v17 = type metadata accessor for Logger();
    sub_1002102B0(v17, (uint64_t)qword_100F51F50);
    uint64_t v18 = Logger.logObject.getter();
    os_log_type_t v19 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v18, v19))
    {
      uint64_t v20 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v20 = 0;
      _os_log_impl((void *)&_mh_execute_header, v18, v19, "We were deallocated! Skipping provider attribution update", v20, 2u);
      sub_100162EE0();
    }

    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v21 = (uint64_t (*)(void))v0[1];
    return v21();
  }
}

uint64_t sub_100A4BD94()
{
  sub_100119470();
  uint64_t v1 = v0[12];
  uint64_t v2 = v0[11];
  uint64_t v3 = v0[10];
  uint64_t v4 = v0[9];
  uint64_t v5 = v0[8];
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  sub_10017DF4C(v5, &qword_100E885C0);
  sub_10017DF4C(v4, &qword_100EABEC8);
  sub_10017DF4C(v3, &qword_100EABED0);
  sub_10017DF4C(v2, &qword_100E6E8F8);
  sub_10017DF4C(v1, &qword_100EA9998);
  return _swift_task_switch(sub_100A4BF4C, 0, 0);
}

uint64_t sub_100A4BF4C()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_100A4BFE4()
{
  sub_100162EA0();
  long long v14 = v1;
  unint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  type metadata accessor for MainAction();
  sub_100162E4C();
  __chkstk_darwin(v8);
  sub_10011C760();
  type metadata accessor for WeatherDataUpdateRequestLog.Event(0);
  sub_100179DC0();
  __chkstk_darwin(v9);
  sub_1001626E0();
  uint64_t v12 = v11 - v10;
  swift_storeEnumTagMultiPayload();
  sub_10015B128(v12);
  sub_1001BC5DC();
  *(void *)uint64_t v0 = Location.id.getter();
  *(void *)(v0 + 8) = v13;
  *(_OWORD *)(v0 + 16) = v14;
  *(void *)(v0 + 32) = v5;
  *(void *)(v0 + 40) = v3;
  type metadata accessor for WeatherDataAction();
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  uint64_t v16 = 0;
  memset(v15, 0, sizeof(v15));
  swift_bridgeObjectRetain();
  sub_1001AAF58(v0, (uint64_t)v15, v7);
  sub_10017DF4C((uint64_t)v15, (uint64_t *)&unk_100EA01F0);
  sub_1001BC5DC();
  swift_bridgeObjectRetain();
  sub_1006A7CD8(v5, v3);
  swift_bridgeObjectRelease();
  sub_100162694();
}

uint64_t sub_100A4C188(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  sub_1000CABB0(a2, a3, a4, a5, a6);
  sub_1000CA914();
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1000CBE94(a5);
    return swift_release();
  }
  return result;
}

uint64_t sub_100A4C22C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v60 = a3;
  uint64_t v7 = type metadata accessor for NewsArticlePlacement();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7 - 8);
  uint64_t v10 = (uint64_t *)((char *)&v53 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = type metadata accessor for Location();
  uint64_t v58 = *(void *)(v11 - 8);
  uint64_t v59 = v11;
  __chkstk_darwin(v11);
  uint64_t v56 = v12;
  uint64_t v57 = (char *)&v53 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t updated = type metadata accessor for WeatherDataUpdateRequestLog.Event(0);
  __chkstk_darwin(updated);
  long long v14 = (char *)&v53 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *(void *)(a1 + 16);
  uint64_t v61 = a4;
  uint64_t v62 = a1;
  uint64_t v54 = v15;
  if (v15)
  {
    uint64_t v53 = a2;
    uint64_t v16 = a1 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    uint64_t v17 = *(void *)(v8 + 72);
    swift_bridgeObjectRetain();
    uint64_t v18 = _swiftEmptyArrayStorage;
    while (1)
    {
      sub_1001B9A30(v16, (uint64_t)v10, (void (*)(void))type metadata accessor for NewsArticlePlacement);
      uint64_t v19 = *v10;
      swift_bridgeObjectRetain();
      sub_1001BC5DC();
      uint64_t v20 = *(void *)(v19 + 16);
      uint64_t v21 = v18[2];
      uint64_t v22 = v21 + v20;
      if (__OFADD__(v21, v20)) {
        break;
      }
      uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      if (!isUniquelyReferenced_nonNull_native || v22 > v18[3] >> 1)
      {
        if (v21 <= v22) {
          uint64_t v24 = v21 + v20;
        }
        else {
          uint64_t v24 = v21;
        }
        uint64_t v18 = (void *)sub_1007EA2B4(isUniquelyReferenced_nonNull_native, v24, 1, (uint64_t)v18);
      }
      if (*(void *)(v19 + 16))
      {
        uint64_t v25 = v18[2];
        uint64_t v26 = (v18[3] >> 1) - v25;
        uint64_t v27 = *(void *)(type metadata accessor for NewsArticle() - 8);
        uint64_t v28 = *(void *)(v27 + 72);
        if (v26 < v20) {
          goto LABEL_27;
        }
        unint64_t v29 = (*(unsigned __int8 *)(v27 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80);
        uint64_t v30 = (char *)v18 + v29 + v28 * v25;
        unint64_t v31 = v19 + v29;
        uint64_t v32 = v28 * v20;
        uint64_t v33 = &v30[v32];
        unint64_t v34 = v31 + v32;
        if (v31 < (unint64_t)v33 && (unint64_t)v30 < v34) {
          goto LABEL_29;
        }
        swift_arrayInitWithCopy();
        if (v20)
        {
          uint64_t v36 = v18[2];
          BOOL v37 = __OFADD__(v36, v20);
          uint64_t v38 = v36 + v20;
          if (v37) {
            goto LABEL_28;
          }
          v18[2] = v38;
        }
      }
      else if (v20)
      {
        goto LABEL_26;
      }
      swift_bridgeObjectRelease();
      v16 += v17;
      if (!--v15)
      {
        swift_bridgeObjectRelease();
        a2 = v53;
        goto LABEL_24;
      }
    }
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
LABEL_29:
    uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    uint64_t v18 = _swiftEmptyArrayStorage;
LABEL_24:
    uint64_t v39 = v18[2];
    swift_bridgeObjectRelease();
    uint64_t v40 = sub_10017DF08(&qword_100E8AC20);
    uint64_t v41 = *(int *)(v40 + 48);
    uint64_t v42 = *(int *)(v40 + 64);
    uint64_t v43 = v58;
    uint64_t v44 = v59;
    uint64_t v45 = *(void (**)(char *, uint64_t, uint64_t))(v58 + 16);
    uint64_t v46 = v60;
    v45(v14, v60, v59);
    *(void *)&v14[v41] = v54;
    *(void *)&v14[v42] = v39;
    swift_storeEnumTagMultiPayload();
    sub_10015B128((uint64_t)v14);
    sub_1001BC5DC();
    uint64_t v47 = v57;
    v45(v57, v46, v44);
    unint64_t v48 = (*(unsigned __int8 *)(v43 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80);
    unint64_t v49 = (v56 + v48 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v50 = swift_allocObject();
    uint64_t v51 = v62;
    *(void *)(v50 + 16) = v61;
    *(void *)(v50 + 24) = v51;
    (*(void (**)(unint64_t, char *, uint64_t))(v43 + 32))(v50 + v48, v47, v44);
    *(void *)(v50 + v49) = a2;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    asyncMain(block:)();
    return swift_release();
  }
  return result;
}

uint64_t sub_100A4C6F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = type metadata accessor for NewsDataModel();
  __chkstk_darwin(v7);
  uint64_t v9 = (uint64_t *)((char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  *uint64_t v9 = a2;
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRetain();
  sub_1000CA3B4((uint64_t)v9, a3, a4);
  return sub_1001BC5DC();
}

uint64_t sub_100A4C7CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v24[2] = a6;
  v24[3] = a7;
  v24[1] = a4;
  uint64_t v12 = type metadata accessor for Location();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(void *)(v13 + 64);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, a4, v12);
  unint64_t v16 = (*(unsigned __int8 *)(v13 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  unint64_t v17 = (v14 + v16 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v18 = (char *)swift_allocObject();
  *((void *)v18 + 2) = a1;
  *((void *)v18 + 3) = a2;
  *((void *)v18 + 4) = a3;
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(&v18[v16], v15, v12);
  *(void *)&v18[v17] = a5;
  swift_retain();
  swift_retain();
  swift_errorRetain();
  asyncMain(block:)();
  swift_release();
  static os_signpost_type_t.end.getter();
  sub_10017DF08(&qword_100E64020);
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_100C251B0;
  uint64_t v20 = Location.name.getter();
  uint64_t v22 = v21;
  *(void *)(v19 + 56) = &type metadata for String;
  *(void *)(v19 + 64) = sub_10012B7C0();
  *(void *)(v19 + 32) = v20;
  *(void *)(v19 + 40) = v22;
  os_signpost(_:dso:log:name:signpostID:_:_:)();
  return swift_bridgeObjectRelease();
}

uint64_t sub_100A4CA0C(uint64_t a1, uint64_t (*a2)(uint64_t), uint64_t a3, uint64_t a4, uint64_t a5)
{
  v22[1] = a3;
  uint64_t v7 = type metadata accessor for MainAction();
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t updated = type metadata accessor for WeatherDataUpdateRequestLog.Event(0);
  __chkstk_darwin(updated);
  uint64_t v12 = (char *)v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_storeEnumTagMultiPayload();
  sub_10015B128((uint64_t)v12);
  sub_1001BC5DC();
  uint64_t v13 = Location.id.getter();
  uint64_t v15 = v14;
  swift_errorRetain();
  uint64_t v16 = sub_100A342B8(a5);
  uint64_t v18 = v17;
  *(void *)&v23[0] = 0;
  *((void *)&v23[0] + 1) = 0xE000000000000000;
  uint64_t v25 = a5;
  sub_10017DF08(&qword_100E77F30);
  _print_unlocked<A, B>(_:_:)();
  long long v19 = v23[0];
  *(void *)uint64_t v9 = v13;
  *((void *)v9 + 1) = v15;
  *((void *)v9 + 2) = v16;
  *((void *)v9 + 3) = v18;
  *((_OWORD *)v9 + 2) = v19;
  type metadata accessor for WeatherDataAction();
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  uint64_t v24 = 0;
  memset(v23, 0, sizeof(v23));
  sub_1001AAF58((uint64_t)v9, (uint64_t)v23, a2);
  sub_10017DF4C((uint64_t)v23, (uint64_t *)&unk_100EA01F0);
  sub_1001BC5DC();
  *(void *)&v23[0] = 0;
  *((void *)&v23[0] + 1) = 0xE000000000000000;
  _StringGuts.grow(_:)(27);
  swift_bridgeObjectRelease();
  *(void *)&v23[0] = 0xD000000000000019;
  *((void *)&v23[0] + 1) = 0x8000000100CBB3E0;
  swift_getErrorValue();
  v20._countAndFlagsBits = Error.localizedDescription.getter();
  String.append(_:)(v20);
  swift_bridgeObjectRelease();
  sub_1006A7CD8(*(uint64_t *)&v23[0], *((unint64_t *)&v23[0] + 1));
  return swift_bridgeObjectRelease();
}

uint64_t sub_100A4CC90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v90 = a7;
  uint64_t v99 = a5;
  uint64_t v80 = type metadata accessor for HourTemperatureStatistics();
  uint64_t v101 = *(void *)(v80 - 8);
  __chkstk_darwin(v80);
  uint64_t v79 = (char *)&v76 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v78 = sub_10017DF08(&qword_100E717A0);
  uint64_t v77 = *(void *)(v78 - 8);
  __chkstk_darwin(v78);
  uint64_t v76 = (char *)&v76 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for Calendar.Component();
  uint64_t v92 = *(void *)(v11 - 8);
  uint64_t v93 = v11;
  __chkstk_darwin(v11);
  uint64_t v91 = (char *)&v76 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v96 = (char *)&v76 - v14;
  uint64_t v15 = sub_10017DF08(&qword_100E6D1D8);
  __chkstk_darwin(v15 - 8);
  uint64_t v89 = (char *)&v76 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v84 = type metadata accessor for Calendar();
  uint64_t v83 = *(void *)(v84 - 8);
  __chkstk_darwin(v84);
  uint64_t v95 = (char *)&v76 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for TimeZone();
  uint64_t v87 = *(void *)(v18 - 8);
  uint64_t v88 = v18;
  __chkstk_darwin(v18);
  uint64_t v86 = (char *)&v76 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  unint64_t v85 = (char *)&v76 - v21;
  uint64_t v82 = type metadata accessor for Date();
  uint64_t v81 = *(void *)(v82 - 8);
  __chkstk_darwin(v82);
  uint64_t v98 = (char *)&v76 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
  __chkstk_darwin(v23 - 8);
  uint64_t v25 = (char *)&v76 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_10017DF08(&qword_100E63770);
  __chkstk_darwin(v26 - 8);
  uint64_t v28 = (char *)&v76 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = sub_10017DF08(&qword_100E63850);
  __chkstk_darwin(v29 - 8);
  unint64_t v31 = (char *)&v76 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = sub_10017DF08(&qword_100E9BB70);
  __chkstk_darwin(v32 - 8);
  unint64_t v34 = (char *)&v76 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v100 = type metadata accessor for WeatherStatisticsModel();
  uint64_t v94 = *(void *)(v100 - 8);
  __chkstk_darwin(v100);
  uint64_t v97 = (char *)&v76 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t updated = type metadata accessor for WeatherDataUpdateRequestLog.Event(0);
  __chkstk_darwin(updated);
  uint64_t v38 = (char *)&v76 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = type metadata accessor for Location();
  uint64_t v40 = *(void *)(v39 - 8);
  uint64_t v41 = *(void (**)(char *, uint64_t, uint64_t))(v40 + 16);
  uint64_t v105 = a1;
  uint64_t v102 = v40 + 16;
  uint64_t v103 = v41;
  v41(v38, a1, v39);
  swift_storeEnumTagMultiPayload();
  uint64_t v104 = a2;
  sub_10015B128((uint64_t)v38);
  sub_1001BC5DC();
  type metadata accessor for SettingReader();
  static SettingReader.shared.getter();
  static Settings.Daemon.clearDailyStatisticsCacheOnNextLaunch.getter();
  SettingReader.read<A>(_:)();
  swift_release();
  swift_release();
  if (v110) {
    goto LABEL_5;
  }
  static SettingReader.shared.getter();
  static Settings.Daemon.clearDailySummaryCacheOnNextLaunch.getter();
  SettingReader.read<A>(_:)();
  swift_release();
  swift_release();
  if (v109) {
    goto LABEL_5;
  }
  static SettingReader.shared.getter();
  static Settings.Daemon.clearHourlyStatisticsCacheOnNextLaunch.getter();
  SettingReader.read<A>(_:)();
  swift_release();
  swift_release();
  if ((v108 & 1) != 0
    || (static SettingReader.shared.getter(),
        static Settings.Daemon.clearMonthlyStatisticsCacheOnNextLaunch.getter(),
        SettingReader.read<A>(_:)(),
        swift_release(),
        swift_release(),
        (v107 & 1) != 0))
  {
LABEL_5:
    uint64_t v42 = (unint64_t *)&v38[*(int *)(sub_10017DF08(&qword_100E8AC10) + 48)];
    v103(v38, v105, v39);
    unint64_t v43 = 0xD00000000000001ALL;
    uint64_t v44 = "Clear cache on next launch";
LABEL_6:
    *uint64_t v42 = v43;
    v42[1] = (unint64_t)(v44 - 32) | 0x8000000000000000;
    swift_storeEnumTagMultiPayload();
    sub_10015B128((uint64_t)v38);
    sub_1001BC5DC();
    return 1;
  }
  static SettingReader.shared.getter();
  static Settings.Daemon.disableStatisticsCaching.getter();
  SettingReader.read<A>(_:)();
  swift_release();
  swift_release();
  if (v106)
  {
    uint64_t v42 = (unint64_t *)&v38[*(int *)(sub_10017DF08(&qword_100E8AC10) + 48)];
    v103(v38, v105, v39);
    unint64_t v43 = 0xD00000000000001ALL;
    uint64_t v44 = "Statistics cahing disabled";
    goto LABEL_6;
  }
  uint64_t v46 = v105;
  uint64_t v47 = Location.id.getter();
  sub_1001BBE9C(v47, v48, v99);
  swift_bridgeObjectRelease();
  uint64_t v49 = type metadata accessor for LocationWeatherDataState(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v28, 1, v49) == 1)
  {
    sub_10017DF4C((uint64_t)v28, &qword_100E63770);
    uint64_t v50 = v100;
LABEL_15:
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v34, 1, 1, v50);
LABEL_16:
    sub_10017DF4C((uint64_t)v34, &qword_100E9BB70);
    uint64_t v42 = (unint64_t *)&v38[*(int *)(sub_10017DF08(&qword_100E8AC10) + 48)];
    v103(v38, v46, v39);
    unint64_t v43 = 0xD00000000000001CLL;
    uint64_t v44 = "No statistics in local cache";
    goto LABEL_6;
  }
  sub_1001177B0((uint64_t)v31);
  sub_1001BC5DC();
  uint64_t v51 = type metadata accessor for WeatherData(0);
  int v52 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v31, 1, v51);
  uint64_t v50 = v100;
  if (v52 == 1)
  {
    sub_10017DF4C((uint64_t)v31, &qword_100E63850);
    goto LABEL_15;
  }
  sub_1001B9A30((uint64_t)&v31[*(int *)(v51 + 32)], (uint64_t)v25, (void (*)(void))type metadata accessor for WeatherData.WeatherStatisticsState);
  sub_1001BC5DC();
  sub_10000D64C((uint64_t)v34);
  sub_1001BC5DC();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v34, 1, v50) == 1) {
    goto LABEL_16;
  }
  (*(void (**)(char *, char *, uint64_t))(v94 + 32))(v97, v34, v50);
  uint64_t v53 = v85;
  Location.timeZone.getter();
  Date.startOfDay(timeZone:)();
  uint64_t v55 = v87;
  uint64_t v54 = v88;
  uint64_t v56 = *(void (**)(char *, uint64_t))(v87 + 8);
  v56(v53, v88);
  uint64_t v57 = (uint64_t)v89;
  TimeZone.init(secondsFromGMT:)();
  uint64_t result = _s7Weather24LocationCompositionStateOwet_0(v57, 1, v54);
  if (result == 1)
  {
LABEL_32:
    __break(1u);
    return result;
  }
  uint64_t v58 = v86;
  (*(void (**)(char *, uint64_t, uint64_t))(v55 + 32))(v86, v57, v54);
  static Calendar.gregorianCalendar(with:)();
  v56(v58, v54);
  uint64_t v59 = v92;
  uint64_t v60 = v93;
  uint64_t v61 = *(void (**)(char *, void, uint64_t))(v92 + 104);
  v61(v96, enum case for Calendar.Component.hour(_:), v93);
  uint64_t v62 = v91;
  v61(v91, enum case for Calendar.Component.year(_:), v60);
  uint64_t v63 = v96;
  uint64_t v99 = Calendar.ordinality(of:in:for:)();
  LOBYTE(v61) = v64;
  uint64_t v65 = *(void (**)(char *, uint64_t))(v59 + 8);
  v65(v62, v60);
  uint64_t result = ((uint64_t (*)(char *, uint64_t))v65)(v63, v60);
  if ((v61 & 1) == 0)
  {
    uint64_t v96 = (char *)(v99 + 24);
    if (!__OFADD__(v99, 24))
    {
      uint64_t v66 = v76;
      WeatherStatisticsModel.hourlyTemperatureStatistics.getter();
      uint64_t v67 = v78;
      uint64_t v68 = HourlyWeatherStatistics.hours.getter();
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v77 + 8))(v66, v67);
      uint64_t v99 = v68;
      uint64_t v69 = *(void *)(v68 + 16);
      uint64_t v70 = v80;
      uint64_t v71 = v79;
      if (!v69)
      {
LABEL_26:
        swift_bridgeObjectRelease();
        uint64_t v74 = &v38[*(int *)(sub_10017DF08(&qword_100E8AC10) + 48)];
        v103(v38, v105, v39);
        *(void *)uint64_t v74 = 0xD00000000000001DLL;
        *((void *)v74 + 1) = 0x8000000100CBB460;
        swift_storeEnumTagMultiPayload();
        sub_10015B128((uint64_t)v38);
        sub_1001BC5DC();
        (*(void (**)(char *, uint64_t))(v83 + 8))(v95, v84);
        (*(void (**)(char *, uint64_t))(v81 + 8))(v98, v82);
        (*(void (**)(char *, uint64_t))(v94 + 8))(v97, v100);
        return 1;
      }
      uint64_t v72 = v99 + ((*(unsigned __int8 *)(v101 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v101 + 80));
      uint64_t v73 = (void (**)(char *, uint64_t))(v101 + 8);
      while (v69 <= *(void *)(v99 + 16))
      {
        --v69;
        (*(void (**)(char *, uint64_t, uint64_t))(v101 + 16))(v71, v72 + *(void *)(v101 + 72) * v69, v70);
        if ((char *)HourTemperatureStatistics.hour.getter() == v96)
        {
          swift_bridgeObjectRelease();
          uint64_t v75 = &v38[*(int *)(sub_10017DF08(&qword_100E8AC10) + 48)];
          v103(v38, v105, v39);
          *(void *)uint64_t v75 = 0xD00000000000001BLL;
          *((void *)v75 + 1) = 0x8000000100CBB480;
          swift_storeEnumTagMultiPayload();
          sub_10015B128((uint64_t)v38);
          sub_1001BC5DC();
          (*v73)(v71, v70);
          (*(void (**)(char *, uint64_t))(v83 + 8))(v95, v84);
          (*(void (**)(char *, uint64_t))(v81 + 8))(v98, v82);
          (*(void (**)(char *, uint64_t))(v94 + 8))(v97, v100);
          return 0;
        }
        uint64_t result = ((uint64_t (*)(char *, uint64_t))*v73)(v71, v70);
        if (!v69) {
          goto LABEL_26;
        }
      }
      __break(1u);
    }
    __break(1u);
    goto LABEL_32;
  }
  (*(void (**)(char *, uint64_t))(v83 + 8))(v95, v84);
  (*(void (**)(char *, uint64_t))(v81 + 8))(v98, v82);
  (*(void (**)(char *, uint64_t))(v94 + 8))(v97, v50);
  return 0;
}

uint64_t sub_100A4DB50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_storeEnumTagMultiPayload();
  sub_100A4DC0C(a2, (uint64_t)v7, a3);
  return sub_1001BC5DC();
}

uint64_t sub_100A4DC0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v27 = a2;
  uint64_t v28 = a3;
  uint64_t v30 = type metadata accessor for Location();
  uint64_t v6 = *(void *)(v30 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  __chkstk_darwin(v30);
  uint64_t v29 = &v24[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
  uint64_t v26 = *(void *)(v8 - 8);
  uint64_t v9 = *(void *)(v26 + 64);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = type metadata accessor for DispatchPredicate();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (uint64_t *)&v24[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1001AB3E0();
  *uint64_t v13 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v11 + 104))(v13, enum case for DispatchPredicate.onQueue(_:), v10);
  char v14 = _dispatchPreconditionTest(_:)();
  uint64_t result = (*(uint64_t (**)(uint64_t *, uint64_t))(v11 + 8))(v13, v10);
  if (v14)
  {
    (*(void (**)(uint64_t *__return_ptr, uint64_t))(v4 + 16))(&v31, result);
    int v25 = sub_100A4FAE8(a1, v31);
    swift_release();
    uint64_t v16 = &v24[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
    sub_1001B9A30(v27, (uint64_t)v16, (void (*)(void))type metadata accessor for WeatherData.WeatherStatisticsState);
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v6 + 16))(v29, a1, v30);
    unint64_t v17 = (*(unsigned __int8 *)(v26 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80);
    uint64_t v18 = v17 + v9;
    unint64_t v19 = (v17 + v9) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v20 = *(unsigned __int8 *)(v6 + 80);
    uint64_t v21 = v28;
    uint64_t v27 = a1;
    uint64_t v22 = (v20 + v19 + 16) & ~v20;
    uint64_t v23 = swift_allocObject();
    *(void *)(v23 + 16) = v21;
    sub_1001B9AF4((uint64_t)v16, v23 + v17, (void (*)(void))type metadata accessor for WeatherData.WeatherStatisticsState);
    LOBYTE(v16) = v25 & 1;
    *(unsigned char *)(v23 + v18) = v25 & 1;
    *(void *)(v19 + v23 + 8) = v4;
    (*(void (**)(uint64_t, unsigned char *, uint64_t))(v6 + 32))(v23 + v22, v29, v30);
    swift_retain();
    swift_retain();
    sub_1000CBF78(v27, (char)v16, sub_100A584A0);
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100A4DF78(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v26 = a8;
  uint64_t v28 = a7;
  uint64_t v29 = a2;
  uint64_t v30 = a5;
  uint64_t v31 = a3;
  uint64_t updated = type metadata accessor for WeatherDataUpdateRequestLog.Event(0);
  __chkstk_darwin(updated);
  uint64_t v12 = (uint64_t *)((char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v13 = *a1;
  uint64_t v14 = a1[1];
  static os_signpost_type_t.end.getter();
  sub_10017DF08(&qword_100E64020);
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_100C251B0;
  uint64_t v27 = a4;
  uint64_t v16 = Location.name.getter();
  uint64_t v18 = v17;
  *(void *)(v15 + 56) = &type metadata for String;
  *(void *)(v15 + 64) = sub_10012B7C0();
  *(void *)(v15 + 32) = v16;
  *(void *)(v15 + 40) = v18;
  uint64_t v19 = v30;
  os_signpost(_:dso:log:name:signpostID:_:_:)();
  swift_bridgeObjectRelease();
  *uint64_t v12 = v13;
  v12[1] = v14;
  swift_storeEnumTagMultiPayload();
  sub_1000D58E0(v13, v14);
  sub_10015B128((uint64_t)v12);
  sub_1001BC5DC();
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    char v21 = v26 & 1;
    if (v14 == 1)
    {
      uint64_t v22 = 0;
      uint64_t v23 = 0;
    }
    else
    {
      uint64_t v22 = CountryCode.value.getter();
      uint64_t v23 = v24;
    }
    sub_100A4E1A0(v27, v28, v22, v23, v21, v19);
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_100A4E1A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6)
{
  uint64_t v111 = a6;
  uint64_t v86 = a4;
  uint64_t v85 = a3;
  uint64_t v108 = a1;
  uint64_t v87 = *(void (**)(char *, uint64_t))v6;
  LODWORD(v96) = a5 & 1;
  uint64_t v100 = type metadata accessor for Location();
  uint64_t v110 = *(void *)(v100 - 8);
  uint64_t v101 = *(void *)(v110 + 64);
  __chkstk_darwin(v100);
  uint64_t v99 = (char *)&v73 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t updated = type metadata accessor for WeatherDataUpdateRequestLog.Event(0);
  __chkstk_darwin(updated);
  uint64_t v92 = (char *)&v73 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v98 = type metadata accessor for OSSignpostID();
  uint64_t v95 = *(void *)(v98 - 8);
  uint64_t v97 = *(void *)(v95 + 64);
  __chkstk_darwin(v98);
  uint64_t v94 = (char *)&v73 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  char v106 = (char *)&v73 - v11;
  uint64_t v104 = type metadata accessor for TimeZone();
  uint64_t v112 = *(void *)(v104 - 8);
  __chkstk_darwin(v104);
  uint64_t v105 = (char *)&v73 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for Calendar();
  uint64_t v102 = *(void *)(v13 - 8);
  uint64_t v103 = v13;
  __chkstk_darwin(v13);
  char v109 = (char *)&v73 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v79 = type metadata accessor for WeatherServiceCaching.Options();
  uint64_t v80 = *(void *)(v79 - 8);
  __chkstk_darwin(v79);
  uint64_t v78 = (char *)&v73 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v77 = type metadata accessor for WeatherDataServiceConfiguration();
  uint64_t v76 = *(void *)(v77 - 8);
  __chkstk_darwin(v77);
  uint64_t v17 = (char *)&v73 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_10017DF08(&qword_100EABE00);
  __chkstk_darwin(v18 - 8);
  uint64_t v74 = (uint64_t)&v73 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_10017DF08(&qword_100EABE08);
  __chkstk_darwin(v20 - 8);
  uint64_t v22 = (char *)&v73 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_10017DF08(&qword_100E6D1D8);
  __chkstk_darwin(v23 - 8);
  uint64_t v25 = (char *)&v73 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t Options = type metadata accessor for WeatherServiceFetchOptions();
  uint64_t v90 = *(void *)(Options - 8);
  __chkstk_darwin(Options);
  uint64_t v107 = (uint64_t)&v73 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = type metadata accessor for WeatherServiceLocationOptions();
  uint64_t v84 = *(void *)(v27 - 8);
  uint64_t v28 = v84;
  __chkstk_darwin(v27);
  uint64_t v30 = (char *)&v73 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v89 = type metadata accessor for AppConfiguration();
  uint64_t v88 = *(void *)(v89 - 8);
  __chkstk_darwin(v89);
  uint64_t v32 = (char *)&v73 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v75 = v6;
  sub_1001B1E64((void *)(v6 + 120), *(void *)(v6 + 144));
  dispatch thunk of AppConfigurationManagerType.appConfiguration.getter();
  AppConfiguration.locationDecimalPrecision.getter();
  uint64_t v33 = v30;
  uint64_t v83 = v30;
  WeatherServiceLocationOptions.init(decimalPrecision:limitsPrecision:)();
  Location.timeZone.getter();
  uint64_t v34 = v104;
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v25, 0, 1, v104);
  uint64_t v35 = *(void (**)(char *, char *, uint64_t))(v28 + 16);
  uint64_t v73 = v22;
  uint64_t v82 = v27;
  v35(v22, v33, v27);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v22, 0, 1, v27);
  uint64_t v81 = v32;
  uint64_t v36 = AppConfiguration.treatmentIDs.getter();
  uint64_t v37 = type metadata accessor for WeatherNetworkActivity();
  uint64_t v38 = v74;
  _s7Weather24LocationCompositionStateOwst_0(v74, 1, 1, v37);
  AppConfiguration.weatherDataService.getter();
  char v39 = WeatherDataServiceConfiguration.needsTwilightData.getter();
  (*(void (**)(char *, uint64_t))(v76 + 8))(v17, v77);
  uint64_t v113 = _swiftEmptyArrayStorage;
  sub_100128EB4((unint64_t *)&qword_100EABE10, (void (*)(uint64_t))&type metadata accessor for WeatherServiceCaching.Options);
  sub_10017DF08(&qword_100EABE18);
  sub_1001246C8((unint64_t *)&qword_100EABE20, &qword_100EABE18);
  uint64_t v40 = (uint64_t)v78;
  uint64_t v41 = v79;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  uint64_t v42 = (uint64_t)v73;
  sub_10012475C(v85, v86, (uint64_t)v25, (uint64_t)v73, v40, v36, v38, 0, v107, v39 & 1);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v80 + 8))(v40, v41);
  sub_10017DF4C(v38, &qword_100EABE00);
  sub_10017DF4C(v42, &qword_100EABE08);
  sub_10017DF4C((uint64_t)v25, &qword_100E6D1D8);
  unint64_t v43 = v105;
  uint64_t v44 = v108;
  Location.timeZone.getter();
  static Calendar.currentCalendar(with:)();
  uint64_t v45 = *(void (**)(char *, uint64_t))(v112 + 8);
  v112 += 8;
  uint64_t v87 = v45;
  v45(v43, v34);
  id v46 = *(id *)(v75 + 448);
  uint64_t v47 = v106;
  OSSignpostID.init(log:)();
  static os_signpost_type_t.begin.getter();
  sub_10017DF08(&qword_100E64020);
  uint64_t v48 = swift_allocObject();
  *(_OWORD *)(v48 + 16) = xmmword_100C251B0;
  uint64_t v49 = v44;
  uint64_t v50 = Location.name.getter();
  uint64_t v52 = v51;
  *(void *)(v48 + 56) = &type metadata for String;
  *(void *)(v48 + 64) = sub_10012B7C0();
  *(void *)(v48 + 32) = v50;
  *(void *)(v48 + 40) = v52;
  uint64_t v53 = v47;
  os_signpost(_:dso:log:name:signpostID:_:_:)();
  swift_bridgeObjectRelease();
  uint64_t v54 = (uint64_t)v92;
  swift_storeEnumTagMultiPayload();
  sub_10015B128(v54);
  sub_1001BC5DC();
  uint64_t v96 = sub_10010B03C();
  Location.coordinate.getter();
  uint64_t updated = CLLocationCoordinate2D.clLocation.getter();
  uint64_t v55 = v49;
  Location.timeZone.getter();
  uint64_t v56 = swift_allocObject();
  swift_weakInit();
  uint64_t v57 = v110;
  uint64_t v58 = v99;
  uint64_t v59 = v55;
  uint64_t v60 = v100;
  (*(void (**)(char *, uint64_t, uint64_t))(v110 + 16))(v99, v59, v100);
  uint64_t v61 = v94;
  uint64_t v62 = v95;
  uint64_t v63 = v98;
  (*(void (**)(char *, char *, uint64_t))(v95 + 16))(v94, v53, v98);
  unint64_t v64 = (*(unsigned __int8 *)(v57 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v57 + 80);
  unint64_t v65 = (v101 + v64 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v66 = (*(unsigned __int8 *)(v62 + 80) + v65 + 8) & ~(unint64_t)*(unsigned __int8 *)(v62 + 80);
  uint64_t v67 = swift_allocObject();
  *(void *)(v67 + 16) = v56;
  (*(void (**)(unint64_t, char *, uint64_t))(v110 + 32))(v67 + v64, v58, v60);
  *(void *)(v67 + v65) = v111;
  (*(void (**)(unint64_t, char *, uint64_t))(v62 + 32))(v67 + v66, v61, v63);
  swift_retain();
  swift_retain();
  uint64_t v68 = (void *)updated;
  uint64_t v69 = v109;
  uint64_t v70 = v107;
  uint64_t v71 = v105;
  WeatherService.fetchStatistics(for:calendar:options:timeZone:completion:)();
  swift_release();

  swift_release();
  v87(v71, v104);
  (*(void (**)(char *, uint64_t))(v62 + 8))(v106, v63);
  (*(void (**)(char *, uint64_t))(v102 + 8))(v69, v103);
  (*(void (**)(uint64_t, uint64_t))(v90 + 8))(v70, Options);
  (*(void (**)(char *, uint64_t))(v84 + 8))(v83, v82);
  (*(void (**)(char *, uint64_t))(v88 + 8))(v81, v89);
  return swift_release();
}

uint64_t sub_100A4EE40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t updated = type metadata accessor for WeatherDataUpdateRequestLog.Event(0);
  __chkstk_darwin(updated);
  uint64_t v13 = (uint64_t *)((char *)&v15 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  *uint64_t v13 = a1;
  swift_storeEnumTagMultiPayload();
  swift_errorRetain();
  sub_10015B128((uint64_t)v13);
  sub_1001BC5DC();
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_100A4E1A0(a4, a5, 0, 0, a6 & 1, a2);
    return swift_release();
  }
  return result;
}

void sub_100A4EF6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v70 = a5;
  uint64_t v76 = a4;
  uint64_t v73 = a3;
  uint64_t updated = type metadata accessor for WeatherDataUpdateRequestLog.Event(0);
  __chkstk_darwin(updated);
  uint64_t v8 = (void *)((char *)v64 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v71 = type metadata accessor for WeatherStatisticsModel();
  uint64_t v69 = *(void *)(v71 - 8);
  uint64_t v9 = *(void *)(v69 + 64);
  __chkstk_darwin(v71);
  uint64_t v68 = (char *)v64 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)v64 - v11;
  uint64_t v13 = sub_10017DF08(&qword_100EABEE8);
  __chkstk_darwin(v13);
  uint64_t v15 = (void *)((char *)v64 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v16 = type metadata accessor for Location();
  uint64_t v74 = *(void *)(v16 - 8);
  uint64_t v75 = v16;
  uint64_t v17 = *(void *)(v74 + 64);
  __chkstk_darwin(v16);
  uint64_t v72 = (char *)v64 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v20 = (char *)v64 - v19;
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v22 = Strong;
    sub_1001B7204(a1, (uint64_t)v15, &qword_100EABEE8);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v67 = v22;
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v24 = *v15;
      *uint64_t v8 = *v15;
      uint64_t v71 = v24;
      swift_storeEnumTagMultiPayload();
      swift_errorRetain();
      sub_10015B128((uint64_t)v8);
      sub_1001BC5DC();
      static os_signpost_type_t.end.getter();
      uint64_t v25 = *(void **)(v22 + 448);
      sub_10017DF08(&qword_100E64020);
      uint64_t v26 = swift_allocObject();
      *(_OWORD *)(v26 + 16) = xmmword_100C251B0;
      id v27 = v25;
      uint64_t v28 = v73;
      uint64_t v29 = Location.name.getter();
      uint64_t v31 = v30;
      *(void *)(v26 + 56) = &type metadata for String;
      *(void *)(v26 + 64) = sub_10012B7C0();
      *(void *)(v26 + 32) = v29;
      *(void *)(v26 + 40) = v31;
      os_signpost(_:dso:log:name:signpostID:_:_:)();

      swift_bridgeObjectRelease();
      uint64_t v32 = swift_allocObject();
      swift_beginAccess();
      swift_weakLoadStrong();
      swift_weakInit();
      swift_release();
      uint64_t v34 = v74;
      uint64_t v33 = v75;
      uint64_t v35 = v72;
      (*(void (**)(char *, uint64_t, uint64_t))(v74 + 16))(v72, v28, v75);
      unint64_t v36 = (*(unsigned __int8 *)(v34 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80);
      unint64_t v37 = (v17 + v36 + 7) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v38 = swift_allocObject();
      *(void *)(v38 + 16) = v32;
      (*(void (**)(unint64_t, char *, uint64_t))(v34 + 32))(v38 + v36, v35, v33);
      *(void *)(v38 + v37) = v71;
      *(void *)(v38 + ((v37 + 15) & 0xFFFFFFFFFFFFFFF8)) = v76;
      swift_retain();
      swift_errorRetain();
      swift_retain();
      asyncMain(block:)();
      swift_errorRelease();
      swift_release();
      swift_release();
    }
    else
    {
      uint64_t v47 = *(void (**)(unint64_t, char *, uint64_t))(v69 + 32);
      v64[1] = v69 + 32;
      unint64_t v65 = v47;
      unint64_t v66 = v12;
      v47((unint64_t)v12, (char *)v15, v71);
      swift_storeEnumTagMultiPayload();
      sub_10015B128((uint64_t)v8);
      sub_1001BC5DC();
      static os_signpost_type_t.end.getter();
      uint64_t v48 = *(void **)(v22 + 448);
      sub_10017DF08(&qword_100E64020);
      uint64_t v49 = swift_allocObject();
      *(_OWORD *)(v49 + 16) = xmmword_100C251B0;
      id v50 = v48;
      uint64_t v51 = v73;
      uint64_t v52 = Location.name.getter();
      uint64_t v54 = v53;
      *(void *)(v49 + 56) = &type metadata for String;
      *(void *)(v49 + 64) = sub_10012B7C0();
      *(void *)(v49 + 32) = v52;
      *(void *)(v49 + 40) = v54;
      os_signpost(_:dso:log:name:signpostID:_:_:)();

      swift_bridgeObjectRelease();
      uint64_t v70 = swift_allocObject();
      swift_beginAccess();
      swift_weakLoadStrong();
      swift_weakInit();
      swift_release();
      uint64_t v56 = v74;
      uint64_t v55 = v75;
      (*(void (**)(char *, uint64_t, uint64_t))(v74 + 16))(v72, v51, v75);
      uint64_t v58 = v68;
      uint64_t v57 = v69;
      uint64_t v59 = v17;
      uint64_t v60 = v71;
      (*(void (**)(char *, char *, uint64_t))(v69 + 16))(v68, v66, v71);
      unint64_t v61 = (*(unsigned __int8 *)(v56 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v56 + 80);
      unint64_t v62 = (v59 + *(unsigned __int8 *)(v57 + 80) + v61) & ~(unint64_t)*(unsigned __int8 *)(v57 + 80);
      uint64_t v63 = swift_allocObject();
      *(void *)(v63 + 16) = v70;
      (*(void (**)(unint64_t, char *, uint64_t))(v56 + 32))(v63 + v61, v72, v55);
      v65(v63 + v62, v58, v60);
      *(void *)(v63 + ((v9 + v62 + 7) & 0xFFFFFFFFFFFFFFF8)) = v76;
      swift_retain();
      swift_retain();
      asyncMain(block:)();
      swift_release();
      swift_release();
      (*(void (**)(char *, uint64_t))(v57 + 8))(v66, v60);
    }
    swift_release();
  }
  else
  {
    if (qword_100E62818 != -1) {
      swift_once();
    }
    uint64_t v39 = type metadata accessor for Logger();
    sub_1002102B0(v39, (uint64_t)qword_100F51F50);
    uint64_t v40 = v74;
    uint64_t v41 = v75;
    (*(void (**)(char *, uint64_t, uint64_t))(v74 + 16))(v20, v73, v75);
    uint64_t v42 = Logger.logObject.getter();
    os_log_type_t v43 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v42, v43))
    {
      uint64_t v44 = swift_slowAlloc();
      v77[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v44 = 141558275;
      uint64_t v78 = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v44 + 12) = 2081;
      uint64_t v45 = Location.id.getter();
      uint64_t v78 = sub_10016414C(v45, v46, v77);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v40 + 8))(v20, v41);
      _os_log_impl((void *)&_mh_execute_header, v42, v43, "Lost instance of self while fetching WeatherStatistics. locationID=%{private,mask.hash}s", (uint8_t *)v44, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v40 + 8))(v20, v41);
    }
  }
}

uint64_t sub_100A4F88C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v11 = type metadata accessor for WeatherStatisticsModel();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16))(v9, a3, v11);
    swift_storeEnumTagMultiPayload();
    sub_100A4DC0C(a2, (uint64_t)v9, a4);
    swift_release();
    return sub_1001BC5DC();
  }
  return result;
}

uint64_t sub_100A4F9C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
  __chkstk_darwin(v6);
  uint64_t v8 = (uint64_t *)((char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    swift_getErrorValue();
    *uint64_t v8 = Error.localizedDescription.getter();
    v8[1] = v10;
    swift_storeEnumTagMultiPayload();
    sub_100A4DC0C(a2, (uint64_t)v8, a4);
    swift_release();
    return sub_1001BC5DC();
  }
  return result;
}

uint64_t sub_100A4FAE8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10017DF08(&qword_100E6DC08);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v19 - v8;
  if (sub_1000CB6AC(a1, a2))
  {
    char v10 = 1;
  }
  else
  {
    sub_100A50114(a2, (uint64_t)v9);
    sub_1001B7204((uint64_t)v9, (uint64_t)v6, &qword_100E6DC08);
    uint64_t v11 = type metadata accessor for Location.Identifier();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v6, 1, v11) == 1)
    {
      sub_10017DF4C((uint64_t)v6, &qword_100E6DC08);
      uint64_t v12 = 0;
      uint64_t v13 = 0;
    }
    else
    {
      uint64_t v12 = Location.Identifier.id.getter();
      uint64_t v13 = v14;
      (*(void (**)(char *, uint64_t))(*(void *)(v11 - 8) + 8))(v6, v11);
    }
    uint64_t v15 = Location.id.getter();
    if (v13)
    {
      if (v12 == v15 && v13 == v16) {
        char v10 = 1;
      }
      else {
        char v10 = _stringCompareWithSmolCheck(_:_:expecting:)();
      }
      swift_bridgeObjectRelease();
      sub_10017DF4C((uint64_t)v9, &qword_100E6DC08);
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_10017DF4C((uint64_t)v9, &qword_100E6DC08);
      swift_bridgeObjectRelease();
      char v10 = 0;
    }
  }
  return v10 & 1;
}

uint64_t sub_100A4FCCC(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  uint64_t v37 = a5;
  uint64_t v8 = type metadata accessor for WeatherStatisticsModel();
  uint64_t v35 = *(void *)(v8 - 8);
  uint64_t v36 = v8;
  __chkstk_darwin(v8);
  uint64_t v34 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = type metadata accessor for MainAction();
  __chkstk_darwin(v38);
  uint64_t v11 = (uint64_t *)((char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
  __chkstk_darwin(v12);
  uint64_t v14 = (uint64_t *)((char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t updated = type metadata accessor for WeatherDataUpdateRequestLog.Event(0);
  __chkstk_darwin(updated);
  uint64_t v17 = (char *)&v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100128EB4(&qword_100EAA108, (void (*)(uint64_t))type metadata accessor for WeatherData.WeatherStatisticsState);
  *(void *)uint64_t v17 = ShortDescribable.description.getter();
  *((void *)v17 + 1) = v18;
  v17[16] = a3;
  swift_storeEnumTagMultiPayload();
  sub_10015B128((uint64_t)v17);
  sub_1001BC5DC();
  sub_1001B9A30(a2, (uint64_t)v14, (void (*)(void))type metadata accessor for WeatherData.WeatherStatisticsState);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v21 = v34;
      uint64_t v20 = v35;
      uint64_t v22 = v14;
      uint64_t v23 = v36;
      (*(void (**)(char *, void *, uint64_t))(v35 + 32))(v34, v22, v36);
      uint64_t v24 = *(uint64_t (**)(uint64_t))(a4 + 48);
      uint64_t v25 = (char *)v11 + *(int *)(sub_10017DF08(&qword_100E6BBA8) + 48);
      swift_retain();
      *uint64_t v11 = Location.id.getter();
      v11[1] = v26;
      (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v25, v21, v23);
      type metadata accessor for WeatherDataAction();
      swift_storeEnumTagMultiPayload();
      swift_storeEnumTagMultiPayload();
      uint64_t v41 = 0;
      long long v39 = 0u;
      long long v40 = 0u;
      sub_1001AAF58((uint64_t)v11, (uint64_t)&v39, v24);
      sub_10017DF4C((uint64_t)&v39, (uint64_t *)&unk_100EA01F0);
      sub_1001BC5DC();
      swift_release();
      return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v21, v23);
    }
    uint64_t v30 = *(uint64_t (**)(uint64_t))(a4 + 48);
    swift_retain();
    *uint64_t v11 = Location.id.getter();
    v11[1] = v32;
    type metadata accessor for WeatherDataAction();
  }
  else
  {
    uint64_t v28 = *v14;
    uint64_t v29 = v14[1];
    uint64_t v30 = *(uint64_t (**)(uint64_t))(a4 + 48);
    swift_retain();
    *uint64_t v11 = Location.id.getter();
    v11[1] = v31;
    void v11[2] = v28;
    v11[3] = v29;
    type metadata accessor for WeatherDataAction();
  }
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  uint64_t v41 = 0;
  long long v39 = 0u;
  long long v40 = 0u;
  sub_1001AAF58((uint64_t)v11, (uint64_t)&v39, v30);
  sub_10017DF4C((uint64_t)&v39, (uint64_t *)&unk_100EA01F0);
  sub_1001BC5DC();
  return swift_release();
}

uint64_t sub_100A50114@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for AveragesDetailViewState();
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for ModalViewState(0);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for ModalViewState.LocationDetailModal(0);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v19 - v14;
  sub_1001B9A30(a1 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_modalView, (uint64_t)v9, (void (*)(void))type metadata accessor for ModalViewState);
  if (swift_getEnumCaseMultiPayload() != 5) {
    goto LABEL_6;
  }
  sub_1001B9AF4((uint64_t)v9, (uint64_t)v15, (void (*)(void))type metadata accessor for ModalViewState.LocationDetailModal);
  sub_1001B9A30((uint64_t)v15, (uint64_t)v12, (void (*)(void))type metadata accessor for ModalViewState.LocationDetailModal);
  if (swift_getEnumCaseMultiPayload() != 5)
  {
    sub_1001BC5DC();
LABEL_6:
    sub_1001BC5DC();
    uint64_t v16 = 1;
    goto LABEL_7;
  }
  sub_1001B9AF4((uint64_t)v12, (uint64_t)v6, (void (*)(void))type metadata accessor for AveragesDetailViewState);
  Location.identifier.getter();
  sub_1001BC5DC();
  sub_1001BC5DC();
  uint64_t v16 = 0;
LABEL_7:
  uint64_t v17 = type metadata accessor for Location.Identifier();
  return _s7Weather24LocationCompositionStateOwst_0(a2, v16, 1, v17);
}

void sub_100A503B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10)
{
  uint64_t v20 = a8;
  uint64_t updated = type metadata accessor for WeatherDataUpdateRequestLog.Event(0);
  __chkstk_darwin(updated);
  uint64_t v18 = (uint64_t *)((char *)&v19 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  *uint64_t v18 = a1;
  swift_storeEnumTagMultiPayload();
  swift_errorRetain();
  sub_10015B128((uint64_t)v18);
  sub_1001BC5DC();
  sub_100127E18(a4, a5, a6, a7, v20, a9, a10 & 1, 0, 0, a2, v19, v20, v21, v22, v23, v24, v25, v26, v27,
    v28,
    v29,
    v30);
}

void sub_100A504DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v67 = a8;
  uint64_t v65 = a7;
  uint64_t v66 = a6;
  uint64_t v64 = a5;
  uint64_t v77 = a4;
  uint64_t v78 = a3;
  uint64_t v74 = a1;
  uint64_t v72 = type metadata accessor for OSSignpostID();
  uint64_t v63 = *(void *)(v72 - 8);
  uint64_t v11 = *(void *)(v63 + 64);
  __chkstk_darwin(v72);
  uint64_t v71 = (char *)&v55 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v76 = type metadata accessor for Location();
  uint64_t v12 = *(void *)(v76 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  __chkstk_darwin(v76);
  uint64_t v75 = (char *)&v55 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for AvailableDataSets();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(void *)(v15 + 64);
  uint64_t v17 = __chkstk_darwin(v14);
  uint64_t v70 = (char *)&v55 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v69 = (char *)&v55 - v18;
  uint64_t v19 = sub_10017DF08(&qword_100EABEF8);
  __chkstk_darwin(v19);
  uint64_t v21 = (uint64_t *)((char *)&v55 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v62 = a11;
    uint64_t v61 = a10;
    uint64_t v68 = a9;
    sub_1001B7204(v74, (uint64_t)v21, &qword_100EABEF8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v22 = *v21;
      uint64_t v23 = v75;
      uint64_t v24 = v76;
      (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v75, v77, v76);
      unint64_t v25 = (*(unsigned __int8 *)(v12 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
      uint64_t v26 = (char *)swift_allocObject();
      uint64_t v27 = v61;
      *((void *)v26 + 2) = v78;
      *((void *)v26 + 3) = v27;
      *((void *)v26 + 4) = v62;
      (*(void (**)(char *, char *, uint64_t))(v12 + 32))(&v26[v25], v23, v24);
      *(void *)&v26[(v13 + v25 + 7) & 0xFFFFFFFFFFFFFFF8] = v22;
      swift_retain();
      swift_retain();
      swift_errorRetain();
      asyncMain(block:)();
      swift_release();
      static os_signpost_type_t.end.getter();
      uint64_t v28 = *(void **)(Strong + 448);
      sub_10017DF08(&qword_100E64020);
      uint64_t v29 = swift_allocObject();
      *(_OWORD *)(v29 + 16) = xmmword_100C251B0;
      id v30 = v28;
      uint64_t v31 = Location.name.getter();
      uint64_t v33 = v32;
      *(void *)(v29 + 56) = &type metadata for String;
      *(void *)(v29 + 64) = sub_10012B7C0();
      *(void *)(v29 + 32) = v31;
      *(void *)(v29 + 40) = v33;
      os_signpost(_:dso:log:name:signpostID:_:_:)();

      swift_bridgeObjectRelease();
      uint64_t v79 = 0;
      unint64_t v80 = 0xE000000000000000;
      _StringGuts.grow(_:)(44);
      swift_bridgeObjectRelease();
      uint64_t v79 = 0xD00000000000002ALL;
      unint64_t v80 = 0x8000000100CBB500;
      swift_getErrorValue();
      v34._countAndFlagsBits = Error.localizedDescription.getter();
      String.append(_:)(v34);
      swift_bridgeObjectRelease();
      sub_1006A7CD8(v79, v80);
      swift_bridgeObjectRelease();
      swift_release();
      swift_errorRelease();
    }
    else
    {
      uint64_t v59 = *(void (**)(char *, uint64_t *, uint64_t))(v15 + 32);
      uint64_t v74 = v15 + 32;
      uint64_t v35 = v69;
      uint64_t v36 = v14;
      uint64_t v58 = v14;
      v59(v69, v21, v14);
      (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v75, v77, v76);
      uint64_t v37 = v63;
      (*(void (**)(char *, uint64_t, uint64_t))(v63 + 16))(v71, v68, v72);
      uint64_t v60 = v15;
      (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v70, v35, v36);
      unint64_t v38 = (*(unsigned __int8 *)(v12 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
      unint64_t v39 = (v13 + v38 + 7) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v57 = (v39 + 39) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v40 = (v57 + 15) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v41 = (*(unsigned __int8 *)(v37 + 80) + v40 + 8) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80);
      unint64_t v56 = (v11 + v41 + 7) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v42 = (*(unsigned __int8 *)(v15 + 80) + v56 + 16) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
      uint64_t v43 = swift_allocObject();
      (*(void (**)(unint64_t, char *, uint64_t))(v12 + 32))(v43 + v38, v75, v76);
      uint64_t v44 = (void *)(v43 + v39);
      uint64_t v45 = v66;
      *uint64_t v44 = v64;
      v44[1] = v45;
      uint64_t v46 = v67;
      v44[2] = v65;
      v44[3] = v46;
      *(void *)(v43 + v57) = v78;
      uint64_t v47 = v72;
      *(void *)(v43 + v40) = Strong;
      (*(void (**)(unint64_t, char *, uint64_t))(v37 + 32))(v43 + v41, v71, v47);
      uint64_t v48 = (void *)(v43 + v56);
      uint64_t v49 = v62;
      *uint64_t v48 = v61;
      v48[1] = v49;
      uint64_t v50 = v58;
      v59((char *)(v43 + v42), (uint64_t *)v70, v58);
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      asyncMain(block:)();
      swift_release();
      static os_signpost_type_t.end.getter();
      sub_10017DF08(&qword_100E64020);
      uint64_t v51 = swift_allocObject();
      *(_OWORD *)(v51 + 16) = xmmword_100C251B0;
      uint64_t v52 = Location.name.getter();
      uint64_t v54 = v53;
      *(void *)(v51 + 56) = &type metadata for String;
      *(void *)(v51 + 64) = sub_10012B7C0();
      *(void *)(v51 + 32) = v52;
      *(void *)(v51 + 40) = v54;
      os_signpost(_:dso:log:name:signpostID:_:_:)();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v60 + 8))(v69, v50);
      swift_release();
    }
  }
  else
  {
    sub_1006A7CD8(0xD000000000000022, 0x8000000100CBB2F0);
  }
}

void sub_100A50CF8(uint64_t a1, void (*a2)(_OWORD *__return_ptr), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t (*a9)(uint64_t), uint64_t a10, uint64_t a11)
{
  void (*v48)(_OWORD *__return_ptr);
  uint64_t v49;
  _OWORD v50[2];
  uint64_t v51;

  v42[3] = a7;
  v42[4] = a8;
  uint64_t v47 = a3;
  uint64_t v48 = a2;
  uint64_t v49 = type metadata accessor for MainAction();
  __chkstk_darwin(v49);
  uint64_t v13 = (void *)((char *)v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t updated = type metadata accessor for WeatherDataUpdateRequestLog.Event(0);
  __chkstk_darwin(updated);
  uint64_t v16 = (char *)v42 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for Location();
  uint64_t v44 = *(void *)(v17 - 8);
  uint64_t v45 = v17;
  __chkstk_darwin(v17);
  uint64_t v43 = (char *)v42 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_10017DF08((uint64_t *)&unk_100EADD50);
  __chkstk_darwin(v19 - 8);
  uint64_t v21 = (char *)v42 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = type metadata accessor for LocationsState();
  __chkstk_darwin(v22 - 8);
  uint64_t v24 = (char *)v42 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = type metadata accessor for CurrentLocation();
  uint64_t v26 = __chkstk_darwin(v25);
  uint64_t v28 = (char *)v42 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  uint64_t v46 = (uint64_t)v42 - v29;
  if ((Location.kind.getter() & 1) == 0) {
    goto LABEL_9;
  }
  v42[1] = updated;
  v42[2] = a6;
  v48(v50);
  sub_1001B9A30(*(void *)&v50[0] + OBJC_IVAR____TtCV7Weather9MainState8_Storage_locations, (uint64_t)v24, (void (*)(void))type metadata accessor for LocationsState);
  swift_release();
  sub_1001B7204((uint64_t)v24, (uint64_t)v21, (uint64_t *)&unk_100EADD50);
  sub_1001BC5DC();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v21, 1, v25) == 1)
  {
    sub_10017DF4C((uint64_t)v21, (uint64_t *)&unk_100EADD50);
LABEL_9:
    swift_storeEnumTagMultiPayload();
    sub_10015B128((uint64_t)v16);
    sub_1001BC5DC();
    Swift::String v34 = (char *)v13 + *(int *)(sub_10017DF08(&qword_100E6BBB8) + 48);
    *uint64_t v13 = Location.id.getter();
    v13[1] = v35;
    uint64_t v36 = type metadata accessor for AvailableDataSets();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v36 - 8) + 16))(v34, a11, v36);
    type metadata accessor for WeatherDataAction();
    swift_storeEnumTagMultiPayload();
    swift_storeEnumTagMultiPayload();
    uint64_t v51 = 0;
    memset(v50, 0, sizeof(v50));
    sub_1001AAF58((uint64_t)v13, (uint64_t)v50, a9);
    sub_10017DF4C((uint64_t)v50, (uint64_t *)&unk_100EA01F0);
    sub_1001BC5DC();
    sub_1000CA914();
    return;
  }
  uint64_t v30 = v46;
  sub_1001B9AF4((uint64_t)v21, v46, (void (*)(void))&type metadata accessor for CurrentLocation);
  sub_1001B9A30(v30, (uint64_t)v28, (void (*)(void))&type metadata accessor for CurrentLocation);
  if (swift_getEnumCaseMultiPayload())
  {
    sub_1001BC5DC();
LABEL_8:
    sub_1001BC5DC();
    goto LABEL_9;
  }
  uint64_t v32 = v43;
  uint64_t v31 = v44;
  uint64_t v33 = v45;
  (*(void (**)(char *, char *, uint64_t))(v44 + 32))(v43, v28, v45);
  Location.coordinate.getter();
  Location.coordinate.getter();
  if (static CLLocationCoordinate2D.== infix(_:_:)())
  {
    (*(void (**)(char *, uint64_t))(v31 + 8))(v32, v33);
    goto LABEL_8;
  }
  (*(void (**)(char *, char *, uint64_t))(v31 + 16))(v16, v32, v33);
  swift_storeEnumTagMultiPayload();
  sub_10015B128((uint64_t)v16);
  sub_1001BC5DC();
  static os_signpost_type_t.end.getter();
  sub_10017DF08(&qword_100E64020);
  uint64_t v37 = swift_allocObject();
  *(_OWORD *)(v37 + 16) = xmmword_100C251B0;
  uint64_t v38 = Location.name.getter();
  unint64_t v39 = v32;
  uint64_t v41 = v40;
  *(void *)(v37 + 56) = &type metadata for String;
  *(void *)(v37 + 64) = sub_10012B7C0();
  *(void *)(v37 + 32) = v38;
  *(void *)(v37 + 40) = v41;
  os_signpost(_:dso:log:name:signpostID:_:_:)();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v31 + 8))(v39, v33);
  sub_1001BC5DC();
}

uint64_t sub_100A51390(uint64_t a1, uint64_t (*a2)(uint64_t), uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7 = type metadata accessor for MainAction();
  __chkstk_darwin(v7);
  uint64_t v9 = (uint64_t *)((char *)v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t updated = type metadata accessor for WeatherDataUpdateRequestLog.Event(0);
  __chkstk_darwin(updated);
  uint64_t v12 = (char *)v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_storeEnumTagMultiPayload();
  sub_10015B128((uint64_t)v12);
  sub_1001BC5DC();
  uint64_t v13 = Location.id.getter();
  uint64_t v15 = v14;
  *(void *)&v19[0] = a5;
  swift_errorRetain();
  sub_10017DF08(&qword_100E77F30);
  uint64_t v16 = String.init<A>(describing:)();
  *uint64_t v9 = v13;
  v9[1] = v15;
  v9[2] = v16;
  v9[3] = v17;
  type metadata accessor for WeatherDataAction();
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  uint64_t v20 = 0;
  memset(v19, 0, sizeof(v19));
  sub_1001AAF58((uint64_t)v9, (uint64_t)v19, a2);
  sub_10017DF4C((uint64_t)v19, (uint64_t *)&unk_100EA01F0);
  return sub_1001BC5DC();
}

id *sub_100A51558()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)(v0 + 10));
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)(v0 + 15));
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)(v0 + 20));
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)(v0 + 25));
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)(v0 + 30));
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)(v0 + 35));
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)(v0 + 41));
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)(v0 + 46));
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)(v0 + 51));

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  return v0;
}

uint64_t sub_100A51624()
{
  sub_100A51558();

  return swift_deallocClassInstance();
}

uint64_t sub_100A5165C(uint64_t *a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for Location();
  sub_1001627C0(v5);
  return sub_100A42168(a1, a2, v2 + ((*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80)));
}

uint64_t sub_100A516C0()
{
  sub_100162EA0();
  type metadata accessor for Location();
  sub_100179C0C();
  sub_100164028();
  uint64_t v0 = type metadata accessor for TimeState();
  sub_100164920(v0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v1 = sub_100181AE0();
  v2(v1);
  swift_release();
  swift_release();
  type metadata accessor for Date();
  sub_100179DC0();
  sub_100162F0C();
  v3();
  sub_1001093E8();
  sub_100162694();
  return swift_deallocObject();
}

void sub_100A517DC()
{
  uint64_t v2 = sub_10019C9F8();
  sub_100164920(v2);
  sub_100164028();
  uint64_t v3 = type metadata accessor for TimeState();
  sub_100164920(v3);
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  unint64_t v8 = (v1 + *(unsigned __int8 *)(v5 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unsigned __int8 v18 = *(unsigned char *)(v0 + v8 + *(void *)(v7 + 64));
  uint64_t v17 = v0 + v8;
  uint64_t v9 = sub_1001D4110();
  sub_100A439C4(v9, v10, v11, v12, v13, v14, v15, v16, v17, v18);
}

uint64_t sub_100A518B0()
{
  return sub_10017D164();
}

uint64_t sub_100A518C0()
{
  return sub_10017D164();
}

uint64_t sub_100A518D0()
{
  swift_release();

  return swift_deallocObject();
}

#error "100A51B24: call analysis failed (funcsize=120)"

#error "100A51DE4: call analysis failed (funcsize=134)"

uint64_t sub_100A51E50()
{
  sub_100109460();
  swift_bridgeObjectRetain();
  Namespace.ID.hash(into:)();
  Swift::Int v1 = Hasher._finalize()();
  uint64_t v2 = -1 << *(unsigned char *)(v0 + 32);
  unint64_t v3 = v1 & ~v2;
  sub_100128AAC();
  if ((v4 & 1) == 0)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return 0;
  }
  if ((static Namespace.ID.== infix(_:_:)() & 1) == 0)
  {
    uint64_t v5 = ~v2;
    do
    {
      unint64_t v3 = (v3 + 1) & v5;
      sub_100128AAC();
      if ((v6 & 1) == 0) {
        goto LABEL_9;
      }
    }
    while ((static Namespace.ID.== infix(_:_:)() & 1) == 0);
  }
  swift_bridgeObjectRelease();
  swift_isUniquelyReferenced_nonNull_native();
  sub_10017F1D4();
  if (!v8)
  {
    sub_1007F1164();
    uint64_t v7 = v20;
  }
  uint64_t v9 = *(void *)(*(void *)(v7 + 48) + 8 * v3);
  unint64_t v10 = sub_100A526FC(v3);
  sub_1001D25CC(v10, v11, v12, v13, v14, v15, v16, v17, v19, v20);
  return v9;
}

void sub_100A51F60()
{
  sub_100162EA0();
  uint64_t v3 = sub_100127C8C();
  type metadata accessor for ListViewTipManager.LocationNameAndLocationOfInterestType(v3);
  sub_100179C0C();
  uint64_t v5 = v4;
  __chkstk_darwin(v6);
  sub_10011C760();
  uint64_t v7 = *v1;
  uint64_t v8 = *v1 + 56;
  uint64_t v9 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v10 = (v0 + 1) & ~v9;
  if (((1 << v10) & *(void *)(v8 + 8 * (v10 >> 6))) != 0)
  {
    uint64_t v29 = v1;
    uint64_t v11 = ~v9;
    swift_retain();
    uint64_t v12 = _HashTable.previousHole(before:)();
    uint64_t v30 = v8;
    if ((*(void *)(v8 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      unint64_t v13 = (v12 + 1) & v11;
      uint64_t v14 = *(void *)(v5 + 72);
      while (1)
      {
        int64_t v15 = v14 * v10;
        sub_1001B9A30(*(void *)(v7 + 48) + v14 * v10, v2, (void (*)(void))type metadata accessor for ListViewTipManager.LocationNameAndLocationOfInterestType);
        Hasher.init(_seed:)();
        swift_bridgeObjectRetain();
        String.hash(into:)();
        swift_bridgeObjectRelease();
        type metadata accessor for LocationOfInterestType();
        sub_100128EB4(&qword_100E63510, (void (*)(uint64_t))&type metadata accessor for LocationOfInterestType);
        dispatch thunk of Hashable.hash(into:)();
        Swift::Int v16 = Hasher._finalize()();
        sub_1001BC5DC();
        Swift::Int v17 = v16 & v11;
        if (v0 >= (uint64_t)v13)
        {
          if (v17 < v13 || v0 < v17) {
            goto LABEL_24;
          }
        }
        else if (v17 < v13 && v0 < v17)
        {
          goto LABEL_24;
        }
        uint64_t v20 = *(void *)(v7 + 48);
        int64_t v21 = v14 * v0;
        unint64_t v22 = v20 + v14 * v0;
        unint64_t v23 = v20 + v15 + v14;
        if (v14 * v0 < v15 || v22 >= v23) {
          break;
        }
        int64_t v0 = v10;
        if (v21 != v15)
        {
          swift_arrayInitWithTakeBackToFront();
          goto LABEL_23;
        }
LABEL_24:
        unint64_t v10 = (v10 + 1) & v11;
        if (((*(void *)(v30 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
          goto LABEL_25;
        }
      }
      swift_arrayInitWithTakeFrontToBack();
LABEL_23:
      int64_t v0 = v10;
      goto LABEL_24;
    }
LABEL_25:
    *(void *)(v30 + (((unint64_t)v0 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v0) - 1;
    swift_release();
    Swift::Int v1 = v29;
  }
  else
  {
    *(void *)(v8 + (((unint64_t)v0 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v0) - 1;
  }
  uint64_t v25 = *v1;
  uint64_t v26 = *(void *)(*v1 + 16);
  BOOL v27 = __OFSUB__(v26, 1);
  uint64_t v28 = v26 - 1;
  if (v27)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v25 + 16) = v28;
    ++*(_DWORD *)(v25 + 36);
    sub_100162694();
  }
}

unint64_t sub_100A52228(unint64_t result)
{
  Swift::Int v2 = result;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    swift_retain();
    uint64_t v8 = _HashTable.previousHole(before:)();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        Hasher.init(_seed:)();
        String.hash(into:)();
        swift_bridgeObjectRelease();
        Swift::Int v10 = Hasher._finalize()() & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v10 >= v9 && v2 >= v10)
          {
LABEL_15:
            uint64_t v13 = *(void *)(v3 + 48);
            uint64_t v14 = (unsigned char *)(v13 + v2);
            int64_t v15 = (unsigned char *)(v13 + v6);
            BOOL v16 = v2 != v6 || v14 >= v15 + 1;
            Swift::Int v2 = v6;
            if (v16)
            {
              *uint64_t v14 = *v15;
              Swift::Int v2 = v6;
            }
          }
        }
        else if (v10 >= v9 || v2 >= v10)
        {
          goto LABEL_15;
        }
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(void *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    uint64_t result = swift_release();
  }
  else
  {
    *(void *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  uint64_t v17 = *(void *)(v3 + 16);
  BOOL v18 = __OFSUB__(v17, 1);
  uint64_t v19 = v17 - 1;
  if (v18)
  {
    __break(1u);
    JUMPOUT(0x100A52464);
  }
  *(void *)(v3 + 16) = v19;
  ++*(_DWORD *)(v3 + 36);
  return result;
}

unint64_t sub_100A5247C(unint64_t result)
{
  Swift::Int v2 = result;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    swift_retain();
    uint64_t v8 = _HashTable.previousHole(before:)();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        Hasher.init(_seed:)();
        String.hash(into:)();
        swift_bridgeObjectRelease();
        Swift::Int v10 = Hasher._finalize()() & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v10 >= v9 && v2 >= v10)
          {
LABEL_15:
            uint64_t v13 = *(void *)(v3 + 48);
            uint64_t v14 = (unsigned char *)(v13 + v2);
            int64_t v15 = (unsigned char *)(v13 + v6);
            BOOL v16 = v2 != v6 || v14 >= v15 + 1;
            Swift::Int v2 = v6;
            if (v16)
            {
              *uint64_t v14 = *v15;
              Swift::Int v2 = v6;
            }
          }
        }
        else if (v10 >= v9 || v2 >= v10)
        {
          goto LABEL_15;
        }
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(void *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    uint64_t result = swift_release();
  }
  else
  {
    *(void *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  uint64_t v17 = *(void *)(v3 + 16);
  BOOL v18 = __OFSUB__(v17, 1);
  uint64_t v19 = v17 - 1;
  if (v18)
  {
    __break(1u);
    JUMPOUT(0x100A526DCLL);
  }
  *(void *)(v3 + 16) = v19;
  ++*(_DWORD *)(v3 + 36);
  return result;
}

unint64_t sub_100A526FC(unint64_t result)
{
  Swift::Int v2 = result;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    swift_retain();
    uint64_t v8 = _HashTable.previousHole(before:)();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        Hasher.init(_seed:)();
        Namespace.ID.hash(into:)();
        Swift::Int v10 = Hasher._finalize()() & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v10 >= v9 && v2 >= v10)
          {
LABEL_15:
            uint64_t v13 = *(void *)(v3 + 48);
            uint64_t v14 = (void *)(v13 + 8 * v2);
            int64_t v15 = (void *)(v13 + 8 * v6);
            BOOL v16 = v2 != v6 || v14 >= v15 + 1;
            Swift::Int v2 = v6;
            if (v16)
            {
              *uint64_t v14 = *v15;
              Swift::Int v2 = v6;
            }
          }
        }
        else if (v10 >= v9 || v2 >= v10)
        {
          goto LABEL_15;
        }
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(void *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    uint64_t result = swift_release();
  }
  else
  {
    *(void *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  uint64_t v17 = *(void *)(v3 + 16);
  BOOL v18 = __OFSUB__(v17, 1);
  uint64_t v19 = v17 - 1;
  if (v18)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v3 + 16) = v19;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

uint64_t sub_100A5289C()
{
  swift_weakDestroy();

  return swift_deallocObject();
}

uint64_t sub_100A528D4()
{
  sub_1001843DC();
  Swift::Int v1 = (int *)type metadata accessor for WeatherData(0);
  sub_100179EF0();
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  type metadata accessor for Location();
  sub_100179C0C();
  type metadata accessor for NewsDataModel();
  sub_100179C0C();
  swift_release();
  swift_release();
  uint64_t v4 = v0 + v3;
  swift_bridgeObjectRelease();
  uint64_t v5 = v4 + v1[5];
  type metadata accessor for Locale();
  if (!sub_100182A28(v5))
  {
    sub_100162880();
    sub_10017B290();
    v6();
  }
  type metadata accessor for WeatherDataModel();
  sub_100179DC0();
  sub_100162F0C();
  v7();
  uint64_t v8 = v4 + v1[7];
  uint64_t v9 = sub_10017DF08(&qword_100E63738);
  if (!_s7Weather24LocationCompositionStateOwet_0(v8, 1, v9))
  {
    type metadata accessor for Date();
    sub_100179DC0();
    uint64_t v10 = sub_100129018();
    v11(v10);
  }
  type metadata accessor for WeatherData.WeatherStatisticsState(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    type metadata accessor for WeatherStatisticsModel();
    sub_100179DC0();
    uint64_t v13 = sub_100129018();
    v14(v13);
  }
  else if (!EnumCaseMultiPayload)
  {
    swift_bridgeObjectRelease();
  }
  uint64_t v15 = v4 + v1[9];
  type metadata accessor for WeatherDataOverrides();
  if (!sub_100182A28(v15))
  {
    type metadata accessor for Date();
    if (!sub_10019D348())
    {
      sub_100162880();
      uint64_t v16 = sub_10017FD84();
      v17(v16);
    }
    if (!sub_10019D348())
    {
      sub_100162880();
      uint64_t v18 = sub_10017FD84();
      v19(v18);
    }
  }
  sub_100164FC8();
  v20();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    type metadata accessor for News();
    sub_100179DC0();
    uint64_t v21 = sub_1001EA9E0();
    v22(v21);
  }
  sub_100152398();
  return swift_deallocObject();
}

void sub_100A52C00()
{
  uint64_t v1 = type metadata accessor for WeatherData(0);
  sub_100164920(v1);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v5 = *(void *)(v4 + 64);
  uint64_t v6 = type metadata accessor for Location();
  sub_100164920(v6);
  unint64_t v8 = (v3 + v5 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v10 = *(void *)(v9 + 64);
  uint64_t v11 = type metadata accessor for NewsDataModel();
  sub_1001627C0(v11);
  uint64_t v13 = *(void *)(v0 + 16);
  uint64_t v14 = *(void *)(v0 + 24);
  uint64_t v15 = v0 + ((v8 + v10 + *(unsigned __int8 *)(v12 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));

  sub_100A440C4(v13, v14, (char *)(v0 + v3), v0 + v8, v15);
}

uint64_t sub_100A52CD0()
{
  sub_10019D248();
  type metadata accessor for OSSignpostID();
  sub_100179C0C();
  type metadata accessor for Location();
  sub_100179C0C();
  type metadata accessor for WeatherServiceLocationOptions();
  sub_100179C0C();
  type metadata accessor for AppConfiguration();
  sub_100179C0C();
  sub_1001A69CC();
  uint64_t v0 = type metadata accessor for TimeState();
  sub_100164920(v0);
  swift_release();
  sub_100164938();
  v1();
  sub_100164F40();
  v2();
  swift_release();
  sub_1001649A8();
  v3();
  sub_100164FC8();
  v4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  type metadata accessor for Date();
  sub_100179DC0();
  sub_100162F0C();
  v5();
  sub_100164ABC();
  sub_10017B3E4();
  return swift_deallocObject();
}

uint64_t sub_100A52F24()
{
  uint64_t v12 = type metadata accessor for Location();
  sub_100179C0C();
  uint64_t v2 = v1;
  unint64_t v11 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  type metadata accessor for WeatherServiceLocationOptions();
  sub_100179C0C();
  type metadata accessor for AppConfiguration();
  sub_100179C0C();
  sub_10018481C();
  uint64_t v3 = type metadata accessor for TimeState();
  sub_100164920(v3);
  sub_100A5B738();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v11, v12);
  sub_100164938();
  v5(v4);
  sub_100164FC8();
  v7(v6);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  type metadata accessor for Date();
  sub_100179DC0();
  sub_100162F0C();
  v9(v8);
  sub_1001D167C();

  return swift_deallocObject();
}

uint64_t sub_100A53124()
{
  uint64_t v2 = sub_1001D1468();
  sub_100164920(v2);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v6 = *(void *)(v5 + 64);
  uint64_t v7 = type metadata accessor for WeatherServiceLocationOptions();
  sub_100164920(v7);
  unint64_t v9 = (v4 + v6 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = *(void *)(v10 + 64);
  uint64_t v12 = type metadata accessor for AppConfiguration();
  sub_100164920(v12);
  unint64_t v14 = (v9 + v11 + *(unsigned __int8 *)(v13 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  unint64_t v16 = (*(void *)(v15 + 64) + v14 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v17 = type metadata accessor for TimeState();
  sub_100164920(v17);
  sub_10018B2A4();
  return sub_100A446A4(v0, v21, v1 + v4, v1 + v9, v1 + v14, *(void *)(v1 + v16), *(void *)(v1 + ((v16 + 15) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v1 + ((v16 + 15) & 0xFFFFFFFFFFFFFFF8) + 8), *(void *)(v1 + ((v16 + 15) & 0xFFFFFFFFFFFFFFF8) + 16), *(void *)(v1 + ((v16 + 15) & 0xFFFFFFFFFFFFFFF8) + 24), v1 + v20, *(unsigned char *)(v1 + v18), *(void *)(v19 + 8));
}

uint64_t sub_100A53280()
{
  sub_10019D248();
  type metadata accessor for OSSignpostID();
  sub_100179C0C();
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v4 = *(void *)(v3 + 64);
  type metadata accessor for Location();
  sub_100179C0C();
  unint64_t v21 = (*(void *)(v6 + 64)
       + ((((v2 + 33) & ~v2) + v4 + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))
       + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v23 = type metadata accessor for ProductRequirementsFactory.AppRequiredProducts();
  sub_100179C0C();
  uint64_t v8 = v7;
  unint64_t v9 = (v21 + *(unsigned __int8 *)(v7 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v11 = *(void *)(v10 + 64);
  uint64_t Options = type metadata accessor for WeatherServiceFetchOptions();
  sub_100179C0C();
  uint64_t v13 = v12;
  unint64_t v14 = (v9 + v11 + *(unsigned __int8 *)(v13 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  unint64_t v16 = (((*(void *)(v15 + 64) + v14 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  swift_release();
  sub_100164938();
  v17();
  sub_100164F40();
  v18();

  (*(void (**)(unint64_t, uint64_t))(v8 + 8))(v0 + v9, v23);
  (*(void (**)(unint64_t, uint64_t))(v13 + 8))(v0 + v14, Options);
  swift_release();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + v16);
  swift_release();
  swift_release();
  sub_10017B3E4();
  return swift_deallocObject();
}

uint64_t sub_100A534A4()
{
  sub_10012BA50();
  type metadata accessor for Location();
  sub_100179C0C();
  unint64_t v18 = (((*(void *)(v2 + 64)
         + ((*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80))
         + 7) & 0xFFFFFFFFFFFFFFF8)
       + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v17 = (((((v18 + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  type metadata accessor for ProductRequirementsFactory.AppRequiredProducts();
  sub_100179C0C();
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + v17 + 8) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v6 = *(void *)(v5 + 64);
  uint64_t Options = type metadata accessor for WeatherServiceFetchOptions();
  sub_100179C0C();
  uint64_t v8 = v7;
  unint64_t v9 = (v6 + *(unsigned __int8 *)(v7 + 80) + v4) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  unint64_t v16 = (*(void *)(v10 + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8;
  type metadata accessor for OSSignpostID();
  sub_100179C0C();
  sub_100A5B738();
  swift_release();
  sub_1001649A8();
  v11();
  swift_release();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + v18);
  swift_release();
  swift_release();

  sub_100164938();
  v12();
  (*(void (**)(unint64_t, uint64_t))(v8 + 8))(v0 + v9, Options);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + v16);
  swift_release();
  sub_100164FC8();
  v13();
  swift_release();
  sub_10011C0EC();
  return swift_deallocObject();
}

#error "100A5387C: call analysis failed (funcsize=98)"

uint64_t sub_100A53894(uint64_t a1)
{
  return sub_100A4546C(a1, *(void (**)(void *))(v1 + 16), *(void *)(v1 + 24));
}

uint64_t type metadata accessor for WeatherDataUpdater.Response()
{
  uint64_t result = qword_100EABF58;
  if (!qword_100EABF58) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100A538E4(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void (*a7)(char *, char *, uint64_t), uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, char *a14, uint64_t a15, uint64_t a16)
{
  uint64_t v245 = a8;
  uint64_t v235 = a7;
  uint64_t v256 = (void *)a6;
  uint64_t v234 = a5;
  uint64_t v233 = a4;
  uint64_t v261 = a3;
  LODWORD(v260) = a2;
  uint64_t v231 = a1;
  uint64_t v259 = a11;
  uint64_t v247 = a9;
  uint64_t v16 = sub_10017DF08(&qword_100EABE80);
  __chkstk_darwin(v16 - 8);
  uint64_t v203 = (uint64_t)&v196 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v202 = type metadata accessor for News();
  uint64_t v197 = *(void *)(v202 - 8);
  __chkstk_darwin(v202);
  uint64_t v196 = (char *)&v196 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v204 = type metadata accessor for NewsDataModel();
  uint64_t v207 = *(void *)(v204 - 8);
  uint64_t v19 = __chkstk_darwin(v204);
  uint64_t v212 = (uint64_t)&v196 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v208 = v20;
  __chkstk_darwin(v19);
  uint64_t v213 = (char *)&v196 - v21;
  uint64_t v22 = type metadata accessor for PreprocessedWeatherData();
  uint64_t v205 = *(void *)(v22 - 8);
  uint64_t v23 = __chkstk_darwin(v22 - 8);
  uint64_t v211 = (uint64_t)&v196 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v206 = v24;
  __chkstk_darwin(v23);
  uint64_t v214 = (uint64_t)&v196 - v25;
  uint64_t v250 = type metadata accessor for Location();
  uint64_t v246 = *(void *)(v250 - 8);
  __chkstk_darwin(v250);
  uint64_t v248 = v26;
  uint64_t v249 = (char *)&v196 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v244 = type metadata accessor for TimeZone();
  uint64_t v243 = *(void *)(v244 - 8);
  __chkstk_darwin(v244);
  uint64_t v242 = (char *)&v196 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v239 = type metadata accessor for UUID();
  uint64_t v238 = *(void *)(v239 - 8);
  __chkstk_darwin(v239);
  uint64_t v237 = (char *)&v196 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = sub_10017DF08(&qword_100E63740);
  __chkstk_darwin(v29 - 8);
  uint64_t v241 = (uint64_t)&v196 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v240 = type metadata accessor for WeatherData(0);
  uint64_t v200 = *(void *)(v240 - 8);
  uint64_t v31 = __chkstk_darwin(v240);
  uint64_t v210 = (uint64_t)&v196 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v201 = v32;
  __chkstk_darwin(v31);
  uint64_t v264 = (char *)&v196 - v33;
  uint64_t v34 = type metadata accessor for WeatherData.CachingState(0);
  uint64_t v35 = __chkstk_darwin(v34 - 8);
  uint64_t v236 = (uint64_t)&v196 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v35);
  uint64_t v263 = (uint64_t)&v196 - v37;
  uint64_t v38 = sub_10017DF08(&qword_100E634B0);
  __chkstk_darwin(v38 - 8);
  uint64_t v232 = (uint64_t)&v196 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = type metadata accessor for WeatherDataUpdater.Response();
  uint64_t v41 = (int *)(v40 - 8);
  __chkstk_darwin(v40);
  uint64_t v227 = (char *)&v196 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  __chkstk_darwin(v43 - 8);
  uint64_t v229 = (char *)&v196 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t Fetched = type metadata accessor for WeatherServiceLastFetched();
  uint64_t v228 = *(void *)(Fetched - 8);
  __chkstk_darwin(Fetched);
  uint64_t v226 = (uint64_t)&v196 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v262 = type metadata accessor for Date();
  uint64_t v258 = *(void *)(v262 - 8);
  __chkstk_darwin(v262);
  uint64_t v267 = (char *)&v196 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = sub_10017DF08(&qword_100E6B8A8);
  __chkstk_darwin(v47 - 8);
  uint64_t v265 = (char *)&v196 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = sub_10017DF08(&qword_100E6B8B8);
  __chkstk_darwin(v49 - 8);
  uint64_t v224 = (uint64_t)&v196 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v223 = type metadata accessor for WeatherAvailability();
  uint64_t v222 = *(void *)(v223 - 8);
  __chkstk_darwin(v223);
  uint64_t v221 = (char *)&v196 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = sub_10017DF08(&qword_100E6D1C8);
  __chkstk_darwin(v52 - 8);
  uint64_t v220 = (uint64_t)&v196 - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = sub_10017DF08(&qword_100E885C0);
  __chkstk_darwin(v54 - 8);
  uint64_t v219 = (uint64_t)&v196 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v218 = sub_10017DF08(&qword_100E66CA0);
  uint64_t v217 = *(void *)(v218 - 8);
  __chkstk_darwin(v218);
  uint64_t v254 = (char *)&v196 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = sub_10017DF08(&qword_100E66CC8);
  unint64_t v252 = *(void *)(v57 - 8);
  __chkstk_darwin(v57);
  uint64_t v251 = (char *)&v196 - ((v58 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = sub_10017DF08(&qword_100E6E8F8);
  __chkstk_darwin(v59 - 8);
  uint64_t v61 = (char *)&v196 - ((v60 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v215 = v61;
  uint64_t v62 = type metadata accessor for CurrentWeather();
  uint64_t v63 = *(void *)(v62 - 8);
  __chkstk_darwin(v62);
  uint64_t v65 = (char *)&v196 - ((v64 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v216 = v65;
  uint64_t v266 = type metadata accessor for WeatherDataModel();
  uint64_t v257 = *(void *)(v266 - 8);
  uint64_t v66 = __chkstk_darwin(v266);
  uint64_t v255 = (char *)&v196 - ((v67 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v225 = v67;
  __chkstk_darwin(v66);
  uint64_t v69 = (char *)&v196 - v68;
  uint64_t updated = type metadata accessor for WeatherDataUpdateRequestLog.Event(0);
  __chkstk_darwin(updated);
  uint64_t v72 = (char *)&v196 - ((v71 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v272 = type metadata accessor for DailyForecastFilter();
  uint64_t v273 = &off_100E0D630;
  uint64_t v271 = a10;
  uint64_t v253 = (void (*)(unint64_t, char *, uint64_t))(v247 + 16);
  *uint64_t v72 = v260;
  uint64_t v198 = updated;
  swift_storeEnumTagMultiPayload();
  swift_retain();
  sub_10015B128((uint64_t)v72);
  uint64_t v199 = v72;
  sub_1001BC5DC();
  uint64_t v73 = v65;
  uint64_t v74 = v231;
  (*(void (**)(char *, uint64_t, uint64_t))(v63 + 16))(v73, v231, v62);
  sub_1001B7204(v74 + v41[7], (uint64_t)v61, &qword_100E6E8F8);
  uint64_t v75 = v74 + v41[8];
  uint64_t v76 = *(void (**)(char *, uint64_t, uint64_t))(v252 + 16);
  uint64_t v209 = v57;
  v76(v251, v75, v57);
  (*(void (**)(char *, uint64_t, uint64_t))(v217 + 16))(v254, v74 + v41[9], v218);
  sub_1001B7204(v74 + v41[10], v219, &qword_100E885C0);
  sub_1001B7204(v74 + v41[11], v220, &qword_100E6D1C8);
  (*(void (**)(char *, uint64_t, uint64_t))(v222 + 16))(v221, v74 + v41[13], v223);
  uint64_t v77 = v41[15];
  uint64_t v78 = (uint64_t)v227;
  sub_1001B7204(v74 + v77, v224, &qword_100E6B8B8);
  uint64_t v79 = type metadata accessor for HistoricalFacts();
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v265, 1, 1, v79);
  swift_bridgeObjectRetain();
  uint64_t v265 = v69;
  uint64_t v80 = v262;
  WeatherDataModel.init(currentWeather:minuteForecast:hourlyForecast:dailyForecast:airQuality:weatherChanges:weatherAlerts:availability:historicalComparisons:historicalFacts:)();
  uint64_t v81 = v226;
  sub_1001BD2A8(v234, (uint64_t)v256, v245, v226);
  uint64_t v82 = (uint64_t)v229;
  WeatherServiceLastFetched.date.getter();
  (*(void (**)(uint64_t, uint64_t))(v228 + 8))(v81, Fetched);
  sub_1001B9A30(v74, v78, (void (*)(void))type metadata accessor for WeatherDataUpdater.Response);
  if (_s7Weather24LocationCompositionStateOwet_0(v82, 1, v80) == 1)
  {
    CurrentWeather.date.getter();
    sub_1001BC5DC();
    sub_10017DF4C(v82, (uint64_t *)&unk_100E73CA0);
  }
  else
  {
    sub_1001BC5DC();
    (*(void (**)(char *, uint64_t, uint64_t))(v258 + 32))(v267, v82, v80);
  }
  uint64_t v245 = a15;
  uint64_t v254 = a14;
  uint64_t v83 = type metadata accessor for TaskPriority();
  uint64_t v84 = v232;
  _s7Weather24LocationCompositionStateOwst_0(v232, 1, 1, v83);
  uint64_t v85 = swift_allocObject();
  swift_beginAccess();
  swift_weakLoadStrong();
  swift_weakInit();
  swift_release();
  uint64_t v86 = v257;
  uint64_t v87 = *(void (**)(char *, char *, uint64_t))(v257 + 16);
  uint64_t v88 = v255;
  uint64_t v89 = v266;
  v87(v255, v265, v266);
  unint64_t v90 = (*(unsigned __int8 *)(v86 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v86 + 80);
  uint64_t v91 = (char *)swift_allocObject();
  *((void *)v91 + 2) = 0;
  *((void *)v91 + 3) = 0;
  *((void *)v91 + 4) = v85;
  uint64_t v92 = v256;
  *((void *)v91 + 5) = v256;
  uint64_t v93 = v88;
  uint64_t v94 = 1;
  uint64_t v235 = *(void (**)(char *, char *, uint64_t))(v86 + 32);
  v235(&v91[v90], v93, v89);
  id v95 = v92;
  sub_1001BCCF0(v84, (uint64_t)&unk_100EABEB8, (uint64_t)v91);
  swift_release();
  if (v260)
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v258 + 16))(v263, v267, v262);
    uint64_t v94 = 0;
  }
  uint64_t v234 = a13;
  uint64_t v256 = (void *)a12;
  uint64_t v96 = sub_10017DF08(&qword_100E63738);
  uint64_t v97 = v263;
  _s7Weather24LocationCompositionStateOwst_0(v263, v94, 1, v96);
  uint64_t v98 = v255;
  uint64_t v99 = v266;
  v87(v255, v265, v266);
  uint64_t v100 = v236;
  sub_1001B9A30(v97, v236, (void (*)(void))type metadata accessor for WeatherData.CachingState);
  uint64_t v101 = type metadata accessor for WeatherDataOverrides();
  uint64_t v102 = v241;
  _s7Weather24LocationCompositionStateOwst_0(v241, 1, 1, v101);
  uint64_t v103 = v237;
  UUID.init()();
  uint64_t v104 = UUID.uuidString.getter();
  uint64_t v106 = v105;
  (*(void (**)(char *, uint64_t))(v238 + 8))(v103, v239);
  uint64_t v107 = (int *)v240;
  uint64_t v108 = v264;
  char v109 = &v264[*(int *)(v240 + 20)];
  static Locale.current.getter();
  uint64_t v110 = type metadata accessor for Locale();
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v109, 0, 1, v110);
  type metadata accessor for WeatherData.WeatherStatisticsState(0);
  swift_storeEnumTagMultiPayload();
  *(void *)uint64_t v108 = v104;
  *((void *)v108 + 1) = v106;
  v235(&v108[v107[6]], v98, v99);
  sub_1001B9AF4(v100, (uint64_t)&v108[v107[7]], (void (*)(void))type metadata accessor for WeatherData.CachingState);
  sub_1001278D0(v102, (uint64_t)&v108[v107[9]], &qword_100E63740);
  sub_1001B1E64(&v271, v272);
  uint64_t v111 = (uint64_t)v242;
  uint64_t v112 = v259;
  Location.timeZone.getter();
  sub_1001BCE5C((uint64_t)v108, v111, (uint64_t)v274);
  (*(void (**)(uint64_t, uint64_t))(v243 + 8))(v111, v244);
  sub_1001278D0((uint64_t)v274, (uint64_t)v275, &qword_100EABEC0);
  if (v276 == 1)
  {
    uint64_t v113 = v275[0];
    uint64_t v114 = v275[1];
    uint64_t v115 = v275[2];
    uint64_t v116 = (void *)v275[3];
    uint64_t v268 = 0;
    unint64_t v269 = 0xE000000000000000;
    _StringGuts.grow(_:)(85);
    v117._object = (void *)0x8000000100CBB390;
    v117._countAndFlagsBits = 0xD00000000000002ALL;
    String.append(_:)(v117);
    uint64_t v270 = v113;
    v118._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    String.append(_:)(v118);
    swift_bridgeObjectRelease();
    v119._countAndFlagsBits = 0x6C6175746361202CLL;
    v119._object = (void *)0xEE003D746E756F43;
    String.append(_:)(v119);
    uint64_t v270 = v114;
    v120._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    String.append(_:)(v120);
    uint64_t v121 = v259;
    swift_bridgeObjectRelease();
    v122._object = (void *)0xEA00000000003D74;
    v122._countAndFlagsBits = 0x7865746E6F63202CLL;
    String.append(_:)(v122);
    v123._countAndFlagsBits = v115;
    v123._object = v116;
    String.append(_:)(v123);
    v124._countAndFlagsBits = 0x697461636F6C202CLL;
    v124._object = (void *)0xEB000000003D6E6FLL;
    String.append(_:)(v124);
    uint64_t v270 = Location.hashValue.getter();
    v125._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    String.append(_:)(v125);
    swift_bridgeObjectRelease();
    uint64_t v126 = v268;
    uint64_t v260 = v269;
    uint64_t v127 = v246;
    uint64_t v128 = v249;
    uint64_t v129 = v250;
    (*(void (**)(char *, uint64_t, uint64_t))(v246 + 16))(v249, v121, v250);
    unint64_t v130 = (*(unsigned __int8 *)(v127 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v127 + 80);
    unint64_t v131 = (v248 + v130 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v132 = (char *)swift_allocObject();
    uint64_t v133 = (uint64_t)v256;
    *((void *)v132 + 2) = v261;
    *((void *)v132 + 3) = v133;
    *((void *)v132 + 4) = v234;
    (*(void (**)(char *, char *, uint64_t))(v127 + 32))(&v132[v130], v128, v129);
    uint64_t v134 = (uint64_t *)&v132[v131];
    uint64_t v135 = v260;
    *uint64_t v134 = v126;
    v134[1] = v135;
    swift_retain();
    swift_retain();
    asyncMain(block:)();
    swift_release();
    static os_signpost_type_t.end.getter();
    sub_10017DF08(&qword_100E64020);
    uint64_t v136 = swift_allocObject();
    *(_OWORD *)(v136 + 16) = xmmword_100C251B0;
    uint64_t v137 = Location.name.getter();
    uint64_t v139 = v138;
    *(void *)(v136 + 56) = &type metadata for String;
    *(void *)(v136 + 64) = sub_10012B7C0();
    *(void *)(v136 + 32) = v137;
    *(void *)(v136 + 40) = v139;
    os_signpost(_:dso:log:name:signpostID:_:_:)();
    swift_bridgeObjectRelease();
    swift_beginAccess();
    if (swift_weakLoadStrong())
    {
      sub_1000CBE94(v121);
      swift_release();
    }
    sub_100A56758((uint64_t)v274);
LABEL_19:
    uint64_t v165 = v262;
    uint64_t v166 = v258;
    uint64_t v167 = v267;
    goto LABEL_20;
  }
  uint64_t v140 = (uint64_t)v256;
  uint64_t v141 = v251;
  WeatherDataModel.hourlyForecast.getter();
  sub_1001246C8((unint64_t *)&qword_100E66CE0, &qword_100E66CC8);
  uint64_t v142 = v209;
  dispatch thunk of Collection.startIndex.getter();
  dispatch thunk of Collection.endIndex.getter();
  uint64_t v143 = dispatch thunk of Collection.distance(from:to:)();
  uint64_t v144 = *(void (**)(char *, uint64_t))(v252 + 8);
  v144(v141, v142);
  if (v143 >= 18)
  {
    LODWORD(v256) = v260 & 1;
    uint64_t v168 = (uint64_t)v199;
    swift_storeEnumTagMultiPayload();
    sub_10015B128(v168);
    sub_1001BC5DC();
    sub_1001B1E64((void *)v254 + 20, *((void *)v254 + 23));
    sub_1001BD128(v264, v112, v214);
    uint64_t v260 = a16;
    uint64_t v169 = v203;
    sub_1001B7204(a16, v203, &qword_100EABE80);
    uint64_t v170 = v202;
    if (_s7Weather24LocationCompositionStateOwet_0(v169, 1, v202) == 1)
    {
      sub_10017DF4C(v169, &qword_100EABE80);
      uint64_t v171 = (uint64_t)v213;
      if (qword_100E62BC8 != -1) {
        swift_once();
      }
      uint64_t v172 = sub_1002102B0(v204, (uint64_t)qword_100F52468);
      sub_1001B9A30(v172, v171, (void (*)(void))type metadata accessor for NewsDataModel);
    }
    else
    {
      uint64_t v173 = *(void (**)(char *, uint64_t, uint64_t))(v197 + 32);
      uint64_t v174 = v196;
      v173(v196, v169, v170);
      uint64_t v171 = (uint64_t)v213;
      v173(v213, (uint64_t)v174, v170);
      swift_storeEnumTagMultiPayload();
    }
    sub_1001B9A30((uint64_t)v264, v210, (void (*)(void))type metadata accessor for WeatherData);
    sub_1001B9A30(v214, v211, (void (*)(void))type metadata accessor for PreprocessedWeatherData);
    sub_1001B9A30(v171, v212, (void (*)(void))type metadata accessor for NewsDataModel);
    uint64_t v175 = v246;
    uint64_t v255 = *(char **)(v246 + 16);
    ((void (*)(char *, uint64_t, uint64_t))v255)(v249, v112, v250);
    unint64_t v176 = (*(unsigned __int8 *)(v200 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v200 + 80);
    unint64_t v177 = (v201 + *(unsigned __int8 *)(v205 + 80) + v176) & ~(unint64_t)*(unsigned __int8 *)(v205 + 80);
    unint64_t v178 = (v206 + *(unsigned __int8 *)(v207 + 80) + v177) & ~(unint64_t)*(unsigned __int8 *)(v207 + 80);
    uint64_t v179 = *(unsigned __int8 *)(v175 + 80);
    unint64_t v180 = (v208 + v179 + v178) & ~v179;
    unint64_t v252 = (v180 + v248 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v181 = (v180 + v248 + 23) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v182 = swift_allocObject();
    uint64_t v183 = v254;
    *(void *)(v182 + 16) = v254;
    sub_1001B9AF4(v210, v182 + v176, (void (*)(void))type metadata accessor for WeatherData);
    sub_1001B9AF4(v211, v182 + v177, (void (*)(void))type metadata accessor for PreprocessedWeatherData);
    sub_1001B9AF4(v212, v182 + v178, (void (*)(void))type metadata accessor for NewsDataModel);
    uint64_t v253 = *(void (**)(unint64_t, char *, uint64_t))(v175 + 32);
    uint64_t v184 = v249;
    uint64_t v185 = v250;
    v253(v182 + v180, v249, v250);
    unint64_t v186 = v182 + v252;
    uint64_t v187 = v261;
    *(void *)unint64_t v186 = v261;
    *(unsigned char *)(v186 + 8) = (_BYTE)v256;
    *(void *)(v182 + v181) = v247;
    swift_retain();
    swift_retain();
    swift_retain();
    asyncMain(block:)();
    swift_release();
    sub_1001B1E64((void *)v183 + 25, *((void *)v183 + 28));
    ((void (*)(char *, uint64_t, uint64_t))v255)(v184, v259, v185);
    uint64_t v188 = (v179 + 24) & ~v179;
    unint64_t v189 = (v248 + v188 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v190 = swift_allocObject();
    *(void *)(v190 + 16) = v187;
    v253(v190 + v188, v184, v185);
    *(void *)(v190 + v189) = v183;
    swift_retain();
    swift_retain();
    sub_1001E46CC(v260, (uint64_t (*)(void))sub_100A565C8, v190);
    swift_release();
    static os_signpost_type_t.end.getter();
    sub_10017DF08(&qword_100E64020);
    uint64_t v191 = swift_allocObject();
    *(_OWORD *)(v191 + 16) = xmmword_100C251B0;
    uint64_t v192 = Location.name.getter();
    uint64_t v194 = v193;
    *(void *)(v191 + 56) = &type metadata for String;
    *(void *)(v191 + 64) = sub_10012B7C0();
    *(void *)(v191 + 32) = v192;
    *(void *)(v191 + 40) = v194;
    os_signpost(_:dso:log:name:signpostID:_:_:)();
    swift_bridgeObjectRelease();
    sub_1001BC5DC();
    sub_1001BC5DC();
    goto LABEL_19;
  }
  uint64_t v268 = 0;
  unint64_t v269 = 0xE000000000000000;
  _StringGuts.grow(_:)(93);
  v145._countAndFlagsBits = 0xD000000000000041;
  v145._object = (void *)0x8000000100CBB340;
  String.append(_:)(v145);
  WeatherDataModel.hourlyForecast.getter();
  dispatch thunk of Collection.startIndex.getter();
  dispatch thunk of Collection.endIndex.getter();
  uint64_t v146 = dispatch thunk of Collection.distance(from:to:)();
  v144(v141, v142);
  uint64_t v270 = v146;
  v147._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v147);
  swift_bridgeObjectRelease();
  v148._countAndFlagsBits = 0x687365726874202CLL;
  v148._object = (void *)0xEC0000003D646C6FLL;
  String.append(_:)(v148);
  uint64_t v270 = 18;
  v149._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v149);
  swift_bridgeObjectRelease();
  v150._countAndFlagsBits = 0x6F697461636F6C20;
  v150._object = (void *)0xEA00000000003D6ELL;
  String.append(_:)(v150);
  uint64_t v270 = Location.hashValue.getter();
  v151._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v151);
  swift_bridgeObjectRelease();
  uint64_t v260 = v268;
  unint64_t v152 = v269;
  uint64_t v153 = v246;
  uint64_t v154 = v249;
  uint64_t v155 = v250;
  (*(void (**)(char *, uint64_t, uint64_t))(v246 + 16))(v249, v112, v250);
  unint64_t v156 = (*(unsigned __int8 *)(v153 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v153 + 80);
  unint64_t v157 = (v248 + v156 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v158 = (char *)swift_allocObject();
  *((void *)v158 + 2) = v261;
  *((void *)v158 + 3) = v140;
  *((void *)v158 + 4) = v234;
  (*(void (**)(char *, char *, uint64_t))(v153 + 32))(&v158[v156], v154, v155);
  uint64_t v159 = &v158[v157];
  *(void *)uint64_t v159 = v260;
  *((void *)v159 + 1) = v152;
  swift_retain();
  swift_retain();
  asyncMain(block:)();
  swift_release();
  static os_signpost_type_t.end.getter();
  sub_10017DF08(&qword_100E64020);
  uint64_t v160 = swift_allocObject();
  *(_OWORD *)(v160 + 16) = xmmword_100C251B0;
  uint64_t v161 = Location.name.getter();
  uint64_t v163 = v162;
  *(void *)(v160 + 56) = &type metadata for String;
  *(void *)(v160 + 64) = sub_10012B7C0();
  *(void *)(v160 + 32) = v161;
  *(void *)(v160 + 40) = v163;
  os_signpost(_:dso:log:name:signpostID:_:_:)();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  uint64_t v165 = v262;
  uint64_t v166 = v258;
  uint64_t v167 = v267;
  if (Strong)
  {
    sub_1000CBE94(v112);
    swift_release();
  }
LABEL_20:
  sub_1001BC5DC();
  sub_1001BC5DC();
  (*(void (**)(char *, uint64_t))(v166 + 8))(v167, v165);
  (*(void (**)(char *, uint64_t))(v257 + 8))(v265, v266);
  return _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)&v271);
}

uint64_t sub_100A55B44()
{
  type metadata accessor for WeatherDataModel();
  sub_100179C0C();
  swift_unknownObjectRelease();
  swift_release();

  uint64_t v1 = sub_100181AE0();
  v2(v1);
  sub_10012609C();

  return swift_deallocObject();
}

uint64_t sub_100A55BE0()
{
  sub_100127C8C();
  uint64_t v3 = type metadata accessor for WeatherDataModel();
  sub_1001627C0(v3);
  uint64_t v5 = v1[2];
  uint64_t v6 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v8 = v1[5];
  uint64_t v9 = (uint64_t)v1 + ((*(unsigned __int8 *)(v4 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *uint64_t v10 = v2;
  v10[1] = sub_10004A90C;
  return sub_100A4B968(v0, v5, v6, v7, v8, v9);
}

uint64_t sub_100A55CBC()
{
  sub_10012BA50();
  uint64_t v2 = type metadata accessor for WeatherData(0);
  sub_100179EF0();
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v6 = *(void *)(v5 + 64);
  uint64_t v7 = type metadata accessor for PreprocessedWeatherData();
  sub_100179C0C();
  type metadata accessor for NewsDataModel();
  sub_100179C0C();
  sub_100127B2C();
  type metadata accessor for Location();
  sub_100179C0C();
  sub_100127B2C();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v8 = v0 + v4 + *(int *)(v2 + 20);
  type metadata accessor for Locale();
  if (!sub_100182A28(v8))
  {
    sub_100162880();
    sub_10017B290();
    v9();
  }
  sub_1001502EC();
  sub_100179DC0();
  sub_100162F0C();
  v10();
  uint64_t v11 = v0 + v4 + *(int *)(v2 + 28);
  uint64_t v12 = sub_10017DF08(&qword_100E63738);
  if (!_s7Weather24LocationCompositionStateOwet_0(v11, 1, v12))
  {
    type metadata accessor for Date();
    sub_100179DC0();
    uint64_t v13 = sub_1001886FC();
    v14(v13);
  }
  sub_1001194F4();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    type metadata accessor for WeatherStatisticsModel();
    sub_100179DC0();
    uint64_t v16 = sub_1001886FC();
    v17(v16);
  }
  else if (!EnumCaseMultiPayload)
  {
    swift_bridgeObjectRelease();
  }
  uint64_t v18 = sub_1001D4090();
  if (!sub_1001E5818(v18))
  {
    type metadata accessor for Date();
    if (!sub_100182A28(v2))
    {
      sub_100162880();
      sub_10017B290();
      v19();
    }
    if (!sub_100182A28(v2 + *(int *)(v6 + 20)))
    {
      sub_100162880();
      sub_10017B290();
      v20();
    }
  }
  type metadata accessor for UUID();
  sub_100179DC0();
  sub_100162F0C();
  v21();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  type metadata accessor for FeelsLikeComponentPreprocessedDataModel();
  sub_1001CB76C();
  if (!sub_1001A2F80())
  {
    swift_bridgeObjectRelease();
    type metadata accessor for TemperatureScaleConfiguration();
    sub_100179DC0();
    sub_100162F0C();
    v22();
    type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
    sub_10017E98C();
  }
  sub_1001C8738();
  unint64_t v23 = v0 + v4 + *(int *)(v7 + 28);
  swift_bridgeObjectRelease();
  unint64_t v24 = v23 + *(int *)(type metadata accessor for HourlyForecastComponentPreprocessedDataModel() + 20);
  uint64_t v25 = type metadata accessor for WeatherDescription();
  if (!sub_10018B32C(v25))
  {
    sub_100162880();
    (*(void (**)(unint64_t, uint64_t))(v26 + 8))(v24, v1);
  }
  sub_100184D60();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  type metadata accessor for ListPreprocessedDataModel();
  type metadata accessor for Date();
  sub_100162E4C();
  sub_1001629EC();
  v27();
  type metadata accessor for WeatherConditionBackgroundTimeData();
  sub_10018C87C();
  if (!sub_1001A2F80())
  {
    sub_100162880();
    uint64_t v28 = sub_10019E034();
    v29(v28);
  }
  uint64_t v30 = sub_10019B270();
  if (!sub_100119134(v30))
  {
    sub_100162880();
    uint64_t v31 = sub_10017B4E8();
    v32(v31);
  }
  sub_100184D60();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_100162880();
  sub_100162F0C();
  v33();
  type metadata accessor for UVIndexComponentPreprocessedDataModel();
  sub_10017E98C();
  sub_100184D60();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  type metadata accessor for PressureTrend();
  sub_100179DC0();
  sub_100162F0C();
  v34();
  type metadata accessor for PressureComponentPreprocessedDataModel();
  sub_10017E98C();
  sub_10017E98C();
  sub_10017E98C();
  sub_10017E98C();
  sub_100184D60();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v35 = sub_100183660();
  v36(v35);
  if (!sub_1001A2F80())
  {
    sub_100162880();
    uint64_t v37 = sub_10019E034();
    v38(v37);
  }
  if (!sub_100188E48())
  {
    sub_100162880();
    uint64_t v39 = sub_10017B4E8();
    v40(v39);
  }
  sub_100184D60();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    type metadata accessor for News();
    sub_100179DC0();
    uint64_t v41 = sub_1001EA9E0();
    v42(v41);
  }
  sub_100162F0C();
  v43();
  swift_release();
  swift_release();
  sub_10011C0EC();
  return swift_deallocObject();
}

uint64_t sub_100A5640C()
{
  uint64_t v1 = type metadata accessor for WeatherData(0);
  sub_100164920(v1);
  uint64_t v2 = type metadata accessor for PreprocessedWeatherData();
  sub_100164920(v2);
  uint64_t v3 = type metadata accessor for NewsDataModel();
  sub_100164920(v3);
  uint64_t v4 = type metadata accessor for Location();
  sub_100164920(v4);
  sub_100199BD8();
  uint64_t v11 = *(void *)(v0 + v10);

  return sub_100A4C188(v5, v6, v7, v8, v9, v11);
}

uint64_t sub_100A56540()
{
  sub_10010977C();
  type metadata accessor for Location();
  sub_100179C0C();
  sub_100186DC8();
  uint64_t v0 = sub_100181AE0();
  v1(v0);
  swift_release();
  sub_1001093E8();
  sub_100162714();
  return swift_deallocObject();
}

uint64_t sub_100A565C8()
{
  uint64_t v2 = sub_1001D1468();
  sub_100164920(v2);
  sub_10020FA40();
  uint64_t v6 = *(void *)(v1 + v5);

  return sub_100A4C22C(v0, v3, v1 + v4, v6);
}

double sub_100A56634()
{
  *(void *)&double result = sub_100A566F0().n128_u64[0];
  return result;
}

uint64_t sub_100A56644()
{
  sub_10010977C();
  type metadata accessor for Location();
  sub_100179C0C();
  sub_1000A9E4C();
  swift_release();
  swift_release();
  uint64_t v0 = sub_100181AE0();
  v1(v0);
  swift_bridgeObjectRelease();
  sub_1001093E8();
  sub_100162714();
  return swift_deallocObject();
}

double sub_100A566E4()
{
  *(void *)&double result = sub_100A566F0().n128_u64[0];
  return result;
}

__n128 sub_100A566F0()
{
  uint64_t v0 = type metadata accessor for Location();
  sub_100164920(v0);
  sub_1001EC480();
  sub_100A4BFE4();
  return result;
}

uint64_t sub_100A56758(uint64_t a1)
{
  return a1;
}

uint64_t sub_100A56790(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if (a5) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_100A567A0()
{
  sub_10010977C();
  type metadata accessor for Location();
  sub_100179C0C();
  sub_100186DC8();
  swift_bridgeObjectRelease();
  uint64_t v0 = sub_100181AE0();
  v1(v0);
  swift_release();
  sub_1001093E8();
  sub_100162714();
  return swift_deallocObject();
}

uint64_t sub_100A56830()
{
  uint64_t v1 = type metadata accessor for Location();
  sub_100164920(v1);
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  unint64_t v6 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v7 = *(void *)(v0 + 16);
  uint64_t v8 = *(void *)(v0 + 24);
  uint64_t v9 = *(void *)(v0 + ((*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8));

  return sub_100A4C6F8(v7, v8, v0 + v6, v9);
}

uint64_t sub_100A5689C()
{
  sub_100162EA0();
  type metadata accessor for Location();
  sub_100179C0C();
  type metadata accessor for NewsDataModel();
  sub_100179EF0();
  swift_release();
  sub_100164938();
  v0();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    type metadata accessor for News();
    sub_100179DC0();
    uint64_t v1 = sub_1001EA9E0();
    v2(v1);
  }
  sub_100162694();
  return swift_deallocObject();
}

uint64_t sub_100A569BC()
{
  sub_10019D248();
  uint64_t v1 = type metadata accessor for Location();
  sub_100179C0C();
  uint64_t v3 = v2;
  unint64_t v4 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v6 = *(void *)(v5 + 64);
  uint64_t v7 = type metadata accessor for WeatherData(0);
  sub_100179EF0();
  unint64_t v9 = (v4 + v6 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = *(void *)(v10 + 64);
  uint64_t v12 = type metadata accessor for PreprocessedWeatherData();
  sub_100179C0C();
  uint64_t v14 = *(unsigned __int8 *)(v13 + 80);
  uint64_t v62 = *(void *)(v15 + 64);
  type metadata accessor for NewsDataModel();
  sub_100179C0C();
  uint64_t v63 = *(unsigned __int8 *)(v16 + 80);
  sub_100127B2C();
  swift_release();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v3 + 8))(v0 + v4, v1);
  uint64_t v17 = v0 + v9;
  swift_bridgeObjectRelease();
  sub_10018BF28();
  type metadata accessor for Locale();
  if (!sub_100182A28(v1))
  {
    sub_100162880();
    sub_10017B290();
    v18();
  }
  sub_10018BF28();
  type metadata accessor for WeatherDataModel();
  sub_100179DC0();
  sub_100162F0C();
  v19();
  uint64_t v20 = v17 + *(int *)(v7 + 28);
  uint64_t v21 = sub_10017DF08(&qword_100E63738);
  if (!_s7Weather24LocationCompositionStateOwet_0(v20, 1, v21))
  {
    type metadata accessor for Date();
    sub_100179DC0();
    uint64_t v22 = sub_100129018();
    v23(v22);
  }
  uint64_t v24 = sub_10018BF28();
  type metadata accessor for WeatherData.WeatherStatisticsState(v24);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    type metadata accessor for WeatherStatisticsModel();
    sub_100179DC0();
    uint64_t v26 = sub_100129018();
    v27(v26);
  }
  else if (!EnumCaseMultiPayload)
  {
    swift_bridgeObjectRelease();
  }
  unint64_t v28 = (v9 + v11 + v14) & ~v14;
  uint64_t v29 = v17 + *(int *)(v7 + 36);
  type metadata accessor for WeatherDataOverrides();
  if (!sub_100182A28(v29))
  {
    type metadata accessor for Date();
    if (!sub_10019D348())
    {
      sub_100162880();
      uint64_t v30 = sub_10017FD84();
      v31(v30);
    }
    if (!sub_10019D348())
    {
      sub_100162880();
      uint64_t v32 = sub_10017FD84();
      v33(v32);
    }
  }
  unint64_t v61 = v28;
  uint64_t v34 = v0 + v28;
  type metadata accessor for UUID();
  sub_100179DC0();
  sub_100162F0C();
  v35();
  swift_bridgeObjectRelease();
  sub_1001BFD28();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v36 = type metadata accessor for FeelsLikeComponentPreprocessedDataModel();
  uint64_t v37 = v17 + *(int *)(v36 + 28);
  uint64_t v38 = type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference(0);
  if (!_s7Weather24LocationCompositionStateOwet_0(v37, 1, v38))
  {
    swift_bridgeObjectRelease();
    type metadata accessor for TemperatureScaleConfiguration();
    sub_100179DC0();
    sub_100162F0C();
    v39();
    type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
    swift_bridgeObjectRelease();
  }
  sub_10017E98C();
  uint64_t v40 = v34 + *(int *)(v12 + 28);
  swift_bridgeObjectRelease();
  type metadata accessor for HourlyForecastComponentPreprocessedDataModel();
  sub_10018BF28();
  uint64_t v41 = type metadata accessor for WeatherDescription();
  if (!_s7Weather24LocationCompositionStateOwet_0(v36, 1, v41))
  {
    sub_100162880();
    (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v36, v41);
  }
  sub_1001BFD28();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v43 = v40 + *(int *)(type metadata accessor for ListPreprocessedDataModel() + 32);
  type metadata accessor for Date();
  sub_100162E4C();
  sub_1001629EC();
  v44();
  uint64_t v45 = type metadata accessor for WeatherConditionBackgroundTimeData();
  uint64_t v46 = v43 + *(int *)(v45 + 20);
  type metadata accessor for Elevation();
  if (!sub_100182A28(v46))
  {
    sub_100162880();
    sub_10017B290();
    v47();
  }
  uint64_t v48 = v43 + *(int *)(v45 + 24);
  uint64_t v49 = type metadata accessor for BackgroundMoonData();
  if (!_s7Weather24LocationCompositionStateOwet_0(v48, 1, v49))
  {
    sub_100162880();
    (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v48, v49);
  }
  sub_1001BFD28();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_100162880();
  sub_100162F0C();
  v51();
  type metadata accessor for UVIndexComponentPreprocessedDataModel();
  swift_bridgeObjectRelease();
  sub_1001BFD28();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  type metadata accessor for PressureTrend();
  sub_100179DC0();
  sub_100162F0C();
  v52();
  type metadata accessor for PressureComponentPreprocessedDataModel();
  sub_100183044();
  sub_100183044();
  sub_100183044();
  sub_100183044();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v53 = v34 + *(int *)(v12 + 56);
  sub_1001629EC();
  v54();
  if (!sub_100182A28(v53 + *(int *)(v45 + 20)))
  {
    sub_100162880();
    sub_10017B290();
    v55();
  }
  uint64_t v56 = v53 + *(int *)(v45 + 24);
  if (!_s7Weather24LocationCompositionStateOwet_0(v56, 1, v49))
  {
    sub_100162880();
    (*(void (**)(uint64_t, uint64_t))(v57 + 8))(v56, v49);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    type metadata accessor for News();
    sub_100179DC0();
    (*(void (**)(unint64_t))(v58 + 8))(v0 + ((v61 + v62 + v63) & ~v63));
  }
  sub_10017B3E4();
  return swift_deallocObject();
}

uint64_t sub_100A571F4()
{
  return sub_100A58CC0((uint64_t (*)(uint64_t))sub_100A4CA0C);
}

uint64_t sub_100A5720C()
{
  sub_10012BA50();
  uint64_t v2 = type metadata accessor for WeatherData(0);
  sub_100179EF0();
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v6 = *(void *)(v5 + 64);
  uint64_t v7 = type metadata accessor for PreprocessedWeatherData();
  sub_100179C0C();
  type metadata accessor for NewsDataModel();
  sub_100179C0C();
  sub_100127B2C();
  type metadata accessor for Location();
  sub_100179C0C();
  sub_100127B2C();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v8 = v0 + v4 + *(int *)(v2 + 20);
  type metadata accessor for Locale();
  if (!sub_100182A28(v8))
  {
    sub_100162880();
    sub_10017B290();
    v9();
  }
  sub_1001502EC();
  sub_100179DC0();
  sub_100162F0C();
  v10();
  uint64_t v11 = v0 + v4 + *(int *)(v2 + 28);
  uint64_t v12 = sub_10017DF08(&qword_100E63738);
  if (!_s7Weather24LocationCompositionStateOwet_0(v11, 1, v12))
  {
    type metadata accessor for Date();
    sub_100179DC0();
    uint64_t v13 = sub_1001886FC();
    v14(v13);
  }
  sub_1001194F4();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    type metadata accessor for WeatherStatisticsModel();
    sub_100179DC0();
    uint64_t v16 = sub_1001886FC();
    v17(v16);
  }
  else if (!EnumCaseMultiPayload)
  {
    swift_bridgeObjectRelease();
  }
  uint64_t v18 = sub_1001D4090();
  if (!sub_1001E5818(v18))
  {
    type metadata accessor for Date();
    if (!sub_100182A28(v2))
    {
      sub_100162880();
      sub_10017B290();
      v19();
    }
    if (!sub_100182A28(v2 + *(int *)(v6 + 20)))
    {
      sub_100162880();
      sub_10017B290();
      v20();
    }
  }
  type metadata accessor for UUID();
  sub_100179DC0();
  sub_100162F0C();
  v21();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  type metadata accessor for FeelsLikeComponentPreprocessedDataModel();
  sub_1001CB76C();
  if (!sub_1001A2F80())
  {
    swift_bridgeObjectRelease();
    type metadata accessor for TemperatureScaleConfiguration();
    sub_100179DC0();
    sub_100162F0C();
    v22();
    type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
    sub_10017E98C();
  }
  sub_1001C8738();
  unint64_t v23 = v0 + v4 + *(int *)(v7 + 28);
  swift_bridgeObjectRelease();
  unint64_t v24 = v23 + *(int *)(type metadata accessor for HourlyForecastComponentPreprocessedDataModel() + 20);
  uint64_t v25 = type metadata accessor for WeatherDescription();
  if (!sub_10018B32C(v25))
  {
    sub_100162880();
    (*(void (**)(unint64_t, uint64_t))(v26 + 8))(v24, v1);
  }
  sub_100184D60();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  type metadata accessor for ListPreprocessedDataModel();
  type metadata accessor for Date();
  sub_100162E4C();
  sub_1001629EC();
  v27();
  type metadata accessor for WeatherConditionBackgroundTimeData();
  sub_10018C87C();
  if (!sub_1001A2F80())
  {
    sub_100162880();
    uint64_t v28 = sub_10019E034();
    v29(v28);
  }
  uint64_t v30 = sub_10019B270();
  if (!sub_100119134(v30))
  {
    sub_100162880();
    uint64_t v31 = sub_10017B4E8();
    v32(v31);
  }
  sub_100184D60();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_100162880();
  sub_100162F0C();
  v33();
  type metadata accessor for UVIndexComponentPreprocessedDataModel();
  sub_10017E98C();
  sub_100184D60();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  type metadata accessor for PressureTrend();
  sub_100179DC0();
  sub_100162F0C();
  v34();
  type metadata accessor for PressureComponentPreprocessedDataModel();
  sub_10017E98C();
  sub_10017E98C();
  sub_10017E98C();
  sub_10017E98C();
  sub_100184D60();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v35 = sub_100183660();
  v36(v35);
  if (!sub_1001A2F80())
  {
    sub_100162880();
    uint64_t v37 = sub_10019E034();
    v38(v37);
  }
  if (!sub_100188E48())
  {
    sub_100162880();
    uint64_t v39 = sub_10017B4E8();
    v40(v39);
  }
  sub_100184D60();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    type metadata accessor for News();
    sub_100179DC0();
    uint64_t v41 = sub_1001EA9E0();
    v42(v41);
  }
  sub_100162F0C();
  v43();
  swift_release();
  swift_release();
  sub_10011C0EC();
  return swift_deallocObject();
}

uint64_t sub_100A5795C()
{
  uint64_t v1 = type metadata accessor for WeatherData(0);
  sub_100164920(v1);
  uint64_t v2 = type metadata accessor for PreprocessedWeatherData();
  sub_100164920(v2);
  uint64_t v3 = type metadata accessor for NewsDataModel();
  sub_100164920(v3);
  uint64_t v4 = type metadata accessor for Location();
  sub_100164920(v4);
  sub_10012B710();
  sub_100199BD8();
  uint64_t v11 = *(void *)(v0 + v10);

  return sub_100A4460C(v5, v6, v7, v8, v9, v11);
}

uint64_t sub_100A57A74()
{
  type metadata accessor for Location();
  sub_100179C0C();
  swift_release();
  uint64_t v0 = sub_100181AE0();
  v1(v0);
  sub_1001093E8();

  return swift_deallocObject();
}

uint64_t sub_100A57B04()
{
  uint64_t v0 = sub_10019C9F8();
  sub_100164920(v0);
  uint64_t v1 = (uint64_t *)sub_1001D4110();
  return sub_100A42B94(v1, v2, v3, v4);
}

uint64_t sub_100A57B70()
{
  return sub_100A4DB50(v0[2], v0[3], v0[4]);
}

#error "100A57C60: call analysis failed (funcsize=84)"

uint64_t sub_100A57CD4()
{
  uint64_t v4 = sub_1001A4BD0();
  sub_100164920(v4);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v8 = *(void *)(v7 + 64);
  uint64_t v9 = type metadata accessor for Location();
  sub_100164920(v9);
  unint64_t v11 = (v6 + v8 + *(unsigned __int8 *)(v10 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v12 = sub_10019AEE4();
  sub_100164920(v12);
  uint64_t v14 = v13;
  uint64_t v16 = v15;
  unint64_t v17 = (v3 + *(unsigned __int8 *)(v14 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  return sub_100A4DF78(v1, *(void *)(v0 + 16), v0 + v6, v0 + v11, *(void *)(v0 + v2), *(void *)(v0 + v3), v0 + v17, *(unsigned __int8 *)(v0 + v17 + *(void *)(v16 + 64)));
}

uint64_t sub_100A57DCC()
{
  sub_100162EA0();
  type metadata accessor for Location();
  sub_100179C0C();
  type metadata accessor for AppConfiguration();
  sub_100179C0C();
  swift_release();
  swift_release();
  uint64_t v0 = sub_100188F28();
  v1(v0);
  sub_100164938();
  v2();
  sub_100164ABC();
  sub_100162694();
  return swift_deallocObject();
}

uint64_t sub_100A57EB4()
{
  uint64_t v2 = sub_1001D1468();
  sub_100164920(v2);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v6 = *(void *)(v5 + 64);
  uint64_t v7 = type metadata accessor for AppConfiguration();
  sub_100164920(v7);
  uint64_t v9 = v8;
  uint64_t v11 = v10;
  unint64_t v12 = (v4 + v6 + *(unsigned __int8 *)(v9 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v13 = *(void *)(v1 + 16);
  uint64_t v14 = *(void *)(v1 + 24);
  char v15 = *(unsigned char *)(v1 + v12 + *(void *)(v11 + 64));

  return sub_100A4EE40(v0, v13, v14, v1 + v4, v1 + v12, v15);
}

uint64_t sub_100A57F60()
{
  sub_100162EA0();
  type metadata accessor for Location();
  sub_100179C0C();
  sub_1001290DC();
  sub_100179C0C();
  swift_release();
  uint64_t v0 = sub_100188F28();
  v1(v0);
  swift_release();
  uint64_t v2 = sub_10019B788();
  v3(v2);
  sub_1001D167C();
  sub_100162694();
  return swift_deallocObject();
}

void sub_100A58038()
{
  uint64_t v3 = sub_1001D1468();
  sub_100164920(v3);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = sub_10015852C();
  sub_1001627C0(v6);
  uint64_t v8 = *(void *)(v1 + 16);
  uint64_t v9 = *(void *)(v1 + v2);
  uint64_t v10 = v1 + ((v2 + *(unsigned __int8 *)(v7 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));

  sub_100A4EF6C(v0, v8, v1 + v5, v9, v10);
}

uint64_t sub_100A580C4()
{
  sub_10010977C();
  type metadata accessor for Location();
  sub_100179C0C();
  sub_1000A9E4C();
  swift_release();
  uint64_t v0 = sub_100181AE0();
  v1(v0);
  swift_errorRelease();
  swift_release();
  sub_1001093E8();
  sub_100162714();
  return swift_deallocObject();
}

uint64_t sub_100A58168()
{
  uint64_t v1 = type metadata accessor for Location();
  sub_100164920(v1);
  uint64_t v2 = sub_10012B710();
  uint64_t v5 = *(void *)(v0 + v4);
  uint64_t v7 = *(void *)(v0 + v6);

  return sub_100A4F9C8(v2, v0 + v3, v5, v7);
}

uint64_t sub_100A581CC()
{
  sub_100162EA0();
  type metadata accessor for Location();
  sub_100179C0C();
  type metadata accessor for WeatherStatisticsModel();
  sub_100179C0C();
  swift_release();
  uint64_t v0 = sub_100188F28();
  v1(v0);
  sub_100164938();
  v2();
  swift_release();
  sub_100164ABC();
  sub_100162694();
  return swift_deallocObject();
}

uint64_t sub_100A582BC()
{
  uint64_t v1 = type metadata accessor for Location();
  sub_100164920(v1);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v5 = *(void *)(v4 + 64);
  uint64_t v6 = type metadata accessor for WeatherStatisticsModel();
  sub_100164920(v6);
  uint64_t v8 = v7;
  uint64_t v10 = v9;
  unint64_t v11 = (v3 + v5 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v12 = *(void *)(v0 + 16);
  uint64_t v13 = *(void *)(v0 + ((*(void *)(v10 + 64) + v11 + 7) & 0xFFFFFFFFFFFFFFF8));

  return sub_100A4F88C(v12, v0 + v3, v0 + v11, v13);
}

uint64_t sub_100A58370()
{
  sub_100162EA0();
  type metadata accessor for WeatherData.WeatherStatisticsState(0);
  sub_100179EF0();
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  type metadata accessor for Location();
  sub_100179C0C();
  swift_release();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    type metadata accessor for WeatherStatisticsModel();
    sub_100179DC0();
    (*(void (**)(unint64_t))(v4 + 8))(v0 + v2);
  }
  else if (!EnumCaseMultiPayload)
  {
    swift_bridgeObjectRelease();
  }
  swift_release();
  uint64_t v5 = sub_100181AE0();
  v6(v5);
  sub_1001093E8();
  sub_100162694();
  return swift_deallocObject();
}

uint64_t sub_100A584A0()
{
  uint64_t v1 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
  sub_100164920(v1);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v5 = v3 + *(void *)(v4 + 64);
  uint64_t v6 = type metadata accessor for Location();
  sub_1001627C0(v6);
  uint64_t v8 = *(void *)(v0 + 16);
  char v9 = *(unsigned char *)(v0 + v5);
  uint64_t v10 = *(void *)((v5 & 0xFFFFFFFFFFFFFFF8) + v0 + 8);
  uint64_t v11 = v0
      + (((v5 & 0xFFFFFFFFFFFFFFF8) + *(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));

  return sub_100A4FCCC(v8, v0 + v3, v9, v10, v11);
}

uint64_t sub_100A58548()
{
  return sub_10017D164();
}

uint64_t sub_100A58554(uint64_t *a1, uint64_t a2)
{
  return sub_100A426B4(a1, a2, *(unsigned __int8 *)(v2 + 16));
}

#error "100A5865C: call analysis failed (funcsize=90)"

uint64_t sub_100A586E0()
{
  sub_100162EA0();
  type metadata accessor for Location();
  sub_100179C0C();
  sub_100A5B724();
  type metadata accessor for AppConfiguration();
  sub_100179C0C();
  swift_release();
  swift_release();
  uint64_t v0 = sub_100188F28();
  v1(v0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v2 = sub_10019B788();
  v3(v2);
  sub_100164ABC();
  sub_100162694();
  return swift_deallocObject();
}

void sub_100A587D8()
{
  uint64_t v2 = sub_1001D1468();
  sub_100164920(v2);
  sub_1001EA8B0();
  uint64_t v3 = type metadata accessor for AppConfiguration();
  sub_100164920(v3);
  sub_10018A4C8();
  sub_100A503B4(v0, v5, v6, v7, v8, v9, v10, v11, v12, *(unsigned char *)(v1 + v4));
}

uint64_t sub_100A58880()
{
  type metadata accessor for Location();
  sub_100179C0C();
  swift_release();
  swift_release();
  uint64_t v0 = sub_100181AE0();
  v1(v0);
  sub_10012609C();

  return swift_deallocObject();
}

uint64_t sub_100A58914()
{
  sub_1001837E8();
  type metadata accessor for Location();
  sub_100179C0C();
  type metadata accessor for AppConfiguration();
  sub_100179C0C();
  swift_release();
  swift_release();
  sub_1001649A8();
  v0();
  sub_100164938();
  v1();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  sub_100166A98();
  return swift_deallocObject();
}

uint64_t sub_100A58A58()
{
  sub_1001837E8();
  type metadata accessor for Location();
  sub_100179C0C();
  sub_1001290DC();
  sub_100179C0C();
  swift_release();
  swift_release();
  uint64_t v0 = sub_100188F28();
  v1(v0);
  swift_release();
  swift_release();
  uint64_t v2 = sub_10019B788();
  v3(v2);
  swift_release();
  sub_100166A98();
  return swift_deallocObject();
}

void sub_100A58B64()
{
  uint64_t v2 = sub_1001D1468();
  sub_100164920(v2);
  uint64_t v3 = sub_10015852C();
  sub_100164920(v3);
  sub_10018A4C8();
  sub_100A504DC(v0, v5, v6, v7, v8, v9, v10, v11, v12, *(void *)(v1 + v4), *(void *)(v1 + v4 + 8));
}

uint64_t sub_100A58C18()
{
  sub_10010977C();
  type metadata accessor for Location();
  sub_100179C0C();
  sub_100186DC8();
  swift_release();
  uint64_t v0 = sub_100181AE0();
  v1(v0);
  swift_errorRelease();
  sub_1001093E8();
  sub_100162714();
  return swift_deallocObject();
}

uint64_t sub_100A58CA8()
{
  return sub_100A58CC0((uint64_t (*)(uint64_t))sub_100A51390);
}

uint64_t sub_100A58CC0(uint64_t (*a1)(uint64_t))
{
  uint64_t v1 = type metadata accessor for Location();
  sub_100164920(v1);
  uint64_t v2 = sub_1001EC480();

  return a1(v2);
}

uint64_t sub_100A58D34()
{
  type metadata accessor for Location();
  sub_100179C0C();
  unint64_t v13 = (((((*(void *)(v2 + 64)
           + ((*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80))
           + 7) & 0xFFFFFFFFFFFFFFF8)
         + 39) & 0xFFFFFFFFFFFFFFF8)
       + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v15 = type metadata accessor for OSSignpostID();
  sub_100179C0C();
  uint64_t v4 = v3;
  unint64_t v5 = (*(unsigned __int8 *)(v3 + 80) + v13 + 8) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v7 = (*(void *)(v6 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v14 = type metadata accessor for AvailableDataSets();
  sub_100179C0C();
  uint64_t v9 = v8;
  unint64_t v10 = (*(unsigned __int8 *)(v9 + 80) + v7 + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  sub_100164FC8();
  v11();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v4 + 8))(v0 + v5, v15);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v9 + 8))(v0 + v10, v14);

  return swift_deallocObject();
}

void sub_100A58F00()
{
  uint64_t v2 = type metadata accessor for Location();
  sub_100164920(v2);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  sub_1001A69CC();
  unint64_t v5 = (v1 + 39) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v7 = type metadata accessor for OSSignpostID();
  sub_100164920(v7);
  unint64_t v9 = (*(unsigned __int8 *)(v8 + 80) + v6 + 8) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  unint64_t v11 = (*(void *)(v10 + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v12 = type metadata accessor for AvailableDataSets();
  sub_1001627C0(v12);
  sub_100A50CF8(v0 + v4, *(void (**)(_OWORD *__return_ptr))(v0 + v1), *(void *)(v0 + v1 + 8), *(void *)(v0 + v1 + 16), *(void *)(v0 + v1 + 24), *(void *)(v0 + v5), *(void *)(v0 + v6), v0 + v9, *(uint64_t (**)(uint64_t))(v0 + v11), *(void *)(v0 + v11 + 8), v0 + ((*(unsigned __int8 *)(v13 + 80) + v11 + 16) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80)));
}

uint64_t *sub_100A59014(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for CurrentWeather();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    unint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_10017DF08(&qword_100E6E900);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v10, 1, v11))
    {
      uint64_t v12 = sub_10017DF08(&qword_100E6E8F8);
      memcpy(v9, v10, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v9, 0, 1, v11);
    }
    uint64_t v14 = a3[6];
    uint64_t v15 = (char *)a1 + v14;
    uint64_t v16 = (char *)a2 + v14;
    uint64_t v17 = sub_10017DF08(&qword_100E66CC8);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
    uint64_t v18 = a3[7];
    uint64_t v19 = (char *)a1 + v18;
    uint64_t v20 = (char *)a2 + v18;
    uint64_t v21 = sub_10017DF08(&qword_100E66CA0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16))(v19, v20, v21);
    uint64_t v22 = a3[8];
    unint64_t v23 = (char *)a1 + v22;
    unint64_t v24 = (char *)a2 + v22;
    uint64_t v25 = type metadata accessor for AirQuality();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v24, 1, v25))
    {
      uint64_t v26 = sub_10017DF08(&qword_100E885C0);
      memcpy(v23, v24, *(void *)(*(void *)(v26 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 16))(v23, v24, v25);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v23, 0, 1, v25);
    }
    uint64_t v27 = a3[9];
    uint64_t v28 = (char *)a1 + v27;
    uint64_t v29 = (char *)a2 + v27;
    uint64_t v30 = type metadata accessor for WeatherChanges();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v29, 1, v30))
    {
      uint64_t v31 = sub_10017DF08(&qword_100E6D1C8);
      memcpy(v28, v29, *(void *)(*(void *)(v31 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 16))(v28, v29, v30);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v28, 0, 1, v30);
    }
    uint64_t v32 = a3[11];
    *(uint64_t *)((char *)a1 + a3[10]) = *(uint64_t *)((char *)a2 + a3[10]);
    uint64_t v33 = (char *)a1 + v32;
    uint64_t v34 = (char *)a2 + v32;
    uint64_t v35 = type metadata accessor for WeatherAvailability();
    uint64_t v36 = *(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 16);
    swift_bridgeObjectRetain();
    v36(v33, v34, v35);
    uint64_t v37 = a3[12];
    uint64_t v38 = (char *)a1 + v37;
    uint64_t v39 = (char *)a2 + v37;
    uint64_t v40 = type metadata accessor for News();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v39, 1, v40))
    {
      uint64_t v41 = sub_10017DF08(&qword_100EABE80);
      memcpy(v38, v39, *(void *)(*(void *)(v41 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v40 - 8) + 16))(v38, v39, v40);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v38, 0, 1, v40);
    }
    uint64_t v42 = a3[13];
    uint64_t v43 = (char *)a1 + v42;
    uint64_t v44 = (char *)a2 + v42;
    uint64_t v45 = type metadata accessor for HistoricalComparisons();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v44, 1, v45))
    {
      uint64_t v46 = sub_10017DF08(&qword_100E6B8B8);
      memcpy(v43, v44, *(void *)(*(void *)(v46 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v45 - 8) + 16))(v43, v44, v45);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v43, 0, 1, v45);
    }
  }
  return a1;
}

uint64_t sub_100A59518(uint64_t a1, int *a2)
{
  uint64_t v4 = type metadata accessor for CurrentWeather();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + a2[5];
  uint64_t v6 = sub_10017DF08(&qword_100E6E900);
  if (!_s7Weather24LocationCompositionStateOwet_0(v5, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  }
  uint64_t v7 = a1 + a2[6];
  uint64_t v8 = sub_10017DF08(&qword_100E66CC8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = a1 + a2[7];
  uint64_t v10 = sub_10017DF08(&qword_100E66CA0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  uint64_t v11 = a1 + a2[8];
  uint64_t v12 = type metadata accessor for AirQuality();
  if (!_s7Weather24LocationCompositionStateOwet_0(v11, 1, v12)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  }
  uint64_t v13 = a1 + a2[9];
  uint64_t v14 = type metadata accessor for WeatherChanges();
  if (!_s7Weather24LocationCompositionStateOwet_0(v13, 1, v14)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
  }
  swift_bridgeObjectRelease();
  uint64_t v15 = a1 + a2[11];
  uint64_t v16 = type metadata accessor for WeatherAvailability();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
  uint64_t v17 = a1 + a2[12];
  uint64_t v18 = type metadata accessor for News();
  if (!_s7Weather24LocationCompositionStateOwet_0(v17, 1, v18)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(v17, v18);
  }
  uint64_t v19 = a1 + a2[13];
  uint64_t v20 = type metadata accessor for HistoricalComparisons();
  uint64_t result = _s7Weather24LocationCompositionStateOwet_0(v19, 1, v20);
  if (!result)
  {
    uint64_t v22 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v20 - 8) + 8);
    return v22(v19, v20);
  }
  return result;
}

uint64_t sub_100A59828(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for CurrentWeather();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = sub_10017DF08(&qword_100E6E900);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v10))
  {
    uint64_t v11 = sub_10017DF08(&qword_100E6E8F8);
    memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v8, 0, 1, v10);
  }
  uint64_t v12 = a3[6];
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = sub_10017DF08(&qword_100E66CC8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
  uint64_t v16 = a3[7];
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  uint64_t v19 = sub_10017DF08(&qword_100E66CA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
  uint64_t v20 = a3[8];
  uint64_t v21 = (void *)(a1 + v20);
  uint64_t v22 = (const void *)(a2 + v20);
  uint64_t v23 = type metadata accessor for AirQuality();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v22, 1, v23))
  {
    uint64_t v24 = sub_10017DF08(&qword_100E885C0);
    memcpy(v21, v22, *(void *)(*(void *)(v24 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v21, 0, 1, v23);
  }
  uint64_t v25 = a3[9];
  uint64_t v26 = (void *)(a1 + v25);
  uint64_t v27 = (const void *)(a2 + v25);
  uint64_t v28 = type metadata accessor for WeatherChanges();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v27, 1, v28))
  {
    uint64_t v29 = sub_10017DF08(&qword_100E6D1C8);
    memcpy(v26, v27, *(void *)(*(void *)(v29 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v28 - 8) + 16))(v26, v27, v28);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v26, 0, 1, v28);
  }
  uint64_t v30 = a3[11];
  *(void *)(a1 + a3[10]) = *(void *)(a2 + a3[10]);
  uint64_t v31 = a1 + v30;
  uint64_t v32 = a2 + v30;
  uint64_t v33 = type metadata accessor for WeatherAvailability();
  uint64_t v34 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 16);
  swift_bridgeObjectRetain();
  v34(v31, v32, v33);
  uint64_t v35 = a3[12];
  uint64_t v36 = (void *)(a1 + v35);
  uint64_t v37 = (const void *)(a2 + v35);
  uint64_t v38 = type metadata accessor for News();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v37, 1, v38))
  {
    uint64_t v39 = sub_10017DF08(&qword_100EABE80);
    memcpy(v36, v37, *(void *)(*(void *)(v39 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v38 - 8) + 16))(v36, v37, v38);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v36, 0, 1, v38);
  }
  uint64_t v40 = a3[13];
  uint64_t v41 = (void *)(a1 + v40);
  uint64_t v42 = (const void *)(a2 + v40);
  uint64_t v43 = type metadata accessor for HistoricalComparisons();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v42, 1, v43))
  {
    uint64_t v44 = sub_10017DF08(&qword_100E6B8B8);
    memcpy(v41, v42, *(void *)(*(void *)(v44 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v43 - 8) + 16))(v41, v42, v43);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v41, 0, 1, v43);
  }
  return a1;
}

uint64_t sub_100A59CDC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for CurrentWeather();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = sub_10017DF08(&qword_100E6E900);
  int v11 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v10);
  int v12 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v10);
  if (v11)
  {
    if (!v12)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v13 = *(void *)(v10 - 8);
  if (v12)
  {
    (*(void (**)(void *, uint64_t))(v13 + 8))(v8, v10);
LABEL_6:
    uint64_t v14 = sub_10017DF08(&qword_100E6E8F8);
    memcpy(v8, v9, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(v13 + 24))(v8, v9, v10);
LABEL_7:
  uint64_t v15 = a3[6];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_10017DF08(&qword_100E66CC8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 24))(v16, v17, v18);
  uint64_t v19 = a3[7];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_10017DF08(&qword_100E66CA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 24))(v20, v21, v22);
  uint64_t v23 = a3[8];
  uint64_t v24 = (void *)(a1 + v23);
  uint64_t v25 = (const void *)(a2 + v23);
  uint64_t v26 = type metadata accessor for AirQuality();
  int v27 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v24, 1, v26);
  int v28 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v25, 1, v26);
  if (v27)
  {
    if (!v28)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v26 - 8) + 16))(v24, v25, v26);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v24, 0, 1, v26);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  uint64_t v29 = *(void *)(v26 - 8);
  if (v28)
  {
    (*(void (**)(void *, uint64_t))(v29 + 8))(v24, v26);
LABEL_12:
    uint64_t v30 = sub_10017DF08(&qword_100E885C0);
    memcpy(v24, v25, *(void *)(*(void *)(v30 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, const void *, uint64_t))(v29 + 24))(v24, v25, v26);
LABEL_13:
  uint64_t v31 = a3[9];
  uint64_t v32 = (void *)(a1 + v31);
  uint64_t v33 = (const void *)(a2 + v31);
  uint64_t v34 = type metadata accessor for WeatherChanges();
  int v35 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v32, 1, v34);
  int v36 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v33, 1, v34);
  if (v35)
  {
    if (!v36)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v34 - 8) + 16))(v32, v33, v34);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v32, 0, 1, v34);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  uint64_t v37 = *(void *)(v34 - 8);
  if (v36)
  {
    (*(void (**)(void *, uint64_t))(v37 + 8))(v32, v34);
LABEL_18:
    uint64_t v38 = sub_10017DF08(&qword_100E6D1C8);
    memcpy(v32, v33, *(void *)(*(void *)(v38 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(void *, const void *, uint64_t))(v37 + 24))(v32, v33, v34);
LABEL_19:
  *(void *)(a1 + a3[10]) = *(void *)(a2 + a3[10]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v39 = a3[11];
  uint64_t v40 = a1 + v39;
  uint64_t v41 = a2 + v39;
  uint64_t v42 = type metadata accessor for WeatherAvailability();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 24))(v40, v41, v42);
  uint64_t v43 = a3[12];
  uint64_t v44 = (void *)(a1 + v43);
  uint64_t v45 = (const void *)(a2 + v43);
  uint64_t v46 = type metadata accessor for News();
  int v47 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v44, 1, v46);
  int v48 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v45, 1, v46);
  if (v47)
  {
    if (!v48)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v46 - 8) + 16))(v44, v45, v46);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v44, 0, 1, v46);
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  uint64_t v49 = *(void *)(v46 - 8);
  if (v48)
  {
    (*(void (**)(void *, uint64_t))(v49 + 8))(v44, v46);
LABEL_24:
    uint64_t v50 = sub_10017DF08(&qword_100EABE80);
    memcpy(v44, v45, *(void *)(*(void *)(v50 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(void *, const void *, uint64_t))(v49 + 24))(v44, v45, v46);
LABEL_25:
  uint64_t v51 = a3[13];
  uint64_t v52 = (void *)(a1 + v51);
  uint64_t v53 = (const void *)(a2 + v51);
  uint64_t v54 = type metadata accessor for HistoricalComparisons();
  int v55 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v52, 1, v54);
  int v56 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v53, 1, v54);
  if (!v55)
  {
    uint64_t v57 = *(void *)(v54 - 8);
    if (!v56)
    {
      (*(void (**)(void *, const void *, uint64_t))(v57 + 24))(v52, v53, v54);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v57 + 8))(v52, v54);
    goto LABEL_30;
  }
  if (v56)
  {
LABEL_30:
    uint64_t v58 = sub_10017DF08(&qword_100E6B8B8);
    memcpy(v52, v53, *(void *)(*(void *)(v58 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(void *)(v54 - 8) + 16))(v52, v53, v54);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v52, 0, 1, v54);
  return a1;
}

uint64_t sub_100A5A410(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for CurrentWeather();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = sub_10017DF08(&qword_100E6E900);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v10))
  {
    uint64_t v11 = sub_10017DF08(&qword_100E6E8F8);
    memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v8, 0, 1, v10);
  }
  uint64_t v12 = a3[6];
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = sub_10017DF08(&qword_100E66CC8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
  uint64_t v16 = a3[7];
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  uint64_t v19 = sub_10017DF08(&qword_100E66CA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 32))(v17, v18, v19);
  uint64_t v20 = a3[8];
  uint64_t v21 = (void *)(a1 + v20);
  uint64_t v22 = (const void *)(a2 + v20);
  uint64_t v23 = type metadata accessor for AirQuality();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v22, 1, v23))
  {
    uint64_t v24 = sub_10017DF08(&qword_100E885C0);
    memcpy(v21, v22, *(void *)(*(void *)(v24 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v23 - 8) + 32))(v21, v22, v23);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v21, 0, 1, v23);
  }
  uint64_t v25 = a3[9];
  uint64_t v26 = (void *)(a1 + v25);
  int v27 = (const void *)(a2 + v25);
  uint64_t v28 = type metadata accessor for WeatherChanges();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v27, 1, v28))
  {
    uint64_t v29 = sub_10017DF08(&qword_100E6D1C8);
    memcpy(v26, v27, *(void *)(*(void *)(v29 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v28 - 8) + 32))(v26, v27, v28);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v26, 0, 1, v28);
  }
  uint64_t v30 = a3[11];
  *(void *)(a1 + a3[10]) = *(void *)(a2 + a3[10]);
  uint64_t v31 = a1 + v30;
  uint64_t v32 = a2 + v30;
  uint64_t v33 = type metadata accessor for WeatherAvailability();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 32))(v31, v32, v33);
  uint64_t v34 = a3[12];
  int v35 = (void *)(a1 + v34);
  int v36 = (const void *)(a2 + v34);
  uint64_t v37 = type metadata accessor for News();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v36, 1, v37))
  {
    uint64_t v38 = sub_10017DF08(&qword_100EABE80);
    memcpy(v35, v36, *(void *)(*(void *)(v38 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v37 - 8) + 32))(v35, v36, v37);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v35, 0, 1, v37);
  }
  uint64_t v39 = a3[13];
  uint64_t v40 = (void *)(a1 + v39);
  uint64_t v41 = (const void *)(a2 + v39);
  uint64_t v42 = type metadata accessor for HistoricalComparisons();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v41, 1, v42))
  {
    uint64_t v43 = sub_10017DF08(&qword_100E6B8B8);
    memcpy(v40, v41, *(void *)(*(void *)(v43 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v42 - 8) + 32))(v40, v41, v42);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v40, 0, 1, v42);
  }
  return a1;
}

uint64_t sub_100A5A8A8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for CurrentWeather();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = sub_10017DF08(&qword_100E6E900);
  int v11 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v10);
  int v12 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v10);
  if (v11)
  {
    if (!v12)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v13 = *(void *)(v10 - 8);
  if (v12)
  {
    (*(void (**)(void *, uint64_t))(v13 + 8))(v8, v10);
LABEL_6:
    uint64_t v14 = sub_10017DF08(&qword_100E6E8F8);
    memcpy(v8, v9, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(v13 + 40))(v8, v9, v10);
LABEL_7:
  uint64_t v15 = a3[6];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_10017DF08(&qword_100E66CC8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 40))(v16, v17, v18);
  uint64_t v19 = a3[7];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_10017DF08(&qword_100E66CA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 40))(v20, v21, v22);
  uint64_t v23 = a3[8];
  uint64_t v24 = (void *)(a1 + v23);
  uint64_t v25 = (const void *)(a2 + v23);
  uint64_t v26 = type metadata accessor for AirQuality();
  int v27 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v24, 1, v26);
  int v28 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v25, 1, v26);
  if (v27)
  {
    if (!v28)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v26 - 8) + 32))(v24, v25, v26);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v24, 0, 1, v26);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  uint64_t v29 = *(void *)(v26 - 8);
  if (v28)
  {
    (*(void (**)(void *, uint64_t))(v29 + 8))(v24, v26);
LABEL_12:
    uint64_t v30 = sub_10017DF08(&qword_100E885C0);
    memcpy(v24, v25, *(void *)(*(void *)(v30 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, const void *, uint64_t))(v29 + 40))(v24, v25, v26);
LABEL_13:
  uint64_t v31 = a3[9];
  uint64_t v32 = (void *)(a1 + v31);
  uint64_t v33 = (const void *)(a2 + v31);
  uint64_t v34 = type metadata accessor for WeatherChanges();
  int v35 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v32, 1, v34);
  int v36 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v33, 1, v34);
  if (v35)
  {
    if (!v36)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v34 - 8) + 32))(v32, v33, v34);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v32, 0, 1, v34);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  uint64_t v37 = *(void *)(v34 - 8);
  if (v36)
  {
    (*(void (**)(void *, uint64_t))(v37 + 8))(v32, v34);
LABEL_18:
    uint64_t v38 = sub_10017DF08(&qword_100E6D1C8);
    memcpy(v32, v33, *(void *)(*(void *)(v38 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(void *, const void *, uint64_t))(v37 + 40))(v32, v33, v34);
LABEL_19:
  *(void *)(a1 + a3[10]) = *(void *)(a2 + a3[10]);
  swift_bridgeObjectRelease();
  uint64_t v39 = a3[11];
  uint64_t v40 = a1 + v39;
  uint64_t v41 = a2 + v39;
  uint64_t v42 = type metadata accessor for WeatherAvailability();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 40))(v40, v41, v42);
  uint64_t v43 = a3[12];
  uint64_t v44 = (void *)(a1 + v43);
  uint64_t v45 = (const void *)(a2 + v43);
  uint64_t v46 = type metadata accessor for News();
  int v47 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v44, 1, v46);
  int v48 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v45, 1, v46);
  if (v47)
  {
    if (!v48)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v46 - 8) + 32))(v44, v45, v46);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v44, 0, 1, v46);
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  uint64_t v49 = *(void *)(v46 - 8);
  if (v48)
  {
    (*(void (**)(void *, uint64_t))(v49 + 8))(v44, v46);
LABEL_24:
    uint64_t v50 = sub_10017DF08(&qword_100EABE80);
    memcpy(v44, v45, *(void *)(*(void *)(v50 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(void *, const void *, uint64_t))(v49 + 40))(v44, v45, v46);
LABEL_25:
  uint64_t v51 = a3[13];
  uint64_t v52 = (void *)(a1 + v51);
  uint64_t v53 = (const void *)(a2 + v51);
  uint64_t v54 = type metadata accessor for HistoricalComparisons();
  int v55 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v52, 1, v54);
  int v56 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v53, 1, v54);
  if (!v55)
  {
    uint64_t v57 = *(void *)(v54 - 8);
    if (!v56)
    {
      (*(void (**)(void *, const void *, uint64_t))(v57 + 40))(v52, v53, v54);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v57 + 8))(v52, v54);
    goto LABEL_30;
  }
  if (v56)
  {
LABEL_30:
    uint64_t v58 = sub_10017DF08(&qword_100E6B8B8);
    memcpy(v52, v53, *(void *)(*(void *)(v58 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(void *)(v54 - 8) + 32))(v52, v53, v54);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v52, 0, 1, v54);
  return a1;
}

uint64_t sub_100A5AFD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100A5AFE8);
}

uint64_t sub_100A5AFE8(uint64_t a1, uint64_t a2, int *a3)
{
  type metadata accessor for CurrentWeather();
  sub_100162F30();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1;
LABEL_25:
    return _s7Weather24LocationCompositionStateOwet_0(v9, a2, v8);
  }
  sub_10017DF08(&qword_100E6E8F8);
  sub_100162F30();
  if (*(_DWORD *)(v11 + 84) == a2)
  {
    uint64_t v8 = v10;
    uint64_t v12 = a3[5];
LABEL_24:
    uint64_t v9 = a1 + v12;
    goto LABEL_25;
  }
  sub_10017DF08(&qword_100E66CC8);
  sub_100162F30();
  if (*(_DWORD *)(v14 + 84) == a2)
  {
    uint64_t v8 = v13;
    uint64_t v12 = a3[6];
    goto LABEL_24;
  }
  sub_10017DF08(&qword_100E66CA0);
  sub_100162F30();
  if (*(_DWORD *)(v16 + 84) == a2)
  {
    uint64_t v8 = v15;
    uint64_t v12 = a3[7];
    goto LABEL_24;
  }
  sub_10017DF08(&qword_100E885C0);
  sub_100162F30();
  if (*(_DWORD *)(v18 + 84) == a2)
  {
    uint64_t v8 = v17;
    uint64_t v12 = a3[8];
    goto LABEL_24;
  }
  sub_10017DF08(&qword_100E6D1C8);
  sub_100162F30();
  if (*(_DWORD *)(v20 + 84) == a2)
  {
    uint64_t v8 = v19;
    uint64_t v12 = a3[9];
    goto LABEL_24;
  }
  if (a2 != 2147483646)
  {
    type metadata accessor for WeatherAvailability();
    sub_100162F30();
    if (*(_DWORD *)(v25 + 84) == a2)
    {
      uint64_t v8 = v24;
      uint64_t v12 = a3[11];
    }
    else
    {
      sub_10017DF08(&qword_100EABE80);
      sub_100162F30();
      if (*(_DWORD *)(v27 + 84) == a2)
      {
        uint64_t v8 = v26;
        uint64_t v12 = a3[12];
      }
      else
      {
        uint64_t v8 = sub_10017DF08(&qword_100E6B8B8);
        uint64_t v12 = a3[13];
      }
    }
    goto LABEL_24;
  }
  unint64_t v21 = *(void *)(a1 + a3[10]);
  if (v21 >= 0xFFFFFFFF) {
    LODWORD(v21) = -1;
  }
  int v22 = v21 - 1;
  if (v22 < 0) {
    int v22 = -1;
  }
  return (v22 + 1);
}

uint64_t sub_100A5B1BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100A5B1D0);
}

void sub_100A5B1D0(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  type metadata accessor for CurrentWeather();
  sub_100162F30();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = a1;
  }
  else
  {
    sub_10017DF08(&qword_100E6E8F8);
    sub_100162F30();
    if (*(_DWORD *)(v13 + 84) == a3)
    {
      uint64_t v10 = v12;
      uint64_t v14 = a4[5];
    }
    else
    {
      sub_10017DF08(&qword_100E66CC8);
      sub_100162F30();
      if (*(_DWORD *)(v16 + 84) == a3)
      {
        uint64_t v10 = v15;
        uint64_t v14 = a4[6];
      }
      else
      {
        sub_10017DF08(&qword_100E66CA0);
        sub_100162F30();
        if (*(_DWORD *)(v18 + 84) == a3)
        {
          uint64_t v10 = v17;
          uint64_t v14 = a4[7];
        }
        else
        {
          sub_10017DF08(&qword_100E885C0);
          sub_100162F30();
          if (*(_DWORD *)(v20 + 84) == a3)
          {
            uint64_t v10 = v19;
            uint64_t v14 = a4[8];
          }
          else
          {
            sub_10017DF08(&qword_100E6D1C8);
            sub_100162F30();
            if (*(_DWORD *)(v22 + 84) == a3)
            {
              uint64_t v10 = v21;
              uint64_t v14 = a4[9];
            }
            else
            {
              if (a3 == 2147483646)
              {
                *(void *)(a1 + a4[10]) = a2;
                return;
              }
              type metadata accessor for WeatherAvailability();
              sub_100162F30();
              if (*(_DWORD *)(v24 + 84) == a3)
              {
                uint64_t v10 = v23;
                uint64_t v14 = a4[11];
              }
              else
              {
                sub_10017DF08(&qword_100EABE80);
                sub_100162F30();
                if (*(_DWORD *)(v26 + 84) == a3)
                {
                  uint64_t v10 = v25;
                  uint64_t v14 = a4[12];
                }
                else
                {
                  uint64_t v10 = sub_10017DF08(&qword_100E6B8B8);
                  uint64_t v14 = a4[13];
                }
              }
            }
          }
        }
      }
    }
    uint64_t v11 = a1 + v14;
  }

  _s7Weather24LocationCompositionStateOwst_0(v11, a2, a2, v10);
}

void sub_100A5B394()
{
  type metadata accessor for CurrentWeather();
  if (v0 <= 0x3F)
  {
    sub_1003AD874();
    if (v1 <= 0x3F)
    {
      sub_100020CBC();
      if (v2 <= 0x3F)
      {
        sub_10001CB2C();
        if (v3 <= 0x3F)
        {
          sub_100A5B678(319, &qword_100EABF68, (void (*)(uint64_t))&type metadata accessor for AirQuality);
          if (v4 <= 0x3F)
          {
            sub_100A5B678(319, (unint64_t *)&qword_100E71338, (void (*)(uint64_t))&type metadata accessor for WeatherChanges);
            if (v5 <= 0x3F)
            {
              type metadata accessor for WeatherAvailability();
              if (v6 <= 0x3F)
              {
                sub_100A5B678(319, (unint64_t *)&unk_100EABF70, (void (*)(uint64_t))&type metadata accessor for News);
                if (v7 <= 0x3F)
                {
                  sub_100A5B678(319, (unint64_t *)&qword_100E94528, (void (*)(uint64_t))&type metadata accessor for HistoricalComparisons);
                  if (v8 <= 0x3F) {
                    swift_initStructMetadata();
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

void sub_100A5B678(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = type metadata accessor for Optional();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_100A5B6CC()
{
  return sub_10017D164();
}

uint64_t sub_100A5B6D8()
{
  return sub_100A42960();
}

uint64_t sub_100A5B724()
{
  return 0;
}

uint64_t sub_100A5B750()
{
  uint64_t v1 = type metadata accessor for Access();
  sub_100179C0C();
  uint64_t v3 = v2;
  __chkstk_darwin(v4);
  sub_1001626E0();
  uint64_t v7 = v6 - v5;
  uint64_t v8 = type metadata accessor for Domain();
  __chkstk_darwin(v8 - 8);
  sub_100179CB8();
  uint64_t v9 = type metadata accessor for FeatureState();
  sub_100179C0C();
  uint64_t v11 = v10;
  __chkstk_darwin(v12);
  sub_10016279C();
  sub_10017DF08(&qword_100E89E10);
  (*(void (**)(uint64_t, void, uint64_t))(v11 + 104))(v0, enum case for FeatureState.default(_:), v9);
  static Domain.weatherInternal.getter();
  (*(void (**)(uint64_t, void, uint64_t))(v3 + 104))(v7, enum case for Access.protected(_:), v1);
  uint64_t result = Setting<>.init(_:defaultValue:domain:access:)();
  qword_100F52288 = result;
  return result;
}

uint64_t sub_100A5B8D4(uint64_t a1)
{
  return sub_100180A18(a1, 49, 0x8000000100CBB5C0, &qword_100F52298);
}

uint64_t sub_100A5B8F4(uint64_t a1)
{
  return sub_100180A18(a1, 66, 0x8000000100CBB570, &qword_100F522A0);
}

uint64_t sub_100A5B914(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v5 = type metadata accessor for Access();
  sub_100179C0C();
  uint64_t v7 = v6;
  __chkstk_darwin(v8);
  sub_1001626E0();
  uint64_t v11 = v10 - v9;
  type metadata accessor for Domain();
  sub_100179C0C();
  __chkstk_darwin(v12);
  sub_1001626E0();
  (*(void (**)(uint64_t, void))(v15 + 104))(v14 - v13, enum case for Domain.standard(_:));
  (*(void (**)(uint64_t, void, uint64_t))(v7 + 104))(v11, enum case for Access.public(_:), v5);
  sub_10017DF08(&qword_100E70818);
  swift_allocObject();
  uint64_t result = Setting.init(_:defaultValue:domain:access:)();
  *a4 = result;
  return result;
}

uint64_t sub_100A5BA70()
{
  uint64_t v1 = type metadata accessor for Access();
  sub_100179C0C();
  uint64_t v3 = v2;
  __chkstk_darwin(v4);
  sub_10017A0A0();
  sub_100179C0C();
  __chkstk_darwin(v5);
  (*(void (**)(char *, void))(v7 + 104))((char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), enum case for Domain.standard(_:));
  (*(void (**)(uint64_t, void, uint64_t))(v3 + 104))(v0, enum case for Access.public(_:), v1);
  v9[1] = 12;
  sub_10017DF08(&qword_100E70810);
  swift_allocObject();
  uint64_t result = Setting.init(_:defaultValue:domain:access:)();
  qword_100F522A8 = result;
  return result;
}

uint64_t sub_100A5BBBC()
{
  sub_1001781AC(v0 + OBJC_IVAR____TtC7Weather43WeatherConditionBackgroundModelInputFactory____lazy_storage___locationAnimationKind, &qword_100E85920);
  sub_1001781AC(v0 + OBJC_IVAR____TtC7Weather43WeatherConditionBackgroundModelInputFactory____lazy_storage___animationKind, &qword_100EAC0B0);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + OBJC_IVAR____TtC7Weather43WeatherConditionBackgroundModelInputFactory_weatherConditionBackgroundTimeDataFactory);
  return v0;
}

uint64_t sub_100A5BC14()
{
  sub_100A5BBBC();

  return swift_deallocClassInstance();
}

uint64_t sub_100A5BC6C()
{
  return type metadata accessor for WeatherConditionBackgroundModelInputFactory();
}

uint64_t sub_100A5BC74@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v121 = a2;
  uint64_t v113 = sub_10017DF08(&qword_100E65250);
  sub_100179C0C();
  uint64_t v112 = v3;
  __chkstk_darwin(v4);
  sub_100109314();
  sub_100109328(v5);
  uint64_t v6 = type metadata accessor for WeatherCondition();
  __chkstk_darwin(v6 - 8);
  sub_100109314();
  sub_100109328(v7);
  uint64_t v111 = type metadata accessor for CurrentWeather();
  sub_100179C0C();
  uint64_t v110 = v8;
  __chkstk_darwin(v9);
  sub_100109314();
  sub_100109328(v10);
  uint64_t v120 = type metadata accessor for Condition();
  sub_100179C0C();
  uint64_t v119 = v11;
  __chkstk_darwin(v12);
  sub_100162EF8();
  uint64_t v114 = v13;
  sub_1001626D4();
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)v102 - v15;
  uint64_t v134 = type metadata accessor for Date();
  sub_100179C0C();
  Swift::String v125 = v17;
  __chkstk_darwin(v18);
  sub_100109314();
  uint64_t v133 = v19;
  uint64_t v132 = type metadata accessor for Calendar();
  sub_100179C0C();
  uint64_t v123 = v20;
  __chkstk_darwin(v21);
  sub_100109314();
  uint64_t v131 = v22;
  uint64_t v127 = sub_10017DF08(&qword_100E66CA8);
  sub_100162E4C();
  __chkstk_darwin(v23);
  sub_1001626E0();
  uint64_t v26 = v25 - v24;
  uint64_t v27 = sub_10017DF08(&qword_100E66CA0);
  sub_100179C0C();
  uint64_t v29 = v28;
  __chkstk_darwin(v30);
  sub_100162EF8();
  uint64_t v135 = v31;
  sub_1001626D4();
  __chkstk_darwin(v32);
  uint64_t v34 = (char *)v102 - v33;
  uint64_t v35 = sub_10017DF08(&qword_100E6B6C8);
  __chkstk_darwin(v35 - 8);
  sub_100109314();
  sub_100109328(v36);
  uint64_t v118 = type metadata accessor for DayWeather();
  sub_100179C0C();
  uint64_t v117 = v37;
  __chkstk_darwin(v38);
  sub_100162EF8();
  uint64_t v136 = v39;
  sub_1001626D4();
  __chkstk_darwin(v40);
  unint64_t v130 = (char *)v102 - v41;
  sub_1001626D4();
  __chkstk_darwin(v42);
  uint64_t v115 = (char *)v102 - v43;
  uint64_t v44 = sub_10017DF08(&qword_100E71950);
  __chkstk_darwin(v44 - 8);
  sub_1001626E0();
  uint64_t v47 = v46 - v45;
  uint64_t v48 = type metadata accessor for WeatherDataModel();
  sub_100179C0C();
  uint64_t v50 = v49;
  __chkstk_darwin(v51);
  sub_1001626E0();
  uint64_t v54 = v53 - v52;
  sub_10087B594(a1, v47);
  if (_s7Weather24LocationCompositionStateOwet_0(v47, 1, v48) == 1)
  {
    sub_100178110(a1, &qword_100E71950);
    sub_100178110(v47, &qword_100E71950);
    uint64_t v55 = 1;
    uint64_t v56 = v121;
LABEL_22:
    uint64_t v101 = type metadata accessor for LocationConditionData();
    return _s7Weather24LocationCompositionStateOwst_0(v56, v55, 1, v101);
  }
  uint64_t v105 = v16;
  uint64_t v106 = a1;
  void v102[2] = v50;
  uint64_t v57 = *(void (**)(uint64_t, uint64_t, uint64_t))(v50 + 32);
  v102[3] = v48;
  v57(v54, v47, v48);
  uint64_t v107 = v54;
  WeatherDataModel.dailyForecast.getter();
  uint64_t v104 = v29;
  uint64_t v58 = *(void (**)(uint64_t, uint64_t, uint64_t))(v29 + 16);
  uint64_t v59 = v135;
  uint64_t v103 = v34;
  uint64_t v128 = v58;
  uint64_t v129 = v29 + 16;
  v58(v135, (uint64_t)v34, v27);
  sub_100A5C800((unint64_t *)&qword_100E66CB0);
  dispatch thunk of Sequence.makeIterator()();
  uint64_t v60 = (uint64_t *)(v26 + *(int *)(v127 + 36));
  sub_100A5C800((unint64_t *)&qword_100E66CB8);
  uint64_t v61 = *v60;
  dispatch thunk of Collection.endIndex.getter();
  uint64_t v62 = v118;
  uint64_t v63 = v27;
  uint64_t v64 = v26;
  if (v61 == v137)
  {
LABEL_7:
    sub_100178110(v64, &qword_100E66CA8);
    uint64_t v75 = v116;
    _s7Weather24LocationCompositionStateOwst_0(v116, 1, 1, v62);
    (*(void (**)(char *, uint64_t))(v104 + 8))(v103, v63);
  }
  else
  {
    uint64_t v65 = v59;
    uint64_t v126 = (void (**)(char *))(v117 + 16);
    uint64_t v127 = v117 + 32;
    Swift::String v124 = v125 + 1;
    v123 += 8;
    uint64_t v122 = v117 + 8;
    Swift::String v125 = (void (**)(uint64_t, uint64_t))(v104 + 8);
    v102[1] = (v104 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    while (1)
    {
      uint64_t v66 = dispatch thunk of Collection.subscript.read();
      uint64_t v67 = v130;
      (*v126)(v130);
      ((void (*)(uint64_t *, void))v66)(&v137, 0);
      v128(v65, v64, v63);
      dispatch thunk of Collection.formIndex(after:)();
      uint64_t v68 = *v125;
      (*v125)(v65, v63);
      uint64_t v69 = v63;
      uint64_t v70 = *(void (**)(uint64_t, uint64_t, uint64_t))v127;
      (*(void (**)(uint64_t, char *, uint64_t))v127)(v136, v67, v62);
      static Calendar.current.getter();
      DayWeather.date.getter();
      LOBYTE(v66) = Calendar.isDateInToday(_:)();
      sub_100162F0C();
      v71();
      sub_100162F0C();
      v72();
      if (v66) {
        break;
      }
      sub_100162F0C();
      v73();
      uint64_t v74 = *v60;
      dispatch thunk of Collection.endIndex.getter();
      uint64_t v63 = v69;
      uint64_t v65 = v135;
      if (v74 == v137) {
        goto LABEL_7;
      }
    }
    sub_100178110(v64, &qword_100E66CA8);
    uint64_t v75 = v116;
    v70(v116, v136, v62);
    _s7Weather24LocationCompositionStateOwst_0(v75, 0, 1, v62);
    v68((uint64_t)v103, v69);
  }
  BOOL v76 = _s7Weather24LocationCompositionStateOwet_0(v75, 1, v62) == 1;
  uint64_t v56 = v121;
  uint64_t v77 = v120;
  uint64_t v78 = v119;
  uint64_t v79 = (uint64_t)v105;
  if (v76)
  {
    sub_100178110(v106, &qword_100E71950);
    sub_10012BF98();
    sub_100162F0C();
    v80();
    sub_100178110(v75, &qword_100E6B6C8);
    uint64_t v55 = 1;
    goto LABEL_22;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v117 + 32))(v115, v75, v62);
  uint64_t v81 = v109;
  WeatherDataModel.currentWeather.getter();
  uint64_t v82 = v108;
  CurrentWeather.condition.getter();
  uint64_t v83 = *(void (**)(uint64_t, uint64_t))(v110 + 8);
  uint64_t v84 = v111;
  v83(v81, v111);
  sub_100A5C848(v82, v79);
  uint64_t v85 = v78;
  uint64_t v86 = v112;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v85 + 16))(v114, v79, v77);
  WeatherDataModel.currentWeather.getter();
  CurrentWeather.temperature.getter();
  v83(v81, v84);
  Measurement.value.getter();
  double v88 = v87;
  uint64_t v89 = *(uint64_t (**)(void))(v86 + 8);
  sub_10016285C();
  uint64_t result = v89();
  double v91 = round(v88);
  if ((~*(void *)&v91 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_24;
  }
  if (v91 <= -2147483650.0)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  if (v91 >= 2147483650.0)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  DayWeather.highTemperature.getter();
  Measurement.value.getter();
  double v93 = v92;
  sub_10016285C();
  uint64_t result = v89();
  double v94 = round(v93);
  if ((~*(void *)&v94 & 0x7FF0000000000000) == 0)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  if (v94 <= -2147483650.0)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  if (v94 >= 2147483650.0)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  DayWeather.lowTemperature.getter();
  Measurement.value.getter();
  double v96 = v95;
  sub_10016285C();
  uint64_t result = v89();
  double v97 = round(v96);
  if ((~*(void *)&v97 & 0x7FF0000000000000) == 0)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (v97 <= -2147483650.0)
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  if (v97 < 2147483650.0)
  {
    uint64_t v56 = v121;
    LocationConditionData.init(locationCondition:temperature:temperatureHigh:temperatureLow:)();
    sub_100178110(v106, &qword_100E71950);
    sub_10012BF98();
    sub_100162F0C();
    v98();
    sub_10012BF98();
    sub_100162F0C();
    v99();
    sub_10012BF98();
    sub_100162F0C();
    v100();
    uint64_t v55 = 0;
    goto LABEL_22;
  }
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_100A5C800(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10018C6DC(&qword_100E66CA0);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100A5C848@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for WeatherCondition();
  sub_100179C0C();
  uint64_t v6 = v5;
  __chkstk_darwin(v7);
  sub_1001626E0();
  uint64_t v10 = v9 - v8;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v9 - v8, a1, v4);
  int v11 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 88))(v10, v4);
  if (v11 == enum case for WeatherCondition.blizzard(_:))
  {
    uint64_t v12 = sub_1001883B4();
    v13(v12);
    uint64_t v14 = (unsigned int *)&enum case for Condition.blizzard(_:);
LABEL_85:
    uint64_t v96 = *v14;
    type metadata accessor for Condition();
    sub_100162E4C();
    uint64_t v98 = *(uint64_t (**)(uint64_t, uint64_t))(v97 + 104);
    uint64_t v99 = a2;
    uint64_t v100 = v96;
    return v98(v99, v100);
  }
  if (v11 == enum case for WeatherCondition.blowingDust(_:))
  {
    uint64_t v15 = sub_1001883B4();
    v16(v15);
    uint64_t v14 = (unsigned int *)&enum case for Condition.dust(_:);
    goto LABEL_85;
  }
  if (v11 == enum case for WeatherCondition.blowingSnow(_:))
  {
    uint64_t v17 = sub_1001883B4();
    v18(v17);
    uint64_t v14 = (unsigned int *)&enum case for Condition.blowingSnow(_:);
    goto LABEL_85;
  }
  if (v11 == enum case for WeatherCondition.breezy(_:))
  {
    uint64_t v19 = sub_1001883B4();
    v20(v19);
    uint64_t v14 = (unsigned int *)&enum case for Condition.breezy(_:);
    goto LABEL_85;
  }
  if (v11 == enum case for WeatherCondition.clear(_:))
  {
    uint64_t v21 = sub_1001883B4();
    v22(v21);
    uint64_t v14 = (unsigned int *)&enum case for Condition.clear(_:);
    goto LABEL_85;
  }
  if (v11 == enum case for WeatherCondition.cloudy(_:))
  {
    uint64_t v23 = sub_1001883B4();
    v24(v23);
    uint64_t v14 = (unsigned int *)&enum case for Condition.cloudy(_:);
    goto LABEL_85;
  }
  if (v11 == enum case for WeatherCondition.drizzle(_:))
  {
    uint64_t v25 = sub_1001883B4();
    v26(v25);
    uint64_t v14 = (unsigned int *)&enum case for Condition.drizzle(_:);
    goto LABEL_85;
  }
  if (v11 == enum case for WeatherCondition.flurries(_:))
  {
    uint64_t v27 = sub_1001883B4();
    v28(v27);
    uint64_t v14 = (unsigned int *)&enum case for Condition.flurries(_:);
    goto LABEL_85;
  }
  if (v11 == enum case for WeatherCondition.foggy(_:))
  {
    uint64_t v29 = sub_1001883B4();
    v30(v29);
    uint64_t v14 = (unsigned int *)&enum case for Condition.fog(_:);
    goto LABEL_85;
  }
  if (v11 == enum case for WeatherCondition.freezingDrizzle(_:))
  {
    uint64_t v31 = sub_1001883B4();
    v32(v31);
    uint64_t v14 = (unsigned int *)&enum case for Condition.freezingDrizzle(_:);
    goto LABEL_85;
  }
  if (v11 == enum case for WeatherCondition.freezingRain(_:))
  {
    uint64_t v33 = sub_1001883B4();
    v34(v33);
    uint64_t v14 = (unsigned int *)&enum case for Condition.freezingRain(_:);
    goto LABEL_85;
  }
  if (v11 == enum case for WeatherCondition.frigid(_:))
  {
    uint64_t v35 = sub_1001883B4();
    v36(v35);
    uint64_t v14 = (unsigned int *)&enum case for Condition.frigid(_:);
    goto LABEL_85;
  }
  if (v11 == enum case for WeatherCondition.hail(_:))
  {
    uint64_t v37 = sub_1001883B4();
    v38(v37);
    uint64_t v14 = (unsigned int *)&enum case for Condition.hail(_:);
    goto LABEL_85;
  }
  if (v11 == enum case for WeatherCondition.haze(_:))
  {
    uint64_t v39 = sub_1001883B4();
    v40(v39);
    uint64_t v14 = (unsigned int *)&enum case for Condition.haze(_:);
    goto LABEL_85;
  }
  int v105 = v11;
  if (v11 == enum case for WeatherCondition.heavyRain(_:))
  {
    uint64_t v41 = sub_1001883B4();
    v42(v41);
    uint64_t v14 = (unsigned int *)&enum case for Condition.heavyRain(_:);
    goto LABEL_85;
  }
  sub_100180A20();
  if (v45)
  {
    uint64_t v43 = sub_1001883B4();
    v44(v43);
    uint64_t v14 = (unsigned int *)&enum case for Condition.heavySnow(_:);
    goto LABEL_85;
  }
  sub_100180A20();
  if (v45)
  {
    uint64_t v46 = sub_1001883B4();
    v47(v46);
    uint64_t v14 = (unsigned int *)&enum case for Condition.hot(_:);
    goto LABEL_85;
  }
  sub_100180A20();
  if (v48)
  {
    uint64_t v49 = sub_1001883B4();
    v50(v49);
    uint64_t v14 = (unsigned int *)&enum case for Condition.hurricane(_:);
    goto LABEL_85;
  }
  sub_100180A20();
  if (v51)
  {
    uint64_t v52 = sub_1001883B4();
    v53(v52);
    uint64_t v14 = (unsigned int *)&enum case for Condition.isolatedThunderstorms(_:);
    goto LABEL_85;
  }
  sub_100180A20();
  if (v54)
  {
    uint64_t v55 = sub_1001883B4();
    v56(v55);
    uint64_t v14 = (unsigned int *)&enum case for Condition.mostlyClear(_:);
    goto LABEL_85;
  }
  sub_100180A20();
  if (v57)
  {
    uint64_t v58 = sub_1001883B4();
    v59(v58);
    uint64_t v14 = (unsigned int *)&enum case for Condition.mostlyCloudy(_:);
    goto LABEL_85;
  }
  sub_100180A20();
  if (v60)
  {
    uint64_t v61 = sub_1001883B4();
    v62(v61);
    uint64_t v14 = (unsigned int *)&enum case for Condition.partlyCloudy(_:);
    goto LABEL_85;
  }
  sub_100180A20();
  if (v63)
  {
    uint64_t v64 = sub_1001883B4();
    v65(v64);
    uint64_t v14 = (unsigned int *)&enum case for Condition.rain(_:);
    goto LABEL_85;
  }
  sub_100180A20();
  if (v66)
  {
    uint64_t v67 = sub_1001883B4();
    v68(v67);
    uint64_t v14 = (unsigned int *)&enum case for Condition.scatteredThunderstorms(_:);
    goto LABEL_85;
  }
  sub_100180A20();
  if (v69)
  {
    uint64_t v70 = sub_1001883B4();
    v71(v70);
    uint64_t v14 = (unsigned int *)&enum case for Condition.sleet(_:);
    goto LABEL_85;
  }
  sub_100180A20();
  if (v72)
  {
    uint64_t v73 = sub_1001883B4();
    v74(v73);
    uint64_t v14 = (unsigned int *)&enum case for Condition.smoke(_:);
    goto LABEL_85;
  }
  sub_100180A20();
  if (v75)
  {
    uint64_t v76 = sub_1001883B4();
    v77(v76);
    uint64_t v14 = (unsigned int *)&enum case for Condition.snow(_:);
    goto LABEL_85;
  }
  sub_100180A20();
  if (v78)
  {
    uint64_t v79 = sub_1001883B4();
    v80(v79);
    uint64_t v14 = (unsigned int *)&enum case for Condition.severeThunderstorm(_:);
    goto LABEL_85;
  }
  sub_100180A20();
  if (v81)
  {
    uint64_t v82 = sub_1001883B4();
    v83(v82);
    uint64_t v14 = (unsigned int *)&enum case for Condition.snowShowers(_:);
    goto LABEL_85;
  }
  sub_100180A20();
  if (v84)
  {
    uint64_t v85 = sub_1001883B4();
    v86(v85);
    uint64_t v14 = (unsigned int *)&enum case for Condition.showers(_:);
    goto LABEL_85;
  }
  sub_100180A20();
  if (v87)
  {
    uint64_t v88 = sub_1001883B4();
    v89(v88);
    uint64_t v14 = (unsigned int *)&enum case for Condition.thunderstorm(_:);
    goto LABEL_85;
  }
  sub_100180A20();
  if (v90)
  {
    uint64_t v91 = sub_1001883B4();
    v92(v91);
    uint64_t v14 = (unsigned int *)&enum case for Condition.tropicalStorm(_:);
    goto LABEL_85;
  }
  sub_100180A20();
  if (v93)
  {
    uint64_t v94 = sub_1001883B4();
    v95(v94);
    uint64_t v14 = (unsigned int *)&enum case for Condition.windy(_:);
    goto LABEL_85;
  }
  int v102 = enum case for WeatherCondition.wintryMix(_:);
  uint64_t v103 = *(void (**)(void))(v6 + 8);
  sub_10016285C();
  v103();
  type metadata accessor for Condition();
  sub_100162E4C();
  uint64_t v98 = *(uint64_t (**)(uint64_t, uint64_t))(v104 + 104);
  if (v105 == v102)
  {
    uint64_t v100 = enum case for Condition.mixedRainAndSnow(_:);
    uint64_t v99 = a2;
    return v98(v99, v100);
  }
  v98(a2, enum case for Condition.notAvailable(_:));
  sub_10016285C();
  return ((uint64_t (*)(void))v103)();
}

uint64_t type metadata accessor for NoAqiSevereNewsContentView()
{
  return sub_100109098();
}

uint64_t sub_100A5CF18()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100A5CF5C@<X0>(uint64_t a1@<X0>, __int16 a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v57 = a7;
  uint64_t v58 = a6;
  uint64_t v45 = a4;
  uint64_t v52 = a3;
  v70[2] = a5;
  v70[3] = a5;
  int v9 = a2;
  unsigned int v10 = a2 & 0x100;
  v70[4] = a5;
  v70[5] = a5;
  v70[6] = a5;
  v70[7] = a5;
  sub_100179D2C();
  uint64_t v50 = sub_10017F7C0();
  uint64_t v56 = type metadata accessor for Group();
  sub_100179C0C();
  uint64_t v53 = v11;
  __chkstk_darwin(v12);
  sub_100162EF8();
  uint64_t v55 = v13;
  __chkstk_darwin(v14);
  uint64_t v54 = (uint64_t)&v41 - v15;
  v70[0] = a5;
  v70[1] = a5;
  v70[2] = type metadata accessor for Optional();
  v70[3] = a5;
  v70[4] = a5;
  v70[5] = a5;
  v70[6] = a5;
  sub_100179D2C();
  sub_10017F7C0();
  uint64_t v51 = type metadata accessor for Group();
  sub_100179C0C();
  uint64_t v49 = v16;
  __chkstk_darwin(v17);
  sub_100162EF8();
  uint64_t v59 = v18;
  __chkstk_darwin(v19);
  uint64_t v60 = (uint64_t)&v41 - v20;
  if (v9)
  {
    if (v9 == 1)
    {
      if (v10)
      {
        uint64_t v21 = &unk_100E95C20;
        goto LABEL_11;
      }
    }
    else if (v10)
    {
      uint64_t v21 = &unk_100E95FF0;
      goto LABEL_11;
    }
    uint64_t v21 = &unk_100E95E08;
    goto LABEL_11;
  }
  if (v10) {
    uint64_t v21 = &unk_100E95850;
  }
  else {
    uint64_t v21 = &unk_100E95A38;
  }
LABEL_11:
  memcpy(v70, v21, sizeof(v70));
  uint64_t v22 = memcpy(v69, v70, sizeof(v69));
  __chkstk_darwin(v22);
  uint64_t v23 = v58;
  *(&v41 - 8) = a5;
  *(&v41 - 7) = v23;
  *(&v41 - 6) = a1;
  *((unsigned char *)&v41 - 40) = v9;
  uint64_t v44 = a1;
  int v42 = v9;
  unsigned int v43 = v10 >> 8;
  *((unsigned char *)&v41 - 39) = BYTE1(v10);
  uint64_t v24 = v45;
  *(&v41 - 4) = v52;
  *(&v41 - 3) = v24;
  *(&v41 - 2) = (uint64_t)v69;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v26 = v59;
  Group<A>.init(content:)();
  uint64_t v68 = WitnessTable;
  uint64_t v27 = v51;
  uint64_t v46 = swift_getWitnessTable();
  sub_100121584(v26, v27, v60);
  uint64_t v28 = v49;
  uint64_t v47 = *(uint64_t (**)(uint64_t, uint64_t))(v49 + 8);
  uint64_t v48 = v49 + 8;
  uint64_t v29 = v47(v26, v27);
  __chkstk_darwin(v29);
  uint64_t v30 = v58;
  *(&v41 - 8) = a5;
  *(&v41 - 7) = v30;
  *(&v41 - 6) = v44;
  *((unsigned char *)&v41 - 40) = v42;
  *((unsigned char *)&v41 - 39) = v43;
  *(&v41 - 4) = v31;
  *(&v41 - 3) = v24;
  *(&v41 - 2) = (uint64_t)v69;
  uint64_t v32 = swift_getWitnessTable();
  uint64_t v33 = v55;
  Group<A>.init(content:)();
  uint64_t v67 = v32;
  uint64_t v34 = v56;
  uint64_t v58 = swift_getWitnessTable();
  uint64_t v35 = v54;
  sub_100121584(v33, v34, v54);
  uint64_t v36 = v53;
  uint64_t v37 = *(void (**)(void))(v53 + 8);
  sub_10017C768();
  v37();
  uint64_t v38 = v59;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v28 + 16))(v59, v60, v27);
  uint64_t v65 = v38;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v36 + 16))(v33, v35, v34);
  uint64_t v66 = v33;
  uint64_t v63 = v27;
  uint64_t v64 = v34;
  uint64_t v61 = v46;
  uint64_t v62 = v58;
  sub_1006E9080();
  sub_10017C768();
  v37();
  uint64_t v39 = v47;
  v47(v60, v27);
  sub_10017C768();
  v37();
  return v39(v38, v27);
}

uint64_t sub_100A5D428@<X0>(uint64_t a1@<X0>, void (*a2)(char *, void, void, void, void)@<X2>, void *a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X6>, uint64_t a6@<X8>)
{
  uint64_t v103 = a5;
  uint64_t v104 = a2;
  uint64_t v85 = a6;
  uint64_t v9 = sub_10017DF08(&qword_100E64E80);
  __chkstk_darwin(v9 - 8);
  uint64_t v82 = (uint64_t)&v79 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v99 = type metadata accessor for Optional();
  uint64_t v93 = *(void *)(v99 - 8);
  __chkstk_darwin(v99);
  uint64_t v98 = (char *)&v79 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v97 = (char *)&v79 - v13;
  uint64_t v81 = type metadata accessor for LocationComponentContainerViewModel();
  __chkstk_darwin(v81);
  uint64_t v80 = (uint64_t)&v79 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v79 - v16;
  uint64_t v18 = *(void *)(a4 - 8);
  __chkstk_darwin(v19);
  char v84 = (char *)&v79 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  double v92 = (char *)&v79 - v22;
  __chkstk_darwin(v23);
  uint64_t v91 = (char *)&v79 - v24;
  __chkstk_darwin(v25);
  char v90 = (char *)&v79 - v26;
  __chkstk_darwin(v27);
  uint64_t v89 = (char *)&v79 - v28;
  __chkstk_darwin(v29);
  uint64_t v88 = (char *)&v79 - v30;
  __chkstk_darwin(v31);
  char v87 = (char *)&v79 - v32;
  __chkstk_darwin(v33);
  uint64_t v94 = (char *)&v79 - v34;
  __chkstk_darwin(v35);
  int v102 = (char *)&v79 - v36;
  __chkstk_darwin(v37);
  double v95 = (char *)&v79 - v38;
  __chkstk_darwin(v39);
  uint64_t v41 = (char *)&v79 - v40;
  __chkstk_darwin(v42);
  uint64_t v44 = (char *)&v79 - v43;
  sub_1001F3734(a1 + OBJC_IVAR____TtCV7Weather22NoAqiSevereNewsContent8_Storage_severeAlert, (uint64_t)v17);
  v104(v17, a3[41], a3[42], a3[43], a3[44]);
  sub_1001F2B74((uint64_t)v17);
  uint64_t v86 = v44;
  sub_100121584((uint64_t)v41, a4, (uint64_t)v44);
  uint64_t v83 = v18;
  uint64_t v45 = *(void (**)(char *, uint64_t))(v18 + 8);
  v45(v41, a4);
  sub_1001F3734(a1 + OBJC_IVAR____TtCV7Weather22NoAqiSevereNewsContent8_Storage_newsArticle, (uint64_t)v17);
  v104(v17, a3[29], a3[30], a3[31], a3[32]);
  sub_1001F2B74((uint64_t)v17);
  sub_100121584((uint64_t)v41, a4, (uint64_t)v95);
  uint64_t v100 = (void (*)(uint64_t, uint64_t))v45;
  uint64_t v101 = v41;
  v45(v41, a4);
  uint64_t v96 = a1;
  uint64_t v46 = a1 + OBJC_IVAR____TtCV7Weather22NoAqiSevereNewsContent8_Storage_map;
  swift_beginAccess();
  uint64_t v47 = v46;
  uint64_t v48 = v82;
  sub_10027A764(v47, v82);
  if (_s7Weather24LocationCompositionStateOwet_0(v48, 1, v81) == 1)
  {
    sub_10027A7CC(v48);
  }
  else
  {
    uint64_t v49 = v80;
    sub_10027A82C(v48, v80);
    sub_10027A890((uint64_t)(a3 + 20), (uint64_t)v127);
    sub_10027A890((uint64_t)v127, (uint64_t)v128);
    if (v129 != 1)
    {
      uint64_t v51 = (uint64_t)v102;
      v104((char *)v49, v128[0], v128[1], v128[2], v128[3]);
      sub_1001F2B74(v49);
      uint64_t v52 = (uint64_t)v101;
      sub_100121584(v51, a4, (uint64_t)v101);
      uint64_t v53 = v100;
      v100(v51, a4);
      uint64_t v50 = (uint64_t)v98;
      sub_100121584(v52, a4, (uint64_t)v98);
      v53(v52, a4);
      _s7Weather24LocationCompositionStateOwst_0(v50, 0, 1, a4);
      goto LABEL_7;
    }
    sub_1001F2B74(v49);
  }
  uint64_t v50 = (uint64_t)v98;
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v98, 1, 1, a4);
LABEL_7:
  sub_1000CA354();
  uint64_t v54 = *(void (**)(uint64_t, uint64_t))(v93 + 8);
  uint64_t v82 = (v93 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v54(v50, v99);
  sub_1001F3734(*(void *)(v96 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_hourlyForecast, (uint64_t)v17);
  uint64_t v55 = (uint64_t)v102;
  uint64_t v56 = v104;
  v104(v17, a3[12], a3[13], a3[14], a3[15]);
  sub_1001F2B74((uint64_t)v17);
  sub_100121584(v55, a4, (uint64_t)v101);
  v100(v55, a4);
  uint64_t v57 = v96;
  sub_1001F3734(*(void *)(v96 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_dailyForecast, (uint64_t)v17);
  uint64_t v58 = (uint64_t)v94;
  v56(v17, a3[4], a3[5], a3[6], a3[7]);
  sub_1001F2B74((uint64_t)v17);
  sub_100121584(v58, a4, v55);
  v100(v58, a4);
  sub_1001F3734(*(void *)(v57 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_uvIndex, (uint64_t)v17);
  uint64_t v59 = (uint64_t)v87;
  uint64_t v60 = v104;
  v104(v17, a3[49], a3[50], a3[51], a3[52]);
  sub_1001F2B74((uint64_t)v17);
  sub_100121584(v59, a4, v58);
  uint64_t v61 = (void (*)(char *, uint64_t))v100;
  v100(v59, a4);
  sub_1001F3734(*(void *)(v96 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_sunriseSunset, (uint64_t)v17);
  uint64_t v62 = (uint64_t)v88;
  v60(v17, a3[45], a3[46], a3[47], a3[48]);
  sub_1001F2B74((uint64_t)v17);
  uint64_t v63 = v103;
  sub_100121584(v62, a4, v59);
  uint64_t v64 = v61;
  v61((char *)v62, a4);
  uint64_t v65 = *(void (**)(uint64_t, char *, uint64_t))(v83 + 16);
  v65(v62, v86, a4);
  uint64_t v120 = v62;
  uint64_t v66 = v89;
  v65((uint64_t)v89, v95, a4);
  uint64_t v121 = v66;
  uint64_t v67 = v93 + 16;
  uint64_t v68 = (uint64_t)v98;
  (*(void (**)(char *, char *, uint64_t))(v93 + 16))(v98, v97, v99);
  uint64_t v122 = v68;
  char v69 = v90;
  v65((uint64_t)v90, v101, a4);
  uint64_t v123 = v69;
  uint64_t v70 = v63;
  uint64_t v71 = v91;
  v65((uint64_t)v91, v102, a4);
  Swift::String v124 = v71;
  char v72 = v92;
  v65((uint64_t)v92, v94, a4);
  Swift::String v125 = v72;
  uint64_t v73 = v84;
  uint64_t v74 = v87;
  v65((uint64_t)v84, v87, a4);
  uint64_t v126 = v73;
  char v75 = v73;
  uint64_t v113 = a4;
  uint64_t v114 = a4;
  uint64_t v76 = v99;
  uint64_t v115 = v99;
  uint64_t v116 = a4;
  uint64_t v117 = a4;
  uint64_t v118 = a4;
  uint64_t v119 = a4;
  uint64_t v106 = v70;
  uint64_t v107 = v70;
  uint64_t v105 = v70;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v109 = v70;
  uint64_t v110 = v70;
  uint64_t v111 = v70;
  uint64_t v112 = v70;
  sub_1006E9080();
  v64(v74, a4);
  v64(v94, a4);
  v64(v102, a4);
  v64(v101, a4);
  uint64_t v77 = *(void (**)(char *, uint64_t))(v67 - 8);
  v77(v97, v76);
  v64(v95, a4);
  v64(v86, a4);
  v64(v75, a4);
  v64(v92, a4);
  v64(v91, a4);
  v64(v90, a4);
  v77(v98, v76);
  v64(v89, a4);
  return ((uint64_t (*)(char *, uint64_t))v64)(v88, a4);
}

uint64_t sub_100A5DE94@<X0>(uint64_t a1@<X0>, void (*a2)(char *, uint64_t, uint64_t, uint64_t, uint64_t)@<X2>, uint64_t *a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X6>, uint64_t a6@<X8>)
{
  uint64_t v102 = a5;
  uint64_t v84 = a6;
  uint64_t v10 = type metadata accessor for LocationComponentContainerViewModel();
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v82 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v82 = *(void *)(a4 - 8);
  uint64_t v13 = v82;
  __chkstk_darwin(v14);
  uint64_t v83 = (char *)&v82 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v98 = (char *)&v82 - v17;
  __chkstk_darwin(v18);
  uint64_t v97 = (char *)&v82 - v19;
  __chkstk_darwin(v20);
  uint64_t v96 = (char *)&v82 - v21;
  __chkstk_darwin(v22);
  double v95 = (char *)&v82 - v23;
  __chkstk_darwin(v24);
  uint64_t v93 = (char *)&v82 - v25;
  __chkstk_darwin(v26);
  double v92 = (char *)&v82 - v27;
  __chkstk_darwin(v28);
  char v90 = (char *)&v82 - v29;
  __chkstk_darwin(v30);
  uint64_t v89 = (char *)&v82 - v31;
  __chkstk_darwin(v32);
  uint64_t v101 = (char *)&v82 - v33;
  __chkstk_darwin(v34);
  char v87 = (char *)&v82 - v35;
  __chkstk_darwin(v36);
  uint64_t v86 = (char *)&v82 - v37;
  __chkstk_darwin(v38);
  uint64_t v100 = (char *)&v82 - v39;
  __chkstk_darwin(v40);
  uint64_t v42 = (char *)&v82 - v41;
  __chkstk_darwin(v43);
  uint64_t v45 = (char *)&v82 - v44;
  __chkstk_darwin(v46);
  uint64_t v48 = (char *)&v82 - v47;
  uint64_t v94 = (char *)&v82 - v47;
  sub_1001F3734(*(void *)(a1 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_wind, (uint64_t)v12);
  uint64_t v49 = a3[57];
  uint64_t v50 = a3[58];
  uint64_t v51 = a3[59];
  uint64_t v52 = a3[60];
  uint64_t v99 = a2;
  a2(v12, v49, v50, v51, v52);
  sub_1001F2B74((uint64_t)v12);
  sub_100121584((uint64_t)v45, a4, (uint64_t)v48);
  uint64_t v53 = *(void (**)(char *, uint64_t))(v13 + 8);
  uint64_t v91 = v45;
  v53(v45, a4);
  sub_1001F3734(*(void *)(a1 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_precipitationTotal, (uint64_t)v12);
  a2(v12, a3[37], a3[38], a3[39], a3[40]);
  sub_1001F2B74((uint64_t)v12);
  sub_100121584((uint64_t)v42, a4, (uint64_t)v45);
  uint64_t v88 = v42;
  v53(v42, a4);
  uint64_t v85 = a1;
  sub_1001F3734(*(void *)(a1 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_feelsLike, (uint64_t)v12);
  uint64_t v54 = (uint64_t)v100;
  v99(v12, a3[8], a3[9], a3[10], a3[11]);
  sub_1001F2B74((uint64_t)v12);
  sub_100121584(v54, a4, (uint64_t)v42);
  uint64_t v55 = v54;
  v53((char *)v54, a4);
  sub_1001F3734(*(void *)(a1 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_humidity, (uint64_t)v12);
  uint64_t v56 = (uint64_t)v86;
  uint64_t v57 = v99;
  v99(v12, a3[16], a3[17], a3[18], a3[19]);
  sub_1001F2B74((uint64_t)v12);
  sub_100121584(v56, a4, v55);
  v53((char *)v56, a4);
  sub_1001F3734(*(void *)(v85 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_visibility, (uint64_t)v12);
  uint64_t v58 = (uint64_t)v87;
  v57(v12, a3[53], a3[54], a3[55], a3[56]);
  sub_1001F2B74((uint64_t)v12);
  uint64_t v59 = v58;
  sub_100121584(v58, a4, v56);
  v53((char *)v58, a4);
  uint64_t v60 = v85;
  sub_1001F3734(*(void *)(v85 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_pressure, (uint64_t)v12);
  uint64_t v61 = (uint64_t)v101;
  uint64_t v62 = v99;
  v99(v12, a3[33], a3[34], a3[35], a3[36]);
  sub_1001F2B74((uint64_t)v12);
  sub_100121584(v61, a4, v59);
  v53((char *)v61, a4);
  sub_1001F3734(*(void *)(v60 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_moon, (uint64_t)v12);
  uint64_t v63 = (uint64_t)v89;
  v62(v12, a3[25], a3[26], a3[27], a3[28]);
  sub_1001F2B74((uint64_t)v12);
  sub_100121584(v63, a4, (uint64_t)v101);
  v53((char *)v63, a4);
  sub_1001F3734(*(void *)(v60 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_averages, (uint64_t)v12);
  uint64_t v64 = *a3;
  uint64_t v65 = a3[1];
  uint64_t v66 = a3[2];
  uint64_t v67 = a3[3];
  uint64_t v68 = (uint64_t)v90;
  v62(v12, v64, v65, v66, v67);
  sub_1001F2B74((uint64_t)v12);
  sub_100121584(v68, a4, v63);
  v53((char *)v68, a4);
  char v69 = *(void (**)(uint64_t, char *, uint64_t))(v82 + 16);
  v69(v68, v94, a4);
  uint64_t v119 = v68;
  uint64_t v70 = v92;
  v69((uint64_t)v92, v91, a4);
  uint64_t v120 = v70;
  uint64_t v71 = v93;
  v69((uint64_t)v93, v88, a4);
  uint64_t v121 = v71;
  char v72 = v95;
  v69((uint64_t)v95, v100, a4);
  uint64_t v122 = v72;
  uint64_t v73 = v96;
  uint64_t v74 = v86;
  v69((uint64_t)v96, v86, a4);
  uint64_t v123 = v73;
  char v75 = v97;
  uint64_t v76 = v87;
  v69((uint64_t)v97, v87, a4);
  Swift::String v124 = v75;
  uint64_t v77 = v98;
  uint64_t v78 = (uint64_t)v101;
  v69((uint64_t)v98, v101, a4);
  Swift::String v125 = v77;
  uint64_t v79 = v83;
  uint64_t v80 = v89;
  v69((uint64_t)v83, v89, a4);
  uint64_t v126 = v79;
  uint64_t v111 = a4;
  uint64_t v112 = a4;
  uint64_t v113 = a4;
  uint64_t v114 = a4;
  uint64_t v115 = a4;
  uint64_t v116 = a4;
  uint64_t v117 = a4;
  uint64_t v118 = a4;
  uint64_t v103 = v102;
  uint64_t v104 = v102;
  uint64_t v105 = v102;
  uint64_t v106 = v102;
  uint64_t v107 = v102;
  uint64_t v108 = v102;
  uint64_t v109 = v102;
  uint64_t v110 = v102;
  sub_1006E9080();
  v53(v80, a4);
  v53((char *)v78, a4);
  v53(v76, a4);
  v53(v74, a4);
  v53(v100, a4);
  v53(v88, a4);
  v53(v91, a4);
  v53(v94, a4);
  v53(v79, a4);
  v53(v98, a4);
  v53(v97, a4);
  v53(v96, a4);
  v53(v95, a4);
  v53(v93, a4);
  v53(v92, a4);
  return ((uint64_t (*)(char *, uint64_t))v53)(v90, a4);
}

uint64_t sub_100A5E8DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if (*(unsigned char *)(v2 + 9)) {
    __int16 v3 = 256;
  }
  else {
    __int16 v3 = 0;
  }
  return sub_100A5CF5C(*(void *)v2, v3 | *(unsigned __int8 *)(v2 + 8), *(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(a1 + 16), *(void *)(a1 + 24), a2);
}

uint64_t sub_100A5E908()
{
  return sub_100A5E938((uint64_t (*)(void, void, void, void, void, void, void))sub_100A5D428);
}

uint64_t sub_100A5E920()
{
  return sub_100A5E938((uint64_t (*)(void, void, void, void, void, void, void))sub_100A5DE94);
}

uint64_t sub_100A5E938(uint64_t (*a1)(void, void, void, void, void, void, void))
{
  if (*(unsigned char *)(v1 + 41)) {
    int v2 = 256;
  }
  else {
    int v2 = 0;
  }
  return a1(*(void *)(v1 + 32), v2 | *(unsigned __int8 *)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56), *(void *)(v1 + 64), *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t *sub_100A5E96C(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v28 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v28 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for Calendar();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for Date();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[6];
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    uint64_t v15 = type metadata accessor for TemperatureScaleConfiguration();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    uint64_t v16 = a3[7];
    uint64_t v17 = (char *)a1 + v16;
    uint64_t v18 = (char *)a2 + v16;
    uint64_t v19 = sub_10017DF08(&qword_100E65258);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
    uint64_t v20 = a3[8];
    uint64_t v21 = (char *)a1 + v20;
    uint64_t v22 = (char *)a2 + v20;
    uint64_t v23 = sub_10017DF08(&qword_100E6B7D0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
    uint64_t v24 = a3[9];
    uint64_t v25 = (char *)a1 + v24;
    uint64_t v26 = (char *)a2 + v24;
    uint64_t v27 = type metadata accessor for Locale();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
  }
  return a1;
}

uint64_t sub_100A5EBA4(uint64_t a1, int *a2)
{
  uint64_t v4 = type metadata accessor for Calendar();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + a2[5];
  uint64_t v6 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + a2[6];
  uint64_t v8 = type metadata accessor for TemperatureScaleConfiguration();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = a1 + a2[7];
  uint64_t v10 = sub_10017DF08(&qword_100E65258);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  uint64_t v11 = a1 + a2[8];
  uint64_t v12 = sub_10017DF08(&qword_100E6B7D0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  uint64_t v13 = a1 + a2[9];
  uint64_t v14 = type metadata accessor for Locale();
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8);

  return v15(v13, v14);
}

uint64_t sub_100A5ED5C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Calendar();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = type metadata accessor for TemperatureScaleConfiguration();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_10017DF08(&qword_100E65258);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_10017DF08(&qword_100E6B7D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  uint64_t v26 = type metadata accessor for Locale();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 16))(v24, v25, v26);
  return a1;
}

uint64_t sub_100A5EF44(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Calendar();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = type metadata accessor for TemperatureScaleConfiguration();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_10017DF08(&qword_100E65258);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 24))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_10017DF08(&qword_100E6B7D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 24))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  uint64_t v26 = type metadata accessor for Locale();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 24))(v24, v25, v26);
  return a1;
}

uint64_t sub_100A5F12C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Calendar();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = type metadata accessor for TemperatureScaleConfiguration();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_10017DF08(&qword_100E65258);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_10017DF08(&qword_100E6B7D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  uint64_t v26 = type metadata accessor for Locale();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 32))(v24, v25, v26);
  return a1;
}

uint64_t sub_100A5F314(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Calendar();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = type metadata accessor for TemperatureScaleConfiguration();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_10017DF08(&qword_100E65258);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 40))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_10017DF08(&qword_100E6B7D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 40))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  uint64_t v26 = type metadata accessor for Locale();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 40))(v24, v25, v26);
  return a1;
}

uint64_t sub_100A5F4FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100A5F510);
}

uint64_t sub_100A5F510(uint64_t a1, uint64_t a2, int *a3)
{
  type metadata accessor for Calendar();
  sub_100162F30();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1;
  }
  else
  {
    type metadata accessor for Date();
    sub_100162F30();
    if (*(_DWORD *)(v11 + 84) == a2)
    {
      uint64_t v8 = v10;
      uint64_t v12 = a3[5];
    }
    else
    {
      type metadata accessor for TemperatureScaleConfiguration();
      sub_100162F30();
      if (*(_DWORD *)(v14 + 84) == a2)
      {
        uint64_t v8 = v13;
        uint64_t v12 = a3[6];
      }
      else
      {
        sub_10017DF08(&qword_100E65258);
        sub_100162F30();
        if (*(_DWORD *)(v16 + 84) == a2)
        {
          uint64_t v8 = v15;
          uint64_t v12 = a3[7];
        }
        else
        {
          sub_10017DF08(&qword_100E6B7D0);
          sub_100162F30();
          if (*(_DWORD *)(v18 + 84) == a2)
          {
            uint64_t v8 = v17;
            uint64_t v12 = a3[8];
          }
          else
          {
            uint64_t v8 = type metadata accessor for Locale();
            uint64_t v12 = a3[9];
          }
        }
      }
    }
    uint64_t v9 = a1 + v12;
  }

  return _s7Weather24LocationCompositionStateOwet_0(v9, a2, v8);
}

uint64_t sub_100A5F624(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100A5F638);
}

uint64_t sub_100A5F638(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  type metadata accessor for Calendar();
  sub_100162F30();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = a1;
  }
  else
  {
    type metadata accessor for Date();
    sub_100162F30();
    if (*(_DWORD *)(v13 + 84) == a3)
    {
      uint64_t v10 = v12;
      uint64_t v14 = a4[5];
    }
    else
    {
      type metadata accessor for TemperatureScaleConfiguration();
      sub_100162F30();
      if (*(_DWORD *)(v16 + 84) == a3)
      {
        uint64_t v10 = v15;
        uint64_t v14 = a4[6];
      }
      else
      {
        sub_10017DF08(&qword_100E65258);
        sub_100162F30();
        if (*(_DWORD *)(v18 + 84) == a3)
        {
          uint64_t v10 = v17;
          uint64_t v14 = a4[7];
        }
        else
        {
          sub_10017DF08(&qword_100E6B7D0);
          sub_100162F30();
          if (*(_DWORD *)(v20 + 84) == a3)
          {
            uint64_t v10 = v19;
            uint64_t v14 = a4[8];
          }
          else
          {
            uint64_t v10 = type metadata accessor for Locale();
            uint64_t v14 = a4[9];
          }
        }
      }
    }
    uint64_t v11 = a1 + v14;
  }

  return _s7Weather24LocationCompositionStateOwst_0(v11, a2, a2, v10);
}

uint64_t type metadata accessor for MonthlyAveragesChartInput()
{
  uint64_t result = qword_100EAC198;
  if (!qword_100EAC198) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100A5F79C()
{
  type metadata accessor for Calendar();
  if (v0 <= 0x3F)
  {
    type metadata accessor for Date();
    if (v1 <= 0x3F)
    {
      type metadata accessor for TemperatureScaleConfiguration();
      if (v2 <= 0x3F)
      {
        sub_100A5F954();
        if (v3 <= 0x3F)
        {
          sub_100A5FA58();
          if (v4 <= 0x3F)
          {
            type metadata accessor for Locale();
            if (v5 <= 0x3F) {
              swift_initStructMetadata();
            }
          }
        }
      }
    }
  }
}

void sub_100A5F954()
{
  if (!qword_100EAC1A8)
  {
    type metadata accessor for MonthTemperatureStatistics();
    sub_100A5FB5C(&qword_100E9D5E0, (void (*)(uint64_t))&type metadata accessor for MonthTemperatureStatistics);
    sub_100A5FB5C(&qword_100E9D5E8, (void (*)(uint64_t))&type metadata accessor for MonthTemperatureStatistics);
    sub_100A5FB5C(&qword_100E9D5F0, (void (*)(uint64_t))&type metadata accessor for MonthTemperatureStatistics);
    unint64_t v0 = type metadata accessor for MonthlyWeatherStatistics();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100EAC1A8);
    }
  }
}

void sub_100A5FA58()
{
  if (!qword_100EAC1B0)
  {
    type metadata accessor for MonthPrecipitationStatistics();
    sub_100A5FB5C(&qword_100E9D5C8, (void (*)(uint64_t))&type metadata accessor for MonthPrecipitationStatistics);
    sub_100A5FB5C(&qword_100E9D5D0, (void (*)(uint64_t))&type metadata accessor for MonthPrecipitationStatistics);
    sub_100A5FB5C(&qword_100E9D5D8, (void (*)(uint64_t))&type metadata accessor for MonthPrecipitationStatistics);
    unint64_t v0 = type metadata accessor for MonthlyWeatherStatistics();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100EAC1B0);
    }
  }
}

uint64_t sub_100A5FB5C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100A5FBA4()
{
  if ((static Calendar.== infix(_:_:)() & 1) == 0) {
    return 0;
  }
  type metadata accessor for MonthlyAveragesChartInput();
  if ((static Date.== infix(_:_:)() & 1) == 0) {
    return 0;
  }
  if ((static TemperatureScaleConfiguration.== infix(_:_:)() & 1) == 0) {
    return 0;
  }
  type metadata accessor for MonthTemperatureStatistics();
  sub_100A5FB5C(&qword_100E9D5E0, (void (*)(uint64_t))&type metadata accessor for MonthTemperatureStatistics);
  sub_100A5FB5C(&qword_100E9D5E8, (void (*)(uint64_t))&type metadata accessor for MonthTemperatureStatistics);
  uint64_t v0 = sub_100A5FB5C(&qword_100E9D5F0, (void (*)(uint64_t))&type metadata accessor for MonthTemperatureStatistics);
  if ((sub_100180A2C(v0) & 1) == 0) {
    return 0;
  }
  type metadata accessor for MonthPrecipitationStatistics();
  sub_100A5FB5C(&qword_100E9D5C8, (void (*)(uint64_t))&type metadata accessor for MonthPrecipitationStatistics);
  sub_100A5FB5C(&qword_100E9D5D0, (void (*)(uint64_t))&type metadata accessor for MonthPrecipitationStatistics);
  uint64_t v1 = sub_100A5FB5C(&qword_100E9D5D8, (void (*)(uint64_t))&type metadata accessor for MonthPrecipitationStatistics);
  if ((sub_100180A2C(v1) & 1) == 0) {
    return 0;
  }

  return static Locale.== infix(_:_:)();
}

uint64_t sub_100A5FDB4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  type metadata accessor for TemperatureScaleConfiguration();
  sub_100179C0C();
  uint64_t v42 = v4;
  uint64_t v43 = v3;
  __chkstk_darwin(v3);
  sub_100109314();
  uint64_t v40 = v5;
  uint64_t v6 = type metadata accessor for AppConfigurationState();
  __chkstk_darwin(v6 - 8);
  sub_1001626E0();
  uint64_t v9 = v8 - v7;
  type metadata accessor for Date();
  sub_100179C0C();
  uint64_t v44 = v10;
  uint64_t v45 = v11;
  __chkstk_darwin(v10);
  sub_100109314();
  uint64_t v13 = v12;
  uint64_t v14 = type metadata accessor for TimeState();
  __chkstk_darwin(v14 - 8);
  sub_1001626E0();
  uint64_t v17 = v16 - v15;
  type metadata accessor for Calendar();
  sub_100179C0C();
  uint64_t v38 = v19;
  uint64_t v39 = v18;
  __chkstk_darwin(v18);
  sub_1001626E0();
  uint64_t v35 = v21 - v20;
  uint64_t v22 = type metadata accessor for Locale();
  sub_100179C0C();
  uint64_t v24 = v23;
  __chkstk_darwin(v25);
  sub_1001626E0();
  uint64_t v28 = v27 - v26;
  uint64_t v29 = a1 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_environment;
  swift_beginAccess();
  uint64_t v36 = type metadata accessor for EnvironmentState();
  uint64_t v37 = *(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 16);
  v37(v28, v29 + *(int *)(v36 + 28), v22);
  Locale.calendar.getter();
  (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v28, v22);
  sub_1001B9A8C(a1 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_time, v17, (uint64_t (*)(void))type metadata accessor for TimeState);
  uint64_t v30 = *(void (**)(uint64_t, uint64_t, uint64_t))(v45 + 32);
  v30(v13, v17, v44);
  sub_1001B9A8C(a1 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_appConfiguration, v9, (uint64_t (*)(void))type metadata accessor for AppConfigurationState);
  AppConfiguration.temperatureScale.getter();
  uint64_t v31 = type metadata accessor for AppConfiguration();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v31 - 8) + 8))(v9, v31);
  uint64_t v32 = (int *)type metadata accessor for MonthlyAveragesChartInput();
  WeatherStatisticsModel.monthlyTemperatureStatistics.getter();
  WeatherStatisticsModel.monthlyPrecipitationStatistics.getter();
  uint64_t v33 = v29 + *(int *)(v36 + 28);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v38 + 32))(a2, v35, v39);
  v30(a2 + v32[5], v13, v44);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v42 + 32))(a2 + v32[6], v40, v43);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v37)(a2 + v32[9], v33, v22);
}

ValueMetadata *type metadata accessor for MonthlyAveragesChartInputFactory()
{
  return &type metadata for MonthlyAveragesChartInputFactory;
}

void sub_100A60180()
{
  if (static Date.== infix(_:_:)())
  {
    type metadata accessor for DetailChartsViewModel();
    sub_100BDA7F0();
  }
}

uint64_t type metadata accessor for DetailChartsViewModel()
{
  uint64_t result = qword_100EAC248;
  if (!qword_100EAC248) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t *sub_100A6022C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for Date();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_100A602FC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);

  return swift_bridgeObjectRelease();
}

uint64_t sub_100A60370(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_100A603F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100A6047C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100A60500(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100A60514);
}

uint64_t sub_100A60514(uint64_t a1, uint64_t a2, uint64_t a3)
{
  type metadata accessor for Date();
  sub_100162F30();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    return _s7Weather24LocationCompositionStateOwet_0(a1, a2, v6);
  }
  else
  {
    unint64_t v9 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v9 >= 0xFFFFFFFF) {
      LODWORD(v9) = -1;
    }
    return (v9 + 1);
  }
}

uint64_t sub_100A605A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100A605B4);
}

void sub_100A605B4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  type metadata accessor for Date();
  sub_100162F30();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    _s7Weather24LocationCompositionStateOwst_0(a1, a2, a2, v8);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
}

uint64_t sub_100A6063C()
{
  uint64_t result = type metadata accessor for Date();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

Swift::Void __swiftcall AppStateMonitor.applicationDidEnterBackground()()
{
}

uint64_t sub_100A606E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100A606F4);
}

uint64_t sub_100A606F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  type metadata accessor for PressureTrend();
  sub_100162F30();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    return _s7Weather24LocationCompositionStateOwet_0(a1, a2, v6);
  }
  else
  {
    unint64_t v9 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v9 >= 0xFFFFFFFF) {
      LODWORD(v9) = -1;
    }
    return (v9 + 1);
  }
}

uint64_t sub_100A60784(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100A60798);
}

void sub_100A60798(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  type metadata accessor for PressureTrend();
  sub_100162F30();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    _s7Weather24LocationCompositionStateOwst_0(a1, a2, a2, v8);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
}

uint64_t sub_100A60824(uint64_t a1, uint64_t a2)
{
  if ((sub_100889E14(a1, a2) & 1) == 0) {
    return 0;
  }
  uint64_t v4 = (int *)type metadata accessor for PressureComponentViewModel();
  sub_10017CC9C(v4[5]);
  BOOL v7 = v7 && v5 == v6;
  if (v7 || (v8 = _stringCompareWithSmolCheck(_:_:expecting:)(), uint64_t result = 0, (v8 & 1) != 0))
  {
    sub_10017CC9C(v4[6]);
    BOOL v12 = v7 && v10 == v11;
    if (v12 || (v13 = _stringCompareWithSmolCheck(_:_:expecting:)(), uint64_t result = 0, (v13 & 1) != 0))
    {
      sub_10017CC9C(v4[7]);
      BOOL v16 = v7 && v14 == v15;
      if (v16 || (v17 = _stringCompareWithSmolCheck(_:_:expecting:)(), uint64_t result = 0, (v17 & 1) != 0))
      {
        if (*(double *)(a1 + v4[8]) == *(double *)(a2 + v4[8]))
        {
          sub_10017CC9C(v4[9]);
          if (v7 && v18 == v19) {
            return 1;
          }
          return _stringCompareWithSmolCheck(_:_:expecting:)();
        }
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_100A60928()
{
  uint64_t v1 = type metadata accessor for ChartDarkeningScrim();
  sub_100A62FDC((unint64_t *)&unk_100EAC490, (void (*)(uint64_t))&type metadata accessor for ChartDarkeningScrim);
  dispatch thunk of RawRepresentable.rawValue.getter();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0, v1);
  dispatch thunk of RawRepresentable.rawValue.getter();
  sub_100A62FDC(&qword_100E6BEE0, (void (*)(uint64_t))&type metadata accessor for ChartDarkeningScrim);
  return dispatch thunk of OptionSet.init(rawValue:)();
}

uint64_t sub_100A60A4C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 16))();
}

void UserNotificationMonitor.init()()
{
}

void sub_100A60AF8()
{
  swift_getObjectType();

  ApplicationStateMonitor.applicationDidEnterBackground()();
}

void sub_100A60B34(uint64_t a1, void *a2, uint64_t a3, void (**a4)(void))
{
  uint64_t v88 = a3;
  uint64_t v84 = type metadata accessor for MainAction();
  __chkstk_darwin(v84);
  BOOL v7 = (char *)&v81 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v87 = type metadata accessor for NotificationLocation();
  __chkstk_darwin(v87);
  uint64_t v85 = (uint64_t)&v81 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10017DF08((uint64_t *)&unk_100EAC3C0);
  __chkstk_darwin(v9 - 8);
  uint64_t v86 = (uint64_t)&v81 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  char v13 = (char *)&v81 - v12;
  uint64_t v14 = sub_10017DF08(&qword_100E749B0);
  __chkstk_darwin(v14 - 8);
  BOOL v16 = (char *)&v81 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100E627D8 != -1) {
    swift_once();
  }
  uint64_t v17 = type metadata accessor for Logger();
  uint64_t v18 = sub_1002102B0(v17, (uint64_t)qword_100F51EA0);
  id v19 = a2;
  uint64_t v89 = (uint8_t *)v18;
  uint64_t v20 = Logger.logObject.getter();
  os_log_type_t v21 = static os_log_type_t.error.getter();
  BOOL v22 = os_log_type_enabled(v20, v21);
  uint64_t v23 = &selRef_initWithNibName_bundle_;
  uint64_t v24 = &selRef_initWithNibName_bundle_;
  uint64_t v25 = &selRef_initWithNibName_bundle_;
  char v90 = a4;
  if (v22)
  {
    uint64_t v26 = swift_slowAlloc();
    uint64_t v82 = v7;
    uint64_t v27 = (uint8_t *)v26;
    uint64_t v28 = swift_slowAlloc();
    uint64_t v83 = v13;
    uint64_t v29 = (void *)v28;
    *(_DWORD *)uint64_t v27 = 138543362;
    uint64_t v30 = v16;
    id v31 = [v19 notification];
    id v32 = [v31 request];

    id v33 = [v32 content];
    uint64_t v24 = &selRef_initWithNibName_bundle_;
    *(void *)&long long v91 = v33;
    a4 = v90;
    uint64_t v25 = &selRef_initWithNibName_bundle_;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v29 = v33;
    BOOL v16 = v30;
    uint64_t v23 = &selRef_initWithNibName_bundle_;

    _os_log_impl((void *)&_mh_execute_header, v20, v21, "Received notification with content: %{public}@", v27, 0xCu);
    sub_10017DF08(&qword_100EAC3F0);
    swift_arrayDestroy();
    char v13 = v83;
    swift_slowDealloc();
    BOOL v7 = v82;
    swift_slowDealloc();
  }
  else
  {
  }
  id v34 = [v19 v23[240]];
  id v35 = [v34 v24[241]];

  id v36 = [v35 v25[242]];
  id v37 = [v36 userInfo];

  uint64_t v38 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v39 = sub_100A61FF0(v38);
  swift_bridgeObjectRelease();
  if (!v39)
  {
    uint64_t v58 = v23;
    id v59 = v19;
    uint64_t v60 = Logger.logObject.getter();
    os_log_type_t v61 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v60, v61))
    {
      uint64_t v62 = (uint8_t *)swift_slowAlloc();
      *(void *)&long long v91 = swift_slowAlloc();
      *(_DWORD *)uint64_t v62 = 136446210;
      id v63 = [v59 v58[240]];
      id v64 = [v63 request];

      id v65 = [v64 identifier];
      uint64_t v66 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v68 = v67;

      uint64_t v94 = sub_10016414C(v66, v68, (uint64_t *)&v91);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      char v69 = "Received unexpected notification user info values for notification: %{public}s";
LABEL_18:
      _os_log_impl((void *)&_mh_execute_header, v60, v61, v69, v62, 0xCu);
      swift_arrayDestroy();
      a4 = v90;
      swift_slowDealloc();
      swift_slowDealloc();

LABEL_20:
      a4[2](a4);
      goto LABEL_21;
    }
LABEL_19:

    goto LABEL_20;
  }
  sub_100A03740();
  if (!*((void *)&v92 + 1))
  {
    uint64_t v70 = v23;
    swift_bridgeObjectRelease();
    sub_1001781AC((uint64_t)&v91, &qword_100EAC3D0);
    goto LABEL_16;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
    uint64_t v70 = v23;
    swift_bridgeObjectRelease();
LABEL_16:
    id v59 = v19;
    uint64_t v60 = Logger.logObject.getter();
    os_log_type_t v61 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v60, v61))
    {
      uint64_t v62 = (uint8_t *)swift_slowAlloc();
      *(void *)&long long v91 = swift_slowAlloc();
      *(_DWORD *)uint64_t v62 = 136446210;
      id v71 = [v59 v70[240]];
      id v72 = [v71 request];

      id v73 = [v72 identifier];
      uint64_t v74 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v76 = v75;

      uint64_t v94 = sub_10016414C(v74, v76, (uint64_t *)&v91);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      char v69 = "Missing location identifier for notification: %{public}s";
      goto LABEL_18;
    }
    goto LABEL_19;
  }
  uint64_t v40 = v94;
  unint64_t v41 = v95;
  sub_100A623B8(v39, (uint64_t)v16);
  swift_bridgeObjectRelease();
  uint64_t v42 = v88;
  sub_100A6247C(v40, v41, v19, (uint64_t)v13);
  swift_bridgeObjectRelease();
  uint64_t v43 = v86;
  sub_10006DF38((uint64_t)v13, v86, (uint64_t *)&unk_100EAC3C0);
  if (_s7Weather24LocationCompositionStateOwet_0(v43, 1, v87) == 1)
  {
    uint64_t v44 = v23;
    sub_1001781AC(v43, (uint64_t *)&unk_100EAC3C0);
    id v45 = v19;
    uint64_t v46 = Logger.logObject.getter();
    os_log_type_t v47 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v46, v47))
    {
      uint64_t v48 = (uint8_t *)swift_slowAlloc();
      uint64_t v49 = swift_slowAlloc();
      uint64_t v83 = v13;
      *(void *)&long long v91 = v49;
      *(_DWORD *)uint64_t v48 = 136446210;
      uint64_t v89 = v48 + 4;
      id v50 = [v45 v44[240]];
      uint64_t v51 = v16;
      id v52 = [v50 request];

      id v53 = [v52 identifier];
      uint64_t v54 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v56 = v55;

      uint64_t v57 = v54;
      BOOL v16 = v51;
      uint64_t v94 = sub_10016414C(v57, v56, (uint64_t *)&v91);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v46, v47, "Unable to find saved location for notification: %{public}s", v48, 0xCu);
      swift_arrayDestroy();
      char v13 = v83;
      swift_slowDealloc();
      a4 = v90;
      swift_slowDealloc();
    }
    else
    {
    }
    a4[2](a4);
    sub_1001781AC((uint64_t)v13, (uint64_t *)&unk_100EAC3C0);
    uint64_t v80 = (uint64_t)v16;
  }
  else
  {
    uint64_t v77 = v85;
    sub_1003CA45C(v43, v85);
    uint64_t v78 = *(uint64_t (**)(uint64_t))(v42 + OBJC_IVAR____TtC7Weather23UserNotificationMonitor_dispatcher);
    uint64_t v79 = (uint64_t)&v7[*(int *)(sub_10017DF08((uint64_t *)&unk_100EAC3E0) + 48)];
    sub_100A62F88(v77, (uint64_t)v7, (void (*)(void))type metadata accessor for NotificationLocation);
    sub_10006DF38((uint64_t)v16, v79, &qword_100E749B0);
    type metadata accessor for NotificationsAction();
    swift_storeEnumTagMultiPayload();
    swift_storeEnumTagMultiPayload();
    uint64_t v93 = 0;
    long long v91 = 0u;
    long long v92 = 0u;
    swift_retain();
    sub_1001AAF58((uint64_t)v7, (uint64_t)&v91, v78);
    sub_1001781AC((uint64_t)&v91, (uint64_t *)&unk_100EA01F0);
    sub_1001590E0((uint64_t)v7, (void (*)(void))type metadata accessor for MainAction);
    swift_release();
    a4[2](a4);
    sub_1001590E0(v77, (void (*)(void))type metadata accessor for NotificationLocation);
    sub_1001781AC((uint64_t)v13, (uint64_t *)&unk_100EAC3C0);
    uint64_t v80 = (uint64_t)v16;
  }
  sub_1001781AC(v80, &qword_100E749B0);
LABEL_21:
  _Block_release(a4);
}

uint64_t UserNotificationMonitor.userNotificationCenter(_:didReceive:withCompletionHandler:)(uint64_t a1, void *a2, uint64_t (*a3)(void), uint64_t (*a4)(void))
{
  v74[1] = type metadata accessor for MainAction();
  sub_100162E4C();
  __chkstk_darwin(v7);
  sub_100109314();
  uint64_t v76 = v8;
  uint64_t v78 = type metadata accessor for NotificationLocation();
  sub_100162E4C();
  __chkstk_darwin(v9);
  sub_100109314();
  uint64_t v75 = v10;
  uint64_t v11 = sub_10017DF08((uint64_t *)&unk_100EAC3C0);
  __chkstk_darwin(v11 - 8);
  char v13 = (char *)v74 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  BOOL v16 = (char *)v74 - v15;
  uint64_t v17 = sub_10017DF08(&qword_100E749B0);
  __chkstk_darwin(v17 - 8);
  id v19 = (char *)v74 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100E627D8 != -1) {
    swift_once();
  }
  uint64_t v20 = type metadata accessor for Logger();
  uint64_t v21 = sub_1002102B0(v20, (uint64_t)qword_100F51EA0);
  id v22 = a2;
  uint64_t v81 = v21;
  uint64_t v23 = Logger.logObject.getter();
  os_log_type_t v24 = static os_log_type_t.error.getter();
  BOOL v25 = os_log_type_enabled(v23, v24);
  uint64_t v26 = &selRef_initWithNibName_bundle_;
  uint64_t v27 = &selRef_initWithNibName_bundle_;
  uint64_t v82 = a3;
  uint64_t v77 = v13;
  if (v25)
  {
    uint64_t v28 = (uint8_t *)sub_10017E670();
    uint64_t v29 = swift_slowAlloc();
    v74[0] = a4;
    uint64_t v30 = (void *)v29;
    *(_DWORD *)uint64_t v28 = 138543362;
    uint64_t v80 = v19;
    id v31 = v16;
    id v32 = [v22 notification];
    id v33 = [v32 request];

    id v34 = [v33 content];
    *(void *)&long long v83 = v34;
    id v19 = v80;
    uint64_t v27 = &selRef_initWithNibName_bundle_;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v30 = v34;
    BOOL v16 = v31;
    uint64_t v26 = &selRef_initWithNibName_bundle_;

    _os_log_impl((void *)&_mh_execute_header, v23, v24, "Received notification with content: %{public}@", v28, 0xCu);
    sub_10017DF08(&qword_100EAC3F0);
    swift_arrayDestroy();
    a4 = (uint64_t (*)(void))v74[0];
    sub_100162EE0();
    a3 = v82;
    sub_100162EE0();
  }
  else
  {
  }
  id v35 = [v22 v26[240]];
  id v36 = [v35 v27[241]];

  id v37 = [v36 content];
  id v38 = [v37 userInfo];

  uint64_t v39 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v40 = sub_100A61FF0(v39);
  swift_bridgeObjectRelease();
  if (!v40)
  {
    id v53 = v22;
    uint64_t v54 = (uint8_t *)v81;
    unint64_t v55 = Logger.logObject.getter();
    uint64_t v56 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v55, (os_log_type_t)v56))
    {
      sub_10017E670();
      *(void *)&long long v83 = sub_100184360();
      a3 = a4;
      id v57 = sub_10019F6D8(4.8751e-34);
      id v58 = [v57 v27[241]];

      id v59 = [v58 identifier];
      static String._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v60 = sub_10017ADB4();
      sub_100180A54(v60);

      swift_bridgeObjectRelease();
      os_log_type_t v61 = "Received unexpected notification user info values for notification: %{public}s";
LABEL_18:
      _os_log_impl((void *)&_mh_execute_header, v55, (os_log_type_t)v56, v61, v54, 0xCu);
      swift_arrayDestroy();
      sub_100162EE0();
      sub_100162EE0();

      return a3();
    }
LABEL_19:

    return a3();
  }
  sub_100A03740();
  if (!*((void *)&v84 + 1))
  {
    swift_bridgeObjectRelease();
    sub_1001781AC((uint64_t)&v83, &qword_100EAC3D0);
    goto LABEL_16;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_16:
    id v53 = v22;
    uint64_t v54 = (uint8_t *)v81;
    unint64_t v55 = Logger.logObject.getter();
    LOBYTE(v56) = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v55, (os_log_type_t)v56))
    {
      sub_10017E670();
      *(void *)&long long v83 = sub_100184360();
      a3 = a4;
      id v62 = sub_10019F6D8(4.8751e-34);
      id v63 = [v62 v27[241]];

      id v64 = [v63 identifier];
      static String._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v65 = sub_10017ADB4();
      sub_100180A54(v65);

      swift_bridgeObjectRelease();
      os_log_type_t v61 = "Missing location identifier for notification: %{public}s";
      goto LABEL_18;
    }
    goto LABEL_19;
  }
  uint64_t v41 = v86;
  unint64_t v42 = v87;
  sub_100A623B8(v40, (uint64_t)v19);
  swift_bridgeObjectRelease();
  uint64_t v43 = v79;
  sub_100A6247C(v41, v42, v22, (uint64_t)v16);
  swift_bridgeObjectRelease();
  uint64_t v44 = (uint64_t)v77;
  sub_10006DF38((uint64_t)v16, (uint64_t)v77, (uint64_t *)&unk_100EAC3C0);
  if (_s7Weather24LocationCompositionStateOwet_0(v44, 1, v78) == 1)
  {
    id v45 = v26;
    uint64_t v80 = v19;
    sub_1001781AC(v44, (uint64_t *)&unk_100EAC3C0);
    id v46 = v22;
    os_log_type_t v47 = (uint8_t *)v81;
    uint64_t v48 = Logger.logObject.getter();
    os_log_type_t v49 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v48, v49))
    {
      sub_10017E670();
      uint64_t v81 = sub_100184360();
      *(void *)&long long v83 = v81;
      *(_DWORD *)os_log_type_t v47 = 136446210;
      uint64_t v79 = v47 + 4;
      id v50 = [v46 v45[240]];
      id v51 = [v50 request];

      id v52 = [v51 identifier];
      static String._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v86 = sub_10017ADB4();
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v48, v49, "Unable to find saved location for notification: %{public}s", v47, 0xCu);
      swift_arrayDestroy();
      a3 = v82;
      sub_100162EE0();
      sub_100162EE0();
    }
    else
    {
    }
    a3();
    sub_1001781AC((uint64_t)v16, (uint64_t *)&unk_100EAC3C0);
    uint64_t v73 = (uint64_t)v80;
  }
  else
  {
    uint64_t v67 = v75;
    sub_1003CA45C(v44, v75);
    unint64_t v68 = *(uint64_t (**)(uint64_t))&v43[OBJC_IVAR____TtC7Weather23UserNotificationMonitor_dispatcher];
    uint64_t v69 = sub_10017DF08((uint64_t *)&unk_100EAC3E0);
    uint64_t v70 = v76;
    uint64_t v71 = v76 + *(int *)(v69 + 48);
    sub_100A62F88(v67, v76, (void (*)(void))type metadata accessor for NotificationLocation);
    sub_10006DF38((uint64_t)v19, v71, &qword_100E749B0);
    type metadata accessor for NotificationsAction();
    swift_storeEnumTagMultiPayload();
    swift_storeEnumTagMultiPayload();
    uint64_t v85 = 0;
    long long v83 = 0u;
    long long v84 = 0u;
    swift_retain();
    sub_1001AAF58(v70, (uint64_t)&v83, v68);
    sub_1001781AC((uint64_t)&v83, (uint64_t *)&unk_100EA01F0);
    sub_1001590E0(v70, (void (*)(void))type metadata accessor for MainAction);
    uint64_t v72 = swift_release();
    ((void (*)(uint64_t))a3)(v72);
    sub_1001590E0(v67, (void (*)(void))type metadata accessor for NotificationLocation);
    sub_1001781AC((uint64_t)v16, (uint64_t *)&unk_100EAC3C0);
    uint64_t v73 = (uint64_t)v19;
  }
  return sub_1001781AC(v73, &qword_100E749B0);
}

unint64_t sub_100A61FF0(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    sub_10017DF08(&qword_100EAC4B0);
    uint64_t v2 = (void *)static _DictionaryStorage.allocate(capacity:)();
  }
  else
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
  }
  sub_100215188(a1, v41);
  uint64_t v3 = v41[0];
  uint64_t v4 = v41[3];
  int64_t v29 = (unint64_t)(v41[2] + 64) >> 6;
  uint64_t v30 = v41[1];
  unint64_t v5 = v41[4];
  uint64_t v6 = &__src[40];
  uint64_t v7 = &__dst[40];
  uint64_t v8 = &v35;
  uint64_t v9 = &v37;
  unint64_t result = swift_bridgeObjectRetain();
  if (!v5) {
    goto LABEL_6;
  }
LABEL_5:
  uint64_t v31 = (v5 - 1) & v5;
  int64_t v32 = v4;
  for (unint64_t i = __clz(__rbit64(v5)) | (v4 << 6); ; unint64_t i = __clz(__rbit64(v13)) + (v14 << 6))
  {
    sub_1000990DC(*(void *)(v3 + 48) + 40 * i, (uint64_t)__src);
    sub_1001643C8(*(void *)(v3 + 56) + 32 * i, (uint64_t)v6);
    memcpy(__dst, __src, sizeof(__dst));
    sub_1000990DC((uint64_t)__dst, (uint64_t)v34);
    if (!swift_dynamicCast())
    {
      sub_1001781AC((uint64_t)__dst, &qword_100EAC4B8);
      swift_bridgeObjectRelease();
      sub_10023B8FC();
      swift_release();
      return 0;
    }
    sub_1001643C8((uint64_t)v7, (uint64_t)v34);
    sub_1001781AC((uint64_t)__dst, &qword_100EAC4B8);
    sub_100098DB4(v34, v8);
    long long v36 = v33;
    sub_100098DB4(v8, v9);
    long long v16 = v36;
    sub_100098DB4(v9, v38);
    sub_100098DB4(v38, &v36);
    unint64_t result = sub_1001D23B8();
    unint64_t v17 = result;
    if (v18)
    {
      id v19 = v9;
      uint64_t v20 = v8;
      uint64_t v21 = v7;
      uint64_t v22 = v3;
      uint64_t v23 = v6;
      os_log_type_t v24 = (_OWORD *)(v2[6] + 16 * result);
      swift_bridgeObjectRelease();
      *os_log_type_t v24 = v16;
      uint64_t v6 = v23;
      uint64_t v3 = v22;
      uint64_t v7 = v21;
      uint64_t v8 = v20;
      uint64_t v9 = v19;
      BOOL v25 = (_OWORD *)(v2[7] + 32 * v17);
      _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v25);
      unint64_t result = (unint64_t)sub_100098DB4(&v36, v25);
      goto LABEL_28;
    }
    if (v2[2] >= v2[3]) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_OWORD *)(v2[6] + 16 * result) = v16;
    unint64_t result = (unint64_t)sub_100098DB4(&v36, (_OWORD *)(v2[7] + 32 * result));
    uint64_t v26 = v2[2];
    BOOL v27 = __OFADD__(v26, 1);
    uint64_t v28 = v26 + 1;
    if (v27) {
      goto LABEL_34;
    }
    v2[2] = v28;
LABEL_28:
    unint64_t v5 = v31;
    uint64_t v4 = v32;
    if (v31) {
      goto LABEL_5;
    }
LABEL_6:
    int64_t v12 = v4 + 1;
    if (__OFADD__(v4, 1)) {
      goto LABEL_35;
    }
    if (v12 >= v29) {
      goto LABEL_31;
    }
    unint64_t v13 = *(void *)(v30 + 8 * v12);
    int64_t v14 = v4 + 1;
    if (!v13)
    {
      int64_t v14 = v4 + 2;
      if (v4 + 2 >= v29) {
        goto LABEL_31;
      }
      unint64_t v13 = *(void *)(v30 + 8 * v14);
      if (!v13)
      {
        int64_t v14 = v4 + 3;
        if (v4 + 3 >= v29) {
          goto LABEL_31;
        }
        unint64_t v13 = *(void *)(v30 + 8 * v14);
        if (!v13)
        {
          int64_t v14 = v4 + 4;
          if (v4 + 4 >= v29) {
            goto LABEL_31;
          }
          unint64_t v13 = *(void *)(v30 + 8 * v14);
          if (!v13)
          {
            int64_t v14 = v4 + 5;
            if (v4 + 5 >= v29) {
              goto LABEL_31;
            }
            unint64_t v13 = *(void *)(v30 + 8 * v14);
            if (!v13)
            {
              int64_t v15 = v4 + 6;
              while (v15 < v29)
              {
                unint64_t v13 = *(void *)(v30 + 8 * v15++);
                if (v13)
                {
                  int64_t v14 = v15 - 1;
                  goto LABEL_21;
                }
              }
LABEL_31:
              sub_10023B8FC();
              return (unint64_t)v2;
            }
          }
        }
      }
    }
LABEL_21:
    uint64_t v31 = (v13 - 1) & v13;
    int64_t v32 = v14;
  }
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
  return result;
}

uint64_t sub_100A623B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if (*(void *)(a1 + 16)
    && (unint64_t v4 = sub_1001D23B8(), (v5 & 1) != 0)
    && (sub_1001643C8(*(void *)(a1 + 56) + 32 * v4, (uint64_t)v8), (swift_dynamicCast() & 1) != 0))
  {
    URL.init(string:)();
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v7 = type metadata accessor for URL();
    return _s7Weather24LocationCompositionStateOwst_0(a2, 1, 1, v7);
  }
}

uint64_t sub_100A6247C@<X0>(uint64_t a1@<X1>, unint64_t a2@<X2>, void *a3@<X3>, uint64_t a4@<X8>)
{
  id v61 = a3;
  uint64_t v62 = a4;
  uint64_t v6 = sub_10017DF08(&qword_100EAC4A0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = &v57[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = type metadata accessor for LocationsState();
  uint64_t v10 = v9 - 8;
  __chkstk_darwin(v9);
  int64_t v12 = &v57[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v13 = type metadata accessor for LocationModel();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  long long v16 = &v57[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v17);
  id v19 = &v57[-v18];
  uint64_t v20 = sub_1001AB118();
  sub_100A62F88(v20 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_locations, (uint64_t)v12, (void (*)(void))type metadata accessor for LocationsState);
  swift_release();
  uint64_t v21 = *(int *)(v10 + 48);
  id v22 = (id)v13;
  uint64_t v23 = *(void *)&v12[v21];
  swift_bridgeObjectRetain();
  sub_1001590E0((uint64_t)v12, (void (*)(void))type metadata accessor for LocationsState);
  swift_bridgeObjectRetain();
  sub_100A039EC(a1, a2, v23);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v13) != 1)
  {
    int64_t v29 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v14 + 32);
    v29(v19, v8, v13);
    if (qword_100E627D8 != -1) {
      swift_once();
    }
    uint64_t v30 = type metadata accessor for Logger();
    sub_1002102B0(v30, (uint64_t)qword_100F51EA0);
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v14 + 16))(v16, v19, v13);
    id v31 = v61;
    int64_t v32 = Logger.logObject.getter();
    os_log_type_t v33 = static os_log_type_t.default.getter();
    int v34 = v33;
    if (os_log_type_enabled(v32, v33))
    {
      uint64_t v35 = swift_slowAlloc();
      uint64_t v59 = swift_slowAlloc();
      uint64_t v64 = v59;
      *(_DWORD *)uint64_t v35 = 141558531;
      v63[0] = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v35 + 12) = 2081;
      uint64_t v60 = v29;
      sub_100A62FDC(&qword_100EAC4A8, (void (*)(uint64_t))&type metadata accessor for LocationModel);
      int v58 = v34;
      dispatch thunk of Identifiable.id.getter();
      id v61 = v22;
      v63[0] = sub_10016414C(v63[0], v63[1], &v64);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      (*(void (**)(unsigned char *, id))(v14 + 8))(v16, v61);
      *(_WORD *)(v35 + 22) = 2082;
      id v36 = [v31 notification];
      id v37 = [v36 request];

      id v38 = [v37 identifier];
      uint64_t v39 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v41 = v40;

      uint64_t v42 = v39;
      int64_t v29 = v60;
      id v22 = v61;
      v63[0] = sub_10016414C(v42, v41, &v64);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v32, (os_log_type_t)v58, "Dispatching action to route to location %{private,mask.hash}s for notification: %{public}s", (uint8_t *)v35, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      (*(void (**)(unsigned char *, uint64_t))(v14 + 8))(v16, v13);
    }
    uint64_t v28 = v62;
    v29((unsigned char *)v62, v19, (uint64_t)v22);
    uint64_t v54 = 0;
    goto LABEL_21;
  }
  sub_1001781AC((uint64_t)v8, &qword_100EAC4A0);
  if (static Location.currentLocationID.getter() == a1 && v24 == a2)
  {
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  char v26 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  if (v26)
  {
LABEL_13:
    if (qword_100E627D8 != -1) {
      swift_once();
    }
    uint64_t v43 = type metadata accessor for Logger();
    sub_1002102B0(v43, (uint64_t)qword_100F51EA0);
    swift_bridgeObjectRetain_n();
    id v44 = v61;
    id v45 = Logger.logObject.getter();
    os_log_type_t v46 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v45, v46))
    {
      uint64_t v47 = swift_slowAlloc();
      v63[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v47 = 141558531;
      uint64_t v64 = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v47 + 12) = 2081;
      swift_bridgeObjectRetain();
      uint64_t v64 = sub_10016414C(a1, a2, v63);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v47 + 22) = 2082;
      id v61 = (id)(v47 + 24);
      id v48 = [v44 notification];
      id v49 = [v48 request];

      id v50 = [v49 identifier];
      uint64_t v51 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v53 = v52;

      uint64_t v64 = sub_10016414C(v51, v53, v63);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v45, v46, "Dispatching action to route to current location %{private,mask.hash}s for notification: %{public}s", (uint8_t *)v47, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    uint64_t v54 = 1;
    uint64_t v28 = v62;
LABEL_21:
    _s7Weather24LocationCompositionStateOwst_0(v28, v54, 1, (uint64_t)v22);
    uint64_t v27 = 0;
    goto LABEL_22;
  }
  uint64_t v27 = 1;
  uint64_t v28 = v62;
LABEL_22:
  uint64_t v55 = type metadata accessor for NotificationLocation();
  return _s7Weather24LocationCompositionStateOwst_0(v28, v27, 1, v55);
}

void sub_100A62CE0(uint64_t a1, uint64_t a2, uint64_t a3, void (**a4)(void, void))
{
  a4[2](a4, 26);

  _Block_release(a4);
}

uint64_t UserNotificationMonitor.userNotificationCenter(_:willPresent:withCompletionHandler:)(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  return a3(26);
}

void sub_100A62D6C(void *a1, int a2, void *a3, void *a4, void *aBlock, void (*a6)(id, id, id, void *))
{
  uint64_t v10 = _Block_copy(aBlock);
  _Block_copy(v10);
  id v11 = a3;
  id v12 = a4;
  id v13 = a1;
  a6(v11, v12, v13, v10);
  _Block_release(v10);
}

Swift::Void __swiftcall UserNotificationMonitor.userNotificationCenter(_:openSettingsFor:)(UNUserNotificationCenter _, UNNotification_optional openSettingsFor)
{
  type metadata accessor for MainAction();
  sub_100162E4C();
  __chkstk_darwin(v3);
  char v5 = (char *)v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(uint64_t (**)(uint64_t))(v2 + OBJC_IVAR____TtC7Weather23UserNotificationMonitor_dispatcher);
  type metadata accessor for NotificationsAction();
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  uint64_t v8 = 0;
  memset(v7, 0, sizeof(v7));
  swift_retain();
  sub_1001AAF58((uint64_t)v5, (uint64_t)v7, v6);
  sub_1001781AC((uint64_t)v7, (uint64_t *)&unk_100EA01F0);
  sub_1001590E0((uint64_t)v5, (void (*)(void))type metadata accessor for MainAction);
  swift_release();
}

uint64_t sub_100A62F88(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  uint64_t v4 = sub_10011BFA4();
  v5(v4);
  return a2;
}

uint64_t sub_100A62FDC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100A63030@<X0>(uint64_t a1@<X8>)
{
  uint64_t v35 = a1;
  uint64_t v1 = type metadata accessor for Location();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10017DF08(&qword_100E63770);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10017DF08(&qword_100E63850);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10017DF08(&qword_100E885C0);
  __chkstk_darwin(v11 - 8);
  id v13 = (char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for AirQuality();
  uint64_t v34 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  os_log_type_t v33 = (char *)&v32 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100E62AD8 != -1) {
    swift_once();
  }
  uint64_t v16 = qword_100F523C0;
  static Location.cupertino.getter();
  uint64_t v17 = Location.id.getter();
  uint64_t v19 = v18;
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  sub_1001BBE9C(v17, v19, v16);
  swift_bridgeObjectRelease();
  uint64_t v20 = type metadata accessor for LocationWeatherDataState(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v7, 1, v20) == 1)
  {
    uint64_t v21 = &qword_100E63770;
    uint64_t v22 = (uint64_t)v7;
LABEL_7:
    sub_1001AB060(v22, v21);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v13, 1, 1, v14);
    goto LABEL_8;
  }
  sub_1001177B0((uint64_t)v10);
  sub_1001569FC((uint64_t)v7, (void (*)(void))type metadata accessor for LocationWeatherDataState);
  uint64_t v23 = type metadata accessor for WeatherData(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v10, 1, v23) == 1)
  {
    uint64_t v21 = &qword_100E63850;
    uint64_t v22 = (uint64_t)v10;
    goto LABEL_7;
  }
  WeatherDataModel.airQuality.getter();
  sub_1001569FC((uint64_t)v10, (void (*)(void))type metadata accessor for WeatherData);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v13, 1, v14) != 1)
  {
    uint64_t v28 = v33;
    int64_t v29 = *(void (**)(char *, char *, uint64_t))(v34 + 32);
    v29(v33, v13, v14);
    uint64_t v30 = v35;
    v29((char *)v35, v28, v14);
    uint64_t v31 = type metadata accessor for LocationViewComponent();
    swift_storeEnumTagMultiPayload();
    uint64_t v25 = v30;
    uint64_t v26 = 0;
    uint64_t v24 = v31;
    return _s7Weather24LocationCompositionStateOwst_0(v25, v26, 1, v24);
  }
LABEL_8:
  sub_1001AB060((uint64_t)v13, &qword_100E885C0);
  uint64_t v24 = type metadata accessor for LocationViewComponent();
  uint64_t v25 = v35;
  uint64_t v26 = 1;
  return _s7Weather24LocationCompositionStateOwst_0(v25, v26, 1, v24);
}

void sub_100A63440(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_10017C924();
  type metadata accessor for Date();
  sub_100179C0C();
  uint64_t v37 = v5;
  uint64_t v38 = v4;
  __chkstk_darwin(v4);
  sub_100109314();
  uint64_t v36 = v6;
  type metadata accessor for CurrentWeather();
  sub_100179C0C();
  uint64_t v34 = v8;
  uint64_t v35 = v7;
  __chkstk_darwin(v7);
  sub_100109314();
  uint64_t v33 = v9;
  uint64_t v10 = sub_10017DF08(&qword_100E6E8F8);
  __chkstk_darwin(v10 - 8);
  sub_10011BFD8();
  uint64_t v11 = sub_10017DF08(&qword_100E6E900);
  sub_100179C0C();
  uint64_t v13 = v12;
  __chkstk_darwin(v14);
  sub_100162F18();
  uint64_t v15 = type metadata accessor for PrecipitationRelevancyWindow();
  sub_100179C0C();
  uint64_t v17 = v16;
  __chkstk_darwin(v18);
  sub_1001626E0();
  uint64_t v22 = (int64x2_t *)(v21 - v20);
  if (qword_100E62A48 != -1) {
    swift_once();
  }
  sub_10021A5E0(&qword_100EAC560, v19, (void (*)(uint64_t))type metadata accessor for LocationViewComponentFactory);
  Configurable.setting<A>(_:)();
  if (v42 != 1)
  {
    if (*(unsigned char *)(a1 + *(int *)(type metadata accessor for NextHourPrecipitationComponentParameters() + 28)) == 1)
    {
      *uint64_t v22 = vdupq_n_s64(0x40AC200000000000uLL);
      uint64_t v26 = (unsigned int *)&enum case for PrecipitationRelevancyWindow.window(_:);
    }
    else
    {
      uint64_t v26 = (unsigned int *)&enum case for PrecipitationRelevancyWindow.default(_:);
    }
    (*(void (**)(int64x2_t *, void, uint64_t))(v17 + 104))(v22, *v26, v15);
    type metadata accessor for WeatherData(0);
    WeatherDataModel.minuteForecast.getter();
    if (_s7Weather24LocationCompositionStateOwet_0(v2, 1, v11) == 1)
    {
      uint64_t v27 = sub_10017ADD0();
      v28(v27);
      sub_1001AB060(v2, &qword_100E6E8F8);
    }
    else
    {
      unint64_t v40 = *(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 32);
      v40(v3, v2, v11);
      if (Forecast<>.isRelevant(in:)())
      {
        WeatherDataModel.currentWeather.getter();
        Date.init()();
        uint64_t v29 = sub_10017ADD0();
        v30(v29);
        uint64_t HourPrecipitationComponent = type metadata accessor for NextHourPrecipitationComponent();
        v40(a2 + *(int *)(HourPrecipitationComponent + 24), v3, v11);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v34 + 32))(a2, v33, v35);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v37 + 32))(a2 + *(int *)(HourPrecipitationComponent + 20), v36, v38);
        uint64_t v32 = type metadata accessor for LocationViewComponent();
        swift_storeEnumTagMultiPayload();
        uint64_t v24 = a2;
        uint64_t v25 = 0;
        uint64_t v23 = v32;
        goto LABEL_14;
      }
      (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v3, v11);
      (*(void (**)(int64x2_t *, uint64_t))(v17 + 8))(v22, v15);
    }
    uint64_t v23 = type metadata accessor for LocationViewComponent();
    uint64_t v24 = a2;
    uint64_t v25 = 1;
    goto LABEL_14;
  }
  sub_100A63880(a1, a2);
  uint64_t v23 = type metadata accessor for LocationViewComponent();
  uint64_t v24 = a2;
  uint64_t v25 = 0;
LABEL_14:
  _s7Weather24LocationCompositionStateOwst_0(v24, v25, 1, v23);
  sub_100162694();
}

uint64_t sub_100A63880@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v63 = a1;
  uint64_t v68 = a2;
  uint64_t v66 = type metadata accessor for CurrentWeather();
  uint64_t v64 = *(void *)(v66 - 8);
  __chkstk_darwin(v66);
  uint64_t v62 = (char *)v50 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = sub_10017DF08(&qword_100E6E900);
  uint64_t v65 = *(void *)(v67 - 8);
  __chkstk_darwin(v67);
  id v61 = (char *)v50 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Location();
  uint64_t v56 = *(void *)(v4 - 8);
  uint64_t v57 = v4;
  __chkstk_darwin(v4);
  uint64_t v55 = (char *)v50 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v54 = (char *)v50 - v7;
  uint64_t v8 = type metadata accessor for WeatherMetadata();
  uint64_t v59 = *(void *)(v8 - 8);
  uint64_t v60 = v8;
  __chkstk_darwin(v8);
  int v58 = (char *)v50 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v70 = (char *)v50 - v11;
  uint64_t v53 = type metadata accessor for ApparentPrecipitationIntensityCategory();
  uint64_t v51 = *(void *)(v53 - 8);
  __chkstk_darwin(v53);
  uint64_t v13 = (char *)v50 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for ApparentPrecipitationIntensity();
  __chkstk_darwin(v14 - 8);
  v50[2] = (char *)v50 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_10017DF08(&qword_100E6D0A8);
  __chkstk_darwin(v16 - 8);
  uint64_t v17 = type metadata accessor for Precipitation();
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v20 = (char *)v50 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = type metadata accessor for Date();
  uint64_t v71 = *(void *)(v21 - 8);
  uint64_t v72 = v21;
  __chkstk_darwin(v21);
  uint64_t v23 = (char *)v50 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  v50[1] = (char *)v50 - v25;
  __chkstk_darwin(v26);
  uint64_t v28 = (char *)v50 - v27;
  uint64_t v52 = type metadata accessor for MinuteWeather();
  uint64_t v69 = *(void *)(v52 - 8);
  __chkstk_darwin(v52);
  uint64_t v30 = (char *)v50 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  Date.init()();
  (*(void (**)(char *, void, uint64_t))(v18 + 104))(v20, enum case for Precipitation.rain(_:), v17);
  id v31 = [self metersPerSecond];
  sub_100325770();
  Measurement.init(value:unit:)();
  (*(void (**)(char *, void, uint64_t))(v51 + 104))(v13, enum case for ApparentPrecipitationIntensityCategory.light(_:), v53);
  ApparentPrecipitationIntensity.init(value:category:)();
  uint64_t v32 = v30;
  v50[0] = v30;
  MinuteWeather.init(date:precipitation:precipitationChance:precipitationIntensity:apparentPrecipitationIntensity:)();
  Date.init()();
  Date.init()();
  Date.addingTimeInterval(_:)();
  (*(void (**)(char *, uint64_t))(v71 + 8))(v23, v72);
  uint64_t v33 = v54;
  static Location.cupertino.getter();
  Location.coordinate.getter();
  uint64_t v34 = *(void (**)(char *, uint64_t))(v56 + 8);
  uint64_t v35 = v33;
  uint64_t v36 = v57;
  v34(v35, v57);
  uint64_t v37 = v55;
  static Location.cupertino.getter();
  Location.coordinate.getter();
  v34(v37, v36);
  uint64_t v38 = v70;
  WeatherMetadata.init(date:expirationDate:latitude:longitude:)();
  sub_10017DF08(&qword_100EAC568);
  uint64_t v39 = v69;
  unint64_t v40 = (*(unsigned __int8 *)(v69 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v69 + 80);
  uint64_t v41 = swift_allocObject();
  *(_OWORD *)(v41 + 16) = xmmword_100C251B0;
  uint64_t v42 = v52;
  (*(void (**)(unint64_t, char *, uint64_t))(v39 + 16))(v41 + v40, v32, v52);
  uint64_t v43 = v59;
  uint64_t v44 = v60;
  (*(void (**)(char *, char *, uint64_t))(v59 + 16))(v58, v38, v60);
  sub_10021A5E0(&qword_100E72758, 255, (void (*)(uint64_t))&type metadata accessor for MinuteWeather);
  sub_10021A5E0(&qword_100E72760, 255, (void (*)(uint64_t))&type metadata accessor for MinuteWeather);
  sub_10021A5E0((unint64_t *)&unk_100E72768, 255, (void (*)(uint64_t))&type metadata accessor for MinuteWeather);
  id v45 = v61;
  Forecast.init(_:metadata:)();
  type metadata accessor for NextHourPrecipitationComponentParameters();
  type metadata accessor for WeatherData(0);
  os_log_type_t v46 = v62;
  WeatherDataModel.currentWeather.getter();
  Date.init()();
  (*(void (**)(char *, uint64_t))(v43 + 8))(v70, v44);
  (*(void (**)(void, uint64_t))(v69 + 8))(v50[0], v42);
  uint64_t v47 = v68;
  (*(void (**)(uint64_t, char *, uint64_t))(v64 + 32))(v68, v46, v66);
  uint64_t HourPrecipitationComponent = type metadata accessor for NextHourPrecipitationComponent();
  (*(void (**)(uint64_t, char *, uint64_t))(v71 + 32))(v47 + *(int *)(HourPrecipitationComponent + 20), v28, v72);
  (*(void (**)(uint64_t, char *, uint64_t))(v65 + 32))(v47 + *(int *)(HourPrecipitationComponent + 24), v45, v67);
  type metadata accessor for LocationViewComponent();
  return swift_storeEnumTagMultiPayload();
}

void *sub_100A641CC(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v18 = *a2;
    *a1 = *a2;
    a1 = (void *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
    return a1;
  }
  uint64_t v7 = type metadata accessor for Location();
  (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
  uint64_t v8 = a3[5];
  uint64_t v9 = (void *)((char *)a1 + v8);
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = *(void *)((char *)a2 + v8 + 8);
  *uint64_t v9 = *(void *)((char *)a2 + v8);
  v9[1] = v11;
  uint64_t v12 = (int *)type metadata accessor for WeatherData(0);
  uint64_t v13 = v12[5];
  uint64_t v14 = (char *)v9 + v13;
  uint64_t v15 = &v10[v13];
  uint64_t v16 = type metadata accessor for Locale();
  swift_bridgeObjectRetain();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v15, 1, v16))
  {
    uint64_t v17 = sub_10017DF08(&qword_100E63730);
    memcpy(v14, v15, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v14, 0, 1, v16);
  }
  uint64_t v19 = v12[6];
  uint64_t v20 = (char *)v9 + v19;
  uint64_t v21 = &v10[v19];
  uint64_t v22 = type metadata accessor for WeatherDataModel();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
  uint64_t v23 = v12[7];
  uint64_t v24 = (char *)v9 + v23;
  uint64_t v25 = &v10[v23];
  uint64_t v26 = sub_10017DF08(&qword_100E63738);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v25, 1, v26))
  {
    uint64_t v27 = type metadata accessor for WeatherData.CachingState(0);
    memcpy(v24, v25, *(void *)(*(void *)(v27 - 8) + 64));
  }
  else
  {
    uint64_t v28 = type metadata accessor for Date();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 16))(v24, v25, v28);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v24, 0, 1, v26);
  }
  uint64_t v29 = v12[8];
  uint64_t v30 = (void *)((char *)v9 + v29);
  id v31 = &v10[v29];
  uint64_t v32 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v35 = type metadata accessor for WeatherStatisticsModel();
    (*(void (**)(void *, char *, uint64_t))(*(void *)(v35 - 8) + 16))(v30, v31, v35);
  }
  else
  {
    if (EnumCaseMultiPayload)
    {
      memcpy(v30, v31, *(void *)(*(void *)(v32 - 8) + 64));
      goto LABEL_15;
    }
    uint64_t v34 = *((void *)v31 + 1);
    *uint64_t v30 = *(void *)v31;
    v30[1] = v34;
    swift_bridgeObjectRetain();
  }
  swift_storeEnumTagMultiPayload();
LABEL_15:
  uint64_t v36 = v12[9];
  uint64_t v37 = (char *)v9 + v36;
  uint64_t v38 = &v10[v36];
  uint64_t v39 = type metadata accessor for WeatherDataOverrides();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v38, 1, v39))
  {
    uint64_t v40 = sub_10017DF08(&qword_100E63740);
    memcpy(v37, v38, *(void *)(*(void *)(v40 - 8) + 64));
  }
  else
  {
    uint64_t v41 = type metadata accessor for Date();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v38, 1, v41))
    {
      uint64_t v42 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
      memcpy(v37, v38, *(void *)(*(void *)(v42 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v41 - 8) + 16))(v37, v38, v41);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v37, 0, 1, v41);
    }
    uint64_t v43 = *(int *)(v39 + 20);
    uint64_t v44 = &v37[v43];
    id v45 = &v38[v43];
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v45, 1, v41))
    {
      uint64_t v46 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
      memcpy(v44, v45, *(void *)(*(void *)(v46 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v41 - 8) + 16))(v44, v45, v41);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v44, 0, 1, v41);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v37, 0, 1, v39);
  }
  uint64_t v47 = a3[7];
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  *((unsigned char *)a1 + v47) = *((unsigned char *)a2 + v47);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_100A646D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Location();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  swift_bridgeObjectRelease();
  uint64_t v6 = (int *)type metadata accessor for WeatherData(0);
  uint64_t v7 = v5 + v6[5];
  uint64_t v8 = type metadata accessor for Locale();
  if (!_s7Weather24LocationCompositionStateOwet_0(v7, 1, v8)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  }
  uint64_t v9 = v5 + v6[6];
  uint64_t v10 = type metadata accessor for WeatherDataModel();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  uint64_t v11 = v5 + v6[7];
  uint64_t v12 = sub_10017DF08(&qword_100E63738);
  if (!_s7Weather24LocationCompositionStateOwet_0(v11, 1, v12))
  {
    uint64_t v13 = type metadata accessor for Date();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v11, v13);
  }
  uint64_t v14 = v5 + v6[8];
  type metadata accessor for WeatherData.WeatherStatisticsState(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v16 = type metadata accessor for WeatherStatisticsModel();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v14, v16);
  }
  else if (!EnumCaseMultiPayload)
  {
    swift_bridgeObjectRelease();
  }
  uint64_t v17 = v5 + v6[9];
  uint64_t v18 = type metadata accessor for WeatherDataOverrides();
  if (!_s7Weather24LocationCompositionStateOwet_0(v17, 1, v18))
  {
    uint64_t v19 = type metadata accessor for Date();
    if (!_s7Weather24LocationCompositionStateOwet_0(v17, 1, v19)) {
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v19 - 8) + 8))(v17, v19);
    }
    uint64_t v20 = v17 + *(int *)(v18 + 20);
    if (!_s7Weather24LocationCompositionStateOwet_0(v20, 1, v19)) {
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v19 - 8) + 8))(v20, v19);
    }
  }

  return swift_bridgeObjectRelease();
}

uint64_t sub_100A649A0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Location();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = a2 + v7;
  uint64_t v10 = *(void *)(a2 + v7 + 8);
  *uint64_t v8 = *(void *)(a2 + v7);
  v8[1] = v10;
  uint64_t v11 = (int *)type metadata accessor for WeatherData(0);
  uint64_t v12 = v11[5];
  uint64_t v13 = (char *)v8 + v12;
  uint64_t v14 = (const void *)(v9 + v12);
  uint64_t v15 = type metadata accessor for Locale();
  swift_bridgeObjectRetain();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v14, 1, v15))
  {
    uint64_t v16 = sub_10017DF08(&qword_100E63730);
    memcpy(v13, v14, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, const void *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v13, 0, 1, v15);
  }
  uint64_t v17 = v11[6];
  uint64_t v18 = (char *)v8 + v17;
  uint64_t v19 = v9 + v17;
  uint64_t v20 = type metadata accessor for WeatherDataModel();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
  uint64_t v21 = v11[7];
  uint64_t v22 = (char *)v8 + v21;
  uint64_t v23 = (const void *)(v9 + v21);
  uint64_t v24 = sub_10017DF08(&qword_100E63738);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v23, 1, v24))
  {
    uint64_t v25 = type metadata accessor for WeatherData.CachingState(0);
    memcpy(v22, v23, *(void *)(*(void *)(v25 - 8) + 64));
  }
  else
  {
    uint64_t v26 = type metadata accessor for Date();
    (*(void (**)(char *, const void *, uint64_t))(*(void *)(v26 - 8) + 16))(v22, v23, v26);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v22, 0, 1, v24);
  }
  uint64_t v27 = v11[8];
  uint64_t v28 = (void *)((char *)v8 + v27);
  uint64_t v29 = (void *)(v9 + v27);
  uint64_t v30 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v33 = type metadata accessor for WeatherStatisticsModel();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v33 - 8) + 16))(v28, v29, v33);
    goto LABEL_11;
  }
  if (!EnumCaseMultiPayload)
  {
    uint64_t v32 = v29[1];
    *uint64_t v28 = *v29;
    v28[1] = v32;
    swift_bridgeObjectRetain();
LABEL_11:
    swift_storeEnumTagMultiPayload();
    goto LABEL_13;
  }
  memcpy(v28, v29, *(void *)(*(void *)(v30 - 8) + 64));
LABEL_13:
  uint64_t v34 = v11[9];
  uint64_t v35 = (char *)v8 + v34;
  uint64_t v36 = (char *)(v9 + v34);
  uint64_t v37 = type metadata accessor for WeatherDataOverrides();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v36, 1, v37))
  {
    uint64_t v38 = sub_10017DF08(&qword_100E63740);
    memcpy(v35, v36, *(void *)(*(void *)(v38 - 8) + 64));
  }
  else
  {
    uint64_t v39 = type metadata accessor for Date();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v36, 1, v39))
    {
      uint64_t v40 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
      memcpy(v35, v36, *(void *)(*(void *)(v40 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 16))(v35, v36, v39);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v35, 0, 1, v39);
    }
    uint64_t v41 = *(int *)(v37 + 20);
    uint64_t v42 = &v35[v41];
    uint64_t v43 = &v36[v41];
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v43, 1, v39))
    {
      uint64_t v44 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
      memcpy(v42, v43, *(void *)(*(void *)(v44 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 16))(v42, v43, v39);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v42, 0, 1, v39);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v35, 0, 1, v37);
  }
  uint64_t v45 = a3[7];
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  *(unsigned char *)(a1 + v45) = *(unsigned char *)(a2 + v45);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_100A64E5C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Location();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = a2 + v7;
  *uint64_t v8 = *(void *)(a2 + v7);
  v8[1] = *(void *)(a2 + v7 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = (int *)type metadata accessor for WeatherData(0);
  uint64_t v11 = v10[5];
  uint64_t v12 = (char *)v8 + v11;
  uint64_t v13 = (const void *)(v9 + v11);
  uint64_t v14 = type metadata accessor for Locale();
  int v15 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v12, 1, v14);
  int v16 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v13, 1, v14);
  if (v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, const void *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v12, 0, 1, v14);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v17 = *(void *)(v14 - 8);
  if (v16)
  {
    (*(void (**)(char *, uint64_t))(v17 + 8))(v12, v14);
LABEL_6:
    uint64_t v18 = sub_10017DF08(&qword_100E63730);
    memcpy(v12, v13, *(void *)(*(void *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, const void *, uint64_t))(v17 + 24))(v12, v13, v14);
LABEL_7:
  uint64_t v19 = v10[6];
  uint64_t v20 = (char *)v8 + v19;
  uint64_t v21 = v9 + v19;
  uint64_t v22 = type metadata accessor for WeatherDataModel();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v22 - 8) + 24))(v20, v21, v22);
  uint64_t v23 = v10[7];
  uint64_t v24 = (char *)v8 + v23;
  uint64_t v25 = (const void *)(v9 + v23);
  uint64_t v26 = sub_10017DF08(&qword_100E63738);
  int v27 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v24, 1, v26);
  int v28 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v25, 1, v26);
  if (v27)
  {
    if (!v28)
    {
      uint64_t v29 = type metadata accessor for Date();
      (*(void (**)(char *, const void *, uint64_t))(*(void *)(v29 - 8) + 16))(v24, v25, v29);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v24, 0, 1, v26);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v28)
  {
    sub_1001AB060((uint64_t)v24, &qword_100E63738);
LABEL_12:
    uint64_t v30 = type metadata accessor for WeatherData.CachingState(0);
    memcpy(v24, v25, *(void *)(*(void *)(v30 - 8) + 64));
    goto LABEL_13;
  }
  uint64_t v48 = type metadata accessor for Date();
  (*(void (**)(char *, const void *, uint64_t))(*(void *)(v48 - 8) + 24))(v24, v25, v48);
LABEL_13:
  if (a1 == a2) {
    goto LABEL_20;
  }
  uint64_t v31 = v10[8];
  uint64_t v32 = (void *)((char *)v8 + v31);
  uint64_t v33 = (void *)(v9 + v31);
  sub_1001569FC((uint64_t)v8 + v31, (void (*)(void))type metadata accessor for WeatherData.WeatherStatisticsState);
  uint64_t v34 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v36 = type metadata accessor for WeatherStatisticsModel();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v36 - 8) + 16))(v32, v33, v36);
    goto LABEL_18;
  }
  if (!EnumCaseMultiPayload)
  {
    *uint64_t v32 = *v33;
    v32[1] = v33[1];
    swift_bridgeObjectRetain();
LABEL_18:
    swift_storeEnumTagMultiPayload();
    goto LABEL_20;
  }
  memcpy(v32, v33, *(void *)(*(void *)(v34 - 8) + 64));
LABEL_20:
  uint64_t v37 = v10[9];
  uint64_t v38 = (char *)v8 + v37;
  uint64_t v39 = (char *)(v9 + v37);
  uint64_t v40 = type metadata accessor for WeatherDataOverrides();
  int v41 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v38, 1, v40);
  int v42 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v39, 1, v40);
  if (v41)
  {
    if (!v42)
    {
      uint64_t v43 = type metadata accessor for Date();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v39, 1, v43))
      {
        uint64_t v44 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
        memcpy(v38, v39, *(void *)(*(void *)(v44 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 16))(v38, v39, v43);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v38, 0, 1, v43);
      }
      uint64_t v52 = *(int *)(v40 + 20);
      uint64_t v53 = &v38[v52];
      uint64_t v54 = &v39[v52];
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v54, 1, v43))
      {
        uint64_t v55 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
        memcpy(v53, v54, *(void *)(*(void *)(v55 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 16))(v53, v54, v43);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v53, 0, 1, v43);
      }
      uint64_t v56 = (uint64_t)v38;
      uint64_t v57 = v40;
      goto LABEL_38;
    }
    goto LABEL_26;
  }
  if (v42)
  {
    sub_1001569FC((uint64_t)v38, (void (*)(void))type metadata accessor for WeatherDataOverrides);
LABEL_26:
    size_t v45 = *(void *)(*(void *)(sub_10017DF08(&qword_100E63740) - 8) + 64);
    uint64_t v46 = v38;
    uint64_t v47 = v39;
    goto LABEL_27;
  }
  uint64_t v49 = type metadata accessor for Date();
  int v50 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v38, 1, v49);
  int v51 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v39, 1, v49);
  if (!v50)
  {
    uint64_t v59 = *(void *)(v49 - 8);
    if (!v51)
    {
      (*(void (**)(char *, char *, uint64_t))(v59 + 24))(v38, v39, v49);
      goto LABEL_43;
    }
    (*(void (**)(char *, uint64_t))(v59 + 8))(v38, v49);
    goto LABEL_42;
  }
  if (v51)
  {
LABEL_42:
    uint64_t v60 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    memcpy(v38, v39, *(void *)(*(void *)(v60 - 8) + 64));
    goto LABEL_43;
  }
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v49 - 8) + 16))(v38, v39, v49);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v38, 0, 1, v49);
LABEL_43:
  uint64_t v61 = *(int *)(v40 + 20);
  uint64_t v62 = (uint64_t)&v38[v61];
  uint64_t v63 = (uint64_t)&v39[v61];
  int v64 = _s7Weather24LocationCompositionStateOwet_0(v62, 1, v49);
  int v65 = _s7Weather24LocationCompositionStateOwet_0(v63, 1, v49);
  if (v64)
  {
    if (!v65)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v49 - 8) + 16))(v62, v63, v49);
      uint64_t v56 = v62;
      uint64_t v57 = v49;
LABEL_38:
      _s7Weather24LocationCompositionStateOwst_0(v56, 0, 1, v57);
      goto LABEL_39;
    }
  }
  else
  {
    uint64_t v66 = *(void *)(v49 - 8);
    if (!v65)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v66 + 24))(v62, v63, v49);
      goto LABEL_39;
    }
    (*(void (**)(uint64_t, uint64_t))(v66 + 8))(v62, v49);
  }
  size_t v45 = *(void *)(*(void *)(sub_10017DF08((uint64_t *)&unk_100E73CA0) - 8) + 64);
  uint64_t v46 = (void *)v62;
  uint64_t v47 = (const void *)v63;
LABEL_27:
  memcpy(v46, v47, v45);
LABEL_39:
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_100A656B4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Location();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  uint64_t v10 = (int *)type metadata accessor for WeatherData(0);
  uint64_t v11 = v10[5];
  uint64_t v12 = (void *)(v8 + v11);
  uint64_t v13 = (const void *)(v9 + v11);
  uint64_t v14 = type metadata accessor for Locale();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v13, 1, v14))
  {
    uint64_t v15 = sub_10017DF08(&qword_100E63730);
    memcpy(v12, v13, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v12, 0, 1, v14);
  }
  uint64_t v16 = v10[6];
  uint64_t v17 = v8 + v16;
  uint64_t v18 = v9 + v16;
  uint64_t v19 = type metadata accessor for WeatherDataModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 32))(v17, v18, v19);
  uint64_t v20 = v10[7];
  uint64_t v21 = (void *)(v8 + v20);
  uint64_t v22 = (const void *)(v9 + v20);
  uint64_t v23 = sub_10017DF08(&qword_100E63738);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v22, 1, v23))
  {
    uint64_t v24 = type metadata accessor for WeatherData.CachingState(0);
    memcpy(v21, v22, *(void *)(*(void *)(v24 - 8) + 64));
  }
  else
  {
    uint64_t v25 = type metadata accessor for Date();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v25 - 8) + 32))(v21, v22, v25);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v21, 0, 1, v23);
  }
  uint64_t v26 = v10[8];
  int v27 = (void *)(v8 + v26);
  int v28 = (const void *)(v9 + v26);
  uint64_t v29 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v30 = type metadata accessor for WeatherStatisticsModel();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v30 - 8) + 32))(v27, v28, v30);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v27, v28, *(void *)(*(void *)(v29 - 8) + 64));
  }
  uint64_t v31 = v10[9];
  uint64_t v32 = (char *)(v8 + v31);
  uint64_t v33 = (char *)(v9 + v31);
  uint64_t v34 = type metadata accessor for WeatherDataOverrides();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v33, 1, v34))
  {
    uint64_t v35 = sub_10017DF08(&qword_100E63740);
    memcpy(v32, v33, *(void *)(*(void *)(v35 - 8) + 64));
  }
  else
  {
    uint64_t v36 = type metadata accessor for Date();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v33, 1, v36))
    {
      uint64_t v37 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
      memcpy(v32, v33, *(void *)(*(void *)(v37 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 32))(v32, v33, v36);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v32, 0, 1, v36);
    }
    uint64_t v38 = *(int *)(v34 + 20);
    uint64_t v39 = &v32[v38];
    uint64_t v40 = &v33[v38];
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v40, 1, v36))
    {
      uint64_t v41 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
      memcpy(v39, v40, *(void *)(*(void *)(v41 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 32))(v39, v40, v36);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v39, 0, 1, v36);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v32, 0, 1, v34);
  }
  uint64_t v42 = a3[7];
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  *(unsigned char *)(a1 + v42) = *(unsigned char *)(a2 + v42);
  return a1;
}

uint64_t sub_100A65B44(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Location();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = a2 + v7;
  uint64_t v10 = *(void *)(a2 + v7 + 8);
  *uint64_t v8 = *(void *)(a2 + v7);
  v8[1] = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = (int *)type metadata accessor for WeatherData(0);
  uint64_t v12 = v11[5];
  uint64_t v13 = (char *)v8 + v12;
  uint64_t v14 = (const void *)(v9 + v12);
  uint64_t v15 = type metadata accessor for Locale();
  int v16 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v13, 1, v15);
  int v17 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v14, 1, v15);
  if (v16)
  {
    if (!v17)
    {
      (*(void (**)(char *, const void *, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v13, 0, 1, v15);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v18 = *(void *)(v15 - 8);
  if (v17)
  {
    (*(void (**)(char *, uint64_t))(v18 + 8))(v13, v15);
LABEL_6:
    uint64_t v19 = sub_10017DF08(&qword_100E63730);
    memcpy(v13, v14, *(void *)(*(void *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, const void *, uint64_t))(v18 + 40))(v13, v14, v15);
LABEL_7:
  uint64_t v20 = v11[6];
  uint64_t v21 = (char *)v8 + v20;
  uint64_t v22 = v9 + v20;
  uint64_t v23 = type metadata accessor for WeatherDataModel();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v23 - 8) + 40))(v21, v22, v23);
  uint64_t v24 = v11[7];
  uint64_t v25 = (char *)v8 + v24;
  uint64_t v26 = (const void *)(v9 + v24);
  uint64_t v27 = sub_10017DF08(&qword_100E63738);
  int v28 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v25, 1, v27);
  int v29 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v26, 1, v27);
  if (v28)
  {
    if (!v29)
    {
      uint64_t v30 = type metadata accessor for Date();
      (*(void (**)(char *, const void *, uint64_t))(*(void *)(v30 - 8) + 32))(v25, v26, v30);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v25, 0, 1, v27);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v29)
  {
    sub_1001AB060((uint64_t)v25, &qword_100E63738);
LABEL_12:
    uint64_t v31 = type metadata accessor for WeatherData.CachingState(0);
    memcpy(v25, v26, *(void *)(*(void *)(v31 - 8) + 64));
    goto LABEL_13;
  }
  uint64_t v48 = type metadata accessor for Date();
  (*(void (**)(char *, const void *, uint64_t))(*(void *)(v48 - 8) + 40))(v25, v26, v48);
LABEL_13:
  if (a1 != a2)
  {
    uint64_t v32 = v11[8];
    uint64_t v33 = (char *)v8 + v32;
    uint64_t v34 = (const void *)(v9 + v32);
    sub_1001569FC((uint64_t)v8 + v32, (void (*)(void))type metadata accessor for WeatherData.WeatherStatisticsState);
    uint64_t v35 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v36 = type metadata accessor for WeatherStatisticsModel();
      (*(void (**)(char *, const void *, uint64_t))(*(void *)(v36 - 8) + 32))(v33, v34, v36);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v33, v34, *(void *)(*(void *)(v35 - 8) + 64));
    }
  }
  uint64_t v37 = v11[9];
  uint64_t v38 = (char *)v8 + v37;
  uint64_t v39 = (char *)(v9 + v37);
  uint64_t v40 = type metadata accessor for WeatherDataOverrides();
  int v41 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v38, 1, v40);
  int v42 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v39, 1, v40);
  if (v41)
  {
    if (!v42)
    {
      uint64_t v43 = type metadata accessor for Date();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v39, 1, v43))
      {
        uint64_t v44 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
        memcpy(v38, v39, *(void *)(*(void *)(v44 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 32))(v38, v39, v43);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v38, 0, 1, v43);
      }
      uint64_t v52 = *(int *)(v40 + 20);
      uint64_t v53 = &v38[v52];
      uint64_t v54 = &v39[v52];
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v54, 1, v43))
      {
        uint64_t v55 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
        memcpy(v53, v54, *(void *)(*(void *)(v55 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 32))(v53, v54, v43);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v53, 0, 1, v43);
      }
      uint64_t v56 = (uint64_t)v38;
      uint64_t v57 = v40;
      goto LABEL_35;
    }
    goto LABEL_23;
  }
  if (v42)
  {
    sub_1001569FC((uint64_t)v38, (void (*)(void))type metadata accessor for WeatherDataOverrides);
LABEL_23:
    size_t v45 = *(void *)(*(void *)(sub_10017DF08(&qword_100E63740) - 8) + 64);
    uint64_t v46 = v38;
    uint64_t v47 = v39;
    goto LABEL_24;
  }
  uint64_t v49 = type metadata accessor for Date();
  int v50 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v38, 1, v49);
  int v51 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v39, 1, v49);
  if (!v50)
  {
    uint64_t v59 = *(void *)(v49 - 8);
    if (!v51)
    {
      (*(void (**)(char *, char *, uint64_t))(v59 + 40))(v38, v39, v49);
      goto LABEL_40;
    }
    (*(void (**)(char *, uint64_t))(v59 + 8))(v38, v49);
    goto LABEL_39;
  }
  if (v51)
  {
LABEL_39:
    uint64_t v60 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    memcpy(v38, v39, *(void *)(*(void *)(v60 - 8) + 64));
    goto LABEL_40;
  }
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v49 - 8) + 32))(v38, v39, v49);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v38, 0, 1, v49);
LABEL_40:
  uint64_t v61 = *(int *)(v40 + 20);
  uint64_t v62 = (uint64_t)&v38[v61];
  uint64_t v63 = (uint64_t)&v39[v61];
  int v64 = _s7Weather24LocationCompositionStateOwet_0(v62, 1, v49);
  int v65 = _s7Weather24LocationCompositionStateOwet_0(v63, 1, v49);
  if (v64)
  {
    if (!v65)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v49 - 8) + 32))(v62, v63, v49);
      uint64_t v56 = v62;
      uint64_t v57 = v49;
LABEL_35:
      _s7Weather24LocationCompositionStateOwst_0(v56, 0, 1, v57);
      goto LABEL_36;
    }
  }
  else
  {
    uint64_t v66 = *(void *)(v49 - 8);
    if (!v65)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v66 + 40))(v62, v63, v49);
      goto LABEL_36;
    }
    (*(void (**)(uint64_t, uint64_t))(v66 + 8))(v62, v49);
  }
  size_t v45 = *(void *)(*(void *)(sub_10017DF08((uint64_t *)&unk_100E73CA0) - 8) + 64);
  uint64_t v46 = (void *)v62;
  uint64_t v47 = (const void *)v63;
LABEL_24:
  memcpy(v46, v47, v45);
LABEL_36:
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_100A6635C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100A66370);
}

uint64_t sub_100A66370(uint64_t a1, uint64_t a2, uint64_t a3)
{
  type metadata accessor for Location();
  sub_100162F30();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1;
LABEL_5:
    return _s7Weather24LocationCompositionStateOwet_0(v9, a2, v8);
  }
  type metadata accessor for WeatherData(0);
  sub_100162F30();
  if (*(_DWORD *)(v11 + 84) == a2)
  {
    uint64_t v8 = v10;
    uint64_t v9 = a1 + *(int *)(a3 + 20);
    goto LABEL_5;
  }
  unint64_t v13 = *(void *)(a1 + *(int *)(a3 + 24));
  if (v13 >= 0xFFFFFFFF) {
    LODWORD(v13) = -1;
  }
  return (v13 + 1);
}

uint64_t sub_100A66424(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100A66438);
}

void sub_100A66438(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  type metadata accessor for Location();
  sub_100162F30();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = a1;
  }
  else
  {
    type metadata accessor for WeatherData(0);
    sub_100162F30();
    if (*(_DWORD *)(v13 + 84) != a3)
    {
      *(void *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
      return;
    }
    uint64_t v10 = v12;
    uint64_t v11 = a1 + *(int *)(a4 + 20);
  }

  _s7Weather24LocationCompositionStateOwst_0(v11, a2, a2, v10);
}

uint64_t sub_100A664E8(uint64_t a1)
{
  void (*v22)(uint64_t *__return_ptr);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint8_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  char *v34;
  uint64_t v35;
  NSObject *v36;
  os_log_type_t v37;
  BOOL v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  NSObject *v45;
  os_log_type_t v46;
  int v47;
  uint8_t *v48;
  uint64_t v49;
  uint64_t v50;
  void v52[2];
  uint64_t v53;
  uint64_t v54;
  uint8_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;

  uint64_t v2 = v1;
  uint64_t v56 = a1;
  type metadata accessor for Location();
  sub_100179C0C();
  uint64_t v54 = v4;
  uint64_t v55 = v3;
  __chkstk_darwin(v3);
  sub_1001626E0();
  uint64_t v53 = v6 - v5;
  type metadata accessor for Logger();
  sub_100179C0C();
  uint64_t v57 = v8;
  int v58 = v7;
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)v52 - v12;
  uint64_t v14 = sub_10017DF08(&qword_100E66678);
  __chkstk_darwin(v14 - 8);
  sub_1001626E0();
  uint64_t v17 = v16 - v15;
  uint64_t v18 = type metadata accessor for LocationsState();
  __chkstk_darwin(v18);
  sub_1001626E0();
  uint64_t v21 = v20 - v19;
  uint64_t v22 = *(void (**)(uint64_t *__return_ptr))(v1 + 16);
  v22(&v60);
  sub_100A67090(v60 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_locations, v21);
  swift_release();
  uint64_t v23 = *(void *)(*(void *)(v21 + *(int *)(v18 + 24)) + 16);
  type metadata accessor for SavedLocationsManager();
  uint64_t v24 = static SavedLocationsManager.maxAllowedLocationsCount.getter();
  sub_100A670F4(v21);
  if (v23 >= v24)
  {
    static Logger.map.getter();
    swift_retain_n();
    size_t v45 = Logger.logObject.getter();
    uint64_t v46 = static os_log_type_t.default.getter();
    uint64_t v47 = v46;
    if (os_log_type_enabled(v45, v46))
    {
      LODWORD(v56) = v47;
      uint64_t v48 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v48 = 134349056;
      uint64_t v55 = v48 + 4;
      v22(&v60);
      sub_100A67090(v60 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_locations, v21);
      swift_release();
      uint64_t v49 = *(void *)(v21 + *(int *)(v18 + 36));
      swift_bridgeObjectRetain();
      sub_100A670F4(v21);
      int v50 = *(void *)(v49 + 16);
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v60 = v50;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release();
      _os_log_impl((void *)&_mh_execute_header, v45, (os_log_type_t)v56, "Returning that we cannot add location via map interaction because user has reached the maximum locations, locationsCount=%{public}ld", v48, 0xCu);
      sub_100162EE0();
    }
    else
    {

      swift_release_n();
    }
    (*(void (**)(char *, uint64_t))(v57 + 8))(v10, v58);
    return 0;
  }
  uint64_t v26 = v53;
  uint64_t v25 = v54;
  uint64_t v27 = v55;
  sub_1001B1E64((void *)(v2 + 48), *(void *)(v2 + 72));
  int v28 = v56;
  Location.coordinate.getter();
  int v29 = Location.name.getter();
  sub_100694CE4(v29, v30, v17);
  swift_bridgeObjectRelease();
  uint64_t v31 = type metadata accessor for SavedLocation();
  uint64_t v32 = 1;
  uint64_t v33 = _s7Weather24LocationCompositionStateOwet_0(v17, 1, v31);
  sub_100A67150(v17);
  if (v33 != 1)
  {
    uint64_t v34 = v13;
    static Logger.map.getter();
    uint64_t v35 = v26;
    (*(void (**)(uint64_t, uint64_t, uint8_t *))(v25 + 16))(v26, v28, v27);
    uint64_t v36 = Logger.logObject.getter();
    uint64_t v37 = static os_log_type_t.default.getter();
    uint64_t v38 = os_log_type_enabled(v36, v37);
    uint64_t v40 = v57;
    uint64_t v39 = v58;
    if (v38)
    {
      int v41 = swift_slowAlloc();
      int v42 = swift_slowAlloc();
      uint64_t v56 = v42;
      *(_DWORD *)int v41 = 141558275;
      sub_10017DA7C(v42);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v41 + 12) = 2081;
      v52[1] = v41 + 14;
      sub_1002FF134();
      uint64_t v43 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v59 = sub_10016414C(v43, v44, &v60);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint8_t *))(v25 + 8))(v35, v27);
      _os_log_impl((void *)&_mh_execute_header, v36, v37, "Returning that we cannot add location via map interaction because user already has the location in their saved locations, location=%{private,mask.hash}s", (uint8_t *)v41, 0x16u);
      swift_arrayDestroy();
      sub_100162EE0();
      sub_100162EE0();

      (*(void (**)(char *, uint64_t))(v40 + 8))(v34, v58);
    }
    else
    {
      (*(void (**)(uint64_t, uint8_t *))(v25 + 8))(v35, v27);

      (*(void (**)(char *, uint64_t))(v40 + 8))(v34, v39);
    }
    return 0;
  }
  return v32;
}

uint64_t sub_100A66A60()
{
  uint64_t v1 = type metadata accessor for Location();
  sub_100179C0C();
  uint64_t v51 = v2;
  __chkstk_darwin(v3);
  sub_100162EF8();
  uint64_t v48 = v4;
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)v47 - v6;
  type metadata accessor for Logger();
  sub_100179C0C();
  uint64_t v49 = v9;
  uint64_t v50 = v8;
  __chkstk_darwin(v8);
  sub_100162EF8();
  uint64_t v11 = v10;
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)v47 - v13;
  sub_1001B1E64((void *)(v0 + 48), *(void *)(v0 + 72));
  Location.coordinate.getter();
  Location.name.getter();
  sub_1001A2860();
  sub_100695298();
  char v16 = v15;
  swift_bridgeObjectRelease();
  if (v16)
  {
    uint64_t v17 = v11;
    static Logger.map.getter();
    uint64_t v18 = sub_10017ADE8();
    v19(v18);
    uint64_t v20 = Logger.logObject.getter();
    os_log_type_t v21 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v20, v21))
    {
      uint64_t v22 = swift_slowAlloc();
      uint64_t v23 = swift_slowAlloc();
      v47[1] = v23;
      *(_DWORD *)uint64_t v22 = 141558275;
      sub_10017DA7C(v23);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v22 + 12) = 2081;
      sub_1002FF134();
      uint64_t v24 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v52 = sub_10016414C(v24, v25, &v53);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      uint64_t v26 = sub_1001A1230();
      v27(v26);
      _os_log_impl((void *)&_mh_execute_header, v20, v21, "Returning that we cannot view a location via map interaction because user has already selected it, location=%{private,mask.hash}s", (uint8_t *)v22, 0x16u);
      swift_arrayDestroy();
      sub_100162EE0();
      sub_100162EE0();
    }
    else
    {
      uint64_t v44 = sub_1001A1230();
      v45(v44);
    }

    (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v17, v50);
    return 0;
  }
  uint64_t v28 = v51;
  sub_1001B1E64((void *)(v0 + 48), *(void *)(v0 + 72));
  Location.coordinate.getter();
  Location.name.getter();
  sub_1001A2860();
  sub_1006950B0();
  char v30 = v29;
  swift_bridgeObjectRelease();
  if (v30)
  {
    uint64_t v31 = v14;
    static Logger.map.getter();
    uint64_t v32 = v28;
    uint64_t v33 = v7;
    uint64_t v34 = sub_10017ADE8();
    v35(v34);
    uint64_t v36 = Logger.logObject.getter();
    os_log_type_t v37 = static os_log_type_t.default.getter();
    BOOL v38 = os_log_type_enabled(v36, v37);
    uint64_t v39 = v50;
    if (v38)
    {
      uint64_t v40 = swift_slowAlloc();
      uint64_t v41 = swift_slowAlloc();
      *(_DWORD *)uint64_t v40 = 141558275;
      sub_10017DA7C(v41);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v40 + 12) = 2081;
      uint64_t v48 = v31;
      sub_1002FF134();
      uint64_t v42 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v52 = sub_10016414C(v42, v43, &v53);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v32 + 8))(v33, v1);
      _os_log_impl((void *)&_mh_execute_header, v36, v37, "Returning that we cannot view a location via map interaction because user is previewing it, location=%{private,mask.hash}s", (uint8_t *)v40, 0x16u);
      swift_arrayDestroy();
      sub_100162EE0();
      sub_100162EE0();

      (*(void (**)(char *, uint64_t))(v49 + 8))(v48, v50);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v32 + 8))(v7, v1);

      (*(void (**)(char *, uint64_t))(v49 + 8))(v31, v39);
    }
    return 0;
  }
  return 1;
}

uint64_t sub_100A66F00(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for LocationsState();
  __chkstk_darwin(v3);
  sub_1001626E0();
  uint64_t v6 = v5 - v4;
  sub_1001B1E64((void *)(v1 + 88), *(void *)(v1 + 112));
  (*(void (**)(uint64_t *__return_ptr))(v1 + 16))(&v8);
  sub_100A67090(v8 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_locations, v6);
  swift_release();
  swift_bridgeObjectRetain();
  sub_100A670F4(v6);
  LOBYTE(a1) = sub_10056DA40(a1);
  swift_bridgeObjectRelease();
  return a1 & 1;
}

uint64_t sub_100A66FF4()
{
  swift_release();
  swift_release();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 48);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 88);
  return v0;
}

uint64_t sub_100A67038()
{
  sub_100A66FF4();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for InteractiveMapLocationReader()
{
  return self;
}

uint64_t sub_100A67090(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for LocationsState();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100A670F4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for LocationsState();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100A67150(uint64_t a1)
{
  uint64_t v2 = sub_10017DF08(&qword_100E66678);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

ValueMetadata *type metadata accessor for PrecipitationAveragesDetailView()
{
  return &type metadata for PrecipitationAveragesDetailView;
}

uint64_t sub_100A671C0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100A671DC@<X0>(uint64_t a1@<X8>)
{
  *(void *)a1 = static HorizontalAlignment.leading.getter();
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 0;
  uint64_t v3 = sub_10017DF08(&qword_100EAC6B8);
  return sub_100A67224(v1, a1 + *(int *)(v3 + 44));
}

uint64_t sub_100A67224@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v113 = a2;
  uint64_t v108 = type metadata accessor for DetailNewsComponentView();
  __chkstk_darwin(v108);
  uint64_t v100 = (uint64_t *)((char *)&v96 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v4 = sub_10017DF08(&qword_100E66E28);
  __chkstk_darwin(v4 - 8);
  uint64_t v107 = (uint64_t)&v96 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v106 = type metadata accessor for DetailComponentContainerViewModel();
  __chkstk_darwin(v106);
  uint64_t v99 = (uint64_t)&v96 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v98 = (uint64_t)&v96 - v8;
  uint64_t v9 = sub_10017DF08(&qword_100E66E30);
  __chkstk_darwin(v9 - 8);
  uint64_t v112 = (uint64_t)&v96 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v118 = (uint64_t)&v96 - v12;
  uint64_t v105 = type metadata accessor for MonthlyAveragesChart();
  __chkstk_darwin(v105);
  uint64_t v111 = (uint64_t)&v96 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v119 = (uint64_t)&v96 - v15;
  uint64_t v104 = sub_10017DF08(&qword_100E66E38);
  __chkstk_darwin(v104);
  uint64_t v110 = (uint64_t)&v96 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)&v96 - v18;
  uint64_t v20 = sub_10017DF08(&qword_100E66E40);
  __chkstk_darwin(v20 - 8);
  uint64_t v22 = (char *)&v96 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v101 = type metadata accessor for ConditionDetailPlatterViewModel(0);
  __chkstk_darwin(v101);
  uint64_t v114 = (uint64_t)&v96 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  uint64_t v97 = (uint64_t)&v96 - v25;
  uint64_t v26 = sub_10017DF08(&qword_100E66E48);
  __chkstk_darwin(v26 - 8);
  uint64_t v109 = (uint64_t)&v96 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28);
  uint64_t v115 = (uint64_t)&v96 - v29;
  uint64_t v30 = type metadata accessor for PrecipitationAveragesHeroChartViewModel();
  __chkstk_darwin(v30 - 8);
  uint64_t v32 = (char *)&v96 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = type metadata accessor for PrecipitationAveragesHeroChartView();
  uint64_t v34 = v33 - 8;
  __chkstk_darwin(v33);
  uint64_t v36 = (char *)&v96 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v37);
  uint64_t v39 = (char *)&v96 - v38;
  uint64_t v40 = a1[4];
  uint64_t v41 = a1[5];
  uint64_t v102 = a1 + 1;
  uint64_t v42 = sub_1001B1E64(a1 + 1, v40);
  uint64_t v121 = v40;
  uint64_t v122 = *(void *)(v41 + 16);
  unint64_t v43 = sub_100170694((uint64_t *)&v120);
  (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v40 - 8) + 16))(v43, v42, v40);
  sub_100A67F50(*a1 + OBJC_IVAR____TtCV7Weather36PrecipitationAveragesDetailViewModel8_Storage_heroChart, (uint64_t)v32, (void (*)(void))type metadata accessor for PrecipitationAveragesHeroChartViewModel);
  *(void *)uint64_t v36 = swift_getKeyPath();
  v36[8] = 0;
  sub_1001262E4(&v120, (uint64_t)(v36 + 16));
  sub_100A68004((uint64_t)v32, (uint64_t)&v36[*(int *)(v34 + 32)], (void (*)(void))type metadata accessor for PrecipitationAveragesHeroChartViewModel);
  uint64_t v116 = v39;
  uint64_t v117 = v36;
  sub_100A68004((uint64_t)v36, (uint64_t)v39, (void (*)(void))type metadata accessor for PrecipitationAveragesHeroChartView);
  uint64_t v44 = *a1 + OBJC_IVAR____TtCV7Weather36PrecipitationAveragesDetailViewModel8_Storage_summaryPlatterViewModel;
  swift_beginAccess();
  sub_10006DF38(v44, (uint64_t)v22, &qword_100E66E40);
  int v45 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v22, 1, v101);
  uint64_t v103 = v19;
  if (v45 == 1)
  {
    sub_1001781AC((uint64_t)v22, &qword_100E66E40);
    uint64_t v46 = 1;
    uint64_t v47 = v115;
    uint64_t v48 = (int *)v104;
    uint64_t v49 = v102;
  }
  else
  {
    uint64_t v50 = v97;
    sub_100A68004((uint64_t)v22, v97, (void (*)(void))type metadata accessor for ConditionDetailPlatterViewModel);
    uint64_t v51 = v114;
    sub_100A67F50(v50, v114, (void (*)(void))type metadata accessor for ConditionDetailPlatterViewModel);
    uint64_t v52 = a1[4];
    uint64_t v53 = a1[5];
    uint64_t v54 = v102;
    uint64_t v55 = sub_1001B1E64(v102, v52);
    uint64_t v121 = v52;
    uint64_t v122 = *(void *)(v53 + 8);
    uint64_t v56 = sub_100170694((uint64_t *)&v120);
    (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v52 - 8) + 16))(v56, v55, v52);
    sub_100A67F50(v51, (uint64_t)v19, (void (*)(void))type metadata accessor for ConditionDetailPlatterViewModel);
    uint64_t v48 = (int *)v104;
    sub_10020D948((uint64_t)&v120, (uint64_t)&v19[*(int *)(v104 + 40)]);
    v19[v48[9]] = 0;
    uint64_t v57 = &v19[v48[11]];
    *(void *)uint64_t v57 = 0;
    *((void *)v57 + 1) = 0;
    uint64_t v58 = v48[12];
    swift_beginAccess();
    *(double *)&v19[v58] = sub_100592380();
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)&v120);
    sub_100A67FA4(v51, (void (*)(void))type metadata accessor for ConditionDetailPlatterViewModel);
    sub_100A67FA4(v50, (void (*)(void))type metadata accessor for ConditionDetailPlatterViewModel);
    uint64_t v47 = v115;
    sub_1002B7594((uint64_t)v19, v115);
    uint64_t v46 = 0;
    uint64_t v49 = v54;
  }
  _s7Weather24LocationCompositionStateOwst_0(v47, v46, 1, (uint64_t)v48);
  uint64_t v59 = *a1;
  uint64_t v60 = v119;
  sub_100A67F50(*a1 + OBJC_IVAR____TtCV7Weather36PrecipitationAveragesDetailViewModel8_Storage_averagesChart, v119, (void (*)(void))type metadata accessor for MonthlyAveragesChartModel);
  uint64_t v61 = v105;
  sub_10020D948((uint64_t)v49, v60 + *(int *)(v105 + 20));
  *(unsigned char *)(v60 + *(int *)(v61 + 24)) = 0;
  uint64_t v62 = v59 + OBJC_IVAR____TtCV7Weather36PrecipitationAveragesDetailViewModel8_Storage_newsViewModel;
  swift_beginAccess();
  uint64_t v63 = v107;
  sub_10006DF38(v62, v107, &qword_100E66E28);
  if (_s7Weather24LocationCompositionStateOwet_0(v63, 1, v106) == 1)
  {
    sub_1001781AC(v63, &qword_100E66E28);
    uint64_t v64 = 1;
    uint64_t v65 = v118;
    uint64_t v66 = v108;
  }
  else
  {
    uint64_t v67 = v98;
    sub_100A68004(v63, v98, (void (*)(void))type metadata accessor for DetailComponentContainerViewModel);
    uint64_t v68 = v99;
    sub_100A67F50(v67, v99, (void (*)(void))type metadata accessor for DetailComponentContainerViewModel);
    uint64_t v69 = a1[4];
    uint64_t v70 = a1[5];
    uint64_t v71 = v49;
    uint64_t v72 = sub_1001B1E64(v49, v69);
    uint64_t v121 = v69;
    uint64_t v122 = *(void *)(v70 + 8);
    uint64_t v73 = sub_100170694((uint64_t *)&v120);
    (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v69 - 8) + 16))(v73, v72, v69);
    sub_100A67FA4(v67, (void (*)(void))type metadata accessor for DetailComponentContainerViewModel);
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v75 = v100;
    uint64_t *v100 = KeyPath;
    sub_10017DF08((uint64_t *)&unk_100EAA560);
    swift_storeEnumTagMultiPayload();
    uint64_t v66 = v108;
    sub_100A68004(v68, (uint64_t)v75 + *(int *)(v108 + 20), (void (*)(void))type metadata accessor for DetailComponentContainerViewModel);
    sub_1001262E4(&v120, (uint64_t)v75 + *(int *)(v66 + 24));
    *((unsigned char *)v75 + *(int *)(v66 + 28)) = 0;
    uint64_t v76 = (uint64_t)v75;
    uint64_t v49 = v71;
    uint64_t v65 = v118;
    sub_100A68004(v76, v118, (void (*)(void))type metadata accessor for DetailNewsComponentView);
    uint64_t v64 = 0;
  }
  _s7Weather24LocationCompositionStateOwst_0(v65, v64, 1, v66);
  uint64_t v77 = v114;
  sub_100A67F50(*a1 + OBJC_IVAR____TtCV7Weather36PrecipitationAveragesDetailViewModel8_Storage_aboutPlatterViewModel, v114, (void (*)(void))type metadata accessor for ConditionDetailPlatterViewModel);
  uint64_t v78 = a1[4];
  uint64_t v79 = a1[5];
  uint64_t v80 = sub_1001B1E64(v49, v78);
  uint64_t v121 = v78;
  uint64_t v122 = *(void *)(v79 + 8);
  uint64_t v81 = sub_100170694((uint64_t *)&v120);
  (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v78 - 8) + 16))(v81, v80, v78);
  uint64_t v82 = v110;
  sub_100A67F50(v77, v110, (void (*)(void))type metadata accessor for ConditionDetailPlatterViewModel);
  sub_10020D948((uint64_t)&v120, v82 + v48[10]);
  *(unsigned char *)(v82 + v48[9]) = 0;
  long long v83 = (void *)(v82 + v48[11]);
  *long long v83 = 0;
  v83[1] = 0;
  uint64_t v84 = v48[12];
  swift_beginAccess();
  *(double *)(v82 + v84) = sub_100592380();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)&v120);
  sub_100A67FA4(v77, (void (*)(void))type metadata accessor for ConditionDetailPlatterViewModel);
  uint64_t v85 = (uint64_t)v103;
  sub_1002B7594(v82, (uint64_t)v103);
  uint64_t v86 = (uint64_t)v117;
  sub_100A67F50((uint64_t)v116, (uint64_t)v117, (void (*)(void))type metadata accessor for PrecipitationAveragesHeroChartView);
  uint64_t v87 = v109;
  sub_10006DF38(v47, v109, &qword_100E66E48);
  uint64_t v88 = v119;
  uint64_t v89 = v111;
  sub_100A67F50(v119, v111, (void (*)(void))type metadata accessor for MonthlyAveragesChart);
  uint64_t v90 = v118;
  uint64_t v91 = v112;
  sub_10006DF38(v118, v112, &qword_100E66E30);
  sub_10006DF38(v85, v82, &qword_100E66E38);
  uint64_t v92 = v86;
  uint64_t v93 = v113;
  sub_100A67F50(v92, v113, (void (*)(void))type metadata accessor for PrecipitationAveragesHeroChartView);
  uint64_t v94 = (int *)sub_10017DF08(&qword_100EAC6C0);
  sub_10006DF38(v87, v93 + v94[12], &qword_100E66E48);
  sub_100A67F50(v89, v93 + v94[16], (void (*)(void))type metadata accessor for MonthlyAveragesChart);
  sub_10006DF38(v91, v93 + v94[20], &qword_100E66E30);
  sub_10006DF38(v82, v93 + v94[24], &qword_100E66E38);
  sub_1001781AC(v85, &qword_100E66E38);
  sub_1001781AC(v90, &qword_100E66E30);
  sub_100A67FA4(v88, (void (*)(void))type metadata accessor for MonthlyAveragesChart);
  sub_1001781AC(v115, &qword_100E66E48);
  sub_100A67FA4((uint64_t)v116, (void (*)(void))type metadata accessor for PrecipitationAveragesHeroChartView);
  sub_1001781AC(v82, &qword_100E66E38);
  sub_1001781AC(v91, &qword_100E66E30);
  sub_100A67FA4(v89, (void (*)(void))type metadata accessor for MonthlyAveragesChart);
  sub_1001781AC(v87, &qword_100E66E48);
  return sub_100A67FA4((uint64_t)v117, (void (*)(void))type metadata accessor for PrecipitationAveragesHeroChartView);
}

uint64_t sub_100A67F50(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  uint64_t v4 = sub_10011BFA4();
  v5(v4);
  return a2;
}

uint64_t sub_100A67FA4(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_100A68004(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(a2, a1);
  return a2;
}

unint64_t sub_100A68068()
{
  unint64_t result = qword_100EAC6C8;
  if (!qword_100EAC6C8)
  {
    sub_10018C6DC(&qword_100EAC6D0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAC6C8);
  }
  return result;
}

uint64_t sub_100A680BC@<X0>(uint64_t *a1@<X8>)
{
  sub_10020D948(v1 + 16, (uint64_t)(a1 + 2));
  a1[7] = 0x4028000000000000;
  swift_retain();
  sub_10017DF08(&qword_100E64890);
  sub_100A681A0();
  uint64_t result = ObservedObject.init(wrappedValue:)();
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_100A6812C@<X0>(void *a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + 56);
  sub_10020D948(v1 + 16, (uint64_t)(a1 + 1));
  *a1 = v3;

  return swift_retain();
}

uint64_t type metadata accessor for UnitsConfigurationModule()
{
  return self;
}

unint64_t sub_100A681A0()
{
  unint64_t result = qword_100E64898;
  if (!qword_100E64898)
  {
    sub_10018C6DC(&qword_100E64890);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E64898);
  }
  return result;
}

char *sub_100A681F4(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = (char *)a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *(void *)uint64_t v4 = *a2;
    uint64_t v4 = (char *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    uint64_t v9 = a3[6];
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = type metadata accessor for URL();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v11, 1, v12))
    {
      uint64_t v13 = sub_10017DF08(&qword_100E749B0);
      memcpy(v10, v11, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v10, 0, 1, v12);
    }
    uint64_t v15 = a3[7];
    uint64_t v16 = &v4[v15];
    uint64_t v17 = (char *)a2 + v15;
    uint64_t v18 = type metadata accessor for Date();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
    uint64_t v19 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
    v19(&v4[a3[8]], (char *)a2 + a3[8], v12);
    uint64_t v20 = a3[9];
    uint64_t v21 = &v4[v20];
    uint64_t v22 = (char *)a2 + v20;
    uint64_t v23 = *(uint64_t *)((char *)a2 + v20 + 8);
    *(void *)uint64_t v21 = *(uint64_t *)((char *)a2 + v20);
    *((void *)v21 + 1) = v23;
    uint64_t v24 = *(uint64_t *)((char *)a2 + v20 + 24);
    *((void *)v21 + 2) = *(uint64_t *)((char *)a2 + v20 + 16);
    *((void *)v21 + 3) = v24;
    uint64_t v25 = *(int *)(type metadata accessor for NewsChannel() + 24);
    uint64_t v26 = &v21[v25];
    uint64_t v27 = &v22[v25];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v27, 1, v12))
    {
      uint64_t v28 = sub_10017DF08(&qword_100E749B0);
      memcpy(v26, v27, *(void *)(*(void *)(v28 - 8) + 64));
    }
    else
    {
      v19(v26, v27, v12);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v26, 0, 1, v12);
    }
    uint64_t v29 = a3[11];
    *(void *)&v4[a3[10]] = *(uint64_t *)((char *)a2 + a3[10]);
    *(void *)&v4[v29] = *(uint64_t *)((char *)a2 + v29);
    *(void *)&v4[a3[12]] = *(uint64_t *)((char *)a2 + a3[12]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_100A684B8(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[6];
  uint64_t v5 = type metadata accessor for URL();
  if (!_s7Weather24LocationCompositionStateOwet_0(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  uint64_t v6 = a1 + a2[7];
  uint64_t v7 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  v8(a1 + a2[8], v5);
  uint64_t v9 = a1 + a2[9];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v10 = v9 + *(int *)(type metadata accessor for NewsChannel() + 24);
  if (!_s7Weather24LocationCompositionStateOwet_0(v10, 1, v5)) {
    v8(v10, v5);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

char *sub_100A68648(char *a1, char *a2, int *a3)
{
  uint64_t v6 = *((void *)a2 + 1);
  *(void *)a1 = *(void *)a2;
  *((void *)a1 + 1) = v6;
  uint64_t v7 = *((void *)a2 + 3);
  *((void *)a1 + 2) = *((void *)a2 + 2);
  *((void *)a1 + 3) = v7;
  uint64_t v8 = a3[6];
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = type metadata accessor for URL();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v10, 1, v11))
  {
    uint64_t v12 = sub_10017DF08(&qword_100E749B0);
    memcpy(v9, v10, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v9, 0, 1, v11);
  }
  uint64_t v13 = a3[7];
  uint64_t v14 = &a1[v13];
  uint64_t v15 = &a2[v13];
  uint64_t v16 = type metadata accessor for Date();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
  uint64_t v17 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
  v17(&a1[a3[8]], &a2[a3[8]], v11);
  uint64_t v18 = a3[9];
  uint64_t v19 = &a1[v18];
  uint64_t v20 = &a2[v18];
  uint64_t v21 = *(void *)&a2[v18 + 8];
  *(void *)uint64_t v19 = *(void *)&a2[v18];
  *((void *)v19 + 1) = v21;
  uint64_t v22 = *(void *)&a2[v18 + 24];
  *((void *)v19 + 2) = *(void *)&a2[v18 + 16];
  *((void *)v19 + 3) = v22;
  uint64_t v23 = *(int *)(type metadata accessor for NewsChannel() + 24);
  uint64_t v24 = &v19[v23];
  uint64_t v25 = &v20[v23];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v25, 1, v11))
  {
    uint64_t v26 = sub_10017DF08(&qword_100E749B0);
    memcpy(v24, v25, *(void *)(*(void *)(v26 - 8) + 64));
  }
  else
  {
    v17(v24, v25, v11);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v24, 0, 1, v11);
  }
  uint64_t v27 = a3[11];
  *(void *)&a1[a3[10]] = *(void *)&a2[a3[10]];
  *(void *)&a1[v27] = *(void *)&a2[v27];
  *(void *)&a1[a3[12]] = *(void *)&a2[a3[12]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

char *sub_100A688BC(char *a1, char *a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *((void *)a1 + 1) = *((void *)a2 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)a1 + 2) = *((void *)a2 + 2);
  *((void *)a1 + 3) = *((void *)a2 + 3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[6];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = type metadata accessor for URL();
  int v10 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v7, 1, v9);
  int v11 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v9);
  if (v10)
  {
    if (!v11)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v12 = *(void *)(v9 - 8);
  if (v11)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v7, v9);
LABEL_6:
    uint64_t v13 = sub_10017DF08(&qword_100E749B0);
    memcpy(v7, v8, *(void *)(*(void *)(v13 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 24))(v7, v8, v9);
LABEL_7:
  uint64_t v14 = a3[7];
  uint64_t v15 = &a1[v14];
  uint64_t v16 = &a2[v14];
  uint64_t v17 = type metadata accessor for Date();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 24))(v15, v16, v17);
  uint64_t v18 = *(void *)(v9 - 8);
  uint64_t v19 = *(void (**)(char *, char *, uint64_t))(v18 + 24);
  v19(&a1[a3[8]], &a2[a3[8]], v9);
  uint64_t v20 = a3[9];
  uint64_t v21 = &a1[v20];
  uint64_t v22 = &a2[v20];
  *(void *)uint64_t v21 = *(void *)&a2[v20];
  *((void *)v21 + 1) = *(void *)&a2[v20 + 8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v21 + 2) = *((void *)v22 + 2);
  *((void *)v21 + 3) = *((void *)v22 + 3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v23 = *(int *)(type metadata accessor for NewsChannel() + 24);
  uint64_t v24 = &v21[v23];
  uint64_t v25 = &v22[v23];
  LODWORD(v22) = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v24, 1, v9);
  int v26 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v25, 1, v9);
  if (!v22)
  {
    if (!v26)
    {
      v19(v24, v25, v9);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v18 + 8))(v24, v9);
    goto LABEL_12;
  }
  if (v26)
  {
LABEL_12:
    uint64_t v27 = sub_10017DF08(&qword_100E749B0);
    memcpy(v24, v25, *(void *)(*(void *)(v27 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v24, v25, v9);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v24, 0, 1, v9);
LABEL_13:
  *(void *)&a1[a3[10]] = *(void *)&a2[a3[10]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&a1[a3[11]] = *(void *)&a2[a3[11]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&a1[a3[12]] = *(void *)&a2[a3[12]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

char *sub_100A68C7C(char *a1, char *a2, int *a3)
{
  long long v6 = *((_OWORD *)a2 + 1);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *((_OWORD *)a1 + 1) = v6;
  uint64_t v7 = a3[6];
  uint64_t v8 = &a1[v7];
  uint64_t v9 = &a2[v7];
  uint64_t v10 = type metadata accessor for URL();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v10))
  {
    uint64_t v11 = sub_10017DF08(&qword_100E749B0);
    memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v8, 0, 1, v10);
  }
  uint64_t v12 = a3[7];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  uint64_t v15 = type metadata accessor for Date();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
  uint64_t v16 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32);
  v16(&a1[a3[8]], &a2[a3[8]], v10);
  uint64_t v17 = a3[9];
  uint64_t v18 = &a1[v17];
  uint64_t v19 = &a2[v17];
  long long v20 = *(_OWORD *)&a2[v17 + 16];
  *(_OWORD *)uint64_t v18 = *(_OWORD *)&a2[v17];
  *((_OWORD *)v18 + 1) = v20;
  uint64_t v21 = *(int *)(type metadata accessor for NewsChannel() + 24);
  uint64_t v22 = &v18[v21];
  uint64_t v23 = &v19[v21];
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v23, 1, v10))
  {
    uint64_t v24 = sub_10017DF08(&qword_100E749B0);
    memcpy(v22, v23, *(void *)(*(void *)(v24 - 8) + 64));
  }
  else
  {
    v16(v22, v23, v10);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v22, 0, 1, v10);
  }
  uint64_t v25 = a3[11];
  *(void *)&a1[a3[10]] = *(void *)&a2[a3[10]];
  *(void *)&a1[v25] = *(void *)&a2[v25];
  *(void *)&a1[a3[12]] = *(void *)&a2[a3[12]];
  return a1;
}

char *sub_100A68EA4(char *a1, char *a2, int *a3)
{
  uint64_t v6 = *((void *)a2 + 1);
  *(void *)a1 = *(void *)a2;
  *((void *)a1 + 1) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *((void *)a2 + 3);
  *((void *)a1 + 2) = *((void *)a2 + 2);
  *((void *)a1 + 3) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a3[6];
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = type metadata accessor for URL();
  int v12 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v11);
  int v13 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v10, 1, v11);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v9, 0, 1, v11);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v14 = *(void *)(v11 - 8);
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v9, v11);
LABEL_6:
    uint64_t v15 = sub_10017DF08(&qword_100E749B0);
    memcpy(v9, v10, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v14 + 40))(v9, v10, v11);
LABEL_7:
  uint64_t v16 = a3[7];
  uint64_t v17 = &a1[v16];
  uint64_t v18 = &a2[v16];
  uint64_t v19 = type metadata accessor for Date();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 40))(v17, v18, v19);
  uint64_t v20 = *(void *)(v11 - 8);
  uint64_t v21 = *(void (**)(char *, char *, uint64_t))(v20 + 40);
  v21(&a1[a3[8]], &a2[a3[8]], v11);
  uint64_t v22 = a3[9];
  uint64_t v23 = &a1[v22];
  uint64_t v24 = &a2[v22];
  uint64_t v25 = *(void *)&a2[v22 + 8];
  *(void *)uint64_t v23 = *(void *)&a2[v22];
  *((void *)v23 + 1) = v25;
  swift_bridgeObjectRelease();
  uint64_t v26 = *((void *)v24 + 3);
  *((void *)v23 + 2) = *((void *)v24 + 2);
  *((void *)v23 + 3) = v26;
  swift_bridgeObjectRelease();
  uint64_t v27 = *(int *)(type metadata accessor for NewsChannel() + 24);
  uint64_t v28 = &v23[v27];
  uint64_t v29 = &v24[v27];
  int v30 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v28, 1, v11);
  int v31 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v29, 1, v11);
  if (!v30)
  {
    if (!v31)
    {
      v21(v28, v29, v11);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v20 + 8))(v28, v11);
    goto LABEL_12;
  }
  if (v31)
  {
LABEL_12:
    uint64_t v32 = sub_10017DF08(&qword_100E749B0);
    memcpy(v28, v29, *(void *)(*(void *)(v32 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v28, v29, v11);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v28, 0, 1, v11);
LABEL_13:
  *(void *)&a1[a3[10]] = *(void *)&a2[a3[10]];
  swift_bridgeObjectRelease();
  *(void *)&a1[a3[11]] = *(void *)&a2[a3[11]];
  swift_bridgeObjectRelease();
  *(void *)&a1[a3[12]] = *(void *)&a2[a3[12]];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100A6920C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100A69220);
}

uint64_t sub_100A69220(uint64_t a1, uint64_t a2, int *a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    sub_10017DF08(&qword_100E749B0);
    sub_100162F30();
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a3[6];
    }
    else
    {
      type metadata accessor for Date();
      sub_100162F30();
      if (*(_DWORD *)(v13 + 84) == a2)
      {
        uint64_t v10 = v12;
        uint64_t v11 = a3[7];
      }
      else
      {
        type metadata accessor for URL();
        sub_100162F30();
        if (*(_DWORD *)(v15 + 84) == a2)
        {
          uint64_t v10 = v14;
          uint64_t v11 = a3[8];
        }
        else
        {
          uint64_t v10 = type metadata accessor for NewsChannel();
          uint64_t v11 = a3[9];
        }
      }
    }
    return _s7Weather24LocationCompositionStateOwet_0(a1 + v11, a2, v10);
  }
}

uint64_t sub_100A69318(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100A6932C);
}

uint64_t sub_100A6932C(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    sub_10017DF08(&qword_100E749B0);
    sub_100162F30();
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a4[6];
    }
    else
    {
      type metadata accessor for Date();
      sub_100162F30();
      if (*(_DWORD *)(v13 + 84) == a3)
      {
        uint64_t v10 = v12;
        uint64_t v11 = a4[7];
      }
      else
      {
        type metadata accessor for URL();
        sub_100162F30();
        if (*(_DWORD *)(v15 + 84) == a3)
        {
          uint64_t v10 = v14;
          uint64_t v11 = a4[8];
        }
        else
        {
          uint64_t v10 = type metadata accessor for NewsChannel();
          uint64_t v11 = a4[9];
        }
      }
    }
    return _s7Weather24LocationCompositionStateOwst_0(v5 + v11, a2, a2, v10);
  }
  return result;
}

uint64_t sub_100A69420(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x656C746974 && a2 == 0xE500000000000000;
    if (v6 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 0x69616E626D756874 && a2 == 0xEC0000004C52556CLL;
      if (v7 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        BOOL v8 = a1 == 0x446873696C627570 && a2 == 0xEB00000000657461;
        if (v8 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else
        {
          BOOL v9 = a1 == 7107189 && a2 == 0xE300000000000000;
          if (v9 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 4;
          }
          else
          {
            BOOL v10 = a1 == 0x6C656E6E616863 && a2 == 0xE700000000000000;
            if (v10 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 5;
            }
            else
            {
              BOOL v11 = a1 == 0x73726F68747561 && a2 == 0xE700000000000000;
              if (v11 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
              {
                swift_bridgeObjectRelease();
                return 6;
              }
              else
              {
                BOOL v12 = a1 == 0x6E656D6F6E656870 && a2 == 0xE900000000000061;
                if (v12 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
                {
                  swift_bridgeObjectRelease();
                  return 7;
                }
                else if (a1 == 0x7364497472656C61 && a2 == 0xE800000000000000)
                {
                  swift_bridgeObjectRelease();
                  return 8;
                }
                else
                {
                  char v14 = _stringCompareWithSmolCheck(_:_:expecting:)();
                  swift_bridgeObjectRelease();
                  if (v14) {
                    return 8;
                  }
                  else {
                    return 9;
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

uint64_t sub_100A697C4()
{
  return 9;
}

uint64_t sub_100A697CC(char a1)
{
  uint64_t result = 25705;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x656C746974;
      break;
    case 2:
      uint64_t result = 0x69616E626D756874;
      break;
    case 3:
      uint64_t result = 0x446873696C627570;
      break;
    case 4:
      uint64_t result = 7107189;
      break;
    case 5:
      uint64_t result = 0x6C656E6E616863;
      break;
    case 6:
      uint64_t result = 0x73726F68747561;
      break;
    case 7:
      uint64_t result = 0x6E656D6F6E656870;
      break;
    case 8:
      uint64_t result = 0x7364497472656C61;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_100A698E8()
{
  return sub_100A697CC(*v0);
}

uint64_t sub_100A698F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100A69420(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100A69918@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_100A697C4();
  *a1 = result;
  return result;
}

uint64_t sub_100A69940(uint64_t a1)
{
  unint64_t v2 = sub_100A6AD08();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100A6997C(uint64_t a1)
{
  unint64_t v2 = sub_100A6AD08();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100A699B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X8>)
{
  uint64_t v38 = type metadata accessor for NewsChannelLogoCollection.LogoTheme();
  sub_100179C0C();
  uint64_t v36 = v10;
  __chkstk_darwin(v11);
  sub_100109314();
  uint64_t v37 = v12;
  type metadata accessor for NewsChannelLogoCollection();
  sub_100179C0C();
  __chkstk_darwin(v13);
  sub_100109314();
  uint64_t v14 = sub_10017DF08(&qword_100E749B0);
  __chkstk_darwin(v14 - 8);
  sub_1001D2194();
  type metadata accessor for NewsChannel();
  sub_100179C0C();
  __chkstk_darwin(v15);
  sub_100109314();
  uint64_t v16 = type metadata accessor for NewsArticle();
  sub_100179C0C();
  uint64_t v18 = v17;
  __chkstk_darwin(v19);
  sub_1001626E0();
  uint64_t v22 = v21 - v20;
  *a6 = NewsArticle.id.getter();
  a6[1] = v23;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 16))(v22, a1, v16);
  if (a3)
  {
    uint64_t v24 = a2;
  }
  else
  {
    uint64_t v24 = NewsArticle.title.getter();
    a3 = v25;
  }
  (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v22, v16);
  a6[2] = v24;
  a6[3] = a3;
  uint64_t v26 = (int *)type metadata accessor for NewsArticle();
  NewsArticle.thumbnailURL.getter();
  NewsArticle.publishDate.getter();
  NewsArticle.url.getter();
  NewsArticle.channel.getter();
  uint64_t v27 = (uint64_t *)((char *)a6 + v26[9]);
  *uint64_t v27 = NewsChannel.id.getter();
  v27[1] = v28;
  v27[2] = NewsChannel.name.getter();
  v27[3] = v29;
  NewsChannel.logo.getter();
  (*(void (**)(uint64_t, void, uint64_t))(v36 + 104))(v37, enum case for NewsChannelLogoCollection.LogoTheme.mask(_:), v38);
  NewsChannelLogoCollection.url(for:)();
  sub_100162F0C();
  v30();
  (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v37, v38);
  sub_100162F0C();
  v31();
  uint64_t v32 = type metadata accessor for NewsChannel();
  sub_1000F21C8(v6, (uint64_t)v27 + *(int *)(v32 + 24));
  sub_100162F0C();
  uint64_t result = v33();
  *(uint64_t *)((char *)a6 + v26[10]) = (uint64_t)_swiftEmptyArrayStorage;
  *(uint64_t *)((char *)a6 + v26[11]) = a4;
  *(uint64_t *)((char *)a6 + v26[12]) = a5;
  return result;
}

uint64_t sub_100A69D14(void *a1)
{
  uint64_t v4 = sub_10017DF08(&qword_100EAC8F8);
  sub_100179C0C();
  uint64_t v6 = v5;
  __chkstk_darwin(v7);
  sub_10012B938();
  sub_1001B1E64(a1, a1[3]);
  sub_100A6AD08();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  sub_10019DB54();
  if (!v1)
  {
    sub_10019DB54();
    type metadata accessor for NewsArticle();
    type metadata accessor for URL();
    sub_100A6AF04(&qword_100E6A658, (void (*)(uint64_t))&type metadata accessor for URL);
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
    type metadata accessor for Date();
    sub_100A6AF04(&qword_100E63968, (void (*)(uint64_t))&type metadata accessor for Date);
    sub_100189658();
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    sub_10017A86C();
    type metadata accessor for NewsChannel();
    sub_100A6AF04(&qword_100EAC900, (void (*)(uint64_t))type metadata accessor for NewsChannel);
    sub_100189658();
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    sub_10017DF08(&qword_100E91BC0);
    sub_100709B90(&qword_100E8F6D0);
    sub_10017A86C();
    sub_10017A86C();
    sub_10017DF08(&qword_100EAC8E0);
    sub_100A6AE70(&qword_100EAC908, &qword_100EAC910);
    KeyedEncodingContainer.encode<A>(_:forKey:)();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v2, v4);
}

uint64_t sub_100A6A0C0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  type metadata accessor for NewsChannel();
  sub_100162E4C();
  __chkstk_darwin(v4);
  sub_100109314();
  uint64_t v24 = v5;
  uint64_t v28 = type metadata accessor for URL();
  sub_100179C0C();
  uint64_t v25 = v6;
  __chkstk_darwin(v7);
  sub_1001626E0();
  type metadata accessor for Date();
  sub_100179C0C();
  uint64_t v26 = v9;
  uint64_t v27 = v8;
  __chkstk_darwin(v8);
  sub_1001626E0();
  uint64_t v12 = v11 - v10;
  uint64_t v13 = sub_10017DF08(&qword_100E749B0);
  __chkstk_darwin(v13 - 8);
  sub_1001626E0();
  uint64_t v16 = v15 - v14;
  sub_10017DF08(&qword_100EAC8C8);
  sub_100179C0C();
  __chkstk_darwin(v17);
  sub_10016279C();
  int v30 = (int *)type metadata accessor for NewsArticle();
  sub_100162E4C();
  __chkstk_darwin(v18);
  sub_1001D2194();
  sub_1001B1E64(a1, a1[3]);
  sub_100A6AD08();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v29) {
    return _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)a1);
  }
  *uint64_t v2 = KeyedDecodingContainer.decode(_:forKey:)();
  v2[1] = v19;
  v2[2] = KeyedDecodingContainer.decode(_:forKey:)();
  v2[3] = v20;
  sub_100A6AF04(&qword_100E6A788, (void (*)(uint64_t))&type metadata accessor for URL);
  KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
  sub_1000F21C8(v16, (uint64_t)v2 + v30[6]);
  sub_100A6AF04(&qword_100E63948, (void (*)(uint64_t))&type metadata accessor for Date);
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  (*(void (**)(char *, uint64_t, uint64_t))(v26 + 32))((char *)v2 + v30[7], v12, v27);
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  (*(void (**)(char *, void, uint64_t))(v25 + 32))((char *)v2 + v30[8], 0, v28);
  LOBYTE(v31) = 5;
  sub_100A6AF04(&qword_100EAC8D8, (void (*)(uint64_t))type metadata accessor for NewsChannel);
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  sub_100A6AD54(v24, (uint64_t)v2 + v30[9]);
  sub_10017DF08(&qword_100E91BC0);
  sub_100709B90(&qword_100E8F6B8);
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  *(uint64_t *)((char *)v2 + v30[10]) = v31;
  sub_1001A0208();
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  *(uint64_t *)((char *)v2 + v30[11]) = v31;
  sub_10017DF08(&qword_100EAC8E0);
  sub_100A6AE70(&qword_100EAC8E8, &qword_100EAC8F0);
  sub_1001A0208();
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  sub_100164938();
  v22();
  *(uint64_t *)((char *)v2 + v30[12]) = v31;
  sub_100A6ADB8((uint64_t)v2, a2);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)a1);
  return sub_100A6AE1C((uint64_t)v2, (void (*)(void))type metadata accessor for NewsArticle);
}

uint64_t sub_100A6A8B0(void *a1, void *a2)
{
  uint64_t v6 = type metadata accessor for URL();
  sub_100179C0C();
  uint64_t v8 = v7;
  __chkstk_darwin(v9);
  sub_10016279C();
  uint64_t v10 = sub_10017DF08(&qword_100E6D578);
  sub_100162E4C();
  __chkstk_darwin(v11);
  sub_10012B938();
  uint64_t v12 = sub_10017DF08(&qword_100E749B0);
  uint64_t v13 = __chkstk_darwin(v12 - 8);
  uint64_t v15 = &v33[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v16 = __chkstk_darwin(v13);
  uint64_t v18 = &v33[-v17];
  __chkstk_darwin(v16);
  uint64_t v20 = &v33[-v19];
  BOOL v21 = *a1 == *a2 && a1[1] == a2[1];
  if (v21 || (char v22 = _stringCompareWithSmolCheck(_:_:expecting:)(), v23 = 0, (v22 & 1) != 0))
  {
    BOOL v24 = a1[2] == a2[2] && a1[3] == a2[3];
    if (v24 || (v25 = _stringCompareWithSmolCheck(_:_:expecting:)(), char v23 = 0, (v25 & 1) != 0))
    {
      uint64_t v35 = v3;
      uint64_t v26 = type metadata accessor for NewsArticle();
      sub_1000F32E4((uint64_t)a1 + *(int *)(v26 + 24), (uint64_t)v20);
      uint64_t v36 = (int *)v26;
      sub_1000F32E4((uint64_t)a2 + *(int *)(v26 + 24), (uint64_t)v18);
      uint64_t v27 = v2 + *(int *)(v10 + 48);
      sub_1000F32E4((uint64_t)v20, v2);
      sub_1000F32E4((uint64_t)v18, v27);
      sub_100162F8C(v2);
      if (v21)
      {
        sub_100178110((uint64_t)v18, &qword_100E749B0);
        sub_100178110((uint64_t)v20, &qword_100E749B0);
        sub_100162F8C(v27);
        if (v21)
        {
          sub_100178110(v2, &qword_100E749B0);
LABEL_21:
          uint64_t v31 = v36;
          if ((static Date.== infix(_:_:)() & 1) != 0
            && (static URL.== infix(_:_:)() & 1) != 0
            && sub_1007CE660((void *)((char *)a1 + v31[9]), (void *)((char *)a2 + v31[9]))
            && (sub_1001508B0(*(void **)((char *)a1 + v31[10]), *(void **)((char *)a2 + v31[10])) & 1) != 0
            && (sub_1001508B0(*(void **)((char *)a1 + v31[11]), *(void **)((char *)a2 + v31[11])) & 1) != 0)
          {
            sub_100BDDA78();
            return v23 & 1;
          }
LABEL_27:
          char v23 = 0;
          return v23 & 1;
        }
      }
      else
      {
        sub_1000F32E4(v2, (uint64_t)v15);
        sub_100162F8C(v27);
        if (!v28)
        {
          uint64_t v29 = v35;
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 32))(v35, v27, v6);
          sub_100A6AF04(qword_100E6D3E8, (void (*)(uint64_t))&type metadata accessor for URL);
          int v34 = dispatch thunk of static Equatable.== infix(_:_:)();
          int v30 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
          v30(v29, v6);
          sub_100178110((uint64_t)v18, &qword_100E749B0);
          sub_100178110((uint64_t)v20, &qword_100E749B0);
          v30((uint64_t)v15, v6);
          sub_100178110(v2, &qword_100E749B0);
          if ((v34 & 1) == 0) {
            goto LABEL_27;
          }
          goto LABEL_21;
        }
        sub_100178110((uint64_t)v18, &qword_100E749B0);
        sub_100178110((uint64_t)v20, &qword_100E749B0);
        (*(void (**)(unsigned char *, uint64_t))(v8 + 8))(v15, v6);
      }
      sub_100178110(v2, &qword_100E6D578);
      goto LABEL_27;
    }
  }
  return v23 & 1;
}

void sub_100A6ACA4()
{
}

uint64_t sub_100A6ACBC()
{
  return sub_1008C1F3C();
}

uint64_t sub_100A6ACD4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100A6A0C0(a1, a2);
}

uint64_t sub_100A6ACEC(void *a1)
{
  return sub_100A69D14(a1);
}

unint64_t sub_100A6AD08()
{
  unint64_t result = qword_100EAC8D0;
  if (!qword_100EAC8D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAC8D0);
  }
  return result;
}

uint64_t sub_100A6AD54(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for NewsChannel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100A6ADB8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for NewsArticle();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100A6AE1C(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  sub_100162F0C();
  v3();
  return a1;
}

uint64_t sub_100A6AE70(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10018C6DC(&qword_100EAC8E0);
    sub_100A6AF04(a2, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100A6AF04(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for NewsArticle.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xF8)
  {
    if (a2 + 8 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 8) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 9;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 9;
  int v5 = v6 - 9;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for NewsArticle.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *uint64_t result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100A6B0A0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 8;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NewsArticle.CodingKeys()
{
  return &type metadata for NewsArticle.CodingKeys;
}

unint64_t sub_100A6B0DC()
{
  unint64_t result = qword_100EAC918;
  if (!qword_100EAC918)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAC918);
  }
  return result;
}

unint64_t sub_100A6B12C()
{
  unint64_t result = qword_100EAC920;
  if (!qword_100EAC920)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAC920);
  }
  return result;
}

unint64_t sub_100A6B17C()
{
  unint64_t result = qword_100EAC928;
  if (!qword_100EAC928)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAC928);
  }
  return result;
}

uint64_t sub_100A6B1C8()
{
  type metadata accessor for Domain();
  sub_100179C0C();
  __chkstk_darwin(v0);
  sub_10017AE00();
  sub_100179C0C();
  __chkstk_darwin(v1);
  sub_10011BFD8();
  uint64_t v2 = sub_10017A08C();
  v3(v2);
  uint64_t v4 = sub_10017FB90();
  v5(v4);
  sub_10017DF08(&qword_100E70818);
  swift_allocObject();
  sub_100164FD4();
  uint64_t result = Setting.init(_:defaultValue:domain:access:)();
  qword_100F522D0 = result;
  return result;
}

uint64_t sub_100A6B2E4(uint64_t a1)
{
  return sub_10017DA90(a1, (unsigned int *)&enum case for Access.protected(_:), 51, 0x8000000100CBBB80, &qword_100F522E0);
}

uint64_t sub_100A6B30C(uint64_t a1)
{
  return sub_10017DA90(a1, (unsigned int *)&enum case for Access.protected(_:), 48, 0x8000000100CBBB40, &qword_100F52300);
}

uint64_t sub_100A6B334(uint64_t a1)
{
  return sub_10017DA90(a1, (unsigned int *)&enum case for Access.protected(_:), 41, 0x8000000100CBBA60, &qword_100F52328);
}

uint64_t sub_100A6B35C(uint64_t a1)
{
  return sub_10017DA90(a1, (unsigned int *)&enum case for Access.protected(_:), 41, 0x8000000100CBBC30, &qword_100F52330);
}

uint64_t sub_100A6B384(uint64_t a1)
{
  return sub_10017DA90(a1, (unsigned int *)&enum case for Access.protected(_:), 45, 0x8000000100CBB9E0, &qword_100F52340);
}

uint64_t sub_100A6B3AC(uint64_t a1)
{
  return sub_10017DA90(a1, (unsigned int *)&enum case for Access.protected(_:), 48, 0x8000000100CBB9A0, &qword_100F52348);
}

uint64_t sub_100A6B3D4(uint64_t a1)
{
  return sub_10017DA90(a1, (unsigned int *)&enum case for Access.protected(_:), 46, 0x8000000100CBB970, &qword_100F52350);
}

uint64_t sub_100A6B3FC(uint64_t a1)
{
  return sub_10017DA90(a1, (unsigned int *)&enum case for Access.protected(_:), 39, 0x8000000100CBB940, &qword_100F52358);
}

uint64_t sub_100A6B424()
{
  return _s7ModulesV8LocationV17NotableConditionsCMa();
}

uint64_t sub_100A6B42C()
{
  type metadata accessor for Access();
  sub_100179C0C();
  __chkstk_darwin(v0);
  sub_10017DF08(&qword_100E70810);
  uint64_t v1 = sub_10017EA10();
  v2(v1);
  sub_100164FD4();
  uint64_t result = Setting<>.init(_:defaultValue:min:max:access:)();
  qword_100F52368 = result;
  return result;
}

uint64_t sub_100A6B514(char a1)
{
  switch(a1)
  {
    case 1:
      if (qword_100E62898 != -1) {
        swift_once();
      }
      uint64_t v9 = type metadata accessor for Logger();
      uint64_t v10 = (void *)sub_1001D21B0(v9, (uint64_t)qword_100F520D0);
      os_log_type_t v11 = static os_log_type_t.default.getter();
      if (sub_10019F700(v11))
      {
        *(_DWORD *)sub_10017ED94() = 67109120;
        if (qword_100E623A0 != -1) {
          swift_once();
        }
        uint64_t v12 = sub_10017DF08(&qword_100E63520);
        sub_1002102B0(v12, (uint64_t)qword_100F51578);
        sub_10017DA98();
        sub_1001A1244();
        sub_1001A2874();
        sub_1001883CC();
        sub_100180A94((void *)&_mh_execute_header, v13, v1, "AirQualityTip.isValid=%{BOOL}d");
        sub_10017A14C();
      }

      if (qword_100E623A0 != -1) {
        swift_once();
      }
      uint64_t v7 = sub_10017DF08(&qword_100E63520);
      uint64_t v8 = qword_100F51578;
      goto LABEL_56;
    case 2:
      if (qword_100E62898 != -1) {
        swift_once();
      }
      uint64_t v14 = type metadata accessor for Logger();
      uint64_t v15 = (void *)sub_1001D21B0(v14, (uint64_t)qword_100F520D0);
      os_log_type_t v16 = static os_log_type_t.default.getter();
      if (sub_10019F700(v16))
      {
        *(_DWORD *)sub_10017ED94() = 67109120;
        if (qword_100E623B0 != -1) {
          swift_once();
        }
        uint64_t v17 = sub_10017DF08(&qword_100E63520);
        sub_1002102B0(v17, (uint64_t)qword_100F515A8);
        sub_10017DA98();
        sub_1001A1244();
        sub_1001A2874();
        sub_1001883CC();
        sub_100180A94((void *)&_mh_execute_header, v18, v1, "MapTip.isValid=%{BOOL}d");
        sub_10017A14C();
      }

      if (qword_100E623B0 != -1) {
        swift_once();
      }
      uint64_t v7 = sub_10017DF08(&qword_100E63520);
      uint64_t v8 = qword_100F515A8;
      goto LABEL_56;
    case 3:
      if (qword_100E62898 != -1) {
        swift_once();
      }
      uint64_t v19 = type metadata accessor for Logger();
      uint64_t v20 = (void *)sub_1001D21B0(v19, (uint64_t)qword_100F520D0);
      os_log_type_t v21 = static os_log_type_t.default.getter();
      if (sub_10019F700(v21))
      {
        *(_DWORD *)sub_10017ED94() = 67109120;
        if (qword_100E623C0 != -1) {
          swift_once();
        }
        uint64_t v22 = sub_10017DF08(&qword_100E63520);
        sub_1002102B0(v22, (uint64_t)qword_100F515D8);
        sub_10017DA98();
        sub_1001A1244();
        sub_1001A2874();
        sub_1001883CC();
        sub_100180A94((void *)&_mh_execute_header, v23, v1, "WindMapTip.isValid=%{BOOL}d");
        sub_10017A14C();
      }

      if (qword_100E623C0 != -1) {
        swift_once();
      }
      uint64_t v7 = sub_10017DF08(&qword_100E63520);
      uint64_t v8 = qword_100F515D8;
      goto LABEL_56;
    case 4:
      if (qword_100E62898 != -1) {
        swift_once();
      }
      uint64_t v24 = type metadata accessor for Logger();
      char v25 = (void *)sub_1001D21B0(v24, (uint64_t)qword_100F520D0);
      os_log_type_t v26 = static os_log_type_t.default.getter();
      if (sub_10019F700(v26))
      {
        *(_DWORD *)sub_10017ED94() = 67109120;
        if (qword_100E623D8 != -1) {
          swift_once();
        }
        uint64_t v27 = sub_10017DF08(&qword_100E63520);
        char v28 = sub_1002102B0(v27, (uint64_t)qword_100F51620);
        sub_10017DA98();
        Tips.Parameter.wrappedValue.getter();
        sub_1001A2874();
        if ((v28 & 1) == 0)
        {
          if (qword_100E623C8 != -1) {
            swift_once();
          }
          sub_1002102B0(v27, (uint64_t)qword_100F515F0);
          sub_10017DA98();
          Tips.Parameter.wrappedValue.getter();
          sub_1001A2874();
        }
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        sub_100180A94((void *)&_mh_execute_header, v36, v1, "UVIndexTip.isValid=%{BOOL}d");
        sub_10017A14C();
      }

      if (qword_100E623D8 != -1) {
        swift_once();
      }
      uint64_t v37 = sub_10017DF08(&qword_100E63520);
      char v38 = sub_1002102B0(v37, (uint64_t)qword_100F51620);
      sub_10017DA98();
      Tips.Parameter.wrappedValue.getter();
      sub_1001A2874();
      if (v38)
      {
        char v34 = 0;
      }
      else
      {
        if (qword_100E623C8 != -1) {
          swift_once();
        }
        sub_1002102B0(v37, (uint64_t)qword_100F515F0);
        sub_10017DA98();
        Tips.Parameter.wrappedValue.getter();
        char v34 = v39;
        swift_endAccess();
      }
      return v34 & 1;
    case 5:
      if (qword_100E62898 != -1) {
        swift_once();
      }
      uint64_t v29 = type metadata accessor for Logger();
      int v30 = (void *)sub_1001D21B0(v29, (uint64_t)qword_100F520D0);
      os_log_type_t v31 = static os_log_type_t.default.getter();
      if (sub_10019F700(v31))
      {
        *(_DWORD *)sub_10017ED94() = 67109120;
        if (qword_100E623E8 != -1) {
          swift_once();
        }
        uint64_t v32 = sub_10017DF08(&qword_100E63520);
        sub_1002102B0(v32, (uint64_t)qword_100F51650);
        sub_10017DA98();
        sub_1001A1244();
        sub_1001A2874();
        sub_1001883CC();
        sub_100180A94((void *)&_mh_execute_header, v33, v1, "WindTip.isValid=%{BOOL}d");
        sub_10017A14C();
      }

      if (qword_100E623E8 != -1) {
        swift_once();
      }
      uint64_t v7 = sub_10017DF08(&qword_100E63520);
      uint64_t v8 = qword_100F51650;
      goto LABEL_56;
    default:
      if (qword_100E62898 != -1) {
        swift_once();
      }
      uint64_t v2 = type metadata accessor for Logger();
      int v3 = (void *)sub_1001D21B0(v2, (uint64_t)qword_100F520D0);
      os_log_type_t v4 = static os_log_type_t.default.getter();
      if (sub_10019F700(v4))
      {
        *(_DWORD *)sub_10017ED94() = 67109120;
        if (qword_100E62388 != -1) {
          swift_once();
        }
        uint64_t v5 = sub_10017DF08(&qword_100E63520);
        sub_1002102B0(v5, (uint64_t)qword_100F51530);
        sub_10017DA98();
        sub_1001A1244();
        sub_1001A2874();
        sub_1001883CC();
        sub_100180A94((void *)&_mh_execute_header, v6, v1, "DailyForecastTip.isValid=%{BOOL}d");
        sub_10017A14C();
      }

      if (qword_100E62388 != -1) {
        swift_once();
      }
      uint64_t v7 = sub_10017DF08(&qword_100E63520);
      uint64_t v8 = qword_100F51530;
LABEL_56:
      sub_1002102B0(v7, (uint64_t)v8);
      sub_10017DA98();
      Tips.Parameter.wrappedValue.getter();
      swift_endAccess();
      char v34 = v39 ^ 1;
      return v34 & 1;
  }
}

uint64_t sub_100A6BDF8(char a1)
{
  if (qword_100E62898 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  int v3 = sub_1001D21B0(v2, (uint64_t)qword_100F520D0);
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    v11[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136315138;
    uint64_t v6 = sub_100A6C3F8(a1);
    sub_10016414C(v6, v7, v11);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Setting tip %s to appear", v5, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  switch(a1)
  {
    case 1:
      if (qword_100E62398 != -1) {
        swift_once();
      }
      uint64_t v8 = sub_10017DF08(&qword_100E63520);
      uint64_t v9 = qword_100F51560;
      break;
    case 2:
      if (qword_100E623A8 != -1) {
        swift_once();
      }
      uint64_t v8 = sub_10017DF08(&qword_100E63520);
      uint64_t v9 = qword_100F51590;
      break;
    case 3:
      if (qword_100E623B8 != -1) {
        swift_once();
      }
      uint64_t v8 = sub_10017DF08(&qword_100E63520);
      uint64_t v9 = qword_100F515C0;
      break;
    case 4:
      if (qword_100E623D0 != -1) {
        swift_once();
      }
      uint64_t v8 = sub_10017DF08(&qword_100E63520);
      uint64_t v9 = qword_100F51608;
      break;
    case 5:
      if (qword_100E623E0 != -1) {
        swift_once();
      }
      uint64_t v8 = sub_10017DF08(&qword_100E63520);
      uint64_t v9 = qword_100F51638;
      break;
    default:
      if (qword_100E62380 != -1) {
        swift_once();
      }
      uint64_t v8 = sub_10017DF08(&qword_100E63520);
      uint64_t v9 = qword_100F51518;
      break;
  }
  sub_1002102B0(v8, (uint64_t)v9);
  swift_beginAccess();
  Tips.Parameter.wrappedValue.setter();
  return swift_endAccess();
}

uint64_t sub_100A6C1A0(char a1)
{
  switch(a1)
  {
    case 1:
      if (qword_100E623A0 != -1) {
        swift_once();
      }
      uint64_t v1 = sub_10017DF08(&qword_100E63520);
      uint64_t v2 = qword_100F51578;
      break;
    case 2:
      if (qword_100E623B0 != -1) {
        swift_once();
      }
      uint64_t v1 = sub_10017DF08(&qword_100E63520);
      uint64_t v2 = qword_100F515A8;
      break;
    case 3:
      if (qword_100E623C0 != -1) {
        swift_once();
      }
      uint64_t v1 = sub_10017DF08(&qword_100E63520);
      uint64_t v2 = qword_100F515D8;
      break;
    case 4:
      if (qword_100E623D8 != -1) {
        swift_once();
      }
      uint64_t v1 = sub_10017DF08(&qword_100E63520);
      uint64_t v2 = qword_100F51620;
      break;
    case 5:
      if (qword_100E623E8 != -1) {
        swift_once();
      }
      uint64_t v1 = sub_10017DF08(&qword_100E63520);
      uint64_t v2 = qword_100F51650;
      break;
    default:
      if (qword_100E62388 != -1) {
        swift_once();
      }
      uint64_t v1 = sub_10017DF08(&qword_100E63520);
      uint64_t v2 = qword_100F51530;
      break;
  }
  sub_1002102B0(v1, (uint64_t)v2);
  swift_beginAccess();
  Tips.Parameter.wrappedValue.setter();
  return swift_endAccess();
}

uint64_t sub_100A6C3F8(char a1)
{
  uint64_t result = 0x726F46796C696164;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x696C617551726961;
      break;
    case 2:
      uint64_t result = 7364973;
      break;
    case 3:
      uint64_t result = 0x70614D646E6977;
      break;
    case 4:
      uint64_t result = 0x7865646E497675;
      break;
    case 5:
      uint64_t result = 1684957559;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_100A6C4C4(Swift::String string)
{
  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_100E08BC0, v2);
  swift_bridgeObjectRelease();
  if (v3 >= 6) {
    return 6;
  }
  else {
    return v3;
  }
}

uint64_t sub_100A6C510()
{
  return sub_10088BA24();
}

Swift::Int sub_100A6C51C()
{
  return sub_10065268C(*v0);
}

uint64_t sub_100A6C524(uint64_t a1)
{
  return sub_1002C332C(a1, *v1);
}

Swift::Int sub_100A6C52C(uint64_t a1)
{
  return sub_1002C4108(a1, *v1);
}

unint64_t sub_100A6C534@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_100A6C4C4(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_100A6C564@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_100A6C3F8(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unsigned char *storeEnumTagSinglePayload for WeatherTip(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *uint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100A6C65CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

unint64_t sub_100A6C688()
{
  unint64_t result = qword_100EACA18;
  if (!qword_100EACA18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EACA18);
  }
  return result;
}

void *sub_100A6C6D4(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  unsigned int v4 = (void *)a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *unsigned int v4 = *a2;
    unsigned int v4 = (void *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
    *(unsigned char *)(a1 + 17) = *((unsigned char *)a2 + 17);
    *(unsigned char *)(a1 + 18) = *((unsigned char *)a2 + 18);
    uint64_t v6 = *(int *)(type metadata accessor for DisplayMetrics() + 36);
    unint64_t v7 = (char *)v4 + v6;
    uint64_t v8 = (uint64_t)a2 + v6;
    uint64_t v9 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
  }
  return v4;
}

uint64_t sub_100A6C7C0(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  *(unsigned char *)(a1 + 18) = *(unsigned char *)(a2 + 18);
  uint64_t v4 = *(int *)(type metadata accessor for DisplayMetrics() + 36);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = type metadata accessor for DynamicTypeSize();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

uint64_t sub_100A6C868(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  *(unsigned char *)(a1 + 18) = *(unsigned char *)(a2 + 18);
  uint64_t v4 = *(int *)(type metadata accessor for DisplayMetrics() + 36);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = type metadata accessor for DynamicTypeSize();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t sub_100A6C908(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DisplayMetrics();

  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, v4, sub_100A6C960);
}

uint64_t sub_100A6C960(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 254)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 17);
    if (v4 >= 2) {
      return v4 - 1;
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v8 = type metadata accessor for DynamicTypeSize();
    uint64_t v9 = a1 + *(int *)(a3 + 36);
    return _s7Weather24LocationCompositionStateOwet_0(v9, a2, v8);
  }
}

uint64_t sub_100A6C9E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for DisplayMetrics();

  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, v6, sub_100A6CA48);
}

uint64_t sub_100A6CA48(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 254)
  {
    *(unsigned char *)(result + 17) = a2 + 1;
  }
  else
  {
    uint64_t v7 = type metadata accessor for DynamicTypeSize();
    uint64_t v8 = v5 + *(int *)(a4 + 36);
    return _s7Weather24LocationCompositionStateOwst_0(v8, a2, a2, v7);
  }
  return result;
}

uint64_t sub_100A6CAC4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, void *a8@<X8>, long long *a9, uint64_t a10, uint64_t a11)
{
  uint64_t v37 = a5;
  uint64_t v38 = a6;
  uint64_t v35 = a3;
  uint64_t v36 = a4;
  uint64_t v42 = a11;
  uint64_t v40 = a7;
  uint64_t v41 = a10;
  char v39 = a9;
  sub_10017DF08(&qword_100E6E1E0);
  sub_100162E4C();
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v35 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  sub_10018577C();
  uint64_t v19 = (int *)type metadata accessor for InteractiveMapView();
  uint64_t v20 = type metadata accessor for WeatherMapPerformanceTestConditions();
  _s7Weather24LocationCompositionStateOwst_0(v11, 1, 1, v20);
  sub_10006DF38(v11, (uint64_t)v17, &qword_100E6E1E0);
  State.init(wrappedValue:)();
  sub_100178110(v11, &qword_100E6E1E0);
  os_log_type_t v21 = (void *)((char *)a8 + v19[12]);
  type metadata accessor for ObservableResolver();
  sub_100A73D0C((unint64_t *)&qword_100E70FD0, (void (*)(uint64_t))&type metadata accessor for ObservableResolver);
  *os_log_type_t v21 = EnvironmentObject.init()();
  v21[1] = v22;
  uint64_t v23 = (void *)((char *)a8 + v19[13]);
  *uint64_t v23 = swift_getKeyPath();
  sub_10017DF08(&qword_100E63BD0);
  sub_10019DB88();
  uint64_t v24 = (void *)((char *)a8 + v19[14]);
  *uint64_t v24 = swift_getKeyPath();
  sub_10017DF08((uint64_t *)&unk_100EAA560);
  sub_10019DB88();
  char v25 = (char *)a8 + v19[15];
  *(void *)char v25 = swift_getKeyPath();
  *((void *)v25 + 1) = 0;
  *((void *)v25 + 2) = 0;
  *((void *)v25 + 3) = 0;
  v25[32] = 0;
  *(void *)((char *)a8 + v19[16]) = 0x3FE3333333333333;
  os_log_type_t v26 = (void *)((char *)a8 + v19[17]);
  *os_log_type_t v26 = swift_getKeyPath();
  sub_10017DF08(&qword_100E74A68);
  sub_10019DB88();
  *a8 = a1;
  a8[1] = a2;
  sub_10017DF08(&qword_100E64998);
  sub_1001246C8(&qword_100E649A0, &qword_100E64998);
  a8[2] = ObservedObject.init(wrappedValue:)();
  a8[3] = v27;
  uint64_t v28 = v36;
  a8[4] = v35;
  a8[5] = v28;
  uint64_t v29 = v38;
  a8[6] = v37;
  a8[7] = v29;
  int v30 = (char *)a8 + v19[8];
  type metadata accessor for WeatherMapDisplayMode();
  sub_100162E4C();
  (*(void (**)(char *, uint64_t))(v31 + 32))(v30, v40);
  uint64_t result = sub_1001262E4(v39, (uint64_t)a8 + v19[9]);
  uint64_t v33 = (void *)((char *)a8 + v19[10]);
  uint64_t v34 = v42;
  void *v33 = v41;
  v33[1] = v34;
  return result;
}

uint64_t sub_100A6CDBC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1;
  uint64_t v223 = a1;
  type metadata accessor for NSNotificationCenter.Publisher();
  sub_10017C83C();
  uint64_t v221 = v5;
  uint64_t v222 = v4;
  __chkstk_darwin(v4);
  sub_100109314();
  uint64_t v220 = v6;
  type metadata accessor for AccessibilityChildBehavior();
  sub_10017C83C();
  uint64_t v218 = v8;
  uint64_t v219 = v7;
  __chkstk_darwin(v7);
  sub_100109314();
  sub_100109338(v9);
  uint64_t v10 = sub_10017DF08(&qword_100E6E1E0);
  __chkstk_darwin(v10 - 8);
  sub_100109314();
  sub_100109338(v11);
  uint64_t v12 = sub_10017DF08((uint64_t *)&unk_100EAA640);
  __chkstk_darwin(v12 - 8);
  sub_100109314();
  sub_100109338(v13);
  uint64_t v14 = (int *)type metadata accessor for InteractiveMapView();
  uint64_t v224 = v14;
  sub_10017C83C();
  uint64_t v230 = v15;
  uint64_t v229 = *(void *)(v16 + 64);
  __chkstk_darwin(v17);
  uint64_t v227 = (uint64_t)v170 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_10017DF08(&qword_100E81480);
  __chkstk_darwin(v19 - 8);
  sub_1001626E0();
  uint64_t v22 = v21 - v20;
  uint64_t v180 = v21 - v20;
  uint64_t v23 = (int *)type metadata accessor for InteractiveMapViewModel();
  sub_100162880();
  __chkstk_darwin(v24);
  sub_100162EF8();
  uint64_t v228 = v25;
  __chkstk_darwin(v26);
  uint64_t v28 = (char *)v170 - v27;
  __chkstk_darwin(v29);
  uint64_t v225 = (char *)v170 - v30;
  __chkstk_darwin(v31);
  uint64_t v33 = (char *)v170 - v32;
  __chkstk_darwin(v34);
  sub_10018577C();
  uint64_t v35 = type metadata accessor for WeatherMapDisplayMode();
  sub_10017C83C();
  uint64_t v37 = v36;
  __chkstk_darwin(v38);
  sub_100162EF8();
  uint64_t v189 = v39;
  __chkstk_darwin(v40);
  uint64_t v42 = (char *)v170 - v41;
  uint64_t v193 = (char *)v170 - v41;
  uint64_t v187 = type metadata accessor for WeatherMap();
  sub_10017C83C();
  uint64_t v186 = v43;
  __chkstk_darwin(v44);
  sub_100109314();
  sub_100109338(v45);
  uint64_t v194 = sub_10017DF08(&qword_100EACC70);
  sub_100162E4C();
  __chkstk_darwin(v46);
  sub_100109314();
  sub_100109338(v47);
  uint64_t v196 = sub_10017DF08(&qword_100EACC78);
  sub_10017C83C();
  uint64_t v195 = v48;
  __chkstk_darwin(v49);
  sub_100109314();
  sub_100109338(v50);
  uint64_t v198 = sub_10017DF08(&qword_100EACC80);
  sub_10017C83C();
  uint64_t v197 = v51;
  __chkstk_darwin(v52);
  sub_100109314();
  sub_100109338(v53);
  uint64_t v203 = sub_10017DF08(&qword_100EACC88);
  sub_10017C83C();
  uint64_t v202 = v54;
  __chkstk_darwin(v55);
  sub_100109314();
  sub_100109338(v56);
  uint64_t v200 = sub_10017DF08(&qword_100EACC90);
  sub_100162E4C();
  __chkstk_darwin(v57);
  sub_100109314();
  sub_100109338(v58);
  uint64_t v208 = sub_10017DF08(&qword_100EACC98);
  sub_10017C83C();
  uint64_t v207 = v59;
  __chkstk_darwin(v60);
  sub_100109314();
  sub_100109338(v61);
  uint64_t v204 = sub_10017DF08(&qword_100EACCA0);
  sub_100162E4C();
  __chkstk_darwin(v62);
  sub_100109314();
  sub_100109338(v63);
  uint64_t v206 = sub_10017DF08(&qword_100EACCA8);
  sub_100162E4C();
  __chkstk_darwin(v64);
  sub_100109314();
  sub_100109338(v65);
  uint64_t v210 = sub_10017DF08(&qword_100EACCB0);
  sub_100162E4C();
  __chkstk_darwin(v66);
  sub_100109314();
  sub_100109338(v67);
  uint64_t v212 = sub_10017DF08(&qword_100EACCB8);
  sub_100162E4C();
  __chkstk_darwin(v68);
  sub_100109314();
  sub_100109338(v69);
  uint64_t v215 = sub_10017DF08(&qword_100EACCC0);
  sub_100162E4C();
  __chkstk_darwin(v70);
  sub_100109314();
  sub_100109338(v71);
  uint64_t v72 = v3 + v14[8];
  *(void *)&long long v191 = v37;
  uint64_t v73 = *(void (**)(void))(v37 + 16);
  uint64_t v184 = v72;
  *(void *)&long long v192 = v35;
  uint64_t v183 = v37 + 16;
  uint64_t v182 = v73;
  v73(v42);
  sub_10024FA08();
  uint64_t v74 = v23[5];
  uint64_t v226 = v2;
  uint64_t v181 = *(void *)((char *)v2 + v74);
  swift_bridgeObjectRetain();
  sub_100A73924((uint64_t)v2, (void (*)(void))type metadata accessor for InteractiveMapViewModel);
  sub_100A6E22C(v22);
  uint64_t v179 = sub_100A6E3E8();
  uint64_t v178 = v75;
  uint64_t v177 = v76;
  uint64_t v176 = v77;
  sub_100185F2C();
  swift_bridgeObjectRetain();
  sub_1001A49D4();
  type metadata accessor for WeatherData(0);
  type metadata accessor for WeatherDataModel();
  uint64_t v175 = Dictionary.mapKeysAndValues<A, B>(_:)();
  swift_bridgeObjectRelease();
  sub_100185F2C();
  uint64_t v78 = v23;
  LODWORD(v174) = v33[v23[8]];
  sub_1001A49D4();
  sub_100185F2C();
  sub_1001A49D4();
  uint64_t v79 = (uint64_t)v225;
  sub_10024FA08();
  sub_100A73924(v79, (void (*)(void))type metadata accessor for InteractiveMapViewModel);
  sub_10024FA08();
  sub_100A73924((uint64_t)v28, (void (*)(void))type metadata accessor for InteractiveMapViewModel);
  uint64_t v80 = v228;
  sub_10024FA08();
  sub_100A73924(v80, (void (*)(void))type metadata accessor for InteractiveMapViewModel);
  uint64_t v174 = Array<A>.init(hideScale:controlsLoadDelay:controlsFadeOnResize:controlsHidden:forceOverlayPaused:isUserInteractionEnabled:)();
  sub_100185F2C();
  uint64_t v81 = &v33[v23[16]];
  uint64_t v82 = *((void *)v81 + 1);
  uint64_t v173 = *(void *)v81;
  uint64_t v172 = v82;
  swift_bridgeObjectRetain();
  sub_1001A49D4();
  sub_10024FA08();
  int v171 = *(unsigned __int8 *)(v79 + v23[17]);
  sub_100A73924(v79, (void (*)(void))type metadata accessor for InteractiveMapViewModel);
  long long v83 = (void *)(v3 + v224[10]);
  uint64_t v84 = v83[1];
  v170[1] = *v83;
  v170[0] = v84;
  uint64_t v85 = v3;
  uint64_t v86 = v227;
  sub_10011EF28(v3, v227, (void (*)(void))type metadata accessor for InteractiveMapView);
  uint64_t v87 = *(unsigned __int8 *)(v230 + 80);
  uint64_t v88 = (v87 + 16) & ~v87;
  uint64_t v89 = (char *)(v88 + v229);
  uint64_t v90 = v87 | 7;
  uint64_t v91 = swift_allocObject();
  sub_100A73158(v86, v91 + v88);
  sub_10011EF28(v85, v86, (void (*)(void))type metadata accessor for InteractiveMapView);
  uint64_t v225 = v89;
  uint64_t v230 = v90;
  uint64_t v92 = swift_allocObject();
  uint64_t v228 = v88;
  sub_100A73158(v86, v92 + v88);
  swift_bridgeObjectRetain();
  sub_10017DF08(&qword_100EACCC8);
  type metadata accessor for MapContentStatusBanner();
  sub_100A73254();
  sub_100A73D0C(&qword_100EACD18, (void (*)(uint64_t))type metadata accessor for MapContentStatusBanner);
  sub_100A73D0C(&qword_100EACD20, (void (*)(uint64_t))type metadata accessor for MapContentStatusBanner);
  uint64_t v93 = v185;
  uint64_t v94 = v224;
  WeatherMap.init<A, B>(displayMode:locations:overlayKind:selectedLocationId:weatherData:options:cacheIdentifier:isPreferredForCachedInstance:debugIdentifier:supplementaryOverlay:contentStatusBanner:)();
  uint64_t v229 = v85;
  unint64_t v95 = v226;
  sub_10024FA08();
  uint64_t v193 = (char *)v78;
  uint64_t v96 = v190;
  LODWORD(v88) = *((unsigned __int8 *)v95 + v78[12]);
  sub_1001A49D4();
  BOOL v97 = v88 == 1;
  uint64_t v98 = 1;
  if (v97)
  {
    sub_1000F3620();
    uint64_t v98 = 0;
  }
  uint64_t v99 = type metadata accessor for ColorScheme();
  _s7Weather24LocationCompositionStateOwst_0(v96, v98, 1, v99);
  uint64_t v100 = v194;
  uint64_t v101 = v188;
  sub_10006DF38(v96, v188 + *(int *)(v194 + 36), (uint64_t *)&unk_100EAA640);
  uint64_t v102 = v186;
  uint64_t v103 = v187;
  sub_100162808();
  v104();
  sub_100178110(v96, (uint64_t *)&unk_100EAA640);
  (*(void (**)(uint64_t, uint64_t))(v102 + 8))(v93, v103);
  sub_100162808();
  uint64_t v106 = v105();
  __chkstk_darwin(v106);
  uint64_t v107 = v229;
  unint64_t v108 = sub_100A7352C();
  View.buttons(_:buttons:)();
  sub_100162F0C();
  v109();
  sub_100178110(v101, &qword_100EACC70);
  uint64_t v110 = *(void *)(v107 + v94[12]);
  if (v110)
  {
    uint64_t v111 = (long long *)v229;
    uint64_t v112 = *(void *)(v229 + 24);
    uint64_t v113 = type metadata accessor for InteractiveMapDelegate();
    uint64_t v114 = swift_allocObject();
    *(void *)(v114 + 40) = type metadata accessor for ObservableResolver();
    *(void *)(v114 + 48) = &protocol witness table for ObservableResolver;
    *(void *)(v114 + 16) = v110;
    *(void *)(v114 + 56) = v112;
    long long v191 = *v111;
    long long v192 = v111[2];
    long long v115 = v192;
    *(_OWORD *)(v114 + 64) = v191;
    *(_OWORD *)(v114 + 80) = v115;
    v233[3] = v113;
    v233[4] = sub_100A73D0C(&qword_100EACD40, (void (*)(uint64_t))type metadata accessor for InteractiveMapDelegate);
    v233[0] = v114;
    swift_retain();
    swift_retain();
    swift_unknownObjectRetain();
    swift_unknownObjectRetain();
    uint64_t v231 = v100;
    unint64_t v232 = v108;
    uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    uint64_t v117 = v196;
    View.delegate(_:)();
    sub_100162F0C();
    v118();
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v233);
    sub_10017DF08(&qword_100EACB90);
    uint64_t v119 = v214;
    State.wrappedValue.getter();
    v233[0] = v117;
    v233[1] = OpaqueTypeConformance2;
    swift_getOpaqueTypeConformance2();
    uint64_t v120 = v199;
    View.performanceTestConditions(_:)();
    sub_100178110(v119, &qword_100E6E1E0);
    sub_100162F0C();
    v121();
    uint64_t v122 = v226;
    sub_10024FA08();
    LOBYTE(OpaqueTypeConformance2) = *((unsigned char *)v122 + *((int *)v193 + 12));
    sub_100A73924((uint64_t)v122, (void (*)(void))type metadata accessor for InteractiveMapViewModel);
    if (OpaqueTypeConformance2) {
      char v123 = static Edge.Set.all.getter();
    }
    else {
      char v123 = Edge.Set.init(rawValue:)();
    }
    char v124 = v123;
    uint64_t v125 = static SafeAreaRegions.all.getter();
    uint64_t v126 = v202;
    uint64_t v127 = v201;
    uint64_t v128 = v203;
    sub_100162808();
    v129();
    uint64_t v130 = v127 + *(int *)(v200 + 36);
    *(void *)uint64_t v130 = v125;
    *(unsigned char *)(v130 + 8) = v124;
    (*(void (**)(uint64_t, uint64_t))(v126 + 8))(v120, v128);
    static AccessibilityChildBehavior.contain.getter();
    sub_100A735FC();
    uint64_t v131 = v205;
    View.accessibilityElement(children:)();
    sub_100162F0C();
    v132();
    sub_100178110(v127, &qword_100EACC90);
    uint64_t v133 = v229;
    uint64_t v134 = sub_10091FFB4();
    uint64_t v135 = v227;
    sub_10011EF28(v133, v227, (void (*)(void))type metadata accessor for InteractiveMapView);
    uint64_t v136 = swift_allocObject();
    sub_100A73158(v135, v136 + v228);
    uint64_t v137 = v207;
    uint64_t v138 = v209;
    uint64_t v139 = v208;
    sub_100162808();
    v140();
    uint64_t v141 = v204;
    *(void *)(v138 + *(int *)(v204 + 52)) = v134;
    uint64_t v142 = (uint64_t (**)(uint64_t))(v138 + *(int *)(v141 + 56));
    char *v142 = sub_100A73720;
    v142[1] = (uint64_t (*)(uint64_t))v136;
    (*(void (**)(uint64_t, uint64_t))(v137 + 8))(v131, v139);
    sub_10011EF28(v133, v135, (void (*)(void))type metadata accessor for InteractiveMapView);
    uint64_t v143 = swift_allocObject();
    uint64_t v144 = v228;
    sub_100A73158(v135, v143 + v228);
    uint64_t v145 = v211;
    sub_10006DF38(v138, v211, &qword_100EACCA0);
    uint64_t v146 = (uint64_t (**)())(v145 + *(int *)(v206 + 36));
    *uint64_t v146 = sub_100A7373C;
    v146[1] = (uint64_t (*)())v143;
    v146[2] = 0;
    v146[3] = 0;
    sub_100178110(v138, &qword_100EACCA0);
    uint64_t v226 = type metadata accessor for InteractiveMapView;
    sub_10011EF28(v133, v135, (void (*)(void))type metadata accessor for InteractiveMapView);
    uint64_t v147 = swift_allocObject();
    uint64_t v148 = v144;
    sub_100A73158(v135, v147 + v144);
    uint64_t v149 = v213;
    sub_10006DF38(v145, v213, &qword_100EACCA8);
    Swift::String v150 = (void *)(v149 + *(int *)(v210 + 36));
    *Swift::String v150 = 0;
    v150[1] = 0;
    v150[2] = sub_100A73758;
    v150[3] = v147;
    sub_100178110(v145, &qword_100EACCA8);
    uint64_t v224 = (int *)self;
    id v151 = [v224 defaultCenter];
    uint64_t v152 = v220;
    NSNotificationCenter.publisher(for:object:)();

    sub_10011EF28(v133, v135, (void (*)(void))type metadata accessor for InteractiveMapView);
    uint64_t v153 = swift_allocObject();
    sub_100A73158(v135, v153 + v148);
    uint64_t v154 = v217;
    sub_10006DF38(v149, v217, &qword_100EACCB0);
    uint64_t v155 = v212;
    uint64_t v156 = v154 + *(int *)(v212 + 52);
    uint64_t v157 = v221;
    uint64_t v158 = v133;
    uint64_t v219 = *(void (**)(uint64_t, uint64_t, uint64_t))(v221 + 16);
    uint64_t v159 = v222;
    v219(v156, v152, v222);
    uint64_t v160 = (uint64_t (**)(uint64_t))(v154 + *(int *)(v155 + 56));
    *uint64_t v160 = sub_100A737C8;
    v160[1] = (uint64_t (*)(uint64_t))v153;
    uint64_t v161 = *(void (**)(uint64_t))(v157 + 8);
    uint64_t v162 = sub_1001A35C0();
    v161(v162);
    sub_100178110(v149, &qword_100EACCB0);
    id v163 = [v224 defaultCenter];
    NSNotificationCenter.publisher(for:object:)();

    sub_10011EF28(v158, v135, (void (*)(void))v226);
    uint64_t v164 = swift_allocObject();
    sub_100A73158(v135, v164 + v228);
    uint64_t v165 = v216;
    sub_10006DF38(v154, v216, &qword_100EACCB8);
    uint64_t v166 = v215;
    v219(v165 + *(int *)(v215 + 52), v152, v159);
    uint64_t v167 = (uint64_t (**)())(v165 + *(int *)(v166 + 56));
    *uint64_t v167 = sub_100A73848;
    v167[1] = (uint64_t (*)())v164;
    uint64_t v168 = sub_1001A35C0();
    v161(v168);
    sub_100178110(v154, &qword_100EACCB8);
    return sub_10020E72C(v165, v223, &qword_100EACCC0);
  }
  else
  {
    type metadata accessor for ObservableResolver();
    sub_100A73D0C((unint64_t *)&qword_100E70FD0, (void (*)(uint64_t))&type metadata accessor for ObservableResolver);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t sub_100A6E22C@<X0>(uint64_t a1@<X8>)
{
  v12[1] = a1;
  uint64_t v2 = type metadata accessor for InteractiveMapView();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  __chkstk_darwin(v2 - 8);
  uint64_t v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10011EF28(v1, (uint64_t)v5, (void (*)(void))type metadata accessor for InteractiveMapView);
  type metadata accessor for MainActor();
  uint64_t v6 = static MainActor.shared.getter();
  unint64_t v7 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = v6;
  *(void *)(v8 + 24) = &protocol witness table for MainActor;
  sub_100A73158((uint64_t)v5, v8 + v7);
  sub_10011EF28(v1, (uint64_t)v5, (void (*)(void))type metadata accessor for InteractiveMapView);
  uint64_t v9 = static MainActor.shared.getter();
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = v9;
  *(void *)(v10 + 24) = &protocol witness table for MainActor;
  sub_100A73158((uint64_t)v5, v10 + v7);
  type metadata accessor for WeatherMapOverlayKind();
  return Binding.init(get:set:)();
}

uint64_t sub_100A6E3E8()
{
  uint64_t v1 = type metadata accessor for InteractiveMapView();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(void *)(v2 + 64);
  __chkstk_darwin(v1 - 8);
  uint64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10011EF28(v0, (uint64_t)v4, (void (*)(void))type metadata accessor for InteractiveMapView);
  type metadata accessor for MainActor();
  uint64_t v5 = static MainActor.shared.getter();
  unint64_t v6 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = v5;
  *(void *)(v7 + 24) = &protocol witness table for MainActor;
  sub_100A73158((uint64_t)v4, v7 + v6);
  sub_10011EF28(v0, (uint64_t)v4, (void (*)(void))type metadata accessor for InteractiveMapView);
  uint64_t v8 = static MainActor.shared.getter();
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = v8;
  *(void *)(v9 + 24) = &protocol witness table for MainActor;
  sub_100A73158((uint64_t)v4, v9 + v6);
  sub_10017DF08(&qword_100E65F18);
  Binding.init(get:set:)();
  return v11;
}

uint64_t sub_100A6E5AC(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v5 = a3[1];
  *a1 = *a3;
  a1[1] = v5;
  uint64_t v6 = a4 + *(int *)(type metadata accessor for WeatherData(0) + 24);
  uint64_t v7 = type metadata accessor for WeatherDataModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(a2, v6, v7);
  return swift_bridgeObjectRetain();
}

uint64_t sub_100A6E63C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_10017DF08(&qword_100EACCF0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10017DF08(&qword_100EACCE0);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for InteractiveMapViewModel();
  uint64_t v9 = v8 - 8;
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10024FA08();
  int v12 = v11[*(int *)(v9 + 40)];
  sub_100A73924((uint64_t)v11, (void (*)(void))type metadata accessor for InteractiveMapViewModel);
  if (v12 == 1)
  {
    sub_100A6E83C((uint64_t)v4);
    char v13 = static Edge.Set.all.getter();
    EdgeInsets.init(_all:)();
    uint64_t v15 = v14;
    uint64_t v17 = v16;
    uint64_t v19 = v18;
    uint64_t v21 = v20;
    sub_10006DF38((uint64_t)v4, (uint64_t)v7, &qword_100EACCF0);
    uint64_t v22 = &v7[*(int *)(v5 + 36)];
    *uint64_t v22 = v13;
    *((void *)v22 + 1) = v15;
    *((void *)v22 + 2) = v17;
    *((void *)v22 + 3) = v19;
    *((void *)v22 + 4) = v21;
    v22[40] = 0;
    sub_100178110((uint64_t)v4, &qword_100EACCF0);
    sub_10020E72C((uint64_t)v7, a1, &qword_100EACCE0);
    uint64_t v23 = 0;
  }
  else
  {
    uint64_t v23 = 1;
  }
  return _s7Weather24LocationCompositionStateOwst_0(a1, v23, 1, v5);
}

uint64_t sub_100A6E83C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for RoundedRectangle();
  __chkstk_darwin(v4);
  uint64_t v6 = &v27[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = type metadata accessor for InteractiveMapView();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  __chkstk_darwin(v7 - 8);
  sub_10011EF28(v2, (uint64_t)&v27[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)], (void (*)(void))type metadata accessor for InteractiveMapView);
  unint64_t v10 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = swift_allocObject();
  sub_100A73158((uint64_t)&v27[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)], v11 + v10);
  uint64_t v12 = sub_10017DF08(&qword_100E66BC8);
  v28[10] = sub_1008749EC;
  v28[11] = 0;
  LOBYTE(v28[12]) = 0;
  v28[0] = v12;
  if (qword_100E62290 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t result = sub_10006DF38((uint64_t)&xmmword_100F51398, (uint64_t)v32, &qword_100E6F2A0);
  if (*((void *)&v32[1] + 1))
  {
    sub_1001262E4(v32, (uint64_t)&v28[3]);
    v28[1] = sub_100A738C4;
    v28[2] = v11;
    uint64_t v14 = Dictionary.init(dictionaryLiteral:)();
    v28[8] = _swiftEmptyArrayStorage;
    v28[9] = v14;
    memcpy(v32, v28, 0x61uLL);
    static Alignment.center.getter();
    _FrameLayout.init(width:height:alignment:)();
    sub_10006DF38((uint64_t)v32, (uint64_t)v28, &qword_100E66B30);
    long long v29 = v35;
    long long v30 = v36;
    long long v31 = v37;
    sub_100178110((uint64_t)v32, &qword_100E66B30);
    id v15 = [self secondarySystemBackgroundColor];
    uint64_t v16 = Color.init(uiColor:)();
    char v17 = static Edge.Set.all.getter();
    sub_10006DF38((uint64_t)v28, (uint64_t)v32, &qword_100EACD10);
    uint64_t v33 = v16;
    char v34 = v17;
    sub_100178110((uint64_t)v28, &qword_100EACD10);
    uint64_t v18 = (char *)v6 + *(int *)(v4 + 20);
    uint64_t v19 = enum case for RoundedCornerStyle.continuous(_:);
    uint64_t v20 = type metadata accessor for RoundedCornerStyle();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v20 - 8) + 104))(v18, v19, v20);
    __asm { FMOV            V0.2D, #16.0 }
    *uint64_t v6 = _Q0;
    uint64_t v26 = a1 + *(int *)(sub_10017DF08(&qword_100EACCF0) + 36);
    sub_10011EF28((uint64_t)v6, v26, (void (*)(void))&type metadata accessor for RoundedRectangle);
    *(_WORD *)(v26 + *(int *)(sub_10017DF08(&qword_100E744A8) + 36)) = 256;
    sub_10006DF38((uint64_t)v32, a1, &qword_100EACD00);
    sub_100A73924((uint64_t)v6, (void (*)(void))&type metadata accessor for RoundedRectangle);
    return sub_100178110((uint64_t)v32, &qword_100EACD00);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100A6EC2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_10017DF08(&qword_100E63A10);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for InteractiveMapViewModel();
  uint64_t v8 = v7 - 8;
  __chkstk_darwin(v7);
  unint64_t v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10024FA08();
  sub_10006DF38((uint64_t)&v10[*(int *)(v8 + 88)], (uint64_t)v6, &qword_100E63A10);
  sub_100A73924((uint64_t)v10, (void (*)(void))type metadata accessor for InteractiveMapViewModel);
  uint64_t v11 = a1 + *(int *)(type metadata accessor for InteractiveMapView() + 36);
  uint64_t v12 = type metadata accessor for MapContentStatusBanner();
  sub_1001E9994(v11, a2 + *(int *)(v12 + 20));
  sub_10020E72C((uint64_t)v6, a2, &qword_100E63A10);
  char v13 = (uint64_t *)(a2 + *(int *)(v12 + 24));
  *char v13 = swift_getKeyPath();
  sub_10017DF08(&qword_100E63BD0);
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_100A6EDAC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ButtonGroup.Alignment();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for ButtonGroup();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for InteractiveMapViewModel();
  uint64_t v11 = v10 - 8;
  __chkstk_darwin(v10);
  char v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10024FA08();
  char v14 = v13[*(int *)(v11 + 40)];
  sub_100A73924((uint64_t)v13, (void (*)(void))type metadata accessor for InteractiveMapViewModel);
  if (v14)
  {
    uint64_t v15 = static ButtonGroupsBuilder.buildOptional(_:)();
  }
  else
  {
    uint64_t v16 = enum case for ButtonGroup.Alignment.trailing(_:);
    char v17 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 104);
    uint64_t v18 = v17(v5, enum case for ButtonGroup.Alignment.trailing(_:), v2);
    __chkstk_darwin(v18);
    *(&v26 - 2) = a1;
    ButtonGroup.init(alignment:buttons:)();
    uint64_t v19 = static ButtonGroupsBuilder.buildExpression(_:)();
    uint64_t v20 = *(void (**)(char *, uint64_t))(v7 + 8);
    v20(v9, v6);
    v17(v5, v16, v2);
    ButtonGroup.init(alignment:buttons:)();
    uint64_t v21 = static ButtonGroupsBuilder.buildExpression(_:)();
    v20(v9, v6);
    sub_10017DF08(&qword_100E744B0);
    uint64_t v22 = swift_allocObject();
    *(_OWORD *)(v22 + 16) = xmmword_100C25ED0;
    *(void *)(v22 + 32) = v19;
    *(void *)(v22 + 40) = v21;
    static ButtonGroupsBuilder.buildBlock(_:)();
    swift_bridgeObjectRelease();
    uint64_t v15 = static ButtonGroupsBuilder.buildOptional(_:)();
    swift_bridgeObjectRelease();
  }
  sub_10017DF08(&qword_100E744B0);
  uint64_t v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = xmmword_100C251B0;
  *(void *)(v23 + 32) = v15;
  uint64_t v24 = static ButtonGroupsBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v24;
}

uint64_t sub_100A6F0F0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for InteractiveMapView();
  uint64_t v24 = *(void *)(v2 - 8);
  uint64_t v3 = *(void *)(v24 + 64);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = type metadata accessor for InteractiveMapViewModel();
  uint64_t v5 = v4 - 8;
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for ButtonGroup.Button();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = a1;
  sub_10024FA08();
  sub_100A73924((uint64_t)v7, (void (*)(void))type metadata accessor for InteractiveMapViewModel);
  sub_10011EF28(a1, (uint64_t)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), (void (*)(void))type metadata accessor for InteractiveMapView);
  unint64_t v12 = (*(unsigned __int8 *)(v24 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
  uint64_t v13 = swift_allocObject() + v12;
  uint64_t v14 = v8;
  sub_100A73158((uint64_t)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), v13);
  static ButtonGroup.Button.currentLocation(isPermissionGranted:openSettings:)();
  swift_release();
  uint64_t v15 = static ButtonsBuilder.buildExpression(_:)();
  uint64_t v16 = *(void (**)(char *, uint64_t))(v9 + 8);
  v16(v11, v8);
  sub_10024FA08();
  LODWORD(v8) = v7[*(int *)(v5 + 52)];
  sub_100A73924((uint64_t)v7, (void (*)(void))type metadata accessor for InteractiveMapViewModel);
  if (v8 == 1)
  {
    static ButtonGroup.Button.locationPicker.getter();
    uint64_t v17 = static ButtonsBuilder.buildExpression(_:)();
    v16(v11, v14);
    sub_10017DF08(&qword_100E744B8);
    uint64_t v18 = swift_allocObject();
    *(_OWORD *)(v18 + 16) = xmmword_100C251B0;
    *(void *)(v18 + 32) = v17;
    static ButtonsBuilder.buildBlock(_:)();
    swift_bridgeObjectRelease();
    uint64_t v19 = static ButtonsBuilder.buildOptional(_:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v19 = static ButtonsBuilder.buildOptional(_:)();
  }
  sub_10017DF08(&qword_100E744B8);
  uint64_t v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_100C25ED0;
  *(void *)(v20 + 32) = v15;
  *(void *)(v20 + 40) = v19;
  uint64_t v21 = static ButtonsBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v21;
}

uint64_t sub_100A6F43C()
{
  uint64_t v0 = type metadata accessor for ButtonGroup.Button();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  static ButtonGroup.Button.overlayMenu.getter();
  uint64_t v4 = static ButtonsBuilder.buildExpression(_:)();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  sub_10017DF08(&qword_100E744B8);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_100C251B0;
  *(void *)(v5 + 32) = v4;
  uint64_t v6 = static ButtonsBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_100A6F548(uint64_t a1)
{
  uint64_t v2 = sub_10017DF08(&qword_100E6E1E0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v9 - v6;
  sub_10006DF38(a1, (uint64_t)&v9 - v6, &qword_100E6E1E0);
  type metadata accessor for InteractiveMapView();
  sub_10006DF38((uint64_t)v7, (uint64_t)v4, &qword_100E6E1E0);
  sub_10017DF08(&qword_100EACB90);
  State.wrappedValue.setter();
  return sub_100178110((uint64_t)v7, &qword_100E6E1E0);
}

uint64_t sub_100A6F640()
{
  uint64_t v0 = type metadata accessor for WeatherMapTrackingState(0);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)&v13 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v13 - v4;
  uint64_t v6 = type metadata accessor for InteractiveMapViewModel();
  uint64_t v7 = v6 - 8;
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10024FA08();
  sub_10011EF28((uint64_t)&v9[*(int *)(v7 + 84)], (uint64_t)v5, (void (*)(void))type metadata accessor for WeatherMapTrackingState);
  sub_100A73924((uint64_t)v9, (void (*)(void))type metadata accessor for InteractiveMapViewModel);
  uint64_t v10 = sub_10017DF08(&qword_100E66460);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v2, 1, 3, v10);
  char v11 = sub_10011EBBC();
  sub_100A73924((uint64_t)v2, (void (*)(void))type metadata accessor for WeatherMapTrackingState);
  uint64_t result = sub_100A73924((uint64_t)v5, (void (*)(void))type metadata accessor for WeatherMapTrackingState);
  if (v11) {
    return sub_100BA4EEC();
  }
  return result;
}

uint64_t sub_100A6F7D4()
{
  uint64_t v0 = type metadata accessor for WeatherMapTrackingState(0);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)&v14 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for InteractiveMapViewModel();
  uint64_t v4 = v3 - 8;
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for WeatherMapOverlayKind();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10024FA08();
  sub_10011EF28((uint64_t)&v6[*(int *)(v4 + 84)], (uint64_t)v2, (void (*)(void))type metadata accessor for WeatherMapTrackingState);
  sub_100A73924((uint64_t)v6, (void (*)(void))type metadata accessor for InteractiveMapViewModel);
  uint64_t v11 = sub_10017DF08(&qword_100E66460);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v2, 3, v11)) {
    return sub_100A73924((uint64_t)v2, (void (*)(void))type metadata accessor for WeatherMapTrackingState);
  }
  char v13 = *v2;
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, &v2[*(int *)(v11 + 48)], v7);
  sub_100BA5080(v13);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_100A6F9F4()
{
  uint64_t v0 = type metadata accessor for WeatherMapOverlayKind();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for InteractiveMapViewModel();
  uint64_t v5 = v4 - 8;
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v12 - v9;
  sub_10024FA08();
  LOBYTE(v5) = v10[*(int *)(v5 + 56)];
  sub_100A73924((uint64_t)v10, (void (*)(void))type metadata accessor for InteractiveMapViewModel);
  sub_10024FA08();
  (*(void (**)(char *, char *, uint64_t))(v1 + 16))(v3, v7, v0);
  sub_100A73924((uint64_t)v7, (void (*)(void))type metadata accessor for InteractiveMapViewModel);
  sub_100BA5080(v5);
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_100A6FBAC@<X0>(void *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for InteractiveMapViewModel();
  uint64_t v3 = v2 - 8;
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10024FA08();
  uint64_t v6 = &v5[*(int *)(v3 + 32)];
  uint64_t v8 = *(void *)v6;
  uint64_t v7 = *((void *)v6 + 1);
  swift_bridgeObjectRetain();
  uint64_t result = sub_100A73924((uint64_t)v5, (void (*)(void))type metadata accessor for InteractiveMapViewModel);
  *a1 = v8;
  a1[1] = v7;
  return result;
}

uint64_t sub_100A6FC6C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = type metadata accessor for InteractiveMapViewModel();
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)v42 - v10;
  uint64_t v12 = sub_10017DF08(&qword_100E639E8);
  __chkstk_darwin(v12 - 8);
  uint64_t v48 = (char *)v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for Location();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)v42 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v20 = (char *)v42 - v19;
  uint64_t v21 = a1[1];
  uint64_t v49 = *a1;
  uint64_t v50 = v21;
  sub_10024FA08();
  uint64_t v22 = *(void *)&v11[*(int *)(v6 + 20)];
  swift_bridgeObjectRetain();
  sub_100A73924((uint64_t)v11, (void (*)(void))type metadata accessor for InteractiveMapViewModel);
  uint64_t v23 = *(void *)(v22 + 16);
  if (!v23)
  {
    uint64_t v34 = 1;
LABEL_14:
    uint64_t v35 = (uint64_t)v48;
    goto LABEL_17;
  }
  uint64_t v43 = v20;
  uint64_t v44 = v6;
  uint64_t v45 = v8;
  uint64_t v46 = v15;
  uint64_t v47 = a4;
  uint64_t v26 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 16);
  uint64_t v24 = v15 + 16;
  uint64_t v25 = v26;
  uint64_t v27 = v22 + ((*(unsigned __int8 *)(v24 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 64));
  uint64_t v28 = *(void *)(v24 + 56);
  v42[1] = v22;
  swift_bridgeObjectRetain();
  uint64_t v29 = v14;
  while (1)
  {
    v25(v17, v27, v14);
    uint64_t v30 = Location.id.getter();
    if (!v50)
    {
      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
    if (v30 == v49 && v50 == v31) {
      break;
    }
    char v33 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v33)
    {
      uint64_t v14 = v29;
      goto LABEL_16;
    }
LABEL_11:
    uint64_t v14 = v29;
    (*(void (**)(char *, uint64_t))(v24 - 8))(v17, v29);
    v27 += v28;
    if (!--v23)
    {
      swift_bridgeObjectRelease();
      uint64_t v34 = 1;
      uint64_t v15 = v46;
      uint64_t v6 = v44;
      uint64_t v8 = v45;
      uint64_t v20 = v43;
      goto LABEL_14;
    }
  }
  swift_bridgeObjectRelease();
LABEL_16:
  swift_bridgeObjectRelease();
  uint64_t v15 = v46;
  uint64_t v35 = (uint64_t)v48;
  (*(void (**)(char *, char *, uint64_t))(v46 + 32))(v48, v17, v14);
  uint64_t v34 = 0;
  uint64_t v6 = v44;
  uint64_t v8 = v45;
  uint64_t v20 = v43;
LABEL_17:
  _s7Weather24LocationCompositionStateOwst_0(v35, v34, 1, v14);
  swift_bridgeObjectRelease();
  if (_s7Weather24LocationCompositionStateOwet_0(v35, 1, v14) == 1) {
    return sub_100178110(v35, &qword_100E639E8);
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 32))(v20, v35, v14);
  sub_10024FA08();
  long long v37 = &v8[*(int *)(v6 + 24)];
  uint64_t v39 = *(void *)v37;
  uint64_t v38 = *((void *)v37 + 1);
  swift_bridgeObjectRetain();
  sub_100A73924((uint64_t)v8, (void (*)(void))type metadata accessor for InteractiveMapViewModel);
  if (!v50)
  {
    swift_bridgeObjectRelease();
    goto LABEL_27;
  }
  if (v49 == v39 && v50 == v38)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v41 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v41) {
      return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v20, v14);
    }
LABEL_27:
    sub_100BA4850((uint64_t)v20);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v20, v14);
}

uint64_t sub_100A700B8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for InteractiveMapViewModel();
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10024FA08();
  uint64_t v5 = type metadata accessor for WeatherMapOverlayKind();
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v5 - 8) + 16))(a1, v4, v5);
  return sub_100A73924((uint64_t)v4, (void (*)(void))type metadata accessor for InteractiveMapViewModel);
}

uint64_t sub_100A70190(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for WeatherMapOverlayKind();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for InteractiveMapViewModel();
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10024FA08();
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v5, v8, v2);
  sub_100A73924((uint64_t)v8, (void (*)(void))type metadata accessor for InteractiveMapViewModel);
  sub_100A73D0C(&qword_100EACD50, (void (*)(uint64_t))&type metadata accessor for WeatherMapOverlayKind);
  char v9 = dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  if ((v9 & 1) == 0) {
    return sub_100BA4C90(a1);
  }
  return result;
}

uint64_t sub_100A7034C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = self;
  id v3 = [v2 mainBundle];
  v20._countAndFlagsBits = 0xD000000000000054;
  v20._object = (void *)0x8000000100CB5190;
  v4._object = (void *)0x8000000100CB5170;
  v4._countAndFlagsBits = 0xD000000000000013;
  v5._countAndFlagsBits = 0;
  v5._object = (void *)0xE000000000000000;
  Swift::String v6 = NSLocalizedString(_:tableName:bundle:value:comment:)(v4, (Swift::String_optional)0, (NSBundle)v3, v5, v20);

  id v7 = [v2 mainBundle];
  v21._countAndFlagsBits = 0xD000000000000036;
  v21._object = (void *)0x8000000100CB7820;
  v8._object = (void *)0x8000000100CB77B0;
  v8._countAndFlagsBits = 0x100000000000006ALL;
  v9._countAndFlagsBits = 0;
  v9._object = (void *)0xE000000000000000;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v8, (Swift::String_optional)0, (NSBundle)v7, v9, v21);

  uint64_t v10 = static String.localizedStringWithFormat(_:_:)();
  uint64_t v12 = v11;
  swift_bridgeObjectRelease();
  uint64_t v13 = sub_100881B40();
  uint64_t v15 = v14;
  static Color.blue.getter();
  uint64_t v16 = Color.hex.getter();
  uint64_t v18 = v17;
  uint64_t result = swift_release();
  *(unsigned char *)a1 = 1;
  *(void *)(a1 + 8) = 0x616C732E69666977;
  *(void *)(a1 + 16) = 0xEA00000000006873;
  *(Swift::String *)(a1 + 24) = v6;
  *(void *)(a1 + 40) = v10;
  *(void *)(a1 + 48) = v12;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = v13;
  *(void *)(a1 + 72) = v15;
  *(void *)(a1 + 80) = v16;
  *(void *)(a1 + 88) = v18;
  return result;
}

void *sub_100A70508@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v3 = sub_1001B1E64(a1, a1[3]);
  sub_100A7034C((uint64_t)v5);
  sub_1001E9994(*v3 + 16, a2);
  return memcpy((void *)(a2 + 40), v5, 0x60uLL);
}

uint64_t sub_100A70574()
{
  uint64_t v1 = v0 + 2;
  sub_1001B1E64(v0 + 2, v0[5]);
  sub_10017DF08(&qword_100E870B0);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v28)
  {
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v3 = v0[7];
  uint64_t v4 = v0[8];
  uint64_t v5 = v0[9];
  sub_1001B1E64(v1, v0[5]);
  sub_10017DF08(&qword_100E75340);
  swift_retain();
  swift_unknownObjectRetain();
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:name:)();
  uint64_t v6 = v24;
  if (!v24)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  uint64_t v7 = v26;
  sub_1001B1E64(v1, v0[5]);
  sub_10017DF08(&qword_100E75338);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v22)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  sub_1001B1E64(v1, v0[5]);
  sub_10017DF08(&qword_100E75348);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v19)
  {
    uint64_t v8 = type metadata accessor for LocationRowPreviewViewController(0);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v10 = sub_1000DF0C4((uint64_t)v27, v28);
    __n128 v11 = __chkstk_darwin(v10);
    uint64_t v13 = (char *)v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, __n128))(v14 + 16))(v13, v11);
    uint64_t v15 = type metadata accessor for LocationRowViewModelProvider();
    sub_10072F710((uint64_t)v13, v3, v4, v5, v6, (uint64_t)v21, (uint64_t)v18, v8, v15, ObjectType, (uint64_t)&off_100E1FB00, v7, v18[0], v18[1], v18[2], v19, v20, v21[0], v21[1],
      v21[2],
      v22,
      v23,
      v24,
      v25);
    uint64_t v17 = v16;
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v27);
    sub_100A73D0C(&qword_100E91E78, (void (*)(uint64_t))type metadata accessor for LocationRowPreviewViewController);
    return v17;
  }
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_100A7083C()
{
  sub_1001B1E64((void *)(v0 + 16), *(void *)(v0 + 40));
  sub_10017DF08(&qword_100E7C100);
  dispatch thunk of ResolverType.resolve<A>(_:)();
  uint64_t result = v2;
  if (!v2) {
    __break(1u);
  }
  return result;
}

uint64_t sub_100A708AC(uint64_t a1)
{
  return sub_100A664E8(a1) & 1;
}

uint64_t sub_100A708D4()
{
  return sub_100A66A60() & 1;
}

uint64_t sub_100A708FC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Location();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for WeatherMap.LocationAction();
  uint64_t v7 = *(void *)(v6 - 8);
  __n128 v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v7 + 16))(v10, a1, v6, v8);
  int v11 = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v10, v6);
  if (v11 == enum case for WeatherMap.LocationAction.addLocation(_:))
  {
    (*(void (**)(char *, uint64_t))(v7 + 96))(v10, v6);
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v10, v2);
    char v12 = sub_100A66F00((uint64_t)v5);
    sub_100BA463C((uint64_t)v5, v12 & 1);
    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  if (v11 == enum case for WeatherMap.LocationAction.viewLocation(_:))
  {
    (*(void (**)(char *, uint64_t))(v7 + 96))(v10, v6);
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v10, v2);
    sub_100BA486C((uint64_t)v5);
    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  if (v11 == enum case for WeatherMap.LocationAction.openLocationInMaps(_:))
  {
    (*(void (**)(char *, uint64_t))(v7 + 96))(v10, v6);
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v10, v2);
    sub_100BA49EC((uint64_t)v5);
    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  if (v11 == enum case for WeatherMap.LocationAction.none(_:)) {
    return sub_100BA4534();
  }
  if (v11 == enum case for WeatherMap.LocationAction.dismiss(_:)) {
    return sub_100BA4E04();
  }
  sub_10017DF08(&qword_100E81B10);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_100C251B0;
  *(void *)(v14 + 56) = &type metadata for String;
  strcpy((char *)(v14 + 32), "Unknown action");
  *(unsigned char *)(v14 + 47) = -18;
  print(_:separator:terminator:)();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
}

uint64_t sub_100A70C70(char *a1)
{
  uint64_t v2 = type metadata accessor for WeatherMapTrackingState(0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for InteractiveMapViewModel();
  uint64_t v6 = v5 - 8;
  __chkstk_darwin(v5);
  __n128 v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  int v11 = (char *)&v16 - v10;
  sub_10024FA08();
  sub_10011EF28((uint64_t)&v11[*(int *)(v6 + 84)], (uint64_t)v4, (void (*)(void))type metadata accessor for WeatherMapTrackingState);
  sub_100A73924((uint64_t)v11, (void (*)(void))type metadata accessor for InteractiveMapViewModel);
  sub_10024FA08();
  char v12 = (uint64_t *)&v8[*(int *)(v6 + 32)];
  uint64_t v13 = *v12;
  uint64_t v14 = v12[1];
  swift_bridgeObjectRetain();
  sub_100A73924((uint64_t)v8, (void (*)(void))type metadata accessor for InteractiveMapViewModel);
  sub_100BA52E8(a1, (uint64_t)v4, v13, v14);
  swift_bridgeObjectRelease();
  return sub_100A73924((uint64_t)v4, (void (*)(void))type metadata accessor for WeatherMapTrackingState);
}

BOOL sub_100A70E0C(void *a1, void *a2)
{
  return a1[8] == a2[8] && a1[7] == a2[7] && a1[10] == a2[10];
}

uint64_t sub_100A70E48()
{
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 16);
  swift_release();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return v0;
}

uint64_t sub_100A70E80()
{
  sub_100A70E48();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for InteractiveMapDelegate()
{
  return self;
}

uint64_t sub_100A70ED4()
{
  return sub_100A70574();
}

uint64_t sub_100A70EF8()
{
  return sub_100A7083C();
}

uint64_t sub_100A70F1C(uint64_t a1)
{
  return sub_100A708AC(a1) & 1;
}

uint64_t sub_100A70F44()
{
  return sub_100A708D4() & 1;
}

uint64_t sub_100A70F6C(uint64_t a1)
{
  return sub_100A708FC(a1);
}

uint64_t sub_100A70F90(char *a1)
{
  return sub_100A70C70(a1);
}

BOOL sub_100A70FB4(void **a1, void **a2)
{
  return sub_100A70E0C(*a1, *a2);
}

uint64_t sub_100A70FC0()
{
  return sub_100A73D0C(&qword_100EACB88, (void (*)(uint64_t))type metadata accessor for InteractiveMapDelegate);
}

uint64_t type metadata accessor for InteractiveMapView()
{
  uint64_t result = qword_100EACBF0;
  if (!qword_100EACBF0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100A71070(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v5 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    *(void *)a1 = v5;
    uint64_t v3 = v5 + ((v4 + 16) & ~(unint64_t)v4);
    swift_retain();
  }
  else
  {
    uint64_t v8 = a2[1];
    uint64_t v9 = a2[2];
    *(void *)a1 = v5;
    *(void *)(a1 + 8) = v8;
    uint64_t v10 = a2[3];
    *(void *)(a1 + 16) = v9;
    *(void *)(a1 + 24) = v10;
    long long v58 = *((_OWORD *)a2 + 3);
    uint64_t v11 = a3[8];
    uint64_t v12 = a1 + v11;
    uint64_t v13 = (uint64_t)a2 + v11;
    *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
    *(_OWORD *)(a1 + 48) = v58;
    uint64_t v14 = type metadata accessor for WeatherMapDisplayMode();
    uint64_t v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16);
    swift_unknownObjectRetain();
    swift_retain();
    swift_unknownObjectRetain();
    swift_unknownObjectRetain();
    v15(v12, v13, v14);
    uint64_t v16 = a3[9];
    long long v17 = *(_OWORD *)((char *)a2 + v16 + 24);
    *(_OWORD *)(v3 + v16 + 24) = v17;
    (**(void (***)(void))(v17 - 8))();
    uint64_t v18 = a3[10];
    uint64_t v19 = a3[11];
    uint64_t v20 = (void *)(v3 + v18);
    Swift::String v21 = (uint64_t *)((char *)a2 + v18);
    uint64_t v22 = v21[1];
    *uint64_t v20 = *v21;
    v20[1] = v22;
    uint64_t v23 = (char *)(v3 + v19);
    uint64_t v24 = (char *)a2 + v19;
    uint64_t v25 = type metadata accessor for WeatherMapPerformanceTestConditions();
    swift_bridgeObjectRetain();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v24, 1, v25))
    {
      uint64_t v26 = sub_10017DF08(&qword_100E6E1E0);
      memcpy(v23, v24, *(void *)(*(void *)(v26 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 16))(v23, v24, v25);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v23, 0, 1, v25);
    }
    uint64_t v27 = sub_10017DF08(&qword_100EACB90);
    *(void *)&v23[*(int *)(v27 + 28)] = *(void *)&v24[*(int *)(v27 + 28)];
    uint64_t v28 = a3[12];
    uint64_t v29 = a3[13];
    uint64_t v30 = (void *)(v3 + v28);
    uint64_t v31 = (uint64_t *)((char *)a2 + v28);
    uint64_t v33 = *v31;
    uint64_t v32 = v31[1];
    *uint64_t v30 = v33;
    v30[1] = v32;
    uint64_t v34 = v3 + v29;
    uint64_t v35 = (uint64_t)a2 + v29;
    swift_retain();
    swift_retain();
    sub_10017DF08(&qword_100E63BD0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(_OWORD *)uint64_t v34 = *(_OWORD *)v35;
      *(unsigned char *)(v34 + 16) = *(unsigned char *)(v35 + 16);
      *(unsigned char *)(v34 + 17) = *(unsigned char *)(v35 + 17);
      *(unsigned char *)(v34 + 18) = *(unsigned char *)(v35 + 18);
      uint64_t v36 = *(int *)(type metadata accessor for DisplayMetrics() + 36);
      uint64_t v37 = v34 + v36;
      uint64_t v38 = v35 + v36;
      uint64_t v39 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 16))(v37, v38, v39);
    }
    else
    {
      *(void *)uint64_t v34 = *(void *)v35;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v40 = a3[14];
    char v41 = (void *)(v3 + v40);
    uint64_t v42 = (uint64_t *)((char *)a2 + v40);
    sub_10017DF08((uint64_t *)&unk_100EAA560);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v43 = type metadata accessor for UserInterfaceSizeClass();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v42, 1, v43))
      {
        uint64_t v44 = sub_10017DF08(&qword_100E65ED8);
        memcpy(v41, v42, *(void *)(*(void *)(v44 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v43 - 8) + 16))(v41, v42, v43);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v41, 0, 1, v43);
      }
    }
    else
    {
      *char v41 = *v42;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v45 = a3[15];
    uint64_t v46 = v3 + v45;
    uint64_t v47 = (uint64_t)a2 + v45;
    uint64_t v48 = *(void *)v47;
    uint64_t v49 = *(void *)(v47 + 8);
    uint64_t v50 = *(void *)(v47 + 16);
    uint64_t v51 = *(void *)(v47 + 24);
    char v52 = *(unsigned char *)(v47 + 32);
    sub_100190CD4(*(void *)v47, v49, v50, v51, v52);
    *(void *)uint64_t v46 = v48;
    *(void *)(v46 + 8) = v49;
    *(void *)(v46 + 16) = v50;
    *(void *)(v46 + 24) = v51;
    *(unsigned char *)(v46 + 32) = v52;
    uint64_t v53 = a3[17];
    *(void *)(v3 + a3[16]) = *(uint64_t *)((char *)a2 + a3[16]);
    uint64_t v54 = (void *)(v3 + v53);
    uint64_t v55 = (uint64_t *)((char *)a2 + v53);
    sub_10017DF08(&qword_100E74A68);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v56 = type metadata accessor for ColorScheme();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v56 - 8) + 16))(v54, v55, v56);
    }
    else
    {
      *uint64_t v54 = *v55;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return v3;
}

uint64_t sub_100A71580(uint64_t a1, int *a2)
{
  swift_unknownObjectRelease();
  swift_release();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  uint64_t v4 = a1 + a2[8];
  uint64_t v5 = type metadata accessor for WeatherMapDisplayMode();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1 + a2[9]);
  swift_bridgeObjectRelease();
  uint64_t v6 = a1 + a2[11];
  uint64_t v7 = type metadata accessor for WeatherMapPerformanceTestConditions();
  if (!_s7Weather24LocationCompositionStateOwet_0(v6, 1, v7)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  }
  sub_10017DF08(&qword_100EACB90);
  swift_release();
  swift_release();
  uint64_t v8 = a1 + a2[13];
  sub_10017DF08(&qword_100E63BD0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v9 = v8 + *(int *)(type metadata accessor for DisplayMetrics() + 36);
    uint64_t v10 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  }
  else
  {
    swift_release();
  }
  uint64_t v11 = a1 + a2[14];
  sub_10017DF08((uint64_t *)&unk_100EAA560);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v12 = type metadata accessor for UserInterfaceSizeClass();
    if (!_s7Weather24LocationCompositionStateOwet_0(v11, 1, v12)) {
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
    }
  }
  else
  {
    swift_release();
  }
  uint64_t v13 = a1 + a2[15];
  sub_100191934(*(void *)v13, *(void *)(v13 + 8), *(void *)(v13 + 16), *(void *)(v13 + 24), *(unsigned char *)(v13 + 32));
  uint64_t v14 = a1 + a2[17];
  sub_10017DF08(&qword_100E74A68);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v15 = type metadata accessor for ColorScheme();
    uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8);
    return v16(v14, v15);
  }
  else
  {
    return swift_release();
  }
}

uint64_t sub_100A7184C(uint64_t a1, uint64_t a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v6;
  long long v7 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v7;
  uint64_t v8 = a3[8];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = type metadata accessor for WeatherMapDisplayMode();
  uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16);
  swift_unknownObjectRetain();
  swift_retain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  v12(v9, v10, v11);
  uint64_t v13 = a3[9];
  long long v14 = *(_OWORD *)(a2 + v13 + 24);
  *(_OWORD *)(a1 + v13 + 24) = v14;
  (**(void (***)(void))(v14 - 8))();
  uint64_t v15 = a3[10];
  uint64_t v16 = a3[11];
  long long v17 = (void *)(a1 + v15);
  uint64_t v18 = (void *)(a2 + v15);
  uint64_t v19 = v18[1];
  *long long v17 = *v18;
  v17[1] = v19;
  uint64_t v20 = (char *)(a1 + v16);
  Swift::String v21 = (char *)(a2 + v16);
  uint64_t v22 = type metadata accessor for WeatherMapPerformanceTestConditions();
  swift_bridgeObjectRetain();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v21, 1, v22))
  {
    uint64_t v23 = sub_10017DF08(&qword_100E6E1E0);
    memcpy(v20, v21, *(void *)(*(void *)(v23 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v20, 0, 1, v22);
  }
  uint64_t v24 = sub_10017DF08(&qword_100EACB90);
  *(void *)&v20[*(int *)(v24 + 28)] = *(void *)&v21[*(int *)(v24 + 28)];
  uint64_t v25 = a3[12];
  uint64_t v26 = a3[13];
  uint64_t v27 = (void *)(a1 + v25);
  uint64_t v28 = (uint64_t *)(a2 + v25);
  uint64_t v30 = *v28;
  uint64_t v29 = v28[1];
  *uint64_t v27 = v30;
  v27[1] = v29;
  uint64_t v31 = a1 + v26;
  uint64_t v32 = a2 + v26;
  swift_retain();
  swift_retain();
  sub_10017DF08(&qword_100E63BD0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *(_OWORD *)uint64_t v31 = *(_OWORD *)v32;
    *(unsigned char *)(v31 + 16) = *(unsigned char *)(v32 + 16);
    *(unsigned char *)(v31 + 17) = *(unsigned char *)(v32 + 17);
    *(unsigned char *)(v31 + 18) = *(unsigned char *)(v32 + 18);
    uint64_t v33 = *(int *)(type metadata accessor for DisplayMetrics() + 36);
    uint64_t v34 = v31 + v33;
    uint64_t v35 = v32 + v33;
    uint64_t v36 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 16))(v34, v35, v36);
  }
  else
  {
    *(void *)uint64_t v31 = *(void *)v32;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v37 = a3[14];
  uint64_t v38 = (void *)(a1 + v37);
  uint64_t v39 = (void *)(a2 + v37);
  sub_10017DF08((uint64_t *)&unk_100EAA560);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v40 = type metadata accessor for UserInterfaceSizeClass();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v39, 1, v40))
    {
      uint64_t v41 = sub_10017DF08(&qword_100E65ED8);
      memcpy(v38, v39, *(void *)(*(void *)(v41 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v40 - 8) + 16))(v38, v39, v40);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v38, 0, 1, v40);
    }
  }
  else
  {
    *uint64_t v38 = *v39;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v42 = a3[15];
  uint64_t v43 = a1 + v42;
  uint64_t v44 = a2 + v42;
  uint64_t v45 = *(void *)v44;
  uint64_t v46 = *(void *)(v44 + 8);
  uint64_t v47 = *(void *)(v44 + 16);
  uint64_t v48 = *(void *)(v44 + 24);
  char v49 = *(unsigned char *)(v44 + 32);
  sub_100190CD4(*(void *)v44, v46, v47, v48, v49);
  *(void *)uint64_t v43 = v45;
  *(void *)(v43 + 8) = v46;
  *(void *)(v43 + 16) = v47;
  *(void *)(v43 + 24) = v48;
  *(unsigned char *)(v43 + 32) = v49;
  uint64_t v50 = a3[17];
  *(void *)(a1 + a3[16]) = *(void *)(a2 + a3[16]);
  uint64_t v51 = (void *)(a1 + v50);
  char v52 = (void *)(a2 + v50);
  sub_10017DF08(&qword_100E74A68);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v53 = type metadata accessor for ColorScheme();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v53 - 8) + 16))(v51, v52, v53);
  }
  else
  {
    *uint64_t v51 = *v52;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *sub_100A71D0C(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[1] = v6;
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_retain();
  swift_release();
  uint64_t v7 = a2[5];
  a1[4] = a2[4];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[5] = v7;
  uint64_t v8 = a2[7];
  a1[6] = a2[6];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[7] = v8;
  uint64_t v9 = a3[8];
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = type metadata accessor for WeatherMapDisplayMode();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 24))(v10, v11, v12);
  sub_1000C1E18((void *)((char *)a1 + a3[9]), (void *)((char *)a2 + a3[9]));
  uint64_t v13 = a3[10];
  long long v14 = (void *)((char *)a1 + v13);
  uint64_t v15 = (void *)((char *)a2 + v13);
  *long long v14 = *v15;
  v14[1] = v15[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v16 = a3[11];
  long long v17 = (char *)a1 + v16;
  uint64_t v18 = (char *)a2 + v16;
  uint64_t v19 = type metadata accessor for WeatherMapPerformanceTestConditions();
  int v20 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v17, 1, v19);
  int v21 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v18, 1, v19);
  if (v20)
  {
    if (!v21)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v17, 0, 1, v19);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v22 = *(void *)(v19 - 8);
  if (v21)
  {
    (*(void (**)(char *, uint64_t))(v22 + 8))(v17, v19);
LABEL_6:
    uint64_t v23 = sub_10017DF08(&qword_100E6E1E0);
    memcpy(v17, v18, *(void *)(*(void *)(v23 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v22 + 24))(v17, v18, v19);
LABEL_7:
  uint64_t v24 = sub_10017DF08(&qword_100EACB90);
  *(void *)&v17[*(int *)(v24 + 28)] = *(void *)&v18[*(int *)(v24 + 28)];
  swift_retain();
  swift_release();
  uint64_t v25 = a3[12];
  uint64_t v26 = (char *)a1 + v25;
  uint64_t v27 = (char *)a2 + v25;
  *(void *)((char *)a1 + v25) = *(void *)((char *)a2 + v25);
  swift_retain();
  swift_release();
  *((void *)v26 + 1) = *((void *)v27 + 1);
  if (a1 != a2)
  {
    uint64_t v28 = a3[13];
    uint64_t v29 = (char *)a1 + v28;
    uint64_t v30 = (char *)a2 + v28;
    sub_100178110((uint64_t)a1 + v28, &qword_100E63BD0);
    sub_10017DF08(&qword_100E63BD0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(void *)uint64_t v29 = *(void *)v30;
      *((void *)v29 + 1) = *((void *)v30 + 1);
      v29[16] = v30[16];
      v29[17] = v30[17];
      v29[18] = v30[18];
      uint64_t v31 = *(int *)(type metadata accessor for DisplayMetrics() + 36);
      uint64_t v32 = &v29[v31];
      uint64_t v33 = &v30[v31];
      uint64_t v34 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 16))(v32, v33, v34);
    }
    else
    {
      *(void *)uint64_t v29 = *(void *)v30;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v35 = a3[14];
    uint64_t v36 = (void *)((char *)a1 + v35);
    uint64_t v37 = (void *)((char *)a2 + v35);
    sub_100178110((uint64_t)a1 + v35, (uint64_t *)&unk_100EAA560);
    sub_10017DF08((uint64_t *)&unk_100EAA560);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v38 = type metadata accessor for UserInterfaceSizeClass();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v37, 1, v38))
      {
        uint64_t v39 = sub_10017DF08(&qword_100E65ED8);
        memcpy(v36, v37, *(void *)(*(void *)(v39 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v38 - 8) + 16))(v36, v37, v38);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v36, 0, 1, v38);
      }
    }
    else
    {
      *uint64_t v36 = *v37;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v40 = a3[15];
  uint64_t v41 = (char *)a1 + v40;
  uint64_t v42 = (char *)a2 + v40;
  uint64_t v43 = *(void *)v42;
  uint64_t v44 = *((void *)v42 + 1);
  uint64_t v45 = *((void *)v42 + 2);
  uint64_t v46 = *((void *)v42 + 3);
  char v47 = v42[32];
  sub_100190CD4(*(void *)v42, v44, v45, v46, v47);
  uint64_t v48 = *(void *)v41;
  uint64_t v49 = *((void *)v41 + 1);
  uint64_t v50 = *((void *)v41 + 2);
  uint64_t v51 = *((void *)v41 + 3);
  char v52 = v41[32];
  *(void *)uint64_t v41 = v43;
  *((void *)v41 + 1) = v44;
  *((void *)v41 + 2) = v45;
  *((void *)v41 + 3) = v46;
  v41[32] = v47;
  sub_100191934(v48, v49, v50, v51, v52);
  *(void *)((char *)a1 + a3[16]) = *(void *)((char *)a2 + a3[16]);
  if (a1 != a2)
  {
    uint64_t v53 = a3[17];
    uint64_t v54 = (void *)((char *)a1 + v53);
    uint64_t v55 = (void *)((char *)a2 + v53);
    sub_100178110((uint64_t)a1 + v53, &qword_100E74A68);
    sub_10017DF08(&qword_100E74A68);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v56 = type metadata accessor for ColorScheme();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v56 - 8) + 16))(v54, v55, v56);
    }
    else
    {
      *uint64_t v54 = *v55;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_OWORD *sub_100A722B0(_OWORD *a1, _OWORD *a2, int *a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  long long v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  uint64_t v8 = a3[8];
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = type metadata accessor for WeatherMapDisplayMode();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
  uint64_t v12 = a3[9];
  uint64_t v13 = a3[10];
  long long v14 = (char *)a1 + v12;
  uint64_t v15 = (char *)a2 + v12;
  long long v16 = *((_OWORD *)v15 + 1);
  *(_OWORD *)long long v14 = *(_OWORD *)v15;
  *((_OWORD *)v14 + 1) = v16;
  long long v17 = *(_OWORD *)((char *)a2 + v13);
  *((void *)v14 + 4) = *((void *)v15 + 4);
  *(_OWORD *)((char *)a1 + v13) = v17;
  uint64_t v18 = a3[11];
  uint64_t v19 = (char *)a1 + v18;
  int v20 = (char *)a2 + v18;
  uint64_t v21 = type metadata accessor for WeatherMapPerformanceTestConditions();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v20, 1, v21))
  {
    uint64_t v22 = sub_10017DF08(&qword_100E6E1E0);
    memcpy(v19, v20, *(void *)(*(void *)(v22 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 32))(v19, v20, v21);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v19, 0, 1, v21);
  }
  uint64_t v23 = sub_10017DF08(&qword_100EACB90);
  *(void *)&v19[*(int *)(v23 + 28)] = *(void *)&v20[*(int *)(v23 + 28)];
  uint64_t v24 = a3[13];
  *(_OWORD *)((char *)a1 + a3[12]) = *(_OWORD *)((char *)a2 + a3[12]);
  uint64_t v25 = (char *)a1 + v24;
  uint64_t v26 = (char *)a2 + v24;
  uint64_t v27 = sub_10017DF08(&qword_100E63BD0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *(_OWORD *)uint64_t v25 = *(_OWORD *)v26;
    v25[16] = v26[16];
    v25[17] = v26[17];
    v25[18] = v26[18];
    uint64_t v28 = *(int *)(type metadata accessor for DisplayMetrics() + 36);
    uint64_t v29 = &v25[v28];
    uint64_t v30 = &v26[v28];
    uint64_t v31 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 32))(v29, v30, v31);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v25, v26, *(void *)(*(void *)(v27 - 8) + 64));
  }
  uint64_t v32 = a3[14];
  uint64_t v33 = (char *)a1 + v32;
  uint64_t v34 = (char *)a2 + v32;
  uint64_t v35 = sub_10017DF08((uint64_t *)&unk_100EAA560);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v36 = type metadata accessor for UserInterfaceSizeClass();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v34, 1, v36))
    {
      uint64_t v37 = sub_10017DF08(&qword_100E65ED8);
      memcpy(v33, v34, *(void *)(*(void *)(v37 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 32))(v33, v34, v36);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v33, 0, 1, v36);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v33, v34, *(void *)(*(void *)(v35 - 8) + 64));
  }
  uint64_t v38 = a3[15];
  uint64_t v39 = a3[16];
  uint64_t v40 = (char *)a1 + v38;
  uint64_t v41 = (char *)a2 + v38;
  long long v42 = *(_OWORD *)v41;
  long long v43 = *((_OWORD *)v41 + 1);
  v40[32] = v41[32];
  uint64_t v44 = *(void *)((char *)a2 + v39);
  *(_OWORD *)uint64_t v40 = v42;
  *((_OWORD *)v40 + 1) = v43;
  *(void *)((char *)a1 + v39) = v44;
  uint64_t v45 = a3[17];
  uint64_t v46 = (char *)a1 + v45;
  char v47 = (char *)a2 + v45;
  uint64_t v48 = sub_10017DF08(&qword_100E74A68);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v49 = type metadata accessor for ColorScheme();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v49 - 8) + 32))(v46, v47, v49);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v46, v47, *(void *)(*(void *)(v48 - 8) + 64));
  }
  return a1;
}

void *sub_100A726C8(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  swift_unknownObjectRelease();
  uint64_t v7 = a2[2];
  uint64_t v8 = a2[3];
  a1[1] = v6;
  a1[2] = v7;
  a1[3] = v8;
  swift_release();
  uint64_t v9 = a2[5];
  a1[4] = a2[4];
  swift_unknownObjectRelease();
  uint64_t v10 = a2[6];
  uint64_t v11 = a2[7];
  a1[5] = v9;
  a1[6] = v10;
  swift_unknownObjectRelease();
  a1[7] = v11;
  uint64_t v12 = a3[8];
  uint64_t v13 = (char *)a1 + v12;
  long long v14 = (char *)a2 + v12;
  uint64_t v15 = type metadata accessor for WeatherMapDisplayMode();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 40))(v13, v14, v15);
  uint64_t v16 = a3[9];
  long long v17 = (char *)a1 + v16;
  uint64_t v18 = (char *)a2 + v16;
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)a1 + v16);
  long long v19 = *((_OWORD *)v18 + 1);
  *(_OWORD *)long long v17 = *(_OWORD *)v18;
  *((_OWORD *)v17 + 1) = v19;
  *((void *)v17 + 4) = *((void *)v18 + 4);
  uint64_t v20 = a3[10];
  uint64_t v21 = (void *)((char *)a1 + v20);
  uint64_t v22 = (void *)((char *)a2 + v20);
  uint64_t v24 = *v22;
  uint64_t v23 = v22[1];
  *uint64_t v21 = v24;
  v21[1] = v23;
  swift_bridgeObjectRelease();
  uint64_t v25 = a3[11];
  uint64_t v26 = (char *)a1 + v25;
  uint64_t v27 = (char *)a2 + v25;
  uint64_t v28 = type metadata accessor for WeatherMapPerformanceTestConditions();
  int v29 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v26, 1, v28);
  int v30 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v27, 1, v28);
  if (v29)
  {
    if (!v30)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 32))(v26, v27, v28);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v26, 0, 1, v28);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v31 = *(void *)(v28 - 8);
  if (v30)
  {
    (*(void (**)(char *, uint64_t))(v31 + 8))(v26, v28);
LABEL_6:
    uint64_t v32 = sub_10017DF08(&qword_100E6E1E0);
    memcpy(v26, v27, *(void *)(*(void *)(v32 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v31 + 40))(v26, v27, v28);
LABEL_7:
  uint64_t v33 = sub_10017DF08(&qword_100EACB90);
  *(void *)&v26[*(int *)(v33 + 28)] = *(void *)&v27[*(int *)(v33 + 28)];
  swift_release();
  uint64_t v34 = a3[12];
  uint64_t v35 = (char *)a1 + v34;
  uint64_t v36 = (char *)a2 + v34;
  *(void *)((char *)a1 + v34) = *(void *)((char *)a2 + v34);
  swift_release();
  *((void *)v35 + 1) = *((void *)v36 + 1);
  if (a1 != a2)
  {
    uint64_t v37 = a3[13];
    uint64_t v38 = (char *)a1 + v37;
    uint64_t v39 = (char *)a2 + v37;
    sub_100178110((uint64_t)a1 + v37, &qword_100E63BD0);
    uint64_t v40 = sub_10017DF08(&qword_100E63BD0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(_OWORD *)uint64_t v38 = *(_OWORD *)v39;
      v38[16] = v39[16];
      v38[17] = v39[17];
      v38[18] = v39[18];
      uint64_t v41 = *(int *)(type metadata accessor for DisplayMetrics() + 36);
      long long v42 = &v38[v41];
      long long v43 = &v39[v41];
      uint64_t v44 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v44 - 8) + 32))(v42, v43, v44);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v38, v39, *(void *)(*(void *)(v40 - 8) + 64));
    }
    uint64_t v45 = a3[14];
    uint64_t v46 = (char *)a1 + v45;
    char v47 = (char *)a2 + v45;
    sub_100178110((uint64_t)a1 + v45, (uint64_t *)&unk_100EAA560);
    uint64_t v48 = sub_10017DF08((uint64_t *)&unk_100EAA560);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v49 = type metadata accessor for UserInterfaceSizeClass();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v47, 1, v49))
      {
        uint64_t v50 = sub_10017DF08(&qword_100E65ED8);
        memcpy(v46, v47, *(void *)(*(void *)(v50 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v49 - 8) + 32))(v46, v47, v49);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v46, 0, 1, v49);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v46, v47, *(void *)(*(void *)(v48 - 8) + 64));
    }
  }
  uint64_t v51 = a3[15];
  char v52 = (char *)a1 + v51;
  uint64_t v53 = (char *)a2 + v51;
  char v54 = v53[32];
  uint64_t v55 = *(void *)v52;
  uint64_t v56 = *((void *)v52 + 1);
  uint64_t v57 = *((void *)v52 + 2);
  uint64_t v58 = *((void *)v52 + 3);
  char v59 = v52[32];
  long long v60 = *((_OWORD *)v53 + 1);
  *(_OWORD *)char v52 = *(_OWORD *)v53;
  *((_OWORD *)v52 + 1) = v60;
  v52[32] = v54;
  sub_100191934(v55, v56, v57, v58, v59);
  *(void *)((char *)a1 + a3[16]) = *(void *)((char *)a2 + a3[16]);
  if (a1 != a2)
  {
    uint64_t v61 = a3[17];
    uint64_t v62 = (char *)a1 + v61;
    uint64_t v63 = (char *)a2 + v61;
    sub_100178110((uint64_t)a1 + v61, &qword_100E74A68);
    uint64_t v64 = sub_10017DF08(&qword_100E74A68);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v65 = type metadata accessor for ColorScheme();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v65 - 8) + 32))(v62, v63, v65);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v62, v63, *(void *)(*(void *)(v64 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_100A72C2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100A72C40);
}

uint64_t sub_100A72C40(uint64_t *a1, uint64_t a2, int *a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    type metadata accessor for WeatherMapDisplayMode();
    sub_100162F30();
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a3[8];
    }
    else
    {
      sub_10017DF08(&qword_100EACB90);
      sub_100162F30();
      if (*(_DWORD *)(v13 + 84) == a2)
      {
        uint64_t v10 = v12;
        uint64_t v11 = a3[11];
      }
      else
      {
        sub_10017DF08(&qword_100E63BF8);
        sub_100162F30();
        if (*(_DWORD *)(v15 + 84) == a2)
        {
          uint64_t v10 = v14;
          uint64_t v11 = a3[13];
        }
        else
        {
          sub_10017DF08((uint64_t *)&unk_100EAA540);
          sub_100162F30();
          if (*(_DWORD *)(v17 + 84) == a2)
          {
            uint64_t v10 = v16;
            uint64_t v11 = a3[14];
          }
          else
          {
            uint64_t v10 = sub_10017DF08(&qword_100E74A78);
            uint64_t v11 = a3[17];
          }
        }
      }
    }
    return _s7Weather24LocationCompositionStateOwet_0((uint64_t)a1 + v11, a2, v10);
  }
}

uint64_t sub_100A72D68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100A72D7C);
}

void *sub_100A72D7C(void *result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    type metadata accessor for WeatherMapDisplayMode();
    sub_100162F30();
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a4[8];
    }
    else
    {
      sub_10017DF08(&qword_100EACB90);
      sub_100162F30();
      if (*(_DWORD *)(v13 + 84) == a3)
      {
        uint64_t v10 = v12;
        uint64_t v11 = a4[11];
      }
      else
      {
        sub_10017DF08(&qword_100E63BF8);
        sub_100162F30();
        if (*(_DWORD *)(v15 + 84) == a3)
        {
          uint64_t v10 = v14;
          uint64_t v11 = a4[13];
        }
        else
        {
          sub_10017DF08((uint64_t *)&unk_100EAA540);
          sub_100162F30();
          if (*(_DWORD *)(v17 + 84) == a3)
          {
            uint64_t v10 = v16;
            uint64_t v11 = a4[14];
          }
          else
          {
            uint64_t v10 = sub_10017DF08(&qword_100E74A78);
            uint64_t v11 = a4[17];
          }
        }
      }
    }
    return (void *)_s7Weather24LocationCompositionStateOwst_0((uint64_t)v5 + v11, a2, a2, v10);
  }
  return result;
}

void sub_100A72EA0()
{
  type metadata accessor for WeatherMapDisplayMode();
  if (v0 <= 0x3F)
  {
    sub_100A730D8(319, (unint64_t *)&unk_100EACC00, &qword_100E6E1E0, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for State);
    if (v1 <= 0x3F)
    {
      sub_10002FDB4(319, (unint64_t *)&qword_100E63C80, (void (*)(uint64_t))type metadata accessor for DisplayMetrics);
      if (v2 <= 0x3F)
      {
        sub_100A730D8(319, (unint64_t *)&qword_100E66100, &qword_100E65ED8, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
        if (v3 <= 0x3F)
        {
          sub_10002FDB4(319, (unint64_t *)&unk_100E74AE8, (void (*)(uint64_t))&type metadata accessor for ColorScheme);
          if (v4 <= 0x3F) {
            swift_initStructMetadata();
          }
        }
      }
    }
  }
}

void sub_100A730D8(uint64_t a1, unint64_t *a2, uint64_t *a3, uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = sub_10018C6DC(a3);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_100A73138()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100A73158(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for InteractiveMapView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100A731BC()
{
  return sub_100A731F0((uint64_t (*)(uint64_t))sub_100A6E63C);
}

uint64_t sub_100A731D8()
{
  return sub_100A731F0((uint64_t (*)(uint64_t))sub_100A6EC2C);
}

uint64_t sub_100A731F0(uint64_t (*a1)(uint64_t))
{
  uint64_t v2 = type metadata accessor for InteractiveMapView();
  sub_1001627C0(v2);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return a1(v4);
}

unint64_t sub_100A73254()
{
  unint64_t result = qword_100EACCD0;
  if (!qword_100EACCD0)
  {
    sub_10018C6DC(&qword_100EACCC8);
    sub_100A732C8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EACCD0);
  }
  return result;
}

unint64_t sub_100A732C8()
{
  unint64_t result = qword_100EACCD8;
  if (!qword_100EACCD8)
  {
    sub_10018C6DC(&qword_100EACCE0);
    sub_100A73344();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EACCD8);
  }
  return result;
}

unint64_t sub_100A73344()
{
  unint64_t result = qword_100EACCE8;
  if (!qword_100EACCE8)
  {
    sub_10018C6DC(&qword_100EACCF0);
    sub_100A733E4();
    sub_1001246C8(&qword_100E79F38, &qword_100E744A8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EACCE8);
  }
  return result;
}

unint64_t sub_100A733E4()
{
  unint64_t result = qword_100EACCF8;
  if (!qword_100EACCF8)
  {
    sub_10018C6DC(&qword_100EACD00);
    sub_100A73484();
    sub_1001246C8(&qword_100E825E0, &qword_100E825E8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EACCF8);
  }
  return result;
}

unint64_t sub_100A73484()
{
  unint64_t result = qword_100EACD08;
  if (!qword_100EACD08)
  {
    sub_10018C6DC(&qword_100EACD10);
    sub_1001246C8(&qword_100E66B28, &qword_100E66B30);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EACD08);
  }
  return result;
}

uint64_t sub_100A73524()
{
  return sub_100A6EDAC(*(void *)(v0 + 16));
}

unint64_t sub_100A7352C()
{
  unint64_t result = qword_100EACD28;
  if (!qword_100EACD28)
  {
    sub_10018C6DC(&qword_100EACC70);
    sub_100A73D0C((unint64_t *)&qword_100E81468, (void (*)(uint64_t))&type metadata accessor for WeatherMap);
    sub_1001246C8(&qword_100EACD30, &qword_100EACD38);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EACD28);
  }
  return result;
}

unint64_t sub_100A735FC()
{
  unint64_t result = qword_100EACD48;
  if (!qword_100EACD48)
  {
    sub_10018C6DC(&qword_100EACC90);
    sub_10018C6DC(&qword_100EACC80);
    sub_10018C6DC(&qword_100EACC78);
    sub_10018C6DC(&qword_100EACC70);
    sub_100A7352C();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EACD48);
  }
  return result;
}

uint64_t sub_100A73720(uint64_t a1)
{
  return sub_100A737E0(a1, (uint64_t (*)(uint64_t, uint64_t))sub_100A6F548);
}

uint64_t sub_100A7373C()
{
  return sub_100A73770((uint64_t (*)(uint64_t))sub_100A6F640);
}

uint64_t sub_100A73758()
{
  return sub_100A73770((uint64_t (*)(uint64_t))sub_100A6F7D4);
}

uint64_t sub_100A73770(uint64_t (*a1)(uint64_t))
{
  uint64_t v2 = type metadata accessor for InteractiveMapView();
  sub_1001627C0(v2);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return a1(v4);
}

uint64_t sub_100A737C8(uint64_t a1)
{
  return sub_100A737E0(a1, (uint64_t (*)(uint64_t, uint64_t))sub_100A6F9F4);
}

uint64_t sub_100A737E0(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t))
{
  uint64_t v4 = type metadata accessor for InteractiveMapView();
  sub_1001627C0(v4);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return a2(a1, v6);
}

uint64_t sub_100A73848()
{
  uint64_t v0 = type metadata accessor for InteractiveMapView();
  sub_1001627C0(v0);
  return sub_100BA4EEC();
}

uint64_t sub_100A73884()
{
  return sub_100A6F0F0(*(void *)(v0 + 16));
}

uint64_t sub_100A73890()
{
  type metadata accessor for InteractiveMapView();

  return sub_100A78058(1);
}

void *sub_100A738C4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for InteractiveMapView();
  sub_1001627C0(v4);

  return sub_100A70508(a1, a2);
}

uint64_t sub_100A73924(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  sub_100162F0C();
  v3();
  return a1;
}

uint64_t sub_100A7397C()
{
  uint64_t v0 = type metadata accessor for InteractiveMapView();
  sub_1001627C0(v0);
  sub_1001891A4();

  return sub_100A6FBAC(v1);
}

uint64_t sub_100A739C4()
{
  uint64_t v0 = type metadata accessor for InteractiveMapView();
  sub_1001627C0(v0);
  uint64_t v1 = (uint64_t *)sub_1001891BC();

  return sub_100A6FC6C(v1, v2, v3, v4);
}

uint64_t sub_100A73A0C()
{
  uint64_t v0 = type metadata accessor for InteractiveMapView();
  sub_1001627C0(v0);
  sub_1001891A4();

  return sub_100A700B8(v1);
}

uint64_t sub_100A73A54()
{
  type metadata accessor for InteractiveMapView();
  sub_100179CD4();
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_release();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  type metadata accessor for WeatherMapDisplayMode();
  sub_100162E4C();
  sub_100162F0C();
  v5();
  sub_10018AC0C();
  unint64_t v6 = v1 + v4 + *(int *)(v0 + 44);
  uint64_t v7 = type metadata accessor for WeatherMapPerformanceTestConditions();
  if (!sub_100129098(v7))
  {
    sub_100162880();
    (*(void (**)(unint64_t, uint64_t))(v8 + 8))(v6, v2);
  }
  sub_10017DF08(&qword_100EACB90);
  swift_release();
  swift_release();
  sub_10017DF08(&qword_100E63BD0);
  if (sub_10017A0C8() == 1)
  {
    type metadata accessor for DisplayMetrics();
    type metadata accessor for DynamicTypeSize();
    sub_100162E4C();
    sub_100162F0C();
    v9();
  }
  else
  {
    swift_release();
  }
  sub_10017DF08((uint64_t *)&unk_100EAA560);
  if (sub_10017A0C8() == 1)
  {
    uint64_t v10 = type metadata accessor for UserInterfaceSizeClass();
    if (!sub_100129098(v10))
    {
      sub_100162880();
      sub_100162F0C();
      v11();
    }
  }
  else
  {
    swift_release();
  }
  sub_100163C78();
  sub_10017DF08(&qword_100E74A68);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    type metadata accessor for ColorScheme();
    sub_100162E4C();
    sub_100162F0C();
    v12();
  }
  else
  {
    swift_release();
  }

  return swift_deallocObject();
}

uint64_t sub_100A73CC8()
{
  uint64_t v0 = type metadata accessor for InteractiveMapView();
  sub_1001627C0(v0);
  uint64_t v1 = sub_1001891BC();

  return sub_100A70190(v1);
}

uint64_t sub_100A73D0C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100A73D54()
{
  return sub_1001246C8(&qword_100EACD58, &qword_100EACCC0);
}

uint64_t sub_100A73D90@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E75338);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v7)
  {
    sub_1001B1E64(a1, a1[3]);
    uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:name:)();
    if (v6 != 2)
    {
      uint64_t v5 = type metadata accessor for WeatherConditionBackgroundModelFactory();
      swift_allocObject();
      uint64_t result = WeatherConditionBackgroundModelFactory.init(gradientManager:automationEnabled:isDemoPresetActive:)();
      a2[3] = v5;
      a2[4] = (uint64_t)&protocol witness table for WeatherConditionBackgroundModelFactory;
      *a2 = result;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t type metadata accessor for MessageCoverModule()
{
  return self;
}

void *sub_100A73EC8(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  return a1;
}

void *sub_100A73F18(void *a1, void *a2)
{
  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  return a1;
}

uint64_t sub_100A73F58(uint64_t *a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 16))
    {
      int v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      uint64_t v3 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF) {
        LODWORD(v3) = -1;
      }
      int v2 = v3 - 1;
      if (v2 < 0) {
        int v2 = -1;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t sub_100A73FAC(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)uint64_t result = a2;
    }
  }
  return result;
}

uint64_t sub_100A73FFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)&long long v67 = a1;
  uint64_t v66 = a2;
  uint64_t v61 = type metadata accessor for ConditionDetailMapView();
  sub_100162E4C();
  __chkstk_darwin(v2);
  sub_10016278C();
  uint64_t v5 = v3 - v4;
  __chkstk_darwin(v6);
  uint64_t v57 = (uint64_t)&v55 - v7;
  uint64_t v8 = type metadata accessor for ConditionDetailMapViewModel();
  __chkstk_darwin(v8 - 8);
  sub_10016278C();
  uint64_t v11 = v9 - v10;
  __chkstk_darwin(v12);
  uint64_t v56 = (uint64_t)&v55 - v13;
  uint64_t v58 = sub_10017DF08(&qword_100EAD128);
  sub_100162E4C();
  __chkstk_darwin(v14);
  sub_100109314();
  uint64_t v59 = v15;
  uint64_t v65 = sub_10017DF08(&qword_100EAD130);
  sub_100162E4C();
  __chkstk_darwin(v16);
  sub_100109314();
  uint64_t v60 = v17;
  uint64_t v18 = type metadata accessor for WindCategoryTableView(0);
  sub_100162E4C();
  __chkstk_darwin(v19);
  sub_10016278C();
  uint64_t v22 = (uint64_t *)(v20 - v21);
  __chkstk_darwin(v23);
  uint64_t v25 = (char *)&v55 - v24;
  uint64_t v62 = sub_10017DF08(&qword_100EAD138);
  sub_100162E4C();
  __chkstk_darwin(v26);
  sub_100109314();
  uint64_t v64 = v27;
  sub_10017DF08(&qword_100EAD140);
  sub_100162E4C();
  __chkstk_darwin(v28);
  sub_1001626E0();
  uint64_t v31 = v30 - v29;
  uint64_t v63 = sub_10017DF08(&qword_100EAD148);
  sub_100162E4C();
  __chkstk_darwin(v32);
  sub_1001626E0();
  uint64_t v35 = v34 - v33;
  type metadata accessor for ConditionDetailDynamicContentIdentifier();
  sub_100162E4C();
  __chkstk_darwin(v36);
  sub_1001626E0();
  uint64_t v39 = v38 - v37;
  sub_100A7728C(v67, v38 - v37, (void (*)(void))type metadata accessor for ConditionDetailDynamicContentIdentifier);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v46 = v56;
      sub_100A7722C(v39, v56, (void (*)(void))type metadata accessor for ConditionDetailMapViewModel);
      long long v42 = (void (*)(void))type metadata accessor for ConditionDetailMapViewModel;
      sub_100A7728C(v46, v11, (void (*)(void))type metadata accessor for ConditionDetailMapViewModel);
      *(void *)uint64_t v5 = swift_getKeyPath();
      *(void *)(v5 + 8) = 0;
      *(_WORD *)(v5 + 16) = 0;
      uint64_t v47 = v61;
      sub_100A7722C(v11, v5 + *(int *)(v61 + 20), (void (*)(void))type metadata accessor for ConditionDetailMapViewModel);
      uint64_t v48 = (void *)(v5 + *(int *)(v47 + 24));
      *uint64_t v48 = 0;
      v48[1] = 0;
      uint64_t v49 = v57;
      sub_100A7722C(v5, v57, (void (*)(void))type metadata accessor for ConditionDetailMapView);
      sub_100A7728C(v49, v59, (void (*)(void))type metadata accessor for ConditionDetailMapView);
      swift_storeEnumTagMultiPayload();
      sub_10017DF08(&qword_100EAD150);
      sub_100A77030();
      sub_100A77130(&qword_100EAD160, (void (*)(uint64_t))type metadata accessor for ConditionDetailMapView);
      uint64_t v50 = v60;
      _ConditionalContent<>.init(storage:)();
      sub_10006DF38(v50, v64, &qword_100EAD130);
      swift_storeEnumTagMultiPayload();
      sub_100A77084();
      sub_100A77178();
      sub_10017EDAC();
      _ConditionalContent<>.init(storage:)();
      sub_1001781AC(v50, &qword_100EAD130);
      sub_100A772E0(v49, (void (*)(void))type metadata accessor for ConditionDetailMapView);
      uint64_t v43 = v46;
      goto LABEL_5;
    case 2u:
      swift_storeEnumTagMultiPayload();
      sub_100A77130(&qword_100EAD170, (void (*)(uint64_t))type metadata accessor for WindCategoryTableView);
      _ConditionalContent<>.init(storage:)();
      uint64_t v44 = &qword_100EAD148;
      sub_10006DF38(v35, v64, &qword_100EAD148);
      swift_storeEnumTagMultiPayload();
      sub_100A77084();
      sub_100A77178();
      sub_10017EDAC();
      _ConditionalContent<>.init(storage:)();
      uint64_t v45 = (unsigned char *)v35;
      goto LABEL_10;
    case 3u:
      uint64_t v52 = sub_10017DF08(&qword_100E72A08);
      __src[10] = sub_100874A58;
      void __src[11] = 0;
      LOBYTE(__src[12]) = 0;
      __src[0] = v52;
      if (qword_100E62290 != -1) {
        swift_once();
      }
      swift_beginAccess();
      sub_10006DF38((uint64_t)&xmmword_100F51398, (uint64_t)__dst, &qword_100E6F2A0);
      if (!*(void *)&__dst[24])
      {
        __break(1u);
        JUMPOUT(0x100A74954);
      }
      sub_1001262E4((long long *)__dst, (uint64_t)&__src[3]);
      __src[1] = sub_1006DE938;
      __src[2] = 0;
      uint64_t v53 = Dictionary.init(dictionaryLiteral:)();
      __src[8] = _swiftEmptyArrayStorage;
      __src[9] = v53;
      memcpy(__dst, __src, sizeof(__dst));
      uint64_t v44 = &qword_100EAD150;
      sub_10006DF38((uint64_t)__dst, v59, &qword_100EAD150);
      swift_storeEnumTagMultiPayload();
      sub_10017DF08(&qword_100EAD150);
      sub_100A77030();
      sub_100A77130(&qword_100EAD160, (void (*)(uint64_t))type metadata accessor for ConditionDetailMapView);
      uint64_t v54 = v60;
      _ConditionalContent<>.init(storage:)();
      sub_1001A1274(v54);
      swift_storeEnumTagMultiPayload();
      sub_100A77084();
      sub_100A77178();
      sub_10017DAB4();
      sub_1001781AC(v54, &qword_100EAD130);
      uint64_t v45 = __dst;
LABEL_10:
      uint64_t result = sub_1001781AC((uint64_t)v45, v44);
      break;
    default:
      uint64_t v40 = *(void *)v39;
      long long v67 = *(_OWORD *)(v39 + 8);
      *uint64_t v22 = swift_getKeyPath();
      sub_10017DF08(&qword_100E62D60);
      swift_storeEnumTagMultiPayload();
      uint64_t v41 = (char *)v22 + *(int *)(v18 + 20);
      *(void *)uint64_t v41 = v40;
      *(_OWORD *)(v41 + 8) = v67;
      sub_100A7722C((uint64_t)v22, (uint64_t)v25, (void (*)(void))type metadata accessor for WindCategoryTableView);
      long long v42 = (void (*)(void))type metadata accessor for WindCategoryTableView;
      sub_100A7728C((uint64_t)v25, v31, (void (*)(void))type metadata accessor for WindCategoryTableView);
      swift_storeEnumTagMultiPayload();
      sub_100A77130(&qword_100EAD170, (void (*)(uint64_t))type metadata accessor for WindCategoryTableView);
      _ConditionalContent<>.init(storage:)();
      sub_1001A1274(v35);
      swift_storeEnumTagMultiPayload();
      sub_100A77084();
      sub_100A77178();
      sub_10017DAB4();
      sub_1001781AC(v35, &qword_100EAD148);
      uint64_t v43 = (uint64_t)v25;
LABEL_5:
      uint64_t result = sub_100A772E0(v43, v42);
      break;
  }
  return result;
}

uint64_t type metadata accessor for ConditionDetailDynamicContentViewBuilder()
{
  return self;
}

void *sub_100A74988(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (void *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
    return a1;
  }
  uint64_t v6 = *(void *)(a3 - 8);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v10 = a2[1];
    *a1 = *a2;
    a1[1] = v10;
    uint64_t v11 = (int *)type metadata accessor for ConditionDetailMapViewModel();
    uint64_t v12 = v11[5];
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    uint64_t v15 = type metadata accessor for Location();
    uint64_t v16 = *(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16);
    swift_bridgeObjectRetain();
    v16(v13, v14, v15);
    uint64_t v17 = v11[6];
    uint64_t v18 = (void *)((char *)a1 + v17);
    uint64_t v19 = (void *)((char *)a2 + v17);
    uint64_t v20 = type metadata accessor for WeatherData(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v19, 1, v20))
    {
      uint64_t v21 = sub_10017DF08(&qword_100E63850);
      memcpy(v18, v19, *(void *)(*(void *)(v21 - 8) + 64));
LABEL_31:
      uint64_t v56 = v11[7];
      uint64_t v57 = (void *)((char *)a1 + v56);
      uint64_t v58 = (void *)((char *)a2 + v56);
      uint64_t v59 = v58[1];
      *uint64_t v57 = *v58;
      v57[1] = v59;
      uint64_t v60 = v11[8];
      uint64_t v61 = (char *)a1 + v60;
      uint64_t v62 = (char *)a2 + v60;
      uint64_t v63 = type metadata accessor for WeatherMapOverlayKind();
      uint64_t v64 = *(void (**)(char *, char *, uint64_t))(*(void *)(v63 - 8) + 16);
      swift_bridgeObjectRetain();
      v64(v61, v62, v63);
      *((unsigned char *)a1 + v11[9]) = *((unsigned char *)a2 + v11[9]);
      goto LABEL_32;
    }
    uint64_t v22 = (int *)v20;
    uint64_t v23 = v19[1];
    *uint64_t v18 = *v19;
    v18[1] = v23;
    long long v67 = v22;
    uint64_t v24 = v22[5];
    uint64_t v25 = (char *)v18 + v24;
    uint64_t v26 = (char *)v19 + v24;
    uint64_t v27 = type metadata accessor for Locale();
    swift_bridgeObjectRetain();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v26, 1, v27))
    {
      uint64_t v28 = sub_10017DF08(&qword_100E63730);
      memcpy(v25, v26, *(void *)(*(void *)(v28 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v25, 0, 1, v27);
    }
    uint64_t v29 = v67[6];
    uint64_t v30 = (char *)v18 + v29;
    uint64_t v31 = (char *)v19 + v29;
    uint64_t v32 = type metadata accessor for WeatherDataModel();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 16))(v30, v31, v32);
    uint64_t v33 = v67[7];
    uint64_t v34 = (char *)v18 + v33;
    uint64_t v35 = (char *)v19 + v33;
    uint64_t v36 = sub_10017DF08(&qword_100E63738);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v35, 1, v36))
    {
      uint64_t v37 = type metadata accessor for WeatherData.CachingState(0);
      memcpy(v34, v35, *(void *)(*(void *)(v37 - 8) + 64));
    }
    else
    {
      uint64_t v38 = type metadata accessor for Date();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 16))(v34, v35, v38);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v34, 0, 1, v36);
    }
    uint64_t v39 = v67[8];
    uint64_t v40 = (void *)((char *)v18 + v39);
    uint64_t v41 = (void *)((char *)v19 + v39);
    uint64_t v42 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
    int v43 = swift_getEnumCaseMultiPayload();
    if (v43 == 1)
    {
      uint64_t v45 = type metadata accessor for WeatherStatisticsModel();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v45 - 8) + 16))(v40, v41, v45);
    }
    else
    {
      if (v43)
      {
        memcpy(v40, v41, *(void *)(*(void *)(v42 - 8) + 64));
        goto LABEL_21;
      }
      uint64_t v44 = v41[1];
      *uint64_t v40 = *v41;
      v40[1] = v44;
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
LABEL_21:
    uint64_t v46 = v67[9];
    uint64_t v47 = (char *)v18 + v46;
    uint64_t v48 = (char *)v19 + v46;
    uint64_t v49 = type metadata accessor for WeatherDataOverrides();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v48, 1, v49))
    {
      uint64_t v50 = sub_10017DF08(&qword_100E63740);
      memcpy(v47, v48, *(void *)(*(void *)(v50 - 8) + 64));
    }
    else
    {
      uint64_t v51 = type metadata accessor for Date();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v48, 1, v51))
      {
        uint64_t v52 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
        memcpy(v47, v48, *(void *)(*(void *)(v52 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v51 - 8) + 16))(v47, v48, v51);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v47, 0, 1, v51);
      }
      uint64_t v53 = *(int *)(v49 + 20);
      __dst = &v47[v53];
      uint64_t v54 = &v48[v53];
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v54, 1, v51))
      {
        uint64_t v55 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
        memcpy(__dst, v54, *(void *)(*(void *)(v55 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v51 - 8) + 16))(__dst, v54, v51);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dst, 0, 1, v51);
      }
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v47, 0, 1, v49);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v18, 0, 1, (uint64_t)v67);
    goto LABEL_31;
  }
  if (!EnumCaseMultiPayload)
  {
    uint64_t v8 = a2[1];
    *a1 = *a2;
    a1[1] = v8;
    a1[2] = a2[2];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
LABEL_32:
    swift_storeEnumTagMultiPayload();
    return a1;
  }
  memcpy(a1, a2, *(void *)(v6 + 64));
  return a1;
}

uint64_t sub_100A74FFC(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 1)
  {
    swift_bridgeObjectRelease();
    uint64_t v3 = (int *)type metadata accessor for ConditionDetailMapViewModel();
    uint64_t v4 = a1 + v3[5];
    uint64_t v5 = type metadata accessor for Location();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
    uint64_t v6 = a1 + v3[6];
    uint64_t v7 = (int *)type metadata accessor for WeatherData(0);
    if (!_s7Weather24LocationCompositionStateOwet_0(v6, 1, (uint64_t)v7))
    {
      swift_bridgeObjectRelease();
      uint64_t v8 = v6 + v7[5];
      uint64_t v9 = type metadata accessor for Locale();
      if (!_s7Weather24LocationCompositionStateOwet_0(v8, 1, v9)) {
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
      }
      uint64_t v10 = v6 + v7[6];
      uint64_t v11 = type metadata accessor for WeatherDataModel();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
      uint64_t v12 = v6 + v7[7];
      uint64_t v13 = sub_10017DF08(&qword_100E63738);
      if (!_s7Weather24LocationCompositionStateOwet_0(v12, 1, v13))
      {
        uint64_t v14 = type metadata accessor for Date();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v12, v14);
      }
      uint64_t v15 = v6 + v7[8];
      type metadata accessor for WeatherData.WeatherStatisticsState(0);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 1)
      {
        uint64_t v17 = type metadata accessor for WeatherStatisticsModel();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v17 - 8) + 8))(v15, v17);
      }
      else if (!EnumCaseMultiPayload)
      {
        swift_bridgeObjectRelease();
      }
      uint64_t v18 = v6 + v7[9];
      uint64_t v19 = type metadata accessor for WeatherDataOverrides();
      if (!_s7Weather24LocationCompositionStateOwet_0(v18, 1, v19))
      {
        uint64_t v20 = type metadata accessor for Date();
        if (!_s7Weather24LocationCompositionStateOwet_0(v18, 1, v20)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v20 - 8) + 8))(v18, v20);
        }
        uint64_t v21 = v18 + *(int *)(v19 + 20);
        if (!_s7Weather24LocationCompositionStateOwet_0(v21, 1, v20)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v20 - 8) + 8))(v21, v20);
        }
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v22 = a1 + v3[8];
    uint64_t v23 = type metadata accessor for WeatherMapOverlayKind();
    uint64_t v24 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v23 - 8) + 8);
    return v24(v22, v23);
  }
  else if (!result)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

void *sub_100A75388(void *a1, void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v8 = a2[1];
    *a1 = *a2;
    a1[1] = v8;
    uint64_t v9 = (int *)type metadata accessor for ConditionDetailMapViewModel();
    uint64_t v10 = v9[5];
    uint64_t v11 = (char *)a1 + v10;
    uint64_t v12 = (char *)a2 + v10;
    uint64_t v13 = type metadata accessor for Location();
    uint64_t v14 = *(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16);
    swift_bridgeObjectRetain();
    v14(v11, v12, v13);
    uint64_t v15 = v9[6];
    uint64_t v16 = (void *)((char *)a1 + v15);
    uint64_t v17 = (void *)((char *)a2 + v15);
    uint64_t v18 = type metadata accessor for WeatherData(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v17, 1, v18))
    {
      uint64_t v19 = sub_10017DF08(&qword_100E63850);
      memcpy(v16, v17, *(void *)(*(void *)(v19 - 8) + 64));
LABEL_29:
      uint64_t v54 = v9[7];
      uint64_t v55 = (void *)((char *)a1 + v54);
      uint64_t v56 = (void *)((char *)a2 + v54);
      uint64_t v57 = v56[1];
      *uint64_t v55 = *v56;
      v55[1] = v57;
      uint64_t v58 = v9[8];
      uint64_t v59 = (char *)a1 + v58;
      uint64_t v60 = (char *)a2 + v58;
      uint64_t v61 = type metadata accessor for WeatherMapOverlayKind();
      uint64_t v62 = *(void (**)(char *, char *, uint64_t))(*(void *)(v61 - 8) + 16);
      swift_bridgeObjectRetain();
      v62(v59, v60, v61);
      *((unsigned char *)a1 + v9[9]) = *((unsigned char *)a2 + v9[9]);
      goto LABEL_30;
    }
    uint64_t v20 = (int *)v18;
    uint64_t v21 = v17[1];
    *uint64_t v16 = *v17;
    v16[1] = v21;
    uint64_t v65 = v20;
    uint64_t v22 = v20[5];
    uint64_t v23 = (char *)v16 + v22;
    uint64_t v24 = (char *)v17 + v22;
    uint64_t v25 = type metadata accessor for Locale();
    swift_bridgeObjectRetain();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v24, 1, v25))
    {
      uint64_t v26 = sub_10017DF08(&qword_100E63730);
      memcpy(v23, v24, *(void *)(*(void *)(v26 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 16))(v23, v24, v25);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v23, 0, 1, v25);
    }
    uint64_t v27 = v65[6];
    uint64_t v28 = (char *)v16 + v27;
    uint64_t v29 = (char *)v17 + v27;
    uint64_t v30 = type metadata accessor for WeatherDataModel();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 16))(v28, v29, v30);
    uint64_t v31 = v65[7];
    uint64_t v32 = (char *)v16 + v31;
    uint64_t v33 = (char *)v17 + v31;
    uint64_t v34 = sub_10017DF08(&qword_100E63738);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v33, 1, v34))
    {
      uint64_t v35 = type metadata accessor for WeatherData.CachingState(0);
      memcpy(v32, v33, *(void *)(*(void *)(v35 - 8) + 64));
    }
    else
    {
      uint64_t v36 = type metadata accessor for Date();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 16))(v32, v33, v36);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v32, 0, 1, v34);
    }
    uint64_t v37 = v65[8];
    uint64_t v38 = (void *)((char *)v16 + v37);
    uint64_t v39 = (void *)((char *)v17 + v37);
    uint64_t v40 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
    int v41 = swift_getEnumCaseMultiPayload();
    if (v41 == 1)
    {
      uint64_t v43 = type metadata accessor for WeatherStatisticsModel();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v43 - 8) + 16))(v38, v39, v43);
    }
    else
    {
      if (v41)
      {
        memcpy(v38, v39, *(void *)(*(void *)(v40 - 8) + 64));
        goto LABEL_19;
      }
      uint64_t v42 = v39[1];
      *uint64_t v38 = *v39;
      v38[1] = v42;
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
LABEL_19:
    uint64_t v44 = v65[9];
    uint64_t v45 = (char *)v16 + v44;
    uint64_t v46 = (char *)v17 + v44;
    uint64_t v47 = type metadata accessor for WeatherDataOverrides();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v46, 1, v47))
    {
      uint64_t v48 = sub_10017DF08(&qword_100E63740);
      memcpy(v45, v46, *(void *)(*(void *)(v48 - 8) + 64));
    }
    else
    {
      uint64_t v49 = type metadata accessor for Date();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v46, 1, v49))
      {
        uint64_t v50 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
        memcpy(v45, v46, *(void *)(*(void *)(v50 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v49 - 8) + 16))(v45, v46, v49);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v45, 0, 1, v49);
      }
      uint64_t v51 = *(int *)(v47 + 20);
      __dst = &v45[v51];
      uint64_t v52 = &v46[v51];
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v52, 1, v49))
      {
        uint64_t v53 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
        memcpy(__dst, v52, *(void *)(*(void *)(v53 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v49 - 8) + 16))(__dst, v52, v49);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dst, 0, 1, v49);
      }
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v45, 0, 1, v47);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v16, 0, 1, (uint64_t)v65);
    goto LABEL_29;
  }
  if (!EnumCaseMultiPayload)
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    a1[2] = a2[2];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
LABEL_30:
    swift_storeEnumTagMultiPayload();
    return a1;
  }
  memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

void *sub_100A759B8(void *a1, void *a2, uint64_t a3)
{
  if (a1 == a2) {
    return a1;
  }
  sub_100A772E0((uint64_t)a1, (void (*)(void))type metadata accessor for ConditionDetailDynamicContentIdentifier);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    *a1 = *a2;
    a1[1] = a2[1];
    uint64_t v7 = (int *)type metadata accessor for ConditionDetailMapViewModel();
    uint64_t v8 = v7[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for Location();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    uint64_t v13 = v7[6];
    uint64_t v14 = (void *)((char *)a1 + v13);
    uint64_t v15 = (void *)((char *)a2 + v13);
    uint64_t v16 = type metadata accessor for WeatherData(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v15, 1, v16))
    {
      uint64_t v17 = sub_10017DF08(&qword_100E63850);
      memcpy(v14, v15, *(void *)(*(void *)(v17 - 8) + 64));
LABEL_30:
      uint64_t v49 = v7[7];
      uint64_t v50 = (void *)((char *)a1 + v49);
      uint64_t v51 = (void *)((char *)a2 + v49);
      *uint64_t v50 = *v51;
      v50[1] = v51[1];
      uint64_t v52 = v7[8];
      uint64_t v53 = (char *)a1 + v52;
      uint64_t v54 = (char *)a2 + v52;
      uint64_t v55 = type metadata accessor for WeatherMapOverlayKind();
      uint64_t v56 = *(void (**)(char *, char *, uint64_t))(*(void *)(v55 - 8) + 16);
      swift_bridgeObjectRetain();
      v56(v53, v54, v55);
      *((unsigned char *)a1 + v7[9]) = *((unsigned char *)a2 + v7[9]);
      goto LABEL_31;
    }
    *uint64_t v14 = *v15;
    v14[1] = v15[1];
    uint64_t v59 = (int *)v16;
    uint64_t v18 = *(int *)(v16 + 20);
    uint64_t v19 = (char *)v14 + v18;
    uint64_t v20 = (char *)v15 + v18;
    uint64_t v21 = type metadata accessor for Locale();
    swift_bridgeObjectRetain();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v20, 1, v21))
    {
      uint64_t v22 = sub_10017DF08(&qword_100E63730);
      memcpy(v19, v20, *(void *)(*(void *)(v22 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16))(v19, v20, v21);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v19, 0, 1, v21);
    }
    uint64_t v23 = *(int *)(v16 + 24);
    uint64_t v24 = (char *)v14 + v23;
    uint64_t v25 = (char *)v15 + v23;
    uint64_t v26 = type metadata accessor for WeatherDataModel();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 16))(v24, v25, v26);
    uint64_t v27 = v59[7];
    uint64_t v28 = (char *)v14 + v27;
    uint64_t v29 = (char *)v15 + v27;
    uint64_t v30 = sub_10017DF08(&qword_100E63738);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v29, 1, v30))
    {
      uint64_t v31 = type metadata accessor for WeatherData.CachingState(0);
      memcpy(v28, v29, *(void *)(*(void *)(v31 - 8) + 64));
    }
    else
    {
      uint64_t v32 = type metadata accessor for Date();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 16))(v28, v29, v32);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v28, 0, 1, v30);
    }
    uint64_t v33 = v59[8];
    uint64_t v34 = (void *)((char *)v14 + v33);
    uint64_t v35 = (void *)((char *)v15 + v33);
    uint64_t v36 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
    int v37 = swift_getEnumCaseMultiPayload();
    if (v37 == 1)
    {
      uint64_t v38 = type metadata accessor for WeatherStatisticsModel();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v38 - 8) + 16))(v34, v35, v38);
    }
    else
    {
      if (v37)
      {
        memcpy(v34, v35, *(void *)(*(void *)(v36 - 8) + 64));
        goto LABEL_20;
      }
      *uint64_t v34 = *v35;
      v34[1] = v35[1];
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
LABEL_20:
    uint64_t v39 = v59[9];
    uint64_t v40 = (char *)v14 + v39;
    int v41 = (char *)v15 + v39;
    uint64_t v42 = type metadata accessor for WeatherDataOverrides();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v41, 1, v42))
    {
      uint64_t v43 = sub_10017DF08(&qword_100E63740);
      memcpy(v40, v41, *(void *)(*(void *)(v43 - 8) + 64));
    }
    else
    {
      uint64_t v44 = type metadata accessor for Date();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v41, 1, v44))
      {
        uint64_t v45 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
        memcpy(v40, v41, *(void *)(*(void *)(v45 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v44 - 8) + 16))(v40, v41, v44);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v40, 0, 1, v44);
      }
      uint64_t v46 = *(int *)(v42 + 20);
      __dst = &v40[v46];
      uint64_t v47 = &v41[v46];
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v47, 1, v44))
      {
        uint64_t v48 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
        memcpy(__dst, v47, *(void *)(*(void *)(v48 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v44 - 8) + 16))(__dst, v47, v44);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dst, 0, 1, v44);
      }
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v40, 0, 1, v42);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v14, 0, 1, (uint64_t)v59);
    goto LABEL_30;
  }
  if (!EnumCaseMultiPayload)
  {
    *a1 = *a2;
    a1[1] = a2[1];
    a1[2] = a2[2];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
LABEL_31:
    swift_storeEnumTagMultiPayload();
    return a1;
  }
  memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

uint64_t type metadata accessor for ConditionDetailDynamicContentIdentifier()
{
  uint64_t result = qword_100EAD0E8;
  if (!qword_100EAD0E8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

_OWORD *sub_100A7607C(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *a1 = *a2;
    uint64_t v6 = (int *)type metadata accessor for ConditionDetailMapViewModel();
    uint64_t v7 = v6[5];
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = type metadata accessor for Location();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
    uint64_t v11 = v6[6];
    uint64_t v12 = (_OWORD *)((char *)a1 + v11);
    uint64_t v13 = (_OWORD *)((char *)a2 + v11);
    uint64_t v14 = (int *)type metadata accessor for WeatherData(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v13, 1, (uint64_t)v14))
    {
      uint64_t v15 = sub_10017DF08(&qword_100E63850);
      memcpy(v12, v13, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      *uint64_t v12 = *v13;
      uint64_t v16 = v14[5];
      uint64_t v17 = (char *)v12 + v16;
      uint64_t v18 = (char *)v13 + v16;
      uint64_t v19 = type metadata accessor for Locale();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v18, 1, v19))
      {
        uint64_t v20 = sub_10017DF08(&qword_100E63730);
        memcpy(v17, v18, *(void *)(*(void *)(v20 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 32))(v17, v18, v19);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v17, 0, 1, v19);
      }
      uint64_t v21 = v14[6];
      uint64_t v22 = (char *)v12 + v21;
      uint64_t v23 = (char *)v13 + v21;
      uint64_t v24 = type metadata accessor for WeatherDataModel();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 32))(v22, v23, v24);
      uint64_t v25 = v14[7];
      uint64_t v26 = (char *)v12 + v25;
      uint64_t v27 = (char *)v13 + v25;
      uint64_t v28 = sub_10017DF08(&qword_100E63738);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v27, 1, v28))
      {
        uint64_t v29 = type metadata accessor for WeatherData.CachingState(0);
        memcpy(v26, v27, *(void *)(*(void *)(v29 - 8) + 64));
      }
      else
      {
        uint64_t v30 = type metadata accessor for Date();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 32))(v26, v27, v30);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v26, 0, 1, v28);
      }
      uint64_t v31 = v14[8];
      uint64_t v32 = (char *)v12 + v31;
      uint64_t v33 = (char *)v13 + v31;
      uint64_t v34 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v35 = type metadata accessor for WeatherStatisticsModel();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 32))(v32, v33, v35);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v32, v33, *(void *)(*(void *)(v34 - 8) + 64));
      }
      uint64_t v36 = v14[9];
      int v37 = (char *)v12 + v36;
      uint64_t v38 = (char *)v13 + v36;
      uint64_t v39 = type metadata accessor for WeatherDataOverrides();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v38, 1, v39))
      {
        uint64_t v40 = sub_10017DF08(&qword_100E63740);
        memcpy(v37, v38, *(void *)(*(void *)(v40 - 8) + 64));
      }
      else
      {
        uint64_t v41 = type metadata accessor for Date();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v38, 1, v41))
        {
          uint64_t v42 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
          memcpy(v37, v38, *(void *)(*(void *)(v42 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v41 - 8) + 32))(v37, v38, v41);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v37, 0, 1, v41);
        }
        uint64_t v43 = *(int *)(v39 + 20);
        __dst = &v37[v43];
        uint64_t v44 = &v38[v43];
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v44, 1, v41))
        {
          uint64_t v45 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
          memcpy(__dst, v44, *(void *)(*(void *)(v45 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v41 - 8) + 32))(__dst, v44, v41);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dst, 0, 1, v41);
        }
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v37, 0, 1, v39);
      }
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v12, 0, 1, (uint64_t)v14);
    }
    *(_OWORD *)((char *)a1 + v6[7]) = *(_OWORD *)((char *)a2 + v6[7]);
    uint64_t v46 = v6[8];
    uint64_t v47 = (char *)a1 + v46;
    uint64_t v48 = (char *)a2 + v46;
    uint64_t v49 = type metadata accessor for WeatherMapOverlayKind();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v49 - 8) + 32))(v47, v48, v49);
    *((unsigned char *)a1 + v6[9]) = *((unsigned char *)a2 + v6[9]);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

_OWORD *sub_100A76624(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_100A772E0((uint64_t)a1, (void (*)(void))type metadata accessor for ConditionDetailDynamicContentIdentifier);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      uint64_t v6 = (int *)type metadata accessor for ConditionDetailMapViewModel();
      uint64_t v7 = v6[5];
      uint64_t v8 = (char *)a1 + v7;
      uint64_t v9 = (char *)a2 + v7;
      uint64_t v10 = type metadata accessor for Location();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
      uint64_t v11 = v6[6];
      uint64_t v12 = (_OWORD *)((char *)a1 + v11);
      uint64_t v13 = (_OWORD *)((char *)a2 + v11);
      uint64_t v14 = (int *)type metadata accessor for WeatherData(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v13, 1, (uint64_t)v14))
      {
        uint64_t v15 = sub_10017DF08(&qword_100E63850);
        memcpy(v12, v13, *(void *)(*(void *)(v15 - 8) + 64));
      }
      else
      {
        *uint64_t v12 = *v13;
        uint64_t v16 = v14[5];
        uint64_t v17 = (char *)v12 + v16;
        uint64_t v18 = (char *)v13 + v16;
        uint64_t v19 = type metadata accessor for Locale();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v18, 1, v19))
        {
          uint64_t v20 = sub_10017DF08(&qword_100E63730);
          memcpy(v17, v18, *(void *)(*(void *)(v20 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 32))(v17, v18, v19);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v17, 0, 1, v19);
        }
        uint64_t v21 = v14[6];
        uint64_t v22 = (char *)v12 + v21;
        uint64_t v23 = (char *)v13 + v21;
        uint64_t v24 = type metadata accessor for WeatherDataModel();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 32))(v22, v23, v24);
        uint64_t v25 = v14[7];
        uint64_t v26 = (char *)v12 + v25;
        uint64_t v27 = (char *)v13 + v25;
        uint64_t v28 = sub_10017DF08(&qword_100E63738);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v27, 1, v28))
        {
          uint64_t v29 = type metadata accessor for WeatherData.CachingState(0);
          memcpy(v26, v27, *(void *)(*(void *)(v29 - 8) + 64));
        }
        else
        {
          uint64_t v30 = type metadata accessor for Date();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 32))(v26, v27, v30);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v26, 0, 1, v28);
        }
        uint64_t v31 = v14[8];
        uint64_t v32 = (char *)v12 + v31;
        uint64_t v33 = (char *)v13 + v31;
        uint64_t v34 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          uint64_t v35 = type metadata accessor for WeatherStatisticsModel();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 32))(v32, v33, v35);
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(v32, v33, *(void *)(*(void *)(v34 - 8) + 64));
        }
        uint64_t v36 = v14[9];
        int v37 = (char *)v12 + v36;
        uint64_t v38 = (char *)v13 + v36;
        uint64_t v39 = type metadata accessor for WeatherDataOverrides();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v38, 1, v39))
        {
          uint64_t v40 = sub_10017DF08(&qword_100E63740);
          memcpy(v37, v38, *(void *)(*(void *)(v40 - 8) + 64));
        }
        else
        {
          uint64_t v41 = type metadata accessor for Date();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v38, 1, v41))
          {
            uint64_t v42 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
            memcpy(v37, v38, *(void *)(*(void *)(v42 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v41 - 8) + 32))(v37, v38, v41);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v37, 0, 1, v41);
          }
          uint64_t v43 = *(int *)(v39 + 20);
          __dst = &v37[v43];
          uint64_t v44 = &v38[v43];
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v44, 1, v41))
          {
            uint64_t v45 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
            memcpy(__dst, v44, *(void *)(*(void *)(v45 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v41 - 8) + 32))(__dst, v44, v41);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dst, 0, 1, v41);
          }
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v37, 0, 1, v39);
        }
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v12, 0, 1, (uint64_t)v14);
      }
      *(_OWORD *)((char *)a1 + v6[7]) = *(_OWORD *)((char *)a2 + v6[7]);
      uint64_t v46 = v6[8];
      uint64_t v47 = (char *)a1 + v46;
      uint64_t v48 = (char *)a2 + v46;
      uint64_t v49 = type metadata accessor for WeatherMapOverlayKind();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v49 - 8) + 32))(v47, v48, v49);
      *((unsigned char *)a1 + v6[9]) = *((unsigned char *)a2 + v6[9]);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_100A76BF0()
{
  uint64_t result = type metadata accessor for ConditionDetailMapViewModel();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_100A76C84(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ConditionDetailMapViewModel();
  __chkstk_darwin(v4 - 8);
  sub_1001626E0();
  uint64_t v7 = (void *)(v6 - v5);
  type metadata accessor for ConditionDetailDynamicContentIdentifier();
  sub_100162E4C();
  __chkstk_darwin(v8);
  sub_10016278C();
  uint64_t v11 = (void *)(v9 - v10);
  __chkstk_darwin(v12);
  uint64_t v14 = (uint64_t *)((char *)&v29 - v13);
  uint64_t v15 = sub_10017DF08(&qword_100EAD120);
  __chkstk_darwin(v15 - 8);
  sub_1001626E0();
  uint64_t v18 = v17 - v16;
  uint64_t v20 = (void *)(v17 - v16 + *(int *)(v19 + 56));
  sub_100A7728C(a1, v17 - v16, (void (*)(void))type metadata accessor for ConditionDetailDynamicContentIdentifier);
  sub_100A7728C(a2, (uint64_t)v20, (void (*)(void))type metadata accessor for ConditionDetailDynamicContentIdentifier);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_100A7728C(v18, (uint64_t)v11, (void (*)(void))type metadata accessor for ConditionDetailDynamicContentIdentifier);
      if (sub_1001A288C() != 1)
      {
        sub_100A772E0((uint64_t)v11, (void (*)(void))type metadata accessor for ConditionDetailMapViewModel);
        goto LABEL_11;
      }
      sub_100A7722C((uint64_t)v20, (uint64_t)v7, (void (*)(void))type metadata accessor for ConditionDetailMapViewModel);
      char v24 = sub_100931314(v11, v7);
      sub_100A772E0((uint64_t)v7, (void (*)(void))type metadata accessor for ConditionDetailMapViewModel);
      sub_100A772E0((uint64_t)v11, (void (*)(void))type metadata accessor for ConditionDetailMapViewModel);
      sub_100A772E0(v18, (void (*)(void))type metadata accessor for ConditionDetailDynamicContentIdentifier);
      return v24 & 1;
    case 2u:
      if (sub_1001A288C() != 2) {
        goto LABEL_11;
      }
      goto LABEL_19;
    case 3u:
      if (sub_1001A288C() == 3) {
        goto LABEL_19;
      }
      goto LABEL_11;
    default:
      sub_100A7728C(v18, (uint64_t)v14, (void (*)(void))type metadata accessor for ConditionDetailDynamicContentIdentifier);
      uint64_t v22 = *v14;
      uint64_t v21 = v14[1];
      uint64_t v23 = v14[2];
      if (sub_1001A288C())
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_11:
        sub_1001781AC(v18, &qword_100EAD120);
        goto LABEL_12;
      }
      uint64_t v25 = v20[2];
      BOOL v26 = v22 == *v20 && v21 == v20[1];
      if (!v26 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_22;
      }
      char v27 = sub_100BD8F98(v23, v25);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v27 & 1) == 0)
      {
LABEL_22:
        sub_100A772E0(v18, (void (*)(void))type metadata accessor for ConditionDetailDynamicContentIdentifier);
LABEL_12:
        char v24 = 0;
        return v24 & 1;
      }
LABEL_19:
      sub_100A772E0(v18, (void (*)(void))type metadata accessor for ConditionDetailDynamicContentIdentifier);
      char v24 = 1;
      return v24 & 1;
  }
}

unint64_t sub_100A77030()
{
  unint64_t result = qword_100EAD158;
  if (!qword_100EAD158)
  {
    sub_10018C6DC(&qword_100EAD150);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAD158);
  }
  return result;
}

unint64_t sub_100A77084()
{
  unint64_t result = qword_100EAD168;
  if (!qword_100EAD168)
  {
    sub_10018C6DC(&qword_100EAD148);
    sub_100A77130(&qword_100EAD170, (void (*)(uint64_t))type metadata accessor for WindCategoryTableView);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAD168);
  }
  return result;
}

uint64_t sub_100A77130(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100A77178()
{
  unint64_t result = qword_100EAD178;
  if (!qword_100EAD178)
  {
    sub_10018C6DC(&qword_100EAD130);
    sub_100A77030();
    sub_100A77130(&qword_100EAD160, (void (*)(uint64_t))type metadata accessor for ConditionDetailMapView);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAD178);
  }
  return result;
}

uint64_t sub_100A7722C(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(a2, a1);
  return a2;
}

uint64_t sub_100A7728C(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  uint64_t v4 = sub_10011BFA4();
  v5(v4);
  return a2;
}

uint64_t sub_100A772E0(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_100A77338(uint64_t a1)
{
  type metadata accessor for MainAction();
  sub_100162E4C();
  __chkstk_darwin(v4);
  sub_100162E88();
  uint64_t v5 = *(uint64_t (**)(uint64_t))(v2 + 16);
  type metadata accessor for Date();
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v6 + 16))(v1, a1);
  type metadata accessor for MoonDetailViewAction();
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  sub_10017C9D8();
  sub_1001AAF58(v1, (uint64_t)v8, v5);
  sub_100016E7C((uint64_t)v8);
  sub_1001ABE70(v1);
  return swift_release();
}

uint64_t sub_100A77434(uint64_t a1)
{
  type metadata accessor for MainAction();
  sub_100162E4C();
  __chkstk_darwin(v4);
  sub_100162E88();
  uint64_t v5 = *(uint64_t (**)(uint64_t))(v2 + 16);
  type metadata accessor for Date();
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v6 + 16))(v1, a1);
  type metadata accessor for MoonDetailSelectedDate();
  swift_storeEnumTagMultiPayload();
  type metadata accessor for MoonDetailViewAction();
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  sub_10017C9D8();
  sub_1001AAF58(v1, (uint64_t)v8, v5);
  sub_100016E7C((uint64_t)v8);
  sub_1001ABE70(v1);
  return swift_release();
}

uint64_t type metadata accessor for MoonCalendarInteractor()
{
  return self;
}

ValueMetadata *type metadata accessor for SunriseSunsetDetailTracker()
{
  return &type metadata for SunriseSunsetDetailTracker;
}

uint64_t sub_100A7757C(uint64_t a1)
{
  uint64_t v2 = sub_10017DF08(&qword_100E76B00);
  sub_100179C0C();
  uint64_t v65 = v3;
  __chkstk_darwin(v4);
  sub_100109314();
  uint64_t v64 = v5;
  uint64_t v6 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  __chkstk_darwin(v6 - 8);
  sub_100109314();
  uint64_t v63 = v7;
  uint64_t v69 = (void (*)(char *, uint64_t))type metadata accessor for ActivityAction();
  __chkstk_darwin(v69);
  sub_100109314();
  uint64_t v70 = v8;
  uint64_t v9 = type metadata accessor for URLHandlerMatch.Values();
  sub_100179C0C();
  uint64_t v11 = v10;
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v62 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v62 - v16;
  uint64_t v18 = type metadata accessor for URLHandlerMatch();
  sub_100179C0C();
  uint64_t v20 = v19;
  __chkstk_darwin(v21);
  __chkstk_darwin(v22);
  char v24 = (char *)&v62 - v23;
  uint64_t v71 = v2;
  uint64_t v73 = a1;
  URLHandlerContext.match.getter();
  URLHandlerMatch.values.getter();
  char v27 = *(void (**)(void))(v20 + 8);
  uint64_t v25 = (void (*)(char *, uint64_t))(v20 + 8);
  BOOL v26 = v27;
  uint64_t v66 = v24;
  sub_10019F72C();
  v27();
  LOBYTE(a1) = sub_1002349B0();
  uint64_t v28 = *(void (**)(char *, uint64_t))(v11 + 8);
  long long v67 = v17;
  uint64_t v68 = v28;
  v28(v17, v9);
  if (a1)
  {
    sub_1001B1E64((void *)(v72 + 48), *(void *)(v72 + 72));
    uint64_t v29 = v70;
    swift_storeEnumTagMultiPayload();
    char v30 = static LocationSearchEntityFromStringResolver.__derived_struct_equals(_:_:)();
    char v31 = variable initialization expression of SessionEventsAndDataCoordinator.loadedViaReferral();
    sub_100389228(v29, v30 & 1, v31 & 1);
    sub_1002AE148(v29);
  }
  else
  {
    uint64_t v32 = v71;
    URLHandlerContext.match.getter();
    URLHandlerMatch.values.getter();
    sub_10019F72C();
    v26();
    uint64_t v33 = sub_100234CA8();
    double v35 = v34;
    char v37 = v36;
    uint64_t v38 = v14;
    uint64_t v39 = v68;
    v68(v38, v9);
    if (v37)
    {
      uint64_t v68 = v25;
      uint64_t v69 = (void (*)(char *, uint64_t))v26;
      uint64_t v72 = v18;
      uint64_t v48 = v73;
      uint64_t v70 = v9;
      if (qword_100E62840 != -1) {
        swift_once();
      }
      uint64_t v49 = type metadata accessor for Logger();
      sub_1002102B0(v49, (uint64_t)qword_100F51FC8);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v65 + 16))(v64, v48, v32);
      uint64_t v50 = Logger.logObject.getter();
      os_log_type_t v51 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v50, v51))
      {
        uint64_t v52 = swift_slowAlloc();
        uint64_t v53 = swift_slowAlloc();
        uint64_t v73 = v53;
        *(_DWORD *)uint64_t v52 = 141558275;
        uint64_t v74 = 1752392040;
        uint64_t v75 = v53;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v52 + 12) = 2081;
        uint64_t v63 = v52 + 14;
        uint64_t v54 = v66;
        URLHandlerContext.match.getter();
        URLHandlerMatch.values.getter();
        v69(v54, v72);
        uint64_t v55 = String.init<A>(describing:)();
        uint64_t v74 = sub_10016414C(v55, v56, &v75);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        uint64_t v57 = sub_10017E36C();
        v58(v57);
        _os_log_impl((void *)&_mh_execute_header, v50, v51, "No coordinates available in URL, matches=%{private,mask.hash}s", (uint8_t *)v52, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        uint64_t v59 = sub_10017E36C();
        v60(v59);
      }
    }
    else
    {
      double v40 = v35;
      URLHandlerContext.match.getter();
      uint64_t v41 = v67;
      URLHandlerMatch.values.getter();
      sub_10019F72C();
      v26();
      uint64_t v42 = sub_1002350F8();
      unint64_t v44 = v43;
      v39(v41, v9);
      uint64_t v45 = type metadata accessor for Date();
      uint64_t v46 = v63;
      _s7Weather24LocationCompositionStateOwst_0(v63, 1, 1, v45);
      sub_1002AB8F0();
      uint64_t v47 = Dictionary.init(dictionaryLiteral:)();
      sub_1002AA938(v42, v44, 17, v46, v47, *(double *)&v33, v40);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1001E7540(v46);
    }
  }
  return 1;
}

uint64_t type metadata accessor for LocationURLHandler()
{
  return self;
}

uint64_t sub_100A77BA8(uint64_t a1)
{
  return 1;
}

unint64_t sub_100A77BD0(uint64_t a1)
{
  unint64_t result = sub_100A77BF8();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_100A77BF8()
{
  unint64_t result = qword_100EA5CD8;
  if (!qword_100EA5CD8)
  {
    type metadata accessor for LocationURLHandler();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA5CD8);
  }
  return result;
}

uint64_t sub_100A77C8C(uint64_t a1, uint64_t a2)
{
  uint64_t v27 = a2;
  uint64_t v2 = type metadata accessor for TimeState();
  __chkstk_darwin(v2 - 8);
  uint64_t v30 = (uint64_t)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for WeatherDataConfiguration();
  uint64_t v28 = *(void *)(v4 - 8);
  uint64_t v29 = v4;
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for AppConfigurationState();
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for CurrentWeather();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for Date();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v20 = (char *)&v27 - v19;
  type metadata accessor for WeatherData(0);
  WeatherDataModel.currentWeather.getter();
  CurrentWeather.date.getter();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  uint64_t v21 = v27;
  sub_1001BC334(v27 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_appConfiguration, (uint64_t)v9, (void (*)(void))type metadata accessor for AppConfigurationState);
  AppConfiguration.weatherData.getter();
  uint64_t v22 = type metadata accessor for AppConfiguration();
  (*(void (**)(char *, uint64_t))(*(void *)(v22 - 8) + 8))(v9, v22);
  WeatherDataConfiguration.offlineDataFreshnessInterval.getter();
  (*(void (**)(char *, uint64_t))(v28 + 8))(v6, v29);
  Date.addingTimeInterval(_:)();
  uint64_t v23 = v30;
  sub_1001BC334(v21 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_time, v30, (void (*)(void))type metadata accessor for TimeState);
  char v24 = static Date.> infix(_:_:)();
  uint64_t v25 = *(void (**)(char *, uint64_t))(v15 + 8);
  v25(v17, v14);
  v25(v20, v14);
  v25((char *)v23, v14);
  return v24 & 1;
}

uint64_t sub_100A78058(char a1)
{
  type metadata accessor for URL();
  sub_10017CE00();
  uint64_t v4 = v3;
  __chkstk_darwin(v5);
  sub_1001626E0();
  uint64_t v8 = v7 - v6;
  sub_100A78300(a1, v7 - v6);
  id v9 = [objc_allocWithZone((Class)LSApplicationWorkspace) init];
  URL._bridgeToObjectiveC()(v10);
  uint64_t v12 = v11;
  uint64_t v13 = Dictionary.init(dictionaryLiteral:)();
  sub_100A78614((uint64_t)v12, v13, v9);

  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v8, v1);
  return 1;
}

BOOL sub_100A78160()
{
  uint64_t v1 = sub_10017DF08(&qword_100E749B0);
  __chkstk_darwin(v1 - 8);
  sub_1001626E0();
  uint64_t v4 = v3 - v2;
  type metadata accessor for URL();
  sub_10017CE00();
  uint64_t v6 = v5;
  __chkstk_darwin(v7);
  sub_1001626E0();
  uint64_t v10 = v9 - v8;
  URL.init(string:)();
  int v11 = _s7Weather24LocationCompositionStateOwet_0(v4, 1, v0);
  if (v11 == 1)
  {
    sub_100658530(v4);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(v10, v4, v0);
    id v12 = [objc_allocWithZone((Class)LSApplicationWorkspace) init];
    URL._bridgeToObjectiveC()(v13);
    uint64_t v15 = v14;
    uint64_t v16 = Dictionary.init(dictionaryLiteral:)();
    sub_100A78614((uint64_t)v15, v16, v12);

    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v10, v0);
  }
  return v11 != 1;
}

uint64_t sub_100A78300@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_10017DF08(&qword_100E749B0);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v5);
  uint64_t v10 = (char *)&v26 - v9;
  uint64_t v11 = __chkstk_darwin(v8);
  uint64_t v13 = (char *)&v26 - v12;
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v26 - v14;
  switch(a1)
  {
    case 1:
      URL.init(string:)();
      uint64_t v16 = type metadata accessor for URL();
      sub_100162F8C((uint64_t)v13);
      if (v17) {
        goto LABEL_15;
      }
      sub_100180454();
      uint64_t v19 = *(uint64_t (**)(uint64_t, char *, uint64_t))(v25 + 32);
      uint64_t v20 = a2;
      uint64_t v21 = v13;
      return v19(v20, v21, v16);
    case 2:
      URL.init(string:)();
      uint64_t v16 = type metadata accessor for URL();
      sub_100162F8C((uint64_t)v10);
      if (v17)
      {
        __break(1u);
LABEL_13:
        __break(1u);
LABEL_14:
        __break(1u);
LABEL_15:
        __break(1u);
LABEL_16:
        _assertionFailure(_:_:file:line:flags:)();
        __break(1u);
        JUMPOUT(0x100A78600);
      }
      sub_100180454();
      uint64_t v19 = *(uint64_t (**)(uint64_t, char *, uint64_t))(v22 + 32);
      uint64_t v20 = a2;
      uint64_t v21 = v10;
      return v19(v20, v21, v16);
    case 3:
      URL.init(string:)();
      uint64_t v23 = type metadata accessor for URL();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v7, 1, v23) == 1) {
        goto LABEL_14;
      }
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(void *)(v23 - 8) + 32))(a2, v7, v23);
    case 4:
      goto LABEL_16;
    default:
      URL.init(string:)();
      uint64_t v16 = type metadata accessor for URL();
      sub_100162F8C((uint64_t)v15);
      if (v17) {
        goto LABEL_13;
      }
      sub_100180454();
      uint64_t v19 = *(uint64_t (**)(uint64_t, char *, uint64_t))(v18 + 32);
      uint64_t v20 = a2;
      uint64_t v21 = v15;
      return v19(v20, v21, v16);
  }
}

id sub_100A78614(uint64_t a1, uint64_t a2, void *a3)
{
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v6 = [a3 openSensitiveURL:a1 withOptions:isa];

  return v6;
}

uint64_t sub_100A78698()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC7Weather33InteractiveMapNetworkActivityFlow_label;
  uint64_t v2 = type metadata accessor for WeatherNetworkActivity.Label();
  uint64_t v3 = *(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  v3(v1, v2);
  uint64_t v4 = sub_10017AD80(OBJC_IVAR____TtC7Weather33InteractiveMapNetworkActivityFlow_metadataLabel);
  ((void (*)(uint64_t))v3)(v4);
  uint64_t v5 = sub_10017AD80(OBJC_IVAR____TtC7Weather33InteractiveMapNetworkActivityFlow_tilesLabel);
  ((void (*)(uint64_t))v3)(v5);
  uint64_t v6 = sub_10017AD80(OBJC_IVAR____TtC7Weather33InteractiveMapNetworkActivityFlow_overlayTileLabel);
  ((void (*)(uint64_t))v3)(v6);
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_100A78784()
{
  sub_100A78698();
  sub_10017C924();

  return swift_deallocClassInstance();
}

uint64_t sub_100A787BC()
{
  return type metadata accessor for InteractiveMapNetworkActivityFlow();
}

uint64_t sub_100A787C4()
{
  uint64_t v1 = type metadata accessor for NetworkActivityCompletion();
  __chkstk_darwin(v1);
  sub_10016279C();
  type metadata accessor for UnfairLock();
  swift_retain();
  Lock.sync<A>(_:)();
  swift_release();
  sub_100089EEC();
  return sub_100089DA4(v0);
}

uint64_t sub_100A788B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t v154 = a3;
  uint64_t v157 = a2;
  uint64_t v6 = type metadata accessor for NWActivity.CompletionReason();
  uint64_t v151 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v147 = (char *)&v130 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  Swift::String v150 = (char *)&v130 - v9;
  __chkstk_darwin(v10);
  uint64_t v148 = (char *)&v130 - v11;
  uint64_t v12 = sub_10017DF08(&qword_100E855D0);
  __chkstk_darwin(v12 - 8);
  uint64_t v146 = (uint64_t)&v130 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v145 = (uint64_t)&v130 - v15;
  uint64_t v16 = type metadata accessor for WeatherNetworkActivity.Label();
  uint64_t v138 = *(void *)(v16 - 8);
  uint64_t v139 = v16;
  __chkstk_darwin(v16);
  uint64_t v144 = (char *)&v130 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v137 = type metadata accessor for WeatherNetworkActivity.Domain();
  uint64_t v136 = *(void *)(v137 - 8);
  __chkstk_darwin(v137);
  uint64_t v140 = (char *)&v130 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for WeatherNetworkActivity();
  uint64_t v142 = *(void *)(v19 - 8);
  uint64_t v143 = v19;
  __chkstk_darwin(v19);
  uint64_t v141 = (char *)&v130 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = type metadata accessor for WeatherMap.Event();
  uint64_t v156 = *(void (**)(char *, uint64_t))(v21 - 8);
  __chkstk_darwin(v21);
  uint64_t v152 = (unsigned __int8 *)&v130 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  uint64_t v149 = (char *)&v130 - v24;
  __chkstk_darwin(v25);
  uint64_t v155 = (char *)&v130 - v26;
  __chkstk_darwin(v27);
  uint64_t v153 = (char *)&v130 - v28;
  __chkstk_darwin(v29);
  char v31 = (char *)&v130 - v30;
  __chkstk_darwin(v32);
  double v34 = (char *)&v130 - v33;
  uint64_t v35 = type metadata accessor for WeatherMapPurpose();
  uint64_t v36 = *(void *)(v35 - 8);
  __n128 v37 = __chkstk_darwin(v35);
  uint64_t v39 = (uint64_t *)((char *)&v130 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, uint64_t, uint64_t, __n128))(v36 + 16))(v39, a1, v35, v37);
  if ((*(unsigned int (**)(uint64_t *, uint64_t))(v36 + 88))(v39, v35) != enum case for WeatherMapPurpose.interactive(_:))
  {
    (*(void (**)(uint64_t *, uint64_t))(v36 + 8))(v39, v35);
LABEL_9:
    uint64_t v46 = type metadata accessor for NetworkActivityCompletion();
    uint64_t result = _s7Weather24LocationCompositionStateOwst_0((uint64_t)a4 + *(int *)(v46 + 24), 1, 1, v6);
    *a4 = _swiftEmptyArrayStorage;
    a4[1] = _swiftEmptyArrayStorage;
    return result;
  }
  (*(void (**)(uint64_t *, uint64_t))(v36 + 96))(v39, v35);
  uint64_t v40 = *v39;
  uint64_t v41 = v39[1];
  uint64_t v42 = *(void *)(v157 + OBJC_IVAR____TtC7Weather33InteractiveMapNetworkActivityFlow_locationId + 8);
  uint64_t v135 = a4;
  uint64_t v134 = v6;
  uint64_t v132 = (void *)(v157 + OBJC_IVAR____TtC7Weather33InteractiveMapNetworkActivityFlow_locationId);
  uint64_t v133 = v41;
  uint64_t v131 = v40;
  if (v42)
  {
    BOOL v43 = v40 == *(void *)(v157 + OBJC_IVAR____TtC7Weather33InteractiveMapNetworkActivityFlow_locationId)
       && v42 == v41;
    uint64_t v44 = v21;
    if (v43) {
      char v45 = 1;
    }
    else {
      char v45 = _stringCompareWithSmolCheck(_:_:expecting:)();
    }
  }
  else
  {
    char v45 = 0;
    uint64_t v44 = v21;
  }
  uint64_t v48 = v156;
  uint64_t v49 = (void (*)(char *, uint64_t, uint64_t))*((void *)v156 + 2);
  uint64_t v50 = v154;
  v49(v34, v154, v44);
  if (v45)
  {
    os_log_type_t v51 = (void (*)(char *, uint64_t))*((void *)v48 + 1);
    v51(v34, v44);
    uint64_t v52 = v153;
    v49(v153, v50, v44);
    v51(v52, v44);
    goto LABEL_16;
  }
  uint64_t v130 = (void (*)(char *, void, uint64_t))*((void *)v48 + 13);
  v130(v31, enum case for WeatherMap.Event.willStartLoading(_:), v44);
  char v53 = static WeatherMap.Event.== infix(_:_:)();
  os_log_type_t v51 = (void (*)(char *, uint64_t))*((void *)v48 + 1);
  v51(v31, v44);
  v51(v34, v44);
  uint64_t v54 = v153;
  v49(v153, v50, v44);
  if (v53)
  {
    uint64_t v48 = v156;
    v51(v54, v44);
    goto LABEL_16;
  }
  v130(v31, enum case for WeatherMap.Event.loadingWasInterruptedByUserInteraction(_:), v44);
  char v80 = static WeatherMap.Event.== infix(_:_:)();
  v51(v31, v44);
  v51(v54, v44);
  uint64_t v48 = v156;
  if ((v80 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    a4 = v135;
    uint64_t v6 = v134;
    goto LABEL_9;
  }
LABEL_16:
  uint64_t v55 = v155;
  v49(v155, v50, v44);
  int v56 = (*((uint64_t (**)(char *, uint64_t))v48 + 11))(v55, v44);
  if (v56 == enum case for WeatherMap.Event.didFinishLoading(_:))
  {
    swift_bridgeObjectRelease();
    uint64_t v57 = v152;
    v49((char *)v152, (uint64_t)v55, v44);
    (*((void (**)(unsigned __int8 *, uint64_t))v48 + 12))(v57, v44);
    uint64_t v58 = OBJC_IVAR____TtC7Weather33InteractiveMapNetworkActivityFlow_rootActivity;
    uint64_t v59 = v157;
    uint64_t v60 = *(void *)(v157 + OBJC_IVAR____TtC7Weather33InteractiveMapNetworkActivityFlow_rootActivity);
    if (v60)
    {
      int v61 = *v57;
      uint64_t v62 = v132;
      void *v132 = 0;
      v62[1] = 0;
      swift_retain();
      swift_bridgeObjectRelease();
      *(void *)(v59 + v58) = 0;
      swift_release();
      uint64_t v63 = v151;
      uint64_t v64 = (unsigned int *)&enum case for NWActivity.CompletionReason.success(_:);
      if (!v61) {
        uint64_t v64 = (unsigned int *)&enum case for NWActivity.CompletionReason.failure(_:);
      }
      uint64_t v65 = v150;
      uint64_t v66 = v134;
      (*(void (**)(char *, void, uint64_t))(v151 + 104))(v150, *v64, v134);
      sub_10031FD98(v60, v135);
      swift_release();
      (*(void (**)(char *, uint64_t))(v63 + 8))(v65, v66);
      long long v67 = v55;
      return ((uint64_t (*)(char *, uint64_t))v51)(v67, v44);
    }
    uint64_t v75 = v135;
    uint64_t v76 = v134;
    if (qword_100E62800 != -1) {
      swift_once();
    }
    uint64_t v90 = type metadata accessor for Logger();
    sub_1002102B0(v90, (uint64_t)qword_100F51F08);
    uint64_t v91 = Logger.logObject.getter();
    os_log_type_t v92 = static os_log_type_t.error.getter();
    if (!os_log_type_enabled(v91, v92)) {
      goto LABEL_59;
    }
    uint64_t v93 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v93 = 0;
    uint64_t v94 = "Map indicated it had finished loading for interactive map activity that wasn't tracked";
    goto LABEL_58;
  }
  int v68 = v56;
  if (v56 != enum case for WeatherMap.Event.overlay(_:))
  {
    uint64_t v156 = v51;
    uint64_t v81 = v135;
    uint64_t v82 = v134;
    if (v56 != enum case for WeatherMap.Event.willStartLoading(_:))
    {
      int v102 = enum case for WeatherMap.Event.loadingWasInterruptedByUserInteraction(_:);
      swift_bridgeObjectRelease();
      if (v68 == v102)
      {
        uint64_t v103 = v157;
        uint64_t v104 = *(void *)(v157 + OBJC_IVAR____TtC7Weather33InteractiveMapNetworkActivityFlow_tilesActivity);
        uint64_t v105 = OBJC_IVAR____TtC7Weather33InteractiveMapNetworkActivityFlow_rootActivity;
        uint64_t v106 = *(void *)(v157 + OBJC_IVAR____TtC7Weather33InteractiveMapNetworkActivityFlow_rootActivity);
        *(void *)(v157 + OBJC_IVAR____TtC7Weather33InteractiveMapNetworkActivityFlow_tilesActivity) = 0;
        *(void *)(v103 + v105) = 0;
        swift_retain();
        swift_release();
        uint64_t v158 = (uint64_t)_swiftEmptyArrayStorage;
        if (v104)
        {
          swift_retain_n();
          swift_retain();
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          if (*(void *)((v158 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v158 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          }
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();
        }
        else
        {
          swift_retain();
        }
        if (v106)
        {
          swift_retain();
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          if (*(void *)((v158 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v158 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          }
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();
        }
        uint64_t v119 = v158;
        swift_release();
        swift_release();
        uint64_t v120 = v151;
        uint64_t v121 = v147;
        (*(void (**)(char *, void, uint64_t))(v151 + 104))(v147, enum case for NWActivity.CompletionReason.cancelled(_:), v82);
        uint64_t v122 = (uint64_t)v81 + *(int *)(type metadata accessor for NetworkActivityCompletion() + 24);
        (*(void (**)(uint64_t, char *, uint64_t))(v120 + 16))(v122, v121, v82);
        _s7Weather24LocationCompositionStateOwst_0(v122, 0, 1, v82);
        swift_release();
        swift_release();
        *uint64_t v81 = _swiftEmptyArrayStorage;
        v81[1] = v119;
        (*(void (**)(char *, uint64_t))(v120 + 8))(v121, v82);
        char v123 = v155;
        return ((uint64_t (*)(char *, uint64_t))v156)(v123, v44);
      }
      goto LABEL_64;
    }
    uint64_t v83 = OBJC_IVAR____TtC7Weather33InteractiveMapNetworkActivityFlow_rootActivity;
    uint64_t v84 = v157;
    if (*(void *)(v157 + OBJC_IVAR____TtC7Weather33InteractiveMapNetworkActivityFlow_rootActivity))
    {
      swift_bridgeObjectRelease();
      if (qword_100E62800 != -1) {
        swift_once();
      }
      uint64_t v85 = type metadata accessor for Logger();
      sub_1002102B0(v85, (uint64_t)qword_100F51F08);
      uint64_t v86 = Logger.logObject.getter();
      os_log_type_t v87 = static os_log_type_t.error.getter();
      if (!os_log_type_enabled(v86, v87)) {
        goto LABEL_53;
      }
      uint64_t v88 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v88 = 0;
      uint64_t v89 = "InteractiveMapNetworkActivityFlow received duplicate willStartLoading events";
      goto LABEL_52;
    }
    (*(void (**)(char *, void, uint64_t))(v136 + 104))(v140, enum case for WeatherNetworkActivity.Domain.weather(_:), v137);
    (*(void (**)(char *, uint64_t, uint64_t))(v138 + 16))(v144, v84 + OBJC_IVAR____TtC7Weather33InteractiveMapNetworkActivityFlow_label, v139);
    uint64_t v112 = type metadata accessor for UUID();
    _s7Weather24LocationCompositionStateOwst_0(v145, 1, 1, v112);
    _s7Weather24LocationCompositionStateOwst_0(v146, 1, 1, v112);
    uint64_t v113 = v141;
    WeatherNetworkActivity.init(domain:label:token:parentToken:)();
    uint64_t v114 = WeatherNetworkActivity.createNWActivity()();
    (*(void (**)(char *, uint64_t))(v142 + 8))(v113, v143);
    long long v115 = v132;
    uint64_t v116 = v133;
    void *v132 = v131;
    v115[1] = v116;
    swift_bridgeObjectRelease();
    *(void *)(v84 + v83) = v114;
    swift_retain();
    swift_release();
    sub_10017DF08(&qword_100E6BBD0);
    uint64_t v117 = swift_allocObject();
    *(_OWORD *)(v117 + 16) = xmmword_100C31F30;
    *(void *)(v117 + 32) = v114;
LABEL_72:
    uint64_t v158 = v117;
    specialized Array._endMutation()();
    uint64_t v127 = v158;
    uint64_t v128 = type metadata accessor for NetworkActivityCompletion();
    char v129 = v135;
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v135 + *(int *)(v128 + 24), 1, 1, v134);
    *char v129 = v127;
    v129[1] = (uint64_t)_swiftEmptyArrayStorage;
    goto LABEL_73;
  }
  swift_bridgeObjectRelease();
  uint64_t v69 = (void (*)(char *, char *, uint64_t))v49;
  uint64_t v70 = v149;
  v69(v149, v55, v44);
  (*((void (**)(unsigned char *, uint64_t))v48 + 12))(v70, v44);
  uint64_t v71 = type metadata accessor for WeatherMap.Event.Overlay();
  uint64_t v72 = *(void *)(v71 - 8);
  int v73 = (*(uint64_t (**)(unsigned char *, uint64_t))(v72 + 88))(v70, v71);
  if (v73 == enum case for WeatherMap.Event.Overlay.didFinishLoadingTiles(_:))
  {
    (*(void (**)(unsigned char *, uint64_t))(v72 + 96))(v70, v71);
    uint64_t v74 = *(void *)(v157 + OBJC_IVAR____TtC7Weather33InteractiveMapNetworkActivityFlow_tilesActivity);
    uint64_t v75 = v135;
    uint64_t v76 = v134;
    if (v74)
    {
      *(void *)(v157 + OBJC_IVAR____TtC7Weather33InteractiveMapNetworkActivityFlow_tilesActivity) = 0;
      uint64_t v77 = v151;
      uint64_t v78 = (unsigned int *)&enum case for NWActivity.CompletionReason.success(_:);
      if (!*v70) {
        uint64_t v78 = (unsigned int *)&enum case for NWActivity.CompletionReason.failure(_:);
      }
      uint64_t v79 = v148;
      (*(void (**)(char *, void, uint64_t))(v151 + 104))(v148, *v78, v76);
      sub_10031FD98(v74, v75);
      swift_release();
      (*(void (**)(char *, uint64_t))(v77 + 8))(v79, v76);
      goto LABEL_60;
    }
    if (qword_100E62800 != -1) {
      swift_once();
    }
    uint64_t v110 = type metadata accessor for Logger();
    sub_1002102B0(v110, (uint64_t)qword_100F51F08);
    uint64_t v91 = Logger.logObject.getter();
    os_log_type_t v92 = static os_log_type_t.error.getter();
    if (!os_log_type_enabled(v91, v92))
    {
LABEL_59:

      uint64_t v111 = type metadata accessor for NetworkActivityCompletion();
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v75 + *(int *)(v111 + 24), 1, 1, v76);
      *uint64_t v75 = _swiftEmptyArrayStorage;
      v75[1] = _swiftEmptyArrayStorage;
LABEL_60:
      long long v67 = v155;
      return ((uint64_t (*)(char *, uint64_t))v51)(v67, v44);
    }
    uint64_t v93 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v93 = 0;
    uint64_t v94 = "Map indicated tiles had finished loading for interactive map activity that wasn't tracked";
LABEL_58:
    _os_log_impl((void *)&_mh_execute_header, v91, v92, v94, v93, 2u);
    swift_slowDealloc();
    goto LABEL_59;
  }
  uint64_t v156 = v51;
  uint64_t v81 = v135;
  uint64_t v82 = v134;
  if (v73 != enum case for WeatherMap.Event.Overlay.remove(_:))
  {
    if (v73 != enum case for WeatherMap.Event.Overlay.willStartLoadingTiles(_:))
    {
      (*(void (**)(unsigned char *, uint64_t))(v72 + 8))(v70, v71);
      goto LABEL_64;
    }
    uint64_t v107 = OBJC_IVAR____TtC7Weather33InteractiveMapNetworkActivityFlow_tilesActivity;
    uint64_t v108 = v157;
    if (*(void *)(v157 + OBJC_IVAR____TtC7Weather33InteractiveMapNetworkActivityFlow_tilesActivity))
    {
      if (qword_100E62800 != -1) {
        swift_once();
      }
      uint64_t v109 = type metadata accessor for Logger();
      sub_1002102B0(v109, (uint64_t)qword_100F51F08);
      uint64_t v86 = Logger.logObject.getter();
      os_log_type_t v87 = static os_log_type_t.error.getter();
      if (!os_log_type_enabled(v86, v87)) {
        goto LABEL_53;
      }
      uint64_t v88 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v88 = 0;
      uint64_t v89 = "InteractiveMapNetworkActivityFlow received duplicate overlay(.willStartLoadingTiles) events";
LABEL_52:
      _os_log_impl((void *)&_mh_execute_header, v86, v87, v89, v88, 2u);
      swift_slowDealloc();
LABEL_53:

LABEL_64:
      uint64_t v118 = type metadata accessor for NetworkActivityCompletion();
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v81 + *(int *)(v118 + 24), 1, 1, v82);
      *uint64_t v81 = _swiftEmptyArrayStorage;
      v81[1] = _swiftEmptyArrayStorage;
      goto LABEL_73;
    }
    (*(void (**)(char *, void, uint64_t))(v136 + 104))(v140, enum case for WeatherNetworkActivity.Domain.weather(_:), v137);
    (*(void (**)(char *, uint64_t, uint64_t))(v138 + 16))(v144, v108 + OBJC_IVAR____TtC7Weather33InteractiveMapNetworkActivityFlow_tilesLabel, v139);
    uint64_t v124 = type metadata accessor for UUID();
    _s7Weather24LocationCompositionStateOwst_0(v145, 1, 1, v124);
    _s7Weather24LocationCompositionStateOwst_0(v146, 1, 1, v124);
    uint64_t v125 = v141;
    WeatherNetworkActivity.init(domain:label:token:parentToken:)();
    uint64_t v126 = WeatherNetworkActivity.createNWActivity()();
    (*(void (**)(char *, uint64_t))(v142 + 8))(v125, v143);
    swift_retain();
    NWActivity.parentActivity.setter();
    *(void *)(v108 + v107) = v126;
    swift_retain();
    swift_release();
    sub_10017DF08(&qword_100E6BBD0);
    uint64_t v117 = swift_allocObject();
    *(_OWORD *)(v117 + 16) = xmmword_100C31F30;
    *(void *)(v117 + 32) = v126;
    goto LABEL_72;
  }
  (*(void (**)(unsigned char *, uint64_t))(v72 + 96))(v70, v71);
  uint64_t v95 = sub_10017DF08(&qword_100EAD4A0);
  uint64_t v96 = &v70[*(int *)(v95 + 48)];
  BOOL v97 = &v70[*(int *)(v95 + 64)];
  uint64_t v98 = type metadata accessor for NetworkActivityCompletion();
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v81 + *(int *)(v98 + 24), 1, 1, v82);
  *uint64_t v81 = _swiftEmptyArrayStorage;
  v81[1] = _swiftEmptyArrayStorage;
  uint64_t v99 = type metadata accessor for WeatherMapStallStatistics();
  (*(void (**)(unsigned char *, uint64_t))(*(void *)(v99 - 8) + 8))(v97, v99);
  uint64_t v100 = type metadata accessor for WeatherMapSessionStatistics();
  (*(void (**)(unsigned char *, uint64_t))(*(void *)(v100 - 8) + 8))(v96, v100);
  uint64_t v101 = type metadata accessor for WeatherMapOverlayKind();
  (*(void (**)(unsigned char *, uint64_t))(*(void *)(v101 - 8) + 8))(v70, v101);
LABEL_73:
  char v123 = v55;
  return ((uint64_t (*)(char *, uint64_t))v156)(v123, v44);
}

uint64_t sub_100A79C68()
{
  return sub_100A787C4();
}

uint64_t sub_100A79C8C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v59 = a2;
  uint64_t v60 = a1;
  uint64_t v2 = sub_10017DF08(&qword_100E855D0);
  uint64_t v3 = sub_100109308(v2);
  __chkstk_darwin(v3);
  sub_1001A0E98(v4, (uint64_t)v51);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v51 - v6;
  uint64_t v8 = type metadata accessor for WeatherNetworkActivity.Domain();
  sub_100179C0C();
  uint64_t v55 = v9;
  __chkstk_darwin(v10);
  sub_1001626E0();
  uint64_t v13 = v12 - v11;
  uint64_t v14 = sub_10017DF08(&qword_100EAB1C8);
  uint64_t v15 = sub_100109308(v14);
  __chkstk_darwin(v15);
  sub_1001626E0();
  uint64_t v18 = v17 - v16;
  uint64_t v19 = type metadata accessor for WeatherNetworkActivity.Label();
  sub_100179C0C();
  uint64_t v56 = v20;
  __chkstk_darwin(v21);
  uint64_t v23 = (char *)&v51 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  uint64_t v26 = (char *)&v51 - v25;
  uint64_t v27 = type metadata accessor for WeatherMapPurpose();
  sub_100179C0C();
  uint64_t v29 = v28;
  __chkstk_darwin(v30);
  sub_1001626E0();
  uint64_t v33 = (void *)(v32 - v31);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v29 + 16))(v32 - v31, v60, v27);
  if ((*(unsigned int (**)(void *, uint64_t))(v29 + 88))(v33, v27) == enum case for WeatherMapPurpose.interactive(_:))
  {
    uint64_t v60 = v18;
    os_log_type_t v51 = v23;
    uint64_t v52 = v26;
    uint64_t v53 = v8;
    uint64_t v54 = v13;
    uint64_t v35 = v56;
    uint64_t v34 = v57;
    (*(void (**)(void *, uint64_t))(v29 + 96))(v33, v27);
    uint64_t v36 = v58;
    uint64_t v37 = *(void *)(v58 + OBJC_IVAR____TtC7Weather33InteractiveMapNetworkActivityFlow_locationId + 8);
    if (v37)
    {
      if (*v33 == *(void *)(v58 + OBJC_IVAR____TtC7Weather33InteractiveMapNetworkActivityFlow_locationId)
        && v37 == v33[1])
      {
        swift_bridgeObjectRelease();
        uint64_t v40 = v34;
        uint64_t v41 = (uint64_t)v7;
        uint64_t v42 = v35;
      }
      else
      {
        char v39 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        uint64_t v40 = v34;
        uint64_t v41 = (uint64_t)v7;
        uint64_t v42 = v35;
        if ((v39 & 1) == 0) {
          goto LABEL_15;
        }
      }
      if (*(void *)(v36 + OBJC_IVAR____TtC7Weather33InteractiveMapNetworkActivityFlow_rootActivity))
      {
        swift_retain();
        uint64_t v43 = v60;
        sub_1000B37A4(v60);
        uint64_t v44 = v19;
        if (_s7Weather24LocationCompositionStateOwet_0(v43, 1, v19) != 1)
        {
          uint64_t v49 = v52;
          (*(void (**)(char *, uint64_t, uint64_t))(v42 + 32))(v52, v43, v44);
          (*(void (**)(uint64_t, void, uint64_t))(v55 + 104))(v54, enum case for WeatherNetworkActivity.Domain.weather(_:), v53);
          (*(void (**)(char *, char *, uint64_t))(v42 + 16))(v51, v49, v44);
          uint64_t v50 = type metadata accessor for UUID();
          _s7Weather24LocationCompositionStateOwst_0(v41, 1, 1, v50);
          NWActivity.token.getter();
          _s7Weather24LocationCompositionStateOwst_0(v40, 0, 1, v50);
          uint64_t v46 = v59;
          WeatherNetworkActivity.init(domain:label:token:parentToken:)();
          swift_release();
          (*(void (**)(char *, uint64_t))(v42 + 8))(v49, v44);
          uint64_t v45 = 0;
          goto LABEL_16;
        }
        swift_release();
        sub_100A331DC(v43);
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    (*(void (**)(void *, uint64_t))(v29 + 8))(v33, v27);
  }
LABEL_15:
  uint64_t v45 = 1;
  uint64_t v46 = v59;
LABEL_16:
  uint64_t v47 = type metadata accessor for WeatherNetworkActivity();
  return _s7Weather24LocationCompositionStateOwst_0(v46, v45, 1, v47);
}

uint64_t sub_100A7A0E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2;
  uint64_t v40 = a2;
  uint64_t v6 = sub_10017DF08(&qword_100E855D0);
  uint64_t v7 = sub_100109308(v6);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v39 = (uint64_t)&v37 - v11;
  uint64_t v12 = type metadata accessor for WeatherNetworkActivity.Label();
  sub_100179C0C();
  uint64_t v38 = v13;
  __chkstk_darwin(v14);
  sub_10016279C();
  uint64_t v15 = type metadata accessor for WeatherNetworkActivity.Domain();
  sub_100179C0C();
  uint64_t v37 = v16;
  __chkstk_darwin(v17);
  sub_1001626E0();
  uint64_t v20 = v19 - v18;
  uint64_t v21 = type metadata accessor for WeatherMapPurpose();
  sub_100179C0C();
  uint64_t v23 = v22;
  __chkstk_darwin(v24);
  sub_1001626E0();
  uint64_t v27 = (void *)(v26 - v25);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 16))(v26 - v25, a1, v21);
  if ((*(unsigned int (**)(void *, uint64_t))(v23 + 88))(v27, v21) != enum case for WeatherMapPurpose.interactive(_:))
  {
    (*(void (**)(void *, uint64_t))(v23 + 8))(v27, v21);
LABEL_11:
    uint64_t v33 = 1;
    uint64_t v32 = v40;
    goto LABEL_16;
  }
  (*(void (**)(void *, uint64_t))(v23 + 96))(v27, v21);
  uint64_t v28 = *(void *)(v4 + OBJC_IVAR____TtC7Weather33InteractiveMapNetworkActivityFlow_locationId + 8);
  if (!v28)
  {
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  uint64_t v29 = v4;
  if (*v27 == *(void *)(v4 + OBJC_IVAR____TtC7Weather33InteractiveMapNetworkActivityFlow_locationId) && v28 == v27[1])
  {
    swift_bridgeObjectRelease();
    uint64_t v32 = v40;
  }
  else
  {
    char v31 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    uint64_t v32 = v40;
    if ((v31 & 1) == 0) {
      goto LABEL_15;
    }
  }
  if (!*(void *)(v29 + OBJC_IVAR____TtC7Weather33InteractiveMapNetworkActivityFlow_tilesActivity))
  {
LABEL_15:
    uint64_t v33 = 1;
    goto LABEL_16;
  }
  (*(void (**)(uint64_t, void, uint64_t))(v37 + 104))(v20, enum case for WeatherNetworkActivity.Domain.weather(_:), v15);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v38 + 16))(v3, v29 + OBJC_IVAR____TtC7Weather33InteractiveMapNetworkActivityFlow_overlayTileLabel, v12);
  uint64_t v34 = type metadata accessor for UUID();
  _s7Weather24LocationCompositionStateOwst_0(v39, 1, 1, v34);
  swift_retain();
  NWActivity.token.getter();
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v9, 0, 1, v34);
  WeatherNetworkActivity.init(domain:label:token:parentToken:)();
  swift_release();
  uint64_t v33 = 0;
LABEL_16:
  uint64_t v35 = type metadata accessor for WeatherNetworkActivity();
  return _s7Weather24LocationCompositionStateOwst_0(v32, v33, 1, v35);
}

uint64_t sub_100A7A45C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100A79C8C(a1, a2);
}

uint64_t sub_100A7A480@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100A7A0E8(a1, a2);
}

unint64_t sub_100A7A4A4(uint64_t a1)
{
  unint64_t result = sub_100A7A4CC();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_100A7A4CC()
{
  unint64_t result = qword_100EAD498;
  if (!qword_100EAD498)
  {
    type metadata accessor for InteractiveMapNetworkActivityFlow();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAD498);
  }
  return result;
}

uint64_t sub_100A7A51C@<X0>(void *a1@<X8>)
{
  return sub_100A788B0(v1[2], v1[3], v1[4], a1);
}

uint64_t sub_100A7A528(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  uint64_t v321 = a3;
  uint64_t v322 = a2;
  uint64_t v320 = a1;
  uint64_t v3 = type metadata accessor for ModalViewState(0);
  sub_100162E4C();
  __chkstk_darwin(v4);
  sub_100109314();
  sub_100109338(v5);
  uint64_t v6 = sub_10017DF08(&qword_100E663E8);
  uint64_t v7 = sub_100109308(v6);
  __chkstk_darwin(v7);
  sub_100109314();
  sub_100109338(v8);
  uint64_t v9 = sub_10017DF08(&qword_100E663F0);
  uint64_t v10 = sub_100109308(v9);
  __chkstk_darwin(v10);
  sub_100109314();
  uint64_t v314 = v11;
  uint64_t v12 = sub_10017DF08(&qword_100E663F8);
  uint64_t v13 = sub_100109308(v12);
  __chkstk_darwin(v13);
  sub_100109314();
  sub_100109338(v14);
  uint64_t v15 = sub_10017DF08(&qword_100E66400);
  uint64_t v16 = sub_100109308(v15);
  __chkstk_darwin(v16);
  sub_100109314();
  sub_100109338(v17);
  uint64_t v18 = sub_10017DF08(&qword_100E66408);
  uint64_t v19 = sub_100109308(v18);
  __chkstk_darwin(v19);
  sub_100109314();
  sub_100109338(v20);
  uint64_t v21 = sub_10017DF08(&qword_100E66410);
  uint64_t v22 = sub_100109308(v21);
  __chkstk_darwin(v22);
  sub_100109314();
  uint64_t v24 = sub_100109328(v23);
  uint64_t v317 = type metadata accessor for ViewState(v24);
  sub_100162E4C();
  __chkstk_darwin(v25);
  sub_100109314();
  sub_100109338(v26);
  uint64_t v27 = sub_10017DF08(&qword_100E66418);
  uint64_t v28 = sub_100109308(v27);
  __chkstk_darwin(v28);
  sub_100109314();
  sub_100109338(v29);
  uint64_t v30 = sub_10017DF08(&qword_100E66420);
  uint64_t v31 = sub_100109308(v30);
  __chkstk_darwin(v31);
  sub_100109314();
  sub_100109338(v32);
  uint64_t v33 = sub_10017DF08(&qword_100E66428);
  uint64_t v34 = sub_100109308(v33);
  __chkstk_darwin(v34);
  sub_100109314();
  uint64_t v315 = v35;
  uint64_t v36 = sub_10017DF08(&qword_100E66430);
  uint64_t v37 = sub_100109308(v36);
  __chkstk_darwin(v37);
  sub_100109314();
  sub_100109338(v38);
  uint64_t v39 = sub_10017DF08(&qword_100E66438);
  uint64_t v40 = sub_100109308(v39);
  __chkstk_darwin(v40);
  sub_100109314();
  sub_100109338(v41);
  uint64_t v42 = sub_10017DF08(&qword_100E66440);
  uint64_t v43 = sub_100109308(v42);
  __chkstk_darwin(v43);
  sub_100109314();
  uint64_t v316 = v44;
  uint64_t v45 = sub_10017DF08(qword_100E66490);
  uint64_t v46 = sub_100109308(v45);
  __chkstk_darwin(v46);
  sub_100109314();
  sub_100109338(v47);
  uint64_t v48 = sub_10017DF08(&qword_100E65BC0);
  uint64_t v49 = sub_100109308(v48);
  __chkstk_darwin(v49);
  sub_100109314();
  sub_100109328(v50);
  uint64_t v302 = type metadata accessor for DisplayMetrics();
  sub_100162E4C();
  __chkstk_darwin(v51);
  sub_100109314();
  uint64_t v53 = sub_100109328(v52);
  uint64_t v308 = type metadata accessor for WeatherMapPresentationState(v53);
  sub_100162E4C();
  __chkstk_darwin(v54);
  uint64_t v56 = &v292[-((v55 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v57);
  sub_100179C90();
  __chkstk_darwin(v58);
  sub_100109328((uint64_t)&v292[-v59]);
  uint64_t v60 = type metadata accessor for ModalViewAction();
  sub_100162E4C();
  __chkstk_darwin(v61);
  uint64_t v63 = &v292[-((v62 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v64);
  uint64_t v66 = &v292[-v65];
  uint64_t v67 = type metadata accessor for LocationPreviewViewAction();
  sub_100162E4C();
  __chkstk_darwin(v68);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v69);
  uint64_t v71 = &v292[-v70];
  uint64_t v72 = type metadata accessor for LocationPreviewViewState(0);
  uint64_t v73 = sub_100109308(v72);
  __chkstk_darwin(v73);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v74);
  sub_100179C90();
  __chkstk_darwin(v75);
  uint64_t v77 = &v292[-v76];
  uint64_t v78 = sub_10017DF08(&qword_100EAD560);
  uint64_t v79 = sub_100109308(v78);
  __chkstk_darwin(v79);
  uint64_t v81 = &v292[-((v80 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v83 = (uint64_t)&v81[*(int *)(v82 + 56)];
  sub_10011A4A0(v320, (uint64_t)v81, (void (*)(void))type metadata accessor for ModalViewState);
  uint64_t v84 = (uint64_t)v321;
  uint64_t v321 = (unsigned __int8 *)v83;
  sub_10011A4A0(v84, v83, (void (*)(void))type metadata accessor for ModalViewAction);
  uint64_t v319 = v81;
  uint64_t v320 = v3;
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v86 = v321;
  switch(EnumCaseMultiPayload)
  {
    case 1:
      if (sub_1001A0248() != 1) {
        goto LABEL_36;
      }
      int v88 = v319[1];
      unsigned int v89 = *v319;
      uint64_t v90 = *v86;
      sub_1001B1E64(v318 + 7, v318[10]);
      if (v88) {
        int v91 = 256;
      }
      else {
        int v91 = 0;
      }
      return sub_10059DC18(v91 | v89, v322, v90);
    case 2:
      uint64_t v92 = *(void *)v319;
      if (sub_1001A0248() != 2) {
        goto LABEL_16;
      }
      uint64_t v93 = *v86;
      sub_1001B1E64(v318 + 12, v318[15]);
      uint64_t v83 = sub_1002A9E14(v92, v322, v93);
      goto LABEL_13;
    case 3:
      uint64_t v94 = *(void *)v319;
      if (sub_1001A0248() != 3)
      {
LABEL_16:
        swift_release();
        goto LABEL_36;
      }
      sub_10056F9AC(v86, __dst);
      sub_1001B1E64(v318 + 17, v318[20]);
      uint64_t v83 = sub_10092D8EC(v94, v322, __dst);
      sub_10056F9C0(__dst);
LABEL_13:
      swift_release();
      return v83;
    case 4:
      int v120 = sub_1001A0248();
      if (v120)
      {
        if (v120 == 4)
        {
          sub_10011A4A0((uint64_t)v86, (uint64_t)v66, (void (*)(void))type metadata accessor for ModalViewAction);
          uint64_t v121 = v322;
          uint64_t v122 = v322 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_view;
          uint64_t v123 = v317;
          uint64_t v124 = v322 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_view + *(int *)(v317 + 40);
          if (*v66 == 1)
          {
            uint64_t v125 = v296;
            sub_10011A4A0(v322 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_view + *(int *)(v317 + 40), v296, (void (*)(void))type metadata accessor for WeatherMapPresentationState);
            sub_10011A4A0(v122 + *(int *)(v123 + 36), (uint64_t)v300, (void (*)(void))type metadata accessor for DisplayMetrics);
            uint64_t v126 = type metadata accessor for WeatherMapOverlayKind();
            _s7Weather24LocationCompositionStateOwst_0(v301, 1, 1, v126);
            uint64_t v127 = sub_10017DF08(&qword_100E66460);
            uint64_t v128 = v297;
            char v129 = &v297[*(int *)(v127 + 48)];
            sub_10011A4A0(v124, (uint64_t)v56, (void (*)(void))type metadata accessor for WeatherMapPresentationState);
            BOOL v130 = (v56[1] & 0xC0) == 64;
            sub_100A7BB50((uint64_t)v56, (void (*)(void))type metadata accessor for WeatherMapPresentationState);
            *uint64_t v128 = v130;
            uint64_t v131 = *(void (**)(BOOL *, uint64_t, uint64_t))(*(void *)(v126 - 8) + 16);
            uint64_t v132 = v126;
            uint64_t v121 = v322;
            v131(v129, v122 + *(int *)(v123 + 40) + (uint64_t)*(int *)(v308 + 24), v132);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v128, 0, 3, v127);
            uint64_t v133 = type metadata accessor for WeatherMapTrackingState(0);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v128, 0, 1, v133);
            uint64_t v134 = v309;
            uint64_t v135 = v300;
            uint64_t v136 = v301;
            sub_100074324(4, v300, v301, (uint64_t)v128, v309);
            sub_1001781AC((uint64_t)v128, qword_100E66490);
            sub_1001781AC(v136, &qword_100E65BC0);
            sub_100A7BB50((uint64_t)v135, (void (*)(void))type metadata accessor for DisplayMetrics);
            sub_100A7BB50(v125, (void (*)(void))type metadata accessor for WeatherMapPresentationState);
          }
          else
          {
            uint64_t v134 = v309;
            sub_10011A4A0(v322 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_view + *(int *)(v317 + 40), (uint64_t)v309, (void (*)(void))type metadata accessor for WeatherMapPresentationState);
          }
          uint64_t v193 = v314;
          uint64_t v194 = v315;
          uint64_t v195 = v316;
          uint64_t v196 = v313;
          uint64_t v197 = v312;
          uint64_t v198 = v311;
          uint64_t v199 = v310;
          uint64_t v200 = type metadata accessor for AppConfigurationState();
          uint64_t v203 = sub_10017E050(v195, v201, v202, v200);
          uint64_t v206 = sub_1001630C0(v196, v204, v205, v203);
          uint64_t v209 = sub_10017A5E0(v197, v207, v208, v206);
          uint64_t v212 = sub_10017A0E0(v194, v210, v211, v209);
          _s7Weather24LocationCompositionStateOwst_0(v198, 1, 1, v212);
          uint64_t v213 = v303;
          sub_10011A4A0(v121 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_view, v303, (void (*)(void))type metadata accessor for ViewState);
          uint64_t v214 = type metadata accessor for ViewState.SecondaryViewState(0);
          uint64_t v215 = v304;
          _s7Weather24LocationCompositionStateOwst_0(v304, 1, 1, v214);
          uint64_t v216 = type metadata accessor for SearchViewState(0);
          uint64_t v217 = v305;
          _s7Weather24LocationCompositionStateOwst_0(v305, 1, 1, v216);
          uint64_t v218 = v196;
          uint64_t v219 = v306;
          _s7Weather24LocationCompositionStateOwst_0(v306, 1, 1, v302);
          uint64_t v220 = (uint64_t)v134;
          uint64_t v221 = v307;
          sub_10011A4A0(v220, v307, (void (*)(void))type metadata accessor for WeatherMapPresentationState);
          _s7Weather24LocationCompositionStateOwst_0(v221, 0, 1, v308);
          sub_10011D8AC();
          sub_1001781AC(v221, &qword_100E663F8);
          sub_1001781AC(v219, &qword_100E66400);
          sub_1001781AC(v217, &qword_100E66408);
          sub_1001781AC(v215, &qword_100E66410);
          sub_100A7BB50(v213, (void (*)(void))type metadata accessor for ViewState);
          _s7Weather24LocationCompositionStateOwst_0(v199, 0, 1, v317);
          uint64_t v83 = v320;
          swift_storeEnumTagMultiPayload();
          _s7Weather24LocationCompositionStateOwst_0(v193, 0, 1, v83);
          uint64_t v222 = v315;
          uint64_t v223 = v316;
          sub_1001659F0(0, 3, v316, v218, v197, 0, 0, 0, 0, v315, v198, v199, v193, 0, 0, 0, 0, 0, 0,
            0,
            v322);
          sub_100176CF8();
          sub_1001781AC(v193, &qword_100E663F0);
          sub_1001781AC(v199, &qword_100E66418);
          sub_1001781AC(v198, &qword_100E66420);
          sub_1001781AC(v222, &qword_100E66428);
          sub_1001781AC(v197, &qword_100E66430);
          sub_1001781AC(v218, &qword_100E66438);
          sub_1001781AC(v223, &qword_100E66440);
          uint64_t v224 = type metadata accessor for WeatherMapPresentationState;
          uint64_t v225 = &v325;
          goto LABEL_30;
        }
      }
      else
      {
        sub_10011A4A0((uint64_t)v86, (uint64_t)v63, (void (*)(void))type metadata accessor for ModalViewAction);
        if (swift_getEnumCaseMultiPayload() == 3)
        {
          uint64_t v164 = type metadata accessor for AppConfigurationState();
          uint64_t v165 = v316;
          uint64_t v168 = sub_10017E050(v316, v166, v167, v164);
          uint64_t v169 = v313;
          uint64_t v172 = sub_1001630C0(v313, v170, v171, v168);
          uint64_t v173 = v312;
          uint64_t v176 = sub_10017A5E0(v312, v174, v175, v172);
          uint64_t v177 = v315;
          uint64_t v180 = sub_10017A0E0(v315, v178, v179, v176);
          uint64_t v181 = v311;
          _s7Weather24LocationCompositionStateOwst_0(v311, 1, 1, v180);
          uint64_t v182 = v310;
          _s7Weather24LocationCompositionStateOwst_0(v310, 1, 1, v317);
          uint64_t v183 = type metadata accessor for ModalViewState.MapViewModal(0);
          uint64_t v184 = v314;
          _s7Weather24LocationCompositionStateOwst_0(v314, 1, 1, v183);
          uint64_t v83 = v320;
          swift_storeEnumTagMultiPayload();
          uint64_t v185 = _s7Weather24LocationCompositionStateOwst_0(v184, 0, 1, v83);
          sub_10017DB08(v185, v186, v187, v188, v189, v190, v191, v192, v292[0], v293, v294, v295, v296, (uint64_t)v297, v298, v299, (uint64_t)v300, v301, v302,
            v303,
            v304);
          sub_100176CF8();
          sub_1001781AC(v184, &qword_100E663F0);
          sub_1001781AC(v182, &qword_100E66418);
          sub_1001781AC(v181, &qword_100E66420);
          sub_1001781AC(v177, &qword_100E66428);
          sub_1001781AC(v173, &qword_100E66430);
          sub_1001781AC(v169, &qword_100E66438);
          sub_1001781AC(v165, &qword_100E66440);
          sub_1001781AC((uint64_t)v319, &qword_100E663E8);
          uint64_t v162 = (void (*)(void))type metadata accessor for ModalViewAction;
          id v163 = (char *)v86;
          goto LABEL_32;
        }
        uint64_t v227 = type metadata accessor for ModalViewState.MapViewModal(0);
        uint64_t v228 = v319;
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v319, 1, v227) != 1)
        {
          uint64_t v230 = v294;
          sub_100948F08((uint64_t)v228, v294);
          uint64_t v231 = v230;
          uint64_t v232 = v298;
          sub_10016E348(v231, v298, (void (*)(void))type metadata accessor for LocationPreviewViewState);
          uint64_t v233 = (uint64_t)v63;
          uint64_t v234 = v299;
          sub_10016E348(v233, v299, (void (*)(void))type metadata accessor for LocationPreviewViewAction);
          sub_1001B1E64(v318 + 2, v318[5]);
          uint64_t v235 = sub_1009F42F8(v232, v322, v234);
          uint64_t v236 = v295;
          sub_10011A4A0(v235 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_modalView, v295, (void (*)(void))type metadata accessor for ModalViewState);
          uint64_t v237 = v320;
          if (!swift_getEnumCaseMultiPayload())
          {
            uint64_t v264 = v293;
            sub_10016E348(v236, v293, (void (*)(void))type metadata accessor for LocationPreviewViewState);
            uint64_t v265 = type metadata accessor for AppConfigurationState();
            uint64_t v266 = v316;
            uint64_t v269 = sub_10017E050(v316, v267, v268, v265);
            uint64_t v270 = v313;
            uint64_t v273 = sub_1001630C0(v313, v271, v272, v269);
            uint64_t v274 = v312;
            uint64_t v277 = sub_10017A5E0(v312, v275, v276, v273);
            uint64_t v278 = v315;
            uint64_t v281 = sub_10017A0E0(v315, v279, v280, v277);
            sub_100184204(v281);
            uint64_t v282 = v264;
            uint64_t v283 = v314;
            sub_10011A4A0(v282, v314, (void (*)(void))type metadata accessor for LocationPreviewViewState);
            sub_1001A1A6C(v283, 0);
            uint64_t v284 = _s7Weather24LocationCompositionStateOwst_0(v283, 0, 1, v237);
            uint64_t v83 = sub_100180AC4(v284, v285, v286, v287, v288, v289, v290, v291, v292[0], v293, v294, v295, v296, (uint64_t)v297, v298, v299, (uint64_t)v300, v301, v302,
                    v303,
                    v304);
            swift_release();
            sub_1001781AC(v283, &qword_100E663F0);
            sub_1001781AC(v67, &qword_100E66418);
            sub_1001781AC((uint64_t)v86, &qword_100E66420);
            sub_1001781AC(v278, &qword_100E66428);
            sub_1001781AC(v274, &qword_100E66430);
            sub_1001781AC(v270, &qword_100E66438);
            sub_1001781AC(v266, &qword_100E66440);
            sub_100A7BB50(v293, (void (*)(void))type metadata accessor for LocationPreviewViewState);
            sub_100A7BB50(v299, (void (*)(void))type metadata accessor for LocationPreviewViewAction);
            uint64_t v226 = v298;
            uint64_t v224 = type metadata accessor for LocationPreviewViewState;
            goto LABEL_31;
          }
          sub_100A7BB50(v236, (void (*)(void))type metadata accessor for ModalViewState);
          uint64_t v238 = type metadata accessor for AppConfigurationState();
          uint64_t v239 = v316;
          uint64_t v242 = sub_10017E050(v316, v240, v241, v238);
          uint64_t v243 = v313;
          uint64_t v246 = sub_1001630C0(v313, v244, v245, v242);
          uint64_t v247 = v312;
          uint64_t v250 = sub_10017A5E0(v312, v248, v249, v246);
          uint64_t v251 = v315;
          uint64_t v254 = sub_10017A0E0(v315, v252, v253, v250);
          sub_100184204(v254);
          uint64_t v255 = v314;
          sub_1001A1A6C(v314, 1);
          uint64_t v256 = _s7Weather24LocationCompositionStateOwst_0(v255, 0, 1, v237);
          uint64_t v83 = sub_100180AC4(v256, v257, v258, v259, v260, v261, v262, v263, v292[0], v293, v294, v295, v296, (uint64_t)v297, v298, v299, (uint64_t)v300, v301, v302,
                  v303,
                  v304);
          swift_release();
          sub_1001781AC(v255, &qword_100E663F0);
          sub_1001781AC(v67, &qword_100E66418);
          sub_1001781AC((uint64_t)v86, &qword_100E66420);
          sub_1001781AC(v251, &qword_100E66428);
          sub_1001781AC(v247, &qword_100E66430);
          sub_1001781AC(v243, &qword_100E66438);
          sub_1001781AC(v239, &qword_100E66440);
          sub_100A7BB50(v299, (void (*)(void))type metadata accessor for LocationPreviewViewAction);
          uint64_t v224 = type metadata accessor for LocationPreviewViewState;
          uint64_t v225 = (uint64_t *)&v324;
LABEL_30:
          uint64_t v226 = *(v225 - 32);
LABEL_31:
          sub_100A7BB50(v226, (void (*)(void))v224);
          sub_1001781AC((uint64_t)v319, &qword_100E663E8);
          uint64_t v162 = (void (*)(void))type metadata accessor for ModalViewAction;
          id v163 = (char *)v321;
          goto LABEL_32;
        }
        sub_100A7BB50((uint64_t)v63, (void (*)(void))type metadata accessor for LocationPreviewViewAction);
      }
      sub_1001781AC((uint64_t)v319, &qword_100E663E8);
LABEL_36:
      sub_100A7BB50((uint64_t)v86, (void (*)(void))type metadata accessor for ModalViewAction);
      uint64_t v83 = v322;
      swift_retain();
      return v83;
    case 5:
      if (sub_1001A0248() == 5)
      {
        uint64_t v137 = type metadata accessor for AppConfigurationState();
        uint64_t v138 = v316;
        uint64_t v141 = sub_10017E050(v316, v139, v140, v137);
        uint64_t v142 = v313;
        uint64_t v145 = sub_1001630C0(v313, v143, v144, v141);
        uint64_t v146 = v312;
        uint64_t v149 = sub_10017A5E0(v312, v147, v148, v145);
        uint64_t v150 = v315;
        uint64_t v153 = sub_10017A0E0(v315, v151, v152, v149);
        sub_10017AE78(v153);
        uint64_t v154 = _s7Weather24LocationCompositionStateOwst_0(v60, 0, 1, v83);
        sub_10017DB08(v154, v155, v156, v157, v158, v159, v160, v161, v292[0], v293, v294, v295, v296, (uint64_t)v297, v298, v299, (uint64_t)v300, v301, v302,
          v303,
          v304);
        sub_100176CF8();
        sub_1001781AC(v60, &qword_100E663F0);
        sub_1001781AC((uint64_t)v77, &qword_100E66418);
        sub_1001781AC(v3, &qword_100E66420);
        sub_1001781AC(v150, &qword_100E66428);
        sub_1001781AC(v146, &qword_100E66430);
        sub_1001781AC(v142, &qword_100E66438);
        sub_1001781AC(v138, &qword_100E66440);
        uint64_t v162 = (void (*)(void))type metadata accessor for ModalViewState;
        id v163 = v319;
        goto LABEL_32;
      }
      os_log_type_t v87 = type metadata accessor for ModalViewState;
      goto LABEL_24;
    case 6:
      goto LABEL_36;
    case 7:
      if (sub_1001A0248() != 6) {
        goto LABEL_36;
      }
      uint64_t v95 = type metadata accessor for AppConfigurationState();
      uint64_t v96 = v316;
      uint64_t v99 = sub_10017E050(v316, v97, v98, v95);
      uint64_t v100 = v313;
      uint64_t v103 = sub_1001630C0(v313, v101, v102, v99);
      uint64_t v104 = v312;
      uint64_t v107 = sub_10017A5E0(v312, v105, v106, v103);
      uint64_t v108 = v315;
      uint64_t v111 = sub_10017A0E0(v315, v109, v110, v107);
      sub_10017AE78(v111);
      uint64_t v112 = _s7Weather24LocationCompositionStateOwst_0(v60, 0, 1, v83);
      sub_10017DB08(v112, v113, v114, v115, v116, v117, v118, v119, v292[0], v293, v294, v295, v296, (uint64_t)v297, v298, v299, (uint64_t)v300, v301, v302,
        v303,
        v304);
      sub_100176CF8();
      sub_1001781AC(v60, &qword_100E663F0);
      sub_1001781AC((uint64_t)v77, &qword_100E66418);
      sub_1001781AC(v3, &qword_100E66420);
      sub_1001781AC(v108, &qword_100E66428);
      sub_1001781AC(v104, &qword_100E66430);
      sub_1001781AC(v100, &qword_100E66438);
      sub_1001781AC(v96, &qword_100E66440);
      return v83;
    default:
      if (!sub_1001A0248())
      {
        sub_10016E348((uint64_t)v319, (uint64_t)v77, (void (*)(void))type metadata accessor for LocationPreviewViewState);
        sub_10016E348((uint64_t)v86, (uint64_t)v71, (void (*)(void))type metadata accessor for LocationPreviewViewAction);
        sub_1001B1E64(v318 + 2, v318[5]);
        uint64_t v83 = sub_1009F42F8((uint64_t)v77, v322, (uint64_t)v71);
        sub_100A7BB50((uint64_t)v71, (void (*)(void))type metadata accessor for LocationPreviewViewAction);
        uint64_t v162 = (void (*)(void))type metadata accessor for LocationPreviewViewState;
        id v163 = v77;
LABEL_32:
        sub_100A7BB50((uint64_t)v163, v162);
        return v83;
      }
      os_log_type_t v87 = type metadata accessor for LocationPreviewViewState;
LABEL_24:
      sub_100A7BB50((uint64_t)v319, (void (*)(void))v87);
      goto LABEL_36;
  }
}

uint64_t sub_100A7BB50(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_100A7BBA8(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *(void *)a1 = *a2;
    a1 = v16 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    long long v8 = *(_OWORD *)(a2 + 5);
    *(_OWORD *)(a1 + 40) = v8;
    uint64_t v9 = v8;
    uint64_t v10 = **(void (***)(uint64_t, uint64_t, uint64_t))(v8 - 8);
    swift_retain();
    v10(a1 + 16, (uint64_t)(a2 + 2), v9);
    *(void *)(a1 + 56) = a2[7];
    uint64_t v11 = *(int *)(a3 + 28);
    uint64_t v12 = (void *)(a1 + v11);
    uint64_t v13 = (uint64_t *)((char *)a2 + v11);
    swift_retain();
    sub_10017DF08((uint64_t *)&unk_100EAA560);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v14 = type metadata accessor for UserInterfaceSizeClass();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v13, 1, v14))
      {
        uint64_t v15 = sub_10017DF08(&qword_100E65ED8);
        memcpy(v12, v13, *(void *)(*(void *)(v15 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v12, 0, 1, v14);
      }
    }
    else
    {
      *uint64_t v12 = *v13;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_100A7BD90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v5;
  uint64_t v6 = *(int *)(a3 + 28);
  uint64_t v7 = (void *)(a1 + v6);
  long long v8 = (const void *)(a2 + v6);
  uint64_t v9 = sub_10017DF08((uint64_t *)&unk_100EAA560);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = type metadata accessor for UserInterfaceSizeClass();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v10))
    {
      uint64_t v11 = sub_10017DF08(&qword_100E65ED8);
      memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 32))(v7, v8, v10);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v7, 0, 1, v10);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
  }
  return a1;
}

uint64_t sub_100A7BED8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_release();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1 + 16);
  long long v7 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v7;
  uint64_t v8 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v8;
  swift_release();
  if (a1 != a2)
  {
    uint64_t v9 = *(int *)(a3 + 28);
    uint64_t v10 = (void *)(a1 + v9);
    uint64_t v11 = (const void *)(a2 + v9);
    sub_1001781AC(a1 + v9, (uint64_t *)&unk_100EAA560);
    uint64_t v12 = sub_10017DF08((uint64_t *)&unk_100EAA560);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v13 = type metadata accessor for UserInterfaceSizeClass();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v11, 1, v13))
      {
        uint64_t v14 = sub_10017DF08(&qword_100E65ED8);
        memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v13 - 8) + 32))(v10, v11, v13);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v10, 0, 1, v13);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v10, v11, *(void *)(*(void *)(v12 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_100A7C058(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100A7C06C);
}

uint64_t sub_100A7C06C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF) {
    return sub_100163020(*(void *)(a1 + 8));
  }
  uint64_t v7 = sub_10017DF08((uint64_t *)&unk_100EAA540);
  uint64_t v8 = a1 + *(int *)(a3 + 28);

  return _s7Weather24LocationCompositionStateOwet_0(v8, a2, v7);
}

uint64_t sub_100A7C0EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100A7C100);
}

uint64_t sub_100A7C100(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_10017DF08((uint64_t *)&unk_100EAA540);
    uint64_t v8 = v5 + *(int *)(a4 + 28);
    return _s7Weather24LocationCompositionStateOwst_0(v8, a2, a2, v7);
  }
  return result;
}

uint64_t sub_100A7C184@<X0>(void (*a1)(uint64_t)@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v8 = sub_10017DF08(&qword_100EAD9B0);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  a1(v10);
  (*(void (**)(uint64_t, char *, uint64_t))(v9 + 16))(a4, v12, v8);
  uint64_t v13 = (void *)(a4 + *(int *)(sub_10017DF08(&qword_100EAD6E0) + 36));
  *uint64_t v13 = a2;
  v13[1] = a3;
  v13[2] = 0;
  void v13[3] = 0;
  uint64_t v14 = *(uint64_t (**)(char *, uint64_t))(v9 + 8);
  swift_retain();
  return v14(v12, v8);
}

uint64_t sub_100A7C2B4()
{
  uint64_t active = type metadata accessor for ActiveLocationModel(0);
  __chkstk_darwin(active - 8);
  uint64_t v3 = (char *)&v29[-1] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v29[-1] - v5;
  uint64_t v7 = sub_10017DF08(&qword_100E6DC08);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v29[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v29[-1] - v11;
  uint64_t v13 = sub_10017DF08(&qword_100E94AE8);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)&v29[-1] - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for MainViewModel(0);
  uint64_t v17 = v16 - 8;
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v29[-1] - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  sub_1001BFFC8();
  swift_release();
  sub_10006DF38((uint64_t)&v19[*(int *)(v17 + 32)], (uint64_t)v15, &qword_100E94AE8);
  sub_1001BFF70((uint64_t)v19, (void (*)(void))type metadata accessor for MainViewModel);
  uint64_t v20 = type metadata accessor for MainViewModel.ModalModule(0);
  uint64_t result = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v15, 1, v20);
  if (result != 1)
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        sub_1001B1E64((void *)(v0 + 16), *(void *)(v0 + 40));
        sub_100665518();
        uint64_t result = sub_1001BFF70((uint64_t)v15, (void (*)(void))type metadata accessor for MainViewModel.ModalModule);
        break;
      case 2u:
        sub_10020D948(v0 + 16, (uint64_t)v29);
        sub_1001B1E64(v29, v30);
        sub_1001362A4();
        sub_10024D364((uint64_t)v6, (uint64_t)v12, &qword_100E6DC08);
        uint64_t v25 = type metadata accessor for Location.Identifier();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v12, 1, v25) == 1)
        {
          sub_1001781AC((uint64_t)v12, &qword_100E6DC08);
          uint64_t v23 = 0;
          uint64_t v24 = 0;
        }
        else
        {
          uint64_t v23 = Location.Identifier.id.getter();
          uint64_t v24 = v27;
          (*(void (**)(char *, uint64_t))(*(void *)(v25 - 8) + 8))(v12, v25);
        }
        goto LABEL_15;
      case 3u:
        sub_1001B1E64((void *)(v0 + 16), *(void *)(v0 + 40));
        uint64_t result = sub_100664FB4();
        break;
      case 4u:
        sub_1001B1E64((void *)(v0 + 16), *(void *)(v0 + 40));
        uint64_t result = sub_100665248();
        break;
      case 5u:
        sub_1001B1E64((void *)(v0 + 16), *(void *)(v0 + 40));
        uint64_t result = sub_100665410();
        break;
      case 6u:
        sub_1001B1E64((void *)(v0 + 16), *(void *)(v0 + 40));
        uint64_t result = sub_100665534();
        break;
      default:
        sub_10020D948(v0 + 16, (uint64_t)v29);
        sub_1001B1E64(v29, v30);
        sub_1001362A4();
        sub_10024D364((uint64_t)v3, (uint64_t)v9, &qword_100E6DC08);
        uint64_t v22 = type metadata accessor for Location.Identifier();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v22) == 1)
        {
          sub_1001781AC((uint64_t)v9, &qword_100E6DC08);
          uint64_t v23 = 0;
          uint64_t v24 = 0;
        }
        else
        {
          uint64_t v23 = Location.Identifier.id.getter();
          uint64_t v24 = v26;
          (*(void (**)(char *, uint64_t))(*(void *)(v22 - 8) + 8))(v9, v22);
        }
LABEL_15:
        sub_100664D98(v23, v24);
        swift_bridgeObjectRelease();
        uint64_t result = _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v29);
        break;
    }
  }
  return result;
}

uint64_t sub_100A7C74C()
{
  uint64_t v0 = sub_10017DF08(&qword_100E94AE8);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)&v14 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for MainViewModel(0);
  uint64_t v4 = v3 - 8;
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for MainViewModel.ModalModule(0);
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v14 - v11;
  swift_retain();
  sub_1001BFFC8();
  swift_release();
  sub_10006DF38((uint64_t)&v6[*(int *)(v4 + 32)], (uint64_t)v2, &qword_100E94AE8);
  sub_1001BFF70((uint64_t)v6, (void (*)(void))type metadata accessor for MainViewModel);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v2, 1, v7) == 1) {
    return sub_1001781AC((uint64_t)v2, &qword_100E94AE8);
  }
  sub_1001BE1F4((uint64_t)v2, (uint64_t)v12, (void (*)(void))type metadata accessor for MainViewModel.ModalModule);
  sub_1001BE268((uint64_t)v12, (uint64_t)v10, (void (*)(void))type metadata accessor for MainViewModel.ModalModule);
  if (swift_getEnumCaseMultiPayload() == 1) {
    sub_1001BFF70((uint64_t)v10, (void (*)(void))type metadata accessor for MainViewModel.ModalModule);
  }
  return sub_1001BFF70((uint64_t)v12, (void (*)(void))type metadata accessor for MainViewModel.ModalModule);
}

uint64_t sub_100A7C998()
{
  uint64_t v0 = type metadata accessor for MainViewSheetViewModifier(0);
  sub_1001627C0(v0);

  return sub_100A7C74C();
}

uint64_t sub_100A7C9F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v23 = a2;
  uint64_t v22 = type metadata accessor for FormPresentationSizing();
  uint64_t v3 = *(void *)(v22 - 8);
  __chkstk_darwin(v22);
  uint64_t v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10017DF08(&qword_100EAD708);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10017DF08(&qword_100EAD6F0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_10017DF08(&qword_100EAD9B0);
  uint64_t v12 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  uint64_t v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100A7CD50((uint64_t)v8);
  uint64_t v15 = *(void *)(a1 + *(int *)(type metadata accessor for ModalPresentationViewModifier(0) + 32));
  type metadata accessor for ObservableResolver();
  sub_10013516C((uint64_t)&qword_100E70FD0);
  if (v15)
  {
    swift_retain();
    uint64_t v16 = static ObservableObject.environmentStore.getter();
    sub_10006DF38((uint64_t)v8, (uint64_t)v11, &qword_100EAD708);
    uint64_t v17 = (uint64_t *)&v11[*(int *)(v9 + 36)];
    *uint64_t v17 = v16;
    v17[1] = v15;
    sub_1001781AC((uint64_t)v8, &qword_100EAD708);
    static PresentationSizing<>.form.getter();
    sub_1002301A8();
    uint64_t v18 = v22;
    View.presentationSizing<A>(_:)();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v18);
    sub_1001781AC((uint64_t)v11, &qword_100EAD6F0);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v12 + 32))(v23, v14, v21);
  }
  else
  {
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t sub_100A7CD50@<X0>(uint64_t a1@<X8>)
{
  uint64_t v379 = a1;
  uint64_t v365 = sub_10017DF08(&qword_100EAD9A8);
  uint64_t v345 = *(void *)(v365 - 8);
  __chkstk_darwin(v365);
  uint64_t v344 = (char *)&v253 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v362 = sub_10017DF08(&qword_100EAD9B8);
  __chkstk_darwin(v362);
  uint64_t v363 = (uint64_t)&v253 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v371 = sub_10017DF08(&qword_100EAD848);
  __chkstk_darwin(v371);
  v364 = (char *)&v253 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v282 = sub_10017DF08(&qword_100EAD998);
  __chkstk_darwin(v282);
  uint64_t v284 = (char *)&v253 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v302 = sub_10017DF08(&qword_100EAD988);
  uint64_t v5 = __chkstk_darwin(v302);
  uint64_t v283 = (uint64_t)&v253 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v286 = (uint64_t)&v253 - v7;
  uint64_t v299 = sub_10017DF08(&qword_100EAD9C0);
  __chkstk_darwin(v299);
  uint64_t v300 = (uint64_t)&v253 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v318 = sub_10017DF08(&qword_100EAD978);
  __chkstk_darwin(v318);
  uint64_t v305 = (char *)&v253 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v279 = sub_10017DF08(&qword_100EAD968);
  __chkstk_darwin(v279);
  uint64_t v281 = (char *)&v253 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v306 = sub_10017DF08(&qword_100EAD958);
  uint64_t v11 = __chkstk_darwin(v306);
  uint64_t v280 = (uint64_t)&v253 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v285 = (uint64_t)&v253 - v13;
  uint64_t v313 = sub_10017DF08(&qword_100EAD9C8);
  __chkstk_darwin(v313);
  uint64_t v317 = (uint64_t)&v253 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v303 = sub_10017DF08(&qword_100EAD9D0);
  __chkstk_darwin(v303);
  uint64_t v304 = (uint64_t)&v253 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v315 = sub_10017DF08(&qword_100EAD928);
  __chkstk_darwin(v315);
  uint64_t v307 = (char *)&v253 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v326 = sub_10017DF08(&qword_100EAD918);
  __chkstk_darwin(v326);
  uint64_t v319 = (char *)&v253 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v274 = sub_10017DF08(&qword_100EAD948);
  __chkstk_darwin(v274);
  uint64_t v276 = (char *)&v253 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v301 = sub_10017DF08(&qword_100EAD938);
  uint64_t v19 = __chkstk_darwin(v301);
  uint64_t v275 = (uint64_t)&v253 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v278 = (uint64_t)&v253 - v21;
  uint64_t v270 = sub_10017DF08(&qword_100EAD908);
  __chkstk_darwin(v270);
  uint64_t v272 = (char *)&v253 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v297 = sub_10017DF08(&qword_100EAD8F8);
  uint64_t v23 = __chkstk_darwin(v297);
  uint64_t v271 = (uint64_t)&v253 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  uint64_t v277 = (uint64_t)&v253 - v25;
  uint64_t v295 = sub_10017DF08(&qword_100EAD9D8);
  __chkstk_darwin(v295);
  uint64_t v296 = (uint64_t)&v253 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v316 = sub_10017DF08(&qword_100EAD8C8);
  __chkstk_darwin(v316);
  uint64_t v298 = (char *)&v253 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v266 = sub_10017DF08(&qword_100EAD8E8);
  __chkstk_darwin(v266);
  uint64_t v268 = (char *)&v253 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v294 = sub_10017DF08(&qword_100EAD8D8);
  uint64_t v29 = __chkstk_darwin(v294);
  uint64_t v267 = (uint64_t)&v253 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v29);
  uint64_t v273 = (uint64_t)&v253 - v31;
  uint64_t v263 = sub_10017DF08(&qword_100EAD8B8);
  __chkstk_darwin(v263);
  uint64_t v265 = (char *)&v253 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v293 = sub_10017DF08(&qword_100EAD8A8);
  uint64_t v33 = __chkstk_darwin(v293);
  uint64_t v264 = (uint64_t)&v253 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v33);
  uint64_t v269 = (uint64_t)&v253 - v35;
  uint64_t v323 = sub_10017DF08(&qword_100EAD9E0);
  __chkstk_darwin(v323);
  uint64_t v325 = (uint64_t)&v253 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v310 = sub_10017DF08(&qword_100EAD9E8);
  __chkstk_darwin(v310);
  uint64_t v312 = (uint64_t)&v253 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v290 = sub_10017DF08(&qword_100EAD9F0);
  __chkstk_darwin(v290);
  uint64_t v291 = (uint64_t)&v253 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v311 = sub_10017DF08(&qword_100EAD878);
  __chkstk_darwin(v311);
  uint64_t v292 = (char *)&v253 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v324 = sub_10017DF08(&qword_100EAD868);
  __chkstk_darwin(v324);
  uint64_t v314 = (char *)&v253 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v259 = sub_10017DF08(&qword_100EAD898);
  __chkstk_darwin(v259);
  uint64_t v261 = (char *)&v253 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v289 = sub_10017DF08(&qword_100EAD888);
  uint64_t v42 = __chkstk_darwin(v289);
  uint64_t v260 = (uint64_t)&v253 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v42);
  uint64_t v262 = (uint64_t)&v253 - v44;
  uint64_t v361 = sub_10017DF08(&qword_100EAD858);
  __chkstk_darwin(v361);
  uint64_t v346 = (char *)&v253 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v334 = type metadata accessor for MainViewModel.ModalModule.LocationDetailModule(0);
  uint64_t v46 = __chkstk_darwin(v334);
  uint64_t v342 = (uint64_t)&v253 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v46);
  uint64_t v360 = (uint64_t)&v253 - v48;
  uint64_t v339 = sub_10017DF08(&qword_100EAD828);
  __chkstk_darwin(v339);
  uint64_t v341 = (char *)&v253 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v359 = sub_10017DF08(&qword_100EAD818);
  uint64_t v50 = __chkstk_darwin(v359);
  uint64_t v340 = (uint64_t)&v253 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v50);
  uint64_t v343 = (uint64_t)&v253 - v52;
  uint64_t v367 = sub_10017DF08(&qword_100EAD9F8);
  __chkstk_darwin(v367);
  uint64_t v369 = (uint64_t)&v253 - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v354 = sub_10017DF08(&qword_100EADA00);
  __chkstk_darwin(v354);
  uint64_t v355 = (uint64_t)&v253 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v368 = sub_10017DF08(&qword_100EAD7D8);
  __chkstk_darwin(v368);
  uint64_t v358 = (char *)&v253 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v378 = sub_10017DF08(&qword_100EAD7C8);
  __chkstk_darwin(v378);
  uint64_t v370 = (char *)&v253 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v330 = sub_10017DF08(&qword_100EAD7F8);
  __chkstk_darwin(v330);
  uint64_t v333 = (char *)&v253 - ((v57 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v351 = sub_10017DF08(&qword_100EAD7E8);
  uint64_t v58 = __chkstk_darwin(v351);
  uint64_t v331 = (uint64_t)&v253 - ((v59 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v58);
  uint64_t v338 = (uint64_t)&v253 - v60;
  uint64_t v327 = sub_10017DF08(&qword_100EAD7A8);
  __chkstk_darwin(v327);
  uint64_t v329 = (char *)&v253 - ((v61 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v356 = sub_10017DF08(&qword_100EAD798);
  uint64_t v62 = __chkstk_darwin(v356);
  uint64_t v328 = (uint64_t)&v253 - ((v63 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v62);
  uint64_t v336 = (char *)&v253 - v64;
  uint64_t v352 = sub_10017DF08(&qword_100EADA08);
  __chkstk_darwin(v352);
  uint64_t v353 = (uint64_t)&v253 - ((v65 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v375 = sub_10017DF08(&qword_100EAD788);
  __chkstk_darwin(v375);
  uint64_t v357 = (char *)&v253 - ((v66 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v335 = sub_10017DF08(&qword_100EADA10);
  __chkstk_darwin(v335);
  uint64_t v337 = (uint64_t)&v253 - ((v67 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v349 = sub_10017DF08(&qword_100EAD778);
  uint64_t v322 = *(void *)(v349 - 8);
  __chkstk_darwin(v349);
  uint64_t v321 = (char *)&v253 - ((v68 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v347 = sub_10017DF08(&qword_100EADA18);
  __chkstk_darwin(v347);
  uint64_t v348 = (uint64_t)&v253 - ((v69 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v70 = sub_10017DF08((uint64_t *)&unk_100EAA640);
  __chkstk_darwin(v70 - 8);
  uint64_t v372 = (char *)&v253 - ((v71 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v350 = sub_10017DF08(&qword_100EAD758);
  uint64_t v72 = __chkstk_darwin(v350);
  uint64_t v308 = (char *)&v253 - ((v73 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v74 = __chkstk_darwin(v72);
  uint64_t v309 = (uint64_t)&v253 - v75;
  uint64_t v76 = __chkstk_darwin(v74);
  uint64_t v287 = (char *)&v253 - v77;
  __chkstk_darwin(v76);
  uint64_t v288 = (uint64_t)&v253 - v78;
  uint64_t v366 = sub_10017DF08(&qword_100EAD748);
  uint64_t v79 = __chkstk_darwin(v366);
  uint64_t v332 = (char *)&v253 - ((v80 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v79);
  uint64_t v320 = (char *)&v253 - v81;
  uint64_t v374 = sub_10017DF08(&qword_100EAD738);
  __chkstk_darwin(v374);
  uint64_t v373 = (char *)&v253 - ((v82 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v377 = sub_10017DF08(&qword_100EADA20);
  __chkstk_darwin(v377);
  uint64_t v376 = (uint64_t)&v253 - ((v83 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v84 = sub_10017DF08(&qword_100EADA28);
  __chkstk_darwin(v84);
  uint64_t v86 = (char *)&v253 - ((v85 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v87 = sub_10017DF08(&qword_100EADA30);
  __chkstk_darwin(v87);
  unsigned int v89 = (char *)&v253 - ((v88 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v90 = sub_10017DF08(&qword_100EAD728);
  __chkstk_darwin(v90);
  uint64_t v92 = (char *)&v253 - ((v91 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v93 = sub_10017DF08(&qword_100EAD718);
  __chkstk_darwin(v93);
  uint64_t v95 = (char *)&v253 - ((v94 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v96 = sub_10017DF08(&qword_100E94AE8);
  __chkstk_darwin(v96 - 8);
  uint64_t v98 = (char *)&v253 - ((v97 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10006DF38(v380, (uint64_t)v98, &qword_100E94AE8);
  uint64_t v99 = type metadata accessor for MainViewModel.ModalModule(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v98, 1, v99) == 1)
  {
    swift_storeEnumTagMultiPayload();
    sub_100227EE8();
    _ConditionalContent<>.init(storage:)();
    sub_10006DF38((uint64_t)v92, (uint64_t)v86, &qword_100EAD728);
    swift_storeEnumTagMultiPayload();
    sub_100026188((uint64_t)&unk_100EAD720);
    sub_100227E6C();
    _ConditionalContent<>.init(storage:)();
    sub_1001781AC((uint64_t)v92, &qword_100EAD728);
    uint64_t v100 = &qword_100EAD718;
    sub_10006DF38((uint64_t)v95, v376, &qword_100EAD718);
    swift_storeEnumTagMultiPayload();
    sub_100227A44();
    sub_100227C58();
    _ConditionalContent<>.init(storage:)();
    goto LABEL_3;
  }
  uint64_t v255 = v89;
  uint64_t v257 = v84;
  uint64_t v380 = v90;
  uint64_t v256 = v86;
  uint64_t v258 = v93;
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v105 = (uint64_t)v95;
  uint64_t v106 = (uint64_t)v373;
  switch(EnumCaseMultiPayload)
  {
    case 1:
      uint64_t v109 = v360;
      sub_1001BE1F4((uint64_t)v98, v360, (void (*)(void))type metadata accessor for MainViewModel.ModalModule.LocationDetailModule);
      uint64_t v110 = v342;
      sub_1001BE268(v109, v342, (void (*)(void))type metadata accessor for MainViewModel.ModalModule.LocationDetailModule);
      int v111 = swift_getEnumCaseMultiPayload();
      uint64_t v112 = (uint64_t)v346;
      switch(v111)
      {
        case 1:
          uint64_t v187 = sub_10017DF08(&qword_100E64768);
          __src[10] = sub_100874A34;
          void __src[11] = 0;
          LOBYTE(__src[12]) = 0;
          __src[0] = v187;
          if (qword_100E62290 != -1) {
            swift_once();
          }
          swift_beginAccess();
          sub_10006DF38((uint64_t)&xmmword_100F51398, (uint64_t)__dst, &qword_100E6F2A0);
          uint64_t v114 = v376;
          if (!*(void *)&__dst[24]) {
            goto LABEL_79;
          }
          sub_1001262E4((long long *)__dst, (uint64_t)&__src[3]);
          __src[1] = sub_100A81D80;
          __src[2] = 0;
          uint64_t v188 = Dictionary.init(dictionaryLiteral:)();
          __src[8] = _swiftEmptyArrayStorage;
          __src[9] = v188;
          memcpy(__dst, __src, sizeof(__dst));
          uint64_t v189 = enum case for ColorScheme.dark(_:);
          uint64_t v190 = type metadata accessor for ColorScheme();
          uint64_t v191 = (uint64_t)v372;
          (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v190 - 8) + 104))(v372, v189, v190);
          _s7Weather24LocationCompositionStateOwst_0(v191, 0, 1, v190);
          uint64_t v192 = (uint64_t)v265;
          sub_10006DF38(v191, (uint64_t)&v265[*(int *)(v263 + 36)], (uint64_t *)&unk_100EAA640);
          sub_10006DF38((uint64_t)__dst, v192, &qword_100E70E40);
          sub_1001781AC(v191, (uint64_t *)&unk_100EAA640);
          sub_1001781AC((uint64_t)__dst, &qword_100E70E40);
          uint64_t v193 = v264;
          sub_10006DF38(v192, v264, &qword_100EAD8B8);
          *(unsigned char *)(v193 + *(int *)(v293 + 36)) = 1;
          sub_1001781AC(v192, &qword_100EAD8B8);
          uint64_t v194 = &qword_100EAD8A8;
          uint64_t v195 = v269;
          sub_10024D364(v193, v269, &qword_100EAD8A8);
          sub_10006DF38(v195, v291, &qword_100EAD8A8);
          swift_storeEnumTagMultiPayload();
          sub_10022CD58();
          sub_10022CCDC();
          uint64_t v196 = (uint64_t)v292;
          _ConditionalContent<>.init(storage:)();
          sub_10006DF38(v196, v312, &qword_100EAD878);
          swift_storeEnumTagMultiPayload();
          sub_10022848C();
          sub_100228394();
          uint64_t v197 = (uint64_t)v314;
          _ConditionalContent<>.init(storage:)();
          sub_1001781AC(v196, &qword_100EAD878);
          uint64_t v198 = &qword_100EAD868;
          sub_10006DF38(v197, v325, &qword_100EAD868);
          goto LABEL_70;
        case 2:
          uint64_t v199 = sub_10017DF08(&qword_100E71010);
          __src[10] = sub_100874A28;
          void __src[11] = 0;
          LOBYTE(__src[12]) = 0;
          __src[0] = v199;
          if (qword_100E62290 != -1) {
            swift_once();
          }
          swift_beginAccess();
          sub_10006DF38((uint64_t)&xmmword_100F51398, (uint64_t)__dst, &qword_100E6F2A0);
          uint64_t v114 = v376;
          if (!*(void *)&__dst[24]) {
            goto LABEL_80;
          }
          sub_1001262E4((long long *)__dst, (uint64_t)&__src[3]);
          __src[1] = sub_100A81D98;
          __src[2] = 0;
          uint64_t v200 = Dictionary.init(dictionaryLiteral:)();
          __src[8] = _swiftEmptyArrayStorage;
          __src[9] = v200;
          memcpy(__dst, __src, sizeof(__dst));
          uint64_t v201 = enum case for ColorScheme.dark(_:);
          uint64_t v202 = type metadata accessor for ColorScheme();
          uint64_t v203 = (uint64_t)v372;
          (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v202 - 8) + 104))(v372, v201, v202);
          _s7Weather24LocationCompositionStateOwst_0(v203, 0, 1, v202);
          uint64_t v204 = (uint64_t)v268;
          sub_10006DF38(v203, (uint64_t)&v268[*(int *)(v266 + 36)], (uint64_t *)&unk_100EAA640);
          sub_10006DF38((uint64_t)__dst, v204, &qword_100E70E60);
          sub_1001781AC(v203, (uint64_t *)&unk_100EAA640);
          sub_1001781AC((uint64_t)__dst, &qword_100E70E60);
          uint64_t v205 = v267;
          sub_10006DF38(v204, v267, &qword_100EAD8E8);
          *(unsigned char *)(v205 + *(int *)(v294 + 36)) = 1;
          sub_1001781AC(v204, &qword_100EAD8E8);
          uint64_t v206 = &qword_100EAD8D8;
          uint64_t v207 = v273;
          sub_10024D364(v205, v273, &qword_100EAD8D8);
          sub_10006DF38(v207, v296, &qword_100EAD8D8);
          swift_storeEnumTagMultiPayload();
          sub_10022CA70();
          sub_10022CBE4();
          uint64_t v208 = (uint64_t)v298;
          _ConditionalContent<>.init(storage:)();
          sub_10006DF38(v208, v312, &qword_100EAD8C8);
          swift_storeEnumTagMultiPayload();
          sub_10022848C();
          sub_100228394();
          uint64_t v209 = (uint64_t)v314;
          _ConditionalContent<>.init(storage:)();
          sub_1001781AC(v208, &qword_100EAD8C8);
          uint64_t v210 = &qword_100EAD868;
          sub_10006DF38(v209, v325, &qword_100EAD868);
          goto LABEL_60;
        case 3:
          uint64_t v211 = sub_10017DF08(&qword_100E71008);
          __src[10] = sub_100874A1C;
          void __src[11] = 0;
          LOBYTE(__src[12]) = 0;
          __src[0] = v211;
          if (qword_100E62290 != -1) {
            swift_once();
          }
          swift_beginAccess();
          sub_10006DF38((uint64_t)&xmmword_100F51398, (uint64_t)__dst, &qword_100E6F2A0);
          uint64_t v114 = v376;
          if (!*(void *)&__dst[24]) {
            goto LABEL_81;
          }
          sub_1001262E4((long long *)__dst, (uint64_t)&__src[3]);
          __src[1] = sub_100A81DE0;
          __src[2] = 0;
          uint64_t v212 = Dictionary.init(dictionaryLiteral:)();
          __src[8] = _swiftEmptyArrayStorage;
          __src[9] = v212;
          memcpy(__dst, __src, sizeof(__dst));
          uint64_t v213 = enum case for ColorScheme.dark(_:);
          uint64_t v214 = type metadata accessor for ColorScheme();
          uint64_t v215 = (uint64_t)v372;
          (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v214 - 8) + 104))(v372, v213, v214);
          _s7Weather24LocationCompositionStateOwst_0(v215, 0, 1, v214);
          uint64_t v216 = (uint64_t)v272;
          sub_10006DF38(v215, (uint64_t)&v272[*(int *)(v270 + 36)], (uint64_t *)&unk_100EAA640);
          sub_10006DF38((uint64_t)__dst, v216, &qword_100E70E70);
          sub_1001781AC(v215, (uint64_t *)&unk_100EAA640);
          sub_1001781AC((uint64_t)__dst, &qword_100E70E70);
          uint64_t v217 = v271;
          sub_10006DF38(v216, v271, &qword_100EAD908);
          *(unsigned char *)(v217 + *(int *)(v297 + 36)) = 1;
          sub_1001781AC(v216, &qword_100EAD908);
          uint64_t v218 = v277;
          sub_10024D364(v217, v277, &qword_100EAD8F8);
          sub_10006DF38(v218, v296, &qword_100EAD8F8);
          swift_storeEnumTagMultiPayload();
          sub_10022CA70();
          sub_10022CBE4();
          uint64_t v219 = (uint64_t)v298;
          _ConditionalContent<>.init(storage:)();
          sub_10006DF38(v219, v312, &qword_100EAD8C8);
          swift_storeEnumTagMultiPayload();
          sub_10022848C();
          sub_100228394();
          uint64_t v220 = (uint64_t)v314;
          _ConditionalContent<>.init(storage:)();
          sub_1001781AC(v219, &qword_100EAD8C8);
          sub_10006DF38(v220, v325, &qword_100EAD868);
          swift_storeEnumTagMultiPayload();
          sub_100227CD4();
          sub_100227D50();
          _ConditionalContent<>.init(storage:)();
          sub_1001781AC(v220, &qword_100EAD868);
          sub_1001781AC(v218, &qword_100EAD8F8);
          break;
        case 4:
          uint64_t v221 = sub_10017DF08(&qword_100E6CEF0);
          __src[10] = sub_100874A10;
          void __src[11] = 0;
          LOBYTE(__src[12]) = 0;
          __src[0] = v221;
          if (qword_100E62290 != -1) {
            swift_once();
          }
          swift_beginAccess();
          sub_10006DF38((uint64_t)&xmmword_100F51398, (uint64_t)__dst, &qword_100E6F2A0);
          uint64_t v114 = v376;
          if (!*(void *)&__dst[24]) {
            goto LABEL_82;
          }
          sub_1001262E4((long long *)__dst, (uint64_t)&__src[3]);
          __src[1] = sub_100397C58;
          __src[2] = 0;
          uint64_t v222 = Dictionary.init(dictionaryLiteral:)();
          __src[8] = _swiftEmptyArrayStorage;
          __src[9] = v222;
          memcpy(__dst, __src, sizeof(__dst));
          uint64_t v223 = enum case for ColorScheme.dark(_:);
          uint64_t v224 = type metadata accessor for ColorScheme();
          uint64_t v225 = (uint64_t)v372;
          (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v224 - 8) + 104))(v372, v223, v224);
          _s7Weather24LocationCompositionStateOwst_0(v225, 0, 1, v224);
          uint64_t v226 = (uint64_t)v276;
          sub_10006DF38(v225, (uint64_t)&v276[*(int *)(v274 + 36)], (uint64_t *)&unk_100EAA640);
          sub_10006DF38((uint64_t)__dst, v226, &qword_100E70EA0);
          sub_1001781AC(v225, (uint64_t *)&unk_100EAA640);
          sub_1001781AC((uint64_t)__dst, &qword_100E70EA0);
          uint64_t v227 = v275;
          sub_10006DF38(v226, v275, &qword_100EAD948);
          *(unsigned char *)(v227 + *(int *)(v301 + 36)) = 1;
          sub_1001781AC(v226, &qword_100EAD948);
          uint64_t v206 = &qword_100EAD938;
          uint64_t v207 = v278;
          sub_10024D364(v227, v278, &qword_100EAD938);
          sub_10006DF38(v207, v304, &qword_100EAD938);
          swift_storeEnumTagMultiPayload();
          sub_10022CE50();
          sub_10022CDD4();
          uint64_t v228 = (uint64_t)v307;
          _ConditionalContent<>.init(storage:)();
          sub_10006DF38(v228, v317, &qword_100EAD928);
          swift_storeEnumTagMultiPayload();
          sub_100228508();
          sub_100026188((uint64_t)&unk_100EAD970);
          uint64_t v209 = (uint64_t)v319;
          _ConditionalContent<>.init(storage:)();
          sub_1001781AC(v228, &qword_100EAD928);
          uint64_t v210 = &qword_100EAD918;
          sub_10006DF38(v209, v325, &qword_100EAD918);
LABEL_60:
          swift_storeEnumTagMultiPayload();
          sub_100227CD4();
          sub_100227D50();
          _ConditionalContent<>.init(storage:)();
          sub_1001781AC(v209, v210);
          uint64_t v229 = v207;
          goto LABEL_65;
        case 5:
          uint64_t v240 = sub_10017DF08(&qword_100E71000);
          __src[10] = sub_100874A04;
          void __src[11] = 0;
          LOBYTE(__src[12]) = 0;
          __src[0] = v240;
          if (qword_100E62290 != -1) {
            swift_once();
          }
          swift_beginAccess();
          sub_10006DF38((uint64_t)&xmmword_100F51398, (uint64_t)__dst, &qword_100E6F2A0);
          uint64_t v114 = v376;
          if (!*(void *)&__dst[24]) {
            goto LABEL_84;
          }
          sub_1001262E4((long long *)__dst, (uint64_t)&__src[3]);
          __src[1] = sub_100A81E28;
          __src[2] = 0;
          uint64_t v241 = Dictionary.init(dictionaryLiteral:)();
          __src[8] = _swiftEmptyArrayStorage;
          __src[9] = v241;
          memcpy(__dst, __src, sizeof(__dst));
          uint64_t v242 = enum case for ColorScheme.dark(_:);
          uint64_t v243 = type metadata accessor for ColorScheme();
          uint64_t v244 = (uint64_t)v372;
          (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v243 - 8) + 104))(v372, v242, v243);
          _s7Weather24LocationCompositionStateOwst_0(v244, 0, 1, v243);
          uint64_t v245 = (uint64_t)v281;
          sub_10006DF38(v244, (uint64_t)&v281[*(int *)(v279 + 36)], (uint64_t *)&unk_100EAA640);
          sub_10006DF38((uint64_t)__dst, v245, &qword_100E70EB0);
          sub_1001781AC(v244, (uint64_t *)&unk_100EAA640);
          sub_1001781AC((uint64_t)__dst, &qword_100E70EB0);
          uint64_t v246 = v280;
          sub_10006DF38(v245, v280, &qword_100EAD968);
          *(unsigned char *)(v246 + *(int *)(v306 + 36)) = 1;
          sub_1001781AC(v245, &qword_100EAD968);
          uint64_t v194 = &qword_100EAD958;
          uint64_t v195 = v285;
          sub_10024D364(v246, v285, &qword_100EAD958);
          sub_10006DF38(v195, v304, &qword_100EAD958);
          swift_storeEnumTagMultiPayload();
          sub_10022CE50();
          sub_10022CDD4();
          uint64_t v247 = (uint64_t)v307;
          _ConditionalContent<>.init(storage:)();
          sub_10006DF38(v247, v317, &qword_100EAD928);
          swift_storeEnumTagMultiPayload();
          sub_100228508();
          sub_100026188((uint64_t)&unk_100EAD970);
          uint64_t v197 = (uint64_t)v319;
          _ConditionalContent<>.init(storage:)();
          sub_1001781AC(v247, &qword_100EAD928);
          uint64_t v198 = &qword_100EAD918;
          sub_10006DF38(v197, v325, &qword_100EAD918);
LABEL_70:
          swift_storeEnumTagMultiPayload();
          sub_100227CD4();
          sub_100227D50();
          _ConditionalContent<>.init(storage:)();
          sub_1001781AC(v197, v198);
          sub_1001781AC(v195, v194);
          break;
        case 6:
          swift_storeEnumTagMultiPayload();
          sub_10022CAEC();
          uint64_t v248 = (uint64_t)v305;
          _ConditionalContent<>.init(storage:)();
          sub_10006DF38(v248, v317, &qword_100EAD978);
          swift_storeEnumTagMultiPayload();
          sub_100228508();
          sub_100026188((uint64_t)&unk_100EAD970);
          uint64_t v249 = (uint64_t)v319;
          _ConditionalContent<>.init(storage:)();
          sub_1001781AC(v248, &qword_100EAD978);
          sub_10006DF38(v249, v325, &qword_100EAD918);
          swift_storeEnumTagMultiPayload();
          sub_100227CD4();
          sub_100227D50();
          _ConditionalContent<>.init(storage:)();
          sub_1001781AC(v249, &qword_100EAD918);
          sub_1001BFF70(v110, (void (*)(void))type metadata accessor for MainViewModel.ModalModule.LocationDetailModule);
          uint64_t v114 = v376;
          break;
        case 7:
          uint64_t v230 = sub_10017DF08(&qword_100E70FF8);
          __src[10] = sub_1008749F8;
          void __src[11] = 0;
          LOBYTE(__src[12]) = 0;
          __src[0] = v230;
          if (qword_100E62290 != -1) {
            swift_once();
          }
          swift_beginAccess();
          sub_10006DF38((uint64_t)&xmmword_100F51398, (uint64_t)__dst, &qword_100E6F2A0);
          uint64_t v114 = v376;
          if (!*(void *)&__dst[24]) {
            goto LABEL_83;
          }
          sub_1001262E4((long long *)__dst, (uint64_t)&__src[3]);
          __src[1] = sub_100A81E40;
          __src[2] = 0;
          uint64_t v231 = Dictionary.init(dictionaryLiteral:)();
          __src[8] = _swiftEmptyArrayStorage;
          __src[9] = v231;
          memcpy(__dst, __src, sizeof(__dst));
          uint64_t v232 = enum case for ColorScheme.dark(_:);
          uint64_t v233 = type metadata accessor for ColorScheme();
          uint64_t v234 = (uint64_t)v372;
          (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v233 - 8) + 104))(v372, v232, v233);
          _s7Weather24LocationCompositionStateOwst_0(v234, 0, 1, v233);
          uint64_t v235 = (uint64_t)v284;
          sub_10006DF38(v234, (uint64_t)&v284[*(int *)(v282 + 36)], (uint64_t *)&unk_100EAA640);
          sub_10006DF38((uint64_t)__dst, v235, &qword_100E70EE8);
          sub_1001781AC(v234, (uint64_t *)&unk_100EAA640);
          sub_1001781AC((uint64_t)__dst, &qword_100E70EE8);
          uint64_t v236 = v283;
          sub_10006DF38(v235, v283, &qword_100EAD998);
          *(unsigned char *)(v236 + *(int *)(v302 + 36)) = 1;
          sub_1001781AC(v235, &qword_100EAD998);
          uint64_t v206 = &qword_100EAD988;
          uint64_t v237 = v286;
          sub_10024D364(v236, v286, &qword_100EAD988);
          sub_10006DF38(v237, v300, &qword_100EAD988);
          swift_storeEnumTagMultiPayload();
          sub_10022CAEC();
          uint64_t v238 = (uint64_t)v305;
          _ConditionalContent<>.init(storage:)();
          sub_10006DF38(v238, v317, &qword_100EAD978);
          swift_storeEnumTagMultiPayload();
          sub_100228508();
          sub_100026188((uint64_t)&unk_100EAD970);
          uint64_t v239 = (uint64_t)v319;
          _ConditionalContent<>.init(storage:)();
          sub_1001781AC(v238, &qword_100EAD978);
          sub_10006DF38(v239, v325, &qword_100EAD918);
          swift_storeEnumTagMultiPayload();
          sub_100227CD4();
          sub_100227D50();
          _ConditionalContent<>.init(storage:)();
          sub_1001781AC(v239, &qword_100EAD918);
          uint64_t v229 = v237;
LABEL_65:
          sub_1001781AC(v229, v206);
          break;
        default:
          uint64_t v113 = sub_10017DF08(&qword_100E71018);
          __src[10] = sub_100874A40;
          void __src[11] = 0;
          LOBYTE(__src[12]) = 0;
          __src[0] = v113;
          if (qword_100E62290 != -1) {
            swift_once();
          }
          swift_beginAccess();
          sub_10006DF38((uint64_t)&xmmword_100F51398, (uint64_t)__dst, &qword_100E6F2A0);
          uint64_t v114 = v376;
          if (!*(void *)&__dst[24]) {
            goto LABEL_78;
          }
          sub_1001262E4((long long *)__dst, (uint64_t)&__src[3]);
          __src[1] = sub_100A81D68;
          __src[2] = 0;
          uint64_t v115 = Dictionary.init(dictionaryLiteral:)();
          __src[8] = _swiftEmptyArrayStorage;
          __src[9] = v115;
          memcpy(__dst, __src, sizeof(__dst));
          uint64_t v116 = enum case for ColorScheme.dark(_:);
          uint64_t v117 = type metadata accessor for ColorScheme();
          uint64_t v118 = (uint64_t)v372;
          (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v117 - 8) + 104))(v372, v116, v117);
          _s7Weather24LocationCompositionStateOwst_0(v118, 0, 1, v117);
          uint64_t v119 = (uint64_t)v261;
          sub_10006DF38(v118, (uint64_t)&v261[*(int *)(v259 + 36)], (uint64_t *)&unk_100EAA640);
          sub_10006DF38((uint64_t)__dst, v119, &qword_100E70E30);
          sub_1001781AC(v118, (uint64_t *)&unk_100EAA640);
          sub_1001781AC((uint64_t)__dst, &qword_100E70E30);
          uint64_t v120 = v260;
          sub_10006DF38(v119, v260, &qword_100EAD898);
          *(unsigned char *)(v120 + *(int *)(v289 + 36)) = 1;
          sub_1001781AC(v119, &qword_100EAD898);
          uint64_t v121 = v262;
          sub_10024D364(v120, v262, &qword_100EAD888);
          sub_10006DF38(v121, v291, &qword_100EAD888);
          swift_storeEnumTagMultiPayload();
          sub_10022CD58();
          sub_10022CCDC();
          uint64_t v122 = (uint64_t)v292;
          _ConditionalContent<>.init(storage:)();
          sub_10006DF38(v122, v312, &qword_100EAD878);
          swift_storeEnumTagMultiPayload();
          sub_10022848C();
          sub_100228394();
          uint64_t v123 = (uint64_t)v314;
          _ConditionalContent<>.init(storage:)();
          sub_1001781AC(v122, &qword_100EAD878);
          sub_10006DF38(v123, v325, &qword_100EAD868);
          swift_storeEnumTagMultiPayload();
          sub_100227CD4();
          sub_100227D50();
          _ConditionalContent<>.init(storage:)();
          sub_1001781AC(v123, &qword_100EAD868);
          sub_1001781AC(v121, &qword_100EAD888);
          break;
      }
      sub_10006DF38(v112, v363, &qword_100EAD858);
      swift_storeEnumTagMultiPayload();
      sub_1002279C8();
      sub_10024D5E4((uint64_t)&unk_100EAD9A0);
      uint64_t v250 = (uint64_t)v364;
      _ConditionalContent<>.init(storage:)();
      sub_10006DF38(v250, v369, &qword_100EAD848);
      swift_storeEnumTagMultiPayload();
      sub_100228410();
      sub_1002278AC();
      uint64_t v251 = v112;
      uint64_t v252 = (uint64_t)v370;
      _ConditionalContent<>.init(storage:)();
      sub_1001781AC(v250, &qword_100EAD848);
      sub_10006DF38(v252, v114, &qword_100EAD7C8);
      swift_storeEnumTagMultiPayload();
      sub_100227A44();
      sub_100227C58();
      _ConditionalContent<>.init(storage:)();
      sub_1001781AC(v252, &qword_100EAD7C8);
      sub_1001781AC(v251, &qword_100EAD858);
      return sub_1001BFF70(v360, (void (*)(void))type metadata accessor for MainViewModel.ModalModule.LocationDetailModule);
    case 2:
      id v124 = [self currentDevice];
      id v125 = [v124 userInterfaceIdiom];

      uint64_t v254 = v95;
      if (v125)
      {
        sub_1000069BC();
        uint64_t v126 = v321;
        NavigationStack.init<>(root:)();
        uint64_t v127 = v322;
        uint64_t v128 = v349;
        (*(void (**)(uint64_t, char *, uint64_t))(v322 + 16))(v348, v126, v349);
        swift_storeEnumTagMultiPayload();
        sub_10024D5E4((uint64_t)&unk_100EAD770);
        uint64_t v129 = (uint64_t)v332;
        _ConditionalContent<>.init(storage:)();
        (*(void (**)(char *, uint64_t))(v127 + 8))(v126, v128);
        uint64_t v130 = v376;
LABEL_37:
        sub_10006DF38(v129, v353, &qword_100EAD748);
        swift_storeEnumTagMultiPayload();
        sub_100229464();
        sub_10022CB68();
        uint64_t v177 = (uint64_t)v357;
        _ConditionalContent<>.init(storage:)();
        sub_10006DF38(v177, (uint64_t)v256, &qword_100EAD788);
        swift_storeEnumTagMultiPayload();
        sub_100026188((uint64_t)&unk_100EAD720);
        sub_100227E6C();
        uint64_t v178 = (uint64_t)v254;
        _ConditionalContent<>.init(storage:)();
        sub_1001781AC(v177, &qword_100EAD788);
        sub_10006DF38(v178, v130, &qword_100EAD718);
        swift_storeEnumTagMultiPayload();
        sub_100227A44();
        sub_100227C58();
        _ConditionalContent<>.init(storage:)();
        sub_1001781AC(v178, &qword_100EAD718);
        uint64_t v101 = v129;
        uint64_t v102 = &qword_100EAD748;
        return sub_1001781AC(v101, v102);
      }
      uint64_t v169 = sub_10017DF08(&qword_100E7CCD8);
      __src[10] = sub_100874ADC;
      void __src[11] = 0;
      LOBYTE(__src[12]) = 0;
      __src[0] = v169;
      if (qword_100E62290 != -1) {
        swift_once();
      }
      swift_beginAccess();
      sub_10006DF38((uint64_t)&xmmword_100F51398, (uint64_t)__dst, &qword_100E6F2A0);
      uint64_t v170 = v376;
      if (*(void *)&__dst[24])
      {
        sub_1001262E4((long long *)__dst, (uint64_t)&__src[3]);
        __src[1] = sub_100A81A54;
        __src[2] = 0;
        uint64_t v171 = Dictionary.init(dictionaryLiteral:)();
        __src[8] = _swiftEmptyArrayStorage;
        __src[9] = v171;
        memcpy(__dst, __src, sizeof(__dst));
        uint64_t v172 = enum case for ColorScheme.dark(_:);
        uint64_t v173 = type metadata accessor for ColorScheme();
        uint64_t v174 = (uint64_t)v372;
        (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v173 - 8) + 104))(v372, v172, v173);
        _s7Weather24LocationCompositionStateOwst_0(v174, 0, 1, v173);
        uint64_t v175 = (uint64_t)v308;
        sub_10006DF38(v174, (uint64_t)&v308[*(int *)(v350 + 36)], (uint64_t *)&unk_100EAA640);
        sub_10006DF38((uint64_t)__dst, v175, &qword_100EAD768);
        sub_1001781AC(v174, (uint64_t *)&unk_100EAA640);
        sub_1001781AC((uint64_t)__dst, &qword_100EAD768);
        uint64_t v176 = v309;
        sub_10024D364(v175, v309, &qword_100EAD758);
        sub_10006DF38(v176, v348, &qword_100EAD758);
        swift_storeEnumTagMultiPayload();
        sub_1000069BC();
        sub_10024D5E4((uint64_t)&unk_100EAD770);
        uint64_t v129 = (uint64_t)v332;
        _ConditionalContent<>.init(storage:)();
        sub_1001781AC(v176, &qword_100EAD758);
        uint64_t v130 = v170;
        goto LABEL_37;
      }
      goto LABEL_76;
    case 3:
      uint64_t v131 = sub_10017DF08(&qword_100EADA68);
      __src[10] = sub_100874AD0;
      void __src[11] = 0;
      LOBYTE(__src[12]) = 0;
      __src[0] = v131;
      if (qword_100E62290 != -1) {
        swift_once();
      }
      swift_beginAccess();
      sub_10006DF38((uint64_t)&xmmword_100F51398, (uint64_t)__dst, &qword_100E6F2A0);
      uint64_t v132 = v376;
      if (!*(void *)&__dst[24])
      {
        __break(1u);
LABEL_74:
        __break(1u);
LABEL_75:
        __break(1u);
LABEL_76:
        __break(1u);
LABEL_77:
        __break(1u);
LABEL_78:
        __break(1u);
LABEL_79:
        __break(1u);
LABEL_80:
        __break(1u);
LABEL_81:
        __break(1u);
LABEL_82:
        __break(1u);
LABEL_83:
        __break(1u);
LABEL_84:
        __break(1u);
        JUMPOUT(0x100A81A18);
      }
      sub_1001262E4((long long *)__dst, (uint64_t)&__src[3]);
      __src[1] = sub_100A81D04;
      __src[2] = 0;
      uint64_t v133 = Dictionary.init(dictionaryLiteral:)();
      __src[8] = _swiftEmptyArrayStorage;
      __src[9] = v133;
      memcpy(__dst, __src, sizeof(__dst));
      uint64_t v134 = enum case for ColorScheme.dark(_:);
      uint64_t v135 = type metadata accessor for ColorScheme();
      uint64_t v136 = (uint64_t)v372;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v135 - 8) + 104))(v372, v134, v135);
      _s7Weather24LocationCompositionStateOwst_0(v136, 0, 1, v135);
      uint64_t v137 = (uint64_t)v329;
      sub_10006DF38(v136, (uint64_t)&v329[*(int *)(v327 + 36)], (uint64_t *)&unk_100EAA640);
      sub_10006DF38((uint64_t)__dst, v137, &qword_100EAD7B8);
      sub_1001781AC(v136, (uint64_t *)&unk_100EAA640);
      sub_1001781AC((uint64_t)__dst, &qword_100EAD7B8);
      uint64_t v138 = v328;
      sub_10006DF38(v137, v328, &qword_100EAD7A8);
      *(unsigned char *)(v138 + *(int *)(v356 + 36)) = 1;
      sub_1001781AC(v137, &qword_100EAD7A8);
      uint64_t v100 = &qword_100EAD798;
      uint64_t v95 = v336;
      sub_10024D364(v138, (uint64_t)v336, &qword_100EAD798);
      sub_10006DF38((uint64_t)v95, v353, &qword_100EAD798);
      swift_storeEnumTagMultiPayload();
      sub_100229464();
      sub_10022CB68();
      uint64_t v139 = (uint64_t)v357;
      _ConditionalContent<>.init(storage:)();
      sub_10006DF38(v139, (uint64_t)v256, &qword_100EAD788);
      swift_storeEnumTagMultiPayload();
      sub_100026188((uint64_t)&unk_100EAD720);
      sub_100227E6C();
      _ConditionalContent<>.init(storage:)();
      sub_1001781AC(v139, &qword_100EAD788);
      sub_10006DF38(v105, v132, &qword_100EAD718);
      swift_storeEnumTagMultiPayload();
      sub_100227A44();
      sub_100227C58();
      _ConditionalContent<>.init(storage:)();
      sub_1001781AC(v105, &qword_100EAD718);
LABEL_3:
      uint64_t v101 = (uint64_t)v95;
LABEL_4:
      uint64_t v102 = v100;
      return sub_1001781AC(v101, v102);
    case 4:
      uint64_t v140 = sub_10017DF08(&qword_100E96450);
      __src[10] = sub_100874AC4;
      void __src[11] = 0;
      LOBYTE(__src[12]) = 0;
      __src[0] = v140;
      if (qword_100E62290 != -1) {
        swift_once();
      }
      swift_beginAccess();
      sub_10006DF38((uint64_t)&xmmword_100F51398, (uint64_t)__dst, &qword_100E6F2A0);
      uint64_t v141 = v376;
      if (!*(void *)&__dst[24]) {
        goto LABEL_74;
      }
      sub_1001262E4((long long *)__dst, (uint64_t)&__src[3]);
      __src[1] = sub_100A81D1C;
      __src[2] = 0;
      uint64_t v142 = Dictionary.init(dictionaryLiteral:)();
      __src[8] = _swiftEmptyArrayStorage;
      __src[9] = v142;
      memcpy(__dst, __src, sizeof(__dst));
      uint64_t v143 = enum case for ColorScheme.dark(_:);
      uint64_t v144 = type metadata accessor for ColorScheme();
      uint64_t v145 = (uint64_t)v372;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v144 - 8) + 104))(v372, v143, v144);
      _s7Weather24LocationCompositionStateOwst_0(v145, 0, 1, v144);
      uint64_t v146 = (uint64_t)v333;
      sub_10006DF38(v145, (uint64_t)&v333[*(int *)(v330 + 36)], (uint64_t *)&unk_100EAA640);
      sub_10006DF38((uint64_t)__dst, v146, &qword_100EAD808);
      sub_1001781AC(v145, (uint64_t *)&unk_100EAA640);
      sub_1001781AC((uint64_t)__dst, &qword_100EAD808);
      uint64_t v147 = v331;
      sub_10006DF38(v146, v331, &qword_100EAD7F8);
      *(unsigned char *)(v147 + *(int *)(v351 + 36)) = 1;
      sub_1001781AC(v146, &qword_100EAD7F8);
      uint64_t v100 = &qword_100EAD7E8;
      uint64_t v148 = v338;
      sub_10024D364(v147, v338, &qword_100EAD7E8);
      sub_10006DF38(v148, v355, &qword_100EAD7E8);
      swift_storeEnumTagMultiPayload();
      sub_10022CC60();
      sub_10022C9F4();
      uint64_t v149 = (uint64_t)v358;
      goto LABEL_29;
    case 5:
      uint64_t v150 = sub_10017DF08(&qword_100E71AF8);
      __src[10] = sub_100874AB8;
      void __src[11] = 0;
      LOBYTE(__src[12]) = 0;
      __src[0] = v150;
      if (qword_100E62290 != -1) {
        swift_once();
      }
      swift_beginAccess();
      sub_10006DF38((uint64_t)&xmmword_100F51398, (uint64_t)__dst, &qword_100E6F2A0);
      uint64_t v141 = v376;
      if (!*(void *)&__dst[24]) {
        goto LABEL_75;
      }
      sub_1001262E4((long long *)__dst, (uint64_t)&__src[3]);
      __src[1] = sub_100A81D50;
      __src[2] = 0;
      uint64_t v151 = Dictionary.init(dictionaryLiteral:)();
      __src[8] = _swiftEmptyArrayStorage;
      __src[9] = v151;
      memcpy(__dst, __src, sizeof(__dst));
      uint64_t v152 = enum case for ColorScheme.dark(_:);
      uint64_t v153 = type metadata accessor for ColorScheme();
      uint64_t v154 = (uint64_t)v372;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v153 - 8) + 104))(v372, v152, v153);
      _s7Weather24LocationCompositionStateOwst_0(v154, 0, 1, v153);
      uint64_t v155 = (uint64_t)v341;
      sub_10006DF38(v154, (uint64_t)&v341[*(int *)(v339 + 36)], (uint64_t *)&unk_100EAA640);
      sub_10006DF38((uint64_t)__dst, v155, &qword_100EAD838);
      sub_1001781AC(v154, (uint64_t *)&unk_100EAA640);
      sub_1001781AC((uint64_t)__dst, &qword_100EAD838);
      uint64_t v156 = v340;
      sub_10006DF38(v155, v340, &qword_100EAD828);
      *(unsigned char *)(v156 + *(int *)(v359 + 36)) = 1;
      sub_1001781AC(v155, &qword_100EAD828);
      uint64_t v100 = &qword_100EAD818;
      uint64_t v148 = v343;
      sub_10024D364(v156, v343, &qword_100EAD818);
      sub_10006DF38(v148, v355, &qword_100EAD818);
      swift_storeEnumTagMultiPayload();
      sub_10022CC60();
      sub_10022C9F4();
      uint64_t v149 = (uint64_t)v358;
LABEL_29:
      _ConditionalContent<>.init(storage:)();
      sub_10006DF38(v149, v369, &qword_100EAD7D8);
      swift_storeEnumTagMultiPayload();
      sub_100228410();
      sub_1002278AC();
      uint64_t v157 = (uint64_t)v370;
      _ConditionalContent<>.init(storage:)();
      sub_1001781AC(v149, &qword_100EAD7D8);
      sub_10006DF38(v157, v141, &qword_100EAD7C8);
      swift_storeEnumTagMultiPayload();
      sub_100227A44();
      sub_100227C58();
      _ConditionalContent<>.init(storage:)();
      sub_1001781AC(v157, &qword_100EAD7C8);
      uint64_t v101 = v148;
      goto LABEL_4;
    case 6:
      sub_10017DF08(&qword_100EADA38);
      sub_100A83E24();
      uint64_t v158 = v344;
      NavigationView.init(content:)();
      uint64_t v159 = v345;
      uint64_t v160 = v365;
      (*(void (**)(uint64_t, char *, uint64_t))(v345 + 16))(v363, v158, v365);
      swift_storeEnumTagMultiPayload();
      sub_1002279C8();
      sub_10024D5E4((uint64_t)&unk_100EAD9A0);
      uint64_t v161 = (uint64_t)v364;
      _ConditionalContent<>.init(storage:)();
      sub_10006DF38(v161, v369, &qword_100EAD848);
      swift_storeEnumTagMultiPayload();
      sub_100228410();
      sub_1002278AC();
      uint64_t v162 = (uint64_t)v370;
      _ConditionalContent<>.init(storage:)();
      sub_1001781AC(v161, &qword_100EAD848);
      sub_10006DF38(v162, v376, &qword_100EAD7C8);
      swift_storeEnumTagMultiPayload();
      sub_100227A44();
      sub_100227C58();
      _ConditionalContent<>.init(storage:)();
      sub_1001781AC(v162, &qword_100EAD7C8);
      return (*(uint64_t (**)(char *, uint64_t))(v159 + 8))(v158, v160);
    default:
      uint64_t v107 = (uint64_t)v92;
      if (*v98)
      {
        swift_storeEnumTagMultiPayload();
        sub_100229464();
        _ConditionalContent<>.init(storage:)();
        uint64_t v108 = (uint64_t)v256;
      }
      else
      {
        id v163 = [self currentDevice];
        id v164 = [v163 userInterfaceIdiom];

        if (v164)
        {
          uint64_t v372 = (char *)sub_1000069BC();
          uint64_t v165 = v321;
          NavigationStack.init<>(root:)();
          uint64_t v166 = v322;
          uint64_t v167 = v349;
          (*(void (**)(uint64_t, char *, uint64_t))(v322 + 16))(v348, v165, v349);
          swift_storeEnumTagMultiPayload();
          sub_10024D5E4((uint64_t)&unk_100EAD770);
          uint64_t v168 = (uint64_t)v320;
          _ConditionalContent<>.init(storage:)();
          (*(void (**)(char *, uint64_t))(v166 + 8))(v165, v167);
        }
        else
        {
          uint64_t v179 = sub_10017DF08(&qword_100E7CCD8);
          __src[10] = sub_100874ADC;
          void __src[11] = 0;
          LOBYTE(__src[12]) = 0;
          __src[0] = v179;
          if (qword_100E62290 != -1) {
            swift_once();
          }
          swift_beginAccess();
          sub_10006DF38((uint64_t)&xmmword_100F51398, (uint64_t)__dst, &qword_100E6F2A0);
          if (!*(void *)&__dst[24]) {
            goto LABEL_77;
          }
          sub_1001262E4((long long *)__dst, (uint64_t)&__src[3]);
          __src[1] = sub_100A81A54;
          __src[2] = 0;
          uint64_t v180 = Dictionary.init(dictionaryLiteral:)();
          __src[8] = _swiftEmptyArrayStorage;
          __src[9] = v180;
          memcpy(__dst, __src, sizeof(__dst));
          uint64_t v181 = enum case for ColorScheme.dark(_:);
          uint64_t v182 = type metadata accessor for ColorScheme();
          uint64_t v183 = (uint64_t)v372;
          (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v182 - 8) + 104))(v372, v181, v182);
          _s7Weather24LocationCompositionStateOwst_0(v183, 0, 1, v182);
          uint64_t v184 = (uint64_t)v287;
          sub_10006DF38(v183, (uint64_t)&v287[*(int *)(v350 + 36)], (uint64_t *)&unk_100EAA640);
          sub_10006DF38((uint64_t)__dst, v184, &qword_100EAD768);
          sub_1001781AC(v183, (uint64_t *)&unk_100EAA640);
          sub_1001781AC((uint64_t)__dst, &qword_100EAD768);
          uint64_t v185 = v288;
          sub_10024D364(v184, v288, &qword_100EAD758);
          sub_10006DF38(v185, v348, &qword_100EAD758);
          swift_storeEnumTagMultiPayload();
          sub_1000069BC();
          sub_10024D5E4((uint64_t)&unk_100EAD770);
          uint64_t v186 = v320;
          _ConditionalContent<>.init(storage:)();
          uint64_t v168 = (uint64_t)v186;
          sub_1001781AC(v185, &qword_100EAD758);
          uint64_t v106 = (uint64_t)v373;
        }
        sub_10006DF38(v168, v337, &qword_100EAD748);
        swift_storeEnumTagMultiPayload();
        sub_100229464();
        _ConditionalContent<>.init(storage:)();
        sub_1001781AC(v168, &qword_100EAD748);
        uint64_t v108 = (uint64_t)v256;
      }
      sub_10006DF38(v106, (uint64_t)v255, &qword_100EAD738);
      swift_storeEnumTagMultiPayload();
      sub_100227EE8();
      _ConditionalContent<>.init(storage:)();
      sub_10006DF38(v107, v108, &qword_100EAD728);
      swift_storeEnumTagMultiPayload();
      sub_100026188((uint64_t)&unk_100EAD720);
      sub_100227E6C();
      _ConditionalContent<>.init(storage:)();
      sub_1001781AC(v107, &qword_100EAD728);
      sub_10006DF38((uint64_t)v95, v376, &qword_100EAD718);
      swift_storeEnumTagMultiPayload();
      sub_100227A44();
      sub_100227C58();
      _ConditionalContent<>.init(storage:)();
      sub_1001781AC((uint64_t)v95, &qword_100EAD718);
      uint64_t v101 = v106;
      uint64_t v102 = &qword_100EAD738;
      return sub_1001781AC(v101, v102);
  }
}

uint64_t sub_100A81A54(void *a1)
{
  return sub_100A81DF8(a1);
}

uint64_t sub_100A81A6C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_10017DF08((uint64_t *)&unk_100EAA640);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)__src - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0) + 16;
  uint64_t v5 = sub_10017DF08(&qword_100EAD758);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)__src - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0) + 16;
  uint64_t v8 = sub_10017DF08(&qword_100E7CCD8);
  __src[10] = sub_100874ADC;
  void __src[11] = 0;
  LOBYTE(__src[12]) = 0;
  __src[0] = v8;
  if (qword_100E62290 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t result = sub_10006DF38((uint64_t)&xmmword_100F51398, (uint64_t)__dst, &qword_100E6F2A0);
  if (*(void *)&__dst[24])
  {
    sub_1001262E4((long long *)__dst, (uint64_t)&__src[3]);
    __src[1] = sub_100A81A54;
    __src[2] = 0;
    uint64_t v10 = Dictionary.init(dictionaryLiteral:)();
    __src[8] = _swiftEmptyArrayStorage;
    __src[9] = v10;
    memcpy(__dst, __src, sizeof(__dst));
    uint64_t v11 = enum case for ColorScheme.dark(_:);
    uint64_t v12 = type metadata accessor for ColorScheme();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 104))(v4, v11, v12);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v4, 0, 1, v12);
    sub_10006DF38((uint64_t)v4, (uint64_t)&v7[*(int *)(v5 + 36)], (uint64_t *)&unk_100EAA640);
    sub_10006DF38((uint64_t)__dst, (uint64_t)v7, &qword_100EAD768);
    sub_1001781AC((uint64_t)v4, (uint64_t *)&unk_100EAA640);
    sub_1001781AC((uint64_t)__dst, &qword_100EAD768);
    return sub_10024D364((uint64_t)v7, a1, &qword_100EAD758);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100A81D04(void *a1)
{
  return sub_100A81E58(a1);
}

uint64_t sub_100A81D1C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100BCCF88(a2);
}

uint64_t sub_100A81D50(void *a1)
{
  return sub_100A81DF8(a1);
}

uint64_t sub_100A81D68(void *a1)
{
  return sub_100A81DB0(a1);
}

uint64_t sub_100A81D80(void *a1)
{
  return sub_100A81E58(a1);
}

uint64_t sub_100A81D98(void *a1)
{
  return sub_100A81DB0(a1);
}

uint64_t sub_100A81DB0(void *a1)
{
  uint64_t v2 = sub_1001A1294(a1);
  return v1(v2);
}

uint64_t sub_100A81DE0(void *a1)
{
  return sub_100A81DF8(a1);
}

uint64_t sub_100A81DF8(void *a1)
{
  uint64_t v2 = sub_1001A1294(a1);
  return v1(v2);
}

uint64_t sub_100A81E28(void *a1)
{
  return sub_100A81E58(a1);
}

uint64_t sub_100A81E40(void *a1)
{
  return sub_100A81E58(a1);
}

uint64_t sub_100A81E58(void *a1)
{
  uint64_t v2 = sub_1001A1294(a1);
  return v1(v2);
}

uint64_t sub_100A81E88@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_10017DF08((uint64_t *)&unk_100EAA640);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)__src - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0) + 16;
  uint64_t v5 = sub_10017DF08(&qword_100EADA50);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)__src - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0) + 16;
  uint64_t v8 = sub_10017DF08(&qword_100EADA38);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)__src - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0) + 16;
  uint64_t v11 = sub_10017DF08(&qword_100E72A08);
  __src[10] = sub_100874AE8;
  void __src[11] = 0;
  LOBYTE(__src[12]) = 0;
  __src[0] = v11;
  if (qword_100E62290 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t result = sub_10006DF38((uint64_t)&xmmword_100F51398, (uint64_t)__dst, &qword_100E6F2A0);
  if (*(void *)&__dst[24])
  {
    sub_1001262E4((long long *)__dst, (uint64_t)&__src[3]);
    __src[1] = sub_100A821AC;
    __src[2] = 0;
    uint64_t v13 = Dictionary.init(dictionaryLiteral:)();
    __src[8] = _swiftEmptyArrayStorage;
    __src[9] = v13;
    memcpy(__dst, __src, sizeof(__dst));
    uint64_t v14 = enum case for ColorScheme.dark(_:);
    uint64_t v15 = type metadata accessor for ColorScheme();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v15 - 8) + 104))(v4, v14, v15);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v4, 0, 1, v15);
    sub_10006DF38((uint64_t)v4, (uint64_t)&v7[*(int *)(v5 + 36)], (uint64_t *)&unk_100EAA640);
    sub_10006DF38((uint64_t)__dst, (uint64_t)v7, &qword_100EADA60);
    sub_1001781AC((uint64_t)v4, (uint64_t *)&unk_100EAA640);
    sub_1001781AC((uint64_t)__dst, &qword_100EADA60);
    sub_10006DF38((uint64_t)v7, (uint64_t)v10, &qword_100EADA50);
    v10[*(int *)(v8 + 36)] = 1;
    sub_1001781AC((uint64_t)v7, &qword_100EADA50);
    return sub_10024D364((uint64_t)v10, a1, &qword_100EADA38);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100A821AC@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return sub_100A6812C(a2);
}

uint64_t sub_100A821E0()
{
  uint64_t active = type metadata accessor for ActiveLocationModel(0);
  uint64_t v2 = __chkstk_darwin(active - 8);
  uint64_t v4 = (char *)&v29[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v29[-1] - v5;
  uint64_t v7 = sub_10017DF08(&qword_100E6DC08);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  uint64_t v10 = (char *)&v29[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v29[-1] - v11;
  uint64_t v13 = sub_10017DF08(&qword_100E94AE8);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)&v29[-1] - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for MainViewModel(0);
  uint64_t v17 = v16 - 8;
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v29[-1] - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  sub_1001BFFC8();
  swift_release();
  sub_10006DF38((uint64_t)&v19[*(int *)(v17 + 32)], (uint64_t)v15, &qword_100E94AE8);
  sub_1001BFF70((uint64_t)v19, (void (*)(void))type metadata accessor for MainViewModel);
  uint64_t v20 = type metadata accessor for MainViewModel.ModalModule(0);
  uint64_t result = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v15, 1, v20);
  if (result != 1)
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        sub_1001B1E64((void *)(v0 + 16), *(void *)(v0 + 40));
        sub_100665518();
        uint64_t result = sub_1001BFF70((uint64_t)v15, (void (*)(void))type metadata accessor for MainViewModel.ModalModule);
        break;
      case 2u:
        sub_10020D948(v0 + 16, (uint64_t)v29);
        sub_1001B1E64(v29, v30);
        sub_1001362A4();
        sub_10024D364((uint64_t)v6, (uint64_t)v12, &qword_100E6DC08);
        uint64_t v25 = type metadata accessor for Location.Identifier();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v12, 1, v25) == 1)
        {
          sub_1001781AC((uint64_t)v12, &qword_100E6DC08);
          uint64_t v23 = 0;
          uint64_t v24 = 0;
        }
        else
        {
          uint64_t v23 = Location.Identifier.id.getter();
          uint64_t v24 = v27;
          (*(void (**)(char *, uint64_t))(*(void *)(v25 - 8) + 8))(v12, v25);
        }
        goto LABEL_15;
      case 3u:
        sub_1001B1E64((void *)(v0 + 16), *(void *)(v0 + 40));
        uint64_t result = sub_100664FB4();
        break;
      case 4u:
        sub_1001B1E64((void *)(v0 + 16), *(void *)(v0 + 40));
        uint64_t result = sub_100665248();
        break;
      case 5u:
        sub_1001B1E64((void *)(v0 + 16), *(void *)(v0 + 40));
        uint64_t result = sub_100665410();
        break;
      case 6u:
        sub_1001B1E64((void *)(v0 + 16), *(void *)(v0 + 40));
        uint64_t result = sub_100665534();
        break;
      default:
        sub_10020D948(v0 + 16, (uint64_t)v29);
        sub_1001B1E64(v29, v30);
        sub_1001362A4();
        sub_10024D364((uint64_t)v4, (uint64_t)v10, &qword_100E6DC08);
        uint64_t v22 = type metadata accessor for Location.Identifier();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v10, 1, v22) == 1)
        {
          sub_1001781AC((uint64_t)v10, &qword_100E6DC08);
          uint64_t v23 = 0;
          uint64_t v24 = 0;
        }
        else
        {
          uint64_t v23 = Location.Identifier.id.getter();
          uint64_t v24 = v26;
          (*(void (**)(char *, uint64_t))(*(void *)(v22 - 8) + 8))(v10, v22);
        }
LABEL_15:
        sub_100664D98(v23, v24);
        swift_bridgeObjectRelease();
        uint64_t result = _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v29);
        break;
    }
  }
  return result;
}

uint64_t sub_100A82678()
{
  sub_100A841C4(v0, (uint64_t)v6);
  type metadata accessor for MainActor();
  uint64_t v1 = static MainActor.shared.getter();
  uint64_t v2 = (void *)swift_allocObject();
  v2[2] = v1;
  v2[3] = &protocol witness table for MainActor;
  memcpy(v2 + 4, v6, 0x50uLL);
  sub_100A841C4(v0, (uint64_t)v6);
  uint64_t v3 = static MainActor.shared.getter();
  uint64_t v4 = (void *)swift_allocObject();
  v4[2] = v3;
  v4[3] = &protocol witness table for MainActor;
  memcpy(v4 + 4, v6, 0x50uLL);
  Binding.init(get:set:)();
  return v6[0];
}

uint64_t sub_100A8278C@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_10017DF08(&qword_100E94AE8);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for MainViewModel(0);
  uint64_t v6 = v5 - 8;
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for MainViewModel.ModalModule(0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  sub_1001BFFC8();
  swift_release();
  sub_10006DF38((uint64_t)&v8[*(int *)(v6 + 32)], (uint64_t)v4, &qword_100E94AE8);
  sub_1001BFF70((uint64_t)v8, (void (*)(void))type metadata accessor for MainViewModel);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v4, 1, v9) == 1)
  {
    uint64_t result = sub_1001781AC((uint64_t)v4, &qword_100E94AE8);
    BOOL v13 = 0;
  }
  else
  {
    sub_1001BE1F4((uint64_t)v4, (uint64_t)v11, (void (*)(void))type metadata accessor for MainViewModel.ModalModule);
    BOOL v14 = sub_100A1B6D0();
    uint64_t result = sub_1001BFF70((uint64_t)v11, (void (*)(void))type metadata accessor for MainViewModel.ModalModule);
    BOOL v13 = v14;
  }
  *a1 = v13;
  return result;
}

uint64_t sub_100A82978()
{
  uint64_t active = type metadata accessor for ActiveLocationModel(0);
  __chkstk_darwin(active - 8);
  uint64_t v3 = (char *)&v24[-1] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10017DF08(&qword_100E6DC08);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v24[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10017DF08(&qword_100E94AE8);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v24[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v24[-1] - v11;
  uint64_t v13 = type metadata accessor for MainViewModel(0);
  uint64_t v14 = v13 - 8;
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v24[-1] - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  sub_1001BFFC8();
  swift_release();
  sub_10006DF38((uint64_t)&v16[*(int *)(v14 + 32)], (uint64_t)v12, &qword_100E94AE8);
  sub_1001BFF70((uint64_t)v16, (void (*)(void))type metadata accessor for MainViewModel);
  uint64_t v17 = type metadata accessor for MainViewModel.ModalModule(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v12, 1, v17) != 1)
  {
    sub_10006DF38((uint64_t)v12, (uint64_t)v9, &qword_100E94AE8);
    if (swift_getEnumCaseMultiPayload())
    {
      sub_1001BFF70((uint64_t)v9, (void (*)(void))type metadata accessor for MainViewModel.ModalModule);
    }
    else if ((*v9 & 1) == 0)
    {
      sub_10020D948(v0 + 16, (uint64_t)v24);
      sub_1001B1E64(v24, v24[3]);
      sub_1001362A4();
      sub_10024D364((uint64_t)v3, (uint64_t)v6, &qword_100E6DC08);
      uint64_t v18 = type metadata accessor for Location.Identifier();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v6, 1, v18) == 1)
      {
        sub_1001781AC((uint64_t)v6, &qword_100E6DC08);
        uint64_t v19 = 0;
        uint64_t v20 = 0;
      }
      else
      {
        uint64_t v19 = Location.Identifier.id.getter();
        uint64_t v20 = v21;
        (*(void (**)(char *, uint64_t))(*(void *)(v18 - 8) + 8))(v6, v18);
      }
      sub_100664D98(v19, v20);
      swift_bridgeObjectRelease();
      _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v24);
    }
  }
  return sub_1001781AC((uint64_t)v12, &qword_100E94AE8);
}

void sub_100A82CA8()
{
  sub_100162EA0();
  uint64_t v4 = v3;
  uint64_t v48 = v5;
  uint64_t v6 = sub_10017DF08(&qword_100EADAD0);
  sub_100179C0C();
  uint64_t v8 = v7;
  __chkstk_darwin(v9);
  sub_100162EB8();
  uint64_t v50 = sub_10017DF08(&qword_100EADAD8);
  sub_100162E4C();
  __chkstk_darwin(v10);
  sub_1001626E0();
  uint64_t v51 = v12 - v11;
  uint64_t v13 = sub_10017DF08(&qword_100E94AE8);
  uint64_t v14 = sub_100109308(v13);
  __chkstk_darwin(v14);
  uint64_t v15 = sub_1001D2200();
  sub_100162E4C();
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)v42 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = (int *)type metadata accessor for ModalPresentationViewModifier(0);
  sub_100162E4C();
  __chkstk_darwin(v20);
  sub_100162F18();
  uint64_t v49 = sub_10017DF08(&qword_100EADAE0);
  sub_100162E4C();
  __chkstk_darwin(v21);
  sub_100163CD0();
  if (qword_100E62668 != -1)
  {
    uint64_t v47 = v22;
    swift_once();
    uint64_t v22 = v47;
  }
  if (byte_100F51C48 == 1)
  {
    uint64_t v47 = v22;
    swift_retain();
    sub_1001BFFC8();
    swift_release();
    sub_10006DF38((uint64_t)&v18[*(int *)(v15 + 24)], v1, &qword_100E94AE8);
    sub_1001BFF70((uint64_t)v18, (void (*)(void))type metadata accessor for MainViewModel);
    uint64_t v23 = sub_100A82678();
    uint64_t v43 = v24;
    uint64_t v44 = v23;
    v42[3] = v25;
    LOBYTE(v53) = 0;
    static Binding.constant(_:)();
    uint64_t v45 = v6;
    uint64_t v46 = v4;
    uint64_t v26 = v8;
    uint64_t v27 = v56;
    uint64_t v28 = v57;
    char v29 = v58;
    char v52 = 0;
    static Binding.constant(_:)();
    uint64_t v31 = v53;
    uint64_t v30 = v54;
    char v32 = v55;
    sub_10024D364(v1, v2, &qword_100E94AE8);
    uint64_t v33 = (uint64_t *)(v2 + v19[5]);
    uint64_t v34 = v43;
    uint64_t *v33 = v44;
    v33[1] = v34;
    sub_1001A1AA4((uint64_t)v33);
    *(void *)uint64_t v35 = v27;
    *(void *)(v35 + 8) = v28;
    *(unsigned char *)(v35 + 16) = v29;
    uint64_t v36 = v2 + v19[7];
    *(void *)uint64_t v36 = v31;
    *(void *)(v36 + 8) = v30;
    *(unsigned char *)(v36 + 16) = v32;
    uint64_t v37 = (uint64_t *)(v2 + v19[8]);
    type metadata accessor for ObservableResolver();
    sub_10013516C((uint64_t)&qword_100E70FD0);
    *uint64_t v37 = EnvironmentObject.init()();
    v37[1] = v38;
    uint64_t v39 = v2 + v19[9];
    *(void *)uint64_t v39 = swift_getKeyPath();
    *(unsigned char *)(v39 + 8) = 0;
    uint64_t v40 = v47;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v26 + 16))(v47, v46, v45);
    sub_1001BE1F4(v2, v40 + *(int *)(v49 + 36), (void (*)(void))type metadata accessor for ModalPresentationViewModifier);
    sub_10006DF38(v40, v51, &qword_100EADAE0);
    swift_storeEnumTagMultiPayload();
    sub_1000AB214((uint64_t)&unk_100EADAE8);
    sub_10024D5E4((uint64_t)&unk_100EADAF0);
    _ConditionalContent<>.init(storage:)();
    sub_1001781AC(v40, &qword_100EADAE0);
  }
  else
  {
    uint64_t v41 = *(void (**)(void))(v8 + 16);
    sub_100163E30();
    v41();
    sub_100163E30();
    v41();
    swift_storeEnumTagMultiPayload();
    sub_1000AB214((uint64_t)&unk_100EADAE8);
    sub_10024D5E4((uint64_t)&unk_100EADAF0);
    _ConditionalContent<>.init(storage:)();
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v0, v6);
  }
  sub_100162694();
}

uint64_t sub_100A831B8(unsigned char *a1)
{
  uint64_t result = type metadata accessor for MainViewSheetViewModifier(0) - 8;
  if ((*a1 & 1) == 0) {
    return sub_100A7C2B4();
  }
  return result;
}

uint64_t *sub_100A83220(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for MainViewModel.ModalModule(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v7))
    {
      uint64_t v8 = sub_10017DF08(&qword_100E94AE8);
      memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v10 = type metadata accessor for MainViewModel.ModalModule.LocationDetailModule(0);
        if (swift_getEnumCaseMultiPayload() == 6)
        {
          uint64_t v11 = type metadata accessor for URL();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
        }
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
      }
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v7);
    }
    uint64_t v12 = a3[5];
    uint64_t v13 = a3[6];
    uint64_t v14 = (char *)a1 + v12;
    uint64_t v15 = (char *)a2 + v12;
    uint64_t v16 = *((void *)v15 + 1);
    *(void *)uint64_t v14 = *(void *)v15;
    *((void *)v14 + 1) = v16;
    v14[16] = v15[16];
    uint64_t v17 = (char *)a1 + v13;
    uint64_t v18 = (char *)a2 + v13;
    uint64_t v19 = *((void *)v18 + 1);
    *(void *)uint64_t v17 = *(void *)v18;
    *((void *)v17 + 1) = v19;
    v17[16] = v18[16];
    uint64_t v20 = a3[7];
    uint64_t v21 = a3[8];
    uint64_t v22 = (char *)a1 + v20;
    uint64_t v23 = (char *)a2 + v20;
    uint64_t v24 = *((void *)v23 + 1);
    *(void *)uint64_t v22 = *(void *)v23;
    *((void *)v22 + 1) = v24;
    v22[16] = v23[16];
    int v25 = (uint64_t *)((char *)a1 + v21);
    uint64_t v26 = (uint64_t *)((char *)a2 + v21);
    uint64_t v28 = *v26;
    uint64_t v27 = v26[1];
    *int v25 = v28;
    v25[1] = v27;
    uint64_t v29 = a3[9];
    uint64_t v30 = (char *)a1 + v29;
    uint64_t v31 = (char *)a2 + v29;
    uint64_t v32 = *(void *)v31;
    char v33 = v31[8];
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    sub_100195B7C(v32, v33);
    *(void *)uint64_t v30 = v32;
    v30[8] = v33;
  }
  return a1;
}

char *sub_100A834B8(char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for MainViewModel.ModalModule(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v6))
  {
    uint64_t v7 = sub_10017DF08(&qword_100E94AE8);
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v8 = type metadata accessor for MainViewModel.ModalModule.LocationDetailModule(0);
      if (swift_getEnumCaseMultiPayload() == 6)
      {
        uint64_t v9 = type metadata accessor for URL();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(a1, a2, v9);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v6);
  }
  uint64_t v10 = a3[5];
  uint64_t v11 = a3[6];
  uint64_t v12 = &a1[v10];
  uint64_t v13 = &a2[v10];
  *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
  unsigned char v12[16] = v13[16];
  uint64_t v14 = &a1[v11];
  uint64_t v15 = &a2[v11];
  *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
  v14[16] = v15[16];
  uint64_t v16 = a3[7];
  uint64_t v17 = a3[8];
  uint64_t v18 = &a1[v16];
  uint64_t v19 = &a2[v16];
  long long v20 = *(_OWORD *)v19;
  v18[16] = v19[16];
  *(_OWORD *)uint64_t v18 = v20;
  *(_OWORD *)&a1[v17] = *(_OWORD *)&a2[v17];
  uint64_t v21 = a3[9];
  uint64_t v22 = &a1[v21];
  uint64_t v23 = &a2[v21];
  uint64_t v24 = *(void *)v23;
  v22[8] = v23[8];
  *(void *)uint64_t v22 = v24;
  return a1;
}

char *sub_100A836A8(char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for MainViewModel.ModalModule(0);
  int v7 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a1, 1, v6);
  int v8 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v6);
  if (!v7)
  {
    if (!v8)
    {
      if (a1 == a2) {
        goto LABEL_18;
      }
      sub_1001BFF70((uint64_t)a1, (void (*)(void))type metadata accessor for MainViewModel.ModalModule);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v12 = type metadata accessor for MainViewModel.ModalModule.LocationDetailModule(0);
        if (swift_getEnumCaseMultiPayload() == 6)
        {
          uint64_t v13 = type metadata accessor for URL();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(a1, a2, v13);
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(a1, a2, *(void *)(*(void *)(v12 - 8) + 64));
        }
        swift_storeEnumTagMultiPayload();
        goto LABEL_18;
      }
      size_t v11 = *(void *)(*(void *)(v6 - 8) + 64);
LABEL_9:
      memcpy(a1, a2, v11);
      goto LABEL_18;
    }
    sub_1001BFF70((uint64_t)a1, (void (*)(void))type metadata accessor for MainViewModel.ModalModule);
LABEL_8:
    size_t v11 = *(void *)(*(void *)(sub_10017DF08(&qword_100E94AE8) - 8) + 64);
    goto LABEL_9;
  }
  if (v8) {
    goto LABEL_8;
  }
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v9 = type metadata accessor for MainViewModel.ModalModule.LocationDetailModule(0);
    if (swift_getEnumCaseMultiPayload() == 6)
    {
      uint64_t v10 = type metadata accessor for URL();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(a1, a2, v10);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v6);
LABEL_18:
  uint64_t v14 = a3[5];
  uint64_t v15 = &a1[v14];
  uint64_t v16 = &a2[v14];
  *(void *)&a1[v14] = *(void *)&a2[v14];
  swift_release();
  *((void *)v15 + 1) = *((void *)v16 + 1);
  swift_release();
  v15[16] = v16[16];
  uint64_t v17 = a3[6];
  uint64_t v18 = &a1[v17];
  uint64_t v19 = &a2[v17];
  *(void *)&a1[v17] = *(void *)&a2[v17];
  swift_release();
  *((void *)v18 + 1) = *((void *)v19 + 1);
  swift_release();
  v18[16] = v19[16];
  uint64_t v20 = a3[7];
  uint64_t v21 = &a1[v20];
  uint64_t v22 = &a2[v20];
  *(void *)&a1[v20] = *(void *)&a2[v20];
  swift_release();
  *((void *)v21 + 1) = *((void *)v22 + 1);
  swift_release();
  v21[16] = v22[16];
  uint64_t v23 = a3[8];
  uint64_t v24 = &a1[v23];
  int v25 = &a2[v23];
  *(void *)&a1[v23] = *(void *)&a2[v23];
  swift_release();
  *((void *)v24 + 1) = *((void *)v25 + 1);
  uint64_t v26 = a3[9];
  uint64_t v27 = &a1[v26];
  uint64_t v28 = &a2[v26];
  uint64_t v29 = *(void *)v28;
  LOBYTE(v28) = v28[8];
  uint64_t v30 = *(void *)v27;
  char v31 = v27[8];
  *(void *)uint64_t v27 = v29;
  v27[8] = (char)v28;
  sub_10018F6D8(v30, v31);
  return a1;
}

uint64_t sub_100A83A38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100A83A4C);
}

uint64_t sub_100A83A4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_10017DF08(&qword_100E94AE8);
  sub_100162F30();
  if (*(_DWORD *)(v7 + 84) != a2) {
    return sub_100163020(*(void *)(a1 + *(int *)(a3 + 20) + 8));
  }

  return _s7Weather24LocationCompositionStateOwet_0(a1, a2, v6);
}

uint64_t sub_100A83AD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100A83AE8);
}

void sub_100A83AE8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_10017DF08(&qword_100E94AE8);
  sub_100162F30();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    _s7Weather24LocationCompositionStateOwst_0(a1, a2, a2, v8);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
}

unint64_t sub_100A83B78()
{
  return sub_1000AB214((uint64_t)&unk_100EAD6B0);
}

uint64_t sub_100A83BB0()
{
  uint64_t v1 = type metadata accessor for ModalPresentationViewModifier(0);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = type metadata accessor for MainViewModel.ModalModule(0);
  if (!_s7Weather24LocationCompositionStateOwet_0(v0 + v3, 1, v4)
    && swift_getEnumCaseMultiPayload() == 1)
  {
    type metadata accessor for MainViewModel.ModalModule.LocationDetailModule(0);
    if (swift_getEnumCaseMultiPayload() == 6)
    {
      type metadata accessor for URL();
      sub_100162E4C();
      (*(void (**)(uint64_t))(v5 + 8))(v0 + v3);
    }
  }
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_10018F6D8(*(void *)(v0 + v3 + *(int *)(v1 + 36)), *(unsigned char *)(v0 + v3 + *(int *)(v1 + 36) + 8));

  return swift_deallocObject();
}

uint64_t sub_100A83D50@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for ModalPresentationViewModifier(0);
  sub_1001627C0(v3);
  uint64_t v5 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));

  return sub_100A7C9F8(v5, a1);
}

uint64_t sub_100A83DA0()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100A83DD8()
{
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100A83E18@<X0>(uint64_t a1@<X8>)
{
  return sub_100A7C184(*(void (**)(uint64_t))(v1 + 16), *(void *)(v1 + 32), *(void *)(v1 + 40), a1);
}

unint64_t sub_100A83E24()
{
  unint64_t result = qword_100EADA40;
  if (!qword_100EADA40)
  {
    sub_10018C6DC(&qword_100EADA38);
    sub_100A83EA0();
    sub_10022736C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EADA40);
  }
  return result;
}

unint64_t sub_100A83EA0()
{
  unint64_t result = qword_100EADA48;
  if (!qword_100EADA48)
  {
    sub_10018C6DC(&qword_100EADA50);
    sub_10024D5E4((uint64_t)&unk_100EADA58);
    sub_10024D5E4((uint64_t)&unk_100E66B60);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EADA48);
  }
  return result;
}

unsigned char *sub_100A83F78(unsigned char *result)
{
  if ((*result & 1) == 0) {
    return (unsigned char *)sub_100A821E0();
  }
  return result;
}

uint64_t destroy for LocationPreviewOnMapSheetViewModifier(uint64_t a1)
{
  swift_release();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1 + 16);
  swift_release();

  return swift_release();
}

uint64_t initializeWithCopy for LocationPreviewOnMapSheetViewModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = a2 + 16;
  long long v6 = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 40) = v6;
  uint64_t v7 = v6;
  uint64_t v8 = **(void (***)(uint64_t, uint64_t, uint64_t))(v6 - 8);
  swift_retain();
  v8(a1 + 16, v5, v7);
  uint64_t v9 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v9;
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_retain();
  swift_retain();
  return a1;
}

void *assignWithCopy for LocationPreviewOnMapSheetViewModifier(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  sub_1000C1E18(a1 + 2, a2 + 2);
  a1[7] = a2[7];
  swift_retain();
  swift_release();
  a1[8] = a2[8];
  swift_retain();
  swift_release();
  a1[9] = a2[9];
  return a1;
}

uint64_t assignWithTake for LocationPreviewOnMapSheetViewModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_release();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1 + 16);
  long long v5 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v5;
  uint64_t v6 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v6;
  swift_release();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_release();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  return a1;
}

uint64_t sub_100A841A8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100A841C4(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_100A84200@<X0>(BOOL *a1@<X8>)
{
  return sub_100A8278C(a1);
}

uint64_t sub_100A84210()
{
  swift_unknownObjectRelease();
  swift_release();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 48);
  swift_release();
  swift_release();

  return swift_deallocObject();
}

unsigned char *sub_100A84268(unsigned char *result)
{
  if ((*result & 1) == 0) {
    return (unsigned char *)sub_100A82978();
  }
  return result;
}

unint64_t sub_100A84298()
{
  unint64_t result = qword_100EADAF8;
  if (!qword_100EADAF8)
  {
    sub_10018C6DC(&qword_100EADB00);
    sub_1000AB214((uint64_t)&unk_100EADAE8);
    sub_10024D5E4((uint64_t)&unk_100EADAF0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EADAF8);
  }
  return result;
}

uint64_t sub_100A84364(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6)
{
  if (static NSObject.== infix(_:_:)())
  {
    if (a3)
    {
      if (a6) {
        return 1;
      }
    }
    else if ((a6 & 1) == 0 && a2 == a5)
    {
      return 1;
    }
  }
  return 0;
}

uint64_t sub_100A843E8(uint64_t a1, uint64_t a2)
{
  return sub_100A84364(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16), *(void *)a2, *(void *)(a2 + 8), *(unsigned char *)(a2 + 16));
}

uint64_t sub_100A84404(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ViewState(0);
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for UnitManager();
  static UnitManager.standard.getter();
  uint64_t v5 = UnitManager.temperature.getter();
  swift_release();
  sub_10059BF00(a1 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_view, (uint64_t)v4);
  if (*(void *)&v4[*(int *)(v2 + 36) + 8] != 1)
  {
    swift_retain();
    goto LABEL_5;
  }
  uint64_t v6 = self;
  swift_retain();
  id v7 = [v6 currentDevice];
  [v7 userInterfaceIdiom];

  if (v4[*(int *)(v2 + 28)] != 1)
  {
LABEL_5:
    sub_10059BF64((uint64_t)v4);
    swift_release();
    return v5;
  }
  swift_release();
  sub_10059BF64((uint64_t)v4);
  return v5;
}

uint64_t type metadata accessor for ListMenuInputFactory()
{
  return self;
}

ValueMetadata *type metadata accessor for ListMenuInput()
{
  return &type metadata for ListMenuInput;
}

ValueMetadata *type metadata accessor for DebugState()
{
  return &type metadata for DebugState;
}

void sub_100A845B8(int a1, uint64_t a2, int a3)
{
  if (((a1 ^ a3) & 1) == 0) {
    sub_10011B100();
  }
}

uint64_t sub_100A845D4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x706D6F4365646968 && a2 == 0xEE0073746E656E6FLL;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD00000000000001CLL && a2 == 0x8000000100CBC4F0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_100A846E8(char a1)
{
  if (a1) {
    return 0xD00000000000001CLL;
  }
  else {
    return 0x706D6F4365646968;
  }
}

uint64_t sub_100A84730(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10017DF08(&qword_100EADBC0);
  sub_100179C0C();
  uint64_t v8 = v7;
  __chkstk_darwin(v9);
  size_t v11 = (char *)v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001B1E64(a1, a1[3]);
  sub_100A84B80();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  char v15 = 0;
  KeyedEncodingContainer.encode(_:forKey:)();
  if (!v3)
  {
    v13[1] = a3;
    char v14 = 1;
    sub_10017DF08(&qword_100EADBB0);
    sub_100A84C64();
    KeyedEncodingContainer.encode<A>(_:forKey:)();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v11, v6);
}

uint64_t sub_100A84894(void *a1)
{
  sub_10017DF08(&qword_100EADBA0);
  sub_100179C0C();
  __chkstk_darwin(v3);
  uint64_t v4 = a1[3];
  sub_1001B1E64(a1, v4);
  sub_100A84B80();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (!v1)
  {
    LOBYTE(v4) = KeyedDecodingContainer.decode(_:forKey:)();
    sub_10017DF08(&qword_100EADBB0);
    sub_100A84BCC();
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    uint64_t v5 = sub_10017D214();
    v6(v5);
  }
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)a1);
  return v4 & 1;
}

uint64_t sub_100A84A14()
{
  return sub_100A846E8(*v0);
}

uint64_t sub_100A84A1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100A845D4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100A84A44(uint64_t a1)
{
  unint64_t v2 = sub_100A84B80();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100A84A80(uint64_t a1)
{
  unint64_t v2 = sub_100A84B80();

  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_100A84ABC(unsigned __int8 *a1, unsigned __int8 *a2)
{
}

uint64_t sub_100A84AD8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_100A84894(a1);
  if (!v2)
  {
    *(unsigned char *)a2 = result & 1;
    *(void *)(a2 + 8) = v5;
  }
  return result;
}

uint64_t sub_100A84B0C(void *a1)
{
  return sub_100A84730(a1, *v1, *((void *)v1 + 1));
}

void sub_100A84B2C(uint64_t a1@<X8>)
{
  sub_1008BFC88();
  if (!v1)
  {
    *(unsigned char *)a1 = v3 & 1;
    *(void *)(a1 + 8) = v4;
  }
}

void sub_100A84B60()
{
}

unint64_t sub_100A84B80()
{
  unint64_t result = qword_100EADBA8;
  if (!qword_100EADBA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EADBA8);
  }
  return result;
}

unint64_t sub_100A84BCC()
{
  unint64_t result = qword_100EADBB8;
  if (!qword_100EADBB8)
  {
    sub_10018C6DC(&qword_100EADBB0);
    sub_100A84CFC(&qword_100E84DE0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EADBB8);
  }
  return result;
}

unint64_t sub_100A84C64()
{
  unint64_t result = qword_100EADBC8;
  if (!qword_100EADBC8)
  {
    sub_10018C6DC(&qword_100EADBB0);
    sub_100A84CFC(&qword_100E84DF0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EADBC8);
  }
  return result;
}

uint64_t sub_100A84CFC(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for WeatherCondition();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for DebugState.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100A84E0CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DebugState.CodingKeys()
{
  return &type metadata for DebugState.CodingKeys;
}

unint64_t sub_100A84E48()
{
  unint64_t result = qword_100EADBD0;
  if (!qword_100EADBD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EADBD0);
  }
  return result;
}

unint64_t sub_100A84E98()
{
  unint64_t result = qword_100EADBD8;
  if (!qword_100EADBD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EADBD8);
  }
  return result;
}

unint64_t sub_100A84EE8()
{
  unint64_t result = qword_100EADBE0;
  if (!qword_100EADBE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EADBE0);
  }
  return result;
}

void *sub_100A84F34(uint64_t a1)
{
  uint64_t v16 = type metadata accessor for Location.Identifier();
  sub_100179C0C();
  uint64_t v4 = v3;
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)(a1 + 16);
  uint64_t v9 = _swiftEmptyArrayStorage;
  if (v8)
  {
    v14[1] = v1;
    uint64_t v17 = _swiftEmptyArrayStorage;
    sub_1001D2844();
    uint64_t v9 = v17;
    uint64_t v10 = *(void *)(type metadata accessor for SavedLocation() - 8);
    uint64_t v11 = a1 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
    uint64_t v15 = *(void *)(v10 + 72);
    do
    {
      SavedLocation.identifier.getter();
      uint64_t v17 = v9;
      unint64_t v12 = v9[2];
      if (v12 >= v9[3] >> 1)
      {
        sub_1001D2844();
        uint64_t v9 = v17;
      }
      void v9[2] = v12 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))((unint64_t)v9+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(void *)(v4 + 72) * v12, v7, v16);
      v11 += v15;
      --v8;
    }
    while (v8);
  }
  return v9;
}

void sub_100A850F4()
{
  uint64_t v3 = type metadata accessor for Location.Identifier();
  sub_100179C0C();
  uint64_t v5 = v4;
  __n128 v7 = __chkstk_darwin(v6);
  uint64_t v9 = (char *)v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t *__return_ptr, __n128))(v0 + 16))(&v41, v7);
  uint64_t v10 = v41;
  id v11 = sub_100A85500(v41);
  unint64_t v12 = sub_100A859C4(v10);
  if (v11) {
    uint64_t v13 = 1;
  }
  else {
    uint64_t v13 = 2;
  }
  uint64_t v14 = sub_1002B4200(v13, (uint64_t)v12);
  uint64_t v39 = v15;
  uint64_t v37 = v16;
  int64_t v38 = v17 >> 1;
  uint64_t v18 = (v17 >> 1) - v15;
  if (__OFSUB__(v17 >> 1, v15))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  uint64_t v19 = (void *)v14;
  uint64_t v20 = _swiftEmptyArrayStorage;
  if (v18)
  {
    uint64_t v41 = (uint64_t)_swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)();
    if ((v18 & 0x8000000000000000) == 0)
    {
      v33[1] = v19;
      v33[2] = v10;
      id v34 = v11;
      uint64_t v21 = 0;
      id v1 = 0;
      uint64_t v35 = v5 + 16;
      uint64_t v36 = v3;
      while (1)
      {
        id v2 = (id)(v21 + 1);
        if (__OFADD__(v21, 1)) {
          break;
        }
        if (v39 + v21 >= v38 || v21 >= v18) {
          goto LABEL_23;
        }
        (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v9, v37 + *(void *)(v5 + 72) * (v39 + v21), v36);
        sub_100A85CC4((uint64_t)v9, &v40);
        uint64_t v23 = sub_10017DB60();
        v24(v23);
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        id v11 = *(id *)(v41 + 16);
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
        ++v21;
        if (v2 == (id)v18)
        {
          uint64_t v19 = (void *)v41;
          swift_unknownObjectRelease();
          id v11 = v34;
          uint64_t v20 = _swiftEmptyArrayStorage;
          goto LABEL_17;
        }
      }
      __break(1u);
LABEL_23:
      __break(1u);
      goto LABEL_24;
    }
    __break(1u);
    goto LABEL_27;
  }
  swift_unknownObjectRelease();
  uint64_t v19 = _swiftEmptyArrayStorage;
LABEL_17:
  id v25 = [self mainBundle];
  v42._countAndFlagsBits = 0xD000000000000055;
  v42._object = (void *)0x8000000100CBC570;
  v26._countAndFlagsBits = 6579265;
  v26._object = (void *)0xE300000000000000;
  v27._countAndFlagsBits = 0;
  v27._object = (void *)0xE000000000000000;
  Swift::String v28 = NSLocalizedString(_:tableName:bundle:value:comment:)(v26, (Swift::String_optional)0, (NSBundle)v25, v27, v42);

  sub_1001ABC4C(0, (unint64_t *)&unk_100EADD30);
  id v29 = sub_100A85960();
  id v30 = objc_allocWithZone((Class)UIApplicationShortcutItem);
  uint64_t v18 = (uint64_t)sub_100A861B8(0xD00000000000001ELL, 0x8000000100C95440, v28._countAndFlagsBits, (uint64_t)v28._object, 0, 0, v29, 0);
  id v2 = [self sharedApplication];
  uint64_t v41 = (uint64_t)_swiftEmptyArrayStorage;
  if (v11)
  {
    id v31 = v11;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((v41 & 0xFFFFFFFFFFFFFF8) + 0x10) < *(void *)((v41 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    {
LABEL_19:
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
      uint64_t v20 = (void *)v41;
      goto LABEL_20;
    }
LABEL_27:
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    goto LABEL_19;
  }
LABEL_20:

  uint64_t v41 = (uint64_t)v20;
  sub_10037F8C0((unint64_t)v19);
  id v1 = (id)v18;
  swift_bridgeObjectRetain();
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((v41 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v41 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
LABEL_25:
  }
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  uint64_t v32 = v41;
  swift_bridgeObjectRelease();
  sub_100A862DC(v32, v2);
  swift_release();
}

id sub_100A85500(uint64_t a1)
{
  uint64_t v2 = sub_10017DF08((uint64_t *)&unk_100EADD50);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for LocationsState();
  __chkstk_darwin(v5 - 8);
  __n128 v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for CurrentLocation();
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v29 - v12;
  uint64_t v14 = a1 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_environment;
  swift_beginAccess();
  id v15 = 0;
  if (*(unsigned __int8 *)(v14 + 1) - 1 <= 1)
  {
    sub_1001CED28(a1 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_locations, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for LocationsState);
    sub_10013B3F0((uint64_t)v7, (uint64_t)v4);
    sub_1001CEF40((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for LocationsState);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v4, 1, v8) == 1)
    {
      sub_100563488((uint64_t)v4);
      return 0;
    }
    else
    {
      sub_10013CA40((uint64_t)v4, (uint64_t)v13);
      if (qword_100E62850 != -1) {
        swift_once();
      }
      uint64_t v16 = type metadata accessor for Logger();
      sub_1002102B0(v16, (uint64_t)qword_100F51FF8);
      sub_1001CED28((uint64_t)v13, (uint64_t)v10, (uint64_t (*)(void))&type metadata accessor for CurrentLocation);
      unint64_t v17 = Logger.logObject.getter();
      os_log_type_t v18 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v17, v18))
      {
        uint64_t v19 = swift_slowAlloc();
        uint64_t v20 = swift_slowAlloc();
        *(_DWORD *)uint64_t v19 = 141558275;
        uint64_t v30 = 1752392040;
        uint64_t v31 = v20;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v19 + 12) = 2081;
        uint64_t v21 = CurrentLocation.name.getter();
        uint64_t v30 = sub_10016414C(v21, v22, &v31);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        sub_1001CEF40((uint64_t)v10, (uint64_t (*)(void))&type metadata accessor for CurrentLocation);
        _os_log_impl((void *)&_mh_execute_header, v17, v18, "Adding shortcuts for current location, name=%{private,mask.hash}s", (uint8_t *)v19, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        sub_1001CEF40((uint64_t)v10, (uint64_t (*)(void))&type metadata accessor for CurrentLocation);
      }

      uint64_t v23 = CurrentLocation.name.getter();
      uint64_t v25 = v24;
      sub_1001ABC4C(0, (unint64_t *)&unk_100EADD30);
      id v26 = sub_100A85960();
      id v27 = objc_allocWithZone((Class)UIApplicationShortcutItem);
      id v15 = sub_100A861B8(0xD00000000000002ALL, 0x8000000100C953F0, v23, v25, 0, 0, v26, 0);
      sub_1001CEF40((uint64_t)v13, (uint64_t (*)(void))&type metadata accessor for CurrentLocation);
    }
  }
  return v15;
}

id sub_100A85960()
{
  NSString v0 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v1 = [(id)swift_getObjCClassFromMetadata() iconWithSystemImageName:v0];

  return v1;
}

void *sub_100A859C4(uint64_t a1)
{
  uint64_t v2 = sub_10017DF08((uint64_t *)&unk_100EADD50);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for LocationsState();
  __chkstk_darwin(v5);
  __n128 v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for CurrentLocation();
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001CED28(a1 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_locations, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for LocationsState);
  sub_10013B3F0((uint64_t)v7, (uint64_t)v4);
  sub_1001CEF40((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for LocationsState);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v4, 1, v8) == 1)
  {
    sub_100563488((uint64_t)v4);
    uint64_t v11 = swift_bridgeObjectRetain();
    uint64_t v12 = sub_100A84F34(v11);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_10013CA40((uint64_t)v4, (uint64_t)v10);
    uint64_t v13 = swift_bridgeObjectRetain();
    sub_100A84F34(v13);
    uint64_t v14 = swift_bridgeObjectRelease();
    __chkstk_darwin(v14);
    *(&v17 - 2) = (uint64_t)v10;
    sub_100A95B64();
    uint64_t v12 = v15;
    sub_1001CEF40((uint64_t)v10, (uint64_t (*)(void))&type metadata accessor for CurrentLocation);
  }
  return v12;
}

uint64_t sub_100A85C1C()
{
  uint64_t v0 = Location.Identifier.name.getter();
  uint64_t v2 = v1;
  if (v0 == CurrentLocation.name.getter() && v2 == v3)
  {
    swift_bridgeObjectRelease_n();
    char v6 = 0;
  }
  else
  {
    char v5 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char v6 = v5 ^ 1;
  }
  return v6 & 1;
}

id sub_100A85CC4@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = type metadata accessor for Location.Identifier();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v41 = &v35[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v8);
  uint64_t v10 = &v35[-v9];
  sub_10017DF08(&qword_100EADD48);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100C33BA0;
  *(void *)(inited + 32) = 0x656475746974616CLL;
  *(void *)(inited + 40) = 0xE800000000000000;
  Location.Identifier.coordinate.getter();
  *(NSNumber *)(inited + 48) = Double._bridgeToObjectiveC()();
  *(void *)(inited + 56) = 0x64757469676E6F6CLL;
  *(void *)(inited + 64) = 0xE900000000000065;
  Location.Identifier.coordinate.getter();
  *(NSNumber *)(inited + 72) = Double._bridgeToObjectiveC()();
  *(void *)(inited + 80) = 1701667182;
  *(void *)(inited + 88) = 0xE400000000000000;
  Location.Identifier.name.getter();
  NSString v12 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  *(void *)(inited + 96) = v12;
  sub_10017DF08(&qword_100EADD40);
  uint64_t v40 = Dictionary.init(dictionaryLiteral:)();
  if (qword_100E62850 != -1) {
    swift_once();
  }
  uint64_t v13 = type metadata accessor for Logger();
  sub_1002102B0(v13, (uint64_t)qword_100F51FF8);
  uint64_t v14 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v6 + 16);
  v14(v10, a1, v5);
  v14(v41, a1, v5);
  id v15 = Logger.logObject.getter();
  os_log_type_t v16 = static os_log_type_t.default.getter();
  int v17 = v16;
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v18 = swift_slowAlloc();
    int v36 = v17;
    uint64_t v19 = v18;
    uint64_t v37 = swift_slowAlloc();
    uint64_t v44 = v37;
    *(_DWORD *)uint64_t v19 = 141558787;
    uint64_t v42 = 1752392040;
    uint64_t v39 = v2;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v19 + 12) = 2081;
    int64_t v38 = a2;
    uint64_t v20 = Location.Identifier.name.getter();
    uint64_t v42 = sub_10016414C(v20, v21, &v44);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    unint64_t v22 = *(void (**)(unsigned char *, uint64_t))(v6 + 8);
    v22(v10, v5);
    *(_WORD *)(v19 + 22) = 2160;
    uint64_t v42 = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v19 + 32) = 2081;
    uint64_t v23 = v41;
    Location.Identifier.coordinate.getter();
    uint64_t v42 = v24;
    uint64_t v43 = v25;
    type metadata accessor for CLLocationCoordinate2D(0);
    uint64_t v26 = String.init<A>(describing:)();
    uint64_t v42 = sub_10016414C(v26, v27, &v44);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    v22(v23, v5);
    a2 = v38;
    _os_log_impl((void *)&_mh_execute_header, v15, (os_log_type_t)v36, "Adding shortcuts for saved location, name=%{private,mask.hash}s, coordinate=%{private,mask.hash}s", (uint8_t *)v19, 0x2Au);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    Swift::String v28 = *(void (**)(unsigned char *, uint64_t))(v6 + 8);
    v28(v10, v5);
    v28(v41, v5);
  }

  uint64_t v29 = Location.Identifier.name.getter();
  uint64_t v31 = v30;
  sub_1001ABC4C(0, (unint64_t *)&unk_100EADD30);
  id v32 = sub_100A85960();
  id v33 = objc_allocWithZone((Class)UIApplicationShortcutItem);
  id result = sub_100A861B8(0xD00000000000001FLL, 0x8000000100C95420, v29, v31, 0, 0, v32, v40);
  *a2 = result;
  return result;
}

id sub_100A861B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7, uint64_t a8)
{
  NSString v12 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  NSString v13 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  if (!a6)
  {
    NSString v14 = 0;
    if (a8) {
      goto LABEL_3;
    }
LABEL_5:
    v15.super.Class isa = 0;
    goto LABEL_6;
  }
  NSString v14 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  if (!a8) {
    goto LABEL_5;
  }
LABEL_3:
  sub_10017DF08(&qword_100EADD40);
  v15.super.Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
LABEL_6:
  id v16 = [v8 initWithType:v12 localizedTitle:v13 localizedSubtitle:v14 icon:a7 userInfo:v15.super.isa];

  return v16;
}

void sub_100A862DC(uint64_t a1, void *a2)
{
  sub_1001ABC4C(0, (unint64_t *)&qword_100E97160);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [a2 setShortcutItems:isa];
}

uint64_t sub_100A86360()
{
  return sub_100A85C1C() & 1;
}

id sub_100A86380()
{
  id result = sub_100A863A0();
  qword_100EADD60 = (uint64_t)result;
  return result;
}

id sub_100A863A0()
{
  id v0 = [objc_allocWithZone((Class)NSDateFormatter) init];
  static Date.uses24HourTime()();
  NSString v1 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v0 setLocalizedDateFormatFromTemplate:v1];

  [v0 setFormattingContext:2];
  return v0;
}

id sub_100A8646C()
{
  id result = sub_100A8648C();
  qword_100EADD68 = (uint64_t)result;
  return result;
}

id sub_100A8648C()
{
  id v0 = [objc_allocWithZone((Class)NSDateFormatter) init];
  static Date.uses24HourTime()();
  NSString v1 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v0 setLocalizedDateFormatFromTemplate:v1];

  [v0 setFormattingContext:2];
  return v0;
}

id sub_100A86558()
{
  id result = sub_100A86578();
  qword_100EADD70 = (uint64_t)result;
  return result;
}

id sub_100A86578()
{
  id v0 = [objc_allocWithZone((Class)NSDateFormatter) init];
  static Date.uses24HourTime()();
  NSString v1 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v0 setLocalizedDateFormatFromTemplate:v1];

  [v0 setFormattingContext:2];
  return v0;
}

id sub_100A86630()
{
  id result = sub_100A86650();
  qword_100EADD78 = (uint64_t)result;
  return result;
}

id sub_100A86650()
{
  id v0 = [objc_allocWithZone((Class)NSDateFormatter) init];
  static Date.uses24HourTime()();
  NSString v1 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v0 setLocalizedDateFormatFromTemplate:v1];

  [v0 setFormattingContext:2];
  return v0;
}

uint64_t sub_100A86700@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v262 = a2;
  uint64_t v239 = type metadata accessor for Location();
  sub_100179C0C();
  uint64_t v237 = v4;
  __chkstk_darwin(v5);
  sub_100109314();
  uint64_t v238 = v6;
  sub_100129064();
  uint64_t v7 = type metadata accessor for MoonDetailSelectedDate();
  uint64_t v8 = sub_100109308(v7);
  __chkstk_darwin(v8);
  sub_100109314();
  uint64_t v261 = v9;
  uint64_t v10 = sub_100129064();
  uint64_t v11 = type metadata accessor for MoonViewModel(v10);
  uint64_t v12 = sub_100109308(v11);
  __chkstk_darwin(v12);
  sub_100162EF8();
  uint64_t v260 = v13;
  sub_1001626D4();
  __chkstk_darwin(v14);
  sub_100128F8C();
  uint64_t v259 = v15;
  sub_100129064();
  uint64_t v216 = type metadata accessor for ArticlePlacementLocation();
  sub_100179C0C();
  uint64_t v215 = v16;
  __chkstk_darwin(v17);
  sub_100109314();
  sub_100109338(v18);
  uint64_t v19 = sub_10017DF08(&qword_100E7B2B8);
  uint64_t v20 = sub_100109308(v19);
  __chkstk_darwin(v20);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v21);
  sub_100128F8C();
  uint64_t v213 = v22;
  uint64_t v23 = sub_100129064();
  uint64_t v214 = type metadata accessor for NewsArticleComponentViewModel(v23);
  sub_100162E4C();
  __chkstk_darwin(v24);
  sub_100109314();
  sub_100109338(v25);
  uint64_t v26 = sub_10017DF08(&qword_100E670F0);
  uint64_t v27 = sub_100109308(v26);
  __chkstk_darwin(v27);
  sub_100109314();
  uint64_t v226 = v28;
  sub_100129064();
  uint64_t v225 = type metadata accessor for NewsDataModel();
  sub_100162E4C();
  __chkstk_darwin(v29);
  sub_100109314();
  sub_100109338(v30);
  uint64_t v31 = sub_10017DF08(&qword_100E66E28);
  uint64_t v32 = sub_100109308(v31);
  __chkstk_darwin(v32);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v33);
  sub_100179C90();
  __chkstk_darwin(v34);
  sub_100128F8C();
  uint64_t v258 = v35;
  uint64_t v222 = sub_10017DF08(&qword_100E7FA48);
  sub_100162E4C();
  __chkstk_darwin(v36);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v37);
  sub_100128F8C();
  uint64_t v256 = v38;
  uint64_t v39 = sub_100129064();
  uint64_t v40 = type metadata accessor for ConditionDetailPlatterViewModel(v39);
  uint64_t v41 = sub_100109308(v40);
  __chkstk_darwin(v41);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v42);
  sub_100128F8C();
  uint64_t v254 = v43;
  uint64_t v44 = sub_100129064();
  uint64_t v221 = type metadata accessor for MoonScrubberHeaderViewModel(v44);
  sub_100162E4C();
  __chkstk_darwin(v45);
  sub_100162EF8();
  uint64_t v257 = v46;
  sub_1001626D4();
  __chkstk_darwin(v47);
  sub_100128F8C();
  uint64_t v253 = v48;
  uint64_t v49 = sub_10017DF08(&qword_100E7CB90);
  uint64_t v50 = sub_100109308(v49);
  __chkstk_darwin(v50);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v51);
  sub_100128F8C();
  uint64_t v251 = v52;
  sub_100129064();
  uint64_t v252 = type metadata accessor for OverviewTableViewModel();
  sub_100179C0C();
  uint64_t v250 = v53;
  __chkstk_darwin(v54);
  sub_100162EF8();
  uint64_t v255 = v55;
  sub_1001626D4();
  __chkstk_darwin(v56);
  sub_100128F8C();
  uint64_t v249 = v57;
  sub_100129064();
  uint64_t v269 = type metadata accessor for Date();
  sub_100179C0C();
  uint64_t countAndFlagsBits = v58;
  uint64_t v60 = __chkstk_darwin(v59);
  uint64_t v62 = (char *)&v201 - ((v61 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v60);
  uint64_t v266 = (uint64_t)&v201 - v63;
  sub_1001626D4();
  __chkstk_darwin(v64);
  sub_100179C90();
  __chkstk_darwin(v65);
  sub_100128F8C();
  object = v66;
  uint64_t v67 = sub_100129064();
  uint64_t v244 = type metadata accessor for MoonOverviewTableViewModel(v67);
  sub_100162E4C();
  __chkstk_darwin(v68);
  sub_100109314();
  sub_100109338(v69);
  uint64_t v70 = sub_10017DF08(&qword_100EADE58);
  uint64_t v71 = sub_100109308(v70);
  __chkstk_darwin(v71);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v72);
  sub_100128F8C();
  uint64_t v268 = v73;
  sub_100129064();
  uint64_t v232 = type metadata accessor for ConditionUnits();
  sub_100179C0C();
  uint64_t v231 = v74;
  __chkstk_darwin(v75);
  sub_1001626E0();
  uint64_t v78 = v77 - v76;
  uint64_t v79 = type metadata accessor for TimeZone();
  sub_100179C0C();
  uint64_t v81 = v80;
  __chkstk_darwin(v82);
  sub_1001626E0();
  uint64_t v85 = v84 - v83;
  uint64_t v228 = type metadata accessor for Calendar();
  sub_100179C0C();
  uint64_t v227 = v86;
  __chkstk_darwin(v87);
  sub_100109314();
  uint64_t v89 = v88;
  uint64_t v90 = sub_100129064();
  uint64_t v91 = type metadata accessor for MoonDetailInput(v90);
  uint64_t v92 = sub_100109308(v91);
  __chkstk_darwin(v92);
  sub_1001626E0();
  uint64_t v95 = v94 - v93;
  type metadata accessor for MoonDetailInput.Input(0);
  sub_100162E4C();
  __chkstk_darwin(v96);
  sub_1001626E0();
  uint64_t v99 = v98 - v97;
  uint64_t v100 = a1;
  uint64_t v102 = v101;
  sub_100A8BEDC(v100, v95, (void (*)(void))type metadata accessor for MoonDetailInput);
  if (_s7Weather24LocationCompositionStateOwet_0(v95, 1, v102) == 1)
  {
    sub_100A8BF30(v95, (void (*)(void))type metadata accessor for MoonDetailInput);
    uint64_t v103 = 1;
    uint64_t v104 = v262;
  }
  else
  {
    uint64_t v233 = v62;
    sub_100A8F860(v95, v99, (void (*)(void))type metadata accessor for MoonDetailInput.Input);
    uint64_t v241 = v79;
    uint64_t v242 = v102;
    Location.timeZone.getter();
    uint64_t v246 = v89;
    static Calendar.currentCalendar(with:)();
    uint64_t v240 = *(void (**)(uint64_t, uint64_t))(v81 + 8);
    v240(v85, v79);
    uint64_t v229 = v78;
    sub_100A87DA0(v99, v78);
    uint64_t v105 = v268;
    sub_100A88018(v99, v268);
    Location.timeZone.getter();
    uint64_t v106 = v99 + *(int *)(v102 + 20);
    uint64_t v107 = object;
    sub_10085FC7C((uint64_t)object);
    uint64_t v224 = *(int *)(v102 + 44);
    int v108 = *(unsigned __int8 *)(v99 + v224);
    uint64_t v109 = v248;
    uint64_t v236 = v2;
    sub_100A89700(v105, v85, v107, v108, v248);
    uint64_t v110 = v99;
    uint64_t v111 = countAndFlagsBits;
    uint64_t v112 = *(void (**)(void))(countAndFlagsBits + 8);
    sub_100183838();
    v112();
    uint64_t v219 = v85;
    uint64_t v220 = v81 + 8;
    v240(v85, v241);
    uint64_t v113 = *(void (**)(uint64_t, uint64_t, uint64_t))(v250 + 16);
    uint64_t v207 = v250 + 16;
    uint64_t v206 = v113;
    v113(v249, v109, v252);
    sub_10006DF38(v109 + *(int *)(v244 + 20), v251, &qword_100E7CB90);
    uint64_t v244 = v106;
    sub_10085FC7C((uint64_t)v107);
    uint64_t v114 = *(int *)(v242 + 32);
    uint64_t v264 = v110;
    uint64_t v217 = v110 + v114;
    LODWORD(v106) = Calendar.isDate(_:inSameDayAs:)();
    uint64_t v265 = v111 + 8;
    uint64_t v263 = v112;
    sub_100183838();
    v112();
    int v205 = v106;
    if (v106)
    {
      if (qword_100E62AB0 != -1) {
        swift_once();
      }
      uint64_t v115 = qword_100E62AB8;
      id v243 = (id)qword_100EADD60;
      if (v115 != -1) {
        swift_once();
      }
      uint64_t v116 = &qword_100EADD68;
    }
    else
    {
      if (qword_100E62AC0 != -1) {
        swift_once();
      }
      uint64_t v117 = qword_100E62AC8;
      id v243 = (id)qword_100EADD70;
      if (v117 != -1) {
        swift_once();
      }
      uint64_t v116 = &qword_100EADD78;
    }
    id v118 = (id)*v116;
    uint64_t v119 = v219;
    Location.timeZone.getter();
    Class isa = TimeZone._bridgeToObjectiveC()().super.isa;
    uint64_t v121 = v241;
    uint64_t v122 = v240;
    v240(v119, v241);
    [v243 setTimeZone:isa];

    Location.timeZone.getter();
    Class v123 = TimeZone._bridgeToObjectiveC()().super.isa;
    v122(v119, v121);
    [v118 setTimeZone:v123];

    uint64_t v124 = (uint64_t)v218;
    sub_10006DF38(v268, (uint64_t)v218, &qword_100EADE58);
    uint64_t v125 = type metadata accessor for InterpolatedMoonData();
    if (_s7Weather24LocationCompositionStateOwet_0(v124, 1, v125) == 1)
    {
      sub_100178110(v124, &qword_100EADE58);
      uint64_t v204 = 0;
      unint64_t v203 = 0xE000000000000000;
    }
    else
    {
      InterpolatedMoonData.moonPhase.getter();
      sub_100162F0C();
      v126();
      uint64_t v204 = MoonPhase.description.getter();
      unint64_t v203 = v127;
    }
    sub_10085FC7C((uint64_t)v107);
    Class v128 = Date._bridgeToObjectiveC()().super.isa;
    uint64_t v129 = v269;
    uint64_t v130 = v263;
    ((void (*)(void (*)(char *, char *, uint64_t), uint64_t))v263)(v107, v269);
    id v131 = [v243 stringFromDate:v128];

    uint64_t v132 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v202 = v133;

    sub_10085FC7C((uint64_t)v107);
    Class v134 = Date._bridgeToObjectiveC()().super.isa;
    ((void (*)(void (*)(char *, char *, uint64_t), uint64_t))v130)(v107, v129);
    id v218 = v118;
    id v135 = [v118 stringFromDate:v134];

    uint64_t v136 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v138 = v137;

    uint64_t v139 = v221;
    uint64_t v140 = v253;
    uint64_t v141 = countAndFlagsBits;
    uint64_t v142 = *(void (**)(void))(countAndFlagsBits + 16);
    sub_1001D2228();
    v142();
    uint64_t v201 = v142;
    uint64_t v143 = v242;
    uint64_t v144 = v264;
    sub_1001D2228();
    v142();
    char v145 = *(unsigned char *)(v144 + *(int *)(v143 + 40));
    unint64_t v146 = v203;
    *(void *)uint64_t v140 = v204;
    *(void *)(v140 + 8) = v146;
    uint64_t v147 = v202;
    *(void *)(v140 + 16) = v132;
    *(void *)(v140 + 24) = v147;
    *(void *)(v140 + 32) = v136;
    *(void *)(v140 + 40) = v138;
    *(unsigned char *)(v140 + 48) = v205 & 1;
    *(unsigned char *)(v140 + *(int *)(v139 + 40)) = v145;
    uint64_t v148 = v236;
    sub_100A8AF18(v254);
    sub_1001B1E64((void *)(v148 + 144), *(void *)(v148 + 168));
    uint64_t v149 = v219;
    Location.timeZone.getter();
    uint64_t v150 = v141;
    uint64_t v151 = v247;
    dispatch thunk of StartOfDayCalculatorType.startOfDay(for:timeZone:)();
    v240(v149, v241);
    uint64_t v152 = v222;
    uint64_t v153 = v256;
    sub_100325B44(v256, v256 + *(int *)(v222 + 48), v151, v246);
    uint64_t v154 = v223;
    uint64_t v155 = v201;
    ((void (*)(uint64_t, uint64_t, uint64_t))v201)(v223, v153, v269);
    sub_1001D2228();
    v155();
    uint64_t v156 = *(void (**)(uint64_t, uint64_t, uint64_t))(v150 + 32);
    uint64_t countAndFlagsBits = v150 + 32;
    v156(v266, v154, v269);
    uint64_t v157 = v263;
    sub_100183838();
    v157();
    uint64_t v158 = v154 + *(int *)(v152 + 48);
    sub_1001D2228();
    v155();
    sub_1001D2228();
    v155();
    uint64_t v159 = v269;
    uint64_t v160 = (uint64_t)v233;
    v156((uint64_t)v233, v158, v269);
    sub_100183838();
    v157();
    uint64_t v161 = v264;
    uint64_t v162 = v226;
    sub_10006DF38(v264 + *(int *)(v242 + 48), v226, &qword_100E670F0);
    if (_s7Weather24LocationCompositionStateOwet_0(v162, 1, v225) == 1)
    {
      sub_100178110(v162, &qword_100E670F0);
      uint64_t v163 = type metadata accessor for DetailComponentContainerViewModel();
      uint64_t v164 = v230;
      _s7Weather24LocationCompositionStateOwst_0(v230, 1, 1, v163);
      uint64_t v165 = v268;
      uint64_t v166 = (uint64_t)object;
    }
    else
    {
      uint64_t v167 = v160;
      uint64_t v168 = v210;
      sub_100A8F860(v162, v210, (void (*)(void))type metadata accessor for NewsDataModel);
      sub_1001B1E64((void *)(v236 + 184), *(void *)(v236 + 208));
      uint64_t v169 = v215;
      uint64_t v170 = v212;
      uint64_t v171 = v216;
      (*(void (**)(uint64_t, void, uint64_t))(v215 + 104))(v212, enum case for ArticlePlacementLocation.moonDetail(_:), v216);
      uint64_t v172 = v213;
      sub_1006BAAF0(v170, v213);
      (*(void (**)(uint64_t, uint64_t))(v169 + 8))(v170, v171);
      uint64_t v173 = v214;
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v172, 1, v214) == 1)
      {
        sub_100A8BF30(v168, (void (*)(void))type metadata accessor for NewsDataModel);
        sub_100178110((uint64_t)v172, &qword_100E7B2B8);
        uint64_t v174 = type metadata accessor for DetailComponentContainerViewModel();
        uint64_t v175 = v211;
        _s7Weather24LocationCompositionStateOwst_0(v211, 1, 1, v174);
      }
      else
      {
        uint64_t v176 = v208;
        sub_100A8F860((uint64_t)v172, v208, (void (*)(void))type metadata accessor for NewsArticleComponentViewModel);
        uint64_t v177 = v209;
        sub_100A8BEDC(v176, v209, (void (*)(void))type metadata accessor for NewsArticleComponentViewModel);
        _s7Weather24LocationCompositionStateOwst_0(v177, 0, 1, v173);
        uint64_t v175 = v211;
        sub_1004B80E0(v177, v211);
        sub_100A8BF30(v176, (void (*)(void))type metadata accessor for NewsArticleComponentViewModel);
        sub_100A8BF30(v168, (void (*)(void))type metadata accessor for NewsDataModel);
      }
      uint64_t v165 = v268;
      uint64_t v164 = v230;
      uint64_t v166 = (uint64_t)object;
      sub_10024D364(v175, v230, &qword_100E66E28);
      uint64_t v160 = v167;
    }
    sub_10024D364(v164, v258, &qword_100E66E28);
    sub_10085FC7C(v166);
    sub_100A8B07C(v161, v166, v266, v160, v165, v259);
    ((void (*)(uint64_t, uint64_t))v263)(v166, v159);
    if (*(unsigned char *)(v161 + v224))
    {
      uint64_t v241 = 0;
      uint64_t v242 = 0;
      uint64_t countAndFlagsBits = 0;
      unint64_t v178 = 0xE000000000000000;
      uint64_t v179 = &v271;
    }
    else
    {
      id v180 = [self mainBundle];
      v272._uint64_t countAndFlagsBits = 0xD00000000000002BLL;
      v272._object = (void *)0x8000000100CBC680;
      v181._object = (void *)0x8000000100CBC660;
      v181._uint64_t countAndFlagsBits = 0xD000000000000016;
      v182._uint64_t countAndFlagsBits = 1852796749;
      v182._object = (void *)0xE400000000000000;
      Swift::String v183 = NSLocalizedString(_:tableName:bundle:value:comment:)(v181, (Swift::String_optional)0, (NSBundle)v180, v182, v272);
      uint64_t countAndFlagsBits = v183._countAndFlagsBits;
      object = (void (*)(char *, char *, uint64_t))v183._object;

      uint64_t v242 = 0x6C69662E6E6F6F6DLL;
      unint64_t v178 = 0xE90000000000006CLL;
      uint64_t v179 = &v270;
    }
    *(v179 - 32) = v178;
    uint64_t v184 = v249;
    uint64_t v185 = v229;
    sub_100A8BEDC(v244, v261, (void (*)(void))type metadata accessor for MoonDetailSelectedDate);
    uint64_t v186 = v259;
    sub_100A8BEDC(v259, v260, (void (*)(void))type metadata accessor for MoonViewModel);
    uint64_t v187 = v253;
    sub_100A8BEDC(v253, v257, (void (*)(void))type metadata accessor for MoonScrubberHeaderViewModel);
    v206(v255, v184, v252);
    uint64_t v188 = v251;
    uint64_t v189 = v234;
    sub_10006DF38(v251, v234, &qword_100E7CB90);
    uint64_t v190 = v254;
    uint64_t v191 = v235;
    sub_100A8BEDC(v254, v235, (void (*)(void))type metadata accessor for ConditionDetailPlatterViewModel);
    uint64_t v249 = sub_100A8B67C(v185);

    sub_100A8BF30(v186, (void (*)(void))type metadata accessor for MoonViewModel);
    uint64_t v192 = v263;
    sub_100183838();
    v192();
    sub_100183838();
    v192();
    sub_100178110(v256, &qword_100E7FA48);
    sub_100183838();
    v192();
    sub_100A8BF30(v190, (void (*)(void))type metadata accessor for ConditionDetailPlatterViewModel);
    sub_100A8BF30(v187, (void (*)(void))type metadata accessor for MoonScrubberHeaderViewModel);
    sub_100178110(v188, &qword_100E7CB90);
    sub_100162F0C();
    v193();
    sub_100A8BF30(v248, (void (*)(void))type metadata accessor for MoonOverviewTableViewModel);
    sub_100178110(v268, &qword_100EADE58);
    sub_100162F0C();
    v194();
    sub_100162F0C();
    v195();
    uint64_t v196 = v238;
    uint64_t v197 = v264;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v237 + 16))(v238, v264, v239);
    LOBYTE(v190) = *(unsigned char *)(v197 + v224);
    sub_100A8BF30(v197, (void (*)(void))type metadata accessor for MoonDetailInput.Input);
    uint64_t v104 = v262;
    sub_100619D54(v261, countAndFlagsBits, (uint64_t)object, v242, v241, v260, v257, v262, v189, v191, v249, v258, v196, v190);
    uint64_t v103 = 0;
  }
  uint64_t v198 = type metadata accessor for MoonDetailViewModel.Model(0);
  _s7Weather24LocationCompositionStateOwst_0(v104, v103, 1, v198);
  uint64_t v199 = type metadata accessor for MoonDetailViewModel(0);
  return _s7Weather24LocationCompositionStateOwst_0(v104, 0, 1, v199);
}

uint64_t sub_100A87DA0@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for Locale();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10017DF08(&qword_100E6BF50);
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  uint64_t v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v17 - v12;
  uint64_t v14 = a1 + *(int *)(type metadata accessor for MoonDetailInput.Input(0) + 36);
  swift_retain();
  Cache.subscript.getter();
  swift_release();
  uint64_t v15 = type metadata accessor for ConditionUnits();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v13, 1, v15) != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(void *)(v15 - 8) + 32))(a2, v13, v15);
  }
  sub_100178110((uint64_t)v13, &qword_100E6BF50);
  type metadata accessor for UnitManager();
  static UnitManager.standard.getter();
  UnitManager.conditionUnits(locale:)();
  swift_release();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v14, v4);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16))(v11, a2, v15);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v11, 0, 1, v15);
  swift_retain();
  Cache.subscript.setter();
  return swift_release();
}

uint64_t sub_100A88018@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v184 = a2;
  uint64_t v198 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  __chkstk_darwin(v198);
  uint64_t v185 = (uint64_t)&v159 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v186 = type metadata accessor for Location();
  uint64_t v193 = *(void *)(v186 - 8);
  uint64_t v4 = __chkstk_darwin(v186);
  Swift::String v182 = (char *)&v159 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  Swift::String v183 = (char *)&v159 - v6;
  uint64_t v169 = sub_10017DF08(&qword_100EADE78);
  uint64_t v168 = *(void *)(v169 - 8);
  __chkstk_darwin(v169);
  uint64_t v167 = (char *)&v159 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for MoonDetailSelectedDate();
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  uint64_t v201 = (uint64_t)&v159 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v206 = (uint64_t)&v159 - v11;
  uint64_t v172 = type metadata accessor for MoonRiseSet();
  uint64_t v187 = *(void *)(v172 - 8);
  uint64_t v12 = __chkstk_darwin(v172);
  uint64_t v159 = (char *)&v159 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v165 = (char *)&v159 - v14;
  uint64_t v15 = sub_10017DF08(&qword_100EADE80);
  uint64_t v16 = __chkstk_darwin(v15 - 8);
  uint64_t v164 = (char *)&v159 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v163 = (char *)&v159 - v19;
  __chkstk_darwin(v18);
  uint64_t v162 = (char *)&v159 - v20;
  uint64_t v188 = sub_10017DF08(&qword_100E94F18);
  uint64_t v21 = __chkstk_darwin(v188);
  uint64_t v192 = (char *)&v159 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  uint64_t v173 = (char *)&v159 - v23;
  uint64_t v174 = sub_10017DF08(&qword_100EADE88);
  uint64_t v24 = __chkstk_darwin(v174);
  uint64_t v175 = (char *)&v159 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  uint64_t v191 = (uint64_t)&v159 - v26;
  uint64_t v27 = type metadata accessor for Date();
  uint64_t v213 = *(void **)(v27 - 8);
  uint64_t v214 = v27;
  uint64_t v28 = __chkstk_darwin(v27);
  uint64_t v177 = (uint64_t)&v159 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = __chkstk_darwin(v28);
  uint64_t v179 = (char *)&v159 - v31;
  uint64_t v32 = __chkstk_darwin(v30);
  uint64_t v178 = (uint64_t)&v159 - v33;
  uint64_t v34 = __chkstk_darwin(v32);
  uint64_t v200 = (char *)&v159 - v35;
  uint64_t v36 = __chkstk_darwin(v34);
  uint64_t v199 = (char *)&v159 - v37;
  uint64_t v38 = __chkstk_darwin(v36);
  int v205 = (char *)&v159 - v39;
  uint64_t v40 = __chkstk_darwin(v38);
  uint64_t v204 = (char *)&v159 - v41;
  uint64_t v42 = __chkstk_darwin(v40);
  uint64_t v195 = (char *)&v159 - v43;
  uint64_t v44 = __chkstk_darwin(v42);
  uint64_t v196 = (char *)&v159 - v45;
  __chkstk_darwin(v44);
  uint64_t v212 = (char **)((char *)&v159 - v46);
  uint64_t v47 = sub_10017DF08(&qword_100E6C288);
  uint64_t v48 = __chkstk_darwin(v47 - 8);
  uint64_t v170 = (uint64_t)&v159 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = __chkstk_darwin(v48);
  uint64_t v171 = (uint64_t)&v159 - v51;
  __chkstk_darwin(v50);
  uint64_t v53 = (char *)&v159 - v52;
  uint64_t v54 = type metadata accessor for TimeZone();
  uint64_t v55 = *(void *)(v54 - 8);
  __chkstk_darwin(v54);
  uint64_t v57 = (char *)&v159 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v181 = type metadata accessor for Calendar();
  uint64_t v180 = *(void *)(v181 - 8);
  __chkstk_darwin(v181);
  uint64_t v59 = (char *)&v159 - ((v58 + 15) & 0xFFFFFFFFFFFFFFF0);
  Location.timeZone.getter();
  uint64_t v194 = v59;
  static Calendar.currentCalendar(with:)();
  uint64_t v60 = *(void (**)(char *, uint64_t))(v55 + 8);
  uint64_t v207 = (void (*)(char *, unint64_t, uint64_t))v54;
  v60(v57, v54);
  uint64_t v208 = (void (*)(char *, void (*)(char *, unint64_t, uint64_t)))v60;
  uint64_t v209 = (void (*)(char *, uint64_t, uint64_t))(v55 + 8);
  uint64_t v61 = v197;
  int v176 = sub_100A8C0EC((uint64_t)v197, a1);
  uint64_t v63 = v61[5];
  uint64_t v62 = v61[6];
  uint64_t v210 = (char *)(v61 + 2);
  uint64_t v211 = v62;
  uint64_t v203 = (uint64_t)sub_1001B1E64(v61 + 2, v63);
  uint64_t v166 = type metadata accessor for MoonDetailInput.Input(0);
  uint64_t v64 = a1 + *(int *)(v166 + 20);
  uint64_t v65 = a1;
  uint64_t v66 = (void (*)(void, void))v212;
  sub_10085FC7C((uint64_t)v212);
  Location.timeZone.getter();
  Location.coordinate.getter();
  uint64_t v189 = v53;
  dispatch thunk of MoonDataProviderType.dayMoonData(for:timeZone:coordinate:)();
  v60(v57, v54);
  uint64_t v67 = v214;
  uint64_t v69 = (char *)(v213 + 1);
  uint64_t v68 = (char **)v213[1];
  ((void (*)(void, uint64_t))v68)(v66, v214);
  uint64_t v70 = v197;
  uint64_t v71 = v197[21];
  uint64_t v203 = v197[22];
  uint64_t v202 = (uint64_t)sub_1001B1E64(v197 + 18, v71);
  uint64_t v211 = v64;
  sub_10085FC7C((uint64_t)v66);
  uint64_t v190 = v65;
  Location.timeZone.getter();
  uint64_t v72 = v196;
  dispatch thunk of StartOfDayCalculatorType.startOfDay(for:timeZone:)();
  v208(v57, v207);
  uint64_t v73 = v67;
  uint64_t v74 = v195;
  uint64_t v75 = v72;
  uint64_t v212 = v68;
  ((void (*)(void, uint64_t))v68)(v66, v67);
  Date.wc_addDays(_:calendar:)();
  uint64_t v76 = v70[5];
  uint64_t v77 = (void (*)(char *, unint64_t, uint64_t))v70[6];
  uint64_t v78 = sub_1001B1E64(v210, v76);
  uint64_t v203 = sub_100A8F8B4((unint64_t *)&qword_100E66CC0, (void (*)(uint64_t))&type metadata accessor for Date);
  uint64_t result = dispatch thunk of static Comparable.<= infix(_:_:)();
  if (result)
  {
    uint64_t v80 = v188;
    uint64_t v81 = *(int *)(v188 + 48);
    uint64_t v208 = (void (*)(char *, void (*)(char *, unint64_t, uint64_t)))v76;
    uint64_t v82 = v173;
    uint64_t v83 = &v173[v81];
    uint64_t v207 = v77;
    uint64_t v84 = v213;
    uint64_t v202 = (uint64_t)v78;
    uint64_t v85 = v213 + 2;
    uint64_t v86 = (void (*)(char *, char *, uint64_t))v213[2];
    v86(v173, v75, v73);
    uint64_t v210 = v83;
    v86(v83, v74, v73);
    uint64_t v87 = v69;
    uint64_t v88 = v192;
    uint64_t v89 = &v192[*(int *)(v80 + 48)];
    v86(v192, v82, v73);
    uint64_t v161 = v85;
    uint64_t v160 = (void (*)(char *, uint64_t, uint64_t))v86;
    v86(v89, v83, v73);
    uint64_t v91 = (void (*)(char *, char *, uint64_t))v84[4];
    uint64_t v90 = v84 + 4;
    uint64_t v92 = (uint64_t)v175;
    v91(v175, v88, v73);
    uint64_t v93 = (void (*)(char *, uint64_t))v212;
    ((void (*)(char *, uint64_t))v212)(v89, v73);
    uint64_t v94 = &v88[*(int *)(v80 + 48)];
    v91(v88, v82, v73);
    v91(v94, v210, v73);
    uint64_t v95 = v92 + *(int *)(v174 + 36);
    uint64_t v209 = (void (*)(char *, uint64_t, uint64_t))v91;
    v91((char *)v95, v94, v73);
    uint64_t v210 = v87;
    v93(v88, v73);
    uint64_t v96 = v191;
    sub_10024D364(v92, v191, &qword_100EADE88);
    uint64_t v97 = v190;
    Location.coordinate.getter();
    uint64_t v98 = dispatch thunk of MoonDataProviderType.moonRiseSetEvents(in:coordinate:)();
    sub_100178110(v96, &qword_100EADE88);
    uint64_t v99 = swift_allocBox();
    uint64_t v174 = v100;
    _s7Weather24LocationCompositionStateOwst_0(v100, 1, 1, v73);
    uint64_t v101 = swift_allocBox();
    uint64_t v175 = (char *)v102;
    _s7Weather24LocationCompositionStateOwst_0(v102, 1, 1, v73);
    unint64_t v103 = *(void *)(v98 + 16);
    uint64_t v191 = v98;
    uint64_t v192 = (char *)v99;
    uint64_t v188 = v101;
    if (v103 < 3)
    {
      uint64_t v215 = v98;
      sub_10017DF08(&qword_100EADE90);
      sub_1001246C8(&qword_100EADE98, &qword_100EADE90);
      uint64_t v120 = v167;
      Collection.safe.getter();
      uint64_t v215 = 0;
      uint64_t v121 = (uint64_t)v164;
      uint64_t v122 = v169;
      SafeCollection.subscript.getter();
      sub_100A8C338(v121);
      sub_100178110(v121, &qword_100EADE80);
      uint64_t v215 = 1;
      SafeCollection.subscript.getter();
      sub_100A8C338(v121);
      sub_100178110(v121, &qword_100EADE80);
      (*(void (**)(char *, uint64_t))(v168 + 8))(v120, v122);
      uint64_t v123 = v193;
      uint64_t v124 = v186;
    }
    else
    {
      uint64_t v213 = v90;
      uint64_t v207 = *(void (**)(char *, unint64_t, uint64_t))(v187 + 16);
      unint64_t v104 = (*(unsigned __int8 *)(v187 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v187 + 80);
      uint64_t v173 = (char *)(v98 + v104);
      uint64_t v105 = (void (**)(char *, uint64_t))(v187 + 8);
      uint64_t v208 = (void (*)(char *, void (*)(char *, unint64_t, uint64_t)))(v187 + 16);
      uint64_t v106 = *(void *)(v187 + 72);
      swift_bridgeObjectRetain();
      unint64_t v107 = v98 + v104 + v106 * (v103 - 1);
      uint64_t v198 = v106;
      uint64_t v202 = -v106;
      uint64_t v108 = v172;
      uint64_t v109 = v165;
      uint64_t v110 = v204;
      while (1)
      {
        v207(v109, v107, v108);
        MoonRiseSet.date.getter();
        uint64_t v111 = v206;
        sub_100A8BEDC(v211, v206, (void (*)(void))type metadata accessor for MoonDetailSelectedDate);
        uint64_t v112 = v205;
        uint64_t v113 = v111;
        uint64_t v114 = v214;
        v209(v205, v113, v214);
        char v115 = dispatch thunk of static Comparable.< infix(_:_:)();
        uint64_t v116 = v108;
        uint64_t v117 = (void (*)(char *, uint64_t))v212;
        ((void (*)(char *, uint64_t))v212)(v112, v114);
        v117(v110, v114);
        if ((v115 & 1) == 0) {
          break;
        }
        --v103;
        (*v105)(v109, v116);
        v107 += v202;
        uint64_t v108 = v116;
        if (!v103)
        {
          uint64_t v118 = 1;
          uint64_t v119 = (uint64_t)v162;
          goto LABEL_9;
        }
      }
      uint64_t v119 = (uint64_t)v162;
      (*(void (**)(char *, char *, uint64_t))(v187 + 32))(v162, v109, v116);
      uint64_t v118 = 0;
      uint64_t v108 = v116;
LABEL_9:
      uint64_t v125 = 1;
      _s7Weather24LocationCompositionStateOwst_0(v119, v118, 1, v108);
      uint64_t v126 = v191;
      swift_bridgeObjectRelease();
      sub_100A8C338(v119);
      sub_100178110(v119, &qword_100EADE80);
      uint64_t v127 = *(void *)(v126 + 16);
      if (v127)
      {
        swift_bridgeObjectRetain();
        Class v128 = v159;
        uint64_t v129 = v173;
        uint64_t v130 = v199;
        uint64_t v131 = v214;
        while (1)
        {
          v207(v128, (unint64_t)v129, v108);
          MoonRiseSet.date.getter();
          uint64_t v132 = v201;
          sub_100A8BEDC(v211, v201, (void (*)(void))type metadata accessor for MoonDetailSelectedDate);
          uint64_t v133 = v200;
          v209(v200, v132, v131);
          char v134 = static Date.> infix(_:_:)();
          id v135 = (void (*)(char *, uint64_t))v212;
          ((void (*)(char *, uint64_t))v212)(v133, v131);
          v135(v130, v131);
          if (v134) {
            break;
          }
          (*v105)(v128, v108);
          v129 += v198;
          if (!--v127)
          {
            swift_bridgeObjectRelease();
            uint64_t v125 = 1;
            uint64_t v136 = (uint64_t)v163;
            goto LABEL_16;
          }
        }
        swift_bridgeObjectRelease();
        uint64_t v136 = (uint64_t)v163;
        (*(void (**)(char *, char *, uint64_t))(v187 + 32))(v163, v128, v108);
        uint64_t v125 = 0;
      }
      else
      {
        uint64_t v136 = (uint64_t)v163;
      }
LABEL_16:
      _s7Weather24LocationCompositionStateOwst_0(v136, v125, 1, v108);
      sub_100A8C338(v136);
      sub_100178110(v136, &qword_100EADE80);
      uint64_t v124 = v186;
      uint64_t v97 = v190;
      uint64_t v123 = v193;
    }
    uint64_t v137 = (uint64_t)(v197 + 12);
    uint64_t v138 = (void (**)(char *, uint64_t, uint64_t))(v123 + 16);
    if (v176)
    {
      sub_10020D948(v137, (uint64_t)&v215);
      uint64_t v213 = sub_1001B1E64(&v215, v216);
      (*v138)(v183, v97, v124);
      sub_10085FC7C(v178);
      v160(v179, v97 + *(int *)(v166 + 28), v214);
      uint64_t v139 = v171;
      sub_10006DF38((uint64_t)v189, v171, &qword_100E6C288);
      uint64_t v140 = type metadata accessor for DayMoonData();
      if (_s7Weather24LocationCompositionStateOwet_0(v139, 1, v140) == 1)
      {
        sub_100178110(v139, &qword_100E6C288);
      }
      else
      {
        DayMoonData.phase.getter();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v140 - 8) + 8))(v139, v140);
      }
      uint64_t v144 = v174;
      swift_beginAccess();
      uint64_t v145 = v185;
      sub_10006DF38(v144, v185, (uint64_t *)&unk_100E73CA0);
      swift_beginAccess();
      unint64_t v146 = v183;
      uint64_t v147 = v178;
      uint64_t v148 = v179;
      dispatch thunk of InterpolatedMoonDataProviderType.makeMoonDataForCurrentDate(location:selectedDate:currentWeatherDate:dayMoonPhase:moonrise:moonset:moonRiseSetEvents:)();
      swift_endAccess();
      swift_bridgeObjectRelease();
      sub_100178110(v145, (uint64_t *)&unk_100E73CA0);
      uint64_t v149 = v148;
      uint64_t v150 = v214;
      uint64_t v151 = (void (*)(uint64_t, uint64_t))v212;
      ((void (*)(char *, uint64_t))v212)(v149, v214);
      v151(v147, v150);
      (*(void (**)(char *, uint64_t))(v193 + 8))(v146, v124);
      v151((uint64_t)v195, v150);
      v151((uint64_t)v196, v150);
      sub_100178110((uint64_t)v189, &qword_100E6C288);
      (*(void (**)(char *, uint64_t))(v180 + 8))(v194, v181);
      _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)&v215);
      swift_release();
    }
    else
    {
      sub_10020D948(v137, (uint64_t)&v215);
      uint64_t v213 = v217;
      uint64_t v209 = (void (*)(char *, uint64_t, uint64_t))sub_1001B1E64(&v215, v216);
      (*v138)(v182, v97, v124);
      sub_10085FC7C(v177);
      uint64_t v141 = (uint64_t)v189;
      uint64_t v142 = v170;
      sub_10006DF38((uint64_t)v189, v170, &qword_100E6C288);
      uint64_t v143 = type metadata accessor for DayMoonData();
      if (_s7Weather24LocationCompositionStateOwet_0(v142, 1, v143) == 1)
      {
        sub_100178110(v142, &qword_100E6C288);
      }
      else
      {
        DayMoonData.phase.getter();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v143 - 8) + 8))(v142, v143);
      }
      uint64_t v152 = v174;
      swift_beginAccess();
      uint64_t v153 = v185;
      sub_10006DF38(v152, v185, (uint64_t *)&unk_100E73CA0);
      swift_beginAccess();
      uint64_t v154 = v182;
      uint64_t v155 = v177;
      dispatch thunk of InterpolatedMoonDataProviderType.makeInterpolatedMoonData(location:selectedDate:dayMoonPhase:moonrise:moonset:moonRiseSetEvents:)();
      swift_endAccess();
      swift_bridgeObjectRelease();
      sub_100178110(v153, (uint64_t *)&unk_100E73CA0);
      uint64_t v156 = v155;
      uint64_t v157 = v214;
      uint64_t v158 = (void (*)(char *, uint64_t))v212;
      ((void (*)(uint64_t, uint64_t))v212)(v156, v214);
      (*(void (**)(char *, uint64_t))(v193 + 8))(v154, v124);
      v158(v195, v157);
      v158(v196, v157);
      sub_100178110(v141, &qword_100E6C288);
      (*(void (**)(char *, uint64_t))(v180 + 8))(v194, v181);
      _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)&v215);
      swift_release();
    }
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100A89700@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void (*a3)(char *, char *, uint64_t)@<X2>, int a4@<W3>, uint64_t a5@<X8>)
{
  int v200 = a4;
  uint64_t v172 = a3;
  uint64_t v171 = a2;
  uint64_t v195 = a5;
  uint64_t v6 = type metadata accessor for OverviewTableViewModel();
  uint64_t v191 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v190 = (char *)&v151 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10017DF08(&qword_100E7CB90);
  __chkstk_darwin(v8 - 8);
  uint64_t v189 = (uint64_t)&v151 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10017DF08(&qword_100EADE60);
  __chkstk_darwin(v10 - 8);
  uint64_t v188 = (char *)&v151 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v178 = sub_10017DF08(&qword_100EADE68);
  uint64_t v177 = *(void *)(v178 - 8);
  __chkstk_darwin(v178);
  uint64_t v175 = (char *)&v151 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v184 = type metadata accessor for WeatherFormatPlaceholder();
  uint64_t v205 = *(void *)(v184 - 8);
  __chkstk_darwin(v184);
  Swift::String v182 = (char *)&v151 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_10017DF08(&qword_100E63730);
  __chkstk_darwin(v14 - 8);
  uint64_t v181 = (uint64_t)&v151 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v197 = type metadata accessor for WeatherFormatScaling();
  uint64_t v203 = *(void *)(v197 - 8);
  __chkstk_darwin(v197);
  uint64_t v179 = (char *)&v151 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v196 = type metadata accessor for NSUnitLength.WeatherFormatUsage();
  uint64_t v202 = *(void *)(v196 - 8);
  __chkstk_darwin(v196);
  uint64_t v194 = (char *)&v151 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v198 = type metadata accessor for NSUnitLength.BaseWeatherFormatStyle();
  uint64_t v204 = *(void *)(v198 - 8);
  __chkstk_darwin(v198);
  uint64_t v180 = (char *)&v151 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v176 = type metadata accessor for String.LocalizationValue();
  uint64_t v174 = *(void *)(v176 - 8);
  __chkstk_darwin(v176);
  uint64_t v193 = (char *)&v151 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v187 = type metadata accessor for AttributedString();
  uint64_t v186 = *(void *)(v187 - 8);
  __chkstk_darwin(v187);
  uint64_t v199 = (char *)&v151 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v206 = sub_10017DF08(&qword_100E6B648);
  uint64_t v185 = *(void *)(v206 - 8);
  __chkstk_darwin(v206);
  uint64_t v207 = (char *)&v151 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = type metadata accessor for OverviewTableRowViewModel();
  uint64_t v201 = *(void *)(v22 - 8);
  uint64_t v23 = __chkstk_darwin(v22);
  Swift::String v183 = (char *)&v151 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = __chkstk_darwin(v23);
  uint64_t v169 = (char *)&v151 - v26;
  uint64_t v27 = __chkstk_darwin(v25);
  uint64_t v168 = (char *)&v151 - v28;
  uint64_t v29 = __chkstk_darwin(v27);
  uint64_t v31 = (char *)&v151 - v30;
  uint64_t v32 = __chkstk_darwin(v29);
  uint64_t v34 = (char *)&v151 - v33;
  __chkstk_darwin(v32);
  uint64_t v36 = (char *)&v151 - v35;
  uint64_t v37 = sub_10017DF08(&qword_100EADE58);
  __chkstk_darwin(v37 - 8);
  uint64_t v39 = (char *)&v151 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = type metadata accessor for InterpolatedMoonData();
  uint64_t v41 = *(void *)(v40 - 8);
  __chkstk_darwin(v40);
  uint64_t v43 = (char *)&v151 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = a1;
  uint64_t v46 = v45;
  sub_10006DF38(v44, (uint64_t)v39, &qword_100EADE58);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v39, 1, v46) == 1)
  {
    sub_100178110((uint64_t)v39, &qword_100EADE58);
    uint64_t v47 = v195;
    OverviewTableViewModel.init(rows:)();
    uint64_t v48 = v47 + *(int *)(type metadata accessor for MoonOverviewTableViewModel(0) + 20);
    uint64_t v49 = type metadata accessor for MoonCompactOverviewTableViewModel(0);
    return _s7Weather24LocationCompositionStateOwst_0(v48, 1, 1, v49);
  }
  else
  {
    uint64_t v156 = v6;
    uint64_t v154 = v41;
    uint64_t v51 = *(void (**)(char *, char *, uint64_t))(v41 + 32);
    uint64_t v155 = v46;
    v51(v43, v39, v46);
    uint64_t v209 = _swiftEmptyArrayStorage;
    uint64_t v210 = _swiftEmptyArrayStorage;
    uint64_t v208 = _swiftEmptyArrayStorage;
    sub_1001ABC4C(0, (unint64_t *)&qword_100E66F90);
    uint64_t v52 = (void *)static NSNumberFormatter.percent.getter();
    uint64_t v170 = v43;
    InterpolatedMoonData.illuminatedFraction.getter();
    Class isa = Double._bridgeToObjectiveC()().super.super.isa;
    id v54 = [v52 stringFromNumber:isa];

    char v55 = v200;
    uint64_t v192 = v22;
    if (v54)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)();

      id v56 = [self mainBundle];
      v211._uint64_t countAndFlagsBits = 0xD000000000000035;
      v211._object = (void *)0x8000000100CB6740;
      v57._uint64_t countAndFlagsBits = 0x616E696D756C6C49;
      v57._object = (void *)0xEC0000006E6F6974;
      v58._uint64_t countAndFlagsBits = 0;
      v58._object = (void *)0xE000000000000000;
      NSLocalizedString(_:tableName:bundle:value:comment:)(v57, (Swift::String_optional)0, (NSBundle)v56, v58, v211);
      uint64_t v59 = v22;

      OverviewTableRowViewModel.init(title:value:shouldDividerHavePadding:)();
      uint64_t v60 = *(void (**)(char *, char *, uint64_t))(v201 + 16);
      v60(v34, v36, v59);
      uint64_t v61 = sub_1007E9858(0, 1, 1, (uint64_t)_swiftEmptyArrayStorage);
      unint64_t v63 = *(void *)(v61 + 16);
      unint64_t v62 = *(void *)(v61 + 24);
      if (v63 >= v62 >> 1) {
        uint64_t v61 = sub_1007E9858(v62 > 1, v63 + 1, 1, v61);
      }
      *(void *)(v61 + 16) = v63 + 1;
      unint64_t v64 = (*(unsigned __int8 *)(v201 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v201 + 80);
      uint64_t v65 = *(void *)(v201 + 72);
      uint64_t v66 = v34;
      uint64_t v67 = v192;
      uint64_t v167 = *(void (**)(unint64_t, char *, uint64_t))(v201 + 32);
      v167(v61 + v64 + v65 * v63, v66, v192);
      uint64_t v210 = (void *)v61;
      if (v200)
      {
        v60(v31, v36, v67);
        uint64_t v68 = sub_1007E9858(0, 1, 1, (uint64_t)_swiftEmptyArrayStorage);
        unint64_t v70 = *(void *)(v68 + 16);
        unint64_t v69 = *(void *)(v68 + 24);
        if (v70 >= v69 >> 1) {
          uint64_t v68 = sub_1007E9858(v69 > 1, v70 + 1, 1, v68);
        }
        *(void *)(v68 + 16) = v70 + 1;
        uint64_t v71 = v192;
        v167(v68 + v64 + v70 * v65, v31, v192);
        uint64_t v209 = (void *)v68;
        uint64_t v72 = v168;
        v60(v168, v36, v71);
        uint64_t v73 = sub_1007E9858(0, 1, 1, (uint64_t)_swiftEmptyArrayStorage);
        unint64_t v75 = *(void *)(v73 + 16);
        unint64_t v74 = *(void *)(v73 + 24);
        if (v75 >= v74 >> 1) {
          uint64_t v73 = sub_1007E9858(v74 > 1, v75 + 1, 1, v73);
        }
        *(void *)(v73 + 16) = v75 + 1;
        uint64_t v67 = v192;
        v167(v73 + v64 + v75 * v65, v72, v192);
        uint64_t v208 = (void *)v73;
      }
      (*(void (**)(char *, uint64_t))(v201 + 8))(v36, v67);
      char v55 = v200;
      uint64_t v22 = v67;
    }
    uint64_t v76 = sub_100A8C684((uint64_t)v170, v171, v172);
    uint64_t v77 = sub_100A8E09C((uint64_t)v76);
    uint64_t v78 = swift_bridgeObjectRetain();
    sub_10037FA88(v78);
    if (v55)
    {
      sub_10037FA88((uint64_t)v76);
      sub_10037FA88(v77);
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    InterpolatedMoonData.nextFullMoonDuration.getter();
    if (v79 != -1)
    {
      id v80 = [self mainBundle];
      v212._uint64_t countAndFlagsBits = 0xD000000000000036;
      v212._object = (void *)0x8000000100CB6700;
      v81._uint64_t countAndFlagsBits = 0x6C7546207478654ELL;
      v81._object = (void *)0xEE006E6F6F4D206CLL;
      v82._uint64_t countAndFlagsBits = 0;
      v82._object = (void *)0xE000000000000000;
      NSLocalizedString(_:tableName:bundle:value:comment:)(v81, (Swift::String_optional)0, (NSBundle)v80, v82, v212);

      uint64_t v83 = v169;
      OverviewTableRowViewModel.init(title:value:shouldDividerHavePadding:)();
      uint64_t v84 = (uint64_t)v210;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v84 = sub_1007E9858(0, *(void *)(v84 + 16) + 1, 1, v84);
      }
      unint64_t v86 = *(void *)(v84 + 16);
      unint64_t v85 = *(void *)(v84 + 24);
      if (v86 >= v85 >> 1) {
        uint64_t v84 = sub_1007E9858(v85 > 1, v86 + 1, 1, v84);
      }
      *(void *)(v84 + 16) = v86 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v201 + 32))(v84+ ((*(unsigned __int8 *)(v201 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v201 + 80))+ *(void *)(v201 + 72) * v86, v83, v22);
      uint64_t v210 = (void *)v84;
    }
    InterpolatedMoonData.distance.getter();
    id v87 = [self kilometers];
    uint64_t v153 = sub_1001ABC4C(0, (unint64_t *)&qword_100E6B678);
    Measurement.init(value:unit:)();
    String.LocalizationValue.init(stringLiteral:)();
    sub_10017DF08(&qword_100E66F98);
    uint64_t v157 = swift_allocObject();
    *(_OWORD *)(v157 + 16) = xmmword_100C25ED0;
    static Set<>.value.getter();
    unsigned int v173 = enum case for NSUnitLength.WeatherFormatUsage.visibility(_:);
    uint64_t v88 = v202;
    uint64_t v89 = *(void (**)(char *, char *, uint64_t))(v202 + 104);
    uint64_t v171 = v202 + 104;
    uint64_t v172 = v89;
    uint64_t v90 = v194;
    uint64_t v91 = v196;
    ((void (*)(char *))v89)(v194);
    LODWORD(v169) = enum case for WeatherFormatScaling.automatic(_:);
    uint64_t v92 = v203;
    uint64_t v93 = *(char **)(v203 + 104);
    uint64_t v167 = (void (*)(unint64_t, char *, uint64_t))(v203 + 104);
    uint64_t v168 = v93;
    uint64_t v94 = v179;
    uint64_t v95 = v197;
    ((void (*)(char *))v93)(v179);
    uint64_t v165 = type metadata accessor for Locale();
    uint64_t v96 = v181;
    _s7Weather24LocationCompositionStateOwst_0(v181, 1, 1, v165);
    uint64_t v97 = v180;
    static WeatherFormatStyle<>.weather(_:usage:scaling:trimLeadingZeroes:locale:)();
    swift_bridgeObjectRelease();
    sub_100178110(v96, &qword_100E63730);
    uint64_t v98 = *(void (**)(char *, uint64_t))(v92 + 8);
    uint64_t v203 = v92 + 8;
    uint64_t v166 = v98;
    v98(v94, v95);
    uint64_t v99 = *(void (**)(char *, uint64_t))(v88 + 8);
    uint64_t v202 = v88 + 8;
    uint64_t v164 = v99;
    v99(v90, v91);
    unsigned int v163 = enum case for WeatherFormatPlaceholder.none(_:);
    uint64_t v100 = v205;
    uint64_t v101 = *(void (**)(void))(v205 + 104);
    uint64_t v161 = v205 + 104;
    uint64_t v162 = (void (*)(char *, void, uint64_t))v101;
    uint64_t v102 = v182;
    uint64_t v103 = v184;
    v101(v182);
    uint64_t v160 = type metadata accessor for UnitManager();
    static UnitManager.standard.getter();
    uint64_t v159 = sub_100A8F8B4((unint64_t *)&qword_100E6B658, (void (*)(uint64_t))&type metadata accessor for NSUnitLength.BaseWeatherFormatStyle);
    uint64_t v104 = v198;
    uint64_t v105 = Measurement.formatted<A>(_:placeholder:unitManager:)();
    uint64_t v107 = v106;
    swift_release();
    uint64_t v108 = *(void (**)(char *, uint64_t))(v100 + 8);
    uint64_t v205 = v100 + 8;
    uint64_t v158 = v108;
    v108(v102, v103);
    uint64_t v152 = *(void (**)(char *, uint64_t))(v204 + 8);
    v204 += 8;
    v152(v97, v104);
    uint64_t v109 = v157;
    *(void *)(v157 + 32) = v105;
    *(void *)(v109 + 40) = v107;
    uint64_t v110 = v175;
    static Measurement<>.FormatStyle.UnitWidth.abbreviated.getter();
    static Set<>.unit(width:)();
    (*(void (**)(char *, uint64_t))(v177 + 8))(v110, v178);
    uint64_t v111 = v194;
    uint64_t v112 = v196;
    v172(v194, (char *)v173, v196);
    uint64_t v113 = v197;
    ((void (*)(char *, void, uint64_t))v168)(v94, v169, v197);
    _s7Weather24LocationCompositionStateOwst_0(v96, 1, 1, v165);
    static WeatherFormatStyle<>.weather(_:usage:scaling:trimLeadingZeroes:locale:)();
    swift_bridgeObjectRelease();
    sub_100178110(v96, &qword_100E63730);
    v166(v94, v113);
    v164(v111, v112);
    uint64_t v114 = v103;
    v162(v102, v163, v103);
    static UnitManager.standard.getter();
    char v115 = v97;
    uint64_t v116 = v198;
    uint64_t v117 = Measurement.formatted<A>(_:placeholder:unitManager:)();
    uint64_t v119 = v118;
    swift_release();
    v158(v102, v114);
    uint64_t v120 = v116;
    uint64_t v121 = v152;
    v152(v115, v120);
    uint64_t v122 = v157;
    *(void *)(v157 + 48) = v117;
    *(void *)(v122 + 56) = v119;
    uint64_t v123 = v193;
    static AttributedString.makeLowercaseSmallCapsStyledString(localized:bundle:comment:_:)();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v174 + 8))(v123, v176);
    uint64_t v124 = v196;
    v172(v111, (char *)v173, v196);
    uint64_t v125 = v197;
    ((void (*)(char *, void, uint64_t))v168)(v94, v169, v197);
    _s7Weather24LocationCompositionStateOwst_0(v96, 1, 1, v165);
    static Set<>.full.getter();
    static WeatherFormatStyle<>.weather(_:usage:scaling:trimLeadingZeroes:locale:)();
    swift_bridgeObjectRelease();
    sub_100178110(v96, &qword_100E63730);
    v166(v94, v125);
    v164(v111, v124);
    v162(v102, v163, v114);
    static UnitManager.standard.getter();
    uint64_t v126 = v198;
    uint64_t v127 = Measurement.formatted<A>(_:placeholder:unitManager:)();
    uint64_t v129 = v128;
    swift_release();
    v158(v102, v114);
    v121(v115, v126);
    id v130 = [self mainBundle];
    v213._object = (void *)0x8000000100CBCDB0;
    v131._uint64_t countAndFlagsBits = 0x65636E6174736944;
    v131._object = (void *)0xE800000000000000;
    v132._uint64_t countAndFlagsBits = 0;
    v132._object = (void *)0xE000000000000000;
    v213._uint64_t countAndFlagsBits = 0xD000000000000029;
    NSLocalizedString(_:tableName:bundle:value:comment:)(v131, (Swift::String_optional)0, (NSBundle)v130, v132, v213);

    uint64_t v133 = sub_10017DF08(&qword_100EADE70);
    uint64_t v134 = (uint64_t)v188;
    id v135 = (uint64_t *)&v188[*(int *)(v133 + 48)];
    uint64_t v136 = v186;
    uint64_t v137 = v187;
    (*(void (**)(char *, char *, uint64_t))(v186 + 16))(v188, v199, v187);
    uint64_t *v135 = v127;
    v135[1] = v129;
    uint64_t v138 = enum case for OverviewTableValueString.attributedString(_:);
    uint64_t v139 = type metadata accessor for OverviewTableValueString();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v139 - 8) + 104))(v134, v138, v139);
    _s7Weather24LocationCompositionStateOwst_0(v134, 0, 1, v139);
    uint64_t v140 = v183;
    OverviewTableRowViewModel.init(id:title:value:shouldDividerHavePadding:)();
    uint64_t v141 = (uint64_t)v210;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v141 = sub_1007E9858(0, *(void *)(v141 + 16) + 1, 1, v141);
    }
    uint64_t v142 = v195;
    char v143 = v200;
    uint64_t v144 = v154;
    unint64_t v146 = *(void *)(v141 + 16);
    unint64_t v145 = *(void *)(v141 + 24);
    uint64_t v147 = v192;
    if (v146 >= v145 >> 1) {
      uint64_t v141 = sub_1007E9858(v145 > 1, v146 + 1, 1, v141);
    }
    *(void *)(v141 + 16) = v146 + 1;
    (*(void (**)(unint64_t, char *, uint64_t))(v201 + 32))(v141+ ((*(unsigned __int8 *)(v201 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v201 + 80))+ *(void *)(v201 + 72) * v146, v140, v147);
    uint64_t v210 = (void *)v141;
    uint64_t v148 = v189;
    sub_100A8E4D0(v143 & 1, v189);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v149 = v190;
    OverviewTableViewModel.init(rows:)();
    (*(void (**)(char *, uint64_t))(v136 + 8))(v199, v137);
    (*(void (**)(char *, uint64_t))(v185 + 8))(v207, v206);
    (*(void (**)(char *, uint64_t))(v144 + 8))(v170, v155);
    (*(void (**)(uint64_t, char *, uint64_t))(v191 + 32))(v142, v149, v156);
    uint64_t v150 = type metadata accessor for MoonOverviewTableViewModel(0);
    return sub_10024D364(v148, v142 + *(int *)(v150 + 20), &qword_100E7CB90);
  }
}

double sub_100A8AF18@<D0>(uint64_t a1@<X8>)
{
  id v2 = [self mainBundle];
  v11._object = (void *)0x8000000100CBCC70;
  v3._uint64_t countAndFlagsBits = 0x7261646E656C6143;
  v3._object = (void *)0xE800000000000000;
  v4._uint64_t countAndFlagsBits = 0;
  v4._object = (void *)0xE000000000000000;
  v11._uint64_t countAndFlagsBits = 0xD000000000000053;
  Swift::String v5 = NSLocalizedString(_:tableName:bundle:value:comment:)(v3, (Swift::String_optional)0, (NSBundle)v2, v4, v11);

  uint64_t v6 = (int *)type metadata accessor for ConditionDetailPlatterViewModel(0);
  uint64_t v7 = a1 + v6[6];
  uint64_t v8 = type metadata accessor for WeatherDescription();
  _s7Weather24LocationCompositionStateOwst_0(v7, 1, 1, v8);
  type metadata accessor for ConditionDetailDynamicContentIdentifier();
  swift_storeEnumTagMultiPayload();
  uint64_t v9 = type metadata accessor for ConditionDetailPlatterViewModel.Body(0);
  swift_storeEnumTagMultiPayload();
  _s7Weather24LocationCompositionStateOwst_0(a1 + v6[8], 1, 1, v9);
  double result = 1.17067656e214;
  *(_OWORD *)a1 = xmmword_100C780F0;
  *(unsigned char *)(a1 + 16) = 1;
  *(Swift::String *)(a1 + 24) = v5;
  *(unsigned char *)(a1 + v6[9]) = 0;
  *(unsigned char *)(a1 + v6[10]) = 0;
  return result;
}

uint64_t sub_100A8B07C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v59 = a3;
  uint64_t v60 = a5;
  uint64_t v57 = a4;
  uint64_t v63 = a2;
  uint64_t v65 = a6;
  uint64_t v8 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  unint64_t v62 = (char *)&v52 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v68 = (uint64_t)&v52 - v11;
  uint64_t v54 = type metadata accessor for Calendar();
  uint64_t v64 = *(void *)(v54 - 8);
  __chkstk_darwin(v54);
  uint64_t v13 = (char *)&v52 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = type metadata accessor for TimeZone();
  unint64_t v69 = *(char **)(v66 - 8);
  __chkstk_darwin(v66);
  uint64_t v15 = (char *)&v52 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for Date();
  uint64_t v67 = *(void *)(v16 - 8);
  uint64_t v17 = __chkstk_darwin(v16);
  uint64_t v53 = (char *)&v52 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __chkstk_darwin(v17);
  unint64_t v70 = (char *)&v52 - v20;
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v23 = (char *)&v52 - v22;
  __chkstk_darwin(v21);
  uint64_t v25 = (char *)&v52 - v24;
  uint64_t v26 = *(void *)(v6 + 168);
  uint64_t v61 = v6;
  sub_1001B1E64((void *)(v6 + 144), v26);
  uint64_t v58 = type metadata accessor for MoonDetailInput.Input(0);
  sub_10085FC7C((uint64_t)v23);
  Location.timeZone.getter();
  dispatch thunk of StartOfDayCalculatorType.startOfDay(for:timeZone:)();
  uint64_t v27 = v69 + 8;
  uint64_t v28 = (void (*)(char *, uint64_t))*((void *)v69 + 1);
  uint64_t v29 = v66;
  v28(v15, v66);
  unint64_t v69 = v27;
  char v55 = *(void (**)(char *, uint64_t))(v67 + 8);
  uint64_t v56 = v67 + 8;
  v55(v23, v16);
  Location.timeZone.getter();
  static Calendar.currentCalendar(with:)();
  v28(v15, v29);
  Date.wc_addDays(_:calendar:)();
  uint64_t v30 = *(void (**)(char *, uint64_t))(v64 + 8);
  uint64_t v31 = v54;
  v30(v13, v54);
  uint64_t v64 = a1;
  Location.timeZone.getter();
  static Calendar.currentCalendar(with:)();
  v28(v15, v66);
  uint64_t v32 = v67;
  uint64_t v33 = v53;
  unint64_t v69 = v25;
  Date.wc_addDays(_:calendar:)();
  v30(v13, v31);
  sub_100A8F8B4((unint64_t *)&qword_100E66CC0, (void (*)(uint64_t))&type metadata accessor for Date);
  char v34 = dispatch thunk of static Comparable.< infix(_:_:)();
  uint64_t v35 = 1;
  if ((v34 & 1) == 0)
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v32 + 16))(v68, v70, v16);
    uint64_t v35 = 0;
  }
  uint64_t v36 = 1;
  _s7Weather24LocationCompositionStateOwst_0(v68, v35, 1, v16);
  uint64_t v37 = v33;
  char v38 = dispatch thunk of static Comparable.< infix(_:_:)();
  uint64_t v39 = (uint64_t)v62;
  if ((v38 & 1) == 0)
  {
    (*(void (**)(char *, char *, uint64_t))(v32 + 16))(v62, v37, v16);
    uint64_t v36 = 0;
  }
  _s7Weather24LocationCompositionStateOwst_0(v39, v36, 1, v16);
  uint64_t v40 = v63;
  uint64_t v41 = v37;
  uint64_t v42 = v64;
  double v43 = sub_100A8BF84(v60, v61);
  Location.coordinate.getter();
  double v45 = v44;
  uint64_t v46 = v55;
  v55(v41, v16);
  v46(v70, v16);
  v46(v69, v16);
  if (v45 < 0.0) {
    double v47 = 180.0;
  }
  else {
    double v47 = 0.0;
  }
  uint64_t v48 = v65;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v32 + 16))(v65, v40, v16);
  uint64_t v49 = (int *)type metadata accessor for MoonViewModel(0);
  sub_10024D364(v39, v48 + v49[6], (uint64_t *)&unk_100E73CA0);
  uint64_t result = sub_10024D364(v68, v48 + v49[7], (uint64_t *)&unk_100E73CA0);
  char v51 = *(unsigned char *)(v42 + *(int *)(v58 + 44));
  *(double *)(v48 + v49[5]) = 360.0 - v43 + v47;
  *(unsigned char *)(v48 + v49[8]) = v51;
  return result;
}

uint64_t sub_100A8B67C(uint64_t a1)
{
  uint64_t v68 = a1;
  uint64_t v1 = type metadata accessor for ConditionDetailPlatterViewModel(0);
  id v2 = (int *)(v1 - 8);
  uint64_t v70 = *(void *)(v1 - 8);
  uint64_t v71 = v70;
  uint64_t v3 = __chkstk_darwin(v1);
  unint64_t v69 = (char *)&v59 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v67 = (char *)&v59 - v5;
  uint64_t v6 = sub_10017DF08(&qword_100E6B648);
  uint64_t v72 = *(void *)(v6 - 8);
  uint64_t v73 = v6;
  uint64_t v7 = __chkstk_darwin(v6);
  uint64_t v66 = (char *)&v59 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  unint64_t v74 = (void (*)(char *, uint64_t))((char *)&v59 - v9);
  uint64_t v10 = type metadata accessor for Locale();
  __chkstk_darwin(v10 - 8);
  uint64_t v11 = sub_10017DF08(&qword_100E7DC30);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v59 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v62 = self;
  id v15 = [v62 mainBundle];
  v78._uint64_t countAndFlagsBits = 0xD00000000000003FLL;
  v78._object = (void *)0x8000000100CBC710;
  v16._object = (void *)0x8000000100CBC6F0;
  v16._uint64_t countAndFlagsBits = 0xD000000000000012;
  v17._uint64_t countAndFlagsBits = 0;
  v17._object = (void *)0xE000000000000000;
  Swift::String v18 = NSLocalizedString(_:tableName:bundle:value:comment:)(v16, (Swift::String_optional)0, (NSBundle)v15, v17, v78);
  object = v18._object;
  uint64_t countAndFlagsBits = v18._countAndFlagsBits;

  uint64_t v75 = 0x3FF0000000000000;
  static Locale.autoupdatingCurrent.getter();
  sub_100146A70();
  FloatingPointFormatStyle.Percent.init(locale:)();
  sub_1001246C8((unint64_t *)&qword_100E7DC38, &qword_100E7DC30);
  BinaryFloatingPoint.formatted<A>(_:)();
  uint64_t v19 = *(void (**)(char *, uint64_t))(v12 + 8);
  v19(v14, v11);
  uint64_t v60 = v77;
  uint64_t v61 = v76;
  uint64_t v75 = 0;
  static Locale.autoupdatingCurrent.getter();
  FloatingPointFormatStyle.Percent.init(locale:)();
  BinaryFloatingPoint.formatted<A>(_:)();
  v19(v14, v11);
  uint64_t v20 = v76;
  uint64_t v21 = v77;
  id v22 = v62;
  id v23 = [v62 mainBundle];
  v79._uint64_t countAndFlagsBits = 0xD0000000000000BBLL;
  v79._object = (void *)0x8000000100CBC8A0;
  v24._object = (void *)0x8000000100CBC750;
  v24._uint64_t countAndFlagsBits = 0x100000000000014ALL;
  v25._uint64_t countAndFlagsBits = 0;
  v25._object = (void *)0xE000000000000000;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v24, (Swift::String_optional)0, (NSBundle)v23, v25, v79);

  sub_10017DF08(&qword_100E64020);
  uint64_t v26 = swift_allocObject();
  long long v63 = xmmword_100C25ED0;
  *(_OWORD *)(v26 + 16) = xmmword_100C25ED0;
  *(void *)(v26 + 56) = &type metadata for String;
  unint64_t v27 = sub_10012B7C0();
  uint64_t v28 = v60;
  *(void *)(v26 + 32) = v61;
  *(void *)(v26 + 40) = v28;
  *(void *)(v26 + 96) = &type metadata for String;
  *(void *)(v26 + 104) = v27;
  *(void *)(v26 + 64) = v27;
  *(void *)(v26 + 72) = v20;
  *(void *)(v26 + 80) = v21;
  uint64_t v29 = static String.localizedStringWithFormat(_:_:)();
  uint64_t v31 = v30;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v32 = [v22 mainBundle];
  v33._uint64_t countAndFlagsBits = 0xD000000000000013;
  v80._uint64_t countAndFlagsBits = 0xD000000000000040;
  v80._object = (void *)0x8000000100CBC980;
  v33._object = (void *)0x8000000100CBC960;
  v34._uint64_t countAndFlagsBits = 0;
  v34._object = (void *)0xE000000000000000;
  Swift::String v35 = NSLocalizedString(_:tableName:bundle:value:comment:)(v33, (Swift::String_optional)0, (NSBundle)v32, v34, v80);
  id v62 = (id)v35._countAndFlagsBits;

  uint64_t v36 = self;
  id v37 = [v36 kilometers];
  sub_1001ABC4C(0, (unint64_t *)&qword_100E6B678);
  char v38 = v74;
  Measurement.init(value:unit:)();
  id v39 = [v36 kilometers];
  uint64_t v40 = (uint64_t)v66;
  Measurement.init(value:unit:)();
  uint64_t v41 = sub_100A8E6F8(v68, v38, v40);
  uint64_t v43 = v42;
  uint64_t v44 = (uint64_t)v67;
  uint64_t v45 = (uint64_t)&v67[v2[8]];
  uint64_t v46 = type metadata accessor for WeatherDescription();
  _s7Weather24LocationCompositionStateOwst_0(v45, 1, 1, v46);
  double v47 = (uint64_t *)(v44 + v2[9]);
  *double v47 = v29;
  v47[1] = v31;
  uint64_t v48 = type metadata accessor for ConditionDetailPlatterViewModel.Body(0);
  swift_storeEnumTagMultiPayload();
  _s7Weather24LocationCompositionStateOwst_0(v44 + v2[10], 1, 1, v48);
  *(_OWORD *)uint64_t v44 = xmmword_100C78100;
  *(unsigned char *)(v44 + 16) = 0;
  uint64_t v49 = object;
  *(void *)(v44 + 24) = countAndFlagsBits;
  *(void *)(v44 + 32) = v49;
  *(unsigned char *)(v44 + v2[11]) = 0;
  *(unsigned char *)(v44 + v2[12]) = 0;
  uint64_t v50 = (uint64_t)v69;
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)&v69[v2[8]], 1, 1, v46);
  char v51 = (uint64_t *)(v50 + v2[9]);
  *char v51 = v41;
  v51[1] = v43;
  swift_storeEnumTagMultiPayload();
  _s7Weather24LocationCompositionStateOwst_0(v50 + v2[10], 1, 1, v48);
  *(_OWORD *)uint64_t v50 = xmmword_100C78110;
  *(unsigned char *)(v50 + 16) = 0;
  *(void *)(v50 + 24) = v62;
  *(void *)(v50 + 32) = v35._object;
  *(unsigned char *)(v50 + v2[11]) = 0;
  *(unsigned char *)(v50 + v2[12]) = 0;
  sub_10017DF08(&qword_100E6ECB8);
  uint64_t v52 = *(void *)(v70 + 72);
  unint64_t v53 = (*(unsigned __int8 *)(v71 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v71 + 80);
  uint64_t v54 = swift_allocObject();
  *(_OWORD *)(v54 + 16) = v63;
  uint64_t v55 = v54 + v53;
  sub_100A8BEDC(v44, v55, (void (*)(void))type metadata accessor for ConditionDetailPlatterViewModel);
  sub_100A8F860(v50, v55 + v52, (void (*)(void))type metadata accessor for ConditionDetailPlatterViewModel);
  sub_100A8BF30(v44, (void (*)(void))type metadata accessor for ConditionDetailPlatterViewModel);
  uint64_t v56 = v73;
  uint64_t v57 = *(void (**)(uint64_t, uint64_t))(v72 + 8);
  v57(v40, v73);
  v57((uint64_t)v74, v56);
  return v54;
}

uint64_t sub_100A8BE3C()
{
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 16);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 56);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 96);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 144);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 184);
  swift_release();
  return v0;
}

uint64_t sub_100A8BE84()
{
  sub_100A8BE3C();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for MoonDetailViewModelFactory()
{
  return self;
}

uint64_t sub_100A8BEDC(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  uint64_t v4 = sub_10011BFA4();
  v5(v4);
  return a2;
}

uint64_t sub_100A8BF30(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  sub_100162F0C();
  v3();
  return a1;
}

double sub_100A8BF84(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10017DF08(&qword_100EADE58);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10006DF38(a1, (uint64_t)v6, &qword_100EADE58);
  uint64_t v7 = type metadata accessor for InterpolatedMoonData();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v6, 1, v7) == 1)
  {
    sub_100178110((uint64_t)v6, &qword_100EADE58);
    sub_1001B1E64((void *)(a2 + 16), *(void *)(a2 + 40));
    Location.coordinate.getter();
    if (dispatch thunk of MoonDataProviderType.moonEphemeris(for:coordinate:)())
    {
      CelestialEphemeris.librationPositionAngle.getter();
      double v9 = v8;
      swift_release();
    }
    else
    {
      return 0.0;
    }
  }
  else
  {
    InterpolatedMoonData.librationPositionAngle.getter();
    double v9 = v10;
    (*(void (**)(char *, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  }
  return v9;
}

uint64_t sub_100A8C0EC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for Date();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v5);
  double v10 = (char *)&v17 - v9;
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v17 - v11;
  uint64_t v13 = type metadata accessor for MoonDetailInput.Input(0);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v12, a2 + *(int *)(v13 + 28), v3);
  sub_10085FC7C((uint64_t)v10);
  sub_100A8F8B4((unint64_t *)&qword_100E66CC0, (void (*)(uint64_t))&type metadata accessor for Date);
  LOBYTE(a2) = dispatch thunk of static Comparable.< infix(_:_:)();
  uint64_t v14 = *(void (**)(char *, uint64_t))(v4 + 8);
  v14(v10, v3);
  if (a2)
  {
    v14(v12, v3);
  }
  else
  {
    sub_10085FC7C((uint64_t)v7);
    Date.wc_addHours(_:calendar:)();
    v14(v7, v3);
    char v15 = static Date.< infix(_:_:)();
    v14(v10, v3);
    v14(v12, v3);
    if (v15) {
      return 1;
    }
  }
  return 0;
}

uint64_t sub_100A8C338(uint64_t a1)
{
  uint64_t v2 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10017DF08(&qword_100EADE80);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for MoonRiseSet();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v24 - v13;
  uint64_t v15 = swift_projectBox();
  uint64_t v16 = swift_projectBox();
  sub_10006DF38(a1, (uint64_t)v7, &qword_100EADE80);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v7, 1, v8) == 1) {
    return sub_100178110((uint64_t)v7, &qword_100EADE80);
  }
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v14, v7, v8);
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v12, v14, v8);
  int v18 = (*(uint64_t (**)(char *, uint64_t))(v9 + 88))(v12, v8);
  if (v18 == enum case for MoonRiseSet.rise(_:))
  {
    MoonRiseSet.date.getter();
    uint64_t v19 = *(void (**)(char *, uint64_t))(v9 + 8);
    v19(v14, v8);
    uint64_t v20 = type metadata accessor for Date();
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v4, 0, 1, v20);
    swift_beginAccess();
    uint64_t v21 = (uint64_t)v4;
    uint64_t v22 = v15;
  }
  else
  {
    if (v18 != enum case for MoonRiseSet.set(_:))
    {
      uint64_t v19 = *(void (**)(char *, uint64_t))(v9 + 8);
      v19(v14, v8);
      return ((uint64_t (*)(char *, uint64_t))v19)(v12, v8);
    }
    MoonRiseSet.date.getter();
    uint64_t v19 = *(void (**)(char *, uint64_t))(v9 + 8);
    v19(v14, v8);
    uint64_t v23 = type metadata accessor for Date();
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v4, 0, 1, v23);
    swift_beginAccess();
    uint64_t v21 = (uint64_t)v4;
    uint64_t v22 = v16;
  }
  sub_1001E75A0(v21, v22);
  return ((uint64_t (*)(char *, uint64_t))v19)(v12, v8);
}

char *sub_100A8C684(uint64_t a1, uint64_t a2, void (*a3)(char *, char *, uint64_t))
{
  uint64_t v256 = a2;
  uint64_t v257 = a3;
  uint64_t v4 = sub_10017DF08(&qword_100EADE60);
  __chkstk_darwin(v4 - 8);
  uint64_t v244 = (uint64_t *)((char *)&v217 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v259 = type metadata accessor for OverviewTableRowViewModel();
  uint64_t v261 = *(void *)(v259 - 8);
  uint64_t v6 = __chkstk_darwin(v259);
  uint64_t v224 = (char *)&v217 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v229 = (char *)&v217 - v9;
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v231 = (char *)&v217 - v11;
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v236 = (char *)&v217 - v13;
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v223 = (char *)&v217 - v15;
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v228 = (char *)&v217 - v17;
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v235 = (char *)&v217 - v19;
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v230 = (char *)&v217 - v21;
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v234 = (char *)&v217 - v23;
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v226 = (char *)&v217 - v25;
  uint64_t v26 = __chkstk_darwin(v24);
  uint64_t v233 = (char *)&v217 - v27;
  uint64_t v28 = __chkstk_darwin(v26);
  uint64_t v242 = (char *)&v217 - v29;
  uint64_t v30 = __chkstk_darwin(v28);
  uint64_t v239 = (char *)&v217 - v31;
  uint64_t v32 = __chkstk_darwin(v30);
  uint64_t v237 = (char *)&v217 - v33;
  uint64_t v34 = __chkstk_darwin(v32);
  uint64_t v248 = (char *)&v217 - v35;
  uint64_t v36 = __chkstk_darwin(v34);
  uint64_t v238 = (char *)&v217 - v37;
  uint64_t v38 = __chkstk_darwin(v36);
  uint64_t v220 = (char *)&v217 - v39;
  uint64_t v40 = __chkstk_darwin(v38);
  id v218 = (char *)&v217 - v41;
  uint64_t v42 = __chkstk_darwin(v40);
  uint64_t v219 = (char *)&v217 - v43;
  uint64_t v44 = __chkstk_darwin(v42);
  uint64_t v217 = (char *)&v217 - v45;
  uint64_t v46 = __chkstk_darwin(v44);
  uint64_t v225 = (char *)&v217 - v47;
  __chkstk_darwin(v46);
  uint64_t v222 = (char *)&v217 - v48;
  uint64_t v49 = type metadata accessor for Date();
  uint64_t v258 = *(void *)(v49 - 8);
  uint64_t v50 = __chkstk_darwin(v49);
  uint64_t v240 = (char *)&v217 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = __chkstk_darwin(v50);
  uint64_t v251 = (char *)&v217 - v53;
  uint64_t v54 = __chkstk_darwin(v52);
  uint64_t v247 = (char *)&v217 - v55;
  uint64_t v56 = __chkstk_darwin(v54);
  uint64_t v232 = (char *)&v217 - v57;
  __chkstk_darwin(v56);
  uint64_t v245 = (char *)&v217 - v58;
  uint64_t v59 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  uint64_t v60 = __chkstk_darwin(v59 - 8);
  uint64_t v246 = (uint64_t)&v217 - ((v61 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = __chkstk_darwin(v60);
  uint64_t v64 = (char *)&v217 - v63;
  uint64_t v65 = __chkstk_darwin(v62);
  uint64_t v67 = (char *)&v217 - v66;
  uint64_t v68 = __chkstk_darwin(v65);
  uint64_t v70 = (char *)&v217 - v69;
  uint64_t v71 = __chkstk_darwin(v68);
  uint64_t v73 = (char *)&v217 - v72;
  __chkstk_darwin(v71);
  uint64_t v75 = (char *)&v217 - v74;
  InterpolatedMoonData.moonrise.getter();
  uint64_t v241 = a1;
  InterpolatedMoonData.moonset.getter();
  uint64_t v76 = self;
  id v77 = [v76 mainBundle];
  v78._uint64_t countAndFlagsBits = 0xD00000000000001CLL;
  v264._uint64_t countAndFlagsBits = 0xD00000000000002DLL;
  v264._object = (void *)0x8000000100CBCE00;
  v78._object = (void *)0x8000000100CBCDE0;
  v79._uint64_t countAndFlagsBits = 0x657369726E6F6F4DLL;
  v79._object = (void *)0xE800000000000000;
  Swift::String v80 = NSLocalizedString(_:tableName:bundle:value:comment:)(v78, (Swift::String_optional)0, (NSBundle)v77, v79, v264);
  uint64_t countAndFlagsBits = v80._countAndFlagsBits;
  object = v80._object;

  id v81 = [v76 mainBundle];
  v82._uint64_t countAndFlagsBits = 0xD00000000000001BLL;
  v265._uint64_t countAndFlagsBits = 0xD00000000000002CLL;
  v265._object = (void *)0x8000000100CBCE50;
  v82._object = (void *)0x8000000100CBCE30;
  v83._uint64_t countAndFlagsBits = 0x7465736E6F6F4DLL;
  v83._object = (void *)0xE700000000000000;
  Swift::String v84 = NSLocalizedString(_:tableName:bundle:value:comment:)(v82, (Swift::String_optional)0, (NSBundle)v81, v83, v265);
  uint64_t v250 = v84._countAndFlagsBits;
  uint64_t v255 = v84._object;

  id v227 = v76;
  id v85 = [v76 mainBundle];
  v266._uint64_t countAndFlagsBits = 0xD00000000000005ALL;
  v266._object = (void *)0x8000000100CBCEA0;
  v86._object = (void *)0x8000000100CBCE80;
  v86._uint64_t countAndFlagsBits = 0xD000000000000017;
  v87._uint64_t countAndFlagsBits = 45;
  v87._object = (void *)0xE100000000000000;
  Swift::String v88 = NSLocalizedString(_:tableName:bundle:value:comment:)(v86, (Swift::String_optional)0, (NSBundle)v85, v87, v266);
  uint64_t v243 = v88._countAndFlagsBits;
  uint64_t v253 = v88._object;

  uint64_t v260 = v75;
  sub_10006DF38((uint64_t)v75, (uint64_t)v70, (uint64_t *)&unk_100E73CA0);
  int v89 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v70, 1, v49);
  uint64_t v252 = v73;
  if (v89 == 1)
  {
    sub_100178110((uint64_t)v70, (uint64_t *)&unk_100E73CA0);
    uint64_t v90 = v258;
    uint64_t v91 = v259;
  }
  else
  {
    uint64_t v90 = v258;
    uint64_t v92 = *(void (**)(char *, char *, uint64_t))(v258 + 32);
    uint64_t v93 = v245;
    v92(v245, v70, v49);
    sub_10006DF38((uint64_t)v73, (uint64_t)v67, (uint64_t *)&unk_100E73CA0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v67, 1, v49) == 1)
    {
      (*(void (**)(char *, uint64_t))(v90 + 8))(v93, v49);
      sub_100178110((uint64_t)v67, (uint64_t *)&unk_100E73CA0);
      uint64_t v91 = v259;
    }
    else
    {
      uint64_t v94 = v90;
      uint64_t v95 = v232;
      v92(v232, v67, v49);
      char v96 = Date.isSameDay(as:timeZone:)();
      uint64_t v91 = v259;
      if (v96)
      {
        uint64_t v221 = v49;
        if (Date.isSameDay(as:timeZone:)())
        {
          swift_bridgeObjectRelease();
          Date.formattedTime(timeZone:)();
          uint64_t v97 = v222;
          OverviewTableRowViewModel.init(title:value:shouldDividerHavePadding:)();
          Date.formattedTime(timeZone:)();
          uint64_t v98 = v225;
          OverviewTableRowViewModel.init(title:value:shouldDividerHavePadding:)();
          char v99 = static Date.< infix(_:_:)();
          uint64_t v100 = *(void (**)(char *, char *, uint64_t))(v261 + 16);
          if (v99)
          {
            uint64_t v101 = v97;
            uint64_t v102 = *(void (**)(char *, char *, uint64_t))(v261 + 16);
            v100(v217, v101, v91);
            uint64_t v103 = (char *)sub_1007E9858(0, 1, 1, (uint64_t)_swiftEmptyArrayStorage);
            unint64_t v105 = *((void *)v103 + 2);
            unint64_t v104 = *((void *)v103 + 3);
            if (v105 >= v104 >> 1) {
              uint64_t v103 = (char *)sub_1007E9858(v104 > 1, v105 + 1, 1, (uint64_t)v103);
            }
            *((void *)v103 + 2) = v105 + 1;
            uint64_t v106 = *(void (**)(char *, char *, uint64_t))(v261 + 32);
            unint64_t v107 = (*(unsigned __int8 *)(v261 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v261 + 80);
            uint64_t v108 = *(void *)(v261 + 72);
            uint64_t v109 = &v103[v107 + v108 * v105];
            uint64_t v110 = v259;
            v106(v109, v217, v259);
            v102(v219, v225, v110);
            unint64_t v112 = *((void *)v103 + 2);
            unint64_t v111 = *((void *)v103 + 3);
            if (v112 >= v111 >> 1) {
              uint64_t v103 = (char *)sub_1007E9858(v111 > 1, v112 + 1, 1, (uint64_t)v103);
            }
            uint64_t v113 = (uint64_t)v252;
            *((void *)v103 + 2) = v112 + 1;
            uint64_t v114 = &v103[v107 + v112 * v108];
            char v115 = &v251;
          }
          else
          {
            uint64_t v257 = *(void (**)(char *, char *, uint64_t))(v261 + 16);
            v100(v218, v98, v91);
            uint64_t v103 = (char *)sub_1007E9858(0, 1, 1, (uint64_t)_swiftEmptyArrayStorage);
            unint64_t v208 = *((void *)v103 + 2);
            unint64_t v207 = *((void *)v103 + 3);
            if (v208 >= v207 >> 1) {
              uint64_t v103 = (char *)sub_1007E9858(v207 > 1, v208 + 1, 1, (uint64_t)v103);
            }
            *((void *)v103 + 2) = v208 + 1;
            uint64_t v106 = *(void (**)(char *, char *, uint64_t))(v261 + 32);
            unint64_t v209 = (*(unsigned __int8 *)(v261 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v261 + 80);
            uint64_t v210 = *(void *)(v261 + 72);
            Swift::String v211 = &v103[v209 + v210 * v208];
            uint64_t v110 = v259;
            v106(v211, v218, v259);
            v257(v220, v97, v110);
            unint64_t v213 = *((void *)v103 + 2);
            unint64_t v212 = *((void *)v103 + 3);
            if (v213 >= v212 >> 1) {
              uint64_t v103 = (char *)sub_1007E9858(v212 > 1, v213 + 1, 1, (uint64_t)v103);
            }
            uint64_t v113 = (uint64_t)v252;
            *((void *)v103 + 2) = v213 + 1;
            uint64_t v114 = &v103[v209 + v213 * v210];
            char v115 = &v252;
          }
          v106(v114, *(v115 - 32), v110);
          uint64_t v214 = *(void (**)(char *, uint64_t))(v261 + 8);
          v214(v225, v110);
          v214(v222, v110);
          uint64_t v215 = *(void (**)(char *, uint64_t))(v94 + 8);
          uint64_t v216 = v221;
          v215(v232, v221);
          v215(v245, v216);
          goto LABEL_32;
        }
        uint64_t v118 = v95;
        uint64_t v90 = v94;
        uint64_t v119 = *(void (**)(char *, uint64_t))(v94 + 8);
        uint64_t v49 = v221;
        v119(v118, v221);
        v119(v245, v49);
      }
      else
      {
        uint64_t v116 = v95;
        uint64_t v90 = v94;
        uint64_t v117 = *(void (**)(char *, uint64_t))(v94 + 8);
        v117(v116, v49);
        v117(v93, v49);
      }
    }
  }
  sub_10006DF38((uint64_t)v260, (uint64_t)v64, (uint64_t *)&unk_100E73CA0);
  int v120 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v64, 1, v49);
  uint64_t v121 = v257;
  if (v120 == 1)
  {
    sub_100178110((uint64_t)v64, (uint64_t *)&unk_100E73CA0);
  }
  else
  {
    uint64_t v122 = v247;
    (*(void (**)(void))(v90 + 32))();
    if (Date.isSameDay(as:timeZone:)())
    {
      uint64_t v221 = v49;
      Date.formattedTime(timeZone:)();
      uint64_t v123 = v238;
      OverviewTableRowViewModel.init(title:value:shouldDividerHavePadding:)();
      uint64_t v124 = (uint64_t)v244;
      uint64_t v125 = v253;
      *uint64_t v244 = v243;
      *(void *)(v124 + 8) = v125;
      *(unsigned char *)(v124 + 16) = 0;
      uint64_t v126 = enum case for OverviewTableValueString.noValueString(_:);
      uint64_t v127 = type metadata accessor for OverviewTableValueString();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v127 - 8) + 104))(v124, v126, v127);
      _s7Weather24LocationCompositionStateOwst_0(v124, 0, 1, v127);
      swift_bridgeObjectRetain();
      OverviewTableRowViewModel.init(id:title:value:shouldDividerHavePadding:)();
      uint64_t v128 = *(void (**)(char *, char *, uint64_t))(v261 + 16);
      v128(v237, v123, v91);
      uint64_t v103 = (char *)sub_1007E9858(0, 1, 1, (uint64_t)_swiftEmptyArrayStorage);
      unint64_t v130 = *((void *)v103 + 2);
      unint64_t v129 = *((void *)v103 + 3);
      if (v130 >= v129 >> 1) {
        uint64_t v103 = (char *)sub_1007E9858(v129 > 1, v130 + 1, 1, (uint64_t)v103);
      }
      *((void *)v103 + 2) = v130 + 1;
      Swift::String v131 = *(void (**)(char *, char *, uint64_t))(v261 + 32);
      unint64_t v132 = (*(unsigned __int8 *)(v261 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v261 + 80);
      uint64_t v133 = *(void *)(v261 + 72);
      uint64_t v134 = &v103[v132 + v133 * v130];
      uint64_t v135 = v259;
      v131(v134, v237, v259);
      v128(v239, v248, v135);
      unint64_t v137 = *((void *)v103 + 2);
      unint64_t v136 = *((void *)v103 + 3);
      if (v137 >= v136 >> 1) {
        uint64_t v103 = (char *)sub_1007E9858(v136 > 1, v137 + 1, 1, (uint64_t)v103);
      }
      uint64_t v113 = (uint64_t)v252;
      uint64_t v138 = v258;
      *((void *)v103 + 2) = v137 + 1;
      v131(&v103[v132 + v137 * v133], v239, v135);
      uint64_t v139 = *(void (**)(char *, uint64_t))(v261 + 8);
      v139(v248, v135);
      v139(v238, v135);
      (*(void (**)(char *, uint64_t))(v138 + 8))(v247, v221);
      goto LABEL_32;
    }
    (*(void (**)(char *, uint64_t))(v90 + 8))(v122, v49);
  }
  uint64_t v140 = v246;
  sub_10006DF38((uint64_t)v73, v246, (uint64_t *)&unk_100E73CA0);
  int v141 = _s7Weather24LocationCompositionStateOwet_0(v140, 1, v49);
  uint64_t v142 = v251;
  if (v141 == 1)
  {
    sub_100178110(v140, (uint64_t *)&unk_100E73CA0);
    goto LABEL_34;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v90 + 32))(v251, v140, v49);
  if (Date.isSameDay(as:timeZone:)())
  {
    uint64_t v221 = v49;
    uint64_t v143 = (uint64_t)v244;
    uint64_t v144 = v253;
    *uint64_t v244 = v243;
    *(void *)(v143 + 8) = v144;
    *(unsigned char *)(v143 + 16) = 0;
    uint64_t v145 = enum case for OverviewTableValueString.noValueString(_:);
    uint64_t v146 = type metadata accessor for OverviewTableValueString();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v146 - 8) + 104))(v143, v145, v146);
    _s7Weather24LocationCompositionStateOwst_0(v143, 0, 1, v146);
    swift_bridgeObjectRetain();
    OverviewTableRowViewModel.init(id:title:value:shouldDividerHavePadding:)();
    Date.formattedTime(timeZone:)();
    uint64_t v147 = v233;
    OverviewTableRowViewModel.init(title:value:shouldDividerHavePadding:)();
    uint64_t v148 = *(void (**)(char *, char *, uint64_t))(v261 + 16);
    uint64_t v149 = v226;
    v148(v226, v147, v91);
    uint64_t v103 = (char *)sub_1007E9858(0, 1, 1, (uint64_t)_swiftEmptyArrayStorage);
    unint64_t v151 = *((void *)v103 + 2);
    unint64_t v150 = *((void *)v103 + 3);
    if (v151 >= v150 >> 1) {
      uint64_t v103 = (char *)sub_1007E9858(v150 > 1, v151 + 1, 1, (uint64_t)v103);
    }
    *((void *)v103 + 2) = v151 + 1;
    uint64_t v152 = *(void (**)(char *, char *, uint64_t))(v261 + 32);
    unint64_t v153 = (*(unsigned __int8 *)(v261 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v261 + 80);
    uint64_t v154 = *(void *)(v261 + 72);
    uint64_t v155 = &v103[v153 + v154 * v151];
    uint64_t v156 = v259;
    v152(v155, v149, v259);
    v148(v234, v242, v156);
    unint64_t v158 = *((void *)v103 + 2);
    unint64_t v157 = *((void *)v103 + 3);
    if (v158 >= v157 >> 1) {
      uint64_t v103 = (char *)sub_1007E9858(v157 > 1, v158 + 1, 1, (uint64_t)v103);
    }
    uint64_t v113 = (uint64_t)v252;
    uint64_t v159 = v258;
    *((void *)v103 + 2) = v158 + 1;
    v152(&v103[v153 + v158 * v154], v234, v156);
    uint64_t v160 = *(void (**)(char *, uint64_t))(v261 + 8);
    v160(v233, v156);
    v160(v242, v156);
    (*(void (**)(char *, uint64_t))(v159 + 8))(v251, v221);
LABEL_32:
    uint64_t v161 = v113;
    goto LABEL_52;
  }
  (*(void (**)(char *, uint64_t))(v90 + 8))(v142, v49);
LABEL_34:
  char v162 = InterpolatedMoonData.isMoonRisen.getter();
  unsigned int v163 = v240;
  if (v162 == 2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (qword_100E627E8 != -1) {
      swift_once();
    }
    uint64_t v164 = type metadata accessor for Logger();
    sub_1002102B0(v164, (uint64_t)qword_100F51ED0);
    (*(void (**)(char *, void, uint64_t))(v90 + 16))(v163, v121, v49);
    uint64_t v165 = Logger.logObject.getter();
    os_log_type_t v166 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v165, v166))
    {
      uint64_t v167 = (uint8_t *)swift_slowAlloc();
      uint64_t v263 = swift_slowAlloc();
      *(_DWORD *)uint64_t v167 = 136446210;
      sub_100A8F8B4(&qword_100E656D8, (void (*)(uint64_t))&type metadata accessor for Date);
      uint64_t v168 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v262 = sub_10016414C(v168, v169, &v263);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v90 + 8))(v163, v49);
      _os_log_impl((void *)&_mh_execute_header, v165, v166, "Failed to create moonrise moonset rows for date: %{public}s", v167, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v90 + 8))(v163, v49);
    }

    uint64_t v103 = (char *)_swiftEmptyArrayStorage;
    uint64_t v161 = (uint64_t)v252;
  }
  else if (v162)
  {
    id v188 = [v227 mainBundle];
    v268._uint64_t countAndFlagsBits = 0xD000000000000032;
    v268._object = (void *)0x8000000100CBCF40;
    v189._uint64_t countAndFlagsBits = 0x64206C6C61207055;
    v189._object = (void *)0xEA00000000007961;
    v190._uint64_t countAndFlagsBits = 0;
    v190._object = (void *)0xE000000000000000;
    NSLocalizedString(_:tableName:bundle:value:comment:)(v189, (Swift::String_optional)0, (NSBundle)v188, v190, v268);

    uint64_t v191 = v230;
    OverviewTableRowViewModel.init(title:value:shouldDividerHavePadding:)();
    uint64_t v192 = (uint64_t)v244;
    uint64_t v193 = v253;
    *uint64_t v244 = v243;
    *(void *)(v192 + 8) = v193;
    *(unsigned char *)(v192 + 16) = 0;
    uint64_t v194 = enum case for OverviewTableValueString.noValueString(_:);
    uint64_t v195 = type metadata accessor for OverviewTableValueString();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v195 - 8) + 104))(v192, v194, v195);
    _s7Weather24LocationCompositionStateOwst_0(v192, 0, 1, v195);
    swift_bridgeObjectRetain();
    OverviewTableRowViewModel.init(id:title:value:shouldDividerHavePadding:)();
    uint64_t v196 = *(void (**)(char *, char *, uint64_t))(v261 + 16);
    v196(v228, v191, v91);
    uint64_t v103 = (char *)sub_1007E9858(0, 1, 1, (uint64_t)_swiftEmptyArrayStorage);
    unint64_t v198 = *((void *)v103 + 2);
    unint64_t v197 = *((void *)v103 + 3);
    if (v198 >= v197 >> 1) {
      uint64_t v103 = (char *)sub_1007E9858(v197 > 1, v198 + 1, 1, (uint64_t)v103);
    }
    *((void *)v103 + 2) = v198 + 1;
    uint64_t v199 = *(void (**)(char *, char *, uint64_t))(v261 + 32);
    unint64_t v200 = (*(unsigned __int8 *)(v261 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v261 + 80);
    uint64_t v201 = *(void *)(v261 + 72);
    v199(&v103[v200 + v201 * v198], v228, v91);
    uint64_t v202 = v223;
    v196(v223, v235, v91);
    unint64_t v204 = *((void *)v103 + 2);
    unint64_t v203 = *((void *)v103 + 3);
    if (v204 >= v203 >> 1) {
      uint64_t v103 = (char *)sub_1007E9858(v203 > 1, v204 + 1, 1, (uint64_t)v103);
    }
    uint64_t v161 = (uint64_t)v252;
    *((void *)v103 + 2) = v204 + 1;
    v199(&v103[v200 + v204 * v201], v202, v91);
    uint64_t v205 = *(void (**)(char *, uint64_t))(v261 + 8);
    v205(v235, v91);
    v205(v230, v91);
  }
  else
  {
    uint64_t v170 = (uint64_t)v244;
    uint64_t v171 = v253;
    *uint64_t v244 = v243;
    *(void *)(v170 + 8) = v171;
    *(unsigned char *)(v170 + 16) = 0;
    uint64_t v172 = enum case for OverviewTableValueString.noValueString(_:);
    uint64_t v173 = type metadata accessor for OverviewTableValueString();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v173 - 8) + 104))(v170, v172, v173);
    _s7Weather24LocationCompositionStateOwst_0(v170, 0, 1, v173);
    swift_bridgeObjectRetain();
    OverviewTableRowViewModel.init(id:title:value:shouldDividerHavePadding:)();
    id v174 = [v227 mainBundle];
    v267._uint64_t countAndFlagsBits = 0xD000000000000034;
    v267._object = (void *)0x8000000100CBCF00;
    v175._uint64_t countAndFlagsBits = 0x6C6C61206E776F44;
    v175._object = (void *)0xEC00000079616420;
    v176._uint64_t countAndFlagsBits = 0;
    v176._object = (void *)0xE000000000000000;
    NSLocalizedString(_:tableName:bundle:value:comment:)(v175, (Swift::String_optional)0, (NSBundle)v174, v176, v267);

    uint64_t v177 = v231;
    OverviewTableRowViewModel.init(title:value:shouldDividerHavePadding:)();
    uint64_t v178 = *(void (**)(char *, char *, uint64_t))(v261 + 16);
    v178(v229, v177, v91);
    uint64_t v103 = (char *)sub_1007E9858(0, 1, 1, (uint64_t)_swiftEmptyArrayStorage);
    unint64_t v180 = *((void *)v103 + 2);
    unint64_t v179 = *((void *)v103 + 3);
    if (v180 >= v179 >> 1) {
      uint64_t v103 = (char *)sub_1007E9858(v179 > 1, v180 + 1, 1, (uint64_t)v103);
    }
    *((void *)v103 + 2) = v180 + 1;
    uint64_t v181 = *(void (**)(char *, char *, uint64_t))(v261 + 32);
    unint64_t v182 = (*(unsigned __int8 *)(v261 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v261 + 80);
    uint64_t v183 = *(void *)(v261 + 72);
    v181(&v103[v182 + v183 * v180], v229, v91);
    uint64_t v184 = v224;
    v178(v224, v236, v91);
    unint64_t v186 = *((void *)v103 + 2);
    unint64_t v185 = *((void *)v103 + 3);
    if (v186 >= v185 >> 1) {
      uint64_t v103 = (char *)sub_1007E9858(v185 > 1, v186 + 1, 1, (uint64_t)v103);
    }
    uint64_t v161 = (uint64_t)v252;
    *((void *)v103 + 2) = v186 + 1;
    v181(&v103[v182 + v186 * v183], v184, v91);
    uint64_t v187 = *(void (**)(char *, uint64_t))(v261 + 8);
    v187(v231, v91);
    v187(v236, v91);
  }
LABEL_52:
  sub_100178110(v161, (uint64_t *)&unk_100E73CA0);
  sub_100178110((uint64_t)v260, (uint64_t *)&unk_100E73CA0);
  return v103;
}

uint64_t sub_100A8E09C(uint64_t a1)
{
  uint64_t v2 = sub_10017DF08(&qword_100EADE60);
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for OverviewTableRowViewModel();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v37 = (char *)v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)v27 - v9;
  uint64_t v11 = (char *)_swiftEmptyArrayStorage;
  uint64_t v38 = (char *)_swiftEmptyArrayStorage;
  uint64_t v12 = *(void *)(a1 + 16);
  swift_bridgeObjectRetain();
  if (!v12)
  {
LABEL_18:
    swift_bridgeObjectRelease();
    return (uint64_t)v11;
  }
  v27[0] = v2;
  uint64_t v30 = v4 + 8;
  uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  uint64_t v14 = v6 + 16;
  uint64_t v13 = v15;
  unint64_t v16 = (*(unsigned __int8 *)(v14 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 64);
  uint64_t v17 = *(void *)(v14 + 56);
  v27[1] = a1;
  unint64_t v31 = v16;
  uint64_t v18 = a1 + v16;
  int v34 = enum case for OverviewTableValueString.attributedString(_:);
  int v28 = enum case for OverviewTableValueString.noValueString(_:);
  int v29 = enum case for OverviewTableValueString.temporalString(_:);
  uint64_t v35 = (void (**)(char *, uint64_t))(v14 - 8);
  uint64_t v36 = (void (**)(char *, char *, uint64_t))(v14 + 16);
  uint64_t v32 = v15;
  uint64_t v33 = v14;
  while (1)
  {
    v13(v10, v18, v5);
    OverviewTableRowViewModel.value.getter();
    uint64_t v19 = type metadata accessor for OverviewTableValueString();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v4, 1, v19) != 1) {
      break;
    }
LABEL_4:
    (*v35)(v10, v5);
LABEL_14:
    v18 += v17;
    if (!--v12)
    {
      uint64_t v11 = v38;
      goto LABEL_18;
    }
  }
  uint64_t v20 = *(void *)(v19 - 8);
  int v21 = (*(uint64_t (**)(char *, uint64_t))(v20 + 88))(v4, v19);
  if (v21 == v34)
  {
    (*(void (**)(char *, uint64_t))(v20 + 96))(v4, v19);
    sub_10017DF08(&qword_100EADE70);
    swift_bridgeObjectRelease();
    uint64_t v22 = type metadata accessor for AttributedString();
    (*(void (**)(char *, uint64_t))(*(void *)(v22 - 8) + 8))(v4, v22);
LABEL_9:
    uint64_t v23 = *v36;
    (*v36)(v37, v10, v5);
    uint64_t v24 = v38;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1007F34D0();
      uint64_t v24 = v38;
    }
    unint64_t v25 = *((void *)v24 + 2);
    if (v25 >= *((void *)v24 + 3) >> 1)
    {
      sub_1007F34D0();
      uint64_t v24 = v38;
    }
    *((void *)v24 + 2) = v25 + 1;
    v23(&v24[v31 + v25 * v17], v37, v5);
    uint64_t v38 = v24;
    uint64_t v13 = v32;
    goto LABEL_14;
  }
  if (v21 == v29)
  {
    (*(void (**)(char *, uint64_t))(v20 + 96))(v4, v19);
    sub_1001F3C7C(*(void *)v4, *((void *)v4 + 1), v4[16]);
    goto LABEL_9;
  }
  if (v21 == v28)
  {
    (*(void (**)(char *, uint64_t))(v20 + 96))(v4, v19);
    sub_1001F3C7C(*(void *)v4, *((void *)v4 + 1), v4[16]);
    goto LABEL_4;
  }
  uint64_t result = _diagnoseUnexpectedEnumCase<A>(type:)();
  __break(1u);
  return result;
}

uint64_t sub_100A8E4D0@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_10017DF08(&qword_100E7CAE0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for OverviewTableViewModel();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    swift_bridgeObjectRetain();
    OverviewTableViewModel.init(rows:)();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_100BDE614();
    char v12 = v11;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v12)
    {
      uint64_t v13 = 1;
    }
    else
    {
      swift_bridgeObjectRetain();
      OverviewTableViewModel.init(rows:)();
      uint64_t v13 = 0;
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v6, v13, 1, v7);
    (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(a2, v10, v7);
    uint64_t v16 = type metadata accessor for MoonCompactOverviewTableViewModel(0);
    sub_10024D364((uint64_t)v6, a2 + *(int *)(v16 + 20), &qword_100E7CAE0);
    return _s7Weather24LocationCompositionStateOwst_0(a2, 0, 1, v16);
  }
  else
  {
    uint64_t v14 = type metadata accessor for MoonCompactOverviewTableViewModel(0);
    return _s7Weather24LocationCompositionStateOwst_0(a2, 1, 1, v14);
  }
}

uint64_t sub_100A8E6F8(uint64_t a1, void (*a2)(char *, uint64_t), uint64_t a3)
{
  uint64_t v146 = a3;
  uint64_t v144 = a2;
  uint64_t v155 = sub_10017DF08(&qword_100E6B648);
  unint64_t v125 = *(void *)(v155 - 8);
  uint64_t v3 = __chkstk_darwin(v155);
  uint64_t v5 = (char *)v122 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)v122 - v6;
  uint64_t v8 = type metadata accessor for WeatherFormatPlaceholder();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v152 = v8;
  uint64_t v153 = v9;
  __chkstk_darwin(v8);
  uint64_t v145 = (char *)v122 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for WeatherFormatScaling();
  uint64_t v156 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  unint64_t v150 = (char *)v122 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_10017DF08(&qword_100E63730);
  __chkstk_darwin(v13 - 8);
  uint64_t v149 = (uint64_t)v122 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for NSUnitLength.WeatherFormatUsage();
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)v122 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v154 = type metadata accessor for NSUnitLength.BaseWeatherFormatStyle();
  uint64_t v157 = *(void *)(v154 - 8);
  __chkstk_darwin(v154);
  uint64_t v128 = (char *)v122 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = (void *)ConditionUnits.visibility.getter();
  char v21 = NSUnitLength.isMetricVisibility.getter();

  uint64_t v151 = v11;
  uint64_t v147 = v15;
  uint64_t v126 = v18;
  if (v21)
  {
    id v22 = [self mainBundle];
    v158._object = (void *)0x8000000100CBCAC0;
    v23._object = (void *)0x8000000100CBCB90;
    v23._uint64_t countAndFlagsBits = 0x10000000000000DCLL;
    v24._uint64_t countAndFlagsBits = 0;
    v24._object = (void *)0xE000000000000000;
    v158._uint64_t countAndFlagsBits = 0xD0000000000000C4;
    Swift::String v25 = NSLocalizedString(_:tableName:bundle:value:comment:)(v23, (Swift::String_optional)0, (NSBundle)v22, v24, v158);
    object = (void (*)(char *, void, uint64_t))v25._object;
    uint64_t countAndFlagsBits = v25._countAndFlagsBits;

    sub_10017DF08(&qword_100E64020);
    uint64_t v26 = swift_allocObject();
    *(_OWORD *)(v26 + 16) = xmmword_100C25ED0;
    LODWORD(v141) = enum case for NSUnitLength.WeatherFormatUsage.visibility(_:);
    uint64_t v27 = *(void (**)(void))(v16 + 104);
    uint64_t v139 = v16 + 104;
    uint64_t v140 = (void (*)(char *, void, uint64_t))v27;
    uint64_t v28 = v15;
    v27(v18);
    uint64_t v138 = type metadata accessor for Locale();
    int v29 = v18;
    uint64_t v30 = v149;
    _s7Weather24LocationCompositionStateOwst_0(v149, 1, 1, v138);
    static Set<>.full.getter();
    LODWORD(v137) = enum case for WeatherFormatScaling.automatic(_:);
    uint64_t v31 = v156;
    uint64_t v135 = *(void (**)(char *))(v156 + 104);
    unint64_t v136 = (void (*)(char *, uint64_t))(v156 + 104);
    uint64_t v32 = v150;
    v135(v150);
    uint64_t v33 = v128;
    static WeatherFormatStyle<>.weather(_:usage:scaling:trimLeadingZeroes:locale:)();
    swift_bridgeObjectRelease();
    int v34 = *(void (**)(char *, uint64_t))(v31 + 8);
    uint64_t v156 = v31 + 8;
    uint64_t v134 = v34;
    v34(v32, v11);
    sub_100178110(v30, &qword_100E63730);
    uint64_t v35 = *(void (**)(char *, uint64_t))(v16 + 8);
    uint64_t v148 = v16 + 8;
    uint64_t v133 = v35;
    v35(v29, v28);
    LODWORD(v132) = enum case for WeatherFormatPlaceholder.none(_:);
    uint64_t v36 = v153;
    uint64_t v37 = *(void (**)(void))(v153 + 104);
    uint64_t v130 = v153 + 104;
    Swift::String v131 = (void (*)(char *, void, uint64_t))v37;
    uint64_t v38 = v145;
    uint64_t v39 = v152;
    v37(v145);
    unint64_t v129 = type metadata accessor for UnitManager();
    static UnitManager.standard.getter();
    uint64_t v127 = (void (*)(char *, uint64_t))sub_100A8F8B4((unint64_t *)&qword_100E6B658, (void (*)(uint64_t))&type metadata accessor for NSUnitLength.BaseWeatherFormatStyle);
    uint64_t v40 = v154;
    uint64_t v41 = Measurement.formatted<A>(_:placeholder:unitManager:)();
    uint64_t v43 = v42;
    swift_release();
    uint64_t v153 = *(void *)(v36 + 8);
    ((void (*)(char *, uint64_t))v153)(v38, v39);
    uint64_t v44 = *(void (**)(char *, uint64_t))(v157 + 8);
    v157 += 8;
    uint64_t v144 = v44;
    v44(v33, v40);
    *(void *)(v26 + 56) = &type metadata for String;
    unint64_t v125 = sub_10012B7C0();
    *(void *)(v26 + 64) = v125;
    *(void *)(v26 + 32) = v41;
    *(void *)(v26 + 40) = v43;
    uint64_t v45 = v126;
    uint64_t v46 = v147;
    v140(v126, v141, v147);
    uint64_t v47 = v149;
    _s7Weather24LocationCompositionStateOwst_0(v149, 1, 1, v138);
    static Set<>.full.getter();
    uint64_t v48 = v151;
    ((void (*)(char *, void, uint64_t))v135)(v32, v137, v151);
    static WeatherFormatStyle<>.weather(_:usage:scaling:trimLeadingZeroes:locale:)();
    swift_bridgeObjectRelease();
    v134(v32, v48);
    sub_100178110(v47, &qword_100E63730);
    v133(v45, v46);
    uint64_t v49 = v152;
    v131(v38, v132, v152);
    static UnitManager.standard.getter();
    uint64_t v50 = v154;
    uint64_t v51 = Measurement.formatted<A>(_:placeholder:unitManager:)();
    uint64_t v53 = v52;
    swift_release();
    ((void (*)(char *, uint64_t))v153)(v38, v49);
    v144(v33, v50);
    unint64_t v54 = v125;
    *(void *)(v26 + 96) = &type metadata for String;
    *(void *)(v26 + 104) = v54;
    *(void *)(v26 + 72) = v51;
    *(void *)(v26 + 80) = v53;
    uint64_t v55 = static String.localizedStringWithFormat(_:_:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v56 = self;
    id v57 = [v56 miles];
    sub_1001ABC4C(0, (unint64_t *)&qword_100E6B678);
    uint64_t v124 = v7;
    Measurement.init(value:unit:)();
    id v58 = [v56 miles];
    uint64_t v123 = v5;
    Measurement.init(value:unit:)();
    id v59 = [self mainBundle];
    v60._uint64_t countAndFlagsBits = 0x10000000000000EALL;
    v159._object = (void *)0x8000000100CBCAC0;
    v60._object = (void *)0x8000000100CBC9D0;
    v61._uint64_t countAndFlagsBits = 0;
    v61._object = (void *)0xE000000000000000;
    v159._uint64_t countAndFlagsBits = 0xD0000000000000C4;
    Swift::String v62 = NSLocalizedString(_:tableName:bundle:value:comment:)(v60, (Swift::String_optional)0, (NSBundle)v59, v61, v159);
    v122[1] = v62._countAndFlagsBits;
    v122[0] = v62._object;

    sub_10017DF08(&qword_100E64020);
    uint64_t v63 = swift_allocObject();
    *(_OWORD *)(v63 + 16) = xmmword_100C31870;
    LODWORD(countAndFlagsBits) = enum case for NSUnitLength.WeatherFormatUsage.visibility(_:);
    uint64_t v64 = *(void (**)(void))(v16 + 104);
    uint64_t v141 = v16 + 104;
    object = (void (*)(char *, void, uint64_t))v64;
    uint64_t v65 = v15;
    v64(v18);
    LODWORD(v138) = enum case for WeatherFormatScaling.asProvided(_:);
    uint64_t v66 = v156;
    uint64_t v67 = *(void (**)(void))(v156 + 104);
    uint64_t v139 = v156 + 104;
    uint64_t v140 = (void (*)(char *, void, uint64_t))v67;
    uint64_t v69 = v150;
    uint64_t v68 = v151;
    v67(v150);
    uint64_t v137 = type metadata accessor for Locale();
    uint64_t v70 = v149;
    _s7Weather24LocationCompositionStateOwst_0(v149, 1, 1, v137);
    static Set<>.full.getter();
    uint64_t v71 = v128;
    static WeatherFormatStyle<>.weather(_:usage:scaling:trimLeadingZeroes:locale:)();
    swift_bridgeObjectRelease();
    sub_100178110(v70, &qword_100E63730);
    uint64_t v72 = *(void (**)(char *, uint64_t))(v66 + 8);
    uint64_t v156 = v66 + 8;
    unint64_t v136 = v72;
    v72(v69, v68);
    uint64_t v73 = *(void (**)(char *))(v16 + 8);
    uint64_t v148 = v16 + 8;
    uint64_t v135 = v73;
    ((void (*)(char *, uint64_t))v73)(v18, v65);
    LODWORD(v134) = enum case for WeatherFormatPlaceholder.none(_:);
    uint64_t v74 = v153;
    uint64_t v75 = *(void (**)(char *, uint64_t))(v153 + 104);
    uint64_t v132 = v153 + 104;
    uint64_t v133 = v75;
    uint64_t v76 = v145;
    uint64_t v77 = v152;
    ((void (*)(char *))v75)(v145);
    uint64_t v130 = type metadata accessor for UnitManager();
    static UnitManager.standard.getter();
    Swift::String v131 = (void (*)(char *, void, uint64_t))sub_100A8F8B4((unint64_t *)&qword_100E6B658, (void (*)(uint64_t))&type metadata accessor for NSUnitLength.BaseWeatherFormatStyle);
    uint64_t v78 = v154;
    uint64_t v79 = Measurement.formatted<A>(_:placeholder:unitManager:)();
    uint64_t v81 = v80;
    swift_release();
    Swift::String v82 = *(void (**)(char *, uint64_t))(v74 + 8);
    uint64_t v153 = v74 + 8;
    uint64_t v144 = v82;
    v82(v76, v77);
    uint64_t v127 = *(void (**)(char *, uint64_t))(v157 + 8);
    v157 += 8;
    v127(v71, v78);
    *(void *)(v63 + 56) = &type metadata for String;
    unint64_t v129 = sub_10012B7C0();
    *(void *)(v63 + 64) = v129;
    *(void *)(v63 + 32) = v79;
    *(void *)(v63 + 40) = v81;
    Swift::String v83 = v126;
    uint64_t v84 = v147;
    object(v126, countAndFlagsBits, v147);
    Swift::String v86 = v150;
    uint64_t v85 = v151;
    v140(v150, v138, v151);
    _s7Weather24LocationCompositionStateOwst_0(v70, 1, 1, v137);
    static Set<>.full.getter();
    static WeatherFormatStyle<>.weather(_:usage:scaling:trimLeadingZeroes:locale:)();
    swift_bridgeObjectRelease();
    sub_100178110(v70, &qword_100E63730);
    v136(v86, v85);
    Swift::String v87 = v83;
    ((void (*)(char *, uint64_t))v135)(v83, v84);
    uint64_t v88 = v152;
    ((void (*)(char *, void, uint64_t))v133)(v76, v134, v152);
    static UnitManager.standard.getter();
    uint64_t v89 = v154;
    uint64_t v90 = Measurement.formatted<A>(_:placeholder:unitManager:)();
    uint64_t v92 = v91;
    swift_release();
    v144(v76, v88);
    uint64_t v93 = v71;
    v127(v71, v89);
    unint64_t v94 = v129;
    *(void *)(v63 + 96) = &type metadata for String;
    *(void *)(v63 + 104) = v94;
    *(void *)(v63 + 72) = v90;
    *(void *)(v63 + 80) = v92;
    uint64_t v95 = v87;
    uint64_t v96 = v147;
    object(v87, countAndFlagsBits, v147);
    uint64_t v98 = v150;
    uint64_t v97 = v151;
    v140(v150, v138, v151);
    _s7Weather24LocationCompositionStateOwst_0(v70, 1, 1, v137);
    static Set<>.full.getter();
    char v99 = v93;
    static WeatherFormatStyle<>.weather(_:usage:scaling:trimLeadingZeroes:locale:)();
    swift_bridgeObjectRelease();
    sub_100178110(v70, &qword_100E63730);
    v136(v98, v97);
    ((void (*)(char *, uint64_t))v135)(v95, v96);
    uint64_t v100 = v152;
    ((void (*)(char *, void, uint64_t))v133)(v76, v134, v152);
    static UnitManager.standard.getter();
    uint64_t v101 = v99;
    uint64_t v102 = v154;
    uint64_t v103 = Measurement.formatted<A>(_:placeholder:unitManager:)();
    uint64_t v105 = v104;
    swift_release();
    v144(v76, v100);
    uint64_t v106 = v101;
    v127(v101, v102);
    unint64_t v107 = v129;
    *(void *)(v63 + 136) = &type metadata for String;
    *(void *)(v63 + 144) = v107;
    *(void *)(v63 + 112) = v103;
    *(void *)(v63 + 120) = v105;
    uint64_t v108 = v147;
    object(v95, countAndFlagsBits, v147);
    uint64_t v109 = v151;
    v140(v98, v138, v151);
    uint64_t v110 = v149;
    _s7Weather24LocationCompositionStateOwst_0(v149, 1, 1, v137);
    static Set<>.full.getter();
    unint64_t v111 = v106;
    static WeatherFormatStyle<>.weather(_:usage:scaling:trimLeadingZeroes:locale:)();
    swift_bridgeObjectRelease();
    sub_100178110(v110, &qword_100E63730);
    v136(v98, v109);
    ((void (*)(char *, uint64_t))v135)(v95, v108);
    uint64_t v112 = v152;
    ((void (*)(char *, void, uint64_t))v133)(v76, v134, v152);
    static UnitManager.standard.getter();
    uint64_t v113 = v154;
    uint64_t v114 = v155;
    char v115 = v123;
    uint64_t v116 = Measurement.formatted<A>(_:placeholder:unitManager:)();
    uint64_t v118 = v117;
    swift_release();
    v144(v76, v112);
    v127(v111, v113);
    unint64_t v119 = v129;
    *(void *)(v63 + 176) = &type metadata for String;
    *(void *)(v63 + 184) = v119;
    *(void *)(v63 + 152) = v116;
    *(void *)(v63 + 160) = v118;
    uint64_t v55 = static String.localizedStringWithFormat(_:_:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    int v120 = *(void (**)(char *, uint64_t))(v125 + 8);
    v120(v115, v114);
    v120(v124, v114);
  }
  return v55;
}

uint64_t sub_100A8F860(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  uint64_t v4 = sub_100126010();
  v5(v4);
  return a2;
}

uint64_t sub_100A8F8B4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void *sub_100A8F8FC()
{
  if (*(unsigned char *)(v0 + 32))
  {
    id v2 = [self mainBundle];
    v17._uint64_t countAndFlagsBits = 0xD000000000000062;
    v17._object = (void *)0x8000000100CBD020;
    v3._object = (void *)0x8000000100CABE00;
    v3._uint64_t countAndFlagsBits = 0xD000000000000017;
    v4._uint64_t countAndFlagsBits = 0;
    v4._object = (void *)0xE000000000000000;
    Swift::String v5 = NSLocalizedString(_:tableName:bundle:value:comment:)(v3, (Swift::String_optional)0, (NSBundle)v2, v4, v17);

    sub_10012B78C();
    uint64_t v1 = v6;
    unint64_t v7 = v6[2];
    if (v7 >= v6[3] >> 1)
    {
      sub_10012B78C();
      uint64_t v1 = v14;
    }
    v1[2] = v7 + 1;
    *(Swift::String *)&v1[2 * v7 + 4] = v5;
  }
  else
  {
    uint64_t v1 = _swiftEmptyArrayStorage;
  }
  if (*(unsigned char *)(v0 + 34))
  {
    id v8 = [self mainBundle];
    v18._uint64_t countAndFlagsBits = 0xD000000000000059;
    v18._object = (void *)0x8000000100CBCFC0;
    v9._uint64_t countAndFlagsBits = 0x5720657265766553;
    v9._object = (void *)0xEE00726568746165;
    v10._uint64_t countAndFlagsBits = 0;
    v10._object = (void *)0xE000000000000000;
    Swift::String v11 = NSLocalizedString(_:tableName:bundle:value:comment:)(v9, (Swift::String_optional)0, (NSBundle)v8, v10, v18);

    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_10012B78C();
      uint64_t v1 = v15;
    }
    unint64_t v12 = v1[2];
    if (v12 >= v1[3] >> 1)
    {
      sub_10012B78C();
      uint64_t v1 = v16;
    }
    v1[2] = v12 + 1;
    *(Swift::String *)&v1[2 * v12 + 4] = v11;
  }
  return v1;
}

uint64_t sub_100A8FB18(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6E6F697461636F6CLL && a2 == 0xEA00000000004449;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x6E6F697461636F6CLL && a2 == 0xEC000000656D614ELL;
    if (v6 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0xD000000000000014 && a2 == 0x8000000100CBCF80 {
           || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    }
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else if (a1 == 0xD000000000000016 && a2 == 0x8000000100CBCFA0 {
           || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    }
    {
      swift_bridgeObjectRelease();
      return 3;
    }
    else
    {
      BOOL v7 = a1 == 0x6E45657265766573 && a2 == 0xED000064656C6261;
      if (v7 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 4;
      }
      else if (a1 == 0x7553657265766573 && a2 == 0xEF646574726F7070)
      {
        swift_bridgeObjectRelease();
        return 5;
      }
      else
      {
        char v9 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        if (v9) {
          return 5;
        }
        else {
          return 6;
        }
      }
    }
  }
}

unint64_t sub_100A8FDE0(char a1)
{
  unint64_t result = 0x6E6F697461636F6CLL;
  switch(a1)
  {
    case 2:
      unint64_t result = 0xD000000000000014;
      break;
    case 3:
      unint64_t result = 0xD000000000000016;
      break;
    case 4:
      unint64_t result = 0x6E45657265766573;
      break;
    case 5:
      unint64_t result = 0x7553657265766573;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_100A8FECC(uint64_t a1, uint64_t a2)
{
  BOOL v4 = *(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8);
  if (v4 || (char v5 = _stringCompareWithSmolCheck(_:_:expecting:)(), v6 = 0, (v5 & 1) != 0))
  {
    BOOL v7 = *(void *)(a1 + 16) == *(void *)(a2 + 16) && *(void *)(a1 + 24) == *(void *)(a2 + 24);
    if (v7 || (v8 = _stringCompareWithSmolCheck(_:_:expecting:)(), char v6 = 0, (v8 & 1) != 0))
    {
      if (((*(unsigned __int8 *)(a1 + 32) ^ *(unsigned __int8 *)(a2 + 32)) & 1) != 0
        || ((*(unsigned __int8 *)(a1 + 33) ^ *(unsigned __int8 *)(a2 + 33)) & 1) != 0
        || ((*(unsigned __int8 *)(a1 + 34) ^ *(unsigned __int8 *)(a2 + 34)) & 1) != 0)
      {
        char v6 = 0;
      }
      else
      {
        char v6 = ((*(unsigned char *)(a1 + 35) & 1) == 0) ^ *(unsigned char *)(a2 + 35);
      }
    }
  }
  return v6 & 1;
}

uint64_t sub_100A8FF8C(void *a1)
{
  uint64_t v3 = sub_10017DF08(&qword_100EADEB0);
  sub_100179C0C();
  uint64_t v5 = v4;
  __chkstk_darwin(v6);
  char v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1001B1E64(a1, a1[3]);
  sub_100A90590();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  v10[15] = 0;
  KeyedEncodingContainer.encode(_:forKey:)();
  if (!v1)
  {
    v10[14] = 1;
    KeyedEncodingContainer.encode(_:forKey:)();
    v10[13] = 2;
    sub_10019F408();
    v10[12] = 3;
    sub_10019F408();
    v10[11] = 4;
    sub_10019F408();
    v10[10] = 5;
    sub_10019F408();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 8))(v8, v3);
}

uint64_t sub_100A90134@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_10017DF08(&qword_100EADEA0);
  sub_100179C0C();
  __chkstk_darwin(v5);
  sub_1001B1E64(a1, a1[3]);
  sub_100A90590();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2) {
    return _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)a1);
  }
  uint64_t v6 = KeyedDecodingContainer.decode(_:forKey:)();
  uint64_t v8 = v7;
  swift_bridgeObjectRetain();
  uint64_t v17 = KeyedDecodingContainer.decode(_:forKey:)();
  uint64_t v18 = v6;
  uint64_t v10 = v9;
  swift_bridgeObjectRetain();
  uint64_t v19 = v10;
  char v16 = sub_10017DB78();
  LOBYTE(v10) = sub_10017DB78();
  char v15 = sub_10017DB78();
  char v11 = sub_10017DB78();
  uint64_t v12 = sub_10017AEE4();
  v13(v12);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)a1);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a2 = v18;
  *(void *)(a2 + 8) = v8;
  *(void *)(a2 + 16) = v17;
  *(void *)(a2 + 24) = v19;
  *(unsigned char *)(a2 + 32) = v16 & 1;
  *(unsigned char *)(a2 + 33) = v10 & 1;
  *(unsigned char *)(a2 + 34) = v15 & 1;
  *(unsigned char *)(a2 + 35) = v11 & 1;
  return result;
}

unint64_t sub_100A90400()
{
  return sub_100A8FDE0(*v0);
}

uint64_t sub_100A90408@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100A8FB18(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100A90430(uint64_t a1)
{
  unint64_t v2 = sub_100A90590();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100A9046C(uint64_t a1)
{
  unint64_t v2 = sub_100A90590();

  return CodingKey.debugDescription.getter(a1, v2);
}

double sub_100A904AC@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_100A90134(a1, (uint64_t)v6);
  if (!v2)
  {
    double result = *(double *)v6;
    long long v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    *(_DWORD *)(a2 + 32) = v7;
  }
  return result;
}

uint64_t sub_100A904F4(void *a1)
{
  return sub_100A8FF8C(a1);
}

double sub_100A9050C@<D0>(uint64_t a1@<X8>)
{
  sub_1008C2B3C((uint64_t)v5);
  if (!v1)
  {
    double result = *(double *)v5;
    long long v4 = v5[1];
    *(_OWORD *)a1 = v5[0];
    *(_OWORD *)(a1 + 16) = v4;
    *(_DWORD *)(a1 + 32) = v6;
  }
  return result;
}

uint64_t sub_100A90554()
{
  return sub_1008C2A78();
}

unint64_t sub_100A90590()
{
  unint64_t result = qword_100EADEA8;
  if (!qword_100EADEA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EADEA8);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for NotificationSettingsLocationViewModel.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100A906A8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NotificationSettingsLocationViewModel.CodingKeys()
{
  return &type metadata for NotificationSettingsLocationViewModel.CodingKeys;
}

ValueMetadata *type metadata accessor for NotificationSettingsLocationViewModel()
{
  return &type metadata for NotificationSettingsLocationViewModel;
}

unint64_t sub_100A906F4()
{
  unint64_t result = qword_100EADEB8;
  if (!qword_100EADEB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EADEB8);
  }
  return result;
}

unint64_t sub_100A90744()
{
  unint64_t result = qword_100EADEC0;
  if (!qword_100EADEC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EADEC0);
  }
  return result;
}

unint64_t sub_100A90794()
{
  unint64_t result = qword_100EADEC8;
  if (!qword_100EADEC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EADEC8);
  }
  return result;
}

uint64_t sub_100A907E0(uint64_t a1)
{
  uint64_t v2 = sub_10017DF08(&qword_100E663F0);
  uint64_t v3 = sub_100109308(v2);
  __chkstk_darwin(v3);
  sub_1001626E0();
  uint64_t v6 = v5 - v4;
  uint64_t v7 = sub_10017DF08(&qword_100E66418);
  uint64_t v8 = sub_100109308(v7);
  __chkstk_darwin(v8);
  sub_1001626E0();
  uint64_t v11 = v10 - v9;
  uint64_t v12 = sub_10017DF08(&qword_100E66420);
  uint64_t v13 = sub_100109308(v12);
  __chkstk_darwin(v13);
  sub_1001626E0();
  uint64_t v16 = v15 - v14;
  uint64_t v17 = sub_10017DF08(&qword_100E66428);
  uint64_t v18 = sub_100109308(v17);
  __chkstk_darwin(v18);
  sub_1001626E0();
  uint64_t v21 = v20 - v19;
  uint64_t v22 = sub_10017DF08(&qword_100E66430);
  uint64_t v23 = sub_100109308(v22);
  __chkstk_darwin(v23);
  sub_1001626E0();
  uint64_t v26 = v25 - v24;
  uint64_t v27 = sub_10017DF08(&qword_100E66438);
  uint64_t v28 = sub_100109308(v27);
  __chkstk_darwin(v28);
  sub_1001626E0();
  uint64_t v31 = v30 - v29;
  uint64_t v32 = sub_10017DF08(&qword_100E66440);
  uint64_t v33 = sub_100109308(v32);
  __chkstk_darwin(v33);
  sub_1001626E0();
  uint64_t v36 = v35 - v34;
  uint64_t v37 = type metadata accessor for AppConfigurationState();
  sub_100179C70(v36, v38, v39, v37);
  uint64_t v40 = type metadata accessor for EnvironmentState();
  sub_100179C70(v31, v41, v42, v40);
  uint64_t v43 = type metadata accessor for LocationsState();
  sub_100179C70(v26, v44, v45, v43);
  uint64_t v46 = type metadata accessor for NotificationsOptInState();
  sub_100179C70(v21, v47, v48, v46);
  uint64_t v49 = type metadata accessor for TimeState();
  uint64_t v52 = sub_100179C70(v16, v50, v51, v49);
  uint64_t v53 = type metadata accessor for ViewState(v52);
  uint64_t v56 = sub_100179C70(v11, v54, v55, v53);
  uint64_t v57 = type metadata accessor for ModalViewState(v56);
  swift_storeEnumTagMultiPayload();
  _s7Weather24LocationCompositionStateOwst_0(v6, 0, 1, v57);
  uint64_t v58 = sub_1001659F0(0, 3, v36, v31, v26, 0, 0, 0, 0, v21, v16, v11, v6, 0, 0, 0, 0, 0, 0, 0, a1);
  sub_1000F3400(v6, &qword_100E663F0);
  sub_1000F3400(v11, &qword_100E66418);
  sub_1000F3400(v16, &qword_100E66420);
  sub_1000F3400(v21, &qword_100E66428);
  sub_1000F3400(v26, &qword_100E66430);
  sub_1000F3400(v31, &qword_100E66438);
  sub_1000F3400(v36, &qword_100E66440);
  return v58;
}

uint64_t type metadata accessor for NhpMinorAlertContentView()
{
  return sub_100109098();
}

uint64_t sub_100A90B40()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100A90B84@<X0>(uint64_t a1@<X0>, __int16 a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v57 = a7;
  uint64_t v58 = a6;
  uint64_t v45 = a4;
  uint64_t v52 = a3;
  v70[3] = a5;
  int v9 = a2;
  unsigned int v10 = a2 & 0x100;
  v70[4] = a5;
  v70[5] = a5;
  v70[6] = a5;
  v70[7] = a5;
  sub_10017C794();
  uint64_t v50 = sub_10017F7C0();
  uint64_t v56 = type metadata accessor for Group();
  sub_100179C0C();
  uint64_t v53 = v11;
  __chkstk_darwin(v12);
  sub_100162EF8();
  uint64_t v55 = v13;
  __chkstk_darwin(v14);
  uint64_t v54 = (uint64_t)&v41 - v15;
  v70[0] = a5;
  v70[1] = a5;
  v70[2] = a5;
  v70[3] = type metadata accessor for Optional();
  v70[4] = a5;
  v70[5] = a5;
  v70[6] = a5;
  v70[7] = a5;
  sub_10017C794();
  sub_10017F7C0();
  uint64_t v51 = type metadata accessor for Group();
  sub_100179C0C();
  uint64_t v49 = v16;
  __chkstk_darwin(v17);
  sub_100162EF8();
  uint64_t v59 = v18;
  __chkstk_darwin(v19);
  uint64_t v60 = (uint64_t)&v41 - v20;
  if (v9)
  {
    if (v9 == 1)
    {
      if (v10)
      {
        uint64_t v21 = &qword_100E97750;
        goto LABEL_11;
      }
    }
    else if (v10)
    {
      uint64_t v21 = &qword_100E97B60;
      goto LABEL_11;
    }
    uint64_t v21 = &qword_100E97958;
    goto LABEL_11;
  }
  if (v10) {
    uint64_t v21 = &qword_100E97340;
  }
  else {
    uint64_t v21 = &qword_100E97548;
  }
LABEL_11:
  memcpy(v70, v21, sizeof(v70));
  uint64_t v22 = memcpy(v69, v70, sizeof(v69));
  __chkstk_darwin(v22);
  uint64_t v23 = v58;
  *(&v41 - 8) = a5;
  *(&v41 - 7) = v23;
  *(&v41 - 6) = a1;
  *((unsigned char *)&v41 - 40) = v9;
  uint64_t v44 = a1;
  int v42 = v9;
  unsigned int v43 = v10 >> 8;
  *((unsigned char *)&v41 - 39) = BYTE1(v10);
  uint64_t v24 = v45;
  *(&v41 - 4) = v52;
  *(&v41 - 3) = v24;
  *(&v41 - 2) = (uint64_t)v69;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v26 = v59;
  Group<A>.init(content:)();
  uint64_t v68 = WitnessTable;
  uint64_t v27 = v51;
  uint64_t v46 = swift_getWitnessTable();
  sub_100121584(v26, v27, v60);
  uint64_t v28 = v49;
  uint64_t v47 = *(uint64_t (**)(uint64_t, uint64_t))(v49 + 8);
  uint64_t v48 = v49 + 8;
  uint64_t v29 = v47(v26, v27);
  __chkstk_darwin(v29);
  uint64_t v30 = v58;
  *(&v41 - 8) = a5;
  *(&v41 - 7) = v30;
  *(&v41 - 6) = v44;
  *((unsigned char *)&v41 - 40) = v42;
  *((unsigned char *)&v41 - 39) = v43;
  *(&v41 - 4) = v31;
  *(&v41 - 3) = v24;
  *(&v41 - 2) = (uint64_t)v69;
  uint64_t v32 = swift_getWitnessTable();
  uint64_t v33 = v55;
  Group<A>.init(content:)();
  uint64_t v67 = v32;
  uint64_t v34 = v56;
  uint64_t v58 = swift_getWitnessTable();
  uint64_t v35 = v54;
  sub_100121584(v33, v34, v54);
  uint64_t v36 = v53;
  uint64_t v37 = *(void (**)(void))(v53 + 8);
  sub_10017C768();
  v37();
  uint64_t v38 = v59;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v28 + 16))(v59, v60, v27);
  uint64_t v65 = v38;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v36 + 16))(v33, v35, v34);
  uint64_t v66 = v33;
  uint64_t v63 = v27;
  uint64_t v64 = v34;
  uint64_t v61 = v46;
  uint64_t v62 = v58;
  sub_1006E9080();
  sub_10017C768();
  v37();
  uint64_t v39 = v47;
  v47(v60, v27);
  sub_10017C768();
  v37();
  return v39(v38, v27);
}

uint64_t sub_100A91044@<X0>(uint64_t a1@<X0>, void (*a2)(char *, void, void, void, void)@<X2>, void *a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X6>, uint64_t a6@<X8>)
{
  uint64_t v101 = a6;
  uint64_t v102 = a5;
  uint64_t v10 = sub_10017DF08(&qword_100E64E80);
  __chkstk_darwin(v10 - 8);
  uint64_t v99 = (uint64_t)&v94 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v120 = type metadata accessor for Optional();
  uint64_t v112 = *(void *)(v120 - 8);
  __chkstk_darwin(v120);
  unint64_t v119 = (char *)&v94 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v118 = (char *)&v94 - v14;
  uint64_t v98 = type metadata accessor for LocationComponentContainerViewModel();
  __chkstk_darwin(v98);
  uint64_t v95 = (uint64_t)&v94 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v94 - v17;
  uint64_t v105 = *(void *)(a4 - 8);
  __chkstk_darwin(v19);
  uint64_t v100 = (char *)&v94 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  unint64_t v111 = (char *)&v94 - v22;
  __chkstk_darwin(v23);
  uint64_t v110 = (char *)&v94 - v24;
  __chkstk_darwin(v25);
  uint64_t v108 = (char *)&v94 - v26;
  __chkstk_darwin(v27);
  uint64_t v109 = (char *)&v94 - v28;
  __chkstk_darwin(v29);
  uint64_t v106 = (char *)&v94 - v30;
  __chkstk_darwin(v31);
  unint64_t v107 = (char *)&v94 - v32;
  __chkstk_darwin(v33);
  uint64_t v104 = (char *)&v94 - v34;
  __chkstk_darwin(v35);
  uint64_t v114 = (char *)&v94 - v36;
  __chkstk_darwin(v37);
  uint64_t v122 = (char *)&v94 - v38;
  __chkstk_darwin(v39);
  uint64_t v116 = (char *)&v94 - v40;
  __chkstk_darwin(v41);
  char v115 = (char *)&v94 - v42;
  __chkstk_darwin(v43);
  uint64_t v45 = (char *)&v94 - v44;
  __chkstk_darwin(v46);
  uint64_t v48 = (char *)&v94 - v47;
  uint64_t v117 = a1;
  sub_1001F3734(a1 + OBJC_IVAR____TtCV7Weather20NhpMinorAlertContent8_Storage_nextHourPrecipitation, (uint64_t)v18);
  uint64_t v96 = a3;
  uint64_t v49 = a3[33];
  uint64_t v50 = a3[34];
  uint64_t v51 = a3[35];
  uint64_t v52 = a3[36];
  uint64_t v123 = a2;
  a2(v18, v49, v50, v51, v52);
  sub_1001F2B74((uint64_t)v18);
  uint64_t v103 = v48;
  sub_100121584((uint64_t)v45, a4, (uint64_t)v48);
  uint64_t v53 = v105 + 8;
  uint64_t v124 = *(void (**)(char *, uint64_t))(v105 + 8);
  v124(v45, a4);
  sub_1001F3734(a1 + OBJC_IVAR____TtCV7Weather20NhpMinorAlertContent8_Storage_severeAlert, (uint64_t)v18);
  uint64_t v54 = v96;
  a2(v18, v96[45], v96[46], v96[47], v96[48]);
  sub_1001F2B74((uint64_t)v18);
  uint64_t v55 = v54;
  sub_100121584((uint64_t)v45, a4, (uint64_t)v115);
  uint64_t v56 = v124;
  v124(v45, a4);
  uint64_t v57 = v117;
  sub_1001F3734(v117 + OBJC_IVAR____TtCV7Weather20NhpMinorAlertContent8_Storage_airQuality, (uint64_t)v18);
  v123(v18, *v55, v55[1], v55[2], v55[3]);
  uint64_t v97 = v18;
  sub_1001F2B74((uint64_t)v18);
  sub_100121584((uint64_t)v45, a4, (uint64_t)v116);
  uint64_t v121 = v45;
  uint64_t v113 = v53;
  v56(v45, a4);
  uint64_t v58 = v57 + OBJC_IVAR____TtCV7Weather20NhpMinorAlertContent8_Storage_map;
  swift_beginAccess();
  uint64_t v59 = v58;
  uint64_t v60 = v99;
  sub_10027A764(v59, v99);
  if (_s7Weather24LocationCompositionStateOwet_0(v60, 1, v98) == 1)
  {
    sub_10027A7CC(v60);
  }
  else
  {
    uint64_t v61 = v95;
    sub_10027A82C(v60, v95);
    sub_10027A890((uint64_t)(v55 + 24), (uint64_t)v150);
    sub_10027A890((uint64_t)v150, (uint64_t)v151);
    if (v152 != 1)
    {
      uint64_t v65 = (uint64_t)v122;
      v123((char *)v61, v151[0], v151[1], v151[2], v151[3]);
      sub_1001F2B74(v61);
      uint64_t v66 = (uint64_t)v121;
      sub_100121584(v65, a4, (uint64_t)v121);
      uint64_t v67 = (void (*)(uint64_t, uint64_t))v124;
      v124((char *)v65, a4);
      uint64_t v62 = (uint64_t)v119;
      sub_100121584(v66, a4, (uint64_t)v119);
      v67(v66, a4);
      uint64_t v63 = v62;
      uint64_t v64 = 0;
      goto LABEL_7;
    }
    sub_1001F2B74(v61);
  }
  uint64_t v62 = (uint64_t)v119;
  uint64_t v63 = (uint64_t)v119;
  uint64_t v64 = 1;
LABEL_7:
  _s7Weather24LocationCompositionStateOwst_0(v63, v64, 1, a4);
  sub_1000CA354();
  uint64_t v68 = *(void (**)(uint64_t, uint64_t))(v112 + 8);
  uint64_t v99 = (v112 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v68(v62, v120);
  uint64_t v69 = a4;
  uint64_t v70 = v117;
  uint64_t v71 = (uint64_t)v97;
  sub_1001F3734(*(void *)(v117 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_hourlyForecast, (uint64_t)v97);
  uint64_t v72 = (void (*)(uint64_t, void, void, void, void))v123;
  uint64_t v73 = (uint64_t)v122;
  v123((char *)v71, v55[16], v55[17], v55[18], v55[19]);
  sub_1001F2B74(v71);
  sub_100121584(v73, v69, (uint64_t)v121);
  v124((char *)v73, v69);
  sub_1001F3734(*(void *)(v70 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_dailyForecast, v71);
  uint64_t v74 = (uint64_t)v114;
  v72(v71, v55[8], v55[9], v55[10], v55[11]);
  sub_1001F2B74(v71);
  sub_100121584(v74, v69, v73);
  v124((char *)v74, v69);
  sub_1001F3734(*(void *)(v70 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_uvIndex, v71);
  uint64_t v75 = (uint64_t)v104;
  v72(v71, v55[53], v55[54], v55[55], v55[56]);
  sub_1001F2B74(v71);
  uint64_t v76 = v102;
  sub_100121584(v75, v69, v74);
  uint64_t v77 = v124;
  v124((char *)v75, v69);
  sub_1001F3734(*(void *)(v117 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_sunriseSunset, v71);
  uint64_t v78 = (uint64_t)v107;
  v123((char *)v71, v55[49], v55[50], v55[51], v55[52]);
  sub_1001F2B74(v71);
  sub_100121584(v78, v69, v75);
  uint64_t v79 = v77;
  v77((char *)v78, v69);
  uint64_t v80 = *(void (**)(uint64_t, char *, uint64_t))(v105 + 16);
  v80(v78, v103, v69);
  uint64_t v142 = v78;
  uint64_t v81 = v106;
  v80((uint64_t)v106, v115, v69);
  uint64_t v143 = v81;
  Swift::String v82 = v109;
  v80((uint64_t)v109, v116, v69);
  uint64_t v144 = v82;
  uint64_t v83 = v112 + 16;
  uint64_t v84 = (uint64_t)v119;
  (*(void (**)(char *, char *, uint64_t))(v112 + 16))(v119, v118, v120);
  uint64_t v145 = v84;
  uint64_t v85 = v108;
  v80((uint64_t)v108, v121, v69);
  uint64_t v146 = v85;
  Swift::String v86 = v110;
  v80((uint64_t)v110, v122, v69);
  uint64_t v147 = v86;
  Swift::String v87 = v111;
  v80((uint64_t)v111, v114, v69);
  uint64_t v148 = v87;
  uint64_t v88 = v100;
  uint64_t v89 = v104;
  v80((uint64_t)v100, v104, v69);
  uint64_t v149 = v88;
  uint64_t v90 = v88;
  uint64_t v134 = v69;
  uint64_t v135 = v69;
  uint64_t v91 = v120;
  uint64_t v136 = v69;
  uint64_t v137 = v120;
  uint64_t v138 = v69;
  uint64_t v139 = v69;
  uint64_t v140 = v69;
  uint64_t v141 = v69;
  uint64_t v126 = v76;
  uint64_t v127 = v76;
  uint64_t v128 = v76;
  uint64_t v125 = v76;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v130 = v76;
  uint64_t v131 = v76;
  uint64_t v132 = v76;
  uint64_t v133 = v76;
  sub_1006E9080();
  v79(v89, v69);
  v79(v114, v69);
  v79(v122, v69);
  v79(v121, v69);
  uint64_t v92 = *(void (**)(char *, uint64_t))(v83 - 8);
  v92(v118, v91);
  v79(v116, v69);
  v79(v115, v69);
  v79(v103, v69);
  v79(v90, v69);
  v79(v111, v69);
  v79(v110, v69);
  v79(v108, v69);
  v92(v119, v91);
  v79(v109, v69);
  v79(v106, v69);
  return ((uint64_t (*)(char *, uint64_t))v79)(v107, v69);
}

uint64_t sub_100A91BB4@<X0>(uint64_t a1@<X0>, void (*a2)(char *, void, void, void, void)@<X2>, void *a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X6>, uint64_t a6@<X8>)
{
  uint64_t v102 = a5;
  uint64_t v84 = a6;
  uint64_t v10 = type metadata accessor for LocationComponentContainerViewModel();
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v82 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v82 = *(void *)(a4 - 8);
  uint64_t v13 = v82;
  __chkstk_darwin(v14);
  uint64_t v83 = (char *)&v82 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v98 = (char *)&v82 - v17;
  __chkstk_darwin(v18);
  uint64_t v97 = (char *)&v82 - v19;
  __chkstk_darwin(v20);
  uint64_t v96 = (char *)&v82 - v21;
  __chkstk_darwin(v22);
  uint64_t v95 = (char *)&v82 - v23;
  __chkstk_darwin(v24);
  uint64_t v93 = (char *)&v82 - v25;
  __chkstk_darwin(v26);
  uint64_t v92 = (char *)&v82 - v27;
  __chkstk_darwin(v28);
  uint64_t v90 = (char *)&v82 - v29;
  __chkstk_darwin(v30);
  uint64_t v89 = (char *)&v82 - v31;
  __chkstk_darwin(v32);
  uint64_t v101 = (char *)&v82 - v33;
  __chkstk_darwin(v34);
  Swift::String v87 = (char *)&v82 - v35;
  __chkstk_darwin(v36);
  Swift::String v86 = (char *)&v82 - v37;
  __chkstk_darwin(v38);
  uint64_t v100 = (char *)&v82 - v39;
  __chkstk_darwin(v40);
  uint64_t v42 = (char *)&v82 - v41;
  __chkstk_darwin(v43);
  uint64_t v45 = (char *)&v82 - v44;
  __chkstk_darwin(v46);
  uint64_t v48 = (char *)&v82 - v47;
  uint64_t v94 = (char *)&v82 - v47;
  sub_1001F3734(*(void *)(a1 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_wind, (uint64_t)v12);
  uint64_t v49 = a3[61];
  uint64_t v50 = a3[62];
  uint64_t v51 = a3[63];
  uint64_t v52 = a3[64];
  uint64_t v99 = a2;
  a2(v12, v49, v50, v51, v52);
  sub_1001F2B74((uint64_t)v12);
  sub_100121584((uint64_t)v45, a4, (uint64_t)v48);
  uint64_t v53 = *(void (**)(char *, uint64_t))(v13 + 8);
  uint64_t v91 = v45;
  v53(v45, a4);
  sub_1001F3734(*(void *)(a1 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_precipitationTotal, (uint64_t)v12);
  a2(v12, a3[41], a3[42], a3[43], a3[44]);
  sub_1001F2B74((uint64_t)v12);
  sub_100121584((uint64_t)v42, a4, (uint64_t)v45);
  uint64_t v88 = v42;
  v53(v42, a4);
  uint64_t v85 = a1;
  sub_1001F3734(*(void *)(a1 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_feelsLike, (uint64_t)v12);
  uint64_t v54 = (uint64_t)v100;
  v99(v12, a3[12], a3[13], a3[14], a3[15]);
  sub_1001F2B74((uint64_t)v12);
  sub_100121584(v54, a4, (uint64_t)v42);
  uint64_t v55 = v54;
  v53((char *)v54, a4);
  sub_1001F3734(*(void *)(a1 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_humidity, (uint64_t)v12);
  uint64_t v56 = (uint64_t)v86;
  uint64_t v57 = v99;
  v99(v12, a3[20], a3[21], a3[22], a3[23]);
  sub_1001F2B74((uint64_t)v12);
  sub_100121584(v56, a4, v55);
  v53((char *)v56, a4);
  sub_1001F3734(*(void *)(v85 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_visibility, (uint64_t)v12);
  uint64_t v58 = (uint64_t)v87;
  v57(v12, a3[57], a3[58], a3[59], a3[60]);
  sub_1001F2B74((uint64_t)v12);
  uint64_t v59 = v58;
  sub_100121584(v58, a4, v56);
  v53((char *)v58, a4);
  uint64_t v60 = v85;
  sub_1001F3734(*(void *)(v85 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_pressure, (uint64_t)v12);
  uint64_t v61 = (uint64_t)v101;
  uint64_t v62 = v99;
  v99(v12, a3[37], a3[38], a3[39], a3[40]);
  sub_1001F2B74((uint64_t)v12);
  sub_100121584(v61, a4, v59);
  v53((char *)v61, a4);
  sub_1001F3734(*(void *)(v60 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_moon, (uint64_t)v12);
  uint64_t v63 = (uint64_t)v89;
  v62(v12, a3[29], a3[30], a3[31], a3[32]);
  sub_1001F2B74((uint64_t)v12);
  sub_100121584(v63, a4, (uint64_t)v101);
  v53((char *)v63, a4);
  sub_1001F3734(*(void *)(v60 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_averages, (uint64_t)v12);
  uint64_t v64 = a3[4];
  uint64_t v65 = a3[5];
  uint64_t v66 = a3[6];
  uint64_t v67 = a3[7];
  uint64_t v68 = (uint64_t)v90;
  v62(v12, v64, v65, v66, v67);
  sub_1001F2B74((uint64_t)v12);
  sub_100121584(v68, a4, v63);
  v53((char *)v68, a4);
  uint64_t v69 = *(void (**)(uint64_t, char *, uint64_t))(v82 + 16);
  v69(v68, v94, a4);
  uint64_t v119 = v68;
  uint64_t v70 = v92;
  v69((uint64_t)v92, v91, a4);
  uint64_t v120 = v70;
  uint64_t v71 = v93;
  v69((uint64_t)v93, v88, a4);
  uint64_t v121 = v71;
  uint64_t v72 = v95;
  v69((uint64_t)v95, v100, a4);
  uint64_t v122 = v72;
  uint64_t v73 = v96;
  uint64_t v74 = v86;
  v69((uint64_t)v96, v86, a4);
  uint64_t v123 = v73;
  uint64_t v75 = v97;
  uint64_t v76 = v87;
  v69((uint64_t)v97, v87, a4);
  uint64_t v124 = v75;
  uint64_t v77 = v98;
  uint64_t v78 = (uint64_t)v101;
  v69((uint64_t)v98, v101, a4);
  uint64_t v125 = v77;
  uint64_t v79 = v83;
  uint64_t v80 = v89;
  v69((uint64_t)v83, v89, a4);
  uint64_t v126 = v79;
  uint64_t v111 = a4;
  uint64_t v112 = a4;
  uint64_t v113 = a4;
  uint64_t v114 = a4;
  uint64_t v115 = a4;
  uint64_t v116 = a4;
  uint64_t v117 = a4;
  uint64_t v118 = a4;
  uint64_t v103 = v102;
  uint64_t v104 = v102;
  uint64_t v105 = v102;
  uint64_t v106 = v102;
  uint64_t v107 = v102;
  uint64_t v108 = v102;
  uint64_t v109 = v102;
  uint64_t v110 = v102;
  sub_1006E9080();
  v53(v80, a4);
  v53((char *)v78, a4);
  v53(v76, a4);
  v53(v74, a4);
  v53(v100, a4);
  v53(v88, a4);
  v53(v91, a4);
  v53(v94, a4);
  v53(v79, a4);
  v53(v98, a4);
  v53(v97, a4);
  v53(v96, a4);
  v53(v95, a4);
  v53(v93, a4);
  v53(v92, a4);
  return ((uint64_t (*)(char *, uint64_t))v53)(v90, a4);
}

uint64_t sub_100A925FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if (*(unsigned char *)(v2 + 9)) {
    __int16 v3 = 256;
  }
  else {
    __int16 v3 = 0;
  }
  return sub_100A90B84(*(void *)v2, v3 | *(unsigned __int8 *)(v2 + 8), *(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(a1 + 16), *(void *)(a1 + 24), a2);
}

uint64_t sub_100A92628()
{
  return sub_100A92658((uint64_t (*)(void, void, void, void, void, void, void))sub_100A91044);
}

uint64_t sub_100A92640()
{
  return sub_100A92658((uint64_t (*)(void, void, void, void, void, void, void))sub_100A91BB4);
}

uint64_t sub_100A92658(uint64_t (*a1)(void, void, void, void, void, void, void))
{
  if (*(unsigned char *)(v1 + 41)) {
    int v2 = 256;
  }
  else {
    int v2 = 0;
  }
  return a1(*(void *)(v1 + 32), v2 | *(unsigned __int8 *)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56), *(void *)(v1 + 64), *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_100A9268C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10017DF08(&qword_100EADFF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for SevereContentView()
{
  return sub_100109098();
}

uint64_t sub_100A92710()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100A92754@<X0>(uint64_t a1@<X0>, __int16 a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v57 = a7;
  uint64_t v58 = a6;
  uint64_t v45 = a4;
  uint64_t v52 = a3;
  v70[2] = a5;
  v70[3] = a5;
  int v9 = a2;
  unsigned int v10 = a2 & 0x100;
  v70[4] = a5;
  v70[5] = a5;
  v70[6] = a5;
  v70[7] = a5;
  sub_100179D2C();
  uint64_t v50 = sub_10017F7C0();
  uint64_t v56 = type metadata accessor for Group();
  sub_100179C0C();
  uint64_t v53 = v11;
  __chkstk_darwin(v12);
  sub_100162EF8();
  uint64_t v55 = v13;
  __chkstk_darwin(v14);
  uint64_t v54 = (uint64_t)&v41 - v15;
  v70[0] = a5;
  v70[1] = a5;
  v70[2] = type metadata accessor for Optional();
  v70[3] = a5;
  v70[4] = a5;
  v70[5] = a5;
  v70[6] = a5;
  sub_100179D2C();
  sub_10017F7C0();
  uint64_t v51 = type metadata accessor for Group();
  sub_100179C0C();
  uint64_t v49 = v16;
  __chkstk_darwin(v17);
  sub_100162EF8();
  uint64_t v59 = v18;
  __chkstk_darwin(v19);
  uint64_t v60 = (uint64_t)&v41 - v20;
  if (v9)
  {
    if (v9 == 1)
    {
      if (v10)
      {
        uint64_t v21 = &qword_100E78678;
        goto LABEL_11;
      }
    }
    else if (v10)
    {
      uint64_t v21 = &qword_100E78A48;
      goto LABEL_11;
    }
    uint64_t v21 = &qword_100E78860;
    goto LABEL_11;
  }
  if (v10) {
    uint64_t v21 = &qword_100E782A8;
  }
  else {
    uint64_t v21 = &qword_100E78490;
  }
LABEL_11:
  memcpy(v70, v21, sizeof(v70));
  uint64_t v22 = memcpy(v69, v70, sizeof(v69));
  __chkstk_darwin(v22);
  uint64_t v23 = v58;
  *(&v41 - 8) = a5;
  *(&v41 - 7) = v23;
  *(&v41 - 6) = a1;
  *((unsigned char *)&v41 - 40) = v9;
  uint64_t v44 = a1;
  int v42 = v9;
  unsigned int v43 = v10 >> 8;
  *((unsigned char *)&v41 - 39) = BYTE1(v10);
  uint64_t v24 = v45;
  *(&v41 - 4) = v52;
  *(&v41 - 3) = v24;
  *(&v41 - 2) = (uint64_t)v69;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v26 = v59;
  Group<A>.init(content:)();
  uint64_t v68 = WitnessTable;
  uint64_t v27 = v51;
  uint64_t v46 = swift_getWitnessTable();
  sub_100121584(v26, v27, v60);
  uint64_t v28 = v49;
  uint64_t v47 = *(uint64_t (**)(uint64_t, uint64_t))(v49 + 8);
  uint64_t v48 = v49 + 8;
  uint64_t v29 = v47(v26, v27);
  __chkstk_darwin(v29);
  uint64_t v30 = v58;
  *(&v41 - 8) = a5;
  *(&v41 - 7) = v30;
  *(&v41 - 6) = v44;
  *((unsigned char *)&v41 - 40) = v42;
  *((unsigned char *)&v41 - 39) = v43;
  *(&v41 - 4) = v31;
  *(&v41 - 3) = v24;
  *(&v41 - 2) = (uint64_t)v69;
  uint64_t v32 = swift_getWitnessTable();
  uint64_t v33 = v55;
  Group<A>.init(content:)();
  uint64_t v67 = v32;
  uint64_t v34 = v56;
  uint64_t v58 = swift_getWitnessTable();
  uint64_t v35 = v54;
  sub_100121584(v33, v34, v54);
  uint64_t v36 = v53;
  uint64_t v37 = *(void (**)(void))(v53 + 8);
  sub_10017C768();
  v37();
  uint64_t v38 = v59;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v28 + 16))(v59, v60, v27);
  uint64_t v65 = v38;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v36 + 16))(v33, v35, v34);
  uint64_t v66 = v33;
  uint64_t v63 = v27;
  uint64_t v64 = v34;
  uint64_t v61 = v46;
  uint64_t v62 = v58;
  sub_1006E9080();
  sub_10017C768();
  v37();
  uint64_t v39 = v47;
  v47(v60, v27);
  sub_10017C768();
  v37();
  return v39(v38, v27);
}

uint64_t sub_100A92C20@<X0>(uint64_t a1@<X0>, void (*a2)(char *, void, void, void, void)@<X2>, void *a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X6>, uint64_t a6@<X8>)
{
  uint64_t v103 = a5;
  uint64_t v104 = a2;
  uint64_t v85 = a6;
  uint64_t v9 = sub_10017DF08(&qword_100E64E80);
  __chkstk_darwin(v9 - 8);
  uint64_t v82 = (uint64_t)&v79 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v99 = type metadata accessor for Optional();
  uint64_t v93 = *(void *)(v99 - 8);
  __chkstk_darwin(v99);
  uint64_t v98 = (char *)&v79 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v97 = (char *)&v79 - v13;
  uint64_t v81 = type metadata accessor for LocationComponentContainerViewModel();
  __chkstk_darwin(v81);
  uint64_t v80 = (uint64_t)&v79 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v79 - v16;
  uint64_t v18 = *(void *)(a4 - 8);
  __chkstk_darwin(v19);
  uint64_t v84 = (char *)&v79 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  uint64_t v92 = (char *)&v79 - v22;
  __chkstk_darwin(v23);
  uint64_t v91 = (char *)&v79 - v24;
  __chkstk_darwin(v25);
  uint64_t v90 = (char *)&v79 - v26;
  __chkstk_darwin(v27);
  uint64_t v89 = (char *)&v79 - v28;
  __chkstk_darwin(v29);
  uint64_t v88 = (char *)&v79 - v30;
  __chkstk_darwin(v31);
  Swift::String v87 = (char *)&v79 - v32;
  __chkstk_darwin(v33);
  uint64_t v94 = (char *)&v79 - v34;
  __chkstk_darwin(v35);
  uint64_t v102 = (char *)&v79 - v36;
  __chkstk_darwin(v37);
  uint64_t v95 = (char *)&v79 - v38;
  __chkstk_darwin(v39);
  uint64_t v41 = (char *)&v79 - v40;
  __chkstk_darwin(v42);
  uint64_t v44 = (char *)&v79 - v43;
  sub_1001F3734(a1 + OBJC_IVAR____TtCV7Weather13SevereContent8_Storage_severeAlert, (uint64_t)v17);
  v104(v17, a3[41], a3[42], a3[43], a3[44]);
  sub_1001F2B74((uint64_t)v17);
  Swift::String v86 = v44;
  sub_100121584((uint64_t)v41, a4, (uint64_t)v44);
  uint64_t v83 = v18;
  uint64_t v45 = *(void (**)(char *, uint64_t))(v18 + 8);
  v45(v41, a4);
  sub_1001F3734(a1 + OBJC_IVAR____TtCV7Weather13SevereContent8_Storage_airQuality, (uint64_t)v17);
  v104(v17, *a3, a3[1], a3[2], a3[3]);
  sub_1001F2B74((uint64_t)v17);
  sub_100121584((uint64_t)v41, a4, (uint64_t)v95);
  uint64_t v100 = (void (*)(uint64_t, uint64_t))v45;
  uint64_t v101 = v41;
  v45(v41, a4);
  uint64_t v96 = a1;
  uint64_t v46 = a1 + OBJC_IVAR____TtCV7Weather13SevereContent8_Storage_map;
  swift_beginAccess();
  uint64_t v47 = v46;
  uint64_t v48 = v82;
  sub_10027A764(v47, v82);
  if (_s7Weather24LocationCompositionStateOwet_0(v48, 1, v81) == 1)
  {
    sub_10027A7CC(v48);
  }
  else
  {
    uint64_t v49 = v80;
    sub_10027A82C(v48, v80);
    sub_10027A890((uint64_t)(a3 + 24), (uint64_t)v127);
    sub_10027A890((uint64_t)v127, (uint64_t)v128);
    if (v129 != 1)
    {
      uint64_t v51 = (uint64_t)v102;
      v104((char *)v49, v128[0], v128[1], v128[2], v128[3]);
      sub_1001F2B74(v49);
      uint64_t v52 = (uint64_t)v101;
      sub_100121584(v51, a4, (uint64_t)v101);
      uint64_t v53 = v100;
      v100(v51, a4);
      uint64_t v50 = (uint64_t)v98;
      sub_100121584(v52, a4, (uint64_t)v98);
      v53(v52, a4);
      _s7Weather24LocationCompositionStateOwst_0(v50, 0, 1, a4);
      goto LABEL_7;
    }
    sub_1001F2B74(v49);
  }
  uint64_t v50 = (uint64_t)v98;
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v98, 1, 1, a4);
LABEL_7:
  sub_1000CA354();
  uint64_t v54 = *(void (**)(uint64_t, uint64_t))(v93 + 8);
  uint64_t v82 = (v93 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v54(v50, v99);
  sub_1001F3734(*(void *)(v96 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_hourlyForecast, (uint64_t)v17);
  uint64_t v55 = (uint64_t)v102;
  uint64_t v56 = v104;
  v104(v17, a3[16], a3[17], a3[18], a3[19]);
  sub_1001F2B74((uint64_t)v17);
  sub_100121584(v55, a4, (uint64_t)v101);
  v100(v55, a4);
  uint64_t v57 = v96;
  sub_1001F3734(*(void *)(v96 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_dailyForecast, (uint64_t)v17);
  uint64_t v58 = (uint64_t)v94;
  v56(v17, a3[8], a3[9], a3[10], a3[11]);
  sub_1001F2B74((uint64_t)v17);
  sub_100121584(v58, a4, v55);
  v100(v58, a4);
  sub_1001F3734(*(void *)(v57 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_uvIndex, (uint64_t)v17);
  uint64_t v59 = (uint64_t)v87;
  uint64_t v60 = v104;
  v104(v17, a3[49], a3[50], a3[51], a3[52]);
  sub_1001F2B74((uint64_t)v17);
  sub_100121584(v59, a4, v58);
  uint64_t v61 = (void (*)(char *, uint64_t))v100;
  v100(v59, a4);
  sub_1001F3734(*(void *)(v96 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_sunriseSunset, (uint64_t)v17);
  uint64_t v62 = (uint64_t)v88;
  v60(v17, a3[45], a3[46], a3[47], a3[48]);
  sub_1001F2B74((uint64_t)v17);
  uint64_t v63 = v103;
  sub_100121584(v62, a4, v59);
  uint64_t v64 = v61;
  v61((char *)v62, a4);
  uint64_t v65 = *(void (**)(uint64_t, char *, uint64_t))(v83 + 16);
  v65(v62, v86, a4);
  uint64_t v120 = v62;
  uint64_t v66 = v89;
  v65((uint64_t)v89, v95, a4);
  uint64_t v121 = v66;
  uint64_t v67 = v93 + 16;
  uint64_t v68 = (uint64_t)v98;
  (*(void (**)(char *, char *, uint64_t))(v93 + 16))(v98, v97, v99);
  uint64_t v122 = v68;
  uint64_t v69 = v90;
  v65((uint64_t)v90, v101, a4);
  uint64_t v123 = v69;
  uint64_t v70 = v63;
  uint64_t v71 = v91;
  v65((uint64_t)v91, v102, a4);
  uint64_t v124 = v71;
  uint64_t v72 = v92;
  v65((uint64_t)v92, v94, a4);
  uint64_t v125 = v72;
  uint64_t v73 = v84;
  uint64_t v74 = v87;
  v65((uint64_t)v84, v87, a4);
  uint64_t v126 = v73;
  uint64_t v75 = v73;
  uint64_t v113 = a4;
  uint64_t v114 = a4;
  uint64_t v76 = v99;
  uint64_t v115 = v99;
  uint64_t v116 = a4;
  uint64_t v117 = a4;
  uint64_t v118 = a4;
  uint64_t v119 = a4;
  uint64_t v106 = v70;
  uint64_t v107 = v70;
  uint64_t v105 = v70;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v109 = v70;
  uint64_t v110 = v70;
  uint64_t v111 = v70;
  uint64_t v112 = v70;
  sub_1006E9080();
  v64(v74, a4);
  v64(v94, a4);
  v64(v102, a4);
  v64(v101, a4);
  uint64_t v77 = *(void (**)(char *, uint64_t))(v67 - 8);
  v77(v97, v76);
  v64(v95, a4);
  v64(v86, a4);
  v64(v75, a4);
  v64(v92, a4);
  v64(v91, a4);
  v64(v90, a4);
  v77(v98, v76);
  v64(v89, a4);
  return ((uint64_t (*)(char *, uint64_t))v64)(v88, a4);
}

uint64_t sub_100A9368C@<X0>(uint64_t a1@<X0>, void (*a2)(char *, void, void, void, void)@<X2>, void *a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X6>, uint64_t a6@<X8>)
{
  uint64_t v102 = a5;
  uint64_t v84 = a6;
  uint64_t v10 = type metadata accessor for LocationComponentContainerViewModel();
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v82 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v82 = *(void *)(a4 - 8);
  uint64_t v13 = v82;
  __chkstk_darwin(v14);
  uint64_t v83 = (char *)&v82 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v98 = (char *)&v82 - v17;
  __chkstk_darwin(v18);
  uint64_t v97 = (char *)&v82 - v19;
  __chkstk_darwin(v20);
  uint64_t v96 = (char *)&v82 - v21;
  __chkstk_darwin(v22);
  uint64_t v95 = (char *)&v82 - v23;
  __chkstk_darwin(v24);
  uint64_t v93 = (char *)&v82 - v25;
  __chkstk_darwin(v26);
  uint64_t v92 = (char *)&v82 - v27;
  __chkstk_darwin(v28);
  uint64_t v90 = (char *)&v82 - v29;
  __chkstk_darwin(v30);
  uint64_t v89 = (char *)&v82 - v31;
  __chkstk_darwin(v32);
  uint64_t v101 = (char *)&v82 - v33;
  __chkstk_darwin(v34);
  Swift::String v87 = (char *)&v82 - v35;
  __chkstk_darwin(v36);
  Swift::String v86 = (char *)&v82 - v37;
  __chkstk_darwin(v38);
  uint64_t v100 = (char *)&v82 - v39;
  __chkstk_darwin(v40);
  uint64_t v42 = (char *)&v82 - v41;
  __chkstk_darwin(v43);
  uint64_t v45 = (char *)&v82 - v44;
  __chkstk_darwin(v46);
  uint64_t v48 = (char *)&v82 - v47;
  uint64_t v94 = (char *)&v82 - v47;
  sub_1001F3734(*(void *)(a1 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_wind, (uint64_t)v12);
  uint64_t v49 = a3[57];
  uint64_t v50 = a3[58];
  uint64_t v51 = a3[59];
  uint64_t v52 = a3[60];
  uint64_t v99 = a2;
  a2(v12, v49, v50, v51, v52);
  sub_1001F2B74((uint64_t)v12);
  sub_100121584((uint64_t)v45, a4, (uint64_t)v48);
  uint64_t v53 = *(void (**)(char *, uint64_t))(v13 + 8);
  uint64_t v91 = v45;
  v53(v45, a4);
  sub_1001F3734(*(void *)(a1 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_precipitationTotal, (uint64_t)v12);
  a2(v12, a3[37], a3[38], a3[39], a3[40]);
  sub_1001F2B74((uint64_t)v12);
  sub_100121584((uint64_t)v42, a4, (uint64_t)v45);
  uint64_t v88 = v42;
  v53(v42, a4);
  uint64_t v85 = a1;
  sub_1001F3734(*(void *)(a1 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_feelsLike, (uint64_t)v12);
  uint64_t v54 = (uint64_t)v100;
  v99(v12, a3[12], a3[13], a3[14], a3[15]);
  sub_1001F2B74((uint64_t)v12);
  sub_100121584(v54, a4, (uint64_t)v42);
  uint64_t v55 = v54;
  v53((char *)v54, a4);
  sub_1001F3734(*(void *)(a1 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_humidity, (uint64_t)v12);
  uint64_t v56 = (uint64_t)v86;
  uint64_t v57 = v99;
  v99(v12, a3[20], a3[21], a3[22], a3[23]);
  sub_1001F2B74((uint64_t)v12);
  sub_100121584(v56, a4, v55);
  v53((char *)v56, a4);
  sub_1001F3734(*(void *)(v85 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_visibility, (uint64_t)v12);
  uint64_t v58 = (uint64_t)v87;
  v57(v12, a3[53], a3[54], a3[55], a3[56]);
  sub_1001F2B74((uint64_t)v12);
  uint64_t v59 = v58;
  sub_100121584(v58, a4, v56);
  v53((char *)v58, a4);
  uint64_t v60 = v85;
  sub_1001F3734(*(void *)(v85 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_pressure, (uint64_t)v12);
  uint64_t v61 = (uint64_t)v101;
  uint64_t v62 = v99;
  v99(v12, a3[33], a3[34], a3[35], a3[36]);
  sub_1001F2B74((uint64_t)v12);
  sub_100121584(v61, a4, v59);
  v53((char *)v61, a4);
  sub_1001F3734(*(void *)(v60 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_moon, (uint64_t)v12);
  uint64_t v63 = (uint64_t)v89;
  v62(v12, a3[29], a3[30], a3[31], a3[32]);
  sub_1001F2B74((uint64_t)v12);
  sub_100121584(v63, a4, (uint64_t)v101);
  v53((char *)v63, a4);
  sub_1001F3734(*(void *)(v60 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_averages, (uint64_t)v12);
  uint64_t v64 = a3[4];
  uint64_t v65 = a3[5];
  uint64_t v66 = a3[6];
  uint64_t v67 = a3[7];
  uint64_t v68 = (uint64_t)v90;
  v62(v12, v64, v65, v66, v67);
  sub_1001F2B74((uint64_t)v12);
  sub_100121584(v68, a4, v63);
  v53((char *)v68, a4);
  uint64_t v69 = *(void (**)(uint64_t, char *, uint64_t))(v82 + 16);
  v69(v68, v94, a4);
  uint64_t v119 = v68;
  uint64_t v70 = v92;
  v69((uint64_t)v92, v91, a4);
  uint64_t v120 = v70;
  uint64_t v71 = v93;
  v69((uint64_t)v93, v88, a4);
  uint64_t v121 = v71;
  uint64_t v72 = v95;
  v69((uint64_t)v95, v100, a4);
  uint64_t v122 = v72;
  uint64_t v73 = v96;
  uint64_t v74 = v86;
  v69((uint64_t)v96, v86, a4);
  uint64_t v123 = v73;
  uint64_t v75 = v97;
  uint64_t v76 = v87;
  v69((uint64_t)v97, v87, a4);
  uint64_t v124 = v75;
  uint64_t v77 = v98;
  uint64_t v78 = (uint64_t)v101;
  v69((uint64_t)v98, v101, a4);
  uint64_t v125 = v77;
  uint64_t v79 = v83;
  uint64_t v80 = v89;
  v69((uint64_t)v83, v89, a4);
  uint64_t v126 = v79;
  uint64_t v111 = a4;
  uint64_t v112 = a4;
  uint64_t v113 = a4;
  uint64_t v114 = a4;
  uint64_t v115 = a4;
  uint64_t v116 = a4;
  uint64_t v117 = a4;
  uint64_t v118 = a4;
  uint64_t v103 = v102;
  uint64_t v104 = v102;
  uint64_t v105 = v102;
  uint64_t v106 = v102;
  uint64_t v107 = v102;
  uint64_t v108 = v102;
  uint64_t v109 = v102;
  uint64_t v110 = v102;
  sub_1006E9080();
  v53(v80, a4);
  v53((char *)v78, a4);
  v53(v76, a4);
  v53(v74, a4);
  v53(v100, a4);
  v53(v88, a4);
  v53(v91, a4);
  v53(v94, a4);
  v53(v79, a4);
  v53(v98, a4);
  v53(v97, a4);
  v53(v96, a4);
  v53(v95, a4);
  v53(v93, a4);
  v53(v92, a4);
  return ((uint64_t (*)(char *, uint64_t))v53)(v90, a4);
}

uint64_t sub_100A940D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if (*(unsigned char *)(v2 + 9)) {
    __int16 v3 = 256;
  }
  else {
    __int16 v3 = 0;
  }
  return sub_100A92754(*(void *)v2, v3 | *(unsigned __int8 *)(v2 + 8), *(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(a1 + 16), *(void *)(a1 + 24), a2);
}

uint64_t sub_100A94100()
{
  return sub_100A94130((uint64_t (*)(void, void, void, void, void, void, void))sub_100A92C20);
}

uint64_t sub_100A94118()
{
  return sub_100A94130((uint64_t (*)(void, void, void, void, void, void, void))sub_100A9368C);
}

uint64_t sub_100A94130(uint64_t (*a1)(void, void, void, void, void, void, void))
{
  if (*(unsigned char *)(v1 + 41)) {
    int v2 = 256;
  }
  else {
    int v2 = 0;
  }
  return a1(*(void *)(v1 + 32), v2 | *(unsigned __int8 *)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56), *(void *)(v1 + 64), *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_100A94164(uint64_t a1)
{
  uint64_t v2 = sub_10017DF08(&qword_100E64A60);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10021680C(a1, (uint64_t)v4);
  return sub_1000403F8((uint64_t)v4);
}

uint64_t sub_100A941F4()
{
  return type metadata accessor for WeatherConditionBackgroundModifierObservableModel();
}

uint64_t sub_100A941FC@<X0>(uint64_t a1@<X8>)
{
  return sub_10001F54C(a1);
}

uint64_t initializeWithCopy for ComparisonDetailComponentView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 24);
  if (v4)
  {
    uint64_t v5 = *(void *)a2;
    uint64_t v6 = *(void *)(a2 + 8);
    char v7 = *(unsigned char *)(a2 + 16);
    sub_100190CC4(*(void *)a2, v6, v7);
    *(void *)a1 = v5;
    *(void *)(a1 + 8) = v6;
    *(unsigned char *)(a1 + 16) = v7;
    *(void *)(a1 + 24) = v4;
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v8 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v8;
  }
  uint64_t v9 = *(void *)(a2 + 32);
  uint64_t v10 = *(void *)(a2 + 40);
  uint64_t v11 = *(void *)(a2 + 48);
  uint64_t v12 = *(void *)(a2 + 56);
  uint64_t v13 = *(void *)(a2 + 64);
  uint64_t v14 = *(void *)(a2 + 72);
  uint64_t v15 = *(void *)(a2 + 80);
  char v19 = *(unsigned char *)(a2 + 89);
  unsigned __int8 v16 = *(unsigned char *)(a2 + 88);
  sub_10033A9E8(v9, v10, v11, v12, v13, v14, v15, v16, v19);
  *(void *)(a1 + 32) = v9;
  *(void *)(a1 + 40) = v10;
  *(void *)(a1 + 48) = v11;
  *(void *)(a1 + 56) = v12;
  *(void *)(a1 + 64) = v13;
  *(void *)(a1 + 72) = v14;
  *(void *)(a1 + 80) = v15;
  *(unsigned char *)(a1 + 88) = v16;
  *(unsigned char *)(a1 + 89) = v19;
  long long v17 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v17;
  return a1;
}

uint64_t assignWithCopy for ComparisonDetailComponentView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 24);
  if (*(void *)(a1 + 24))
  {
    if (v4)
    {
      uint64_t v5 = *(void *)a2;
      uint64_t v6 = *(void *)(a2 + 8);
      char v7 = *(unsigned char *)(a2 + 16);
      sub_100190CC4(*(void *)a2, v6, v7);
      uint64_t v8 = *(void *)a1;
      uint64_t v9 = *(void *)(a1 + 8);
      char v10 = *(unsigned char *)(a1 + 16);
      *(void *)a1 = v5;
      *(void *)(a1 + 8) = v6;
      *(unsigned char *)(a1 + 16) = v7;
      sub_100191924(v8, v9, v10);
      *(void *)(a1 + 24) = *(void *)(a2 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_10024ADC8(a1);
      long long v14 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v14;
    }
  }
  else if (v4)
  {
    uint64_t v11 = *(void *)a2;
    uint64_t v12 = *(void *)(a2 + 8);
    char v13 = *(unsigned char *)(a2 + 16);
    sub_100190CC4(*(void *)a2, v12, v13);
    *(void *)a1 = v11;
    *(void *)(a1 + 8) = v12;
    *(unsigned char *)(a1 + 16) = v13;
    *(void *)(a1 + 24) = *(void *)(a2 + 24);
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v15 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v15;
  }
  uint64_t v16 = *(void *)(a2 + 32);
  uint64_t v17 = *(void *)(a2 + 40);
  uint64_t v18 = *(void *)(a2 + 48);
  uint64_t v19 = *(void *)(a2 + 56);
  uint64_t v20 = *(void *)(a2 + 64);
  uint64_t v21 = *(void *)(a2 + 72);
  uint64_t v22 = *(void *)(a2 + 80);
  char v34 = *(unsigned char *)(a2 + 89);
  unsigned __int8 v23 = *(unsigned char *)(a2 + 88);
  sub_10033A9E8(v16, v17, v18, v19, v20, v21, v22, v23, v34);
  uint64_t v24 = *(void *)(a1 + 32);
  uint64_t v25 = *(void *)(a1 + 40);
  uint64_t v26 = *(void *)(a1 + 48);
  uint64_t v27 = *(void *)(a1 + 56);
  uint64_t v28 = *(void *)(a1 + 64);
  uint64_t v29 = *(void *)(a1 + 72);
  uint64_t v30 = *(void *)(a1 + 80);
  char v31 = *(unsigned char *)(a1 + 89);
  *(void *)(a1 + 32) = v16;
  *(void *)(a1 + 40) = v17;
  *(void *)(a1 + 48) = v18;
  *(void *)(a1 + 56) = v19;
  *(void *)(a1 + 64) = v20;
  *(void *)(a1 + 72) = v21;
  *(void *)(a1 + 80) = v22;
  uint64_t v32 = *(unsigned __int8 *)(a1 + 88);
  *(unsigned char *)(a1 + 88) = v23;
  *(unsigned char *)(a1 + 89) = v34;
  sub_10033AB48(v24, v25, v26, v27, v28, v29, v30, v32, v31);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  return a1;
}

uint64_t assignWithTake for ComparisonDetailComponentView(uint64_t a1, uint64_t a2)
{
  if (!*(void *)(a1 + 24)) {
    goto LABEL_5;
  }
  uint64_t v4 = *(void *)(a2 + 24);
  if (!v4)
  {
    sub_10024ADC8(a1);
LABEL_5:
    long long v9 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v9;
    goto LABEL_6;
  }
  char v5 = *(unsigned char *)(a2 + 16);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  char v8 = *(unsigned char *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = v5;
  sub_100191924(v6, v7, v8);
  *(void *)(a1 + 24) = v4;
  swift_bridgeObjectRelease();
LABEL_6:
  uint64_t v10 = *(void *)(a2 + 80);
  char v11 = *(unsigned char *)(a2 + 88);
  char v12 = *(unsigned char *)(a2 + 89);
  uint64_t v13 = *(void *)(a1 + 32);
  uint64_t v14 = *(void *)(a1 + 40);
  uint64_t v15 = *(void *)(a1 + 48);
  uint64_t v16 = *(void *)(a1 + 56);
  uint64_t v17 = *(void *)(a1 + 64);
  uint64_t v18 = *(void *)(a1 + 72);
  uint64_t v19 = *(void *)(a1 + 80);
  char v20 = *(unsigned char *)(a1 + 89);
  long long v21 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v21;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(void *)(a1 + 80) = v10;
  uint64_t v22 = *(unsigned __int8 *)(a1 + 88);
  *(unsigned char *)(a1 + 88) = v11;
  *(unsigned char *)(a1 + 89) = v12;
  sub_10033AB48(v13, v14, v15, v16, v17, v18, v19, v22, v20);
  long long v23 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v23;
  return a1;
}

uint64_t getEnumTagSinglePayload for ComparisonDetailComponentView(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 128))
    {
      int v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      unint64_t v3 = *(void *)(a1 + 24);
      if (v3 >= 0xFFFFFFFF) {
        LODWORD(v3) = -1;
      }
      int v2 = v3 - 1;
      if (v2 < 0) {
        int v2 = -1;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ComparisonDetailComponentView(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 120) = 0;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 128) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 128) = 0;
    }
    if (a2) {
      *(void *)(result + 24) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ComparisonDetailComponentView()
{
  return &type metadata for ComparisonDetailComponentView;
}

uint64_t sub_100A94660()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100A9467C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v6 = sub_10017DF08(&qword_100EAE180);
  __chkstk_darwin(v6 - 8);
  sub_1001626E0();
  uint64_t v9 = v8 - v7;
  uint64_t v10 = sub_10017DF08(&qword_100EAE188);
  sub_100162E4C();
  __chkstk_darwin(v11);
  sub_1001626E0();
  uint64_t v14 = v13 - v12;
  uint64_t v15 = sub_10017DF08(&qword_100EAE190);
  sub_100162E4C();
  __chkstk_darwin(v16);
  sub_1001626E0();
  uint64_t v19 = v18 - v17;
  *(void *)uint64_t v9 = static HorizontalAlignment.leading.getter();
  *(void *)(v9 + 8) = 0;
  *(unsigned char *)(v9 + 16) = 0;
  uint64_t v20 = sub_10017DF08(&qword_100EAE198);
  sub_100A94A00(v1, v9 + *(int *)(v20 + 44));
  char v21 = static Edge.Set.top.getter();
  memcpy(v38, v1, 0x5AuLL);
  sub_10033A9C8(&v38[2], v39);
  sub_10033A9C8(v39, &v50);
  if ((v53 & 1) != 0
    || (unsigned __int8 v43 = v50, v44 = v51, *(_OWORD *)v45 = *(_OWORD *)v52, *(void *)&v45[15] = *(void *)&v52[15], v50 < 3u))
  {
    swift_beginAccess();
    double v22 = sub_100592660();
  }
  else
  {
    sub_100788F9C((uint64_t *)&v46);
    uint64_t v34 = v15;
    uint64_t v23 = a1;
    uint64_t v25 = *(void *)&v48[7];
    uint64_t v24 = *(void *)&v48[15];
    sub_1001B1E64(&v46, *(uint64_t *)&v48[7]);
    uint64_t v26 = v25;
    a1 = v23;
    uint64_t v15 = v34;
    double v22 = (*(double (**)(uint64_t, uint64_t))(v24 + 64))(v26, v24);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)&v46);
  }
  EdgeInsets.init(_all:)();
  sub_1001812B4();
  sub_10006DF38(v9, v14, &qword_100EAE180);
  uint64_t v27 = v14 + *(int *)(v10 + 36);
  *(unsigned char *)uint64_t v27 = v21;
  *(double *)(v27 + 8) = v22;
  *(void *)(v27 + 16) = v2;
  *(void *)(v27 + 24) = v3;
  *(void *)(v27 + 32) = v4;
  *(unsigned char *)(v27 + 40) = 0;
  sub_1001781AC(v9, &qword_100EAE180);
  char v28 = static Edge.Set.bottom.getter();
  sub_10033A9C8(v39, &v46);
  if ((v49 & 1) != 0
    || (char v40 = v46, v41 = v47, *(_OWORD *)v42 = *(_OWORD *)v48, *(void *)&v42[15] = *(void *)&v48[15], !v46))
  {
    swift_beginAccess();
    double v31 = sub_10052E668();
  }
  else
  {
    sub_100788F9C(v35);
    uint64_t v29 = v36;
    uint64_t v30 = v37;
    sub_1001B1E64(v35, v36);
    double v31 = (*(double (**)(uint64_t, uint64_t))(v30 + 64))(v29, v30);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v35);
  }
  EdgeInsets.init(_all:)();
  sub_1001812B4();
  sub_10006DF38(v14, v19, &qword_100EAE188);
  uint64_t v32 = v19 + *(int *)(v15 + 36);
  *(unsigned char *)uint64_t v32 = v28;
  *(double *)(v32 + 8) = v31;
  *(void *)(v32 + 16) = v2;
  *(void *)(v32 + 24) = v3;
  *(void *)(v32 + 32) = v4;
  *(unsigned char *)(v32 + 40) = 0;
  sub_1001781AC(v14, &qword_100EAE188);
  return sub_10020E72C(v19, a1, &qword_100EAE190);
}

uint64_t sub_100A94A00@<X0>(const void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v152 = a2;
  uint64_t v138 = type metadata accessor for ComparisonBarChartView();
  __chkstk_darwin(v138);
  uint64_t v140 = (uint64_t *)((char *)&v120 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v151 = sub_10017DF08(&qword_100EAE1A0);
  __chkstk_darwin(v151);
  uint64_t v139 = (uint64_t)&v120 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v141 = (uint64_t)&v120 - v6;
  uint64_t v147 = sub_10017DF08(&qword_100EAE1A8);
  __chkstk_darwin(v147);
  uint64_t v148 = (uint64_t)&v120 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v134 = type metadata accessor for ComparisonCapsuleView(0);
  __chkstk_darwin(v134);
  uint64_t v136 = (char *)&v120 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v146 = sub_10017DF08(&qword_100EAE1B0);
  __chkstk_darwin(v146);
  uint64_t v135 = (uint64_t)&v120 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v137 = (uint64_t)&v120 - v11;
  uint64_t v12 = sub_10017DF08(&qword_100EAE1B8);
  __chkstk_darwin(v12 - 8);
  unint64_t v150 = (char *)&v120 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v120 - v15;
  uint64_t v17 = type metadata accessor for Divider();
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v120 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v142 = sub_10017DF08(&qword_100E66250);
  __chkstk_darwin(v142);
  uint64_t v143 = (uint64_t)&v120 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  uint64_t v24 = (char *)&v120 - v23;
  __chkstk_darwin(v25);
  uint64_t v155 = (uint64_t)&v120 - v26;
  uint64_t v27 = sub_10017DF08(&qword_100EAE1C0);
  __chkstk_darwin(v27 - 8);
  uint64_t v157 = (char *)&v120 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v29);
  double v31 = (char *)&v120 - v30;
  memcpy(v191, a1, 0x5AuLL);
  uint64_t v32 = *((void *)&v191[1] + 1);
  uint64_t v149 = v16;
  uint64_t v153 = v31;
  uint64_t v154 = (uint64_t)a1;
  if (*((void *)&v191[1] + 1))
  {
    uint64_t v126 = v18;
    uint64_t v127 = v17;
    long long v33 = v191[0];
    uint64_t v156 = *(void *)&v191[1];
    char v34 = v191[1] & 1;
    swift_bridgeObjectRetain();
    sub_100190CC4(v33, *((uint64_t *)&v33 + 1), v34);
    LODWORD(v145) = static Edge.Set.horizontal.getter();
    EdgeInsets.init(_all:)();
    uint64_t v130 = v36;
    uint64_t v131 = v35;
    uint64_t v128 = v38;
    uint64_t v129 = v37;
    swift_bridgeObjectRetain();
    uint64_t v132 = *((void *)&v33 + 1);
    uint64_t v133 = v33;
    sub_100190CC4(v33, *((uint64_t *)&v33 + 1), v34);
    int v144 = static Edge.Set.bottom.getter();
    sub_10033A9C8(&v191[2], v192);
    sub_10033A9C8(v192, &v198);
    if ((v201 & 1) != 0
      || (unsigned __int8 v193 = v198,
          long long v194 = v199,
          *(_OWORD *)uint64_t v195 = *(_OWORD *)v200,
          *(void *)&v195[15] = *(void *)&v200[15],
          v198 < 3u))
    {
      swift_beginAccess();
      sub_100592660();
    }
    else
    {
      sub_100788F9C(v159);
      uint64_t v41 = v162;
      uint64_t v42 = v163;
      sub_1001B1E64(v159, v162);
      (*(void (**)(uint64_t, uint64_t))(v42 + 64))(v41, v42);
      _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v159);
    }
    EdgeInsets.init(_all:)();
    uint64_t v44 = v43;
    uint64_t v46 = v45;
    uint64_t v48 = v47;
    uint64_t v50 = v49;
    char v180 = v156 & 1;
    char v179 = 0;
    char v178 = 0;
    int v51 = v156 & 1;
    Divider.init()();
    char v52 = static Edge.Set.horizontal.getter();
    sub_10033A9C8(v192, v196);
    uint64_t v54 = v126;
    uint64_t v53 = v127;
    if ((v197 & 1) == 0 && LOBYTE(v196[0]) - 1 <= 1)
    {
      swift_beginAccess();
      sub_10052E668();
    }
    int v125 = v156 & 1;
    EdgeInsets.init(_all:)();
    uint64_t v56 = v55;
    uint64_t v58 = v57;
    uint64_t v60 = v59;
    uint64_t v62 = v61;
    (*(void (**)(char *, char *, uint64_t))(v54 + 16))(v24, v20, v53);
    uint64_t v63 = &v24[*(int *)(v142 + 36)];
    *uint64_t v63 = v52;
    *((void *)v63 + 1) = v56;
    *((void *)v63 + 2) = v58;
    *((void *)v63 + 3) = v60;
    *((void *)v63 + 4) = v62;
    v63[40] = 0;
    (*(void (**)(char *, uint64_t))(v54 + 8))(v20, v53);
    uint64_t v64 = v155;
    sub_10020E72C((uint64_t)v24, v155, &qword_100E66250);
    swift_beginAccess();
    sub_10052E668();
    static Alignment.center.getter();
    _FrameLayout.init(width:height:alignment:)();
    uint64_t v142 = v185;
    LODWORD(v127) = v186;
    uint64_t v126 = v187;
    int v123 = v188;
    uint64_t v121 = v190;
    uint64_t v122 = v189;
    uint64_t v65 = v64;
    uint64_t v66 = v143;
    sub_10006DF38(v65, v143, &qword_100E66250);
    uint64_t v68 = v132;
    uint64_t v67 = v133;
    v158[0] = v133;
    v158[1] = v132;
    int v124 = v51;
    LOBYTE(v158[2]) = v51;
    *(_DWORD *)((char *)&v158[2] + 1) = v184[0];
    HIDWORD(v158[2]) = *(_DWORD *)((char *)v184 + 3);
    v158[3] = v32;
    LOBYTE(v158[4]) = v145;
    *(_DWORD *)((char *)&v158[4] + 1) = *(_DWORD *)v183;
    HIDWORD(v158[4]) = *(_DWORD *)&v183[3];
    uint64_t v70 = v130;
    uint64_t v69 = v131;
    v158[5] = v131;
    v158[6] = v130;
    uint64_t v72 = v128;
    uint64_t v71 = v129;
    v158[7] = v129;
    v158[8] = v128;
    LOBYTE(v158[9]) = 0;
    *(_DWORD *)((char *)&v158[9] + 1) = *(_DWORD *)v182;
    HIDWORD(v158[9]) = *(_DWORD *)&v182[3];
    LOBYTE(v158[10]) = v144;
    *(_DWORD *)((char *)&v158[10] + 1) = *(_DWORD *)v181;
    HIDWORD(v158[10]) = *(_DWORD *)&v181[3];
    v158[11] = v44;
    v158[12] = v46;
    v158[13] = v48;
    v158[14] = v50;
    LOWORD(v158[15]) = 0;
    BYTE2(v158[15]) = 1;
    uint64_t v73 = v157;
    memcpy(v157, v158, 0x7BuLL);
    uint64_t v74 = sub_10017DF08(&qword_100EAE1F8);
    sub_10006DF38(v66, (uint64_t)&v73[*(int *)(v74 + 48)], &qword_100E66250);
    uint64_t v75 = &v73[*(int *)(v74 + 64)];
    *(void *)uint64_t v75 = 0;
    v75[8] = 1;
    *((void *)v75 + 2) = v142;
    v75[24] = v127;
    *((void *)v75 + 4) = v126;
    v75[40] = v123;
    uint64_t v76 = v121;
    *((void *)v75 + 6) = v122;
    *((void *)v75 + 7) = v76;
    sub_10045A584((uint64_t)v158);
    LOBYTE(v74) = v156;
    sub_100147E1C(v67, v68, v156, v32);
    sub_100191924(v67, v68, v125);
    swift_bridgeObjectRelease();
    sub_1001781AC(v155, &qword_100E66250);
    sub_100147E60(v67, v68, v74, v32);
    sub_1001781AC(v66, &qword_100E66250);
    v159[0] = v67;
    v159[1] = v68;
    char v160 = v124;
    *(_DWORD *)uint64_t v161 = v184[0];
    *(_DWORD *)&v161[3] = *(_DWORD *)((char *)v184 + 3);
    uint64_t v162 = v32;
    LOBYTE(v163) = v145;
    *(_DWORD *)((char *)&v163 + 1) = *(_DWORD *)v183;
    HIDWORD(v163) = *(_DWORD *)&v183[3];
    uint64_t v164 = v69;
    uint64_t v165 = v70;
    uint64_t v166 = v71;
    uint64_t v167 = v72;
    char v168 = 0;
    *(_DWORD *)unint64_t v169 = *(_DWORD *)v182;
    *(_DWORD *)&v169[3] = *(_DWORD *)&v182[3];
    char v170 = v144;
    *(_DWORD *)uint64_t v171 = *(_DWORD *)v181;
    *(_DWORD *)&v171[3] = *(_DWORD *)&v181[3];
    uint64_t v172 = v44;
    uint64_t v173 = v46;
    uint64_t v174 = v48;
    uint64_t v175 = v50;
    __int16 v176 = 0;
    char v177 = 1;
    sub_10045A4EC((uint64_t)v159);
    uint64_t v77 = sub_10017DF08(&qword_100EAE1C8);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v73, 0, 1, v77);
    uint64_t v40 = (uint64_t)v153;
    sub_10020E72C((uint64_t)v73, (uint64_t)v153, &qword_100EAE1C0);
  }
  else
  {
    uint64_t v39 = sub_10017DF08(&qword_100EAE1C8);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v31, 1, 1, v39);
    uint64_t v40 = (uint64_t)v31;
  }
  long long v78 = v191[2];
  long long v79 = v191[3];
  uint64_t v80 = *(void *)&v191[4];
  if (BYTE9(v191[5]))
  {
    uint64_t v81 = *(void *)&v191[5];
    uint64_t v156 = *(void *)&v191[5];
    uint64_t v82 = *((void *)&v191[4] + 1);
    int v83 = BYTE8(v191[5]);
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v85 = (uint64_t)v140;
    *uint64_t v140 = KeyPath;
    sub_10017DF08(&qword_100E63BC8);
    swift_storeEnumTagMultiPayload();
    uint64_t v86 = v85 + *(int *)(v138 + 20);
    *(_OWORD *)uint64_t v86 = v78;
    *(_OWORD *)(v86 + 16) = v79;
    *(void *)(v86 + 32) = v80;
    *(void *)(v86 + 40) = v82;
    *(void *)(v86 + 48) = v81;
    *(unsigned char *)(v86 + 56) = v83;
    swift_bridgeObjectRetain();
    uint64_t v145 = v82;
    LODWORD(v155) = v83;
    sub_10033AAA4(*((uint64_t *)&v78 + 1), v79);
    swift_bridgeObjectRetain();
    sub_10033AAA4(*((uint64_t *)&v78 + 1), v79);
    LOBYTE(v82) = static Edge.Set.horizontal.getter();
    EdgeInsets.init(_all:)();
    uint64_t v88 = v87;
    uint64_t v90 = v89;
    uint64_t v92 = v91;
    uint64_t v94 = v93;
    uint64_t v154 = v79;
    uint64_t v95 = v139;
    sub_100A95980(v85, v139, (void (*)(void))type metadata accessor for ComparisonBarChartView);
    uint64_t v96 = v95 + *(int *)(v151 + 36);
    *(unsigned char *)uint64_t v96 = v82;
    *(void *)(v96 + 8) = v88;
    *(void *)(v96 + 16) = v90;
    *(void *)(v96 + 24) = v92;
    *(void *)(v96 + 32) = v94;
    *(unsigned char *)(v96 + 40) = 0;
    sub_100A959D4(v85, (void (*)(void))type metadata accessor for ComparisonBarChartView);
    uint64_t v97 = v141;
    sub_10020E72C(v95, v141, &qword_100EAE1A0);
    sub_10006DF38(v97, v148, &qword_100EAE1A0);
    swift_storeEnumTagMultiPayload();
    sub_100A957D8();
    sub_100A95884();
    uint64_t v98 = (uint64_t)v149;
    uint64_t v40 = (uint64_t)v153;
    _ConditionalContent<>.init(storage:)();
    sub_10033AB48(v78, *((uint64_t *)&v78 + 1), v154, *((uint64_t *)&v79 + 1), v80, v145, v156, v155, 1);
    uint64_t v99 = v97;
    uint64_t v100 = &qword_100EAE1A0;
  }
  else
  {
    uint64_t v101 = (uint64_t)v136;
    unsigned char *v136 = v191[2];
    *(void *)(v101 + 8) = *((void *)&v78 + 1);
    *(_OWORD *)(v101 + 16) = v79;
    *(void *)(v101 + 32) = v80;
    uint64_t v102 = (uint64_t *)(v101 + *(int *)(v134 + 20));
    *uint64_t v102 = swift_getKeyPath();
    sub_10017DF08(&qword_100E62D60);
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    char v103 = static Edge.Set.horizontal.getter();
    EdgeInsets.init(_all:)();
    uint64_t v105 = v104;
    uint64_t v107 = v106;
    uint64_t v109 = v108;
    uint64_t v111 = v110;
    uint64_t v112 = v135;
    sub_100A95980(v101, v135, (void (*)(void))type metadata accessor for ComparisonCapsuleView);
    uint64_t v113 = v112 + *(int *)(v146 + 36);
    *(unsigned char *)uint64_t v113 = v103;
    *(void *)(v113 + 8) = v105;
    *(void *)(v113 + 16) = v107;
    *(void *)(v113 + 24) = v109;
    *(void *)(v113 + 32) = v111;
    *(unsigned char *)(v113 + 40) = 0;
    sub_100A959D4(v101, (void (*)(void))type metadata accessor for ComparisonCapsuleView);
    uint64_t v114 = v137;
    sub_10020E72C(v112, v137, &qword_100EAE1B0);
    sub_10006DF38(v114, v148, &qword_100EAE1B0);
    swift_storeEnumTagMultiPayload();
    sub_100A957D8();
    sub_100A95884();
    uint64_t v98 = (uint64_t)v149;
    _ConditionalContent<>.init(storage:)();
    uint64_t v99 = v114;
    uint64_t v100 = &qword_100EAE1B0;
  }
  sub_1001781AC(v99, v100);
  uint64_t v115 = v152;
  uint64_t v116 = (uint64_t)v150;
  uint64_t v117 = (uint64_t)v157;
  sub_10006DF38(v40, (uint64_t)v157, &qword_100EAE1C0);
  sub_10006DF38(v98, v116, &qword_100EAE1B8);
  sub_10006DF38(v117, v115, &qword_100EAE1C0);
  uint64_t v118 = sub_10017DF08(&qword_100EAE1F0);
  sub_10006DF38(v116, v115 + *(int *)(v118 + 48), &qword_100EAE1B8);
  sub_1001781AC(v98, &qword_100EAE1B8);
  sub_1001781AC(v40, &qword_100EAE1C0);
  sub_1001781AC(v116, &qword_100EAE1B8);
  return sub_1001781AC(v117, &qword_100EAE1C0);
}

uint64_t sub_100A9578C@<X0>(uint64_t a1@<X8>)
{
  memcpy(v4, v1, sizeof(v4));
  return sub_100A9467C(a1);
}

unint64_t sub_100A957D8()
{
  unint64_t result = qword_100EAE1D0;
  if (!qword_100EAE1D0)
  {
    sub_10018C6DC(&qword_100EAE1B0);
    sub_100A95930(&qword_100EAE1D8, (void (*)(uint64_t))type metadata accessor for ComparisonCapsuleView);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAE1D0);
  }
  return result;
}

unint64_t sub_100A95884()
{
  unint64_t result = qword_100EAE1E0;
  if (!qword_100EAE1E0)
  {
    sub_10018C6DC(&qword_100EAE1A0);
    sub_100A95930(&qword_100EAE1E8, (void (*)(uint64_t))type metadata accessor for ComparisonBarChartView);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAE1E0);
  }
  return result;
}

uint64_t sub_100A95930(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100A95980(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  uint64_t v4 = sub_10011BFA4();
  v5(v4);
  return a2;
}

uint64_t sub_100A959D4(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_100A95A2C()
{
  return sub_100A95A68(&qword_100EAE200, &qword_100EAE190, (void (*)(void))sub_100A95AE8);
}

uint64_t sub_100A95A68(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10018C6DC(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100A95AE8()
{
  return sub_100A95A68(&qword_100EAE208, &qword_100EAE188, (void (*)(void))sub_100A95B10);
}

unint64_t sub_100A95B10()
{
  unint64_t result = qword_100EAE210;
  if (!qword_100EAE210)
  {
    sub_10018C6DC(&qword_100EAE180);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAE210);
  }
  return result;
}

void sub_100A95B64()
{
}

void sub_100A95BA4()
{
}

void sub_100A95BE4()
{
  sub_10016314C();
  sub_10018A138();
  uint64_t v4 = type metadata accessor for SavedLocation();
  uint64_t v5 = sub_100164920(v4);
  uint64_t v18 = v6;
  __chkstk_darwin(v5);
  uint64_t v17 = (uint64_t)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001626D4();
  __chkstk_darwin(v8);
  sub_100152388();
  sub_10018A4E4();
  if (v9)
  {
    uint64_t v16 = v1;
    uint64_t v15 = v2;
    while (*(void *)(v1 + 16))
    {
      unint64_t v10 = sub_10019DBC0();
      sub_10019DD78(v10, v3, (void (*)(void))&type metadata accessor for SavedLocation);
      sub_1001826B4();
      char v11 = v2();
      if (v0)
      {
        sub_10019E1D8(v3, (void (*)(void))&type metadata accessor for SavedLocation);
        swift_release();
        swift_bridgeObjectRelease();
        goto LABEL_17;
      }
      if (v11)
      {
        sub_100183754(v3, v17, (void (*)(void))&type metadata accessor for SavedLocation);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_100185790();
          sub_10018D170();
        }
        sub_10017F6F0();
        if (v12)
        {
          sub_100188C7C();
          sub_10018D170();
        }
        sub_100183680();
        sub_100183754(v17, v13, (void (*)(void))&type metadata accessor for SavedLocation);
        uint64_t v1 = v16;
        uint64_t v2 = v15;
      }
      else
      {
        sub_10019E1D8(v3, (void (*)(void))&type metadata accessor for SavedLocation);
      }
      sub_10019D364();
      if (v14) {
        goto LABEL_16;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_16:
    swift_bridgeObjectRelease();
LABEL_17:
    sub_100191138();
    sub_100163164();
  }
}

uint64_t sub_100A95DD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  if (v4)
  {
    uint64_t v6 = sub_10019B7A0();
    sub_1007F3298(v6, v7, v8);
    uint64_t v9 = type metadata accessor for Date();
    sub_100164920(v9);
    uint64_t v11 = a3 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
    uint64_t v19 = *(void *)(v12 + 72);
    while (1)
    {
      sub_10017AADC();
      v13();
      if (v3) {
        break;
      }
      uint64_t v14 = v20;
      unint64_t v16 = _swiftEmptyArrayStorage[2];
      unint64_t v15 = _swiftEmptyArrayStorage[3];
      if (v16 >= v15 >> 1)
      {
        sub_1007F3298(v15 > 1, v16 + 1, 1);
        uint64_t v14 = v20;
      }
      _swiftEmptyArrayStorage[2] = v16 + 1;
      uint64_t v17 = &_swiftEmptyArrayStorage[3 * v16];
      v17[4] = v14;
      v17[5] = v21;
      *((unsigned char *)v17 + 48) = v22;
      v11 += v19;
      if (!--v4) {
        return sub_10019B298();
      }
    }
    swift_release();
  }
  return sub_10019B298();
}

void sub_100A95F18()
{
  sub_10016314C();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  v26[2] = v5;
  v26[3] = v6;
  v26[1] = type metadata accessor for Date();
  sub_100179C0C();
  uint64_t v27 = v7;
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = v2 - v4;
  if (__OFSUB__(v2, v4))
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  uint64_t v12 = v11 + 1;
  if (__OFADD__(v11, 1))
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (v11 == -1)
  {
LABEL_17:
    sub_100191138();
    sub_100163164();
    return;
  }
  sub_1001791CC();
  sub_1007F32E8();
  if ((v12 & 0x8000000000000000) == 0)
  {
    BOOL v13 = 0;
    v26[0] = v27 + 32;
    uint64_t v14 = v4 - 1;
    while (v2 != v14)
    {
      if (v13) {
        goto LABEL_23;
      }
      uint64_t v28 = v4;
      sub_10017AADC();
      v18(v15, v16, v17);
      if (v0)
      {
        swift_release();
        goto LABEL_17;
      }
      uint64_t v19 = v10;
      unint64_t v20 = _swiftEmptyArrayStorage[2];
      if (v20 >= _swiftEmptyArrayStorage[3] >> 1)
      {
        sub_10019AF0C();
        sub_1007F32E8();
      }
      _swiftEmptyArrayStorage[2] = v20 + 1;
      sub_10017E6E0();
      uint64_t v10 = v19;
      sub_1001190D4();
      v24(v21, v22, v23);
      BOOL v13 = v4 == v2;
      if (v4 == v2)
      {
        uint64_t v4 = 0;
      }
      else if (__OFADD__(v4++, 1))
      {
        goto LABEL_19;
      }
      if (v2 == ++v14) {
        goto LABEL_17;
      }
    }
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
LABEL_22:
  __break(1u);
LABEL_23:
  __break(1u);
}

void sub_100A960D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_100A96250(a1, a2, a3, a4, (uint64_t)&type metadata accessor for ApparentPrecipitationIntensityCategory, a6, a7, a8, vars0, vars8);
}

void sub_100A96100(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  sub_10016314C();
  sub_10010947C();
  type metadata accessor for DetailChartDataElement();
  sub_100179C0C();
  __chkstk_darwin(v13);
  sub_10018B1FC();
  if (v12)
  {
    sub_1001CA930();
    uint64_t v14 = v11 + 32;
    while (1)
    {
      ++v14;
      sub_10017AADC();
      v15();
      if (v10) {
        break;
      }
      unint64_t v16 = *(void *)(a10 + 16);
      if (v16 >= *(void *)(a10 + 24) >> 1) {
        sub_1007F3414();
      }
      *(void *)(a10 + 16) = v16 + 1;
      sub_100184DC0();
      sub_1001190D4();
      v17();
      if (!--v12) {
        goto LABEL_9;
      }
    }
    swift_release();
  }
LABEL_9:
  sub_100191138();
  sub_100163164();
}

void sub_100A96224(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_100A96250(a1, a2, a3, a4, (uint64_t)&type metadata accessor for HourWeather, a6, a7, a8, vars0, vars8);
}

void sub_100A96250(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  sub_10016314C();
  uint64_t v14 = v13;
  sub_10010947C();
  type metadata accessor for DetailChartDataElement();
  sub_100179C0C();
  __chkstk_darwin(v15);
  sub_10018B1FC();
  if (v12)
  {
    sub_1001CA930();
    uint64_t v16 = v14(0);
    sub_100164920(v16);
    uint64_t v18 = v11 + ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80));
    uint64_t v23 = *(void *)(v19 + 72);
    while (1)
    {
      sub_10017AADC();
      v20();
      if (v10) {
        break;
      }
      unint64_t v21 = *(void *)(a10 + 16);
      if (v21 >= *(void *)(a10 + 24) >> 1)
      {
        sub_100188C7C();
        sub_1007F3414();
      }
      *(void *)(a10 + 16) = v21 + 1;
      sub_100184DC0();
      sub_1001190D4();
      v22();
      v18 += v23;
      if (!--v12) {
        goto LABEL_9;
      }
    }
    swift_release();
  }
LABEL_9:
  sub_100191138();
  sub_100163164();
}

uint64_t sub_100A963AC(void (*a1)(void), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  if (v4)
  {
    uint64_t v7 = (char *)sub_10019B7A0();
    sub_1007F3554(v7, v8, v9);
    uint64_t v10 = type metadata accessor for ConditionDetailLegend(0);
    sub_100164920(v10);
    uint64_t v12 = a3 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
    uint64_t v14 = *(void *)(v13 + 72);
    while (1)
    {
      sub_10017AADC();
      a1();
      if (v3) {
        break;
      }
      unint64_t v16 = _swiftEmptyArrayStorage[2];
      unint64_t v15 = _swiftEmptyArrayStorage[3];
      if (v16 >= v15 >> 1) {
        sub_1007F3554((char *)(v15 > 1), v16 + 1, 1);
      }
      _swiftEmptyArrayStorage[2] = v16 + 1;
      _swiftEmptyArrayStorage[v16 + 4] = v18;
      v12 += v14;
      if (!--v4) {
        return sub_10019B298();
      }
    }
    swift_release();
  }
  return sub_10019B298();
}

uint64_t sub_100A964E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  if (v4)
  {
    uint64_t v6 = sub_10019B7A0();
    sub_1001EA6A0(v6, v7, v8);
    uint64_t v9 = a3 + 40;
    while (1)
    {
      swift_bridgeObjectRetain();
      sub_10017AADC();
      v10();
      if (v3) {
        break;
      }
      swift_bridgeObjectRelease();
      unint64_t v12 = _swiftEmptyArrayStorage[2];
      unint64_t v11 = _swiftEmptyArrayStorage[3];
      if (v12 >= v11 >> 1) {
        sub_1001EA6A0(v11 > 1, v12 + 1, 1);
      }
      v9 += 16;
      _swiftEmptyArrayStorage[2] = v12 + 1;
      uint64_t v13 = &_swiftEmptyArrayStorage[2 * v12];
      v13[4] = v15;
      v13[5] = v16;
      if (!--v4) {
        return sub_10019B298();
      }
    }
    swift_release();
    swift_bridgeObjectRelease();
  }
  return sub_10019B298();
}

void *sub_100A965F8(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for DetailChartCondition();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(a1 + 16);
  uint64_t v8 = _swiftEmptyArrayStorage;
  if (v7)
  {
    v13[0] = v1;
    uint64_t v18 = _swiftEmptyArrayStorage;
    sub_1007F35C4();
    uint64_t v8 = v18;
    uint64_t v17 = type metadata accessor for ConditionDetailChartInput(0);
    uint64_t v9 = a1
       + ((*(unsigned __int8 *)(*(void *)(v17 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v17 - 8) + 80));
    uint64_t v16 = *(void *)(*(void *)(v17 - 8) + 72);
    uint64_t v10 = type metadata accessor for ConditionDetailChartDataInput(0);
    uint64_t v14 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
    uint64_t v15 = v10;
    v13[1] = v4 + 32;
    do
    {
      v14(v6, v9 + *(int *)(v17 + 20) + (uint64_t)*(int *)(v15 + 24), v3);
      uint64_t v18 = v8;
      unint64_t v11 = v8[2];
      if (v11 >= v8[3] >> 1)
      {
        sub_1007F35C4();
        uint64_t v8 = v18;
      }
      v8[2] = v11 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))((unint64_t)v8+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(void *)(v4 + 72) * v11, v6, v3);
      v9 += v16;
      --v7;
    }
    while (v7);
  }
  return v8;
}

void sub_100A96828()
{
}

void *sub_100A96890()
{
  sub_10010947C();
  uint64_t v3 = v2;
  if (v4 >> 62) {
    goto LABEL_16;
  }
  uint64_t v5 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    unint64_t result = _swiftEmptyArrayStorage;
    if (!v5) {
      break;
    }
    unint64_t result = (void *)specialized ContiguousArray.reserveCapacity(_:)();
    if (v5 < 0)
    {
      __break(1u);
      return result;
    }
    uint64_t v7 = 0;
    while (v5 != v7)
    {
      if ((v1 & 0xC000000000000001) != 0) {
        id v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v8 = *(id *)(v1 + 8 * v7 + 32);
      }
      uint64_t v9 = v8;
      sub_10017AADC();
      v3();

      if (v0) {
        return (void *)swift_release();
      }
      ++v7;
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
      if (v5 == v7) {
        return _swiftEmptyArrayStorage;
      }
    }
    __break(1u);
LABEL_16:
    if (v1 < 0) {
      uint64_t v0 = v1;
    }
    else {
      uint64_t v0 = v1 & 0xFFFFFFFFFFFFFF8;
    }
    swift_bridgeObjectRetain();
    uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_100A969F8(uint64_t (*a1)(void), uint64_t a2, uint64_t a3)
{
  return sub_10013CB74(a1, a2, a3, (uint64_t (*)(void))&type metadata accessor for DetailChartDataElement);
}

void sub_100A96A24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  sub_10016314C();
  v28[1] = v11;
  uint64_t v13 = v12;
  type metadata accessor for HourWeather();
  sub_100179C0C();
  uint64_t v15 = v14;
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)v28 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10017DF08(&qword_100E66CC8);
  sub_1001AEBF8();
  dispatch thunk of Collection.startIndex.getter();
  dispatch thunk of Collection.endIndex.getter();
  if (a10 != v29)
  {
    v28[0] = v13;
    while (1)
    {
      uint64_t v19 = (void (*)(uint64_t *, void))dispatch thunk of Collection.subscript.read();
      (*(void (**)(char *))(v15 + 16))(v18);
      v19(&v29, 0);
      sub_1001826B4();
      char v22 = v21(v20);
      if (v10) {
        break;
      }
      char v23 = v22;
      uint64_t v24 = sub_10016403C();
      v25(v24);
      if ((v23 & 1) == 0)
      {
        dispatch thunk of Collection.formIndex(after:)();
        dispatch thunk of Collection.endIndex.getter();
        if (a10 != v29) {
          continue;
        }
      }
      goto LABEL_8;
    }
    uint64_t v26 = sub_10016403C();
    v27(v26);
  }
LABEL_8:
  sub_100191138();
  sub_100163164();
}

uint64_t sub_100A96BD4(uint64_t (*a1)(void), uint64_t a2, uint64_t a3)
{
  return sub_10013CB74(a1, a2, a3, type metadata accessor for ConditionDetailChartInputs);
}

uint64_t sub_100A96C00(uint64_t (*a1)(void), uint64_t a2, uint64_t a3)
{
  return sub_10013CB74(a1, a2, a3, type metadata accessor for ListLocationViewModel);
}

uint64_t sub_100A96C2C(uint64_t a1, uint64_t a2)
{
  return sub_100A96C44(a1, a2, &qword_100E71408);
}

uint64_t sub_100A96C38(uint64_t a1, uint64_t a2)
{
  return sub_100A96C44(a1, a2, &qword_100E6ECE0);
}

uint64_t sub_100A96C44(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  if (a2 < 0)
  {
    sub_100187288();
    uint64_t result = sub_10012B72C();
    __break(1u);
  }
  else
  {
    if (a2)
    {
      sub_10017DF08(a3);
      uint64_t v6 = (void *)static Array._allocateBufferUninitialized(minimumCapacity:)();
      _OWORD v6[2] = a2;
      uint64_t v7 = *(void *)(sub_10017DF08(a3) - 8);
      unint64_t v8 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
      sub_1001B49E8(a1, (uint64_t)v6 + v8, a3);
      uint64_t v9 = a2 - 1;
      if (a2 != 1)
      {
        uint64_t v10 = *(void *)(v7 + 72);
        uint64_t v11 = (uint64_t)v6 + v10 + v8;
        do
        {
          sub_1001B49E8(a1, v11, a3);
          v11 += v10;
          --v9;
        }
        while (v9);
      }
    }
    else
    {
      uint64_t v6 = _swiftEmptyArrayStorage;
    }
    sub_100178110(a1, a3);
    return (uint64_t)v6;
  }
  return result;
}

uint64_t sub_100A96D70(uint64_t a1, uint64_t a2)
{
  if (a2 < 0)
  {
    sub_100187288();
    uint64_t result = sub_10012B72C();
    __break(1u);
  }
  else
  {
    if (a2)
    {
      uint64_t v3 = type metadata accessor for GridItem();
      unint64_t v4 = (void *)static Array._allocateBufferUninitialized(minimumCapacity:)();
      v4[2] = a2;
      uint64_t v5 = *(void *)(v3 - 8);
      unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
      uint64_t v7 = *(void (**)(void))(v5 + 16);
      sub_10019AB28();
      v7();
      uint64_t v8 = a2 - 1;
      if (a2 != 1)
      {
        uint64_t v9 = *(void *)(v5 + 72);
        uint64_t v10 = (char *)v4 + v9 + v6;
        do
        {
          sub_10019AB28();
          v7();
          v10 += v9;
          --v8;
        }
        while (v8);
      }
    }
    else
    {
      unint64_t v4 = _swiftEmptyArrayStorage;
    }
    type metadata accessor for GridItem();
    sub_100162E4C();
    sub_100162F0C();
    v11();
    return (uint64_t)v4;
  }
  return result;
}

uint64_t sub_100A96ED4(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_10017DF08(&qword_100E94F20);
  __chkstk_darwin(v4);
  unint64_t v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for Date();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100AA6158((unint64_t *)&qword_100E66CC0, (void (*)(uint64_t))&type metadata accessor for Date);
  char v11 = dispatch thunk of static Comparable.>= infix(_:_:)();
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a1, v7);
  sub_1001B49E8(v2, (uint64_t)v6, &qword_100E94F20);
  if (v11) {
    char v12 = dispatch thunk of static Comparable.<= infix(_:_:)();
  }
  else {
    char v12 = 0;
  }
  sub_100178110((uint64_t)v6, &qword_100E94F20);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return v12 & 1;
}

void sub_100A970BC()
{
}

void sub_100A970E8()
{
  sub_10016314C();
  uint64_t v2 = v1;
  uint64_t v43 = v3;
  uint64_t v44 = v4;
  uint64_t v6 = v5;
  uint64_t v8 = v7(0);
  sub_100179C0C();
  uint64_t v10 = v9;
  uint64_t v12 = __chkstk_darwin(v11);
  uint64_t v14 = (char *)v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v16 = *(void *)(v2 + 16);
  if (!v16)
  {
    uint64_t v20 = v6;
    uint64_t v21 = 1;
LABEL_12:
    _s7Weather24LocationCompositionStateOwst_0(v20, v21, 1, v8);
    goto LABEL_13;
  }
  uint64_t v17 = v10 + 16;
  uint64_t v18 = *(void (**)(void))(v10 + 16);
  v38[0] = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v45 = (char *)v38 - v15;
  v18();
  swift_bridgeObjectRetain();
  uint64_t v19 = v16 - 1;
  uint64_t v39 = v6;
  uint64_t v40 = v2;
  v38[1] = v10;
  if (!v19)
  {
LABEL_11:
    swift_bridgeObjectRelease();
    uint64_t v35 = v39;
    sub_1001190D4();
    v36();
    uint64_t v20 = v35;
    uint64_t v21 = 0;
    goto LABEL_12;
  }
  uint64_t v22 = *(void *)(v10 + 72);
  char v23 = (void (**)(void))(v10 + 8);
  uint64_t v41 = v10 + 32;
  uint64_t v42 = v22;
  uint64_t v24 = v2 + v22 + v38[0];
  uint64_t v25 = v18;
  uint64_t v26 = v17;
  uint64_t v27 = v45;
  while (1)
  {
    uint64_t v28 = v25;
    uint64_t v29 = v26;
    sub_10008B8B4();
    v30();
    char v31 = v43(v14, v27);
    if (v0) {
      break;
    }
    if (v31)
    {
      uint64_t v27 = v45;
      sub_100166CA8();
      v32();
      sub_1001190D4();
      v33();
    }
    else
    {
      sub_100166CA8();
      v34();
      uint64_t v27 = v45;
    }
    v24 += v42;
    --v19;
    uint64_t v25 = v28;
    uint64_t v26 = v29;
    if (!v19) {
      goto LABEL_11;
    }
  }
  uint64_t v37 = *v23;
  sub_100166CA8();
  v37();
  sub_100166CA8();
  v37();
  swift_bridgeObjectRelease();
LABEL_13:
  sub_100191138();
  sub_100163164();
}

uint64_t sub_100A9732C()
{
  uint64_t v1 = type metadata accessor for ExtremaResult();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10017DF08(&qword_100E6BCB0);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for Date();
  sub_100AA6158((unint64_t *)&qword_100E63978, (void (*)(uint64_t))&type metadata accessor for Date);
  dispatch thunk of Hashable.hash(into:)();
  uint64_t v8 = type metadata accessor for ConditionDetailViewModelFactory.DetailChartViewModelCacheKey(0);
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  sub_1001B49E8(v0 + *(int *)(v8 + 24), (uint64_t)v7, &qword_100E6BCB0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v7, 1, v1) == 1)
  {
    Hasher._combine(_:)(0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v4, v7, v1);
    Hasher._combine(_:)(1u);
    sub_100AA6158(&qword_100E6BF88, (void (*)(uint64_t))&type metadata accessor for ExtremaResult);
    dispatch thunk of Hashable.hash(into:)();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  sub_100AA66C0(*(double *)(v0 + *(int *)(v8 + 28)), *(double *)(v0 + *(int *)(v8 + 28) + 8));
  type metadata accessor for DetailChartExtrema();
  sub_100AA6158(&qword_100EAE598, (void (*)(uint64_t))&type metadata accessor for DetailChartExtrema);
  dispatch thunk of Hashable.hash(into:)();
  type metadata accessor for ConditionUnits();
  sub_100AA6158(&qword_100E6BF90, (void (*)(uint64_t))&type metadata accessor for ConditionUnits);
  dispatch thunk of Hashable.hash(into:)();
  type metadata accessor for DetailChartCondition();
  sub_100AA6158(&qword_100E63988, (void (*)(uint64_t))&type metadata accessor for DetailChartCondition);
  return dispatch thunk of Hashable.hash(into:)();
}

uint64_t sub_100A976A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ExtremaResult();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10017DF08(&qword_100E6BF98);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10017DF08(&qword_100E6BCB0);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v45 - v15;
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)&v45 - v18;
  if ((static Date.== infix(_:_:)() & 1) == 0) {
    goto LABEL_22;
  }
  uint64_t v48 = (int *)type metadata accessor for ConditionDetailViewModelFactory.DetailChartViewModelCacheKey(0);
  uint64_t v20 = v48[5];
  uint64_t v21 = *(void *)(a1 + v20);
  uint64_t v22 = *(void *)(a1 + v20 + 8);
  char v23 = (void *)(a2 + v20);
  BOOL v24 = v21 == *v23 && v22 == v23[1];
  if (v24 || (char v25 = _stringCompareWithSmolCheck(_:_:expecting:)(), v26 = 0, (v25 & 1) != 0))
  {
    uint64_t v27 = a1;
    uint64_t v28 = a2;
    uint64_t v29 = v48;
    uint64_t v30 = v48[6];
    uint64_t v46 = v27;
    uint64_t v47 = v5;
    sub_1001B49E8(v27 + v30, (uint64_t)v19, &qword_100E6BCB0);
    uint64_t v31 = v29[6];
    uint64_t v32 = v28;
    sub_1001B49E8(v28 + v31, (uint64_t)v16, &qword_100E6BCB0);
    uint64_t v33 = (uint64_t)&v10[*(int *)(v8 + 48)];
    sub_1001B49E8((uint64_t)v19, (uint64_t)v10, &qword_100E6BCB0);
    sub_1001B49E8((uint64_t)v16, v33, &qword_100E6BCB0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v10, 1, v4) == 1)
    {
      sub_100178110((uint64_t)v16, &qword_100E6BCB0);
      sub_100178110((uint64_t)v19, &qword_100E6BCB0);
      if (_s7Weather24LocationCompositionStateOwet_0(v33, 1, v4) == 1)
      {
        sub_100178110((uint64_t)v10, &qword_100E6BCB0);
LABEL_14:
        uint64_t v37 = v48;
        uint64_t v38 = v48[7];
        uint64_t v39 = v46;
        double v40 = *(double *)(v46 + v38);
        double v41 = *(double *)(v46 + v38 + 8);
        uint64_t v42 = (double *)(v32 + v38);
        BOOL v43 = v40 == *v42 && v41 == v42[1];
        if (v43
          && (static DetailChartExtrema.== infix(_:_:)() & 1) != 0
          && (static ConditionUnits.== infix(_:_:)() & 1) != 0)
        {
          char v26 = sub_100889C5C(v39 + v37[10], v32 + v37[10]);
          return v26 & 1;
        }
LABEL_22:
        char v26 = 0;
        return v26 & 1;
      }
    }
    else
    {
      sub_1001B49E8((uint64_t)v10, (uint64_t)v13, &qword_100E6BCB0);
      if (_s7Weather24LocationCompositionStateOwet_0(v33, 1, v4) != 1)
      {
        uint64_t v34 = v47;
        (*(void (**)(char *, uint64_t, uint64_t))(v47 + 32))(v7, v33, v4);
        sub_100AA6158(&qword_100E6BFA0, (void (*)(uint64_t))&type metadata accessor for ExtremaResult);
        char v35 = dispatch thunk of static Equatable.== infix(_:_:)();
        uint64_t v36 = *(void (**)(char *, uint64_t))(v34 + 8);
        v36(v7, v4);
        sub_100178110((uint64_t)v16, &qword_100E6BCB0);
        sub_100178110((uint64_t)v19, &qword_100E6BCB0);
        v36(v13, v4);
        sub_100178110((uint64_t)v10, &qword_100E6BCB0);
        if ((v35 & 1) == 0) {
          goto LABEL_22;
        }
        goto LABEL_14;
      }
      sub_100178110((uint64_t)v16, &qword_100E6BCB0);
      sub_100178110((uint64_t)v19, &qword_100E6BCB0);
      (*(void (**)(char *, uint64_t))(v47 + 8))(v13, v4);
    }
    sub_100178110((uint64_t)v10, &qword_100E6BF98);
    goto LABEL_22;
  }
  return v26 & 1;
}

void sub_100A97B0C()
{
  uint64_t v1 = type metadata accessor for ExtremaResult();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10017DF08(&qword_100E6BCB0);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for Date();
  sub_100AA6158((unint64_t *)&qword_100E63978, (void (*)(uint64_t))&type metadata accessor for Date);
  dispatch thunk of Hashable.hash(into:)();
  uint64_t v8 = type metadata accessor for ConditionDetailViewModelFactory.DetailPlatterViewModelsCacheKey(0);
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  sub_1001B49E8(v0 + *(int *)(v8 + 24), (uint64_t)v7, &qword_100E6BCB0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v7, 1, v1) == 1)
  {
    Hasher._combine(_:)(0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v4, v7, v1);
    Hasher._combine(_:)(1u);
    sub_100AA6158(&qword_100E6BF88, (void (*)(uint64_t))&type metadata accessor for ExtremaResult);
    dispatch thunk of Hashable.hash(into:)();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  type metadata accessor for ConditionUnits();
  sub_100AA6158(&qword_100E6BF90, (void (*)(uint64_t))&type metadata accessor for ConditionUnits);
  dispatch thunk of Hashable.hash(into:)();
  type metadata accessor for DetailCondition();
  sub_100AA6158(&qword_100EA5C28, (void (*)(uint64_t))&type metadata accessor for DetailCondition);
  dispatch thunk of Hashable.hash(into:)();
  Hasher._combine(_:)(*(unsigned char *)(v0 + *(int *)(v8 + 36)));
}

uint64_t sub_100A97E28(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ExtremaResult();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10017DF08(&qword_100E6BF98);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10017DF08(&qword_100E6BCB0);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v40 - v15;
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)&v40 - v18;
  if ((static Date.== infix(_:_:)() & 1) == 0) {
    goto LABEL_17;
  }
  uint64_t v43 = type metadata accessor for ConditionDetailViewModelFactory.DetailPlatterViewModelsCacheKey(0);
  uint64_t v20 = *(int *)(v43 + 20);
  uint64_t v21 = *(void *)(a1 + v20);
  uint64_t v22 = *(void *)(a1 + v20 + 8);
  char v23 = (void *)(a2 + v20);
  BOOL v24 = v21 == *v23 && v22 == v23[1];
  if (v24 || (char v25 = _stringCompareWithSmolCheck(_:_:expecting:)(), v26 = 0, (v25 & 1) != 0))
  {
    uint64_t v27 = a1;
    uint64_t v28 = a2;
    uint64_t v29 = v43;
    uint64_t v30 = *(int *)(v43 + 24);
    uint64_t v41 = v27;
    uint64_t v42 = v5;
    sub_1001B49E8(v27 + v30, (uint64_t)v19, &qword_100E6BCB0);
    uint64_t v31 = *(int *)(v29 + 24);
    uint64_t v32 = v28;
    sub_1001B49E8(v28 + v31, (uint64_t)v16, &qword_100E6BCB0);
    uint64_t v33 = (uint64_t)&v10[*(int *)(v8 + 48)];
    sub_1001B49E8((uint64_t)v19, (uint64_t)v10, &qword_100E6BCB0);
    sub_1001B49E8((uint64_t)v16, v33, &qword_100E6BCB0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v10, 1, v4) == 1)
    {
      sub_100178110((uint64_t)v16, &qword_100E6BCB0);
      sub_100178110((uint64_t)v19, &qword_100E6BCB0);
      if (_s7Weather24LocationCompositionStateOwet_0(v33, 1, v4) == 1)
      {
        sub_100178110((uint64_t)v10, &qword_100E6BCB0);
LABEL_14:
        uint64_t v37 = v43;
        uint64_t v38 = v41;
        if (static ConditionUnits.== infix(_:_:)() & 1) != 0 && (static DetailCondition.== infix(_:_:)())
        {
          char v26 = *(unsigned char *)(v38 + *(int *)(v37 + 36)) ^ *(unsigned char *)(v32 + *(int *)(v37 + 36)) ^ 1;
          return v26 & 1;
        }
LABEL_17:
        char v26 = 0;
        return v26 & 1;
      }
    }
    else
    {
      sub_1001B49E8((uint64_t)v10, (uint64_t)v13, &qword_100E6BCB0);
      if (_s7Weather24LocationCompositionStateOwet_0(v33, 1, v4) != 1)
      {
        uint64_t v34 = v42;
        (*(void (**)(char *, uint64_t, uint64_t))(v42 + 32))(v7, v33, v4);
        sub_100AA6158(&qword_100E6BFA0, (void (*)(uint64_t))&type metadata accessor for ExtremaResult);
        char v35 = dispatch thunk of static Equatable.== infix(_:_:)();
        uint64_t v36 = *(void (**)(char *, uint64_t))(v34 + 8);
        v36(v7, v4);
        sub_100178110((uint64_t)v16, &qword_100E6BCB0);
        sub_100178110((uint64_t)v19, &qword_100E6BCB0);
        v36(v13, v4);
        sub_100178110((uint64_t)v10, &qword_100E6BCB0);
        if ((v35 & 1) == 0) {
          goto LABEL_17;
        }
        goto LABEL_14;
      }
      sub_100178110((uint64_t)v16, &qword_100E6BCB0);
      sub_100178110((uint64_t)v19, &qword_100E6BCB0);
      (*(void (**)(char *, uint64_t))(v42 + 8))(v13, v4);
    }
    sub_100178110((uint64_t)v10, &qword_100E6BF98);
    goto LABEL_17;
  }
  return v26 & 1;
}

Swift::Int sub_100A98278(void (*a1)(unsigned char *))
{
  Hasher.init(_seed:)();
  a1(v3);
  return Hasher._finalize()();
}

Swift::Int sub_100A982C0()
{
  return sub_100A98278((void (*)(unsigned char *))sub_100A9732C);
}

Swift::Int sub_100A982F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100A98354(a1, a2, a3, (void (*)(unsigned char *))sub_100A9732C);
}

Swift::Int sub_100A9830C()
{
  return sub_100A98278((void (*)(unsigned char *))sub_100A97B0C);
}

Swift::Int sub_100A9833C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100A98354(a1, a2, a3, (void (*)(unsigned char *))sub_100A97B0C);
}

Swift::Int sub_100A98354(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(unsigned char *))
{
  Hasher.init(_seed:)();
  a4(v6);
  return Hasher._finalize()();
}

uint64_t sub_100A9839C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = v2;
  uint64_t v440 = a1;
  uint64_t v425 = a2;
  uint64_t v441 = type metadata accessor for ConditionDetailViewModel(0);
  sub_100162E4C();
  __chkstk_darwin(v6);
  sub_100109314();
  sub_100109328(v7);
  uint64_t v8 = type metadata accessor for LocationDetailsKind();
  uint64_t v9 = sub_100109308(v8);
  __chkstk_darwin(v9);
  sub_100109314();
  sub_100109328(v10);
  uint64_t v409 = type metadata accessor for LocationDetailEntity();
  sub_100179C0C();
  uint64_t v408 = v11;
  __chkstk_darwin(v12);
  sub_100109314();
  sub_100109328(v13);
  uint64_t v419 = type metadata accessor for LocationEntity();
  sub_100179C0C();
  uint64_t v404 = v14;
  __chkstk_darwin(v15);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v16);
  sub_100128F8C();
  sub_100109338(v17);
  uint64_t v18 = sub_10017DF08(&qword_100E820B8);
  uint64_t v19 = sub_100164920(v18);
  uint64_t v395 = v20;
  __chkstk_darwin(v19);
  sub_100162EF8();
  uint64_t v449 = v21;
  sub_1001626D4();
  __chkstk_darwin(v22);
  sub_100109770();
  uint64_t v453 = (uint64_t)v23;
  sub_1001626D4();
  __chkstk_darwin(v24);
  sub_100128F8C();
  sub_100109328(v25);
  uint64_t v422 = type metadata accessor for DetailCondition();
  sub_100179C0C();
  uint64_t v421 = v26;
  __chkstk_darwin(v27);
  sub_100109314();
  sub_100109328(v28);
  uint64_t v406 = type metadata accessor for ConditionUnits();
  sub_100179C0C();
  uint64_t v405 = v29;
  __chkstk_darwin(v30);
  sub_100109314();
  sub_100109328(v31);
  uint64_t v384 = type metadata accessor for DetailChartCondition();
  sub_100179C0C();
  uint64_t v382 = v32;
  __chkstk_darwin(v33);
  sub_100109314();
  uint64_t v35 = sub_100109328(v34);
  type metadata accessor for ConditionDetailChartInput(v35);
  sub_100179C0C();
  uint64_t v450 = v37;
  uint64_t v451 = v36;
  __chkstk_darwin(v36);
  sub_100109314();
  sub_100109328(v38);
  v454 = (void (*)(void))type metadata accessor for DetailChartsViewModel();
  sub_100179C0C();
  uint64_t v448 = v39;
  __chkstk_darwin(v40);
  sub_100162EF8();
  unint64_t v452 = v41;
  sub_1001626D4();
  __chkstk_darwin(v42);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v43);
  sub_100128F8C();
  sub_100109338(v44);
  uint64_t v45 = sub_10017DF08(&qword_100E82140);
  uint64_t v46 = sub_100109308(v45);
  __chkstk_darwin(v46);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v47);
  sub_100128F8C();
  sub_100109338(v48);
  uint64_t v49 = sub_10017DF08(&qword_100E6BCB0);
  uint64_t v50 = sub_100109308(v49);
  __chkstk_darwin(v50);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v51);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v52);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v53);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v54);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v55);
  sub_100128F8C();
  sub_100109338(v56);
  uint64_t v57 = sub_10017DF08(&qword_100E711F8);
  uint64_t v58 = sub_100109308(v57);
  __chkstk_darwin(v58);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v59);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v60);
  sub_100128F8C();
  sub_100109328(v61);
  uint64_t v396 = type metadata accessor for DetailChartSelection();
  sub_100162E4C();
  __chkstk_darwin(v62);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v63);
  sub_100128F8C();
  sub_100109338(v64);
  uint64_t v65 = sub_10017DF08(&qword_100E64848);
  uint64_t v66 = sub_100109308(v65);
  __chkstk_darwin(v66);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v67);
  sub_100128F8C();
  uint64_t v69 = sub_100109328(v68);
  uint64_t v428 = (int *)type metadata accessor for ConditionDetailViewModel.Model(v69);
  sub_100162E4C();
  __chkstk_darwin(v70);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v71);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v72);
  sub_100128F8C();
  sub_100109338(v73);
  uint64_t v74 = sub_10017DF08(&qword_100EAE570);
  uint64_t v75 = sub_100109308(v74);
  __chkstk_darwin(v75);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v76);
  sub_100128F8C();
  uint64_t v78 = sub_100109328(v77);
  uint64_t v426 = (int *)type metadata accessor for ConditionDetailViewModelFactory.CachedChartModelInputs(v78);
  sub_100162E4C();
  __chkstk_darwin(v79);
  sub_100109314();
  sub_100109328(v80);
  uint64_t v423 = type metadata accessor for TimeZone();
  sub_100179C0C();
  uint64_t v82 = v81;
  __chkstk_darwin(v83);
  sub_100163770();
  uint64_t v411 = type metadata accessor for Calendar();
  sub_100179C0C();
  uint64_t v410 = v84;
  __chkstk_darwin(v85);
  sub_100109314();
  sub_100109328(v86);
  uint64_t v87 = type metadata accessor for Date();
  sub_100179C0C();
  uint64_t v89 = v88;
  __chkstk_darwin(v90);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v91);
  uint64_t v93 = (char *)&v374 - v92;
  uint64_t v94 = type metadata accessor for ConditionDetailInput(0);
  uint64_t v95 = sub_100109308(v94);
  __chkstk_darwin(v95);
  sub_100162F18();
  uint64_t v96 = type metadata accessor for ConditionDetailInput.Input(0);
  sub_100162E4C();
  __chkstk_darwin(v97);
  uint64_t v99 = (char *)&v374 - ((v98 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v436 = type metadata accessor for OSSignpostID();
  sub_100179C0C();
  uint64_t v435 = v100;
  __chkstk_darwin(v101);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v102);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v103);
  uint64_t v105 = (char *)&v374 - v104;
  uint64_t v445 = (void *)v5;
  id v106 = *(id *)(v5 + 520);
  OSSignpostID.init(log:)();
  static os_signpost_type_t.begin.getter();
  id v434 = v106;
  uint64_t v424 = v105;
  os_signpost(_:dso:log:name:signpostID:)();
  sub_10019DD78((uint64_t)v440, v4, (void (*)(void))type metadata accessor for ConditionDetailInput);
  if (_s7Weather24LocationCompositionStateOwet_0(v4, 1, v96) == 1)
  {
    sub_10019E1D8(v4, (void (*)(void))type metadata accessor for ConditionDetailInput);
    uint64_t v107 = v425;
    _s7Weather24LocationCompositionStateOwst_0(v425, 1, 1, (uint64_t)v428);
    sub_100185F64(v107);
LABEL_3:
    uint64_t v108 = v436;
    uint64_t v109 = v435;
    goto LABEL_46;
  }
  sub_100183754(v4, (uint64_t)v99, (void (*)(void))type metadata accessor for ConditionDetailInput.Input);
  uint64_t v110 = v89;
  uint64_t v111 = *(void *)(v89 + 16);
  uint64_t v414 = v87;
  uint64_t v398 = v89 + 16;
  uint64_t v397 = v111;
  sub_100162808();
  v112();
  uint64_t v446 = (int *)v96;
  uint64_t v412 = &v99[*(int *)(v96 + 52)];
  Location.timeZone.getter();
  static Calendar.currentCalendar(with:)();
  uint64_t v113 = *(void (**)(char *, uint64_t))(v82 + 8);
  uint64_t v376 = v3;
  uint64_t v377 = v82 + 8;
  uint64_t v375 = v113;
  v113(v3, v423);
  uint64_t v114 = v445;
  uint64_t v115 = (uint64_t)v445 + OBJC_IVAR____TtC7Weather31ConditionDetailViewModelFactory_cachedChartModelInputs;
  swift_beginAccess();
  uint64_t v116 = v439;
  sub_1001B49E8(v115, v439, &qword_100EAE570);
  int v117 = _s7Weather24LocationCompositionStateOwet_0(v116, 1, (uint64_t)v426);
  v413 = v93;
  uint64_t v118 = v99;
  uint64_t v431 = v99;
  uint64_t v379 = v110;
  uint64_t v378 = v115;
  if (v117 == 1)
  {
    sub_100178110(v116, &qword_100EAE570);
    sub_1001D1480();
    goto LABEL_8;
  }
  uint64_t v119 = v438;
  sub_100183754(v116, (uint64_t)v438, (void (*)(void))type metadata accessor for ConditionDetailViewModelFactory.CachedChartModelInputs);
  uint64_t v120 = (uint64_t)v114 + OBJC_IVAR____TtC7Weather31ConditionDetailViewModelFactory_cachedModel;
  swift_beginAccess();
  uint64_t v121 = (uint64_t)v437;
  sub_1001B49E8(v120, (uint64_t)v437, &qword_100E64848);
  uint64_t v122 = sub_10011C004();
  if (_s7Weather24LocationCompositionStateOwet_0(v122, v123, v441) == 1)
  {
    sub_10019E1D8((uint64_t)v119, (void (*)(void))type metadata accessor for ConditionDetailViewModelFactory.CachedChartModelInputs);
    sub_100178110(v121, &qword_100E64848);
    sub_1001D1480();
    goto LABEL_8;
  }
  uint64_t v280 = sub_10011C004();
  uint64_t v281 = (uint64_t)v428;
  int v283 = _s7Weather24LocationCompositionStateOwet_0(v280, v282, (uint64_t)v428);
  uint64_t v284 = v446;
  if (v283 == 1)
  {
    sub_10019E1D8((uint64_t)v119, (void (*)(void))type metadata accessor for ConditionDetailViewModelFactory.CachedChartModelInputs);
    sub_10019E1D8(v121, (void (*)(void))type metadata accessor for ConditionDetailViewModel);
    sub_1001D1480();
    goto LABEL_8;
  }
  uint64_t v285 = (uint64_t)v427;
  sub_100183754(v121, (uint64_t)v427, (void (*)(void))type metadata accessor for ConditionDetailViewModel.Model);
  uint64_t v286 = *(int *)(v281 + 28);
  uint64_t v183 = v285;
  uint64_t v287 = v394;
  sub_1001B49E8(v285 + v286, v394, &qword_100E711F8);
  uint64_t v288 = sub_10011C004();
  uint64_t v289 = v396;
  if (_s7Weather24LocationCompositionStateOwet_0(v288, v290, v396) == 1)
  {
    sub_10019E1D8(v183, (void (*)(void))type metadata accessor for ConditionDetailViewModel.Model);
    uint64_t v291 = v119;
LABEL_53:
    sub_10019E1D8((uint64_t)v291, (void (*)(void))type metadata accessor for ConditionDetailViewModelFactory.CachedChartModelInputs);
    sub_100178110(v287, &qword_100E711F8);
LABEL_54:
    sub_1001D1480();
    goto LABEL_8;
  }
  uint64_t v174 = v393;
  sub_100183754(v287, (uint64_t)v393, (void (*)(void))type metadata accessor for DetailChartSelection);
  uint64_t v287 = v392;
  sub_1001B49E8((uint64_t)&v118[v284[20]], v392, &qword_100E711F8);
  uint64_t v292 = sub_10011C004();
  if (_s7Weather24LocationCompositionStateOwet_0(v292, v293, v289) == 1)
  {
    sub_10019E1D8(v183, (void (*)(void))type metadata accessor for ConditionDetailViewModel.Model);
    sub_10019E1D8((uint64_t)v174, (void (*)(void))type metadata accessor for DetailChartSelection);
    uint64_t v291 = v438;
    goto LABEL_53;
  }
  uint64_t v176 = v391;
  sub_100183754(v287, v391, (void (*)(void))type metadata accessor for DetailChartSelection);
  BOOL v294 = *(void *)v176 == *v174 && *(void *)(v176 + 8) == v174[1];
  if (!v294 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
  {
LABEL_80:
    sub_10019E1D8(v176, (void (*)(void))type metadata accessor for DetailChartSelection);
    uint64_t v345 = v183;
    goto LABEL_81;
  }
  uint64_t v295 = static Date.== infix(_:_:)();
  if ((v295 & 1) == 0)
  {
    sub_10019E1D8(v176, (void (*)(void))type metadata accessor for DetailChartSelection);
    uint64_t v345 = (uint64_t)v427;
LABEL_81:
    sub_10019E1D8(v345, (void (*)(void))type metadata accessor for ConditionDetailViewModel.Model);
    uint64_t v346 = sub_10019E1D8((uint64_t)v174, (void (*)(void))type metadata accessor for DetailChartSelection);
    sub_1001D25E8(v346, (void (*)(void))type metadata accessor for ConditionDetailViewModelFactory.CachedChartModelInputs);
    goto LABEL_54;
  }
  uint64_t v296 = v118;
  uint64_t v297 = v284[7];
  uint64_t v298 = *(void *)&v296[v297];
  uint64_t v181 = v427;
  if (*(void *)(v298 + 16) == *(void *)(v427[2] + 16))
  {
    __chkstk_darwin(v295);
    uint64_t v373 = v174;
    swift_bridgeObjectRetain();
    uint64_t v180 = (uint64_t)v174;
    unint64_t v299 = sub_10013CB74(sub_100AA64F0, (uint64_t)&v371, v298, type metadata accessor for ConditionDetailChartInputs);
    char v301 = v300;
    swift_bridgeObjectRelease();
    uint64_t v380 = 0;
    if (v301) {
      goto LABEL_85;
    }
    if ((v299 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else
    {
      uint64_t v302 = (uint64_t)v431;
      uint64_t v303 = *(void *)&v431[v297];
      uint64_t v304 = v389;
      uint64_t v305 = v388;
      if (v299 < *(void *)(v303 + 16))
      {
        uint64_t v306 = type metadata accessor for ConditionDetailChartInputs(0);
        sub_100179EF0();
        uint64_t v453 = (*(unsigned __int8 *)(v307 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v307 + 80);
        unint64_t v452 = *(void *)(v308 + 72) * v299;
        uint64_t v309 = (char *)(v303 + v453 + v452);
        type metadata accessor for ExtremaResult();
        uint64_t v310 = sub_10011C108((uint64_t)&v418);
        _s7Weather24LocationCompositionStateOwst_0(v310, 1, 1, v311);
        sub_10012BA6C();
        uint64_t v312 = v438;
        sub_1001B49E8((uint64_t)&v438[v313], v305, &qword_100E6BCB0);
        uint64_t v314 = type metadata accessor for LollipopViewModel();
        uint64_t v315 = _s7Weather24LocationCompositionStateOwst_0(v304, 1, 1, v314);
        __chkstk_darwin(v315);
        *(&v374 - 10) = (uint64_t)v445;
        *(&v374 - 9) = (uint64_t)v309;
        *(&v374 - 8) = v302;
        *(&v374 - 7) = (uint64_t)v312;
        *(&v374 - 6) = v180;
        *(&v374 - 5) = v316;
        uint64_t v371 = v317;
        uint64_t v372 = (uint64_t)v413;
        uint64_t v373 = v443;
        swift_bridgeObjectRetain();
        sub_10012A1EC();
        uint64_t v319 = v318;
        swift_bridgeObjectRelease();
        if (v299 < *(void *)(v427[2] + 16))
        {
          sub_10011C108((uint64_t)&v417);
          sub_100189690();
          v320();
          *(void *)(v180 + *((int *)v454 + 5)) = v319;
          uint64_t v321 = v385;
          sub_100ABAB50(v180, v299, v385);
          uint64_t v322 = *(void *)(v302 + v297);
          uint64_t v323 = v384;
          if (v299 < *(void *)(v322 + 16))
          {
            uint64_t v324 = v302;
            uint64_t v325 = *(void *)(*(void *)(v322 + v453 + v452 + *(int *)(v306 + 20)) + 16);
            if (v325)
            {
              sub_10017E6E0();
              uint64_t v328 = v326 + v327;
              LODWORD(v454) = enum case for DetailChartCondition.uvIndex(_:);
              uint64_t v329 = (void (**)(uint64_t, void, uint64_t))(v382 + 104);
              uint64_t v331 = *(void (**)(void))(v330 + 72);
              unint64_t v452 = v326;
              uint64_t v453 = (uint64_t)v331;
              swift_bridgeObjectRetain_n();
              uint64_t v332 = v383;
              uint64_t v333 = v390;
              while (1)
              {
                sub_10019DD78(v328, v332, (void (*)(void))type metadata accessor for ConditionDetailChartInput);
                type metadata accessor for ConditionDetailChartDataInput(0);
                (*v329)(v333, v454, v323);
                sub_100AA6158(&qword_100E9D010, (void (*)(uint64_t))&type metadata accessor for DetailChartCondition);
                dispatch thunk of RawRepresentable.rawValue.getter();
                dispatch thunk of RawRepresentable.rawValue.getter();
                if (v456 == v455[0] && v457 == v455[1]) {
                  break;
                }
                char v335 = _stringCompareWithSmolCheck(_:_:expecting:)();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                sub_100164F40();
                v336();
                sub_10019E1D8(v332, (void (*)(void))type metadata accessor for ConditionDetailChartInput);
                if (v335) {
                  goto LABEL_87;
                }
                v328 += v453;
                if (!--v325)
                {
                  swift_bridgeObjectRelease_n();
                  uint64_t v324 = (uint64_t)v431;
                  uint64_t v321 = v385;
                  goto LABEL_76;
                }
              }
              swift_bridgeObjectRelease_n();
              sub_100164F40();
              v349();
              sub_10019E1D8(v332, (void (*)(void))type metadata accessor for ConditionDetailChartInput);
LABEL_87:
              swift_bridgeObjectRelease_n();
              unint64_t v452 = (unint64_t)sub_100A9CA08((uint64_t)v431, (uint64_t)v438, v387, (uint64_t)&v438[v426[6]], v388, (uint64_t)&v438[v426[8]], v389, v431[v446[25]]);
              sub_10019E1D8(v386, (void (*)(void))type metadata accessor for DetailChartsViewModel);
              v454 = (void (*)(void))type metadata accessor for DetailChartSelection;
              sub_10019E1D8(v391, (void (*)(void))type metadata accessor for DetailChartSelection);
              uint64_t v453 = (uint64_t)type metadata accessor for ConditionDetailViewModel.Model;
              sub_10019E1D8((uint64_t)v427, (void (*)(void))type metadata accessor for ConditionDetailViewModel.Model);
              uint64_t v350 = v385;
              uint64_t v351 = *v385;
              uint64_t v449 = v385[1];
              uint64_t v450 = v385[2];
              uint64_t v451 = v351;
              uint64_t v341 = v428;
              uint64_t v352 = v381;
              sub_100189690();
              v353();
              sub_1001B49E8((uint64_t)v350 + v341[7], (uint64_t)v352 + v341[7], &qword_100E711F8);
              uint64_t v354 = *(void *)((char *)v350 + v341[8]);
              sub_10008B8B4();
              v355();
              uint64_t v356 = (char *)v350 + v341[11];
              uint64_t v358 = *(void *)v356;
              uint64_t v357 = *((void *)v356 + 1);
              uint64_t v359 = *((void *)v356 + 2);
              char v360 = v356[24];
              type metadata accessor for Location();
              sub_100162E4C();
              uint64_t v344 = v387;
              sub_10008B8B4();
              v361();
              sub_10008B8B4();
              v362();
              uint64_t v363 = v450;
              uint64_t v364 = v449;
              *uint64_t v352 = v451;
              v352[1] = v364;
              v352[2] = v363;
              *(uint64_t *)((char *)v352 + v341[8]) = v354;
              *(uint64_t *)((char *)v352 + v341[10]) = v452;
              uint64_t v365 = (char *)v352 + v341[11];
              *(void *)uint64_t v365 = v358;
              *((void *)v365 + 1) = v357;
              *((void *)v365 + 2) = v359;
              v365[24] = v360;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              sub_10019E1D8((uint64_t)v350, (void (*)(void))v453);
              sub_10019E1D8((uint64_t)v393, v454);
              uint64_t v321 = v350;
              uint64_t v342 = v389;
              sub_10019E1D8((uint64_t)v438, (void (*)(void))type metadata accessor for ConditionDetailViewModelFactory.CachedChartModelInputs);
              uint64_t v366 = sub_1001A0260();
              v367(v366);
              sub_100172510();
              sub_100162F0C();
              v368();
              sub_10019E1D8((uint64_t)v431, (void (*)(void))type metadata accessor for ConditionDetailInput.Input);
              uint64_t v369 = (uint64_t)v352;
              uint64_t v343 = v388;
              sub_100183754(v369, (uint64_t)v321, (void (*)(void))type metadata accessor for ConditionDetailViewModel.Model);
            }
            else
            {
LABEL_76:
              sub_10019E1D8(v386, (void (*)(void))type metadata accessor for DetailChartsViewModel);
              sub_10019E1D8(v391, (void (*)(void))type metadata accessor for DetailChartSelection);
              sub_10019E1D8((uint64_t)v427, (void (*)(void))type metadata accessor for ConditionDetailViewModel.Model);
              uint64_t v337 = sub_10019E1D8((uint64_t)v393, (void (*)(void))type metadata accessor for DetailChartSelection);
              sub_1001D25E8(v337, (void (*)(void))type metadata accessor for ConditionDetailViewModelFactory.CachedChartModelInputs);
              uint64_t v338 = sub_1001A0260();
              v339(v338);
              sub_100172510();
              sub_100162F0C();
              v340();
              sub_10019E1D8(v324, (void (*)(void))type metadata accessor for ConditionDetailInput.Input);
              uint64_t v341 = v428;
              uint64_t v342 = v389;
              uint64_t v343 = v388;
              uint64_t v344 = v387;
            }
            uint64_t v370 = v425;
            sub_100183754((uint64_t)v321, v425, (void (*)(void))type metadata accessor for ConditionDetailViewModel.Model);
            _s7Weather24LocationCompositionStateOwst_0(v370, 0, 1, (uint64_t)v341);
            sub_100185F64(v370);
            sub_100178110(v342, &qword_100E82140);
            sub_100178110(v343, &qword_100E6BCB0);
            sub_100178110(v344, &qword_100E6BCB0);
            goto LABEL_3;
          }
LABEL_92:
          __break(1u);
LABEL_93:
          sub_100187288();
          uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
          __break(1u);
          return result;
        }
LABEL_91:
        __break(1u);
        goto LABEL_92;
      }
    }
    __break(1u);
    goto LABEL_91;
  }
LABEL_83:
  sub_10019E1D8(v176, (void (*)(void))type metadata accessor for DetailChartSelection);
  sub_10019E1D8((uint64_t)v181, (void (*)(void))type metadata accessor for ConditionDetailViewModel.Model);
  uint64_t v347 = sub_10019E1D8((uint64_t)v174, (void (*)(void))type metadata accessor for DetailChartSelection);
  sub_1001D25E8(v347, (void (*)(void))type metadata accessor for ConditionDetailViewModelFactory.CachedChartModelInputs);
  sub_1001D1480();
LABEL_8:
  type metadata accessor for UnitManager();
  static UnitManager.standard.getter();
  UnitManager.conditionUnits(locale:)();
  swift_release();
  sub_10017DF08(&qword_100EAE578);
  uint64_t v124 = type metadata accessor for DetailChartConditionInfo();
  uint64_t v125 = *(void *)(v124 - 8);
  uint64_t v440 = (void *)(v124 - 8);
  unint64_t v126 = (*(unsigned __int8 *)(v125 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v125 + 80);
  uint64_t v439 = *(void *)(v125 + 72);
  uint64_t v127 = swift_allocObject();
  *(_OWORD *)(v127 + 16) = xmmword_100C34ED0;
  uint64_t v396 = v127;
  uint64_t v437 = (void *)(v127 + v126);
  uint64_t v128 = enum case for TemperatureChartKind.actual(_:);
  LODWORD(v394) = enum case for TemperatureChartKind.actual(_:);
  uint64_t v129 = type metadata accessor for TemperatureChartKind();
  sub_100162E4C();
  uint64_t v131 = *(void (**)(uint64_t, uint64_t, uint64_t))(v130 + 104);
  uint64_t v132 = v420;
  v131(v420, v128, v129);
  uint64_t v133 = enum case for DetailCondition.conditions(_:);
  uint64_t v134 = v421;
  uint64_t v135 = *(void (**)(void))(v421 + 104);
  uint64_t v136 = v422;
  ((void (*)(uint64_t, void, uint64_t))v135)(v132, enum case for DetailCondition.conditions(_:), v422);
  uint64_t v393 = (void *)DetailCondition.title.getter();
  uint64_t v392 = v137;
  uint64_t v427 = *(void **)(v134 + 8);
  uint64_t v438 = (char *)(v134 + 8);
  ((void (*)(uint64_t, uint64_t))v427)(v132, v136);
  sub_10012BA6C();
  uint64_t v138 = v437;
  uint64_t v140 = (char *)v437 + v139;
  v131((uint64_t)v437 + v139, v394, v129);
  ((void (*)(char *, uint64_t, uint64_t))v135)(v140, v133, v136);
  uint64_t v141 = v392;
  *uint64_t v138 = v393;
  v138[1] = v141;
  uint64_t v142 = (void *)((char *)v138 + v439);
  sub_10017AEFC();
  v135();
  uint64_t v143 = DetailCondition.title.getter();
  uint64_t v394 = v144;
  uint64_t v145 = (void (*)(void))v427;
  ((void (*)(uint64_t, uint64_t))v427)(v132, v136);
  sub_10017AEFC();
  v135();
  uint64_t v146 = v394;
  uint64_t *v142 = v143;
  v142[1] = v146;
  uint64_t v147 = (uint64_t)v437;
  sub_10017AEFC();
  v135();
  uint64_t v394 = DetailCondition.title.getter();
  sub_100162CB0(v148, (uint64_t)&v423);
  sub_100164F40();
  v145();
  sub_10017AEFC();
  v135();
  sub_100176E94();
  uint64_t v149 = (void *)(v147 + 3 * v439);
  sub_10017AEFC();
  v135();
  uint64_t v394 = DetailCondition.title.getter();
  uint64_t v151 = v150;
  uint64_t v152 = (void (*)(void))v427;
  sub_100164F40();
  v152();
  sub_10017AEFC();
  v135();
  *uint64_t v149 = v394;
  v149[1] = v151;
  uint64_t v153 = (uint64_t)v437;
  uint64_t v154 = v439;
  sub_10017AEFC();
  v135();
  uint64_t v394 = DetailCondition.title.getter();
  uint64_t v156 = sub_100162CB0(v155, (uint64_t)&v423);
  ((void (*)(uint64_t))v152)(v156);
  sub_10017AEFC();
  v135();
  sub_100176E94();
  uint64_t v157 = (uint64_t *)(v153 + 5 * v154);
  sub_10017AEFC();
  v135();
  uint64_t v158 = DetailCondition.title.getter();
  uint64_t v160 = sub_100162CB0(v159, (uint64_t)&v424);
  uint64_t v161 = (void (*)(uint64_t, uint64_t))v427;
  ((void (*)(uint64_t))v427)(v160);
  sub_10017AEFC();
  v135();
  uint64_t v162 = v394;
  *uint64_t v157 = v158;
  v157[1] = v162;
  uint64_t v163 = (void *)((char *)v437 + 6 * v439);
  sub_10017AEFC();
  v135();
  uint64_t v164 = DetailCondition.title.getter();
  uint64_t v166 = v165;
  v161(v132, v136);
  sub_10012BA6C();
  sub_10017AEFC();
  v135();
  uint64_t *v163 = v164;
  v163[1] = v166;
  uint64_t v167 = type metadata accessor for ExtremaResult();
  _s7Weather24LocationCompositionStateOwst_0(v432, 1, 1, v167);
  uint64_t v168 = sub_100184834((uint64_t)&v458);
  *(void *)(v169 - 256) = v167;
  _s7Weather24LocationCompositionStateOwst_0(v168, v170, v171, v167);
  uint64_t v172 = type metadata accessor for LollipopViewModel();
  _s7Weather24LocationCompositionStateOwst_0(v433, 1, 1, v172);
  sub_10012BA6C();
  uint64_t v440 = v173;
  uint64_t v174 = *(void **)((char *)v173 + (void)v431);
  uint64_t v175 = v174[2];
  if (v175)
  {
    uint64_t v176 = type metadata accessor for ConditionDetailChartInputs(0);
    sub_100179EF0();
    char v178 = (char *)v174
         + ((*(unsigned __int8 *)(v177 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v177 + 80));
    uint64_t v180 = *(void *)(v179 + 72);
    swift_bridgeObjectRetain();
    uint64_t v181 = _swiftEmptyArrayStorage;
    while (1)
    {
      uint64_t v182 = *(void *)&v178[*(int *)(v176 + 20)];
      uint64_t v183 = *(void *)(v182 + 16);
      uint64_t v184 = v181[2];
      uint64_t v185 = v184 + v183;
      if (__OFADD__(v184, v183))
      {
        __break(1u);
LABEL_79:
        __break(1u);
        goto LABEL_80;
      }
      swift_bridgeObjectRetain();
      uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      if (!isUniquelyReferenced_nonNull_native || v185 > v181[3] >> 1)
      {
        if (v184 <= v185) {
          uint64_t v187 = v184 + v183;
        }
        else {
          uint64_t v187 = v184;
        }
        uint64_t v181 = (void *)sub_1007E9B78(isUniquelyReferenced_nonNull_native, v187, 1, (uint64_t)v181);
      }
      if (*(void *)(v182 + 16))
      {
        uint64_t v188 = v181[2];
        if ((v181[3] >> 1) - v188 < v183)
        {
          __break(1u);
          goto LABEL_83;
        }
        unint64_t v189 = (*(unsigned __int8 *)(v450 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v450 + 80);
        uint64_t v190 = *(void *)(v450 + 72);
        uint64_t v191 = (char *)v181 + v189 + v190 * v188;
        if (v182 + v189 < (unint64_t)&v191[v190 * v183] && (unint64_t)v191 < v182 + v189 + v190 * v183) {
          goto LABEL_93;
        }
        swift_arrayInitWithCopy();
        if (v183)
        {
          uint64_t v193 = v181[2];
          BOOL v194 = __OFADD__(v193, v183);
          uint64_t v195 = v193 + v183;
          if (v194)
          {
            __break(1u);
LABEL_85:
            sub_10019E1D8(v176, (void (*)(void))type metadata accessor for DetailChartSelection);
            sub_10019E1D8((uint64_t)v427, (void (*)(void))type metadata accessor for ConditionDetailViewModel.Model);
            uint64_t v348 = sub_10019E1D8(v180, (void (*)(void))type metadata accessor for DetailChartSelection);
            sub_1001D25E8(v348, (void (*)(void))type metadata accessor for ConditionDetailViewModelFactory.CachedChartModelInputs);
            goto LABEL_8;
          }
          v181[2] = v195;
        }
      }
      else if (v183)
      {
        goto LABEL_79;
      }
      swift_bridgeObjectRelease();
      v178 += v180;
      if (!--v175)
      {
        swift_bridgeObjectRelease();
        goto LABEL_31;
      }
    }
  }
  uint64_t v181 = _swiftEmptyArrayStorage;
LABEL_31:
  sub_100A965F8((uint64_t)v181);
  swift_bridgeObjectRelease();
  sub_1007E67CC();
  uint64_t v450 = v196;
  char v197 = v445;
  unsigned __int8 v198 = (char *)(v445 + 33);
  uint64_t v199 = v445[36];
  uint64_t v439 = v445[37];
  uint64_t v451 = (uint64_t)sub_1001B1E64(v445 + 33, v199);
  unint64_t v200 = v446;
  uint64_t v201 = (uint64_t)v431;
  uint64_t v202 = &v431[v446[5]];
  uint64_t v438 = &v431[v446[15]];
  unint64_t v203 = v376;
  Location.timeZone.getter();
  uint64_t v372 = v199;
  uint64_t v373 = (void *)v439;
  uint64_t v371 = v203;
  uint64_t v204 = v444;
  uint64_t v451 = dispatch thunk of DetailChartSeriesValuesCalculatorType.seriesValuesByCondition(conditions:calendar:now:currentWeather:minuteForecast:hourlyForecast:dayWeather:units:timeZone:)();
  swift_bridgeObjectRelease();
  v375(v203, v423);
  uint64_t v205 = v197[36];
  uint64_t v438 = v198;
  sub_1001B1E64(v197 + 33, v205);
  uint64_t v206 = v201 + v200[8];
  sub_1001C875C();
  *(void *)(v207 - 256) = v202;
  uint64_t v439 = v208;
  dispatch thunk of DetailChartSeriesValuesCalculatorType.calculateSelectedSecondaryExtrema(condition:primaryChartCondition:interpolationMode:hourlyForecast:units:date:)();
  char v209 = *(unsigned char *)(v201 + v200[11]);
  uint64_t v450 = v206;
  if (v209)
  {
    sub_1001B1E64(v438, v445[36]);
    sub_1001C875C();
    dispatch thunk of DetailChartSeriesValuesCalculatorType.calculateSelectedSecondaryExtrema(condition:primaryChartCondition:interpolationMode:hourlyForecast:units:date:)();
  }
  else
  {
    uint64_t v210 = sub_100184834((uint64_t)&v456);
    _s7Weather24LocationCompositionStateOwst_0(v210, v212, v213, *(void *)(v211 - 256));
  }
  id v214 = v434;
  OSSignpostID.init(log:)();
  static os_signpost_type_t.begin.getter();
  os_signpost(_:dso:log:name:signpostID:)();
  uint64_t v215 = v399;
  uint64_t v216 = sub_10011C004();
  _s7Weather24LocationCompositionStateOwst_0(v216, v217, 1, (uint64_t)v454);
  uint64_t v218 = *(void *)((char *)v440 + v201);
  v455[0] = sub_100A96C44(v215, *(void *)(v218 + 16), &qword_100E820B8);
  sub_1001AB3E0();
  __chkstk_darwin(*(void *)(v218 + 16));
  uint64_t v219 = v445;
  *(&v374 - 12) = v201;
  *(&v374 - 11) = (uint64_t)v219;
  *(&v374 - 10) = v451;
  *(&v374 - 9) = v204;
  uint64_t v220 = v432;
  uint64_t v221 = v442;
  *(&v374 - 8) = v432;
  *(&v374 - 7) = v221;
  uint64_t v222 = v430;
  uint64_t v223 = v433;
  *(&v374 - 6) = v430;
  *(&v374 - 5) = v223;
  uint64_t v371 = v413;
  uint64_t v372 = (uint64_t)v443;
  uint64_t v373 = v455;
  static OS_dispatch_queue.concurrentPerform(iterations:execute:)();
  static os_signpost_type_t.end.getter();
  os_signpost(_:dso:log:name:signpostID:)();
  id v224 = v214;
  OSSignpostID.init(log:)();
  static os_signpost_type_t.begin.getter();
  sub_1002103EC();
  uint64_t v440 = sub_100A9CA08(v201, v444, v220, v222, v221, v429, v223, *(unsigned char *)(v201 + v446[25]));
  static os_signpost_type_t.end.getter();
  sub_1002103EC();
  static LocationEntity.makeFromLocation(_:name:)();
  uint64_t v225 = v404;
  sub_100162808();
  v226();
  sub_10011C108((uint64_t)&v448);
  sub_100189690();
  v227();
  uint64_t v228 = v450;
  sub_100A9E1B8(v450, v402);
  LocationDetailEntity.init(location:date:kind:)();
  uint64_t v438 = (char *)sub_100A9E428(v228, v396);
  uint64_t v437 = (void *)v229;
  uint64_t v230 = v455[0];
  uint64_t v231 = *(void *)(v455[0] + 16);
  uint64_t v232 = _swiftEmptyArrayStorage;
  uint64_t v233 = v446;
  if (v231)
  {
    sub_10017E6E0();
    uint64_t v235 = v230 + v234;
    uint64_t v237 = *(void *)(v236 + 72);
    swift_bridgeObjectRetain();
    uint64_t v238 = v449;
    do
    {
      uint64_t v239 = (void (*)(void))v453;
      sub_1001B49E8(v235, v453, &qword_100E820B8);
      sub_100127928((uint64_t)v239, v238, &qword_100E820B8);
      if (_s7Weather24LocationCompositionStateOwet_0(v238, 1, (uint64_t)v454) == 1)
      {
        sub_100178110(v238, &qword_100E820B8);
      }
      else
      {
        uint64_t v240 = v238;
        uint64_t v241 = v447;
        sub_100183754(v240, v447, (void (*)(void))type metadata accessor for DetailChartsViewModel);
        sub_100183754(v241, v452, (void (*)(void))type metadata accessor for DetailChartsViewModel);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v232 = (void *)sub_1007E9BE8(0, v232[2] + 1, 1, (uint64_t)v232);
        }
        unint64_t v243 = v232[2];
        unint64_t v242 = v232[3];
        if (v243 >= v242 >> 1) {
          uint64_t v232 = (void *)sub_1007E9BE8(v242 > 1, v243 + 1, 1, (uint64_t)v232);
        }
        v232[2] = v243 + 1;
        sub_10017E6E0();
        sub_100183754(v452, (uint64_t)v232 + v244 + *(void *)(v245 + 72) * v243, (void (*)(void))type metadata accessor for DetailChartsViewModel);
        uint64_t v238 = v449;
      }
      v235 += v237;
      --v231;
    }
    while (v231);
    swift_bridgeObjectRelease();
    uint64_t v233 = v446;
  }
  uint64_t v246 = v417;
  sub_100189690();
  v247();
  uint64_t v248 = v400;
  sub_1001B49E8((uint64_t)&v431[v233[20]], v400, &qword_100E711F8);
  uint64_t v249 = v421;
  uint64_t v250 = v420;
  uint64_t v251 = v422;
  sub_100162808();
  v252();
  (*(void (**)(uint64_t, uint64_t))(v225 + 8))(v418, v419);
  uint64_t v253 = *(void (**)(uint64_t, uint64_t))(v435 + 8);
  uint64_t v254 = v436;
  v253(v416, v436);
  v253(v415, v254);
  uint64_t v255 = v428;
  uint64_t v256 = v407;
  type metadata accessor for Location();
  sub_100162E4C();
  sub_10008B8B4();
  v257();
  uint64_t v258 = (uint64_t)v437;
  *(void *)uint64_t v256 = v438;
  *((void *)v256 + 1) = v258;
  *((void *)v256 + 2) = v232;
  uint64_t v259 = v379;
  uint64_t v260 = v246;
  uint64_t v261 = v414;
  (*(void (**)(char *, uint64_t, uint64_t))(v379 + 32))(&v256[v255[6]], v260, v414);
  sub_100127928(v248, (uint64_t)&v256[v255[7]], &qword_100E711F8);
  *(void *)&v256[v255[8]] = v396;
  (*(void (**)(char *, uint64_t, uint64_t))(v249 + 32))(&v256[v255[9]], v250, v251);
  *(void *)&v256[v255[10]] = v440;
  uint64_t v262 = &v256[v255[11]];
  *(void *)uint64_t v262 = _swiftEmptyArrayStorage;
  *((void *)v262 + 1) = 0;
  *((void *)v262 + 2) = 0xE000000000000000;
  v262[24] = 0;
  sub_1001190D4();
  v263();
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v256, 0, 1, (uint64_t)v255);
  uint64_t v264 = v401;
  sub_10019DD78((uint64_t)v256, v401, (void (*)(void))type metadata accessor for ConditionDetailViewModel);
  sub_100185F64(v264);
  uint64_t v265 = (uint64_t)v445 + OBJC_IVAR____TtC7Weather31ConditionDetailViewModelFactory_cachedModel;
  swift_beginAccess();
  sub_1002E7C4C(v264, v265, &qword_100E64848);
  swift_endAccess();
  uint64_t v266 = v403;
  sub_100162808();
  v267();
  Swift::String v268 = v426;
  uint64_t v269 = sub_10011C108((uint64_t)&v457);
  sub_1001B49E8(v269, v270, &qword_100E6BCB0);
  sub_1001B49E8(v442, v266 + v268[7], &qword_100E6BCB0);
  *(void *)(v266 + v268[5]) = v451;
  sub_100127928(v429, v266 + v268[8], &qword_100E6BCB0);
  sub_100178110(v248, &qword_100E6BCB0);
  sub_100164F40();
  v271();
  uint64_t v272 = sub_1001A0260();
  v273(v272);
  (*(void (**)(char *, uint64_t))(v259 + 8))(v413, v261);
  sub_10019E1D8((uint64_t)v431, (void (*)(void))type metadata accessor for ConditionDetailInput.Input);
  _s7Weather24LocationCompositionStateOwst_0(v266, 0, 1, (uint64_t)v268);
  uint64_t v274 = v378;
  swift_beginAccess();
  uint64_t v275 = v266;
  uint64_t v109 = v435;
  sub_1002E7C4C(v275, v274, &qword_100EAE570);
  swift_endAccess();
  uint64_t v276 = v425;
  sub_100183754((uint64_t)v256, v425, (void (*)(void))type metadata accessor for ConditionDetailViewModel);
  uint64_t v277 = v276;
  uint64_t v108 = v436;
  sub_100185F64(v277);
  swift_bridgeObjectRelease();
  sub_100178110(v433, &qword_100E82140);
  sub_100178110(v442, &qword_100E6BCB0);
  sub_100178110(v432, &qword_100E6BCB0);
LABEL_46:
  uint64_t v278 = v424;
  static os_signpost_type_t.end.getter();
  os_signpost(_:dso:log:name:signpostID:)();
  return (*(uint64_t (**)(char *, uint64_t))(v109 + 8))(v278, v108);
}

uint64_t sub_100A9ADE4()
{
  return static Date.== infix(_:_:)() & 1;
}

uint64_t sub_100A9AE34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, char *a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, uint64_t a8@<X8>, uint64_t a9, uint64_t a10)
{
  uint64_t v16 = type metadata accessor for ConditionDetailViewModelFactory.CachedChartModelInputs(0);
  return sub_100A9AED8(a1, a2, a3, *(void *)(a4 + *(int *)(v16 + 20)), a4, a5, a6, a4 + *(int *)(v16 + 24), a8, a7, a9, a10);
}

uint64_t sub_100A9AED8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v215 = a8;
  uint64_t v193 = a7;
  uint64_t v192 = a6;
  uint64_t v219 = a5;
  uint64_t v220 = a3;
  uint64_t v221 = a2;
  uint64_t v217 = a9;
  uint64_t v226 = (char *)a11;
  uint64_t v14 = type metadata accessor for ChartViewModel(0);
  __chkstk_darwin(v14 - 8);
  uint64_t v216 = (uint64_t *)((char *)&v183 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v213 = type metadata accessor for LollipopViewModel();
  __chkstk_darwin(v213);
  uint64_t v202 = (uint64_t)&v183 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_10017DF08(&qword_100E82140);
  uint64_t v18 = __chkstk_darwin(v17 - 8);
  uint64_t v212 = (uint64_t)&v183 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  id v224 = (uint64_t *)((char *)&v183 - v20);
  uint64_t v208 = type metadata accessor for MidpointInterpolator.InterpolationMode();
  uint64_t v206 = *(void *)(v208 - 8);
  __chkstk_darwin(v208);
  uint64_t v184 = (char *)&v183 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v204 = sub_10017DF08(&qword_100E713D0);
  __chkstk_darwin(v204);
  uint64_t v205 = (void (*)(char *, uint64_t))((char *)&v183 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v23 = sub_10017DF08(&qword_100E6BF78);
  uint64_t v24 = __chkstk_darwin(v23 - 8);
  unsigned __int8 v198 = (char *)&v183 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = __chkstk_darwin(v24);
  uint64_t v232 = (char *)&v183 - v27;
  __chkstk_darwin(v26);
  uint64_t v231 = (uint64_t)&v183 - v28;
  uint64_t v29 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  uint64_t v30 = __chkstk_darwin(v29 - 8);
  uint64_t v187 = (char *)&v183 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v30);
  unint64_t v200 = (char *)&v183 - v32;
  uint64_t v209 = type metadata accessor for InterpolationElement();
  uint64_t v235 = *(void *)(v209 - 8);
  uint64_t v33 = __chkstk_darwin(v209);
  id v227 = (char *)&v183 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = __chkstk_darwin(v33);
  uint64_t v185 = (char *)&v183 - v36;
  uint64_t v37 = __chkstk_darwin(v35);
  uint64_t v233 = (char *)&v183 - v38;
  __chkstk_darwin(v37);
  uint64_t v229 = (char *)&v183 - v39;
  uint64_t v40 = sub_10017DF08(&qword_100EAE580);
  uint64_t v41 = __chkstk_darwin(v40 - 8);
  uint64_t v234 = (char *)&v183 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = __chkstk_darwin(v41);
  uint64_t v190 = (uint64_t)&v183 - v44;
  uint64_t v45 = __chkstk_darwin(v43);
  uint64_t v199 = (char *)&v183 - v46;
  uint64_t v47 = __chkstk_darwin(v45);
  uint64_t v188 = (uint64_t)&v183 - v48;
  uint64_t v49 = __chkstk_darwin(v47);
  uint64_t v191 = (uint64_t)&v183 - v50;
  __chkstk_darwin(v49);
  uint64_t v207 = (uint64_t)&v183 - v51;
  uint64_t v197 = sub_10017DF08(&qword_100E94F18);
  uint64_t v52 = __chkstk_darwin(v197);
  uint64_t v195 = (char *)&v183 - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v52);
  uint64_t v55 = (char *)&v183 - v54;
  uint64_t v196 = sub_10017DF08(&qword_100E94F20);
  uint64_t v56 = __chkstk_darwin(v196);
  BOOL v194 = (char *)&v183 - ((v57 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v56);
  uint64_t v210 = (uint64_t)&v183 - v58;
  uint64_t v218 = type metadata accessor for Date();
  uint64_t v59 = *(void *)(v218 - 8);
  uint64_t v60 = __chkstk_darwin(v218);
  unsigned __int8 v186 = (char *)&v183 - ((v61 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = __chkstk_darwin(v60);
  uint64_t v201 = (char *)&v183 - v63;
  __chkstk_darwin(v62);
  uint64_t v211 = (char *)&v183 - v64;
  uint64_t v65 = type metadata accessor for DetailChartCondition();
  uint64_t v66 = *(void *)(v65 - 8);
  __chkstk_darwin(v65);
  uint64_t v68 = (char *)&v183 - ((v67 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v69 = sub_10017DF08(&qword_100E6BCB0);
  uint64_t v70 = __chkstk_darwin(v69 - 8);
  unint64_t v203 = (void (*)(char *, uint64_t, uint64_t))((char *)&v183 - ((v71 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v72 = __chkstk_darwin(v70);
  unint64_t v189 = (char *)&v183 - v73;
  __chkstk_darwin(v72);
  uint64_t v225 = (uint64_t)&v183 - v74;
  uint64_t v75 = (int *)type metadata accessor for ConditionDetailChartDataInput(0);
  __chkstk_darwin(v75);
  uint64_t v77 = (unsigned __int8 *)&v183 - ((v76 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v78 = *(int *)(type metadata accessor for ConditionDetailChartInput(0) + 20);
  uint64_t v214 = a1;
  sub_10019DD78(a1 + v78, (uint64_t)v77, (void (*)(void))type metadata accessor for ConditionDetailChartDataInput);
  uint64_t v79 = (uint64_t)&v77[v75[6]];
  uint64_t v228 = sub_100A03AD8(v79, a4);
  uint64_t v80 = *(void (**)(char *, uint64_t, uint64_t))(v66 + 16);
  uint64_t v222 = v79;
  v80(v68, v79, v65);
  LODWORD(v79) = (*(uint64_t (**)(char *, uint64_t))(v66 + 88))(v68, v65);
  LODWORD(a4) = enum case for DetailChartCondition.chanceOfRain(_:);
  (*(void (**)(char *, uint64_t))(v66 + 8))(v68, v65);
  BOOL v81 = v79 == a4;
  uint64_t v82 = (uint64_t)v226;
  uint64_t v223 = v77;
  if (!v81)
  {
    uint64_t v89 = type metadata accessor for ConditionDetailInput.Input(0);
    uint64_t v90 = v231;
    sub_1001B49E8((uint64_t)&v220[*(int *)(v89 + 92)], v231, &qword_100E6BF78);
    uint64_t v91 = v206;
    uint64_t v92 = v232;
    uint64_t v93 = v208;
    (*(void (**)(char *, void, uint64_t))(v206 + 104))(v232, enum case for MidpointInterpolator.InterpolationMode.monotoneCubic(_:), v208);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v92, 0, 1, v93);
    uint64_t v94 = (uint64_t)v205;
    uint64_t v95 = (uint64_t)v205 + *(int *)(v204 + 48);
    sub_1001B49E8(v90, (uint64_t)v205, &qword_100E6BF78);
    sub_1001B49E8((uint64_t)v92, v95, &qword_100E6BF78);
    int v96 = _s7Weather24LocationCompositionStateOwet_0(v94, 1, v93);
    if (v96 == 1)
    {
      sub_100178110((uint64_t)v92, &qword_100E6BF78);
      sub_100178110(v90, &qword_100E6BF78);
      if (_s7Weather24LocationCompositionStateOwet_0(v95, 1, v93) == 1) {
        uint64_t v97 = &qword_100E6BF78;
      }
      else {
        uint64_t v97 = &qword_100E713D0;
      }
      uint64_t v98 = v219;
      uint64_t v99 = v223;
    }
    else
    {
      uint64_t v113 = (uint64_t)v198;
      sub_1001B49E8(v94, (uint64_t)v198, &qword_100E6BF78);
      int v114 = _s7Weather24LocationCompositionStateOwet_0(v95, 1, v93);
      uint64_t v98 = v219;
      uint64_t v99 = v223;
      if (v114 == 1)
      {
        sub_100178110((uint64_t)v232, &qword_100E6BF78);
        sub_100178110(v90, &qword_100E6BF78);
        (*(void (**)(uint64_t, uint64_t))(v91 + 8))(v113, v93);
        uint64_t v97 = &qword_100E713D0;
      }
      else
      {
        uint64_t v119 = v184;
        (*(void (**)(char *, uint64_t, uint64_t))(v91 + 32))(v184, v95, v93);
        sub_100AA6158(&qword_100E713F0, (void (*)(uint64_t))&type metadata accessor for MidpointInterpolator.InterpolationMode);
        dispatch thunk of static Equatable.== infix(_:_:)();
        uint64_t v120 = *(void (**)(char *, uint64_t))(v91 + 8);
        v120(v119, v93);
        uint64_t v97 = &qword_100E6BF78;
        sub_100178110((uint64_t)v232, &qword_100E6BF78);
        sub_100178110(v231, &qword_100E6BF78);
        v120(v198, v93);
      }
    }
    uint64_t v118 = v222;
    sub_100178110(v94, v97);
    if (v228)
    {
      swift_retain();
      ChartSeriesValues.interpolationElements.getter();
      swift_release();
    }
    DetailChartCondition.interpolatedValueClampRange.getter();
    uint64_t v121 = (uint64_t)v203;
    WeatherInterpolator.reduce(_:from:to:clampRange:useMonotone:)();
    swift_bridgeObjectRelease();
    sub_100127928(v121, v225, &qword_100E6BCB0);
    uint64_t v116 = v220;
    int v117 = v224;
    goto LABEL_57;
  }
  uint64_t v83 = (char *)&v77[v75[7]];
  char v84 = static Date.< infix(_:_:)();
  uint64_t v85 = *(void (**)(char *, uint64_t, uint64_t))(v59 + 16);
  if (v84)
  {
    uint64_t v86 = v82;
    uint64_t v87 = v211;
    uint64_t v88 = v211;
  }
  else
  {
    uint64_t v87 = v211;
    uint64_t v88 = v211;
    uint64_t v86 = (uint64_t)v83;
  }
  uint64_t v100 = v218;
  v85(v88, v86, v218);
  uint64_t v101 = &v223[v75[8]];
  if ((static Date.< infix(_:_:)() & 1) == 0)
  {
    (*(void (**)(char *, uint64_t))(v59 + 8))(v87, v100);
    uint64_t v115 = type metadata accessor for ExtremaResult();
    _s7Weather24LocationCompositionStateOwst_0(v225, 1, 1, v115);
    uint64_t v98 = v219;
    uint64_t v116 = v220;
    uint64_t v99 = v223;
    int v117 = v224;
    uint64_t v118 = v222;
    goto LABEL_57;
  }
  sub_100AA6158((unint64_t *)&qword_100E66CC0, (void (*)(uint64_t))&type metadata accessor for Date);
  uint64_t result = dispatch thunk of static Comparable.<= infix(_:_:)();
  if ((result & 1) == 0)
  {
LABEL_69:
    __break(1u);
    goto LABEL_70;
  }
  uint64_t v103 = v197;
  uint64_t v104 = &v55[*(int *)(v197 + 48)];
  v85(v55, (uint64_t)v87, v100);
  uint64_t v232 = v104;
  v85(v104, (uint64_t)v101, v100);
  uint64_t v105 = v195;
  id v106 = &v195[*(int *)(v103 + 48)];
  v85(v195, (uint64_t)v55, v100);
  v85(v106, (uint64_t)v104, v100);
  uint64_t v107 = *(void (**)(char *, char *, uint64_t))(v59 + 32);
  uint64_t v108 = (uint64_t)v194;
  v107(v194, v105, v100);
  uint64_t v109 = *(void (**)(char *, uint64_t))(v59 + 8);
  v109(v106, v100);
  uint64_t v110 = &v105[*(int *)(v103 + 48)];
  v107(v105, v55, v100);
  v107(v110, v232, v100);
  uint64_t v111 = v108 + *(int *)(v196 + 36);
  uint64_t v204 = v59 + 32;
  unint64_t v203 = (void (*)(char *, uint64_t, uint64_t))v107;
  v107((char *)v111, v110, v100);
  uint64_t v206 = v59 + 8;
  uint64_t v205 = v109;
  v109(v105, v100);
  uint64_t v112 = sub_100127928(v108, v210, &qword_100E94F20);
  if (v228)
  {
    swift_retain();
    ChartSeriesValues.interpolationElements.getter();
    uint64_t v112 = swift_release();
  }
  int v117 = v224;
  uint64_t v122 = (uint64_t)v200;
  uint64_t v123 = (uint64_t)v199;
  uint64_t v124 = (uint64_t)v234;
  __chkstk_darwin(v112);
  sub_1000A8088();
  uint64_t v126 = v125;
  uint64_t v127 = *(void *)(v125 + 16);
  if (v127)
  {
    uint64_t v128 = *(char **)(v235 + 16);
    uint64_t v231 = v125 + ((*(unsigned __int8 *)(v235 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v235 + 80));
    uint64_t v129 = v209;
    uint64_t v232 = v128;
    ((void (*)(char *))v128)(v229);
    uint64_t v130 = v126;
    uint64_t result = swift_bridgeObjectRetain();
    uint64_t v131 = v127;
    BOOL v81 = v127 == 1;
    uint64_t v132 = v233;
    uint64_t v133 = v185;
    if (!v81)
    {
      uint64_t v134 = (uint64_t (**)(char *, char *, uint64_t))(v235 + 32);
      unint64_t v135 = 1;
      while (v135 < *(void *)(v130 + 16))
      {
        uint64_t v136 = v235;
        ((void (*)(char *, unint64_t, uint64_t))v232)(v133, v231 + *(void *)(v235 + 72) * v135, v129);
        uint64_t v137 = v129;
        InterpolationElement.value.getter();
        double v139 = v138;
        uint64_t v140 = v229;
        InterpolationElement.value.getter();
        uint64_t v141 = *(uint64_t (**)(char *, uint64_t))(v136 + 8);
        if (v139 >= v142)
        {
          uint64_t result = v141(v133, v137);
        }
        else
        {
          v141(v140, v137);
          uint64_t result = (*v134)(v140, v133, v137);
        }
        uint64_t v129 = v137;
        uint64_t v132 = v233;
        uint64_t v124 = (uint64_t)v234;
        if (v131 == ++v135) {
          goto LABEL_30;
        }
      }
      __break(1u);
      goto LABEL_68;
    }
LABEL_30:
    uint64_t v143 = v130;
    swift_bridgeObjectRelease();
    uint64_t v144 = v207;
    uint64_t v145 = v229;
    uint64_t v229 = *(char **)(v235 + 32);
    uint64_t v208 = v235 + 32;
    ((void (*)(uint64_t, char *, uint64_t))v229)(v207, v145, v129);
    uint64_t result = _s7Weather24LocationCompositionStateOwst_0(v144, 0, 1, v129);
    if (!*(void *)(v130 + 16))
    {
LABEL_70:
      __break(1u);
      return result;
    }
    ((void (*)(char *, uint64_t, uint64_t))v232)(v132, v231, v129);
    uint64_t result = swift_bridgeObjectRetain();
    uint64_t v146 = v227;
    if (v131 != 1)
    {
      unint64_t v147 = 1;
      while (v147 < *(void *)(v143 + 16))
      {
        uint64_t v148 = v235;
        ((void (*)(char *, unint64_t, uint64_t))v232)(v146, v231 + *(void *)(v235 + 72) * v147, v129);
        InterpolationElement.value.getter();
        double v150 = v149;
        InterpolationElement.value.getter();
        uint64_t v151 = *(uint64_t (**)(char *, uint64_t))(v148 + 8);
        if (v150 >= v152)
        {
          uint64_t result = v151(v146, v129);
        }
        else
        {
          v151(v132, v129);
          uint64_t result = ((uint64_t (*)(char *, char *, uint64_t))v229)(v132, v146, v129);
        }
        uint64_t v132 = v233;
        uint64_t v124 = (uint64_t)v234;
        ++v147;
        uint64_t v146 = v227;
        uint64_t v143 = v130;
        if (v131 == v147) {
          goto LABEL_38;
        }
      }
LABEL_68:
      __break(1u);
      goto LABEL_69;
    }
LABEL_38:
    swift_bridgeObjectRelease();
    uint64_t v153 = v191;
    ((void (*)(uint64_t, char *, uint64_t))v229)(v191, v132, v129);
    _s7Weather24LocationCompositionStateOwst_0(v153, 0, 1, v129);
    int v117 = v224;
    uint64_t v154 = v207;
    uint64_t v122 = (uint64_t)v200;
    uint64_t v123 = (uint64_t)v199;
  }
  else
  {
    uint64_t v154 = v207;
    uint64_t v129 = v209;
    _s7Weather24LocationCompositionStateOwst_0(v207, 1, 1, v209);
    uint64_t v153 = v191;
    _s7Weather24LocationCompositionStateOwst_0(v191, 1, 1, v129);
  }
  swift_bridgeObjectRelease();
  uint64_t v155 = v188;
  sub_1001B49E8(v153, v188, &qword_100EAE580);
  if (_s7Weather24LocationCompositionStateOwet_0(v155, 1, v129) == 1)
  {
    sub_100178110(v155, &qword_100EAE580);
  }
  else
  {
    InterpolationElement.value.getter();
    uint64_t v129 = v209;
    (*(void (**)(uint64_t, uint64_t))(v235 + 8))(v155, v209);
  }
  uint64_t v156 = (uint64_t)v187;
  sub_1001B49E8(v153, v123, &qword_100EAE580);
  if (_s7Weather24LocationCompositionStateOwet_0(v123, 1, v129) == 1)
  {
    sub_100178110(v123, &qword_100EAE580);
    _s7Weather24LocationCompositionStateOwst_0(v122, 1, 1, v218);
    uint64_t v157 = v186;
LABEL_46:
    Date.init()();
    sub_100178110(v122, (uint64_t *)&unk_100E73CA0);
    goto LABEL_48;
  }
  InterpolationElement.date.getter();
  uint64_t v129 = v209;
  (*(void (**)(uint64_t, uint64_t))(v235 + 8))(v123, v209);
  uint64_t v158 = v218;
  _s7Weather24LocationCompositionStateOwst_0(v122, 0, 1, v218);
  int v159 = _s7Weather24LocationCompositionStateOwet_0(v122, 1, v158);
  uint64_t v157 = v186;
  if (v159 == 1) {
    goto LABEL_46;
  }
  v203(v201, v122, v218);
LABEL_48:
  uint64_t v160 = v190;
  sub_1001B49E8(v154, v190, &qword_100EAE580);
  if (_s7Weather24LocationCompositionStateOwet_0(v160, 1, v129) == 1)
  {
    sub_100178110(v160, &qword_100EAE580);
  }
  else
  {
    InterpolationElement.value.getter();
    uint64_t v129 = v209;
    (*(void (**)(uint64_t, uint64_t))(v235 + 8))(v160, v209);
  }
  sub_1001B49E8(v154, v124, &qword_100EAE580);
  if (_s7Weather24LocationCompositionStateOwet_0(v124, 1, v129) == 1)
  {
    sub_100178110(v124, &qword_100EAE580);
    uint64_t v161 = v218;
    _s7Weather24LocationCompositionStateOwst_0(v156, 1, 1, v218);
    uint64_t v98 = v219;
  }
  else
  {
    InterpolationElement.date.getter();
    uint64_t v154 = v207;
    (*(void (**)(uint64_t, uint64_t))(v235 + 8))(v124, v129);
    uint64_t v161 = v218;
    _s7Weather24LocationCompositionStateOwst_0(v156, 0, 1, v218);
    int v162 = _s7Weather24LocationCompositionStateOwet_0(v156, 1, v161);
    uint64_t v98 = v219;
    if (v162 != 1)
    {
      v203(v157, v156, v161);
      goto LABEL_56;
    }
  }
  Date.init()();
  sub_100178110(v156, (uint64_t *)&unk_100E73CA0);
LABEL_56:
  uint64_t v163 = v205;
  uint64_t v164 = (uint64_t)v189;
  ExtremaResult.init(maxValue:maxDate:minValue:minDate:)();
  sub_100178110(v153, &qword_100EAE580);
  sub_100178110(v154, &qword_100EAE580);
  v163(v211, v161);
  sub_100178110(v210, &qword_100E94F20);
  uint64_t v165 = type metadata accessor for ExtremaResult();
  _s7Weather24LocationCompositionStateOwst_0(v164, 0, 1, v165);
  sub_100127928(v164, v225, &qword_100E6BCB0);
  uint64_t v118 = v222;
  uint64_t v99 = v223;
  uint64_t v116 = v220;
LABEL_57:
  uint64_t v166 = (uint64_t)&v116[*(int *)(type metadata accessor for ConditionDetailInput.Input(0) + 36)];
  if (sub_100889C5C(v118, v166))
  {
    uint64_t v167 = static Date.== infix(_:_:)();
    if (v167)
    {
      uint64_t v236 = *(void *)(v230 + 528);
      __chkstk_darwin(v167);
      type metadata accessor for UnfairLock();
      swift_retain();
      uint64_t v98 = v219;
      Lock.sync<A>(_:)();
      uint64_t v118 = v222;
      uint64_t v99 = v223;
      int v117 = v224;
      swift_release();
    }
  }
  if (sub_100889C5C(v118, v166))
  {
    uint64_t v168 = static Date.== infix(_:_:)();
    if (v168)
    {
      uint64_t v236 = *(void *)(v230 + 528);
      __chkstk_darwin(v168);
      type metadata accessor for UnfairLock();
      swift_retain();
      Lock.sync<A>(_:)();
      swift_release();
    }
  }
  uint64_t v169 = v226;
  uint64_t v170 = v98;
  sub_100A9E6DC(v116, v99, a12, (uint64_t)v226, v228, v98, v117);
  uint64_t v171 = v212;
  sub_1001B49E8((uint64_t)v117, v212, &qword_100E82140);
  uint64_t v172 = (uint64_t)v116;
  if (_s7Weather24LocationCompositionStateOwet_0(v171, 1, v213) == 1)
  {
    sub_100178110(v171, &qword_100E82140);
  }
  else
  {
    uint64_t v173 = v202;
    uint64_t v174 = sub_100183754(v171, v202, (void (*)(void))type metadata accessor for LollipopViewModel);
    uint64_t v236 = *(void *)(v230 + 528);
    __chkstk_darwin(v174);
    type metadata accessor for UnfairLock();
    swift_retain();
    uint64_t v169 = v226;
    Lock.sync<A>(_:)();
    swift_release();
    uint64_t v99 = v223;
    sub_10019E1D8(v173, (void (*)(void))type metadata accessor for LollipopViewModel);
  }
  uint64_t v175 = v216;
  uint64_t v176 = (uint64_t)v99;
  uint64_t v177 = (uint64_t)v99;
  uint64_t v178 = v230;
  uint64_t v179 = v225;
  sub_100AA130C(v230, v176, v170, v228, v225, v221, v172, v169, v216, a12);
  sub_1001B1E64((void *)(v178 + 56), *(void *)(v178 + 80));
  uint64_t v180 = v217;
  sub_1009B77E8(v170, v179, v215, v217);
  uint64_t v181 = (int *)type metadata accessor for DetailChartViewModel();
  sub_100AA2454(v222, (Swift::String *)(v180 + v181[7]));
  uint64_t v182 = (uint64_t)v224;
  sub_1001B49E8((uint64_t)v224, v180 + v181[6], &qword_100E82140);
  sub_100183754((uint64_t)v175, v180 + v181[5], (void (*)(void))type metadata accessor for ChartViewModel);
  swift_release();
  sub_100178110(v182, &qword_100E82140);
  sub_10019E1D8(v177, (void (*)(void))type metadata accessor for ConditionDetailChartDataInput);
  return sub_100178110(v179, &qword_100E6BCB0);
}

void *sub_100A9CA08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  uint64_t v9 = v8;
  uint64_t v154 = a7;
  uint64_t v143 = a6;
  uint64_t v142 = a5;
  uint64_t v152 = a4;
  uint64_t v160 = a2;
  uint64_t v161 = a3;
  uint64_t v12 = sub_10017DF08(&qword_100E66E28);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v124 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v158 = type metadata accessor for DetailCondition();
  uint64_t v162 = *(void *)(v158 - 8);
  __chkstk_darwin(v158);
  uint64_t v144 = (char *)&v124 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_10017DF08(&qword_100EAE590);
  __chkstk_darwin(v16 - 8);
  uint64_t v145 = (uint64_t)&v124 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for ArticlePlacementLocation();
  uint64_t v133 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v132 = (char *)&v124 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_10017DF08(&qword_100E7B2B8);
  uint64_t v21 = __chkstk_darwin(v20 - 8);
  uint64_t v146 = (uint64_t)&v124 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = __chkstk_darwin(v21);
  uint64_t v153 = (char *)&v124 - v24;
  __chkstk_darwin(v23);
  unint64_t v147 = (char *)&v124 - v25;
  uint64_t v26 = sub_10017DF08(&qword_100E66E40);
  uint64_t v27 = __chkstk_darwin(v26 - 8);
  uint64_t v140 = (uint64_t)&v124 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = __chkstk_darwin(v27);
  uint64_t v157 = (uint64_t)&v124 - v30;
  uint64_t v31 = __chkstk_darwin(v29);
  uint64_t v135 = (uint64_t)&v124 - v32;
  __chkstk_darwin(v31);
  uint64_t v139 = (uint64_t)&v124 - v33;
  uint64_t v155 = type metadata accessor for ConditionDetailPlatterViewModel(0);
  uint64_t v151 = *(void *)(v155 - 8);
  uint64_t v34 = __chkstk_darwin(v155);
  uint64_t v134 = (uint64_t)&v124 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = __chkstk_darwin(v34);
  uint64_t v141 = (uint64_t)&v124 - v37;
  uint64_t v38 = __chkstk_darwin(v36);
  uint64_t v130 = (uint64_t)&v124 - v39;
  uint64_t v40 = __chkstk_darwin(v38);
  uint64_t v136 = (uint64_t)&v124 - v41;
  uint64_t v42 = __chkstk_darwin(v40);
  uint64_t v137 = (uint64_t)&v124 - v43;
  uint64_t v44 = __chkstk_darwin(v42);
  uint64_t v138 = (uint64_t)&v124 - v45;
  __chkstk_darwin(v44);
  uint64_t v129 = (uint64_t)&v124 - v46;
  uint64_t v47 = sub_10017DF08(&qword_100E82140);
  __chkstk_darwin(v47 - 8);
  uint64_t v49 = (char *)&v124 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = type metadata accessor for LollipopViewModel();
  __chkstk_darwin(v50);
  uint64_t v150 = (uint64_t)&v124 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = (int *)type metadata accessor for ConditionDetailViewModelFactory.DetailPlatterViewModelsCacheKey(0);
  uint64_t v53 = __chkstk_darwin(v52);
  uint64_t v131 = (uint64_t)&v124 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v53);
  int v159 = (char *)&v124 - v55;
  uint64_t v56 = type metadata accessor for ConditionDetailInput.Input(0);
  __chkstk_darwin(v56);
  uint64_t v58 = (char *)&v124 - ((v57 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v156 = (char *)a1;
  sub_10019DD78(a1, (uint64_t)v58, (void (*)(void))type metadata accessor for ConditionDetailInput.Input);
  char v59 = a8;
  if (a8)
  {
    sub_10019E1D8((uint64_t)v58, (void (*)(void))type metadata accessor for ConditionDetailInput.Input);
    uint64_t v60 = (int *)v56;
  }
  else
  {
    uint64_t v60 = (int *)v56;
    char v61 = DetailCondition.presentsTwoCharts.getter();
    sub_10019E1D8((uint64_t)v58, (void (*)(void))type metadata accessor for ConditionDetailInput.Input);
    if (v61) {
      return _swiftEmptyArrayStorage;
    }
  }
  uint64_t v127 = v18;
  uint64_t v128 = v14;
  uint64_t v148 = v9;
  uint64_t v164 = _swiftEmptyArrayStorage;
  uint64_t v63 = v156;
  uint64_t v64 = &v156[v60[10]];
  uint64_t v65 = type metadata accessor for Date();
  uint64_t v66 = v159;
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v65 - 8) + 16))(v159, v64, v65);
  uint64_t v67 = &v63[v60[21]];
  uint64_t v69 = *(void *)v67;
  uint64_t v68 = *((void *)v67 + 1);
  sub_1001B49E8(v161, (uint64_t)&v66[v52[6]], &qword_100E6BCB0);
  uint64_t v70 = &v66[v52[7]];
  uint64_t v71 = type metadata accessor for ConditionUnits();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v71 - 8) + 16))(v70, v160, v71);
  uint64_t v126 = v60;
  uint64_t v72 = (uint64_t)&v63[v60[8]];
  uint64_t v73 = &v66[v52[8]];
  uint64_t v74 = *(void (**)(char *))(v162 + 16);
  uint64_t v149 = v72;
  v162 += 16;
  v74(v73);
  uint64_t v75 = &v66[v52[5]];
  *(void *)uint64_t v75 = v69;
  *((void *)v75 + 1) = v68;
  v66[v52[9]] = v59 & 1;
  sub_1001B49E8(v154, (uint64_t)v49, &qword_100E82140);
  int v76 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v49, 1, v50);
  uint64_t v125 = (void (*)(char *, uint64_t, uint64_t))v74;
  if (v76 == 1)
  {
    swift_bridgeObjectRetain();
    sub_100178110((uint64_t)v49, &qword_100E82140);
    uint64_t v77 = v148;
LABEL_9:
    uint64_t v80 = v157;
    uint64_t v81 = v161;
    uint64_t v82 = (uint64_t)v159;
    uint64_t v83 = v152;
    char v84 = v153;
    Cache.subscript.getter();
    uint64_t v62 = v163;
    uint64_t v85 = v160;
    if (v163)
    {
      sub_10019E1D8(v82, (void (*)(void))type metadata accessor for ConditionDetailViewModelFactory.DetailPlatterViewModelsCacheKey);
      swift_bridgeObjectRelease();
      return v62;
    }
    sub_1001B1E64(v77 + 60, v77[63]);
    uint64_t v86 = v135;
    sub_1006FE834((unint64_t)v63, v85, v135);
    if (_s7Weather24LocationCompositionStateOwet_0(v86, 1, v155) == 1)
    {
      sub_100178110(v86, &qword_100E66E40);
      uint64_t v87 = v127;
    }
    else
    {
      uint64_t v92 = v86;
      uint64_t v93 = v137;
      sub_100183754(v92, v137, (void (*)(void))type metadata accessor for ConditionDetailPlatterViewModel);
      sub_10019DD78(v93, v136, (void (*)(void))type metadata accessor for ConditionDetailPlatterViewModel);
      uint64_t v94 = (uint64_t)v164;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v87 = v127;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
        uint64_t v94 = sub_1007E9A64(0, *(void *)(v94 + 16) + 1, 1, v94);
      }
      unint64_t v97 = *(void *)(v94 + 16);
      unint64_t v96 = *(void *)(v94 + 24);
      if (v97 >= v96 >> 1) {
        uint64_t v94 = sub_1007E9A64(v96 > 1, v97 + 1, 1, v94);
      }
      *(void *)(v94 + 16) = v97 + 1;
      sub_100183754(v136, v94+ ((*(unsigned __int8 *)(v151 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v151 + 80))+ *(void *)(v151 + 72) * v97, (void (*)(void))type metadata accessor for ConditionDetailPlatterViewModel);
      uint64_t v164 = (void *)v94;
      sub_10019E1D8(v137, (void (*)(void))type metadata accessor for ConditionDetailPlatterViewModel);
      uint64_t v85 = v160;
    }
    sub_1001B1E64(v77 + 13, v77[16]);
    uint64_t v98 = sub_100358138(v63, v81, v83, v85);
    sub_10037FBD8(v98);
    LODWORD(v154) = 1;
    goto LABEL_22;
  }
  uint64_t v78 = v150;
  sub_100183754((uint64_t)v49, v150, (void (*)(void))type metadata accessor for LollipopViewModel);
  uint64_t v77 = v148;
  sub_1001B1E64(v148 + 55, v148[58]);
  swift_bridgeObjectRetain();
  uint64_t v79 = v139;
  sub_100BB23A4((uint64_t)v63, v139);
  if (_s7Weather24LocationCompositionStateOwet_0(v79, 1, v155) == 1)
  {
    sub_10019E1D8(v78, (void (*)(void))type metadata accessor for LollipopViewModel);
    sub_100178110(v79, &qword_100E66E40);
    goto LABEL_9;
  }
  uint64_t v88 = v129;
  sub_100183754(v79, v129, (void (*)(void))type metadata accessor for ConditionDetailPlatterViewModel);
  sub_10019DD78(v88, v138, (void (*)(void))type metadata accessor for ConditionDetailPlatterViewModel);
  uint64_t v89 = sub_1007E9A64(0, 1, 1, (uint64_t)_swiftEmptyArrayStorage);
  unint64_t v91 = *(void *)(v89 + 16);
  unint64_t v90 = *(void *)(v89 + 24);
  uint64_t v80 = v157;
  uint64_t v81 = v161;
  uint64_t v83 = v152;
  char v84 = v153;
  if (v91 >= v90 >> 1) {
    uint64_t v89 = sub_1007E9A64(v90 > 1, v91 + 1, 1, v89);
  }
  *(void *)(v89 + 16) = v91 + 1;
  sub_100183754(v138, v89+ ((*(unsigned __int8 *)(v151 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v151 + 80))+ *(void *)(v151 + 72) * v91, (void (*)(void))type metadata accessor for ConditionDetailPlatterViewModel);
  uint64_t v164 = (void *)v89;
  sub_10019E1D8(v88, (void (*)(void))type metadata accessor for ConditionDetailPlatterViewModel);
  sub_10019E1D8(v150, (void (*)(void))type metadata accessor for LollipopViewModel);
  LODWORD(v154) = 0;
  uint64_t v85 = v160;
  uint64_t v63 = v156;
  uint64_t v87 = v127;
LABEL_22:
  sub_1001B1E64(v77 + 13, v77[16]);
  sub_100359A40((uint64_t)v63, v81, v83, v142, v143, v85, v80);
  uint64_t v99 = v140;
  sub_1001B49E8(v80, v140, &qword_100E66E40);
  if (_s7Weather24LocationCompositionStateOwet_0(v99, 1, v155) == 1)
  {
    sub_100178110(v99, &qword_100E66E40);
    uint64_t v100 = v84;
  }
  else
  {
    uint64_t v101 = v130;
    sub_100183754(v99, v130, (void (*)(void))type metadata accessor for ConditionDetailPlatterViewModel);
    sub_10019DD78(v101, v141, (void (*)(void))type metadata accessor for ConditionDetailPlatterViewModel);
    uint64_t v102 = (uint64_t)v164;
    uint64_t v100 = v84;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v102 = sub_1007E9A64(0, *(void *)(v102 + 16) + 1, 1, v102);
    }
    unint64_t v104 = *(void *)(v102 + 16);
    unint64_t v103 = *(void *)(v102 + 24);
    if (v104 >= v103 >> 1) {
      uint64_t v102 = sub_1007E9A64(v103 > 1, v104 + 1, 1, v102);
    }
    *(void *)(v102 + 16) = v104 + 1;
    sub_100183754(v141, v102+ ((*(unsigned __int8 *)(v151 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v151 + 80))+ *(void *)(v151 + 72) * v104, (void (*)(void))type metadata accessor for ConditionDetailPlatterViewModel);
    uint64_t v164 = (void *)v102;
    sub_10019E1D8(v101, (void (*)(void))type metadata accessor for ConditionDetailPlatterViewModel);
    uint64_t v85 = v160;
    uint64_t v63 = v156;
  }
  uint64_t v105 = (uint64_t)v144;
  v125(v144, v149, v158);
  uint64_t v106 = v145;
  sub_1008E09BC(v105, v145);
  if (_s7Weather24LocationCompositionStateOwet_0(v106, 1, v87) == 1)
  {
    sub_100178110(v106, &qword_100EAE590);
    uint64_t v107 = type metadata accessor for NewsArticleComponentViewModel(0);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v100, 1, 1, v107);
    uint64_t v108 = v63;
    uint64_t v109 = (uint64_t)v147;
    uint64_t v110 = v126;
  }
  else
  {
    uint64_t v111 = v133;
    uint64_t v112 = (uint64_t)v132;
    (*(void (**)(char *, uint64_t, uint64_t))(v133 + 32))(v132, v106, v87);
    sub_1001B1E64(v77 + 38, v77[41]);
    uint64_t v110 = v126;
    sub_1006BAAF0(v112, v100);
    (*(void (**)(uint64_t, uint64_t))(v111 + 8))(v112, v87);
    uint64_t v108 = v63;
    uint64_t v109 = (uint64_t)v147;
  }
  sub_100127928((uint64_t)v100, v109, &qword_100E7B2B8);
  sub_1001B1E64(v77 + 13, v77[16]);
  uint64_t v113 = v146;
  sub_1001B49E8(v109, v146, &qword_100E7B2B8);
  uint64_t v114 = (uint64_t)v128;
  sub_1004B80E0(v113, (uint64_t)v128);
  uint64_t v115 = v149;
  uint64_t v116 = sub_100354FD4(v149, v85, v114, v161, v108[v110[25]]);
  sub_100178110(v114, &qword_100E66E28);
  sub_10037FBD8((uint64_t)v116);
  char v117 = sub_100AA61A0(v115);
  uint64_t v118 = (uint64_t)v159;
  if (v117)
  {
    uint64_t v119 = v134;
    sub_100AA6338(v134);
    uint64_t v120 = (uint64_t)v164;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v120 = sub_1007E9A64(0, *(void *)(v120 + 16) + 1, 1, v120);
    }
    unint64_t v122 = *(void *)(v120 + 16);
    unint64_t v121 = *(void *)(v120 + 24);
    if (v122 >= v121 >> 1) {
      uint64_t v120 = sub_1007E9A64(v121 > 1, v122 + 1, 1, v120);
    }
    *(void *)(v120 + 16) = v122 + 1;
    sub_100183754(v119, v120+ ((*(unsigned __int8 *)(v151 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v151 + 80))+ *(void *)(v151 + 72) * v122, (void (*)(void))type metadata accessor for ConditionDetailPlatterViewModel);
    uint64_t v164 = (void *)v120;
  }
  if (v154)
  {
    sub_10019DD78(v118, v131, (void (*)(void))type metadata accessor for ConditionDetailViewModelFactory.DetailPlatterViewModelsCacheKey);
    uint64_t v62 = v164;
    uint64_t v163 = v164;
    swift_bridgeObjectRetain();
    Cache.subscript.setter();
    sub_100178110(v109, &qword_100E7B2B8);
    sub_100178110(v157, &qword_100E66E40);
    sub_10019E1D8(v118, (void (*)(void))type metadata accessor for ConditionDetailViewModelFactory.DetailPlatterViewModelsCacheKey);
  }
  else
  {
    sub_100178110(v109, &qword_100E7B2B8);
    sub_100178110(v157, &qword_100E66E40);
    sub_10019E1D8(v118, (void (*)(void))type metadata accessor for ConditionDetailViewModelFactory.DetailPlatterViewModelsCacheKey);
    return v164;
  }
  return v62;
}

uint64_t sub_100A9DAF4(unint64_t a1, char *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v57 = a7;
  uint64_t v58 = a8;
  uint64_t v55 = a5;
  uint64_t v56 = a6;
  uint64_t v54 = a4;
  uint64_t v15 = type metadata accessor for DetailChartViewModel();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = __chkstk_darwin(v15 - 8);
  uint64_t v19 = (char *)v45 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v21 = (char *)v45 - v20;
  uint64_t v22 = type metadata accessor for ConditionDetailChartInput(0);
  uint64_t v53 = *(char **)(v22 - 8);
  __chkstk_darwin(v22 - 8);
  uint64_t v24 = (char *)v45 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = type metadata accessor for DetailChartsViewModel();
  __chkstk_darwin(v48);
  uint64_t v26 = (char *)v45 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = type metadata accessor for ConditionDetailChartInputs(0);
  uint64_t v28 = *(void *)(v27 - 8);
  __chkstk_darwin(v27);
  uint64_t v59 = (uint64_t)v45 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = type metadata accessor for ConditionDetailInput.Input(0);
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_14;
  }
  uint64_t v31 = *(void *)&a2[*(int *)(result + 28)];
  if (*(void *)(v31 + 16) <= a1)
  {
LABEL_14:
    __break(1u);
    return result;
  }
  v45[1] = a12;
  uint64_t v46 = v26;
  uint64_t v32 = v31 + ((*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80));
  uint64_t v33 = *(void *)(v28 + 72);
  unint64_t v47 = a1;
  uint64_t v34 = v59;
  sub_10019DD78(v32 + v33 * a1, v59, (void (*)(void))type metadata accessor for ConditionDetailChartInputs);
  uint64_t v35 = *(void *)(v34 + *(int *)(v27 + 20));
  uint64_t v36 = *(void *)(v35 + 16);
  if (v36)
  {
    uint64_t v51 = a10;
    uint64_t v52 = a11;
    uint64_t v37 = v35 + ((v53[80] + 32) & ~(unint64_t)v53[80]);
    uint64_t v49 = *((void *)v53 + 9);
    uint64_t v50 = a9;
    v45[0] = v35;
    swift_bridgeObjectRetain();
    uint64_t v38 = _swiftEmptyArrayStorage;
    uint64_t v53 = a2;
    do
    {
      sub_10019DD78(v37, (uint64_t)v24, (void (*)(void))type metadata accessor for ConditionDetailChartInput);
      sub_100A9AED8((uint64_t)v24, v59, a2, v54, v55, v56, v57, v58, (uint64_t)v21, v50, v51, v52);
      sub_10019DD78((uint64_t)v21, (uint64_t)v19, (void (*)(void))type metadata accessor for DetailChartViewModel);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v38 = (void *)sub_1007EA2FC(0, v38[2] + 1, 1, (uint64_t)v38);
      }
      unint64_t v40 = v38[2];
      unint64_t v39 = v38[3];
      if (v40 >= v39 >> 1) {
        uint64_t v38 = (void *)sub_1007EA2FC(v39 > 1, v40 + 1, 1, (uint64_t)v38);
      }
      void v38[2] = v40 + 1;
      sub_100183754((uint64_t)v19, (uint64_t)v38+ ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80))+ *(void *)(v16 + 72) * v40, (void (*)(void))type metadata accessor for DetailChartViewModel);
      sub_10019E1D8((uint64_t)v21, (void (*)(void))type metadata accessor for DetailChartViewModel);
      sub_10019E1D8((uint64_t)v24, (void (*)(void))type metadata accessor for ConditionDetailChartInput);
      v37 += v49;
      --v36;
      a2 = v53;
    }
    while (v36);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v38 = _swiftEmptyArrayStorage;
  }
  uint64_t v41 = type metadata accessor for Date();
  uint64_t v42 = (uint64_t)v46;
  uint64_t v43 = v59;
  uint64_t v44 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v41 - 8) + 16))(v46, v59, v41);
  *(void *)(v42 + *(int *)(v48 + 20)) = v38;
  uint64_t v60 = *(void *)(a3 + 528);
  __chkstk_darwin(v44);
  type metadata accessor for UnfairLock();
  swift_retain();
  Lock.sync<A>(_:)();
  swift_release();
  sub_10019E1D8(v43, (void (*)(void))type metadata accessor for ConditionDetailChartInputs);
  return sub_10019E1D8(v42, (void (*)(void))type metadata accessor for DetailChartsViewModel);
}

uint64_t sub_100A9E064(uint64_t *a1, unint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10017DF08(&qword_100E820B8);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6 - 8);
  uint64_t v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10019DD78(a3, (uint64_t)v9, (void (*)(void))type metadata accessor for DetailChartsViewModel);
  uint64_t v10 = type metadata accessor for DetailChartsViewModel();
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v9, 0, 1, v10);
  uint64_t v11 = *a1;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  *a1 = v11;
  if (result)
  {
    if ((a2 & 0x8000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  uint64_t result = sub_100ABB61C();
  uint64_t v11 = result;
  *a1 = result;
  if ((a2 & 0x8000000000000000) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if (*(void *)(v11 + 16) > a2) {
    return sub_1002E7C4C((uint64_t)v9, v11+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(void *)(v7 + 72) * a2, &qword_100E820B8);
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_100A9E1B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for DetailCondition();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  int v8 = (*(uint64_t (**)(char *, uint64_t))(v5 + 88))(v7, v4);
  if (v8 == enum case for DetailCondition.conditions(_:))
  {
    uint64_t v9 = enum case for LocationDetailsKind.conditions(_:);
    uint64_t v10 = type metadata accessor for LocationDetailsKind();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 104))(a2, v9, v10);
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  if (v8 == enum case for DetailCondition.humidity(_:))
  {
    uint64_t v12 = (unsigned int *)&enum case for LocationDetailsKind.humidity(_:);
  }
  else if (v8 == enum case for DetailCondition.pressure(_:))
  {
    uint64_t v12 = (unsigned int *)&enum case for LocationDetailsKind.pressure(_:);
  }
  else if (v8 == enum case for DetailCondition.precipitationTotal(_:))
  {
    uint64_t v12 = (unsigned int *)&enum case for LocationDetailsKind.precipitation(_:);
  }
  else if (v8 == enum case for DetailCondition.uvIndex(_:))
  {
    uint64_t v12 = (unsigned int *)&enum case for LocationDetailsKind.uvIndex(_:);
  }
  else if (v8 == enum case for DetailCondition.visibility(_:))
  {
    uint64_t v12 = (unsigned int *)&enum case for LocationDetailsKind.visibility(_:);
  }
  else
  {
    if (v8 != enum case for DetailCondition.wind(_:))
    {
      uint64_t result = _diagnoseUnexpectedEnumCase<A>(type:)();
      __break(1u);
      return result;
    }
    uint64_t v12 = (unsigned int *)&enum case for LocationDetailsKind.wind(_:);
  }
  uint64_t v13 = *v12;
  uint64_t v14 = type metadata accessor for LocationDetailsKind();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 104))(a2, v13, v14);
}

uint64_t sub_100A9E428(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for DetailChartConditionInfo();
  uint64_t v4 = __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v9 = (uint64_t *)((char *)&v15 - v8);
  uint64_t v10 = *(void *)(a2 + 16);
  if (!v10) {
    return DetailCondition.title.getter();
  }
  uint64_t v11 = a2 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  uint64_t v12 = *(void *)(v7 + 72);
  swift_bridgeObjectRetain();
  while (1)
  {
    sub_10019DD78(v11, (uint64_t)v6, (void (*)(void))type metadata accessor for DetailChartConditionInfo);
    if (static DetailCondition.== infix(_:_:)()) {
      break;
    }
    sub_10019E1D8((uint64_t)v6, (void (*)(void))type metadata accessor for DetailChartConditionInfo);
    v11 += v12;
    if (!--v10)
    {
      swift_bridgeObjectRelease();
      return DetailCondition.title.getter();
    }
  }
  swift_bridgeObjectRelease();
  sub_100183754((uint64_t)v6, (uint64_t)v9, (void (*)(void))type metadata accessor for DetailChartConditionInfo);
  uint64_t v13 = *v9;
  swift_bridgeObjectRetain();
  sub_10019E1D8((uint64_t)v9, (void (*)(void))type metadata accessor for DetailChartConditionInfo);
  return v13;
}

uint64_t sub_100A9E5F0()
{
  uint64_t v0 = type metadata accessor for Date();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  InterpolationElement.date.getter();
  char v4 = sub_100A96ED4((uint64_t)v3);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v4 & 1;
}

uint64_t sub_100A9E6DC@<X0>(char *a1@<X0>, unsigned __int8 *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, void *a7@<X8>)
{
  uint64_t v358 = a6;
  uint64_t v384 = a5;
  uint64_t v331 = a4;
  uint64_t v397 = a3;
  uint64_t v414 = a2;
  uint64_t v418 = a7;
  uint64_t v8 = type metadata accessor for LollipopDetailViewModel(0);
  __chkstk_darwin(v8 - 8);
  char v335 = (char *)&v320 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v401 = type metadata accessor for DetailChartDataPoint();
  uint64_t v334 = *(void *)(v401 - 8);
  __chkstk_darwin(v401);
  uint64_t v333 = (char *)&v320 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for InterpolationElement();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v346 = v11;
  uint64_t v347 = v12;
  __chkstk_darwin(v11);
  uint64_t v345 = (char *)&v320 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for TimeZone();
  uint64_t v329 = *(void *)(v14 - 8);
  uint64_t v330 = v14;
  __chkstk_darwin(v14);
  uint64_t v362 = (char *)&v320 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for CurrentWeather();
  uint64_t v354 = *(void *)(v16 - 8);
  uint64_t v355 = v16;
  __chkstk_darwin(v16);
  uint64_t v356 = (char *)&v320 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for ConditionUnits();
  uint64_t v351 = *(void *)(v18 - 8);
  uint64_t v352 = v18;
  __chkstk_darwin(v18);
  uint64_t v353 = (char *)&v320 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_10017DF08(&qword_100E6B6C8);
  __chkstk_darwin(v20 - 8);
  uint64_t v350 = (char *)&v320 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = type metadata accessor for WeatherValueCalculationContext();
  uint64_t v348 = *(void *)(v22 - 8);
  uint64_t v349 = v22;
  __chkstk_darwin(v22);
  uint64_t v357 = (char *)&v320 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v393 = type metadata accessor for HourWeather();
  uint64_t v402 = *(void *)(v393 - 8);
  uint64_t v24 = __chkstk_darwin(v393);
  uint64_t v388 = (char *)&v320 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = __chkstk_darwin(v24);
  uint64_t v387 = (char *)&v320 - v27;
  __chkstk_darwin(v26);
  uint64_t v344 = (char *)&v320 - v28;
  uint64_t v29 = type metadata accessor for ConditionDetailChartDataInput(0);
  __chkstk_darwin(v29);
  uint64_t v343 = (uint64_t)&v320 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = sub_10017DF08(&qword_100E6ECE0);
  uint64_t v32 = __chkstk_darwin(v31 - 8);
  uint64_t v332 = (uint64_t)&v320 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v32);
  uint64_t v381 = (uint64_t)&v320 - v34;
  uint64_t v35 = sub_10017DF08(&qword_100E6BEC0);
  uint64_t v36 = __chkstk_darwin(v35 - 8);
  uint64_t v371 = (char *)&v320 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = __chkstk_darwin(v36);
  uint64_t v383 = (char *)&v320 - v39;
  uint64_t v40 = __chkstk_darwin(v38);
  uint64_t v42 = (char *)&v320 - v41;
  uint64_t v43 = __chkstk_darwin(v40);
  uint64_t v382 = (uint64_t)&v320 - v44;
  uint64_t v45 = __chkstk_darwin(v43);
  uint64_t v370 = (uint64_t)&v320 - v46;
  __chkstk_darwin(v45);
  uint64_t v389 = (char *)&v320 - v47;
  uint64_t v48 = sub_10017DF08(&qword_100EA69B8);
  uint64_t v49 = __chkstk_darwin(v48 - 8);
  uint64_t v363 = (uint64_t)&v320 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = __chkstk_darwin(v49);
  uint64_t v361 = (char *)&v320 - v52;
  uint64_t v53 = __chkstk_darwin(v51);
  uint64_t v398 = (uint64_t)&v320 - v54;
  __chkstk_darwin(v53);
  uint64_t v403 = (uint64_t)&v320 - v55;
  uint64_t v56 = type metadata accessor for ChartViewModelInterpolationMode();
  uint64_t v338 = *(void *)(v56 - 8);
  uint64_t v339 = v56;
  __chkstk_darwin(v56);
  uint64_t v337 = (char *)&v320 - ((v57 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = sub_10017DF08(&qword_100E6BF78);
  __chkstk_darwin(v58 - 8);
  uint64_t v340 = (char *)&v320 - ((v59 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = type metadata accessor for MidpointInterpolator.InterpolationMode();
  uint64_t v368 = *(void *)(v60 - 8);
  uint64_t v369 = v60;
  __chkstk_darwin(v60);
  uint64_t v367 = (char *)&v320 - ((v61 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = type metadata accessor for MidpointInterpolator();
  uint64_t v341 = *(void *)(v62 - 8);
  uint64_t v342 = v62;
  __chkstk_darwin(v62);
  uint64_t v386 = (char *)&v320 - ((v63 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = type metadata accessor for Calendar.SearchDirection();
  uint64_t v378 = *(void *)(v64 - 8);
  uint64_t v379 = v64;
  __chkstk_darwin(v64);
  uint64_t v377 = (char *)&v320 - ((v65 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v396 = type metadata accessor for Calendar.RepeatedTimePolicy();
  uint64_t v376 = *(void *)(v396 - 8);
  __chkstk_darwin(v396);
  uint64_t v374 = (char *)&v320 - ((v66 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v395 = type metadata accessor for Calendar.MatchingPolicy();
  uint64_t v373 = *(void *)(v395 - 8);
  __chkstk_darwin(v395);
  uint64_t v394 = (char *)&v320 - ((v67 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  __chkstk_darwin(v68 - 8);
  uint64_t v375 = (char *)&v320 - ((v69 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v419 = type metadata accessor for Date();
  uint64_t v413 = *(void *)(v419 - 8);
  uint64_t v70 = __chkstk_darwin(v419);
  uint64_t v72 = (char *)&v320 - ((v71 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v73 = __chkstk_darwin(v70);
  uint64_t v385 = (char *)&v320 - v74;
  uint64_t v75 = __chkstk_darwin(v73);
  uint64_t v399 = (char *)&v320 - v76;
  uint64_t v77 = __chkstk_darwin(v75);
  uint64_t v372 = (char *)&v320 - v78;
  uint64_t v79 = __chkstk_darwin(v77);
  uint64_t v400 = (char *)&v320 - v80;
  uint64_t v81 = __chkstk_darwin(v79);
  uint64_t v407 = (char *)&v320 - v82;
  uint64_t v83 = __chkstk_darwin(v81);
  uint64_t v404 = (char *)&v320 - v84;
  __chkstk_darwin(v83);
  uint64_t v408 = (char *)&v320 - v85;
  uint64_t v86 = sub_10017DF08(&qword_100E71408);
  __chkstk_darwin(v86 - 8);
  uint64_t v405 = (uint64_t)&v320 - ((v87 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v409 = type metadata accessor for ConditionDetailChartInputs(0);
  uint64_t v391 = *(void (**)(char *, char *, uint64_t))(v409 - 8);
  uint64_t v88 = __chkstk_darwin(v409);
  unint64_t v90 = (char *)&v320 - ((v89 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v88);
  uint64_t v410 = (uint64_t)&v320 - v91;
  uint64_t v92 = type metadata accessor for DetailCondition();
  uint64_t v365 = *(void (***)(char *, void, uint64_t))(v92 - 8);
  uint64_t v366 = v92;
  __chkstk_darwin(v92);
  uint64_t v364 = (char *)&v320 - ((v93 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v94 = type metadata accessor for ConditionDetailInput.Input(0);
  uint64_t v95 = __chkstk_darwin(v94);
  uint64_t v360 = (uint64_t)&v320 - ((v96 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v95);
  uint64_t v406 = (uint64_t)&v320 - v97;
  uint64_t v415 = type metadata accessor for DetailChartCondition();
  uint64_t v417 = *(void *)(v415 - 8);
  uint64_t v98 = __chkstk_darwin(v415);
  uint64_t v380 = (char *)&v320 - ((v99 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v98);
  uint64_t v416 = (char *)&v320 - v100;
  uint64_t v101 = sub_10017DF08(&qword_100E711F8);
  __chkstk_darwin(v101 - 8);
  unint64_t v103 = (char *)&v320 - ((v102 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v104 = type metadata accessor for DetailChartSelection();
  uint64_t v105 = __chkstk_darwin(v104);
  uint64_t v336 = (uint64_t)&v320 - ((v106 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v107 = __chkstk_darwin(v105);
  uint64_t v359 = (uint64_t)&v320 - v108;
  uint64_t v109 = __chkstk_darwin(v107);
  uint64_t v111 = (uint64_t *)((char *)&v320 - v110);
  uint64_t v411 = (int *)v94;
  uint64_t v112 = *(int *)(v94 + 80);
  uint64_t v113 = v109;
  uint64_t v412 = a1;
  sub_1001B49E8((uint64_t)&a1[v112], (uint64_t)v103, &qword_100E711F8);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v103, 1, v113) == 1)
  {
    uint64_t v114 = &qword_100E711F8;
    uint64_t v115 = (uint64_t)v103;
LABEL_3:
    sub_100178110(v115, v114);
LABEL_13:
    uint64_t v138 = (uint64_t)v418;
LABEL_14:
    uint64_t v139 = type metadata accessor for LollipopViewModel();
    uint64_t v140 = v138;
LABEL_15:
    uint64_t v141 = 1;
    return _s7Weather24LocationCompositionStateOwst_0(v140, v141, 1, v139);
  }
  sub_100183754((uint64_t)v103, (uint64_t)v111, (void (*)(void))type metadata accessor for DetailChartSelection);
  uint64_t v116 = (char *)v111 + *(int *)(v113 + 20);
  char v117 = v414;
  char v118 = static Date.== infix(_:_:)();
  uint64_t v119 = (uint64_t)v111;
  if ((v118 & 1) == 0)
  {
    sub_10019E1D8((uint64_t)v111, (void (*)(void))type metadata accessor for DetailChartSelection);
    goto LABEL_13;
  }
  uint64_t v324 = (int *)v113;
  uint64_t v320 = v42;
  uint64_t v321 = (int *)v29;
  uint64_t v390 = v72;
  uint64_t v120 = *v111;
  uint64_t v121 = *(void *)(v119 + 8);
  uint64_t v327 = (char *)v119;
  uint64_t v122 = (uint64_t)&v117[*(int *)(v29 + 24)];
  uint64_t v123 = v417;
  uint64_t v124 = *(void (**)(char *, uint64_t, uint64_t))(v417 + 16);
  uint64_t v125 = v416;
  uint64_t v328 = v122;
  uint64_t v126 = v415;
  uint64_t v322 = v124;
  uint64_t v323 = v417 + 16;
  ((void (*)(char *))v124)(v416);
  swift_bridgeObjectRetain();
  uint64_t v127 = DetailChartCondition.id.getter();
  uint64_t v129 = v128;
  uint64_t v325 = *(void (**)(char *, uint64_t))(v123 + 8);
  uint64_t v326 = v123 + 8;
  v325(v125, v126);
  if (v120 == v127 && v121 == v129)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_18;
  }
  char v131 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v131)
  {
LABEL_18:
    uint64_t v132 = v412;
    uint64_t v143 = v406;
    sub_10019DD78((uint64_t)v412, v406, (void (*)(void))type metadata accessor for ConditionDetailInput.Input);
    sub_10019E1D8(v143, (void (*)(void))type metadata accessor for ConditionDetailInput.Input);
    goto LABEL_19;
  }
  uint64_t v132 = v412;
  uint64_t v133 = v406;
  sub_10019DD78((uint64_t)v412, v406, (void (*)(void))type metadata accessor for ConditionDetailInput.Input);
  uint64_t v135 = v364;
  uint64_t v134 = v365;
  uint64_t v136 = v366;
  v365[13](v364, enum case for DetailCondition.precipitationTotal(_:), v366);
  char v137 = static DetailCondition.== infix(_:_:)();
  ((void (*)(char *, uint64_t))v134[1])(v135, v136);
  sub_10019E1D8(v133, (void (*)(void))type metadata accessor for ConditionDetailInput.Input);
  uint64_t v138 = (uint64_t)v418;
  if ((v137 & 1) == 0) {
    goto LABEL_52;
  }
LABEL_19:
  uint64_t v144 = *(void *)&v132[v411[7]];
  uint64_t v145 = *(void *)(v144 + 16);
  if (v145)
  {
    uint64_t v146 = v144 + ((*((unsigned __int8 *)v391 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v391 + 80));
    uint64_t v147 = *((void *)v391 + 9);
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_10019DD78(v146, (uint64_t)v90, (void (*)(void))type metadata accessor for ConditionDetailChartInputs);
      if (static Date.== infix(_:_:)()) {
        break;
      }
      sub_10019E1D8((uint64_t)v90, (void (*)(void))type metadata accessor for ConditionDetailChartInputs);
      v146 += v147;
      if (!--v145) {
        goto LABEL_25;
      }
    }
    uint64_t v149 = v405;
    sub_100183754((uint64_t)v90, v405, (void (*)(void))type metadata accessor for ConditionDetailChartInputs);
    uint64_t v148 = 0;
  }
  else
  {
    swift_bridgeObjectRetain();
LABEL_25:
    uint64_t v148 = 1;
    uint64_t v149 = v405;
  }
  uint64_t v150 = v409;
  _s7Weather24LocationCompositionStateOwst_0(v149, v148, 1, v409);
  swift_bridgeObjectRelease();
  int v151 = _s7Weather24LocationCompositionStateOwet_0(v149, 1, v150);
  uint64_t v152 = v413;
  uint64_t v153 = v419;
  uint64_t v154 = v415;
  uint64_t v155 = (uint64_t)v416;
  uint64_t v156 = v328;
  if (v151 == 1)
  {
    sub_10019E1D8((uint64_t)v327, (void (*)(void))type metadata accessor for DetailChartSelection);
    uint64_t v114 = &qword_100E71408;
    uint64_t v115 = v149;
    goto LABEL_3;
  }
  sub_100183754(v149, v410, (void (*)(void))type metadata accessor for ConditionDetailChartInputs);
  uint64_t v157 = *(void (**)(char *, char *, uint64_t))(v152 + 16);
  uint64_t v405 = v152 + 16;
  uint64_t v391 = v157;
  v157(v408, v116, v153);
  uint64_t v158 = enum case for DetailChartCondition.chanceOfRain(_:);
  uint64_t v160 = v417 + 104;
  int v159 = *(void (***)(char *, void, uint64_t))(v417 + 104);
  ((void (*)(uint64_t, void, uint64_t))v159)(v155, enum case for DetailChartCondition.chanceOfRain(_:), v154);
  char v161 = sub_100889C5C(v156, v155);
  uint64_t v162 = (void (*)(uint64_t, uint64_t))v325;
  v325((char *)v155, v154);
  uint64_t v417 = v160;
  LODWORD(v366) = v158;
  uint64_t v138 = (uint64_t)v418;
  if (v161)
  {
    int v163 = v414[v321[9]];
    uint64_t v164 = v359;
    sub_10019DD78((uint64_t)v327, v359, (void (*)(void))type metadata accessor for DetailChartSelection);
    uint64_t v165 = v360;
    sub_10019DD78((uint64_t)v412, v360, (void (*)(void))type metadata accessor for ConditionDetailInput.Input);
    if (v163)
    {
      Date.distance(to:)();
      double v167 = v166;
      sub_10019E1D8(v165, (void (*)(void))type metadata accessor for ConditionDetailInput.Input);
      sub_10019E1D8(v164, (void (*)(void))type metadata accessor for DetailChartSelection);
      uint64_t v162 = (void (*)(uint64_t, uint64_t))v325;
      uint64_t v158 = v366;
      if (v167 <= 3600.0) {
        goto LABEL_32;
      }
    }
    else
    {
      sub_10019E1D8(v165, (void (*)(void))type metadata accessor for ConditionDetailInput.Input);
      sub_10019E1D8(v164, (void (*)(void))type metadata accessor for DetailChartSelection);
    }
    (*(void (**)(char *, uint64_t))(v413 + 8))(v408, v419);
    sub_10019E1D8(v410, (void (*)(void))type metadata accessor for ConditionDetailChartInputs);
LABEL_52:
    sub_10019E1D8((uint64_t)v327, (void (*)(void))type metadata accessor for DetailChartSelection);
    goto LABEL_14;
  }
LABEL_32:
  uint64_t v365 = v159;
  ((void (*)(uint64_t, uint64_t, uint64_t))v159)(v155, v158, v154);
  char v168 = sub_100889C5C(v328, v155);
  v162(v155, v154);
  if (v168)
  {
    uint64_t v169 = &v327[v324[9]];
    uint64_t v170 = *(void *)v169;
    char v171 = v169[8];
    uint64_t v172 = v336;
    sub_10019DD78((uint64_t)v327, v336, (void (*)(void))type metadata accessor for DetailChartSelection);
    uint64_t v173 = v419;
    uint64_t v174 = v407;
    if (v171) {
      uint64_t v170 = *(void *)(v172 + v324[8]);
    }
    sub_10019E1D8(v172, (void (*)(void))type metadata accessor for DetailChartSelection);
    uint64_t v175 = (uint64_t)v327;
    uint64_t v176 = v324;
  }
  else
  {
    uint64_t v176 = v324;
    uint64_t v175 = (uint64_t)v327;
    uint64_t v170 = *(void *)&v327[v324[8]];
    uint64_t v173 = v419;
    uint64_t v174 = v407;
  }
  uint64_t v177 = v404;
  uint64_t v178 = v391;
  v391(v404, (char *)(v175 + v176[6]), v173);
  v178(v174, v177, v173);
  uint64_t v179 = v373;
  (*(void (**)(char *, void, uint64_t))(v373 + 104))(v394, enum case for Calendar.MatchingPolicy.nextTime(_:), v395);
  uint64_t v180 = v376;
  uint64_t v181 = v374;
  (*(void (**)(char *, void, uint64_t))(v376 + 104))(v374, enum case for Calendar.RepeatedTimePolicy.first(_:), v396);
  uint64_t v183 = v377;
  uint64_t v182 = v378;
  uint64_t v184 = v379;
  (*(void (**)(char *, void, uint64_t))(v378 + 104))(v377, enum case for Calendar.SearchDirection.forward(_:), v379);
  uint64_t v185 = (uint64_t)v375;
  unsigned __int8 v186 = v408;
  Calendar.date(bySettingHour:minute:second:of:matchingPolicy:repeatedTimePolicy:direction:)();
  uint64_t v187 = v183;
  uint64_t v188 = v419;
  (*(void (**)(char *, uint64_t))(v182 + 8))(v187, v184);
  (*(void (**)(char *, uint64_t))(v180 + 8))(v181, v396);
  (*(void (**)(char *, uint64_t))(v179 + 8))(v394, v395);
  unint64_t v189 = v372;
  v391(v372, v186, v188);
  if (_s7Weather24LocationCompositionStateOwet_0(v185, 1, v188) == 1)
  {
    uint64_t v190 = v400;
    (*(void (**)(char *, char *, uint64_t))(v413 + 32))(v400, v189, v188);
    sub_100178110(v185, (uint64_t *)&unk_100E73CA0);
  }
  else
  {
    uint64_t v191 = v413;
    (*(void (**)(char *, uint64_t))(v413 + 8))(v189, v188);
    uint64_t v190 = v400;
    (*(void (**)(char *, uint64_t, uint64_t))(v191 + 32))(v400, v185, v188);
  }
  uint64_t v192 = v369;
  uint64_t v193 = v399;
  uint64_t v194 = v397;
  Date.wc_addDays(_:calendar:)();
  char v195 = static Date.< infix(_:_:)();
  uint64_t v196 = v418;
  uint64_t v197 = (uint64_t)v407;
  uint64_t v198 = v328;
  if (v195)
  {
    (*(void (**)(char *, char *, uint64_t))(v413 + 24))(v407, v190, v419);
  }
  else if (static Date.> infix(_:_:)())
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v413 + 24))(v197, v193, v419);
  }
  else
  {
    uint64_t v207 = v331;
    if (sub_100AA2734(v197, v331, v198))
    {
      uint64_t v208 = v400;
      if (static Date.< infix(_:_:)())
      {
        (*(void (**)(uint64_t, char *, uint64_t))(v413 + 24))(v197, v208, v419);
      }
      else
      {
        uint64_t v310 = v399;
        char v311 = static Date.> infix(_:_:)();
        uint64_t v312 = v419;
        (*(void (**)(uint64_t, uint64_t))(v413 + 8))(v197, v419);
        if (v311) {
          uint64_t v313 = (uint64_t)v310;
        }
        else {
          uint64_t v313 = v207;
        }
        v391((char *)v197, (char *)v313, v312);
      }
    }
  }
  if ((DetailChartCondition.shouldInterpolateLollipop.getter() & 1) != 0 && v384)
  {
    ChartSeriesValues.interpolationElements.getter();
    MidpointInterpolator.init()();
    v391(v385, (char *)v197, v419);
    (*(void (**)(char *, unsigned __int8 *, uint64_t))(v338 + 16))(v337, &v414[v321[14]], v339);
    uint64_t v199 = (uint64_t)v340;
    MidpointInterpolator.InterpolationMode.init(_:)();
    if (_s7Weather24LocationCompositionStateOwet_0(v199, 1, v192) == 1)
    {
      (*(void (**)(char *, void, uint64_t))(v368 + 104))(v367, enum case for MidpointInterpolator.InterpolationMode.cubic(_:), v192);
      sub_100178110(v199, &qword_100E6BF78);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v368 + 32))(v367, v199, v192);
    }
    MidpointInterpolator.interpolationValue(data:date:interpolationMode:)();
    int v206 = 0;
    uint64_t v210 = v209;
    uint64_t v379 = 0;
    swift_bridgeObjectRelease();
    uint64_t v204 = v210;
    uint64_t v211 = v413;
    (*(void (**)(char *, uint64_t))(v368 + 8))(v367, v192);
    uint64_t v212 = v419;
    (*(void (**)(char *, uint64_t))(v211 + 8))(v385, v419);
    (*(void (**)(char *, uint64_t))(v341 + 8))(v386, v342);
    uint64_t v201 = v366;
  }
  else
  {
    uint64_t v200 = (uint64_t)v416;
    uint64_t v201 = v366;
    uint64_t v202 = v415;
    ((void (*)(char *, void, uint64_t))v365)(v416, v366, v415);
    char v203 = sub_100889C5C(v198, v200);
    v325((char *)v200, v202);
    if (v203)
    {
      uint64_t v204 = sub_100AA1FE8(v197, v412, v194, v384);
      uint64_t v379 = 0;
      int v206 = v205 & 1;
    }
    else
    {
      uint64_t v204 = 0;
      uint64_t v379 = 0;
      int v206 = 1;
    }
    uint64_t v212 = v419;
  }
  if ((DetailChartCondition.shouldInterpolateLollipop.getter() & 1) != 0 && !v206) {
    goto LABEL_64;
  }
  uint64_t v213 = v198;
  uint64_t v214 = v196;
  uint64_t v215 = (uint64_t)v416;
  uint64_t v216 = v201;
  uint64_t v217 = v415;
  ((void (*)(char *, uint64_t, uint64_t))v365)(v416, v216, v415);
  LOBYTE(v213) = sub_100889C5C(v213, v215);
  uint64_t v218 = v215;
  uint64_t v196 = v214;
  v325((char *)v218, v217);
  if (v206 & 1 | ((v213 & 1) == 0))
  {
    uint64_t v219 = 1;
    uint64_t v220 = v403;
  }
  else
  {
LABEL_64:
    v391(v390, (char *)v197, v212);
    uint64_t v220 = v403;
    DetailChartDataPoint.init(date:value:)();
    uint64_t v219 = 0;
  }
  uint64_t v221 = v220;
  uint64_t v222 = v401;
  _s7Weather24LocationCompositionStateOwst_0(v221, v219, 1, v401);
  _s7Weather24LocationCompositionStateOwst_0(v398, 1, 1, v222);
  uint64_t v223 = (char *)*(int *)(v409 + 20);
  uint64_t v224 = v381;
  sub_10043F6E0(*(void *)&v223[v410], v381);
  uint64_t v225 = type metadata accessor for ConditionDetailChartInput(0);
  int v226 = _s7Weather24LocationCompositionStateOwet_0(v224, 1, v225);
  uint64_t v394 = v223;
  if (v226 == 1)
  {
    sub_100178110(v224, &qword_100E6ECE0);
    id v227 = (char *)_swiftEmptyArrayStorage;
  }
  else
  {
    uint64_t v228 = v343;
    sub_10019DD78(v224 + *(int *)(v225 + 20), v343, (void (*)(void))type metadata accessor for ConditionDetailChartDataInput);
    sub_10019E1D8(v224, (void (*)(void))type metadata accessor for ConditionDetailChartInput);
    id v227 = *(char **)(v228 + v321[11]);
    swift_bridgeObjectRetain();
    sub_10019E1D8(v228, (void (*)(void))type metadata accessor for ConditionDetailChartDataInput);
  }
  uint64_t v229 = v393;
  uint64_t v395 = v225;
  uint64_t v396 = v204;
  LODWORD(v397) = v206;
  uint64_t v230 = *((void *)v227 + 2);
  if (v230)
  {
    uint64_t v414 = *(unsigned __int8 **)(v402 + 16);
    uint64_t v231 = &v227[(*(unsigned __int8 *)(v402 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v402 + 80)];
    unint64_t v409 = (unint64_t)&v327[v324[7]];
    uint64_t v232 = (void (**)(char *, uint64_t))(v413 + 8);
    uint64_t v233 = v227;
    uint64_t v234 = (void (**)(char *, uint64_t))(v402 + 8);
    uint64_t v406 = *(void *)(v402 + 72);
    uint64_t v386 = v233;
    swift_bridgeObjectRetain();
    uint64_t v235 = v344;
    uint64_t v236 = v390;
    while (1)
    {
      ((void (*)(char *, char *, uint64_t))v414)(v235, v231, v229);
      HourWeather.date.getter();
      char v237 = static Date.== infix(_:_:)();
      (*v232)(v236, v419);
      if (v237) {
        break;
      }
      (*v234)(v235, v229);
      v231 += v406;
      if (!--v230)
      {
        swift_bridgeObjectRelease();
        uint64_t v238 = 1;
        uint64_t v196 = v418;
        goto LABEL_74;
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v239 = (uint64_t)v389;
    (*(void (**)(char *, char *, uint64_t))(v402 + 32))(v389, v235, v229);
    uint64_t v238 = 0;
    uint64_t v196 = v418;
  }
  else
  {
    uint64_t v238 = 1;
LABEL_74:
    uint64_t v239 = (uint64_t)v389;
  }
  _s7Weather24LocationCompositionStateOwst_0(v239, v238, 1, v229);
  swift_bridgeObjectRelease();
  uint64_t v240 = (uint64_t)v416;
  uint64_t v241 = v415;
  v322(v416, v328, v415);
  unint64_t v242 = v380;
  ((void (*)(char *, void, uint64_t))v365)(v380, v366, v241);
  sub_100AA6158((unint64_t *)&qword_100E63990, (void (*)(uint64_t))&type metadata accessor for DetailChartCondition);
  uint64_t v243 = v229;
  char v244 = dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t v245 = v242;
  uint64_t v246 = (void (*)(uint64_t, uint64_t))v325;
  v325(v245, v241);
  v246(v240, v241);
  uint64_t v247 = v382;
  sub_1001B49E8(v239, v382, &qword_100E6BEC0);
  uint64_t v248 = (uint64_t)v383;
  if ((v244 & 1) != 0 || _s7Weather24LocationCompositionStateOwet_0(v247, 1, v243) != 1)
  {
    sub_100178110(v247, &qword_100E6BEC0);
    uint64_t v252 = v370;
    _s7Weather24LocationCompositionStateOwst_0(v370, 1, 1, v243);
  }
  else
  {
    sub_100178110(v247, &qword_100E6BEC0);
    uint64_t v249 = v332;
    sub_10043F6E0(*(void *)&v394[v410], v332);
    uint64_t v250 = v395;
    int v251 = _s7Weather24LocationCompositionStateOwet_0(v249, 1, v395);
    uint64_t v252 = v370;
    if (v251 == 1)
    {
      uint64_t v253 = sub_100178110(v249, &qword_100E6ECE0);
    }
    else
    {
      uint64_t v254 = v249 + *(int *)(v250 + 20);
      uint64_t v255 = v343;
      sub_10019DD78(v254, v343, (void (*)(void))type metadata accessor for ConditionDetailChartDataInput);
      sub_10019E1D8(v249, (void (*)(void))type metadata accessor for ConditionDetailChartInput);
      swift_bridgeObjectRetain();
      uint64_t v253 = sub_10019E1D8(v255, (void (*)(void))type metadata accessor for ConditionDetailChartDataInput);
    }
    __chkstk_darwin(v253);
    *(&v320 - 2) = v327;
    sub_100A970E8();
    swift_bridgeObjectRelease();
    uint64_t v243 = v393;
  }
  uint64_t v256 = (uint64_t)v371;
  sub_1001B49E8(v239, v248, &qword_100E6BEC0);
  sub_100127928(v252, v256, &qword_100E6BEC0);
  if (_s7Weather24LocationCompositionStateOwet_0(v248, 1, v243) != 1)
  {
    sub_100178110(v256, &qword_100E6BEC0);
    uint64_t v273 = v402;
    uint64_t v274 = *(void (**)(char *, uint64_t, uint64_t))(v402 + 32);
    uint64_t v257 = (uint64_t)v320;
    v274(v320, v248, v243);
    _s7Weather24LocationCompositionStateOwst_0(v257, 0, 1, v243);
    goto LABEL_95;
  }
  uint64_t v257 = (uint64_t)v320;
  sub_100127928(v256, (uint64_t)v320, &qword_100E6BEC0);
  sub_100178110(v248, &qword_100E6BEC0);
  if (_s7Weather24LocationCompositionStateOwet_0(v257, 1, v243) != 1)
  {
    uint64_t v273 = v402;
    uint64_t v274 = *(void (**)(char *, uint64_t, uint64_t))(v402 + 32);
LABEL_95:
    uint64_t v275 = v387;
    v274(v387, v257, v243);
    (*(void (**)(char *, char *, uint64_t))(v273 + 16))(v388, v275, v243);
    uint64_t v276 = v411;
    uint64_t v277 = &v412[v411[15]];
    uint64_t v278 = v412;
    uint64_t v279 = type metadata accessor for DayWeather();
    uint64_t v280 = (uint64_t)v350;
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v279 - 8) + 16))(v350, v277, v279);
    _s7Weather24LocationCompositionStateOwst_0(v280, 0, 1, v279);
    uint64_t v281 = v328;
    v322(v416, v328, v241);
    (*(void (**)(char *, uint64_t, uint64_t))(v351 + 16))(v353, v358, v352);
    (*(void (**)(char *, char *, uint64_t))(v354 + 16))(v356, &v278[v276[16]], v355);
    Location.timeZone.getter();
    uint64_t v282 = v357;
    WeatherValueCalculationContext.init(hourWeather:dayWeather:chartCondition:units:currentWeather:timeZone:)();
    int v283 = v392;
    sub_100AA1CCC(v281);
    sub_1001B1E64(v283 + 48, v283[51]);
    sub_1009CB2DC((uint64_t)&v412[v411[8]], v403, (uint64_t *)v421);
    if (v397)
    {
      sub_1001B1E64(v283 + 28, v283[31]);
      dispatch thunk of DetailChartDataPointValueCalculatorType.value(for:)();
      Double.clamped(to:)();
      uint64_t v284 = v387;
      HourWeather.date.getter();
      uint64_t v285 = v398;
      uint64_t v286 = (uint64_t)v361;
      uint64_t v288 = v348;
      uint64_t v287 = v349;
      uint64_t v196 = v418;
    }
    else
    {
      Double.clamped(to:)();
      v391(v390, v407, v419);
      uint64_t v285 = v398;
      uint64_t v286 = (uint64_t)v361;
      uint64_t v288 = v348;
      uint64_t v287 = v349;
      uint64_t v196 = v418;
      uint64_t v284 = v387;
    }
    DetailChartDataPoint.init(date:value:)();
    (*(void (**)(char *, uint64_t))(v288 + 8))(v282, v287);
    (*(void (**)(char *, uint64_t))(v402 + 8))(v284, v393);
    uint64_t v289 = v401;
    uint64_t v290 = (uint64_t)v389;
LABEL_99:
    sub_100178110(v285, &qword_100EA69B8);
    _s7Weather24LocationCompositionStateOwst_0(v286, 0, 1, v289);
    sub_100127928(v286, v285, &qword_100EA69B8);
    v420[0] = v421[0];
    v420[1] = v421[1];
    v420[2] = v421[2];
    v420[3] = v421[3];
    v420[4] = v421[4];
    v420[5] = v421[5];
    v420[6] = v421[6];
    v420[7] = v421[7];
    v420[8] = v421[8];
    memcpy(v422, v420, sizeof(v422));
    uint64_t v291 = v363;
    sub_1001B49E8(v285, v363, &qword_100EA69B8);
    if (_s7Weather24LocationCompositionStateOwet_0(v291, 1, v289) != 1)
    {
      uint64_t v294 = v289;
      uint64_t v295 = v333;
      uint64_t v296 = v413;
      uint64_t v417 = *(void *)(v334 + 32);
      ((void (*)(char *, uint64_t, uint64_t))v417)(v333, v291, v294);
      sub_1001B1E64(v392 + 43, v392[46]);
      uint64_t v297 = v335;
      uint64_t v298 = v328;
      sub_1004837A0(v422, v328, 0, v335);
      sub_100AA6608((uint64_t)v420);
      unint64_t v299 = v416;
      uint64_t v300 = v298;
      char v301 = v196;
      uint64_t v302 = v415;
      v322(v416, v300, v415);
      uint64_t v414 = (unsigned __int8 *)DetailChartCondition.id.getter();
      uint64_t v412 = v303;
      v325(v299, v302);
      sub_100178110(v290, &qword_100E6BEC0);
      sub_100178110(v285, &qword_100EA69B8);
      sub_100178110(v403, &qword_100EA69B8);
      uint64_t v304 = *(void (**)(char *, uint64_t))(v296 + 8);
      uint64_t v305 = v419;
      v304(v399, v419);
      v304(v400, v305);
      v304(v407, v305);
      v304(v404, v305);
      v304(v408, v305);
      sub_10019E1D8(v410, (void (*)(void))type metadata accessor for ConditionDetailChartInputs);
      uint64_t v306 = (int *)type metadata accessor for LollipopViewModel();
      ((void (*)(char *, char *, uint64_t))v417)((char *)v301 + v306[5], v295, v401);
      uint64_t v307 = v412;
      *char v301 = v414;
      v301[1] = v307;
      *(void *)((char *)v301 + v306[6]) = v170;
      sub_100183754((uint64_t)v297, (uint64_t)v301 + v306[7], (void (*)(void))type metadata accessor for LollipopDetailViewModel);
      sub_10019E1D8((uint64_t)v327, (void (*)(void))type metadata accessor for DetailChartSelection);
      uint64_t v140 = (uint64_t)v301;
      uint64_t v141 = 0;
      uint64_t v139 = (uint64_t)v306;
      return _s7Weather24LocationCompositionStateOwst_0(v140, v141, 1, v139);
    }
    sub_100AA6608((uint64_t)v420);
    sub_100178110(v290, &qword_100E6BEC0);
    sub_100178110(v285, &qword_100EA69B8);
    sub_100178110(v403, &qword_100EA69B8);
    uint64_t v292 = *(void (**)(char *, uint64_t))(v413 + 8);
    uint64_t v293 = v419;
    v292(v399, v419);
    v292(v400, v293);
    v292(v407, v293);
    v292(v404, v293);
    v292(v408, v293);
    sub_10019E1D8(v410, (void (*)(void))type metadata accessor for ConditionDetailChartInputs);
    sub_10019E1D8((uint64_t)v327, (void (*)(void))type metadata accessor for DetailChartSelection);
    sub_100178110(v291, &qword_100EA69B8);
    goto LABEL_108;
  }
  sub_100178110(v257, &qword_100E6BEC0);
  ((void (*)(uint64_t, void, uint64_t))v365)(v240, v366, v241);
  char v258 = sub_100889C5C(v328, v240);
  v325((char *)v240, v241);
  if ((v258 & 1) == 0)
  {
    sub_100178110(v239, &qword_100E6BEC0);
    sub_100178110(v398, &qword_100EA69B8);
    sub_100178110(v403, &qword_100EA69B8);
    uint64_t v308 = *(void (**)(char *, uint64_t))(v413 + 8);
    uint64_t v309 = v399;
LABEL_107:
    uint64_t v314 = v419;
    v308(v309, v419);
    v308(v400, v314);
    v308(v407, v314);
    v308(v404, v314);
    v308(v408, v314);
    sub_10019E1D8(v410, (void (*)(void))type metadata accessor for ConditionDetailChartInputs);
    sub_10019E1D8((uint64_t)v327, (void (*)(void))type metadata accessor for DetailChartSelection);
LABEL_108:
    uint64_t v139 = type metadata accessor for LollipopViewModel();
    uint64_t v140 = (uint64_t)v196;
    goto LABEL_15;
  }
  uint64_t v259 = v398;
  uint64_t v260 = v399;
  if (!v384)
  {
LABEL_106:
    sub_100178110(v239, &qword_100E6BEC0);
    sub_100178110(v259, &qword_100EA69B8);
    sub_100178110(v403, &qword_100EA69B8);
    uint64_t v308 = *(void (**)(char *, uint64_t))(v413 + 8);
    uint64_t v309 = v260;
    goto LABEL_107;
  }
  uint64_t result = ChartSeriesValues.interpolationElements.getter();
  uint64_t v261 = result;
  unint64_t v262 = *(void *)(result + 16);
  if (v262 < 2)
  {
    swift_bridgeObjectRelease();
    goto LABEL_106;
  }
  int64_t v263 = 0;
  int64_t v264 = v262 - 1;
  uint64_t v265 = v346;
  unint64_t v409 = result + ((*(unsigned __int8 *)(v347 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v347 + 80));
  uint64_t v414 = (unsigned __int8 *)(v347 + 16);
  uint64_t v417 = v347 + 8;
  uint64_t v406 = v413 + 8;
  while (1)
  {
    if ((unint64_t)v263 >= *(void *)(v261 + 16))
    {
      __break(1u);
      goto LABEL_120;
    }
    uint64_t v266 = v261;
    uint64_t v267 = v347;
    uint64_t v268 = *(void *)(v347 + 72);
    uint64_t v269 = *(void (**)(char *, unint64_t, uint64_t))(v347 + 16);
    uint64_t v270 = v345;
    v269(v345, v409 + v268 * v263, v265);
    uint64_t v271 = v390;
    InterpolationElement.date.getter();
    uint64_t v272 = *(void (**)(char *, uint64_t))(v267 + 8);
    v272(v270, v265);
    LOBYTE(v270) = static Date.< infix(_:_:)();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))v406)(v271, v419);
    if ((v270 & 1) == 0) {
      break;
    }
    ++v263;
    uint64_t v261 = v266;
    if (v264 == v263)
    {
      int64_t v263 = v264;
      goto LABEL_112;
    }
  }
  uint64_t v261 = v266;
LABEL_112:
  if (v264 >= v263) {
    int64_t v315 = v263;
  }
  else {
    int64_t v315 = v264;
  }
  if (!v263) {
    int64_t v315 = 0;
  }
  uint64_t v316 = v392;
  if (v315 < *(void *)(v261 + 16))
  {
    uint64_t v318 = v345;
    uint64_t v317 = v346;
    v269(v345, v409 + v315 * v268, v346);
    swift_bridgeObjectRelease();
    sub_1001B1E64(v316 + 48, v316[51]);
    uint64_t v319 = v362;
    Location.timeZone.getter();
    sub_1009CECA0((uint64_t)v421);
    (*(void (**)(char *, uint64_t))(v329 + 8))(v319, v330);
    InterpolationElement.date.getter();
    InterpolationElement.value.getter();
    uint64_t v286 = (uint64_t)v361;
    DetailChartDataPoint.init(date:value:)();
    v272(v318, v317);
    uint64_t v196 = v418;
    uint64_t v289 = v401;
    uint64_t v290 = (uint64_t)v389;
    uint64_t v285 = v398;
    goto LABEL_99;
  }
LABEL_120:
  __break(1u);
  return result;
}

uint64_t sub_100AA1294(uint64_t a1, uint64_t a2)
{
  sub_100178110(a1, &qword_100E82140);
  sub_10019DD78(a2, a1, (void (*)(void))type metadata accessor for LollipopViewModel);
  uint64_t v4 = type metadata accessor for LollipopViewModel();

  return _s7Weather24LocationCompositionStateOwst_0(a1, 0, 1, v4);
}

uint64_t sub_100AA130C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, char *a8@<X7>, void *a9@<X8>, uint64_t a10)
{
  uint64_t v97 = a8;
  uint64_t v108 = a5;
  uint64_t v109 = a6;
  uint64_t v113 = a9;
  uint64_t v15 = type metadata accessor for DetailChartCondition();
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v100 = (char *)v92 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_10017DF08(&qword_100EAE588);
  uint64_t v19 = __chkstk_darwin(v18 - 8);
  uint64_t v102 = (uint64_t)v92 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v110 = (char *)v92 - v21;
  uint64_t v104 = type metadata accessor for ConditionDetailViewModelFactory.DetailChartViewModelCacheKey(0);
  uint64_t v22 = __chkstk_darwin(v104);
  uint64_t v101 = (uint64_t)v92 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  uint64_t v114 = (char *)v92 - v24;
  uint64_t v107 = type metadata accessor for ExtremaResult();
  uint64_t v99 = *(void *)(v107 - 8);
  __chkstk_darwin(v107);
  uint64_t v98 = (char *)v92 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_10017DF08(&qword_100E6BCB0);
  uint64_t v27 = __chkstk_darwin(v26 - 8);
  uint64_t v106 = (uint64_t)v92 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27);
  uint64_t v121 = (uint64_t)v92 - v29;
  uint64_t v30 = type metadata accessor for DetailChartExtrema();
  uint64_t v116 = *(void *)(v30 - 8);
  uint64_t v117 = v30;
  __chkstk_darwin(v30);
  uint64_t v115 = (char *)v92 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = *(int *)(type metadata accessor for ConditionDetailChartDataInput(0) + 24);
  uint64_t v103 = a2;
  uint64_t v33 = a2 + v32;
  sub_100AA1CCC(a2 + v32);
  double v35 = v34;
  double v37 = v36;
  uint64_t v119 = a7;
  uint64_t v120 = a3;
  uint64_t v118 = a1;
  uint64_t v111 = v16;
  uint64_t v112 = v15;
  uint64_t v105 = v33;
  if (a4)
  {
    uint64_t v38 = ChartSeriesValues.seriesMinValue.getter();
    int v94 = v39;
    if (v39)
    {
      uint64_t v96 = v38;
    }
    else
    {
      Double.clamped(to:)();
      uint64_t v96 = v42;
    }
    uint64_t v43 = ChartSeriesValues.seriesMaxValue.getter();
    v92[1] = v44;
    if (v44)
    {
      uint64_t v93 = v43;
    }
    else
    {
      Double.clamped(to:)();
      uint64_t v93 = v45;
    }
    ChartSeriesValues.seriesMinSecondValue.getter();
    if ((v46 & 1) == 0) {
      Double.clamped(to:)();
    }
    uint64_t v40 = a4;
    ChartSeriesValues.seriesMaxSecondValue.getter();
    if ((v47 & 1) == 0) {
      Double.clamped(to:)();
    }
    ChartSeriesValues.seriesMinThirdValue.getter();
    if ((v48 & 1) == 0) {
      Double.clamped(to:)();
    }
    ChartSeriesValues.seriesMaxThirdValue.getter();
    if ((v49 & 1) == 0) {
      Double.clamped(to:)();
    }
    uint64_t v41 = v107;
  }
  else
  {
    uint64_t v40 = 0;
    uint64_t v41 = v107;
  }
  uint64_t v95 = v40;
  uint64_t v50 = v115;
  DetailChartExtrema.init(minValue:maxValue:minSecondValue:maxSecondValue:minThirdValue:maxThirdValue:)();
  uint64_t v51 = v106;
  sub_1001B49E8(v108, v106, &qword_100E6BCB0);
  uint64_t v52 = 1;
  int v53 = _s7Weather24LocationCompositionStateOwet_0(v51, 1, v41);
  uint64_t v54 = v119;
  uint64_t v55 = v120;
  uint64_t v56 = v121;
  if (v53 != 1)
  {
    uint64_t v57 = v99;
    uint64_t v58 = v98;
    (*(void (**)(char *, uint64_t, uint64_t))(v99 + 32))(v98, v51, v41);
    sub_100AA1ED4();
    (*(void (**)(char *, uint64_t))(v57 + 8))(v58, v41);
    uint64_t v52 = 0;
  }
  _s7Weather24LocationCompositionStateOwst_0(v56, v52, 1, v41);
  uint64_t v59 = type metadata accessor for Date();
  uint64_t v60 = (uint64_t)v114;
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v59 - 8) + 16))(v114, v109, v59);
  uint64_t v109 = type metadata accessor for ConditionDetailInput.Input(0);
  uint64_t v61 = (uint64_t *)(v54 + *(int *)(v109 + 84));
  uint64_t v62 = *v61;
  uint64_t v63 = v61[1];
  uint64_t v64 = (int *)v104;
  sub_1001B49E8(v56, v60 + *(int *)(v104 + 24), &qword_100E6BCB0);
  uint64_t v66 = v116;
  uint64_t v65 = v117;
  (*(void (**)(uint64_t, char *, uint64_t))(v116 + 16))(v60 + v64[8], v50, v117);
  uint64_t v67 = v60 + v64[9];
  uint64_t v68 = type metadata accessor for ConditionUnits();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v68 - 8) + 16))(v67, v55, v68);
  uint64_t v69 = v111;
  uint64_t v70 = v105;
  uint64_t v71 = v50;
  uint64_t v72 = v112;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v111 + 16))(v60 + v64[10], v105, v112);
  uint64_t v73 = (void *)(v60 + v64[5]);
  *uint64_t v73 = v62;
  v73[1] = v63;
  uint64_t v74 = (double *)(v60 + v64[7]);
  *uint64_t v74 = v35;
  v74[1] = v37;
  uint64_t v75 = *(void *)(v118 + 424);
  swift_bridgeObjectRetain();
  uint64_t v76 = (uint64_t)v110;
  uint64_t v108 = v75;
  Cache.subscript.getter();
  uint64_t v77 = type metadata accessor for ChartViewModel(0);
  if (_s7Weather24LocationCompositionStateOwet_0(v76, 1, v77) == 1)
  {
    sub_100178110(v76, &qword_100EAE588);
    uint64_t v78 = (uint64_t)v100;
    (*(void (**)(char *, void, uint64_t))(v69 + 104))(v100, enum case for DetailChartCondition.chanceOfRain(_:), v72);
    char v79 = sub_100889C5C(v70, v78);
    (*(void (**)(uint64_t, uint64_t))(v69 + 8))(v78, v72);
    if (v79)
    {
      uint64_t v80 = v118;
      uint64_t v81 = sub_100AA1FE8((uint64_t)v97, v97, a10, v95);
      char v83 = v82 & 1;
      uint64_t v84 = (uint64_t)v114;
      uint64_t v85 = (uint64_t)v115;
      uint64_t v86 = v120;
    }
    else
    {
      uint64_t v81 = 0;
      char v83 = 1;
      uint64_t v84 = (uint64_t)v114;
      uint64_t v85 = (uint64_t)v115;
      uint64_t v86 = v120;
      uint64_t v80 = v118;
    }
    sub_1001B1E64((void *)(v80 + 16), *(void *)(v80 + 40));
    uint64_t v88 = v113;
    uint64_t v89 = v121;
    sub_1003053E0(v103, v121, v85, v86, v81, v83, *(unsigned __int8 *)(v119 + *(int *)(v109 + 104)), v113, v35, v37);
    sub_10019DD78(v84, v101, (void (*)(void))type metadata accessor for ConditionDetailViewModelFactory.DetailChartViewModelCacheKey);
    uint64_t v90 = (uint64_t)v88;
    uint64_t v91 = v102;
    sub_10019DD78(v90, v102, (void (*)(void))type metadata accessor for ChartViewModel);
    _s7Weather24LocationCompositionStateOwst_0(v91, 0, 1, v77);
    Cache.subscript.setter();
    sub_10019E1D8(v84, (void (*)(void))type metadata accessor for ConditionDetailViewModelFactory.DetailChartViewModelCacheKey);
    sub_100178110(v89, &qword_100E6BCB0);
    return (*(uint64_t (**)(uint64_t, uint64_t))(v116 + 8))(v85, v117);
  }
  else
  {
    sub_10019E1D8(v60, (void (*)(void))type metadata accessor for ConditionDetailViewModelFactory.DetailChartViewModelCacheKey);
    sub_100178110(v121, &qword_100E6BCB0);
    (*(void (**)(char *, uint64_t))(v66 + 8))(v71, v65);
    return sub_100183754(v76, (uint64_t)v113, (void (*)(void))type metadata accessor for ChartViewModel);
  }
}

uint64_t sub_100AA1CCC(uint64_t a1)
{
  uint64_t v2 = sub_10017DF08(&qword_100E6B648);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DetailChartCondition();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
  if ((*(unsigned int (**)(char *, uint64_t))(v7 + 88))(v9, v6) != enum case for DetailChartCondition.visibility(_:)) {
    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  uint64_t v10 = (void *)ConditionUnits.visibility.getter();
  static Measurement<>.maxVisibility(for:)();

  Measurement.value.getter();
  double v12 = v11;
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  if (v12 < 0.0) {
    __break(1u);
  }
  return result;
}

uint64_t sub_100AA1ED4()
{
  uint64_t v0 = type metadata accessor for Date();
  uint64_t v1 = __chkstk_darwin(v0 - 8);
  __chkstk_darwin(v1);
  ExtremaResult.maxValue.getter();
  Double.clamped(to:)();
  ExtremaResult.maxDate.getter();
  ExtremaResult.minValue.getter();
  Double.clamped(to:)();
  ExtremaResult.minDate.getter();
  return ExtremaResult.init(maxValue:maxDate:minValue:minDate:)();
}

uint64_t sub_100AA1FE8(uint64_t a1, char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v48 = a4;
  uint64_t v52 = a3;
  int v53 = a2;
  uint64_t v5 = type metadata accessor for Calendar.Component();
  uint64_t v47 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for Date();
  uint64_t v43 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10017DF08(&qword_100EAE580);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for InterpolationElement();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v18 = (char *)v39 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v20 = (char *)v39 - v19;
  if ((Date.isWithinHour(of:)() & 1) == 0) {
    return 0;
  }
  uint64_t v50 = v8;
  uint64_t v51 = a1;
  int v53 = v10;
  if (!v48)
  {
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v13, 1, 1, v14);
LABEL_13:
    sub_100178110((uint64_t)v13, &qword_100EAE580);
    return 0;
  }
  char v49 = v7;
  uint64_t v21 = ChartSeriesValues.interpolationElements.getter();
  uint64_t v22 = *(void *)(v21 + 16);
  if (v22)
  {
    uint64_t v40 = v20;
    uint64_t v41 = v15;
    uint64_t v48 = v5;
    uint64_t v42 = v13;
    uint64_t v23 = v15 + 16;
    char v46 = *(void (**)(char *, unint64_t, uint64_t))(v15 + 16);
    unint64_t v24 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
    v39[1] = v21;
    unint64_t v25 = v21 + v24;
    unsigned int v45 = enum case for Calendar.Component.minute(_:);
    uint64_t v26 = v5;
    uint64_t v27 = (void (**)(char *, void, uint64_t))(v47 + 104);
    uint64_t v28 = (void (**)(char *, uint64_t))(v47 + 8);
    uint64_t v29 = (void (**)(char *, uint64_t))(v43 + 8);
    uint64_t v30 = (void (**)(char *, uint64_t))(v23 - 8);
    uint64_t v47 = v23;
    uint64_t v43 = *(void *)(v23 + 56);
    int v44 = v27;
    while (1)
    {
      v46(v18, v25, v14);
      InterpolationElement.date.getter();
      uint64_t v31 = v49;
      (*v44)(v49, v45, v26);
      char v32 = Calendar.isDate(_:equalTo:toGranularity:)();
      uint64_t v33 = v31;
      double v34 = v53;
      (*v28)(v33, v26);
      (*v29)(v34, v50);
      if (v32) {
        break;
      }
      (*v30)(v18, v14);
      v25 += v43;
      if (!--v22)
      {
        uint64_t v35 = 1;
        uint64_t v15 = v41;
        uint64_t v13 = v42;
        goto LABEL_11;
      }
    }
    uint64_t v15 = v41;
    uint64_t v13 = v42;
    (*(void (**)(char *, char *, uint64_t))(v41 + 32))(v42, v18, v14);
    uint64_t v35 = 0;
LABEL_11:
    uint64_t v20 = v40;
  }
  else
  {
    uint64_t v35 = 1;
  }
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v13, v35, 1, v14);
  swift_bridgeObjectRelease();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v13, 1, v14) == 1) {
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v20, v13, v14);
  InterpolationElement.value.getter();
  uint64_t v38 = v37;
  (*(void (**)(char *, uint64_t))(v15 + 8))(v20, v14);
  return v38;
}

uint64_t sub_100AA2454@<X0>(uint64_t a1@<X0>, Swift::String *a2@<X8>)
{
  uint64_t v4 = type metadata accessor for DetailChartCondition();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  int v8 = (*(uint64_t (**)(char *, uint64_t))(v5 + 88))(v7, v4);
  if (v8 == enum case for DetailChartCondition.humidity(_:)
    || v8 == enum case for DetailChartCondition.pressure(_:)
    || v8 == enum case for DetailChartCondition.precipitationTotal(_:))
  {
    goto LABEL_9;
  }
  if (v8 == enum case for DetailChartCondition.temperature(_:))
  {
    uint64_t v14 = (unsigned int *)&enum case for TemperatureChartKind.actual(_:);
LABEL_14:
    uint64_t v15 = *v14;
    uint64_t v16 = type metadata accessor for TemperatureChartKind();
    (*(void (**)(Swift::String *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 104))(a2, v15, v16);
    uint64_t v17 = type metadata accessor for ConditionDetailChartFooterViewModel();
LABEL_15:
    swift_storeEnumTagMultiPayload();
    uint64_t v12 = (uint64_t)a2;
    uint64_t v13 = 0;
    uint64_t v11 = v17;
    return _s7Weather24LocationCompositionStateOwst_0(v12, v13, 1, v11);
  }
  if (v8 == enum case for DetailChartCondition.temperatureFeelsLike(_:))
  {
    uint64_t v14 = (unsigned int *)&enum case for TemperatureChartKind.feelsLike(_:);
    goto LABEL_14;
  }
  BOOL v19 = v8 == enum case for DetailChartCondition.uvIndex(_:) || v8 == enum case for DetailChartCondition.visibility(_:);
  if (v19 || v8 == enum case for DetailChartCondition.wind(_:))
  {
LABEL_9:
    uint64_t v11 = type metadata accessor for ConditionDetailChartFooterViewModel();
    uint64_t v12 = (uint64_t)a2;
    uint64_t v13 = 1;
    return _s7Weather24LocationCompositionStateOwst_0(v12, v13, 1, v11);
  }
  if (v8 == enum case for DetailChartCondition.chanceOfRain(_:))
  {
    id v21 = [self mainBundle];
    v26._uint64_t countAndFlagsBits = 0xD00000000000008ALL;
    v26._object = (void *)0x8000000100CBD430;
    v22._object = (void *)0x8000000100CBD3D0;
    v22._uint64_t countAndFlagsBits = 0xD000000000000053;
    v23._uint64_t countAndFlagsBits = 0;
    v23._object = (void *)0xE000000000000000;
    Swift::String v24 = NSLocalizedString(_:tableName:bundle:value:comment:)(v22, (Swift::String_optional)0, (NSBundle)v21, v23, v26);

    *a2 = v24;
    uint64_t v17 = type metadata accessor for ConditionDetailChartFooterViewModel();
    goto LABEL_15;
  }
  uint64_t result = _diagnoseUnexpectedEnumCase<A>(type:)();
  __break(1u);
  return result;
}

uint64_t sub_100AA2734(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = type metadata accessor for DetailChartCondition();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, enum case for DetailChartCondition.chanceOfRain(_:), v4);
  LOBYTE(a3) = sub_100889C5C(a3, (uint64_t)v7);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  if (a3) {
    char v8 = static Date.< infix(_:_:)();
  }
  else {
    char v8 = 0;
  }
  return v8 & 1;
}

BOOL sub_100AA2854()
{
  uint64_t v0 = type metadata accessor for Date();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  HourWeather.date.getter();
  type metadata accessor for DetailChartSelection();
  Date.distance(to:)();
  double v5 = v4;
  uint64_t v6 = *(void (**)(char *, uint64_t))(v1 + 8);
  v6(v3, v0);
  double v7 = fabs(v5);
  HourWeather.date.getter();
  Date.distance(to:)();
  double v9 = v8;
  v6(v3, v0);
  return v7 < fabs(v9);
}

uint64_t sub_100AA29A0()
{
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 16);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 56);
  swift_release();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 104);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 144);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 184);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 224);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 264);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 304);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 344);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 384);
  swift_release();
  swift_release();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 440);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 480);

  swift_release();
  sub_100178110(v0 + OBJC_IVAR____TtC7Weather31ConditionDetailViewModelFactory_cachedModel, &qword_100E64848);
  sub_100178110(v0 + OBJC_IVAR____TtC7Weather31ConditionDetailViewModelFactory_cachedChartModelInputs, &qword_100EAE570);
  return v0;
}

uint64_t sub_100AA2A70()
{
  sub_100AA29A0();

  return swift_deallocClassInstance();
}

uint64_t sub_100AA2AC8()
{
  return type metadata accessor for ConditionDetailViewModelFactory(0);
}

uint64_t type metadata accessor for ConditionDetailViewModelFactory(uint64_t a1)
{
  return sub_10018678C(a1, (uint64_t *)&unk_100EAE250);
}

void sub_100AA2AF0()
{
  sub_100AA2C34(319, &qword_100EAE260, (void (*)(uint64_t))type metadata accessor for ConditionDetailViewModel);
  if (v0 <= 0x3F)
  {
    sub_100AA2C34(319, (unint64_t *)&unk_100EAE268, (void (*)(uint64_t))type metadata accessor for ConditionDetailViewModelFactory.CachedChartModelInputs);
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

void sub_100AA2C34(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = type metadata accessor for Optional();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t type metadata accessor for ConditionDetailViewModelFactory.CachedChartModelInputs(uint64_t a1)
{
  return sub_10018678C(a1, qword_100EAE518);
}

void *sub_100AA2CA8(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v17 = *a2;
    *a1 = *a2;
    a1 = (void *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for Date();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    uint64_t v10 = (void *)((char *)a1 + v8);
    uint64_t v11 = (void *)((char *)a2 + v8);
    uint64_t v12 = v11[1];
    *uint64_t v10 = *v11;
    v10[1] = v12;
    uint64_t v13 = (char *)a1 + v9;
    uint64_t v14 = (char *)a2 + v9;
    uint64_t v15 = type metadata accessor for ExtremaResult();
    swift_bridgeObjectRetain();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v14, 1, v15))
    {
      uint64_t v16 = sub_10017DF08(&qword_100E6BCB0);
      memcpy(v13, v14, *(void *)(*(void *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v13, 0, 1, v15);
    }
    uint64_t v18 = a3[7];
    BOOL v19 = (char *)a1 + v18;
    uint64_t v20 = (char *)a2 + v18;
    uint64_t v21 = type metadata accessor for ConditionUnits();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16))(v19, v20, v21);
    uint64_t v22 = a3[8];
    Swift::String v23 = (char *)a1 + v22;
    Swift::String v24 = (char *)a2 + v22;
    uint64_t v25 = type metadata accessor for DetailCondition();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 16))(v23, v24, v25);
    *((unsigned char *)a1 + a3[9]) = *((unsigned char *)a2 + a3[9]);
  }
  return a1;
}

uint64_t sub_100AA2ED0(uint64_t a1, int *a2)
{
  uint64_t v4 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  uint64_t v5 = a1 + a2[6];
  uint64_t v6 = type metadata accessor for ExtremaResult();
  if (!_s7Weather24LocationCompositionStateOwet_0(v5, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  }
  uint64_t v7 = a1 + a2[7];
  uint64_t v8 = type metadata accessor for ConditionUnits();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = a1 + a2[8];
  uint64_t v10 = type metadata accessor for DetailCondition();
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8);

  return v11(v9, v10);
}

uint64_t sub_100AA3028(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = (void *)(a1 + v7);
  uint64_t v10 = (void *)(a2 + v7);
  uint64_t v11 = v10[1];
  *uint64_t v9 = *v10;
  v9[1] = v11;
  uint64_t v12 = (void *)(a1 + v8);
  uint64_t v13 = (const void *)(a2 + v8);
  uint64_t v14 = type metadata accessor for ExtremaResult();
  swift_bridgeObjectRetain();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v13, 1, v14))
  {
    uint64_t v15 = sub_10017DF08(&qword_100E6BCB0);
    memcpy(v12, v13, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v12, 0, 1, v14);
  }
  uint64_t v16 = a3[7];
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  uint64_t v19 = type metadata accessor for ConditionUnits();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
  uint64_t v20 = a3[8];
  uint64_t v21 = a1 + v20;
  uint64_t v22 = a2 + v20;
  uint64_t v23 = type metadata accessor for DetailCondition();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  return a1;
}

uint64_t sub_100AA3200(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = a3[6];
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (const void *)(a2 + v10);
  uint64_t v13 = type metadata accessor for ExtremaResult();
  int v14 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v11, 1, v13);
  int v15 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v12, 1, v13);
  if (!v14)
  {
    uint64_t v16 = *(void *)(v13 - 8);
    if (!v15)
    {
      (*(void (**)(void *, const void *, uint64_t))(v16 + 24))(v11, v12, v13);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v16 + 8))(v11, v13);
    goto LABEL_6;
  }
  if (v15)
  {
LABEL_6:
    uint64_t v17 = sub_10017DF08(&qword_100E6BCB0);
    memcpy(v11, v12, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v11, 0, 1, v13);
LABEL_7:
  uint64_t v18 = a3[7];
  uint64_t v19 = a1 + v18;
  uint64_t v20 = a2 + v18;
  uint64_t v21 = type metadata accessor for ConditionUnits();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 24))(v19, v20, v21);
  uint64_t v22 = a3[8];
  uint64_t v23 = a1 + v22;
  uint64_t v24 = a2 + v22;
  uint64_t v25 = type metadata accessor for DetailCondition();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 24))(v23, v24, v25);
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  return a1;
}

uint64_t sub_100AA346C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = type metadata accessor for ExtremaResult();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v10))
  {
    uint64_t v11 = sub_10017DF08(&qword_100E6BCB0);
    memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v8, 0, 1, v10);
  }
  uint64_t v12 = a3[7];
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = type metadata accessor for ConditionUnits();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
  uint64_t v16 = a3[8];
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  uint64_t v19 = type metadata accessor for DetailCondition();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 32))(v17, v18, v19);
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  return a1;
}

uint64_t sub_100AA362C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  *uint64_t v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  uint64_t v12 = a3[6];
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (const void *)(a2 + v12);
  uint64_t v15 = type metadata accessor for ExtremaResult();
  int v16 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v13, 1, v15);
  int v17 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v14, 1, v15);
  if (!v16)
  {
    uint64_t v18 = *(void *)(v15 - 8);
    if (!v17)
    {
      (*(void (**)(void *, const void *, uint64_t))(v18 + 40))(v13, v14, v15);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v18 + 8))(v13, v15);
    goto LABEL_6;
  }
  if (v17)
  {
LABEL_6:
    uint64_t v19 = sub_10017DF08(&qword_100E6BCB0);
    memcpy(v13, v14, *(void *)(*(void *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v13, 0, 1, v15);
LABEL_7:
  uint64_t v20 = a3[7];
  uint64_t v21 = a1 + v20;
  uint64_t v22 = a2 + v20;
  uint64_t v23 = type metadata accessor for ConditionUnits();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 40))(v21, v22, v23);
  uint64_t v24 = a3[8];
  uint64_t v25 = a1 + v24;
  uint64_t v26 = a2 + v24;
  uint64_t v27 = type metadata accessor for DetailCondition();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 40))(v25, v26, v27);
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  return a1;
}

uint64_t sub_100AA3888(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100AA389C);
}

uint64_t sub_100AA389C(uint64_t a1, uint64_t a2, int *a3)
{
  sub_10018C614();
  sub_100162F30();
  if (*(_DWORD *)(v7 + 84) == v3)
  {
    uint64_t v8 = v6;
    uint64_t v9 = v4;
  }
  else
  {
    if (v3 == 0x7FFFFFFF) {
      return sub_100163020(*(void *)(v4 + a3[5] + 8));
    }
    sub_10017DF08(&qword_100E6BCB0);
    sub_100162F30();
    if (*(_DWORD *)(v12 + 84) == v3)
    {
      uint64_t v8 = v11;
      uint64_t v13 = a3[6];
    }
    else
    {
      type metadata accessor for ConditionUnits();
      sub_100162F30();
      if (*(_DWORD *)(v15 + 84) == v3)
      {
        uint64_t v8 = v14;
        uint64_t v13 = a3[7];
      }
      else
      {
        uint64_t v8 = type metadata accessor for DetailCondition();
        uint64_t v13 = a3[8];
      }
    }
    uint64_t v9 = v4 + v13;
  }

  return _s7Weather24LocationCompositionStateOwet_0(v9, v3, v8);
}

uint64_t sub_100AA3984(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100AA3998);
}

void sub_100AA3998(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  sub_10018C614();
  sub_100162F30();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = v5;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      sub_1001A4BEC();
      return;
    }
    sub_10017DF08(&qword_100E6BCB0);
    sub_100162F30();
    if (*(_DWORD *)(v13 + 84) == a3)
    {
      uint64_t v10 = v12;
      uint64_t v14 = a4[6];
    }
    else
    {
      type metadata accessor for ConditionUnits();
      sub_100162F30();
      if (*(_DWORD *)(v16 + 84) == a3)
      {
        uint64_t v10 = v15;
        uint64_t v14 = a4[7];
      }
      else
      {
        uint64_t v10 = type metadata accessor for DetailCondition();
        uint64_t v14 = a4[8];
      }
    }
    uint64_t v11 = v5 + v14;
  }

  _s7Weather24LocationCompositionStateOwst_0(v11, v4, v4, v10);
}

uint64_t type metadata accessor for ConditionDetailViewModelFactory.DetailPlatterViewModelsCacheKey(uint64_t a1)
{
  return sub_10018678C(a1, qword_100EAE3D0);
}

void sub_100AA3A9C()
{
  type metadata accessor for Date();
  if (v0 <= 0x3F)
  {
    sub_100AA2C34(319, (unint64_t *)&qword_100E6BD20, (void (*)(uint64_t))&type metadata accessor for ExtremaResult);
    if (v1 <= 0x3F)
    {
      type metadata accessor for ConditionUnits();
      if (v2 <= 0x3F)
      {
        type metadata accessor for DetailCondition();
        if (v3 <= 0x3F) {
          swift_initStructMetadata();
        }
      }
    }
  }
}

uint64_t *sub_100AA3C08(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v17 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for Date();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    uint64_t v10 = (uint64_t *)((char *)a1 + v8);
    uint64_t v11 = (uint64_t *)((char *)a2 + v8);
    uint64_t v12 = v11[1];
    *uint64_t v10 = *v11;
    v10[1] = v12;
    uint64_t v13 = (char *)a1 + v9;
    uint64_t v14 = (char *)a2 + v9;
    uint64_t v15 = type metadata accessor for ExtremaResult();
    swift_bridgeObjectRetain();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v14, 1, v15))
    {
      uint64_t v16 = sub_10017DF08(&qword_100E6BCB0);
      memcpy(v13, v14, *(void *)(*(void *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v13, 0, 1, v15);
    }
    uint64_t v18 = a3[8];
    *(_OWORD *)((char *)a1 + a3[7]) = *(_OWORD *)((char *)a2 + a3[7]);
    uint64_t v19 = (char *)a1 + v18;
    uint64_t v20 = (char *)a2 + v18;
    uint64_t v21 = type metadata accessor for DetailChartExtrema();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16))(v19, v20, v21);
    uint64_t v22 = a3[9];
    uint64_t v23 = (char *)a1 + v22;
    uint64_t v24 = (char *)a2 + v22;
    uint64_t v25 = type metadata accessor for ConditionUnits();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 16))(v23, v24, v25);
    uint64_t v26 = a3[10];
    uint64_t v27 = (char *)a1 + v26;
    uint64_t v28 = (char *)a2 + v26;
    uint64_t v29 = type metadata accessor for DetailChartCondition();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 16))(v27, v28, v29);
  }
  return a1;
}

uint64_t sub_100AA3E74(uint64_t a1, int *a2)
{
  uint64_t v4 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  uint64_t v5 = a1 + a2[6];
  uint64_t v6 = type metadata accessor for ExtremaResult();
  if (!_s7Weather24LocationCompositionStateOwet_0(v5, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  }
  uint64_t v7 = a1 + a2[8];
  uint64_t v8 = type metadata accessor for DetailChartExtrema();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = a1 + a2[9];
  uint64_t v10 = type metadata accessor for ConditionUnits();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  uint64_t v11 = a1 + a2[10];
  uint64_t v12 = type metadata accessor for DetailChartCondition();
  uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8);

  return v13(v11, v12);
}

uint64_t sub_100AA400C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = (void *)(a1 + v7);
  uint64_t v10 = (void *)(a2 + v7);
  uint64_t v11 = v10[1];
  *uint64_t v9 = *v10;
  v9[1] = v11;
  uint64_t v12 = (void *)(a1 + v8);
  uint64_t v13 = (const void *)(a2 + v8);
  uint64_t v14 = type metadata accessor for ExtremaResult();
  swift_bridgeObjectRetain();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v13, 1, v14))
  {
    uint64_t v15 = sub_10017DF08(&qword_100E6BCB0);
    memcpy(v12, v13, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v12, 0, 1, v14);
  }
  uint64_t v16 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  uint64_t v19 = type metadata accessor for DetailChartExtrema();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
  uint64_t v20 = a3[9];
  uint64_t v21 = a1 + v20;
  uint64_t v22 = a2 + v20;
  uint64_t v23 = type metadata accessor for ConditionUnits();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
  uint64_t v24 = a3[10];
  uint64_t v25 = a1 + v24;
  uint64_t v26 = a2 + v24;
  uint64_t v27 = type metadata accessor for DetailChartCondition();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
  return a1;
}

uint64_t sub_100AA4228(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = a3[6];
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (const void *)(a2 + v10);
  uint64_t v13 = type metadata accessor for ExtremaResult();
  int v14 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v11, 1, v13);
  int v15 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v12, 1, v13);
  if (!v14)
  {
    uint64_t v16 = *(void *)(v13 - 8);
    if (!v15)
    {
      (*(void (**)(void *, const void *, uint64_t))(v16 + 24))(v11, v12, v13);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v16 + 8))(v11, v13);
    goto LABEL_6;
  }
  if (v15)
  {
LABEL_6:
    uint64_t v17 = sub_10017DF08(&qword_100E6BCB0);
    memcpy(v11, v12, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v11, 0, 1, v13);
LABEL_7:
  uint64_t v18 = a3[7];
  uint64_t v19 = (void *)(a1 + v18);
  uint64_t v20 = (void *)(a2 + v18);
  *uint64_t v19 = *v20;
  v19[1] = v20[1];
  uint64_t v21 = a3[8];
  uint64_t v22 = a1 + v21;
  uint64_t v23 = a2 + v21;
  uint64_t v24 = type metadata accessor for DetailChartExtrema();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 24))(v22, v23, v24);
  uint64_t v25 = a3[9];
  uint64_t v26 = a1 + v25;
  uint64_t v27 = a2 + v25;
  uint64_t v28 = type metadata accessor for ConditionUnits();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 24))(v26, v27, v28);
  uint64_t v29 = a3[10];
  uint64_t v30 = a1 + v29;
  uint64_t v31 = a2 + v29;
  uint64_t v32 = type metadata accessor for DetailChartCondition();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 24))(v30, v31, v32);
  return a1;
}

uint64_t sub_100AA44EC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = type metadata accessor for ExtremaResult();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v10))
  {
    uint64_t v11 = sub_10017DF08(&qword_100E6BCB0);
    memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v8, 0, 1, v10);
  }
  uint64_t v12 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = type metadata accessor for DetailChartExtrema();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
  uint64_t v16 = a3[9];
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  uint64_t v19 = type metadata accessor for ConditionUnits();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 32))(v17, v18, v19);
  uint64_t v20 = a3[10];
  uint64_t v21 = a1 + v20;
  uint64_t v22 = a2 + v20;
  uint64_t v23 = type metadata accessor for DetailChartCondition();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 32))(v21, v22, v23);
  return a1;
}

uint64_t sub_100AA46F0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  *uint64_t v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  uint64_t v12 = a3[6];
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (const void *)(a2 + v12);
  uint64_t v15 = type metadata accessor for ExtremaResult();
  int v16 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v13, 1, v15);
  int v17 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v14, 1, v15);
  if (!v16)
  {
    uint64_t v18 = *(void *)(v15 - 8);
    if (!v17)
    {
      (*(void (**)(void *, const void *, uint64_t))(v18 + 40))(v13, v14, v15);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v18 + 8))(v13, v15);
    goto LABEL_6;
  }
  if (v17)
  {
LABEL_6:
    uint64_t v19 = sub_10017DF08(&qword_100E6BCB0);
    memcpy(v13, v14, *(void *)(*(void *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v13, 0, 1, v15);
LABEL_7:
  uint64_t v20 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  uint64_t v21 = a1 + v20;
  uint64_t v22 = a2 + v20;
  uint64_t v23 = type metadata accessor for DetailChartExtrema();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 40))(v21, v22, v23);
  uint64_t v24 = a3[9];
  uint64_t v25 = a1 + v24;
  uint64_t v26 = a2 + v24;
  uint64_t v27 = type metadata accessor for ConditionUnits();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 40))(v25, v26, v27);
  uint64_t v28 = a3[10];
  uint64_t v29 = a1 + v28;
  uint64_t v30 = a2 + v28;
  uint64_t v31 = type metadata accessor for DetailChartCondition();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 40))(v29, v30, v31);
  return a1;
}

uint64_t sub_100AA4990(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100AA49A4);
}

uint64_t sub_100AA49A4(uint64_t a1, uint64_t a2, int *a3)
{
  sub_10018C614();
  sub_100162F30();
  if (*(_DWORD *)(v7 + 84) == v3)
  {
    uint64_t v8 = v6;
    uint64_t v9 = v4;
  }
  else
  {
    if (v3 == 0x7FFFFFFF) {
      return sub_100163020(*(void *)(v4 + a3[5] + 8));
    }
    sub_10017DF08(&qword_100E6BCB0);
    sub_100162F30();
    if (*(_DWORD *)(v12 + 84) == v3)
    {
      uint64_t v8 = v11;
      uint64_t v13 = a3[6];
    }
    else
    {
      type metadata accessor for DetailChartExtrema();
      sub_100162F30();
      if (*(_DWORD *)(v15 + 84) == v3)
      {
        uint64_t v8 = v14;
        uint64_t v13 = a3[8];
      }
      else
      {
        type metadata accessor for ConditionUnits();
        sub_100162F30();
        if (*(_DWORD *)(v17 + 84) == v3)
        {
          uint64_t v8 = v16;
          uint64_t v13 = a3[9];
        }
        else
        {
          uint64_t v8 = type metadata accessor for DetailChartCondition();
          uint64_t v13 = a3[10];
        }
      }
    }
    uint64_t v9 = v4 + v13;
  }

  return _s7Weather24LocationCompositionStateOwet_0(v9, v3, v8);
}

uint64_t sub_100AA4AB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100AA4AC4);
}

void sub_100AA4AC4(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  sub_10018C614();
  sub_100162F30();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = v5;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      sub_1001A4BEC();
      return;
    }
    sub_10017DF08(&qword_100E6BCB0);
    sub_100162F30();
    if (*(_DWORD *)(v13 + 84) == a3)
    {
      uint64_t v10 = v12;
      uint64_t v14 = a4[6];
    }
    else
    {
      type metadata accessor for DetailChartExtrema();
      sub_100162F30();
      if (*(_DWORD *)(v16 + 84) == a3)
      {
        uint64_t v10 = v15;
        uint64_t v14 = a4[8];
      }
      else
      {
        type metadata accessor for ConditionUnits();
        sub_100162F30();
        if (*(_DWORD *)(v18 + 84) == a3)
        {
          uint64_t v10 = v17;
          uint64_t v14 = a4[9];
        }
        else
        {
          uint64_t v10 = type metadata accessor for DetailChartCondition();
          uint64_t v14 = a4[10];
        }
      }
    }
    uint64_t v11 = v5 + v14;
  }

  _s7Weather24LocationCompositionStateOwst_0(v11, v4, v4, v10);
}

uint64_t type metadata accessor for ConditionDetailViewModelFactory.DetailChartViewModelCacheKey(uint64_t a1)
{
  return sub_10018678C(a1, qword_100EAE470);
}

void sub_100AA4BEC()
{
  type metadata accessor for Date();
  if (v0 <= 0x3F)
  {
    sub_100AA2C34(319, (unint64_t *)&qword_100E6BD20, (void (*)(uint64_t))&type metadata accessor for ExtremaResult);
    if (v1 <= 0x3F)
    {
      type metadata accessor for DetailChartExtrema();
      if (v2 <= 0x3F)
      {
        type metadata accessor for ConditionUnits();
        if (v3 <= 0x3F)
        {
          type metadata accessor for DetailChartCondition();
          if (v4 <= 0x3F) {
            swift_initStructMetadata();
          }
        }
      }
    }
  }
}

uint64_t *sub_100AA4D94(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for ConditionUnits();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[6];
    *(uint64_t *)((char *)a1 + a3[5]) = *(uint64_t *)((char *)a2 + a3[5]);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for ExtremaResult();
    swift_bridgeObjectRetain();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v10, 1, v11))
    {
      uint64_t v12 = sub_10017DF08(&qword_100E6BCB0);
      memcpy(v9, v10, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v9, 0, 1, v11);
    }
    uint64_t v14 = a3[7];
    uint64_t v15 = (char *)a1 + v14;
    uint64_t v16 = (char *)a2 + v14;
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2 + v14, 1, v11))
    {
      uint64_t v17 = sub_10017DF08(&qword_100E6BCB0);
      memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v15, v16, v11);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v15, 0, 1, v11);
    }
    uint64_t v18 = a3[8];
    uint64_t v19 = (char *)a1 + v18;
    uint64_t v20 = (char *)a2 + v18;
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v20, 1, v11))
    {
      uint64_t v21 = sub_10017DF08(&qword_100E6BCB0);
      memcpy(v19, v20, *(void *)(*(void *)(v21 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v19, v20, v11);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v19, 0, 1, v11);
    }
  }
  return a1;
}

uint64_t sub_100AA5048(uint64_t a1, int *a2)
{
  uint64_t v4 = type metadata accessor for ConditionUnits();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  uint64_t v5 = a1 + a2[6];
  uint64_t v6 = type metadata accessor for ExtremaResult();
  if (!_s7Weather24LocationCompositionStateOwet_0(v5, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  }
  uint64_t v7 = a1 + a2[7];
  if (!_s7Weather24LocationCompositionStateOwet_0(v7, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v7, v6);
  }
  uint64_t v8 = a1 + a2[8];
  uint64_t result = _s7Weather24LocationCompositionStateOwet_0(v8, 1, v6);
  if (!result)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
    return v10(v8, v6);
  }
  return result;
}

uint64_t sub_100AA51C4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for ConditionUnits();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = type metadata accessor for ExtremaResult();
  swift_bridgeObjectRetain();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v10))
  {
    uint64_t v11 = sub_10017DF08(&qword_100E6BCB0);
    memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v8, 0, 1, v10);
  }
  uint64_t v12 = a3[7];
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (const void *)(a2 + v12);
  if (_s7Weather24LocationCompositionStateOwet_0(a2 + v12, 1, v10))
  {
    uint64_t v15 = sub_10017DF08(&qword_100E6BCB0);
    memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 16))(v13, v14, v10);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v13, 0, 1, v10);
  }
  uint64_t v16 = a3[8];
  uint64_t v17 = (void *)(a1 + v16);
  uint64_t v18 = (const void *)(a2 + v16);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v18, 1, v10))
  {
    uint64_t v19 = sub_10017DF08(&qword_100E6BCB0);
    memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 16))(v17, v18, v10);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v17, 0, 1, v10);
  }
  return a1;
}

uint64_t sub_100AA5428(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for ConditionUnits();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[6];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = type metadata accessor for ExtremaResult();
  int v11 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v10);
  int v12 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v10);
  if (v11)
  {
    if (!v12)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v13 = *(void *)(v10 - 8);
  if (v12)
  {
    (*(void (**)(void *, uint64_t))(v13 + 8))(v8, v10);
LABEL_6:
    uint64_t v14 = sub_10017DF08(&qword_100E6BCB0);
    memcpy(v8, v9, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(v13 + 24))(v8, v9, v10);
LABEL_7:
  uint64_t v15 = a3[7];
  uint64_t v16 = (void *)(a1 + v15);
  uint64_t v17 = (const void *)(a2 + v15);
  int v18 = _s7Weather24LocationCompositionStateOwet_0(a1 + v15, 1, v10);
  int v19 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v17, 1, v10);
  if (v18)
  {
    if (!v19)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 16))(v16, v17, v10);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v16, 0, 1, v10);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  uint64_t v20 = *(void *)(v10 - 8);
  if (v19)
  {
    (*(void (**)(void *, uint64_t))(v20 + 8))(v16, v10);
LABEL_12:
    uint64_t v21 = sub_10017DF08(&qword_100E6BCB0);
    memcpy(v16, v17, *(void *)(*(void *)(v21 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, const void *, uint64_t))(v20 + 24))(v16, v17, v10);
LABEL_13:
  uint64_t v22 = a3[8];
  uint64_t v23 = (void *)(a1 + v22);
  uint64_t v24 = (const void *)(a2 + v22);
  int v25 = _s7Weather24LocationCompositionStateOwet_0(a1 + v22, 1, v10);
  int v26 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v24, 1, v10);
  if (!v25)
  {
    uint64_t v27 = *(void *)(v10 - 8);
    if (!v26)
    {
      (*(void (**)(void *, const void *, uint64_t))(v27 + 24))(v23, v24, v10);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v27 + 8))(v23, v10);
    goto LABEL_18;
  }
  if (v26)
  {
LABEL_18:
    uint64_t v28 = sub_10017DF08(&qword_100E6BCB0);
    memcpy(v23, v24, *(void *)(*(void *)(v28 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 16))(v23, v24, v10);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v23, 0, 1, v10);
  return a1;
}

uint64_t sub_100AA5818(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for ConditionUnits();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = type metadata accessor for ExtremaResult();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v10))
  {
    uint64_t v11 = sub_10017DF08(&qword_100E6BCB0);
    memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v8, 0, 1, v10);
  }
  uint64_t v12 = a3[7];
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (const void *)(a2 + v12);
  if (_s7Weather24LocationCompositionStateOwet_0(a2 + v12, 1, v10))
  {
    uint64_t v15 = sub_10017DF08(&qword_100E6BCB0);
    memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 32))(v13, v14, v10);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v13, 0, 1, v10);
  }
  uint64_t v16 = a3[8];
  uint64_t v17 = (void *)(a1 + v16);
  int v18 = (const void *)(a2 + v16);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v18, 1, v10))
  {
    uint64_t v19 = sub_10017DF08(&qword_100E6BCB0);
    memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 32))(v17, v18, v10);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v17, 0, 1, v10);
  }
  return a1;
}

uint64_t sub_100AA5A6C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for ConditionUnits();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[6];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = type metadata accessor for ExtremaResult();
  int v11 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v10);
  int v12 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v10);
  if (v11)
  {
    if (!v12)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v13 = *(void *)(v10 - 8);
  if (v12)
  {
    (*(void (**)(void *, uint64_t))(v13 + 8))(v8, v10);
LABEL_6:
    uint64_t v14 = sub_10017DF08(&qword_100E6BCB0);
    memcpy(v8, v9, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(v13 + 40))(v8, v9, v10);
LABEL_7:
  uint64_t v15 = a3[7];
  uint64_t v16 = (void *)(a1 + v15);
  uint64_t v17 = (const void *)(a2 + v15);
  int v18 = _s7Weather24LocationCompositionStateOwet_0(a1 + v15, 1, v10);
  int v19 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v17, 1, v10);
  if (v18)
  {
    if (!v19)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 32))(v16, v17, v10);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v16, 0, 1, v10);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  uint64_t v20 = *(void *)(v10 - 8);
  if (v19)
  {
    (*(void (**)(void *, uint64_t))(v20 + 8))(v16, v10);
LABEL_12:
    uint64_t v21 = sub_10017DF08(&qword_100E6BCB0);
    memcpy(v16, v17, *(void *)(*(void *)(v21 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, const void *, uint64_t))(v20 + 40))(v16, v17, v10);
LABEL_13:
  uint64_t v22 = a3[8];
  uint64_t v23 = (void *)(a1 + v22);
  uint64_t v24 = (const void *)(a2 + v22);
  int v25 = _s7Weather24LocationCompositionStateOwet_0(a1 + v22, 1, v10);
  int v26 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v24, 1, v10);
  if (!v25)
  {
    uint64_t v27 = *(void *)(v10 - 8);
    if (!v26)
    {
      (*(void (**)(void *, const void *, uint64_t))(v27 + 40))(v23, v24, v10);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v27 + 8))(v23, v10);
    goto LABEL_18;
  }
  if (v26)
  {
LABEL_18:
    uint64_t v28 = sub_10017DF08(&qword_100E6BCB0);
    memcpy(v23, v24, *(void *)(*(void *)(v28 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 32))(v23, v24, v10);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v23, 0, 1, v10);
  return a1;
}

uint64_t sub_100AA5E54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100AA5E68);
}

uint64_t sub_100AA5E68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  type metadata accessor for ConditionUnits();
  sub_100162F30();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1;
  }
  else
  {
    if (a2 == 0x7FFFFFFF) {
      return sub_100163020(*(void *)(a1 + *(int *)(a3 + 20)));
    }
    uint64_t v8 = sub_10017DF08(&qword_100E6BCB0);
    uint64_t v9 = a1 + *(int *)(a3 + 24);
  }

  return _s7Weather24LocationCompositionStateOwet_0(v9, a2, v8);
}

uint64_t sub_100AA5F10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100AA5F24);
}

void sub_100AA5F24(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  type metadata accessor for ConditionUnits();
  sub_100162F30();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = a1;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
      return;
    }
    uint64_t v10 = sub_10017DF08(&qword_100E6BCB0);
    uint64_t v11 = a1 + *(int *)(a4 + 24);
  }

  _s7Weather24LocationCompositionStateOwst_0(v11, a2, a2, v10);
}

void sub_100AA5FD4()
{
  type metadata accessor for ConditionUnits();
  if (v0 <= 0x3F)
  {
    sub_100AA2C34(319, (unint64_t *)&qword_100E6BD20, (void (*)(uint64_t))&type metadata accessor for ExtremaResult);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_100AA60C8()
{
  return sub_100AA6158(&qword_100EAE560, (void (*)(uint64_t))type metadata accessor for ConditionDetailViewModelFactory.DetailChartViewModelCacheKey);
}

uint64_t sub_100AA6110()
{
  return sub_100AA6158(&qword_100EAE568, (void (*)(uint64_t))type metadata accessor for ConditionDetailViewModelFactory.DetailPlatterViewModelsCacheKey);
}

uint64_t sub_100AA6158(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100AA61A0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DetailCondition();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  int v6 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v5, v2);
  if (v6 == enum case for DetailCondition.conditions(_:))
  {
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    return 1;
  }
  if (v6 == enum case for DetailCondition.humidity(_:)) {
    return 0;
  }
  if (v6 == enum case for DetailCondition.pressure(_:) || v6 == enum case for DetailCondition.precipitationTotal(_:)) {
    return 1;
  }
  if (v6 == enum case for DetailCondition.uvIndex(_:)) {
    return 0;
  }
  if (v6 == enum case for DetailCondition.visibility(_:) || v6 == enum case for DetailCondition.wind(_:)) {
    return 1;
  }
  uint64_t result = _diagnoseUnexpectedEnumCase<A>(type:)();
  __break(1u);
  return result;
}

double sub_100AA6338@<D0>(uint64_t a1@<X8>)
{
  id v2 = [self mainBundle];
  v11._uint64_t countAndFlagsBits = 0xD000000000000051;
  v11._object = (void *)0x8000000100CAEC20;
  v3._object = (void *)0x8000000100CAEC00;
  v3._uint64_t countAndFlagsBits = 0xD000000000000017;
  v4._uint64_t countAndFlagsBits = 0x736E6F6974704FLL;
  v4._object = (void *)0xE700000000000000;
  Swift::String v5 = NSLocalizedString(_:tableName:bundle:value:comment:)(v3, (Swift::String_optional)0, (NSBundle)v2, v4, v11);

  int v6 = (int *)type metadata accessor for ConditionDetailPlatterViewModel(0);
  uint64_t v7 = a1 + v6[6];
  uint64_t v8 = type metadata accessor for WeatherDescription();
  _s7Weather24LocationCompositionStateOwst_0(v7, 1, 1, v8);
  type metadata accessor for ConditionDetailDynamicContentIdentifier();
  swift_storeEnumTagMultiPayload();
  uint64_t v9 = type metadata accessor for ConditionDetailPlatterViewModel.Body(0);
  swift_storeEnumTagMultiPayload();
  _s7Weather24LocationCompositionStateOwst_0(a1 + v6[8], 1, 1, v9);
  double result = 3.68215105e180;
  *(_OWORD *)a1 = xmmword_100C517B0;
  *(unsigned char *)(a1 + 16) = 1;
  *(Swift::String *)(a1 + 24) = v5;
  *(unsigned char *)(a1 + v6[9]) = 0;
  *(unsigned char *)(a1 + v6[10]) = 0;
  return result;
}

uint64_t sub_100AA64B0(unint64_t a1)
{
  return sub_100A9DAF4(a1, *(char **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56), *(void *)(v1 + 64), *(void *)(v1 + 72), *(void *)(v1 + 80), *(void *)(v1 + 88), *(void *)(v1 + 96));
}

uint64_t sub_100AA64F0()
{
  return sub_100A9ADE4() & 1;
}

uint64_t sub_100AA6510@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100A9AE34(a1, *(void *)(v2 + 24), *(char **)(v2 + 32), *(void *)(v2 + 40), *(void *)(v2 + 48), *(void *)(v2 + 56), *(void *)(v2 + 64), a2, *(void *)(v2 + 72), *(void *)(v2 + 80));
}

uint64_t sub_100AA6550()
{
  return sub_100AA1294(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_100AA6558()
{
  return sub_100AA6580(*(void *)(v0 + 24), *(void *)(v0 + 16));
}

uint64_t sub_100AA6560()
{
  return sub_100A9E5F0() & 1;
}

uint64_t sub_100AA6580(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10017DF08(&qword_100E6BCB0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

BOOL sub_100AA65E8()
{
  return sub_100AA2854();
}

uint64_t sub_100AA6608(uint64_t a1)
{
  return a1;
}

uint64_t sub_100AA66B4()
{
  return sub_100A9E064(*(uint64_t **)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32));
}

void sub_100AA66C0(double a1, double a2)
{
  if ((*(void *)&a1 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v3 = *(void *)&a1;
  }
  else {
    Swift::UInt64 v3 = 0;
  }
  Hasher._combine(_:)(v3);
  if ((*(void *)&a2 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v4 = *(void *)&a2;
  }
  else {
    Swift::UInt64 v4 = 0;
  }
  Hasher._combine(_:)(v4);
}

uint64_t sub_100AA6710(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v440 = (void *)a2;
  uint64_t v434 = a1;
  uint64_t v4 = type metadata accessor for Location.Identifier();
  uint64_t v5 = sub_10017C81C(v4, (uint64_t)&v450);
  uint64_t v418 = v6;
  __chkstk_darwin(v5);
  sub_1001626E0();
  uint64_t v9 = v8 - v7;
  uint64_t v10 = sub_10017DF08(&qword_100E663F8);
  uint64_t v11 = sub_100109308(v10);
  __chkstk_darwin(v11);
  sub_100109314();
  sub_100109338(v12);
  uint64_t v13 = sub_10017DF08(&qword_100E66400);
  uint64_t v14 = sub_100109308(v13);
  __chkstk_darwin(v14);
  sub_100109314();
  sub_100109338(v15);
  uint64_t v16 = sub_10017DF08(&qword_100E66408);
  uint64_t v17 = sub_100109308(v16);
  __chkstk_darwin(v17);
  sub_100109314();
  sub_100109328(v18);
  uint64_t active = type metadata accessor for LocationViewerActiveLocationState();
  uint64_t v20 = sub_100109308(active);
  __chkstk_darwin(v20);
  sub_1001626E0();
  uint64_t v23 = v22 - v21;
  uint64_t v24 = sub_10017DF08(&qword_100E66410);
  uint64_t v25 = sub_100109308(v24);
  __chkstk_darwin(v25);
  sub_100109314();
  uint64_t v27 = sub_100109328(v26);
  uint64_t v435 = type metadata accessor for ViewState(v27);
  sub_100162E4C();
  __chkstk_darwin(v28);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v29);
  uint64_t v31 = (char *)&v411 - v30;
  uint64_t v32 = type metadata accessor for LocationModel();
  uint64_t v33 = sub_10017C81C(v32, (uint64_t)&v451);
  uint64_t v427 = v34;
  __chkstk_darwin(v33);
  sub_1001626E0();
  uint64_t v37 = v36 - v35;
  uint64_t v38 = (int *)type metadata accessor for NotificationsOptInInput();
  sub_100162E4C();
  __chkstk_darwin(v39);
  sub_1001626E0();
  uint64_t v42 = v41 - v40;
  uint64_t v43 = sub_10017DF08(&qword_100E663F0);
  uint64_t v44 = sub_100109308(v43);
  __chkstk_darwin(v44);
  sub_100109314();
  uint64_t v436 = v45;
  uint64_t v46 = sub_10017DF08(&qword_100E66418);
  uint64_t v47 = sub_100109308(v46);
  __chkstk_darwin(v47);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v48);
  sub_100128F8C();
  sub_100109338(v49);
  uint64_t v50 = sub_10017DF08(&qword_100E66420);
  uint64_t v51 = sub_100109308(v50);
  __chkstk_darwin(v51);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v52);
  sub_100128F8C();
  uint64_t v433 = v53;
  uint64_t v54 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  uint64_t v55 = sub_100109308(v54);
  __chkstk_darwin(v55);
  sub_100109314();
  sub_100109328(v56);
  uint64_t v437 = type metadata accessor for NotificationsOptInState();
  sub_100162E4C();
  __chkstk_darwin(v57);
  sub_100109314();
  sub_100109338(v58);
  uint64_t v59 = sub_10017DF08(&qword_100E66428);
  uint64_t v60 = sub_100109308(v59);
  __chkstk_darwin(v60);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v61);
  sub_100128F8C();
  sub_100109338(v62);
  uint64_t v63 = sub_10017DF08(&qword_100E66430);
  uint64_t v64 = sub_100109308(v63);
  __chkstk_darwin(v64);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v65);
  sub_100128F8C();
  uint64_t v438 = v66;
  uint64_t v67 = sub_10017DF08(&qword_100E66438);
  uint64_t v68 = sub_100109308(v67);
  __chkstk_darwin(v68);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v69);
  sub_100128F8C();
  uint64_t v439 = v70;
  uint64_t v71 = sub_10017DF08(&qword_100E66440);
  uint64_t v72 = sub_100109308(v71);
  __chkstk_darwin(v72);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v73);
  sub_100128F8C();
  uint64_t v75 = v74;
  uint64_t v76 = type metadata accessor for ListViewAction();
  sub_100162E4C();
  __chkstk_darwin(v77);
  sub_1001626E0();
  uint64_t v80 = (char *)(v79 - v78);
  sub_100AA88B0(a3, v79 - v78, (void (*)(void))type metadata accessor for ListViewAction);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      char v126 = *v80;
      uint64_t v405 = 0;
      uint64_t v406 = 0;
      uint64_t v410 = v434;
      LOWORD(v407) = 514;
      goto LABEL_24;
    case 2u:
      uint64_t v127 = v418;
      uint64_t v128 = v426;
      (*(void (**)(uint64_t, char *, uint64_t))(v418 + 32))(v9, v80, v426);
      Location.Identifier.id.getter();
      sub_10018331C();
      uint64_t v413 = v129;
      uint64_t v414 = v130;
      LOBYTE(v412) = 2;
      uint64_t v411 = 1;
      uint64_t v131 = sub_100186DF0();
      uint64_t v138 = sub_100188C8C(v131, v132, v133, v134, 3, v135, v136, v137, v411, v412, v413, v414, v415, SBYTE1(v415), *((uint64_t *)&v415 + 1));
      swift_bridgeObjectRelease();
      a3 = sub_100AA8220(v138, (uint64_t)v440);
      swift_release();
      (*(void (**)(uint64_t, uint64_t))(v127 + 8))(v9, v128);
      return a3;
    case 3u:
      uint64_t v139 = type metadata accessor for AppConfigurationState();
      uint64_t v140 = v75;
      uint64_t v143 = sub_10017CD74(v139, v141, v142, v139);
      uint64_t v144 = v439;
      uint64_t v147 = sub_1001630C0(v439, v145, v146, v143);
      uint64_t v148 = v438;
      sub_100163050(v438, v149, v150, v147);
      uint64_t v151 = (uint64_t)v440;
      sub_1001A35D4((uint64_t)v440 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_notificationsOptIn, v152, (void (*)(void))type metadata accessor for NotificationsOptInState);
      uint64_t v153 = type metadata accessor for Date();
      sub_10019E044(v153, (uint64_t)&v452);
      sub_10018C630();
      sub_100172528();
      sub_1001873D4();
      sub_1001C6768(v154, v155, v156, v157, v158, v159, v75, 2, v160, v407, SBYTE1(v407), SBYTE2(v407), SHIBYTE(v407), 2);
      sub_1001781AC(v75, (uint64_t *)&unk_100E73CA0);
      sub_1001C66BC(v9, (void (*)(void))type metadata accessor for NotificationsOptInState);
      uint64_t v161 = sub_10017AF10(v23, 0);
      sub_10019DBE0(v161);
      uint64_t v162 = sub_1001845F0();
      _s7Weather24LocationCompositionStateOwst_0(v162, v163, v164, v165);
      uint64_t v409 = v151;
      goto LABEL_18;
    case 4u:
      sub_1001B1E64(v429 + 7, v429[10]);
      a3 = (uint64_t)v440;
      sub_100AA88B0((uint64_t)v440 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_view, v42, (void (*)(void))type metadata accessor for ViewState);
      uint64_t v166 = a3 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_environment;
      swift_beginAccess();
      char v167 = *(unsigned char *)(a3 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_notifications);
      uint64_t v168 = a3 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_notificationsOptIn;
      uint64_t v169 = v437;
      *(unsigned char *)(v42 + v38[5]) = *(unsigned char *)(v166 + 1);
      sub_1001826C0(v167);
      *(unsigned char *)(v42 + v170) = v171;
      *(unsigned char *)(v42 + v38[9]) = v172;
      *(unsigned char *)(v42 + v38[10]) = v173;
      uint64_t v174 = sub_10087ACD0(v42);
      sub_1001C66BC(v42, (void (*)(void))type metadata accessor for NotificationsOptInInput);
      if (v174 > 1u)
      {
        swift_retain();
      }
      else
      {
        type metadata accessor for NotificationsOptInViewState._Storage();
        uint64_t v175 = swift_allocObject();
        *(_WORD *)(v175 + 16) = v174;
        *(unsigned char *)(v175 + 18) = BYTE2(v174) & 1;
        *(unsigned char *)(v175 + 19) = BYTE3(v174);
        uint64_t v176 = type metadata accessor for AppConfigurationState();
        uint64_t v177 = v75;
        uint64_t v180 = sub_10017CD74(v176, v178, v179, v176);
        uint64_t v181 = v439;
        uint64_t v184 = sub_1001630C0(v439, v182, v183, v180);
        uint64_t v185 = v438;
        sub_100163050(v438, v186, v187, v184);
        sub_1001A35D4(v168, v188, (void (*)(void))type metadata accessor for NotificationsOptInState);
        type metadata accessor for Date();
        uint64_t v189 = sub_10019B7B0();
        _s7Weather24LocationCompositionStateOwst_0(v189, v190, v191, v192);
        unsigned __int8 v193 = sub_1001A49EC();
        sub_10018AC44(v193, v194, v195, v411, SBYTE1(v411), SBYTE2(v411), SBYTE3(v411), SBYTE4(v411));
        sub_1001781AC(v168, (uint64_t *)&unk_100E73CA0);
        sub_1001C66BC(v174, (void (*)(void))type metadata accessor for NotificationsOptInState);
        _s7Weather24LocationCompositionStateOwst_0(v76, 0, 1, v169);
        uint64_t v196 = type metadata accessor for TimeState();
        uint64_t v197 = v433;
        _s7Weather24LocationCompositionStateOwst_0(v433, 1, 1, v196);
        uint64_t v198 = (uint64_t)v432;
        uint64_t v199 = sub_100182D78();
        _s7Weather24LocationCompositionStateOwst_0(v199, v200, v201, v435);
        uint64_t v202 = (uint64_t)v436;
        *uint64_t v436 = v175;
        uint64_t v203 = type metadata accessor for ModalViewState(0);
        swift_storeEnumTagMultiPayload();
        _s7Weather24LocationCompositionStateOwst_0(v202, 0, 1, v203);
        swift_retain();
        sub_100180B18();
        *((void *)&v415 + 1) = v198;
        uint64_t v416 = v202;
        uint64_t v414 = v76;
        *(void *)&long long v415 = v197;
        uint64_t v204 = sub_10016356C();
        sub_100163034(v204, v205, v177, v181, v185, v206, v207, v208, v413, v414, v415, *((uint64_t *)&v415 + 1), v416, v417, v418, v419, v420, v421, (uint64_t)v422,
          v423,
          v424);
        sub_10017F704();
        sub_1001781AC(v202, &qword_100E663F0);
        sub_1001781AC(v198, &qword_100E66418);
        sub_1001781AC(v197, &qword_100E66420);
        sub_1001781AC(v76, &qword_100E66428);
        sub_1001781AC(v185, &qword_100E66430);
        sub_1001781AC(v181, &qword_100E66438);
        uint64_t v209 = v177;
LABEL_19:
        sub_1001781AC(v209, &qword_100E66440);
      }
      break;
    case 5u:
      type metadata accessor for ListViewState._Storage();
      swift_allocObject();
      uint64_t v210 = sub_100185F84();
      char v211 = 1;
      goto LABEL_10;
    case 6u:
      type metadata accessor for ListViewState._Storage();
      swift_allocObject();
      uint64_t v210 = sub_100185F84();
      char v211 = 0;
LABEL_10:
      uint64_t v212 = sub_1000EC58C(v210, v211, 1, 0, 0, 0, 0xE000000000000000, 0, v411, v412, v413, v414, v415, SBYTE1(v415));
      goto LABEL_29;
    case 7u:
      uint64_t v213 = type metadata accessor for AppConfigurationState();
      uint64_t v140 = v75;
      uint64_t v216 = sub_10017CD74(v213, v214, v215, v213);
      uint64_t v144 = v439;
      uint64_t v219 = sub_1001630C0(v439, v217, v218, v216);
      uint64_t v148 = v438;
      _s7Weather24LocationCompositionStateOwst_0(v438, 1, 1, v219);
      uint64_t v23 = v431;
      uint64_t v220 = sub_10017AF10(v431, 1);
      uint64_t v75 = v433;
      _s7Weather24LocationCompositionStateOwst_0(v433, 1, 1, v220);
      uint64_t v31 = v432;
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v432, 1, 1, v435);
      uint64_t v9 = (uint64_t)v436;
      *(_WORD *)uint64_t v436 = 0;
      uint64_t v221 = type metadata accessor for ModalViewState(0);
      goto LABEL_17;
    case 8u:
      uint64_t v222 = v75;
      uint64_t v413 = type metadata accessor for AppConfigurationState();
      _s7Weather24LocationCompositionStateOwst_0(v75, 1, 1, v413);
      type metadata accessor for EnvironmentState();
      uint64_t v223 = v439;
      uint64_t v224 = sub_100182D78();
      uint64_t v412 = v225;
      _s7Weather24LocationCompositionStateOwst_0(v224, v226, v227, v225);
      uint64_t v228 = type metadata accessor for LocationsState();
      uint64_t v229 = v438;
      uint64_t v418 = v228;
      _s7Weather24LocationCompositionStateOwst_0(v438, 1, 1, v228);
      uint64_t v230 = v440;
      uint64_t v411 = (uint64_t)v440 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_notificationsOptIn;
      sub_1001A35D4((uint64_t)v440 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_notificationsOptIn, v231, (void (*)(void))type metadata accessor for NotificationsOptInState);
      type metadata accessor for Date();
      uint64_t v232 = sub_1001627F4((uint64_t)&v452);
      uint64_t v426 = v233;
      _s7Weather24LocationCompositionStateOwst_0(v232, v234, v235, v233);
      sub_1001A49EC();
      sub_1001873D4();
      sub_1001C6768(v236, v237, v238, v239, v240, v241, v37, 2, v242, v411, SBYTE1(v411), SBYTE2(v411), SBYTE3(v411), SBYTE4(v411));
      sub_1001781AC(v37, (uint64_t *)&unk_100E73CA0);
      sub_1001C66BC(v9, (void (*)(void))type metadata accessor for NotificationsOptInState);
      sub_10017AF10(v76, 0);
      uint64_t v243 = sub_100166DEC();
      *(void *)(v245 - 256) = v244;
      _s7Weather24LocationCompositionStateOwst_0(v243, v246, v247, v244);
      sub_100184DE4();
      type metadata accessor for ModalViewState(0);
      uint64_t v248 = sub_1001845F0();
      uint64_t v428 = v249;
      _s7Weather24LocationCompositionStateOwst_0(v248, v250, v251, v249);
      sub_100180B18();
      *((void *)&v415 + 1) = v75;
      uint64_t v416 = v9;
      uint64_t v414 = v76;
      *(void *)&long long v415 = v37;
      uint64_t v252 = sub_10016356C();
      sub_100163034(v252, v253, v75, v223, v229, v254, v255, v256, v413, v414, v415, *((uint64_t *)&v415 + 1), v416, v417, v418, v419, v420, v421, (uint64_t)v422,
        v423,
        v424);
      sub_10017F1E8();
      sub_1001781AC(v9, &qword_100E663F0);
      uint64_t v257 = v75;
      uint64_t v258 = v411;
      sub_1001781AC(v257, &qword_100E66418);
      uint64_t v259 = v37;
      uint64_t v260 = v437;
      sub_1001781AC(v259, &qword_100E66420);
      sub_1001781AC(v76, &qword_100E66428);
      sub_1001781AC(v229, &qword_100E66430);
      sub_1001781AC(v223, &qword_100E66438);
      uint64_t v414 = v222;
      sub_1001781AC(v222, &qword_100E66440);
      sub_1001B1E64(v429 + 7, v429[10]);
      sub_100AA88B0((uint64_t)v230 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_view, v42, (void (*)(void))type metadata accessor for ViewState);
      uint64_t v261 = (char *)v230 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_environment;
      swift_beginAccess();
      char v262 = *((unsigned char *)v230 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_notifications);
      uint64_t v429 = v230;
      *(unsigned char *)(v42 + v38[5]) = v261[1];
      sub_1001826C0(v262);
      *(unsigned char *)(v42 + v263) = v264;
      *(unsigned char *)(v42 + v38[9]) = v265;
      *(unsigned char *)(v42 + v38[10]) = v266;
      uint64_t v267 = sub_10087ACD0(v42);
      sub_1001C66BC(v42, (void (*)(void))type metadata accessor for NotificationsOptInInput);
      if ((v267 & 0xFE) == 4)
      {
        uint64_t v268 = sub_100164F30((uint64_t)v444);
        _s7Weather24LocationCompositionStateOwst_0(v268, v269, v270, v413);
        uint64_t v271 = sub_100164F30((uint64_t)v445);
        _s7Weather24LocationCompositionStateOwst_0(v271, v272, v273, v412);
        uint64_t v274 = sub_100164F30((uint64_t)v446);
        _s7Weather24LocationCompositionStateOwst_0(v274, v275, v276, v418);
        sub_1001A35D4(v258, v277, (void (*)(void))type metadata accessor for NotificationsOptInState);
        uint64_t v278 = sub_100182368((uint64_t)&v452);
        _s7Weather24LocationCompositionStateOwst_0(v278, v279, v280, v426);
        BYTE4(v411) = 0;
        LODWORD(v411) = 33686019;
        sub_100172528();
        sub_1001873D4();
        sub_1001C6768(v281, v282, v283, v284, v285, v286, v42, 2, v287, v411, SBYTE1(v411), SBYTE2(v411), SBYTE3(v411), SBYTE4(v411));
        sub_1001781AC(v42, (uint64_t *)&unk_100E73CA0);
        sub_1001C66BC(v267, (void (*)(void))type metadata accessor for NotificationsOptInState);
        uint64_t v288 = sub_1001A2F9C();
        _s7Weather24LocationCompositionStateOwst_0(v288, v289, v290, v260);
        uint64_t v291 = sub_1001627E0((uint64_t)v443);
        _s7Weather24LocationCompositionStateOwst_0(v291, v292, v293, v427);
        a3 = (uint64_t)v440;
        uint64_t v294 = v417;
        sub_100AA88B0((uint64_t)v440 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_view, v417, (void (*)(void))type metadata accessor for ViewState);
        sub_10018331C();
        long long v415 = 0u;
        LOBYTE(v414) = 2;
        uint64_t v413 = 1;
        uint64_t v295 = sub_100186DF0();
        uint64_t v303 = (uint64_t *)sub_100188C8C(v295, v296, v297, v298, v299, v300, v301, v302, v413, v414, v415, *((uint64_t *)&v415 + 1), v416, SBYTE1(v416), v417);
        uint64_t v304 = type metadata accessor for ViewState.SecondaryViewState(0);
        uint64_t v305 = v422;
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v422, 1, 1, v304);
        uint64_t v306 = type metadata accessor for SearchViewState(0);
        sub_10019E044(v306, (uint64_t)v447);
        type metadata accessor for DisplayMetrics();
        uint64_t v307 = sub_1001627F4((uint64_t)&v448);
        _s7Weather24LocationCompositionStateOwst_0(v307, v308, v309, v310);
        uint64_t v311 = type metadata accessor for WeatherMapPresentationState(0);
        uint64_t v312 = v425;
        sub_100163050(v425, v313, v314, v311);
        uint64_t v315 = v416;
        sub_10011D8AC();
        swift_release();
        sub_1001781AC(v312, &qword_100E663F8);
        sub_1001781AC(v260, &qword_100E66400);
        sub_1001781AC(v258, &qword_100E66408);
        sub_1001781AC((uint64_t)v305, &qword_100E66410);
        sub_1001C66BC(v294, (void (*)(void))type metadata accessor for ViewState);
        _s7Weather24LocationCompositionStateOwst_0(v315, 0, 1, v435);
        uint64_t v316 = sub_100164C1C();
        _s7Weather24LocationCompositionStateOwst_0(v316, v317, v318, v428);
        sub_100180B18();
        uint64_t v421 = v315;
        uint64_t v422 = v303;
        uint64_t v419 = v223;
        uint64_t v420 = v76;
        uint64_t v319 = sub_10016356C();
        uint64_t v320 = v419;
        uint64_t v321 = v420;
        uint64_t v322 = v421;
        sub_100163034(v319, v323, v419, v420, v421, v324, v325, v326, v418, v419, v420, v421, (uint64_t)v422, v423, v424, v425, v426, v427, v428,
          (uint64_t)v429,
          v430);
        sub_10017F1E8();
        swift_release();
        sub_1001781AC((uint64_t)v303, &qword_100E663F0);
        sub_1001781AC(v315, &qword_100E66418);
        sub_1001781AC(v76, &qword_100E66420);
        sub_1001781AC(v223, &qword_100E66428);
        sub_1001781AC(v322, &qword_100E66430);
        sub_1001781AC(v321, &qword_100E66438);
        uint64_t v209 = v320;
      }
      else
      {
        a3 = v267 >> 8;
        type metadata accessor for NotificationsOptInViewState._Storage();
        uint64_t v372 = swift_allocObject();
        *(_WORD *)(v372 + 16) = v267;
        *(unsigned char *)(v372 + 18) = BYTE2(v267) & 1;
        *(unsigned char *)(v372 + 19) = BYTE3(v267);
        uint64_t v373 = sub_1001627E0((uint64_t)v442);
        _s7Weather24LocationCompositionStateOwst_0(v373, v374, v375, v413);
        uint64_t v376 = v439;
        _s7Weather24LocationCompositionStateOwst_0(v439, 1, 1, v412);
        uint64_t v377 = v438;
        uint64_t v378 = sub_100182D78();
        _s7Weather24LocationCompositionStateOwst_0(v378, v379, v380, v418);
        sub_1001A35D4(v258, v381, (void (*)(void))type metadata accessor for NotificationsOptInState);
        uint64_t v382 = sub_10019B7B0();
        _s7Weather24LocationCompositionStateOwst_0(v382, v383, v384, v426);
        BYTE4(v411) = 0;
        sub_10018C630();
        uint64_t v386 = *(void *)(v385 - 256);
        sub_10018AC44(2u, 0, v386, v411, SBYTE1(v411), SBYTE2(v411), SBYTE3(v411), SBYTE4(v411));
        sub_1001781AC(v267, (uint64_t *)&unk_100E73CA0);
        sub_1001C66BC(v267, (void (*)(void))type metadata accessor for NotificationsOptInState);
        _s7Weather24LocationCompositionStateOwst_0(v386, 0, 1, v260);
        uint64_t v387 = sub_100166DEC();
        _s7Weather24LocationCompositionStateOwst_0(v387, v389, v390, *(void *)(v388 - 256));
        sub_100184DE4();
        uint64_t v391 = (uint64_t)v436;
        *uint64_t v436 = v372;
        uint64_t v392 = v428;
        swift_storeEnumTagMultiPayload();
        _s7Weather24LocationCompositionStateOwst_0(v391, 0, 1, v392);
        swift_retain();
        uint64_t v411 = (uint64_t)v440;
        uint64_t v393 = sub_10016356C();
        sub_100163034(v393, v394, v76, v376, v377, v395, v396, v397, v399, v386, v260, v258, v391, 0, 0, 0, 0, 0, 0,
          0,
          v411);
        sub_10017F704();
        swift_release();
        sub_1001781AC(v391, &qword_100E663F0);
        sub_1001781AC(v258, &qword_100E66418);
        sub_1001781AC(v260, &qword_100E66420);
        sub_1001781AC(v386, &qword_100E66428);
        sub_1001781AC(v377, &qword_100E66430);
        sub_1001781AC(v376, &qword_100E66438);
        uint64_t v209 = v76;
      }
      goto LABEL_19;
    case 9u:
      sub_1001B1E64(v429 + 12, v429[15]);
      a3 = (uint64_t)v440;
      sub_100881F20((uint64_t)v440, 1, &v441);
      type metadata accessor for ReportWeatherViewState._Storage();
      uint64_t v327 = swift_allocObject();
      sub_1002A8CC8((uint64_t)&v441, v327 + 16);
      uint64_t v328 = type metadata accessor for AppConfigurationState();
      uint64_t v331 = sub_10017CD74(v328, v329, v330, v328);
      uint64_t v332 = v439;
      sub_1001630C0(v439, v333, v334, v331);
      uint64_t v335 = v438;
      uint64_t v336 = sub_100182D78();
      _s7Weather24LocationCompositionStateOwst_0(v336, v337, v338, v339);
      uint64_t v340 = v431;
      uint64_t v341 = sub_10017AF10(v431, 1);
      uint64_t v342 = v433;
      _s7Weather24LocationCompositionStateOwst_0(v433, 1, 1, v341);
      uint64_t v343 = sub_1001627E0((uint64_t)&v453);
      _s7Weather24LocationCompositionStateOwst_0(v343, v344, v345, v435);
      uint64_t v346 = (uint64_t)v436;
      *uint64_t v436 = v327;
      uint64_t v347 = type metadata accessor for ModalViewState(0);
      swift_storeEnumTagMultiPayload();
      _s7Weather24LocationCompositionStateOwst_0(v346, 0, 1, v347);
      sub_1002A8D24(&v441, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_100274EDC);
      swift_retain();
      sub_100180B18();
      uint64_t v414 = v76;
      *(void *)&long long v415 = v346;
      uint64_t v412 = v340;
      uint64_t v413 = v342;
      uint64_t v348 = sub_10016356C();
      sub_100163034(v348, v349, v75, v332, v335, v350, v351, v352, v411, v412, v413, v414, v415, *((uint64_t *)&v415 + 1), v416, v417, v418, v419, v420,
        v421,
        (uint64_t)v422);
      sub_10017F704();
      sub_1002A8D24(&v441, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_100274E38);
      sub_1001781AC(v346, &qword_100E663F0);
      sub_1001781AC(v76, &qword_100E66418);
      sub_1001781AC(v342, &qword_100E66420);
      sub_1001781AC(v340, &qword_100E66428);
      sub_1001781AC(v335, &qword_100E66430);
      sub_1001781AC(v332, &qword_100E66438);
      uint64_t v209 = v75;
      goto LABEL_19;
    case 0xAu:
      uint64_t v353 = sub_10017EDC0();
      char v356 = 1;
      goto LABEL_27;
    case 0xBu:
      uint64_t v357 = type metadata accessor for AppConfigurationState();
      uint64_t v140 = v75;
      uint64_t v360 = sub_10017CD74(v357, v358, v359, v357);
      uint64_t v144 = v439;
      uint64_t v363 = sub_1001630C0(v439, v361, v362, v360);
      uint64_t v148 = v438;
      _s7Weather24LocationCompositionStateOwst_0(v438, 1, 1, v363);
      uint64_t v23 = v431;
      uint64_t v364 = sub_10017AF10(v431, 1);
      uint64_t v221 = sub_10019DBE0(v364);
      uint64_t v9 = (uint64_t)v436;
LABEL_17:
      swift_storeEnumTagMultiPayload();
      _s7Weather24LocationCompositionStateOwst_0(v9, 0, 1, v221);
      uint64_t v409 = (uint64_t)v440;
LABEL_18:
      sub_100183844();
      uint64_t v365 = sub_10016356C();
      sub_100163034(v365, v366, v140, v144, v148, v367, v368, v369, v398, v23, v75, (uint64_t)v31, v9, v400, v401, v402, v403, v404, v405,
        0,
        v409);
      sub_10017F1E8();
      sub_1001781AC(v9, &qword_100E663F0);
      sub_1001781AC((uint64_t)v31, &qword_100E66418);
      sub_1001781AC(v75, &qword_100E66420);
      sub_1001781AC(v23, &qword_100E66428);
      sub_1001781AC(v148, &qword_100E66430);
      sub_1001781AC(v144, &qword_100E66438);
      uint64_t v209 = v140;
      goto LABEL_19;
    case 0xCu:
      uint64_t v353 = sub_10017EDC0();
      char v356 = 2;
      char v370 = 0;
      goto LABEL_28;
    case 0xDu:
      uint64_t v405 = 0;
      uint64_t v406 = 0;
      uint64_t v410 = v434;
      LOWORD(v407) = 514;
      char v404 = 2;
      uint64_t v403 = 1;
      uint64_t v353 = 0;
      __int16 v354 = 256;
      char v355 = 0;
      goto LABEL_26;
    case 0xEu:
      uint64_t v405 = 0;
      uint64_t v406 = 0;
      uint64_t v410 = v434;
      LOWORD(v407) = 514;
      char v404 = 2;
      uint64_t v403 = 0;
      goto LABEL_25;
    case 0xFu:
      uint64_t v405 = 0;
      uint64_t v406 = 0;
      uint64_t v410 = v434;
      LOWORD(v407) = 258;
      char v126 = 2;
LABEL_24:
      char v404 = v126;
      uint64_t v403 = 1;
LABEL_25:
      uint64_t v353 = 0;
      __int16 v354 = 256;
      char v355 = 2;
LABEL_26:
      char v356 = 2;
LABEL_27:
      char v370 = 3;
LABEL_28:
      uint64_t v212 = sub_100188C8C(v353, v354, v355, v356, v370, v81, v82, v83, v403, v404, v405, v406, v407, SBYTE1(v407), v410);
LABEL_29:
      a3 = sub_100AA8220(v212, (uint64_t)v440);
      swift_release();
      break;
    default:
      char v84 = v80[*(int *)(sub_10017DF08(&qword_100E6F640) + 48)];
      (*(void (**)(uint64_t, char *, uint64_t))(v427 + 32))(v37, v80, v428);
      uint64_t v85 = type metadata accessor for AppConfigurationState();
      uint64_t v414 = v75;
      uint64_t v88 = sub_10017CD74(v85, v86, v87, v85);
      uint64_t v91 = sub_1001630C0(v439, v89, v90, v88);
      _s7Weather24LocationCompositionStateOwst_0(v438, 1, 1, v91);
      uint64_t v92 = v431;
      uint64_t v93 = sub_10017AF10(v431, 1);
      uint64_t v94 = v433;
      sub_100163050(v433, v95, v96, v93);
      sub_100AA88B0((uint64_t)v440 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_view, (uint64_t)v31, (void (*)(void))type metadata accessor for ViewState);
      LocationModel.identifier.getter();
      uint64_t v97 = sub_1001A2F9C();
      _s7Weather24LocationCompositionStateOwst_0(v97, v98, v99, v426);
      type metadata accessor for LocationViewerViewState._Storage(0);
      swift_allocObject();
      uint64_t v100 = sub_1001CCEF8(v23, 0, 0, 3, 0, v84);
      uint64_t v101 = v422;
      *uint64_t v422 = v100;
      uint64_t v102 = type metadata accessor for ViewState.SecondaryViewState(0);
      swift_storeEnumTagMultiPayload();
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v101, 0, 1, v102);
      uint64_t v103 = type metadata accessor for SearchViewState(0);
      uint64_t v104 = v423;
      _s7Weather24LocationCompositionStateOwst_0(v423, 1, 1, v103);
      uint64_t v105 = type metadata accessor for DisplayMetrics();
      a3 = v424;
      _s7Weather24LocationCompositionStateOwst_0(v424, 1, 1, v105);
      type metadata accessor for WeatherMapPresentationState(0);
      uint64_t v106 = sub_100182368((uint64_t)&v449);
      _s7Weather24LocationCompositionStateOwst_0(v106, v107, v108, v109);
      uint64_t v110 = (uint64_t)v432;
      sub_10011D8AC();
      sub_1001781AC(v102, &qword_100E663F8);
      sub_1001781AC(a3, &qword_100E66400);
      sub_1001781AC(v104, &qword_100E66408);
      sub_1001781AC((uint64_t)v101, &qword_100E66410);
      sub_1001C66BC((uint64_t)v31, (void (*)(void))type metadata accessor for ViewState);
      uint64_t v111 = sub_1001A2F9C();
      _s7Weather24LocationCompositionStateOwst_0(v111, v112, v113, v435);
      type metadata accessor for ModalViewState(0);
      uint64_t v114 = sub_100164C1C();
      _s7Weather24LocationCompositionStateOwst_0(v114, v115, v116, v117);
      uint64_t v408 = (uint64_t)v440;
      sub_100183844();
      uint64_t v118 = sub_10016356C();
      uint64_t v119 = v414;
      uint64_t v121 = v438;
      uint64_t v120 = v439;
      sub_100163034(v118, v122, v414, v439, v438, v123, v124, v125, v398, v92, v94, v110, v102, v400, v401, v402, v403, v404, v405,
        0,
        v408);
      sub_10017F1E8();
      sub_1001781AC(v102, &qword_100E663F0);
      sub_1001781AC(v110, &qword_100E66418);
      sub_1001781AC(v94, &qword_100E66420);
      sub_1001781AC(v92, &qword_100E66428);
      sub_1001781AC(v121, &qword_100E66430);
      sub_1001781AC(v120, &qword_100E66438);
      sub_1001781AC(v119, &qword_100E66440);
      (*(void (**)(uint64_t, uint64_t))(v427 + 8))(v37, v428);
      break;
  }
  return a3;
}

uint64_t sub_100AA8220(uint64_t a1, uint64_t a2)
{
  uint64_t v58 = a2;
  uint64_t v61 = a1;
  uint64_t v2 = sub_10017DF08(&qword_100E663F0);
  __chkstk_darwin(v2 - 8);
  uint64_t v62 = (uint64_t)&v55 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10017DF08(&qword_100E663F8);
  __chkstk_darwin(v4 - 8);
  uint64_t v60 = (uint64_t)&v55 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10017DF08(&qword_100E66400);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10017DF08(&qword_100E66408);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v55 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10017DF08(&qword_100E66410);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v55 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = type metadata accessor for ViewState(0);
  __chkstk_darwin(v59);
  uint64_t v16 = (char *)&v55 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_10017DF08(&qword_100E66418);
  __chkstk_darwin(v17 - 8);
  int v19 = (char *)&v55 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_10017DF08(&qword_100E66420);
  __chkstk_darwin(v20 - 8);
  uint64_t v22 = (char *)&v55 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = v22;
  uint64_t v23 = sub_10017DF08(&qword_100E66428);
  __chkstk_darwin(v23 - 8);
  uint64_t v25 = (char *)&v55 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = v25;
  uint64_t v26 = sub_10017DF08(&qword_100E66430);
  __chkstk_darwin(v26 - 8);
  uint64_t v28 = (char *)&v55 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = sub_10017DF08(&qword_100E66438);
  __chkstk_darwin(v29 - 8);
  uint64_t v31 = (char *)&v55 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = sub_10017DF08(&qword_100E66440);
  __chkstk_darwin(v32 - 8);
  uint64_t v34 = (char *)&v55 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = type metadata accessor for AppConfigurationState();
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v34, 1, 1, v35);
  uint64_t v36 = type metadata accessor for EnvironmentState();
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v31, 1, 1, v36);
  uint64_t v37 = type metadata accessor for LocationsState();
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v28, 1, 1, v37);
  uint64_t v38 = type metadata accessor for NotificationsOptInState();
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v25, 1, 1, v38);
  uint64_t v39 = type metadata accessor for TimeState();
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v22, 1, 1, v39);
  uint64_t v40 = v58;
  sub_100AA88B0(v58 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_view, (uint64_t)v16, (void (*)(void))type metadata accessor for ViewState);
  uint64_t v41 = type metadata accessor for ViewState.SecondaryViewState(0);
  uint64_t v42 = (uint64_t)v14;
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v14, 1, 1, v41);
  uint64_t v43 = type metadata accessor for SearchViewState(0);
  uint64_t v44 = (uint64_t)v11;
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v11, 1, 1, v43);
  uint64_t v45 = type metadata accessor for DisplayMetrics();
  uint64_t v46 = (uint64_t)v8;
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v8, 1, 1, v45);
  uint64_t v47 = type metadata accessor for WeatherMapPresentationState(0);
  uint64_t v48 = v60;
  _s7Weather24LocationCompositionStateOwst_0(v60, 1, 1, v47);
  sub_10011D8AC();
  sub_1001781AC(v48, &qword_100E663F8);
  sub_1001781AC(v46, &qword_100E66400);
  sub_1001781AC(v44, &qword_100E66408);
  sub_1001781AC(v42, &qword_100E66410);
  sub_1001C66BC((uint64_t)v16, (void (*)(void))type metadata accessor for ViewState);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v19, 0, 1, v59);
  uint64_t v49 = type metadata accessor for ModalViewState(0);
  uint64_t v50 = v62;
  _s7Weather24LocationCompositionStateOwst_0(v62, 1, 1, v49);
  uint64_t v51 = (uint64_t)v56;
  uint64_t v52 = (uint64_t)v57;
  uint64_t v53 = sub_1001659F0(0, 3, (uint64_t)v34, (uint64_t)v31, (uint64_t)v28, 0, 0, 0, 0, (uint64_t)v57, (uint64_t)v56, (uint64_t)v19, v50, 0, 0, 0, 0, 0, 0,
          0,
          v40);
  sub_1001781AC(v50, &qword_100E663F0);
  sub_1001781AC((uint64_t)v19, &qword_100E66418);
  sub_1001781AC(v51, &qword_100E66420);
  sub_1001781AC(v52, &qword_100E66428);
  sub_1001781AC((uint64_t)v28, &qword_100E66430);
  sub_1001781AC((uint64_t)v31, &qword_100E66438);
  sub_1001781AC((uint64_t)v34, &qword_100E66440);
  return v53;
}

uint64_t sub_100AA88B0(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(a2, a1);
  return a2;
}

void *sub_100AA8910(void *a1, void *a2, int *a3)
{
  uint64_t v3 = a2;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (void *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_10017DF08((uint64_t *)&unk_100EAA560);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = type metadata accessor for UserInterfaceSizeClass();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v3, 1, v7))
      {
        uint64_t v8 = sub_10017DF08(&qword_100E65ED8);
        memcpy(a1, v3, *(void *)(*(void *)(v8 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, v3, v7);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v7);
      }
    }
    else
    {
      *a1 = *v3;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v10 = a3[5];
    uint64_t v11 = (void *)((char *)a1 + v10);
    uint64_t v12 = (void *)((char *)v3 + v10);
    uint64_t v13 = *(void *)((char *)v3 + v10 + 8);
    if (v13)
    {
      *uint64_t v11 = *v12;
      v11[1] = v13;
      uint64_t v14 = v12[3];
      void v11[2] = v12[2];
      uint64_t v11[3] = v14;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v15 = *((_OWORD *)v12 + 1);
      *(_OWORD *)uint64_t v11 = *(_OWORD *)v12;
      *((_OWORD *)v11 + 1) = v15;
    }
    uint64_t v16 = type metadata accessor for DetailComponentContainerViewModel();
    uint64_t v17 = *(int *)(v16 + 20);
    uint64_t v18 = (void *)((char *)v11 + v17);
    int v19 = (void *)((char *)v12 + v17);
    uint64_t v20 = type metadata accessor for NewsArticleComponentViewModel(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v49 = v16;
      uint64_t v51 = v3;
      uint64_t v21 = v19[1];
      *uint64_t v18 = *v19;
      v18[1] = v21;
      uint64_t v52 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
      uint64_t v22 = v52[5];
      uint64_t v23 = (char *)v18 + v22;
      uint64_t v24 = (char *)v19 + v22;
      uint64_t v25 = type metadata accessor for URL();
      swift_bridgeObjectRetain();
      uint64_t v50 = a1;
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v24, 1, v25))
      {
        uint64_t v26 = sub_10017DF08(&qword_100E749B0);
        memcpy(v23, v24, *(void *)(*(void *)(v26 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 16))(v23, v24, v25);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v23, 0, 1, v25);
      }
      uint64_t v27 = v52[6];
      uint64_t v28 = (void *)((char *)v18 + v27);
      uint64_t v29 = (void *)((char *)v19 + v27);
      uint64_t v30 = v29[1];
      *uint64_t v28 = *v29;
      v28[1] = v30;
      uint64_t v31 = v52[7];
      uint64_t v32 = (char *)v18 + v31;
      uint64_t v33 = (char *)v19 + v31;
      uint64_t v34 = *(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 16);
      swift_bridgeObjectRetain();
      v34(v32, v33, v25);
      uint64_t v35 = v52[8];
      uint64_t v36 = (char *)v18 + v35;
      uint64_t v37 = (char *)v19 + v35;
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v19 + v35, 1, v25))
      {
        uint64_t v38 = sub_10017DF08(&qword_100E749B0);
        memcpy(v36, v37, *(void *)(*(void *)(v38 - 8) + 64));
      }
      else
      {
        v34(v36, v37, v25);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v36, 0, 1, v25);
      }
      uint64_t v3 = v51;
      a1 = v50;
      *((unsigned char *)v18 + v52[9]) = *((unsigned char *)v19 + v52[9]);
      swift_storeEnumTagMultiPayload();
      uint64_t v16 = v49;
    }
    else
    {
      memcpy(v18, v19, *(void *)(*(void *)(v20 - 8) + 64));
    }
    uint64_t v39 = *(int *)(v16 + 24);
    uint64_t v40 = (char *)v11 + v39;
    uint64_t v41 = (char *)v12 + v39;
    uint64_t v42 = type metadata accessor for DetailComponentAction();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v41, 1, v42))
    {
      uint64_t v43 = sub_10017DF08(&qword_100E73810);
      memcpy(v40, v41, *(void *)(*(void *)(v43 - 8) + 64));
    }
    else
    {
      uint64_t v44 = type metadata accessor for URL();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v44 - 8) + 16))(v40, v41, v44);
      uint64_t v45 = sub_10017DF08(&qword_100E66478);
      v40[*(int *)(v45 + 48)] = v41[*(int *)(v45 + 48)];
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v40, 0, 1, v42);
    }
    uint64_t v46 = a3[6];
    long long v47 = *(_OWORD *)((char *)v3 + v46 + 24);
    *(_OWORD *)((char *)a1 + v46 + 24) = v47;
    (**(void (***)(void))(v47 - 8))();
    *((unsigned char *)a1 + a3[7]) = *((unsigned char *)v3 + a3[7]);
  }
  return a1;
}

uint64_t sub_100AA8E14(uint64_t a1, uint64_t a2)
{
  sub_10017DF08((uint64_t *)&unk_100EAA560);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = type metadata accessor for UserInterfaceSizeClass();
    if (!_s7Weather24LocationCompositionStateOwet_0(a1, 1, v4)) {
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
    }
  }
  else
  {
    swift_release();
  }
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  if (*(void *)(v5 + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v6 = type metadata accessor for DetailComponentContainerViewModel();
  uint64_t v7 = v5 + *(int *)(v6 + 20);
  type metadata accessor for NewsArticleComponentViewModel(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    swift_bridgeObjectRelease();
    uint64_t v8 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
    uint64_t v9 = v7 + v8[5];
    uint64_t v10 = type metadata accessor for URL();
    if (!_s7Weather24LocationCompositionStateOwet_0(v9, 1, v10)) {
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
    }
    swift_bridgeObjectRelease();
    uint64_t v11 = *(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8);
    v11(v7 + v8[7], v10);
    uint64_t v12 = v7 + v8[8];
    if (!_s7Weather24LocationCompositionStateOwet_0(v12, 1, v10)) {
      v11(v12, v10);
    }
  }
  uint64_t v13 = v5 + *(int *)(v6 + 24);
  uint64_t v14 = type metadata accessor for DetailComponentAction();
  if (!_s7Weather24LocationCompositionStateOwet_0(v13, 1, v14))
  {
    uint64_t v15 = type metadata accessor for URL();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v13, v15);
  }
  uint64_t v16 = a1 + *(int *)(a2 + 24);

  return _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v16);
}

void *sub_100AA9074(void *a1, void *a2, int *a3)
{
  sub_10017DF08((uint64_t *)&unk_100EAA560);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = type metadata accessor for UserInterfaceSizeClass();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v6))
    {
      uint64_t v7 = sub_10017DF08(&qword_100E65ED8);
      memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v6);
    }
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v8 = a3[5];
  uint64_t v9 = (void *)((char *)a1 + v8);
  uint64_t v10 = (void *)((char *)a2 + v8);
  uint64_t v11 = *(void *)((char *)a2 + v8 + 8);
  if (v11)
  {
    *uint64_t v9 = *v10;
    v9[1] = v11;
    uint64_t v12 = v10[3];
    void v9[2] = v10[2];
    v9[3] = v12;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v13 = *((_OWORD *)v10 + 1);
    *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
    *((_OWORD *)v9 + 1) = v13;
  }
  uint64_t v14 = type metadata accessor for DetailComponentContainerViewModel();
  uint64_t v15 = *(int *)(v14 + 20);
  uint64_t v16 = (void *)((char *)v9 + v15);
  uint64_t v17 = (void *)((char *)v10 + v15);
  uint64_t v18 = type metadata accessor for NewsArticleComponentViewModel(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v47 = v14;
    uint64_t v48 = a3;
    uint64_t v49 = a2;
    uint64_t v19 = v17[1];
    *uint64_t v16 = *v17;
    v16[1] = v19;
    uint64_t v50 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
    uint64_t v20 = v50[5];
    uint64_t v21 = (char *)v16 + v20;
    uint64_t v22 = (char *)v17 + v20;
    uint64_t v23 = type metadata accessor for URL();
    swift_bridgeObjectRetain();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v22, 1, v23))
    {
      uint64_t v24 = sub_10017DF08(&qword_100E749B0);
      memcpy(v21, v22, *(void *)(*(void *)(v24 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v21, 0, 1, v23);
    }
    uint64_t v25 = v50[6];
    uint64_t v26 = (void *)((char *)v16 + v25);
    uint64_t v27 = (void *)((char *)v17 + v25);
    uint64_t v28 = v27[1];
    *uint64_t v26 = *v27;
    v26[1] = v28;
    uint64_t v29 = v50[7];
    uint64_t v30 = (char *)v16 + v29;
    uint64_t v31 = (char *)v17 + v29;
    uint64_t v32 = *(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16);
    swift_bridgeObjectRetain();
    v32(v30, v31, v23);
    uint64_t v33 = v50[8];
    uint64_t v34 = (char *)v16 + v33;
    uint64_t v35 = (char *)v17 + v33;
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v17 + v33, 1, v23))
    {
      uint64_t v36 = sub_10017DF08(&qword_100E749B0);
      memcpy(v34, v35, *(void *)(*(void *)(v36 - 8) + 64));
    }
    else
    {
      v32(v34, v35, v23);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v34, 0, 1, v23);
    }
    a2 = v49;
    *((unsigned char *)v16 + v50[9]) = *((unsigned char *)v17 + v50[9]);
    swift_storeEnumTagMultiPayload();
    uint64_t v14 = v47;
    a3 = v48;
  }
  else
  {
    memcpy(v16, v17, *(void *)(*(void *)(v18 - 8) + 64));
  }
  uint64_t v37 = *(int *)(v14 + 24);
  uint64_t v38 = (char *)v9 + v37;
  uint64_t v39 = (char *)v10 + v37;
  uint64_t v40 = type metadata accessor for DetailComponentAction();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v39, 1, v40))
  {
    uint64_t v41 = sub_10017DF08(&qword_100E73810);
    memcpy(v38, v39, *(void *)(*(void *)(v41 - 8) + 64));
  }
  else
  {
    uint64_t v42 = type metadata accessor for URL();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v42 - 8) + 16))(v38, v39, v42);
    uint64_t v43 = sub_10017DF08(&qword_100E66478);
    v38[*(int *)(v43 + 48)] = v39[*(int *)(v43 + 48)];
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v38, 0, 1, v40);
  }
  uint64_t v44 = a3[6];
  long long v45 = *(_OWORD *)((char *)a2 + v44 + 24);
  *(_OWORD *)((char *)a1 + v44 + 24) = v45;
  (**(void (***)(void))(v45 - 8))();
  *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
  return a1;
}

void *sub_100AA9524(void *a1, void *a2, int *a3)
{
  uint64_t v4 = a2;
  if (a1 != a2)
  {
    sub_1001781AC((uint64_t)a1, (uint64_t *)&unk_100EAA560);
    sub_10017DF08((uint64_t *)&unk_100EAA560);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = type metadata accessor for UserInterfaceSizeClass();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v4, 1, v6))
      {
        uint64_t v7 = sub_10017DF08(&qword_100E65ED8);
        memcpy(a1, v4, *(void *)(*(void *)(v7 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, v4, v6);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v6);
      }
    }
    else
    {
      *a1 = *v4;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v8 = a3[5];
  uint64_t v9 = (void *)((char *)a1 + v8);
  uint64_t v10 = (void *)((char *)v4 + v8);
  uint64_t v11 = *(void *)((char *)a1 + v8 + 8);
  uint64_t v12 = *(void *)((char *)v4 + v8 + 8);
  if (v11)
  {
    if (v12)
    {
      *uint64_t v9 = *v10;
      v9[1] = v10[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      void v9[2] = v10[2];
      v9[3] = v10[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1004B70A8((uint64_t)v9);
      long long v13 = *((_OWORD *)v10 + 1);
      *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
      *((_OWORD *)v9 + 1) = v13;
    }
  }
  else if (v12)
  {
    *uint64_t v9 = *v10;
    v9[1] = v10[1];
    void v9[2] = v10[2];
    v9[3] = v10[3];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v14 = *((_OWORD *)v10 + 1);
    *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
    *((_OWORD *)v9 + 1) = v14;
  }
  uint64_t v15 = type metadata accessor for DetailComponentContainerViewModel();
  uint64_t v16 = v15;
  if (a1 != v4)
  {
    uint64_t v17 = *(int *)(v15 + 20);
    uint64_t v18 = (void *)((char *)v9 + v17);
    uint64_t v19 = (void *)((char *)v10 + v17);
    sub_100AAB678((uint64_t)v9 + v17, (void (*)(void))type metadata accessor for NewsArticleComponentViewModel);
    uint64_t v20 = type metadata accessor for NewsArticleComponentViewModel(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v50 = v16;
      *uint64_t v18 = *v19;
      v18[1] = v19[1];
      uint64_t v51 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
      uint64_t v21 = v51[5];
      __dst = (char *)v18 + v21;
      uint64_t v22 = (char *)v19 + v21;
      uint64_t v23 = type metadata accessor for URL();
      swift_bridgeObjectRetain();
      uint64_t v48 = v4;
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v22, 1, v23))
      {
        uint64_t v24 = sub_10017DF08(&qword_100E749B0);
        memcpy(__dst, v22, *(void *)(*(void *)(v24 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(__dst, v22, v23);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dst, 0, 1, v23);
      }
      uint64_t v25 = v51[6];
      uint64_t v26 = (void *)((char *)v18 + v25);
      uint64_t v27 = (void *)((char *)v19 + v25);
      *uint64_t v26 = *v27;
      v26[1] = v27[1];
      uint64_t v28 = v51[7];
      uint64_t v29 = (char *)v18 + v28;
      uint64_t v30 = (char *)v19 + v28;
      uint64_t v31 = *(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16);
      swift_bridgeObjectRetain();
      v31(v29, v30, v23);
      uint64_t v32 = v51[8];
      uint64_t v33 = (char *)v18 + v32;
      uint64_t v34 = (char *)v19 + v32;
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v19 + v32, 1, v23))
      {
        uint64_t v35 = sub_10017DF08(&qword_100E749B0);
        memcpy(v33, v34, *(void *)(*(void *)(v35 - 8) + 64));
      }
      else
      {
        v31(v33, v34, v23);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v33, 0, 1, v23);
      }
      uint64_t v4 = v48;
      *((unsigned char *)v18 + v51[9]) = *((unsigned char *)v19 + v51[9]);
      swift_storeEnumTagMultiPayload();
      uint64_t v16 = v50;
    }
    else
    {
      memcpy(v18, v19, *(void *)(*(void *)(v20 - 8) + 64));
    }
  }
  uint64_t v36 = *(int *)(v16 + 24);
  uint64_t v37 = (char *)v9 + v36;
  uint64_t v38 = (char *)v10 + v36;
  uint64_t v39 = type metadata accessor for DetailComponentAction();
  int v40 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v37, 1, v39);
  int v41 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v38, 1, v39);
  if (!v40)
  {
    if (!v41)
    {
      uint64_t v46 = type metadata accessor for URL();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v46 - 8) + 24))(v37, v38, v46);
      uint64_t v47 = sub_10017DF08(&qword_100E66478);
      v37[*(int *)(v47 + 48)] = v38[*(int *)(v47 + 48)];
      goto LABEL_31;
    }
    sub_100AAB678((uint64_t)v37, (void (*)(void))type metadata accessor for DetailComponentAction);
    goto LABEL_30;
  }
  if (v41)
  {
LABEL_30:
    uint64_t v44 = sub_10017DF08(&qword_100E73810);
    memcpy(v37, v38, *(void *)(*(void *)(v44 - 8) + 64));
    goto LABEL_31;
  }
  uint64_t v42 = type metadata accessor for URL();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v42 - 8) + 16))(v37, v38, v42);
  uint64_t v43 = sub_10017DF08(&qword_100E66478);
  v37[*(int *)(v43 + 48)] = v38[*(int *)(v43 + 48)];
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v37, 0, 1, v39);
LABEL_31:
  sub_1000C1E18((void *)((char *)a1 + a3[6]), (void *)((char *)v4 + a3[6]));
  *((unsigned char *)a1 + a3[7]) = *((unsigned char *)v4 + a3[7]);
  return a1;
}

char *sub_100AA9B00(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_10017DF08((uint64_t *)&unk_100EAA560);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = type metadata accessor for UserInterfaceSizeClass();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v7))
    {
      uint64_t v8 = sub_10017DF08(&qword_100E65ED8);
      memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v7);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v9 = a3[5];
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  long long v12 = *(_OWORD *)&a2[v9 + 16];
  *(_OWORD *)uint64_t v10 = *(_OWORD *)&a2[v9];
  *((_OWORD *)v10 + 1) = v12;
  uint64_t v13 = type metadata accessor for DetailComponentContainerViewModel();
  uint64_t v14 = *(int *)(v13 + 20);
  uint64_t v15 = &v10[v14];
  uint64_t v16 = &v11[v14];
  uint64_t v17 = type metadata accessor for NewsArticleComponentViewModel(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v43 = v13;
    uint64_t v44 = a3;
    uint64_t v46 = a1;
    *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
    uint64_t v47 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
    uint64_t v18 = v47[5];
    uint64_t v19 = &v15[v18];
    uint64_t v20 = &v16[v18];
    uint64_t v21 = type metadata accessor for URL();
    long long v45 = a2;
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v20, 1, v21))
    {
      uint64_t v22 = sub_10017DF08(&qword_100E749B0);
      memcpy(v19, v20, *(void *)(*(void *)(v22 - 8) + 64));
      uint64_t v23 = *(void *)(v21 - 8);
    }
    else
    {
      uint64_t v24 = (uint64_t)v19;
      uint64_t v23 = *(void *)(v21 - 8);
      (*(void (**)(uint64_t, char *, uint64_t))(v23 + 32))(v24, v20, v21);
      _s7Weather24LocationCompositionStateOwst_0(v24, 0, 1, v21);
    }
    *(_OWORD *)&v15[v47[6]] = *(_OWORD *)&v16[v47[6]];
    uint64_t v25 = *(void (**)(char *, char *, uint64_t))(v23 + 32);
    v25(&v15[v47[7]], &v16[v47[7]], v21);
    uint64_t v26 = v47[8];
    uint64_t v27 = &v15[v26];
    uint64_t v28 = &v16[v26];
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v16[v26], 1, v21))
    {
      uint64_t v29 = sub_10017DF08(&qword_100E749B0);
      memcpy(v27, v28, *(void *)(*(void *)(v29 - 8) + 64));
    }
    else
    {
      v25(v27, v28, v21);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v27, 0, 1, v21);
    }
    a2 = v45;
    a1 = v46;
    a3 = v44;
    v15[v47[9]] = v16[v47[9]];
    swift_storeEnumTagMultiPayload();
    uint64_t v13 = v43;
  }
  else
  {
    memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
  }
  uint64_t v30 = *(int *)(v13 + 24);
  uint64_t v31 = &v10[v30];
  uint64_t v32 = &v11[v30];
  uint64_t v33 = type metadata accessor for DetailComponentAction();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v32, 1, v33))
  {
    uint64_t v34 = sub_10017DF08(&qword_100E73810);
    memcpy(v31, v32, *(void *)(*(void *)(v34 - 8) + 64));
  }
  else
  {
    uint64_t v35 = type metadata accessor for URL();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 32))(v31, v32, v35);
    uint64_t v36 = sub_10017DF08(&qword_100E66478);
    v31[*(int *)(v36 + 48)] = v32[*(int *)(v36 + 48)];
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v31, 0, 1, v33);
  }
  uint64_t v37 = a3[6];
  uint64_t v38 = a3[7];
  uint64_t v39 = &a1[v37];
  int v40 = &a2[v37];
  long long v41 = *((_OWORD *)v40 + 1);
  *(_OWORD *)uint64_t v39 = *(_OWORD *)v40;
  *((_OWORD *)v39 + 1) = v41;
  *((void *)v39 + 4) = *((void *)v40 + 4);
  a1[v38] = a2[v38];
  return a1;
}

char *sub_100AA9F5C(char *a1, char *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_1001781AC((uint64_t)a1, (uint64_t *)&unk_100EAA560);
    uint64_t v6 = sub_10017DF08((uint64_t *)&unk_100EAA560);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = type metadata accessor for UserInterfaceSizeClass();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v7))
      {
        uint64_t v8 = sub_10017DF08(&qword_100E65ED8);
        memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v7);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
  }
  uint64_t v9 = a3[5];
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  if (*(void *)&a1[v9 + 8])
  {
    uint64_t v12 = *((void *)v11 + 1);
    if (v12)
    {
      *(void *)uint64_t v10 = *(void *)v11;
      *((void *)v10 + 1) = v12;
      swift_bridgeObjectRelease();
      uint64_t v13 = *((void *)v11 + 3);
      *((void *)v10 + 2) = *((void *)v11 + 2);
      *((void *)v10 + 3) = v13;
      swift_bridgeObjectRelease();
      goto LABEL_13;
    }
    sub_1004B70A8((uint64_t)v10);
  }
  long long v14 = *((_OWORD *)v11 + 1);
  *(_OWORD *)uint64_t v10 = *(_OWORD *)v11;
  *((_OWORD *)v10 + 1) = v14;
LABEL_13:
  uint64_t v15 = type metadata accessor for DetailComponentContainerViewModel();
  uint64_t v16 = v15;
  if (a1 != a2)
  {
    uint64_t v17 = *(int *)(v15 + 20);
    uint64_t v18 = &v10[v17];
    uint64_t v19 = &v11[v17];
    sub_100AAB678((uint64_t)&v10[v17], (void (*)(void))type metadata accessor for NewsArticleComponentViewModel);
    uint64_t v20 = type metadata accessor for NewsArticleComponentViewModel(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v48 = v16;
      uint64_t v49 = a3;
      *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
      uint64_t v52 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
      uint64_t v21 = v52[5];
      uint64_t v22 = &v18[v21];
      uint64_t v23 = &v19[v21];
      uint64_t v24 = type metadata accessor for URL();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v23, 1, v24))
      {
        uint64_t v25 = sub_10017DF08(&qword_100E749B0);
        memcpy(v22, v23, *(void *)(*(void *)(v25 - 8) + 64));
        uint64_t v26 = *(void *)(v24 - 8);
      }
      else
      {
        uint64_t v27 = v22;
        __dsta = v22;
        uint64_t v26 = *(void *)(v24 - 8);
        (*(void (**)(char *, char *, uint64_t))(v26 + 32))(v27, v23, v24);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dsta, 0, 1, v24);
      }
      *(_OWORD *)&v18[v52[6]] = *(_OWORD *)&v19[v52[6]];
      uint64_t v28 = *(void (**)(char *, char *, uint64_t))(v26 + 32);
      v28(&v18[v52[7]], &v19[v52[7]], v24);
      uint64_t v29 = v52[8];
      __dst = &v18[v29];
      uint64_t v30 = &v19[v29];
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v19[v29], 1, v24))
      {
        uint64_t v31 = sub_10017DF08(&qword_100E749B0);
        memcpy(__dst, v30, *(void *)(*(void *)(v31 - 8) + 64));
      }
      else
      {
        v28(__dst, v30, v24);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dst, 0, 1, v24);
      }
      uint64_t v16 = v48;
      a3 = v49;
      v18[v52[9]] = v19[v52[9]];
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v18, v19, *(void *)(*(void *)(v20 - 8) + 64));
    }
  }
  uint64_t v32 = *(int *)(v16 + 24);
  uint64_t v33 = &v10[v32];
  uint64_t v34 = &v11[v32];
  uint64_t v35 = type metadata accessor for DetailComponentAction();
  int v36 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v33, 1, v35);
  int v37 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v34, 1, v35);
  if (!v36)
  {
    if (!v37)
    {
      uint64_t v46 = type metadata accessor for URL();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v46 - 8) + 40))(v33, v34, v46);
      uint64_t v47 = sub_10017DF08(&qword_100E66478);
      v33[*(int *)(v47 + 48)] = v34[*(int *)(v47 + 48)];
      goto LABEL_29;
    }
    sub_100AAB678((uint64_t)v33, (void (*)(void))type metadata accessor for DetailComponentAction);
    goto LABEL_28;
  }
  if (v37)
  {
LABEL_28:
    uint64_t v40 = sub_10017DF08(&qword_100E73810);
    memcpy(v33, v34, *(void *)(*(void *)(v40 - 8) + 64));
    goto LABEL_29;
  }
  uint64_t v38 = type metadata accessor for URL();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 32))(v33, v34, v38);
  uint64_t v39 = sub_10017DF08(&qword_100E66478);
  v33[*(int *)(v39 + 48)] = v34[*(int *)(v39 + 48)];
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v33, 0, 1, v35);
LABEL_29:
  uint64_t v41 = a3[6];
  uint64_t v42 = &a1[v41];
  uint64_t v43 = &a2[v41];
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)&a1[v41]);
  long long v44 = *((_OWORD *)v43 + 1);
  *(_OWORD *)uint64_t v42 = *(_OWORD *)v43;
  *((_OWORD *)v42 + 1) = v44;
  *((void *)v42 + 4) = *((void *)v43 + 4);
  a1[a3[7]] = a2[a3[7]];
  return a1;
}

uint64_t sub_100AAA4C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100AAA4D4);
}

uint64_t sub_100AAA4D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_10017DF08((uint64_t *)&unk_100EAA540);
  sub_100162F30();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1;
LABEL_5:
    return _s7Weather24LocationCompositionStateOwet_0(v9, a2, v8);
  }
  type metadata accessor for DetailComponentContainerViewModel();
  sub_100162F30();
  if (*(_DWORD *)(v11 + 84) == a2)
  {
    uint64_t v8 = v10;
    uint64_t v9 = a1 + *(int *)(a3 + 20);
    goto LABEL_5;
  }
  unint64_t v13 = *(void *)(a1 + *(int *)(a3 + 24) + 24);
  if (v13 >= 0xFFFFFFFF) {
    LODWORD(v13) = -1;
  }
  return (v13 + 1);
}

uint64_t sub_100AAA590(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100AAA5A4);
}

void sub_100AAA5A4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_10017DF08((uint64_t *)&unk_100EAA540);
  sub_100162F30();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = a1;
  }
  else
  {
    type metadata accessor for DetailComponentContainerViewModel();
    sub_100162F30();
    if (*(_DWORD *)(v13 + 84) != a3)
    {
      *(void *)(a1 + *(int *)(a4 + 24) + 24) = (a2 - 1);
      return;
    }
    uint64_t v10 = v12;
    uint64_t v11 = a1 + *(int *)(a4 + 20);
  }

  _s7Weather24LocationCompositionStateOwst_0(v11, a2, a2, v10);
}

uint64_t type metadata accessor for DetailNewsComponentView()
{
  uint64_t result = qword_100EAE6A8;
  if (!qword_100EAE6A8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100AAA6A4()
{
  sub_1002308A0();
  if (v0 <= 0x3F)
  {
    type metadata accessor for DetailComponentContainerViewModel();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_100AAA780()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100AAA79C@<X0>(uint64_t a1@<X8>)
{
  *(void *)a1 = static HorizontalAlignment.leading.getter();
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 0;
  uint64_t v3 = sub_10017DF08(&qword_100EAE6E8);
  return sub_100AAA7E4(v1, a1 + *(int *)(v3 + 44));
}

uint64_t sub_100AAA7E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v140 = a1;
  uint64_t v156 = a2;
  uint64_t v2 = type metadata accessor for QuaternaryDividerStyle();
  uint64_t v132 = *(void *)(v2 - 8);
  uint64_t v133 = v2;
  __chkstk_darwin(v2);
  uint64_t v129 = (uint64_t)&v126 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v130 = type metadata accessor for Divider();
  uint64_t v128 = *(void *)(v130 - 8);
  __chkstk_darwin(v130);
  uint64_t v126 = (uint64_t)&v126 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10017DF08(&qword_100E77340);
  uint64_t v134 = *(void *)(v5 - 8);
  uint64_t v135 = v5;
  __chkstk_darwin(v5);
  uint64_t v131 = (uint64_t)&v126 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v153 = sub_10017DF08(&qword_100E77348);
  __chkstk_darwin(v153);
  uint64_t v127 = (uint64_t)&v126 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10017DF08(&qword_100EA3CE8);
  __chkstk_darwin(v8 - 8);
  uint64_t v155 = (uint64_t)&v126 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  unsigned __int8 v154 = (char *)&v126 - v11;
  uint64_t v151 = type metadata accessor for RoundedRectangle();
  __chkstk_darwin(v151);
  uint64_t v152 = (double *)((char *)&v126 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v146 = type metadata accessor for AutomationInfo(0);
  __chkstk_darwin(v146);
  uint64_t v147 = (_OWORD *)((char *)&v126 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v14 = type metadata accessor for DetailComponentContainerViewModel();
  __chkstk_darwin(v14 - 8);
  uint64_t v139 = (char *)&v126 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v141 = type metadata accessor for DetailComponentContainerView();
  __chkstk_darwin(v141);
  uint64_t v142 = (uint64_t *)((char *)&v126 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v17 = sub_10017DF08(&qword_100E79EF0);
  __chkstk_darwin(v17 - 8);
  uint64_t v144 = (char *)&v126 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v143 = sub_10017DF08(&qword_100EAE6F0);
  __chkstk_darwin(v143);
  uint64_t v149 = (uint64_t)&v126 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v145 = sub_10017DF08(&qword_100EAE6F8);
  __chkstk_darwin(v145);
  uint64_t v150 = (char *)&v126 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v148 = sub_10017DF08(&qword_100EAE700);
  __chkstk_darwin(v148);
  uint64_t v159 = (uint64_t)&v126 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  uint64_t v160 = (uint64_t)&v126 - v23;
  uint64_t v24 = type metadata accessor for AccessibilityTraits();
  uint64_t v137 = *(void *)(v24 - 8);
  uint64_t v138 = v24;
  __chkstk_darwin(v24);
  uint64_t v136 = (uint64_t)&v126 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_10017DF08(&qword_100EAE708);
  __chkstk_darwin(v26 - 8);
  uint64_t v158 = (uint64_t)&v126 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28);
  uint64_t v157 = (uint64_t)&v126 - v29;
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v30 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v32 = v31;
  char v34 = v33 & 1;
  swift_beginAccess();
  sub_1005924A8();
  swift_endAccess();
  uint64_t v35 = Text.font(_:)();
  uint64_t v37 = v36;
  char v39 = v38;
  uint64_t v41 = v40;
  swift_release();
  uint64_t v42 = v32;
  uint64_t v43 = (uint64_t)v139;
  sub_100191924(v30, v42, v34);
  swift_bridgeObjectRelease();
  uint64_t v44 = static Alignment.leading.getter();
  sub_100BD7E24(v165, 0, 1, 0, 1, 0x7FF0000000000000, 0, 0, 1, 0, 1, 0, 1, v44, v45, v35, v37, v39 & 1, v41);
  uint64_t v46 = v140;
  sub_100191924(v35, v37, v39 & 1);
  swift_bridgeObjectRelease();
  memcpy(v164, v165, sizeof(v164));
  double v47 = sub_100592594();
  uint64_t v49 = v48;
  uint64_t v51 = v50;
  uint64_t v53 = v52;
  LOBYTE(v41) = static Edge.Set.all.getter();
  char v162 = 0;
  memcpy(v161, v164, 0x90uLL);
  LOBYTE(v161[9]) = v41;
  *(_DWORD *)((char *)&v161[9] + 1) = *(_DWORD *)v163;
  DWORD1(v161[9]) = *(_DWORD *)&v163[3];
  *((double *)&v161[9] + 1) = v47;
  *(void *)&v161[10] = v49;
  *((void *)&v161[10] + 1) = v51;
  *(void *)&v161[11] = v53;
  BYTE8(v161[11]) = 0;
  uint64_t v54 = v136;
  static AccessibilityTraits.isHeader.getter();
  sub_10017DF08(&qword_100E77428);
  sub_100459FF4();
  uint64_t v55 = v158;
  View.accessibilityAddTraits(_:)();
  (*(void (**)(uint64_t, uint64_t))(v137 + 8))(v54, v138);
  memcpy(v165, v161, 0xB9uLL);
  sub_10045A4EC((uint64_t)v165);
  sub_10020E72C(v55, v157, &qword_100EAE708);
  uint64_t v56 = (int *)type metadata accessor for DetailNewsComponentView();
  sub_100AAB624(v46 + v56[5], v43, (void (*)(void))type metadata accessor for DetailComponentContainerViewModel);
  sub_10020D948(v46 + v56[6], (uint64_t)v161);
  if (qword_100E62450 != -1) {
    swift_once();
  }
  swift_beginAccess();
  double v57 = sub_10058C830();
  sub_100592660();
  uint64_t v59 = v58;
  double v60 = sub_100592660();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v63 = (int *)v141;
  uint64_t v62 = (uint64_t)v142;
  uint64_t *v142 = KeyPath;
  *(unsigned char *)(v62 + 8) = 0;
  sub_1007BAA9C(v43, v62 + v63[5]);
  sub_1001262E4(v161, v62 + v63[6]);
  *(double *)(v62 + v63[7]) = v57;
  *(void *)(v62 + v63[8]) = v59;
  *(double *)(v62 + v63[9]) = v60;
  uint64_t v64 = (uint64_t)v147;
  *uint64_t v147 = xmmword_100C251C0;
  *(unsigned char *)(v64 + 16) = 2;
  swift_storeEnumTagMultiPayload();
  uint64_t v65 = (uint64_t)v144;
  sub_10048D5B8(v64, v66, v67, v68, v69, v70, v71, v72, v126, v127, v128, v129, v130, v131, v132, v133, v134, v135, v136,
    v137);
  sub_100AAB678(v64, (void (*)(void))type metadata accessor for AutomationInfo);
  sub_100AAB678(v62, (void (*)(void))type metadata accessor for DetailComponentContainerView);
  id v73 = [self quaternarySystemFillColor];
  uint64_t v74 = Color.init(_:)();
  LOBYTE(v64) = static Edge.Set.all.getter();
  uint64_t v75 = v149;
  sub_10006DF38(v65, v149, &qword_100E79EF0);
  uint64_t v76 = v75 + *(int *)(v143 + 36);
  *(void *)uint64_t v76 = v74;
  *(unsigned char *)(v76 + 8) = v64;
  sub_1001781AC(v65, &qword_100E79EF0);
  double v77 = sub_10058C830();
  uint64_t v78 = v152;
  uint64_t v79 = (char *)v152 + *(int *)(v151 + 20);
  uint64_t v80 = enum case for RoundedCornerStyle.continuous(_:);
  uint64_t v81 = type metadata accessor for RoundedCornerStyle();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v81 - 8) + 104))(v79, v80, v81);
  double *v78 = v77;
  v78[1] = v77;
  uint64_t v82 = (uint64_t)v150;
  uint64_t v83 = (uint64_t)&v150[*(int *)(v145 + 36)];
  sub_100AAB624((uint64_t)v78, v83, (void (*)(void))&type metadata accessor for RoundedRectangle);
  *(_WORD *)(v83 + *(int *)(sub_10017DF08(&qword_100E744A8) + 36)) = 256;
  sub_10006DF38(v75, v82, &qword_100EAE6F0);
  sub_100AAB678((uint64_t)v78, (void (*)(void))&type metadata accessor for RoundedRectangle);
  sub_1001781AC(v75, &qword_100EAE6F0);
  LOBYTE(v80) = static Edge.Set.horizontal.getter();
  sub_100592380();
  EdgeInsets.init(_all:)();
  uint64_t v85 = v84;
  uint64_t v87 = v86;
  uint64_t v89 = v88;
  uint64_t v91 = v90;
  uint64_t v92 = v159;
  sub_10006DF38(v82, v159, &qword_100EAE6F8);
  uint64_t v93 = v92 + *(int *)(v148 + 36);
  *(unsigned char *)uint64_t v93 = v80;
  *(void *)(v93 + 8) = v85;
  *(void *)(v93 + 16) = v87;
  *(void *)(v93 + 24) = v89;
  *(void *)(v93 + 32) = v91;
  *(unsigned char *)(v93 + 40) = 0;
  sub_1001781AC(v82, &qword_100EAE6F8);
  uint64_t v94 = v160;
  sub_10020E72C(v92, v160, &qword_100EAE700);
  uint64_t v95 = 1;
  uint64_t v96 = v153;
  uint64_t v97 = (uint64_t)v154;
  if (*(unsigned char *)(v46 + v56[7]) == 1)
  {
    uint64_t v98 = v126;
    Divider.init()();
    uint64_t v99 = v129;
    static DividerStyle<>.quaternary.getter();
    sub_100AAB6D0(&qword_100E66F38, (void (*)(uint64_t))&type metadata accessor for Divider);
    sub_100AAB6D0(&qword_100E77488, (void (*)(uint64_t))&type metadata accessor for QuaternaryDividerStyle);
    uint64_t v100 = v130;
    uint64_t v101 = v131;
    uint64_t v102 = v133;
    View.dividerStyle<A>(_:)();
    (*(void (**)(uint64_t, uint64_t))(v132 + 8))(v99, v102);
    uint64_t v103 = v98;
    uint64_t v104 = v160;
    (*(void (**)(uint64_t, uint64_t))(v128 + 8))(v103, v100);
    LOBYTE(v102) = static Edge.Set.top.getter();
    sub_10059263C();
    EdgeInsets.init(_all:)();
    uint64_t v106 = v105;
    uint64_t v108 = v107;
    uint64_t v110 = v109;
    uint64_t v112 = v111;
    uint64_t v114 = v134;
    uint64_t v113 = v135;
    uint64_t v115 = v127;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v134 + 16))(v127, v101, v135);
    uint64_t v116 = v115 + *(int *)(v96 + 36);
    *(unsigned char *)uint64_t v116 = v102;
    *(void *)(v116 + 8) = v106;
    *(void *)(v116 + 16) = v108;
    *(void *)(v116 + 24) = v110;
    *(void *)(v116 + 32) = v112;
    *(unsigned char *)(v116 + 40) = 0;
    uint64_t v117 = v113;
    uint64_t v94 = v104;
    (*(void (**)(uint64_t, uint64_t))(v114 + 8))(v101, v117);
    sub_10020E72C(v115, v97, &qword_100E77348);
    uint64_t v95 = 0;
  }
  _s7Weather24LocationCompositionStateOwst_0(v97, v95, 1, v96);
  uint64_t v118 = v157;
  uint64_t v119 = v158;
  sub_10006DF38(v157, v158, &qword_100EAE708);
  uint64_t v120 = v94;
  uint64_t v121 = v159;
  sub_10006DF38(v120, v159, &qword_100EAE700);
  uint64_t v122 = v155;
  sub_10006DF38(v97, v155, &qword_100EA3CE8);
  uint64_t v123 = v156;
  sub_10006DF38(v119, v156, &qword_100EAE708);
  uint64_t v124 = sub_10017DF08(&qword_100EAE710);
  sub_10006DF38(v121, v123 + *(int *)(v124 + 48), &qword_100EAE700);
  sub_10006DF38(v122, v123 + *(int *)(v124 + 64), &qword_100EA3CE8);
  sub_1001781AC(v97, &qword_100EA3CE8);
  sub_1001781AC(v160, &qword_100EAE700);
  sub_1001781AC(v118, &qword_100EAE708);
  sub_1001781AC(v122, &qword_100EA3CE8);
  sub_1001781AC(v121, &qword_100EAE700);
  return sub_1001781AC(v119, &qword_100EAE708);
}

uint64_t sub_100AAB624(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  uint64_t v4 = sub_10011BFA4();
  v5(v4);
  return a2;
}

uint64_t sub_100AAB678(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_100AAB6D0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100AAB71C()
{
  unint64_t result = qword_100EAE718;
  if (!qword_100EAE718)
  {
    sub_10018C6DC(qword_100EAE720);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EAE718);
  }
  return result;
}

uint64_t type metadata accessor for NoAqiNewsContentView()
{
  return sub_100109098();
}

uint64_t sub_100AAB788()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100AAB7CC@<X0>(uint64_t a1@<X0>, __int16 a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v57 = a7;
  uint64_t v58 = a6;
  uint64_t v45 = a4;
  uint64_t v52 = a3;
  v70[1] = a5;
  v70[2] = a5;
  v70[3] = a5;
  int v9 = a2;
  unsigned int v10 = a2 & 0x100;
  v70[4] = a5;
  v70[5] = a5;
  v70[6] = a5;
  v70[7] = a5;
  sub_100179D2C();
  uint64_t v50 = sub_10017F7C0();
  uint64_t v56 = type metadata accessor for Group();
  sub_100179C0C();
  uint64_t v53 = v11;
  __chkstk_darwin(v12);
  sub_100162EF8();
  uint64_t v55 = v13;
  __chkstk_darwin(v14);
  uint64_t v54 = (uint64_t)&v41 - v15;
  v70[0] = a5;
  v70[1] = type metadata accessor for Optional();
  v70[2] = a5;
  v70[3] = a5;
  v70[4] = a5;
  v70[5] = a5;
  sub_100179D2C();
  sub_10017F7C0();
  uint64_t v51 = type metadata accessor for Group();
  sub_100179C0C();
  uint64_t v49 = v16;
  __chkstk_darwin(v17);
  sub_100162EF8();
  uint64_t v59 = v18;
  __chkstk_darwin(v19);
  uint64_t v60 = (uint64_t)&v41 - v20;
  if (v9)
  {
    if (v9 == 1)
    {
      if (v10)
      {
        uint64_t v21 = &unk_100EB5770;
        goto LABEL_11;
      }
    }
    else if (v10)
    {
      uint64_t v21 = &unk_100EB5B00;
      goto LABEL_11;
    }
    uint64_t v21 = &unk_100EB5938;
    goto LABEL_11;
  }
  if (v10) {
    uint64_t v21 = &unk_100EB53E0;
  }
  else {
    uint64_t v21 = &unk_100EB55A8;
  }
LABEL_11:
  memcpy(v70, v21, sizeof(v70));
  uint64_t v22 = memcpy(v69, v70, sizeof(v69));
  __chkstk_darwin(v22);
  uint64_t v23 = v58;
  *(&v41 - 8) = a5;
  *(&v41 - 7) = v23;
  *(&v41 - 6) = a1;
  *((unsigned char *)&v41 - 40) = v9;
  uint64_t v44 = a1;
  int v42 = v9;
  unsigned int v43 = v10 >> 8;
  *((unsigned char *)&v41 - 39) = BYTE1(v10);
  uint64_t v24 = v45;
  *(&v41 - 4) = v52;
  *(&v41 - 3) = v24;
  *(&v41 - 2) = (uint64_t)v69;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v26 = v59;
  Group<A>.init(content:)();
  uint64_t v68 = WitnessTable;
  uint64_t v27 = v51;
  uint64_t v46 = swift_getWitnessTable();
  sub_100121584(v26, v27, v60);
  uint64_t v28 = v49;
  double v47 = *(uint64_t (**)(uint64_t, uint64_t))(v49 + 8);
  uint64_t v48 = v49 + 8;
  uint64_t v29 = v47(v26, v27);
  __chkstk_darwin(v29);
  uint64_t v30 = v58;
  *(&v41 - 8) = a5;
  *(&v41 - 7) = v30;
  *(&v41 - 6) = v44;
  *((unsigned char *)&v41 - 40) = v42;
  *((unsigned char *)&v41 - 39) = v43;
  *(&v41 - 4) = v31;
  *(&v41 - 3) = v24;
  *(&v41 - 2) = (uint64_t)v69;
  uint64_t v32 = swift_getWitnessTable();
  uint64_t v33 = v55;
  Group<A>.init(content:)();
  uint64_t v67 = v32;
  uint64_t v34 = v56;
  uint64_t v58 = swift_getWitnessTable();
  uint64_t v35 = v54;
  sub_100121584(v33, v34, v54);
  uint64_t v36 = v53;
  uint64_t v37 = *(void (**)(void))(v53 + 8);
  sub_10017C768();
  v37();
  uint64_t v38 = v59;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v28 + 16))(v59, v60, v27);
  uint64_t v65 = v38;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v36 + 16))(v33, v35, v34);
  uint64_t v66 = v33;
  uint64_t v63 = v27;
  uint64_t v64 = v34;
  uint64_t v61 = v46;
  uint64_t v62 = v58;
  sub_1006E9080();
  sub_10017C768();
  v37();
  char v39 = v47;
  v47(v60, v27);
  sub_10017C768();
  v37();
  return v39(v38, v27);
}

uint64_t sub_100AABC94@<X0>(uint64_t a1@<X0>, void (*a2)(char *, uint64_t, uint64_t, uint64_t, uint64_t)@<X2>, uint64_t a3@<X3>, void *a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X8>)
{
  uint64_t v100 = a6;
  uint64_t v108 = a2;
  uint64_t v88 = a7;
  uint64_t v11 = sub_10017DF08(&qword_100E64E80);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v84 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v105 = type metadata accessor for Optional();
  uint64_t v98 = *(void *)(v105 - 8);
  __chkstk_darwin(v105);
  uint64_t v104 = (char *)&v84 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v103 = (char *)&v84 - v16;
  uint64_t v86 = type metadata accessor for LocationComponentContainerViewModel();
  __chkstk_darwin(v86);
  uint64_t v85 = (uint64_t)&v84 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v20 = (char *)&v84 - v19;
  uint64_t v21 = *(void *)(a5 - 8);
  __chkstk_darwin(v22);
  uint64_t v97 = (char *)&v84 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  uint64_t v96 = (char *)&v84 - v25;
  __chkstk_darwin(v26);
  uint64_t v95 = (char *)&v84 - v27;
  __chkstk_darwin(v28);
  uint64_t v93 = (char *)&v84 - v29;
  __chkstk_darwin(v30);
  uint64_t v94 = (char *)&v84 - v31;
  __chkstk_darwin(v32);
  uint64_t v92 = (char *)&v84 - v33;
  __chkstk_darwin(v34);
  uint64_t v101 = (char *)&v84 - v35;
  __chkstk_darwin(v36);
  uint64_t v107 = (char *)&v84 - v37;
  __chkstk_darwin(v38);
  uint64_t v40 = (char *)&v84 - v39;
  __chkstk_darwin(v41);
  unsigned int v43 = (char *)&v84 - v42;
  sub_1001F3734(a1 + OBJC_IVAR____TtCV7Weather16NoAqiNewsContent8_Storage_newsArticle, (uint64_t)v20);
  uint64_t v44 = a4[29];
  uint64_t v45 = a4[30];
  uint64_t v46 = a4[31];
  uint64_t v47 = a4[32];
  uint64_t v89 = a3;
  v108(v20, v44, v45, v46, v47);
  uint64_t v48 = (uint64_t)v20;
  sub_1001F2B74((uint64_t)v20);
  uint64_t v91 = v43;
  sub_100121584((uint64_t)v40, a5, (uint64_t)v43);
  uint64_t v87 = v21;
  uint64_t v49 = *(void (**)(uint64_t, uint64_t))(v21 + 8);
  uint64_t v106 = v40;
  uint64_t v99 = v21 + 8;
  uint64_t v90 = v49;
  v49((uint64_t)v40, a5);
  uint64_t v102 = a1;
  uint64_t v50 = a1 + OBJC_IVAR____TtCV7Weather16NoAqiNewsContent8_Storage_map;
  swift_beginAccess();
  sub_10027A764(v50, (uint64_t)v13);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v13, 1, v86) == 1)
  {
    sub_10027A7CC((uint64_t)v13);
  }
  else
  {
    uint64_t v51 = v85;
    sub_10027A82C((uint64_t)v13, v85);
    sub_10027A890((uint64_t)(a4 + 20), (uint64_t)v128);
    sub_10027A890((uint64_t)v128, (uint64_t)v129);
    if (v130 != 1)
    {
      uint64_t v55 = (uint64_t)v107;
      v108((char *)v51, v129[0], v129[1], v129[2], v129[3]);
      sub_1001F2B74(v51);
      uint64_t v56 = (uint64_t)v106;
      sub_100121584(v55, a5, (uint64_t)v106);
      uint64_t v57 = v90;
      uint64_t v48 = (uint64_t)v20;
      v90(v55, a5);
      uint64_t v58 = (uint64_t)v104;
      sub_100121584(v56, a5, (uint64_t)v104);
      v57(v56, a5);
      _s7Weather24LocationCompositionStateOwst_0(v58, 0, 1, a5);
      sub_1000CA354();
      uint64_t v59 = *(void (**)(uint64_t, uint64_t))(v98 + 8);
      uint64_t v86 = (v98 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
      v59(v58, v105);
      goto LABEL_7;
    }
    sub_1001F2B74(v51);
  }
  uint64_t v52 = (uint64_t)v104;
  uint64_t v53 = v105;
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v104, 1, 1, a5);
  sub_1000CA354();
  uint64_t v54 = *(void (**)(uint64_t, uint64_t))(v98 + 8);
  uint64_t v86 = (v98 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v54(v52, v53);
LABEL_7:
  uint64_t v60 = v102;
  sub_1001F3734(*(void *)(v102 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_hourlyForecast, v48);
  uint64_t v61 = (uint64_t)v107;
  v108((char *)v48, a4[12], a4[13], a4[14], a4[15]);
  sub_1001F2B74(v48);
  sub_100121584(v61, a5, (uint64_t)v106);
  uint64_t v62 = v90;
  v90(v61, a5);
  sub_1001F3734(*(void *)(v60 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_dailyForecast, v48);
  uint64_t v63 = (uint64_t)v101;
  uint64_t v64 = v108;
  v108((char *)v48, a4[4], a4[5], a4[6], a4[7]);
  sub_1001F2B74(v48);
  sub_100121584(v63, a5, v61);
  v62(v63, a5);
  sub_1001F3734(*(void *)(v102 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_uvIndex, v48);
  uint64_t v65 = (uint64_t)v92;
  v64((char *)v48, a4[45], a4[46], a4[47], a4[48]);
  sub_1001F2B74(v48);
  uint64_t v66 = v63;
  uint64_t v67 = v100;
  sub_100121584(v65, a5, v66);
  v62(v65, a5);
  sub_1001F3734(*(void *)(v102 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_sunriseSunset, v48);
  uint64_t v68 = a4[41];
  uint64_t v69 = a4[42];
  uint64_t v70 = a4[43];
  uint64_t v71 = a4[44];
  uint64_t v72 = (uint64_t)v94;
  v108((char *)v48, v68, v69, v70, v71);
  sub_1001F2B74(v48);
  sub_100121584(v72, a5, v65);
  v62(v72, a5);
  id v73 = *(void (**)(void))(v87 + 16);
  ((void (*)(uint64_t, char *, uint64_t))v73)(v72, v91, a5);
  uint64_t v122 = v72;
  uint64_t v74 = v98 + 16;
  uint64_t v75 = (uint64_t)v104;
  (*(void (**)(char *, char *, uint64_t))(v98 + 16))(v104, v103, v105);
  uint64_t v123 = v75;
  uint64_t v76 = v93;
  v73();
  uint64_t v124 = v76;
  double v77 = v95;
  v73();
  uint64_t v125 = v77;
  uint64_t v78 = v96;
  ((void (*)(char *, char *, uint64_t))v73)(v96, v101, a5);
  uint64_t v126 = v78;
  uint64_t v79 = v97;
  uint64_t v80 = v92;
  ((void (*)(char *, char *, uint64_t))v73)(v97, v92, a5);
  uint64_t v127 = v79;
  uint64_t v81 = v105;
  uint64_t v116 = a5;
  uint64_t v117 = v105;
  uint64_t v118 = a5;
  uint64_t v119 = a5;
  uint64_t v120 = a5;
  uint64_t v121 = a5;
  uint64_t v109 = v67;
  uint64_t v110 = v67;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v112 = v67;
  uint64_t v113 = v67;
  uint64_t v114 = v67;
  uint64_t v115 = v67;
  sub_1006E9080();
  v62((uint64_t)v80, a5);
  v62((uint64_t)v101, a5);
  v62((uint64_t)v107, a5);
  v62((uint64_t)v106, a5);
  uint64_t v82 = *(void (**)(char *, uint64_t))(v74 - 8);
  v82(v103, v81);
  v62((uint64_t)v91, a5);
  v62((uint64_t)v97, a5);
  v62((uint64_t)v96, a5);
  v62((uint64_t)v95, a5);
  v62((uint64_t)v93, a5);
  v82(v104, v81);
  return ((uint64_t (*)(char *, uint64_t))v62)(v94, a5);
}

uint64_t sub_100AAC628@<X0>(uint64_t a1@<X0>, void (*a2)(char *, uint64_t, uint64_t, uint64_t, uint64_t)@<X2>, uint64_t *a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X6>, uint64_t a6@<X8>)
{
  uint64_t v102 = a5;
  uint64_t v84 = a6;
  uint64_t v10 = type metadata accessor for LocationComponentContainerViewModel();
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v82 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v82 = *(void *)(a4 - 8);
  uint64_t v13 = v82;
  __chkstk_darwin(v14);
  uint64_t v83 = (char *)&v82 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v98 = (char *)&v82 - v17;
  __chkstk_darwin(v18);
  uint64_t v97 = (char *)&v82 - v19;
  __chkstk_darwin(v20);
  uint64_t v96 = (char *)&v82 - v21;
  __chkstk_darwin(v22);
  uint64_t v95 = (char *)&v82 - v23;
  __chkstk_darwin(v24);
  uint64_t v93 = (char *)&v82 - v25;
  __chkstk_darwin(v26);
  uint64_t v92 = (char *)&v82 - v27;
  __chkstk_darwin(v28);
  uint64_t v90 = (char *)&v82 - v29;
  __chkstk_darwin(v30);
  uint64_t v89 = (char *)&v82 - v31;
  __chkstk_darwin(v32);
  uint64_t v101 = (char *)&v82 - v33;
  __chkstk_darwin(v34);
  uint64_t v87 = (char *)&v82 - v35;
  __chkstk_darwin(v36);
  uint64_t v86 = (char *)&v82 - v37;
  __chkstk_darwin(v38);
  uint64_t v100 = (char *)&v82 - v39;
  __chkstk_darwin(v40);
  uint64_t v42 = (char *)&v82 - v41;
  __chkstk_darwin(v43);
  uint64_t v45 = (char *)&v82 - v44;
  __chkstk_darwin(v46);
  uint64_t v48 = (char *)&v82 - v47;
  uint64_t v94 = (char *)&v82 - v47;
  sub_1001F3734(*(void *)(a1 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_wind, (uint64_t)v12);
  uint64_t v49 = a3[53];
  uint64_t v50 = a3[54];
  uint64_t v51 = a3[55];
  uint64_t v52 = a3[56];
  uint64_t v99 = a2;
  a2(v12, v49, v50, v51, v52);
  sub_1001F2B74((uint64_t)v12);
  sub_100121584((uint64_t)v45, a4, (uint64_t)v48);
  uint64_t v53 = *(void (**)(char *, uint64_t))(v13 + 8);
  uint64_t v91 = v45;
  v53(v45, a4);
  sub_1001F3734(*(void *)(a1 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_precipitationTotal, (uint64_t)v12);
  a2(v12, a3[37], a3[38], a3[39], a3[40]);
  sub_1001F2B74((uint64_t)v12);
  sub_100121584((uint64_t)v42, a4, (uint64_t)v45);
  uint64_t v88 = v42;
  v53(v42, a4);
  uint64_t v85 = a1;
  sub_1001F3734(*(void *)(a1 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_feelsLike, (uint64_t)v12);
  uint64_t v54 = (uint64_t)v100;
  v99(v12, a3[8], a3[9], a3[10], a3[11]);
  sub_1001F2B74((uint64_t)v12);
  sub_100121584(v54, a4, (uint64_t)v42);
  uint64_t v55 = v54;
  v53((char *)v54, a4);
  sub_1001F3734(*(void *)(a1 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_humidity, (uint64_t)v12);
  uint64_t v56 = (uint64_t)v86;
  uint64_t v57 = v99;
  v99(v12, a3[16], a3[17], a3[18], a3[19]);
  sub_1001F2B74((uint64_t)v12);
  sub_100121584(v56, a4, v55);
  v53((char *)v56, a4);
  sub_1001F3734(*(void *)(v85 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_visibility, (uint64_t)v12);
  uint64_t v58 = (uint64_t)v87;
  v57(v12, a3[49], a3[50], a3[51], a3[52]);
  sub_1001F2B74((uint64_t)v12);
  uint64_t v59 = v58;
  sub_100121584(v58, a4, v56);
  v53((char *)v58, a4);
  uint64_t v60 = v85;
  sub_1001F3734(*(void *)(v85 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_pressure, (uint64_t)v12);
  uint64_t v61 = (uint64_t)v101;
  uint64_t v62 = v99;
  v99(v12, a3[33], a3[34], a3[35], a3[36]);
  sub_1001F2B74((uint64_t)v12);
  sub_100121584(v61, a4, v59);
  v53((char *)v61, a4);
  sub_1001F3734(*(void *)(v60 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_moon, (uint64_t)v12);
  uint64_t v63 = (uint64_t)v89;
  v62(v12, a3[25], a3[26], a3[27], a3[28]);
  sub_1001F2B74((uint64_t)v12);
  sub_100121584(v63, a4, (uint64_t)v101);
  v53((char *)v63, a4);
  sub_1001F3734(*(void *)(v60 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_averages, (uint64_t)v12);
  uint64_t v64 = *a3;
  uint64_t v65 = a3[1];
  uint64_t v66 = a3[2];
  uint64_t v67 = a3[3];
  uint64_t v68 = (uint64_t)v90;
  v62(v12, v64, v65, v66, v67);
  sub_1001F2B74((uint64_t)v12);
  sub_100121584(v68, a4, v63);
  v53((char *)v68, a4);
  uint64_t v69 = *(void (**)(uint64_t, char *, uint64_t))(v82 + 16);
  v69(v68, v94, a4);
  uint64_t v119 = v68;
  uint64_t v70 = v92;
  v69((uint64_t)v92, v91, a4);
  uint64_t v120 = v70;
  uint64_t v71 = v93;
  v69((uint64_t)v93, v88, a4);
  uint64_t v121 = v71;
  uint64_t v72 = v95;
  v69((uint64_t)v95, v100, a4);
  uint64_t v122 = v72;
  id v73 = v96;
  uint64_t v74 = v86;
  v69((uint64_t)v96, v86, a4);
  uint64_t v123 = v73;
  uint64_t v75 = v97;
  uint64_t v76 = v87;
  v69((uint64_t)v97, v87, a4);
  uint64_t v124 = v75;
  double v77 = v98;
  uint64_t v78 = (uint64_t)v101;
  v69((uint64_t)v98, v101, a4);
  uint64_t v125 = v77;
  uint64_t v79 = v83;
  uint64_t v80 = v89;
  v69((uint64_t)v83, v89, a4);
  uint64_t v126 = v79;
  uint64_t v111 = a4;
  uint64_t v112 = a4;
  uint64_t v113 = a4;
  uint64_t v114 = a4;
  uint64_t v115 = a4;
  uint64_t v116 = a4;
  uint64_t v117 = a4;
  uint64_t v118 = a4;
  uint64_t v103 = v102;
  uint64_t v104 = v102;
  uint64_t v105 = v102;
  uint64_t v106 = v102;
  uint64_t v107 = v102;
  uint64_t v108 = v102;
  uint64_t v109 = v102;
  uint64_t v110 = v102;
  sub_1006E9080();
  v53(v80, a4);
  v53((char *)v78, a4);
  v53(v76, a4);
  v53(v74, a4);
  v53(v100, a4);
  v53(v88, a4);
  v53(v91, a4);
  v53(v94, a4);
  v53(v79, a4);
  v53(v98, a4);
  v53(v97, a4);
  v53(v96, a4);
  v53(v95, a4);
  v53(v93, a4);
  v53(v92, a4);
  return ((uint64_t (*)(char *, uint64_t))v53)(v90, a4);
}

uint64_t sub_100AAD070@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if (*(unsigned char *)(v2 + 9)) {
    __int16 v3 = 256;
  }
  else {
    __int16 v3 = 0;
  }
  return sub_100AAB7CC(*(void *)v2, v3 | *(unsigned __int8 *)(v2 + 8), *(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(a1 + 16), *(void *)(a1 + 24), a2);
}

uint64_t sub_100AAD09C()
{
  return sub_100AAD0CC((uint64_t (*)(void, void, void, void, void, void, void))sub_100AABC94);
}

uint64_t sub_100AAD0B4()
{
  return sub_100AAD0CC((uint64_t (*)(void, void, void, void, void, void, void))sub_100AAC628);
}

uint64_t sub_100AAD0CC(uint64_t (*a1)(void, void, void, void, void, void, void))
{
  if (*(unsigned char *)(v1 + 41)) {
    int v2 = 256;
  }
  else {
    int v2 = 0;
  }
  return a1(*(void *)(v1 + 32), v2 | *(unsigned __int8 *)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56), *(void *)(v1 + 64), *(void *)(v1 + 16), *(void *)(v1 + 24));
}

void *sub_100AAD100(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v21 = *a2;
    *a1 = *a2;
    uint64_t v22 = (void *)(v21 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for UUID();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[6];
    uint64_t v160 = a3;
    uint64_t v161 = a2;
    *(void *)((char *)a1 + a3[5]) = *(void *)((char *)a2 + a3[5]);
    char v162 = a1;
    int v9 = (void *)((char *)a1 + v8);
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = *(void *)((char *)a2 + v8 + 8);
    *int v9 = *(void *)((char *)a2 + v8);
    v9[1] = v11;
    uint64_t v12 = *(void *)((char *)a2 + v8 + 24);
    void v9[2] = *(void *)((char *)a2 + v8 + 16);
    v9[3] = v12;
    uint64_t v13 = *(void *)((char *)a2 + v8 + 32);
    uint64_t v14 = *(void *)((char *)a2 + v8 + 40);
    v9[4] = v13;
    v9[5] = v14;
    uint64_t v15 = type metadata accessor for FeelsLikeComponentPreprocessedDataModel();
    uint64_t v16 = *(int *)(v15 + 28);
    uint64_t v17 = (void *)((char *)v9 + v16);
    uint64_t v18 = &v10[v16];
    uint64_t v19 = type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference(0);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v18, 1, v19))
    {
      uint64_t v20 = sub_10017DF08(&qword_100E63750);
      memcpy(v17, v18, *(void *)(*(void *)(v20 - 8) + 64));
    }
    else
    {
      uint64_t v23 = *((void *)v18 + 1);
      *uint64_t v17 = *(void *)v18;
      v17[1] = v23;
      uint64_t v24 = *(int *)(v19 + 20);
      uint64_t v25 = (char *)v17 + v24;
      uint64_t v26 = &v18[v24];
      uint64_t v27 = type metadata accessor for TemperatureScaleConfiguration();
      uint64_t v158 = *(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16);
      swift_bridgeObjectRetain();
      v158(v25, v26, v27);
      uint64_t v28 = (int *)type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
      *(void *)&v25[v28[5]] = *(void *)&v26[v28[5]];
      *(void *)&v25[v28[6]] = *(void *)&v26[v28[6]];
      *(void *)&v25[v28[7]] = *(void *)&v26[v28[7]];
      uint64_t v29 = v28[8];
      uint64_t v30 = &v25[v29];
      uint64_t v31 = &v26[v29];
      uint64_t v33 = *(void *)v31;
      uint64_t v32 = *((void *)v31 + 1);
      *(void *)uint64_t v30 = v33;
      *((void *)v30 + 1) = v32;
      v25[v28[9]] = v26[v28[9]];
      swift_bridgeObjectRetain();
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v17, 0, 1, v19);
    }
    uint64_t v34 = *(int *)(v15 + 32);
    uint64_t v35 = (void *)((char *)v9 + v34);
    uint64_t v36 = &v10[v34];
    uint64_t v37 = *((void *)v36 + 1);
    *uint64_t v35 = *(void *)v36;
    v35[1] = v37;
    uint64_t v38 = v160[7];
    uint64_t v39 = (char *)v162 + v38;
    uint64_t v40 = (char *)v161 + v38;
    *(void *)((char *)v162 + v38) = *(void *)((char *)v161 + v38);
    uint64_t v41 = *(int *)(type metadata accessor for HourlyForecastComponentPreprocessedDataModel() + 20);
    uint64_t v42 = &v39[v41];
    uint64_t v43 = &v40[v41];
    uint64_t v44 = type metadata accessor for WeatherDescription();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v152 = v44;
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v43, 1, v44))
    {
      uint64_t v45 = sub_10017DF08(&qword_100E63758);
      memcpy(v42, v43, *(void *)(*(void *)(v45 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v44 - 8) + 16))(v42, v43, v44);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v42, 0, 1, v44);
    }
    uint64_t v46 = v160[8];
    uint64_t v47 = (void *)((char *)v162 + v46);
    uint64_t v48 = (char *)v161 + v46;
    uint64_t v49 = *(void *)((char *)v161 + v46 + 8);
    *uint64_t v47 = *(void *)((char *)v161 + v46);
    v47[1] = v49;
    uint64_t v50 = *(void *)((char *)v161 + v46 + 24);
    void v47[2] = *(void *)((char *)v161 + v46 + 16);
    v47[3] = v50;
    uint64_t v51 = *(void *)((char *)v161 + v46 + 40);
    v47[4] = *(void *)((char *)v161 + v46 + 32);
    v47[5] = v51;
    uint64_t v52 = *(void *)((char *)v161 + v46 + 56);
    v47[6] = *(void *)((char *)v161 + v46 + 48);
    v47[7] = v52;
    uint64_t v53 = *(int *)(type metadata accessor for ListPreprocessedDataModel() + 32);
    uint64_t v54 = (char *)v47 + v53;
    uint64_t v55 = &v48[v53];
    uint64_t v56 = type metadata accessor for Date();
    uint64_t v57 = *(void (**)(char *, char *, uint64_t))(*(void *)(v56 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v156 = v57;
    uint64_t v157 = v56;
    v57(v54, v55, v56);
    uint64_t v58 = type metadata accessor for WeatherConditionBackgroundTimeData();
    uint64_t v59 = *(int *)(v58 + 20);
    uint64_t v60 = &v54[v59];
    uint64_t v61 = &v55[v59];
    uint64_t v62 = type metadata accessor for Elevation();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v61, 1, v62))
    {
      uint64_t v63 = sub_10017DF08(&qword_100E63760);
      memcpy(v60, v61, *(void *)(*(void *)(v63 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v62 - 8) + 16))(v60, v61, v62);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v60, 0, 1, v62);
    }
    uint64_t v64 = *(int *)(v58 + 24);
    uint64_t v65 = &v54[v64];
    uint64_t v66 = &v55[v64];
    uint64_t v67 = type metadata accessor for BackgroundMoonData();
    uint64_t v159 = v58;
    uint64_t v154 = v67;
    uint64_t v155 = v62;
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v66, 1, v67))
    {
      uint64_t v68 = sub_10017DF08(&qword_100E63768);
      memcpy(v65, v66, *(void *)(*(void *)(v68 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v67 - 8) + 16))(v65, v66, v67);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v65, 0, 1, v67);
    }
    uint64_t v69 = v160[9];
    uint64_t v70 = v160[10];
    uint64_t v71 = (void *)((char *)v162 + v69);
    uint64_t v72 = (void *)((char *)v161 + v69);
    uint64_t v73 = v72[1];
    *uint64_t v71 = *v72;
    v71[1] = v73;
    uint64_t v74 = v72[3];
    v71[2] = v72[2];
    v71[3] = v74;
    uint64_t v75 = v72[5];
    v71[4] = v72[4];
    v71[5] = v75;
    uint64_t v76 = v72[7];
    v71[6] = v72[6];
    v71[7] = v76;
    uint64_t v77 = v72[9];
    v71[8] = v72[8];
    v71[9] = v77;
    uint64_t v78 = v72[11];
    v71[10] = v72[10];
    v71[11] = v78;
    uint64_t v79 = v72[13];
    v71[12] = v72[12];
    v71[13] = v79;
    uint64_t v80 = (char *)v162 + v70;
    uint64_t v81 = (char *)v161 + v70;
    uint64_t v150 = *(void (**)(char *, char *, uint64_t))(*(void *)(v152 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v150(v80, v81, v152);
    uint64_t v82 = *(int *)(type metadata accessor for UVIndexComponentPreprocessedDataModel() + 20);
    uint64_t v83 = &v80[v82];
    uint64_t v84 = &v81[v82];
    uint64_t v85 = *((void *)v84 + 1);
    *(void *)uint64_t v83 = *(void *)v84;
    *((void *)v83 + 1) = v85;
    uint64_t v86 = v160[11];
    uint64_t v87 = v160[12];
    uint64_t v88 = (void *)((char *)v162 + v86);
    uint64_t v89 = (void *)((char *)v161 + v86);
    uint64_t v90 = v89[1];
    *uint64_t v88 = *v89;
    v88[1] = v90;
    uint64_t v91 = v89[3];
    v88[2] = v89[2];
    v88[3] = v91;
    uint64_t v92 = v89[5];
    v88[4] = v89[4];
    v88[5] = v92;
    uint64_t v93 = (char *)v162 + v87;
    uint64_t v94 = (char *)v161 + v87;
    uint64_t v95 = type metadata accessor for PressureTrend();
    uint64_t v96 = *(void (**)(char *, char *, uint64_t))(*(void *)(v95 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v96(v93, v94, v95);
    uint64_t v97 = (int *)type metadata accessor for PressureComponentPreprocessedDataModel();
    uint64_t v98 = v97[5];
    uint64_t v99 = &v93[v98];
    uint64_t v100 = &v94[v98];
    uint64_t v101 = *((void *)v100 + 1);
    *(void *)uint64_t v99 = *(void *)v100;
    *((void *)v99 + 1) = v101;
    uint64_t v102 = v97[6];
    uint64_t v103 = &v93[v102];
    uint64_t v104 = &v94[v102];
    uint64_t v153 = *((void *)v104 + 1);
    *(void *)uint64_t v103 = *(void *)v104;
    *((void *)v103 + 1) = v153;
    uint64_t v105 = v97[7];
    uint64_t v106 = &v93[v105];
    uint64_t v107 = &v94[v105];
    uint64_t v151 = *((void *)v107 + 1);
    *(void *)uint64_t v106 = *(void *)v107;
    *((void *)v106 + 1) = v151;
    *(void *)&v93[v97[8]] = *(void *)&v94[v97[8]];
    uint64_t v108 = v97[9];
    uint64_t v109 = &v93[v108];
    uint64_t v110 = &v94[v108];
    uint64_t v149 = *((void *)v110 + 1);
    *(void *)uint64_t v109 = *(void *)v110;
    *((void *)v109 + 1) = v149;
    uint64_t v111 = v160[13];
    uint64_t v112 = v160[14];
    uint64_t v113 = (char *)v162 + v111;
    uint64_t v114 = (char *)v161 + v111;
    uint64_t v115 = *((void *)v114 + 1);
    *(void *)uint64_t v113 = *(void *)v114;
    *((void *)v113 + 1) = v115;
    uint64_t v116 = *((void *)v114 + 3);
    *((void *)v113 + 2) = *((void *)v114 + 2);
    *((void *)v113 + 3) = v116;
    uint64_t v117 = *((void *)v114 + 5);
    *((void *)v113 + 4) = *((void *)v114 + 4);
    *((void *)v113 + 5) = v117;
    uint64_t v118 = *((void *)v114 + 7);
    *((void *)v113 + 6) = *((void *)v114 + 6);
    *((void *)v113 + 7) = v118;
    uint64_t v119 = *((void *)v114 + 9);
    *((void *)v113 + 8) = *((void *)v114 + 8);
    *((void *)v113 + 9) = v119;
    uint64_t v120 = *((void *)v114 + 11);
    *((void *)v113 + 10) = *((void *)v114 + 10);
    *((void *)v113 + 11) = v120;
    uint64_t v121 = *((void *)v114 + 13);
    *((void *)v113 + 12) = *((void *)v114 + 12);
    *((void *)v113 + 13) = v121;
    uint64_t v122 = *((void *)v114 + 15);
    *((void *)v113 + 14) = *((void *)v114 + 14);
    *((void *)v113 + 15) = v122;
    uint64_t v123 = *((void *)v114 + 17);
    *((void *)v113 + 16) = *((void *)v114 + 16);
    *((void *)v113 + 17) = v123;
    uint64_t v124 = *((void *)v114 + 19);
    *((void *)v113 + 18) = *((void *)v114 + 18);
    *((void *)v113 + 19) = v124;
    uint64_t v125 = *((void *)v114 + 21);
    *((void *)v113 + 20) = *((void *)v114 + 20);
    *((void *)v113 + 21) = v125;
    uint64_t v126 = *((void *)v114 + 23);
    *((void *)v113 + 22) = *((void *)v114 + 22);
    *((void *)v113 + 23) = v126;
    uint64_t v127 = *((void *)v114 + 25);
    *((void *)v113 + 24) = *((void *)v114 + 24);
    *((void *)v113 + 25) = v127;
    *((_OWORD *)v113 + 13) = *((_OWORD *)v114 + 13);
    *((void *)v113 + 28) = *((void *)v114 + 28);
    uint64_t v128 = (char *)v162 + v112;
    uint64_t v129 = (char *)v161 + v112;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v156(v128, v129, v157);
    uint64_t v130 = *(int *)(v159 + 20);
    uint64_t v131 = &v128[v130];
    uint64_t v132 = &v129[v130];
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v129[v130], 1, v155))
    {
      uint64_t v133 = sub_10017DF08(&qword_100E63760);
      memcpy(v131, v132, *(void *)(*(void *)(v133 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v155 - 8) + 16))(v131, v132, v155);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v131, 0, 1, v155);
    }
    uint64_t v134 = *(int *)(v159 + 24);
    uint64_t v135 = &v128[v134];
    uint64_t v136 = &v129[v134];
    uint64_t v22 = v162;
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v129[v134], 1, v154))
    {
      uint64_t v137 = sub_10017DF08(&qword_100E63768);
      memcpy(v135, v136, *(void *)(*(void *)(v137 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v154 - 8) + 16))(v135, v136, v154);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v135, 0, 1, v154);
    }
    uint64_t v138 = v160[15];
    uint64_t v139 = (void *)((char *)v162 + v138);
    uint64_t v140 = (void *)((char *)v161 + v138);
    uint64_t v141 = v140[1];
    *uint64_t v139 = *v140;
    v139[1] = v141;
    uint64_t v142 = v140[3];
    v139[2] = v140[2];
    v139[3] = v142;
    uint64_t v143 = v140[5];
    v139[4] = v140[4];
    v139[5] = v143;
    uint64_t v144 = v140[7];
    v139[6] = v140[6];
    v139[7] = v144;
    uint64_t v145 = v140[9];
    v139[8] = v140[8];
    v139[9] = v145;
    uint64_t v146 = v140[11];
    v139[10] = v140[10];
    v139[11] = v146;
    uint64_t v147 = v140[13];
    v139[12] = v140[12];
    v139[13] = v147;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v22;
}

uint64_t sub_100AADB60(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v132 = a3;
  uint64_t v7 = a3[6];
  uint64_t v8 = (void *)(a1 + v7);
  int v9 = (void *)(a2 + v7);
  *uint64_t v8 = *(void *)(a2 + v7);
  v8[1] = *(void *)(a2 + v7 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v8[2] = v9[2];
  void v8[3] = v9[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v8[4] = v9[4];
  v8[5] = v9[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = type metadata accessor for FeelsLikeComponentPreprocessedDataModel();
  uint64_t v11 = *(int *)(v10 + 28);
  uint64_t v12 = (void *)((char *)v8 + v11);
  uint64_t v13 = (void *)((char *)v9 + v11);
  uint64_t v14 = type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference(0);
  int v15 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v12, 1, v14);
  int v16 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v13, 1, v14);
  uint64_t v130 = a2;
  uint64_t v131 = a1;
  if (v15)
  {
    if (!v16)
    {
      *uint64_t v12 = *v13;
      v12[1] = v13[1];
      uint64_t v17 = *(int *)(v14 + 20);
      uint64_t v18 = (char *)v12 + v17;
      uint64_t v19 = (char *)v13 + v17;
      uint64_t v20 = type metadata accessor for TemperatureScaleConfiguration();
      uint64_t v128 = *(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16);
      swift_bridgeObjectRetain();
      uint64_t v21 = v20;
      a2 = v130;
      v128(v18, v19, v21);
      uint64_t v22 = (int *)type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
      *(void *)&v18[v22[5]] = *(void *)&v19[v22[5]];
      *(void *)&v18[v22[6]] = *(void *)&v19[v22[6]];
      *(void *)&v18[v22[7]] = *(void *)&v19[v22[7]];
      uint64_t v23 = v22[8];
      uint64_t v24 = &v18[v23];
      uint64_t v25 = &v19[v23];
      *(void *)uint64_t v24 = *(void *)v25;
      *((void *)v24 + 1) = *((void *)v25 + 1);
      v18[v22[9]] = v19[v22[9]];
      swift_bridgeObjectRetain();
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v12, 0, 1, v14);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v16)
  {
    sub_100AB1E9C((uint64_t)v12, (void (*)(void))type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference);
LABEL_6:
    uint64_t v26 = sub_10017DF08(&qword_100E63750);
    memcpy(v12, v13, *(void *)(*(void *)(v26 - 8) + 64));
    goto LABEL_7;
  }
  *uint64_t v12 = *v13;
  v12[1] = v13[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v117 = *(int *)(v14 + 20);
  uint64_t v118 = (char *)v12 + v117;
  uint64_t v119 = (char *)v13 + v117;
  uint64_t v120 = type metadata accessor for TemperatureScaleConfiguration();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v120 - 8) + 24))(v118, v119, v120);
  uint64_t v121 = (int *)type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
  *(void *)&v118[v121[5]] = *(void *)&v119[v121[5]];
  *(void *)&v118[v121[6]] = *(void *)&v119[v121[6]];
  *(void *)&v118[v121[7]] = *(void *)&v119[v121[7]];
  uint64_t v122 = v121[8];
  uint64_t v123 = &v118[v122];
  uint64_t v124 = &v119[v122];
  *(void *)uint64_t v123 = *(void *)v124;
  *((void *)v123 + 1) = *((void *)v124 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v118[v121[9]] = v119[v121[9]];
LABEL_7:
  uint64_t v27 = *(int *)(v10 + 32);
  uint64_t v28 = (void *)((char *)v8 + v27);
  uint64_t v29 = (void *)((char *)v9 + v27);
  *uint64_t v28 = *v29;
  v28[1] = v29[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v30 = v132[7];
  uint64_t v31 = (void *)(a1 + v30);
  uint64_t v32 = a2 + v30;
  *uint64_t v31 = *(void *)(a2 + v30);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v33 = *(int *)(type metadata accessor for HourlyForecastComponentPreprocessedDataModel() + 20);
  uint64_t v34 = (char *)v31 + v33;
  uint64_t v35 = (const void *)(v32 + v33);
  uint64_t v36 = type metadata accessor for WeatherDescription();
  int v37 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v34, 1, v36);
  int v38 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v35, 1, v36);
  if (v37)
  {
    if (!v38)
    {
      (*(void (**)(char *, const void *, uint64_t))(*(void *)(v36 - 8) + 16))(v34, v35, v36);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v34, 0, 1, v36);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  uint64_t v39 = *(void *)(v36 - 8);
  if (v38)
  {
    (*(void (**)(char *, uint64_t))(v39 + 8))(v34, v36);
LABEL_12:
    uint64_t v40 = sub_10017DF08(&qword_100E63758);
    memcpy(v34, v35, *(void *)(*(void *)(v40 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, const void *, uint64_t))(v39 + 24))(v34, v35, v36);
LABEL_13:
  uint64_t v41 = v132[8];
  uint64_t v42 = (void *)(v131 + v41);
  uint64_t v43 = (void *)(a2 + v41);
  *uint64_t v42 = *(void *)(a2 + v41);
  v42[1] = *(void *)(a2 + v41 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  void v42[2] = v43[2];
  v42[3] = v43[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  _DWORD v42[4] = v43[4];
  void v42[5] = v43[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v42[6] = v43[6];
  v42[7] = v43[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v44 = *(int *)(type metadata accessor for ListPreprocessedDataModel() + 32);
  uint64_t v45 = (char *)v42 + v44;
  uint64_t v46 = (char *)v43 + v44;
  uint64_t v47 = type metadata accessor for Date();
  uint64_t v125 = *(void (**)(char *, char *))(*(void *)(v47 - 8) + 24);
  uint64_t v126 = v47;
  v125(v45, v46);
  uint64_t v48 = type metadata accessor for WeatherConditionBackgroundTimeData();
  uint64_t v49 = *(int *)(v48 + 20);
  uint64_t v50 = &v45[v49];
  uint64_t v51 = &v46[v49];
  uint64_t v52 = type metadata accessor for Elevation();
  int v53 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v50, 1, v52);
  int v54 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v51, 1, v52);
  if (v53)
  {
    if (!v54)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v52 - 8) + 16))(v50, v51, v52);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v50, 0, 1, v52);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  uint64_t v55 = *(void *)(v52 - 8);
  if (v54)
  {
    (*(void (**)(char *, uint64_t))(v55 + 8))(v50, v52);
LABEL_18:
    uint64_t v56 = sub_10017DF08(&qword_100E63760);
    memcpy(v50, v51, *(void *)(*(void *)(v56 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v55 + 24))(v50, v51, v52);
LABEL_19:
  uint64_t v57 = *(int *)(v48 + 24);
  uint64_t v58 = &v45[v57];
  uint64_t v59 = &v46[v57];
  uint64_t v60 = type metadata accessor for BackgroundMoonData();
  int v61 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v58, 1, v60);
  int v62 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v59, 1, v60);
  uint64_t v127 = v52;
  uint64_t v129 = v48;
  if (v61)
  {
    if (!v62)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v60 - 8) + 16))(v58, v59, v60);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v58, 0, 1, v60);
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  uint64_t v63 = *(void *)(v60 - 8);
  if (v62)
  {
    (*(void (**)(char *, uint64_t))(v63 + 8))(v58, v60);
LABEL_24:
    uint64_t v64 = sub_10017DF08(&qword_100E63768);
    memcpy(v58, v59, *(void *)(*(void *)(v64 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(char *, char *, uint64_t))(v63 + 24))(v58, v59, v60);
LABEL_25:
  uint64_t v65 = v132[9];
  uint64_t v66 = (void *)(v131 + v65);
  uint64_t v67 = (void *)(v130 + v65);
  *uint64_t v66 = *(void *)(v130 + v65);
  v66[1] = *(void *)(v130 + v65 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v66[2] = v67[2];
  v66[3] = v67[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v66[4] = v67[4];
  v66[5] = v67[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v66[6] = v67[6];
  v66[7] = v67[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v66[8] = v67[8];
  v66[9] = v67[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v66[10] = v67[10];
  v66[11] = v67[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v66[12] = v67[12];
  v66[13] = v67[13];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v68 = v132[10];
  uint64_t v69 = v131 + v68;
  uint64_t v70 = v130 + v68;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 24))(v131 + v68, v130 + v68, v36);
  uint64_t v71 = *(int *)(type metadata accessor for UVIndexComponentPreprocessedDataModel() + 20);
  uint64_t v72 = (void *)(v69 + v71);
  uint64_t v73 = (void *)(v70 + v71);
  *uint64_t v72 = *v73;
  v72[1] = v73[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v74 = v132[11];
  uint64_t v75 = (void *)(v131 + v74);
  uint64_t v76 = (void *)(v130 + v74);
  *uint64_t v75 = *(void *)(v130 + v74);
  v75[1] = *(void *)(v130 + v74 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v75[2] = v76[2];
  v75[3] = v76[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v75[4] = v76[4];
  v75[5] = v76[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v77 = v132[12];
  uint64_t v78 = v131 + v77;
  uint64_t v79 = v130 + v77;
  uint64_t v80 = type metadata accessor for PressureTrend();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v80 - 8) + 24))(v78, v79, v80);
  uint64_t v81 = (int *)type metadata accessor for PressureComponentPreprocessedDataModel();
  uint64_t v82 = v81[5];
  uint64_t v83 = (void *)(v78 + v82);
  uint64_t v84 = (void *)(v79 + v82);
  *uint64_t v83 = *v84;
  v83[1] = v84[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v85 = v81[6];
  uint64_t v86 = (void *)(v78 + v85);
  uint64_t v87 = (void *)(v79 + v85);
  void *v86 = *v87;
  v86[1] = v87[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v88 = v81[7];
  uint64_t v89 = (void *)(v78 + v88);
  uint64_t v90 = (void *)(v79 + v88);
  void *v89 = *v90;
  v89[1] = v90[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v78 + v81[8]) = *(void *)(v79 + v81[8]);
  uint64_t v91 = v81[9];
  uint64_t v92 = (void *)(v78 + v91);
  uint64_t v93 = (void *)(v79 + v91);
  *uint64_t v92 = *v93;
  v92[1] = v93[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v94 = v132[13];
  uint64_t v95 = (void *)(v131 + v94);
  uint64_t v96 = (void *)(v130 + v94);
  *uint64_t v95 = *(void *)(v130 + v94);
  v95[1] = *(void *)(v130 + v94 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v95[2] = v96[2];
  uint64_t v95[3] = v96[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v95[4] = v96[4];
  v95[5] = v96[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v95[6] = v96[6];
  v95[7] = v96[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v95[8] = v96[8];
  v95[9] = v96[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v95[10] = v96[10];
  v95[11] = v96[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v95[12] = v96[12];
  v95[13] = v96[13];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v95[14] = v96[14];
  v95[15] = v96[15];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v95[16] = v96[16];
  v95[17] = v96[17];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v95[18] = v96[18];
  v95[19] = v96[19];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v95[20] = v96[20];
  v95[21] = v96[21];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v95[22] = v96[22];
  v95[23] = v96[23];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v95[24] = v96[24];
  v95[25] = v96[25];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v95[26] = v96[26];
  v95[27] = v96[27];
  v95[28] = v96[28];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v97 = v132[14];
  uint64_t v98 = v131 + v97;
  uint64_t v99 = v130 + v97;
  ((void (*)(uint64_t, uint64_t, uint64_t))v125)(v131 + v97, v130 + v97, v126);
  uint64_t v100 = *(int *)(v129 + 20);
  uint64_t v101 = (void *)(v98 + v100);
  uint64_t v102 = (const void *)(v99 + v100);
  LODWORD(v81) = _s7Weather24LocationCompositionStateOwet_0(v98 + v100, 1, v127);
  int v103 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v102, 1, v127);
  if (v81)
  {
    if (!v103)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v127 - 8) + 16))(v101, v102, v127);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v101, 0, 1, v127);
      goto LABEL_31;
    }
    goto LABEL_30;
  }
  uint64_t v104 = *(void *)(v127 - 8);
  if (v103)
  {
    (*(void (**)(void *, uint64_t))(v104 + 8))(v101, v127);
LABEL_30:
    uint64_t v105 = sub_10017DF08(&qword_100E63760);
    memcpy(v101, v102, *(void *)(*(void *)(v105 - 8) + 64));
    goto LABEL_31;
  }
  (*(void (**)(void *, const void *, uint64_t))(v104 + 24))(v101, v102, v127);
LABEL_31:
  uint64_t v106 = *(int *)(v129 + 24);
  uint64_t v107 = (void *)(v98 + v106);
  uint64_t v108 = (const void *)(v99 + v106);
  int v109 = _s7Weather24LocationCompositionStateOwet_0(v98 + v106, 1, v60);
  int v110 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v108, 1, v60);
  if (!v109)
  {
    uint64_t v111 = *(void *)(v60 - 8);
    if (!v110)
    {
      (*(void (**)(void *, const void *, uint64_t))(v111 + 24))(v107, v108, v60);
      goto LABEL_37;
    }
    (*(void (**)(void *, uint64_t))(v111 + 8))(v107, v60);
    goto LABEL_36;
  }
  if (v110)
  {
LABEL_36:
    uint64_t v112 = sub_10017DF08(&qword_100E63768);
    memcpy(v107, v108, *(void *)(*(void *)(v112 - 8) + 64));
    goto LABEL_37;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(void *)(v60 - 8) + 16))(v107, v108, v60);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v107, 0, 1, v60);
LABEL_37:
  uint64_t v113 = v132[15];
  uint64_t v114 = (void *)(v131 + v113);
  uint64_t v115 = (void *)(v130 + v113);
  void *v114 = *(void *)(v130 + v113);
  v114[1] = *(void *)(v130 + v113 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v114[2] = v115[2];
  v114[3] = v115[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v114[4] = v115[4];
  v114[5] = v115[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v114[6] = v115[6];
  v114[7] = v115[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v114[8] = v115[8];
  v114[9] = v115[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v114[10] = v115[10];
  v114[11] = v115[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v114[12] = v115[12];
  v114[13] = v115[13];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return v131;
}

uint64_t sub_100AAEBAC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  uint64_t v8 = (_OWORD *)(a1 + v7);
  uint64_t v9 = a2 + v7;
  long long v10 = *(_OWORD *)(a2 + v7 + 16);
  *uint64_t v8 = *(_OWORD *)(a2 + v7);
  v8[1] = v10;
  v8[2] = *(_OWORD *)(a2 + v7 + 32);
  uint64_t v11 = type metadata accessor for FeelsLikeComponentPreprocessedDataModel();
  uint64_t v12 = *(int *)(v11 + 28);
  uint64_t v13 = (_OWORD *)((char *)v8 + v12);
  uint64_t v14 = (_OWORD *)(v9 + v12);
  uint64_t v15 = type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v14, 1, v15))
  {
    uint64_t v16 = sub_10017DF08(&qword_100E63750);
    memcpy(v13, v14, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    *uint64_t v13 = *v14;
    uint64_t v17 = *(int *)(v15 + 20);
    uint64_t v18 = (char *)v13 + v17;
    uint64_t v19 = (char *)v14 + v17;
    uint64_t v20 = type metadata accessor for TemperatureScaleConfiguration();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 32))(v18, v19, v20);
    uint64_t v21 = (int *)type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
    *(void *)&v18[v21[5]] = *(void *)&v19[v21[5]];
    *(void *)&v18[v21[6]] = *(void *)&v19[v21[6]];
    *(void *)&v18[v21[7]] = *(void *)&v19[v21[7]];
    *(_OWORD *)&v18[v21[8]] = *(_OWORD *)&v19[v21[8]];
    v18[v21[9]] = v19[v21[9]];
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v13, 0, 1, v15);
  }
  *(_OWORD *)((char *)v8 + *(int *)(v11 + 32)) = *(_OWORD *)(v9 + *(int *)(v11 + 32));
  uint64_t v22 = a3[7];
  uint64_t v23 = a1 + v22;
  uint64_t v24 = a2 + v22;
  *(void *)(a1 + v22) = *(void *)(a2 + v22);
  uint64_t v25 = *(int *)(type metadata accessor for HourlyForecastComponentPreprocessedDataModel() + 20);
  uint64_t v26 = (void *)(v23 + v25);
  uint64_t v27 = (const void *)(v24 + v25);
  uint64_t v28 = type metadata accessor for WeatherDescription();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v27, 1, v28))
  {
    uint64_t v29 = sub_10017DF08(&qword_100E63758);
    memcpy(v26, v27, *(void *)(*(void *)(v29 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v28 - 8) + 32))(v26, v27, v28);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v26, 0, 1, v28);
  }
  uint64_t v30 = a3[8];
  uint64_t v31 = (_OWORD *)(a1 + v30);
  uint64_t v32 = a2 + v30;
  long long v33 = *(_OWORD *)(a2 + v30 + 16);
  *uint64_t v31 = *(_OWORD *)(a2 + v30);
  v31[1] = v33;
  long long v34 = *(_OWORD *)(a2 + v30 + 48);
  v31[2] = *(_OWORD *)(a2 + v30 + 32);
  v31[3] = v34;
  uint64_t v35 = *(int *)(type metadata accessor for ListPreprocessedDataModel() + 32);
  uint64_t v36 = (char *)v31 + v35;
  uint64_t v37 = v32 + v35;
  uint64_t v38 = type metadata accessor for Date();
  uint64_t v76 = *(void (**)(char *, uint64_t))(*(void *)(v38 - 8) + 32);
  uint64_t v77 = v38;
  v76(v36, v37);
  uint64_t v39 = type metadata accessor for WeatherConditionBackgroundTimeData();
  uint64_t v40 = *(int *)(v39 + 20);
  uint64_t v41 = &v36[v40];
  uint64_t v42 = (const void *)(v37 + v40);
  uint64_t v43 = type metadata accessor for Elevation();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v42, 1, v43))
  {
    uint64_t v44 = sub_10017DF08(&qword_100E63760);
    memcpy(v41, v42, *(void *)(*(void *)(v44 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, const void *, uint64_t))(*(void *)(v43 - 8) + 32))(v41, v42, v43);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v41, 0, 1, v43);
  }
  uint64_t v45 = *(int *)(v39 + 24);
  uint64_t v46 = &v36[v45];
  uint64_t v47 = (const void *)(v37 + v45);
  uint64_t v48 = type metadata accessor for BackgroundMoonData();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v47, 1, v48))
  {
    uint64_t v49 = sub_10017DF08(&qword_100E63768);
    memcpy(v46, v47, *(void *)(*(void *)(v49 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, const void *, uint64_t))(*(void *)(v48 - 8) + 32))(v46, v47, v48);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v46, 0, 1, v48);
  }
  memcpy((void *)(a1 + a3[9]), (const void *)(a2 + a3[9]), 0x70uLL);
  uint64_t v50 = a3[10];
  uint64_t v51 = a1 + v50;
  uint64_t v52 = a2 + v50;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 32))(a1 + v50, a2 + v50, v28);
  uint64_t v53 = type metadata accessor for UVIndexComponentPreprocessedDataModel();
  *(_OWORD *)(v51 + *(int *)(v53 + 20)) = *(_OWORD *)(v52 + *(int *)(v53 + 20));
  uint64_t v54 = a3[11];
  uint64_t v55 = a3[12];
  uint64_t v56 = (_OWORD *)(a1 + v54);
  uint64_t v57 = (long long *)(a2 + v54);
  long long v58 = v57[2];
  long long v59 = *v57;
  v56[1] = v57[1];
  v56[2] = v58;
  *uint64_t v56 = v59;
  uint64_t v60 = a1 + v55;
  uint64_t v61 = a2 + v55;
  uint64_t v62 = type metadata accessor for PressureTrend();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v62 - 8) + 32))(v60, v61, v62);
  uint64_t v63 = (int *)type metadata accessor for PressureComponentPreprocessedDataModel();
  *(_OWORD *)(v60 + v63[5]) = *(_OWORD *)(v61 + v63[5]);
  *(_OWORD *)(v60 + v63[6]) = *(_OWORD *)(v61 + v63[6]);
  *(_OWORD *)(v60 + v63[7]) = *(_OWORD *)(v61 + v63[7]);
  *(void *)(v60 + v63[8]) = *(void *)(v61 + v63[8]);
  *(_OWORD *)(v60 + v63[9]) = *(_OWORD *)(v61 + v63[9]);
  memcpy((void *)(a1 + a3[13]), (const void *)(a2 + a3[13]), 0xE8uLL);
  uint64_t v64 = a3[14];
  uint64_t v65 = a1 + v64;
  uint64_t v66 = a2 + v64;
  ((void (*)(uint64_t, uint64_t, uint64_t))v76)(a1 + v64, a2 + v64, v77);
  uint64_t v67 = *(int *)(v39 + 20);
  uint64_t v68 = (void *)(v65 + v67);
  uint64_t v69 = (const void *)(v66 + v67);
  if (_s7Weather24LocationCompositionStateOwet_0(v66 + v67, 1, v43))
  {
    uint64_t v70 = sub_10017DF08(&qword_100E63760);
    memcpy(v68, v69, *(void *)(*(void *)(v70 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v43 - 8) + 32))(v68, v69, v43);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v68, 0, 1, v43);
  }
  uint64_t v71 = *(int *)(v39 + 24);
  uint64_t v72 = (void *)(v65 + v71);
  uint64_t v73 = (const void *)(v66 + v71);
  if (_s7Weather24LocationCompositionStateOwet_0(v66 + v71, 1, v48))
  {
    uint64_t v74 = sub_10017DF08(&qword_100E63768);
    memcpy(v72, v73, *(void *)(*(void *)(v74 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v48 - 8) + 32))(v72, v73, v48);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v72, 0, 1, v48);
  }
  memcpy((void *)(a1 + a3[15]), (const void *)(a2 + a3[15]), 0x70uLL);
  return a1;
}

uint64_t sub_100AAF290(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[6];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = *(void *)(a2 + v7 + 8);
  *uint64_t v8 = *(void *)(a2 + v7);
  v8[1] = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = v9[3];
  v8[2] = v9[2];
  void v8[3] = v11;
  swift_bridgeObjectRelease();
  uint64_t v12 = v9[5];
  v8[4] = v9[4];
  v8[5] = v12;
  swift_bridgeObjectRelease();
  uint64_t v13 = type metadata accessor for FeelsLikeComponentPreprocessedDataModel();
  uint64_t v14 = *(int *)(v13 + 28);
  uint64_t v15 = (void *)((char *)v8 + v14);
  uint64_t v16 = (void *)((char *)v9 + v14);
  uint64_t v17 = type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference(0);
  int v18 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v15, 1, v17);
  int v19 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v16, 1, v17);
  if (v18)
  {
    if (!v19)
    {
      *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
      uint64_t v20 = *(int *)(v17 + 20);
      uint64_t v21 = (char *)v15 + v20;
      uint64_t v22 = (char *)v16 + v20;
      uint64_t v23 = type metadata accessor for TemperatureScaleConfiguration();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 32))(v21, v22, v23);
      uint64_t v24 = (int *)type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
      *(void *)&v21[v24[5]] = *(void *)&v22[v24[5]];
      *(void *)&v21[v24[6]] = *(void *)&v22[v24[6]];
      *(void *)&v21[v24[7]] = *(void *)&v22[v24[7]];
      *(_OWORD *)&v21[v24[8]] = *(_OWORD *)&v22[v24[8]];
      v21[v24[9]] = v22[v24[9]];
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v15, 0, 1, v17);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v19)
  {
    sub_100AB1E9C((uint64_t)v15, (void (*)(void))type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference);
LABEL_6:
    uint64_t v25 = sub_10017DF08(&qword_100E63750);
    memcpy(v15, v16, *(void *)(*(void *)(v25 - 8) + 64));
    goto LABEL_7;
  }
  uint64_t v161 = v16[1];
  *uint64_t v15 = *v16;
  v15[1] = v161;
  swift_bridgeObjectRelease();
  uint64_t v162 = *(int *)(v17 + 20);
  uint64_t v163 = (char *)v15 + v162;
  uint64_t v164 = (char *)v16 + v162;
  uint64_t v165 = type metadata accessor for TemperatureScaleConfiguration();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v165 - 8) + 40))(v163, v164, v165);
  uint64_t v166 = (int *)type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
  *(void *)&v163[v166[5]] = *(void *)&v164[v166[5]];
  *(void *)&v163[v166[6]] = *(void *)&v164[v166[6]];
  *(void *)&v163[v166[7]] = *(void *)&v164[v166[7]];
  uint64_t v167 = v166[8];
  uint64_t v168 = &v163[v167];
  uint64_t v169 = &v164[v167];
  uint64_t v171 = *(void *)v169;
  uint64_t v170 = *((void *)v169 + 1);
  *(void *)uint64_t v168 = v171;
  *((void *)v168 + 1) = v170;
  swift_bridgeObjectRelease();
  v163[v166[9]] = v164[v166[9]];
LABEL_7:
  uint64_t v26 = *(int *)(v13 + 32);
  uint64_t v27 = (void *)((char *)v8 + v26);
  uint64_t v28 = (void *)((char *)v9 + v26);
  uint64_t v30 = *v28;
  uint64_t v29 = v28[1];
  *uint64_t v27 = v30;
  v27[1] = v29;
  swift_bridgeObjectRelease();
  uint64_t v31 = a3[7];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  *(void *)(a1 + v31) = *(void *)(a2 + v31);
  swift_bridgeObjectRelease();
  uint64_t v34 = *(int *)(type metadata accessor for HourlyForecastComponentPreprocessedDataModel() + 20);
  uint64_t v35 = (void *)(v32 + v34);
  uint64_t v36 = (const void *)(v33 + v34);
  uint64_t v37 = type metadata accessor for WeatherDescription();
  int v38 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v35, 1, v37);
  int v39 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v36, 1, v37);
  if (v38)
  {
    if (!v39)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v37 - 8) + 32))(v35, v36, v37);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v35, 0, 1, v37);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  uint64_t v40 = *(void *)(v37 - 8);
  if (v39)
  {
    (*(void (**)(void *, uint64_t))(v40 + 8))(v35, v37);
LABEL_12:
    uint64_t v41 = sub_10017DF08(&qword_100E63758);
    memcpy(v35, v36, *(void *)(*(void *)(v41 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, const void *, uint64_t))(v40 + 40))(v35, v36, v37);
LABEL_13:
  uint64_t v42 = a3[8];
  uint64_t v43 = (void *)(a1 + v42);
  uint64_t v44 = (void *)(a2 + v42);
  uint64_t v45 = *(void *)(a2 + v42 + 8);
  *uint64_t v43 = *(void *)(a2 + v42);
  v43[1] = v45;
  swift_bridgeObjectRelease();
  uint64_t v46 = v44[3];
  v43[2] = v44[2];
  v43[3] = v46;
  swift_bridgeObjectRelease();
  uint64_t v47 = v44[5];
  v43[4] = v44[4];
  v43[5] = v47;
  swift_bridgeObjectRelease();
  uint64_t v48 = v44[7];
  v43[6] = v44[6];
  v43[7] = v48;
  swift_bridgeObjectRelease();
  uint64_t v49 = *(int *)(type metadata accessor for ListPreprocessedDataModel() + 32);
  uint64_t v50 = (char *)v43 + v49;
  uint64_t v51 = (char *)v44 + v49;
  uint64_t v52 = type metadata accessor for Date();
  char v172 = *(void (**)(char *, char *))(*(void *)(v52 - 8) + 40);
  uint64_t v173 = v52;
  v172(v50, v51);
  uint64_t v174 = type metadata accessor for WeatherConditionBackgroundTimeData();
  uint64_t v53 = *(int *)(v174 + 20);
  uint64_t v54 = &v50[v53];
  uint64_t v55 = &v51[v53];
  uint64_t v56 = type metadata accessor for Elevation();
  LODWORD(v43) = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v54, 1, v56);
  int v57 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v55, 1, v56);
  if (v43)
  {
    if (!v57)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v56 - 8) + 32))(v54, v55, v56);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v54, 0, 1, v56);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  uint64_t v58 = *(void *)(v56 - 8);
  if (v57)
  {
    (*(void (**)(char *, uint64_t))(v58 + 8))(v54, v56);
LABEL_18:
    uint64_t v59 = sub_10017DF08(&qword_100E63760);
    memcpy(v54, v55, *(void *)(*(void *)(v59 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v58 + 40))(v54, v55, v56);
LABEL_19:
  uint64_t v60 = *(int *)(v174 + 24);
  uint64_t v61 = &v50[v60];
  uint64_t v62 = &v51[v60];
  uint64_t v63 = type metadata accessor for BackgroundMoonData();
  int v64 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v61, 1, v63);
  int v65 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v62, 1, v63);
  if (v64)
  {
    if (!v65)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v63 - 8) + 32))(v61, v62, v63);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v61, 0, 1, v63);
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  uint64_t v66 = *(void *)(v63 - 8);
  if (v65)
  {
    (*(void (**)(char *, uint64_t))(v66 + 8))(v61, v63);
LABEL_24:
    uint64_t v67 = sub_10017DF08(&qword_100E63768);
    memcpy(v61, v62, *(void *)(*(void *)(v67 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(char *, char *, uint64_t))(v66 + 40))(v61, v62, v63);
LABEL_25:
  uint64_t v68 = a3[9];
  uint64_t v69 = (void *)(a1 + v68);
  uint64_t v70 = (void *)(a2 + v68);
  uint64_t v71 = *(void *)(a2 + v68 + 8);
  *uint64_t v69 = *(void *)(a2 + v68);
  v69[1] = v71;
  swift_bridgeObjectRelease();
  uint64_t v72 = v70[3];
  v69[2] = v70[2];
  v69[3] = v72;
  swift_bridgeObjectRelease();
  uint64_t v73 = v70[5];
  v69[4] = v70[4];
  v69[5] = v73;
  swift_bridgeObjectRelease();
  uint64_t v74 = v70[7];
  v69[6] = v70[6];
  v69[7] = v74;
  swift_bridgeObjectRelease();
  uint64_t v75 = v70[9];
  v69[8] = v70[8];
  v69[9] = v75;
  swift_bridgeObjectRelease();
  uint64_t v76 = v70[11];
  v69[10] = v70[10];
  v69[11] = v76;
  swift_bridgeObjectRelease();
  uint64_t v77 = v70[13];
  v69[12] = v70[12];
  v69[13] = v77;
  swift_bridgeObjectRelease();
  uint64_t v78 = a3[10];
  uint64_t v79 = a1 + v78;
  uint64_t v80 = a2 + v78;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 40))(a1 + v78, a2 + v78, v37);
  uint64_t v81 = *(int *)(type metadata accessor for UVIndexComponentPreprocessedDataModel() + 20);
  uint64_t v82 = (void *)(v79 + v81);
  uint64_t v83 = (uint64_t *)(v80 + v81);
  uint64_t v85 = *v83;
  uint64_t v84 = v83[1];
  *uint64_t v82 = v85;
  v82[1] = v84;
  swift_bridgeObjectRelease();
  uint64_t v86 = a3[11];
  uint64_t v87 = (void *)(a1 + v86);
  uint64_t v88 = (void *)(a2 + v86);
  uint64_t v89 = *(void *)(a2 + v86 + 8);
  *uint64_t v87 = *(void *)(a2 + v86);
  v87[1] = v89;
  swift_bridgeObjectRelease();
  uint64_t v90 = v88[3];
  v87[2] = v88[2];
  v87[3] = v90;
  swift_bridgeObjectRelease();
  uint64_t v91 = v88[5];
  v87[4] = v88[4];
  v87[5] = v91;
  swift_bridgeObjectRelease();
  uint64_t v92 = a3[12];
  uint64_t v93 = a1 + v92;
  uint64_t v94 = a2 + v92;
  uint64_t v95 = type metadata accessor for PressureTrend();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v95 - 8) + 40))(v93, v94, v95);
  uint64_t v96 = (int *)type metadata accessor for PressureComponentPreprocessedDataModel();
  uint64_t v97 = v96[5];
  uint64_t v98 = (void *)(v93 + v97);
  uint64_t v99 = (uint64_t *)(v94 + v97);
  uint64_t v101 = *v99;
  uint64_t v100 = v99[1];
  *uint64_t v98 = v101;
  v98[1] = v100;
  swift_bridgeObjectRelease();
  uint64_t v102 = v96[6];
  int v103 = (void *)(v93 + v102);
  uint64_t v104 = (uint64_t *)(v94 + v102);
  uint64_t v106 = *v104;
  uint64_t v105 = v104[1];
  *int v103 = v106;
  v103[1] = v105;
  swift_bridgeObjectRelease();
  uint64_t v107 = v96[7];
  uint64_t v108 = (void *)(v93 + v107);
  int v109 = (uint64_t *)(v94 + v107);
  uint64_t v111 = *v109;
  uint64_t v110 = v109[1];
  *uint64_t v108 = v111;
  v108[1] = v110;
  swift_bridgeObjectRelease();
  *(void *)(v93 + v96[8]) = *(void *)(v94 + v96[8]);
  uint64_t v112 = v96[9];
  uint64_t v113 = (void *)(v93 + v112);
  uint64_t v114 = (uint64_t *)(v94 + v112);
  uint64_t v116 = *v114;
  uint64_t v115 = v114[1];
  void *v113 = v116;
  v113[1] = v115;
  swift_bridgeObjectRelease();
  uint64_t v117 = a3[13];
  uint64_t v118 = (void *)(a1 + v117);
  uint64_t v119 = (void *)(a2 + v117);
  uint64_t v120 = *(void *)(a2 + v117 + 8);
  *uint64_t v118 = *(void *)(a2 + v117);
  v118[1] = v120;
  swift_bridgeObjectRelease();
  uint64_t v121 = v119[3];
  v118[2] = v119[2];
  v118[3] = v121;
  swift_bridgeObjectRelease();
  uint64_t v122 = v119[5];
  v118[4] = v119[4];
  v118[5] = v122;
  swift_bridgeObjectRelease();
  uint64_t v123 = v119[7];
  v118[6] = v119[6];
  v118[7] = v123;
  swift_bridgeObjectRelease();
  uint64_t v124 = v119[9];
  v118[8] = v119[8];
  v118[9] = v124;
  swift_bridgeObjectRelease();
  uint64_t v125 = v119[11];
  v118[10] = v119[10];
  v118[11] = v125;
  swift_bridgeObjectRelease();
  uint64_t v126 = v119[13];
  v118[12] = v119[12];
  v118[13] = v126;
  swift_bridgeObjectRelease();
  uint64_t v127 = v119[15];
  v118[14] = v119[14];
  v118[15] = v127;
  swift_bridgeObjectRelease();
  uint64_t v128 = v119[17];
  v118[16] = v119[16];
  v118[17] = v128;
  swift_bridgeObjectRelease();
  uint64_t v129 = v119[19];
  v118[18] = v119[18];
  v118[19] = v129;
  swift_bridgeObjectRelease();
  uint64_t v130 = v119[21];
  v118[20] = v119[20];
  v118[21] = v130;
  swift_bridgeObjectRelease();
  uint64_t v131 = v119[23];
  v118[22] = v119[22];
  v118[23] = v131;
  swift_bridgeObjectRelease();
  uint64_t v132 = v119[25];
  v118[24] = v119[24];
  v118[25] = v132;
  swift_bridgeObjectRelease();
  v118[26] = v119[26];
  uint64_t v133 = v119[28];
  v118[27] = v119[27];
  v118[28] = v133;
  swift_bridgeObjectRelease();
  uint64_t v134 = a3[14];
  uint64_t v135 = a1 + v134;
  uint64_t v136 = a2 + v134;
  ((void (*)(uint64_t, uint64_t, uint64_t))v172)(a1 + v134, a2 + v134, v173);
  uint64_t v137 = *(int *)(v174 + 20);
  uint64_t v138 = (void *)(v135 + v137);
  uint64_t v139 = (const void *)(v136 + v137);
  LODWORD(v118) = _s7Weather24LocationCompositionStateOwet_0(v135 + v137, 1, v56);
  int v140 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v139, 1, v56);
  if (v118)
  {
    if (!v140)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v56 - 8) + 32))(v138, v139, v56);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v138, 0, 1, v56);
      goto LABEL_31;
    }
    goto LABEL_30;
  }
  uint64_t v141 = *(void *)(v56 - 8);
  if (v140)
  {
    (*(void (**)(void *, uint64_t))(v141 + 8))(v138, v56);
LABEL_30:
    uint64_t v142 = sub_10017DF08(&qword_100E63760);
    memcpy(v138, v139, *(void *)(*(void *)(v142 - 8) + 64));
    goto LABEL_31;
  }
  (*(void (**)(void *, const void *, uint64_t))(v141 + 40))(v138, v139, v56);
LABEL_31:
  uint64_t v143 = *(int *)(v174 + 24);
  uint64_t v144 = (void *)(v135 + v143);
  uint64_t v145 = (const void *)(v136 + v143);
  int v146 = _s7Weather24LocationCompositionStateOwet_0(v135 + v143, 1, v63);
  int v147 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v145, 1, v63);
  if (!v146)
  {
    uint64_t v148 = *(void *)(v63 - 8);
    if (!v147)
    {
      (*(void (**)(void *, const void *, uint64_t))(v148 + 40))(v144, v145, v63);
      goto LABEL_37;
    }
    (*(void (**)(void *, uint64_t))(v148 + 8))(v144, v63);
    goto LABEL_36;
  }
  if (v147)
  {
LABEL_36:
    uint64_t v149 = sub_10017DF08(&qword_100E63768);
    memcpy(v144, v145, *(void *)(*(void *)(v149 - 8) + 64));
    goto LABEL_37;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(void *)(v63 - 8) + 32))(v144, v145, v63);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v144, 0, 1, v63);
LABEL_37:
  uint64_t v150 = a3[15];
  uint64_t v151 = (void *)(a1 + v150);
  uint64_t v152 = (void *)(a2 + v150);
  uint64_t v153 = v152[1];
  *uint64_t v151 = *v152;
  v151[1] = v153;
  swift_bridgeObjectRelease();
  uint64_t v154 = v152[3];
  v151[2] = v152[2];
  v151[3] = v154;
  swift_bridgeObjectRelease();
  uint64_t v155 = v152[5];
  void v151[4] = v152[4];
  v151[5] = v155;
  swift_bridgeObjectRelease();
  uint64_t v156 = v152[7];
  v151[6] = v152[6];
  v151[7] = v156;
  swift_bridgeObjectRelease();
  uint64_t v157 = v152[9];
  v151[8] = v152[8];
  v151[9] = v157;
  swift_bridgeObjectRelease();
  uint64_t v158 = v152[11];
  v151[10] = v152[10];
  v151[11] = v158;
  swift_bridgeObjectRelease();
  uint64_t v159 = v152[13];
  v151[12] = v152[12];
  v151[13] = v159;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100AAFF88(uint64_t a1, uint64_t a2, int *a3)
{
  type metadata accessor for UUID();
  sub_100162F30();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1;
LABEL_19:
    return _s7Weather24LocationCompositionStateOwet_0(v9, a2, v8);
  }
  if (a2 != 0x7FFFFFFF)
  {
    type metadata accessor for FeelsLikeComponentPreprocessedDataModel();
    sub_100162F30();
    if (*(_DWORD *)(v13 + 84) == a2)
    {
      uint64_t v8 = v12;
      uint64_t v14 = a3[6];
    }
    else
    {
      type metadata accessor for HourlyForecastComponentPreprocessedDataModel();
      sub_100162F30();
      if (*(_DWORD *)(v16 + 84) == a2)
      {
        uint64_t v8 = v15;
        uint64_t v14 = a3[7];
      }
      else
      {
        type metadata accessor for ListPreprocessedDataModel();
        sub_100162F30();
        if (*(_DWORD *)(v18 + 84) == a2)
        {
          uint64_t v8 = v17;
          uint64_t v14 = a3[8];
        }
        else
        {
          type metadata accessor for UVIndexComponentPreprocessedDataModel();
          sub_100162F30();
          if (*(_DWORD *)(v20 + 84) == a2)
          {
            uint64_t v8 = v19;
            uint64_t v14 = a3[10];
          }
          else
          {
            type metadata accessor for PressureComponentPreprocessedDataModel();
            sub_100162F30();
            if (*(_DWORD *)(v22 + 84) == a2)
            {
              uint64_t v8 = v21;
              uint64_t v14 = a3[12];
            }
            else
            {
              uint64_t v8 = type metadata accessor for WeatherConditionBackgroundPreprocessedDataModel();
              uint64_t v14 = a3[14];
            }
          }
        }
      }
    }
    uint64_t v9 = a1 + v14;
    goto LABEL_19;
  }
  unint64_t v10 = *(void *)(a1 + a3[5]);
  if (v10 >= 0xFFFFFFFF) {
    LODWORD(v10) = -1;
  }
  return (v10 + 1);
}

void sub_100AB00EC(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  type metadata accessor for UUID();
  sub_100162F30();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = a1;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(void *)(a1 + a4[5]) = (a2 - 1);
      return;
    }
    type metadata accessor for FeelsLikeComponentPreprocessedDataModel();
    sub_100162F30();
    if (*(_DWORD *)(v13 + 84) == a3)
    {
      uint64_t v10 = v12;
      uint64_t v14 = a4[6];
    }
    else
    {
      type metadata accessor for HourlyForecastComponentPreprocessedDataModel();
      sub_100162F30();
      if (*(_DWORD *)(v16 + 84) == a3)
      {
        uint64_t v10 = v15;
        uint64_t v14 = a4[7];
      }
      else
      {
        type metadata accessor for ListPreprocessedDataModel();
        sub_100162F30();
        if (*(_DWORD *)(v18 + 84) == a3)
        {
          uint64_t v10 = v17;
          uint64_t v14 = a4[8];
        }
        else
        {
          type metadata accessor for UVIndexComponentPreprocessedDataModel();
          sub_100162F30();
          if (*(_DWORD *)(v20 + 84) == a3)
          {
            uint64_t v10 = v19;
            uint64_t v14 = a4[10];
          }
          else
          {
            type metadata accessor for PressureComponentPreprocessedDataModel();
            sub_100162F30();
            if (*(_DWORD *)(v22 + 84) == a3)
            {
              uint64_t v10 = v21;
              uint64_t v14 = a4[12];
            }
            else
            {
              uint64_t v10 = type metadata accessor for WeatherConditionBackgroundPreprocessedDataModel();
              uint64_t v14 = a4[14];
            }
          }
        }
      }
    }
    uint64_t v11 = a1 + v14;
  }

  _s7Weather24LocationCompositionStateOwst_0(v11, a2, a2, v10);
}

uint64_t sub_100AB024C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1684632949 && a2 == 0xE400000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x8000000100CBD5E0 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    BOOL v6 = a1 == 0x6B694C736C656566 && a2 == 0xED00006174614465;
    if (v6 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else if (a1 == 0xD000000000000012 && a2 == 0x8000000100CBD600 {
           || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    }
    {
      swift_bridgeObjectRelease();
      return 3;
    }
    else
    {
      BOOL v7 = a1 == 0x617461447473696CLL && a2 == 0xE800000000000000;
      if (v7 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 4;
      }
      else if (a1 == 0xD000000000000016 && a2 == 0x8000000100CBD620 {
             || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      }
      {
        swift_bridgeObjectRelease();
        return 5;
      }
      else
      {
        BOOL v8 = a1 == 0x447865646E497675 && a2 == 0xEB00000000617461;
        if (v8 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 6;
        }
        else
        {
          BOOL v9 = a1 == 0x696C696269736976 && a2 == 0xEE00617461447974;
          if (v9 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 7;
          }
          else
          {
            BOOL v10 = a1 == 0x6572757373657270 && a2 == 0xEC00000061746144;
            if (v10 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 8;
            }
            else
            {
              BOOL v11 = a1 == 0x61746144646E6977 && a2 == 0xE800000000000000;
              if (v11 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
              {
                swift_bridgeObjectRelease();
                return 9;
              }
              else if (a1 == 0xD00000000000001ELL && a2 == 0x8000000100CBD640 {
                     || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
              }
              {
                swift_bridgeObjectRelease();
                return 10;
              }
              else if (a1 == 0xD000000000000010 && a2 == 0x8000000100CBD660)
              {
                swift_bridgeObjectRelease();
                return 11;
              }
              else
              {
                char v12 = _stringCompareWithSmolCheck(_:_:expecting:)();
                swift_bridgeObjectRelease();
                if (v12) {
                  return 11;
                }
                else {
                  return 12;
                }
              }
            }
          }
        }
      }
    }
  }
}

uint64_t sub_100AB0748(char a1)
{
  uint64_t result = 1684632949;
  switch(a1)
  {
    case 1:
      uint64_t result = 0xD000000000000011;
      break;
    case 2:
      uint64_t result = 0x6B694C736C656566;
      break;
    case 3:
      uint64_t result = 0xD000000000000012;
      break;
    case 4:
      unsigned int v3 = 1953720684;
      goto LABEL_11;
    case 5:
      uint64_t result = 0xD000000000000016;
      break;
    case 6:
      uint64_t result = 0x447865646E497675;
      break;
    case 7:
      uint64_t result = 0x696C696269736976;
      break;
    case 8:
      uint64_t result = 0x6572757373657270;
      break;
    case 9:
      unsigned int v3 = 1684957559;
LABEL_11:
      uint64_t result = v3 | 0x6174614400000000;
      break;
    case 10:
      uint64_t result = 0xD00000000000001ELL;
      break;
    case 11:
      uint64_t result = 0xD000000000000010;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_100AB08E0(void *a1)
{
  uint64_t v4 = v1;
  uint64_t v6 = sub_10017DF08(&qword_100EAE890);
  sub_100179C0C();
  uint64_t v8 = v7;
  __chkstk_darwin(v9);
  sub_10012B938();
  sub_1001B1E64(a1, a1[3]);
  sub_100AB1D54();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  __dst[0] = 0;
  type metadata accessor for UUID();
  sub_100AB1F3C(&qword_100EAC910, (void (*)(uint64_t))&type metadata accessor for UUID);
  sub_10017EAE4();
  if (!v2)
  {
    BOOL v10 = (int *)type metadata accessor for PreprocessedWeatherData();
    *(void *)__dst = *(void *)(v4 + v10[5]);
    char v31 = 1;
    sub_100685D90();
    sub_10017EAE4();
    sub_1001A0288(2);
    type metadata accessor for FeelsLikeComponentPreprocessedDataModel();
    sub_100AB1F3C(&qword_100EA8CD0, (void (*)(uint64_t))type metadata accessor for FeelsLikeComponentPreprocessedDataModel);
    sub_10017DBAC();
    sub_1001A0288(3);
    type metadata accessor for HourlyForecastComponentPreprocessedDataModel();
    sub_100AB1F3C(&qword_100EA0C98, (void (*)(uint64_t))type metadata accessor for HourlyForecastComponentPreprocessedDataModel);
    sub_10017DBAC();
    sub_1001A0288(4);
    type metadata accessor for ListPreprocessedDataModel();
    sub_100AB1F3C(&qword_100EAE898, (void (*)(uint64_t))type metadata accessor for ListPreprocessedDataModel);
    sub_10017DBAC();
    sub_1001A35F0(*(__n128 *)(v4 + v10[9]), *(__n128 *)(v4 + v10[9] + 16));
    *(_OWORD *)(v11 - 256) = v12;
    *(_OWORD *)&__dst[48] = v13;
    *(_OWORD *)&__dst[64] = v14;
    *(_OWORD *)&__dst[80] = v15;
    *(void *)&__dst[96] = v17;
    *(void *)&__dst[104] = v16;
    char v31 = 5;
    sub_1008EE4C0();
    sub_10017EAE4();
    sub_1001A0288(6);
    type metadata accessor for UVIndexComponentPreprocessedDataModel();
    sub_100AB1F3C(&qword_100EAE8A0, (void (*)(uint64_t))type metadata accessor for UVIndexComponentPreprocessedDataModel);
    sub_10017DBAC();
    sub_1001A35F0(*(__n128 *)(v4 + v10[11]), *(__n128 *)(v4 + v10[11] + 16));
    *(void *)(v19 - 256) = v18;
    *(void *)&__dst[40] = v20;
    char v31 = 7;
    sub_1004EFF74();
    sub_10017EAE4();
    char v31 = 8;
    type metadata accessor for PressureComponentPreprocessedDataModel();
    sub_100AB1F3C(&qword_100E96738, (void (*)(uint64_t))type metadata accessor for PressureComponentPreprocessedDataModel);
    sub_10017EAE4();
    memcpy(__dst, (const void *)(v4 + v10[13]), sizeof(__dst));
    char v30 = 9;
    sub_100AB1EF0();
    sub_10017EAE4();
    sub_1001A0288(10);
    type metadata accessor for WeatherConditionBackgroundPreprocessedDataModel();
    sub_100AB1F3C(&qword_100E8C9A0, (void (*)(uint64_t))type metadata accessor for WeatherConditionBackgroundPreprocessedDataModel);
    sub_10017DBAC();
    uint64_t v21 = v4 + v10[15];
    uint64_t v22 = *(void *)(v21 + 8);
    long long v23 = *(_OWORD *)(v21 + 48);
    long long v24 = *(_OWORD *)(v21 + 64);
    uint64_t v25 = *(void *)(v21 + 80);
    uint64_t v26 = *(void *)(v21 + 88);
    *(void *)__dst = *(void *)v21;
    *(void *)&__dst[8] = v22;
    long long v27 = *(_OWORD *)(v21 + 32);
    *(_OWORD *)&__dst[16] = *(_OWORD *)(v21 + 16);
    *(_OWORD *)&__dst[32] = v27;
    *(_OWORD *)&__dst[48] = v23;
    *(_OWORD *)&__dst[64] = v24;
    *(void *)&__dst[80] = v25;
    *(void *)&__dst[88] = v26;
    *(_OWORD *)&__dst[96] = *(_OWORD *)(v21 + 96);
    char v30 = 11;
    sub_100AB1F84();
    sub_10017EAE4();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8))(v3, v6);
}

uint64_t sub_100AB0E18@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  v58[0] = a2;
  v58[1] = type metadata accessor for WeatherConditionBackgroundPreprocessedDataModel();
  sub_100162E4C();
  __chkstk_darwin(v4);
  sub_100109314();
  uint64_t v59 = v5;
  sub_100129064();
  uint64_t v60 = type metadata accessor for PressureComponentPreprocessedDataModel();
  sub_100162E4C();
  __chkstk_darwin(v6);
  sub_100109314();
  uint64_t v61 = v7;
  sub_100129064();
  uint64_t v62 = type metadata accessor for UVIndexComponentPreprocessedDataModel();
  sub_100162E4C();
  __chkstk_darwin(v8);
  sub_100109314();
  uint64_t v63 = v9;
  sub_100129064();
  uint64_t v64 = type metadata accessor for ListPreprocessedDataModel();
  sub_100162E4C();
  __chkstk_darwin(v10);
  sub_100109314();
  uint64_t v65 = v11;
  sub_100129064();
  uint64_t v67 = type metadata accessor for HourlyForecastComponentPreprocessedDataModel();
  sub_100162E4C();
  __chkstk_darwin(v12);
  sub_100109314();
  uint64_t v66 = v13;
  sub_100129064();
  type metadata accessor for FeelsLikeComponentPreprocessedDataModel();
  sub_100162E4C();
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)v58 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for UUID();
  sub_100179C0C();
  uint64_t v69 = v18;
  __chkstk_darwin(v19);
  sub_10012B938();
  uint64_t v71 = sub_10017DF08(&qword_100EAE860);
  sub_100179C0C();
  uint64_t v68 = v20;
  __chkstk_darwin(v21);
  long long v23 = (char *)v58 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v87 = (int *)type metadata accessor for PreprocessedWeatherData();
  sub_100162E4C();
  __chkstk_darwin(v24);
  sub_100109314();
  uint64_t v74 = v25;
  uint64_t v26 = a1[3];
  uint64_t v72 = (uint64_t)a1;
  sub_1001B1E64(a1, v26);
  sub_100AB1D54();
  uint64_t v70 = v23;
  uint64_t v27 = v73;
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (!v27)
  {
    LOBYTE(v86[0]) = 0;
    sub_100AB1F3C(&qword_100EAC8F0, (void (*)(uint64_t))&type metadata accessor for UUID);
    sub_1001896AC();
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    uint64_t v29 = v17;
    uint64_t v30 = v74;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v69 + 32))(v74, v2, v17);
    LOBYTE(v76) = 1;
    sub_100685C84();
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    char v31 = v87;
    *(void *)(v30 + v87[5]) = *(void *)&v86[0];
    LOBYTE(v86[0]) = 2;
    sub_100AB1F3C(&qword_100EA8C18, (void (*)(uint64_t))type metadata accessor for FeelsLikeComponentPreprocessedDataModel);
    sub_1001896AC();
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    sub_1001E71E8((uint64_t)v16, v30 + v31[6], (void (*)(void))type metadata accessor for FeelsLikeComponentPreprocessedDataModel);
    LOBYTE(v86[0]) = 3;
    sub_100AB1F3C(&qword_100EA0C70, (void (*)(uint64_t))type metadata accessor for HourlyForecastComponentPreprocessedDataModel);
    sub_1001896AC();
    uint64_t v32 = v66;
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    sub_1001E71E8(v32, v30 + v31[7], (void (*)(void))type metadata accessor for HourlyForecastComponentPreprocessedDataModel);
    LOBYTE(v86[0]) = 4;
    sub_100AB1F3C(&qword_100EAE870, (void (*)(uint64_t))type metadata accessor for ListPreprocessedDataModel);
    sub_1001896AC();
    uint64_t v33 = v65;
    sub_100184258();
    sub_1001E71E8(v33, v30 + v31[8], (void (*)(void))type metadata accessor for ListPreprocessedDataModel);
    LOBYTE(v76) = 5;
    sub_1008EDFC4();
    sub_100184258();
    long long v34 = v86[1];
    long long v35 = v86[2];
    long long v36 = v86[3];
    long long v37 = v86[4];
    long long v38 = v86[5];
    long long v39 = v86[6];
    uint64_t v40 = (_OWORD *)(v30 + v31[9]);
    *uint64_t v40 = v86[0];
    v40[1] = v34;
    v40[2] = v35;
    v40[3] = v36;
    v40[4] = v37;
    v40[5] = v38;
    v40[6] = v39;
    LOBYTE(v86[0]) = 6;
    sub_100AB1F3C(&qword_100EAE878, (void (*)(uint64_t))type metadata accessor for UVIndexComponentPreprocessedDataModel);
    sub_1001896AC();
    uint64_t v41 = v63;
    sub_100184258();
    sub_1001E71E8(v41, v30 + v31[10], (void (*)(void))type metadata accessor for UVIndexComponentPreprocessedDataModel);
    LOBYTE(v76) = 7;
    sub_1004EFE24();
    sub_100184258();
    uint64_t v67 = v29;
    long long v44 = v86[1];
    long long v45 = v86[2];
    uint64_t v46 = (_OWORD *)(v30 + v31[11]);
    *uint64_t v46 = v86[0];
    v46[1] = v44;
    v46[2] = v45;
    LOBYTE(v86[0]) = 8;
    sub_100AB1F3C(&qword_100E96728, (void (*)(uint64_t))type metadata accessor for PressureComponentPreprocessedDataModel);
    sub_1001896AC();
    uint64_t v47 = v61;
    sub_100184258();
    uint64_t v73 = 0;
    sub_1001E71E8(v47, v30 + v87[12], (void (*)(void))type metadata accessor for PressureComponentPreprocessedDataModel);
    char v85 = 9;
    sub_100AB1DA0();
    sub_100185FA8();
    uint64_t v73 = 0;
    memcpy((void *)(v74 + v87[13]), v86, 0xE8uLL);
    LOBYTE(v76) = 10;
    sub_100AB1F3C(&qword_100E8C990, (void (*)(uint64_t))type metadata accessor for WeatherConditionBackgroundPreprocessedDataModel);
    sub_100185FA8();
    uint64_t v73 = 0;
    sub_1001E71E8(v59, v74 + v87[14], (void (*)(void))type metadata accessor for WeatherConditionBackgroundPreprocessedDataModel);
    char v75 = 11;
    sub_100AB1DEC();
    sub_100185FA8();
    uint64_t v73 = 0;
    uint64_t v48 = sub_10017AF40();
    v49(v48);
    uint64_t v50 = v77;
    long long v51 = v80;
    long long v52 = v81;
    uint64_t v53 = v82;
    uint64_t v54 = v83;
    uint64_t v55 = v74;
    uint64_t v56 = v74 + v87[15];
    *(void *)uint64_t v56 = v76;
    *(void *)(v56 + 8) = v50;
    long long v57 = v79;
    *(_OWORD *)(v56 + 16) = v78;
    *(_OWORD *)(v56 + 32) = v57;
    *(_OWORD *)(v56 + 48) = v51;
    *(_OWORD *)(v56 + 64) = v52;
    *(void *)(v56 + 80) = v53;
    *(void *)(v56 + 88) = v54;
    *(_OWORD *)(v56 + 96) = v84;
    sub_100AB1E38(v55, v58[0]);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v72);
    return sub_100AB1E9C(v55, (void (*)(void))type metadata accessor for PreprocessedWeatherData);
  }
  LODWORD(v70) = 0;
  uint64_t v28 = v74;
  uint64_t v73 = v27;
  uint64_t result = _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v72);
  LODWORD(v72) = 0;
  LODWORD(v71) = 0;
  uint64_t v43 = v87;
  if (v70) {
    uint64_t result = sub_100AB1E9C(v28 + v87[10], (void (*)(void))type metadata accessor for UVIndexComponentPreprocessedDataModel);
  }
  if (v71)
  {
    memcpy(v86, (const void *)(v28 + v43[13]), 0xE8uLL);
    uint64_t result = sub_1007CC4F8((uint64_t)v86);
    if ((v72 & 1) == 0) {
      return result;
    }
    return sub_100AB1E9C(v28 + v43[14], (void (*)(void))type metadata accessor for WeatherConditionBackgroundPreprocessedDataModel);
  }
  if (v72) {
    return sub_100AB1E9C(v28 + v43[14], (void (*)(void))type metadata accessor for WeatherConditionBackgroundPreprocessedDataModel);
  }
  return result;
}